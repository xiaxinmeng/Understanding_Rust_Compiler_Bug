{"sha": "f1e639b1ac14b056a0a3ce3837959823d2611d50", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjFlNjM5YjFhYzE0YjA1NmEwYTNjZTM4Mzc5NTk4MjNkMjYxMWQ1MA==", "commit": {"author": {"name": "Neil Booth", "email": "neil@daikokuya.demon.co.uk", "date": "2002-03-29T08:43:22Z"}, "committer": {"name": "Neil Booth", "email": "neil@gcc.gnu.org", "date": "2002-03-29T08:43:22Z"}, "message": "Makefile.in (except.o): Update.\n\n\t* Makefile.in (except.o): Update.\n\t* except.c: Include langhooks.h.\n\t(init_eh): Use langhook.\n\t* langhooks-def.h (LANG_HOOKS_MAKE_TYPE,\n\tLANG_HOOKS_FOR_TYPES_INITIALIZER): New.\n\t(LANG_HOOKS_INITIALIZER): Update.\n\t* langhooks.h (lang_hooks_for_types): New.\n\t(struct lang_hooks): Add it.\n\t* tree.c (make_lang_type_fn, make_lang_type): Remove.\n\t* tree.h (make_lang_type_fn, make_lang_type): Remove.\nconfig:\n\t* alpha/alpha.c: Include langhooks.h.\n\t(alpha_build_va_list): Use langhook.\n\t* d30v/d30v.c: Include langhooks.h.\n\t(d30v_build_va_list): Use langhook.\n\t* i386/i386.c: Include langhooks.h.\n\t(ix86_build_va_list): Use langhook.\n\t* rs6000/rs6000.c (rs6000_build_va_list): Use langhook.\n\t* s390/s390.c: Include langhooks.h.\n\t(s390_build_va_list): Use langhook.\n\t* stormy16/stormy16.c: Include langhooks.h.\n\t(stormy16_build_va_list): Use langhook.\ncp:\n\t* cp-lang.c (LANG_HOOKS_MAKE_TYPE): Redefine.\n\t* cp-tree.h (cp_make_lang_type): Rename.\n\t* lex.c (cp_make_lang_type): Rename.\n\t(make_aggr_type): Update.\n\t* tree.c (init_tree): Don't set make_lang_type_fn.\n\nFrom-SVN: r51558", "tree": {"sha": "9a53112c1017a925859f832c6bbb74e053fa9453", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9a53112c1017a925859f832c6bbb74e053fa9453"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f1e639b1ac14b056a0a3ce3837959823d2611d50", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f1e639b1ac14b056a0a3ce3837959823d2611d50", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f1e639b1ac14b056a0a3ce3837959823d2611d50", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f1e639b1ac14b056a0a3ce3837959823d2611d50/comments", "author": null, "committer": null, "parents": [{"sha": "f17f93326d7d690113c87abf1532bd9f4be8301f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f17f93326d7d690113c87abf1532bd9f4be8301f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f17f93326d7d690113c87abf1532bd9f4be8301f"}], "stats": {"total": 102, "additions": 71, "deletions": 31}, "files": [{"sha": "fbed9ce4623c95553c44304294a31bd01b9d8a11", "filename": "gcc/ChangeLog", "status": "modified", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f1e639b1ac14b056a0a3ce3837959823d2611d50/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f1e639b1ac14b056a0a3ce3837959823d2611d50/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=f1e639b1ac14b056a0a3ce3837959823d2611d50", "patch": "@@ -1,3 +1,28 @@\n+2002-03-29  Neil Booth  <neil@daikokuya.demon.co.uk>\n+\n+\t* Makefile.in (except.o): Update.\n+\t* except.c: Include langhooks.h.\n+\t(init_eh): Use langhook.\n+\t* langhooks-def.h (LANG_HOOKS_MAKE_TYPE,\n+\tLANG_HOOKS_FOR_TYPES_INITIALIZER): New.\n+\t(LANG_HOOKS_INITIALIZER): Update.\n+\t* langhooks.h (lang_hooks_for_types): New.\n+\t(struct lang_hooks): Add it.\n+\t* tree.c (make_lang_type_fn, make_lang_type): Remove.\n+\t* tree.h (make_lang_type_fn, make_lang_type): Remove.\n+config:\n+\t* alpha/alpha.c: Include langhooks.h.\n+\t(alpha_build_va_list): Use langhook.\n+\t* d30v/d30v.c: Include langhooks.h.\n+\t(d30v_build_va_list): Use langhook.\n+\t* i386/i386.c: Include langhooks.h.\n+\t(ix86_build_va_list): Use langhook.\n+\t* rs6000/rs6000.c (rs6000_build_va_list): Use langhook.\n+\t* s390/s390.c: Include langhooks.h.\n+\t(s390_build_va_list): Use langhook.\n+\t* stormy16/stormy16.c: Include langhooks.h.\n+\t(stormy16_build_va_list): Use langhook.\n+\n 2002-03-29  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR c++/5964"}, {"sha": "7162b3264c2edea8e97a536f1b7a6b521ebb3d59", "filename": "gcc/Makefile.in", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f1e639b1ac14b056a0a3ce3837959823d2611d50/gcc%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f1e639b1ac14b056a0a3ce3837959823d2611d50/gcc%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FMakefile.in?ref=f1e639b1ac14b056a0a3ce3837959823d2611d50", "patch": "@@ -1384,7 +1384,7 @@ stmt.o : stmt.c $(CONFIG_H) $(SYSTEM_H) $(RTL_H) $(TREE_H) flags.h function.h  \\\n    $(LOOP_H) $(RECOG_H) toplev.h output.h varray.h $(GGC_H) $(TM_P_H) \\\n    langhooks.h\n except.o : except.c $(CONFIG_H) $(SYSTEM_H) $(RTL_H) $(TREE_H) flags.h \\\n-   except.h function.h $(EXPR_H) libfuncs.h integrate.h \\\n+   except.h function.h $(EXPR_H) libfuncs.h integrate.h langhooks.h \\\n    insn-config.h hard-reg-set.h $(BASIC_BLOCK_H) output.h \\\n    dwarf2asm.h dwarf2out.h toplev.h $(HASHTAB_H) intl.h $(GGC_H)\n expr.o : expr.c $(CONFIG_H) $(SYSTEM_H) $(RTL_H) $(TREE_H) flags.h function.h \\"}, {"sha": "4dfd5c5e346d21495f83f59de7f136beb8b656fa", "filename": "gcc/config/alpha/alpha.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f1e639b1ac14b056a0a3ce3837959823d2611d50/gcc%2Fconfig%2Falpha%2Falpha.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f1e639b1ac14b056a0a3ce3837959823d2611d50/gcc%2Fconfig%2Falpha%2Falpha.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Falpha%2Falpha.c?ref=f1e639b1ac14b056a0a3ce3837959823d2611d50", "patch": "@@ -47,6 +47,7 @@ Boston, MA 02111-1307, USA.  */\n #include \"target.h\"\n #include \"target-def.h\"\n #include \"debug.h\"\n+#include \"langhooks.h\"\n \n /* Specify which cpu to schedule for.  */\n \n@@ -5707,7 +5708,7 @@ alpha_build_va_list ()\n   if (TARGET_ABI_OPEN_VMS || TARGET_ABI_UNICOSMK)\n     return ptr_type_node;\n \n-  record = make_lang_type (RECORD_TYPE);\n+  record = (*lang_hooks.types.make_type) (RECORD_TYPE);\n   type_decl = build_decl (TYPE_DECL, get_identifier (\"__va_list_tag\"), record);\n   TREE_CHAIN (record) = type_decl;\n   TYPE_NAME (record) = type_decl;"}, {"sha": "ba4d90b9f87943927b04d6d2ae5c7a4afb86a173", "filename": "gcc/config/d30v/d30v.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f1e639b1ac14b056a0a3ce3837959823d2611d50/gcc%2Fconfig%2Fd30v%2Fd30v.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f1e639b1ac14b056a0a3ce3837959823d2611d50/gcc%2Fconfig%2Fd30v%2Fd30v.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fd30v%2Fd30v.c?ref=f1e639b1ac14b056a0a3ce3837959823d2611d50", "patch": "@@ -42,6 +42,7 @@\n #include \"ggc.h\"\n #include \"target.h\"\n #include \"target-def.h\"\n+#include \"langhooks.h\"\n \n static void d30v_print_operand_memory_reference PARAMS ((FILE *, rtx));\n static void d30v_build_long_insn PARAMS ((HOST_WIDE_INT, HOST_WIDE_INT,\n@@ -2202,7 +2203,7 @@ d30v_build_va_list ()\n   tree f_arg_ptr, f_arg_num, record, type_decl;\n   tree int_type_node;\n \n-  record = make_lang_type (RECORD_TYPE);\n+  record = (*lang_hooks.types.make_type) (RECORD_TYPE);\n   type_decl = build_decl (TYPE_DECL, get_identifier (\"__va_list_tag\"), record);\n   int_type_node = make_signed_type (INT_TYPE_SIZE);\n "}, {"sha": "95873e26cf459fd7b6cecf70d1acf4b7b19f4f84", "filename": "gcc/config/i386/i386.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f1e639b1ac14b056a0a3ce3837959823d2611d50/gcc%2Fconfig%2Fi386%2Fi386.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f1e639b1ac14b056a0a3ce3837959823d2611d50/gcc%2Fconfig%2Fi386%2Fi386.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.c?ref=f1e639b1ac14b056a0a3ce3837959823d2611d50", "patch": "@@ -42,6 +42,7 @@ Boston, MA 02111-1307, USA.  */\n #include \"ggc.h\"\n #include \"target.h\"\n #include \"target-def.h\"\n+#include \"langhooks.h\"\n \n #ifndef CHECK_STACK_LIMIT\n #define CHECK_STACK_LIMIT (-1)\n@@ -2297,7 +2298,7 @@ ix86_build_va_list ()\n   if (!TARGET_64BIT)\n     return build_pointer_type (char_type_node);\n \n-  record = make_lang_type (RECORD_TYPE);\n+  record = (*lang_hooks.types.make_type) (RECORD_TYPE);\n   type_decl = build_decl (TYPE_DECL, get_identifier (\"__va_list_tag\"), record);\n \n   f_gpr = build_decl (FIELD_DECL, get_identifier (\"gp_offset\"), "}, {"sha": "7d961643e76e969e197263d2abb1ccc1b61e6c8a", "filename": "gcc/config/rs6000/rs6000.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f1e639b1ac14b056a0a3ce3837959823d2611d50/gcc%2Fconfig%2Frs6000%2Frs6000.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f1e639b1ac14b056a0a3ce3837959823d2611d50/gcc%2Fconfig%2Frs6000%2Frs6000.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.c?ref=f1e639b1ac14b056a0a3ce3837959823d2611d50", "patch": "@@ -2980,7 +2980,7 @@ rs6000_build_va_list ()\n   if (DEFAULT_ABI != ABI_V4)\n     return build_pointer_type (char_type_node);\n \n-  record = make_lang_type (RECORD_TYPE);\n+  record = (*lang_hooks.types.make_type) (RECORD_TYPE);\n   type_decl = build_decl (TYPE_DECL, get_identifier (\"__va_list_tag\"), record);\n \n   f_gpr = build_decl (FIELD_DECL, get_identifier (\"gpr\"), "}, {"sha": "ce601f0ab48a5524cc6553fa1cf20da01f72c733", "filename": "gcc/config/s390/s390.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f1e639b1ac14b056a0a3ce3837959823d2611d50/gcc%2Fconfig%2Fs390%2Fs390.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f1e639b1ac14b056a0a3ce3837959823d2611d50/gcc%2Fconfig%2Fs390%2Fs390.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fs390%2Fs390.c?ref=f1e639b1ac14b056a0a3ce3837959823d2611d50", "patch": "@@ -44,7 +44,7 @@ Boston, MA 02111-1307, USA.  */\n #include \"target.h\"\n #include \"target-def.h\"\n #include \"debug.h\"\n-\n+#include \"langhooks.h\"\n \n static bool s390_assemble_integer PARAMS ((rtx, unsigned int, int));\n static int s390_adjust_cost PARAMS ((rtx, rtx, rtx, int));\n@@ -3420,7 +3420,7 @@ s390_build_va_list ()\n {\n   tree f_gpr, f_fpr, f_ovf, f_sav, record, type_decl;\n \n-  record = make_lang_type (RECORD_TYPE);\n+  record = (*lang_hooks.types.make_type) (RECORD_TYPE);\n \n   type_decl =\n     build_decl (TYPE_DECL, get_identifier (\"__va_list_tag\"), record);"}, {"sha": "db809d67c3f943157334c7491d443de6ee6ffeb9", "filename": "gcc/config/stormy16/stormy16.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f1e639b1ac14b056a0a3ce3837959823d2611d50/gcc%2Fconfig%2Fstormy16%2Fstormy16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f1e639b1ac14b056a0a3ce3837959823d2611d50/gcc%2Fconfig%2Fstormy16%2Fstormy16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fstormy16%2Fstormy16.c?ref=f1e639b1ac14b056a0a3ce3837959823d2611d50", "patch": "@@ -44,6 +44,7 @@ Boston, MA 02111-1307, USA.  */\n #include \"target.h\"\n #include \"target-def.h\"\n #include \"tm_p.h\"\n+#include \"langhooks.h\"\n \n static rtx emit_addhi3_postreload PARAMS ((rtx, rtx, rtx));\n static void xstormy16_asm_out_constructor PARAMS ((rtx, int));\n@@ -1140,7 +1141,7 @@ xstormy16_build_va_list ()\n {\n   tree f_1, f_2, record, type_decl;\n \n-  record = make_lang_type (RECORD_TYPE);\n+  record = (*lang_hooks.types.make_type) (RECORD_TYPE);\n   type_decl = build_decl (TYPE_DECL, get_identifier (\"__va_list_tag\"), record);\n \n   f_1 = build_decl (FIELD_DECL, get_identifier (\"base\"),"}, {"sha": "6a69a7a8b53118378b3c8d0ab1d52d899b5ab0f1", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f1e639b1ac14b056a0a3ce3837959823d2611d50/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f1e639b1ac14b056a0a3ce3837959823d2611d50/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=f1e639b1ac14b056a0a3ce3837959823d2611d50", "patch": "@@ -1,3 +1,11 @@\n+2002-03-29  Neil Booth  <neil@daikokuya.demon.co.uk>\n+\n+\t* cp-lang.c (LANG_HOOKS_MAKE_TYPE): Redefine.\n+\t* cp-tree.h (cp_make_lang_type): Rename.\n+\t* lex.c (cp_make_lang_type): Rename.\n+\t(make_aggr_type): Update.\n+\t* tree.c (init_tree): Don't set make_lang_type_fn.\n+\n 2002-03-29  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR c++/6073"}, {"sha": "a3ede8da133974c06c08fd1e992591127a0e89d6", "filename": "gcc/cp/cp-lang.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f1e639b1ac14b056a0a3ce3837959823d2611d50/gcc%2Fcp%2Fcp-lang.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f1e639b1ac14b056a0a3ce3837959823d2611d50/gcc%2Fcp%2Fcp-lang.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcp-lang.c?ref=f1e639b1ac14b056a0a3ce3837959823d2611d50", "patch": "@@ -109,6 +109,9 @@ static bool ok_to_generate_alias_set_for_type PARAMS ((tree));\n #undef LANG_HOOKS_TREE_DUMP_TYPE_QUALS_FN\n #define LANG_HOOKS_TREE_DUMP_TYPE_QUALS_FN cp_type_quals\n \n+#undef LANG_HOOKS_MAKE_TYPE\n+#define LANG_HOOKS_MAKE_TYPE cxx_make_type\n+\n /* Each front end provides its own hooks, for toplev.c.  */\n const struct lang_hooks lang_hooks = LANG_HOOKS_INITIALIZER;\n "}, {"sha": "1339fd6f173f95193bf440e514b5da78c202d629", "filename": "gcc/cp/cp-tree.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f1e639b1ac14b056a0a3ce3837959823d2611d50/gcc%2Fcp%2Fcp-tree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f1e639b1ac14b056a0a3ce3837959823d2611d50/gcc%2Fcp%2Fcp-tree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcp-tree.h?ref=f1e639b1ac14b056a0a3ce3837959823d2611d50", "patch": "@@ -3971,7 +3971,7 @@ extern tree build_lang_decl\t\t\tPARAMS ((enum tree_code, tree, tree));\n extern void retrofit_lang_decl\t\t\tPARAMS ((tree));\n extern tree copy_decl                           PARAMS ((tree));\n extern tree copy_type                           PARAMS ((tree));\n-extern tree cp_make_lang_type\t\t\tPARAMS ((enum tree_code));\n+extern tree cxx_make_type\t\t\tPARAMS ((enum tree_code));\n extern tree make_aggr_type\t\t\tPARAMS ((enum tree_code));\n extern void compiler_error\t\t\tPARAMS ((const char *, ...))\n   ATTRIBUTE_PRINTF_1;"}, {"sha": "8ab072ed07acaeb1e3fa270ed6584ae48aa15356", "filename": "gcc/cp/lex.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f1e639b1ac14b056a0a3ce3837959823d2611d50/gcc%2Fcp%2Flex.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f1e639b1ac14b056a0a3ce3837959823d2611d50/gcc%2Fcp%2Flex.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Flex.c?ref=f1e639b1ac14b056a0a3ce3837959823d2611d50", "patch": "@@ -1550,7 +1550,7 @@ copy_type (type)\n }\n \n tree\n-cp_make_lang_type (code)\n+cxx_make_type (code)\n      enum tree_code code;\n {\n   register tree t = make_node (code);\n@@ -1605,7 +1605,7 @@ tree\n make_aggr_type (code)\n      enum tree_code code;\n {\n-  tree t = cp_make_lang_type (code);\n+  tree t = cxx_make_type (code);\n \n   if (IS_AGGR_TYPE_CODE (code))\n     SET_IS_AGGR_TYPE (t, 1);"}, {"sha": "d66d3d8b8628843e052018301927bd96b2cb217c", "filename": "gcc/cp/tree.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f1e639b1ac14b056a0a3ce3837959823d2611d50/gcc%2Fcp%2Ftree.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f1e639b1ac14b056a0a3ce3837959823d2611d50/gcc%2Fcp%2Ftree.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Ftree.c?ref=f1e639b1ac14b056a0a3ce3837959823d2611d50", "patch": "@@ -2294,7 +2294,6 @@ cp_end_inlining (fn)\n void\n init_tree ()\n {\n-  make_lang_type_fn = cp_make_lang_type;\n   lang_statement_code_p = cp_statement_code_p;\n   lang_set_decl_assembler_name = mangle_decl;\n   list_hash_table = htab_create (31, list_hash, list_hash_eq, NULL);"}, {"sha": "9aa5a0a34fd487c7d19229eac732493fd597ac06", "filename": "gcc/except.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f1e639b1ac14b056a0a3ce3837959823d2611d50/gcc%2Fexcept.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f1e639b1ac14b056a0a3ce3837959823d2611d50/gcc%2Fexcept.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fexcept.c?ref=f1e639b1ac14b056a0a3ce3837959823d2611d50", "patch": "@@ -70,6 +70,7 @@ Software Foundation, 59 Temple Place - Suite 330, Boston, MA\n #include \"ggc.h\"\n #include \"tm_p.h\"\n #include \"target.h\"\n+#include \"langhooks.h\"\n \n /* Provide defaults for stuff that may not be defined when using\n    sjlj exceptions.  */\n@@ -383,7 +384,7 @@ init_eh ()\n     {\n       tree f_jbuf, f_per, f_lsda, f_prev, f_cs, f_data, tmp;\n \n-      sjlj_fc_type_node = make_lang_type (RECORD_TYPE);\n+      sjlj_fc_type_node = (*lang_hooks.types.make_type) (RECORD_TYPE);\n       ggc_add_tree_root (&sjlj_fc_type_node, 1);\n \n       f_prev = build_decl (FIELD_DECL, get_identifier (\"__prev\"),"}, {"sha": "821def7940286a53843761d42d1db919c128bbc9", "filename": "gcc/langhooks-def.h", "status": "modified", "additions": 9, "deletions": 1, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f1e639b1ac14b056a0a3ce3837959823d2611d50/gcc%2Flanghooks-def.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f1e639b1ac14b056a0a3ce3837959823d2611d50/gcc%2Flanghooks-def.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flanghooks-def.h?ref=f1e639b1ac14b056a0a3ce3837959823d2611d50", "patch": "@@ -145,6 +145,13 @@ int lhd_tree_dump_type_quals\t\t\tPARAMS ((tree));\n   LANG_HOOKS_TREE_DUMP_TYPE_QUALS_FN \\\n }\n \n+/* Types hooks.  */\n+#define LANG_HOOKS_MAKE_TYPE make_node\n+\n+#define LANG_HOOKS_FOR_TYPES_INITIALIZER { \\\n+  LANG_HOOKS_MAKE_TYPE \\\n+}\n+\n /* Declaration hooks.  */\n #define LANG_HOOKS_PUSHLEVEL\tpushlevel\n #define LANG_HOOKS_POPLEVEL\tpoplevel\n@@ -195,7 +202,8 @@ int lhd_tree_dump_type_quals\t\t\tPARAMS ((tree));\n   LANG_HOOKS_SET_YYDEBUG, \\\n   LANG_HOOKS_TREE_INLINING_INITIALIZER, \\\n   LANG_HOOKS_TREE_DUMP_INITIALIZER, \\\n-  LANG_HOOKS_DECLS \\\n+  LANG_HOOKS_DECLS, \\\n+  LANG_HOOKS_FOR_TYPES_INITIALIZER \\\n }\n \n #endif /* GCC_LANG_HOOKS_DEF_H */"}, {"sha": "88a45f969ae0d2ec5704a479dd12d95ce5a657a2", "filename": "gcc/langhooks.h", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f1e639b1ac14b056a0a3ce3837959823d2611d50/gcc%2Flanghooks.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f1e639b1ac14b056a0a3ce3837959823d2611d50/gcc%2Flanghooks.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flanghooks.h?ref=f1e639b1ac14b056a0a3ce3837959823d2611d50", "patch": "@@ -67,6 +67,13 @@ struct lang_hooks_for_tree_dump\n   int (*type_quals) PARAMS ((tree));\n };\n \n+/* Hooks related to types.  */\n+\n+struct lang_hooks_for_types\n+{\n+  tree (*make_type) PARAMS ((enum tree_code));\n+};\n+\n /* Language hooks related to decls and the symbol table.  */\n \n struct lang_hooks_for_decls\n@@ -233,6 +240,8 @@ struct lang_hooks\n \n   struct lang_hooks_for_decls decls;\n \n+  struct lang_hooks_for_types types;\n+\n   /* Whenever you add entries here, make sure you adjust langhooks-def.h\n      and langhooks.c accordingly.  */\n };"}, {"sha": "1b5bddda152a7038e3ccae3061724eec7a915914", "filename": "gcc/tree.c", "status": "modified", "additions": 0, "deletions": 15, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f1e639b1ac14b056a0a3ce3837959823d2611d50/gcc%2Ftree.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f1e639b1ac14b056a0a3ce3837959823d2611d50/gcc%2Ftree.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree.c?ref=f1e639b1ac14b056a0a3ce3837959823d2611d50", "patch": "@@ -421,21 +421,6 @@ make_node (code)\n \n   return t;\n }\n-\n-/* A front-end can reset this to an appropriate function if types need\n-   special handling.  */\n-\n-tree (*make_lang_type_fn) PARAMS ((enum tree_code)) = make_node;\n-\n-/* Return a new type (with the indicated CODE), doing whatever\n-   language-specific processing is required.  */\n-\n-tree\n-make_lang_type (code)\n-     enum tree_code code;\n-{\n-  return (*make_lang_type_fn) (code);\n-}\n \f\n /* Return a new node with the same contents as NODE except that its\n    TREE_CHAIN is zero and it has a fresh uid.  */"}, {"sha": "c40b611d018c5ecd121acb45a8b206951809ba8b", "filename": "gcc/tree.h", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f1e639b1ac14b056a0a3ce3837959823d2611d50/gcc%2Ftree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f1e639b1ac14b056a0a3ce3837959823d2611d50/gcc%2Ftree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree.h?ref=f1e639b1ac14b056a0a3ce3837959823d2611d50", "patch": "@@ -2068,8 +2068,6 @@ extern size_t tree_size\t\t\tPARAMS ((tree));\n    to zero except for a few of the common fields.  */\n \n extern tree make_node\t\t\tPARAMS ((enum tree_code));\n-extern tree make_lang_type\t\tPARAMS ((enum tree_code));\n-extern tree (*make_lang_type_fn)\t\tPARAMS ((enum tree_code));\n \n /* Make a copy of a node, with all the same contents except\n    for TREE_PERMANENT.  (The copy is permanent"}]}