{"sha": "630b1e3a187dc843958e8966345da6191226b8e2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjMwYjFlM2ExODdkYzg0Mzk1OGU4OTY2MzQ1ZGE2MTkxMjI2YjhlMg==", "commit": {"author": {"name": "Tamar Christina", "email": "tamar.christina@arm.com", "date": "2018-10-01T13:02:21Z"}, "committer": {"name": "Tamar Christina", "email": "tnfchris@gcc.gnu.org", "date": "2018-10-01T13:02:21Z"}, "message": "Allow setting of stack-clash via configure options.\n\nThis patch defines a configure option to allow the setting of the default\nguard size via configure flags when building the target.\n\nThe new flag is:\n\n * --with-stack-clash-protection-guard-size=<num>\n\nThe patch defines a new macro DEFAULT_STK_CLASH_GUARD_SIZE which targets need\nto use explicitly is they want to support this configure flag and values that\nusers may have set.\n\ngcc/\n\n\tPR target/86486\n\t* configure.ac: Add stack-clash-protection-guard-size.\n\t* doc/install.texi: Document it.\n\t* config.in (DEFAULT_STK_CLASH_GUARD_SIZE): New.\n\t* params.def: Update comment for guard-size.\n\t(PARAM_STACK_CLASH_PROTECTION_GUARD_SIZE,\n\tPARAM_STACK_CLASH_PROTECTION_PROBE_INTERVAL): Update description.\n\t* configure: Regenerate.\n\nFrom-SVN: r264752", "tree": {"sha": "57f791624217f9c1c15a4442b9b46dd9072d6f05", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/57f791624217f9c1c15a4442b9b46dd9072d6f05"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/630b1e3a187dc843958e8966345da6191226b8e2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/630b1e3a187dc843958e8966345da6191226b8e2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/630b1e3a187dc843958e8966345da6191226b8e2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/630b1e3a187dc843958e8966345da6191226b8e2/comments", "author": {"login": "TamarChristinaArm", "id": 48126768, "node_id": "MDQ6VXNlcjQ4MTI2NzY4", "avatar_url": "https://avatars.githubusercontent.com/u/48126768?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TamarChristinaArm", "html_url": "https://github.com/TamarChristinaArm", "followers_url": "https://api.github.com/users/TamarChristinaArm/followers", "following_url": "https://api.github.com/users/TamarChristinaArm/following{/other_user}", "gists_url": "https://api.github.com/users/TamarChristinaArm/gists{/gist_id}", "starred_url": "https://api.github.com/users/TamarChristinaArm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TamarChristinaArm/subscriptions", "organizations_url": "https://api.github.com/users/TamarChristinaArm/orgs", "repos_url": "https://api.github.com/users/TamarChristinaArm/repos", "events_url": "https://api.github.com/users/TamarChristinaArm/events{/privacy}", "received_events_url": "https://api.github.com/users/TamarChristinaArm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "8c6e3b2355b0cd245b0a4f802044d8fd885ea03e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8c6e3b2355b0cd245b0a4f802044d8fd885ea03e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8c6e3b2355b0cd245b0a4f802044d8fd885ea03e"}], "stats": {"total": 87, "additions": 83, "deletions": 4}, "files": [{"sha": "4d6ee32846dcc9ea0173a496a5c6657da14d8662", "filename": "gcc/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/630b1e3a187dc843958e8966345da6191226b8e2/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/630b1e3a187dc843958e8966345da6191226b8e2/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=630b1e3a187dc843958e8966345da6191226b8e2", "patch": "@@ -1,3 +1,14 @@\n+2018-10-01  Tamar Christina  <tamar.christina@arm.com>\n+\n+\tPR target/86486\n+\t* configure.ac: Add stack-clash-protection-guard-size.\n+\t* doc/install.texi: Document it.\n+\t* config.in (DEFAULT_STK_CLASH_GUARD_SIZE): New.\n+\t* params.def: Update comment for guard-size.\n+\t(PARAM_STACK_CLASH_PROTECTION_GUARD_SIZE,\n+\tPARAM_STACK_CLASH_PROTECTION_PROBE_INTERVAL): Update description.\n+\t* configure: Regenerate.\n+\n 2018-10-01  Tamar Christina  <tamar.christina@arm.com>\n \n \tPR target/86486"}, {"sha": "d7c3fbfd9b212b88ba5b5947481b89b32809fd93", "filename": "gcc/config.in", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/630b1e3a187dc843958e8966345da6191226b8e2/gcc%2Fconfig.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/630b1e3a187dc843958e8966345da6191226b8e2/gcc%2Fconfig.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig.in?ref=630b1e3a187dc843958e8966345da6191226b8e2", "patch": "@@ -55,6 +55,13 @@\n #endif\n \n \n+/* Define to larger than zero set to the default stack clash protector size as\n+   a power of two in bytes. */\n+#ifndef USED_FOR_TARGET\n+#undef DEFAULT_STK_CLASH_GUARD_SIZE\n+#endif\n+\n+\n /* Define if you want to use __cxa_atexit, rather than atexit, to register C++\n    destructors for local statics and global objects. This is essential for\n    fully standards-compliant handling of destructors, but requires"}, {"sha": "3e33a69628bd8239c29713849f217b3b1c69240c", "filename": "gcc/configure", "status": "modified", "additions": 34, "deletions": 2, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/630b1e3a187dc843958e8966345da6191226b8e2/gcc%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/630b1e3a187dc843958e8966345da6191226b8e2/gcc%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfigure?ref=630b1e3a187dc843958e8966345da6191226b8e2", "patch": "@@ -906,6 +906,7 @@ enable_valgrind_annotations\n with_stabs\n enable_multilib\n enable_multiarch\n+with_stack_clash_protection_guard_size\n enable___cxa_atexit\n enable_decimal_float\n enable_fixed_point\n@@ -1727,6 +1728,9 @@ Optional Packages:\n   --with-gnu-as           arrange to work with GNU as\n   --with-as               arrange to use the specified as (full pathname)\n   --with-stabs            arrange to use stabs instead of host debug format\n+  --with-stack-clash-protection-guard-size=size\n+                          Set the default stack clash protection guard size\n+                          for specific targets as a power of two in bytes.\n   --with-dwarf2           force the default debug format to be DWARF 2\n   --with-specs=SPECS      add SPECS to driver command-line processing\n   --with-pkgversion=PKG   Use PKG in the version string in place of \"GCC\"\n@@ -7439,6 +7443,34 @@ $as_echo \"$enable_multiarch$ma_msg_suffix\" >&6; }\n \n \n \n+# default stack clash protection guard size as power of twos in bytes.\n+# Please keep these in sync with params.def.\n+stk_clash_min=12\n+stk_clash_max=30\n+\n+# Keep the default value when the option is not used to 0, this allows us to\n+# distinguish between the cases where the user specifially set a value via\n+# configure and when the normal default value is used.\n+\n+# Check whether --with-stack-clash-protection-guard-size was given.\n+if test \"${with_stack_clash_protection_guard_size+set}\" = set; then :\n+  withval=$with_stack_clash_protection_guard_size; DEFAULT_STK_CLASH_GUARD_SIZE=\"$with_stack_clash_protection_guard_size\"\n+else\n+  DEFAULT_STK_CLASH_GUARD_SIZE=0\n+fi\n+\n+if test $DEFAULT_STK_CLASH_GUARD_SIZE -ne 0 \\\n+     && (test $DEFAULT_STK_CLASH_GUARD_SIZE -lt $stk_clash_min \\\n+\t || test $DEFAULT_STK_CLASH_GUARD_SIZE -gt $stk_clash_max); then\n+  as_fn_error \"Invalid value $DEFAULT_STK_CLASH_GUARD_SIZE for --with-stack-clash-protection-guard-size. Must be between $stk_clash_min and $stk_clash_max.\" \"$LINENO\" 5\n+fi\n+\n+\n+cat >>confdefs.h <<_ACEOF\n+#define DEFAULT_STK_CLASH_GUARD_SIZE $DEFAULT_STK_CLASH_GUARD_SIZE\n+_ACEOF\n+\n+\n # Enable __cxa_atexit for C++.\n # Check whether --enable-__cxa_atexit was given.\n if test \"${enable___cxa_atexit+set}\" = set; then :\n@@ -18463,7 +18495,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 18466 \"configure\"\n+#line 18498 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -18569,7 +18601,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 18572 \"configure\"\n+#line 18604 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H"}, {"sha": "ff6444a0f9b4615642f8669bbec6fc66e6bf8421", "filename": "gcc/configure.ac", "status": "modified", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/630b1e3a187dc843958e8966345da6191226b8e2/gcc%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/630b1e3a187dc843958e8966345da6191226b8e2/gcc%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfigure.ac?ref=630b1e3a187dc843958e8966345da6191226b8e2", "patch": "@@ -811,6 +811,29 @@ AC_MSG_RESULT($enable_multiarch$ma_msg_suffix)\n AC_SUBST(with_cpu)\n AC_SUBST(with_float)\n \n+# default stack clash protection guard size as power of twos in bytes.\n+# Please keep these in sync with params.def.\n+stk_clash_min=12\n+stk_clash_max=30\n+\n+# Keep the default value when the option is not used to 0, this allows us to\n+# distinguish between the cases where the user specifially set a value via\n+# configure and when the normal default value is used.\n+AC_ARG_WITH(stack-clash-protection-guard-size,\n+[AS_HELP_STRING([--with-stack-clash-protection-guard-size=size],\n+[Set the default stack clash protection guard size for specific targets as a power of two in bytes.])],\n+[DEFAULT_STK_CLASH_GUARD_SIZE=\"$with_stack_clash_protection_guard_size\"], [DEFAULT_STK_CLASH_GUARD_SIZE=0])\n+if test $DEFAULT_STK_CLASH_GUARD_SIZE -ne 0 \\\n+     && (test $DEFAULT_STK_CLASH_GUARD_SIZE -lt $stk_clash_min \\\n+\t || test $DEFAULT_STK_CLASH_GUARD_SIZE -gt $stk_clash_max); then\n+  AC_MSG_ERROR(m4_normalize([\n+\t\tInvalid value $DEFAULT_STK_CLASH_GUARD_SIZE for --with-stack-clash-protection-guard-size. \\\n+\t\tMust be between $stk_clash_min and $stk_clash_max.]))\n+fi\n+\n+AC_DEFINE_UNQUOTED(DEFAULT_STK_CLASH_GUARD_SIZE, $DEFAULT_STK_CLASH_GUARD_SIZE,\n+\t[Define to larger than zero set the default stack clash protector size.])\n+\n # Enable __cxa_atexit for C++.\n AC_ARG_ENABLE(__cxa_atexit,\n [AS_HELP_STRING([--enable-__cxa_atexit], [enable __cxa_atexit for C++])],"}, {"sha": "93022517b315e4607ab08b4e78c1608b8aaaa26a", "filename": "gcc/doc/install.texi", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/630b1e3a187dc843958e8966345da6191226b8e2/gcc%2Fdoc%2Finstall.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/630b1e3a187dc843958e8966345da6191226b8e2/gcc%2Fdoc%2Finstall.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finstall.texi?ref=630b1e3a187dc843958e8966345da6191226b8e2", "patch": "@@ -1414,6 +1414,11 @@ These features are extensions to the traditional\n SVR4-based MIPS ABIs and require support from GNU binutils\n and the runtime C library.\n \n+@item --with-stack-clash-protection-guard-size=@var{size}\n+On certain targets this option sets the default stack clash protection guard\n+size as a power of two in bytes.  On AArch64 @var{size} is required to be either\n+12 (4KB) or 16 (64KB).\n+\n @item --enable-__cxa_atexit\n Define if you want to use __cxa_atexit, rather than atexit, to\n register C++ destructors for local statics and global objects."}, {"sha": "4a5f2042dac72bb457488ac8bc35d09df94c929c", "filename": "gcc/params.def", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/630b1e3a187dc843958e8966345da6191226b8e2/gcc%2Fparams.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/630b1e3a187dc843958e8966345da6191226b8e2/gcc%2Fparams.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fparams.def?ref=630b1e3a187dc843958e8966345da6191226b8e2", "patch": "@@ -213,14 +213,15 @@ DEFPARAM(PARAM_STACK_FRAME_GROWTH,\n \t \"Maximal stack frame growth due to inlining (in percent).\",\n \t 1000, 0, 0)\n \n+/* Keep these up to date with those in configure.ac.  */\n DEFPARAM(PARAM_STACK_CLASH_PROTECTION_GUARD_SIZE,\n \t \"stack-clash-protection-guard-size\",\n-\t \"Size of the stack guard expressed as a power of two.\",\n+\t \"Size of the stack guard expressed as a power of two in bytes.\",\n \t 12, 12, 30)\n \n DEFPARAM(PARAM_STACK_CLASH_PROTECTION_PROBE_INTERVAL,\n \t \"stack-clash-protection-probe-interval\",\n-\t \"Interval in which to probe the stack expressed as a power of two.\",\n+\t \"Interval in which to probe the stack expressed as a power of two in bytes.\",\n \t 12, 10, 16)\n \n /* The GCSE optimization will be disabled if it would require"}]}