{"sha": "9ac7ebba1c097d331bac2b9b47811740030fa7be", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OWFjN2ViYmExYzA5N2QzMzFiYWMyYjliNDc4MTE3NDAwMzBmYTdiZQ==", "commit": {"author": {"name": "Kazu Hirata", "email": "kazu@cs.umass.edu", "date": "2003-01-21T04:10:38Z"}, "committer": {"name": "Kazu Hirata", "email": "kazu@gcc.gnu.org", "date": "2003-01-21T04:10:38Z"}, "message": "h8300.c (const_costs): Remove a warning.\n\n\t* config/h8300/h8300.c (const_costs): Remove a warning.\n\t(output_plussi): Likewise.\n\t(compute_plussi_length): Likewise.\n\t(compute_plussi_cc): Likewise.\n\nFrom-SVN: r61531", "tree": {"sha": "0438168b3fcdde3fe01412cd5cdd8bbd2e7ca657", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0438168b3fcdde3fe01412cd5cdd8bbd2e7ca657"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9ac7ebba1c097d331bac2b9b47811740030fa7be", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9ac7ebba1c097d331bac2b9b47811740030fa7be", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9ac7ebba1c097d331bac2b9b47811740030fa7be", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9ac7ebba1c097d331bac2b9b47811740030fa7be/comments", "author": null, "committer": null, "parents": [{"sha": "309c52b51ba698b2a9b9baa025fcb07a5b067fcf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/309c52b51ba698b2a9b9baa025fcb07a5b067fcf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/309c52b51ba698b2a9b9baa025fcb07a5b067fcf"}], "stats": {"total": 55, "additions": 34, "deletions": 21}, "files": [{"sha": "294e1065cb562e657d0da291501f373a9368d6ef", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9ac7ebba1c097d331bac2b9b47811740030fa7be/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9ac7ebba1c097d331bac2b9b47811740030fa7be/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=9ac7ebba1c097d331bac2b9b47811740030fa7be", "patch": "@@ -1,3 +1,10 @@\n+2003-01-20  Kazu Hirata  <kazu@cs.umass.edu>\n+\n+\t* config/h8300/h8300.c (const_costs): Remove a warning.\n+\t(output_plussi): Likewise.\n+\t(compute_plussi_length): Likewise.\n+\t(compute_plussi_cc): Likewise.\n+\n 2003-01-20  Kazu Hirata  <kazu@cs.umass.edu>\n \n \t* config/h8300/h8300.md (addsi_h8300): Remove the last"}, {"sha": "3282698f33dad666c9900ad5a05e0510fb1ee305", "filename": "gcc/config/h8300/h8300.c", "status": "modified", "additions": 27, "deletions": 21, "changes": 48, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9ac7ebba1c097d331bac2b9b47811740030fa7be/gcc%2Fconfig%2Fh8300%2Fh8300.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9ac7ebba1c097d331bac2b9b47811740030fa7be/gcc%2Fconfig%2Fh8300%2Fh8300.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fh8300%2Fh8300.c?ref=9ac7ebba1c097d331bac2b9b47811740030fa7be", "patch": "@@ -1106,24 +1106,30 @@ const_costs (r, c, outer_code)\n   switch (c)\n     {\n     case CONST_INT:\n-      switch (INTVAL (r))\n-\t{\n-\tcase 0:\n-\t  return 0;\n-\tcase 1:\n-\tcase 2:\n-\tcase -1:\n-\tcase -2:\n-\t  return 0 + (outer_code == SET);\n-\tcase 4:\n-\tcase -4:\n-\t  if (TARGET_H8300H || TARGET_H8300S)\n-\t    return 0 + (outer_code == SET);\n-\t  else\n-\t    return 1;\n-\tdefault:\n-\t  return 1;\n-\t}\n+      {\n+\tHOST_WIDE_INT n = INTVAL (r);\n+\n+\tif (-4 <= n || n <= 4)\n+\t  {\n+\t    switch ((int) n)\n+\t      {\n+\t      case 0:\n+\t\treturn 0;\n+\t      case 1:\n+\t      case 2:\n+\t      case -1:\n+\t      case -2:\n+\t\treturn 0 + (outer_code == SET);\n+\t      case 4:\n+\t      case -4:\n+\t\tif (TARGET_H8300H || TARGET_H8300S)\n+\t\t  return 0 + (outer_code == SET);\n+\t\telse\n+\t\t  return 1;\n+\t      }\n+\t  }\n+\treturn 1;\n+      }\n \n     case CONST:\n     case LABEL_REF:\n@@ -1908,7 +1914,7 @@ output_plussi (operands)\n \n \t  /* See if we can finish with 2 bytes.  */\n \n-\t  switch (intval & 0xffffffff)\n+\t  switch ((unsigned int) intval & 0xffffffff)\n \t    {\n \t    case 0x00000001:\n \t    case 0x00000002:\n@@ -1968,7 +1974,7 @@ compute_plussi_length (operands)\n \n \t  /* See if we can finish with 2 bytes.  */\n \n-\t  switch (intval & 0xffffffff)\n+\t  switch ((unsigned int) intval & 0xffffffff)\n \t    {\n \t    case 0x00000001:\n \t    case 0x00000002:\n@@ -2023,7 +2029,7 @@ compute_plussi_cc (operands)\n \n \t  /* See if we can finish with 2 bytes.  */\n \n-\t  switch (intval & 0xffffffff)\n+\t  switch ((unsigned int) intval & 0xffffffff)\n \t    {\n \t    case 0x00000001:\n \t    case 0x00000002:"}]}