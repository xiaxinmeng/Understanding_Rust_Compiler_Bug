{"sha": "236ec2d7eeb645497c80e1e67cde4c490cce44a1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjM2ZWMyZDdlZWI2NDU0OTdjODBlMWU2N2NkZTRjNDkwY2NlNDRhMQ==", "commit": {"author": {"name": "Ralf Wildenhues", "email": "Ralf.Wildenhues@gmx.de", "date": "2008-06-02T19:37:45Z"}, "committer": {"name": "Ralf Wildenhues", "email": "rwild@gcc.gnu.org", "date": "2008-06-02T19:37:45Z"}, "message": "configure.ac: Drop unneeded backslash ending up in config.in.\n\ngcc/\n\t* configure.ac: Drop unneeded backslash ending up in config.in.\n\t* acinclude.m4: Likewise.\n\t* config.in: Regenerate.\n\nFrom-SVN: r136292", "tree": {"sha": "8292cc0a19b95a50eb36e5e8bf3f13d89c366126", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8292cc0a19b95a50eb36e5e8bf3f13d89c366126"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/236ec2d7eeb645497c80e1e67cde4c490cce44a1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/236ec2d7eeb645497c80e1e67cde4c490cce44a1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/236ec2d7eeb645497c80e1e67cde4c490cce44a1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/236ec2d7eeb645497c80e1e67cde4c490cce44a1/comments", "author": null, "committer": null, "parents": [{"sha": "5649c0b9b3f847801be166e07197a4bd6365d87f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5649c0b9b3f847801be166e07197a4bd6365d87f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5649c0b9b3f847801be166e07197a4bd6365d87f"}], "stats": {"total": 27, "additions": 23, "deletions": 4}, "files": [{"sha": "7edcf2ef94a48528af6b746d67edaea2e1b4f16b", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/236ec2d7eeb645497c80e1e67cde4c490cce44a1/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/236ec2d7eeb645497c80e1e67cde4c490cce44a1/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=236ec2d7eeb645497c80e1e67cde4c490cce44a1", "patch": "@@ -1,3 +1,9 @@\n+2008-06-02  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n+\n+\t* configure.ac: Drop unneeded backslash ending up in config.in.\n+\t* acinclude.m4: Likewise.\n+\t* config.in: Regenerate.\n+\n 2008-05-26  Jan Hubicka  <jh@suse.cz>\n \n \t* predict.c (maybe_hot_frequency_p): Break out of..."}, {"sha": "9f865ee28d4f064debfb3b6ff8b54c263260875b", "filename": "gcc/acinclude.m4", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/236ec2d7eeb645497c80e1e67cde4c490cce44a1/gcc%2Facinclude.m4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/236ec2d7eeb645497c80e1e67cde4c490cce44a1/gcc%2Facinclude.m4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Facinclude.m4?ref=236ec2d7eeb645497c80e1e67cde4c490cce44a1", "patch": "@@ -347,7 +347,7 @@ if test $gcc_cv_c_nbby = failed; then\n   AC_MSG_ERROR(cannot determine number of bits in a byte)\n else\n   AC_DEFINE_UNQUOTED(CHAR_BIT, $gcc_cv_c_nbby,\n-  [Define as the number of bits in a byte, if \\`limits.h' doesn't.])\n+  [Define as the number of bits in a byte, if `limits.h' doesn't.])\n fi\n fi])\n "}, {"sha": "ec2c468d402e944b4d780367ace1203c828dd34c", "filename": "gcc/config.in", "status": "modified", "additions": 15, "deletions": 2, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/236ec2d7eeb645497c80e1e67cde4c490cce44a1/gcc%2Fconfig.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/236ec2d7eeb645497c80e1e67cde4c490cce44a1/gcc%2Fconfig.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig.in?ref=236ec2d7eeb645497c80e1e67cde4c490cce44a1", "patch": "@@ -1,6 +1,6 @@\n /* config.in.  Generated from configure.ac by autoheader.  */\n \n-/* Define as the number of bits in a byte, if \\`limits.h' doesn't. */\n+/* Define as the number of bits in a byte, if `limits.h' doesn't. */\n #ifndef USED_FOR_TARGET\n #undef CHAR_BIT\n #endif\n@@ -729,6 +729,12 @@\n #endif\n \n \n+/* Define to 1 if you have the <dlfcn.h> header file. */\n+#ifndef USED_FOR_TARGET\n+#undef HAVE_DLFCN_H\n+#endif\n+\n+\n /* Define to 1 if you have the <fcntl.h> header file. */\n #ifndef USED_FOR_TARGET\n #undef HAVE_FCNTL_H\n@@ -1315,6 +1321,13 @@\n #endif\n \n \n+/* Define to the sub-directory in which libtool stores uninstalled libraries.\n+   */\n+#ifndef USED_FOR_TARGET\n+#undef LT_OBJDIR\n+#endif\n+\n+\n /* Define if host mkdir takes a single argument. */\n #ifndef USED_FOR_TARGET\n #undef MKDIR_TAKES_ONE_ARG\n@@ -1523,7 +1536,7 @@\n #endif\n \n \n-/* Define to \\`long' if <sys/resource.h> doesn't define. */\n+/* Define to `long' if <sys/resource.h> doesn't define. */\n #ifndef USED_FOR_TARGET\n #undef rlim_t\n #endif"}, {"sha": "6bbe29da71dcf8662c45c1f398a937a68eb198e7", "filename": "gcc/configure.ac", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/236ec2d7eeb645497c80e1e67cde4c490cce44a1/gcc%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/236ec2d7eeb645497c80e1e67cde4c490cce44a1/gcc%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfigure.ac?ref=236ec2d7eeb645497c80e1e67cde4c490cce44a1", "patch": "@@ -1078,7 +1078,7 @@ AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[\n #include <sys/resource.h>\n #endif\n ]], [[rlim_t l = 0;]])],[],[AC_DEFINE([rlim_t],[long],\n-[Define to \\`long' if <sys/resource.h> doesn't define.])])\n+[Define to `long' if <sys/resource.h> doesn't define.])])\n \n # On AIX 5.2, <ldfcn.h> conflicts with <fcntl.h>, as both define incompatible\n # FREAD and FWRITE macros.  Fortunately, for GCC's single usage of ldgetname"}]}