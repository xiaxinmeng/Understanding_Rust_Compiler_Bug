{"sha": "0c1fcb02b154cf1840914c4b5d96a495690376e0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MGMxZmNiMDJiMTU0Y2YxODQwOTE0YzRiNWQ5NmE0OTU2OTAzNzZlMA==", "commit": {"author": {"name": "Tom Tromey", "email": "tromey@redhat.com", "date": "2002-03-10T17:59:23Z"}, "committer": {"name": "Tom Tromey", "email": "tromey@gcc.gnu.org", "date": "2002-03-10T17:59:23Z"}, "message": "Win32Process.java: Added comment.\n\n\t* java/lang/Win32Process.java: Added comment.\n\t* include/posix.h (_Jv_platform_close_on_exec): New function.\n\tInclude fcntl.h.\n\t* include/win32.h (_Jv_platform_close_on_exec): New function.\n\t* java/net/natPlainSocketImpl.cc (create): Set close-on-exec\n\tflag.\n\t(accept): Likewise.\n\t* java/net/natPlainDatagramSocketImpl.cc (create): Set\n\tclose-on-exec flag.\n\t* java/io/natFileDescriptorPosix.cc (open): Set close-on-exec\n\tflag.\n\nFrom-SVN: r50536", "tree": {"sha": "45c63f7bfa318f36096be3612f34f51fc377a300", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/45c63f7bfa318f36096be3612f34f51fc377a300"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0c1fcb02b154cf1840914c4b5d96a495690376e0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0c1fcb02b154cf1840914c4b5d96a495690376e0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0c1fcb02b154cf1840914c4b5d96a495690376e0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0c1fcb02b154cf1840914c4b5d96a495690376e0/comments", "author": null, "committer": null, "parents": [{"sha": "b29bb8325b6d6be0353a25285fcc697b55451ab1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b29bb8325b6d6be0353a25285fcc697b55451ab1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b29bb8325b6d6be0353a25285fcc697b55451ab1"}], "stats": {"total": 51, "additions": 45, "deletions": 6}, "files": [{"sha": "205b8b3aa44f9abcbe1bb90080d55fa73567095a", "filename": "libjava/ChangeLog", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0c1fcb02b154cf1840914c4b5d96a495690376e0/libjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0c1fcb02b154cf1840914c4b5d96a495690376e0/libjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog?ref=0c1fcb02b154cf1840914c4b5d96a495690376e0", "patch": "@@ -1,3 +1,17 @@\n+2002-03-10  Tom Tromey  <tromey@redhat.com>\n+\n+\t* java/lang/Win32Process.java: Added comment.\n+\t* include/posix.h (_Jv_platform_close_on_exec): New function.\n+\tInclude fcntl.h.\n+\t* include/win32.h (_Jv_platform_close_on_exec): New function.\n+\t* java/net/natPlainSocketImpl.cc (create): Set close-on-exec\n+\tflag.\n+\t(accept): Likewise.\n+\t* java/net/natPlainDatagramSocketImpl.cc (create): Set\n+\tclose-on-exec flag.\n+\t* java/io/natFileDescriptorPosix.cc (open): Set close-on-exec\n+\tflag.\n+\n 2002-03-09  Tom Tromey  <tromey@redhat.com>\n \n \t* verify.cc (state::NO_STACK): New constant."}, {"sha": "05c6ddfad4cefab061487f2123376d9a2544b9c5", "filename": "libjava/include/posix.h", "status": "modified", "additions": 8, "deletions": 4, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0c1fcb02b154cf1840914c4b5d96a495690376e0/libjava%2Finclude%2Fposix.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0c1fcb02b154cf1840914c4b5d96a495690376e0/libjava%2Finclude%2Fposix.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Finclude%2Fposix.h?ref=0c1fcb02b154cf1840914c4b5d96a495690376e0", "patch": "@@ -28,13 +28,17 @@ details.  */\n #include <unistd.h>\n #endif\n \n+#include <fcntl.h>\n+\n #include <gcj/cni.h>\n \n extern int _Jv_select (int n, fd_set *, fd_set *, fd_set *, struct timeval *);\n extern jlong _Jv_platform_gettimeofday ();\n extern void _Jv_platform_initialize (void);\n \n-\n-\n-\n-\n+inline void\n+_Jv_platform_close_on_exec (jint fd)\n+{\n+  // Ignore errors.\n+  fcntl (fd, F_SETFD, FD_CLOEXEC);\n+}"}, {"sha": "73eb0c819d65a3abb69a5ed0873a735a82a8b22e", "filename": "libjava/include/win32.h", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0c1fcb02b154cf1840914c4b5d96a495690376e0/libjava%2Finclude%2Fwin32.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0c1fcb02b154cf1840914c4b5d96a495690376e0/libjava%2Finclude%2Fwin32.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Finclude%2Fwin32.h?ref=0c1fcb02b154cf1840914c4b5d96a495690376e0", "patch": "@@ -21,4 +21,9 @@ details.  */\n extern void _Jv_platform_initialize (void);\n extern jlong _Jv_platform_gettimeofday ();\n \n+void _Jv_platform_close_on_exec (jint)\n+{\n+  // Ignore.\n+}\n+\n #endif /* __JV_WIN32_H__ */"}, {"sha": "bfe00093f4051a53fbd375b380cbad07862896b0", "filename": "libjava/java/io/natFileDescriptorPosix.cc", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0c1fcb02b154cf1840914c4b5d96a495690376e0/libjava%2Fjava%2Fio%2FnatFileDescriptorPosix.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0c1fcb02b154cf1840914c4b5d96a495690376e0/libjava%2Fjava%2Fio%2FnatFileDescriptorPosix.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fio%2FnatFileDescriptorPosix.cc?ref=0c1fcb02b154cf1840914c4b5d96a495690376e0", "patch": "@@ -17,7 +17,6 @@ details.  */\n #include <string.h>\n #include <sys/stat.h>\n #include <sys/param.h>\n-#include <fcntl.h>\n \n #ifdef HAVE_SYS_IOCTL_H\n #define BSD_COMP /* Get FIONREAD on Solaris2. */\n@@ -122,6 +121,9 @@ java::io::FileDescriptor::open (jstring path, jint jflags)\n       sprintf (msg, \"%s (%s)\", buf, strerror (errno));\n       throw new FileNotFoundException (JvNewStringLatin1 (msg));\n     }\n+\n+  _Jv_platform_close_on_exec (fd);\n+\n   return fd;\n }\n "}, {"sha": "0af24573eaab239ea356228d72cdcb1d3d871a2a", "filename": "libjava/java/lang/Win32Process.java", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0c1fcb02b154cf1840914c4b5d96a495690376e0/libjava%2Fjava%2Flang%2FWin32Process.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0c1fcb02b154cf1840914c4b5d96a495690376e0/libjava%2Fjava%2Flang%2FWin32Process.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Flang%2FWin32Process.java?ref=0c1fcb02b154cf1840914c4b5d96a495690376e0", "patch": "@@ -21,6 +21,11 @@\n \n // This is entirely internal to our implementation.\n \n+// NOTE: when this is implemented, we'll need to add\n+// HANDLE_FLAG_INHERIT in FileDescriptor and other places, to make\n+// sure that file descriptors aren't inherited by the child process.\n+// See _Jv_platform_close_on_exec.\n+\n // This file is copied to `ConcreteProcess.java' before compilation.\n // Hence the class name apparently does not match the file name.\n final class ConcreteProcess extends Process"}, {"sha": "81e17cc52a75cec40afd2dacecdea4d7074de5cb", "filename": "libjava/java/net/natPlainDatagramSocketImpl.cc", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0c1fcb02b154cf1840914c4b5d96a495690376e0/libjava%2Fjava%2Fnet%2FnatPlainDatagramSocketImpl.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0c1fcb02b154cf1840914c4b5d96a495690376e0/libjava%2Fjava%2Fnet%2FnatPlainDatagramSocketImpl.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fnet%2FnatPlainDatagramSocketImpl.cc?ref=0c1fcb02b154cf1840914c4b5d96a495690376e0", "patch": "@@ -1,4 +1,4 @@\n-/* Copyright (C) 1999, 2000  Free Software Foundation\n+/* Copyright (C) 1999, 2000, 2002  Free Software Foundation\n \n    This file is part of libgcj.\n \n@@ -185,6 +185,9 @@ java::net::PlainDatagramSocketImpl::create ()\n       char* strerr = strerror (errno);\n       throw new java::net::SocketException (JvNewStringUTF (strerr));\n     }\n+\n+  _Jv_platform_close_on_exec (sock);\n+\n   fnum = sock;\n   fd = new java::io::FileDescriptor (sock);\n }"}, {"sha": "dd8d2ccdd55780550d8fbaf68c2f9ee74560713e", "filename": "libjava/java/net/natPlainSocketImpl.cc", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0c1fcb02b154cf1840914c4b5d96a495690376e0/libjava%2Fjava%2Fnet%2FnatPlainSocketImpl.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0c1fcb02b154cf1840914c4b5d96a495690376e0/libjava%2Fjava%2Fnet%2FnatPlainSocketImpl.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fnet%2FnatPlainSocketImpl.cc?ref=0c1fcb02b154cf1840914c4b5d96a495690376e0", "patch": "@@ -232,6 +232,9 @@ java::net::PlainSocketImpl::create (jboolean stream)\n       char* strerr = strerror (errno);\n       throw new java::io::IOException (JvNewStringUTF (strerr));\n     }\n+\n+  _Jv_platform_close_on_exec (sock);\n+\n   fnum = sock;\n   fd = new java::io::FileDescriptor (sock);\n }\n@@ -374,6 +377,9 @@ java::net::PlainSocketImpl::accept (java::net::PlainSocketImpl *s)\n   new_socket = _Jv_accept (fnum, (sockaddr*) &u, &addrlen);\n   if (new_socket < 0)\n     goto error;\n+\n+  _Jv_platform_close_on_exec (new_socket);\n+\n   jbyteArray raddr;\n   jint rport;\n   if (u.address.sin_family == AF_INET)"}]}