{"sha": "4839149c4ce8911c2532bb8f32e82d0aa9c28410", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDgzOTE0OWM0Y2U4OTExYzI1MzJiYjhmMzJlODJkMGFhOWMyODQxMA==", "commit": {"author": {"name": "Bruce Korb", "email": "bkorb@gnu.org", "date": "2000-12-05T14:54:02Z"}, "committer": {"name": "Bruce Korb", "email": "korbb@gcc.gnu.org", "date": "2000-12-05T14:54:02Z"}, "message": "enable fixincludes for BeOS\n\nFrom-SVN: r38038", "tree": {"sha": "7e894268e631cd967785f8144ffa8b18e99a2237", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7e894268e631cd967785f8144ffa8b18e99a2237"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4839149c4ce8911c2532bb8f32e82d0aa9c28410", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4839149c4ce8911c2532bb8f32e82d0aa9c28410", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4839149c4ce8911c2532bb8f32e82d0aa9c28410", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4839149c4ce8911c2532bb8f32e82d0aa9c28410/comments", "author": {"login": "brkorb", "id": 1242936, "node_id": "MDQ6VXNlcjEyNDI5MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1242936?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brkorb", "html_url": "https://github.com/brkorb", "followers_url": "https://api.github.com/users/brkorb/followers", "following_url": "https://api.github.com/users/brkorb/following{/other_user}", "gists_url": "https://api.github.com/users/brkorb/gists{/gist_id}", "starred_url": "https://api.github.com/users/brkorb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brkorb/subscriptions", "organizations_url": "https://api.github.com/users/brkorb/orgs", "repos_url": "https://api.github.com/users/brkorb/repos", "events_url": "https://api.github.com/users/brkorb/events{/privacy}", "received_events_url": "https://api.github.com/users/brkorb/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "c87e46884b06c70ec55ac0aae1afce3b2671b94b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c87e46884b06c70ec55ac0aae1afce3b2671b94b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c87e46884b06c70ec55ac0aae1afce3b2671b94b"}], "stats": {"total": 162, "additions": 137, "deletions": 25}, "files": [{"sha": "7ed6d66d61b384480ff632a036231425384c228b", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4839149c4ce8911c2532bb8f32e82d0aa9c28410/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4839149c4ce8911c2532bb8f32e82d0aa9c28410/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=4839149c4ce8911c2532bb8f32e82d0aa9c28410", "patch": "@@ -1,3 +1,8 @@\n+2000-12-05  Bruce Korb  <bkorb@gnu.org>\n+\n+\t* fixinc/Makefile.*: make these more consistent\n+\t* fixinc/mkfixincl.sh: enable BeOS fixincludes\n+\n 2000-12-05  Richard Henderson  <rth@redhat.com>\n \n \t* stmt.c (warn_if_unused_value): Move side effects test earlier."}, {"sha": "5ebbd36122d0594b42c12e89a16d03f145121286", "filename": "gcc/fixinc/Makefile.BEOS", "status": "modified", "additions": 118, "deletions": 0, "changes": 118, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4839149c4ce8911c2532bb8f32e82d0aa9c28410/gcc%2Ffixinc%2FMakefile.BEOS", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4839149c4ce8911c2532bb8f32e82d0aa9c28410/gcc%2Ffixinc%2FMakefile.BEOS", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffixinc%2FMakefile.BEOS?ref=4839149c4ce8911c2532bb8f32e82d0aa9c28410", "patch": "@@ -0,0 +1,118 @@\n+# Makefile for GNU compilers on a Be box.\n+#\n+#   Copyright (C) 1998, 1999, 2000 Free Software Foundation, Inc.\n+\n+#This file is part of GNU CC.\n+\n+#GNU CC is free software; you can redistribute it and/or modify\n+#it under the terms of the GNU General Public License as published by\n+#the Free Software Foundation; either version 2, or (at your option)\n+#any later version.\n+\n+#GNU CC is distributed in the hope that it will be useful,\n+#but WITHOUT ANY WARRANTY; without even the implied warranty of\n+#MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+#GNU General Public License for more details.\n+\n+#You should have received a copy of the GNU General Public License\n+#along with GNU CC; see the file COPYING.  If not, write to\n+#the Free Software Foundation, 59 Temple Place - Suite 330,\n+#Boston, MA 02111-1307, USA.\n+\n+# This Makefile.BEOS file lives in the fixinc subdirectory.\n+# Its purpose is to build the fixincl and applyfix programs for\n+# the Be port of GCC.\n+\n+FIXINC_DEFS = -DIN_GCC $(CFLAGS) $(CPPFLAGS) $(INCLUDES) -DSEPARATE_FIX_PROC\n+\n+target=i586-pc-beos\n+# Directory where sources are, from where we are.\n+VPATH = $(srcdir)\n+subdir = fixinc\n+\n+# End of variables for you to override.\n+\n+default : all\n+\n+# Now figure out from those variables how to compile and link.\n+\n+# Specify the directories to be searched for header files.\n+# Both . and srcdir are used, in that order.\n+#\n+INCLUDES = -I. -I.. -I$(srcdir) -I$(srcdir)/.. \\\n+-I$(srcdir)/../config -I$(srcdir)/../../include\n+\n+# Always use -I$(srcdir)/config when compiling.\n+.c.o:\n+\t$(CC) -c $(FIXINC_DEFS) $<\n+\n+# The only suffixes we want for implicit rules are .c and .o.\n+.SUFFIXES:\n+.SUFFIXES: .c .o\n+\n+#\f\n+\n+## # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #\n+##\n+##  Makefile for constructing the \"best\" include fixer we can\n+##\n+## # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #\n+\n+LIBERTY = ../../libiberty/libiberty.a\n+OBJ = fixincl.o fixtests.o fixfixes.o server.o procopen.o \\\n+      gnu-regex.o fixlib.o\n+\n+HDR = server.h gnu-regex.h fixlib.h machname.h\n+\n+TARGETS = fixincl applyfix\n+\n+all : $(TARGETS)\n+gen : $(srcdir)/fixincl.x\n+\n+FIXINCL_OBJ = fixincl.o fixlib.o fixtests.o gnu-regex.o\n+\n+fixincl: $(FIXINCL_OBJ) $(LIBERTY)\n+\t$(CC) $(FIXINC_DEFS) $(LDFLAGS) -o $@ $(FIXINCL_OBJ) $(LIBERTY)\n+\n+APPLY_OBJ = fixfixes.o fixlib.o gnu-regex.o\n+\n+applyfix: $(APPLY_OBJ) $(LIBERTY)\n+\t$(CC) $(FIXINC_DEFS) $(LDFLAGS) -o $@ $(APPLY_OBJ) $(LIBERTY)\n+\n+$(OBJ)      : $(HDR)\n+fixincl.o   : $(srcdir)/fixincl.x fixincl.c\n+fixtests.o  : fixtests.c\n+fixfixes.o  : fixfixes.c $(srcdir)/fixincl.x\n+server.o    : server.c\n+procopen.o  : procopen.c\n+gnu-regex.o : gnu-regex.c\n+fixlib.o    : fixlib.c\n+\n+#  'machname.h' is built in the build directory.\n+#  'fixincl.x' in the source dir.\n+#\n+machname.h: ../specs\n+\t$(SHELL) $(srcdir)/genfixes $@\n+\n+$(srcdir)/fixincl.x: fixincl.tpl inclhack.def\n+\tcd $(srcdir) ; $(SHELL) ./genfixes $@\n+\n+clean:\n+\trm -f *.o $(TARGETS) machname.h *~\n+\n+maintainer-clean: clean\n+\trm -f $(srcdir)/fixincl.x\n+\n+#  Build the executable and copy up into gcc dir.\n+#  We still copy the script because we still have alternative scripts.\n+#\n+install-bin : $(TARGETS)\n+\t./fixincl -v\n+\t@if [ -f ../fixinc.sh ] ; then rm -f ../fixinc.sh || \\\n+\t    mv -f ../fixinc.sh ../fixinc.sh.$$ || exit 1 ; fi\n+\t@if [ -f ./fixincl.sh ] ; \\\n+\tthen echo cp ./fixincl.sh ../fixinc.sh ; \\\n+\t\tcp ./fixincl.sh ../fixinc.sh ; \\\n+\telse echo cp $(srcdir)/fixincl.sh ../fixinc.sh ; \\\n+\t\tcp $(srcdir)/fixincl.sh ../fixinc.sh ; fi\n+\tchmod 755 ../fixinc.sh"}, {"sha": "cd134ccea97b1f404127b835a8ea0e9b3ae8947f", "filename": "gcc/fixinc/Makefile.DOS", "status": "modified", "additions": 9, "deletions": 14, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4839149c4ce8911c2532bb8f32e82d0aa9c28410/gcc%2Ffixinc%2FMakefile.DOS", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4839149c4ce8911c2532bb8f32e82d0aa9c28410/gcc%2Ffixinc%2FMakefile.DOS", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffixinc%2FMakefile.DOS?ref=4839149c4ce8911c2532bb8f32e82d0aa9c28410", "patch": "@@ -23,16 +23,11 @@\n # Its purpose is to build the fixincl and applyfix programs for\n # the DJGPP (aka MS-DOS) port of GCC.\n \n-CFLAGS = -Wall -g -O2\n FIXINC_DEFS = -DIN_GCC $(CFLAGS) $(CPPFLAGS) $(INCLUDES) \\\n  -D__MSDOS__ -DSEPARATE_FIX_PROC\n \n-CC = gcc\n-SHELL = /bin/sh\n-\n target=i386-pc-msdosdjgpp\n # Directory where sources are, from where we are.\n-srcdir = .\n VPATH = $(srcdir)\n subdir = fixinc\n \n@@ -64,7 +59,7 @@ INCLUDES = -I. -I.. -I$(srcdir) -I$(srcdir)/.. \\\n ##\n ## # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #\n \n-LIBERTY = $(srcdir)/../../libiberty/libiberty.a\n+LIBERTY = ../../libiberty/libiberty.a\n OBJ = fixincl.o fixtests.o fixfixes.o server.o procopen.o \\\n       gnu-regex.o fixlib.o\n \n@@ -73,22 +68,22 @@ HDR = server.h gnu-regex.h fixlib.h machname.h\n TARGETS = fixincl.exe applyfix.exe\n \n all : $(TARGETS)\n-gen : fixincl.x\n+gen : $(srcdir)/fixincl.x\n \n FIXINCL_OBJ = fixincl.o fixlib.o fixtests.o gnu-regex.o\n \n fixincl.exe: $(FIXINCL_OBJ) $(LIBERTY)\n-\t$(CC) $(FIXINC_DEFS) -o $@ $(FIXINCL_OBJ) $(LIBERTY)\n+\t$(CC) $(FIXINC_DEFS) $(LDFLAGS) -o $@ $(FIXINCL_OBJ) $(LIBERTY)\n \n APPLY_OBJ = fixfixes.o fixlib.o gnu-regex.o\n \n applyfix.exe: $(APPLY_OBJ) $(LIBERTY)\n-\t$(CC) $(FIXINC_DEFS) -o $@ $(APPLY_OBJ) $(LIBERTY)\n+\t$(CC) $(FIXINC_DEFS) $(LDFLAGS) -o $@ $(APPLY_OBJ) $(LIBERTY)\n \n $(OBJ)      : $(HDR)\n-fixincl.o   : fixincl.x fixincl.c\n+fixincl.o   : $(srcdir)/fixincl.x fixincl.c\n fixtests.o  : fixtests.c\n-fixfixes.o  : fixfixes.c fixincl.x\n+fixfixes.o  : fixfixes.c $(srcdir)/fixincl.x\n server.o    : server.c\n procopen.o  : procopen.c\n gnu-regex.o : gnu-regex.c\n@@ -100,19 +95,19 @@ fixlib.o    : fixlib.c\n machname.h: ../specs\n \t$(SHELL) $(srcdir)/genfixes $@\n \n-fixincl.x: fixincl.tpl inclhack.def\n+$(srcdir)/fixincl.x: fixincl.tpl inclhack.def\n \tcd $(srcdir) ; $(SHELL) ./genfixes $@\n \n clean:\n-\trm -f *.o $(TARGETS) machname.h *~ *.exe\n+\trm -f *.o $(TARGETS) machname.h *~\n \n maintainer-clean : clean\n \trm -f $(srcdir)/fixincl.x\n \n #  Build the executable and copy up into gcc dir.\n #  We still copy the script because we still have alternative scripts.\n #\n-inst-bin : $(TARGETS)\n+install-bin : $(TARGETS)\n \t./fixincl.exe -v\n \t@if [ -f ../fixinc.sh ] ; then rm -f ../fixinc.sh || \\\n \t    mv -f ../fixinc.sh ../fixinc.sh.$$ || exit 1 ; fi"}, {"sha": "6e5d277686173f1daeadb0fa5fb618c3a2227a7b", "filename": "gcc/fixinc/Makefile.in", "status": "modified", "additions": 5, "deletions": 8, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4839149c4ce8911c2532bb8f32e82d0aa9c28410/gcc%2Ffixinc%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4839149c4ce8911c2532bb8f32e82d0aa9c28410/gcc%2Ffixinc%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffixinc%2FMakefile.in?ref=4839149c4ce8911c2532bb8f32e82d0aa9c28410", "patch": "@@ -1,4 +1,5 @@\n # Makefile for GNU compilers.\n+#\n #   Copyright (C) 1998, 1999, 2000 Free Software Foundation, Inc.\n \n #This file is part of GNU CC.\n@@ -21,16 +22,12 @@\n # The makefile built from this file lives in the fixinc subdirectory.\n # Its purpose is to build the any-platforms fixinc.sh script.\n \n-CFLAGS = -g\n FIXINC_DEFS = -DIN_GCC $(CFLAGS) $(CPPFLAGS) $(INCLUDES)\n \n-CC = @CC@\n-SHELL = /bin/sh\n-\n target=@target@\n # Directory where sources are, from where we are.\n srcdir = @srcdir@\n-VPATH = @srcdir@\n+VPATH = $(srcdir)\n subdir = fixinc\n \n # End of variables for you to override.\n@@ -85,7 +82,7 @@ gnu-regex.o : gnu-regex.c\n fixlib.o    : fixlib.c\n \n #  'machname.h' is built in the build directory.\n-#  '$(srcdir)/fixincl.x' in the source dir.\n+#  'fixincl.x' in the source dir.\n #\n machname.h: ../specs\n \t$(SHELL) $(srcdir)/genfixes $@\n@@ -94,15 +91,15 @@ $(srcdir)/fixincl.x: fixincl.tpl inclhack.def\n \tcd $(srcdir) ; $(SHELL) ./genfixes $@\n \n clean:\n-\trm -f *.o $(TARGETS) machname.h *~ *.exe\n+\trm -f *.o $(TARGETS) machname.h *~\n \n maintainer-clean : clean\n \trm -f $(srcdir)/fixincl.x\n \n #  Build the executable and copy up into gcc dir.\n #  We still copy the script because we still have alternative scripts.\n #\n-install-bin : fixincl\n+install-bin : $(TARGETS)\n \t./fixincl -v\n \t@if [ -f ../fixinc.sh ] ; then rm -f ../fixinc.sh || \\\n \t    mv -f ../fixinc.sh ../fixinc.sh.$$ || exit 1 ; fi"}, {"sha": "3e60389f3af34af7e9f8e7eaa422bdae45f3d9b7", "filename": "gcc/fixinc/mkfixinc.sh", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4839149c4ce8911c2532bb8f32e82d0aa9c28410/gcc%2Ffixinc%2Fmkfixinc.sh", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4839149c4ce8911c2532bb8f32e82d0aa9c28410/gcc%2Ffixinc%2Fmkfixinc.sh", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffixinc%2Fmkfixinc.sh?ref=4839149c4ce8911c2532bb8f32e82d0aa9c28410", "patch": "@@ -30,9 +30,6 @@ case $build in\n \n \t*-*-beos* )\n \t\tMAKE=\"${MAKE} -f ${srcdir}/Makefile.BEOS srcdir=${srcdir}\"\n-\t\t# Remove the following line to enable fixincludes\n-\t\t# (Makefile.BEOS is empty until Monday 12/4/00 :)\n-\t\tfixincludes=\n \t\t;;\n \n \t* )"}]}