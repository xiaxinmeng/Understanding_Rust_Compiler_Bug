{"sha": "9eae39049bcb0e0311e8bf49dd4cfb059d80ea50", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OWVhZTM5MDQ5YmNiMGUwMzExZThiZjQ5ZGQ0Y2ZiMDU5ZDgwZWE1MA==", "commit": {"author": {"name": "Matthias Klose", "email": "doko@ubuntu.com", "date": "2012-11-15T11:58:42Z"}, "committer": {"name": "Matthias Klose", "email": "doko@gcc.gnu.org", "date": "2012-11-15T11:58:42Z"}, "message": "Makefile.in (if_multiarch): Don't use a GNU make 3.81 feature.\n\n2012-11-15  Matthias Klose  <doko@ubuntu.com>\n\n        * Makefile.in (if_multiarch): Don't use a GNU make 3.81 feature.\n\nFrom-SVN: r193529", "tree": {"sha": "36cb31c9164c2c577d05faad64d343ea61baf801", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/36cb31c9164c2c577d05faad64d343ea61baf801"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9eae39049bcb0e0311e8bf49dd4cfb059d80ea50", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9eae39049bcb0e0311e8bf49dd4cfb059d80ea50", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9eae39049bcb0e0311e8bf49dd4cfb059d80ea50", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9eae39049bcb0e0311e8bf49dd4cfb059d80ea50/comments", "author": {"login": "doko42", "id": 11258518, "node_id": "MDQ6VXNlcjExMjU4NTE4", "avatar_url": "https://avatars.githubusercontent.com/u/11258518?v=4", "gravatar_id": "", "url": "https://api.github.com/users/doko42", "html_url": "https://github.com/doko42", "followers_url": "https://api.github.com/users/doko42/followers", "following_url": "https://api.github.com/users/doko42/following{/other_user}", "gists_url": "https://api.github.com/users/doko42/gists{/gist_id}", "starred_url": "https://api.github.com/users/doko42/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/doko42/subscriptions", "organizations_url": "https://api.github.com/users/doko42/orgs", "repos_url": "https://api.github.com/users/doko42/repos", "events_url": "https://api.github.com/users/doko42/events{/privacy}", "received_events_url": "https://api.github.com/users/doko42/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "d28bdb60d77cb5cda820295a1d4185c477fe80e1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d28bdb60d77cb5cda820295a1d4185c477fe80e1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d28bdb60d77cb5cda820295a1d4185c477fe80e1"}], "stats": {"total": 14, "additions": 10, "deletions": 4}, "files": [{"sha": "4481b6ff4986a7b631bdbeb839bdfb5a2ef07d02", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9eae39049bcb0e0311e8bf49dd4cfb059d80ea50/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9eae39049bcb0e0311e8bf49dd4cfb059d80ea50/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=9eae39049bcb0e0311e8bf49dd4cfb059d80ea50", "patch": "@@ -1,3 +1,7 @@\n+2012-11-15  Matthias Klose  <doko@ubuntu.com>\n+\n+\t* Makefile.in (if_multiarch): Don't use a GNU make 3.81 feature.\n+\n 2012-11-14  Jan Hubicka  <jh@suse.cz>\n \n \tPR bootstrap/55051"}, {"sha": "ec13e2d5d1fc5a65f8a22425c67445f588a020e9", "filename": "gcc/Makefile.in", "status": "modified", "additions": 6, "deletions": 4, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9eae39049bcb0e0311e8bf49dd4cfb059d80ea50/gcc%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9eae39049bcb0e0311e8bf49dd4cfb059d80ea50/gcc%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FMakefile.in?ref=9eae39049bcb0e0311e8bf49dd4cfb059d80ea50", "patch": "@@ -535,11 +535,13 @@ enable_multiarch = @enable_multiarch@\n with_float = @with_float@\n ifeq ($(enable_multiarch),yes)\n   if_multiarch = $(1)\n-else ifeq ($(enable_multiarch),auto)\n-  # SYSTEM_HEADER_DIR is makefile syntax, cannot be evaluated in configure.ac\n-  if_multiarch = $(if $(wildcard $(shell echo $(SYSTEM_HEADER_DIR))/../../usr/lib/*/crti.o),$(1))\n else\n-  if_multiarch =\n+  ifeq ($(enable_multiarch),auto)\n+    # SYSTEM_HEADER_DIR is makefile syntax, cannot be evaluated in configure.ac\n+    if_multiarch = $(if $(wildcard $(shell echo $(SYSTEM_HEADER_DIR))/../../usr/lib/*/crti.o),$(1))\n+  else\n+    if_multiarch =\n+  endif\n endif\n \n # ------------------------"}]}