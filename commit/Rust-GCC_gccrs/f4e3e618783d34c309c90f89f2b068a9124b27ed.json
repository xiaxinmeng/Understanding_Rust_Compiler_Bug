{"sha": "f4e3e618783d34c309c90f89f2b068a9124b27ed", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjRlM2U2MTg3ODNkMzRjMzA5YzkwZjg5ZjJiMDY4YTkxMjRiMjdlZA==", "commit": {"author": {"name": "Richard Henderson", "email": "rth@redhat.com", "date": "2002-10-14T18:16:07Z"}, "committer": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "2002-10-14T18:16:07Z"}, "message": "re PR rtl-optimization/8165 (builtin string functions SEGV on alpha-pc-linux-gnu at -O2)\n\n        PR opt/8165\n        * gcse.c (adjust_libcall_notes): Revert last change.\n        * simplify-rtx.c (simplify_replace_rtx): Handle LO_SUM.\n\nFrom-SVN: r58130", "tree": {"sha": "0528a5ff07218adcfc96168d07f80f2555b12c8b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0528a5ff07218adcfc96168d07f80f2555b12c8b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f4e3e618783d34c309c90f89f2b068a9124b27ed", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f4e3e618783d34c309c90f89f2b068a9124b27ed", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f4e3e618783d34c309c90f89f2b068a9124b27ed", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f4e3e618783d34c309c90f89f2b068a9124b27ed/comments", "author": null, "committer": null, "parents": [{"sha": "3eb429b2ce44213e20b23ee8e8f5ec9b617926fa", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3eb429b2ce44213e20b23ee8e8f5ec9b617926fa", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3eb429b2ce44213e20b23ee8e8f5ec9b617926fa"}], "stats": {"total": 37, "additions": 25, "deletions": 12}, "files": [{"sha": "8233cba8dedaaa8a1f2b92a8bd53b5c0efdd3bbc", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f4e3e618783d34c309c90f89f2b068a9124b27ed/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f4e3e618783d34c309c90f89f2b068a9124b27ed/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=f4e3e618783d34c309c90f89f2b068a9124b27ed", "patch": "@@ -1,3 +1,9 @@\n+2002-10-14  Richard Henderson  <rth@redhat.com>\n+\n+\tPR opt/8165\n+\t* gcse.c (adjust_libcall_notes): Revert last change.\n+\t* simplify-rtx.c (simplify_replace_rtx): Handle LO_SUM.\n+\n 2002-10-14  Andrew Haley  <aph@redhat.com>\n \n \t* tree-inline.c (remap_block): All local class initialization"}, {"sha": "bb738e2dd8f85a7dda03dcd4aa1ad126550dce4f", "filename": "gcc/gcse.c", "status": "modified", "additions": 4, "deletions": 10, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f4e3e618783d34c309c90f89f2b068a9124b27ed/gcc%2Fgcse.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f4e3e618783d34c309c90f89f2b068a9124b27ed/gcc%2Fgcse.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgcse.c?ref=f4e3e618783d34c309c90f89f2b068a9124b27ed", "patch": "@@ -4330,23 +4330,17 @@ do_local_cprop (x, insn, alter_jumps, libcall_sp)\n \n /* LIBCALL_SP is a zero-terminated array of insns at the end of a libcall;\n    their REG_EQUAL notes need updating to reflect that OLDREG has been\n-   replaced with NEWVAL in INSN.  Also update the REG_EQUAL notes in INSN.\n-\n-   Return true if all substitutions could be made.  */\n-\n+   replaced with NEWVAL in INSN.  Return true if all substitutions could\n+   be made.  */\n static bool\n adjust_libcall_notes (oldreg, newval, insn, libcall_sp)\n      rtx oldreg, newval, insn, *libcall_sp;\n {\n-  rtx end, note;\n-\n-  note = find_reg_equal_equiv_note (insn);\n-  if (note)\n-    XEXP (note, 0) = replace_rtx (XEXP (note, 0), oldreg, newval);\n+  rtx end;\n \n   while ((end = *libcall_sp++))\n     {\n-      note = find_reg_equal_equiv_note (end);\n+      rtx note = find_reg_equal_equiv_note (end);\n \n       if (! note)\n \tcontinue;"}, {"sha": "3293f0b7c6b1c3200aabb19cef87a405a83192ea", "filename": "gcc/simplify-rtx.c", "status": "modified", "additions": 15, "deletions": 2, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f4e3e618783d34c309c90f89f2b068a9124b27ed/gcc%2Fsimplify-rtx.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f4e3e618783d34c309c90f89f2b068a9124b27ed/gcc%2Fsimplify-rtx.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fsimplify-rtx.c?ref=f4e3e618783d34c309c90f89f2b068a9124b27ed", "patch": "@@ -343,9 +343,22 @@ simplify_replace_rtx (x, old, new)\n \treturn replace_equiv_address_nv (x,\n \t\t\t\t\t simplify_replace_rtx (XEXP (x, 0),\n \t\t\t\t\t\t\t       old, new));\n+      else if (code == LO_SUM)\n+\t{\n+\t  rtx op0 = simplify_replace_rtx (XEXP (x, 0), old, new);\n+\t  rtx op1 = simplify_replace_rtx (XEXP (x, 1), old, new);\n \n-      if (REG_P (x) && REG_P (old) && REGNO (x) == REGNO (old))\n-\treturn new;\n+\t  /* (lo_sum (high x) x) -> x  */\n+\t  if (GET_CODE (op0) == HIGH && rtx_equal_p (XEXP (op0, 0), op1))\n+\t    return op1;\n+\n+\t  return gen_rtx_LO_SUM (mode, op0, op1);\n+\t}\n+      else if (code == REG)\n+\t{\n+\t  if (REG_P (old) && REGNO (x) == REGNO (old))\n+\t    return new;\n+\t}\n \n       return x;\n "}]}