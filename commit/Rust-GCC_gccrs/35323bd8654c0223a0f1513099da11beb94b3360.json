{"sha": "35323bd8654c0223a0f1513099da11beb94b3360", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzUzMjNiZDg2NTRjMDIyM2EwZjE1MTMwOTlkYTExYmViOTRiMzM2MA==", "commit": {"author": {"name": "Kyrylo Tkachov", "email": "kyrylo.tkachov@arm.com", "date": "2016-11-30T12:18:47Z"}, "committer": {"name": "Kyrylo Tkachov", "email": "ktkachov@gcc.gnu.org", "date": "2016-11-30T12:18:47Z"}, "message": "[AArch64] PR target/78362: Make sure to only take REGNO of a register\n\n\tPR target/78362\n\t* config/aarch64/aarch64.md (add<mode>3): Extract inner expression\n\tfrom a subreg in operands[1] and don't call REGNO on a non-reg\n\texpression when deciding to force operands[2] into a reg.\n\n\t* gcc.c-torture/compile/pr78362.c: New test.\n\nFrom-SVN: r243011", "tree": {"sha": "2896564ef0731191a193d5c73aa9ca146071e73e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2896564ef0731191a193d5c73aa9ca146071e73e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/35323bd8654c0223a0f1513099da11beb94b3360", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/35323bd8654c0223a0f1513099da11beb94b3360", "html_url": "https://github.com/Rust-GCC/gccrs/commit/35323bd8654c0223a0f1513099da11beb94b3360", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/35323bd8654c0223a0f1513099da11beb94b3360/comments", "author": {"login": "ktkachov-arm", "id": 74917949, "node_id": "MDQ6VXNlcjc0OTE3OTQ5", "avatar_url": "https://avatars.githubusercontent.com/u/74917949?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ktkachov-arm", "html_url": "https://github.com/ktkachov-arm", "followers_url": "https://api.github.com/users/ktkachov-arm/followers", "following_url": "https://api.github.com/users/ktkachov-arm/following{/other_user}", "gists_url": "https://api.github.com/users/ktkachov-arm/gists{/gist_id}", "starred_url": "https://api.github.com/users/ktkachov-arm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ktkachov-arm/subscriptions", "organizations_url": "https://api.github.com/users/ktkachov-arm/orgs", "repos_url": "https://api.github.com/users/ktkachov-arm/repos", "events_url": "https://api.github.com/users/ktkachov-arm/events{/privacy}", "received_events_url": "https://api.github.com/users/ktkachov-arm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "ac02e9a821bcd09c6dd1294760756f18af5e06ba", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ac02e9a821bcd09c6dd1294760756f18af5e06ba", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ac02e9a821bcd09c6dd1294760756f18af5e06ba"}], "stats": {"total": 29, "additions": 28, "deletions": 1}, "files": [{"sha": "8fd098bc85a603a01af58e1e78f6399fd06757d4", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/35323bd8654c0223a0f1513099da11beb94b3360/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/35323bd8654c0223a0f1513099da11beb94b3360/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=35323bd8654c0223a0f1513099da11beb94b3360", "patch": "@@ -1,3 +1,10 @@\n+2016-11-30  Kyrylo Tkachov  <kyrylo.tkachov@arm.com>\n+\n+\tPR target/78362\n+\t* config/aarch64/aarch64.md (add<mode>3): Extract inner expression\n+\tfrom a subreg in operands[1] and don't call REGNO on a non-reg\n+\texpression when deciding to force operands[2] into a reg.\n+\n 2016-11-30  Claudiu Zissulescu  <claziss@synopsys.com>\n \t    Andrew Burgess  <andrew.burgess@embecosm.com>\n "}, {"sha": "bc6d8a2b3c29d5a6da03a90cdd3fbab45907e9a9", "filename": "gcc/config/aarch64/aarch64.md", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/35323bd8654c0223a0f1513099da11beb94b3360/gcc%2Fconfig%2Faarch64%2Faarch64.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/35323bd8654c0223a0f1513099da11beb94b3360/gcc%2Fconfig%2Faarch64%2Faarch64.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Faarch64.md?ref=35323bd8654c0223a0f1513099da11beb94b3360", "patch": "@@ -1611,11 +1611,15 @@\n \t      (match_operand:GPI 2 \"aarch64_pluslong_operand\" \"\")))]\n   \"\"\n {\n+  /* If operands[1] is a subreg extract the inner RTX.  */\n+  rtx op1 = REG_P (operands[1]) ? operands[1] : SUBREG_REG (operands[1]);\n+\n   /* If the constant is too large for a single instruction and isn't frame\n      based, split off the immediate so it is available for CSE.  */\n   if (!aarch64_plus_immediate (operands[2], <MODE>mode)\n       && can_create_pseudo_p ()\n-      && !REGNO_PTR_FRAME_P (REGNO (operands[1])))\n+      && (!REG_P (op1)\n+\t || !REGNO_PTR_FRAME_P (REGNO (op1))))\n     operands[2] = force_reg (<MODE>mode, operands[2]);\n })\n "}, {"sha": "d2d80d26e515cca14957eefe01a6bf6375023ff7", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/35323bd8654c0223a0f1513099da11beb94b3360/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/35323bd8654c0223a0f1513099da11beb94b3360/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=35323bd8654c0223a0f1513099da11beb94b3360", "patch": "@@ -1,3 +1,8 @@\n+2016-11-30  Kyrylo Tkachov  <kyrylo.tkachov@arm.com>\n+\n+\tPR target/78362\n+\t* gcc.c-torture/compile/pr78362.c: New test.\n+\n 2016-11-30  Andrew Burgess  <andrew.burgess@embecosm.com>\n \n \t* lib/target-supports.exp (check_effective_target_freorder): Check"}, {"sha": "66eea7d2fab7405ccc2efe0354384cbf36113569", "filename": "gcc/testsuite/gcc.c-torture/compile/pr78362.c", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/35323bd8654c0223a0f1513099da11beb94b3360/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr78362.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/35323bd8654c0223a0f1513099da11beb94b3360/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr78362.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr78362.c?ref=35323bd8654c0223a0f1513099da11beb94b3360", "patch": "@@ -0,0 +1,11 @@\n+/* PR target/78362.  */\n+\n+long a;\n+\n+void\n+foo (void)\n+{\n+  for (;; a--)\n+    if ((int) a)\n+      break;\n+}"}]}