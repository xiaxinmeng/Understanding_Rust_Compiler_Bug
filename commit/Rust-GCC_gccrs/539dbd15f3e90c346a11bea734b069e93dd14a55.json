{"sha": "539dbd15f3e90c346a11bea734b069e93dd14a55", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTM5ZGJkMTVmM2U5MGMzNDZhMTFiZWE3MzRiMDY5ZTkzZGQxNGE1NQ==", "commit": {"author": {"name": "Kazu Hirata", "email": "kazu@cs.umass.edu", "date": "2002-12-20T04:05:14Z"}, "committer": {"name": "Kazu Hirata", "email": "kazu@gcc.gnu.org", "date": "2002-12-20T04:05:14Z"}, "message": "h8300.md (output_a_shift): Clean up the code to output shifts using rotation.\n\n\t* config/h8300/h8300.md (output_a_shift): Clean up the code to\n\toutput shifts using rotation.\n\nFrom-SVN: r60353", "tree": {"sha": "49b6a4cac00cbb10871a121852da3548f4fa1a0b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/49b6a4cac00cbb10871a121852da3548f4fa1a0b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/539dbd15f3e90c346a11bea734b069e93dd14a55", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/539dbd15f3e90c346a11bea734b069e93dd14a55", "html_url": "https://github.com/Rust-GCC/gccrs/commit/539dbd15f3e90c346a11bea734b069e93dd14a55", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/539dbd15f3e90c346a11bea734b069e93dd14a55/comments", "author": null, "committer": null, "parents": [{"sha": "7a163ec05c76c710d246c56ef8076a2cd38baf32", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7a163ec05c76c710d246c56ef8076a2cd38baf32", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7a163ec05c76c710d246c56ef8076a2cd38baf32"}], "stats": {"total": 41, "additions": 22, "deletions": 19}, "files": [{"sha": "209e12fc49629a852330e26ed755fd2783c6ac8f", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/539dbd15f3e90c346a11bea734b069e93dd14a55/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/539dbd15f3e90c346a11bea734b069e93dd14a55/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=539dbd15f3e90c346a11bea734b069e93dd14a55", "patch": "@@ -1,3 +1,8 @@\n+2002-12-19  Kazu Hirata  <kazu@cs.umass.edu>\n+\n+\t* config/h8300/h8300.md (output_a_shift): Clean up the code to\n+\toutput shifts using rotation.\n+\n 2002-12-20  Zdenek Dvorak  <rakdver@atrey.karlin.mff.cuni.cz>\n \n \t* flow.c (allocate_reg_life_data): Reset REG_FREQ."}, {"sha": "ab2cc1544ed79c2132c3b39c6eb15c99141f05cc", "filename": "gcc/config/h8300/h8300.c", "status": "modified", "additions": 17, "deletions": 19, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/539dbd15f3e90c346a11bea734b069e93dd14a55/gcc%2Fconfig%2Fh8300%2Fh8300.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/539dbd15f3e90c346a11bea734b069e93dd14a55/gcc%2Fconfig%2Fh8300%2Fh8300.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fh8300%2Fh8300.c?ref=539dbd15f3e90c346a11bea734b069e93dd14a55", "patch": "@@ -3026,30 +3026,28 @@ output_a_shift (operands)\n \t      output_asm_insn (info.shift1, operands);\n \n \t    /* Now mask off the high bits.  */\n-\t    if (TARGET_H8300)\n+\t    switch (mode)\n \t      {\n-\t\tswitch (mode)\n+\t      case QImode:\n+\t\tsprintf (insn_buf, \"and\\t#%d,%%X0\", mask);\n+\t\tcc_status.value1 = operands[0];\n+\t\tcc_status.flags |= CC_NO_CARRY;\n+\t\tbreak;\n+\t      case HImode:\n+\t\tif (TARGET_H8300)\n \t\t  {\n-\t\t  case QImode:\n-\t\t    sprintf (insn_buf, \"and\\t#%d,%%X0\", mask);\n-\t\t    cc_status.value1 = operands[0];\n-\t\t    cc_status.flags |= CC_NO_CARRY;\n-\t\t    break;\n-\t\t  case HImode:\n \t\t    sprintf (insn_buf, \"and\\t#%d,%%s0\\n\\tand\\t#%d,%%t0\",\n \t\t\t     mask & 255, mask >> 8);\n-\t\t    break;\n-\t\t  default:\n-\t\t    abort ();\n \t\t  }\n-\t      }\n-\t    else\n-\t      {\n-\t\tsprintf (insn_buf, \"and.%c\\t#%d,%%%c0\",\n-\t\t\t \"bwl\"[shift_mode], mask,\n-\t\t\t mode == QImode ? 'X' : mode == HImode ? 'T' : 'S');\n-\t\tcc_status.value1 = operands[0];\n-\t\tcc_status.flags |= CC_NO_CARRY;\n+\t\telse\n+\t\t  {\n+\t\t    sprintf (insn_buf, \"and.w\\t#%d,%%T0\", mask);\n+\t\t    cc_status.value1 = operands[0];\n+\t\t    cc_status.flags |= CC_NO_CARRY;\n+\t\t  }\n+\t\tbreak;\n+\t      default:\n+\t\tabort ();\n \t      }\n \t    output_asm_insn (insn_buf, operands);\n \t    return \"\";"}]}