{"sha": "ab3dd4aba8edefd009fc719e3d1f83b93cb8bc0b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWIzZGQ0YWJhOGVkZWZkMDA5ZmM3MTllM2QxZjgzYjkzY2I4YmMwYg==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@adacore.com", "date": "2017-09-11T10:32:32Z"}, "committer": {"name": "Eric Botcazou", "email": "ebotcazou@gcc.gnu.org", "date": "2017-09-11T10:32:32Z"}, "message": "gigi.h (enum standard_datatypes): Minor tweak.\n\n\t* gcc-interface/gigi.h (enum standard_datatypes): Minor tweak.\n\t(gigi): Likewise.\n\nFrom-SVN: r251974", "tree": {"sha": "c3e34aa46fe7c0e7ca8ef8957c4bd9912f01bc53", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c3e34aa46fe7c0e7ca8ef8957c4bd9912f01bc53"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ab3dd4aba8edefd009fc719e3d1f83b93cb8bc0b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ab3dd4aba8edefd009fc719e3d1f83b93cb8bc0b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ab3dd4aba8edefd009fc719e3d1f83b93cb8bc0b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ab3dd4aba8edefd009fc719e3d1f83b93cb8bc0b/comments", "author": null, "committer": null, "parents": [{"sha": "e6a096d181d64a05d686437847dbde9bb869ecc4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e6a096d181d64a05d686437847dbde9bb869ecc4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e6a096d181d64a05d686437847dbde9bb869ecc4"}], "stats": {"total": 22, "additions": 14, "deletions": 8}, "files": [{"sha": "bdc548d0fc6f7f517df7f22b52286c1b9257f11c", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab3dd4aba8edefd009fc719e3d1f83b93cb8bc0b/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab3dd4aba8edefd009fc719e3d1f83b93cb8bc0b/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=ab3dd4aba8edefd009fc719e3d1f83b93cb8bc0b", "patch": "@@ -1,3 +1,8 @@\n+2017-09-11  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* gcc-interface/gigi.h (enum standard_datatypes): Minor tweak.\n+\t(gigi): Likewise.\n+\n 2017-09-11  Yannick Moy  <moy@adacore.com>\n \n \t* lib-xref-spark_specific.adb: Minor rewrite."}, {"sha": "4ddd0f0a8d2e4ff199c512326968fc2efdcd0773", "filename": "gcc/ada/gcc-interface/gigi.h", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab3dd4aba8edefd009fc719e3d1f83b93cb8bc0b/gcc%2Fada%2Fgcc-interface%2Fgigi.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab3dd4aba8edefd009fc719e3d1f83b93cb8bc0b/gcc%2Fada%2Fgcc-interface%2Fgigi.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgcc-interface%2Fgigi.h?ref=ab3dd4aba8edefd009fc719e3d1f83b93cb8bc0b", "patch": "@@ -423,7 +423,8 @@ enum standard_datatypes\n   ADT_all_others_decl,\n   ADT_unhandled_others_decl,\n \n-  ADT_LAST};\n+  ADT_LAST\n+};\n \n /* Define kind of exception information associated with raise statements.  */\n enum exception_info_kind"}, {"sha": "18bf0713b2b783c99e06a1fbe403459bc19dd067", "filename": "gcc/ada/gcc-interface/trans.c", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab3dd4aba8edefd009fc719e3d1f83b93cb8bc0b/gcc%2Fada%2Fgcc-interface%2Ftrans.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab3dd4aba8edefd009fc719e3d1f83b93cb8bc0b/gcc%2Fada%2Fgcc-interface%2Ftrans.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgcc-interface%2Ftrans.c?ref=ab3dd4aba8edefd009fc719e3d1f83b93cb8bc0b", "patch": "@@ -396,26 +396,26 @@ gigi (Node_Id gnat_root,\n   ptr_void_ftype = build_pointer_type (void_ftype);\n \n   /* Now declare run-time functions.  */\n-  ftype = build_function_type_list (ptr_type_node, sizetype, NULL_TREE);\n   malloc_decl\n     = create_subprog_decl (get_identifier (\"__gnat_malloc\"), NULL_TREE,\n-\t\t\t   ftype,\n+\t\t\t   build_function_type_list (ptr_type_node, sizetype,\n+\t\t\t\t\t\t     NULL_TREE),\n \t\t\t   NULL_TREE, is_disabled, true, true, true, false,\n \t\t\t   false, NULL, Empty);\n   DECL_IS_MALLOC (malloc_decl) = 1;\n \n-  ftype = build_function_type_list (void_type_node, ptr_type_node, NULL_TREE);\n   free_decl\n     = create_subprog_decl (get_identifier (\"__gnat_free\"), NULL_TREE,\n-\t\t\t   ftype,\n+\t\t\t   build_function_type_list (void_type_node,\n+\t\t\t\t\t\t     ptr_type_node, NULL_TREE),\n \t\t\t   NULL_TREE, is_disabled, true, true, true, false,\n \t\t\t   false, NULL, Empty);\n \n-  ftype = build_function_type_list (ptr_type_node, ptr_type_node, sizetype,\n-\t\t\t\t    NULL_TREE);\n   realloc_decl\n     = create_subprog_decl (get_identifier (\"__gnat_realloc\"), NULL_TREE,\n-\t\t\t   ftype,\n+\t\t\t   build_function_type_list (ptr_type_node,\n+\t\t\t\t\t\t     ptr_type_node, sizetype,\n+\t\t\t\t\t\t     NULL_TREE),\n \t\t\t   NULL_TREE, is_disabled, true, true, true, false,\n \t\t\t   false, NULL, Empty);\n "}]}