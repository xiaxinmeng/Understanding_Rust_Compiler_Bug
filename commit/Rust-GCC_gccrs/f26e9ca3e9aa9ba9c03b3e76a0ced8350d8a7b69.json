{"sha": "f26e9ca3e9aa9ba9c03b3e76a0ced8350d8a7b69", "node_id": "C_kwDOANBUbNoAKGYyNmU5Y2EzZTlhYTliYTljMDNiM2U3NmEwY2VkODM1MGQ4YTdiNjk", "commit": {"author": {"name": "David Faust", "email": "david.faust@oracle.com", "date": "2022-10-13T17:14:38Z"}, "committer": {"name": "Arthur Cohen", "email": "arthur.cohen@embecosm.com", "date": "2023-02-21T11:36:34Z"}, "message": "gccrs: ast: dump: ArrayExpr\n\ngcc/rust/ChangeLog:\n\n\t* ast/rust-ast-dump.cc (Dump::visit): Add dump code for ArrayExpr.", "tree": {"sha": "d19080bafed2b066495bd43a0926d27993e98d5e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d19080bafed2b066495bd43a0926d27993e98d5e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f26e9ca3e9aa9ba9c03b3e76a0ced8350d8a7b69", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f26e9ca3e9aa9ba9c03b3e76a0ced8350d8a7b69", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f26e9ca3e9aa9ba9c03b3e76a0ced8350d8a7b69", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f26e9ca3e9aa9ba9c03b3e76a0ced8350d8a7b69/comments", "author": {"login": "dafaust", "id": 4460334, "node_id": "MDQ6VXNlcjQ0NjAzMzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/4460334?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dafaust", "html_url": "https://github.com/dafaust", "followers_url": "https://api.github.com/users/dafaust/followers", "following_url": "https://api.github.com/users/dafaust/following{/other_user}", "gists_url": "https://api.github.com/users/dafaust/gists{/gist_id}", "starred_url": "https://api.github.com/users/dafaust/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dafaust/subscriptions", "organizations_url": "https://api.github.com/users/dafaust/orgs", "repos_url": "https://api.github.com/users/dafaust/repos", "events_url": "https://api.github.com/users/dafaust/events{/privacy}", "received_events_url": "https://api.github.com/users/dafaust/received_events", "type": "User", "site_admin": false}, "committer": {"login": "CohenArthur", "id": 43524065, "node_id": "MDQ6VXNlcjQzNTI0MDY1", "avatar_url": "https://avatars.githubusercontent.com/u/43524065?v=4", "gravatar_id": "", "url": "https://api.github.com/users/CohenArthur", "html_url": "https://github.com/CohenArthur", "followers_url": "https://api.github.com/users/CohenArthur/followers", "following_url": "https://api.github.com/users/CohenArthur/following{/other_user}", "gists_url": "https://api.github.com/users/CohenArthur/gists{/gist_id}", "starred_url": "https://api.github.com/users/CohenArthur/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/CohenArthur/subscriptions", "organizations_url": "https://api.github.com/users/CohenArthur/orgs", "repos_url": "https://api.github.com/users/CohenArthur/repos", "events_url": "https://api.github.com/users/CohenArthur/events{/privacy}", "received_events_url": "https://api.github.com/users/CohenArthur/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c091fd5f4a2da1d52ae70281e94bc089f706d7b8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c091fd5f4a2da1d52ae70281e94bc089f706d7b8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c091fd5f4a2da1d52ae70281e94bc089f706d7b8"}], "stats": {"total": 32, "additions": 28, "deletions": 4}, "files": [{"sha": "91e540a1ee885f7af87efcbc73c77faf023f5add", "filename": "gcc/rust/ast/rust-ast-dump.cc", "status": "modified", "additions": 28, "deletions": 4, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f26e9ca3e9aa9ba9c03b3e76a0ced8350d8a7b69/gcc%2Frust%2Fast%2Frust-ast-dump.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f26e9ca3e9aa9ba9c03b3e76a0ced8350d8a7b69/gcc%2Frust%2Fast%2Frust-ast-dump.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Fast%2Frust-ast-dump.cc?ref=f26e9ca3e9aa9ba9c03b3e76a0ced8350d8a7b69", "patch": "@@ -449,19 +449,43 @@ Dump::visit (GroupedExpr &expr)\n \n void\n Dump::visit (ArrayElemsValues &elems)\n-{}\n+{\n+  auto &vals = elems.get_values ();\n+  if (vals.size () >= 1)\n+    {\n+      vals[0]->accept_vis (*this);\n+      for (size_t i = 1; i < vals.size (); i++)\n+\t{\n+\t  stream << \", \";\n+\t  vals[i]->accept_vis (*this);\n+\t}\n+    }\n+}\n \n void\n Dump::visit (ArrayElemsCopied &elems)\n-{}\n+{\n+  elems.get_elem_to_copy ()->accept_vis (*this);\n+  stream << \"; \";\n+  elems.get_num_copies ()->accept_vis (*this);\n+}\n \n void\n Dump::visit (ArrayExpr &expr)\n-{}\n+{\n+  stream << '[';\n+  expr.get_array_elems ()->accept_vis (*this);\n+  stream << ']';\n+}\n \n void\n Dump::visit (ArrayIndexExpr &expr)\n-{}\n+{\n+  expr.get_array_expr ()->accept_vis (*this);\n+  stream << '[';\n+  expr.get_index_expr ()->accept_vis (*this);\n+  stream << ']';\n+}\n \n void\n Dump::visit (TupleExpr &expr)"}]}