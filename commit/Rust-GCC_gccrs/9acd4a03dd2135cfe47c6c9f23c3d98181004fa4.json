{"sha": "9acd4a03dd2135cfe47c6c9f23c3d98181004fa4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OWFjZDRhMDNkZDIxMzVjZmU0N2M2YzlmMjNjM2Q5ODE4MTAwNGZhNA==", "commit": {"author": {"name": "Ian Lance Taylor", "email": "ian@wasabisystems.com", "date": "2004-03-10T00:17:36Z"}, "committer": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2004-03-10T00:17:36Z"}, "message": "system.h (SUNOS4_SHARED_LIBRARIES): Poison.\n\n\t* system.h (SUNOS4_SHARED_LIBRARIES): Poison.\n\t* collect2.c: Remove SUNOS4_SHARED_LIBRARIES code.\n\t* config/sparc/aout.h (TARGET_ASM_SELECT_SECTION): Don't define.\n\t* config/sparc/sparc.c (sparc_aout_select_section): Remove.\n\t(sparc_aout_select_rtx_section): Don't check\n\tSUNOS4_SHARED_LIBRARIES.\n\t* config/sparc/sparc.h (SUNOS4_SHARED_LIBRARIES): Don't define.\n\nFrom-SVN: r79216", "tree": {"sha": "fa0ff5561398e46327d7b72534f74cfe5b34fdb5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/fa0ff5561398e46327d7b72534f74cfe5b34fdb5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9acd4a03dd2135cfe47c6c9f23c3d98181004fa4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9acd4a03dd2135cfe47c6c9f23c3d98181004fa4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9acd4a03dd2135cfe47c6c9f23c3d98181004fa4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9acd4a03dd2135cfe47c6c9f23c3d98181004fa4/comments", "author": null, "committer": null, "parents": [{"sha": "b86f05b692ab2084facc03c49ff231ef1b9388c6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b86f05b692ab2084facc03c49ff231ef1b9388c6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b86f05b692ab2084facc03c49ff231ef1b9388c6"}], "stats": {"total": 304, "additions": 13, "deletions": 291}, "files": [{"sha": "4593d9f78b23d949e793f5f411d9f76d8d75350b", "filename": "gcc/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9acd4a03dd2135cfe47c6c9f23c3d98181004fa4/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9acd4a03dd2135cfe47c6c9f23c3d98181004fa4/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=9acd4a03dd2135cfe47c6c9f23c3d98181004fa4", "patch": "@@ -1,3 +1,13 @@\n+2004-03-09  Ian Lance Taylor  <ian@wasabisystems.com>\n+\n+\t* system.h (SUNOS4_SHARED_LIBRARIES): Poison.\n+\t* collect2.c: Remove SUNOS4_SHARED_LIBRARIES code.\n+\t* config/sparc/aout.h (TARGET_ASM_SELECT_SECTION): Don't define.\n+\t* config/sparc/sparc.c (sparc_aout_select_section): Remove.\n+\t(sparc_aout_select_rtx_section): Don't check\n+\tSUNOS4_SHARED_LIBRARIES.\n+\t* config/sparc/sparc.h (SUNOS4_SHARED_LIBRARIES): Don't define.\n+\n 2004-03-10  Hans-Peter Nilsson  <hp@axis.com>\n \n \tPR other/14474"}, {"sha": "b9c7cae8a5e46db565a39a7c9599311d3a02d6f7", "filename": "gcc/collect2.c", "status": "modified", "additions": 1, "deletions": 266, "changes": 267, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9acd4a03dd2135cfe47c6c9f23c3d98181004fa4/gcc%2Fcollect2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9acd4a03dd2135cfe47c6c9f23c3d98181004fa4/gcc%2Fcollect2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcollect2.c?ref=9acd4a03dd2135cfe47c6c9f23c3d98181004fa4", "patch": "@@ -67,7 +67,6 @@ Software Foundation, 59 Temple Place - Suite 330, Boston, MA\n    cross-versions are in the proper directories.  */\n \n #ifdef CROSS_COMPILE\n-#undef SUNOS4_SHARED_LIBRARIES\n #undef OBJECT_FORMAT_COFF\n #undef MD_EXEC_PREFIX\n #undef REAL_LD_FILE_NAME\n@@ -140,7 +139,7 @@ Software Foundation, 59 Temple Place - Suite 330, Boston, MA\n   fprintf ((STREAM), \"void _GLOBAL__DD() {\\n\\t%s();\\n}\\n\", (FUNC))\n #endif\n \n-#if defined (LDD_SUFFIX) || SUNOS4_SHARED_LIBRARIES\n+#ifdef LDD_SUFFIX\n #define SCAN_LIBRARIES\n #endif\n \n@@ -2148,269 +2147,6 @@ scan_prog_file (const char *prog_name, enum pass which_pass)\n #endif\n }\n \n-#if SUNOS4_SHARED_LIBRARIES\n-\n-/* Routines to scan the SunOS 4 _DYNAMIC structure to find shared libraries\n-   that the output file depends upon and their initialization/finalization\n-   routines, if any.  */\n-\n-#include <a.out.h>\n-#include <fcntl.h>\n-#include <link.h>\n-#include <sys/mman.h>\n-#include <sys/param.h>\n-#include <unistd.h>\n-#include <sys/dir.h>\n-\n-/* pointers to the object file */\n-unsigned object;\t/* address of memory mapped file */\n-unsigned objsize;\t/* size of memory mapped to file */\n-char * code;\t\t/* pointer to code segment */\n-char * data;\t\t/* pointer to data segment */\n-struct nlist *symtab;\t/* pointer to symbol table */\n-struct link_dynamic *ld;\n-struct link_dynamic_2 *ld_2;\n-struct head libraries;\n-\n-/* Map the file indicated by NAME into memory and store its address.  */\n-\n-static void\n-mapfile (const char *name)\n-{\n-  int fp;\n-  struct stat s;\n-  if ((fp = open (name, O_RDONLY)) == -1)\n-    fatal (\"unable to open file '%s'\", name);\n-  if (fstat (fp, &s) == -1)\n-    fatal (\"unable to stat file '%s'\", name);\n-\n-  objsize = s.st_size;\n-  object = (unsigned) mmap (0, objsize, PROT_READ|PROT_WRITE, MAP_PRIVATE,\n-\t\t\t    fp, 0);\n-  if (object == (unsigned)-1)\n-    fatal (\"unable to mmap file '%s'\", name);\n-\n-  close (fp);\n-}\n-\n-/* Helpers for locatelib.  */\n-\n-static const char *libname;\n-\n-static int\n-libselect (struct direct *d)\n-{\n-  return (strncmp (libname, d->d_name, strlen (libname)) == 0);\n-}\n-\n-/* If one file has an additional numeric extension past LIBNAME, then put\n-   that one first in the sort.  If both files have additional numeric\n-   extensions, then put the one with the higher number first in the sort.\n-\n-   We must verify that the extension is numeric, because Sun saves the\n-   original versions of patched libraries with a .FCS extension.  Files with\n-   invalid extensions must go last in the sort, so that they will not be used.  */\n-\n-static int\n-libcompare (struct direct **d1, struct direct **d2)\n-{\n-  int i1, i2 = strlen (libname);\n-  char *e1 = (*d1)->d_name + i2;\n-  char *e2 = (*d2)->d_name + i2;\n-\n-  while (*e1 && *e2 && *e1 == '.' && *e2 == '.'\n-\t && e1[1] && ISDIGIT (e1[1]) && e2[1] && ISDIGIT (e2[1]))\n-    {\n-      ++e1;\n-      ++e2;\n-      i1 = strtol (e1, &e1, 10);\n-      i2 = strtol (e2, &e2, 10);\n-      if (i1 != i2)\n-\treturn i1 - i2;\n-    }\n-\n-  if (*e1)\n-    {\n-      /* It has a valid numeric extension, prefer this one.  */\n-      if (*e1 == '.' && e1[1] && ISDIGIT (e1[1]))\n-\treturn 1;\n-      /* It has an invalid numeric extension, must prefer the other one.  */\n-      else\n-\treturn -1;\n-    }\n-  else if (*e2)\n-    {\n-      /* It has a valid numeric extension, prefer this one.  */\n-      if (*e2 == '.' && e2[1] && ISDIGIT (e2[1]))\n-\treturn -1;\n-      /* It has an invalid numeric extension, must prefer the other one.  */\n-      else\n-\treturn 1;\n-    }\n-  else\n-    return 0;\n-}\n-\n-/* Given the name NAME of a dynamic dependency, find its pathname and add\n-   it to the list of libraries.  */\n-\n-static void\n-locatelib (const char *name)\n-{\n-  static const char **l;\n-  static int cnt;\n-  char buf[MAXPATHLEN];\n-  char *p, *q;\n-  const char **pp;\n-\n-  if (l == 0)\n-    {\n-      char *ld_rules;\n-      char *ldr = 0;\n-      /* counting elements in array, need 1 extra for null */\n-      cnt = 1;\n-      ld_rules = (char *) (ld_2->ld_rules + code);\n-      if (ld_rules)\n-\t{\n-\t  cnt++;\n-\t  for (; *ld_rules != 0; ld_rules++)\n-\t    if (*ld_rules == ':')\n-\t      cnt++;\n-\t  ld_rules = (char *) (ld_2->ld_rules + code);\n-\t  ldr = xstrdup (ld_rules);\n-\t}\n-      p = getenv (\"LD_LIBRARY_PATH\");\n-      q = 0;\n-      if (p)\n-\t{\n-\t  cnt++;\n-\t  for (q = p ; *q != 0; q++)\n-\t    if (*q == ':')\n-\t      cnt++;\n-\t  q = xstrdup (p);\n-\t}\n-      l = xmalloc ((cnt + 3) * sizeof (char *));\n-      pp = l;\n-      if (ldr)\n-\t{\n-\t  *pp++ = ldr;\n-\t  for (; *ldr != 0; ldr++)\n-\t    if (*ldr == ':')\n-\t      {\n-\t\t*ldr++ = 0;\n-\t\t*pp++ = ldr;\n-\t      }\n-\t}\n-      if (q)\n-\t{\n-\t  *pp++ = q;\n-\t  for (; *q != 0; q++)\n-\t    if (*q == ':')\n-\t      {\n-\t\t*q++ = 0;\n-\t\t*pp++ = q;\n-\t      }\n-\t}\n-      /* built in directories are /lib, /usr/lib, and /usr/local/lib */\n-      *pp++ = \"/lib\";\n-      *pp++ = \"/usr/lib\";\n-      *pp++ = \"/usr/local/lib\";\n-      *pp = 0;\n-    }\n-  libname = name;\n-  for (pp = l; *pp != 0 ; pp++)\n-    {\n-      struct direct **namelist;\n-      int entries;\n-      if ((entries = scandir (*pp, &namelist, libselect, libcompare)) > 0)\n-\t{\n-\t  sprintf (buf, \"%s/%s\", *pp, namelist[entries - 1]->d_name);\n-\t  add_to_list (&libraries, buf);\n-\t  if (debug)\n-\t    fprintf (stderr, \"%s\\n\", buf);\n-\t  break;\n-\t}\n-    }\n-  if (*pp == 0)\n-    {\n-      if (debug)\n-\tnotice (\"not found\\n\");\n-      else\n-\tfatal (\"dynamic dependency %s not found\", name);\n-    }\n-}\n-\n-/* Scan the _DYNAMIC structure of the output file to find shared libraries\n-   that it depends upon and any constructors or destructors they contain.  */\n-\n-static void\n-scan_libraries (const char *prog_name)\n-{\n-  struct exec *header;\n-  char *base;\n-  struct link_object *lo;\n-  char buff[MAXPATHLEN];\n-  struct id *list;\n-\n-  mapfile (prog_name);\n-  header = (struct exec *)object;\n-  if (N_BADMAG (*header))\n-    fatal (\"bad magic number in file '%s'\", prog_name);\n-  if (header->a_dynamic == 0)\n-    return;\n-\n-  code = (char *) (N_TXTOFF (*header) + (long) header);\n-  data = (char *) (N_DATOFF (*header) + (long) header);\n-  symtab = (struct nlist *) (N_SYMOFF (*header) + (long) header);\n-\n-  if (header->a_magic == ZMAGIC && header->a_entry == 0x20)\n-    {\n-      /* shared object */\n-      ld = (struct link_dynamic *) (symtab->n_value + code);\n-      base = code;\n-    }\n-  else\n-    {\n-      /* executable */\n-      ld = (struct link_dynamic *) data;\n-      base = code-PAGSIZ;\n-    }\n-\n-  if (debug)\n-    notice (\"dynamic dependencies.\\n\");\n-\n-  ld_2 = (struct link_dynamic_2 *) ((long) ld->ld_un.ld_2 + (long)base);\n-  for (lo = (struct link_object *) ld_2->ld_need; lo;\n-       lo = (struct link_object *) lo->lo_next)\n-    {\n-      char *name;\n-      lo = (struct link_object *) ((long) lo + code);\n-      name = (char *) (code + lo->lo_name);\n-      if (lo->lo_library)\n-\t{\n-\t  if (debug)\n-\t    fprintf (stderr, \"\\t-l%s.%d => \", name, lo->lo_major);\n-\t  sprintf (buff, \"lib%s.so.%d.%d\", name, lo->lo_major, lo->lo_minor);\n-\t  locatelib (buff);\n-\t}\n-      else\n-\t{\n-\t  if (debug)\n-\t    fprintf (stderr, \"\\t%s\\n\", name);\n-\t  add_to_list (&libraries, name);\n-\t}\n-    }\n-\n-  if (debug)\n-    fprintf (stderr, \"\\n\");\n-\n-  /* Now iterate through the library list adding their symbols to\n-     the list.  */\n-  for (list = libraries.first; list; list = list->next)\n-    scan_prog_file (list->name, PASS_LIB);\n-}\n-\n-#else  /* SUNOS4_SHARED_LIBRARIES */\n #ifdef LDD_SUFFIX\n \n /* Use the List Dynamic Dependencies program to find shared libraries that\n@@ -2547,7 +2283,6 @@ scan_libraries (const char *prog_name)\n }\n \n #endif /* LDD_SUFFIX */\n-#endif /* SUNOS4_SHARED_LIBRARIES */\n \n #endif /* OBJECT_FORMAT_NONE */\n "}, {"sha": "ea39b2e9ed7edb56084b535d09b800f9dc00d311", "filename": "gcc/config/sparc/aout.h", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9acd4a03dd2135cfe47c6c9f23c3d98181004fa4/gcc%2Fconfig%2Fsparc%2Faout.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9acd4a03dd2135cfe47c6c9f23c3d98181004fa4/gcc%2Fconfig%2Fsparc%2Faout.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsparc%2Faout.h?ref=9acd4a03dd2135cfe47c6c9f23c3d98181004fa4", "patch": "@@ -29,7 +29,6 @@ Boston, MA 02111-1307, USA.  */\n  (DEFAULT_WORD_SWITCH_TAKES_ARG (STR)\t\t\t\t\\\n   || !strcmp (STR, \"target\") || !strcmp (STR, \"assert\"))\n \n-#define TARGET_ASM_SELECT_SECTION  sparc_aout_select_section\n #define TARGET_ASM_SELECT_RTX_SECTION  sparc_aout_select_rtx_section\n \n /* Output the label for a function definition.  */"}, {"sha": "8113f4b1142e1fb59993e828fcd6330d45f2df63", "filename": "gcc/config/sparc/sparc.c", "status": "modified", "additions": 1, "deletions": 14, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9acd4a03dd2135cfe47c6c9f23c3d98181004fa4/gcc%2Fconfig%2Fsparc%2Fsparc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9acd4a03dd2135cfe47c6c9f23c3d98181004fa4/gcc%2Fconfig%2Fsparc%2Fsparc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsparc%2Fsparc.c?ref=9acd4a03dd2135cfe47c6c9f23c3d98181004fa4", "patch": "@@ -160,8 +160,6 @@ static void sparc_function_prologue (FILE *, HOST_WIDE_INT, int);\n #ifdef OBJECT_FORMAT_ELF\n static void sparc_elf_asm_named_section (const char *, unsigned int);\n #endif\n-static void sparc_aout_select_section (tree, int, unsigned HOST_WIDE_INT)\n-     ATTRIBUTE_UNUSED;\n static void sparc_aout_select_rtx_section (enum machine_mode, rtx,\n \t\t\t\t\t   unsigned HOST_WIDE_INT)\n      ATTRIBUTE_UNUSED;\n@@ -8125,16 +8123,6 @@ sparc_init_libfuncs (void)\n   gofast_maybe_init_libfuncs ();\n }\n \f\n-/* ??? Similar to the standard section selection, but force reloc-y-ness\n-   if SUNOS4_SHARED_LIBRARIES.  Unclear why this helps (as opposed to\n-   pretending PIC always on), but that's what the old code did.  */\n-\n-static void\n-sparc_aout_select_section (tree t, int reloc, unsigned HOST_WIDE_INT align)\n-{\n-  default_select_section (t, reloc | SUNOS4_SHARED_LIBRARIES, align);\n-}\n-\n /* Use text section for a constant unless we need more alignment than\n    that offers.  */\n \n@@ -8143,8 +8131,7 @@ sparc_aout_select_rtx_section (enum machine_mode mode, rtx x,\n \t\t\t       unsigned HOST_WIDE_INT align)\n {\n   if (align <= MAX_TEXT_ALIGN\n-      && ! (flag_pic && (symbolic_operand (x, mode)\n-\t\t\t || SUNOS4_SHARED_LIBRARIES)))\n+      && ! (flag_pic && symbolic_operand (x, mode)))\n     readonly_data_section ();\n   else\n     data_section ();"}, {"sha": "8291f68f3f834b9e9a4aaaa15fcda9f68a936c84", "filename": "gcc/config/sparc/sparc.h", "status": "modified", "additions": 0, "deletions": 9, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9acd4a03dd2135cfe47c6c9f23c3d98181004fa4/gcc%2Fconfig%2Fsparc%2Fsparc.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9acd4a03dd2135cfe47c6c9f23c3d98181004fa4/gcc%2Fconfig%2Fsparc%2Fsparc.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsparc%2Fsparc.h?ref=9acd4a03dd2135cfe47c6c9f23c3d98181004fa4", "patch": "@@ -801,15 +801,6 @@ if (TARGET_ARCH64\t\t\t\t\\\n    because the linker fails to align the text section enough!\n    Put them in the data section.  This macro is only used in this file.  */\n #define MAX_TEXT_ALIGN 32\n-\n-/* This forces all variables and constants to the data section when PIC.\n-   This is because the SunOS 4 shared library scheme thinks everything in\n-   text is a function, and patches the address to point to a loader stub.  */\n-/* This is defined to zero for every system which doesn't use the a.out object\n-   file format.  */\n-#ifndef SUNOS4_SHARED_LIBRARIES\n-#define SUNOS4_SHARED_LIBRARIES 0\n-#endif\n \f\n /* Standard register usage.  */\n "}, {"sha": "2e16382ed2b414e022f1e7d8b34a5c63088224dd", "filename": "gcc/system.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9acd4a03dd2135cfe47c6c9f23c3d98181004fa4/gcc%2Fsystem.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9acd4a03dd2135cfe47c6c9f23c3d98181004fa4/gcc%2Fsystem.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fsystem.h?ref=9acd4a03dd2135cfe47c6c9f23c3d98181004fa4", "patch": "@@ -641,7 +641,7 @@ typedef char _Bool;\n \tFINAL_REG_PARM_STACK_SPACE MAYBE_REG_PARM_STACK_SPACE\t\t   \\\n \tTRADITIONAL_PIPELINE_INTERFACE DFA_PIPELINE_INTERFACE\t\t   \\\n \tDBX_OUTPUT_STANDARD_TYPES BUILTIN_SETJMP_FRAME_VALUE\t\t   \\\n-\tMD_ASM_CLOBBERS\n+\tMD_ASM_CLOBBERS SUNOS4_SHARED_LIBRARIES\n \n /* Hooks that are no longer used.  */\n  #pragma GCC poison LANG_HOOKS_FUNCTION_MARK LANG_HOOKS_FUNCTION_FREE\t\\"}]}