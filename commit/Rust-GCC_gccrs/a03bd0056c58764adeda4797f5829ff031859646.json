{"sha": "a03bd0056c58764adeda4797f5829ff031859646", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTAzYmQwMDU2YzU4NzY0YWRlZGE0Nzk3ZjU4MjlmZjAzMTg1OTY0Ng==", "commit": {"author": {"name": "Thomas Schwinge", "email": "thomas@codesourcery.com", "date": "2014-07-04T05:28:17Z"}, "committer": {"name": "Thomas Schwinge", "email": "tschwinge@gcc.gnu.org", "date": "2014-07-04T05:28:17Z"}, "message": "Normalize interface for all *-dg-runtest.\n\n\tgcc/testsuite/\n\t* lib/g++-dg.exp (g++-dg-runtest): Change interface to match\n\tdg-runtest's.  Adapt all callers.\n\t* lib/gcc-dg.exp (gcc-dg-runtest): Likewise.\n\t* lib/gfortran-dg.exp (gfortran-dg-runtest): Likewise.\n\t* lib/go-dg.exp (go-dg-runtest): Likewise.\n\t* lib/obj-c++-dg.exp (obj-c++-dg-runtest): Likewise.\n\t* lib/objc-dg.exp (objc-dg-runtest): Likewise.\n\tlibffi/\n\t* testsuite/lib/libffi.exp (libffi-dg-runtest): Change interface\n\tmatch to dg-runtest's.\n\nFrom-SVN: r212278", "tree": {"sha": "39c813a0fa81c53c2c36b4c3d95b31587178ac19", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/39c813a0fa81c53c2c36b4c3d95b31587178ac19"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a03bd0056c58764adeda4797f5829ff031859646", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a03bd0056c58764adeda4797f5829ff031859646", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a03bd0056c58764adeda4797f5829ff031859646", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a03bd0056c58764adeda4797f5829ff031859646/comments", "author": {"login": "tschwinge", "id": 21753, "node_id": "MDQ6VXNlcjIxNzUz", "avatar_url": "https://avatars.githubusercontent.com/u/21753?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tschwinge", "html_url": "https://github.com/tschwinge", "followers_url": "https://api.github.com/users/tschwinge/followers", "following_url": "https://api.github.com/users/tschwinge/following{/other_user}", "gists_url": "https://api.github.com/users/tschwinge/gists{/gist_id}", "starred_url": "https://api.github.com/users/tschwinge/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tschwinge/subscriptions", "organizations_url": "https://api.github.com/users/tschwinge/orgs", "repos_url": "https://api.github.com/users/tschwinge/repos", "events_url": "https://api.github.com/users/tschwinge/events{/privacy}", "received_events_url": "https://api.github.com/users/tschwinge/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "01ffe74dcc370a877746aac2deb25e688f72dcba", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/01ffe74dcc370a877746aac2deb25e688f72dcba", "html_url": "https://github.com/Rust-GCC/gccrs/commit/01ffe74dcc370a877746aac2deb25e688f72dcba"}], "stats": {"total": 255, "additions": 135, "deletions": 120}, "files": [{"sha": "9ea562b78a5d2c954621aa01eea61909bd5bd6b1", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a03bd0056c58764adeda4797f5829ff031859646/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a03bd0056c58764adeda4797f5829ff031859646/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=a03bd0056c58764adeda4797f5829ff031859646", "patch": "@@ -1,3 +1,13 @@\n+2014-07-04  Thomas Schwinge  <thomas@codesourcery.com>\n+\n+\t* lib/g++-dg.exp (g++-dg-runtest): Change interface to match\n+\tdg-runtest's.  Adapt all callers.\n+\t* lib/gcc-dg.exp (gcc-dg-runtest): Likewise.\n+\t* lib/gfortran-dg.exp (gfortran-dg-runtest): Likewise.\n+\t* lib/go-dg.exp (go-dg-runtest): Likewise.\n+\t* lib/obj-c++-dg.exp (obj-c++-dg-runtest): Likewise.\n+\t* lib/objc-dg.exp (objc-dg-runtest): Likewise.\n+\n 2014-07-03  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR tree-optimization/61682"}, {"sha": "98ff59c16123527c260e4c169c2d5bde3f86b2c0", "filename": "gcc/testsuite/g++.dg/asan/asan.exp", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a03bd0056c58764adeda4797f5829ff031859646/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fasan%2Fasan.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a03bd0056c58764adeda4797f5829ff031859646/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fasan%2Fasan.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fasan%2Fasan.exp?ref=a03bd0056c58764adeda4797f5829ff031859646", "patch": "@@ -29,7 +29,7 @@ dg-init\n if [asan_init] {\n \n # Main loop.\n-gcc-dg-runtest [lsort [glob -nocomplain $srcdir/$subdir/*.C $srcdir/c-c++-common/asan/*.c]] \"\"\n+gcc-dg-runtest [lsort [glob -nocomplain $srcdir/$subdir/*.C $srcdir/c-c++-common/asan/*.c]] \"\" \"\"\n \n }\n "}, {"sha": "c54e6764e0f84e8a19f901bf79afc83be2c5fdd8", "filename": "gcc/testsuite/g++.dg/charset/charset.exp", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a03bd0056c58764adeda4797f5829ff031859646/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcharset%2Fcharset.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a03bd0056c58764adeda4797f5829ff031859646/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcharset%2Fcharset.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcharset%2Fcharset.exp?ref=a03bd0056c58764adeda4797f5829ff031859646", "patch": "@@ -38,7 +38,7 @@ dg-init\n \n # Main loop.\n g++-dg-runtest [lsort [glob -nocomplain $srcdir/$subdir/*.{c,cc,S} ]] \\\n-        $DEFAULT_CHARSETCFLAGS\n+        \"\" $DEFAULT_CHARSETCFLAGS\n \n # All done.\n dg-finish"}, {"sha": "b0f036219ae941b50dd46a55fc78207320aec8fd", "filename": "gcc/testsuite/g++.dg/cilk-plus/cilk-plus.exp", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a03bd0056c58764adeda4797f5829ff031859646/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcilk-plus%2Fcilk-plus.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a03bd0056c58764adeda4797f5829ff031859646/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcilk-plus%2Fcilk-plus.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcilk-plus%2Fcilk-plus.exp?ref=a03bd0056c58764adeda4797f5829ff031859646", "patch": "@@ -26,12 +26,12 @@ if { ![check_effective_target_cilkplus] } {\n dg-init\n if [cilkplus_init] {\n     # Run the tests that are shared with C.\n-    g++-dg-runtest [lsort [glob -nocomplain $srcdir/c-c++-common/cilk-plus/PS/*.c]] \"\"\n+    g++-dg-runtest [lsort [glob -nocomplain $srcdir/c-c++-common/cilk-plus/PS/*.c]] \"\" \"\"\n     dg-runtest [lsort [glob -nocomplain $srcdir/c-c++-common/cilk-plus/SE/*.c]] \"-O3\" \" \"\n     dg-runtest [lsort [glob -nocomplain $srcdir/c-c++-common/cilk-plus/SE/*.c]] \" \" \" \"\n     dg-runtest [lsort [glob -nocomplain $srcdir/c-c++-common/cilk-plus/SE/*.c]] \"-g -O2\" \" \"\n     # Run the C++ only tests.\n-    g++-dg-runtest [lsort [glob -nocomplain $srcdir/$subdir/*.C]] \"\"\n+    g++-dg-runtest [lsort [glob -nocomplain $srcdir/$subdir/*.C]] \"\" \"\"\n \n     dg-runtest [lsort [glob -nocomplain $srcdir/c-c++-common/cilk-plus/AN/*.c]] \" -fcilkplus\" \" \"\n     dg-runtest [lsort [glob -nocomplain $srcdir/c-c++-common/cilk-plus/AN/*.c]] \" -O1 -fcilkplus\" \" \""}, {"sha": "b9eb97f766a021386078ef161a1f861fd9c14cc3", "filename": "gcc/testsuite/g++.dg/debug/dwarf2/dwarf2.exp", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a03bd0056c58764adeda4797f5829ff031859646/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fdebug%2Fdwarf2%2Fdwarf2.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a03bd0056c58764adeda4797f5829ff031859646/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fdebug%2Fdwarf2%2Fdwarf2.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fdebug%2Fdwarf2%2Fdwarf2.exp?ref=a03bd0056c58764adeda4797f5829ff031859646", "patch": "@@ -36,7 +36,7 @@ if { ! [string match \"*: target system does not support the * debug format*\" \\\n     $comp_output] } {\n     remove-build-file \"trivial.S\"\n     g++-dg-runtest [lsort [glob -nocomplain $srcdir/$subdir/*.C $srcdir/c-c++-common/dwarf2/*.c]] \\\n-\t    $DEFAULT_CFLAGS\n+\t    \"\" $DEFAULT_CFLAGS\n }\n \n # All done."}, {"sha": "3cfe03c111487dd6192ddd79d56ef05c9d13106e", "filename": "gcc/testsuite/g++.dg/dfp/dfp.exp", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a03bd0056c58764adeda4797f5829ff031859646/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fdfp%2Fdfp.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a03bd0056c58764adeda4797f5829ff031859646/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fdfp%2Fdfp.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fdfp%2Fdfp.exp?ref=a03bd0056c58764adeda4797f5829ff031859646", "patch": "@@ -50,10 +50,10 @@ dg-init\n \n # Main loop.  Run the tests that are specific to C++.\n g++-dg-runtest [lsort [glob -nocomplain $srcdir/$subdir/*.\\[C]] \\\n-        $DEFAULT_CXXFLAGS\n+        \"\" $DEFAULT_CXXFLAGS\n # Run tests that are shared with C testing.\n g++-dg-runtest [lsort [glob -nocomplain $srcdir/c-c++-common/dfp/*.c]] \\\n-        $DEFAULT_CXXFLAGS\n+        \"\" $DEFAULT_CXXFLAGS\n \n # All done.\n dg-finish"}, {"sha": "14beae1c257f80de2792ec313fa953b6898cdd16", "filename": "gcc/testsuite/g++.dg/dg.exp", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a03bd0056c58764adeda4797f5829ff031859646/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fdg.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a03bd0056c58764adeda4797f5829ff031859646/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fdg.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fdg.exp?ref=a03bd0056c58764adeda4797f5829ff031859646", "patch": "@@ -57,14 +57,14 @@ set tests [prune $tests $srcdir/$subdir/ubsan/*]\n set tests [prune $tests $srcdir/$subdir/tsan/*]\n \n # Main loop.\n-g++-dg-runtest $tests $DEFAULT_CXXFLAGS\n+g++-dg-runtest $tests \"\" $DEFAULT_CXXFLAGS\n \n # C/C++ common tests.\n g++-dg-runtest [lsort [glob -nocomplain $srcdir/c-c++-common/*.\\[cSi\\]]] \\\n-\t\"\"\n+\t\"\" \"\"\n \n g++-dg-runtest [lsort [glob -nocomplain $srcdir/c-c++-common/cpp/*.\\[cS\\]]] \\\n-\t\"\"\n+\t\"\" \"\"\n \n \n # All done."}, {"sha": "20cd9d0697c36501fb21ee812918b634e516a935", "filename": "gcc/testsuite/g++.dg/gcov/gcov.exp", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a03bd0056c58764adeda4797f5829ff031859646/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fgcov%2Fgcov.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a03bd0056c58764adeda4797f5829ff031859646/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fgcov%2Fgcov.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fgcov%2Fgcov.exp?ref=a03bd0056c58764adeda4797f5829ff031859646", "patch": "@@ -39,6 +39,6 @@ if { $files != \"\" } {\n }\n \n # Main loop.\n-g++-dg-runtest [lsort [glob -nocomplain $srcdir/$subdir/*.C]] \"\"\n+g++-dg-runtest [lsort [glob -nocomplain $srcdir/$subdir/*.C]] \"\" \"\"\n \n dg-finish"}, {"sha": "def0ec14ba378289a2d136ce5bea1fa501a8577b", "filename": "gcc/testsuite/g++.dg/gomp/gomp.exp", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a03bd0056c58764adeda4797f5829ff031859646/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fgomp%2Fgomp.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a03bd0056c58764adeda4797f5829ff031859646/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fgomp%2Fgomp.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fgomp%2Fgomp.exp?ref=a03bd0056c58764adeda4797f5829ff031859646", "patch": "@@ -29,7 +29,7 @@ dg-init\n # Main loop.\n g++-dg-runtest [lsort [concat \\\n \t[find $srcdir/$subdir *.C] \\\n-\t[find $srcdir/c-c++-common/gomp *.c]]] \"-fopenmp\"\n+\t[find $srcdir/c-c++-common/gomp *.c]]] \"\" \"-fopenmp\"\n \n # All done.\n dg-finish"}, {"sha": "c0ed3cef0946ad9e0df5c74c872b992bab757c1e", "filename": "gcc/testsuite/g++.dg/graphite/graphite.exp", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a03bd0056c58764adeda4797f5829ff031859646/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fgraphite%2Fgraphite.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a03bd0056c58764adeda4797f5829ff031859646/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fgraphite%2Fgraphite.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fgraphite%2Fgraphite.exp?ref=a03bd0056c58764adeda4797f5829ff031859646", "patch": "@@ -46,14 +46,14 @@ set block_files       [lsort [glob -nocomplain $srcdir/$subdir/block-*.C ] ]\n \n # Tests to be compiled.\n set dg-do-what-default compile\n-g++-dg-runtest $scop_files        \"-O2 -fgraphite -fdump-tree-graphite-all\"\n-g++-dg-runtest $id_files          \"-O2 -fgraphite-identity -ffast-math\"\n+g++-dg-runtest $scop_files        \"\" \"-O2 -fgraphite -fdump-tree-graphite-all\"\n+g++-dg-runtest $id_files          \"\" \"-O2 -fgraphite-identity -ffast-math\"\n \n # Tests to be run.\n set dg-do-what-default run\n-g++-dg-runtest $run_id_files      \"-O2 -fgraphite-identity\"\n-g++-dg-runtest $interchange_files \"-O2 -floop-interchange -fno-loop-block -fno-loop-strip-mine -ffast-math -fdump-tree-graphite-all\"\n-g++-dg-runtest $block_files       \"-O2 -floop-block -fno-loop-strip-mine -fno-loop-interchange -ffast-math -fdump-tree-graphite-all\"\n+g++-dg-runtest $run_id_files      \"\" \"-O2 -fgraphite-identity\"\n+g++-dg-runtest $interchange_files \"\" \"-O2 -floop-interchange -fno-loop-block -fno-loop-strip-mine -ffast-math -fdump-tree-graphite-all\"\n+g++-dg-runtest $block_files       \"\" \"-O2 -floop-block -fno-loop-strip-mine -fno-loop-interchange -ffast-math -fdump-tree-graphite-all\"\n \n # The default action for the rest of the files is 'compile'.\n set dg-do-what-default compile\n@@ -62,7 +62,7 @@ foreach f $id_files          {lremove wait_to_run_files $f}\n foreach f $run_id_files      {lremove wait_to_run_files $f}\n foreach f $interchange_files {lremove wait_to_run_files $f}\n foreach f $block_files       {lremove wait_to_run_files $f}\n-g++-dg-runtest $wait_to_run_files \" -pedantic-errors\"\n+g++-dg-runtest $wait_to_run_files \"\" \"-pedantic-errors\"\n \n # Clean up.\n set dg-do-what-default ${save-dg-do-what-default}"}, {"sha": "e0a8e93ae6001e5079de5bf077d489a458661921", "filename": "gcc/testsuite/g++.dg/guality/guality.exp", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a03bd0056c58764adeda4797f5829ff031859646/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fguality%2Fguality.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a03bd0056c58764adeda4797f5829ff031859646/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fguality%2Fguality.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fguality%2Fguality.exp?ref=a03bd0056c58764adeda4797f5829ff031859646", "patch": "@@ -47,8 +47,8 @@ if {[check_guality \"\n     return 0;\n   }\n \"]} {\n-  gcc-dg-runtest [lsort [glob $srcdir/$subdir/*.C]] \"\"\n-  gcc-dg-runtest [lsort [glob $srcdir/c-c++-common/guality/*.c]] \"\"\n+  gcc-dg-runtest [lsort [glob $srcdir/$subdir/*.C]] \"\" \"\"\n+  gcc-dg-runtest [lsort [glob $srcdir/c-c++-common/guality/*.c]] \"\" \"\"\n }\n \n if [info exists guality_gdb_name] {"}, {"sha": "9416637933ffeb3b393358f5fb47925dbbc91a9e", "filename": "gcc/testsuite/g++.dg/simulate-thread/simulate-thread.exp", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a03bd0056c58764adeda4797f5829ff031859646/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fsimulate-thread%2Fsimulate-thread.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a03bd0056c58764adeda4797f5829ff031859646/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fsimulate-thread%2Fsimulate-thread.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fsimulate-thread%2Fsimulate-thread.exp?ref=a03bd0056c58764adeda4797f5829ff031859646", "patch": "@@ -31,8 +31,8 @@ set-torture-options [list \\\n \t{ -Os -g } ]\n \n if [gdb-exists] {\n-  gcc-dg-runtest [lsort [glob -nocomplain $srcdir/$subdir/*.C]] \"\"\n-  gcc-dg-runtest [lsort [glob $srcdir/c-c++-common/simulate-thread/*.c]] \"\"\n+  gcc-dg-runtest [lsort [glob -nocomplain $srcdir/$subdir/*.C]] \"\" \"\"\n+  gcc-dg-runtest [lsort [glob $srcdir/c-c++-common/simulate-thread/*.c]] \"\" \"\"\n }\n \n torture-finish"}, {"sha": "cf7e5e851f7742eabc8dfd83698c6a8c08b65cfa", "filename": "gcc/testsuite/g++.dg/tls/tls.exp", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a03bd0056c58764adeda4797f5829ff031859646/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftls%2Ftls.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a03bd0056c58764adeda4797f5829ff031859646/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftls%2Ftls.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftls%2Ftls.exp?ref=a03bd0056c58764adeda4797f5829ff031859646", "patch": "@@ -29,7 +29,7 @@ if ![info exists DEFAULT_CXXFLAGS] then {\n dg-init\n \n # Main loop.\n-g++-dg-runtest [lsort [glob -nocomplain $srcdir/$subdir/*.C]] $DEFAULT_CXXFLAGS\n+g++-dg-runtest [lsort [glob -nocomplain $srcdir/$subdir/*.C]] \"\" $DEFAULT_CXXFLAGS\n \n # All done.\n dg-finish"}, {"sha": "1d1c712dab78f3871feaa6a5b64479ed8c07142d", "filename": "gcc/testsuite/g++.dg/tm/tm.exp", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a03bd0056c58764adeda4797f5829ff031859646/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftm%2Ftm.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a03bd0056c58764adeda4797f5829ff031859646/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftm%2Ftm.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftm%2Ftm.exp?ref=a03bd0056c58764adeda4797f5829ff031859646", "patch": "@@ -34,10 +34,10 @@ dg-init\n \n # Run the tests that are shared with C.\n g++-dg-runtest [lsort [glob -nocomplain $srcdir/c-c++-common/tm/*.c]] \\\n-\t$DEFAULT_CXXFLAGS\n+\t\"\" $DEFAULT_CXXFLAGS\n # Run the C++ only tests.\n g++-dg-runtest [lsort [glob -nocomplain $srcdir/$subdir/*.C]] \\\n-\t$DEFAULT_CXXFLAGS\n+\t\"\" $DEFAULT_CXXFLAGS\n \n # All done.\n dg-finish"}, {"sha": "f42a6d21a39e7b3648ea79ab6b2951829bbc82e9", "filename": "gcc/testsuite/g++.dg/torture/dg-torture.exp", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a03bd0056c58764adeda4797f5829ff031859646/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftorture%2Fdg-torture.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a03bd0056c58764adeda4797f5829ff031859646/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftorture%2Fdg-torture.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftorture%2Fdg-torture.exp?ref=a03bd0056c58764adeda4797f5829ff031859646", "patch": "@@ -3,5 +3,5 @@\n load_lib g++-dg.exp\n \n dg-init\n-gcc-dg-runtest [lsort [glob $srcdir/$subdir/*.C $srcdir/c-c++-common/torture/*.c]] \"\"\n+gcc-dg-runtest [lsort [glob $srcdir/$subdir/*.C $srcdir/c-c++-common/torture/*.c]] \"\" \"\"\n dg-finish"}, {"sha": "a784d46b817a6d942ea7979eb71ee6f57ad92759", "filename": "gcc/testsuite/g++.dg/torture/stackalign/stackalign.exp", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a03bd0056c58764adeda4797f5829ff031859646/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftorture%2Fstackalign%2Fstackalign.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a03bd0056c58764adeda4797f5829ff031859646/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftorture%2Fstackalign%2Fstackalign.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftorture%2Fstackalign%2Fstackalign.exp?ref=a03bd0056c58764adeda4797f5829ff031859646", "patch": "@@ -51,7 +51,7 @@ if { [check_effective_target_fpic] } then {\n # Combine stackalign options with the usual torture optimization flags.\n set-torture-options [concat $DG_TORTURE_OPTIONS $LTO_TORTURE_OPTIONS] $stackalign_options\n \n-gcc-dg-runtest [lsort [glob $srcdir/$subdir/*.C]] \"$default_flags\"\n+gcc-dg-runtest [lsort [glob $srcdir/$subdir/*.C]] \"\" \"$default_flags\"\n \n torture-finish\n dg-finish"}, {"sha": "37caeb904115208e975038b11f97e156fb706a73", "filename": "gcc/testsuite/g++.dg/tsan/tsan.exp", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a03bd0056c58764adeda4797f5829ff031859646/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftsan%2Ftsan.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a03bd0056c58764adeda4797f5829ff031859646/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftsan%2Ftsan.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftsan%2Ftsan.exp?ref=a03bd0056c58764adeda4797f5829ff031859646", "patch": "@@ -37,7 +37,7 @@ set-torture-options [list \\\n if [tsan_init] {\n \n # Main loop.\n-gcc-dg-runtest [lsort [glob -nocomplain $srcdir/$subdir/*.C $srcdir/c-c++-common/tsan/*.c]] \"\"\n+gcc-dg-runtest [lsort [glob -nocomplain $srcdir/$subdir/*.C $srcdir/c-c++-common/tsan/*.c]] \"\" \"\"\n \n }\n "}, {"sha": "769855e2e50874d7acb5d1e3e754a88efd5f0fca", "filename": "gcc/testsuite/g++.dg/ubsan/ubsan.exp", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a03bd0056c58764adeda4797f5829ff031859646/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fubsan%2Fubsan.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a03bd0056c58764adeda4797f5829ff031859646/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fubsan%2Fubsan.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fubsan%2Fubsan.exp?ref=a03bd0056c58764adeda4797f5829ff031859646", "patch": "@@ -25,7 +25,7 @@ dg-init\n if [ubsan_init] {\n \n # Main loop.\n-gcc-dg-runtest [lsort [glob -nocomplain $srcdir/$subdir/*.C $srcdir/c-c++-common/ubsan/*.c]] \"\"\n+gcc-dg-runtest [lsort [glob -nocomplain $srcdir/$subdir/*.C $srcdir/c-c++-common/ubsan/*.c]] \"\" \"\"\n \n }\n "}, {"sha": "26be0e462c263ce06ebcf8fe019fbbf421c82075", "filename": "gcc/testsuite/g++.dg/vect/vect.exp", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a03bd0056c58764adeda4797f5829ff031859646/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fvect%2Fvect.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a03bd0056c58764adeda4797f5829ff031859646/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fvect%2Fvect.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fvect%2Fvect.exp?ref=a03bd0056c58764adeda4797f5829ff031859646", "patch": "@@ -59,9 +59,9 @@ dg-init\n \n # Main loop.\n g++-dg-runtest [lsort [glob -nocomplain $srcdir/$subdir/pr*.{c,cc,S} ]] \\\n-        $DEFAULT_VECTCFLAGS\n+        \"\" $DEFAULT_VECTCFLAGS\n g++-dg-runtest [lsort [glob -nocomplain $srcdir/$subdir/slp-pr*.{c,cc,S} ]] \\\n-        $VECT_SLP_CFLAGS\n+        \"\" $VECT_SLP_CFLAGS\n \n #### Tests with special options\n global SAVED_DEFAULT_VECTCFLAGS\n@@ -71,7 +71,7 @@ set SAVED_DEFAULT_VECTCFLAGS $DEFAULT_VECTCFLAGS\n set DEFAULT_VECTCFLAGS $SAVED_DEFAULT_VECTCFLAGS\n lappend DEFAULT_VECTCFLAGS \"--param max-aliased-vops=0\"\n g++-dg-runtest [lsort [glob -nocomplain $srcdir/$subdir/param-max-aliased*.\\[cS\\]]]  \\\n-        $DEFAULT_VECTCFLAGS\n+        \"\" $DEFAULT_VECTCFLAGS\n \n # Clean up.\n set dg-do-what-default ${save-dg-do-what-default} "}, {"sha": "153fdeb6f1a37f9d826db14064b96e278241ad64", "filename": "gcc/testsuite/g++.old-deja/old-deja.exp", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a03bd0056c58764adeda4797f5829ff031859646/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fold-deja.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a03bd0056c58764adeda4797f5829ff031859646/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fold-deja.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fold-deja.exp?ref=a03bd0056c58764adeda4797f5829ff031859646", "patch": "@@ -31,7 +31,7 @@ dg-init\n set tests [lsort [find $srcdir/$subdir *.C]]\n \n # Main loop.\n-g++-dg-runtest $tests $DEFAULT_CXXFLAGS\n+g++-dg-runtest $tests \"\" $DEFAULT_CXXFLAGS\n \n # All done.\n dg-finish"}, {"sha": "f688142a2945e7ac1149df8d007217891f1b5307", "filename": "gcc/testsuite/gcc.c-torture/compile/compile.exp", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a03bd0056c58764adeda4797f5829ff031859646/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fcompile.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a03bd0056c58764adeda4797f5829ff031859646/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fcompile.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fcompile.exp?ref=a03bd0056c58764adeda4797f5829ff031859646", "patch": "@@ -27,7 +27,7 @@ dg-init\n # Main loop.\n set saved-dg-do-what-default ${dg-do-what-default}\n set dg-do-what-default \"assemble\"\n-gcc-dg-runtest [lsort [glob -nocomplain $srcdir/$subdir/*.\\[cS\\]]] \"-w\"\n+gcc-dg-runtest [lsort [glob -nocomplain $srcdir/$subdir/*.\\[cS\\]]] \"\" \"-w\"\n set dg-do-what-default ${saved-dg-do-what-default}\n \n # All done."}, {"sha": "69534c411ba49e4904dbbcac2eb2c007a57e490c", "filename": "gcc/testsuite/gcc.dg/asan/asan.exp", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a03bd0056c58764adeda4797f5829ff031859646/gcc%2Ftestsuite%2Fgcc.dg%2Fasan%2Fasan.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a03bd0056c58764adeda4797f5829ff031859646/gcc%2Ftestsuite%2Fgcc.dg%2Fasan%2Fasan.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fasan%2Fasan.exp?ref=a03bd0056c58764adeda4797f5829ff031859646", "patch": "@@ -31,7 +31,7 @@ dg-init\n if [asan_init] {\n \n # Main loop.\n-gcc-dg-runtest [lsort [glob -nocomplain $srcdir/$subdir/*.c $srcdir/c-c++-common/asan/*.c]] \"\"\n+gcc-dg-runtest [lsort [glob -nocomplain $srcdir/$subdir/*.c $srcdir/c-c++-common/asan/*.c]] \"\" \"\"\n \n }\n "}, {"sha": "94b7f089ce230dbdbbeceffc7704602ff1468d9b", "filename": "gcc/testsuite/gcc.dg/atomic/atomic.exp", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a03bd0056c58764adeda4797f5829ff031859646/gcc%2Ftestsuite%2Fgcc.dg%2Fatomic%2Fatomic.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a03bd0056c58764adeda4797f5829ff031859646/gcc%2Ftestsuite%2Fgcc.dg%2Fatomic%2Fatomic.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fatomic%2Fatomic.exp?ref=a03bd0056c58764adeda4797f5829ff031859646", "patch": "@@ -26,7 +26,7 @@ load_lib atomic-dg.exp\n dg-init\n if [atomic_init] {\n     # Main loop.\n-    gcc-dg-runtest [lsort [glob -nocomplain $srcdir/$subdir/*.c]] \"\"\n+    gcc-dg-runtest [lsort [glob -nocomplain $srcdir/$subdir/*.c]] \"\" \"\"\n }\n \n # All done."}, {"sha": "290033bf80de03a17eb4bc551b479c7b355978ed", "filename": "gcc/testsuite/gcc.dg/format/format.exp", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a03bd0056c58764adeda4797f5829ff031859646/gcc%2Ftestsuite%2Fgcc.dg%2Fformat%2Fformat.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a03bd0056c58764adeda4797f5829ff031859646/gcc%2Ftestsuite%2Fgcc.dg%2Fformat%2Fformat.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fformat%2Fformat.exp?ref=a03bd0056c58764adeda4797f5829ff031859646", "patch": "@@ -29,6 +29,6 @@ torture-init\n set-torture-options [list { } { -DWIDE } ]\n \n dg-init\n-gcc-dg-runtest [lsort [glob -nocomplain $srcdir/$subdir/*.\\[cS\\]]] \"\"\n+gcc-dg-runtest [lsort [glob -nocomplain $srcdir/$subdir/*.\\[cS\\]]] \"\" \"\"\n torture-finish\n dg-finish"}, {"sha": "324f2990ec2887453e01e28fa01cdc5052eec0db", "filename": "gcc/testsuite/gcc.dg/guality/guality.exp", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a03bd0056c58764adeda4797f5829ff031859646/gcc%2Ftestsuite%2Fgcc.dg%2Fguality%2Fguality.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a03bd0056c58764adeda4797f5829ff031859646/gcc%2Ftestsuite%2Fgcc.dg%2Fguality%2Fguality.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fguality%2Fguality.exp?ref=a03bd0056c58764adeda4797f5829ff031859646", "patch": "@@ -47,8 +47,8 @@ if {[check_guality \"\n     return 0;\n   }\n \"]} {\n-  gcc-dg-runtest [lsort [glob $srcdir/$subdir/*.c]] \"\"\n-  gcc-dg-runtest [lsort [glob $srcdir/c-c++-common/guality/*.c]] \"-Wc++-compat\"\n+  gcc-dg-runtest [lsort [glob $srcdir/$subdir/*.c]] \"\" \"\"\n+  gcc-dg-runtest [lsort [glob $srcdir/c-c++-common/guality/*.c]] \"\" \"-Wc++-compat\"\n }\n \n if [info exists guality_gdb_name] {"}, {"sha": "e46a950b08588b99cb389c09059ca691ed4f3b7d", "filename": "gcc/testsuite/gcc.dg/noncompile/noncompile.exp", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a03bd0056c58764adeda4797f5829ff031859646/gcc%2Ftestsuite%2Fgcc.dg%2Fnoncompile%2Fnoncompile.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a03bd0056c58764adeda4797f5829ff031859646/gcc%2Ftestsuite%2Fgcc.dg%2Fnoncompile%2Fnoncompile.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fnoncompile%2Fnoncompile.exp?ref=a03bd0056c58764adeda4797f5829ff031859646", "patch": "@@ -21,5 +21,5 @@\n load_lib gcc-dg.exp\n \n dg-init\n-gcc-dg-runtest [lsort [glob -nocomplain $srcdir/$subdir/*.\\[cS\\]]] \"\"\n+gcc-dg-runtest [lsort [glob -nocomplain $srcdir/$subdir/*.\\[cS\\]]] \"\" \"\"\n dg-finish"}, {"sha": "7a34e70cd19b1e2c141b5e38df840edd0d4b64ba", "filename": "gcc/testsuite/gcc.dg/simulate-thread/simulate-thread.exp", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a03bd0056c58764adeda4797f5829ff031859646/gcc%2Ftestsuite%2Fgcc.dg%2Fsimulate-thread%2Fsimulate-thread.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a03bd0056c58764adeda4797f5829ff031859646/gcc%2Ftestsuite%2Fgcc.dg%2Fsimulate-thread%2Fsimulate-thread.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fsimulate-thread%2Fsimulate-thread.exp?ref=a03bd0056c58764adeda4797f5829ff031859646", "patch": "@@ -33,8 +33,8 @@ set-torture-options [list \\\n \t{ -O3 -g } ]\n \n if [gdb-exists] {\n-  gcc-dg-runtest [lsort [glob -nocomplain $srcdir/$subdir/*.c]] \"\"\n-  gcc-dg-runtest [lsort [glob $srcdir/c-c++-common/simulate-thread/*.c]] \"\"\n+  gcc-dg-runtest [lsort [glob -nocomplain $srcdir/$subdir/*.c]] \"\" \"\"\n+  gcc-dg-runtest [lsort [glob $srcdir/c-c++-common/simulate-thread/*.c]] \"\" \"\"\n }\n \n torture-finish"}, {"sha": "94c48fc0003210005f99a63041bffba3169ab7f9", "filename": "gcc/testsuite/gcc.dg/torture/dg-torture.exp", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a03bd0056c58764adeda4797f5829ff031859646/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fdg-torture.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a03bd0056c58764adeda4797f5829ff031859646/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fdg-torture.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fdg-torture.exp?ref=a03bd0056c58764adeda4797f5829ff031859646", "patch": "@@ -3,5 +3,5 @@\n load_lib gcc-dg.exp\n \n dg-init\n-gcc-dg-runtest [lsort [glob $srcdir/$subdir/*.c $srcdir/c-c++-common/torture/*.c]] \"\"\n+gcc-dg-runtest [lsort [glob $srcdir/$subdir/*.c $srcdir/c-c++-common/torture/*.c]] \"\" \"\"\n dg-finish"}, {"sha": "64d997517d41edf7928ab0a1f26c45403ef09969", "filename": "gcc/testsuite/gcc.dg/torture/stackalign/stackalign.exp", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a03bd0056c58764adeda4797f5829ff031859646/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fstackalign%2Fstackalign.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a03bd0056c58764adeda4797f5829ff031859646/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fstackalign%2Fstackalign.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fstackalign%2Fstackalign.exp?ref=a03bd0056c58764adeda4797f5829ff031859646", "patch": "@@ -63,7 +63,7 @@ if { [check_effective_target_automatic_stack_alignment] } then {\n # Combine stackalign options with the usual torture optimization flags.\n set-torture-options [concat $DG_TORTURE_OPTIONS $LTO_TORTURE_OPTIONS] $stackalign_options\n \n-gcc-dg-runtest [lsort [glob $srcdir/$subdir/*.c]] \"$default_flags\"\n+gcc-dg-runtest [lsort [glob $srcdir/$subdir/*.c]] \"\" \"$default_flags\"\n \n torture-finish\n dg-finish"}, {"sha": "47cf6f3d0fc10e9f2c255cfb0f7582bd220363ab", "filename": "gcc/testsuite/gcc.dg/torture/tls/tls.exp", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a03bd0056c58764adeda4797f5829ff031859646/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Ftls%2Ftls.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a03bd0056c58764adeda4797f5829ff031859646/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Ftls%2Ftls.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Ftls%2Ftls.exp?ref=a03bd0056c58764adeda4797f5829ff031859646", "patch": "@@ -50,7 +50,7 @@ set-torture-options $TLS_TORTURE_OPTIONS {{}} $LTO_TORTURE_OPTIONS\n \n # Main loop.\n gcc-dg-runtest [lsort [glob -nocomplain $srcdir/$subdir/*.\\[cS\\]]] \\\n-        $DEFAULT_CFLAGS\n+        \"\" $DEFAULT_CFLAGS\n \n # All done.\n torture-finish"}, {"sha": "8fa29bd0bf0384e01ea20f43b930ac58b44d89d0", "filename": "gcc/testsuite/gcc.dg/tsan/tsan.exp", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a03bd0056c58764adeda4797f5829ff031859646/gcc%2Ftestsuite%2Fgcc.dg%2Ftsan%2Ftsan.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a03bd0056c58764adeda4797f5829ff031859646/gcc%2Ftestsuite%2Fgcc.dg%2Ftsan%2Ftsan.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftsan%2Ftsan.exp?ref=a03bd0056c58764adeda4797f5829ff031859646", "patch": "@@ -37,7 +37,7 @@ set-torture-options [list \\\n if [tsan_init] {\n \n # Main loop.\n-gcc-dg-runtest [lsort [glob -nocomplain $srcdir/$subdir/*.c $srcdir/c-c++-common/tsan/*.c]] \"\"\n+gcc-dg-runtest [lsort [glob -nocomplain $srcdir/$subdir/*.c $srcdir/c-c++-common/tsan/*.c]] \"\" \"\"\n \n }\n "}, {"sha": "5518d55843121dfb361e876e57c8c2e700d93e76", "filename": "gcc/testsuite/gcc.dg/ubsan/ubsan.exp", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a03bd0056c58764adeda4797f5829ff031859646/gcc%2Ftestsuite%2Fgcc.dg%2Fubsan%2Fubsan.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a03bd0056c58764adeda4797f5829ff031859646/gcc%2Ftestsuite%2Fgcc.dg%2Fubsan%2Fubsan.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fubsan%2Fubsan.exp?ref=a03bd0056c58764adeda4797f5829ff031859646", "patch": "@@ -27,7 +27,7 @@ dg-init\n if [ubsan_init] {\n \n # Main loop.\n-gcc-dg-runtest [lsort [glob -nocomplain $srcdir/$subdir/*.c $srcdir/c-c++-common/ubsan/*.c]] \"\"\n+gcc-dg-runtest [lsort [glob -nocomplain $srcdir/$subdir/*.c $srcdir/c-c++-common/ubsan/*.c]] \"\" \"\"\n \n }\n "}, {"sha": "63a8c3de97f1fad60e36622de58153963b09d6ef", "filename": "gcc/testsuite/gcc.dg/vmx/vmx.exp", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a03bd0056c58764adeda4797f5829ff031859646/gcc%2Ftestsuite%2Fgcc.dg%2Fvmx%2Fvmx.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a03bd0056c58764adeda4797f5829ff031859646/gcc%2Ftestsuite%2Fgcc.dg%2Fvmx%2Fvmx.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvmx%2Fvmx.exp?ref=a03bd0056c58764adeda4797f5829ff031859646", "patch": "@@ -49,7 +49,7 @@ dg-init\n \n # Main loop.\n gcc-dg-runtest [lsort [glob -nocomplain $srcdir/$subdir/*.c]] \\\n-\t$DEFAULT_VMXCFLAGS\n+\t\"\" $DEFAULT_VMXCFLAGS\n \n # All done.\n dg-finish"}, {"sha": "159a9642b885b2b7a56d3a18ef99853ccf629cc4", "filename": "gcc/testsuite/gcc.misc-tests/i386-prefetch.exp", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a03bd0056c58764adeda4797f5829ff031859646/gcc%2Ftestsuite%2Fgcc.misc-tests%2Fi386-prefetch.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a03bd0056c58764adeda4797f5829ff031859646/gcc%2Ftestsuite%2Fgcc.misc-tests%2Fi386-prefetch.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.misc-tests%2Fi386-prefetch.exp?ref=a03bd0056c58764adeda4797f5829ff031859646", "patch": "@@ -98,16 +98,16 @@ if { [board_info target exists multilib_flags]\n }\n \n set-torture-options $PREFETCH_NONE\n-gcc-dg-runtest [lsort [glob -nocomplain $srcdir/$subdir/i386-pf-none-*.c]] \"\"\n+gcc-dg-runtest [lsort [glob -nocomplain $srcdir/$subdir/i386-pf-none-*.c]] \"\" \"\"\n \n set-torture-options $PREFETCH_SSE\n-gcc-dg-runtest [lsort [glob -nocomplain $srcdir/$subdir/i386-pf-sse-*.c]] \"\"\n+gcc-dg-runtest [lsort [glob -nocomplain $srcdir/$subdir/i386-pf-sse-*.c]] \"\" \"\"\n \n set-torture-options $PREFETCH_3DNOW\n-gcc-dg-runtest [lsort [glob -nocomplain $srcdir/$subdir/i386-pf-3dnow-*.c]] \"\"\n+gcc-dg-runtest [lsort [glob -nocomplain $srcdir/$subdir/i386-pf-3dnow-*.c]] \"\" \"\"\n \n set-torture-options $PREFETCH_ATHLON\n-gcc-dg-runtest [lsort [glob -nocomplain $srcdir/$subdir/i386-pf-athlon-*.c]] \"\"\n+gcc-dg-runtest [lsort [glob -nocomplain $srcdir/$subdir/i386-pf-athlon-*.c]] \"\" \"\"\n \n torture-finish\n dg-finish"}, {"sha": "24563e11372efcda18f65eb143f8910b84c26ca7", "filename": "gcc/testsuite/gcc.target/avr/torture/avr-torture.exp", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a03bd0056c58764adeda4797f5829ff031859646/gcc%2Ftestsuite%2Fgcc.target%2Favr%2Ftorture%2Favr-torture.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a03bd0056c58764adeda4797f5829ff031859646/gcc%2Ftestsuite%2Fgcc.target%2Favr%2Ftorture%2Favr-torture.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Favr%2Ftorture%2Favr-torture.exp?ref=a03bd0056c58764adeda4797f5829ff031859646", "patch": "@@ -55,7 +55,7 @@ set-torture-options $AVR_TORTURE_OPTIONS\n \n \n # Main loop.\n-gcc-dg-runtest [lsort [glob -nocomplain $srcdir/$subdir/*.{\\[cS\\],cpp}]] $DEFAULT_CFLAGS\n+gcc-dg-runtest [lsort [glob -nocomplain $srcdir/$subdir/*.{\\[cS\\],cpp}]] \"\" $DEFAULT_CFLAGS\n \n # Finalize use of torture lists.\n torture-finish"}, {"sha": "c7f3f6b9adb8e14d7aac7b190e77ebf75f43a46d", "filename": "gcc/testsuite/gcc.target/cris/torture/cris-torture.exp", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a03bd0056c58764adeda4797f5829ff031859646/gcc%2Ftestsuite%2Fgcc.target%2Fcris%2Ftorture%2Fcris-torture.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a03bd0056c58764adeda4797f5829ff031859646/gcc%2Ftestsuite%2Fgcc.target%2Fcris%2Ftorture%2Fcris-torture.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fcris%2Ftorture%2Fcris-torture.exp?ref=a03bd0056c58764adeda4797f5829ff031859646", "patch": "@@ -35,7 +35,7 @@ if ![info exists DEFAULT_CFLAGS] then {\n dg-init\n \n # Main loop.\n-gcc-dg-runtest [lsort [glob -nocomplain $srcdir/$subdir/*.\\[cS\\]]] $DEFAULT_CFLAGS\n+gcc-dg-runtest [lsort [glob -nocomplain $srcdir/$subdir/*.\\[cS\\]]] \"\" $DEFAULT_CFLAGS\n \n # All done.\n dg-finish"}, {"sha": "61d8ad5e0f59df3bbde311ccc51df6edbccb12c5", "filename": "gcc/testsuite/gcc.target/frv/frv.exp", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a03bd0056c58764adeda4797f5829ff031859646/gcc%2Ftestsuite%2Fgcc.target%2Ffrv%2Ffrv.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a03bd0056c58764adeda4797f5829ff031859646/gcc%2Ftestsuite%2Fgcc.target%2Ffrv%2Ffrv.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Ffrv%2Ffrv.exp?ref=a03bd0056c58764adeda4797f5829ff031859646", "patch": "@@ -49,5 +49,5 @@ foreach arch $archs {\n }\n \n dg-init\n-gcc-dg-runtest [eval concat $files] \"\"\n+gcc-dg-runtest [eval concat $files] \"\" \"\"\n dg-finish"}, {"sha": "ea402b5856917d6242b24816c38b5e81f3fe4a55", "filename": "gcc/testsuite/gcc.target/i386/math-torture/math-torture.exp", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a03bd0056c58764adeda4797f5829ff031859646/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fmath-torture%2Fmath-torture.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a03bd0056c58764adeda4797f5829ff031859646/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fmath-torture%2Fmath-torture.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fmath-torture%2Fmath-torture.exp?ref=a03bd0056c58764adeda4797f5829ff031859646", "patch": "@@ -65,6 +65,6 @@ torture-init\n set-torture-options $MATH_TORTURE_OPTIONS {{}} $LTO_TORTURE_OPTIONS\n \n dg-init\n-gcc-dg-runtest [lsort [glob $srcdir/$subdir/*.c]] \"\"\n+gcc-dg-runtest [lsort [glob $srcdir/$subdir/*.c]] \"\" \"\"\n torture-finish\n dg-finish"}, {"sha": "d97ee9e8b315266a64e1bc51314e32f60ca47de8", "filename": "gcc/testsuite/gcc.target/microblaze/microblaze.exp", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a03bd0056c58764adeda4797f5829ff031859646/gcc%2Ftestsuite%2Fgcc.target%2Fmicroblaze%2Fmicroblaze.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a03bd0056c58764adeda4797f5829ff031859646/gcc%2Ftestsuite%2Fgcc.target%2Fmicroblaze%2Fmicroblaze.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fmicroblaze%2Fmicroblaze.exp?ref=a03bd0056c58764adeda4797f5829ff031859646", "patch": "@@ -49,7 +49,7 @@ dg-runtest [lsort [glob -nocomplain $srcdir/$subdir/isa/*.\\[cSi\\]]] \\\n ${default_c_flags} \"\"\n \n gcc-dg-runtest [lsort [glob -nocomplain $srcdir/$subdir/others/*.\\[cSi\\]]] \\\n-    \"-mcpu=v6.00.a\" \n+    \"\" \"-mcpu=v6.00.a\"\n \n \n # All done."}, {"sha": "e2b137e47ae0c065b2f3aa24418112eb53ff99b4", "filename": "gcc/testsuite/gcc.target/mips/mips.exp", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a03bd0056c58764adeda4797f5829ff031859646/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fmips.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a03bd0056c58764adeda4797f5829ff031859646/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fmips.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fmips.exp?ref=a03bd0056c58764adeda4797f5829ff031859646", "patch": "@@ -1304,6 +1304,6 @@ proc mips-gcc-dg-test { prog do_what extra_tool_flags } {\n dg-init\n mips-dg-init\n gcc-dg-runtest [lsort [glob -nocomplain $srcdir/$subdir/*.c]] \\\n-    \"-DNOMIPS16=__attribute__((nomips16)) -DNOMICROMIPS=__attribute__((nomicromips)) -DNOCOMPRESSION=__attribute__((nocompression))\"\n+    \"\" \"-DNOMIPS16=__attribute__((nomips16)) -DNOMICROMIPS=__attribute__((nomicromips)) -DNOCOMPRESSION=__attribute__((nocompression))\"\n mips-dg-finish\n dg-finish"}, {"sha": "cad202d68133dcb824c113fffee174abeacd65a1", "filename": "gcc/testsuite/gcc.target/powerpc/powerpc.exp", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a03bd0056c58764adeda4797f5829ff031859646/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fpowerpc.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a03bd0056c58764adeda4797f5829ff031859646/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fpowerpc.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fpowerpc.exp?ref=a03bd0056c58764adeda4797f5829ff031859646", "patch": "@@ -45,7 +45,7 @@ if [check_vmx_hw_available] {\n }\n torture-init\n set-torture-options $SAVRES_TEST_OPTS\n-gcc-dg-runtest [list $srcdir/$subdir/savres.c] $alti\n+gcc-dg-runtest [list $srcdir/$subdir/savres.c] \"\" $alti\n \n # All done.\n torture-finish"}, {"sha": "eacec405c15bf68584f32abbda9bab1ae8f0cc97", "filename": "gcc/testsuite/gcc.target/rx/rx.exp", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a03bd0056c58764adeda4797f5829ff031859646/gcc%2Ftestsuite%2Fgcc.target%2Frx%2Frx.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a03bd0056c58764adeda4797f5829ff031859646/gcc%2Ftestsuite%2Fgcc.target%2Frx%2Frx.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Frx%2Frx.exp?ref=a03bd0056c58764adeda4797f5829ff031859646", "patch": "@@ -37,7 +37,7 @@ dg-init\n set tests [lsort [find $srcdir/$subdir *.\\[cS\\]]]\n \n # Main loop.\n-gcc-dg-runtest $tests $DEFAULT_CFLAGS\n+gcc-dg-runtest $tests \"\" $DEFAULT_CFLAGS\n \n # All done.\n dg-finish"}, {"sha": "11fde8722c189916841457d8b183e610414cb452", "filename": "gcc/testsuite/gcc.target/sh/torture/sh-torture.exp", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a03bd0056c58764adeda4797f5829ff031859646/gcc%2Ftestsuite%2Fgcc.target%2Fsh%2Ftorture%2Fsh-torture.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a03bd0056c58764adeda4797f5829ff031859646/gcc%2Ftestsuite%2Fgcc.target%2Fsh%2Ftorture%2Fsh-torture.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fsh%2Ftorture%2Fsh-torture.exp?ref=a03bd0056c58764adeda4797f5829ff031859646", "patch": "@@ -35,7 +35,7 @@ if ![info exists DEFAULT_CFLAGS] then {\n dg-init\n \n # Main loop.\n-gcc-dg-runtest [lsort [glob -nocomplain $srcdir/$subdir/*.\\[cS\\]]] $DEFAULT_CFLAGS\n+gcc-dg-runtest [lsort [glob -nocomplain $srcdir/$subdir/*.\\[cS\\]]] \"\" $DEFAULT_CFLAGS\n \n # All done.\n dg-finish"}, {"sha": "652ad0c98dc1321a0851fc2a1a7f8d1a9734f267", "filename": "gcc/testsuite/gcc.target/tic6x/builtins/c6x-builtins.exp", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a03bd0056c58764adeda4797f5829ff031859646/gcc%2Ftestsuite%2Fgcc.target%2Ftic6x%2Fbuiltins%2Fc6x-builtins.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a03bd0056c58764adeda4797f5829ff031859646/gcc%2Ftestsuite%2Fgcc.target%2Ftic6x%2Fbuiltins%2Fc6x-builtins.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Ftic6x%2Fbuiltins%2Fc6x-builtins.exp?ref=a03bd0056c58764adeda4797f5829ff031859646", "patch": "@@ -24,6 +24,6 @@ if { ![istarget tic6x-*-*] } then {\n }\n \n dg-init\n-gcc-dg-runtest [lsort [glob $srcdir/$subdir/*.c]] \"\"\n+gcc-dg-runtest [lsort [glob $srcdir/$subdir/*.c]] \"\" \"\"\n dg-finish\n "}, {"sha": "eb985cbd6e2ccbebfb3841a5e08eb62b65389991", "filename": "gcc/testsuite/gfortran.dg/dg.exp", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a03bd0056c58764adeda4797f5829ff031859646/gcc%2Ftestsuite%2Fgfortran.dg%2Fdg.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a03bd0056c58764adeda4797f5829ff031859646/gcc%2Ftestsuite%2Fgfortran.dg%2Fdg.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fdg.exp?ref=a03bd0056c58764adeda4797f5829ff031859646", "patch": "@@ -30,10 +30,10 @@ dg-init\n \n # Main loop.\n gfortran-dg-runtest [lsort \\\n-       [glob -nocomplain $srcdir/$subdir/*.\\[fF\\]{,90,95,03,08} ] ] $DEFAULT_FFLAGS\n+       [glob -nocomplain $srcdir/$subdir/*.\\[fF\\]{,90,95,03,08} ] ] \"\" $DEFAULT_FFLAGS\n \n gfortran-dg-runtest [lsort \\\n-       [glob -nocomplain $srcdir/$subdir/g77/*.\\[fF\\] ] ] $DEFAULT_FFLAGS\n+       [glob -nocomplain $srcdir/$subdir/g77/*.\\[fF\\] ] ] \"\" $DEFAULT_FFLAGS\n \n \n # All done."}, {"sha": "3f40d8ead52536a1e29071859116de415a442280", "filename": "gcc/testsuite/gfortran.dg/gomp/gomp.exp", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a03bd0056c58764adeda4797f5829ff031859646/gcc%2Ftestsuite%2Fgfortran.dg%2Fgomp%2Fgomp.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a03bd0056c58764adeda4797f5829ff031859646/gcc%2Ftestsuite%2Fgfortran.dg%2Fgomp%2Fgomp.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fgomp%2Fgomp.exp?ref=a03bd0056c58764adeda4797f5829ff031859646", "patch": "@@ -30,7 +30,7 @@ dg-init\n \n # Main loop.\n gfortran-dg-runtest [lsort \\\n-       [find $srcdir/$subdir *.\\[fF\\]{,90,95,03,08} ] ] \" -fopenmp\"\n+       [find $srcdir/$subdir *.\\[fF\\]{,90,95,03,08} ] ] \"\" \"-fopenmp\"\n \n # All done.\n dg-finish"}, {"sha": "0d35721ade5e8ab78537c0e9cdf830f441512f31", "filename": "gcc/testsuite/gfortran.dg/graphite/graphite.exp", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a03bd0056c58764adeda4797f5829ff031859646/gcc%2Ftestsuite%2Fgfortran.dg%2Fgraphite%2Fgraphite.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a03bd0056c58764adeda4797f5829ff031859646/gcc%2Ftestsuite%2Fgfortran.dg%2Fgraphite%2Fgraphite.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fgraphite%2Fgraphite.exp?ref=a03bd0056c58764adeda4797f5829ff031859646", "patch": "@@ -47,19 +47,19 @@ set vect_files        [lsort [glob -nocomplain $srcdir/$subdir/vect-*.\\[fF\\]{,90\n \n # Tests to be compiled.\n set dg-do-what-default compile\n-gfortran-dg-runtest $scop_files        \"-O2 -fgraphite -fdump-tree-graphite-all\"\n-gfortran-dg-runtest $id_files          \"-O2 -fgraphite-identity -ffast-math\"\n-gfortran-dg-runtest $interchange_files \"-O2 -floop-interchange -fno-loop-block -fno-loop-strip-mine -ffast-math -fdump-tree-graphite-all\"\n-gfortran-dg-runtest $block_files       \"-O2 -floop-block -fno-loop-strip-mine -fno-loop-interchange -ffast-math -fdump-tree-graphite-all\"\n+gfortran-dg-runtest $scop_files        \"\" \"-O2 -fgraphite -fdump-tree-graphite-all\"\n+gfortran-dg-runtest $id_files          \"\" \"-O2 -fgraphite-identity -ffast-math\"\n+gfortran-dg-runtest $interchange_files \"\" \"-O2 -floop-interchange -fno-loop-block -fno-loop-strip-mine -ffast-math -fdump-tree-graphite-all\"\n+gfortran-dg-runtest $block_files       \"\" \"-O2 -floop-block -fno-loop-strip-mine -fno-loop-interchange -ffast-math -fdump-tree-graphite-all\"\n \n # Vectorizer tests, to be run or compiled, depending on target capabilities.\n if [check_vect_support_and_set_flags] {\n-    gfortran-dg-runtest $vect_files \"-O2 -fgraphite-identity -ftree-vectorize -fno-vect-cost-model -fdump-tree-vect-details -ffast-math\"\n+    gfortran-dg-runtest $vect_files \"\" \"-O2 -fgraphite-identity -ftree-vectorize -fno-vect-cost-model -fdump-tree-vect-details -ffast-math\"\n }\n \n # Tests to be run.\n set dg-do-what-default run\n-gfortran-dg-runtest $run_id_files      \"-O2 -fgraphite-identity\"\n+gfortran-dg-runtest $run_id_files      \"\" \"-O2 -fgraphite-identity\"\n \n # The default action for the rest of the files is 'compile'.\n set dg-do-what-default compile\n@@ -69,7 +69,7 @@ foreach f $interchange_files {lremove wait_to_run_files $f}\n foreach f $scop_files        {lremove wait_to_run_files $f}\n foreach f $run_id_files      {lremove wait_to_run_files $f}\n foreach f $vect_files        {lremove wait_to_run_files $f}\n-gfortran-dg-runtest $wait_to_run_files \"\"\n+gfortran-dg-runtest $wait_to_run_files \"\" \"\"\n \n # Clean up.\n set dg-do-what-default ${save-dg-do-what-default}"}, {"sha": "3f96a04bd26fd4b19468f42e128faeeac370fdcc", "filename": "gcc/testsuite/gfortran.dg/guality/guality.exp", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a03bd0056c58764adeda4797f5829ff031859646/gcc%2Ftestsuite%2Fgfortran.dg%2Fguality%2Fguality.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a03bd0056c58764adeda4797f5829ff031859646/gcc%2Ftestsuite%2Fgfortran.dg%2Fguality%2Fguality.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fguality%2Fguality.exp?ref=a03bd0056c58764adeda4797f5829ff031859646", "patch": "@@ -25,7 +25,7 @@ if ![info exists ::env(GUALITY_GDB_NAME)] {\n     setenv GUALITY_GDB_NAME \"$guality_gdb_name\"\n }\n \n-gfortran-dg-runtest [lsort [glob $srcdir/$subdir/*.\\[fF\\]{,90,95,03,08} ]] \"\"\n+gfortran-dg-runtest [lsort [glob $srcdir/$subdir/*.\\[fF\\]{,90,95,03,08} ]] \"\" \"\"\n \n if [info exists guality_gdb_name] {\n     unsetenv GUALITY_GDB_NAME"}, {"sha": "10075f1df7644e4fc66aee845662271d77a7fa0e", "filename": "gcc/testsuite/gfortran.dg/ieee/ieee.exp", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a03bd0056c58764adeda4797f5829ff031859646/gcc%2Ftestsuite%2Fgfortran.dg%2Fieee%2Fieee.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a03bd0056c58764adeda4797f5829ff031859646/gcc%2Ftestsuite%2Fgfortran.dg%2Fieee%2Fieee.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fieee%2Fieee.exp?ref=a03bd0056c58764adeda4797f5829ff031859646", "patch": "@@ -53,7 +53,7 @@ set options \"$options $target_options\"\n \n # Main loop.\n gfortran-dg-runtest [lsort \\\n-      [find $srcdir/$subdir *.\\[fF\\]{,90,95,03,08} ] ] $options\n+      [find $srcdir/$subdir *.\\[fF\\]{,90,95,03,08} ] ] \"\" $options\n \n # All done.\n dg-finish"}, {"sha": "c6a704f6a33fae831876d54b547b4c1e91ef09a4", "filename": "gcc/testsuite/gfortran.dg/vect/vect.exp", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a03bd0056c58764adeda4797f5829ff031859646/gcc%2Ftestsuite%2Fgfortran.dg%2Fvect%2Fvect.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a03bd0056c58764adeda4797f5829ff031859646/gcc%2Ftestsuite%2Fgfortran.dg%2Fvect%2Fvect.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fvect%2Fvect.exp?ref=a03bd0056c58764adeda4797f5829ff031859646", "patch": "@@ -47,8 +47,8 @@ if ![check_vect_support_and_set_flags] {\n dg-init\n \n # Main loop.\n-gfortran-dg-runtest [lsort [glob -nocomplain $srcdir/$subdir/vect-*.\\[fF\\]{,90,95,03,08} ]] $DEFAULT_VECTCFLAGS\n-gfortran-dg-runtest [lsort [glob -nocomplain $srcdir/$subdir/pr*.\\[fF\\]{,90,95,03,08} ]] $DEFAULT_VECTCFLAGS\n+gfortran-dg-runtest [lsort [glob -nocomplain $srcdir/$subdir/vect-*.\\[fF\\]{,90,95,03,08} ]] \"\" $DEFAULT_VECTCFLAGS\n+gfortran-dg-runtest [lsort [glob -nocomplain $srcdir/$subdir/pr*.\\[fF\\]{,90,95,03,08} ]] \"\" $DEFAULT_VECTCFLAGS\n \n #### Tests with special options\n global SAVED_DEFAULT_VECTCFLAGS"}, {"sha": "5b68b51c5bed407ca046c0b079da237ba100ea15", "filename": "gcc/testsuite/go.dg/dg.exp", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a03bd0056c58764adeda4797f5829ff031859646/gcc%2Ftestsuite%2Fgo.dg%2Fdg.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a03bd0056c58764adeda4797f5829ff031859646/gcc%2Ftestsuite%2Fgo.dg%2Fdg.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.dg%2Fdg.exp?ref=a03bd0056c58764adeda4797f5829ff031859646", "patch": "@@ -30,7 +30,7 @@ dg-init\n \n # Main loop.\n go-dg-runtest [lsort \\\n-       [glob -nocomplain $srcdir/$subdir/*.go ] ] $DEFAULT_GOCFLAGS\n+       [glob -nocomplain $srcdir/$subdir/*.go ] ] \"\" $DEFAULT_GOCFLAGS\n \n # All done.\n dg-finish"}, {"sha": "04fabdbdcbab94f9b48aabc585381249c558d087", "filename": "gcc/testsuite/go.test/go-test.exp", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a03bd0056c58764adeda4797f5829ff031859646/gcc%2Ftestsuite%2Fgo.test%2Fgo-test.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a03bd0056c58764adeda4797f5829ff031859646/gcc%2Ftestsuite%2Fgo.test%2Fgo-test.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Fgo-test.exp?ref=a03bd0056c58764adeda4797f5829ff031859646", "patch": "@@ -152,7 +152,7 @@ proc errchk { test opts } {\n \n     set hold_runtests $runtests\n     set runtests \"go-test.exp\"\n-    go-dg-runtest $filename \"-fno-show-column $DEFAULT_GOCFLAGS $opts\"\n+    go-dg-runtest $filename \"\" \"-fno-show-column $DEFAULT_GOCFLAGS $opts\"\n     set runtests $hold_runtests\n \n     file delete $filename\n@@ -176,7 +176,7 @@ proc go-execute-xfail { test } {\n \n     set hold_runtests $runtests\n     set runtests \"go-test.exp\"\n-    go-dg-runtest $filename \"-w $DEFAULT_GOCFLAGS\"\n+    go-dg-runtest $filename \"\" \"-w $DEFAULT_GOCFLAGS\"\n     set runtests $hold_runtests\n \n     file delete $filename\n@@ -524,7 +524,7 @@ proc go-gc-tests { } {\n \t     || $test_line == \"// echo bug395 is broken  # takes 90+ seconds to break\" } {\n \t    # This is a vanilla compile test.\n \t    set dg-do-what-default \"assemble\"\n-\t    go-dg-runtest $test \"-w $DEFAULT_GOCFLAGS\"\n+\t    go-dg-runtest $test \"\" \"-w $DEFAULT_GOCFLAGS\"\n \t} elseif { $test_line == \"// run\"\n \t\t   || $test_line == \"// \\$G \\$F.go && \\$L \\$F.\\$A && ./\\$A.out\" } {\n \t    # This is a vanilla execution test.\n@@ -533,7 +533,7 @@ proc go-gc-tests { } {\n \t} elseif { $test_line == \"// build\" } {\n \t    # This is a vanilla compile and link test.\n \t    set dg-do-what-default \"link\"\n-\t    go-dg-runtest $test \"-w $DEFAULT_GOCFLAGS\"\n+\t    go-dg-runtest $test \"\" \"-w $DEFAULT_GOCFLAGS\"\n \t} elseif { [string match \"// runoutput*\" $test_line] \\\n \t\t       || ($test_line == \"// \\$G \\$D/\\$F.go && \\$L \\$F.\\$A &&\"\n \t\t\t   && $test_line2 == \"// ./\\$A.out >tmp.go && \\$G tmp.go && \\$L -o \\$A.out1 tmp.\\$A && ./\\$A.out1\") } {"}, {"sha": "308f3062038b6d838b25955a37843def67e836ad", "filename": "gcc/testsuite/lib/g++-dg.exp", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a03bd0056c58764adeda4797f5829ff031859646/gcc%2Ftestsuite%2Flib%2Fg%2B%2B-dg.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a03bd0056c58764adeda4797f5829ff031859646/gcc%2Ftestsuite%2Flib%2Fg%2B%2B-dg.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Flib%2Fg%2B%2B-dg.exp?ref=a03bd0056c58764adeda4797f5829ff031859646", "patch": "@@ -29,7 +29,7 @@ proc g++-dg-prune { system text } {\n \n # Modified dg-runtest that runs tests in both C++98 and C++11 modes\n # unless they specifically specify one or the other.\n-proc g++-dg-runtest { testcases default-extra-flags } {\n+proc g++-dg-runtest { testcases flags default-extra-flags } {\n     global runtests\n \n     foreach test $testcases {\n@@ -53,9 +53,9 @@ proc g++-dg-runtest { testcases default-extra-flags } {\n \n \tset nshort [file tail [file dirname $test]]/[file tail $test]\n \n-\tforeach flags $option_list {\n-\t    verbose \"Testing $nshort, $flags\" 1\n-\t    dg-test $test $flags ${default-extra-flags}\n+\tforeach flags_t $option_list {\n+\t    verbose \"Testing $nshort, $flags $flags_t\" 1\n+\t    dg-test $test \"$flags $flags_t\" ${default-extra-flags}\n \t}\n     }\n }"}, {"sha": "3390caac47bb978aead27116b3f08928bab0d7ba", "filename": "gcc/testsuite/lib/gcc-dg.exp", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a03bd0056c58764adeda4797f5829ff031859646/gcc%2Ftestsuite%2Flib%2Fgcc-dg.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a03bd0056c58764adeda4797f5829ff031859646/gcc%2Ftestsuite%2Flib%2Fgcc-dg.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Flib%2Fgcc-dg.exp?ref=a03bd0056c58764adeda4797f5829ff031859646", "patch": "@@ -337,7 +337,7 @@ proc search_for { file pattern } {\n \n # Modified dg-runtest that can cycle through a list of optimization options\n # as c-torture does.\n-proc gcc-dg-runtest { testcases default-extra-flags } {\n+proc gcc-dg-runtest { testcases flags default-extra-flags } {\n     global runtests\n \n     # Some callers set torture options themselves; don't override those.\n@@ -367,9 +367,9 @@ proc gcc-dg-runtest { testcases default-extra-flags } {\n \n \tset nshort [file tail [file dirname $test]]/[file tail $test]\n \n-\tforeach flags $option_list {\n-\t    verbose \"Testing $nshort, $flags\" 1\n-\t    dg-test $test $flags ${default-extra-flags}\n+\tforeach flags_t $option_list {\n+\t    verbose \"Testing $nshort, $flags $flags_t\" 1\n+\t    dg-test $test \"$flags $flags_t\" ${default-extra-flags}\n \t}\n     }\n "}, {"sha": "7ccaf0db0028770e13587c982b915d0f4e5d046c", "filename": "gcc/testsuite/lib/gfortran-dg.exp", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a03bd0056c58764adeda4797f5829ff031859646/gcc%2Ftestsuite%2Flib%2Fgfortran-dg.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a03bd0056c58764adeda4797f5829ff031859646/gcc%2Ftestsuite%2Flib%2Fgfortran-dg.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Flib%2Fgfortran-dg.exp?ref=a03bd0056c58764adeda4797f5829ff031859646", "patch": "@@ -88,7 +88,7 @@ proc gfortran-dg-prune { system text } {\n \n # Modified dg-runtest that can cycle through a list of optimization options\n # as c-torture does.\n-proc gfortran-dg-runtest { testcases default-extra-flags } {\n+proc gfortran-dg-runtest { testcases flags default-extra-flags } {\n     global runtests\n     global DG_TORTURE_OPTIONS torture_with_loops\n \n@@ -113,9 +113,9 @@ proc gfortran-dg-runtest { testcases default-extra-flags } {\n \tset nshort [file tail [file dirname $test]]/[file tail $test]\n \tlist-module-names $test\n \n-\tforeach flags $option_list {\n-\t    verbose \"Testing $nshort, $flags\" 1\n-\t    dg-test $test $flags ${default-extra-flags}\n+\tforeach flags_t $option_list {\n+\t    verbose \"Testing $nshort, $flags $flags_t\" 1\n+\t    dg-test $test \"$flags $flags_t\" ${default-extra-flags}\n \t    cleanup-modules \"\"\n \t}\n     }"}, {"sha": "f222220f7ef1dbd21a42772fb813974789ce9062", "filename": "gcc/testsuite/lib/go-dg.exp", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a03bd0056c58764adeda4797f5829ff031859646/gcc%2Ftestsuite%2Flib%2Fgo-dg.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a03bd0056c58764adeda4797f5829ff031859646/gcc%2Ftestsuite%2Flib%2Fgo-dg.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Flib%2Fgo-dg.exp?ref=a03bd0056c58764adeda4797f5829ff031859646", "patch": "@@ -36,7 +36,7 @@ proc go-dg-prune { system text } {\n \n # Modified dg-runtest that can cycle through a list of optimization options\n # as c-torture does.\n-proc go-dg-runtest { testcases default-extra-flags } {\n+proc go-dg-runtest { testcases flags default-extra-flags } {\n     global runtests\n     global TORTURE_OPTIONS\n \n@@ -57,9 +57,9 @@ proc go-dg-runtest { testcases default-extra-flags } {\n \n \tset nshort [file tail [file dirname $test]]/[file tail $test]\n \n-\tforeach flags $option_list {\n-\t    verbose \"Testing $nshort, $flags\" 1\n-\t    dg-test $test $flags ${default-extra-flags}\n+\tforeach flags_t $option_list {\n+\t    verbose \"Testing $nshort, $flags $flags_t\" 1\n+\t    dg-test $test \"$flags $flags_t\" ${default-extra-flags}\n \t}\n     }\n }"}, {"sha": "95647fe31f40e6c81ffb7019b0081b12d41ffeab", "filename": "gcc/testsuite/lib/obj-c++-dg.exp", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a03bd0056c58764adeda4797f5829ff031859646/gcc%2Ftestsuite%2Flib%2Fobj-c%2B%2B-dg.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a03bd0056c58764adeda4797f5829ff031859646/gcc%2Ftestsuite%2Flib%2Fobj-c%2B%2B-dg.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Flib%2Fobj-c%2B%2B-dg.exp?ref=a03bd0056c58764adeda4797f5829ff031859646", "patch": "@@ -29,7 +29,7 @@ proc obj-c++-dg-prune { system text } {\n \n # Modified dg-runtest that can cycle through a list of optimization options\n # as c-torture does.\n-proc obj-c++-dg-runtest { testcases default-extra-flags } {\n+proc obj-c++-dg-runtest { testcases flags default-extra-flags } {\n     global runtests\n \n     # Some callers set torture options themselves; don't override those.\n@@ -59,9 +59,9 @@ proc obj-c++-dg-runtest { testcases default-extra-flags } {\n \n \tset nshort [file tail [file dirname $test]]/[file tail $test]\n \n-\tforeach flags $option_list {\n+\tforeach flags_t $option_list {\n \t    # combine flags so that dg-skip & xfail will see the extras.\n-\t    set combined_flags \"$flags ${default-extra-flags}\"\n+\t    set combined_flags \"$flags $flags_t ${default-extra-flags}\"\n \t    verbose \"Testing $nshort, $combined_flags\" 1\n \t    dg-test $test $combined_flags \"\"\n \t}"}, {"sha": "a5a59a8f87e543c184a0cb10bddde0c3982e3f35", "filename": "gcc/testsuite/lib/objc-dg.exp", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a03bd0056c58764adeda4797f5829ff031859646/gcc%2Ftestsuite%2Flib%2Fobjc-dg.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a03bd0056c58764adeda4797f5829ff031859646/gcc%2Ftestsuite%2Flib%2Fobjc-dg.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Flib%2Fobjc-dg.exp?ref=a03bd0056c58764adeda4797f5829ff031859646", "patch": "@@ -30,7 +30,7 @@ proc objc-dg-prune { system text } {\n \n # Modified dg-runtest that can cycle through a list of optimization options\n # as c-torture does.\n-proc objc-dg-runtest { testcases default-extra-flags } {\n+proc objc-dg-runtest { testcases flags default-extra-flags } {\n     global runtests\n \n     # Some callers set torture options themselves; don't override those.\n@@ -60,9 +60,9 @@ proc objc-dg-runtest { testcases default-extra-flags } {\n \n \tset nshort [file tail [file dirname $test]]/[file tail $test]\n \n-\tforeach flags $option_list {\n+\tforeach flags_t $option_list {\n \t    # combine flags so that dg-skip & xfail will see the extras.\n-\t    set combined_flags \"$flags ${default-extra-flags}\"\n+\t    set combined_flags \"$flags $flags_t ${default-extra-flags}\"\n \t    verbose \"Testing $nshort, $combined_flags\" 1\n \t    dg-test $test $combined_flags \"\"\n \t}"}, {"sha": "c3d3f8e29fd127460d8abc99f2b2cb2ba1baf972", "filename": "gcc/testsuite/obj-c++.dg/torture/dg-torture.exp", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a03bd0056c58764adeda4797f5829ff031859646/gcc%2Ftestsuite%2Fobj-c%2B%2B.dg%2Ftorture%2Fdg-torture.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a03bd0056c58764adeda4797f5829ff031859646/gcc%2Ftestsuite%2Fobj-c%2B%2B.dg%2Ftorture%2Fdg-torture.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fobj-c%2B%2B.dg%2Ftorture%2Fdg-torture.exp?ref=a03bd0056c58764adeda4797f5829ff031859646", "patch": "@@ -7,11 +7,11 @@ dg-init\n # Gather a list of all tests.\n set tests [lsort [glob -nocomplain $srcdir/$subdir/*.mm]]\n  \n-obj-c++-dg-runtest $tests \"-fgnu-runtime\"\n+obj-c++-dg-runtest $tests \"\" \"-fgnu-runtime\"\n \n # darwin targets can also run code with the NeXT runtime.\n if [istarget \"*-*-darwin*\" ] {\n-  obj-c++-dg-runtest $tests \"-fnext-runtime\"\n+  obj-c++-dg-runtest $tests \"\" \"-fnext-runtime\"\n }\n \n dg-finish"}, {"sha": "377b88960bd5af4498af44bdd2a0214c2c4cfb10", "filename": "gcc/testsuite/obj-c++.dg/torture/strings/strings.exp", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a03bd0056c58764adeda4797f5829ff031859646/gcc%2Ftestsuite%2Fobj-c%2B%2B.dg%2Ftorture%2Fstrings%2Fstrings.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a03bd0056c58764adeda4797f5829ff031859646/gcc%2Ftestsuite%2Fobj-c%2B%2B.dg%2Ftorture%2Fstrings%2Fstrings.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fobj-c%2B%2B.dg%2Ftorture%2Fstrings%2Fstrings.exp?ref=a03bd0056c58764adeda4797f5829ff031859646", "patch": "@@ -24,11 +24,11 @@ dg-init\n # Gather a list of all tests.\n set tests [lsort [glob -nocomplain $srcdir/$subdir/*.mm]]\n \n-obj-c++-dg-runtest $tests \"-fgnu-runtime\"\n+obj-c++-dg-runtest $tests \"\" \"-fgnu-runtime\"\n \n # Darwin targets can also run code with the NeXT runtime.\n if [istarget \"*-*-darwin*\" ] {\n-  obj-c++-dg-runtest $tests \"-fnext-runtime\"\n+  obj-c++-dg-runtest $tests \"\" \"-fnext-runtime\"\n }\n \n dg-finish"}, {"sha": "2598ba83efbd3c8627648d60c858b8816ee8e4bf", "filename": "gcc/testsuite/obj-c++.dg/torture/tls/tls.exp", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a03bd0056c58764adeda4797f5829ff031859646/gcc%2Ftestsuite%2Fobj-c%2B%2B.dg%2Ftorture%2Ftls%2Ftls.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a03bd0056c58764adeda4797f5829ff031859646/gcc%2Ftestsuite%2Fobj-c%2B%2B.dg%2Ftorture%2Ftls%2Ftls.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fobj-c%2B%2B.dg%2Ftorture%2Ftls%2Ftls.exp?ref=a03bd0056c58764adeda4797f5829ff031859646", "patch": "@@ -6,11 +6,11 @@ dg-init\n # Gather a list of all tests.\n set tests [lsort [glob -nocomplain $srcdir/$subdir/*.mm]]\n \n-obj-c++-dg-runtest $tests \"-fgnu-runtime\"\n+obj-c++-dg-runtest $tests \"\" \"-fgnu-runtime\"\n \n # darwin targets can also run code with the NeXT runtime.\n if [istarget \"*-*-darwin*\" ] {\n-  obj-c++-dg-runtest $tests \"-fnext-runtime\"\n+  obj-c++-dg-runtest $tests \"\" \"-fnext-runtime\"\n }\n \n dg-finish"}, {"sha": "28c2359392b3d82e98e6ad838714c5170d17302f", "filename": "gcc/testsuite/objc.dg/torture/dg-torture.exp", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a03bd0056c58764adeda4797f5829ff031859646/gcc%2Ftestsuite%2Fobjc.dg%2Ftorture%2Fdg-torture.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a03bd0056c58764adeda4797f5829ff031859646/gcc%2Ftestsuite%2Fobjc.dg%2Ftorture%2Fdg-torture.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fobjc.dg%2Ftorture%2Fdg-torture.exp?ref=a03bd0056c58764adeda4797f5829ff031859646", "patch": "@@ -7,11 +7,11 @@ dg-init\n # Gather a list of all tests.\n set tests [lsort [glob -nocomplain $srcdir/$subdir/*.m]]\n \n-objc-dg-runtest $tests \"-fgnu-runtime\"\n+objc-dg-runtest $tests \"\" \"-fgnu-runtime\"\n \n # darwin targets can also run code with the NeXT runtime.\n if [istarget \"*-*-darwin*\" ] {\n-  objc-dg-runtest $tests \"-fnext-runtime\"\n+  objc-dg-runtest $tests \"\" \"-fnext-runtime\"\n }\n \n dg-finish"}, {"sha": "57c0401961d8a1f3350f1187db1a791bf0f482e8", "filename": "gcc/testsuite/objc.dg/torture/strings/strings.exp", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a03bd0056c58764adeda4797f5829ff031859646/gcc%2Ftestsuite%2Fobjc.dg%2Ftorture%2Fstrings%2Fstrings.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a03bd0056c58764adeda4797f5829ff031859646/gcc%2Ftestsuite%2Fobjc.dg%2Ftorture%2Fstrings%2Fstrings.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fobjc.dg%2Ftorture%2Fstrings%2Fstrings.exp?ref=a03bd0056c58764adeda4797f5829ff031859646", "patch": "@@ -24,11 +24,11 @@ dg-init\n # Gather a list of all tests.\n set tests [lsort [glob -nocomplain $srcdir/$subdir/*.m]]\n \n-objc-dg-runtest $tests \"-fgnu-runtime\"\n+objc-dg-runtest $tests \"\" \"-fgnu-runtime\"\n \n # Darwin targets also test with the NeXT runtime.\n if [istarget \"*-*-darwin*\" ] {\n-  objc-dg-runtest $tests \"-fnext-runtime\"\n+  objc-dg-runtest $tests \"\" \"-fnext-runtime\"\n }\n \n dg-finish"}, {"sha": "28c2359392b3d82e98e6ad838714c5170d17302f", "filename": "gcc/testsuite/objc.dg/torture/tls/tls.exp", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a03bd0056c58764adeda4797f5829ff031859646/gcc%2Ftestsuite%2Fobjc.dg%2Ftorture%2Ftls%2Ftls.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a03bd0056c58764adeda4797f5829ff031859646/gcc%2Ftestsuite%2Fobjc.dg%2Ftorture%2Ftls%2Ftls.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fobjc.dg%2Ftorture%2Ftls%2Ftls.exp?ref=a03bd0056c58764adeda4797f5829ff031859646", "patch": "@@ -7,11 +7,11 @@ dg-init\n # Gather a list of all tests.\n set tests [lsort [glob -nocomplain $srcdir/$subdir/*.m]]\n \n-objc-dg-runtest $tests \"-fgnu-runtime\"\n+objc-dg-runtest $tests \"\" \"-fgnu-runtime\"\n \n # darwin targets can also run code with the NeXT runtime.\n if [istarget \"*-*-darwin*\" ] {\n-  objc-dg-runtest $tests \"-fnext-runtime\"\n+  objc-dg-runtest $tests \"\" \"-fnext-runtime\"\n }\n \n dg-finish"}, {"sha": "f5fdccb36c436f01686973dbcb1593e83eb5b0f9", "filename": "libffi/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a03bd0056c58764adeda4797f5829ff031859646/libffi%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a03bd0056c58764adeda4797f5829ff031859646/libffi%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2FChangeLog?ref=a03bd0056c58764adeda4797f5829ff031859646", "patch": "@@ -1,3 +1,8 @@\n+2014-07-04  Thomas Schwinge  <thomas@codesourcery.com>\n+\n+\t* testsuite/lib/libffi.exp (libffi-dg-runtest): Change interface\n+\tmatch to dg-runtest's.\n+\n 2014-05-20  Sebastian Huber  <sebastian.huber@embedded-brains.de>\n \n \t* testsuite/lib/libffi.exp (load_gcc_lib): Register loaded libs."}, {"sha": "ab0e0e092ce86dc5f53462e3fc05fc57d7bed8c2", "filename": "libffi/testsuite/lib/libffi.exp", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a03bd0056c58764adeda4797f5829ff031859646/libffi%2Ftestsuite%2Flib%2Flibffi.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a03bd0056c58764adeda4797f5829ff031859646/libffi%2Ftestsuite%2Flib%2Flibffi.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2Ftestsuite%2Flib%2Flibffi.exp?ref=a03bd0056c58764adeda4797f5829ff031859646", "patch": "@@ -238,7 +238,7 @@ proc search_for { file pattern } {\n \n # Modified dg-runtest that can cycle through a list of optimization options\n # as c-torture does.\n-proc libffi-dg-runtest { testcases default-extra-flags } {\n+proc libffi-dg-runtest { testcases flags default-extra-flags } {\n     global runtests\n \n     foreach test $testcases {\n@@ -259,9 +259,9 @@ proc libffi-dg-runtest { testcases default-extra-flags } {\n \n \tset nshort [file tail [file dirname $test]]/[file tail $test]\n \n-\tforeach flags $option_list {\n-\t    verbose \"Testing $nshort, $flags\" 1\n-\t    dg-test $test $flags ${default-extra-flags}\n+\tforeach flags_t $option_list {\n+\t    verbose \"Testing $nshort, $flags $flags_t\" 1\n+\t    dg-test $test \"$flags $flags_t\" ${default-extra-flags}\n \t}\n     }\n }"}, {"sha": "9e6b6437751db35bae6194f1edb00b82fcfb62f0", "filename": "libgomp/testsuite/libgomp.fortran/fortran.exp", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a03bd0056c58764adeda4797f5829ff031859646/libgomp%2Ftestsuite%2Flibgomp.fortran%2Ffortran.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a03bd0056c58764adeda4797f5829ff031859646/libgomp%2Ftestsuite%2Flibgomp.fortran%2Ffortran.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.fortran%2Ffortran.exp?ref=a03bd0056c58764adeda4797f5829ff031859646", "patch": "@@ -66,7 +66,7 @@ if { $lang_test_file_found } {\n     # For Fortran we're doing torture testing, as Fortran has far more tests\n     # with arrays etc. that testing just -O0 or -O2 is insufficient, that is\n     # typically not the case for C/C++.\n-    gfortran-dg-runtest $tests \"\"\n+    gfortran-dg-runtest $tests \"\" \"\"\n }\n \n # All done."}]}