{"sha": "7e03f004709a6334eed2838e3fb9bdd445364dff", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6N2UwM2YwMDQ3MDlhNjMzNGVlZDI4MzhlM2ZiOWJkZDQ0NTM2NGRmZg==", "commit": {"author": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2012-11-10T20:24:04Z"}, "committer": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2012-11-10T20:24:04Z"}, "message": "reflect: Fix bug comparing struct field types.\n\nFrom-SVN: r193395", "tree": {"sha": "b45bfcd5c4f1c71a53db07760f3f546be38c1435", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b45bfcd5c4f1c71a53db07760f3f546be38c1435"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7e03f004709a6334eed2838e3fb9bdd445364dff", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7e03f004709a6334eed2838e3fb9bdd445364dff", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7e03f004709a6334eed2838e3fb9bdd445364dff", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7e03f004709a6334eed2838e3fb9bdd445364dff/comments", "author": null, "committer": null, "parents": [{"sha": "c76b1db623ae94949458510830ef89d0cd0dd158", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c76b1db623ae94949458510830ef89d0cd0dd158", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c76b1db623ae94949458510830ef89d0cd0dd158"}], "stats": {"total": 17, "additions": 14, "deletions": 3}, "files": [{"sha": "60a958a24d722c0c56a73d54bf6ec4cf607dda2e", "filename": "libgo/go/reflect/type.go", "status": "modified", "additions": 14, "deletions": 3, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7e03f004709a6334eed2838e3fb9bdd445364dff/libgo%2Fgo%2Freflect%2Ftype.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7e03f004709a6334eed2838e3fb9bdd445364dff/libgo%2Fgo%2Freflect%2Ftype.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Freflect%2Ftype.go?ref=7e03f004709a6334eed2838e3fb9bdd445364dff", "patch": "@@ -363,7 +363,7 @@ type Method struct {\n \t// PkgPath is the package path that qualifies a lower case (unexported)\n \t// method name.  It is empty for upper case (exported) method names.\n \t// The combination of PkgPath and Name uniquely identifies a method\n-\t// in a method set. \n+\t// in a method set.\n \t// See http://golang.org/ref/spec#Uniqueness_of_identifiers\n \tName    string\n \tPkgPath string\n@@ -1309,8 +1309,19 @@ func haveIdenticalUnderlyingType(T, V *commonType) bool {\n \t\tfor i := range t.fields {\n \t\t\ttf := &t.fields[i]\n \t\t\tvf := &v.fields[i]\n-\t\t\tif tf.name != vf.name || tf.pkgPath != vf.pkgPath ||\n-\t\t\t\ttf.typ != vf.typ || tf.tag != vf.tag || tf.offset != vf.offset {\n+\t\t\tif tf.name != vf.name && (tf.name == nil || vf.name == nil || *tf.name != *vf.name) {\n+\t\t\t\treturn false\n+\t\t\t}\n+\t\t\tif tf.pkgPath != vf.pkgPath && (tf.pkgPath == nil || vf.pkgPath == nil || *tf.pkgPath != *vf.pkgPath) {\n+\t\t\t\treturn false\n+\t\t\t}\n+\t\t\tif tf.typ != vf.typ {\n+\t\t\t\treturn false\n+\t\t\t}\n+\t\t\tif tf.tag != vf.tag && (tf.tag == nil || vf.tag == nil || *tf.tag != *vf.tag) {\n+\t\t\t\treturn false\n+\t\t\t}\n+\t\t\tif tf.offset != vf.offset {\n \t\t\t\treturn false\n \t\t\t}\n \t\t}"}]}