{"sha": "60afa297a06184e77394362b43acf13a332d64e9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjBhZmEyOTdhMDYxODRlNzczOTQzNjJiNDNhY2YxM2EzMzJkNjRlOQ==", "commit": {"author": {"name": "Dave Love", "email": "d.love@dl.ac.uk", "date": "1998-07-06T09:56:06Z"}, "committer": {"name": "Dave Love", "email": "fx@gcc.gnu.org", "date": "1998-07-06T09:56:06Z"}, "message": "intdoc.in (HOSTNM_func, [...]): Note possible need for -lsocket.\n\n1998-07-06  Dave Love  <d.love@dl.ac.uk>\n\t* intdoc.in (HOSTNM_func, HOSTNM_subr): Note possible need for\n\t-lsocket.\n\nFrom-SVN: r20949", "tree": {"sha": "10d4801c39d0868bdf216d629d0b762115e0529c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/10d4801c39d0868bdf216d629d0b762115e0529c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/60afa297a06184e77394362b43acf13a332d64e9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/60afa297a06184e77394362b43acf13a332d64e9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/60afa297a06184e77394362b43acf13a332d64e9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/60afa297a06184e77394362b43acf13a332d64e9/comments", "author": null, "committer": null, "parents": [{"sha": "83630c20a7d083bd0ed5afef80ed9d31de83dbad", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/83630c20a7d083bd0ed5afef80ed9d31de83dbad", "html_url": "https://github.com/Rust-GCC/gccrs/commit/83630c20a7d083bd0ed5afef80ed9d31de83dbad"}], "stats": {"total": 44, "additions": 32, "deletions": 12}, "files": [{"sha": "ffdf7a0c9394411caa017196541e0e1cea59d8b8", "filename": "gcc/f/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/60afa297a06184e77394362b43acf13a332d64e9/gcc%2Ff%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/60afa297a06184e77394362b43acf13a332d64e9/gcc%2Ff%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ff%2FChangeLog?ref=60afa297a06184e77394362b43acf13a332d64e9", "patch": "@@ -1,3 +1,8 @@\n+1998-07-06  Dave Love  <d.love@dl.ac.uk>\n+\n+\t* intdoc.in (HOSTNM_func, HOSTNM_subr): Note possible need for\n+\t-lsocket.\n+\n 1998-07-05  Dave Love  <d.love@dl.ac.uk>\n \n \t* intdoc.in: Add entry for DATE_AND_TIME."}, {"sha": "1e6720adf3b4f02fba20b41a98def064d07df6c9", "filename": "gcc/f/intdoc.in", "status": "modified", "additions": 11, "deletions": 5, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/60afa297a06184e77394362b43acf13a332d64e9/gcc%2Ff%2Fintdoc.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/60afa297a06184e77394362b43acf13a332d64e9/gcc%2Ff%2Fintdoc.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ff%2Fintdoc.in?ref=60afa297a06184e77394362b43acf13a332d64e9", "patch": "@@ -1058,7 +1058,7 @@ DEFDOC (DATE, \"Get current date as dd-Mon-yy.\", \"\\\n Returns @var{@1@} in the form @samp{@var{dd}-@var{mmm}-@var{yy}},\n representing the numeric day of the month @var{dd}, a three-character\n abbreviation of the month name @var{mmm} and the last two digits of\n-the year @var{yy}, e.g.@ @samp{25-Nov-96}.\n+the year @var{yy}, e.g.@: @samp{25-Nov-96}.\n \n This intrinsic is not recommended, due to the year 2000 approaching.\n @xref{CTime Intrinsic (subroutine)}, for information on obtaining more digits\n@@ -2057,6 +2057,10 @@ DEFDOC (HOSTNM_func, \"Get host name.\", \"\\\n Fills @var{@1@} with the system's host name returned by\n @code{gethostname(2)}, returning 0 on success or a non-zero error code\n (@code{ENOSYS} if the system does not provide @code{gethostname(2)}).\n+\n+On some systems (specifically SCO) it may be necessary to link the\n+`socket' library if you call this routine, i.e.@: add @samp{-lsocket}\n+to the @code{g77} arguments.\n \")\n \n DEFDOC (HOSTNM_subr, \"Get host name.\", \"\\\n@@ -2069,9 +2073,11 @@ If the @var{@2@} argument is supplied, it contains\n Some non-GNU implementations of Fortran provide this intrinsic as\n only a function, not as a subroutine, or do not support the\n (optional) @var{@2@} argument.\n-\")\n \n-/* Fixme: stream I/O */\n+On some systems (specifically SCO) it may be necessary to link the\n+`socket' library if you call this routine, i.e.@: add @samp{-lsocket}\n+to the @code{g77} arguments.\n+\")\n \n DEFDOC (FLUSH, \"Flush buffered output.\", \"\\\n Flushes Fortran unit(s) currently open for output.\n@@ -2428,7 +2434,7 @@ Zeros are shifted in from the opposite end.\n DEFDOC (ISHFTC, \"Circular bit shift.\", \"\\\n The rightmost @var{@3@} bits of the argument @var{@1@}\n are shifted circularly @var{@2@}\n-places, i.e.@ the bits shifted out of one end are shifted into \n+places, i.e.@: the bits shifted out of one end are shifted into \n the opposite end.\n No bits are lost.\n The unshifted bits of the result are the same as\n@@ -2479,7 +2485,7 @@ The time in the form @samp{@var{hhmmss.ss}}: hours, minutes, seconds\n and milliseconds;\n @item @3@\n The difference between local time and UTC (GMT) in the form @var{Shhmm}:\n-sign, hours and minutes, e.g.@ @samp{-0500} (winter in New York);\n+sign, hours and minutes, e.g.@: @samp{-0500} (winter in New York);\n @item @4@\n The year, month of the year, day of the month, time difference in\n minutes from UTC, hour of the day, minutes of the hour and milliseconds"}, {"sha": "cb9b3aa841f2c734ec453eb2861c0fbf11c16a9c", "filename": "gcc/f/intdoc.texi", "status": "modified", "additions": 16, "deletions": 7, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/60afa297a06184e77394362b43acf13a332d64e9/gcc%2Ff%2Fintdoc.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/60afa297a06184e77394362b43acf13a332d64e9/gcc%2Ff%2Fintdoc.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ff%2Fintdoc.texi?ref=60afa297a06184e77394362b43acf13a332d64e9", "patch": "@@ -2964,7 +2964,7 @@ Description:\n Returns @var{Date} in the form @samp{@var{dd}-@var{mmm}-@var{yy}},\n representing the numeric day of the month @var{dd}, a three-character\n abbreviation of the month name @var{mmm} and the last two digits of\n-the year @var{yy}, e.g.@ @samp{25-Nov-96}.\n+the year @var{yy}, e.g.@: @samp{25-Nov-96}.\n \n This intrinsic is not recommended, due to the year 2000 approaching.\n @xref{CTime Intrinsic (subroutine)}, for information on obtaining more digits\n@@ -2979,14 +2979,14 @@ for the current (or any) date.\n \n @noindent\n @example\n-CALL Date_and_Time(@var{Date}, @var{Ftime}, @var{Zone}, @var{Values})\n+CALL Date_and_Time(@var{Date}, @var{Time}, @var{Zone}, @var{Values})\n @end example\n \n @noindent\n @var{Date}: @code{CHARACTER}; scalar; INTENT(OUT).\n \n @noindent\n-@var{Ftime}: @code{CHARACTER}; OPTIONAL; scalar; INTENT(OUT).\n+@var{Time}: @code{CHARACTER}; OPTIONAL; scalar; INTENT(OUT).\n \n @noindent\n @var{Zone}: @code{CHARACTER}; OPTIONAL; scalar; INTENT(OUT).\n@@ -3000,21 +3000,22 @@ Intrinsic groups: @code{f90}.\n @noindent\n Description:\n \n-Returns\n+Returns:\n @table @var\n @item Date\n The date in the form @var{ccyymmdd}: century, year, month and day;\n-@item Ftime\n+@item Time\n The time in the form @samp{@var{hhmmss.ss}}: hours, minutes, seconds\n and milliseconds;\n @item Zone\n The difference between local time and UTC (GMT) in the form @var{Shhmm}:\n-sign, hours and minutes, e.g.@ @samp{-0500} (winter in New York);\n+sign, hours and minutes, e.g.@: @samp{-0500} (winter in New York);\n @item Values\n The year, month of the year, day of the month, time difference in\n minutes from UTC, hour of the day, minutes of the hour and milliseconds\n of the second in successive values of the array.\n @end table\n+\n On systems where a millisecond timer isn't available, the millisecond\n value is returned as zero.\n \n@@ -5453,6 +5454,10 @@ Some non-GNU implementations of Fortran provide this intrinsic as\n only a function, not as a subroutine, or do not support the\n (optional) @var{Status} argument.\n \n+On some systems (specifically SCO) it may be necessary to link the\n+`socket' library if you call this routine, i.e.@: add @samp{-lsocket}\n+to the @code{g77} arguments.\n+\n For information on other intrinsics with the same name:\n @xref{HostNm Intrinsic (function)}.\n \n@@ -5482,6 +5487,10 @@ Fills @var{Name} with the system's host name returned by\n @code{gethostname(2)}, returning 0 on success or a non-zero error code\n (@code{ENOSYS} if the system does not provide @code{gethostname(2)}).\n \n+On some systems (specifically SCO) it may be necessary to link the\n+`socket' library if you call this routine, i.e.@: add @samp{-lsocket}\n+to the @code{g77} arguments.\n+\n For information on other intrinsics with the same name:\n @xref{HostNm Intrinsic (subroutine)}.\n \n@@ -6625,7 +6634,7 @@ Description:\n \n The rightmost @var{Size} bits of the argument @var{I}\n are shifted circularly @var{Shift}\n-places, i.e.@ the bits shifted out of one end are shifted into \n+places, i.e.@: the bits shifted out of one end are shifted into \n the opposite end.\n No bits are lost.\n The unshifted bits of the result are the same as"}]}