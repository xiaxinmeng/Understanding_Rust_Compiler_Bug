{"sha": "07d8ca2d9295b124556561d96571e6062d86d610", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDdkOGNhMmQ5Mjk1YjEyNDU1NjU2MWQ5NjU3MWU2MDYyZDg2ZDYxMA==", "commit": {"author": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1992-09-07T05:56:52Z"}, "committer": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1992-09-07T05:56:52Z"}, "message": "(record_reg_class): For matching operands...\n\n(record_reg_class): For matching operands, handle\ncase where the earlier one is not a pseudo like the case\nwhere the later one is not a pseudo.\n\nFrom-SVN: r2067", "tree": {"sha": "fc0c7d26e34e85d0b30a6e8b71f2f70f4db67c48", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/fc0c7d26e34e85d0b30a6e8b71f2f70f4db67c48"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/07d8ca2d9295b124556561d96571e6062d86d610", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/07d8ca2d9295b124556561d96571e6062d86d610", "html_url": "https://github.com/Rust-GCC/gccrs/commit/07d8ca2d9295b124556561d96571e6062d86d610", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/07d8ca2d9295b124556561d96571e6062d86d610/comments", "author": null, "committer": null, "parents": [{"sha": "21d12b804d4031c15fcc61b1558f74ce9413e123", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/21d12b804d4031c15fcc61b1558f74ce9413e123", "html_url": "https://github.com/Rust-GCC/gccrs/commit/21d12b804d4031c15fcc61b1558f74ce9413e123"}], "stats": {"total": 17, "additions": 17, "deletions": 0}, "files": [{"sha": "343d30393ef81c44727c8672b79ad935afbfd004", "filename": "gcc/regclass.c", "status": "modified", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/07d8ca2d9295b124556561d96571e6062d86d610/gcc%2Fregclass.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/07d8ca2d9295b124556561d96571e6062d86d610/gcc%2Fregclass.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fregclass.c?ref=07d8ca2d9295b124556561d96571e6062d86d610", "patch": "@@ -939,7 +939,24 @@ record_reg_classes (n_alts, n_ops, ops, modes, constraints, insn)\n \t\t  else\n \t\t    alt_cost += copy_cost (op, mode, classes[j], 1);\n \t\t}\n+\t      else if (GET_CODE (ops[j]) != REG\n+\t\t       || REGNO (ops[j]) < FIRST_PSEUDO_REGISTER)\n+\t\t{\n+\t\t  /* This op is a pseudo but the one it matches is not.  */\n+\t\t  \n+\t\t  /* If we can't put the other operand into a register, this\n+\t\t     alternative can't be used.  */\n+\n+\t\t  if (classes[j] == NO_REGS)\n+\t\t    alt_fail = 1;\n \n+\t\t  /* Otherwise, add to the cost of this alternative the cost\n+\t\t     to copy the other operand to the register used for this\n+\t\t     operand.  */\n+\n+\t\t  else\n+\t\t    alt_cost += copy_cost (ops[j], mode, classes[j], 1);\n+\t\t}\n \t      else\n \t\t{\n \t\t  /* The costs of this operand are the same as that of the"}]}