{"sha": "d43242b9b980b8007a466fe894b6249d3c90aeff", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDQzMjQyYjliOTgwYjgwMDdhNDY2ZmU4OTRiNjI0OWQzYzkwYWVmZg==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2016-03-30T14:06:51Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2016-03-30T14:06:51Z"}, "message": "re PR target/70421 (wrong code with v16si vector and useless cast at -O -mavx512f)\n\n\tPR target/70421\n\t* config/i386/i386.c (ix86_expand_vector_set): Fix up argument order\n\tin gen_blendm expander.\n\n\t* gcc.dg/torture/pr70421.c: New test.\n\t* gcc.target/i386/avx512f-pr70421.c: New test.\n\nFrom-SVN: r234569", "tree": {"sha": "385fac95605006d736b1aef7f503e444f91d7178", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/385fac95605006d736b1aef7f503e444f91d7178"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d43242b9b980b8007a466fe894b6249d3c90aeff", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d43242b9b980b8007a466fe894b6249d3c90aeff", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d43242b9b980b8007a466fe894b6249d3c90aeff", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d43242b9b980b8007a466fe894b6249d3c90aeff/comments", "author": null, "committer": null, "parents": [{"sha": "1f73ef6c457df7b00d26dafb68d0a3f5eb28f4f7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1f73ef6c457df7b00d26dafb68d0a3f5eb28f4f7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1f73ef6c457df7b00d26dafb68d0a3f5eb28f4f7"}], "stats": {"total": 58, "additions": 56, "deletions": 2}, "files": [{"sha": "db870ff9689c0650d45b1835cd1f6f4c2b99b77b", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d43242b9b980b8007a466fe894b6249d3c90aeff/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d43242b9b980b8007a466fe894b6249d3c90aeff/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=d43242b9b980b8007a466fe894b6249d3c90aeff", "patch": "@@ -1,11 +1,17 @@\n+2016-03-30  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR target/70421\n+\t* config/i386/i386.c (ix86_expand_vector_set): Fix up argument order\n+\tin gen_blendm expander.\n+\n 2016-03-30  Nick Clifton  <nickc@redhat.com>\n \n \tPR target/62254\n \t* config/arm/arm.c (arm_reload_out_hi): Add code to handle the\n \tcase where we are already provided with an SImode SUBREG.\n \n 2016-03-30  Michael Matz  <matz@suse.de>\n-\tRichard Biener  <rguenther@suse.de>\n+\t    Richard Biener  <rguenther@suse.de>\n \n \tPR ipa/12392\n \t* ipa-polymorphic-call.c (struct type_change_info): Change"}, {"sha": "7a75a31741b03af588cc38b4d6e4e65ae20b9586", "filename": "gcc/config/i386/i386.c", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d43242b9b980b8007a466fe894b6249d3c90aeff/gcc%2Fconfig%2Fi386%2Fi386.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d43242b9b980b8007a466fe894b6249d3c90aeff/gcc%2Fconfig%2Fi386%2Fi386.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.c?ref=d43242b9b980b8007a466fe894b6249d3c90aeff", "patch": "@@ -46932,7 +46932,12 @@ ix86_expand_vector_set (bool mmx_ok, rtx target, rtx val, int elt)\n     {\n       tmp = gen_reg_rtx (mode);\n       emit_insn (gen_rtx_SET (tmp, gen_rtx_VEC_DUPLICATE (mode, val)));\n-      emit_insn (gen_blendm (target, tmp, target,\n+      /* The avx512*_blendm<mode> expanders have different operand order\n+\t from VEC_MERGE.  In VEC_MERGE, the first input operand is used for\n+\t elements where the mask is set and second input operand otherwise,\n+\t in {sse,avx}*_*blend* the first input operand is used for elements\n+\t where the mask is clear and second input operand otherwise.  */\n+      emit_insn (gen_blendm (target, target, tmp,\n \t\t\t     force_reg (mmode,\n \t\t\t\t\tgen_int_mode (1 << elt, mmode))));\n     }"}, {"sha": "b2dfebfa0a75b6293705dbc58ebbe6bd6e2114f5", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d43242b9b980b8007a466fe894b6249d3c90aeff/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d43242b9b980b8007a466fe894b6249d3c90aeff/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=d43242b9b980b8007a466fe894b6249d3c90aeff", "patch": "@@ -1,3 +1,9 @@\n+2016-03-30  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR target/70421\n+\t* gcc.dg/torture/pr70421.c: New test.\n+\t* gcc.target/i386/avx512f-pr70421.c: New test.\n+\n 2016-03-30  Patrick Palka  <ppalka@gcc.gnu.org>\n \n \tPR tree-optimization/59124"}, {"sha": "8f97acd42bef27734dc394a90d614024a75ff1a0", "filename": "gcc/testsuite/gcc.dg/torture/pr70421.c", "status": "added", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d43242b9b980b8007a466fe894b6249d3c90aeff/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr70421.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d43242b9b980b8007a466fe894b6249d3c90aeff/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr70421.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr70421.c?ref=d43242b9b980b8007a466fe894b6249d3c90aeff", "patch": "@@ -0,0 +1,22 @@\n+/* PR target/70421 */\n+/* { dg-do run } */\n+/* { dg-additional-options \"-Wno-psabi -w\" } */\n+\n+typedef unsigned V __attribute__ ((vector_size (64)));\n+\n+unsigned __attribute__ ((noinline, noclone))\n+foo (unsigned x, V u, V v)\n+{\n+  v[1] ^= v[2];\n+  x ^= ((V) v)[u[0]];\n+  return x;\n+}\n+\n+int\n+main ()\n+{\n+  unsigned x = foo (0x10, (V) { 1 }, (V) { 0x100, 0x1000, 0x10000 });\n+  if (x != 0x11010)\n+    __builtin_abort ();\n+  return 0;\n+}"}, {"sha": "60e1e2a886331cf7c59f0649d11a5feecf402067", "filename": "gcc/testsuite/gcc.target/i386/avx512f-pr70421.c", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d43242b9b980b8007a466fe894b6249d3c90aeff/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-pr70421.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d43242b9b980b8007a466fe894b6249d3c90aeff/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-pr70421.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-pr70421.c?ref=d43242b9b980b8007a466fe894b6249d3c90aeff", "patch": "@@ -0,0 +1,15 @@\n+/* PR target/70421 */\n+/* { dg-do run } */\n+/* { dg-require-effective-target avx512f } */\n+/* { dg-options \"-O2 -mavx512f\" } */\n+\n+#include \"avx512f-check.h\"\n+\n+#define main() do_main()\n+#include \"../../gcc.dg/torture/pr70421.c\"\n+\n+static void\n+avx512f_test (void)\n+{\n+  do_main ();\n+}"}]}