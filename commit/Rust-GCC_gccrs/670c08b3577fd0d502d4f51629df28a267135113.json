{"sha": "670c08b3577fd0d502d4f51629df28a267135113", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjcwYzA4YjM1NzdmZDBkNTAyZDRmNTE2MjlkZjI4YTI2NzEzNTExMw==", "commit": {"author": {"name": "David Malcolm", "email": "dmalcolm@redhat.com", "date": "2015-01-19T19:15:10Z"}, "committer": {"name": "David Malcolm", "email": "dmalcolm@gcc.gnu.org", "date": "2015-01-19T19:15:10Z"}, "message": "Fix int vs bool issue in jit.dg/test-arith-overflow.c\n\ngcc/testsuite/ChangeLog:\n\t* jit.dg/test-arith-overflow.c: Include stdbool.h.\n\t(create_overflow_fn): Update comment to clarify that\n\tthe third param of the created function is a bool *, not\n\tan int *.\n\t(verify_int_overflow_fn): Convert param \"expected_ovf\" from\n\tint to bool.  Update third param of \"overflow_fn_type\" from int *\n\tto bool *.  Update local \"actual_ovf\" from int to bool.\n\t(verify_uint_overflow_fn): Likewise.\n\nFrom-SVN: r219856", "tree": {"sha": "70976aba270acb79239683a1dd36261e1c542caf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/70976aba270acb79239683a1dd36261e1c542caf"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/670c08b3577fd0d502d4f51629df28a267135113", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/670c08b3577fd0d502d4f51629df28a267135113", "html_url": "https://github.com/Rust-GCC/gccrs/commit/670c08b3577fd0d502d4f51629df28a267135113", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/670c08b3577fd0d502d4f51629df28a267135113/comments", "author": {"login": "davidmalcolm", "id": 1553248, "node_id": "MDQ6VXNlcjE1NTMyNDg=", "avatar_url": "https://avatars.githubusercontent.com/u/1553248?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidmalcolm", "html_url": "https://github.com/davidmalcolm", "followers_url": "https://api.github.com/users/davidmalcolm/followers", "following_url": "https://api.github.com/users/davidmalcolm/following{/other_user}", "gists_url": "https://api.github.com/users/davidmalcolm/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidmalcolm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidmalcolm/subscriptions", "organizations_url": "https://api.github.com/users/davidmalcolm/orgs", "repos_url": "https://api.github.com/users/davidmalcolm/repos", "events_url": "https://api.github.com/users/davidmalcolm/events{/privacy}", "received_events_url": "https://api.github.com/users/davidmalcolm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "29c38396b50299b35f21765a5d44f3aa7ad07602", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/29c38396b50299b35f21765a5d44f3aa7ad07602", "html_url": "https://github.com/Rust-GCC/gccrs/commit/29c38396b50299b35f21765a5d44f3aa7ad07602"}], "stats": {"total": 27, "additions": 20, "deletions": 7}, "files": [{"sha": "03da146fe4a2fc82fa7be72f68e85709523c8823", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/670c08b3577fd0d502d4f51629df28a267135113/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/670c08b3577fd0d502d4f51629df28a267135113/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=670c08b3577fd0d502d4f51629df28a267135113", "patch": "@@ -1,3 +1,14 @@\n+2015-01-19  David Malcolm  <dmalcolm@redhat.com>\n+\n+\t* jit.dg/test-arith-overflow.c: Include stdbool.h.\n+\t(create_overflow_fn): Update comment to clarify that\n+\tthe third param of the created function is a bool *, not\n+\tan int *.\n+\t(verify_int_overflow_fn): Convert param \"expected_ovf\" from\n+\tint to bool.  Update third param of \"overflow_fn_type\" from int *\n+\tto bool *.  Update local \"actual_ovf\" from int to bool.\n+\t(verify_uint_overflow_fn): Likewise.\n+\n 2015-01-19  Martin Liska  <mliska@suse.cz>\n \n \t* gcc.dg/ipa/ipa-icf-33.c: New test."}, {"sha": "ac2fa361089d24d845c05136b0b1f12aa13b8f26", "filename": "gcc/testsuite/jit.dg/test-arith-overflow.c", "status": "modified", "additions": 9, "deletions": 7, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/670c08b3577fd0d502d4f51629df28a267135113/gcc%2Ftestsuite%2Fjit.dg%2Ftest-arith-overflow.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/670c08b3577fd0d502d4f51629df28a267135113/gcc%2Ftestsuite%2Fjit.dg%2Ftest-arith-overflow.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fjit.dg%2Ftest-arith-overflow.c?ref=670c08b3577fd0d502d4f51629df28a267135113", "patch": "@@ -2,6 +2,7 @@\n #include <stdio.h>\n #include <string.h>\n #include <limits.h>\n+#include <stdbool.h>\n \n #include \"libgccjit.h\"\n \n@@ -16,7 +17,7 @@ create_overflow_fn (gcc_jit_context *ctxt,\n   /* Create the equivalent of this C:\n \n        int\n-       test_overflow_T_OP (T x, T y, int *ovf)\n+       test_overflow_T_OP (T x, T y, bool *ovf)\n        {\n \t T result;\n \t result = x OP y;\n@@ -129,16 +130,16 @@ verify_int_overflow_fn (gcc_jit_result *jit_result,\n \t\t\tconst char *funcname,\n \t\t\tint x, int y,\n \t\t\tint expected_result,\n-\t\t\tint expected_ovf)\n+\t\t\tbool expected_ovf)\n {\n   CHECK_NON_NULL (jit_result);\n-  typedef int (*overflow_fn_type) (int, int, int *);\n+  typedef int (*overflow_fn_type) (int, int, bool *);\n   overflow_fn_type fn =\n     (overflow_fn_type)gcc_jit_result_get_code (jit_result, funcname);\n   CHECK_NON_NULL (fn);\n \n   /* Call the function:  */\n-  int actual_ovf = 0;\n+  bool actual_ovf = 0;\n   int actual_result = fn (x, y, &actual_ovf);\n   note (\"%s (%d, %d) returned: %d with ovf: %d\",\n \tfuncname, x, y, actual_result, actual_ovf);\n@@ -151,16 +152,17 @@ verify_uint_overflow_fn (gcc_jit_result *jit_result,\n \t\t\t const char *funcname,\n \t\t\t unsigned int x, unsigned int y,\n \t\t\t unsigned int expected_result,\n-\t\t\t int expected_ovf)\n+\t\t\t bool expected_ovf)\n {\n   CHECK_NON_NULL (jit_result);\n-  typedef unsigned int (*overflow_fn_type) (unsigned int, unsigned int, int *);\n+  typedef unsigned int (*overflow_fn_type) (unsigned int, unsigned int,\n+\t\t\t\t\t    bool *);\n   overflow_fn_type fn =\n     (overflow_fn_type)gcc_jit_result_get_code (jit_result, funcname);\n   CHECK_NON_NULL (fn);\n \n   /* Call the function:  */\n-  int actual_ovf = 0;\n+  bool actual_ovf = 0;\n   unsigned int actual_result = fn (x, y, &actual_ovf);\n   note (\"%s (%d, %d) returned: %d with ovf: %d\",\n \tfuncname, x, y, actual_result, actual_ovf);"}]}