{"sha": "d1838621508795fc4929726c5044f7b6da76b70b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDE4Mzg2MjE1MDg3OTVmYzQ5Mjk3MjZjNTA0NGY3YjZkYTc2YjcwYg==", "commit": {"author": {"name": "Richard Henderson", "email": "rth@redhat.com", "date": "2004-12-09T22:55:41Z"}, "committer": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "2004-12-09T22:55:41Z"}, "message": "re PR c/18282 (PR c/17384 patch causes regression from 3.4.2)\n\n        PR c/18282\n        * attribs.c (decl_attributes): Use relayout_decl.\n        * c-common.c (handle_mode_attribute): Copy all relevant type\n        parameters from the new underlying integral type.\n\nFrom-SVN: r91978", "tree": {"sha": "87730571a2c8621852cfb33bbffd30e0cd8904e5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/87730571a2c8621852cfb33bbffd30e0cd8904e5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d1838621508795fc4929726c5044f7b6da76b70b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d1838621508795fc4929726c5044f7b6da76b70b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d1838621508795fc4929726c5044f7b6da76b70b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d1838621508795fc4929726c5044f7b6da76b70b/comments", "author": null, "committer": null, "parents": [{"sha": "88b3da50a83f81da86e28d0b99886fa8b819ead4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/88b3da50a83f81da86e28d0b99886fa8b819ead4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/88b3da50a83f81da86e28d0b99886fa8b819ead4"}], "stats": {"total": 27, "additions": 18, "deletions": 9}, "files": [{"sha": "bf6cf528f20a7f191515cd160c2c4a725e313152", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d1838621508795fc4929726c5044f7b6da76b70b/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d1838621508795fc4929726c5044f7b6da76b70b/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=d1838621508795fc4929726c5044f7b6da76b70b", "patch": "@@ -1,3 +1,10 @@\n+2004-12-09  Richard Henderson  <rth@redhat.com>\n+\n+\tPR c/18282\n+\t* attribs.c (decl_attributes): Use relayout_decl.\n+\t* c-common.c (handle_mode_attribute): Copy all relevant type\n+\tparameters from the new underlying integral type.\n+\n 2004-12-09  Richard Henderson  <rth@redhat.com>\n \n \t* c-common.c (shorten_compare): Don't special-case min/maxval"}, {"sha": "fd11a96700f773d484f1688b8ae76baa8b488c4a", "filename": "gcc/attribs.c", "status": "modified", "additions": 1, "deletions": 7, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d1838621508795fc4929726c5044f7b6da76b70b/gcc%2Fattribs.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d1838621508795fc4929726c5044f7b6da76b70b/gcc%2Fattribs.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fattribs.c?ref=d1838621508795fc4929726c5044f7b6da76b70b", "patch": "@@ -259,13 +259,7 @@ decl_attributes (tree *node, tree attributes, int flags)\n \t  && (TREE_CODE (*node) == VAR_DECL\n \t      || TREE_CODE (*node) == PARM_DECL\n \t      || TREE_CODE (*node) == RESULT_DECL))\n-\t{\n-\t  /* Force a recalculation of mode and size.  */\n-\t  DECL_MODE (*node) = VOIDmode;\n-\t  DECL_SIZE (*node) = 0;\n-\n-\t  layout_decl (*node, 0);\n-\t}\n+\trelayout_decl (*node);\n \n       if (!no_add_attrs)\n \t{"}, {"sha": "d58d326b5f4d532105fd38ff37e44b3b3765de2d", "filename": "gcc/c-common.c", "status": "modified", "additions": 10, "deletions": 2, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d1838621508795fc4929726c5044f7b6da76b70b/gcc%2Fc-common.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d1838621508795fc4929726c5044f7b6da76b70b/gcc%2Fc-common.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-common.c?ref=d1838621508795fc4929726c5044f7b6da76b70b", "patch": "@@ -4302,7 +4302,17 @@ handle_mode_attribute (tree *node, tree name, tree args,\n \n \t  if (!(flags & (int) ATTR_FLAG_TYPE_IN_PLACE))\n \t    type = build_variant_type_copy (type);\n+\n+\t  /* We cannot use layout_type here, because that will attempt\n+\t     to re-layout all variants, corrupting our original.  */\n \t  TYPE_PRECISION (type) = TYPE_PRECISION (typefm);\n+\t  TYPE_MIN_VALUE (type) = TYPE_MIN_VALUE (typefm);\n+\t  TYPE_MAX_VALUE (type) = TYPE_MAX_VALUE (typefm);\n+\t  TYPE_SIZE (type) = TYPE_SIZE (typefm);\n+\t  TYPE_SIZE_UNIT (type) = TYPE_SIZE_UNIT (typefm);\n+\t  if (!TYPE_USER_ALIGN (type))\n+\t    TYPE_ALIGN (type) = TYPE_ALIGN (typefm);\n+\n \t  typefm = type;\n \t}\n       else if (VECTOR_MODE_P (mode)\n@@ -4314,8 +4324,6 @@ handle_mode_attribute (tree *node, tree name, tree args,\n \t}\n \n       *node = typefm;\n-\n-      /* No need to layout the type here.  The caller should do this.  */\n     }\n \n   return NULL_TREE;"}]}