{"sha": "e1a3a7d02bb4a49b51b8b8ab6f0737d6f6616de0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTFhM2E3ZDAyYmI0YTQ5YjUxYjhiOGFiNmYwNzM3ZDZmNjYxNmRlMA==", "commit": {"author": {"name": "Michael Koch", "email": "konqueror@gmx.de", "date": "2003-09-11T17:25:47Z"}, "committer": {"name": "Michael Koch", "email": "mkoch@gcc.gnu.org", "date": "2003-09-11T17:25:47Z"}, "message": "acconfig.h: Removed most items.\n\n2003-09-11  Michael Koch  <konqueror@gmx.de>\n\n\t* acconfig.h: Removed most items.\n\t* configure.in: Added descriptions to AC_DEFINE macros that where in\n\tacconfig.h before.\n\t* include/config.h.in: Regenerated.\n\nFrom-SVN: r71309", "tree": {"sha": "d2714de6b0edc635ea03cd03485ba089b695c924", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d2714de6b0edc635ea03cd03485ba089b695c924"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e1a3a7d02bb4a49b51b8b8ab6f0737d6f6616de0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e1a3a7d02bb4a49b51b8b8ab6f0737d6f6616de0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e1a3a7d02bb4a49b51b8b8ab6f0737d6f6616de0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e1a3a7d02bb4a49b51b8b8ab6f0737d6f6616de0/comments", "author": null, "committer": null, "parents": [{"sha": "130de160707667f91c5367e154573a60dfc329cc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/130de160707667f91c5367e154573a60dfc329cc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/130de160707667f91c5367e154573a60dfc329cc"}], "stats": {"total": 578, "additions": 226, "deletions": 352}, "files": [{"sha": "de054fde953b67f180dd0212a530fa4811754310", "filename": "libjava/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e1a3a7d02bb4a49b51b8b8ab6f0737d6f6616de0/libjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e1a3a7d02bb4a49b51b8b8ab6f0737d6f6616de0/libjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog?ref=e1a3a7d02bb4a49b51b8b8ab6f0737d6f6616de0", "patch": "@@ -1,3 +1,10 @@\n+2003-09-11  Michael Koch  <konqueror@gmx.de>\n+\n+\t* acconfig.h: Removed most items.\n+\t* configure.in: Added descriptions to AC_DEFINE macros that where in\n+\tacconfig.h before.\n+\t* include/config.h.in: Regenerated.\n+\n 2003-09-11  Sascha Brawer  <brawer@dandelis.ch>\n \n \t* java/awt/Toolkit.java (getSystemEventQueue): Call SecurityManager"}, {"sha": "7055826b29be06e6236047059b3025fb204ac3af", "filename": "libjava/acconfig.h", "status": "modified", "additions": 0, "deletions": 163, "changes": 163, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e1a3a7d02bb4a49b51b8b8ab6f0737d6f6616de0/libjava%2Facconfig.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e1a3a7d02bb4a49b51b8b8ab6f0737d6f6616de0/libjava%2Facconfig.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Facconfig.h?ref=e1a3a7d02bb4a49b51b8b8ab6f0737d6f6616de0", "patch": "@@ -1,165 +1,2 @@\n-/* Name of this package.  */\n-#undef PACKAGE\n-\n-/* Version number of this package.  */\n-#undef VERSION\n-\n-/* Define this if you want runtime debugging enabled.  */\n-#undef DEBUG\n-\n-/* Define if using POSIX threads that have the mutexattr functions.  */\n-#undef HAVE_PTHREAD_MUTEXATTR_INIT\n-\n-/* Define this if you prefer size over speed for java.lang.Character.  */\n-#undef COMPACT_CHARACTER\n-\n-/* Define if you have memcpy.  */\n-#undef HAVE_MEMCPY\n-\n-/* Define if you have memmove.  */\n-#undef HAVE_MEMMOVE\n-\n-/* Define if you have strerror.  */\n-#undef HAVE_STRERROR\n-\n-/* Define if you have fsync.  */\n-#undef HAVE_FSYNC\n-\n-/* Define if you have sleep.  */\n-#undef HAVE_SLEEP\n-\n-/* Define if you have int32_t and uint32_t. */\n-#undef HAVE_INT32_DEFINED\n-\n-/* Define if you have u_int32_t */\n-#undef HAVE_BSD_INT32_DEFINED\n-\n-/* Define if you're running eCos. */\n-#undef ECOS\n-\n-/* */\n-#undef HAVE_LOCALTIME\n-\n-/* */\n-#undef HAVE_MKTIME\n-\n-/* Define if using POSIX threads on Linux.  */\n-#undef LINUX_THREADS\n-\n-/* Define if you have the `gmtime_r' function.  */\n-#undef HAVE_GMTIME_R\n-\n-/* Define if you have the `localtime_r' function.  */\n-#undef HAVE_LOCALTIME_R\n-\n /* Define to `int' if `ssize_t' is not defined.  */\n #undef ssize_t\n-\n-/* Define to 1 if `in_addr_t' is defined in sys/types.h or\n-   netinet/in.h.  */\n-#undef HAVE_IN_ADDR_T\n-\n-/* Define if inet6 structures are defined in netinet/in.h.  */\n-#undef HAVE_INET6\n-\n-/* Define if struct ip_mreq is defined in netinet/in.h.  */\n-#undef HAVE_STRUCT_IP_MREQ\n-\n-/* Define if struct ipv6_mreq is defined in netinet/in.h.  */\n-#undef HAVE_STRUCT_IPV6_MREQ\n-\n-/* Define it socklen_t typedef is in sys/socket.h.  */\n-#undef HAVE_SOCKLEN_T\n-\n-/* Define if Boehm GC in use.  */\n-#undef HAVE_BOEHM_GC\n-\n-/* Define if gethostname is declared in <unistd.h>.  */\n-#undef HAVE_GETHOSTNAME_DECL\n-\n-/* Define if gethostbyname_r returns `int'.  */\n-#undef GETHOSTBYNAME_R_RETURNS_INT\n-\n-/* Define if gethostbyaddr_r returns `int'.  */\n-#undef GETHOSTBYADDR_R_RETURNS_INT\n-\n-/* Define if usleep is declared in <unistd.h>.  */\n-#undef HAVE_USLEEP_DECL\n-\n-/* Define if struct tm has tm_gmtoff field.  */\n-#undef STRUCT_TM_HAS_GMTOFF\n-\n-/* Define if global `timezone' exists.  */\n-#undef HAVE_TIMEZONE\n-\n-/* Define to version of GCJ in use.  */\n-#undef GCJVERSION\n-\n-/* Define if if the synchronization code should try to avoid pthread_self \n-   calls by caching thread IDs in a hashtable.  */\n-#undef SLOW_PTHREAD_SELF\n-\n-/* Define if you have the appropriate function.  */\n-#undef HAVE_ACCESS\n-#undef HAVE_STAT\n-#undef HAVE_MKDIR\n-#undef HAVE_RENAME\n-#undef HAVE_RMDIR\n-#undef HAVE_UNLINK\n-#undef HAVE_REALPATH\n-#undef HAVE_READDIR_R\n-#undef HAVE_GETHOSTBYNAME_R\n-#undef HAVE_GETHOSTBYADDR_R\n-#undef HAVE_FTRUNCATE\n-\n-/* Define if you want a bytecode interpreter.  */\n-#undef INTERPRETER\n-\n-/* Define if pthread_mutex_t has m_count member.  */\n-#undef PTHREAD_MUTEX_HAVE_M_COUNT\n-\n-/* Define if pthread_mutex_t has __m_count member.  */\n-#undef PTHREAD_MUTEX_HAVE___M_COUNT\n-\n-/* Define if java.net native functions should be stubbed out.  */\n-#undef DISABLE_JAVA_NET\n-\n-/* Define if we're to use libffi.  */\n-#undef USE_LIBFFI\n-\n-/* Define if system properties shouldn't be read from\n-   getenv(\"GCJ_PROPERTIES\").  */\n-#undef DISABLE_GETENV_PROPERTIES\n-\n-/* Define if we should ignore arguments to main().  */\n-#undef DISABLE_MAIN_ARGS\n-\n-/* Define if using setjmp/longjmp exceptions.  */\n-#undef SJLJ_EXCEPTIONS\n-\n-/* Define if you have /proc/self/exe */\n-#undef HAVE_PROC_SELF_EXE\n- \n-/* Define if you have dladdr() */\n-#undef HAVE_DLADDR\n- \n-/* Define if tzname is missing.  */\n-#undef NO_TZNAME\n-\n-/* Define if getuid() and friends are missing.  */\n-#undef NO_GETUID\n-\n-/* Define if libltdl is in use.  */\n-#undef USE_LTDL\n-\n-/* Define if you have working iconv() function.  */\n-#undef HAVE_ICONV\n-\n-/* Define if you are using JVMPI.  */\n-#undef ENABLE_JVMPI\n-\n-/* Define if your platform has a working backtrace() function.  */\n-#undef HAVE_BACKTRACE\n-\n-/* Define if your platform has the global _timezone variable.  */\n-#undef HAVE_UNDERSCORE_TIMEZONE"}, {"sha": "416fb3d43b069f8759d12872be79c19602f36bf7", "filename": "libjava/configure.in", "status": "modified", "additions": 72, "deletions": 49, "changes": 121, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e1a3a7d02bb4a49b51b8b8ab6f0737d6f6616de0/libjava%2Fconfigure.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e1a3a7d02bb4a49b51b8b8ab6f0737d6f6616de0/libjava%2Fconfigure.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fconfigure.in?ref=e1a3a7d02bb4a49b51b8b8ab6f0737d6f6616de0", "patch": "@@ -28,7 +28,7 @@ if test \"x${with_newlib}\" = \"x\" || test \"x${with_newlib}\" = \"xno\"; then\n    AC_LIBLTDL_CONVENIENCE\n    AC_LIBTOOL_DLOPEN\n    DIRLTDL=libltdl\n-   AC_DEFINE(USE_LTDL)\n+   AC_DEFINE(USE_LTDL, 1, [Define if libltdl is in use.])\n    # Sigh.  Libtool's macro doesn't do the right thing.\n    INCLTDL=\"-I\\$(top_srcdir)/libltdl $INCLTDL\"\n    # FIXME: this is a hack.\n@@ -62,15 +62,16 @@ if test -z \"$enable_getenv_properties\"; then\n    enable_getenv_properties=${enable_getenv_properties_default-yes}\n fi\n if test \"$enable_getenv_properties\" = no; then\n-   AC_DEFINE(DISABLE_GETENV_PROPERTIES)\n+   AC_DEFINE(DISABLE_GETENV_PROPERTIES, 1,\n+     [Define if system properties shouldn't be read from getenv(\"GCJ_PROPERTIES\").])\n fi\n \n dnl Whether we should use arguments to main()\n if test -z \"$enable_main_args\"; then\n    enable_main_args=${enable_main_args_default-yes}\n fi\n if test \"$enable_main_args\" = no; then\n-   AC_DEFINE(DISABLE_MAIN_ARGS)\n+   AC_DEFINE(DISABLE_MAIN_ARGS, 1, [Define if we should ignore arguments to main().])\n fi\n \n \n@@ -88,7 +89,8 @@ fi\n dnl configure.host sets slow_pthread_self if the synchronization code should \n dnl try to avoid pthread_self calls by caching thread IDs in a hashtable.\n if test \"${slow_pthread_self}\" = \"yes\"; then\n-  AC_DEFINE(SLOW_PTHREAD_SELF)\n+  AC_DEFINE(SLOW_PTHREAD_SELF, 1,\n+    [Define if if the synchronization code should try to avoid pthread_self calls by caching thread IDs in a hashtable.])\n fi\n \n \n@@ -98,7 +100,7 @@ AC_SUBST(LIBGCJDEBUG)\n AC_ARG_ENABLE(libgcj-debug,\n [  --enable-libgcj-debug   enable runtime debugging code],\n   if test \"$enable_libgcj_debug\" = yes; then\n-    AC_DEFINE(DEBUG)\n+    AC_DEFINE(DEBUG, 1, [Define this if you want runtime debugging enabled.])\n     LIBGCJDEBUG=\"true\"\n   fi)\n \n@@ -113,7 +115,7 @@ AC_ARG_ENABLE(interpreter,\n   fi)\n \n if test \"$libgcj_interpreter\" = yes; then\n-   AC_DEFINE(INTERPRETER)\n+   AC_DEFINE(INTERPRETER, 1, [Define if you want a bytecode interpreter.])\n fi\n INTERPRETER=\"$libgcj_interpreter\"\n AC_SUBST(INTERPRETER)\n@@ -182,7 +184,7 @@ if test -z \"$enable_java_net\"; then\n    enable_java_net=${enable_java_net_default-yes}\n fi\n if test \"$enable_java_net\" = no; then\n-   AC_DEFINE(DISABLE_JAVA_NET)\n+   AC_DEFINE(DISABLE_JAVA_NET, 1, [Define if java.net native functions should be stubbed out.])\n fi\n \n dnl See if the user wants to configure without libffi.  Some\n@@ -194,7 +196,7 @@ AC_ARG_WITH(libffi,\n LIBFFI=\n LIBFFIINCS=\n if test \"$with_libffi\" != no; then\n-   AC_DEFINE(USE_LIBFFI)\n+   AC_DEFINE(USE_LIBFFI, 1, [Define if we're to use libffi.])\n    LIBFFI=../libffi/libffi_convenience.la\n    LIBFFIINCS='-I$(top_srcdir)/../libffi/include -I../libffi/include'\n fi\n@@ -206,7 +208,7 @@ AC_ARG_ENABLE(jvmpi,\n [  --disable-jvmpi         disable JVMPI support])\n \n if test \"$enable_jvmpi\" != no; then\n-    AC_DEFINE(ENABLE_JVMPI)\n+    AC_DEFINE(ENABLE_JVMPI, 1, [Define if you are using JVMPI.])\n fi\n \n dnl If the target is an eCos system, use the appropriate eCos\n@@ -240,24 +242,30 @@ case \"$TARGET_ECOS\" in\n    *)\n       PLATFORM=Ecos\n       PLATFORMNET=NoNet\n-      AC_DEFINE(ECOS)\n+      AC_DEFINE(ECOS, 1, [Define if you're running eCos.])\n       PLATFORMOBJS=posix.lo\n       PLATFORMH=posix.h\n       ;;\n esac\n AC_SUBST(PLATFORMOBJS)\n AC_LINK_FILES(include/$PLATFORMH, include/platform.h)\n \n-AC_EGREP_HEADER(uint32_t, stdint.h, AC_DEFINE(HAVE_INT32_DEFINED))\n-AC_EGREP_HEADER(uint32_t, inttypes.h, AC_DEFINE(HAVE_INT32_DEFINED))\n-AC_EGREP_HEADER(u_int32_t, sys/types.h, AC_DEFINE(HAVE_BSD_INT32_DEFINED))\n-AC_EGREP_HEADER(u_int32_t, sys/config.h, AC_DEFINE(HAVE_BSD_INT32_DEFINED))\n+AC_EGREP_HEADER(uint32_t, stdint.h, AC_DEFINE(HAVE_INT32_DEFINED, 1,\n+                                      [Define if you have int32_t and uint32_t.]))\n+AC_EGREP_HEADER(uint32_t, inttypes.h, AC_DEFINE(HAVE_INT32_DEFINED, 1,\n+                                        [Define if you have int32_t and uint32_t.]))\n+AC_EGREP_HEADER(u_int32_t, sys/types.h, AC_DEFINE(HAVE_BSD_INT32_DEFINED, 1,\n+                                          [Define if you have u_int32_t]))\n+AC_EGREP_HEADER(u_int32_t, sys/config.h, AC_DEFINE(HAVE_BSD_INT32_DEFINED, 1,\n+                                           [Define if you have u_int32_t]))\n \n \n dnl These may not be defined in a non-ANS conformant embedded system.\n dnl FIXME: Should these case a runtime exception in that case?\n-AC_EGREP_HEADER(mktime, time.h, AC_DEFINE(HAVE_MKTIME))\n-AC_EGREP_HEADER(localtime, time.h, AC_DEFINE(HAVE_LOCALTIME))\n+AC_EGREP_HEADER(mktime, time.h, AC_DEFINE(HAVE_MKTIME, 1,\n+                                  [Define is you have 'mktime' in <time.h>]))\n+AC_EGREP_HEADER(localtime, time.h, AC_DEFINE(HAVE_LOCALTIME, 1,\n+                                  [Define is you have 'localtime' in <time.h>]))\n \n dnl Create the subdirectory for natFileDescriptor.cc, or the attempt\n dnl to create the link will fail.\n@@ -387,7 +395,7 @@ case \"$GC\" in\n     GCOBJS=boehm.lo\n     GCHDR=boehm-gc.h\n     dnl The POSIX thread support needs to know this.\n-    AC_DEFINE(HAVE_BOEHM_GC)\n+    AC_DEFINE(HAVE_BOEHM_GC, 1, [Define if Boehm GC in use.])\n     ;;\n  no)\n     AC_MSG_RESULT(none)\n@@ -420,7 +428,7 @@ case \"$THREADS\" in\n     THREADS=posix\n     case \"$host\" in\n      *-*-linux*)\n-\tAC_DEFINE(LINUX_THREADS)\n+\tAC_DEFINE(LINUX_THREADS, 1, [Define if using POSIX threads on Linux.])\n \t;;\n     esac\n     ;;\n@@ -485,7 +493,7 @@ changequote([,])\n     # MIT pthreads doesn't seem to have the mutexattr functions.\n     # But for now we don't check for it.  We just assume you aren't\n     # using MIT pthreads.\n-    AC_DEFINE(HAVE_PTHREAD_MUTEXATTR_INIT)\n+    AC_DEFINE(HAVE_PTHREAD_MUTEXATTR_INIT, 1, [Define if using POSIX threads that have the mutexattr functions.])\n \n     # If we're using the Boehm GC, then we happen to know that it\n     # defines _REENTRANT, so we don't bother.  Eww.\n@@ -552,19 +560,19 @@ if test \"x${with_newlib}\" = \"xyes\"; then\n \n    # We assume newlib.  This lets us hard-code the functions we know\n    # we'll have.\n-   AC_DEFINE(HAVE_MEMMOVE)\n-   AC_DEFINE(HAVE_MEMCPY)\n-   AC_DEFINE(HAVE_STRERROR)\n-   AC_DEFINE(HAVE_TIME)\n-   AC_DEFINE(HAVE_GMTIME_R)\n-   AC_DEFINE(HAVE_LOCALTIME_R)\n+   AC_DEFINE(HAVE_MEMMOVE, 1, [Define if you have memmove.])\n+   AC_DEFINE(HAVE_MEMCPY, 1, [Define if you have memcpy.])\n+   AC_DEFINE(HAVE_STRERROR, 1, [Define if you have strerror.])\n+   AC_DEFINE(HAVE_TIME, 1, [Define if you have time.])\n+   AC_DEFINE(HAVE_GMTIME_R, 1, [Define if you have the 'gmtime_r' function])\n+   AC_DEFINE(HAVE_LOCALTIME_R, 1, [Define if you have the 'localtime_r' function.])\n    dnl This is only for POSIX threads.\n-   AC_DEFINE(HAVE_PTHREAD_MUTEXATTR_INIT)\n+   AC_DEFINE(HAVE_PTHREAD_MUTEXATTR_INIT, 1, [Define if using POSIX threads that have the mutexattr functions.])\n    dnl We also assume we are using gcc, which provides alloca.\n    AC_DEFINE(HAVE_ALLOCA)\n \n    dnl Assume we do not have getuid and friends.\n-   AC_DEFINE(NO_GETUID)\n+   AC_DEFINE(NO_GETUID, 1, [Define if getuid() and friends are missing.])\n    PLATFORMNET=NoNet\n else\n    AC_CHECK_FUNCS(strerror ioctl select fstat open fsync sleep opendir)\n@@ -581,27 +589,29 @@ else\n \t # Has broken backtrace()\n \t ;;\n        *)\n-         AC_DEFINE(HAVE_BACKTRACE)\n+         AC_DEFINE(HAVE_BACKTRACE, 1,\n+           [Define if your platform has a working backtrace() function.])\n \t ;;\n      esac\n    ], [\n      case \"$host\" in\n        *mingw*)\n          # Has backtrace() defined in libgcj itself\n-         AC_DEFINE(HAVE_BACKTRACE)\n+         AC_DEFINE(HAVE_BACKTRACE, 1,\n+           [Define if your platform has a working backtrace() function.])\n          ;;\n      esac\n    ])\n \n    AC_CHECK_LIB(dl, dladdr, [\n-     AC_DEFINE(HAVE_DLADDR)])\n+     AC_DEFINE(HAVE_DLADDR, 1, [Define if you have dladdr()])])\n    if test x\"$build\" = x\"$host\"; then\n      AC_CHECK_FILES(/proc/self/exe, [\n-       AC_DEFINE(HAVE_PROC_SELF_EXE)])\n+       AC_DEFINE(HAVE_PROC_SELF_EXE, 1, [Define if you have /proc/self/exe])])\n    else\n      case $host in\n      *-linux*)\n-       AC_DEFINE(HAVE_PROC_SELF_EXE)\n+       AC_DEFINE(HAVE_PROC_SELF_EXE, 1, [Define if you have /proc/self/exe])\n        ;;\n      esac\n    fi\n@@ -611,12 +621,13 @@ else\n    AC_STRUCT_TIMEZONE\n \n    AC_CHECK_FUNCS(gethostbyname_r, [\n-     AC_DEFINE(HAVE_GETHOSTBYNAME_R)\n+     AC_DEFINE(HAVE_GETHOSTBYNAME_R, 1,\n+       [Define if you have the 'gethostbyname_r' function.])\n      # There are two different kinds of gethostbyname_r.\n      # We look for the one that returns `int'.\n      # Hopefully this check is robust enough.\n      AC_EGREP_HEADER(int.*gethostbyname_r, netdb.h, [\n-       AC_DEFINE(GETHOSTBYNAME_R_RETURNS_INT)])\n+       AC_DEFINE(GETHOSTBYNAME_R_RETURNS_INT, 1, [Define if gethostbyname_r returns 'int'.])])\n \n      case \" $GCINCS \" in\n      *\" -D_REENTRANT \"*) ;;\n@@ -666,21 +677,26 @@ else\n    # linkage check is enough, yet C++ code requires proper prototypes.)\n    AC_EGREP_HEADER(gethostbyaddr_r, netdb.h, [\n    AC_CHECK_FUNCS(gethostbyaddr_r, [\n-     AC_DEFINE(HAVE_GETHOSTBYADDR_R)\n+     AC_DEFINE(HAVE_GETHOSTBYADDR_R, 1,\n+       [Define if you have the 'gethostbyaddr_r' function.])\n      # There are two different kinds of gethostbyaddr_r.\n      # We look for the one that returns `int'.\n      # Hopefully this check is robust enough.\n      AC_EGREP_HEADER(int.*gethostbyaddr_r, netdb.h, [\n-       AC_DEFINE(GETHOSTBYADDR_R_RETURNS_INT)])])])\n+       AC_DEFINE(GETHOSTBYADDR_R_RETURNS_INT, 1,\n+         [Define if gethostbyaddr_r returns 'int'.])])])])\n \n    AC_CHECK_FUNCS(gethostname, [\n-     AC_DEFINE(HAVE_GETHOSTNAME)\n+     AC_DEFINE(HAVE_GETHOSTNAME, 1,\n+       [Define if you have the 'gethostname' function.])\n      AC_EGREP_HEADER(gethostname, unistd.h, [\n-       AC_DEFINE(HAVE_GETHOSTNAME_DECL)])])\n+       AC_DEFINE(HAVE_GETHOSTNAME_DECL, 1,\n+         [Define if gethostname is declared in <unistd.h>.])])])\n \n    AC_CHECK_FUNCS(usleep, [\n      AC_EGREP_HEADER(usleep, unistd.h, [\n-       AC_DEFINE(HAVE_USLEEP_DECL)])])\n+       AC_DEFINE(HAVE_USLEEP_DECL, 1,\n+          [Define if usleep is declared in <unistd.h>.])])])\n \n    # Look for these functions in the thread library, but only bother\n    # if using POSIX threads.\n@@ -708,10 +724,12 @@ else\n       # or __m_count.  This is a nice hack for Linux.\n       AC_TRY_COMPILE([#include <pthread.h>], [\n           extern pthread_mutex_t *mutex; int q = mutex->m_count;\n-        ], AC_DEFINE(PTHREAD_MUTEX_HAVE_M_COUNT), [\n+        ], AC_DEFINE(PTHREAD_MUTEX_HAVE_M_COUNT, 1,\n+             [Define if pthread_mutex_t has m_count member.]), [\n \tAC_TRY_COMPILE([#include <pthread.h>], [\n \t    extern pthread_mutex_t *mutex; int q = mutex->__m_count;\n-\t  ], AC_DEFINE(PTHREAD_MUTEX_HAVE___M_COUNT))])\n+\t  ], AC_DEFINE(PTHREAD_MUTEX_HAVE___M_COUNT, 1,\n+            [Define if pthread_mutex_t has __m_count member.]))])\n    fi\n \n    # We require a way to get the time.\n@@ -979,39 +997,43 @@ AC_TRY_COMPILE([#include <sys/types.h>\n #if HAVE_NETINET_IN_H\n #include <netinet/in.h>\n #endif], [in_addr_t foo;],\n-  [AC_DEFINE([HAVE_IN_ADDR_T])\n+  [AC_DEFINE(HAVE_IN_ADDR_T, 1,\n+     [Define to 1 if 'in_addr_t' is defined in sys/types.h or netinet/in.h.])\n    AC_MSG_RESULT(yes)],\n   [AC_MSG_RESULT(no)])\n \n AC_MSG_CHECKING([whether struct ip_mreq is in netinet/in.h])\n AC_TRY_COMPILE([#include <netinet/in.h>], [struct ip_mreq mreq;],\n-  [AC_DEFINE(HAVE_STRUCT_IP_MREQ)\n+  [AC_DEFINE(HAVE_STRUCT_IP_MREQ, 1,\n+     [Define if struct ip_mreq is defined in netinet/in.h.])\n    AC_MSG_RESULT(yes)],\n   [AC_MSG_RESULT(no)])\n \n AC_MSG_CHECKING([whether struct ipv6_mreq is in netinet/in.h])\n AC_TRY_COMPILE([#include <netinet/in.h>], [struct ipv6_mreq mreq6;],\n-  [AC_DEFINE(HAVE_STRUCT_IPV6_MREQ)\n+  [AC_DEFINE(HAVE_STRUCT_IPV6_MREQ, 1,\n+     [Define if struct ipv6_mreq is defined in netinet/in.h.])\n    AC_MSG_RESULT(yes)],\n   [AC_MSG_RESULT(no)])\n \n AC_MSG_CHECKING([whether struct sockaddr_in6 is in netinet/in.h])\n AC_TRY_COMPILE([#include <netinet/in.h>], [struct sockaddr_in6 addr6;],\n-  [AC_DEFINE(HAVE_INET6)\n+  [AC_DEFINE(HAVE_INET6, 1,\n+     [Define if inet6 structures are defined in netinet/in.h.])\n    AC_MSG_RESULT(yes)],\n   [AC_MSG_RESULT(no)])\n \n AC_MSG_CHECKING([for socklen_t in sys/socket.h])\n AC_TRY_COMPILE([#define _POSIX_PII_SOCKET\n #include <sys/types.h>\n #include <sys/socket.h>], [socklen_t x = 5;],\n-  [AC_DEFINE(HAVE_SOCKLEN_T)\n+  [AC_DEFINE(HAVE_SOCKLEN_T, 1, [Define it socklen_t typedef is in sys/socket.h.])\n    AC_MSG_RESULT(yes)],\n   [AC_MSG_RESULT(no)])\n \n AC_MSG_CHECKING([for tm_gmtoff in struct tm])\n AC_TRY_COMPILE([#include <time.h>], [struct tm tim; tim.tm_gmtoff = 0;],\n-  [AC_DEFINE(STRUCT_TM_HAS_GMTOFF)\n+  [AC_DEFINE(STRUCT_TM_HAS_GMTOFF, 1, [Define if struct tm has tm_gmtoff field.])\n    AC_MSG_RESULT(yes)],\n   [AC_MSG_RESULT(no)\n    AC_MSG_CHECKING([for global timezone variable])\n@@ -1020,13 +1042,14 @@ AC_TRY_COMPILE([#include <time.h>], [struct tm tim; tim.tm_gmtoff = 0;],\n    dnl the header file will mention timezone if it exists.\n    dnl Don't find the win32 function timezone\n    AC_TRY_COMPILE([#include <time.h>], [void i(){long z2 = 2*timezone;}],\n-     [AC_DEFINE(HAVE_TIMEZONE)\n+     [AC_DEFINE(HAVE_TIMEZONE, 1, [Define if global 'timezone' exists.])\n       AC_MSG_RESULT(yes)],\n      [AC_MSG_RESULT(no)\n        AC_MSG_CHECKING([for global _timezone variable])\n        dnl FIXME: As above, don't want link check\n        AC_TRY_COMPILE([#include <time.h>], [long z2 = _timezone;],\n-         [AC_DEFINE(HAVE_UNDERSCORE_TIMEZONE)\n+         [AC_DEFINE(HAVE_UNDERSCORE_TIMEZONE, 1,\n+            [Define if your platform has the global _timezone variable.])\n           AC_MSG_RESULT(yes)],\n           [AC_MSG_RESULT(no)])])])\n "}, {"sha": "148fcad95cabfa19e4b8651ac7ed24276768466d", "filename": "libjava/include/config.h.in", "status": "modified", "additions": 147, "deletions": 140, "changes": 287, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e1a3a7d02bb4a49b51b8b8ab6f0737d6f6616de0/libjava%2Finclude%2Fconfig.h.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e1a3a7d02bb4a49b51b8b8ab6f0737d6f6616de0/libjava%2Finclude%2Fconfig.h.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Finclude%2Fconfig.h.in?ref=e1a3a7d02bb4a49b51b8b8ab6f0737d6f6616de0", "patch": "@@ -44,149 +44,9 @@\n /* Define if the X Window System is missing or not being used.  */\n #undef X_DISPLAY_MISSING\n \n-/* Define this if you want runtime debugging enabled.  */\n-#undef DEBUG\n-\n-/* Define if using POSIX threads that have the mutexattr functions.  */\n-#undef HAVE_PTHREAD_MUTEXATTR_INIT\n-\n-/* Define if you have memcpy.  */\n-#undef HAVE_MEMCPY\n-\n-/* Define if you have memmove.  */\n-#undef HAVE_MEMMOVE\n-\n-/* Define if you have strerror.  */\n-#undef HAVE_STRERROR\n-\n-/* Define if you have int32_t and uint32_t. */\n-#undef HAVE_INT32_DEFINED\n-\n-/* Define if you have u_int32_t */\n-#undef HAVE_BSD_INT32_DEFINED\n-\n-/* Define if you're running eCos. */\n-#undef ECOS\n-\n-/* */\n-#undef HAVE_LOCALTIME\n-\n-/* */\n-#undef HAVE_MKTIME\n-\n-/* Define if using POSIX threads on Linux.  */\n-#undef LINUX_THREADS\n-\n-/* Define if you have the `gmtime_r' function.  */\n-#undef HAVE_GMTIME_R\n-\n-/* Define if you have the `localtime_r' function.  */\n-#undef HAVE_LOCALTIME_R\n-\n /* Define to `int' if `ssize_t' is not defined.  */\n #undef ssize_t\n \n-/* Define to 1 if `in_addr_t' is defined in sys/types.h or\n-   netinet/in.h.  */\n-#undef HAVE_IN_ADDR_T\n-\n-/* Define if inet6 structures are defined in netinet/in.h.  */\n-#undef HAVE_INET6\n-\n-/* Define if struct ip_mreq is defined in netinet/in.h.  */\n-#undef HAVE_STRUCT_IP_MREQ\n-\n-/* Define if struct ipv6_mreq is defined in netinet/in.h.  */\n-#undef HAVE_STRUCT_IPV6_MREQ\n-\n-/* Define it socklen_t typedef is in sys/socket.h.  */\n-#undef HAVE_SOCKLEN_T\n-\n-/* Define if Boehm GC in use.  */\n-#undef HAVE_BOEHM_GC\n-\n-/* Define if gethostname is declared in <unistd.h>.  */\n-#undef HAVE_GETHOSTNAME_DECL\n-\n-/* Define if gethostbyname_r returns `int'.  */\n-#undef GETHOSTBYNAME_R_RETURNS_INT\n-\n-/* Define if gethostbyaddr_r returns `int'.  */\n-#undef GETHOSTBYADDR_R_RETURNS_INT\n-\n-/* Define if usleep is declared in <unistd.h>.  */\n-#undef HAVE_USLEEP_DECL\n-\n-/* Define if struct tm has tm_gmtoff field.  */\n-#undef STRUCT_TM_HAS_GMTOFF\n-\n-/* Define if global `timezone' exists.  */\n-#undef HAVE_TIMEZONE\n-\n-/* Define if if the synchronization code should try to avoid pthread_self \n-   calls by caching thread IDs in a hashtable.  */\n-#undef SLOW_PTHREAD_SELF\n-\n-/* Define if you have the appropriate function.  */\n-#undef HAVE_ACCESS\n-#undef HAVE_STAT\n-#undef HAVE_MKDIR\n-#undef HAVE_RENAME\n-#undef HAVE_RMDIR\n-#undef HAVE_UNLINK\n-#undef HAVE_REALPATH\n-#undef HAVE_READDIR_R\n-#undef HAVE_GETHOSTBYNAME_R\n-#undef HAVE_GETHOSTBYADDR_R\n-#undef HAVE_FTRUNCATE\n-\n-/* Define if you want a bytecode interpreter.  */\n-#undef INTERPRETER\n-\n-/* Define if pthread_mutex_t has m_count member.  */\n-#undef PTHREAD_MUTEX_HAVE_M_COUNT\n-\n-/* Define if pthread_mutex_t has __m_count member.  */\n-#undef PTHREAD_MUTEX_HAVE___M_COUNT\n-\n-/* Define if java.net native functions should be stubbed out.  */\n-#undef DISABLE_JAVA_NET\n-\n-/* Define if we're to use libffi.  */\n-#undef USE_LIBFFI\n-\n-/* Define if system properties shouldn't be read from\n-   getenv(\"GCJ_PROPERTIES\").  */\n-#undef DISABLE_GETENV_PROPERTIES\n-\n-/* Define if we should ignore arguments to main().  */\n-#undef DISABLE_MAIN_ARGS\n-\n-/* Define if you have /proc/self/exe */\n-#undef HAVE_PROC_SELF_EXE\n-\n- \n-/* Define if you have dladdr() */\n-#undef HAVE_DLADDR\n-\n-/* Define if getuid() and friends are missing.  */\n-#undef NO_GETUID\n-\n-/* Define if libltdl is in use.  */\n-#undef USE_LTDL\n-\n-/* Define if g++ has a bug preventing us from inlining math routines.  */\n-#undef __NO_MATH_INLINES\n-\n-/* Define if you are using JVMPI.  */\n-#undef ENABLE_JVMPI\n-\n-/* Define if your platform has a working backtrace() function.  */\n-#undef HAVE_BACKTRACE\n-\n-/* Define if your platform has the global _timezone variable.  */\n-#undef HAVE_UNDERSCORE_TIMEZONE\n-\n /* Define if you have the access function.  */\n #undef HAVE_ACCESS\n \n@@ -403,12 +263,69 @@\n /* Version number of package */\n #undef VERSION\n \n+/* Define if libltdl is in use. */\n+#undef USE_LTDL\n+\n+/* Define if system properties shouldn't be read from getenv(GCJ_PROPERTIES). */\n+#undef DISABLE_GETENV_PROPERTIES\n+\n+/* Define if we should ignore arguments to main(). */\n+#undef DISABLE_MAIN_ARGS\n+\n+/* Define if if the synchronization code should try to avoid pthread_self calls by caching thread IDs in a hashtable. */\n+#undef SLOW_PTHREAD_SELF\n+\n+/* Define this if you want runtime debugging enabled. */\n+#undef DEBUG\n+\n+/* Define if you want a bytecode interpreter. */\n+#undef INTERPRETER\n+\n /* Define if the compiler is configured for setjmp/longjmp exceptions. */\n #undef SJLJ_EXCEPTIONS\n \n+/* Define if java.net native functions should be stubbed out. */\n+#undef DISABLE_JAVA_NET\n+\n+/* Define if we're to use libffi. */\n+#undef USE_LIBFFI\n+\n+/* Define if you are using JVMPI. */\n+#undef ENABLE_JVMPI\n+\n /* Indicate that linker is not able to 8-byte align static data */\n #undef JV_LINKER_CANNOT_8BYTE_ALIGN_STATICS\n \n+/* Define if you're running eCos. */\n+#undef ECOS\n+\n+/* Define if you have int32_t and uint32_t. */\n+#undef HAVE_INT32_DEFINED\n+\n+/* Define if you have int32_t and uint32_t. */\n+#undef HAVE_INT32_DEFINED\n+\n+/* Define if you have u_int32_t */\n+#undef HAVE_BSD_INT32_DEFINED\n+\n+/* Define if you have u_int32_t */\n+#undef HAVE_BSD_INT32_DEFINED\n+\n+/* Define is you have 'mktime' in <time.h> */\n+#undef HAVE_MKTIME\n+\n+/* Define is you have 'localtime' in <time.h> */\n+#undef HAVE_LOCALTIME\n+\n+/* Define if Boehm GC in use. */\n+#undef HAVE_BOEHM_GC\n+\n+/* Define if using POSIX threads on Linux. */\n+#undef LINUX_THREADS\n+\n+/* Define if using POSIX threads that have the mutexattr functions. */\n+#undef HAVE_PTHREAD_MUTEXATTR_INIT\n+\n /* Required define if using POSIX threads */\n #undef _REENTRANT\n \n@@ -418,6 +335,45 @@\n /* Define if hash synchronization is in use */\n #undef JV_HASH_SYNCHRONIZATION\n \n+/* Define if you have memmove. */\n+#undef HAVE_MEMMOVE\n+\n+/* Define if you have memcpy. */\n+#undef HAVE_MEMCPY\n+\n+/* Define if you have strerror. */\n+#undef HAVE_STRERROR\n+\n+/* Define if you have time. */\n+#undef HAVE_TIME\n+\n+/* Define if you have the 'gmtime_r' function */\n+#undef HAVE_GMTIME_R\n+\n+/* Define if you have the 'localtime_r' function. */\n+#undef HAVE_LOCALTIME_R\n+\n+/* Define if using POSIX threads that have the mutexattr functions. */\n+#undef HAVE_PTHREAD_MUTEXATTR_INIT\n+\n+/* Define if getuid() and friends are missing. */\n+#undef NO_GETUID\n+\n+/* Define if your platform has a working backtrace() function. */\n+#undef HAVE_BACKTRACE\n+\n+/* Define if your platform has a working backtrace() function. */\n+#undef HAVE_BACKTRACE\n+\n+/* Define if you have dladdr() */\n+#undef HAVE_DLADDR\n+\n+/* Define if you have /proc/self/exe */\n+#undef HAVE_PROC_SELF_EXE\n+\n+/* Define if you have /proc/self/exe */\n+#undef HAVE_PROC_SELF_EXE\n+\n /* Define if you have the iconv() function. */\n #undef HAVE_ICONV\n \n@@ -427,12 +383,39 @@\n /* Define if your <locale.h> file defines LC_MESSAGES. */\n #undef HAVE_LC_MESSAGES\n \n+/* Define if you have the 'gethostbyname_r' function. */\n+#undef HAVE_GETHOSTBYNAME_R\n+\n+/* Define if gethostbyname_r returns 'int'. */\n+#undef GETHOSTBYNAME_R_RETURNS_INT\n+\n /* Required define if using POSIX threads */\n #undef _REENTRANT\n \n /* Define if struct hostent_data is defined in netdb.h */\n #undef HAVE_STRUCT_HOSTENT_DATA\n \n+/* Define if you have the 'gethostbyaddr_r' function. */\n+#undef HAVE_GETHOSTBYADDR_R\n+\n+/* Define if gethostbyaddr_r returns 'int'. */\n+#undef GETHOSTBYADDR_R_RETURNS_INT\n+\n+/* Define if you have the 'gethostname' function. */\n+#undef HAVE_GETHOSTNAME\n+\n+/* Define if gethostname is declared in <unistd.h>. */\n+#undef HAVE_GETHOSTNAME_DECL\n+\n+/* Define if usleep is declared in <unistd.h>. */\n+#undef HAVE_USLEEP_DECL\n+\n+/* Define if pthread_mutex_t has m_count member. */\n+#undef PTHREAD_MUTEX_HAVE_M_COUNT\n+\n+/* Define if pthread_mutex_t has __m_count member. */\n+#undef PTHREAD_MUTEX_HAVE___M_COUNT\n+\n /* Define if dlopen is available */\n #undef HAVE_DLOPEN\n \n@@ -448,3 +431,27 @@\n /* Define if <inttypes.h> is available */\n #undef JV_HAVE_INTTYPES_H\n \n+/* Define to 1 if 'in_addr_t' is defined in sys/types.h or netinet/in.h. */\n+#undef HAVE_IN_ADDR_T\n+\n+/* Define if struct ip_mreq is defined in netinet/in.h. */\n+#undef HAVE_STRUCT_IP_MREQ\n+\n+/* Define if struct ipv6_mreq is defined in netinet/in.h. */\n+#undef HAVE_STRUCT_IPV6_MREQ\n+\n+/* Define if inet6 structures are defined in netinet/in.h. */\n+#undef HAVE_INET6\n+\n+/* Define it socklen_t typedef is in sys/socket.h. */\n+#undef HAVE_SOCKLEN_T\n+\n+/* Define if struct tm has tm_gmtoff field. */\n+#undef STRUCT_TM_HAS_GMTOFF\n+\n+/* Define if global 'timezone' exists. */\n+#undef HAVE_TIMEZONE\n+\n+/* Define if your platform has the global _timezone variable. */\n+#undef HAVE_UNDERSCORE_TIMEZONE\n+"}]}