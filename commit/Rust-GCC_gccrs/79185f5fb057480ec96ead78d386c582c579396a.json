{"sha": "79185f5fb057480ec96ead78d386c582c579396a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzkxODVmNWZiMDU3NDgwZWM5NmVhZDc4ZDM4NmM1ODJjNTc5Mzk2YQ==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2014-07-30T10:00:47Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2014-07-30T10:00:47Z"}, "message": "[multiple changes]\n\n2014-07-30  Robert Dewar  <dewar@adacore.com>\n\n\t* sem_util.adb (Predicate_Tests_On_Arguments): Omit tests for\n\tsome additional cases of internally generated routines.\n\n2014-07-30  Ed Schonberg  <schonberg@adacore.com>\n\n\t* sem_ch10.adb (Analyze_Proper_Body): When compiling for ASIS,\n\tif the compilation unit is a subunit, extend optional processing\n\tto all subunits of the current one. This allows gnatstub to\n\tsupress generation of spurious bodies.\n\nFrom-SVN: r213236", "tree": {"sha": "d301e2fab18887110f095387488dc742427be910", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d301e2fab18887110f095387488dc742427be910"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/79185f5fb057480ec96ead78d386c582c579396a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/79185f5fb057480ec96ead78d386c582c579396a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/79185f5fb057480ec96ead78d386c582c579396a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/79185f5fb057480ec96ead78d386c582c579396a/comments", "author": null, "committer": null, "parents": [{"sha": "ec62224622de6d29ea9ed09426967d1bf8ceea42", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ec62224622de6d29ea9ed09426967d1bf8ceea42", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ec62224622de6d29ea9ed09426967d1bf8ceea42"}], "stats": {"total": 54, "additions": 42, "deletions": 12}, "files": [{"sha": "48222031a1fb38180bd117d9976f8fcf3e7cd25f", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/79185f5fb057480ec96ead78d386c582c579396a/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/79185f5fb057480ec96ead78d386c582c579396a/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=79185f5fb057480ec96ead78d386c582c579396a", "patch": "@@ -1,3 +1,15 @@\n+2014-07-30  Robert Dewar  <dewar@adacore.com>\n+\n+\t* sem_util.adb (Predicate_Tests_On_Arguments): Omit tests for\n+\tsome additional cases of internally generated routines.\n+\n+2014-07-30  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* sem_ch10.adb (Analyze_Proper_Body): When compiling for ASIS,\n+\tif the compilation unit is a subunit, extend optional processing\n+\tto all subunits of the current one. This allows gnatstub to\n+\tsupress generation of spurious bodies.\n+\n 2014-07-30  Hristian Kirtchev  <kirtchev@adacore.com>\n \n \t* a-cbmutr.adb (Insert_Child): Use local variable First to keep"}, {"sha": "cd110c9d1857cbf24622df354739e217f0578a96", "filename": "gcc/ada/sem_ch10.adb", "status": "modified", "additions": 13, "deletions": 5, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/79185f5fb057480ec96ead78d386c582c579396a/gcc%2Fada%2Fsem_ch10.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/79185f5fb057480ec96ead78d386c582c579396a/gcc%2Fada%2Fsem_ch10.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch10.adb?ref=79185f5fb057480ec96ead78d386c582c579396a", "patch": "@@ -1624,6 +1624,7 @@ package body Sem_Ch10 is\n                Set_Corresponding_Stub (Unit (Comp_Unit), N);\n                Analyze_Subunit (Comp_Unit);\n                Set_Library_Unit (N, Comp_Unit);\n+               Set_Corresponding_Body (N, Defining_Entity (Unit (Comp_Unit)));\n             end if;\n \n          elsif Unum = No_Unit\n@@ -1713,15 +1714,22 @@ package body Sem_Ch10 is\n       --  should be ignored, except that if we are building trees for ASIS\n       --  usage we want to annotate the stub properly. If the main unit is\n       --  itself a subunit, another subunit is irrelevant unless it is a\n-      --  subunit of the current one.\n+      --  subunit of the current one, that is to say appears in the current\n+      --  source tree.\n \n       elsif Nkind (Unit (Cunit (Main_Unit))) = N_Subunit\n         and then Subunit_Name /= Unit_Name (Main_Unit)\n       then\n-         if ASIS_Mode\n-           and then Scope (Defining_Entity (N)) = Cunit_Entity (Main_Unit)\n-         then\n-            Optional_Subunit;\n+         if ASIS_Mode then\n+            declare\n+               PB : constant Node_Id := Proper_Body (Unit (Cunit (Main_Unit)));\n+            begin\n+               if Nkind_In (PB, N_Package_Body, N_Subprogram_Body)\n+                 and then List_Containing (N) = Declarations (PB)\n+               then\n+                  Optional_Subunit;\n+               end if;\n+            end;\n          end if;\n \n          --  But before we return, set the flag for unloaded subunits. This"}, {"sha": "6dc9f05a0374aa78a721c34bafe5052564879be1", "filename": "gcc/ada/sem_util.adb", "status": "modified", "additions": 17, "deletions": 7, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/79185f5fb057480ec96ead78d386c582c579396a/gcc%2Fada%2Fsem_util.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/79185f5fb057480ec96ead78d386c582c579396a/gcc%2Fada%2Fsem_util.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_util.adb?ref=79185f5fb057480ec96ead78d386c582c579396a", "patch": "@@ -14723,32 +14723,42 @@ package body Sem_Util is\n \n    function Predicate_Tests_On_Arguments (Subp : Entity_Id) return Boolean is\n    begin\n+      --  Always test predicates on indirect call\n+\n+      if Ekind (Subp) = E_Subprogram_Type then\n+         return True;\n+\n       --  Do not test predicates on call to generated default Finalize, since\n       --  we are not interested in whether something we are finalizing (and\n       --  typically destroying) satisfies its predicates.\n \n-      if Chars (Subp) = Name_Finalize\n+      elsif Chars (Subp) = Name_Finalize\n         and then not Comes_From_Source (Subp)\n       then\n          return False;\n \n-         --  Do not test predicates on call to Init_Proc, since if needed the\n-         --  predicate test will occur at some other point.\n+      --  Do not test predicates on any internally generated routines\n+\n+      elsif Is_Internal_Name (Chars (Subp)) then\n+         return False;\n+\n+      --  Do not test predicates on call to Init_Proc, since if needed the\n+      --  predicate test will occur at some other point.\n \n       elsif Is_Init_Proc (Subp) then\n          return False;\n \n-         --  Do not test predicates on call to predicate function, since this\n-         --  would cause infinite recursion.\n+      --  Do not test predicates on call to predicate function, since this\n+      --  would cause infinite recursion.\n \n       elsif Ekind (Subp) = E_Function\n         and then (Is_Predicate_Function (Subp)\n-                  or else\n+                    or else\n                   Is_Predicate_Function_M (Subp))\n       then\n          return False;\n \n-         --  For now, no other exceptions\n+      --  For now, no other exceptions\n \n       else\n          return True;"}]}