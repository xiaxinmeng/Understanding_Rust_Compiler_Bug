{"sha": "f5f2a77571a35cacf35e1e2d80a6cd11fdd718de", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjVmMmE3NzU3MWEzNWNhY2YzNWUxZTJkODBhNmNkMTFmZGQ3MThkZQ==", "commit": {"author": {"name": "Michael Meissner", "email": "Michael Meissner meissner@linux.ibm.com", "date": "2020-05-05T18:07:46Z"}, "committer": {"name": "Michael Meissner", "email": "Michael Meissner meissner@linux.ibm.com", "date": "2020-05-05T18:07:46Z"}, "message": "Remove files meant for a private branch", "tree": {"sha": "17b75e60e9f47673a6e341b266ad97410b4d5060", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/17b75e60e9f47673a6e341b266ad97410b4d5060"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f5f2a77571a35cacf35e1e2d80a6cd11fdd718de", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f5f2a77571a35cacf35e1e2d80a6cd11fdd718de", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f5f2a77571a35cacf35e1e2d80a6cd11fdd718de", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f5f2a77571a35cacf35e1e2d80a6cd11fdd718de/comments", "author": null, "committer": null, "parents": [{"sha": "35a4fe9dcf80774e390cdcbf162454842fe28334", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/35a4fe9dcf80774e390cdcbf162454842fe28334", "html_url": "https://github.com/Rust-GCC/gccrs/commit/35a4fe9dcf80774e390cdcbf162454842fe28334"}], "stats": {"total": 82, "additions": 0, "deletions": 82}, "files": [{"sha": "5711054f3a4371b0c6a72a7f5bd03acd9487014c", "filename": "gcc/ChangeLog.meissner", "status": "removed", "additions": 0, "deletions": 59, "changes": 59, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/35a4fe9dcf80774e390cdcbf162454842fe28334/gcc%2FChangeLog.meissner", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/35a4fe9dcf80774e390cdcbf162454842fe28334/gcc%2FChangeLog.meissner", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog.meissner?ref=35a4fe9dcf80774e390cdcbf162454842fe28334", "patch": "@@ -1,59 +0,0 @@\n-2020-05-05  Michael Meissner  <meissner@linux.ibm.com>\n-\n-\t(ieee128-lib-patch009b)\n-\t* config/rs6000/rs6000-builtin.def (scalar_extract_exptf): Add\n-\tlong double versions of the float128 built-in functions.\n-\t(scalar_extract_sigtf): Likewise.\n-\t(scalar_test_neg_tf): Likewise.\n-\t(scalar_insert_exp_tf): Likewise.\n-\t(scalar_insert_exp_tfp): Likewise.\n-\t(scalar_cmp_exp_tf_gt): Likewise.\n-\t(scalar_cmp_exp_tf_lt): Likewise.\n-\t(scalar_cmp_exp_tf_eq): Likewise.\n-\t(scalar_cmp_exp_tf_unordered): Likewise.\n-\t* config/rs6000/rs6000-call.c (altivec_overloaded_builtins): Add\n-\tlong double variants of the float128 built-in functions.\n-\t(rs6000_expand_builtin): Convert some more float128 built-in\n-\tfunctions into supporting long double\n-\n-2020-05-05  Michael Meissner  <meissner@linux.ibm.com>\n-\n-\t(ieee128-lib-patch007b)\n-\t* config/rs6000/rs6000-c.c (rs6000_cpu_cpp_builtins): Map all of\n-\tthe special f128 constant builtins to the long double version if\n-\tlong double is IEEE 128-bit.\n-\n-2020-05-05  Michael Meissner  <meissner@linux.ibm.com>\n-\n-\t(ieee128-lib-patch005b)\n-\t* config/rs6000/rs6000-c.c (rs6000_cpu_cpp_builtins): If long\n-\tdouble is IEEE 128-bit, map the old 'q' built-in functions to\n-\t'f128' versions.  Also map the silent NaN f128 function to the\n-\tlong double version.\n-\n-2020-05-05  Michael Meissner  <meissner@linux.ibm.com>\n-\n-\t(ieee128-lib-patch004b)\n-\t* config/rs6000/rs6000.c (rs6000_mangle_decl_assembler_name): Add\n-\tspecial cases for built-in functions that return or use long\n-\tdouble, but don't end in 'l'.\n-\n-2020-05-05  Michael Meissner  <meissner@linux.ibm.com>\n-\n-\t(ieee128-lib-patch002b)\n-\tPR target/94630\n-\t* config/rs6000/rs6000.c (rs6000_mangle_decl_assembler_name): When\n-\tlong double is IEEE 128-bit, map *printf and *scanf built-in\n-\tfunctions to the IEEE 128-bit name.\n-\n-2020-05-05  Michael Meissner  <meissner@linux.ibm.com>\n-\n-\t(ieee128-lib-patch001b)\n-\tPR target/94630\n-\t* config/rs6000/rs6000.c (rs6000_mangle_decl_assembler_name): Do\n-\tthe mapping for <name>l to <name>f128 when the long double default\n-\tis IEEE 128-bit.\n-\n-2020-05-05   Michael Meissner  <meissner@linux.ibm.com>\n-\n-\tClone branch"}, {"sha": "98683f4355447c7bd1743d767964e72d467bf53f", "filename": "gcc/c-family/ChangeLog.meissner", "status": "removed", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/35a4fe9dcf80774e390cdcbf162454842fe28334/gcc%2Fc-family%2FChangeLog.meissner", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/35a4fe9dcf80774e390cdcbf162454842fe28334/gcc%2Fc-family%2FChangeLog.meissner", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2FChangeLog.meissner?ref=35a4fe9dcf80774e390cdcbf162454842fe28334", "patch": "@@ -1,4 +0,0 @@\n-2020-05-05   Michael Meissner  <meissner@linux.ibm.com>\n-\n-\tClone branch\n-"}, {"sha": "98683f4355447c7bd1743d767964e72d467bf53f", "filename": "gcc/c/ChangeLog.meissner", "status": "removed", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/35a4fe9dcf80774e390cdcbf162454842fe28334/gcc%2Fc%2FChangeLog.meissner", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/35a4fe9dcf80774e390cdcbf162454842fe28334/gcc%2Fc%2FChangeLog.meissner", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc%2FChangeLog.meissner?ref=35a4fe9dcf80774e390cdcbf162454842fe28334", "patch": "@@ -1,4 +0,0 @@\n-2020-05-05   Michael Meissner  <meissner@linux.ibm.com>\n-\n-\tClone branch\n-"}, {"sha": "990d542109d3f2c106b51d70bb01b583126356ad", "filename": "gcc/testsuite/ChangeLog.meissner", "status": "removed", "additions": 0, "deletions": 15, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/35a4fe9dcf80774e390cdcbf162454842fe28334/gcc%2Ftestsuite%2FChangeLog.meissner", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/35a4fe9dcf80774e390cdcbf162454842fe28334/gcc%2Ftestsuite%2FChangeLog.meissner", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog.meissner?ref=35a4fe9dcf80774e390cdcbf162454842fe28334", "patch": "@@ -1,15 +0,0 @@\n-2020-05-05  Michael Meissner  <meissner@linux.ibm.com>\n-\n-\t(ieee128-lib-patch008b)\n-\t* gcc.target/powerpc/pr70117.c: Don't use LDBL_MAX if __ibm128 is\n-\tnot the same as long double.\n-\n-2020-05-05  Michael Meissner  <meissner@linux.ibm.com>\n-\n-\t(ieee128-lib-patch006b)\n-\t* gcc.dg/nextafter-2.c: Add support for long double being IEEE\n-\t128-bit on PowerPC systems.\n-\n-2020-05-05   Michael Meissner  <meissner@linux.ibm.com>\n-\n-\tClone branch"}]}