{"sha": "c1b157a601ea9c1d2611d6b951ec0e46cc27ea01", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzFiMTU3YTYwMWVhOWMxZDI2MTFkNmI5NTFlYzBlNDZjYzI3ZWEwMQ==", "commit": {"author": {"name": "H.J. Lu", "email": "hongjiu.lu@intel.com", "date": "2010-06-21T21:56:47Z"}, "committer": {"name": "H.J. Lu", "email": "hjl@gcc.gnu.org", "date": "2010-06-21T21:56:47Z"}, "message": "Properly handle psrldq when optimizing for Atom.\n\ngcc/\n\n2010-06-21  H.J. Lu  <hongjiu.lu@intel.com>\n\n\tPR target/44615\n\t* config/i386/atom.md (atom_sseishft_2): Also check sseishft1.\n\n\t* config/i386/i386.md (type): Add sseishft1\n\n\t* config/i386/ppro_insn (ppro_insn): Also check sseishft1.\n\t(ppro_insn_load): Likewise.\n\t(ppro_insn_store): Likewise.\n\t(ppro_insn_both): Likewise.\n\n\t* config/i386/sse.md (sse2_lshrv1ti3): Add atom_unit.\n\t(*vec_extractv2di_1_rex64_avx): Replace sseishft with sseishft1\n\tfor type.\n\t(*vec_extractv2di_1_avx): Likewise.\n\t(*vec_extractv2di_1_rex64): Replace sseishft with sseishft1 for\n\ttype.  Remove atom_unit.\n\t(*vec_extractv2di_1_sse2): Likewise.\n\ngcc/testsuite/\n\n2010-06-21  H.J. Lu  <hongjiu.lu@intel.com>\n\n\tPR target/44615\n\t* gcc.target/i386/sse2-vec-2a.c: New.\n\nFrom-SVN: r161118", "tree": {"sha": "ebf152f2e86bd4364b0513da3280d3c96e87dd9a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ebf152f2e86bd4364b0513da3280d3c96e87dd9a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c1b157a601ea9c1d2611d6b951ec0e46cc27ea01", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c1b157a601ea9c1d2611d6b951ec0e46cc27ea01", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c1b157a601ea9c1d2611d6b951ec0e46cc27ea01", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c1b157a601ea9c1d2611d6b951ec0e46cc27ea01/comments", "author": {"login": "hjl-tools", "id": 1072356, "node_id": "MDQ6VXNlcjEwNzIzNTY=", "avatar_url": "https://avatars.githubusercontent.com/u/1072356?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hjl-tools", "html_url": "https://github.com/hjl-tools", "followers_url": "https://api.github.com/users/hjl-tools/followers", "following_url": "https://api.github.com/users/hjl-tools/following{/other_user}", "gists_url": "https://api.github.com/users/hjl-tools/gists{/gist_id}", "starred_url": "https://api.github.com/users/hjl-tools/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hjl-tools/subscriptions", "organizations_url": "https://api.github.com/users/hjl-tools/orgs", "repos_url": "https://api.github.com/users/hjl-tools/repos", "events_url": "https://api.github.com/users/hjl-tools/events{/privacy}", "received_events_url": "https://api.github.com/users/hjl-tools/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "c8259dd92ee1b0ac6b7e96509ee49abcf123f630", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c8259dd92ee1b0ac6b7e96509ee49abcf123f630", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c8259dd92ee1b0ac6b7e96509ee49abcf123f630"}], "stats": {"total": 58, "additions": 44, "deletions": 14}, "files": [{"sha": "1359a3bf3b5ac64bebc0a077b017f09af74ca316", "filename": "gcc/ChangeLog", "status": "modified", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c1b157a601ea9c1d2611d6b951ec0e46cc27ea01/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c1b157a601ea9c1d2611d6b951ec0e46cc27ea01/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=c1b157a601ea9c1d2611d6b951ec0e46cc27ea01", "patch": "@@ -1,3 +1,23 @@\n+2010-06-21  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\tPR target/44615\n+\t* config/i386/atom.md (atom_sseishft_2): Also check sseishft1.\n+\n+\t* config/i386/i386.md (type): Add sseishft1\n+\n+\t* config/i386/ppro_insn (ppro_insn): Also check sseishft1.\n+\t(ppro_insn_load): Likewise.\n+\t(ppro_insn_store): Likewise.\n+\t(ppro_insn_both): Likewise.\n+\n+\t* config/i386/sse.md (sse2_lshrv1ti3): Add atom_unit.\n+\t(*vec_extractv2di_1_rex64_avx): Replace sseishft with sseishft1\n+\tfor type.\n+\t(*vec_extractv2di_1_avx): Likewise.\n+\t(*vec_extractv2di_1_rex64): Replace sseishft with sseishft1 for\n+\ttype.  Remove atom_unit.\n+\t(*vec_extractv2di_1_sse2): Likewise.\n+\n 2010-06-21  DJ Delorie  <dj@redhat.com>\n \n \t* diagnostic.h (diagnostic_classification_change_t): New."}, {"sha": "1664269bac039d3231f999919a80a45b0ad984e0", "filename": "gcc/config/i386/atom.md", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c1b157a601ea9c1d2611d6b951ec0e46cc27ea01/gcc%2Fconfig%2Fi386%2Fatom.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c1b157a601ea9c1d2611d6b951ec0e46cc27ea01/gcc%2Fconfig%2Fi386%2Fatom.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fatom.md?ref=c1b157a601ea9c1d2611d6b951ec0e46cc27ea01", "patch": "@@ -501,9 +501,10 @@\n ;; if palignr or psrldq\n (define_insn_reservation  \"atom_sseishft_2\" 1\n   (and (eq_attr \"cpu\" \"atom\")\n-       (and (eq_attr \"type\" \"sseishft\")\n-            (and (eq_attr \"atom_unit\" \"sishuf\")\n-                 (match_operand 2 \"immediate_operand\"))))\n+       (ior (eq_attr \"type\" \"sseishft1\")\n+\t    (and (eq_attr \"type\" \"sseishft\")\n+\t\t (and (eq_attr \"atom_unit\" \"sishuf\")\n+\t\t      (match_operand 2 \"immediate_operand\")))))\n   \"atom-simple-0\")\n \n ;; if reg/mem op"}, {"sha": "48946697ffc7f55bdc397be66cef50f9fc01d3ac", "filename": "gcc/config/i386/i386.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c1b157a601ea9c1d2611d6b951ec0e46cc27ea01/gcc%2Fconfig%2Fi386%2Fi386.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c1b157a601ea9c1d2611d6b951ec0e46cc27ea01/gcc%2Fconfig%2Fi386%2Fi386.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.md?ref=c1b157a601ea9c1d2611d6b951ec0e46cc27ea01", "patch": "@@ -357,7 +357,7 @@\n    push,pop,call,callv,leave,\n    str,bitmanip,\n    fmov,fop,fsgn,fmul,fdiv,fpspc,fcmov,fcmp,fxch,fistp,fisttp,frndint,\n-   sselog,sselog1,sseiadd,sseiadd1,sseishft,sseimul,\n+   sselog,sselog1,sseiadd,sseiadd1,sseishft,sseishft1,sseimul,\n    sse,ssemov,sseadd,ssemul,ssecmp,ssecomi,ssecvt,ssecvt1,sseicvt,ssediv,sseins,\n    ssemuladd,sse4arg,lwp,\n    mmx,mmxmov,mmxadd,mmxmul,mmxcmp,mmxcvt,mmxshft\""}, {"sha": "20f457ab192c3c6be9d1ba0cc7afe30fdf80b154", "filename": "gcc/config/i386/ppro.md", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c1b157a601ea9c1d2611d6b951ec0e46cc27ea01/gcc%2Fconfig%2Fi386%2Fppro.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c1b157a601ea9c1d2611d6b951ec0e46cc27ea01/gcc%2Fconfig%2Fi386%2Fppro.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fppro.md?ref=c1b157a601ea9c1d2611d6b951ec0e46cc27ea01", "patch": "@@ -731,28 +731,28 @@\n (define_insn_reservation \"ppro_insn\" 1\n \t\t\t (and (eq_attr \"cpu\" \"pentiumpro\")\n \t\t\t      (and (eq_attr \"memory\" \"none,unknown\")\n-\t\t\t\t   (eq_attr \"type\" \"alu,alu1,negnot,incdec,icmp,test,setcc,icmov,push,pop,fxch,sseiadd,sseishft,sseimul,mmx,mmxadd,mmxcmp\")))\n+\t\t\t\t   (eq_attr \"type\" \"alu,alu1,negnot,incdec,icmp,test,setcc,icmov,push,pop,fxch,sseiadd,sseishft,sseishft1,sseimul,mmx,mmxadd,mmxcmp\")))\n \t\t\t \"decodern,(p0|p1)\")\n \n ;; read-modify and register-memory instructions have 2 or three uops,\n ;; so they have to be decoded on decoder0.\n (define_insn_reservation \"ppro_insn_load\" 3\n \t\t\t (and (eq_attr \"cpu\" \"pentiumpro\")\n \t\t\t      (and (eq_attr \"memory\" \"load\")\n-\t\t\t\t   (eq_attr \"type\" \"alu,alu1,negnot,incdec,icmp,test,setcc,icmov,push,pop,fxch,sseiadd,sseishft,sseimul,mmx,mmxadd,mmxcmp\")))\n+\t\t\t\t   (eq_attr \"type\" \"alu,alu1,negnot,incdec,icmp,test,setcc,icmov,push,pop,fxch,sseiadd,sseishft,sseishft1,sseimul,mmx,mmxadd,mmxcmp\")))\n \t\t\t \"decoder0,p2+(p0|p1)\")\n \n (define_insn_reservation \"ppro_insn_store\" 1\n \t\t\t (and (eq_attr \"cpu\" \"pentiumpro\")\n \t\t\t      (and (eq_attr \"memory\" \"store\")\n-\t\t\t\t   (eq_attr \"type\" \"alu,alu1,negnot,incdec,icmp,test,setcc,icmov,push,pop,fxch,sseiadd,sseishft,sseimul,mmx,mmxadd,mmxcmp\")))\n+\t\t\t\t   (eq_attr \"type\" \"alu,alu1,negnot,incdec,icmp,test,setcc,icmov,push,pop,fxch,sseiadd,sseishft,sseishft1,sseimul,mmx,mmxadd,mmxcmp\")))\n \t\t\t \"decoder0,(p0|p1),p4+p3\")\n \n ;; read-modify-store instructions produce 4 uops so they have to be\n ;; decoded on decoder0 as well.\n (define_insn_reservation \"ppro_insn_both\" 4\n \t\t\t (and (eq_attr \"cpu\" \"pentiumpro\")\n \t\t\t      (and (eq_attr \"memory\" \"both\")\n-\t\t\t\t   (eq_attr \"type\" \"alu,alu1,negnot,incdec,icmp,test,setcc,icmov,push,pop,fxch,sseiadd,sseishft,sseimul,mmx,mmxadd,mmxcmp\")))\n+\t\t\t\t   (eq_attr \"type\" \"alu,alu1,negnot,incdec,icmp,test,setcc,icmov,push,pop,fxch,sseiadd,sseishft,sseishft1,sseimul,mmx,mmxadd,mmxcmp\")))\n \t\t\t \"decoder0,p2+(p0|p1),p4+p3\")\n "}, {"sha": "1f8770fc37c8b375a87c34aa3b22b7047f787ca8", "filename": "gcc/config/i386/sse.md", "status": "modified", "additions": 5, "deletions": 6, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c1b157a601ea9c1d2611d6b951ec0e46cc27ea01/gcc%2Fconfig%2Fi386%2Fsse.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c1b157a601ea9c1d2611d6b951ec0e46cc27ea01/gcc%2Fconfig%2Fi386%2Fsse.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fsse.md?ref=c1b157a601ea9c1d2611d6b951ec0e46cc27ea01", "patch": "@@ -5967,6 +5967,7 @@\n   [(set_attr \"type\" \"sseishft\")\n    (set_attr \"prefix_data16\" \"1\")\n    (set_attr \"length_immediate\" \"1\")\n+   (set_attr \"atom_unit\" \"sishuf\")\n    (set_attr \"mode\" \"TI\")])\n \n (define_insn \"lshr<mode>3\"\n@@ -7397,7 +7398,7 @@\n    vpsrldq\\t{$8, %1, %0|%0, %1, 8}\n    vmovq\\t{%H1, %0|%0, %H1}\n    vmov{q}\\t{%H1, %0|%0, %H1}\"\n-  [(set_attr \"type\" \"ssemov,sseishft,ssemov,imov\")\n+  [(set_attr \"type\" \"ssemov,sseishft1,ssemov,imov\")\n    (set_attr \"length_immediate\" \"*,1,*,*\")\n    (set_attr \"memory\" \"*,none,*,*\")\n    (set_attr \"prefix\" \"vex\")\n@@ -7414,9 +7415,8 @@\n    psrldq\\t{$8, %0|%0, 8}\n    movq\\t{%H1, %0|%0, %H1}\n    mov{q}\\t{%H1, %0|%0, %H1}\"\n-  [(set_attr \"type\" \"ssemov,sseishft,ssemov,imov\")\n+  [(set_attr \"type\" \"ssemov,sseishft1,ssemov,imov\")\n    (set_attr \"length_immediate\" \"*,1,*,*\")\n-   (set_attr \"atom_unit\" \"*,sishuf,*,*\")\n    (set_attr \"memory\" \"*,none,*,*\")\n    (set_attr \"mode\" \"V2SF,TI,TI,DI\")])\n \n@@ -7432,7 +7432,7 @@\n    vmovhps\\t{%1, %0|%0, %1}\n    vpsrldq\\t{$8, %1, %0|%0, %1, 8}\n    vmovq\\t{%H1, %0|%0, %H1}\"\n-  [(set_attr \"type\" \"ssemov,sseishft,ssemov\")\n+  [(set_attr \"type\" \"ssemov,sseishft1,ssemov\")\n    (set_attr \"length_immediate\" \"*,1,*\")\n    (set_attr \"memory\" \"*,none,*\")\n    (set_attr \"prefix\" \"vex\")\n@@ -7449,9 +7449,8 @@\n    movhps\\t{%1, %0|%0, %1}\n    psrldq\\t{$8, %0|%0, 8}\n    movq\\t{%H1, %0|%0, %H1}\"\n-  [(set_attr \"type\" \"ssemov,sseishft,ssemov\")\n+  [(set_attr \"type\" \"ssemov,sseishft1,ssemov\")\n    (set_attr \"length_immediate\" \"*,1,*\")\n-   (set_attr \"atom_unit\" \"*,sishuf,*\")\n    (set_attr \"memory\" \"*,none,*\")\n    (set_attr \"mode\" \"V2SF,TI,TI\")])\n "}, {"sha": "f8f037289b89298a3e2eade6a6fa6238570df66b", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c1b157a601ea9c1d2611d6b951ec0e46cc27ea01/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c1b157a601ea9c1d2611d6b951ec0e46cc27ea01/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=c1b157a601ea9c1d2611d6b951ec0e46cc27ea01", "patch": "@@ -1,3 +1,8 @@\n+2010-06-21  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\tPR target/44615\n+\t* gcc.target/i386/sse2-vec-2a.c: New.\n+\n 2010-06-21  DJ Delorie  <dj@redhat.com>\n \n \t* gcc.dg/pragma-diag-1.c: New."}, {"sha": "f230f27d45a9ce21fc800c8f8920ae3e801fa7aa", "filename": "gcc/testsuite/gcc.target/i386/sse2-vec-2a.c", "status": "added", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c1b157a601ea9c1d2611d6b951ec0e46cc27ea01/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fsse2-vec-2a.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c1b157a601ea9c1d2611d6b951ec0e46cc27ea01/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fsse2-vec-2a.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fsse2-vec-2a.c?ref=c1b157a601ea9c1d2611d6b951ec0e46cc27ea01", "patch": "@@ -0,0 +1,5 @@\n+/* { dg-do run } */\n+/* { dg-options \"-O2 -msse2 -mtune=atom\" } */\n+/* { dg-require-effective-target sse2 } */\n+\n+#include \"sse2-vec-2.c\""}]}