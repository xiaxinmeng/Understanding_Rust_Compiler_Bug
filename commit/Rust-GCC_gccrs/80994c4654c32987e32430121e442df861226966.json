{"sha": "80994c4654c32987e32430121e442df861226966", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODA5OTRjNDY1NGMzMjk4N2UzMjQzMDEyMWU0NDJkZjg2MTIyNjk2Ng==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2016-10-08T13:50:50Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2016-10-08T13:50:50Z"}, "message": "gen-pass-instances.awk: Rewritten.\n\n\t* gen-pass-instances.awk: Rewritten.\n\t* Makefile.in (pass-instances.def): Depend on $(PASSES_EXTRA), pass\n\t$(PASSES_EXTRA) after passes.def to the script.\n\t* config/i386/t-i386 (PASSES_EXTRA): Add i386-passes.def.\n\t* config/i386/i386-passes.def: New file.\n\t* config/i386/i386-protos.h (make_pass_insert_vzeroupper,\n\tmake_pass_stv): Declare.\n\t* config/i386/i386.c (pass_stv::pass_stv): Initialize timode_p to\n\tfalse.\n\t(pass_stv::gate): Depending on timode_p member require TARGET_64BIT\n\tor !TARGET_64BIT.\n\t(pass_stv::clone, pass_stv::set_pass_param): New methods.\n\t(pass_stv::timode_p): New non-static data member.\n\t(ix86_option_override): Don't register passes here.\n\nFrom-SVN: r240888", "tree": {"sha": "d0cc5e44ba938d606ad3daf9de36fd79d3cc9d04", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d0cc5e44ba938d606ad3daf9de36fd79d3cc9d04"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/80994c4654c32987e32430121e442df861226966", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/80994c4654c32987e32430121e442df861226966", "html_url": "https://github.com/Rust-GCC/gccrs/commit/80994c4654c32987e32430121e442df861226966", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/80994c4654c32987e32430121e442df861226966/comments", "author": null, "committer": null, "parents": [{"sha": "478167be6297adb9774abfea589b6b1d0a7f227e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/478167be6297adb9774abfea589b6b1d0a7f227e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/478167be6297adb9774abfea589b6b1d0a7f227e"}], "stats": {"total": 31, "additions": 31, "deletions": 0}, "files": [{"sha": "3d2cb5d13f7fcd817c70a71c8fa0b6c19486fb5c", "filename": "gcc/config/i386/i386-passes.def", "status": "added", "additions": 31, "deletions": 0, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/80994c4654c32987e32430121e442df861226966/gcc%2Fconfig%2Fi386%2Fi386-passes.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/80994c4654c32987e32430121e442df861226966/gcc%2Fconfig%2Fi386%2Fi386-passes.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386-passes.def?ref=80994c4654c32987e32430121e442df861226966", "patch": "@@ -0,0 +1,31 @@\n+/* Description of target passes for IA-32 \n+   Copyright (C) 2016 Free Software Foundation, Inc.\n+\n+This file is part of GCC.\n+\n+GCC is free software; you can redistribute it and/or modify it under\n+the terms of the GNU General Public License as published by the Free\n+Software Foundation; either version 3, or (at your option) any later\n+version.\n+\n+GCC is distributed in the hope that it will be useful, but WITHOUT ANY\n+WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GCC; see the file COPYING3.  If not see\n+<http://www.gnu.org/licenses/>.  */\n+\n+/*\n+   Macros that can be used in this file:\n+   INSERT_PASS_AFTER (PASS, INSTANCE, TGT_PASS)\n+   INSERT_PASS_BEFORE (PASS, INSTANCE, TGT_PASS)\n+   REPLACE_PASS (PASS, INSTANCE, TGT_PASS)\n+ */\n+\n+  INSERT_PASS_AFTER (pass_reload, 1, pass_insert_vzeroupper);\n+  INSERT_PASS_AFTER (pass_combine, 1, pass_stv, false /* timode_p */);\n+  /* Run the 64-bit STV pass before the CSE pass so that CONST0_RTX and\n+     CONSTM1_RTX generated by the STV pass can be CSEed.  */\n+  INSERT_PASS_BEFORE (pass_cse2, 1, pass_stv, true /* timode_p */);"}]}