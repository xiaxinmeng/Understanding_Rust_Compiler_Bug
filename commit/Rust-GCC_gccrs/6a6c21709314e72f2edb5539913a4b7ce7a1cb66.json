{"sha": "6a6c21709314e72f2edb5539913a4b7ce7a1cb66", "node_id": "C_kwDOANBUbNoAKDZhNmMyMTcwOTMxNGU3MmYyZWRiNTUzOTkxM2E0YjdjZTdhMWNiNjY", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2022-02-17T09:22:03Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-02-17T09:22:03Z"}, "message": "Merge #932\n\n932: Add location information to MacroRule r=CohenArthur a=CohenArthur\n\nCloses #930 \r\n\r\nThis PR adds location information to the `MacroRule` structure.\r\n\r\nThe location is from the beginning of the invokation pattern, so that errors look like so:\r\n```rust\r\ntest.rs:2:5: error: ...\r\n    2 |     ($a:expr, $b:expr) => { a + b }\r\n      |     ^\r\n```\n\nCo-authored-by: Arthur Cohen <arthur.cohen@embecosm.com>", "tree": {"sha": "af8bdb51ac35038c8d6804e5ce0921981a80de94", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/af8bdb51ac35038c8d6804e5ce0921981a80de94"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6a6c21709314e72f2edb5539913a4b7ce7a1cb66", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJiDhO7CRBK7hj4Ov3rIwAA0swIAIQ7Vba7ia37WolDlLI1WmH/\n4xKKfoNR71ApeA6r/VlSwNffvTKY2itdDEsmSs/enz3tFf79D98PeJrLfC5tNhpl\nlgC677b7MzEr80Tga9SIAlLr154DWXmDiD9fLyPjSAp3giB58QbLxywmJ5zQof2P\nSnlLUtxHCT9OB70ZzFSTKenaTHjMGFofGB4lm8S7wovJjCLlSbH0LLcjwsuwjnSf\nLx+SgLzsbiM7HRA6J9SCxSI33Nff8h1BIaOf7uszBoJg7OywyRBR+7i0ha0ltCDT\niqNxAP4FeHybDtKANMwH/LTX3f6EKQmEb4GR3uxH246RpFjR0xJp/ErE23WQQT4=\n=erw5\n-----END PGP SIGNATURE-----\n", "payload": "tree af8bdb51ac35038c8d6804e5ce0921981a80de94\nparent d81ba63f4829c12b89e87564c398e95879c89db1\nparent c1e72db48a0fa36966f2517cbf45fa2b758af268\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1645089723 +0000\ncommitter GitHub <noreply@github.com> 1645089723 +0000\n\nMerge #932\n\n932: Add location information to MacroRule r=CohenArthur a=CohenArthur\n\nCloses #930 \r\n\r\nThis PR adds location information to the `MacroRule` structure.\r\n\r\nThe location is from the beginning of the invokation pattern, so that errors look like so:\r\n```rust\r\ntest.rs:2:5: error: ...\r\n    2 |     ($a:expr, $b:expr) => { a + b }\r\n      |     ^\r\n```\n\nCo-authored-by: Arthur Cohen <arthur.cohen@embecosm.com>\n"}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6a6c21709314e72f2edb5539913a4b7ce7a1cb66", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6a6c21709314e72f2edb5539913a4b7ce7a1cb66", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6a6c21709314e72f2edb5539913a4b7ce7a1cb66/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d81ba63f4829c12b89e87564c398e95879c89db1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d81ba63f4829c12b89e87564c398e95879c89db1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d81ba63f4829c12b89e87564c398e95879c89db1"}, {"sha": "c1e72db48a0fa36966f2517cbf45fa2b758af268", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c1e72db48a0fa36966f2517cbf45fa2b758af268", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c1e72db48a0fa36966f2517cbf45fa2b758af268"}], "stats": {"total": 27, "additions": 16, "deletions": 11}, "files": [{"sha": "e0524c6c21cd332488ef160c5183b7d186bf9aad", "filename": "gcc/rust/ast/rust-macro.h", "status": "modified", "additions": 11, "deletions": 8, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6a6c21709314e72f2edb5539913a4b7ce7a1cb66/gcc%2Frust%2Fast%2Frust-macro.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6a6c21709314e72f2edb5539913a4b7ce7a1cb66/gcc%2Frust%2Fast%2Frust-macro.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Fast%2Frust-macro.h?ref=6a6c21709314e72f2edb5539913a4b7ce7a1cb66", "patch": "@@ -20,6 +20,7 @@\n #define RUST_AST_MACRO_H\n \n #include \"rust-ast.h\"\n+#include \"rust-location.h\"\n \n namespace Rust {\n namespace AST {\n@@ -295,26 +296,28 @@ struct MacroRule\n private:\n   MacroMatcher matcher;\n   MacroTranscriber transcriber;\n-\n-  // TODO: should store location information?\n+  Location locus;\n \n public:\n-  MacroRule (MacroMatcher matcher, MacroTranscriber transcriber)\n-    : matcher (std::move (matcher)), transcriber (std::move (transcriber))\n+  MacroRule (MacroMatcher matcher, MacroTranscriber transcriber, Location locus)\n+    : matcher (std::move (matcher)), transcriber (std::move (transcriber)),\n+      locus (locus)\n   {}\n \n   // Returns whether macro rule is in error state.\n   bool is_error () const { return matcher.is_error (); }\n \n   // Creates an error state macro rule.\n-  static MacroRule create_error ()\n+  static MacroRule create_error (Location locus)\n   {\n-    // FIXME: Once #928 is merged, give location to MacroMatcher\n-    return MacroRule (MacroMatcher::create_error (Location ()),\n+    return MacroRule (MacroMatcher::create_error (locus),\n \t\t      MacroTranscriber (DelimTokenTree::create_empty (),\n-\t\t\t\t\tLocation ()));\n+\t\t\t\t\tLocation ()),\n+\t\t      locus);\n   }\n \n+  Location get_locus () const { return locus; }\n+\n   std::string as_string () const;\n };\n "}, {"sha": "748381868adc2786cc579262bedc0659d7380ce6", "filename": "gcc/rust/parse/rust-parse-impl.h", "status": "modified", "additions": 5, "deletions": 3, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6a6c21709314e72f2edb5539913a4b7ce7a1cb66/gcc%2Frust%2Fparse%2Frust-parse-impl.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6a6c21709314e72f2edb5539913a4b7ce7a1cb66/gcc%2Frust%2Fparse%2Frust-parse-impl.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Fparse%2Frust-parse-impl.h?ref=6a6c21709314e72f2edb5539913a4b7ce7a1cb66", "patch": "@@ -1678,23 +1678,25 @@ template <typename ManagedTokenSource>\n AST::MacroRule\n Parser<ManagedTokenSource>::parse_macro_rule ()\n {\n+  Location locus = lexer.peek_token ()->get_locus ();\n+\n   // parse macro matcher\n   AST::MacroMatcher matcher = parse_macro_matcher ();\n \n   if (matcher.is_error ())\n-    return AST::MacroRule::create_error ();\n+    return AST::MacroRule::create_error (locus);\n \n   if (!skip_token (MATCH_ARROW))\n     {\n       // skip after somewhere?\n-      return AST::MacroRule::create_error ();\n+      return AST::MacroRule::create_error (locus);\n     }\n \n   // parse transcriber (this is just a delim token tree)\n   Location token_tree_loc = lexer.peek_token ()->get_locus ();\n   AST::MacroTranscriber transcriber (parse_delim_token_tree (), token_tree_loc);\n \n-  return AST::MacroRule (std::move (matcher), std::move (transcriber));\n+  return AST::MacroRule (std::move (matcher), std::move (transcriber), locus);\n }\n \n // Parses a macro matcher (part of a macro rule definition)."}]}