{"sha": "3b8af25b7ad47b31463046af1f244ad7af5900a9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2I4YWYyNWI3YWQ0N2IzMTQ2MzA0NmFmMWYyNDRhZDdhZjU5MDBhOQ==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2013-03-01T21:06:04Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2013-03-01T21:06:04Z"}, "message": "re PR middle-end/56461 (GCC is leaking lots of memory)\n\n\tPR middle-end/56461\n\t* files.c (_cpp_save_file_entries): Free result at the end.\n\t* pch.c (cpp_string_free): New function.\n\t(cpp_save_state): Use it in htab_create call.\n\t(cpp_write_pch_deps): Free ss->defs.  Destroy ss->definedhash.\n\nFrom-SVN: r196394", "tree": {"sha": "78997fd39595c6ea1728a0697ea35af66c6f87b7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/78997fd39595c6ea1728a0697ea35af66c6f87b7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3b8af25b7ad47b31463046af1f244ad7af5900a9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3b8af25b7ad47b31463046af1f244ad7af5900a9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3b8af25b7ad47b31463046af1f244ad7af5900a9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3b8af25b7ad47b31463046af1f244ad7af5900a9/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "689eaba3227c8616894de845d38ef9c8e10de9a1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/689eaba3227c8616894de845d38ef9c8e10de9a1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/689eaba3227c8616894de845d38ef9c8e10de9a1"}], "stats": {"total": 27, "additions": 25, "deletions": 2}, "files": [{"sha": "3d8473dabb6e2f4ba900bb18b0ed0f53558cede2", "filename": "libcpp/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3b8af25b7ad47b31463046af1f244ad7af5900a9/libcpp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3b8af25b7ad47b31463046af1f244ad7af5900a9/libcpp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libcpp%2FChangeLog?ref=3b8af25b7ad47b31463046af1f244ad7af5900a9", "patch": "@@ -1,3 +1,11 @@\n+2013-03-01  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR middle-end/56461\n+\t* files.c (_cpp_save_file_entries): Free result at the end.\n+\t* pch.c (cpp_string_free): New function.\n+\t(cpp_save_state): Use it in htab_create call.\n+\t(cpp_write_pch_deps): Free ss->defs.  Destroy ss->definedhash.\n+\n 2013-02-28  Jakub Jelinek  <jakub@redhat.com>\n \n \t* files.c (_cpp_find_file): If returning early, before storing"}, {"sha": "dae5526997fb2f7bce8fe8862ffd350baa10979b", "filename": "libcpp/files.c", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3b8af25b7ad47b31463046af1f244ad7af5900a9/libcpp%2Ffiles.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3b8af25b7ad47b31463046af1f244ad7af5900a9/libcpp%2Ffiles.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libcpp%2Ffiles.c?ref=3b8af25b7ad47b31463046af1f244ad7af5900a9", "patch": "@@ -1771,6 +1771,7 @@ _cpp_save_file_entries (cpp_reader *pfile, FILE *fp)\n   struct pchf_data *result;\n   size_t result_size;\n   _cpp_file *f;\n+  bool ret;\n \n   for (f = pfile->all_files; f; f = f->next_file)\n     ++count;\n@@ -1827,7 +1828,9 @@ _cpp_save_file_entries (cpp_reader *pfile, FILE *fp)\n   qsort (result->entries, result->count, sizeof (struct pchf_entry),\n \t pchf_save_compare);\n \n-  return fwrite (result, result_size, 1, fp) == 1;\n+  ret = fwrite (result, result_size, 1, fp) == 1;\n+  free (result);\n+  return ret;\n }\n \n /* Read the pchf_data structure from F.  */"}, {"sha": "6270bda53ed27975ad2a23cdc18a88be68fe1cf8", "filename": "libcpp/pch.c", "status": "modified", "additions": 13, "deletions": 1, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3b8af25b7ad47b31463046af1f244ad7af5900a9/libcpp%2Fpch.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3b8af25b7ad47b31463046af1f244ad7af5900a9/libcpp%2Fpch.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libcpp%2Fpch.c?ref=3b8af25b7ad47b31463046af1f244ad7af5900a9", "patch": "@@ -187,6 +187,16 @@ cpp_string_eq (const void *a_p, const void *b_p)\n \t  && memcmp (a->text, b->text, a->len) == 0);\n }\n \n+/* Free memory associated with cpp_string.  */\n+\n+static void\n+cpp_string_free (void *a_p)\n+{\n+  struct cpp_string *a = (struct cpp_string *) a_p;\n+  free ((void *) a->text);\n+  free (a);\n+}\n+\n /* Save the current definitions of the cpp_reader for dependency\n    checking purposes.  When writing a precompiled header, this should\n    be called at the same point in the compilation as cpp_valid_state\n@@ -198,7 +208,7 @@ cpp_save_state (cpp_reader *r, FILE *f)\n   /* Save the list of non-void identifiers for the dependency checking.  */\n   r->savedstate = XNEW (struct cpp_savedstate);\n   r->savedstate->definedhash = htab_create (100, cpp_string_hash,\n-\t\t\t\t\t    cpp_string_eq, NULL);\n+\t\t\t\t\t    cpp_string_eq, cpp_string_free);\n   cpp_forall_identifiers (r, save_idents, r->savedstate);\n \n   /* Write out the list of defined identifiers.  */\n@@ -336,6 +346,8 @@ cpp_write_pch_deps (cpp_reader *r, FILE *f)\n       return -1;\n     }\n   free (ss->definedstrs);\n+  free (ss->defs);\n+  htab_delete (ss->definedhash);\n \n   /* Free the saved state.  */\n   free (ss);"}]}