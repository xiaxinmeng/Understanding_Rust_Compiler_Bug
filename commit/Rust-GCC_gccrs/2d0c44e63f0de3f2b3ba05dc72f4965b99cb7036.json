{"sha": "2d0c44e63f0de3f2b3ba05dc72f4965b99cb7036", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmQwYzQ0ZTYzZjBkZTNmMmIzYmEwNWRjNzJmNDk2NWI5OWNiNzAzNg==", "commit": {"author": {"name": "Anatoly Sokolov", "email": "aesok@post.ru", "date": "2007-07-05T20:41:29Z"}, "committer": {"name": "Anatoly Sokolov", "email": "aesok@gcc.gnu.org", "date": "2007-07-05T20:41:29Z"}, "message": "avr.md (zero_extendqihi2, [...]): Change to define_insn_and_split.\n\n\t* config/avr/avr.md (zero_extendqihi2, zero_extendqisi2, \n\tzero_extendhisi2): Change to define_insn_and_split. \n\t(zero_extendqidi2, zero_extendhidi2, zero_extendsidi2): New.\n\nFrom-SVN: r126387", "tree": {"sha": "0bb8291350a6e9a7e3f6adf3da6f9f08b7a1e185", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0bb8291350a6e9a7e3f6adf3da6f9f08b7a1e185"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2d0c44e63f0de3f2b3ba05dc72f4965b99cb7036", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2d0c44e63f0de3f2b3ba05dc72f4965b99cb7036", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2d0c44e63f0de3f2b3ba05dc72f4965b99cb7036", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2d0c44e63f0de3f2b3ba05dc72f4965b99cb7036/comments", "author": null, "committer": null, "parents": [{"sha": "ec162f0dca286e595676101d0b080be5a6095cb9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ec162f0dca286e595676101d0b080be5a6095cb9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ec162f0dca286e595676101d0b080be5a6095cb9"}], "stats": {"total": 118, "additions": 90, "deletions": 28}, "files": [{"sha": "f661697718ffb2c3c5c2f1cc1a94af3afd55f95d", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2d0c44e63f0de3f2b3ba05dc72f4965b99cb7036/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2d0c44e63f0de3f2b3ba05dc72f4965b99cb7036/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=2d0c44e63f0de3f2b3ba05dc72f4965b99cb7036", "patch": "@@ -1,3 +1,9 @@\n+2007-07-05 Anatoly Sokolov <aesok@post.ru>\n+\n+\t* config/avr/avr.md (zero_extendqihi2, zero_extendqisi2, \n+\tzero_extendhisi2): Change to define_insn_and_split. \n+\t(zero_extendqidi2, zero_extendhidi2, zero_extendsidi2): New.\n+\n 2007-07-05  Paolo Bonzini  <bonzini@gnu.org>\n \n \t* function.c (match_asm_constraints_1, rest_of_match_asm_constraints,"}, {"sha": "8c8afee4dfc6824171d64f49ac3e2825fa34f23e", "filename": "gcc/config/avr/avr.md", "status": "modified", "additions": 84, "deletions": 28, "changes": 112, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2d0c44e63f0de3f2b3ba05dc72f4965b99cb7036/gcc%2Fconfig%2Favr%2Favr.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2d0c44e63f0de3f2b3ba05dc72f4965b99cb7036/gcc%2Fconfig%2Favr%2Favr.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Favr%2Favr.md?ref=2d0c44e63f0de3f2b3ba05dc72f4965b99cb7036", "patch": "@@ -1685,39 +1685,95 @@\n ;; xx<---x xx<---x xx<---x xx<---x xx<---x xx<---x xx<---x xx<---x xx<---x\n ;; zero extend\n \n-(define_insn \"zero_extendqihi2\"\n-  [(set (match_operand:HI 0 \"register_operand\" \"=r,r\")\n-        (zero_extend:HI (match_operand:QI 1 \"register_operand\" \"0,*r\")))]\n+(define_insn_and_split \"zero_extendqihi2\"\n+  [(set (match_operand:HI 0 \"register_operand\" \"=r\")\n+        (zero_extend:HI (match_operand:QI 1 \"register_operand\" \"r\")))]\n   \"\"\n-  \"@\n-\tclr %B0\n-\tmov %A0,%A1\\;clr %B0\"\n-  [(set_attr \"length\" \"1,2\")\n-   (set_attr \"cc\" \"set_n,set_n\")])\n+  \"#\"\n+  \"reload_completed\"\n+  [(set (match_dup 2) (match_dup 1))\n+   (set (match_dup 3) (const_int 0))]\n+  \"unsigned int low_off = subreg_lowpart_offset (QImode, HImode);\n+   unsigned int high_off = subreg_highpart_offset (QImode, HImode);\n+   \n+   operands[2] = simplify_gen_subreg (QImode, operands[0], HImode, low_off);\n+   operands[3] = simplify_gen_subreg (QImode, operands[0], HImode, high_off);\n+  \")\n \n-(define_insn \"zero_extendqisi2\"\n-  [(set (match_operand:SI 0 \"register_operand\" \"=r,r\")\n-        (zero_extend:SI (match_operand:QI 1 \"register_operand\" \"0,*r\")))]\n+(define_insn_and_split \"zero_extendqisi2\"\n+  [(set (match_operand:SI 0 \"register_operand\" \"=r\")\n+        (zero_extend:SI (match_operand:QI 1 \"register_operand\" \"r\")))]\n   \"\"\n-  \"@\n-\tclr %B0\\;clr %C0\\;clr %D0\n-\tmov %A0,%A1\\;clr %B0\\;clr %C0\\;clr %D0\"\n-  [(set_attr \"length\" \"3,4\")\n-   (set_attr \"cc\" \"set_n,set_n\")])\n+  \"#\"\n+  \"reload_completed\"\n+  [(set (match_dup 2) (zero_extend:HI (match_dup 1)))\n+   (set (match_dup 3) (const_int 0))]\n+  \"unsigned int low_off = subreg_lowpart_offset (HImode, SImode);\n+   unsigned int high_off = subreg_highpart_offset (HImode, SImode);\n+   \n+   operands[2] = simplify_gen_subreg (HImode, operands[0], SImode, low_off);\n+   operands[3] = simplify_gen_subreg (HImode, operands[0], SImode, high_off);\n+  \")\n \n-(define_insn \"zero_extendhisi2\"\n-  [(set (match_operand:SI 0 \"register_operand\" \"=r,&r\")\n-        (zero_extend:SI (match_operand:HI 1 \"register_operand\" \"0,*r\")))]\n+(define_insn_and_split \"zero_extendhisi2\"\n+  [(set (match_operand:SI 0 \"register_operand\" \"=r\")\n+        (zero_extend:SI (match_operand:HI 1 \"register_operand\" \"r\")))]\n   \"\"\n-  \"@\n-\tclr %C0\\;clr %D0\n-\t{mov %A0,%A1\\;mov %B0,%B1|movw %A0,%A1}\\;clr %C0\\;clr %D0\"\n-  [(set_attr_alternative \"length\"\n-\t\t\t [(const_int 2)\n-\t\t\t  (if_then_else (eq_attr \"mcu_have_movw\" \"yes\")\n-\t\t\t\t\t(const_int 3)\n-\t\t\t\t\t(const_int 4))])\n-   (set_attr \"cc\" \"set_n,set_n\")])\n+  \"#\"\n+  \"reload_completed\"\n+  [(set (match_dup 2) (match_dup 1))\n+   (set (match_dup 3) (const_int 0))]\n+  \"unsigned int low_off = subreg_lowpart_offset (HImode, SImode);\n+   unsigned int high_off = subreg_highpart_offset (HImode, SImode);\n+   \n+   operands[2] = simplify_gen_subreg (HImode, operands[0], SImode, low_off);\n+   operands[3] = simplify_gen_subreg (HImode, operands[0], SImode, high_off);\n+  \")\n+\n+(define_insn_and_split \"zero_extendqidi2\"\n+  [(set (match_operand:DI 0 \"register_operand\" \"=r\")\n+        (zero_extend:DI (match_operand:QI 1 \"register_operand\" \"r\")))]\n+  \"\"\n+  \"#\"\n+  \"reload_completed\"\n+  [(set (match_dup 2) (zero_extend:SI (match_dup 1)))\n+   (set (match_dup 3) (const_int 0))]\n+  \"unsigned int low_off = subreg_lowpart_offset (SImode, DImode);\n+   unsigned int high_off = subreg_highpart_offset (SImode, DImode);\n+   \n+   operands[2] = simplify_gen_subreg (SImode, operands[0], DImode, low_off);\n+   operands[3] = simplify_gen_subreg (SImode, operands[0], DImode, high_off);\n+  \")\n+\n+(define_insn_and_split \"zero_extendhidi2\"\n+  [(set (match_operand:DI 0 \"register_operand\" \"=r\")\n+        (zero_extend:DI (match_operand:HI 1 \"register_operand\" \"r\")))]\n+  \"\"\n+  \"#\"\n+  \"reload_completed\"\n+  [(set (match_dup 2) (zero_extend:SI (match_dup 1)))\n+   (set (match_dup 3) (const_int 0))]\n+  \"unsigned int low_off = subreg_lowpart_offset (SImode, DImode);\n+   unsigned int high_off = subreg_highpart_offset (SImode, DImode);\n+   \n+   operands[2] = simplify_gen_subreg (SImode, operands[0], DImode, low_off);\n+   operands[3] = simplify_gen_subreg (SImode, operands[0], DImode, high_off);\n+  \")\n+\n+(define_insn_and_split \"zero_extendsidi2\"\n+  [(set (match_operand:DI 0 \"register_operand\" \"=r\")\n+        (zero_extend:DI (match_operand:SI 1 \"register_operand\" \"r\")))]\n+  \"\"\n+  \"#\"\n+  \"reload_completed\"\n+  [(set (match_dup 2) (match_dup 1))\n+   (set (match_dup 3) (const_int 0))]\n+  \"unsigned int low_off = subreg_lowpart_offset (SImode, DImode);\n+   unsigned int high_off = subreg_highpart_offset (SImode, DImode);\n+   \n+   operands[2] = simplify_gen_subreg (SImode, operands[0], DImode, low_off);\n+   operands[3] = simplify_gen_subreg (SImode, operands[0], DImode, high_off);\n+  \")\n \n ;;<=><=><=><=><=><=><=><=><=><=><=><=><=><=><=><=><=><=><=><=><=><=><=><=><=>\n ;; compare"}]}