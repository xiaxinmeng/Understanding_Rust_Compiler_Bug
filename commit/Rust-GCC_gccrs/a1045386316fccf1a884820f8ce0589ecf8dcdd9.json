{"sha": "a1045386316fccf1a884820f8ce0589ecf8dcdd9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTEwNDUzODYzMTZmY2NmMWE4ODQ4MjBmOGNlMDU4OWVjZjhkY2RkOQ==", "commit": {"author": {"name": "Fernando Nasser", "email": "fnasser@redhat.com", "date": "2003-12-02T16:19:28Z"}, "committer": {"name": "Fernando Nasser", "email": "fnasser@gcc.gnu.org", "date": "2003-12-02T16:19:28Z"}, "message": "GtkListPeer.java (handleEvent): New method.\n\n2003-12-02  Fernando Nasser  <fnasser@redhat.com>\n\n        * gnu/java/awt/peer/gtk/GtkListPeer.java (handleEvent): New\n        method. Handle mouse and key events that must generate\n        ActionEvents.\n        * java/awt/List.java (getSelectedIndex): Return -1\n        if no list element is selected.\n        * jni/gtk-peer/gnu_java_awt_peer_gtk_GtkEvents.c (awt_event_handler):\n        Correct handling of mouse and key events so that List receives them.\n        * jni/gtk-peer/gnu_java_awt_peer_gtk_GtkListPeer.c\n        (Java_gnu_java_awt_peer_gtk_GtkListPeer_delItems): Fix removal of\n        multiple list elements.\n\nFrom-SVN: r74189", "tree": {"sha": "2a0d045a518723b0b925c0ef30d8eae10ee18cf3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2a0d045a518723b0b925c0ef30d8eae10ee18cf3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a1045386316fccf1a884820f8ce0589ecf8dcdd9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a1045386316fccf1a884820f8ce0589ecf8dcdd9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a1045386316fccf1a884820f8ce0589ecf8dcdd9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a1045386316fccf1a884820f8ce0589ecf8dcdd9/comments", "author": {"login": "fnasser", "id": 326533, "node_id": "MDQ6VXNlcjMyNjUzMw==", "avatar_url": "https://avatars.githubusercontent.com/u/326533?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fnasser", "html_url": "https://github.com/fnasser", "followers_url": "https://api.github.com/users/fnasser/followers", "following_url": "https://api.github.com/users/fnasser/following{/other_user}", "gists_url": "https://api.github.com/users/fnasser/gists{/gist_id}", "starred_url": "https://api.github.com/users/fnasser/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fnasser/subscriptions", "organizations_url": "https://api.github.com/users/fnasser/orgs", "repos_url": "https://api.github.com/users/fnasser/repos", "events_url": "https://api.github.com/users/fnasser/events{/privacy}", "received_events_url": "https://api.github.com/users/fnasser/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "10590d375b68a8e1fb8b663aa04c58c4306a489f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/10590d375b68a8e1fb8b663aa04c58c4306a489f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/10590d375b68a8e1fb8b663aa04c58c4306a489f"}], "stats": {"total": 180, "additions": 137, "deletions": 43}, "files": [{"sha": "60857083f4fa91ac1fbd7d6ee0e28088d60a2992", "filename": "libjava/ChangeLog", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a1045386316fccf1a884820f8ce0589ecf8dcdd9/libjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a1045386316fccf1a884820f8ce0589ecf8dcdd9/libjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog?ref=a1045386316fccf1a884820f8ce0589ecf8dcdd9", "patch": "@@ -1,3 +1,16 @@\n+2003-12-02  Fernando Nasser  <fnasser@redhat.com>\n+\n+\t* gnu/java/awt/peer/gtk/GtkListPeer.java (handleEvent): New\n+\tmethod. Handle mouse and key events that must generate\n+\tActionEvents.\n+\t* java/awt/List.java (getSelectedIndex): Return -1\n+\tif no list element is selected.\n+\t* jni/gtk-peer/gnu_java_awt_peer_gtk_GtkEvents.c (awt_event_handler):\n+\tCorrect handling of mouse and key events so that List receives them.\n+\t* jni/gtk-peer/gnu_java_awt_peer_gtk_GtkListPeer.c\n+\t(Java_gnu_java_awt_peer_gtk_GtkListPeer_delItems): Fix removal of\n+\tmultiple list elements. \n+\n 2003-12-02  Ito Kazumitsu  <kaz@maczuka.gcd.org>\n \n \t* java/text/SimpleDateFormat.java (compileFormat):"}, {"sha": "f90497e7182a2caf6b920ecf6a935432eddb0854", "filename": "libjava/gnu/java/awt/peer/gtk/GtkListPeer.java", "status": "modified", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a1045386316fccf1a884820f8ce0589ecf8dcdd9/libjava%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkListPeer.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a1045386316fccf1a884820f8ce0589ecf8dcdd9/libjava%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkListPeer.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkListPeer.java?ref=a1045386316fccf1a884820f8ce0589ecf8dcdd9", "patch": "@@ -38,8 +38,11 @@\n \n package gnu.java.awt.peer.gtk;\n \n+import java.awt.AWTEvent;\n import java.awt.Dimension;\n import java.awt.List;\n+import java.awt.event.MouseEvent;\n+import java.awt.event.KeyEvent;\n import java.awt.peer.ListPeer;\n \n public class GtkListPeer extends GtkComponentPeer\n@@ -121,6 +124,29 @@ public void setMultipleSelections (boolean b)\n     setMultipleMode (b);\n   }\n \n+  public void handleEvent (AWTEvent e)\n+  {\n+    if (e.getID () == MouseEvent.MOUSE_CLICKED && isEnabled ())\n+      {\n+\tMouseEvent me = (MouseEvent) e;\n+\tif (!me.isConsumed ()\n+\t    && (me.getModifiers () & MouseEvent.BUTTON1_MASK) != 0\n+\t    && me.getClickCount() > 1)\n+\t  postActionEvent (((List)awtComponent).getSelectedItem (), \n+\t\t\t   me.getModifiers ());\n+      }\n+\n+    if (e.getID () == KeyEvent.KEY_PRESSED)\n+      {\n+\tKeyEvent ke = (KeyEvent) e;\n+\tif (!ke.isConsumed () && ke.getKeyCode () == KeyEvent.VK_ENTER)\n+\t  postActionEvent (((List)awtComponent).getSelectedItem (),\n+\t\t\t   ke.getModifiers ());\n+      }\n+\n+    super.handleEvent (e);\n+  }\n+\n   protected void postItemEvent (int item, int stateChange)\n   {\n     postItemEvent (new Integer (item), stateChange);"}, {"sha": "23ca34fab0c6b3a7479d6634d68aa0d082571226", "filename": "libjava/java/awt/List.java", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a1045386316fccf1a884820f8ce0589ecf8dcdd9/libjava%2Fjava%2Fawt%2FList.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a1045386316fccf1a884820f8ce0589ecf8dcdd9/libjava%2Fjava%2Fawt%2FList.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2FList.java?ref=a1045386316fccf1a884820f8ce0589ecf8dcdd9", "patch": "@@ -668,7 +668,7 @@ public class List extends Component\n       selected = l.getSelectedIndexes ();\n     }\n \n-  if (selected == null || selected.length > 1)\n+  if (selected == null || selected.length != 1)\n     return -1;\n   return selected[0];\n }"}, {"sha": "0411352c7ca0ba37a5fd876e93cd5c42e154156d", "filename": "libjava/jni/gtk-peer/gnu_java_awt_peer_gtk_GtkEvents.c", "status": "modified", "additions": 89, "deletions": 36, "changes": 125, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a1045386316fccf1a884820f8ce0589ecf8dcdd9/libjava%2Fjni%2Fgtk-peer%2Fgnu_java_awt_peer_gtk_GtkEvents.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a1045386316fccf1a884820f8ce0589ecf8dcdd9/libjava%2Fjni%2Fgtk-peer%2Fgnu_java_awt_peer_gtk_GtkEvents.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjni%2Fgtk-peer%2Fgnu_java_awt_peer_gtk_GtkEvents.c?ref=a1045386316fccf1a884820f8ce0589ecf8dcdd9", "patch": "@@ -813,7 +813,7 @@ generates_key_typed_event (GdkEvent *event, GtkWidget *source)\n void\n awt_event_handler (GdkEvent *event)\n {\n-  jobject *event_obj_ptr;\n+  jobject *event_obj_ptr = NULL;\n   static guint32 button_click_time = 0;\n   static GdkWindow *button_window = NULL;\n   static guint button_number = -1;\n@@ -827,6 +827,24 @@ awt_event_handler (GdkEvent *event)\n       return;\n     }\n \n+  /* If it is not an input event, let the main loop handle it */\n+  if (!(event->type == GDK_BUTTON_PRESS\n+       || event->type == GDK_BUTTON_RELEASE\n+       || event->type == GDK_ENTER_NOTIFY\n+       || event->type == GDK_LEAVE_NOTIFY\n+       || event->type == GDK_CONFIGURE\n+       || event->type == GDK_EXPOSE\n+       || event->type == GDK_KEY_PRESS\n+       || event->type == GDK_KEY_RELEASE\n+       || event->type == GDK_FOCUS_CHANGE\n+       || event->type == GDK_MOTION_NOTIFY))\n+    {\n+      gtk_main_do_event (event);\n+      return;\n+    }\n+\n+  /* Handle input events */\n+      \n   /* keep track of clickCount ourselves, since the AWT allows more\n      than a triple click to occur */\n   if (event->type == GDK_BUTTON_PRESS)\n@@ -845,18 +863,9 @@ awt_event_handler (GdkEvent *event)\n \n   /* for all input events, which have a window with a jobject attached,\n      send the input event off to Java before GTK has a chance to process\n-     the event */\n-  if ((event->type == GDK_BUTTON_PRESS\n-       || event->type == GDK_BUTTON_RELEASE\n-       || event->type == GDK_ENTER_NOTIFY\n-       || event->type == GDK_LEAVE_NOTIFY\n-       || event->type == GDK_CONFIGURE\n-       || event->type == GDK_EXPOSE\n-       || event->type == GDK_KEY_PRESS\n-       || event->type == GDK_KEY_RELEASE\n-       || event->type == GDK_FOCUS_CHANGE\n-       || event->type == GDK_MOTION_NOTIFY)\n-      && gdk_property_get (event->any.window,\n+     the event.  Note that the jobject may be in the parent for widgets\n+     that are always inside a scrolled window, like List */\n+  if (!gdk_property_get (event->any.window,\n \t\t\t   gdk_atom_intern (\"_GNU_GTKAWT_ADDR\", FALSE),\n \t\t\t   gdk_atom_intern (\"CARDINAL\", FALSE),\n \t\t\t   0,\n@@ -866,6 +875,31 @@ awt_event_handler (GdkEvent *event)\n \t\t\t   NULL,\n \t\t\t   NULL,\n \t\t\t   (guchar **)&event_obj_ptr))\n+    {\n+      /* See if is contained in a scrolled pane */\n+      GtkWidget *widget;\n+      gdk_window_get_user_data (event->any.window, (void **) &widget);\n+\n+      if ((gtk_widget_get_parent (widget) != NULL)\n+          && (gtk_widget_get_parent (widget)->window != NULL))\n+        {\n+          GtkWidget *parent = gtk_widget_get_parent (widget);\n+\n+          if (GTK_IS_SCROLLED_WINDOW (parent))\n+            gdk_property_get (gtk_widget_get_parent (widget)->window,\n+                           gdk_atom_intern (\"_GNU_GTKAWT_ADDR\", FALSE),\n+                           gdk_atom_intern (\"CARDINAL\", FALSE),\n+                           0,\n+                           sizeof (jobject),\n+                           FALSE,\n+                           NULL,\n+                           NULL,\n+                           NULL,\n+                           (guchar **)&event_obj_ptr);\n+        }\n+    }\n+\n+  if (event_obj_ptr)\n     {\n       GtkWidget *event_widget;\n       GtkWidget *grab_widget;\n@@ -879,30 +913,47 @@ awt_event_handler (GdkEvent *event)\n \t  grab_widget = global_gtk_window_group->grabs->data;\n \t  g_assert (grab_widget);\n \n-\t  gdk_property_get (grab_widget->window,\n-\t\t\t    gdk_atom_intern (\"_GNU_GTKAWT_ADDR\", FALSE),\n-\t\t\t    gdk_atom_intern (\"CARDINAL\", FALSE),\n-\t\t\t    0,\n-\t\t\t    sizeof (jobject),\n-\t\t\t    FALSE,\n-\t\t\t    NULL,\n-\t\t\t    NULL,\n-\t\t\t    NULL,\n-\t\t\t    (guchar **)&grab_obj_ptr);\n-\n \t  ptr = NSA_GET_PTR (gdk_env, *event_obj_ptr);\n \t  event_widget = GTK_WIDGET(ptr);\n \n-\t  if (GTK_WIDGET_IS_SENSITIVE (event_widget) &&\n-\t      gtk_widget_is_ancestor (event_widget, grab_widget))\n+\t  /* Don't need to do this if it is the same widget as we\n+\t   *  already got the jobject above.\n+\t   * Also, don't do it for the BUTTON_PRESS as the focus may be\n+\t   *  changing and the event widget is the one that must \n+\t   *  receive it (again, we have the jobject already) \n+\t   */\n+          if ((event_widget != grab_widget)\n+\t      && (event->type != GDK_BUTTON_PRESS))\n \t    {\n-\t      g_free (grab_obj_ptr);\n-\n-\t      grab_obj_ptr = event_obj_ptr;\n+              /* If the grab widget is an ancestor of the event widget\n+               *  then we send the event to the original event widget.\n+               *  This is the key to implementing modality.\n+\t       * Unless the widget is disabled, in this case the grab\n+\t       *  widget still gets the event.\n+\t       *  XXX: But the grab widget may not be an ancestor!!!\n+               */\n+\t      if (!GTK_WIDGET_IS_SENSITIVE (event_widget)\n+\t          || !gtk_widget_is_ancestor (event_widget, grab_widget))\n+\t        {\n+\t          gdk_property_get (grab_widget->window,\n+\t\t\t            gdk_atom_intern (\"_GNU_GTKAWT_ADDR\", FALSE),\n+\t\t\t            gdk_atom_intern (\"CARDINAL\", FALSE),\n+\t\t\t            0,\n+\t\t\t            sizeof (jobject),\n+\t\t\t            FALSE,\n+\t\t\t            NULL,\n+\t\t\t            NULL,\n+\t\t\t            NULL,\n+\t\t\t            (guchar **)&grab_obj_ptr);\n+\n+\t        }\n \t    }\n \t}\n-      else\n+\n+      if (!grab_obj_ptr)\n \tgrab_obj_ptr = event_obj_ptr;\n+      else\n+        g_free (event_obj_ptr);\n \n       switch (event->type)\n \t{\n@@ -1035,7 +1086,7 @@ awt_event_handler (GdkEvent *event)\n \t\tbottom = 6;\n \t\tright = 6;\n \n-\t\t(*gdk_env)->CallVoidMethod (gdk_env, *event_obj_ptr,\n+\t\t(*gdk_env)->CallVoidMethod (gdk_env, *grab_obj_ptr,\n \t\t\t\t\t    postConfigureEventID,\n \t\t\t\t\t    (jint) event->configure.x,\n \t\t\t\t\t    (jint) event->configure.y,\n@@ -1051,7 +1102,7 @@ awt_event_handler (GdkEvent *event)\n \t  break;\n \tcase GDK_EXPOSE:\n \t  {\n-\t    (*gdk_env)->CallVoidMethod (gdk_env, *event_obj_ptr,\n+\t    (*gdk_env)->CallVoidMethod (gdk_env, *grab_obj_ptr,\n \t\t\t\t\tpostExposeEventID,\n \t\t\t\t\t(jint)event->expose.area.x,\n \t\t\t\t\t(jint)event->expose.area.y,\n@@ -1082,7 +1133,8 @@ awt_event_handler (GdkEvent *event)\n                 /* TextArea peers are attached to the scrolled window\n                    that contains the GtkTextView, not to the text view\n                    itself. */\n-                if (GTK_IS_TEXT_VIEW (window->focus_widget))\n+                if (GTK_IS_TEXT_VIEW (window->focus_widget)\n+                    || GTK_IS_CLIST (window->focus_widget))\n                   obj_window = gtk_widget_get_parent (window->focus_widget)->window;\n                 else\n                   obj_window = window->focus_widget->window;\n@@ -1137,7 +1189,8 @@ awt_event_handler (GdkEvent *event)\n \t      {\n \t\tgtk_widget_activate (window->focus_widget);\n \n-                if (GTK_IS_TEXT_VIEW (window->focus_widget))\n+                if (GTK_IS_TEXT_VIEW (window->focus_widget)\n+                    || GTK_IS_CLIST (window->focus_widget))\n                   obj_window = gtk_widget_get_parent (window->focus_widget)->window;\n                 else\n                   obj_window = window->focus_widget->window;\n@@ -1165,7 +1218,7 @@ awt_event_handler (GdkEvent *event)\n           }\n           break;\n \tcase GDK_FOCUS_CHANGE:\n-\t  (*gdk_env)->CallVoidMethod (gdk_env, *event_obj_ptr,\n+\t  (*gdk_env)->CallVoidMethod (gdk_env, *grab_obj_ptr,\n \t\t\t\t      postFocusEventID,\n \t\t\t\t      (jint) (event->focus_change.in) ? \n \t\t\t\t      AWT_FOCUS_GAINED : AWT_FOCUS_LOST,\n@@ -1174,7 +1227,7 @@ awt_event_handler (GdkEvent *event)\n         default:\n \t  break;\n \t}\n-      g_free (event_obj_ptr);\n+      g_free (grab_obj_ptr);\n     }\n \n   gtk_main_do_event (event);"}, {"sha": "94c303e0cdd876600d0e7ab2be9346b453ebfd35", "filename": "libjava/jni/gtk-peer/gnu_java_awt_peer_gtk_GtkListPeer.c", "status": "modified", "additions": 8, "deletions": 6, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a1045386316fccf1a884820f8ce0589ecf8dcdd9/libjava%2Fjni%2Fgtk-peer%2Fgnu_java_awt_peer_gtk_GtkListPeer.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a1045386316fccf1a884820f8ce0589ecf8dcdd9/libjava%2Fjni%2Fgtk-peer%2Fgnu_java_awt_peer_gtk_GtkListPeer.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjni%2Fgtk-peer%2Fgnu_java_awt_peer_gtk_GtkListPeer.c?ref=a1045386316fccf1a884820f8ce0589ecf8dcdd9", "patch": "@@ -192,12 +192,14 @@ Java_gnu_java_awt_peer_gtk_GtkListPeer_delItems\n   list = CLIST_FROM_SW (ptr);\n \n   if (end == -1)\t\t/* special case for removing all rows */\n-    end = list->rows;\n-\n-  gtk_clist_freeze (list);\n-  for (i = start; i < end; i++)\n-    gtk_clist_remove (list, i);\n-  gtk_clist_thaw (list);\n+    gtk_clist_clear (list);\n+  else\n+    {\n+      gtk_clist_freeze (list);\n+      for (i = end; i >= start; i--)\n+        gtk_clist_remove (list, i);\n+      gtk_clist_thaw (list);\n+    }\n \n   gdk_threads_leave ();\n }"}]}