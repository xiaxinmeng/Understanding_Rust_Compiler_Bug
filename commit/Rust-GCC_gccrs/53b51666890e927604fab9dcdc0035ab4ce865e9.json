{"sha": "53b51666890e927604fab9dcdc0035ab4ce865e9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTNiNTE2NjY4OTBlOTI3NjA0ZmFiOWRjZGMwMDM1YWI0Y2U4NjVlOQ==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2011-10-28T02:18:12Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2011-10-28T02:18:12Z"}, "message": "semantics.c (cxx_eval_outermost_constant_expr): Check cp_has_mutable_p.\n\n\t* semantics.c (cxx_eval_outermost_constant_expr): Check\n\tcp_has_mutable_p.\n\t(cxx_eval_component_reference): Check DECL_MUTABLE_P.\n\nFrom-SVN: r180590", "tree": {"sha": "51c2c3e1990068292adc53dc4cd35c44e7a998ae", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/51c2c3e1990068292adc53dc4cd35c44e7a998ae"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/53b51666890e927604fab9dcdc0035ab4ce865e9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/53b51666890e927604fab9dcdc0035ab4ce865e9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/53b51666890e927604fab9dcdc0035ab4ce865e9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/53b51666890e927604fab9dcdc0035ab4ce865e9/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "fb9120e3b1bb7c508e49b49d844e4a060428d84d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fb9120e3b1bb7c508e49b49d844e4a060428d84d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fb9120e3b1bb7c508e49b49d844e4a060428d84d"}], "stats": {"total": 36, "additions": 36, "deletions": 0}, "files": [{"sha": "9791ab5d3b2510d8a76d27a6a5b02ef1dc8b5d2f", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/53b51666890e927604fab9dcdc0035ab4ce865e9/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/53b51666890e927604fab9dcdc0035ab4ce865e9/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=53b51666890e927604fab9dcdc0035ab4ce865e9", "patch": "@@ -1,3 +1,9 @@\n+2011-10-27  Jason Merrill  <jason@redhat.com>\n+\n+\t* semantics.c (cxx_eval_outermost_constant_expr): Check\n+\tcp_has_mutable_p.\n+\t(cxx_eval_component_reference): Check DECL_MUTABLE_P.\n+\n 2011-10-27  Roberto Agostino Vitillo  <ravitillo@lbl.gov>\n \n \tPR c++/30066"}, {"sha": "d76df5156b447ea5ea41ee84019b62897f5bcc6f", "filename": "gcc/cp/semantics.c", "status": "modified", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/53b51666890e927604fab9dcdc0035ab4ce865e9/gcc%2Fcp%2Fsemantics.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/53b51666890e927604fab9dcdc0035ab4ce865e9/gcc%2Fcp%2Fsemantics.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fsemantics.c?ref=53b51666890e927604fab9dcdc0035ab4ce865e9", "patch": "@@ -6680,6 +6680,12 @@ cxx_eval_component_reference (const constexpr_call *call, tree t,\n \terror (\"%qE is not a constant expression\", orig_whole);\n       *non_constant_p = true;\n     }\n+  if (DECL_MUTABLE_P (part))\n+    {\n+      if (!allow_non_constant)\n+\terror (\"mutable %qD is not usable in a constant expression\", part);\n+      *non_constant_p = true;\n+    }\n   if (*non_constant_p)\n     return t;\n   FOR_EACH_CONSTRUCTOR_ELT (CONSTRUCTOR_ELTS (whole), i, field, value)\n@@ -7665,6 +7671,18 @@ cxx_eval_outermost_constant_expr (tree t, bool allow_non_constant)\n \n   verify_constant (r, allow_non_constant, &non_constant_p);\n \n+  if (TREE_CODE (t) != CONSTRUCTOR\n+      && cp_has_mutable_p (TREE_TYPE (t)))\n+    {\n+      /* We allow a mutable type if the original expression was a\n+\t CONSTRUCTOR so that we can do aggregate initialization of\n+\t constexpr variables.  */\n+      if (!allow_non_constant)\n+\terror (\"%qT cannot be the type of a complete constant expression \"\n+\t       \"because it has mutable sub-objects\", TREE_TYPE (t));\n+      non_constant_p = true;\n+    }\n+\n   if (non_constant_p && !allow_non_constant)\n     return error_mark_node;\n   else if (non_constant_p && TREE_CONSTANT (t))"}, {"sha": "a14d611cee8224f4a914eb558ae869f1c87e2a5d", "filename": "gcc/testsuite/g++.dg/cpp0x/constexpr-mutable1.C", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/53b51666890e927604fab9dcdc0035ab4ce865e9/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-mutable1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/53b51666890e927604fab9dcdc0035ab4ce865e9/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-mutable1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-mutable1.C?ref=53b51666890e927604fab9dcdc0035ab4ce865e9", "patch": "@@ -0,0 +1,12 @@\n+// { dg-options -std=c++0x }\n+\n+struct A\n+{\n+  int i;\n+  mutable int j;\n+};\n+\n+constexpr A a = { 0, 1 };\n+constexpr A b = a;\t\t// { dg-error \"mutable\" }\n+constexpr int i = a.i;\n+constexpr int j = a.j;\t\t// { dg-error \"mutable\" }"}]}