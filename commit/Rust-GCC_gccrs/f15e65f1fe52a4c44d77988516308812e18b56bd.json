{"sha": "f15e65f1fe52a4c44d77988516308812e18b56bd", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjE1ZTY1ZjFmZTUyYTRjNDRkNzc5ODg1MTYzMDg4MTJlMThiNTZiZA==", "commit": {"author": {"name": "Jim Wilson", "email": "wilson@cygnus.com", "date": "1997-10-25T00:50:35Z"}, "committer": {"name": "Brendan Kehoe", "email": "brendan@gcc.gnu.org", "date": "1997-10-25T00:50:35Z"}, "message": "integrate.c (save_for_inline_copying): Copy parm_reg_stack_loc.\n\n\t* integrate.c (save_for_inline_copying): Copy parm_reg_stack_loc.\n\nfixes many of the inlining problems causing various suite++ and perennial\ntest failures, among others\n\nFrom-SVN: r16171", "tree": {"sha": "ce44fb46b63f097c1206fe21b2c6af6470c40723", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ce44fb46b63f097c1206fe21b2c6af6470c40723"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f15e65f1fe52a4c44d77988516308812e18b56bd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f15e65f1fe52a4c44d77988516308812e18b56bd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f15e65f1fe52a4c44d77988516308812e18b56bd", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f15e65f1fe52a4c44d77988516308812e18b56bd/comments", "author": null, "committer": null, "parents": [{"sha": "17ad8a3bb9d5d8ccee55b08abba6fb154e5cf32b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/17ad8a3bb9d5d8ccee55b08abba6fb154e5cf32b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/17ad8a3bb9d5d8ccee55b08abba6fb154e5cf32b"}], "stats": {"total": 15, "additions": 15, "deletions": 0}, "files": [{"sha": "37fc943a0cf011a292ab0d1b189636f23c910044", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f15e65f1fe52a4c44d77988516308812e18b56bd/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f15e65f1fe52a4c44d77988516308812e18b56bd/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=f15e65f1fe52a4c44d77988516308812e18b56bd", "patch": "@@ -1,3 +1,7 @@\n+Fri Oct 24 17:49:10 1997  Jim Wilson  <wilson@cygnus.com>\n+\n+\t* integrate.c (save_for_inline_copying): Copy parm_reg_stack_loc.\n+\n Fri Oct 24 17:40:34 1997  Jeffrey A Law  (law@cygnus.com)\n \n \t* mn10200.c (indirect_memory_operand): Delete unused function."}, {"sha": "c62905009cbf93a8fc19fa7002016ea43471d2f0", "filename": "gcc/integrate.c", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f15e65f1fe52a4c44d77988516308812e18b56bd/gcc%2Fintegrate.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f15e65f1fe52a4c44d77988516308812e18b56bd/gcc%2Fintegrate.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fintegrate.c?ref=f15e65f1fe52a4c44d77988516308812e18b56bd", "patch": "@@ -413,6 +413,7 @@ save_for_inline_copying (fndecl)\n   int max_uid;\n   rtx first_nonparm_insn;\n   char *new, *new1;\n+  rtx *new2;\n \n   /* Make and emit a return-label if we have not already done so. \n      Do this before recording the bounds on label numbers.  */\n@@ -538,6 +539,16 @@ save_for_inline_copying (fndecl)\n       XEXP (regno_reg_rtx[i], 0)\n \t= copy_for_inline (XEXP (regno_reg_rtx[i], 0));\n \n+  /* Copy the parm_reg_stack_loc array, and substitute for all of the rtx\n+     contained in it.  */\n+  new2 = savealloc (max_parm_reg * sizeof (rtx));\n+  bcopy ((char *) parm_reg_stack_loc, (char *) new2,\n+\t max_parm_reg * sizeof (rtx));\n+  parm_reg_stack_loc = new2;\n+  for (i = LAST_VIRTUAL_REGISTER + 1; i < max_parm_reg; ++i)\n+    if (parm_reg_stack_loc[i])\n+      parm_reg_stack_loc[i] = copy_for_inline (parm_reg_stack_loc[i]);\n+\n   /* Copy the tree of subblocks of the function, and the decls in them.\n      We will use the copy for compiling this function, then restore the original\n      subblocks and decls for use when inlining this function."}]}