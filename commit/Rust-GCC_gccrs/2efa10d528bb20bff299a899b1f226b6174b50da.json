{"sha": "2efa10d528bb20bff299a899b1f226b6174b50da", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmVmYTEwZDUyOGJiMjBiZmYyOTlhODk5YjFmMjI2YjYxNzRiNTBkYQ==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2020-01-01T00:20:39Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2020-01-01T00:20:39Z"}, "message": "re PR tree-optimization/93098 (ICE with negative shifter)\n\n\tPR tree-optimization/93098\n\t* match.pd (popcount): For shift amounts, use integer_onep\n\tor wi::to_widest () == cst instead of tree_to_uhwi () == cst\n\ttests.  Make sure that precision is power of two larger than or equal\n\tto 16.  Ensure shift is never negative.  Use HOST_WIDE_INT_UC macro\n\tinstead of ULL suffixed constants.  Formatting fixes.\n\n\t* gcc.c-torture/compile/pr93098.c: New test.\n\nFrom-SVN: r279809", "tree": {"sha": "a7f908cf8e704324b930e7585e10d53058793740", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a7f908cf8e704324b930e7585e10d53058793740"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2efa10d528bb20bff299a899b1f226b6174b50da", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2efa10d528bb20bff299a899b1f226b6174b50da", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2efa10d528bb20bff299a899b1f226b6174b50da", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2efa10d528bb20bff299a899b1f226b6174b50da/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "b3b13bf18692701d54d6754ba7e9f155906c8d17", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b3b13bf18692701d54d6754ba7e9f155906c8d17", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b3b13bf18692701d54d6754ba7e9f155906c8d17"}], "stats": {"total": 112596, "additions": 56332, "deletions": 56264}, "files": [{"sha": "70caa829f79d0cb38632133c3a5b293f6bc68df2", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 37047, "changes": 37056, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2efa10d528bb20bff299a899b1f226b6174b50da/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2efa10d528bb20bff299a899b1f226b6174b50da/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=2efa10d528bb20bff299a899b1f226b6174b50da"}, {"sha": "9f5782fd458f803833a7b91427ea2a3093818524", "filename": "gcc/ChangeLog-2019", "status": "added", "additions": 37052, "deletions": 0, "changes": 37052, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2efa10d528bb20bff299a899b1f226b6174b50da/gcc%2FChangeLog-2019", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2efa10d528bb20bff299a899b1f226b6174b50da/gcc%2FChangeLog-2019", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog-2019?ref=2efa10d528bb20bff299a899b1f226b6174b50da"}, {"sha": "dd2df20e08b9b3f10a57d12234bb5d30812053b3", "filename": "gcc/match.pd", "status": "modified", "additions": 43, "deletions": 36, "changes": 79, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2efa10d528bb20bff299a899b1f226b6174b50da/gcc%2Fmatch.pd", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2efa10d528bb20bff299a899b1f226b6174b50da/gcc%2Fmatch.pd", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fmatch.pd?ref=2efa10d528bb20bff299a899b1f226b6174b50da", "patch": "@@ -5786,43 +5786,50 @@ DEFINE_INT_AND_FLOAT_ROUND_FN (RINT)\n      return (x * 0x01010101) >> 24;\n    }  */\n (simplify\n-  (rshift\n-    (mult\n-      (bit_and\n-\t(plus:c\n-\t  (rshift @8 INTEGER_CST@5)\n-\t  (plus:c@8\n-\t    (bit_and @6 INTEGER_CST@7)\n-\t    (bit_and\n-\t      (rshift\n-\t\t(minus@6\n-\t\t  @0\n-\t\t  (bit_and\n-\t\t    (rshift @0 INTEGER_CST@4)\n-\t\t    INTEGER_CST@11))\n-\t      INTEGER_CST@10)\n-\t    INTEGER_CST@9)))\n-\tINTEGER_CST@3)\n-      INTEGER_CST@2)\n-    INTEGER_CST@1)\n+ (rshift\n+  (mult\n+   (bit_and\n+    (plus:c\n+     (rshift @8 INTEGER_CST@5)\n+      (plus:c@8\n+       (bit_and @6 INTEGER_CST@7)\n+\t(bit_and\n+\t (rshift\n+\t  (minus@6 @0\n+\t   (bit_and (rshift @0 INTEGER_CST@4) INTEGER_CST@11))\n+\t  INTEGER_CST@10)\n+\t INTEGER_CST@9)))\n+    INTEGER_CST@3)\n+   INTEGER_CST@2)\n+  INTEGER_CST@1)\n   /* Check constants and optab.  */\n-  (with\n-     {\n-       unsigned prec = TYPE_PRECISION (type);\n-       int shift = 64 - prec;\n-       const unsigned HOST_WIDE_INT c1 = 0x0101010101010101ULL >> shift,\n-\t\t\t\t    c2 = 0x0F0F0F0F0F0F0F0FULL >> shift,\n-\t\t\t\t    c3 = 0x3333333333333333ULL >> shift,\n-\t\t\t\t    c4 = 0x5555555555555555ULL >> shift;\n-     }\n-    (if (prec <= 64 && TYPE_UNSIGNED (type) && tree_to_uhwi (@4) == 1\n-          && tree_to_uhwi (@10) == 2 && tree_to_uhwi (@5) == 4\n-          && tree_to_uhwi (@1) == prec - 8 && tree_to_uhwi (@2) == c1\n-          && tree_to_uhwi (@3) == c2 && tree_to_uhwi (@9) == c3\n-          && tree_to_uhwi (@7) == c3 && tree_to_uhwi (@11) == c4\n-          && direct_internal_fn_supported_p (IFN_POPCOUNT, type,\n-\t    OPTIMIZE_FOR_BOTH))\n-        (convert (IFN_POPCOUNT:type @0)))))\n+  (with { unsigned prec = TYPE_PRECISION (type);\n+\t  int shift = (64 - prec) & 63;\n+\t  unsigned HOST_WIDE_INT c1\n+\t    = HOST_WIDE_INT_UC (0x0101010101010101) >> shift;\n+\t  unsigned HOST_WIDE_INT c2\n+\t    = HOST_WIDE_INT_UC (0x0F0F0F0F0F0F0F0F) >> shift;\n+\t  unsigned HOST_WIDE_INT c3\n+\t    = HOST_WIDE_INT_UC (0x3333333333333333) >> shift;\n+\t  unsigned HOST_WIDE_INT c4\n+\t    = HOST_WIDE_INT_UC (0x5555555555555555) >> shift;\n+   }\n+   (if (prec >= 16\n+\t&& prec <= 64\n+\t&& pow2p_hwi (prec)\n+\t&& TYPE_UNSIGNED (type)\n+\t&& integer_onep (@4)\n+\t&& wi::to_widest (@10) == 2\n+\t&& wi::to_widest (@5) == 4\n+\t&& wi::to_widest (@1) == prec - 8\n+\t&& tree_to_uhwi (@2) == c1\n+\t&& tree_to_uhwi (@3) == c2\n+\t&& tree_to_uhwi (@9) == c3\n+\t&& tree_to_uhwi (@7) == c3\n+\t&& tree_to_uhwi (@11) == c4\n+\t&& direct_internal_fn_supported_p (IFN_POPCOUNT, type,\n+\t\t\t\t\t   OPTIMIZE_FOR_BOTH))\n+    (convert (IFN_POPCOUNT:type @0)))))\n #endif\n \n /* Simplify:"}, {"sha": "9029629abc81fd996e1acec2bbd5ac80b80a3567", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 19181, "changes": 19185, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2efa10d528bb20bff299a899b1f226b6174b50da/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2efa10d528bb20bff299a899b1f226b6174b50da/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=2efa10d528bb20bff299a899b1f226b6174b50da"}, {"sha": "b3211aafefceb186619cfd8a000b2baa81ffbf54", "filename": "gcc/testsuite/ChangeLog-2019", "status": "added", "additions": 19187, "deletions": 0, "changes": 19187, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2efa10d528bb20bff299a899b1f226b6174b50da/gcc%2Ftestsuite%2FChangeLog-2019", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2efa10d528bb20bff299a899b1f226b6174b50da/gcc%2Ftestsuite%2FChangeLog-2019", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog-2019?ref=2efa10d528bb20bff299a899b1f226b6174b50da"}, {"sha": "fb80719f28cde11244321396ea0b678e1c0117e4", "filename": "gcc/testsuite/gcc.c-torture/compile/pr93098.c", "status": "added", "additions": 37, "deletions": 0, "changes": 37, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2efa10d528bb20bff299a899b1f226b6174b50da/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr93098.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2efa10d528bb20bff299a899b1f226b6174b50da/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr93098.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr93098.c?ref=2efa10d528bb20bff299a899b1f226b6174b50da", "patch": "@@ -0,0 +1,37 @@\n+/* PR tree-optimization/93098 */\n+\n+int\n+foo (unsigned long long x)\n+{\n+  x -= (x >> -1) & 0x5555555555555555ULL;\n+  x = (x & 0x3333333333333333ULL) + ((x >> 2) & 0x3333333333333333ULL);\n+  x = (x + (x >> 4)) & 0x0f0f0f0f0f0f0f0fULL;\n+  return (x * 0x0101010101010101ULL) >> 56;\n+}\n+\n+int\n+bar (unsigned long long x)\n+{\n+  x -= (x >> 1) & 0x5555555555555555ULL;\n+  x = (x & 0x3333333333333333ULL) + ((x >> -2) & 0x3333333333333333ULL);\n+  x = (x + (x >> 4)) & 0x0f0f0f0f0f0f0f0fULL;\n+  return (x * 0x0101010101010101ULL) >> 56;\n+}\n+\n+int\n+baz (unsigned long long x)\n+{\n+  x -= (x >> 1) & 0x5555555555555555ULL;\n+  x = (x & 0x3333333333333333ULL) + ((x >> 2) & 0x3333333333333333ULL);\n+  x = (x + (x >> -4)) & 0x0f0f0f0f0f0f0f0fULL;\n+  return (x * 0x0101010101010101ULL) >> 56;\n+}\n+\n+int\n+qux (unsigned long long x)\n+{\n+  x -= (x >> 1) & 0x5555555555555555ULL;\n+  x = (x & 0x3333333333333333ULL) + ((x >> 2) & 0x3333333333333333ULL);\n+  x = (x + (x >> 4)) & 0x0f0f0f0f0f0f0f0fULL;\n+  return (x * 0x0101010101010101ULL) >> -56;\n+}"}]}