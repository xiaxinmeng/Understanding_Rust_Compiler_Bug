{"sha": "a05d8e1d15ea08526639ba154e59b6822b704f4c", "node_id": "C_kwDOANBUbNoAKGEwNWQ4ZTFkMTVlYTA4NTI2NjM5YmExNTRlNTliNjgyMmI3MDRmNGM", "commit": {"author": {"name": "Thomas Schwinge", "email": "thomas@codesourcery.com", "date": "2022-11-03T16:29:13Z"}, "committer": {"name": "Thomas Schwinge", "email": "thomas@codesourcery.com", "date": "2022-11-04T09:01:49Z"}, "message": "Better integrate default 'sorry' 'TARGET_ASM_CONSTRUCTOR', 'TARGET_ASM_DESTRUCTOR'\n\n... after commit 4ee35c11fd328728c12f3e086ae016ca94624bf8\n\"Restore default 'sorry' 'TARGET_ASM_CONSTRUCTOR', 'TARGET_ASM_DESTRUCTOR'\".\nNo functional change.\n\n\tgcc/\n\t* Makefile.in (OBJS): Remove 'dbxout.o'.\n\t* config/nvptx/nvptx.cc: Don't '#include \"dbxout.h\"'.\n\t* dbxout.cc: Remove.\n\t* dbxout.h: Likewise.\n\t* target-def.h (TARGET_ASM_CONSTRUCTOR, TARGET_ASM_DESTRUCTOR):\n\tDefault to 'default_asm_out_constructor',\n\t'default_asm_out_destructor'.\n\t* targhooks.cc (default_asm_out_constructor)\n\t(default_asm_out_destructor): New.\n\t* targhooks.h (default_asm_out_constructor)\n\t(default_asm_out_destructor): Declare.", "tree": {"sha": "969ae4f684dbde6187e9348bfb14d83f4525b291", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/969ae4f684dbde6187e9348bfb14d83f4525b291"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a05d8e1d15ea08526639ba154e59b6822b704f4c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a05d8e1d15ea08526639ba154e59b6822b704f4c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a05d8e1d15ea08526639ba154e59b6822b704f4c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a05d8e1d15ea08526639ba154e59b6822b704f4c/comments", "author": {"login": "tschwinge", "id": 21753, "node_id": "MDQ6VXNlcjIxNzUz", "avatar_url": "https://avatars.githubusercontent.com/u/21753?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tschwinge", "html_url": "https://github.com/tschwinge", "followers_url": "https://api.github.com/users/tschwinge/followers", "following_url": "https://api.github.com/users/tschwinge/following{/other_user}", "gists_url": "https://api.github.com/users/tschwinge/gists{/gist_id}", "starred_url": "https://api.github.com/users/tschwinge/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tschwinge/subscriptions", "organizations_url": "https://api.github.com/users/tschwinge/orgs", "repos_url": "https://api.github.com/users/tschwinge/repos", "events_url": "https://api.github.com/users/tschwinge/events{/privacy}", "received_events_url": "https://api.github.com/users/tschwinge/received_events", "type": "User", "site_admin": false}, "committer": {"login": "tschwinge", "id": 21753, "node_id": "MDQ6VXNlcjIxNzUz", "avatar_url": "https://avatars.githubusercontent.com/u/21753?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tschwinge", "html_url": "https://github.com/tschwinge", "followers_url": "https://api.github.com/users/tschwinge/followers", "following_url": "https://api.github.com/users/tschwinge/following{/other_user}", "gists_url": "https://api.github.com/users/tschwinge/gists{/gist_id}", "starred_url": "https://api.github.com/users/tschwinge/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tschwinge/subscriptions", "organizations_url": "https://api.github.com/users/tschwinge/orgs", "repos_url": "https://api.github.com/users/tschwinge/repos", "events_url": "https://api.github.com/users/tschwinge/events{/privacy}", "received_events_url": "https://api.github.com/users/tschwinge/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4ee35c11fd328728c12f3e086ae016ca94624bf8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4ee35c11fd328728c12f3e086ae016ca94624bf8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4ee35c11fd328728c12f3e086ae016ca94624bf8"}], "stats": {"total": 96, "additions": 24, "deletions": 72}, "files": [{"sha": "f672e6ea5498ceac781486f053238209326129e6", "filename": "gcc/Makefile.in", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a05d8e1d15ea08526639ba154e59b6822b704f4c/gcc%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a05d8e1d15ea08526639ba154e59b6822b704f4c/gcc%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FMakefile.in?ref=a05d8e1d15ea08526639ba154e59b6822b704f4c", "patch": "@@ -1355,7 +1355,6 @@ OBJS = \\\n \tdata-streamer.o \\\n \tdata-streamer-in.o \\\n \tdata-streamer-out.o \\\n-\tdbxout.o \\\n \tdbgcnt.o \\\n \tdce.o \\\n \tddg.o \\"}, {"sha": "2fe120b387303887f0f7e4643e1f62b427fed574", "filename": "gcc/config/nvptx/nvptx.cc", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a05d8e1d15ea08526639ba154e59b6822b704f4c/gcc%2Fconfig%2Fnvptx%2Fnvptx.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a05d8e1d15ea08526639ba154e59b6822b704f4c/gcc%2Fconfig%2Fnvptx%2Fnvptx.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fnvptx%2Fnvptx.cc?ref=a05d8e1d15ea08526639ba154e59b6822b704f4c", "patch": "@@ -52,7 +52,6 @@\n #include \"tm-preds.h\"\n #include \"tm-constrs.h\"\n #include \"langhooks.h\"\n-#include \"dbxout.h\"\n #include \"cfgrtl.h\"\n #include \"gimple.h\"\n #include \"stor-layout.h\""}, {"sha": "161eeb1965375204b92e6a644abb988e6c7037c4", "filename": "gcc/dbxout.cc", "status": "removed", "additions": 0, "deletions": 43, "changes": 43, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4ee35c11fd328728c12f3e086ae016ca94624bf8/gcc%2Fdbxout.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4ee35c11fd328728c12f3e086ae016ca94624bf8/gcc%2Fdbxout.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdbxout.cc?ref=4ee35c11fd328728c12f3e086ae016ca94624bf8", "patch": "@@ -1,43 +0,0 @@\n-/* Copyright (C) 1987-2022 Free Software Foundation, Inc.\n-\n-This file is part of GCC.\n-\n-GCC is free software; you can redistribute it and/or modify it under\n-the terms of the GNU General Public License as published by the Free\n-Software Foundation; either version 3, or (at your option) any later\n-version.\n-\n-GCC is distributed in the hope that it will be useful, but WITHOUT ANY\n-WARRANTY; without even the implied warranty of MERCHANTABILITY or\n-FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n-for more details.\n-\n-You should have received a copy of the GNU General Public License\n-along with GCC; see the file COPYING3.  If not see\n-<http://www.gnu.org/licenses/>.  */\n-\n-#include \"config.h\"\n-#include \"system.h\"\n-#include \"coretypes.h\"\n-#include \"diagnostic-core.h\"\n-#include \"dbxout.h\"\n-\n-/* Record an element in the table of global destructors.  SYMBOL is\n-   a SYMBOL_REF of the function to be called; PRIORITY is a number\n-   between 0 and MAX_INIT_PRIORITY.  */\n-\n-void\n-default_stabs_asm_out_destructor (rtx symbol ATTRIBUTE_UNUSED,\n-\t\t\t\t  int priority ATTRIBUTE_UNUSED)\n-{\n-  sorry (\"global destructors not supported on this target\");\n-}\n-\n-/* Likewise for global constructors.  */\n-\n-void\n-default_stabs_asm_out_constructor (rtx symbol ATTRIBUTE_UNUSED,\n-\t\t\t\t   int priority ATTRIBUTE_UNUSED)\n-{\n-  sorry (\"global constructors not supported on this target\");\n-}"}, {"sha": "ad0b538cabf1a78b1d3fe28709511503c030ddc1", "filename": "gcc/dbxout.h", "status": "removed", "additions": 0, "deletions": 25, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4ee35c11fd328728c12f3e086ae016ca94624bf8/gcc%2Fdbxout.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4ee35c11fd328728c12f3e086ae016ca94624bf8/gcc%2Fdbxout.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdbxout.h?ref=4ee35c11fd328728c12f3e086ae016ca94624bf8", "patch": "@@ -1,25 +0,0 @@\n-/* Copyright (C) 1998-2022 Free Software Foundation, Inc.\n-\n-This file is part of GCC.\n-\n-GCC is free software; you can redistribute it and/or modify it under\n-the terms of the GNU General Public License as published by the Free\n-Software Foundation; either version 3, or (at your option) any later\n-version.\n-\n-GCC is distributed in the hope that it will be useful, but WITHOUT ANY\n-WARRANTY; without even the implied warranty of MERCHANTABILITY or\n-FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n-for more details.\n-\n-You should have received a copy of the GNU General Public License\n-along with GCC; see the file COPYING3.  If not see\n-<http://www.gnu.org/licenses/>.  */\n-\n-#ifndef GCC_DBXOUT_H\n-#define GCC_DBXOUT_H\n-\n-extern void default_stabs_asm_out_destructor (rtx, int);\n-extern void default_stabs_asm_out_constructor (rtx, int);\n-\n-#endif /* GCC_DBXOUT_H */"}, {"sha": "5e5cc3b767e1c46b134e9480a133c5e94f6aa833", "filename": "gcc/target-def.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a05d8e1d15ea08526639ba154e59b6822b704f4c/gcc%2Ftarget-def.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a05d8e1d15ea08526639ba154e59b6822b704f4c/gcc%2Ftarget-def.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftarget-def.h?ref=a05d8e1d15ea08526639ba154e59b6822b704f4c", "patch": "@@ -63,7 +63,7 @@\n #  ifdef TARGET_ASM_NAMED_SECTION\n #   define TARGET_ASM_CONSTRUCTOR default_named_section_asm_out_constructor\n #  else\n-#   define TARGET_ASM_CONSTRUCTOR default_stabs_asm_out_constructor\n+#   define TARGET_ASM_CONSTRUCTOR default_asm_out_constructor\n #  endif\n # endif\n #endif\n@@ -75,7 +75,7 @@\n #  ifdef TARGET_ASM_NAMED_SECTION\n #   define TARGET_ASM_DESTRUCTOR default_named_section_asm_out_destructor\n #  else\n-#   define TARGET_ASM_DESTRUCTOR default_stabs_asm_out_destructor\n+#   define TARGET_ASM_DESTRUCTOR default_asm_out_destructor\n #  endif\n # endif\n #endif"}, {"sha": "12a58456b399af81ef316cf4c23cf6dae7286b27", "filename": "gcc/targhooks.cc", "status": "modified", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a05d8e1d15ea08526639ba154e59b6822b704f4c/gcc%2Ftarghooks.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a05d8e1d15ea08526639ba154e59b6822b704f4c/gcc%2Ftarghooks.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftarghooks.cc?ref=a05d8e1d15ea08526639ba154e59b6822b704f4c", "patch": "@@ -1405,6 +1405,26 @@ default_generate_pic_addr_diff_vec (void)\n   return flag_pic;\n }\n \n+/* Record an element in the table of global constructors.  SYMBOL is\n+   a SYMBOL_REF of the function to be called; PRIORITY is a number\n+   between 0 and MAX_INIT_PRIORITY.  */\n+\n+void\n+default_asm_out_constructor (rtx symbol ATTRIBUTE_UNUSED,\n+\t\t\t     int priority ATTRIBUTE_UNUSED)\n+{\n+  sorry (\"global constructors not supported on this target\");\n+}\n+\n+/* Likewise for global destructors.  */\n+\n+void\n+default_asm_out_destructor (rtx symbol ATTRIBUTE_UNUSED,\n+\t\t\t    int priority ATTRIBUTE_UNUSED)\n+{\n+  sorry (\"global destructors not supported on this target\");\n+}\n+\n /* By default, do no modification. */\n tree default_mangle_decl_assembler_name (tree decl ATTRIBUTE_UNUSED,\n \t\t\t\t\t tree id)"}, {"sha": "a6a423c1abb4a95a87e3fd78d1af981ca44d0486", "filename": "gcc/targhooks.h", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a05d8e1d15ea08526639ba154e59b6822b704f4c/gcc%2Ftarghooks.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a05d8e1d15ea08526639ba154e59b6822b704f4c/gcc%2Ftarghooks.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftarghooks.h?ref=a05d8e1d15ea08526639ba154e59b6822b704f4c", "patch": "@@ -178,6 +178,8 @@ extern void default_target_option_override (void);\n extern void hook_void_bitmap (bitmap);\n extern int default_reloc_rw_mask (void);\n extern bool default_generate_pic_addr_diff_vec (void);\n+extern void default_asm_out_constructor (rtx, int);\n+extern void default_asm_out_destructor (rtx, int);\n extern tree default_mangle_decl_assembler_name (tree, tree);\n extern tree default_emutls_var_fields (tree, tree *);\n extern tree default_emutls_var_init (tree, tree, tree);"}]}