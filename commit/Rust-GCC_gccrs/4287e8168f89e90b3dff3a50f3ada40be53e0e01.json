{"sha": "4287e8168f89e90b3dff3a50f3ada40be53e0e01", "node_id": "C_kwDOANBUbNoAKDQyODdlODE2OGY4OWU5MGIzZGZmM2E1MGYzYWRhNDBiZTUzZTBlMDE", "commit": {"author": {"name": "Aldy Hernandez", "email": "aldyh@redhat.com", "date": "2022-11-09T00:00:57Z"}, "committer": {"name": "Aldy Hernandez", "email": "aldyh@redhat.com", "date": "2022-11-09T09:03:12Z"}, "message": "Implement op[12]_range operators for PLUS_EXPR and MINUS_EXPR.\n\nWe can implement the op[12]_range entries for plus and minus in terms\nof each other.  These are adapted from the integer versions.\n\ngcc/ChangeLog:\n\n\t* range-op-float.cc (foperator_plus::op1_range): New.\n\t(foperator_plus::op2_range): New.\n\t(foperator_minus::op1_range): New.\n\t(foperator_minus::op2_range): New.", "tree": {"sha": "bac1b41ab840e2f75ed1917e0eca56a3dd5b310b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/bac1b41ab840e2f75ed1917e0eca56a3dd5b310b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4287e8168f89e90b3dff3a50f3ada40be53e0e01", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4287e8168f89e90b3dff3a50f3ada40be53e0e01", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4287e8168f89e90b3dff3a50f3ada40be53e0e01", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4287e8168f89e90b3dff3a50f3ada40be53e0e01/comments", "author": {"login": "aldyh", "id": 12937877, "node_id": "MDQ6VXNlcjEyOTM3ODc3", "avatar_url": "https://avatars.githubusercontent.com/u/12937877?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aldyh", "html_url": "https://github.com/aldyh", "followers_url": "https://api.github.com/users/aldyh/followers", "following_url": "https://api.github.com/users/aldyh/following{/other_user}", "gists_url": "https://api.github.com/users/aldyh/gists{/gist_id}", "starred_url": "https://api.github.com/users/aldyh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aldyh/subscriptions", "organizations_url": "https://api.github.com/users/aldyh/orgs", "repos_url": "https://api.github.com/users/aldyh/repos", "events_url": "https://api.github.com/users/aldyh/events{/privacy}", "received_events_url": "https://api.github.com/users/aldyh/received_events", "type": "User", "site_admin": false}, "committer": {"login": "aldyh", "id": 12937877, "node_id": "MDQ6VXNlcjEyOTM3ODc3", "avatar_url": "https://avatars.githubusercontent.com/u/12937877?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aldyh", "html_url": "https://github.com/aldyh", "followers_url": "https://api.github.com/users/aldyh/followers", "following_url": "https://api.github.com/users/aldyh/following{/other_user}", "gists_url": "https://api.github.com/users/aldyh/gists{/gist_id}", "starred_url": "https://api.github.com/users/aldyh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aldyh/subscriptions", "organizations_url": "https://api.github.com/users/aldyh/orgs", "repos_url": "https://api.github.com/users/aldyh/repos", "events_url": "https://api.github.com/users/aldyh/events{/privacy}", "received_events_url": "https://api.github.com/users/aldyh/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6373b1fdf75ea0908dfaebdbfc54d8b55b08d409", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6373b1fdf75ea0908dfaebdbfc54d8b55b08d409", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6373b1fdf75ea0908dfaebdbfc54d8b55b08d409"}], "stats": {"total": 45, "additions": 45, "deletions": 0}, "files": [{"sha": "44db81c1c1eca42b70de4e930aac74b61a84a225", "filename": "gcc/range-op-float.cc", "status": "modified", "additions": 45, "deletions": 0, "changes": 45, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4287e8168f89e90b3dff3a50f3ada40be53e0e01/gcc%2Frange-op-float.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4287e8168f89e90b3dff3a50f3ada40be53e0e01/gcc%2Frange-op-float.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frange-op-float.cc?ref=4287e8168f89e90b3dff3a50f3ada40be53e0e01", "patch": "@@ -1862,6 +1862,29 @@ foperator_unordered_equal::op1_range (frange &r, tree type,\n \n class foperator_plus : public range_operator_float\n {\n+  using range_operator_float::op1_range;\n+  using range_operator_float::op2_range;\n+public:\n+  virtual bool op1_range (frange &r, tree type,\n+\t\t\t  const frange &lhs,\n+\t\t\t  const frange &op2,\n+\t\t\t  relation_trio = TRIO_VARYING) const final override\n+  {\n+    if (lhs.undefined_p ())\n+      return false;\n+    range_op_handler minus (MINUS_EXPR, type);\n+    if (!minus)\n+      return false;\n+    return minus.fold_range (r, type, lhs, op2);\n+  }\n+  virtual bool op2_range (frange &r, tree type,\n+\t\t\t  const frange &lhs,\n+\t\t\t  const frange &op1,\n+\t\t\t  relation_trio = TRIO_VARYING) const final override\n+  {\n+    return op1_range (r, type, lhs, op1);\n+  }\n+private:\n   void rv_fold (REAL_VALUE_TYPE &lb, REAL_VALUE_TYPE &ub, bool &maybe_nan,\n \t\ttree type,\n \t\tconst REAL_VALUE_TYPE &lh_lb,\n@@ -1886,6 +1909,28 @@ class foperator_plus : public range_operator_float\n \n class foperator_minus : public range_operator_float\n {\n+  using range_operator_float::op1_range;\n+  using range_operator_float::op2_range;\n+public:\n+  virtual bool op1_range (frange &r, tree type,\n+\t\t\t  const frange &lhs,\n+\t\t\t  const frange &op2,\n+\t\t\t  relation_trio = TRIO_VARYING) const final override\n+  {\n+    if (lhs.undefined_p ())\n+      return false;\n+    return fop_plus.fold_range (r, type, lhs, op2);\n+  }\n+  virtual bool op2_range (frange &r, tree type,\n+\t\t\t  const frange &lhs,\n+\t\t\t  const frange &op1,\n+\t\t\t  relation_trio = TRIO_VARYING) const final override\n+  {\n+    if (lhs.undefined_p ())\n+      return false;\n+    return fold_range (r, type, op1, lhs);\n+  }\n+private:\n   void rv_fold (REAL_VALUE_TYPE &lb, REAL_VALUE_TYPE &ub, bool &maybe_nan,\n \t\ttree type,\n \t\tconst REAL_VALUE_TYPE &lh_lb,"}]}