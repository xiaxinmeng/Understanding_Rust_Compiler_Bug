{"sha": "6774a66fee6e2662eaa76f5e3ea7b718ae46c700", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Njc3NGE2NmZlZTZlMjY2MmVhYTc2ZjVlM2VhN2I3MThhZTQ2YzcwMA==", "commit": {"author": {"name": "Richard Henderson", "email": "rth@redhat.com", "date": "2011-07-18T20:34:08Z"}, "committer": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "2011-07-18T20:34:08Z"}, "message": "bb-reorder.c (fix_crossing_conditional_branches): Emit all insns before calling create_basic_block.\n\n        * bb-reorder.c (fix_crossing_conditional_branches): Emit all insns\n        before calling create_basic_block.\n\nFrom-SVN: r176420", "tree": {"sha": "3587374f0e0b006120dc6b1220b5f4b0aca2482b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3587374f0e0b006120dc6b1220b5f4b0aca2482b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6774a66fee6e2662eaa76f5e3ea7b718ae46c700", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6774a66fee6e2662eaa76f5e3ea7b718ae46c700", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6774a66fee6e2662eaa76f5e3ea7b718ae46c700", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6774a66fee6e2662eaa76f5e3ea7b718ae46c700/comments", "author": null, "committer": null, "parents": [{"sha": "8b316874a1c1c823d97d7575039b726e4202f681", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8b316874a1c1c823d97d7575039b726e4202f681", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8b316874a1c1c823d97d7575039b726e4202f681"}], "stats": {"total": 41, "additions": 17, "deletions": 24}, "files": [{"sha": "eade32cfc7118e9a6381c64fc3bd1234a8d75806", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6774a66fee6e2662eaa76f5e3ea7b718ae46c700/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6774a66fee6e2662eaa76f5e3ea7b718ae46c700/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=6774a66fee6e2662eaa76f5e3ea7b718ae46c700", "patch": "@@ -1,3 +1,8 @@\n+2011-07-18  Richard Henderson  <rth@redhat.com>\n+\n+\t* bb-reorder.c (fix_crossing_conditional_branches): Emit all insns\n+\tbefore calling create_basic_block.\n+\n 2011-07-18  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR middle-end/49675"}, {"sha": "b88434508bf620f8409d6fe7a93579038ad7e70c", "filename": "gcc/bb-reorder.c", "status": "modified", "additions": 12, "deletions": 24, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6774a66fee6e2662eaa76f5e3ea7b718ae46c700/gcc%2Fbb-reorder.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6774a66fee6e2662eaa76f5e3ea7b718ae46c700/gcc%2Fbb-reorder.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fbb-reorder.c?ref=6774a66fee6e2662eaa76f5e3ea7b718ae46c700", "patch": "@@ -1522,7 +1522,6 @@ fix_crossing_conditional_branches (void)\n {\n   basic_block cur_bb;\n   basic_block new_bb;\n-  basic_block last_bb;\n   basic_block dest;\n   edge succ1;\n   edge succ2;\n@@ -1532,9 +1531,6 @@ fix_crossing_conditional_branches (void)\n   rtx set_src;\n   rtx old_label = NULL_RTX;\n   rtx new_label;\n-  rtx new_jump;\n-\n- last_bb = EXIT_BLOCK_PTR->prev_bb;\n \n   FOR_EACH_BB (cur_bb)\n     {\n@@ -1597,35 +1593,27 @@ fix_crossing_conditional_branches (void)\n \t\tnew_label = block_label (new_bb);\n \t      else\n \t\t{\n+\t\t  basic_block last_bb;\n+\t\t  rtx new_jump;\n+\n \t\t  /* Create new basic block to be dest for\n \t\t     conditional jump.  */\n \n-\t\t  new_bb = create_basic_block (NULL, NULL, last_bb);\n-\t\t  new_bb->aux = last_bb->aux;\n-\t\t  last_bb->aux = new_bb;\n-\t\t  last_bb = new_bb;\n \t\t  /* Put appropriate instructions in new bb.  */\n \n \t\t  new_label = gen_label_rtx ();\n-\t\t  emit_label_before (new_label, BB_HEAD (new_bb));\n+\t\t  emit_label (new_label);\n \t\t  BB_HEAD (new_bb) = new_label;\n \n-\t\t  if (GET_CODE (old_label) == LABEL_REF)\n-\t\t    {\n-\t\t      old_label = JUMP_LABEL (old_jump);\n-\t\t      new_jump = emit_jump_insn_after (gen_jump\n-\t\t\t\t\t\t       (old_label),\n-\t\t\t\t\t\t       BB_END (new_bb));\n-\t\t    }\n-\t\t  else\n-\t\t    {\n-\t\t      gcc_assert (HAVE_return\n-\t\t\t\t  && GET_CODE (old_label) == RETURN);\n-\t\t      new_jump = emit_jump_insn_after (gen_return (),\n-\t\t\t\t\t\t       BB_END (new_bb));\n-\t\t    }\n+\t\t  gcc_assert (GET_CODE (old_label) == LABEL_REF);\n+\t\t  old_label = JUMP_LABEL (old_jump);\n+\t\t  new_jump = emit_jump_insn (gen_jump (old_label));\n \t\t  JUMP_LABEL (new_jump) = old_label;\n-\t\t  BB_END (new_bb) = new_jump;\n+\n+\t\t  last_bb = EXIT_BLOCK_PTR->prev_bb;\n+\t\t  new_bb = create_basic_block (new_label, new_jump, last_bb);\n+\t\t  new_bb->aux = last_bb->aux;\n+\t\t  last_bb->aux = new_bb;\n \n \t\t  emit_barrier_after_bb (new_bb);\n "}]}