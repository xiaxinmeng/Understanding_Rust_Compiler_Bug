{"sha": "3d416346cfca32e50fc17feea9ba012b3a2730f5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2Q0MTYzNDZjZmNhMzJlNTBmYzE3ZmVlYTliYTAxMmIzYTI3MzBmNQ==", "commit": {"author": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2010-04-25T08:11:46Z"}, "committer": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2010-04-25T08:11:46Z"}, "message": "gmon-sol2.c (_mcleanup): Change format string placeholder from 0x%x to %#x.\n\n\t* config/i386/gmon-sol2.c (_mcleanup): Change format string\n\tplaceholder from 0x%x to %#x.\n\t* config/i386/i386elf.h (ASM_OUTPUT_ASCII): Ditto.\n\t* config/i386/i386-interix.h (ASM_OUTPUT_ASCII): Ditto.\n\t* config/i386/att.h (ASM_OUTPUT_ASCII): Ditto.\n\t* config/i386/sysv4.h (ASM_OUTPUT_ASCII): Ditto.\n\t* config/i386/i386.c (ix86_target_string): Ditto.\n\t(output_pic_addr_const): Ditto.\n\t(print_operand): Ditto.\n\nFrom-SVN: r158699", "tree": {"sha": "f5ddbd2a62911ca8a4e7d4118b308e6763ff36e4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f5ddbd2a62911ca8a4e7d4118b308e6763ff36e4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3d416346cfca32e50fc17feea9ba012b3a2730f5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3d416346cfca32e50fc17feea9ba012b3a2730f5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3d416346cfca32e50fc17feea9ba012b3a2730f5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3d416346cfca32e50fc17feea9ba012b3a2730f5/comments", "author": null, "committer": null, "parents": [{"sha": "910ed7dc70ee17747f6ad4d4cf7d3670924ac979", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/910ed7dc70ee17747f6ad4d4cf7d3670924ac979", "html_url": "https://github.com/Rust-GCC/gccrs/commit/910ed7dc70ee17747f6ad4d4cf7d3670924ac979"}], "stats": {"total": 41, "additions": 25, "deletions": 16}, "files": [{"sha": "8ee8c20897632d4e67781931873f6a8ca3493177", "filename": "gcc/ChangeLog", "status": "modified", "additions": 16, "deletions": 7, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3d416346cfca32e50fc17feea9ba012b3a2730f5/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3d416346cfca32e50fc17feea9ba012b3a2730f5/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=3d416346cfca32e50fc17feea9ba012b3a2730f5", "patch": "@@ -1,3 +1,15 @@\n+2010-04-25  Uros Bizjak  <ubizjak@gmail.com>\n+\n+\t* config/i386/gmon-sol2.c (_mcleanup): Change format string\n+\tplaceholder from 0x%x to %#x.\n+\t* config/i386/i386elf.h (ASM_OUTPUT_ASCII): Ditto.\n+\t* config/i386/i386-interix.h (ASM_OUTPUT_ASCII): Ditto.\n+\t* config/i386/att.h (ASM_OUTPUT_ASCII): Ditto.\n+\t* config/i386/sysv4.h (ASM_OUTPUT_ASCII): Ditto.\n+\t* config/i386/i386.c (ix86_target_string): Ditto.\n+\t(output_pic_addr_const): Ditto.\n+\t(print_operand): Ditto.\n+\n 2010-04-25  Paolo Bonzini  <bonzini@gnu.org>\n \n \t* combine.c (find_split_point): Add third argument.  Use it\n@@ -16,12 +28,10 @@\n \n 2010-04-23  Manuel L\u00f3pez-Ib\u00e1\u00f1ez  <manu@gcc.gnu.org>\n \n-\t* toplev.c (general_init): Set default for\n-\tfdiagnostics-show-option.\n+\t* toplev.c (general_init): Set default for fdiagnostics-show-option.\n \t* opts.c (common_handle_option): Allow disabling it.\n-\t* common.opt (fdiagnostics-show-option): Add Var. Enabled by\n-\tdefault.\n-\t\n+\t* common.opt (fdiagnostics-show-option): Add Var. Enabled by default.\n+\n 2010-04-23  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* expr.c (expand_expr_real_1) <VIEW_CONVERT_EXPR>: Only use conversion\n@@ -208,8 +218,7 @@\n \t* tree-ssa-math-opts.c (execute_optimize_widening_mul,\n \tgate_optimize_widening_mul): New static functions.\n \t(pass_optimize_widening_mul): New.\n-\t* expr.c (expand_expr_real_2) <case WIDEN_MULT_EXPR>: New\n-\tcase.\n+\t* expr.c (expand_expr_real_2) <case WIDEN_MULT_EXPR>: New case.\n \t<case MULT_EXPR>: Remove support for widening multiplies.\n \t* tree.def (WIDEN_MULT_EXPR): Tweak comment.\n \t* cfgexpand.c (expand_debug_expr) <case WIDEN_MULT_EXPR>: Use"}, {"sha": "5299e787438ad115f9e8b8d949fa37031056c2cd", "filename": "gcc/config/i386/att.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3d416346cfca32e50fc17feea9ba012b3a2730f5/gcc%2Fconfig%2Fi386%2Fatt.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3d416346cfca32e50fc17feea9ba012b3a2730f5/gcc%2Fconfig%2Fi386%2Fatt.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fatt.h?ref=3d416346cfca32e50fc17feea9ba012b3a2730f5", "patch": "@@ -46,7 +46,7 @@ do\t\t\t\t\t\t\t\t\\\n     { if (i%10 == 0) { if (i!=0) putc ('\\n', (FILE));\t\t\\\n \t\t       fputs (ASM_BYTE, (FILE)); }\t\t\\\n       else putc (',', (FILE));\t\t\t\t\t\\\n-\tfprintf ((FILE), \"0x%x\", ((PTR)[i++] & 0377)) ;}\t\\\n+      fprintf ((FILE), \"%#x\", ((PTR)[i++] & 0377)) ;}\t\t\\\n       putc ('\\n', (FILE));\t\t\t\t\t\\\n } while (0)\n "}, {"sha": "dd87d5f72773755ee97d6e8676eb046fa7cc3303", "filename": "gcc/config/i386/gmon-sol2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3d416346cfca32e50fc17feea9ba012b3a2730f5/gcc%2Fconfig%2Fi386%2Fgmon-sol2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3d416346cfca32e50fc17feea9ba012b3a2730f5/gcc%2Fconfig%2Fi386%2Fgmon-sol2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fgmon-sol2.c?ref=3d416346cfca32e50fc17feea9ba012b3a2730f5", "patch": "@@ -223,7 +223,7 @@ _mcleanup (void)\n \treturn;\n     }\n #   ifdef DEBUG\n-\tfprintf( stderr , \"[mcleanup] sbuf 0x%x ssiz %d\\n\" , sbuf , ssiz );\n+\tfprintf( stderr , \"[mcleanup] sbuf %#x ssiz %d\\n\" , sbuf , ssiz );\n #   endif /* DEBUG */\n \n     write( fd , sbuf , ssiz );"}, {"sha": "5d7bfac995bad8d86d60cd3d2d69b606c3b6c6dd", "filename": "gcc/config/i386/i386-interix.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3d416346cfca32e50fc17feea9ba012b3a2730f5/gcc%2Fconfig%2Fi386%2Fi386-interix.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3d416346cfca32e50fc17feea9ba012b3a2730f5/gcc%2Fconfig%2Fi386%2Fi386-interix.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386-interix.h?ref=3d416346cfca32e50fc17feea9ba012b3a2730f5", "patch": "@@ -212,7 +212,7 @@ along with GCC; see the file COPYING3.  If not see\n \t\tfputs (ASM_BYTE, (FILE));\t\t\t\t\\\n \t      else\t\t\t\t\t\t\t\\\n \t\tfputc (',', (FILE));\t\t\t\t\t\\\n-\t      fprintf ((FILE), \"0x%02x\", *_ascii_bytes);\t\t\\\n+\t      fprintf ((FILE), \"%#02x\", *_ascii_bytes);\t\t\t\\\n \t      bytes_in_chunk += 5;\t\t\t\t\t\\\n \t    }\t\t\t\t\t\t\t\t\\\n \t}\t\t\t\t\t\t\t\t\\"}, {"sha": "3e887f81612be1fdb556fac023436b5099a80413", "filename": "gcc/config/i386/i386.c", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3d416346cfca32e50fc17feea9ba012b3a2730f5/gcc%2Fconfig%2Fi386%2Fi386.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3d416346cfca32e50fc17feea9ba012b3a2730f5/gcc%2Fconfig%2Fi386%2Fi386.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.c?ref=3d416346cfca32e50fc17feea9ba012b3a2730f5", "patch": "@@ -2512,7 +2512,7 @@ ix86_target_string (int isa, int flags, const char *arch, const char *tune,\n   if (isa && add_nl_p)\n     {\n       opts[num++][0] = isa_other;\n-      sprintf (isa_other, \"(other isa: 0x%x)\", isa);\n+      sprintf (isa_other, \"(other isa: %#x)\", isa);\n     }\n \n   /* Add flag options.  */\n@@ -2528,7 +2528,7 @@ ix86_target_string (int isa, int flags, const char *arch, const char *tune,\n   if (flags && add_nl_p)\n     {\n       opts[num++][0] = target_other;\n-      sprintf (target_other, \"(other flags: 0x%x)\", isa);\n+      sprintf (target_other, \"(other flags: %#x)\", isa);\n     }\n \n   /* Add -fpmath= option.  */\n@@ -10841,7 +10841,7 @@ output_pic_addr_const (FILE *file, rtx x, int code)\n \t{\n \t  /* We can use %d if the number is <32 bits and positive.  */\n \t  if (CONST_DOUBLE_HIGH (x) || CONST_DOUBLE_LOW (x) < 0)\n-\t    fprintf (file, \"0x%lx%08lx\",\n+\t    fprintf (file, \"%#lx%08lx\",\n \t\t     (unsigned long) CONST_DOUBLE_HIGH (x),\n \t\t     (unsigned long) CONST_DOUBLE_LOW (x));\n \t  else\n@@ -12005,7 +12005,7 @@ print_operand (FILE *file, rtx x, int code)\n \n       if (ASSEMBLER_DIALECT == ASM_ATT)\n \tputc ('$', file);\n-      fprintf (file, \"0x%08lx\", (long unsigned int) l);\n+      fprintf (file, \"%#08lx\", (long unsigned int) l);\n     }\n \n   /* These float cases don't actually occur as immediate operands.  */"}, {"sha": "a550243111490a6cb0d37ddb46c7ffc073898d9a", "filename": "gcc/config/i386/i386elf.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3d416346cfca32e50fc17feea9ba012b3a2730f5/gcc%2Fconfig%2Fi386%2Fi386elf.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3d416346cfca32e50fc17feea9ba012b3a2730f5/gcc%2Fconfig%2Fi386%2Fi386elf.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386elf.h?ref=3d416346cfca32e50fc17feea9ba012b3a2730f5", "patch": "@@ -88,7 +88,7 @@ along with GCC; see the file COPYING3.  If not see\n \t\tfputs (ASM_BYTE, (FILE));\t\t\t\t\\\n \t      else\t\t\t\t\t\t\t\\\n \t\tfputc (',', (FILE));\t\t\t\t\t\\\n-\t      fprintf ((FILE), \"0x%02x\", *_ascii_bytes);\t\t\\\n+\t      fprintf ((FILE), \"%#02x\", *_ascii_bytes);\t\t\t\\\n \t      bytes_in_chunk += 5;\t\t\t\t\t\\\n \t    }\t\t\t\t\t\t\t\t\\\n \t}\t\t\t\t\t\t\t\t\\"}, {"sha": "1dc0a36fb544360dabb16b224868083259903b32", "filename": "gcc/config/i386/sysv4.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3d416346cfca32e50fc17feea9ba012b3a2730f5/gcc%2Fconfig%2Fi386%2Fsysv4.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3d416346cfca32e50fc17feea9ba012b3a2730f5/gcc%2Fconfig%2Fi386%2Fsysv4.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fsysv4.h?ref=3d416346cfca32e50fc17feea9ba012b3a2730f5", "patch": "@@ -80,7 +80,7 @@ along with GCC; see the file COPYING3.  If not see\n \t\tfputs (ASM_BYTE, (FILE));\t\t\t\t\\\n \t      else\t\t\t\t\t\t\t\\\n \t\tfputc (',', (FILE));\t\t\t\t\t\\\n-\t      fprintf ((FILE), \"0x%02x\", *_ascii_bytes);\t\t\\\n+\t      fprintf ((FILE), \"%#02x\", *_ascii_bytes);\t\t\t\\\n \t      bytes_in_chunk += 5;\t\t\t\t\t\\\n \t    }\t\t\t\t\t\t\t\t\\\n \t}\t\t\t\t\t\t\t\t\\"}]}