{"sha": "5568a7363e15197cb5512d8a3d9945dd7f8ae62c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTU2OGE3MzYzZTE1MTk3Y2I1NTEyZDhhM2Q5OTQ1ZGQ3ZjhhZTYyYw==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2012-10-29T11:07:12Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2012-10-29T11:07:12Z"}, "message": "[multiple changes]\n\n2012-10-29  Yannick Moy  <moy@adacore.com>\n\n\t* debug.adb Associate debug switch -gnatd.V to extensions for\n\tformal verification.\n\t* gnat1drv.adb (Adjust_Global_Switches): Set flag S14_Extensions\n\twhen -gnatd.V is set.\n\t* gnat_rm.texi: Remove doc for Assert_And_Cut.\n\t* opt.ads Declare new flag S14_Extensions, to be set when new\n\taspects/pragmas/attributes for formal verification should be\n\taccepted.\n\t* sem_prag.adb (Analyze_Pragma): Check that S14_Extensions is\n\tset when treating pragma Assert_And_Cut.\n\n2012-10-29  Tristan Gingold  <gingold@adacore.com>\n\n\t* s-tarest.ads, s-tassta.adb: Add a pragma Partition_Elaboration_Policy.\n\nFrom-SVN: r192931", "tree": {"sha": "32853b3c26123eabb25a8a3b0fb7e081218f8cc8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/32853b3c26123eabb25a8a3b0fb7e081218f8cc8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5568a7363e15197cb5512d8a3d9945dd7f8ae62c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5568a7363e15197cb5512d8a3d9945dd7f8ae62c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5568a7363e15197cb5512d8a3d9945dd7f8ae62c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5568a7363e15197cb5512d8a3d9945dd7f8ae62c/comments", "author": null, "committer": null, "parents": [{"sha": "1b73408a13915033228a5fff61938b7de2a5b29b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1b73408a13915033228a5fff61938b7de2a5b29b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1b73408a13915033228a5fff61938b7de2a5b29b"}], "stats": {"total": 91, "additions": 53, "deletions": 38}, "files": [{"sha": "c200a06367c0312275582312ba309587375fb7bd", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5568a7363e15197cb5512d8a3d9945dd7f8ae62c/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5568a7363e15197cb5512d8a3d9945dd7f8ae62c/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=5568a7363e15197cb5512d8a3d9945dd7f8ae62c", "patch": "@@ -1,3 +1,20 @@\n+2012-10-29  Yannick Moy  <moy@adacore.com>\n+\n+\t* debug.adb Associate debug switch -gnatd.V to extensions for\n+\tformal verification.\n+\t* gnat1drv.adb (Adjust_Global_Switches): Set flag S14_Extensions\n+\twhen -gnatd.V is set.\n+\t* gnat_rm.texi: Remove doc for Assert_And_Cut.\n+\t* opt.ads Declare new flag S14_Extensions, to be set when new\n+\taspects/pragmas/attributes for formal verification should be\n+\taccepted.\n+\t* sem_prag.adb (Analyze_Pragma): Check that S14_Extensions is\n+\tset when treating pragma Assert_And_Cut.\n+\n+2012-10-29  Tristan Gingold  <gingold@adacore.com>\n+\n+\t* s-tarest.ads, s-tassta.adb: Add a pragma Partition_Elaboration_Policy.\n+\n 2012-10-29  Robert Dewar  <dewar@adacore.com>\n \n \t* freeze.adb: Minor reformatting."}, {"sha": "02f04bcecdfa5f907217a8286a4c2100dd2ba302", "filename": "gcc/ada/debug.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5568a7363e15197cb5512d8a3d9945dd7f8ae62c/gcc%2Fada%2Fdebug.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5568a7363e15197cb5512d8a3d9945dd7f8ae62c/gcc%2Fada%2Fdebug.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fdebug.adb?ref=5568a7363e15197cb5512d8a3d9945dd7f8ae62c", "patch": "@@ -139,7 +139,7 @@ package body Debug is\n    --  d.S  Force Optimize_Alignment (Space)\n    --  d.T  Force Optimize_Alignment (Time)\n    --  d.U  Ignore indirect calls for static elaboration\n-   --  d.V\n+   --  d.V  Extensions for formal verification\n    --  d.W  Print out debugging information for Walk_Library_Items\n    --  d.X  Use Expression_With_Actions\n    --  d.Y  Do not use Expression_With_Actions"}, {"sha": "39d008e23a752d2ab1e78b7e0e88e0c2e623f494", "filename": "gcc/ada/gnat1drv.adb", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5568a7363e15197cb5512d8a3d9945dd7f8ae62c/gcc%2Fada%2Fgnat1drv.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5568a7363e15197cb5512d8a3d9945dd7f8ae62c/gcc%2Fada%2Fgnat1drv.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnat1drv.adb?ref=5568a7363e15197cb5512d8a3d9945dd7f8ae62c", "patch": "@@ -418,6 +418,10 @@ procedure Gnat1drv is\n \n       --  Set switches for formal verification mode\n \n+      if Debug_Flag_Dot_VV then\n+         S14_Extensions := True;\n+      end if;\n+\n       if Debug_Flag_Dot_FF then\n          Alfa_Mode := True;\n "}, {"sha": "36202bd84d379c21df24ea9bc67bae5529370ea5", "filename": "gcc/ada/gnat_rm.texi", "status": "modified", "additions": 1, "deletions": 37, "changes": 38, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5568a7363e15197cb5512d8a3d9945dd7f8ae62c/gcc%2Fada%2Fgnat_rm.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5568a7363e15197cb5512d8a3d9945dd7f8ae62c/gcc%2Fada%2Fgnat_rm.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnat_rm.texi?ref=5568a7363e15197cb5512d8a3d9945dd7f8ae62c", "patch": "@@ -105,7 +105,6 @@ Implementation Defined Pragmas\n * Pragma Ada_2012::\n * Pragma Annotate::\n * Pragma Assert::\n-* Pragma Assert_And_Cut::\n * Pragma Assertion_Policy::\n * Pragma Assume_No_Invalid_Values::\n * Pragma Ast_Entry::\n@@ -844,7 +843,6 @@ consideration, the use of these pragmas should be minimized.\n * Pragma Ada_2012::\n * Pragma Annotate::\n * Pragma Assert::\n-* Pragma Assert_And_Cut::\n * Pragma Assertion_Policy::\n * Pragma Assume_No_Invalid_Values::\n * Pragma Ast_Entry::\n@@ -1197,40 +1195,6 @@ of Ada from 2005 on. In GNAT, it is implemented in all versions\n of Ada, and the DISABLE policy is an implementation-defined\n addition.\n \n-@node Pragma Assert_And_Cut\n-@unnumberedsec Pragma Assert_And_Cut\n-@findex Assert_And_Cut\n-@noindent\n-Syntax:\n-@smallexample @c ada\n-pragma Assert_And_Cut (\n-  boolean_EXPRESSION\n-  [, string_EXPRESSION]);\n-@end smallexample\n-\n-@noindent\n-The effect of this pragma for compilation is exactly the same as the one\n-of pragma @code{Assert}. This pragma is used to help formal verification\n-tools by marking program points where the tool can simplify precise\n-knowledge about execution based on the assertion given. For example, in\n-the procedure below, all that is needed to prove that the code using X\n-is free from run-time errors is that X is positive. Without the pragma,\n-GNATprove considers all execution paths through P, which may be\n-many. With the pragma, GNATprove only needs to consider the paths from\n-the start of the procedure to the pragma, and the paths from the pragma\n-to the end of the procedure, hence many fewer paths. For more details,\n-see the GNATprove User's Guide.\n-\n-@smallexample @c ada\n-procedure P is\n-   X : Integer;\n-begin\n-   --  complex computation that sets X\n-   pragma Assert_And_Cut (X > 0);\n-   --  complex computation that uses X\n-end P;\n-@end smallexample\n-\n @node Pragma Assertion_Policy\n @unnumberedsec Pragma Assertion_Policy\n @findex Debug_Policy\n@@ -7986,7 +7950,7 @@ features are used, as defined in Annex J of the Ada Reference Manual.\n wide types\n appear, and that no wide or wide wide string or character literals\n appear in the program (that is literals representing characters not in\n-type @code{Character}.\n+type @code{Character}).\n \n @node SPARK\n @unnumberedsubsec SPARK"}, {"sha": "b832c1fd0b97320e6fe7954b121534a749e5a43a", "filename": "gcc/ada/opt.ads", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5568a7363e15197cb5512d8a3d9945dd7f8ae62c/gcc%2Fada%2Fopt.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5568a7363e15197cb5512d8a3d9945dd7f8ae62c/gcc%2Fada%2Fopt.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fopt.ads?ref=5568a7363e15197cb5512d8a3d9945dd7f8ae62c", "patch": "@@ -1936,6 +1936,11 @@ package Opt is\n    --  for integers are limited to the strict minimum with this option. Set by\n    --  debug flag -gnatd.D.\n \n+   S14_Extensions : Boolean := False;\n+   --  When this flag is set, new aspects/pragmas/attributes are accepted,\n+   --  whose main purpose is to facilitate formal verification. Set by debug\n+   --  flag -gnatd.V.\n+\n    function Full_Expander_Active return Boolean;\n    pragma Inline (Full_Expander_Active);\n    --  Returns the value of (Expander_Active and not Alfa_Mode). This \"flag\""}, {"sha": "c8769754707f7ea4dad4f2da7a15f765091dc783", "filename": "gcc/ada/s-tarest.ads", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5568a7363e15197cb5512d8a3d9945dd7f8ae62c/gcc%2Fada%2Fs-tarest.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5568a7363e15197cb5512d8a3d9945dd7f8ae62c/gcc%2Fada%2Fs-tarest.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-tarest.ads?ref=5568a7363e15197cb5512d8a3d9945dd7f8ae62c", "patch": "@@ -43,6 +43,10 @@\n --  The restricted GNARLI is also composed of System.Protected_Objects and\n --  System.Protected_Objects.Single_Entry\n \n+pragma Partition_Elaboration_Policy (Sequential);\n+--  This package only implements the sequential elaboration policy. This pragma\n+--  will enforce it (and detect conflicts with user specified policy).\n+\n with System.Task_Info;\n with System.Parameters;\n "}, {"sha": "ab75b2337c54eaed417b2b88bd85a420f7ffa0c4", "filename": "gcc/ada/s-tassta.adb", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5568a7363e15197cb5512d8a3d9945dd7f8ae62c/gcc%2Fada%2Fs-tassta.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5568a7363e15197cb5512d8a3d9945dd7f8ae62c/gcc%2Fada%2Fs-tassta.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-tassta.adb?ref=5568a7363e15197cb5512d8a3d9945dd7f8ae62c", "patch": "@@ -33,6 +33,10 @@ pragma Polling (Off);\n --  Turn off polling, we do not want ATC polling to take place during tasking\n --  operations. It causes infinite loops and other problems.\n \n+pragma Partition_Elaboration_Policy (Concurrent);\n+--  This package only implements the concurrent elaboration policy. This pragma\n+--  will enforce it (and detect conflicts with user specified policy).\n+\n with Ada.Exceptions;\n with Ada.Unchecked_Deallocation;\n "}, {"sha": "7f098abf6acfb202b0d114858124f7e3a8e6a57d", "filename": "gcc/ada/sem_prag.adb", "status": "modified", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5568a7363e15197cb5512d8a3d9945dd7f8ae62c/gcc%2Fada%2Fsem_prag.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5568a7363e15197cb5512d8a3d9945dd7f8ae62c/gcc%2Fada%2Fsem_prag.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_prag.adb?ref=5568a7363e15197cb5512d8a3d9945dd7f8ae62c", "patch": "@@ -782,6 +782,10 @@ package body Sem_Prag is\n       --  Called for all GNAT defined pragmas to check the relevant restriction\n       --  (No_Implementation_Pragmas).\n \n+      procedure S14_Pragma;\n+      --  Called for all pragmas defined for formal verification to check that\n+      --  the S14_Extensions flag is set.\n+\n       function Is_Before_First_Decl\n         (Pragma_Node : Node_Id;\n          Decls       : List_Id) return Boolean;\n@@ -1280,6 +1284,7 @@ package body Sem_Prag is\n             Error_Pragma_Arg (\"invalid argument for pragma%\", Argx);\n          end if;\n       end Check_Arg_Is_One_Of;\n+\n       ---------------------------------\n       -- Check_Arg_Is_Queuing_Policy --\n       ---------------------------------\n@@ -6419,6 +6424,17 @@ package body Sem_Prag is\n          end if;\n       end Set_Ravenscar_Profile;\n \n+      ----------------\n+      -- S14_Pragma --\n+      ----------------\n+\n+      procedure S14_Pragma is\n+      begin\n+         if not S14_Extensions then\n+            Error_Pragma (\"pragma% requires the use of debug switch -gnatd.V\");\n+         end if;\n+      end S14_Pragma;\n+\n    --  Start of processing for Analyze_Pragma\n \n    begin\n@@ -6800,6 +6816,7 @@ package body Sem_Prag is\n                Ada_2005_Pragma;\n             else -- Pragma_Assert_And_Cut\n                GNAT_Pragma;\n+               S14_Pragma;\n             end if;\n \n             Check_At_Least_N_Arguments (1);"}]}