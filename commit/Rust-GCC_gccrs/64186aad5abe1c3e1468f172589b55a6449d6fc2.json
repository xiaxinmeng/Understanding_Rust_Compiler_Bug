{"sha": "64186aad5abe1c3e1468f172589b55a6449d6fc2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjQxODZhYWQ1YWJlMWMzZTE0NjhmMTcyNTg5YjU1YTY0NDlkNmZjMg==", "commit": {"author": {"name": "Thomas Schwinge", "email": "thomas@codesourcery.com", "date": "2015-09-23T14:52:50Z"}, "committer": {"name": "Thomas Schwinge", "email": "tschwinge@gcc.gnu.org", "date": "2015-09-23T14:52:50Z"}, "message": "Fix --enable-offload-targets/-foffload handling, pt. 1\n\n\tgcc/\n\t* configure.ac (offload_targets, OFFLOAD_TARGETS): Separate\n\toffload targets by commas, not colons.\n\t* config.in: Regenerate.\n\t* configure: Likewise.\n\t* gcc.c (driver::maybe_putenv_COLLECT_LTO_WRAPPER): Due to that,\n\tinstead of setting up the default offload targets here...\n\t(process_command): ..., do it here.\n\tlibgomp/\n\t* plugin/configfrag.ac (OFFLOAD_TARGETS): Clarify that offload\n\ttargets are separated by commas.\n\t* config.h.in: Regenerate.\n\nFrom-SVN: r228053", "tree": {"sha": "e56994358815ca037270fe39c1df903fc8423e3f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e56994358815ca037270fe39c1df903fc8423e3f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/64186aad5abe1c3e1468f172589b55a6449d6fc2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/64186aad5abe1c3e1468f172589b55a6449d6fc2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/64186aad5abe1c3e1468f172589b55a6449d6fc2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/64186aad5abe1c3e1468f172589b55a6449d6fc2/comments", "author": {"login": "tschwinge", "id": 21753, "node_id": "MDQ6VXNlcjIxNzUz", "avatar_url": "https://avatars.githubusercontent.com/u/21753?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tschwinge", "html_url": "https://github.com/tschwinge", "followers_url": "https://api.github.com/users/tschwinge/followers", "following_url": "https://api.github.com/users/tschwinge/following{/other_user}", "gists_url": "https://api.github.com/users/tschwinge/gists{/gist_id}", "starred_url": "https://api.github.com/users/tschwinge/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tschwinge/subscriptions", "organizations_url": "https://api.github.com/users/tschwinge/orgs", "repos_url": "https://api.github.com/users/tschwinge/repos", "events_url": "https://api.github.com/users/tschwinge/events{/privacy}", "received_events_url": "https://api.github.com/users/tschwinge/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "f2c9f71da9fd748bb452e69e7825e5f28e7c741d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f2c9f71da9fd748bb452e69e7825e5f28e7c741d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f2c9f71da9fd748bb452e69e7825e5f28e7c741d"}], "stats": {"total": 53, "additions": 37, "deletions": 16}, "files": [{"sha": "df71558a7e532f3b63a707ad4d49b95eefd37902", "filename": "gcc/ChangeLog", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/64186aad5abe1c3e1468f172589b55a6449d6fc2/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/64186aad5abe1c3e1468f172589b55a6449d6fc2/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=64186aad5abe1c3e1468f172589b55a6449d6fc2", "patch": "@@ -1,3 +1,17 @@\n+2015-09-23  Thomas Schwinge  <thomas@codesourcery.com>\n+\n+\t* configure.ac (offload_targets, OFFLOAD_TARGETS): Separate\n+\toffload targets by commas, not colons.\n+\t* config.in: Regenerate.\n+\t* configure: Likewise.\n+\t* gcc.c (driver::maybe_putenv_COLLECT_LTO_WRAPPER): Due to that,\n+\tinstead of setting up the default offload targets here...\n+\t(process_command): ..., do it here.\n+\tlibgomp/\n+\t* plugin/configfrag.ac (OFFLOAD_TARGETS): Clarify that offload\n+\ttargets are separated by commas.\n+\t* config.h.in: Regenerate.\n+\n 2015-09-23  Thomas Schwinge  <thomas@codesourcery.com>\n \t    Nathan Sidwell  <nathan@codesourcery.com>\n "}, {"sha": "c5c1be4e488d45eb1c1652bb46ac7d0d0fb41a11", "filename": "gcc/config.in", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/64186aad5abe1c3e1468f172589b55a6449d6fc2/gcc%2Fconfig.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/64186aad5abe1c3e1468f172589b55a6449d6fc2/gcc%2Fconfig.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig.in?ref=64186aad5abe1c3e1468f172589b55a6449d6fc2", "patch": "@@ -1913,7 +1913,7 @@\n #endif\n \n \n-/* Define to hold the list of target names suitable for offloading. */\n+/* Define to offload targets, separated by commas. */\n #ifndef USED_FOR_TARGET\n #undef OFFLOAD_TARGETS\n #endif"}, {"sha": "7493c800f48fab780755290560b1ce83efa9e771", "filename": "gcc/configure", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/64186aad5abe1c3e1468f172589b55a6449d6fc2/gcc%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/64186aad5abe1c3e1468f172589b55a6449d6fc2/gcc%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfigure?ref=64186aad5abe1c3e1468f172589b55a6449d6fc2", "patch": "@@ -7696,7 +7696,7 @@ for tgt in `echo $enable_offload_targets | sed 's/,/ /g'`; do\n   if test x\"$offload_targets\" = x; then\n     offload_targets=$tgt\n   else\n-    offload_targets=\"$offload_targets:$tgt\"\n+    offload_targets=\"$offload_targets,$tgt\"\n   fi\n done\n "}, {"sha": "9d1f6f18ebae8e02f75385d8a49266ef51f19c81", "filename": "gcc/configure.ac", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/64186aad5abe1c3e1468f172589b55a6449d6fc2/gcc%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/64186aad5abe1c3e1468f172589b55a6449d6fc2/gcc%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfigure.ac?ref=64186aad5abe1c3e1468f172589b55a6449d6fc2", "patch": "@@ -941,11 +941,11 @@ for tgt in `echo $enable_offload_targets | sed 's/,/ /g'`; do\n   if test x\"$offload_targets\" = x; then\n     offload_targets=$tgt\n   else\n-    offload_targets=\"$offload_targets:$tgt\"\n+    offload_targets=\"$offload_targets,$tgt\"\n   fi\n done\n AC_DEFINE_UNQUOTED(OFFLOAD_TARGETS, \"$offload_targets\",\n-  [Define to hold the list of target names suitable for offloading.])\n+  [Define to offload targets, separated by commas.])\n if test x\"$offload_targets\" != x; then\n   AC_DEFINE(ENABLE_OFFLOADING, 1,\n     [Define this to enable support for offloading.])"}, {"sha": "78b68e28aa655fffcdd56be186dfd96d1e3df499", "filename": "gcc/gcc.c", "status": "modified", "additions": 13, "deletions": 10, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/64186aad5abe1c3e1468f172589b55a6449d6fc2/gcc%2Fgcc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/64186aad5abe1c3e1468f172589b55a6449d6fc2/gcc%2Fgcc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgcc.c?ref=64186aad5abe1c3e1468f172589b55a6449d6fc2", "patch": "@@ -284,7 +284,8 @@ static const char *const spec_version = DEFAULT_TARGET_VERSION;\n static const char *spec_machine = DEFAULT_TARGET_MACHINE;\n static const char *spec_host_machine = DEFAULT_REAL_TARGET_MACHINE;\n \n-/* List of offload targets.  */\n+/* List of offload targets.  Separated by colon.  Empty string for\n+   -foffload=disable.  */\n \n static char *offload_targets = NULL;\n \n@@ -4376,6 +4377,13 @@ process_command (unsigned int decoded_options_count,\n \t\t\t   CL_DRIVER, &handlers, global_dc);\n     }\n \n+#ifdef ENABLE_OFFLOADING\n+  /* If the user didn't specify any, default to all configured offload\n+     targets.  */\n+  if (offload_targets == NULL)\n+    handle_foffload_option (OFFLOAD_TARGETS);\n+#endif\n+\n   if (output_file\n       && strcmp (output_file, \"-\") != 0\n       && strcmp (output_file, HOST_BIT_BUCKET) != 0)\n@@ -7572,22 +7580,17 @@ driver::maybe_putenv_COLLECT_LTO_WRAPPER () const\n void\n driver::maybe_putenv_OFFLOAD_TARGETS () const\n {\n-  const char *targets = offload_targets;\n-\n-  /* If no targets specified by -foffload, use all available targets.  */\n-  if (!targets)\n-    targets = OFFLOAD_TARGETS;\n-\n-  if (strlen (targets) > 0)\n+  if (offload_targets && offload_targets[0] != '\\0')\n     {\n       obstack_grow (&collect_obstack, \"OFFLOAD_TARGET_NAMES=\",\n \t\t    sizeof (\"OFFLOAD_TARGET_NAMES=\") - 1);\n-      obstack_grow (&collect_obstack, targets,\n-\t\t    strlen (targets) + 1);\n+      obstack_grow (&collect_obstack, offload_targets,\n+\t\t    strlen (offload_targets) + 1);\n       xputenv (XOBFINISH (&collect_obstack, char *));\n     }\n \n   free (offload_targets);\n+  offload_targets = NULL;\n }\n \n /* Reject switches that no pass was interested in.  */"}, {"sha": "e13a82a28c8121200b949dee54d743cc098175e4", "filename": "gcc/lto-wrapper.c", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/64186aad5abe1c3e1468f172589b55a6449d6fc2/gcc%2Flto-wrapper.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/64186aad5abe1c3e1468f172589b55a6449d6fc2/gcc%2Flto-wrapper.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flto-wrapper.c?ref=64186aad5abe1c3e1468f172589b55a6449d6fc2", "patch": "@@ -594,6 +594,8 @@ append_offload_options (obstack *argv_obstack, const char *target,\n       else\n \t{\n \t  opts = strchr (option->arg, '=');\n+\t  /* If there are offload targets specified, but no actual options,\n+\t     there is nothing to do here.  */\n \t  if (!opts)\n \t    continue;\n \n@@ -606,10 +608,12 @@ append_offload_options (obstack *argv_obstack, const char *target,\n \t\tnext = opts;\n \t      next = (next > opts) ? opts : next;\n \n+\t      /* Are we looking for this offload target?  */\n \t      if (strlen (target) == (size_t) (next - cur)\n \t\t  && strncmp (target, cur, next - cur) == 0)\n \t\tbreak;\n \n+\t      /* Skip the comma or equal sign.  */\n \t      cur = next + 1;\n \t    }\n "}, {"sha": "2e4c6981aea2b59e85a8fb8bcee24af2a8c33a6e", "filename": "libgomp/config.h.in", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/64186aad5abe1c3e1468f172589b55a6449d6fc2/libgomp%2Fconfig.h.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/64186aad5abe1c3e1468f172589b55a6449d6fc2/libgomp%2Fconfig.h.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Fconfig.h.in?ref=64186aad5abe1c3e1468f172589b55a6449d6fc2", "patch": "@@ -95,7 +95,7 @@\n    */\n #undef LT_OBJDIR\n \n-/* Define to hold the list of target names suitable for offloading. */\n+/* Define to offload targets, separated by commas. */\n #undef OFFLOAD_TARGETS\n \n /* Name of package */"}, {"sha": "ad70dd1f3e8a1e1068632b7ef6a6e185135aa691", "filename": "libgomp/plugin/configfrag.ac", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/64186aad5abe1c3e1468f172589b55a6449d6fc2/libgomp%2Fplugin%2Fconfigfrag.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/64186aad5abe1c3e1468f172589b55a6449d6fc2/libgomp%2Fplugin%2Fconfigfrag.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Fplugin%2Fconfigfrag.ac?ref=64186aad5abe1c3e1468f172589b55a6449d6fc2", "patch": "@@ -141,7 +141,7 @@ if test x\"$enable_offload_targets\" != x; then\n   done\n fi\n AC_DEFINE_UNQUOTED(OFFLOAD_TARGETS, \"$offload_targets\",\n-  [Define to hold the list of target names suitable for offloading.])\n+  [Define to offload targets, separated by commas.])\n AM_CONDITIONAL([PLUGIN_NVPTX], [test $PLUGIN_NVPTX = 1])\n AC_DEFINE_UNQUOTED([PLUGIN_NVPTX], [$PLUGIN_NVPTX],\n   [Define to 1 if the NVIDIA plugin is built, 0 if not.])"}]}