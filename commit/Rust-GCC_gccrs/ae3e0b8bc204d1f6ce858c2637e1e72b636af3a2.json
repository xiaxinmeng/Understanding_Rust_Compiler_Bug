{"sha": "ae3e0b8bc204d1f6ce858c2637e1e72b636af3a2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWUzZTBiOGJjMjA0ZDFmNmNlODU4YzI2MzdlMWU3MmI2MzZhZjNhMg==", "commit": {"author": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2021-05-14T08:44:33Z"}, "committer": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2021-05-14T08:44:33Z"}, "message": "gcc-changelog: detect Co-Authored-By before ChangeLog entries\n\ncontrib/ChangeLog:\n\n\t* gcc-changelog/git_commit.py: Support Co-Authored-By before\n\ta first ChangeLog entry.", "tree": {"sha": "ebc56307aaafe5910d7ea23fa4cd5566b8f9fdd9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ebc56307aaafe5910d7ea23fa4cd5566b8f9fdd9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ae3e0b8bc204d1f6ce858c2637e1e72b636af3a2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ae3e0b8bc204d1f6ce858c2637e1e72b636af3a2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ae3e0b8bc204d1f6ce858c2637e1e72b636af3a2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ae3e0b8bc204d1f6ce858c2637e1e72b636af3a2/comments", "author": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "committer": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f3b1516d9dfd969d7cc1ca6f26dec13478a1c458", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f3b1516d9dfd969d7cc1ca6f26dec13478a1c458", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f3b1516d9dfd969d7cc1ca6f26dec13478a1c458"}], "stats": {"total": 3, "additions": 2, "deletions": 1}, "files": [{"sha": "4958ab9c1595e8f632a7a6b72a13ca179c1d4d80", "filename": "contrib/gcc-changelog/git_commit.py", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ae3e0b8bc204d1f6ce858c2637e1e72b636af3a2/contrib%2Fgcc-changelog%2Fgit_commit.py", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ae3e0b8bc204d1f6ce858c2637e1e72b636af3a2/contrib%2Fgcc-changelog%2Fgit_commit.py", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/contrib%2Fgcc-changelog%2Fgit_commit.py?ref=ae3e0b8bc204d1f6ce858c2637e1e72b636af3a2", "patch": "@@ -409,7 +409,8 @@ def parse_lines(self, all_are_ignored):\n                 continue\n             if (changelog_regex.match(b) or self.find_changelog_location(b)\n                     or star_prefix_regex.match(b) or pr_regex.match(b)\n-                    or dr_regex.match(b) or author_line_regex.match(b)):\n+                    or dr_regex.match(b) or author_line_regex.match(b)\n+                    or b.lower().startswith(CO_AUTHORED_BY_PREFIX)):\n                 self.changes = body[i:]\n                 return\n         if not all_are_ignored:"}]}