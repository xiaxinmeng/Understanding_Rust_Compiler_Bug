{"sha": "41f8d041be068873c8c27b3e9c86bed3b2c90385", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDFmOGQwNDFiZTA2ODg3M2M4YzI3YjNlOWM4NmJlZDNiMmM5MDM4NQ==", "commit": {"author": {"name": "Richard Sandiford", "email": "rsandifo@redhat.com", "date": "2002-05-08T08:01:35Z"}, "committer": {"name": "Richard Sandiford", "email": "rsandifo@gcc.gnu.org", "date": "2002-05-08T08:01:35Z"}, "message": "mips.md: Name the unspecs with define_constant.\n\n\t* config/mips/mips.md: Name the unspecs with define_constant.\n\t(*HILO_delay): Rename to 'hilo_delay' (no star).\n\t(reload_indi): Replace gen_rtx_UNSPEC with gen_hilo_delay.\n\t(reload_outdi, reload_outsi): Likewise.\n\nFrom-SVN: r53284", "tree": {"sha": "0d4a55874c3a5435a6d76aab7d0fb5fcb12abad4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0d4a55874c3a5435a6d76aab7d0fb5fcb12abad4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/41f8d041be068873c8c27b3e9c86bed3b2c90385", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/41f8d041be068873c8c27b3e9c86bed3b2c90385", "html_url": "https://github.com/Rust-GCC/gccrs/commit/41f8d041be068873c8c27b3e9c86bed3b2c90385", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/41f8d041be068873c8c27b3e9c86bed3b2c90385/comments", "author": null, "committer": null, "parents": [{"sha": "744015dc2fcdd3bdd7066a2aea3575585d9afd51", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/744015dc2fcdd3bdd7066a2aea3575585d9afd51", "html_url": "https://github.com/Rust-GCC/gccrs/commit/744015dc2fcdd3bdd7066a2aea3575585d9afd51"}], "stats": {"total": 127, "additions": 72, "deletions": 55}, "files": [{"sha": "4e90317d6f5a989b42613491295998f585166f30", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/41f8d041be068873c8c27b3e9c86bed3b2c90385/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/41f8d041be068873c8c27b3e9c86bed3b2c90385/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=41f8d041be068873c8c27b3e9c86bed3b2c90385", "patch": "@@ -1,3 +1,10 @@\n+2002-05-08  Richard Sandiford  <rsandifo@redhat.com>\n+\n+\t* config/mips/mips.md: Name the unspecs with define_constant.\n+\t(*HILO_delay): Rename to 'hilo_delay' (no star).\n+\t(reload_indi): Replace gen_rtx_UNSPEC with gen_hilo_delay.\n+\t(reload_outdi, reload_outsi): Likewise.\n+\n 2002-05-07  Kazu Hirata  <kazu@cs.umass.edu>\n \n \t* toplev.c: Fix formatting."}, {"sha": "bbce30eb3bf83786dc5054c6d5d013c18cb0a968", "filename": "gcc/config/mips/mips.md", "status": "modified", "additions": 65, "deletions": 55, "changes": 120, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/41f8d041be068873c8c27b3e9c86bed3b2c90385/gcc%2Fconfig%2Fmips%2Fmips.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/41f8d041be068873c8c27b3e9c86bed3b2c90385/gcc%2Fconfig%2Fmips%2Fmips.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fmips.md?ref=41f8d041be068873c8c27b3e9c86bed3b2c90385", "patch": "@@ -26,29 +26,28 @@\n ;; ??? Currently does not have define_function_unit support for the R8000.\n ;; Must include new entries for fmadd in addition to existing entries.\n \n-;; UNSPEC values used in mips.md\n-;; Number\tUSE\n-;; 0\t\tmovsi_ul\n-;; 1\t\tmovsi_usw, get_fnaddr\n-;; 2            reload_in*, reload_out* : sets delay on HILO register\n-;; 3\t\teh_set_return\n-;; 20\t\tbuiltin_setjmp_setup\n-;; 111\t\tmovdi_usd\n-;;\n-;; UNSPEC_VOLATILE values\n-;; 0\t\tblockage\n-;; 2\t\tloadgp\n-;; 3\t\tbuiltin_longjmp\n-;; 4\t\texception_receiver\n-;; 10\t\tconsttable_qi\n-;; 11\t\tconsttable_hi\n-;; 12\t\tconsttable_si\n-;; 13\t\tconsttable_di\n-;; 14\t\tconsttable_sf\n-;; 15\t\tconsttable_df\n-;; 16\t\talign_2\n-;; 17\t\talign_4\n-;; 18\t\talign_8\n+(define_constants\n+  [(UNSPEC_ULW\t\t\t 0)\n+   (UNSPEC_USW\t\t\t 1)\n+   (UNSPEC_ULD\t\t\t 2)\n+   (UNSPEC_USD\t\t\t 3)\n+   (UNSPEC_GET_FNADDR\t\t 4)\n+   (UNSPEC_HILO_DELAY\t\t 5)\n+   (UNSPEC_BLOCKAGE\t\t 6)\n+   (UNSPEC_LOADGP\t\t 7)\n+   (UNSPEC_SETJMP\t\t 8)\n+   (UNSPEC_LONGJMP\t\t 9)\n+   (UNSPEC_EH_RECEIVER\t\t10)\n+   (UNSPEC_EH_RETURN\t\t11)\n+   (UNSPEC_CONSTTABLE_QI\t12)\n+   (UNSPEC_CONSTTABLE_HI\t13)\n+   (UNSPEC_CONSTTABLE_SI\t14)\n+   (UNSPEC_CONSTTABLE_DI\t15)\n+   (UNSPEC_CONSTTABLE_SF\t16)\n+   (UNSPEC_CONSTTABLE_DF\t17)\n+   (UNSPEC_ALIGN_2\t\t18)\n+   (UNSPEC_ALIGN_4\t\t19)\n+   (UNSPEC_ALIGN_8\t\t20)])\n \f\n \n ;; ....................\n@@ -4831,7 +4830,8 @@ move\\\\t%0,%z4\\\\n\\\\\n \n (define_insn \"movsi_ulw\"\n   [(set (match_operand:SI 0 \"register_operand\" \"=&d,&d\")\n-\t(unspec:SI [(match_operand:BLK 1 \"general_operand\" \"R,o\")] 0))]\n+\t(unspec:SI [(match_operand:BLK 1 \"general_operand\" \"R,o\")]\n+\t\t   UNSPEC_ULW))]\n   \"!TARGET_MIPS16\"\n   \"*\n {\n@@ -4860,7 +4860,8 @@ move\\\\t%0,%z4\\\\n\\\\\n \n (define_insn \"movsi_usw\"\n   [(set (match_operand:BLK 0 \"memory_operand\" \"=R,o\")\n-\t(unspec:BLK [(match_operand:SI 1 \"reg_or_0_operand\" \"dJ,dJ\")] 1))]\n+\t(unspec:BLK [(match_operand:SI 1 \"reg_or_0_operand\" \"dJ,dJ\")]\n+\t\t    UNSPEC_USW))]\n   \"!TARGET_MIPS16\"\n   \"*\n {\n@@ -4890,7 +4891,8 @@ move\\\\t%0,%z4\\\\n\\\\\n \n (define_insn \"movdi_uld\"\n   [(set (match_operand:DI 0 \"register_operand\" \"=&d,&d\")\n-\t(unspec:DI [(match_operand:BLK 1 \"general_operand\" \"R,o\")] 0))]\n+\t(unspec:DI [(match_operand:BLK 1 \"general_operand\" \"R,o\")]\n+\t\t   UNSPEC_ULD))]\n   \"\"\n   \"*\n {\n@@ -4919,7 +4921,8 @@ move\\\\t%0,%z4\\\\n\\\\\n \n (define_insn \"movdi_usd\"\n   [(set (match_operand:BLK 0 \"memory_operand\" \"=R,o\")\n-\t(unspec:BLK [(match_operand:DI 1 \"reg_or_0_operand\" \"dJ,dJ\")] 111))]\n+\t(unspec:BLK [(match_operand:DI 1 \"reg_or_0_operand\" \"dJ,dJ\")]\n+\t\t    UNSPEC_USD))]\n   \"\"\n   \"*\n {\n@@ -5259,7 +5262,7 @@ move\\\\t%0,%z4\\\\n\\\\\n \t  emit_move_insn (gen_rtx_REG (SImode, 64), scratch);\n \t  emit_move_insn (scratch, lo_word);\n \t  emit_move_insn (gen_rtx (REG, SImode, 65), scratch);\n-\t  emit_insn (gen_rtx_UNSPEC (VOIDmode, gen_rtvec (1, operands[0]), 2));\n+\t  emit_insn (gen_hilo_delay (operands[0]));\n \t}\n       else\n \t{\n@@ -5268,7 +5271,7 @@ move\\\\t%0,%z4\\\\n\\\\\n \t  emit_insn (gen_ashldi3 (scratch, operands[1], GEN_INT (32)));\n \t  emit_insn (gen_ashrdi3 (scratch, scratch, GEN_INT (32)));\n \t  emit_insn (gen_movdi (gen_rtx (REG, DImode, 65), scratch));\n-          emit_insn (gen_rtx_UNSPEC (VOIDmode, gen_rtvec (1, operands[0]), 2));\n+          emit_insn (gen_hilo_delay (operands[0]));\n \t}\n       DONE;\n     }\n@@ -5280,7 +5283,7 @@ move\\\\t%0,%z4\\\\n\\\\\n       emit_insn (gen_movdi (operands[0], gen_rtx_REG (DImode, 64)));\n       emit_insn (gen_ashldi3 (operands[0], operands[0], GEN_INT (32)));\n       emit_insn (gen_iordi3 (operands[0], operands[0], scratch));\n-      emit_insn (gen_rtx_UNSPEC (VOIDmode, gen_rtvec (1, operands[1]), 2));\n+      emit_insn (gen_hilo_delay (operands[1]));\n       DONE;\n     }\n   /* This handles moves between a float register and HI/LO.  */\n@@ -5310,7 +5313,7 @@ move\\\\t%0,%z4\\\\n\\\\\n       emit_insn (gen_ashldi3 (scratch, operands[1], GEN_INT (32)));\n       emit_insn (gen_ashrdi3 (scratch, scratch, GEN_INT (32)));\n       emit_insn (gen_movdi (gen_rtx (REG, DImode, 65), scratch));\n-      emit_insn (gen_rtx_UNSPEC (VOIDmode, gen_rtvec (1, operands[0]), 2));\n+      emit_insn (gen_hilo_delay (operands[0]));\n       DONE;\n     }\n   if (GET_CODE (operands[1]) == REG && REGNO (operands[1]) == HILO_REGNUM)\n@@ -5339,7 +5342,7 @@ move\\\\t%0,%z4\\\\n\\\\\n \t  emit_move_insn (hi_word, scratch);\n \t  emit_move_insn (scratch, gen_rtx_REG (SImode, 65));\n \t  emit_move_insn (lo_word, scratch);\n-\t  emit_insn (gen_rtx_UNSPEC (VOIDmode, gen_rtvec (1, operands[1]), 2));\n+\t  emit_insn (gen_hilo_delay (operands[1]));\n \t}\n       else if (TARGET_MIPS16 && ! M16_REG_P (REGNO (operands[0])))\n \t{\n@@ -5354,7 +5357,7 @@ move\\\\t%0,%z4\\\\n\\\\\n \t  emit_insn (gen_ashldi3 (scratch2, scratch2, GEN_INT (32)));\n \t  emit_insn (gen_iordi3 (scratch, scratch, scratch2));\n \t  emit_insn (gen_movdi (operands[0], scratch));\n-\t  emit_insn (gen_rtx_UNSPEC (VOIDmode, gen_rtvec (1, operands[1]), 2));\n+\t  emit_insn (gen_hilo_delay (operands[1]));\n \t}\n       else\n \t{\n@@ -5364,7 +5367,7 @@ move\\\\t%0,%z4\\\\n\\\\\n \t  emit_insn (gen_movdi (operands[0], gen_rtx (REG, DImode, 64)));\n \t  emit_insn (gen_ashldi3 (operands[0], operands[0], GEN_INT (32)));\n \t  emit_insn (gen_iordi3 (operands[0], operands[0], scratch));\n-\t  emit_insn (gen_rtx_UNSPEC (VOIDmode, gen_rtvec (1, operands[1]), 2));\n+\t  emit_insn (gen_hilo_delay (operands[1]));\n \t}\n       DONE;\n     }\n@@ -5693,7 +5696,7 @@ move\\\\t%0,%z4\\\\n\\\\\n       emit_insn (gen_movsi (gen_rtx_REG (SImode, 65), operands[1]));\n       emit_insn (gen_ashrsi3 (operands[2], operands[1], GEN_INT (31)));\n       emit_insn (gen_movsi (gen_rtx (REG, SImode, 64), operands[2]));\n-      emit_insn (gen_rtx_UNSPEC (VOIDmode, gen_rtvec (1, operands[0]), 2));\n+      emit_insn (gen_hilo_delay (operands[0]));\n       DONE;\n     }\n   /* Use a mult to reload LO on mips16.  ??? This is hideous.  */\n@@ -5820,8 +5823,8 @@ move\\\\t%0,%z4\\\\n\\\\\n \n ;; This insn is for the unspec delay for HILO.\n \n-(define_insn \"*HILO_delay\"\n-  [(unspec [(match_operand 0 \"register_operand\" \"=b\")] 2 )]\n+(define_insn \"hilo_delay\"\n+  [(unspec [(match_operand 0 \"register_operand\" \"=b\")] UNSPEC_HILO_DELAY)]\n   \"\"\n   \"\"\n   [(set_attr \"type\" \"nop\")\n@@ -6386,7 +6389,8 @@ move\\\\t%0,%z4\\\\n\\\\\n (define_insn \"loadgp\"\n   [(set (reg:DI 28)\n \t(unspec_volatile:DI [(match_operand:DI 0 \"address_operand\" \"\")\n-\t\t\t     (match_operand:DI 1 \"register_operand\" \"\")] 2))\n+\t\t\t     (match_operand:DI 1 \"register_operand\" \"\")]\n+\t\t\t    UNSPEC_LOADGP))\n    (clobber (reg:DI 1))]\n   \"\"\n   \"%[lui\\\\t$1,%%hi(%%neg(%%gp_rel(%a0)))\\\\n\\\\taddiu\\\\t$1,$1,%%lo(%%neg(%%gp_rel(%a0)))\\\\n\\\\tdaddu\\\\t$gp,$1,%1%]\"\n@@ -9563,7 +9567,7 @@ ld\\\\t%2,%1-%S1(%2)\\;daddu\\\\t%2,%2,$31\\\\n\\\\t%*j\\\\t%2\"\n ;; this is easy.\n \n (define_expand \"builtin_setjmp_setup\"\n-  [(unspec [(match_operand 0 \"register_operand\" \"r\")] 20)]\n+  [(unspec [(match_operand 0 \"register_operand\" \"r\")] UNSPEC_SETJMP)]\n   \"TARGET_ABICALLS\"\n   \"\n {\n@@ -9592,7 +9596,7 @@ ld\\\\t%2,%1-%S1(%2)\\;daddu\\\\t%2,%2,$31\\\\n\\\\t%*j\\\\t%2\"\n ;; target address in t9 so that we can use it for loading $gp.\n \n (define_expand \"builtin_longjmp\"\n-  [(unspec_volatile [(match_operand 0 \"register_operand\" \"r\")] 3)]\n+  [(unspec_volatile [(match_operand 0 \"register_operand\" \"r\")] UNSPEC_LONGJMP)]\n   \"TARGET_ABICALLS\"\n   \"\n {\n@@ -9642,7 +9646,7 @@ ld\\\\t%2,%1-%S1(%2)\\;daddu\\\\t%2,%2,$31\\\\n\\\\t%*j\\\\t%2\"\n ;; saved or used to pass arguments.\n \n (define_insn \"blockage\"\n-  [(unspec_volatile [(const_int 0)] 0)]\n+  [(unspec_volatile [(const_int 0)] UNSPEC_BLOCKAGE)]\n   \"\"\n   \"\"\n   [(set_attr \"type\"\t\"unknown\")\n@@ -9688,7 +9692,7 @@ ld\\\\t%2,%1-%S1(%2)\\;daddu\\\\t%2,%2,$31\\\\n\\\\t%*j\\\\t%2\"\n \n (define_insn \"get_fnaddr\"\n   [(set (match_operand 0 \"register_operand\" \"=d\")\n-\t(unspec [(match_operand 1 \"\" \"\")] 1))\n+\t(unspec [(match_operand 1 \"\" \"\")] UNSPEC_GET_FNADDR))\n    (clobber (reg:SI 31))]\n   \"TARGET_EMBEDDED_PIC\n    && GET_CODE (operands[1]) == SYMBOL_REF\"\n@@ -9721,19 +9725,19 @@ ld\\\\t%2,%1-%S1(%2)\\;daddu\\\\t%2,%2,$31\\\\n\\\\t%*j\\\\t%2\"\n ;; until we know where it will be put in the stack frame.\n \n (define_insn \"eh_set_lr_si\"\n-  [(unspec [(match_operand:SI 0 \"register_operand\" \"r\")] 3)\n+  [(unspec [(match_operand:SI 0 \"register_operand\" \"r\")] UNSPEC_EH_RETURN)\n    (clobber (match_scratch:SI 1 \"=&r\"))]\n   \"! TARGET_64BIT\"\n   \"#\")\n \n (define_insn \"eh_set_lr_di\"\n-  [(unspec [(match_operand:DI 0 \"register_operand\" \"r\")] 3)\n+  [(unspec [(match_operand:DI 0 \"register_operand\" \"r\")] UNSPEC_EH_RETURN)\n    (clobber (match_scratch:DI 1 \"=&r\"))]\n   \"TARGET_64BIT\"\n   \"#\")\n \n (define_split\n-  [(unspec [(match_operand 0 \"register_operand\" \"\")] 3)\n+  [(unspec [(match_operand 0 \"register_operand\" \"\")] UNSPEC_EH_RETURN)\n    (clobber (match_scratch 1 \"\"))]\n   \"reload_completed && !TARGET_DEBUG_D_MODE\"\n   [(const_int 0)]\n@@ -9766,7 +9770,7 @@ ld\\\\t%2,%1-%S1(%2)\\;daddu\\\\t%2,%2,$31\\\\n\\\\t%*j\\\\t%2\"\n }\")\n \n (define_insn \"exception_receiver\"\n-  [(unspec_volatile [(const_int 0)] 4)]\n+  [(unspec_volatile [(const_int 0)] UNSPEC_EH_RECEIVER)]\n   \"TARGET_ABICALLS && (mips_abi == ABI_32 || mips_abi == ABI_O64)\"\n   \"*\n {\n@@ -10567,7 +10571,8 @@ ld\\\\t%2,%1-%S1(%2)\\;daddu\\\\t%2,%2,$31\\\\n\\\\t%*j\\\\t%2\"\n ;;\n \n (define_insn \"consttable_qi\"\n-  [(unspec_volatile [(match_operand:QI 0 \"consttable_operand\" \"=g\")] 10)]\n+  [(unspec_volatile [(match_operand:QI 0 \"consttable_operand\" \"=g\")]\n+\t\t    UNSPEC_CONSTTABLE_QI)]\n   \"TARGET_MIPS16\"\n   \"*\n {\n@@ -10579,7 +10584,8 @@ ld\\\\t%2,%1-%S1(%2)\\;daddu\\\\t%2,%2,$31\\\\n\\\\t%*j\\\\t%2\"\n    (set_attr \"length\"\t\"8\")])\n \n (define_insn \"consttable_hi\"\n-  [(unspec_volatile [(match_operand:HI 0 \"consttable_operand\" \"=g\")] 11)]\n+  [(unspec_volatile [(match_operand:HI 0 \"consttable_operand\" \"=g\")]\n+\t\t    UNSPEC_CONSTTABLE_HI)]\n   \"TARGET_MIPS16\"\n   \"*\n {\n@@ -10591,7 +10597,8 @@ ld\\\\t%2,%1-%S1(%2)\\;daddu\\\\t%2,%2,$31\\\\n\\\\t%*j\\\\t%2\"\n    (set_attr \"length\"\t\"8\")])\n \n (define_insn \"consttable_si\"\n-  [(unspec_volatile [(match_operand:SI 0 \"consttable_operand\" \"=g\")] 12)]\n+  [(unspec_volatile [(match_operand:SI 0 \"consttable_operand\" \"=g\")]\n+\t\t    UNSPEC_CONSTTABLE_SI)]\n   \"TARGET_MIPS16\"\n   \"*\n {\n@@ -10603,7 +10610,8 @@ ld\\\\t%2,%1-%S1(%2)\\;daddu\\\\t%2,%2,$31\\\\n\\\\t%*j\\\\t%2\"\n    (set_attr \"length\"\t\"8\")])\n \n (define_insn \"consttable_di\"\n-  [(unspec_volatile [(match_operand:DI 0 \"consttable_operand\" \"=g\")] 13)]\n+  [(unspec_volatile [(match_operand:DI 0 \"consttable_operand\" \"=g\")]\n+\t\t    UNSPEC_CONSTTABLE_DI)]\n   \"TARGET_MIPS16\"\n   \"*\n {\n@@ -10615,7 +10623,8 @@ ld\\\\t%2,%1-%S1(%2)\\;daddu\\\\t%2,%2,$31\\\\n\\\\t%*j\\\\t%2\"\n    (set_attr \"length\"\t\"16\")])\n \n (define_insn \"consttable_sf\"\n-  [(unspec_volatile [(match_operand:SF 0 \"consttable_operand\" \"=g\")] 14)]\n+  [(unspec_volatile [(match_operand:SF 0 \"consttable_operand\" \"=g\")]\n+\t\t    UNSPEC_CONSTTABLE_SF)]\n   \"TARGET_MIPS16\"\n   \"*\n {\n@@ -10632,7 +10641,8 @@ ld\\\\t%2,%1-%S1(%2)\\;daddu\\\\t%2,%2,$31\\\\n\\\\t%*j\\\\t%2\"\n    (set_attr \"length\"\t\"8\")])\n \n (define_insn \"consttable_df\"\n-  [(unspec_volatile [(match_operand:DF 0 \"consttable_operand\" \"=g\")] 15)]\n+  [(unspec_volatile [(match_operand:DF 0 \"consttable_operand\" \"=g\")]\n+\t\t    UNSPEC_CONSTTABLE_DF)]\n   \"TARGET_MIPS16\"\n   \"*\n {\n@@ -10649,23 +10659,23 @@ ld\\\\t%2,%1-%S1(%2)\\;daddu\\\\t%2,%2,$31\\\\n\\\\t%*j\\\\t%2\"\n    (set_attr \"length\"\t\"16\")])\n \n (define_insn \"align_2\"\n-  [(unspec_volatile [(const_int 0)] 16)]\n+  [(unspec_volatile [(const_int 0)] UNSPEC_ALIGN_2)]\n   \"TARGET_MIPS16\"\n   \".align 1\"\n   [(set_attr \"type\"\t\"unknown\")\n    (set_attr \"mode\"\t\"HI\")\n    (set_attr \"length\"\t\"8\")])\n \n (define_insn \"align_4\"\n-  [(unspec_volatile [(const_int 0)] 17)]\n+  [(unspec_volatile [(const_int 0)] UNSPEC_ALIGN_4)]\n   \"TARGET_MIPS16\"\n   \".align 2\"\n   [(set_attr \"type\"\t\"unknown\")\n    (set_attr \"mode\"\t\"SI\")\n    (set_attr \"length\"\t\"8\")])\n \n (define_insn \"align_8\"\n-  [(unspec_volatile [(const_int 0)] 18)]\n+  [(unspec_volatile [(const_int 0)] UNSPEC_ALIGN_8)]\n   \"TARGET_MIPS16\"\n   \".align 3\"\n   [(set_attr \"type\"\t\"unknown\")"}]}