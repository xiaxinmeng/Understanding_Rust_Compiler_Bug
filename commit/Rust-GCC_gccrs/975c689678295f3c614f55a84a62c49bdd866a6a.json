{"sha": "975c689678295f3c614f55a84a62c49bdd866a6a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTc1YzY4OTY3ODI5NWYzYzYxNGY1NWE4NGE2MmM0OWJkZDg2NmE2YQ==", "commit": {"author": {"name": "Yannick Moy", "email": "moy@adacore.com", "date": "2011-08-02T15:15:07Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2011-08-02T15:15:07Z"}, "message": "einfo.adb, einfo.ads (Body_Is_In_ALFA, [...]): get/set for new flag denoting which subprogram bodies are in ALFA\n\n2011-08-02  Yannick Moy  <moy@adacore.com>\n\n\t* einfo.adb, einfo.ads (Body_Is_In_ALFA, Set_Body_Is_In_ALFA): get/set\n\tfor new flag denoting which subprogram bodies are in ALFA\n\t* restrict.adb, sem_ch7.adb: Update comment\n\t* sem_ch11.adb, sem_ch2.adb, sem_ch3.adb, sem_ch4.adb, sem_ch5.adb,\n\tsem_ch9.adb, sem_res.adb: Add calls to\n\tCurrent_Subprogram_Body_Is_Not_In_ALFA on unsupported constructs.\n\t* sem_ch6.adb (Analyze_Function_Return): add calls to\n\tCurrent_Subprogram_Body_Is_Not_In_ALFA on return statement in the\n\tmiddle of the body, and extended return.\n\t(Check_Missing_Return): add calls to Set_Body_Is_In_ALFA with argument\n\tFalse when missing return.\n\t(Analyze_Subprogram_Body_Helper): initialize the flag Body_Is_In_ALFA\n\tto True for subprograms whose spec is in ALFA. Remove later on the flag\n\ton the entity used for a subprogram body when there exists a separate\n\tdeclaration.\n\t* sem_util.adb, sem_util.ads (Current_Subprogram_Body_Is_Not_In_ALFA):\n\tif Current_Subprogram is not Empty, set its flag Body_Is_In_ALFA to\n\tFalse, otherwise do nothing.\n\nFrom-SVN: r177177", "tree": {"sha": "101c010bb1f1495a3e5010af30b9b9a86d819f3f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/101c010bb1f1495a3e5010af30b9b9a86d819f3f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/975c689678295f3c614f55a84a62c49bdd866a6a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/975c689678295f3c614f55a84a62c49bdd866a6a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/975c689678295f3c614f55a84a62c49bdd866a6a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/975c689678295f3c614f55a84a62c49bdd866a6a/comments", "author": {"login": "yannickmoy", "id": 859440, "node_id": "MDQ6VXNlcjg1OTQ0MA==", "avatar_url": "https://avatars.githubusercontent.com/u/859440?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yannickmoy", "html_url": "https://github.com/yannickmoy", "followers_url": "https://api.github.com/users/yannickmoy/followers", "following_url": "https://api.github.com/users/yannickmoy/following{/other_user}", "gists_url": "https://api.github.com/users/yannickmoy/gists{/gist_id}", "starred_url": "https://api.github.com/users/yannickmoy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yannickmoy/subscriptions", "organizations_url": "https://api.github.com/users/yannickmoy/orgs", "repos_url": "https://api.github.com/users/yannickmoy/repos", "events_url": "https://api.github.com/users/yannickmoy/events{/privacy}", "received_events_url": "https://api.github.com/users/yannickmoy/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "afc8324d660d789fa34a14817e52d8c432a1e7c8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/afc8324d660d789fa34a14817e52d8c432a1e7c8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/afc8324d660d789fa34a14817e52d8c432a1e7c8"}], "stats": {"total": 231, "additions": 202, "deletions": 29}, "files": [{"sha": "8777494989c59816d8d5bfa9b26a0402d8c0947f", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/975c689678295f3c614f55a84a62c49bdd866a6a/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/975c689678295f3c614f55a84a62c49bdd866a6a/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=975c689678295f3c614f55a84a62c49bdd866a6a", "patch": "@@ -1,3 +1,24 @@\n+2011-08-02  Yannick Moy  <moy@adacore.com>\n+\n+\t* einfo.adb, einfo.ads (Body_Is_In_ALFA, Set_Body_Is_In_ALFA): get/set\n+\tfor new flag denoting which subprogram bodies are in ALFA\n+\t* restrict.adb, sem_ch7.adb: Update comment\n+\t* sem_ch11.adb, sem_ch2.adb, sem_ch3.adb, sem_ch4.adb, sem_ch5.adb,\n+\tsem_ch9.adb, sem_res.adb: Add calls to\n+\tCurrent_Subprogram_Body_Is_Not_In_ALFA on unsupported constructs.\n+\t* sem_ch6.adb (Analyze_Function_Return): add calls to\n+\tCurrent_Subprogram_Body_Is_Not_In_ALFA on return statement in the\n+\tmiddle of the body, and extended return.\n+\t(Check_Missing_Return): add calls to Set_Body_Is_In_ALFA with argument\n+\tFalse when missing return.\n+\t(Analyze_Subprogram_Body_Helper): initialize the flag Body_Is_In_ALFA\n+\tto True for subprograms whose spec is in ALFA. Remove later on the flag\n+\ton the entity used for a subprogram body when there exists a separate\n+\tdeclaration.\n+\t* sem_util.adb, sem_util.ads (Current_Subprogram_Body_Is_Not_In_ALFA):\n+\tif Current_Subprogram is not Empty, set its flag Body_Is_In_ALFA to\n+\tFalse, otherwise do nothing.\n+\n 2011-08-02  Robert Dewar  <dewar@adacore.com>\n \n \t* inline.adb, stand.ads, sem_ch6.adb, sem_ch8.adb: Minor reformatting."}, {"sha": "ff07cfc4d1f377cc2a1ebdeb357077cafcd016c9", "filename": "gcc/ada/einfo.adb", "status": "modified", "additions": 14, "deletions": 1, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/975c689678295f3c614f55a84a62c49bdd866a6a/gcc%2Fada%2Feinfo.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/975c689678295f3c614f55a84a62c49bdd866a6a/gcc%2Fada%2Feinfo.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Feinfo.adb?ref=975c689678295f3c614f55a84a62c49bdd866a6a", "patch": "@@ -518,7 +518,7 @@ package body Einfo is\n    --    Is_Safe_To_Reevaluate           Flag249\n    --    Has_Predicates                  Flag250\n \n-   --    (unused)                        Flag251\n+   --    Body_Is_In_ALFA                 Flag251\n    --    (unused)                        Flag252\n    --    (unused)                        Flag253\n    --    (unused)                        Flag254\n@@ -651,6 +651,12 @@ package body Einfo is\n       return Node19 (Id);\n    end Body_Entity;\n \n+   function Body_Is_In_ALFA (Id : E) return B is\n+   begin\n+      pragma Assert (Is_Subprogram (Id) or else Is_Generic_Subprogram (Id));\n+      return Flag251 (Id);\n+   end Body_Is_In_ALFA;\n+\n    function Body_Needed_For_SAL (Id : E) return B is\n    begin\n       pragma Assert\n@@ -3098,6 +3104,12 @@ package body Einfo is\n       Set_Node19 (Id, V);\n    end Set_Body_Entity;\n \n+   procedure Set_Body_Is_In_ALFA (Id : E; V : B := True) is\n+   begin\n+      pragma Assert (Is_Subprogram (Id) or else Is_Generic_Subprogram (Id));\n+      Set_Flag251 (Id, V);\n+   end Set_Body_Is_In_ALFA;\n+\n    procedure Set_Body_Needed_For_SAL (Id : E; V : B := True) is\n    begin\n       pragma Assert\n@@ -7349,6 +7361,7 @@ package body Einfo is\n       end if;\n \n       W (\"Address_Taken\",                   Flag104 (Id));\n+      W (\"Body_Is_In_ALFA\",                 Flag251 (Id));\n       W (\"Body_Needed_For_SAL\",             Flag40  (Id));\n       W (\"C_Pass_By_Copy\",                  Flag125 (Id));\n       W (\"Can_Never_Be_Null\",               Flag38  (Id));"}, {"sha": "d666b5f85fbeee1e30d450b7a97fa031b23c4fb2", "filename": "gcc/ada/einfo.ads", "status": "modified", "additions": 15, "deletions": 4, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/975c689678295f3c614f55a84a62c49bdd866a6a/gcc%2Fada%2Feinfo.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/975c689678295f3c614f55a84a62c49bdd866a6a/gcc%2Fada%2Feinfo.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Feinfo.ads?ref=975c689678295f3c614f55a84a62c49bdd866a6a", "patch": "@@ -7,7 +7,7 @@\n --                                 S p e c                                  --\n --                                                                          --\n --          Copyright (C) 1992-2011, Free Software Foundation, Inc.         --\n---                                                                         --\n+--                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n -- ware  Foundation;  either version 3,  or (at your option) any later ver- --\n@@ -486,6 +486,11 @@ package Einfo is\n --       Present in package and generic package entities, points to the\n --       corresponding package body entity if one is present.\n \n+--    Body_Is_In_ALFA (Flag251)\n+--       Present in subprogram entities. Set for subprograms whose body belongs\n+--       to the ALFA subset, which are eligible for formal verification through\n+--       SPARK or Why tool-sets.\n+\n --    Body_Needed_For_SAL (Flag40)\n --       Present in package and subprogram entities that are compilation\n --       units. Indicates that the source for the body must be included\n@@ -2273,7 +2278,9 @@ package Einfo is\n --    Is_In_ALFA (Flag151)\n --       Present in all entities. Set for entities that belong to the ALFA\n --       subset, which are eligible for formal verification through SPARK or\n---       Why tool-sets.\n+--       Why tool-sets. For a subprogram, this only means that a call to the\n+--       subprogram can be formally analyzed. Another flag, Body_Is_In_ALFA,\n+--       defines which subprograms can be formally analyzed.\n \n --    Is_Inlined (Flag11)\n --       Present in all entities. Set for functions and procedures which are\n@@ -4336,7 +4343,7 @@ package Einfo is\n    --  E_Anonymous_Access_Protected_Subprogram_Type\n        E_Anonymous_Access_Type;\n \n-   subtype Access_Subprogram_Kind is Entity_Kind range\n+   subtype Access_Subprogram_Kind      is Entity_Kind range\n        E_Access_Subprogram_Type ..\n    --  E_Anonymous_Access_Subprogram_Type\n    --  E_Access_Protected_Subprogram_Type\n@@ -4536,7 +4543,7 @@ package Einfo is\n    --  E_Floating_Point_Type\n        E_Floating_Point_Subtype;\n \n-   subtype Object_Kind                is Entity_Kind range\n+   subtype Object_Kind                 is Entity_Kind range\n        E_Component ..\n    --  E_Constant\n    --  E_Discriminant\n@@ -5933,6 +5940,7 @@ package Einfo is\n    function Barrier_Function                    (Id : E) return N;\n    function Block_Node                          (Id : E) return N;\n    function Body_Entity                         (Id : E) return E;\n+   function Body_Is_In_ALFA                     (Id : E) return B;\n    function Body_Needed_For_SAL                 (Id : E) return B;\n    function CR_Discriminant                     (Id : E) return E;\n    function C_Pass_By_Copy                      (Id : E) return B;\n@@ -6519,6 +6527,7 @@ package Einfo is\n    procedure Set_Barrier_Function                (Id : E; V : N);\n    procedure Set_Block_Node                      (Id : E; V : N);\n    procedure Set_Body_Entity                     (Id : E; V : E);\n+   procedure Set_Body_Is_In_ALFA                 (Id : E; V : B := True);\n    procedure Set_Body_Needed_For_SAL             (Id : E; V : B := True);\n    procedure Set_CR_Discriminant                 (Id : E; V : E);\n    procedure Set_C_Pass_By_Copy                  (Id : E; V : B := True);\n@@ -7212,6 +7221,7 @@ package Einfo is\n    pragma Inline (Barrier_Function);\n    pragma Inline (Block_Node);\n    pragma Inline (Body_Entity);\n+   pragma Inline (Body_Is_In_ALFA);\n    pragma Inline (Body_Needed_For_SAL);\n    pragma Inline (CR_Discriminant);\n    pragma Inline (C_Pass_By_Copy);\n@@ -7653,6 +7663,7 @@ package Einfo is\n    pragma Inline (Set_Barrier_Function);\n    pragma Inline (Set_Block_Node);\n    pragma Inline (Set_Body_Entity);\n+   pragma Inline (Set_Body_Is_In_ALFA);\n    pragma Inline (Set_Body_Needed_For_SAL);\n    pragma Inline (Set_CR_Discriminant);\n    pragma Inline (Set_C_Pass_By_Copy);"}, {"sha": "b37a593b8beae6cc3d4dae53c9fb03710f019798", "filename": "gcc/ada/restrict.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/975c689678295f3c614f55a84a62c49bdd866a6a/gcc%2Fada%2Frestrict.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/975c689678295f3c614f55a84a62c49bdd866a6a/gcc%2Fada%2Frestrict.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Frestrict.adb?ref=975c689678295f3c614f55a84a62c49bdd866a6a", "patch": "@@ -371,7 +371,7 @@ package body Restrict is\n          return;\n       end if;\n \n-      --  In formal mode, issue an error for any use of class-wide, even if the\n+      --  In SPARK mode, issue an error for any use of class-wide, even if the\n       --  No_Dispatch restriction is not set.\n \n       if R = No_Dispatch then"}, {"sha": "73926faa4bb4f9f97b21b33d3f101c5f2ad67389", "filename": "gcc/ada/sem_ch11.adb", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/975c689678295f3c614f55a84a62c49bdd866a6a/gcc%2Fada%2Fsem_ch11.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/975c689678295f3c614f55a84a62c49bdd866a6a/gcc%2Fada%2Fsem_ch11.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch11.adb?ref=975c689678295f3c614f55a84a62c49bdd866a6a", "patch": "@@ -443,6 +443,7 @@ package body Sem_Ch11 is\n       P              : Node_Id;\n \n    begin\n+      Current_Subprogram_Body_Is_Not_In_ALFA;\n       Check_SPARK_Restriction (\"raise statement is not allowed\", N);\n       Check_Unreachable_Code (N);\n \n@@ -610,6 +611,7 @@ package body Sem_Ch11 is\n    --  Start of processing for Analyze_Raise_xxx_Error\n \n    begin\n+      Current_Subprogram_Body_Is_Not_In_ALFA;\n       Check_SPARK_Restriction (\"raise statement is not allowed\", N);\n \n       if No (Etype (N)) then"}, {"sha": "2a021d2d787cd46cf8f990eecfa8714a2a660dda", "filename": "gcc/ada/sem_ch2.adb", "status": "modified", "additions": 10, "deletions": 1, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/975c689678295f3c614f55a84a62c49bdd866a6a/gcc%2Fada%2Fsem_ch2.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/975c689678295f3c614f55a84a62c49bdd866a6a/gcc%2Fada%2Fsem_ch2.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch2.adb?ref=975c689678295f3c614f55a84a62c49bdd866a6a", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2007, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2011, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -24,12 +24,14 @@\n ------------------------------------------------------------------------------\n \n with Atree;    use Atree;\n+with Einfo;    use Einfo;\n with Errout;   use Errout;\n with Namet;    use Namet;\n with Opt;      use Opt;\n with Restrict; use Restrict;\n with Rident;   use Rident;\n with Sem_Ch8;  use Sem_Ch8;\n+with Sem_Util; use Sem_Util;\n with Sinfo;    use Sinfo;\n with Stand;    use Stand;\n with Uintp;    use Uintp;\n@@ -74,6 +76,13 @@ package body Sem_Ch2 is\n          return;\n       else\n          Find_Direct_Name (N);\n+\n+         if Present (Entity (N))\n+           and then Is_Object (Entity (N))\n+           and then not Is_In_ALFA (Entity (N))\n+         then\n+            Current_Subprogram_Body_Is_Not_In_ALFA;\n+         end if;\n       end if;\n    end Analyze_Identifier;\n "}, {"sha": "0f585a8d09852204565e3b6a9fabdffe47b207cd", "filename": "gcc/ada/sem_ch3.adb", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/975c689678295f3c614f55a84a62c49bdd866a6a/gcc%2Fada%2Fsem_ch3.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/975c689678295f3c614f55a84a62c49bdd866a6a/gcc%2Fada%2Fsem_ch3.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch3.adb?ref=975c689678295f3c614f55a84a62c49bdd866a6a", "patch": "@@ -3030,10 +3030,13 @@ package body Sem_Ch3 is\n \n       Act_T := T;\n \n-      --  The object is in ALFA if-and-only-if its type is in ALFA\n+      --  The object is in ALFA if-and-only-if its type is in ALFA and it is\n+      --  not aliased.\n \n-      if Is_In_ALFA (T) then\n+      if Is_In_ALFA (T) and then not Aliased_Present (N) then\n          Set_Is_In_ALFA (Id);\n+      else\n+         Current_Subprogram_Body_Is_Not_In_ALFA;\n       end if;\n \n       --  These checks should be performed before the initialization expression"}, {"sha": "7fd0d9b04dfa8246f8d6a37c3e254557b93f5662", "filename": "gcc/ada/sem_ch4.adb", "status": "modified", "additions": 28, "deletions": 0, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/975c689678295f3c614f55a84a62c49bdd866a6a/gcc%2Fada%2Fsem_ch4.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/975c689678295f3c614f55a84a62c49bdd866a6a/gcc%2Fada%2Fsem_ch4.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch4.adb?ref=975c689678295f3c614f55a84a62c49bdd866a6a", "patch": "@@ -350,6 +350,8 @@ package body Sem_Ch4 is\n \n    procedure Analyze_Aggregate (N : Node_Id) is\n    begin\n+      Current_Subprogram_Body_Is_Not_In_ALFA;\n+\n       if No (Etype (N)) then\n          Set_Etype (N, Any_Composite);\n       end if;\n@@ -369,6 +371,7 @@ package body Sem_Ch4 is\n       C        : Node_Id;\n \n    begin\n+      Current_Subprogram_Body_Is_Not_In_ALFA;\n       Check_SPARK_Restriction (\"allocator is not allowed\", N);\n \n       --  Deal with allocator restrictions\n@@ -982,6 +985,15 @@ package body Sem_Ch4 is\n             return;\n          end if;\n \n+         --  If this is an indirect call, or the subprogram called is not in\n+         --  ALFA, then the call is not in ALFA.\n+\n+         if not Is_Subprogram (Nam_Ent)\n+           or else not Is_In_ALFA (Nam_Ent)\n+         then\n+            Current_Subprogram_Body_Is_Not_In_ALFA;\n+         end if;\n+\n          Analyze_One_Call (N, Nam_Ent, True, Success);\n \n          --  If this is an indirect call, the return type of the access_to\n@@ -1358,6 +1370,8 @@ package body Sem_Ch4 is\n       L  : Node_Id;\n \n    begin\n+      Current_Subprogram_Body_Is_Not_In_ALFA;\n+\n       Candidate_Type := Empty;\n \n       --  The following code is equivalent to:\n@@ -1506,6 +1520,7 @@ package body Sem_Ch4 is\n          return;\n       end if;\n \n+      Current_Subprogram_Body_Is_Not_In_ALFA;\n       Check_SPARK_Restriction (\"conditional expression is not allowed\", N);\n \n       Else_Expr := Next (Then_Expr);\n@@ -1706,6 +1721,7 @@ package body Sem_Ch4 is\n    --  Start of processing for Analyze_Explicit_Dereference\n \n    begin\n+      Current_Subprogram_Body_Is_Not_In_ALFA;\n       Check_SPARK_Restriction (\"explicit dereference is not allowed\", N);\n \n       Analyze (P);\n@@ -2467,6 +2483,8 @@ package body Sem_Ch4 is\n    --  Start of processing for Analyze_Membership_Op\n \n    begin\n+      Current_Subprogram_Body_Is_Not_In_ALFA;\n+\n       Analyze_Expression (L);\n \n       if No (R)\n@@ -2588,6 +2606,7 @@ package body Sem_Ch4 is\n \n    procedure Analyze_Null (N : Node_Id) is\n    begin\n+      Current_Subprogram_Body_Is_Not_In_ALFA;\n       Check_SPARK_Restriction (\"null is not allowed\", N);\n \n       Set_Etype (N, Any_Access);\n@@ -3216,6 +3235,8 @@ package body Sem_Ch4 is\n       T    : Entity_Id;\n \n    begin\n+      Current_Subprogram_Body_Is_Not_In_ALFA;\n+\n       Analyze_Expression (Expr);\n \n       Set_Etype (N, Any_Type);\n@@ -3274,6 +3295,7 @@ package body Sem_Ch4 is\n       Iterator : Node_Id;\n \n    begin\n+      Current_Subprogram_Body_Is_Not_In_ALFA;\n       Check_SPARK_Restriction (\"quantified expression is not allowed\", N);\n \n       Set_Etype  (Ent,  Standard_Void_Type);\n@@ -3439,6 +3461,8 @@ package body Sem_Ch4 is\n       Acc_Type : Entity_Id;\n \n    begin\n+      Current_Subprogram_Body_Is_Not_In_ALFA;\n+\n       Analyze (P);\n \n       --  An interesting error check, if we take the 'Reference of an object\n@@ -4302,6 +4326,7 @@ package body Sem_Ch4 is\n    --  Start of processing for Analyze_Slice\n \n    begin\n+      Current_Subprogram_Body_Is_Not_In_ALFA;\n       Check_SPARK_Restriction (\"slice is not allowed\", N);\n \n       Analyze (P);\n@@ -4346,6 +4371,8 @@ package body Sem_Ch4 is\n       T    : Entity_Id;\n \n    begin\n+      Current_Subprogram_Body_Is_Not_In_ALFA;\n+\n       --  If Conversion_OK is set, then the Etype is already set, and the\n       --  only processing required is to analyze the expression. This is\n       --  used to construct certain \"illegal\" conversions which are not\n@@ -4476,6 +4503,7 @@ package body Sem_Ch4 is\n \n    procedure Analyze_Unchecked_Type_Conversion (N : Node_Id) is\n    begin\n+      Current_Subprogram_Body_Is_Not_In_ALFA;\n       Find_Type (Subtype_Mark (N));\n       Analyze_Expression (Expression (N));\n       Set_Etype (N, Entity (Subtype_Mark (N)));"}, {"sha": "d0d34431855536024df49d2592c12079fdfc0373", "filename": "gcc/ada/sem_ch5.adb", "status": "modified", "additions": 10, "deletions": 2, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/975c689678295f3c614f55a84a62c49bdd866a6a/gcc%2Fada%2Fsem_ch5.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/975c689678295f3c614f55a84a62c49bdd866a6a/gcc%2Fada%2Fsem_ch5.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch5.adb?ref=975c689678295f3c614f55a84a62c49bdd866a6a", "patch": "@@ -815,7 +815,7 @@ package body Sem_Ch5 is\n       HSS   : constant Node_Id := Handled_Statement_Sequence (N);\n \n    begin\n-      --  In formal mode, we reject block statements. Note that the case of\n+      --  In SPARK mode, we reject block statements. Note that the case of\n       --  block statements generated by the expander is fine.\n \n       if Nkind (Original_Node (N)) = N_Block_Statement then\n@@ -1113,6 +1113,7 @@ package body Sem_Ch5 is\n       if Others_Present\n         and then List_Length (Alternatives (N)) = 1\n       then\n+         Current_Subprogram_Body_Is_Not_In_ALFA;\n          Check_SPARK_Restriction\n            (\"OTHERS as unique case alternative is not allowed\", N);\n       end if;\n@@ -1194,6 +1195,7 @@ package body Sem_Ch5 is\n \n          else\n             if Has_Loop_In_Inner_Open_Scopes (U_Name) then\n+               Current_Subprogram_Body_Is_Not_In_ALFA;\n                Check_SPARK_Restriction\n                  (\"exit label must name the closest enclosing loop\", N);\n             end if;\n@@ -1235,17 +1237,19 @@ package body Sem_Ch5 is\n          Check_Unset_Reference (Cond);\n       end if;\n \n-      --  In formal mode, verify that the exit statement respects the SPARK\n+      --  In SPARK mode, verify that the exit statement respects the SPARK\n       --  restrictions.\n \n       if Present (Cond) then\n          if Nkind (Parent (N)) /= N_Loop_Statement then\n+            Current_Subprogram_Body_Is_Not_In_ALFA;\n             Check_SPARK_Restriction\n               (\"exit with when clause must be directly in loop\", N);\n          end if;\n \n       else\n          if Nkind (Parent (N)) /= N_If_Statement then\n+            Current_Subprogram_Body_Is_Not_In_ALFA;\n             if Nkind (Parent (N)) = N_Elsif_Part then\n                Check_SPARK_Restriction\n                  (\"exit must be in IF without ELSIF\", N);\n@@ -1254,19 +1258,22 @@ package body Sem_Ch5 is\n             end if;\n \n          elsif Nkind (Parent (Parent (N))) /= N_Loop_Statement then\n+            Current_Subprogram_Body_Is_Not_In_ALFA;\n             Check_SPARK_Restriction\n               (\"exit must be in IF directly in loop\", N);\n \n             --  First test the presence of ELSE, so that an exit in an ELSE\n             --  leads to an error mentioning the ELSE.\n \n          elsif Present (Else_Statements (Parent (N))) then\n+            Current_Subprogram_Body_Is_Not_In_ALFA;\n             Check_SPARK_Restriction (\"exit must be in IF without ELSE\", N);\n \n             --  An exit in an ELSIF does not reach here, as it would have been\n             --  detected in the case (Nkind (Parent (N)) /= N_If_Statement).\n \n          elsif Present (Elsif_Parts (Parent (N))) then\n+            Current_Subprogram_Body_Is_Not_In_ALFA;\n             Check_SPARK_Restriction (\"exit must be in IF without ELSIF\", N);\n          end if;\n       end if;\n@@ -1295,6 +1302,7 @@ package body Sem_Ch5 is\n       Label_Ent   : Entity_Id;\n \n    begin\n+      Current_Subprogram_Body_Is_Not_In_ALFA;\n       Check_SPARK_Restriction (\"goto statement is not allowed\", N);\n \n       --  Actual semantic checks"}, {"sha": "1c0a3d96393629fecd6ce7bc0d44b28d3145b1a8", "filename": "gcc/ada/sem_ch6.adb", "status": "modified", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/975c689678295f3c614f55a84a62c49bdd866a6a/gcc%2Fada%2Fsem_ch6.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/975c689678295f3c614f55a84a62c49bdd866a6a/gcc%2Fada%2Fsem_ch6.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch6.adb?ref=975c689678295f3c614f55a84a62c49bdd866a6a", "patch": "@@ -638,11 +638,13 @@ package body Sem_Ch6 is\n              (Nkind (Parent (Parent (N))) /= N_Subprogram_Body\n                or else Present (Next (N)))\n          then\n+            Current_Subprogram_Body_Is_Not_In_ALFA;\n             Check_SPARK_Restriction\n               (\"RETURN should be the last statement in function\", N);\n          end if;\n \n       else\n+         Current_Subprogram_Body_Is_Not_In_ALFA;\n          Check_SPARK_Restriction (\"extended RETURN is not allowed\", N);\n \n          --  Analyze parts specific to extended_return_statement:\n@@ -1909,6 +1911,7 @@ package body Sem_Ch6 is\n                  and then not Nkind_In (Stat, N_Simple_Return_Statement,\n                                               N_Extended_Return_Statement)\n                then\n+                  Set_Body_Is_In_ALFA (Id, False);\n                   Check_SPARK_Restriction\n                     (\"last statement in function should be RETURN\", Stat);\n                end if;\n@@ -1927,6 +1930,7 @@ package body Sem_Ch6 is\n             --  borrow the Check_Returns procedure here ???\n \n             if Return_Present (Id) then\n+               Set_Body_Is_In_ALFA (Id, False);\n                Check_SPARK_Restriction\n                  (\"procedure should not have RETURN\", N);\n             end if;\n@@ -2236,6 +2240,24 @@ package body Sem_Ch6 is\n          end if;\n       end if;\n \n+      --  By default, consider that the subprogram body is in ALFA if the spec\n+      --  is in ALFA. This is reversed later if some expression or statement is\n+      --  not in ALFA.\n+\n+      declare\n+         Id : Entity_Id;\n+      begin\n+         if Present (Spec_Id) then\n+            Id := Spec_Id;\n+         else\n+            Id := Body_Id;\n+         end if;\n+\n+         if Is_In_ALFA (Id) then\n+            Set_Body_Is_In_ALFA (Id);\n+         end if;\n+      end;\n+\n       --  Do not inline any subprogram that contains nested subprograms, since\n       --  the backend inlining circuit seems to generate uninitialized\n       --  references in this case. We know this happens in the case of front\n@@ -2467,6 +2489,7 @@ package body Sem_Ch6 is\n          Set_Ekind (Body_Id, E_Subprogram_Body);\n          Set_Scope (Body_Id, Scope (Spec_Id));\n          Set_Is_Obsolescent (Body_Id, Is_Obsolescent (Spec_Id));\n+         Set_Is_In_ALFA (Body_Id, False);\n \n       --  Case of subprogram body with no previous spec\n "}, {"sha": "474f39c830e02bb80964d1233a4b089c1ed4e24e", "filename": "gcc/ada/sem_ch7.adb", "status": "modified", "additions": 3, "deletions": 4, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/975c689678295f3c614f55a84a62c49bdd866a6a/gcc%2Fada%2Fsem_ch7.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/975c689678295f3c614f55a84a62c49bdd866a6a/gcc%2Fada%2Fsem_ch7.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch7.adb?ref=975c689678295f3c614f55a84a62c49bdd866a6a", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2010, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2011, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -875,9 +875,8 @@ package body Sem_Ch7 is\n       --  package.\n \n       procedure Check_One_Tagged_Type_Or_Extension_At_Most;\n-      --  Issue an error in formal mode if a package specification contains\n-      --  more than one tagged type or type extension. This is a restriction of\n-      --  SPARK.\n+      --  Issue an error in SPARK mode if a package specification contains\n+      --  more than one tagged type or type extension.\n \n       procedure Clear_Constants (Id : Entity_Id; FE : Entity_Id);\n       --  Clears constant indications (Never_Set_In_Source, Constant_Value, and"}, {"sha": "4392949dcbb3708a4d67f6081e85f9fb1764c2c8", "filename": "gcc/ada/sem_ch9.adb", "status": "modified", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/975c689678295f3c614f55a84a62c49bdd866a6a/gcc%2Fada%2Fsem_ch9.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/975c689678295f3c614f55a84a62c49bdd866a6a/gcc%2Fada%2Fsem_ch9.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch9.adb?ref=975c689678295f3c614f55a84a62c49bdd866a6a", "patch": "@@ -101,6 +101,7 @@ package body Sem_Ch9 is\n \n    begin\n       Tasking_Used := True;\n+      Current_Subprogram_Body_Is_Not_In_ALFA;\n       Check_SPARK_Restriction (\"abort statement is not allowed\", N);\n \n       T_Name := First (Names (N));\n@@ -139,6 +140,7 @@ package body Sem_Ch9 is\n    procedure Analyze_Accept_Alternative (N : Node_Id) is\n    begin\n       Tasking_Used := True;\n+      Current_Subprogram_Body_Is_Not_In_ALFA;\n \n       if Present (Pragmas_Before (N)) then\n          Analyze_List (Pragmas_Before (N));\n@@ -172,6 +174,7 @@ package body Sem_Ch9 is\n \n    begin\n       Tasking_Used := True;\n+      Current_Subprogram_Body_Is_Not_In_ALFA;\n       Check_SPARK_Restriction (\"accept statement is not allowed\", N);\n \n       --  Entry name is initialized to Any_Id. It should get reset to the\n@@ -403,6 +406,7 @@ package body Sem_Ch9 is\n \n    begin\n       Tasking_Used := True;\n+      Current_Subprogram_Body_Is_Not_In_ALFA;\n       Check_SPARK_Restriction (\"select statement is not allowed\", N);\n       Check_Restriction (Max_Asynchronous_Select_Nesting, N);\n       Check_Restriction (No_Select_Statements, N);\n@@ -449,6 +453,7 @@ package body Sem_Ch9 is\n \n    begin\n       Tasking_Used := True;\n+      Current_Subprogram_Body_Is_Not_In_ALFA;\n       Check_SPARK_Restriction (\"select statement is not allowed\", N);\n       Check_Restriction (No_Select_Statements, N);\n \n@@ -495,6 +500,7 @@ package body Sem_Ch9 is\n \n    begin\n       Tasking_Used := True;\n+      Current_Subprogram_Body_Is_Not_In_ALFA;\n       Check_Restriction (No_Delay, N);\n \n       if Present (Pragmas_Before (N)) then\n@@ -546,6 +552,7 @@ package body Sem_Ch9 is\n       E : constant Node_Id := Expression (N);\n    begin\n       Tasking_Used := True;\n+      Current_Subprogram_Body_Is_Not_In_ALFA;\n       Check_SPARK_Restriction (\"delay statement is not allowed\", N);\n       Check_Restriction (No_Relative_Delay, N);\n       Check_Restriction (No_Delay, N);\n@@ -564,6 +571,7 @@ package body Sem_Ch9 is\n \n    begin\n       Tasking_Used := True;\n+      Current_Subprogram_Body_Is_Not_In_ALFA;\n       Check_SPARK_Restriction (\"delay statement is not allowed\", N);\n       Check_Restriction (No_Delay, N);\n       Check_Potentially_Blocking_Operation (N);\n@@ -592,6 +600,7 @@ package body Sem_Ch9 is\n \n    begin\n       Tasking_Used := True;\n+      Current_Subprogram_Body_Is_Not_In_ALFA;\n \n       --  Entry_Name is initialized to Any_Id. It should get reset to the\n       --  matching entry entity. An error is signalled if it is not reset\n@@ -824,6 +833,7 @@ package body Sem_Ch9 is\n \n    begin\n       Tasking_Used := True;\n+      Current_Subprogram_Body_Is_Not_In_ALFA;\n \n       if Present (Index) then\n          Analyze (Index);\n@@ -851,6 +861,7 @@ package body Sem_Ch9 is\n \n    begin\n       Tasking_Used := True;\n+      Current_Subprogram_Body_Is_Not_In_ALFA;\n       Check_SPARK_Restriction (\"entry call is not allowed\", N);\n \n       if Present (Pragmas_Before (N)) then\n@@ -886,6 +897,7 @@ package body Sem_Ch9 is\n    begin\n       Generate_Definition (Def_Id);\n       Tasking_Used := True;\n+      Current_Subprogram_Body_Is_Not_In_ALFA;\n \n       --  Case of no discrete subtype definition\n \n@@ -955,6 +967,7 @@ package body Sem_Ch9 is\n \n    begin\n       Tasking_Used := True;\n+      Current_Subprogram_Body_Is_Not_In_ALFA;\n       Analyze (Def);\n \n       --  There is no elaboration of the entry index specification. Therefore,\n@@ -996,6 +1009,7 @@ package body Sem_Ch9 is\n \n    begin\n       Tasking_Used := True;\n+      Current_Subprogram_Body_Is_Not_In_ALFA;\n       Set_Ekind (Body_Id, E_Protected_Body);\n       Spec_Id := Find_Concurrent_Spec (Body_Id);\n \n@@ -1114,6 +1128,7 @@ package body Sem_Ch9 is\n \n    begin\n       Tasking_Used := True;\n+      Current_Subprogram_Body_Is_Not_In_ALFA;\n       Check_SPARK_Restriction (\"protected definition is not allowed\", N);\n       Analyze_Declarations (Visible_Declarations (N));\n \n@@ -1167,6 +1182,7 @@ package body Sem_Ch9 is\n       end if;\n \n       Tasking_Used := True;\n+      Current_Subprogram_Body_Is_Not_In_ALFA;\n       Check_Restriction (No_Protected_Types, N);\n \n       T := Find_Type_Name (N);\n@@ -1308,6 +1324,7 @@ package body Sem_Ch9 is\n \n    begin\n       Tasking_Used := True;\n+      Current_Subprogram_Body_Is_Not_In_ALFA;\n       Check_SPARK_Restriction (\"requeue statement is not allowed\", N);\n       Check_Restriction (No_Requeue_Statements, N);\n       Check_Unreachable_Code (N);\n@@ -1582,6 +1599,7 @@ package body Sem_Ch9 is\n \n    begin\n       Tasking_Used := True;\n+      Current_Subprogram_Body_Is_Not_In_ALFA;\n       Check_SPARK_Restriction (\"select statement is not allowed\", N);\n       Check_Restriction (No_Select_Statements, N);\n \n@@ -1702,6 +1720,7 @@ package body Sem_Ch9 is\n    begin\n       Generate_Definition (Id);\n       Tasking_Used := True;\n+      Current_Subprogram_Body_Is_Not_In_ALFA;\n \n       --  The node is rewritten as a protected type declaration, in exact\n       --  analogy with what is done with single tasks.\n@@ -1763,6 +1782,7 @@ package body Sem_Ch9 is\n    begin\n       Generate_Definition (Id);\n       Tasking_Used := True;\n+      Current_Subprogram_Body_Is_Not_In_ALFA;\n \n       --  The node is rewritten as a task type declaration, followed by an\n       --  object declaration of that anonymous task type.\n@@ -1840,6 +1860,7 @@ package body Sem_Ch9 is\n \n    begin\n       Tasking_Used := True;\n+      Current_Subprogram_Body_Is_Not_In_ALFA;\n       Set_Ekind (Body_Id, E_Task_Body);\n       Set_Scope (Body_Id, Current_Scope);\n       Spec_Id := Find_Concurrent_Spec (Body_Id);\n@@ -1960,6 +1981,7 @@ package body Sem_Ch9 is\n \n    begin\n       Tasking_Used := True;\n+      Current_Subprogram_Body_Is_Not_In_ALFA;\n       Check_SPARK_Restriction (\"task definition is not allowed\", N);\n \n       if Present (Visible_Declarations (N)) then\n@@ -1994,6 +2016,7 @@ package body Sem_Ch9 is\n    begin\n       Check_Restriction (No_Tasking, N);\n       Tasking_Used := True;\n+      Current_Subprogram_Body_Is_Not_In_ALFA;\n       T := Find_Type_Name (N);\n       Generate_Definition (T);\n \n@@ -2099,6 +2122,7 @@ package body Sem_Ch9 is\n    procedure Analyze_Terminate_Alternative (N : Node_Id) is\n    begin\n       Tasking_Used := True;\n+      Current_Subprogram_Body_Is_Not_In_ALFA;\n \n       if Present (Pragmas_Before (N)) then\n          Analyze_List (Pragmas_Before (N));\n@@ -2120,6 +2144,7 @@ package body Sem_Ch9 is\n \n    begin\n       Tasking_Used := True;\n+      Current_Subprogram_Body_Is_Not_In_ALFA;\n       Check_SPARK_Restriction (\"select statement is not allowed\", N);\n       Check_Restriction (No_Select_Statements, N);\n \n@@ -2156,6 +2181,7 @@ package body Sem_Ch9 is\n \n    begin\n       Tasking_Used := True;\n+      Current_Subprogram_Body_Is_Not_In_ALFA;\n \n       if Present (Pragmas_Before (N)) then\n          Analyze_List (Pragmas_Before (N));"}, {"sha": "6ff32af98cc1c72361ce95764cbd150d85a339d7", "filename": "gcc/ada/sem_res.adb", "status": "modified", "additions": 25, "deletions": 14, "changes": 39, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/975c689678295f3c614f55a84a62c49bdd866a6a/gcc%2Fada%2Fsem_res.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/975c689678295f3c614f55a84a62c49bdd866a6a/gcc%2Fada%2Fsem_res.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_res.adb?ref=975c689678295f3c614f55a84a62c49bdd866a6a", "patch": "@@ -5964,13 +5964,19 @@ package body Sem_Res is\n       --  types or array types except String.\n \n       if Is_Boolean_Type (T) then\n+         Current_Subprogram_Body_Is_Not_In_ALFA;\n          Check_SPARK_Restriction\n            (\"comparison is not defined on Boolean type\", N);\n-      elsif Is_Array_Type (T)\n-        and then Base_Type (T) /= Standard_String\n-      then\n-         Check_SPARK_Restriction\n-           (\"comparison is not defined on array types other than String\", N);\n+\n+      elsif Is_Array_Type (T) then\n+         Current_Subprogram_Body_Is_Not_In_ALFA;\n+\n+         if Base_Type (T) /= Standard_String then\n+            Check_SPARK_Restriction\n+              (\"comparison is not defined on array types other than String\",\n+               N);\n+         end if;\n+\n       else\n          null;\n       end if;\n@@ -6821,15 +6827,18 @@ package body Sem_Res is\n          --  String are only defined when, for each index position, the\n          --  operands have equal static bounds.\n \n-         if Is_Array_Type (T)\n-           and then Base_Type (T) /= Standard_String\n-           and then Base_Type (Etype (L)) = Base_Type (Etype (R))\n-           and then Etype (L) /= Any_Composite  --  or else L in error\n-           and then Etype (R) /= Any_Composite  --  or else R in error\n-           and then not Matching_Static_Array_Bounds (Etype (L), Etype (R))\n-         then\n-            Check_SPARK_Restriction\n-              (\"array types should have matching static bounds\", N);\n+         if Is_Array_Type (T) then\n+            Current_Subprogram_Body_Is_Not_In_ALFA;\n+\n+            if Base_Type (T) /= Standard_String\n+              and then Base_Type (Etype (L)) = Base_Type (Etype (R))\n+              and then Etype (L) /= Any_Composite  --  or else L in error\n+              and then Etype (R) /= Any_Composite  --  or else R in error\n+              and then not Matching_Static_Array_Bounds (Etype (L), Etype (R))\n+            then\n+               Check_SPARK_Restriction\n+                 (\"array types should have matching static bounds\", N);\n+            end if;\n          end if;\n \n          --  If the unique type is a class-wide type then it will be expanded\n@@ -7365,6 +7374,8 @@ package body Sem_Res is\n       if Is_Array_Type (B_Typ)\n         and then Nkind (N) in N_Binary_Op\n       then\n+         Current_Subprogram_Body_Is_Not_In_ALFA;\n+\n          declare\n             Left_Typ  : constant Node_Id := Etype (Left_Opnd (N));\n             Right_Typ : constant Node_Id := Etype (Right_Opnd (N));"}, {"sha": "a0a0e28397b5b72cdaee72ede400de1f80450244", "filename": "gcc/ada/sem_util.adb", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/975c689678295f3c614f55a84a62c49bdd866a6a/gcc%2Fada%2Fsem_util.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/975c689678295f3c614f55a84a62c49bdd866a6a/gcc%2Fada%2Fsem_util.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_util.adb?ref=975c689678295f3c614f55a84a62c49bdd866a6a", "patch": "@@ -2311,6 +2311,21 @@ package body Sem_Util is\n       end if;\n    end Current_Subprogram;\n \n+   --------------------------------------------\n+   -- Current_Subprogram_Body_Is_Not_In_ALFA --\n+   --------------------------------------------\n+\n+   procedure Current_Subprogram_Body_Is_Not_In_ALFA is\n+      Cur_Subp : constant Entity_Id := Current_Subprogram;\n+   begin\n+      if Present (Cur_Subp)\n+        and then (Is_Subprogram (Cur_Subp)\n+                   or else Is_Generic_Subprogram (Cur_Subp))\n+      then\n+         Set_Body_Is_In_ALFA (Cur_Subp, False);\n+      end if;\n+   end Current_Subprogram_Body_Is_Not_In_ALFA;\n+\n    ---------------------\n    -- Defining_Entity --\n    ---------------------"}, {"sha": "9fcd6c1dcffe432cca1c1abeec19326f2af9d728", "filename": "gcc/ada/sem_util.ads", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/975c689678295f3c614f55a84a62c49bdd866a6a/gcc%2Fada%2Fsem_util.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/975c689678295f3c614f55a84a62c49bdd866a6a/gcc%2Fada%2Fsem_util.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_util.ads?ref=975c689678295f3c614f55a84a62c49bdd866a6a", "patch": "@@ -277,6 +277,10 @@ package Sem_Util is\n    --  Current_Scope is returned. The returned value is Empty if this is called\n    --  from a library package which is not within any subprogram.\n \n+   procedure Current_Subprogram_Body_Is_Not_In_ALFA;\n+   --  If Current_Subprogram is not Empty, set its flag Body_Is_In_ALFA to\n+   --  False, otherwise do nothing.\n+\n    function Defining_Entity (N : Node_Id) return Entity_Id;\n    --  Given a declaration N, returns the associated defining entity. If the\n    --  declaration has a specification, the entity is obtained from the"}]}