{"sha": "14e335edc8c5c2cd18779e4e242a3d81037b8b43", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTRlMzM1ZWRjOGM1YzJjZDE4Nzc5ZTRlMjQyYTNkODEwMzdiOGI0Mw==", "commit": {"author": {"name": "Igor Tsimbalist", "email": "igor.v.tsimbalist@intel.com", "date": "2018-02-19T16:25:49Z"}, "committer": {"name": "Igor Tsimbalist", "email": "itsimbal@gcc.gnu.org", "date": "2018-02-19T16:25:49Z"}, "message": "CET shouldn't be enabled in 32-bit run-time libraries by defualt\n\nENDBR32 and RDSSPD are multi-byte NOPs on x86-64 processors and\nnewer x86 processors, starting Pentium Pro.  They are UD on older\n32-bit processors. Detect this at configure time and adjust the\ndefault value for enable_cet. GCC will enable CET in 32-bit run-time\nlibraries in any case if --enable-cet is used to configure GCC.\n\n\tPR target/84148\n\t* config/cet.m4: Check if target support multi-byte NOPS (SSE).\n\t* libatomic/configure: Regenerate.\n\t* libbacktrace/configure: Likewise.\n\t* libgcc/configure: Likewise.\n\t* libgfortran/configure: Likewise.\n\t* libgomp/configure: Likewise.\n\t* libitm/configure: Likewise.\n\t* libmpx/configure: Likewise.\n\t* libobjc/configure: Likewise.\n\t* libquadmath/configure: Likewise.\n\t* libsanitizer/configure: Likewise.\n\t* libssp/configure: Likewise.\n\t* libstdc++-v3/configure: Likewise.\n\t* libvtv/configure: Likewise.\n\nFrom-SVN: r257809", "tree": {"sha": "5439816d0ec4a7a72c403e59851b0b78e2d23c88", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5439816d0ec4a7a72c403e59851b0b78e2d23c88"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/14e335edc8c5c2cd18779e4e242a3d81037b8b43", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/14e335edc8c5c2cd18779e4e242a3d81037b8b43", "html_url": "https://github.com/Rust-GCC/gccrs/commit/14e335edc8c5c2cd18779e4e242a3d81037b8b43", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/14e335edc8c5c2cd18779e4e242a3d81037b8b43/comments", "author": {"login": "itsimbal", "id": 29258612, "node_id": "MDQ6VXNlcjI5MjU4NjEy", "avatar_url": "https://avatars.githubusercontent.com/u/29258612?v=4", "gravatar_id": "", "url": "https://api.github.com/users/itsimbal", "html_url": "https://github.com/itsimbal", "followers_url": "https://api.github.com/users/itsimbal/followers", "following_url": "https://api.github.com/users/itsimbal/following{/other_user}", "gists_url": "https://api.github.com/users/itsimbal/gists{/gist_id}", "starred_url": "https://api.github.com/users/itsimbal/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/itsimbal/subscriptions", "organizations_url": "https://api.github.com/users/itsimbal/orgs", "repos_url": "https://api.github.com/users/itsimbal/repos", "events_url": "https://api.github.com/users/itsimbal/events{/privacy}", "received_events_url": "https://api.github.com/users/itsimbal/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "65e3761d451229338a22226e154cb7d0bed5fcd1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/65e3761d451229338a22226e154cb7d0bed5fcd1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/65e3761d451229338a22226e154cb7d0bed5fcd1"}], "stats": {"total": 323, "additions": 300, "deletions": 23}, "files": [{"sha": "746a0a01ba02b5ec854c224304d7ccf33169740a", "filename": "config/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/14e335edc8c5c2cd18779e4e242a3d81037b8b43/config%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/14e335edc8c5c2cd18779e4e242a3d81037b8b43/config%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/config%2FChangeLog?ref=14e335edc8c5c2cd18779e4e242a3d81037b8b43", "patch": "@@ -1,3 +1,8 @@\n+2018-02-14  Igor Tsimbalist  <igor.v.tsimbalist@intel.com>\n+\n+\tPR target/84148\n+\t* cet.m4: Check if target support multi-byte NOPS (SSE).\n+\n 2018-02-06  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* gcc-plugin.m4 (GCC_ENABLE_PLUGINS): Remove -q option passed to grep."}, {"sha": "23dd1f7d27d3a82eb1a85518d8ef316226918c8c", "filename": "config/cet.m4", "status": "modified", "additions": 14, "deletions": 2, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/14e335edc8c5c2cd18779e4e242a3d81037b8b43/config%2Fcet.m4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/14e335edc8c5c2cd18779e4e242a3d81037b8b43/config%2Fcet.m4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/config%2Fcet.m4?ref=14e335edc8c5c2cd18779e4e242a3d81037b8b43", "patch": "@@ -5,15 +5,24 @@ dnl\n AC_DEFUN([GCC_CET_FLAGS],[dnl\n GCC_ENABLE(cet, default, ,[enable Intel CET in target libraries],\n \t   permit yes|no|default)\n+AC_MSG_CHECKING([for CET support])\n+\n case \"$host\" in\n   i[[34567]]86-*-linux* | x86_64-*-linux*)\n     case \"$enable_cet\" in\n       default)\n-\t# Check if assembler supports CET.\n+\t# Check if target supports multi-byte NOPs\n+\t# and if assembler supports CET insn.\n \tAC_COMPILE_IFELSE(\n \t [AC_LANG_PROGRAM(\n \t  [],\n-\t  [asm (\"setssbsy\");])],\n+\t  [\n+#if !defined(__SSE2__)\n+#error target does not support multi-byte NOPs\n+#else\n+asm (\"setssbsy\");\n+#endif\n+\t  ])],\n \t [enable_cet=yes],\n \t [enable_cet=no])\n \t;;\n@@ -34,5 +43,8 @@ case \"$host\" in\n esac\n if test x$enable_cet = xyes; then\n   $1=\"-fcf-protection -mcet\"\n+  AC_MSG_RESULT([yes])\n+else\n+  AC_MSG_RESULT([no])\n fi\n ])"}, {"sha": "231270776a73a5d702a7f446b1eb3b0700a37226", "filename": "libatomic/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/14e335edc8c5c2cd18779e4e242a3d81037b8b43/libatomic%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/14e335edc8c5c2cd18779e4e242a3d81037b8b43/libatomic%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libatomic%2FChangeLog?ref=14e335edc8c5c2cd18779e4e242a3d81037b8b43", "patch": "@@ -1,3 +1,8 @@\n+2018-02-14  Igor Tsimbalist  <igor.v.tsimbalist@intel.com>\n+\n+\tPR target/84148\n+\t* configure: Regenerate.\n+\n 2018-01-03  Jakub Jelinek  <jakub@redhat.com>\n \n \tUpdate copyright years."}, {"sha": "9445aee12918447ac2dbc2b71d9592a83d2af976", "filename": "libatomic/configure", "status": "modified", "additions": 16, "deletions": 1, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/14e335edc8c5c2cd18779e4e242a3d81037b8b43/libatomic%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/14e335edc8c5c2cd18779e4e242a3d81037b8b43/libatomic%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libatomic%2Fconfigure?ref=14e335edc8c5c2cd18779e4e242a3d81037b8b43", "patch": "@@ -15314,18 +15314,28 @@ else\n fi\n \n \n+{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking for CET support\" >&5\n+$as_echo_n \"checking for CET support... \" >&6; }\n+\n case \"$host\" in\n   i[34567]86-*-linux* | x86_64-*-linux*)\n     case \"$enable_cet\" in\n       default)\n-\t# Check if assembler supports CET.\n+\t# Check if target supports multi-byte NOPs\n+\t# and if assembler supports CET insn.\n \tcat confdefs.h - <<_ACEOF >conftest.$ac_ext\n /* end confdefs.h.  */\n \n int\n main ()\n {\n+\n+#if !defined(__SSE2__)\n+#error target does not support multi-byte NOPs\n+#else\n asm (\"setssbsy\");\n+#endif\n+\n   ;\n   return 0;\n }\n@@ -15365,6 +15375,11 @@ rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext\n esac\n if test x$enable_cet = xyes; then\n   CET_FLAGS=\"-fcf-protection -mcet\"\n+  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: yes\" >&5\n+$as_echo \"yes\" >&6; }\n+else\n+  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: no\" >&5\n+$as_echo \"no\" >&6; }\n fi\n \n XCFLAGS=\"$XCFLAGS $CET_FLAGS\""}, {"sha": "64733a82ca23172c66d6c5e0137ae548f78ea8df", "filename": "libbacktrace/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/14e335edc8c5c2cd18779e4e242a3d81037b8b43/libbacktrace%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/14e335edc8c5c2cd18779e4e242a3d81037b8b43/libbacktrace%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libbacktrace%2FChangeLog?ref=14e335edc8c5c2cd18779e4e242a3d81037b8b43", "patch": "@@ -1,3 +1,8 @@\n+2018-02-14  Igor Tsimbalist  <igor.v.tsimbalist@intel.com>\n+\n+\tPR target/84148\n+\t* configure: Regenerate.\n+\n 2018-02-15  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR other/82368"}, {"sha": "77c6fe34d1ec17ba427774969a3b0b38587e3a0d", "filename": "libbacktrace/configure", "status": "modified", "additions": 16, "deletions": 1, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/14e335edc8c5c2cd18779e4e242a3d81037b8b43/libbacktrace%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/14e335edc8c5c2cd18779e4e242a3d81037b8b43/libbacktrace%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libbacktrace%2Fconfigure?ref=14e335edc8c5c2cd18779e4e242a3d81037b8b43", "patch": "@@ -11802,18 +11802,28 @@ else\n fi\n \n \n+{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking for CET support\" >&5\n+$as_echo_n \"checking for CET support... \" >&6; }\n+\n case \"$host\" in\n   i[34567]86-*-linux* | x86_64-*-linux*)\n     case \"$enable_cet\" in\n       default)\n-\t# Check if assembler supports CET.\n+\t# Check if target supports multi-byte NOPs\n+\t# and if assembler supports CET insn.\n \tcat confdefs.h - <<_ACEOF >conftest.$ac_ext\n /* end confdefs.h.  */\n \n int\n main ()\n {\n+\n+#if !defined(__SSE2__)\n+#error target does not support multi-byte NOPs\n+#else\n asm (\"setssbsy\");\n+#endif\n+\n   ;\n   return 0;\n }\n@@ -11853,6 +11863,11 @@ rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext\n esac\n if test x$enable_cet = xyes; then\n   CET_FLAGS=\"-fcf-protection -mcet\"\n+  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: yes\" >&5\n+$as_echo \"yes\" >&6; }\n+else\n+  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: no\" >&5\n+$as_echo \"no\" >&6; }\n fi\n \n   EXTRA_FLAGS=\"$EXTRA_FLAGS $CET_FLAGS\""}, {"sha": "5df8d85a8753420af8e3234b34a99810f3aef96b", "filename": "libgcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/14e335edc8c5c2cd18779e4e242a3d81037b8b43/libgcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/14e335edc8c5c2cd18779e4e242a3d81037b8b43/libgcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2FChangeLog?ref=14e335edc8c5c2cd18779e4e242a3d81037b8b43", "patch": "@@ -1,3 +1,8 @@\n+2018-02-14  Igor Tsimbalist  <igor.v.tsimbalist@intel.com>\n+\n+\tPR target/84148\n+\t* configure: Regenerate.\n+\n 2018-02-16  Igor Tsimbalist  <igor.v.tsimbalist@intel.com>\n \n \tPR target/84239"}, {"sha": "3241f19ab673e68ca30787cc336580562c5e96f7", "filename": "libgcc/configure", "status": "modified", "additions": 16, "deletions": 1, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/14e335edc8c5c2cd18779e4e242a3d81037b8b43/libgcc%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/14e335edc8c5c2cd18779e4e242a3d81037b8b43/libgcc%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfigure?ref=14e335edc8c5c2cd18779e4e242a3d81037b8b43", "patch": "@@ -4790,18 +4790,28 @@ else\n fi\n \n \n+{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking for CET support\" >&5\n+$as_echo_n \"checking for CET support... \" >&6; }\n+\n case \"$host\" in\n   i[34567]86-*-linux* | x86_64-*-linux*)\n     case \"$enable_cet\" in\n       default)\n-\t# Check if assembler supports CET.\n+\t# Check if target supports multi-byte NOPs\n+\t# and if assembler supports CET insn.\n \tcat confdefs.h - <<_ACEOF >conftest.$ac_ext\n /* end confdefs.h.  */\n \n int\n main ()\n {\n+\n+#if !defined(__SSE2__)\n+#error target does not support multi-byte NOPs\n+#else\n asm (\"setssbsy\");\n+#endif\n+\n   ;\n   return 0;\n }\n@@ -4841,6 +4851,11 @@ rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext\n esac\n if test x$enable_cet = xyes; then\n   CET_FLAGS=\"-fcf-protection -mcet\"\n+  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: yes\" >&5\n+$as_echo \"yes\" >&6; }\n+else\n+  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: no\" >&5\n+$as_echo \"no\" >&6; }\n fi\n \n "}, {"sha": "c992a6051c11099b53cbe51ec127381b0a777b59", "filename": "libgfortran/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/14e335edc8c5c2cd18779e4e242a3d81037b8b43/libgfortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/14e335edc8c5c2cd18779e4e242a3d81037b8b43/libgfortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2FChangeLog?ref=14e335edc8c5c2cd18779e4e242a3d81037b8b43", "patch": "@@ -1,3 +1,8 @@\n+2018-02-14  Igor Tsimbalist  <igor.v.tsimbalist@intel.com>\n+\n+\tPR target/84148\n+\t* configure: Regenerate.\n+\n 2018-02-18  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n \n \tPR libgfortran/84412"}, {"sha": "86904ef7eeabf620a93855fe0613fd1df3e2d892", "filename": "libgfortran/configure", "status": "modified", "additions": 18, "deletions": 3, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/14e335edc8c5c2cd18779e4e242a3d81037b8b43/libgfortran%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/14e335edc8c5c2cd18779e4e242a3d81037b8b43/libgfortran%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fconfigure?ref=14e335edc8c5c2cd18779e4e242a3d81037b8b43", "patch": "@@ -5804,18 +5804,28 @@ else\n fi\n \n \n+{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking for CET support\" >&5\n+$as_echo_n \"checking for CET support... \" >&6; }\n+\n case \"$host\" in\n   i[34567]86-*-linux* | x86_64-*-linux*)\n     case \"$enable_cet\" in\n       default)\n-\t# Check if assembler supports CET.\n+\t# Check if target supports multi-byte NOPs\n+\t# and if assembler supports CET insn.\n \tcat confdefs.h - <<_ACEOF >conftest.$ac_ext\n /* end confdefs.h.  */\n \n int\n main ()\n {\n+\n+#if !defined(__SSE2__)\n+#error target does not support multi-byte NOPs\n+#else\n asm (\"setssbsy\");\n+#endif\n+\n   ;\n   return 0;\n }\n@@ -5855,6 +5865,11 @@ rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext\n esac\n if test x$enable_cet = xyes; then\n   CET_FLAGS=\"-fcf-protection -mcet\"\n+  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: yes\" >&5\n+$as_echo \"yes\" >&6; }\n+else\n+  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: no\" >&5\n+$as_echo \"no\" >&6; }\n fi\n \n AM_FCFLAGS=\"$AM_FCFLAGS $CET_FLAGS\"\n@@ -12498,7 +12513,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 12501 \"configure\"\n+#line 12516 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -12604,7 +12619,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 12607 \"configure\"\n+#line 12622 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H"}, {"sha": "ccc77006c5ab10e24511e3d231fe7a36c5037ca5", "filename": "libgomp/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/14e335edc8c5c2cd18779e4e242a3d81037b8b43/libgomp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/14e335edc8c5c2cd18779e4e242a3d81037b8b43/libgomp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2FChangeLog?ref=14e335edc8c5c2cd18779e4e242a3d81037b8b43", "patch": "@@ -1,3 +1,8 @@\n+2018-02-19  Igor Tsimbalist  <igor.v.tsimbalist@intel.com>\n+\n+\tPR target/84148\n+\t* configure: Regenerate.\n+\n 2018-02-16  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR fortran/84418"}, {"sha": "92b8142b0b1861577eb5b823353c3874569609e5", "filename": "libgomp/configure", "status": "modified", "additions": 17, "deletions": 2, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/14e335edc8c5c2cd18779e4e242a3d81037b8b43/libgomp%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/14e335edc8c5c2cd18779e4e242a3d81037b8b43/libgomp%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Fconfigure?ref=14e335edc8c5c2cd18779e4e242a3d81037b8b43", "patch": "@@ -15142,7 +15142,7 @@ fi\n \n # Plugins for offload execution, configure.ac fragment.  -*- mode: autoconf -*-\n #\n-# Copyright (C) 2014-2017 Free Software Foundation, Inc.\n+# Copyright (C) 2014-2018 Free Software Foundation, Inc.\n #\n # Contributed by Mentor Embedded.\n #\n@@ -16633,18 +16633,28 @@ else\n fi\n \n \n+{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking for CET support\" >&5\n+$as_echo_n \"checking for CET support... \" >&6; }\n+\n case \"$host\" in\n   i[34567]86-*-linux* | x86_64-*-linux*)\n     case \"$enable_cet\" in\n       default)\n-\t# Check if assembler supports CET.\n+\t# Check if target supports multi-byte NOPs\n+\t# and if assembler supports CET insn.\n \tcat confdefs.h - <<_ACEOF >conftest.$ac_ext\n /* end confdefs.h.  */\n \n int\n main ()\n {\n+\n+#if !defined(__SSE2__)\n+#error target does not support multi-byte NOPs\n+#else\n asm (\"setssbsy\");\n+#endif\n+\n   ;\n   return 0;\n }\n@@ -16684,6 +16694,11 @@ rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext\n esac\n if test x$enable_cet = xyes; then\n   CET_FLAGS=\"-fcf-protection -mcet\"\n+  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: yes\" >&5\n+$as_echo \"yes\" >&6; }\n+else\n+  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: no\" >&5\n+$as_echo \"no\" >&6; }\n fi\n \n XCFLAGS=\"$XCFLAGS $CET_FLAGS\""}, {"sha": "c5ca3875fa5da8aa83ba2c97cda2844243730e2a", "filename": "libitm/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/14e335edc8c5c2cd18779e4e242a3d81037b8b43/libitm%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/14e335edc8c5c2cd18779e4e242a3d81037b8b43/libitm%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libitm%2FChangeLog?ref=14e335edc8c5c2cd18779e4e242a3d81037b8b43", "patch": "@@ -1,3 +1,8 @@\n+2018-02-14  Igor Tsimbalist  <igor.v.tsimbalist@intel.com>\n+\n+\tPR target/84148\n+\t* configure: Regenerate.\n+\n 2018-01-03  Jakub Jelinek  <jakub@redhat.com>\n \n \tUpdate copyright years."}, {"sha": "a57805e20df3254183163bc938fe65a811eedaa1", "filename": "libitm/configure", "status": "modified", "additions": 16, "deletions": 1, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/14e335edc8c5c2cd18779e4e242a3d81037b8b43/libitm%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/14e335edc8c5c2cd18779e4e242a3d81037b8b43/libitm%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libitm%2Fconfigure?ref=14e335edc8c5c2cd18779e4e242a3d81037b8b43", "patch": "@@ -17603,18 +17603,28 @@ else\n fi\n \n \n+{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking for CET support\" >&5\n+$as_echo_n \"checking for CET support... \" >&6; }\n+\n case \"$host\" in\n   i[34567]86-*-linux* | x86_64-*-linux*)\n     case \"$enable_cet\" in\n       default)\n-\t# Check if assembler supports CET.\n+\t# Check if target supports multi-byte NOPs\n+\t# and if assembler supports CET insn.\n \tcat confdefs.h - <<_ACEOF >conftest.$ac_ext\n /* end confdefs.h.  */\n \n int\n main ()\n {\n+\n+#if !defined(__SSE2__)\n+#error target does not support multi-byte NOPs\n+#else\n asm (\"setssbsy\");\n+#endif\n+\n   ;\n   return 0;\n }\n@@ -17654,6 +17664,11 @@ rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext\n esac\n if test x$enable_cet = xyes; then\n   CET_FLAGS=\"-fcf-protection -mcet\"\n+  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: yes\" >&5\n+$as_echo \"yes\" >&6; }\n+else\n+  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: no\" >&5\n+$as_echo \"no\" >&6; }\n fi\n \n XCFLAGS=\"$XCFLAGS $CET_FLAGS\""}, {"sha": "f8cc639fd0d5519d4508583d06372d8971fc8166", "filename": "libmpx/ChangeLog", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/14e335edc8c5c2cd18779e4e242a3d81037b8b43/libmpx%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/14e335edc8c5c2cd18779e4e242a3d81037b8b43/libmpx%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libmpx%2FChangeLog?ref=14e335edc8c5c2cd18779e4e242a3d81037b8b43", "patch": "@@ -1,4 +1,9 @@\n- 2017-11-17  Igor Tsimbalist  <igor.v.tsimbalist@intel.com>\n+2018-02-14  Igor Tsimbalist  <igor.v.tsimbalist@intel.com>\n+\n+\tPR target/84148\n+\t* configure: Regenerate.\n+\n+2017-11-17  Igor Tsimbalist  <igor.v.tsimbalist@intel.com>\n \n \t * Makefile.in: Regenerate.\n \t * acinclude.m4: Add enable.m4 and cet.m4."}, {"sha": "dfa4419b8400426238418fb7322e29fc0aec220a", "filename": "libmpx/configure", "status": "modified", "additions": 16, "deletions": 1, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/14e335edc8c5c2cd18779e4e242a3d81037b8b43/libmpx%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/14e335edc8c5c2cd18779e4e242a3d81037b8b43/libmpx%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libmpx%2Fconfigure?ref=14e335edc8c5c2cd18779e4e242a3d81037b8b43", "patch": "@@ -11598,18 +11598,28 @@ else\n fi\n \n \n+{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking for CET support\" >&5\n+$as_echo_n \"checking for CET support... \" >&6; }\n+\n case \"$host\" in\n   i[34567]86-*-linux* | x86_64-*-linux*)\n     case \"$enable_cet\" in\n       default)\n-\t# Check if assembler supports CET.\n+\t# Check if target supports multi-byte NOPs\n+\t# and if assembler supports CET insn.\n \tcat confdefs.h - <<_ACEOF >conftest.$ac_ext\n /* end confdefs.h.  */\n \n int\n main ()\n {\n+\n+#if !defined(__SSE2__)\n+#error target does not support multi-byte NOPs\n+#else\n asm (\"setssbsy\");\n+#endif\n+\n   ;\n   return 0;\n }\n@@ -11649,6 +11659,11 @@ rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext\n esac\n if test x$enable_cet = xyes; then\n   CET_FLAGS=\"-fcf-protection -mcet\"\n+  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: yes\" >&5\n+$as_echo \"yes\" >&6; }\n+else\n+  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: no\" >&5\n+$as_echo \"no\" >&6; }\n fi\n \n XCFLAGS=\"$XCFLAGS $CET_FLAGS\""}, {"sha": "b5422e3845f2b9ea7514189cf268d976b85ab560", "filename": "libobjc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/14e335edc8c5c2cd18779e4e242a3d81037b8b43/libobjc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/14e335edc8c5c2cd18779e4e242a3d81037b8b43/libobjc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libobjc%2FChangeLog?ref=14e335edc8c5c2cd18779e4e242a3d81037b8b43", "patch": "@@ -1,3 +1,8 @@\n+2018-02-14  Igor Tsimbalist  <igor.v.tsimbalist@intel.com>\n+\n+\tPR target/84148\n+\t* configure: Regenerate.\n+\n 2018-01-03  Jakub Jelinek  <jakub@redhat.com>\n \n \tUpdate copyright years."}, {"sha": "ce52fab100c4526a45b4ee4717033593c63e6f97", "filename": "libobjc/configure", "status": "modified", "additions": 18, "deletions": 3, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/14e335edc8c5c2cd18779e4e242a3d81037b8b43/libobjc%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/14e335edc8c5c2cd18779e4e242a3d81037b8b43/libobjc%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libobjc%2Fconfigure?ref=14e335edc8c5c2cd18779e4e242a3d81037b8b43", "patch": "@@ -3369,18 +3369,28 @@ else\n fi\n \n \n+{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking for CET support\" >&5\n+$as_echo_n \"checking for CET support... \" >&6; }\n+\n case \"$host\" in\n   i[34567]86-*-linux* | x86_64-*-linux*)\n     case \"$enable_cet\" in\n       default)\n-\t# Check if assembler supports CET.\n+\t# Check if target supports multi-byte NOPs\n+\t# and if assembler supports CET insn.\n \tcat confdefs.h - <<_ACEOF >conftest.$ac_ext\n /* end confdefs.h.  */\n \n int\n main ()\n {\n+\n+#if !defined(__SSE2__)\n+#error target does not support multi-byte NOPs\n+#else\n asm (\"setssbsy\");\n+#endif\n+\n   ;\n   return 0;\n }\n@@ -3420,6 +3430,11 @@ rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext\n esac\n if test x$enable_cet = xyes; then\n   CET_FLAGS=\"-fcf-protection -mcet\"\n+  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: yes\" >&5\n+$as_echo \"yes\" >&6; }\n+else\n+  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: no\" >&5\n+$as_echo \"no\" >&6; }\n fi\n \n XCFLAGS=\"$XCFLAGS $CET_FLAGS\"\n@@ -10668,7 +10683,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 10671 \"configure\"\n+#line 10686 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -10774,7 +10789,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 10777 \"configure\"\n+#line 10792 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H"}, {"sha": "33ca15f055579645ab0104535d2c683fec0bc1db", "filename": "libquadmath/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/14e335edc8c5c2cd18779e4e242a3d81037b8b43/libquadmath%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/14e335edc8c5c2cd18779e4e242a3d81037b8b43/libquadmath%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libquadmath%2FChangeLog?ref=14e335edc8c5c2cd18779e4e242a3d81037b8b43", "patch": "@@ -1,3 +1,8 @@\n+2018-02-14  Igor Tsimbalist  <igor.v.tsimbalist@intel.com>\n+\n+\tPR target/84148\n+\t* configure: Regenerate.\n+\n 2018-01-03  Jakub Jelinek  <jakub@redhat.com>\n \n \t* libquadmath.texi: Bump @copying's copyright year."}, {"sha": "2a6947995962d930921baa6f702f59635d91dfa4", "filename": "libquadmath/configure", "status": "modified", "additions": 16, "deletions": 1, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/14e335edc8c5c2cd18779e4e242a3d81037b8b43/libquadmath%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/14e335edc8c5c2cd18779e4e242a3d81037b8b43/libquadmath%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libquadmath%2Fconfigure?ref=14e335edc8c5c2cd18779e4e242a3d81037b8b43", "patch": "@@ -12837,18 +12837,28 @@ else\n fi\n \n \n+{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking for CET support\" >&5\n+$as_echo_n \"checking for CET support... \" >&6; }\n+\n case \"$host\" in\n   i[34567]86-*-linux* | x86_64-*-linux*)\n     case \"$enable_cet\" in\n       default)\n-\t# Check if assembler supports CET.\n+\t# Check if target supports multi-byte NOPs\n+\t# and if assembler supports CET insn.\n \tcat confdefs.h - <<_ACEOF >conftest.$ac_ext\n /* end confdefs.h.  */\n \n int\n main ()\n {\n+\n+#if !defined(__SSE2__)\n+#error target does not support multi-byte NOPs\n+#else\n asm (\"setssbsy\");\n+#endif\n+\n   ;\n   return 0;\n }\n@@ -12888,6 +12898,11 @@ rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext\n esac\n if test x$enable_cet = xyes; then\n   CET_FLAGS=\"-fcf-protection -mcet\"\n+  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: yes\" >&5\n+$as_echo \"yes\" >&6; }\n+else\n+  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: no\" >&5\n+$as_echo \"no\" >&6; }\n fi\n \n XCFLAGS=\"$XCFLAGS $CET_FLAGS\""}, {"sha": "b6250839281ae06aadabc5fdef29dc771177e620", "filename": "libsanitizer/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/14e335edc8c5c2cd18779e4e242a3d81037b8b43/libsanitizer%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/14e335edc8c5c2cd18779e4e242a3d81037b8b43/libsanitizer%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libsanitizer%2FChangeLog?ref=14e335edc8c5c2cd18779e4e242a3d81037b8b43", "patch": "@@ -1,3 +1,8 @@\n+2018-02-14  Igor Tsimbalist  <igor.v.tsimbalist@intel.com>\n+\n+\tPR target/84148\n+\t* configure: Regenerate.\n+\n 2018-02-05  Martin Liska  <mliska@suse.cz>\n \n \t* asan/asan_flags.inc: Cherry-pick upstream r323995."}, {"sha": "3b61a1f7537d949980ec381c2b278a1eded629fc", "filename": "libsanitizer/configure", "status": "modified", "additions": 16, "deletions": 1, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/14e335edc8c5c2cd18779e4e242a3d81037b8b43/libsanitizer%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/14e335edc8c5c2cd18779e4e242a3d81037b8b43/libsanitizer%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libsanitizer%2Fconfigure?ref=14e335edc8c5c2cd18779e4e242a3d81037b8b43", "patch": "@@ -16539,18 +16539,28 @@ else\n fi\n \n \n+{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking for CET support\" >&5\n+$as_echo_n \"checking for CET support... \" >&6; }\n+\n case \"$host\" in\n   i[34567]86-*-linux* | x86_64-*-linux*)\n     case \"$enable_cet\" in\n       default)\n-\t# Check if assembler supports CET.\n+\t# Check if target supports multi-byte NOPs\n+\t# and if assembler supports CET insn.\n \tcat confdefs.h - <<_ACEOF >conftest.$ac_ext\n /* end confdefs.h.  */\n \n int\n main ()\n {\n+\n+#if !defined(__SSE2__)\n+#error target does not support multi-byte NOPs\n+#else\n asm (\"setssbsy\");\n+#endif\n+\n   ;\n   return 0;\n }\n@@ -16590,6 +16600,11 @@ rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext\n esac\n if test x$enable_cet = xyes; then\n   CET_FLAGS=\"-fcf-protection -mcet\"\n+  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: yes\" >&5\n+$as_echo \"yes\" >&6; }\n+else\n+  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: no\" >&5\n+$as_echo \"no\" >&6; }\n fi\n \n EXTRA_CFLAGS=\"$EXTRA_CFLAGS $CET_FLAGS\""}, {"sha": "b5e81131f25ce3cb809f71f617a2a494c0349caa", "filename": "libssp/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/14e335edc8c5c2cd18779e4e242a3d81037b8b43/libssp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/14e335edc8c5c2cd18779e4e242a3d81037b8b43/libssp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libssp%2FChangeLog?ref=14e335edc8c5c2cd18779e4e242a3d81037b8b43", "patch": "@@ -1,3 +1,8 @@\n+2018-02-14  Igor Tsimbalist  <igor.v.tsimbalist@intel.com>\n+\n+\tPR target/84148\n+\t* configure: Regenerate.\n+\n 2018-01-03  Jakub Jelinek  <jakub@redhat.com>\n \n \tUpdate copyright years."}, {"sha": "df7bff70ba18c950e287ce00f7e04ea3210832e0", "filename": "libssp/configure", "status": "modified", "additions": 18, "deletions": 3, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/14e335edc8c5c2cd18779e4e242a3d81037b8b43/libssp%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/14e335edc8c5c2cd18779e4e242a3d81037b8b43/libssp%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libssp%2Fconfigure?ref=14e335edc8c5c2cd18779e4e242a3d81037b8b43", "patch": "@@ -4095,18 +4095,28 @@ else\n fi\n \n \n+{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking for CET support\" >&5\n+$as_echo_n \"checking for CET support... \" >&6; }\n+\n case \"$host\" in\n   i[34567]86-*-linux* | x86_64-*-linux*)\n     case \"$enable_cet\" in\n       default)\n-\t# Check if assembler supports CET.\n+\t# Check if target supports multi-byte NOPs\n+\t# and if assembler supports CET insn.\n \tcat confdefs.h - <<_ACEOF >conftest.$ac_ext\n /* end confdefs.h.  */\n \n int\n main ()\n {\n+\n+#if !defined(__SSE2__)\n+#error target does not support multi-byte NOPs\n+#else\n asm (\"setssbsy\");\n+#endif\n+\n   ;\n   return 0;\n }\n@@ -4146,6 +4156,11 @@ rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext\n esac\n if test x$enable_cet = xyes; then\n   CET_FLAGS=\"-fcf-protection -mcet\"\n+  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: yes\" >&5\n+$as_echo \"yes\" >&6; }\n+else\n+  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: no\" >&5\n+$as_echo \"no\" >&6; }\n fi\n \n XCFLAGS=\"$XCFLAGS $CET_FLAGS\"\n@@ -10745,7 +10760,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 10748 \"configure\"\n+#line 10763 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -10851,7 +10866,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 10854 \"configure\"\n+#line 10869 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H"}, {"sha": "0305de11d59e4d54a4a80da34fde935d24f22936", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/14e335edc8c5c2cd18779e4e242a3d81037b8b43/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/14e335edc8c5c2cd18779e4e242a3d81037b8b43/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=14e335edc8c5c2cd18779e4e242a3d81037b8b43", "patch": "@@ -1,3 +1,8 @@\n+2018-02-19  Igor Tsimbalist  <igor.v.tsimbalist@intel.com>\n+\n+\tPR target/84148\n+\t* configure: Regenerate.\n+\n 2018-02-15  Jonathan Wakely  <jwakely@redhat.com>\n \n \tPR libstdc++/81797"}, {"sha": "54dd7cef4e17591339f0c2aa5179b23611e30739", "filename": "libstdc++-v3/configure", "status": "modified", "additions": 16, "deletions": 1, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/14e335edc8c5c2cd18779e4e242a3d81037b8b43/libstdc%2B%2B-v3%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/14e335edc8c5c2cd18779e4e242a3d81037b8b43/libstdc%2B%2B-v3%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfigure?ref=14e335edc8c5c2cd18779e4e242a3d81037b8b43", "patch": "@@ -81129,18 +81129,28 @@ else\n fi\n \n \n+{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking for CET support\" >&5\n+$as_echo_n \"checking for CET support... \" >&6; }\n+\n case \"$host\" in\n   i[34567]86-*-linux* | x86_64-*-linux*)\n     case \"$enable_cet\" in\n       default)\n-\t# Check if assembler supports CET.\n+\t# Check if target supports multi-byte NOPs\n+\t# and if assembler supports CET insn.\n \tcat confdefs.h - <<_ACEOF >conftest.$ac_ext\n /* end confdefs.h.  */\n \n int\n main ()\n {\n+\n+#if !defined(__SSE2__)\n+#error target does not support multi-byte NOPs\n+#else\n asm (\"setssbsy\");\n+#endif\n+\n   ;\n   return 0;\n }\n@@ -81180,6 +81190,11 @@ rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext\n esac\n if test x$enable_cet = xyes; then\n   CET_FLAGS=\"-fcf-protection -mcet\"\n+  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: yes\" >&5\n+$as_echo \"yes\" >&6; }\n+else\n+  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: no\" >&5\n+$as_echo \"no\" >&6; }\n fi\n \n EXTRA_CXX_FLAGS=\"$EXTRA_CXX_FLAGS $CET_FLAGS\""}, {"sha": "82b52bc4845c768b046396a078e252cc6b70d7d4", "filename": "libvtv/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/14e335edc8c5c2cd18779e4e242a3d81037b8b43/libvtv%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/14e335edc8c5c2cd18779e4e242a3d81037b8b43/libvtv%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libvtv%2FChangeLog?ref=14e335edc8c5c2cd18779e4e242a3d81037b8b43", "patch": "@@ -1,3 +1,8 @@\n+2018-02-14  Igor Tsimbalist  <igor.v.tsimbalist@intel.com>\n+\n+\tPR target/84148\n+\t* configure: Regenerate.\n+\n 2018-01-03  Jakub Jelinek  <jakub@redhat.com>\n \n \tUpdate copyright years."}, {"sha": "1cd1f70cd768d35fa38075fb81d73286283248d4", "filename": "libvtv/configure", "status": "modified", "additions": 16, "deletions": 1, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/14e335edc8c5c2cd18779e4e242a3d81037b8b43/libvtv%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/14e335edc8c5c2cd18779e4e242a3d81037b8b43/libvtv%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libvtv%2Fconfigure?ref=14e335edc8c5c2cd18779e4e242a3d81037b8b43", "patch": "@@ -15473,18 +15473,28 @@ else\n fi\n \n \n+{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking for CET support\" >&5\n+$as_echo_n \"checking for CET support... \" >&6; }\n+\n case \"$host\" in\n   i[34567]86-*-linux* | x86_64-*-linux*)\n     case \"$enable_cet\" in\n       default)\n-\t# Check if assembler supports CET.\n+\t# Check if target supports multi-byte NOPs\n+\t# and if assembler supports CET insn.\n \tcat confdefs.h - <<_ACEOF >conftest.$ac_ext\n /* end confdefs.h.  */\n \n int\n main ()\n {\n+\n+#if !defined(__SSE2__)\n+#error target does not support multi-byte NOPs\n+#else\n asm (\"setssbsy\");\n+#endif\n+\n   ;\n   return 0;\n }\n@@ -15524,6 +15534,11 @@ rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext\n esac\n if test x$enable_cet = xyes; then\n   CET_FLAGS=\"-fcf-protection -mcet\"\n+  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: yes\" >&5\n+$as_echo \"yes\" >&6; }\n+else\n+  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: no\" >&5\n+$as_echo \"no\" >&6; }\n fi\n \n XCFLAGS=\"$XCFLAGS $CET_FLAGS\""}]}