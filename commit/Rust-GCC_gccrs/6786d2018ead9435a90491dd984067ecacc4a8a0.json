{"sha": "6786d2018ead9435a90491dd984067ecacc4a8a0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Njc4NmQyMDE4ZWFkOTQzNWE5MDQ5MWRkOTg0MDY3ZWNhY2M0YThhMA==", "commit": {"author": {"name": "Aldy Hernandez", "email": "aldyh@redhat.com", "date": "2002-02-25T07:22:37Z"}, "committer": {"name": "Aldy Hernandez", "email": "aldyh@gcc.gnu.org", "date": "2002-02-25T07:22:37Z"}, "message": "c-typeck.c (push_init_level): Handle vectors.\n\n2002-02-25  Aldy Hernandez  <aldyh@redhat.com>\n\n        * c-typeck.c (push_init_level): Handle vectors.\n\nFrom-SVN: r50021", "tree": {"sha": "480ca7c1b8fdc37050cbd5a1017dc46928f30a01", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/480ca7c1b8fdc37050cbd5a1017dc46928f30a01"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6786d2018ead9435a90491dd984067ecacc4a8a0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6786d2018ead9435a90491dd984067ecacc4a8a0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6786d2018ead9435a90491dd984067ecacc4a8a0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6786d2018ead9435a90491dd984067ecacc4a8a0/comments", "author": {"login": "aldyh", "id": 12937877, "node_id": "MDQ6VXNlcjEyOTM3ODc3", "avatar_url": "https://avatars.githubusercontent.com/u/12937877?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aldyh", "html_url": "https://github.com/aldyh", "followers_url": "https://api.github.com/users/aldyh/followers", "following_url": "https://api.github.com/users/aldyh/following{/other_user}", "gists_url": "https://api.github.com/users/aldyh/gists{/gist_id}", "starred_url": "https://api.github.com/users/aldyh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aldyh/subscriptions", "organizations_url": "https://api.github.com/users/aldyh/orgs", "repos_url": "https://api.github.com/users/aldyh/repos", "events_url": "https://api.github.com/users/aldyh/events{/privacy}", "received_events_url": "https://api.github.com/users/aldyh/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "14d6758650f9bec0c2a32c59969f32a98bf990f1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/14d6758650f9bec0c2a32c59969f32a98bf990f1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/14d6758650f9bec0c2a32c59969f32a98bf990f1"}], "stats": {"total": 12, "additions": 12, "deletions": 0}, "files": [{"sha": "2f01984633f7e5711e62ada78054101abdd3c000", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6786d2018ead9435a90491dd984067ecacc4a8a0/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6786d2018ead9435a90491dd984067ecacc4a8a0/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=6786d2018ead9435a90491dd984067ecacc4a8a0", "patch": "@@ -1,3 +1,7 @@\n+2002-02-25  Aldy Hernandez  <aldyh@redhat.com>\n+\n+        * c-typeck.c (push_init_level): Handle vectors.\n+\n 2002-02-25  Alexandre Oliva  <aoliva@redhat.com>\n \n \t* config/sparc/sparc.c (const64_high_operand): Zero-extend"}, {"sha": "4a804389ce1f604b603a113b2aa4794cee74b56a", "filename": "gcc/c-typeck.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6786d2018ead9435a90491dd984067ecacc4a8a0/gcc%2Fc-typeck.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6786d2018ead9435a90491dd984067ecacc4a8a0/gcc%2Fc-typeck.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-typeck.c?ref=6786d2018ead9435a90491dd984067ecacc4a8a0", "patch": "@@ -5384,6 +5384,14 @@ push_init_level (implicit)\n       constructor_unfilled_fields = constructor_fields;\n       constructor_bit_index = bitsize_zero_node;\n     }\n+  else if (TREE_CODE (constructor_type) == VECTOR_TYPE)\n+    {\n+      /* Vectors are like simple fixed-size arrays.  */\n+      constructor_max_index =\n+\tbuild_int_2 (TYPE_VECTOR_SUBPARTS (constructor_type) - 1, 0);\n+      constructor_index = convert (bitsizetype, integer_zero_node);\n+      constructor_unfilled_index = constructor_index;\n+    }\n   else if (TREE_CODE (constructor_type) == ARRAY_TYPE)\n     {\n       if (TYPE_DOMAIN (constructor_type))"}]}