{"sha": "5f732aba81092ecd868dd1cc56c1db569c362a71", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWY3MzJhYmE4MTA5MmVjZDg2OGRkMWNjNTZjMWRiNTY5YzM2MmE3MQ==", "commit": {"author": {"name": "David Edelsohn", "email": "dje@gcc.gnu.org", "date": "2007-08-03T15:23:34Z"}, "committer": {"name": "David Edelsohn", "email": "dje@gcc.gnu.org", "date": "2007-08-03T15:23:34Z"}, "message": "rs6000.c (struct processor_cost): Change l1_cache_lines to l1_cache_size.\n\n\t* config/rs6000/rs6000.c (struct processor_cost): Change\n\tl1_cache_lines to l1_cache_size.  Add l2_cache_size.\n\t(*_cost): Convert l1 cache information to kilobytes.  Add l2 cache\n\tinformation.\n\t(rios1_costs, rios2_cost): Correct cache line size.\n\t(rs6000_override_options): Set l2-cache-size parameter.\n\nFrom-SVN: r127181", "tree": {"sha": "f0e8c01d3fb75da1320434bcfc14d4b8c2f1c89d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f0e8c01d3fb75da1320434bcfc14d4b8c2f1c89d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5f732aba81092ecd868dd1cc56c1db569c362a71", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5f732aba81092ecd868dd1cc56c1db569c362a71", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5f732aba81092ecd868dd1cc56c1db569c362a71", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5f732aba81092ecd868dd1cc56c1db569c362a71/comments", "author": null, "committer": null, "parents": [{"sha": "737b089116ad5a0dd98a4158e73c55fac8c793a3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/737b089116ad5a0dd98a4158e73c55fac8c793a3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/737b089116ad5a0dd98a4158e73c55fac8c793a3"}], "stats": {"total": 89, "additions": 61, "deletions": 28}, "files": [{"sha": "05e5dcc32406d51c9fdce459a6756134ae305574", "filename": "gcc/ChangeLog", "status": "modified", "additions": 11, "deletions": 2, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5f732aba81092ecd868dd1cc56c1db569c362a71/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5f732aba81092ecd868dd1cc56c1db569c362a71/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=5f732aba81092ecd868dd1cc56c1db569c362a71", "patch": "@@ -1,3 +1,12 @@\n+2007-08-03  David Edelsohn  <edelsohn@gnu.org>\n+\n+\t* config/rs6000/rs6000.c (struct processor_cost): Change\n+\tl1_cache_lines to l1_cache_size.  Add l2_cache_size.\n+\t(*_cost): Convert l1 cache information to kilobytes.  Add l2 cache\n+\tinformation.\n+\t(rios1_costs, rios2_cost): Correct cache line size.\n+\t(rs6000_override_options): Set l2-cache-size parameter.\n+\n 2007-08-03  Andrew Pinski  <andrew_pinski@playstation.sony.com>\n \t    Diego Novillo  <dnovillo@google.com>\n \n@@ -20529,7 +20538,7 @@\n \t* langhooks.h (struct lang_hooks): Removed field\n \t'can_use_bit_fields_p'.\n \n-2007-01-10  Ralf Cors\u00c3\u00a9pius <ralf.corsepius@rtems.org>\n+2007-01-10  Ralf Cors\ufffd\u00a9pius <ralf.corsepius@rtems.org>\n \n \t* config/bfin/t-bfin, config/bfin/t-bfin-elf: Remove GCC_CFLAGS.\n \n@@ -20758,7 +20767,7 @@\n \t* config/frv/predicates.md (reg_or_0_operand): Accept\n \tCONST_DOUBLEs.\n \n-2007-01-08  Ralf Cors\u00c3\u00a9pius <ralf.corsepius@rtems.org>\n+2007-01-08  Ralf Cors\ufffd\u00a9pius <ralf.corsepius@rtems.org>\n \n \t* config/bfin/rtems.h, config/bfin/t-rtems: New.\n \t* config.gcc: Add bfin*-rtems*."}, {"sha": "b579cec1b3aaf5f2a1a62cbf7e2ed7931ccbf212", "filename": "gcc/config/rs6000/rs6000.c", "status": "modified", "additions": 50, "deletions": 26, "changes": 76, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5f732aba81092ecd868dd1cc56c1db569c362a71/gcc%2Fconfig%2Frs6000%2Frs6000.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5f732aba81092ecd868dd1cc56c1db569c362a71/gcc%2Fconfig%2Frs6000%2Frs6000.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.c?ref=5f732aba81092ecd868dd1cc56c1db569c362a71", "patch": "@@ -289,8 +289,9 @@ struct processor_costs {\n   const int dmul;\t  /* cost of DFmode multiplication (and fmadd).  */\n   const int sdiv;\t  /* cost of SFmode division (fdivs).  */\n   const int ddiv;\t  /* cost of DFmode division (fdiv).  */\n-  const int cache_line_size;    /* cache block in bytes. */\n-  const int l1_cache_lines;\t/* number of lines in L1 cache.  */\n+  const int cache_line_size;    /* cache line size in bytes. */\n+  const int l1_cache_size;\t/* size of l1 cache, in kilobytes.  */\n+  const int l2_cache_size;\t/* size of l2 cache, in kilobytes.  */\n   const int simultaneous_prefetches; /* number of parallel prefetch\n \t\t\t\t\toperations.  */\n };\n@@ -315,6 +316,7 @@ struct processor_costs size32_cost = {\n   32,\n   0,\n   0,\n+  0,\n };\n \n /* Instruction size costs on 64bit processors.  */\n@@ -333,6 +335,7 @@ struct processor_costs size64_cost = {\n   128,\n   0,\n   0,\n+  0,\n };\n \n /* Instruction costs on RIOS1 processors.  */\n@@ -348,8 +351,9 @@ struct processor_costs rios1_cost = {\n   COSTS_N_INSNS (2),    /* dmul */\n   COSTS_N_INSNS (19),   /* sdiv */\n   COSTS_N_INSNS (19),   /* ddiv */\n-  32,\n-  1024,\t\t\t/* cache lines */\n+  128,\n+  64,\t\t\t/* l1 cache */\n+  512,\t\t\t/* l2 cache */\n   0,\t\t\t/* streams */\n };\n \n@@ -366,8 +370,9 @@ struct processor_costs rios2_cost = {\n   COSTS_N_INSNS (2),    /* dmul */\n   COSTS_N_INSNS (17),   /* sdiv */\n   COSTS_N_INSNS (17),   /* ddiv */\n-  32,\n-  1024,\t\t\t/* cache lines */\n+  256,\n+  256,\t\t\t/* l1 cache */\n+  1024,\t\t\t/* l2 cache */\n   0,\t\t\t/* streams */\n };\n \n@@ -385,7 +390,8 @@ struct processor_costs rs64a_cost = {\n   COSTS_N_INSNS (31),   /* sdiv */\n   COSTS_N_INSNS (31),   /* ddiv */\n   128,\n-  1024,\t\t\t/* cache lines */\n+  128,\t\t\t/* l1 cache */\n+  2048,\t\t\t/* l2 cache */\n   1,\t\t\t/* streams */\n };\n \n@@ -402,8 +408,9 @@ struct processor_costs mpccore_cost = {\n   COSTS_N_INSNS (5),    /* dmul */\n   COSTS_N_INSNS (10),   /* sdiv */\n   COSTS_N_INSNS (17),   /* ddiv */\n-  128,\n-  512,\t\t\t/* cache lines */\n+  32,\n+  4,\t\t\t/* l1 cache */\n+  16,\t\t\t/* l2 cache */\n   1,\t\t\t/* streams */\n };\n \n@@ -421,7 +428,8 @@ struct processor_costs ppc403_cost = {\n   COSTS_N_INSNS (11),   /* sdiv */\n   COSTS_N_INSNS (11),   /* ddiv */\n   32,\n-  128,\t\t\t/* cache lines */\n+  4,\t\t\t/* l1 cache */\n+  16,\t\t\t/* l2 cache */\n   1,\t\t\t/* streams */\n };\n \n@@ -439,7 +447,8 @@ struct processor_costs ppc405_cost = {\n   COSTS_N_INSNS (11),   /* sdiv */\n   COSTS_N_INSNS (11),   /* ddiv */\n   32,\n-  512,\t\t\t/* cache lines */\n+  16,\t\t\t/* l1 cache */\n+  128,\t\t\t/* l2 cache */\n   1,\t\t\t/* streams */\n };\n \n@@ -457,7 +466,8 @@ struct processor_costs ppc440_cost = {\n   COSTS_N_INSNS (19),   /* sdiv */\n   COSTS_N_INSNS (33),   /* ddiv */\n   32,\n-  1024,\t\t\t/* cache lines */\n+  32,\t\t\t/* l1 cache */\n+  256,\t\t\t/* l2 cache */\n   1,\t\t\t/* streams */\n };\n \n@@ -475,7 +485,8 @@ struct processor_costs ppc601_cost = {\n   COSTS_N_INSNS (17),   /* sdiv */\n   COSTS_N_INSNS (31),   /* ddiv */\n   32,\n-  1024,\t\t\t/* cache lines */\n+  32,\t\t\t/* l1 cache */\n+  256,\t\t\t/* l2 cache */\n   1,\t\t\t/* streams */\n };\n \n@@ -493,7 +504,8 @@ struct processor_costs ppc603_cost = {\n   COSTS_N_INSNS (18),   /* sdiv */\n   COSTS_N_INSNS (33),   /* ddiv */\n   32,\n-  256,\t\t\t/* cache lines */\n+  8,\t\t\t/* l1 cache */\n+  64,\t\t\t/* l2 cache */\n   1,\t\t\t/* streams */\n };\n \n@@ -511,7 +523,8 @@ struct processor_costs ppc604_cost = {\n   COSTS_N_INSNS (18),   /* sdiv */\n   COSTS_N_INSNS (32),   /* ddiv */\n   32,\n-  512,\t\t\t/* cache lines */\n+  16,\t\t\t/* l1 cache */\n+  512,\t\t\t/* l2 cache */\n   1,\t\t\t/* streams */\n };\n \n@@ -529,7 +542,8 @@ struct processor_costs ppc604e_cost = {\n   COSTS_N_INSNS (18),   /* sdiv */\n   COSTS_N_INSNS (32),   /* ddiv */\n   32,\n-  1024,\t\t\t/* cache lines */\n+  32,\t\t\t/* l1 cache */\n+  1024,\t\t\t/* l2 cache */\n   1,\t\t\t/* streams */\n };\n \n@@ -547,7 +561,8 @@ struct processor_costs ppc620_cost = {\n   COSTS_N_INSNS (18),   /* sdiv */\n   COSTS_N_INSNS (32),   /* ddiv */\n   128,\n-  512,\t\t\t/* cache lines */\n+  32,\t\t\t/* l1 cache */\n+  1024,\t\t\t/* l2 cache */\n   1,\t\t\t/* streams */\n };\n \n@@ -565,7 +580,8 @@ struct processor_costs ppc630_cost = {\n   COSTS_N_INSNS (17),   /* sdiv */\n   COSTS_N_INSNS (21),   /* ddiv */\n   128,\n-  512,\t\t\t/* cache lines */\n+  64,\t\t\t/* l1 cache */\n+  1024,\t\t\t/* l2 cache */\n   1,\t\t\t/* streams */\n };\n \n@@ -584,8 +600,9 @@ struct processor_costs ppccell_cost = {\n   COSTS_N_INSNS (74/2),   /* sdiv */\n   COSTS_N_INSNS (74/2),   /* ddiv */\n   128,\n-  256,\t\t\t  /* cache lines */\n-  6,\t\t\t  /* streams */\n+  32,\t\t\t/* l1 cache */\n+  512,\t\t\t/* l2 cache */\n+  6,\t\t\t/* streams */\n };\n \n /* Instruction costs on PPC750 and PPC7400 processors.  */\n@@ -602,7 +619,8 @@ struct processor_costs ppc750_cost = {\n   COSTS_N_INSNS (17),   /* sdiv */\n   COSTS_N_INSNS (31),   /* ddiv */\n   32,\n-  1024,\t\t\t/* cache lines */\n+  32,\t\t\t/* l1 cache */\n+  512,\t\t\t/* l2 cache */\n   1,\t\t\t/* streams */\n };\n \n@@ -620,7 +638,8 @@ struct processor_costs ppc7450_cost = {\n   COSTS_N_INSNS (21),   /* sdiv */\n   COSTS_N_INSNS (35),   /* ddiv */\n   32,\n-  1024,\t\t\t/* cache lines */\n+  32,\t\t\t/* l1 cache */\n+  1024,\t\t\t/* l2 cache */\n   1,\t\t\t/* streams */\n };\n \n@@ -638,7 +657,8 @@ struct processor_costs ppc8540_cost = {\n   COSTS_N_INSNS (29),   /* sdiv */\n   COSTS_N_INSNS (29),   /* ddiv */\n   32,\n-  1024,\t\t\t/* cache lines */\n+  32,\t\t\t/* l1 cache */\n+  256,\t\t\t/* l2 cache */\n   1,\t\t\t/* prefetch streams /*/\n };\n \n@@ -656,7 +676,8 @@ struct processor_costs power4_cost = {\n   COSTS_N_INSNS (17),   /* sdiv */\n   COSTS_N_INSNS (17),   /* ddiv */\n   128,\n-  256,\t\t\t/* cache lines */\n+  32,\t\t\t/* l1 cache */\n+  1024,\t\t\t/* l2 cache */\n   8,\t\t\t/* prefetch streams /*/\n };\n \n@@ -674,7 +695,8 @@ struct processor_costs power6_cost = {\n   COSTS_N_INSNS (13),   /* sdiv */\n   COSTS_N_INSNS (16),   /* ddiv */\n   128,\n-  512,\t\t\t/* cache lines */\n+  64,\t\t\t/* l1 cache */\n+  2048,\t\t\t/* l2 cache */\n   16,\t\t\t/* prefetch streams */\n };\n \n@@ -1799,9 +1821,11 @@ rs6000_override_options (const char *default_cpu)\n     set_param_value (\"simultaneous-prefetches\",\n \t\t     rs6000_cost->simultaneous_prefetches);\n   if (!PARAM_SET_P (PARAM_L1_CACHE_SIZE))\n-    set_param_value (\"l1-cache-size\", rs6000_cost->l1_cache_lines);\n+    set_param_value (\"l1-cache-size\", rs6000_cost->l1_cache_size);\n   if (!PARAM_SET_P (PARAM_L1_CACHE_LINE_SIZE))\n     set_param_value (\"l1-cache-line-size\", rs6000_cost->cache_line_size);\n+  if (!PARAM_SET_P (PARAM_L2_CACHE_SIZE))\n+    set_param_value (\"l2-cache-size\", rs6000_cost->l2_cache_size);\n }\n \n /* Implement targetm.vectorize.builtin_mask_for_load.  */"}]}