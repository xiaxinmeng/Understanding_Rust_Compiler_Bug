{"sha": "c0d1689058501574e0df2ad03532e6dd40796782", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzBkMTY4OTA1ODUwMTU3NGUwZGYyYWQwMzUzMmU2ZGQ0MDc5Njc4Mg==", "commit": {"author": {"name": "Jerry DeLisle", "email": "jvdelisle@gcc.gnu.org", "date": "2010-07-15T03:40:56Z"}, "committer": {"name": "Jerry DeLisle", "email": "jvdelisle@gcc.gnu.org", "date": "2010-07-15T03:40:56Z"}, "message": "re PR fortran/44934 (Bogus \"Missing format for FORMATTED data transfer\")\n\n2010-07-14  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n\n\tPR libfortran/44934\n\t* io/file_pos.c (st_endfile): Correctly set unit flags for form.\n\nFrom-SVN: r162203", "tree": {"sha": "96a86afcaeb4e8db06ac83f484157cc390c73b70", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/96a86afcaeb4e8db06ac83f484157cc390c73b70"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c0d1689058501574e0df2ad03532e6dd40796782", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c0d1689058501574e0df2ad03532e6dd40796782", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c0d1689058501574e0df2ad03532e6dd40796782", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c0d1689058501574e0df2ad03532e6dd40796782/comments", "author": null, "committer": null, "parents": [{"sha": "5cb55204f2d2b4e1c10d9baba320f6be7d5f6631", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5cb55204f2d2b4e1c10d9baba320f6be7d5f6631", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5cb55204f2d2b4e1c10d9baba320f6be7d5f6631"}], "stats": {"total": 118, "additions": 65, "deletions": 53}, "files": [{"sha": "945899eee27ece513c5095d4f1b6d6c86932f7c1", "filename": "libgfortran/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c0d1689058501574e0df2ad03532e6dd40796782/libgfortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c0d1689058501574e0df2ad03532e6dd40796782/libgfortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2FChangeLog?ref=c0d1689058501574e0df2ad03532e6dd40796782", "patch": "@@ -1,3 +1,8 @@\n+2010-07-14  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n+\n+\tPR libfortran/44934\n+\t* io/file_pos.c (st_endfile): Correctly set unit flags for form.\n+\n 2010-07-12  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n \n \tPR libfortran/37077"}, {"sha": "6d88d501bdae7e0e70420083f505e76460777c55", "filename": "libgfortran/io/file_pos.c", "status": "modified", "additions": 8, "deletions": 1, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c0d1689058501574e0df2ad03532e6dd40796782/libgfortran%2Fio%2Ffile_pos.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c0d1689058501574e0df2ad03532e6dd40796782/libgfortran%2Fio%2Ffile_pos.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fio%2Ffile_pos.c?ref=c0d1689058501574e0df2ad03532e6dd40796782", "patch": "@@ -338,7 +338,14 @@ st_endfile (st_parameter_filepos *fpp)\n \t  memset (&u_flags, '\\0', sizeof (u_flags));\n \t  u_flags.access = ACCESS_SEQUENTIAL;\n \t  u_flags.action = ACTION_READWRITE;\n-\t  u_flags.form = FORM_UNSPECIFIED;\n+\n+\t  /* Is it unformatted?  */\n+\t  if (!(fpp->common.flags & (IOPARM_DT_HAS_FORMAT | IOPARM_DT_LIST_FORMAT\n+\t\t\t\t     | IOPARM_DT_IONML_SET)))\n+\t    u_flags.form = FORM_UNFORMATTED;\n+\t  else\n+\t    u_flags.form = FORM_UNSPECIFIED;\n+\n \t  u_flags.delim = DELIM_UNSPECIFIED;\n \t  u_flags.blank = BLANK_UNSPECIFIED;\n \t  u_flags.pad = PAD_UNSPECIFIED;"}, {"sha": "e8bf06462262e089c29a074efba555198aae6f05", "filename": "libgfortran/io/transfer.c", "status": "modified", "additions": 52, "deletions": 52, "changes": 104, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c0d1689058501574e0df2ad03532e6dd40796782/libgfortran%2Fio%2Ftransfer.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c0d1689058501574e0df2ad03532e6dd40796782/libgfortran%2Fio%2Ftransfer.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fio%2Ftransfer.c?ref=c0d1689058501574e0df2ad03532e6dd40796782", "patch": "@@ -2136,49 +2136,49 @@ data_transfer_init (st_parameter_dt *dtp, int read_flag)\n \n   dtp->u.p.current_unit = get_unit (dtp, 1);\n   if (dtp->u.p.current_unit->s == NULL)\n-  {  /* Open the unit with some default flags.  */\n-     st_parameter_open opp;\n-     unit_convert conv;\n+    {  /* Open the unit with some default flags.  */\n+       st_parameter_open opp;\n+       unit_convert conv;\n \n-    if (dtp->common.unit < 0)\n-      {\n-\tclose_unit (dtp->u.p.current_unit);\n-\tdtp->u.p.current_unit = NULL;\n-\tgenerate_error (&dtp->common, LIBERROR_BAD_OPTION,\n-\t\t\t\"Bad unit number in statement\");\n-\treturn;\n-      }\n-    memset (&u_flags, '\\0', sizeof (u_flags));\n-    u_flags.access = ACCESS_SEQUENTIAL;\n-    u_flags.action = ACTION_READWRITE;\n-\n-    /* Is it unformatted?  */\n-    if (!(cf & (IOPARM_DT_HAS_FORMAT | IOPARM_DT_LIST_FORMAT\n-\t\t| IOPARM_DT_IONML_SET)))\n-      u_flags.form = FORM_UNFORMATTED;\n-    else\n-      u_flags.form = FORM_UNSPECIFIED;\n-\n-    u_flags.delim = DELIM_UNSPECIFIED;\n-    u_flags.blank = BLANK_UNSPECIFIED;\n-    u_flags.pad = PAD_UNSPECIFIED;\n-    u_flags.decimal = DECIMAL_UNSPECIFIED;\n-    u_flags.encoding = ENCODING_UNSPECIFIED;\n-    u_flags.async = ASYNC_UNSPECIFIED;\n-    u_flags.round = ROUND_UNSPECIFIED;\n-    u_flags.sign = SIGN_UNSPECIFIED;\n-\n-    u_flags.status = STATUS_UNKNOWN;\n-\n-    conv = get_unformatted_convert (dtp->common.unit);\n-\n-    if (conv == GFC_CONVERT_NONE)\n-      conv = compile_options.convert;\n-\n-    /* We use big_endian, which is 0 on little-endian machines\n-       and 1 on big-endian machines.  */\n-    switch (conv)\n-      {\n+      if (dtp->common.unit < 0)\n+\t{\n+\t  close_unit (dtp->u.p.current_unit);\n+\t  dtp->u.p.current_unit = NULL;\n+\t  generate_error (&dtp->common, LIBERROR_BAD_OPTION,\n+\t\t\t  \"Bad unit number in statement\");\n+\t  return;\n+\t}\n+      memset (&u_flags, '\\0', sizeof (u_flags));\n+      u_flags.access = ACCESS_SEQUENTIAL;\n+      u_flags.action = ACTION_READWRITE;\n+\n+      /* Is it unformatted?  */\n+      if (!(cf & (IOPARM_DT_HAS_FORMAT | IOPARM_DT_LIST_FORMAT\n+\t\t  | IOPARM_DT_IONML_SET)))\n+\tu_flags.form = FORM_UNFORMATTED;\n+      else\n+\tu_flags.form = FORM_UNSPECIFIED;\n+\n+      u_flags.delim = DELIM_UNSPECIFIED;\n+      u_flags.blank = BLANK_UNSPECIFIED;\n+      u_flags.pad = PAD_UNSPECIFIED;\n+      u_flags.decimal = DECIMAL_UNSPECIFIED;\n+      u_flags.encoding = ENCODING_UNSPECIFIED;\n+      u_flags.async = ASYNC_UNSPECIFIED;\n+      u_flags.round = ROUND_UNSPECIFIED;\n+      u_flags.sign = SIGN_UNSPECIFIED;\n+\n+      u_flags.status = STATUS_UNKNOWN;\n+\n+      conv = get_unformatted_convert (dtp->common.unit);\n+\n+      if (conv == GFC_CONVERT_NONE)\n+\tconv = compile_options.convert;\n+\n+      /* We use big_endian, which is 0 on little-endian machines\n+\t and 1 on big-endian machines.  */\n+      switch (conv)\n+\t{\n \tcase GFC_CONVERT_NATIVE:\n \tcase GFC_CONVERT_SWAP:\n \t  break;\n@@ -2194,18 +2194,18 @@ data_transfer_init (st_parameter_dt *dtp, int read_flag)\n \tdefault:\n \t  internal_error (&opp.common, \"Illegal value for CONVERT\");\n \t  break;\n-      }\n+\t}\n \n-     u_flags.convert = conv;\n+      u_flags.convert = conv;\n \n-     opp.common = dtp->common;\n-     opp.common.flags &= IOPARM_COMMON_MASK;\n-     dtp->u.p.current_unit = new_unit (&opp, dtp->u.p.current_unit, &u_flags);\n-     dtp->common.flags &= ~IOPARM_COMMON_MASK;\n-     dtp->common.flags |= (opp.common.flags & IOPARM_COMMON_MASK);\n-     if (dtp->u.p.current_unit == NULL)\n-       return;\n-  }\n+      opp.common = dtp->common;\n+      opp.common.flags &= IOPARM_COMMON_MASK;\n+      dtp->u.p.current_unit = new_unit (&opp, dtp->u.p.current_unit, &u_flags);\n+      dtp->common.flags &= ~IOPARM_COMMON_MASK;\n+      dtp->common.flags |= (opp.common.flags & IOPARM_COMMON_MASK);\n+      if (dtp->u.p.current_unit == NULL)\n+\treturn;\n+    }\n \n   /* Check the action.  */\n "}]}