{"sha": "223671612fba9ad84298792fa5dcfe1675be9084", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjIzNjcxNjEyZmJhOWFkODQyOTg3OTJmYTVkY2ZlMTY3NWJlOTA4NA==", "commit": {"author": {"name": "Nathan Sidwell", "email": "nathan@codesourcery.com", "date": "2001-09-04T12:12:50Z"}, "committer": {"name": "Nathan Sidwell", "email": "nathan@gcc.gnu.org", "date": "2001-09-04T12:12:50Z"}, "message": "c-common.h (tree_dump_index): Add more comments.\n\n\t* c-common.h (tree_dump_index): Add more comments.\n\t* c-dump.c (dump_files): Name flags `tree' rather than `ast'.\n\t(dump_option_value_info): New struct.\n\t(dump_options): New array.\n\t(dump_switch_p): Parse switch options symbolically.\n\t* doc/invoke.texi (-fdump-ast): Rename to ...\n\t(-fdump-tree): ... here. Document that options are symbolic, and\n\tnot all are applicable.\n\nFrom-SVN: r45373", "tree": {"sha": "3ee4e117f64782e128a0b62f4646f1f75a953c45", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3ee4e117f64782e128a0b62f4646f1f75a953c45"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/223671612fba9ad84298792fa5dcfe1675be9084", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/223671612fba9ad84298792fa5dcfe1675be9084", "html_url": "https://github.com/Rust-GCC/gccrs/commit/223671612fba9ad84298792fa5dcfe1675be9084", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/223671612fba9ad84298792fa5dcfe1675be9084/comments", "author": null, "committer": null, "parents": [{"sha": "7fbb2f8444e6405b147bb263f4c6d8c5568e8594", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7fbb2f8444e6405b147bb263f4c6d8c5568e8594", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7fbb2f8444e6405b147bb263f4c6d8c5568e8594"}], "stats": {"total": 74, "additions": 47, "deletions": 27}, "files": [{"sha": "b10e31712b35d5581f69fd390e0a0bc5cae1ea91", "filename": "gcc/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/223671612fba9ad84298792fa5dcfe1675be9084/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/223671612fba9ad84298792fa5dcfe1675be9084/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=223671612fba9ad84298792fa5dcfe1675be9084", "patch": "@@ -1,3 +1,14 @@\n+2001-09-04  Nathan Sidwell  <nathan@codesourcery.com>\n+\n+\t* c-common.h (tree_dump_index): Add more comments.\n+\t* c-dump.c (dump_files): Name flags `tree' rather than `ast'.\n+\t(dump_option_value_info): New struct.\n+\t(dump_options): New array.\n+\t(dump_switch_p): Parse switch options symbolically.\n+\t* doc/invoke.texi (-fdump-ast): Rename to ...\n+\t(-fdump-tree): ... here. Document that options are symbolic, and\n+\tnot all are applicable.\n+\n 2001-09-04  David S. Miller  <davem@redhat.com>\n \n \t* config/sparc/sparc.md (define_splits): Kill constraints."}, {"sha": "26933b74f632e51cce338752576f17fa7f4ba8c4", "filename": "gcc/c-common.h", "status": "modified", "additions": 6, "deletions": 3, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/223671612fba9ad84298792fa5dcfe1675be9084/gcc%2Fc-common.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/223671612fba9ad84298792fa5dcfe1675be9084/gcc%2Fc-common.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-common.h?ref=223671612fba9ad84298792fa5dcfe1675be9084", "patch": "@@ -844,9 +844,10 @@ extern int c_safe_from_p                        PARAMS ((rtx, tree));\n \n extern int c_unsafe_for_reeval\t\t\tPARAMS ((tree));\n \n-/* In dump.c */\n+/* In c-dump.c */\n \n-/* Different tree dump places. */\n+/* Different tree dump places.  When you add new tree dump places,\n+   extend the DUMP_FILES array in c-dump.c */\n enum tree_dump_index\n {\n   TDI_all,\t\t\t/* dump the whole translation unit */\n@@ -858,7 +859,9 @@ enum tree_dump_index\n   TDI_end\n };\n \n-/* Bit masks to control tree dumping. */\n+/* Bit masks to control tree dumping. Not all values are applicable to\n+   all tree dumps. Add new ones at the end. When you define new\n+   values, extend the DUMP_OPTIONS array in c-dump.c */\n #define TDF_ADDRESS\t(1 << 0)\t/* dump node addresses */\n #define TDF_SLIM\t(1 << 1)\t/* don't go wild following links */\n "}, {"sha": "b2967728671423bf811fff513223c2bbac08188c", "filename": "gcc/doc/invoke.texi", "status": "modified", "additions": 30, "deletions": 24, "changes": 54, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/223671612fba9ad84298792fa5dcfe1675be9084/gcc%2Fdoc%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/223671612fba9ad84298792fa5dcfe1675be9084/gcc%2Fdoc%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finvoke.texi?ref=223671612fba9ad84298792fa5dcfe1675be9084", "patch": "@@ -239,8 +239,8 @@ in the following sections.\n -a  -ax  -d@var{letters}  -dumpspecs  -dumpmachine  -dumpversion @gol\n -fdump-unnumbered -fdump-translation-unit@r{[}-@var{n}@r{]} @gol\n -fdump-class-hierarchy@r{[}-@var{n}@r{]} @gol\n--fdump-ast-original@r{[}-@var{n}@r{]} -fdump-ast-optimized@r{[}-@var{n}@r{]} @gol\n--fdump-ast-inlined@r{[}-@var{n}@r{]} @gol\n+-fdump-tree-original@r{[}-@var{n}@r{]} -fdump-tree-optimized@r{[}-@var{n}@r{]} @gol\n+-fdump-tree-inlined@r{[}-@var{n}@r{]} @gol\n -fmem-report  -fpretend-float @gol\n -fprofile-arcs  -ftest-coverage  -ftime-report @gol\n -g  -g@var{level}  -gcoff  -gdwarf  -gdwarf-1  -gdwarf-1+  -gdwarf-2 @gol\n@@ -2974,39 +2974,45 @@ use diff on debugging dumps for compiler invocations with different\n options, in particular with and without @option{-g}.\n \n @item -fdump-translation-unit @r{(C and C++ only)}\n-@itemx -fdump-translation-unit-@var{number} @r{(C and C++ only)}\n+@itemx -fdump-translation-unit-@var{options} @r{(C and C++ only)}\n @opindex fdump-translation-unit\n Dump a representation of the tree structure for the entire translation\n unit to a file.  The file name is made by appending @file{.tu} to the\n-source file name.  If the @samp{-@var{number}} form is used, @var{number}\n-controls the details of the dump as described for the @option{-fdump-ast} options.\n+source file name.  If the @samp{-@var{options}} form is used, @var{options}\n+controls the details of the dump as described for the\n+@option{-fdump-tree} options.\n \n @item -fdump-class-hierarchy @r{(C++ only)}\n-@itemx -fdump-class-hierarchy-@var{number} @r{(C++ only)}\n+@itemx -fdump-class-hierarchy-@var{options} @r{(C++ only)}\n @opindex fdump-class-hierarchy\n Dump a representation of each class's hierarchy and virtual function\n table layout to a file.  The file name is made by appending @file{.class}\n-to the source file name.  If the @samp{-@var{number}} form is used, @var{number}\n-controls the details of the dump as described for the @option{-fdump-ast}\n-options.\n-\n-@item -fdump-ast-@var{switch} @r{(C++ only)}\n-@itemx -fdump-ast-@var{switch}-@var{number} @r{(C++ only)}\n-@opindex fdump-ast\n-Control the dumping at various stages of processing the abstract syntax\n-tree to a file.  The file name is generated by appending a switch\n-specific suffix to the source file name.  If the @samp{-@var{number}} form is\n-used, @var{number} is a bit mask which controls the details of the\n-dump.  The following bits are meaningful (these are not set symbolically,\n-as the primary function of these dumps is for debugging gcc itself):\n+to the source file name.  If the @samp{-@var{options}} form is used,\n+@var{options} controls the details of the dump as described for the\n+@option{-fdump-tree} options.\n+\n+@item -fdump-tree-@var{switch} @r{(C++ only)}\n+@itemx -fdump-tree-@var{switch}-@var{options} @r{(C++ only)}\n+@opindex fdump-tree\n+Control the dumping at various stages of processing the intermediate\n+language tree to a file.  The file name is generated by appending a switch\n+specific suffix to the source file name.  If the @samp{-@var{options}}\n+form is used, @var{options} is a list of @samp{-} separated options that\n+control the details of the dump. Not all options are applicable to all\n+dumps, those which are not meaningful will be ignored. The following\n+options are available\n \n @table @samp\n-@item bit0 (1)\n+@item address\n Print the address of each node.  Usually this is not meaningful as it\n-changes according to the environment and source file.\n-@item bit1 (2)\n-Inhibit dumping of members of a scope or body of a function, unless they\n-are reachable by some other path.\n+changes according to the environment and source file. Its primary use\n+is for tying up a dump file with a debug environment.\n+@item slim\n+Inhibit dumping of members of a scope or body of a function merely\n+because that scope has been reached. Only dump such items when they\n+are directly reachable by some other path.\n+@item all\n+Turn on all options.\n @end table\n \n The following tree dumps are possible:"}]}