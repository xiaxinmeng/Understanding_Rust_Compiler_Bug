{"sha": "f08dd1f8f36924447dc8e3add062acbdf457b417", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjA4ZGQxZjhmMzY5MjQ0NDdkYzhlM2FkZDA2MmFjYmRmNDU3YjQxNw==", "commit": {"author": {"name": "Zack Weinberg", "email": "zack@gcc.gnu.org", "date": "2005-03-21T17:58:06Z"}, "committer": {"name": "Zack Weinberg", "email": "zack@gcc.gnu.org", "date": "2005-03-21T17:58:06Z"}, "message": "* Makefile.in (BASEVER, DEVPHASE, DATESTAMP)\n\t(BASEVER_c, DEVPHASE_c, DATESTAMP_c)\n\t(BASEVER_s, DEVPHASE_s, DATESTAMP_s, version): Set with :=.\n\t(itoolsdir, itoolsdatadir): Move definition above new first use.\n\t(install-itoolsdirs): New rule.\n\t(install-mkheaders): Depend on install-itoolsdirs, not\n\tinstall-include-dir.\n\nFrom-SVN: r96821", "tree": {"sha": "f600a6326417c8ac11638600d88f47e1a72e2706", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f600a6326417c8ac11638600d88f47e1a72e2706"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f08dd1f8f36924447dc8e3add062acbdf457b417", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f08dd1f8f36924447dc8e3add062acbdf457b417", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f08dd1f8f36924447dc8e3add062acbdf457b417", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f08dd1f8f36924447dc8e3add062acbdf457b417/comments", "author": null, "committer": null, "parents": [{"sha": "979632a0dbfcf63013611d562ca95153697b061b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/979632a0dbfcf63013611d562ca95153697b061b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/979632a0dbfcf63013611d562ca95153697b061b"}], "stats": {"total": 67, "additions": 41, "deletions": 26}, "files": [{"sha": "04253e40bca1d66ec04a0e3094e95acc2f4ac18f", "filename": "gcc/ChangeLog", "status": "modified", "additions": 23, "deletions": 13, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f08dd1f8f36924447dc8e3add062acbdf457b417/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f08dd1f8f36924447dc8e3add062acbdf457b417/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=f08dd1f8f36924447dc8e3add062acbdf457b417", "patch": "@@ -1,3 +1,13 @@\n+2005-03-21  Zack Weinberg  <zack@codesourcery.com>\n+\n+\t* Makefile.in (BASEVER, DEVPHASE, DATESTAMP)\n+\t(BASEVER_c, DEVPHASE_c, DATESTAMP_c)\n+\t(BASEVER_s, DEVPHASE_s, DATESTAMP_s, version): Set with :=.\n+\t(itoolsdir, itoolsdatadir): Move definition above new first use.\n+\t(install-itoolsdirs): New rule.\n+\t(install-mkheaders): Depend on install-itoolsdirs, not\n+\tinstall-include-dir.\n+\n 2005-03-21  Kazu Hirata  <kazu@cs.umass.edu>\n \n \t* tree-into-ssa.c: Remove obsolete comments.\n@@ -405,7 +415,7 @@\n \n \t* tree-cfg.c (fold_cond_expr_cond): Use boolean types for condition.\n \n-\t* cgraph.c (cgraph_remove_node): Avoid loop in code deciding whether \n+\t* cgraph.c (cgraph_remove_node): Avoid loop in code deciding whether\n \tfunction body should be released; do not proactively release function\n \tbodies in non-unit-at-a-time mode.\n \n@@ -434,7 +444,7 @@\n 2005-03-17  Dorit Naishlos  <dorit@il.ibm.com>\n \n \tPR tree-optimization/20474\n-\t* tree-vect-analyze.c (vect_analyze_pointer_ref_access): Check the \n+\t* tree-vect-analyze.c (vect_analyze_pointer_ref_access): Check the\n \tsize_type of the relevant pointer. Check for COMPLETE_TYPE_P.\n \n 2005-03-17  Kazu Hirata  <kazu@cs.umass.edu>\n@@ -487,12 +497,12 @@\n \t(ia64_override_options): Move options parsing ...\n \t(ia64_handle_option): ... here.  New.\n \t* config/ia64/ia64.h (target_flags, MASK_BIG_ENDIAN, MASK_GNU_AS,\n-\tMASK_GNU_LD, MASK_NO_PIC, MASK_VOL_ASM_STOP, MASK_ILP32, \n+\tMASK_GNU_LD, MASK_NO_PIC, MASK_VOL_ASM_STOP, MASK_ILP32,\n \tMASK_REG_NAMES, MASK_NO_SDATA, MASK_CONST_GP, MASK_AUTO_PIC,\n \tMASK_INLINE_FLOAT_DIV_LAT, MASK_INLINE_FLOAT_DIV_THR,\n \tMASK_INLINE_INT_DIV_LAT, MASK_INLINE_INT_DIV_THR,\n-\tMASK_INLINE_SQRT_LAT, MASK_INLINE_SQRT_THR, MASK_DWARF2_ASM, \n-\tMASK_EARLY_STOP_BITS, TARGET_BIG_ENDIAN, TARGET_GNU_AS, TARGET_GNU_LD, \n+\tMASK_INLINE_SQRT_LAT, MASK_INLINE_SQRT_THR, MASK_DWARF2_ASM,\n+\tMASK_EARLY_STOP_BITS, TARGET_BIG_ENDIAN, TARGET_GNU_AS, TARGET_GNU_LD,\n \tTARGET_NO_PIC, TARGET_VOL_ASM_STOP, TARGET_ILP32, TARGET_REG_NAMES,\n \tTARGET_NO_SDATA, TARGET_CONST_GP, TARGET_AUTO_PIC,\n \tTARGET_INLINE_FLOAT_DIV_LAT, TARGET_INLINE_FLOAT_DIV_THR,\n@@ -564,7 +574,7 @@\n \t* config/alpha/alpha.opt: New file.\n \t* config/alpha/alpha.c (alpha_tune): New.  Rename all existing uses\n \tof alpha_cpu.\n-\t(alpha_cpu_string, alpha_tune_string, alpha_tp_string, \n+\t(alpha_cpu_string, alpha_tune_string, alpha_tp_string,\n \talpha_fprm_string, alpha_fptm_string): Make static.\n \t(alpha_tls_size_string): Remove.\n \t(alpha_handle_option): New.\n@@ -573,7 +583,7 @@\n \t(TARGET_DEFAULT_TARGET_FLAGS): New.\n \t(TARGET_HANDLE_OPTION): New.\n \t* config/alpha/alpha.h (alpha_tune): Declare.\n-\t(MASK_FP, MASK_FPREGS, TARGET_FPREGS, MASK_GAS, TARGET_GAS, \n+\t(MASK_FP, MASK_FPREGS, TARGET_FPREGS, MASK_GAS, TARGET_GAS,\n \tMASK_IEEE_CONFORMANT, TARGET_IEEE_CONFORMANT, MASK_IEEE, TARGET_IEEE,\n \tMASK_IEEE_WITH_INEXACT, TARGET_IEEE_WITH_INEXACT, MASK_BUILD_CONSTANTS,\n \tTARGET_BUILD_CONSTANTS, MASK_FLOAT_VAX, TARGET_FLOAT_VAX, MASK_BWX,\n@@ -612,7 +622,7 @@\n \t* tree-vectorizer.c (new_vec_stmt_info): Initialize\n \tSTMT_VINFO_SUBVARS to NULL.\n \t* tree-vect-analyze.c (vect_analyze_data_refs): Ditto.\n-\t\n+\n 2005-03-16 Dale Johannesen  <dalej@apple.com>\n \n \t* rtlanal.c (find_first_parameter_load):  Rewrite to\n@@ -645,7 +655,7 @@\n \t(process_pending_assemble_output_defs): Remove.\n \n 2005-03-16  Daniel Berlin  <dberlin@dberlin.org>\n-\t\n+\n \tFix PR tree-optimization/20489\n \n \t* tree-ssa-alias.c (push_fields_onto_fieldstack): DTRT\n@@ -654,7 +664,7 @@\n 2005-03-16  Daniel Berlin  <dberlin@dberlin.org>\n \n \tFix PR tree-optimization/20490\n-\t\n+\n \t* tree-ssa-pre.c (create_expression_by_pieces): Use\n \tforce_gimple_operand on result of fold.\n \n@@ -678,10 +688,10 @@\n \tfold_builtin_strncpy.\n \n 2005-03-16  Steven Bosscher  <stevenb@suse.de>\n-            Dorit Naishlos  <dorit@il.ibm.com>\n+\t    Dorit Naishlos  <dorit@il.ibm.com>\n \n-\t* tree-vect-analyze.c (vect_enhance_data_refs_alignment): Copy \n-\tUNITS_PER_SIMD_WORD to a local variable to avoid a \"division by zero\" \n+\t* tree-vect-analyze.c (vect_enhance_data_refs_alignment): Copy\n+\tUNITS_PER_SIMD_WORD to a local variable to avoid a \"division by zero\"\n \terror.\n \n 2005-03-16  Steven Bosscher  <stevenb@suse.de>"}, {"sha": "5570d9f2590825ad72ceea87af521f3384fe6d29", "filename": "gcc/Makefile.in", "status": "modified", "additions": 18, "deletions": 13, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f08dd1f8f36924447dc8e3add062acbdf457b417/gcc%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f08dd1f8f36924447dc8e3add062acbdf457b417/gcc%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FMakefile.in?ref=f08dd1f8f36924447dc8e3add062acbdf457b417", "patch": "@@ -685,24 +685,24 @@ GTM_H     = tm.h      $(tm_file_list)\n TM_H      = $(GTM_H) insn-constants.h insn-flags.h\n \n # Variables for version information.\n-BASEVER   = $(srcdir)/BASE-VER  # 4.x.y\n-DEVPHASE  = $(srcdir)/DEV-PHASE # experimental, prerelease, \"\"\n-DATESTAMP = $(srcdir)/DATESTAMP # YYYYMMDD or empty\n+BASEVER     := $(srcdir)/BASE-VER  # 4.x.y\n+DEVPHASE    := $(srcdir)/DEV-PHASE # experimental, prerelease, \"\"\n+DATESTAMP   := $(srcdir)/DATESTAMP # YYYYMMDD or empty\n \n-BASEVER_c   = $(shell cat $(BASEVER))\n-DEVPHASE_c  = $(shell cat $(DEVPHASE))\n-DATESTAMP_c = $(shell cat $(DATESTAMP))\n+BASEVER_c   := $(shell cat $(BASEVER))\n+DEVPHASE_c  := $(shell cat $(DEVPHASE))\n+DATESTAMP_c := $(shell cat $(DATESTAMP))\n \n-version     = $(BASEVER_c)\n+version     := $(BASEVER_c)\n \n # For use in version.c - double quoted strings, with appropriate\n # surrounding punctuation and spaces, and with the datestamp and\n # development phase collapsed to the empty string in release mode\n # (i.e. if DEVPHASE_c is empty).  The space immediately after the\n # comma in the $(if ...) constructs is significant - do not remove it.\n-BASEVER_s   = \"\\\"$(BASEVER_c)\\\"\"\n-DEVPHASE_s  = \"\\\"$(if $(DEVPHASE_c), ($(DEVPHASE_c)))\\\"\"\n-DATESTAMP_s = \"\\\"$(if $(DEVPHASE_c), $(DATESTAMP_c))\\\"\"\n+BASEVER_s   := \"\\\"$(BASEVER_c)\\\"\"\n+DEVPHASE_s  := \"\\\"$(if $(DEVPHASE_c), ($(DEVPHASE_c)))\\\"\"\n+DATESTAMP_s := \"\\\"$(if $(DEVPHASE_c), $(DATESTAMP_c))\\\"\"\n \n # Shorthand variables for dependency lists.\n TARGET_H = $(TM_H) target.h insn-modes.h\n@@ -3424,6 +3424,13 @@ install-include-dir: installdirs\n \tmkdir $(DESTDIR)$(libsubdir)/include\n \t-chmod a+rx $(DESTDIR)$(libsubdir)/include\n \n+# Create or recreate the install-tools include file directory.\n+itoolsdir = $(libexecsubdir)/install-tools\n+itoolsdatadir = $(libsubdir)/install-tools\n+install-itoolsdirs: installdirs\n+\t$(mkinstalldirs) $(DESTDIR)$(itoolsdatadir)/include\n+\t$(mkinstalldirs) $(DESTDIR)$(itoolsdir)\n+\n # Install the include directory using tar.\n install-headers-tar: stmp-int-hdrs $(STMP_FIXPROTO) install-include-dir\n # We use `pwd`/include instead of just include to problems with CDPATH\n@@ -3446,10 +3453,8 @@ install-headers-cpio: stmp-int-hdrs $(STMP_FIXPROTO) install-include-dir\n install-headers-cp: stmp-int-hdrs $(STMP_FIXPROTO) install-include-dir\n \tcp -p -r include $(DESTDIR)$(libsubdir)\n \n-itoolsdir = $(libexecsubdir)/install-tools\n-itoolsdatadir = $(libsubdir)/install-tools\n # Install supporting files for fixincludes to be run later.\n-install-mkheaders: stmp-int-hdrs $(STMP_FIXPROTO) install-include-dir \\\n+install-mkheaders: stmp-int-hdrs $(STMP_FIXPROTO) install-itoolsdirs \\\n   macro_list xlimits.h\n \tfor file in $(USER_H); do \\\n \t  realfile=`echo $$file | sed -e 's|.*/\\([^/]*\\)$$|\\1|'`; \\"}]}