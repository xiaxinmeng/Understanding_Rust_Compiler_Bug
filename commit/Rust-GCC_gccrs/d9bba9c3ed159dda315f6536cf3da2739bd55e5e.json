{"sha": "d9bba9c3ed159dda315f6536cf3da2739bd55e5e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDliYmE5YzNlZDE1OWRkYTMxNWY2NTM2Y2YzZGEyNzM5YmQ1NWU1ZQ==", "commit": {"author": {"name": "Kaveh R. Ghazi", "email": "ghazi@caip.rutgers.edu", "date": "1999-11-01T19:38:06Z"}, "committer": {"name": "Kaveh Ghazi", "email": "ghazi@gcc.gnu.org", "date": "1999-11-01T19:38:06Z"}, "message": "* output.h (assemble_end_function, assemble_destructor,\n\n        assemble_constructor, assemble_gc_entry, assemble_global,\n        assemble_label, output_constant_pool) Constify a char*.\n\n        * varasm.c (assemble_destructor, assemble_constructor,\n        assemble_gc_entry, assemble_end_function, assemble_global,\n        assemble_label, output_constant_pool): Likewise.\n\nFrom-SVN: r30323", "tree": {"sha": "c1117c7318fe53c98aa1fbbeac7f2cce6e188f6e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c1117c7318fe53c98aa1fbbeac7f2cce6e188f6e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d9bba9c3ed159dda315f6536cf3da2739bd55e5e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d9bba9c3ed159dda315f6536cf3da2739bd55e5e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d9bba9c3ed159dda315f6536cf3da2739bd55e5e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d9bba9c3ed159dda315f6536cf3da2739bd55e5e/comments", "author": null, "committer": null, "parents": [{"sha": "99d525c9a005e1021b75f79e7c580f8ceafd23a2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/99d525c9a005e1021b75f79e7c580f8ceafd23a2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/99d525c9a005e1021b75f79e7c580f8ceafd23a2"}], "stats": {"total": 38, "additions": 24, "deletions": 14}, "files": [{"sha": "3dd474df0e139ac97f4f367691abea6b57b7fc6f", "filename": "gcc/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d9bba9c3ed159dda315f6536cf3da2739bd55e5e/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d9bba9c3ed159dda315f6536cf3da2739bd55e5e/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=d9bba9c3ed159dda315f6536cf3da2739bd55e5e", "patch": "@@ -1,3 +1,13 @@\n+Mon Nov  1 14:35:50 1999  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n+\n+\t* output.h (assemble_end_function, assemble_destructor,\n+\tassemble_constructor, assemble_gc_entry, assemble_global,\n+\tassemble_label, output_constant_pool) Constify a char*.\n+\n+\t* varasm.c (assemble_destructor, assemble_constructor,\n+\tassemble_gc_entry, assemble_end_function, assemble_global,\n+\tassemble_label, output_constant_pool): Likewise.\n+\n Mon Nov  1 14:22:51 1999  Nick Clifton  <nickc@cygnus.com>\n \n \t* config/arm/thumb.c (thumb_expand_prologue): Add comments"}, {"sha": "8894da0efda00b299b60f950e63c1d9e21dbf1e1", "filename": "gcc/output.h", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d9bba9c3ed159dda315f6536cf3da2739bd55e5e/gcc%2Foutput.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d9bba9c3ed159dda315f6536cf3da2739bd55e5e/gcc%2Foutput.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Foutput.h?ref=d9bba9c3ed159dda315f6536cf3da2739bd55e5e", "patch": "@@ -237,7 +237,7 @@ extern void assemble_start_function\tPROTO((tree, char *));\n \n /* Output assembler code associated with defining the size of the\n    function.  DECL describes the function.  NAME is the function's name.  */\n-extern void assemble_end_function\tPROTO((tree, char *));\n+extern void assemble_end_function\tPROTO((tree, const char *));\n \n /* Assemble everything that is needed for a variable or function declaration.\n    Not used for automatic variables, and not used for function definitions.\n@@ -262,14 +262,14 @@ extern void assemble_external\t\tPROTO((tree));\n \n    NAME should be the name of a global function to be called\n    at exit time.  This name is output using assemble_name.  */\n-extern void assemble_destructor\t\tPROTO((char *));\n+extern void assemble_destructor\t\tPROTO((const char *));\n \n /* Likewise for global constructors.  */\n-extern void assemble_constructor\tPROTO((char *));\n+extern void assemble_constructor\tPROTO((const char *));\n \n /* Likewise for entries we want to record for garbage collection.\n    Garbage collection is still under development.  */\n-extern void assemble_gc_entry\t\tPROTO((char *));\n+extern void assemble_gc_entry\t\tPROTO((const char *));\n \n /* Assemble code to leave SIZE bytes of zeros.  */\n extern void assemble_zeros\t\tPROTO((int));\n@@ -286,10 +286,10 @@ extern void assemble_external_libcall\tPROTO((rtx));\n #endif\n \n /* Declare the label NAME global.  */\n-extern void assemble_global\t\tPROTO((char *));\n+extern void assemble_global\t\tPROTO((const char *));\n \n /* Assemble a label named NAME.  */\n-extern void assemble_label\t\tPROTO((char *));\n+extern void assemble_label\t\tPROTO((const char *));\n \n /* Output to FILE a reference to the assembler name of a C-level name NAME.\n    If NAME starts with a *, the rest of NAME is output verbatim.\n@@ -334,7 +334,7 @@ extern rtx peephole\t\t\tPROTO((rtx));\n \n #ifdef TREE_CODE\n /* Write all the constants in the constant pool.  */\n-extern void output_constant_pool\tPROTO((char *, tree));\n+extern void output_constant_pool\tPROTO((const char *, tree));\n \n /* Return nonzero if VALUE is a valid constant-valued expression\n    for use in initializing a static variable; one that can be an"}, {"sha": "5d342de5035bc261d1898e58c1a7cb4c9653b0b1", "filename": "gcc/varasm.c", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d9bba9c3ed159dda315f6536cf3da2739bd55e5e/gcc%2Fvarasm.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d9bba9c3ed159dda315f6536cf3da2739bd55e5e/gcc%2Fvarasm.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fvarasm.c?ref=d9bba9c3ed159dda315f6536cf3da2739bd55e5e", "patch": "@@ -923,7 +923,7 @@ assemble_asm (string)\n \n void\n assemble_destructor (name)\n-     char *name;\n+     const char *name;\n {\n #ifdef ASM_OUTPUT_DESTRUCTOR\n   ASM_OUTPUT_DESTRUCTOR (asm_out_file, name);\n@@ -943,7 +943,7 @@ assemble_destructor (name)\n \n void\n assemble_constructor (name)\n-     char *name;\n+     const char *name;\n {\n #ifdef ASM_OUTPUT_CONSTRUCTOR\n   ASM_OUTPUT_CONSTRUCTOR (asm_out_file, name);\n@@ -964,7 +964,7 @@ assemble_constructor (name)\n \n void\n assemble_gc_entry (name)\n-     char *name;\n+     const char *name;\n {\n #ifdef ASM_OUTPUT_GC_ENTRY\n   ASM_OUTPUT_GC_ENTRY (asm_out_file, name);\n@@ -1101,7 +1101,7 @@ assemble_start_function (decl, fnname)\n void\n assemble_end_function (decl, fnname)\n      tree decl;\n-     char *fnname;\n+     const char *fnname;\n {\n #ifdef ASM_DECLARE_FUNCTION_SIZE\n   ASM_DECLARE_FUNCTION_SIZE (asm_out_file, fnname, decl);\n@@ -1759,7 +1759,7 @@ assemble_external_libcall (fun)\n \n void\n assemble_global (name)\n-     char *name;\n+     const char *name;\n {\n   ASM_GLOBALIZE_LABEL (asm_out_file, name);\n }\n@@ -1768,7 +1768,7 @@ assemble_global (name)\n \n void\n assemble_label (name)\n-     char *name;\n+     const char *name;\n {\n   ASM_OUTPUT_LABEL (asm_out_file, name);\n }\n@@ -3744,7 +3744,7 @@ get_pool_size ()\n \n void\n output_constant_pool (fnname, fndecl)\n-  char *fnname ATTRIBUTE_UNUSED;\n+  const char *fnname ATTRIBUTE_UNUSED;\n   tree fndecl ATTRIBUTE_UNUSED;\n {\n   struct pool_constant *pool;"}]}