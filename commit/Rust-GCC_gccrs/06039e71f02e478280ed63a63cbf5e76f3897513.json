{"sha": "06039e71f02e478280ed63a63cbf5e76f3897513", "node_id": "C_kwDOANBUbNoAKDA2MDM5ZTcxZjAyZTQ3ODI4MGVkNjNhNjNjYmY1ZTc2ZjM4OTc1MTM", "commit": {"author": {"name": "Richard Ball", "email": "richard.ball@arm.com", "date": "2022-07-18T10:30:04Z"}, "committer": {"name": "Richard Sandiford", "email": "richard.sandiford@arm.com", "date": "2022-07-18T10:30:04Z"}, "message": "Replace manual swapping idiom with std::swap in aarch64.cc\n\ngcc/config/aarch64/aarch64.cc has a few manual swapping idioms of the form:\n\nx = in0, in0 = in1, in1 = x;\n\nThe preferred way is using the standard:\n\nstd::swap (in0, in1);\n\nWe should just fix these to use std::swap.\nThis will also allow us to eliminate the x temporary rtx.\n\ngcc/ChangeLog:\n\n\t* config/aarch64/aarch64.cc (aarch64_evpc_trn): Use std:swap.\n\t(aarch64_evpc_uzp): Likewise.\n\t(aarch64_evpc_zip): Likewise.", "tree": {"sha": "97b829e799338f3a1e254356b0e2c83124d7dd5d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/97b829e799338f3a1e254356b0e2c83124d7dd5d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/06039e71f02e478280ed63a63cbf5e76f3897513", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/06039e71f02e478280ed63a63cbf5e76f3897513", "html_url": "https://github.com/Rust-GCC/gccrs/commit/06039e71f02e478280ed63a63cbf5e76f3897513", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/06039e71f02e478280ed63a63cbf5e76f3897513/comments", "author": {"login": "ricbal02", "id": 89904277, "node_id": "MDQ6VXNlcjg5OTA0Mjc3", "avatar_url": "https://avatars.githubusercontent.com/u/89904277?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ricbal02", "html_url": "https://github.com/ricbal02", "followers_url": "https://api.github.com/users/ricbal02/followers", "following_url": "https://api.github.com/users/ricbal02/following{/other_user}", "gists_url": "https://api.github.com/users/ricbal02/gists{/gist_id}", "starred_url": "https://api.github.com/users/ricbal02/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ricbal02/subscriptions", "organizations_url": "https://api.github.com/users/ricbal02/orgs", "repos_url": "https://api.github.com/users/ricbal02/repos", "events_url": "https://api.github.com/users/ricbal02/events{/privacy}", "received_events_url": "https://api.github.com/users/ricbal02/received_events", "type": "User", "site_admin": false}, "committer": {"login": "rsandifo-arm", "id": 28043039, "node_id": "MDQ6VXNlcjI4MDQzMDM5", "avatar_url": "https://avatars.githubusercontent.com/u/28043039?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rsandifo-arm", "html_url": "https://github.com/rsandifo-arm", "followers_url": "https://api.github.com/users/rsandifo-arm/followers", "following_url": "https://api.github.com/users/rsandifo-arm/following{/other_user}", "gists_url": "https://api.github.com/users/rsandifo-arm/gists{/gist_id}", "starred_url": "https://api.github.com/users/rsandifo-arm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rsandifo-arm/subscriptions", "organizations_url": "https://api.github.com/users/rsandifo-arm/orgs", "repos_url": "https://api.github.com/users/rsandifo-arm/repos", "events_url": "https://api.github.com/users/rsandifo-arm/events{/privacy}", "received_events_url": "https://api.github.com/users/rsandifo-arm/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2907bfc3412dd8aef6c6acc17f2152a4e0ac4979", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2907bfc3412dd8aef6c6acc17f2152a4e0ac4979", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2907bfc3412dd8aef6c6acc17f2152a4e0ac4979"}], "stats": {"total": 12, "additions": 6, "deletions": 6}, "files": [{"sha": "4b486aeea90ea2afb9cdd96a4dbe15c5bb2abd7a", "filename": "gcc/config/aarch64/aarch64.cc", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/06039e71f02e478280ed63a63cbf5e76f3897513/gcc%2Fconfig%2Faarch64%2Faarch64.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/06039e71f02e478280ed63a63cbf5e76f3897513/gcc%2Fconfig%2Faarch64%2Faarch64.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Faarch64.cc?ref=06039e71f02e478280ed63a63cbf5e76f3897513", "patch": "@@ -23498,7 +23498,7 @@ aarch64_evpc_trn (struct expand_vec_perm_d *d)\n {\n   HOST_WIDE_INT odd;\n   poly_uint64 nelt = d->perm.length ();\n-  rtx out, in0, in1, x;\n+  rtx out, in0, in1;\n   machine_mode vmode = d->vmode;\n \n   if (GET_MODE_UNIT_SIZE (vmode) > 8)\n@@ -23522,7 +23522,7 @@ aarch64_evpc_trn (struct expand_vec_perm_d *d)\n      at the head of aarch64-sve.md for details.  */\n   if (BYTES_BIG_ENDIAN && d->vec_flags == VEC_ADVSIMD)\n     {\n-      x = in0, in0 = in1, in1 = x;\n+      std::swap (in0, in1);\n       odd = !odd;\n     }\n   out = d->target;\n@@ -23592,7 +23592,7 @@ static bool\n aarch64_evpc_uzp (struct expand_vec_perm_d *d)\n {\n   HOST_WIDE_INT odd;\n-  rtx out, in0, in1, x;\n+  rtx out, in0, in1;\n   machine_mode vmode = d->vmode;\n \n   if (GET_MODE_UNIT_SIZE (vmode) > 8)\n@@ -23615,7 +23615,7 @@ aarch64_evpc_uzp (struct expand_vec_perm_d *d)\n      at the head of aarch64-sve.md for details.  */\n   if (BYTES_BIG_ENDIAN && d->vec_flags == VEC_ADVSIMD)\n     {\n-      x = in0, in0 = in1, in1 = x;\n+      std::swap (in0, in1);\n       odd = !odd;\n     }\n   out = d->target;\n@@ -23631,7 +23631,7 @@ aarch64_evpc_zip (struct expand_vec_perm_d *d)\n {\n   unsigned int high;\n   poly_uint64 nelt = d->perm.length ();\n-  rtx out, in0, in1, x;\n+  rtx out, in0, in1;\n   machine_mode vmode = d->vmode;\n \n   if (GET_MODE_UNIT_SIZE (vmode) > 8)\n@@ -23656,7 +23656,7 @@ aarch64_evpc_zip (struct expand_vec_perm_d *d)\n      at the head of aarch64-sve.md for details.  */\n   if (BYTES_BIG_ENDIAN && d->vec_flags == VEC_ADVSIMD)\n     {\n-      x = in0, in0 = in1, in1 = x;\n+      std::swap (in0, in1);\n       high = !high;\n     }\n   out = d->target;"}]}