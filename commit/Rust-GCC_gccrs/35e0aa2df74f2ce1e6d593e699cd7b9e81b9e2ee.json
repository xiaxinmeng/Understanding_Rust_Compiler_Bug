{"sha": "35e0aa2df74f2ce1e6d593e699cd7b9e81b9e2ee", "node_id": "C_kwDOANBUbNoAKDM1ZTBhYTJkZjc0ZjJjZTFlNmQ1OTNlNjk5Y2Q3YjllODFiOWUyZWU", "commit": {"author": {"name": "Doug Rupp", "email": "rupp@adacore.com", "date": "2022-06-08T20:32:51Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "derodat@adacore.com", "date": "2022-07-06T13:29:48Z"}, "message": "[Ada] Vxworks7* - Makefile.rtl rtp vs rtp-smp cleanup\n\nOnly smp runtimes are built for vxworks7*, even though the -smp suffix\nis removed during install. Therefore, in general, the build macros for\nthe non-smp runtimes are superfluous except on the legacy ppc-vxworks6\ntarget where both the smp and non-smp runtime are built.  Lastly, an\nerror message is added if a runtime build is commanded that doesn't\nexist, rather then letting the build mysteriously fail.\n\ngcc/ada/\n\n\t* Makefile.rtl [arm,aarch64 vxworks7]: Remove rtp and kernel\n\tbuild macros and set an error variable if needed.\n\t[x86,x86_vxworks7]: Likewise.\n\t[ppc,ppc64]: Set an error variable if needed.\n\t(rts-err): New phony Makefile target.\n\t(setup-rts): Depend on rts-err.", "tree": {"sha": "564e633ec3b7bc4f87e6b4ac246f96c6a154e33a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/564e633ec3b7bc4f87e6b4ac246f96c6a154e33a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/35e0aa2df74f2ce1e6d593e699cd7b9e81b9e2ee", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/35e0aa2df74f2ce1e6d593e699cd7b9e81b9e2ee", "html_url": "https://github.com/Rust-GCC/gccrs/commit/35e0aa2df74f2ce1e6d593e699cd7b9e81b9e2ee", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/35e0aa2df74f2ce1e6d593e699cd7b9e81b9e2ee/comments", "author": {"login": "Cementitious", "id": 115579865, "node_id": "U_kgDOBuOb2Q", "avatar_url": "https://avatars.githubusercontent.com/u/115579865?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Cementitious", "html_url": "https://github.com/Cementitious", "followers_url": "https://api.github.com/users/Cementitious/followers", "following_url": "https://api.github.com/users/Cementitious/following{/other_user}", "gists_url": "https://api.github.com/users/Cementitious/gists{/gist_id}", "starred_url": "https://api.github.com/users/Cementitious/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Cementitious/subscriptions", "organizations_url": "https://api.github.com/users/Cementitious/orgs", "repos_url": "https://api.github.com/users/Cementitious/repos", "events_url": "https://api.github.com/users/Cementitious/events{/privacy}", "received_events_url": "https://api.github.com/users/Cementitious/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pmderodat", "id": 758452, "node_id": "MDQ6VXNlcjc1ODQ1Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/758452?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pmderodat", "html_url": "https://github.com/pmderodat", "followers_url": "https://api.github.com/users/pmderodat/followers", "following_url": "https://api.github.com/users/pmderodat/following{/other_user}", "gists_url": "https://api.github.com/users/pmderodat/gists{/gist_id}", "starred_url": "https://api.github.com/users/pmderodat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pmderodat/subscriptions", "organizations_url": "https://api.github.com/users/pmderodat/orgs", "repos_url": "https://api.github.com/users/pmderodat/repos", "events_url": "https://api.github.com/users/pmderodat/events{/privacy}", "received_events_url": "https://api.github.com/users/pmderodat/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "baa3015d8efebd731701d6985bb7a7083db244a8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/baa3015d8efebd731701d6985bb7a7083db244a8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/baa3015d8efebd731701d6985bb7a7083db244a8"}], "stats": {"total": 74, "additions": 25, "deletions": 49}, "files": [{"sha": "3ae4e23d414340d2859fa654dd10a159ab15f27e", "filename": "gcc/ada/Makefile.rtl", "status": "modified", "additions": 25, "deletions": 49, "changes": 74, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/35e0aa2df74f2ce1e6d593e699cd7b9e81b9e2ee/gcc%2Fada%2FMakefile.rtl", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/35e0aa2df74f2ce1e6d593e699cd7b9e81b9e2ee/gcc%2Fada%2FMakefile.rtl", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FMakefile.rtl?ref=35e0aa2df74f2ce1e6d593e699cd7b9e81b9e2ee", "patch": "@@ -1124,6 +1124,7 @@ ifeq ($(strip $(filter-out powerpc% wrs vxworks vxworks7%, $(target_cpu) $(targe\n \n   EH_MECHANISM=-gcc\n \n+  # The rtp and kernel sections must be retained for the sake of ppc-vx6\n   ifeq ($(strip $(filter-out rtp,$(THREAD_KIND))),)\n     LIBGNAT_TARGET_PAIRS += \\\n     s-vxwext.ads<libgnarl/s-vxwext__rtp.ads \\\n@@ -1153,15 +1154,15 @@ ifeq ($(strip $(filter-out powerpc% wrs vxworks vxworks7%, $(target_cpu) $(targe\n \n         EXTRA_LIBGNAT_OBJS+=affinity.o\n       else\n-        LIBGNAT_TARGET_PAIRS += \\\n-        s-interr.adb<libgnarl/s-interr__vxworks.adb \\\n-        s-tpopsp.adb<libgnarl/s-tpopsp__vxworks.adb\n-\n         ifeq ($(strip $(filter-out kernel,$(THREAD_KIND))),)\n           LIBGNAT_TARGET_PAIRS += \\\n+          s-interr.adb<libgnarl/s-interr__vxworks.adb \\\n+          s-tpopsp.adb<libgnarl/s-tpopsp__vxworks.adb \\\n           s-vxwext.ads<libgnarl/s-vxwext__kernel.ads \\\n           s-vxwext.adb<libgnarl/s-vxwext__kernel.adb \\\n           system.ads<libgnat/$(SVX)-$(ARCH_STR)-kernel.ads\n+        else\n+          RTSERR = $(error NO SUCH RUNTIME)\n         endif\n       endif\n       EXTRA_GNATRTL_NONTASKING_OBJS+=i-vxinco.o i-vxwork.o i-vxwoio.o\n@@ -1257,48 +1258,31 @@ ifeq ($(strip $(filter-out %86 x86_64 wrs vxworks7%, $(target_cpu) $(target_vend\n \n   GNATLIBCFLAGS_FOR_C := $(GNATLIBCFLAGS_FOR_C) -D__VXSIM_CPU__=$(VXSIM_CPU)\n \n-  ifeq ($(strip $(filter-out rtp,$(THREAD_KIND))),)\n+  ifeq ($(strip $(filter-out rtp-smp, $(THREAD_KIND))),)\n     LIBGNAT_TARGET_PAIRS += \\\n+    s-mudido.adb<libgnarl/s-mudido__affinity.adb \\\n     s-vxwext.ads<libgnarl/s-vxwext__rtp.ads \\\n-    s-vxwext.adb<libgnarl/s-vxwext__rtp.adb \\\n-    s-tpopsp.adb<libgnarl/s-tpopsp__vxworks-rtp.adb \\\n-    system.ads<libgnat/system-vxworks7-x86-rtp.ads\n+    s-vxwext.adb<libgnarl/s-vxwext__rtp-smp.adb \\\n+    s-tpopsp.adb<libgnarl/s-tpopsp__vxworks-tls.adb \\\n+    system.ads<libgnat/system-vxworks7-$(X86CPU)-rtp-smp.ads\n+\n+    EXTRA_LIBGNAT_OBJS+=affinity.o\n   else\n-    ifeq ($(strip $(filter-out rtp-smp, $(THREAD_KIND))),)\n+    ifeq ($(strip $(filter-out kernel-smp, $(THREAD_KIND))),)\n       LIBGNAT_TARGET_PAIRS += \\\n+      s-interr.adb<libgnarl/s-interr__vxworks.adb \\\n       s-mudido.adb<libgnarl/s-mudido__affinity.adb \\\n-      s-vxwext.ads<libgnarl/s-vxwext__rtp.ads \\\n-      s-vxwext.adb<libgnarl/s-vxwext__rtp-smp.adb \\\n       s-tpopsp.adb<libgnarl/s-tpopsp__vxworks-tls.adb \\\n-      system.ads<libgnat/system-vxworks7-$(X86CPU)-rtp-smp.ads\n+      s-vxwext.ads<libgnarl/s-vxwext__kernel.ads \\\n+      s-vxwext.adb<libgnarl/s-vxwext__kernel-smp.adb \\\n+      system.ads<libgnat/system-vxworks7-$(X86CPU)-kernel.ads\n \n       EXTRA_LIBGNAT_OBJS+=affinity.o\n     else\n-      ifeq ($(strip $(filter-out kernel-smp, $(THREAD_KIND))),)\n-        LIBGNAT_TARGET_PAIRS += \\\n-        s-interr.adb<libgnarl/s-interr__vxworks.adb \\\n-        s-mudido.adb<libgnarl/s-mudido__affinity.adb \\\n-        s-tpopsp.adb<libgnarl/s-tpopsp__vxworks-tls.adb \\\n-        s-vxwext.ads<libgnarl/s-vxwext__kernel.ads \\\n-        s-vxwext.adb<libgnarl/s-vxwext__kernel-smp.adb \\\n-        system.ads<libgnat/system-vxworks7-$(X86CPU)-kernel.ads\n-\n-        EXTRA_LIBGNAT_OBJS+=affinity.o\n-      else\n-        LIBGNAT_TARGET_PAIRS += \\\n-        s-interr.adb<libgnarl/s-interr__vxworks.adb \\\n-        s-tpopsp.adb<libgnarl/s-tpopsp__vxworks.adb\n-\n-        ifeq ($(strip $(filter-out kernel,$(THREAD_KIND))),)\n-          LIBGNAT_TARGET_PAIRS += \\\n-          s-vxwext.ads<libgnarl/s-vxwext__kernel.ads \\\n-          s-vxwext.adb<libgnarl/s-vxwext__kernel.adb \\\n-          system.ads<libgnat/system-vxworks7-x86-kernel.ads\n-        endif\n-      endif\n-\n-      EXTRA_GNATRTL_NONTASKING_OBJS += i-vxinco.o i-vxwork.o i-vxwoio.o\n+      RTSERR = $(error NO SUCH RUNTIME)\n     endif\n+\n+    EXTRA_GNATRTL_NONTASKING_OBJS += i-vxinco.o i-vxwork.o i-vxwoio.o\n   endif\n \n   EXTRA_GNATRTL_NONTASKING_OBJS += s-stchop.o\n@@ -1385,18 +1369,7 @@ ifeq ($(strip $(filter-out aarch64 arm wrs vxworks7%, $(target_cpu) $(target_ven\n       EXTRA_LIBGNAT_OBJS+=$(SIGTRAMP_OBJ)\n       EXTRA_LIBGNAT_SRCS+=$(VX_SIGTRAMP_EXTRA_SRCS)\n     else\n-      LIBGNAT_TARGET_PAIRS += \\\n-      s-tpopsp.adb<libgnarl/s-tpopsp__vxworks.adb \\\n-      system.ads<libgnat/system-vxworks7-$(ARCH_STR).ads\n-\n-      ifeq ($(strip $(filter-out kernel,$(THREAD_KIND))),)\n-        LIBGNAT_TARGET_PAIRS += \\\n-        s-vxwext.ads<libgnarl/s-vxwext__kernel.ads \\\n-        s-vxwext.adb<libgnarl/s-vxwext__kernel.adb\n-\n-        EXTRA_LIBGNAT_OBJS+=$(SIGTRAMP_OBJ)\n-        EXTRA_LIBGNAT_SRCS+=$(VX_SIGTRAMP_EXTRA_SRCS)\n-      endif\n+      RTSERR = $(error NO SUCH RUNTIME)\n     endif\n   endif\n \n@@ -2879,7 +2852,10 @@ ADA_EXCLUDE_FILES=$(filter-out \\\n   $(patsubst %$(objext),%.adb,$(GNATRTL_OBJS)), \\\n   $(ADA_EXCLUDE_SRCS))\n \n-setup-rts: force\n+.PHONY: rts-err\n+rts-err: ; $(RTSERR)\n+\n+setup-rts: rts-err force\n \t$(RMDIR) $(RTSDIR)\n \t$(MKDIR) $(RTSDIR)\n \t$(CHMOD) u+w $(RTSDIR)"}]}