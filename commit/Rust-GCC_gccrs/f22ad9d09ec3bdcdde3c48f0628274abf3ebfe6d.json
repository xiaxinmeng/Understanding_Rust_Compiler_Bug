{"sha": "f22ad9d09ec3bdcdde3c48f0628274abf3ebfe6d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjIyYWQ5ZDA5ZWMzYmRjZGRlM2M0OGYwNjI4Mjc0YWJmM2ViZmU2ZA==", "commit": {"author": {"name": "Benjamin Kosnik", "email": "bkoz@gcc.gnu.org", "date": "2000-07-04T02:24:54Z"}, "committer": {"name": "Benjamin Kosnik", "email": "bkoz@gcc.gnu.org", "date": "2000-07-04T02:24:54Z"}, "message": "[multiple changes]\n\n\n2000-07-03  scott snyder  <snyder@fnal.gov>\n\n        * bits/locale_facets.tcc (_M_extract): Only figure out the base\n        from the input if base == 0.\n        * testsuite/27_io/istream_extractor_arith.cc: Test reading a\n        number with a leading `0' in hex mode.\n\n\t* shadow/bits/std_cmath.h: Fix typo in _GLIBCPP_HAVE_CEILL test.\n\n        * mkinclosure: Change `==' to `=' in test.\n\n2000-07-03  Chip Salzenberg  <chip@valinux.com>\n\n        * src/Makefile.am (libio_headers): _G_config.h is found in srcdir,\n        not builddir.\n        * src/Makefile.in: Regenerate.\n\nFrom-SVN: r34860", "tree": {"sha": "568866ec26605cc2c52444548e54bae9fa2a9a78", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/568866ec26605cc2c52444548e54bae9fa2a9a78"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f22ad9d09ec3bdcdde3c48f0628274abf3ebfe6d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f22ad9d09ec3bdcdde3c48f0628274abf3ebfe6d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f22ad9d09ec3bdcdde3c48f0628274abf3ebfe6d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f22ad9d09ec3bdcdde3c48f0628274abf3ebfe6d/comments", "author": null, "committer": null, "parents": [{"sha": "041c31944c94d5ee089bd569c4361fbc3d2acaea", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/041c31944c94d5ee089bd569c4361fbc3d2acaea", "html_url": "https://github.com/Rust-GCC/gccrs/commit/041c31944c94d5ee089bd569c4361fbc3d2acaea"}], "stats": {"total": 38, "additions": 32, "deletions": 6}, "files": [{"sha": "40658e89d046459caeeb0dfe636051c3f5af860c", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f22ad9d09ec3bdcdde3c48f0628274abf3ebfe6d/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f22ad9d09ec3bdcdde3c48f0628274abf3ebfe6d/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=f22ad9d09ec3bdcdde3c48f0628274abf3ebfe6d", "patch": "@@ -6,6 +6,23 @@\n \n \t* bits/std_complex.h: Fix parens. Format.\n \t\n+2000-07-03  scott snyder  <snyder@fnal.gov>\n+\n+        * bits/locale_facets.tcc (_M_extract): Only figure out the base\n+        from the input if base == 0.\n+        * testsuite/27_io/istream_extractor_arith.cc: Test reading a\n+        number with a leading `0' in hex mode.\n+\n+\t* shadow/bits/std_cmath.h: Fix typo in _GLIBCPP_HAVE_CEILL test.\n+\n+        * mkinclosure: Change `==' to `=' in test.\n+\n+2000-07-03  Chip Salzenberg  <chip@valinux.com>\n+\n+        * src/Makefile.am (libio_headers): _G_config.h is found in srcdir,\n+        not builddir.\n+        * src/Makefile.in: Regenerate.\n+\n 2000-07-01  Benjamin Kosnik  <bkoz@purist.soma.redhat.com>\n \t    Ulrich Drepper  <drepper@purist.soma.redhat.com>\n "}, {"sha": "539b051ee75472fcd224a677a4eddef562c44a7e", "filename": "libstdc++-v3/bits/locale_facets.tcc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f22ad9d09ec3bdcdde3c48f0628274abf3ebfe6d/libstdc%2B%2B-v3%2Fbits%2Flocale_facets.tcc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f22ad9d09ec3bdcdde3c48f0628274abf3ebfe6d/libstdc%2B%2B-v3%2Fbits%2Flocale_facets.tcc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fbits%2Flocale_facets.tcc?ref=f22ad9d09ec3bdcdde3c48f0628274abf3ebfe6d", "patch": "@@ -386,7 +386,7 @@ namespace std\n                   __base = 16;\n                   __testzero = false; // \"0x\" is not a leading zero\n                 }\n-              else\n+              else if (__base == 0)\n                 __base = 8;\n             }\n "}, {"sha": "7996b4b5e18801101b1e9a2d9c4a1ea1b770b6ef", "filename": "libstdc++-v3/mkinclosure", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f22ad9d09ec3bdcdde3c48f0628274abf3ebfe6d/libstdc%2B%2B-v3%2Fmkinclosure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f22ad9d09ec3bdcdde3c48f0628274abf3ebfe6d/libstdc%2B%2B-v3%2Fmkinclosure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fmkinclosure?ref=f22ad9d09ec3bdcdde3c48f0628274abf3ebfe6d", "patch": "@@ -87,7 +87,7 @@ until cmp -s $OLDH $HDRS; do #  (until no new headers found)\n   | while read file; do\n      drop=no\n      for ignore in `cat $IGNORES`; do\n-       if [ \"$ignore\" == \"$file\" ]; then drop=yes; fi\n+       if [ \"$ignore\" = \"$file\" ]; then drop=yes; fi\n      done\n      case \"$file\" in /*) drop=yes;; esac   # no absolute paths\n      case $drop in no) echo \"$file\";; esac"}, {"sha": "5bed259918e4ebad16b939738fe7eae0eb8c3e5a", "filename": "libstdc++-v3/shadow/bits/std_cmath.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f22ad9d09ec3bdcdde3c48f0628274abf3ebfe6d/libstdc%2B%2B-v3%2Fshadow%2Fbits%2Fstd_cmath.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f22ad9d09ec3bdcdde3c48f0628274abf3ebfe6d/libstdc%2B%2B-v3%2Fshadow%2Fbits%2Fstd_cmath.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fshadow%2Fbits%2Fstd_cmath.h?ref=f22ad9d09ec3bdcdde3c48f0628274abf3ebfe6d", "patch": "@@ -365,7 +365,7 @@\n       { return atan2(static_cast<double>(__y), static_cast<double>(__x)); }\n #endif\n \n-#elif _GLIBCPP_HAVE_CEILL\n+#if _GLIBCPP_HAVE_CEILL\n     inline long double _CPP_ceil_capture(long double __x)\n       { return ceill(__x); }\n #else"}, {"sha": "83274383177f4bc7509a06dda304fcd0800070c5", "filename": "libstdc++-v3/src/Makefile.am", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f22ad9d09ec3bdcdde3c48f0628274abf3ebfe6d/libstdc%2B%2B-v3%2Fsrc%2FMakefile.am", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f22ad9d09ec3bdcdde3c48f0628274abf3ebfe6d/libstdc%2B%2B-v3%2Fsrc%2FMakefile.am", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fsrc%2FMakefile.am?ref=f22ad9d09ec3bdcdde3c48f0628274abf3ebfe6d", "patch": "@@ -175,7 +175,7 @@ std_headers = \\\n \n if GLIBCPP_NEED_LIBIO \n libio_headers = \\\n-\t$(top_builddir)/libio/_G_config.h $(top_srcdir)/libio/libio.h\n+\t$(top_srcdir)/libio/_G_config.h $(top_srcdir)/libio/libio.h\n else\n libio_headers =\n endif"}, {"sha": "c7ccd2ad45c8ac7fa006884c1900f1bd6e62eb75", "filename": "libstdc++-v3/src/Makefile.in", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f22ad9d09ec3bdcdde3c48f0628274abf3ebfe6d/libstdc%2B%2B-v3%2Fsrc%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f22ad9d09ec3bdcdde3c48f0628274abf3ebfe6d/libstdc%2B%2B-v3%2Fsrc%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fsrc%2FMakefile.in?ref=f22ad9d09ec3bdcdde3c48f0628274abf3ebfe6d", "patch": "@@ -255,7 +255,7 @@ std_headers = \\\n \tstreambuf string strstream typeinfo utility valarray vector \n \n @GLIBCPP_NEED_LIBIO_TRUE@libio_headers = @GLIBCPP_NEED_LIBIO_TRUE@\\\n-@GLIBCPP_NEED_LIBIO_TRUE@\t$(top_builddir)/libio/_G_config.h $(top_srcdir)/libio/libio.h\n+@GLIBCPP_NEED_LIBIO_TRUE@\t$(top_srcdir)/libio/_G_config.h $(top_srcdir)/libio/libio.h\n @GLIBCPP_NEED_LIBIO_FALSE@libio_headers = \n \n generated_headers = \\"}, {"sha": "199d585bce04d8291af8712a06f17370b7db1512", "filename": "libstdc++-v3/testsuite/27_io/istream_extractor_arith.cc", "status": "modified", "additions": 10, "deletions": 1, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f22ad9d09ec3bdcdde3c48f0628274abf3ebfe6d/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fistream_extractor_arith.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f22ad9d09ec3bdcdde3c48f0628274abf3ebfe6d/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fistream_extractor_arith.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fistream_extractor_arith.cc?ref=f22ad9d09ec3bdcdde3c48f0628274abf3ebfe6d", "patch": "@@ -31,14 +31,17 @@\n std::string str_01;\n std::string str_02(\"true false 0 1 110001\");\n std::string str_03(\"-19999999 777777 -234234 233 -234 33 1 66300.25 .315 1.5\");\n+std::string str_04(\"0123\");\n \n std::stringbuf isbuf_01(std::ios_base::in);\n std::stringbuf isbuf_02(str_02, std::ios_base::in);\n std::stringbuf isbuf_03(str_03, std::ios_base::in);\n- \n+std::stringbuf isbuf_04(str_04, std::ios_base::in);\n+\n std::istream is_01(NULL);\n std::istream is_02(&isbuf_02);\n std::istream is_03(&isbuf_03);\n+std::istream is_04(&isbuf_04);\n std::stringstream ss_01(str_01);\n  \n // minimal sanity check\n@@ -103,13 +106,19 @@ bool test01() {\n   is_03 >> f1;\n   test &= f1 == 1.5;\n \n+  is_04 >> std::hex >> i1;\n+  printf (\"%d %d %d\\n\", i1, i1 == 0x123, test);\n+  test &= i1 == 0x123;\n+  printf (\"%d %d %d\\n\", i1, i1 == 0x123, test);\n+\n   // test void pointers\n   int i = 55;\n   void* po = &i;\n   void* pi;\n \n   ss_01 << po;\n   ss_01 >> pi;\n+  printf (\"%x %x\\n\", pi, po);\n   test &= po == pi;\n   \n #ifdef DEBUG_ASSERT"}]}