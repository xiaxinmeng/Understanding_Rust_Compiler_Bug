{"sha": "c1ea31e3a56b860b19443fdc83497342bd75eda6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzFlYTMxZTNhNTZiODYwYjE5NDQzZmRjODM0OTczNDJiZDc1ZWRhNg==", "commit": {"author": {"name": "Iain Sandoe", "email": "iains@gcc.gnu.org", "date": "2010-12-18T08:48:06Z"}, "committer": {"name": "Iain Sandoe", "email": "iains@gcc.gnu.org", "date": "2010-12-18T08:48:06Z"}, "message": "add new test missed from r167682\n\ntestsuite:\n\n\t* gcc.target/powerpc/darwin-split-ld-stret.c: New test.\n\nFrom-SVN: r168015", "tree": {"sha": "2565274f5087991a58b1cb4524c36d04d5a3e447", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2565274f5087991a58b1cb4524c36d04d5a3e447"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c1ea31e3a56b860b19443fdc83497342bd75eda6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c1ea31e3a56b860b19443fdc83497342bd75eda6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c1ea31e3a56b860b19443fdc83497342bd75eda6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c1ea31e3a56b860b19443fdc83497342bd75eda6/comments", "author": {"login": "iains", "id": 4039407, "node_id": "MDQ6VXNlcjQwMzk0MDc=", "avatar_url": "https://avatars.githubusercontent.com/u/4039407?v=4", "gravatar_id": "", "url": "https://api.github.com/users/iains", "html_url": "https://github.com/iains", "followers_url": "https://api.github.com/users/iains/followers", "following_url": "https://api.github.com/users/iains/following{/other_user}", "gists_url": "https://api.github.com/users/iains/gists{/gist_id}", "starred_url": "https://api.github.com/users/iains/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/iains/subscriptions", "organizations_url": "https://api.github.com/users/iains/orgs", "repos_url": "https://api.github.com/users/iains/repos", "events_url": "https://api.github.com/users/iains/events{/privacy}", "received_events_url": "https://api.github.com/users/iains/received_events", "type": "User", "site_admin": false}, "committer": {"login": "iains", "id": 4039407, "node_id": "MDQ6VXNlcjQwMzk0MDc=", "avatar_url": "https://avatars.githubusercontent.com/u/4039407?v=4", "gravatar_id": "", "url": "https://api.github.com/users/iains", "html_url": "https://github.com/iains", "followers_url": "https://api.github.com/users/iains/followers", "following_url": "https://api.github.com/users/iains/following{/other_user}", "gists_url": "https://api.github.com/users/iains/gists{/gist_id}", "starred_url": "https://api.github.com/users/iains/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/iains/subscriptions", "organizations_url": "https://api.github.com/users/iains/orgs", "repos_url": "https://api.github.com/users/iains/repos", "events_url": "https://api.github.com/users/iains/events{/privacy}", "received_events_url": "https://api.github.com/users/iains/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6e25f095d8731f6da3643da168705f3b9e8e2d2c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6e25f095d8731f6da3643da168705f3b9e8e2d2c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6e25f095d8731f6da3643da168705f3b9e8e2d2c"}], "stats": {"total": 91, "additions": 91, "deletions": 0}, "files": [{"sha": "1e4d1b79446aa012c922bdab2502802170ca003b", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c1ea31e3a56b860b19443fdc83497342bd75eda6/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c1ea31e3a56b860b19443fdc83497342bd75eda6/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=c1ea31e3a56b860b19443fdc83497342bd75eda6", "patch": "@@ -1,3 +1,7 @@\n+2010-12-18  Iain Sandoe  <iains@gcc.gnu.org>\n+\n+\t* gcc.target/powerpc/darwin-split-ld-stret.c: New test.\n+\n 2010-12-17  Ahmad Sharif  <asharif@google.com>\n \n \t* gcc.target/i386/max-stack-align.c: New testcase."}, {"sha": "be4e43892275bb813174d308dc6d4031f33343c3", "filename": "gcc/testsuite/gcc.target/powerpc/darwin-split-ld-stret.c", "status": "added", "additions": 87, "deletions": 0, "changes": 87, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c1ea31e3a56b860b19443fdc83497342bd75eda6/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fdarwin-split-ld-stret.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c1ea31e3a56b860b19443fdc83497342bd75eda6/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fdarwin-split-ld-stret.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fdarwin-split-ld-stret.c?ref=c1ea31e3a56b860b19443fdc83497342bd75eda6", "patch": "@@ -0,0 +1,87 @@\n+/* Check for Darwin m64 that we do not try to pass & return by value for a\n+   struct exceeding the number of arg FPRs (the struct here straddles the \n+   split-point).  */\n+/* { dg-do run { target { powerpc*-*-darwin* && lp64 } } } */\n+\n+extern void abort (void);\n+\n+/*#define DEBUG*/\n+\n+#ifdef DEBUG\n+extern int printf (const char *, ...);\n+extern int printf$LDBL128 (const char *, ...);\n+#endif\n+\n+typedef struct fourteen {\n+  long double a, b, c, d, e, f, g;\n+} fourteen_t ;\n+\n+fourteen_t foo (fourteen_t, fourteen_t) __attribute__ ((noinline));\n+\n+fourteen_t \n+foo (fourteen_t aa, fourteen_t bb) \n+{\n+  fourteen_t r;\n+\n+  r.a = aa.a + bb.a;\n+  r.b = aa.b + bb.b;\n+  r.c = aa.c + bb.c;\n+  r.d = aa.d + bb.d;\n+  r.e = aa.e + bb.e;\n+  r.f = aa.f + bb.f;\n+  r.g = aa.g + bb.g;\n+\n+#ifdef DEBUG\n+#ifdef __ppc64__\n+  printf\n+#else\n+  printf$LDBL128\n+#endif\t  \n+\t(\"%Lg %Lg %Lg %Lg %Lg %Lg %Lg %Lg %Lg %Lg %Lg %Lg %Lg %Lg: \"\n+\t\"%Lg %Lg %Lg %Lg %Lg %Lg %Lg\\n\",\n+\taa.a, aa.b, aa.c, aa.d, aa.e, aa.f, aa.g,\n+\tbb.a, bb.b, bb.c, bb.d, bb.e, bb.f, bb.g,\n+\tr.a, r.b, r.c, r.d, r.e, r.f, r.g);\n+ printf (\"aa.g %ll16x %ll16x\\nbb.g %ll16x %ll16x\\n\",\n+\t\t*(unsigned long long*)&aa.g,\n+\t\t*(unsigned long long*)(((char *)&aa.g)+8),\n+\t\t*(unsigned long long*)&bb.g,\n+\t\t*(unsigned long long*)(((char *)&bb.g)+8));\n+ \n+#endif\n+\n+  __asm__ (\"\"); /* double make sure we don't get inlined */\n+  return r;\n+}\n+\n+int\n+main (void)\n+{\n+  fourteen_t x = { 1.L, 2.L,  3.L,  4.L,  5.L,  6.L,-12.3456789123456789L };\n+  fourteen_t y = { 8.L, 9.L, 10.L, 11.L, 12.L, 13.L, 12.3456789123456789L };\n+  fourteen_t z ;\n+  long double zz;\n+  \n+  z = foo (x,y);\n+  zz = x.g + y.g;\n+#ifdef DEBUG\n+#ifdef __ppc64__\n+\tprintf\n+#else\n+\tprintf$LDBL128\n+#endif\t  \n+\t\t(\"  z: %Lg %Lg %Lg %Lg %Lg %Lg %Lg\\n\"\n+\t\t \"ret: %ll16x %ll16x\\nzz : %ll16x %ll16x\\n\",\n+\t\tz.a, z.b, z.c, z.d, z.e, z.f, z.g,\n+\t\t*(unsigned long long*)&z.g,\n+\t\t*(unsigned long long*)(((char *)&z.g)+8),\n+\t\t*(unsigned long long*)&zz,\n+\t\t*(unsigned long long*)(((char *)&zz)+8));\n+#endif\n+\n+  /* Yes, we really do want to do an equality test here.  */\n+  if (z.g != zz)\n+    abort ();\n+\n+  return 0;\n+}"}]}