{"sha": "f838d15641d256e21ffc126c3277b290ed743928", "node_id": "C_kwDOANBUbNoAKGY4MzhkMTU2NDFkMjU2ZTIxZmZjMTI2YzMyNzdiMjkwZWQ3NDM5Mjg", "commit": {"author": {"name": "Harald Anlauf", "email": "anlauf@gmx.de", "date": "2022-07-18T20:34:53Z"}, "committer": {"name": "Harald Anlauf", "email": "anlauf@gmx.de", "date": "2022-07-19T21:25:08Z"}, "message": "Fortran: error recovery on invalid array reference of non-array [PR103590]\n\ngcc/fortran/ChangeLog:\n\n\tPR fortran/103590\n\t* resolve.cc (find_array_spec): Change function result to bool to\n\tenable error recovery.  Generate error message for invalid array\n\treference of non-array entity instead of an internal error.\n\t(gfc_resolve_ref): Use function result from find_array_spec for\n\terror recovery.\n\ngcc/testsuite/ChangeLog:\n\n\tPR fortran/103590\n\t* gfortran.dg/associate_54.f90: Adjust.\n\t* gfortran.dg/associate_59.f90: New test.", "tree": {"sha": "2205b6bb13743ed0faa7c6f37a13284991a9c28e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2205b6bb13743ed0faa7c6f37a13284991a9c28e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f838d15641d256e21ffc126c3277b290ed743928", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f838d15641d256e21ffc126c3277b290ed743928", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f838d15641d256e21ffc126c3277b290ed743928", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f838d15641d256e21ffc126c3277b290ed743928/comments", "author": {"login": "harald-anlauf", "id": 90786862, "node_id": "MDQ6VXNlcjkwNzg2ODYy", "avatar_url": "https://avatars.githubusercontent.com/u/90786862?v=4", "gravatar_id": "", "url": "https://api.github.com/users/harald-anlauf", "html_url": "https://github.com/harald-anlauf", "followers_url": "https://api.github.com/users/harald-anlauf/followers", "following_url": "https://api.github.com/users/harald-anlauf/following{/other_user}", "gists_url": "https://api.github.com/users/harald-anlauf/gists{/gist_id}", "starred_url": "https://api.github.com/users/harald-anlauf/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/harald-anlauf/subscriptions", "organizations_url": "https://api.github.com/users/harald-anlauf/orgs", "repos_url": "https://api.github.com/users/harald-anlauf/repos", "events_url": "https://api.github.com/users/harald-anlauf/events{/privacy}", "received_events_url": "https://api.github.com/users/harald-anlauf/received_events", "type": "User", "site_admin": false}, "committer": {"login": "harald-anlauf", "id": 90786862, "node_id": "MDQ6VXNlcjkwNzg2ODYy", "avatar_url": "https://avatars.githubusercontent.com/u/90786862?v=4", "gravatar_id": "", "url": "https://api.github.com/users/harald-anlauf", "html_url": "https://github.com/harald-anlauf", "followers_url": "https://api.github.com/users/harald-anlauf/followers", "following_url": "https://api.github.com/users/harald-anlauf/following{/other_user}", "gists_url": "https://api.github.com/users/harald-anlauf/gists{/gist_id}", "starred_url": "https://api.github.com/users/harald-anlauf/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/harald-anlauf/subscriptions", "organizations_url": "https://api.github.com/users/harald-anlauf/orgs", "repos_url": "https://api.github.com/users/harald-anlauf/repos", "events_url": "https://api.github.com/users/harald-anlauf/events{/privacy}", "received_events_url": "https://api.github.com/users/harald-anlauf/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c66dc02384782e9456ceffb2f72b8f724c4f6a94", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c66dc02384782e9456ceffb2f72b8f724c4f6a94", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c66dc02384782e9456ceffb2f72b8f724c4f6a94"}], "stats": {"total": 25, "additions": 20, "deletions": 5}, "files": [{"sha": "ca114750f65b53650e9ee4329059224ec0a191a1", "filename": "gcc/fortran/resolve.cc", "status": "modified", "additions": 10, "deletions": 3, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f838d15641d256e21ffc126c3277b290ed743928/gcc%2Ffortran%2Fresolve.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f838d15641d256e21ffc126c3277b290ed743928/gcc%2Ffortran%2Fresolve.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fresolve.cc?ref=f838d15641d256e21ffc126c3277b290ed743928", "patch": "@@ -4976,7 +4976,7 @@ gfc_resolve_dim_arg (gfc_expr *dim)\n static void\n resolve_assoc_var (gfc_symbol* sym, bool resolve_target);\n \n-static void\n+static bool\n find_array_spec (gfc_expr *e)\n {\n   gfc_array_spec *as;\n@@ -5004,7 +5004,11 @@ find_array_spec (gfc_expr *e)\n       {\n       case REF_ARRAY:\n \tif (as == NULL)\n-\t  gfc_internal_error (\"find_array_spec(): Missing spec\");\n+\t  {\n+\t    gfc_error (\"Invalid array reference of a non-array entity at %L\",\n+\t\t       &ref->u.ar.where);\n+\t    return false;\n+\t  }\n \n \tref->u.ar.as = as;\n \tas = NULL;\n@@ -5028,6 +5032,8 @@ find_array_spec (gfc_expr *e)\n \n   if (as != NULL)\n     gfc_internal_error (\"find_array_spec(): unused as(2)\");\n+\n+  return true;\n }\n \n \n@@ -5346,7 +5352,8 @@ gfc_resolve_ref (gfc_expr *expr)\n   for (ref = expr->ref; ref; ref = ref->next)\n     if (ref->type == REF_ARRAY && ref->u.ar.as == NULL)\n       {\n-\tfind_array_spec (expr);\n+\tif (!find_array_spec (expr))\n+\t  return false;\n \tbreak;\n       }\n "}, {"sha": "680ad5d14a2ed443107ddb5a9bef16c763dc96f4", "filename": "gcc/testsuite/gfortran.dg/associate_54.f90", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f838d15641d256e21ffc126c3277b290ed743928/gcc%2Ftestsuite%2Fgfortran.dg%2Fassociate_54.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f838d15641d256e21ffc126c3277b290ed743928/gcc%2Ftestsuite%2Fgfortran.dg%2Fassociate_54.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fassociate_54.f90?ref=f838d15641d256e21ffc126c3277b290ed743928", "patch": "@@ -26,9 +26,8 @@ subroutine test_alter_state1 (obj, a)\n     integer, intent(in) :: a\n     associate (state => obj%state(TEST_STATES)) ! { dg-error \"is used as array\" }\n !      state = a\n-      state(TEST_STATE) = a\n+      state(TEST_STATE) = a ! { dg-error \"array reference of a non-array\" }\n     end associate\n   end subroutine test_alter_state1\n \n end module test\n-"}, {"sha": "2da97731d395f95b0f7124fc5887d5fc8ad861c9", "filename": "gcc/testsuite/gfortran.dg/associate_59.f90", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f838d15641d256e21ffc126c3277b290ed743928/gcc%2Ftestsuite%2Fgfortran.dg%2Fassociate_59.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f838d15641d256e21ffc126c3277b290ed743928/gcc%2Ftestsuite%2Fgfortran.dg%2Fassociate_59.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fassociate_59.f90?ref=f838d15641d256e21ffc126c3277b290ed743928", "patch": "@@ -0,0 +1,9 @@\n+! { dg-do compile }\n+! PR fortran/103590 - ICE: find_array_spec(): Missing spec \n+! Contributed by G.Steinmetz\n+\n+program p\n+  associate (a => 1)\n+    print *, [character(a(1)) :: '1'] ! { dg-error \"Scalar INTEGER expression\" }\n+  end associate\n+end"}]}