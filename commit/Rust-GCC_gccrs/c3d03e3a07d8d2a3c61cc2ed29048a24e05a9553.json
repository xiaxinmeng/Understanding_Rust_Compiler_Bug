{"sha": "c3d03e3a07d8d2a3c61cc2ed29048a24e05a9553", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzNkMDNlM2EwN2Q4ZDJhM2M2MWNjMmVkMjkwNDhhMjRlMDVhOTU1Mw==", "commit": {"author": {"name": "Kaveh R. Ghazi", "email": "ghazi@caip.rutgers.edu", "date": "2001-08-29T11:45:14Z"}, "committer": {"name": "Kaveh Ghazi", "email": "ghazi@gcc.gnu.org", "date": "2001-08-29T11:45:14Z"}, "message": "iris6.h (ASM_DECLARE_OBJECT_NAME, [...]): Fix format specifier warnings.\n\n\t* iris6.h (ASM_DECLARE_OBJECT_NAME, ASM_FINISH_DECLARE_OBJECT):\n\tFix format specifier warnings.\n\n\t* irix6-libc-compat.c (inet_ntoa, inet_lnaof, inet_netof,\n\tinet_makeaddr, semctl): Prototype.\n\n\t* mips.c (compute_frame_size): Fix signed/unsigned warnings.\n\t(save_restore_insns): Use base_offset, not gp_offset.\n\n\t* mips.h (GP_REG_OR_PSEUDO_STRICT_P): Fix signed/unsigned warning.\n\t(ASM_OUTPUT_BYTE): Fix format specifier warning.\n\nFrom-SVN: r45258", "tree": {"sha": "094f518bd20996a09d5bf60d04664a87247fc387", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/094f518bd20996a09d5bf60d04664a87247fc387"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c3d03e3a07d8d2a3c61cc2ed29048a24e05a9553", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c3d03e3a07d8d2a3c61cc2ed29048a24e05a9553", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c3d03e3a07d8d2a3c61cc2ed29048a24e05a9553", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c3d03e3a07d8d2a3c61cc2ed29048a24e05a9553/comments", "author": null, "committer": null, "parents": [{"sha": "e0e4041f3b15552381efcf2bb3b1ab844403b690", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e0e4041f3b15552381efcf2bb3b1ab844403b690", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e0e4041f3b15552381efcf2bb3b1ab844403b690"}], "stats": {"total": 38, "additions": 31, "deletions": 7}, "files": [{"sha": "1f90c73fa3d762a2887e59d7f90e258e0a7555f4", "filename": "gcc/ChangeLog", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c3d03e3a07d8d2a3c61cc2ed29048a24e05a9553/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c3d03e3a07d8d2a3c61cc2ed29048a24e05a9553/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=c3d03e3a07d8d2a3c61cc2ed29048a24e05a9553", "patch": "@@ -1,3 +1,17 @@\n+2001-08-29  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n+\n+\t* iris6.h (ASM_DECLARE_OBJECT_NAME, ASM_FINISH_DECLARE_OBJECT):\n+\tFix format specifier warnings.\n+\t\n+\t* irix6-libc-compat.c (inet_ntoa, inet_lnaof, inet_netof,\n+\tinet_makeaddr, semctl): Prototype.\n+\n+\t* mips.c (compute_frame_size): Fix signed/unsigned warnings.\n+\t(save_restore_insns): Use base_offset, not gp_offset.\n+\n+\t* mips.h (GP_REG_OR_PSEUDO_STRICT_P): Fix signed/unsigned warning.\n+\t(ASM_OUTPUT_BYTE): Fix format specifier warning.\n+\n 2001-08-29  Richard Henderson  <rth@redhat.com>\n \n \t* bb-reorder.c (function_tail_eff_head): New."}, {"sha": "3ba80d2e634b4dc2d8c60aac0388d4f85051808a", "filename": "gcc/config/mips/iris6.h", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c3d03e3a07d8d2a3c61cc2ed29048a24e05a9553/gcc%2Fconfig%2Fmips%2Firis6.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c3d03e3a07d8d2a3c61cc2ed29048a24e05a9553/gcc%2Fconfig%2Fmips%2Firis6.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Firis6.h?ref=c3d03e3a07d8d2a3c61cc2ed29048a24e05a9553", "patch": "@@ -399,7 +399,9 @@ do\t\t\t\t\t\t\t\t\t\\\n        size_directive_output = 1;\t\t\t\t\t\\\n        fprintf (STREAM, \"%s\", SIZE_ASM_OP);\t\t\t\t\\\n        assemble_name (STREAM, NAME);\t\t\t\t\t\\\n-       fprintf (STREAM, \",%d\\n\", int_size_in_bytes (TREE_TYPE (DECL)));\t\\\n+       fprintf (STREAM, \",\");\t\t\t\t\t\t\\\n+       fprintf (STREAM, HOST_WIDE_INT_PRINT_DEC, int_size_in_bytes (TREE_TYPE (DECL)));\t\\\n+       fprintf (STREAM, \"\\n\");\t\t\t\t\t\t\\\n      }\t\t\t\t\t\t\t\t\t\\\n    mips_declare_object (STREAM, NAME, \"\", \":\\n\", 0);\t\t\t\\\n  }\t\t\t\t\t\t\t\t\t\\\n@@ -428,7 +430,9 @@ do {\t\t\t\t\t\t\t\t\t \\\n \t size_directive_output = 1;\t\t\t\t\t \\\n \t fprintf (FILE, \"%s\", SIZE_ASM_OP);\t\t\t\t \\\n \t assemble_name (FILE, name);\t\t\t\t\t \\\n-\t fprintf (FILE, \",%d\\n\",  int_size_in_bytes (TREE_TYPE (DECL))); \\\n+\t fprintf (FILE, \",\");\t\t\t\t\t\t \\\n+\t fprintf (FILE, HOST_WIDE_INT_PRINT_DEC, int_size_in_bytes (TREE_TYPE (DECL))); \\\n+\t fprintf (FILE, \"\\n\");\t\t\t\t\t\t \\\n        }\t\t\t\t\t\t\t\t \\\n    } while (0)\n "}, {"sha": "d482dbfa8821c85c08c393aa19e4a22af0845655", "filename": "gcc/config/mips/irix6-libc-compat.c", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c3d03e3a07d8d2a3c61cc2ed29048a24e05a9553/gcc%2Fconfig%2Fmips%2Firix6-libc-compat.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c3d03e3a07d8d2a3c61cc2ed29048a24e05a9553/gcc%2Fconfig%2Fmips%2Firix6-libc-compat.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Firix6-libc-compat.c?ref=c3d03e3a07d8d2a3c61cc2ed29048a24e05a9553", "patch": "@@ -67,6 +67,11 @@ Boston, MA 02111-1307, USA.  */\n    always 32.  */\n #define SHIFT_BITS\t32\n \n+extern machreg_t inet_ntoa\tPARAMS ((machreg_t));\n+extern machreg_t inet_lnaof\tPARAMS ((machreg_t));\n+extern machreg_t inet_netof\tPARAMS ((machreg_t));\n+extern machreg_t inet_makeaddr\tPARAMS ((machreg_t, machreg_t));\n+\n extern machreg_t _inet_ntoa\tPARAMS ((machreg_t));\n extern machreg_t _inet_lnaof\tPARAMS ((machreg_t));\n extern machreg_t _inet_netof\tPARAMS ((machreg_t));\n@@ -120,6 +125,7 @@ inet_makeaddr (machreg_t net, machreg_t lna)\n }\n \n #if _MIPS_SIM == _ABIN32\n+extern machreg_t semctl\t\tPARAMS ((machreg_t, machreg_t, machreg_t, machreg_t));\n extern machreg_t _semctl\tPARAMS ((machreg_t, machreg_t, machreg_t, machreg_t));\n \n /* <sys/sem.h> has"}, {"sha": "f69ff29315e7bc7aadbd41ae9a057b5c01ae8d21", "filename": "gcc/config/mips/mips.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c3d03e3a07d8d2a3c61cc2ed29048a24e05a9553/gcc%2Fconfig%2Fmips%2Fmips.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c3d03e3a07d8d2a3c61cc2ed29048a24e05a9553/gcc%2Fconfig%2Fmips%2Fmips.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fmips.c?ref=c3d03e3a07d8d2a3c61cc2ed29048a24e05a9553", "patch": "@@ -6246,7 +6246,7 @@ HOST_WIDE_INT\n compute_frame_size (size)\n      HOST_WIDE_INT size;\t/* # of var. bytes allocated */\n {\n-  int regno;\n+  unsigned int regno;\n   HOST_WIDE_INT total_size;\t/* # bytes that the entire frame takes up */\n   HOST_WIDE_INT var_size;\t/* # bytes that variables take up */\n   HOST_WIDE_INT args_size;\t/* # bytes that outgoing arguments take up */\n@@ -6319,7 +6319,7 @@ compute_frame_size (size)\n   /* We need to restore these for the handler.  */\n   if (current_function_calls_eh_return)\n     {\n-      int i;\n+      unsigned int i;\n       for (i = 0; ; ++i)\n \t{\n \t  regno = EH_RETURN_DATA_REGNO (i);\n@@ -6782,7 +6782,7 @@ save_restore_insns (store_p, large_reg, large_offset, file)\n \t\tRTX_UNCHANGING_P (mem_rtx) = 1;\n \n \t\tif (store_p)\n-\t\t  mips_emit_frame_related_store (mem_rtx, reg_rtx, gp_offset);\n+\t\t  mips_emit_frame_related_store (mem_rtx, reg_rtx, base_offset);\n \t\telse\n \t\t  emit_move_insn (reg_rtx, mem_rtx);\n \t      }"}, {"sha": "8e339ee2740b90b1e639e0b3451253a6968d86b7", "filename": "gcc/config/mips/mips.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c3d03e3a07d8d2a3c61cc2ed29048a24e05a9553/gcc%2Fconfig%2Fmips%2Fmips.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c3d03e3a07d8d2a3c61cc2ed29048a24e05a9553/gcc%2Fconfig%2Fmips%2Fmips.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fmips.h?ref=c3d03e3a07d8d2a3c61cc2ed29048a24e05a9553", "patch": "@@ -2750,7 +2750,7 @@ typedef struct mips_args {\n    : GP_REG_P (regno))\n \n #define GP_REG_OR_PSEUDO_STRICT_P(regno, mode)\t\t\t\t    \\\n-  BASE_REG_P((regno < FIRST_PSEUDO_REGISTER) ? regno : reg_renumber[regno], \\\n+  BASE_REG_P((regno < FIRST_PSEUDO_REGISTER) ? (int) regno : reg_renumber[regno], \\\n \t     (mode))\n \n #define GP_REG_OR_PSEUDO_NONSTRICT_P(regno, mode) \\\n@@ -4325,7 +4325,7 @@ do {\t\t\t\t\t\t\t\t\t\\\n /* This is how to output an assembler line for a numeric constant byte.  */\n \n #define ASM_OUTPUT_BYTE(STREAM,VALUE)\t\t\t\t\t\\\n-  fprintf (STREAM, \"\\t.byte\\t0x%x\\n\", (VALUE))\n+  fprintf (STREAM, \"\\t.byte\\t0x%x\\n\", (int)(VALUE))\n \n /* This is how to output an element of a case-vector that is absolute.  */\n "}]}