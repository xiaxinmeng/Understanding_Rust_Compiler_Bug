{"sha": "d74db8ff1c8f126c3d45ab9e72458ead0422865b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDc0ZGI4ZmYxYzhmMTI2YzNkNDVhYjllNzI0NThlYWQwNDIyODY1Yg==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2014-03-26T16:50:26Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2014-03-26T16:50:26Z"}, "message": "re PR c++/60566 (r208573 omits needed thunks)\n\n\tPR c++/60566\n\tPR c++/58678\n\t* class.c (build_vtbl_initializer): Handle abstract dtors here.\n\t* search.c (get_pure_virtuals): Not here.\n\nFrom-SVN: r208845", "tree": {"sha": "50d4baaeda9834b83184bd2181f60f3b85f9f5b8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/50d4baaeda9834b83184bd2181f60f3b85f9f5b8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d74db8ff1c8f126c3d45ab9e72458ead0422865b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d74db8ff1c8f126c3d45ab9e72458ead0422865b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d74db8ff1c8f126c3d45ab9e72458ead0422865b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d74db8ff1c8f126c3d45ab9e72458ead0422865b/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "3a2700f61bd54868e8572b18f3dadf994adb45ea", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3a2700f61bd54868e8572b18f3dadf994adb45ea", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3a2700f61bd54868e8572b18f3dadf994adb45ea"}], "stats": {"total": 55, "additions": 36, "deletions": 19}, "files": [{"sha": "518eb22bb39e13ff92cec9ca46cbacf7953aa0c4", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d74db8ff1c8f126c3d45ab9e72458ead0422865b/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d74db8ff1c8f126c3d45ab9e72458ead0422865b/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=d74db8ff1c8f126c3d45ab9e72458ead0422865b", "patch": "@@ -1,5 +1,10 @@\n 2014-03-25  Jason Merrill  <jason@redhat.com>\n \n+\tPR c++/60566\n+\tPR c++/58678\n+\t* class.c (build_vtbl_initializer): Handle abstract dtors here.\n+\t* search.c (get_pure_virtuals): Not here.\n+\n \tPR c++/60375\n \t* parser.c (cp_parser_lambda_expression): Don't parse the body of\n \ta lambda in unevaluated context."}, {"sha": "d277e0758eea42f017b2dcaeba8328dc1d9ae381", "filename": "gcc/cp/class.c", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d74db8ff1c8f126c3d45ab9e72458ead0422865b/gcc%2Fcp%2Fclass.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d74db8ff1c8f126c3d45ab9e72458ead0422865b/gcc%2Fcp%2Fclass.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fclass.c?ref=d74db8ff1c8f126c3d45ab9e72458ead0422865b", "patch": "@@ -9017,6 +9017,16 @@ build_vtbl_initializer (tree binfo,\n \t      if (!TARGET_VTABLE_USES_DESCRIPTORS)\n \t\tinit = fold_convert (vfunc_ptr_type_node,\n \t\t\t\t     build_fold_addr_expr (fn));\n+\t      /* Don't refer to a virtual destructor from a constructor\n+\t\t vtable or a vtable for an abstract class, since destroying\n+\t\t an object under construction is undefined behavior and we\n+\t\t don't want it to be considered a candidate for speculative\n+\t\t devirtualization.  But do create the thunk for ABI\n+\t\t compliance.  */\n+\t      if (DECL_DESTRUCTOR_P (fn_original)\n+\t\t  && (CLASSTYPE_PURE_VIRTUALS (DECL_CONTEXT (fn_original))\n+\t\t      || orig_binfo != binfo))\n+\t\tinit = size_zero_node;\n \t    }\n \t}\n "}, {"sha": "c3eed90f6c3632b5a9ade786e0c09e3a2444131d", "filename": "gcc/cp/search.c", "status": "modified", "additions": 0, "deletions": 16, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d74db8ff1c8f126c3d45ab9e72458ead0422865b/gcc%2Fcp%2Fsearch.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d74db8ff1c8f126c3d45ab9e72458ead0422865b/gcc%2Fcp%2Fsearch.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fsearch.c?ref=d74db8ff1c8f126c3d45ab9e72458ead0422865b", "patch": "@@ -2115,22 +2115,6 @@ get_pure_virtuals (tree type)\n      which it is a primary base will contain vtable entries for the\n      pure virtuals in the base class.  */\n   dfs_walk_once (TYPE_BINFO (type), NULL, dfs_get_pure_virtuals, type);\n-\n-  /* Treat a virtual destructor in an abstract class as pure even if it\n-     isn't declared as pure; there is no way it would be called through the\n-     vtable except during construction, which causes undefined behavior.  */\n-  if (CLASSTYPE_PURE_VIRTUALS (type)\n-      && TYPE_HAS_NONTRIVIAL_DESTRUCTOR (type))\n-    {\n-      tree dtor = CLASSTYPE_DESTRUCTORS (type);\n-      if (dtor && DECL_VIRTUAL_P (dtor) && !DECL_PURE_VIRTUAL_P (dtor))\n-\t{\n-\t  tree clone;\n-\t  DECL_PURE_VIRTUAL_P (dtor) = true;\n-\t  FOR_EACH_CLONE (clone, dtor)\n-\t    DECL_PURE_VIRTUAL_P (clone) = true;\n-\t}\n-    }\n }\n \f\n /* Debug info for C++ classes can get very large; try to avoid"}, {"sha": "6fb14492a6091d2ad5416758d95e69a7c295e10c", "filename": "gcc/ipa-devirt.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d74db8ff1c8f126c3d45ab9e72458ead0422865b/gcc%2Fipa-devirt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d74db8ff1c8f126c3d45ab9e72458ead0422865b/gcc%2Fipa-devirt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fipa-devirt.c?ref=d74db8ff1c8f126c3d45ab9e72458ead0422865b", "patch": "@@ -1261,7 +1261,7 @@ get_polymorphic_call_info (tree fndecl,\n \t    }\n \n \t  /* If the function is constructor or destructor, then\n-\t     the type is possibly in consturction, but we know\n+\t     the type is possibly in construction, but we know\n \t     it is not derived type.  */\n \t  if (DECL_CXX_CONSTRUCTOR_P (fndecl)\n \t      || DECL_CXX_DESTRUCTOR_P (fndecl))"}, {"sha": "e3d07f2aca0e7813d5a8ad8dfa6dc73a991bf34a", "filename": "gcc/testsuite/g++.dg/abi/thunk6.C", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d74db8ff1c8f126c3d45ab9e72458ead0422865b/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fabi%2Fthunk6.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d74db8ff1c8f126c3d45ab9e72458ead0422865b/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fabi%2Fthunk6.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fabi%2Fthunk6.C?ref=d74db8ff1c8f126c3d45ab9e72458ead0422865b", "patch": "@@ -0,0 +1,18 @@\n+// PR c++/60566\n+// We need to emit the construction vtable thunk for ~C even if we aren't\n+// going to use it.\n+\n+struct A\n+{\n+  virtual void f() = 0;\n+  virtual ~A() {}\n+};\n+\n+struct B: virtual A { int i; };\n+struct C: virtual A { int i; ~C(); };\n+\n+C::~C() {}\n+\n+int main() {}\n+\n+// { dg-final { scan-assembler \"_ZTv0_n32_N1CD1Ev\" } }"}, {"sha": "675bd08d782b9910a1a597c8c798b6284fa8cb65", "filename": "gcc/testsuite/g++.dg/ipa/devirt-21.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d74db8ff1c8f126c3d45ab9e72458ead0422865b/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fipa%2Fdevirt-21.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d74db8ff1c8f126c3d45ab9e72458ead0422865b/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fipa%2Fdevirt-21.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fipa%2Fdevirt-21.C?ref=d74db8ff1c8f126c3d45ab9e72458ead0422865b", "patch": "@@ -37,5 +37,5 @@ main()\n {\n   class C c;\n }\n-/* { dg-final { scan-ipa-dump \"Discovered a virtual call to\" \"cp\" } } */\n+/* { dg-final { scan-ipa-dump \"Discovered a virtual call to\" \"cp\" { xfail *-*-* } } } */\n /* { dg-final { cleanup-ipa-dump \"cp\" } } */"}, {"sha": "98d86aee8e04c3593e92738f1e2e4d016c148c9b", "filename": "gcc/testsuite/g++.dg/ipa/devirt-23.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d74db8ff1c8f126c3d45ab9e72458ead0422865b/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fipa%2Fdevirt-23.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d74db8ff1c8f126c3d45ab9e72458ead0422865b/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fipa%2Fdevirt-23.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fipa%2Fdevirt-23.C?ref=d74db8ff1c8f126c3d45ab9e72458ead0422865b", "patch": "@@ -45,5 +45,5 @@ main()\n {\n   class C c;\n }\n-/* { dg-final { scan-ipa-dump \"Discovered a virtual call to\" \"cp\" } } */\n+/* { dg-final { scan-ipa-dump \"Discovered a virtual call to\" \"cp\" { xfail *-*-* } } } */\n /* { dg-final { cleanup-ipa-dump \"cp\" } } */"}]}