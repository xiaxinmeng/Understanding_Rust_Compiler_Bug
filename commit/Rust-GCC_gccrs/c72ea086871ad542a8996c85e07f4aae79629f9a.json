{"sha": "c72ea086871ad542a8996c85e07f4aae79629f9a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzcyZWEwODY4NzFhZDU0MmE4OTk2Yzg1ZTA3ZjRhYWU3OTYyOWY5YQ==", "commit": {"author": {"name": "DJ Delorie", "email": "dj@redhat.com", "date": "2010-01-20T05:58:59Z"}, "committer": {"name": "DJ Delorie", "email": "dj@gcc.gnu.org", "date": "2010-01-20T05:58:59Z"}, "message": "h8300.c (F): Add \"in_epilogue\" flag.\n\n* config/h8300/h8300.c (F): Add \"in_epilogue\" flag.\n(Fpa): Pass it\n(h8300_emit_stack_adjustment): Propogate it.\n(push): Pass it.\n(h8300_expand_prologue): Likewise.\n(h8300_expand_epilogue): Likewise.\n\nFrom-SVN: r156056", "tree": {"sha": "fc29cc3230323b15be2a6ce175217bff70981f17", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/fc29cc3230323b15be2a6ce175217bff70981f17"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c72ea086871ad542a8996c85e07f4aae79629f9a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c72ea086871ad542a8996c85e07f4aae79629f9a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c72ea086871ad542a8996c85e07f4aae79629f9a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c72ea086871ad542a8996c85e07f4aae79629f9a/comments", "author": null, "committer": null, "parents": [{"sha": "e80b7e74ee01e83fd8493fe288de2a8a79c99abc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e80b7e74ee01e83fd8493fe288de2a8a79c99abc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e80b7e74ee01e83fd8493fe288de2a8a79c99abc"}], "stats": {"total": 36, "additions": 23, "deletions": 13}, "files": [{"sha": "82f70614a2c781549ca885744d0fecd2cdb5f621", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c72ea086871ad542a8996c85e07f4aae79629f9a/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c72ea086871ad542a8996c85e07f4aae79629f9a/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=c72ea086871ad542a8996c85e07f4aae79629f9a", "patch": "@@ -1,3 +1,12 @@\n+2010-01-20  DJ Delorie  <dj@redhat.com>\n+\n+\t* config/h8300/h8300.c (F): Add \"in_epilogue\" flag.\n+\t(Fpa): Pass it\n+\t(h8300_emit_stack_adjustment): Propogate it.\n+\t(push): Pass it.\n+\t(h8300_expand_prologue): Likewise.\n+\t(h8300_expand_epilogue): Likewise.\n+\n 2010-01-19  Michael Matz  <matz@suse.de>\n \n \tPR tree-optimization/41783"}, {"sha": "e9e2216c270b3ad8d789904d6722b5bd8196a0a1", "filename": "gcc/config/h8300/h8300.c", "status": "modified", "additions": 14, "deletions": 13, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c72ea086871ad542a8996c85e07f4aae79629f9a/gcc%2Fconfig%2Fh8300%2Fh8300.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c72ea086871ad542a8996c85e07f4aae79629f9a/gcc%2Fconfig%2Fh8300%2Fh8300.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fh8300%2Fh8300.c?ref=c72ea086871ad542a8996c85e07f4aae79629f9a", "patch": "@@ -83,7 +83,7 @@ static int h8300_interrupt_function_p (tree);\n static int h8300_saveall_function_p (tree);\n static int h8300_monitor_function_p (tree);\n static int h8300_os_task_function_p (tree);\n-static void h8300_emit_stack_adjustment (int, HOST_WIDE_INT);\n+static void h8300_emit_stack_adjustment (int, HOST_WIDE_INT, bool);\n static HOST_WIDE_INT round_frame_size (HOST_WIDE_INT);\n static unsigned int compute_saved_regs (void);\n static void push (int);\n@@ -509,9 +509,10 @@ byte_reg (rtx x, int b)\n \n /* We use this to wrap all emitted insns in the prologue.  */\n static rtx\n-F (rtx x)\n+F (rtx x, bool set_it)\n {\n-  RTX_FRAME_RELATED_P (x) = 1;\n+  if (set_it)\n+    RTX_FRAME_RELATED_P (x) = 1;\n   return x;\n }\n \n@@ -528,7 +529,7 @@ Fpa (rtx par)\n   int i;\n \n   for (i = 0; i < len; i++)\n-    F (XVECEXP (par, 0, i));\n+    F (XVECEXP (par, 0, i), true);\n \n   return par;\n }\n@@ -537,7 +538,7 @@ Fpa (rtx par)\n    SIZE to adjust the stack pointer.  */\n \n static void\n-h8300_emit_stack_adjustment (int sign, HOST_WIDE_INT size)\n+h8300_emit_stack_adjustment (int sign, HOST_WIDE_INT size, bool in_prologue)\n {\n   /* If the frame size is 0, we don't have anything to do.  */\n   if (size == 0)\n@@ -552,9 +553,9 @@ h8300_emit_stack_adjustment (int sign, HOST_WIDE_INT size)\n       && !(cfun->static_chain_decl != NULL && sign < 0))\n     {\n       rtx r3 = gen_rtx_REG (Pmode, 3);\n-      F (emit_insn (gen_movhi (r3, GEN_INT (sign * size))));\n+      F (emit_insn (gen_movhi (r3, GEN_INT (sign * size))), in_prologue);\n       F (emit_insn (gen_addhi3 (stack_pointer_rtx,\n-\t\t\t\tstack_pointer_rtx, r3)));\n+\t\t\t\tstack_pointer_rtx, r3)), in_prologue);\n     }\n   else\n     {\n@@ -568,11 +569,11 @@ h8300_emit_stack_adjustment (int sign, HOST_WIDE_INT size)\n \t  rtx x = emit_insn (gen_addhi3 (stack_pointer_rtx,\n \t\t\t\t\t stack_pointer_rtx, GEN_INT (sign * size)));\n \t  if (size < 4)\n-\t    F (x);\n+\t    F (x, in_prologue);\n \t}\n       else\n \tF (emit_insn (gen_addsi3 (stack_pointer_rtx,\n-\t\t\t\t  stack_pointer_rtx, GEN_INT (sign * size))));\n+\t\t\t\t  stack_pointer_rtx, GEN_INT (sign * size))), in_prologue);\n     }\n }\n \n@@ -622,7 +623,7 @@ push (int rn)\n     x = gen_push_h8300hs_advanced (reg);\n   else\n     x = gen_push_h8300hs_normal (reg);\n-  x = F (emit_insn (x));\n+  x = F (emit_insn (x), 1);\n   REG_NOTES (x) = gen_rtx_EXPR_LIST (REG_INC, stack_pointer_rtx, 0);\n }\n \n@@ -854,7 +855,7 @@ h8300_expand_prologue (void)\n     {\n       /* Push fp.  */\n       push (HARD_FRAME_POINTER_REGNUM);\n-      F (emit_move_insn (hard_frame_pointer_rtx, stack_pointer_rtx));\n+      F (emit_move_insn (hard_frame_pointer_rtx, stack_pointer_rtx), 1);\n     }\n \n   /* Push the rest of the registers in ascending order.  */\n@@ -885,7 +886,7 @@ h8300_expand_prologue (void)\n     }\n \n   /* Leave room for locals.  */\n-  h8300_emit_stack_adjustment (-1, round_frame_size (get_frame_size ()));\n+  h8300_emit_stack_adjustment (-1, round_frame_size (get_frame_size ()), true);\n }\n \n /* Return nonzero if we can use \"rts\" for the function currently being\n@@ -920,7 +921,7 @@ h8300_expand_epilogue (void)\n   returned_p = false;\n \n   /* Deallocate locals.  */\n-  h8300_emit_stack_adjustment (1, frame_size);\n+  h8300_emit_stack_adjustment (1, frame_size, false);\n \n   /* Pop the saved registers in descending order.  */\n   saved_regs = compute_saved_regs ();"}]}