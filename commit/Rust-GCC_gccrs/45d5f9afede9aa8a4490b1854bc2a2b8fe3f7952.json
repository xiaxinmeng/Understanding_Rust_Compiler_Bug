{"sha": "45d5f9afede9aa8a4490b1854bc2a2b8fe3f7952", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDVkNWY5YWZlZGU5YWE4YTQ0OTBiMTg1NGJjMmEyYjhmZTNmNzk1Mg==", "commit": {"author": {"name": "Benjamin Kosnik", "email": "bkoz@redhat.com", "date": "2005-01-20T20:28:41Z"}, "committer": {"name": "Benjamin Kosnik", "email": "bkoz@gcc.gnu.org", "date": "2005-01-20T20:28:41Z"}, "message": "Makefile.am (check-compile): New.\n\n\n2005-01-20  Benjamin Kosnik  <bkoz@redhat.com>\n\n\t* testsuite/Makefile.am (check-compile): New.\n\t* testsuite/Makefile.in: Regenerate.\n\t* scripts/check_compile_time: New.\n\t* scripts/check_performance: Tweaks.\n\nFrom-SVN: r93980", "tree": {"sha": "98b8d370471b34da8a360184d5aaad62538f83fc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/98b8d370471b34da8a360184d5aaad62538f83fc"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/45d5f9afede9aa8a4490b1854bc2a2b8fe3f7952", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/45d5f9afede9aa8a4490b1854bc2a2b8fe3f7952", "html_url": "https://github.com/Rust-GCC/gccrs/commit/45d5f9afede9aa8a4490b1854bc2a2b8fe3f7952", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/45d5f9afede9aa8a4490b1854bc2a2b8fe3f7952/comments", "author": null, "committer": null, "parents": [{"sha": "3c46c513c2008d845cf09642aef08b78b1d2f226", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3c46c513c2008d845cf09642aef08b78b1d2f226", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3c46c513c2008d845cf09642aef08b78b1d2f226"}], "stats": {"total": 76, "additions": 73, "deletions": 3}, "files": [{"sha": "a357e0033312f7cbd18d5a5186153619e98021ca", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/45d5f9afede9aa8a4490b1854bc2a2b8fe3f7952/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/45d5f9afede9aa8a4490b1854bc2a2b8fe3f7952/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=45d5f9afede9aa8a4490b1854bc2a2b8fe3f7952", "patch": "@@ -1,3 +1,10 @@\n+2005-01-20  Benjamin Kosnik  <bkoz@redhat.com>\n+\n+\t* testsuite/Makefile.am (check-compile): New.\n+\t* testsuite/Makefile.in: Regenerate.\t\n+\t* scripts/check_compile_time: New.\n+\t* scripts/check_performance: Tweaks.\n+\n 2005-01-19  Paolo Carlini  <pcarlini@suse.de>\n \n \tPR libstdc++/19535"}, {"sha": "e27cc33c8a0cb294a09fdc3b92d5e6c18781b664", "filename": "libstdc++-v3/scripts/check_compile", "status": "added", "additions": 49, "deletions": 0, "changes": 49, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/45d5f9afede9aa8a4490b1854bc2a2b8fe3f7952/libstdc%2B%2B-v3%2Fscripts%2Fcheck_compile", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/45d5f9afede9aa8a4490b1854bc2a2b8fe3f7952/libstdc%2B%2B-v3%2Fscripts%2Fcheck_compile", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fscripts%2Fcheck_compile?ref=45d5f9afede9aa8a4490b1854bc2a2b8fe3f7952", "patch": "@@ -0,0 +1,49 @@\n+#!/usr/bin/env bash\n+\n+# Script to do performance testing.\n+\n+# Invocation \n+# check_performance SRC_DIR BUILD_DIR\n+\n+# 1: variables\n+#\n+SRC_DIR=$1\n+BUILD_DIR=$2\n+\n+# Now that we've successfully translated the numerical option into\n+# a symbolic one, we can safely ignore it.\n+shift\n+\n+# This has been true all along.  Found out about it the hard way...\n+case $BASH_VERSION in\n+    1*)  \n+\techo 'You need bash 2.x to run check_performance.  Exiting.'; \n+\texit 1 ;;\n+    *)   ;;  \n+esac\n+\n+flags_script=$BUILD_DIR/scripts/testsuite_flags\n+INCLUDES=`$flags_script --build-includes`\n+PCH_FLAGS=`$flags_script --cxxpchflags`\n+FLAGS=`$flags_script --cxxflags`\n+TEST_FLAGS=\"-S\"\n+COMPILER=`$flags_script --build-cxx`\n+CXX=\"$COMPILER $INCLUDES $PCH_FLAGS $FLAGS $TEST_FLAGS\"\n+\n+TESTS_FILE=\"testsuite_files\"\n+\n+for NAME in `cat $TESTS_FILE`\n+do\n+  if $RUN; then\n+    echo $NAME\n+    FILE_NAME=\"`basename $NAME`\"\n+    OUTPUT_NAME=\"`echo $FILE_NAME | sed 's/cc$/s/'`\"\n+    $CXX $SRC_DIR/testsuite/$NAME -o $OUTPUT_NAME\n+    if [ -f $OUTPUT_NAME ]; then\n+\trm $OUTPUT_NAME\n+    fi\n+    echo \"\"\n+  fi\n+done\n+\n+exit 0"}, {"sha": "b395fcb14e010e98745ab6653d6a20be7335f8fb", "filename": "libstdc++-v3/scripts/check_performance", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/45d5f9afede9aa8a4490b1854bc2a2b8fe3f7952/libstdc%2B%2B-v3%2Fscripts%2Fcheck_performance", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/45d5f9afede9aa8a4490b1854bc2a2b8fe3f7952/libstdc%2B%2B-v3%2Fscripts%2Fcheck_performance", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fscripts%2Fcheck_performance?ref=45d5f9afede9aa8a4490b1854bc2a2b8fe3f7952", "patch": "@@ -23,16 +23,17 @@ case $BASH_VERSION in\n esac\n \n flags_script=$BUILD_DIR/scripts/testsuite_flags\n-INCLUDES=\"`$flags_script --build-includes` -include bits/stdc++.h\"\n+INCLUDES=`$flags_script --build-includes`\n+PCH_FLAGS=`$flags_script --cxxpchflags`\n FLAGS=`$flags_script --cxxflags`\n THREAD_FLAG='-pthread'\n COMPILER=`$flags_script --build-cxx`\n SH_FLAG=\"-Wl,--rpath -Wl,$BUILD_DIR/../../gcc \\\n          -Wl,--rpath -Wl,$BUILD_DIR/src/.libs\"\n ST_FLAG=\"-static\"\n LINK=$SH_FLAG\n-CXX=\"$COMPILER $INCLUDES $FLAGS -DNOTHREAD $LINK\"\n-CXX_THREAD=\"$COMPILER $INCLUDES $FLAGS $THREAD_FLAG $LINK\"\n+CXX=\"$COMPILER $INCLUDES $PCH_FLAGS $FLAGS -DNOTHREAD $LINK\"\n+CXX_THREAD=\"$COMPILER $INCLUDES $PCH_FLAGS $FLAGS $THREAD_FLAG $LINK\"\n \n \n TESTS_FILE=\"testsuite_files_performance\""}, {"sha": "1baeb826c4bbe5d592ecc5f1b76a98a6fe2a7bc1", "filename": "libstdc++-v3/testsuite/Makefile.am", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/45d5f9afede9aa8a4490b1854bc2a2b8fe3f7952/libstdc%2B%2B-v3%2Ftestsuite%2FMakefile.am", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/45d5f9afede9aa8a4490b1854bc2a2b8fe3f7952/libstdc%2B%2B-v3%2Ftestsuite%2FMakefile.am", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2FMakefile.am?ref=45d5f9afede9aa8a4490b1854bc2a2b8fe3f7952", "patch": "@@ -180,6 +180,12 @@ check-performance: testsuite_files_performance ${performance_script}\n \t-@(chmod + ${performance_script}; \\\n \t  ${performance_script} ${glibcxx_srcdir} ${glibcxx_builddir})\n \n+# Runs the testsuite, but in compile only mode, and times it.\n+# See script.\n+compile_script=${glibcxx_srcdir}/scripts/check_compile\n+check-compile: testsuite_files ${compile_script}\n+\t-@(chmod + ${compile_script}; \\\n+\t  ${compile_script} ${glibcxx_srcdir} ${glibcxx_builddir})\n \n # This rule generates all of the testsuite_files* lists at once.\n ${lists_of_files}:"}, {"sha": "4201ab9256de539fc991c2c279a15ae3a047825d", "filename": "libstdc++-v3/testsuite/Makefile.in", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/45d5f9afede9aa8a4490b1854bc2a2b8fe3f7952/libstdc%2B%2B-v3%2Ftestsuite%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/45d5f9afede9aa8a4490b1854bc2a2b8fe3f7952/libstdc%2B%2B-v3%2Ftestsuite%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2FMakefile.in?ref=45d5f9afede9aa8a4490b1854bc2a2b8fe3f7952", "patch": "@@ -310,6 +310,10 @@ survey_script = ${glibcxx_builddir}/scripts/check_survey\n # running this is off by default.\n performance_script = ${glibcxx_srcdir}/scripts/check_performance\n \n+# Runs the testsuite, but in compile only mode, and times it.\n+# See script.\n+compile_script = ${glibcxx_srcdir}/scripts/check_compile\n+\n # By adding these files here, automake will remove them for 'make clean'\n CLEANFILES = *.txt *.tst *.exe core* filebuf_* tmp* ostream_* *.log *.sum \\\n \t     testsuite_* site.exp abi_check baseline_symbols *TEST*\n@@ -662,6 +666,9 @@ check-script-install: ${survey_script}\n check-performance: testsuite_files_performance ${performance_script}\n \t-@(chmod + ${performance_script}; \\\n \t  ${performance_script} ${glibcxx_srcdir} ${glibcxx_builddir})\n+check-compile: testsuite_files ${compile_script}\n+\t-@(chmod + ${compile_script}; \\\n+\t  ${compile_script} ${glibcxx_srcdir} ${glibcxx_builddir})\n \n # This rule generates all of the testsuite_files* lists at once.\n ${lists_of_files}:"}]}