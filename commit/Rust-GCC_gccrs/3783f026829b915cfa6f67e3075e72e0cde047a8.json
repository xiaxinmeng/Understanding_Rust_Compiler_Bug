{"sha": "3783f026829b915cfa6f67e3075e72e0cde047a8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Mzc4M2YwMjY4MjliOTE1Y2ZhNmY2N2UzMDc1ZTcyZTBjZGUwNDdhOA==", "commit": {"author": {"name": "Eric Christopher", "email": "echristo@apple.com", "date": "2007-04-10T23:00:00Z"}, "committer": {"name": "Eric Christopher", "email": "echristo@gcc.gnu.org", "date": "2007-04-10T23:00:00Z"}, "message": "2007-04-10  Eric Christopher  <echristo@apple.com>\n\n        * lib/target-supports.exp\n        (check_effective_target_fstack_protector): Rewrite.\n\nFrom-SVN: r123702", "tree": {"sha": "40208aaac0d485066b49915f7f87bc24794b96ca", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/40208aaac0d485066b49915f7f87bc24794b96ca"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3783f026829b915cfa6f67e3075e72e0cde047a8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3783f026829b915cfa6f67e3075e72e0cde047a8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3783f026829b915cfa6f67e3075e72e0cde047a8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3783f026829b915cfa6f67e3075e72e0cde047a8/comments", "author": {"login": "echristo", "id": 327308, "node_id": "MDQ6VXNlcjMyNzMwOA==", "avatar_url": "https://avatars.githubusercontent.com/u/327308?v=4", "gravatar_id": "", "url": "https://api.github.com/users/echristo", "html_url": "https://github.com/echristo", "followers_url": "https://api.github.com/users/echristo/followers", "following_url": "https://api.github.com/users/echristo/following{/other_user}", "gists_url": "https://api.github.com/users/echristo/gists{/gist_id}", "starred_url": "https://api.github.com/users/echristo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/echristo/subscriptions", "organizations_url": "https://api.github.com/users/echristo/orgs", "repos_url": "https://api.github.com/users/echristo/repos", "events_url": "https://api.github.com/users/echristo/events{/privacy}", "received_events_url": "https://api.github.com/users/echristo/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "246b8cf5d733bb35c8882015834c07307104e6b5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/246b8cf5d733bb35c8882015834c07307104e6b5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/246b8cf5d733bb35c8882015834c07307104e6b5"}], "stats": {"total": 38, "additions": 34, "deletions": 4}, "files": [{"sha": "f2e261c8a4f131e8034e29f1a9bb2a79a609878e", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3783f026829b915cfa6f67e3075e72e0cde047a8/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3783f026829b915cfa6f67e3075e72e0cde047a8/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=3783f026829b915cfa6f67e3075e72e0cde047a8", "patch": "@@ -1,3 +1,8 @@\n+2007-04-10  Eric Christopher  <echristo@apple.com>\n+\n+\t* lib/target-supports.exp\n+\t(check_effective_target_fstack_protector): Rewrite.\n+\n 2007-04-09  Mark Mitchell  <mark@codesourcery.com>\n \n \tPR c++/31449"}, {"sha": "180686f69bf06c5e1bca5c327e2cab508fb215d2", "filename": "gcc/testsuite/lib/target-supports.exp", "status": "modified", "additions": 29, "deletions": 4, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3783f026829b915cfa6f67e3075e72e0cde047a8/gcc%2Ftestsuite%2Flib%2Ftarget-supports.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3783f026829b915cfa6f67e3075e72e0cde047a8/gcc%2Ftestsuite%2Flib%2Ftarget-supports.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Flib%2Ftarget-supports.exp?ref=3783f026829b915cfa6f67e3075e72e0cde047a8", "patch": "@@ -492,11 +492,36 @@ proc check_effective_target_fopenmp {} {\n }\n \n # Return 1 if the target supports -fstack-protector\n-\n proc check_effective_target_fstack_protector {} {\n-    return [check_no_compiler_messages fstack_protector assembly {\n-        void foo (void) { }\n-    } \"-fstack-protector\"]\n+    global tool\n+    set result \"\"\n+\n+    set src stack_prot[pid].c\n+    set exe stack_prot[pid].x\n+\n+    verbose \"check_effective_target_fstack_protector compiling testfile $src\" 2\n+\n+    set f [open $src \"w\"]\n+    # Compile a small test program.\n+    puts $f \"int main (void)\\n { return 0; }\\n\"\n+    close $f\n+\n+    set opts \"additional_flags=-fstack-protector\"\n+    set lines [${tool}_target_compile $src $exe executable \"$opts\" ]\n+    file delete $src\n+\n+    if [string match \"\" $lines] then {\n+        # No error messages, everything is OK.\n+        set result [${tool}_load \"./$exe\" \"\" \"\"]\n+        set status [lindex $result 0]\n+        remote_file build delete $exe\n+        verbose \"check_iconv_available status is <$status>\" 2\n+\n+        if { $status == \"pass\" } then {\n+            return 1\n+        }\n+    }\n+    return 0\n }\n \n # Return 1 if compilation with -freorder-blocks-and-partition is error-free"}]}