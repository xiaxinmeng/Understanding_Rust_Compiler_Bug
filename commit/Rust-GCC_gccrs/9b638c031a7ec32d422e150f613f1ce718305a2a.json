{"sha": "9b638c031a7ec32d422e150f613f1ce718305a2a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OWI2MzhjMDMxYTdlYzMyZDQyMmUxNTBmNjEzZjFjZTcxODMwNWEyYQ==", "commit": {"author": {"name": "Richard Guenther", "email": "rguenther@suse.de", "date": "2010-07-29T12:31:29Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2010-07-29T12:31:29Z"}, "message": "tree.c (build_vector): Assert that the vector constant has enough elements.\n\n2010-07-29  Richard Guenther  <rguenther@suse.de>\n\n\t* tree.c (build_vector): Assert that the vector constant\n\thas enough elements.\n\t(build_vector_from_ctor): Pad with trailing zeros.\n\nFrom-SVN: r162677", "tree": {"sha": "d6a0b4eca69ba92d9f1bd7793ead87989b748a15", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d6a0b4eca69ba92d9f1bd7793ead87989b748a15"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9b638c031a7ec32d422e150f613f1ce718305a2a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9b638c031a7ec32d422e150f613f1ce718305a2a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9b638c031a7ec32d422e150f613f1ce718305a2a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9b638c031a7ec32d422e150f613f1ce718305a2a/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "1c09321ca033a4094193fe9ce4e54e3344ac5360", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1c09321ca033a4094193fe9ce4e54e3344ac5360", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1c09321ca033a4094193fe9ce4e54e3344ac5360"}], "stats": {"total": 13, "additions": 13, "deletions": 0}, "files": [{"sha": "44353ab7ec82d30caf892203b0f2cc96a4d67ff8", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9b638c031a7ec32d422e150f613f1ce718305a2a/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9b638c031a7ec32d422e150f613f1ce718305a2a/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=9b638c031a7ec32d422e150f613f1ce718305a2a", "patch": "@@ -1,3 +1,9 @@\n+2010-07-29  Richard Guenther  <rguenther@suse.de>\n+\n+\t* tree.c (build_vector): Assert that the vector constant\n+\thas enough elements.\n+\t(build_vector_from_ctor): Pad with trailing zeros.\n+\n 2010-07-29  Richard Guenther  <rguenther@suse.de>\n \n \tPR tree-optimization/45120"}, {"sha": "f40114575e88e72310569f778f7267a79ba642d4", "filename": "gcc/tree.c", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9b638c031a7ec32d422e150f613f1ce718305a2a/gcc%2Ftree.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9b638c031a7ec32d422e150f613f1ce718305a2a/gcc%2Ftree.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree.c?ref=9b638c031a7ec32d422e150f613f1ce718305a2a", "patch": "@@ -1318,6 +1318,7 @@ build_vector (tree type, tree vals)\n   tree v = make_node (VECTOR_CST);\n   int over = 0;\n   tree link;\n+  unsigned cnt = 0;\n \n   TREE_VECTOR_CST_ELTS (v) = vals;\n   TREE_TYPE (v) = type;\n@@ -1326,6 +1327,7 @@ build_vector (tree type, tree vals)\n   for (link = vals; link; link = TREE_CHAIN (link))\n     {\n       tree value = TREE_VALUE (link);\n+      cnt++;\n \n       /* Don't crash if we get an address constant.  */\n       if (!CONSTANT_CLASS_P (value))\n@@ -1334,6 +1336,8 @@ build_vector (tree type, tree vals)\n       over |= TREE_OVERFLOW (value);\n     }\n \n+  gcc_assert (cnt == TYPE_VECTOR_SUBPARTS (type));\n+\n   TREE_OVERFLOW (v) = over;\n   return v;\n }\n@@ -1350,6 +1354,9 @@ build_vector_from_ctor (tree type, VEC(constructor_elt,gc) *v)\n \n   FOR_EACH_CONSTRUCTOR_VALUE (v, idx, value)\n     list = tree_cons (NULL_TREE, value, list);\n+  for (; idx < TYPE_VECTOR_SUBPARTS (type); ++idx)\n+    list = tree_cons (NULL_TREE,\n+\t\t      fold_convert (TREE_TYPE (type), integer_zero_node), list);\n   return build_vector (type, nreverse (list));\n }\n "}]}