{"sha": "edcdea5b0076b473fbed3d0338193aae7d0d9361", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWRjZGVhNWIwMDc2YjQ3M2ZiZWQzZDAzMzgxOTNhYWU3ZDBkOTM2MQ==", "commit": {"author": {"name": "Nathan Froyd", "email": "froydnj@codesourcery.com", "date": "2011-04-15T14:27:55Z"}, "committer": {"name": "Nathan Froyd", "email": "froydnj@gcc.gnu.org", "date": "2011-04-15T14:27:55Z"}, "message": "gimple.h (gimple_asm_clobbers_memory_p): Declare.\n\n\t* gimple.h (gimple_asm_clobbers_memory_p): Declare.\n\t* gimple.c (gimple_asm_clobbers_memory_p): Define.\n\t* ipa-pure-const.c (check_stmt): Call it.\n\t* tree-ssa-operands.c (get_asm_expr_operands): Likewise.\n\nFrom-SVN: r172496", "tree": {"sha": "20eb5a05b4a467b5a01f7586202e5298a4829e50", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/20eb5a05b4a467b5a01f7586202e5298a4829e50"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/edcdea5b0076b473fbed3d0338193aae7d0d9361", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/edcdea5b0076b473fbed3d0338193aae7d0d9361", "html_url": "https://github.com/Rust-GCC/gccrs/commit/edcdea5b0076b473fbed3d0338193aae7d0d9361", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/edcdea5b0076b473fbed3d0338193aae7d0d9361/comments", "author": null, "committer": null, "parents": [{"sha": "0f141046690f732453dc182f1dedb9ae31622a93", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0f141046690f732453dc182f1dedb9ae31622a93", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0f141046690f732453dc182f1dedb9ae31622a93"}], "stats": {"total": 51, "additions": 32, "deletions": 19}, "files": [{"sha": "52a1718d24ccf17d18d233b2e45ebd47b23b191c", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/edcdea5b0076b473fbed3d0338193aae7d0d9361/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/edcdea5b0076b473fbed3d0338193aae7d0d9361/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=edcdea5b0076b473fbed3d0338193aae7d0d9361", "patch": "@@ -1,3 +1,10 @@\n+2011-04-15  Nathan Froyd  <froydnj@codesourcery.com>\n+\n+\t* gimple.h (gimple_asm_clobbers_memory_p): Declare.\n+\t* gimple.c (gimple_asm_clobbers_memory_p): Define.\n+\t* ipa-pure-const.c (check_stmt): Call it.\n+\t* tree-ssa-operands.c (get_asm_expr_operands): Likewise.\n+\n 2011-04-15  Richard Guenther  <rguenther@suse.de>\n \n \tPR tree-optimization/48290"}, {"sha": "5dc62ea999253fad8ba7e88bef96153880108893", "filename": "gcc/gimple.c", "status": "modified", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/edcdea5b0076b473fbed3d0338193aae7d0d9361/gcc%2Fgimple.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/edcdea5b0076b473fbed3d0338193aae7d0d9361/gcc%2Fgimple.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgimple.c?ref=edcdea5b0076b473fbed3d0338193aae7d0d9361", "patch": "@@ -5142,4 +5142,21 @@ gimple_call_builtin_p (gimple stmt, enum built_in_function code)\n \t  && DECL_FUNCTION_CODE (fndecl) == code);\n }\n \n+/* Return true if STMT clobbers memory.  STMT is required to be a\n+   GIMPLE_ASM.  */\n+\n+bool\n+gimple_asm_clobbers_memory_p (const_gimple stmt)\n+{\n+  unsigned i;\n+\n+  for (i = 0; i < gimple_asm_nclobbers (stmt); i++)\n+    {\n+      tree op = gimple_asm_clobber_op (stmt, i);\n+      if (strcmp (TREE_STRING_POINTER (TREE_VALUE (op)), \"memory\") == 0)\n+\treturn true;\n+    }\n+\n+  return false;\n+}\n #include \"gt-gimple.h\""}, {"sha": "840e149fde8a41dc968cb2cea5b8bc99d14cdc65", "filename": "gcc/gimple.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/edcdea5b0076b473fbed3d0338193aae7d0d9361/gcc%2Fgimple.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/edcdea5b0076b473fbed3d0338193aae7d0d9361/gcc%2Fgimple.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgimple.h?ref=edcdea5b0076b473fbed3d0338193aae7d0d9361", "patch": "@@ -973,6 +973,7 @@ extern bool walk_stmt_load_store_ops (gimple, void *,\n \t\t\t\t      bool (*)(gimple, tree, void *));\n extern bool gimple_ior_addresses_taken (bitmap, gimple);\n extern bool gimple_call_builtin_p (gimple, enum built_in_function);\n+extern bool gimple_asm_clobbers_memory_p (const_gimple);\n \n /* In gimplify.c  */\n extern tree create_tmp_var_raw (tree, const char *);"}, {"sha": "eb5b0f6ab61937591533bedc09aeee1a502a7a07", "filename": "gcc/ipa-pure-const.c", "status": "modified", "additions": 5, "deletions": 10, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/edcdea5b0076b473fbed3d0338193aae7d0d9361/gcc%2Fipa-pure-const.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/edcdea5b0076b473fbed3d0338193aae7d0d9361/gcc%2Fipa-pure-const.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fipa-pure-const.c?ref=edcdea5b0076b473fbed3d0338193aae7d0d9361", "patch": "@@ -639,7 +639,6 @@ static void\n check_stmt (gimple_stmt_iterator *gsip, funct_state local, bool ipa)\n {\n   gimple stmt = gsi_stmt (*gsip);\n-  unsigned int i = 0;\n \n   if (is_gimple_debug (stmt))\n     return;\n@@ -693,16 +692,12 @@ check_stmt (gimple_stmt_iterator *gsip, funct_state local, bool ipa)\n \t}\n       break;\n     case GIMPLE_ASM:\n-      for (i = 0; i < gimple_asm_nclobbers (stmt); i++)\n+      if (gimple_asm_clobbers_memory_p (stmt))\n \t{\n-\t  tree op = gimple_asm_clobber_op (stmt, i);\n-\t  if (strcmp (TREE_STRING_POINTER (TREE_VALUE (op)), \"memory\") == 0)\n-\t    {\n-              if (dump_file)\n-                fprintf (dump_file, \"    memory asm clobber is not const/pure\");\n-\t      /* Abandon all hope, ye who enter here. */\n-\t      local->pure_const_state = IPA_NEITHER;\n-\t    }\n+\t  if (dump_file)\n+\t    fprintf (dump_file, \"    memory asm clobber is not const/pure\");\n+\t  /* Abandon all hope, ye who enter here. */\n+\t  local->pure_const_state = IPA_NEITHER;\n \t}\n       if (gimple_asm_volatile_p (stmt))\n \t{"}, {"sha": "7f76cbfe9c090d46ee1cf6dff4d2a5e60f5ca469", "filename": "gcc/tree-ssa-operands.c", "status": "modified", "additions": 2, "deletions": 9, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/edcdea5b0076b473fbed3d0338193aae7d0d9361/gcc%2Ftree-ssa-operands.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/edcdea5b0076b473fbed3d0338193aae7d0d9361/gcc%2Ftree-ssa-operands.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-operands.c?ref=edcdea5b0076b473fbed3d0338193aae7d0d9361", "patch": "@@ -832,15 +832,8 @@ get_asm_expr_operands (gimple stmt)\n     }\n \n   /* Clobber all memory and addressable symbols for asm (\"\" : : : \"memory\");  */\n-  for (i = 0; i < gimple_asm_nclobbers (stmt); i++)\n-    {\n-      tree link = gimple_asm_clobber_op (stmt, i);\n-      if (strcmp (TREE_STRING_POINTER (TREE_VALUE (link)), \"memory\") == 0)\n-\t{\n-\t  add_virtual_operand (stmt, opf_def);\n-\t  break;\n-\t}\n-    }\n+  if (gimple_asm_clobbers_memory_p (stmt))\n+    add_virtual_operand (stmt, opf_def);\n }\n \n "}]}