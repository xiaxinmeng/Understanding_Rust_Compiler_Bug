{"sha": "bce26def5998cbc546e99cdc3c874d921b04aa5e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmNlMjZkZWY1OTk4Y2JjNTQ2ZTk5Y2RjM2M4NzRkOTIxYjA0YWE1ZQ==", "commit": {"author": {"name": "Sebastian Pop", "email": "sebastian.pop@amd.com", "date": "2011-07-26T18:48:49Z"}, "committer": {"name": "Sebastian Pop", "email": "spop@gcc.gnu.org", "date": "2011-07-26T18:48:49Z"}, "message": "Fix PR47046: correct evolution_function_is_affine_p\n\n\"Bug 47046 - gcc.target/i386/sse4_1-movntdqa.c ICEs with -fgraphite-identity\"\n\nThe problem here is that we are left with the following code to be\ntranslated in the new representation following the transform that\nGraphite has chosen:\n\n        D.2709_14 = j_33 * i_32;\n        D.2710_15 = D.2709_14 * i_32;\n        D.2711_16 = D.2710_15 * sign_34;\n        *D.2708_13 = D.2711_16;\n\nIn this particular case we have a nonlinear expression \"i * i\" for\nwhich we have to generate code following the new graphite_iv variables.\n\nThe patch fixes the function that detects whether we are passing non\nlinear stuff to graphite: evolution_function_is_affine_p.  It seems\nlike for the moment evolution_function_is_affine_p is testing whether\nan evolution function is affine only in the innermost loop, without\nlooking recursively at what happens in outer loops.\n\nThe chrec for this case is: {0, +, {0, +, {1, +, 2}_1}_1}_2 and we are\ntesting whether the evolution is affine only for the loop_2, which is\ntrue as we have {0, +, blah}_2 with blah invariant in loop_2.\n\nThe patch adds the recursive call to evolution_function_is_affine_p.\n\nBootstrapped and tested on amd64-linux.\n\n2011-07-26  Sebastian Pop  <sebastian.pop@amd.com>\n\n\tPR middle-end/47046\n\t* tree-chrec.h (evolution_function_is_affine_p): Recursively call\n\tevolution_function_is_affine_p on CHREC_RIGHT.\n\n\t* gcc.dg/graphite/id-pr47046.c: New.\n\nFrom-SVN: r176805", "tree": {"sha": "bf58e7791a096e450ade20b026e8f46c0b225503", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/bf58e7791a096e450ade20b026e8f46c0b225503"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/bce26def5998cbc546e99cdc3c874d921b04aa5e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bce26def5998cbc546e99cdc3c874d921b04aa5e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bce26def5998cbc546e99cdc3c874d921b04aa5e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bce26def5998cbc546e99cdc3c874d921b04aa5e/comments", "author": null, "committer": {"login": "sebpop", "id": 568397, "node_id": "MDQ6VXNlcjU2ODM5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/568397?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sebpop", "html_url": "https://github.com/sebpop", "followers_url": "https://api.github.com/users/sebpop/followers", "following_url": "https://api.github.com/users/sebpop/following{/other_user}", "gists_url": "https://api.github.com/users/sebpop/gists{/gist_id}", "starred_url": "https://api.github.com/users/sebpop/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sebpop/subscriptions", "organizations_url": "https://api.github.com/users/sebpop/orgs", "repos_url": "https://api.github.com/users/sebpop/repos", "events_url": "https://api.github.com/users/sebpop/events{/privacy}", "received_events_url": "https://api.github.com/users/sebpop/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5f72e02dd8892ed77705a5f7b8ae35926a9350a0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5f72e02dd8892ed77705a5f7b8ae35926a9350a0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5f72e02dd8892ed77705a5f7b8ae35926a9350a0"}], "stats": {"total": 28, "additions": 27, "deletions": 1}, "files": [{"sha": "5a3a71e3bfe0e361d1f63be0204c712cb2fb3d6a", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bce26def5998cbc546e99cdc3c874d921b04aa5e/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bce26def5998cbc546e99cdc3c874d921b04aa5e/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=bce26def5998cbc546e99cdc3c874d921b04aa5e", "patch": "@@ -1,3 +1,9 @@\n+2011-07-26  Sebastian Pop  <sebastian.pop@amd.com>\n+\n+\tPR middle-end/47046\n+\t* tree-chrec.h (evolution_function_is_affine_p): Recursively call\n+\tevolution_function_is_affine_p on CHREC_RIGHT.\n+\n 2011-07-26  Sebastian Pop  <sebastian.pop@amd.com>\n \n \t* tree-data-ref.c (max_stmt_executions_tree): Do not call"}, {"sha": "b201960d301d6b39614006aecc800a24869d0e62", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bce26def5998cbc546e99cdc3c874d921b04aa5e/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bce26def5998cbc546e99cdc3c874d921b04aa5e/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=bce26def5998cbc546e99cdc3c874d921b04aa5e", "patch": "@@ -1,3 +1,8 @@\n+2011-07-26  Sebastian Pop  <sebastian.pop@amd.com>\n+\n+\tPR middle-end/47046\n+\t* gcc.dg/graphite/id-pr47046.c: New.\n+\n 2011-07-26  Sebastian Pop  <sebastian.pop@amd.com>\n \n \tPR middle-end/47653"}, {"sha": "aba38ed5e3260271f468b3b64e396940b311f227", "filename": "gcc/testsuite/gcc.dg/graphite/id-pr47046.c", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bce26def5998cbc546e99cdc3c874d921b04aa5e/gcc%2Ftestsuite%2Fgcc.dg%2Fgraphite%2Fid-pr47046.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bce26def5998cbc546e99cdc3c874d921b04aa5e/gcc%2Ftestsuite%2Fgcc.dg%2Fgraphite%2Fid-pr47046.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fgraphite%2Fid-pr47046.c?ref=bce26def5998cbc546e99cdc3c874d921b04aa5e", "patch": "@@ -0,0 +1,13 @@\n+void\n+init_movntdqa (int *src)\n+{\n+  int i, j, sign = 1;\n+\n+  for (i = 0; i < 20; i++)\n+    for (j = 0; j < 4; j++)\n+      {\n+\tsrc[i * 4 + j] = j * i * i * sign;\n+\tsign = -sign;\n+      }\n+}\n+"}, {"sha": "9b971bde1afdc6cd113a443c940e2c492cd4a97d", "filename": "gcc/tree-chrec.h", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bce26def5998cbc546e99cdc3c874d921b04aa5e/gcc%2Ftree-chrec.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bce26def5998cbc546e99cdc3c874d921b04aa5e/gcc%2Ftree-chrec.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-chrec.h?ref=bce26def5998cbc546e99cdc3c874d921b04aa5e", "patch": "@@ -205,7 +205,9 @@ evolution_function_is_affine_p (const_tree chrec)\n   return chrec\n     && TREE_CODE (chrec) == POLYNOMIAL_CHREC\n     && evolution_function_is_invariant_p (CHREC_RIGHT (chrec),\n-\t\t\t\t\t  CHREC_VARIABLE (chrec));\n+\t\t\t\t\t  CHREC_VARIABLE (chrec))\n+    && (TREE_CODE (CHREC_RIGHT (chrec)) != POLYNOMIAL_CHREC\n+\t|| evolution_function_is_affine_p (CHREC_RIGHT (chrec)));\n }\n \n /* Determines whether EXPR does not contains chrec expressions.  */"}]}