{"sha": "b65261f65ce433197269b2ca383551e92a7933a7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjY1MjYxZjY1Y2U0MzMxOTcyNjliMmNhMzgzNTUxZTkyYTc5MzNhNw==", "commit": {"author": {"name": "Segher Boessenkool", "email": "segher@kernel.crashing.org", "date": "2016-09-01T22:26:05Z"}, "committer": {"name": "Segher Boessenkool", "email": "segher@gcc.gnu.org", "date": "2016-09-01T22:26:05Z"}, "message": "rs6000: Rename 74 -> CR6_REGNO\n\n\n\t* config/rs6000/altivec.md: Use CR6_REGNO instead of 74 throughout.\n\t* config/rs6000/vector.md: Ditto.\n\t* config/rs6000/vsx.md: Ditto.\n\nFrom-SVN: r239946", "tree": {"sha": "d889d31336d8f1f8c9dbb3fa098d6dd7f54b384d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d889d31336d8f1f8c9dbb3fa098d6dd7f54b384d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b65261f65ce433197269b2ca383551e92a7933a7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b65261f65ce433197269b2ca383551e92a7933a7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b65261f65ce433197269b2ca383551e92a7933a7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b65261f65ce433197269b2ca383551e92a7933a7/comments", "author": {"login": "segher", "id": 417629, "node_id": "MDQ6VXNlcjQxNzYyOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/417629?v=4", "gravatar_id": "", "url": "https://api.github.com/users/segher", "html_url": "https://github.com/segher", "followers_url": "https://api.github.com/users/segher/followers", "following_url": "https://api.github.com/users/segher/following{/other_user}", "gists_url": "https://api.github.com/users/segher/gists{/gist_id}", "starred_url": "https://api.github.com/users/segher/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/segher/subscriptions", "organizations_url": "https://api.github.com/users/segher/orgs", "repos_url": "https://api.github.com/users/segher/repos", "events_url": "https://api.github.com/users/segher/events{/privacy}", "received_events_url": "https://api.github.com/users/segher/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "7e89048d4af5e33dcb5036e98b698e7312eb460e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7e89048d4af5e33dcb5036e98b698e7312eb460e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7e89048d4af5e33dcb5036e98b698e7312eb460e"}], "stats": {"total": 58, "additions": 32, "deletions": 26}, "files": [{"sha": "ad0e95a58187952a4117b09bd7f5017761941c4d", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b65261f65ce433197269b2ca383551e92a7933a7/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b65261f65ce433197269b2ca383551e92a7933a7/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=b65261f65ce433197269b2ca383551e92a7933a7", "patch": "@@ -1,3 +1,9 @@\n+2016-09-01  Segher Boessenkool  <segher@kernel.crashing.org>\n+\n+\t* config/rs6000/altivec.md: Use CR6_REGNO instead of 74 throughout.\n+\t* config/rs6000/vector.md: Ditto.\n+\t* config/rs6000/vsx.md: Ditto.\n+\n 2016-09-01  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* ipa-inline-analysis.c (param_change_prob): Get to the base object"}, {"sha": "480e64ec5ba0a0c00982534eb1499f474697648f", "filename": "gcc/config/rs6000/altivec.md", "status": "modified", "additions": 15, "deletions": 15, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b65261f65ce433197269b2ca383551e92a7933a7/gcc%2Fconfig%2Frs6000%2Faltivec.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b65261f65ce433197269b2ca383551e92a7933a7/gcc%2Fconfig%2Frs6000%2Faltivec.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Faltivec.md?ref=b65261f65ce433197269b2ca383551e92a7933a7", "patch": "@@ -2274,7 +2274,7 @@\n ;; Compare vectors producing a vector result and a predicate, setting CR6 to\n ;; indicate a combined status\n (define_insn \"*altivec_vcmpequ<VI_char>_p\"\n-  [(set (reg:CC 74)\n+  [(set (reg:CC CR6_REGNO)\n \t(unspec:CC [(eq:CC (match_operand:VI2 1 \"register_operand\" \"v\")\n \t\t\t   (match_operand:VI2 2 \"register_operand\" \"v\"))]\n \t\t   UNSPEC_PREDICATE))\n@@ -2286,7 +2286,7 @@\n   [(set_attr \"type\" \"veccmpfx\")])\n \n (define_insn \"*altivec_vcmpgts<VI_char>_p\"\n-  [(set (reg:CC 74)\n+  [(set (reg:CC CR6_REGNO)\n \t(unspec:CC [(gt:CC (match_operand:VI2 1 \"register_operand\" \"v\")\n \t\t\t   (match_operand:VI2 2 \"register_operand\" \"v\"))]\n \t\t   UNSPEC_PREDICATE))\n@@ -2298,7 +2298,7 @@\n   [(set_attr \"type\" \"veccmpfx\")])\n \n (define_insn \"*altivec_vcmpgtu<VI_char>_p\"\n-  [(set (reg:CC 74)\n+  [(set (reg:CC CR6_REGNO)\n \t(unspec:CC [(gtu:CC (match_operand:VI2 1 \"register_operand\" \"v\")\n \t\t\t    (match_operand:VI2 2 \"register_operand\" \"v\"))]\n \t\t   UNSPEC_PREDICATE))\n@@ -2310,7 +2310,7 @@\n   [(set_attr \"type\" \"veccmpfx\")])\n \n (define_insn \"*altivec_vcmpeqfp_p\"\n-  [(set (reg:CC 74)\n+  [(set (reg:CC CR6_REGNO)\n \t(unspec:CC [(eq:CC (match_operand:V4SF 1 \"register_operand\" \"v\")\n \t\t\t   (match_operand:V4SF 2 \"register_operand\" \"v\"))]\n \t\t   UNSPEC_PREDICATE))\n@@ -2322,7 +2322,7 @@\n   [(set_attr \"type\" \"veccmp\")])\n \n (define_insn \"*altivec_vcmpgtfp_p\"\n-  [(set (reg:CC 74)\n+  [(set (reg:CC CR6_REGNO)\n \t(unspec:CC [(gt:CC (match_operand:V4SF 1 \"register_operand\" \"v\")\n \t\t\t   (match_operand:V4SF 2 \"register_operand\" \"v\"))]\n \t\t   UNSPEC_PREDICATE))\n@@ -2334,7 +2334,7 @@\n   [(set_attr \"type\" \"veccmp\")])\n \n (define_insn \"*altivec_vcmpgefp_p\"\n-  [(set (reg:CC 74)\n+  [(set (reg:CC CR6_REGNO)\n \t(unspec:CC [(ge:CC (match_operand:V4SF 1 \"register_operand\" \"v\")\n \t\t\t   (match_operand:V4SF 2 \"register_operand\" \"v\"))]\n \t\t   UNSPEC_PREDICATE))\n@@ -2346,7 +2346,7 @@\n   [(set_attr \"type\" \"veccmp\")])\n \n (define_insn \"altivec_vcmpbfp_p\"\n-  [(set (reg:CC 74)\n+  [(set (reg:CC CR6_REGNO)\n \t(unspec:CC [(match_operand:V4SF 1 \"register_operand\" \"v\")\n \t\t    (match_operand:V4SF 2 \"register_operand\" \"v\")]\n \t\t   UNSPEC_VCMPBFP))\n@@ -3634,7 +3634,7 @@\n \t\t      (match_operand:V1TI 2 \"register_operand\" \"\")\n \t\t      (match_operand:QI 3 \"const_0_to_1_operand\" \"\")]\n \t\t     UNSPEC_BCD_ADD_SUB))\n-   (clobber (reg:CCFP 74))]\n+   (clobber (reg:CCFP CR6_REGNO))]\n   \"TARGET_P8_VECTOR\"\n   \"bcd<bcd_add_sub>. %0,%1,%2,%3\"\n   [(set_attr \"length\" \"4\")\n@@ -3646,7 +3646,7 @@\n ;; probably should be one that can go in the VMX (Altivec) registers, so we\n ;; can't use DDmode or DFmode.\n (define_insn \"*bcd<bcd_add_sub>_test\"\n-  [(set (reg:CCFP 74)\n+  [(set (reg:CCFP CR6_REGNO)\n \t(compare:CCFP\n \t (unspec:V2DF [(match_operand:V1TI 1 \"register_operand\" \"v\")\n \t\t       (match_operand:V1TI 2 \"register_operand\" \"v\")\n@@ -3665,7 +3665,7 @@\n \t\t      (match_operand:V1TI 2 \"register_operand\" \"v\")\n \t\t      (match_operand:QI 3 \"const_0_to_1_operand\" \"i\")]\n \t\t     UNSPEC_BCD_ADD_SUB))\n-   (set (reg:CCFP 74)\n+   (set (reg:CCFP CR6_REGNO)\n \t(compare:CCFP\n \t (unspec:V2DF [(match_dup 1)\n \t\t       (match_dup 2)\n@@ -3699,7 +3699,7 @@\n   [(set_attr \"type\" \"integer\")])\n \n (define_expand \"bcd<bcd_add_sub>_<code>\"\n-  [(parallel [(set (reg:CCFP 74)\n+  [(parallel [(set (reg:CCFP CR6_REGNO)\n \t\t   (compare:CCFP\n \t\t    (unspec:V2DF [(match_operand:V1TI 1 \"register_operand\" \"\")\n \t\t\t\t  (match_operand:V1TI 2 \"register_operand\" \"\")\n@@ -3708,7 +3708,7 @@\n \t\t    (match_dup 4)))\n \t      (clobber (match_scratch:V1TI 5 \"\"))])\n    (set (match_operand:SI 0 \"register_operand\" \"\")\n-\t(BCD_TEST:SI (reg:CCFP 74)\n+\t(BCD_TEST:SI (reg:CCFP CR6_REGNO)\n \t\t     (const_int 0)))]\n   \"TARGET_P8_VECTOR\"\n {\n@@ -3727,8 +3727,8 @@\n \t\t\t\t (match_operand:V1TI 2 \"register_operand\" \"\")\n \t\t\t\t (match_operand:QI 3 \"const_0_to_1_operand\" \"\")]\n \t\t\t\tUNSPEC_BCD_ADD_SUB))\n-\t      (clobber (reg:CCFP 74))])\n-   (parallel [(set (reg:CCFP 74)\n+\t      (clobber (reg:CCFP CR6_REGNO))])\n+   (parallel [(set (reg:CCFP CR6_REGNO)\n \t\t   (compare:CCFP\n \t\t    (unspec:V2DF [(match_dup 1)\n \t\t\t\t  (match_dup 2)\n@@ -3742,7 +3742,7 @@\n \t\t\t\t (match_dup 2)\n \t\t\t\t (match_dup 3)]\n \t\t\t\tUNSPEC_BCD_ADD_SUB))\n-\t      (set (reg:CCFP 74)\n+\t      (set (reg:CCFP CR6_REGNO)\n \t\t   (compare:CCFP\n \t\t    (unspec:V2DF [(match_dup 1)\n \t\t\t\t  (match_dup 2)"}, {"sha": "d42de0f9d3c05b271390b4cc150afff473f8173a", "filename": "gcc/config/rs6000/vector.md", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b65261f65ce433197269b2ca383551e92a7933a7/gcc%2Fconfig%2Frs6000%2Fvector.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b65261f65ce433197269b2ca383551e92a7933a7/gcc%2Fconfig%2Frs6000%2Fvector.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Fvector.md?ref=b65261f65ce433197269b2ca383551e92a7933a7", "patch": "@@ -670,7 +670,7 @@\n ;; setting CR6 to indicate a combined status\n (define_expand \"vector_eq_<mode>_p\"\n   [(parallel\n-    [(set (reg:CC 74)\n+    [(set (reg:CC CR6_REGNO)\n \t  (unspec:CC [(eq:CC (match_operand:VEC_A 1 \"vlogical_operand\" \"\")\n \t\t\t     (match_operand:VEC_A 2 \"vlogical_operand\" \"\"))]\n \t\t     UNSPEC_PREDICATE))\n@@ -682,7 +682,7 @@\n \n (define_expand \"vector_gt_<mode>_p\"\n   [(parallel\n-    [(set (reg:CC 74)\n+    [(set (reg:CC CR6_REGNO)\n \t  (unspec:CC [(gt:CC (match_operand:VEC_A 1 \"vlogical_operand\" \"\")\n \t\t\t     (match_operand:VEC_A 2 \"vlogical_operand\" \"\"))]\n \t\t     UNSPEC_PREDICATE))\n@@ -694,7 +694,7 @@\n \n (define_expand \"vector_ge_<mode>_p\"\n   [(parallel\n-    [(set (reg:CC 74)\n+    [(set (reg:CC CR6_REGNO)\n \t  (unspec:CC [(ge:CC (match_operand:VEC_F 1 \"vfloat_operand\" \"\")\n \t\t\t     (match_operand:VEC_F 2 \"vfloat_operand\" \"\"))]\n \t\t     UNSPEC_PREDICATE))\n@@ -706,7 +706,7 @@\n \n (define_expand \"vector_gtu_<mode>_p\"\n   [(parallel\n-    [(set (reg:CC 74)\n+    [(set (reg:CC CR6_REGNO)\n \t  (unspec:CC [(gtu:CC (match_operand:VEC_I 1 \"vint_operand\" \"\")\n \t\t\t      (match_operand:VEC_I 2 \"vint_operand\" \"\"))]\n \t\t     UNSPEC_PREDICATE))\n@@ -720,14 +720,14 @@\n \n (define_expand \"cr6_test_for_zero\"\n   [(set (match_operand:SI 0 \"register_operand\" \"=r\")\n-\t(eq:SI (reg:CC 74)\n+\t(eq:SI (reg:CC CR6_REGNO)\n \t       (const_int 0)))]\n   \"TARGET_ALTIVEC || TARGET_VSX\"\n   \"\")\n \n (define_expand \"cr6_test_for_zero_reverse\"\n   [(set (match_operand:SI 0 \"register_operand\" \"=r\")\n-\t(eq:SI (reg:CC 74)\n+\t(eq:SI (reg:CC CR6_REGNO)\n \t       (const_int 0)))\n    (set (match_dup 0)\n \t(xor:SI (match_dup 0)\n@@ -737,14 +737,14 @@\n \n (define_expand \"cr6_test_for_lt\"\n   [(set (match_operand:SI 0 \"register_operand\" \"=r\")\n-\t(lt:SI (reg:CC 74)\n+\t(lt:SI (reg:CC CR6_REGNO)\n \t       (const_int 0)))]\n   \"TARGET_ALTIVEC || TARGET_VSX\"\n   \"\")\n \n (define_expand \"cr6_test_for_lt_reverse\"\n   [(set (match_operand:SI 0 \"register_operand\" \"=r\")\n-\t(lt:SI (reg:CC 74)\n+\t(lt:SI (reg:CC CR6_REGNO)\n \t       (const_int 0)))\n    (set (match_dup 0)\n \t(xor:SI (match_dup 0)"}, {"sha": "359e424d6b4a7684b864e3b333dbed60d8eb01fb", "filename": "gcc/config/rs6000/vsx.md", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b65261f65ce433197269b2ca383551e92a7933a7/gcc%2Fconfig%2Frs6000%2Fvsx.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b65261f65ce433197269b2ca383551e92a7933a7/gcc%2Fconfig%2Frs6000%2Fvsx.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Fvsx.md?ref=b65261f65ce433197269b2ca383551e92a7933a7", "patch": "@@ -1499,7 +1499,7 @@\n ;; Compare vectors producing a vector result and a predicate, setting CR6 to\n ;; indicate a combined status\n (define_insn \"*vsx_eq_<mode>_p\"\n-  [(set (reg:CC 74)\n+  [(set (reg:CC CR6_REGNO)\n \t(unspec:CC\n \t [(eq:CC (match_operand:VSX_F 1 \"vsx_register_operand\" \"<VSr>,?<VSa>\")\n \t\t (match_operand:VSX_F 2 \"vsx_register_operand\" \"<VSr>,?<VSa>\"))]\n@@ -1512,7 +1512,7 @@\n   [(set_attr \"type\" \"<VStype_simple>\")])\n \n (define_insn \"*vsx_gt_<mode>_p\"\n-  [(set (reg:CC 74)\n+  [(set (reg:CC CR6_REGNO)\n \t(unspec:CC\n \t [(gt:CC (match_operand:VSX_F 1 \"vsx_register_operand\" \"<VSr>,?<VSa>\")\n \t\t (match_operand:VSX_F 2 \"vsx_register_operand\" \"<VSr>,?<VSa>\"))]\n@@ -1525,7 +1525,7 @@\n   [(set_attr \"type\" \"<VStype_simple>\")])\n \n (define_insn \"*vsx_ge_<mode>_p\"\n-  [(set (reg:CC 74)\n+  [(set (reg:CC CR6_REGNO)\n \t(unspec:CC\n \t [(ge:CC (match_operand:VSX_F 1 \"vsx_register_operand\" \"<VSr>,?<VSa>\")\n \t\t (match_operand:VSX_F 2 \"vsx_register_operand\" \"<VSr>,?<VSa>\"))]"}]}