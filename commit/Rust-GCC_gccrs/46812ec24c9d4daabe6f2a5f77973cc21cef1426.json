{"sha": "46812ec24c9d4daabe6f2a5f77973cc21cef1426", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDY4MTJlYzI0YzlkNGRhYWJlNmYyYTVmNzc5NzNjYzIxY2VmMTQyNg==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2013-06-27T02:35:46Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2013-06-27T02:35:46Z"}, "message": "typeck2.c (store_init_value): Diagnose a non-constant initializer for in-class static.\n\n\t* typeck2.c (store_init_value): Diagnose a non-constant\n\tinitializer for in-class static.\n\nFrom-SVN: r200450", "tree": {"sha": "cde2acd08fb5a853014aca34e776bdf9be527196", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/cde2acd08fb5a853014aca34e776bdf9be527196"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/46812ec24c9d4daabe6f2a5f77973cc21cef1426", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/46812ec24c9d4daabe6f2a5f77973cc21cef1426", "html_url": "https://github.com/Rust-GCC/gccrs/commit/46812ec24c9d4daabe6f2a5f77973cc21cef1426", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/46812ec24c9d4daabe6f2a5f77973cc21cef1426/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "447cf5546fce5161b9dd532c2b27b3086b43a198", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/447cf5546fce5161b9dd532c2b27b3086b43a198", "html_url": "https://github.com/Rust-GCC/gccrs/commit/447cf5546fce5161b9dd532c2b27b3086b43a198"}], "stats": {"total": 51, "additions": 30, "deletions": 21}, "files": [{"sha": "7b40665484f850333901b55230a2926d85b8444c", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/46812ec24c9d4daabe6f2a5f77973cc21cef1426/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/46812ec24c9d4daabe6f2a5f77973cc21cef1426/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=46812ec24c9d4daabe6f2a5f77973cc21cef1426", "patch": "@@ -1,4 +1,7 @@\n-2013-06-21  Jason Merrill  <jason@redhat.com>\n+2013-06-26  Jason Merrill  <jason@redhat.com>\n+\n+\t* typeck2.c (store_init_value): Diagnose a non-constant\n+\tinitializer for in-class static.\n \n \tPR c++/57408\n \t* semantics.c (add_capture): Set type to error_mark_node after"}, {"sha": "047fd77fd74abb7f83fcc418b347a9c0054cfa4c", "filename": "gcc/cp/decl.c", "status": "modified", "additions": 0, "deletions": 19, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/46812ec24c9d4daabe6f2a5f77973cc21cef1426/gcc%2Fcp%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/46812ec24c9d4daabe6f2a5f77973cc21cef1426/gcc%2Fcp%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fdecl.c?ref=46812ec24c9d4daabe6f2a5f77973cc21cef1426", "patch": "@@ -6346,25 +6346,6 @@ cp_finish_decl (tree decl, tree init, bool init_const_expr_p,\n \t  cleanups = make_tree_vector ();\n \t  init = check_initializer (decl, init, flags, &cleanups);\n \n-\t  /* Check that the initializer for a static data member was a\n-\t     constant.  Although we check in the parser that the\n-\t     initializer is an integral constant expression, we do not\n-\t     simplify division-by-zero at the point at which it\n-\t     occurs.  Therefore, in:\n-\n-\t       struct S { static const int i = 7 / 0; };\n-\n-\t     we issue an error at this point.  It would\n-\t     probably be better to forbid division by zero in\n-\t     integral constant expressions.  */\n-\t  if (DECL_EXTERNAL (decl) && init)\n-\t    {\n-\t      error (\"%qD cannot be initialized by a non-constant expression\"\n-\t\t     \" when being declared\", decl);\n-\t      DECL_INITIALIZED_IN_CLASS_P (decl) = 0;\n-\t      init = NULL_TREE;\n-\t    }\n-\n \t  /* Handle:\n \n \t     [dcl.init]"}, {"sha": "79329397a8b45aadf664e4a955bf8645ecd23cc7", "filename": "gcc/cp/typeck2.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/46812ec24c9d4daabe6f2a5f77973cc21cef1426/gcc%2Fcp%2Ftypeck2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/46812ec24c9d4daabe6f2a5f77973cc21cef1426/gcc%2Fcp%2Ftypeck2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Ftypeck2.c?ref=46812ec24c9d4daabe6f2a5f77973cc21cef1426", "patch": "@@ -775,7 +775,8 @@ store_init_value (tree decl, tree init, vec<tree, va_gc>** cleanups, int flags)\n       bool const_init;\n       value = fold_non_dependent_expr (value);\n       value = maybe_constant_init (value);\n-      if (DECL_DECLARED_CONSTEXPR_P (decl))\n+      if (DECL_DECLARED_CONSTEXPR_P (decl)\n+\t  || DECL_IN_AGGR_P (decl))\n \t{\n \t  /* Diagnose a non-constant initializer for constexpr.  */\n \t  if (processing_template_decl"}, {"sha": "7033e9c451ac6167abca37d55085af31faff90da", "filename": "gcc/testsuite/g++.dg/cpp0x/overflow1.C", "status": "added", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/46812ec24c9d4daabe6f2a5f77973cc21cef1426/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Foverflow1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/46812ec24c9d4daabe6f2a5f77973cc21cef1426/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Foverflow1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Foverflow1.C?ref=46812ec24c9d4daabe6f2a5f77973cc21cef1426", "patch": "@@ -0,0 +1,23 @@\n+template <long long i>\n+struct Fib\n+{\n+    static const long long value // { dg-error \"overflow\" }\n+    = Fib<i-1>::value + Fib<i-2>::value;\n+};\n+\n+template <>\n+struct Fib<0>\n+{\n+   static const long long value = 0;\n+};\n+\n+template <>\n+struct Fib<1>\n+{\n+   static const long long value = 1;\n+};\n+\n+int main()\n+{\n+  return Fib<95>::value;\n+}"}, {"sha": "f2f2330cea4380988be893a43678924dce2112b5", "filename": "libstdc++-v3/testsuite/20_util/ratio/operations/ops_overflow_neg.cc", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/46812ec24c9d4daabe6f2a5f77973cc21cef1426/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fratio%2Foperations%2Fops_overflow_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/46812ec24c9d4daabe6f2a5f77973cc21cef1426/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fratio%2Foperations%2Fops_overflow_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fratio%2Foperations%2Fops_overflow_neg.cc?ref=46812ec24c9d4daabe6f2a5f77973cc21cef1426", "patch": "@@ -46,5 +46,6 @@ test02()\n // { dg-error \"overflow in multiplication\" \"\" { target *-*-* } 97 }\n // { dg-error \"overflow in multiplication\" \"\" { target *-*-* } 99 }\n // { dg-error \"overflow in multiplication\" \"\" { target *-*-* } 101 }\n+// { dg-error \"overflow in constant expression\" \"\" { target *-*-* } 108 }\n // { dg-prune-output \"out of range\" }\n // { dg-prune-output \"not usable in a constant expression\" }"}]}