{"sha": "c6b0d21d49a2605b2c667cec37b31140133b1fd5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzZiMGQyMWQ0OWEyNjA1YjJjNjY3Y2VjMzdiMzExNDAxMzNiMWZkNQ==", "commit": {"author": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2017-02-17T14:36:08Z"}, "committer": {"name": "Martin Liska", "email": "marxin@gcc.gnu.org", "date": "2017-02-17T14:36:08Z"}, "message": "Introduce ssa_defined_default_def_p function (PR tree-optimization/79529).\n\n2017-02-17  Martin Liska  <mliska@suse.cz>\n\n\tPR tree-optimization/79529\n\t* tree-ssa-loop-unswitch.c (is_maybe_undefined): Use\n\tssa_defined_default_def_p to handle cases which are implicitly\n\tdefined.\n\t* tree-ssa.c (ssa_defined_default_def_p): New function.\n\t(ssa_undefined_value_p): Use ssa_defined_default_def_p to handle cases\n\twhich are implicitly defined.\n\t* tree-ssa.h (ssa_defined_default_def_p): Declare.\n\nFrom-SVN: r245530", "tree": {"sha": "2d644d831748550bdfe21bd8444f49d2c62f5768", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2d644d831748550bdfe21bd8444f49d2c62f5768"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c6b0d21d49a2605b2c667cec37b31140133b1fd5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c6b0d21d49a2605b2c667cec37b31140133b1fd5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c6b0d21d49a2605b2c667cec37b31140133b1fd5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c6b0d21d49a2605b2c667cec37b31140133b1fd5/comments", "author": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "830afa4b0c8f2012b91c639f18a426d18aa36af2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/830afa4b0c8f2012b91c639f18a426d18aa36af2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/830afa4b0c8f2012b91c639f18a426d18aa36af2"}], "stats": {"total": 43, "additions": 33, "deletions": 10}, "files": [{"sha": "defd5431ef15cd20c2d9442b0de9efd602000b2a", "filename": "gcc/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c6b0d21d49a2605b2c667cec37b31140133b1fd5/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c6b0d21d49a2605b2c667cec37b31140133b1fd5/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=c6b0d21d49a2605b2c667cec37b31140133b1fd5", "patch": "@@ -1,3 +1,14 @@\n+2017-02-17  Martin Liska  <mliska@suse.cz>\n+\n+\tPR tree-optimization/79529\n+\t* tree-ssa-loop-unswitch.c (is_maybe_undefined): Use\n+\tssa_defined_default_def_p to handle cases which are implicitly\n+\tdefined.\n+\t* tree-ssa.c (ssa_defined_default_def_p): New function.\n+\t(ssa_undefined_value_p): Use ssa_defined_default_def_p to handle cases\n+\twhich are implicitly defined.\n+\t* tree-ssa.h (ssa_defined_default_def_p): Declare.\n+\n 2017-02-17  Richard Biener  <rguenther@suse.de>\n \n \tPR middle-end/79576"}, {"sha": "1845148666db39e87663171e43b6c88929431f60", "filename": "gcc/tree-ssa-loop-unswitch.c", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c6b0d21d49a2605b2c667cec37b31140133b1fd5/gcc%2Ftree-ssa-loop-unswitch.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c6b0d21d49a2605b2c667cec37b31140133b1fd5/gcc%2Ftree-ssa-loop-unswitch.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-loop-unswitch.c?ref=c6b0d21d49a2605b2c667cec37b31140133b1fd5", "patch": "@@ -134,9 +134,7 @@ is_maybe_undefined (const tree name, gimple *stmt, struct loop *loop)\n       if (ssa_undefined_value_p (t, true))\n \treturn true;\n \n-      /* A PARM_DECL will not have an SSA_NAME_DEF_STMT.  Parameters\n-\t get their initial value from function entry.  */\n-      if (SSA_NAME_VAR (t) && TREE_CODE (SSA_NAME_VAR (t)) == PARM_DECL)\n+      if (ssa_defined_default_def_p (t))\n \tcontinue;\n \n       gimple *def = SSA_NAME_DEF_STMT (t);"}, {"sha": "831fd61e15f8e99fce6d3f888cafdcef6d87889e", "filename": "gcc/tree-ssa.c", "status": "modified", "additions": 19, "deletions": 7, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c6b0d21d49a2605b2c667cec37b31140133b1fd5/gcc%2Ftree-ssa.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c6b0d21d49a2605b2c667cec37b31140133b1fd5/gcc%2Ftree-ssa.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa.c?ref=c6b0d21d49a2605b2c667cec37b31140133b1fd5", "patch": "@@ -1251,27 +1251,39 @@ tree_ssa_strip_useless_type_conversions (tree exp)\n   return exp;\n }\n \n-\n-/* Return true if T, an SSA_NAME, has an undefined value.  PARTIAL is what\n-   should be returned if the value is only partially undefined.  */\n+/* Return true if T, as SSA_NAME, has an implicit default defined value.  */\n \n bool\n-ssa_undefined_value_p (tree t, bool partial)\n+ssa_defined_default_def_p (tree t)\n {\n-  gimple *def_stmt;\n   tree var = SSA_NAME_VAR (t);\n \n   if (!var)\n     ;\n   /* Parameters get their initial value from the function entry.  */\n   else if (TREE_CODE (var) == PARM_DECL)\n-    return false;\n+    return true;\n   /* When returning by reference the return address is actually a hidden\n      parameter.  */\n   else if (TREE_CODE (var) == RESULT_DECL && DECL_BY_REFERENCE (var))\n-    return false;\n+    return true;\n   /* Hard register variables get their initial value from the ether.  */\n   else if (VAR_P (var) && DECL_HARD_REGISTER (var))\n+    return true;\n+\n+  return false;\n+}\n+\n+\n+/* Return true if T, an SSA_NAME, has an undefined value.  PARTIAL is what\n+   should be returned if the value is only partially undefined.  */\n+\n+bool\n+ssa_undefined_value_p (tree t, bool partial)\n+{\n+  gimple *def_stmt;\n+\n+  if (ssa_defined_default_def_p (t))\n     return false;\n \n   /* The value is undefined iff its definition statement is empty.  */"}, {"sha": "c99b5eaee82e478131fad66c2553a9f6567827c5", "filename": "gcc/tree-ssa.h", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c6b0d21d49a2605b2c667cec37b31140133b1fd5/gcc%2Ftree-ssa.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c6b0d21d49a2605b2c667cec37b31140133b1fd5/gcc%2Ftree-ssa.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa.h?ref=c6b0d21d49a2605b2c667cec37b31140133b1fd5", "patch": "@@ -50,6 +50,8 @@ extern void delete_tree_ssa (function *);\n extern bool tree_ssa_useless_type_conversion (tree);\n extern tree tree_ssa_strip_useless_type_conversions (tree);\n \n+\n+extern bool ssa_defined_default_def_p (tree t);\n extern bool ssa_undefined_value_p (tree, bool = true);\n extern bool gimple_uses_undefined_value_p (gimple *);\n extern void execute_update_addresses_taken (void);"}]}