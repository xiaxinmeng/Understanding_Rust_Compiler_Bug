{"sha": "54f46d82f54ba7a4110cef102b7c18eaf8b4b6bd", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTRmNDZkODJmNTRiYTdhNDExMGNlZjEwMmI3YzE4ZWFmOGI0YjZiZA==", "commit": {"author": {"name": "H.J. Lu", "email": "hjl.tools@gmail.com", "date": "2020-03-12T10:47:45Z"}, "committer": {"name": "H.J. Lu", "email": "hjl.tools@gmail.com", "date": "2020-03-12T10:48:01Z"}, "message": "i386: Use ix86_output_ssemov for MMX TYPE_SSEMOV\n\nThere is no need to set mode attribute to XImode since ix86_output_ssemov\ncan properly encode xmm16-xmm31 registers with and without AVX512VL.\n\n\tPR target/89229\n\t* config/i386/i386.c (ix86_output_ssemov): Handle MODE_DI,\n\tMODE_V1DF and MODE_V2SF.\n\t* config/i386/mmx.md (MMXMODE:*mov<mode>_internal): Call\n\tix86_output_ssemov for TYPE_SSEMOV.  Remove ext_sse_reg_operand\n\tcheck.", "tree": {"sha": "9b885852c8093cde4dbe4557ac9b58646cda17e0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9b885852c8093cde4dbe4557ac9b58646cda17e0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/54f46d82f54ba7a4110cef102b7c18eaf8b4b6bd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/54f46d82f54ba7a4110cef102b7c18eaf8b4b6bd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/54f46d82f54ba7a4110cef102b7c18eaf8b4b6bd", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/54f46d82f54ba7a4110cef102b7c18eaf8b4b6bd/comments", "author": {"login": "hjl-tools", "id": 1072356, "node_id": "MDQ6VXNlcjEwNzIzNTY=", "avatar_url": "https://avatars.githubusercontent.com/u/1072356?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hjl-tools", "html_url": "https://github.com/hjl-tools", "followers_url": "https://api.github.com/users/hjl-tools/followers", "following_url": "https://api.github.com/users/hjl-tools/following{/other_user}", "gists_url": "https://api.github.com/users/hjl-tools/gists{/gist_id}", "starred_url": "https://api.github.com/users/hjl-tools/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hjl-tools/subscriptions", "organizations_url": "https://api.github.com/users/hjl-tools/orgs", "repos_url": "https://api.github.com/users/hjl-tools/repos", "events_url": "https://api.github.com/users/hjl-tools/events{/privacy}", "received_events_url": "https://api.github.com/users/hjl-tools/received_events", "type": "User", "site_admin": false}, "committer": {"login": "hjl-tools", "id": 1072356, "node_id": "MDQ6VXNlcjEwNzIzNTY=", "avatar_url": "https://avatars.githubusercontent.com/u/1072356?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hjl-tools", "html_url": "https://github.com/hjl-tools", "followers_url": "https://api.github.com/users/hjl-tools/followers", "following_url": "https://api.github.com/users/hjl-tools/following{/other_user}", "gists_url": "https://api.github.com/users/hjl-tools/gists{/gist_id}", "starred_url": "https://api.github.com/users/hjl-tools/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hjl-tools/subscriptions", "organizations_url": "https://api.github.com/users/hjl-tools/orgs", "repos_url": "https://api.github.com/users/hjl-tools/repos", "events_url": "https://api.github.com/users/hjl-tools/events{/privacy}", "received_events_url": "https://api.github.com/users/hjl-tools/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "98aeb1ef510204bf90e94b6cc85e5ba68df93d00", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/98aeb1ef510204bf90e94b6cc85e5ba68df93d00", "html_url": "https://github.com/Rust-GCC/gccrs/commit/98aeb1ef510204bf90e94b6cc85e5ba68df93d00"}], "stats": {"total": 57, "additions": 30, "deletions": 27}, "files": [{"sha": "22ba5ed36e68302757346f2c8b0c0401a095b2b3", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/54f46d82f54ba7a4110cef102b7c18eaf8b4b6bd/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/54f46d82f54ba7a4110cef102b7c18eaf8b4b6bd/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=54f46d82f54ba7a4110cef102b7c18eaf8b4b6bd", "patch": "@@ -1,3 +1,12 @@\n+2020-03-12  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\tPR target/89229\n+\t* config/i386/i386.c (ix86_output_ssemov): Handle MODE_DI,\n+\tMODE_V1DF and MODE_V2SF.\n+\t* config/i386/mmx.md (MMXMODE:*mov<mode>_internal): Call\n+\tix86_output_ssemov for TYPE_SSEMOV.  Remove ext_sse_reg_operand\n+\tcheck.\n+\n 2020-03-12  Jakub Jelinek  <jakub@redhat.com>\n \n \t* doc/tm.texi.in (ASM_OUTPUT_ALIGNED_DECL_LOCAL): Change"}, {"sha": "6d83855692fa6c9962928372a55c95e8271d5715", "filename": "gcc/config/i386/i386.c", "status": "modified", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/54f46d82f54ba7a4110cef102b7c18eaf8b4b6bd/gcc%2Fconfig%2Fi386%2Fi386.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/54f46d82f54ba7a4110cef102b7c18eaf8b4b6bd/gcc%2Fconfig%2Fi386%2Fi386.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.c?ref=54f46d82f54ba7a4110cef102b7c18eaf8b4b6bd", "patch": "@@ -5118,6 +5118,25 @@ ix86_output_ssemov (rtx_insn *insn, rtx *operands)\n     case MODE_V4SF:\n       return ix86_get_ssemov (operands, 16, insn_mode, mode);\n \n+    case MODE_DI:\n+      /* Handle broken assemblers that require movd instead of movq. */\n+      if (!HAVE_AS_IX86_INTERUNIT_MOVQ\n+\t  && (GENERAL_REG_P (operands[0])\n+\t      || GENERAL_REG_P (operands[1])))\n+\treturn \"%vmovd\\t{%1, %0|%0, %1}\";\n+      else\n+\treturn \"%vmovq\\t{%1, %0|%0, %1}\";\n+\n+    case MODE_V1DF:\n+      gcc_assert (!TARGET_AVX);\n+      return \"movlpd\\t{%1, %0|%0, %1}\";\n+\n+    case MODE_V2SF:\n+      if (TARGET_AVX && REG_P (operands[0]))\n+\treturn \"vmovlps\\t{%1, %d0|%d0, %1}\";\n+      else\n+\treturn \"%vmovlps\\t{%1, %0|%0, %1}\";\n+\n     default:\n       gcc_unreachable ();\n     }"}, {"sha": "c3f195bb34ac9a9a6541bcb9e103e7774cdf3473", "filename": "gcc/config/i386/mmx.md", "status": "modified", "additions": 2, "deletions": 27, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/54f46d82f54ba7a4110cef102b7c18eaf8b4b6bd/gcc%2Fconfig%2Fi386%2Fmmx.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/54f46d82f54ba7a4110cef102b7c18eaf8b4b6bd/gcc%2Fconfig%2Fi386%2Fmmx.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fmmx.md?ref=54f46d82f54ba7a4110cef102b7c18eaf8b4b6bd", "patch": "@@ -118,29 +118,7 @@\n       return standard_sse_constant_opcode (insn, operands);\n \n     case TYPE_SSEMOV:\n-      switch (get_attr_mode (insn))\n-\t{\n-\tcase MODE_DI:\n-\t  /* Handle broken assemblers that require movd instead of movq.  */\n-\t  if (!HAVE_AS_IX86_INTERUNIT_MOVQ\n-\t      && (GENERAL_REG_P (operands[0]) || GENERAL_REG_P (operands[1])))\n-\t    return \"%vmovd\\t{%1, %0|%0, %1}\";\n-\t  return \"%vmovq\\t{%1, %0|%0, %1}\";\n-\tcase MODE_TI:\n-\t  return \"%vmovdqa\\t{%1, %0|%0, %1}\";\n-\tcase MODE_XI:\n-\t  return \"vmovdqa64\\t{%g1, %g0|%g0, %g1}\";\n-\n-\tcase MODE_V2SF:\n-\t  if (TARGET_AVX && REG_P (operands[0]))\n-\t    return \"vmovlps\\t{%1, %0, %0|%0, %0, %1}\";\n-\t  return \"%vmovlps\\t{%1, %0|%0, %1}\";\n-\tcase MODE_V4SF:\n-\t  return \"%vmovaps\\t{%1, %0|%0, %1}\";\n-\n-\tdefault:\n-\t  gcc_unreachable ();\n-\t}\n+      return ix86_output_ssemov (insn, operands);\n \n     default:\n       gcc_unreachable ();\n@@ -189,10 +167,7 @@\n      (cond [(eq_attr \"alternative\" \"2\")\n \t      (const_string \"SI\")\n \t    (eq_attr \"alternative\" \"11,12\")\n-\t      (cond [(ior (match_operand 0 \"ext_sse_reg_operand\")\n-\t\t\t  (match_operand 1 \"ext_sse_reg_operand\"))\n-\t\t\t(const_string \"XI\")\n-\t\t     (match_test \"<MODE>mode == V2SFmode\")\n+\t      (cond [(match_test \"<MODE>mode == V2SFmode\")\n \t\t       (const_string \"V4SF\")\n \t\t     (ior (not (match_test \"TARGET_SSE2\"))\n \t\t\t  (match_test \"optimize_function_for_size_p (cfun)\"))"}]}