{"sha": "7b371e73d8f54518f30ac28c978eabfd684e7af7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6N2IzNzFlNzNkOGY1NDUxOGYzMGFjMjhjOTc4ZWFiZmQ2ODRlN2FmNw==", "commit": {"author": {"name": "Sebastian Pop", "email": "sebastian.pop@amd.com", "date": "2010-05-26T16:45:56Z"}, "committer": {"name": "Sebastian Pop", "email": "spop@gcc.gnu.org", "date": "2010-05-26T16:45:56Z"}, "message": "Make tree_if_conversion not return a bool.\n\n2010-05-26  Sebastian Pop  <sebastian.pop@amd.com>\n\n\t* tree-if-conv.c (tree_if_conversion): Do not return a bool.\n\nFrom-SVN: r159881", "tree": {"sha": "b33ffd26d39e598cd8baa7aac50721156cb42fd3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b33ffd26d39e598cd8baa7aac50721156cb42fd3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7b371e73d8f54518f30ac28c978eabfd684e7af7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7b371e73d8f54518f30ac28c978eabfd684e7af7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7b371e73d8f54518f30ac28c978eabfd684e7af7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7b371e73d8f54518f30ac28c978eabfd684e7af7/comments", "author": null, "committer": {"login": "sebpop", "id": 568397, "node_id": "MDQ6VXNlcjU2ODM5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/568397?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sebpop", "html_url": "https://github.com/sebpop", "followers_url": "https://api.github.com/users/sebpop/followers", "following_url": "https://api.github.com/users/sebpop/following{/other_user}", "gists_url": "https://api.github.com/users/sebpop/gists{/gist_id}", "starred_url": "https://api.github.com/users/sebpop/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sebpop/subscriptions", "organizations_url": "https://api.github.com/users/sebpop/orgs", "repos_url": "https://api.github.com/users/sebpop/repos", "events_url": "https://api.github.com/users/sebpop/events{/privacy}", "received_events_url": "https://api.github.com/users/sebpop/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4ab719737cb105c71fc319566be3ae99da827489", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4ab719737cb105c71fc319566be3ae99da827489", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4ab719737cb105c71fc319566be3ae99da827489"}], "stats": {"total": 14, "additions": 8, "deletions": 6}, "files": [{"sha": "713a033b0e267821d32154ea81a09f752fdaf24b", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7b371e73d8f54518f30ac28c978eabfd684e7af7/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7b371e73d8f54518f30ac28c978eabfd684e7af7/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=7b371e73d8f54518f30ac28c978eabfd684e7af7", "patch": "@@ -1,3 +1,7 @@\n+2010-05-26  Sebastian Pop  <sebastian.pop@amd.com>\n+\n+\t* tree-if-conv.c (tree_if_conversion): Do not return a bool.\n+\n 2010-05-26  Sebastian Pop  <sebastian.pop@amd.com>\n \n \t* tree-if-conv.c: Update copyright years.  Fix comments."}, {"sha": "ba3b7c6848abfa2bdfa406a558aa401896c1f26b", "filename": "gcc/tree-if-conv.c", "status": "modified", "additions": 4, "deletions": 6, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7b371e73d8f54518f30ac28c978eabfd684e7af7/gcc%2Ftree-if-conv.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7b371e73d8f54518f30ac28c978eabfd684e7af7/gcc%2Ftree-if-conv.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-if-conv.c?ref=7b371e73d8f54518f30ac28c978eabfd684e7af7", "patch": "@@ -1004,10 +1004,10 @@ combine_blocks (struct loop *loop)\n     merge_blocks (loop->header, exit_bb);\n }\n \n-/* Main entry point: return true when LOOP is if-converted, otherwise\n-   the loop remains unchanged.  */\n+/* If-convert LOOP when it is legal.  For the moment this pass has no\n+   profitability analysis.  */\n \n-static bool\n+static void\n tree_if_conversion (struct loop *loop)\n {\n   gimple_stmt_iterator itr;\n@@ -1027,7 +1027,7 @@ tree_if_conversion (struct loop *loop)\n \t  ifc_bbs = NULL;\n \t}\n       free_dominance_info (CDI_POST_DOMINATORS);\n-      return false;\n+      return;\n     }\n \n   for (i = 0; i < loop->num_nodes; i++)\n@@ -1071,8 +1071,6 @@ tree_if_conversion (struct loop *loop)\n   clean_predicate_lists (loop);\n   free (ifc_bbs);\n   ifc_bbs = NULL;\n-\n-  return true;\n }\n \n /* Tree if-conversion pass management.  */"}]}