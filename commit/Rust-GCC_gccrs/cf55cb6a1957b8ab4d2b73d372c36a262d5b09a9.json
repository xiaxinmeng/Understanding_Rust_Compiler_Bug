{"sha": "cf55cb6a1957b8ab4d2b73d372c36a262d5b09a9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2Y1NWNiNmExOTU3YjhhYjRkMmI3M2QzNzJjMzZhMjYyZDViMDlhOQ==", "commit": {"author": {"name": "Richard Sandiford", "email": "rdsandiford@googlemail.com", "date": "2014-08-28T06:23:51Z"}, "committer": {"name": "Richard Sandiford", "email": "rsandifo@gcc.gnu.org", "date": "2014-08-28T06:23:51Z"}, "message": "lower-subreg.c: Include rtl-iter.h.\n\ngcc/\n\t* lower-subreg.c: Include rtl-iter.h.\n\t(resolve_subreg_use): Turn from being a for_each_rtx callback\n\tto being a function that examines each subrtx itself.  Remove\n\thandling of null rtxes.\n\t(resolve_reg_notes, resolve_simple_move): Update accordingly.\n\t(decompose_multiword_subregs): Likewise.\n\nFrom-SVN: r214647", "tree": {"sha": "e4018e3df8c0293dc9037719eb525846ac758d7f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e4018e3df8c0293dc9037719eb525846ac758d7f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/cf55cb6a1957b8ab4d2b73d372c36a262d5b09a9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cf55cb6a1957b8ab4d2b73d372c36a262d5b09a9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cf55cb6a1957b8ab4d2b73d372c36a262d5b09a9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cf55cb6a1957b8ab4d2b73d372c36a262d5b09a9/comments", "author": {"login": "rsandifo", "id": 4235983, "node_id": "MDQ6VXNlcjQyMzU5ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/4235983?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rsandifo", "html_url": "https://github.com/rsandifo", "followers_url": "https://api.github.com/users/rsandifo/followers", "following_url": "https://api.github.com/users/rsandifo/following{/other_user}", "gists_url": "https://api.github.com/users/rsandifo/gists{/gist_id}", "starred_url": "https://api.github.com/users/rsandifo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rsandifo/subscriptions", "organizations_url": "https://api.github.com/users/rsandifo/orgs", "repos_url": "https://api.github.com/users/rsandifo/repos", "events_url": "https://api.github.com/users/rsandifo/events{/privacy}", "received_events_url": "https://api.github.com/users/rsandifo/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "b42b06e6d7482b9bae21e5c32a6e9fcd6f51f086", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b42b06e6d7482b9bae21e5c32a6e9fcd6f51f086", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b42b06e6d7482b9bae21e5c32a6e9fcd6f51f086"}], "stats": {"total": 80, "additions": 42, "deletions": 38}, "files": [{"sha": "e8c89a4207dd101ad858a1c856a9b56107e963d1", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cf55cb6a1957b8ab4d2b73d372c36a262d5b09a9/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cf55cb6a1957b8ab4d2b73d372c36a262d5b09a9/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=cf55cb6a1957b8ab4d2b73d372c36a262d5b09a9", "patch": "@@ -1,3 +1,12 @@\n+2014-08-28  Richard Sandiford  <rdsandiford@googlemail.com>\n+\n+\t* lower-subreg.c: Include rtl-iter.h.\n+\t(resolve_subreg_use): Turn from being a for_each_rtx callback\n+\tto being a function that examines each subrtx itself.  Remove\n+\thandling of null rtxes.\n+\t(resolve_reg_notes, resolve_simple_move): Update accordingly.\n+\t(decompose_multiword_subregs): Likewise.\n+\n 2014-08-28  Richard Sandiford  <rdsandiford@googlemail.com>\n \n \t* loop-iv.c (altered_reg_used): Turn from being a for_each_rtx callback"}, {"sha": "43991e6281a9a531a6bb6842ec6c33bff1c91d73", "filename": "gcc/lower-subreg.c", "status": "modified", "additions": 33, "deletions": 38, "changes": 71, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cf55cb6a1957b8ab4d2b73d372c36a262d5b09a9/gcc%2Flower-subreg.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cf55cb6a1957b8ab4d2b73d372c36a262d5b09a9/gcc%2Flower-subreg.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flower-subreg.c?ref=cf55cb6a1957b8ab4d2b73d372c36a262d5b09a9", "patch": "@@ -40,6 +40,7 @@ along with GCC; see the file COPYING3.  If not see\n #include \"tree-pass.h\"\n #include \"df.h\"\n #include \"lower-subreg.h\"\n+#include \"rtl-iter.h\"\n \n #ifdef STACK_GROWS_DOWNWARD\n # undef STACK_GROWS_DOWNWARD\n@@ -726,46 +727,42 @@ resolve_subreg_p (rtx x)\n   return resolve_reg_p (SUBREG_REG (x));\n }\n \n-/* This is called via for_each_rtx.  Look for SUBREGs which need to be\n-   decomposed.  */\n+/* Look for SUBREGs in *LOC which need to be decomposed.  */\n \n-static int\n-resolve_subreg_use (rtx *px, void *data)\n+static bool\n+resolve_subreg_use (rtx *loc, rtx insn)\n {\n-  rtx insn = (rtx) data;\n-  rtx x = *px;\n-\n-  if (x == NULL_RTX)\n-    return 0;\n-\n-  if (resolve_subreg_p (x))\n+  subrtx_ptr_iterator::array_type array;\n+  FOR_EACH_SUBRTX_PTR (iter, array, loc, NONCONST)\n     {\n-      x = simplify_subreg_concatn (GET_MODE (x), SUBREG_REG (x),\n-\t\t\t\t   SUBREG_BYTE (x));\n-\n-      /* It is possible for a note to contain a reference which we can\n-\t decompose.  In this case, return 1 to the caller to indicate\n-\t that the note must be removed.  */\n-      if (!x)\n+      rtx *loc = *iter;\n+      rtx x = *loc;\n+      if (resolve_subreg_p (x))\n \t{\n-\t  gcc_assert (!insn);\n-\t  return 1;\n-\t}\n+\t  x = simplify_subreg_concatn (GET_MODE (x), SUBREG_REG (x),\n+\t\t\t\t       SUBREG_BYTE (x));\n \n-      validate_change (insn, px, x, 1);\n-      return -1;\n-    }\n+\t  /* It is possible for a note to contain a reference which we can\n+\t     decompose.  In this case, return 1 to the caller to indicate\n+\t     that the note must be removed.  */\n+\t  if (!x)\n+\t    {\n+\t      gcc_assert (!insn);\n+\t      return true;\n+\t    }\n \n-  if (resolve_reg_p (x))\n-    {\n-      /* Return 1 to the caller to indicate that we found a direct\n-\t reference to a register which is being decomposed.  This can\n-\t happen inside notes, multiword shift or zero-extend\n-\t instructions.  */\n-      return 1;\n+\t  validate_change (insn, loc, x, 1);\n+\t  iter.skip_subrtxes ();\n+\t}\n+      else if (resolve_reg_p (x))\n+\t/* Return 1 to the caller to indicate that we found a direct\n+\t   reference to a register which is being decomposed.  This can\n+\t   happen inside notes, multiword shift or zero-extend\n+\t   instructions.  */\n+\treturn true;\n     }\n \n-  return 0;\n+  return false;\n }\n \n /* This is called via for_each_rtx.  Look for SUBREGs which can be\n@@ -808,7 +805,7 @@ resolve_reg_notes (rtx_insn *insn)\n   if (note)\n     {\n       int old_count = num_validated_changes ();\n-      if (for_each_rtx (&XEXP (note, 0), resolve_subreg_use, NULL))\n+      if (resolve_subreg_use (&XEXP (note, 0), NULL_RTX))\n \tremove_note (insn, note);\n       else\n \tif (old_count != num_validated_changes ())\n@@ -952,9 +949,9 @@ resolve_simple_move (rtx set, rtx_insn *insn)\n       int acg;\n \n       if (MEM_P (src))\n-\tfor_each_rtx (&XEXP (src, 0), resolve_subreg_use, NULL_RTX);\n+\tresolve_subreg_use (&XEXP (src, 0), NULL_RTX);\n       if (MEM_P (dest))\n-\tfor_each_rtx (&XEXP (dest, 0), resolve_subreg_use, NULL_RTX);\n+\tresolve_subreg_use (&XEXP (dest, 0), NULL_RTX);\n       acg = apply_change_group ();\n       gcc_assert (acg);\n     }\n@@ -1617,9 +1614,7 @@ decompose_multiword_subregs (bool decompose_copies)\n \t\t    }\n \n \t\t  for (i = recog_data.n_operands - 1; i >= 0; --i)\n-\t\t    for_each_rtx (recog_data.operand_loc[i],\n-\t\t\t\t  resolve_subreg_use,\n-\t\t\t\t  insn);\n+\t\t    resolve_subreg_use (recog_data.operand_loc[i], insn);\n \n \t\t  resolve_reg_notes (insn);\n "}]}