{"sha": "e028b0bbca86c369c145a410cf06a65d729c91d6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTAyOGIwYmJjYTg2YzM2OWMxNDVhNDEwY2YwNmE2NWQ3MjljOTFkNg==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@adacore.com", "date": "2014-11-05T19:03:26Z"}, "committer": {"name": "Eric Botcazou", "email": "ebotcazou@gcc.gnu.org", "date": "2014-11-05T19:03:26Z"}, "message": "decl.c (gnat_to_gnu_entity): For a derived untagged type that renames discriminants...\n\n\t* gcc-interface/decl.c (gnat_to_gnu_entity) <E_Record_Type>: For a\n\tderived untagged type that renames discriminants, be prepared for\n\ta type derived from a private discriminated type when changing the\n\ttype of the stored discriminants.\n\nFrom-SVN: r217153", "tree": {"sha": "689a11b5b68ff99c2a799cbf10bcec80a263ec09", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/689a11b5b68ff99c2a799cbf10bcec80a263ec09"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e028b0bbca86c369c145a410cf06a65d729c91d6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e028b0bbca86c369c145a410cf06a65d729c91d6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e028b0bbca86c369c145a410cf06a65d729c91d6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e028b0bbca86c369c145a410cf06a65d729c91d6/comments", "author": null, "committer": null, "parents": [{"sha": "e84314ddc5146971cc963fe0d8cd3bbbd32ed64c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e84314ddc5146971cc963fe0d8cd3bbbd32ed64c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e84314ddc5146971cc963fe0d8cd3bbbd32ed64c"}], "stats": {"total": 60, "additions": 57, "deletions": 3}, "files": [{"sha": "72c0313afd3f5cc9f458344e943ebe46c9f61edc", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e028b0bbca86c369c145a410cf06a65d729c91d6/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e028b0bbca86c369c145a410cf06a65d729c91d6/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=e028b0bbca86c369c145a410cf06a65d729c91d6", "patch": "@@ -1,3 +1,10 @@\n+2014-11-05  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* gcc-interface/decl.c (gnat_to_gnu_entity) <E_Record_Type>: For a\n+\tderived untagged type that renames discriminants, be prepared for\n+\ta type derived from a private discriminated type when changing the\n+\ttype of the stored discriminants.\n+\n 2014-11-05  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* gcc-interface/trans.c (Handled_Sequence_Of_Statements_to_gnu): Set"}, {"sha": "2ed68d49578f40aa85eeae077247190928157efc", "filename": "gcc/ada/gcc-interface/decl.c", "status": "modified", "additions": 25, "deletions": 3, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e028b0bbca86c369c145a410cf06a65d729c91d6/gcc%2Fada%2Fgcc-interface%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e028b0bbca86c369c145a410cf06a65d729c91d6/gcc%2Fada%2Fgcc-interface%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgcc-interface%2Fdecl.c?ref=e028b0bbca86c369c145a410cf06a65d729c91d6", "patch": "@@ -3056,7 +3056,7 @@ gnat_to_gnu_entity (Entity_Id gnat_entity, tree gnu_expr, int definition)\n \t\t     gnat_field = Next_Stored_Discriminant (gnat_field))\n \t\t  if (Present (Corresponding_Discriminant (gnat_field)))\n \t\t    {\n-\t\t      Entity_Id field = Empty;\n+\t\t      Entity_Id field;\n \t\t      for (field = First_Stored_Discriminant (gnat_parent);\n \t\t\t   Present (field);\n \t\t\t   field = Next_Stored_Discriminant (field))\n@@ -3138,8 +3138,30 @@ gnat_to_gnu_entity (Entity_Id gnat_entity, tree gnu_expr, int definition)\n \t\t&& Ekind (Entity (Node (gnat_constr))) == E_Discriminant)\n \t      {\n \t\tEntity_Id gnat_discr = Entity (Node (gnat_constr));\n-\t\ttree gnu_discr_type = gnat_to_gnu_type (Etype (gnat_discr));\n-\t\ttree gnu_ref\n+\t\ttree gnu_discr_type, gnu_ref;\n+\n+\t\t/* If the scope of the discriminant is not the record type,\n+\t\t   this means that we're processing the implicit full view\n+\t\t   of a type derived from a private discriminated type: in\n+\t\t   this case, the Stored_Constraint list is simply copied\n+\t\t   from the partial view, see Build_Derived_Private_Type.\n+\t\t   So we need to retrieve the corresponding discriminant\n+\t\t   of the implicit full view, otherwise we will abort.  */\n+\t\tif (Scope (gnat_discr) != gnat_entity)\n+\t\t  {\n+\t\t    Entity_Id field;\n+\t\t    for (field = First_Entity (gnat_entity);\n+\t\t\t Present (field);\n+\t\t\t field = Next_Entity (field))\n+\t\t      if (Ekind (field) == E_Discriminant\n+\t\t\t  && same_discriminant_p (gnat_discr, field))\n+\t\t\tbreak;\n+\t\t    gcc_assert (Present (field));\n+\t\t    gnat_discr = field;\n+\t\t  }\n+\n+\t\tgnu_discr_type = gnat_to_gnu_type (Etype (gnat_discr));\n+\t\tgnu_ref\n \t\t  = gnat_to_gnu_entity (Original_Record_Component (gnat_discr),\n \t\t\t\t\tNULL_TREE, 0);\n "}, {"sha": "913b5c727661cf38e8dc3ff2526e3966a6945f50", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e028b0bbca86c369c145a410cf06a65d729c91d6/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e028b0bbca86c369c145a410cf06a65d729c91d6/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=e028b0bbca86c369c145a410cf06a65d729c91d6", "patch": "@@ -1,3 +1,8 @@\n+2014-11-05  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* gnat.dg/specs/private2.ads: New test.\n+\t* gnat.dg/specs/private2_pkg.ads: New helper.\n+\n 2014-11-05  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* gnat.dg/inline1.adb: New test."}, {"sha": "d6fff3856ab7b14ba7bab2044711343d9baf3e2f", "filename": "gcc/testsuite/gnat.dg/specs/private2.ads", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e028b0bbca86c369c145a410cf06a65d729c91d6/gcc%2Ftestsuite%2Fgnat.dg%2Fspecs%2Fprivate2.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e028b0bbca86c369c145a410cf06a65d729c91d6/gcc%2Ftestsuite%2Fgnat.dg%2Fspecs%2Fprivate2.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Fspecs%2Fprivate2.ads?ref=e028b0bbca86c369c145a410cf06a65d729c91d6", "patch": "@@ -0,0 +1,9 @@\n+-- { dg-do compile }\n+\n+with Private2_Pkg; use Private2_Pkg;\n+\n+package Private2 is\n+\n+   type R is new Rec2;\n+\n+end Private2;"}, {"sha": "468d239e53bf36a17a3c87e0bf91c666e24ba6cd", "filename": "gcc/testsuite/gnat.dg/specs/private2_pkg.ads", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e028b0bbca86c369c145a410cf06a65d729c91d6/gcc%2Ftestsuite%2Fgnat.dg%2Fspecs%2Fprivate2_pkg.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e028b0bbca86c369c145a410cf06a65d729c91d6/gcc%2Ftestsuite%2Fgnat.dg%2Fspecs%2Fprivate2_pkg.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Fspecs%2Fprivate2_pkg.ads?ref=e028b0bbca86c369c145a410cf06a65d729c91d6", "patch": "@@ -0,0 +1,11 @@\n+package Private2_Pkg is\r\n+\r\n+   type Rec2 (D : Natural) is private;\r\n+\r\n+private\r\n+\r\n+   type Rec1 (D : Natural) is null record;\r\n+\r\n+   type Rec2 (D : Natural) is new Rec1 (D);\r\n+\r\n+end Private2_Pkg;\r"}]}