{"sha": "44d6626ced36c5bec93ae6d72d29373e9f6aa36a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDRkNjYyNmNlZDM2YzViZWM5M2FlNmQ3MmQyOTM3M2U5ZjZhYTM2YQ==", "commit": {"author": {"name": "Iain Sandoe", "email": "iain@sandoe.co.uk", "date": "2018-12-06T13:36:35Z"}, "committer": {"name": "Iain Sandoe", "email": "iains@gcc.gnu.org", "date": "2018-12-06T13:36:35Z"}, "message": "Fix for PR78444 by ensuring 128b alignment at call sites.\n\n2018-12-06  Iain Sandoe  <iain@sandoe.co.uk>\n\n\tPR target/78444\n\t* config/i386/darwin.h (STACK_BOUNDARY): Remove macro.\n\t* config/i386/i386.c (ix86_compute_frame_layout): Ensure at least 128b\n\tstack alignment in non-leaf functions.\n\nFrom-SVN: r266853", "tree": {"sha": "bde09a2b682011af41513423289beb79bd1bdf78", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/bde09a2b682011af41513423289beb79bd1bdf78"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/44d6626ced36c5bec93ae6d72d29373e9f6aa36a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/44d6626ced36c5bec93ae6d72d29373e9f6aa36a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/44d6626ced36c5bec93ae6d72d29373e9f6aa36a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/44d6626ced36c5bec93ae6d72d29373e9f6aa36a/comments", "author": {"login": "iains", "id": 4039407, "node_id": "MDQ6VXNlcjQwMzk0MDc=", "avatar_url": "https://avatars.githubusercontent.com/u/4039407?v=4", "gravatar_id": "", "url": "https://api.github.com/users/iains", "html_url": "https://github.com/iains", "followers_url": "https://api.github.com/users/iains/followers", "following_url": "https://api.github.com/users/iains/following{/other_user}", "gists_url": "https://api.github.com/users/iains/gists{/gist_id}", "starred_url": "https://api.github.com/users/iains/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/iains/subscriptions", "organizations_url": "https://api.github.com/users/iains/orgs", "repos_url": "https://api.github.com/users/iains/repos", "events_url": "https://api.github.com/users/iains/events{/privacy}", "received_events_url": "https://api.github.com/users/iains/received_events", "type": "User", "site_admin": false}, "committer": {"login": "iains", "id": 4039407, "node_id": "MDQ6VXNlcjQwMzk0MDc=", "avatar_url": "https://avatars.githubusercontent.com/u/4039407?v=4", "gravatar_id": "", "url": "https://api.github.com/users/iains", "html_url": "https://github.com/iains", "followers_url": "https://api.github.com/users/iains/followers", "following_url": "https://api.github.com/users/iains/following{/other_user}", "gists_url": "https://api.github.com/users/iains/gists{/gist_id}", "starred_url": "https://api.github.com/users/iains/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/iains/subscriptions", "organizations_url": "https://api.github.com/users/iains/orgs", "repos_url": "https://api.github.com/users/iains/repos", "events_url": "https://api.github.com/users/iains/events{/privacy}", "received_events_url": "https://api.github.com/users/iains/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "31460ed2cbcd66d080b7100655ee821384b7a884", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/31460ed2cbcd66d080b7100655ee821384b7a884", "html_url": "https://github.com/Rust-GCC/gccrs/commit/31460ed2cbcd66d080b7100655ee821384b7a884"}], "stats": {"total": 20, "additions": 15, "deletions": 5}, "files": [{"sha": "4b145911548e3e6cc622262889e29718346f5fac", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/44d6626ced36c5bec93ae6d72d29373e9f6aa36a/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/44d6626ced36c5bec93ae6d72d29373e9f6aa36a/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=44d6626ced36c5bec93ae6d72d29373e9f6aa36a", "patch": "@@ -1,3 +1,10 @@\n+2018-12-06  Iain Sandoe  <iain@sandoe.co.uk>\n+\n+\tPR target/78444\n+\t* config/i386/darwin.h (STACK_BOUNDARY): Remove macro.\n+\t* config/i386/i386.c (ix86_compute_frame_layout): Ensure at least 128b\n+\tstack alignment in non-leaf functions.\n+\n 2018-12-06  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR target/87598"}, {"sha": "53789e7c236d7abc84abc12a793dfde53229dca5", "filename": "gcc/config/i386/darwin.h", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/44d6626ced36c5bec93ae6d72d29373e9f6aa36a/gcc%2Fconfig%2Fi386%2Fdarwin.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/44d6626ced36c5bec93ae6d72d29373e9f6aa36a/gcc%2Fconfig%2Fi386%2Fdarwin.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fdarwin.h?ref=44d6626ced36c5bec93ae6d72d29373e9f6aa36a", "patch": "@@ -111,9 +111,6 @@ extern int darwin_emit_branch_islands;\n /* On Darwin, the stack is 128-bit aligned at the point of every call.\n    Failure to ensure this will lead to a crash in the system libraries\n    or dynamic loader.  */\n-#undef STACK_BOUNDARY\n-#define STACK_BOUNDARY \\\n-  ((profile_flag || TARGET_64BIT_MS_ABI) ? 128 : BITS_PER_WORD)\n \n #undef MAIN_STACK_BOUNDARY\n #define MAIN_STACK_BOUNDARY 128"}, {"sha": "1d7b1f0d1b28a7a9368391cef42fae7b6e7fd160", "filename": "gcc/config/i386/i386.c", "status": "modified", "additions": 8, "deletions": 2, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/44d6626ced36c5bec93ae6d72d29373e9f6aa36a/gcc%2Fconfig%2Fi386%2Fi386.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/44d6626ced36c5bec93ae6d72d29373e9f6aa36a/gcc%2Fconfig%2Fi386%2Fi386.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.c?ref=44d6626ced36c5bec93ae6d72d29373e9f6aa36a", "patch": "@@ -11202,10 +11202,16 @@ ix86_compute_frame_layout (void)\n   /* 64-bit MS ABI seem to require stack alignment to be always 16,\n      except for function prologues, leaf functions and when the defult\n      incoming stack boundary is overriden at command line or via\n-     force_align_arg_pointer attribute.  */\n-  if ((TARGET_64BIT_MS_ABI && crtl->preferred_stack_boundary < 128)\n+     force_align_arg_pointer attribute.\n+\n+     Darwin's ABI specifies 128b alignment for both 32 and  64 bit variants\n+     at call sites, including profile function calls.\n+ */\n+  if (((TARGET_64BIT_MS_ABI || TARGET_MACHO)\n+        && crtl->preferred_stack_boundary < 128)\n       && (!crtl->is_leaf || cfun->calls_alloca != 0\n \t  || ix86_current_function_calls_tls_descriptor\n+\t  || (TARGET_MACHO && crtl->profile)\n \t  || ix86_incoming_stack_boundary < 128))\n     {\n       crtl->preferred_stack_boundary = 128;"}]}