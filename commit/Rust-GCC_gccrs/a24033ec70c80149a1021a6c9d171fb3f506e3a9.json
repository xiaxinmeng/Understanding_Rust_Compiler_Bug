{"sha": "a24033ec70c80149a1021a6c9d171fb3f506e3a9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTI0MDMzZWM3MGM4MDE0OWExMDIxYTZjOWQxNzFmYjNmNTA2ZTNhOQ==", "commit": {"author": {"name": "Piotr Trojanek", "email": "trojanek@adacore.com", "date": "2020-10-14T20:45:15Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "derodat@adacore.com", "date": "2020-11-25T13:22:34Z"}, "message": "[Ada] Consistently use explicit Entity_Id type instead of alias\n\ngcc/ada/\n\n\t* einfo.adb: Replace \"E\" with Entity_Id in local object\n\tdeclarations.", "tree": {"sha": "41f86d3cb23c7deb158b22ece15d24f6db6883b3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/41f86d3cb23c7deb158b22ece15d24f6db6883b3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a24033ec70c80149a1021a6c9d171fb3f506e3a9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a24033ec70c80149a1021a6c9d171fb3f506e3a9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a24033ec70c80149a1021a6c9d171fb3f506e3a9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a24033ec70c80149a1021a6c9d171fb3f506e3a9/comments", "author": {"login": "ptroja", "id": 161602, "node_id": "MDQ6VXNlcjE2MTYwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/161602?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ptroja", "html_url": "https://github.com/ptroja", "followers_url": "https://api.github.com/users/ptroja/followers", "following_url": "https://api.github.com/users/ptroja/following{/other_user}", "gists_url": "https://api.github.com/users/ptroja/gists{/gist_id}", "starred_url": "https://api.github.com/users/ptroja/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ptroja/subscriptions", "organizations_url": "https://api.github.com/users/ptroja/orgs", "repos_url": "https://api.github.com/users/ptroja/repos", "events_url": "https://api.github.com/users/ptroja/events{/privacy}", "received_events_url": "https://api.github.com/users/ptroja/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pmderodat", "id": 758452, "node_id": "MDQ6VXNlcjc1ODQ1Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/758452?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pmderodat", "html_url": "https://github.com/pmderodat", "followers_url": "https://api.github.com/users/pmderodat/followers", "following_url": "https://api.github.com/users/pmderodat/following{/other_user}", "gists_url": "https://api.github.com/users/pmderodat/gists{/gist_id}", "starred_url": "https://api.github.com/users/pmderodat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pmderodat/subscriptions", "organizations_url": "https://api.github.com/users/pmderodat/orgs", "repos_url": "https://api.github.com/users/pmderodat/repos", "events_url": "https://api.github.com/users/pmderodat/events{/privacy}", "received_events_url": "https://api.github.com/users/pmderodat/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "eb0d08adb60fc39d59f8de378074b751a18cd184", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/eb0d08adb60fc39d59f8de378074b751a18cd184", "html_url": "https://github.com/Rust-GCC/gccrs/commit/eb0d08adb60fc39d59f8de378074b751a18cd184"}], "stats": {"total": 22, "additions": 11, "deletions": 11}, "files": [{"sha": "7f21e45e43d12df7f9a9a049242bafc4b3d0d139", "filename": "gcc/ada/einfo.adb", "status": "modified", "additions": 11, "deletions": 11, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a24033ec70c80149a1021a6c9d171fb3f506e3a9/gcc%2Fada%2Feinfo.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a24033ec70c80149a1021a6c9d171fb3f506e3a9/gcc%2Fada%2Feinfo.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Feinfo.adb?ref=a24033ec70c80149a1021a6c9d171fb3f506e3a9", "patch": "@@ -7360,7 +7360,7 @@ package body Einfo is\n    ---------------------\n \n    function Designated_Type (Id : E) return E is\n-      Desig_Type : E;\n+      Desig_Type : Entity_Id;\n \n    begin\n       Desig_Type := Directly_Designated_Type (Id);\n@@ -7427,7 +7427,7 @@ package body Einfo is\n    ---------------------\n \n    function First_Component (Id : E) return E is\n-      Comp_Id : E;\n+      Comp_Id : Entity_Id;\n \n    begin\n       pragma Assert\n@@ -7449,7 +7449,7 @@ package body Einfo is\n    -------------------------------------\n \n    function First_Component_Or_Discriminant (Id : E) return E is\n-      Comp_Id : E;\n+      Comp_Id : Entity_Id;\n \n    begin\n       pragma Assert\n@@ -7472,7 +7472,7 @@ package body Einfo is\n    ------------------\n \n    function First_Formal (Id : E) return E is\n-      Formal : E;\n+      Formal : Entity_Id;\n \n    begin\n       pragma Assert\n@@ -7513,7 +7513,7 @@ package body Einfo is\n    ------------------------------\n \n    function First_Formal_With_Extras (Id : E) return E is\n-      Formal : E;\n+      Formal : Entity_Id;\n \n    begin\n       pragma Assert\n@@ -8437,7 +8437,7 @@ package body Einfo is\n    -----------------\n \n    function Last_Formal (Id : E) return E is\n-      Formal : E;\n+      Formal : Entity_Id;\n \n    begin\n       pragma Assert\n@@ -8593,7 +8593,7 @@ package body Einfo is\n    --------------------\n \n    function Next_Component (Id : E) return E is\n-      Comp_Id : E;\n+      Comp_Id : Entity_Id;\n \n    begin\n       Comp_Id := Next_Entity (Id);\n@@ -8610,7 +8610,7 @@ package body Einfo is\n    ------------------------------------\n \n    function Next_Component_Or_Discriminant (Id : E) return E is\n-      Comp_Id : E;\n+      Comp_Id : Entity_Id;\n \n    begin\n       Comp_Id := Next_Entity (Id);\n@@ -8669,7 +8669,7 @@ package body Einfo is\n    -----------------\n \n    function Next_Formal (Id : E) return E is\n-      P : E;\n+      P : Entity_Id;\n \n    begin\n       --  Follow the chain of declared entities as long as the kind of the\n@@ -9133,7 +9133,7 @@ package body Einfo is\n    ---------------\n \n    function Root_Type (Id : E) return E is\n-      T, Etyp : E;\n+      T, Etyp : Entity_Id;\n \n    begin\n       pragma Assert (Nkind (Id) in N_Entity);\n@@ -10124,7 +10124,7 @@ package body Einfo is\n \n          when Array_Kind =>\n             declare\n-               Index : E;\n+               Index : Entity_Id;\n \n             begin\n                Write_Attribute"}]}