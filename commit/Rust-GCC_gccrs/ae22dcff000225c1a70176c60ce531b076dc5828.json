{"sha": "ae22dcff000225c1a70176c60ce531b076dc5828", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWUyMmRjZmYwMDAyMjVjMWE3MDE3NmM2MGNlNTMxYjA3NmRjNTgyOA==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@adacore.com", "date": "2007-02-18T13:52:46Z"}, "committer": {"name": "Eric Botcazou", "email": "ebotcazou@gcc.gnu.org", "date": "2007-02-18T13:52:46Z"}, "message": "calls.c (mem_overlaps_already_clobbered_arg_p): Return true for arg pointer based indexed addressing.\n\n\t* calls.c (mem_overlaps_already_clobbered_arg_p): Return true\n\tfor arg pointer based indexed addressing.\n\nFrom-SVN: r122095", "tree": {"sha": "40162bebea953063b468308fa9475a3a6732b079", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/40162bebea953063b468308fa9475a3a6732b079"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ae22dcff000225c1a70176c60ce531b076dc5828", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ae22dcff000225c1a70176c60ce531b076dc5828", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ae22dcff000225c1a70176c60ce531b076dc5828", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ae22dcff000225c1a70176c60ce531b076dc5828/comments", "author": null, "committer": null, "parents": [{"sha": "0028647ea7acc9af2e27bd246faac9bb073c94e5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0028647ea7acc9af2e27bd246faac9bb073c94e5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0028647ea7acc9af2e27bd246faac9bb073c94e5"}], "stats": {"total": 74, "additions": 72, "deletions": 2}, "files": [{"sha": "99b01abb392e7eee3326356fdb4302834575c9c1", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ae22dcff000225c1a70176c60ce531b076dc5828/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ae22dcff000225c1a70176c60ce531b076dc5828/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=ae22dcff000225c1a70176c60ce531b076dc5828", "patch": "@@ -1,3 +1,8 @@\n+2007-02-18  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* calls.c (mem_overlaps_already_clobbered_arg_p): Return true\n+\tfor arg pointer based indexed addressing.\n+\n 2007-02-18  Kazu Hirata  <kazu@codesourcery.com>\n \n \t* config/ia64/ia64.h, config/ia64/ia64.md,"}, {"sha": "e65a2cc79c91d75e957518e9911130558cca0519", "filename": "gcc/calls.c", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ae22dcff000225c1a70176c60ce531b076dc5828/gcc%2Fcalls.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ae22dcff000225c1a70176c60ce531b076dc5828/gcc%2Fcalls.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcalls.c?ref=ae22dcff000225c1a70176c60ce531b076dc5828", "patch": "@@ -1481,10 +1481,14 @@ mem_overlaps_already_clobbered_arg_p (rtx addr, unsigned HOST_WIDE_INT size)\n   if (addr == current_function_internal_arg_pointer)\n     i = 0;\n   else if (GET_CODE (addr) == PLUS\n-\t   && (XEXP (addr, 0)\n-\t       == current_function_internal_arg_pointer)\n+\t   && XEXP (addr, 0) == current_function_internal_arg_pointer\n \t   && GET_CODE (XEXP (addr, 1)) == CONST_INT)\n     i = INTVAL (XEXP (addr, 1));\n+  /* Return true for arg pointer based indexed addressing.  */\n+  else if (GET_CODE (addr) == PLUS\n+\t   && (XEXP (addr, 0) == current_function_internal_arg_pointer\n+\t       || XEXP (addr, 1) == current_function_internal_arg_pointer))\n+    return true;\n   else\n     return false;\n "}, {"sha": "13745a05af1e14a47b0128f54bee09b5f412d744", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ae22dcff000225c1a70176c60ce531b076dc5828/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ae22dcff000225c1a70176c60ce531b076dc5828/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=ae22dcff000225c1a70176c60ce531b076dc5828", "patch": "@@ -1,3 +1,7 @@\n+2007-02-18  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* gnat.dg/tail_call_p.ads, tail_call_p.adb, tail_call.adb: New test.\n+\n 2007-02-18  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* gnat.dg/test_prio_p.adb: Compile with -gnatws."}, {"sha": "4f109adffc583cda4ecb81ea89ec6a643f4f95e8", "filename": "gcc/testsuite/gnat.dg/tail_call.adb", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ae22dcff000225c1a70176c60ce531b076dc5828/gcc%2Ftestsuite%2Fgnat.dg%2Ftail_call.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ae22dcff000225c1a70176c60ce531b076dc5828/gcc%2Ftestsuite%2Fgnat.dg%2Ftail_call.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Ftail_call.adb?ref=ae22dcff000225c1a70176c60ce531b076dc5828", "patch": "@@ -0,0 +1,9 @@\n+-- { dg-do run }\n+-- { dg-options \"-O2 -fno-unit-at-a-time\" }\n+\n+with Tail_Call_P; use Tail_Call_P;\n+\n+procedure Tail_Call is\n+begin\n+  Insert (My_Array, 0, 0);\n+end;"}, {"sha": "56add5f6b757938157a90e39b8b01b2f0a1f8e80", "filename": "gcc/testsuite/gnat.dg/tail_call_p.adb", "status": "added", "additions": 35, "deletions": 0, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ae22dcff000225c1a70176c60ce531b076dc5828/gcc%2Ftestsuite%2Fgnat.dg%2Ftail_call_p.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ae22dcff000225c1a70176c60ce531b076dc5828/gcc%2Ftestsuite%2Fgnat.dg%2Ftail_call_p.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Ftail_call_p.adb?ref=ae22dcff000225c1a70176c60ce531b076dc5828", "patch": "@@ -0,0 +1,35 @@\n+package body Tail_Call_P is\n+\n+  function Start_Side (Element : T) return Index is\n+  begin\n+    if Element = 1 then\n+      raise Program_Error;\n+    end if;\n+    if Element = 0 then\n+      return Second;\n+    else\n+      return First;\n+    end if;\n+  end;\n+\n+  function Segment (Element : T) return T is\n+  begin\n+    if Element /= 0 then\n+      raise Program_Error;\n+    end if;\n+    return 1;\n+  end;\n+\n+  procedure Really_Insert (Into : T; Element : T; Value : T) is\n+  begin\n+    if Into /= 0 then\n+      raise Program_Error;\n+    end if;\n+  end;\n+\n+  procedure Insert (Into : A; Element : T; Value : T) is\n+  begin\n+    Really_Insert (Into (Start_Side (Element)), Segment (Element), Value);\n+  end Insert;\n+\n+end Tail_Call_P;"}, {"sha": "1665bc30c5597ea626df29376fb12379aa87d357", "filename": "gcc/testsuite/gnat.dg/tail_call_p.ads", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ae22dcff000225c1a70176c60ce531b076dc5828/gcc%2Ftestsuite%2Fgnat.dg%2Ftail_call_p.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ae22dcff000225c1a70176c60ce531b076dc5828/gcc%2Ftestsuite%2Fgnat.dg%2Ftail_call_p.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Ftail_call_p.ads?ref=ae22dcff000225c1a70176c60ce531b076dc5828", "patch": "@@ -0,0 +1,13 @@\n+package Tail_Call_P is\n+\n+  type T is new Natural;\n+\n+  type Index is (First, Second);\n+\n+  type A is array (Index) of T;\n+\n+  My_Array : A := (0, 0);\n+\n+  procedure Insert (Into : A; Element : T; Value : T);\n+\n+end Tail_Call_P;"}]}