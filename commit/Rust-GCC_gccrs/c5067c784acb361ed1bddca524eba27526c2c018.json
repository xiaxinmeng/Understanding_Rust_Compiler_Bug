{"sha": "c5067c784acb361ed1bddca524eba27526c2c018", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzUwNjdjNzg0YWNiMzYxZWQxYmRkY2E1MjRlYmEyNzUyNmMyYzAxOA==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2007-09-12T13:10:58Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2007-09-12T13:10:58Z"}, "message": "Remove s-crtl-vms64.ads, no longer used.\n\nFrom-SVN: r128433", "tree": {"sha": "59d5091dc89b28ba24fb52b2d0461d49b53c4dd1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/59d5091dc89b28ba24fb52b2d0461d49b53c4dd1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c5067c784acb361ed1bddca524eba27526c2c018", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c5067c784acb361ed1bddca524eba27526c2c018", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c5067c784acb361ed1bddca524eba27526c2c018", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c5067c784acb361ed1bddca524eba27526c2c018/comments", "author": null, "committer": null, "parents": [{"sha": "58dc03b4c5b6050a0d2d1e9598cd0ddf52877b87", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/58dc03b4c5b6050a0d2d1e9598cd0ddf52877b87", "html_url": "https://github.com/Rust-GCC/gccrs/commit/58dc03b4c5b6050a0d2d1e9598cd0ddf52877b87"}], "stats": {"total": 190, "additions": 0, "deletions": 190}, "files": [{"sha": "64a5315ae622b8706be7f9b39073d126c9377436", "filename": "gcc/ada/Makefile.in", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c5067c784acb361ed1bddca524eba27526c2c018/gcc%2Fada%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c5067c784acb361ed1bddca524eba27526c2c018/gcc%2Fada%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FMakefile.in?ref=c5067c784acb361ed1bddca524eba27526c2c018", "patch": "@@ -1172,7 +1172,6 @@ ifeq ($(strip $(filter-out ia64 hp vms% openvms%,$(targ))),)\n   g-enblsp.adb<g-enblsp-vms-ia64.adb \\\n   g-trasym.adb<g-trasym-vms-ia64.adb \\\n   s-auxdec.ads<s-auxdec-vms_64.ads \\\n-  s-crtl.ads<s-crtl-vms64.ads \\\n   s-osinte.adb<s-osinte-vms-ia64.adb \\\n   s-osinte.ads<s-osinte-vms-ia64.ads \\\n   s-vaflop.adb<s-vaflop-vms-ia64.adb \\\n@@ -1187,7 +1186,6 @@ ifeq ($(strip $(filter-out alpha64 dec vms% openvms% alphavms%,$(targ))),)\n   g-trasym.adb<g-trasym-vms-alpha.adb \\\n   s-asthan.adb<s-asthan-vms-alpha.adb \\\n   s-auxdec.ads<s-auxdec-vms_64.ads \\\n-  s-crtl.ads<s-crtl-vms64.ads \\\n   s-osinte.adb<s-osinte-vms.adb \\\n   s-osinte.ads<s-osinte-vms.ads \\\n   s-vaflop.adb<s-vaflop-vms-alpha.adb \\"}, {"sha": "c221d05a3a8e04dd6c36dac1bea4b84dc9503ead", "filename": "gcc/ada/s-crtl-vms64.ads", "status": "removed", "additions": 0, "deletions": 188, "changes": 188, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/58dc03b4c5b6050a0d2d1e9598cd0ddf52877b87/gcc%2Fada%2Fs-crtl-vms64.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/58dc03b4c5b6050a0d2d1e9598cd0ddf52877b87/gcc%2Fada%2Fs-crtl-vms64.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-crtl-vms64.ads?ref=58dc03b4c5b6050a0d2d1e9598cd0ddf52877b87", "patch": "@@ -1,188 +0,0 @@\n-------------------------------------------------------------------------------\n---                                                                          --\n---                        GNAT RUN-TIME COMPONENTS                          --\n---                                                                          --\n---                         S Y S T E M . C R T L                            --\n---                                                                          --\n---                                S p e c                                   --\n---                                                                          --\n---         Copyright (C) 2004-2006, Free Software Foundation, Inc.          --\n---                                                                          --\n--- GNAT is free software;  you can  redistribute it  and/or modify it under --\n--- terms of the  GNU General Public License as published  by the Free Soft- --\n--- ware  Foundation;  either version 2,  or (at your option) any later ver- --\n--- sion.  GNAT is distributed in the hope that it will be useful, but WITH- --\n--- OUT ANY WARRANTY;  without even the  implied warranty of MERCHANTABILITY --\n--- or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License --\n--- for  more details.  You should have  received  a copy of the GNU General --\n--- Public License  distributed with GNAT;  see file COPYING.  If not, write --\n--- to  the  Free Software Foundation,  51  Franklin  Street,  Fifth  Floor, --\n--- Boston, MA 02110-1301, USA.                                              --\n---                                                                          --\n--- As a special exception,  if other files  instantiate  generics from this --\n--- unit, or you link  this unit with other files  to produce an executable, --\n--- this  unit  does not  by itself cause  the resulting  executable  to  be --\n--- covered  by the  GNU  General  Public  License.  This exception does not --\n--- however invalidate  any other reasons why  the executable file  might be --\n--- covered by the  GNU Public License.                                      --\n---                                                                          --\n--- GNAT was originally developed  by the GNAT team at  New York University. --\n--- Extensive contributions were provided by Ada Core Technologies Inc.      --\n---                                                                          --\n-------------------------------------------------------------------------------\n-\n---  This package provides the low level interface to the C Run Time Library\n---  on 64 bit VMS.  Note that routines that allocate memory remain 32bit.\n-\n-with System.Parameters;\n-\n-package System.CRTL is\n-   pragma Preelaborate;\n-\n-   subtype chars is System.Address;\n-   --  Pointer to null-terminated array of characters\n-\n-   subtype DIRs is System.Address;\n-   --  Corresponds to the C type DIR*\n-\n-   subtype FILEs is System.Address;\n-   --  Corresponds to the C type FILE*\n-\n-   subtype int is Integer;\n-\n-   type long is range -(2 ** (System.Parameters.long_bits - 1))\n-      .. +(2 ** (System.Parameters.long_bits - 1)) - 1;\n-\n-   subtype off_t is Integer;\n-\n-   type size_t is mod 2 ** Standard'Address_Size;\n-\n-   type Filename_Encoding is (UTF8, ASCII_8bits);\n-   for Filename_Encoding use (UTF8 => 0, ASCII_8bits => 1);\n-   pragma Convention (C, Filename_Encoding);\n-   --  Describes the filename's encoding\n-\n-   function atoi (A : System.Address) return Integer;\n-   pragma Import (C, atoi, \"decc$atoi\");\n-\n-   procedure clearerr (stream : FILEs);\n-   pragma Import (C, clearerr, \"decc$clearerr\");\n-\n-   function dup  (handle : int) return int;\n-   pragma Import (C, dup, \"decc$dup\");\n-\n-   function dup2 (from, to : int) return int;\n-   pragma Import (C, dup2, \"decc$dup2\");\n-\n-   function fclose (stream : FILEs) return int;\n-   pragma Import (C, fclose, \"decc$fclose\");\n-\n-   function fdopen (handle : int; mode : chars) return FILEs;\n-   pragma Import (C, fdopen, \"decc$fdopen\");\n-\n-   function fflush (stream : FILEs) return int;\n-   pragma Import (C, fflush, \"decc$fflush\");\n-\n-   function fgetc (stream : FILEs) return int;\n-   pragma Import (C, fgetc, \"decc$fgetc\");\n-\n-   function fgets (strng : chars; n : int; stream : FILEs) return chars;\n-   pragma Import (C, fgets, \"decc$_fgets64\");\n-\n-   function fopen\n-     (filename : chars;\n-      mode     : chars;\n-      encoding : Filename_Encoding := UTF8) return FILEs;\n-   pragma Import (C, fopen, \"__gnat_fopen\");\n-\n-   function fputc (C : int; stream : FILEs) return int;\n-   pragma Import (C, fputc, \"decc$fputc\");\n-\n-   function fputs (Strng : chars; Stream : FILEs) return int;\n-   pragma Import (C, fputs, \"decc$fputs\");\n-\n-   procedure free (Ptr : System.Address);\n-   pragma Import (C, free, \"decc$free\");\n-\n-   function freopen\n-     (filename : chars;\n-      mode     : chars;\n-      stream   : FILEs;\n-      encoding : Filename_Encoding := UTF8)\n-      return     FILEs;\n-   pragma Import (C, freopen, \"__gnat_freopen\");\n-\n-   function fseek\n-     (stream : FILEs;\n-      offset : long;\n-      origin : int)\n-      return   int;\n-   pragma Import (C, fseek, \"decc$fseek\");\n-\n-   function ftell (stream : FILEs) return long;\n-   pragma Import (C, ftell, \"decc$ftell\");\n-\n-   function getenv (S : String) return System.Address;\n-   pragma Import (C, getenv, \"decc$getenv\");\n-\n-   function isatty (handle : int) return int;\n-   pragma Import (C, isatty, \"decc$isatty\");\n-\n-   function lseek (fd : int; offset : off_t; direction : int) return off_t;\n-   pragma Import (C, lseek, \"decc$lseek\");\n-\n-   function malloc (Size : size_t) return System.Address;\n-   pragma Import (C, malloc, \"decc$malloc\");\n-\n-   procedure memcpy (S1 : System.Address; S2 : System.Address; N : size_t);\n-   pragma Import (C, memcpy, \"decc$_memcpy64\");\n-\n-   procedure memmove (S1 : System.Address; S2 : System.Address; N : size_t);\n-   pragma Import (C, memmove, \"decc$_memmove64\");\n-\n-   procedure mktemp (template : chars);\n-   pragma Import (C, mktemp, \"decc$_mktemp64\");\n-\n-   function pclose (stream : System.Address) return int;\n-   pragma Import (C, pclose, \"decc$pclose\");\n-\n-   function popen (command, mode : System.Address) return System.Address;\n-   pragma Import (C, popen, \"decc$popen\");\n-\n-   function read (fd : int; buffer : chars; nbytes : int) return int;\n-   pragma Import (C, read, \"decc$read\");\n-\n-   function realloc\n-     (Ptr : System.Address; Size : size_t) return System.Address;\n-   pragma Import (C, realloc, \"decc$realloc\");\n-\n-   procedure rewind (stream : FILEs);\n-   pragma Import (C, rewind, \"decc$rewind\");\n-\n-   procedure rmdir (dir_name : String);\n-   pragma Import (C, rmdir, \"decc$rmdir\");\n-\n-   function setvbuf\n-     (stream : FILEs;\n-      buffer : chars;\n-      mode   : int;\n-      size   : size_t)\n-      return   int;\n-   pragma Import (C, setvbuf, \"decc$setvbuf\");\n-\n-   procedure tmpnam (string : chars);\n-   pragma Import (C, tmpnam, \"decc$_tmpnam64\");\n-\n-   function tmpfile return FILEs;\n-   pragma Import (C, tmpfile, \"decc$tmpfile\");\n-\n-   function ungetc (c : int; stream : FILEs) return int;\n-   pragma Import (C, ungetc, \"decc$ungetc\");\n-\n-   function unlink (filename : chars) return int;\n-   pragma Import (C, unlink, \"decc$unlink\");\n-\n-   function write (fd : int; buffer : chars; nbytes : int) return int;\n-   pragma Import (C, write, \"decc$write\");\n-\n-end System.CRTL;"}]}