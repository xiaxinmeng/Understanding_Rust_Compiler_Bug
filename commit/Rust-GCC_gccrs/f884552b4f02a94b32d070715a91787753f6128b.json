{"sha": "f884552b4f02a94b32d070715a91787753f6128b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Zjg4NDU1MmI0ZjAyYTk0YjMyZDA3MDcxNWE5MTc4Nzc1M2Y2MTI4Yg==", "commit": {"author": {"name": "Thomas Koenig", "email": "tkoenig@gcc.gnu.org", "date": "2010-09-06T19:43:58Z"}, "committer": {"name": "Thomas Koenig", "email": "tkoenig@gcc.gnu.org", "date": "2010-09-06T19:43:58Z"}, "message": "re PR fortran/34145 (single_char_string.f90 fails with -fdefault-integer-8)\n\n2010-09-06  Thomas Koenig  <tkoenig@gcc.gnu.org>\n\n\tPR fortran/34145\n\t* trans-expr.c (gfc_conv_substring):  If start and end\n\tof the string reference are equal, set the length to one.\n\n2010-09-06  Thomas Koenig  <tkoenig@gcc.gnu.org>\n\n\tPR fortran/34145\n\t* gfortran.dg/char_length_17.f90:  New test.\n\nFrom-SVN: r163932", "tree": {"sha": "f6863c4f091e031bf4d0aaf4be1d0d4b3816ca9b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f6863c4f091e031bf4d0aaf4be1d0d4b3816ca9b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f884552b4f02a94b32d070715a91787753f6128b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f884552b4f02a94b32d070715a91787753f6128b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f884552b4f02a94b32d070715a91787753f6128b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f884552b4f02a94b32d070715a91787753f6128b/comments", "author": null, "committer": null, "parents": [{"sha": "f973b6486953e926ee6795c879af3986e81967b1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f973b6486953e926ee6795c879af3986e81967b1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f973b6486953e926ee6795c879af3986e81967b1"}], "stats": {"total": 46, "additions": 40, "deletions": 6}, "files": [{"sha": "d35cedca9d33b430f7fc37f4d6e31740cf7734e5", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f884552b4f02a94b32d070715a91787753f6128b/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f884552b4f02a94b32d070715a91787753f6128b/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=f884552b4f02a94b32d070715a91787753f6128b", "patch": "@@ -1,3 +1,9 @@\n+2010-09-06  Thomas Koenig  <tkoenig@gcc.gnu.org>\n+\n+\tPR fortran/34145\n+\t* trans-expr.c (gfc_conv_substring):  If start and end\n+\tof the string reference are equal, set the length to one.\n+\n 2010-09-06  Tobias Burnus  <burnus@net-b.de>\n \n \tPR fortran/45560"}, {"sha": "479c807752c318db68585ca06af0841f297051df", "filename": "gcc/fortran/trans-expr.c", "status": "modified", "additions": 14, "deletions": 6, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f884552b4f02a94b32d070715a91787753f6128b/gcc%2Ffortran%2Ftrans-expr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f884552b4f02a94b32d070715a91787753f6128b/gcc%2Ffortran%2Ftrans-expr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ftrans-expr.c?ref=f884552b4f02a94b32d070715a91787753f6128b", "patch": "@@ -463,12 +463,20 @@ gfc_conv_substring (gfc_se * se, gfc_ref * ref, int kind,\n       gfc_free (msg);\n     }\n \n-  tmp = fold_build2_loc (input_location, MINUS_EXPR, gfc_charlen_type_node,\n-\t\t\t end.expr, start.expr);\n-  tmp = fold_build2_loc (input_location, PLUS_EXPR, gfc_charlen_type_node,\n-\t\t\t build_int_cst (gfc_charlen_type_node, 1), tmp);\n-  tmp = fold_build2_loc (input_location, MAX_EXPR, gfc_charlen_type_node, tmp,\n-\t\t\t build_int_cst (gfc_charlen_type_node, 0));\n+  /* If the start and end expressions are equal, the length is one.  */\n+  if (ref->u.ss.end\n+      && gfc_dep_compare_expr (ref->u.ss.start, ref->u.ss.end) == 0)\n+    tmp = build_int_cst (gfc_charlen_type_node, 1);\n+  else\n+    {\n+      tmp = fold_build2_loc (input_location, MINUS_EXPR, gfc_charlen_type_node,\n+\t\t\t     end.expr, start.expr);\n+      tmp = fold_build2_loc (input_location, PLUS_EXPR, gfc_charlen_type_node,\n+\t\t\t     build_int_cst (gfc_charlen_type_node, 1), tmp);\n+      tmp = fold_build2_loc (input_location, MAX_EXPR, gfc_charlen_type_node,\n+\t\t\t     tmp, build_int_cst (gfc_charlen_type_node, 0));\n+    }\n+\n   se->string_length = tmp;\n }\n "}, {"sha": "362f5d1e2ebf19985211dbf9511e2ebfc9a0c2c1", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f884552b4f02a94b32d070715a91787753f6128b/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f884552b4f02a94b32d070715a91787753f6128b/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=f884552b4f02a94b32d070715a91787753f6128b", "patch": "@@ -1,3 +1,8 @@\n+2010-09-06  Thomas Koenig  <tkoenig@gcc.gnu.org>\n+\n+\tPR fortran/34145\n+\t* gfortran.dg/char_length_17.f90:  New test.\n+\n 2010-09-06  Dodji Seketeli  <dodji@redhat.com>\n \n \tPR c++/45200"}, {"sha": "5752dd1f7d147edef283386d69cf32cd12e5badc", "filename": "gcc/testsuite/gfortran.dg/char_length_17.f90", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f884552b4f02a94b32d070715a91787753f6128b/gcc%2Ftestsuite%2Fgfortran.dg%2Fchar_length_17.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f884552b4f02a94b32d070715a91787753f6128b/gcc%2Ftestsuite%2Fgfortran.dg%2Fchar_length_17.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fchar_length_17.f90?ref=f884552b4f02a94b32d070715a91787753f6128b", "patch": "@@ -0,0 +1,15 @@\n+! { dg-do compile }\n+! { dg-options \"-fdump-tree-original\" }\n+! PR 34145 - the length of the string should be simplified to one,\n+! no library call for string comparison is necessary.\n+program main\n+  character (len=5) :: c\n+  integer(kind=8) :: i\n+  i = 3\n+  c(i:i) = 'a'\n+  c(i+1:i+1) = 'b'\n+  if (c(i:i) /= 'a') call abort ()\n+  if (c(i+1:i+1) /= 'b') call abort ()\n+end program main\n+! { dg-final { scan-tree-dump-times \"gfortran_compare_string\" 0 \"original\" } }\n+! { dg-final { cleanup-tree-dump \"original\" } }"}]}