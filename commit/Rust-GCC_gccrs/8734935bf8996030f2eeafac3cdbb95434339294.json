{"sha": "8734935bf8996030f2eeafac3cdbb95434339294", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODczNDkzNWJmODk5NjAzMGYyZWVhZmFjM2NkYmI5NTQzNDMzOTI5NA==", "commit": {"author": {"name": "Andrew Haley", "email": "aph@redhat.com", "date": "2007-04-16T15:29:55Z"}, "committer": {"name": "Andrew Haley", "email": "aph@gcc.gnu.org", "date": "2007-04-16T15:29:55Z"}, "message": "ObjectInputStream.java: (parseContent): Call (String, Object) version of dumpElementln.\n\n2007-04-16  Andrew Haley  <aph@redhat.com>\n\n        * java/io/ObjectInputStream.java: (parseContent):  Call (String,\n        Object) version of dumpElementln.\n        (dumpElementln(String, Object)): New method.\n        * java/io/ObjectOutputStream.java (writeObject): Call (String,\n        Object) version of dumpElementln.\n        (dumpElementln(String, Object)): New method.\n\nFrom-SVN: r123875", "tree": {"sha": "25738fc298f81741e0e7a03b01270a62de4f5762", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/25738fc298f81741e0e7a03b01270a62de4f5762"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8734935bf8996030f2eeafac3cdbb95434339294", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8734935bf8996030f2eeafac3cdbb95434339294", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8734935bf8996030f2eeafac3cdbb95434339294", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8734935bf8996030f2eeafac3cdbb95434339294/comments", "author": {"login": "theRealAph", "id": 254637, "node_id": "MDQ6VXNlcjI1NDYzNw==", "avatar_url": "https://avatars.githubusercontent.com/u/254637?v=4", "gravatar_id": "", "url": "https://api.github.com/users/theRealAph", "html_url": "https://github.com/theRealAph", "followers_url": "https://api.github.com/users/theRealAph/followers", "following_url": "https://api.github.com/users/theRealAph/following{/other_user}", "gists_url": "https://api.github.com/users/theRealAph/gists{/gist_id}", "starred_url": "https://api.github.com/users/theRealAph/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/theRealAph/subscriptions", "organizations_url": "https://api.github.com/users/theRealAph/orgs", "repos_url": "https://api.github.com/users/theRealAph/repos", "events_url": "https://api.github.com/users/theRealAph/events{/privacy}", "received_events_url": "https://api.github.com/users/theRealAph/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "bdbf40a53653d4e4f069370e328653b73ed10e66", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bdbf40a53653d4e4f069370e328653b73ed10e66", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bdbf40a53653d4e4f069370e328653b73ed10e66"}], "stats": {"total": 61, "additions": 55, "deletions": 6}, "files": [{"sha": "712c9eb400fa6071763b7ea16c75495815cae6c0", "filename": "libjava/classpath/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8734935bf8996030f2eeafac3cdbb95434339294/libjava%2Fclasspath%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8734935bf8996030f2eeafac3cdbb95434339294/libjava%2Fclasspath%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2FChangeLog?ref=8734935bf8996030f2eeafac3cdbb95434339294", "patch": "@@ -1,3 +1,12 @@\n+2007-04-16  Andrew Haley  <aph@redhat.com>\n+\n+\t* java/io/ObjectInputStream.java: (parseContent):  Call (String,\n+\tObject) version of dumpElementln.\n+\t(dumpElementln(String, Object)): New method.\n+\t* java/io/ObjectOutputStream.java (writeObject): Call (String,\n+\tObject) version of dumpElementln.\n+\t(dumpElementln(String, Object)): New method.\n+\n 2007-04-16  Andrew John Hughes  <gnu_andrew@member.fsf.org>\n \n \t* javax/management/ObjectName.java:"}, {"sha": "e469609bde0f2e15e33f744a13d3fa88290d2a32", "filename": "libjava/classpath/java/io/ObjectInputStream.java", "status": "modified", "additions": 19, "deletions": 1, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8734935bf8996030f2eeafac3cdbb95434339294/libjava%2Fclasspath%2Fjava%2Fio%2FObjectInputStream.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8734935bf8996030f2eeafac3cdbb95434339294/libjava%2Fclasspath%2Fjava%2Fio%2FObjectInputStream.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fjava%2Fio%2FObjectInputStream.java?ref=8734935bf8996030f2eeafac3cdbb95434339294", "patch": "@@ -307,7 +307,7 @@ private Object parseContent(byte marker)\n  \t  readArrayElements(array, componentType);\n  \t  if(dump)\n  \t    for (int i = 0, len = Array.getLength(array); i < len; i++)\n- \t      dumpElementln(\"  ELEMENT[\" + i + \"]=\" + Array.get(array, i));\n+ \t      dumpElementln(\"  ELEMENT[\" + i + \"]=\", Array.get(array, i));\n  \t  ret_val = processResolution(null, array, handle);\n  \t  break;\n  \t}\n@@ -1984,6 +1984,24 @@ private void dumpElementln (String msg)\n     System.out.print (Thread.currentThread() + \": \");\n   }\n \n+  private void dumpElementln (String msg, Object obj)\n+  {\n+    try\n+      {\n+\tSystem.out.print(msg);\n+\tif (java.lang.reflect.Proxy.isProxyClass(obj.getClass()))\n+\t  System.out.println(obj.getClass());\n+\telse\n+\tSystem.out.println(obj);\n+      }\n+    catch (Exception _)\n+      {\n+      }\n+    for (int i = 0; i < depth; i++)\n+      System.out.print (\" \");\n+    System.out.print (Thread.currentThread() + \": \");\n+  }\n+\n   // used to keep a prioritized list of object validators\n   private static final class ValidatorAndPriority implements Comparable\n   {"}, {"sha": "eac11f78db92043450b375d1bb08087506b387a4", "filename": "libjava/classpath/java/io/ObjectOutputStream.java", "status": "modified", "additions": 27, "deletions": 5, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8734935bf8996030f2eeafac3cdbb95434339294/libjava%2Fclasspath%2Fjava%2Fio%2FObjectOutputStream.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8734935bf8996030f2eeafac3cdbb95434339294/libjava%2Fclasspath%2Fjava%2Fio%2FObjectOutputStream.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fjava%2Fio%2FObjectOutputStream.java?ref=8734935bf8996030f2eeafac3cdbb95434339294", "patch": "@@ -191,7 +191,7 @@ public final void writeObject(Object obj) throws IOException\n       }\n \n     if (dump)\n-      dumpElementln (\"WRITE: \" + obj);\n+      dumpElementln (\"WRITE: \", obj);\n     \n     depth += 2;    \n \n@@ -352,18 +352,18 @@ public final void writeObject(Object obj) throws IOException\n \t\t    if (currentObjectStreamClass.hasWriteMethod())\n \t\t      {\n \t\t\tif (dump)\n-\t\t\t  dumpElementln (\"WRITE METHOD CALLED FOR: \" + obj);\n+\t\t\t  dumpElementln (\"WRITE METHOD CALLED FOR: \", obj);\n \t\t\tsetBlockDataMode(true);\n \t\t\tcallWriteMethod(obj, currentObjectStreamClass);\n \t\t\tsetBlockDataMode(false);\n \t\t\trealOutput.writeByte(TC_ENDBLOCKDATA);\n \t\t\tif (dump)\n-\t\t\t  dumpElementln (\"WRITE ENDBLOCKDATA FOR: \" + obj);\n+\t\t\t  dumpElementln (\"WRITE ENDBLOCKDATA FOR: \", obj);\n \t\t      }\n \t\t    else\n \t\t      {\n \t\t\tif (dump)\n-\t\t\t  dumpElementln (\"WRITE FIELDS CALLED FOR: \" + obj);\n+\t\t\t  dumpElementln (\"WRITE FIELDS CALLED FOR: \", obj);\n \t\t\twriteFields(obj, currentObjectStreamClass);\n \t\t      }\n \t\t  }\n@@ -420,7 +420,7 @@ public final void writeObject(Object obj) throws IOException\n \tdepth -= 2;\n \n \tif (dump)\n-\t  dumpElementln (\"END: \" + obj);\n+\t  dumpElementln (\"END: \", obj);\n       }\n   }\n \n@@ -1340,6 +1340,28 @@ private void callWriteMethod(Object obj, ObjectStreamClass osc)\n       }\n   }\n \n+  private void dumpElementln (String msg, Object obj)\n+  {\n+    try\n+      {\n+\tfor (int i = 0; i < depth; i++)\n+\t  System.out.print (\" \");\n+\tSystem.out.print (Thread.currentThread() + \": \");\n+\tSystem.out.print (msg);\n+\tif (java.lang.reflect.Proxy.isProxyClass(obj.getClass()))\n+\t  System.out.print (obj.getClass());\n+\telse\n+\t  System.out.print (obj);\n+      }\n+    catch (Exception _)\n+      {\n+      }\n+    finally\n+      {\n+\tSystem.out.println ();\n+      }\n+  }\n+\n   private void dumpElementln (String msg)\n   {\n     for (int i = 0; i < depth; i++)"}]}