{"sha": "c48a8e71c8b5d3e6bdffaec85b1e3b111814cee0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzQ4YThlNzFjOGI1ZDNlNmJkZmZhZWM4NWIxZTNiMTExODE0Y2VlMA==", "commit": {"author": {"name": "Richard Sandiford", "email": "richard.sandiford@linaro.org", "date": "2017-11-09T15:19:15Z"}, "committer": {"name": "Richard Sandiford", "email": "rsandifo@gcc.gnu.org", "date": "2017-11-09T15:19:15Z"}, "message": "Add a vect_masked_store target selector\n\nThis patch adds a target selector that says whether the target\nsupports IFN_MASK_STORE.\n\n2017-11-09  Richard Sandiford  <richard.sandiford@linaro.org>\n\t    Alan Hayward  <alan.hayward@arm.com>\n\t    David Sherwood  <david.sherwood@arm.com>\n\ngcc/\n\t* doc/sourcebuild.texi (vect_masked_store): Document.\n\ngcc/testsuite/\n\t* lib/target-supports.exp (check_effective_target_vect_masked_store):\n\tNew proc.\n\t* gcc.dg/vect/vect-cselim-1.c (foo): Mention that the second loop\n\tis vectorizable with masked stores.  Update scan-tree-dump-times\n\taccordingly.\n\nCo-Authored-By: Alan Hayward <alan.hayward@arm.com>\nCo-Authored-By: David Sherwood <david.sherwood@arm.com>\n\nFrom-SVN: r254597", "tree": {"sha": "3c58515f2a4cb37acde83b6b85f2d30eb8f9a5b8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3c58515f2a4cb37acde83b6b85f2d30eb8f9a5b8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c48a8e71c8b5d3e6bdffaec85b1e3b111814cee0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c48a8e71c8b5d3e6bdffaec85b1e3b111814cee0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c48a8e71c8b5d3e6bdffaec85b1e3b111814cee0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c48a8e71c8b5d3e6bdffaec85b1e3b111814cee0/comments", "author": null, "committer": null, "parents": [{"sha": "331e1a56adf1a81c3544a8034d9e0a413ea35435", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/331e1a56adf1a81c3544a8034d9e0a413ea35435", "html_url": "https://github.com/Rust-GCC/gccrs/commit/331e1a56adf1a81c3544a8034d9e0a413ea35435"}], "stats": {"total": 30, "additions": 28, "deletions": 2}, "files": [{"sha": "944a3a3bd7ab18abb3390519101454d705950191", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c48a8e71c8b5d3e6bdffaec85b1e3b111814cee0/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c48a8e71c8b5d3e6bdffaec85b1e3b111814cee0/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=c48a8e71c8b5d3e6bdffaec85b1e3b111814cee0", "patch": "@@ -1,3 +1,9 @@\n+2017-11-09  Richard Sandiford  <richard.sandiford@linaro.org>\n+\t    Alan Hayward  <alan.hayward@arm.com>\n+\t    David Sherwood  <david.sherwood@arm.com>\n+\n+\t* doc/sourcebuild.texi (vect_masked_store): Document.\n+\n 2017-11-09  Richard Sandiford  <richard.sandiford@linaro.org>\n \t    Alan Hayward  <alan.hayward@arm.com>\n \t    David Sherwood  <david.sherwood@arm.com>"}, {"sha": "d5a90e518d67fb289c8caf2e8f2237970b6649ea", "filename": "gcc/doc/sourcebuild.texi", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c48a8e71c8b5d3e6bdffaec85b1e3b111814cee0/gcc%2Fdoc%2Fsourcebuild.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c48a8e71c8b5d3e6bdffaec85b1e3b111814cee0/gcc%2Fdoc%2Fsourcebuild.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Fsourcebuild.texi?ref=c48a8e71c8b5d3e6bdffaec85b1e3b111814cee0", "patch": "@@ -1403,6 +1403,9 @@ Target supports hardware vectors of @code{long}.\n @item vect_long_long\n Target supports hardware vectors of @code{long long}.\n \n+@item vect_masked_store\n+Target supports vector masked stores.\n+\n @item vect_aligned_arrays\n Target aligns arrays to vector alignment boundary.\n "}, {"sha": "3ace82cb5f1f60b008f66c5fdeff13fe5c9b4ba6", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c48a8e71c8b5d3e6bdffaec85b1e3b111814cee0/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c48a8e71c8b5d3e6bdffaec85b1e3b111814cee0/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=c48a8e71c8b5d3e6bdffaec85b1e3b111814cee0", "patch": "@@ -1,3 +1,13 @@\n+2017-11-09  Richard Sandiford  <richard.sandiford@linaro.org>\n+\t    Alan Hayward  <alan.hayward@arm.com>\n+\t    David Sherwood  <david.sherwood@arm.com>\n+\n+\t* lib/target-supports.exp (check_effective_target_vect_masked_store):\n+\tNew proc.\n+\t* gcc.dg/vect/vect-cselim-1.c (foo): Mention that the second loop\n+\tis vectorizable with masked stores.  Update scan-tree-dump-times\n+\taccordingly.\n+\n 2017-11-09  Richard Sandiford  <richard.sandiford@linaro.org>\n \t    Alan Hayward  <alan.hayward@arm.com>\n \t    David Sherwood  <david.sherwood@arm.com>"}, {"sha": "e6ad865303c42c9d5958cb6e7eac6a766752902b", "filename": "gcc/testsuite/gcc.dg/vect/vect-cselim-1.c", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c48a8e71c8b5d3e6bdffaec85b1e3b111814cee0/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-cselim-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c48a8e71c8b5d3e6bdffaec85b1e3b111814cee0/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-cselim-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-cselim-1.c?ref=c48a8e71c8b5d3e6bdffaec85b1e3b111814cee0", "patch": "@@ -38,7 +38,7 @@ foo ()\n         }\n     }\n \n-  /* Not vectorizable.  */\n+  /* Only vectorizable with masked stores.  */\n   for (i = 0; i < N; i++)\n     {\n       c = in1[i].b;\n@@ -82,4 +82,5 @@ main (void)\n   return 0;\n }\n \n-/* { dg-final { scan-tree-dump-times \"vectorized 1 loops\" 1 \"vect\"  { xfail { { vect_no_align && { ! vect_hw_misalign } } || { ! vect_strided2 } } } } } */\n+/* { dg-final { scan-tree-dump-times \"vectorized 1 loops\" 1 \"vect\" { target { ! vect_masked_store } xfail { { vect_no_align && { ! vect_hw_misalign } } || { ! vect_strided2 } } } } } */\n+/* { dg-final { scan-tree-dump-times \"vectorized 2 loops\" 1 \"vect\" { target { vect_masked_store } } } } */"}, {"sha": "54e203681bab11dacbe2df6f448d3f8b3629c2e8", "filename": "gcc/testsuite/lib/target-supports.exp", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c48a8e71c8b5d3e6bdffaec85b1e3b111814cee0/gcc%2Ftestsuite%2Flib%2Ftarget-supports.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c48a8e71c8b5d3e6bdffaec85b1e3b111814cee0/gcc%2Ftestsuite%2Flib%2Ftarget-supports.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Flib%2Ftarget-supports.exp?ref=c48a8e71c8b5d3e6bdffaec85b1e3b111814cee0", "patch": "@@ -6433,6 +6433,12 @@ proc check_effective_target_vect_load_lanes { } {\n     return $et_vect_load_lanes\n }\n \n+# Return 1 if the target supports vector masked stores.\n+\n+proc check_effective_target_vect_masked_store { } {\n+    return 0\n+}\n+\n # Return 1 if the target supports vector conditional operations, 0 otherwise.\n \n proc check_effective_target_vect_condition { } {"}]}