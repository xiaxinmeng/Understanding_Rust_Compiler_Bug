{"sha": "d9c9424d2c4f7b25acfc00db0076a65882c8a99f", "node_id": "C_kwDOANBUbNoAKGQ5Yzk0MjRkMmM0ZjdiMjVhY2ZjMDBkYjAwNzZhNjU4ODJjOGE5OWY", "commit": {"author": {"name": "Tobias Burnus", "email": "tobias@codesourcery.com", "date": "2022-08-17T13:45:56Z"}, "committer": {"name": "Tobias Burnus", "email": "tobias@codesourcery.com", "date": "2022-08-17T13:45:56Z"}, "message": "OpenMP: Fix var replacement with 'simd' and linear-step vars [PR106548]\n\ngcc/ChangeLog:\n\n\tPR middle-end/106548\n\t* omp-low.cc (lower_rec_input_clauses): Use build_outer_var_ref\n\tfor 'simd' linear-step values that are variable.\n\nlibgomp/ChangeLog:\n\n\tPR middle-end/106548\n\t* testsuite/libgomp.c/linear-2.c: New test.", "tree": {"sha": "30cfc4745cb01959490f0e7a79ca1792cadfb391", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/30cfc4745cb01959490f0e7a79ca1792cadfb391"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d9c9424d2c4f7b25acfc00db0076a65882c8a99f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d9c9424d2c4f7b25acfc00db0076a65882c8a99f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d9c9424d2c4f7b25acfc00db0076a65882c8a99f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d9c9424d2c4f7b25acfc00db0076a65882c8a99f/comments", "author": {"login": "tob2", "id": 264461, "node_id": "MDQ6VXNlcjI2NDQ2MQ==", "avatar_url": "https://avatars.githubusercontent.com/u/264461?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tob2", "html_url": "https://github.com/tob2", "followers_url": "https://api.github.com/users/tob2/followers", "following_url": "https://api.github.com/users/tob2/following{/other_user}", "gists_url": "https://api.github.com/users/tob2/gists{/gist_id}", "starred_url": "https://api.github.com/users/tob2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tob2/subscriptions", "organizations_url": "https://api.github.com/users/tob2/orgs", "repos_url": "https://api.github.com/users/tob2/repos", "events_url": "https://api.github.com/users/tob2/events{/privacy}", "received_events_url": "https://api.github.com/users/tob2/received_events", "type": "User", "site_admin": false}, "committer": {"login": "tob2", "id": 264461, "node_id": "MDQ6VXNlcjI2NDQ2MQ==", "avatar_url": "https://avatars.githubusercontent.com/u/264461?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tob2", "html_url": "https://github.com/tob2", "followers_url": "https://api.github.com/users/tob2/followers", "following_url": "https://api.github.com/users/tob2/following{/other_user}", "gists_url": "https://api.github.com/users/tob2/gists{/gist_id}", "starred_url": "https://api.github.com/users/tob2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tob2/subscriptions", "organizations_url": "https://api.github.com/users/tob2/orgs", "repos_url": "https://api.github.com/users/tob2/repos", "events_url": "https://api.github.com/users/tob2/events{/privacy}", "received_events_url": "https://api.github.com/users/tob2/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6b4e49fdfcc9bff5459d5a821dd7e9476c7c1c10", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6b4e49fdfcc9bff5459d5a821dd7e9476c7c1c10", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6b4e49fdfcc9bff5459d5a821dd7e9476c7c1c10"}], "stats": {"total": 256, "additions": 256, "deletions": 0}, "files": [{"sha": "fdf34d6668f5654fdc7882768ee3abd9255f98e5", "filename": "gcc/omp-low.cc", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d9c9424d2c4f7b25acfc00db0076a65882c8a99f/gcc%2Fomp-low.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d9c9424d2c4f7b25acfc00db0076a65882c8a99f/gcc%2Fomp-low.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fomp-low.cc?ref=d9c9424d2c4f7b25acfc00db0076a65882c8a99f", "patch": "@@ -6188,6 +6188,8 @@ lower_rec_input_clauses (tree clauses, gimple_seq *ilist, gimple_seq *dlist,\n \t\t      && gimple_omp_for_combined_into_p (ctx->stmt))\n \t\t    {\n \t\t      tree t = OMP_CLAUSE_LINEAR_STEP (c);\n+\t\t      if (DECL_P (t))\n+\t\t\tt = build_outer_var_ref (t, ctx);\n \t\t      tree stept = TREE_TYPE (t);\n \t\t      tree ct = omp_find_clause (clauses,\n \t\t\t\t\t\t OMP_CLAUSE__LOOPTEMP_);"}, {"sha": "fd549a894905aa1e88ebe218169db2f72eb052aa", "filename": "libgomp/testsuite/libgomp.c/linear-2.c", "status": "added", "additions": 254, "deletions": 0, "changes": 254, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d9c9424d2c4f7b25acfc00db0076a65882c8a99f/libgomp%2Ftestsuite%2Flibgomp.c%2Flinear-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d9c9424d2c4f7b25acfc00db0076a65882c8a99f/libgomp%2Ftestsuite%2Flibgomp.c%2Flinear-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.c%2Flinear-2.c?ref=d9c9424d2c4f7b25acfc00db0076a65882c8a99f", "patch": "@@ -0,0 +1,254 @@\n+/* PR middle-end/106548.  */\n+/* { dg-additional-options \"-msse2\" { target sse2_runtime } } */\n+/* { dg-additional-options \"-mavx\" { target avx_runtime } } */\n+\n+int a[256];\n+\n+__attribute__((noinline, noclone)) int\n+f1 (int i)\n+{\n+  #pragma omp parallel for simd linear (i: 4)\n+  for (int j = 16; j < 64; j++)\n+    {\n+      a[i] = j;\n+      i += 4;\n+    }\n+  return i;\n+}\n+\n+__attribute__((noinline, noclone)) short int\n+f2 (short int i, char k)\n+{\n+  #pragma omp parallel for simd linear (i: k + 1)\n+  for (long j = 16; j < 64; j++)\n+    {\n+      a[i] = j;\n+      i += 4;\n+    }\n+  return i;\n+}\n+\n+__attribute__((noinline, noclone)) long long int\n+f3 (long long int i, long long int k)\n+{\n+  #pragma omp parallel for simd linear (i: k)\n+  for (short j = 16; j < 64; j++)\n+    {\n+      a[i] = j;\n+      i += 4;\n+    }\n+  return i;\n+}\n+\n+__attribute__((noinline, noclone)) int\n+f4 (int i)\n+{\n+  #pragma omp parallel for simd linear (i: 4) schedule(static, 3)\n+  for (int j = 16; j < 64; j++)\n+    {\n+      a[i] = j;\n+      i += 4;\n+    }\n+  return i;\n+}\n+\n+__attribute__((noinline, noclone)) short int\n+f5 (short int i, char k)\n+{\n+  #pragma omp parallel for simd linear (i: k + 1) schedule(static, 5)\n+  for (long j = 16; j < 64; j++)\n+    {\n+      a[i] = j;\n+      i += 4;\n+    }\n+  return i;\n+}\n+\n+__attribute__((noinline, noclone)) long long int\n+f6 (long long int i, long long int k)\n+{\n+  #pragma omp parallel for simd linear (i: k) schedule(static, 7)\n+  for (short j = 16; j < 64; j++)\n+    {\n+      a[i] = j;\n+      i += 4;\n+    }\n+  return i;\n+}\n+\n+__attribute__((noinline, noclone)) int\n+f7 (int i)\n+{\n+  #pragma omp parallel for simd linear (i: 4) schedule(dynamic, 3)\n+  for (int j = 16; j < 64; j++)\n+    {\n+      a[i] = j;\n+      i += 4;\n+    }\n+  return i;\n+}\n+\n+__attribute__((noinline, noclone)) short int\n+f8 (short int i, char k)\n+{\n+  #pragma omp parallel for simd linear (i: k + 1) schedule(dynamic, 5)\n+  for (long j = 16; j < 64; j++)\n+    {\n+      a[i] = j;\n+      i += 4;\n+    }\n+  return i;\n+}\n+\n+__attribute__((noinline, noclone)) long long int\n+f9 (long long int i, long long int k)\n+{\n+  #pragma omp parallel for simd linear (i: k) schedule(dynamic, 7)\n+  for (short j = 16; j < 64; j++)\n+    {\n+      a[i] = j;\n+      i += 4;\n+    }\n+  return i;\n+}\n+\n+__attribute__((noinline, noclone)) int\n+f10 (int i, long step)\n+{\n+  #pragma omp parallel for simd linear (i: 4)\n+  for (int j = 16; j < 112; j += step)\n+    {\n+      a[i] = j / 2 + 8;\n+      i += 4;\n+    }\n+  return i;\n+}\n+\n+__attribute__((noinline, noclone)) short int\n+f11 (short int i, char k, char step)\n+{\n+  #pragma omp parallel for simd linear (i: k + 1)\n+  for (long j = 16; j < 112; j += step)\n+    {\n+      a[i] = j / 2 + 8;\n+      i += 4;\n+    }\n+  return i;\n+}\n+\n+__attribute__((noinline, noclone)) long long int\n+f12 (long long int i, long long int k, int step)\n+{\n+  #pragma omp parallel for simd linear (i: k)\n+  for (short j = 16; j < 112; j += step)\n+    {\n+      a[i] = j / 2 + 8;\n+      i += 4;\n+    }\n+  return i;\n+}\n+\n+__attribute__((noinline, noclone)) int\n+f13 (int i, long long int step)\n+{\n+  #pragma omp parallel for simd linear (i: 4) schedule(static, 3)\n+  for (int j = 16; j < 112; j += step)\n+    {\n+      a[i] = j / 2 + 8;\n+      i += 4;\n+    }\n+  return i;\n+}\n+\n+__attribute__((noinline, noclone)) short int\n+f14 (short int i, char k, int step)\n+{\n+  #pragma omp parallel for simd linear (i: k + 1) schedule(static, 5)\n+  for (long j = 16; j < 112; j += step)\n+    {\n+      a[i] = j / 2 + 8;\n+      i += 4;\n+    }\n+  return i;\n+}\n+\n+__attribute__((noinline, noclone)) long long int\n+f15 (long long int i, long long int k, long int step)\n+{\n+  #pragma omp parallel for simd linear (i: k) schedule(static, 7)\n+  for (short j = 16; j < 112; j += step)\n+    {\n+      a[i] = j / 2 + 8;\n+      i += 4;\n+    }\n+  return i;\n+}\n+\n+__attribute__((noinline, noclone)) int\n+f16 (int i, long long int step)\n+{\n+  #pragma omp parallel for simd linear (i: 4) schedule(dynamic, 3)\n+  for (int j = 16; j < 112; j += step)\n+    {\n+      a[i] = j / 2 + 8;\n+      i += 4;\n+    }\n+  return i;\n+}\n+\n+__attribute__((noinline, noclone)) short int\n+f17 (short int i, char k, int step)\n+{\n+  #pragma omp parallel for simd linear (i: k + 1) schedule(dynamic, 5)\n+  for (long j = 16; j < 112; j += step)\n+    {\n+      a[i] = j / 2 + 8;\n+      i += 4;\n+    }\n+  return i;\n+}\n+\n+__attribute__((noinline, noclone)) long long int\n+f18 (long long int i, long long int k, long int step)\n+{\n+  #pragma omp parallel for simd linear (i: k) schedule(dynamic, 7)\n+  for (short j = 16; j < 112; j += step)\n+    {\n+      a[i] = j / 2 + 8;\n+      i += 4;\n+    }\n+  return i;\n+}\n+\n+int\n+main ()\n+{\n+#define TEST(x) \\\n+  if (x != 8 + 48 * 4)\t\t\t\t\\\n+    __builtin_abort ();\t\t\t\t\\\n+  for (int i = 0; i < 256; i++)\t\t\t\\\n+    if (a[i] != (((i & 3) == 0 && i >= 8\t\\\n+\t\t  && i < 8 + 48 * 4)\t\t\\\n+\t\t ? ((i - 8) / 4) + 16 : 0))\t\\\n+      __builtin_abort ();\t\t\t\\\n+  __builtin_memset (a, 0, sizeof (a))\n+  TEST (f1 (8));\n+  TEST (f2 (8, 3));\n+  TEST (f3 (8LL, 4LL));\n+  TEST (f4 (8));\n+  TEST (f5 (8, 3));\n+  TEST (f6 (8LL, 4LL));\n+  TEST (f7 (8));\n+  TEST (f8 (8, 3));\n+  TEST (f9 (8LL, 4LL));\n+  TEST (f10 (8, 2));\n+  TEST (f11 (8, 3, 2));\n+  TEST (f12 (8LL, 4LL, 2));\n+  TEST (f13 (8, 2));\n+  TEST (f14 (8, 3, 2));\n+  TEST (f15 (8LL, 4LL, 2));\n+  TEST (f16 (8, 2));\n+  TEST (f17 (8, 3, 2));\n+  TEST (f18 (8LL, 4LL, 2));\n+  return 0;\n+}"}]}