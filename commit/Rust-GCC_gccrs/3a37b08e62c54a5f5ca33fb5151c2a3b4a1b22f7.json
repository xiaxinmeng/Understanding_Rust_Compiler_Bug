{"sha": "3a37b08e62c54a5f5ca33fb5151c2a3b4a1b22f7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2EzN2IwOGU2MmM1NGE1ZjVjYTMzZmI1MTUxYzJhM2I0YTFiMjJmNw==", "commit": {"author": {"name": "Richard Henderson", "email": "rth@redhat.com", "date": "2001-12-16T01:05:01Z"}, "committer": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "2001-12-16T01:05:01Z"}, "message": "alpha.h (TARGET_SWITCHES): Turn on MASK_EXPLICIT_RELOCS if the assembler supports it.\n\n        * config/alpha/alpha.h (TARGET_SWITCHES): Turn on\n        MASK_EXPLICIT_RELOCS if the assembler supports it.\n        * configure.in (HAVE_AS_EXPLICIT_RELOCS): New.\n        * configure, config.in: Rebuild.\n\nFrom-SVN: r48054", "tree": {"sha": "cbf829c110864fcbc2fe513c39de340fb1c12a37", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/cbf829c110864fcbc2fe513c39de340fb1c12a37"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3a37b08e62c54a5f5ca33fb5151c2a3b4a1b22f7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3a37b08e62c54a5f5ca33fb5151c2a3b4a1b22f7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3a37b08e62c54a5f5ca33fb5151c2a3b4a1b22f7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3a37b08e62c54a5f5ca33fb5151c2a3b4a1b22f7/comments", "author": null, "committer": null, "parents": [{"sha": "bd1f473825af96053542ff6d3ac518a77c95b4af", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bd1f473825af96053542ff6d3ac518a77c95b4af", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bd1f473825af96053542ff6d3ac518a77c95b4af"}], "stats": {"total": 160, "additions": 136, "deletions": 24}, "files": [{"sha": "d74ac59107efa2b762c0b6dba779386d36c6c92e", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3a37b08e62c54a5f5ca33fb5151c2a3b4a1b22f7/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3a37b08e62c54a5f5ca33fb5151c2a3b4a1b22f7/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=3a37b08e62c54a5f5ca33fb5151c2a3b4a1b22f7", "patch": "@@ -1,3 +1,10 @@\n+2001-12-15  Richard Henderson  <rth@redhat.com>\n+\n+\t* config/alpha/alpha.h (TARGET_SWITCHES): Turn on\n+\tMASK_EXPLICIT_RELOCS if the assembler supports it.\n+\t* configure.in (HAVE_AS_EXPLICIT_RELOCS): New.\n+\t* configure, config.in: Rebuild.\n+\t\n Sat Dec 15 17:53:03 2001  Richard Kenner  <kenner@vlsi1.ultra.nyu.edu>\n \n \t* calls.c (emit_call_1): If ECF_SP_DEPRESSED, pretend have adjusted"}, {"sha": "504907d96a0ad376d05a6dd2e8730b56b4065bf2", "filename": "gcc/config.in", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3a37b08e62c54a5f5ca33fb5151c2a3b4a1b22f7/gcc%2Fconfig.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3a37b08e62c54a5f5ca33fb5151c2a3b4a1b22f7/gcc%2Fconfig.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig.in?ref=3a37b08e62c54a5f5ca33fb5151c2a3b4a1b22f7", "patch": "@@ -526,6 +526,9 @@\n /* Define if your assembler supports marking sections with SHF_MERGE flag. */\n #undef HAVE_GAS_SHF_MERGE\n \n+/* Define if your assembler supports explicit relocations. */\n+#undef HAVE_AS_EXPLICIT_RELOCS\n+\n /* Define if your assembler supports .register. */\n #undef HAVE_AS_REGISTER_PSEUDO_OP\n "}, {"sha": "43dabceca6e4ad32192c31356b170adf23e39634", "filename": "gcc/config/alpha/alpha.h", "status": "modified", "additions": 10, "deletions": 1, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3a37b08e62c54a5f5ca33fb5151c2a3b4a1b22f7/gcc%2Fconfig%2Falpha%2Falpha.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3a37b08e62c54a5f5ca33fb5151c2a3b4a1b22f7/gcc%2Fconfig%2Falpha%2Falpha.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Falpha%2Falpha.h?ref=3a37b08e62c54a5f5ca33fb5151c2a3b4a1b22f7", "patch": "@@ -251,14 +251,23 @@ extern enum alpha_fp_trap_mode alpha_fptm;\n      N_(\"Emit 16-bit relocations to the small data areas\")},\t\t\\\n     {\"large-data\", -MASK_SMALL_DATA,\t\t\t\t\t\\\n      N_(\"Emit 32-bit relocations to the small data areas\")},\t\t\\\n-    {\"\", TARGET_DEFAULT | TARGET_CPU_DEFAULT, \"\"} }\n+    {\"\", TARGET_DEFAULT | TARGET_CPU_DEFAULT\t\t\t\t\\\n+\t | TARGET_DEFAULT_EXPLICIT_RELOCS, \"\"} }\n \n #define TARGET_DEFAULT MASK_FP|MASK_FPREGS\n \n #ifndef TARGET_CPU_DEFAULT\n #define TARGET_CPU_DEFAULT 0\n #endif\n \n+#ifndef TARGET_DEFAULT_EXPLICIT_RELOCS\n+#ifdef HAVE_AS_EXPLICIT_RELOCS\n+#define TARGET_DEFAULT_EXPLICIT_RELOCS MASK_EXPLICIT_RELOCS\n+#else\n+#define TARGET_DEFAULT_EXPLICIT_RELOCS 0\n+#endif\n+#endif\n+\n /* This macro is similar to `TARGET_SWITCHES' but defines names of\n    command options that have values.  Its definition is an initializer\n    with a subgrouping for each command option."}, {"sha": "2b195a84cac747f32e8123eccb5ea95853aafa3c", "filename": "gcc/configure", "status": "modified", "additions": 74, "deletions": 23, "changes": 97, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3a37b08e62c54a5f5ca33fb5151c2a3b4a1b22f7/gcc%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3a37b08e62c54a5f5ca33fb5151c2a3b4a1b22f7/gcc%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfigure?ref=3a37b08e62c54a5f5ca33fb5151c2a3b4a1b22f7", "patch": "@@ -2078,7 +2078,7 @@ EOF\n fi\n \n # Find some useful tools\n-for ac_prog in mawk gawk nawk awk\n+for ac_prog in gawk mawk nawk awk\n do\n # Extract the first word of \"$ac_prog\", so it can be a program name with args.\n set dummy $ac_prog; ac_word=$2\n@@ -6906,7 +6906,7 @@ fi\n \n # Figure out what linker we will be using.\n echo $ac_n \"checking what linker to use\"\"... $ac_c\" 1>&6\n-echo \"configure:6904: checking what linker to use\" >&5\n+echo \"configure:6910: checking what linker to use\" >&5\n gcc_cv_ld=\n gcc_cv_gld_major_version=\n gcc_cv_gld_minor_version=\n@@ -6992,7 +6992,7 @@ fi\n \n # Figure out what nm we will be using.\n echo $ac_n \"checking what nm to use\"\"... $ac_c\" 1>&6\n-echo \"configure:6910: checking what nm to use\" >&5\n+echo \"configure:6996: checking what nm to use\" >&5\n if test -x nm$host_exeext; then\n \tgcc_cv_nm=./nm$host_exeext\n elif test x$host = x$target; then\n@@ -7003,7 +7003,7 @@ echo \"$ac_t\"\"$gcc_cv_nm\" 1>&6\n \n # Figure out what objdump we will be using.\n echo $ac_n \"checking what objdump to use\"\"... $ac_c\" 1>&6\n-echo \"configure:6921: checking what objdump to use\" >&5\n+echo \"configure:7007: checking what objdump to use\" >&5\n if test -x objdump$host_exeext; then\n \tgcc_cv_objdump=./objdump$host_exeext\n elif test x$host = x$target; then\n@@ -7014,7 +7014,7 @@ echo \"$ac_t\"\"$gcc_cv_objdump\" 1>&6\n \n # Figure out what assembler alignment features are present.\n echo $ac_n \"checking assembler alignment features\"\"... $ac_c\" 1>&6\n-echo \"configure:6932: checking assembler alignment features\" >&5\n+echo \"configure:7018: checking assembler alignment features\" >&5\n gcc_cv_as_alignment_features=none\n if test x$gcc_cv_gas_major_version != x -a x$gcc_cv_gas_minor_version != x; then\n \t# Gas version 2.6 and later support for .balign and .p2align.\n@@ -7062,7 +7062,7 @@ fi\n echo \"$ac_t\"\"$gcc_cv_as_alignment_features\" 1>&6\n \n echo $ac_n \"checking assembler subsection support\"\"... $ac_c\" 1>&6\n-echo \"configure:6980: checking assembler subsection support\" >&5\n+echo \"configure:7066: checking assembler subsection support\" >&5\n gcc_cv_as_subsections=no\n if test x$gcc_cv_gas_major_version != x -a x$gcc_cv_gas_minor_version != x; then\n   if test \"$gcc_cv_gas_major_version\" -eq 2 -a \"$gcc_cv_gas_minor_version\" -ge 9 -o \"$gcc_cv_gas_major_version\" -gt 2 && grep 'obj_format = elf' ../gas/Makefile > /dev/null; then\n@@ -7102,7 +7102,7 @@ fi\n echo \"$ac_t\"\"$gcc_cv_as_subsections\" 1>&6\n \n echo $ac_n \"checking assembler weak support\"\"... $ac_c\" 1>&6\n-echo \"configure:7020: checking assembler weak support\" >&5\n+echo \"configure:7106: checking assembler weak support\" >&5\n gcc_cv_as_weak=no\n if test x$gcc_cv_gas_major_version != x -a x$gcc_cv_gas_minor_version != x; then\n   if test \"$gcc_cv_gas_major_version\" -eq 2 -a \"$gcc_cv_gas_minor_version\" -ge 2 -o \"$gcc_cv_gas_major_version\" -gt 2; then\n@@ -7125,7 +7125,7 @@ fi\n echo \"$ac_t\"\"$gcc_cv_as_weak\" 1>&6\n \n echo $ac_n \"checking assembler hidden support\"\"... $ac_c\" 1>&6\n-echo \"configure:7043: checking assembler hidden support\" >&5\n+echo \"configure:7129: checking assembler hidden support\" >&5\n gcc_cv_as_hidden=no\n if test x$gcc_cv_gas_major_version != x -a x$gcc_cv_gas_minor_version != x; then\n   if test \"$gcc_cv_gas_major_version\" -eq 2 -a \"$gcc_cv_gas_minor_version\" -ge 10 -o \"$gcc_cv_gas_major_version\" -gt 2 && grep 'obj_format = elf' ../gas/Makefile > /dev/null; then\n@@ -7149,7 +7149,7 @@ fi\n echo \"$ac_t\"\"$gcc_cv_as_hidden\" 1>&6\n \n echo $ac_n \"checking assembler leb128 support\"\"... $ac_c\" 1>&6\n-echo \"configure:7067: checking assembler leb128 support\" >&5\n+echo \"configure:7153: checking assembler leb128 support\" >&5\n gcc_cv_as_leb128=no\n if test x$gcc_cv_gas_major_version != x -a x$gcc_cv_gas_minor_version != x; then\n   if test \"$gcc_cv_gas_major_version\" -eq 2 -a \"$gcc_cv_gas_minor_version\" -ge 11 -o \"$gcc_cv_gas_major_version\" -gt 2 && grep 'obj_format = elf' ../gas/Makefile > /dev/null; then\n@@ -7194,7 +7194,7 @@ fi\n echo \"$ac_t\"\"$gcc_cv_as_leb128\" 1>&6\n \n echo $ac_n \"checking assembler eh_frame optimization\"\"... $ac_c\" 1>&6\n-echo \"configure:7112: checking assembler eh_frame optimization\" >&5\n+echo \"configure:7198: checking assembler eh_frame optimization\" >&5\n gcc_cv_as_eh_frame=no\n if test x$gcc_cv_gas_major_version != x -a x$gcc_cv_gas_minor_version != x; then\n   if test \"$gcc_cv_gas_major_version\" -eq 2 -a \"$gcc_cv_gas_minor_version\" -ge 12 -o \"$gcc_cv_gas_major_version\" -gt 2 && grep 'obj_format = elf' ../gas/Makefile > /dev/null; then\n@@ -7275,7 +7275,7 @@ fi\n echo \"$ac_t\"\"$gcc_cv_as_eh_frame\" 1>&6\n \n echo $ac_n \"checking assembler section merging support\"\"... $ac_c\" 1>&6\n-echo \"configure:7193: checking assembler section merging support\" >&5\n+echo \"configure:7279: checking assembler section merging support\" >&5\n gcc_cv_as_shf_merge=no\n if test x$gcc_cv_gas_major_version != x -a x$gcc_cv_gas_minor_version != x; then\n   if test \"$gcc_cv_gas_major_version\" -eq 2 -a \"$gcc_cv_gas_minor_version\" -ge 12 -o \"$gcc_cv_gas_major_version\" -gt 2 && grep 'obj_format = elf' ../gas/Makefile > /dev/null; then\n@@ -7297,10 +7297,61 @@ EOF\n fi\n echo \"$ac_t\"\"$gcc_cv_as_shf_merge\" 1>&6\n \n-case \"$target\" in \n+case \"$target\" in\n+  # All TARGET_ABI_OSF targets.\n+  alpha*-*-osf* | alpha*-*-linux* | alpha*-*-*bsd*)\n+    echo $ac_n \"checking assembler supports explicit relocations\"\"... $ac_c\" 1>&6\n+echo \"configure:7305: checking assembler supports explicit relocations\" >&5\n+if eval \"test \\\"`echo '$''{'gcc_cv_as_explicit_relocs'+set}'`\\\" = set\"; then\n+  echo $ac_n \"(cached) $ac_c\" 1>&6\n+else\n+  \n+\tgcc_cv_as_explicit_relocs=unknown\n+\tif test x$gcc_cv_gas_major_version != x \\\n+\t\t-a x$gcc_cv_gas_minor_version != x\n+\tthen\n+\t   if test \"$gcc_cv_gas_major_version\" -eq 2 \\\n+\t           -a \"$gcc_cv_gas_minor_version\" -ge 12 \\\n+\t           -o \"$gcc_cv_gas_major_version\" -gt 2; then\n+\t      gcc_cv_as_explicit_relocs=yes\n+\t   fi\n+\telif test x$gcc_cv_as != x; then\n+\t    cat > conftest.s << 'EOF'\n+\t.set nomacro\n+\t.text\n+\textbl\t$3, $2, $3\t!lituse_bytoff!1\n+\tldq\t$2, a($29)\t!literal!1\n+\tldq\t$4, b($29)\t!literal!2\n+\tldq_u\t$3, 0($2)\t!lituse_base!1\n+\tldq\t$27, f($29)\t!literal!5\n+\tjsr\t$26, ($27), f\t!lituse_jsr!5\n+\tldah\t$29, 0($26)\t!gpdisp!3\n+\tlda\t$0, c($29)\t!gprel\n+\tldah\t$1, d($29)\t!gprelhigh\n+\tlda\t$1, d($1)\t!gprellow\n+\tlda\t$29, 0($29)\t!gpdisp!3\n+EOF\n+\t    if $gcc_cv_as -o conftest.o conftest.s > /dev/null 2>&1; then\n+\t\tgcc_cv_as_explicit_relocs=yes\n+\t    else\n+\t\tgcc_cv_as_explicit_relocs=no\n+\t    fi\n+\t    rm -f conftest.s conftest.o\n+\tfi\n+    \n+fi\n+\n+echo \"$ac_t\"\"$gcc_cv_as_explicit_relocs\" 1>&6\n+    if test \"x$gcc_cv_as_explicit_relocs\" = xyes; then\n+\tcat >> confdefs.h <<\\EOF\n+#define HAVE_AS_EXPLICIT_RELOCS 1\n+EOF\n+\n+    fi\n+    ;;\n   sparc*-*-*)\n     echo $ac_n \"checking assembler .register pseudo-op support\"\"... $ac_c\" 1>&6\n-echo \"configure:7218: checking assembler .register pseudo-op support\" >&5\n+echo \"configure:7355: checking assembler .register pseudo-op support\" >&5\n if eval \"test \\\"`echo '$''{'gcc_cv_as_register_pseudo_op'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n@@ -7328,7 +7379,7 @@ EOF\n     fi\n \n     echo $ac_n \"checking assembler supports -relax\"\"... $ac_c\" 1>&6\n-echo \"configure:7246: checking assembler supports -relax\" >&5\n+echo \"configure:7383: checking assembler supports -relax\" >&5\n if eval \"test \\\"`echo '$''{'gcc_cv_as_relax_opt'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n@@ -7358,7 +7409,7 @@ EOF\n     case \"$tm_file\" in\n     *64*)\n \techo $ac_n \"checking for 64 bit support in assembler ($gcc_cv_as)\"\"... $ac_c\" 1>&6\n-echo \"configure:7276: checking for 64 bit support in assembler ($gcc_cv_as)\" >&5\n+echo \"configure:7413: checking for 64 bit support in assembler ($gcc_cv_as)\" >&5\n if eval \"test \\\"`echo '$''{'gcc_cv_as_flags64'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n@@ -7403,7 +7454,7 @@ EOF\n \n     if test \"x$gcc_cv_as_flags64\" != xno; then\n \techo $ac_n \"checking for assembler offsetable %lo() support\"\"... $ac_c\" 1>&6\n-echo \"configure:7321: checking for assembler offsetable %lo() support\" >&5\n+echo \"configure:7458: checking for assembler offsetable %lo() support\" >&5\n if eval \"test \\\"`echo '$''{'gcc_cv_as_offsetable_lo10'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n@@ -7443,7 +7494,7 @@ EOF\n \n   i[34567]86-*-* | x86_64-*-*)\n     echo $ac_n \"checking assembler instructions\"\"... $ac_c\" 1>&6\n-echo \"configure:7361: checking assembler instructions\" >&5\n+echo \"configure:7498: checking assembler instructions\" >&5\n     gcc_cv_as_instructions=\n     if test x$gcc_cv_gas_major_version != x -a x$gcc_cv_gas_minor_version != x; then\n       if test \"$gcc_cv_gas_major_version\" -eq 2 -a \"$gcc_cv_gas_minor_version\" -ge 9 -o \"$gcc_cv_gas_major_version\" -gt 2; then\n@@ -7470,7 +7521,7 @@ EOF\n     echo \"$ac_t\"\"$gcc_cv_as_instructions\" 1>&6\n \n     echo $ac_n \"checking assembler GOTOFF in data directives\"\"... $ac_c\" 1>&6\n-echo \"configure:7388: checking assembler GOTOFF in data directives\" >&5\n+echo \"configure:7525: checking assembler GOTOFF in data directives\" >&5\n     gcc_cv_as_gotoff_in_data=no\n     if test x$gcc_cv_gas_major_version != x -a x$gcc_cv_gas_minor_version != x\n     then\n@@ -7500,7 +7551,7 @@ EOF\n esac\n \n echo $ac_n \"checking assembler dwarf2 debug_line support\"\"... $ac_c\" 1>&6\n-echo \"configure:7418: checking assembler dwarf2 debug_line support\" >&5\n+echo \"configure:7555: checking assembler dwarf2 debug_line support\" >&5\n gcc_cv_as_dwarf2_debug_line=no\n # ??? Not all targets support dwarf2 debug_line, even within a version\n # of gas.  Moreover, we need to emit a valid instruction to trigger any\n@@ -7556,7 +7607,7 @@ fi\n echo \"$ac_t\"\"$gcc_cv_as_dwarf2_debug_line\" 1>&6\n \n echo $ac_n \"checking assembler --gdwarf2 support\"\"... $ac_c\" 1>&6\n-echo \"configure:7474: checking assembler --gdwarf2 support\" >&5\n+echo \"configure:7611: checking assembler --gdwarf2 support\" >&5\n gcc_cv_as_gdwarf2_flag=no\n if test x$gcc_cv_gas_major_version != x -a x$gcc_cv_gas_minor_version != x;\n then\n@@ -7585,7 +7636,7 @@ fi\n echo \"$ac_t\"\"$gcc_cv_as_gdwarf2_flag\" 1>&6\n \n echo $ac_n \"checking assembler --gstabs support\"\"... $ac_c\" 1>&6\n-echo \"configure:7503: checking assembler --gstabs support\" >&5\n+echo \"configure:7640: checking assembler --gstabs support\" >&5\n gcc_cv_as_gstabs_flag=no\n if test x$gcc_cv_gas_major_version != x -a x$gcc_cv_gas_minor_version != x;\n then\n@@ -7613,7 +7664,7 @@ fi\n echo \"$ac_t\"\"$gcc_cv_as_gstabs_flag\" 1>&6\n \n echo $ac_n \"checking linker PT_GNU_EH_FRAME support\"\"... $ac_c\" 1>&6\n-echo \"configure:7611: checking linker PT_GNU_EH_FRAME support\" >&5\n+echo \"configure:7668: checking linker PT_GNU_EH_FRAME support\" >&5\n gcc_cv_ld_eh_frame_hdr=no\n if test x$gcc_cv_gld_major_version != x -a x$gcc_cv_gld_minor_version != x; then\n   if test \"$gcc_cv_gld_major_version\" -eq 2 -a \"$gcc_cv_gld_minor_version\" -ge 12 -o \"$gcc_cv_gld_major_version\" -gt 2 && grep 'EMUL = elf' ../ld/Makefile > /dev/null; then\n@@ -7776,7 +7827,7 @@ fi\n \n \n echo $ac_n \"checking whether to enable maintainer-specific portions of Makefiles\"\"... $ac_c\" 1>&6\n-echo \"configure:7673: checking whether to enable maintainer-specific portions of Makefiles\" >&5\n+echo \"configure:7831: checking whether to enable maintainer-specific portions of Makefiles\" >&5\n     # Check whether --enable-maintainer-mode or --disable-maintainer-mode was given.\n if test \"${enable_maintainer_mode+set}\" = set; then\n   enableval=\"$enable_maintainer_mode\""}, {"sha": "763fc16dc94806d959418e1e7672a2c27b3cf858", "filename": "gcc/configure.in", "status": "modified", "additions": 42, "deletions": 0, "changes": 42, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3a37b08e62c54a5f5ca33fb5151c2a3b4a1b22f7/gcc%2Fconfigure.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3a37b08e62c54a5f5ca33fb5151c2a3b4a1b22f7/gcc%2Fconfigure.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfigure.in?ref=3a37b08e62c54a5f5ca33fb5151c2a3b4a1b22f7", "patch": "@@ -1623,6 +1623,48 @@ fi\n AC_MSG_RESULT($gcc_cv_as_shf_merge)\n \n case \"$target\" in\n+  # All TARGET_ABI_OSF targets.\n+  alpha*-*-osf* | alpha*-*-linux* | alpha*-*-*bsd*)\n+    AC_CACHE_CHECK([assembler supports explicit relocations],\n+\tgcc_cv_as_explicit_relocs, [\n+\tgcc_cv_as_explicit_relocs=unknown\n+\tif test x$gcc_cv_gas_major_version != x \\\n+\t\t-a x$gcc_cv_gas_minor_version != x\n+\tthen\n+\t   if test \"$gcc_cv_gas_major_version\" -eq 2 \\\n+\t           -a \"$gcc_cv_gas_minor_version\" -ge 12 \\\n+\t           -o \"$gcc_cv_gas_major_version\" -gt 2; then\n+\t      gcc_cv_as_explicit_relocs=yes\n+\t   fi\n+\telif test x$gcc_cv_as != x; then\n+\t    cat > conftest.s << 'EOF'\n+\t.set nomacro\n+\t.text\n+\textbl\t$3, $2, $3\t!lituse_bytoff!1\n+\tldq\t$2, a($29)\t!literal!1\n+\tldq\t$4, b($29)\t!literal!2\n+\tldq_u\t$3, 0($2)\t!lituse_base!1\n+\tldq\t$27, f($29)\t!literal!5\n+\tjsr\t$26, ($27), f\t!lituse_jsr!5\n+\tldah\t$29, 0($26)\t!gpdisp!3\n+\tlda\t$0, c($29)\t!gprel\n+\tldah\t$1, d($29)\t!gprelhigh\n+\tlda\t$1, d($1)\t!gprellow\n+\tlda\t$29, 0($29)\t!gpdisp!3\n+EOF\n+\t    if $gcc_cv_as -o conftest.o conftest.s > /dev/null 2>&1; then\n+\t\tgcc_cv_as_explicit_relocs=yes\n+\t    else\n+\t\tgcc_cv_as_explicit_relocs=no\n+\t    fi\n+\t    rm -f conftest.s conftest.o\n+\tfi\n+    ])\n+    if test \"x$gcc_cv_as_explicit_relocs\" = xyes; then\n+\tAC_DEFINE(HAVE_AS_EXPLICIT_RELOCS, 1,\n+\t\t[Define if your assembler supports explicit relocations.])\n+    fi\n+    ;;\n   sparc*-*-*)\n     AC_CACHE_CHECK([assembler .register pseudo-op support],\n \tgcc_cv_as_register_pseudo_op, ["}]}