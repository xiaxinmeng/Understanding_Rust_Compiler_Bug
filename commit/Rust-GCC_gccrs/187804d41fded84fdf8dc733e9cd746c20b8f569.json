{"sha": "187804d41fded84fdf8dc733e9cd746c20b8f569", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTg3ODA0ZDQxZmRlZDg0ZmRmOGRjNzMzZTljZDc0NmMyMGI4ZjU2OQ==", "commit": {"author": {"name": "Richard Sandiford", "email": "richard.sandiford@arm.com", "date": "2014-10-26T10:40:59Z"}, "committer": {"name": "Richard Sandiford", "email": "rsandifo@gcc.gnu.org", "date": "2014-10-26T10:40:59Z"}, "message": "mips.c: Include rtl-iter.h.\n\ngcc/\n\t* config/mips/mips.c: Include rtl-iter.h.\n\t(mips_small_data_pattern_1): Take an rtx rather than an rtx pointer.\n\tTake the context as a parameter instead of the containing MEM.\n\tIterate over all subrtxes.\n\t(mips_small_data_pattern_p): Update call accordingly.\n\nFrom-SVN: r216707", "tree": {"sha": "e1f82dd72b9a0631c6fe629622d7c0bb309c5a98", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e1f82dd72b9a0631c6fe629622d7c0bb309c5a98"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/187804d41fded84fdf8dc733e9cd746c20b8f569", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/187804d41fded84fdf8dc733e9cd746c20b8f569", "html_url": "https://github.com/Rust-GCC/gccrs/commit/187804d41fded84fdf8dc733e9cd746c20b8f569", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/187804d41fded84fdf8dc733e9cd746c20b8f569/comments", "author": {"login": "rsandifo-arm", "id": 28043039, "node_id": "MDQ6VXNlcjI4MDQzMDM5", "avatar_url": "https://avatars.githubusercontent.com/u/28043039?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rsandifo-arm", "html_url": "https://github.com/rsandifo-arm", "followers_url": "https://api.github.com/users/rsandifo-arm/followers", "following_url": "https://api.github.com/users/rsandifo-arm/following{/other_user}", "gists_url": "https://api.github.com/users/rsandifo-arm/gists{/gist_id}", "starred_url": "https://api.github.com/users/rsandifo-arm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rsandifo-arm/subscriptions", "organizations_url": "https://api.github.com/users/rsandifo-arm/orgs", "repos_url": "https://api.github.com/users/rsandifo-arm/repos", "events_url": "https://api.github.com/users/rsandifo-arm/events{/privacy}", "received_events_url": "https://api.github.com/users/rsandifo-arm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "21ffb9589ebd03e7d6e0b6f2d14bb3c437cc9b6f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/21ffb9589ebd03e7d6e0b6f2d14bb3c437cc9b6f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/21ffb9589ebd03e7d6e0b6f2d14bb3c437cc9b6f"}], "stats": {"total": 50, "additions": 31, "deletions": 19}, "files": [{"sha": "10dd26e84a8fcb41fefe84d10402fb39a1676256", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/187804d41fded84fdf8dc733e9cd746c20b8f569/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/187804d41fded84fdf8dc733e9cd746c20b8f569/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=187804d41fded84fdf8dc733e9cd746c20b8f569", "patch": "@@ -1,3 +1,11 @@\n+2014-10-26  Richard Sandiford  <richard.sandiford@arm.com>\n+\n+\t* config/mips/mips.c: Include rtl-iter.h.\n+\t(mips_small_data_pattern_1): Take an rtx rather than an rtx pointer.\n+\tTake the context as a parameter instead of the containing MEM.\n+\tIterate over all subrtxes.\n+\t(mips_small_data_pattern_p): Update call accordingly.\n+\n 2014-10-26  Richard Sandiford  <richard.sandiford@arm.com>\n \n \t* config/mep/mep.c (mep_mul_hilo_bypass_1): Delete."}, {"sha": "f0286ce4f64463f23b93bbf9861a975702c39727", "filename": "gcc/config/mips/mips.c", "status": "modified", "additions": 23, "deletions": 19, "changes": 42, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/187804d41fded84fdf8dc733e9cd746c20b8f569/gcc%2Fconfig%2Fmips%2Fmips.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/187804d41fded84fdf8dc733e9cd746c20b8f569/gcc%2Fconfig%2Fmips%2Fmips.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fmips.c?ref=187804d41fded84fdf8dc733e9cd746c20b8f569", "patch": "@@ -76,6 +76,7 @@ along with GCC; see the file COPYING3.  If not see\n #include \"context.h\"\n #include \"cgraph.h\"\n #include \"builtins.h\"\n+#include \"rtl-iter.h\"\n \n /* True if X is an UNSPEC wrapper around a SYMBOL_REF or LABEL_REF.  */\n #define UNSPEC_ADDRESS_P(X)\t\t\t\t\t\\\n@@ -3449,29 +3450,32 @@ mips_rewrite_small_data_p (rtx x, enum mips_symbol_context context)\n \t  && symbol_type == SYMBOL_GP_RELATIVE);\n }\n \n-/* A for_each_rtx callback for mips_small_data_pattern_p.  DATA is the\n-   containing MEM, or null if none.  */\n+/* Return true if OP refers to small data symbols directly, not through\n+   a LO_SUM.  CONTEXT is the context in which X appears.  */\n \n static int\n-mips_small_data_pattern_1 (rtx *loc, void *data)\n+mips_small_data_pattern_1 (rtx x, enum mips_symbol_context context)\n {\n-  enum mips_symbol_context context;\n-\n-  /* Ignore things like \"g\" constraints in asms.  We make no particular\n-     guarantee about which symbolic constants are acceptable as asm operands\n-     versus which must be forced into a GPR.  */\n-  if (GET_CODE (*loc) == LO_SUM || GET_CODE (*loc) == ASM_OPERANDS)\n-    return -1;\n-\n-  if (MEM_P (*loc))\n+  subrtx_var_iterator::array_type array;\n+  FOR_EACH_SUBRTX_VAR (iter, array, x, ALL)\n     {\n-      if (for_each_rtx (&XEXP (*loc, 0), mips_small_data_pattern_1, *loc))\n-\treturn 1;\n-      return -1;\n-    }\n+      rtx x = *iter;\n \n-  context = data ? SYMBOL_CONTEXT_MEM : SYMBOL_CONTEXT_LEA;\n-  return mips_rewrite_small_data_p (*loc, context);\n+      /* Ignore things like \"g\" constraints in asms.  We make no particular\n+\t guarantee about which symbolic constants are acceptable as asm operands\n+\t versus which must be forced into a GPR.  */\n+      if (GET_CODE (x) == LO_SUM || GET_CODE (x) == ASM_OPERANDS)\n+\titer.skip_subrtxes ();\n+      else if (MEM_P (x))\n+\t{\n+\t  if (mips_small_data_pattern_1 (XEXP (x, 0), SYMBOL_CONTEXT_MEM))\n+\t    return true;\n+\t  iter.skip_subrtxes ();\n+\t}\n+      else if (mips_rewrite_small_data_p (x, context))\n+\treturn true;\n+    }\n+  return false;\n }\n \n /* Return true if OP refers to small data symbols directly, not through\n@@ -3480,7 +3484,7 @@ mips_small_data_pattern_1 (rtx *loc, void *data)\n bool\n mips_small_data_pattern_p (rtx op)\n {\n-  return for_each_rtx (&op, mips_small_data_pattern_1, NULL);\n+  return mips_small_data_pattern_1 (op, SYMBOL_CONTEXT_LEA);\n }\n \n /* A for_each_rtx callback, used by mips_rewrite_small_data."}]}