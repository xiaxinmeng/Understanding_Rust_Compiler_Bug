{"sha": "837be6c7cfb49e16a18ef8f6c44d98bfa6d2396b", "node_id": "C_kwDOANBUbNoAKDgzN2JlNmM3Y2ZiNDllMTZhMThlZjhmNmM0NGQ5OGJmYTZkMjM5NmI", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2022-11-09T12:52:58Z"}, "committer": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2022-11-09T13:51:00Z"}, "message": "tree-optimization/84646 - remove premature thread path rejection\n\nThis removes a premature rejection that's done later in a different\nway.\n\n\tPR tree-optimization/84646\n\t* tree-ssa-threadbackward.cc (back_threader::maybe_register_path):\n\tRemove premature cycle rejection.", "tree": {"sha": "c9140707ce2acb3c57d6df163a2ad5b4d71bff44", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c9140707ce2acb3c57d6df163a2ad5b4d71bff44"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/837be6c7cfb49e16a18ef8f6c44d98bfa6d2396b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/837be6c7cfb49e16a18ef8f6c44d98bfa6d2396b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/837be6c7cfb49e16a18ef8f6c44d98bfa6d2396b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/837be6c7cfb49e16a18ef8f6c44d98bfa6d2396b/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3ed1b4ce7c9bdf8c777d12da0f5fe4cae8ba7c8e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3ed1b4ce7c9bdf8c777d12da0f5fe4cae8ba7c8e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3ed1b4ce7c9bdf8c777d12da0f5fe4cae8ba7c8e"}], "stats": {"total": 23, "additions": 7, "deletions": 16}, "files": [{"sha": "2290b95717d24a4a925777375187b53aaafc1225", "filename": "gcc/tree-ssa-threadbackward.cc", "status": "modified", "additions": 7, "deletions": 16, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/837be6c7cfb49e16a18ef8f6c44d98bfa6d2396b/gcc%2Ftree-ssa-threadbackward.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/837be6c7cfb49e16a18ef8f6c44d98bfa6d2396b/gcc%2Ftree-ssa-threadbackward.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-threadbackward.cc?ref=837be6c7cfb49e16a18ef8f6c44d98bfa6d2396b", "patch": "@@ -249,25 +249,16 @@ back_threader::maybe_register_path (back_threader_profitability &profit)\n \n   if (taken_edge && taken_edge != UNREACHABLE_EDGE)\n     {\n-      if (m_visited_bbs.contains (taken_edge->dest))\n+      bool irreducible = false;\n+      if (profit.profitable_path_p (m_path, taken_edge, &irreducible)\n+\t  && debug_counter ()\n+\t  && m_registry.register_path (m_path, taken_edge))\n \t{\n-\t  // Avoid circular paths by indicating there is nothing to\n-\t  // see in this direction.\n-\t  taken_edge = UNREACHABLE_EDGE;\n+\t  if (irreducible)\n+\t    vect_free_loop_info_assumptions (m_path[0]->loop_father);\n \t}\n       else\n-\t{\n-\t  bool irreducible = false;\n-\t  if (profit.profitable_path_p (m_path, taken_edge, &irreducible)\n-\t      && debug_counter ()\n-\t      && m_registry.register_path (m_path, taken_edge))\n-\t    {\n-\t      if (irreducible)\n-\t\tvect_free_loop_info_assumptions (m_path[0]->loop_father);\n-\t    }\n-\t  else\n-\t    taken_edge = NULL;\n-\t}\n+\ttaken_edge = NULL;\n     }\n \n   if (dump_file && (dump_flags & TDF_DETAILS))"}]}