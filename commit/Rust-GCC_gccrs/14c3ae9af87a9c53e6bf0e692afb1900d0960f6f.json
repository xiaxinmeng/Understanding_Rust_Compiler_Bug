{"sha": "14c3ae9af87a9c53e6bf0e692afb1900d0960f6f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTRjM2FlOWFmODdhOWM1M2U2YmYwZTY5MmFmYjE5MDBkMDk2MGY2Zg==", "commit": {"author": {"name": "Gary Dismukes", "email": "dismukes@adacore.com", "date": "2016-05-02T10:31:25Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2016-05-02T10:31:25Z"}, "message": "exp_util.ads, [...]: Minor reformatting.\n\n2016-05-02  Gary Dismukes  <dismukes@adacore.com>\n\n\t* exp_util.ads, sem_ch12.adb: Minor reformatting.\n\nFrom-SVN: r235743", "tree": {"sha": "edaaac6e9c243211ff8b0b82c0bd4cbe35e3b742", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/edaaac6e9c243211ff8b0b82c0bd4cbe35e3b742"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/14c3ae9af87a9c53e6bf0e692afb1900d0960f6f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/14c3ae9af87a9c53e6bf0e692afb1900d0960f6f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/14c3ae9af87a9c53e6bf0e692afb1900d0960f6f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/14c3ae9af87a9c53e6bf0e692afb1900d0960f6f/comments", "author": {"login": "dismukes", "id": 50880541, "node_id": "MDQ6VXNlcjUwODgwNTQx", "avatar_url": "https://avatars.githubusercontent.com/u/50880541?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dismukes", "html_url": "https://github.com/dismukes", "followers_url": "https://api.github.com/users/dismukes/followers", "following_url": "https://api.github.com/users/dismukes/following{/other_user}", "gists_url": "https://api.github.com/users/dismukes/gists{/gist_id}", "starred_url": "https://api.github.com/users/dismukes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dismukes/subscriptions", "organizations_url": "https://api.github.com/users/dismukes/orgs", "repos_url": "https://api.github.com/users/dismukes/repos", "events_url": "https://api.github.com/users/dismukes/events{/privacy}", "received_events_url": "https://api.github.com/users/dismukes/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "89d3b1a13386e9fc4070c54faaf3d29eb96db20d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/89d3b1a13386e9fc4070c54faaf3d29eb96db20d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/89d3b1a13386e9fc4070c54faaf3d29eb96db20d"}], "stats": {"total": 18, "additions": 11, "deletions": 7}, "files": [{"sha": "2a0ef8d8648d3a3ee71769b156d094f833d0f432", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/14c3ae9af87a9c53e6bf0e692afb1900d0960f6f/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/14c3ae9af87a9c53e6bf0e692afb1900d0960f6f/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=14c3ae9af87a9c53e6bf0e692afb1900d0960f6f", "patch": "@@ -1,3 +1,7 @@\n+2016-05-02  Gary Dismukes  <dismukes@adacore.com>\n+\n+\t* exp_util.ads, sem_ch12.adb: Minor reformatting.\n+\n 2016-05-02  Javier Miranda  <miranda@adacore.com>\n \n \t* exp_util.ads, exp_util.adb (Force_Evaluation): Adding new formal."}, {"sha": "86136458667eabf3d466773ecdb7a96db4926aee", "filename": "gcc/ada/exp_util.ads", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/14c3ae9af87a9c53e6bf0e692afb1900d0960f6f/gcc%2Fada%2Fexp_util.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/14c3ae9af87a9c53e6bf0e692afb1900d0960f6f/gcc%2Fada%2Fexp_util.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_util.ads?ref=14c3ae9af87a9c53e6bf0e692afb1900d0960f6f", "patch": "@@ -542,8 +542,8 @@ package Exp_Util is\n    --  of the same expression won't generate multiple side effects, whereas\n    --  Force_Evaluation further guarantees that all evaluations will yield\n    --  the same result. If Mode is Relaxed then calls to this subprogram have\n-   --  no effect if Exp is side-effects free; if Mode is Strict and Exp is not\n-   --  a static expression then no side-effects check is performed on Exp and\n+   --  no effect if Exp is side-effect free; if Mode is Strict and Exp is not\n+   --  a static expression then no side-effect check is performed on Exp and\n    --  temporaries are unconditionally generated.\n    --\n    --  Related_Id denotes the entity of the context where Expr appears. Flags\n@@ -985,7 +985,7 @@ package Exp_Util is\n      (L            : List_Id;\n       Name_Req     : Boolean := False;\n       Variable_Ref : Boolean := False) return Boolean;\n-   --  Determines if all elements of the list L are side effect free. Name_Req\n+   --  Determines if all elements of the list L are side-effect free. Name_Req\n    --  and Variable_Ref are as described above.\n \n    procedure Silly_Boolean_Array_Not_Test (N : Node_Id; T : Entity_Id);"}, {"sha": "9daba776d111a3d63a698bea9a5acf8aca967d5c", "filename": "gcc/ada/sem_ch12.adb", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/14c3ae9af87a9c53e6bf0e692afb1900d0960f6f/gcc%2Fada%2Fsem_ch12.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/14c3ae9af87a9c53e6bf0e692afb1900d0960f6f/gcc%2Fada%2Fsem_ch12.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch12.adb?ref=14c3ae9af87a9c53e6bf0e692afb1900d0960f6f", "patch": "@@ -5759,7 +5759,7 @@ package body Sem_Ch12 is\n       --------------------\n \n       procedure Check_Mismatch (B : Boolean) is\n-         --  a Formal_Type_Declaration for a derived private type is rewritten\n+         --  A Formal_Type_Declaration for a derived private type is rewritten\n          --  as a private extension decl. (see Analyze_Formal_Derived_Type),\n          --  which is why we examine the original node.\n \n@@ -5927,9 +5927,9 @@ package body Sem_Ch12 is\n          --  If the formal entity comes from a formal declaration, it was\n          --  defaulted in the formal package, and no check is needed on it.\n \n-         elsif\n-           Nkind_In (Original_Node (Parent (E2)),\n-             N_Formal_Object_Declaration, N_Formal_Type_Declaration)\n+         elsif Nkind_In (Original_Node (Parent (E2)),\n+                         N_Formal_Object_Declaration,\n+                         N_Formal_Type_Declaration)\n          then\n             goto Next_E;\n "}]}