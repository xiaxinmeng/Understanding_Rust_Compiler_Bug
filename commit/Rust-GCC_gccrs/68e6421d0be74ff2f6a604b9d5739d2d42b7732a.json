{"sha": "68e6421d0be74ff2f6a604b9d5739d2d42b7732a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjhlNjQyMWQwYmU3NGZmMmY2YTYwNGI5ZDU3MzlkMmQ0MmI3NzMyYQ==", "commit": {"author": {"name": "Joseph Myers", "email": "joseph@codesourcery.com", "date": "2004-11-04T16:16:37Z"}, "committer": {"name": "Joseph Myers", "email": "jsm28@gcc.gnu.org", "date": "2004-11-04T16:16:37Z"}, "message": "asm-qual-1.c, [...]: New tests.\n\n\t* gcc.dg/asm-qual-1.c, gcc.dg/declspec-15.c, gcc.dg/declspec-16.c,\n\tgcc.dg/declspec-17.c, gcc.dg/empty-source-1.c,\n\tgcc.dg/empty-source-2.c, gcc.dg/empty-source-3.c,\n\tgcc.dg/extra-semi-1.c, gcc.dg/extra-semi-2.c,\n\tgcc.dg/extra-semi-3.c, gcc.dg/gnu-cond-expr-1.c,\n\tgcc.dg/gnu-cond-expr-2.c, gcc.dg/gnu-cond-expr-3.c,\n\tgcc.dg/init-empty-1.c, gcc.dg/init-empty-2.c,\n\tgcc.dg/init-empty-3.c, gcc.dg/noncompile/old-style-parm-1.c,\n\tgcc.dg/noncompile/old-style-parm-2.c, gcc.dg/stmt-expr-1.c,\n\tgcc.dg/stmt-expr-2.c, gcc.dg/stmt-expr-3.c: New tests.\n\nFrom-SVN: r90066", "tree": {"sha": "c83a0c83634b069528a2df396482a04da2a4f3bd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c83a0c83634b069528a2df396482a04da2a4f3bd"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/68e6421d0be74ff2f6a604b9d5739d2d42b7732a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/68e6421d0be74ff2f6a604b9d5739d2d42b7732a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/68e6421d0be74ff2f6a604b9d5739d2d42b7732a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/68e6421d0be74ff2f6a604b9d5739d2d42b7732a/comments", "author": {"login": "jsm28", "id": 10537793, "node_id": "MDQ6VXNlcjEwNTM3Nzkz", "avatar_url": "https://avatars.githubusercontent.com/u/10537793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsm28", "html_url": "https://github.com/jsm28", "followers_url": "https://api.github.com/users/jsm28/followers", "following_url": "https://api.github.com/users/jsm28/following{/other_user}", "gists_url": "https://api.github.com/users/jsm28/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsm28/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsm28/subscriptions", "organizations_url": "https://api.github.com/users/jsm28/orgs", "repos_url": "https://api.github.com/users/jsm28/repos", "events_url": "https://api.github.com/users/jsm28/events{/privacy}", "received_events_url": "https://api.github.com/users/jsm28/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jsm28", "id": 10537793, "node_id": "MDQ6VXNlcjEwNTM3Nzkz", "avatar_url": "https://avatars.githubusercontent.com/u/10537793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsm28", "html_url": "https://github.com/jsm28", "followers_url": "https://api.github.com/users/jsm28/followers", "following_url": "https://api.github.com/users/jsm28/following{/other_user}", "gists_url": "https://api.github.com/users/jsm28/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsm28/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsm28/subscriptions", "organizations_url": "https://api.github.com/users/jsm28/orgs", "repos_url": "https://api.github.com/users/jsm28/repos", "events_url": "https://api.github.com/users/jsm28/events{/privacy}", "received_events_url": "https://api.github.com/users/jsm28/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "da54323470d1d8875c17b6e651838211d933b0d4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/da54323470d1d8875c17b6e651838211d933b0d4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/da54323470d1d8875c17b6e651838211d933b0d4"}], "stats": {"total": 221, "additions": 221, "deletions": 0}, "files": [{"sha": "a499d04901a2d04c93c36006c563393284575e81", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/68e6421d0be74ff2f6a604b9d5739d2d42b7732a/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/68e6421d0be74ff2f6a604b9d5739d2d42b7732a/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=68e6421d0be74ff2f6a604b9d5739d2d42b7732a", "patch": "@@ -1,3 +1,16 @@\n+2004-11-04  Joseph S. Myers  <joseph@codesourcery.com>\n+\n+\t* gcc.dg/asm-qual-1.c, gcc.dg/declspec-15.c, gcc.dg/declspec-16.c,\n+\tgcc.dg/declspec-17.c, gcc.dg/empty-source-1.c,\n+\tgcc.dg/empty-source-2.c, gcc.dg/empty-source-3.c,\n+\tgcc.dg/extra-semi-1.c, gcc.dg/extra-semi-2.c,\n+\tgcc.dg/extra-semi-3.c, gcc.dg/gnu-cond-expr-1.c,\n+\tgcc.dg/gnu-cond-expr-2.c, gcc.dg/gnu-cond-expr-3.c,\n+\tgcc.dg/init-empty-1.c, gcc.dg/init-empty-2.c,\n+\tgcc.dg/init-empty-3.c, gcc.dg/noncompile/old-style-parm-1.c,\n+\tgcc.dg/noncompile/old-style-parm-2.c, gcc.dg/stmt-expr-1.c,\n+\tgcc.dg/stmt-expr-2.c, gcc.dg/stmt-expr-3.c: New tests.\n+\n 2004-11-04  Joseph S. Myers  <joseph@codesourcery.com>\n \n \t* gcc.dg/c90-restrict-1.c, gcc.dg/c99-arraydecl-2.c,"}, {"sha": "9c931d40753143f7c6f613bd3510b1789f45d60e", "filename": "gcc/testsuite/gcc.dg/asm-qual-1.c", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/68e6421d0be74ff2f6a604b9d5739d2d42b7732a/gcc%2Ftestsuite%2Fgcc.dg%2Fasm-qual-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/68e6421d0be74ff2f6a604b9d5739d2d42b7732a/gcc%2Ftestsuite%2Fgcc.dg%2Fasm-qual-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fasm-qual-1.c?ref=68e6421d0be74ff2f6a604b9d5739d2d42b7732a", "patch": "@@ -0,0 +1,12 @@\n+/* Test that qualifiers other than volatile are ignored on asm.  */\n+/* Origin: Joseph Myers <joseph@codesourcery.com> */\n+/* { dg-do compile } */\n+/* { dg-options \"-std=gnu99\" } */\n+\n+void\n+f (void)\n+{\n+  asm volatile (\"\");\n+  asm const (\"\"); /* { dg-warning \"warning: const qualifier ignored on asm\" } */\n+  asm restrict (\"\"); /* { dg-warning \"warning: restrict qualifier ignored on asm\" } */\n+}"}, {"sha": "e94ce38111d5e35f94c4d54493d4d86b08b1f1db", "filename": "gcc/testsuite/gcc.dg/declspec-15.c", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/68e6421d0be74ff2f6a604b9d5739d2d42b7732a/gcc%2Ftestsuite%2Fgcc.dg%2Fdeclspec-15.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/68e6421d0be74ff2f6a604b9d5739d2d42b7732a/gcc%2Ftestsuite%2Fgcc.dg%2Fdeclspec-15.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fdeclspec-15.c?ref=68e6421d0be74ff2f6a604b9d5739d2d42b7732a", "patch": "@@ -0,0 +1,12 @@\n+/* Test diagnostic for empty declarations in old-style parameter\n+   declarations.  Test with no special options.  */\n+/* Origin: Joseph Myers <joseph@codesourcery.com> */\n+/* { dg-do compile } */\n+/* { dg-options \"-std=gnu89\" } */\n+\n+void\n+f (a, b)\n+     int; /* { dg-warning \"warning: empty declaration\" } */\n+     register; /* { dg-warning \"warning: empty declaration\" } */\n+{\n+}"}, {"sha": "a81f0c690409f0a96b718524e6f8508ffc17526d", "filename": "gcc/testsuite/gcc.dg/declspec-16.c", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/68e6421d0be74ff2f6a604b9d5739d2d42b7732a/gcc%2Ftestsuite%2Fgcc.dg%2Fdeclspec-16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/68e6421d0be74ff2f6a604b9d5739d2d42b7732a/gcc%2Ftestsuite%2Fgcc.dg%2Fdeclspec-16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fdeclspec-16.c?ref=68e6421d0be74ff2f6a604b9d5739d2d42b7732a", "patch": "@@ -0,0 +1,12 @@\n+/* Test diagnostic for empty declarations in old-style parameter\n+   declarations.  Test with -pedantic.  */\n+/* Origin: Joseph Myers <joseph@codesourcery.com> */\n+/* { dg-do compile } */\n+/* { dg-options \"-std=gnu89 -pedantic\" } */\n+\n+void\n+f (a, b)\n+     int; /* { dg-warning \"warning: empty declaration\" } */\n+     register; /* { dg-warning \"warning: empty declaration\" } */\n+{\n+}"}, {"sha": "5be737e00d36431f3cbe1c52b2cdda3618b26690", "filename": "gcc/testsuite/gcc.dg/declspec-17.c", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/68e6421d0be74ff2f6a604b9d5739d2d42b7732a/gcc%2Ftestsuite%2Fgcc.dg%2Fdeclspec-17.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/68e6421d0be74ff2f6a604b9d5739d2d42b7732a/gcc%2Ftestsuite%2Fgcc.dg%2Fdeclspec-17.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fdeclspec-17.c?ref=68e6421d0be74ff2f6a604b9d5739d2d42b7732a", "patch": "@@ -0,0 +1,12 @@\n+/* Test diagnostic for empty declarations in old-style parameter\n+   declarations.  Test with -pedantic-errors.  */\n+/* Origin: Joseph Myers <joseph@codesourcery.com> */\n+/* { dg-do compile } */\n+/* { dg-options \"-std=gnu89 -pedantic-errors\" } */\n+\n+void\n+f (a, b)\n+     int; /* { dg-error \"error: empty declaration\" } */\n+     register; /* { dg-error \"error: empty declaration\" } */\n+{\n+}"}, {"sha": "239001c030a0912f1547506c1e1d8325470379a2", "filename": "gcc/testsuite/gcc.dg/empty-source-1.c", "status": "added", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/68e6421d0be74ff2f6a604b9d5739d2d42b7732a/gcc%2Ftestsuite%2Fgcc.dg%2Fempty-source-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/68e6421d0be74ff2f6a604b9d5739d2d42b7732a/gcc%2Ftestsuite%2Fgcc.dg%2Fempty-source-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fempty-source-1.c?ref=68e6421d0be74ff2f6a604b9d5739d2d42b7732a", "patch": "@@ -0,0 +1,5 @@\n+/* Test diagnostic for an empty source file.  Test with no special\n+   options.  */\n+/* Origin: Joseph Myers <joseph@codesourcery.com> */\n+/* { dg-do compile } */\n+/* { dg-options \"\" } */"}, {"sha": "6f54f03d82f66fb2a0176fbdf54b256a268245ca", "filename": "gcc/testsuite/gcc.dg/empty-source-2.c", "status": "added", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/68e6421d0be74ff2f6a604b9d5739d2d42b7732a/gcc%2Ftestsuite%2Fgcc.dg%2Fempty-source-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/68e6421d0be74ff2f6a604b9d5739d2d42b7732a/gcc%2Ftestsuite%2Fgcc.dg%2Fempty-source-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fempty-source-2.c?ref=68e6421d0be74ff2f6a604b9d5739d2d42b7732a", "patch": "@@ -0,0 +1,6 @@\n+/* Test diagnostic for an empty source file.  Test with -pedantic.  */\n+/* Origin: Joseph Myers <joseph@codesourcery.com> */\n+/* { dg-do compile } */\n+/* { dg-options \"-pedantic\" } */\n+\n+/* { dg-warning \"warning: ISO C forbids an empty source file\" \"empty\" { target *-*-* } 1 } */"}, {"sha": "c58924267ff5e605a1bb23f65ee51a6583d6726b", "filename": "gcc/testsuite/gcc.dg/empty-source-3.c", "status": "added", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/68e6421d0be74ff2f6a604b9d5739d2d42b7732a/gcc%2Ftestsuite%2Fgcc.dg%2Fempty-source-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/68e6421d0be74ff2f6a604b9d5739d2d42b7732a/gcc%2Ftestsuite%2Fgcc.dg%2Fempty-source-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fempty-source-3.c?ref=68e6421d0be74ff2f6a604b9d5739d2d42b7732a", "patch": "@@ -0,0 +1,7 @@\n+/* Test diagnostic for an empty source file.  Test with\n+   -pedantic-errors.  */\n+/* Origin: Joseph Myers <joseph@codesourcery.com> */\n+/* { dg-do compile } */\n+/* { dg-options \"-pedantic-errors\" } */\n+\n+/* { dg-error \"error: ISO C forbids an empty source file\" \"empty\" { target *-*-* } 1 } */"}, {"sha": "74857cad12b885c03674cecf9685d3d343d714a0", "filename": "gcc/testsuite/gcc.dg/extra-semi-1.c", "status": "added", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/68e6421d0be74ff2f6a604b9d5739d2d42b7732a/gcc%2Ftestsuite%2Fgcc.dg%2Fextra-semi-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/68e6421d0be74ff2f6a604b9d5739d2d42b7732a/gcc%2Ftestsuite%2Fgcc.dg%2Fextra-semi-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fextra-semi-1.c?ref=68e6421d0be74ff2f6a604b9d5739d2d42b7732a", "patch": "@@ -0,0 +1,7 @@\n+/* Test diagnostic for extra semicolon outside a function.  Test with\n+   no special options.  */\n+/* Origin: Joseph Myers <joseph@codesourcery.com> */\n+/* { dg-do compile } */\n+/* { dg-options \"\" } */\n+\n+;"}, {"sha": "c4e1cc3b44ed22f8729b710d4b72657349b88e5c", "filename": "gcc/testsuite/gcc.dg/extra-semi-2.c", "status": "added", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/68e6421d0be74ff2f6a604b9d5739d2d42b7732a/gcc%2Ftestsuite%2Fgcc.dg%2Fextra-semi-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/68e6421d0be74ff2f6a604b9d5739d2d42b7732a/gcc%2Ftestsuite%2Fgcc.dg%2Fextra-semi-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fextra-semi-2.c?ref=68e6421d0be74ff2f6a604b9d5739d2d42b7732a", "patch": "@@ -0,0 +1,7 @@\n+/* Test diagnostic for extra semicolon outside a function.  Test with\n+   -pedantic.  */\n+/* Origin: Joseph Myers <joseph@codesourcery.com> */\n+/* { dg-do compile } */\n+/* { dg-options \"-pedantic\" } */\n+\n+; /* { dg-warning \"warning: ISO C does not allow extra ';' outside of a function\" } */"}, {"sha": "6b907672f2f945d9ed9da473dda12d1f0bb87c8a", "filename": "gcc/testsuite/gcc.dg/extra-semi-3.c", "status": "added", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/68e6421d0be74ff2f6a604b9d5739d2d42b7732a/gcc%2Ftestsuite%2Fgcc.dg%2Fextra-semi-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/68e6421d0be74ff2f6a604b9d5739d2d42b7732a/gcc%2Ftestsuite%2Fgcc.dg%2Fextra-semi-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fextra-semi-3.c?ref=68e6421d0be74ff2f6a604b9d5739d2d42b7732a", "patch": "@@ -0,0 +1,7 @@\n+/* Test diagnostic for extra semicolon outside a function.  Test with\n+   -pedantic-errors.  */\n+/* Origin: Joseph Myers <joseph@codesourcery.com> */\n+/* { dg-do compile } */\n+/* { dg-options \"-pedantic-errors\" } */\n+\n+; /* { dg-error \"error: ISO C does not allow extra ';' outside of a function\" } */"}, {"sha": "0f0bb2142286db3f42c9a94f84c8bc00a613047d", "filename": "gcc/testsuite/gcc.dg/gnu-cond-expr-1.c", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/68e6421d0be74ff2f6a604b9d5739d2d42b7732a/gcc%2Ftestsuite%2Fgcc.dg%2Fgnu-cond-expr-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/68e6421d0be74ff2f6a604b9d5739d2d42b7732a/gcc%2Ftestsuite%2Fgcc.dg%2Fgnu-cond-expr-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fgnu-cond-expr-1.c?ref=68e6421d0be74ff2f6a604b9d5739d2d42b7732a", "patch": "@@ -0,0 +1,13 @@\n+/* Test diagnostic for GNU extension: omitting middle term of\n+   conditional expression.  Test with no special options.  */\n+/* Origin: Joseph Myers <joseph@codesourcery.com> */\n+/* { dg-do compile } */\n+/* { dg-options \"-std=gnu99\" } */\n+\n+int a, b, c;\n+\n+void\n+f (void)\n+{\n+  c = (++a ? : b);\n+}"}, {"sha": "53234dc26ca27ad427ceb0ed1c35ec78f4a410d8", "filename": "gcc/testsuite/gcc.dg/gnu-cond-expr-2.c", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/68e6421d0be74ff2f6a604b9d5739d2d42b7732a/gcc%2Ftestsuite%2Fgcc.dg%2Fgnu-cond-expr-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/68e6421d0be74ff2f6a604b9d5739d2d42b7732a/gcc%2Ftestsuite%2Fgcc.dg%2Fgnu-cond-expr-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fgnu-cond-expr-2.c?ref=68e6421d0be74ff2f6a604b9d5739d2d42b7732a", "patch": "@@ -0,0 +1,13 @@\n+/* Test diagnostic for GNU extension: omitting middle term of\n+   conditional expression.  Test with -pedantic.  */\n+/* Origin: Joseph Myers <joseph@codesourcery.com> */\n+/* { dg-do compile } */\n+/* { dg-options \"-std=gnu99 -pedantic\" } */\n+\n+int a, b, c;\n+\n+void\n+f (void)\n+{\n+  c = (++a ? : b); /* { dg-warning \"warning: ISO C forbids omitting the middle term of a \\\\?: expression\" } */\n+}"}, {"sha": "e15ed0259c7b1ab53f0ceb2f0d95faa4b6914560", "filename": "gcc/testsuite/gcc.dg/gnu-cond-expr-3.c", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/68e6421d0be74ff2f6a604b9d5739d2d42b7732a/gcc%2Ftestsuite%2Fgcc.dg%2Fgnu-cond-expr-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/68e6421d0be74ff2f6a604b9d5739d2d42b7732a/gcc%2Ftestsuite%2Fgcc.dg%2Fgnu-cond-expr-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fgnu-cond-expr-3.c?ref=68e6421d0be74ff2f6a604b9d5739d2d42b7732a", "patch": "@@ -0,0 +1,13 @@\n+/* Test diagnostic for GNU extension: omitting middle term of\n+   conditional expression.  Test with -pedantic-errors.  */\n+/* Origin: Joseph Myers <joseph@codesourcery.com> */\n+/* { dg-do compile } */\n+/* { dg-options \"-std=gnu99 -pedantic-errors\" } */\n+\n+int a, b, c;\n+\n+void\n+f (void)\n+{\n+  c = (++a ? : b); /* { dg-error \"error: ISO C forbids omitting the middle term of a \\\\?: expression\" } */\n+}"}, {"sha": "39a5174ba846ce001627f3d3accbd32f41ba4e8e", "filename": "gcc/testsuite/gcc.dg/init-empty-1.c", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/68e6421d0be74ff2f6a604b9d5739d2d42b7732a/gcc%2Ftestsuite%2Fgcc.dg%2Finit-empty-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/68e6421d0be74ff2f6a604b9d5739d2d42b7732a/gcc%2Ftestsuite%2Fgcc.dg%2Finit-empty-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Finit-empty-1.c?ref=68e6421d0be74ff2f6a604b9d5739d2d42b7732a", "patch": "@@ -0,0 +1,9 @@\n+/* Test diagnostic for empty initializer braces.  Test with no special\n+   options.  */\n+/* Origin: Joseph Myers <joseph@codesourcery.com> */\n+/* { dg-do compile } */\n+/* { dg-options \"-std=gnu99\" } */\n+\n+struct s { int a; } x = { };\n+\n+struct s *p = &(struct s){ };"}, {"sha": "a6e1a30206a918516a75cd5da3ea5865f53f08db", "filename": "gcc/testsuite/gcc.dg/init-empty-2.c", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/68e6421d0be74ff2f6a604b9d5739d2d42b7732a/gcc%2Ftestsuite%2Fgcc.dg%2Finit-empty-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/68e6421d0be74ff2f6a604b9d5739d2d42b7732a/gcc%2Ftestsuite%2Fgcc.dg%2Finit-empty-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Finit-empty-2.c?ref=68e6421d0be74ff2f6a604b9d5739d2d42b7732a", "patch": "@@ -0,0 +1,9 @@\n+/* Test diagnostic for empty initializer braces.  Test with\n+   -pedantic.  */\n+/* Origin: Joseph Myers <joseph@codesourcery.com> */\n+/* { dg-do compile } */\n+/* { dg-options \"-std=gnu99 -pedantic\" } */\n+\n+struct s { int a; } x = { }; /* { dg-warning \"warning: ISO C forbids empty initializer braces\" } */\n+\n+struct s *p = &(struct s){ }; /* { dg-warning \"warning: ISO C forbids empty initializer braces\" } */"}, {"sha": "792d1712f3f2cc4294a3fa78319fb8f2af36a89b", "filename": "gcc/testsuite/gcc.dg/init-empty-3.c", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/68e6421d0be74ff2f6a604b9d5739d2d42b7732a/gcc%2Ftestsuite%2Fgcc.dg%2Finit-empty-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/68e6421d0be74ff2f6a604b9d5739d2d42b7732a/gcc%2Ftestsuite%2Fgcc.dg%2Finit-empty-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Finit-empty-3.c?ref=68e6421d0be74ff2f6a604b9d5739d2d42b7732a", "patch": "@@ -0,0 +1,9 @@\n+/* Test diagnostic for empty initializer braces.  Test with\n+   -pedantic-errors.  */\n+/* Origin: Joseph Myers <joseph@codesourcery.com> */\n+/* { dg-do compile } */\n+/* { dg-options \"-std=gnu99 -pedantic-errors\" } */\n+\n+struct s { int a; } x = { }; /* { dg-error \"error: ISO C forbids empty initializer braces\" } */\n+\n+struct s *p = &(struct s){ }; /* { dg-error \"error: ISO C forbids empty initializer braces\" } */"}, {"sha": "5f879c3f0aed277b4083471802326efa5c3d3f14", "filename": "gcc/testsuite/gcc.dg/noncompile/old-style-parm-1.c", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/68e6421d0be74ff2f6a604b9d5739d2d42b7732a/gcc%2Ftestsuite%2Fgcc.dg%2Fnoncompile%2Fold-style-parm-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/68e6421d0be74ff2f6a604b9d5739d2d42b7732a/gcc%2Ftestsuite%2Fgcc.dg%2Fnoncompile%2Fold-style-parm-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fnoncompile%2Fold-style-parm-1.c?ref=68e6421d0be74ff2f6a604b9d5739d2d42b7732a", "patch": "@@ -0,0 +1,11 @@\n+/* Test that stray semicolon in old-style parameters is not\n+   accepted.  */\n+/* Origin: Joseph Myers <joseph@codesourcery.com> */\n+/* { dg-do compile } */\n+/* { dg-options \"\" } */\n+\n+void\n+f(a)\n+     int a;; /* { dg-error \"parse error|syntax error|expected declaration specifiers\" } */\n+{\n+}"}, {"sha": "1b156b770f77280e8ff8d88dd30ffa1cb25628b8", "filename": "gcc/testsuite/gcc.dg/noncompile/old-style-parm-2.c", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/68e6421d0be74ff2f6a604b9d5739d2d42b7732a/gcc%2Ftestsuite%2Fgcc.dg%2Fnoncompile%2Fold-style-parm-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/68e6421d0be74ff2f6a604b9d5739d2d42b7732a/gcc%2Ftestsuite%2Fgcc.dg%2Fnoncompile%2Fold-style-parm-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fnoncompile%2Fold-style-parm-2.c?ref=68e6421d0be74ff2f6a604b9d5739d2d42b7732a", "patch": "@@ -0,0 +1,11 @@\n+/* Test that parameter without declaration specifiers in old-style\n+   parameters is not accepted.  */\n+/* Origin: Joseph Myers <joseph@codesourcery.com> */\n+/* { dg-do compile } */\n+/* { dg-options \"\" } */\n+\n+void\n+f(a)\n+     a; /* { dg-error \"parse error|syntax error|no type or storage class|expected declaration specifiers\" } */\n+{\n+}"}, {"sha": "fdd62528d46bc9415ce5ec9caa9e5b06b1b3e773", "filename": "gcc/testsuite/gcc.dg/stmt-expr-1.c", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/68e6421d0be74ff2f6a604b9d5739d2d42b7732a/gcc%2Ftestsuite%2Fgcc.dg%2Fstmt-expr-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/68e6421d0be74ff2f6a604b9d5739d2d42b7732a/gcc%2Ftestsuite%2Fgcc.dg%2Fstmt-expr-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fstmt-expr-1.c?ref=68e6421d0be74ff2f6a604b9d5739d2d42b7732a", "patch": "@@ -0,0 +1,11 @@\n+/* Test diagnostic for GNU extension: statement expressions.  Test\n+   with no special options.  */\n+/* Origin: Joseph Myers <joseph@codesourcery.com> */\n+/* { dg-do compile } */\n+/* { dg-options \"-std=gnu99\" } */\n+\n+int\n+f (void)\n+{\n+  return ({ 1; });\n+}"}, {"sha": "37147fd73309fdcc2f69b93dde00f95902ccf3f6", "filename": "gcc/testsuite/gcc.dg/stmt-expr-2.c", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/68e6421d0be74ff2f6a604b9d5739d2d42b7732a/gcc%2Ftestsuite%2Fgcc.dg%2Fstmt-expr-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/68e6421d0be74ff2f6a604b9d5739d2d42b7732a/gcc%2Ftestsuite%2Fgcc.dg%2Fstmt-expr-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fstmt-expr-2.c?ref=68e6421d0be74ff2f6a604b9d5739d2d42b7732a", "patch": "@@ -0,0 +1,11 @@\n+/* Test diagnostic for GNU extension: statement expressions.  Test\n+   with -pedantic.  */\n+/* Origin: Joseph Myers <joseph@codesourcery.com> */\n+/* { dg-do compile } */\n+/* { dg-options \"-std=gnu99 -pedantic\" } */\n+\n+int\n+f (void)\n+{\n+  return ({ 1; }); /* { dg-warning \"warning: ISO C forbids braced-groups within expressions\" } */\n+}"}, {"sha": "904201e7004281c262c9a5e0d7c06d5f1625ba94", "filename": "gcc/testsuite/gcc.dg/stmt-expr-3.c", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/68e6421d0be74ff2f6a604b9d5739d2d42b7732a/gcc%2Ftestsuite%2Fgcc.dg%2Fstmt-expr-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/68e6421d0be74ff2f6a604b9d5739d2d42b7732a/gcc%2Ftestsuite%2Fgcc.dg%2Fstmt-expr-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fstmt-expr-3.c?ref=68e6421d0be74ff2f6a604b9d5739d2d42b7732a", "patch": "@@ -0,0 +1,11 @@\n+/* Test diagnostic for GNU extension: statement expressions.  Test\n+   with -pedantic-errors.  */\n+/* Origin: Joseph Myers <joseph@codesourcery.com> */\n+/* { dg-do compile } */\n+/* { dg-options \"-std=gnu99 -pedantic-errors\" } */\n+\n+int\n+f (void)\n+{\n+  return ({ 1; }); /* { dg-error \"error: ISO C forbids braced-groups within expressions\" } */\n+}"}]}