{"sha": "68a1a5da2b17865bb90a28ba13a117092b82b608", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjhhMWE1ZGEyYjE3ODY1YmI5MGEyOGJhMTNhMTE3MDkyYjgyYjYwOA==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@gcc.gnu.org", "date": "2004-02-28T07:33:10Z"}, "committer": {"name": "Eric Botcazou", "email": "ebotcazou@gcc.gnu.org", "date": "2004-02-28T07:33:10Z"}, "message": "fold-const.c (fold): Strip NOPs that change the signedness for RSHIFT too.\n\n\t* fold-const.c (fold): Strip NOPs that change the signedness\n\tfor RSHIFT too.  Expand comment.\n\nFrom-SVN: r78603", "tree": {"sha": "b0b51a7b4b105517f87b91d4760b368e2419d4b7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b0b51a7b4b105517f87b91d4760b368e2419d4b7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/68a1a5da2b17865bb90a28ba13a117092b82b608", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/68a1a5da2b17865bb90a28ba13a117092b82b608", "html_url": "https://github.com/Rust-GCC/gccrs/commit/68a1a5da2b17865bb90a28ba13a117092b82b608", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/68a1a5da2b17865bb90a28ba13a117092b82b608/comments", "author": null, "committer": null, "parents": [{"sha": "a10016d3b08ca2318ff1ce9e35ac5d9e0124d965", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a10016d3b08ca2318ff1ce9e35ac5d9e0124d965", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a10016d3b08ca2318ff1ce9e35ac5d9e0124d965"}], "stats": {"total": 27, "additions": 19, "deletions": 8}, "files": [{"sha": "8722e946c578d8b6ebb30083c35316be0ffe2382", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/68a1a5da2b17865bb90a28ba13a117092b82b608/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/68a1a5da2b17865bb90a28ba13a117092b82b608/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=68a1a5da2b17865bb90a28ba13a117092b82b608", "patch": "@@ -1,8 +1,13 @@\n+2004-02-28  Eric Botcazou  <ebotcazou@act-europe.fr>\n+\n+\t* fold-const.c (fold): Strip NOPs that change the signedness\n+\tfor RSHIFT too.  Expand comment.\n+\n 2004-02-27  Ian Lance Taylor  <ian@wasabisystems.com>\n \n \tPR optimization/7871\n \t* flow.c (mark_set_1): Don't add LOG_LINKS for global registers\n-\tfrom or to call insns.\t\n+\tfrom or to call insns.\n \n 2004-02-27  Eric Botcazou  <ebotcazou@libertysurf.fr>\n "}, {"sha": "04452de6c7f65c50da0511719b837a327a710553", "filename": "gcc/fold-const.c", "status": "modified", "additions": 13, "deletions": 7, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/68a1a5da2b17865bb90a28ba13a117092b82b608/gcc%2Ffold-const.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/68a1a5da2b17865bb90a28ba13a117092b82b608/gcc%2Ffold-const.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffold-const.c?ref=68a1a5da2b17865bb90a28ba13a117092b82b608", "patch": "@@ -5423,14 +5423,20 @@ fold (tree expr)\n \t  if (op == 0)\n \t    continue;\t\t/* Valid for CALL_EXPR, at least.  */\n \n-\t  if (kind == '<' || code == RSHIFT_EXPR)\n-\t    {\n-\t      /* Signedness matters here.  Perhaps we can refine this\n-\t\t later.  */\n-\t      STRIP_SIGN_NOPS (op);\n-\t    }\n+\t  /* Strip any conversions that don't change the mode.  This is\n+\t     safe for every expression, except for a comparison expression\n+\t     because its signedness is derived from its operands.  So, in\n+\t     the latter case, only strip conversions that don't change the\n+\t     signedness.\n+\n+\t     Note that this is done as an internal manipulation within the\n+\t     constant folder, in order to find the simplest representation\n+\t     of the arguments so that their form can be studied.  In any\n+\t     cases, the appropriate type conversions should be put back in\n+\t     the tree that will get out of the constant folder.  */\n+\t  if (kind == '<')\n+\t    STRIP_SIGN_NOPS (op);\n \t  else\n-\t    /* Strip any conversions that don't change the mode.  */\n \t    STRIP_NOPS (op);\n \n \t  if (TREE_CODE (op) == COMPLEX_CST)"}]}