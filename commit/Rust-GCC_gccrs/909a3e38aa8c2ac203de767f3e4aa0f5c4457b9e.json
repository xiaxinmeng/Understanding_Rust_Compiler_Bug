{"sha": "909a3e38aa8c2ac203de767f3e4aa0f5c4457b9e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTA5YTNlMzhhYThjMmFjMjAzZGU3NjdmM2U0YWEwZjVjNDQ1N2I5ZQ==", "commit": {"author": {"name": "Paul Thomas", "email": "pault@gcc.gnu.org", "date": "2007-04-07T20:20:49Z"}, "committer": {"name": "Paul Thomas", "email": "pault@gcc.gnu.org", "date": "2007-04-07T20:20:49Z"}, "message": "re PR fortran/31222 (Rejected: implicitly-typed dummys used in initialization expressions)\n\n2007-04-07  Paul Thomas  <pault@gcc.gnu.org>\n\n\tPR fortran/31222\n\t* check.c (numeric_check): If an expresson has not got a type,\n\tsee if it is a symbol for which a default type applies.\n\n2007-04-07  Paul Thomas  <pault@gcc.gnu.org>\n\n\tPR fortran/31222\n\t* gfortran.dg/default_numeric_type_1.f90: New test.\n\nFrom-SVN: r123643", "tree": {"sha": "390ae9fd0c3cb23aef9e2c93b81cc77d712c715e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/390ae9fd0c3cb23aef9e2c93b81cc77d712c715e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/909a3e38aa8c2ac203de767f3e4aa0f5c4457b9e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/909a3e38aa8c2ac203de767f3e4aa0f5c4457b9e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/909a3e38aa8c2ac203de767f3e4aa0f5c4457b9e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/909a3e38aa8c2ac203de767f3e4aa0f5c4457b9e/comments", "author": null, "committer": null, "parents": [{"sha": "c60a84b86f0fbfe38aa93cdeffe563239095916f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c60a84b86f0fbfe38aa93cdeffe563239095916f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c60a84b86f0fbfe38aa93cdeffe563239095916f"}], "stats": {"total": 41, "additions": 41, "deletions": 0}, "files": [{"sha": "a9a8a07f4915ae02022a04680232444de675ea1d", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/909a3e38aa8c2ac203de767f3e4aa0f5c4457b9e/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/909a3e38aa8c2ac203de767f3e4aa0f5c4457b9e/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=909a3e38aa8c2ac203de767f3e4aa0f5c4457b9e", "patch": "@@ -1,3 +1,9 @@\n+2007-04-07  Paul Thomas  <pault@gcc.gnu.org>\n+\n+\tPR fortran/31222\n+\t* check.c (numeric_check): If an expresson has not got a type,\n+\tsee if it is a symbol for which a default type applies.\n+\n 2007-04-07  Paul Thomas  <pault@gcc.gnu.org>\n \n \tPR fortran/31214"}, {"sha": "9806ebdf79aacecd7d410e20fe69520bfd2d1aca", "filename": "gcc/fortran/check.c", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/909a3e38aa8c2ac203de767f3e4aa0f5c4457b9e/gcc%2Ffortran%2Fcheck.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/909a3e38aa8c2ac203de767f3e4aa0f5c4457b9e/gcc%2Ffortran%2Fcheck.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fcheck.c?ref=909a3e38aa8c2ac203de767f3e4aa0f5c4457b9e", "patch": "@@ -58,6 +58,18 @@ numeric_check (gfc_expr *e, int n)\n   if (gfc_numeric_ts (&e->ts))\n     return SUCCESS;\n \n+  /* If the expression has not got a type, check if its namespace can\n+     offer a default type.  */\n+  if ((e->expr_type == EXPR_VARIABLE || e->expr_type == EXPR_VARIABLE)\n+\t&& e->symtree->n.sym->ts.type == BT_UNKNOWN\n+\t&& gfc_set_default_type (e->symtree->n.sym, 0,\n+\t\t\t\t e->symtree->n.sym->ns) == SUCCESS\n+\t&& gfc_numeric_ts (&e->symtree->n.sym->ts))\n+    {\n+      e->ts = e->symtree->n.sym->ts;\n+      return SUCCESS;\n+    }\n+\n   gfc_error (\"'%s' argument of '%s' intrinsic at %L must be a numeric type\",\n \t     gfc_current_intrinsic_arg[n], gfc_current_intrinsic, &e->where);\n "}, {"sha": "df1d06aab2364a12e92aeb1d6daf7ad4349eaf23", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/909a3e38aa8c2ac203de767f3e4aa0f5c4457b9e/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/909a3e38aa8c2ac203de767f3e4aa0f5c4457b9e/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=909a3e38aa8c2ac203de767f3e4aa0f5c4457b9e", "patch": "@@ -1,3 +1,8 @@\n+2007-04-07  Paul Thomas  <pault@gcc.gnu.org>\n+\n+\tPR fortran/31222\n+\t* gfortran.dg/default_numeric_type_1.f90: New test.\n+\n 2007-04-07  Paul Thomas  <pault@gcc.gnu.org>\n \n \tPR fortran/31424"}, {"sha": "e8f8d350736b63d43f6439c230b7587e75e0cdfd", "filename": "gcc/testsuite/gfortran.dg/default_numeric_type_1.f90", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/909a3e38aa8c2ac203de767f3e4aa0f5c4457b9e/gcc%2Ftestsuite%2Fgfortran.dg%2Fdefault_numeric_type_1.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/909a3e38aa8c2ac203de767f3e4aa0f5c4457b9e/gcc%2Ftestsuite%2Fgfortran.dg%2Fdefault_numeric_type_1.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fdefault_numeric_type_1.f90?ref=909a3e38aa8c2ac203de767f3e4aa0f5c4457b9e", "patch": "@@ -0,0 +1,18 @@\n+! { dg-do compile}\n+! { dg-options \"-fdump-tree-original\" }\n+! Tests the fix for PR 31222, in which the type of the arguments of abs\n+! and int below were not detected to be of default numeric type..\n+!\n+! Contributed by Tobias Burnus <burnus@gcc.gnu.org>\n+!\n+subroutine mysub1(a,b,mode,dis)\n+!  integer :: mode\n+!  real :: dis\n+  dimension a(abs(mode)),b(int(dis))\n+  print *, mod\n+  write (*,*) abs(mode), nint(dis)\n+end subroutine\n+\n+program testprog\n+  call mysub1((/1.,2./),(/1.,2.,3./),-2, 3.2)\n+end"}]}