{"sha": "ff1bedacc81800f47632971f6474e4e2f9cfb86f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZmYxYmVkYWNjODE4MDBmNDc2MzI5NzFmNjQ3NGU0ZTJmOWNmYjg2Zg==", "commit": {"author": {"name": "Yannick Moy", "email": "moy@adacore.com", "date": "2015-05-26T10:40:39Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2015-05-26T10:40:39Z"}, "message": "sem_aux.adb, [...] (Get_Low_Bound): Use Type_Low_Bound.\n\n2015-05-26  Yannick Moy  <moy@adacore.com>\n\n\t* sem_aux.adb, sem_aux.ads (Get_Low_Bound): Use Type_Low_Bound.\n\t(Package_Body, Package_Spec): New queries moved\n\there from GNATprove.\n\t(Package_Specification): Simplify query to remove use of loop.\n\t* sem_util.adb, sem_util.ads (Enclosing_Declaration,\n\tEnclosing_Package_Or_Subprogram, Is_Attribute_Update): New\n\tqueries moved here from GNATprove.\n\nFrom-SVN: r223681", "tree": {"sha": "9d0ab815b938ed6c388a8cde4df608b031e40d33", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9d0ab815b938ed6c388a8cde4df608b031e40d33"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ff1bedacc81800f47632971f6474e4e2f9cfb86f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ff1bedacc81800f47632971f6474e4e2f9cfb86f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ff1bedacc81800f47632971f6474e4e2f9cfb86f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ff1bedacc81800f47632971f6474e4e2f9cfb86f/comments", "author": {"login": "yannickmoy", "id": 859440, "node_id": "MDQ6VXNlcjg1OTQ0MA==", "avatar_url": "https://avatars.githubusercontent.com/u/859440?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yannickmoy", "html_url": "https://github.com/yannickmoy", "followers_url": "https://api.github.com/users/yannickmoy/followers", "following_url": "https://api.github.com/users/yannickmoy/following{/other_user}", "gists_url": "https://api.github.com/users/yannickmoy/gists{/gist_id}", "starred_url": "https://api.github.com/users/yannickmoy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yannickmoy/subscriptions", "organizations_url": "https://api.github.com/users/yannickmoy/orgs", "repos_url": "https://api.github.com/users/yannickmoy/repos", "events_url": "https://api.github.com/users/yannickmoy/events{/privacy}", "received_events_url": "https://api.github.com/users/yannickmoy/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "a7b3792787e6c527360c4c12a3bd01821ff30e0d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a7b3792787e6c527360c4c12a3bd01821ff30e0d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a7b3792787e6c527360c4c12a3bd01821ff30e0d"}], "stats": {"total": 221, "additions": 174, "deletions": 47}, "files": [{"sha": "ee194fcd79dc8e0b05de03cebfc95fde90460d8c", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ff1bedacc81800f47632971f6474e4e2f9cfb86f/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ff1bedacc81800f47632971f6474e4e2f9cfb86f/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=ff1bedacc81800f47632971f6474e4e2f9cfb86f", "patch": "@@ -1,3 +1,13 @@\n+2015-05-26  Yannick Moy  <moy@adacore.com>\n+\n+\t* sem_aux.adb, sem_aux.ads (Get_Low_Bound): Use Type_Low_Bound.\n+\t(Package_Body, Package_Spec): New queries moved\n+\there from GNATprove.\n+\t(Package_Specification): Simplify query to remove use of loop.\n+\t* sem_util.adb, sem_util.ads (Enclosing_Declaration,\n+\tEnclosing_Package_Or_Subprogram, Is_Attribute_Update): New\n+\tqueries moved here from GNATprove.\n+\n 2015-05-26  Bob Duff  <duff@adacore.com>\n \n \t* einfo.adb, einfo.ads, sprint.adb, lib-xref.ads: Minor cleanup: Remove"}, {"sha": "fc83eb78ba96259059271d8a6ce462f8b091d8fb", "filename": "gcc/ada/sem_aux.adb", "status": "modified", "additions": 61, "deletions": 18, "changes": 79, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ff1bedacc81800f47632971f6474e4e2f9cfb86f/gcc%2Fada%2Fsem_aux.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ff1bedacc81800f47632971f6474e4e2f9cfb86f/gcc%2Fada%2Fsem_aux.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_aux.adb?ref=ff1bedacc81800f47632971f6474e4e2f9cfb86f", "patch": "@@ -481,8 +481,7 @@ package body Sem_Aux is\n       if Ekind (E) = E_String_Literal_Subtype then\n          return String_Literal_Low_Bound (E);\n       else\n-         --  Why is this not Type_Low_Bound (E)???\n-         return Low_Bound (Scalar_Range (E));\n+         return Type_Low_Bound (E);\n       end if;\n    end Get_Low_Bound;\n \n@@ -964,9 +963,9 @@ package body Sem_Aux is\n       end if;\n    end Is_By_Reference_Type;\n \n-   ---------------------------\n+   -------------------------\n    -- Is_Definite_Subtype --\n-   ---------------------------\n+   -------------------------\n \n    function Is_Definite_Subtype (T : Entity_Id) return Boolean is\n       pragma Assert (Is_Type (T));\n@@ -1440,22 +1439,60 @@ package body Sem_Aux is\n                   and then Has_Discriminants (Typ));\n    end Object_Type_Has_Constrained_Partial_View;\n \n+   ------------------\n+   -- Package_Body --\n+   ------------------\n+\n+   function Package_Body (E : Entity_Id) return Node_Id is\n+      N : Node_Id;\n+\n+   begin\n+      if Ekind (E) = E_Package_Body then\n+         N := Parent (E);\n+\n+         if Nkind (N) = N_Defining_Program_Unit_Name then\n+            N := Parent (N);\n+         end if;\n+\n+      else\n+         N := Package_Spec (E);\n+\n+         if Present (Corresponding_Body (N)) then\n+            N := Parent (Corresponding_Body (N));\n+\n+            if Nkind (N) = N_Defining_Program_Unit_Name then\n+               N := Parent (N);\n+            end if;\n+         else\n+            N := Empty;\n+         end if;\n+      end if;\n+\n+      return N;\n+   end Package_Body;\n+\n+   ------------------\n+   -- Package_Spec --\n+   ------------------\n+\n+   function Package_Spec (E : Entity_Id) return Node_Id is\n+   begin\n+      return Parent (Package_Specification (E));\n+   end Package_Spec;\n+\n    ---------------------------\n    -- Package_Specification --\n    ---------------------------\n \n-   function Package_Specification (Pack_Id : Entity_Id) return Node_Id is\n+   function Package_Specification (E : Entity_Id) return Node_Id is\n       N : Node_Id;\n \n    begin\n-      N := Parent (Pack_Id);\n-      while Nkind (N) /= N_Package_Specification loop\n-         N := Parent (N);\n+      N := Parent (E);\n \n-         if No (N) then\n-            raise Program_Error;\n-         end if;\n-      end loop;\n+      if Nkind (N) = N_Defining_Program_Unit_Name then\n+         N := Parent (N);\n+      end if;\n \n       return N;\n    end Package_Specification;\n@@ -1489,13 +1526,19 @@ package body Sem_Aux is\n \n       --  If this declaration is not a subprogram body, then it must be a\n       --  subprogram declaration, from which we can retrieve the entity for\n-      --  the corresponding subprogram body if any.\n+      --  the corresponding subprogram body if any, or an abstract subprogram\n+      --  declaration, for which we return Empty.\n \n-      if Nkind (N) = N_Subprogram_Body then\n-         return E;\n-      else\n-         return Corresponding_Body (N);\n-      end if;\n+      case Nkind (N) is\n+         when N_Subprogram_Body =>\n+            return E;\n+\n+         when N_Subprogram_Declaration =>\n+            return Corresponding_Body (N);\n+\n+         when others =>\n+            return Empty;\n+      end case;\n    end Subprogram_Body_Entity;\n \n    ---------------------"}, {"sha": "a3e5e656682c957be5c2b10f18dc37b898f06641", "filename": "gcc/ada/sem_aux.ads", "status": "modified", "additions": 11, "deletions": 4, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ff1bedacc81800f47632971f6474e4e2f9cfb86f/gcc%2Fada%2Fsem_aux.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ff1bedacc81800f47632971f6474e4e2f9cfb86f/gcc%2Fada%2Fsem_aux.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_aux.ads?ref=ff1bedacc81800f47632971f6474e4e2f9cfb86f", "patch": "@@ -390,10 +390,17 @@ package Sem_Aux is\n    --  derived type, and the subtype is not an unconstrained array subtype\n    --  (RM 3.3(23.10/3)).\n \n-   function Package_Specification (Pack_Id : Entity_Id) return Node_Id;\n-   --  Given an entity for a package or generic package, return corresponding\n-   --  package specification. Simplifies handling of child units, and better\n-   --  than the old idiom: Specification (Unit_Declaration_Node (Pack_Id)).\n+   function Package_Body (E : Entity_Id) return Node_Id;\n+   --  Given an entity for a package (spec or body), return the corresponding\n+   --  package body if any, or else Empty.\n+\n+   function Package_Spec (E : Entity_Id) return Node_Id;\n+   --  Given an entity for a package spec, return the corresponding package\n+   --  spec if any, or else Empty.\n+\n+   function Package_Specification (E : Entity_Id) return Node_Id;\n+   --  Given an entity for a package, return the corresponding package\n+   --  specification.\n \n    function Subprogram_Body (E : Entity_Id) return Node_Id;\n    --  Given an entity for a subprogram (spec or body), return the"}, {"sha": "4a74acf7f7e8efdfda1f917b1cee398786d77c40", "filename": "gcc/ada/sem_util.adb", "status": "modified", "additions": 75, "deletions": 18, "changes": 93, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ff1bedacc81800f47632971f6474e4e2f9cfb86f/gcc%2Fada%2Fsem_util.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ff1bedacc81800f47632971f6474e4e2f9cfb86f/gcc%2Fada%2Fsem_util.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_util.adb?ref=ff1bedacc81800f47632971f6474e4e2f9cfb86f", "patch": "@@ -5674,24 +5674,6 @@ package body Sem_Util is\n       end if;\n    end Enclosing_Comp_Unit_Node;\n \n-   -----------------------------\n-   -- Enclosing_Lib_Unit_Node --\n-   -----------------------------\n-\n-   function Enclosing_Lib_Unit_Node (N : Node_Id) return Node_Id is\n-      Encl_Unit : Node_Id;\n-\n-   begin\n-      Encl_Unit := Enclosing_Comp_Unit_Node (N);\n-      while Present (Encl_Unit)\n-        and then Nkind (Unit (Encl_Unit)) = N_Subunit\n-      loop\n-         Encl_Unit := Library_Unit (Encl_Unit);\n-      end loop;\n-\n-      return Encl_Unit;\n-   end Enclosing_Lib_Unit_Node;\n-\n    --------------------------\n    -- Enclosing_CPP_Parent --\n    --------------------------\n@@ -5714,6 +5696,25 @@ package body Sem_Util is\n       return Parent_Typ;\n    end Enclosing_CPP_Parent;\n \n+   ---------------------------\n+   -- Enclosing_Declaration --\n+   ---------------------------\n+\n+   function Enclosing_Declaration (N : Node_Id) return Node_Id is\n+      Decl : Node_Id := N;\n+\n+   begin\n+      while Present (Decl)\n+        and then not (Nkind (Decl) in N_Declaration\n+                        or else\n+                      Nkind (Decl) in N_Later_Decl_Item)\n+      loop\n+         Decl := Parent (Decl);\n+      end loop;\n+\n+      return Decl;\n+   end Enclosing_Declaration;\n+\n    ----------------------------\n    -- Enclosing_Generic_Body --\n    ----------------------------\n@@ -5815,6 +5816,24 @@ package body Sem_Util is\n       return Unit_Entity;\n    end Enclosing_Lib_Unit_Entity;\n \n+   -----------------------------\n+   -- Enclosing_Lib_Unit_Node --\n+   -----------------------------\n+\n+   function Enclosing_Lib_Unit_Node (N : Node_Id) return Node_Id is\n+      Encl_Unit : Node_Id;\n+\n+   begin\n+      Encl_Unit := Enclosing_Comp_Unit_Node (N);\n+      while Present (Encl_Unit)\n+        and then Nkind (Unit (Encl_Unit)) = N_Subunit\n+      loop\n+         Encl_Unit := Library_Unit (Encl_Unit);\n+      end loop;\n+\n+      return Encl_Unit;\n+   end Enclosing_Lib_Unit_Node;\n+\n    -----------------------\n    -- Enclosing_Package --\n    -----------------------\n@@ -5839,6 +5858,34 @@ package body Sem_Util is\n       end if;\n    end Enclosing_Package;\n \n+   -------------------------------------\n+   -- Enclosing_Package_Or_Subprogram --\n+   -------------------------------------\n+\n+   function Enclosing_Package_Or_Subprogram (E : Entity_Id) return Entity_Id is\n+      S : Entity_Id;\n+\n+   begin\n+      S := Scope (E);\n+      while Present (S) loop\n+         if Is_Package_Or_Generic_Package (S)\n+           or else Ekind (S) = E_Package_Body\n+         then\n+            return S;\n+\n+         elsif Is_Subprogram_Or_Generic_Subprogram (S)\n+           or else Ekind (S) = E_Subprogram_Body\n+         then\n+            return S;\n+\n+         else\n+            S := Scope (S);\n+         end if;\n+      end loop;\n+\n+      return Empty;\n+   end Enclosing_Package_Or_Subprogram;\n+\n    --------------------------\n    -- Enclosing_Subprogram --\n    --------------------------\n@@ -10484,6 +10531,16 @@ package body Sem_Util is\n         and then Attribute_Name (N) = Name_Result;\n    end Is_Attribute_Result;\n \n+   -------------------------\n+   -- Is_Attribute_Update --\n+   -------------------------\n+\n+   function Is_Attribute_Update (N : Node_Id) return Boolean is\n+   begin\n+      return Nkind (N) = N_Attribute_Reference\n+        and then Attribute_Name (N) = Name_Update;\n+   end Is_Attribute_Update;\n+\n    ------------------------------------\n    -- Is_Body_Or_Package_Declaration --\n    ------------------------------------"}, {"sha": "0cc27b130afc6b322712edc313b62999114b0419", "filename": "gcc/ada/sem_util.ads", "status": "modified", "additions": 17, "deletions": 7, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ff1bedacc81800f47632971f6474e4e2f9cfb86f/gcc%2Fada%2Fsem_util.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ff1bedacc81800f47632971f6474e4e2f9cfb86f/gcc%2Fada%2Fsem_util.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_util.ads?ref=ff1bedacc81800f47632971f6474e4e2f9cfb86f", "patch": "@@ -532,16 +532,12 @@ package Sem_Util is\n    --  Returns the enclosing N_Compilation_Unit node that is the root of a\n    --  subtree containing N.\n \n-   function Enclosing_Lib_Unit_Node (N : Node_Id) return Node_Id;\n-   --  Returns the N_Compilation_Unit node of the library unit that is directly\n-   --  or indirectly (through a subunit) at the root of a subtree containing\n-   --  N. This may be either the same as Enclosing_Comp_Unit_Node, or if\n-   --  Enclosing_Comp_Unit_Node returns a subunit, then the corresponding\n-   --  library unit. If no such item is found, returns Empty???\n-\n    function Enclosing_CPP_Parent (Typ : Entity_Id) return Entity_Id;\n    --  Returns the closest ancestor of Typ that is a CPP type.\n \n+   function Enclosing_Declaration (N : Node_Id) return Node_Id;\n+   --  Returns the declaration node enclosing N, if any, or Empty otherwise\n+\n    function Enclosing_Generic_Body\n      (N : Node_Id) return Node_Id;\n    --  Returns the Node_Id associated with the innermost enclosing generic\n@@ -559,10 +555,21 @@ package Sem_Util is\n    --  caller is responsible for ensuring this condition) or other specified\n    --  entity.\n \n+   function Enclosing_Lib_Unit_Node (N : Node_Id) return Node_Id;\n+   --  Returns the N_Compilation_Unit node of the library unit that is directly\n+   --  or indirectly (through a subunit) at the root of a subtree containing\n+   --  N. This may be either the same as Enclosing_Comp_Unit_Node, or if\n+   --  Enclosing_Comp_Unit_Node returns a subunit, then the corresponding\n+   --  library unit. If no such item is found, returns Empty.\n+\n    function Enclosing_Package (E : Entity_Id) return Entity_Id;\n    --  Utility function to return the Ada entity of the package enclosing\n    --  the entity E, if any. Returns Empty if no enclosing package.\n \n+   function Enclosing_Package_Or_Subprogram (E : Entity_Id) return Entity_Id;\n+   --  Returns the entity of the package or subprogram enclosing E, if any.\n+   --  Returns Empty if no enclosing package or subprogram.\n+\n    function Enclosing_Subprogram (E : Entity_Id) return Entity_Id;\n    --  Utility function to return the Ada entity of the subprogram enclosing\n    --  the entity E, if any. Returns Empty if no enclosing subprogram.\n@@ -1190,6 +1197,9 @@ package Sem_Util is\n    function Is_Attribute_Result (N : Node_Id) return Boolean;\n    --  Determine whether node N denotes attribute 'Result\n \n+   function Is_Attribute_Update (N : Node_Id) return Boolean;\n+   --  Determine whether node N denotes attribute 'Update\n+\n    function Is_Body_Or_Package_Declaration (N : Node_Id) return Boolean;\n    --  Determine whether node N denotes a body or a package declaration\n "}]}