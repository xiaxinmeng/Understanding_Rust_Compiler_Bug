{"sha": "423b04b06f9c845e907bd3ce0915c065b9e27cdb", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDIzYjA0YjA2ZjljODQ1ZTkwN2JkM2NlMDkxNWMwNjViOWUyN2NkYg==", "commit": {"author": {"name": "Doug Evans", "email": "dje@gnu.org", "date": "1994-03-27T19:42:26Z"}, "committer": {"name": "Doug Evans", "email": "dje@gnu.org", "date": "1994-03-27T19:42:26Z"}, "message": "Back out this patch:\n\n(attrib): Use `identifier' instead of `IDENTIFIER' since names that\nare (e.g.) typedef names are still OK.\n\nFrom-SVN: r6912", "tree": {"sha": "3070b61ebd82fdc0bf0c78ed2cfcebafa9710f13", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3070b61ebd82fdc0bf0c78ed2cfcebafa9710f13"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/423b04b06f9c845e907bd3ce0915c065b9e27cdb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/423b04b06f9c845e907bd3ce0915c065b9e27cdb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/423b04b06f9c845e907bd3ce0915c065b9e27cdb", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/423b04b06f9c845e907bd3ce0915c065b9e27cdb/comments", "author": null, "committer": null, "parents": [{"sha": "473c744153ff3ceb1d37674c43c796c6da4d8475", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/473c744153ff3ceb1d37674c43c796c6da4d8475", "html_url": "https://github.com/Rust-GCC/gccrs/commit/473c744153ff3ceb1d37674c43c796c6da4d8475"}], "stats": {"total": 10, "additions": 5, "deletions": 5}, "files": [{"sha": "36cfa2addb39fc209ce51ff125ae79d456fc657d", "filename": "gcc/c-parse.in", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/423b04b06f9c845e907bd3ce0915c065b9e27cdb/gcc%2Fc-parse.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/423b04b06f9c845e907bd3ce0915c065b9e27cdb/gcc%2Fc-parse.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-parse.in?ref=423b04b06f9c845e907bd3ce0915c065b9e27cdb", "patch": "@@ -1062,14 +1062,14 @@ attribute_list\n     ;\n \n attrib\n-    : identifier\n+    : IDENTIFIER\n \t{ if (strcmp (IDENTIFIER_POINTER ($1), \"packed\")\n \t      && strcmp (IDENTIFIER_POINTER ($1), \"noreturn\"))\n \t    warning (\"`%s' attribute directive ignored\",\n \t\t     IDENTIFIER_POINTER ($1));\n \t  $$ = $1; }\n     | TYPE_QUAL\n-    | identifier '(' identifier ')'\n+    | IDENTIFIER '(' IDENTIFIER ')'\n \t{ /* If not \"mode (m)\" or \"aligned\", then issue warning. \n \t     If \"aligned\", this will later produce an error in decl_attributes\n \t     since an identifier is not a valid constant, but we want to give\n@@ -1084,7 +1084,7 @@ attrib\n \t    }\n \t  else\n \t    $$ = tree_cons ($1, $3, NULL_TREE); }\n-    | identifier '(' expr_no_commas ')'\n+    | IDENTIFIER '(' expr_no_commas ')'\n \t{ /* if not \"aligned(n)\", then issue warning */\n \t  if (strcmp (IDENTIFIER_POINTER ($1), \"aligned\") != 0)\n \t    {\n@@ -1094,7 +1094,7 @@ attrib\n \t    }\n \t  else\n \t    $$ = tree_cons ($1, $3, NULL_TREE); }\n-    | identifier '(' identifier ',' expr_no_commas ',' expr_no_commas ')'\n+    | IDENTIFIER '(' IDENTIFIER ',' expr_no_commas ',' expr_no_commas ')'\n \t{ /* if not \"format(...)\", then issue warning */\n \t  if (strcmp (IDENTIFIER_POINTER ($1), \"format\") != 0)\n \t    {\n@@ -1108,7 +1108,7 @@ attrib\n \t\t\t\t       tree_cons ($5, $7, NULL_TREE),\n \t\t\t\t       NULL_TREE),\n \t\t\t    NULL_TREE); }\n-    | identifier '(' STRING ')'\n+    | IDENTIFIER '(' STRING ')'\n \t{ /* If not \"section (name)\", then issue warning.  */\n \t  if (strcmp (IDENTIFIER_POINTER ($1), \"section\") != 0)\n \t    {"}]}