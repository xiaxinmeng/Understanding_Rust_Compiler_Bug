{"sha": "37fbe8a344b5ab7e3e77499176d0581e4187929c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzdmYmU4YTM0NGI1YWI3ZTNlNzc0OTkxNzZkMDU4MWU0MTg3OTI5Yw==", "commit": {"author": {"name": "Bob Wilson", "email": "bob.wilson@acm.org", "date": "2008-09-05T16:37:14Z"}, "committer": {"name": "Bob Wilson", "email": "bwilson@gcc.gnu.org", "date": "2008-09-05T16:37:14Z"}, "message": "predicates.md (nonimmed_operand, [...]): Use constantpool_mem_p.\n\n\t* config/xtensa/predicates.md (nonimmed_operand, mem_operand): Use\n\tconstantpool_mem_p.\n\t(constantpool_operand): New.\n\t(move_operand): Disallow sub-word modes for the constant pool.\n\t* config/xtensa/xtensa.c (TARGET_SECONDARY_RELOAD): Define.\n\t(xtensa_secondary_reload_class): Replace with....\n\t(xtensa_secondary_reload): this function.  Remove SIGN_EXTEND check. \n\tSet icode for sub-word reloads from the constant pool.\n\t* config/xtensa/xtensa.h (SECONDARY_INPUT_RELOAD_CLASS): Delete.\n\t(SECONDARY_OUTPUT_RELOAD_CLASS): Delete.\n\t* config/xtensa/xtensa.md (reload<mode>_literal): New.\n\t* config/xtensa/xtensa-protos.h: Update prototypes.\n\nFrom-SVN: r140036", "tree": {"sha": "403c46b15695a596a39ecb272696a168db04181c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/403c46b15695a596a39ecb272696a168db04181c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/37fbe8a344b5ab7e3e77499176d0581e4187929c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/37fbe8a344b5ab7e3e77499176d0581e4187929c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/37fbe8a344b5ab7e3e77499176d0581e4187929c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/37fbe8a344b5ab7e3e77499176d0581e4187929c/comments", "author": null, "committer": null, "parents": [{"sha": "7314c7dd6297c6e7ebb823c1e3589c246f9349b5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7314c7dd6297c6e7ebb823c1e3589c246f9349b5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7314c7dd6297c6e7ebb823c1e3589c246f9349b5"}], "stats": {"total": 92, "additions": 69, "deletions": 23}, "files": [{"sha": "7bbb1cf6bf308cddd61db24d1ad3af4c92ee20d1", "filename": "gcc/ChangeLog", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/37fbe8a344b5ab7e3e77499176d0581e4187929c/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/37fbe8a344b5ab7e3e77499176d0581e4187929c/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=37fbe8a344b5ab7e3e77499176d0581e4187929c", "patch": "@@ -1,3 +1,18 @@\n+2008-09-05  Bob Wilson  <bob.wilson@acm.org>\n+\n+\t* config/xtensa/predicates.md (nonimmed_operand, mem_operand): Use\n+\tconstantpool_mem_p.\n+\t(constantpool_operand): New.\n+\t(move_operand): Disallow sub-word modes for the constant pool.\n+\t* config/xtensa/xtensa.c (TARGET_SECONDARY_RELOAD): Define.\n+\t(xtensa_secondary_reload_class): Replace with....\n+\t(xtensa_secondary_reload): this function.  Remove SIGN_EXTEND check. \n+\tSet icode for sub-word reloads from the constant pool.\n+\t* config/xtensa/xtensa.h (SECONDARY_INPUT_RELOAD_CLASS): Delete.\n+\t(SECONDARY_OUTPUT_RELOAD_CLASS): Delete.\n+\t* config/xtensa/xtensa.md (reload<mode>_literal): New.\n+\t* config/xtensa/xtensa-protos.h: Update prototypes.\n+\t\n 2008-09-05  Joseph Myers  <joseph@codesourcery.com>\n \n \t* config/mips/mips.h (enum reg_class): Add FRAME_REGS."}, {"sha": "c96f63730c444e4875f2fb8ea7218940948b55a4", "filename": "gcc/config/xtensa/predicates.md", "status": "modified", "additions": 10, "deletions": 4, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/37fbe8a344b5ab7e3e77499176d0581e4187929c/gcc%2Fconfig%2Fxtensa%2Fpredicates.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/37fbe8a344b5ab7e3e77499176d0581e4187929c/gcc%2Fconfig%2Fxtensa%2Fpredicates.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fxtensa%2Fpredicates.md?ref=37fbe8a344b5ab7e3e77499176d0581e4187929c", "patch": "@@ -1,5 +1,5 @@\n ;; Predicate definitions for Xtensa.\n-;; Copyright (C) 2005, 2006, 2007 Free Software Foundation, Inc.\n+;; Copyright (C) 2005, 2006, 2007, 2008 Free Software Foundation, Inc.\n ;;\n ;; This file is part of GCC.\n ;;\n@@ -37,13 +37,17 @@\n ;; Non-immediate operand excluding the constant pool.\n (define_predicate \"nonimmed_operand\"\n   (ior (and (match_operand 0 \"memory_operand\")\n-\t    (match_test \"!constantpool_address_p (XEXP (op, 0))\"))\n+\t    (match_test \"!constantpool_mem_p (op)\"))\n        (match_operand 0 \"register_operand\")))\n \n ;; Memory operand excluding the constant pool.\n (define_predicate \"mem_operand\"\n   (and (match_operand 0 \"memory_operand\")\n-       (match_test \"!constantpool_address_p (XEXP (op, 0))\")))\n+       (match_test \"!constantpool_mem_p (op)\")))\n+\n+;; Memory operand in the constant pool.\n+(define_predicate \"constantpool_operand\"\n+  (match_test \"constantpool_mem_p (op)\"))\n \n (define_predicate \"mask_operand\"\n   (ior (and (match_code \"const_int\")\n@@ -131,7 +135,9 @@\n (define_predicate \"move_operand\"\n   (ior\n      (ior (match_operand 0 \"register_operand\")\n-\t  (match_operand 0 \"memory_operand\"))\n+\t  (and (match_operand 0 \"memory_operand\")\n+\t       (match_test \"!constantpool_mem_p (op)\n+\t\t\t    || GET_MODE_SIZE (mode) % UNITS_PER_WORD == 0\")))\n      (ior (and (match_code \"const_int\")\n \t       (match_test \"GET_MODE_CLASS (mode) == MODE_INT\n \t\t\t    && xtensa_simm12b (INTVAL (op))\"))"}, {"sha": "7ecde9baf21edb622feb9835a0406e3f9cdd1511", "filename": "gcc/config/xtensa/xtensa-protos.h", "status": "modified", "additions": 6, "deletions": 4, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/37fbe8a344b5ab7e3e77499176d0581e4187929c/gcc%2Fconfig%2Fxtensa%2Fxtensa-protos.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/37fbe8a344b5ab7e3e77499176d0581e4187929c/gcc%2Fconfig%2Fxtensa%2Fxtensa-protos.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fxtensa%2Fxtensa-protos.h?ref=37fbe8a344b5ab7e3e77499176d0581e4187929c", "patch": "@@ -1,5 +1,6 @@\n /* Prototypes of target machine for GNU compiler for Xtensa.\n-   Copyright 2001, 2002, 2003, 2004, 2005, 2007 Free Software Foundation, Inc.\n+   Copyright 2001, 2002, 2003, 2004, 2005, 2007, 2008\n+   Free Software Foundation, Inc.\n    Contributed by Bob Wilson (bwilson@tensilica.com) at Tensilica.\n \n This file is part of GCC.\n@@ -66,9 +67,10 @@ extern bool xtensa_output_addr_const_extra (FILE *, rtx);\n extern void xtensa_output_literal (FILE *, rtx, enum machine_mode, int);\n extern rtx xtensa_return_addr (int, rtx);\n extern enum reg_class xtensa_preferred_reload_class (rtx, enum reg_class, int);\n-extern enum reg_class xtensa_secondary_reload_class (enum reg_class,\n-\t\t\t\t\t\t     enum machine_mode, rtx,\n-\t\t\t\t\t\t     int);\n+struct secondary_reload_info;\n+extern enum reg_class xtensa_secondary_reload (bool, rtx, enum reg_class,\n+\t\t\t\t\t       enum machine_mode,\n+\t\t\t\t\t       struct secondary_reload_info *);\n extern void xtensa_initialize_trampoline (rtx, rtx, rtx);\n #endif /* RTX_CODE */\n "}, {"sha": "1af9cbab4508128129fc5d0701a6c7db369bb3b5", "filename": "gcc/config/xtensa/xtensa.c", "status": "modified", "additions": 13, "deletions": 9, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/37fbe8a344b5ab7e3e77499176d0581e4187929c/gcc%2Fconfig%2Fxtensa%2Fxtensa.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/37fbe8a344b5ab7e3e77499176d0581e4187929c/gcc%2Fconfig%2Fxtensa%2Fxtensa.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fxtensa%2Fxtensa.c?ref=37fbe8a344b5ab7e3e77499176d0581e4187929c", "patch": "@@ -216,6 +216,9 @@ static const int reg_nonleaf_alloc_order[FIRST_PSEUDO_REGISTER] =\n #undef  TARGET_EXPAND_BUILTIN\n #define TARGET_EXPAND_BUILTIN xtensa_expand_builtin\n \n+#undef TARGET_SECONDARY_RELOAD\n+#define TARGET_SECONDARY_RELOAD xtensa_secondary_reload\n+\n struct gcc_target targetm = TARGET_INITIALIZER;\n \n \f\n@@ -2840,22 +2843,23 @@ xtensa_preferred_reload_class (rtx x, enum reg_class rclass, int isoutput)\n \n \n enum reg_class\n-xtensa_secondary_reload_class (enum reg_class rclass,\n-\t\t\t       enum machine_mode mode ATTRIBUTE_UNUSED,\n-\t\t\t       rtx x, int isoutput)\n+xtensa_secondary_reload (bool in_p, rtx x, enum reg_class rclass,\n+\t\t\t enum machine_mode mode, secondary_reload_info *sri)\n {\n   int regno;\n \n-  if (GET_CODE (x) == SIGN_EXTEND)\n-    x = XEXP (x, 0);\n-  regno = xt_true_regnum (x);\n-\n-  if (!isoutput)\n+  if (in_p && constantpool_mem_p (x))\n     {\n-      if (rclass == FP_REGS && constantpool_mem_p (x))\n+      if (rclass == FP_REGS)\n \treturn RL_REGS;\n+\n+      if (mode == QImode)\n+\tsri->icode = CODE_FOR_reloadqi_literal;\n+      else if (mode == HImode)\n+\tsri->icode = CODE_FOR_reloadhi_literal;\n     }\n \n+  regno = xt_true_regnum (x);\n   if (ACC_REG_P (regno))\n     return ((rclass == GR_REGS || rclass == RL_REGS) ? NO_REGS : RL_REGS);\n   if (rclass == ACC_REG)"}, {"sha": "ab3b648ffa40b66e2b31d4227e5aa195474c877f", "filename": "gcc/config/xtensa/xtensa.h", "status": "modified", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/37fbe8a344b5ab7e3e77499176d0581e4187929c/gcc%2Fconfig%2Fxtensa%2Fxtensa.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/37fbe8a344b5ab7e3e77499176d0581e4187929c/gcc%2Fconfig%2Fxtensa%2Fxtensa.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fxtensa%2Fxtensa.h?ref=37fbe8a344b5ab7e3e77499176d0581e4187929c", "patch": "@@ -508,12 +508,6 @@ extern const enum reg_class xtensa_regno_to_class[FIRST_PSEUDO_REGISTER];\n #define PREFERRED_OUTPUT_RELOAD_CLASS(X, CLASS)\t\t\t\t\\\n   xtensa_preferred_reload_class (X, CLASS, 1)\n   \n-#define SECONDARY_INPUT_RELOAD_CLASS(CLASS, MODE, X)\t\t\t\\\n-  xtensa_secondary_reload_class (CLASS, MODE, X, 0)\n-\n-#define SECONDARY_OUTPUT_RELOAD_CLASS(CLASS, MODE, X)\t\t\t\\\n-  xtensa_secondary_reload_class (CLASS, MODE, X, 1)\n-\n /* Return the maximum number of consecutive registers\n    needed to represent mode MODE in a register of class CLASS.  */\n #define CLASS_UNITS(mode, size)\t\t\t\t\t\t\\"}, {"sha": "4f831d3f22cf32d4c355a45fb0c4bece917982c2", "filename": "gcc/config/xtensa/xtensa.md", "status": "modified", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/37fbe8a344b5ab7e3e77499176d0581e4187929c/gcc%2Fconfig%2Fxtensa%2Fxtensa.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/37fbe8a344b5ab7e3e77499176d0581e4187929c/gcc%2Fconfig%2Fxtensa%2Fxtensa.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fxtensa%2Fxtensa.md?ref=37fbe8a344b5ab7e3e77499176d0581e4187929c", "patch": "@@ -880,6 +880,31 @@\n    (set_attr \"mode\"\t\"QI\")\n    (set_attr \"length\"\t\"2,2,3,3,3,3,3,3\")])\n \n+;; Sub-word reloads from the constant pool.\n+\n+(define_expand \"reload<mode>_literal\"\n+  [(parallel [(match_operand:HQI 0 \"register_operand\" \"=r\")\n+\t      (match_operand:HQI 1 \"constantpool_operand\" \"\")\n+\t      (match_operand:SI 2 \"register_operand\" \"=&r\")])]\n+  \"\"\n+{\n+  rtx lit, scratch;\n+  unsigned word_off, byte_off;\n+\n+  gcc_assert (GET_CODE (operands[1]) == SUBREG);\n+  lit = SUBREG_REG (operands[1]);\n+  scratch = operands[2];\n+  word_off = SUBREG_BYTE (operands[1]) & ~(UNITS_PER_WORD - 1);\n+  byte_off = SUBREG_BYTE (operands[1]) - word_off;\n+\n+  lit = adjust_address (lit, SImode, word_off);\n+  emit_insn (gen_movsi (scratch, lit));\n+  emit_insn (gen_mov<mode> (operands[0],\n+\t\t\t    gen_rtx_SUBREG (<MODE>mode, scratch, byte_off)));\n+\n+  DONE;\n+})\n+\n ;; 32-bit floating point moves\n \n (define_expand \"movsf\""}]}