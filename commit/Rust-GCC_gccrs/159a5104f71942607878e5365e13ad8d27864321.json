{"sha": "159a5104f71942607878e5365e13ad8d27864321", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTU5YTUxMDRmNzE5NDI2MDc4NzhlNTM2NWUxM2FkOGQyNzg2NDMyMQ==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2014-01-29T16:19:53Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2014-01-29T16:19:53Z"}, "message": "[multiple changes]\n\n2014-01-29  Hristian Kirtchev  <kirtchev@adacore.com>\n\n\t* sem_util.adb (Has_Enabled_Property): Compare the character field of\n\tthe sole property.\n\n2014-01-29  Robert Dewar  <dewar@adacore.com>\n\n\t* sem_intr.adb, a-ztexio.ads, sinfo.ads, sem_res.adb, gnatlink.adb,\n\tvms_conv.adb, a-except.ads, a-except-2005.ads, a-teioed.adb,\n\tsem_warn.ads, treepr.ads, erroutc.ads, a-excach.adb: Minor reformatting.\n\nFrom-SVN: r207267", "tree": {"sha": "5c69982a68b83e03de97cd7a5625a7aee845eda8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5c69982a68b83e03de97cd7a5625a7aee845eda8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/159a5104f71942607878e5365e13ad8d27864321", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/159a5104f71942607878e5365e13ad8d27864321", "html_url": "https://github.com/Rust-GCC/gccrs/commit/159a5104f71942607878e5365e13ad8d27864321", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/159a5104f71942607878e5365e13ad8d27864321/comments", "author": null, "committer": null, "parents": [{"sha": "87e9b93580f2c65d5f786c042f4ee9971160e6cf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/87e9b93580f2c65d5f786c042f4ee9971160e6cf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/87e9b93580f2c65d5f786c042f4ee9971160e6cf"}], "stats": {"total": 49, "additions": 30, "deletions": 19}, "files": [{"sha": "d0fee8faede70d6f022f34d741853518cb8d8075", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/159a5104f71942607878e5365e13ad8d27864321/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/159a5104f71942607878e5365e13ad8d27864321/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=159a5104f71942607878e5365e13ad8d27864321", "patch": "@@ -1,3 +1,14 @@\n+2014-01-29  Hristian Kirtchev  <kirtchev@adacore.com>\n+\n+\t* sem_util.adb (Has_Enabled_Property): Compare the character field of\n+\tthe sole property.\n+\n+2014-01-29  Robert Dewar  <dewar@adacore.com>\n+\n+\t* sem_intr.adb, a-ztexio.ads, sinfo.ads, sem_res.adb, gnatlink.adb,\n+\tvms_conv.adb, a-except.ads, a-except-2005.ads, a-teioed.adb,\n+\tsem_warn.ads, treepr.ads, erroutc.ads, a-excach.adb: Minor reformatting.\n+\n 2014-01-29  Robert Dewar  <dewar@adacore.com>\n \n \t* sem_util.ads, sem_util.adb (In_Pragma_Expression): New function."}, {"sha": "ab82920519da85c664833318b76243c23ca4f311", "filename": "gcc/ada/a-excach.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/159a5104f71942607878e5365e13ad8d27864321/gcc%2Fada%2Fa-excach.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/159a5104f71942607878e5365e13ad8d27864321/gcc%2Fada%2Fa-excach.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-excach.adb?ref=159a5104f71942607878e5365e13ad8d27864321", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2009, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2013, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -32,7 +32,7 @@\n pragma Warnings (Off);\n --  Allow withing of non-Preelaborated units in Ada 2005 mode where this\n --  package will be categorized as Preelaborate. See AI-362 for details.\n---  It is safe in the context of the run-time to violate the rules!\n+--  It is safe in the context of the run-time to violate the rules.\n \n with System.Traceback;\n "}, {"sha": "71a3f198c149041dd9db2bf702879a3d46ea8a66", "filename": "gcc/ada/a-except-2005.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/159a5104f71942607878e5365e13ad8d27864321/gcc%2Fada%2Fa-except-2005.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/159a5104f71942607878e5365e13ad8d27864321/gcc%2Fada%2Fa-except-2005.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-except-2005.ads?ref=159a5104f71942607878e5365e13ad8d27864321", "patch": "@@ -276,7 +276,7 @@ private\n \n    --  Note: this used to be in a separate unit called System.Poll, but that\n    --  caused horrible circular elaboration problems between System.Poll and\n-   --  Ada.Exceptions. One way of solving such circularities is unification!\n+   --  Ada.Exceptions.\n \n    procedure Poll;\n    --  Check for asynchronous abort. Note that we do not inline the body."}, {"sha": "512466714a299aea25ed4f23e3d88157b54ca04e", "filename": "gcc/ada/a-except.ads", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/159a5104f71942607878e5365e13ad8d27864321/gcc%2Fada%2Fa-except.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/159a5104f71942607878e5365e13ad8d27864321/gcc%2Fada%2Fa-except.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-except.ads?ref=159a5104f71942607878e5365e13ad8d27864321", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1992-2012, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2013, Free Software Foundation, Inc.         --\n --                                                                          --\n -- This specification is derived from the Ada Reference Manual for use with --\n -- GNAT. The copyright notice above, and the license provisions that follow --\n@@ -250,7 +250,7 @@ private\n \n    --  Note: this used to be in a separate unit called System.Poll, but that\n    --  caused horrible circular elaboration problems between System.Poll and\n-   --  Ada.Exceptions. One way of solving such circularities is unification!\n+   --  Ada.Exceptions.\n \n    procedure Poll;\n    --  Check for asynchronous abort. Note that we do not inline the body."}, {"sha": "03e635e9418830bc6590ce6c4b3da15ca9538d4d", "filename": "gcc/ada/a-teioed.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/159a5104f71942607878e5365e13ad8d27864321/gcc%2Fada%2Fa-teioed.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/159a5104f71942607878e5365e13ad8d27864321/gcc%2Fada%2Fa-teioed.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-teioed.adb?ref=159a5104f71942607878e5365e13ad8d27864321", "patch": "@@ -1445,7 +1445,7 @@ package body Ada.Text_IO.Editing is\n       -- Leading_Pound --\n       -------------------\n \n-      --  This one is complex!  A Leading_Pound can be fixed or floating,\n+      --  This one is complex.  A Leading_Pound can be fixed or floating,\n       --  but in some cases the decision has to be deferred until we leave\n       --  this procedure. Also note that Leading_Pound can be called in\n       --  either State."}, {"sha": "b081906b4152de942ac5ac14ad4c5c6d525b4cf4", "filename": "gcc/ada/a-ztexio.ads", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/159a5104f71942607878e5365e13ad8d27864321/gcc%2Fada%2Fa-ztexio.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/159a5104f71942607878e5365e13ad8d27864321/gcc%2Fada%2Fa-ztexio.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-ztexio.ads?ref=159a5104f71942607878e5365e13ad8d27864321", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1992-2011, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2013, Free Software Foundation, Inc.         --\n --                                                                          --\n -- This specification is derived from the Ada Reference Manual for use with --\n -- GNAT. The copyright notice above, and the license provisions that follow --\n@@ -389,7 +389,7 @@ private\n       --  there is no convenient way of backing up more than one character,\n       --  what we do is to leave ourselves positioned past the LM, but set\n       --  this flag, so that we know that from an Ada point of view we are\n-      --  in front of the LM, not after it. A bit of a kludge, but it works!\n+      --  in front of the LM, not after it. A bit of a kludge, but it works.\n \n       Before_LM_PM : Boolean := False;\n       --  This flag similarly handles the case of being physically positioned"}, {"sha": "5469944e920769b83387f18885d0cbe68121c641", "filename": "gcc/ada/erroutc.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/159a5104f71942607878e5365e13ad8d27864321/gcc%2Fada%2Ferroutc.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/159a5104f71942607878e5365e13ad8d27864321/gcc%2Fada%2Ferroutc.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ferroutc.ads?ref=159a5104f71942607878e5365e13ad8d27864321", "patch": "@@ -98,7 +98,7 @@ package Erroutc is\n    --  ensures that two insertion tokens of maximum length can be accommodated.\n    --  The value of 1024 is an arbitrary value that should be more than long\n    --  enough to accommodate any reasonable message (and for that matter, some\n-   --  pretty unreasonable messages!)\n+   --  pretty unreasonable messages).\n \n    Msg_Buffer : String (1 .. Max_Msg_Length);\n    --  Buffer used to prepare error messages"}, {"sha": "ce8f3d18b65b494d76ca8ebef7e79e3be0b7c81f", "filename": "gcc/ada/gnatlink.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/159a5104f71942607878e5365e13ad8d27864321/gcc%2Fada%2Fgnatlink.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/159a5104f71942607878e5365e13ad8d27864321/gcc%2Fada%2Fgnatlink.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnatlink.adb?ref=159a5104f71942607878e5365e13ad8d27864321", "patch": "@@ -1598,7 +1598,7 @@ begin\n          --  Read it. Note that we ignore errors, since we only want very\n          --  limited information from the ali file, and likely a slightly\n          --  wrong version will be just fine, though in normal operation\n-         --  we don't expect this to happen!\n+         --  we don't expect this to happen.\n \n          A := Scan_ALI\n                (F,"}, {"sha": "4682d250d81413d498cd9d4379226fc841c90d63", "filename": "gcc/ada/sem_intr.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/159a5104f71942607878e5365e13ad8d27864321/gcc%2Fada%2Fsem_intr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/159a5104f71942607878e5365e13ad8d27864321/gcc%2Fada%2Fsem_intr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_intr.adb?ref=159a5104f71942607878e5365e13ad8d27864321", "patch": "@@ -416,7 +416,7 @@ package body Sem_Intr is\n          return;\n       end if;\n \n-      --  type'Size (not 'Object_Size!) must be one of the allowed values\n+      --  type'Size (not 'Object_Size) must be one of the allowed values\n \n       Size := UI_To_Int (RM_Size (Typ1));\n "}, {"sha": "f221ed4457c92721b1b5345f31243cad13d63c35", "filename": "gcc/ada/sem_res.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/159a5104f71942607878e5365e13ad8d27864321/gcc%2Fada%2Fsem_res.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/159a5104f71942607878e5365e13ad8d27864321/gcc%2Fada%2Fsem_res.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_res.adb?ref=159a5104f71942607878e5365e13ad8d27864321", "patch": "@@ -2474,7 +2474,7 @@ package body Sem_Res is\n             --  If type we are looking for is Void, then this is the procedure\n             --  call case, and the error is simply that what we gave is not a\n             --  procedure name (we think of procedure calls as expressions with\n-            --  types internally, but the user doesn't think of them this way!)\n+            --  types internally, but the user doesn't think of them this way).\n \n             if Typ = Standard_Void_Type then\n \n@@ -6170,7 +6170,7 @@ package body Sem_Res is\n          end if;\n \n       --  For Standard.Wide_Wide_Character or a type derived from it, we\n-      --  know the literal is in range, since the parser checked!\n+      --  know the literal is in range, since the parser checked.\n \n       elsif Root_Type (B_Typ) = Standard_Wide_Wide_Character then\n          return;"}, {"sha": "2f85e82fa6a6596b2d0449e35fcc7bd8744fed2d", "filename": "gcc/ada/sem_util.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/159a5104f71942607878e5365e13ad8d27864321/gcc%2Fada%2Fsem_util.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/159a5104f71942607878e5365e13ad8d27864321/gcc%2Fada%2Fsem_util.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_util.adb?ref=159a5104f71942607878e5365e13ad8d27864321", "patch": "@@ -7319,7 +7319,7 @@ package body Sem_Util is\n             --  Single property\n \n             else\n-               return Chars (Prop) = Prop_Nam;\n+               return Chars (Props) = Prop_Nam;\n             end if;\n          end if;\n "}, {"sha": "131b7b80399f7c28b2c725c78b1db25a1d707dd5", "filename": "gcc/ada/sem_warn.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/159a5104f71942607878e5365e13ad8d27864321/gcc%2Fada%2Fsem_warn.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/159a5104f71942607878e5365e13ad8d27864321/gcc%2Fada%2Fsem_warn.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_warn.ads?ref=159a5104f71942607878e5365e13ad8d27864321", "patch": "@@ -127,7 +127,7 @@ package Sem_Warn is\n    --  the end of the compilation process (see body of this routine for a\n    --  discussion of why this is done). This procedure outputs the warnings.\n    --  Note: this should be called before Output_Unreferenced_Messages, since\n-   --  if we have an IN OUT warning, that's the one we want to see!\n+   --  if we have an IN OUT warning, that's the one we want to see.\n \n    procedure Output_Obsolescent_Entity_Warnings (N : Node_Id; E : Entity_Id);\n    --  N is a reference to obsolescent entity E, for which appropriate warning"}, {"sha": "4fb30477f2e0bd173f01deec9d0bf87ff0d63dc8", "filename": "gcc/ada/sinfo.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/159a5104f71942607878e5365e13ad8d27864321/gcc%2Fada%2Fsinfo.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/159a5104f71942607878e5365e13ad8d27864321/gcc%2Fada%2Fsinfo.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsinfo.ads?ref=159a5104f71942607878e5365e13ad8d27864321", "patch": "@@ -8232,7 +8232,7 @@ package Sinfo is\n       N_Unused_At_End);\n \n    for Node_Kind'Size use 8;\n-   --  The data structures in Atree assume this!\n+   --  The data structures in Atree assume this\n \n    ----------------------------\n    -- Node Class Definitions --"}, {"sha": "2d1fb93e8e06221c243eda5d6589c10dc87d919d", "filename": "gcc/ada/treepr.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/159a5104f71942607878e5365e13ad8d27864321/gcc%2Fada%2Ftreepr.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/159a5104f71942607878e5365e13ad8d27864321/gcc%2Fada%2Ftreepr.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ftreepr.ads?ref=159a5104f71942607878e5365e13ad8d27864321", "patch": "@@ -82,7 +82,7 @@ package Treepr is\n    --  Same as Print_Node_Subtree\n \n    --  The following are no longer really needed, now that pn will print\n-   --  anything you throw at it!\n+   --  anything you throw at it.\n \n    procedure pe (E : Elist_Id);\n    pragma Export (Ada, pe);"}, {"sha": "36322350faa500f8598d60fabb881d4a7681a156", "filename": "gcc/ada/vms_conv.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/159a5104f71942607878e5365e13ad8d27864321/gcc%2Fada%2Fvms_conv.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/159a5104f71942607878e5365e13ad8d27864321/gcc%2Fada%2Fvms_conv.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fvms_conv.adb?ref=159a5104f71942607878e5365e13ad8d27864321", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1996-2012, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1996-2013, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -1737,7 +1737,7 @@ package body VMS_Conv is\n                   Sw   : Item_Ptr;\n                   SwP  : Natural;\n                   P2   : Natural;\n-                  Endp : Natural := 0; -- avoid warning!\n+                  Endp : Natural := 0; -- avoid warning\n                   Opt  : Item_Ptr;\n \n                begin"}]}