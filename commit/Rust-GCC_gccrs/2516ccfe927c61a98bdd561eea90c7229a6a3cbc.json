{"sha": "2516ccfe927c61a98bdd561eea90c7229a6a3cbc", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjUxNmNjZmU5MjdjNjFhOThiZGQ1NjFlZWE5MGM3MjI5YTZhM2NiYw==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2011-06-17T20:07:13Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2011-06-17T20:07:13Z"}, "message": "semantics.c (finish_non_static_data_member): Preserve dereference in template.\n\n\t* semantics.c (finish_non_static_data_member): Preserve dereference\n\tin template.\n\nFrom-SVN: r175152", "tree": {"sha": "84992412bfd78291d0e7bc2e3e2e23828796b124", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/84992412bfd78291d0e7bc2e3e2e23828796b124"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2516ccfe927c61a98bdd561eea90c7229a6a3cbc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2516ccfe927c61a98bdd561eea90c7229a6a3cbc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2516ccfe927c61a98bdd561eea90c7229a6a3cbc", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2516ccfe927c61a98bdd561eea90c7229a6a3cbc/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "b53abf71d275c3642dd65d4fdc98a0270fc5ee3c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b53abf71d275c3642dd65d4fdc98a0270fc5ee3c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b53abf71d275c3642dd65d4fdc98a0270fc5ee3c"}], "stats": {"total": 10, "additions": 8, "deletions": 2}, "files": [{"sha": "010f1ddaa4f355f0eba658371ffdad6d42c05ae9", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2516ccfe927c61a98bdd561eea90c7229a6a3cbc/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2516ccfe927c61a98bdd561eea90c7229a6a3cbc/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=2516ccfe927c61a98bdd561eea90c7229a6a3cbc", "patch": "@@ -1,3 +1,8 @@\n+2011-06-17  Jason Merrill  <jason@redhat.com>\n+\n+\t* semantics.c (finish_non_static_data_member): Preserve dereference\n+\tin template.\n+\n 2011-06-16  Jason Merrill  <jason@redhat.com>\n \n \tPR c++/44160"}, {"sha": "a43662381862b715540732d7c49c9d107fab30dd", "filename": "gcc/cp/semantics.c", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2516ccfe927c61a98bdd561eea90c7229a6a3cbc/gcc%2Fcp%2Fsemantics.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2516ccfe927c61a98bdd561eea90c7229a6a3cbc/gcc%2Fcp%2Fsemantics.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fsemantics.c?ref=2516ccfe927c61a98bdd561eea90c7229a6a3cbc", "patch": "@@ -1557,7 +1557,7 @@ finish_non_static_data_member (tree decl, tree object, tree qualifying_scope)\n       tree type = TREE_TYPE (decl);\n \n       if (TREE_CODE (type) == REFERENCE_TYPE)\n-\ttype = TREE_TYPE (type);\n+\t/* Quals on the object don't matter.  */;\n       else\n \t{\n \t  /* Set the cv qualifiers.  */\n@@ -1572,7 +1572,8 @@ finish_non_static_data_member (tree decl, tree object, tree qualifying_scope)\n \t  type = cp_build_qualified_type (type, quals);\n \t}\n \n-      return build_min (COMPONENT_REF, type, object, decl, NULL_TREE);\n+      return (convert_from_reference\n+\t      (build_min (COMPONENT_REF, type, object, decl, NULL_TREE)));\n     }\n   /* If PROCESSING_TEMPLATE_DECL is nonzero here, then\n      QUALIFYING_SCOPE is also non-null.  Wrap this in a SCOPE_REF"}]}