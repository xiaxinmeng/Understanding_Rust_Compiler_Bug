{"sha": "e4f422b8afeaed39fbc0ad5f6735739489f57d10", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTRmNDIyYjhhZmVhZWQzOWZiYzBhZDVmNjczNTczOTQ4OWY1N2QxMA==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@adacore.com", "date": "2012-05-15T09:42:01Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2012-05-15T09:42:01Z"}, "message": "a-except.adb, [...] (Reraise_Library_Exception_If_Any): New.\n\n2012-05-15  Arnaud Charlet  <charlet@adacore.com>\n\n\t* a-except.adb, a-except.ads (Reraise_Library_Exception_If_Any): New.\n\tMark this unit preelaborate.\n\t* s-soflin.ads: Make package Preelaborate.\n\nFrom-SVN: r187511", "tree": {"sha": "5a7ac058a8f04e8b7cccfac5bee4543e94989482", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5a7ac058a8f04e8b7cccfac5bee4543e94989482"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e4f422b8afeaed39fbc0ad5f6735739489f57d10", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e4f422b8afeaed39fbc0ad5f6735739489f57d10", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e4f422b8afeaed39fbc0ad5f6735739489f57d10", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e4f422b8afeaed39fbc0ad5f6735739489f57d10/comments", "author": {"login": "ArnaudCharlet", "id": 30291825, "node_id": "MDQ6VXNlcjMwMjkxODI1", "avatar_url": "https://avatars.githubusercontent.com/u/30291825?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ArnaudCharlet", "html_url": "https://github.com/ArnaudCharlet", "followers_url": "https://api.github.com/users/ArnaudCharlet/followers", "following_url": "https://api.github.com/users/ArnaudCharlet/following{/other_user}", "gists_url": "https://api.github.com/users/ArnaudCharlet/gists{/gist_id}", "starred_url": "https://api.github.com/users/ArnaudCharlet/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ArnaudCharlet/subscriptions", "organizations_url": "https://api.github.com/users/ArnaudCharlet/orgs", "repos_url": "https://api.github.com/users/ArnaudCharlet/repos", "events_url": "https://api.github.com/users/ArnaudCharlet/events{/privacy}", "received_events_url": "https://api.github.com/users/ArnaudCharlet/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "6eaa926a11892f8c650778c66b53c2041f600bdd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6eaa926a11892f8c650778c66b53c2041f600bdd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6eaa926a11892f8c650778c66b53c2041f600bdd"}], "stats": {"total": 45, "additions": 35, "deletions": 10}, "files": [{"sha": "8d5355f209cb8d8a2e551337ebe1de9fdd4d7872", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e4f422b8afeaed39fbc0ad5f6735739489f57d10/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e4f422b8afeaed39fbc0ad5f6735739489f57d10/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=e4f422b8afeaed39fbc0ad5f6735739489f57d10", "patch": "@@ -1,3 +1,9 @@\n+2012-05-15  Arnaud Charlet  <charlet@adacore.com>\n+\n+\t* a-except.adb, a-except.ads (Reraise_Library_Exception_If_Any): New.\n+\tMark this unit preelaborate.\n+\t* s-soflin.ads: Make package Preelaborate.\n+\n 2012-05-15  Robert Dewar  <dewar@adacore.com>\n \n \t* s-osprim-mingw.adb, sem_eval.adb, a-calend-vms.ads: Minor reformatting"}, {"sha": "fc144bb1c91693b6dcb1ddfa0c14d0f2c0ca4794", "filename": "gcc/ada/a-except.adb", "status": "modified", "additions": 14, "deletions": 1, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e4f422b8afeaed39fbc0ad5f6735739489f57d10/gcc%2Fada%2Fa-except.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e4f422b8afeaed39fbc0ad5f6735739489f57d10/gcc%2Fada%2Fa-except.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-except.adb?ref=e4f422b8afeaed39fbc0ad5f6735739489f57d10", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2011, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2012, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -1175,6 +1175,19 @@ package body Ada.Exceptions is\n       Raise_Current_Excep (Excep.Id);\n    end Reraise;\n \n+   --------------------------------------\n+   -- Reraise_Library_Exception_If_Any --\n+   --------------------------------------\n+\n+   procedure Reraise_Library_Exception_If_Any is\n+      LE : Exception_Occurrence;\n+   begin\n+      if Library_Exception_Set then\n+         LE := Library_Exception;\n+         Raise_From_Controlled_Operation (LE);\n+      end if;\n+   end Reraise_Library_Exception_If_Any;\n+\n    ------------------------\n    -- Reraise_Occurrence --\n    ------------------------"}, {"sha": "a77df9354fd13ce0133b205aa306810a802787cf", "filename": "gcc/ada/a-except.ads", "status": "modified", "additions": 14, "deletions": 8, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e4f422b8afeaed39fbc0ad5f6735739489f57d10/gcc%2Fada%2Fa-except.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e4f422b8afeaed39fbc0ad5f6735739489f57d10/gcc%2Fada%2Fa-except.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-except.ads?ref=e4f422b8afeaed39fbc0ad5f6735739489f57d10", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1992-2011, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2012, Free Software Foundation, Inc.         --\n --                                                                          --\n -- This specification is derived from the Ada Reference Manual for use with --\n -- GNAT. The copyright notice above, and the license provisions that follow --\n@@ -35,7 +35,8 @@\n \n --  This version of Ada.Exceptions is a full Ada 95 version. It omits Ada 2005\n --  features such as the additional definitions of Exception_Name returning\n---  Wide_[Wide_]String.\n+--  Wide_[Wide_]String. If differs from the 95 version only in that it is\n+--  declared Preelaborate (see declaration below for why this is done).\n \n --  It is used for building the compiler and the basic tools, since these\n --  builds may be done with bootstrap compilers that cannot handle these\n@@ -56,12 +57,10 @@ with System.Standard_Library;\n with System.Traceback_Entries;\n \n package Ada.Exceptions is\n-   pragma Warnings (Off);\n-   pragma Preelaborate_05;\n-   pragma Warnings (On);\n-   --  We make this preelaborable in Ada 2005 mode. If we did not do this, then\n-   --  run time units used by the compiler (e.g. s-soflin.ads) would run\n-   --  into trouble. Conformance is not an issue, since this version is used\n+   pragma Preelaborate;\n+   --  We make this preelaborable. If we did not do this, then run time units\n+   --  used by the compiler (e.g. s-soflin.ads) would run into trouble.\n+   --  Conformance with Ada 95 is not an issue, since this version is used\n    --  only by the compiler.\n \n    type Exception_Id is private;\n@@ -207,6 +206,13 @@ private\n    --  Raise Program_Error, providing information about X (an exception raised\n    --  during a controlled operation) in the exception message.\n \n+   procedure Reraise_Library_Exception_If_Any;\n+   pragma Export\n+     (Ada, Reraise_Library_Exception_If_Any,\n+           \"__gnat_reraise_library_exception_if_any\");\n+   --  If there was an exception raised during library-level finalization,\n+   --  reraise the exception.\n+\n    procedure Reraise_Occurrence_Always (X : Exception_Occurrence);\n    pragma No_Return (Reraise_Occurrence_Always);\n    --  This differs from Raise_Occurrence only in that the caller guarantees"}, {"sha": "01dc1737d5f7f758767020107eea6819a5e61053", "filename": "gcc/ada/s-soflin.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e4f422b8afeaed39fbc0ad5f6735739489f57d10/gcc%2Fada%2Fs-soflin.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e4f422b8afeaed39fbc0ad5f6735739489f57d10/gcc%2Fada%2Fs-soflin.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-soflin.ads?ref=e4f422b8afeaed39fbc0ad5f6735739489f57d10", "patch": "@@ -43,7 +43,7 @@ with Ada.Exceptions;\n with System.Stack_Checking;\n \n package System.Soft_Links is\n-   pragma Preelaborate_05;\n+   pragma Preelaborate;\n \n    subtype EOA is Ada.Exceptions.Exception_Occurrence_Access;\n    subtype EO is Ada.Exceptions.Exception_Occurrence;"}]}