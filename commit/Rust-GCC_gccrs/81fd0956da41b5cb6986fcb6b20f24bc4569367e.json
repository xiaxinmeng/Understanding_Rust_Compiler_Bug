{"sha": "81fd0956da41b5cb6986fcb6b20f24bc4569367e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODFmZDA5NTZkYTQxYjVjYjY5ODZmY2I2YjIwZjI0YmM0NTY5MzY3ZQ==", "commit": {"author": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1992-10-25T22:21:26Z"}, "committer": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1992-10-25T22:21:26Z"}, "message": "(output_move_double): Divert first word via the stack\nif it's a register used in the input operand.\n\nFrom-SVN: r2602", "tree": {"sha": "9fd56925d2e375655a7f4552eaa1b5606b8fe026", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9fd56925d2e375655a7f4552eaa1b5606b8fe026"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/81fd0956da41b5cb6986fcb6b20f24bc4569367e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/81fd0956da41b5cb6986fcb6b20f24bc4569367e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/81fd0956da41b5cb6986fcb6b20f24bc4569367e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/81fd0956da41b5cb6986fcb6b20f24bc4569367e/comments", "author": null, "committer": null, "parents": [{"sha": "555b950bd1b8f0605f62913ef845bafcf697d1f6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/555b950bd1b8f0605f62913ef845bafcf697d1f6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/555b950bd1b8f0605f62913ef845bafcf697d1f6"}], "stats": {"total": 17, "additions": 17, "deletions": 0}, "files": [{"sha": "c9265c6a81212d96722f20700f4067f4d3b578b5", "filename": "gcc/config/i386/i386.c", "status": "modified", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/81fd0956da41b5cb6986fcb6b20f24bc4569367e/gcc%2Fconfig%2Fi386%2Fi386.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/81fd0956da41b5cb6986fcb6b20f24bc4569367e/gcc%2Fconfig%2Fi386%2Fi386.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.c?ref=81fd0956da41b5cb6986fcb6b20f24bc4569367e", "patch": "@@ -42,6 +42,7 @@ the Free Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA.  */\n \n #define AT_BP(mode) (gen_rtx (MEM, (mode), frame_pointer_rtx))\n \n+extern rtx gen_push_operand ();\n extern FILE *asm_out_file;\n extern char *strcat ();\n \n@@ -243,6 +244,7 @@ output_move_double (operands)\n   enum {REGOP, OFFSOP, MEMOP, PUSHOP, POPOP, CNSTOP, RNDOP } optype0, optype1;\n   rtx latehalf[2];\n   rtx addreg0 = 0, addreg1 = 0;\n+  rtx pop_after = 0;\n \n   /* First classify both operands.  */\n \n@@ -352,6 +354,16 @@ output_move_double (operands)\n       && reg_overlap_mentioned_p (stack_pointer_rtx, operands[1]))\n     operands[1] = latehalf[1];\n \n+  /* For (set (reg:DI N) (mem:DI ... (reg:SI N) ...)),\n+     push the first word on the stack, and pop it off afterward.  */\n+  if (optype0 == REGOP\n+      && refers_to_regno_p (REGNO (operands[0]), REGNO (operands[0]) + 1,\n+\t\t\t    operands[1], 0))\n+    {\n+      pop_after = operands[0];\n+      operands[0] = gen_rtx (MEM, SImode, gen_push_operand ());\n+    }\n+\n   /* If one or both operands autodecrementing,\n      do the two words, high-numbered first.  */\n \n@@ -402,6 +414,11 @@ output_move_double (operands)\n   if (addreg1)\n     asm_add (-4, addreg1);\n \n+  /* If we diverted a word to the stack, pop it now\n+     to the proper register.  */\n+  if (pop_after != 0)\n+    output_asm_insn (\"pop%L0 %0\", &pop_after);\n+\n   return \"\";\n }\n \f"}]}