{"sha": "cb0a34c469abd6fc7e6a54fe620706ff0f2f136f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2IwYTM0YzQ2OWFiZDZmYzdlNmE1NGZlNjIwNzA2ZmYwZjJmMTM2Zg==", "commit": {"author": {"name": "John Wehle", "email": "john@feith.com", "date": "2000-01-09T06:03:45Z"}, "committer": {"name": "John Wehle", "email": "wehle@gcc.gnu.org", "date": "2000-01-09T06:03:45Z"}, "message": "fold-const.c (lshift_double, [...]): Handle shifting by 2 * HOST_BITS_PER_WIDE_INT correctly.\n\n\t* fold-const.c (lshift_double, rshift_double): Handle\n\tshifting by 2 * HOST_BITS_PER_WIDE_INT correctly.\n\nFrom-SVN: r31289", "tree": {"sha": "929408d70ce3a7b84c9acd4f8f43cf1758d6a7b5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/929408d70ce3a7b84c9acd4f8f43cf1758d6a7b5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/cb0a34c469abd6fc7e6a54fe620706ff0f2f136f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cb0a34c469abd6fc7e6a54fe620706ff0f2f136f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cb0a34c469abd6fc7e6a54fe620706ff0f2f136f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cb0a34c469abd6fc7e6a54fe620706ff0f2f136f/comments", "author": {"login": "jlwehle", "id": 46985578, "node_id": "MDQ6VXNlcjQ2OTg1NTc4", "avatar_url": "https://avatars.githubusercontent.com/u/46985578?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jlwehle", "html_url": "https://github.com/jlwehle", "followers_url": "https://api.github.com/users/jlwehle/followers", "following_url": "https://api.github.com/users/jlwehle/following{/other_user}", "gists_url": "https://api.github.com/users/jlwehle/gists{/gist_id}", "starred_url": "https://api.github.com/users/jlwehle/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jlwehle/subscriptions", "organizations_url": "https://api.github.com/users/jlwehle/orgs", "repos_url": "https://api.github.com/users/jlwehle/repos", "events_url": "https://api.github.com/users/jlwehle/events{/privacy}", "received_events_url": "https://api.github.com/users/jlwehle/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "d511f9d5ecc8d4f5a7a6dc1ba239ad67e0816773", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d511f9d5ecc8d4f5a7a6dc1ba239ad67e0816773", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d511f9d5ecc8d4f5a7a6dc1ba239ad67e0816773"}], "stats": {"total": 23, "additions": 21, "deletions": 2}, "files": [{"sha": "ade9b9d28c3c7c95828ad30d560d51cea84d8362", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cb0a34c469abd6fc7e6a54fe620706ff0f2f136f/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cb0a34c469abd6fc7e6a54fe620706ff0f2f136f/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=cb0a34c469abd6fc7e6a54fe620706ff0f2f136f", "patch": "@@ -1,3 +1,8 @@\n+Sun Jan  9 01:02:55 EST 2000  John Wehle  (john@feith.com)\n+\n+\t* fold-const.c (lshift_double, rshift_double): Handle\n+\tshifting by 2 * HOST_BITS_PER_WIDE_INT correctly.\n+\n 2000-01-08  Alexandre Oliva  <oliva@lsd.ic.unicamp.br>\n \n \t* toplev.c (rest_of_compilation): Initialize cse_not_expected as"}, {"sha": "64d4e41ff462092777c1bc17fe42cb2f1f07b766", "filename": "gcc/fold-const.c", "status": "modified", "additions": 16, "deletions": 2, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cb0a34c469abd6fc7e6a54fe620706ff0f2f136f/gcc%2Ffold-const.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cb0a34c469abd6fc7e6a54fe620706ff0f2f136f/gcc%2Ffold-const.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffold-const.c?ref=cb0a34c469abd6fc7e6a54fe620706ff0f2f136f", "patch": "@@ -363,7 +363,14 @@ lshift_double (l1, h1, count, prec, lv, hv, arith)\n     count %= prec;\n #endif\n \n-  if (count >= HOST_BITS_PER_WIDE_INT)\n+  if (count >= 2 * HOST_BITS_PER_WIDE_INT)\n+    {\n+      /* Shifting by the host word size is undefined according to the\n+\t ANSI standard, so we must handle this as a special case.  */\n+      *hv = 0;\n+      *lv = 0;\n+    }\n+  else if (count >= HOST_BITS_PER_WIDE_INT)\n     {\n       *hv = (unsigned HOST_WIDE_INT) l1 << (count - HOST_BITS_PER_WIDE_INT);\n       *lv = 0;\n@@ -398,7 +405,14 @@ rshift_double (l1, h1, count, prec, lv, hv, arith)\n     count %= prec;\n #endif\n \n-  if (count >= HOST_BITS_PER_WIDE_INT)\n+  if (count >= 2 * HOST_BITS_PER_WIDE_INT)\n+    {\n+      /* Shifting by the host word size is undefined according to the\n+\t ANSI standard, so we must handle this as a special case.  */\n+      *hv = signmask;\n+      *lv = signmask;\n+    }\n+  else if (count >= HOST_BITS_PER_WIDE_INT)\n     {\n       *hv = signmask;\n       *lv = ((signmask << (2 * HOST_BITS_PER_WIDE_INT - count - 1) << 1)"}]}