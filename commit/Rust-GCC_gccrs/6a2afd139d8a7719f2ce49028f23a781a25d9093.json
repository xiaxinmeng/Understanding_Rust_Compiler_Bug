{"sha": "6a2afd139d8a7719f2ce49028f23a781a25d9093", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmEyYWZkMTM5ZDhhNzcxOWYyY2U0OTAyOGYyM2E3ODFhMjVkOTA5Mw==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2009-11-30T11:15:51Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2009-11-30T11:15:51Z"}, "message": "[multiple changes]\n\n2009-11-30  Robert Dewar  <dewar@adacore.com>\n\n\t* gnat_rm.texi: Add documentation for attribute Result.\n\n2009-11-30  Arnaud Charlet  <charlet@adacore.com>\n\n\t* s-osinte-hpux.ads, s-osinte-aix.ads, s-osinte-solaris-posix.ads,\n\ts-osinte-tru64.ads, s-osinte-darwin.ads, s-osinte-freebsd.ads\n\t(Get_Page_Size): Update comment since Get_Page_Size is now required.\n\n2009-11-30  Jerome Lambourg  <lambourg@adacore.com>\n\n\t* freeze.adb: Disable Warning on VM targets concerning C Imports, not\n\trelevant.\n\n2009-11-30  Bob Duff  <duff@adacore.com>\n\n\t* sprint.adb (Source_Dump): Minor comment fix.\n\t(Write_Itype): When writing a string literal subtype, use Expr_Value\n\tinstead of Intval to get the low bound.\n\n2009-11-30  Vincent Celier  <celier@adacore.com>\n\n\t* gnatlink.adb (Process_Args): Do not call Executable_Name on arguments\n\tof switch -o.\n\n2009-11-30  Robert Dewar  <dewar@adacore.com>\n\n\t* exp_ch4.adb (Expand_N_Op_And): Implement pragma Short_Circuit_And_Or\n\t(Expand_N_Op_Or): Implement pragma Short_Circuit_And_Or\n\t* opt.ads (Short_Circuit_And_Or): New flag\n\t* par-prag.adb: Add dummy entry for pragma Short_Circuit_And_Or\n\t* sem_prag.adb: Implement pragma Short_Circuit_And_Or\n\t* snames.ads-tmpl: Add entries for pragma Short_Circuit_And_Or\n\nFrom-SVN: r154786", "tree": {"sha": "8e96d9ba09117e739624fe6b6c89ef394cce59e4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8e96d9ba09117e739624fe6b6c89ef394cce59e4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6a2afd139d8a7719f2ce49028f23a781a25d9093", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6a2afd139d8a7719f2ce49028f23a781a25d9093", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6a2afd139d8a7719f2ce49028f23a781a25d9093", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6a2afd139d8a7719f2ce49028f23a781a25d9093/comments", "author": null, "committer": null, "parents": [{"sha": "1c6b661582f0c97a02587588a81e84ee34602686", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1c6b661582f0c97a02587588a81e84ee34602686", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1c6b661582f0c97a02587588a81e84ee34602686"}], "stats": {"total": 151, "additions": 128, "deletions": 23}, "files": [{"sha": "0ff789d5e1a6557d80cd01e716df0f1a8788b782", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 35, "deletions": 0, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6a2afd139d8a7719f2ce49028f23a781a25d9093/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6a2afd139d8a7719f2ce49028f23a781a25d9093/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=6a2afd139d8a7719f2ce49028f23a781a25d9093", "patch": "@@ -1,3 +1,38 @@\n+2009-11-30  Robert Dewar  <dewar@adacore.com>\n+\n+\t* gnat_rm.texi: Add documentation for attribute Result.\n+\n+2009-11-30  Arnaud Charlet  <charlet@adacore.com>\n+\n+\t* s-osinte-hpux.ads, s-osinte-aix.ads, s-osinte-solaris-posix.ads,\n+\ts-osinte-tru64.ads, s-osinte-darwin.ads, s-osinte-freebsd.ads\n+\t(Get_Page_Size): Update comment since Get_Page_Size is now required.\n+\n+2009-11-30  Jerome Lambourg  <lambourg@adacore.com>\n+\n+\t* freeze.adb: Disable Warning on VM targets concerning C Imports, not\n+\trelevant.\n+\n+2009-11-30  Bob Duff  <duff@adacore.com>\n+\n+\t* sprint.adb (Source_Dump): Minor comment fix.\n+\t(Write_Itype): When writing a string literal subtype, use Expr_Value\n+\tinstead of Intval to get the low bound.\n+\n+2009-11-30  Vincent Celier  <celier@adacore.com>\n+\n+\t* gnatlink.adb (Process_Args): Do not call Executable_Name on arguments\n+\tof switch -o.\n+\n+2009-11-30  Robert Dewar  <dewar@adacore.com>\n+\n+\t* exp_ch4.adb (Expand_N_Op_And): Implement pragma Short_Circuit_And_Or\n+\t(Expand_N_Op_Or): Implement pragma Short_Circuit_And_Or\n+\t* opt.ads (Short_Circuit_And_Or): New flag\n+\t* par-prag.adb: Add dummy entry for pragma Short_Circuit_And_Or\n+\t* sem_prag.adb: Implement pragma Short_Circuit_And_Or\n+\t* snames.ads-tmpl: Add entries for pragma Short_Circuit_And_Or\n+\n 2009-11-30  Arnaud Charlet  <charlet@adacore.com>\n \n \t* s-taprop-posix.adb: Fix casing."}, {"sha": "dd74a155144929d69e0494525df6ece769854944", "filename": "gcc/ada/exp_ch4.adb", "status": "modified", "additions": 40, "deletions": 8, "changes": 48, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6a2afd139d8a7719f2ce49028f23a781a25d9093/gcc%2Fada%2Fexp_ch4.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6a2afd139d8a7719f2ce49028f23a781a25d9093/gcc%2Fada%2Fexp_ch4.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch4.adb?ref=6a2afd139d8a7719f2ce49028f23a781a25d9093", "patch": "@@ -5025,10 +5025,26 @@ package body Exp_Ch4 is\n          Expand_Boolean_Operator (N);\n \n       elsif Is_Boolean_Type (Etype (N)) then\n-         Adjust_Condition (Left_Opnd (N));\n-         Adjust_Condition (Right_Opnd (N));\n-         Set_Etype (N, Standard_Boolean);\n-         Adjust_Result_Type (N, Typ);\n+\n+         --  Replace AND by AND THEN if Short_Circuit_And_Or active and the\n+         --  type is standard Boolean (do not mess with AND that uses a non-\n+         --  standard Boolean type, because something strange is going on).\n+\n+         if Short_Circuit_And_Or and then Typ = Standard_Boolean then\n+            Rewrite (N,\n+              Make_And_Then (Sloc (N),\n+                Left_Opnd  => Relocate_Node (Left_Opnd (N)),\n+                Right_Opnd => Relocate_Node (Right_Opnd (N))));\n+            Analyze_And_Resolve (N, Typ);\n+\n+         --  Otherwise, adjust conditions\n+\n+         else\n+            Adjust_Condition (Left_Opnd (N));\n+            Adjust_Condition (Right_Opnd (N));\n+            Set_Etype (N, Standard_Boolean);\n+            Adjust_Result_Type (N, Typ);\n+         end if;\n       end if;\n    end Expand_N_Op_And;\n \n@@ -6913,10 +6929,26 @@ package body Exp_Ch4 is\n          Expand_Boolean_Operator (N);\n \n       elsif Is_Boolean_Type (Etype (N)) then\n-         Adjust_Condition (Left_Opnd (N));\n-         Adjust_Condition (Right_Opnd (N));\n-         Set_Etype (N, Standard_Boolean);\n-         Adjust_Result_Type (N, Typ);\n+\n+         --  Replace OR by OR ELSE if Short_Circuit_And_Or active and the\n+         --  type is standard Boolean (do not mess with AND that uses a non-\n+         --  standard Boolean type, because something strange is going on).\n+\n+         if Short_Circuit_And_Or and then Typ = Standard_Boolean then\n+            Rewrite (N,\n+              Make_Or_Else (Sloc (N),\n+                Left_Opnd  => Relocate_Node (Left_Opnd (N)),\n+                Right_Opnd => Relocate_Node (Right_Opnd (N))));\n+            Analyze_And_Resolve (N, Typ);\n+\n+         --  Otherwise, adjust conditions\n+\n+         else\n+            Adjust_Condition (Left_Opnd (N));\n+            Adjust_Condition (Right_Opnd (N));\n+            Set_Etype (N, Standard_Boolean);\n+            Adjust_Result_Type (N, Typ);\n+         end if;\n       end if;\n    end Expand_N_Op_Or;\n "}, {"sha": "e0810029314a046d9ad3e7794635460fd5a48e7b", "filename": "gcc/ada/freeze.adb", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6a2afd139d8a7719f2ce49028f23a781a25d9093/gcc%2Fada%2Ffreeze.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6a2afd139d8a7719f2ce49028f23a781a25d9093/gcc%2Fada%2Ffreeze.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ffreeze.adb?ref=6a2afd139d8a7719f2ce49028f23a781a25d9093", "patch": "@@ -2554,6 +2554,7 @@ package body Freeze is\n                           and then Convention (F_Type) = Convention_Ada\n                           and then not Has_Warnings_Off (F_Type)\n                           and then not Has_Size_Clause (F_Type)\n+                          and then VM_Target = No_VM\n                         then\n                            Error_Msg_N\n                              (\"& is an 8-bit Ada Boolean?\", Formal);\n@@ -2682,6 +2683,7 @@ package body Freeze is\n \n                         elsif Root_Type (R_Type) = Standard_Boolean\n                           and then Convention (R_Type) = Convention_Ada\n+                          and then VM_Target = No_VM\n                           and then not Has_Warnings_Off (E)\n                           and then not Has_Warnings_Off (R_Type)\n                           and then not Has_Size_Clause (R_Type)"}, {"sha": "b79b87a197e93b7bbade24aa5323ee8d73a7621e", "filename": "gcc/ada/gnat_rm.texi", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6a2afd139d8a7719f2ce49028f23a781a25d9093/gcc%2Fada%2Fgnat_rm.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6a2afd139d8a7719f2ce49028f23a781a25d9093/gcc%2Fada%2Fgnat_rm.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnat_rm.texi?ref=6a2afd139d8a7719f2ce49028f23a781a25d9093", "patch": "@@ -253,6 +253,7 @@ Implementation Defined Attributes\n * Passed_By_Reference::\n * Pool_Address::\n * Range_Length::\n+* Result::\n * Safe_Emax::\n * Safe_Large::\n * Small::\n@@ -5423,6 +5424,7 @@ consideration, you should minimize the use of these attributes.\n * Passed_By_Reference::\n * Pool_Address::\n * Range_Length::\n+* Result::\n * Safe_Emax::\n * Safe_Large::\n * Small::\n@@ -6074,6 +6076,16 @@ range).  The result is static for static subtypes.  @code{Range_Length}\n applied to the index subtype of a one dimensional array always gives the\n same result as @code{Range} applied to the array itself.\n \n+@node Result\n+@unnumberedsec Result\n+@findex Result\n+@noindent\n+@code{@var{function}'Result} can only be used with in a Postcondition pragma\n+for a function. The prefix must be the name of the corresponding function. This\n+is used to refer to the result of the function in the postcondition expression.\n+For a further discussion of the use of this attribute and examples of its use,\n+see the description of pragma Postcondition.\n+\n @node Safe_Emax\n @unnumberedsec Safe_Emax\n @cindex Ada 83 attributes"}, {"sha": "eb19250ac255f4923ae1b5c6383ed46b9b02ddc3", "filename": "gcc/ada/gnatlink.adb", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6a2afd139d8a7719f2ce49028f23a781a25d9093/gcc%2Fada%2Fgnatlink.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6a2afd139d8a7719f2ce49028f23a781a25d9093/gcc%2Fada%2Fgnatlink.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnatlink.adb?ref=6a2afd139d8a7719f2ce49028f23a781a25d9093", "patch": "@@ -445,8 +445,7 @@ procedure Gnatlink is\n                            Exit_With_Error (\"Missing argument for -o\");\n                         end if;\n \n-                        Output_File_Name :=\n-                          new String'(Executable_Name (Argument (Next_Arg)));\n+                        Output_File_Name := new String'(Argument (Next_Arg));\n \n                      when 'R' =>\n                         Opt.Run_Path_Option := False;"}, {"sha": "16e2b109b3542394ef61485b45f0c1a12c85fb83", "filename": "gcc/ada/opt.ads", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6a2afd139d8a7719f2ce49028f23a781a25d9093/gcc%2Fada%2Fopt.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6a2afd139d8a7719f2ce49028f23a781a25d9093/gcc%2Fada%2Fopt.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fopt.ads?ref=6a2afd139d8a7719f2ce49028f23a781a25d9093", "patch": "@@ -1042,6 +1042,10 @@ package Opt is\n    --  for GNATBIND and to False when using the -static option. The value of\n    --  this flag is set by Gnatbind.Scan_Bind_Arg.\n \n+   Short_Circuit_And_Or : Boolean := False;\n+   --  GNAT\n+   --  Set True if a pragma Short_Circuit_And_Or applies to the current unit.\n+\n    Sprint_Line_Limit : Nat := 72;\n    --  Limit values for chopping long lines in Sprint output, can be reset\n    --  by use of NNN parameter with -gnatG or -gnatD switches."}, {"sha": "67756900b293a6710007c7628c5451a4978184ff", "filename": "gcc/ada/par-prag.adb", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6a2afd139d8a7719f2ce49028f23a781a25d9093/gcc%2Fada%2Fpar-prag.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6a2afd139d8a7719f2ce49028f23a781a25d9093/gcc%2Fada%2Fpar-prag.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fpar-prag.adb?ref=6a2afd139d8a7719f2ce49028f23a781a25d9093", "patch": "@@ -1171,6 +1171,7 @@ begin\n            Pragma_Share_Generic                 |\n            Pragma_Shared                        |\n            Pragma_Shared_Passive                |\n+           Pragma_Short_Circuit_And_Or          |\n            Pragma_Storage_Size                  |\n            Pragma_Storage_Unit                  |\n            Pragma_Static_Elaboration_Desired    |"}, {"sha": "64907fb3052c5820454f19965aed1078db39dc1c", "filename": "gcc/ada/s-osinte-aix.ads", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6a2afd139d8a7719f2ce49028f23a781a25d9093/gcc%2Fada%2Fs-osinte-aix.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6a2afd139d8a7719f2ce49028f23a781a25d9093/gcc%2Fada%2Fs-osinte-aix.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-osinte-aix.ads?ref=6a2afd139d8a7719f2ce49028f23a781a25d9093", "patch": "@@ -7,7 +7,7 @@\n --                                  S p e c                                 --\n --                                                                          --\n --             Copyright (C) 1991-1994, Florida State University            --\n---          Copyright (C) 1995-2008, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1995-2009, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNARL is free software; you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -310,7 +310,7 @@ package System.OS_Interface is\n    function Get_Page_Size return size_t;\n    function Get_Page_Size return Address;\n    pragma Import (C, Get_Page_Size, \"getpagesize\");\n-   --  Returns the size of a page, or 0 if this is not relevant on this target\n+   --  Returns the size of a page\n \n    PROT_NONE  : constant := 0;\n    PROT_READ  : constant := 1;"}, {"sha": "ed2f93124a0986c46f8db059682c257d74da5801", "filename": "gcc/ada/s-osinte-darwin.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6a2afd139d8a7719f2ce49028f23a781a25d9093/gcc%2Fada%2Fs-osinte-darwin.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6a2afd139d8a7719f2ce49028f23a781a25d9093/gcc%2Fada%2Fs-osinte-darwin.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-osinte-darwin.ads?ref=6a2afd139d8a7719f2ce49028f23a781a25d9093", "patch": "@@ -294,7 +294,7 @@ package System.OS_Interface is\n    function Get_Page_Size return size_t;\n    function Get_Page_Size return System.Address;\n    pragma Import (C, Get_Page_Size, \"getpagesize\");\n-   --  Returns the size of a page, or 0 if this is not relevant on this target\n+   --  Returns the size of a page\n \n    PROT_NONE  : constant := 0;\n    PROT_READ  : constant := 1;"}, {"sha": "c8378292168e196ed3b228acbc6d1c3b840ddb5c", "filename": "gcc/ada/s-osinte-freebsd.ads", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6a2afd139d8a7719f2ce49028f23a781a25d9093/gcc%2Fada%2Fs-osinte-freebsd.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6a2afd139d8a7719f2ce49028f23a781a25d9093/gcc%2Fada%2Fs-osinte-freebsd.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-osinte-freebsd.ads?ref=6a2afd139d8a7719f2ce49028f23a781a25d9093", "patch": "@@ -7,7 +7,7 @@\n --                                   S p e c                                --\n --                                                                          --\n --             Copyright (C) 1991-1994, Florida State University            --\n---          Copyright (C) 1995-2008, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1995-2009, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNARL is free software; you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -326,7 +326,7 @@ package System.OS_Interface is\n    function Get_Page_Size return size_t;\n    function Get_Page_Size return Address;\n    pragma Import (C, Get_Page_Size, \"getpagesize\");\n-   --  returns the size of a page, or 0 if this is not relevant on this target\n+   --  Returns the size of a page\n \n    PROT_NONE  : constant := 0;\n    PROT_READ  : constant := 1;"}, {"sha": "ea31697a4ed98d685536988d6081ba6bb05e4743", "filename": "gcc/ada/s-osinte-hpux.ads", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6a2afd139d8a7719f2ce49028f23a781a25d9093/gcc%2Fada%2Fs-osinte-hpux.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6a2afd139d8a7719f2ce49028f23a781a25d9093/gcc%2Fada%2Fs-osinte-hpux.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-osinte-hpux.ads?ref=6a2afd139d8a7719f2ce49028f23a781a25d9093", "patch": "@@ -7,7 +7,7 @@\n --                                  S p e c                                 --\n --                                                                          --\n --               Copyright (C) 1991-1994, Florida State University          --\n---            Copyright (C) 1995-2008, Free Software Foundation, Inc.       --\n+--            Copyright (C) 1995-2009, Free Software Foundation, Inc.       --\n --                                                                          --\n -- GNARL is free software; you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -300,7 +300,7 @@ package System.OS_Interface is\n    function Get_Page_Size return size_t;\n    function Get_Page_Size return Address;\n    pragma Import (C, Get_Page_Size, \"getpagesize\");\n-   --  Returns the size of a page, or 0 if this is not relevant on this target\n+   --  Returns the size of a page\n \n    PROT_NONE  : constant := 0;\n    PROT_READ  : constant := 1;"}, {"sha": "517ed52c100e37d7754d9fa94e789179cf7b67a6", "filename": "gcc/ada/s-osinte-solaris-posix.ads", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6a2afd139d8a7719f2ce49028f23a781a25d9093/gcc%2Fada%2Fs-osinte-solaris-posix.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6a2afd139d8a7719f2ce49028f23a781a25d9093/gcc%2Fada%2Fs-osinte-solaris-posix.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-osinte-solaris-posix.ads?ref=6a2afd139d8a7719f2ce49028f23a781a25d9093", "patch": "@@ -7,7 +7,7 @@\n --                                  S p e c                                 --\n --                                                                          --\n --             Copyright (C) 1991-1994, Florida State University            --\n---          Copyright (C) 1995-2008, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1995-2009, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNARL is free software; you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -294,7 +294,7 @@ package System.OS_Interface is\n    function Get_Page_Size return size_t;\n    function Get_Page_Size return Address;\n    pragma Import (C, Get_Page_Size, \"getpagesize\");\n-   --  Returns the size of a page, or 0 if this is not relevant on this target\n+   --  Returns the size of a page\n \n    PROT_NONE  : constant := 0;\n    PROT_READ  : constant := 1;"}, {"sha": "e893eedb3993eff74e4de335bdcb0c92eb80af0c", "filename": "gcc/ada/s-osinte-tru64.ads", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6a2afd139d8a7719f2ce49028f23a781a25d9093/gcc%2Fada%2Fs-osinte-tru64.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6a2afd139d8a7719f2ce49028f23a781a25d9093/gcc%2Fada%2Fs-osinte-tru64.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-osinte-tru64.ads?ref=6a2afd139d8a7719f2ce49028f23a781a25d9093", "patch": "@@ -7,7 +7,7 @@\n --                                  S p e c                                 --\n --                                                                          --\n --             Copyright (C) 1991-1994, Florida State University            --\n---          Copyright (C) 1995-2008, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1995-2009, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNARL is free software; you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -286,7 +286,7 @@ package System.OS_Interface is\n    function Get_Page_Size return size_t;\n    function Get_Page_Size return Address;\n    pragma Import (C, Get_Page_Size, \"getpagesize\");\n-   --  Returns the size of a page, or 0 if this is not relevant on this target\n+   --  Returns the size of a page\n \n    PROT_NONE  : constant := 0;\n    PROT_READ  : constant := 1;"}, {"sha": "809665690dec7426c15fcdede4c92ca69d4e902f", "filename": "gcc/ada/sem_prag.adb", "status": "modified", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6a2afd139d8a7719f2ce49028f23a781a25d9093/gcc%2Fada%2Fsem_prag.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6a2afd139d8a7719f2ce49028f23a781a25d9093/gcc%2Fada%2Fsem_prag.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_prag.adb?ref=6a2afd139d8a7719f2ce49028f23a781a25d9093", "patch": "@@ -10658,8 +10658,24 @@ package body Sem_Prag is\n          when Pragma_Reviewable =>\n             Check_Ada_83_Warning;\n             Check_Arg_Count (0);\n+\n+            --  Call dummy debugging function rv. This is done to assist front\n+            --  end debugging. By placing a Reviewable pragma in the source\n+            --  program, a breakpoint on rv catches this place in the source,\n+            --  allowing convenient stepping to the point of interest.\n+\n             rv;\n \n+         --------------------------\n+         -- Short_Circuit_And_Or --\n+         --------------------------\n+\n+         when Pragma_Short_Circuit_And_Or =>\n+            GNAT_Pragma;\n+            Check_Arg_Count (0);\n+            Check_Valid_Configuration_Pragma;\n+            Short_Circuit_And_Or := True;\n+\n          -------------------\n          -- Share_Generic --\n          -------------------\n@@ -12522,6 +12538,7 @@ package body Sem_Prag is\n       Pragma_Restriction_Warnings          => -1,\n       Pragma_Restrictions                  => -1,\n       Pragma_Reviewable                    => -1,\n+      Pragma_Short_Circuit_And_Or          => -1,\n       Pragma_Share_Generic                 => -1,\n       Pragma_Shared                        => -1,\n       Pragma_Shared_Passive                => -1,"}, {"sha": "8195cdbb5e27d9f9dc9801c9c01717592cfc10ba", "filename": "gcc/ada/snames.ads-tmpl", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6a2afd139d8a7719f2ce49028f23a781a25d9093/gcc%2Fada%2Fsnames.ads-tmpl", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6a2afd139d8a7719f2ce49028f23a781a25d9093/gcc%2Fada%2Fsnames.ads-tmpl", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsnames.ads-tmpl?ref=6a2afd139d8a7719f2ce49028f23a781a25d9093", "patch": "@@ -383,6 +383,7 @@ package Snames is\n    Name_Restrictions                   : constant Name_Id := N + $;\n    Name_Restriction_Warnings           : constant Name_Id := N + $; -- GNAT\n    Name_Reviewable                     : constant Name_Id := N + $;\n+   Name_Short_Circuit_And_Or           : constant Name_Id := N + $; -- GNAT\n    Name_Source_File_Name               : constant Name_Id := N + $; -- GNAT\n    Name_Source_File_Name_Project       : constant Name_Id := N + $; -- GNAT\n    Name_Style_Checks                   : constant Name_Id := N + $; -- GNAT\n@@ -1454,6 +1455,7 @@ package Snames is\n       Pragma_Restrictions,\n       Pragma_Restriction_Warnings,\n       Pragma_Reviewable,\n+      Pragma_Short_Circuit_And_Or,\n       Pragma_Source_File_Name,\n       Pragma_Source_File_Name_Project,\n       Pragma_Style_Checks,"}, {"sha": "7ad11e041e92ebc7eb4c00f0d109b2c23ce07f54", "filename": "gcc/ada/sprint.adb", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6a2afd139d8a7719f2ce49028f23a781a25d9093/gcc%2Fada%2Fsprint.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6a2afd139d8a7719f2ce49028f23a781a25d9093/gcc%2Fada%2Fsprint.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsprint.adb?ref=6a2afd139d8a7719f2ce49028f23a781a25d9093", "patch": "@@ -35,6 +35,7 @@ with Nlists;   use Nlists;\n with Opt;      use Opt;\n with Output;   use Output;\n with Rtsfind;  use Rtsfind;\n+with Sem_Eval; use Sem_Eval;\n with Sem_Util; use Sem_Util;\n with Sinfo;    use Sinfo;\n with Sinput;   use Sinput;\n@@ -526,7 +527,7 @@ package body Sprint is\n          Write_Eol;\n       end Underline;\n \n-   --  Start of processing for Tree_Dump\n+   --  Start of processing for Source_Dump\n \n    begin\n       Dump_Generated_Only := Debug_Flag_G or\n@@ -3961,7 +3962,7 @@ package body Sprint is\n                   when E_String_Literal_Subtype =>\n                      declare\n                         LB  : constant Uint :=\n-                                Intval (String_Literal_Low_Bound (Typ));\n+                                Expr_Value (String_Literal_Low_Bound (Typ));\n                         Len : constant Uint :=\n                                 String_Literal_Length (Typ);\n                      begin"}]}