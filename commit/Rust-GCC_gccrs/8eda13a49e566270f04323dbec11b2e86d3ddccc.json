{"sha": "8eda13a49e566270f04323dbec11b2e86d3ddccc", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGVkYTEzYTQ5ZTU2NjI3MGYwNDMyM2RiZWMxMWIyZTg2ZDNkZGNjYw==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@adacore.com", "date": "2020-02-14T16:50:12Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "derodat@adacore.com", "date": "2020-06-08T07:51:09Z"}, "message": "[Ada] Fix handling of 'Enum_Rep and renamings\n\n2020-06-08  Arnaud Charlet  <charlet@adacore.com>\n\ngcc/ada/\n\n\t* sem_eval.adb (Eval_Type_Conversion): Fix handling of\n\tenumeration to integer conversions.\n\t* exp_attr.adb (Expand_N_Attribute_Reference\n\t[Attribute_Enum_Rep]): Remove special casing for first-level\n\trenaming, best left to the general folding mechanism via\n\tEval_Type_Conversion.", "tree": {"sha": "9b7dc49e241f354e1856a5c3487e048b5d740e12", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9b7dc49e241f354e1856a5c3487e048b5d740e12"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8eda13a49e566270f04323dbec11b2e86d3ddccc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8eda13a49e566270f04323dbec11b2e86d3ddccc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8eda13a49e566270f04323dbec11b2e86d3ddccc", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8eda13a49e566270f04323dbec11b2e86d3ddccc/comments", "author": {"login": "ArnaudCharlet", "id": 30291825, "node_id": "MDQ6VXNlcjMwMjkxODI1", "avatar_url": "https://avatars.githubusercontent.com/u/30291825?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ArnaudCharlet", "html_url": "https://github.com/ArnaudCharlet", "followers_url": "https://api.github.com/users/ArnaudCharlet/followers", "following_url": "https://api.github.com/users/ArnaudCharlet/following{/other_user}", "gists_url": "https://api.github.com/users/ArnaudCharlet/gists{/gist_id}", "starred_url": "https://api.github.com/users/ArnaudCharlet/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ArnaudCharlet/subscriptions", "organizations_url": "https://api.github.com/users/ArnaudCharlet/orgs", "repos_url": "https://api.github.com/users/ArnaudCharlet/repos", "events_url": "https://api.github.com/users/ArnaudCharlet/events{/privacy}", "received_events_url": "https://api.github.com/users/ArnaudCharlet/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pmderodat", "id": 758452, "node_id": "MDQ6VXNlcjc1ODQ1Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/758452?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pmderodat", "html_url": "https://github.com/pmderodat", "followers_url": "https://api.github.com/users/pmderodat/followers", "following_url": "https://api.github.com/users/pmderodat/following{/other_user}", "gists_url": "https://api.github.com/users/pmderodat/gists{/gist_id}", "starred_url": "https://api.github.com/users/pmderodat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pmderodat/subscriptions", "organizations_url": "https://api.github.com/users/pmderodat/orgs", "repos_url": "https://api.github.com/users/pmderodat/repos", "events_url": "https://api.github.com/users/pmderodat/events{/privacy}", "received_events_url": "https://api.github.com/users/pmderodat/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "bbe7d67f5ffdadeee67e0060bde212d09e38a704", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bbe7d67f5ffdadeee67e0060bde212d09e38a704", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bbe7d67f5ffdadeee67e0060bde212d09e38a704"}], "stats": {"total": 23, "additions": 6, "deletions": 17}, "files": [{"sha": "c282e767ad60d1096213df2df73b165570710891", "filename": "gcc/ada/exp_attr.adb", "status": "modified", "additions": 0, "deletions": 15, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8eda13a49e566270f04323dbec11b2e86d3ddccc/gcc%2Fada%2Fexp_attr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8eda13a49e566270f04323dbec11b2e86d3ddccc/gcc%2Fada%2Fexp_attr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_attr.adb?ref=8eda13a49e566270f04323dbec11b2e86d3ddccc", "patch": "@@ -3168,21 +3168,6 @@ package body Exp_Attr is\n             Rewrite (N,\n               Make_Integer_Literal (Loc, Enumeration_Rep (Entity (Expr))));\n \n-         --  If this is a renaming of a literal, recover the representation\n-         --  of the original. If it renames an expression there is nothing to\n-         --  fold.\n-\n-         elsif Nkind (Expr) in N_Has_Entity\n-           and then Ekind (Entity (Expr)) = E_Constant\n-           and then Present (Renamed_Object (Entity (Expr)))\n-           and then Is_Entity_Name (Renamed_Object (Entity (Expr)))\n-           and then Ekind (Entity (Renamed_Object (Entity (Expr)))) =\n-                      E_Enumeration_Literal\n-         then\n-            Rewrite (N,\n-              Make_Integer_Literal (Loc,\n-                Enumeration_Rep (Entity (Renamed_Object (Entity (Expr))))));\n-\n          --  If not constant-folded above, Enum_Type'Enum_Rep (X) or\n          --  X'Enum_Rep expands to\n "}, {"sha": "96d6b9315fffffb2d50834c9ae296511464fbafe", "filename": "gcc/ada/sem_eval.adb", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8eda13a49e566270f04323dbec11b2e86d3ddccc/gcc%2Fada%2Fsem_eval.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8eda13a49e566270f04323dbec11b2e86d3ddccc/gcc%2Fada%2Fsem_eval.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_eval.adb?ref=8eda13a49e566270f04323dbec11b2e86d3ddccc", "patch": "@@ -4031,8 +4031,13 @@ package body Sem_Eval is\n \n             --  Real to integer conversion\n \n-            else\n+            elsif To_Be_Treated_As_Real (Source_Type) then\n                Result := UR_To_Uint (Expr_Value_R (Operand));\n+\n+            --  Enumeration to integer conversion, aka 'Enum_Rep\n+\n+            else\n+               Result := Expr_Rep_Value (Operand);\n             end if;\n \n             --  If fixed-point type (Conversion_OK must be set), then the\n@@ -4076,7 +4081,6 @@ package body Sem_Eval is\n       if Is_Out_Of_Range (N, Etype (N), Assume_Valid => True) then\n          Out_Of_Range (N);\n       end if;\n-\n    end Eval_Type_Conversion;\n \n    -------------------"}]}