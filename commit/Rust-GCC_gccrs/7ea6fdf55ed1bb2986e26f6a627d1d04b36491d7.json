{"sha": "7ea6fdf55ed1bb2986e26f6a627d1d04b36491d7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6N2VhNmZkZjU1ZWQxYmIyOTg2ZTI2ZjZhNjI3ZDFkMDRiMzY0OTFkNw==", "commit": {"author": {"name": "Paolo Carlini", "email": "paolo.carlini@oracle.com", "date": "2008-11-01T22:09:43Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2008-11-01T22:09:43Z"}, "message": "PR libstdc++/37958 (cont again)\n\n2008-11-01  Paolo Carlini  <paolo.carlini@oracle.com>\n\n\tPR libstdc++/37958 (cont again)\n\t* include/bits/locale_facets.tcc (num_get<>::do_get(iter_type,\n\titer_type, ios_base&, ios_base::iostate&, bool&): Fix again.\n\t* testsuite/22_locale/num_get/get/char/37958.cc: Extend.\n\t* testsuite/22_locale/num_get/get/wchar_t/37958.cc: Likewise.\n\nFrom-SVN: r141523", "tree": {"sha": "002760662dc8aa7598c86bfa0285830e3502c513", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/002760662dc8aa7598c86bfa0285830e3502c513"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7ea6fdf55ed1bb2986e26f6a627d1d04b36491d7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7ea6fdf55ed1bb2986e26f6a627d1d04b36491d7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7ea6fdf55ed1bb2986e26f6a627d1d04b36491d7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7ea6fdf55ed1bb2986e26f6a627d1d04b36491d7/comments", "author": null, "committer": null, "parents": [{"sha": "6f6e26a8808c73f6603b3e64e2009c1c290058d8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6f6e26a8808c73f6603b3e64e2009c1c290058d8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6f6e26a8808c73f6603b3e64e2009c1c290058d8"}], "stats": {"total": 92, "additions": 84, "deletions": 8}, "files": [{"sha": "18fd23283d3efde7a72f2cde82f0c0e7e9c31f02", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ea6fdf55ed1bb2986e26f6a627d1d04b36491d7/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ea6fdf55ed1bb2986e26f6a627d1d04b36491d7/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=7ea6fdf55ed1bb2986e26f6a627d1d04b36491d7", "patch": "@@ -1,3 +1,11 @@\n+2008-11-01  Paolo Carlini  <paolo.carlini@oracle.com>\n+\n+\tPR libstdc++/37958 (cont again)\n+\t* include/bits/locale_facets.tcc (num_get<>::do_get(iter_type,\n+\titer_type, ios_base&, ios_base::iostate&, bool&): Fix again.\n+\t* testsuite/22_locale/num_get/get/char/37958.cc: Extend.\n+\t* testsuite/22_locale/num_get/get/wchar_t/37958.cc: Likewise.\n+\n 2008-11-01  Paolo Carlini  <paolo.carlini@oracle.com>\n \n \t* include/bits/locale_facets.tcc (num_get<>::do_get(, long&),"}, {"sha": "36a2d9b80c4a649cebd3246efd62e24aa7d43103", "filename": "libstdc++-v3/include/bits/locale_facets.tcc", "status": "modified", "additions": 12, "deletions": 6, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ea6fdf55ed1bb2986e26f6a627d1d04b36491d7/libstdc%2B%2B-v3%2Finclude%2Fbits%2Flocale_facets.tcc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ea6fdf55ed1bb2986e26f6a627d1d04b36491d7/libstdc%2B%2B-v3%2Finclude%2Fbits%2Flocale_facets.tcc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Flocale_facets.tcc?ref=7ea6fdf55ed1bb2986e26f6a627d1d04b36491d7", "patch": "@@ -606,11 +606,11 @@ _GLIBCXX_BEGIN_LDBL_NAMESPACE\n \n \t  bool __testf = true;\n \t  bool __testt = true;\n+\t  bool __donef = __lc->_M_falsename_size == 0;\n+\t  bool __donet = __lc->_M_truename_size == 0;\n \t  bool __testeof = false;\n-\t  size_t __n;\n-\t  const size_t __lim = std::max(__lc->_M_falsename_size,\n-\t\t\t\t\t__lc->_M_truename_size);\n-\t  for (__n = 0; __n < __lim; ++__n, ++__beg)\n+\t  size_t __n = 0;\n+\t  while (!__donef || !__donet)\n \t    {\n \t      if (__beg == __end)\n \t\t{\n@@ -620,10 +620,10 @@ _GLIBCXX_BEGIN_LDBL_NAMESPACE\n \n \t      const char_type __c = *__beg;\n \n-\t      if (__testf && __n < __lc->_M_falsename_size)\n+\t      if (!__donef)\n \t\t__testf = __c == __lc->_M_falsename[__n];\n \n-\t      if (__testt && __n < __lc->_M_truename_size)\n+\t      if (!__donet)\n \t\t__testt = __c == __lc->_M_truename[__n];\n \n \t      if (!__testt && !__testf)\n@@ -632,6 +632,12 @@ _GLIBCXX_BEGIN_LDBL_NAMESPACE\n \t      if ((!__testt && __n >= __lc->_M_falsename_size)\n \t\t  || (!__testf && __n >= __lc->_M_truename_size))\n \t\tbreak;\n+\n+\t      ++__n;\n+\t      ++__beg;\n+\n+\t      __donef = !__testf || __n >= __lc->_M_falsename_size;\n+\t      __donet = !__testt || __n >= __lc->_M_truename_size;\n \t    }\n \t  if (__testf && __n == __lc->_M_falsename_size && __n)\n \t    {"}, {"sha": "9f7a43c4c1e98e75f9dd090efcd16eb317eed12f", "filename": "libstdc++-v3/testsuite/22_locale/num_get/get/char/37958.cc", "status": "modified", "additions": 32, "deletions": 1, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ea6fdf55ed1bb2986e26f6a627d1d04b36491d7/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Fnum_get%2Fget%2Fchar%2F37958.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ea6fdf55ed1bb2986e26f6a627d1d04b36491d7/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Fnum_get%2Fget%2Fchar%2F37958.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Fnum_get%2Fget%2Fchar%2F37958.cc?ref=7ea6fdf55ed1bb2986e26f6a627d1d04b36491d7", "patch": "@@ -50,20 +50,36 @@ void test01()\n   \n   bool test __attribute__((unused)) = true;\n \n-  istringstream iss1, iss2, iss3;\n+  istringstream iss0, iss1, iss2, iss3;\n   iss1.imbue(locale(iss1.getloc(), new Punct1));\n   iss2.imbue(locale(iss2.getloc(), new Punct2));\n   iss3.imbue(locale(iss3.getloc(), new Punct3));\n+  const num_get<char>& ng0 = use_facet<num_get<char> >(iss0.getloc());\n   const num_get<char>& ng1 = use_facet<num_get<char> >(iss1.getloc());\n   const num_get<char>& ng2 = use_facet<num_get<char> >(iss2.getloc());\n   const num_get<char>& ng3 = use_facet<num_get<char> >(iss3.getloc());\n \n   ios_base::iostate err = ios_base::goodbit;\n   iterator_type end;\n+  bool b0 = false;\n   bool b1 = false;\n   bool b2 = false;\n   bool b3 = true;\n \n+  iss0.str(\"true\");\n+  iss0.setf(ios_base::boolalpha);\n+  err = ios_base::goodbit;\n+  end = ng0.get(iss0.rdbuf(), 0, iss0, err, b0);\n+  VERIFY( err == ios_base::goodbit );\n+  VERIFY( b0 == true );\n+\n+  iss0.str(\"false\");\n+  iss0.clear();\n+  err = ios_base::goodbit;\n+  end = ng0.get(iss0.rdbuf(), 0, iss0, err, b0);\n+  VERIFY( err == ios_base::goodbit );\n+  VERIFY( b0 == false );\n+\n   iss1.str(\"a\");\n   iss1.setf(ios_base::boolalpha);\n   err = ios_base::goodbit;\n@@ -93,13 +109,28 @@ void test01()\n   VERIFY( err == ios_base::goodbit );\n   VERIFY( b2 == true );\n \n+  iss2.str(\"0\");\n+  iss2.clear();\n+  err = ios_base::goodbit;\n+  end = ng2.get(iss2.rdbuf(), 0, iss2, err, b2);\n+  VERIFY( err == ios_base::goodbit );\n+  VERIFY( b2 == false );\n+\n   iss3.str(\"blah\");\n   iss3.setf(ios_base::boolalpha);\n   err = ios_base::goodbit;\n   end = ng3.get(iss3.rdbuf(), 0, iss3, err, b3);\n   VERIFY( err == ios_base::failbit );\n   VERIFY( b3 == false );\n   VERIFY( *end == 'b' );\n+\n+  iss3.str(\"\");\n+  iss3.clear();\n+  b3 = true;\n+  err = ios_base::goodbit;\n+  end = ng3.get(iss3.rdbuf(), 0, iss3, err, b3);\n+  VERIFY( err == ios_base::failbit );\n+  VERIFY( b3 == false );\n }\n \n int main()"}, {"sha": "b36573697a400c561f491dc8e03bc46f5714297a", "filename": "libstdc++-v3/testsuite/22_locale/num_get/get/wchar_t/37958.cc", "status": "modified", "additions": 32, "deletions": 1, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ea6fdf55ed1bb2986e26f6a627d1d04b36491d7/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Fnum_get%2Fget%2Fwchar_t%2F37958.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ea6fdf55ed1bb2986e26f6a627d1d04b36491d7/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Fnum_get%2Fget%2Fwchar_t%2F37958.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Fnum_get%2Fget%2Fwchar_t%2F37958.cc?ref=7ea6fdf55ed1bb2986e26f6a627d1d04b36491d7", "patch": "@@ -50,20 +50,36 @@ void test01()\n   \n   bool test __attribute__((unused)) = true;\n \n-  wistringstream iss1, iss2, iss3;\n+  wistringstream iss0, iss1, iss2, iss3;\n   iss1.imbue(locale(iss1.getloc(), new Punct1));\n   iss2.imbue(locale(iss2.getloc(), new Punct2));\n   iss3.imbue(locale(iss3.getloc(), new Punct3));\n+  const num_get<wchar_t>& ng0 = use_facet<num_get<wchar_t> >(iss0.getloc());\n   const num_get<wchar_t>& ng1 = use_facet<num_get<wchar_t> >(iss1.getloc());\n   const num_get<wchar_t>& ng2 = use_facet<num_get<wchar_t> >(iss2.getloc());\n   const num_get<wchar_t>& ng3 = use_facet<num_get<wchar_t> >(iss3.getloc());\n \n   ios_base::iostate err = ios_base::goodbit;\n   iterator_type end;\n+  bool b0 = false;\n   bool b1 = false;\n   bool b2 = false;\n   bool b3 = true;\n \n+  iss0.str(L\"true\");\n+  iss0.setf(ios_base::boolalpha);\n+  err = ios_base::goodbit;\n+  end = ng0.get(iss0.rdbuf(), 0, iss0, err, b0);\n+  VERIFY( err == ios_base::goodbit );\n+  VERIFY( b0 == true );\n+\n+  iss0.str(L\"false\");\n+  iss0.clear();\n+  err = ios_base::goodbit;\n+  end = ng0.get(iss0.rdbuf(), 0, iss0, err, b0);\n+  VERIFY( err == ios_base::goodbit );\n+  VERIFY( b0 == false );\n+\n   iss1.str(L\"a\");\n   iss1.setf(ios_base::boolalpha);\n   err = ios_base::goodbit;\n@@ -93,13 +109,28 @@ void test01()\n   VERIFY( err == ios_base::goodbit );\n   VERIFY( b2 == true );\n \n+  iss2.str(L\"0\");\n+  iss2.clear();\n+  err = ios_base::goodbit;\n+  end = ng2.get(iss2.rdbuf(), 0, iss2, err, b2);\n+  VERIFY( err == ios_base::goodbit );\n+  VERIFY( b2 == false );\n+\n   iss3.str(L\"blah\");\n   iss3.setf(ios_base::boolalpha);\n   err = ios_base::goodbit;\n   end = ng3.get(iss3.rdbuf(), 0, iss3, err, b3);\n   VERIFY( err == ios_base::failbit );\n   VERIFY( b3 == false );\n   VERIFY( *end == L'b' );\n+\n+  iss3.str(L\"\");\n+  iss3.clear();\n+  b3 = true;\n+  err = ios_base::goodbit;\n+  end = ng3.get(iss3.rdbuf(), 0, iss3, err, b3);\n+  VERIFY( err == ios_base::failbit );\n+  VERIFY( b3 == false );\n }\n \n int main()"}]}