{"sha": "b1cbe78c098fb70428d66647274f39860aa95977", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjFjYmU3OGMwOThmYjcwNDI4ZDY2NjQ3Mjc0ZjM5ODYwYWE5NTk3Nw==", "commit": {"author": {"name": "Neil Booth", "email": "neil@daikokuya.co.uk", "date": "2003-03-02T20:00:36Z"}, "committer": {"name": "Neil Booth", "email": "neil@gcc.gnu.org", "date": "2003-03-02T20:00:36Z"}, "message": "toplev.c (aux_base_name): Moved from toplev.h.\n\n\t* toplev.c (aux_base_name): Moved from toplev.h.\n\t(filename): Constify.\n\t(lang_dependent_init): Don't duplicate name.\n\t(process_options): Set aux_base_name here, not...\n\t(do_compile): ...here.  Change protoype.\n\t(toplev_main): Move some code from do_compile.\n\t* toplev.h: Remove aux_base_name.\n\nFrom-SVN: r63676", "tree": {"sha": "a0563d68447b1990b19797cc39b8f4f2bf90252e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a0563d68447b1990b19797cc39b8f4f2bf90252e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b1cbe78c098fb70428d66647274f39860aa95977", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b1cbe78c098fb70428d66647274f39860aa95977", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b1cbe78c098fb70428d66647274f39860aa95977", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b1cbe78c098fb70428d66647274f39860aa95977/comments", "author": {"login": "neilb-xx", "id": 160762, "node_id": "MDQ6VXNlcjE2MDc2Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/160762?v=4", "gravatar_id": "", "url": "https://api.github.com/users/neilb-xx", "html_url": "https://github.com/neilb-xx", "followers_url": "https://api.github.com/users/neilb-xx/followers", "following_url": "https://api.github.com/users/neilb-xx/following{/other_user}", "gists_url": "https://api.github.com/users/neilb-xx/gists{/gist_id}", "starred_url": "https://api.github.com/users/neilb-xx/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/neilb-xx/subscriptions", "organizations_url": "https://api.github.com/users/neilb-xx/orgs", "repos_url": "https://api.github.com/users/neilb-xx/repos", "events_url": "https://api.github.com/users/neilb-xx/events{/privacy}", "received_events_url": "https://api.github.com/users/neilb-xx/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "92d53a9a80e3641470505536197973796408154e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/92d53a9a80e3641470505536197973796408154e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/92d53a9a80e3641470505536197973796408154e"}], "stats": {"total": 71, "additions": 40, "deletions": 31}, "files": [{"sha": "7f92216e79e7cd12613edafd04595c171ff5d28b", "filename": "gcc/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b1cbe78c098fb70428d66647274f39860aa95977/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b1cbe78c098fb70428d66647274f39860aa95977/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=b1cbe78c098fb70428d66647274f39860aa95977", "patch": "@@ -1,3 +1,13 @@\n+2003-03-02  Neil Booth  <neil@daikokuya.co.uk>\n+\n+\t* toplev.c (aux_base_name): Moved from toplev.h.\n+\t(filename): Constify.\n+\t(lang_dependent_init): Don't duplicate name.\n+\t(process_options): Set aux_base_name here, not...\n+\t(do_compile): ...here.  Change protoype.\n+\t(toplev_main): Move some code from do_compile.\n+\t* toplev.h: Remove aux_base_name.\n+\n 2003-03-02  Kazu Hirata  <kazu@cs.umass.edu>\n \n \t* config/h8300/h8300-protos.h: Add a prototype for"}, {"sha": "4135fff54a813f2c29c551f070b302456aeeb1f1", "filename": "gcc/toplev.c", "status": "modified", "additions": 30, "deletions": 30, "changes": 60, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b1cbe78c098fb70428d66647274f39860aa95977/gcc%2Ftoplev.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b1cbe78c098fb70428d66647274f39860aa95977/gcc%2Ftoplev.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftoplev.c?ref=b1cbe78c098fb70428d66647274f39860aa95977", "patch": "@@ -103,7 +103,7 @@ extern void reg_alloc PARAMS ((void));\n \n static void general_init PARAMS ((char *));\n static void parse_options_and_default_flags PARAMS ((int, char **));\n-static void do_compile PARAMS ((void));\n+static void do_compile PARAMS ((int));\n static void process_options PARAMS ((void));\n static void backend_init PARAMS ((void));\n static int lang_dependent_init PARAMS ((const char *));\n@@ -176,7 +176,7 @@ const char *dump_base_name;\n \n /* Name to use as a base for auxiliary output files.  */\n \n-const char *aux_base_name;\n+static const char *aux_base_name;\n \n /* Format to use to print dumpfile index value */\n #ifndef DUMPFILE_FORMAT\n@@ -321,7 +321,7 @@ static void close_dump_file PARAMS ((enum dump_file_index,\n int rtl_dump_and_exit;\n int flag_print_asm_name;\n static int version_flag;\n-static char *filename;\n+static const char *filename;\n enum graph_dump_types graph_dump_format;\n \n /* Name for output file of assembly code, specified with -o.  */\n@@ -5144,6 +5144,19 @@ process_options ()\n   OVERRIDE_OPTIONS;\n #endif\n \n+  /* Set aux_base_name if not already set.  */\n+  if (aux_base_name)\n+    ;\n+  else if (filename)\n+    {\n+      char *name = xstrdup (lbasename (filename));\n+      \n+      strip_off_ending (name, strlen (name));\n+      aux_base_name = name;\n+    }\n+  else\n+    aux_base_name = \"gccaux\";\n+\n   /* Set up the align_*_log variables, defaulting them to 1 if they\n      were still unset.  */\n   if (align_loops <= 0) align_loops = 1;\n@@ -5376,8 +5389,6 @@ lang_dependent_init (name)\n   if (name == NULL)\n     return 0;\n \n-  /* Is this duplication necessary?  */\n-  name = ggc_strdup (name);\n   main_input_filename = input_filename = name;\n   init_asm_output (name);\n \n@@ -5472,31 +5483,9 @@ finalize ()\n \f\n /* Initialize the compiler, and compile the input file.  */\n static void\n-do_compile ()\n+do_compile (no_backend)\n+     int no_backend;\n {\n-  /* All command line options have been parsed; allow the front end to\n-     perform consistency checks, etc.  */\n-  bool no_backend = (*lang_hooks.post_options) ();\n-\n-  /* The bulk of command line switch processing.  */\n-  process_options ();\n-\n-  /* If an error has already occurred, give up.  */\n-  if (errorcount)\n-    return;\n-\n-  if (aux_base_name)\n-    /*NOP*/;\n-  else if (filename)\n-    {\n-      char *name = xstrdup (lbasename (filename));\n-\n-      aux_base_name = name;\n-      strip_off_ending (name, strlen (name));\n-    }\n-  else\n-    aux_base_name = \"gccaux\";\n-\n   /* We cannot start timing until after options are processed since that\n      says if we run timers or not.  */\n   init_timevar ();\n@@ -5538,7 +5527,18 @@ toplev_main (argc, argv)\n \n   /* Exit early if we can (e.g. -help).  */\n   if (!exit_after_options)\n-    do_compile ();\n+    {\n+      /* All command line options have been parsed; allow the front\n+\t end to perform consistency checks, etc.  */\n+      bool no_backend = (*lang_hooks.post_options) ();\n+\n+      /* The bulk of command line switch processing.  */\n+      process_options ();\n+\n+      /* Don't do any more if an error has already occurred.  */\n+      if (!errorcount)\n+\tdo_compile (no_backend);\n+    }\n \n   if (errorcount || sorrycount)\n     return (FATAL_EXIT_CODE);"}, {"sha": "de13bc249ffe85349c77e1bd91fbf42061fd0667", "filename": "gcc/toplev.h", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b1cbe78c098fb70428d66647274f39860aa95977/gcc%2Ftoplev.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b1cbe78c098fb70428d66647274f39860aa95977/gcc%2Ftoplev.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftoplev.h?ref=b1cbe78c098fb70428d66647274f39860aa95977", "patch": "@@ -108,7 +108,6 @@ extern void check_global_declarations   PARAMS ((union tree_node **, int));\n \n extern const char *progname;\n extern const char *dump_base_name;\n-extern const char *aux_base_name;\n \n extern int target_flags_explicit;\n "}]}