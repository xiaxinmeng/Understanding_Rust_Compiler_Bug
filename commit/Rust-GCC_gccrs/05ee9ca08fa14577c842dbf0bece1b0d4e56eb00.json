{"sha": "05ee9ca08fa14577c842dbf0bece1b0d4e56eb00", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDVlZTljYTA4ZmExNDU3N2M4NDJkYmYwYmVjZTFiMGQ0ZTU2ZWIwMA==", "commit": {"author": {"name": "Keith Seitz", "email": "keiths@redhat.com", "date": "2006-10-10T20:15:51Z"}, "committer": {"name": "Keith Seitz", "email": "kseitz@gcc.gnu.org", "date": "2006-10-10T20:15:51Z"}, "message": "java-interp.h (_Jv_InterpMethod::get_insn): Declare.\n\n        * include/java-interp.h (_Jv_InterpMethod::get_insn): Declare.\n        (_Jv_InterpMethod::set_insn): Declare.\n        * interpret.cc (_Jv_InterpMethod::get_insn): New method.\n        (_Jv_InterpMethod::get_insn): New method.\n\nFrom-SVN: r117614", "tree": {"sha": "128c26f6b83c22bf5dbed4b27189a9b690415438", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/128c26f6b83c22bf5dbed4b27189a9b690415438"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/05ee9ca08fa14577c842dbf0bece1b0d4e56eb00", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/05ee9ca08fa14577c842dbf0bece1b0d4e56eb00", "html_url": "https://github.com/Rust-GCC/gccrs/commit/05ee9ca08fa14577c842dbf0bece1b0d4e56eb00", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/05ee9ca08fa14577c842dbf0bece1b0d4e56eb00/comments", "author": {"login": "shtiek", "id": 107581324, "node_id": "U_kgDOBmmPjA", "avatar_url": "https://avatars.githubusercontent.com/u/107581324?v=4", "gravatar_id": "", "url": "https://api.github.com/users/shtiek", "html_url": "https://github.com/shtiek", "followers_url": "https://api.github.com/users/shtiek/followers", "following_url": "https://api.github.com/users/shtiek/following{/other_user}", "gists_url": "https://api.github.com/users/shtiek/gists{/gist_id}", "starred_url": "https://api.github.com/users/shtiek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/shtiek/subscriptions", "organizations_url": "https://api.github.com/users/shtiek/orgs", "repos_url": "https://api.github.com/users/shtiek/repos", "events_url": "https://api.github.com/users/shtiek/events{/privacy}", "received_events_url": "https://api.github.com/users/shtiek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "4e34ede292add9a4518f78848bdf76f9b4944f6f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4e34ede292add9a4518f78848bdf76f9b4944f6f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4e34ede292add9a4518f78848bdf76f9b4944f6f"}], "stats": {"total": 54, "additions": 54, "deletions": 0}, "files": [{"sha": "e6933f30829d2f539d7b0198e36ce4fee9729ee8", "filename": "libjava/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/05ee9ca08fa14577c842dbf0bece1b0d4e56eb00/libjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/05ee9ca08fa14577c842dbf0bece1b0d4e56eb00/libjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog?ref=05ee9ca08fa14577c842dbf0bece1b0d4e56eb00", "patch": "@@ -1,3 +1,10 @@\n+2006-10-10  Keith Seitz  <keiths@redhat.com>\n+\n+\t* include/java-interp.h (_Jv_InterpMethod::get_insn): Declare.\n+\t(_Jv_InterpMethod::set_insn): Declare.\n+\t* interpret.cc (_Jv_InterpMethod::get_insn): New method.\n+\t(_Jv_InterpMethod::get_insn): New method.\n+\n 2006-10-10  Tom Tromey  <tromey@redhat.com>\n \n \t* prims.cc (_Jv_PrependVersionedLibdir): Use"}, {"sha": "276a887be34527b627aeb87b26aba76f5049a851", "filename": "libjava/include/java-interp.h", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/05ee9ca08fa14577c842dbf0bece1b0d4e56eb00/libjava%2Finclude%2Fjava-interp.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/05ee9ca08fa14577c842dbf0bece1b0d4e56eb00/libjava%2Finclude%2Fjava-interp.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Finclude%2Fjava-interp.h?ref=05ee9ca08fa14577c842dbf0bece1b0d4e56eb00", "patch": "@@ -206,6 +206,13 @@ class _Jv_InterpMethod : public _Jv_MethodBase\n   void get_line_table (jlong& start, jlong& end, jintArray& line_numbers,\n \t\t       jlongArray& code_indices);\n \n+  // Gets the instruction at the given index\n+  pc_t get_insn (jlong index);\n+\n+  /* Writes the given instruction at the given code index. Returns\n+     the insn or NULL if index is invalid. */\n+  pc_t set_insn (jlong index, pc_t insn);\n+\n #ifdef DIRECT_THREADED\n   friend void _Jv_CompileMethod (_Jv_InterpMethod*);\n #endif"}, {"sha": "b5c83871b5fa4c86124d966089f44989fae3b987", "filename": "libjava/interpret.cc", "status": "modified", "additions": 40, "deletions": 0, "changes": 40, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/05ee9ca08fa14577c842dbf0bece1b0d4e56eb00/libjava%2Finterpret.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/05ee9ca08fa14577c842dbf0bece1b0d4e56eb00/libjava%2Finterpret.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Finterpret.cc?ref=05ee9ca08fa14577c842dbf0bece1b0d4e56eb00", "patch": "@@ -1384,6 +1384,46 @@ _Jv_InterpMethod::get_line_table (jlong& start, jlong& end,\n #endif // !DIRECT_THREADED\n }\n \n+pc_t\n+_Jv_InterpMethod::get_insn (jlong index)\n+{\n+  pc_t code;\n+\n+#ifdef DIRECT_THREADED\n+  if (index >= number_insn_slots || index < 0)\n+    return NULL;\n+\n+  code = prepared;\n+#else // !DIRECT_THREADED\n+  if (index >= code_length || index < 0)\n+    return NULL;\n+\n+  code = reinterpret_cast<pc_t> (bytecode ());\n+#endif // !DIRECT_THREADED\n+\n+  return &code[index];\n+}\n+\n+pc_t\n+_Jv_InterpMethod::set_insn (jlong index, pc_t insn)\n+{\n+#ifdef DIRECT_THREADED\n+  if (index >= number_insn_slots || index < 0)\n+    return NULL;\n+\n+  pc_t code = prepared;\n+  code[index].insn = insn->insn;\n+#else // !DIRECT_THREADED\n+  if (index >= code_length || index < 0)\n+    return NULL;\n+\n+  pc_t code = reinterpret_cast<pc_t> (bytecode ());\n+  code[index] = *insn;\n+#endif // !DIRECT_THREADED\n+\n+  return &code[index];\n+}\n+\n void *\n _Jv_JNIMethod::ncode ()\n {"}]}