{"sha": "1f0c3120cc9cf5b563a11ab0c977273620a03001", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWYwYzMxMjBjYzljZjViNTYzYTExYWIwYzk3NzI3MzYyMGEwMzAwMQ==", "commit": {"author": {"name": "Joseph Myers", "email": "jsm28@cam.ac.uk", "date": "2001-04-25T22:38:10Z"}, "committer": {"name": "Joseph Myers", "email": "jsm28@gcc.gnu.org", "date": "2001-04-25T22:38:10Z"}, "message": "invoke.texi: Document -Wmissing-braces...\n\n\t* invoke.texi: Document -Wmissing-braces, -dumpspecs,\n\t-dumpmachine, -dumpversion, -fmem-report and -ftime-report.\n\t* gcc.1: Regenerate.\n\nFrom-SVN: r41560", "tree": {"sha": "133ac5d916a2b054ac99f2c1de3fb5c702685920", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/133ac5d916a2b054ac99f2c1de3fb5c702685920"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1f0c3120cc9cf5b563a11ab0c977273620a03001", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1f0c3120cc9cf5b563a11ab0c977273620a03001", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1f0c3120cc9cf5b563a11ab0c977273620a03001", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1f0c3120cc9cf5b563a11ab0c977273620a03001/comments", "author": {"login": "jsm28", "id": 10537793, "node_id": "MDQ6VXNlcjEwNTM3Nzkz", "avatar_url": "https://avatars.githubusercontent.com/u/10537793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsm28", "html_url": "https://github.com/jsm28", "followers_url": "https://api.github.com/users/jsm28/followers", "following_url": "https://api.github.com/users/jsm28/following{/other_user}", "gists_url": "https://api.github.com/users/jsm28/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsm28/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsm28/subscriptions", "organizations_url": "https://api.github.com/users/jsm28/orgs", "repos_url": "https://api.github.com/users/jsm28/repos", "events_url": "https://api.github.com/users/jsm28/events{/privacy}", "received_events_url": "https://api.github.com/users/jsm28/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jsm28", "id": 10537793, "node_id": "MDQ6VXNlcjEwNTM3Nzkz", "avatar_url": "https://avatars.githubusercontent.com/u/10537793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsm28", "html_url": "https://github.com/jsm28", "followers_url": "https://api.github.com/users/jsm28/followers", "following_url": "https://api.github.com/users/jsm28/following{/other_user}", "gists_url": "https://api.github.com/users/jsm28/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsm28/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsm28/subscriptions", "organizations_url": "https://api.github.com/users/jsm28/orgs", "repos_url": "https://api.github.com/users/jsm28/repos", "events_url": "https://api.github.com/users/jsm28/events{/privacy}", "received_events_url": "https://api.github.com/users/jsm28/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "66cc965c9db6b31d59642733553ac8e848b7d368", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/66cc965c9db6b31d59642733553ac8e848b7d368", "html_url": "https://github.com/Rust-GCC/gccrs/commit/66cc965c9db6b31d59642733553ac8e848b7d368"}], "stats": {"total": 135, "additions": 114, "deletions": 21}, "files": [{"sha": "1609e32084ae531310e60b390843c04d69093a53", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1f0c3120cc9cf5b563a11ab0c977273620a03001/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1f0c3120cc9cf5b563a11ab0c977273620a03001/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=1f0c3120cc9cf5b563a11ab0c977273620a03001", "patch": "@@ -1,3 +1,9 @@\n+2001-04-25  Joseph S. Myers  <jsm28@cam.ac.uk>\n+\n+\t* invoke.texi: Document -Wmissing-braces, -dumpspecs,\n+\t-dumpmachine, -dumpversion, -fmem-report and -ftime-report.\n+\t* gcc.1: Regenerate.\n+\n 2001-04-25  Rainer Orth  <ro@TechFak.Uni-Bielefeld.DE>\n \n \t* dwarfout.c (is_pseudo_reg, type_main_variant, is_tagged_type,"}, {"sha": "4a87440e3d87d8819e7dede42fa6e3234e8ea8d1", "filename": "gcc/gcc.1", "status": "modified", "additions": 73, "deletions": 18, "changes": 91, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1f0c3120cc9cf5b563a11ab0c977273620a03001/gcc%2Fgcc.1", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1f0c3120cc9cf5b563a11ab0c977273620a03001/gcc%2Fgcc.1", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgcc.1?ref=1f0c3120cc9cf5b563a11ab0c977273620a03001", "patch": "@@ -1,5 +1,5 @@\n-.\\\" Automatically generated by Pod::Man version 1.1\n-.\\\" Fri Mar  9 21:54:51 2001\n+.\\\" Automatically generated by Pod::Man version 1.15\n+.\\\" Wed Apr 25 21:39:15 2001\n .\\\"\n .\\\" Standard preamble:\n .\\\" ======================================================================\n@@ -138,7 +138,7 @@\n .\\\" ======================================================================\n .\\\"\n .IX Title \"GCC 1\"\n-.TH GCC 1 \"gcc-3.1\" \"2001-03-09\" \"GNU\"\n+.TH GCC 1 \"gcc-3.1\" \"2001-04-25\" \"GNU\"\n .UC\n .SH \"NAME\"\n gcc \\- \\s-1GNU\\s0 project C and \\*(C+ compiler\n@@ -244,7 +244,7 @@ in the following sections.\n \\&\\-Werror-implicit-function-declaration \n \\&\\-Wimport  \\-Winline \n \\&\\-Wlarger-than-\\fR\\fIlen\\fR  \\fB\\-Wlong-long \n-\\&\\-Wmain  \\-Wmissing-declarations \n+\\&\\-Wmain  \\-Wmissing-braces  \\-Wmissing-declarations \n \\&\\-Wmissing-format-attribute  \\-Wmissing-noreturn \n \\&\\-Wmultichar  \\-Wno-format-extra-args \\-Wno-format-y2k \n \\&\\-Wno-import  \\-Wpacked  \\-Wpadded \n@@ -261,8 +261,10 @@ in the following sections.\n \\&\\-Wstrict-prototypes \\-Wtraditional\\fR\n .Ip \"\\fIDebugging Options\\fR\" 4\n .IX Item \"Debugging Options\"\n-\\&\\fB\\-a  \\-ax  \\-d\\fR\\fIletters\\fR  \\fB\\-fdump-unnumbered \\-fdump-translation-unit=\\fR\\fIfile\\fR \n-\\&\\fB\\-fdump-class-layout=\\fR\\fIfile\\fR \\fB\\-fpretend-float \\-fprofile-arcs  \\-ftest-coverage \n+\\&\\fB\\-a  \\-ax  \\-d\\fR\\fIletters\\fR  \\fB\\-dumpspecs  \\-dumpmachine  \\-dumpversion \n+\\&\\-fdump-unnumbered \\-fdump-translation-unit=\\fR\\fIfile\\fR \n+\\&\\fB\\-fdump-class-layout=\\fR\\fIfile\\fR  \\fB\\-fmem-report  \\-fpretend-float \n+\\&\\-fprofile-arcs  \\-ftest-coverage  \\-ftime-report \n \\&\\-g  \\-g\\fR\\fIlevel\\fR  \\fB\\-gcoff  \\-gdwarf  \\-gdwarf-1  \\-gdwarf-1+  \\-gdwarf-2 \n \\&\\-ggdb  \\-gstabs  \\-gstabs+  \\-gxcoff  \\-gxcoff+ \n \\&\\-p  \\-pg  \\-print-file-name=\\fR\\fIlibrary\\fR  \\fB\\-print-libgcc-file-name \n@@ -276,7 +278,7 @@ in the following sections.\n \\&\\-fcse-follow-jumps  \\-fcse-skip-blocks  \\-fdata-sections  \\-fdce \n \\&\\-fdelayed-branch  \\-fdelete-null-pointer-checks \n \\&\\-fexpensive-optimizations  \\-ffast-math  \\-ffloat-store \n-\\&\\-fforce-addr  \\-fforce-mem  \\-ffunction-sections  \\-fgcse  \n+\\&\\-fforce-addr  \\-fforce-mem  \\-ffunction-sections  \\-fgcse  \\-fgcse-lm \\-fgcse-sm \n \\&\\-finline-functions  \\-finline-limit=\\fR\\fIn\\fR  \\fB\\-fkeep-inline-functions \n \\&\\-fkeep-static-consts  \\-fmove-all-movables \n \\&\\-fno-default-inline  \\-fno-defer-pop \n@@ -1595,6 +1597,16 @@ Same as \\fB\\-Wimplicit-int\\fR and \\fB\\-Wimplicit-function-\\fR\\fBdeclaration\\fR.\n Warn if the type of \\fBmain\\fR is suspicious.  \\fBmain\\fR should be a\n function with external linkage, returning int, taking either zero\n arguments, two, or three arguments of appropriate types.\n+.Ip \"\\fB\\-Wmissing-braces\\fR\" 4\n+.IX Item \"-Wmissing-braces\"\n+Warn if an aggregate or union initializer is not fully bracketed.  In\n+the following example, the initializer for \\fBa\\fR is not fully\n+bracketed, but that for \\fBb\\fR is fully bracketed.\n+.Sp\n+.Vb 2\n+\\&        int a[2][2] = { 0, 1, 2, 3 };\n+\\&        int b[2][2] = { { 0, 1 }, { 2, 3 } };\n+.Ve\n .Ip \"\\fB\\-Wmultichar\\fR\" 4\n .IX Item \"-Wmultichar\"\n Warn if a multicharacter constant (\\fB'\\s-1FOOF\\s0'\\fR) is used.  Usually they\n@@ -1925,7 +1937,8 @@ probably mistaken.\n .Ip \"\\fB\\-Wtraditional (C only)\\fR\" 4\n .IX Item \"-Wtraditional (C only)\"\n Warn about certain constructs that behave differently in traditional and\n-\\&\\s-1ISO\\s0 C.\n+\\&\\s-1ISO\\s0 C.  Also warn about \\s-1ISO\\s0 C constructs that have no traditional C\n+equivalent, and/or problematic constructs which should be avoided.\n .RS 4\n .Ip \"\\(bu\" 4\n Macro parameters that appear within string literals in the macro body.\n@@ -1950,9 +1963,9 @@ The `U' integer constant suffix, or the `F' or `L' floating point\n constant suffixes.  (Traditonal C does support the `L' suffix on integer\n constants.)  Note, these suffixes appear in macros defined in the system\n headers of most modern systems, e.g. the _MIN/_MAX macros in limits.h.\n-Use of these macros can lead to spurious warnings as they do not\n-necessarily reflect whether the code in question is any less portable to\n-traditional C given that suitable backup definitions are provided.\n+Use of these macros in user code might normally lead to spurious\n+warnings, however gcc's integrated preprocessor has enough context to\n+avoid warning in these cases.\n .Ip \"\\(bu\" 4\n A function declared external in one block and then used after the end of\n the block.\n@@ -1979,6 +1992,11 @@ omitted.  This is done under the assumption that the zero initializer in\n user code appears conditioned on e.g. \\f(CW\\*(C`_\\|_STDC_\\|_\\*(C'\\fR to avoid missing\n initializer warnings and relies on default initialization to zero in the\n traditional C case.\n+.Ip \"\\(bu\" 4\n+Conversions by prototypes between fixed/floating point values and vice\n+versa.  The absence of these prototypes when compiling with traditional\n+C would cause serious problems.  This is a subset of the possible\n+conversion warnings, for the full set use \\fB\\-Wconversion\\fR.\n .RE\n .RS 4\n .RE\n@@ -1987,7 +2005,8 @@ traditional C case.\n Warn if an undefined identifier is evaluated in an \\fB#if\\fR directive.\n .Ip \"\\fB\\-Wshadow\\fR\" 4\n .IX Item \"-Wshadow\"\n-Warn whenever a local variable shadows another local variable.\n+Warn whenever a local variable shadows another local variable, parameter or\n+global variable or whenever a built-in function is shadowed.\n .Ip \"\\fB\\-Wid-clash-\\fR\\fIlen\\fR\" 4\n .IX Item \"-Wid-clash-len\"\n Warn whenever two distinct identifiers match in the first \\fIlen\\fR\n@@ -2295,6 +2314,14 @@ Eventually \\s-1GNU\\s0 \\f(CW\\*(C`gprof\\*(C'\\fR should be extended to process this\n .IX Item \"-Q\"\n Makes the compiler print out each function name as it is compiled, and\n print some statistics about each pass when it finishes.\n+.Ip \"\\fB\\-ftime-report\\fR\" 4\n+.IX Item \"-ftime-report\"\n+Makes the compiler print some statistics about the time consumed by each\n+pass when it finishes.\n+.Ip \"\\fB\\-fmem-report\\fR\" 4\n+.IX Item \"-fmem-report\"\n+Makes the compiler print some statistics about permanent memory\n+allocation when it finishes.\n .Ip \"\\fB\\-ax\\fR\" 4\n .IX Item \"-ax\"\n Generate extra code to profile basic blocks.  Your executable will\n@@ -2315,19 +2342,19 @@ available paths and filenames in file \\fIbb.out\\fR.\n .Sp\n Several function names have a special meaning:\n .RS 4\n-.if n .Ip \"\\f(CW\"\"_\\|_bb_jumps_\\|_\"\"\\fR\" 4\n+.if n .Ip \"\\f(CW\"\"\"\"_\\|_bb_jumps_\\|_\"\"\"\"\\fR\" 4\n .el .Ip \"\\f(CW_\\|_bb_jumps_\\|_\\fR\" 4\n .IX Item \"__bb_jumps__\"\n Write source, target and frequency of jumps to file \\fIbb.out\\fR.\n-.if n .Ip \"\\f(CW\"\"_\\|_bb_hidecall_\\|_\"\"\\fR\" 4\n+.if n .Ip \"\\f(CW\"\"\"\"_\\|_bb_hidecall_\\|_\"\"\"\"\\fR\" 4\n .el .Ip \"\\f(CW_\\|_bb_hidecall_\\|_\\fR\" 4\n .IX Item \"__bb_hidecall__\"\n Exclude function calls from frequency count.\n-.if n .Ip \"\\f(CW\"\"_\\|_bb_showret_\\|_\"\"\\fR\" 4\n+.if n .Ip \"\\f(CW\"\"\"\"_\\|_bb_showret_\\|_\"\"\"\"\\fR\" 4\n .el .Ip \"\\f(CW_\\|_bb_showret_\\|_\\fR\" 4\n .IX Item \"__bb_showret__\"\n Include function returns in frequency count.\n-.if n .Ip \"\\f(CW\"\"_\\|_bb_trace_\\|_\"\"\\fR\" 4\n+.if n .Ip \"\\f(CW\"\"\"\"_\\|_bb_trace_\\|_\"\"\"\"\\fR\" 4\n .el .Ip \"\\f(CW_\\|_bb_trace_\\|_\\fR\" 4\n .IX Item \"__bb_trace__\"\n Write the sequence of basic blocks executed to file \\fIbbtrace.gz\\fR.\n@@ -2640,6 +2667,18 @@ To resolve this you either need to put \\fIcpp0\\fR and the other compiler\n components where gcc expects to find them, or you can set the environment\n variable \\fB\\s-1GCC_EXEC_PREFIX\\s0\\fR to the directory where you installed them.\n Don't forget the trailing '/'.\n+.Ip \"\\fB\\-dumpmachine\\fR\" 4\n+.IX Item \"-dumpmachine\"\n+Print the compiler's target machine (for example,\n+\\&\\fBi686\\-pc-linux-gnu\\fR)\\-\\-\\-and don't do anything else.\n+.Ip \"\\fB\\-dumpversion\\fR\" 4\n+.IX Item \"-dumpversion\"\n+Print the compiler version (for example, \\fB3.0\\fR)\\-\\-\\-and don't do\n+anything else.\n+.Ip \"\\fB\\-dumpspecs\\fR\" 4\n+.IX Item \"-dumpspecs\"\n+Print the compiler's built-in specs\\-\\-\\-and don't do anything else.  (This\n+is used when \\s-1GCC\\s0 itself is being built.)  \n .Sh \"Options That Control Optimization\"\n .IX Subsection \"Options That Control Optimization\"\n These options control various sorts of optimizations:\n@@ -2825,8 +2864,6 @@ and \\fB\\-fno-trapping-math\\fR.\n .Sp\n This option causes the preprocessor macro _\\|_FAST_MATH_\\|_ to be defined.\n .Sp\n-This option causes the preprocessor macro _\\|_FAST_MATH_\\|_ to be defined.\n-.Sp\n This option should never be turned on by any \\fB\\-O\\fR option since\n it can result in incorrect output for programs which depend on\n an exact implementation of \\s-1IEEE\\s0 or \\s-1ISO\\s0 rules/specifications for\n@@ -2916,6 +2953,18 @@ Run the loop optimizer twice.\n .IX Item \"-fgcse\"\n Perform a global common subexpression elimination pass.\n This pass also performs global constant and copy propagation.\n+.Ip \"\\fB\\-fgcse-lm\\fR\" 4\n+.IX Item \"-fgcse-lm\"\n+When \\-fgcse-lm is enabled, global common subexpression elimination will\n+attempt to move loads which are only killed by stores into themselves. This\n+allows a loop containing a load/store sequence to be changed to a load outside\n+the loop, and a copy/store within the loop. \n+.Ip \"\\fB\\-fgcse-sm\\fR\" 4\n+.IX Item \"-fgcse-sm\"\n+When \\-fgcse-sm is enabled, A store motion pass is run after global common \n+subexpression elimination. This pass will attempt to move stores out of loops.\n+When used in conjunction with \\-fgcse-lm, loops containing a load/store sequence\n+can be changed to a load before the loop and a store after the loop.\n .Ip \"\\fB\\-fdelete-null-pointer-checks\\fR\" 4\n .IX Item \"-fdelete-null-pointer-checks\"\n Use global dataflow analysis to identify and eliminate useless null\n@@ -3183,6 +3232,12 @@ In each case, the \\fIvalue\\fR is a integer.  The allowable choices for\n If an function contains more than this many instructions, it\n will not be inlined.  This option is precisely equivalent to\n \\&\\fB\\-finline-limit\\fR.\n+.Ip \"\\fBmax-gcse-memory\\fR\" 4\n+.IX Item \"max-gcse-memory\"\n+The approximate maximum amount of memory that will be allocated in\n+order to perform the global common subexpression elimination\n+optimization.  If more memory than specified is required, the\n+optimization will not be done.\n .RE\n .RS 4\n .RE"}, {"sha": "fa7d047e9d78e9076c4c47e782ec8f357f5a8c74", "filename": "gcc/invoke.texi", "status": "modified", "additions": 35, "deletions": 3, "changes": 38, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1f0c3120cc9cf5b563a11ab0c977273620a03001/gcc%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1f0c3120cc9cf5b563a11ab0c977273620a03001/gcc%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Finvoke.texi?ref=1f0c3120cc9cf5b563a11ab0c977273620a03001", "patch": "@@ -204,7 +204,7 @@ in the following sections.\n -Werror-implicit-function-declaration @gol\n -Wimport  -Winline @gol\n -Wlarger-than-@var{len}  -Wlong-long @gol\n--Wmain  -Wmissing-declarations @gol\n+-Wmain  -Wmissing-braces  -Wmissing-declarations @gol\n -Wmissing-format-attribute  -Wmissing-noreturn @gol\n -Wmultichar  -Wno-format-extra-args -Wno-format-y2k @gol\n -Wno-import  -Wpacked  -Wpadded @gol\n@@ -224,8 +224,10 @@ in the following sections.\n @item Debugging Options\n @xref{Debugging Options,,Options for Debugging Your Program or GCC}.\n @gccoptlist{\n--a  -ax  -d@var{letters}  -fdump-unnumbered -fdump-translation-unit=@var{file} @gol\n--fdump-class-layout=@var{file} -fpretend-float -fprofile-arcs  -ftest-coverage @gol\n+-a  -ax  -d@var{letters}  -dumpspecs  -dumpmachine  -dumpversion @gol\n+-fdump-unnumbered -fdump-translation-unit=@var{file} @gol\n+-fdump-class-layout=@var{file}  -fmem-report  -fpretend-float @gol\n+-fprofile-arcs  -ftest-coverage  -ftime-report @gol\n -g  -g@var{level}  -gcoff  -gdwarf  -gdwarf-1  -gdwarf-1+  -gdwarf-2 @gol\n -ggdb  -gstabs  -gstabs+  -gxcoff  -gxcoff+ @gol\n -p  -pg  -print-file-name=@var{library}  -print-libgcc-file-name @gol\n@@ -1697,6 +1699,16 @@ Warn if the type of @samp{main} is suspicious.  @samp{main} should be a\n function with external linkage, returning int, taking either zero\n arguments, two, or three arguments of appropriate types.\n \n+@item -Wmissing-braces\n+Warn if an aggregate or union initializer is not fully bracketed.  In\n+the following example, the initializer for @samp{a} is not fully\n+bracketed, but that for @samp{b} is fully bracketed.\n+\n+@smallexample\n+int a[2][2] = @{ 0, 1, 2, 3 @};\n+int b[2][2] = @{ @{ 0, 1 @}, @{ 2, 3 @} @};\n+@end smallexample\n+\n @item -Wmultichar\n Warn if a multicharacter constant (@samp{'FOOF'}) is used.  Usually they\n indicate a typo in the user's code, as they have implementation-defined\n@@ -2451,6 +2463,14 @@ Eventually GNU @code{gprof} should be extended to process this data.\n Makes the compiler print out each function name as it is compiled, and\n print some statistics about each pass when it finishes.\n \n+@item -ftime-report\n+Makes the compiler print some statistics about the time consumed by each\n+pass when it finishes.\n+\n+@item -fmem-report\n+Makes the compiler print some statistics about permanent memory\n+allocation when it finishes.\n+\n @item -ax\n Generate extra code to profile basic blocks.  Your executable will\n produce output that is a superset of that produced when @samp{-a} is\n@@ -2747,6 +2767,18 @@ components where gcc expects to find them, or you can set the environment\n variable @env{GCC_EXEC_PREFIX} to the directory where you installed them.\n Don't forget the trailing '/'.\n @xref{Environment Variables}.\n+\n+@item -dumpmachine\n+Print the compiler's target machine (for example,\n+@samp{i686-pc-linux-gnu})---and don't do anything else.\n+\n+@item -dumpversion\n+Print the compiler version (for example, @samp{3.0})---and don't do\n+anything else.\n+\n+@item -dumpspecs\n+Print the compiler's built-in specs---and don't do anything else.  (This\n+is used when GCC itself is being built.)  @xref{Spec Files}.\n @end table\n \n @node Optimize Options"}]}