{"sha": "b608a1bc71edb6b778407dd9bfdf0cbd6bcb4c1b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjYwOGExYmM3MWVkYjZiNzc4NDA3ZGQ5YmZkZjBjYmQ2YmNiNGMxYg==", "commit": {"author": {"name": "Seongbae Park", "email": "seongbae.park@gmail.com", "date": "2008-05-28T20:15:10Z"}, "committer": {"name": "Seongbae Park", "email": "spark@gcc.gnu.org", "date": "2008-05-28T20:15:10Z"}, "message": "tree-ssa-propagate.c (set_rhs): Preserve the histogram and the eh region information.\n\n2008-05-28  Seongbae Park  <seongbae.park@gmail.com>\n\n\t* tree-ssa-propagate.c (set_rhs): Preserve the histogram\n\tand the eh region information.\n\t* value-prof.c (gimple_move_stmt_histograms): New function.\n\t* value-prof.h (gimple_move_stmt_histograms): New function declaration.\n\nFrom-SVN: r136124", "tree": {"sha": "eec1f0a98236b0cc50a93f03ae95201e815b992a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/eec1f0a98236b0cc50a93f03ae95201e815b992a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b608a1bc71edb6b778407dd9bfdf0cbd6bcb4c1b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b608a1bc71edb6b778407dd9bfdf0cbd6bcb4c1b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b608a1bc71edb6b778407dd9bfdf0cbd6bcb4c1b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b608a1bc71edb6b778407dd9bfdf0cbd6bcb4c1b/comments", "author": null, "committer": null, "parents": [{"sha": "77da4248a98f179e1a5be88050ea7fd294e5618e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/77da4248a98f179e1a5be88050ea7fd294e5618e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/77da4248a98f179e1a5be88050ea7fd294e5618e"}], "stats": {"total": 50, "additions": 46, "deletions": 4}, "files": [{"sha": "406a0839a10a42a34c87912cc54094bf88417b8b", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b608a1bc71edb6b778407dd9bfdf0cbd6bcb4c1b/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b608a1bc71edb6b778407dd9bfdf0cbd6bcb4c1b/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=b608a1bc71edb6b778407dd9bfdf0cbd6bcb4c1b", "patch": "@@ -1,3 +1,10 @@\n+2008-05-28  Seongbae Park  <seongbae.park@gmail.com>\n+\n+\t* tree-ssa-propagate.c (set_rhs): Preserve the histogram\n+\tand the eh region information.\n+\t* value-prof.c (gimple_move_stmt_histograms): New function.\n+\t* value-prof.h (gimple_move_stmt_histograms): New function declaration.\n+\n 2008-05-28  Andreas Tobler  <a.tobler@schweiz.org>\n \n \t* config/pa/pa.md: Remove extern frame_pointer_needed declaration."}, {"sha": "b037180556822ec60a3b127f6fe25b8086e139ac", "filename": "gcc/tree-ssa-propagate.c", "status": "modified", "additions": 19, "deletions": 4, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b608a1bc71edb6b778407dd9bfdf0cbd6bcb4c1b/gcc%2Ftree-ssa-propagate.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b608a1bc71edb6b778407dd9bfdf0cbd6bcb4c1b/gcc%2Ftree-ssa-propagate.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-propagate.c?ref=b608a1bc71edb6b778407dd9bfdf0cbd6bcb4c1b", "patch": "@@ -40,6 +40,7 @@\n #include \"langhooks.h\"\n #include \"varray.h\"\n #include \"vec.h\"\n+#include \"value-prof.h\"\n \n /* This file implements a generic value propagation engine based on\n    the same propagation used by the SSA-CCP algorithm [1].\n@@ -680,9 +681,10 @@ bool\n set_rhs (tree *stmt_p, tree expr)\n {\n   tree stmt = *stmt_p, op;\n-  stmt_ann_t ann;\n+  tree new_stmt;\n   tree var;\n   ssa_op_iter iter;\n+  int eh_region;\n \n   if (!valid_gimple_expression_p (expr))\n     return false;\n@@ -733,9 +735,22 @@ set_rhs (tree *stmt_p, tree expr)\n     default:\n       /* Replace the whole statement with EXPR.  If EXPR has no side\n \t effects, then replace *STMT_P with an empty statement.  */\n-      ann = stmt_ann (stmt);\n-      *stmt_p = TREE_SIDE_EFFECTS (expr) ? expr : build_empty_stmt ();\n-      (*stmt_p)->base.ann = (tree_ann_t) ann;\n+      new_stmt = TREE_SIDE_EFFECTS (expr) ? expr : build_empty_stmt ();\n+      *stmt_p = new_stmt;\n+\n+      /* Preserve the annotation, the histograms and the EH region information\n+         associated with the original statement. The EH information\n+\t needs to be preserved only if the new statement still can throw.  */\n+      new_stmt->base.ann = (tree_ann_t) stmt_ann (stmt);\n+      gimple_move_stmt_histograms (cfun, new_stmt, stmt);\n+      if (tree_could_throw_p (new_stmt))\n+\t{\n+\t  eh_region = lookup_stmt_eh_region (stmt);\n+\t  /* We couldn't possibly turn a nothrow into a throw statement.  */\n+\t  gcc_assert (eh_region >= 0);\n+\t  remove_stmt_from_eh_region (stmt);\n+\t  add_stmt_to_eh_region (new_stmt, eh_region);\n+\t}\n \n       if (gimple_in_ssa_p (cfun)\n \t  && TREE_SIDE_EFFECTS (expr))"}, {"sha": "61b0a0773a2d3691850d3f82cc6cfad2f58f74ae", "filename": "gcc/value-prof.c", "status": "modified", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b608a1bc71edb6b778407dd9bfdf0cbd6bcb4c1b/gcc%2Fvalue-prof.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b608a1bc71edb6b778407dd9bfdf0cbd6bcb4c1b/gcc%2Fvalue-prof.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fvalue-prof.c?ref=b608a1bc71edb6b778407dd9bfdf0cbd6bcb4c1b", "patch": "@@ -336,6 +336,25 @@ gimple_duplicate_stmt_histograms (struct function *fun, tree stmt,\n     }\n }\n \n+\n+/* Move all histograms associated with OSTMT to STMT.  */\n+\n+void\n+gimple_move_stmt_histograms (struct function *fun, tree stmt, tree ostmt)\n+{\n+  histogram_value val = gimple_histogram_value (fun, ostmt);\n+  if (val)\n+    {\n+      /* The following three statements can't be reordered,\n+         because histogram hashtab relies on stmt field value\n+\t for finding the exact slot. */\n+      set_histogram_value (fun, ostmt, NULL);\n+      for (; val != NULL; val = val->hvalue.next)\n+\tval->hvalue.stmt = stmt;\n+      set_histogram_value (fun, stmt, val);\n+    }\n+}\n+\n static bool error_found = false;\n \n /* Helper function for verify_histograms.  For each histogram reachable via htab"}, {"sha": "2ab9df1cb53e4fac0fe779c0bd0ecad6687f323e", "filename": "gcc/value-prof.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b608a1bc71edb6b778407dd9bfdf0cbd6bcb4c1b/gcc%2Fvalue-prof.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b608a1bc71edb6b778407dd9bfdf0cbd6bcb4c1b/gcc%2Fvalue-prof.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fvalue-prof.h?ref=b608a1bc71edb6b778407dd9bfdf0cbd6bcb4c1b", "patch": "@@ -116,6 +116,7 @@ void dump_histograms_for_stmt (struct function *, FILE *, tree);\n void gimple_remove_histogram_value (struct function *, tree, histogram_value);\n void gimple_remove_stmt_histograms (struct function *, tree);\n void gimple_duplicate_stmt_histograms (struct function *, tree, struct function *, tree);\n+void gimple_move_stmt_histograms (struct function *, tree, tree);\n void verify_histograms (void);\n void free_histograms (void);\n void stringop_block_profile (tree, unsigned int *, HOST_WIDE_INT *);"}]}