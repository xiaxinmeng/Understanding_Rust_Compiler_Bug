{"sha": "694dd0e408581c9e3fc0fab4864d9de054c7cc0c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Njk0ZGQwZTQwODU4MWM5ZTNmYzBmYWI0ODY0ZDlkZTA1NGM3Y2MwYw==", "commit": {"author": {"name": "Bin Cheng", "email": "bin.cheng@arm.com", "date": "2017-07-18T11:40:38Z"}, "committer": {"name": "Bin Cheng", "email": "amker@gcc.gnu.org", "date": "2017-07-18T11:40:38Z"}, "message": "re PR middle-end/81408 (Lots of new -Wunsafe-loop-optimizations warnings with 7 compared to 6)\n\n\tPR target/81408\n\t* tree-ssa-loop-niter.c (number_of_iterations_exit): Dump missed\n\toptimization for loop niter analysis.\n\n\tgcc/testsuite\n\t* g++.dg/tree-ssa/pr81408.C: New.\n\t* gcc.dg/tree-ssa/pr19210-1.c: Check dump message rather than warning.\n\nFrom-SVN: r250304", "tree": {"sha": "03d6bae865524150f12b20bb8f91b52fd55c7ca2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/03d6bae865524150f12b20bb8f91b52fd55c7ca2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/694dd0e408581c9e3fc0fab4864d9de054c7cc0c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/694dd0e408581c9e3fc0fab4864d9de054c7cc0c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/694dd0e408581c9e3fc0fab4864d9de054c7cc0c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/694dd0e408581c9e3fc0fab4864d9de054c7cc0c/comments", "author": null, "committer": null, "parents": [{"sha": "f94f48ffacd568e76d526f2cb8f7347c599affda", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f94f48ffacd568e76d526f2cb8f7347c599affda", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f94f48ffacd568e76d526f2cb8f7347c599affda"}], "stats": {"total": 120, "additions": 112, "deletions": 8}, "files": [{"sha": "3ff4036f2dca854c80873a781e12f92203c300c7", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/694dd0e408581c9e3fc0fab4864d9de054c7cc0c/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/694dd0e408581c9e3fc0fab4864d9de054c7cc0c/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=694dd0e408581c9e3fc0fab4864d9de054c7cc0c", "patch": "@@ -1,3 +1,9 @@\n+2017-07-18  Bin Cheng  <bin.cheng@arm.com>\n+\n+\tPR target/81408\n+\t* tree-ssa-loop-niter.c (number_of_iterations_exit): Dump missed\n+\toptimization for loop niter analysis.\n+\n 2017-07-18  Georg-Johann Lay  <avr@gjlay.de>\n \n \tPR target/81473"}, {"sha": "91aa26c0cbce94352946c0f583f1a6557dbb0a4b", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/694dd0e408581c9e3fc0fab4864d9de054c7cc0c/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/694dd0e408581c9e3fc0fab4864d9de054c7cc0c/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=694dd0e408581c9e3fc0fab4864d9de054c7cc0c", "patch": "@@ -1,3 +1,9 @@\n+2017-07-18  Bin Cheng  <bin.cheng@arm.com>\n+\n+\tPR target/81408\n+\t* g++.dg/tree-ssa/pr81408.C: New.\n+\t* gcc.dg/tree-ssa/pr19210-1.c: Check dump message rather than warning.\n+\n 2017-07-18  Richard Biener  <rguenther@suse.de>\n \n \tPR tree-optimization/80620"}, {"sha": "f94544b9e2d106541b553b1658f7bdea294e0525", "filename": "gcc/testsuite/g++.dg/tree-ssa/pr81408.C", "status": "added", "additions": 92, "deletions": 0, "changes": 92, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/694dd0e408581c9e3fc0fab4864d9de054c7cc0c/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftree-ssa%2Fpr81408.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/694dd0e408581c9e3fc0fab4864d9de054c7cc0c/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftree-ssa%2Fpr81408.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftree-ssa%2Fpr81408.C?ref=694dd0e408581c9e3fc0fab4864d9de054c7cc0c", "patch": "@@ -0,0 +1,92 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -std=gnu++11 -fopt-info-loop-missed -Wunsafe-loop-optimizations\" } */\n+\n+namespace a {\n+void b () __attribute__ ((__noreturn__));\n+template <typename> struct d;\n+template <typename e> struct d<e *>\n+{\n+  typedef e f;\n+};\n+struct g\n+{\n+  template <typename h> using i = h *;\n+};\n+}\n+using a::d;\n+template <typename j, typename> class k\n+{\n+  j l;\n+\n+public:\n+  typename d<j>::f operator* () {}\n+  void operator++ () { ++l; }\n+  j\n+  aa ()\n+  {\n+    return l;\n+  }\n+};\n+template <typename m, typename n, typename ab>\n+bool\n+operator!= (k<m, ab> o, k<n, ab> p2)\n+{\n+  return o.aa () != p2.aa ();\n+}\n+struct p;\n+namespace a {\n+struct F\n+{\n+  struct q\n+  {\n+    using ai = g::i<p>;\n+  };\n+  using r = q::ai;\n+};\n+class H\n+{\n+public:\n+  k<F::r, int> begin ();\n+  k<F::r, int> end ();\n+};\n+int s;\n+class I\n+{\n+public:\n+  void\n+  aq (char)\n+  {\n+    if (s)\n+      b ();\n+  }\n+};\n+class u : public I\n+{\n+public:\n+  void\n+  operator<< (u o (u))\n+  {\n+    o (*this);\n+  }\n+  u operator<< (void *);\n+};\n+template <typename at, typename au>\n+at\n+av (au o)\n+{\n+  o.aq ('\\n');\n+}\n+u ax;\n+}\n+struct p\n+{\n+  char *ay;\n+};\n+a::H t;\n+void\n+ShowHelpListCommands ()\n+{\n+  for (auto c : t) /* { dg-message \"note: missed loop optimization: niters analysis .*\" } */\n+    a::ax << c.ay << a::av;\n+}\n+"}, {"sha": "0fa5600177e3be7fcf8ce75d74b50a73ad29c59d", "filename": "gcc/testsuite/gcc.dg/tree-ssa/pr19210-1.c", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/694dd0e408581c9e3fc0fab4864d9de054c7cc0c/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr19210-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/694dd0e408581c9e3fc0fab4864d9de054c7cc0c/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr19210-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr19210-1.c?ref=694dd0e408581c9e3fc0fab4864d9de054c7cc0c", "patch": "@@ -1,15 +1,15 @@\n /* { dg-do compile } */\n-/* { dg-options \"-O2 -Wunsafe-loop-optimizations\" } */\n+/* { dg-options \"-O2 -fopt-info-loop-missed -Wunsafe-loop-optimizations\" } */\n extern void g(void);\n \n void\n f (unsigned n)\n {\n   unsigned k;\n-  for(k = 0;k <= n;k++) /* { dg-warning \"missed loop optimization.*overflow\" } */\n+  for(k = 0;k <= n;k++) /* { dg-message \"note: missed loop optimization: niters analysis .*\" } */\n     g();\n \n-  for(k = 0;k <= n;k += 4) /* { dg-warning \"missed loop optimization.*overflow\" } */\n+  for(k = 0;k <= n;k += 4) /* { dg-message \"note: missed loop optimization: niters analysis .*\" } */\n     g();\n \n   /* We used to get warning for this loop.  However, since then # of iterations\n@@ -21,9 +21,9 @@ f (unsigned n)\n     g();\n \n   /* So we need the following loop, instead.  */\n-  for(k = 4;k <= n;k += 5) /* { dg-warning \"missed loop optimization.*overflow\" } */\n+  for(k = 4;k <= n;k += 5) /* { dg-message \"note: missed loop optimization: niters analysis .*\" } */\n     g();\n   \n-  for(k = 15;k >= n;k--) /* { dg-warning \"missed loop optimization.*overflow\" } */\n+  for(k = 15;k >= n;k--) /* { dg-message \"note: missed loop optimization: niters analysis .*\" } */\n     g();\n }"}, {"sha": "142100299bf82bcd612f8d1a4ce7de7b61a5dbb0", "filename": "gcc/tree-ssa-loop-niter.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/694dd0e408581c9e3fc0fab4864d9de054c7cc0c/gcc%2Ftree-ssa-loop-niter.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/694dd0e408581c9e3fc0fab4864d9de054c7cc0c/gcc%2Ftree-ssa-loop-niter.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-loop-niter.c?ref=694dd0e408581c9e3fc0fab4864d9de054c7cc0c", "patch": "@@ -2378,9 +2378,9 @@ number_of_iterations_exit (struct loop *loop, edge exit,\n     return true;\n \n   if (warn)\n-    warning_at (gimple_location_safe (stmt),\n-\t\tOPT_Wunsafe_loop_optimizations,\n-\t\t\"missed loop optimization, the loop counter may overflow\");\n+    dump_printf_loc (MSG_MISSED_OPTIMIZATION, gimple_location_safe (stmt),\n+\t\t     \"missed loop optimization: niters analysis ends up \"\n+\t\t     \"with assumptions.\\n\");\n \n   return false;\n }"}]}