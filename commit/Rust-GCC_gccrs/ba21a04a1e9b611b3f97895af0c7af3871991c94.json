{"sha": "ba21a04a1e9b611b3f97895af0c7af3871991c94", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmEyMWEwNGExZTliNjExYjNmOTc4OTVhZjBjN2FmMzg3MTk5MWM5NA==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@adacore.com", "date": "2014-04-28T10:03:46Z"}, "committer": {"name": "Eric Botcazou", "email": "ebotcazou@gcc.gnu.org", "date": "2014-04-28T10:03:46Z"}, "message": "configure.ac: Tweak GAS check for LEON instructions on SPARC.\n\n\t* configure.ac: Tweak GAS check for LEON instructions on SPARC.\n\t* configure: Regenerate.\n\t* config/sparc/sparc.opt (muser-mode): New option.\n\t* config/sparc/sync.md (atomic_compare_and_swap<mode>_1): Do not enable\n\tfor LEON3.\n\t(atomic_compare_and_swap_leon3_1): New instruction for LEON3.\n\t* doc/invoke.texi (SPARC options): Document -muser-mode.\n\nFrom-SVN: r209850", "tree": {"sha": "79825e480c50f45aedab08975153cd2fab8f4e04", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/79825e480c50f45aedab08975153cd2fab8f4e04"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ba21a04a1e9b611b3f97895af0c7af3871991c94", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ba21a04a1e9b611b3f97895af0c7af3871991c94", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ba21a04a1e9b611b3f97895af0c7af3871991c94", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ba21a04a1e9b611b3f97895af0c7af3871991c94/comments", "author": null, "committer": null, "parents": [{"sha": "b976509fd0ae0bfc0a3401694fe2c1483727bbea", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b976509fd0ae0bfc0a3401694fe2c1483727bbea", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b976509fd0ae0bfc0a3401694fe2c1483727bbea"}], "stats": {"total": 46, "additions": 43, "deletions": 3}, "files": [{"sha": "83c01a52895f75b38c9433a5df00d16de1d120fa", "filename": "gcc/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ba21a04a1e9b611b3f97895af0c7af3871991c94/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ba21a04a1e9b611b3f97895af0c7af3871991c94/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=ba21a04a1e9b611b3f97895af0c7af3871991c94", "patch": "@@ -1,3 +1,13 @@\n+2014-04-28  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* configure.ac: Tweak GAS check for LEON instructions on SPARC.\n+\t* configure: Regenerate.\n+\t* config/sparc/sparc.opt (muser-mode): New option.\n+\t* config/sparc/sync.md (atomic_compare_and_swap<mode>_1): Do not enable\n+\tfor LEON3.\n+\t(atomic_compare_and_swap_leon3_1): New instruction for LEON3.\n+\t* doc/invoke.texi (SPARC options): Document -muser-mode.\n+\n 2014-04-27  Richard Sandiford  <rdsandiford@googlemail.com>\n \n \t* cselib.c (find_slot_memmode): Delete."}, {"sha": "64e40955a5358bf4882e6a82e655d53a8c870239", "filename": "gcc/config/sparc/sparc.opt", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ba21a04a1e9b611b3f97895af0c7af3871991c94/gcc%2Fconfig%2Fsparc%2Fsparc.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ba21a04a1e9b611b3f97895af0c7af3871991c94/gcc%2Fconfig%2Fsparc%2Fsparc.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsparc%2Fsparc.opt?ref=ba21a04a1e9b611b3f97895af0c7af3871991c94", "patch": "@@ -113,6 +113,10 @@ mrelax\n Target\n Optimize tail call instructions in assembler and linker\n \n+muser-mode\n+Target Report Mask(USER_MODE)\n+Do not generate code that can only run in supervisor mode\n+\n mcpu=\n Target RejectNegative Joined Var(sparc_cpu_and_features) Enum(sparc_processor_type) Init(PROCESSOR_V7)\n Use features of and schedule code for given CPU"}, {"sha": "e6e237f256fa6aa1bd9793f9f9128e7ae4ec03f9", "filename": "gcc/config/sparc/sync.md", "status": "modified", "additions": 18, "deletions": 1, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ba21a04a1e9b611b3f97895af0c7af3871991c94/gcc%2Fconfig%2Fsparc%2Fsync.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ba21a04a1e9b611b3f97895af0c7af3871991c94/gcc%2Fconfig%2Fsparc%2Fsync.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsparc%2Fsync.md?ref=ba21a04a1e9b611b3f97895af0c7af3871991c94", "patch": "@@ -200,10 +200,27 @@\n \t  [(match_operand:I48MODE 2 \"register_operand\" \"r\")\n \t   (match_operand:I48MODE 3 \"register_operand\" \"0\")]\n \t  UNSPECV_CAS))]\n-  \"(TARGET_V9 || TARGET_LEON3) && (<MODE>mode != DImode || TARGET_ARCH64)\"\n+  \"TARGET_V9 && (<MODE>mode != DImode || TARGET_ARCH64)\"\n   \"cas<modesuffix>\\t%1, %2, %0\"\n   [(set_attr \"type\" \"multi\")])\n \n+(define_insn \"*atomic_compare_and_swap_leon3_1\"\n+  [(set (match_operand:SI 0 \"register_operand\" \"=r\")\n+\t(match_operand:SI 1 \"mem_noofs_operand\" \"+w\"))\n+   (set (match_dup 1)\n+\t(unspec_volatile:SI\n+\t  [(match_operand:SI 2 \"register_operand\" \"r\")\n+\t   (match_operand:SI 3 \"register_operand\" \"0\")]\n+\t  UNSPECV_CAS))]\n+  \"TARGET_LEON3\"\n+{\n+  if (TARGET_USER_MODE)\n+    return \"casa\\t%1 0xa, %2, %0\"; /* ASI for user data space.  */\n+  else\n+    return \"casa\\t%1 0xb, %2, %0\"; /* ASI for supervisor data space.  */\n+}\n+  [(set_attr \"type\" \"multi\")])\n+\n (define_insn \"*atomic_compare_and_swapdi_v8plus\"\n   [(set (match_operand:DI 0 \"register_operand\" \"=h\")\n \t(match_operand:DI 1 \"mem_noofs_operand\" \"+w\"))"}, {"sha": "e806873a04e5b0c20fd1c1e039ed1acdde822600", "filename": "gcc/configure", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ba21a04a1e9b611b3f97895af0c7af3871991c94/gcc%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ba21a04a1e9b611b3f97895af0c7af3871991c94/gcc%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfigure?ref=ba21a04a1e9b611b3f97895af0c7af3871991c94", "patch": "@@ -24395,7 +24395,7 @@ else\n        .align 4\n        smac %g2, %g3, %g1\n        umac %g2, %g3, %g1\n-       cas [%g2], %g3, %g1' > conftest.s\n+       casa [%g2] 0xb, %g3, %g1' > conftest.s\n     if { ac_try='$gcc_cv_as $gcc_cv_as_flags -Aleon -o conftest.o conftest.s >&5'\n   { { eval echo \"\\\"\\$as_me\\\":${as_lineno-$LINENO}: \\\"$ac_try\\\"\"; } >&5\n   (eval $ac_try) 2>&5"}, {"sha": "a3154bb32f1bb24daf8b2a72ac45b283ab5cb1ee", "filename": "gcc/configure.ac", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ba21a04a1e9b611b3f97895af0c7af3871991c94/gcc%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ba21a04a1e9b611b3f97895af0c7af3871991c94/gcc%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfigure.ac?ref=ba21a04a1e9b611b3f97895af0c7af3871991c94", "patch": "@@ -3647,7 +3647,7 @@ foo:\n        .align 4\n        smac %g2, %g3, %g1\n        umac %g2, %g3, %g1\n-       cas [[%g2]], %g3, %g1],,\n+       casa [[%g2]] 0xb, %g3, %g1],,\n       [AC_DEFINE(HAVE_AS_LEON, 1,\n                 [Define if your assembler supports LEON instructions.])])\n     ;;"}, {"sha": "da7a00ed00ce9f1e259f2a221bf916489d7bcb39", "filename": "gcc/doc/invoke.texi", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ba21a04a1e9b611b3f97895af0c7af3871991c94/gcc%2Fdoc%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ba21a04a1e9b611b3f97895af0c7af3871991c94/gcc%2Fdoc%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finvoke.texi?ref=ba21a04a1e9b611b3f97895af0c7af3871991c94", "patch": "@@ -993,6 +993,7 @@ See RS/6000 and PowerPC Options.\n -mhard-quad-float  -msoft-quad-float @gol\n -mstack-bias  -mno-stack-bias @gol\n -munaligned-doubles  -mno-unaligned-doubles @gol\n+-muser-mode  -mno-user-mode @gol\n -mv8plus  -mno-v8plus  -mvis  -mno-vis @gol\n -mvis2  -mno-vis2  -mvis3  -mno-vis3 @gol\n -mcbcond -mno-cbcond @gol\n@@ -20961,6 +20962,14 @@ Specifying this option avoids some rare compatibility problems with code\n generated by other compilers.  It is not the default because it results\n in a performance loss, especially for floating-point code.\n \n+@item -muser-mode\n+@itemx -mno-user-mode\n+@opindex muser-mode\n+@opindex mno-user-mode\n+Do not generate code that can only run in supervisor mode.  This is relevant\n+only for the @code{casa} instruction emitted for the LEON3 processor.  The\n+default is @option{-mno-user-mode}.\n+\n @item -mno-faster-structs\n @itemx -mfaster-structs\n @opindex mno-faster-structs"}]}