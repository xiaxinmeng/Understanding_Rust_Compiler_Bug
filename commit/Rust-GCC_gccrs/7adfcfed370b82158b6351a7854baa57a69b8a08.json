{"sha": "7adfcfed370b82158b6351a7854baa57a69b8a08", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6N2FkZmNmZWQzNzBiODIxNThiNjM1MWE3ODU0YmFhNTdhNjliOGEwOA==", "commit": {"author": {"name": "Kaveh R. Ghazi", "email": "ghazi@caip.rutgers.edu", "date": "1999-09-15T14:04:10Z"}, "committer": {"name": "Kaveh Ghazi", "email": "ghazi@gcc.gnu.org", "date": "1999-09-15T14:04:10Z"}, "message": "rtl.h (get_insn_name, [...]): Add prototypes.\n\n\t* rtl.h (get_insn_name, print_rtl_with_bb): Add prototypes.\n\n\t* print-rtl.c (get_insn_name): Remove prototype.\n\n\t* toplev.h (progname): Declare const.\n\n\t* toplev.c (init_decl_processing, init_obstacks, init_tree_codes,\n\tinit_regs, init_optabs, init_stmt, init_reg_sets, dump_flow_info,\n\tdump_sched_info, dump_local_alloc, regset_release_memory,\n\tprint_rtl, print_rtl_with_bb, rest_of_decl_compilation,\n\terror_with_file_and_line, error_with_decl, error_for_asm, error,\n\tfatal, warning_with_file_and_line, warning_with_decl, warning,\n\tpedwarn, pedwarn_with_decl, pedwarn_with_file_and_line, sorry):\n\tRemove redundant prototypes.\n\n\t(notice, check_lang_option, report_file_and_line, vnotice,\n\tmark_file_stack): Add static prototype.\n\t(set_fatal_function): Add prototype.\n\t(vnotice, report_file_and_line, set_fatal_function,\n\tcheck_lang_option): Constify a char*.\n\t(main): Prototype.  Call return, not exit.\n\ncp:\n\n\t* typeck2.c (ack): Don't declare progname.\n\nFrom-SVN: r29433", "tree": {"sha": "f904b504d7b0e6016aba69dc8b456c718e0c587c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f904b504d7b0e6016aba69dc8b456c718e0c587c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7adfcfed370b82158b6351a7854baa57a69b8a08", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7adfcfed370b82158b6351a7854baa57a69b8a08", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7adfcfed370b82158b6351a7854baa57a69b8a08", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7adfcfed370b82158b6351a7854baa57a69b8a08/comments", "author": null, "committer": null, "parents": [{"sha": "04cabffc4ef605e2868dba5f19ad387f18aa72b4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/04cabffc4ef605e2868dba5f19ad387f18aa72b4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/04cabffc4ef605e2868dba5f19ad387f18aa72b4"}], "stats": {"total": 104, "additions": 53, "deletions": 51}, "files": [{"sha": "bb9f604952693736e9f28668fcac9b92c42ac923", "filename": "gcc/ChangeLog", "status": "modified", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7adfcfed370b82158b6351a7854baa57a69b8a08/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7adfcfed370b82158b6351a7854baa57a69b8a08/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=7adfcfed370b82158b6351a7854baa57a69b8a08", "patch": "@@ -1,3 +1,27 @@\n+Wed Sep 15 09:59:16 1999  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n+\n+\t* rtl.h (get_insn_name, print_rtl_with_bb): Add prototypes.\n+\n+\t* print-rtl.c (get_insn_name): Remove prototype.\n+\n+\t* toplev.h (progname): Declare const.\n+\n+\t* toplev.c (init_decl_processing, init_obstacks, init_tree_codes,\n+\tinit_regs, init_optabs, init_stmt, init_reg_sets, dump_flow_info,\n+\tdump_sched_info, dump_local_alloc, regset_release_memory,\n+\tprint_rtl, print_rtl_with_bb, rest_of_decl_compilation,\n+\terror_with_file_and_line, error_with_decl, error_for_asm, error,\n+\tfatal, warning_with_file_and_line, warning_with_decl, warning,\n+\tpedwarn, pedwarn_with_decl, pedwarn_with_file_and_line, sorry):\n+\tRemove redundant prototypes.\n+\n+\t(notice, check_lang_option, report_file_and_line, vnotice,\n+\tmark_file_stack): Add static prototype.\n+\t(set_fatal_function): Add prototype.\n+\t(vnotice, report_file_and_line, set_fatal_function,\n+\tcheck_lang_option): Constify a char*.\n+\t(main): Prototype.  Call return, not exit.\n+\n Wed Sep 15 09:50:18 1999  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n \n \t* aclocal.m4 (AC_GCC_C_LONG_DOUBLE): New macro."}, {"sha": "e6cdab77be6de6e9a8931dd8d032d25f415df685", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7adfcfed370b82158b6351a7854baa57a69b8a08/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7adfcfed370b82158b6351a7854baa57a69b8a08/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=7adfcfed370b82158b6351a7854baa57a69b8a08", "patch": "@@ -1,3 +1,7 @@\n+1999-09-15  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n+\n+\t* typeck2.c (ack): Don't declare progname.\n+\n 1999-09-15  Nathan Sidwell  <nathan@acm.org>\n \n \t* typeck.c (expr_sizeof): Reinstall and augment OFFSET_REF"}, {"sha": "4b37e48976e699c7d981784b4995cf4900c2d040", "filename": "gcc/cp/typeck2.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7adfcfed370b82158b6351a7854baa57a69b8a08/gcc%2Fcp%2Ftypeck2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7adfcfed370b82158b6351a7854baa57a69b8a08/gcc%2Fcp%2Ftypeck2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Ftypeck2.c?ref=7adfcfed370b82158b6351a7854baa57a69b8a08", "patch": "@@ -253,7 +253,6 @@ ack VPROTO ((const char *msg, ...))\n   const char *msg;\n #endif\n   va_list ap;\n-  extern char * progname;\n   \n   VA_START (ap, msg);\n "}, {"sha": "75a52ee99000a8d6221da8dc18120d3259789fe6", "filename": "gcc/print-rtl.c", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7adfcfed370b82158b6351a7854baa57a69b8a08/gcc%2Fprint-rtl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7adfcfed370b82158b6351a7854baa57a69b8a08/gcc%2Fprint-rtl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fprint-rtl.c?ref=7adfcfed370b82158b6351a7854baa57a69b8a08", "patch": "@@ -52,10 +52,6 @@ static int sawclose = 0;\n \n static int indent;\n \n-/* Names for patterns.  */\n-\n-extern const char *get_insn_name PROTO ((int));\n-\n static void print_rtx\t\tPROTO ((rtx));\n \n /* Nonzero means suppress output of instruction numbers and line number"}, {"sha": "5a03a9c8bfde5626711a0357a8862a1e1e583a76", "filename": "gcc/rtl.h", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7adfcfed370b82158b6351a7854baa57a69b8a08/gcc%2Frtl.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7adfcfed370b82158b6351a7854baa57a69b8a08/gcc%2Frtl.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frtl.h?ref=7adfcfed370b82158b6351a7854baa57a69b8a08", "patch": "@@ -997,6 +997,7 @@ extern rtx make_safe_from\t\tPROTO((rtx, rtx));\n extern rtx convert_memory_address\tPROTO((enum machine_mode, rtx));\n extern rtx memory_address\t\tPROTO((enum machine_mode, rtx));\n extern rtx get_insns\t\t\tPROTO((void));\n+extern const char *get_insn_name\tPROTO((int));\n extern rtx get_last_insn\t\tPROTO((void));\n extern rtx get_last_insn_anywhere\tPROTO((void));\n extern void start_sequence\t\tPROTO((void));\n@@ -1530,6 +1531,7 @@ extern void allocate_bb_life_data\tPROTO ((void));\n extern void allocate_reg_life_data\tPROTO ((void));\n extern void recompute_reg_usage\t\tPROTO ((rtx, int));\n #ifdef BUFSIZ\n+extern void print_rtl_with_bb\t\tPROTO ((FILE *, rtx));\n extern void dump_flow_info\t\tPROTO ((FILE *));\n #endif\n extern void free_bb_mem\t\t\tPROTO ((void));"}, {"sha": "e14c20a731884a029a5d2c2c4e391c27ea030dcf", "filename": "gcc/toplev.c", "status": "modified", "additions": 21, "deletions": 46, "changes": 67, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7adfcfed370b82158b6351a7854baa57a69b8a08/gcc%2Ftoplev.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7adfcfed370b82158b6351a7854baa57a69b8a08/gcc%2Ftoplev.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftoplev.c?ref=7adfcfed370b82158b6351a7854baa57a69b8a08", "patch": "@@ -149,38 +149,7 @@ extern char *version_string;\n extern int size_directive_output;\n extern tree last_assemble_variable_decl;\n \n-extern void init_decl_processing ();\n-extern void init_obstacks ();\n-extern void init_tree_codes ();\n-extern void init_regs ();\n-extern void init_optabs ();\n-extern void init_stmt ();\n-extern void init_reg_sets ();\n-extern void dump_flow_info ();\n-extern void dump_sched_info ();\n-extern void dump_local_alloc ();\n-extern void regset_release_memory ();\n-\n-extern void print_rtl ();\n-extern void print_rtl_with_bb ();\n-\n-void rest_of_decl_compilation ();\n-void error_with_file_and_line PVPROTO((const char *file,\n-\t\t\t\t       int line, const char *s, ...));\n-void error_with_decl PVPROTO((tree decl, const char *s, ...));\n-void error_for_asm PVPROTO((rtx insn, const char *s, ...));\n-void notice PVPROTO((const char *s, ...));\n-void error PVPROTO((const char *s, ...));\n-void fatal PVPROTO((const char *s, ...));\n-void warning_with_file_and_line PVPROTO((const char *file,\n-\t\t\t\t\t int line, const char *s, ...));\n-void warning_with_decl PVPROTO((tree decl, const char *s, ...));\n-void warning PVPROTO((const char *s, ...));\n-void pedwarn PVPROTO((const char *s, ...));\n-void pedwarn_with_decl PVPROTO((tree decl, const char *s, ...));\n-void pedwarn_with_file_and_line PVPROTO((const char *file,\n-\t\t\t\t\t int line, const char *s, ...));\n-void sorry PVPROTO((const char *s, ...));\n+static void notice PVPROTO((const char *s, ...)) ATTRIBUTE_PRINTF_1;\n static void set_target_switch PROTO((const char *));\n static const char *decl_name PROTO((tree, int));\n static void vmessage PROTO((const char *, const char *, va_list));\n@@ -204,6 +173,7 @@ static void v_pedwarn_with_decl PROTO((tree, const char *, va_list));\n static void v_pedwarn_with_file_and_line PROTO((const char *, int,\n \t\t\t\t\t\tconst char *, va_list));\n static void vsorry PROTO((const char *, va_list));\n+extern void set_fatal_function PROTO((void (*)(const char *, va_list)));\n static void float_signal PROTO((int)) ATTRIBUTE_NORETURN;\n static void pipe_closed PROTO((int)) ATTRIBUTE_NORETURN;\n #ifdef ASM_IDENTIFY_LANGUAGE\n@@ -216,6 +186,10 @@ static void dump_rtl PROTO((const char *, tree, void (*) (FILE *, rtx), rtx));\n static void clean_dump_file PROTO((const char *));\n static void compile_file PROTO((char *));\n static void display_help PROTO ((void));\n+static int check_lang_option PROTO ((const char *, const char *));\n+static void report_file_and_line PROTO ((const char *, int, int));\n+static void vnotice PROTO ((FILE *, const char *, va_list));\n+static void mark_file_stack PROTO ((void *));\n \n static void print_version PROTO((FILE *, const char *));\n static int print_single_switch PROTO((FILE *, int, int, const char *,\n@@ -232,7 +206,7 @@ void finish_graph_dump_file PROTO ((const char *, const char *));\n \n /* Name of program invoked, sans directories.  */\n \n-char *progname;\n+const char *progname;\n \n /* Copy of arguments to main.  */\n int save_argc;\n@@ -1607,13 +1581,13 @@ report_error_function (file)\n static void\n vnotice (file, msgid, ap)\n      FILE *file;\n-     char *msgid;\n+     const char *msgid;\n      va_list ap;\n {\n   vfprintf (file, _(msgid), ap);\n }\n \n-void\n+static void\n notice VPROTO((const char *msgid, ...))\n {\n #ifndef ANSI_PROTOTYPES\n@@ -1655,7 +1629,7 @@ fnotice VPROTO((FILE *file, const char *msgid, ...))\n \n static void\n report_file_and_line (file, line, warn)\n-     char *file;\n+     const char *file;\n      int line;\n      int warn;\n {\n@@ -1943,7 +1917,7 @@ static void (*fatal_function) PROTO((const char *, va_list));\n \n void\n set_fatal_function (f)\n-     void (*f) PROTO((char *, va_list));\n+     void (*f) PROTO((const char *, va_list));\n {\n   fatal_function = f;\n }\n@@ -4665,13 +4639,13 @@ display_help ()\n \n static int\n check_lang_option (option, lang_option)\n-     char * option;\n-     char * lang_option;\n+     const char * option;\n+     const char * lang_option;\n {\n   lang_independent_options * indep_options;\n   int    len;\n   long    k;\n-  char * space;\n+  const char * space;\n   \n   /* Ignore NULL entries.  */\n   if (option == NULL || lang_option == NULL)\n@@ -4733,6 +4707,8 @@ check_lang_option (option, lang_option)\n    Exit code is 35 if can't open files, 34 if fatal error,\n    33 if had nonfatal errors, else success.  */\n \n+extern int main PROTO ((int, char **));\n+\n int\n main (argc, argv)\n      int argc;\n@@ -4911,7 +4887,7 @@ main (argc, argv)\n \t  if (!strcmp (argv[i], \"--help\"))\n \t    {\n \t      display_help ();\n-\t      exit (0);\n+\t      return (0);\n \t    }\n \t  \n \t  if (strings_processed != 0)\n@@ -5357,7 +5333,7 @@ main (argc, argv)\n \t  else if (!strcmp (str, \"-help\"))\n \t    {\n \t      display_help ();\n-\t      exit (0);\n+\t      return (0);\n \t    }\n \t  else\n \t    error (\"Invalid option `%s'\", argv[i]);\n@@ -5486,11 +5462,10 @@ main (argc, argv)\n #endif /* ! OS2 && ! VMS && (! _WIN32 || CYGWIN) && ! __INTERIX */\n \n   if (errorcount)\n-    exit (FATAL_EXIT_CODE);\n+    return (FATAL_EXIT_CODE);\n   if (sorrycount)\n-    exit (FATAL_EXIT_CODE);\n-  exit (SUCCESS_EXIT_CODE);\n-  return 0;\n+    return (FATAL_EXIT_CODE);\n+  return (SUCCESS_EXIT_CODE);\n }\n \f\n /* Decode -m switches.  */"}, {"sha": "508cd9d15eca6e83480412b3b092746e277a2aad", "filename": "gcc/toplev.h", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7adfcfed370b82158b6351a7854baa57a69b8a08/gcc%2Ftoplev.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7adfcfed370b82158b6351a7854baa57a69b8a08/gcc%2Ftoplev.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftoplev.h?ref=7adfcfed370b82158b6351a7854baa57a69b8a08", "patch": "@@ -130,4 +130,6 @@ extern void check_global_declarations   PROTO ((union tree_node **, int));\n extern int errorcount;\n extern int warningcount;\n extern int sorrycount;\n+\n+extern const char *progname;\n #endif /* __GCC_TOPLEV_H */"}]}