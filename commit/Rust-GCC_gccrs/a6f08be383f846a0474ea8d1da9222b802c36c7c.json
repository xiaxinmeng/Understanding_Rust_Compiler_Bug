{"sha": "a6f08be383f846a0474ea8d1da9222b802c36c7c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTZmMDhiZTM4M2Y4NDZhMDQ3NGVhOGQxZGE5MjIyYjgwMmMzNmM3Yw==", "commit": {"author": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2021-02-03T15:49:36Z"}, "committer": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2021-02-03T15:49:36Z"}, "message": "libstdc++: Fix incorrect test for std::error_code comparisons\n\nThe tests for std::error_code comparisons assumed that a default\nconstructed object uses std::generic_category(). That's true for a\ndefault constructed std::error_condition, but not std::error_code.\n\nFix the three-way comparisons to correctly depend on the result of\ncomparing the categories, and add another test for comparing two objects\nwith the same category and different values.\n\nlibstdc++-v3/ChangeLog:\n\n\t* testsuite/19_diagnostics/error_code/operators/not_equal.cc:\n\tAdd comparison with same category and different values.\n\t* testsuite/19_diagnostics/error_code/operators/less.cc:\n\tLikewise. Fix comparison involving different categories.\n\t* testsuite/19_diagnostics/error_code/operators/three_way.cc:\n\tLikewise.\n\t* testsuite/19_diagnostics/error_condition/operators/less.cc:\n\tAdd comment.\n\t* testsuite/19_diagnostics/error_condition/operators/three_way.cc:\n\tLikewise.", "tree": {"sha": "0df98b891b4534e0e51f4bb5f8082c8cff260df6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0df98b891b4534e0e51f4bb5f8082c8cff260df6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a6f08be383f846a0474ea8d1da9222b802c36c7c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a6f08be383f846a0474ea8d1da9222b802c36c7c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a6f08be383f846a0474ea8d1da9222b802c36c7c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a6f08be383f846a0474ea8d1da9222b802c36c7c/comments", "author": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "598876574184e745defee4b36dc2408068b7a22e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/598876574184e745defee4b36dc2408068b7a22e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/598876574184e745defee4b36dc2408068b7a22e"}], "stats": {"total": 18, "additions": 15, "deletions": 3}, "files": [{"sha": "abb754136eac68cb633f69eda36a4901a2903186", "filename": "libstdc++-v3/testsuite/19_diagnostics/error_code/operators/less.cc", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a6f08be383f846a0474ea8d1da9222b802c36c7c/libstdc%2B%2B-v3%2Ftestsuite%2F19_diagnostics%2Ferror_code%2Foperators%2Fless.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a6f08be383f846a0474ea8d1da9222b802c36c7c/libstdc%2B%2B-v3%2Ftestsuite%2F19_diagnostics%2Ferror_code%2Foperators%2Fless.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F19_diagnostics%2Ferror_code%2Foperators%2Fless.cc?ref=a6f08be383f846a0474ea8d1da9222b802c36c7c", "patch": "@@ -29,10 +29,13 @@ int main()\n   VERIFY( !(e1 < e1) );\n   VERIFY( !(e2 < e2) );\n \n-  VERIFY( (e1 < e2) == (e1.value() < e2.value()) );\n+  VERIFY( (e1 < e2) == (e1.category() < e2.category()) );\n \n   const __gnu_test::test_category cat;\n   std::error_code e3(e2.value(), cat);\n   VERIFY( !(e3 < e3) );\n   VERIFY( (e2 < e3) == (e2.category() < e3.category()) );\n+\n+  std::error_code e4(std::make_error_code(std::errc::invalid_argument));\n+  VERIFY( (e4 < e2) == (e4.value() < e2.value()) );\n }"}, {"sha": "543ffceb832815aa3dfe2e1b378411fdec2dd154", "filename": "libstdc++-v3/testsuite/19_diagnostics/error_code/operators/not_equal.cc", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a6f08be383f846a0474ea8d1da9222b802c36c7c/libstdc%2B%2B-v3%2Ftestsuite%2F19_diagnostics%2Ferror_code%2Foperators%2Fnot_equal.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a6f08be383f846a0474ea8d1da9222b802c36c7c/libstdc%2B%2B-v3%2Ftestsuite%2F19_diagnostics%2Ferror_code%2Foperators%2Fnot_equal.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F19_diagnostics%2Ferror_code%2Foperators%2Fnot_equal.cc?ref=a6f08be383f846a0474ea8d1da9222b802c36c7c", "patch": "@@ -34,5 +34,6 @@ int main()\n   std::error_code e3(e2.value(), cat);\n   VERIFY( e2 != e3 );\n \n-  return 0;\n+  std::error_code e4(std::make_error_code(std::errc::invalid_argument));\n+  VERIFY( e4 != e2 );\n }"}, {"sha": "50c54bea94f27b082ac1ae8d62f43976270e63c4", "filename": "libstdc++-v3/testsuite/19_diagnostics/error_code/operators/three_way.cc", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a6f08be383f846a0474ea8d1da9222b802c36c7c/libstdc%2B%2B-v3%2Ftestsuite%2F19_diagnostics%2Ferror_code%2Foperators%2Fthree_way.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a6f08be383f846a0474ea8d1da9222b802c36c7c/libstdc%2B%2B-v3%2Ftestsuite%2F19_diagnostics%2Ferror_code%2Foperators%2Fthree_way.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F19_diagnostics%2Ferror_code%2Foperators%2Fthree_way.cc?ref=a6f08be383f846a0474ea8d1da9222b802c36c7c", "patch": "@@ -33,7 +33,7 @@ test01()\n \n   VERIFY( std::is_neq(e1 <=> e2) );\n   VERIFY( std::is_lt(e1 <=> e2) || std::is_gt(e1 <=> e2) );\n-  VERIFY( (e1 <=> e2) == (e1.value() <=> e2.value()) );\n+  VERIFY( (e1 <=> e2) == (e1.category() <=> e2.category()) );\n \n   VERIFY( e1 == e1 );\n   VERIFY( !(e1 == e2) );\n@@ -52,6 +52,12 @@ test01()\n \n   VERIFY( !(e3 < e3) );\n   VERIFY( (e2 < e3) == (e2.category() < e3.category()) );\n+\n+  std::error_code e4(std::make_error_code(std::errc::invalid_argument));\n+\n+  VERIFY( std::is_neq(e4 <=> e2) );\n+  VERIFY( std::is_lt(e4 <=> e2) || std::is_gt(e4 <=> e2) );\n+  VERIFY( (e4 <=> e2) == (e4.value() <=> e2.value()) );\n }\n \n int main()"}, {"sha": "8a6b71fdc3502cebe4d5e5825c22a1ff3c3a4daf", "filename": "libstdc++-v3/testsuite/19_diagnostics/error_condition/operators/less.cc", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a6f08be383f846a0474ea8d1da9222b802c36c7c/libstdc%2B%2B-v3%2Ftestsuite%2F19_diagnostics%2Ferror_condition%2Foperators%2Fless.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a6f08be383f846a0474ea8d1da9222b802c36c7c/libstdc%2B%2B-v3%2Ftestsuite%2F19_diagnostics%2Ferror_condition%2Foperators%2Fless.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F19_diagnostics%2Ferror_condition%2Foperators%2Fless.cc?ref=a6f08be383f846a0474ea8d1da9222b802c36c7c", "patch": "@@ -29,6 +29,7 @@ int main()\n   VERIFY( !(e1 < e1) );\n   VERIFY( !(e2 < e2) );\n \n+  // e1.category() == e2.category(), so comparison depends on values:\n   VERIFY( (e1 < e2) == (e1.value() < e2.value()) );\n \n   const __gnu_test::test_category cat;"}, {"sha": "e26afe57366d14e840efb0dd1154bb122247c97e", "filename": "libstdc++-v3/testsuite/19_diagnostics/error_condition/operators/three_way.cc", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a6f08be383f846a0474ea8d1da9222b802c36c7c/libstdc%2B%2B-v3%2Ftestsuite%2F19_diagnostics%2Ferror_condition%2Foperators%2Fthree_way.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a6f08be383f846a0474ea8d1da9222b802c36c7c/libstdc%2B%2B-v3%2Ftestsuite%2F19_diagnostics%2Ferror_condition%2Foperators%2Fthree_way.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F19_diagnostics%2Ferror_condition%2Foperators%2Fthree_way.cc?ref=a6f08be383f846a0474ea8d1da9222b802c36c7c", "patch": "@@ -33,6 +33,7 @@ test01()\n \n   VERIFY( std::is_neq(e1 <=> e2) );\n   VERIFY( std::is_lt(e1 <=> e2) || std::is_gt(e1 <=> e2) );\n+  // e1.category() == e2.category(), so comparison depends on values:\n   VERIFY( (e1 <=> e2) == (e1.value() <=> e2.value()) );\n \n   VERIFY( e1 == e1 );"}]}