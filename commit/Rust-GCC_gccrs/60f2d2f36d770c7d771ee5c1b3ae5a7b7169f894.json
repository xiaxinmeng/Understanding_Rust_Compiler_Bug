{"sha": "60f2d2f36d770c7d771ee5c1b3ae5a7b7169f894", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjBmMmQyZjM2ZDc3MGM3ZDc3MWVlNWMxYjNhZTVhN2I3MTY5Zjg5NA==", "commit": {"author": {"name": "Alan Lawrence", "email": "alan.lawrence@arm.com", "date": "2015-11-05T18:39:38Z"}, "committer": {"name": "Alan Lawrence", "email": "alalaw01@gcc.gnu.org", "date": "2015-11-05T18:39:38Z"}, "message": "[PATCH] tree-scalar-evolution.c: Handle LSHIFT by constant\n\ngcc/:\n\n\tPR tree-optimization/65963\n\t* tree-scalar-evolution.c (interpret_rhs_expr): Try to handle\n\tLSHIFT_EXPRs as equivalent unsigned MULT_EXPRs.\n\ngcc/testsuite/:\n\n\t* gcc.dg/pr68112.c: New.\n\t* gcc.dg/vect/vect-strided-shift-1.c: New.\n\nFrom-SVN: r229825", "tree": {"sha": "65aac17b5f145eda4e33e8de39b0b5c8ca339191", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/65aac17b5f145eda4e33e8de39b0b5c8ca339191"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/60f2d2f36d770c7d771ee5c1b3ae5a7b7169f894", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/60f2d2f36d770c7d771ee5c1b3ae5a7b7169f894", "html_url": "https://github.com/Rust-GCC/gccrs/commit/60f2d2f36d770c7d771ee5c1b3ae5a7b7169f894", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/60f2d2f36d770c7d771ee5c1b3ae5a7b7169f894/comments", "author": null, "committer": null, "parents": [{"sha": "bfcfbfa0d18abea5f6ced6ec4de409aa3810733e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bfcfbfa0d18abea5f6ced6ec4de409aa3810733e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bfcfbfa0d18abea5f6ced6ec4de409aa3810733e"}], "stats": {"total": 72, "additions": 72, "deletions": 0}, "files": [{"sha": "0dd763afc208136e623ed38202646a1c60f8dcd2", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/60f2d2f36d770c7d771ee5c1b3ae5a7b7169f894/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/60f2d2f36d770c7d771ee5c1b3ae5a7b7169f894/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=60f2d2f36d770c7d771ee5c1b3ae5a7b7169f894", "patch": "@@ -1,3 +1,9 @@\n+2015-11-05  Alan Lawrence  <alan.lawrence@arm.com>\n+\n+\tPR tree-optimization/65963\n+\t* tree-scalar-evolution.c (interpret_rhs_expr): Try to handle\n+\tLSHIFT_EXPRs as equivalent unsigned MULT_EXPRs.\n+\n 2015-11-05  James Greenhalgh  <james.greenhalgh@arm.com>\n \n \t* ifcvt.c (bb_ok_for_noce_convert_multiple_sets): New."}, {"sha": "d41124e91cf34b24ec97738a1ad0baa0c548fd77", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/60f2d2f36d770c7d771ee5c1b3ae5a7b7169f894/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/60f2d2f36d770c7d771ee5c1b3ae5a7b7169f894/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=60f2d2f36d770c7d771ee5c1b3ae5a7b7169f894", "patch": "@@ -1,3 +1,8 @@\n+2015-11-05  Alan Lawrence  <alan.lawrence@arm.com>\n+\n+\t* gcc.dg/pr68112.c: New.\n+\t* gcc.dg/vect/vect-strided-shift-1.c: New.\n+\n 2015-11-05  Marek Polacek  <polacek@redhat.com>\n \n \tPR c/68090"}, {"sha": "0a45b039003186c6f648fe0c425477ab6d79642f", "filename": "gcc/testsuite/gcc.dg/pr68112.c", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/60f2d2f36d770c7d771ee5c1b3ae5a7b7169f894/gcc%2Ftestsuite%2Fgcc.dg%2Fpr68112.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/60f2d2f36d770c7d771ee5c1b3ae5a7b7169f894/gcc%2Ftestsuite%2Fgcc.dg%2Fpr68112.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr68112.c?ref=60f2d2f36d770c7d771ee5c1b3ae5a7b7169f894", "patch": "@@ -0,0 +1,11 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -Waggressive-loop-optimizations\" } */\n+\n+int *a;\n+\n+void\n+foo ()\n+{\n+  for (int i = 0; i < 65536; i++)\n+    *a = i << 24;\n+}"}, {"sha": "b1ce2ece1707ef23d4aa81b715f8ac7dfcbeafe6", "filename": "gcc/testsuite/gcc.dg/vect/vect-strided-shift-1.c", "status": "added", "additions": 33, "deletions": 0, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/60f2d2f36d770c7d771ee5c1b3ae5a7b7169f894/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-strided-shift-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/60f2d2f36d770c7d771ee5c1b3ae5a7b7169f894/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-strided-shift-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-strided-shift-1.c?ref=60f2d2f36d770c7d771ee5c1b3ae5a7b7169f894", "patch": "@@ -0,0 +1,33 @@\n+/* PR tree-optimization/65963.  */\n+#include \"tree-vect.h\"\n+\n+#define N 512\n+\n+int in[2*N], out[N];\n+\n+__attribute__ ((noinline)) void\n+loop (void)\n+{\n+  for (int i = 0; i < N; i++)\n+    out[i] = in[i << 1] + 7;\n+}\n+\n+int\n+main (int argc, char **argv)\n+{\n+  check_vect ();\n+  for (int i = 0; i < 2*N; i++)\n+    {\n+      in[i] = i;\n+      __asm__ volatile (\"\" : : : \"memory\");\n+    }\n+  loop ();\n+  __asm__ volatile (\"\" : : : \"memory\");\n+  for (int i = 0; i < N; i++)\n+    {\n+      if (out[i] != i*2 + 7)\n+\tabort ();\n+    }\n+  return 0;\n+}\n+/* { dg-final { scan-tree-dump-times \"vectorized 1 loops in function\" 1 \"vect\" { target { vect_strided2 } } } } */"}, {"sha": "5cd7b1522ba6efe6059b68b9889983a0351ff614", "filename": "gcc/tree-scalar-evolution.c", "status": "modified", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/60f2d2f36d770c7d771ee5c1b3ae5a7b7169f894/gcc%2Ftree-scalar-evolution.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/60f2d2f36d770c7d771ee5c1b3ae5a7b7169f894/gcc%2Ftree-scalar-evolution.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-scalar-evolution.c?ref=60f2d2f36d770c7d771ee5c1b3ae5a7b7169f894", "patch": "@@ -1827,6 +1827,23 @@ interpret_rhs_expr (struct loop *loop, gimple *at_stmt,\n       res = chrec_fold_multiply (type, chrec1, chrec2);\n       break;\n \n+    case LSHIFT_EXPR:\n+      {\n+\t/* Handle A<<B as A * (1<<B).  */\n+\ttree uns = unsigned_type_for (type);\n+\tchrec1 = analyze_scalar_evolution (loop, rhs1);\n+\tchrec2 = analyze_scalar_evolution (loop, rhs2);\n+\tchrec1 = chrec_convert (uns, chrec1, at_stmt);\n+\tchrec1 = instantiate_parameters (loop, chrec1);\n+\tchrec2 = instantiate_parameters (loop, chrec2);\n+\n+\ttree one = build_int_cst (uns, 1);\n+\tchrec2 = fold_build2 (LSHIFT_EXPR, uns, one, chrec2);\n+\tres = chrec_fold_multiply (uns, chrec1, chrec2);\n+\tres = chrec_convert (type, res, at_stmt);\n+      }\n+      break;\n+\n     CASE_CONVERT:\n       /* In case we have a truncation of a widened operation that in\n          the truncated type has undefined overflow behavior analyze"}]}