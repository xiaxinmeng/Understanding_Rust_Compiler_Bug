{"sha": "c67e5194634c5c3dfd16580e862fb9d4a4552bc9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzY3ZTUxOTQ2MzRjNWMzZGZkMTY1ODBlODYyZmI5ZDRhNDU1MmJjOQ==", "commit": {"author": {"name": "Jeff Law", "email": "law@redhat.com", "date": "2015-10-26T15:36:04Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "2015-10-26T15:36:04Z"}, "message": "[PATCH] [PR tree-optimization/68013] Make sure first block in FSM path\nis in VISITED_BBs\n\n\tPR tree-optimization/68013\n\t* tree-ssa-threadbackward.c\n\t(fsm_find_control_statement_thread_paths): Make sure the first block\n\tin the path is in VISITED_BBs.\n\n\tPR tree-optimization/68013\n\t* gcc.c-torture/compile/pr68013.c: New test.\n\nFrom-SVN: r229375", "tree": {"sha": "a68e04085366e1abc4cc40f951f5ad25faa89a6e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a68e04085366e1abc4cc40f951f5ad25faa89a6e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c67e5194634c5c3dfd16580e862fb9d4a4552bc9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c67e5194634c5c3dfd16580e862fb9d4a4552bc9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c67e5194634c5c3dfd16580e862fb9d4a4552bc9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c67e5194634c5c3dfd16580e862fb9d4a4552bc9/comments", "author": null, "committer": null, "parents": [{"sha": "335dde2981e5680619d25bf934527c9549959569", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/335dde2981e5680619d25bf934527c9549959569", "html_url": "https://github.com/Rust-GCC/gccrs/commit/335dde2981e5680619d25bf934527c9549959569"}], "stats": {"total": 33, "additions": 33, "deletions": 0}, "files": [{"sha": "b5cfa1e693fc81f8b98bf7261fce7c0f2b4fac71", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c67e5194634c5c3dfd16580e862fb9d4a4552bc9/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c67e5194634c5c3dfd16580e862fb9d4a4552bc9/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=c67e5194634c5c3dfd16580e862fb9d4a4552bc9", "patch": "@@ -1,3 +1,10 @@\n+2015-10-26  Jeff Law  <law@redhat.com>\n+\n+\tPR tree-optimization/68013\n+\t* tree-ssa-threadbackward.c\n+\t(fsm_find_control_statement_thread_paths): Make sure the first block\n+\tin the path is in VISITED_BBs.\n+\n 2015-10-26  Richard Biener  <rguenther@suse.de>\n \tDominik Vogt  <vogt@linux.vnet.ibm.com>\n "}, {"sha": "688f7456fe84863eec250bfbda75208e71a7bc91", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c67e5194634c5c3dfd16580e862fb9d4a4552bc9/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c67e5194634c5c3dfd16580e862fb9d4a4552bc9/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=c67e5194634c5c3dfd16580e862fb9d4a4552bc9", "patch": "@@ -1,3 +1,8 @@\n+2015-10-26  Jeff Law  <law@redhat.com>\n+\n+\tPR tree-optimization/68013\n+\t* gcc.c-torture/compile/pr68013.c: New test.\n+\n 2015-10-26  Richard Biener  <rguenther@suse.de>\n \tDominik Vogt  <vogt@linux.vnet.ibm.com>\n "}, {"sha": "cc500da421eedeef85fa824b14150e1d2fd1bd15", "filename": "gcc/testsuite/gcc.c-torture/compile/pr68013.c", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c67e5194634c5c3dfd16580e862fb9d4a4552bc9/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr68013.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c67e5194634c5c3dfd16580e862fb9d4a4552bc9/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr68013.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr68013.c?ref=c67e5194634c5c3dfd16580e862fb9d4a4552bc9", "patch": "@@ -0,0 +1,16 @@\n+int a, b, c, d, e, f;\n+\n+void\n+fn1 ()\n+{\n+  for (; e;)\n+    {\n+      e = f;\n+      for (; b;)\n+\t{\n+\t  b = a;\n+\t  f = a || d ? 0 : c;\n+\t}\n+      d = 0;\n+    }\n+}"}, {"sha": "cfb4ace8e9dfbd9c0d10fbcffe20c0d1e1049785", "filename": "gcc/tree-ssa-threadbackward.c", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c67e5194634c5c3dfd16580e862fb9d4a4552bc9/gcc%2Ftree-ssa-threadbackward.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c67e5194634c5c3dfd16580e862fb9d4a4552bc9/gcc%2Ftree-ssa-threadbackward.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-threadbackward.c?ref=c67e5194634c5c3dfd16580e862fb9d4a4552bc9", "patch": "@@ -136,6 +136,11 @@ fsm_find_control_statement_thread_paths (tree name,\n       vec<basic_block, va_gc> *next_path;\n       vec_alloc (next_path, n_basic_blocks_for_fn (cfun));\n \n+      /* When VAR_BB == LAST_BB_IN_PATH, then the first block in the path\n+\t will already be in VISITED_BBS.  When they are not equal, then we\n+\t must ensure that first block is accounted for to ensure we do not\n+\t create bogus jump threading paths.  */\n+      visited_bbs->add ((*path)[0]);\n       FOR_EACH_EDGE (e, ei, last_bb_in_path->preds)\n \t{\n \t  hash_set<basic_block> *visited_bbs = new hash_set<basic_block>;"}]}