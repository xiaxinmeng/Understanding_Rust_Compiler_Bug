{"sha": "5b75bf576f92ac16409fd7d3f1fd3f64c02bca11", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWI3NWJmNTc2ZjkyYWMxNjQwOWZkN2QzZjFmZDNmNjRjMDJiY2ExMQ==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2013-04-11T09:49:40Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2013-04-11T09:49:40Z"}, "message": "[multiple changes]\n\n2013-04-11  Robert Dewar  <dewar@adacore.com>\n\n\t* sem_prag.adb, sem_attr.adb, gnat1drv.adb, prj-makr.adb,\n\topt.ads, sem_ch13.adb: Minor reformatting.\n\t* debug.adb: Minor comment fix (remove junk .I doc).\n\n2013-04-11  Thomas Quinot  <quinot@adacore.com>\n\n\t* rtsfind.ads, exp_dist.adb, exp_dist.ads (Rtsfind.PCS_Version, case\n\tPolyORB): Bump to 6.\n\t(Exp_Dist.PolyORB_Support): Replace TC_Build with\n\tBuild_Complex_TC.\n\nFrom-SVN: r197752", "tree": {"sha": "aa49bf75313526275a79e5650357105fab770e30", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/aa49bf75313526275a79e5650357105fab770e30"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5b75bf576f92ac16409fd7d3f1fd3f64c02bca11", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5b75bf576f92ac16409fd7d3f1fd3f64c02bca11", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5b75bf576f92ac16409fd7d3f1fd3f64c02bca11", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5b75bf576f92ac16409fd7d3f1fd3f64c02bca11/comments", "author": null, "committer": null, "parents": [{"sha": "303fbb20de25887e87f259cef49db64b51a7db0e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/303fbb20de25887e87f259cef49db64b51a7db0e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/303fbb20de25887e87f259cef49db64b51a7db0e"}], "stats": {"total": 134, "additions": 83, "deletions": 51}, "files": [{"sha": "ed18e974b838918700bca0271e063231b9435b6c", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5b75bf576f92ac16409fd7d3f1fd3f64c02bca11/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5b75bf576f92ac16409fd7d3f1fd3f64c02bca11/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=5b75bf576f92ac16409fd7d3f1fd3f64c02bca11", "patch": "@@ -1,3 +1,16 @@\n+2013-04-11  Robert Dewar  <dewar@adacore.com>\n+\n+\t* sem_prag.adb, sem_attr.adb, gnat1drv.adb, prj-makr.adb,\n+\topt.ads, sem_ch13.adb: Minor reformatting.\n+\t* debug.adb: Minor comment fix (remove junk .I doc).\n+\n+2013-04-11  Thomas Quinot  <quinot@adacore.com>\n+\n+\t* rtsfind.ads, exp_dist.adb, exp_dist.ads (Rtsfind.PCS_Version, case\n+\tPolyORB): Bump to 6.\n+\t(Exp_Dist.PolyORB_Support): Replace TC_Build with\n+\tBuild_Complex_TC.\n+\n 2013-04-11  Arnaud Charlet  <charlet@adacore.com>\n \n \t* debug.adb, sem_prag.adb, par-ch2.adb, sem_attr.adb, gnat1drv.adb,"}, {"sha": "ae66737c4be522b4cbb148dc30873f9b92d116db", "filename": "gcc/ada/debug.adb", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5b75bf576f92ac16409fd7d3f1fd3f64c02bca11/gcc%2Fada%2Fdebug.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5b75bf576f92ac16409fd7d3f1fd3f64c02bca11/gcc%2Fada%2Fdebug.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fdebug.adb?ref=5b75bf576f92ac16409fd7d3f1fd3f64c02bca11", "patch": "@@ -609,10 +609,6 @@ package body Debug is\n    --       will only generate Why code for package Standard. Any given input\n    --       file will be ignored.\n \n-   --  d.I  Generate SCIL mode. Generate intermediate code for the sake of\n-   --       of static analysis tools, and ensure additional tree consistency\n-   --       between different compilations of specs.\n-\n    --  d.J  Disable parallel SCIL generation. Normally SCIL file generation is\n    --       done in parallel to speed processing. This switch disables this\n    --       behavior."}, {"sha": "6d499c45dce0408494dbc100cafa75a2fd4716e9", "filename": "gcc/ada/exp_dist.adb", "status": "modified", "additions": 14, "deletions": 13, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5b75bf576f92ac16409fd7d3f1fd3f64c02bca11/gcc%2Fada%2Fexp_dist.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5b75bf576f92ac16409fd7d3f1fd3f64c02bca11/gcc%2Fada%2Fexp_dist.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_dist.adb?ref=5b75bf576f92ac16409fd7d3f1fd3f64c02bca11", "patch": "@@ -6630,9 +6630,10 @@ package body Exp_Dist is\n                    Make_Simple_Return_Statement (Loc,\n                      Expression =>\n                        Make_Function_Call (Loc,\n-                         Name => New_Occurrence_Of (RTE (RE_TC_Build), Loc),\n+                         Name =>\n+                           New_Occurrence_Of (RTE (RE_Build_Complex_TC), Loc),\n                          Parameter_Associations => New_List (\n-                           New_Occurrence_Of (RTE (RE_TC_Object), Loc),\n+                           New_Occurrence_Of (RTE (RE_Tk_Objref), Loc),\n                            Make_Aggregate (Loc,\n                              Expressions =>\n                                New_List (\n@@ -10207,11 +10208,11 @@ package body Exp_Dist is\n             function Make_Constructed_TypeCode\n               (Kind       : Entity_Id;\n                Parameters : List_Id) return Node_Id;\n-            --  Call TC_Build with the given kind and parameters\n+            --  Call Build_Complex_TC with the given kind and parameters\n \n             procedure Return_Constructed_TypeCode (Kind : Entity_Id);\n-            --  Make a return statement that calls TC_Build with the given\n-            --  typecode kind, and the constructed parameters list.\n+            --  Make a return statement that calls Build_Complex_TC with the\n+            --  given typecode kind, and the constructed parameters list.\n \n             procedure Return_Alias_TypeCode (Base_TypeCode : Node_Id);\n             --  Return a typecode that is a TC_Alias for the given typecode\n@@ -10285,7 +10286,7 @@ package body Exp_Dist is\n             procedure Return_Alias_TypeCode (Base_TypeCode : Node_Id) is\n             begin\n                Add_TypeCode_Parameter (Base_TypeCode, Parameters);\n-               Return_Constructed_TypeCode (RTE (RE_TC_Alias));\n+               Return_Constructed_TypeCode (RTE (RE_Tk_Alias));\n             end Return_Alias_TypeCode;\n \n             -------------------------------\n@@ -10299,7 +10300,7 @@ package body Exp_Dist is\n                Constructed_TC : constant Node_Id :=\n                  Make_Function_Call (Loc,\n                    Name =>\n-                     New_Occurrence_Of (RTE (RE_TC_Build), Loc),\n+                     New_Occurrence_Of (RTE (RE_Build_Complex_TC), Loc),\n                    Parameter_Associations => New_List (\n                      New_Occurrence_Of (Kind, Loc),\n                      Make_Aggregate (Loc,\n@@ -10420,7 +10421,7 @@ package body Exp_Dist is\n \n                         Add_TypeCode_Parameter\n                           (Make_Constructed_TypeCode\n-                           (RTE (RE_TC_Struct), Struct_TC_Params),\n+                             (RTE (RE_Tk_Struct), Struct_TC_Params),\n                            Union_TC_Params);\n \n                         Add_String_Parameter (Name_Str, Union_TC_Params);\n@@ -10439,7 +10440,7 @@ package body Exp_Dist is\n \n                      Add_TypeCode_Parameter\n                        (Make_Constructed_TypeCode\n-                        (RTE (RE_TC_Union), Union_TC_Params),\n+                          (RTE (RE_Tk_Union), Union_TC_Params),\n                         Params);\n \n                      Add_String_Parameter (Name_Str, Params);\n@@ -10687,7 +10688,7 @@ package body Exp_Dist is\n                      TC_Append_Record_Traversal\n                        (Parameters, Component_List (Rdef),\n                         Empty, Dummy_Counter);\n-                     Return_Constructed_TypeCode (RTE (RE_TC_Struct));\n+                     Return_Constructed_TypeCode (RTE (RE_Tk_Struct));\n                   end;\n                end if;\n \n@@ -10705,7 +10706,7 @@ package body Exp_Dist is\n                   for J in 1 .. Ndim loop\n                      if Constrained then\n                         Inner_TypeCode := Make_Constructed_TypeCode\n-                          (RTE (RE_TC_Array), New_List (\n+                          (RTE (RE_Tk_Array), New_List (\n                             Build_To_Any_Call (Loc,\n                               OK_Convert_To (RTE (RE_Unsigned_32),\n                                 Make_Attribute_Reference (Loc,\n@@ -10731,7 +10732,7 @@ package body Exp_Dist is\n                         Next_Index (Indx);\n \n                         Inner_TypeCode := Make_Constructed_TypeCode\n-                          (RTE (RE_TC_Sequence), New_List (\n+                          (RTE (RE_Tk_Sequence), New_List (\n                             Build_To_Any_Call (Loc,\n                               OK_Convert_To (RTE (RE_Unsigned_32),\n                                 Make_Integer_Literal (Loc, 0)),\n@@ -10747,7 +10748,7 @@ package body Exp_Dist is\n                      Start_String;\n                      Store_String_Char ('V');\n                      Add_String_Parameter (End_String, Parameters);\n-                     Return_Constructed_TypeCode (RTE (RE_TC_Struct));\n+                     Return_Constructed_TypeCode (RTE (RE_Tk_Struct));\n                   end if;\n                end;\n "}, {"sha": "53f59f4757ff5b103838a1e75fe97eadf6fb3f01", "filename": "gcc/ada/exp_dist.ads", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5b75bf576f92ac16409fd7d3f1fd3f64c02bca11/gcc%2Fada%2Fexp_dist.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5b75bf576f92ac16409fd7d3f1fd3f64c02bca11/gcc%2Fada%2Fexp_dist.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_dist.ads?ref=5b75bf576f92ac16409fd7d3f1fd3f64c02bca11", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1992-2012, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2013, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -35,7 +35,7 @@ package Exp_Dist is\n    PCS_Version_Number : constant array (PCS_Names) of Int :=\n                           (Name_No_DSA      => 1,\n                            Name_GARLIC_DSA  => 1,\n-                           Name_PolyORB_DSA => 5);\n+                           Name_PolyORB_DSA => 6);\n    --  PCS interface version. This is used to check for consistency between the\n    --  compiler used to generate distribution stubs and the PCS implementation.\n    --  It must be incremented whenever a change is made to the generated code"}, {"sha": "7a59c52efb3d1f3c70a9b43c6a96c55be016630f", "filename": "gcc/ada/gnat1drv.adb", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5b75bf576f92ac16409fd7d3f1fd3f64c02bca11/gcc%2Fada%2Fgnat1drv.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5b75bf576f92ac16409fd7d3f1fd3f64c02bca11/gcc%2Fada%2Fgnat1drv.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnat1drv.adb?ref=5b75bf576f92ac16409fd7d3f1fd3f64c02bca11", "patch": "@@ -275,7 +275,11 @@ procedure Gnat1drv is\n          Force_ALI_Tree_File := True;\n          Try_Semantics := True;\n \n-         --  Make the Ada front-end more liberal to support other Ada compilers\n+         --  Make the Ada front-end more liberal so that the compiler will\n+         --  allow illegal code that is allowed by other compilers. CodePeer\n+         --  is in the business of finding problems, not enforcing rules!\n+         --  This is useful when using CodePeer mode with other compilers.\n+\n          Relaxed_RM_Semantics := True;\n       end if;\n "}, {"sha": "ee1c73f87e1fce60102e13ba892a1063c98d723c", "filename": "gcc/ada/opt.ads", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5b75bf576f92ac16409fd7d3f1fd3f64c02bca11/gcc%2Fada%2Fopt.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5b75bf576f92ac16409fd7d3f1fd3f64c02bca11/gcc%2Fada%2Fopt.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fopt.ads?ref=5b75bf576f92ac16409fd7d3f1fd3f64c02bca11", "patch": "@@ -1191,7 +1191,12 @@ package Opt is\n    Relaxed_RM_Semantics : Boolean := False;\n    --  GNAT\n    --  Set to True to ignore some Ada semantic error to help parse legacy\n-   --  Ada code for use in e.g. static analysis (such as CodePeer).\n+   --  Ada code for use in e.g. static analysis (such as CodePeer). This\n+   --  deals with cases where other compilers allow illegal constructs. Tools\n+   --  such as CodePeer are interested in analyzing code rather than enforcing\n+   --  legality rules, so as long as these illegal constructs end up with code\n+   --  that can be handled by the tool in question, there is no reason to\n+   --  reject the code that is considered correct by the other compiler.\n \n    Replace_In_Comments : Boolean := False;\n    --  GNATPREP"}, {"sha": "3b869641f6a3a625842291ef482fc67008dfc99e", "filename": "gcc/ada/prj-makr.adb", "status": "modified", "additions": 13, "deletions": 10, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5b75bf576f92ac16409fd7d3f1fd3f64c02bca11/gcc%2Fada%2Fprj-makr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5b75bf576f92ac16409fd7d3f1fd3f64c02bca11/gcc%2Fada%2Fprj-makr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-makr.adb?ref=5b75bf576f92ac16409fd7d3f1fd3f64c02bca11", "patch": "@@ -1048,31 +1048,34 @@ package body Prj.Makr is\n            Project_File_Extension;\n          Output_Name_Last := Output_Name_Last + Project_File_Extension'Length;\n \n-         --  Back up project file if it already exists\n+         --  Back up project file if it already exists (not needed in VMS since\n+         --  versioning of files takes care of this requirement on VMS).\n \n          if not Hostparm.OpenVMS\n            and then not Opt.No_Backup\n-           and then\n-             Is_Regular_File (Path_Name (1 .. Path_Last))\n+           and then Is_Regular_File (Path_Name (1 .. Path_Last))\n          then\n             declare\n-               Discard : Boolean;\n+               Discard    : Boolean;\n                Saved_Path : constant String :=\n-                 Path_Name (1 .. Path_Last) & \".saved_\";\n-               Nmb : Natural := 0;\n+                              Path_Name (1 .. Path_Last) & \".saved_\";\n+               Nmb        : Natural;\n+\n             begin\n+               Nmb := 0;\n                loop\n                   declare\n                      Img : constant String := Nmb'Img;\n+\n                   begin\n                      if not Is_Regular_File\n-                             (Saved_Path & Img (2 .. Img'Last))\n+                              (Saved_Path & Img (2 .. Img'Last))\n                      then\n                         Copy_File\n-                          (Name => Path_Name (1 .. Path_Last),\n+                          (Name     => Path_Name (1 .. Path_Last),\n                            Pathname => Saved_Path & Img (2 .. Img'Last),\n-                           Mode => Overwrite,\n-                           Success => Discard);\n+                           Mode     => Overwrite,\n+                           Success  => Discard);\n                         exit;\n                      end if;\n "}, {"sha": "f218cdc7a2bdad2ddbd59a5ef53c1e39cbefc1e6", "filename": "gcc/ada/rtsfind.ads", "status": "modified", "additions": 21, "deletions": 19, "changes": 40, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5b75bf576f92ac16409fd7d3f1fd3f64c02bca11/gcc%2Fada%2Frtsfind.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5b75bf576f92ac16409fd7d3f1fd3f64c02bca11/gcc%2Fada%2Frtsfind.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Frtsfind.ads?ref=5b75bf576f92ac16409fd7d3f1fd3f64c02bca11", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1992-2012, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2013, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -1307,6 +1307,9 @@ package Rtsfind is\n      RE_Release_Buffer,                  -- System.Partition_Interface\n      RE_BS_To_Any,                       -- System.Partition_Interface\n      RE_Any_To_BS,                       -- System.Partition_Interface\n+     RE_Build_Complex_TC,                -- System.Partition_Interface\n+     RE_Get_TC,                          -- System.Partition_Interface\n+     RE_Set_TC,                          -- System.Partition_Interface\n \n      RE_FA_A,                            -- System.Partition_Interface\n      RE_FA_B,                            -- System.Partition_Interface\n@@ -1350,10 +1353,6 @@ package Rtsfind is\n      RE_TA_Std_String,                   -- System.Partition_Interface\n      RE_TA_TC,                           -- System.Partition_Interface\n \n-     RE_TC_Alias,                        -- System.Partition_Interface\n-     RE_TC_Build,                        -- System.Partition_Interface\n-     RE_Get_TC,                          -- System.Partition_Interface\n-     RE_Set_TC,                          -- System.Partition_Interface\n      RE_TC_A,                            -- System.Partition_Interface\n      RE_TC_B,                            -- System.Partition_Interface\n      RE_TC_C,                            -- System.Partition_Interface\n@@ -1373,12 +1372,14 @@ package Rtsfind is\n      RE_TC_Opaque,                       -- System.Partition_Interface\n      RE_TC_WC,                           -- System.Partition_Interface\n      RE_TC_WWC,                          -- System.Partition_Interface\n-     RE_TC_Array,                        -- System.Partition_Interface\n-     RE_TC_Sequence,                     -- System.Partition_Interface\n      RE_TC_String,                       -- System.Partition_Interface\n-     RE_TC_Struct,                       -- System.Partition_Interface\n-     RE_TC_Union,                        -- System.Partition_Interface\n-     RE_TC_Object,                       -- System.Partition_Interface\n+\n+     RE_Tk_Alias,                        -- System.Partition_Interface\n+     RE_Tk_Array,                        -- System.Partition_Interface\n+     RE_Tk_Sequence,                     -- System.Partition_Interface\n+     RE_Tk_Struct,                       -- System.Partition_Interface\n+     RE_Tk_Objref,                       -- System.Partition_Interface\n+     RE_Tk_Union,                        -- System.Partition_Interface\n \n      RE_IS_Is1,                          -- System.Scalar_Values\n      RE_IS_Is2,                          -- System.Scalar_Values\n@@ -2550,6 +2551,9 @@ package Rtsfind is\n      RE_Release_Buffer                   => System_Partition_Interface,\n      RE_BS_To_Any                        => System_Partition_Interface,\n      RE_Any_To_BS                        => System_Partition_Interface,\n+     RE_Build_Complex_TC                 => System_Partition_Interface,\n+     RE_Get_TC                           => System_Partition_Interface,\n+     RE_Set_TC                           => System_Partition_Interface,\n \n      RE_FA_A                             => System_Partition_Interface,\n      RE_FA_B                             => System_Partition_Interface,\n@@ -2593,10 +2597,6 @@ package Rtsfind is\n      RE_TA_Std_String                    => System_Partition_Interface,\n      RE_TA_TC                            => System_Partition_Interface,\n \n-     RE_TC_Alias                         => System_Partition_Interface,\n-     RE_TC_Build                         => System_Partition_Interface,\n-     RE_Get_TC                           => System_Partition_Interface,\n-     RE_Set_TC                           => System_Partition_Interface,\n      RE_TC_A                             => System_Partition_Interface,\n      RE_TC_B                             => System_Partition_Interface,\n      RE_TC_C                             => System_Partition_Interface,\n@@ -2616,12 +2616,14 @@ package Rtsfind is\n      RE_TC_Opaque                        => System_Partition_Interface,\n      RE_TC_WC                            => System_Partition_Interface,\n      RE_TC_WWC                           => System_Partition_Interface,\n-     RE_TC_Array                         => System_Partition_Interface,\n-     RE_TC_Sequence                      => System_Partition_Interface,\n      RE_TC_String                        => System_Partition_Interface,\n-     RE_TC_Struct                        => System_Partition_Interface,\n-     RE_TC_Union                         => System_Partition_Interface,\n-     RE_TC_Object                        => System_Partition_Interface,\n+\n+     RE_Tk_Alias                         => System_Partition_Interface,\n+     RE_Tk_Array                         => System_Partition_Interface,\n+     RE_Tk_Sequence                      => System_Partition_Interface,\n+     RE_Tk_Struct                        => System_Partition_Interface,\n+     RE_Tk_Objref                        => System_Partition_Interface,\n+     RE_Tk_Union                         => System_Partition_Interface,\n \n      RE_Global_Pool_Object               => System_Pool_Global,\n "}, {"sha": "c20167a9527bd6a813393fd723da063cbc28df5c", "filename": "gcc/ada/sem_attr.adb", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5b75bf576f92ac16409fd7d3f1fd3f64c02bca11/gcc%2Fada%2Fsem_attr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5b75bf576f92ac16409fd7d3f1fd3f64c02bca11/gcc%2Fada%2Fsem_attr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_attr.adb?ref=5b75bf576f92ac16409fd7d3f1fd3f64c02bca11", "patch": "@@ -5016,6 +5016,8 @@ package body Sem_Attr is\n          then\n             null;\n \n+         --  Some other compilers allow dubious use of X'???'Size\n+\n          elsif Relaxed_RM_Semantics\n            and then Nkind (P) = N_Attribute_Reference\n          then"}, {"sha": "5d87d3d1e327f58d7a8b7364dd52cc37653045e2", "filename": "gcc/ada/sem_ch13.adb", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5b75bf576f92ac16409fd7d3f1fd3f64c02bca11/gcc%2Fada%2Fsem_ch13.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5b75bf576f92ac16409fd7d3f1fd3f64c02bca11/gcc%2Fada%2Fsem_ch13.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch13.adb?ref=5b75bf576f92ac16409fd7d3f1fd3f64c02bca11", "patch": "@@ -9002,6 +9002,10 @@ package body Sem_Ch13 is\n \n       procedure Too_Late is\n       begin\n+         --  Other compilers seem more relaxed about rep items appearing too\n+         --  late. Since analysis tools typically don't care about rep items\n+         --  anyway, no reason to be too strict about this.\n+\n          if not Relaxed_RM_Semantics then\n             Error_Msg_N (\"|representation item appears too late!\", N);\n          end if;"}, {"sha": "8381837a050798130f3659ed195db57ab2bbe314", "filename": "gcc/ada/sem_prag.adb", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5b75bf576f92ac16409fd7d3f1fd3f64c02bca11/gcc%2Fada%2Fsem_prag.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5b75bf576f92ac16409fd7d3f1fd3f64c02bca11/gcc%2Fada%2Fsem_prag.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_prag.adb?ref=5b75bf576f92ac16409fd7d3f1fd3f64c02bca11", "patch": "@@ -1915,7 +1915,9 @@ package body Sem_Prag is\n          --  is itself a library-level declaration is done elsewhere.\n \n          --  Note: we omit this check in Relaxed_RM_Semantics mode to properly\n-         --  handle code prior to AI-0033.\n+         --  handle code prior to AI-0033. Analysis tools typically are not\n+         --  interested in this pragma in any case, so no need to worry too\n+         --  much about its placement.\n \n          if Inside_A_Generic then\n             if Ekind (Scope (Current_Scope)) = E_Generic_Package"}]}