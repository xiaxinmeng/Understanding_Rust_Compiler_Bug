{"sha": "0339d2395be26ee053e1b4b4a277510cf5ea7d83", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDMzOWQyMzk1YmUyNmVlMDUzZTFiNGI0YTI3NzUxMGNmNWVhN2Q4Mw==", "commit": {"author": {"name": "DJ Delorie", "email": "dj@redhat.com", "date": "2002-04-12T18:37:56Z"}, "committer": {"name": "DJ Delorie", "email": "dj@gcc.gnu.org", "date": "2002-04-12T18:37:56Z"}, "message": "integrate.c (compare_blocks): Make comparisons safe for when sizeof(int) < sizeof(char *).\n\n* integrate.c (compare_blocks): Make comparisons safe for when\nsizeof(int) < sizeof(char *).\n(find_block): Likewise.\n\nFrom-SVN: r52232", "tree": {"sha": "bd5de10339e68b2e6403476aec6541df3ae3916b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/bd5de10339e68b2e6403476aec6541df3ae3916b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0339d2395be26ee053e1b4b4a277510cf5ea7d83", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0339d2395be26ee053e1b4b4a277510cf5ea7d83", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0339d2395be26ee053e1b4b4a277510cf5ea7d83", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0339d2395be26ee053e1b4b4a277510cf5ea7d83/comments", "author": null, "committer": null, "parents": [{"sha": "cc4d5fec87941feae93ed070482e6c49a5ccf409", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cc4d5fec87941feae93ed070482e6c49a5ccf409", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cc4d5fec87941feae93ed070482e6c49a5ccf409"}], "stats": {"total": 22, "additions": 18, "deletions": 4}, "files": [{"sha": "e5d336f475a1185fc447b979d0d77e9da7d20b7f", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0339d2395be26ee053e1b4b4a277510cf5ea7d83/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0339d2395be26ee053e1b4b4a277510cf5ea7d83/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=0339d2395be26ee053e1b4b4a277510cf5ea7d83", "patch": "@@ -1,3 +1,9 @@\n+2002-04-12  DJ Delorie  <dj@redhat.com>\n+\n+\t* integrate.c (compare_blocks): Make comparisons safe for when\n+\tsizeof(int) < sizeof(char *).\n+\t(find_block): Likewise.\n+\n 2002-04-12  Jan Hubicka  <jh@suse.cz>\n \t    David Edelsohn  <edelsohn@gnu.org>\n "}, {"sha": "3537364fc68d590aaa2289f8f6c98bb26a010e1c", "filename": "gcc/integrate.c", "status": "modified", "additions": 12, "deletions": 4, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0339d2395be26ee053e1b4b4a277510cf5ea7d83/gcc%2Fintegrate.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0339d2395be26ee053e1b4b4a277510cf5ea7d83/gcc%2Fintegrate.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fintegrate.c?ref=0339d2395be26ee053e1b4b4a277510cf5ea7d83", "patch": "@@ -595,7 +595,8 @@ process_reg_param (map, loc, copy)\n }\n \n /* Compare two BLOCKs for qsort.  The key we sort on is the\n-   BLOCK_ABSTRACT_ORIGIN of the blocks.  */\n+   BLOCK_ABSTRACT_ORIGIN of the blocks.  We cannot just subtract the\n+   two pointers, because it may overflow sizeof(int).  */\n \n static int\n compare_blocks (v1, v2)\n@@ -604,9 +605,12 @@ compare_blocks (v1, v2)\n {\n   tree b1 = *((const tree *) v1);\n   tree b2 = *((const tree *) v2);\n+  char *p1 = (char *) BLOCK_ABSTRACT_ORIGIN (b1);\n+  char *p2 = (char *) BLOCK_ABSTRACT_ORIGIN (b2);\n \n-  return ((char *) BLOCK_ABSTRACT_ORIGIN (b1)\n-\t  - (char *) BLOCK_ABSTRACT_ORIGIN (b2));\n+  if (p1 == p2)\n+    return 0;\n+  return p1 < p2 ? -1 : 1;\n }\n \n /* Compare two BLOCKs for bsearch.  The first pointer corresponds to\n@@ -619,8 +623,12 @@ find_block (v1, v2)\n {\n   const union tree_node *b1 = (const union tree_node *) v1;\n   tree b2 = *((const tree *) v2);\n+  char *p1 = (char *) b1;\n+  char *p2 = (char *) BLOCK_ABSTRACT_ORIGIN (b2);\n \n-  return ((const char *) b1 - (char *) BLOCK_ABSTRACT_ORIGIN (b2));\n+  if (p1 == p2)\n+    return 0;\n+  return p1 < p2 ? -1 : 1;\n }\n \n /* Integrate the procedure defined by FNDECL.  Note that this function"}]}