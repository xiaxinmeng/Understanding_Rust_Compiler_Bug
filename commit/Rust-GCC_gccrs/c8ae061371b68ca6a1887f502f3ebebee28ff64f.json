{"sha": "c8ae061371b68ca6a1887f502f3ebebee28ff64f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzhhZTA2MTM3MWI2OGNhNmExODg3ZjUwMmYzZWJlYmVlMjhmZjY0Zg==", "commit": {"author": {"name": "Sebastian Pop", "email": "sebastian.pop@amd.com", "date": "2010-01-08T16:07:18Z"}, "committer": {"name": "Sebastian Pop", "email": "spop@gcc.gnu.org", "date": "2010-01-08T16:07:18Z"}, "message": "Remove COMPONENT_REF limitation in SCoP detection.\n\n2010-01-08  Sebastian Pop  <sebastian.pop@amd.com>\n\n\t* graphite-scop-detection.c (exclude_component_ref): Removed.\n\t(is_simple_operand): Removed.\n\t(stmt_simple_for_scop_p): Remove use of is_simple_operand.\n\nFrom-SVN: r155739", "tree": {"sha": "d5cd85ac3004514546a4e397131e14f0338d9f35", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d5cd85ac3004514546a4e397131e14f0338d9f35"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c8ae061371b68ca6a1887f502f3ebebee28ff64f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c8ae061371b68ca6a1887f502f3ebebee28ff64f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c8ae061371b68ca6a1887f502f3ebebee28ff64f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c8ae061371b68ca6a1887f502f3ebebee28ff64f/comments", "author": null, "committer": {"login": "sebpop", "id": 568397, "node_id": "MDQ6VXNlcjU2ODM5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/568397?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sebpop", "html_url": "https://github.com/sebpop", "followers_url": "https://api.github.com/users/sebpop/followers", "following_url": "https://api.github.com/users/sebpop/following{/other_user}", "gists_url": "https://api.github.com/users/sebpop/gists{/gist_id}", "starred_url": "https://api.github.com/users/sebpop/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sebpop/subscriptions", "organizations_url": "https://api.github.com/users/sebpop/orgs", "repos_url": "https://api.github.com/users/sebpop/repos", "events_url": "https://api.github.com/users/sebpop/events{/privacy}", "received_events_url": "https://api.github.com/users/sebpop/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "79667f82adf76d79baf6acfa20df02cf7f14d5fc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/79667f82adf76d79baf6acfa20df02cf7f14d5fc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/79667f82adf76d79baf6acfa20df02cf7f14d5fc"}], "stats": {"total": 77, "additions": 7, "deletions": 70}, "files": [{"sha": "cca61189e0fd21e8199728ad34fba44b13260858", "filename": "gcc/ChangeLog.graphite", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c8ae061371b68ca6a1887f502f3ebebee28ff64f/gcc%2FChangeLog.graphite", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c8ae061371b68ca6a1887f502f3ebebee28ff64f/gcc%2FChangeLog.graphite", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog.graphite?ref=c8ae061371b68ca6a1887f502f3ebebee28ff64f", "patch": "@@ -1,3 +1,9 @@\n+2010-01-08  Sebastian Pop  <sebastian.pop@amd.com>\n+\n+\t* graphite-scop-detection.c (exclude_component_ref): Removed.\n+\t(is_simple_operand): Removed.\n+\t(stmt_simple_for_scop_p): Remove use of is_simple_operand.\n+\n 2010-01-07  Sebastian Pop  <sebastian.pop@amd.com>\n \n \tPR middle-end/42221"}, {"sha": "8fd7b54ef079d6b9b7f108dd0abd2c1b8d0d7be2", "filename": "gcc/graphite-scop-detection.c", "status": "modified", "additions": 1, "deletions": 70, "changes": 71, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c8ae061371b68ca6a1887f502f3ebebee28ff64f/gcc%2Fgraphite-scop-detection.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c8ae061371b68ca6a1887f502f3ebebee28ff64f/gcc%2Fgraphite-scop-detection.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgraphite-scop-detection.c?ref=c8ae061371b68ca6a1887f502f3ebebee28ff64f", "patch": "@@ -297,41 +297,6 @@ stmt_has_simple_data_refs_p (loop_p outermost_loop, gimple stmt)\n   return res;\n }\n \n-/* Return false if the TREE_CODE of the operand OP or any of its operands\n-   is a COMPONENT_REF.  */\n-\n-static bool\n-exclude_component_ref (tree op)\n-{\n-  int i;\n-  int len;\n-\n-  if (!op)\n-    return true;\n-\n-  if (TREE_CODE (op) == COMPONENT_REF)\n-    return false;\n-\n-  len = TREE_OPERAND_LENGTH (op);\n-  for (i = 0; i < len; ++i)\n-    if (!exclude_component_ref (TREE_OPERAND (op, i)))\n-      return false;\n-\n-  return true;\n-}\n-\n-/* Return true if the operand OP used in STMT is simple in regards to\n-   OUTERMOST_LOOP.  */\n-\n-static inline bool\n-is_simple_operand (tree op)\n-{\n-  /* It is not a simple operand when it is a declaration or a\n-     structure.  */\n-  return !DECL_P (op) && !AGGREGATE_TYPE_P (TREE_TYPE (op))\n-    && exclude_component_ref (op);\n-}\n-\n /* Return true only when STMT is simple enough for being handled by\n    Graphite.  This depends on SCOP_ENTRY, as the parameters are\n    initialized relatively to this basic block, the linear functions\n@@ -395,42 +360,8 @@ stmt_simple_for_scop_p (basic_block scop_entry, loop_p outermost_loop,\n       }\n \n     case GIMPLE_ASSIGN:\n-      {\n-\tenum tree_code code = gimple_assign_rhs_code (stmt);\n-\n-\tswitch (get_gimple_rhs_class (code))\n-\t  {\n-\t  case GIMPLE_UNARY_RHS:\n-\t  case GIMPLE_SINGLE_RHS:\n-\t    return (is_simple_operand (gimple_assign_lhs (stmt))\n-\t\t    && is_simple_operand (gimple_assign_rhs1 (stmt)));\n-\n-\t  case GIMPLE_BINARY_RHS:\n-\t    return (is_simple_operand (gimple_assign_lhs (stmt))\n-\t\t    && is_simple_operand (gimple_assign_rhs1 (stmt))\n-\t\t    && is_simple_operand (gimple_assign_rhs2 (stmt)));\n-\n-\t  case GIMPLE_INVALID_RHS:\n-\t  default:\n-\t    gcc_unreachable ();\n-\t  }\n-      }\n-\n     case GIMPLE_CALL:\n-      {\n-\tsize_t i;\n-\tsize_t n = gimple_call_num_args (stmt);\n-\ttree lhs = gimple_call_lhs (stmt);\n-\n-\tif (lhs && !is_simple_operand (lhs))\n-\t  return false;\n-\n-\tfor (i = 0; i < n; i++)\n-\t  if (!is_simple_operand (gimple_call_arg (stmt, i)))\n-\t    return false;\n-\n-\treturn true;\n-      }\n+      return true;\n \n     default:\n       /* These nodes cut a new scope.  */"}]}