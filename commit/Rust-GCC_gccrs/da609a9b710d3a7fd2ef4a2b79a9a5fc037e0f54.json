{"sha": "da609a9b710d3a7fd2ef4a2b79a9a5fc037e0f54", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGE2MDlhOWI3MTBkM2E3ZmQyZWY0YTJiNzlhOWE1ZmMwMzdlMGY1NA==", "commit": {"author": {"name": "Kees Cook", "email": "kees@ubuntu.com", "date": "2009-01-20T14:40:30Z"}, "committer": {"name": "H.J. Lu", "email": "hjl@gcc.gnu.org", "date": "2009-01-20T14:40:30Z"}, "message": "re PR target/38902 (__builtin_strcpy doesn't work with -fstack-protector)\n\n2009-01-20  Kees Cook  <kees@ubuntu.com>\n\t    H.J. Lu  <hongjiu.lu@intel.com>\n\n\tPR target/38902\n\t* gcc.dg/pr38902.c: New.\n\nFrom-SVN: r143516", "tree": {"sha": "59791da577aa2e1874c278c65cb44bac1fb3bce0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/59791da577aa2e1874c278c65cb44bac1fb3bce0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/da609a9b710d3a7fd2ef4a2b79a9a5fc037e0f54", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/da609a9b710d3a7fd2ef4a2b79a9a5fc037e0f54", "html_url": "https://github.com/Rust-GCC/gccrs/commit/da609a9b710d3a7fd2ef4a2b79a9a5fc037e0f54", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/da609a9b710d3a7fd2ef4a2b79a9a5fc037e0f54/comments", "author": {"login": "kees", "id": 1110841, "node_id": "MDQ6VXNlcjExMTA4NDE=", "avatar_url": "https://avatars.githubusercontent.com/u/1110841?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kees", "html_url": "https://github.com/kees", "followers_url": "https://api.github.com/users/kees/followers", "following_url": "https://api.github.com/users/kees/following{/other_user}", "gists_url": "https://api.github.com/users/kees/gists{/gist_id}", "starred_url": "https://api.github.com/users/kees/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kees/subscriptions", "organizations_url": "https://api.github.com/users/kees/orgs", "repos_url": "https://api.github.com/users/kees/repos", "events_url": "https://api.github.com/users/kees/events{/privacy}", "received_events_url": "https://api.github.com/users/kees/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "09efeca1a40c3bccdd200ca1bcba4199d89f6422", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/09efeca1a40c3bccdd200ca1bcba4199d89f6422", "html_url": "https://github.com/Rust-GCC/gccrs/commit/09efeca1a40c3bccdd200ca1bcba4199d89f6422"}], "stats": {"total": 141, "additions": 139, "deletions": 2}, "files": [{"sha": "55fc1c8c856624a4db7f9559b49b465041f4d20f", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 8, "deletions": 2, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/da609a9b710d3a7fd2ef4a2b79a9a5fc037e0f54/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/da609a9b710d3a7fd2ef4a2b79a9a5fc037e0f54/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=da609a9b710d3a7fd2ef4a2b79a9a5fc037e0f54", "patch": "@@ -1,3 +1,9 @@\n+2009-01-20  Kees Cook  <kees@ubuntu.com>\n+\t    H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\tPR target/38902\n+\t* gcc.dg/pr38902.c: New.\n+\n 2008-01-20  Paolo Bonzini  <bonzini@gnu.org>\n \n \tPR target/38868\n@@ -10,7 +16,7 @@\n \n 2009-01-19  Iain Sandoe  <iain.sandoe@sandoe-acoustics.co.uk>\n \n-        * lib/gfortran.exp: Add -B options for targets that use\n+\t* lib/gfortran.exp: Add -B options for targets that use\n \tlibgfortran.a%s in their specs.\n \n 2009-01-19  Jason Merrill  <jason@redhat.com>\n@@ -104,7 +110,7 @@\n \n 2009-01-15  Andrew Pinski  <andrew_pinski@playstation.sony.com>\n \n-        PR C++/29388\n+\tPR C++/29388\n \t* g++.dg/template/error37.C: New testcase.\n \n 2009-01-15  Jason Merrill  <jason@redhat.com>"}, {"sha": "d406526242fa8036d693d827dd95948f323f87bf", "filename": "gcc/testsuite/gcc.dg/pr38902.c", "status": "added", "additions": 131, "deletions": 0, "changes": 131, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/da609a9b710d3a7fd2ef4a2b79a9a5fc037e0f54/gcc%2Ftestsuite%2Fgcc.dg%2Fpr38902.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/da609a9b710d3a7fd2ef4a2b79a9a5fc037e0f54/gcc%2Ftestsuite%2Fgcc.dg%2Fpr38902.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr38902.c?ref=da609a9b710d3a7fd2ef4a2b79a9a5fc037e0f54", "patch": "@@ -0,0 +1,131 @@\n+/* PR target/38902 */\n+/* { dg-do run } */\n+/* { dg-options \"-O2 -fstack-protector\" } */\n+/* { dg-require-effective-target fstack_protector } */\n+\n+#ifdef DEBUG\n+#include <stdio.h>\n+#define debug(format, args...) printf (format , ## args)\n+#else\n+extern int sprintf (char *, const char *, ...);\n+#define debug(format, args...)\n+#endif\n+\n+extern void abort (void);\n+\n+/*\n+\n+Copyright (C) 2009 Canonical, Ltd.\n+Author: Kees Cook <kees@ubuntu.com>\n+License: GPLv3\n+\n+http://gcc.gnu.org/bugzilla/show_bug.cgi?id=38616\n+https://bugs.launchpad.net/ubuntu/+source/gcc-4.3/+bug/316019\n+http://gcc.gnu.org/bugzilla/show_bug.cgi?id=38902\n+\n+gcc -O2 -fstack-protector truncate.c -o truncate\n+\n+    Broken:\n+\n+        Only the first operation fails, so create a new function for each test.\n+        Source must be local (literal or stack)\n+\n+        __builtin_memmove\n+        __builtin_memcpy\n+        __builtin_strcpy  (optimized to __builtin_memcpy?)\n+        sprintf (direct)  (optmized to __builtin_strcpy?)\n+        sprintf (via %s)  (optmized to __builtin_strcpy?)\n+\n+    OK:\n+        __builtin_strcat\n+        sprintf (complex format)\n+\n+ */\n+\n+char *heap = \"1234567890abcdefghijklmnopqrstuvwxyz\";\n+\n+int failed = 0;\n+\n+#define CHECK(count, a...) \\\n+void test##count (void) \\\n+{ \\\n+  char *local = \"1234567890abcdefghijklmnopqrstuvwxyz\"; \\\n+  char buffer[1024]=\"\"; \\\n+    a; \\\n+    if (__builtin_strcmp(buffer, heap) == 0) { \\\n+        debug(\"Okay(%d):\\n\\t%s\\n\", count, # a); \\\n+    } \\\n+    else { \\\n+        debug(\"Failed(%d):\\n\\t%s\\n\", count, # a); \\\n+\tfailed++; \\\n+    } \\\n+}\n+\n+\n+CHECK( 0, __builtin_memcpy (buffer, \"1234567890abcdefghijklmnopqrstuvwxyz\", __builtin_strlen(\"1234567890abcdefghijklmnopqrstuvwxyz\")+1);                                        );\n+CHECK( 1, __builtin_memcpy (buffer, local, __builtin_strlen(local)+1);                );\n+CHECK( 2, __builtin_memcpy (buffer, heap, __builtin_strlen(heap)+1);                );\n+\n+CHECK( 3, __builtin_memmove (buffer, \"1234567890abcdefghijklmnopqrstuvwxyz\", __builtin_strlen(\"1234567890abcdefghijklmnopqrstuvwxyz\")+1);                                       );\n+CHECK( 4, __builtin_memmove (buffer, local, __builtin_strlen(local)+1);               );\n+CHECK( 5, __builtin_memmove (buffer, heap, __builtin_strlen(heap)+1);               );\n+\n+CHECK( 6, __builtin_strcpy (buffer, \"1234567890abcdefghijklmnopqrstuvwxyz\");          );\n+CHECK( 7, __builtin_strcpy (buffer, local);                                      );\n+CHECK( 8, __builtin_strcpy (buffer, heap);                                      );\n+\n+CHECK( 9,  sprintf (buffer, \"1234567890abcdefghijklmnopqrstuvwxyz\");         );\n+CHECK(10,  sprintf (buffer, local);                                     );\n+CHECK(11,  sprintf (buffer, heap);                                     );\n+\n+CHECK(12,  sprintf (buffer, \"%s\", \"1234567890abcdefghijklmnopqrstuvwxyz\");   );\n+CHECK(13,  sprintf (buffer, \"%s\", local);                               );\n+CHECK(14,  sprintf (buffer, \"%s\", heap);                               );\n+\n+CHECK(15, __builtin_strcat (buffer, \"1234567890abcdefghijklmnopqrstuvwxyz\");          );\n+CHECK(16, __builtin_strcat (buffer, local);                                      );\n+CHECK(17, __builtin_strcat (buffer, heap);                                       );\n+\n+void mongoose(void)\n+{\n+  char buffer[1024]=\"\";\n+  sprintf (buffer, \"%s\", \"1234567890abcdefghijklmnopqrstuvwxyz\");;\n+    if (__builtin_strcmp(buffer, heap) == 0) {\n+        debug(\"Okay(%d):\\n\\t%s\\n\", -1, \"sprintf (buffer, \\\"%s\\\", \\\"1234567890abcdefghijklmnopqrstuvwxyz\\\");\");\n+    }\n+    else {\n+        debug(\"Failed(%d):\\n\\t%s\\n\", -1, \"sprintf (buffer, \\\"%s\\\", \\\"1234567890abcdefghijklmnopqrstuvwxyz\\\");\");\n+\tfailed++;\n+    }\n+}\n+\n+int main (int argc, char *argv[])\n+{\n+  test0();\n+  test1();\n+  test2();\n+  test3();\n+  test4();\n+  test5();\n+  test6();\n+  test7();\n+  test8();\n+  test9();\n+  test10();\n+  test11();\n+\n+  // wtf, why are these different?!\n+  test12();\n+  mongoose();\n+\n+  test13();\n+  test14();\n+  test15();\n+  test16();\n+  test17();\n+\n+  if (failed)\n+    abort ();\n+\n+  return 0;\n+}"}]}