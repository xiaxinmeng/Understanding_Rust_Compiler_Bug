{"sha": "a152cad74a458145a270781a312a0c2285dfdc4f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTE1MmNhZDc0YTQ1ODE0NWEyNzA3ODFhMzEyYTBjMjI4NWRmZGM0Zg==", "commit": {"author": {"name": "Craig Burley", "email": "craig@jcb-sc.com", "date": "1999-05-03T08:35:22Z"}, "committer": {"name": "Craig Burley", "email": "burley@gcc.gnu.org", "date": "1999-05-03T08:35:22Z"}, "message": "Update to Netlib version of 1999-05-03\n\nFrom-SVN: r26740", "tree": {"sha": "ea41d96ced81202582163d875e6b33b81b65d173", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ea41d96ced81202582163d875e6b33b81b65d173"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a152cad74a458145a270781a312a0c2285dfdc4f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a152cad74a458145a270781a312a0c2285dfdc4f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a152cad74a458145a270781a312a0c2285dfdc4f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a152cad74a458145a270781a312a0c2285dfdc4f/comments", "author": null, "committer": null, "parents": [{"sha": "9cfd948e77910a87d473a70f6c6b5c6f7863915f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9cfd948e77910a87d473a70f6c6b5c6f7863915f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9cfd948e77910a87d473a70f6c6b5c6f7863915f"}], "stats": {"total": 363, "additions": 254, "deletions": 109}, "files": [{"sha": "c74ab760ee4219f639ef3ab88bd652a90e7fc57e", "filename": "libf2c/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a152cad74a458145a270781a312a0c2285dfdc4f/libf2c%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a152cad74a458145a270781a312a0c2285dfdc4f/libf2c%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libf2c%2FChangeLog?ref=a152cad74a458145a270781a312a0c2285dfdc4f", "patch": "@@ -1,3 +1,14 @@\n+Mon May  3 11:12:38 1999  Craig Burley  <craig@jcb-sc.com>\n+\n+\tUpdate to Netlib version of 1999-05-03:\n+\t* changes.netlib, libF77/Version.c, libF77/c_cos.c,\n+\tlibF77/c_exp.c, libF77/c_sin.c, libF77/d_cnjg.c,\n+\tlibF77/dtime_.c, libF77/etime_.c, libF77/getenv_.c,\n+\tlibF77/r_cnjg.c, libF77/z_cos.c, libF77/z_exp.c,\n+\tlibF77/z_log.c, libF77/z_sin.c, libI77/Version.c,\n+\tlibI77/err.c, libI77/open.c, libI77/rdfmt.c, readme.netlib:\n+\tSee changes.netlib for info.\n+\n Mon May  3 10:52:53 1999  Craig Burley  <craig@jcb-sc.com>\n \n \t* libF77/c_cos.c, libF77/c_div.c, libF77/c_exp.c, libF77/c_log.c,"}, {"sha": "cbb6ee36082353161ce8d77f079a8d2f70c789b4", "filename": "libf2c/changes.netlib", "status": "modified", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a152cad74a458145a270781a312a0c2285dfdc4f/libf2c%2Fchanges.netlib", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a152cad74a458145a270781a312a0c2285dfdc4f/libf2c%2Fchanges.netlib", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libf2c%2Fchanges.netlib?ref=a152cad74a458145a270781a312a0c2285dfdc4f", "patch": "@@ -2980,3 +2980,30 @@ Sat Feb 13 10:18:27 EST 1999\n  libf2c: endfile.c, lread.c, signal1.h0: minor tweaks to make some\n (C++) compilers happier; f77_aloc.c: make exit_() visible to C++\n compilers.  Version strings not changed.\n+\n+Thu Mar 11 23:14:02 EST 1999\n+  Modify f2c (exec.c, expr.c) to diagnose incorrect mixing of types\n+when (f2c extended) intrinsic functions are involved, as in\n+(not(17) .and. 4).  Catching this in the first executable statement\n+is a bit tricky, as some checking must be postponed until all statement\n+function declarations have been parsed.  Thus there is a chance of\n+today's changes introducing bugs under (let us hope) unusual conditions.\n+\n+Sun Mar 28 13:17:44 EST 1999\n+  lex.c: tweak to get the file name right in error messages caused\n+by statements just after a # nnn \"filename\" line emitted by the C\n+preprocessor.  (The trouble is that the line following the # nnn line\n+must be read to see if it is a continuation of the stuff that preceded\n+the # nnn line.)  When # nnn \"filename\" lines appear among the lines\n+for a Fortran statement, the filename reported in an error message for\n+the statement should now be the file that was current when the first\n+line of the statement was read.\n+\n+Sun May  2 22:38:25 EDT 1999\n+  libf77, libi77, libf2c.zip: make getenv_() more portable (call\n+getenv() rather than knowing about char **environ); adjust some\n+complex intrinsics to work with overlapping arguments (caused by\n+illegal use of equivalence); open.c: get \"external\" versus \"internal\"\n+right in the error message if a file cannot be opened; err.c: cast a\n+pointer difference to (int) for %d; rdfmt.c: omit fixed-length buffer\n+that could be overwritten by formats Inn or Lnn with nn > 83."}, {"sha": "a31379f510bf98ff7fea7017e793f76f6caaa91f", "filename": "libf2c/libF77/Version.c", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a152cad74a458145a270781a312a0c2285dfdc4f/libf2c%2FlibF77%2FVersion.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a152cad74a458145a270781a312a0c2285dfdc4f/libf2c%2FlibF77%2FVersion.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libf2c%2FlibF77%2FVersion.c?ref=a152cad74a458145a270781a312a0c2285dfdc4f", "patch": "@@ -1,4 +1,4 @@\n-static char junk[] = \"\\n@(#)LIBF77 VERSION 19970919\\n\";\n+static char junk[] = \"\\n@(#)LIBF77 VERSION 19990502\\n\";\n \n /*\n */\n@@ -55,6 +55,10 @@ char __G77_LIBF77_VERSION__[] = \"0.5.24\";\n \t\t\taffect systems using gratuitous extra precision).\n \t19 Sept. 1997: [de]time_.c (Unix systems only): change return\n \t\t\ttype to double.\n+\t2 May 1999:\tgetenv_.c: omit environ in favor of getenv().\n+\t\t\tc_cos.c, c_exp.c, c_sin.c, d_cnjg.c, r_cnjg.c,\n+\t\t\tz_cos.c, z_exp.c, z_log.c, z_sin.c: cope fully with\n+\t\t\toverlapping arguments caused by equivalence.\n */\n \n #include <stdio.h>"}, {"sha": "549953dc65620fb47188b4422eb78c32b39c9680", "filename": "libf2c/libF77/c_cos.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a152cad74a458145a270781a312a0c2285dfdc4f/libf2c%2FlibF77%2Fc_cos.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a152cad74a458145a270781a312a0c2285dfdc4f/libf2c%2FlibF77%2Fc_cos.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libf2c%2FlibF77%2Fc_cos.c?ref=a152cad74a458145a270781a312a0c2285dfdc4f", "patch": "@@ -11,7 +11,7 @@ VOID c_cos(r, z) complex *r, *z;\n void c_cos(complex *r, complex *z)\n #endif\n {\n-\tdouble zr = z->r;\n-\tr->r =   cos(zr) * cosh(z->i);\n-\tr->i = - sin(zr) * sinh(z->i);\n+\tdouble zi = z->i, zr = z->r;\n+\tr->r =   cos(zr) * cosh(zi);\n+\tr->i = - sin(zr) * sinh(zi);\n \t}"}, {"sha": "52d0d2ffc95cffd932407380e220cf0dc0ac9b8b", "filename": "libf2c/libF77/c_exp.c", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a152cad74a458145a270781a312a0c2285dfdc4f/libf2c%2FlibF77%2Fc_exp.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a152cad74a458145a270781a312a0c2285dfdc4f/libf2c%2FlibF77%2Fc_exp.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libf2c%2FlibF77%2Fc_exp.c?ref=a152cad74a458145a270781a312a0c2285dfdc4f", "patch": "@@ -11,9 +11,9 @@ extern double exp(), cos(), sin();\n void c_exp(complex *r, complex *z)\n #endif\n {\n-double expx;\n+\tdouble expx, zi = z->i;\n \n-expx = exp(z->r);\n-r->r = expx * cos(z->i);\n-r->i = expx * sin(z->i);\n-}\n+\texpx = exp(z->r);\n+\tr->r = expx * cos(zi);\n+\tr->i = expx * sin(zi);\n+\t}"}, {"sha": "93a57660a90226185e3ae9e499b1238a14ec2f61", "filename": "libf2c/libF77/c_sin.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a152cad74a458145a270781a312a0c2285dfdc4f/libf2c%2FlibF77%2Fc_sin.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a152cad74a458145a270781a312a0c2285dfdc4f/libf2c%2FlibF77%2Fc_sin.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libf2c%2FlibF77%2Fc_sin.c?ref=a152cad74a458145a270781a312a0c2285dfdc4f", "patch": "@@ -11,7 +11,7 @@ VOID c_sin(r, z) complex *r, *z;\n void c_sin(complex *r, complex *z)\n #endif\n {\n-\tdouble zr = z->r;\n-\tr->r = sin(zr) * cosh(z->i);\n-\tr->i = cos(zr) * sinh(z->i);\n+\tdouble zi = z->i, zr = z->r;\n+\tr->r = sin(zr) * cosh(zi);\n+\tr->i = cos(zr) * sinh(zi);\n \t}"}, {"sha": "c1970a56da9f17a61e8d26bf8942b766d0580267", "filename": "libf2c/libF77/d_cnjg.c", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a152cad74a458145a270781a312a0c2285dfdc4f/libf2c%2FlibF77%2Fd_cnjg.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a152cad74a458145a270781a312a0c2285dfdc4f/libf2c%2FlibF77%2Fd_cnjg.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libf2c%2FlibF77%2Fd_cnjg.c?ref=a152cad74a458145a270781a312a0c2285dfdc4f", "patch": "@@ -7,6 +7,7 @@ d_cnjg(r, z) doublecomplex *r, *z;\n d_cnjg(doublecomplex *r, doublecomplex *z)\n #endif\n {\n-r->r = z->r;\n-r->i = - z->i;\n-}\n+\tdoublereal zi = z->i;\n+\tr->r = z->r;\n+\tr->i = -zi;\n+\t}"}, {"sha": "4b37320d43b80badaf1b5ff953d73714a5beb92b", "filename": "libf2c/libF77/dtime_.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a152cad74a458145a270781a312a0c2285dfdc4f/libf2c%2FlibF77%2Fdtime_.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a152cad74a458145a270781a312a0c2285dfdc4f/libf2c%2FlibF77%2Fdtime_.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libf2c%2FlibF77%2Fdtime_.c?ref=a152cad74a458145a270781a312a0c2285dfdc4f", "patch": "@@ -1,6 +1,7 @@\n #include \"time.h\"\n \n #ifdef MSDOS\n+#undef USE_CLOCK\n #define USE_CLOCK\n #endif\n "}, {"sha": "e88cfd886484e4a2c9c040c189909b358364860b", "filename": "libf2c/libF77/etime_.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a152cad74a458145a270781a312a0c2285dfdc4f/libf2c%2FlibF77%2Fetime_.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a152cad74a458145a270781a312a0c2285dfdc4f/libf2c%2FlibF77%2Fetime_.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libf2c%2FlibF77%2Fetime_.c?ref=a152cad74a458145a270781a312a0c2285dfdc4f", "patch": "@@ -1,6 +1,7 @@\n #include \"time.h\"\n \n #ifdef MSDOS\n+#undef USE_CLOCK\n #define USE_CLOCK\n #endif\n "}, {"sha": "4d0b7cf7b04b2b611ec08e6a17b177bbd7dfdd3f", "filename": "libf2c/libF77/getenv_.c", "status": "modified", "additions": 32, "deletions": 32, "changes": 64, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a152cad74a458145a270781a312a0c2285dfdc4f/libf2c%2FlibF77%2Fgetenv_.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a152cad74a458145a270781a312a0c2285dfdc4f/libf2c%2FlibF77%2Fgetenv_.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libf2c%2FlibF77%2Fgetenv_.c?ref=a152cad74a458145a270781a312a0c2285dfdc4f", "patch": "@@ -1,8 +1,11 @@\n #include \"f2c.h\"\n-\n-#ifndef KR_headers\n #undef abs\n+#ifdef KR_headers\n+extern char *F77_aloc(), *getenv();\n+#else\n #include <stdlib.h>\n+#include <string.h>\n+extern char *F77_aloc(ftnlen, char*);\n #endif\n \n /*\n@@ -18,39 +21,36 @@\n  */\n \n #ifdef KR_headers\n-VOID G77_getenv_0 (fname, value, flen, vlen) char *value, *fname; ftnlen vlen, flen;\n+ VOID\n+G77_getenv_0 (fname, value, flen, vlen) char *value, *fname; ftnlen vlen, flen;\n #else\n-void G77_getenv_0 (char *fname, char *value, ftnlen flen, ftnlen vlen)\n+ void\n+G77_getenv_0 (char *fname, char *value, ftnlen flen, ftnlen vlen)\n #endif\n {\n-extern char **environ;\n-register char *ep, *fp, *flast;\n-register char **env = environ;\n-\n-flast = fname + flen;\n-for(fp = fname ; fp < flast ; ++fp)\n-\tif(*fp == ' ')\n-\t\t{\n-\t\tflast = fp;\n-\t\tbreak;\n+\tchar buf[256], *ep, *fp;\n+\tinteger i;\n+\n+\tif (flen <= 0)\n+\t\tgoto add_blanks;\n+\tfor(i = 0; i < sizeof(buf); i++) {\n+\t\tif (i == flen || (buf[i] = fname[i]) == ' ') {\n+\t\t\tbuf[i] = 0;\n+\t\t\tep = getenv(buf);\n+\t\t\tgoto have_ep;\n+\t\t\t}\n \t\t}\n-\n-while (ep = *env++)\n-\t{\n-\tfor(fp = fname; fp<flast ; )\n-\t\tif(*fp++ != *ep++)\n-\t\t\tgoto endloop;\n-\n-\tif(*ep++ == '=') {\t/* copy right hand side */\n-\t\twhile( *ep && --vlen>=0 )\n+\twhile(i < flen && fname[i] != ' ')\n+\t\ti++;\n+\tstrncpy(fp = F77_aloc(i+1, \"getenv_\"), fname, (int)i);\n+\tfp[i] = 0;\n+\tep = getenv(fp);\n+\tfree(fp);\n+ have_ep:\n+\tif (ep)\n+\t\twhile(*ep && vlen-- > 0)\n \t\t\t*value++ = *ep++;\n-\n-\t\tgoto blank;\n-\t\t}\n-endloop: ;\n-\t}\n-\n-blank:\n-\twhile( --vlen >= 0 )\n+ add_blanks:\n+\twhile(vlen-- > 0)\n \t\t*value++ = ' ';\n-}\n+\t}"}, {"sha": "756c694ee7a8f97effea1ab15891689aca3943ab", "filename": "libf2c/libF77/r_cnjg.c", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a152cad74a458145a270781a312a0c2285dfdc4f/libf2c%2FlibF77%2Fr_cnjg.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a152cad74a458145a270781a312a0c2285dfdc4f/libf2c%2FlibF77%2Fr_cnjg.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libf2c%2FlibF77%2Fr_cnjg.c?ref=a152cad74a458145a270781a312a0c2285dfdc4f", "patch": "@@ -6,6 +6,7 @@ VOID r_cnjg(r, z) complex *r, *z;\n VOID r_cnjg(complex *r, complex *z)\n #endif\n {\n-r->r = z->r;\n-r->i = - z->i;\n-}\n+\treal zi = z->i;\n+\tr->r = z->r;\n+\tr->i = -zi;\n+\t}"}, {"sha": "2d4a24d2818612cdef2d8c0efd1fd902ccd818e6", "filename": "libf2c/libF77/z_cos.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a152cad74a458145a270781a312a0c2285dfdc4f/libf2c%2FlibF77%2Fz_cos.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a152cad74a458145a270781a312a0c2285dfdc4f/libf2c%2FlibF77%2Fz_cos.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libf2c%2FlibF77%2Fz_cos.c?ref=a152cad74a458145a270781a312a0c2285dfdc4f", "patch": "@@ -9,7 +9,7 @@ VOID z_cos(r, z) doublecomplex *r, *z;\n void z_cos(doublecomplex *r, doublecomplex *z)\n #endif\n {\n-\tdouble zr = z->r;\n-\tr->r =   cos(zr) * cosh(z->i);\n-\tr->i = - sin(zr) * sinh(z->i);\n+\tdouble zi = z->i, zr = z->r;\n+\tr->r =   cos(zr) * cosh(zi);\n+\tr->i = - sin(zr) * sinh(zi);\n \t}"}, {"sha": "ecf84296d72007a3b1db4e2463445802a0b65096", "filename": "libf2c/libF77/z_exp.c", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a152cad74a458145a270781a312a0c2285dfdc4f/libf2c%2FlibF77%2Fz_exp.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a152cad74a458145a270781a312a0c2285dfdc4f/libf2c%2FlibF77%2Fz_exp.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libf2c%2FlibF77%2Fz_exp.c?ref=a152cad74a458145a270781a312a0c2285dfdc4f", "patch": "@@ -9,9 +9,9 @@ VOID z_exp(r, z) doublecomplex *r, *z;\n void z_exp(doublecomplex *r, doublecomplex *z)\n #endif\n {\n-double expx;\n+\tdouble expx, zi = z->i;\n \n-expx = exp(z->r);\n-r->r = expx * cos(z->i);\n-r->i = expx * sin(z->i);\n-}\n+\texpx = exp(z->r);\n+\tr->r = expx * cos(zi);\n+\tr->i = expx * sin(zi);\n+\t}"}, {"sha": "34c56d42a8c4959884105ce9011646aa3c61c9f0", "filename": "libf2c/libF77/z_log.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a152cad74a458145a270781a312a0c2285dfdc4f/libf2c%2FlibF77%2Fz_log.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a152cad74a458145a270781a312a0c2285dfdc4f/libf2c%2FlibF77%2Fz_log.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libf2c%2FlibF77%2Fz_log.c?ref=a152cad74a458145a270781a312a0c2285dfdc4f", "patch": "@@ -10,7 +10,7 @@ extern double f__cabs(double, double);\n void z_log(doublecomplex *r, doublecomplex *z)\n #endif\n {\n-\tdouble zi = z->i;\n-\tr->i = atan2(zi, z->r);\n-\tr->r = log( f__cabs( z->r, zi ) );\n+\tdouble zi = z->i, zr = z->r;\n+\tr->i = atan2(zi, zr);\n+\tr->r = log( f__cabs( zr, zi ) );\n \t}"}, {"sha": "e24caff927e9ce3e42bc8f770285adcf89362e23", "filename": "libf2c/libF77/z_sin.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a152cad74a458145a270781a312a0c2285dfdc4f/libf2c%2FlibF77%2Fz_sin.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a152cad74a458145a270781a312a0c2285dfdc4f/libf2c%2FlibF77%2Fz_sin.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libf2c%2FlibF77%2Fz_sin.c?ref=a152cad74a458145a270781a312a0c2285dfdc4f", "patch": "@@ -9,7 +9,7 @@ VOID z_sin(r, z) doublecomplex *r, *z;\n void z_sin(doublecomplex *r, doublecomplex *z)\n #endif\n {\n-\tdouble zr = z->r;\n-\tr->r = sin(zr) * cosh(z->i);\n-\tr->i = cos(zr) * sinh(z->i);\n+\tdouble zi = z->i, zr = z->r;\n+\tr->r = sin(zr) * cosh(zi);\n+\tr->i = cos(zr) * sinh(zi);\n \t}"}, {"sha": "a475702b9beb6aae33b1e629e57ab86bc6b7f542", "filename": "libf2c/libI77/Version.c", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a152cad74a458145a270781a312a0c2285dfdc4f/libf2c%2FlibI77%2FVersion.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a152cad74a458145a270781a312a0c2285dfdc4f/libf2c%2FlibI77%2FVersion.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libf2c%2FlibI77%2FVersion.c?ref=a152cad74a458145a270781a312a0c2285dfdc4f", "patch": "@@ -1,4 +1,4 @@\n-static char junk[] = \"\\n@(#) LIBI77 VERSION pjw,dmg-mods 19980907\\n\";\n+static char junk[] = \"\\n@(#) LIBI77 VERSION pjw,dmg-mods 19990502\\n\";\n \n /*\n */\n@@ -295,6 +295,11 @@ wrtfmt.c:\n \t\t input for integer data. */\n /* 7 Sept. 1998: move e_wdfe from sfe.c to dfe.c, where it was originally.\n \t\t Why did it ever move to sfe.c? */\n+/* 2 May 1999:\t open.c: set f__external (to get \"external\" versus \"internal\"\n+\t\t right in the error message if we cannot open the file).\n+\t\t err.c: cast a pointer difference to (int) for %d.\n+\t\t rdfmt.c: omit fixed-length buffer that could be overwritten\n+\t\t by formats Inn or Lnn with nn > 83. */\n \n \n "}, {"sha": "e7ac23a6cfecdb12dd6a7592f07e1ec535482074", "filename": "libf2c/libI77/err.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a152cad74a458145a270781a312a0c2285dfdc4f/libf2c%2FlibI77%2Ferr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a152cad74a458145a270781a312a0c2285dfdc4f/libf2c%2FlibI77%2Ferr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libf2c%2FlibI77%2Ferr.c?ref=a152cad74a458145a270781a312a0c2285dfdc4f", "patch": "@@ -163,7 +163,8 @@ f__fatal(int n, char *s)\n \tdead = 1;\n \tif (f__init & 1) {\n \t\tif (f__curunit) {\n-\t\t\tfprintf(stderr,\"apparent state: unit %d \",f__curunit-f__units);\n+\t\t\tfprintf(stderr,\"apparent state: unit %d \",\n+\t\t\t\t(int)(f__curunit-f__units));\n \t\t\tfprintf(stderr, f__curunit->ufnm ? \"named %s\\n\" : \"(unnamed)\\n\",\n \t\t\t\tf__curunit->ufnm);\n \t\t\t}"}, {"sha": "dd47bddb9e15da7bb223eb25c94c81c81c0cbda4", "filename": "libf2c/libI77/open.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a152cad74a458145a270781a312a0c2285dfdc4f/libf2c%2FlibI77%2Fopen.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a152cad74a458145a270781a312a0c2285dfdc4f/libf2c%2FlibI77%2Fopen.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libf2c%2FlibI77%2Fopen.c?ref=a152cad74a458145a270781a312a0c2285dfdc4f", "patch": "@@ -141,6 +141,7 @@ integer f_open(olist *a)\n \tint n;\n #endif\n \tif(f__init != 1) f_init();\n+\tf__external = 1;\n \tif(a->ounit>=MXUNIT || a->ounit<0)\n \t\terr(a->oerr,101,\"open\");\n \tf__curunit = b = &f__units[a->ounit];"}, {"sha": "08ff0e827b4e4cbaa3e4fed48b69750053d02b8f", "filename": "libf2c/libI77/rdfmt.c", "status": "modified", "additions": 100, "deletions": 35, "changes": 135, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a152cad74a458145a270781a312a0c2285dfdc4f/libf2c%2FlibI77%2Frdfmt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a152cad74a458145a270781a312a0c2285dfdc4f/libf2c%2FlibI77%2Frdfmt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libf2c%2FlibI77%2Frdfmt.c?ref=a152cad74a458145a270781a312a0c2285dfdc4f", "patch": "@@ -99,60 +99,125 @@ rd_I(n,w,len, base) Uint *n; int w; ftnlen len; register int base;\n #else\n rd_I(Uint *n, int w, ftnlen len, register int base)\n #endif\n-{\tlongint x;\n-\tint sign,ch;\n-\tchar s[84], *ps;\n-\tps=s; x=0;\n-\twhile (w)\n-\t{\n+{\n+\tint bad, ch, sign;\n+\tlongint x = 0;\n+\n+\tif (w <= 0)\n+\t\tgoto have_x;\n+\tfor(;;) {\n \t\tGET(ch);\n-\t\tif (ch==',' || ch=='\\n') break;\n-\t\t*ps=ch; ps++; w--;\n-\t}\n-\t*ps='\\0';\n-\tps=s;\n-\twhile (*ps==' ') ps++;\n-\tif (*ps=='-') { sign=1; ps++; }\n-\telse { sign=0; if (*ps=='+') ps++; }\n-loop:\twhile (*ps>='0' && *ps<='9') { x=x*base+(*ps-'0'); ps++; }\n-\tif (*ps==' ') {if (f__cblank) x *= base; ps++; goto loop;}\n-\tif(sign) x = -x;\n-\tif(len==sizeof(integer)) n->il=x;\n-\telse if(len == sizeof(char)) n->ic = (char)x;\n+\t\tif (ch != ' ')\n+\t\t\tbreak;\n+\t\tif (!--w)\n+\t\t\tgoto have_x;\n+\t\t}\n+\tsign = 0;\n+\tswitch(ch) {\n+\t  case ',':\n+\t  case '\\n':\n+\t\tw = 0;\n+\t\tgoto have_x;\n+\t  case '-':\n+\t\tsign = 1;\n+\t  case '+':\n+\t\tbreak;\n+\t  default:\n+\t\tif (ch >= '0' && ch <= '9') {\n+\t\t\tx = ch - '0';\n+\t\t\tbreak;\n+\t\t\t}\n+\t\tgoto have_x;\n+\t\t}\n+\twhile(--w) {\n+\t\tGET(ch);\n+\t\tif (ch >= '0' && ch <= '9') {\n+\t\t\tx = x*base + ch - '0';\n+\t\t\tcontinue;\n+\t\t\t}\n+\t\tif (ch != ' ') {\n+\t\t\tif (ch == '\\n' || ch == ',')\n+\t\t\t\tw = 0;\n+\t\t\tbreak;\n+\t\t\t}\n+\t\tif (f__cblank)\n+\t\t\tx *= base;\n+\t\t}\n+\tif (sign)\n+\t\tx = -x;\n+ have_x:\n+\tif(len == sizeof(integer))\n+\t\tn->il=x;\n+\telse if(len == sizeof(char))\n+\t\tn->ic = (char)x;\n #ifdef Allow_TYQUAD\n-\telse if (len == sizeof(longint)) n->ili = x;\n+\telse if (len == sizeof(longint))\n+\t\tn->ili = x;\n #endif\n-\telse n->is = (short)x;\n-\tif (*ps) return(errno=115); else return(0);\n+\telse\n+\t\tn->is = (short)x;\n+\tif (w) {\n+\t\twhile(--w)\n+\t\t\tGET(ch);\n+\t\treturn errno = 115;\n+\t\t}\n+\treturn 0;\n }\n+\n  static int\n #ifdef KR_headers\n rd_L(n,w,len) ftnint *n; ftnlen len;\n #else\n rd_L(ftnint *n, int w, ftnlen len)\n #endif\n-{\tint ch, lv;\n-\tchar s[84], *ps;\n-\tps=s;\n-\twhile (w) {\n+{\tint ch, dot, lv;\n+\n+\tif (w <= 0)\n+\t\tgoto bad;\n+\tfor(;;) {\n \t\tGET(ch);\n-\t\tif (ch==','||ch=='\\n') break;\n-\t\t*ps=ch;\n-\t\tps++; w--;\n+\t\t--w;\n+\t\tif (ch != ' ')\n+\t\t\tbreak;\n+\t\tif (!w)\n+\t\t\tgoto bad;\n \t\t}\n-\t*ps='\\0';\n-\tps=s; while (*ps==' ') ps++;\n-\tif (*ps=='.') ps++;\n-\tif (*ps=='t' || *ps == 'T')\n+\tdot = 0;\n+ retry:\n+\tswitch(ch) {\n+\t  case '.':\n+\t\tif (dot++ || !w)\n+\t\t\tgoto bad;\n+\t\tGET(ch);\n+\t\t--w;\n+\t\tgoto retry;\n+\t  case 't':\n+\t  case 'T':\n \t\tlv = 1;\n-\telse if (*ps == 'f' || *ps == 'F')\n+\t\tbreak;\n+\t  case 'f':\n+\t  case 'F':\n \t\tlv = 0;\n-\telse return(errno=116);\n+\t\tbreak;\n+\t  default:\n+ bad:\n+\t\tfor(; w > 0; --w)\n+\t\t\tGET(ch);\n+\t\t/* no break */\n+\t  case ',':\n+\t  case '\\n':\n+\t\treturn errno = 116;\n+\t\t}\n \tswitch(len) {\n \t\tcase sizeof(char):\t*(char *)n = (char)lv;\t break;\n \t\tcase sizeof(short):\t*(short *)n = (short)lv; break;\n \t\tdefault:\t\t*n = lv;\n \t\t}\n+\twhile(w-- > 0) {\n+\t\tGET(ch);\n+\t\tif (ch == ',' || ch == '\\n')\n+\t\t\tbreak;\n+\t\t}\n \treturn 0;\n }\n "}, {"sha": "e312984dc54713a05191f521e1666273767833f1", "filename": "libf2c/readme.netlib", "status": "modified", "additions": 35, "deletions": 8, "changes": 43, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a152cad74a458145a270781a312a0c2285dfdc4f/libf2c%2Freadme.netlib", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a152cad74a458145a270781a312a0c2285dfdc4f/libf2c%2Freadme.netlib", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libf2c%2Freadme.netlib?ref=a152cad74a458145a270781a312a0c2285dfdc4f", "patch": "@@ -672,20 +672,49 @@ matters under -g).\n   fc: add -U option; recognize .so files.\n \n Sat Feb 13 10:18:27 EST 1999\n- libf2c: endfile.c, lread.c, signal1.h0: minor tweaks to make some\n+  libf2c: endfile.c, lread.c, signal1.h0: minor tweaks to make some\n (C++) compilers happier; f77_aloc.c: make exit_() visible to C++\n compilers.  Version strings not changed.\n \n+Thu Mar 11 23:14:02 EST 1999\n+  Modify f2c (exec.c, expr.c) to diagnose incorrect mixing of types\n+when (f2c extended) intrinsic functions are involved, as in\n+(not(17) .and. 4).  Catching this in the first executable statement\n+is a bit tricky, as some checking must be postponed until all statement\n+function declarations have been parsed.  Thus there is a chance of\n+today's changes introducing bugs under (let us hope) unusual conditions.\n+\n+Sun Mar 28 13:17:44 EST 1999\n+  lex.c: tweak to get the file name right in error messages caused\n+by statements just after a # nnn \"filename\" line emitted by the C\n+preprocessor.  (The trouble is that the line following the # nnn line\n+must be read to see if it is a continuation of the stuff that preceded\n+the # nnn line.)  When # nnn \"filename\" lines appear among the lines\n+for a Fortran statement, the filename reported in an error message for\n+the statement should now be the file that was current when the first\n+line of the statement was read.\n+\n+Sun May  2 22:38:25 EDT 1999\n+  libf77, libi77, libf2c.zip: make getenv_() more portable (call\n+getenv() rather than knowing about char **environ); adjust some\n+complex intrinsics to work with overlapping arguments (caused by\n+illegal use of equivalence); open.c: get \"external\" versus \"internal\"\n+right in the error message if a file cannot be opened; err.c: cast a\n+pointer difference to (int) for %d; rdfmt.c: omit fixed-length buffer\n+that could be overwritten by formats Inn or Lnn with nn > 83.\n+\n Current timestamps of files in \"all from f2c/src\", sorted by time,\n appear below (mm/dd/year hh:mm:ss).  To bring your source up to date,\n obtain source files with a timestamp later than the time shown in your\n version.c.  Note that the time shown in the current version.c is the\n timestamp of the source module that immediately follows version.c below:\n \n- 2/10/1999  22:07:05  version.c\n- 2/10/1999  22:06:59  lex.c\n+ 3/28/1999  13:16:27  xsum0.out\n+ 3/26/1999  23:18:20  version.c\n+ 3/26/1999  23:18:11  lex.c\n+ 3/11/1999  16:44:17  expr.c\n+ 3/11/1999  16:42:42  exec.c\n  2/10/1999  17:43:01  defs.h\n- 9/13/1998  22:23:35  xsum0.out\n  9/13/1998  22:18:21  format.c\n  9/08/1998  10:16:51  f2c.1\n  9/08/1998  10:16:48  f2c.1t\n@@ -705,21 +734,19 @@ timestamp of the source module that immediately follows version.c below:\n 12/04/1996  13:07:53  gram.exec\n 10/01/1996  14:36:18  init.c\n 10/01/1996  14:36:17  data.c\n- 9/17/1996  17:29:44  expr.c\n  9/12/1996  12:12:46  equiv.c\n  8/26/1996   9:41:13  sysdep.c\n  7/09/1996  10:40:45  names.c\n  7/04/1996   9:55:45  sysdep.h\n  7/04/1996   9:55:43  put.c\n  7/04/1996   9:55:41  pread.c\n- 7/04/1996   9:55:40  p1output.c\n  7/04/1996   9:55:40  parse_args.c\n+ 7/04/1996   9:55:40  p1output.c\n  7/04/1996   9:55:37  misc.c\n- 7/04/1996   9:55:36  mem.c\n  7/04/1996   9:55:36  memset.c\n+ 7/04/1996   9:55:36  mem.c\n  7/04/1996   9:55:35  main.c\n  7/04/1996   9:55:33  io.c\n- 7/04/1996   9:55:30  exec.c\n  7/04/1996   9:55:29  error.c\n  7/04/1996   9:55:27  cds.c\n  7/03/1996  15:47:49  xsum.c"}]}