{"sha": "a9872a59bb5f1145022c641f83e17c796cbdca88", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTk4NzJhNTliYjVmMTE0NTAyMmM2NDFmODNlMTdjNzk2Y2JkY2E4OA==", "commit": {"author": {"name": "Vincent Celier", "email": "celier@adacore.com", "date": "2009-04-15T08:57:23Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2009-04-15T08:57:23Z"}, "message": "prj-nmsc.adb (Locate_Directory): New Boolean parameter Externally_Built indicating if...\n\n2009-04-15  Vincent Celier  <celier@adacore.com>\n\n\t* prj-nmsc.adb (Locate_Directory): New Boolean parameter\n\tExternally_Built indicating if the project is externally built. If it\n\tis, and --subdirs is specified, but the subdir does not exist, look\n\tfor the specified directory, without the subdir.\n\nFrom-SVN: r146085", "tree": {"sha": "16cf611c3f60e807e530a07d016617e5a40c132a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/16cf611c3f60e807e530a07d016617e5a40c132a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a9872a59bb5f1145022c641f83e17c796cbdca88", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a9872a59bb5f1145022c641f83e17c796cbdca88", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a9872a59bb5f1145022c641f83e17c796cbdca88", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a9872a59bb5f1145022c641f83e17c796cbdca88/comments", "author": {"login": "vcelier", "id": 8888056, "node_id": "MDQ6VXNlcjg4ODgwNTY=", "avatar_url": "https://avatars.githubusercontent.com/u/8888056?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vcelier", "html_url": "https://github.com/vcelier", "followers_url": "https://api.github.com/users/vcelier/followers", "following_url": "https://api.github.com/users/vcelier/following{/other_user}", "gists_url": "https://api.github.com/users/vcelier/gists{/gist_id}", "starred_url": "https://api.github.com/users/vcelier/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vcelier/subscriptions", "organizations_url": "https://api.github.com/users/vcelier/orgs", "repos_url": "https://api.github.com/users/vcelier/repos", "events_url": "https://api.github.com/users/vcelier/events{/privacy}", "received_events_url": "https://api.github.com/users/vcelier/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "b8aadf012f8eea411209f89b9366bf9af219ccc3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b8aadf012f8eea411209f89b9366bf9af219ccc3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b8aadf012f8eea411209f89b9366bf9af219ccc3"}], "stats": {"total": 149, "additions": 93, "deletions": 56}, "files": [{"sha": "745e71660c6081a8f91fec96f53e287982e8c69e", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a9872a59bb5f1145022c641f83e17c796cbdca88/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a9872a59bb5f1145022c641f83e17c796cbdca88/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=a9872a59bb5f1145022c641f83e17c796cbdca88", "patch": "@@ -1,3 +1,10 @@\n+2009-04-15  Vincent Celier  <celier@adacore.com>\n+\n+\t* prj-nmsc.adb (Locate_Directory): New Boolean parameter\n+\tExternally_Built indicating if the project is externally built. If it\n+\tis, and --subdirs is specified, but the subdir does not exist, look\n+\tfor the specified directory, without the subdir.\n+\n 2009-04-15  Gary Dismukes  <dismukes@adacore.com>\n \n \t* a-tasatt.adb: Fix typo, plus minor reformatting"}, {"sha": "441bce96c21a722652217087c7306725498eeb82", "filename": "gcc/ada/prj-nmsc.adb", "status": "modified", "additions": 86, "deletions": 56, "changes": 142, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a9872a59bb5f1145022c641f83e17c796cbdca88/gcc%2Fada%2Fprj-nmsc.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a9872a59bb5f1145022c641f83e17c796cbdca88/gcc%2Fada%2Fprj-nmsc.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-nmsc.adb?ref=a9872a59bb5f1145022c641f83e17c796cbdca88", "patch": "@@ -472,15 +472,16 @@ package body Prj.Nmsc is\n    --  body suffix or a separate suffix.\n \n    procedure Locate_Directory\n-     (Project  : Project_Id;\n-      In_Tree  : Project_Tree_Ref;\n-      Name     : File_Name_Type;\n-      Parent   : Path_Name_Type;\n-      Dir      : out Path_Name_Type;\n-      Display  : out Path_Name_Type;\n-      Create   : String := \"\";\n-      Current_Dir : String;\n-      Location : Source_Ptr := No_Location);\n+     (Project          : Project_Id;\n+      In_Tree          : Project_Tree_Ref;\n+      Name             : File_Name_Type;\n+      Parent           : Path_Name_Type;\n+      Dir              : out Path_Name_Type;\n+      Display          : out Path_Name_Type;\n+      Create           : String := \"\";\n+      Current_Dir      : String;\n+      Location         : Source_Ptr := No_Location;\n+      Externally_Built : Boolean := False);\n    --  Locate a directory. Name is the directory name. Parent is the root\n    --  directory, if Name a relative path name. Dir is set to the canonical\n    --  case path name of the directory, and Display is the directory path name\n@@ -3772,9 +3773,10 @@ package body Prj.Nmsc is\n                   Data.Directory.Display_Name,\n                   Data.Library_Dir.Name,\n                   Data.Library_Dir.Display_Name,\n-                  Create      => \"library\",\n-                  Current_Dir => Current_Dir,\n-                  Location    => Lib_Dir.Location);\n+                  Create           => \"library\",\n+                  Current_Dir      => Current_Dir,\n+                  Location         => Lib_Dir.Location,\n+                  Externally_Built => Data.Externally_Built);\n             end if;\n \n             if Data.Library_Dir = No_Path_Information then\n@@ -3979,9 +3981,10 @@ package body Prj.Nmsc is\n                   Data.Directory.Display_Name,\n                   Data.Library_ALI_Dir.Name,\n                   Data.Library_ALI_Dir.Display_Name,\n-                  Create   => \"library ALI\",\n-                  Current_Dir => Current_Dir,\n-                  Location => Lib_ALI_Dir.Location);\n+                  Create           => \"library ALI\",\n+                  Current_Dir      => Current_Dir,\n+                  Location         => Lib_ALI_Dir.Location,\n+                  Externally_Built => Data.Externally_Built);\n \n                if Data.Library_ALI_Dir = No_Path_Information then\n \n@@ -5105,9 +5108,10 @@ package body Prj.Nmsc is\n                   Data.Directory.Display_Name,\n                   Data.Library_Src_Dir.Name,\n                   Data.Library_Src_Dir.Display_Name,\n-                  Create => \"library source copy\",\n-                  Current_Dir => Current_Dir,\n-                  Location => Lib_Src_Dir.Location);\n+                  Create           => \"library source copy\",\n+                  Current_Dir      => Current_Dir,\n+                  Location         => Lib_Src_Dir.Location,\n+                  Externally_Built => Data.Externally_Built);\n \n                --  If directory does not exist, report an error\n \n@@ -6233,9 +6237,10 @@ package body Prj.Nmsc is\n                Data.Directory.Display_Name,\n                Data.Object_Directory.Name,\n                Data.Object_Directory.Display_Name,\n-               Create   => \"object\",\n-               Location => Object_Dir.Location,\n-               Current_Dir => Current_Dir);\n+               Create           => \"object\",\n+               Location         => Object_Dir.Location,\n+               Current_Dir      => Current_Dir,\n+               Externally_Built => Data.Externally_Built);\n \n             if Data.Object_Directory = No_Path_Information then\n \n@@ -6280,9 +6285,10 @@ package body Prj.Nmsc is\n             Data.Directory.Display_Name,\n             Data.Object_Directory.Name,\n             Data.Object_Directory.Display_Name,\n-            Create      => \"object\",\n-            Location    => Object_Dir.Location,\n-            Current_Dir => Current_Dir);\n+            Create           => \"object\",\n+            Location         => Object_Dir.Location,\n+            Current_Dir      => Current_Dir,\n+            Externally_Built => Data.Externally_Built);\n       end if;\n \n       if Current_Verbosity = High then\n@@ -6323,9 +6329,10 @@ package body Prj.Nmsc is\n                Data.Directory.Display_Name,\n                Data.Exec_Directory.Name,\n                Data.Exec_Directory.Display_Name,\n-               Create   => \"exec\",\n-               Location => Exec_Dir.Location,\n-               Current_Dir => Current_Dir);\n+               Create           => \"exec\",\n+               Location         => Exec_Dir.Location,\n+               Current_Dir      => Current_Dir,\n+               Externally_Built => Data.Externally_Built);\n \n             if Data.Exec_Directory = No_Path_Information then\n                Err_Vars.Error_Msg_File_1 := File_Name_Type (Exec_Dir.Value);\n@@ -6989,15 +6996,16 @@ package body Prj.Nmsc is\n    ----------------------\n \n    procedure Locate_Directory\n-     (Project     : Project_Id;\n-      In_Tree     : Project_Tree_Ref;\n-      Name        : File_Name_Type;\n-      Parent      : Path_Name_Type;\n-      Dir         : out Path_Name_Type;\n-      Display     : out Path_Name_Type;\n-      Create      : String := \"\";\n-      Current_Dir : String;\n-      Location    : Source_Ptr := No_Location)\n+     (Project          : Project_Id;\n+      In_Tree          : Project_Tree_Ref;\n+      Name             : File_Name_Type;\n+      Parent           : Path_Name_Type;\n+      Dir              : out Path_Name_Type;\n+      Display          : out Path_Name_Type;\n+      Create           : String := \"\";\n+      Current_Dir      : String;\n+      Location         : Source_Ptr := No_Location;\n+      Externally_Built : Boolean := False)\n    is\n       The_Parent      : constant String :=\n                           Get_Name_String (Parent) & Directory_Separator;\n@@ -7056,38 +7064,58 @@ package body Prj.Nmsc is\n       end if;\n \n       declare\n-         Full_Path_Name : constant String := Get_Name_String (Full_Name);\n+         Full_Path_Name : String_Access :=\n+                            new String'(Get_Name_String (Full_Name));\n \n       begin\n          if (Setup_Projects or else Subdirs /= null)\n            and then Create'Length > 0\n-           and then not Is_Directory (Full_Path_Name)\n          then\n-            begin\n-               Create_Path (Full_Path_Name);\n+            if not Is_Directory (Full_Path_Name.all) then\n+               --  If project is externally built, do not create a subdir,\n+               --  use the specified directory, without the subdir.\n \n-               if not Quiet_Output then\n-                  Write_Str (Create);\n-                  Write_Str (\" directory \"\"\");\n-                  Write_Str (Full_Path_Name);\n-                  Write_Line (\"\"\" created\");\n-               end if;\n+               if Externally_Built then\n+                  if Is_Absolute_Path (Get_Name_String (Name)) then\n+                     Get_Name_String (Name);\n \n-            exception\n-               when Use_Error =>\n-                  Error_Msg\n-                    (Project, In_Tree,\n-                     \"could not create \" & Create &\n-                     \" directory \" & Full_Path_Name,\n-                     Location);\n-            end;\n+                  else\n+                     Name_Len := 0;\n+                     Add_Str_To_Name_Buffer\n+                       (The_Parent (The_Parent'First .. The_Parent_Last));\n+                     Add_Str_To_Name_Buffer (Get_Name_String (Name));\n+                  end if;\n+\n+                  Full_Path_Name := new String'(Name_Buffer (1 .. Name_Len));\n+\n+               else\n+                  begin\n+                     Create_Path (Full_Path_Name.all);\n+\n+                     if not Quiet_Output then\n+                        Write_Str (Create);\n+                        Write_Str (\" directory \"\"\");\n+                        Write_Str (Full_Path_Name.all);\n+                        Write_Line (\"\"\" created\");\n+                     end if;\n+\n+                  exception\n+                     when Use_Error =>\n+                        Error_Msg\n+                          (Project, In_Tree,\n+                           \"could not create \" & Create &\n+                           \" directory \" & Full_Path_Name.all,\n+                           Location);\n+                  end;\n+               end if;\n+            end if;\n          end if;\n \n-         if Is_Directory (Full_Path_Name) then\n+         if Is_Directory (Full_Path_Name.all) then\n             declare\n                Normed : constant String :=\n                           Normalize_Pathname\n-                            (Full_Path_Name,\n+                            (Full_Path_Name.all,\n                              Directory      => Current_Dir,\n                              Resolve_Links  => False,\n                              Case_Sensitive => True);\n@@ -7110,6 +7138,8 @@ package body Prj.Nmsc is\n                Dir := Name_Find;\n             end;\n          end if;\n+\n+         Free (Full_Path_Name);\n       end;\n    end Locate_Directory;\n "}]}