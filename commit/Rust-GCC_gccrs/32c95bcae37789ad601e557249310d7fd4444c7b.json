{"sha": "32c95bcae37789ad601e557249310d7fd4444c7b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzJjOTViY2FlMzc3ODlhZDYwMWU1NTcyNDkzMTBkN2ZkNDQ0NGM3Yg==", "commit": {"author": {"name": "Michael Meissner", "email": "meissner@linux.vnet.ibm.com", "date": "2017-11-27T19:45:56Z"}, "committer": {"name": "Michael Meissner", "email": "meissner@gcc.gnu.org", "date": "2017-11-27T19:45:56Z"}, "message": "[gcc]\n2017-11-27  Michael Meissner  <meissner@linux.vnet.ibm.com>\n\n\tPR middle_end/82333\n\t* varasm.c (compare_constant): Take the mode of the constants into\n\taccount when comparing floating point constants.\n\n[gcc/testsuite]\n2017-11-27  Michael Meissner  <meissner@linux.vnet.ibm.com>\n\n\tPR middle_end/82333\n\t* gcc.target/powerpc/pr82333.c: New test.\n\nFrom-SVN: r255177", "tree": {"sha": "38542748b2e3e88e19378ff65a0d1154384482c2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/38542748b2e3e88e19378ff65a0d1154384482c2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/32c95bcae37789ad601e557249310d7fd4444c7b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/32c95bcae37789ad601e557249310d7fd4444c7b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/32c95bcae37789ad601e557249310d7fd4444c7b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/32c95bcae37789ad601e557249310d7fd4444c7b/comments", "author": null, "committer": null, "parents": [{"sha": "0f42ffd7f7c416a0702de90d2b0b374e877dc33b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0f42ffd7f7c416a0702de90d2b0b374e877dc33b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0f42ffd7f7c416a0702de90d2b0b374e877dc33b"}], "stats": {"total": 55, "additions": 53, "deletions": 2}, "files": [{"sha": "10d5634b118857c6d32916411ff03af0f735cbca", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/32c95bcae37789ad601e557249310d7fd4444c7b/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/32c95bcae37789ad601e557249310d7fd4444c7b/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=32c95bcae37789ad601e557249310d7fd4444c7b", "patch": "@@ -1,3 +1,9 @@\n+2017-11-27  Michael Meissner  <meissner@linux.vnet.ibm.com>\n+\n+\tPR middle_end/82333\n+\t* varasm.c (compare_constant): Take the mode of the constants into\n+\taccount when comparing floating point constants.\n+\n 2017-11-27  Gerald Pfeifer  <gerald@pfeifer.com>\n \n \t* hash-set.h (DEFINE_DEBUG_HASH_SET): Remove static qualifier"}, {"sha": "bfcf7b19cdc8ec3079ebe6447b19ed97bdbf187b", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/32c95bcae37789ad601e557249310d7fd4444c7b/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/32c95bcae37789ad601e557249310d7fd4444c7b/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=32c95bcae37789ad601e557249310d7fd4444c7b", "patch": "@@ -1,3 +1,8 @@\n+2017-11-27  Michael Meissner  <meissner@linux.vnet.ibm.com>\n+\n+\tPR middle_end/82333\n+\t* gcc.target/powerpc/pr82333.c: New test.\n+\n 2017-11-27  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR c++/81675"}, {"sha": "27154c49961919a54f97e742c49815911c602e53", "filename": "gcc/testsuite/gcc.target/powerpc/pr82333.c", "status": "added", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/32c95bcae37789ad601e557249310d7fd4444c7b/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fpr82333.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/32c95bcae37789ad601e557249310d7fd4444c7b/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fpr82333.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fpr82333.c?ref=32c95bcae37789ad601e557249310d7fd4444c7b", "patch": "@@ -0,0 +1,34 @@\n+/* { dg-do compile { target { powerpc*-*-linux* } } } */\n+/* { dg-require-effective-target ppc_float128_sw } */\n+/* { dg-require-effective-target vsx_hw } */\n+/* { dg-options \"-mvsx -O2 -mabi=ibmlongdouble -Wno-psabi\" } */\n+\n+/* PR 82333 was an internal compiler abort where the compiler thought that a\n+   long double _Complex constant was the same as __float128 _Complex.  */\n+\n+_Complex long double vld;\n+_Complex _Float128 vf128;\n+\n+_Complex long double\n+fld (_Complex long double arg0)\n+{\n+  return 0;\n+}\n+\n+_Complex _Float128\n+ff128 (_Complex _Float128 arg0)\n+{\n+  return 0;\n+}\n+\n+void\n+tld (void)\n+{\n+  vld = fld (vld);\n+}\n+\n+void\n+tf128 (void)\n+{\n+  vf128 = ff128 (vf128);\n+}"}, {"sha": "0c7b26ebab747e871e180539bbe20c9b4dd4f1b4", "filename": "gcc/varasm.c", "status": "modified", "additions": 8, "deletions": 2, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/32c95bcae37789ad601e557249310d7fd4444c7b/gcc%2Fvarasm.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/32c95bcae37789ad601e557249310d7fd4444c7b/gcc%2Fvarasm.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fvarasm.c?ref=32c95bcae37789ad601e557249310d7fd4444c7b", "patch": "@@ -3118,10 +3118,16 @@ compare_constant (const tree t1, const tree t2)\n       return tree_int_cst_equal (t1, t2);\n \n     case REAL_CST:\n-      /* Real constants are the same only if the same width of type.  */\n+      /* Real constants are the same only if the same width of type.  In\n+\t addition to the same width, we need to check whether the modes are the\n+\t same.  There might be two floating point modes that are the same size\n+\t but have different representations, such as the PowerPC that has 2\n+\t different 128-bit floating point types (IBM extended double and IEEE\n+\t 128-bit floating point).  */\n       if (TYPE_PRECISION (TREE_TYPE (t1)) != TYPE_PRECISION (TREE_TYPE (t2)))\n \treturn 0;\n-\n+      if (TYPE_MODE (TREE_TYPE (t1)) != TYPE_MODE (TREE_TYPE (t2)))\n+\treturn 0;\n       return real_identical (&TREE_REAL_CST (t1), &TREE_REAL_CST (t2));\n \n     case FIXED_CST:"}]}