{"sha": "ee9fcee3ec3a124dc3947c73c264bbcda97198df", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWU5ZmNlZTNlYzNhMTI0ZGMzOTQ3YzczYzI2NGJiY2RhOTcxOThkZg==", "commit": {"author": {"name": "Andrew Stubbs", "email": "ams@codesourcery.com", "date": "2020-01-30T18:25:15Z"}, "committer": {"name": "Andrew Stubbs", "email": "ams@codesourcery.com", "date": "2020-04-23T14:58:09Z"}, "message": "OpenACC: Avoid ICE in type-cast 'async', 'wait' clauses\n\n2020-04-23  Andrew Stubbs  <ams@codesourcery.com>\n\t    Thomas Schwinge  <thomas@codesourcery.com>\n\n\tPR middle-end/93488\n\n\tgcc/\n\t* omp-expand.c (expand_omp_target): Use force_gimple_operand_gsi on\n\tt_async and the wait arguments.\n\n\tgcc/testsuite/\n\t* c-c++-common/goacc/pr93488.c: New file.\n\nReviewed-by: Thomas Schwinge <thomas@codesourcery.com>", "tree": {"sha": "8b2b61a178417df1ce52beda7a233ecdc57a2200", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8b2b61a178417df1ce52beda7a233ecdc57a2200"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ee9fcee3ec3a124dc3947c73c264bbcda97198df", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ee9fcee3ec3a124dc3947c73c264bbcda97198df", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ee9fcee3ec3a124dc3947c73c264bbcda97198df", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ee9fcee3ec3a124dc3947c73c264bbcda97198df/comments", "author": {"login": "ams-cs", "id": 2235130, "node_id": "MDQ6VXNlcjIyMzUxMzA=", "avatar_url": "https://avatars.githubusercontent.com/u/2235130?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ams-cs", "html_url": "https://github.com/ams-cs", "followers_url": "https://api.github.com/users/ams-cs/followers", "following_url": "https://api.github.com/users/ams-cs/following{/other_user}", "gists_url": "https://api.github.com/users/ams-cs/gists{/gist_id}", "starred_url": "https://api.github.com/users/ams-cs/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ams-cs/subscriptions", "organizations_url": "https://api.github.com/users/ams-cs/orgs", "repos_url": "https://api.github.com/users/ams-cs/repos", "events_url": "https://api.github.com/users/ams-cs/events{/privacy}", "received_events_url": "https://api.github.com/users/ams-cs/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ams-cs", "id": 2235130, "node_id": "MDQ6VXNlcjIyMzUxMzA=", "avatar_url": "https://avatars.githubusercontent.com/u/2235130?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ams-cs", "html_url": "https://github.com/ams-cs", "followers_url": "https://api.github.com/users/ams-cs/followers", "following_url": "https://api.github.com/users/ams-cs/following{/other_user}", "gists_url": "https://api.github.com/users/ams-cs/gists{/gist_id}", "starred_url": "https://api.github.com/users/ams-cs/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ams-cs/subscriptions", "organizations_url": "https://api.github.com/users/ams-cs/orgs", "repos_url": "https://api.github.com/users/ams-cs/repos", "events_url": "https://api.github.com/users/ams-cs/events{/privacy}", "received_events_url": "https://api.github.com/users/ams-cs/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "901f5289d9465d4c388ae288f850ad4f29e99a2c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/901f5289d9465d4c388ae288f850ad4f29e99a2c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/901f5289d9465d4c388ae288f850ad4f29e99a2c"}], "stats": {"total": 50, "additions": 46, "deletions": 4}, "files": [{"sha": "4e427c06cf6e00b019e38ef9cc889e3a3ad0945b", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ee9fcee3ec3a124dc3947c73c264bbcda97198df/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ee9fcee3ec3a124dc3947c73c264bbcda97198df/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=ee9fcee3ec3a124dc3947c73c264bbcda97198df", "patch": "@@ -1,3 +1,11 @@\n+2020-04-23  Andrew Stubbs  <ams@codesourcery.com>\n+\t    Thomas Schwinge  <thomas@codesourcery.com>\n+\n+\tPR middle-end/93488\n+\n+\t* omp-expand.c (expand_omp_target): Use force_gimple_operand_gsi on\n+\tt_async and the wait arguments.\n+\n 2020-04-23  Richard Sandiford  <richard.sandiford@arm.com>\n \n \tPR tree-optimization/94727"}, {"sha": "da1f4c39d18edceaa5ee3979d65a6a0cb2e09005", "filename": "gcc/omp-expand.c", "status": "modified", "additions": 9, "deletions": 4, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ee9fcee3ec3a124dc3947c73c264bbcda97198df/gcc%2Fomp-expand.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ee9fcee3ec3a124dc3947c73c264bbcda97198df/gcc%2Fomp-expand.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fomp-expand.c?ref=ee9fcee3ec3a124dc3947c73c264bbcda97198df", "patch": "@@ -8418,7 +8418,9 @@ expand_omp_target (struct omp_region *region)\n \t\t\t\t\t      i_async));\n \t  }\n \tif (t_async)\n-\t  args.safe_push (t_async);\n+\t  args.safe_push (force_gimple_operand_gsi (&gsi, t_async, true,\n+\t\t\t\t\t\t    NULL_TREE, true,\n+\t\t\t\t\t\t    GSI_SAME_STMT));\n \n \t/* Save the argument index, and ... */\n \tunsigned t_wait_idx = args.length ();\n@@ -8431,9 +8433,12 @@ expand_omp_target (struct omp_region *region)\n \tfor (; c; c = OMP_CLAUSE_CHAIN (c))\n \t  if (OMP_CLAUSE_CODE (c) == OMP_CLAUSE_WAIT)\n \t    {\n-\t      args.safe_push (fold_convert_loc (OMP_CLAUSE_LOCATION (c),\n-\t\t\t\t\t\tinteger_type_node,\n-\t\t\t\t\t\tOMP_CLAUSE_WAIT_EXPR (c)));\n+\t      tree arg = fold_convert_loc (OMP_CLAUSE_LOCATION (c),\n+\t\t\t\t\t   integer_type_node,\n+\t\t\t\t\t   OMP_CLAUSE_WAIT_EXPR (c));\n+\t      arg = force_gimple_operand_gsi (&gsi, arg, true, NULL_TREE, true,\n+\t\t\t\t\t      GSI_SAME_STMT);\n+\t      args.safe_push (arg);\n \t      num_waits++;\n \t    }\n "}, {"sha": "c0caffbd05f5d5c561d686efa37ac5d7c91346dd", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ee9fcee3ec3a124dc3947c73c264bbcda97198df/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ee9fcee3ec3a124dc3947c73c264bbcda97198df/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=ee9fcee3ec3a124dc3947c73c264bbcda97198df", "patch": "@@ -1,3 +1,10 @@\n+2020-04-23  Andrew Stubbs  <ams@codesourcery.com>\n+\t    Thomas Schwinge  <thomas@codesourcery.com>\n+\n+\tPR middle-end/93488\n+\n+\t* c-c++-common/goacc/pr93488.c: New file.\n+\n 2020-04-23  Richard Sandiford  <richard.sandiford@arm.com>\n \n \tPR tree-optimization/94727"}, {"sha": "6fddad919d2208f5292095991399139c6a4ffd3c", "filename": "gcc/testsuite/c-c++-common/goacc/pr93488.c", "status": "added", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ee9fcee3ec3a124dc3947c73c264bbcda97198df/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fgoacc%2Fpr93488.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ee9fcee3ec3a124dc3947c73c264bbcda97198df/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fgoacc%2Fpr93488.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fgoacc%2Fpr93488.c?ref=ee9fcee3ec3a124dc3947c73c264bbcda97198df", "patch": "@@ -0,0 +1,22 @@\n+/* PR middle-end/93488\n+ \n+   Ensure that wait and async arguments can be cast to the correct type\n+   without breaking gimple verification.  */\n+\n+void test()\n+{\n+  /* int */ unsigned char a = 1;\n+  /* int */ unsigned char w = 1;\n+\n+#pragma acc parallel wait(w) async(a)\n+  ;\n+#pragma acc kernels wait(w) async(a)\n+  ;\n+#pragma acc serial wait(w) async(a)\n+  ;\n+  int data = 0;\n+#pragma acc enter data wait(w) async(a) create(data)\n+#pragma acc update wait(w) async(a) device(data)\n+#pragma acc exit data wait(w) async(a) delete(data)\n+#pragma acc wait(w) async(a)\n+}"}]}