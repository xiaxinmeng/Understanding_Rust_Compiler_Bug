{"sha": "158061a65bf2e68e44bc2f9622be41f57b0a47d0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTU4MDYxYTY1YmYyZTY4ZTQ0YmMyZjk2MjJiZTQxZjU3YjBhNDdkMA==", "commit": {"author": {"name": "Olga Makhotina", "email": "olga.makhotina@intel.com", "date": "2018-02-12T06:09:20Z"}, "committer": {"name": "Kirill Yukhin", "email": "kyukhin@gcc.gnu.org", "date": "2018-02-12T06:09:20Z"}, "message": "Add missing mask[z]_scalef_round_s[d,s] intrinsics\n\ngcc/\n\t* config/i386/avx512fintrin.h (_mm_mask_scalef_round_sd,\n\t_mm_maskz_scalef_round_sd, _mm_mask_scalef_round_ss,\n\t_mm_maskz_scalef_round_ss): New intrinsics.\n\t(__builtin_ia32_scalefsd_round, __builtin_ia32_scalefss_round): Fix.\n\t* config/i386/i386-builtin.def (__builtin_ia32_scalefsd_round,\n\t__builtin_ia32_scalefss_round): Remove.\n\t(__builtin_ia32_scalefsd_mask_round,\n\t__builtin_ia32_scalefss_mask_round): New intrinsics.\n\t* config/i386/sse.md (vmscalef<mode><round_name>): Renamed to ...\n\t(vmscalef<mode><mask_scalar_name><round_scalar_name>): ... this.\n\t((match_operand:VF_128 2 \"<round_nimm_predicate>\"\n\t\"<round_constraint>\")): Changed to ...\n\t((match_operand:VF_128 2 \"<round_scalar_nimm_predicate>\"\n\t\"<round_scalar_constraint>\")): ... this.\n\t(\"vscalef<ssescalarmodesuffix>\\t{<round_op3>%2, %1, %0|\n\t%0, %1, %2<round_op3>}\"): Changed to ...\n\t(\"vscalef<ssescalarmodesuffix>\\t{<round_scalar_mask_op3>%2, %1,\n\t%0<mask_scalar_operand3>|%0<mask_scalar_operand3>, %1,\n\t%2<round_scalar_mask_op3>}\"): ... this.\n\t* config/i386/subst.md (round_scalar_nimm_predicate): New.\n\ngcc/testsuite/\n\t* gcc.target/i386/avx512f-vscalefsd-1.c (_mm_mask_scalef_round_sd,\n\t_mm_maskz_scalef_round_sd): Test new intrinsics.\n\t* gcc.target/i386/avx512f-vscalefsd-2.c (_mm_scalef_round_sd,\n\t_mm_mask_scalef_round_sd, _mm_maskz_scalef_round_sd): Test new\n\tintrinsics.\n\t* gcc.target/i386/avx512f-vscalefss-1.c (_mm_mask_scalef_round_ss,\n\t_mm_maskz_scalef_round_ss): Test new intrinsics.\n\t* gcc.target/i386/avx512f-vscalefss-2.c (_mm_scalef_round_ss,\n\t_mm_mask_scalef_round_ss, _mm_maskz_scalef_round_ss): Test new\n\tintrinsics.\n\t* gcc.target/i386/avx-1.c (__builtin_ia32_scalefsd_round,\n\t__builtin_ia32_scalefss_round): Remove builtin.\n\t(__builtin_ia32_scalefsd_mask_round,\n\t__builtin_ia32_scalefss_mask_round): Test new builtin.\n\t* gcc.target/i386/sse-13.c: Ditto.\n\t* gcc.target/i386/sse-23.c: Ditto.\n\nFrom-SVN: r257578", "tree": {"sha": "1c646ed6aa491b5290aa15e8cc7197e9aa553219", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1c646ed6aa491b5290aa15e8cc7197e9aa553219"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/158061a65bf2e68e44bc2f9622be41f57b0a47d0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/158061a65bf2e68e44bc2f9622be41f57b0a47d0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/158061a65bf2e68e44bc2f9622be41f57b0a47d0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/158061a65bf2e68e44bc2f9622be41f57b0a47d0/comments", "author": {"login": "Djilka", "id": 6038217, "node_id": "MDQ6VXNlcjYwMzgyMTc=", "avatar_url": "https://avatars.githubusercontent.com/u/6038217?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Djilka", "html_url": "https://github.com/Djilka", "followers_url": "https://api.github.com/users/Djilka/followers", "following_url": "https://api.github.com/users/Djilka/following{/other_user}", "gists_url": "https://api.github.com/users/Djilka/gists{/gist_id}", "starred_url": "https://api.github.com/users/Djilka/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Djilka/subscriptions", "organizations_url": "https://api.github.com/users/Djilka/orgs", "repos_url": "https://api.github.com/users/Djilka/repos", "events_url": "https://api.github.com/users/Djilka/events{/privacy}", "received_events_url": "https://api.github.com/users/Djilka/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "ba43b9fadd8b064023ab172db5a6e73027c8be44", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ba43b9fadd8b064023ab172db5a6e73027c8be44", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ba43b9fadd8b064023ab172db5a6e73027c8be44"}], "stats": {"total": 219, "additions": 192, "deletions": 27}, "files": [{"sha": "b29822b0ebd9c47f5a0d0bd62df3d75670ec52a9", "filename": "gcc/ChangeLog", "status": "modified", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/158061a65bf2e68e44bc2f9622be41f57b0a47d0/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/158061a65bf2e68e44bc2f9622be41f57b0a47d0/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=158061a65bf2e68e44bc2f9622be41f57b0a47d0", "patch": "@@ -1,3 +1,26 @@\n+2018-02-12  Olga Makhotina  <olga.makhotina@intel.com>\n+\n+\t* config/i386/avx512fintrin.h (_mm_mask_scalef_round_sd,\n+\t_mm_maskz_scalef_round_sd, _mm_mask_scalef_round_ss,\n+\t_mm_maskz_scalef_round_ss): New intrinsics.\n+\t(__builtin_ia32_scalefsd_round, __builtin_ia32_scalefss_round): Fix.\n+\t* config/i386/i386-builtin.def (__builtin_ia32_scalefsd_round,\n+\t__builtin_ia32_scalefss_round): Remove.\n+\t(__builtin_ia32_scalefsd_mask_round,\n+\t__builtin_ia32_scalefss_mask_round): New intrinsics.\n+\t* config/i386/sse.md (vmscalef<mode><round_name>): Renamed to ...\n+\t(vmscalef<mode><mask_scalar_name><round_scalar_name>): ... this.\n+\t((match_operand:VF_128 2 \"<round_nimm_predicate>\"\n+\t\"<round_constraint>\")): Changed to ...\n+\t((match_operand:VF_128 2 \"<round_scalar_nimm_predicate>\"\n+\t\"<round_scalar_constraint>\")): ... this.\n+\t(\"vscalef<ssescalarmodesuffix>\\t{<round_op3>%2, %1, %0|\n+\t%0, %1, %2<round_op3>}\"): Changed to ...\n+\t(\"vscalef<ssescalarmodesuffix>\\t{<round_scalar_mask_op3>%2, %1,\n+\t%0<mask_scalar_operand3>|%0<mask_scalar_operand3>, %1,\n+\t%2<round_scalar_mask_op3>}\"): ... this.\n+\t* config/i386/subst.md (round_scalar_nimm_predicate): New.\n+\n 2018-02-12  Olga Makhotina  <olga.makhotina@intel.com>\n \n \t* config/i386/avx512fintrin.h (_mm_mask_sqrt_round_sd)"}, {"sha": "ba65acadf8ddad9d6eea786cb37608a878d71f02", "filename": "gcc/config/i386/avx512fintrin.h", "status": "modified", "additions": 71, "deletions": 14, "changes": 85, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/158061a65bf2e68e44bc2f9622be41f57b0a47d0/gcc%2Fconfig%2Fi386%2Favx512fintrin.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/158061a65bf2e68e44bc2f9622be41f57b0a47d0/gcc%2Fconfig%2Fi386%2Favx512fintrin.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Favx512fintrin.h?ref=158061a65bf2e68e44bc2f9622be41f57b0a47d0", "patch": "@@ -3103,18 +3103,67 @@ extern __inline __m128d\n __attribute__ ((__gnu_inline__, __always_inline__, __artificial__))\n _mm_scalef_round_sd (__m128d __A, __m128d __B, const int __R)\n {\n-  return (__m128d) __builtin_ia32_scalefsd_round ((__v2df) __A,\n-\t\t\t\t\t\t  (__v2df) __B,\n-\t\t\t\t\t\t  __R);\n+  return (__m128d) __builtin_ia32_scalefsd_mask_round ((__v2df) __A,\n+\t\t\t\t\t\t       (__v2df) __B,\n+\t\t\t\t\t\t       (__v2df)\n+\t\t\t\t\t\t       _mm_setzero_pd (),\n+\t\t\t\t\t\t       (__mmask8) -1, __R);\n+}\n+\n+extern __inline __m128d\n+__attribute__ ((__gnu_inline__, __always_inline__, __artificial__))\n+_mm_mask_scalef_round_sd (__m128d __W, __mmask8 __U, __m128d __A, __m128d __B,\n+\t\t\t  const int __R)\n+{\n+  return (__m128d) __builtin_ia32_scalefsd_mask_round ((__v2df) __A,\n+\t\t\t\t\t\t       (__v2df) __B,\n+\t\t\t\t\t\t       (__v2df) __W,\n+\t\t\t\t\t\t       (__mmask8) __U, __R);\n+}\n+\n+extern __inline __m128d\n+__attribute__ ((__gnu_inline__, __always_inline__, __artificial__))\n+_mm_maskz_scalef_round_sd (__mmask8 __U, __m128d __A, __m128d __B,\n+\t\t\t   const int __R)\n+{\n+  return (__m128d) __builtin_ia32_scalefsd_mask_round ((__v2df) __A,\n+\t\t\t\t\t\t       (__v2df) __B,\n+\t\t\t\t\t\t       (__v2df)\n+\t\t\t\t\t\t       _mm_setzero_pd (),\n+\t\t\t\t\t\t       (__mmask8) __U, __R);\n }\n \n extern __inline __m128\n __attribute__ ((__gnu_inline__, __always_inline__, __artificial__))\n _mm_scalef_round_ss (__m128 __A, __m128 __B, const int __R)\n {\n-  return (__m128) __builtin_ia32_scalefss_round ((__v4sf) __A,\n-\t\t\t\t\t\t (__v4sf) __B,\n-\t\t\t\t\t\t __R);\n+  return (__m128) __builtin_ia32_scalefss_mask_round ((__v4sf) __A,\n+\t\t\t\t\t\t      (__v4sf) __B,\n+\t\t\t\t\t\t      (__v4sf)\n+\t\t\t\t\t\t      _mm_setzero_ps (),\n+\t\t\t\t\t\t      (__mmask8) -1, __R);\n+}\n+\n+extern __inline __m128\n+__attribute__ ((__gnu_inline__, __always_inline__, __artificial__))\n+_mm_mask_scalef_round_ss (__m128 __W, __mmask8 __U, __m128 __A, __m128 __B,\n+\t\t\t const int __R)\n+{\n+  return (__m128) __builtin_ia32_scalefss_mask_round ((__v4sf) __A,\n+\t\t\t\t\t\t      (__v4sf) __B,\n+\t\t\t\t\t\t      (__v4sf) __W,\n+\t\t\t\t\t\t      (__mmask8) __U, __R);\n+}\n+\n+extern __inline __m128\n+__attribute__ ((__gnu_inline__, __always_inline__, __artificial__))\n+_mm_maskz_scalef_round_ss (__mmask8 __U, __m128 __A, __m128 __B, const int __R)\n+{\n+  return (__m128) __builtin_ia32_scalefss_mask_round ((__v4sf) __A,\n+\t\t\t\t\t\t      (__v4sf) __B,\n+\t\t\t\t\t\t      (__v4sf)\n+\t\t\t\t\t\t      _mm_setzero_ps (),\n+\t\t\t\t\t\t      (__mmask8) __U, __R);\n }\n #else\n #define _mm512_scalef_round_pd(A, B, C)            \\\n@@ -3136,10 +3185,12 @@ _mm_scalef_round_ss (__m128 __A, __m128 __B, const int __R)\n     (__m512)__builtin_ia32_scalefps512_mask(A, B, (__v16sf)_mm512_setzero_ps(), U, C)\n \n #define _mm_scalef_round_sd(A, B, C)            \\\n-    (__m128d)__builtin_ia32_scalefsd_round(A, B, C)\n+    (__m128d)__builtin_ia32_scalefsd_mask_round (A, B, \\\n+\t(__v2df)_mm_setzero_pd (), -1, C)\n \n #define _mm_scalef_round_ss(A, B, C)            \\\n-    (__m128)__builtin_ia32_scalefss_round(A, B, C)\n+    (__m128)__builtin_ia32_scalefss_mask_round (A, B, \\\n+\t(__v4sf)_mm_setzero_ps (), -1, C)\n #endif\n \n #ifdef __OPTIMIZE__\n@@ -12182,18 +12233,24 @@ extern __inline __m128d\n __attribute__ ((__gnu_inline__, __always_inline__, __artificial__))\n _mm_scalef_sd (__m128d __A, __m128d __B)\n {\n-  return (__m128d) __builtin_ia32_scalefsd_round ((__v2df) __A,\n-\t\t\t\t\t\t  (__v2df) __B,\n-\t\t\t\t\t\t  _MM_FROUND_CUR_DIRECTION);\n+  return (__m128d) __builtin_ia32_scalefsd_mask_round ((__v2df) __A,\n+\t\t\t\t\t\t    (__v2df) __B,\n+\t\t\t\t\t\t    (__v2df)\n+\t\t\t\t\t\t    _mm_setzero_pd (),\n+\t\t\t\t\t\t    (__mmask8) -1,\n+\t\t\t\t\t\t    _MM_FROUND_CUR_DIRECTION);\n }\n \n extern __inline __m128\n __attribute__ ((__gnu_inline__, __always_inline__, __artificial__))\n _mm_scalef_ss (__m128 __A, __m128 __B)\n {\n-  return (__m128) __builtin_ia32_scalefss_round ((__v4sf) __A,\n-\t\t\t\t\t\t (__v4sf) __B,\n-\t\t\t\t\t\t _MM_FROUND_CUR_DIRECTION);\n+  return (__m128) __builtin_ia32_scalefss_mask_round ((__v4sf) __A,\n+\t\t\t\t\t\t   (__v4sf) __B,\n+\t\t\t\t\t\t   (__v4sf)\n+\t\t\t\t\t\t   _mm_setzero_ps (),\n+\t\t\t\t\t\t   (__mmask8) -1,\n+\t\t\t\t\t\t   _MM_FROUND_CUR_DIRECTION);\n }\n \n extern __inline __m512d"}, {"sha": "169189d962c9ec88b04b1fd08fe7adfa30f3c746", "filename": "gcc/config/i386/i386-builtin.def", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/158061a65bf2e68e44bc2f9622be41f57b0a47d0/gcc%2Fconfig%2Fi386%2Fi386-builtin.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/158061a65bf2e68e44bc2f9622be41f57b0a47d0/gcc%2Fconfig%2Fi386%2Fi386-builtin.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386-builtin.def?ref=158061a65bf2e68e44bc2f9622be41f57b0a47d0", "patch": "@@ -2718,8 +2718,8 @@ BDESC (OPTION_MASK_ISA_AVX512F, CODE_FOR_avx512f_rndscalev2df_round, \"__builtin_\n BDESC (OPTION_MASK_ISA_AVX512F, CODE_FOR_avx512f_rndscalev4sf_round, \"__builtin_ia32_rndscaless_round\", IX86_BUILTIN_RNDSCALESS, UNKNOWN, (int) V4SF_FTYPE_V4SF_V4SF_INT_INT)\n BDESC (OPTION_MASK_ISA_AVX512F, CODE_FOR_avx512f_scalefv8df_mask_round, \"__builtin_ia32_scalefpd512_mask\", IX86_BUILTIN_SCALEFPD512, UNKNOWN, (int) V8DF_FTYPE_V8DF_V8DF_V8DF_UQI_INT)\n BDESC (OPTION_MASK_ISA_AVX512F, CODE_FOR_avx512f_scalefv16sf_mask_round, \"__builtin_ia32_scalefps512_mask\", IX86_BUILTIN_SCALEFPS512, UNKNOWN, (int) V16SF_FTYPE_V16SF_V16SF_V16SF_HI_INT)\n-BDESC (OPTION_MASK_ISA_AVX512F, CODE_FOR_avx512f_vmscalefv2df_round, \"__builtin_ia32_scalefsd_round\", IX86_BUILTIN_SCALEFSD, UNKNOWN, (int) V2DF_FTYPE_V2DF_V2DF_INT)\n-BDESC (OPTION_MASK_ISA_AVX512F, CODE_FOR_avx512f_vmscalefv4sf_round, \"__builtin_ia32_scalefss_round\", IX86_BUILTIN_SCALEFSS, UNKNOWN, (int) V4SF_FTYPE_V4SF_V4SF_INT)\n+BDESC (OPTION_MASK_ISA_AVX512F, CODE_FOR_avx512f_vmscalefv2df_mask_round, \"__builtin_ia32_scalefsd_mask_round\", IX86_BUILTIN_SCALEFSD, UNKNOWN, (int) V2DF_FTYPE_V2DF_V2DF_V2DF_UQI_INT)\n+BDESC (OPTION_MASK_ISA_AVX512F, CODE_FOR_avx512f_vmscalefv4sf_mask_round, \"__builtin_ia32_scalefss_mask_round\", IX86_BUILTIN_SCALEFSS, UNKNOWN, (int) V4SF_FTYPE_V4SF_V4SF_V4SF_UQI_INT)\n BDESC (OPTION_MASK_ISA_AVX512F, CODE_FOR_avx512f_sqrtv8df2_mask_round, \"__builtin_ia32_sqrtpd512_mask\", IX86_BUILTIN_SQRTPD512_MASK, UNKNOWN, (int) V8DF_FTYPE_V8DF_V8DF_QI_INT)\n BDESC (OPTION_MASK_ISA_AVX512F, CODE_FOR_avx512f_sqrtv16sf2_mask_round, \"__builtin_ia32_sqrtps512_mask\", IX86_BUILTIN_SQRTPS512_MASK, UNKNOWN, (int) V16SF_FTYPE_V16SF_V16SF_HI_INT)\n BDESC (OPTION_MASK_ISA_AVX512F, CODE_FOR_sse2_vmsqrtv2df2_mask_round, \"__builtin_ia32_sqrtsd_mask_round\", IX86_BUILTIN_SQRTSD_ROUND, UNKNOWN, (int) V2DF_FTYPE_V2DF_V2DF_V2DF_UQI_INT)"}, {"sha": "da9af2367ae4aa7fa4a9781c28e932b39553d987", "filename": "gcc/config/i386/sse.md", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/158061a65bf2e68e44bc2f9622be41f57b0a47d0/gcc%2Fconfig%2Fi386%2Fsse.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/158061a65bf2e68e44bc2f9622be41f57b0a47d0/gcc%2Fconfig%2Fi386%2Fsse.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fsse.md?ref=158061a65bf2e68e44bc2f9622be41f57b0a47d0", "patch": "@@ -8318,17 +8318,17 @@\n   operands[1] = adjust_address (operands[1], DFmode, INTVAL (operands[2]) * 8);\n })\n \n-(define_insn \"avx512f_vmscalef<mode><round_name>\"\n+(define_insn \"avx512f_vmscalef<mode><mask_scalar_name><round_scalar_name>\"\n   [(set (match_operand:VF_128 0 \"register_operand\" \"=v\")\n \t(vec_merge:VF_128\n \t  (unspec:VF_128\n \t    [(match_operand:VF_128 1 \"register_operand\" \"v\")\n-\t     (match_operand:VF_128 2 \"<round_nimm_predicate>\" \"<round_constraint>\")]\n+\t     (match_operand:VF_128 2 \"<round_scalar_nimm_predicate>\" \"<round_scalar_constraint>\")]\n \t    UNSPEC_SCALEF)\n \t  (match_dup 1)\n \t  (const_int 1)))]\n   \"TARGET_AVX512F\"\n-  \"vscalef<ssescalarmodesuffix>\\t{<round_op3>%2, %1, %0|%0, %1, %2<round_op3>}\"\n+  \"vscalef<ssescalarmodesuffix>\\t{<round_scalar_mask_op3>%2, %1, %0<mask_scalar_operand3>|%0<mask_scalar_operand3>, %1, %2<round_scalar_mask_op3>}\"\n   [(set_attr \"prefix\" \"evex\")\n    (set_attr \"mode\"  \"<ssescalarmode>\")])\n "}, {"sha": "3f638650846fd88ec58207b36dca4f7dd6241d5e", "filename": "gcc/config/i386/subst.md", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/158061a65bf2e68e44bc2f9622be41f57b0a47d0/gcc%2Fconfig%2Fi386%2Fsubst.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/158061a65bf2e68e44bc2f9622be41f57b0a47d0/gcc%2Fconfig%2Fi386%2Fsubst.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fsubst.md?ref=158061a65bf2e68e44bc2f9622be41f57b0a47d0", "patch": "@@ -271,6 +271,7 @@\n (define_subst_attr \"round_scalar_mask_op3\" \"round_scalar\" \"\" \"<round_scalar_mask_operand3>\")\n (define_subst_attr \"round_scalar_constraint\" \"round_scalar\" \"vm\" \"v\")\n (define_subst_attr \"round_scalar_prefix\" \"round_scalar\" \"vex\" \"evex\")\n+(define_subst_attr \"round_scalar_nimm_predicate\" \"round_scalar\" \"vector_operand\" \"register_operand\")\n \n (define_subst \"round_scalar\"\n   [(set (match_operand:SUBST_V 0)"}, {"sha": "1a76336d0d019bbf126a6b5baf2cf72ea55d3174", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/158061a65bf2e68e44bc2f9622be41f57b0a47d0/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/158061a65bf2e68e44bc2f9622be41f57b0a47d0/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=158061a65bf2e68e44bc2f9622be41f57b0a47d0", "patch": "@@ -1,3 +1,22 @@\n+2018-02-12  Olga Makhotina  <olga.makhotina@intel.com>\n+\n+\t* gcc.target/i386/avx512f-vscalefsd-1.c (_mm_mask_scalef_round_sd,\n+\t_mm_maskz_scalef_round_sd): Test new intrinsics.\n+\t* gcc.target/i386/avx512f-vscalefsd-2.c (_mm_scalef_round_sd,\n+\t(_mm_mask_scalef_round_sd, _mm_maskz_scalef_round_sd): Test new\n+\tintrinsics.\n+\t* gcc.target/i386/avx512f-vscalefss-1.c (_mm_mask_scalef_round_ss,\n+\t_mm_maskz_scalef_round_ss): Test new intrinsics.\n+\t* gcc.target/i386/avx512f-vscalefss-2.c (_mm_scalef_round_ss,\n+\t_mm_mask_scalef_round_ss, _mm_maskz_scalef_round_ss): Test new\n+\tintrinsics.\n+\t* gcc.target/i386/avx-1.c (__builtin_ia32_scalefsd_round,\n+\t__builtin_ia32_scalefss_round): Remove builtin.\n+\t(__builtin_ia32_scalefsd_mask_round,\n+\t__builtin_ia32_scalefss_mask_round): Test new builtin.\n+\t* gcc.target/i386/sse-13.c: Ditto.\n+\t* gcc.target/i386/sse-23.c: Ditto.\n+\n 2018-02-12  Olga Makhotina  <olga.makhotina@intel.com>\n \n \t* gcc.target/i386/avx512f-vsqrtsd-1.c (_mm_mask_sqrt_round_sd)"}, {"sha": "c877f9996b31524e7739f992ef5983a6b7d62ab2", "filename": "gcc/testsuite/gcc.target/i386/avx-1.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/158061a65bf2e68e44bc2f9622be41f57b0a47d0/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/158061a65bf2e68e44bc2f9622be41f57b0a47d0/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx-1.c?ref=158061a65bf2e68e44bc2f9622be41f57b0a47d0", "patch": "@@ -287,8 +287,8 @@\n #define __builtin_ia32_rndscaless_round(A, B, C, D) __builtin_ia32_rndscaless_round(A, B, 1, 4)\n #define __builtin_ia32_scalefpd512_mask(A, B, C, D, E) __builtin_ia32_scalefpd512_mask(A, B, C, D, 8)\n #define __builtin_ia32_scalefps512_mask(A, B, C, D, E) __builtin_ia32_scalefps512_mask(A, B, C, D, 8)\n-#define __builtin_ia32_scalefsd_round(A, B, C) __builtin_ia32_scalefsd_round(A, B, 8)\n-#define __builtin_ia32_scalefss_round(A, B, C) __builtin_ia32_scalefss_round(A, B, 8)\n+#define __builtin_ia32_scalefsd_mask_round(A, B, C, D, E) __builtin_ia32_scalefsd_mask_round(A, B, C, D, 8)\n+#define __builtin_ia32_scalefss_mask_round(A, B, C, D, E) __builtin_ia32_scalefss_mask_round(A, B, C, D, 8)\n #define __builtin_ia32_scatterdiv8df(A, B, C, D, F) __builtin_ia32_scatterdiv8df(A, B, C, D, 8)\n #define __builtin_ia32_scatterdiv8di(A, B, C, D, F) __builtin_ia32_scatterdiv8di(A, B, C, D, 8)\n #define __builtin_ia32_scatterdiv16sf(A, B, C, D, F) __builtin_ia32_scatterdiv16sf(A, B, C, D, 8)"}, {"sha": "09bc5c63bb757461808caad3ddb009c4d075f82f", "filename": "gcc/testsuite/gcc.target/i386/avx512f-vscalefsd-1.c", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/158061a65bf2e68e44bc2f9622be41f57b0a47d0/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vscalefsd-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/158061a65bf2e68e44bc2f9622be41f57b0a47d0/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vscalefsd-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vscalefsd-1.c?ref=158061a65bf2e68e44bc2f9622be41f57b0a47d0", "patch": "@@ -1,14 +1,21 @@\n /* { dg-do compile } */\n /* { dg-options \"-mavx512f -O2\" } */\n /* { dg-final { scan-assembler-times \"vscalefsd\\[ \\\\t\\]+\\[^\\n\\]*\\{rn-sae\\}\\[^\\{\\n\\]*%xmm\\[0-9\\]+(?:\\n|\\[ \\\\t\\]+#)\" 1 } } */\n+/* { dg-final { scan-assembler-times \"vscalefsd\\[ \\\\t\\]+\\[^\\{\\n\\]*%xmm\\[0-9\\]+(?:\\n|\\[ \\\\t\\]+#)\" 1 } } */\n+/* { dg-final { scan-assembler-times \"vscalefsd\\[ \\\\t\\]+\\[^\\n\\]*\\{rd-sae\\}\\[^\\{\\n\\]*%xmm\\[0-9\\]+\\[^\\n\\]*%xmm\\[0-9\\]+\\[^\\n\\]*%xmm\\[0-9\\]+\\{%k\\[1-7\\]\\}(?:\\n|\\[ \\\\t\\]+#)\" 1 } } */\n+/* { dg-final { scan-assembler-times \"vscalefsd\\[ \\\\t\\]+\\[^\\n\\]*\\{rz-sae\\}\\[^\\{\\n\\]*%xmm\\[0-9\\]+\\[^\\n\\]*%xmm\\[0-9\\]+\\[^\\n\\]*%xmm\\[0-9\\]+\\{%k\\[1-7\\]\\}\\{z\\}(?:\\n|\\[ \\\\t\\]+#)\" 1 } } */\n+\n \n #include <immintrin.h>\n \n volatile __m128d x;\n+volatile __mmask8 m;\n \n void extern\n avx512f_test (void)\n {\n   x = _mm_scalef_sd (x, x);\n   x = _mm_scalef_round_sd (x, x, _MM_FROUND_TO_NEAREST_INT | _MM_FROUND_NO_EXC);\n+  x = _mm_mask_scalef_round_sd (x, m, x, x, _MM_FROUND_TO_NEG_INF | _MM_FROUND_NO_EXC);\n+  x = _mm_maskz_scalef_round_sd (m, x, x, _MM_FROUND_TO_ZERO | _MM_FROUND_NO_EXC);\n }"}, {"sha": "afe73dc5e83b2db19d97f1db4bd2278db0a9b08e", "filename": "gcc/testsuite/gcc.target/i386/avx512f-vscalefsd-2.c", "status": "modified", "additions": 27, "deletions": 1, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/158061a65bf2e68e44bc2f9622be41f57b0a47d0/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vscalefsd-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/158061a65bf2e68e44bc2f9622be41f57b0a47d0/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vscalefsd-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vscalefsd-2.c?ref=158061a65bf2e68e44bc2f9622be41f57b0a47d0", "patch": "@@ -6,6 +6,7 @@\n #include \"avx512f-check.h\"\n \n #define SIZE (128 / 64)\n+#include \"avx512f-mask-type.h\"\n \n static void\n compute_scalefsd (double *s1, double *s2, double *r)\n@@ -17,20 +18,45 @@ compute_scalefsd (double *s1, double *s2, double *r)\n void static\n avx512f_test (void)\n {\n-  union128d res1, s1, s2;\n+  union128d res1, res2, res3, res4;\n+  union128d s1, s2;\n   double res_ref[SIZE];\n+  MASK_TYPE mask = MASK_VALUE;\n   int i;\n \n   for (i = 0; i < SIZE; i++)\n     {\n       s1.a[i] = 11.5 * (i + 1);\n       s2.a[i] = 10.5 * (i + 1);\n+      res_ref[i] = 9.5 * (i + 1);\n+      res1.a[i] = DEFAULT_VALUE;\n+      res2.a[i] = DEFAULT_VALUE;\n+      res3.a[i] = DEFAULT_VALUE;\n+      res4.a[i] = DEFAULT_VALUE;\n     }\n \n   res1.x = _mm_scalef_sd (s1.x, s2.x);\n+  res2.x = _mm_scalef_round_sd (s1.x, s2.x,\n+              _MM_FROUND_TO_NEAREST_INT | _MM_FROUND_NO_EXC);\n+  res3.x = _mm_mask_scalef_round_sd (s1.x, mask, s1.x, s2.x,\n+              _MM_FROUND_TO_NEAREST_INT | _MM_FROUND_NO_EXC);\n+  res4.x = _mm_maskz_scalef_round_sd (mask, s1.x, s2.x,\n+              _MM_FROUND_TO_NEAREST_INT | _MM_FROUND_NO_EXC);\n \n   compute_scalefsd (s1.a, s2.a, res_ref);\n \n   if (check_union128d (res1, res_ref))\n     abort ();\n+  if (check_union128d (res2, res_ref))\n+    abort ();\n+\n+  MASK_MERGE (d) (res_ref, mask, 1);\n+\n+  if (check_union128d (res3, res_ref))\n+    abort ();\n+\n+  MASK_ZERO (d) (res_ref, mask, 1);\n+\n+  if (check_union128d (res4, res_ref))\n+    abort ();\n }"}, {"sha": "d1af336c26765c270ecc10e72b765d31fad2e2a5", "filename": "gcc/testsuite/gcc.target/i386/avx512f-vscalefss-1.c", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/158061a65bf2e68e44bc2f9622be41f57b0a47d0/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vscalefss-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/158061a65bf2e68e44bc2f9622be41f57b0a47d0/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vscalefss-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vscalefss-1.c?ref=158061a65bf2e68e44bc2f9622be41f57b0a47d0", "patch": "@@ -1,14 +1,20 @@\n /* { dg-do compile } */\n /* { dg-options \"-mavx512f -O2\" } */\n /* { dg-final { scan-assembler-times \"vscalefss\\[ \\\\t\\]+\\[^\\n\\]*\\{rn-sae\\}\\[^\\{\\n\\]*%xmm\\[0-9\\]+(?:\\n|\\[ \\\\t\\]+#)\" 1 } } */\n+/* { dg-final { scan-assembler-times \"vscalefss\\[ \\\\t\\]+\\[^\\{\\n\\]*%xmm\\[0-9\\]+(?:\\n|\\[ \\\\t\\]+#)\" 1 } } */\n+/* { dg-final { scan-assembler-times \"vscalefss\\[ \\\\t\\]+\\[^\\n\\]*\\{ru-sae\\}\\[^\\{\\n\\]*%xmm\\[0-9\\]+\\[^\\n\\]*%xmm\\[0-9\\]+\\[^\\n\\]*%xmm\\[0-9\\]+\\{%k\\[1-7\\]\\}(?:\\n|\\[ \\\\t\\]+#)\" 1 } } */\n+/* { dg-final { scan-assembler-times \"vscalefss\\[ \\\\t\\]+\\[^\\n\\]*\\{rz-sae\\}\\[^\\{\\n\\]*%xmm\\[0-9\\]+\\[^\\n\\]*%xmm\\[0-9\\]+\\[^\\n\\]*%xmm\\[0-9\\]+\\{%k\\[1-7\\]\\}\\{z\\}(?:\\n|\\[ \\\\t\\]+#)\" 1 } } */\n \n #include <immintrin.h>\n \n volatile __m128 x;\n+volatile __mmask8 m;\n \n void extern\n avx512f_test (void)\n {\n   x = _mm_scalef_ss (x, x);\n   x = _mm_scalef_round_ss (x, x, _MM_FROUND_TO_NEAREST_INT | _MM_FROUND_NO_EXC);\n+  x = _mm_mask_scalef_round_ss (x, m, x, x, _MM_FROUND_TO_POS_INF | _MM_FROUND_NO_EXC);\n+  x = _mm_maskz_scalef_round_ss (m, x, x, _MM_FROUND_TO_ZERO | _MM_FROUND_NO_EXC);\n }"}, {"sha": "811ff15e5e6143d240821ef39052e43a943109fc", "filename": "gcc/testsuite/gcc.target/i386/avx512f-vscalefss-2.c", "status": "modified", "additions": 27, "deletions": 1, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/158061a65bf2e68e44bc2f9622be41f57b0a47d0/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vscalefss-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/158061a65bf2e68e44bc2f9622be41f57b0a47d0/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vscalefss-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vscalefss-2.c?ref=158061a65bf2e68e44bc2f9622be41f57b0a47d0", "patch": "@@ -6,6 +6,7 @@\n #include \"avx512f-check.h\"\n \n #define SIZE (128 / 32)\n+#include \"avx512f-mask-type.h\"\n \n static void\n compute_scalefss (float *s1, float *s2, float *r)\n@@ -19,20 +20,45 @@ compute_scalefss (float *s1, float *s2, float *r)\n static void\n avx512f_test (void)\n {\n-  union128 res1, s1, s2;\n+  union128 res1, res2, res3, res4;\n+  union128 s1, s2;\n   float res_ref[SIZE];\n+  MASK_TYPE mask = MASK_VALUE;\n   int i;\n \n   for (i = 0; i < SIZE; i++)\n     {\n       s1.a[i] = 11.5 * (i + 1);\n       s2.a[i] = 10.5 * (i + 1);\n+      res_ref[i] = 9.5 * (i + 1);\n+      res1.a[i] = DEFAULT_VALUE;\n+      res2.a[i] = DEFAULT_VALUE;\n+      res3.a[i] = DEFAULT_VALUE;\n+      res4.a[i] = DEFAULT_VALUE;\n     }\n \n   res1.x = _mm_scalef_ss (s1.x, s2.x);\n+  res2.x = _mm_scalef_round_ss (s1.x, s2.x,\n+              _MM_FROUND_TO_NEAREST_INT | _MM_FROUND_NO_EXC);\n+  res3.x = _mm_mask_scalef_round_ss (s1.x, mask, s1.x, s2.x,\n+              _MM_FROUND_TO_NEAREST_INT | _MM_FROUND_NO_EXC);\n+  res4.x = _mm_maskz_scalef_round_ss (mask, s1.x, s2.x,\n+              _MM_FROUND_TO_NEAREST_INT | _MM_FROUND_NO_EXC);\n \n   compute_scalefss (s1.a, s2.a, res_ref);\n \n   if (check_union128 (res1, res_ref))\n     abort ();\n+  if (check_union128 (res2, res_ref))                                         \n+    abort ();\n+\n+  MASK_MERGE () (res_ref, mask, 1);\n+\n+  if (check_union128 (res3, res_ref))\n+    abort ();\n+\n+  MASK_ZERO () (res_ref, mask, 1);\n+\n+  if (check_union128 (res4, res_ref))\n+    abort ();\n }"}, {"sha": "b43f903086e93cc7f748877ad9725d05ebc0aac5", "filename": "gcc/testsuite/gcc.target/i386/sse-13.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/158061a65bf2e68e44bc2f9622be41f57b0a47d0/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fsse-13.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/158061a65bf2e68e44bc2f9622be41f57b0a47d0/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fsse-13.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fsse-13.c?ref=158061a65bf2e68e44bc2f9622be41f57b0a47d0", "patch": "@@ -304,8 +304,8 @@\n #define __builtin_ia32_rndscaless_round(A, B, C, D) __builtin_ia32_rndscaless_round(A, B, 1, 4)\n #define __builtin_ia32_scalefpd512_mask(A, B, C, D, E) __builtin_ia32_scalefpd512_mask(A, B, C, D, 8)\n #define __builtin_ia32_scalefps512_mask(A, B, C, D, E) __builtin_ia32_scalefps512_mask(A, B, C, D, 8)\n-#define __builtin_ia32_scalefsd_round(A, B, C) __builtin_ia32_scalefsd_round(A, B, 8)\n-#define __builtin_ia32_scalefss_round(A, B, C) __builtin_ia32_scalefss_round(A, B, 8)\n+#define __builtin_ia32_scalefsd_mask_round(A, B, C, D, E) __builtin_ia32_scalefsd_mask_round(A, B, C, D, 8)\n+#define __builtin_ia32_scalefss_mask_round(A, B, C, D, E) __builtin_ia32_scalefss_mask_round(A, B, C, D, 8)\n #define __builtin_ia32_scatterdiv8df(A, B, C, D, F) __builtin_ia32_scatterdiv8df(A, B, C, D, 8)\n #define __builtin_ia32_scatterdiv8di(A, B, C, D, F) __builtin_ia32_scatterdiv8di(A, B, C, D, 8)\n #define __builtin_ia32_scatterdiv16sf(A, B, C, D, F) __builtin_ia32_scatterdiv16sf(A, B, C, D, 8)"}, {"sha": "8f93d65f5c1518fa238ba9d86c1155bb8a440833", "filename": "gcc/testsuite/gcc.target/i386/sse-23.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/158061a65bf2e68e44bc2f9622be41f57b0a47d0/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fsse-23.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/158061a65bf2e68e44bc2f9622be41f57b0a47d0/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fsse-23.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fsse-23.c?ref=158061a65bf2e68e44bc2f9622be41f57b0a47d0", "patch": "@@ -305,8 +305,8 @@\n #define __builtin_ia32_rndscaless_round(A, B, C, D) __builtin_ia32_rndscaless_round(A, B, 1, 4)\n #define __builtin_ia32_scalefpd512_mask(A, B, C, D, E) __builtin_ia32_scalefpd512_mask(A, B, C, D, 8)\n #define __builtin_ia32_scalefps512_mask(A, B, C, D, E) __builtin_ia32_scalefps512_mask(A, B, C, D, 8)\n-#define __builtin_ia32_scalefsd_round(A, B, C) __builtin_ia32_scalefsd_round(A, B, 8)\n-#define __builtin_ia32_scalefss_round(A, B, C) __builtin_ia32_scalefss_round(A, B, 8)\n+#define __builtin_ia32_scalefsd_mask_round(A, B, C, D, E) __builtin_ia32_scalefsd_mask_round(A, B, C, D, 8)\n+#define __builtin_ia32_scalefss_mask_round(A, B, C, D, E) __builtin_ia32_scalefss_mask_round(A, B, C, D, 8)\n #define __builtin_ia32_scatterdiv8df(A, B, C, D, F) __builtin_ia32_scatterdiv8df(A, B, C, D, 8)\n #define __builtin_ia32_scatterdiv8di(A, B, C, D, F) __builtin_ia32_scatterdiv8di(A, B, C, D, 8)\n #define __builtin_ia32_scatterdiv16sf(A, B, C, D, F) __builtin_ia32_scatterdiv16sf(A, B, C, D, 8)"}]}