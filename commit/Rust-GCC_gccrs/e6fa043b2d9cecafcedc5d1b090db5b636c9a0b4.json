{"sha": "e6fa043b2d9cecafcedc5d1b090db5b636c9a0b4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTZmYTA0M2IyZDljZWNhZmNlZGM1ZDFiMDkwZGI1YjYzNmM5YTBiNA==", "commit": {"author": {"name": "Fran\u00e7ois Dumont", "email": "fdumont@gcc.gnu.org", "date": "2012-09-24T19:48:06Z"}, "committer": {"name": "Fran\u00e7ois Dumont", "email": "fdumont@gcc.gnu.org", "date": "2012-09-24T19:48:06Z"}, "message": "41975.cc: Use __uset_hashtable rather than removed __unordered_set.\n\n2012-09-24  Fran\u00e7ois Dumont  <fdumont@gcc.gnu.org>\n\n\t* testsuite/performance/23_containers/insert_erase/41975.cc: Use\n\t__uset_hashtable rather than removed __unordered_set.\n\nFrom-SVN: r191678", "tree": {"sha": "968002ca0b8beafb7cf29f8aba9676fa57e4fe3a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/968002ca0b8beafb7cf29f8aba9676fa57e4fe3a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e6fa043b2d9cecafcedc5d1b090db5b636c9a0b4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e6fa043b2d9cecafcedc5d1b090db5b636c9a0b4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e6fa043b2d9cecafcedc5d1b090db5b636c9a0b4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e6fa043b2d9cecafcedc5d1b090db5b636c9a0b4/comments", "author": null, "committer": null, "parents": [{"sha": "f08d73d161d15ee7325dab2d6b793e5d05670ebb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f08d73d161d15ee7325dab2d6b793e5d05670ebb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f08d73d161d15ee7325dab2d6b793e5d05670ebb"}], "stats": {"total": 17, "additions": 12, "deletions": 5}, "files": [{"sha": "920bd33e96ca3901c03f5f1156a6e7c685b3b750", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e6fa043b2d9cecafcedc5d1b090db5b636c9a0b4/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e6fa043b2d9cecafcedc5d1b090db5b636c9a0b4/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=e6fa043b2d9cecafcedc5d1b090db5b636c9a0b4", "patch": "@@ -1,3 +1,8 @@\n+2012-09-24  Fran\u00e7ois Dumont  <fdumont@gcc.gnu.org>\n+\n+\t* testsuite/performance/23_containers/insert_erase/41975.cc: Use\n+\t__uset_hashtable rather than removed __unordered_set.\n+\n 2012-09-23  Paolo Carlini  <paolo.carlini@oracle.com>\n \n \tRevert:"}, {"sha": "286a045d8da2dfd23c61fe6e8d0b9db68982c8a9", "filename": "libstdc++-v3/testsuite/performance/23_containers/insert_erase/41975.cc", "status": "modified", "additions": 7, "deletions": 5, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e6fa043b2d9cecafcedc5d1b090db5b636c9a0b4/libstdc%2B%2B-v3%2Ftestsuite%2Fperformance%2F23_containers%2Finsert_erase%2F41975.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e6fa043b2d9cecafcedc5d1b090db5b636c9a0b4/libstdc%2B%2B-v3%2Ftestsuite%2Fperformance%2F23_containers%2Finsert_erase%2F41975.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Fperformance%2F23_containers%2Finsert_erase%2F41975.cc?ref=e6fa043b2d9cecafcedc5d1b090db5b636c9a0b4", "patch": "@@ -40,8 +40,9 @@ namespace\n       const int nb = 200000;\n       start_counters(time, resource);\n \n-      std::__unordered_set<int, std::hash<int>, std::equal_to<int>,\n-\t\t\t   std::allocator<int>, use_cache> us;\n+      std::__uset_hashtable<int, std::hash<int>, std::equal_to<int>,\n+\t\t\t    std::allocator<int>,\n+\t\t\t    std::__uset_traits<use_cache>> us;\n       for (int i = 0; i != nb; ++i)\n \tus.insert(i);\n \n@@ -125,9 +126,10 @@ namespace\n \n       start_counters(time, resource);\n \n-      std::__unordered_set<std::string, std::hash<std::string>,\n-\t\t\t   std::equal_to<std::string>,\n-\t\t\t   std::allocator<std::string>, use_cache> us;\n+      std::__uset_hashtable<std::string, std::hash<std::string>,\n+\t\t\t    std::equal_to<std::string>,\n+\t\t\t    std::allocator<std::string>,\n+\t\t\t    std::__uset_traits<use_cache>> us;\n       for (int i = 0; i != nb; ++i)\n \tus.insert(strs[i]);\n "}]}