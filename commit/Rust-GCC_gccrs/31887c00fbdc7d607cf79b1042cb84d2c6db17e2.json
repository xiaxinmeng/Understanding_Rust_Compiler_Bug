{"sha": "31887c00fbdc7d607cf79b1042cb84d2c6db17e2", "node_id": "C_kwDOANBUbNoAKDMxODg3YzAwZmJkYzdkNjA3Y2Y3OWIxMDQyY2I4NGQyYzZkYjE3ZTI", "commit": {"author": {"name": "Philip Herron", "email": "philip.herron@embecosm.com", "date": "2022-07-07T14:05:44Z"}, "committer": {"name": "Philip Herron", "email": "philip.herron@embecosm.com", "date": "2022-07-08T11:39:26Z"}, "message": "HIR::TypeParam needs to be permissive of nullptr Type", "tree": {"sha": "7c8a8e057692377ea609f260bcb4f9516c63649d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7c8a8e057692377ea609f260bcb4f9516c63649d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/31887c00fbdc7d607cf79b1042cb84d2c6db17e2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/31887c00fbdc7d607cf79b1042cb84d2c6db17e2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/31887c00fbdc7d607cf79b1042cb84d2c6db17e2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/31887c00fbdc7d607cf79b1042cb84d2c6db17e2/comments", "author": {"login": "philberty", "id": 84585, "node_id": "MDQ6VXNlcjg0NTg1", "avatar_url": "https://avatars.githubusercontent.com/u/84585?v=4", "gravatar_id": "", "url": "https://api.github.com/users/philberty", "html_url": "https://github.com/philberty", "followers_url": "https://api.github.com/users/philberty/followers", "following_url": "https://api.github.com/users/philberty/following{/other_user}", "gists_url": "https://api.github.com/users/philberty/gists{/gist_id}", "starred_url": "https://api.github.com/users/philberty/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/philberty/subscriptions", "organizations_url": "https://api.github.com/users/philberty/orgs", "repos_url": "https://api.github.com/users/philberty/repos", "events_url": "https://api.github.com/users/philberty/events{/privacy}", "received_events_url": "https://api.github.com/users/philberty/received_events", "type": "User", "site_admin": false}, "committer": {"login": "philberty", "id": 84585, "node_id": "MDQ6VXNlcjg0NTg1", "avatar_url": "https://avatars.githubusercontent.com/u/84585?v=4", "gravatar_id": "", "url": "https://api.github.com/users/philberty", "html_url": "https://github.com/philberty", "followers_url": "https://api.github.com/users/philberty/followers", "following_url": "https://api.github.com/users/philberty/following{/other_user}", "gists_url": "https://api.github.com/users/philberty/gists{/gist_id}", "starred_url": "https://api.github.com/users/philberty/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/philberty/subscriptions", "organizations_url": "https://api.github.com/users/philberty/orgs", "repos_url": "https://api.github.com/users/philberty/repos", "events_url": "https://api.github.com/users/philberty/events{/privacy}", "received_events_url": "https://api.github.com/users/philberty/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2128789a386d098eb2068514baf3c85782c6a74e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2128789a386d098eb2068514baf3c85782c6a74e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2128789a386d098eb2068514baf3c85782c6a74e"}], "stats": {"total": 16, "additions": 11, "deletions": 5}, "files": [{"sha": "1fcecb828ad1fe012e1714d8bf9b0ea7e9d5efc0", "filename": "gcc/rust/hir/tree/rust-hir-item.h", "status": "modified", "additions": 11, "deletions": 5, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/31887c00fbdc7d607cf79b1042cb84d2c6db17e2/gcc%2Frust%2Fhir%2Ftree%2Frust-hir-item.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/31887c00fbdc7d607cf79b1042cb84d2c6db17e2/gcc%2Frust%2Fhir%2Ftree%2Frust-hir-item.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Fhir%2Ftree%2Frust-hir-item.h?ref=31887c00fbdc7d607cf79b1042cb84d2c6db17e2", "patch": "@@ -75,9 +75,12 @@ class TypeParam : public GenericParam\n   // Copy constructor uses clone\n   TypeParam (TypeParam const &other)\n     : GenericParam (other.mappings), outer_attr (other.outer_attr),\n-      type_representation (other.type_representation),\n-      type (other.type->clone_type ()), locus (other.locus)\n+      type_representation (other.type_representation), locus (other.locus)\n   {\n+    // guard to prevent null pointer dereference\n+    if (other.type != nullptr)\n+      type = other.type->clone_type ();\n+\n     type_param_bounds.reserve (other.type_param_bounds.size ());\n     for (const auto &e : other.type_param_bounds)\n       type_param_bounds.push_back (e->clone_type_param_bound ());\n@@ -87,19 +90,22 @@ class TypeParam : public GenericParam\n   TypeParam &operator= (TypeParam const &other)\n   {\n     type_representation = other.type_representation;\n-    // type_param_bounds = other.type_param_bounds;\n-    type = other.type->clone_type ();\n     outer_attr = other.outer_attr;\n     locus = other.locus;\n     mappings = other.mappings;\n \n+    // guard to prevent null pointer dereference\n+    if (other.type != nullptr)\n+      type = other.type->clone_type ();\n+    else\n+      type = nullptr;\n+\n     type_param_bounds.reserve (other.type_param_bounds.size ());\n     for (const auto &e : other.type_param_bounds)\n       type_param_bounds.push_back (e->clone_type_param_bound ());\n \n     return *this;\n   }\n-\n   // move constructors\n   TypeParam (TypeParam &&other) = default;\n   TypeParam &operator= (TypeParam &&other) = default;"}]}