{"sha": "301452153700ff8c81d28e58a9e10117655b6a00", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzAxNDUyMTUzNzAwZmY4YzgxZDI4ZTU4YTllMTAxMTc2NTViNmEwMA==", "commit": {"author": {"name": "Kaveh R. Ghazi", "email": "ghazi@caip.rutgers.edu", "date": "1999-10-28T10:53:12Z"}, "committer": {"name": "Kaveh Ghazi", "email": "ghazi@gcc.gnu.org", "date": "1999-10-28T10:53:12Z"}, "message": "c-common.c (check_format_info): Avoid non-literal format string warnings when `first_arg_num' is zero.\n\n       * c-common.c (check_format_info): Avoid non-literal format string\n       warnings when `first_arg_num' is zero.\n\nFrom-SVN: r30240", "tree": {"sha": "9d365ca91c18b8d79fd064f558e97fee4360397f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9d365ca91c18b8d79fd064f558e97fee4360397f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/301452153700ff8c81d28e58a9e10117655b6a00", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/301452153700ff8c81d28e58a9e10117655b6a00", "html_url": "https://github.com/Rust-GCC/gccrs/commit/301452153700ff8c81d28e58a9e10117655b6a00", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/301452153700ff8c81d28e58a9e10117655b6a00/comments", "author": null, "committer": null, "parents": [{"sha": "4404ce281deeb8bff4464e6987fc649510c8c639", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4404ce281deeb8bff4464e6987fc649510c8c639", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4404ce281deeb8bff4464e6987fc649510c8c639"}], "stats": {"total": 17, "additions": 15, "deletions": 2}, "files": [{"sha": "66642cdc8a0409055c8cf375aebc7482c88d7960", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/301452153700ff8c81d28e58a9e10117655b6a00/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/301452153700ff8c81d28e58a9e10117655b6a00/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=301452153700ff8c81d28e58a9e10117655b6a00", "patch": "@@ -1,3 +1,8 @@\n+Thu Oct 28 06:47:32 1999  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n+\n+\t* c-common.c (check_format_info): Avoid non-literal format string\n+\twarnings when `first_arg_num' is zero.\n+\n Thu Oct 28 12:28:48 1999  Bernd Schmidt  <bernds@cygnus.co.uk>\n \n \t* rtl.texi: Delete explicit Prev, Up and Next entries in \"@node\"s."}, {"sha": "8b2f69c5ab462658c9268370722aacb708f32530", "filename": "gcc/c-common.c", "status": "modified", "additions": 10, "deletions": 2, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/301452153700ff8c81d28e58a9e10117655b6a00/gcc%2Fc-common.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/301452153700ff8c81d28e58a9e10117655b6a00/gcc%2Fc-common.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-common.c?ref=301452153700ff8c81d28e58a9e10117655b6a00", "patch": "@@ -1491,15 +1491,23 @@ check_format_info (info, params)\n     {\n       /* The user may get multiple warnings if the supplied argument\n \t isn't even a string pointer.  */\n-      warning (\"format not a string literal, argument types not checked\");\n+      /* Functions taking a va_list normally pass a non-literal format\n+\t string.  These functions typically are declared with\n+\t first_arg_num == 0, so avoid warning in those cases.  */\n+      if (info->first_arg_num != 0)\n+\twarning (\"format not a string literal, argument types not checked\");\n       return;\n     }\n   format_tree = TREE_OPERAND (format_tree, 0);\n   if (TREE_CODE (format_tree) != STRING_CST)\n     {\n       /* The user may get multiple warnings if the supplied argument\n \t isn't even a string pointer.  */\n-      warning (\"format not a string literal, argument types not checked\");\n+      /* Functions taking a va_list normally pass a non-literal format\n+\t string.  These functions typically are declared with\n+\t first_arg_num == 0, so avoid warning in those cases.  */\n+      if (info->first_arg_num != 0)\n+\twarning (\"format not a string literal, argument types not checked\");\n       return;\n     }\n   format_chars = TREE_STRING_POINTER (format_tree);"}]}