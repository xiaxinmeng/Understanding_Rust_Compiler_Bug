{"sha": "d05db9ccfa01797a859763d2124dbe9de58bffcd", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDA1ZGI5Y2NmYTAxNzk3YTg1OTc2M2QyMTI0ZGJlOWRlNThiZmZjZA==", "commit": {"author": {"name": "David Billinghurst", "email": "billingd@gcc.gnu.org", "date": "2009-05-15T09:20:01Z"}, "committer": {"name": "David Billinghurst", "email": "billingd@gcc.gnu.org", "date": "2009-05-15T09:20:01Z"}, "message": "num_xbound_fun.cc: Replace non-standard macro M_PI with constant pi.\n\n2009-05-15  David Billinghurst <billingd@gcc.gnu.org>\n\n\t* testsuite/26_numerics/random/discrete_distribution/cons/num_xbound_fun.cc:\n\tReplace non-standard macro M_PI with constant pi.\n\t* testsuite/26_numerics/random/piecewise_constant_distribution/cons/initlist_fun.cc:\n\tLikewise\n\t* testsuite/26_numerics/random/piecewise_constant_distribution/cons/num_xbound_fun.cc:\n\tLikewise\n\t* testsuite/26_numerics/random/piecewise_linear_distribution/cons/initlist_fun.cc:\n\tLikewise\n\t* testsuite/26_numerics/random/piecewise_linear_distribution/cons/num_xbound_fun.cc:\n\tLikewise\n\nFrom-SVN: r147564", "tree": {"sha": "2c32999a7bd66b0a70e25cdd1656d6327531a664", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2c32999a7bd66b0a70e25cdd1656d6327531a664"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d05db9ccfa01797a859763d2124dbe9de58bffcd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d05db9ccfa01797a859763d2124dbe9de58bffcd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d05db9ccfa01797a859763d2124dbe9de58bffcd", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d05db9ccfa01797a859763d2124dbe9de58bffcd/comments", "author": null, "committer": null, "parents": [{"sha": "84fb43a1a4480e7a0a106fbe38144d1af50b476a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/84fb43a1a4480e7a0a106fbe38144d1af50b476a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/84fb43a1a4480e7a0a106fbe38144d1af50b476a"}], "stats": {"total": 43, "additions": 33, "deletions": 10}, "files": [{"sha": "f37e28a5efaf036aa3704c25231f734296cca62a", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d05db9ccfa01797a859763d2124dbe9de58bffcd/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d05db9ccfa01797a859763d2124dbe9de58bffcd/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=d05db9ccfa01797a859763d2124dbe9de58bffcd", "patch": "@@ -1,3 +1,16 @@\n+2009-05-15  David Billinghurst <billingd@gcc.gnu.org>\n+\n+\t* testsuite/26_numerics/random/discrete_distribution/cons/num_xbound_fun.cc:\n+\tReplace non-standard macro M_PI with constant pi.\n+\t* testsuite/26_numerics/random/piecewise_constant_distribution/cons/initlist_fun.cc:\n+\tLikewise\n+\t* testsuite/26_numerics/random/piecewise_constant_distribution/cons/num_xbound_fun.cc:\n+\tLikewise\n+\t* testsuite/26_numerics/random/piecewise_linear_distribution/cons/initlist_fun.cc:\n+\tLikewise\n+\t* testsuite/26_numerics/random/piecewise_linear_distribution/cons/num_xbound_fun.cc:\n+\tLikewise \n+\n 2009-05-14  Paolo Carlini  <paolo.carlini@oracle.com>\n \n \tPR libstdc++/40123"}, {"sha": "49bb2b330619f9451d192346442f84a84b0e3b5a", "filename": "libstdc++-v3/testsuite/26_numerics/random/discrete_distribution/cons/num_xbound_fun.cc", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d05db9ccfa01797a859763d2124dbe9de58bffcd/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Fdiscrete_distribution%2Fcons%2Fnum_xbound_fun.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d05db9ccfa01797a859763d2124dbe9de58bffcd/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Fdiscrete_distribution%2Fcons%2Fnum_xbound_fun.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Fdiscrete_distribution%2Fcons%2Fnum_xbound_fun.cc?ref=d05db9ccfa01797a859763d2124dbe9de58bffcd", "patch": "@@ -39,8 +39,10 @@ struct cosine_distribution\n         return 0.0;\n       else if (x - _M_x0 > _M_lambda / 4)\n         return 0.0;\n-      else\n-        return std::cos(2 * M_PI * (x - _M_x0) / _M_lambda);\n+      else {\n+        const double pi = 3.1415926535897932384626433832795029L;\n+        return std::cos(2 * pi * (x - _M_x0) / _M_lambda);\n+      }\n     }\n \n private:"}, {"sha": "54fadb9194d4f64560c8827e30a464dbffa1e2c2", "filename": "libstdc++-v3/testsuite/26_numerics/random/piecewise_constant_distribution/cons/initlist_fun.cc", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d05db9ccfa01797a859763d2124dbe9de58bffcd/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Fpiecewise_constant_distribution%2Fcons%2Finitlist_fun.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d05db9ccfa01797a859763d2124dbe9de58bffcd/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Fpiecewise_constant_distribution%2Fcons%2Finitlist_fun.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Fpiecewise_constant_distribution%2Fcons%2Finitlist_fun.cc?ref=d05db9ccfa01797a859763d2124dbe9de58bffcd", "patch": "@@ -39,8 +39,10 @@ struct cosine_distribution\n         return 0.0;\n       else if (x - _M_x0 > _M_lambda / 4)\n         return 0.0;\n-      else\n-        return std::cos(2 * M_PI * (x - _M_x0) / _M_lambda);\n+      else {\n+        const double pi = 3.1415926535897932384626433832795029L;\n+        return std::cos(2 * pi * (x - _M_x0) / _M_lambda);\n+      }\n     }\n \n private:"}, {"sha": "30a733ce6215f702e276aeb50350d74f26e5b54b", "filename": "libstdc++-v3/testsuite/26_numerics/random/piecewise_constant_distribution/cons/num_xbound_fun.cc", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d05db9ccfa01797a859763d2124dbe9de58bffcd/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Fpiecewise_constant_distribution%2Fcons%2Fnum_xbound_fun.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d05db9ccfa01797a859763d2124dbe9de58bffcd/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Fpiecewise_constant_distribution%2Fcons%2Fnum_xbound_fun.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Fpiecewise_constant_distribution%2Fcons%2Fnum_xbound_fun.cc?ref=d05db9ccfa01797a859763d2124dbe9de58bffcd", "patch": "@@ -39,8 +39,10 @@ struct cosine_distribution\n         return 0.0;\n       else if (x - _M_x0 > _M_lambda / 4)\n         return 0.0;\n-      else\n-        return std::cos(2 * M_PI * (x - _M_x0) / _M_lambda);\n+      else {\n+        const double pi = 3.1415926535897932384626433832795029L;\n+        return std::cos(2 * pi * (x - _M_x0) / _M_lambda);\n+      }\n     }\n \n private:"}, {"sha": "f1b24ea91496909de35c720e7491283c63e880bd", "filename": "libstdc++-v3/testsuite/26_numerics/random/piecewise_linear_distribution/cons/initlist_fun.cc", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d05db9ccfa01797a859763d2124dbe9de58bffcd/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Fpiecewise_linear_distribution%2Fcons%2Finitlist_fun.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d05db9ccfa01797a859763d2124dbe9de58bffcd/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Fpiecewise_linear_distribution%2Fcons%2Finitlist_fun.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Fpiecewise_linear_distribution%2Fcons%2Finitlist_fun.cc?ref=d05db9ccfa01797a859763d2124dbe9de58bffcd", "patch": "@@ -39,8 +39,10 @@ struct cosine_distribution\n         return 0.0;\n       else if (x - _M_x0 > _M_lambda / 4)\n         return 0.0;\n-      else\n-        return std::cos(2 * M_PI * (x - _M_x0) / _M_lambda);\n+      else {\n+        const double pi = 3.1415926535897932384626433832795029L;\n+        return std::cos(2 * pi * (x - _M_x0) / _M_lambda);\n+      }\n     }\n \n private:"}, {"sha": "f22b26e5278b51bdcd4536af6d6036c1dd40253d", "filename": "libstdc++-v3/testsuite/26_numerics/random/piecewise_linear_distribution/cons/num_xbound_fun.cc", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d05db9ccfa01797a859763d2124dbe9de58bffcd/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Fpiecewise_linear_distribution%2Fcons%2Fnum_xbound_fun.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d05db9ccfa01797a859763d2124dbe9de58bffcd/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Fpiecewise_linear_distribution%2Fcons%2Fnum_xbound_fun.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Fpiecewise_linear_distribution%2Fcons%2Fnum_xbound_fun.cc?ref=d05db9ccfa01797a859763d2124dbe9de58bffcd", "patch": "@@ -39,8 +39,10 @@ struct cosine_distribution\n         return 0.0;\n       else if (x - _M_x0 > _M_lambda / 4)\n         return 0.0;\n-      else\n-        return std::cos(2 * M_PI * (x - _M_x0) / _M_lambda);\n+      else {\n+        const double pi = 3.1415926535897932384626433832795029L;\n+        return std::cos(2 * pi * (x - _M_x0) / _M_lambda);\n+      }\n     }\n \n private:"}]}