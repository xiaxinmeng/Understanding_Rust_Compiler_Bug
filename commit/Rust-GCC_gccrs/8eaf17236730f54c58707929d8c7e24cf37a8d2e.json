{"sha": "8eaf17236730f54c58707929d8c7e24cf37a8d2e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGVhZjE3MjM2NzMwZjU0YzU4NzA3OTI5ZDhjN2UyNGNmMzdhOGQyZQ==", "commit": {"author": {"name": "Robert Dewar", "email": "dewar@adacore.com", "date": "2009-04-24T13:22:53Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2009-04-24T13:22:53Z"}, "message": "prj-env.adb, [...]: Minor reformatting.\n\n2009-04-24  Robert Dewar  <dewar@adacore.com>\n\n\t* prj-env.adb, prj-proc.adb, prj.adb, prj.ads,\n\trtsfind.adb: Minor reformatting.\n\tMinor code reorganization\n\nFrom-SVN: r146717", "tree": {"sha": "b9f1dbc834be7a49f82b3584a7de1fa041c6e5fd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b9f1dbc834be7a49f82b3584a7de1fa041c6e5fd"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8eaf17236730f54c58707929d8c7e24cf37a8d2e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8eaf17236730f54c58707929d8c7e24cf37a8d2e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8eaf17236730f54c58707929d8c7e24cf37a8d2e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8eaf17236730f54c58707929d8c7e24cf37a8d2e/comments", "author": null, "committer": null, "parents": [{"sha": "879a4a01de95771d3f6d4f643a0fa0dbd345bda2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/879a4a01de95771d3f6d4f643a0fa0dbd345bda2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/879a4a01de95771d3f6d4f643a0fa0dbd345bda2"}], "stats": {"total": 147, "additions": 90, "deletions": 57}, "files": [{"sha": "df3650ff6f4f4903970eae781b20482d6fd635c1", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8eaf17236730f54c58707929d8c7e24cf37a8d2e/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8eaf17236730f54c58707929d8c7e24cf37a8d2e/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=8eaf17236730f54c58707929d8c7e24cf37a8d2e", "patch": "@@ -1,3 +1,9 @@\n+2009-04-24  Robert Dewar  <dewar@adacore.com>\n+\n+\t* prj-env.adb, prj-proc.adb, prj.adb, prj.ads,\n+\trtsfind.adb: Minor reformatting.\n+\tMinor code reorganization\n+\n 2009-04-24  Arnaud Charlet  <charlet@adacore.com>\n \n \t* mlib-prj.adb: Use friendlier english identifier."}, {"sha": "decd68832e0590ca6202efb64c439e81d642b473", "filename": "gcc/ada/prj-env.adb", "status": "modified", "additions": 15, "deletions": 8, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8eaf17236730f54c58707929d8c7e24cf37a8d2e/gcc%2Fada%2Fprj-env.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8eaf17236730f54c58707929d8c7e24cf37a8d2e/gcc%2Fada%2Fprj-env.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-env.adb?ref=8eaf17236730f54c58707929d8c7e24cf37a8d2e", "patch": "@@ -155,10 +155,10 @@ package body Prj.Env is\n       procedure Add (Project : Project_Id; Dummy : in out Boolean) is\n          pragma Unreferenced (Dummy);\n          Path : constant Path_Name_Type :=\n-           Get_Object_Directory\n-             (In_Tree, Project,\n-              Including_Libraries => Including_Libraries,\n-              Only_If_Ada         => False);\n+                  Get_Object_Directory\n+                    (In_Tree, Project,\n+                     Including_Libraries => Including_Libraries,\n+                     Only_If_Ada         => False);\n       begin\n          if Path /= No_Path then\n             Add_To_Path (Get_Name_String (Path), In_Tree);\n@@ -1323,7 +1323,9 @@ package body Prj.Env is\n \n       procedure For_Project (Prj : Project_Id; Dummy : in out Integer) is\n          pragma Unreferenced (Dummy);\n+\n          Data : Project_Data renames In_Tree.Projects.Table (Prj);\n+\n       begin\n          --  ??? Set_Ada_Paths has a different behavior for library project\n          --  files, should we have the same ?\n@@ -1361,6 +1363,7 @@ package body Prj.Env is\n \n       procedure For_Project (Prj : Project_Id; Dummy : in out Integer) is\n          pragma Unreferenced (Dummy);\n+\n          Data       : Project_Data renames In_Tree.Projects.Table (Prj);\n          Current    : String_List_Id := Data.Source_Dirs;\n          The_String : String_Element;\n@@ -1656,6 +1659,7 @@ package body Prj.Env is\n      (Project             : Project_Id;\n       In_Tree             : Project_Tree_Ref;\n       Including_Libraries : Boolean)\n+\n    is\n       Source_FD : File_Descriptor := Invalid_FD;\n       Object_FD : File_Descriptor := Invalid_FD;\n@@ -1678,14 +1682,17 @@ package body Prj.Env is\n \n       procedure Recursive_Add (Project : Project_Id; Dummy : in out Boolean) is\n          pragma Unreferenced (Dummy);\n+\n          Data : constant Project_Data := In_Tree.Projects.Table (Project);\n          Path : Path_Name_Type;\n+\n       begin\n          --  ??? This is almost the equivalent of For_All_Source_Dirs\n+\n          if Process_Source_Dirs then\n \n-            --  Add to path all source directories of this project if\n-            --  there are Ada sources.\n+            --  Add to path all source directories of this project if there are\n+            --  Ada sources.\n \n             if Has_Ada_Sources (In_Tree.Projects.Table (Project)) then\n                Add_To_Source_Path (Data.Source_Dirs, In_Tree);\n@@ -1711,8 +1718,8 @@ package body Prj.Env is\n    --  Start of processing for Set_Ada_Paths\n \n    begin\n-      --  If it is the first time we call this procedure for\n-      --  this project, compute the source path and/or the object path.\n+      --  If it is the first time we call this procedure for this project,\n+      --  compute the source path and/or the object path.\n \n       if In_Tree.Projects.Table (Project).Include_Path_File = No_Path then\n          Process_Source_Dirs := True;"}, {"sha": "03d5220b5626c2001771b1b40a8ed52985a54892", "filename": "gcc/ada/prj-proc.adb", "status": "modified", "additions": 28, "deletions": 26, "changes": 54, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8eaf17236730f54c58707929d8c7e24cf37a8d2e/gcc%2Fada%2Fprj-proc.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8eaf17236730f54c58707929d8c7e24cf37a8d2e/gcc%2Fada%2Fprj-proc.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-proc.adb?ref=8eaf17236730f54c58707929d8c7e24cf37a8d2e", "patch": "@@ -281,8 +281,10 @@ package body Prj.Proc is\n \n       procedure Check_All_Projects is new\n         For_Every_Project_Imported (Recursive_Check_Data, Recursive_Check);\n+\n       Data : Recursive_Check_Data :=\n         (In_Tree, Dir'Unchecked_Access, When_No_Sources);\n+\n    begin\n       Check_All_Projects (Project, In_Tree, Data, Imported_First => True);\n \n@@ -333,11 +335,11 @@ package body Prj.Proc is\n       Naming_Restricted : Boolean;\n       In_Tree           : Project_Tree_Ref)\n    is\n-      V1  : Variable_Id := From.Attributes;\n-      V2  : Variable_Id := No_Variable;\n+      V1  : Variable_Id;\n+      V2  : Variable_Id      := No_Variable;\n       Var : Variable;\n-      A1  : Array_Id := From.Arrays;\n-      A2  : Array_Id := No_Array;\n+      A1  : Array_Id;\n+      A2  : Array_Id         := No_Array;\n       Arr : Array_Data;\n       E1  : Array_Element_Id;\n       E2  : Array_Element_Id := No_Array_Element;\n@@ -351,6 +353,7 @@ package body Prj.Proc is\n \n       --  First single attributes\n \n+      V1 := From.Attributes;\n       while V1 /= No_Variable loop\n \n          --  Copy the attribute\n@@ -384,16 +387,16 @@ package body Prj.Proc is\n \n       --  Then the associated array attributes\n \n+      A1 := From.Arrays;\n       while A1 /= No_Array loop\n-\n          Arr := In_Tree.Arrays.Table (A1);\n          A1  := Arr.Next;\n \n          if not Naming_Restricted or else\n            (Arr.Name /= Snames.Name_Body\n-            and then Arr.Name /= Snames.Name_Spec\n-            and then Arr.Name /= Snames.Name_Implementation\n-            and then Arr.Name /= Snames.Name_Specification)\n+             and then Arr.Name /= Snames.Name_Spec\n+             and then Arr.Name /= Snames.Name_Implementation\n+             and then Arr.Name /= Snames.Name_Specification)\n          then\n             --  Remove the Next component\n \n@@ -530,22 +533,21 @@ package body Prj.Proc is\n                      end if;\n \n                      Last := String_Element_Table.Last\n-                       (In_Tree.String_Elements);\n+                               (In_Tree.String_Elements);\n+\n                      In_Tree.String_Elements.Table (Last) :=\n-                       (Value    =>\n-                          String_Value_Of\n-                            (The_Current_Term,\n-                             From_Project_Node_Tree),\n-                        Index    =>\n-                          Source_Index_Of\n-                            (The_Current_Term, From_Project_Node_Tree),\n+                       (Value         => String_Value_Of\n+                                           (The_Current_Term,\n+                                            From_Project_Node_Tree),\n+                        Index         => Source_Index_Of\n+                                           (The_Current_Term,\n+                                            From_Project_Node_Tree),\n                         Display_Value => No_Name,\n-                        Location      =>\n-                          Location_Of\n-                            (The_Current_Term,\n-                             From_Project_Node_Tree),\n-                        Flag     => False,\n-                        Next     => Nil_String);\n+                        Location      => Location_Of\n+                                           (The_Current_Term,\n+                                            From_Project_Node_Tree),\n+                        Flag          => False,\n+                        Next          => Nil_String);\n                end case;\n \n             when N_Literal_String_List =>\n@@ -561,8 +563,8 @@ package body Prj.Proc is\n                begin\n                   if Present (String_Node) then\n \n-                     --  If String_Node is nil, it is an empty list,\n-                     --  there is nothing to do\n+                     --  If String_Node is nil, it is an empty list, there is\n+                     --  nothing to do\n \n                      Value := Expression\n                        (Project                => Project,\n@@ -579,8 +581,8 @@ package body Prj.Proc is\n \n                      if Result.Values = Nil_String then\n \n-                        --  This literal string list is the first term\n-                        --  in a string list expression\n+                        --  This literal string list is the first term in a\n+                        --  string list expression\n \n                         Result.Values :=\n                           String_Element_Table.Last (In_Tree.String_Elements);"}, {"sha": "ab1439dd38a20af73d9ad20cbc234a9a655bbd86", "filename": "gcc/ada/prj.adb", "status": "modified", "additions": 36, "deletions": 18, "changes": 54, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8eaf17236730f54c58707929d8c7e24cf37a8d2e/gcc%2Fada%2Fprj.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8eaf17236730f54c58707929d8c7e24cf37a8d2e/gcc%2Fada%2Fprj.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj.adb?ref=8eaf17236730f54c58707929d8c7e24cf37a8d2e", "patch": "@@ -498,9 +498,9 @@ package body Prj is\n    --------------------------------\n \n    procedure For_Every_Project_Imported\n-     (By         : Project_Id;\n-      In_Tree    : Project_Tree_Ref;\n-      With_State : in out State;\n+     (By             : Project_Id;\n+      In_Tree        : Project_Tree_Ref;\n+      With_State     : in out State;\n       Imported_First : Boolean := False)\n    is\n       use Project_Boolean_Htable;\n@@ -517,6 +517,7 @@ package body Prj is\n       procedure Recursive_Check (Project : Project_Id) is\n          Data : Project_Data renames In_Tree.Projects.Table (Project);\n          List : Project_List;\n+\n       begin\n          if not Get (Seen, Project) then\n             Set (Seen, Project, True);\n@@ -1204,12 +1205,14 @@ package body Prj is\n    ---------------------\n \n    function Has_Ada_Sources (Data : Project_Data) return Boolean is\n-      Lang : Language_Ptr := Data.Languages;\n+      Lang : Language_Ptr;\n+\n    begin\n       if Data.Ada_Sources /= Nil_String then\n          return True;\n       end if;\n \n+      Lang := Data.Languages;\n       while Lang /= No_Language_Index loop\n          if Lang.Name = Name_Ada then\n             return Lang.First_Source /= No_Source;\n@@ -1225,14 +1228,17 @@ package body Prj is\n    -------------------------\n \n    function Has_Foreign_Sources (Data : Project_Data) return Boolean is\n-      Lang : Language_Ptr := Data.Languages;\n+      Lang : Language_Ptr;\n+\n    begin\n+      Lang := Data.Languages;\n       while Lang /= No_Language_Index loop\n          if Lang.Name /= Name_Ada\n            and then Lang.First_Source /= No_Source\n          then\n             return True;\n          end if;\n+\n          Lang := Lang.Next;\n       end loop;\n \n@@ -1245,10 +1251,10 @@ package body Prj is\n \n    function Contains_ALI_Files (Dir : Path_Name_Type) return Boolean is\n       Dir_Name : constant String := Get_Name_String (Dir);\n-      Direct : Dir_Type;\n-      Name   : String (1 .. 1_000);\n-      Last   : Natural;\n-      Result : Boolean := False;\n+      Direct   : Dir_Type;\n+      Name     : String (1 .. 1_000);\n+      Last     : Natural;\n+      Result   : Boolean := False;\n \n    begin\n       Open (Direct, Dir_Name);\n@@ -1267,8 +1273,8 @@ package body Prj is\n       return Result;\n \n    exception\n-      --  If there is any problem, close the directory if open and return\n-      --  True; the library directory will be added to the path.\n+      --  If there is any problem, close the directory if open and return True.\n+      --  The library directory will be added to the path.\n \n       when others =>\n          if Is_Open (Direct) then\n@@ -1289,11 +1295,12 @@ package body Prj is\n       Only_If_Ada         : Boolean := False) return Path_Name_Type\n    is\n       Data : Project_Data renames In_Tree.Projects.Table (Project);\n+\n    begin\n       if (Data.Library and Including_Libraries)\n         or else\n           (Data.Object_Directory /= No_Path_Information\n-           and then (not Including_Libraries or else not Data.Library))\n+            and then (not Including_Libraries or else not Data.Library))\n       then\n          --  For a library project, add the library ALI directory if there is\n          --  no object directory or if the library ALI directory contains ALI\n@@ -1316,10 +1323,12 @@ package body Prj is\n \n          elsif not Data.Virtual then\n             declare\n-               Add_Object_Dir : Boolean    := not Only_If_Ada;\n-               Prj            : Project_Id := Project;\n+               Add_Object_Dir : Boolean;\n+               Prj            : Project_Id;\n \n             begin\n+               Add_Object_Dir := not Only_If_Ada;\n+               Prj := Project;\n                while not Add_Object_Dir and then Prj /= No_Project loop\n                   if Has_Ada_Sources (In_Tree.Projects.Table (Prj)) then\n                      Add_Object_Dir := True;\n@@ -1334,6 +1343,7 @@ package body Prj is\n             end;\n          end if;\n       end if;\n+\n       return No_Path;\n    end Get_Object_Directory;\n \n@@ -1342,10 +1352,13 @@ package body Prj is\n    -----------------------------------\n \n    function Ultimate_Extending_Project_Of\n-     (Proj : Project_Id; In_Tree : Project_Tree_Ref) return Project_Id\n+     (Proj    : Project_Id;\n+      In_Tree : Project_Tree_Ref) return Project_Id\n    is\n-      Prj : Project_Id := Proj;\n+      Prj : Project_Id;\n+\n    begin\n+      Prj := Proj;\n       while In_Tree.Projects.Table (Prj).Extended_By /= No_Project loop\n          Prj := In_Tree.Projects.Table (Prj).Extended_By;\n       end loop;\n@@ -1373,8 +1386,10 @@ package body Prj is\n \n       procedure Add_To_List (Prj : Project_Id) is\n          Element : constant Project_Element :=\n-           (Prj, In_Tree.Projects.Table (Project).All_Imported_Projects);\n-         List : Project_List;\n+                     (Prj,\n+                      In_Tree.Projects.Table (Project).All_Imported_Projects);\n+         List    : Project_List;\n+\n       begin\n          --  Check that the project is not already in the list. We know the one\n          --  passed to Recursive_Add have never been visited before, but the\n@@ -1402,9 +1417,12 @@ package body Prj is\n \n       procedure Recursive_Add (Prj : Project_Id; Dummy : in out Boolean) is\n          pragma Unreferenced (Dummy);\n+\n          Prj2    : Project_Id;\n+\n       begin\n          --  A project is not importing itself\n+\n          if Project /= Prj then\n             Prj2 := Ultimate_Extending_Project_Of (Prj, In_Tree);\n             Add_To_List (Prj2);"}, {"sha": "c86db3ef7fed951cd04eb3be54a7e98851cad37f", "filename": "gcc/ada/prj.ads", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8eaf17236730f54c58707929d8c7e24cf37a8d2e/gcc%2Fada%2Fprj.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8eaf17236730f54c58707929d8c7e24cf37a8d2e/gcc%2Fada%2Fprj.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj.ads?ref=8eaf17236730f54c58707929d8c7e24cf37a8d2e", "patch": "@@ -1527,9 +1527,9 @@ package Prj is\n         (Project    : Project_Id;\n          With_State : in out State);\n    procedure For_Every_Project_Imported\n-     (By         : Project_Id;\n-      In_Tree    : Project_Tree_Ref;\n-      With_State : in out State;\n+     (By             : Project_Id;\n+      In_Tree        : Project_Tree_Ref;\n+      With_State     : in out State;\n       Imported_First : Boolean := False);\n    --  Call Action for each project imported directly or indirectly by project\n    --  By, as well as extended projects."}, {"sha": "7dbd135e8751cd7e82a735ef72d84ce4f165b9d2", "filename": "gcc/ada/rtsfind.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8eaf17236730f54c58707929d8c7e24cf37a8d2e/gcc%2Fada%2Frtsfind.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8eaf17236730f54c58707929d8c7e24cf37a8d2e/gcc%2Fada%2Frtsfind.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Frtsfind.adb?ref=8eaf17236730f54c58707929d8c7e24cf37a8d2e", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2008, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2009, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -1381,7 +1381,7 @@ package body Rtsfind is\n         Name_Modular_IO     => Ada_Wide_Wide_Text_IO_Modular_IO);\n \n    begin\n-      --  Nothing to do if name is not identifier or a selected component\n+      --  Nothing to do if name is not an identifier or a selected component\n       --  whose selector_name is not an identifier.\n \n       if Nkind (Nam) = N_Identifier then"}]}