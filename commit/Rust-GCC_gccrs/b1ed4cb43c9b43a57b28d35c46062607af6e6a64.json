{"sha": "b1ed4cb43c9b43a57b28d35c46062607af6e6a64", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjFlZDRjYjQzYzliNDNhNTdiMjhkMzVjNDYwNjI2MDdhZjZlNmE2NA==", "commit": {"author": {"name": "Manuel L\u00f3pez-Ib\u00e1\u00f1ez", "email": "manu@gcc.gnu.org", "date": "2007-01-02T17:33:25Z"}, "committer": {"name": "Manuel L\u00f3pez-Ib\u00e1\u00f1ez", "email": "manu@gcc.gnu.org", "date": "2007-01-02T17:33:25Z"}, "message": "re PR middle-end/7651 (Define -Wextra strictly in terms of other warning flags)\n\n2007-01-02  Manuel Lopez-Ibanez  <manu@gcc.gnu.org>\n\n\tPR middle-end/7651\n\t* c.opt (Wold-style-declaration): New.\n\t* doc/invoke.texi (C-only Warning Options): New.\n\t(Wold-style-declaration): Document it.\n\t(Wextra): Enabled by -Wextra.\n\t* c-opts.c (c_common_post_options): Enabled by -Wextra.\n\t* c-decl.c (declspecs_add_scspec): Replace -Wextra with\n\t-Wold-style-declaration.\n\ntestsuite/\n\t* gcc.dg/declspec-3.c: Replace -W with -Wold-style-declaration.\n\t* gcc.dg/declspec-3-Wextra.c: New.\n\t* gcc.dg/declspec-3-no.c: New\n\nFrom-SVN: r120347", "tree": {"sha": "2b0687af1952de91d3b3f408b09402cfbbfa1bba", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2b0687af1952de91d3b3f408b09402cfbbfa1bba"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b1ed4cb43c9b43a57b28d35c46062607af6e6a64", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b1ed4cb43c9b43a57b28d35c46062607af6e6a64", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b1ed4cb43c9b43a57b28d35c46062607af6e6a64", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b1ed4cb43c9b43a57b28d35c46062607af6e6a64/comments", "author": null, "committer": null, "parents": [{"sha": "d887a68299b172a03c4648b16fdfbef9dcf25ce0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d887a68299b172a03c4648b16fdfbef9dcf25ce0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d887a68299b172a03c4648b16fdfbef9dcf25ce0"}], "stats": {"total": 117, "additions": 108, "deletions": 9}, "files": [{"sha": "78b8ce8314c650c512410caf60e27241834df830", "filename": "gcc/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b1ed4cb43c9b43a57b28d35c46062607af6e6a64/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b1ed4cb43c9b43a57b28d35c46062607af6e6a64/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=b1ed4cb43c9b43a57b28d35c46062607af6e6a64", "patch": "@@ -1,3 +1,14 @@\n+2007-01-02  Manuel Lopez-Ibanez  <manu@gcc.gnu.org>\n+\n+\tPR middle-end/7651\n+\t* c.opt (Wold-style-declaration): New.\n+\t* doc/invoke.texi (C-only Warning Options): New.\n+\t(Wold-style-declaration): Document it.\n+\t(Wextra): Enabled by -Wextra.\n+\t* c-opts.c (c_common_post_options): Enabled by -Wextra.\n+\t* c-decl.c (declspecs_add_scspec): Replace -Wextra with\n+\t-Wold-style-declaration.\n+\t\n 2007-01-02  Kazu Hirata  <kazu@codesourcery.com>\n \n \t* alias.c (init_alias_analysis): Use VEC_safe_grow_cleared."}, {"sha": "f669a4729dafa603fcec6cfa7301df578511ed04", "filename": "gcc/c-decl.c", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b1ed4cb43c9b43a57b28d35c46062607af6e6a64/gcc%2Fc-decl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b1ed4cb43c9b43a57b28d35c46062607af6e6a64/gcc%2Fc-decl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-decl.c?ref=b1ed4cb43c9b43a57b28d35c46062607af6e6a64", "patch": "@@ -7613,8 +7613,9 @@ declspecs_add_scspec (struct c_declspecs *specs, tree scspec)\n   gcc_assert (TREE_CODE (scspec) == IDENTIFIER_NODE\n \t      && C_IS_RESERVED_WORD (scspec));\n   i = C_RID_CODE (scspec);\n-  if (extra_warnings && specs->non_sc_seen_p)\n-    warning (OPT_Wextra, \"%qE is not at beginning of declaration\", scspec);\n+  if (specs->non_sc_seen_p)\n+    warning (OPT_Wold_style_declaration, \n+             \"%qE is not at beginning of declaration\", scspec);\n   switch (i)\n     {\n     case RID_INLINE:"}, {"sha": "acba12bfca5fe1caf2286d2959fb080573ee0e19", "filename": "gcc/c-opts.c", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b1ed4cb43c9b43a57b28d35c46062607af6e6a64/gcc%2Fc-opts.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b1ed4cb43c9b43a57b28d35c46062607af6e6a64/gcc%2Fc-opts.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-opts.c?ref=b1ed4cb43c9b43a57b28d35c46062607af6e6a64", "patch": "@@ -1026,7 +1026,8 @@ c_common_post_options (const char **pfilename)\n     flag_exceptions = 1;\n \n   /* -Wextra implies -Wclobbered, -Wempty-body, -Wsign-compare, \n-     -Wmissing-field-initializers, -Wmissing-parameter-type and -Woverride-init, \n+     -Wmissing-field-initializers, -Wmissing-parameter-type\n+     -Wold-style-declaration, and -Woverride-init, \n      but not if explicitly overridden.  */\n   if (warn_clobbered == -1)\n     warn_clobbered = extra_warnings;\n@@ -1038,6 +1039,8 @@ c_common_post_options (const char **pfilename)\n     warn_missing_field_initializers = extra_warnings;\n   if (warn_missing_parameter_type == -1)\n     warn_missing_parameter_type = extra_warnings;\n+  if (warn_old_style_declaration == -1)\n+    warn_old_style_declaration = extra_warnings;\n   if (warn_override_init == -1)\n     warn_override_init = extra_warnings;\n "}, {"sha": "5500d08c565ead6f38a942ea13259fba1372124b", "filename": "gcc/c.opt", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b1ed4cb43c9b43a57b28d35c46062607af6e6a64/gcc%2Fc.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b1ed4cb43c9b43a57b28d35c46062607af6e6a64/gcc%2Fc.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc.opt?ref=b1ed4cb43c9b43a57b28d35c46062607af6e6a64", "patch": "@@ -319,6 +319,10 @@ Wold-style-cast\n C++ ObjC++ Var(warn_old_style_cast)\n Warn if a C-style cast is used in a program\n \n+Wold-style-declaration\n+C ObjC Var(warn_old_style_declaration) Init(-1)\n+Warn for obsolescent usage in a declaration\n+\n Wold-style-definition\n C ObjC Var(warn_old_style_definition)\n Warn if an old-style parameter definition is used"}, {"sha": "210119254d222e4fee04fa76b6b9640fa2068e2d", "filename": "gcc/doc/invoke.texi", "status": "modified", "additions": 14, "deletions": 5, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b1ed4cb43c9b43a57b28d35c46062607af6e6a64/gcc%2Fdoc%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b1ed4cb43c9b43a57b28d35c46062607af6e6a64/gcc%2Fdoc%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finvoke.texi?ref=b1ed4cb43c9b43a57b28d35c46062607af6e6a64", "patch": "@@ -256,8 +256,8 @@ Objective-C and Objective-C++ Dialects}.\n \n @item C-only Warning Options\n @gccoptlist{-Wbad-function-cast  -Wmissing-declarations @gol\n--Wmissing-parameter-type  -Wmissing-prototypes @gol\n--Wnested-externs  -Wold-style-definition @gol\n+-Wmissing-parameter-type  -Wmissing-prototypes  -Wnested-externs @gol\n+-Wold-style-declaration  -Wold-style-definition @gol\n -Wstrict-prototypes  -Wtraditional  -Wtraditional-conversion @gol\n -Wdeclaration-after-statement -Wpointer-sign}\n \n@@ -2885,9 +2885,11 @@ but @samp{x[(void)i,j]} will not.\n @item\n An unsigned value is compared against zero with @samp{<} or @samp{>=}.\n \n-@item\n-Storage-class specifiers like @code{static} are not the first things in\n-a declaration.  According to the C Standard, this usage is obsolescent.\n+@item @r{(C only)}\n+Storage-class specifiers like @code{static} are not the first things\n+in a declaration.  According to the C Standard, this usage is\n+obsolescent.  This warning can be independently controlled by\n+@option{-Wold-style-declaration}.\n \n @item\n If @option{-Wall} or @option{-Wunused} is also specified, warn about unused\n@@ -3214,6 +3216,13 @@ argument types.  (An old-style function definition is permitted without\n a warning if preceded by a declaration which specifies the argument\n types.)\n \n+@item -Wold-style-declaration @r{(C only)}\n+@opindex Wold-style-declaration\n+Warn for obsolescent usages, according to the C Standard, in a\n+declaration. For example, warn if storage-class specifiers like\n+@code{static} are not the first things in a declaration.  This warning\n+is also enabled by @option{-Wextra}.\n+\n @item -Wold-style-definition @r{(C only)}\n @opindex Wold-style-definition\n Warn if an old-style function definition is used.  A warning is given"}, {"sha": "e2e3d3dbb053cf491a2974855598b36c40628064", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b1ed4cb43c9b43a57b28d35c46062607af6e6a64/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b1ed4cb43c9b43a57b28d35c46062607af6e6a64/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=b1ed4cb43c9b43a57b28d35c46062607af6e6a64", "patch": "@@ -1,3 +1,10 @@\n+2007-01-02  Manuel Lopez-Ibanez  <manu@gcc.gnu.org>\n+\n+\tPR middle-end/7651\n+\t* gcc.dg/declspec-3.c: Replace -W with -Wold-style-declaration.\n+\t* gcc.dg/declspec-3-Wextra.c: New.\n+\t* gcc.dg/declspec-3-no.c: New\n+\n 2007-01-02  Paul Thomas  <pault@gcc.gnu.org>\n \n \tPR fortran/20896"}, {"sha": "66378cc71d8848ae8758544c6eb3f9c4de02713c", "filename": "gcc/testsuite/gcc.dg/declspec-3-Wextra.c", "status": "added", "additions": 32, "deletions": 0, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b1ed4cb43c9b43a57b28d35c46062607af6e6a64/gcc%2Ftestsuite%2Fgcc.dg%2Fdeclspec-3-Wextra.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b1ed4cb43c9b43a57b28d35c46062607af6e6a64/gcc%2Ftestsuite%2Fgcc.dg%2Fdeclspec-3-Wextra.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fdeclspec-3-Wextra.c?ref=b1ed4cb43c9b43a57b28d35c46062607af6e6a64", "patch": "@@ -0,0 +1,32 @@\n+/* See declspec-3.c . Test -Wold-style-declaration is enabled by -Wextra. */\n+/* { dg-do compile } */\n+/* { dg-options \"-Wextra\" } */\n+\n+static int x0;\n+int static x1; /* { dg-warning \"not at beginning\" } */\n+\n+extern int x2;\n+int extern x3; /* { dg-warning \"not at beginning\" } */\n+\n+typedef int x4;\n+int typedef x5; /* { dg-warning \"not at beginning\" } */\n+\n+void g (int);\n+\n+void\n+f (void)\n+{\n+  auto int x6 = 0;\n+  int auto x7 = 0; /* { dg-warning \"not at beginning\" } */\n+  register int x8 = 0;\n+  int register x9 = 0; /* { dg-warning \"not at beginning\" } */\n+  g (x6 + x7 + x8 + x9);\n+}\n+\n+const static int x10; /* { dg-warning \"not at beginning\" } */\n+\n+/* Attributes are OK before storage class specifiers, since some\n+   attributes are like such specifiers themselves.  */\n+\n+__attribute__((format(printf, 1, 2))) static void h (const char *, ...);\n+__attribute__((format(printf, 1, 2))) void static i (const char *, ...); /* { dg-warning \"not at beginning\" } */"}, {"sha": "678b4f2d3f3a870af08a68ed5e15d51b2ae6643f", "filename": "gcc/testsuite/gcc.dg/declspec-3-no.c", "status": "added", "additions": 32, "deletions": 0, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b1ed4cb43c9b43a57b28d35c46062607af6e6a64/gcc%2Ftestsuite%2Fgcc.dg%2Fdeclspec-3-no.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b1ed4cb43c9b43a57b28d35c46062607af6e6a64/gcc%2Ftestsuite%2Fgcc.dg%2Fdeclspec-3-no.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fdeclspec-3-no.c?ref=b1ed4cb43c9b43a57b28d35c46062607af6e6a64", "patch": "@@ -0,0 +1,32 @@\n+/* See declspec-3.c . Test disabling -Wold-style-declaration. */\n+/* { dg-do compile } */\n+/* { dg-options \"-Wextra -Wno-old-style-declaration\" } */\n+\n+static int x0;\n+int static x1; /* { dg-bogus \"not at beginning\" } */\n+\n+extern int x2;\n+int extern x3; /* { dg-bogus \"not at beginning\" } */\n+\n+typedef int x4;\n+int typedef x5; /* { dg-bogus \"not at beginning\" } */\n+\n+void g (int);\n+\n+void\n+f (void)\n+{\n+  auto int x6 = 0;\n+  int auto x7 = 0; /* { dg-bogus \"not at beginning\" } */\n+  register int x8 = 0;\n+  int register x9 = 0; /* { dg-bogus \"not at beginning\" } */\n+  g (x6 + x7 + x8 + x9);\n+}\n+\n+const static int x10; /* { dg-bogus \"not at beginning\" } */\n+\n+/* Attributes are OK before storage class specifiers, since some\n+   attributes are like such specifiers themselves.  */\n+\n+__attribute__((format(printf, 1, 2))) static void h (const char *, ...);\n+__attribute__((format(printf, 1, 2))) void static i (const char *, ...); /* { dg-bogus \"not at beginning\" } */"}, {"sha": "95052a9860fc4fc084c6ecd4014301302276d6b4", "filename": "gcc/testsuite/gcc.dg/declspec-3.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b1ed4cb43c9b43a57b28d35c46062607af6e6a64/gcc%2Ftestsuite%2Fgcc.dg%2Fdeclspec-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b1ed4cb43c9b43a57b28d35c46062607af6e6a64/gcc%2Ftestsuite%2Fgcc.dg%2Fdeclspec-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fdeclspec-3.c?ref=b1ed4cb43c9b43a57b28d35c46062607af6e6a64", "patch": "@@ -2,7 +2,7 @@\n    specifiers not at start.  */\n /* Origin: Joseph Myers <jsm@polyomino.org.uk> */\n /* { dg-do compile } */\n-/* { dg-options \"-W\" } */\n+/* { dg-options \"-Wold-style-declaration\" } */\n \n static int x0;\n int static x1; /* { dg-warning \"not at beginning\" } */"}]}