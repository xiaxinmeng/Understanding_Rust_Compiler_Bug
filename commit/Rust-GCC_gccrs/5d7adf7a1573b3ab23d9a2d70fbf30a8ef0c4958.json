{"sha": "5d7adf7a1573b3ab23d9a2d70fbf30a8ef0c4958", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWQ3YWRmN2ExNTczYjNhYjIzZDlhMmQ3MGZiZjMwYThlZjBjNDk1OA==", "commit": {"author": {"name": "Francois-Xavier Coudert", "email": "coudert@clipper.ens.fr", "date": "2006-10-20T11:52:56Z"}, "committer": {"name": "Fran\u00e7ois-Xavier Coudert", "email": "fxcoudert@gcc.gnu.org", "date": "2006-10-20T11:52:56Z"}, "message": "minval_r8.c: Regenerate.\n\n\t* generated/minval_r8.c: Regenerate.\n\t* generated/maxloc1_4_r8.c: Regenerate.\n\t* generated/minloc1_16_r16.c: Regenerate.\n\t* generated/sum_i8.c: Regenerate.\n\t* generated/eoshift3_4.c: Regenerate.\n\t* generated/any_l16.c: Regenerate.\n\t* generated/eoshift1_8.c: Regenerate.\n\t* generated/reshape_r16.c: Regenerate.\n\t* generated/product_r4.c: Regenerate.\n\t* generated/maxloc1_8_i4.c: Regenerate.\n\t* generated/maxloc0_4_r4.c: Regenerate.\n\t* generated/in_unpack_i8.c: Regenerate.\n\t* generated/minloc0_4_r16.c: Regenerate.\n\t* generated/reshape_c4.c: Regenerate.\n\t* generated/maxloc0_4_r16.c: Regenerate.\n\t* generated/minloc1_8_r16.c: Regenerate.\n\t* generated/maxloc1_8_r16.c: Regenerate.\n\t* generated/in_unpack_i16.c: Regenerate.\n\t* generated/maxloc0_8_i8.c: Regenerate.\n\t* generated/sum_r16.c: Regenerate.\n\t* generated/minloc1_4_r8.c: Regenerate.\n\t* generated/maxloc1_16_r16.c: Regenerate.\n\t* generated/minloc1_16_i4.c: Regenerate.\n\t* generated/maxloc1_16_i4.c: Regenerate.\n\t* generated/minloc0_16_i8.c: Regenerate.\n\t* generated/maxloc0_16_i8.c: Regenerate.\n\t* generated/maxval_r16.c: Regenerate.\n\t* generated/count_16_l16.c: Regenerate.\n\t* generated/count_8_l8.c: Regenerate.\n\t* generated/product_c10.c: Regenerate.\n\t* generated/minloc1_8_i4.c: Regenerate.\n\t* generated/minloc0_16_i16.c: Regenerate.\n\t* generated/eoshift1_16.c: Regenerate.\n\t* generated/minloc0_4_r4.c: Regenerate.\n\t* generated/product_c4.c: Regenerate.\n\t* generated/sum_r4.c: Regenerate.\n\t* generated/in_pack_c16.c: Regenerate.\n\t* generated/reshape_i4.c: Regenerate.\n\t* generated/minloc0_8_i8.c: Regenerate.\n\t* generated/minloc1_16_r10.c: Regenerate.\n\t* generated/in_pack_c4.c: Regenerate.\n\t* generated/all_l16.c: Regenerate.\n\t* generated/reshape_c16.c: Regenerate.\n\t* generated/maxloc1_8_r8.c: Regenerate.\n\t* generated/minval_i16.c: Regenerate.\n\t* generated/reshape_r10.c: Regenerate.\n\t* generated/maxval_i4.c: Regenerate.\n\t* generated/any_l4.c: Regenerate.\n\t* generated/minval_i8.c: Regenerate.\n\t* generated/maxloc1_4_i8.c: Regenerate.\n\t* generated/maxloc0_16_i16.c: Regenerate.\n\t* generated/maxloc0_8_r4.c: Regenerate.\n\t* generated/minloc1_4_i16.c: Regenerate.\n\t* generated/minloc0_4_r10.c: Regenerate.\n\t* generated/maxloc1_4_i16.c: Regenerate.\n\t* generated/minloc0_8_i16.c: Regenerate.\n\t* generated/maxloc0_4_r10.c: Regenerate.\n\t* generated/maxloc0_8_i16.c: Regenerate.\n\t* generated/minloc1_8_r10.c: Regenerate.\n\t* generated/product_i4.c: Regenerate.\n\t* generated/minloc0_16_r4.c: Regenerate.\n\t* generated/sum_c16.c: Regenerate.\n\t* generated/maxloc1_8_r10.c: Regenerate.\n\t* generated/maxloc0_16_r4.c: Regenerate.\n\t* generated/minloc1_16_r8.c: Regenerate.\n\t* generated/maxloc0_4_i4.c: Regenerate.\n\t* generated/maxloc1_16_r8.c: Regenerate.\n\t* generated/cshift1_4.c: Regenerate.\n\t* generated/sum_r10.c: Regenerate.\n\t* generated/sum_c4.c: Regenerate.\n\t* generated/maxloc1_16_r10.c: Regenerate.\n\t* generated/count_4_l16.c: Regenerate.\n\t* generated/in_pack_i4.c: Regenerate.\n\t* generated/minloc1_8_r8.c: Regenerate.\n\t* generated/count_4_l4.c: Regenerate.\n\t* generated/maxval_r10.c: Regenerate.\n\t* generated/minloc1_4_i8.c: Regenerate.\n\t* generated/in_unpack_c4.c: Regenerate.\n\t* generated/minloc0_8_r4.c: Regenerate.\n\t* generated/product_i16.c: Regenerate.\n\t* generated/minloc0_16_r16.c: Regenerate.\n\t* generated/reshape_r8.c: Regenerate.\n\t* generated/all_l4.c: Regenerate.\n\t* generated/in_pack_c10.c: Regenerate.\n\t* generated/minloc0_4_i4.c: Regenerate.\n\t* generated/reshape_c10.c: Regenerate.\n\t* generated/minval_r4.c: Regenerate.\n\t* generated/maxloc1_4_r4.c: Regenerate.\n\t* generated/sum_i4.c: Regenerate.\n\t* generated/count_16_l8.c: Regenerate.\n\t* generated/maxval_r8.c: Regenerate.\n\t* generated/eoshift1_4.c: Regenerate.\n\t* generated/eoshift3_8.c: Regenerate.\n\t* generated/minval_r16.c: Regenerate.\n\t* generated/product_r8.c: Regenerate.\n\t* generated/maxloc1_8_i8.c: Regenerate.\n\t* generated/maxloc0_4_r8.c: Regenerate.\n\t* generated/maxloc0_16_r16.c: Regenerate.\n\t* generated/in_unpack_i4.c: Regenerate.\n\t* generated/sum_c10.c: Regenerate.\n\t* generated/minloc1_4_r16.c: Regenerate.\n\t* generated/maxloc1_4_r16.c: Regenerate.\n\t* generated/in_unpack_c16.c: Regenerate.\n\t* generated/minloc0_8_r16.c: Regenerate.\n\t* generated/reshape_c8.c: Regenerate.\n\t* generated/maxloc0_8_r16.c: Regenerate.\n\t* generated/maxloc0_8_i4.c: Regenerate.\n\t* generated/minloc1_4_r4.c: Regenerate.\n\t* generated/minloc0_16_i4.c: Regenerate.\n\t* generated/maxloc0_16_i4.c: Regenerate.\n\t* generated/minloc1_16_i8.c: Regenerate.\n\t* generated/maxloc1_16_i8.c: Regenerate.\n\t* generated/count_8_l4.c: Regenerate.\n\t* generated/minloc0_16_r10.c: Regenerate.\n\t* generated/minloc1_8_i8.c: Regenerate.\n\t* generated/minloc0_4_r8.c: Regenerate.\n\t* generated/product_r16.c: Regenerate.\n\t* generated/product_c8.c: Regenerate.\n\t* generated/sum_r8.c: Regenerate.\n\t* generated/in_pack_i16.c: Regenerate.\n\t* generated/minloc0_8_i4.c: Regenerate.\n\t* generated/minloc1_16_i16.c: Regenerate.\n\t* generated/reshape_i8.c: Regenerate.\n\t* generated/in_pack_c8.c: Regenerate.\n\t* generated/maxloc1_8_r4.c: Regenerate.\n\t* generated/reshape_i16.c: Regenerate.\n\t* generated/minval_r10.c: Regenerate.\n\t* generated/minval_i4.c: Regenerate.\n\t* generated/maxloc1_4_i4.c: Regenerate.\n\t* generated/maxval_i8.c: Regenerate.\n\t* generated/eoshift3_16.c: Regenerate.\n\t* generated/any_l8.c: Regenerate.\n\t* generated/maxloc0_16_r10.c: Regenerate.\n\t* generated/minloc0_4_i16.c: Regenerate.\n\t* generated/maxloc0_8_r8.c: Regenerate.\n\t* generated/maxloc0_4_i16.c: Regenerate.\n\t* generated/minloc1_4_r10.c: Regenerate.\n\t* generated/minloc1_8_i16.c: Regenerate.\n\t* generated/maxloc1_4_r10.c: Regenerate.\n\t* generated/minloc0_8_r10.c: Regenerate.\n\t* generated/maxloc1_8_i16.c: Regenerate.\n\t* generated/in_unpack_c10.c: Regenerate.\n\t* generated/maxloc0_8_r10.c: Regenerate.\n\t* generated/minloc1_16_r4.c: Regenerate.\n\t* generated/maxloc1_16_r4.c: Regenerate.\n\t* generated/minloc0_16_r8.c: Regenerate.\n\t* generated/product_i8.c: Regenerate.\n\t* generated/maxloc0_16_r8.c: Regenerate.\n\t* generated/sum_i16.c: Regenerate.\n\t* generated/maxloc0_4_i8.c: Regenerate.\n\t* generated/cshift1_8.c: Regenerate.\n\t* generated/maxloc1_16_i16.c: Regenerate.\n\t* generated/minloc1_8_r4.c: Regenerate.\n\t* generated/sum_c8.c: Regenerate.\n\t* generated/count_8_l16.c: Regenerate.\n\t* generated/in_pack_i8.c: Regenerate.\n\t* generated/maxval_i16.c: Regenerate.\n\t* generated/count_4_l8.c: Regenerate.\n\t* generated/minloc1_4_i4.c: Regenerate.\n\t* generated/product_c16.c: Regenerate.\n\t* generated/reshape_r4.c: Regenerate.\n\t* generated/minloc0_8_r8.c: Regenerate.\n\t* generated/in_unpack_c8.c: Regenerate.\n\t* generated/product_r10.c: Regenerate.\n\t* generated/cshift1_16.c: Regenerate.\n\t* generated/all_l8.c: Regenerate.\n\t* generated/minloc0_4_i8.c: Regenerate.\n\t* generated/maxval_r4.c: Regenerate.\n\t* generated/count_16_l4.c: Regenerate.\n\nFrom-SVN: r117904", "tree": {"sha": "51f9c0060d03b15363ca3237c4dffcc063014276", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/51f9c0060d03b15363ca3237c4dffcc063014276"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5d7adf7a1573b3ab23d9a2d70fbf30a8ef0c4958", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5d7adf7a1573b3ab23d9a2d70fbf30a8ef0c4958", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5d7adf7a1573b3ab23d9a2d70fbf30a8ef0c4958", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5d7adf7a1573b3ab23d9a2d70fbf30a8ef0c4958/comments", "author": null, "committer": {"login": "fxcoudert", "id": 1980544, "node_id": "MDQ6VXNlcjE5ODA1NDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1980544?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fxcoudert", "html_url": "https://github.com/fxcoudert", "followers_url": "https://api.github.com/users/fxcoudert/followers", "following_url": "https://api.github.com/users/fxcoudert/following{/other_user}", "gists_url": "https://api.github.com/users/fxcoudert/gists{/gist_id}", "starred_url": "https://api.github.com/users/fxcoudert/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fxcoudert/subscriptions", "organizations_url": "https://api.github.com/users/fxcoudert/orgs", "repos_url": "https://api.github.com/users/fxcoudert/repos", "events_url": "https://api.github.com/users/fxcoudert/events{/privacy}", "received_events_url": "https://api.github.com/users/fxcoudert/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "065a4d36bca538c11061971e7b8407c0da799951", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/065a4d36bca538c11061971e7b8407c0da799951", "html_url": "https://github.com/Rust-GCC/gccrs/commit/065a4d36bca538c11061971e7b8407c0da799951"}], "stats": {"total": 772, "additions": 472, "deletions": 300}, "files": [{"sha": "19c2a92a3f6785f183d434a6476fefaa0746e2c8", "filename": "libgfortran/ChangeLog", "status": "modified", "additions": 172, "deletions": 0, "changes": 172, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5d7adf7a1573b3ab23d9a2d70fbf30a8ef0c4958/libgfortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5d7adf7a1573b3ab23d9a2d70fbf30a8ef0c4958/libgfortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2FChangeLog?ref=5d7adf7a1573b3ab23d9a2d70fbf30a8ef0c4958", "patch": "@@ -1,3 +1,175 @@\n+2006-10-20  Francois-Xavier Coudert  <coudert@clipper.ens.fr>\n+\n+\t* generated/minval_r8.c: Regenerate.\n+\t* generated/maxloc1_4_r8.c: Regenerate.\n+\t* generated/minloc1_16_r16.c: Regenerate.\n+\t* generated/sum_i8.c: Regenerate.\n+\t* generated/eoshift3_4.c: Regenerate.\n+\t* generated/any_l16.c: Regenerate.\n+\t* generated/eoshift1_8.c: Regenerate.\n+\t* generated/reshape_r16.c: Regenerate.\n+\t* generated/product_r4.c: Regenerate.\n+\t* generated/maxloc1_8_i4.c: Regenerate.\n+\t* generated/maxloc0_4_r4.c: Regenerate.\n+\t* generated/in_unpack_i8.c: Regenerate.\n+\t* generated/minloc0_4_r16.c: Regenerate.\n+\t* generated/reshape_c4.c: Regenerate.\n+\t* generated/maxloc0_4_r16.c: Regenerate.\n+\t* generated/minloc1_8_r16.c: Regenerate.\n+\t* generated/maxloc1_8_r16.c: Regenerate.\n+\t* generated/in_unpack_i16.c: Regenerate.\n+\t* generated/maxloc0_8_i8.c: Regenerate.\n+\t* generated/sum_r16.c: Regenerate.\n+\t* generated/minloc1_4_r8.c: Regenerate.\n+\t* generated/maxloc1_16_r16.c: Regenerate.\n+\t* generated/minloc1_16_i4.c: Regenerate.\n+\t* generated/maxloc1_16_i4.c: Regenerate.\n+\t* generated/minloc0_16_i8.c: Regenerate.\n+\t* generated/maxloc0_16_i8.c: Regenerate.\n+\t* generated/maxval_r16.c: Regenerate.\n+\t* generated/count_16_l16.c: Regenerate.\n+\t* generated/count_8_l8.c: Regenerate.\n+\t* generated/product_c10.c: Regenerate.\n+\t* generated/minloc1_8_i4.c: Regenerate.\n+\t* generated/minloc0_16_i16.c: Regenerate.\n+\t* generated/eoshift1_16.c: Regenerate.\n+\t* generated/minloc0_4_r4.c: Regenerate.\n+\t* generated/product_c4.c: Regenerate.\n+\t* generated/sum_r4.c: Regenerate.\n+\t* generated/in_pack_c16.c: Regenerate.\n+\t* generated/reshape_i4.c: Regenerate.\n+\t* generated/minloc0_8_i8.c: Regenerate.\n+\t* generated/minloc1_16_r10.c: Regenerate.\n+\t* generated/in_pack_c4.c: Regenerate.\n+\t* generated/all_l16.c: Regenerate.\n+\t* generated/reshape_c16.c: Regenerate.\n+\t* generated/maxloc1_8_r8.c: Regenerate.\n+\t* generated/minval_i16.c: Regenerate.\n+\t* generated/reshape_r10.c: Regenerate.\n+\t* generated/maxval_i4.c: Regenerate.\n+\t* generated/any_l4.c: Regenerate.\n+\t* generated/minval_i8.c: Regenerate.\n+\t* generated/maxloc1_4_i8.c: Regenerate.\n+\t* generated/maxloc0_16_i16.c: Regenerate.\n+\t* generated/maxloc0_8_r4.c: Regenerate.\n+\t* generated/minloc1_4_i16.c: Regenerate.\n+\t* generated/minloc0_4_r10.c: Regenerate.\n+\t* generated/maxloc1_4_i16.c: Regenerate.\n+\t* generated/minloc0_8_i16.c: Regenerate.\n+\t* generated/maxloc0_4_r10.c: Regenerate.\n+\t* generated/maxloc0_8_i16.c: Regenerate.\n+\t* generated/minloc1_8_r10.c: Regenerate.\n+\t* generated/product_i4.c: Regenerate.\n+\t* generated/minloc0_16_r4.c: Regenerate.\n+\t* generated/sum_c16.c: Regenerate.\n+\t* generated/maxloc1_8_r10.c: Regenerate.\n+\t* generated/maxloc0_16_r4.c: Regenerate.\n+\t* generated/minloc1_16_r8.c: Regenerate.\n+\t* generated/maxloc0_4_i4.c: Regenerate.\n+\t* generated/maxloc1_16_r8.c: Regenerate.\n+\t* generated/cshift1_4.c: Regenerate.\n+\t* generated/sum_r10.c: Regenerate.\n+\t* generated/sum_c4.c: Regenerate.\n+\t* generated/maxloc1_16_r10.c: Regenerate.\n+\t* generated/count_4_l16.c: Regenerate.\n+\t* generated/in_pack_i4.c: Regenerate.\n+\t* generated/minloc1_8_r8.c: Regenerate.\n+\t* generated/count_4_l4.c: Regenerate.\n+\t* generated/maxval_r10.c: Regenerate.\n+\t* generated/minloc1_4_i8.c: Regenerate.\n+\t* generated/in_unpack_c4.c: Regenerate.\n+\t* generated/minloc0_8_r4.c: Regenerate.\n+\t* generated/product_i16.c: Regenerate.\n+\t* generated/minloc0_16_r16.c: Regenerate.\n+\t* generated/reshape_r8.c: Regenerate.\n+\t* generated/all_l4.c: Regenerate.\n+\t* generated/in_pack_c10.c: Regenerate.\n+\t* generated/minloc0_4_i4.c: Regenerate.\n+\t* generated/reshape_c10.c: Regenerate.\n+\t* generated/minval_r4.c: Regenerate.\n+\t* generated/maxloc1_4_r4.c: Regenerate.\n+\t* generated/sum_i4.c: Regenerate.\n+\t* generated/count_16_l8.c: Regenerate.\n+\t* generated/maxval_r8.c: Regenerate.\n+\t* generated/eoshift1_4.c: Regenerate.\n+\t* generated/eoshift3_8.c: Regenerate.\n+\t* generated/minval_r16.c: Regenerate.\n+\t* generated/product_r8.c: Regenerate.\n+\t* generated/maxloc1_8_i8.c: Regenerate.\n+\t* generated/maxloc0_4_r8.c: Regenerate.\n+\t* generated/maxloc0_16_r16.c: Regenerate.\n+\t* generated/in_unpack_i4.c: Regenerate.\n+\t* generated/sum_c10.c: Regenerate.\n+\t* generated/minloc1_4_r16.c: Regenerate.\n+\t* generated/maxloc1_4_r16.c: Regenerate.\n+\t* generated/in_unpack_c16.c: Regenerate.\n+\t* generated/minloc0_8_r16.c: Regenerate.\n+\t* generated/reshape_c8.c: Regenerate.\n+\t* generated/maxloc0_8_r16.c: Regenerate.\n+\t* generated/maxloc0_8_i4.c: Regenerate.\n+\t* generated/minloc1_4_r4.c: Regenerate.\n+\t* generated/minloc0_16_i4.c: Regenerate.\n+\t* generated/maxloc0_16_i4.c: Regenerate.\n+\t* generated/minloc1_16_i8.c: Regenerate.\n+\t* generated/maxloc1_16_i8.c: Regenerate.\n+\t* generated/count_8_l4.c: Regenerate.\n+\t* generated/minloc0_16_r10.c: Regenerate.\n+\t* generated/minloc1_8_i8.c: Regenerate.\n+\t* generated/minloc0_4_r8.c: Regenerate.\n+\t* generated/product_r16.c: Regenerate.\n+\t* generated/product_c8.c: Regenerate.\n+\t* generated/sum_r8.c: Regenerate.\n+\t* generated/in_pack_i16.c: Regenerate.\n+\t* generated/minloc0_8_i4.c: Regenerate.\n+\t* generated/minloc1_16_i16.c: Regenerate.\n+\t* generated/reshape_i8.c: Regenerate.\n+\t* generated/in_pack_c8.c: Regenerate.\n+\t* generated/maxloc1_8_r4.c: Regenerate.\n+\t* generated/reshape_i16.c: Regenerate.\n+\t* generated/minval_r10.c: Regenerate.\n+\t* generated/minval_i4.c: Regenerate.\n+\t* generated/maxloc1_4_i4.c: Regenerate.\n+\t* generated/maxval_i8.c: Regenerate.\n+\t* generated/eoshift3_16.c: Regenerate.\n+\t* generated/any_l8.c: Regenerate.\n+\t* generated/maxloc0_16_r10.c: Regenerate.\n+\t* generated/minloc0_4_i16.c: Regenerate.\n+\t* generated/maxloc0_8_r8.c: Regenerate.\n+\t* generated/maxloc0_4_i16.c: Regenerate.\n+\t* generated/minloc1_4_r10.c: Regenerate.\n+\t* generated/minloc1_8_i16.c: Regenerate.\n+\t* generated/maxloc1_4_r10.c: Regenerate.\n+\t* generated/minloc0_8_r10.c: Regenerate.\n+\t* generated/maxloc1_8_i16.c: Regenerate.\n+\t* generated/in_unpack_c10.c: Regenerate.\n+\t* generated/maxloc0_8_r10.c: Regenerate.\n+\t* generated/minloc1_16_r4.c: Regenerate.\n+\t* generated/maxloc1_16_r4.c: Regenerate.\n+\t* generated/minloc0_16_r8.c: Regenerate.\n+\t* generated/product_i8.c: Regenerate.\n+\t* generated/maxloc0_16_r8.c: Regenerate.\n+\t* generated/sum_i16.c: Regenerate.\n+\t* generated/maxloc0_4_i8.c: Regenerate.\n+\t* generated/cshift1_8.c: Regenerate.\n+\t* generated/maxloc1_16_i16.c: Regenerate.\n+\t* generated/minloc1_8_r4.c: Regenerate.\n+\t* generated/sum_c8.c: Regenerate.\n+\t* generated/count_8_l16.c: Regenerate.\n+\t* generated/in_pack_i8.c: Regenerate.\n+\t* generated/maxval_i16.c: Regenerate.\n+\t* generated/count_4_l8.c: Regenerate.\n+\t* generated/minloc1_4_i4.c: Regenerate.\n+\t* generated/product_c16.c: Regenerate.\n+\t* generated/reshape_r4.c: Regenerate.\n+\t* generated/minloc0_8_r8.c: Regenerate.\n+\t* generated/in_unpack_c8.c: Regenerate.\n+\t* generated/product_r10.c: Regenerate.\n+\t* generated/cshift1_16.c: Regenerate.\n+\t* generated/all_l8.c: Regenerate.\n+\t* generated/minloc0_4_i8.c: Regenerate.\n+\t* generated/maxval_r4.c: Regenerate.\n+\t* generated/count_16_l4.c: Regenerate.\n+\n 2006-10-19  Francois-Xavier Coudert  <coudert@clipper.ens.fr>\n \n \tPR libfortran/27895"}, {"sha": "4ad871d306a1da116eec8bcf16938857f52b0c7f", "filename": "libgfortran/generated/all_l16.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5d7adf7a1573b3ab23d9a2d70fbf30a8ef0c4958/libgfortran%2Fgenerated%2Fall_l16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5d7adf7a1573b3ab23d9a2d70fbf30a8ef0c4958/libgfortran%2Fgenerated%2Fall_l16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fall_l16.c?ref=5d7adf7a1573b3ab23d9a2d70fbf30a8ef0c4958", "patch": "@@ -149,7 +149,7 @@ all_l16 (gfc_array_l16 * const restrict retarray,\n              the next dimension.  */\n           count[n] = 0;\n           /* We could precalculate these products, but this is a less\n-             frequently used path so proabably not worth it.  */\n+             frequently used path so probably not worth it.  */\n           base -= sstride[n] * extent[n];\n           dest -= dstride[n] * extent[n];\n           n++;"}, {"sha": "fbfcd8bd65be761f5a397f58ca03da3bb79f0e78", "filename": "libgfortran/generated/all_l4.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5d7adf7a1573b3ab23d9a2d70fbf30a8ef0c4958/libgfortran%2Fgenerated%2Fall_l4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5d7adf7a1573b3ab23d9a2d70fbf30a8ef0c4958/libgfortran%2Fgenerated%2Fall_l4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fall_l4.c?ref=5d7adf7a1573b3ab23d9a2d70fbf30a8ef0c4958", "patch": "@@ -149,7 +149,7 @@ all_l4 (gfc_array_l4 * const restrict retarray,\n              the next dimension.  */\n           count[n] = 0;\n           /* We could precalculate these products, but this is a less\n-             frequently used path so proabably not worth it.  */\n+             frequently used path so probably not worth it.  */\n           base -= sstride[n] * extent[n];\n           dest -= dstride[n] * extent[n];\n           n++;"}, {"sha": "b41c4c2b22b02bd14bfa78f72548255e03eeed41", "filename": "libgfortran/generated/all_l8.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5d7adf7a1573b3ab23d9a2d70fbf30a8ef0c4958/libgfortran%2Fgenerated%2Fall_l8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5d7adf7a1573b3ab23d9a2d70fbf30a8ef0c4958/libgfortran%2Fgenerated%2Fall_l8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fall_l8.c?ref=5d7adf7a1573b3ab23d9a2d70fbf30a8ef0c4958", "patch": "@@ -149,7 +149,7 @@ all_l8 (gfc_array_l8 * const restrict retarray,\n              the next dimension.  */\n           count[n] = 0;\n           /* We could precalculate these products, but this is a less\n-             frequently used path so proabably not worth it.  */\n+             frequently used path so probably not worth it.  */\n           base -= sstride[n] * extent[n];\n           dest -= dstride[n] * extent[n];\n           n++;"}, {"sha": "ad4516c123ad72e4b41e1fdd2651726ace5da663", "filename": "libgfortran/generated/any_l16.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5d7adf7a1573b3ab23d9a2d70fbf30a8ef0c4958/libgfortran%2Fgenerated%2Fany_l16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5d7adf7a1573b3ab23d9a2d70fbf30a8ef0c4958/libgfortran%2Fgenerated%2Fany_l16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fany_l16.c?ref=5d7adf7a1573b3ab23d9a2d70fbf30a8ef0c4958", "patch": "@@ -149,7 +149,7 @@ any_l16 (gfc_array_l16 * const restrict retarray,\n              the next dimension.  */\n           count[n] = 0;\n           /* We could precalculate these products, but this is a less\n-             frequently used path so proabably not worth it.  */\n+             frequently used path so probably not worth it.  */\n           base -= sstride[n] * extent[n];\n           dest -= dstride[n] * extent[n];\n           n++;"}, {"sha": "6f922fdac17dac53141c527859f4e5ce05831224", "filename": "libgfortran/generated/any_l4.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5d7adf7a1573b3ab23d9a2d70fbf30a8ef0c4958/libgfortran%2Fgenerated%2Fany_l4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5d7adf7a1573b3ab23d9a2d70fbf30a8ef0c4958/libgfortran%2Fgenerated%2Fany_l4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fany_l4.c?ref=5d7adf7a1573b3ab23d9a2d70fbf30a8ef0c4958", "patch": "@@ -149,7 +149,7 @@ any_l4 (gfc_array_l4 * const restrict retarray,\n              the next dimension.  */\n           count[n] = 0;\n           /* We could precalculate these products, but this is a less\n-             frequently used path so proabably not worth it.  */\n+             frequently used path so probably not worth it.  */\n           base -= sstride[n] * extent[n];\n           dest -= dstride[n] * extent[n];\n           n++;"}, {"sha": "2a379d3d5197d8645ea511632f53453f4014a99c", "filename": "libgfortran/generated/any_l8.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5d7adf7a1573b3ab23d9a2d70fbf30a8ef0c4958/libgfortran%2Fgenerated%2Fany_l8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5d7adf7a1573b3ab23d9a2d70fbf30a8ef0c4958/libgfortran%2Fgenerated%2Fany_l8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fany_l8.c?ref=5d7adf7a1573b3ab23d9a2d70fbf30a8ef0c4958", "patch": "@@ -149,7 +149,7 @@ any_l8 (gfc_array_l8 * const restrict retarray,\n              the next dimension.  */\n           count[n] = 0;\n           /* We could precalculate these products, but this is a less\n-             frequently used path so proabably not worth it.  */\n+             frequently used path so probably not worth it.  */\n           base -= sstride[n] * extent[n];\n           dest -= dstride[n] * extent[n];\n           n++;"}, {"sha": "92b2247f3bd274dadcf05f00a0834c9437fe88da", "filename": "libgfortran/generated/count_16_l16.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5d7adf7a1573b3ab23d9a2d70fbf30a8ef0c4958/libgfortran%2Fgenerated%2Fcount_16_l16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5d7adf7a1573b3ab23d9a2d70fbf30a8ef0c4958/libgfortran%2Fgenerated%2Fcount_16_l16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fcount_16_l16.c?ref=5d7adf7a1573b3ab23d9a2d70fbf30a8ef0c4958", "patch": "@@ -145,7 +145,7 @@ count_16_l16 (gfc_array_i16 * const restrict retarray,\n              the next dimension.  */\n           count[n] = 0;\n           /* We could precalculate these products, but this is a less\n-             frequently used path so proabably not worth it.  */\n+             frequently used path so probably not worth it.  */\n           base -= sstride[n] * extent[n];\n           dest -= dstride[n] * extent[n];\n           n++;"}, {"sha": "91811530cddc0fbefcb56bc1e59a664d44cc9463", "filename": "libgfortran/generated/count_16_l4.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5d7adf7a1573b3ab23d9a2d70fbf30a8ef0c4958/libgfortran%2Fgenerated%2Fcount_16_l4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5d7adf7a1573b3ab23d9a2d70fbf30a8ef0c4958/libgfortran%2Fgenerated%2Fcount_16_l4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fcount_16_l4.c?ref=5d7adf7a1573b3ab23d9a2d70fbf30a8ef0c4958", "patch": "@@ -145,7 +145,7 @@ count_16_l4 (gfc_array_i16 * const restrict retarray,\n              the next dimension.  */\n           count[n] = 0;\n           /* We could precalculate these products, but this is a less\n-             frequently used path so proabably not worth it.  */\n+             frequently used path so probably not worth it.  */\n           base -= sstride[n] * extent[n];\n           dest -= dstride[n] * extent[n];\n           n++;"}, {"sha": "de41758ced32b18c1e77bfc66c009d028b390a39", "filename": "libgfortran/generated/count_16_l8.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5d7adf7a1573b3ab23d9a2d70fbf30a8ef0c4958/libgfortran%2Fgenerated%2Fcount_16_l8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5d7adf7a1573b3ab23d9a2d70fbf30a8ef0c4958/libgfortran%2Fgenerated%2Fcount_16_l8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fcount_16_l8.c?ref=5d7adf7a1573b3ab23d9a2d70fbf30a8ef0c4958", "patch": "@@ -145,7 +145,7 @@ count_16_l8 (gfc_array_i16 * const restrict retarray,\n              the next dimension.  */\n           count[n] = 0;\n           /* We could precalculate these products, but this is a less\n-             frequently used path so proabably not worth it.  */\n+             frequently used path so probably not worth it.  */\n           base -= sstride[n] * extent[n];\n           dest -= dstride[n] * extent[n];\n           n++;"}, {"sha": "ad9b9016c2c231e2e93547a33a3128fc40b5c5b0", "filename": "libgfortran/generated/count_4_l16.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5d7adf7a1573b3ab23d9a2d70fbf30a8ef0c4958/libgfortran%2Fgenerated%2Fcount_4_l16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5d7adf7a1573b3ab23d9a2d70fbf30a8ef0c4958/libgfortran%2Fgenerated%2Fcount_4_l16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fcount_4_l16.c?ref=5d7adf7a1573b3ab23d9a2d70fbf30a8ef0c4958", "patch": "@@ -145,7 +145,7 @@ count_4_l16 (gfc_array_i4 * const restrict retarray,\n              the next dimension.  */\n           count[n] = 0;\n           /* We could precalculate these products, but this is a less\n-             frequently used path so proabably not worth it.  */\n+             frequently used path so probably not worth it.  */\n           base -= sstride[n] * extent[n];\n           dest -= dstride[n] * extent[n];\n           n++;"}, {"sha": "f5a46bf1a470454f790af3fbd679e153986320cc", "filename": "libgfortran/generated/count_4_l4.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5d7adf7a1573b3ab23d9a2d70fbf30a8ef0c4958/libgfortran%2Fgenerated%2Fcount_4_l4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5d7adf7a1573b3ab23d9a2d70fbf30a8ef0c4958/libgfortran%2Fgenerated%2Fcount_4_l4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fcount_4_l4.c?ref=5d7adf7a1573b3ab23d9a2d70fbf30a8ef0c4958", "patch": "@@ -145,7 +145,7 @@ count_4_l4 (gfc_array_i4 * const restrict retarray,\n              the next dimension.  */\n           count[n] = 0;\n           /* We could precalculate these products, but this is a less\n-             frequently used path so proabably not worth it.  */\n+             frequently used path so probably not worth it.  */\n           base -= sstride[n] * extent[n];\n           dest -= dstride[n] * extent[n];\n           n++;"}, {"sha": "5ec58bf4f60bafecee0b6ee8b270e97e30ef60aa", "filename": "libgfortran/generated/count_4_l8.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5d7adf7a1573b3ab23d9a2d70fbf30a8ef0c4958/libgfortran%2Fgenerated%2Fcount_4_l8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5d7adf7a1573b3ab23d9a2d70fbf30a8ef0c4958/libgfortran%2Fgenerated%2Fcount_4_l8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fcount_4_l8.c?ref=5d7adf7a1573b3ab23d9a2d70fbf30a8ef0c4958", "patch": "@@ -145,7 +145,7 @@ count_4_l8 (gfc_array_i4 * const restrict retarray,\n              the next dimension.  */\n           count[n] = 0;\n           /* We could precalculate these products, but this is a less\n-             frequently used path so proabably not worth it.  */\n+             frequently used path so probably not worth it.  */\n           base -= sstride[n] * extent[n];\n           dest -= dstride[n] * extent[n];\n           n++;"}, {"sha": "87c291eeba70326e0ef461372b8e7a6c52533715", "filename": "libgfortran/generated/count_8_l16.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5d7adf7a1573b3ab23d9a2d70fbf30a8ef0c4958/libgfortran%2Fgenerated%2Fcount_8_l16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5d7adf7a1573b3ab23d9a2d70fbf30a8ef0c4958/libgfortran%2Fgenerated%2Fcount_8_l16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fcount_8_l16.c?ref=5d7adf7a1573b3ab23d9a2d70fbf30a8ef0c4958", "patch": "@@ -145,7 +145,7 @@ count_8_l16 (gfc_array_i8 * const restrict retarray,\n              the next dimension.  */\n           count[n] = 0;\n           /* We could precalculate these products, but this is a less\n-             frequently used path so proabably not worth it.  */\n+             frequently used path so probably not worth it.  */\n           base -= sstride[n] * extent[n];\n           dest -= dstride[n] * extent[n];\n           n++;"}, {"sha": "1a5451bf3e2b7037cf43321b04d5f8a691716667", "filename": "libgfortran/generated/count_8_l4.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5d7adf7a1573b3ab23d9a2d70fbf30a8ef0c4958/libgfortran%2Fgenerated%2Fcount_8_l4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5d7adf7a1573b3ab23d9a2d70fbf30a8ef0c4958/libgfortran%2Fgenerated%2Fcount_8_l4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fcount_8_l4.c?ref=5d7adf7a1573b3ab23d9a2d70fbf30a8ef0c4958", "patch": "@@ -145,7 +145,7 @@ count_8_l4 (gfc_array_i8 * const restrict retarray,\n              the next dimension.  */\n           count[n] = 0;\n           /* We could precalculate these products, but this is a less\n-             frequently used path so proabably not worth it.  */\n+             frequently used path so probably not worth it.  */\n           base -= sstride[n] * extent[n];\n           dest -= dstride[n] * extent[n];\n           n++;"}, {"sha": "b255d9d36ab5973a2b27e5d5df703f56df998144", "filename": "libgfortran/generated/count_8_l8.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5d7adf7a1573b3ab23d9a2d70fbf30a8ef0c4958/libgfortran%2Fgenerated%2Fcount_8_l8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5d7adf7a1573b3ab23d9a2d70fbf30a8ef0c4958/libgfortran%2Fgenerated%2Fcount_8_l8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fcount_8_l8.c?ref=5d7adf7a1573b3ab23d9a2d70fbf30a8ef0c4958", "patch": "@@ -145,7 +145,7 @@ count_8_l8 (gfc_array_i8 * const restrict retarray,\n              the next dimension.  */\n           count[n] = 0;\n           /* We could precalculate these products, but this is a less\n-             frequently used path so proabably not worth it.  */\n+             frequently used path so probably not worth it.  */\n           base -= sstride[n] * extent[n];\n           dest -= dstride[n] * extent[n];\n           n++;"}, {"sha": "bf7845b7ac7ea4992f184c092fa9222844fc0610", "filename": "libgfortran/generated/cshift1_16.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5d7adf7a1573b3ab23d9a2d70fbf30a8ef0c4958/libgfortran%2Fgenerated%2Fcshift1_16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5d7adf7a1573b3ab23d9a2d70fbf30a8ef0c4958/libgfortran%2Fgenerated%2Fcshift1_16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fcshift1_16.c?ref=5d7adf7a1573b3ab23d9a2d70fbf30a8ef0c4958", "patch": "@@ -175,7 +175,7 @@ cshift1 (gfc_array_char * const restrict ret,\n              the next dimension.  */\n           count[n] = 0;\n           /* We could precalculate these products, but this is a less\n-             frequently used path so proabably not worth it.  */\n+             frequently used path so probably not worth it.  */\n           rptr -= rstride[n] * extent[n];\n           sptr -= sstride[n] * extent[n];\n \t  hptr -= hstride[n] * extent[n];"}, {"sha": "1b3d07f2942e511e855d992835d65d0e268738d7", "filename": "libgfortran/generated/cshift1_4.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5d7adf7a1573b3ab23d9a2d70fbf30a8ef0c4958/libgfortran%2Fgenerated%2Fcshift1_4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5d7adf7a1573b3ab23d9a2d70fbf30a8ef0c4958/libgfortran%2Fgenerated%2Fcshift1_4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fcshift1_4.c?ref=5d7adf7a1573b3ab23d9a2d70fbf30a8ef0c4958", "patch": "@@ -175,7 +175,7 @@ cshift1 (gfc_array_char * const restrict ret,\n              the next dimension.  */\n           count[n] = 0;\n           /* We could precalculate these products, but this is a less\n-             frequently used path so proabably not worth it.  */\n+             frequently used path so probably not worth it.  */\n           rptr -= rstride[n] * extent[n];\n           sptr -= sstride[n] * extent[n];\n \t  hptr -= hstride[n] * extent[n];"}, {"sha": "58fc03613628ca816a85581dbf0e2e6fe01af7c1", "filename": "libgfortran/generated/cshift1_8.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5d7adf7a1573b3ab23d9a2d70fbf30a8ef0c4958/libgfortran%2Fgenerated%2Fcshift1_8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5d7adf7a1573b3ab23d9a2d70fbf30a8ef0c4958/libgfortran%2Fgenerated%2Fcshift1_8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fcshift1_8.c?ref=5d7adf7a1573b3ab23d9a2d70fbf30a8ef0c4958", "patch": "@@ -175,7 +175,7 @@ cshift1 (gfc_array_char * const restrict ret,\n              the next dimension.  */\n           count[n] = 0;\n           /* We could precalculate these products, but this is a less\n-             frequently used path so proabably not worth it.  */\n+             frequently used path so probably not worth it.  */\n           rptr -= rstride[n] * extent[n];\n           sptr -= sstride[n] * extent[n];\n \t  hptr -= hstride[n] * extent[n];"}, {"sha": "4cb01c85d55cabd49ab6e0dd9600cb58e4b85e2a", "filename": "libgfortran/generated/eoshift1_16.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5d7adf7a1573b3ab23d9a2d70fbf30a8ef0c4958/libgfortran%2Fgenerated%2Feoshift1_16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5d7adf7a1573b3ab23d9a2d70fbf30a8ef0c4958/libgfortran%2Fgenerated%2Feoshift1_16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Feoshift1_16.c?ref=5d7adf7a1573b3ab23d9a2d70fbf30a8ef0c4958", "patch": "@@ -199,7 +199,7 @@ eoshift1 (gfc_array_char * const restrict ret,\n              the next dimension.  */\n           count[n] = 0;\n           /* We could precalculate these products, but this is a less\n-             frequently used path so proabably not worth it.  */\n+             frequently used path so probably not worth it.  */\n           rptr -= rstride[n] * extent[n];\n           sptr -= sstride[n] * extent[n];\n \t  hptr -= hstride[n] * extent[n];"}, {"sha": "2528597b46dd8ad8da14d4503ffdbd7d6199cf89", "filename": "libgfortran/generated/eoshift1_4.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5d7adf7a1573b3ab23d9a2d70fbf30a8ef0c4958/libgfortran%2Fgenerated%2Feoshift1_4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5d7adf7a1573b3ab23d9a2d70fbf30a8ef0c4958/libgfortran%2Fgenerated%2Feoshift1_4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Feoshift1_4.c?ref=5d7adf7a1573b3ab23d9a2d70fbf30a8ef0c4958", "patch": "@@ -199,7 +199,7 @@ eoshift1 (gfc_array_char * const restrict ret,\n              the next dimension.  */\n           count[n] = 0;\n           /* We could precalculate these products, but this is a less\n-             frequently used path so proabably not worth it.  */\n+             frequently used path so probably not worth it.  */\n           rptr -= rstride[n] * extent[n];\n           sptr -= sstride[n] * extent[n];\n \t  hptr -= hstride[n] * extent[n];"}, {"sha": "0ca9844e2930e54f66b49014e95d1772f9d426ef", "filename": "libgfortran/generated/eoshift1_8.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5d7adf7a1573b3ab23d9a2d70fbf30a8ef0c4958/libgfortran%2Fgenerated%2Feoshift1_8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5d7adf7a1573b3ab23d9a2d70fbf30a8ef0c4958/libgfortran%2Fgenerated%2Feoshift1_8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Feoshift1_8.c?ref=5d7adf7a1573b3ab23d9a2d70fbf30a8ef0c4958", "patch": "@@ -199,7 +199,7 @@ eoshift1 (gfc_array_char * const restrict ret,\n              the next dimension.  */\n           count[n] = 0;\n           /* We could precalculate these products, but this is a less\n-             frequently used path so proabably not worth it.  */\n+             frequently used path so probably not worth it.  */\n           rptr -= rstride[n] * extent[n];\n           sptr -= sstride[n] * extent[n];\n \t  hptr -= hstride[n] * extent[n];"}, {"sha": "3c75a42ae8f62592de42bf6b4cf432d0ec7df954", "filename": "libgfortran/generated/eoshift3_16.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5d7adf7a1573b3ab23d9a2d70fbf30a8ef0c4958/libgfortran%2Fgenerated%2Feoshift3_16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5d7adf7a1573b3ab23d9a2d70fbf30a8ef0c4958/libgfortran%2Fgenerated%2Feoshift3_16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Feoshift3_16.c?ref=5d7adf7a1573b3ab23d9a2d70fbf30a8ef0c4958", "patch": "@@ -215,7 +215,7 @@ eoshift3 (gfc_array_char * const restrict ret,\n              the next dimension.  */\n           count[n] = 0;\n           /* We could precalculate these products, but this is a less\n-             frequently used path so proabably not worth it.  */\n+             frequently used path so probably not worth it.  */\n           rptr -= rstride[n] * extent[n];\n           sptr -= sstride[n] * extent[n];\n \t  hptr -= hstride[n] * extent[n];"}, {"sha": "a8e54d06049a97f78f4dec449f62a059833dba18", "filename": "libgfortran/generated/eoshift3_4.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5d7adf7a1573b3ab23d9a2d70fbf30a8ef0c4958/libgfortran%2Fgenerated%2Feoshift3_4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5d7adf7a1573b3ab23d9a2d70fbf30a8ef0c4958/libgfortran%2Fgenerated%2Feoshift3_4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Feoshift3_4.c?ref=5d7adf7a1573b3ab23d9a2d70fbf30a8ef0c4958", "patch": "@@ -215,7 +215,7 @@ eoshift3 (gfc_array_char * const restrict ret,\n              the next dimension.  */\n           count[n] = 0;\n           /* We could precalculate these products, but this is a less\n-             frequently used path so proabably not worth it.  */\n+             frequently used path so probably not worth it.  */\n           rptr -= rstride[n] * extent[n];\n           sptr -= sstride[n] * extent[n];\n \t  hptr -= hstride[n] * extent[n];"}, {"sha": "8590554b0d2e3510da93d012e4d0d1a7e40569d3", "filename": "libgfortran/generated/eoshift3_8.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5d7adf7a1573b3ab23d9a2d70fbf30a8ef0c4958/libgfortran%2Fgenerated%2Feoshift3_8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5d7adf7a1573b3ab23d9a2d70fbf30a8ef0c4958/libgfortran%2Fgenerated%2Feoshift3_8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Feoshift3_8.c?ref=5d7adf7a1573b3ab23d9a2d70fbf30a8ef0c4958", "patch": "@@ -215,7 +215,7 @@ eoshift3 (gfc_array_char * const restrict ret,\n              the next dimension.  */\n           count[n] = 0;\n           /* We could precalculate these products, but this is a less\n-             frequently used path so proabably not worth it.  */\n+             frequently used path so probably not worth it.  */\n           rptr -= rstride[n] * extent[n];\n           sptr -= sstride[n] * extent[n];\n \t  hptr -= hstride[n] * extent[n];"}, {"sha": "2c5326f9c0d7b865b59497b62d46fe9aa7a66457", "filename": "libgfortran/generated/in_pack_c10.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5d7adf7a1573b3ab23d9a2d70fbf30a8ef0c4958/libgfortran%2Fgenerated%2Fin_pack_c10.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5d7adf7a1573b3ab23d9a2d70fbf30a8ef0c4958/libgfortran%2Fgenerated%2Fin_pack_c10.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fin_pack_c10.c?ref=5d7adf7a1573b3ab23d9a2d70fbf30a8ef0c4958", "patch": "@@ -102,7 +102,7 @@ internal_pack_c10 (gfc_array_c10 * source)\n              the next dimension.  */\n           count[n] = 0;\n           /* We could precalculate these products, but this is a less\n-             frequently used path so proabably not worth it.  */\n+             frequently used path so probably not worth it.  */\n           src -= stride[n] * extent[n];\n           n++;\n           if (n == dim)"}, {"sha": "912858b35f213aaa423cb473831716e5afefa113", "filename": "libgfortran/generated/in_pack_c16.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5d7adf7a1573b3ab23d9a2d70fbf30a8ef0c4958/libgfortran%2Fgenerated%2Fin_pack_c16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5d7adf7a1573b3ab23d9a2d70fbf30a8ef0c4958/libgfortran%2Fgenerated%2Fin_pack_c16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fin_pack_c16.c?ref=5d7adf7a1573b3ab23d9a2d70fbf30a8ef0c4958", "patch": "@@ -102,7 +102,7 @@ internal_pack_c16 (gfc_array_c16 * source)\n              the next dimension.  */\n           count[n] = 0;\n           /* We could precalculate these products, but this is a less\n-             frequently used path so proabably not worth it.  */\n+             frequently used path so probably not worth it.  */\n           src -= stride[n] * extent[n];\n           n++;\n           if (n == dim)"}, {"sha": "e4a7fc84f423b32cf3ba0fa61510e77d61821f35", "filename": "libgfortran/generated/in_pack_c4.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5d7adf7a1573b3ab23d9a2d70fbf30a8ef0c4958/libgfortran%2Fgenerated%2Fin_pack_c4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5d7adf7a1573b3ab23d9a2d70fbf30a8ef0c4958/libgfortran%2Fgenerated%2Fin_pack_c4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fin_pack_c4.c?ref=5d7adf7a1573b3ab23d9a2d70fbf30a8ef0c4958", "patch": "@@ -102,7 +102,7 @@ internal_pack_c4 (gfc_array_c4 * source)\n              the next dimension.  */\n           count[n] = 0;\n           /* We could precalculate these products, but this is a less\n-             frequently used path so proabably not worth it.  */\n+             frequently used path so probably not worth it.  */\n           src -= stride[n] * extent[n];\n           n++;\n           if (n == dim)"}, {"sha": "17a3bdedbd53cc2b0d9c487d8cff255c93ac774c", "filename": "libgfortran/generated/in_pack_c8.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5d7adf7a1573b3ab23d9a2d70fbf30a8ef0c4958/libgfortran%2Fgenerated%2Fin_pack_c8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5d7adf7a1573b3ab23d9a2d70fbf30a8ef0c4958/libgfortran%2Fgenerated%2Fin_pack_c8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fin_pack_c8.c?ref=5d7adf7a1573b3ab23d9a2d70fbf30a8ef0c4958", "patch": "@@ -102,7 +102,7 @@ internal_pack_c8 (gfc_array_c8 * source)\n              the next dimension.  */\n           count[n] = 0;\n           /* We could precalculate these products, but this is a less\n-             frequently used path so proabably not worth it.  */\n+             frequently used path so probably not worth it.  */\n           src -= stride[n] * extent[n];\n           n++;\n           if (n == dim)"}, {"sha": "96a2bb4a5cf1ce3b0525e6e0c942270de6da2434", "filename": "libgfortran/generated/in_pack_i16.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5d7adf7a1573b3ab23d9a2d70fbf30a8ef0c4958/libgfortran%2Fgenerated%2Fin_pack_i16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5d7adf7a1573b3ab23d9a2d70fbf30a8ef0c4958/libgfortran%2Fgenerated%2Fin_pack_i16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fin_pack_i16.c?ref=5d7adf7a1573b3ab23d9a2d70fbf30a8ef0c4958", "patch": "@@ -102,7 +102,7 @@ internal_pack_16 (gfc_array_i16 * source)\n              the next dimension.  */\n           count[n] = 0;\n           /* We could precalculate these products, but this is a less\n-             frequently used path so proabably not worth it.  */\n+             frequently used path so probably not worth it.  */\n           src -= stride[n] * extent[n];\n           n++;\n           if (n == dim)"}, {"sha": "04e17b817e3f8a65a987a2c74824c334cff32ea4", "filename": "libgfortran/generated/in_pack_i4.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5d7adf7a1573b3ab23d9a2d70fbf30a8ef0c4958/libgfortran%2Fgenerated%2Fin_pack_i4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5d7adf7a1573b3ab23d9a2d70fbf30a8ef0c4958/libgfortran%2Fgenerated%2Fin_pack_i4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fin_pack_i4.c?ref=5d7adf7a1573b3ab23d9a2d70fbf30a8ef0c4958", "patch": "@@ -102,7 +102,7 @@ internal_pack_4 (gfc_array_i4 * source)\n              the next dimension.  */\n           count[n] = 0;\n           /* We could precalculate these products, but this is a less\n-             frequently used path so proabably not worth it.  */\n+             frequently used path so probably not worth it.  */\n           src -= stride[n] * extent[n];\n           n++;\n           if (n == dim)"}, {"sha": "f7b27e05ea1e456ba4d624f6abbc15890f429eb8", "filename": "libgfortran/generated/in_pack_i8.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5d7adf7a1573b3ab23d9a2d70fbf30a8ef0c4958/libgfortran%2Fgenerated%2Fin_pack_i8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5d7adf7a1573b3ab23d9a2d70fbf30a8ef0c4958/libgfortran%2Fgenerated%2Fin_pack_i8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fin_pack_i8.c?ref=5d7adf7a1573b3ab23d9a2d70fbf30a8ef0c4958", "patch": "@@ -102,7 +102,7 @@ internal_pack_8 (gfc_array_i8 * source)\n              the next dimension.  */\n           count[n] = 0;\n           /* We could precalculate these products, but this is a less\n-             frequently used path so proabably not worth it.  */\n+             frequently used path so probably not worth it.  */\n           src -= stride[n] * extent[n];\n           n++;\n           if (n == dim)"}, {"sha": "96e6833a0343dfc23e29728add4d8d0ff92ab918", "filename": "libgfortran/generated/in_unpack_c10.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5d7adf7a1573b3ab23d9a2d70fbf30a8ef0c4958/libgfortran%2Fgenerated%2Fin_unpack_c10.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5d7adf7a1573b3ab23d9a2d70fbf30a8ef0c4958/libgfortran%2Fgenerated%2Fin_unpack_c10.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fin_unpack_c10.c?ref=5d7adf7a1573b3ab23d9a2d70fbf30a8ef0c4958", "patch": "@@ -91,7 +91,7 @@ internal_unpack_c10 (gfc_array_c10 * d, const GFC_COMPLEX_10 * src)\n              the next dimension.  */\n           count[n] = 0;\n           /* We could precalculate these products, but this is a less\n-             frequently used path so proabably not worth it.  */\n+             frequently used path so probably not worth it.  */\n           dest -= stride[n] * extent[n];\n           n++;\n           if (n == dim)"}, {"sha": "3c2fc796981215f0f812366e382a59941c570973", "filename": "libgfortran/generated/in_unpack_c16.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5d7adf7a1573b3ab23d9a2d70fbf30a8ef0c4958/libgfortran%2Fgenerated%2Fin_unpack_c16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5d7adf7a1573b3ab23d9a2d70fbf30a8ef0c4958/libgfortran%2Fgenerated%2Fin_unpack_c16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fin_unpack_c16.c?ref=5d7adf7a1573b3ab23d9a2d70fbf30a8ef0c4958", "patch": "@@ -91,7 +91,7 @@ internal_unpack_c16 (gfc_array_c16 * d, const GFC_COMPLEX_16 * src)\n              the next dimension.  */\n           count[n] = 0;\n           /* We could precalculate these products, but this is a less\n-             frequently used path so proabably not worth it.  */\n+             frequently used path so probably not worth it.  */\n           dest -= stride[n] * extent[n];\n           n++;\n           if (n == dim)"}, {"sha": "9ea8a36b1254550b4ab5839b2e474669f5ef8e09", "filename": "libgfortran/generated/in_unpack_c4.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5d7adf7a1573b3ab23d9a2d70fbf30a8ef0c4958/libgfortran%2Fgenerated%2Fin_unpack_c4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5d7adf7a1573b3ab23d9a2d70fbf30a8ef0c4958/libgfortran%2Fgenerated%2Fin_unpack_c4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fin_unpack_c4.c?ref=5d7adf7a1573b3ab23d9a2d70fbf30a8ef0c4958", "patch": "@@ -91,7 +91,7 @@ internal_unpack_c4 (gfc_array_c4 * d, const GFC_COMPLEX_4 * src)\n              the next dimension.  */\n           count[n] = 0;\n           /* We could precalculate these products, but this is a less\n-             frequently used path so proabably not worth it.  */\n+             frequently used path so probably not worth it.  */\n           dest -= stride[n] * extent[n];\n           n++;\n           if (n == dim)"}, {"sha": "a71a71948ea66057eb97ed74515a496da89b07f9", "filename": "libgfortran/generated/in_unpack_c8.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5d7adf7a1573b3ab23d9a2d70fbf30a8ef0c4958/libgfortran%2Fgenerated%2Fin_unpack_c8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5d7adf7a1573b3ab23d9a2d70fbf30a8ef0c4958/libgfortran%2Fgenerated%2Fin_unpack_c8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fin_unpack_c8.c?ref=5d7adf7a1573b3ab23d9a2d70fbf30a8ef0c4958", "patch": "@@ -91,7 +91,7 @@ internal_unpack_c8 (gfc_array_c8 * d, const GFC_COMPLEX_8 * src)\n              the next dimension.  */\n           count[n] = 0;\n           /* We could precalculate these products, but this is a less\n-             frequently used path so proabably not worth it.  */\n+             frequently used path so probably not worth it.  */\n           dest -= stride[n] * extent[n];\n           n++;\n           if (n == dim)"}, {"sha": "f8f6ea74b953421026e199de40849310947e33c8", "filename": "libgfortran/generated/in_unpack_i16.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5d7adf7a1573b3ab23d9a2d70fbf30a8ef0c4958/libgfortran%2Fgenerated%2Fin_unpack_i16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5d7adf7a1573b3ab23d9a2d70fbf30a8ef0c4958/libgfortran%2Fgenerated%2Fin_unpack_i16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fin_unpack_i16.c?ref=5d7adf7a1573b3ab23d9a2d70fbf30a8ef0c4958", "patch": "@@ -91,7 +91,7 @@ internal_unpack_16 (gfc_array_i16 * d, const GFC_INTEGER_16 * src)\n              the next dimension.  */\n           count[n] = 0;\n           /* We could precalculate these products, but this is a less\n-             frequently used path so proabably not worth it.  */\n+             frequently used path so probably not worth it.  */\n           dest -= stride[n] * extent[n];\n           n++;\n           if (n == dim)"}, {"sha": "3ac0298bcd1b403b9fc82de0412e3226191fd6cd", "filename": "libgfortran/generated/in_unpack_i4.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5d7adf7a1573b3ab23d9a2d70fbf30a8ef0c4958/libgfortran%2Fgenerated%2Fin_unpack_i4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5d7adf7a1573b3ab23d9a2d70fbf30a8ef0c4958/libgfortran%2Fgenerated%2Fin_unpack_i4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fin_unpack_i4.c?ref=5d7adf7a1573b3ab23d9a2d70fbf30a8ef0c4958", "patch": "@@ -91,7 +91,7 @@ internal_unpack_4 (gfc_array_i4 * d, const GFC_INTEGER_4 * src)\n              the next dimension.  */\n           count[n] = 0;\n           /* We could precalculate these products, but this is a less\n-             frequently used path so proabably not worth it.  */\n+             frequently used path so probably not worth it.  */\n           dest -= stride[n] * extent[n];\n           n++;\n           if (n == dim)"}, {"sha": "84e28f94ae92dbf58dfb94ec0c1c682d4d6be2ba", "filename": "libgfortran/generated/in_unpack_i8.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5d7adf7a1573b3ab23d9a2d70fbf30a8ef0c4958/libgfortran%2Fgenerated%2Fin_unpack_i8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5d7adf7a1573b3ab23d9a2d70fbf30a8ef0c4958/libgfortran%2Fgenerated%2Fin_unpack_i8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fin_unpack_i8.c?ref=5d7adf7a1573b3ab23d9a2d70fbf30a8ef0c4958", "patch": "@@ -91,7 +91,7 @@ internal_unpack_8 (gfc_array_i8 * d, const GFC_INTEGER_8 * src)\n              the next dimension.  */\n           count[n] = 0;\n           /* We could precalculate these products, but this is a less\n-             frequently used path so proabably not worth it.  */\n+             frequently used path so probably not worth it.  */\n           dest -= stride[n] * extent[n];\n           n++;\n           if (n == dim)"}, {"sha": "04ebbd4fdc182065c2d0b5db179c62f56da21aaf", "filename": "libgfortran/generated/maxloc0_16_i16.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5d7adf7a1573b3ab23d9a2d70fbf30a8ef0c4958/libgfortran%2Fgenerated%2Fmaxloc0_16_i16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5d7adf7a1573b3ab23d9a2d70fbf30a8ef0c4958/libgfortran%2Fgenerated%2Fmaxloc0_16_i16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmaxloc0_16_i16.c?ref=5d7adf7a1573b3ab23d9a2d70fbf30a8ef0c4958", "patch": "@@ -128,7 +128,7 @@ maxloc0_16_i16 (gfc_array_i16 * const restrict retarray,\n              the next dimension.  */\n           count[n] = 0;\n           /* We could precalculate these products, but this is a less\n-             frequently used path so proabably not worth it.  */\n+             frequently used path so probably not worth it.  */\n           base -= sstride[n] * extent[n];\n           n++;\n           if (n == rank)\n@@ -253,7 +253,7 @@ mmaxloc0_16_i16 (gfc_array_i16 * const restrict retarray,\n              the next dimension.  */\n           count[n] = 0;\n           /* We could precalculate these products, but this is a less\n-             frequently used path so proabably not worth it.  */\n+             frequently used path so probably not worth it.  */\n           base -= sstride[n] * extent[n];\n           mbase -= mstride[n] * extent[n];\n           n++;"}, {"sha": "4362fa889b50ed863fbc95c0e3a0538b24a2339c", "filename": "libgfortran/generated/maxloc0_16_i4.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5d7adf7a1573b3ab23d9a2d70fbf30a8ef0c4958/libgfortran%2Fgenerated%2Fmaxloc0_16_i4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5d7adf7a1573b3ab23d9a2d70fbf30a8ef0c4958/libgfortran%2Fgenerated%2Fmaxloc0_16_i4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmaxloc0_16_i4.c?ref=5d7adf7a1573b3ab23d9a2d70fbf30a8ef0c4958", "patch": "@@ -128,7 +128,7 @@ maxloc0_16_i4 (gfc_array_i16 * const restrict retarray,\n              the next dimension.  */\n           count[n] = 0;\n           /* We could precalculate these products, but this is a less\n-             frequently used path so proabably not worth it.  */\n+             frequently used path so probably not worth it.  */\n           base -= sstride[n] * extent[n];\n           n++;\n           if (n == rank)\n@@ -253,7 +253,7 @@ mmaxloc0_16_i4 (gfc_array_i16 * const restrict retarray,\n              the next dimension.  */\n           count[n] = 0;\n           /* We could precalculate these products, but this is a less\n-             frequently used path so proabably not worth it.  */\n+             frequently used path so probably not worth it.  */\n           base -= sstride[n] * extent[n];\n           mbase -= mstride[n] * extent[n];\n           n++;"}, {"sha": "aeb0aedcb296ff91a31031688386a5437abe5dc9", "filename": "libgfortran/generated/maxloc0_16_i8.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5d7adf7a1573b3ab23d9a2d70fbf30a8ef0c4958/libgfortran%2Fgenerated%2Fmaxloc0_16_i8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5d7adf7a1573b3ab23d9a2d70fbf30a8ef0c4958/libgfortran%2Fgenerated%2Fmaxloc0_16_i8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmaxloc0_16_i8.c?ref=5d7adf7a1573b3ab23d9a2d70fbf30a8ef0c4958", "patch": "@@ -128,7 +128,7 @@ maxloc0_16_i8 (gfc_array_i16 * const restrict retarray,\n              the next dimension.  */\n           count[n] = 0;\n           /* We could precalculate these products, but this is a less\n-             frequently used path so proabably not worth it.  */\n+             frequently used path so probably not worth it.  */\n           base -= sstride[n] * extent[n];\n           n++;\n           if (n == rank)\n@@ -253,7 +253,7 @@ mmaxloc0_16_i8 (gfc_array_i16 * const restrict retarray,\n              the next dimension.  */\n           count[n] = 0;\n           /* We could precalculate these products, but this is a less\n-             frequently used path so proabably not worth it.  */\n+             frequently used path so probably not worth it.  */\n           base -= sstride[n] * extent[n];\n           mbase -= mstride[n] * extent[n];\n           n++;"}, {"sha": "e170fca9faa54d01a19b932419c4d984bc1210cb", "filename": "libgfortran/generated/maxloc0_16_r10.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5d7adf7a1573b3ab23d9a2d70fbf30a8ef0c4958/libgfortran%2Fgenerated%2Fmaxloc0_16_r10.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5d7adf7a1573b3ab23d9a2d70fbf30a8ef0c4958/libgfortran%2Fgenerated%2Fmaxloc0_16_r10.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmaxloc0_16_r10.c?ref=5d7adf7a1573b3ab23d9a2d70fbf30a8ef0c4958", "patch": "@@ -128,7 +128,7 @@ maxloc0_16_r10 (gfc_array_i16 * const restrict retarray,\n              the next dimension.  */\n           count[n] = 0;\n           /* We could precalculate these products, but this is a less\n-             frequently used path so proabably not worth it.  */\n+             frequently used path so probably not worth it.  */\n           base -= sstride[n] * extent[n];\n           n++;\n           if (n == rank)\n@@ -253,7 +253,7 @@ mmaxloc0_16_r10 (gfc_array_i16 * const restrict retarray,\n              the next dimension.  */\n           count[n] = 0;\n           /* We could precalculate these products, but this is a less\n-             frequently used path so proabably not worth it.  */\n+             frequently used path so probably not worth it.  */\n           base -= sstride[n] * extent[n];\n           mbase -= mstride[n] * extent[n];\n           n++;"}, {"sha": "4f2c466c92af22c64203fd8bac4876472ec69950", "filename": "libgfortran/generated/maxloc0_16_r16.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5d7adf7a1573b3ab23d9a2d70fbf30a8ef0c4958/libgfortran%2Fgenerated%2Fmaxloc0_16_r16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5d7adf7a1573b3ab23d9a2d70fbf30a8ef0c4958/libgfortran%2Fgenerated%2Fmaxloc0_16_r16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmaxloc0_16_r16.c?ref=5d7adf7a1573b3ab23d9a2d70fbf30a8ef0c4958", "patch": "@@ -128,7 +128,7 @@ maxloc0_16_r16 (gfc_array_i16 * const restrict retarray,\n              the next dimension.  */\n           count[n] = 0;\n           /* We could precalculate these products, but this is a less\n-             frequently used path so proabably not worth it.  */\n+             frequently used path so probably not worth it.  */\n           base -= sstride[n] * extent[n];\n           n++;\n           if (n == rank)\n@@ -253,7 +253,7 @@ mmaxloc0_16_r16 (gfc_array_i16 * const restrict retarray,\n              the next dimension.  */\n           count[n] = 0;\n           /* We could precalculate these products, but this is a less\n-             frequently used path so proabably not worth it.  */\n+             frequently used path so probably not worth it.  */\n           base -= sstride[n] * extent[n];\n           mbase -= mstride[n] * extent[n];\n           n++;"}, {"sha": "bc4a63d00753ad83fb411a5a209ec78156a57d9d", "filename": "libgfortran/generated/maxloc0_16_r4.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5d7adf7a1573b3ab23d9a2d70fbf30a8ef0c4958/libgfortran%2Fgenerated%2Fmaxloc0_16_r4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5d7adf7a1573b3ab23d9a2d70fbf30a8ef0c4958/libgfortran%2Fgenerated%2Fmaxloc0_16_r4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmaxloc0_16_r4.c?ref=5d7adf7a1573b3ab23d9a2d70fbf30a8ef0c4958", "patch": "@@ -128,7 +128,7 @@ maxloc0_16_r4 (gfc_array_i16 * const restrict retarray,\n              the next dimension.  */\n           count[n] = 0;\n           /* We could precalculate these products, but this is a less\n-             frequently used path so proabably not worth it.  */\n+             frequently used path so probably not worth it.  */\n           base -= sstride[n] * extent[n];\n           n++;\n           if (n == rank)\n@@ -253,7 +253,7 @@ mmaxloc0_16_r4 (gfc_array_i16 * const restrict retarray,\n              the next dimension.  */\n           count[n] = 0;\n           /* We could precalculate these products, but this is a less\n-             frequently used path so proabably not worth it.  */\n+             frequently used path so probably not worth it.  */\n           base -= sstride[n] * extent[n];\n           mbase -= mstride[n] * extent[n];\n           n++;"}, {"sha": "ed51b8a55ef47ae20739f4b51973f20f4f1cf722", "filename": "libgfortran/generated/maxloc0_16_r8.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5d7adf7a1573b3ab23d9a2d70fbf30a8ef0c4958/libgfortran%2Fgenerated%2Fmaxloc0_16_r8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5d7adf7a1573b3ab23d9a2d70fbf30a8ef0c4958/libgfortran%2Fgenerated%2Fmaxloc0_16_r8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmaxloc0_16_r8.c?ref=5d7adf7a1573b3ab23d9a2d70fbf30a8ef0c4958", "patch": "@@ -128,7 +128,7 @@ maxloc0_16_r8 (gfc_array_i16 * const restrict retarray,\n              the next dimension.  */\n           count[n] = 0;\n           /* We could precalculate these products, but this is a less\n-             frequently used path so proabably not worth it.  */\n+             frequently used path so probably not worth it.  */\n           base -= sstride[n] * extent[n];\n           n++;\n           if (n == rank)\n@@ -253,7 +253,7 @@ mmaxloc0_16_r8 (gfc_array_i16 * const restrict retarray,\n              the next dimension.  */\n           count[n] = 0;\n           /* We could precalculate these products, but this is a less\n-             frequently used path so proabably not worth it.  */\n+             frequently used path so probably not worth it.  */\n           base -= sstride[n] * extent[n];\n           mbase -= mstride[n] * extent[n];\n           n++;"}, {"sha": "6d052911f44828a510613660c62744ab331e3c3c", "filename": "libgfortran/generated/maxloc0_4_i16.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5d7adf7a1573b3ab23d9a2d70fbf30a8ef0c4958/libgfortran%2Fgenerated%2Fmaxloc0_4_i16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5d7adf7a1573b3ab23d9a2d70fbf30a8ef0c4958/libgfortran%2Fgenerated%2Fmaxloc0_4_i16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmaxloc0_4_i16.c?ref=5d7adf7a1573b3ab23d9a2d70fbf30a8ef0c4958", "patch": "@@ -128,7 +128,7 @@ maxloc0_4_i16 (gfc_array_i4 * const restrict retarray,\n              the next dimension.  */\n           count[n] = 0;\n           /* We could precalculate these products, but this is a less\n-             frequently used path so proabably not worth it.  */\n+             frequently used path so probably not worth it.  */\n           base -= sstride[n] * extent[n];\n           n++;\n           if (n == rank)\n@@ -253,7 +253,7 @@ mmaxloc0_4_i16 (gfc_array_i4 * const restrict retarray,\n              the next dimension.  */\n           count[n] = 0;\n           /* We could precalculate these products, but this is a less\n-             frequently used path so proabably not worth it.  */\n+             frequently used path so probably not worth it.  */\n           base -= sstride[n] * extent[n];\n           mbase -= mstride[n] * extent[n];\n           n++;"}, {"sha": "16ee31ede316b6a28fa24a581498b51de0a131ac", "filename": "libgfortran/generated/maxloc0_4_i4.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5d7adf7a1573b3ab23d9a2d70fbf30a8ef0c4958/libgfortran%2Fgenerated%2Fmaxloc0_4_i4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5d7adf7a1573b3ab23d9a2d70fbf30a8ef0c4958/libgfortran%2Fgenerated%2Fmaxloc0_4_i4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmaxloc0_4_i4.c?ref=5d7adf7a1573b3ab23d9a2d70fbf30a8ef0c4958", "patch": "@@ -128,7 +128,7 @@ maxloc0_4_i4 (gfc_array_i4 * const restrict retarray,\n              the next dimension.  */\n           count[n] = 0;\n           /* We could precalculate these products, but this is a less\n-             frequently used path so proabably not worth it.  */\n+             frequently used path so probably not worth it.  */\n           base -= sstride[n] * extent[n];\n           n++;\n           if (n == rank)\n@@ -253,7 +253,7 @@ mmaxloc0_4_i4 (gfc_array_i4 * const restrict retarray,\n              the next dimension.  */\n           count[n] = 0;\n           /* We could precalculate these products, but this is a less\n-             frequently used path so proabably not worth it.  */\n+             frequently used path so probably not worth it.  */\n           base -= sstride[n] * extent[n];\n           mbase -= mstride[n] * extent[n];\n           n++;"}, {"sha": "58c6509d23d43549773967555ce65521e81a3193", "filename": "libgfortran/generated/maxloc0_4_i8.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5d7adf7a1573b3ab23d9a2d70fbf30a8ef0c4958/libgfortran%2Fgenerated%2Fmaxloc0_4_i8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5d7adf7a1573b3ab23d9a2d70fbf30a8ef0c4958/libgfortran%2Fgenerated%2Fmaxloc0_4_i8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmaxloc0_4_i8.c?ref=5d7adf7a1573b3ab23d9a2d70fbf30a8ef0c4958", "patch": "@@ -128,7 +128,7 @@ maxloc0_4_i8 (gfc_array_i4 * const restrict retarray,\n              the next dimension.  */\n           count[n] = 0;\n           /* We could precalculate these products, but this is a less\n-             frequently used path so proabably not worth it.  */\n+             frequently used path so probably not worth it.  */\n           base -= sstride[n] * extent[n];\n           n++;\n           if (n == rank)\n@@ -253,7 +253,7 @@ mmaxloc0_4_i8 (gfc_array_i4 * const restrict retarray,\n              the next dimension.  */\n           count[n] = 0;\n           /* We could precalculate these products, but this is a less\n-             frequently used path so proabably not worth it.  */\n+             frequently used path so probably not worth it.  */\n           base -= sstride[n] * extent[n];\n           mbase -= mstride[n] * extent[n];\n           n++;"}, {"sha": "e918875362e5a41e410222e4141a9cec8685a6c6", "filename": "libgfortran/generated/maxloc0_4_r10.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5d7adf7a1573b3ab23d9a2d70fbf30a8ef0c4958/libgfortran%2Fgenerated%2Fmaxloc0_4_r10.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5d7adf7a1573b3ab23d9a2d70fbf30a8ef0c4958/libgfortran%2Fgenerated%2Fmaxloc0_4_r10.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmaxloc0_4_r10.c?ref=5d7adf7a1573b3ab23d9a2d70fbf30a8ef0c4958", "patch": "@@ -128,7 +128,7 @@ maxloc0_4_r10 (gfc_array_i4 * const restrict retarray,\n              the next dimension.  */\n           count[n] = 0;\n           /* We could precalculate these products, but this is a less\n-             frequently used path so proabably not worth it.  */\n+             frequently used path so probably not worth it.  */\n           base -= sstride[n] * extent[n];\n           n++;\n           if (n == rank)\n@@ -253,7 +253,7 @@ mmaxloc0_4_r10 (gfc_array_i4 * const restrict retarray,\n              the next dimension.  */\n           count[n] = 0;\n           /* We could precalculate these products, but this is a less\n-             frequently used path so proabably not worth it.  */\n+             frequently used path so probably not worth it.  */\n           base -= sstride[n] * extent[n];\n           mbase -= mstride[n] * extent[n];\n           n++;"}, {"sha": "ec0b06e6509a7e480d7975966fe8d12326e30097", "filename": "libgfortran/generated/maxloc0_4_r16.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5d7adf7a1573b3ab23d9a2d70fbf30a8ef0c4958/libgfortran%2Fgenerated%2Fmaxloc0_4_r16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5d7adf7a1573b3ab23d9a2d70fbf30a8ef0c4958/libgfortran%2Fgenerated%2Fmaxloc0_4_r16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmaxloc0_4_r16.c?ref=5d7adf7a1573b3ab23d9a2d70fbf30a8ef0c4958", "patch": "@@ -128,7 +128,7 @@ maxloc0_4_r16 (gfc_array_i4 * const restrict retarray,\n              the next dimension.  */\n           count[n] = 0;\n           /* We could precalculate these products, but this is a less\n-             frequently used path so proabably not worth it.  */\n+             frequently used path so probably not worth it.  */\n           base -= sstride[n] * extent[n];\n           n++;\n           if (n == rank)\n@@ -253,7 +253,7 @@ mmaxloc0_4_r16 (gfc_array_i4 * const restrict retarray,\n              the next dimension.  */\n           count[n] = 0;\n           /* We could precalculate these products, but this is a less\n-             frequently used path so proabably not worth it.  */\n+             frequently used path so probably not worth it.  */\n           base -= sstride[n] * extent[n];\n           mbase -= mstride[n] * extent[n];\n           n++;"}, {"sha": "1e7f1705343b6627f023ee252045fd67ca093289", "filename": "libgfortran/generated/maxloc0_4_r4.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5d7adf7a1573b3ab23d9a2d70fbf30a8ef0c4958/libgfortran%2Fgenerated%2Fmaxloc0_4_r4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5d7adf7a1573b3ab23d9a2d70fbf30a8ef0c4958/libgfortran%2Fgenerated%2Fmaxloc0_4_r4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmaxloc0_4_r4.c?ref=5d7adf7a1573b3ab23d9a2d70fbf30a8ef0c4958", "patch": "@@ -128,7 +128,7 @@ maxloc0_4_r4 (gfc_array_i4 * const restrict retarray,\n              the next dimension.  */\n           count[n] = 0;\n           /* We could precalculate these products, but this is a less\n-             frequently used path so proabably not worth it.  */\n+             frequently used path so probably not worth it.  */\n           base -= sstride[n] * extent[n];\n           n++;\n           if (n == rank)\n@@ -253,7 +253,7 @@ mmaxloc0_4_r4 (gfc_array_i4 * const restrict retarray,\n              the next dimension.  */\n           count[n] = 0;\n           /* We could precalculate these products, but this is a less\n-             frequently used path so proabably not worth it.  */\n+             frequently used path so probably not worth it.  */\n           base -= sstride[n] * extent[n];\n           mbase -= mstride[n] * extent[n];\n           n++;"}, {"sha": "7afbfcde32c6159ebdbadacf1f2ae93fd2777e07", "filename": "libgfortran/generated/maxloc0_4_r8.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5d7adf7a1573b3ab23d9a2d70fbf30a8ef0c4958/libgfortran%2Fgenerated%2Fmaxloc0_4_r8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5d7adf7a1573b3ab23d9a2d70fbf30a8ef0c4958/libgfortran%2Fgenerated%2Fmaxloc0_4_r8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmaxloc0_4_r8.c?ref=5d7adf7a1573b3ab23d9a2d70fbf30a8ef0c4958", "patch": "@@ -128,7 +128,7 @@ maxloc0_4_r8 (gfc_array_i4 * const restrict retarray,\n              the next dimension.  */\n           count[n] = 0;\n           /* We could precalculate these products, but this is a less\n-             frequently used path so proabably not worth it.  */\n+             frequently used path so probably not worth it.  */\n           base -= sstride[n] * extent[n];\n           n++;\n           if (n == rank)\n@@ -253,7 +253,7 @@ mmaxloc0_4_r8 (gfc_array_i4 * const restrict retarray,\n              the next dimension.  */\n           count[n] = 0;\n           /* We could precalculate these products, but this is a less\n-             frequently used path so proabably not worth it.  */\n+             frequently used path so probably not worth it.  */\n           base -= sstride[n] * extent[n];\n           mbase -= mstride[n] * extent[n];\n           n++;"}, {"sha": "4400a5b52f48fba4b193534f8e26e5dac498da1a", "filename": "libgfortran/generated/maxloc0_8_i16.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5d7adf7a1573b3ab23d9a2d70fbf30a8ef0c4958/libgfortran%2Fgenerated%2Fmaxloc0_8_i16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5d7adf7a1573b3ab23d9a2d70fbf30a8ef0c4958/libgfortran%2Fgenerated%2Fmaxloc0_8_i16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmaxloc0_8_i16.c?ref=5d7adf7a1573b3ab23d9a2d70fbf30a8ef0c4958", "patch": "@@ -128,7 +128,7 @@ maxloc0_8_i16 (gfc_array_i8 * const restrict retarray,\n              the next dimension.  */\n           count[n] = 0;\n           /* We could precalculate these products, but this is a less\n-             frequently used path so proabably not worth it.  */\n+             frequently used path so probably not worth it.  */\n           base -= sstride[n] * extent[n];\n           n++;\n           if (n == rank)\n@@ -253,7 +253,7 @@ mmaxloc0_8_i16 (gfc_array_i8 * const restrict retarray,\n              the next dimension.  */\n           count[n] = 0;\n           /* We could precalculate these products, but this is a less\n-             frequently used path so proabably not worth it.  */\n+             frequently used path so probably not worth it.  */\n           base -= sstride[n] * extent[n];\n           mbase -= mstride[n] * extent[n];\n           n++;"}, {"sha": "0d96ff3636d7c38072f4d16aca05d8bf8c3fb213", "filename": "libgfortran/generated/maxloc0_8_i4.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5d7adf7a1573b3ab23d9a2d70fbf30a8ef0c4958/libgfortran%2Fgenerated%2Fmaxloc0_8_i4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5d7adf7a1573b3ab23d9a2d70fbf30a8ef0c4958/libgfortran%2Fgenerated%2Fmaxloc0_8_i4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmaxloc0_8_i4.c?ref=5d7adf7a1573b3ab23d9a2d70fbf30a8ef0c4958", "patch": "@@ -128,7 +128,7 @@ maxloc0_8_i4 (gfc_array_i8 * const restrict retarray,\n              the next dimension.  */\n           count[n] = 0;\n           /* We could precalculate these products, but this is a less\n-             frequently used path so proabably not worth it.  */\n+             frequently used path so probably not worth it.  */\n           base -= sstride[n] * extent[n];\n           n++;\n           if (n == rank)\n@@ -253,7 +253,7 @@ mmaxloc0_8_i4 (gfc_array_i8 * const restrict retarray,\n              the next dimension.  */\n           count[n] = 0;\n           /* We could precalculate these products, but this is a less\n-             frequently used path so proabably not worth it.  */\n+             frequently used path so probably not worth it.  */\n           base -= sstride[n] * extent[n];\n           mbase -= mstride[n] * extent[n];\n           n++;"}, {"sha": "e7499568d4bdb9fbe8fa64259e84369fac0fb8f2", "filename": "libgfortran/generated/maxloc0_8_i8.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5d7adf7a1573b3ab23d9a2d70fbf30a8ef0c4958/libgfortran%2Fgenerated%2Fmaxloc0_8_i8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5d7adf7a1573b3ab23d9a2d70fbf30a8ef0c4958/libgfortran%2Fgenerated%2Fmaxloc0_8_i8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmaxloc0_8_i8.c?ref=5d7adf7a1573b3ab23d9a2d70fbf30a8ef0c4958", "patch": "@@ -128,7 +128,7 @@ maxloc0_8_i8 (gfc_array_i8 * const restrict retarray,\n              the next dimension.  */\n           count[n] = 0;\n           /* We could precalculate these products, but this is a less\n-             frequently used path so proabably not worth it.  */\n+             frequently used path so probably not worth it.  */\n           base -= sstride[n] * extent[n];\n           n++;\n           if (n == rank)\n@@ -253,7 +253,7 @@ mmaxloc0_8_i8 (gfc_array_i8 * const restrict retarray,\n              the next dimension.  */\n           count[n] = 0;\n           /* We could precalculate these products, but this is a less\n-             frequently used path so proabably not worth it.  */\n+             frequently used path so probably not worth it.  */\n           base -= sstride[n] * extent[n];\n           mbase -= mstride[n] * extent[n];\n           n++;"}, {"sha": "cc10ee6b05fe7415b31abdb38926450ec3a24f8f", "filename": "libgfortran/generated/maxloc0_8_r10.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5d7adf7a1573b3ab23d9a2d70fbf30a8ef0c4958/libgfortran%2Fgenerated%2Fmaxloc0_8_r10.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5d7adf7a1573b3ab23d9a2d70fbf30a8ef0c4958/libgfortran%2Fgenerated%2Fmaxloc0_8_r10.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmaxloc0_8_r10.c?ref=5d7adf7a1573b3ab23d9a2d70fbf30a8ef0c4958", "patch": "@@ -128,7 +128,7 @@ maxloc0_8_r10 (gfc_array_i8 * const restrict retarray,\n              the next dimension.  */\n           count[n] = 0;\n           /* We could precalculate these products, but this is a less\n-             frequently used path so proabably not worth it.  */\n+             frequently used path so probably not worth it.  */\n           base -= sstride[n] * extent[n];\n           n++;\n           if (n == rank)\n@@ -253,7 +253,7 @@ mmaxloc0_8_r10 (gfc_array_i8 * const restrict retarray,\n              the next dimension.  */\n           count[n] = 0;\n           /* We could precalculate these products, but this is a less\n-             frequently used path so proabably not worth it.  */\n+             frequently used path so probably not worth it.  */\n           base -= sstride[n] * extent[n];\n           mbase -= mstride[n] * extent[n];\n           n++;"}, {"sha": "e4ff82140cbb2e741187a408c337788659d94458", "filename": "libgfortran/generated/maxloc0_8_r16.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5d7adf7a1573b3ab23d9a2d70fbf30a8ef0c4958/libgfortran%2Fgenerated%2Fmaxloc0_8_r16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5d7adf7a1573b3ab23d9a2d70fbf30a8ef0c4958/libgfortran%2Fgenerated%2Fmaxloc0_8_r16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmaxloc0_8_r16.c?ref=5d7adf7a1573b3ab23d9a2d70fbf30a8ef0c4958", "patch": "@@ -128,7 +128,7 @@ maxloc0_8_r16 (gfc_array_i8 * const restrict retarray,\n              the next dimension.  */\n           count[n] = 0;\n           /* We could precalculate these products, but this is a less\n-             frequently used path so proabably not worth it.  */\n+             frequently used path so probably not worth it.  */\n           base -= sstride[n] * extent[n];\n           n++;\n           if (n == rank)\n@@ -253,7 +253,7 @@ mmaxloc0_8_r16 (gfc_array_i8 * const restrict retarray,\n              the next dimension.  */\n           count[n] = 0;\n           /* We could precalculate these products, but this is a less\n-             frequently used path so proabably not worth it.  */\n+             frequently used path so probably not worth it.  */\n           base -= sstride[n] * extent[n];\n           mbase -= mstride[n] * extent[n];\n           n++;"}, {"sha": "088df049330e5a6466f5b4391e40436a9dd2cf4d", "filename": "libgfortran/generated/maxloc0_8_r4.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5d7adf7a1573b3ab23d9a2d70fbf30a8ef0c4958/libgfortran%2Fgenerated%2Fmaxloc0_8_r4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5d7adf7a1573b3ab23d9a2d70fbf30a8ef0c4958/libgfortran%2Fgenerated%2Fmaxloc0_8_r4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmaxloc0_8_r4.c?ref=5d7adf7a1573b3ab23d9a2d70fbf30a8ef0c4958", "patch": "@@ -128,7 +128,7 @@ maxloc0_8_r4 (gfc_array_i8 * const restrict retarray,\n              the next dimension.  */\n           count[n] = 0;\n           /* We could precalculate these products, but this is a less\n-             frequently used path so proabably not worth it.  */\n+             frequently used path so probably not worth it.  */\n           base -= sstride[n] * extent[n];\n           n++;\n           if (n == rank)\n@@ -253,7 +253,7 @@ mmaxloc0_8_r4 (gfc_array_i8 * const restrict retarray,\n              the next dimension.  */\n           count[n] = 0;\n           /* We could precalculate these products, but this is a less\n-             frequently used path so proabably not worth it.  */\n+             frequently used path so probably not worth it.  */\n           base -= sstride[n] * extent[n];\n           mbase -= mstride[n] * extent[n];\n           n++;"}, {"sha": "f0687f5f7694f2d4b7fbf12b530bb999f01becf1", "filename": "libgfortran/generated/maxloc0_8_r8.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5d7adf7a1573b3ab23d9a2d70fbf30a8ef0c4958/libgfortran%2Fgenerated%2Fmaxloc0_8_r8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5d7adf7a1573b3ab23d9a2d70fbf30a8ef0c4958/libgfortran%2Fgenerated%2Fmaxloc0_8_r8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmaxloc0_8_r8.c?ref=5d7adf7a1573b3ab23d9a2d70fbf30a8ef0c4958", "patch": "@@ -128,7 +128,7 @@ maxloc0_8_r8 (gfc_array_i8 * const restrict retarray,\n              the next dimension.  */\n           count[n] = 0;\n           /* We could precalculate these products, but this is a less\n-             frequently used path so proabably not worth it.  */\n+             frequently used path so probably not worth it.  */\n           base -= sstride[n] * extent[n];\n           n++;\n           if (n == rank)\n@@ -253,7 +253,7 @@ mmaxloc0_8_r8 (gfc_array_i8 * const restrict retarray,\n              the next dimension.  */\n           count[n] = 0;\n           /* We could precalculate these products, but this is a less\n-             frequently used path so proabably not worth it.  */\n+             frequently used path so probably not worth it.  */\n           base -= sstride[n] * extent[n];\n           mbase -= mstride[n] * extent[n];\n           n++;"}, {"sha": "3964c3fd8653f70f16ffc515483034014869f35b", "filename": "libgfortran/generated/maxloc1_16_i16.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5d7adf7a1573b3ab23d9a2d70fbf30a8ef0c4958/libgfortran%2Fgenerated%2Fmaxloc1_16_i16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5d7adf7a1573b3ab23d9a2d70fbf30a8ef0c4958/libgfortran%2Fgenerated%2Fmaxloc1_16_i16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmaxloc1_16_i16.c?ref=5d7adf7a1573b3ab23d9a2d70fbf30a8ef0c4958", "patch": "@@ -152,7 +152,7 @@ maxloc1_16_i16 (gfc_array_i16 * const restrict retarray,\n              the next dimension.  */\n           count[n] = 0;\n           /* We could precalculate these products, but this is a less\n-             frequently used path so proabably not worth it.  */\n+             frequently used path so probably not worth it.  */\n           base -= sstride[n] * extent[n];\n           dest -= dstride[n] * extent[n];\n           n++;\n@@ -309,7 +309,7 @@ mmaxloc1_16_i16 (gfc_array_i16 * const restrict retarray,\n              the next dimension.  */\n           count[n] = 0;\n           /* We could precalculate these products, but this is a less\n-             frequently used path so proabably not worth it.  */\n+             frequently used path so probably not worth it.  */\n           base -= sstride[n] * extent[n];\n           mbase -= mstride[n] * extent[n];\n           dest -= dstride[n] * extent[n];"}, {"sha": "3516f22e5e2bc49f78c511786b2741f8a2f28185", "filename": "libgfortran/generated/maxloc1_16_i4.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5d7adf7a1573b3ab23d9a2d70fbf30a8ef0c4958/libgfortran%2Fgenerated%2Fmaxloc1_16_i4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5d7adf7a1573b3ab23d9a2d70fbf30a8ef0c4958/libgfortran%2Fgenerated%2Fmaxloc1_16_i4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmaxloc1_16_i4.c?ref=5d7adf7a1573b3ab23d9a2d70fbf30a8ef0c4958", "patch": "@@ -152,7 +152,7 @@ maxloc1_16_i4 (gfc_array_i16 * const restrict retarray,\n              the next dimension.  */\n           count[n] = 0;\n           /* We could precalculate these products, but this is a less\n-             frequently used path so proabably not worth it.  */\n+             frequently used path so probably not worth it.  */\n           base -= sstride[n] * extent[n];\n           dest -= dstride[n] * extent[n];\n           n++;\n@@ -309,7 +309,7 @@ mmaxloc1_16_i4 (gfc_array_i16 * const restrict retarray,\n              the next dimension.  */\n           count[n] = 0;\n           /* We could precalculate these products, but this is a less\n-             frequently used path so proabably not worth it.  */\n+             frequently used path so probably not worth it.  */\n           base -= sstride[n] * extent[n];\n           mbase -= mstride[n] * extent[n];\n           dest -= dstride[n] * extent[n];"}, {"sha": "2887eb7c7b297ec8c14cbd87edc5cb3301cf62ec", "filename": "libgfortran/generated/maxloc1_16_i8.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5d7adf7a1573b3ab23d9a2d70fbf30a8ef0c4958/libgfortran%2Fgenerated%2Fmaxloc1_16_i8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5d7adf7a1573b3ab23d9a2d70fbf30a8ef0c4958/libgfortran%2Fgenerated%2Fmaxloc1_16_i8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmaxloc1_16_i8.c?ref=5d7adf7a1573b3ab23d9a2d70fbf30a8ef0c4958", "patch": "@@ -152,7 +152,7 @@ maxloc1_16_i8 (gfc_array_i16 * const restrict retarray,\n              the next dimension.  */\n           count[n] = 0;\n           /* We could precalculate these products, but this is a less\n-             frequently used path so proabably not worth it.  */\n+             frequently used path so probably not worth it.  */\n           base -= sstride[n] * extent[n];\n           dest -= dstride[n] * extent[n];\n           n++;\n@@ -309,7 +309,7 @@ mmaxloc1_16_i8 (gfc_array_i16 * const restrict retarray,\n              the next dimension.  */\n           count[n] = 0;\n           /* We could precalculate these products, but this is a less\n-             frequently used path so proabably not worth it.  */\n+             frequently used path so probably not worth it.  */\n           base -= sstride[n] * extent[n];\n           mbase -= mstride[n] * extent[n];\n           dest -= dstride[n] * extent[n];"}, {"sha": "826fd2e17ccf494f2ff6a9c0882e431efd6245a4", "filename": "libgfortran/generated/maxloc1_16_r10.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5d7adf7a1573b3ab23d9a2d70fbf30a8ef0c4958/libgfortran%2Fgenerated%2Fmaxloc1_16_r10.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5d7adf7a1573b3ab23d9a2d70fbf30a8ef0c4958/libgfortran%2Fgenerated%2Fmaxloc1_16_r10.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmaxloc1_16_r10.c?ref=5d7adf7a1573b3ab23d9a2d70fbf30a8ef0c4958", "patch": "@@ -152,7 +152,7 @@ maxloc1_16_r10 (gfc_array_i16 * const restrict retarray,\n              the next dimension.  */\n           count[n] = 0;\n           /* We could precalculate these products, but this is a less\n-             frequently used path so proabably not worth it.  */\n+             frequently used path so probably not worth it.  */\n           base -= sstride[n] * extent[n];\n           dest -= dstride[n] * extent[n];\n           n++;\n@@ -309,7 +309,7 @@ mmaxloc1_16_r10 (gfc_array_i16 * const restrict retarray,\n              the next dimension.  */\n           count[n] = 0;\n           /* We could precalculate these products, but this is a less\n-             frequently used path so proabably not worth it.  */\n+             frequently used path so probably not worth it.  */\n           base -= sstride[n] * extent[n];\n           mbase -= mstride[n] * extent[n];\n           dest -= dstride[n] * extent[n];"}, {"sha": "61c10773cf2453ca97461f1c4d351d4c03b97b5d", "filename": "libgfortran/generated/maxloc1_16_r16.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5d7adf7a1573b3ab23d9a2d70fbf30a8ef0c4958/libgfortran%2Fgenerated%2Fmaxloc1_16_r16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5d7adf7a1573b3ab23d9a2d70fbf30a8ef0c4958/libgfortran%2Fgenerated%2Fmaxloc1_16_r16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmaxloc1_16_r16.c?ref=5d7adf7a1573b3ab23d9a2d70fbf30a8ef0c4958", "patch": "@@ -152,7 +152,7 @@ maxloc1_16_r16 (gfc_array_i16 * const restrict retarray,\n              the next dimension.  */\n           count[n] = 0;\n           /* We could precalculate these products, but this is a less\n-             frequently used path so proabably not worth it.  */\n+             frequently used path so probably not worth it.  */\n           base -= sstride[n] * extent[n];\n           dest -= dstride[n] * extent[n];\n           n++;\n@@ -309,7 +309,7 @@ mmaxloc1_16_r16 (gfc_array_i16 * const restrict retarray,\n              the next dimension.  */\n           count[n] = 0;\n           /* We could precalculate these products, but this is a less\n-             frequently used path so proabably not worth it.  */\n+             frequently used path so probably not worth it.  */\n           base -= sstride[n] * extent[n];\n           mbase -= mstride[n] * extent[n];\n           dest -= dstride[n] * extent[n];"}, {"sha": "7e0d84e04b0167216cb75cba7012ed20e91baa75", "filename": "libgfortran/generated/maxloc1_16_r4.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5d7adf7a1573b3ab23d9a2d70fbf30a8ef0c4958/libgfortran%2Fgenerated%2Fmaxloc1_16_r4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5d7adf7a1573b3ab23d9a2d70fbf30a8ef0c4958/libgfortran%2Fgenerated%2Fmaxloc1_16_r4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmaxloc1_16_r4.c?ref=5d7adf7a1573b3ab23d9a2d70fbf30a8ef0c4958", "patch": "@@ -152,7 +152,7 @@ maxloc1_16_r4 (gfc_array_i16 * const restrict retarray,\n              the next dimension.  */\n           count[n] = 0;\n           /* We could precalculate these products, but this is a less\n-             frequently used path so proabably not worth it.  */\n+             frequently used path so probably not worth it.  */\n           base -= sstride[n] * extent[n];\n           dest -= dstride[n] * extent[n];\n           n++;\n@@ -309,7 +309,7 @@ mmaxloc1_16_r4 (gfc_array_i16 * const restrict retarray,\n              the next dimension.  */\n           count[n] = 0;\n           /* We could precalculate these products, but this is a less\n-             frequently used path so proabably not worth it.  */\n+             frequently used path so probably not worth it.  */\n           base -= sstride[n] * extent[n];\n           mbase -= mstride[n] * extent[n];\n           dest -= dstride[n] * extent[n];"}, {"sha": "3b56f4c1d9bfc58307b3d1b8ce221f7fccef6cd0", "filename": "libgfortran/generated/maxloc1_16_r8.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5d7adf7a1573b3ab23d9a2d70fbf30a8ef0c4958/libgfortran%2Fgenerated%2Fmaxloc1_16_r8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5d7adf7a1573b3ab23d9a2d70fbf30a8ef0c4958/libgfortran%2Fgenerated%2Fmaxloc1_16_r8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmaxloc1_16_r8.c?ref=5d7adf7a1573b3ab23d9a2d70fbf30a8ef0c4958", "patch": "@@ -152,7 +152,7 @@ maxloc1_16_r8 (gfc_array_i16 * const restrict retarray,\n              the next dimension.  */\n           count[n] = 0;\n           /* We could precalculate these products, but this is a less\n-             frequently used path so proabably not worth it.  */\n+             frequently used path so probably not worth it.  */\n           base -= sstride[n] * extent[n];\n           dest -= dstride[n] * extent[n];\n           n++;\n@@ -309,7 +309,7 @@ mmaxloc1_16_r8 (gfc_array_i16 * const restrict retarray,\n              the next dimension.  */\n           count[n] = 0;\n           /* We could precalculate these products, but this is a less\n-             frequently used path so proabably not worth it.  */\n+             frequently used path so probably not worth it.  */\n           base -= sstride[n] * extent[n];\n           mbase -= mstride[n] * extent[n];\n           dest -= dstride[n] * extent[n];"}, {"sha": "016580373d1ca89f0f77d3b2854d6f39680ad2d1", "filename": "libgfortran/generated/maxloc1_4_i16.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5d7adf7a1573b3ab23d9a2d70fbf30a8ef0c4958/libgfortran%2Fgenerated%2Fmaxloc1_4_i16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5d7adf7a1573b3ab23d9a2d70fbf30a8ef0c4958/libgfortran%2Fgenerated%2Fmaxloc1_4_i16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmaxloc1_4_i16.c?ref=5d7adf7a1573b3ab23d9a2d70fbf30a8ef0c4958", "patch": "@@ -152,7 +152,7 @@ maxloc1_4_i16 (gfc_array_i4 * const restrict retarray,\n              the next dimension.  */\n           count[n] = 0;\n           /* We could precalculate these products, but this is a less\n-             frequently used path so proabably not worth it.  */\n+             frequently used path so probably not worth it.  */\n           base -= sstride[n] * extent[n];\n           dest -= dstride[n] * extent[n];\n           n++;\n@@ -309,7 +309,7 @@ mmaxloc1_4_i16 (gfc_array_i4 * const restrict retarray,\n              the next dimension.  */\n           count[n] = 0;\n           /* We could precalculate these products, but this is a less\n-             frequently used path so proabably not worth it.  */\n+             frequently used path so probably not worth it.  */\n           base -= sstride[n] * extent[n];\n           mbase -= mstride[n] * extent[n];\n           dest -= dstride[n] * extent[n];"}, {"sha": "1109eb7c02200f4a5b428463f97824f160d7f05a", "filename": "libgfortran/generated/maxloc1_4_i4.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5d7adf7a1573b3ab23d9a2d70fbf30a8ef0c4958/libgfortran%2Fgenerated%2Fmaxloc1_4_i4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5d7adf7a1573b3ab23d9a2d70fbf30a8ef0c4958/libgfortran%2Fgenerated%2Fmaxloc1_4_i4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmaxloc1_4_i4.c?ref=5d7adf7a1573b3ab23d9a2d70fbf30a8ef0c4958", "patch": "@@ -152,7 +152,7 @@ maxloc1_4_i4 (gfc_array_i4 * const restrict retarray,\n              the next dimension.  */\n           count[n] = 0;\n           /* We could precalculate these products, but this is a less\n-             frequently used path so proabably not worth it.  */\n+             frequently used path so probably not worth it.  */\n           base -= sstride[n] * extent[n];\n           dest -= dstride[n] * extent[n];\n           n++;\n@@ -309,7 +309,7 @@ mmaxloc1_4_i4 (gfc_array_i4 * const restrict retarray,\n              the next dimension.  */\n           count[n] = 0;\n           /* We could precalculate these products, but this is a less\n-             frequently used path so proabably not worth it.  */\n+             frequently used path so probably not worth it.  */\n           base -= sstride[n] * extent[n];\n           mbase -= mstride[n] * extent[n];\n           dest -= dstride[n] * extent[n];"}, {"sha": "a530c57ed01ade02105cff0524e52a7edb2fd788", "filename": "libgfortran/generated/maxloc1_4_i8.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5d7adf7a1573b3ab23d9a2d70fbf30a8ef0c4958/libgfortran%2Fgenerated%2Fmaxloc1_4_i8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5d7adf7a1573b3ab23d9a2d70fbf30a8ef0c4958/libgfortran%2Fgenerated%2Fmaxloc1_4_i8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmaxloc1_4_i8.c?ref=5d7adf7a1573b3ab23d9a2d70fbf30a8ef0c4958", "patch": "@@ -152,7 +152,7 @@ maxloc1_4_i8 (gfc_array_i4 * const restrict retarray,\n              the next dimension.  */\n           count[n] = 0;\n           /* We could precalculate these products, but this is a less\n-             frequently used path so proabably not worth it.  */\n+             frequently used path so probably not worth it.  */\n           base -= sstride[n] * extent[n];\n           dest -= dstride[n] * extent[n];\n           n++;\n@@ -309,7 +309,7 @@ mmaxloc1_4_i8 (gfc_array_i4 * const restrict retarray,\n              the next dimension.  */\n           count[n] = 0;\n           /* We could precalculate these products, but this is a less\n-             frequently used path so proabably not worth it.  */\n+             frequently used path so probably not worth it.  */\n           base -= sstride[n] * extent[n];\n           mbase -= mstride[n] * extent[n];\n           dest -= dstride[n] * extent[n];"}, {"sha": "77e9fec68899ed685aa1a02753942f47f2cefd02", "filename": "libgfortran/generated/maxloc1_4_r10.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5d7adf7a1573b3ab23d9a2d70fbf30a8ef0c4958/libgfortran%2Fgenerated%2Fmaxloc1_4_r10.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5d7adf7a1573b3ab23d9a2d70fbf30a8ef0c4958/libgfortran%2Fgenerated%2Fmaxloc1_4_r10.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmaxloc1_4_r10.c?ref=5d7adf7a1573b3ab23d9a2d70fbf30a8ef0c4958", "patch": "@@ -152,7 +152,7 @@ maxloc1_4_r10 (gfc_array_i4 * const restrict retarray,\n              the next dimension.  */\n           count[n] = 0;\n           /* We could precalculate these products, but this is a less\n-             frequently used path so proabably not worth it.  */\n+             frequently used path so probably not worth it.  */\n           base -= sstride[n] * extent[n];\n           dest -= dstride[n] * extent[n];\n           n++;\n@@ -309,7 +309,7 @@ mmaxloc1_4_r10 (gfc_array_i4 * const restrict retarray,\n              the next dimension.  */\n           count[n] = 0;\n           /* We could precalculate these products, but this is a less\n-             frequently used path so proabably not worth it.  */\n+             frequently used path so probably not worth it.  */\n           base -= sstride[n] * extent[n];\n           mbase -= mstride[n] * extent[n];\n           dest -= dstride[n] * extent[n];"}, {"sha": "ccdfbbb8b2fc5f4104bab2f5c18f5cb28ab0a3f0", "filename": "libgfortran/generated/maxloc1_4_r16.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5d7adf7a1573b3ab23d9a2d70fbf30a8ef0c4958/libgfortran%2Fgenerated%2Fmaxloc1_4_r16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5d7adf7a1573b3ab23d9a2d70fbf30a8ef0c4958/libgfortran%2Fgenerated%2Fmaxloc1_4_r16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmaxloc1_4_r16.c?ref=5d7adf7a1573b3ab23d9a2d70fbf30a8ef0c4958", "patch": "@@ -152,7 +152,7 @@ maxloc1_4_r16 (gfc_array_i4 * const restrict retarray,\n              the next dimension.  */\n           count[n] = 0;\n           /* We could precalculate these products, but this is a less\n-             frequently used path so proabably not worth it.  */\n+             frequently used path so probably not worth it.  */\n           base -= sstride[n] * extent[n];\n           dest -= dstride[n] * extent[n];\n           n++;\n@@ -309,7 +309,7 @@ mmaxloc1_4_r16 (gfc_array_i4 * const restrict retarray,\n              the next dimension.  */\n           count[n] = 0;\n           /* We could precalculate these products, but this is a less\n-             frequently used path so proabably not worth it.  */\n+             frequently used path so probably not worth it.  */\n           base -= sstride[n] * extent[n];\n           mbase -= mstride[n] * extent[n];\n           dest -= dstride[n] * extent[n];"}, {"sha": "431a051023d0e89b82e3c316c2589107859ee197", "filename": "libgfortran/generated/maxloc1_4_r4.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5d7adf7a1573b3ab23d9a2d70fbf30a8ef0c4958/libgfortran%2Fgenerated%2Fmaxloc1_4_r4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5d7adf7a1573b3ab23d9a2d70fbf30a8ef0c4958/libgfortran%2Fgenerated%2Fmaxloc1_4_r4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmaxloc1_4_r4.c?ref=5d7adf7a1573b3ab23d9a2d70fbf30a8ef0c4958", "patch": "@@ -152,7 +152,7 @@ maxloc1_4_r4 (gfc_array_i4 * const restrict retarray,\n              the next dimension.  */\n           count[n] = 0;\n           /* We could precalculate these products, but this is a less\n-             frequently used path so proabably not worth it.  */\n+             frequently used path so probably not worth it.  */\n           base -= sstride[n] * extent[n];\n           dest -= dstride[n] * extent[n];\n           n++;\n@@ -309,7 +309,7 @@ mmaxloc1_4_r4 (gfc_array_i4 * const restrict retarray,\n              the next dimension.  */\n           count[n] = 0;\n           /* We could precalculate these products, but this is a less\n-             frequently used path so proabably not worth it.  */\n+             frequently used path so probably not worth it.  */\n           base -= sstride[n] * extent[n];\n           mbase -= mstride[n] * extent[n];\n           dest -= dstride[n] * extent[n];"}, {"sha": "10e181f341df9ea131160ef9890125050e31aa9d", "filename": "libgfortran/generated/maxloc1_4_r8.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5d7adf7a1573b3ab23d9a2d70fbf30a8ef0c4958/libgfortran%2Fgenerated%2Fmaxloc1_4_r8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5d7adf7a1573b3ab23d9a2d70fbf30a8ef0c4958/libgfortran%2Fgenerated%2Fmaxloc1_4_r8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmaxloc1_4_r8.c?ref=5d7adf7a1573b3ab23d9a2d70fbf30a8ef0c4958", "patch": "@@ -152,7 +152,7 @@ maxloc1_4_r8 (gfc_array_i4 * const restrict retarray,\n              the next dimension.  */\n           count[n] = 0;\n           /* We could precalculate these products, but this is a less\n-             frequently used path so proabably not worth it.  */\n+             frequently used path so probably not worth it.  */\n           base -= sstride[n] * extent[n];\n           dest -= dstride[n] * extent[n];\n           n++;\n@@ -309,7 +309,7 @@ mmaxloc1_4_r8 (gfc_array_i4 * const restrict retarray,\n              the next dimension.  */\n           count[n] = 0;\n           /* We could precalculate these products, but this is a less\n-             frequently used path so proabably not worth it.  */\n+             frequently used path so probably not worth it.  */\n           base -= sstride[n] * extent[n];\n           mbase -= mstride[n] * extent[n];\n           dest -= dstride[n] * extent[n];"}, {"sha": "b28dab4974243054b3ef8523c6c02a47ceeac2e5", "filename": "libgfortran/generated/maxloc1_8_i16.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5d7adf7a1573b3ab23d9a2d70fbf30a8ef0c4958/libgfortran%2Fgenerated%2Fmaxloc1_8_i16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5d7adf7a1573b3ab23d9a2d70fbf30a8ef0c4958/libgfortran%2Fgenerated%2Fmaxloc1_8_i16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmaxloc1_8_i16.c?ref=5d7adf7a1573b3ab23d9a2d70fbf30a8ef0c4958", "patch": "@@ -152,7 +152,7 @@ maxloc1_8_i16 (gfc_array_i8 * const restrict retarray,\n              the next dimension.  */\n           count[n] = 0;\n           /* We could precalculate these products, but this is a less\n-             frequently used path so proabably not worth it.  */\n+             frequently used path so probably not worth it.  */\n           base -= sstride[n] * extent[n];\n           dest -= dstride[n] * extent[n];\n           n++;\n@@ -309,7 +309,7 @@ mmaxloc1_8_i16 (gfc_array_i8 * const restrict retarray,\n              the next dimension.  */\n           count[n] = 0;\n           /* We could precalculate these products, but this is a less\n-             frequently used path so proabably not worth it.  */\n+             frequently used path so probably not worth it.  */\n           base -= sstride[n] * extent[n];\n           mbase -= mstride[n] * extent[n];\n           dest -= dstride[n] * extent[n];"}, {"sha": "72a9084e34172f3e8d1b2bb185f08cbf17c22677", "filename": "libgfortran/generated/maxloc1_8_i4.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5d7adf7a1573b3ab23d9a2d70fbf30a8ef0c4958/libgfortran%2Fgenerated%2Fmaxloc1_8_i4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5d7adf7a1573b3ab23d9a2d70fbf30a8ef0c4958/libgfortran%2Fgenerated%2Fmaxloc1_8_i4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmaxloc1_8_i4.c?ref=5d7adf7a1573b3ab23d9a2d70fbf30a8ef0c4958", "patch": "@@ -152,7 +152,7 @@ maxloc1_8_i4 (gfc_array_i8 * const restrict retarray,\n              the next dimension.  */\n           count[n] = 0;\n           /* We could precalculate these products, but this is a less\n-             frequently used path so proabably not worth it.  */\n+             frequently used path so probably not worth it.  */\n           base -= sstride[n] * extent[n];\n           dest -= dstride[n] * extent[n];\n           n++;\n@@ -309,7 +309,7 @@ mmaxloc1_8_i4 (gfc_array_i8 * const restrict retarray,\n              the next dimension.  */\n           count[n] = 0;\n           /* We could precalculate these products, but this is a less\n-             frequently used path so proabably not worth it.  */\n+             frequently used path so probably not worth it.  */\n           base -= sstride[n] * extent[n];\n           mbase -= mstride[n] * extent[n];\n           dest -= dstride[n] * extent[n];"}, {"sha": "b056e6d1f0fab8b1482d2298dd9875d096474fbe", "filename": "libgfortran/generated/maxloc1_8_i8.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5d7adf7a1573b3ab23d9a2d70fbf30a8ef0c4958/libgfortran%2Fgenerated%2Fmaxloc1_8_i8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5d7adf7a1573b3ab23d9a2d70fbf30a8ef0c4958/libgfortran%2Fgenerated%2Fmaxloc1_8_i8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmaxloc1_8_i8.c?ref=5d7adf7a1573b3ab23d9a2d70fbf30a8ef0c4958", "patch": "@@ -152,7 +152,7 @@ maxloc1_8_i8 (gfc_array_i8 * const restrict retarray,\n              the next dimension.  */\n           count[n] = 0;\n           /* We could precalculate these products, but this is a less\n-             frequently used path so proabably not worth it.  */\n+             frequently used path so probably not worth it.  */\n           base -= sstride[n] * extent[n];\n           dest -= dstride[n] * extent[n];\n           n++;\n@@ -309,7 +309,7 @@ mmaxloc1_8_i8 (gfc_array_i8 * const restrict retarray,\n              the next dimension.  */\n           count[n] = 0;\n           /* We could precalculate these products, but this is a less\n-             frequently used path so proabably not worth it.  */\n+             frequently used path so probably not worth it.  */\n           base -= sstride[n] * extent[n];\n           mbase -= mstride[n] * extent[n];\n           dest -= dstride[n] * extent[n];"}, {"sha": "f8a5ddb7b480a521679017ee8166cbc5fc3a8a68", "filename": "libgfortran/generated/maxloc1_8_r10.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5d7adf7a1573b3ab23d9a2d70fbf30a8ef0c4958/libgfortran%2Fgenerated%2Fmaxloc1_8_r10.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5d7adf7a1573b3ab23d9a2d70fbf30a8ef0c4958/libgfortran%2Fgenerated%2Fmaxloc1_8_r10.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmaxloc1_8_r10.c?ref=5d7adf7a1573b3ab23d9a2d70fbf30a8ef0c4958", "patch": "@@ -152,7 +152,7 @@ maxloc1_8_r10 (gfc_array_i8 * const restrict retarray,\n              the next dimension.  */\n           count[n] = 0;\n           /* We could precalculate these products, but this is a less\n-             frequently used path so proabably not worth it.  */\n+             frequently used path so probably not worth it.  */\n           base -= sstride[n] * extent[n];\n           dest -= dstride[n] * extent[n];\n           n++;\n@@ -309,7 +309,7 @@ mmaxloc1_8_r10 (gfc_array_i8 * const restrict retarray,\n              the next dimension.  */\n           count[n] = 0;\n           /* We could precalculate these products, but this is a less\n-             frequently used path so proabably not worth it.  */\n+             frequently used path so probably not worth it.  */\n           base -= sstride[n] * extent[n];\n           mbase -= mstride[n] * extent[n];\n           dest -= dstride[n] * extent[n];"}, {"sha": "26c90b76bbc127239da4ab31644cef168c96feba", "filename": "libgfortran/generated/maxloc1_8_r16.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5d7adf7a1573b3ab23d9a2d70fbf30a8ef0c4958/libgfortran%2Fgenerated%2Fmaxloc1_8_r16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5d7adf7a1573b3ab23d9a2d70fbf30a8ef0c4958/libgfortran%2Fgenerated%2Fmaxloc1_8_r16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmaxloc1_8_r16.c?ref=5d7adf7a1573b3ab23d9a2d70fbf30a8ef0c4958", "patch": "@@ -152,7 +152,7 @@ maxloc1_8_r16 (gfc_array_i8 * const restrict retarray,\n              the next dimension.  */\n           count[n] = 0;\n           /* We could precalculate these products, but this is a less\n-             frequently used path so proabably not worth it.  */\n+             frequently used path so probably not worth it.  */\n           base -= sstride[n] * extent[n];\n           dest -= dstride[n] * extent[n];\n           n++;\n@@ -309,7 +309,7 @@ mmaxloc1_8_r16 (gfc_array_i8 * const restrict retarray,\n              the next dimension.  */\n           count[n] = 0;\n           /* We could precalculate these products, but this is a less\n-             frequently used path so proabably not worth it.  */\n+             frequently used path so probably not worth it.  */\n           base -= sstride[n] * extent[n];\n           mbase -= mstride[n] * extent[n];\n           dest -= dstride[n] * extent[n];"}, {"sha": "8cb1c1b5a626a930489873b913248c13e7fc2cef", "filename": "libgfortran/generated/maxloc1_8_r4.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5d7adf7a1573b3ab23d9a2d70fbf30a8ef0c4958/libgfortran%2Fgenerated%2Fmaxloc1_8_r4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5d7adf7a1573b3ab23d9a2d70fbf30a8ef0c4958/libgfortran%2Fgenerated%2Fmaxloc1_8_r4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmaxloc1_8_r4.c?ref=5d7adf7a1573b3ab23d9a2d70fbf30a8ef0c4958", "patch": "@@ -152,7 +152,7 @@ maxloc1_8_r4 (gfc_array_i8 * const restrict retarray,\n              the next dimension.  */\n           count[n] = 0;\n           /* We could precalculate these products, but this is a less\n-             frequently used path so proabably not worth it.  */\n+             frequently used path so probably not worth it.  */\n           base -= sstride[n] * extent[n];\n           dest -= dstride[n] * extent[n];\n           n++;\n@@ -309,7 +309,7 @@ mmaxloc1_8_r4 (gfc_array_i8 * const restrict retarray,\n              the next dimension.  */\n           count[n] = 0;\n           /* We could precalculate these products, but this is a less\n-             frequently used path so proabably not worth it.  */\n+             frequently used path so probably not worth it.  */\n           base -= sstride[n] * extent[n];\n           mbase -= mstride[n] * extent[n];\n           dest -= dstride[n] * extent[n];"}, {"sha": "2170a76d9b5fbf8adea55a75dcb2448fc9dd4296", "filename": "libgfortran/generated/maxloc1_8_r8.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5d7adf7a1573b3ab23d9a2d70fbf30a8ef0c4958/libgfortran%2Fgenerated%2Fmaxloc1_8_r8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5d7adf7a1573b3ab23d9a2d70fbf30a8ef0c4958/libgfortran%2Fgenerated%2Fmaxloc1_8_r8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmaxloc1_8_r8.c?ref=5d7adf7a1573b3ab23d9a2d70fbf30a8ef0c4958", "patch": "@@ -152,7 +152,7 @@ maxloc1_8_r8 (gfc_array_i8 * const restrict retarray,\n              the next dimension.  */\n           count[n] = 0;\n           /* We could precalculate these products, but this is a less\n-             frequently used path so proabably not worth it.  */\n+             frequently used path so probably not worth it.  */\n           base -= sstride[n] * extent[n];\n           dest -= dstride[n] * extent[n];\n           n++;\n@@ -309,7 +309,7 @@ mmaxloc1_8_r8 (gfc_array_i8 * const restrict retarray,\n              the next dimension.  */\n           count[n] = 0;\n           /* We could precalculate these products, but this is a less\n-             frequently used path so proabably not worth it.  */\n+             frequently used path so probably not worth it.  */\n           base -= sstride[n] * extent[n];\n           mbase -= mstride[n] * extent[n];\n           dest -= dstride[n] * extent[n];"}, {"sha": "a43a50698c07236752156e03378fad03509b48d1", "filename": "libgfortran/generated/maxval_i16.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5d7adf7a1573b3ab23d9a2d70fbf30a8ef0c4958/libgfortran%2Fgenerated%2Fmaxval_i16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5d7adf7a1573b3ab23d9a2d70fbf30a8ef0c4958/libgfortran%2Fgenerated%2Fmaxval_i16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmaxval_i16.c?ref=5d7adf7a1573b3ab23d9a2d70fbf30a8ef0c4958", "patch": "@@ -146,7 +146,7 @@ maxval_i16 (gfc_array_i16 * const restrict retarray,\n              the next dimension.  */\n           count[n] = 0;\n           /* We could precalculate these products, but this is a less\n-             frequently used path so proabably not worth it.  */\n+             frequently used path so probably not worth it.  */\n           base -= sstride[n] * extent[n];\n           dest -= dstride[n] * extent[n];\n           n++;\n@@ -298,7 +298,7 @@ mmaxval_i16 (gfc_array_i16 * const restrict retarray,\n              the next dimension.  */\n           count[n] = 0;\n           /* We could precalculate these products, but this is a less\n-             frequently used path so proabably not worth it.  */\n+             frequently used path so probably not worth it.  */\n           base -= sstride[n] * extent[n];\n           mbase -= mstride[n] * extent[n];\n           dest -= dstride[n] * extent[n];"}, {"sha": "9cc078b67a3c5583ff16a3f0a815b29211326b10", "filename": "libgfortran/generated/maxval_i4.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5d7adf7a1573b3ab23d9a2d70fbf30a8ef0c4958/libgfortran%2Fgenerated%2Fmaxval_i4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5d7adf7a1573b3ab23d9a2d70fbf30a8ef0c4958/libgfortran%2Fgenerated%2Fmaxval_i4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmaxval_i4.c?ref=5d7adf7a1573b3ab23d9a2d70fbf30a8ef0c4958", "patch": "@@ -146,7 +146,7 @@ maxval_i4 (gfc_array_i4 * const restrict retarray,\n              the next dimension.  */\n           count[n] = 0;\n           /* We could precalculate these products, but this is a less\n-             frequently used path so proabably not worth it.  */\n+             frequently used path so probably not worth it.  */\n           base -= sstride[n] * extent[n];\n           dest -= dstride[n] * extent[n];\n           n++;\n@@ -298,7 +298,7 @@ mmaxval_i4 (gfc_array_i4 * const restrict retarray,\n              the next dimension.  */\n           count[n] = 0;\n           /* We could precalculate these products, but this is a less\n-             frequently used path so proabably not worth it.  */\n+             frequently used path so probably not worth it.  */\n           base -= sstride[n] * extent[n];\n           mbase -= mstride[n] * extent[n];\n           dest -= dstride[n] * extent[n];"}, {"sha": "30ab0cb79a66bfa3abc402ca6fbd50e1a6b1edd7", "filename": "libgfortran/generated/maxval_i8.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5d7adf7a1573b3ab23d9a2d70fbf30a8ef0c4958/libgfortran%2Fgenerated%2Fmaxval_i8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5d7adf7a1573b3ab23d9a2d70fbf30a8ef0c4958/libgfortran%2Fgenerated%2Fmaxval_i8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmaxval_i8.c?ref=5d7adf7a1573b3ab23d9a2d70fbf30a8ef0c4958", "patch": "@@ -146,7 +146,7 @@ maxval_i8 (gfc_array_i8 * const restrict retarray,\n              the next dimension.  */\n           count[n] = 0;\n           /* We could precalculate these products, but this is a less\n-             frequently used path so proabably not worth it.  */\n+             frequently used path so probably not worth it.  */\n           base -= sstride[n] * extent[n];\n           dest -= dstride[n] * extent[n];\n           n++;\n@@ -298,7 +298,7 @@ mmaxval_i8 (gfc_array_i8 * const restrict retarray,\n              the next dimension.  */\n           count[n] = 0;\n           /* We could precalculate these products, but this is a less\n-             frequently used path so proabably not worth it.  */\n+             frequently used path so probably not worth it.  */\n           base -= sstride[n] * extent[n];\n           mbase -= mstride[n] * extent[n];\n           dest -= dstride[n] * extent[n];"}, {"sha": "ed884622dd071f8fbfa31625078068fdc19cbd47", "filename": "libgfortran/generated/maxval_r10.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5d7adf7a1573b3ab23d9a2d70fbf30a8ef0c4958/libgfortran%2Fgenerated%2Fmaxval_r10.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5d7adf7a1573b3ab23d9a2d70fbf30a8ef0c4958/libgfortran%2Fgenerated%2Fmaxval_r10.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmaxval_r10.c?ref=5d7adf7a1573b3ab23d9a2d70fbf30a8ef0c4958", "patch": "@@ -146,7 +146,7 @@ maxval_r10 (gfc_array_r10 * const restrict retarray,\n              the next dimension.  */\n           count[n] = 0;\n           /* We could precalculate these products, but this is a less\n-             frequently used path so proabably not worth it.  */\n+             frequently used path so probably not worth it.  */\n           base -= sstride[n] * extent[n];\n           dest -= dstride[n] * extent[n];\n           n++;\n@@ -298,7 +298,7 @@ mmaxval_r10 (gfc_array_r10 * const restrict retarray,\n              the next dimension.  */\n           count[n] = 0;\n           /* We could precalculate these products, but this is a less\n-             frequently used path so proabably not worth it.  */\n+             frequently used path so probably not worth it.  */\n           base -= sstride[n] * extent[n];\n           mbase -= mstride[n] * extent[n];\n           dest -= dstride[n] * extent[n];"}, {"sha": "94d6789a2eb60311f10be0db75b9189cce6e0107", "filename": "libgfortran/generated/maxval_r16.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5d7adf7a1573b3ab23d9a2d70fbf30a8ef0c4958/libgfortran%2Fgenerated%2Fmaxval_r16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5d7adf7a1573b3ab23d9a2d70fbf30a8ef0c4958/libgfortran%2Fgenerated%2Fmaxval_r16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmaxval_r16.c?ref=5d7adf7a1573b3ab23d9a2d70fbf30a8ef0c4958", "patch": "@@ -146,7 +146,7 @@ maxval_r16 (gfc_array_r16 * const restrict retarray,\n              the next dimension.  */\n           count[n] = 0;\n           /* We could precalculate these products, but this is a less\n-             frequently used path so proabably not worth it.  */\n+             frequently used path so probably not worth it.  */\n           base -= sstride[n] * extent[n];\n           dest -= dstride[n] * extent[n];\n           n++;\n@@ -298,7 +298,7 @@ mmaxval_r16 (gfc_array_r16 * const restrict retarray,\n              the next dimension.  */\n           count[n] = 0;\n           /* We could precalculate these products, but this is a less\n-             frequently used path so proabably not worth it.  */\n+             frequently used path so probably not worth it.  */\n           base -= sstride[n] * extent[n];\n           mbase -= mstride[n] * extent[n];\n           dest -= dstride[n] * extent[n];"}, {"sha": "8b3e1d41965d44cccec34306a3d12b22a3b263a0", "filename": "libgfortran/generated/maxval_r4.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5d7adf7a1573b3ab23d9a2d70fbf30a8ef0c4958/libgfortran%2Fgenerated%2Fmaxval_r4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5d7adf7a1573b3ab23d9a2d70fbf30a8ef0c4958/libgfortran%2Fgenerated%2Fmaxval_r4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmaxval_r4.c?ref=5d7adf7a1573b3ab23d9a2d70fbf30a8ef0c4958", "patch": "@@ -146,7 +146,7 @@ maxval_r4 (gfc_array_r4 * const restrict retarray,\n              the next dimension.  */\n           count[n] = 0;\n           /* We could precalculate these products, but this is a less\n-             frequently used path so proabably not worth it.  */\n+             frequently used path so probably not worth it.  */\n           base -= sstride[n] * extent[n];\n           dest -= dstride[n] * extent[n];\n           n++;\n@@ -298,7 +298,7 @@ mmaxval_r4 (gfc_array_r4 * const restrict retarray,\n              the next dimension.  */\n           count[n] = 0;\n           /* We could precalculate these products, but this is a less\n-             frequently used path so proabably not worth it.  */\n+             frequently used path so probably not worth it.  */\n           base -= sstride[n] * extent[n];\n           mbase -= mstride[n] * extent[n];\n           dest -= dstride[n] * extent[n];"}, {"sha": "f98ca68b9f87bd31fb8ae46f2b260d1424f1945e", "filename": "libgfortran/generated/maxval_r8.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5d7adf7a1573b3ab23d9a2d70fbf30a8ef0c4958/libgfortran%2Fgenerated%2Fmaxval_r8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5d7adf7a1573b3ab23d9a2d70fbf30a8ef0c4958/libgfortran%2Fgenerated%2Fmaxval_r8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmaxval_r8.c?ref=5d7adf7a1573b3ab23d9a2d70fbf30a8ef0c4958", "patch": "@@ -146,7 +146,7 @@ maxval_r8 (gfc_array_r8 * const restrict retarray,\n              the next dimension.  */\n           count[n] = 0;\n           /* We could precalculate these products, but this is a less\n-             frequently used path so proabably not worth it.  */\n+             frequently used path so probably not worth it.  */\n           base -= sstride[n] * extent[n];\n           dest -= dstride[n] * extent[n];\n           n++;\n@@ -298,7 +298,7 @@ mmaxval_r8 (gfc_array_r8 * const restrict retarray,\n              the next dimension.  */\n           count[n] = 0;\n           /* We could precalculate these products, but this is a less\n-             frequently used path so proabably not worth it.  */\n+             frequently used path so probably not worth it.  */\n           base -= sstride[n] * extent[n];\n           mbase -= mstride[n] * extent[n];\n           dest -= dstride[n] * extent[n];"}, {"sha": "e6cd4d1b3c20bf93be0d3691cf913e5d7b56353a", "filename": "libgfortran/generated/minloc0_16_i16.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5d7adf7a1573b3ab23d9a2d70fbf30a8ef0c4958/libgfortran%2Fgenerated%2Fminloc0_16_i16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5d7adf7a1573b3ab23d9a2d70fbf30a8ef0c4958/libgfortran%2Fgenerated%2Fminloc0_16_i16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fminloc0_16_i16.c?ref=5d7adf7a1573b3ab23d9a2d70fbf30a8ef0c4958", "patch": "@@ -128,7 +128,7 @@ minloc0_16_i16 (gfc_array_i16 * const restrict retarray,\n              the next dimension.  */\n           count[n] = 0;\n           /* We could precalculate these products, but this is a less\n-             frequently used path so proabably not worth it.  */\n+             frequently used path so probably not worth it.  */\n           base -= sstride[n] * extent[n];\n           n++;\n           if (n == rank)\n@@ -253,7 +253,7 @@ mminloc0_16_i16 (gfc_array_i16 * const restrict retarray,\n              the next dimension.  */\n           count[n] = 0;\n           /* We could precalculate these products, but this is a less\n-             frequently used path so proabably not worth it.  */\n+             frequently used path so probably not worth it.  */\n           base -= sstride[n] * extent[n];\n           mbase -= mstride[n] * extent[n];\n           n++;"}, {"sha": "6060611d82175f84aeb873bf3829f694877673e4", "filename": "libgfortran/generated/minloc0_16_i4.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5d7adf7a1573b3ab23d9a2d70fbf30a8ef0c4958/libgfortran%2Fgenerated%2Fminloc0_16_i4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5d7adf7a1573b3ab23d9a2d70fbf30a8ef0c4958/libgfortran%2Fgenerated%2Fminloc0_16_i4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fminloc0_16_i4.c?ref=5d7adf7a1573b3ab23d9a2d70fbf30a8ef0c4958", "patch": "@@ -128,7 +128,7 @@ minloc0_16_i4 (gfc_array_i16 * const restrict retarray,\n              the next dimension.  */\n           count[n] = 0;\n           /* We could precalculate these products, but this is a less\n-             frequently used path so proabably not worth it.  */\n+             frequently used path so probably not worth it.  */\n           base -= sstride[n] * extent[n];\n           n++;\n           if (n == rank)\n@@ -253,7 +253,7 @@ mminloc0_16_i4 (gfc_array_i16 * const restrict retarray,\n              the next dimension.  */\n           count[n] = 0;\n           /* We could precalculate these products, but this is a less\n-             frequently used path so proabably not worth it.  */\n+             frequently used path so probably not worth it.  */\n           base -= sstride[n] * extent[n];\n           mbase -= mstride[n] * extent[n];\n           n++;"}, {"sha": "d1c5938b74435504db382f46b9b4db201ed17f01", "filename": "libgfortran/generated/minloc0_16_i8.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5d7adf7a1573b3ab23d9a2d70fbf30a8ef0c4958/libgfortran%2Fgenerated%2Fminloc0_16_i8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5d7adf7a1573b3ab23d9a2d70fbf30a8ef0c4958/libgfortran%2Fgenerated%2Fminloc0_16_i8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fminloc0_16_i8.c?ref=5d7adf7a1573b3ab23d9a2d70fbf30a8ef0c4958", "patch": "@@ -128,7 +128,7 @@ minloc0_16_i8 (gfc_array_i16 * const restrict retarray,\n              the next dimension.  */\n           count[n] = 0;\n           /* We could precalculate these products, but this is a less\n-             frequently used path so proabably not worth it.  */\n+             frequently used path so probably not worth it.  */\n           base -= sstride[n] * extent[n];\n           n++;\n           if (n == rank)\n@@ -253,7 +253,7 @@ mminloc0_16_i8 (gfc_array_i16 * const restrict retarray,\n              the next dimension.  */\n           count[n] = 0;\n           /* We could precalculate these products, but this is a less\n-             frequently used path so proabably not worth it.  */\n+             frequently used path so probably not worth it.  */\n           base -= sstride[n] * extent[n];\n           mbase -= mstride[n] * extent[n];\n           n++;"}, {"sha": "8797d48598fbf502953a848570dfa5014016ad4d", "filename": "libgfortran/generated/minloc0_16_r10.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5d7adf7a1573b3ab23d9a2d70fbf30a8ef0c4958/libgfortran%2Fgenerated%2Fminloc0_16_r10.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5d7adf7a1573b3ab23d9a2d70fbf30a8ef0c4958/libgfortran%2Fgenerated%2Fminloc0_16_r10.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fminloc0_16_r10.c?ref=5d7adf7a1573b3ab23d9a2d70fbf30a8ef0c4958", "patch": "@@ -128,7 +128,7 @@ minloc0_16_r10 (gfc_array_i16 * const restrict retarray,\n              the next dimension.  */\n           count[n] = 0;\n           /* We could precalculate these products, but this is a less\n-             frequently used path so proabably not worth it.  */\n+             frequently used path so probably not worth it.  */\n           base -= sstride[n] * extent[n];\n           n++;\n           if (n == rank)\n@@ -253,7 +253,7 @@ mminloc0_16_r10 (gfc_array_i16 * const restrict retarray,\n              the next dimension.  */\n           count[n] = 0;\n           /* We could precalculate these products, but this is a less\n-             frequently used path so proabably not worth it.  */\n+             frequently used path so probably not worth it.  */\n           base -= sstride[n] * extent[n];\n           mbase -= mstride[n] * extent[n];\n           n++;"}, {"sha": "973a0f0a617dc4d2f0b3ceb2d6c87a62323f272f", "filename": "libgfortran/generated/minloc0_16_r16.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5d7adf7a1573b3ab23d9a2d70fbf30a8ef0c4958/libgfortran%2Fgenerated%2Fminloc0_16_r16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5d7adf7a1573b3ab23d9a2d70fbf30a8ef0c4958/libgfortran%2Fgenerated%2Fminloc0_16_r16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fminloc0_16_r16.c?ref=5d7adf7a1573b3ab23d9a2d70fbf30a8ef0c4958", "patch": "@@ -128,7 +128,7 @@ minloc0_16_r16 (gfc_array_i16 * const restrict retarray,\n              the next dimension.  */\n           count[n] = 0;\n           /* We could precalculate these products, but this is a less\n-             frequently used path so proabably not worth it.  */\n+             frequently used path so probably not worth it.  */\n           base -= sstride[n] * extent[n];\n           n++;\n           if (n == rank)\n@@ -253,7 +253,7 @@ mminloc0_16_r16 (gfc_array_i16 * const restrict retarray,\n              the next dimension.  */\n           count[n] = 0;\n           /* We could precalculate these products, but this is a less\n-             frequently used path so proabably not worth it.  */\n+             frequently used path so probably not worth it.  */\n           base -= sstride[n] * extent[n];\n           mbase -= mstride[n] * extent[n];\n           n++;"}, {"sha": "dedf7f2c44a9a6747706cb5ca245029e9ad10196", "filename": "libgfortran/generated/minloc0_16_r4.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5d7adf7a1573b3ab23d9a2d70fbf30a8ef0c4958/libgfortran%2Fgenerated%2Fminloc0_16_r4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5d7adf7a1573b3ab23d9a2d70fbf30a8ef0c4958/libgfortran%2Fgenerated%2Fminloc0_16_r4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fminloc0_16_r4.c?ref=5d7adf7a1573b3ab23d9a2d70fbf30a8ef0c4958", "patch": "@@ -128,7 +128,7 @@ minloc0_16_r4 (gfc_array_i16 * const restrict retarray,\n              the next dimension.  */\n           count[n] = 0;\n           /* We could precalculate these products, but this is a less\n-             frequently used path so proabably not worth it.  */\n+             frequently used path so probably not worth it.  */\n           base -= sstride[n] * extent[n];\n           n++;\n           if (n == rank)\n@@ -253,7 +253,7 @@ mminloc0_16_r4 (gfc_array_i16 * const restrict retarray,\n              the next dimension.  */\n           count[n] = 0;\n           /* We could precalculate these products, but this is a less\n-             frequently used path so proabably not worth it.  */\n+             frequently used path so probably not worth it.  */\n           base -= sstride[n] * extent[n];\n           mbase -= mstride[n] * extent[n];\n           n++;"}, {"sha": "74175d9aa6a3ca4acee64caa25087b8d698c095e", "filename": "libgfortran/generated/minloc0_16_r8.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5d7adf7a1573b3ab23d9a2d70fbf30a8ef0c4958/libgfortran%2Fgenerated%2Fminloc0_16_r8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5d7adf7a1573b3ab23d9a2d70fbf30a8ef0c4958/libgfortran%2Fgenerated%2Fminloc0_16_r8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fminloc0_16_r8.c?ref=5d7adf7a1573b3ab23d9a2d70fbf30a8ef0c4958", "patch": "@@ -128,7 +128,7 @@ minloc0_16_r8 (gfc_array_i16 * const restrict retarray,\n              the next dimension.  */\n           count[n] = 0;\n           /* We could precalculate these products, but this is a less\n-             frequently used path so proabably not worth it.  */\n+             frequently used path so probably not worth it.  */\n           base -= sstride[n] * extent[n];\n           n++;\n           if (n == rank)\n@@ -253,7 +253,7 @@ mminloc0_16_r8 (gfc_array_i16 * const restrict retarray,\n              the next dimension.  */\n           count[n] = 0;\n           /* We could precalculate these products, but this is a less\n-             frequently used path so proabably not worth it.  */\n+             frequently used path so probably not worth it.  */\n           base -= sstride[n] * extent[n];\n           mbase -= mstride[n] * extent[n];\n           n++;"}, {"sha": "5d95be6e9ca298d88f3d0a9ba8d6baba785a33c4", "filename": "libgfortran/generated/minloc0_4_i16.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5d7adf7a1573b3ab23d9a2d70fbf30a8ef0c4958/libgfortran%2Fgenerated%2Fminloc0_4_i16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5d7adf7a1573b3ab23d9a2d70fbf30a8ef0c4958/libgfortran%2Fgenerated%2Fminloc0_4_i16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fminloc0_4_i16.c?ref=5d7adf7a1573b3ab23d9a2d70fbf30a8ef0c4958", "patch": "@@ -128,7 +128,7 @@ minloc0_4_i16 (gfc_array_i4 * const restrict retarray,\n              the next dimension.  */\n           count[n] = 0;\n           /* We could precalculate these products, but this is a less\n-             frequently used path so proabably not worth it.  */\n+             frequently used path so probably not worth it.  */\n           base -= sstride[n] * extent[n];\n           n++;\n           if (n == rank)\n@@ -253,7 +253,7 @@ mminloc0_4_i16 (gfc_array_i4 * const restrict retarray,\n              the next dimension.  */\n           count[n] = 0;\n           /* We could precalculate these products, but this is a less\n-             frequently used path so proabably not worth it.  */\n+             frequently used path so probably not worth it.  */\n           base -= sstride[n] * extent[n];\n           mbase -= mstride[n] * extent[n];\n           n++;"}, {"sha": "f03f004908a60e0eab797329f41b4db1b9974dbc", "filename": "libgfortran/generated/minloc0_4_i4.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5d7adf7a1573b3ab23d9a2d70fbf30a8ef0c4958/libgfortran%2Fgenerated%2Fminloc0_4_i4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5d7adf7a1573b3ab23d9a2d70fbf30a8ef0c4958/libgfortran%2Fgenerated%2Fminloc0_4_i4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fminloc0_4_i4.c?ref=5d7adf7a1573b3ab23d9a2d70fbf30a8ef0c4958", "patch": "@@ -128,7 +128,7 @@ minloc0_4_i4 (gfc_array_i4 * const restrict retarray,\n              the next dimension.  */\n           count[n] = 0;\n           /* We could precalculate these products, but this is a less\n-             frequently used path so proabably not worth it.  */\n+             frequently used path so probably not worth it.  */\n           base -= sstride[n] * extent[n];\n           n++;\n           if (n == rank)\n@@ -253,7 +253,7 @@ mminloc0_4_i4 (gfc_array_i4 * const restrict retarray,\n              the next dimension.  */\n           count[n] = 0;\n           /* We could precalculate these products, but this is a less\n-             frequently used path so proabably not worth it.  */\n+             frequently used path so probably not worth it.  */\n           base -= sstride[n] * extent[n];\n           mbase -= mstride[n] * extent[n];\n           n++;"}, {"sha": "b8c2a206eee5d90cdb5c5783b978d35f6e32c174", "filename": "libgfortran/generated/minloc0_4_i8.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5d7adf7a1573b3ab23d9a2d70fbf30a8ef0c4958/libgfortran%2Fgenerated%2Fminloc0_4_i8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5d7adf7a1573b3ab23d9a2d70fbf30a8ef0c4958/libgfortran%2Fgenerated%2Fminloc0_4_i8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fminloc0_4_i8.c?ref=5d7adf7a1573b3ab23d9a2d70fbf30a8ef0c4958", "patch": "@@ -128,7 +128,7 @@ minloc0_4_i8 (gfc_array_i4 * const restrict retarray,\n              the next dimension.  */\n           count[n] = 0;\n           /* We could precalculate these products, but this is a less\n-             frequently used path so proabably not worth it.  */\n+             frequently used path so probably not worth it.  */\n           base -= sstride[n] * extent[n];\n           n++;\n           if (n == rank)\n@@ -253,7 +253,7 @@ mminloc0_4_i8 (gfc_array_i4 * const restrict retarray,\n              the next dimension.  */\n           count[n] = 0;\n           /* We could precalculate these products, but this is a less\n-             frequently used path so proabably not worth it.  */\n+             frequently used path so probably not worth it.  */\n           base -= sstride[n] * extent[n];\n           mbase -= mstride[n] * extent[n];\n           n++;"}, {"sha": "2f70c74534569016693488a46c6403b48fc07243", "filename": "libgfortran/generated/minloc0_4_r10.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5d7adf7a1573b3ab23d9a2d70fbf30a8ef0c4958/libgfortran%2Fgenerated%2Fminloc0_4_r10.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5d7adf7a1573b3ab23d9a2d70fbf30a8ef0c4958/libgfortran%2Fgenerated%2Fminloc0_4_r10.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fminloc0_4_r10.c?ref=5d7adf7a1573b3ab23d9a2d70fbf30a8ef0c4958", "patch": "@@ -128,7 +128,7 @@ minloc0_4_r10 (gfc_array_i4 * const restrict retarray,\n              the next dimension.  */\n           count[n] = 0;\n           /* We could precalculate these products, but this is a less\n-             frequently used path so proabably not worth it.  */\n+             frequently used path so probably not worth it.  */\n           base -= sstride[n] * extent[n];\n           n++;\n           if (n == rank)\n@@ -253,7 +253,7 @@ mminloc0_4_r10 (gfc_array_i4 * const restrict retarray,\n              the next dimension.  */\n           count[n] = 0;\n           /* We could precalculate these products, but this is a less\n-             frequently used path so proabably not worth it.  */\n+             frequently used path so probably not worth it.  */\n           base -= sstride[n] * extent[n];\n           mbase -= mstride[n] * extent[n];\n           n++;"}, {"sha": "f5ba63ce4e971de52ee76e779e65926bd4cefb94", "filename": "libgfortran/generated/minloc0_4_r16.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5d7adf7a1573b3ab23d9a2d70fbf30a8ef0c4958/libgfortran%2Fgenerated%2Fminloc0_4_r16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5d7adf7a1573b3ab23d9a2d70fbf30a8ef0c4958/libgfortran%2Fgenerated%2Fminloc0_4_r16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fminloc0_4_r16.c?ref=5d7adf7a1573b3ab23d9a2d70fbf30a8ef0c4958", "patch": "@@ -128,7 +128,7 @@ minloc0_4_r16 (gfc_array_i4 * const restrict retarray,\n              the next dimension.  */\n           count[n] = 0;\n           /* We could precalculate these products, but this is a less\n-             frequently used path so proabably not worth it.  */\n+             frequently used path so probably not worth it.  */\n           base -= sstride[n] * extent[n];\n           n++;\n           if (n == rank)\n@@ -253,7 +253,7 @@ mminloc0_4_r16 (gfc_array_i4 * const restrict retarray,\n              the next dimension.  */\n           count[n] = 0;\n           /* We could precalculate these products, but this is a less\n-             frequently used path so proabably not worth it.  */\n+             frequently used path so probably not worth it.  */\n           base -= sstride[n] * extent[n];\n           mbase -= mstride[n] * extent[n];\n           n++;"}, {"sha": "7f19c5398787c5f381abe4436f8f4c5d3e4c73e5", "filename": "libgfortran/generated/minloc0_4_r4.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5d7adf7a1573b3ab23d9a2d70fbf30a8ef0c4958/libgfortran%2Fgenerated%2Fminloc0_4_r4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5d7adf7a1573b3ab23d9a2d70fbf30a8ef0c4958/libgfortran%2Fgenerated%2Fminloc0_4_r4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fminloc0_4_r4.c?ref=5d7adf7a1573b3ab23d9a2d70fbf30a8ef0c4958", "patch": "@@ -128,7 +128,7 @@ minloc0_4_r4 (gfc_array_i4 * const restrict retarray,\n              the next dimension.  */\n           count[n] = 0;\n           /* We could precalculate these products, but this is a less\n-             frequently used path so proabably not worth it.  */\n+             frequently used path so probably not worth it.  */\n           base -= sstride[n] * extent[n];\n           n++;\n           if (n == rank)\n@@ -253,7 +253,7 @@ mminloc0_4_r4 (gfc_array_i4 * const restrict retarray,\n              the next dimension.  */\n           count[n] = 0;\n           /* We could precalculate these products, but this is a less\n-             frequently used path so proabably not worth it.  */\n+             frequently used path so probably not worth it.  */\n           base -= sstride[n] * extent[n];\n           mbase -= mstride[n] * extent[n];\n           n++;"}, {"sha": "2501b6673c668ebfdf691e069d8b090a19d5169f", "filename": "libgfortran/generated/minloc0_4_r8.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5d7adf7a1573b3ab23d9a2d70fbf30a8ef0c4958/libgfortran%2Fgenerated%2Fminloc0_4_r8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5d7adf7a1573b3ab23d9a2d70fbf30a8ef0c4958/libgfortran%2Fgenerated%2Fminloc0_4_r8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fminloc0_4_r8.c?ref=5d7adf7a1573b3ab23d9a2d70fbf30a8ef0c4958", "patch": "@@ -128,7 +128,7 @@ minloc0_4_r8 (gfc_array_i4 * const restrict retarray,\n              the next dimension.  */\n           count[n] = 0;\n           /* We could precalculate these products, but this is a less\n-             frequently used path so proabably not worth it.  */\n+             frequently used path so probably not worth it.  */\n           base -= sstride[n] * extent[n];\n           n++;\n           if (n == rank)\n@@ -253,7 +253,7 @@ mminloc0_4_r8 (gfc_array_i4 * const restrict retarray,\n              the next dimension.  */\n           count[n] = 0;\n           /* We could precalculate these products, but this is a less\n-             frequently used path so proabably not worth it.  */\n+             frequently used path so probably not worth it.  */\n           base -= sstride[n] * extent[n];\n           mbase -= mstride[n] * extent[n];\n           n++;"}, {"sha": "af56f6cefb34fc66fd6e9efa4fbe4974f8242764", "filename": "libgfortran/generated/minloc0_8_i16.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5d7adf7a1573b3ab23d9a2d70fbf30a8ef0c4958/libgfortran%2Fgenerated%2Fminloc0_8_i16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5d7adf7a1573b3ab23d9a2d70fbf30a8ef0c4958/libgfortran%2Fgenerated%2Fminloc0_8_i16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fminloc0_8_i16.c?ref=5d7adf7a1573b3ab23d9a2d70fbf30a8ef0c4958", "patch": "@@ -128,7 +128,7 @@ minloc0_8_i16 (gfc_array_i8 * const restrict retarray,\n              the next dimension.  */\n           count[n] = 0;\n           /* We could precalculate these products, but this is a less\n-             frequently used path so proabably not worth it.  */\n+             frequently used path so probably not worth it.  */\n           base -= sstride[n] * extent[n];\n           n++;\n           if (n == rank)\n@@ -253,7 +253,7 @@ mminloc0_8_i16 (gfc_array_i8 * const restrict retarray,\n              the next dimension.  */\n           count[n] = 0;\n           /* We could precalculate these products, but this is a less\n-             frequently used path so proabably not worth it.  */\n+             frequently used path so probably not worth it.  */\n           base -= sstride[n] * extent[n];\n           mbase -= mstride[n] * extent[n];\n           n++;"}, {"sha": "5bcfec09ba18861849c9f6e73be3d03b47c98b3e", "filename": "libgfortran/generated/minloc0_8_i4.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5d7adf7a1573b3ab23d9a2d70fbf30a8ef0c4958/libgfortran%2Fgenerated%2Fminloc0_8_i4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5d7adf7a1573b3ab23d9a2d70fbf30a8ef0c4958/libgfortran%2Fgenerated%2Fminloc0_8_i4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fminloc0_8_i4.c?ref=5d7adf7a1573b3ab23d9a2d70fbf30a8ef0c4958", "patch": "@@ -128,7 +128,7 @@ minloc0_8_i4 (gfc_array_i8 * const restrict retarray,\n              the next dimension.  */\n           count[n] = 0;\n           /* We could precalculate these products, but this is a less\n-             frequently used path so proabably not worth it.  */\n+             frequently used path so probably not worth it.  */\n           base -= sstride[n] * extent[n];\n           n++;\n           if (n == rank)\n@@ -253,7 +253,7 @@ mminloc0_8_i4 (gfc_array_i8 * const restrict retarray,\n              the next dimension.  */\n           count[n] = 0;\n           /* We could precalculate these products, but this is a less\n-             frequently used path so proabably not worth it.  */\n+             frequently used path so probably not worth it.  */\n           base -= sstride[n] * extent[n];\n           mbase -= mstride[n] * extent[n];\n           n++;"}, {"sha": "1f7f7fd510a6d81e3889de6b8d5a5b1b5a41eac9", "filename": "libgfortran/generated/minloc0_8_i8.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5d7adf7a1573b3ab23d9a2d70fbf30a8ef0c4958/libgfortran%2Fgenerated%2Fminloc0_8_i8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5d7adf7a1573b3ab23d9a2d70fbf30a8ef0c4958/libgfortran%2Fgenerated%2Fminloc0_8_i8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fminloc0_8_i8.c?ref=5d7adf7a1573b3ab23d9a2d70fbf30a8ef0c4958", "patch": "@@ -128,7 +128,7 @@ minloc0_8_i8 (gfc_array_i8 * const restrict retarray,\n              the next dimension.  */\n           count[n] = 0;\n           /* We could precalculate these products, but this is a less\n-             frequently used path so proabably not worth it.  */\n+             frequently used path so probably not worth it.  */\n           base -= sstride[n] * extent[n];\n           n++;\n           if (n == rank)\n@@ -253,7 +253,7 @@ mminloc0_8_i8 (gfc_array_i8 * const restrict retarray,\n              the next dimension.  */\n           count[n] = 0;\n           /* We could precalculate these products, but this is a less\n-             frequently used path so proabably not worth it.  */\n+             frequently used path so probably not worth it.  */\n           base -= sstride[n] * extent[n];\n           mbase -= mstride[n] * extent[n];\n           n++;"}, {"sha": "72b7ed5f2bfa84782521fcc38a3d5a2ccd54f1be", "filename": "libgfortran/generated/minloc0_8_r10.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5d7adf7a1573b3ab23d9a2d70fbf30a8ef0c4958/libgfortran%2Fgenerated%2Fminloc0_8_r10.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5d7adf7a1573b3ab23d9a2d70fbf30a8ef0c4958/libgfortran%2Fgenerated%2Fminloc0_8_r10.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fminloc0_8_r10.c?ref=5d7adf7a1573b3ab23d9a2d70fbf30a8ef0c4958", "patch": "@@ -128,7 +128,7 @@ minloc0_8_r10 (gfc_array_i8 * const restrict retarray,\n              the next dimension.  */\n           count[n] = 0;\n           /* We could precalculate these products, but this is a less\n-             frequently used path so proabably not worth it.  */\n+             frequently used path so probably not worth it.  */\n           base -= sstride[n] * extent[n];\n           n++;\n           if (n == rank)\n@@ -253,7 +253,7 @@ mminloc0_8_r10 (gfc_array_i8 * const restrict retarray,\n              the next dimension.  */\n           count[n] = 0;\n           /* We could precalculate these products, but this is a less\n-             frequently used path so proabably not worth it.  */\n+             frequently used path so probably not worth it.  */\n           base -= sstride[n] * extent[n];\n           mbase -= mstride[n] * extent[n];\n           n++;"}, {"sha": "ca46545381090238f15752929fa0ce3c40df70a7", "filename": "libgfortran/generated/minloc0_8_r16.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5d7adf7a1573b3ab23d9a2d70fbf30a8ef0c4958/libgfortran%2Fgenerated%2Fminloc0_8_r16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5d7adf7a1573b3ab23d9a2d70fbf30a8ef0c4958/libgfortran%2Fgenerated%2Fminloc0_8_r16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fminloc0_8_r16.c?ref=5d7adf7a1573b3ab23d9a2d70fbf30a8ef0c4958", "patch": "@@ -128,7 +128,7 @@ minloc0_8_r16 (gfc_array_i8 * const restrict retarray,\n              the next dimension.  */\n           count[n] = 0;\n           /* We could precalculate these products, but this is a less\n-             frequently used path so proabably not worth it.  */\n+             frequently used path so probably not worth it.  */\n           base -= sstride[n] * extent[n];\n           n++;\n           if (n == rank)\n@@ -253,7 +253,7 @@ mminloc0_8_r16 (gfc_array_i8 * const restrict retarray,\n              the next dimension.  */\n           count[n] = 0;\n           /* We could precalculate these products, but this is a less\n-             frequently used path so proabably not worth it.  */\n+             frequently used path so probably not worth it.  */\n           base -= sstride[n] * extent[n];\n           mbase -= mstride[n] * extent[n];\n           n++;"}, {"sha": "45ac73ba005d9f0a95a586bdf864f39477123aa1", "filename": "libgfortran/generated/minloc0_8_r4.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5d7adf7a1573b3ab23d9a2d70fbf30a8ef0c4958/libgfortran%2Fgenerated%2Fminloc0_8_r4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5d7adf7a1573b3ab23d9a2d70fbf30a8ef0c4958/libgfortran%2Fgenerated%2Fminloc0_8_r4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fminloc0_8_r4.c?ref=5d7adf7a1573b3ab23d9a2d70fbf30a8ef0c4958", "patch": "@@ -128,7 +128,7 @@ minloc0_8_r4 (gfc_array_i8 * const restrict retarray,\n              the next dimension.  */\n           count[n] = 0;\n           /* We could precalculate these products, but this is a less\n-             frequently used path so proabably not worth it.  */\n+             frequently used path so probably not worth it.  */\n           base -= sstride[n] * extent[n];\n           n++;\n           if (n == rank)\n@@ -253,7 +253,7 @@ mminloc0_8_r4 (gfc_array_i8 * const restrict retarray,\n              the next dimension.  */\n           count[n] = 0;\n           /* We could precalculate these products, but this is a less\n-             frequently used path so proabably not worth it.  */\n+             frequently used path so probably not worth it.  */\n           base -= sstride[n] * extent[n];\n           mbase -= mstride[n] * extent[n];\n           n++;"}, {"sha": "67bd8884b12276d3615d41b8d1a8f66b10312dcf", "filename": "libgfortran/generated/minloc0_8_r8.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5d7adf7a1573b3ab23d9a2d70fbf30a8ef0c4958/libgfortran%2Fgenerated%2Fminloc0_8_r8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5d7adf7a1573b3ab23d9a2d70fbf30a8ef0c4958/libgfortran%2Fgenerated%2Fminloc0_8_r8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fminloc0_8_r8.c?ref=5d7adf7a1573b3ab23d9a2d70fbf30a8ef0c4958", "patch": "@@ -128,7 +128,7 @@ minloc0_8_r8 (gfc_array_i8 * const restrict retarray,\n              the next dimension.  */\n           count[n] = 0;\n           /* We could precalculate these products, but this is a less\n-             frequently used path so proabably not worth it.  */\n+             frequently used path so probably not worth it.  */\n           base -= sstride[n] * extent[n];\n           n++;\n           if (n == rank)\n@@ -253,7 +253,7 @@ mminloc0_8_r8 (gfc_array_i8 * const restrict retarray,\n              the next dimension.  */\n           count[n] = 0;\n           /* We could precalculate these products, but this is a less\n-             frequently used path so proabably not worth it.  */\n+             frequently used path so probably not worth it.  */\n           base -= sstride[n] * extent[n];\n           mbase -= mstride[n] * extent[n];\n           n++;"}, {"sha": "d27e5b3dd7694c8235f3b9413f9ca54deb3052ef", "filename": "libgfortran/generated/minloc1_16_i16.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5d7adf7a1573b3ab23d9a2d70fbf30a8ef0c4958/libgfortran%2Fgenerated%2Fminloc1_16_i16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5d7adf7a1573b3ab23d9a2d70fbf30a8ef0c4958/libgfortran%2Fgenerated%2Fminloc1_16_i16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fminloc1_16_i16.c?ref=5d7adf7a1573b3ab23d9a2d70fbf30a8ef0c4958", "patch": "@@ -152,7 +152,7 @@ minloc1_16_i16 (gfc_array_i16 * const restrict retarray,\n              the next dimension.  */\n           count[n] = 0;\n           /* We could precalculate these products, but this is a less\n-             frequently used path so proabably not worth it.  */\n+             frequently used path so probably not worth it.  */\n           base -= sstride[n] * extent[n];\n           dest -= dstride[n] * extent[n];\n           n++;\n@@ -309,7 +309,7 @@ mminloc1_16_i16 (gfc_array_i16 * const restrict retarray,\n              the next dimension.  */\n           count[n] = 0;\n           /* We could precalculate these products, but this is a less\n-             frequently used path so proabably not worth it.  */\n+             frequently used path so probably not worth it.  */\n           base -= sstride[n] * extent[n];\n           mbase -= mstride[n] * extent[n];\n           dest -= dstride[n] * extent[n];"}, {"sha": "64925cdf13279f6879949e285cab85514bc6fe49", "filename": "libgfortran/generated/minloc1_16_i4.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5d7adf7a1573b3ab23d9a2d70fbf30a8ef0c4958/libgfortran%2Fgenerated%2Fminloc1_16_i4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5d7adf7a1573b3ab23d9a2d70fbf30a8ef0c4958/libgfortran%2Fgenerated%2Fminloc1_16_i4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fminloc1_16_i4.c?ref=5d7adf7a1573b3ab23d9a2d70fbf30a8ef0c4958", "patch": "@@ -152,7 +152,7 @@ minloc1_16_i4 (gfc_array_i16 * const restrict retarray,\n              the next dimension.  */\n           count[n] = 0;\n           /* We could precalculate these products, but this is a less\n-             frequently used path so proabably not worth it.  */\n+             frequently used path so probably not worth it.  */\n           base -= sstride[n] * extent[n];\n           dest -= dstride[n] * extent[n];\n           n++;\n@@ -309,7 +309,7 @@ mminloc1_16_i4 (gfc_array_i16 * const restrict retarray,\n              the next dimension.  */\n           count[n] = 0;\n           /* We could precalculate these products, but this is a less\n-             frequently used path so proabably not worth it.  */\n+             frequently used path so probably not worth it.  */\n           base -= sstride[n] * extent[n];\n           mbase -= mstride[n] * extent[n];\n           dest -= dstride[n] * extent[n];"}, {"sha": "7ec2c1cc9e63bbfb44235ee7c87058751601af35", "filename": "libgfortran/generated/minloc1_16_i8.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5d7adf7a1573b3ab23d9a2d70fbf30a8ef0c4958/libgfortran%2Fgenerated%2Fminloc1_16_i8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5d7adf7a1573b3ab23d9a2d70fbf30a8ef0c4958/libgfortran%2Fgenerated%2Fminloc1_16_i8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fminloc1_16_i8.c?ref=5d7adf7a1573b3ab23d9a2d70fbf30a8ef0c4958", "patch": "@@ -152,7 +152,7 @@ minloc1_16_i8 (gfc_array_i16 * const restrict retarray,\n              the next dimension.  */\n           count[n] = 0;\n           /* We could precalculate these products, but this is a less\n-             frequently used path so proabably not worth it.  */\n+             frequently used path so probably not worth it.  */\n           base -= sstride[n] * extent[n];\n           dest -= dstride[n] * extent[n];\n           n++;\n@@ -309,7 +309,7 @@ mminloc1_16_i8 (gfc_array_i16 * const restrict retarray,\n              the next dimension.  */\n           count[n] = 0;\n           /* We could precalculate these products, but this is a less\n-             frequently used path so proabably not worth it.  */\n+             frequently used path so probably not worth it.  */\n           base -= sstride[n] * extent[n];\n           mbase -= mstride[n] * extent[n];\n           dest -= dstride[n] * extent[n];"}, {"sha": "7865d7ed9eb076503a41498438d852e5974f585e", "filename": "libgfortran/generated/minloc1_16_r10.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5d7adf7a1573b3ab23d9a2d70fbf30a8ef0c4958/libgfortran%2Fgenerated%2Fminloc1_16_r10.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5d7adf7a1573b3ab23d9a2d70fbf30a8ef0c4958/libgfortran%2Fgenerated%2Fminloc1_16_r10.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fminloc1_16_r10.c?ref=5d7adf7a1573b3ab23d9a2d70fbf30a8ef0c4958", "patch": "@@ -152,7 +152,7 @@ minloc1_16_r10 (gfc_array_i16 * const restrict retarray,\n              the next dimension.  */\n           count[n] = 0;\n           /* We could precalculate these products, but this is a less\n-             frequently used path so proabably not worth it.  */\n+             frequently used path so probably not worth it.  */\n           base -= sstride[n] * extent[n];\n           dest -= dstride[n] * extent[n];\n           n++;\n@@ -309,7 +309,7 @@ mminloc1_16_r10 (gfc_array_i16 * const restrict retarray,\n              the next dimension.  */\n           count[n] = 0;\n           /* We could precalculate these products, but this is a less\n-             frequently used path so proabably not worth it.  */\n+             frequently used path so probably not worth it.  */\n           base -= sstride[n] * extent[n];\n           mbase -= mstride[n] * extent[n];\n           dest -= dstride[n] * extent[n];"}, {"sha": "8e0b36e640fbe6a582f57732b242416546919dbe", "filename": "libgfortran/generated/minloc1_16_r16.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5d7adf7a1573b3ab23d9a2d70fbf30a8ef0c4958/libgfortran%2Fgenerated%2Fminloc1_16_r16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5d7adf7a1573b3ab23d9a2d70fbf30a8ef0c4958/libgfortran%2Fgenerated%2Fminloc1_16_r16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fminloc1_16_r16.c?ref=5d7adf7a1573b3ab23d9a2d70fbf30a8ef0c4958", "patch": "@@ -152,7 +152,7 @@ minloc1_16_r16 (gfc_array_i16 * const restrict retarray,\n              the next dimension.  */\n           count[n] = 0;\n           /* We could precalculate these products, but this is a less\n-             frequently used path so proabably not worth it.  */\n+             frequently used path so probably not worth it.  */\n           base -= sstride[n] * extent[n];\n           dest -= dstride[n] * extent[n];\n           n++;\n@@ -309,7 +309,7 @@ mminloc1_16_r16 (gfc_array_i16 * const restrict retarray,\n              the next dimension.  */\n           count[n] = 0;\n           /* We could precalculate these products, but this is a less\n-             frequently used path so proabably not worth it.  */\n+             frequently used path so probably not worth it.  */\n           base -= sstride[n] * extent[n];\n           mbase -= mstride[n] * extent[n];\n           dest -= dstride[n] * extent[n];"}, {"sha": "8d7f1f15a6b424fe3d49a3a1ef8bf35334e765d2", "filename": "libgfortran/generated/minloc1_16_r4.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5d7adf7a1573b3ab23d9a2d70fbf30a8ef0c4958/libgfortran%2Fgenerated%2Fminloc1_16_r4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5d7adf7a1573b3ab23d9a2d70fbf30a8ef0c4958/libgfortran%2Fgenerated%2Fminloc1_16_r4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fminloc1_16_r4.c?ref=5d7adf7a1573b3ab23d9a2d70fbf30a8ef0c4958", "patch": "@@ -152,7 +152,7 @@ minloc1_16_r4 (gfc_array_i16 * const restrict retarray,\n              the next dimension.  */\n           count[n] = 0;\n           /* We could precalculate these products, but this is a less\n-             frequently used path so proabably not worth it.  */\n+             frequently used path so probably not worth it.  */\n           base -= sstride[n] * extent[n];\n           dest -= dstride[n] * extent[n];\n           n++;\n@@ -309,7 +309,7 @@ mminloc1_16_r4 (gfc_array_i16 * const restrict retarray,\n              the next dimension.  */\n           count[n] = 0;\n           /* We could precalculate these products, but this is a less\n-             frequently used path so proabably not worth it.  */\n+             frequently used path so probably not worth it.  */\n           base -= sstride[n] * extent[n];\n           mbase -= mstride[n] * extent[n];\n           dest -= dstride[n] * extent[n];"}, {"sha": "dd4be68c7eb9b4eca095d3638443d332279f8e16", "filename": "libgfortran/generated/minloc1_16_r8.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5d7adf7a1573b3ab23d9a2d70fbf30a8ef0c4958/libgfortran%2Fgenerated%2Fminloc1_16_r8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5d7adf7a1573b3ab23d9a2d70fbf30a8ef0c4958/libgfortran%2Fgenerated%2Fminloc1_16_r8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fminloc1_16_r8.c?ref=5d7adf7a1573b3ab23d9a2d70fbf30a8ef0c4958", "patch": "@@ -152,7 +152,7 @@ minloc1_16_r8 (gfc_array_i16 * const restrict retarray,\n              the next dimension.  */\n           count[n] = 0;\n           /* We could precalculate these products, but this is a less\n-             frequently used path so proabably not worth it.  */\n+             frequently used path so probably not worth it.  */\n           base -= sstride[n] * extent[n];\n           dest -= dstride[n] * extent[n];\n           n++;\n@@ -309,7 +309,7 @@ mminloc1_16_r8 (gfc_array_i16 * const restrict retarray,\n              the next dimension.  */\n           count[n] = 0;\n           /* We could precalculate these products, but this is a less\n-             frequently used path so proabably not worth it.  */\n+             frequently used path so probably not worth it.  */\n           base -= sstride[n] * extent[n];\n           mbase -= mstride[n] * extent[n];\n           dest -= dstride[n] * extent[n];"}, {"sha": "ce865e810e6517cfeb2998bb220576bce5247e0f", "filename": "libgfortran/generated/minloc1_4_i16.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5d7adf7a1573b3ab23d9a2d70fbf30a8ef0c4958/libgfortran%2Fgenerated%2Fminloc1_4_i16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5d7adf7a1573b3ab23d9a2d70fbf30a8ef0c4958/libgfortran%2Fgenerated%2Fminloc1_4_i16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fminloc1_4_i16.c?ref=5d7adf7a1573b3ab23d9a2d70fbf30a8ef0c4958", "patch": "@@ -152,7 +152,7 @@ minloc1_4_i16 (gfc_array_i4 * const restrict retarray,\n              the next dimension.  */\n           count[n] = 0;\n           /* We could precalculate these products, but this is a less\n-             frequently used path so proabably not worth it.  */\n+             frequently used path so probably not worth it.  */\n           base -= sstride[n] * extent[n];\n           dest -= dstride[n] * extent[n];\n           n++;\n@@ -309,7 +309,7 @@ mminloc1_4_i16 (gfc_array_i4 * const restrict retarray,\n              the next dimension.  */\n           count[n] = 0;\n           /* We could precalculate these products, but this is a less\n-             frequently used path so proabably not worth it.  */\n+             frequently used path so probably not worth it.  */\n           base -= sstride[n] * extent[n];\n           mbase -= mstride[n] * extent[n];\n           dest -= dstride[n] * extent[n];"}, {"sha": "4032f1ef741ac420d56ef51f1b0937a49eacb4b2", "filename": "libgfortran/generated/minloc1_4_i4.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5d7adf7a1573b3ab23d9a2d70fbf30a8ef0c4958/libgfortran%2Fgenerated%2Fminloc1_4_i4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5d7adf7a1573b3ab23d9a2d70fbf30a8ef0c4958/libgfortran%2Fgenerated%2Fminloc1_4_i4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fminloc1_4_i4.c?ref=5d7adf7a1573b3ab23d9a2d70fbf30a8ef0c4958", "patch": "@@ -152,7 +152,7 @@ minloc1_4_i4 (gfc_array_i4 * const restrict retarray,\n              the next dimension.  */\n           count[n] = 0;\n           /* We could precalculate these products, but this is a less\n-             frequently used path so proabably not worth it.  */\n+             frequently used path so probably not worth it.  */\n           base -= sstride[n] * extent[n];\n           dest -= dstride[n] * extent[n];\n           n++;\n@@ -309,7 +309,7 @@ mminloc1_4_i4 (gfc_array_i4 * const restrict retarray,\n              the next dimension.  */\n           count[n] = 0;\n           /* We could precalculate these products, but this is a less\n-             frequently used path so proabably not worth it.  */\n+             frequently used path so probably not worth it.  */\n           base -= sstride[n] * extent[n];\n           mbase -= mstride[n] * extent[n];\n           dest -= dstride[n] * extent[n];"}, {"sha": "648a658ecf13ef57a0ad6cf952a8898ef52df7d7", "filename": "libgfortran/generated/minloc1_4_i8.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5d7adf7a1573b3ab23d9a2d70fbf30a8ef0c4958/libgfortran%2Fgenerated%2Fminloc1_4_i8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5d7adf7a1573b3ab23d9a2d70fbf30a8ef0c4958/libgfortran%2Fgenerated%2Fminloc1_4_i8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fminloc1_4_i8.c?ref=5d7adf7a1573b3ab23d9a2d70fbf30a8ef0c4958", "patch": "@@ -152,7 +152,7 @@ minloc1_4_i8 (gfc_array_i4 * const restrict retarray,\n              the next dimension.  */\n           count[n] = 0;\n           /* We could precalculate these products, but this is a less\n-             frequently used path so proabably not worth it.  */\n+             frequently used path so probably not worth it.  */\n           base -= sstride[n] * extent[n];\n           dest -= dstride[n] * extent[n];\n           n++;\n@@ -309,7 +309,7 @@ mminloc1_4_i8 (gfc_array_i4 * const restrict retarray,\n              the next dimension.  */\n           count[n] = 0;\n           /* We could precalculate these products, but this is a less\n-             frequently used path so proabably not worth it.  */\n+             frequently used path so probably not worth it.  */\n           base -= sstride[n] * extent[n];\n           mbase -= mstride[n] * extent[n];\n           dest -= dstride[n] * extent[n];"}, {"sha": "88ae0826074fc98bff84a31edf0d54ce8048ca97", "filename": "libgfortran/generated/minloc1_4_r10.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5d7adf7a1573b3ab23d9a2d70fbf30a8ef0c4958/libgfortran%2Fgenerated%2Fminloc1_4_r10.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5d7adf7a1573b3ab23d9a2d70fbf30a8ef0c4958/libgfortran%2Fgenerated%2Fminloc1_4_r10.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fminloc1_4_r10.c?ref=5d7adf7a1573b3ab23d9a2d70fbf30a8ef0c4958", "patch": "@@ -152,7 +152,7 @@ minloc1_4_r10 (gfc_array_i4 * const restrict retarray,\n              the next dimension.  */\n           count[n] = 0;\n           /* We could precalculate these products, but this is a less\n-             frequently used path so proabably not worth it.  */\n+             frequently used path so probably not worth it.  */\n           base -= sstride[n] * extent[n];\n           dest -= dstride[n] * extent[n];\n           n++;\n@@ -309,7 +309,7 @@ mminloc1_4_r10 (gfc_array_i4 * const restrict retarray,\n              the next dimension.  */\n           count[n] = 0;\n           /* We could precalculate these products, but this is a less\n-             frequently used path so proabably not worth it.  */\n+             frequently used path so probably not worth it.  */\n           base -= sstride[n] * extent[n];\n           mbase -= mstride[n] * extent[n];\n           dest -= dstride[n] * extent[n];"}, {"sha": "fdf995a98cb5587f0ee67e3cb2408fcc93688281", "filename": "libgfortran/generated/minloc1_4_r16.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5d7adf7a1573b3ab23d9a2d70fbf30a8ef0c4958/libgfortran%2Fgenerated%2Fminloc1_4_r16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5d7adf7a1573b3ab23d9a2d70fbf30a8ef0c4958/libgfortran%2Fgenerated%2Fminloc1_4_r16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fminloc1_4_r16.c?ref=5d7adf7a1573b3ab23d9a2d70fbf30a8ef0c4958", "patch": "@@ -152,7 +152,7 @@ minloc1_4_r16 (gfc_array_i4 * const restrict retarray,\n              the next dimension.  */\n           count[n] = 0;\n           /* We could precalculate these products, but this is a less\n-             frequently used path so proabably not worth it.  */\n+             frequently used path so probably not worth it.  */\n           base -= sstride[n] * extent[n];\n           dest -= dstride[n] * extent[n];\n           n++;\n@@ -309,7 +309,7 @@ mminloc1_4_r16 (gfc_array_i4 * const restrict retarray,\n              the next dimension.  */\n           count[n] = 0;\n           /* We could precalculate these products, but this is a less\n-             frequently used path so proabably not worth it.  */\n+             frequently used path so probably not worth it.  */\n           base -= sstride[n] * extent[n];\n           mbase -= mstride[n] * extent[n];\n           dest -= dstride[n] * extent[n];"}, {"sha": "ca98b5a8c91b75b35d9ca20117f069b4458d65fa", "filename": "libgfortran/generated/minloc1_4_r4.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5d7adf7a1573b3ab23d9a2d70fbf30a8ef0c4958/libgfortran%2Fgenerated%2Fminloc1_4_r4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5d7adf7a1573b3ab23d9a2d70fbf30a8ef0c4958/libgfortran%2Fgenerated%2Fminloc1_4_r4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fminloc1_4_r4.c?ref=5d7adf7a1573b3ab23d9a2d70fbf30a8ef0c4958", "patch": "@@ -152,7 +152,7 @@ minloc1_4_r4 (gfc_array_i4 * const restrict retarray,\n              the next dimension.  */\n           count[n] = 0;\n           /* We could precalculate these products, but this is a less\n-             frequently used path so proabably not worth it.  */\n+             frequently used path so probably not worth it.  */\n           base -= sstride[n] * extent[n];\n           dest -= dstride[n] * extent[n];\n           n++;\n@@ -309,7 +309,7 @@ mminloc1_4_r4 (gfc_array_i4 * const restrict retarray,\n              the next dimension.  */\n           count[n] = 0;\n           /* We could precalculate these products, but this is a less\n-             frequently used path so proabably not worth it.  */\n+             frequently used path so probably not worth it.  */\n           base -= sstride[n] * extent[n];\n           mbase -= mstride[n] * extent[n];\n           dest -= dstride[n] * extent[n];"}, {"sha": "532954d176de0127d5c2940daf3b99dbbd9df396", "filename": "libgfortran/generated/minloc1_4_r8.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5d7adf7a1573b3ab23d9a2d70fbf30a8ef0c4958/libgfortran%2Fgenerated%2Fminloc1_4_r8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5d7adf7a1573b3ab23d9a2d70fbf30a8ef0c4958/libgfortran%2Fgenerated%2Fminloc1_4_r8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fminloc1_4_r8.c?ref=5d7adf7a1573b3ab23d9a2d70fbf30a8ef0c4958", "patch": "@@ -152,7 +152,7 @@ minloc1_4_r8 (gfc_array_i4 * const restrict retarray,\n              the next dimension.  */\n           count[n] = 0;\n           /* We could precalculate these products, but this is a less\n-             frequently used path so proabably not worth it.  */\n+             frequently used path so probably not worth it.  */\n           base -= sstride[n] * extent[n];\n           dest -= dstride[n] * extent[n];\n           n++;\n@@ -309,7 +309,7 @@ mminloc1_4_r8 (gfc_array_i4 * const restrict retarray,\n              the next dimension.  */\n           count[n] = 0;\n           /* We could precalculate these products, but this is a less\n-             frequently used path so proabably not worth it.  */\n+             frequently used path so probably not worth it.  */\n           base -= sstride[n] * extent[n];\n           mbase -= mstride[n] * extent[n];\n           dest -= dstride[n] * extent[n];"}, {"sha": "83cdc6b748abfd298b9ac0f3311ba133d9e9e13e", "filename": "libgfortran/generated/minloc1_8_i16.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5d7adf7a1573b3ab23d9a2d70fbf30a8ef0c4958/libgfortran%2Fgenerated%2Fminloc1_8_i16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5d7adf7a1573b3ab23d9a2d70fbf30a8ef0c4958/libgfortran%2Fgenerated%2Fminloc1_8_i16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fminloc1_8_i16.c?ref=5d7adf7a1573b3ab23d9a2d70fbf30a8ef0c4958", "patch": "@@ -152,7 +152,7 @@ minloc1_8_i16 (gfc_array_i8 * const restrict retarray,\n              the next dimension.  */\n           count[n] = 0;\n           /* We could precalculate these products, but this is a less\n-             frequently used path so proabably not worth it.  */\n+             frequently used path so probably not worth it.  */\n           base -= sstride[n] * extent[n];\n           dest -= dstride[n] * extent[n];\n           n++;\n@@ -309,7 +309,7 @@ mminloc1_8_i16 (gfc_array_i8 * const restrict retarray,\n              the next dimension.  */\n           count[n] = 0;\n           /* We could precalculate these products, but this is a less\n-             frequently used path so proabably not worth it.  */\n+             frequently used path so probably not worth it.  */\n           base -= sstride[n] * extent[n];\n           mbase -= mstride[n] * extent[n];\n           dest -= dstride[n] * extent[n];"}, {"sha": "6382e9b605362f848f064a4ece6506b3816207a3", "filename": "libgfortran/generated/minloc1_8_i4.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5d7adf7a1573b3ab23d9a2d70fbf30a8ef0c4958/libgfortran%2Fgenerated%2Fminloc1_8_i4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5d7adf7a1573b3ab23d9a2d70fbf30a8ef0c4958/libgfortran%2Fgenerated%2Fminloc1_8_i4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fminloc1_8_i4.c?ref=5d7adf7a1573b3ab23d9a2d70fbf30a8ef0c4958", "patch": "@@ -152,7 +152,7 @@ minloc1_8_i4 (gfc_array_i8 * const restrict retarray,\n              the next dimension.  */\n           count[n] = 0;\n           /* We could precalculate these products, but this is a less\n-             frequently used path so proabably not worth it.  */\n+             frequently used path so probably not worth it.  */\n           base -= sstride[n] * extent[n];\n           dest -= dstride[n] * extent[n];\n           n++;\n@@ -309,7 +309,7 @@ mminloc1_8_i4 (gfc_array_i8 * const restrict retarray,\n              the next dimension.  */\n           count[n] = 0;\n           /* We could precalculate these products, but this is a less\n-             frequently used path so proabably not worth it.  */\n+             frequently used path so probably not worth it.  */\n           base -= sstride[n] * extent[n];\n           mbase -= mstride[n] * extent[n];\n           dest -= dstride[n] * extent[n];"}, {"sha": "82c3836cae860e1c25a65fbd6a02e4fb4ce1fb37", "filename": "libgfortran/generated/minloc1_8_i8.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5d7adf7a1573b3ab23d9a2d70fbf30a8ef0c4958/libgfortran%2Fgenerated%2Fminloc1_8_i8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5d7adf7a1573b3ab23d9a2d70fbf30a8ef0c4958/libgfortran%2Fgenerated%2Fminloc1_8_i8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fminloc1_8_i8.c?ref=5d7adf7a1573b3ab23d9a2d70fbf30a8ef0c4958", "patch": "@@ -152,7 +152,7 @@ minloc1_8_i8 (gfc_array_i8 * const restrict retarray,\n              the next dimension.  */\n           count[n] = 0;\n           /* We could precalculate these products, but this is a less\n-             frequently used path so proabably not worth it.  */\n+             frequently used path so probably not worth it.  */\n           base -= sstride[n] * extent[n];\n           dest -= dstride[n] * extent[n];\n           n++;\n@@ -309,7 +309,7 @@ mminloc1_8_i8 (gfc_array_i8 * const restrict retarray,\n              the next dimension.  */\n           count[n] = 0;\n           /* We could precalculate these products, but this is a less\n-             frequently used path so proabably not worth it.  */\n+             frequently used path so probably not worth it.  */\n           base -= sstride[n] * extent[n];\n           mbase -= mstride[n] * extent[n];\n           dest -= dstride[n] * extent[n];"}, {"sha": "8cb2e28174ad1b3504d8d4c0306980bdbab6492a", "filename": "libgfortran/generated/minloc1_8_r10.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5d7adf7a1573b3ab23d9a2d70fbf30a8ef0c4958/libgfortran%2Fgenerated%2Fminloc1_8_r10.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5d7adf7a1573b3ab23d9a2d70fbf30a8ef0c4958/libgfortran%2Fgenerated%2Fminloc1_8_r10.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fminloc1_8_r10.c?ref=5d7adf7a1573b3ab23d9a2d70fbf30a8ef0c4958", "patch": "@@ -152,7 +152,7 @@ minloc1_8_r10 (gfc_array_i8 * const restrict retarray,\n              the next dimension.  */\n           count[n] = 0;\n           /* We could precalculate these products, but this is a less\n-             frequently used path so proabably not worth it.  */\n+             frequently used path so probably not worth it.  */\n           base -= sstride[n] * extent[n];\n           dest -= dstride[n] * extent[n];\n           n++;\n@@ -309,7 +309,7 @@ mminloc1_8_r10 (gfc_array_i8 * const restrict retarray,\n              the next dimension.  */\n           count[n] = 0;\n           /* We could precalculate these products, but this is a less\n-             frequently used path so proabably not worth it.  */\n+             frequently used path so probably not worth it.  */\n           base -= sstride[n] * extent[n];\n           mbase -= mstride[n] * extent[n];\n           dest -= dstride[n] * extent[n];"}, {"sha": "74eb70bc35477a394e56df4b5fccd5fa0f353009", "filename": "libgfortran/generated/minloc1_8_r16.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5d7adf7a1573b3ab23d9a2d70fbf30a8ef0c4958/libgfortran%2Fgenerated%2Fminloc1_8_r16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5d7adf7a1573b3ab23d9a2d70fbf30a8ef0c4958/libgfortran%2Fgenerated%2Fminloc1_8_r16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fminloc1_8_r16.c?ref=5d7adf7a1573b3ab23d9a2d70fbf30a8ef0c4958", "patch": "@@ -152,7 +152,7 @@ minloc1_8_r16 (gfc_array_i8 * const restrict retarray,\n              the next dimension.  */\n           count[n] = 0;\n           /* We could precalculate these products, but this is a less\n-             frequently used path so proabably not worth it.  */\n+             frequently used path so probably not worth it.  */\n           base -= sstride[n] * extent[n];\n           dest -= dstride[n] * extent[n];\n           n++;\n@@ -309,7 +309,7 @@ mminloc1_8_r16 (gfc_array_i8 * const restrict retarray,\n              the next dimension.  */\n           count[n] = 0;\n           /* We could precalculate these products, but this is a less\n-             frequently used path so proabably not worth it.  */\n+             frequently used path so probably not worth it.  */\n           base -= sstride[n] * extent[n];\n           mbase -= mstride[n] * extent[n];\n           dest -= dstride[n] * extent[n];"}, {"sha": "a6ed57e349a6984a59c65b65a3edddda2f6a0f4f", "filename": "libgfortran/generated/minloc1_8_r4.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5d7adf7a1573b3ab23d9a2d70fbf30a8ef0c4958/libgfortran%2Fgenerated%2Fminloc1_8_r4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5d7adf7a1573b3ab23d9a2d70fbf30a8ef0c4958/libgfortran%2Fgenerated%2Fminloc1_8_r4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fminloc1_8_r4.c?ref=5d7adf7a1573b3ab23d9a2d70fbf30a8ef0c4958", "patch": "@@ -152,7 +152,7 @@ minloc1_8_r4 (gfc_array_i8 * const restrict retarray,\n              the next dimension.  */\n           count[n] = 0;\n           /* We could precalculate these products, but this is a less\n-             frequently used path so proabably not worth it.  */\n+             frequently used path so probably not worth it.  */\n           base -= sstride[n] * extent[n];\n           dest -= dstride[n] * extent[n];\n           n++;\n@@ -309,7 +309,7 @@ mminloc1_8_r4 (gfc_array_i8 * const restrict retarray,\n              the next dimension.  */\n           count[n] = 0;\n           /* We could precalculate these products, but this is a less\n-             frequently used path so proabably not worth it.  */\n+             frequently used path so probably not worth it.  */\n           base -= sstride[n] * extent[n];\n           mbase -= mstride[n] * extent[n];\n           dest -= dstride[n] * extent[n];"}, {"sha": "b03e4974bc217d9d1d3af89fea6d309fda2f13ad", "filename": "libgfortran/generated/minloc1_8_r8.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5d7adf7a1573b3ab23d9a2d70fbf30a8ef0c4958/libgfortran%2Fgenerated%2Fminloc1_8_r8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5d7adf7a1573b3ab23d9a2d70fbf30a8ef0c4958/libgfortran%2Fgenerated%2Fminloc1_8_r8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fminloc1_8_r8.c?ref=5d7adf7a1573b3ab23d9a2d70fbf30a8ef0c4958", "patch": "@@ -152,7 +152,7 @@ minloc1_8_r8 (gfc_array_i8 * const restrict retarray,\n              the next dimension.  */\n           count[n] = 0;\n           /* We could precalculate these products, but this is a less\n-             frequently used path so proabably not worth it.  */\n+             frequently used path so probably not worth it.  */\n           base -= sstride[n] * extent[n];\n           dest -= dstride[n] * extent[n];\n           n++;\n@@ -309,7 +309,7 @@ mminloc1_8_r8 (gfc_array_i8 * const restrict retarray,\n              the next dimension.  */\n           count[n] = 0;\n           /* We could precalculate these products, but this is a less\n-             frequently used path so proabably not worth it.  */\n+             frequently used path so probably not worth it.  */\n           base -= sstride[n] * extent[n];\n           mbase -= mstride[n] * extent[n];\n           dest -= dstride[n] * extent[n];"}, {"sha": "a2e7ed84bfb9a7504b23845c6af2ff17bee3959e", "filename": "libgfortran/generated/minval_i16.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5d7adf7a1573b3ab23d9a2d70fbf30a8ef0c4958/libgfortran%2Fgenerated%2Fminval_i16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5d7adf7a1573b3ab23d9a2d70fbf30a8ef0c4958/libgfortran%2Fgenerated%2Fminval_i16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fminval_i16.c?ref=5d7adf7a1573b3ab23d9a2d70fbf30a8ef0c4958", "patch": "@@ -146,7 +146,7 @@ minval_i16 (gfc_array_i16 * const restrict retarray,\n              the next dimension.  */\n           count[n] = 0;\n           /* We could precalculate these products, but this is a less\n-             frequently used path so proabably not worth it.  */\n+             frequently used path so probably not worth it.  */\n           base -= sstride[n] * extent[n];\n           dest -= dstride[n] * extent[n];\n           n++;\n@@ -298,7 +298,7 @@ mminval_i16 (gfc_array_i16 * const restrict retarray,\n              the next dimension.  */\n           count[n] = 0;\n           /* We could precalculate these products, but this is a less\n-             frequently used path so proabably not worth it.  */\n+             frequently used path so probably not worth it.  */\n           base -= sstride[n] * extent[n];\n           mbase -= mstride[n] * extent[n];\n           dest -= dstride[n] * extent[n];"}, {"sha": "e22a773d412e6056a0dfe89f7c695c6c3a9ddf00", "filename": "libgfortran/generated/minval_i4.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5d7adf7a1573b3ab23d9a2d70fbf30a8ef0c4958/libgfortran%2Fgenerated%2Fminval_i4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5d7adf7a1573b3ab23d9a2d70fbf30a8ef0c4958/libgfortran%2Fgenerated%2Fminval_i4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fminval_i4.c?ref=5d7adf7a1573b3ab23d9a2d70fbf30a8ef0c4958", "patch": "@@ -146,7 +146,7 @@ minval_i4 (gfc_array_i4 * const restrict retarray,\n              the next dimension.  */\n           count[n] = 0;\n           /* We could precalculate these products, but this is a less\n-             frequently used path so proabably not worth it.  */\n+             frequently used path so probably not worth it.  */\n           base -= sstride[n] * extent[n];\n           dest -= dstride[n] * extent[n];\n           n++;\n@@ -298,7 +298,7 @@ mminval_i4 (gfc_array_i4 * const restrict retarray,\n              the next dimension.  */\n           count[n] = 0;\n           /* We could precalculate these products, but this is a less\n-             frequently used path so proabably not worth it.  */\n+             frequently used path so probably not worth it.  */\n           base -= sstride[n] * extent[n];\n           mbase -= mstride[n] * extent[n];\n           dest -= dstride[n] * extent[n];"}, {"sha": "ff2895746857896418dc68a8b821d6177cb22bfd", "filename": "libgfortran/generated/minval_i8.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5d7adf7a1573b3ab23d9a2d70fbf30a8ef0c4958/libgfortran%2Fgenerated%2Fminval_i8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5d7adf7a1573b3ab23d9a2d70fbf30a8ef0c4958/libgfortran%2Fgenerated%2Fminval_i8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fminval_i8.c?ref=5d7adf7a1573b3ab23d9a2d70fbf30a8ef0c4958", "patch": "@@ -146,7 +146,7 @@ minval_i8 (gfc_array_i8 * const restrict retarray,\n              the next dimension.  */\n           count[n] = 0;\n           /* We could precalculate these products, but this is a less\n-             frequently used path so proabably not worth it.  */\n+             frequently used path so probably not worth it.  */\n           base -= sstride[n] * extent[n];\n           dest -= dstride[n] * extent[n];\n           n++;\n@@ -298,7 +298,7 @@ mminval_i8 (gfc_array_i8 * const restrict retarray,\n              the next dimension.  */\n           count[n] = 0;\n           /* We could precalculate these products, but this is a less\n-             frequently used path so proabably not worth it.  */\n+             frequently used path so probably not worth it.  */\n           base -= sstride[n] * extent[n];\n           mbase -= mstride[n] * extent[n];\n           dest -= dstride[n] * extent[n];"}, {"sha": "4bbe2002c81b32ffe64bfa4a7aa14b13e594db4a", "filename": "libgfortran/generated/minval_r10.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5d7adf7a1573b3ab23d9a2d70fbf30a8ef0c4958/libgfortran%2Fgenerated%2Fminval_r10.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5d7adf7a1573b3ab23d9a2d70fbf30a8ef0c4958/libgfortran%2Fgenerated%2Fminval_r10.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fminval_r10.c?ref=5d7adf7a1573b3ab23d9a2d70fbf30a8ef0c4958", "patch": "@@ -146,7 +146,7 @@ minval_r10 (gfc_array_r10 * const restrict retarray,\n              the next dimension.  */\n           count[n] = 0;\n           /* We could precalculate these products, but this is a less\n-             frequently used path so proabably not worth it.  */\n+             frequently used path so probably not worth it.  */\n           base -= sstride[n] * extent[n];\n           dest -= dstride[n] * extent[n];\n           n++;\n@@ -298,7 +298,7 @@ mminval_r10 (gfc_array_r10 * const restrict retarray,\n              the next dimension.  */\n           count[n] = 0;\n           /* We could precalculate these products, but this is a less\n-             frequently used path so proabably not worth it.  */\n+             frequently used path so probably not worth it.  */\n           base -= sstride[n] * extent[n];\n           mbase -= mstride[n] * extent[n];\n           dest -= dstride[n] * extent[n];"}, {"sha": "4e16dbf257f9222f3a3f254e769d69efb8948a5d", "filename": "libgfortran/generated/minval_r16.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5d7adf7a1573b3ab23d9a2d70fbf30a8ef0c4958/libgfortran%2Fgenerated%2Fminval_r16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5d7adf7a1573b3ab23d9a2d70fbf30a8ef0c4958/libgfortran%2Fgenerated%2Fminval_r16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fminval_r16.c?ref=5d7adf7a1573b3ab23d9a2d70fbf30a8ef0c4958", "patch": "@@ -146,7 +146,7 @@ minval_r16 (gfc_array_r16 * const restrict retarray,\n              the next dimension.  */\n           count[n] = 0;\n           /* We could precalculate these products, but this is a less\n-             frequently used path so proabably not worth it.  */\n+             frequently used path so probably not worth it.  */\n           base -= sstride[n] * extent[n];\n           dest -= dstride[n] * extent[n];\n           n++;\n@@ -298,7 +298,7 @@ mminval_r16 (gfc_array_r16 * const restrict retarray,\n              the next dimension.  */\n           count[n] = 0;\n           /* We could precalculate these products, but this is a less\n-             frequently used path so proabably not worth it.  */\n+             frequently used path so probably not worth it.  */\n           base -= sstride[n] * extent[n];\n           mbase -= mstride[n] * extent[n];\n           dest -= dstride[n] * extent[n];"}, {"sha": "0f1a00f29b01b811cc740a2d3fdfe4f14701f8eb", "filename": "libgfortran/generated/minval_r4.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5d7adf7a1573b3ab23d9a2d70fbf30a8ef0c4958/libgfortran%2Fgenerated%2Fminval_r4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5d7adf7a1573b3ab23d9a2d70fbf30a8ef0c4958/libgfortran%2Fgenerated%2Fminval_r4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fminval_r4.c?ref=5d7adf7a1573b3ab23d9a2d70fbf30a8ef0c4958", "patch": "@@ -146,7 +146,7 @@ minval_r4 (gfc_array_r4 * const restrict retarray,\n              the next dimension.  */\n           count[n] = 0;\n           /* We could precalculate these products, but this is a less\n-             frequently used path so proabably not worth it.  */\n+             frequently used path so probably not worth it.  */\n           base -= sstride[n] * extent[n];\n           dest -= dstride[n] * extent[n];\n           n++;\n@@ -298,7 +298,7 @@ mminval_r4 (gfc_array_r4 * const restrict retarray,\n              the next dimension.  */\n           count[n] = 0;\n           /* We could precalculate these products, but this is a less\n-             frequently used path so proabably not worth it.  */\n+             frequently used path so probably not worth it.  */\n           base -= sstride[n] * extent[n];\n           mbase -= mstride[n] * extent[n];\n           dest -= dstride[n] * extent[n];"}, {"sha": "4bb77996653eb0cb6785eea3a4e0918405d3646b", "filename": "libgfortran/generated/minval_r8.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5d7adf7a1573b3ab23d9a2d70fbf30a8ef0c4958/libgfortran%2Fgenerated%2Fminval_r8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5d7adf7a1573b3ab23d9a2d70fbf30a8ef0c4958/libgfortran%2Fgenerated%2Fminval_r8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fminval_r8.c?ref=5d7adf7a1573b3ab23d9a2d70fbf30a8ef0c4958", "patch": "@@ -146,7 +146,7 @@ minval_r8 (gfc_array_r8 * const restrict retarray,\n              the next dimension.  */\n           count[n] = 0;\n           /* We could precalculate these products, but this is a less\n-             frequently used path so proabably not worth it.  */\n+             frequently used path so probably not worth it.  */\n           base -= sstride[n] * extent[n];\n           dest -= dstride[n] * extent[n];\n           n++;\n@@ -298,7 +298,7 @@ mminval_r8 (gfc_array_r8 * const restrict retarray,\n              the next dimension.  */\n           count[n] = 0;\n           /* We could precalculate these products, but this is a less\n-             frequently used path so proabably not worth it.  */\n+             frequently used path so probably not worth it.  */\n           base -= sstride[n] * extent[n];\n           mbase -= mstride[n] * extent[n];\n           dest -= dstride[n] * extent[n];"}, {"sha": "f5434efd256a815e425ce0f6fdfdc4e6bae2f8cb", "filename": "libgfortran/generated/product_c10.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5d7adf7a1573b3ab23d9a2d70fbf30a8ef0c4958/libgfortran%2Fgenerated%2Fproduct_c10.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5d7adf7a1573b3ab23d9a2d70fbf30a8ef0c4958/libgfortran%2Fgenerated%2Fproduct_c10.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fproduct_c10.c?ref=5d7adf7a1573b3ab23d9a2d70fbf30a8ef0c4958", "patch": "@@ -144,7 +144,7 @@ product_c10 (gfc_array_c10 * const restrict retarray,\n              the next dimension.  */\n           count[n] = 0;\n           /* We could precalculate these products, but this is a less\n-             frequently used path so proabably not worth it.  */\n+             frequently used path so probably not worth it.  */\n           base -= sstride[n] * extent[n];\n           dest -= dstride[n] * extent[n];\n           n++;\n@@ -296,7 +296,7 @@ mproduct_c10 (gfc_array_c10 * const restrict retarray,\n              the next dimension.  */\n           count[n] = 0;\n           /* We could precalculate these products, but this is a less\n-             frequently used path so proabably not worth it.  */\n+             frequently used path so probably not worth it.  */\n           base -= sstride[n] * extent[n];\n           mbase -= mstride[n] * extent[n];\n           dest -= dstride[n] * extent[n];"}, {"sha": "382e4192d091f133f9bb6bae0121eaaf12b7976a", "filename": "libgfortran/generated/product_c16.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5d7adf7a1573b3ab23d9a2d70fbf30a8ef0c4958/libgfortran%2Fgenerated%2Fproduct_c16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5d7adf7a1573b3ab23d9a2d70fbf30a8ef0c4958/libgfortran%2Fgenerated%2Fproduct_c16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fproduct_c16.c?ref=5d7adf7a1573b3ab23d9a2d70fbf30a8ef0c4958", "patch": "@@ -144,7 +144,7 @@ product_c16 (gfc_array_c16 * const restrict retarray,\n              the next dimension.  */\n           count[n] = 0;\n           /* We could precalculate these products, but this is a less\n-             frequently used path so proabably not worth it.  */\n+             frequently used path so probably not worth it.  */\n           base -= sstride[n] * extent[n];\n           dest -= dstride[n] * extent[n];\n           n++;\n@@ -296,7 +296,7 @@ mproduct_c16 (gfc_array_c16 * const restrict retarray,\n              the next dimension.  */\n           count[n] = 0;\n           /* We could precalculate these products, but this is a less\n-             frequently used path so proabably not worth it.  */\n+             frequently used path so probably not worth it.  */\n           base -= sstride[n] * extent[n];\n           mbase -= mstride[n] * extent[n];\n           dest -= dstride[n] * extent[n];"}, {"sha": "5a40f8430d79ba33930a58b5543ca72f13a9d81e", "filename": "libgfortran/generated/product_c4.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5d7adf7a1573b3ab23d9a2d70fbf30a8ef0c4958/libgfortran%2Fgenerated%2Fproduct_c4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5d7adf7a1573b3ab23d9a2d70fbf30a8ef0c4958/libgfortran%2Fgenerated%2Fproduct_c4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fproduct_c4.c?ref=5d7adf7a1573b3ab23d9a2d70fbf30a8ef0c4958", "patch": "@@ -144,7 +144,7 @@ product_c4 (gfc_array_c4 * const restrict retarray,\n              the next dimension.  */\n           count[n] = 0;\n           /* We could precalculate these products, but this is a less\n-             frequently used path so proabably not worth it.  */\n+             frequently used path so probably not worth it.  */\n           base -= sstride[n] * extent[n];\n           dest -= dstride[n] * extent[n];\n           n++;\n@@ -296,7 +296,7 @@ mproduct_c4 (gfc_array_c4 * const restrict retarray,\n              the next dimension.  */\n           count[n] = 0;\n           /* We could precalculate these products, but this is a less\n-             frequently used path so proabably not worth it.  */\n+             frequently used path so probably not worth it.  */\n           base -= sstride[n] * extent[n];\n           mbase -= mstride[n] * extent[n];\n           dest -= dstride[n] * extent[n];"}, {"sha": "d057ec99429fcf73dcceae53cac483b7dba7c832", "filename": "libgfortran/generated/product_c8.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5d7adf7a1573b3ab23d9a2d70fbf30a8ef0c4958/libgfortran%2Fgenerated%2Fproduct_c8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5d7adf7a1573b3ab23d9a2d70fbf30a8ef0c4958/libgfortran%2Fgenerated%2Fproduct_c8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fproduct_c8.c?ref=5d7adf7a1573b3ab23d9a2d70fbf30a8ef0c4958", "patch": "@@ -144,7 +144,7 @@ product_c8 (gfc_array_c8 * const restrict retarray,\n              the next dimension.  */\n           count[n] = 0;\n           /* We could precalculate these products, but this is a less\n-             frequently used path so proabably not worth it.  */\n+             frequently used path so probably not worth it.  */\n           base -= sstride[n] * extent[n];\n           dest -= dstride[n] * extent[n];\n           n++;\n@@ -296,7 +296,7 @@ mproduct_c8 (gfc_array_c8 * const restrict retarray,\n              the next dimension.  */\n           count[n] = 0;\n           /* We could precalculate these products, but this is a less\n-             frequently used path so proabably not worth it.  */\n+             frequently used path so probably not worth it.  */\n           base -= sstride[n] * extent[n];\n           mbase -= mstride[n] * extent[n];\n           dest -= dstride[n] * extent[n];"}, {"sha": "33db08f70b053880adce53458112a4cdc97aa2f2", "filename": "libgfortran/generated/product_i16.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5d7adf7a1573b3ab23d9a2d70fbf30a8ef0c4958/libgfortran%2Fgenerated%2Fproduct_i16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5d7adf7a1573b3ab23d9a2d70fbf30a8ef0c4958/libgfortran%2Fgenerated%2Fproduct_i16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fproduct_i16.c?ref=5d7adf7a1573b3ab23d9a2d70fbf30a8ef0c4958", "patch": "@@ -144,7 +144,7 @@ product_i16 (gfc_array_i16 * const restrict retarray,\n              the next dimension.  */\n           count[n] = 0;\n           /* We could precalculate these products, but this is a less\n-             frequently used path so proabably not worth it.  */\n+             frequently used path so probably not worth it.  */\n           base -= sstride[n] * extent[n];\n           dest -= dstride[n] * extent[n];\n           n++;\n@@ -296,7 +296,7 @@ mproduct_i16 (gfc_array_i16 * const restrict retarray,\n              the next dimension.  */\n           count[n] = 0;\n           /* We could precalculate these products, but this is a less\n-             frequently used path so proabably not worth it.  */\n+             frequently used path so probably not worth it.  */\n           base -= sstride[n] * extent[n];\n           mbase -= mstride[n] * extent[n];\n           dest -= dstride[n] * extent[n];"}, {"sha": "69e1826f31e6ff1b5d67c531d9e59c79cb5afbf8", "filename": "libgfortran/generated/product_i4.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5d7adf7a1573b3ab23d9a2d70fbf30a8ef0c4958/libgfortran%2Fgenerated%2Fproduct_i4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5d7adf7a1573b3ab23d9a2d70fbf30a8ef0c4958/libgfortran%2Fgenerated%2Fproduct_i4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fproduct_i4.c?ref=5d7adf7a1573b3ab23d9a2d70fbf30a8ef0c4958", "patch": "@@ -144,7 +144,7 @@ product_i4 (gfc_array_i4 * const restrict retarray,\n              the next dimension.  */\n           count[n] = 0;\n           /* We could precalculate these products, but this is a less\n-             frequently used path so proabably not worth it.  */\n+             frequently used path so probably not worth it.  */\n           base -= sstride[n] * extent[n];\n           dest -= dstride[n] * extent[n];\n           n++;\n@@ -296,7 +296,7 @@ mproduct_i4 (gfc_array_i4 * const restrict retarray,\n              the next dimension.  */\n           count[n] = 0;\n           /* We could precalculate these products, but this is a less\n-             frequently used path so proabably not worth it.  */\n+             frequently used path so probably not worth it.  */\n           base -= sstride[n] * extent[n];\n           mbase -= mstride[n] * extent[n];\n           dest -= dstride[n] * extent[n];"}, {"sha": "f62a281f2ad8d383098991e59a66e249a24b8b6c", "filename": "libgfortran/generated/product_i8.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5d7adf7a1573b3ab23d9a2d70fbf30a8ef0c4958/libgfortran%2Fgenerated%2Fproduct_i8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5d7adf7a1573b3ab23d9a2d70fbf30a8ef0c4958/libgfortran%2Fgenerated%2Fproduct_i8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fproduct_i8.c?ref=5d7adf7a1573b3ab23d9a2d70fbf30a8ef0c4958", "patch": "@@ -144,7 +144,7 @@ product_i8 (gfc_array_i8 * const restrict retarray,\n              the next dimension.  */\n           count[n] = 0;\n           /* We could precalculate these products, but this is a less\n-             frequently used path so proabably not worth it.  */\n+             frequently used path so probably not worth it.  */\n           base -= sstride[n] * extent[n];\n           dest -= dstride[n] * extent[n];\n           n++;\n@@ -296,7 +296,7 @@ mproduct_i8 (gfc_array_i8 * const restrict retarray,\n              the next dimension.  */\n           count[n] = 0;\n           /* We could precalculate these products, but this is a less\n-             frequently used path so proabably not worth it.  */\n+             frequently used path so probably not worth it.  */\n           base -= sstride[n] * extent[n];\n           mbase -= mstride[n] * extent[n];\n           dest -= dstride[n] * extent[n];"}, {"sha": "26e3f04e69c52264010365e1fac551c96ad9fd59", "filename": "libgfortran/generated/product_r10.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5d7adf7a1573b3ab23d9a2d70fbf30a8ef0c4958/libgfortran%2Fgenerated%2Fproduct_r10.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5d7adf7a1573b3ab23d9a2d70fbf30a8ef0c4958/libgfortran%2Fgenerated%2Fproduct_r10.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fproduct_r10.c?ref=5d7adf7a1573b3ab23d9a2d70fbf30a8ef0c4958", "patch": "@@ -144,7 +144,7 @@ product_r10 (gfc_array_r10 * const restrict retarray,\n              the next dimension.  */\n           count[n] = 0;\n           /* We could precalculate these products, but this is a less\n-             frequently used path so proabably not worth it.  */\n+             frequently used path so probably not worth it.  */\n           base -= sstride[n] * extent[n];\n           dest -= dstride[n] * extent[n];\n           n++;\n@@ -296,7 +296,7 @@ mproduct_r10 (gfc_array_r10 * const restrict retarray,\n              the next dimension.  */\n           count[n] = 0;\n           /* We could precalculate these products, but this is a less\n-             frequently used path so proabably not worth it.  */\n+             frequently used path so probably not worth it.  */\n           base -= sstride[n] * extent[n];\n           mbase -= mstride[n] * extent[n];\n           dest -= dstride[n] * extent[n];"}, {"sha": "2fc1ca1a1305da6676eaf61b90c163fa3ae21cce", "filename": "libgfortran/generated/product_r16.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5d7adf7a1573b3ab23d9a2d70fbf30a8ef0c4958/libgfortran%2Fgenerated%2Fproduct_r16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5d7adf7a1573b3ab23d9a2d70fbf30a8ef0c4958/libgfortran%2Fgenerated%2Fproduct_r16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fproduct_r16.c?ref=5d7adf7a1573b3ab23d9a2d70fbf30a8ef0c4958", "patch": "@@ -144,7 +144,7 @@ product_r16 (gfc_array_r16 * const restrict retarray,\n              the next dimension.  */\n           count[n] = 0;\n           /* We could precalculate these products, but this is a less\n-             frequently used path so proabably not worth it.  */\n+             frequently used path so probably not worth it.  */\n           base -= sstride[n] * extent[n];\n           dest -= dstride[n] * extent[n];\n           n++;\n@@ -296,7 +296,7 @@ mproduct_r16 (gfc_array_r16 * const restrict retarray,\n              the next dimension.  */\n           count[n] = 0;\n           /* We could precalculate these products, but this is a less\n-             frequently used path so proabably not worth it.  */\n+             frequently used path so probably not worth it.  */\n           base -= sstride[n] * extent[n];\n           mbase -= mstride[n] * extent[n];\n           dest -= dstride[n] * extent[n];"}, {"sha": "f0723c69a0e1182cc9d9497e8736075beb52dc9a", "filename": "libgfortran/generated/product_r4.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5d7adf7a1573b3ab23d9a2d70fbf30a8ef0c4958/libgfortran%2Fgenerated%2Fproduct_r4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5d7adf7a1573b3ab23d9a2d70fbf30a8ef0c4958/libgfortran%2Fgenerated%2Fproduct_r4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fproduct_r4.c?ref=5d7adf7a1573b3ab23d9a2d70fbf30a8ef0c4958", "patch": "@@ -144,7 +144,7 @@ product_r4 (gfc_array_r4 * const restrict retarray,\n              the next dimension.  */\n           count[n] = 0;\n           /* We could precalculate these products, but this is a less\n-             frequently used path so proabably not worth it.  */\n+             frequently used path so probably not worth it.  */\n           base -= sstride[n] * extent[n];\n           dest -= dstride[n] * extent[n];\n           n++;\n@@ -296,7 +296,7 @@ mproduct_r4 (gfc_array_r4 * const restrict retarray,\n              the next dimension.  */\n           count[n] = 0;\n           /* We could precalculate these products, but this is a less\n-             frequently used path so proabably not worth it.  */\n+             frequently used path so probably not worth it.  */\n           base -= sstride[n] * extent[n];\n           mbase -= mstride[n] * extent[n];\n           dest -= dstride[n] * extent[n];"}, {"sha": "a829ff80019e22a28f40e620cc9d8b9618c37c27", "filename": "libgfortran/generated/product_r8.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5d7adf7a1573b3ab23d9a2d70fbf30a8ef0c4958/libgfortran%2Fgenerated%2Fproduct_r8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5d7adf7a1573b3ab23d9a2d70fbf30a8ef0c4958/libgfortran%2Fgenerated%2Fproduct_r8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fproduct_r8.c?ref=5d7adf7a1573b3ab23d9a2d70fbf30a8ef0c4958", "patch": "@@ -144,7 +144,7 @@ product_r8 (gfc_array_r8 * const restrict retarray,\n              the next dimension.  */\n           count[n] = 0;\n           /* We could precalculate these products, but this is a less\n-             frequently used path so proabably not worth it.  */\n+             frequently used path so probably not worth it.  */\n           base -= sstride[n] * extent[n];\n           dest -= dstride[n] * extent[n];\n           n++;\n@@ -296,7 +296,7 @@ mproduct_r8 (gfc_array_r8 * const restrict retarray,\n              the next dimension.  */\n           count[n] = 0;\n           /* We could precalculate these products, but this is a less\n-             frequently used path so proabably not worth it.  */\n+             frequently used path so probably not worth it.  */\n           base -= sstride[n] * extent[n];\n           mbase -= mstride[n] * extent[n];\n           dest -= dstride[n] * extent[n];"}, {"sha": "7aa7f43eef61925e19aa944ab408a48235dec165", "filename": "libgfortran/generated/reshape_c10.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5d7adf7a1573b3ab23d9a2d70fbf30a8ef0c4958/libgfortran%2Fgenerated%2Freshape_c10.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5d7adf7a1573b3ab23d9a2d70fbf30a8ef0c4958/libgfortran%2Fgenerated%2Freshape_c10.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Freshape_c10.c?ref=5d7adf7a1573b3ab23d9a2d70fbf30a8ef0c4958", "patch": "@@ -200,7 +200,7 @@ reshape_c10 (gfc_array_c10 * const restrict ret,\n              the next dimension.  */\n           rcount[n] = 0;\n           /* We could precalculate these products, but this is a less\n-             frequently used path so proabably not worth it.  */\n+             frequently used path so probably not worth it.  */\n           rptr -= rstride[n] * rextent[n];\n           n++;\n           if (n == rdim)\n@@ -223,7 +223,7 @@ reshape_c10 (gfc_array_c10 * const restrict ret,\n              the next dimension.  */\n           scount[n] = 0;\n           /* We could precalculate these products, but this is a less\n-             frequently used path so proabably not worth it.  */\n+             frequently used path so probably not worth it.  */\n           src -= sstride[n] * sextent[n];\n           n++;\n           if (n == sdim)"}, {"sha": "cc1fd0dec5b28391584850b5c94b870047d2928f", "filename": "libgfortran/generated/reshape_c16.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5d7adf7a1573b3ab23d9a2d70fbf30a8ef0c4958/libgfortran%2Fgenerated%2Freshape_c16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5d7adf7a1573b3ab23d9a2d70fbf30a8ef0c4958/libgfortran%2Fgenerated%2Freshape_c16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Freshape_c16.c?ref=5d7adf7a1573b3ab23d9a2d70fbf30a8ef0c4958", "patch": "@@ -200,7 +200,7 @@ reshape_c16 (gfc_array_c16 * const restrict ret,\n              the next dimension.  */\n           rcount[n] = 0;\n           /* We could precalculate these products, but this is a less\n-             frequently used path so proabably not worth it.  */\n+             frequently used path so probably not worth it.  */\n           rptr -= rstride[n] * rextent[n];\n           n++;\n           if (n == rdim)\n@@ -223,7 +223,7 @@ reshape_c16 (gfc_array_c16 * const restrict ret,\n              the next dimension.  */\n           scount[n] = 0;\n           /* We could precalculate these products, but this is a less\n-             frequently used path so proabably not worth it.  */\n+             frequently used path so probably not worth it.  */\n           src -= sstride[n] * sextent[n];\n           n++;\n           if (n == sdim)"}, {"sha": "5e7d855be845bf1c3c9fa8d993620ba067742f06", "filename": "libgfortran/generated/reshape_c4.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5d7adf7a1573b3ab23d9a2d70fbf30a8ef0c4958/libgfortran%2Fgenerated%2Freshape_c4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5d7adf7a1573b3ab23d9a2d70fbf30a8ef0c4958/libgfortran%2Fgenerated%2Freshape_c4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Freshape_c4.c?ref=5d7adf7a1573b3ab23d9a2d70fbf30a8ef0c4958", "patch": "@@ -200,7 +200,7 @@ reshape_c4 (gfc_array_c4 * const restrict ret,\n              the next dimension.  */\n           rcount[n] = 0;\n           /* We could precalculate these products, but this is a less\n-             frequently used path so proabably not worth it.  */\n+             frequently used path so probably not worth it.  */\n           rptr -= rstride[n] * rextent[n];\n           n++;\n           if (n == rdim)\n@@ -223,7 +223,7 @@ reshape_c4 (gfc_array_c4 * const restrict ret,\n              the next dimension.  */\n           scount[n] = 0;\n           /* We could precalculate these products, but this is a less\n-             frequently used path so proabably not worth it.  */\n+             frequently used path so probably not worth it.  */\n           src -= sstride[n] * sextent[n];\n           n++;\n           if (n == sdim)"}, {"sha": "aecacac9d16cefcfab68ddff9ba7a3c0e2cd2aac", "filename": "libgfortran/generated/reshape_c8.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5d7adf7a1573b3ab23d9a2d70fbf30a8ef0c4958/libgfortran%2Fgenerated%2Freshape_c8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5d7adf7a1573b3ab23d9a2d70fbf30a8ef0c4958/libgfortran%2Fgenerated%2Freshape_c8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Freshape_c8.c?ref=5d7adf7a1573b3ab23d9a2d70fbf30a8ef0c4958", "patch": "@@ -200,7 +200,7 @@ reshape_c8 (gfc_array_c8 * const restrict ret,\n              the next dimension.  */\n           rcount[n] = 0;\n           /* We could precalculate these products, but this is a less\n-             frequently used path so proabably not worth it.  */\n+             frequently used path so probably not worth it.  */\n           rptr -= rstride[n] * rextent[n];\n           n++;\n           if (n == rdim)\n@@ -223,7 +223,7 @@ reshape_c8 (gfc_array_c8 * const restrict ret,\n              the next dimension.  */\n           scount[n] = 0;\n           /* We could precalculate these products, but this is a less\n-             frequently used path so proabably not worth it.  */\n+             frequently used path so probably not worth it.  */\n           src -= sstride[n] * sextent[n];\n           n++;\n           if (n == sdim)"}, {"sha": "0b4da5c957fa97d93f6e6832d7426590337c9f35", "filename": "libgfortran/generated/reshape_i16.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5d7adf7a1573b3ab23d9a2d70fbf30a8ef0c4958/libgfortran%2Fgenerated%2Freshape_i16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5d7adf7a1573b3ab23d9a2d70fbf30a8ef0c4958/libgfortran%2Fgenerated%2Freshape_i16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Freshape_i16.c?ref=5d7adf7a1573b3ab23d9a2d70fbf30a8ef0c4958", "patch": "@@ -200,7 +200,7 @@ reshape_16 (gfc_array_i16 * const restrict ret,\n              the next dimension.  */\n           rcount[n] = 0;\n           /* We could precalculate these products, but this is a less\n-             frequently used path so proabably not worth it.  */\n+             frequently used path so probably not worth it.  */\n           rptr -= rstride[n] * rextent[n];\n           n++;\n           if (n == rdim)\n@@ -223,7 +223,7 @@ reshape_16 (gfc_array_i16 * const restrict ret,\n              the next dimension.  */\n           scount[n] = 0;\n           /* We could precalculate these products, but this is a less\n-             frequently used path so proabably not worth it.  */\n+             frequently used path so probably not worth it.  */\n           src -= sstride[n] * sextent[n];\n           n++;\n           if (n == sdim)"}, {"sha": "413762e60430886e7f67e11069c3e9827ce2e779", "filename": "libgfortran/generated/reshape_i4.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5d7adf7a1573b3ab23d9a2d70fbf30a8ef0c4958/libgfortran%2Fgenerated%2Freshape_i4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5d7adf7a1573b3ab23d9a2d70fbf30a8ef0c4958/libgfortran%2Fgenerated%2Freshape_i4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Freshape_i4.c?ref=5d7adf7a1573b3ab23d9a2d70fbf30a8ef0c4958", "patch": "@@ -200,7 +200,7 @@ reshape_4 (gfc_array_i4 * const restrict ret,\n              the next dimension.  */\n           rcount[n] = 0;\n           /* We could precalculate these products, but this is a less\n-             frequently used path so proabably not worth it.  */\n+             frequently used path so probably not worth it.  */\n           rptr -= rstride[n] * rextent[n];\n           n++;\n           if (n == rdim)\n@@ -223,7 +223,7 @@ reshape_4 (gfc_array_i4 * const restrict ret,\n              the next dimension.  */\n           scount[n] = 0;\n           /* We could precalculate these products, but this is a less\n-             frequently used path so proabably not worth it.  */\n+             frequently used path so probably not worth it.  */\n           src -= sstride[n] * sextent[n];\n           n++;\n           if (n == sdim)"}, {"sha": "0cd861a506013087608fe0fdb3f53928f255736f", "filename": "libgfortran/generated/reshape_i8.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5d7adf7a1573b3ab23d9a2d70fbf30a8ef0c4958/libgfortran%2Fgenerated%2Freshape_i8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5d7adf7a1573b3ab23d9a2d70fbf30a8ef0c4958/libgfortran%2Fgenerated%2Freshape_i8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Freshape_i8.c?ref=5d7adf7a1573b3ab23d9a2d70fbf30a8ef0c4958", "patch": "@@ -200,7 +200,7 @@ reshape_8 (gfc_array_i8 * const restrict ret,\n              the next dimension.  */\n           rcount[n] = 0;\n           /* We could precalculate these products, but this is a less\n-             frequently used path so proabably not worth it.  */\n+             frequently used path so probably not worth it.  */\n           rptr -= rstride[n] * rextent[n];\n           n++;\n           if (n == rdim)\n@@ -223,7 +223,7 @@ reshape_8 (gfc_array_i8 * const restrict ret,\n              the next dimension.  */\n           scount[n] = 0;\n           /* We could precalculate these products, but this is a less\n-             frequently used path so proabably not worth it.  */\n+             frequently used path so probably not worth it.  */\n           src -= sstride[n] * sextent[n];\n           n++;\n           if (n == sdim)"}, {"sha": "5069e45cdb1d477031437950e205536d1adf427a", "filename": "libgfortran/generated/reshape_r10.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5d7adf7a1573b3ab23d9a2d70fbf30a8ef0c4958/libgfortran%2Fgenerated%2Freshape_r10.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5d7adf7a1573b3ab23d9a2d70fbf30a8ef0c4958/libgfortran%2Fgenerated%2Freshape_r10.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Freshape_r10.c?ref=5d7adf7a1573b3ab23d9a2d70fbf30a8ef0c4958", "patch": "@@ -200,7 +200,7 @@ reshape_r10 (gfc_array_r10 * const restrict ret,\n              the next dimension.  */\n           rcount[n] = 0;\n           /* We could precalculate these products, but this is a less\n-             frequently used path so proabably not worth it.  */\n+             frequently used path so probably not worth it.  */\n           rptr -= rstride[n] * rextent[n];\n           n++;\n           if (n == rdim)\n@@ -223,7 +223,7 @@ reshape_r10 (gfc_array_r10 * const restrict ret,\n              the next dimension.  */\n           scount[n] = 0;\n           /* We could precalculate these products, but this is a less\n-             frequently used path so proabably not worth it.  */\n+             frequently used path so probably not worth it.  */\n           src -= sstride[n] * sextent[n];\n           n++;\n           if (n == sdim)"}, {"sha": "d954c43e1c7a27225ea418f68ae5d03015fa61ac", "filename": "libgfortran/generated/reshape_r16.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5d7adf7a1573b3ab23d9a2d70fbf30a8ef0c4958/libgfortran%2Fgenerated%2Freshape_r16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5d7adf7a1573b3ab23d9a2d70fbf30a8ef0c4958/libgfortran%2Fgenerated%2Freshape_r16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Freshape_r16.c?ref=5d7adf7a1573b3ab23d9a2d70fbf30a8ef0c4958", "patch": "@@ -200,7 +200,7 @@ reshape_r16 (gfc_array_r16 * const restrict ret,\n              the next dimension.  */\n           rcount[n] = 0;\n           /* We could precalculate these products, but this is a less\n-             frequently used path so proabably not worth it.  */\n+             frequently used path so probably not worth it.  */\n           rptr -= rstride[n] * rextent[n];\n           n++;\n           if (n == rdim)\n@@ -223,7 +223,7 @@ reshape_r16 (gfc_array_r16 * const restrict ret,\n              the next dimension.  */\n           scount[n] = 0;\n           /* We could precalculate these products, but this is a less\n-             frequently used path so proabably not worth it.  */\n+             frequently used path so probably not worth it.  */\n           src -= sstride[n] * sextent[n];\n           n++;\n           if (n == sdim)"}, {"sha": "72eb06e9af14655c7c8e32e562c1cc9293570bb2", "filename": "libgfortran/generated/reshape_r4.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5d7adf7a1573b3ab23d9a2d70fbf30a8ef0c4958/libgfortran%2Fgenerated%2Freshape_r4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5d7adf7a1573b3ab23d9a2d70fbf30a8ef0c4958/libgfortran%2Fgenerated%2Freshape_r4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Freshape_r4.c?ref=5d7adf7a1573b3ab23d9a2d70fbf30a8ef0c4958", "patch": "@@ -200,7 +200,7 @@ reshape_r4 (gfc_array_r4 * const restrict ret,\n              the next dimension.  */\n           rcount[n] = 0;\n           /* We could precalculate these products, but this is a less\n-             frequently used path so proabably not worth it.  */\n+             frequently used path so probably not worth it.  */\n           rptr -= rstride[n] * rextent[n];\n           n++;\n           if (n == rdim)\n@@ -223,7 +223,7 @@ reshape_r4 (gfc_array_r4 * const restrict ret,\n              the next dimension.  */\n           scount[n] = 0;\n           /* We could precalculate these products, but this is a less\n-             frequently used path so proabably not worth it.  */\n+             frequently used path so probably not worth it.  */\n           src -= sstride[n] * sextent[n];\n           n++;\n           if (n == sdim)"}, {"sha": "065fb3d351d6ce9fdb5e423cb450071f82aedda0", "filename": "libgfortran/generated/reshape_r8.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5d7adf7a1573b3ab23d9a2d70fbf30a8ef0c4958/libgfortran%2Fgenerated%2Freshape_r8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5d7adf7a1573b3ab23d9a2d70fbf30a8ef0c4958/libgfortran%2Fgenerated%2Freshape_r8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Freshape_r8.c?ref=5d7adf7a1573b3ab23d9a2d70fbf30a8ef0c4958", "patch": "@@ -200,7 +200,7 @@ reshape_r8 (gfc_array_r8 * const restrict ret,\n              the next dimension.  */\n           rcount[n] = 0;\n           /* We could precalculate these products, but this is a less\n-             frequently used path so proabably not worth it.  */\n+             frequently used path so probably not worth it.  */\n           rptr -= rstride[n] * rextent[n];\n           n++;\n           if (n == rdim)\n@@ -223,7 +223,7 @@ reshape_r8 (gfc_array_r8 * const restrict ret,\n              the next dimension.  */\n           scount[n] = 0;\n           /* We could precalculate these products, but this is a less\n-             frequently used path so proabably not worth it.  */\n+             frequently used path so probably not worth it.  */\n           src -= sstride[n] * sextent[n];\n           n++;\n           if (n == sdim)"}, {"sha": "34788c55e9ee69270f1b0a306d87289864007534", "filename": "libgfortran/generated/sum_c10.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5d7adf7a1573b3ab23d9a2d70fbf30a8ef0c4958/libgfortran%2Fgenerated%2Fsum_c10.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5d7adf7a1573b3ab23d9a2d70fbf30a8ef0c4958/libgfortran%2Fgenerated%2Fsum_c10.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fsum_c10.c?ref=5d7adf7a1573b3ab23d9a2d70fbf30a8ef0c4958", "patch": "@@ -144,7 +144,7 @@ sum_c10 (gfc_array_c10 * const restrict retarray,\n              the next dimension.  */\n           count[n] = 0;\n           /* We could precalculate these products, but this is a less\n-             frequently used path so proabably not worth it.  */\n+             frequently used path so probably not worth it.  */\n           base -= sstride[n] * extent[n];\n           dest -= dstride[n] * extent[n];\n           n++;\n@@ -296,7 +296,7 @@ msum_c10 (gfc_array_c10 * const restrict retarray,\n              the next dimension.  */\n           count[n] = 0;\n           /* We could precalculate these products, but this is a less\n-             frequently used path so proabably not worth it.  */\n+             frequently used path so probably not worth it.  */\n           base -= sstride[n] * extent[n];\n           mbase -= mstride[n] * extent[n];\n           dest -= dstride[n] * extent[n];"}, {"sha": "ba1b0571fd53af3c5e4f59aac48de7aa93c77b3f", "filename": "libgfortran/generated/sum_c16.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5d7adf7a1573b3ab23d9a2d70fbf30a8ef0c4958/libgfortran%2Fgenerated%2Fsum_c16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5d7adf7a1573b3ab23d9a2d70fbf30a8ef0c4958/libgfortran%2Fgenerated%2Fsum_c16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fsum_c16.c?ref=5d7adf7a1573b3ab23d9a2d70fbf30a8ef0c4958", "patch": "@@ -144,7 +144,7 @@ sum_c16 (gfc_array_c16 * const restrict retarray,\n              the next dimension.  */\n           count[n] = 0;\n           /* We could precalculate these products, but this is a less\n-             frequently used path so proabably not worth it.  */\n+             frequently used path so probably not worth it.  */\n           base -= sstride[n] * extent[n];\n           dest -= dstride[n] * extent[n];\n           n++;\n@@ -296,7 +296,7 @@ msum_c16 (gfc_array_c16 * const restrict retarray,\n              the next dimension.  */\n           count[n] = 0;\n           /* We could precalculate these products, but this is a less\n-             frequently used path so proabably not worth it.  */\n+             frequently used path so probably not worth it.  */\n           base -= sstride[n] * extent[n];\n           mbase -= mstride[n] * extent[n];\n           dest -= dstride[n] * extent[n];"}, {"sha": "e3f9e67d46f9a008e1f1c84875b2f7c333dc802b", "filename": "libgfortran/generated/sum_c4.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5d7adf7a1573b3ab23d9a2d70fbf30a8ef0c4958/libgfortran%2Fgenerated%2Fsum_c4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5d7adf7a1573b3ab23d9a2d70fbf30a8ef0c4958/libgfortran%2Fgenerated%2Fsum_c4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fsum_c4.c?ref=5d7adf7a1573b3ab23d9a2d70fbf30a8ef0c4958", "patch": "@@ -144,7 +144,7 @@ sum_c4 (gfc_array_c4 * const restrict retarray,\n              the next dimension.  */\n           count[n] = 0;\n           /* We could precalculate these products, but this is a less\n-             frequently used path so proabably not worth it.  */\n+             frequently used path so probably not worth it.  */\n           base -= sstride[n] * extent[n];\n           dest -= dstride[n] * extent[n];\n           n++;\n@@ -296,7 +296,7 @@ msum_c4 (gfc_array_c4 * const restrict retarray,\n              the next dimension.  */\n           count[n] = 0;\n           /* We could precalculate these products, but this is a less\n-             frequently used path so proabably not worth it.  */\n+             frequently used path so probably not worth it.  */\n           base -= sstride[n] * extent[n];\n           mbase -= mstride[n] * extent[n];\n           dest -= dstride[n] * extent[n];"}, {"sha": "18e45c39812496b6c4254a0152226c885ff2acb7", "filename": "libgfortran/generated/sum_c8.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5d7adf7a1573b3ab23d9a2d70fbf30a8ef0c4958/libgfortran%2Fgenerated%2Fsum_c8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5d7adf7a1573b3ab23d9a2d70fbf30a8ef0c4958/libgfortran%2Fgenerated%2Fsum_c8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fsum_c8.c?ref=5d7adf7a1573b3ab23d9a2d70fbf30a8ef0c4958", "patch": "@@ -144,7 +144,7 @@ sum_c8 (gfc_array_c8 * const restrict retarray,\n              the next dimension.  */\n           count[n] = 0;\n           /* We could precalculate these products, but this is a less\n-             frequently used path so proabably not worth it.  */\n+             frequently used path so probably not worth it.  */\n           base -= sstride[n] * extent[n];\n           dest -= dstride[n] * extent[n];\n           n++;\n@@ -296,7 +296,7 @@ msum_c8 (gfc_array_c8 * const restrict retarray,\n              the next dimension.  */\n           count[n] = 0;\n           /* We could precalculate these products, but this is a less\n-             frequently used path so proabably not worth it.  */\n+             frequently used path so probably not worth it.  */\n           base -= sstride[n] * extent[n];\n           mbase -= mstride[n] * extent[n];\n           dest -= dstride[n] * extent[n];"}, {"sha": "95c4c3269f6692a40746c8c7a8364420e7d37091", "filename": "libgfortran/generated/sum_i16.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5d7adf7a1573b3ab23d9a2d70fbf30a8ef0c4958/libgfortran%2Fgenerated%2Fsum_i16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5d7adf7a1573b3ab23d9a2d70fbf30a8ef0c4958/libgfortran%2Fgenerated%2Fsum_i16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fsum_i16.c?ref=5d7adf7a1573b3ab23d9a2d70fbf30a8ef0c4958", "patch": "@@ -144,7 +144,7 @@ sum_i16 (gfc_array_i16 * const restrict retarray,\n              the next dimension.  */\n           count[n] = 0;\n           /* We could precalculate these products, but this is a less\n-             frequently used path so proabably not worth it.  */\n+             frequently used path so probably not worth it.  */\n           base -= sstride[n] * extent[n];\n           dest -= dstride[n] * extent[n];\n           n++;\n@@ -296,7 +296,7 @@ msum_i16 (gfc_array_i16 * const restrict retarray,\n              the next dimension.  */\n           count[n] = 0;\n           /* We could precalculate these products, but this is a less\n-             frequently used path so proabably not worth it.  */\n+             frequently used path so probably not worth it.  */\n           base -= sstride[n] * extent[n];\n           mbase -= mstride[n] * extent[n];\n           dest -= dstride[n] * extent[n];"}, {"sha": "3421a202fe7600652e6c80ee0191b5db2945cc59", "filename": "libgfortran/generated/sum_i4.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5d7adf7a1573b3ab23d9a2d70fbf30a8ef0c4958/libgfortran%2Fgenerated%2Fsum_i4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5d7adf7a1573b3ab23d9a2d70fbf30a8ef0c4958/libgfortran%2Fgenerated%2Fsum_i4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fsum_i4.c?ref=5d7adf7a1573b3ab23d9a2d70fbf30a8ef0c4958", "patch": "@@ -144,7 +144,7 @@ sum_i4 (gfc_array_i4 * const restrict retarray,\n              the next dimension.  */\n           count[n] = 0;\n           /* We could precalculate these products, but this is a less\n-             frequently used path so proabably not worth it.  */\n+             frequently used path so probably not worth it.  */\n           base -= sstride[n] * extent[n];\n           dest -= dstride[n] * extent[n];\n           n++;\n@@ -296,7 +296,7 @@ msum_i4 (gfc_array_i4 * const restrict retarray,\n              the next dimension.  */\n           count[n] = 0;\n           /* We could precalculate these products, but this is a less\n-             frequently used path so proabably not worth it.  */\n+             frequently used path so probably not worth it.  */\n           base -= sstride[n] * extent[n];\n           mbase -= mstride[n] * extent[n];\n           dest -= dstride[n] * extent[n];"}, {"sha": "b67f576907c9585a184200f7463def9766eadc0d", "filename": "libgfortran/generated/sum_i8.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5d7adf7a1573b3ab23d9a2d70fbf30a8ef0c4958/libgfortran%2Fgenerated%2Fsum_i8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5d7adf7a1573b3ab23d9a2d70fbf30a8ef0c4958/libgfortran%2Fgenerated%2Fsum_i8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fsum_i8.c?ref=5d7adf7a1573b3ab23d9a2d70fbf30a8ef0c4958", "patch": "@@ -144,7 +144,7 @@ sum_i8 (gfc_array_i8 * const restrict retarray,\n              the next dimension.  */\n           count[n] = 0;\n           /* We could precalculate these products, but this is a less\n-             frequently used path so proabably not worth it.  */\n+             frequently used path so probably not worth it.  */\n           base -= sstride[n] * extent[n];\n           dest -= dstride[n] * extent[n];\n           n++;\n@@ -296,7 +296,7 @@ msum_i8 (gfc_array_i8 * const restrict retarray,\n              the next dimension.  */\n           count[n] = 0;\n           /* We could precalculate these products, but this is a less\n-             frequently used path so proabably not worth it.  */\n+             frequently used path so probably not worth it.  */\n           base -= sstride[n] * extent[n];\n           mbase -= mstride[n] * extent[n];\n           dest -= dstride[n] * extent[n];"}, {"sha": "730b06889817dc0a8a2d233536e8f51f2f1a4c97", "filename": "libgfortran/generated/sum_r10.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5d7adf7a1573b3ab23d9a2d70fbf30a8ef0c4958/libgfortran%2Fgenerated%2Fsum_r10.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5d7adf7a1573b3ab23d9a2d70fbf30a8ef0c4958/libgfortran%2Fgenerated%2Fsum_r10.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fsum_r10.c?ref=5d7adf7a1573b3ab23d9a2d70fbf30a8ef0c4958", "patch": "@@ -144,7 +144,7 @@ sum_r10 (gfc_array_r10 * const restrict retarray,\n              the next dimension.  */\n           count[n] = 0;\n           /* We could precalculate these products, but this is a less\n-             frequently used path so proabably not worth it.  */\n+             frequently used path so probably not worth it.  */\n           base -= sstride[n] * extent[n];\n           dest -= dstride[n] * extent[n];\n           n++;\n@@ -296,7 +296,7 @@ msum_r10 (gfc_array_r10 * const restrict retarray,\n              the next dimension.  */\n           count[n] = 0;\n           /* We could precalculate these products, but this is a less\n-             frequently used path so proabably not worth it.  */\n+             frequently used path so probably not worth it.  */\n           base -= sstride[n] * extent[n];\n           mbase -= mstride[n] * extent[n];\n           dest -= dstride[n] * extent[n];"}, {"sha": "af7f5c8f9e3c27dd915deb3f58389687fc93452d", "filename": "libgfortran/generated/sum_r16.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5d7adf7a1573b3ab23d9a2d70fbf30a8ef0c4958/libgfortran%2Fgenerated%2Fsum_r16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5d7adf7a1573b3ab23d9a2d70fbf30a8ef0c4958/libgfortran%2Fgenerated%2Fsum_r16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fsum_r16.c?ref=5d7adf7a1573b3ab23d9a2d70fbf30a8ef0c4958", "patch": "@@ -144,7 +144,7 @@ sum_r16 (gfc_array_r16 * const restrict retarray,\n              the next dimension.  */\n           count[n] = 0;\n           /* We could precalculate these products, but this is a less\n-             frequently used path so proabably not worth it.  */\n+             frequently used path so probably not worth it.  */\n           base -= sstride[n] * extent[n];\n           dest -= dstride[n] * extent[n];\n           n++;\n@@ -296,7 +296,7 @@ msum_r16 (gfc_array_r16 * const restrict retarray,\n              the next dimension.  */\n           count[n] = 0;\n           /* We could precalculate these products, but this is a less\n-             frequently used path so proabably not worth it.  */\n+             frequently used path so probably not worth it.  */\n           base -= sstride[n] * extent[n];\n           mbase -= mstride[n] * extent[n];\n           dest -= dstride[n] * extent[n];"}, {"sha": "7d30805c195b6f92cfe404c4adc92a29c3959dfb", "filename": "libgfortran/generated/sum_r4.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5d7adf7a1573b3ab23d9a2d70fbf30a8ef0c4958/libgfortran%2Fgenerated%2Fsum_r4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5d7adf7a1573b3ab23d9a2d70fbf30a8ef0c4958/libgfortran%2Fgenerated%2Fsum_r4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fsum_r4.c?ref=5d7adf7a1573b3ab23d9a2d70fbf30a8ef0c4958", "patch": "@@ -144,7 +144,7 @@ sum_r4 (gfc_array_r4 * const restrict retarray,\n              the next dimension.  */\n           count[n] = 0;\n           /* We could precalculate these products, but this is a less\n-             frequently used path so proabably not worth it.  */\n+             frequently used path so probably not worth it.  */\n           base -= sstride[n] * extent[n];\n           dest -= dstride[n] * extent[n];\n           n++;\n@@ -296,7 +296,7 @@ msum_r4 (gfc_array_r4 * const restrict retarray,\n              the next dimension.  */\n           count[n] = 0;\n           /* We could precalculate these products, but this is a less\n-             frequently used path so proabably not worth it.  */\n+             frequently used path so probably not worth it.  */\n           base -= sstride[n] * extent[n];\n           mbase -= mstride[n] * extent[n];\n           dest -= dstride[n] * extent[n];"}, {"sha": "6e07e2a8fa7011a277e09fb79b996c1958230cad", "filename": "libgfortran/generated/sum_r8.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5d7adf7a1573b3ab23d9a2d70fbf30a8ef0c4958/libgfortran%2Fgenerated%2Fsum_r8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5d7adf7a1573b3ab23d9a2d70fbf30a8ef0c4958/libgfortran%2Fgenerated%2Fsum_r8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fsum_r8.c?ref=5d7adf7a1573b3ab23d9a2d70fbf30a8ef0c4958", "patch": "@@ -144,7 +144,7 @@ sum_r8 (gfc_array_r8 * const restrict retarray,\n              the next dimension.  */\n           count[n] = 0;\n           /* We could precalculate these products, but this is a less\n-             frequently used path so proabably not worth it.  */\n+             frequently used path so probably not worth it.  */\n           base -= sstride[n] * extent[n];\n           dest -= dstride[n] * extent[n];\n           n++;\n@@ -296,7 +296,7 @@ msum_r8 (gfc_array_r8 * const restrict retarray,\n              the next dimension.  */\n           count[n] = 0;\n           /* We could precalculate these products, but this is a less\n-             frequently used path so proabably not worth it.  */\n+             frequently used path so probably not worth it.  */\n           base -= sstride[n] * extent[n];\n           mbase -= mstride[n] * extent[n];\n           dest -= dstride[n] * extent[n];"}]}