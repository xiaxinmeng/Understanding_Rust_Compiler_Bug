{"sha": "0d38b677037f13b7b83d1024a5156be9b41e17b9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MGQzOGI2NzcwMzdmMTNiN2I4M2QxMDI0YTUxNTZiZTliNDFlMTdiOQ==", "commit": {"author": {"name": "Tristan Gingold", "email": "gingold@adacore.com", "date": "2009-05-25T13:29:08Z"}, "committer": {"name": "Tristan Gingold", "email": "gingold@gcc.gnu.org", "date": "2009-05-25T13:29:08Z"}, "message": "makefile.vms: New file to compile gas on VMS.\n\n2009-05-25  Tristan Gingold  <gingold@adacore.com>\n\n\t* makefile.vms: New file to compile gas on VMS.\n\n\t* configure.com: New file to do configuration on VMS with DCL.\n\nFrom-SVN: r147847", "tree": {"sha": "8990505e512138878d7c7ca33156d7e3fdc93673", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8990505e512138878d7c7ca33156d7e3fdc93673"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0d38b677037f13b7b83d1024a5156be9b41e17b9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0d38b677037f13b7b83d1024a5156be9b41e17b9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0d38b677037f13b7b83d1024a5156be9b41e17b9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0d38b677037f13b7b83d1024a5156be9b41e17b9/comments", "author": {"login": "gingold-adacore", "id": 16334725, "node_id": "MDQ6VXNlcjE2MzM0NzI1", "avatar_url": "https://avatars.githubusercontent.com/u/16334725?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gingold-adacore", "html_url": "https://github.com/gingold-adacore", "followers_url": "https://api.github.com/users/gingold-adacore/followers", "following_url": "https://api.github.com/users/gingold-adacore/following{/other_user}", "gists_url": "https://api.github.com/users/gingold-adacore/gists{/gist_id}", "starred_url": "https://api.github.com/users/gingold-adacore/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gingold-adacore/subscriptions", "organizations_url": "https://api.github.com/users/gingold-adacore/orgs", "repos_url": "https://api.github.com/users/gingold-adacore/repos", "events_url": "https://api.github.com/users/gingold-adacore/events{/privacy}", "received_events_url": "https://api.github.com/users/gingold-adacore/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "0adcf178adc586e3e276d7f838a33dfa02772884", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0adcf178adc586e3e276d7f838a33dfa02772884", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0adcf178adc586e3e276d7f838a33dfa02772884"}], "stats": {"total": 50, "additions": 32, "deletions": 18}, "files": [{"sha": "850979abb9afa1c2a6e8de68f012cfd65c286239", "filename": "libiberty/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0d38b677037f13b7b83d1024a5156be9b41e17b9/libiberty%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0d38b677037f13b7b83d1024a5156be9b41e17b9/libiberty%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libiberty%2FChangeLog?ref=0d38b677037f13b7b83d1024a5156be9b41e17b9", "patch": "@@ -1,3 +1,13 @@\n+2009-05-25  Tristan Gingold  <gingold@adacore.com>\n+\n+\t* config.h-vms: Rewritten.  Define configure macros.\n+\tUse DEC-C builtin alloca.\n+\n+\t* makefile.vms (OBJS): Update list.\n+\t(OPT): New variable.\n+\t(CFLAGS): Update compilation flags.\n+\t(libiberty.olb): Do not depend on alloca-conf.h anymore.\n+\n 2009-05-19  Ian Lance Taylor  <iant@google.com>\n \t    Ben Elliston  <bje@au.ibm.com>\n "}, {"sha": "d84453101e817a15642849b24ba45e6d7ca88b0e", "filename": "libiberty/config.h-vms", "status": "modified", "additions": 10, "deletions": 12, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0d38b677037f13b7b83d1024a5156be9b41e17b9/libiberty%2Fconfig.h-vms", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0d38b677037f13b7b83d1024a5156be9b41e17b9/libiberty%2Fconfig.h-vms", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libiberty%2Fconfig.h-vms?ref=0d38b677037f13b7b83d1024a5156be9b41e17b9", "patch": "@@ -1,13 +1,11 @@\n-#ifndef NEED_strerror\n-#define NEED_strerror\n-#endif\n-#ifndef NEED_basename\n-#define NEED_basename\n-#endif\n-#ifndef NEED_psignal\n-#define NEED_psignal\n-#endif\n-#ifndef NEED_on_exit\n-#define NEED_on_exit\n-#endif\n+/* This is -*- C -*-  */\n+#define HAVE_STDLIB_H 1\n+#define HAVE_UNISTD_H 1\n+#define HAVE_STRING_H 1\n+#define HAVE_SYS_STAT_H 1\n+#define HAVE_SYS_TIME_H 1\n \n+/* Cheat: use vms builtin alloca.  */\n+#ifdef __DECC\n+#define C_alloca(x) __ALLOCA(x)\n+#endif"}, {"sha": "2f45f69a2aeb718a5a53f618aa34b11288bd083f", "filename": "libiberty/makefile.vms", "status": "modified", "additions": 12, "deletions": 6, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0d38b677037f13b7b83d1024a5156be9b41e17b9/libiberty%2Fmakefile.vms", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0d38b677037f13b7b83d1024a5156be9b41e17b9/libiberty%2Fmakefile.vms", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libiberty%2Fmakefile.vms?ref=0d38b677037f13b7b83d1024a5156be9b41e17b9", "patch": "@@ -7,19 +7,25 @@\n #\n #\n \n-OBJS=bcopy.obj,bcmp.obj,getopt.obj,obstack.obj,xexit.obj,xmalloc.obj,hex.obj,\\\n-   getopt1.obj,cplus-dem.obj,strncasecmp.obj,strcasecmp.obj,strdup.obj,\\\n-   concat.obj,getruntime.obj,getpagesize.obj,alloca.obj,xstrerror.obj,\\\n-   xmemdup.obj,xstrdup.obj,xatexit.obj,choose-temp.obj,fnmatch.obj,objalloc.obj\n+OBJS=getopt.obj,obstack.obj,xexit.obj,xmalloc.obj,hex.obj,\\\n+    getopt1.obj,cplus-dem.obj,cp-demangle.obj,cp-demint.obj,\\\n+    asprintf.obj vasprintf.obj,mkstemps.obj,\\\n+    concat.obj,getruntime.obj,getpagesize.obj,getpwd.obj,xstrerror.obj,\\\n+    xmemdup.obj,xstrdup.obj,xatexit.obj,choose-temp.obj,fnmatch.obj,\\\n+    objalloc.obj,safe-ctype.obj,hashtab.obj,lbasename.obj,argv.obj,\\\n+    lrealpath.obj,make-temp-file.obj,unlink-if-ordinary.obj\n \n ifeq ($(CC),gcc)\n CFLAGS=/include=([],[-.include])\n else\n # assume dec c\n-CFLAGS=/noopt/debug/include=([],[-.include])/define=(\"const=\")/warnings=disable=(missingreturn,implicitfunc)\n+OPT=/noopt/debug/warnings=disable=(missingreturn)\n+CFLAGS=$(OPT)/include=([],[-.include])/name=(as_is,shortened)\\\n+ /define=(HAVE_CONFIG_H=1)\\\n+ /prefix=(all,except=(\"getopt\",\"optarg\",\"optopt\",\"optind\",\"opterr\"))\n endif\n \n-libiberty.olb: config.h alloca-conf.h $(OBJS)\n+libiberty.olb: config.h $(OBJS)\n \tpurge\n \tlib/create libiberty *.obj\n "}]}