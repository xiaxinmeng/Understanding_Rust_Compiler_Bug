{"sha": "b1ccd09a7786c047a02f6eae42d431483be6a0ea", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjFjY2QwOWE3Nzg2YzA0N2EwMmY2ZWFlNDJkNDMxNDgzYmU2YTBlYQ==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2017-12-21T08:45:30Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2017-12-21T08:45:30Z"}, "message": "re PR target/83488 (ICE on a CET test-case)\n\n\tPR target/83488\n\t* config/i386/i386.c (ix86_target_string): Move -mavx512vbmi2 and\n\t-mshstk entries from isa_opts2 to isa_opts and -mhle, -mmovbe,\n\t-mclzero and -mmwaitx entries from isa_opts to isa_opts2.\n\t(ix86_option_override_internal): Adjust for\n\tOPTION_MASK_ISA_{HLE,MOVBE,CLZERO,MWAITX} moving to ix86_isa_flags2\n\tand OPTION_MASK_ISA_SHSTK moving to ix86_isa_flags.\n\t(BDESC_VERIFYS): Remove SPECIAL_ARGS2 related checks.\n\t(ix86_init_mmx_sse_builtins): Remove bdesc_special_args2 handling.\n\tUse def_builtin2 instead of def_builtin for OPTION_MASK_ISA_MWAITX\n\tand OPTION_MASK_ISA_CLZERO builtins.  Use def_builtin instead of\n\tdef_builtin2 for CET builtins.\n\t(ix86_expand_builtin): Remove bdesc_special_args2 handling.  Fix\n\tup formatting in IX86_BUILTIN_RDPID code.\n\t* config/i386/i386-builtin.def: Move VBMI2 builtins from SPECIAL_ARGS2\n\tsection to SPECIAL_ARGS and from ARGS2 section to ARGS.\n\t* config/i386/i386.opt (mavx512vbmi2, mshstk): Move from\n\tix86_isa_flags2 to ix86_isa_flags.\n\t(mhle, mmovbe, mclzero, mmwaitx): Move from ix86_isa_flags to\n\tix86_isa_flags2.\n\t* config/i386/i386-c.c (ix86_target_macros_internal): Check for\n\tOPTION_MASK_ISA_{CLZERO,MWAITX} in isa_flag2 instead of isa_flag.\n\tCheck for OPTION_MASK_ISA_{SHSTK,AVX512VBMI2} in isa_flag instead\n\tof isa_flag2.\n\t* common/config/i386/i386-common.c (OPTION_MASK_ISA_AVX512VBMI2_SET):\n\tOr in OPTION_MASK_ISA_AVX512F_SET.\n\t(OPTION_MASK_ISA_AVX512F_UNSET): Or in\n\tOPTION_MASK_ISA_AVX512VBMI2_UNSET.\n\t(ix86_handle_option): Adjust for\n\tOPTION_MASK_ISA_{SHSTK,AVX512VBMI2}_*SET being in ix86_isa_flags\n\tand OPTION_MASK_ISA_{MOVBE,MWAITX,CLZERO}_*SET in ix86_isa_flags2.\n\n\t* gcc.target/i386/pr83488.c: New test.\n\nFrom-SVN: r255937", "tree": {"sha": "c0b88ab7c74e93f2cd2b00a8446ac9ce383e9860", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c0b88ab7c74e93f2cd2b00a8446ac9ce383e9860"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b1ccd09a7786c047a02f6eae42d431483be6a0ea", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b1ccd09a7786c047a02f6eae42d431483be6a0ea", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b1ccd09a7786c047a02f6eae42d431483be6a0ea", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b1ccd09a7786c047a02f6eae42d431483be6a0ea/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "079b4a9c4aa1bee7ce03746e243b54a4d2752515", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/079b4a9c4aa1bee7ce03746e243b54a4d2752515", "html_url": "https://github.com/Rust-GCC/gccrs/commit/079b4a9c4aa1bee7ce03746e243b54a4d2752515"}], "stats": {"total": 470, "additions": 246, "deletions": 224}, "files": [{"sha": "c526dd9c322075b62353c7845bf4d2d9e90733ff", "filename": "gcc/ChangeLog", "status": "modified", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b1ccd09a7786c047a02f6eae42d431483be6a0ea/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b1ccd09a7786c047a02f6eae42d431483be6a0ea/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=b1ccd09a7786c047a02f6eae42d431483be6a0ea", "patch": "@@ -1,3 +1,37 @@\n+2017-12-21  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR target/83488\n+\t* config/i386/i386.c (ix86_target_string): Move -mavx512vbmi2 and\n+\t-mshstk entries from isa_opts2 to isa_opts and -mhle, -mmovbe,\n+\t-mclzero and -mmwaitx entries from isa_opts to isa_opts2.\n+\t(ix86_option_override_internal): Adjust for\n+\tOPTION_MASK_ISA_{HLE,MOVBE,CLZERO,MWAITX} moving to ix86_isa_flags2\n+\tand OPTION_MASK_ISA_SHSTK moving to ix86_isa_flags.\n+\t(BDESC_VERIFYS): Remove SPECIAL_ARGS2 related checks.\n+\t(ix86_init_mmx_sse_builtins): Remove bdesc_special_args2 handling.\n+\tUse def_builtin2 instead of def_builtin for OPTION_MASK_ISA_MWAITX\n+\tand OPTION_MASK_ISA_CLZERO builtins.  Use def_builtin instead of\n+\tdef_builtin2 for CET builtins.\n+\t(ix86_expand_builtin): Remove bdesc_special_args2 handling.  Fix\n+\tup formatting in IX86_BUILTIN_RDPID code.\n+\t* config/i386/i386-builtin.def: Move VBMI2 builtins from SPECIAL_ARGS2\n+\tsection to SPECIAL_ARGS and from ARGS2 section to ARGS.\n+\t* config/i386/i386.opt (mavx512vbmi2, mshstk): Move from\n+\tix86_isa_flags2 to ix86_isa_flags.\n+\t(mhle, mmovbe, mclzero, mmwaitx): Move from ix86_isa_flags to\n+\tix86_isa_flags2.\n+\t* config/i386/i386-c.c (ix86_target_macros_internal): Check for\n+\tOPTION_MASK_ISA_{CLZERO,MWAITX} in isa_flag2 instead of isa_flag.\n+\tCheck for OPTION_MASK_ISA_{SHSTK,AVX512VBMI2} in isa_flag instead\n+\tof isa_flag2.\n+\t* common/config/i386/i386-common.c (OPTION_MASK_ISA_AVX512VBMI2_SET):\n+\tOr in OPTION_MASK_ISA_AVX512F_SET.\n+\t(OPTION_MASK_ISA_AVX512F_UNSET): Or in\n+\tOPTION_MASK_ISA_AVX512VBMI2_UNSET.\n+\t(ix86_handle_option): Adjust for\n+\tOPTION_MASK_ISA_{SHSTK,AVX512VBMI2}_*SET being in ix86_isa_flags\n+\tand OPTION_MASK_ISA_{MOVBE,MWAITX,CLZERO}_*SET in ix86_isa_flags2.\n+\n 2017-12-21  Richard Sandiford  <richard.sandiford@linaro.org>\n \t    Alan Hayward  <alan.hayward@arm.com>\n \t    David Sherwood  <david.sherwood@arm.com>"}, {"sha": "5a339f09db11bafc591621edc28078c7007dad30", "filename": "gcc/common/config/i386/i386-common.c", "status": "modified", "additions": 23, "deletions": 24, "changes": 47, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b1ccd09a7786c047a02f6eae42d431483be6a0ea/gcc%2Fcommon%2Fconfig%2Fi386%2Fi386-common.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b1ccd09a7786c047a02f6eae42d431483be6a0ea/gcc%2Fcommon%2Fconfig%2Fi386%2Fi386-common.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcommon%2Fconfig%2Fi386%2Fi386-common.c?ref=b1ccd09a7786c047a02f6eae42d431483be6a0ea", "patch": "@@ -80,7 +80,8 @@ along with GCC; see the file COPYING3.  If not see\n   (OPTION_MASK_ISA_AVX512VBMI | OPTION_MASK_ISA_AVX512BW_SET)\n #define OPTION_MASK_ISA_AVX5124FMAPS_SET OPTION_MASK_ISA_AVX5124FMAPS\n #define OPTION_MASK_ISA_AVX5124VNNIW_SET OPTION_MASK_ISA_AVX5124VNNIW\n-#define OPTION_MASK_ISA_AVX512VBMI2_SET OPTION_MASK_ISA_AVX512VBMI2\n+#define OPTION_MASK_ISA_AVX512VBMI2_SET \\\n+  (OPTION_MASK_ISA_AVX512VBMI2 | OPTION_MASK_ISA_AVX512F_SET)\n #define OPTION_MASK_ISA_AVX512VNNI_SET OPTION_MASK_ISA_AVX512VNNI\n #define OPTION_MASK_ISA_AVX512VPOPCNTDQ_SET OPTION_MASK_ISA_AVX512VPOPCNTDQ\n #define OPTION_MASK_ISA_RTM_SET OPTION_MASK_ISA_RTM\n@@ -183,7 +184,7 @@ along with GCC; see the file COPYING3.  If not see\n   (OPTION_MASK_ISA_AVX512F | OPTION_MASK_ISA_AVX512CD_UNSET \\\n    | OPTION_MASK_ISA_AVX512PF_UNSET | OPTION_MASK_ISA_AVX512ER_UNSET \\\n    | OPTION_MASK_ISA_AVX512DQ_UNSET | OPTION_MASK_ISA_AVX512BW_UNSET \\\n-   | OPTION_MASK_ISA_AVX512VL_UNSET)\n+   | OPTION_MASK_ISA_AVX512VL_UNSET | OPTION_MASK_ISA_AVX512VBMI2_UNSET)\n #define OPTION_MASK_ISA_AVX512CD_UNSET OPTION_MASK_ISA_AVX512CD\n #define OPTION_MASK_ISA_AVX512PF_UNSET OPTION_MASK_ISA_AVX512PF\n #define OPTION_MASK_ISA_AVX512ER_UNSET OPTION_MASK_ISA_AVX512ER\n@@ -533,13 +534,13 @@ ix86_handle_option (struct gcc_options *opts,\n     case OPT_mshstk:\n       if (value)\n \t{\n-\t  opts->x_ix86_isa_flags2 |= OPTION_MASK_ISA_SHSTK_SET;\n-\t  opts->x_ix86_isa_flags2_explicit |= OPTION_MASK_ISA_SHSTK_SET;\n+\t  opts->x_ix86_isa_flags |= OPTION_MASK_ISA_SHSTK_SET;\n+\t  opts->x_ix86_isa_flags_explicit |= OPTION_MASK_ISA_SHSTK_SET;\n \t}\n       else\n \t{\n-\t  opts->x_ix86_isa_flags2 &= ~OPTION_MASK_ISA_SHSTK_UNSET;\n-\t  opts->x_ix86_isa_flags2_explicit |= OPTION_MASK_ISA_SHSTK_UNSET;\n+\t  opts->x_ix86_isa_flags &= ~OPTION_MASK_ISA_SHSTK_UNSET;\n+\t  opts->x_ix86_isa_flags_explicit |= OPTION_MASK_ISA_SHSTK_UNSET;\n \t}\n       return true;\n \n@@ -602,15 +603,13 @@ ix86_handle_option (struct gcc_options *opts,\n     case OPT_mavx512vbmi2:\n       if (value)\n \t{\n-\t  opts->x_ix86_isa_flags2 |= OPTION_MASK_ISA_AVX512VBMI2_SET;\n-\t  opts->x_ix86_isa_flags2_explicit |= OPTION_MASK_ISA_AVX512VBMI2_SET;\n-\t  opts->x_ix86_isa_flags |= OPTION_MASK_ISA_AVX512F_SET;\n-\t  opts->x_ix86_isa_flags_explicit |= OPTION_MASK_ISA_AVX512F_SET;\n+\t  opts->x_ix86_isa_flags |= OPTION_MASK_ISA_AVX512VBMI2_SET;\n+\t  opts->x_ix86_isa_flags_explicit |= OPTION_MASK_ISA_AVX512VBMI2_SET;\n \t}\n       else\n \t{\n-\t  opts->x_ix86_isa_flags2 &= ~OPTION_MASK_ISA_AVX512VBMI2_UNSET;\n-\t  opts->x_ix86_isa_flags2_explicit |= OPTION_MASK_ISA_AVX512VBMI2_UNSET;\n+\t  opts->x_ix86_isa_flags &= ~OPTION_MASK_ISA_AVX512VBMI2_UNSET;\n+\t  opts->x_ix86_isa_flags_explicit |= OPTION_MASK_ISA_AVX512VBMI2_UNSET;\n \t}\n       return true;\n \n@@ -917,13 +916,13 @@ ix86_handle_option (struct gcc_options *opts,\n     case OPT_mmovbe:\n       if (value)\n \t{\n-\t  opts->x_ix86_isa_flags |= OPTION_MASK_ISA_MOVBE_SET;\n-\t  opts->x_ix86_isa_flags_explicit |= OPTION_MASK_ISA_MOVBE_SET;\n+\t  opts->x_ix86_isa_flags2 |= OPTION_MASK_ISA_MOVBE_SET;\n+\t  opts->x_ix86_isa_flags2_explicit |= OPTION_MASK_ISA_MOVBE_SET;\n \t}\n       else\n \t{\n-\t  opts->x_ix86_isa_flags &= ~OPTION_MASK_ISA_MOVBE_UNSET;\n-\t  opts->x_ix86_isa_flags_explicit |= OPTION_MASK_ISA_MOVBE_UNSET;\n+\t  opts->x_ix86_isa_flags2 &= ~OPTION_MASK_ISA_MOVBE_UNSET;\n+\t  opts->x_ix86_isa_flags2_explicit |= OPTION_MASK_ISA_MOVBE_UNSET;\n \t}\n       return true;\n \n@@ -1164,26 +1163,26 @@ ix86_handle_option (struct gcc_options *opts,\n     case OPT_mmwaitx:\n       if (value)\n \t{\n-\t  opts->x_ix86_isa_flags |= OPTION_MASK_ISA_MWAITX_SET;\n-\t  opts->x_ix86_isa_flags_explicit |= OPTION_MASK_ISA_MWAITX_SET;\n+\t  opts->x_ix86_isa_flags2 |= OPTION_MASK_ISA_MWAITX_SET;\n+\t  opts->x_ix86_isa_flags2_explicit |= OPTION_MASK_ISA_MWAITX_SET;\n \t}\n       else\n \t{\n-\t  opts->x_ix86_isa_flags &= ~OPTION_MASK_ISA_MWAITX_UNSET;\n-\t  opts->x_ix86_isa_flags_explicit |= OPTION_MASK_ISA_MWAITX_UNSET;\n+\t  opts->x_ix86_isa_flags2 &= ~OPTION_MASK_ISA_MWAITX_UNSET;\n+\t  opts->x_ix86_isa_flags2_explicit |= OPTION_MASK_ISA_MWAITX_UNSET;\n \t}\n       return true;\n \n     case OPT_mclzero:\n       if (value)\n \t{\n-\t  opts->x_ix86_isa_flags |= OPTION_MASK_ISA_CLZERO_SET;\n-\t  opts->x_ix86_isa_flags_explicit |= OPTION_MASK_ISA_CLZERO_SET;\n+\t  opts->x_ix86_isa_flags2 |= OPTION_MASK_ISA_CLZERO_SET;\n+\t  opts->x_ix86_isa_flags2_explicit |= OPTION_MASK_ISA_CLZERO_SET;\n \t}\n       else\n \t{\n-\t  opts->x_ix86_isa_flags &= ~OPTION_MASK_ISA_CLZERO_UNSET;\n-\t  opts->x_ix86_isa_flags_explicit |= OPTION_MASK_ISA_CLZERO_UNSET;\n+\t  opts->x_ix86_isa_flags2 &= ~OPTION_MASK_ISA_CLZERO_UNSET;\n+\t  opts->x_ix86_isa_flags2_explicit |= OPTION_MASK_ISA_CLZERO_UNSET;\n \t}\n       return true;\n "}, {"sha": "30f9675025e922779fac9c2847f5f761c4185589", "filename": "gcc/config/i386/i386-builtin.def", "status": "modified", "additions": 136, "deletions": 136, "changes": 272, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b1ccd09a7786c047a02f6eae42d431483be6a0ea/gcc%2Fconfig%2Fi386%2Fi386-builtin.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b1ccd09a7786c047a02f6eae42d431483be6a0ea/gcc%2Fconfig%2Fi386%2Fi386-builtin.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386-builtin.def?ref=b1ccd09a7786c047a02f6eae42d431483be6a0ea", "patch": "@@ -392,6 +392,29 @@ BDESC (OPTION_MASK_ISA_AVX512BW, CODE_FOR_avx512bw_truncatev32hiv32qi2_mask_stor\n BDESC (OPTION_MASK_ISA_PKU, CODE_FOR_rdpkru,  \"__builtin_ia32_rdpkru\", IX86_BUILTIN_RDPKRU, UNKNOWN, (int) UNSIGNED_FTYPE_VOID)\n BDESC (OPTION_MASK_ISA_PKU, CODE_FOR_wrpkru,  \"__builtin_ia32_wrpkru\", IX86_BUILTIN_WRPKRU, UNKNOWN, (int) VOID_FTYPE_UNSIGNED)\n \n+/* VBMI2 */\n+BDESC (OPTION_MASK_ISA_AVX512VBMI2, CODE_FOR_compressstorev64qi_mask, \"__builtin_ia32_compressstoreuqi512_mask\", IX86_BUILTIN_PCOMPRESSBSTORE512, UNKNOWN, (int) VOID_FTYPE_PV64QI_V64QI_UDI)\n+BDESC (OPTION_MASK_ISA_AVX512VBMI2, CODE_FOR_compressstorev32hi_mask, \"__builtin_ia32_compressstoreuhi512_mask\", IX86_BUILTIN_PCOMPRESSWSTORE512, UNKNOWN, (int) VOID_FTYPE_PV32HI_V32HI_USI)\n+BDESC (OPTION_MASK_ISA_AVX512VBMI2 | OPTION_MASK_ISA_AVX512VL, CODE_FOR_compressstorev32qi_mask, \"__builtin_ia32_compressstoreuqi256_mask\", IX86_BUILTIN_PCOMPRESSBSTORE256, UNKNOWN, (int) VOID_FTYPE_PV32QI_V32QI_USI)\n+BDESC (OPTION_MASK_ISA_AVX512VBMI2 | OPTION_MASK_ISA_AVX512VL, CODE_FOR_compressstorev16qi_mask, \"__builtin_ia32_compressstoreuqi128_mask\", IX86_BUILTIN_PCOMPRESSBSTORE128, UNKNOWN, (int) VOID_FTYPE_PV16QI_V16QI_UHI)\n+BDESC (OPTION_MASK_ISA_AVX512VBMI2 | OPTION_MASK_ISA_AVX512VL, CODE_FOR_compressstorev16hi_mask, \"__builtin_ia32_compressstoreuhi256_mask\", IX86_BUILTIN_PCOMPRESSWSTORE256, UNKNOWN, (int) VOID_FTYPE_PV16HI_V16HI_UHI)\n+BDESC (OPTION_MASK_ISA_AVX512VBMI2 | OPTION_MASK_ISA_AVX512VL, CODE_FOR_compressstorev8hi_mask, \"__builtin_ia32_compressstoreuhi128_mask\", IX86_BUILTIN_PCOMPRESSWSTORE128, UNKNOWN, (int) VOID_FTYPE_PV8HI_V8HI_UQI)\n+\n+BDESC (OPTION_MASK_ISA_AVX512VBMI2, CODE_FOR_expandv64qi_mask, \"__builtin_ia32_expandloadqi512_mask\", IX86_BUILTIN_PEXPANDBLOAD512, UNKNOWN, (int) V64QI_FTYPE_PCV64QI_V64QI_UDI)\n+BDESC (OPTION_MASK_ISA_AVX512VBMI2, CODE_FOR_expandv64qi_maskz, \"__builtin_ia32_expandloadqi512_maskz\", IX86_BUILTIN_PEXPANDBLOAD512Z, UNKNOWN, (int) V64QI_FTYPE_PCV64QI_V64QI_UDI)\n+BDESC (OPTION_MASK_ISA_AVX512VBMI2, CODE_FOR_expandv32hi_mask, \"__builtin_ia32_expandloadhi512_mask\", IX86_BUILTIN_PEXPANDWLOAD512, UNKNOWN, (int) V32HI_FTYPE_PCV32HI_V32HI_USI)\n+BDESC (OPTION_MASK_ISA_AVX512VBMI2, CODE_FOR_expandv32hi_maskz, \"__builtin_ia32_expandloadhi512_maskz\", IX86_BUILTIN_PEXPANDWLOAD512Z, UNKNOWN, (int) V32HI_FTYPE_PCV32HI_V32HI_USI)\n+\n+BDESC (OPTION_MASK_ISA_AVX512VBMI2, CODE_FOR_expandv32qi_mask, \"__builtin_ia32_expandloadqi256_mask\", IX86_BUILTIN_PEXPANDBLOAD256, UNKNOWN, (int) V32QI_FTYPE_PCV32QI_V32QI_USI)\n+BDESC (OPTION_MASK_ISA_AVX512VBMI2, CODE_FOR_expandv32qi_maskz, \"__builtin_ia32_expandloadqi256_maskz\", IX86_BUILTIN_PEXPANDBLOAD256Z, UNKNOWN, (int) V32QI_FTYPE_PCV32QI_V32QI_USI)\n+BDESC (OPTION_MASK_ISA_AVX512VBMI2, CODE_FOR_expandv16hi_mask, \"__builtin_ia32_expandloadhi256_mask\", IX86_BUILTIN_PEXPANDWLOAD256, UNKNOWN, (int) V16HI_FTYPE_PCV16HI_V16HI_UHI)\n+BDESC (OPTION_MASK_ISA_AVX512VBMI2, CODE_FOR_expandv16hi_maskz, \"__builtin_ia32_expandloadhi256_maskz\", IX86_BUILTIN_PEXPANDWLOAD256Z, UNKNOWN, (int) V16HI_FTYPE_PCV16HI_V16HI_UHI)\n+\n+BDESC (OPTION_MASK_ISA_AVX512VBMI2, CODE_FOR_expandv16qi_mask, \"__builtin_ia32_expandloadqi128_mask\", IX86_BUILTIN_PEXPANDBLOAD128, UNKNOWN, (int) V16QI_FTYPE_PCV16QI_V16QI_UHI)\n+BDESC (OPTION_MASK_ISA_AVX512VBMI2, CODE_FOR_expandv16qi_maskz, \"__builtin_ia32_expandloadqi128_maskz\", IX86_BUILTIN_PEXPANDBLOAD128Z, UNKNOWN, (int) V16QI_FTYPE_PCV16QI_V16QI_UHI)\n+BDESC (OPTION_MASK_ISA_AVX512VBMI2, CODE_FOR_expandv8hi_mask, \"__builtin_ia32_expandloadhi128_mask\", IX86_BUILTIN_PEXPANDWLOAD128, UNKNOWN, (int) V8HI_FTYPE_PCV8HI_V8HI_UQI)\n+BDESC (OPTION_MASK_ISA_AVX512VBMI2, CODE_FOR_expandv8hi_maskz, \"__builtin_ia32_expandloadhi128_maskz\", IX86_BUILTIN_PEXPANDWLOAD128Z, UNKNOWN, (int) V8HI_FTYPE_PCV8HI_V8HI_UQI)\n+\n BDESC_END (SPECIAL_ARGS, ARGS)\n \n /* Builtins with variable number of arguments.  */\n@@ -2394,6 +2417,118 @@ BDESC (OPTION_MASK_ISA_AVX512VBMI | OPTION_MASK_ISA_AVX512VL, CODE_FOR_avx512vl_\n BDESC (OPTION_MASK_ISA_AVX512VBMI | OPTION_MASK_ISA_AVX512VL, CODE_FOR_avx512vl_vpermi2varv32qi3_mask, \"__builtin_ia32_vpermi2varqi256_mask\", IX86_BUILTIN_VPERMI2VARQI256, UNKNOWN, (int) V32QI_FTYPE_V32QI_V32QI_V32QI_USI)\n BDESC (OPTION_MASK_ISA_AVX512VBMI | OPTION_MASK_ISA_AVX512VL, CODE_FOR_avx512vl_vpermi2varv16qi3_mask, \"__builtin_ia32_vpermi2varqi128_mask\", IX86_BUILTIN_VPERMI2VARQI128, UNKNOWN, (int) V16QI_FTYPE_V16QI_V16QI_V16QI_UHI)\n \n+/* VBMI2 */\n+BDESC (OPTION_MASK_ISA_AVX512VBMI2, CODE_FOR_compressv64qi_mask, \"__builtin_ia32_compressqi512_mask\", IX86_BUILTIN_PCOMPRESSB512, UNKNOWN, (int) V64QI_FTYPE_V64QI_V64QI_UDI)\n+BDESC (OPTION_MASK_ISA_AVX512VBMI2, CODE_FOR_compressv32hi_mask, \"__builtin_ia32_compresshi512_mask\", IX86_BUILTIN_PCOMPRESSW512, UNKNOWN, (int) V32HI_FTYPE_V32HI_V32HI_USI)\n+BDESC (OPTION_MASK_ISA_AVX512VBMI2 | OPTION_MASK_ISA_AVX512VL, CODE_FOR_compressv32qi_mask, \"__builtin_ia32_compressqi256_mask\", IX86_BUILTIN_PCOMPRESSB256, UNKNOWN, (int) V32QI_FTYPE_V32QI_V32QI_USI)\n+BDESC (OPTION_MASK_ISA_AVX512VBMI2 | OPTION_MASK_ISA_AVX512VL, CODE_FOR_compressv16qi_mask, \"__builtin_ia32_compressqi128_mask\", IX86_BUILTIN_PCOMPRESSB128, UNKNOWN, (int) V16QI_FTYPE_V16QI_V16QI_UHI)\n+BDESC (OPTION_MASK_ISA_AVX512VBMI2 | OPTION_MASK_ISA_AVX512VL, CODE_FOR_compressv16hi_mask, \"__builtin_ia32_compresshi256_mask\", IX86_BUILTIN_PCOMPRESSW256, UNKNOWN, (int) V16HI_FTYPE_V16HI_V16HI_UHI)\n+BDESC (OPTION_MASK_ISA_AVX512VBMI2 | OPTION_MASK_ISA_AVX512VL, CODE_FOR_compressv8hi_mask, \"__builtin_ia32_compresshi128_mask\", IX86_BUILTIN_PCOMPRESSW128, UNKNOWN, (int) V8HI_FTYPE_V8HI_V8HI_UQI)\n+BDESC (OPTION_MASK_ISA_AVX512VBMI2, CODE_FOR_expandv64qi_mask, \"__builtin_ia32_expandqi512_mask\", IX86_BUILTIN_PEXPANDB512, UNKNOWN, (int) V64QI_FTYPE_V64QI_V64QI_UDI)\n+BDESC (OPTION_MASK_ISA_AVX512VBMI2, CODE_FOR_expandv64qi_maskz, \"__builtin_ia32_expandqi512_maskz\", IX86_BUILTIN_PEXPANDB512Z, UNKNOWN, (int) V64QI_FTYPE_V64QI_V64QI_UDI)\n+BDESC (OPTION_MASK_ISA_AVX512VBMI2, CODE_FOR_expandv32hi_mask, \"__builtin_ia32_expandhi512_mask\", IX86_BUILTIN_PEXPANDW512, UNKNOWN, (int) V32HI_FTYPE_V32HI_V32HI_USI)\n+BDESC (OPTION_MASK_ISA_AVX512VBMI2, CODE_FOR_expandv32hi_maskz, \"__builtin_ia32_expandhi512_maskz\", IX86_BUILTIN_PEXPANDW512Z, UNKNOWN, (int) V32HI_FTYPE_V32HI_V32HI_USI)\n+BDESC (OPTION_MASK_ISA_AVX512VBMI2 | OPTION_MASK_ISA_AVX512VL, CODE_FOR_expandv32qi_mask, \"__builtin_ia32_expandqi256_mask\", IX86_BUILTIN_PEXPANDB256, UNKNOWN, (int) V32QI_FTYPE_V32QI_V32QI_USI)\n+BDESC (OPTION_MASK_ISA_AVX512VBMI2 | OPTION_MASK_ISA_AVX512VL, CODE_FOR_expandv32qi_maskz, \"__builtin_ia32_expandqi256_maskz\", IX86_BUILTIN_PEXPANDB256Z, UNKNOWN, (int) V32QI_FTYPE_V32QI_V32QI_USI)\n+BDESC (OPTION_MASK_ISA_AVX512VBMI2 | OPTION_MASK_ISA_AVX512VL, CODE_FOR_expandv16qi_mask, \"__builtin_ia32_expandqi128_mask\", IX86_BUILTIN_PEXPANDB128, UNKNOWN, (int) V16QI_FTYPE_V16QI_V16QI_UHI)\n+BDESC (OPTION_MASK_ISA_AVX512VBMI2 | OPTION_MASK_ISA_AVX512VL, CODE_FOR_expandv16qi_maskz, \"__builtin_ia32_expandqi128_maskz\", IX86_BUILTIN_PEXPANDB128Z, UNKNOWN, (int) V16QI_FTYPE_V16QI_V16QI_UHI)\n+BDESC (OPTION_MASK_ISA_AVX512VBMI2 | OPTION_MASK_ISA_AVX512VL, CODE_FOR_expandv16hi_mask, \"__builtin_ia32_expandhi256_mask\", IX86_BUILTIN_PEXPANDW256, UNKNOWN, (int) V16HI_FTYPE_V16HI_V16HI_UHI)\n+BDESC (OPTION_MASK_ISA_AVX512VBMI2 | OPTION_MASK_ISA_AVX512VL, CODE_FOR_expandv16hi_maskz, \"__builtin_ia32_expandhi256_maskz\", IX86_BUILTIN_PEXPANDW256Z, UNKNOWN, (int) V16HI_FTYPE_V16HI_V16HI_UHI)\n+BDESC (OPTION_MASK_ISA_AVX512VBMI2 | OPTION_MASK_ISA_AVX512VL, CODE_FOR_expandv8hi_mask, \"__builtin_ia32_expandhi128_mask\", IX86_BUILTIN_PEXPANDW128, UNKNOWN, (int) V8HI_FTYPE_V8HI_V8HI_UQI)\n+BDESC (OPTION_MASK_ISA_AVX512VBMI2 | OPTION_MASK_ISA_AVX512VL, CODE_FOR_expandv8hi_maskz, \"__builtin_ia32_expandhi128_maskz\", IX86_BUILTIN_PEXPANDW128Z, UNKNOWN, (int) V8HI_FTYPE_V8HI_V8HI_UQI)\n+BDESC (OPTION_MASK_ISA_AVX512VBMI2, CODE_FOR_vpshrd_v32hi, \"__builtin_ia32_vpshrd_v32hi\", IX86_BUILTIN_VPSHRDV32HI, UNKNOWN, (int) V32HI_FTYPE_V32HI_V32HI_INT)\n+BDESC (OPTION_MASK_ISA_AVX512VBMI2, CODE_FOR_vpshrd_v32hi_mask, \"__builtin_ia32_vpshrd_v32hi_mask\", IX86_BUILTIN_VPSHRDV32HI_MASK, UNKNOWN, (int) V32HI_FTYPE_V32HI_V32HI_INT_V32HI_INT)\n+BDESC (OPTION_MASK_ISA_AVX512VBMI2, CODE_FOR_vpshrd_v16hi, \"__builtin_ia32_vpshrd_v16hi\", IX86_BUILTIN_VPSHRDV16HI, UNKNOWN, (int) V16HI_FTYPE_V16HI_V16HI_INT)\n+BDESC (OPTION_MASK_ISA_AVX512VBMI2, CODE_FOR_vpshrd_v16hi_mask, \"__builtin_ia32_vpshrd_v16hi_mask\", IX86_BUILTIN_VPSHRDV16HI_MASK, UNKNOWN, (int) V16HI_FTYPE_V16HI_V16HI_INT_V16HI_INT)\n+BDESC (OPTION_MASK_ISA_AVX512VBMI2, CODE_FOR_vpshrd_v8hi, \"__builtin_ia32_vpshrd_v8hi\", IX86_BUILTIN_VPSHRDV8HI, UNKNOWN, (int) V8HI_FTYPE_V8HI_V8HI_INT)\n+BDESC (OPTION_MASK_ISA_AVX512VBMI2, CODE_FOR_vpshrd_v8hi_mask, \"__builtin_ia32_vpshrd_v8hi_mask\", IX86_BUILTIN_VPSHRDV8HI_MASK, UNKNOWN, (int) V8HI_FTYPE_V8HI_V8HI_INT_V8HI_INT)\n+BDESC (OPTION_MASK_ISA_AVX512VBMI2, CODE_FOR_vpshrd_v16si, \"__builtin_ia32_vpshrd_v16si\", IX86_BUILTIN_VPSHRDV16SI, UNKNOWN, (int) V16SI_FTYPE_V16SI_V16SI_INT)\n+BDESC (OPTION_MASK_ISA_AVX512VBMI2, CODE_FOR_vpshrd_v16si_mask, \"__builtin_ia32_vpshrd_v16si_mask\", IX86_BUILTIN_VPSHRDV16SI_MASK, UNKNOWN, (int) V16SI_FTYPE_V16SI_V16SI_INT_V16SI_INT)\n+BDESC (OPTION_MASK_ISA_AVX512VBMI2, CODE_FOR_vpshrd_v8si, \"__builtin_ia32_vpshrd_v8si\", IX86_BUILTIN_VPSHRDV8SI, UNKNOWN, (int) V8SI_FTYPE_V8SI_V8SI_INT)\n+BDESC (OPTION_MASK_ISA_AVX512VBMI2, CODE_FOR_vpshrd_v8si_mask, \"__builtin_ia32_vpshrd_v8si_mask\", IX86_BUILTIN_VPSHRDV8SI_MASK, UNKNOWN, (int) V8SI_FTYPE_V8SI_V8SI_INT_V8SI_INT)\n+BDESC (OPTION_MASK_ISA_AVX512VBMI2, CODE_FOR_vpshrd_v4si, \"__builtin_ia32_vpshrd_v4si\", IX86_BUILTIN_VPSHRDV4SI, UNKNOWN, (int) V4SI_FTYPE_V4SI_V4SI_INT)\n+BDESC (OPTION_MASK_ISA_AVX512VBMI2, CODE_FOR_vpshrd_v4si_mask, \"__builtin_ia32_vpshrd_v4si_mask\", IX86_BUILTIN_VPSHRDV4SI_MASK, UNKNOWN, (int) V4SI_FTYPE_V4SI_V4SI_INT_V4SI_INT)\n+BDESC (OPTION_MASK_ISA_AVX512VBMI2, CODE_FOR_vpshrd_v8di, \"__builtin_ia32_vpshrd_v8di\", IX86_BUILTIN_VPSHRDV8DI, UNKNOWN, (int) V8DI_FTYPE_V8DI_V8DI_INT)\n+BDESC (OPTION_MASK_ISA_AVX512VBMI2, CODE_FOR_vpshrd_v8di_mask, \"__builtin_ia32_vpshrd_v8di_mask\", IX86_BUILTIN_VPSHRDV8DI_MASK, UNKNOWN, (int) V8DI_FTYPE_V8DI_V8DI_INT_V8DI_INT)\n+BDESC (OPTION_MASK_ISA_AVX512VBMI2, CODE_FOR_vpshrd_v4di, \"__builtin_ia32_vpshrd_v4di\", IX86_BUILTIN_VPSHRDV4DI, UNKNOWN, (int) V4DI_FTYPE_V4DI_V4DI_INT)\n+BDESC (OPTION_MASK_ISA_AVX512VBMI2, CODE_FOR_vpshrd_v4di_mask, \"__builtin_ia32_vpshrd_v4di_mask\", IX86_BUILTIN_VPSHRDV4DI_MASK, UNKNOWN, (int) V4DI_FTYPE_V4DI_V4DI_INT_V4DI_INT)\n+BDESC (OPTION_MASK_ISA_AVX512VBMI2, CODE_FOR_vpshrd_v2di, \"__builtin_ia32_vpshrd_v2di\", IX86_BUILTIN_VPSHRDV2DI, UNKNOWN, (int) V2DI_FTYPE_V2DI_V2DI_INT)\n+BDESC (OPTION_MASK_ISA_AVX512VBMI2, CODE_FOR_vpshrd_v2di_mask, \"__builtin_ia32_vpshrd_v2di_mask\", IX86_BUILTIN_VPSHRDV2DI_MASK, UNKNOWN, (int) V2DI_FTYPE_V2DI_V2DI_INT_V2DI_INT)\n+BDESC (OPTION_MASK_ISA_AVX512VBMI2, CODE_FOR_vpshld_v32hi, \"__builtin_ia32_vpshld_v32hi\", IX86_BUILTIN_VPSHLDV32HI, UNKNOWN, (int) V32HI_FTYPE_V32HI_V32HI_INT)\n+BDESC (OPTION_MASK_ISA_AVX512VBMI2, CODE_FOR_vpshld_v32hi_mask, \"__builtin_ia32_vpshld_v32hi_mask\", IX86_BUILTIN_VPSHLDV32HI_MASK, UNKNOWN, (int) V32HI_FTYPE_V32HI_V32HI_INT_V32HI_INT)\n+BDESC (OPTION_MASK_ISA_AVX512VBMI2, CODE_FOR_vpshld_v16hi, \"__builtin_ia32_vpshld_v16hi\", IX86_BUILTIN_VPSHLDV16HI, UNKNOWN, (int) V16HI_FTYPE_V16HI_V16HI_INT)\n+BDESC (OPTION_MASK_ISA_AVX512VBMI2, CODE_FOR_vpshld_v16hi_mask, \"__builtin_ia32_vpshld_v16hi_mask\", IX86_BUILTIN_VPSHLDV16HI_MASK, UNKNOWN, (int) V16HI_FTYPE_V16HI_V16HI_INT_V16HI_INT)\n+BDESC (OPTION_MASK_ISA_AVX512VBMI2, CODE_FOR_vpshld_v8hi, \"__builtin_ia32_vpshld_v8hi\", IX86_BUILTIN_VPSHLDV8HI, UNKNOWN, (int) V8HI_FTYPE_V8HI_V8HI_INT)\n+BDESC (OPTION_MASK_ISA_AVX512VBMI2, CODE_FOR_vpshld_v8hi_mask, \"__builtin_ia32_vpshld_v8hi_mask\", IX86_BUILTIN_VPSHLDV8HI_MASK, UNKNOWN, (int) V8HI_FTYPE_V8HI_V8HI_INT_V8HI_INT)\n+BDESC (OPTION_MASK_ISA_AVX512VBMI2, CODE_FOR_vpshld_v16si, \"__builtin_ia32_vpshld_v16si\", IX86_BUILTIN_VPSHLDV16SI, UNKNOWN, (int) V16SI_FTYPE_V16SI_V16SI_INT)\n+BDESC (OPTION_MASK_ISA_AVX512VBMI2, CODE_FOR_vpshld_v16si_mask, \"__builtin_ia32_vpshld_v16si_mask\", IX86_BUILTIN_VPSHLDV16SI_MASK, UNKNOWN, (int) V16SI_FTYPE_V16SI_V16SI_INT_V16SI_INT)\n+BDESC (OPTION_MASK_ISA_AVX512VBMI2, CODE_FOR_vpshld_v8si, \"__builtin_ia32_vpshld_v8si\", IX86_BUILTIN_VPSHLDV8SI, UNKNOWN, (int) V8SI_FTYPE_V8SI_V8SI_INT)\n+BDESC (OPTION_MASK_ISA_AVX512VBMI2, CODE_FOR_vpshld_v8si_mask, \"__builtin_ia32_vpshld_v8si_mask\", IX86_BUILTIN_VPSHLDV8SI_MASK, UNKNOWN, (int) V8SI_FTYPE_V8SI_V8SI_INT_V8SI_INT)\n+BDESC (OPTION_MASK_ISA_AVX512VBMI2, CODE_FOR_vpshld_v4si, \"__builtin_ia32_vpshld_v4si\", IX86_BUILTIN_VPSHLDV4SI, UNKNOWN, (int) V4SI_FTYPE_V4SI_V4SI_INT)\n+BDESC (OPTION_MASK_ISA_AVX512VBMI2, CODE_FOR_vpshld_v4si_mask, \"__builtin_ia32_vpshld_v4si_mask\", IX86_BUILTIN_VPSHLDV4SI_MASK, UNKNOWN, (int) V4SI_FTYPE_V4SI_V4SI_INT_V4SI_INT)\n+BDESC (OPTION_MASK_ISA_AVX512VBMI2, CODE_FOR_vpshld_v8di, \"__builtin_ia32_vpshld_v8di\", IX86_BUILTIN_VPSHLDV8DI, UNKNOWN, (int) V8DI_FTYPE_V8DI_V8DI_INT)\n+BDESC (OPTION_MASK_ISA_AVX512VBMI2, CODE_FOR_vpshld_v8di_mask, \"__builtin_ia32_vpshld_v8di_mask\", IX86_BUILTIN_VPSHLDV8DI_MASK, UNKNOWN, (int) V8DI_FTYPE_V8DI_V8DI_INT_V8DI_INT)\n+BDESC (OPTION_MASK_ISA_AVX512VBMI2, CODE_FOR_vpshld_v4di, \"__builtin_ia32_vpshld_v4di\", IX86_BUILTIN_VPSHLDV4DI, UNKNOWN, (int) V4DI_FTYPE_V4DI_V4DI_INT)\n+BDESC (OPTION_MASK_ISA_AVX512VBMI2, CODE_FOR_vpshld_v4di_mask, \"__builtin_ia32_vpshld_v4di_mask\", IX86_BUILTIN_VPSHLDV4DI_MASK, UNKNOWN, (int) V4DI_FTYPE_V4DI_V4DI_INT_V4DI_INT)\n+BDESC (OPTION_MASK_ISA_AVX512VBMI2, CODE_FOR_vpshld_v2di, \"__builtin_ia32_vpshld_v2di\", IX86_BUILTIN_VPSHLDV2DI, UNKNOWN, (int) V2DI_FTYPE_V2DI_V2DI_INT)\n+BDESC (OPTION_MASK_ISA_AVX512VBMI2, CODE_FOR_vpshld_v2di_mask, \"__builtin_ia32_vpshld_v2di_mask\", IX86_BUILTIN_VPSHLDV2DI_MASK, UNKNOWN, (int) V2DI_FTYPE_V2DI_V2DI_INT_V2DI_INT)\n+\n+BDESC (OPTION_MASK_ISA_AVX512VBMI2, CODE_FOR_vpshrdv_v32hi, \"__builtin_ia32_vpshrdv_v32hi\", IX86_BUILTIN_VPSHRDVV32HI, UNKNOWN, (int) V32HI_FTYPE_V32HI_V32HI_V32HI)\n+BDESC (OPTION_MASK_ISA_AVX512VBMI2, CODE_FOR_vpshrdv_v32hi_mask, \"__builtin_ia32_vpshrdv_v32hi_mask\", IX86_BUILTIN_VPSHRDVV32HI_MASK, UNKNOWN, (int) V32HI_FTYPE_V32HI_V32HI_V32HI_INT)\n+BDESC (OPTION_MASK_ISA_AVX512VBMI2, CODE_FOR_vpshrdv_v32hi_maskz, \"__builtin_ia32_vpshrdv_v32hi_maskz\", IX86_BUILTIN_VPSHRDVV32HI_MASKZ, UNKNOWN, (int) V32HI_FTYPE_V32HI_V32HI_V32HI_INT)\n+BDESC (OPTION_MASK_ISA_AVX512VBMI2, CODE_FOR_vpshrdv_v16hi, \"__builtin_ia32_vpshrdv_v16hi\", IX86_BUILTIN_VPSHRDVV16HI, UNKNOWN, (int) V16HI_FTYPE_V16HI_V16HI_V16HI)\n+BDESC (OPTION_MASK_ISA_AVX512VBMI2, CODE_FOR_vpshrdv_v16hi_mask, \"__builtin_ia32_vpshrdv_v16hi_mask\", IX86_BUILTIN_VPSHRDVV16HI_MASK, UNKNOWN, (int) V16HI_FTYPE_V16HI_V16HI_V16HI_INT)\n+BDESC (OPTION_MASK_ISA_AVX512VBMI2, CODE_FOR_vpshrdv_v16hi_maskz, \"__builtin_ia32_vpshrdv_v16hi_maskz\", IX86_BUILTIN_VPSHRDVV16HI_MASKZ, UNKNOWN, (int) V16HI_FTYPE_V16HI_V16HI_V16HI_INT)\n+BDESC (OPTION_MASK_ISA_AVX512VBMI2, CODE_FOR_vpshrdv_v8hi, \"__builtin_ia32_vpshrdv_v8hi\", IX86_BUILTIN_VPSHRDVV8HI, UNKNOWN, (int) V8HI_FTYPE_V8HI_V8HI_V8HI)\n+BDESC (OPTION_MASK_ISA_AVX512VBMI2, CODE_FOR_vpshrdv_v8hi_mask, \"__builtin_ia32_vpshrdv_v8hi_mask\", IX86_BUILTIN_VPSHRDVV8HI_MASK, UNKNOWN, (int) V8HI_FTYPE_V8HI_V8HI_V8HI_INT)\n+BDESC (OPTION_MASK_ISA_AVX512VBMI2, CODE_FOR_vpshrdv_v8hi_maskz, \"__builtin_ia32_vpshrdv_v8hi_maskz\", IX86_BUILTIN_VPSHRDVV8HI_MASKZ, UNKNOWN, (int) V8HI_FTYPE_V8HI_V8HI_V8HI_INT)\n+BDESC (OPTION_MASK_ISA_AVX512VBMI2, CODE_FOR_vpshrdv_v16si, \"__builtin_ia32_vpshrdv_v16si\", IX86_BUILTIN_VPSHRDVV16SI, UNKNOWN, (int) V16SI_FTYPE_V16SI_V16SI_V16SI)\n+BDESC (OPTION_MASK_ISA_AVX512VBMI2, CODE_FOR_vpshrdv_v16si_mask, \"__builtin_ia32_vpshrdv_v16si_mask\", IX86_BUILTIN_VPSHRDVV16SI_MASK, UNKNOWN, (int) V16SI_FTYPE_V16SI_V16SI_V16SI_INT)\n+BDESC (OPTION_MASK_ISA_AVX512VBMI2, CODE_FOR_vpshrdv_v16si_maskz, \"__builtin_ia32_vpshrdv_v16si_maskz\", IX86_BUILTIN_VPSHRDVV16SI_MASKZ, UNKNOWN, (int) V16SI_FTYPE_V16SI_V16SI_V16SI_INT)\n+BDESC (OPTION_MASK_ISA_AVX512VBMI2, CODE_FOR_vpshrdv_v8si, \"__builtin_ia32_vpshrdv_v8si\", IX86_BUILTIN_VPSHRDVV8SI, UNKNOWN, (int) V8SI_FTYPE_V8SI_V8SI_V8SI)\n+BDESC (OPTION_MASK_ISA_AVX512VBMI2, CODE_FOR_vpshrdv_v8si_mask, \"__builtin_ia32_vpshrdv_v8si_mask\", IX86_BUILTIN_VPSHRDVV8SI_MASK, UNKNOWN, (int) V8SI_FTYPE_V8SI_V8SI_V8SI_INT)\n+BDESC (OPTION_MASK_ISA_AVX512VBMI2, CODE_FOR_vpshrdv_v8si_maskz, \"__builtin_ia32_vpshrdv_v8si_maskz\", IX86_BUILTIN_VPSHRDVV8SI_MASKZ, UNKNOWN, (int) V8SI_FTYPE_V8SI_V8SI_V8SI_INT)\n+BDESC (OPTION_MASK_ISA_AVX512VBMI2, CODE_FOR_vpshrdv_v4si, \"__builtin_ia32_vpshrdv_v4si\", IX86_BUILTIN_VPSHRDVV4SI, UNKNOWN, (int) V4SI_FTYPE_V4SI_V4SI_V4SI)\n+BDESC (OPTION_MASK_ISA_AVX512VBMI2, CODE_FOR_vpshrdv_v4si_mask, \"__builtin_ia32_vpshrdv_v4si_mask\", IX86_BUILTIN_VPSHRDVV4SI_MASK, UNKNOWN, (int) V4SI_FTYPE_V4SI_V4SI_V4SI_INT)\n+BDESC (OPTION_MASK_ISA_AVX512VBMI2, CODE_FOR_vpshrdv_v4si_maskz, \"__builtin_ia32_vpshrdv_v4si_maskz\", IX86_BUILTIN_VPSHRDVV4SI_MASKZ, UNKNOWN, (int) V4SI_FTYPE_V4SI_V4SI_V4SI_INT)\n+BDESC (OPTION_MASK_ISA_AVX512VBMI2, CODE_FOR_vpshrdv_v8di, \"__builtin_ia32_vpshrdv_v8di\", IX86_BUILTIN_VPSHRDVV8DI, UNKNOWN, (int) V8DI_FTYPE_V8DI_V8DI_V8DI)\n+BDESC (OPTION_MASK_ISA_AVX512VBMI2, CODE_FOR_vpshrdv_v8di_mask, \"__builtin_ia32_vpshrdv_v8di_mask\", IX86_BUILTIN_VPSHRDVV8DI_MASK, UNKNOWN, (int) V8DI_FTYPE_V8DI_V8DI_V8DI_INT)\n+BDESC (OPTION_MASK_ISA_AVX512VBMI2, CODE_FOR_vpshrdv_v8di_maskz, \"__builtin_ia32_vpshrdv_v8di_maskz\", IX86_BUILTIN_VPSHRDVV8DI_MASKZ, UNKNOWN, (int) V8DI_FTYPE_V8DI_V8DI_V8DI_INT)\n+BDESC (OPTION_MASK_ISA_AVX512VBMI2, CODE_FOR_vpshrdv_v4di, \"__builtin_ia32_vpshrdv_v4di\", IX86_BUILTIN_VPSHRDVV4DI, UNKNOWN, (int) V4DI_FTYPE_V4DI_V4DI_V4DI)\n+BDESC (OPTION_MASK_ISA_AVX512VBMI2, CODE_FOR_vpshrdv_v4di_mask, \"__builtin_ia32_vpshrdv_v4di_mask\", IX86_BUILTIN_VPSHRDVV4DI_MASK, UNKNOWN, (int) V4DI_FTYPE_V4DI_V4DI_V4DI_INT)\n+BDESC (OPTION_MASK_ISA_AVX512VBMI2, CODE_FOR_vpshrdv_v4di_maskz, \"__builtin_ia32_vpshrdv_v4di_maskz\", IX86_BUILTIN_VPSHRDVV4DI_MASKZ, UNKNOWN, (int) V4DI_FTYPE_V4DI_V4DI_V4DI_INT)\n+BDESC (OPTION_MASK_ISA_AVX512VBMI2, CODE_FOR_vpshrdv_v2di, \"__builtin_ia32_vpshrdv_v2di\", IX86_BUILTIN_VPSHRDVV2DI, UNKNOWN, (int) V2DI_FTYPE_V2DI_V2DI_V2DI)\n+BDESC (OPTION_MASK_ISA_AVX512VBMI2, CODE_FOR_vpshrdv_v2di_mask, \"__builtin_ia32_vpshrdv_v2di_mask\", IX86_BUILTIN_VPSHRDVV2DI_MASK, UNKNOWN, (int) V2DI_FTYPE_V2DI_V2DI_V2DI_INT)\n+BDESC (OPTION_MASK_ISA_AVX512VBMI2, CODE_FOR_vpshrdv_v2di_maskz, \"__builtin_ia32_vpshrdv_v2di_maskz\", IX86_BUILTIN_VPSHRDVV2DI_MASKZ, UNKNOWN, (int) V2DI_FTYPE_V2DI_V2DI_V2DI_INT)\n+\n+BDESC (OPTION_MASK_ISA_AVX512VBMI2, CODE_FOR_vpshldv_v32hi, \"__builtin_ia32_vpshldv_v32hi\", IX86_BUILTIN_VPSHLDVV32HI, UNKNOWN, (int) V32HI_FTYPE_V32HI_V32HI_V32HI)\n+BDESC (OPTION_MASK_ISA_AVX512VBMI2, CODE_FOR_vpshldv_v32hi_mask, \"__builtin_ia32_vpshldv_v32hi_mask\", IX86_BUILTIN_VPSHLDVV32HI_MASK, UNKNOWN, (int) V32HI_FTYPE_V32HI_V32HI_V32HI_INT)\n+BDESC (OPTION_MASK_ISA_AVX512VBMI2, CODE_FOR_vpshldv_v32hi_maskz, \"__builtin_ia32_vpshldv_v32hi_maskz\", IX86_BUILTIN_VPSHLDVV32HI_MASKZ, UNKNOWN, (int) V32HI_FTYPE_V32HI_V32HI_V32HI_INT)\n+BDESC (OPTION_MASK_ISA_AVX512VBMI2, CODE_FOR_vpshldv_v16hi, \"__builtin_ia32_vpshldv_v16hi\", IX86_BUILTIN_VPSHLDVV16HI, UNKNOWN, (int) V16HI_FTYPE_V16HI_V16HI_V16HI)\n+BDESC (OPTION_MASK_ISA_AVX512VBMI2, CODE_FOR_vpshldv_v16hi_mask, \"__builtin_ia32_vpshldv_v16hi_mask\", IX86_BUILTIN_VPSHLDVV16HI_MASK, UNKNOWN, (int) V16HI_FTYPE_V16HI_V16HI_V16HI_INT)\n+BDESC (OPTION_MASK_ISA_AVX512VBMI2, CODE_FOR_vpshldv_v16hi_maskz, \"__builtin_ia32_vpshldv_v16hi_maskz\", IX86_BUILTIN_VPSHLDVV16HI_MASKZ, UNKNOWN, (int) V16HI_FTYPE_V16HI_V16HI_V16HI_INT)\n+BDESC (OPTION_MASK_ISA_AVX512VBMI2, CODE_FOR_vpshldv_v8hi, \"__builtin_ia32_vpshldv_v8hi\", IX86_BUILTIN_VPSHLDVV8HI, UNKNOWN, (int) V8HI_FTYPE_V8HI_V8HI_V8HI)\n+BDESC (OPTION_MASK_ISA_AVX512VBMI2, CODE_FOR_vpshldv_v8hi_mask, \"__builtin_ia32_vpshldv_v8hi_mask\", IX86_BUILTIN_VPSHLDVV8HI_MASK, UNKNOWN, (int) V8HI_FTYPE_V8HI_V8HI_V8HI_INT)\n+BDESC (OPTION_MASK_ISA_AVX512VBMI2, CODE_FOR_vpshldv_v8hi_maskz, \"__builtin_ia32_vpshldv_v8hi_maskz\", IX86_BUILTIN_VPSHLDVV8HI_MASKZ, UNKNOWN, (int) V8HI_FTYPE_V8HI_V8HI_V8HI_INT)\n+BDESC (OPTION_MASK_ISA_AVX512VBMI2, CODE_FOR_vpshldv_v16si, \"__builtin_ia32_vpshldv_v16si\", IX86_BUILTIN_VPSHLDVV16SI, UNKNOWN, (int) V16SI_FTYPE_V16SI_V16SI_V16SI)\n+BDESC (OPTION_MASK_ISA_AVX512VBMI2, CODE_FOR_vpshldv_v16si_mask, \"__builtin_ia32_vpshldv_v16si_mask\", IX86_BUILTIN_VPSHLDVV16SI_MASK, UNKNOWN, (int) V16SI_FTYPE_V16SI_V16SI_V16SI_INT)\n+BDESC (OPTION_MASK_ISA_AVX512VBMI2, CODE_FOR_vpshldv_v16si_maskz, \"__builtin_ia32_vpshldv_v16si_maskz\", IX86_BUILTIN_VPSHLDVV16SI_MASKZ, UNKNOWN, (int) V16SI_FTYPE_V16SI_V16SI_V16SI_INT)\n+BDESC (OPTION_MASK_ISA_AVX512VBMI2, CODE_FOR_vpshldv_v8si, \"__builtin_ia32_vpshldv_v8si\", IX86_BUILTIN_VPSHLDVV8SI, UNKNOWN, (int) V8SI_FTYPE_V8SI_V8SI_V8SI)\n+BDESC (OPTION_MASK_ISA_AVX512VBMI2, CODE_FOR_vpshldv_v8si_mask, \"__builtin_ia32_vpshldv_v8si_mask\", IX86_BUILTIN_VPSHLDVV8SI_MASK, UNKNOWN, (int) V8SI_FTYPE_V8SI_V8SI_V8SI_INT)\n+BDESC (OPTION_MASK_ISA_AVX512VBMI2, CODE_FOR_vpshldv_v8si_maskz, \"__builtin_ia32_vpshldv_v8si_maskz\", IX86_BUILTIN_VPSHLDVV8SI_MASKZ, UNKNOWN, (int) V8SI_FTYPE_V8SI_V8SI_V8SI_INT)\n+BDESC (OPTION_MASK_ISA_AVX512VBMI2, CODE_FOR_vpshldv_v4si, \"__builtin_ia32_vpshldv_v4si\", IX86_BUILTIN_VPSHLDVV4SI, UNKNOWN, (int) V4SI_FTYPE_V4SI_V4SI_V4SI)\n+BDESC (OPTION_MASK_ISA_AVX512VBMI2, CODE_FOR_vpshldv_v4si_mask, \"__builtin_ia32_vpshldv_v4si_mask\", IX86_BUILTIN_VPSHLDVV4SI_MASK, UNKNOWN, (int) V4SI_FTYPE_V4SI_V4SI_V4SI_INT)\n+BDESC (OPTION_MASK_ISA_AVX512VBMI2, CODE_FOR_vpshldv_v4si_maskz, \"__builtin_ia32_vpshldv_v4si_maskz\", IX86_BUILTIN_VPSHLDVV4SI_MASKZ, UNKNOWN, (int) V4SI_FTYPE_V4SI_V4SI_V4SI_INT)\n+BDESC (OPTION_MASK_ISA_AVX512VBMI2, CODE_FOR_vpshldv_v8di, \"__builtin_ia32_vpshldv_v8di\", IX86_BUILTIN_VPSHLDVV8DI, UNKNOWN, (int) V8DI_FTYPE_V8DI_V8DI_V8DI)\n+BDESC (OPTION_MASK_ISA_AVX512VBMI2, CODE_FOR_vpshldv_v8di_mask, \"__builtin_ia32_vpshldv_v8di_mask\", IX86_BUILTIN_VPSHLDVV8DI_MASK, UNKNOWN, (int) V8DI_FTYPE_V8DI_V8DI_V8DI_INT)\n+BDESC (OPTION_MASK_ISA_AVX512VBMI2, CODE_FOR_vpshldv_v8di_maskz, \"__builtin_ia32_vpshldv_v8di_maskz\", IX86_BUILTIN_VPSHLDVV8DI_MASKZ, UNKNOWN, (int) V8DI_FTYPE_V8DI_V8DI_V8DI_INT)\n+BDESC (OPTION_MASK_ISA_AVX512VBMI2, CODE_FOR_vpshldv_v4di, \"__builtin_ia32_vpshldv_v4di\", IX86_BUILTIN_VPSHLDVV4DI, UNKNOWN, (int) V4DI_FTYPE_V4DI_V4DI_V4DI)\n+BDESC (OPTION_MASK_ISA_AVX512VBMI2, CODE_FOR_vpshldv_v4di_mask, \"__builtin_ia32_vpshldv_v4di_mask\", IX86_BUILTIN_VPSHLDVV4DI_MASK, UNKNOWN, (int) V4DI_FTYPE_V4DI_V4DI_V4DI_INT)\n+BDESC (OPTION_MASK_ISA_AVX512VBMI2, CODE_FOR_vpshldv_v4di_maskz, \"__builtin_ia32_vpshldv_v4di_maskz\", IX86_BUILTIN_VPSHLDVV4DI_MASKZ, UNKNOWN, (int) V4DI_FTYPE_V4DI_V4DI_V4DI_INT)\n+BDESC (OPTION_MASK_ISA_AVX512VBMI2, CODE_FOR_vpshldv_v2di, \"__builtin_ia32_vpshldv_v2di\", IX86_BUILTIN_VPSHLDVV2DI, UNKNOWN, (int) V2DI_FTYPE_V2DI_V2DI_V2DI)\n+BDESC (OPTION_MASK_ISA_AVX512VBMI2, CODE_FOR_vpshldv_v2di_mask, \"__builtin_ia32_vpshldv_v2di_mask\", IX86_BUILTIN_VPSHLDVV2DI_MASK, UNKNOWN, (int) V2DI_FTYPE_V2DI_V2DI_V2DI_INT)\n+BDESC (OPTION_MASK_ISA_AVX512VBMI2, CODE_FOR_vpshldv_v2di_maskz, \"__builtin_ia32_vpshldv_v2di_maskz\", IX86_BUILTIN_VPSHLDVV2DI_MASKZ, UNKNOWN, (int) V2DI_FTYPE_V2DI_V2DI_V2DI_INT)\n+\n /* GFNI */\n BDESC (OPTION_MASK_ISA_GFNI, CODE_FOR_vgf2p8affineinvqb_v64qi, \"__builtin_ia32_vgf2p8affineinvqb_v64qi\", IX86_BUILTIN_VGF2P8AFFINEINVQB512, UNKNOWN, (int) V64QI_FTYPE_V64QI_V64QI_INT)\n BDESC (OPTION_MASK_ISA_GFNI | OPTION_MASK_ISA_AVX512BW, CODE_FOR_vgf2p8affineinvqb_v64qi_mask, \"__builtin_ia32_vgf2p8affineinvqb_v64qi_mask\", IX86_BUILTIN_VGF2P8AFFINEINVQB512MASK, UNKNOWN, (int) V64QI_FTYPE_V64QI_V64QI_INT_V64QI_UDI)\n@@ -2614,118 +2749,6 @@ BDESC (OPTION_MASK_ISA_AVX512VPOPCNTDQ, CODE_FOR_vpopcountv8di_mask, \"__builtin_\n /* RDPID */\n BDESC (OPTION_MASK_ISA_RDPID, CODE_FOR_rdpid, \"__builtin_ia32_rdpid\", IX86_BUILTIN_RDPID, UNKNOWN, (int) UNSIGNED_FTYPE_VOID)\n \n-/* VBMI2 */\n-BDESC (OPTION_MASK_ISA_AVX512VBMI2, CODE_FOR_compressv64qi_mask, \"__builtin_ia32_compressqi512_mask\", IX86_BUILTIN_PCOMPRESSB512, UNKNOWN, (int) V64QI_FTYPE_V64QI_V64QI_UDI)\n-BDESC (OPTION_MASK_ISA_AVX512VBMI2, CODE_FOR_compressv32hi_mask, \"__builtin_ia32_compresshi512_mask\", IX86_BUILTIN_PCOMPRESSW512, UNKNOWN, (int) V32HI_FTYPE_V32HI_V32HI_USI)\n-BDESC (OPTION_MASK_ISA_AVX512VBMI2 | OPTION_MASK_ISA_AVX512VL, CODE_FOR_compressv32qi_mask, \"__builtin_ia32_compressqi256_mask\", IX86_BUILTIN_PCOMPRESSB256, UNKNOWN, (int) V32QI_FTYPE_V32QI_V32QI_USI)\n-BDESC (OPTION_MASK_ISA_AVX512VBMI2 | OPTION_MASK_ISA_AVX512VL, CODE_FOR_compressv16qi_mask, \"__builtin_ia32_compressqi128_mask\", IX86_BUILTIN_PCOMPRESSB128, UNKNOWN, (int) V16QI_FTYPE_V16QI_V16QI_UHI)\n-BDESC (OPTION_MASK_ISA_AVX512VBMI2 | OPTION_MASK_ISA_AVX512VL, CODE_FOR_compressv16hi_mask, \"__builtin_ia32_compresshi256_mask\", IX86_BUILTIN_PCOMPRESSW256, UNKNOWN, (int) V16HI_FTYPE_V16HI_V16HI_UHI)\n-BDESC (OPTION_MASK_ISA_AVX512VBMI2 | OPTION_MASK_ISA_AVX512VL, CODE_FOR_compressv8hi_mask, \"__builtin_ia32_compresshi128_mask\", IX86_BUILTIN_PCOMPRESSW128, UNKNOWN, (int) V8HI_FTYPE_V8HI_V8HI_UQI)\n-BDESC (OPTION_MASK_ISA_AVX512VBMI2, CODE_FOR_expandv64qi_mask, \"__builtin_ia32_expandqi512_mask\", IX86_BUILTIN_PEXPANDB512, UNKNOWN, (int) V64QI_FTYPE_V64QI_V64QI_UDI)\n-BDESC (OPTION_MASK_ISA_AVX512VBMI2, CODE_FOR_expandv64qi_maskz, \"__builtin_ia32_expandqi512_maskz\", IX86_BUILTIN_PEXPANDB512Z, UNKNOWN, (int) V64QI_FTYPE_V64QI_V64QI_UDI)\n-BDESC (OPTION_MASK_ISA_AVX512VBMI2, CODE_FOR_expandv32hi_mask, \"__builtin_ia32_expandhi512_mask\", IX86_BUILTIN_PEXPANDW512, UNKNOWN, (int) V32HI_FTYPE_V32HI_V32HI_USI)\n-BDESC (OPTION_MASK_ISA_AVX512VBMI2, CODE_FOR_expandv32hi_maskz, \"__builtin_ia32_expandhi512_maskz\", IX86_BUILTIN_PEXPANDW512Z, UNKNOWN, (int) V32HI_FTYPE_V32HI_V32HI_USI)\n-BDESC (OPTION_MASK_ISA_AVX512VBMI2 | OPTION_MASK_ISA_AVX512VL, CODE_FOR_expandv32qi_mask, \"__builtin_ia32_expandqi256_mask\", IX86_BUILTIN_PEXPANDB256, UNKNOWN, (int) V32QI_FTYPE_V32QI_V32QI_USI)\n-BDESC (OPTION_MASK_ISA_AVX512VBMI2 | OPTION_MASK_ISA_AVX512VL, CODE_FOR_expandv32qi_maskz, \"__builtin_ia32_expandqi256_maskz\", IX86_BUILTIN_PEXPANDB256Z, UNKNOWN, (int) V32QI_FTYPE_V32QI_V32QI_USI)\n-BDESC (OPTION_MASK_ISA_AVX512VBMI2 | OPTION_MASK_ISA_AVX512VL, CODE_FOR_expandv16qi_mask, \"__builtin_ia32_expandqi128_mask\", IX86_BUILTIN_PEXPANDB128, UNKNOWN, (int) V16QI_FTYPE_V16QI_V16QI_UHI)\n-BDESC (OPTION_MASK_ISA_AVX512VBMI2 | OPTION_MASK_ISA_AVX512VL, CODE_FOR_expandv16qi_maskz, \"__builtin_ia32_expandqi128_maskz\", IX86_BUILTIN_PEXPANDB128Z, UNKNOWN, (int) V16QI_FTYPE_V16QI_V16QI_UHI)\n-BDESC (OPTION_MASK_ISA_AVX512VBMI2 | OPTION_MASK_ISA_AVX512VL, CODE_FOR_expandv16hi_mask, \"__builtin_ia32_expandhi256_mask\", IX86_BUILTIN_PEXPANDW256, UNKNOWN, (int) V16HI_FTYPE_V16HI_V16HI_UHI)\n-BDESC (OPTION_MASK_ISA_AVX512VBMI2 | OPTION_MASK_ISA_AVX512VL, CODE_FOR_expandv16hi_maskz, \"__builtin_ia32_expandhi256_maskz\", IX86_BUILTIN_PEXPANDW256Z, UNKNOWN, (int) V16HI_FTYPE_V16HI_V16HI_UHI)\n-BDESC (OPTION_MASK_ISA_AVX512VBMI2 | OPTION_MASK_ISA_AVX512VL, CODE_FOR_expandv8hi_mask, \"__builtin_ia32_expandhi128_mask\", IX86_BUILTIN_PEXPANDW128, UNKNOWN, (int) V8HI_FTYPE_V8HI_V8HI_UQI)\n-BDESC (OPTION_MASK_ISA_AVX512VBMI2 | OPTION_MASK_ISA_AVX512VL, CODE_FOR_expandv8hi_maskz, \"__builtin_ia32_expandhi128_maskz\", IX86_BUILTIN_PEXPANDW128Z, UNKNOWN, (int) V8HI_FTYPE_V8HI_V8HI_UQI)\n-BDESC (OPTION_MASK_ISA_AVX512VBMI2, CODE_FOR_vpshrd_v32hi, \"__builtin_ia32_vpshrd_v32hi\", IX86_BUILTIN_VPSHRDV32HI, UNKNOWN, (int) V32HI_FTYPE_V32HI_V32HI_INT)\n-BDESC (OPTION_MASK_ISA_AVX512VBMI2, CODE_FOR_vpshrd_v32hi_mask, \"__builtin_ia32_vpshrd_v32hi_mask\", IX86_BUILTIN_VPSHRDV32HI_MASK, UNKNOWN, (int) V32HI_FTYPE_V32HI_V32HI_INT_V32HI_INT)\n-BDESC (OPTION_MASK_ISA_AVX512VBMI2, CODE_FOR_vpshrd_v16hi, \"__builtin_ia32_vpshrd_v16hi\", IX86_BUILTIN_VPSHRDV16HI, UNKNOWN, (int) V16HI_FTYPE_V16HI_V16HI_INT)\n-BDESC (OPTION_MASK_ISA_AVX512VBMI2, CODE_FOR_vpshrd_v16hi_mask, \"__builtin_ia32_vpshrd_v16hi_mask\", IX86_BUILTIN_VPSHRDV16HI_MASK, UNKNOWN, (int) V16HI_FTYPE_V16HI_V16HI_INT_V16HI_INT)\n-BDESC (OPTION_MASK_ISA_AVX512VBMI2, CODE_FOR_vpshrd_v8hi, \"__builtin_ia32_vpshrd_v8hi\", IX86_BUILTIN_VPSHRDV8HI, UNKNOWN, (int) V8HI_FTYPE_V8HI_V8HI_INT)\n-BDESC (OPTION_MASK_ISA_AVX512VBMI2, CODE_FOR_vpshrd_v8hi_mask, \"__builtin_ia32_vpshrd_v8hi_mask\", IX86_BUILTIN_VPSHRDV8HI_MASK, UNKNOWN, (int) V8HI_FTYPE_V8HI_V8HI_INT_V8HI_INT)\n-BDESC (OPTION_MASK_ISA_AVX512VBMI2, CODE_FOR_vpshrd_v16si, \"__builtin_ia32_vpshrd_v16si\", IX86_BUILTIN_VPSHRDV16SI, UNKNOWN, (int) V16SI_FTYPE_V16SI_V16SI_INT)\n-BDESC (OPTION_MASK_ISA_AVX512VBMI2, CODE_FOR_vpshrd_v16si_mask, \"__builtin_ia32_vpshrd_v16si_mask\", IX86_BUILTIN_VPSHRDV16SI_MASK, UNKNOWN, (int) V16SI_FTYPE_V16SI_V16SI_INT_V16SI_INT)\n-BDESC (OPTION_MASK_ISA_AVX512VBMI2, CODE_FOR_vpshrd_v8si, \"__builtin_ia32_vpshrd_v8si\", IX86_BUILTIN_VPSHRDV8SI, UNKNOWN, (int) V8SI_FTYPE_V8SI_V8SI_INT)\n-BDESC (OPTION_MASK_ISA_AVX512VBMI2, CODE_FOR_vpshrd_v8si_mask, \"__builtin_ia32_vpshrd_v8si_mask\", IX86_BUILTIN_VPSHRDV8SI_MASK, UNKNOWN, (int) V8SI_FTYPE_V8SI_V8SI_INT_V8SI_INT)\n-BDESC (OPTION_MASK_ISA_AVX512VBMI2, CODE_FOR_vpshrd_v4si, \"__builtin_ia32_vpshrd_v4si\", IX86_BUILTIN_VPSHRDV4SI, UNKNOWN, (int) V4SI_FTYPE_V4SI_V4SI_INT)\n-BDESC (OPTION_MASK_ISA_AVX512VBMI2, CODE_FOR_vpshrd_v4si_mask, \"__builtin_ia32_vpshrd_v4si_mask\", IX86_BUILTIN_VPSHRDV4SI_MASK, UNKNOWN, (int) V4SI_FTYPE_V4SI_V4SI_INT_V4SI_INT)\n-BDESC (OPTION_MASK_ISA_AVX512VBMI2, CODE_FOR_vpshrd_v8di, \"__builtin_ia32_vpshrd_v8di\", IX86_BUILTIN_VPSHRDV8DI, UNKNOWN, (int) V8DI_FTYPE_V8DI_V8DI_INT)\n-BDESC (OPTION_MASK_ISA_AVX512VBMI2, CODE_FOR_vpshrd_v8di_mask, \"__builtin_ia32_vpshrd_v8di_mask\", IX86_BUILTIN_VPSHRDV8DI_MASK, UNKNOWN, (int) V8DI_FTYPE_V8DI_V8DI_INT_V8DI_INT)\n-BDESC (OPTION_MASK_ISA_AVX512VBMI2, CODE_FOR_vpshrd_v4di, \"__builtin_ia32_vpshrd_v4di\", IX86_BUILTIN_VPSHRDV4DI, UNKNOWN, (int) V4DI_FTYPE_V4DI_V4DI_INT)\n-BDESC (OPTION_MASK_ISA_AVX512VBMI2, CODE_FOR_vpshrd_v4di_mask, \"__builtin_ia32_vpshrd_v4di_mask\", IX86_BUILTIN_VPSHRDV4DI_MASK, UNKNOWN, (int) V4DI_FTYPE_V4DI_V4DI_INT_V4DI_INT)\n-BDESC (OPTION_MASK_ISA_AVX512VBMI2, CODE_FOR_vpshrd_v2di, \"__builtin_ia32_vpshrd_v2di\", IX86_BUILTIN_VPSHRDV2DI, UNKNOWN, (int) V2DI_FTYPE_V2DI_V2DI_INT)\n-BDESC (OPTION_MASK_ISA_AVX512VBMI2, CODE_FOR_vpshrd_v2di_mask, \"__builtin_ia32_vpshrd_v2di_mask\", IX86_BUILTIN_VPSHRDV2DI_MASK, UNKNOWN, (int) V2DI_FTYPE_V2DI_V2DI_INT_V2DI_INT)\n-BDESC (OPTION_MASK_ISA_AVX512VBMI2, CODE_FOR_vpshld_v32hi, \"__builtin_ia32_vpshld_v32hi\", IX86_BUILTIN_VPSHLDV32HI, UNKNOWN, (int) V32HI_FTYPE_V32HI_V32HI_INT)\n-BDESC (OPTION_MASK_ISA_AVX512VBMI2, CODE_FOR_vpshld_v32hi_mask, \"__builtin_ia32_vpshld_v32hi_mask\", IX86_BUILTIN_VPSHLDV32HI_MASK, UNKNOWN, (int) V32HI_FTYPE_V32HI_V32HI_INT_V32HI_INT)\n-BDESC (OPTION_MASK_ISA_AVX512VBMI2, CODE_FOR_vpshld_v16hi, \"__builtin_ia32_vpshld_v16hi\", IX86_BUILTIN_VPSHLDV16HI, UNKNOWN, (int) V16HI_FTYPE_V16HI_V16HI_INT)\n-BDESC (OPTION_MASK_ISA_AVX512VBMI2, CODE_FOR_vpshld_v16hi_mask, \"__builtin_ia32_vpshld_v16hi_mask\", IX86_BUILTIN_VPSHLDV16HI_MASK, UNKNOWN, (int) V16HI_FTYPE_V16HI_V16HI_INT_V16HI_INT)\n-BDESC (OPTION_MASK_ISA_AVX512VBMI2, CODE_FOR_vpshld_v8hi, \"__builtin_ia32_vpshld_v8hi\", IX86_BUILTIN_VPSHLDV8HI, UNKNOWN, (int) V8HI_FTYPE_V8HI_V8HI_INT)\n-BDESC (OPTION_MASK_ISA_AVX512VBMI2, CODE_FOR_vpshld_v8hi_mask, \"__builtin_ia32_vpshld_v8hi_mask\", IX86_BUILTIN_VPSHLDV8HI_MASK, UNKNOWN, (int) V8HI_FTYPE_V8HI_V8HI_INT_V8HI_INT)\n-BDESC (OPTION_MASK_ISA_AVX512VBMI2, CODE_FOR_vpshld_v16si, \"__builtin_ia32_vpshld_v16si\", IX86_BUILTIN_VPSHLDV16SI, UNKNOWN, (int) V16SI_FTYPE_V16SI_V16SI_INT)\n-BDESC (OPTION_MASK_ISA_AVX512VBMI2, CODE_FOR_vpshld_v16si_mask, \"__builtin_ia32_vpshld_v16si_mask\", IX86_BUILTIN_VPSHLDV16SI_MASK, UNKNOWN, (int) V16SI_FTYPE_V16SI_V16SI_INT_V16SI_INT)\n-BDESC (OPTION_MASK_ISA_AVX512VBMI2, CODE_FOR_vpshld_v8si, \"__builtin_ia32_vpshld_v8si\", IX86_BUILTIN_VPSHLDV8SI, UNKNOWN, (int) V8SI_FTYPE_V8SI_V8SI_INT)\n-BDESC (OPTION_MASK_ISA_AVX512VBMI2, CODE_FOR_vpshld_v8si_mask, \"__builtin_ia32_vpshld_v8si_mask\", IX86_BUILTIN_VPSHLDV8SI_MASK, UNKNOWN, (int) V8SI_FTYPE_V8SI_V8SI_INT_V8SI_INT)\n-BDESC (OPTION_MASK_ISA_AVX512VBMI2, CODE_FOR_vpshld_v4si, \"__builtin_ia32_vpshld_v4si\", IX86_BUILTIN_VPSHLDV4SI, UNKNOWN, (int) V4SI_FTYPE_V4SI_V4SI_INT)\n-BDESC (OPTION_MASK_ISA_AVX512VBMI2, CODE_FOR_vpshld_v4si_mask, \"__builtin_ia32_vpshld_v4si_mask\", IX86_BUILTIN_VPSHLDV4SI_MASK, UNKNOWN, (int) V4SI_FTYPE_V4SI_V4SI_INT_V4SI_INT)\n-BDESC (OPTION_MASK_ISA_AVX512VBMI2, CODE_FOR_vpshld_v8di, \"__builtin_ia32_vpshld_v8di\", IX86_BUILTIN_VPSHLDV8DI, UNKNOWN, (int) V8DI_FTYPE_V8DI_V8DI_INT)\n-BDESC (OPTION_MASK_ISA_AVX512VBMI2, CODE_FOR_vpshld_v8di_mask, \"__builtin_ia32_vpshld_v8di_mask\", IX86_BUILTIN_VPSHLDV8DI_MASK, UNKNOWN, (int) V8DI_FTYPE_V8DI_V8DI_INT_V8DI_INT)\n-BDESC (OPTION_MASK_ISA_AVX512VBMI2, CODE_FOR_vpshld_v4di, \"__builtin_ia32_vpshld_v4di\", IX86_BUILTIN_VPSHLDV4DI, UNKNOWN, (int) V4DI_FTYPE_V4DI_V4DI_INT)\n-BDESC (OPTION_MASK_ISA_AVX512VBMI2, CODE_FOR_vpshld_v4di_mask, \"__builtin_ia32_vpshld_v4di_mask\", IX86_BUILTIN_VPSHLDV4DI_MASK, UNKNOWN, (int) V4DI_FTYPE_V4DI_V4DI_INT_V4DI_INT)\n-BDESC (OPTION_MASK_ISA_AVX512VBMI2, CODE_FOR_vpshld_v2di, \"__builtin_ia32_vpshld_v2di\", IX86_BUILTIN_VPSHLDV2DI, UNKNOWN, (int) V2DI_FTYPE_V2DI_V2DI_INT)\n-BDESC (OPTION_MASK_ISA_AVX512VBMI2, CODE_FOR_vpshld_v2di_mask, \"__builtin_ia32_vpshld_v2di_mask\", IX86_BUILTIN_VPSHLDV2DI_MASK, UNKNOWN, (int) V2DI_FTYPE_V2DI_V2DI_INT_V2DI_INT)\n-\n-BDESC (OPTION_MASK_ISA_AVX512VBMI2, CODE_FOR_vpshrdv_v32hi, \"__builtin_ia32_vpshrdv_v32hi\", IX86_BUILTIN_VPSHRDVV32HI, UNKNOWN, (int) V32HI_FTYPE_V32HI_V32HI_V32HI)\n-BDESC (OPTION_MASK_ISA_AVX512VBMI2, CODE_FOR_vpshrdv_v32hi_mask, \"__builtin_ia32_vpshrdv_v32hi_mask\", IX86_BUILTIN_VPSHRDVV32HI_MASK, UNKNOWN, (int) V32HI_FTYPE_V32HI_V32HI_V32HI_INT)\n-BDESC (OPTION_MASK_ISA_AVX512VBMI2, CODE_FOR_vpshrdv_v32hi_maskz, \"__builtin_ia32_vpshrdv_v32hi_maskz\", IX86_BUILTIN_VPSHRDVV32HI_MASKZ, UNKNOWN, (int) V32HI_FTYPE_V32HI_V32HI_V32HI_INT)\n-BDESC (OPTION_MASK_ISA_AVX512VBMI2, CODE_FOR_vpshrdv_v16hi, \"__builtin_ia32_vpshrdv_v16hi\", IX86_BUILTIN_VPSHRDVV16HI, UNKNOWN, (int) V16HI_FTYPE_V16HI_V16HI_V16HI)\n-BDESC (OPTION_MASK_ISA_AVX512VBMI2, CODE_FOR_vpshrdv_v16hi_mask, \"__builtin_ia32_vpshrdv_v16hi_mask\", IX86_BUILTIN_VPSHRDVV16HI_MASK, UNKNOWN, (int) V16HI_FTYPE_V16HI_V16HI_V16HI_INT)\n-BDESC (OPTION_MASK_ISA_AVX512VBMI2, CODE_FOR_vpshrdv_v16hi_maskz, \"__builtin_ia32_vpshrdv_v16hi_maskz\", IX86_BUILTIN_VPSHRDVV16HI_MASKZ, UNKNOWN, (int) V16HI_FTYPE_V16HI_V16HI_V16HI_INT)\n-BDESC (OPTION_MASK_ISA_AVX512VBMI2, CODE_FOR_vpshrdv_v8hi, \"__builtin_ia32_vpshrdv_v8hi\", IX86_BUILTIN_VPSHRDVV8HI, UNKNOWN, (int) V8HI_FTYPE_V8HI_V8HI_V8HI)\n-BDESC (OPTION_MASK_ISA_AVX512VBMI2, CODE_FOR_vpshrdv_v8hi_mask, \"__builtin_ia32_vpshrdv_v8hi_mask\", IX86_BUILTIN_VPSHRDVV8HI_MASK, UNKNOWN, (int) V8HI_FTYPE_V8HI_V8HI_V8HI_INT)\n-BDESC (OPTION_MASK_ISA_AVX512VBMI2, CODE_FOR_vpshrdv_v8hi_maskz, \"__builtin_ia32_vpshrdv_v8hi_maskz\", IX86_BUILTIN_VPSHRDVV8HI_MASKZ, UNKNOWN, (int) V8HI_FTYPE_V8HI_V8HI_V8HI_INT)\n-BDESC (OPTION_MASK_ISA_AVX512VBMI2, CODE_FOR_vpshrdv_v16si, \"__builtin_ia32_vpshrdv_v16si\", IX86_BUILTIN_VPSHRDVV16SI, UNKNOWN, (int) V16SI_FTYPE_V16SI_V16SI_V16SI)\n-BDESC (OPTION_MASK_ISA_AVX512VBMI2, CODE_FOR_vpshrdv_v16si_mask, \"__builtin_ia32_vpshrdv_v16si_mask\", IX86_BUILTIN_VPSHRDVV16SI_MASK, UNKNOWN, (int) V16SI_FTYPE_V16SI_V16SI_V16SI_INT)\n-BDESC (OPTION_MASK_ISA_AVX512VBMI2, CODE_FOR_vpshrdv_v16si_maskz, \"__builtin_ia32_vpshrdv_v16si_maskz\", IX86_BUILTIN_VPSHRDVV16SI_MASKZ, UNKNOWN, (int) V16SI_FTYPE_V16SI_V16SI_V16SI_INT)\n-BDESC (OPTION_MASK_ISA_AVX512VBMI2, CODE_FOR_vpshrdv_v8si, \"__builtin_ia32_vpshrdv_v8si\", IX86_BUILTIN_VPSHRDVV8SI, UNKNOWN, (int) V8SI_FTYPE_V8SI_V8SI_V8SI)\n-BDESC (OPTION_MASK_ISA_AVX512VBMI2, CODE_FOR_vpshrdv_v8si_mask, \"__builtin_ia32_vpshrdv_v8si_mask\", IX86_BUILTIN_VPSHRDVV8SI_MASK, UNKNOWN, (int) V8SI_FTYPE_V8SI_V8SI_V8SI_INT)\n-BDESC (OPTION_MASK_ISA_AVX512VBMI2, CODE_FOR_vpshrdv_v8si_maskz, \"__builtin_ia32_vpshrdv_v8si_maskz\", IX86_BUILTIN_VPSHRDVV8SI_MASKZ, UNKNOWN, (int) V8SI_FTYPE_V8SI_V8SI_V8SI_INT)\n-BDESC (OPTION_MASK_ISA_AVX512VBMI2, CODE_FOR_vpshrdv_v4si, \"__builtin_ia32_vpshrdv_v4si\", IX86_BUILTIN_VPSHRDVV4SI, UNKNOWN, (int) V4SI_FTYPE_V4SI_V4SI_V4SI)\n-BDESC (OPTION_MASK_ISA_AVX512VBMI2, CODE_FOR_vpshrdv_v4si_mask, \"__builtin_ia32_vpshrdv_v4si_mask\", IX86_BUILTIN_VPSHRDVV4SI_MASK, UNKNOWN, (int) V4SI_FTYPE_V4SI_V4SI_V4SI_INT)\n-BDESC (OPTION_MASK_ISA_AVX512VBMI2, CODE_FOR_vpshrdv_v4si_maskz, \"__builtin_ia32_vpshrdv_v4si_maskz\", IX86_BUILTIN_VPSHRDVV4SI_MASKZ, UNKNOWN, (int) V4SI_FTYPE_V4SI_V4SI_V4SI_INT)\n-BDESC (OPTION_MASK_ISA_AVX512VBMI2, CODE_FOR_vpshrdv_v8di, \"__builtin_ia32_vpshrdv_v8di\", IX86_BUILTIN_VPSHRDVV8DI, UNKNOWN, (int) V8DI_FTYPE_V8DI_V8DI_V8DI)\n-BDESC (OPTION_MASK_ISA_AVX512VBMI2, CODE_FOR_vpshrdv_v8di_mask, \"__builtin_ia32_vpshrdv_v8di_mask\", IX86_BUILTIN_VPSHRDVV8DI_MASK, UNKNOWN, (int) V8DI_FTYPE_V8DI_V8DI_V8DI_INT)\n-BDESC (OPTION_MASK_ISA_AVX512VBMI2, CODE_FOR_vpshrdv_v8di_maskz, \"__builtin_ia32_vpshrdv_v8di_maskz\", IX86_BUILTIN_VPSHRDVV8DI_MASKZ, UNKNOWN, (int) V8DI_FTYPE_V8DI_V8DI_V8DI_INT)\n-BDESC (OPTION_MASK_ISA_AVX512VBMI2, CODE_FOR_vpshrdv_v4di, \"__builtin_ia32_vpshrdv_v4di\", IX86_BUILTIN_VPSHRDVV4DI, UNKNOWN, (int) V4DI_FTYPE_V4DI_V4DI_V4DI)\n-BDESC (OPTION_MASK_ISA_AVX512VBMI2, CODE_FOR_vpshrdv_v4di_mask, \"__builtin_ia32_vpshrdv_v4di_mask\", IX86_BUILTIN_VPSHRDVV4DI_MASK, UNKNOWN, (int) V4DI_FTYPE_V4DI_V4DI_V4DI_INT)\n-BDESC (OPTION_MASK_ISA_AVX512VBMI2, CODE_FOR_vpshrdv_v4di_maskz, \"__builtin_ia32_vpshrdv_v4di_maskz\", IX86_BUILTIN_VPSHRDVV4DI_MASKZ, UNKNOWN, (int) V4DI_FTYPE_V4DI_V4DI_V4DI_INT)\n-BDESC (OPTION_MASK_ISA_AVX512VBMI2, CODE_FOR_vpshrdv_v2di, \"__builtin_ia32_vpshrdv_v2di\", IX86_BUILTIN_VPSHRDVV2DI, UNKNOWN, (int) V2DI_FTYPE_V2DI_V2DI_V2DI)\n-BDESC (OPTION_MASK_ISA_AVX512VBMI2, CODE_FOR_vpshrdv_v2di_mask, \"__builtin_ia32_vpshrdv_v2di_mask\", IX86_BUILTIN_VPSHRDVV2DI_MASK, UNKNOWN, (int) V2DI_FTYPE_V2DI_V2DI_V2DI_INT)\n-BDESC (OPTION_MASK_ISA_AVX512VBMI2, CODE_FOR_vpshrdv_v2di_maskz, \"__builtin_ia32_vpshrdv_v2di_maskz\", IX86_BUILTIN_VPSHRDVV2DI_MASKZ, UNKNOWN, (int) V2DI_FTYPE_V2DI_V2DI_V2DI_INT)\n-\n-BDESC (OPTION_MASK_ISA_AVX512VBMI2, CODE_FOR_vpshldv_v32hi, \"__builtin_ia32_vpshldv_v32hi\", IX86_BUILTIN_VPSHLDVV32HI, UNKNOWN, (int) V32HI_FTYPE_V32HI_V32HI_V32HI)\n-BDESC (OPTION_MASK_ISA_AVX512VBMI2, CODE_FOR_vpshldv_v32hi_mask, \"__builtin_ia32_vpshldv_v32hi_mask\", IX86_BUILTIN_VPSHLDVV32HI_MASK, UNKNOWN, (int) V32HI_FTYPE_V32HI_V32HI_V32HI_INT)\n-BDESC (OPTION_MASK_ISA_AVX512VBMI2, CODE_FOR_vpshldv_v32hi_maskz, \"__builtin_ia32_vpshldv_v32hi_maskz\", IX86_BUILTIN_VPSHLDVV32HI_MASKZ, UNKNOWN, (int) V32HI_FTYPE_V32HI_V32HI_V32HI_INT)\n-BDESC (OPTION_MASK_ISA_AVX512VBMI2, CODE_FOR_vpshldv_v16hi, \"__builtin_ia32_vpshldv_v16hi\", IX86_BUILTIN_VPSHLDVV16HI, UNKNOWN, (int) V16HI_FTYPE_V16HI_V16HI_V16HI)\n-BDESC (OPTION_MASK_ISA_AVX512VBMI2, CODE_FOR_vpshldv_v16hi_mask, \"__builtin_ia32_vpshldv_v16hi_mask\", IX86_BUILTIN_VPSHLDVV16HI_MASK, UNKNOWN, (int) V16HI_FTYPE_V16HI_V16HI_V16HI_INT)\n-BDESC (OPTION_MASK_ISA_AVX512VBMI2, CODE_FOR_vpshldv_v16hi_maskz, \"__builtin_ia32_vpshldv_v16hi_maskz\", IX86_BUILTIN_VPSHLDVV16HI_MASKZ, UNKNOWN, (int) V16HI_FTYPE_V16HI_V16HI_V16HI_INT)\n-BDESC (OPTION_MASK_ISA_AVX512VBMI2, CODE_FOR_vpshldv_v8hi, \"__builtin_ia32_vpshldv_v8hi\", IX86_BUILTIN_VPSHLDVV8HI, UNKNOWN, (int) V8HI_FTYPE_V8HI_V8HI_V8HI)\n-BDESC (OPTION_MASK_ISA_AVX512VBMI2, CODE_FOR_vpshldv_v8hi_mask, \"__builtin_ia32_vpshldv_v8hi_mask\", IX86_BUILTIN_VPSHLDVV8HI_MASK, UNKNOWN, (int) V8HI_FTYPE_V8HI_V8HI_V8HI_INT)\n-BDESC (OPTION_MASK_ISA_AVX512VBMI2, CODE_FOR_vpshldv_v8hi_maskz, \"__builtin_ia32_vpshldv_v8hi_maskz\", IX86_BUILTIN_VPSHLDVV8HI_MASKZ, UNKNOWN, (int) V8HI_FTYPE_V8HI_V8HI_V8HI_INT)\n-BDESC (OPTION_MASK_ISA_AVX512VBMI2, CODE_FOR_vpshldv_v16si, \"__builtin_ia32_vpshldv_v16si\", IX86_BUILTIN_VPSHLDVV16SI, UNKNOWN, (int) V16SI_FTYPE_V16SI_V16SI_V16SI)\n-BDESC (OPTION_MASK_ISA_AVX512VBMI2, CODE_FOR_vpshldv_v16si_mask, \"__builtin_ia32_vpshldv_v16si_mask\", IX86_BUILTIN_VPSHLDVV16SI_MASK, UNKNOWN, (int) V16SI_FTYPE_V16SI_V16SI_V16SI_INT)\n-BDESC (OPTION_MASK_ISA_AVX512VBMI2, CODE_FOR_vpshldv_v16si_maskz, \"__builtin_ia32_vpshldv_v16si_maskz\", IX86_BUILTIN_VPSHLDVV16SI_MASKZ, UNKNOWN, (int) V16SI_FTYPE_V16SI_V16SI_V16SI_INT)\n-BDESC (OPTION_MASK_ISA_AVX512VBMI2, CODE_FOR_vpshldv_v8si, \"__builtin_ia32_vpshldv_v8si\", IX86_BUILTIN_VPSHLDVV8SI, UNKNOWN, (int) V8SI_FTYPE_V8SI_V8SI_V8SI)\n-BDESC (OPTION_MASK_ISA_AVX512VBMI2, CODE_FOR_vpshldv_v8si_mask, \"__builtin_ia32_vpshldv_v8si_mask\", IX86_BUILTIN_VPSHLDVV8SI_MASK, UNKNOWN, (int) V8SI_FTYPE_V8SI_V8SI_V8SI_INT)\n-BDESC (OPTION_MASK_ISA_AVX512VBMI2, CODE_FOR_vpshldv_v8si_maskz, \"__builtin_ia32_vpshldv_v8si_maskz\", IX86_BUILTIN_VPSHLDVV8SI_MASKZ, UNKNOWN, (int) V8SI_FTYPE_V8SI_V8SI_V8SI_INT)\n-BDESC (OPTION_MASK_ISA_AVX512VBMI2, CODE_FOR_vpshldv_v4si, \"__builtin_ia32_vpshldv_v4si\", IX86_BUILTIN_VPSHLDVV4SI, UNKNOWN, (int) V4SI_FTYPE_V4SI_V4SI_V4SI)\n-BDESC (OPTION_MASK_ISA_AVX512VBMI2, CODE_FOR_vpshldv_v4si_mask, \"__builtin_ia32_vpshldv_v4si_mask\", IX86_BUILTIN_VPSHLDVV4SI_MASK, UNKNOWN, (int) V4SI_FTYPE_V4SI_V4SI_V4SI_INT)\n-BDESC (OPTION_MASK_ISA_AVX512VBMI2, CODE_FOR_vpshldv_v4si_maskz, \"__builtin_ia32_vpshldv_v4si_maskz\", IX86_BUILTIN_VPSHLDVV4SI_MASKZ, UNKNOWN, (int) V4SI_FTYPE_V4SI_V4SI_V4SI_INT)\n-BDESC (OPTION_MASK_ISA_AVX512VBMI2, CODE_FOR_vpshldv_v8di, \"__builtin_ia32_vpshldv_v8di\", IX86_BUILTIN_VPSHLDVV8DI, UNKNOWN, (int) V8DI_FTYPE_V8DI_V8DI_V8DI)\n-BDESC (OPTION_MASK_ISA_AVX512VBMI2, CODE_FOR_vpshldv_v8di_mask, \"__builtin_ia32_vpshldv_v8di_mask\", IX86_BUILTIN_VPSHLDVV8DI_MASK, UNKNOWN, (int) V8DI_FTYPE_V8DI_V8DI_V8DI_INT)\n-BDESC (OPTION_MASK_ISA_AVX512VBMI2, CODE_FOR_vpshldv_v8di_maskz, \"__builtin_ia32_vpshldv_v8di_maskz\", IX86_BUILTIN_VPSHLDVV8DI_MASKZ, UNKNOWN, (int) V8DI_FTYPE_V8DI_V8DI_V8DI_INT)\n-BDESC (OPTION_MASK_ISA_AVX512VBMI2, CODE_FOR_vpshldv_v4di, \"__builtin_ia32_vpshldv_v4di\", IX86_BUILTIN_VPSHLDVV4DI, UNKNOWN, (int) V4DI_FTYPE_V4DI_V4DI_V4DI)\n-BDESC (OPTION_MASK_ISA_AVX512VBMI2, CODE_FOR_vpshldv_v4di_mask, \"__builtin_ia32_vpshldv_v4di_mask\", IX86_BUILTIN_VPSHLDVV4DI_MASK, UNKNOWN, (int) V4DI_FTYPE_V4DI_V4DI_V4DI_INT)\n-BDESC (OPTION_MASK_ISA_AVX512VBMI2, CODE_FOR_vpshldv_v4di_maskz, \"__builtin_ia32_vpshldv_v4di_maskz\", IX86_BUILTIN_VPSHLDVV4DI_MASKZ, UNKNOWN, (int) V4DI_FTYPE_V4DI_V4DI_V4DI_INT)\n-BDESC (OPTION_MASK_ISA_AVX512VBMI2, CODE_FOR_vpshldv_v2di, \"__builtin_ia32_vpshldv_v2di\", IX86_BUILTIN_VPSHLDVV2DI, UNKNOWN, (int) V2DI_FTYPE_V2DI_V2DI_V2DI)\n-BDESC (OPTION_MASK_ISA_AVX512VBMI2, CODE_FOR_vpshldv_v2di_mask, \"__builtin_ia32_vpshldv_v2di_mask\", IX86_BUILTIN_VPSHLDVV2DI_MASK, UNKNOWN, (int) V2DI_FTYPE_V2DI_V2DI_V2DI_INT)\n-BDESC (OPTION_MASK_ISA_AVX512VBMI2, CODE_FOR_vpshldv_v2di_maskz, \"__builtin_ia32_vpshldv_v2di_maskz\", IX86_BUILTIN_VPSHLDVV2DI_MASKZ, UNKNOWN, (int) V2DI_FTYPE_V2DI_V2DI_V2DI_INT)\n-\n /* VNNI */\n \n BDESC (OPTION_MASK_ISA_AVX512VNNI, CODE_FOR_vpdpbusd_v16si, \"__builtin_ia32_vpdpbusd_v16si\", IX86_BUILTIN_VPDPBUSDV16SI, UNKNOWN, (int) V16SI_FTYPE_V16SI_V16SI_V16SI)\n@@ -2782,30 +2805,7 @@ BDESC (OPTION_MASK_ISA_VAES, CODE_FOR_vaesenclast_v16qi, \"__builtin_ia32_vaesenc\n BDESC (OPTION_MASK_ISA_VAES, CODE_FOR_vaesenclast_v32qi, \"__builtin_ia32_vaesenclast_v32qi\", IX86_BUILTIN_VAESENCLAST32, UNKNOWN, (int) V32QI_FTYPE_V32QI_V32QI)\n BDESC (OPTION_MASK_ISA_VAES, CODE_FOR_vaesenclast_v64qi, \"__builtin_ia32_vaesenclast_v64qi\", IX86_BUILTIN_VAESENCLAST64, UNKNOWN, (int) V64QI_FTYPE_V64QI_V64QI)\n \n-BDESC_END (ARGS2, SPECIAL_ARGS2)\n-\n-BDESC_FIRST (special_args2, SPECIAL_ARGS2, OPTION_MASK_ISA_AVX512VBMI2, CODE_FOR_compressstorev64qi_mask, \"__builtin_ia32_compressstoreuqi512_mask\", IX86_BUILTIN_PCOMPRESSBSTORE512, UNKNOWN, (int) VOID_FTYPE_PV64QI_V64QI_UDI)\n-BDESC (OPTION_MASK_ISA_AVX512VBMI2, CODE_FOR_compressstorev32hi_mask, \"__builtin_ia32_compressstoreuhi512_mask\", IX86_BUILTIN_PCOMPRESSWSTORE512, UNKNOWN, (int) VOID_FTYPE_PV32HI_V32HI_USI)\n-BDESC (OPTION_MASK_ISA_AVX512VBMI2 | OPTION_MASK_ISA_AVX512VL, CODE_FOR_compressstorev32qi_mask, \"__builtin_ia32_compressstoreuqi256_mask\", IX86_BUILTIN_PCOMPRESSBSTORE256, UNKNOWN, (int) VOID_FTYPE_PV32QI_V32QI_USI)\n-BDESC (OPTION_MASK_ISA_AVX512VBMI2 | OPTION_MASK_ISA_AVX512VL, CODE_FOR_compressstorev16qi_mask, \"__builtin_ia32_compressstoreuqi128_mask\", IX86_BUILTIN_PCOMPRESSBSTORE128, UNKNOWN, (int) VOID_FTYPE_PV16QI_V16QI_UHI)\n-BDESC (OPTION_MASK_ISA_AVX512VBMI2 | OPTION_MASK_ISA_AVX512VL, CODE_FOR_compressstorev16hi_mask, \"__builtin_ia32_compressstoreuhi256_mask\", IX86_BUILTIN_PCOMPRESSWSTORE256, UNKNOWN, (int) VOID_FTYPE_PV16HI_V16HI_UHI)\n-BDESC (OPTION_MASK_ISA_AVX512VBMI2 | OPTION_MASK_ISA_AVX512VL, CODE_FOR_compressstorev8hi_mask, \"__builtin_ia32_compressstoreuhi128_mask\", IX86_BUILTIN_PCOMPRESSWSTORE128, UNKNOWN, (int) VOID_FTYPE_PV8HI_V8HI_UQI)\n-\n-BDESC (OPTION_MASK_ISA_AVX512VBMI2, CODE_FOR_expandv64qi_mask, \"__builtin_ia32_expandloadqi512_mask\", IX86_BUILTIN_PEXPANDBLOAD512, UNKNOWN, (int) V64QI_FTYPE_PCV64QI_V64QI_UDI)\n-BDESC (OPTION_MASK_ISA_AVX512VBMI2, CODE_FOR_expandv64qi_maskz, \"__builtin_ia32_expandloadqi512_maskz\", IX86_BUILTIN_PEXPANDBLOAD512Z, UNKNOWN, (int) V64QI_FTYPE_PCV64QI_V64QI_UDI)\n-BDESC (OPTION_MASK_ISA_AVX512VBMI2, CODE_FOR_expandv32hi_mask, \"__builtin_ia32_expandloadhi512_mask\", IX86_BUILTIN_PEXPANDWLOAD512, UNKNOWN, (int) V32HI_FTYPE_PCV32HI_V32HI_USI)\n-BDESC (OPTION_MASK_ISA_AVX512VBMI2, CODE_FOR_expandv32hi_maskz, \"__builtin_ia32_expandloadhi512_maskz\", IX86_BUILTIN_PEXPANDWLOAD512Z, UNKNOWN, (int) V32HI_FTYPE_PCV32HI_V32HI_USI)\n-\n-BDESC (OPTION_MASK_ISA_AVX512VBMI2, CODE_FOR_expandv32qi_mask, \"__builtin_ia32_expandloadqi256_mask\", IX86_BUILTIN_PEXPANDBLOAD256, UNKNOWN, (int) V32QI_FTYPE_PCV32QI_V32QI_USI)\n-BDESC (OPTION_MASK_ISA_AVX512VBMI2, CODE_FOR_expandv32qi_maskz, \"__builtin_ia32_expandloadqi256_maskz\", IX86_BUILTIN_PEXPANDBLOAD256Z, UNKNOWN, (int) V32QI_FTYPE_PCV32QI_V32QI_USI)\n-BDESC (OPTION_MASK_ISA_AVX512VBMI2, CODE_FOR_expandv16hi_mask, \"__builtin_ia32_expandloadhi256_mask\", IX86_BUILTIN_PEXPANDWLOAD256, UNKNOWN, (int) V16HI_FTYPE_PCV16HI_V16HI_UHI)\n-BDESC (OPTION_MASK_ISA_AVX512VBMI2, CODE_FOR_expandv16hi_maskz, \"__builtin_ia32_expandloadhi256_maskz\", IX86_BUILTIN_PEXPANDWLOAD256Z, UNKNOWN, (int) V16HI_FTYPE_PCV16HI_V16HI_UHI)\n-\n-BDESC (OPTION_MASK_ISA_AVX512VBMI2, CODE_FOR_expandv16qi_mask, \"__builtin_ia32_expandloadqi128_mask\", IX86_BUILTIN_PEXPANDBLOAD128, UNKNOWN, (int) V16QI_FTYPE_PCV16QI_V16QI_UHI)\n-BDESC (OPTION_MASK_ISA_AVX512VBMI2, CODE_FOR_expandv16qi_maskz, \"__builtin_ia32_expandloadqi128_maskz\", IX86_BUILTIN_PEXPANDBLOAD128Z, UNKNOWN, (int) V16QI_FTYPE_PCV16QI_V16QI_UHI)\n-BDESC (OPTION_MASK_ISA_AVX512VBMI2, CODE_FOR_expandv8hi_mask, \"__builtin_ia32_expandloadhi128_mask\", IX86_BUILTIN_PEXPANDWLOAD128, UNKNOWN, (int) V8HI_FTYPE_PCV8HI_V8HI_UQI)\n-BDESC (OPTION_MASK_ISA_AVX512VBMI2, CODE_FOR_expandv8hi_maskz, \"__builtin_ia32_expandloadhi128_maskz\", IX86_BUILTIN_PEXPANDWLOAD128Z, UNKNOWN, (int) V8HI_FTYPE_PCV8HI_V8HI_UQI)\n-BDESC_END (SPECIAL_ARGS2, MPX)\n+BDESC_END (ARGS2, MPX)\n \n /* Builtins for MPX.  */\n BDESC_FIRST (mpx, MPX,"}, {"sha": "26472f2e4ccc0ddd8f4ff07fa1077e545e90a063", "filename": "gcc/config/i386/i386-c.c", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b1ccd09a7786c047a02f6eae42d431483be6a0ea/gcc%2Fconfig%2Fi386%2Fi386-c.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b1ccd09a7786c047a02f6eae42d431483be6a0ea/gcc%2Fconfig%2Fi386%2Fi386-c.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386-c.c?ref=b1ccd09a7786c047a02f6eae42d431483be6a0ea", "patch": "@@ -394,7 +394,7 @@ ix86_target_macros_internal (HOST_WIDE_INT isa_flag,\n     def_or_undef (parse_in, \"__AVX512IFMA__\");\n   if (isa_flag2 & OPTION_MASK_ISA_AVX5124VNNIW)\n     def_or_undef (parse_in, \"__AVX5124VNNIW__\");\n-  if (isa_flag2 & OPTION_MASK_ISA_AVX512VBMI2)\n+  if (isa_flag & OPTION_MASK_ISA_AVX512VBMI2)\n     def_or_undef (parse_in, \"__AVX512VBMI2__\");\n   if (isa_flag2 & OPTION_MASK_ISA_AVX512VNNI)\n     def_or_undef (parse_in, \"__AVX512VNNI__\");\n@@ -454,7 +454,7 @@ ix86_target_macros_internal (HOST_WIDE_INT isa_flag,\n     def_or_undef (parse_in, \"__SSE2_MATH__\");\n   if (isa_flag & OPTION_MASK_ISA_CLFLUSHOPT)\n     def_or_undef (parse_in, \"__CLFLUSHOPT__\");\n-  if (isa_flag & OPTION_MASK_ISA_CLZERO)\n+  if (isa_flag2 & OPTION_MASK_ISA_CLZERO)\n     def_or_undef (parse_in, \"__CLZERO__\");\n   if (isa_flag & OPTION_MASK_ISA_XSAVEC)\n     def_or_undef (parse_in, \"__XSAVEC__\");\n@@ -464,7 +464,7 @@ ix86_target_macros_internal (HOST_WIDE_INT isa_flag,\n     def_or_undef (parse_in, \"__MPX__\");\n   if (isa_flag & OPTION_MASK_ISA_CLWB)\n     def_or_undef (parse_in, \"__CLWB__\");\n-  if (isa_flag & OPTION_MASK_ISA_MWAITX)\n+  if (isa_flag2 & OPTION_MASK_ISA_MWAITX)\n     def_or_undef (parse_in, \"__MWAITX__\");\n   if (isa_flag & OPTION_MASK_ISA_PKU)\n     def_or_undef (parse_in, \"__PKU__\");\n@@ -478,7 +478,7 @@ ix86_target_macros_internal (HOST_WIDE_INT isa_flag,\n       if (flag_cf_protection != CF_NONE)\n \tdef_or_undef (parse_in, \"__CET__\");\n     }\n-  if (isa_flag2 & OPTION_MASK_ISA_SHSTK)\n+  if (isa_flag & OPTION_MASK_ISA_SHSTK)\n     {\n       def_or_undef (parse_in, \"__SHSTK__\");\n       if (flag_cf_protection != CF_NONE)"}, {"sha": "beeabff53e398e14d1154857ce770ea78278e714", "filename": "gcc/config/i386/i386.c", "status": "modified", "additions": 29, "deletions": 54, "changes": 83, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b1ccd09a7786c047a02f6eae42d431483be6a0ea/gcc%2Fconfig%2Fi386%2Fi386.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b1ccd09a7786c047a02f6eae42d431483be6a0ea/gcc%2Fconfig%2Fi386%2Fi386.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.c?ref=b1ccd09a7786c047a02f6eae42d431483be6a0ea", "patch": "@@ -2753,21 +2753,24 @@ ix86_target_string (HOST_WIDE_INT isa, HOST_WIDE_INT isa2,\n   {\n     { \"-mcx16\",\t\tOPTION_MASK_ISA_CX16 },\n     { \"-mmpx\",\t\tOPTION_MASK_ISA_MPX },\n-    { \"-mavx512vbmi2\",\tOPTION_MASK_ISA_AVX512VBMI2 },\n-    { \"-mavx512vnni\", OPTION_MASK_ISA_AVX512VNNI },\n+    { \"-mavx512vnni\",\tOPTION_MASK_ISA_AVX512VNNI },\n     { \"-mvaes\",\t\tOPTION_MASK_ISA_VAES },\n     { \"-mrdpid\",\tOPTION_MASK_ISA_RDPID },\n     { \"-msgx\",\t\tOPTION_MASK_ISA_SGX },\n     { \"-mavx5124vnniw\", OPTION_MASK_ISA_AVX5124VNNIW },\n     { \"-mavx5124fmaps\", OPTION_MASK_ISA_AVX5124FMAPS },\n     { \"-mavx512vpopcntdq\", OPTION_MASK_ISA_AVX512VPOPCNTDQ },\n-    { \"-mibt\",\tOPTION_MASK_ISA_IBT },\n-    { \"-mshstk\",\tOPTION_MASK_ISA_SHSTK }\n+    { \"-mibt\",\t\tOPTION_MASK_ISA_IBT },\n+    { \"-mhle\",\t\tOPTION_MASK_ISA_HLE },\n+    { \"-mmovbe\",\tOPTION_MASK_ISA_MOVBE },\n+    { \"-mclzero\",\tOPTION_MASK_ISA_CLZERO },\n+    { \"-mmwaitx\",\tOPTION_MASK_ISA_MWAITX }\n   };\n   static struct ix86_target_opts isa_opts[] =\n   {\n     { \"-mvpclmulqdq\",\tOPTION_MASK_ISA_VPCLMULQDQ },\n     { \"-mgfni\",\t\tOPTION_MASK_ISA_GFNI },\n+    { \"-mavx512vbmi2\",\tOPTION_MASK_ISA_AVX512VBMI2 },\n     { \"-mavx512vbmi\",\tOPTION_MASK_ISA_AVX512VBMI },\n     { \"-mavx512ifma\",\tOPTION_MASK_ISA_AVX512IFMA },\n     { \"-mavx512vl\",\tOPTION_MASK_ISA_AVX512VL },\n@@ -2814,17 +2817,14 @@ ix86_target_string (HOST_WIDE_INT isa, HOST_WIDE_INT isa2,\n     { \"-mtbm\",\t\tOPTION_MASK_ISA_TBM },\n     { \"-mpopcnt\",\tOPTION_MASK_ISA_POPCNT },\n     { \"-msahf\",\t\tOPTION_MASK_ISA_SAHF },\n-    { \"-mmovbe\",\tOPTION_MASK_ISA_MOVBE },\n     { \"-mcrc32\",\tOPTION_MASK_ISA_CRC32 },\n     { \"-mfsgsbase\",\tOPTION_MASK_ISA_FSGSBASE },\n     { \"-mrdrnd\",\tOPTION_MASK_ISA_RDRND },\n-    { \"-mmwaitx\",\tOPTION_MASK_ISA_MWAITX },\n-    { \"-mclzero\",\tOPTION_MASK_ISA_CLZERO },\n     { \"-mpku\",\t\tOPTION_MASK_ISA_PKU },\n     { \"-mlwp\",\t\tOPTION_MASK_ISA_LWP },\n-    { \"-mhle\",\t\tOPTION_MASK_ISA_HLE },\n     { \"-mfxsr\",\t\tOPTION_MASK_ISA_FXSR },\n-    { \"-mclwb\",\t\tOPTION_MASK_ISA_CLWB }\n+    { \"-mclwb\",\t\tOPTION_MASK_ISA_CLWB },\n+    { \"-mshstk\",\tOPTION_MASK_ISA_SHSTK }\n   };\n \n   /* Flag options.  */\n@@ -4009,8 +4009,8 @@ ix86_option_override_internal (bool main_args_p,\n \t    && !(opts->x_ix86_isa_flags_explicit & OPTION_MASK_ISA_SAHF))\n \t  opts->x_ix86_isa_flags |= OPTION_MASK_ISA_SAHF;\n \tif (processor_alias_table[i].flags & PTA_MOVBE\n-\t    && !(opts->x_ix86_isa_flags_explicit & OPTION_MASK_ISA_MOVBE))\n-\t  opts->x_ix86_isa_flags |= OPTION_MASK_ISA_MOVBE;\n+\t    && !(opts->x_ix86_isa_flags2_explicit & OPTION_MASK_ISA_MOVBE))\n+\t  opts->x_ix86_isa_flags2 |= OPTION_MASK_ISA_MOVBE;\n \tif (processor_alias_table[i].flags & PTA_AES\n \t    && !(ix86_isa_flags_explicit & OPTION_MASK_ISA_AES))\n \t  ix86_isa_flags |= OPTION_MASK_ISA_AES;\n@@ -4033,8 +4033,8 @@ ix86_option_override_internal (bool main_args_p,\n \t    && !(opts->x_ix86_isa_flags_explicit & OPTION_MASK_ISA_RTM))\n \t  opts->x_ix86_isa_flags |= OPTION_MASK_ISA_RTM;\n \tif (processor_alias_table[i].flags & PTA_HLE\n-\t    && !(opts->x_ix86_isa_flags_explicit & OPTION_MASK_ISA_HLE))\n-\t  opts->x_ix86_isa_flags |= OPTION_MASK_ISA_HLE;\n+\t    && !(opts->x_ix86_isa_flags2_explicit & OPTION_MASK_ISA_HLE))\n+\t  opts->x_ix86_isa_flags2 |= OPTION_MASK_ISA_HLE;\n \tif (processor_alias_table[i].flags & PTA_PRFCHW\n \t    && !(opts->x_ix86_isa_flags_explicit & OPTION_MASK_ISA_PRFCHW))\n \t  opts->x_ix86_isa_flags |= OPTION_MASK_ISA_PRFCHW;\n@@ -4075,8 +4075,8 @@ ix86_option_override_internal (bool main_args_p,\n \t    && !(opts->x_ix86_isa_flags_explicit & OPTION_MASK_ISA_CLFLUSHOPT))\n \t  opts->x_ix86_isa_flags |= OPTION_MASK_ISA_CLFLUSHOPT;\n \tif (processor_alias_table[i].flags & PTA_CLZERO\n-\t    && !(opts->x_ix86_isa_flags_explicit & OPTION_MASK_ISA_CLZERO))\n-\t  opts->x_ix86_isa_flags |= OPTION_MASK_ISA_CLZERO;\n+\t    && !(opts->x_ix86_isa_flags2_explicit & OPTION_MASK_ISA_CLZERO))\n+\t  opts->x_ix86_isa_flags2 |= OPTION_MASK_ISA_CLZERO;\n \tif (processor_alias_table[i].flags & PTA_XSAVEC\n \t    && !(opts->x_ix86_isa_flags_explicit & OPTION_MASK_ISA_XSAVEC))\n \t  opts->x_ix86_isa_flags |= OPTION_MASK_ISA_XSAVEC;\n@@ -4118,8 +4118,8 @@ ix86_option_override_internal (bool main_args_p,\n \tif (processor_alias_table[i].flags & (PTA_PREFETCH_SSE | PTA_SSE))\n \t  x86_prefetch_sse = true;\n \tif (processor_alias_table[i].flags & PTA_MWAITX\n-\t    && !(opts->x_ix86_isa_flags_explicit & OPTION_MASK_ISA_MWAITX))\n-\t  opts->x_ix86_isa_flags |= OPTION_MASK_ISA_MWAITX;\n+\t    && !(opts->x_ix86_isa_flags2_explicit & OPTION_MASK_ISA_MWAITX))\n+\t  opts->x_ix86_isa_flags2 |= OPTION_MASK_ISA_MWAITX;\n \tif (processor_alias_table[i].flags & PTA_PKU\n \t    && !(opts->x_ix86_isa_flags_explicit & OPTION_MASK_ISA_PKU))\n \t  opts->x_ix86_isa_flags |= OPTION_MASK_ISA_PKU;\n@@ -4869,7 +4869,7 @@ ix86_option_override_internal (bool main_args_p,\n   if (opts->x_flag_cf_protection != CF_NONE)\n     {\n       if (!(TARGET_IBT_P (opts->x_ix86_isa_flags2)\n-\t    || TARGET_SHSTK_P (opts->x_ix86_isa_flags2)))\n+\t    || TARGET_SHSTK_P (opts->x_ix86_isa_flags)))\n \t{\n \t  if (flag_cf_protection == CF_FULL)\n \t    {\n@@ -30196,10 +30196,8 @@ BDESC_VERIFYS (IX86_BUILTIN__BDESC_ROUND_ARGS_FIRST,\n \t       IX86_BUILTIN__BDESC_ARGS_LAST, 1);\n BDESC_VERIFYS (IX86_BUILTIN__BDESC_ARGS2_FIRST,\n \t       IX86_BUILTIN__BDESC_ROUND_ARGS_LAST, 1);\n-BDESC_VERIFYS (IX86_BUILTIN__BDESC_SPECIAL_ARGS2_FIRST,\n-\t       IX86_BUILTIN__BDESC_ARGS2_LAST, 1);\n BDESC_VERIFYS (IX86_BUILTIN__BDESC_MPX_FIRST,\n-\t       IX86_BUILTIN__BDESC_SPECIAL_ARGS2_LAST, 1);\n+\t       IX86_BUILTIN__BDESC_ARGS2_LAST, 1);\n BDESC_VERIFYS (IX86_BUILTIN__BDESC_MPX_CONST_FIRST,\n \t       IX86_BUILTIN__BDESC_MPX_LAST, 1);\n BDESC_VERIFYS (IX86_BUILTIN__BDESC_MULTI_ARG_FIRST,\n@@ -30270,21 +30268,6 @@ ix86_init_mmx_sse_builtins (void)\n \t\t IX86_BUILTIN__BDESC_ARGS2_FIRST,\n \t\t ARRAY_SIZE (bdesc_args2) - 1);\n   \n-  for (i = 0, d = bdesc_special_args2;\n-       i < ARRAY_SIZE (bdesc_special_args2);\n-       i++, d++)\n-    {\n-      BDESC_VERIFY (d->code, IX86_BUILTIN__BDESC_SPECIAL_ARGS2_FIRST, i);\n-       if (d->name == 0)\n-\t continue;\n-\n-\tftype = (enum ix86_builtin_func_type) d->flag;\n-\tdef_builtin2 (d->mask, d->name, ftype, d->code);\n-    }\n-  BDESC_VERIFYS (IX86_BUILTIN__BDESC_SPECIAL_ARGS2_LAST,\n-\t\t IX86_BUILTIN__BDESC_SPECIAL_ARGS2_FIRST,\n-\t\t ARRAY_SIZE (bdesc_special_args2) - 1);\n-\n   /* Add all builtins with rounding.  */\n   for (i = 0, d = bdesc_round_args;\n        i < ARRAY_SIZE (bdesc_round_args);\n@@ -30873,14 +30856,14 @@ ix86_init_mmx_sse_builtins (void)\n \t       VOID_FTYPE_PCVOID, IX86_BUILTIN_CLWB);\n \n   /* MONITORX and MWAITX.  */\n-  def_builtin (OPTION_MASK_ISA_MWAITX, \"__builtin_ia32_monitorx\",\n-\t       VOID_FTYPE_PCVOID_UNSIGNED_UNSIGNED, IX86_BUILTIN_MONITORX);\n-  def_builtin (OPTION_MASK_ISA_MWAITX, \"__builtin_ia32_mwaitx\",\n-\t       VOID_FTYPE_UNSIGNED_UNSIGNED_UNSIGNED, IX86_BUILTIN_MWAITX);\n+  def_builtin2 (OPTION_MASK_ISA_MWAITX, \"__builtin_ia32_monitorx\",\n+\t\tVOID_FTYPE_PCVOID_UNSIGNED_UNSIGNED, IX86_BUILTIN_MONITORX);\n+  def_builtin2 (OPTION_MASK_ISA_MWAITX, \"__builtin_ia32_mwaitx\",\n+\t\tVOID_FTYPE_UNSIGNED_UNSIGNED_UNSIGNED, IX86_BUILTIN_MWAITX);\n \n   /* CLZERO.  */\n-  def_builtin (OPTION_MASK_ISA_CLZERO, \"__builtin_ia32_clzero\",\n-               VOID_FTYPE_PCVOID, IX86_BUILTIN_CLZERO);\n+  def_builtin2 (OPTION_MASK_ISA_CLZERO, \"__builtin_ia32_clzero\",\n+\t\tVOID_FTYPE_PCVOID, IX86_BUILTIN_CLZERO);\n \n   /* Add FMA4 multi-arg argument instructions */\n   for (i = 0, d = bdesc_multi_arg; i < ARRAY_SIZE (bdesc_multi_arg); i++, d++)\n@@ -30904,7 +30887,7 @@ ix86_init_mmx_sse_builtins (void)\n \tcontinue;\n \n       ftype = (enum ix86_builtin_func_type) d->flag;\n-      def_builtin2 (d->mask, d->name, ftype, d->code);\n+      def_builtin (d->mask, d->name, ftype, d->code);\n     }\n   BDESC_VERIFYS (IX86_BUILTIN__BDESC_CET_LAST,\n \t\t IX86_BUILTIN__BDESC_CET_FIRST,\n@@ -30919,7 +30902,7 @@ ix86_init_mmx_sse_builtins (void)\n \tcontinue;\n \n       ftype = (enum ix86_builtin_func_type) d->flag;\n-      def_builtin2 (d->mask, d->name, ftype, d->code);\n+      def_builtin (d->mask, d->name, ftype, d->code);\n     }\n   BDESC_VERIFYS (IX86_BUILTIN__BDESC_CET_NORMAL_LAST,\n \t\t IX86_BUILTIN__BDESC_CET_NORMAL_FIRST,\n@@ -37497,22 +37480,14 @@ ix86_expand_builtin (tree exp, rtx target, rtx subtarget,\n \t\t}\n \t      return target;\n \t    }\n-\t    case IX86_BUILTIN_RDPID:\n-\t      return ix86_expand_special_args_builtin (bdesc_args2 + i, exp,\n+\t  case IX86_BUILTIN_RDPID:\n+\t    return ix86_expand_special_args_builtin (bdesc_args2 + i, exp,\n \t\t\t\t\t\t     target);\n \t  default:\n \t    return ix86_expand_args_builtin (bdesc_args2 + i, exp, target);\n \t  }\n     }\n \n-  if (fcode >= IX86_BUILTIN__BDESC_SPECIAL_ARGS2_FIRST\n-      && fcode <= IX86_BUILTIN__BDESC_SPECIAL_ARGS2_LAST)\n-    {\n-      i = fcode - IX86_BUILTIN__BDESC_SPECIAL_ARGS2_FIRST;\n-      return ix86_expand_special_args_builtin (bdesc_special_args2 + i, exp,\n-\t\t\t\t\t       target);\n-    }\n-\n   if (fcode >= IX86_BUILTIN__BDESC_COMI_FIRST\n       && fcode <= IX86_BUILTIN__BDESC_COMI_LAST)\n     {"}, {"sha": "78f7e10392b68c1ab26096aa0bda656bd4630f21", "filename": "gcc/config/i386/i386.opt", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b1ccd09a7786c047a02f6eae42d431483be6a0ea/gcc%2Fconfig%2Fi386%2Fi386.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b1ccd09a7786c047a02f6eae42d431483be6a0ea/gcc%2Fconfig%2Fi386%2Fi386.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.opt?ref=b1ccd09a7786c047a02f6eae42d431483be6a0ea", "patch": "@@ -738,7 +738,7 @@ Target Report Mask(ISA_AVX512VPOPCNTDQ) Var(ix86_isa_flags2) Save\n Support MMX, SSE, SSE2, SSE3, SSSE3, SSE4.1, SSE4.2, AVX, AVX2, AVX512F and AVX512VPOPCNTDQ built-in functions and code generation.\n \n mavx512vbmi2\n-Target Report Mask(ISA_AVX512VBMI2) Var(ix86_isa_flags2) Save\n+Target Report Mask(ISA_AVX512VBMI2) Var(ix86_isa_flags) Save\n Support MMX, SSE, SSE2, SSE3, SSSE3, SSE4.1, SSE4.2, AVX, AVX2, AVX512F and AVX512VBMI2 built-in functions and code generation.\n \n mavx512vnni\n@@ -806,7 +806,7 @@ Target Report Mask(ISA_LZCNT) Var(ix86_isa_flags) Save\n Support LZCNT built-in function and code generation.\n \n mhle\n-Target Report Mask(ISA_HLE) Var(ix86_isa_flags) Save\n+Target Report Mask(ISA_HLE) Var(ix86_isa_flags2) Save\n Support Hardware Lock Elision prefixes.\n \n mrdseed\n@@ -866,7 +866,7 @@ Target Report Mask(ISA_SAHF) Var(ix86_isa_flags) Save\n Support code generation of sahf instruction in 64bit x86-64 code.\n \n mmovbe\n-Target Report Mask(ISA_MOVBE) Var(ix86_isa_flags) Save\n+Target Report Mask(ISA_MOVBE) Var(ix86_isa_flags2) Save\n Support code generation of movbe instruction.\n \n mcrc32\n@@ -943,11 +943,11 @@ Target Report Mask(ISA_MPX) Var(ix86_isa_flags2) Save\n Support MPX code generation.\n \n mmwaitx\n-Target Report Mask(ISA_MWAITX) Var(ix86_isa_flags) Save\n+Target Report Mask(ISA_MWAITX) Var(ix86_isa_flags2) Save\n Support MWAITX and MONITORX built-in functions and code generation.\n \n mclzero\n-Target Report Mask(ISA_CLZERO) Var(ix86_isa_flags) Save\n+Target Report Mask(ISA_CLZERO) Var(ix86_isa_flags2) Save\n Support CLZERO built-in functions and code generation.\n \n mpku\n@@ -1005,7 +1005,7 @@ Specifically enables an indirect branch tracking feature from Control-flow\n Enforcment Technology (CET).\n \n mshstk\n-Target Report Mask(ISA_SHSTK) Var(ix86_isa_flags2) Save\n+Target Report Mask(ISA_SHSTK) Var(ix86_isa_flags) Save\n Specifically enables an shadow stack support feature from Control-flow\n Enforcment Technology (CET).\n "}, {"sha": "42d1746f68d6d0b009e3ac17ec2133719098e6bb", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b1ccd09a7786c047a02f6eae42d431483be6a0ea/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b1ccd09a7786c047a02f6eae42d431483be6a0ea/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=b1ccd09a7786c047a02f6eae42d431483be6a0ea", "patch": "@@ -1,3 +1,8 @@\n+2017-12-21  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR target/83488\n+\t* gcc.target/i386/pr83488.c: New test.\n+\n 2017-12-20  Wilco Dijkstra  <wdijkstr@arm.com>\n \n \tPR tree-optimization/83491"}, {"sha": "e5ca770e5cc5d4dacf28613cb9375316ea5792d1", "filename": "gcc/testsuite/gcc.target/i386/pr83488.c", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b1ccd09a7786c047a02f6eae42d431483be6a0ea/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr83488.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b1ccd09a7786c047a02f6eae42d431483be6a0ea/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr83488.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr83488.c?ref=b1ccd09a7786c047a02f6eae42d431483be6a0ea", "patch": "@@ -0,0 +1,9 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-mavx512vbmi2 -mno-avx512f\" } */\n+\n+typedef long long __v8di __attribute__((vector_size (64)));\n+void\n+foo (__v8di *a, __v8di *b, __v8di *c, __v8di *d)\n+{\n+  *d = __builtin_ia32_vpshldv_v8di (*a, *b, *c); /* { dg-warning \"implicit\" } */\n+} /* { dg-error \"incompatible types when assigning to type\" \"\" { target *-*-* } .-1 } */"}]}