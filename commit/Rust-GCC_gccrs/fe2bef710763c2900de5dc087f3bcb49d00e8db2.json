{"sha": "fe2bef710763c2900de5dc087f3bcb49d00e8db2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZmUyYmVmNzEwNzYzYzI5MDBkZTVkYzA4N2YzYmNiNDlkMDBlOGRiMg==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2015-06-09T14:13:09Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2015-06-09T14:13:09Z"}, "message": "tree-vect-slp.c (vect_build_slp_tree_1): Remove bailout on gaps.\n\n2015-06-09  Richard Biener  <rguenther@suse.de>\n\n\t* tree-vect-slp.c (vect_build_slp_tree_1): Remove bailout on gaps.\n\t(vect_analyze_slp_instance): Instead do not falsely drop\n\tload permutations.\n\nFrom-SVN: r224281", "tree": {"sha": "bee6d75448cbff904b09003da6e80dcf500bb22f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/bee6d75448cbff904b09003da6e80dcf500bb22f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/fe2bef710763c2900de5dc087f3bcb49d00e8db2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fe2bef710763c2900de5dc087f3bcb49d00e8db2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fe2bef710763c2900de5dc087f3bcb49d00e8db2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fe2bef710763c2900de5dc087f3bcb49d00e8db2/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "12d03fc7ff0a79601e28cd76e7360a420da6e0bf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/12d03fc7ff0a79601e28cd76e7360a420da6e0bf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/12d03fc7ff0a79601e28cd76e7360a420da6e0bf"}], "stats": {"total": 41, "additions": 13, "deletions": 28}, "files": [{"sha": "4eed10762b256fcb946229f1548b15ba49dbe911", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fe2bef710763c2900de5dc087f3bcb49d00e8db2/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fe2bef710763c2900de5dc087f3bcb49d00e8db2/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=fe2bef710763c2900de5dc087f3bcb49d00e8db2", "patch": "@@ -1,3 +1,9 @@\n+2015-06-09  Richard Biener  <rguenther@suse.de>\n+\n+\t* tree-vect-slp.c (vect_build_slp_tree_1): Remove bailout on gaps.\n+\t(vect_analyze_slp_instance): Instead do not falsely drop\n+\tload permutations.\n+\n 2015-06-09  Richard Biener  <rguenther@suse.de>\n \n \tPR middle-end/66423"}, {"sha": "20e4aba9c71d72664ac5e46eaf3399310a5bfa8a", "filename": "gcc/tree-vect-slp.c", "status": "modified", "additions": 7, "deletions": 28, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fe2bef710763c2900de5dc087f3bcb49d00e8db2/gcc%2Ftree-vect-slp.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fe2bef710763c2900de5dc087f3bcb49d00e8db2/gcc%2Ftree-vect-slp.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vect-slp.c?ref=fe2bef710763c2900de5dc087f3bcb49d00e8db2", "patch": "@@ -762,33 +762,6 @@ vect_build_slp_tree_1 (loop_vec_info loop_vinfo, bb_vec_info bb_vinfo,\n \t  else\n \t    {\n \t      /* Load.  */\n-\t      unsigned unrolling_factor\n-\t\t= least_common_multiple\n-\t\t    (*max_nunits, group_size) / group_size;\n-              /* FORNOW: Check that there is no gap between the loads\n-\t\t and no gap between the groups when we need to load\n-\t\t multiple groups at once.  */\n-              if (unrolling_factor > 1\n-\t\t  && ((GROUP_FIRST_ELEMENT (vinfo_for_stmt (stmt)) == stmt\n-\t\t       && GROUP_GAP (vinfo_for_stmt (stmt)) != 0)\n-\t\t      /* If the group is split up then GROUP_GAP\n-\t\t\t isn't correct here, nor is GROUP_FIRST_ELEMENT.  */\n-\t\t      || GROUP_SIZE (vinfo_for_stmt (stmt)) > group_size))\n-                {\n-                  if (dump_enabled_p ())\n-                    {\n-                      dump_printf_loc (MSG_MISSED_OPTIMIZATION, vect_location,\n-\t\t\t\t       \"Build SLP failed: grouped \"\n-\t\t\t\t       \"loads have gaps \");\n-                      dump_gimple_stmt (MSG_MISSED_OPTIMIZATION, TDF_SLIM,\n-\t\t\t\t\tstmt, 0);\n-                      dump_printf (MSG_MISSED_OPTIMIZATION, \"\\n\");\n-                    }\n-\t\t  /* Fatal mismatch.  */\n-\t\t  matches[0] = false;\n-                  return false;\n-                }\n-\n               /* Check that the size of interleaved loads group is not\n                  greater than the SLP group size.  */\n \t      unsigned ncopies\n@@ -1846,7 +1819,13 @@ vect_analyze_slp_instance (loop_vec_info loop_vinfo, bb_vec_info bb_vinfo,\n \t\tthis_load_permuted = true;\n \t      load_permutation.safe_push (load_place);\n \t    }\n-\t  if (!this_load_permuted)\n+\t  if (!this_load_permuted\n+\t      /* The load requires permutation when unrolling exposes\n+\t         a gap either because the group is larger than the SLP\n+\t\t group-size or because there is a gap between the groups.  */\n+\t      && (unrolling_factor == 1\n+\t\t  || (group_size == GROUP_SIZE (vinfo_for_stmt (first_stmt))\n+\t\t      && GROUP_GAP (vinfo_for_stmt (first_stmt)) == 0)))\n \t    {\n \t      load_permutation.release ();\n \t      continue;"}]}