{"sha": "a3950905fbb5ee843bcdb1153bb6f6c48c78fee1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTM5NTA5MDVmYmI1ZWU4NDNiY2RiMTE1M2JiNmY2YzQ4Yzc4ZmVlMQ==", "commit": {"author": {"name": "Michael Meissner", "email": "meissner@gcc.gnu.org", "date": "1996-07-13T02:28:13Z"}, "committer": {"name": "Michael Meissner", "email": "meissner@gcc.gnu.org", "date": "1996-07-13T02:28:13Z"}, "message": "Add -mxl-call\n\nFrom-SVN: r12440", "tree": {"sha": "d562d42ce5f2c36ded596b8bda7b2eef1b0f9663", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d562d42ce5f2c36ded596b8bda7b2eef1b0f9663"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a3950905fbb5ee843bcdb1153bb6f6c48c78fee1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a3950905fbb5ee843bcdb1153bb6f6c48c78fee1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a3950905fbb5ee843bcdb1153bb6f6c48c78fee1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a3950905fbb5ee843bcdb1153bb6f6c48c78fee1/comments", "author": null, "committer": null, "parents": [{"sha": "5b9d9a0c0e6d116f4804b4f48cdfb9c0a304dcc9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5b9d9a0c0e6d116f4804b4f48cdfb9c0a304dcc9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5b9d9a0c0e6d116f4804b4f48cdfb9c0a304dcc9"}], "stats": {"total": 37, "additions": 37, "deletions": 0}, "files": [{"sha": "44d57394f5d030f90cf988494ed323e474f0a397", "filename": "gcc/config/rs6000/rs6000.h", "status": "modified", "additions": 37, "deletions": 0, "changes": 37, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a3950905fbb5ee843bcdb1153bb6f6c48c78fee1/gcc%2Fconfig%2Frs6000%2Frs6000.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a3950905fbb5ee843bcdb1153bb6f6c48c78fee1/gcc%2Fconfig%2Frs6000%2Frs6000.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.h?ref=a3950905fbb5ee843bcdb1153bb6f6c48c78fee1", "patch": "@@ -316,6 +316,10 @@ extern int target_flags;\n #endif\n #endif\n \n+#ifndef TARGET_XL_CALL\n+#define TARGET_XL_CALL 0\n+#endif\n+\n /* Run-time compilation parameters selecting different hardware subsets.\n \n    Macro to define tables used to set the flags.\n@@ -437,6 +441,39 @@ struct rs6000_cpu_select\n \n extern struct rs6000_cpu_select rs6000_select[];\n \n+/* start-sanitize-haifa */\n+#ifdef HAIFA\n+\n+/* Some machines may desire to change what optimizations are\n+   performed for various optimization levels.   This macro, if\n+   defined, is executed once just after the optimization level is\n+   determined and before the remainder of the command options have\n+   been parsed.  Values set in this macro are used as the default\n+   values for the other command line options.\n+\n+   LEVEL is the optimization level specified; 2 if `-O2' is\n+   specified, 1 if `-O' is specified, and 0 if neither is specified.\n+\n+   You should not use this macro to change options that are not\n+   machine-specific.  These should uniformly selected by the same\n+   optimization level on all supported machines.  Use this macro to\n+   enable machbine-specific optimizations.\n+\n+   *Do not examine `write_symbols' in this macro!* The debugging\n+   options are not supposed to alter the generated code.\n+\n+   AIX maps in page 0, so that we can safely do speculative loads */\n+\n+#define OPTIMIZATION_OPTIONS(LEVEL)\t\t\t\t\t\\\n+do {\t\t\t\t\t\t\t\t\t\\\n+  if (TARGET_AIX && (LEVEL) >= 2) {\t\t\t\t\t\\\n+    flag_schedule_speculative_load = 1;\t\t\t\t\t\\\n+  }\t\t\t\t\t\t\t\t\t\\\n+} while (0)\n+\n+#endif\t/* HAIFA */\n+/* end-sanitize-haifa */\n+\n /* Sometimes certain combinations of command options do not make sense\n    on a particular target machine.  You can define a macro\n    `OVERRIDE_OPTIONS' to take account of this.  This macro, if"}]}