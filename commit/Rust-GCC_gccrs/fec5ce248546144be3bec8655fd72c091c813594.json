{"sha": "fec5ce248546144be3bec8655fd72c091c813594", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZmVjNWNlMjQ4NTQ2MTQ0YmUzYmVjODY1NWZkNzJjMDkxYzgxMzU5NA==", "commit": {"author": {"name": "Janus Weil", "email": "janus@gcc.gnu.org", "date": "2016-12-15T14:07:51Z"}, "committer": {"name": "Janus Weil", "email": "janus@gcc.gnu.org", "date": "2016-12-15T14:07:51Z"}, "message": "re PR fortran/78800 ([OOP] ICE in compare_parameter, at fortran/interface.c:2246)\n\n2016-12-15  Janus Weil  <janus@gcc.gnu.org>\n\n\tPR fortran/78800\n\t* interface.c (compare_allocatable): Avoid additional errors on bad\n\tclass declarations.\n\t(compare_parameter): Put the result of gfc_expr_attr into a variable,\n\tin order to avoid calling it multiple times. Exit early on bad class\n\tdeclarations to avoid ICE.\n\n2016-12-15  Janus Weil  <janus@gcc.gnu.org>\n\n\tPR fortran/78800\n\t* gfortran.dg/unlimited_polymorphic_27.f90: New test case.\n\nFrom-SVN: r243691", "tree": {"sha": "3d10f0a3a39ed09a0afcf4532ce4b7077b4d82ad", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3d10f0a3a39ed09a0afcf4532ce4b7077b4d82ad"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/fec5ce248546144be3bec8655fd72c091c813594", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fec5ce248546144be3bec8655fd72c091c813594", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fec5ce248546144be3bec8655fd72c091c813594", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fec5ce248546144be3bec8655fd72c091c813594/comments", "author": {"login": "janusw", "id": 484108, "node_id": "MDQ6VXNlcjQ4NDEwOA==", "avatar_url": "https://avatars.githubusercontent.com/u/484108?v=4", "gravatar_id": "", "url": "https://api.github.com/users/janusw", "html_url": "https://github.com/janusw", "followers_url": "https://api.github.com/users/janusw/followers", "following_url": "https://api.github.com/users/janusw/following{/other_user}", "gists_url": "https://api.github.com/users/janusw/gists{/gist_id}", "starred_url": "https://api.github.com/users/janusw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/janusw/subscriptions", "organizations_url": "https://api.github.com/users/janusw/orgs", "repos_url": "https://api.github.com/users/janusw/repos", "events_url": "https://api.github.com/users/janusw/events{/privacy}", "received_events_url": "https://api.github.com/users/janusw/received_events", "type": "User", "site_admin": false}, "committer": {"login": "janusw", "id": 484108, "node_id": "MDQ6VXNlcjQ4NDEwOA==", "avatar_url": "https://avatars.githubusercontent.com/u/484108?v=4", "gravatar_id": "", "url": "https://api.github.com/users/janusw", "html_url": "https://github.com/janusw", "followers_url": "https://api.github.com/users/janusw/followers", "following_url": "https://api.github.com/users/janusw/following{/other_user}", "gists_url": "https://api.github.com/users/janusw/gists{/gist_id}", "starred_url": "https://api.github.com/users/janusw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/janusw/subscriptions", "organizations_url": "https://api.github.com/users/janusw/orgs", "repos_url": "https://api.github.com/users/janusw/repos", "events_url": "https://api.github.com/users/janusw/events{/privacy}", "received_events_url": "https://api.github.com/users/janusw/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "50a8a9413d3a0a485ef5b1886361c2a1c4487433", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/50a8a9413d3a0a485ef5b1886361c2a1c4487433", "html_url": "https://github.com/Rust-GCC/gccrs/commit/50a8a9413d3a0a485ef5b1886361c2a1c4487433"}], "stats": {"total": 49, "additions": 40, "deletions": 9}, "files": [{"sha": "604c4d401fedaa89b5fcdc72ef6cd651ca6821e7", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fec5ce248546144be3bec8655fd72c091c813594/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fec5ce248546144be3bec8655fd72c091c813594/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=fec5ce248546144be3bec8655fd72c091c813594", "patch": "@@ -1,3 +1,12 @@\n+2016-12-15  Janus Weil  <janus@gcc.gnu.org>\n+\n+\tPR fortran/78800\n+\t* interface.c (compare_allocatable): Avoid additional errors on bad\n+\tclass declarations.\n+\t(compare_parameter): Put the result of gfc_expr_attr into a variable,\n+\tin order to avoid calling it multiple times. Exit early on bad class\n+\tdeclarations to avoid ICE.\n+\n 2016-12-14  Martin Jambor  <mjambor@suse.cz>\n \n \t* trans-openmp.c: Include omp-general.h."}, {"sha": "8c09b905181a795c938191865e9a7b23aadc7c9b", "filename": "gcc/fortran/interface.c", "status": "modified", "additions": 10, "deletions": 9, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fec5ce248546144be3bec8655fd72c091c813594/gcc%2Ffortran%2Finterface.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fec5ce248546144be3bec8655fd72c091c813594/gcc%2Ffortran%2Finterface.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Finterface.c?ref=fec5ce248546144be3bec8655fd72c091c813594", "patch": "@@ -2075,13 +2075,13 @@ gfc_check_interfaces (gfc_namespace *ns)\n static int\n compare_allocatable (gfc_symbol *formal, gfc_expr *actual)\n {\n-  symbol_attribute attr;\n-\n   if (formal->attr.allocatable\n       || (formal->ts.type == BT_CLASS && CLASS_DATA (formal)->attr.allocatable))\n     {\n-      attr = gfc_expr_attr (actual);\n-      if (!attr.allocatable)\n+      symbol_attribute attr = gfc_expr_attr (actual);\n+      if (actual->ts.type == BT_CLASS && !attr.class_ok)\n+\treturn 1;\n+      else if (!attr.allocatable)\n \treturn 0;\n     }\n \n@@ -2237,6 +2237,10 @@ compare_parameter (gfc_symbol *formal, gfc_expr *actual,\n       return 0;\n     }\n \n+  symbol_attribute actual_attr = gfc_expr_attr (actual);\n+  if (actual->ts.type == BT_CLASS && !actual_attr.class_ok)\n+    return 1;\n+\n   if ((actual->expr_type != EXPR_NULL || actual->ts.type != BT_UNKNOWN)\n       && actual->ts.type != BT_HOLLERITH\n       && formal->ts.type != BT_ASSUMED\n@@ -2278,9 +2282,6 @@ compare_parameter (gfc_symbol *formal, gfc_expr *actual,\n \t  return 0;\n \t}\n \n-      if (!gfc_expr_attr (actual).class_ok)\n-\treturn 0;\n-\n       if ((!UNLIMITED_POLY (formal) || !UNLIMITED_POLY(actual))\n \t  && !gfc_compare_derived_types (CLASS_DATA (actual)->ts.u.derived,\n \t\t\t\t\t CLASS_DATA (formal)->ts.u.derived))\n@@ -2345,7 +2346,7 @@ compare_parameter (gfc_symbol *formal, gfc_expr *actual,\n       /* F2015, 12.5.2.8.  */\n       if (formal->attr.dimension\n \t  && (formal->attr.contiguous || formal->as->type != AS_ASSUMED_SHAPE)\n-\t  && gfc_expr_attr (actual).dimension\n+\t  && actual_attr.dimension\n \t  && !gfc_is_simply_contiguous (actual, true, true))\n \t{\n \t  if (where)\n@@ -2406,7 +2407,7 @@ compare_parameter (gfc_symbol *formal, gfc_expr *actual,\n     }\n \n   if (formal->attr.allocatable && !formal->attr.codimension\n-      && gfc_expr_attr (actual).codimension)\n+      && actual_attr.codimension)\n     {\n       if (formal->attr.intent == INTENT_OUT)\n \t{"}, {"sha": "9a95e0103089ca705de0ebd681a18c58c7e97c69", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fec5ce248546144be3bec8655fd72c091c813594/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fec5ce248546144be3bec8655fd72c091c813594/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=fec5ce248546144be3bec8655fd72c091c813594", "patch": "@@ -1,3 +1,8 @@\n+2016-12-15  Janus Weil  <janus@gcc.gnu.org>\n+\n+\tPR fortran/78800\n+\t* gfortran.dg/unlimited_polymorphic_27.f90: New test case.\n+\n 2016-12-15  Toma Tabacu  <toma.tabacu@imgtec.com>\n \n \t* gcc.target/mips/mips.exp (mips-dg-options): Upgrade to R2 for"}, {"sha": "c16831eff78b76da700246813d4ac854282a1e46", "filename": "gcc/testsuite/gfortran.dg/unlimited_polymorphic_27.f90", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fec5ce248546144be3bec8655fd72c091c813594/gcc%2Ftestsuite%2Fgfortran.dg%2Funlimited_polymorphic_27.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fec5ce248546144be3bec8655fd72c091c813594/gcc%2Ftestsuite%2Fgfortran.dg%2Funlimited_polymorphic_27.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Funlimited_polymorphic_27.f90?ref=fec5ce248546144be3bec8655fd72c091c813594", "patch": "@@ -0,0 +1,16 @@\n+! { dg-do compile }\n+!\n+! PR 78800: [OOP] ICE in compare_parameter, at fortran/interface.c:2246\n+!\n+! Contributed by Gerhard Steinmetz <gerhard.steinmetz.fortran@t-online.de>\n+\n+program p\n+   type t\n+   end type\n+   class(*) :: z  ! { dg-error \"must be dummy, allocatable or pointer\" }\n+   call s(z)\n+contains\n+   subroutine s(x)\n+      type(t) :: x\n+   end\n+end"}]}