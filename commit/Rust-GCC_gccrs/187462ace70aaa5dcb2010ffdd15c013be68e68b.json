{"sha": "187462ace70aaa5dcb2010ffdd15c013be68e68b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTg3NDYyYWNlNzBhYWE1ZGNiMjAxMGZmZGQxNWMwMTNiZTY4ZTY4Yg==", "commit": {"author": {"name": "Kazu Hirata", "email": "kazu@hxi.com", "date": "2002-01-04T00:50:50Z"}, "committer": {"name": "Kazu Hirata", "email": "kazu@gcc.gnu.org", "date": "2002-01-04T00:50:50Z"}, "message": "h8300.c (output_logical_op): Use 'not.w' instead of 'neg.w' when xoring with 0x0000ffff or 0xffff0000.\n\n\t* config/h8300/h8300.c (output_logical_op): Use 'not.w' instead\n\tof 'neg.w' when xoring with 0x0000ffff or 0xffff0000.\n\nFrom-SVN: r48524", "tree": {"sha": "e037270aa451595d715ec92415de12319f2ec3b7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e037270aa451595d715ec92415de12319f2ec3b7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/187462ace70aaa5dcb2010ffdd15c013be68e68b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/187462ace70aaa5dcb2010ffdd15c013be68e68b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/187462ace70aaa5dcb2010ffdd15c013be68e68b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/187462ace70aaa5dcb2010ffdd15c013be68e68b/comments", "author": null, "committer": null, "parents": [{"sha": "619acae7b9960b1ab3049666115380463f03e5c0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/619acae7b9960b1ab3049666115380463f03e5c0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/619acae7b9960b1ab3049666115380463f03e5c0"}], "stats": {"total": 43, "additions": 40, "deletions": 3}, "files": [{"sha": "7283a0c88cc5b93e5b8e67b2f43ef825b3bcd87e", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/187462ace70aaa5dcb2010ffdd15c013be68e68b/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/187462ace70aaa5dcb2010ffdd15c013be68e68b/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=187462ace70aaa5dcb2010ffdd15c013be68e68b", "patch": "@@ -1,3 +1,8 @@\n+2002-01-03  Kazu Hirata  <kazu@hxi.com>\n+\n+\t* config/h8300/h8300.c (output_logical_op): Use 'not.w' instead\n+\tof 'neg.w' when xoring with 0x0000ffff or 0xffff0000.\n+\n 2002-01-03  Neil Booth  <neil@daikokuya.demon.co.uk>\n \n \t* cpperror.c: Update comments and copyright."}, {"sha": "3a5832e0ffb1b2cdd95ea43620518d479f26f710", "filename": "gcc/config/h8300/h8300.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/187462ace70aaa5dcb2010ffdd15c013be68e68b/gcc%2Fconfig%2Fh8300%2Fh8300.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/187462ace70aaa5dcb2010ffdd15c013be68e68b/gcc%2Fconfig%2Fh8300%2Fh8300.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fh8300%2Fh8300.c?ref=187462ace70aaa5dcb2010ffdd15c013be68e68b", "patch": "@@ -1681,7 +1681,7 @@ output_logical_op (mode, code, operands)\n       /* First, see if we can finish with one insn.\n \n \t If code is either AND or XOR, we exclude two special cases,\n-\t 0xffffff00 and 0xffff00ff, because insns like sub.w or neg.w\n+\t 0xffffff00 and 0xffff00ff, because insns like sub.w or not.w\n \t can do a better job.  */\n       if ((TARGET_H8300H || TARGET_H8300S)\n \t  && ((det & 0x0000ffff) != 0)\n@@ -1704,7 +1704,7 @@ output_logical_op (mode, code, operands)\n \t      && ((det & 0x0000ffff) == 0x0000ffff)\n \t      && code != IOR)\n \t    output_asm_insn ((code == AND)\n-\t\t\t     ? \"sub.w\\t%f0,%f0\" : \"neg.w\\t%f0\",\n+\t\t\t     ? \"sub.w\\t%f0,%f0\" : \"not.w\\t%f0\",\n \t\t\t     operands);\n \t  else if ((TARGET_H8300H || TARGET_H8300S)\n \t\t   && ((det & 0x000000ff) != 0)\n@@ -1731,7 +1731,7 @@ output_logical_op (mode, code, operands)\n \t      && ((det & 0xffff0000) == 0xffff0000)\n \t      && code != IOR)\n \t    output_asm_insn ((code == AND)\n-\t\t\t     ? \"sub.w\\t%e0,%e0\" : \"neg.w\\t%e0\",\n+\t\t\t     ? \"sub.w\\t%e0,%e0\" : \"not.w\\t%e0\",\n \t\t\t     operands);\n \t  else if (TARGET_H8300H || TARGET_H8300S)\n \t    {"}, {"sha": "ad7b5535a06a0b12eed4f813811f77c715c7b65b", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/187462ace70aaa5dcb2010ffdd15c013be68e68b/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/187462ace70aaa5dcb2010ffdd15c013be68e68b/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=187462ace70aaa5dcb2010ffdd15c013be68e68b", "patch": "@@ -1,3 +1,7 @@\n+2002-01-03  Kazu Hirata  <kazu@hxi.com>\n+\n+\t* gcc.c-torture/execute/20020103-1.c: New test.\n+\n 2002-01-03  Jakub Jelinek  <jakub@redhat.com>\n \n \t* g++.dg/other/debug2.C: New test."}, {"sha": "c010aeaad9fc97e7a049d71254b60f9f483c59dd", "filename": "gcc/testsuite/gcc.c-torture/execute/20020103-1.c", "status": "added", "additions": 28, "deletions": 0, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/187462ace70aaa5dcb2010ffdd15c013be68e68b/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F20020103-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/187462ace70aaa5dcb2010ffdd15c013be68e68b/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F20020103-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F20020103-1.c?ref=187462ace70aaa5dcb2010ffdd15c013be68e68b", "patch": "@@ -0,0 +1,28 @@\n+/* On h8300 port, the following used to be broken with -mh or -ms.  */\n+\n+extern void abort (void);\n+extern void exit (int);\n+\n+unsigned long\n+foo (unsigned long a)\n+{\n+  return a ^ 0x0000ffff;\n+}\n+\n+unsigned long\n+bar (unsigned long a)\n+{\n+  return a ^ 0xffff0000;\n+}\n+\n+int\n+main ()\n+{\n+  if (foo (0) != 0x0000ffff)\n+    abort ();\n+\n+  if (bar (0) != 0xffff0000)\n+    abort ();\n+\n+  exit (0);\n+}"}]}