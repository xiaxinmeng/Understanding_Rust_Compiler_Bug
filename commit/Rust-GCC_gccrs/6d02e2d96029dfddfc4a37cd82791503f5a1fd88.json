{"sha": "6d02e2d96029dfddfc4a37cd82791503f5a1fd88", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmQwMmUyZDk2MDI5ZGZkZGZjNGEzN2NkODI3OTE1MDNmNWExZmQ4OA==", "commit": {"author": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2018-06-05T18:18:18Z"}, "committer": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2018-06-05T18:18:18Z"}, "message": "ChangeLog: Fix whitespace.\n\n\t* ChangeLog: Fix whitespace.\n\t* testsuite/ChangeLog: Ditto.\n\nFrom-SVN: r261210", "tree": {"sha": "889997c1d728c62b35033425cee11cfa8232861c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/889997c1d728c62b35033425cee11cfa8232861c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6d02e2d96029dfddfc4a37cd82791503f5a1fd88", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6d02e2d96029dfddfc4a37cd82791503f5a1fd88", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6d02e2d96029dfddfc4a37cd82791503f5a1fd88", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6d02e2d96029dfddfc4a37cd82791503f5a1fd88/comments", "author": null, "committer": null, "parents": [{"sha": "9c5913b3c284e36f26453b4e0ed4d3b7d442fa46", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9c5913b3c284e36f26453b4e0ed4d3b7d442fa46", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9c5913b3c284e36f26453b4e0ed4d3b7d442fa46"}], "stats": {"total": 207, "additions": 105, "deletions": 102}, "files": [{"sha": "39305c50cbdd22f37bea471602e2f877d065fc46", "filename": "gcc/ChangeLog", "status": "modified", "additions": 79, "deletions": 77, "changes": 156, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6d02e2d96029dfddfc4a37cd82791503f5a1fd88/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6d02e2d96029dfddfc4a37cd82791503f5a1fd88/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=6d02e2d96029dfddfc4a37cd82791503f5a1fd88", "patch": "@@ -18,7 +18,7 @@\n \n \tPR gcov-profile/47618\n \t* doc/invoke.texi: Document how -fprofile-dir format\n-        is extended.\n+\tis extended.\n \n 2018-06-05  Richard Biener  <rguenther@suse.de>\n \n@@ -166,16 +166,16 @@\n \n 2018-06-04  Sebastian Peryt  <sebastian.peryt@intel.com>\n \n-        * config/i386/cldemoteintrin.h: Change define from _X86INTRIN_H_INCLUDED\n-        to _IMMINTRIN_H_INCLUDED.\n-        * config/i386/pconfigintrin.h: Ditto.\n-        * config/i386/waitpkgintrin.h: Ditto.\n-        * config/i386/immintrin.h: Add includes for sgxintrin.h,\n-        pconfigintrin.h, waitpkgintrin.h and cldemoteintrin.h.\n-        * config/i386/x86intrin.h: Remove includes for mintrin.h, xmmintrin.h,\n-        emmintrin.h, pmmintrin.h, tmmintrin.h, smmintrin.h, wmmintrin.h,\n-        bmiintrin.h, bmi2intrin.h, lzcntintrin.h, sgxintrin.h, pconfigintrin.h,\n-        waitpkgintrin.h and cldemoteintrin.h.\n+\t* config/i386/cldemoteintrin.h: Change define from _X86INTRIN_H_INCLUDED\n+\tto _IMMINTRIN_H_INCLUDED.\n+\t* config/i386/pconfigintrin.h: Ditto.\n+\t* config/i386/waitpkgintrin.h: Ditto.\n+\t* config/i386/immintrin.h: Add includes for sgxintrin.h,\n+\tpconfigintrin.h, waitpkgintrin.h and cldemoteintrin.h.\n+\t* config/i386/x86intrin.h: Remove includes for mintrin.h, xmmintrin.h,\n+\temmintrin.h, pmmintrin.h, tmmintrin.h, smmintrin.h, wmmintrin.h,\n+\tbmiintrin.h, bmi2intrin.h, lzcntintrin.h, sgxintrin.h, pconfigintrin.h,\n+\twaitpkgintrin.h and cldemoteintrin.h.\n \n 2018-06-04  Richard Biener  <rguenther@suse.de>\n \n@@ -396,8 +396,7 @@\n \t(find_func_clobbers): Likewise.\n \t(ipa_pta_execute): Likewise.\n \t(create_variable_info_for): For functions that are ifunc_resolver\n-\tresolve to a varinfo that contains the result of the resolver\n-\tcall.\n+\tresolve to a varinfo that contains the result of the resolver call.\n \t(associate_varinfo_to_alias): Do not treat ifunc resolvers as\n \taliases.\n \n@@ -721,7 +720,7 @@\n \n 2018-05-29  Martin Liska  <mliska@suse.cz>\n \n-        PR gcov-profile/85759\n+\tPR gcov-profile/85759\n \t* doc/gcov.texi: Document GCOV_ERROR_FILE and GCOV_EXIT_AT_ERROR\n \tenv variables.\n \n@@ -990,8 +989,8 @@\n \n 2018-05-25  Jason Merrill  <jason@redhat.com>\n \n-        PR c++/80485 - inline function non-zero address.\n-        * symtab.c (nonzero_address): Check DECL_COMDAT.\n+\tPR c++/80485 - inline function non-zero address.\n+\t* symtab.c (nonzero_address): Check DECL_COMDAT.\n \n 2018-05-25  Uros Bizjak  <ubizjak@gmail.com>\n \n@@ -1243,10 +1242,10 @@\n \n 2018-05-24  Roger Sayle  <roger@nextmovesoftware.com>\n \n-        * fold-const.c (tree_nonzero_bits): New function.\n-        * fold-const.h (tree_nonzero_bits): Likewise.\n-        * match.pd (POPCOUNT): New patterns to fold BUILTIN_POPCOUNT and\n-        friends.  POPCOUNT(x&1) => x&1, POPCOUNT(x)==0 => x==0, etc.\n+\t* fold-const.c (tree_nonzero_bits): New function.\n+\t* fold-const.h (tree_nonzero_bits): Likewise.\n+\t* match.pd (POPCOUNT): New patterns to fold BUILTIN_POPCOUNT and\n+\tfriends.  POPCOUNT(x&1) => x&1, POPCOUNT(x)==0 => x==0, etc.\n \n 2018-05-24  H.J. Lu  <hongjiu.lu@intel.com>\n \n@@ -1543,7 +1542,7 @@\n \t* calls.c (maybe_warn_nonstring_arg): Fix a typo in a comment.\n \n 2018-05-22  Jackson Woodruff  <jackson.woodruff@arm.com>\n-            Kyrylo Tkachov  <kyrylo.tkachov@arm.com>\n+\t    Kyrylo Tkachov  <kyrylo.tkachov@arm.com>\n \n \t* config/aarch64/aarch64-ldpstp.md: Replace uses of\n \taarch64_mem_pair_operand with memory_operand and delete operand swapping\n@@ -1556,7 +1555,7 @@\n \tDefine prototype.\n \n 2018-05-22  Jackson Woodruff  <jackson.woodruff@arm.com>\n-            Kyrylo Tkachov  <kyrylo.tkachov@arm.com>\n+\t    Kyrylo Tkachov  <kyrylo.tkachov@arm.com>\n \n \t* config/aarch64/aarch64.md: New patterns to generate stp\n \tand ldp.\n@@ -2030,7 +2029,7 @@\n \n \tPR middle-end/85817\n \t* ipa-pure-const.c (malloc_candidate_p): Remove the check integer_zerop\n-\tfor retval and return false if all args to phi are zero.\t\n+\tfor retval and return false if all args to phi are zero.\n \n 2018-05-18  Richard Biener  <rguenther@suse.de>\n \n@@ -2047,7 +2046,7 @@\n \n \t* doc/invoke.texi: Move -floop-unroll-and-jam documentation\n \tdirectly after that of -floop-interchange. Indicate that both\n-\toptions are enabled by default when specifying -O3. \n+\toptions are enabled by default when specifying -O3.\n \n 2018-05-18  Kyrylo Tkachov  <kyrylo.tkachov@arm.com>\n \n@@ -2271,13 +2270,13 @@\n \t_mm512_setzero): New intrinsics.\n \n 2018-05-17  James Greenhalgh  <james.greenhalgh@arm.com>\n-            Kyrylo Tkachov  <kyrylo.tkachov@arm.com>\n+\t    Kyrylo Tkachov  <kyrylo.tkachov@arm.com>\n \n \t* config/aarch64/aarch64.c (aarch64_expand_vector_init): Modify\n \tcode generation for cases where splatting a value is not useful.\n \t* simplify-rtx.c (simplify_ternary_operation): Simplify\n-\tvec_merge across a vec_duplicate and a paradoxical subreg forming a vector\n-\tmode to a vec_concat.\n+\tvec_merge across a vec_duplicate and a paradoxical subreg forming\n+\ta vector mode to a vec_concat.\n \n 2018-05-17  Olga Makhotina  <olga.makhotina@intel.com>\n \n@@ -2497,8 +2496,8 @@\n 2018-05-15  Prathamesh Kulkarni  <prathamesh.kulkarni@linaro.org>\n \n \tPR ipa/85734\n-\t* ipa-pure-const.c (warn_function_malloc): Pass value of known_finite param\n-\tas true in call to suggest_attribute.\n+\t* ipa-pure-const.c (warn_function_malloc): Pass value of known_finite\n+\tparam as true in call to suggest_attribute.\n \n 2018-05-14  Segher Boessenkool  <segher@kernel.crashing.org>\n \n@@ -2739,7 +2738,7 @@\n \n 2018-05-11  Martin Liska  <mliska@suse.cz>\n \n-        PR sanitizer/85556\n+\tPR sanitizer/85556\n \t* doc/extend.texi: Document LLVM style format for no_sanitize\n \tattribute.\n \n@@ -3091,7 +3090,8 @@\n \t(thunderxt88_prefetch_tune): Likewise.\n \t(thunderx_prefetch_tune): Likewise.\n \t(thunderx2t99_prefetch_tune): Likewise.\n-\t(qdf24xx_prefetch_tune): Likewise. Set prefetch_dynamic_strides to false.\n+\t(qdf24xx_prefetch_tune): Likewise. Set prefetch_dynamic_strides\n+\tto false.\n \t(aarch64_override_options_internal): Update to set\n \tPARAM_PREFETCH_DYNAMIC_STRIDES.\n \t* doc/invoke.texi (prefetch-dynamic-strides): Document new option.\n@@ -3134,7 +3134,8 @@\n \t(thunderxt88_prefetch_tune): Likewise.\n \t(thunderx_prefetch_tune): Likewise.\n \t(thunderx2t99_prefetch_tune): Likewise.\n-\t(qdf24xx_prefetch_tune): Likewise. Set prefetch_dynamic_strides to false.\n+\t(qdf24xx_prefetch_tune): Likewise. Set prefetch_dynamic_strides\n+\tto false.\n \t(aarch64_override_options_internal): Update to set\n \tPARAM_PREFETCH_DYNAMIC_STRIDES.\n \t* doc/invoke.texi (prefetch-dynamic-strides): Document new option.\n@@ -4130,9 +4131,9 @@\n \n 2018-04-20  Carl Love  <cel@us.ibm.com>\n \n-        PR target/83402\n-        * config/rs6000/rs6000-c.c (rs6000_gimple_fold_builtin): Add\n-        size check for arg0.\n+\tPR target/83402\n+\t* config/rs6000/rs6000-c.c (rs6000_gimple_fold_builtin): Add\n+\tsize check for arg0.\n \n 2018-04-20  Nathan Sidwell  <nathan@codesourcery.com>\n \t    Tom de Vries  <tom@codesourcery.com>\n@@ -4193,7 +4194,7 @@\n 2018-04-19  Toon Moene  <toon@moene.org>\n \n \t* doc/invoke.texi: Add -floop-unroll-and-jam to options enabled\n-\tby -O3. \n+\tby -O3.\n \n 2018-04-19  Jakub Jelinek  <jakub@redhat.com>\n \n@@ -4244,7 +4245,7 @@\n \n 2018-04-19  Sebastian Peryt  <sebastian.peryt@intel.com>\n \n-\t* common/config/i386/i386-common.c \n+\t* common/config/i386/i386-common.c\n \t(OPTION_MASK_ISA_MOVDIRI_SET, OPTION_MASK_ISA_MOVDIR64B_SET,\n \tOPTION_MASK_ISA_MOVDIRI_UNSET,\n \tOPTION_MASK_ISA_MOVDIR64B_UNSET): New defines.\n@@ -4258,7 +4259,7 @@\n \t(VOID, PVOID, PCVOID)): New function types.\n \t* config/i386/i386-builtin.def (__builtin_ia32_directstoreu_u32,\n \t__builtin_ia32_directstoreu_u64,\n-\t __builtin_ia32_movdir64b): New builtins.\n+\t__builtin_ia32_movdir64b): New builtins.\n \t* config/i386/i386-c.c (__MOVDIRI__, __MOVDIR64B__): New.\n \t* config/i386/i386.c (ix86_target_string): Added -mmovdir64b\n \tand -mmovdiri.\n@@ -4494,7 +4495,7 @@\n \tPR ipa/85329\n \t* multiple_target.c (create_dispatcher_calls): Set apostrophes\n \tfor target_clone error message.  Make default implementation\n-        clone to be a local declaration.\n+\tclone to be a local declaration.\n \t(separate_attrs): Add new argument and check for an empty\n \tstring.\n \t(expand_target_clones): Handle it.\n@@ -4596,7 +4597,7 @@\n \t* cfgloopanal.c (expected_loop_iterations_unbounded): Add\n \tby_profile_only parameter.\n \t* cfgloopmanip.c (scale_loop_profile): Further scale loop's profile\n-        information if the loop was predicted to iterate too many times.\n+\tinformation if the loop was predicted to iterate too many times.\n \t* cfgloop.h (expected_loop_iterations_unbounded): Update prototype\n \n 2018-04-13  Jan Hubicka  <hubicka@ucw.cz>\n@@ -5838,7 +5839,8 @@\n 2018-03-27  Ramana Radhakrishnan  <ramana.radhakrishnan@arm.com>\n \n \tPR target/81863\n-\t* config/arm/arm.c (arm_valid_symbolic_address): Handle arm_word_relocations\n+\t* config/arm/arm.c (arm_valid_symbolic_address): Handle\n+\tarm_word_relocations.\n \n 2018-03-27  Cesar Philippidis  <cesar@codesourcery.com>\n \n@@ -6348,7 +6350,7 @@\n \n 2018-03-15  Sandra Loosemore  <sandra@codesourcery.com>\n \n-\t* config/nios2/nios2.md (movsi_internal): Fix thinko in \n+\t* config/nios2/nios2.md (movsi_internal): Fix thinko in\n \tsplit predicate.\n \n 2018-03-15  Jakub Jelinek  <jakub@redhat.com>\n@@ -6458,8 +6460,7 @@\n \t(layout::get_state_at_point): Likewise.\n \t(layout::get_x_bound_for_row): Likewise.\n \t(layout::print_line): Likewise.\n-\t(diagnostic_show_locus): Likewise for locals \"last_line\" and\n-\t\"row\".\n+\t(diagnostic_show_locus): Likewise for locals \"last_line\" and \"row\".\n \t(selftest::diagnostic_show_locus_c_tests): Call test_line_span.\n \t* input.c (selftest::test_linenum_comparisons): New function.\n \t(selftest::input_c_tests): Call it.\n@@ -7092,29 +7093,29 @@\n \n 2018-03-06  Claudiu Zissulescu  <claziss@synopsys.com>\n \n-\t * config/arc/arc.c (arc_finalize_pic): Remove function.\n-\t (arc_must_save_register): We use single base PIC register, remove\n-\t checks to save/restore the PIC register.\n-\t (arc_expand_prologue): Likewise.\n-\t * config/arc/arc-protos.h (arc_set_default_type_attributes):\n-\t Remove.\n-\t (arc_verify_short): Likewise.\n-\t (arc_attr_type): Likewise.\n-\t * config/arc/arc.c (arc_set_default_type_attributes): Remove.\n-\t (walk_stores): Likewise.\n-\t (arc_address_cost): Make it static.\n-\t (arc_verify_short): Likewise.\n-\t (branch_dest): Likewise.\n-\t (arc_attr_type): Likewise.\n-\t * config/arc/arc.c (TARGET_ADJUST_INSN_LENGTH): Remove.\n-\t (TARGET_INSN_LENGTH_PARAMETERS): Likewise.\n-\t (arc_final_prescan_insn): Remove inserting the nops due to\n-\t hardware hazards.  It is done in reorg step.\n-\t (insn_length_variant_t): Remove.\n-\t (insn_length_parameters_t): Likewise.\n-\t (arc_insn_length_parameters): Likewise.\n-\t (arc_get_insn_variants): Likewise.\n-\t * config/arc/arc.h (TARGET_UPSIZE_DBR): Remove.\n+\t* config/arc/arc.c (arc_finalize_pic): Remove function.\n+\t(arc_must_save_register): We use single base PIC register, remove\n+\tchecks to save/restore the PIC register.\n+\t(arc_expand_prologue): Likewise.\n+\t* config/arc/arc-protos.h (arc_set_default_type_attributes):\n+\tRemove.\n+\t(arc_verify_short): Likewise.\n+\t(arc_attr_type): Likewise.\n+\t* config/arc/arc.c (arc_set_default_type_attributes): Remove.\n+\t(walk_stores): Likewise.\n+\t(arc_address_cost): Make it static.\n+\t(arc_verify_short): Likewise.\n+\t(branch_dest): Likewise.\n+\t(arc_attr_type): Likewise.\n+\t* config/arc/arc.c (TARGET_ADJUST_INSN_LENGTH): Remove.\n+\t(TARGET_INSN_LENGTH_PARAMETERS): Likewise.\n+\t(arc_final_prescan_insn): Remove inserting the nops due to\n+\thardware hazards.  It is done in reorg step.\n+\t(insn_length_variant_t): Remove.\n+\t(insn_length_parameters_t): Likewise.\n+\t(arc_insn_length_parameters): Likewise.\n+\t(arc_get_insn_variants): Likewise.\n+\t* config/arc/arc.h (TARGET_UPSIZE_DBR): Remove.\n \n 2018-03-06  Jakub Jelinek  <jakub@redhat.com>\n \n@@ -7202,7 +7203,8 @@\n \t* config/i386/immintrin.h (_wbinvd): New intrinsic.\n \t* config/i386/pconfigintrin.h: New file.\n \t* config/i386/wbnoinvdintrin.h: Ditto.\n-\t* config/i386/x86intrin.h: Add headers pconfigintrin.h and wbnoinvdintrin.h.\n+\t* config/i386/x86intrin.h: Add headers pconfigintrin.h and\n+\twbnoinvdintrin.h.\n \t* doc/invoke.texi (-mpconfig, -mwbnoinvd): New.\n \n 2018-03-05  Richard Biener  <rguenther@suse.de>\n@@ -7710,7 +7712,7 @@\n \n 2018-02-26  Ramana Radhakrishnan  <ramana.radhakrishnan@arm.com>\n \n-        PR target/84521\n+\tPR target/84521\n \t* common/config/aarch64/aarch64-common.c\n \t(aarch_option_optimization_table[]): Switch\n \toff fomit-frame-pointer\n@@ -7955,7 +7957,7 @@\n \t(format_string, format_plain): Similarly.\n \t* gimple-ssa-sprintf.c (sprintf_dom_walker::handle_gimple_call): Query\n \tthe EVRP range analyzer for range data rather than using global data.\n-\t* gimple-ssa-sprintf.c: Include alloc-pool.h, vr-values.h and \n+\t* gimple-ssa-sprintf.c: Include alloc-pool.h, vr-values.h and\n \tgimple-ssa-evrp-analyze.h\n \t(class sprintf_dom_walker): Add after_dom_children member function.\n \tAdd evrp_range_analyzer member.\n@@ -8375,7 +8377,7 @@\n \n 2018-02-13  Jeff Law  <law@redhat.com>\n \n- \t* config/rl/rl78.c (rl78_attribute_table): Fix terminator and\n+\t* config/rl/rl78.c (rl78_attribute_table): Fix terminator and\n \tentry for \"vector\".\n \n \t* config/rl78/rl78.c (rl78_handle_func_attribute): Mark\n@@ -8444,7 +8446,7 @@\n \t* config/rl78/rl78.c (add_vector_labels): New function.\n \t* config/rl78/rl78.c (rl78_handle_vector_attribute): New function.\n \t* config/rl78/rl78.c (rl78_start_function): Call add_vector_labels.\n-\t* config/rl78/rl78.c (rl78_handle_func_attribute): Removed the assert \n+\t* config/rl78/rl78.c (rl78_handle_func_attribute): Removed the assert\n \twhich checks that no arguments are passed.\n \t* config/rl78/rl78.c (rl78_attribute_table): Add \"vector\" attribute.\n \t* doc/extend.texi: Documentation for the new attribute.\n@@ -9091,8 +9093,7 @@\n \t(fix<uns>_trunc<IEEE128:mode><QHI:mode>2): Likewise.\n \t(fctiw<u>z_<mode>_smallint): Rename fctiw<u>z_<mode>_smallint to\n \tfix<uns>_trunc<SFDF:mode>si2_p8.\n-\t(fix_trunc<SFDF:mode><QHI:mode>2_internal): Delete, no longer\n-\tused.\n+\t(fix_trunc<SFDF:mode><QHI:mode>2_internal): Delete, no longer used.\n \t(fixuns_trunc<SFDF:mode><QHI:mode>2_internal): Likewise.\n \t(fix<uns>_<mode>_mem): Likewise.\n \t(fctiw<u>z_<mode>_mem): Likewise.\n@@ -9875,7 +9876,7 @@\n \n 2018-01-26  Sebastian Perta  <sebastian.perta@renesas.com>\n \n-\t* config/rl78/rl78.c (rl78_addsi3_internal): If operand 2 is const \n+\t* config/rl78/rl78.c (rl78_addsi3_internal): If operand 2 is const\n \tavoid addition with 0 and use incw and decw where possible.\n \n 2018-01-26  Richard Biener  <rguenther@suse.de>\n@@ -10213,7 +10214,8 @@\n \n 2018-01-22  Sebastian Perta  <sebastian.perta@renesas.com>\n \n-\t* config/rl78/rl78-protos.h (rl78_split_movdi): New function declaration.\n+\t* config/rl78/rl78-protos.h (rl78_split_movdi): New function\n+\tdeclaration.\n \t* config/rl78/rl78.md (movdi): New define_expand.\n \t* config/rl78/rl78.c (rl78_split_movdi): New function.\n \n@@ -10962,7 +10964,7 @@\n \t* config/i386/i386.c (print_reg): Print the name of the full\n \tinteger register without '%'.\n \t(ix86_print_operand): Handle 'V'.\n-\t * doc/extend.texi: Document 'V' modifier.\n+\t* doc/extend.texi: Document 'V' modifier.\n \n 2018-01-14  H.J. Lu  <hongjiu.lu@intel.com>\n "}, {"sha": "26ea1148bfd8086b928eaf37aad9d49e7816bf74", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 26, "deletions": 25, "changes": 51, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6d02e2d96029dfddfc4a37cd82791503f5a1fd88/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6d02e2d96029dfddfc4a37cd82791503f5a1fd88/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=6d02e2d96029dfddfc4a37cd82791503f5a1fd88", "patch": "@@ -616,10 +616,10 @@\n \n 2018-05-24  Roger Sayle  <roger@nextmovesoftware.com>\n \n-        * gcc.dg/fold-popcount-1.c: New testcase.\n-        * gcc.dg/fold-popcount-2.c: New testcase.\n-        * gcc.dg/fold-popcount-3.c: New testcase.\n-        * gcc.dg/fold-popcount-4.c: New testcase.\n+\t* gcc.dg/fold-popcount-1.c: New testcase.\n+\t* gcc.dg/fold-popcount-2.c: New testcase.\n+\t* gcc.dg/fold-popcount-3.c: New testcase.\n+\t* gcc.dg/fold-popcount-4.c: New testcase.\n \n 2018-05-24  Marek Polacek  <polacek@redhat.com>\n \n@@ -920,12 +920,12 @@\n 2018-05-21  Steven G. Kargl  <kargl@gcc.gnu.org>\n \n \tChangeLog for r260480\n-        * gfortran.dg/graphite/block-2.f: Adjust testcase for new gfortran\n-        warnings for deleted and obsolescent features.\n-        * gfortran.dg/graphite/id-19.f: Ditto.\n-        * gfortran.dg/graphite/id-20.f: Ditto.\n-        * gfortran.dg/graphite/id-27.f90: Ditto.\n-        * gfortran.dg/graphite/pr82449.f: Ditto.\n+\t* gfortran.dg/graphite/block-2.f: Adjust testcase for new gfortran\n+\twarnings for deleted and obsolescent features.\n+\t* gfortran.dg/graphite/id-19.f: Ditto.\n+\t* gfortran.dg/graphite/id-20.f: Ditto.\n+\t* gfortran.dg/graphite/id-27.f90: Ditto.\n+\t* gfortran.dg/graphite/pr82449.f: Ditto.\n \n 2018-05-21  Kyrylo Tkachov  <kyrylo.tkachov@arm.com>\n \n@@ -1299,7 +1299,7 @@\n \n 2018-05-11  Martin Liska  <mliska@suse.cz>\n \n-        PR sanitizer/85556\n+\tPR sanitizer/85556\n \t* c-c++-common/ubsan/attrib-6.c: New test.\n \n 2018-05-10  Steven G. Kargl  <kargl@gcc.gnu.org>\n@@ -1543,12 +1543,12 @@\n 2018-05-06  Michael Eager  <eager@eagercon.com>\n \n \t* gcc.target/microblaze/others/picdtr.c: Correct option\n-\t -fPIE -mpic-data-is-text-relative.\n+\t-fPIE -mpic-data-is-text-relative.\n \n 2018-05-06  Andrew Sadek  <andrew.sadek.se@gmail.com>\n \n \t* gcc.target/microblaze/others/picdtr.c: Add test for\n-\t -fPIE -mpic-data-is-text-relative.\n+\t-fPIE -mpic-data-is-text-relative.\n \n 2018-05-06  Andre Vehreschild  <vehre@gcc.gnu.org>\n \n@@ -1711,7 +1711,7 @@\n \n 2018-05-01  Prathamesh Kulkarni  <prathamesh.kulkarni@linaro.org>\n \n-        PR tree-optimization/82665\n+\tPR tree-optimization/82665\n \t* gcc.dg/tree-ssa/pr82665.c: New test.\n \n 2018-04-30  David Malcolm  <dmalcolm@redhat.com>\n@@ -2343,11 +2343,11 @@\n \n 2018-04-13  Andreas Krebbel  <krebbel@linux.ibm.com>\n \n-        PR testsuite/85326\n-        * gcc.target/s390/pr77822-1.C: Rename to ...\n-        * gcc.target/s390/pr77822-1.c: ... this. Add asm scan check.\n-        * gcc.target/s390/pr77822-2.c: Add asm scan check.\n-        * gcc.target/s390/s390.exp: Remove C from testcase regexps.\n+\tPR testsuite/85326\n+\t* gcc.target/s390/pr77822-1.C: Rename to ...\n+\t* gcc.target/s390/pr77822-1.c: ... this. Add asm scan check.\n+\t* gcc.target/s390/pr77822-2.c: Add asm scan check.\n+\t* gcc.target/s390/s390.exp: Remove C from testcase regexps.\n \n 2018-04-13  Jan Hubicka  <hubicka@ucw.cz>\n \n@@ -3680,7 +3680,7 @@\n \t* g++.dg/cpp2a/desig7.C: New test.\n \n 2018-03-16  Mark Doffman  <mark.doffman@codethink.co.uk>\n-            Jim MacArthur  <jim.macarthur@codethink.co.uk>\n+\t    Jim MacArthur  <jim.macarthur@codethink.co.uk>\n \n \t* gfortran.dg/automatic_1.f90: New test.\n \t* gfortran.dg/automatic_repeat.f90: New test\n@@ -4915,9 +4915,9 @@\n \n 2018-02-20  Jeff Law  <law@redhat.com>\n \n-        PR middle-end/82123\n-        PR tree-optimization/81592\n-        PR middle-end/79257\n+\tPR middle-end/82123\n+\tPR tree-optimization/81592\n+\tPR middle-end/79257\n \t* gcc.dg/pr81592.c: New test.\n \t* gcc.dg/pr82123.c: New test.\n \t* gcc.dg/builtin-unreachable-6.c: Turn off VRP.\n@@ -7346,7 +7346,8 @@\n \t* gfortran.fortran-torture/execute/intrinsic_dprod.f90: Likewise.\n \t* gfortran.fortran-torture/execute/intrinsic_dummy.f90: Likewise.\n \t* gfortran.fortran-torture/execute/intrinsic_eoshift.f90: Likewise.\n-\t* gfortran.fortran-torture/execute/intrinsic_fraction_exponent.f90: Likewise.\n+\t* gfortran.fortran-torture/execute/intrinsic_fraction_exponent.f90:\n+\tLikewise.\n \t* gfortran.fortran-torture/execute/intrinsic_index.f90: Likewise.\n \t* gfortran.fortran-torture/execute/intrinsic_integer.f90: Likewise.\n \t* gfortran.fortran-torture/execute/intrinsic_leadz.f90: Likewise.\n@@ -7641,7 +7642,7 @@\n \n 2018-02-14  Carl Love  <cel@us.ibm.com>\n \n-        * gcc.target/powerpc/builtins-4-int128-runnable.c\n+\t* gcc.target/powerpc/builtins-4-int128-runnable.c\n \t(dg-require-effective-target): Change vsx_hw to p8vector_hw.\n \t(dg-options): Change -maltivec -mvsx to -mpower8-vector.\n "}]}