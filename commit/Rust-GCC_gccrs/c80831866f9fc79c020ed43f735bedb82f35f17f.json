{"sha": "c80831866f9fc79c020ed43f735bedb82f35f17f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzgwODMxODY2ZjlmYzc5YzAyMGVkNDNmNzM1YmVkYjgyZjM1ZjE3Zg==", "commit": {"author": {"name": "Steve Ellcey", "email": "sje@cup.hp.com", "date": "2003-10-14T19:25:54Z"}, "committer": {"name": "Steve Ellcey", "email": "sje@gcc.gnu.org", "date": "2003-10-14T19:25:54Z"}, "message": "ia64.c (ia64_expand_call): Force function address to DImode.\n\n\t* config/ia64/ia64.c (ia64_expand_call): Force function address\n\tto DImode.\n\t* config/ia64/ia64.md (call_gp): Put DImode on operand 0.\n\nFrom-SVN: r72489", "tree": {"sha": "13a103580c574e1a6b51dba1e883cc7a33113730", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/13a103580c574e1a6b51dba1e883cc7a33113730"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c80831866f9fc79c020ed43f735bedb82f35f17f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c80831866f9fc79c020ed43f735bedb82f35f17f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c80831866f9fc79c020ed43f735bedb82f35f17f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c80831866f9fc79c020ed43f735bedb82f35f17f/comments", "author": null, "committer": null, "parents": [{"sha": "553e5ce9e10dcc845a69b198bfc610eec266161c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/553e5ce9e10dcc845a69b198bfc610eec266161c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/553e5ce9e10dcc845a69b198bfc610eec266161c"}], "stats": {"total": 9, "additions": 8, "deletions": 1}, "files": [{"sha": "76be7d17012f0f33bfb32cb1b7de9ebb3f3364e6", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c80831866f9fc79c020ed43f735bedb82f35f17f/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c80831866f9fc79c020ed43f735bedb82f35f17f/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=c80831866f9fc79c020ed43f735bedb82f35f17f", "patch": "@@ -1,3 +1,9 @@\n+2003-10-14  Steve Ellcey  <sje@cup.hp.com>\n+\n+\t* config/ia64/ia64.c (ia64_expand_call): Force function address\n+\tto DImode.\n+\t* config/ia64/ia64.md (call_gp): Put DImode on operand 0.\n+\n 2003-10-14  Ulrich Weigand  <uweigand@de.ibm.com>\n \n \t* config/s390/s390.md (\"muldf3\", \"*muldf3\", \"*muldf3_ibm\","}, {"sha": "1c94533e047cb1857c245a33f2f2f63bbb65ab2c", "filename": "gcc/config/ia64/ia64.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c80831866f9fc79c020ed43f735bedb82f35f17f/gcc%2Fconfig%2Fia64%2Fia64.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c80831866f9fc79c020ed43f735bedb82f35f17f/gcc%2Fconfig%2Fia64%2Fia64.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fia64%2Fia64.c?ref=c80831866f9fc79c020ed43f735bedb82f35f17f", "patch": "@@ -1500,6 +1500,7 @@ ia64_expand_call (rtx retval, rtx addr, rtx nextarg ATTRIBUTE_UNUSED,\n   rtx insn, b0;\n \n   addr = XEXP (addr, 0);\n+  addr = convert_memory_address (DImode, addr);\n   b0 = gen_rtx_REG (DImode, R_BR (0));\n \n   /* ??? Should do this for functions known to bind local too.  */"}, {"sha": "da7bff4afe0d22a1b9d2ef45f0e32458a43ddd23", "filename": "gcc/config/ia64/ia64.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c80831866f9fc79c020ed43f735bedb82f35f17f/gcc%2Fconfig%2Fia64%2Fia64.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c80831866f9fc79c020ed43f735bedb82f35f17f/gcc%2Fconfig%2Fia64%2Fia64.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fia64%2Fia64.md?ref=c80831866f9fc79c020ed43f735bedb82f35f17f", "patch": "@@ -4731,7 +4731,7 @@\n   [(set_attr \"itanium_class\" \"br,scall\")])\n \n (define_insn \"call_gp\"\n-  [(call (mem:DI (match_operand 0 \"call_operand\" \"?r,i\"))\n+  [(call (mem:DI (match_operand:DI 0 \"call_operand\" \"?r,i\"))\n \t (const_int 1))\n    (clobber (match_operand:DI 1 \"register_operand\" \"=b,b\"))\n    (clobber (match_scratch:DI 2 \"=&r,X\"))"}]}