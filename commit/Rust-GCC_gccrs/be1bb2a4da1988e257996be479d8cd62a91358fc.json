{"sha": "be1bb2a4da1988e257996be479d8cd62a91358fc", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmUxYmIyYTRkYTE5ODhlMjU3OTk2YmU0NzlkOGNkNjJhOTEzNThmYw==", "commit": {"author": {"name": "Alexandre Oliva", "email": "aoliva@redhat.com", "date": "2001-12-04T17:11:05Z"}, "committer": {"name": "Alexandre Oliva", "email": "aoliva@gcc.gnu.org", "date": "2001-12-04T17:11:05Z"}, "message": "tree.c (get_callee_fndecl): Only use DECL_ABSTRACT_ORIGIN if it has DECL_SAVED_TREE.\n\n* tree.c (get_callee_fndecl): Only use DECL_ABSTRACT_ORIGIN if\nit has DECL_SAVED_TREE.\n\nFrom-SVN: r47615", "tree": {"sha": "6455b9956b6bf8c80205881f80ee6d34faaa2117", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6455b9956b6bf8c80205881f80ee6d34faaa2117"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/be1bb2a4da1988e257996be479d8cd62a91358fc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/be1bb2a4da1988e257996be479d8cd62a91358fc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/be1bb2a4da1988e257996be479d8cd62a91358fc", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/be1bb2a4da1988e257996be479d8cd62a91358fc/comments", "author": null, "committer": null, "parents": [{"sha": "0839863cfad677645b112db8c6bdc4153768412d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0839863cfad677645b112db8c6bdc4153768412d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0839863cfad677645b112db8c6bdc4153768412d"}], "stats": {"total": 24, "additions": 18, "deletions": 6}, "files": [{"sha": "57228114d28fe6d723ef3a733a6cd756bee9970f", "filename": "gcc/ChangeLog", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be1bb2a4da1988e257996be479d8cd62a91358fc/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be1bb2a4da1988e257996be479d8cd62a91358fc/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=be1bb2a4da1988e257996be479d8cd62a91358fc", "patch": "@@ -1,5 +1,8 @@\n 2001-12-04  Alexandre Oliva  <aoliva@redhat.com>\n \n+\t* tree.c (get_callee_fndecl): Only use DECL_ABSTRACT_ORIGIN if\n+\tit has DECL_SAVED_TREE.\n+\t\n \t* c-decl.c (duplicate_decls): Revert rth's patch.  If newdecl\n \tis in a different binding level, get its abstract origin to be\n \tolddecl."}, {"sha": "5cbf59c5cba8751233ed12c63995947386bf79c9", "filename": "gcc/tree.c", "status": "modified", "additions": 15, "deletions": 6, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be1bb2a4da1988e257996be479d8cd62a91358fc/gcc%2Ftree.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be1bb2a4da1988e257996be479d8cd62a91358fc/gcc%2Ftree.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree.c?ref=be1bb2a4da1988e257996be479d8cd62a91358fc", "patch": "@@ -4379,12 +4379,21 @@ get_callee_fndecl (call)\n   if (TREE_CODE (addr) == ADDR_EXPR\n       && TREE_CODE (TREE_OPERAND (addr, 0)) == FUNCTION_DECL)\n     {\n-      addr = TREE_OPERAND (addr, 0);\n-\n-      if (! DECL_INITIAL (addr) && DECL_ABSTRACT_ORIGIN (addr))\n-\taddr = DECL_ABSTRACT_ORIGIN (addr);\n-\n-      return addr;\n+      tree fn = TREE_OPERAND (addr, 0);\n+\n+      /* If fn is a declaration of a function in a nested scope that\n+         was globally declared inline, we don't set its DECL_INITIAL.\n+         However, we can't blindly follow DECL_ABSTRACT_ORIGIN because\n+         the C++ front-end uses it for cdtors to refer to their\n+         internal declarations, that are not real functions.\n+         Fortunately those don't have trees to be saved, so we can tell by\n+         checking their DECL_SAVED_TREE.  */\n+      if (! DECL_INITIAL (fn)\n+\t  && DECL_ABSTRACT_ORIGIN (fn)\n+\t  && DECL_SAVED_TREE (DECL_ABSTRACT_ORIGIN (fn)))\n+\tfn = DECL_ABSTRACT_ORIGIN (fn);\n+\n+      return fn;\n     }\n \n   /* We couldn't figure out what was being called.  */"}]}