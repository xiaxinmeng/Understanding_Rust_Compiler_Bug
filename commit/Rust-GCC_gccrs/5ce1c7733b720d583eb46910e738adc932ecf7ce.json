{"sha": "5ce1c7733b720d583eb46910e738adc932ecf7ce", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWNlMWM3NzMzYjcyMGQ1ODNlYjQ2OTEwZTczOGFkYzkzMmVjZjdjZQ==", "commit": {"author": {"name": "Bob Duff", "email": "duff@adacore.com", "date": "2019-09-18T08:31:37Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "pmderodat@gcc.gnu.org", "date": "2019-09-18T08:31:37Z"}, "message": "[Ada] Avoid uninitialized variable in bounded containers\n\nIn function Copy in Ada.Containers.Bounded_Ordered_Sets and other\nbounded containers packages, remove a possible use of an uninitialized\nvariable. This was not a bug, because the uninitialized variable could\nbe used only if checks are suppressed, and the checks would have failed,\nleading to erroneous execution.\n\nHowever, it seems more robust this way, and is probably equally\nefficient, and avoids a warning that is given if checks are suppressed,\nand the -Wall switch is given, and optimization is turned on.\n\n2019-09-18  Bob Duff  <duff@adacore.com>\n\ngcc/ada/\n\n\t* libgnat/a-cbhama.adb, libgnat/a-cbhase.adb,\n\tlibgnat/a-cbmutr.adb, libgnat/a-cborma.adb,\n\tlibgnat/a-cborse.adb, libgnat/a-cobove.adb (Copy): Avoid reading\n\tthe uninitialized variable C in the Checks = False case. Change\n\tvariable to be a constant.\n\ngcc/testsuite/\n\n\t* gnat.dg/containers1.adb, gnat.dg/containers1.ads: New\n\ttestcase.\n\nFrom-SVN: r275839", "tree": {"sha": "d58bde07e155171f6e90491b6562ad3421b4c2af", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d58bde07e155171f6e90491b6562ad3421b4c2af"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5ce1c7733b720d583eb46910e738adc932ecf7ce", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5ce1c7733b720d583eb46910e738adc932ecf7ce", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5ce1c7733b720d583eb46910e738adc932ecf7ce", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5ce1c7733b720d583eb46910e738adc932ecf7ce/comments", "author": {"login": "bobduff", "id": 29099567, "node_id": "MDQ6VXNlcjI5MDk5NTY3", "avatar_url": "https://avatars.githubusercontent.com/u/29099567?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bobduff", "html_url": "https://github.com/bobduff", "followers_url": "https://api.github.com/users/bobduff/followers", "following_url": "https://api.github.com/users/bobduff/following{/other_user}", "gists_url": "https://api.github.com/users/bobduff/gists{/gist_id}", "starred_url": "https://api.github.com/users/bobduff/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bobduff/subscriptions", "organizations_url": "https://api.github.com/users/bobduff/orgs", "repos_url": "https://api.github.com/users/bobduff/repos", "events_url": "https://api.github.com/users/bobduff/events{/privacy}", "received_events_url": "https://api.github.com/users/bobduff/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "2b6cd962513387303661614b292397cb6432590c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2b6cd962513387303661614b292397cb6432590c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2b6cd962513387303661614b292397cb6432590c"}], "stats": {"total": 107, "additions": 54, "deletions": 53}, "files": [{"sha": "d4c51d102d7783b3dfdb3139bf5699b5170fabb4", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5ce1c7733b720d583eb46910e738adc932ecf7ce/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5ce1c7733b720d583eb46910e738adc932ecf7ce/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=5ce1c7733b720d583eb46910e738adc932ecf7ce", "patch": "@@ -1,3 +1,11 @@\n+2019-09-18  Bob Duff  <duff@adacore.com>\n+\n+\t* libgnat/a-cbhama.adb, libgnat/a-cbhase.adb,\n+\tlibgnat/a-cbmutr.adb, libgnat/a-cborma.adb,\n+\tlibgnat/a-cborse.adb, libgnat/a-cobove.adb (Copy): Avoid reading\n+\tthe uninitialized variable C in the Checks = False case. Change\n+\tvariable to be a constant.\n+\n 2019-09-18  Claire Dross  <dross@adacore.com>\n \n \t* libgnat/a-cofuma.adb (Remove, Elements_Equal_Except,"}, {"sha": "74e3d95748a6222470407ecab18163d983204bb3", "filename": "gcc/ada/libgnat/a-cbhama.adb", "status": "modified", "additions": 5, "deletions": 9, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5ce1c7733b720d583eb46910e738adc932ecf7ce/gcc%2Fada%2Flibgnat%2Fa-cbhama.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5ce1c7733b720d583eb46910e738adc932ecf7ce/gcc%2Fada%2Flibgnat%2Fa-cbhama.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fa-cbhama.adb?ref=5ce1c7733b720d583eb46910e738adc932ecf7ce", "patch": "@@ -262,18 +262,14 @@ package body Ada.Containers.Bounded_Hashed_Maps is\n       Capacity : Count_Type := 0;\n       Modulus  : Hash_Type := 0) return Map\n    is\n-      C : Count_Type;\n+      C : constant Count_Type :=\n+        (if Capacity = 0 then Source.Length\n+         else Capacity);\n       M : Hash_Type;\n \n    begin\n-      if Capacity = 0 then\n-         C := Source.Length;\n-\n-      elsif Capacity >= Source.Length then\n-         C := Capacity;\n-\n-      elsif Checks then\n-         raise Capacity_Error with \"Capacity value too small\";\n+      if Checks and then C < Source.Length then\n+         raise Capacity_Error with \"Capacity too small\";\n       end if;\n \n       if Modulus = 0 then"}, {"sha": "390e82bb48543f006178c4075daa87956fc72591", "filename": "gcc/ada/libgnat/a-cbhase.adb", "status": "modified", "additions": 5, "deletions": 7, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5ce1c7733b720d583eb46910e738adc932ecf7ce/gcc%2Fada%2Flibgnat%2Fa-cbhase.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5ce1c7733b720d583eb46910e738adc932ecf7ce/gcc%2Fada%2Flibgnat%2Fa-cbhase.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fa-cbhase.adb?ref=5ce1c7733b720d583eb46910e738adc932ecf7ce", "patch": "@@ -254,16 +254,14 @@ package body Ada.Containers.Bounded_Hashed_Sets is\n       Capacity : Count_Type := 0;\n       Modulus  : Hash_Type := 0) return Set\n    is\n-      C : Count_Type;\n+      C : constant Count_Type :=\n+        (if Capacity = 0 then Source.Length\n+         else Capacity);\n       M : Hash_Type;\n \n    begin\n-      if Capacity = 0 then\n-         C := Source.Length;\n-      elsif Capacity >= Source.Length then\n-         C := Capacity;\n-      elsif Checks then\n-         raise Capacity_Error with \"Capacity value too small\";\n+      if Checks and then C < Source.Length then\n+         raise Capacity_Error with \"Capacity too small\";\n       end if;\n \n       if Modulus = 0 then"}, {"sha": "4c0f8fe1c297ae0d1ab1269e7b7c3cadb8472992", "filename": "gcc/ada/libgnat/a-cbmutr.adb", "status": "modified", "additions": 5, "deletions": 8, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5ce1c7733b720d583eb46910e738adc932ecf7ce/gcc%2Fada%2Flibgnat%2Fa-cbmutr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5ce1c7733b720d583eb46910e738adc932ecf7ce/gcc%2Fada%2Flibgnat%2Fa-cbmutr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fa-cbmutr.adb?ref=5ce1c7733b720d583eb46910e738adc932ecf7ce", "patch": "@@ -625,15 +625,12 @@ package body Ada.Containers.Bounded_Multiway_Trees is\n      (Source   : Tree;\n       Capacity : Count_Type := 0) return Tree\n    is\n-      C : Count_Type;\n-\n+      C : constant Count_Type :=\n+        (if Capacity = 0 then Source.Count\n+         else Capacity);\n    begin\n-      if Capacity = 0 then\n-         C := Source.Count;\n-      elsif Capacity >= Source.Count then\n-         C := Capacity;\n-      elsif Checks then\n-         raise Capacity_Error with \"Capacity value too small\";\n+      if Checks and then C < Source.Count then\n+         raise Capacity_Error with \"Capacity too small\";\n       end if;\n \n       return Target : Tree (Capacity => C) do"}, {"sha": "e4e4b57dc7282e1e86eb9ed7911611b8dcef18ee", "filename": "gcc/ada/libgnat/a-cborma.adb", "status": "modified", "additions": 5, "deletions": 10, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5ce1c7733b720d583eb46910e738adc932ecf7ce/gcc%2Fada%2Flibgnat%2Fa-cborma.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5ce1c7733b720d583eb46910e738adc932ecf7ce/gcc%2Fada%2Flibgnat%2Fa-cborma.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fa-cborma.adb?ref=5ce1c7733b720d583eb46910e738adc932ecf7ce", "patch": "@@ -464,17 +464,12 @@ package body Ada.Containers.Bounded_Ordered_Maps is\n    ----------\n \n    function Copy (Source : Map; Capacity : Count_Type := 0) return Map is\n-      C : Count_Type;\n-\n+      C : constant Count_Type :=\n+        (if Capacity = 0 then Source.Length\n+         else Capacity);\n    begin\n-      if Capacity = 0 then\n-         C := Source.Length;\n-\n-      elsif Capacity >= Source.Length then\n-         C := Capacity;\n-\n-      elsif Checks then\n-         raise Capacity_Error with \"Capacity value too small\";\n+      if Checks and then C < Source.Length then\n+         raise Capacity_Error with \"Capacity too small\";\n       end if;\n \n       return Target : Map (Capacity => C) do"}, {"sha": "7b983781e60b0dbf431f7d32f436ee496ecad678", "filename": "gcc/ada/libgnat/a-cborse.adb", "status": "modified", "additions": 5, "deletions": 8, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5ce1c7733b720d583eb46910e738adc932ecf7ce/gcc%2Fada%2Flibgnat%2Fa-cborse.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5ce1c7733b720d583eb46910e738adc932ecf7ce/gcc%2Fada%2Flibgnat%2Fa-cborse.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fa-cborse.adb?ref=5ce1c7733b720d583eb46910e738adc932ecf7ce", "patch": "@@ -442,15 +442,12 @@ package body Ada.Containers.Bounded_Ordered_Sets is\n    ----------\n \n    function Copy (Source : Set; Capacity : Count_Type := 0) return Set is\n-      C : Count_Type;\n-\n+      C : constant Count_Type :=\n+        (if Capacity = 0 then Source.Length\n+         else Capacity);\n    begin\n-      if Capacity = 0 then\n-         C := Source.Length;\n-      elsif Capacity >= Source.Length then\n-         C := Capacity;\n-      elsif Checks then\n-         raise Capacity_Error with \"Capacity value too small\";\n+      if Checks and then C < Source.Length then\n+         raise Capacity_Error with \"Capacity too small\";\n       end if;\n \n       return Target : Set (Capacity => C) do"}, {"sha": "3e48bc60e8ab6ba412f9a7e19a69aa6f74dcf8c9", "filename": "gcc/ada/libgnat/a-cobove.adb", "status": "modified", "additions": 5, "deletions": 11, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5ce1c7733b720d583eb46910e738adc932ecf7ce/gcc%2Fada%2Flibgnat%2Fa-cobove.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5ce1c7733b720d583eb46910e738adc932ecf7ce/gcc%2Fada%2Flibgnat%2Fa-cobove.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fa-cobove.adb?ref=5ce1c7733b720d583eb46910e738adc932ecf7ce", "patch": "@@ -451,18 +451,12 @@ package body Ada.Containers.Bounded_Vectors is\n      (Source   : Vector;\n       Capacity : Count_Type := 0) return Vector\n    is\n-      C : Count_Type;\n-\n+      C : constant Count_Type :=\n+        (if Capacity = 0 then Source.Length\n+         else Capacity);\n    begin\n-      if Capacity = 0 then\n-         C := Source.Length;\n-\n-      elsif Capacity >= Source.Length then\n-         C := Capacity;\n-\n-      elsif Checks then\n-         raise Capacity_Error\n-           with \"Requested capacity is less than Source length\";\n+      if Checks and then C < Source.Length then\n+         raise Capacity_Error with \"Capacity too small\";\n       end if;\n \n       return Target : Vector (C) do"}, {"sha": "5e143b57456799b1c23bf29a734cd1e6701308d4", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5ce1c7733b720d583eb46910e738adc932ecf7ce/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5ce1c7733b720d583eb46910e738adc932ecf7ce/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=5ce1c7733b720d583eb46910e738adc932ecf7ce", "patch": "@@ -1,3 +1,8 @@\n+2019-09-18  Bob Duff  <duff@adacore.com>\n+\n+\t* gnat.dg/containers1.adb, gnat.dg/containers1.ads: New\n+\ttestcase.\n+\n 2019-09-18  Richard Sandiford  <richard.sandiford@arm.com>\n \n \t* gcc.target/i386/pr82361-1.c (f1, f2, f3, f4, f5, f6): Force"}, {"sha": "47ac655e21bd07e9c0023206b66cb4e8e9339d57", "filename": "gcc/testsuite/gnat.dg/containers1.adb", "status": "added", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5ce1c7733b720d583eb46910e738adc932ecf7ce/gcc%2Ftestsuite%2Fgnat.dg%2Fcontainers1.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5ce1c7733b720d583eb46910e738adc932ecf7ce/gcc%2Ftestsuite%2Fgnat.dg%2Fcontainers1.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Fcontainers1.adb?ref=5ce1c7733b720d583eb46910e738adc932ecf7ce", "patch": "@@ -0,0 +1,5 @@\n+--  { dg-do compile }\n+--  { dg-options \"-Wall -O2\" }\n+package body Containers1 is\n+   procedure Dummy is null;\n+end Containers1;"}, {"sha": "3c1fd89b228ee0fea002b984e5a573d5aa59b4d0", "filename": "gcc/testsuite/gnat.dg/containers1.ads", "status": "added", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5ce1c7733b720d583eb46910e738adc932ecf7ce/gcc%2Ftestsuite%2Fgnat.dg%2Fcontainers1.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5ce1c7733b720d583eb46910e738adc932ecf7ce/gcc%2Ftestsuite%2Fgnat.dg%2Fcontainers1.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Fcontainers1.ads?ref=5ce1c7733b720d583eb46910e738adc932ecf7ce", "patch": "@@ -0,0 +1,6 @@\n+with Ada.Containers.Bounded_Ordered_Sets; use Ada.Containers;\n+package Containers1 is\n+   pragma Suppress (All_Checks);\n+   package Sets is new Bounded_Ordered_Sets (Boolean);\n+   procedure Dummy;\n+end Containers1;\n\\ No newline at end of file"}]}