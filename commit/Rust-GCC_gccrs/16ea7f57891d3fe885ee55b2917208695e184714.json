{"sha": "16ea7f57891d3fe885ee55b2917208695e184714", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTZlYTdmNTc4OTFkM2ZlODg1ZWU1NWIyOTE3MjA4Njk1ZTE4NDcxNA==", "commit": {"author": {"name": "Alex Coplan", "email": "alex.coplan@arm.com", "date": "2021-04-06T08:06:27Z"}, "committer": {"name": "Alex Coplan", "email": "alex.coplan@arm.com", "date": "2021-04-06T08:06:27Z"}, "message": "arm: Fix PCS for SFmode -> SImode libcalls [PR99748]\n\nThis patch fixes PR99748 which shows us trying to pass the argument to\n__aeabi_f2iz in the VFP register s0 when the library function is\nexpecting to use the GPR r0. It also fixes the __aeabi_f2uiz case which\nwas broken in the same way.\n\nFor the testcase in the PR, here is the code we generate before the\npatch (with -mfloat-abi=hard -march=armv8.1-m.main+mve -O0):\n\nmain:\n    push    {r7, lr}\n    sub     sp, sp, #8\n    add     r7, sp, #0\n    mov     r3, #1065353216\n    str     r3, [r7, #4]    @ float\n    vldr.32 s0, [r7, #4]\n    bl      __aeabi_f2iz\n    mov     r3, r0\n    cmp     r3, #1\n    [...]\n\nThis becomes:\n\nmain:\n    push    {r7, lr}\n    sub     sp, sp, #8\n    add     r7, sp, #0\n    mov     r3, #1065353216\n    str     r3, [r7, #4]    @ float\n    ldr     r0, [r7, #4]    @ float\n    bl      __aeabi_f2iz\n    mov     r3, r0\n    cmp     r3, #1\n    [...]\n\nafter the patch. We see a similar change for the same testcase with a\ncast to unsigned instead of int.\n\ngcc/ChangeLog:\n\n\tPR target/99748\n\t* config/arm/arm.c (arm_libcall_uses_aapcs_base): Also use base\n\tPCS for [su]fix_optab.", "tree": {"sha": "bb559ff2aef563aac20195fa7580f9deaa2cc860", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/bb559ff2aef563aac20195fa7580f9deaa2cc860"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/16ea7f57891d3fe885ee55b2917208695e184714", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/16ea7f57891d3fe885ee55b2917208695e184714", "html_url": "https://github.com/Rust-GCC/gccrs/commit/16ea7f57891d3fe885ee55b2917208695e184714", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/16ea7f57891d3fe885ee55b2917208695e184714/comments", "author": {"login": "acoplan-arm", "id": 86676934, "node_id": "MDQ6VXNlcjg2Njc2OTM0", "avatar_url": "https://avatars.githubusercontent.com/u/86676934?v=4", "gravatar_id": "", "url": "https://api.github.com/users/acoplan-arm", "html_url": "https://github.com/acoplan-arm", "followers_url": "https://api.github.com/users/acoplan-arm/followers", "following_url": "https://api.github.com/users/acoplan-arm/following{/other_user}", "gists_url": "https://api.github.com/users/acoplan-arm/gists{/gist_id}", "starred_url": "https://api.github.com/users/acoplan-arm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/acoplan-arm/subscriptions", "organizations_url": "https://api.github.com/users/acoplan-arm/orgs", "repos_url": "https://api.github.com/users/acoplan-arm/repos", "events_url": "https://api.github.com/users/acoplan-arm/events{/privacy}", "received_events_url": "https://api.github.com/users/acoplan-arm/received_events", "type": "User", "site_admin": false}, "committer": {"login": "acoplan-arm", "id": 86676934, "node_id": "MDQ6VXNlcjg2Njc2OTM0", "avatar_url": "https://avatars.githubusercontent.com/u/86676934?v=4", "gravatar_id": "", "url": "https://api.github.com/users/acoplan-arm", "html_url": "https://github.com/acoplan-arm", "followers_url": "https://api.github.com/users/acoplan-arm/followers", "following_url": "https://api.github.com/users/acoplan-arm/following{/other_user}", "gists_url": "https://api.github.com/users/acoplan-arm/gists{/gist_id}", "starred_url": "https://api.github.com/users/acoplan-arm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/acoplan-arm/subscriptions", "organizations_url": "https://api.github.com/users/acoplan-arm/orgs", "repos_url": "https://api.github.com/users/acoplan-arm/repos", "events_url": "https://api.github.com/users/acoplan-arm/events{/privacy}", "received_events_url": "https://api.github.com/users/acoplan-arm/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "55f40d968b0bd3be4478a9481e829a99ee0fa04f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/55f40d968b0bd3be4478a9481e829a99ee0fa04f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/55f40d968b0bd3be4478a9481e829a99ee0fa04f"}], "stats": {"total": 4, "additions": 4, "deletions": 0}, "files": [{"sha": "8910dad82146f12559ca613ddabe3d651161b70d", "filename": "gcc/config/arm/arm.c", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/16ea7f57891d3fe885ee55b2917208695e184714/gcc%2Fconfig%2Farm%2Farm.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/16ea7f57891d3fe885ee55b2917208695e184714/gcc%2Fconfig%2Farm%2Farm.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm.c?ref=16ea7f57891d3fe885ee55b2917208695e184714", "patch": "@@ -5773,6 +5773,10 @@ arm_libcall_uses_aapcs_base (const_rtx libcall)\n \t\t   convert_optab_libfunc (sfix_optab, DImode, SFmode));\n       add_libcall (libcall_htab,\n \t\t   convert_optab_libfunc (ufix_optab, DImode, SFmode));\n+      add_libcall (libcall_htab,\n+\t\t   convert_optab_libfunc (sfix_optab, SImode, SFmode));\n+      add_libcall (libcall_htab,\n+\t\t   convert_optab_libfunc (ufix_optab, SImode, SFmode));\n \n       /* Values from double-precision helper functions are returned in core\n \t registers if the selected core only supports single-precision"}]}