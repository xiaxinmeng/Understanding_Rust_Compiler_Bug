{"sha": "d345a9814646a6c2c154bee5b61dfdfe88cc1145", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDM0NWE5ODE0NjQ2YTZjMmMxNTRiZWU1YjYxZGZkZmU4OGNjMTE0NQ==", "commit": {"author": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1992-12-28T07:33:39Z"}, "committer": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1992-12-28T07:33:39Z"}, "message": "(CPP_SPEC): Define -D__i486__ if compile for i486.\n\n(ASM_OUTPUT_ADDR_DIFF_ELT, JUMP_TABLES_IN_TEXT_SECTION):\nCopy definitions from i386v4.h to get PIC code correct.\n(FUNCTION_PROFILER): Copy definition from i386bsd.h.\n(COMMENT_BEGIN, ASM_APP_ON, ASM_APP_OFF): Copy from i386bsd.h\nto prepare for new GAS.\n\nFrom-SVN: r2967", "tree": {"sha": "433377fa8a16752de31665954650d53f0074faed", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/433377fa8a16752de31665954650d53f0074faed"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d345a9814646a6c2c154bee5b61dfdfe88cc1145", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d345a9814646a6c2c154bee5b61dfdfe88cc1145", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d345a9814646a6c2c154bee5b61dfdfe88cc1145", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d345a9814646a6c2c154bee5b61dfdfe88cc1145/comments", "author": null, "committer": null, "parents": [{"sha": "969f50b9d9e16d623c0fea979416b9bbd6e34372", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/969f50b9d9e16d623c0fea979416b9bbd6e34372", "html_url": "https://github.com/Rust-GCC/gccrs/commit/969f50b9d9e16d623c0fea979416b9bbd6e34372"}], "stats": {"total": 54, "additions": 54, "deletions": 0}, "files": [{"sha": "70eca79c9f9dcce811b8936aac04204095a0ba51", "filename": "gcc/config/i386/linux.h", "status": "modified", "additions": 54, "deletions": 0, "changes": 54, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d345a9814646a6c2c154bee5b61dfdfe88cc1145/gcc%2Fconfig%2Fi386%2Flinux.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d345a9814646a6c2c154bee5b61dfdfe88cc1145/gcc%2Fconfig%2Fi386%2Flinux.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Flinux.h?ref=d345a9814646a6c2c154bee5b61dfdfe88cc1145", "patch": "@@ -27,6 +27,13 @@\n #undef CPP_PREDEFINES\n #define CPP_PREDEFINES \"-Dunix -Di386 -Dlinux\"\n \n+#undef CPP_SPEC\n+#if TARGET_CPU_DEFAULT == 2\n+#define CPP_SPEC \"%{!m386:-D__i486__} %{posix:-D_POSIX_SOURCE}\"\n+#else\n+#define CPP_SPEC \"%{m486:-D__i486__} %{posix:-D_POSIX_SOURCE}\"\n+#endif\n+\n #undef SIZE_TYPE\n #define SIZE_TYPE \"unsigned int\"\n \n@@ -82,3 +89,50 @@\n #define GPLUSPLUS_INCLUDE_DIR \"/usr/g++-include\"\n \n #endif\n+\f\n+/* The following macros are copied from i386bsd.h.  */\n+\n+/* Redefine this to use %eax instead of %edx.  */\n+#undef FUNCTION_PROFILER\n+#define FUNCTION_PROFILER(FILE, LABELNO)  \\\n+{\t\t\t\t\t\t\t\t\t\\\n+  if (flag_pic)\t\t\t\t\t\t\t\t\\\n+    {\t\t\t\t\t\t\t\t\t\\\n+      fprintf (FILE, \"\\tleal %sP%d@GOTOFF(%%ebx),%%eax\\n\",\t\t\\\n+\t       LPREFIX, (LABELNO));\t\t\t\t\t\\\n+      fprintf (FILE, \"\\tcall *_mcount@GOT(%%ebx)\\n\");\t\t\t\\\n+    }\t\t\t\t\t\t\t\t\t\\\n+  else\t\t\t\t\t\t\t\t\t\\\n+    {\t\t\t\t\t\t\t\t\t\\\n+      fprintf (FILE, \"\\tmovl $%sP%d,%%eax\\n\", LPREFIX, (LABELNO));\t\\\n+      fprintf (FILE, \"\\tcall _mcount\\n\");\t\t\t\t\\\n+    }\t\t\t\t\t\t\t\t\t\\\n+}\n+\n+/* There are conflicting reports about whether this system uses\n+   a different assembler syntax.  wilson@cygnus.com says # is right.  */\n+#undef COMMENT_BEGIN\n+#define COMMENT_BEGIN \"#\"\n+\n+#undef ASM_APP_ON\n+#define ASM_APP_ON \"#APP\\n\"\n+\n+#undef ASM_APP_OFF\n+#define ASM_APP_OFF \"#NO_APP\\n\"\n+\f\n+/* The following macros are copied from i386v4.h.  */\n+\n+/* These have to be defined to get PIC code correct */\n+\n+/* This is how to output an element of a case-vector that is relative.\n+   This is only used for PIC code.  See comments by the `casesi' insn in\n+   i386.md for an explanation of the expression this outputs. */\n+\n+#undef ASM_OUTPUT_ADDR_DIFF_ELT\n+#define ASM_OUTPUT_ADDR_DIFF_ELT(FILE, VALUE, REL) \\\n+  fprintf (FILE, \"\\t.long _GLOBAL_OFFSET_TABLE_+[.-%s%d]\\n\", LPREFIX, VALUE)\n+\n+/* Indicate that jump tables go in the text section.  This is\n+   necessary when compiling PIC code.  */\n+\n+#define JUMP_TABLES_IN_TEXT_SECTION"}]}