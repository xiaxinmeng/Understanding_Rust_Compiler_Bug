{"sha": "c078d746571298bb36344af73bc9e7203c1d7b4f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzA3OGQ3NDY1NzEyOThiYjM2MzQ0YWY3M2JjOWU3MjAzYzFkN2I0Zg==", "commit": {"author": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2017-11-15T22:26:46Z"}, "committer": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2017-11-15T22:26:46Z"}, "message": "i386.c (x86_print_call_or_nop): Emit 5 byte nop explicitly as a stream of bytes.\n\n\t* config/i386/i386.c (x86_print_call_or_nop): Emit 5 byte nop\n\texplicitly as a stream of bytes.\n\nFrom-SVN: r254788", "tree": {"sha": "ece74014dd6cbeb6421b53fcdb50ae4be03c1fe6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ece74014dd6cbeb6421b53fcdb50ae4be03c1fe6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c078d746571298bb36344af73bc9e7203c1d7b4f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c078d746571298bb36344af73bc9e7203c1d7b4f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c078d746571298bb36344af73bc9e7203c1d7b4f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c078d746571298bb36344af73bc9e7203c1d7b4f/comments", "author": null, "committer": null, "parents": [{"sha": "3ef9e1ec4bcd859fca2e8b80739ec5d98618bb23", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3ef9e1ec4bcd859fca2e8b80739ec5d98618bb23", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3ef9e1ec4bcd859fca2e8b80739ec5d98618bb23"}], "stats": {"total": 40, "additions": 24, "deletions": 16}, "files": [{"sha": "5ee467d399fe9d71337ae9a6a949093a7b398fed", "filename": "gcc/ChangeLog", "status": "modified", "additions": 22, "deletions": 15, "changes": 37, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c078d746571298bb36344af73bc9e7203c1d7b4f/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c078d746571298bb36344af73bc9e7203c1d7b4f/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=c078d746571298bb36344af73bc9e7203c1d7b4f", "patch": "@@ -1,3 +1,8 @@\n+2017-11-15  Uros Bizjak  <ubizjak@gmail.com>\n+\n+\t* config/i386/i386.c (x86_print_call_or_nop): Emit 5 byte nop\n+\texplicitly as a stream of bytes.\n+\n 2017-11-15  Bill Schmidt  <wschmidt@linux.vnet.ibm.com>\n \n \t* config/rs6000/altivec.h (vec_xst_be): New #define.\n@@ -356,7 +361,7 @@\n \tle_ and be_ prefixes to swap* variables.  Remove\n \tif (VECTOR_ELT_ORDER_BIG) statement. Remove E_V16QImode case\n \tstatements.\n-\t\n+\n 2017-11-14  Jason Merrill  <jason@redhat.com>\n \n \tSupport GTY((cache)) on hash_map.\n@@ -797,16 +802,16 @@\n \n 2017-11-10  Julia Koval  <julia.koval@intel.com>\n \n-\t * config/i386/gfniintrin.h (_mm_gf2p8affine_epi64_epi8,\n-\t _mm256_gf2p8affine_epi64_epi8, _mm_mask_gf2p8affine_epi64_epi8,\n-\t _mm_maskz_gf2p8affine_epi64_epi8, _mm256_mask_gf2p8affine_epi64_epi8,\n-\t _mm256_maskz_gf2p8affine_epi64_epi8,\n-\t _mm512_mask_gf2p8affine_epi64_epi8, _mm512_gf2p8affine_epi64_epi8\n-\t _mm512_maskz_gf2p8affine_epi64_epi8): New intrinsics.\n-\t * config/i386/i386-builtin.def (__builtin_ia32_vgf2p8affineqb_v64qi,\n-\t __builtin_ia32_vgf2p8affineqb_v32qi,\n-\t __builtin_ia32_vgf2p8affineqb_v16qi): New builtins.\n-\t * config/i386/sse.md (vgf2p8affineqb_<mode><mask_name>): New pattern.\n+\t* config/i386/gfniintrin.h (_mm_gf2p8affine_epi64_epi8)\n+\t(_mm256_gf2p8affine_epi64_epi8, _mm_mask_gf2p8affine_epi64_epi8)\n+\t(_mm_maskz_gf2p8affine_epi64_epi8, _mm256_mask_gf2p8affine_epi64_epi8)\n+\t(_mm256_maskz_gf2p8affine_epi64_epi8)\n+\t(_mm512_mask_gf2p8affine_epi64_epi8, _mm512_gf2p8affine_epi64_epi8)\n+\t(_mm512_maskz_gf2p8affine_epi64_epi8): New intrinsics.\n+\t* config/i386/i386-builtin.def (__builtin_ia32_vgf2p8affineqb_v64qi)\n+\t(__builtin_ia32_vgf2p8affineqb_v32qi)\n+\t(__builtin_ia32_vgf2p8affineqb_v16qi): New builtins.\n+\t* config/i386/sse.md (vgf2p8affineqb_<mode><mask_name>): New pattern.\n \n 2017-11-10  Tamar Christina  <tamar.christina@arm.com>\n \n@@ -815,7 +820,8 @@\n \t(arm_option_override): Refactor.\n \t(arm_option_reconfigure_globals): New.\n \t(arm_options_perform_arch_sanity_checks): New.\n-\t* config/arm/arm-protos.h (arm_option_reconfigure_globals): New prototype.\n+\t* config/arm/arm-protos.h (arm_option_reconfigure_globals):\n+\tNew prototype.\n \t(arm_options_perform_arch_sanity_checks): Likewise\n \n 2017-11-10  Pat Haugen  <pthaugen@us.ibm.com>\n@@ -971,7 +977,7 @@\n \tUse vr_values to get to dump_all_value_ranges member function.\n \tRemove call to vrp_free_lattice.  Call vrp_initialize, vrp_finalize,\n \tand simplify_cond_using_ranges_2 via vrp_prop class instance.\n-\tPass vr_values class instance down to identify_jump_threads.  \n+\tPass vr_values class instance down to identify_jump_threads.\n \tRemove call to vrp_free_lattice.\n \t(debug_all_value_ranges): Remove.\n \n@@ -1633,7 +1639,8 @@\n \t* config/arm/arm.md (predicable_short_it): Change default to \"no\",\n \timprove documentation, remove uses that are identical to the default.\n \t(enabled_for_depr_it): Rename to enabled_for_short_it.\n-\t* gcc/config/arm/arm-fixed.md (predicable_short_it): Remove default uses.\n+\t* gcc/config/arm/arm-fixed.md (predicable_short_it):\n+\tRemove default uses.\n \t* gcc/config/arm/ldmstm.md (predicable_short_it): Likewise.\n \t* gcc/config/arm/sync.md (predicable_short_it): Likewise.\n \t* gcc/config/arm/thumb2.md (predicable_short_it): Likewise.\n@@ -2074,7 +2081,7 @@\n \t(find_trace): Use to_frequency.\n \t(tail_duplicate): Use to_frequency.\n \t* trans-mem.c (expand_transaction): Do not update frequency.\n-\t* tree-call-cdce.c: Do not update frequency. \n+\t* tree-call-cdce.c: Do not update frequency.\n \t* tree-cfg.c (gimple_find_sub_bbs): Likewise.\n \t(gimple_merge_blocks): Likewise.\n \t(gimple_split_edge): Likewise."}, {"sha": "85cc2a93bbf3f3b4a584d57d277a567c4697b7fe", "filename": "gcc/config/i386/i386.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c078d746571298bb36344af73bc9e7203c1d7b4f/gcc%2Fconfig%2Fi386%2Fi386.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c078d746571298bb36344af73bc9e7203c1d7b4f/gcc%2Fconfig%2Fi386%2Fi386.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.c?ref=c078d746571298bb36344af73bc9e7203c1d7b4f", "patch": "@@ -40474,7 +40474,8 @@ static void\n x86_print_call_or_nop (FILE *file, const char *target)\n {\n   if (flag_nop_mcount)\n-    fprintf (file, \"1:\\tnopl 0x00(%%eax,%%eax,1)\\n\"); /* 5 byte nop.  */\n+    /* 5 byte nop: nopl 0(%[re]ax,%[re]ax,1) */\n+    fprintf (file, \"1:\" ASM_BYTE \"0x0f, 0x1f, 0x44, 0x00, 0x00\\n\");\n   else\n     fprintf (file, \"1:\\tcall\\t%s\\n\", target);\n }"}]}