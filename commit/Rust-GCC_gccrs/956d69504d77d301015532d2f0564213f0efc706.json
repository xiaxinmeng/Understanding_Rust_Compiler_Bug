{"sha": "956d69504d77d301015532d2f0564213f0efc706", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTU2ZDY5NTA0ZDc3ZDMwMTAxNTUzMmQyZjA1NjQyMTNmMGVmYzcwNg==", "commit": {"author": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "1997-12-07T00:31:01Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "1997-12-07T00:31:01Z"}, "message": "Merge from gcc-2.8\n\nFrom-SVN: r16987", "tree": {"sha": "ec80f8d1e46852ac1ba45aecdcda7201c302ac6f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ec80f8d1e46852ac1ba45aecdcda7201c302ac6f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/956d69504d77d301015532d2f0564213f0efc706", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/956d69504d77d301015532d2f0564213f0efc706", "html_url": "https://github.com/Rust-GCC/gccrs/commit/956d69504d77d301015532d2f0564213f0efc706", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/956d69504d77d301015532d2f0564213f0efc706/comments", "author": null, "committer": null, "parents": [{"sha": "27b6b158c29b45fd80c2f104d5da1f4bc818d7ab", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/27b6b158c29b45fd80c2f104d5da1f4bc818d7ab", "html_url": "https://github.com/Rust-GCC/gccrs/commit/27b6b158c29b45fd80c2f104d5da1f4bc818d7ab"}], "stats": {"total": 19954, "additions": 14034, "deletions": 5920}, "files": [{"sha": "a7d3837d103a46f74eca4e4f0bb5f1ae85dbd9b2", "filename": "gcc/ChangeLog.10", "status": "modified", "additions": 5833, "deletions": 228, "changes": 6061, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/956d69504d77d301015532d2f0564213f0efc706/gcc%2FChangeLog.10", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/956d69504d77d301015532d2f0564213f0efc706/gcc%2FChangeLog.10", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog.10?ref=956d69504d77d301015532d2f0564213f0efc706"}, {"sha": "2eccf3e2c962286689faba0d80757a1aeceb8125", "filename": "gcc/ChangeLog.11", "status": "modified", "additions": 1383, "deletions": 537, "changes": 1920, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/956d69504d77d301015532d2f0564213f0efc706/gcc%2FChangeLog.11", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/956d69504d77d301015532d2f0564213f0efc706/gcc%2FChangeLog.11", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog.11?ref=956d69504d77d301015532d2f0564213f0efc706"}, {"sha": "6c0b8639ac4b7b1fd4bc27820cfc6d689461e44c", "filename": "gcc/INSTALL", "status": "modified", "additions": 4, "deletions": 9, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/956d69504d77d301015532d2f0564213f0efc706/gcc%2FINSTALL", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/956d69504d77d301015532d2f0564213f0efc706/gcc%2FINSTALL", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FINSTALL?ref=956d69504d77d301015532d2f0564213f0efc706", "patch": "@@ -613,8 +613,7 @@ special things you must know:\n `alpha-*-osf1'\n      Systems using processors that implement the DEC Alpha architecture\n      and are running the DEC Unix (OSF/1) operating system, for example\n-     the DEC Alpha AXP systems.  (VMS on the Alpha is not currently\n-     supported by GNU CC.)\n+     the DEC Alpha AXP systems.CC.)\n \n      GNU CC writes a `.verstamp' directive to the assembler output file\n      unless it is built as a cross-compiler.  It gets the version to\n@@ -678,7 +677,7 @@ special things you must know:\n `arm-*-linuxaout'\n      Any of the ARM family processors running the Linux-based GNU\n      system with the `a.out' binary format (ELF is not yet supported).\n-     You must use version 2.8.1.0.7 or later of the Linux binutils,\n+     You must use version 2.8.1.0.7 or later of the GNU/Linux binutils,\n      which you can download from `sunsite.unc.edu:/pub/Linux/GCC' and\n      other mirror sites for Linux-based GNU systems.\n \n@@ -830,9 +829,7 @@ special things you must know:\n      version 2.2 or later.\n \n `i386-sequent-bsd'\n-     Go to the Berkeley universe before compiling.  In addition, you\n-     probably need to create a file named `string.h' containing just\n-     one line: `#include <strings.h>'.\n+     Go to the Berkeley universe before compiling.\n \n `i386-sequent-ptx1*'\n      Sequent DYNIX/ptx 1.x.\n@@ -1184,9 +1181,7 @@ special things you must know:\n      Emacs.\n \n `ns32k-sequent'\n-     Go to the Berkeley universe before compiling.  In addition, you\n-     probably need to create a file named `string.h' containing just\n-     one line: `#include <strings.h>'.\n+     Go to the Berkeley universe before compiling.\n \n `ns32k-utek'\n      UTEK ns32000 system (\"merlin\").  The C compiler that comes with"}, {"sha": "2f1b08192b9c7d6f408d46acfed8597b559bd3ff", "filename": "gcc/Makefile.in", "status": "modified", "additions": 49, "deletions": 43, "changes": 92, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/956d69504d77d301015532d2f0564213f0efc706/gcc%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/956d69504d77d301015532d2f0564213f0efc706/gcc%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FMakefile.in?ref=956d69504d77d301015532d2f0564213f0efc706", "patch": "@@ -341,7 +341,7 @@ LIB1FUNCS_EXTRA =\n LIB2FUNCS_EXTRA = \n \n # Default float.h source to use for cross-compiler.\n-# This is overidden by configure.\n+# This is overridden by configure.\n CROSS_FLOAT_H=$(srcdir)/config/float-@float_format@.h\n \n # Program to convert libraries.\n@@ -655,10 +655,12 @@ LIB2FUNCS = _muldi3 _divdi3 _moddi3 _udivdi3 _umoddi3 _negdi2 \\\n # If it is, rm *.o is an easy way to do it.\n # CONFIG_H = $(host_xm_file) $(tm_file)\n CONFIG_H =\n-RTL_H = rtl.h rtl.def machmode.h machmode.def\n-TREE_H = tree.h real.h tree.def machmode.h machmode.def\n+RTL_H = rtl.h rtl.def gansidecl.h machmode.h machmode.def\n+TREE_H = tree.h real.h tree.def gansidecl.h machmode.h machmode.def\n BYTECODE_H = bytecode.h bc-emit.h bc-optab.h\n BASIC_BLOCK_H = basic-block.h bitmap.h\n+DEMANGLE_H = demangle.h gansidecl.h\n+RECOG_H = recog.h gansidecl.h\n #\f\n # Language makefile fragments.\n \n@@ -803,7 +805,7 @@ gfloat.h: $(FLOAT_H)\n # Make it empty if we can use the system float.h without changes.\n float.h-nat: enquire\n \t-./enquire -f > tmp-float.h\n-\tgrep '#define [^_]' tmp-float.h >/dev/null || echo > tmp-float.h\n+\tgrep '#define [^_]' tmp-float.h >/dev/null || true > tmp-float.h\n \tmv tmp-float.h float.h-nat\n \n # Create a dummy float.h source for a cross-compiler.\n@@ -973,7 +975,7 @@ libgcc2.ready: $(GCC_PASSES) $(LIBGCC2_DEPS) stmp-int-hdrs\n \n LIB2ADD = $(srcdir)/frame.c $(LIB2FUNCS_EXTRA) $(LANG_LIB2FUNCS)\n libgcc2.a: libgcc2.c libgcc2.ready $(CONFIG_H) $(LIB2ADD) \\\n-   machmode.h longlong.h gbl-ctors.h config.status\n+   machmode.h longlong.h frame.h gansidecl.h gbl-ctors.h config.status\n # Actually build it in tmplibgcc2.a, then rename at end,\n # so that libgcc2.a itself remains nonexistent if compilation is aborted.\n \t-rm -f tmplibgcc2.a\n@@ -1069,6 +1071,7 @@ stamp-mlib: $(srcdir)/genmultilib Makefile\n \n # Build multiple copies of libgcc.a, one for each target switch.\n stmp-multilib: $(LIBGCC1) libgcc2.c libgcc2.ready $(CONFIG_H) \\\n+   frame.h gansidecl.h \\\n    $(LIB2ADD) machmode.h longlong.h gbl-ctors.h config.status\n \tfor i in `$(GCC_FOR_TARGET) --print-multi-lib`; do \\\n \t  dir=`echo $$i | sed -e 's/;.*$$//'`; \\\n@@ -1137,12 +1140,14 @@ stmp-multilib-sub:\n # Compile two additional files that are linked with every program\n # linked using GCC on systems using COFF or ELF, for the sake of C++\n # constructors.\n-$(T)crtbegin.o: crtstuff.c $(GCC_PASSES) $(CONFIG_H) gbl-ctors.h\n+$(T)crtbegin.o: crtstuff.c $(GCC_PASSES) $(CONFIG_H) \\\n+  defaults.h frame.h gbl-ctors.h\n \t$(GCC_FOR_TARGET) $(GCC_CFLAGS) $(INCLUDES) $(MULTILIB_CFLAGS) -g0 \\\n \t  -finhibit-size-directive -fno-inline-functions -fno-exceptions $(CRTSTUFF_T_CFLAGS) \\\n \t  -c $(srcdir)/crtstuff.c -DCRT_BEGIN -o $(T)crtbegin$(objext)\n \n-$(T)crtend.o: crtstuff.c $(GCC_PASSES) $(CONFIG_H) gbl-ctors.h\n+$(T)crtend.o: crtstuff.c $(GCC_PASSES) $(CONFIG_H) \\\n+  defaults.h frame.h gbl-ctors.h\n \t$(GCC_FOR_TARGET) $(GCC_CFLAGS) $(INCLUDES) $(MULTILIB_CFLAGS) -g0 \\\n \t  -finhibit-size-directive -fno-inline-functions -fno-exceptions $(CRTSTUFF_T_CFLAGS) \\\n \t  -c $(srcdir)/crtstuff.c -DCRT_END -o $(T)crtend$(objext)\n@@ -1151,7 +1156,8 @@ $(T)crtend.o: crtstuff.c $(GCC_PASSES) $(CONFIG_H) gbl-ctors.h\n # compiled using PIC for use in shared libraries.\n crtbeginS.o crtendS.o: stamp-crtS ; @true\n \n-stamp-crtS:\tcrtstuff.c $(GCC_PASSES) $(CONFIG_H) gbl-ctors.h\n+stamp-crtS: crtstuff.c $(GCC_PASSES) $(CONFIG_H) \\\n+  defaults.h frame.h gbl-ctors.h\n \t$(GCC_FOR_TARGET) $(GCC_CFLAGS) $(INCLUDES) $(CRTSTUFF_T_CFLAGS_S) \\\n \t  -DCRT_BEGIN -finhibit-size-directive -fno-inline-functions \\\n \t  -g0 -c $(srcdir)/crtstuff.c \n@@ -1220,14 +1226,14 @@ collect2: collect2.o tlink.o hash.o cplus-dem.o underscore.o version.o \\\n \t$(CC) $(ALL_CFLAGS) $(LDFLAGS) -o $@ collect2.o tlink.o hash.o \\\n \t  cplus-dem.o underscore.o version.o choose-temp.o $(LIBS)\n \n-collect2.o : collect2.c $(CONFIG_H) gstab.h obstack.h demangle.h\n+collect2.o : collect2.c $(CONFIG_H) gansidecl.h gstab.h obstack.h $(DEMANGLE_H)\n \t$(CC) $(ALL_CFLAGS) $(ALL_CPPFLAGS) $(INCLUDES)  \\\n \t-DTARGET_MACHINE=\\\"$(target_alias)\\\" $(MAYBE_USE_COLLECT2) \\\n \t-c `echo $(srcdir)/collect2.c | sed 's,^\\./,,'`\n \n-tlink.o: tlink.c demangle.h hash.h $(CONFIG_H)\n+tlink.o: tlink.c $(DEMANGLE_H) hash.h $(CONFIG_H)\n hash.o: hash.c hash.h\n-cplus-dem.o: cplus-dem.c demangle.h\n+cplus-dem.o: cplus-dem.c $(DEMANGLE_H)\n \n underscore.c: stamp-under ; @true\n \n@@ -1256,18 +1262,18 @@ DRIVER_DEFINES = \\\n   -DDEFAULT_TARGET_VERSION=\\\"$(version)\\\" \\\n   -DDEFAULT_TARGET_MACHINE=\\\"$(target_alias)\\\" \\\n   -DTOOLDIR_BASE_PREFIX=\\\"$(exec_prefix)/\\\"\n-gcc.o: gcc.c $(CONFIG_H) multilib.h Makefile $(lang_specs_files)\n+gcc.o: gcc.c $(CONFIG_H) gansidecl.h multilib.h Makefile $(lang_specs_files)\n \t$(CC) $(ALL_CFLAGS) $(ALL_CPPFLAGS) $(INCLUDES) \\\n   $(DRIVER_DEFINES) \\\n   -c `echo $(srcdir)/gcc.c | sed 's,^\\./,,'`\n \n dumpvers: dumpvers.c\n \n version.o: version.c\n-obstack.o: obstack.c\n-choose-temp.o: choose-temp.c\n-pexecute.o: pexecute.c\n-prefix.o: prefix.c $(CONFIG_H) Makefile\n+obstack.o: obstack.c $(CONFIG_H)\n+choose-temp.o: choose-temp.c $(CONFIG_H) gansidecl.h\n+pexecute.o: pexecute.c $(CONFIG_H) gansidecl.h\n+prefix.o: prefix.c $(CONFIG_H) gansidecl.h Makefile\n \t$(CC) $(ALL_CFLAGS) $(ALL_CPPFLAGS) $(INCLUDES) \\\n \t-DPREFIX=\\\"$(prefix)\\\" \\\n \t  -c `echo $(srcdir)/prefix.c | sed 's,^\\./,,'`\n@@ -1295,26 +1301,26 @@ varasm.o : varasm.c $(CONFIG_H) $(TREE_H) $(RTL_H) flags.h function.h \\\n    output.h bytecode.h c-pragma.h\n function.o : function.c $(CONFIG_H) $(RTL_H) $(TREE_H) flags.h function.h  \\\n    insn-flags.h insn-codes.h expr.h regs.h hard-reg-set.h insn-config.h \\\n-   recog.h output.h bytecode.h bc-emit.h\n+   $(RECOG_H) output.h bytecode.h bc-emit.h\n stmt.o : stmt.c $(CONFIG_H) $(RTL_H) $(TREE_H) flags.h function.h  \\\n    insn-flags.h insn-config.h insn-codes.h hard-reg-set.h expr.h except.h \\\n-   loop.h recog.h bytecode.h bc-typecd.h bc-typecd.def bc-opcode.h \\\n+   loop.h $(RECOG_H) bytecode.h bc-typecd.h bc-typecd.def bc-opcode.h \\\n    bc-optab.h bc-emit.h\n except.o : except.c $(CONFIG_H) $(RTL_H) $(TREE_H) flags.h function.h  \\\n    insn-flags.h insn-codes.h expr.h regs.h hard-reg-set.h insn-config.h \\\n-   recog.h output.h except.h\n+   $(RECOG_H) output.h except.h\n expr.o : expr.c $(CONFIG_H) $(RTL_H) $(TREE_H) flags.h function.h regs.h \\\n-   insn-flags.h insn-codes.h expr.h insn-config.h recog.h output.h \\\n+   insn-flags.h insn-codes.h expr.h insn-config.h $(RECOG_H) output.h \\\n    typeclass.h bytecode.h bc-opcode.h bc-typecd.h bc-typecd.def bc-optab.h \\\n    bc-emit.h modemap.def hard-reg-set.h\n calls.o : calls.c $(CONFIG_H) $(RTL_H) $(TREE_H) flags.h expr.h insn-codes.h \\\n    insn-flags.h regs.h\n expmed.o : expmed.c $(CONFIG_H) $(RTL_H) $(TREE_H) flags.h  \\\n-   insn-flags.h insn-config.h insn-codes.h expr.h recog.h real.h\n+   insn-flags.h insn-config.h insn-codes.h expr.h $(RECOG_H) real.h\n explow.o : explow.c $(CONFIG_H) $(RTL_H) $(TREE_H) flags.h hard-reg-set.h \\\n-   insn-config.h expr.h recog.h insn-flags.h insn-codes.h\n+   insn-config.h expr.h $(RECOG_H) insn-flags.h insn-codes.h\n optabs.o : optabs.c $(CONFIG_H) $(RTL_H) $(TREE_H) flags.h  \\\n-   insn-flags.h insn-config.h insn-codes.h expr.h recog.h reload.h\n+   insn-flags.h insn-config.h insn-codes.h expr.h $(RECOG_H) reload.h\n dbxout.o : dbxout.c $(CONFIG_H) $(TREE_H) $(RTL_H) flags.h regs.h \\\n    insn-config.h reload.h gstab.h xcoffout.h defaults.h output.h\n sdbout.o : sdbout.c $(CONFIG_H) $(TREE_H) $(RTL_H) flags.h except.h \\\n@@ -1326,51 +1332,51 @@ dwarf2out.o : dwarf2out.c $(CONFIG_H) $(TREE_H) $(RTL_H) dwarf2.h flags.h \\\n    insn-config.h reload.h output.h defaults.h hard-reg-set.h regs.h expr.h\n xcoffout.o : xcoffout.c $(CONFIG_H) $(TREE_H) $(RTL_H) xcoffout.h flags.h\n emit-rtl.o : emit-rtl.c $(CONFIG_H) $(RTL_H) $(TREE_H) flags.h except.h \\\n-   function.h regs.h insn-config.h recog.h real.h expr.h obstack.h \\\n+   function.h regs.h insn-config.h $(RECOG_H) real.h expr.h obstack.h \\\n    bytecode.h bc-opcode.h bc-typecd.h bc-typecd.def bc-optab.h bc-emit.h \\\n    bc-opname.h\n real.o : real.c $(CONFIG_H) $(TREE_H)\n getpwd.o : getpwd.c $(CONFIG_H)\n \n integrate.o : integrate.c $(CONFIG_H) $(RTL_H) $(TREE_H) flags.h integrate.h \\\n    insn-flags.h insn-config.h insn-codes.h expr.h real.h regs.h function.h \\\n-   bytecode.h output.h recog.h except.h\n+   bytecode.h output.h $(RECOG_H) except.h\n \n jump.o : jump.c $(CONFIG_H) $(RTL_H) flags.h hard-reg-set.h regs.h \\\n-   insn-config.h insn-flags.h recog.h expr.h real.h except.h\n+   insn-config.h insn-flags.h $(RECOG_H) expr.h real.h except.h\n stupid.o : stupid.c $(CONFIG_H) $(RTL_H) regs.h hard-reg-set.h flags.h\n \n cse.o : cse.c $(CONFIG_H) $(RTL_H) regs.h hard-reg-set.h flags.h real.h \\\n-   insn-config.h recog.h\n+   insn-config.h $(RECOG_H) expr.h\n profile.o : profile.c $(CONFIG_H) $(RTL_H) flags.h insn-flags.h gcov-io.h \\\n-   tree.h output.h regs.h\n+   $(TREE_H) output.h regs.h\n loop.o : loop.c $(CONFIG_H) $(RTL_H) flags.h loop.h insn-config.h \\\n-   insn-flags.h insn-codes.h regs.h hard-reg-set.h recog.h expr.h real.h\n+   insn-flags.h insn-codes.h regs.h hard-reg-set.h $(RECOG_H) expr.h real.h\n unroll.o : unroll.c $(CONFIG_H) $(RTL_H) insn-config.h integrate.h regs.h \\\n-   recog.h flags.h expr.h loop.h\n+   $(RECOG_H) flags.h expr.h loop.h\n flow.o : flow.c $(CONFIG_H) $(RTL_H) flags.h insn-config.h \\\n    $(BASIC_BLOCK_H) regs.h hard-reg-set.h output.h\n combine.o : combine.c $(CONFIG_H) $(RTL_H) flags.h  \\\n    insn-config.h insn-flags.h insn-codes.h insn-attr.h regs.h expr.h \\\n-   $(BASIC_BLOCK_H) recog.h real.h hard-reg-set.h\n+   $(BASIC_BLOCK_H) $(RECOG_H) real.h hard-reg-set.h\n regclass.o : regclass.c $(CONFIG_H) $(RTL_H) hard-reg-set.h flags.h \\\n-   $(BASIC_BLOCK_H) regs.h insn-config.h recog.h reload.h real.h bytecode.h\n+   $(BASIC_BLOCK_H) regs.h insn-config.h $(RECOG_H) reload.h real.h bytecode.h\n local-alloc.o : local-alloc.c $(CONFIG_H) $(RTL_H) flags.h $(BASIC_BLOCK_H) \\\n-   regs.h hard-reg-set.h insn-config.h recog.h output.h\n+   regs.h hard-reg-set.h insn-config.h $(RECOG_H) output.h\n bitmap.o : bitmap.c $(CONFIG_H) $(RTL_H) flags.h $(BASIC_BLOCK_H) regs.h\n global.o : global.c $(CONFIG_H) $(RTL_H) flags.h  \\\n    $(BASIC_BLOCK_H) regs.h hard-reg-set.h insn-config.h output.h\n \n reload.o : reload.c $(CONFIG_H) $(RTL_H) flags.h output.h expr.h\\\n-   reload.h recog.h hard-reg-set.h insn-config.h insn-codes.h regs.h real.h\n+   reload.h $(RECOG_H) hard-reg-set.h insn-config.h insn-codes.h regs.h real.h\n reload1.o : reload1.c $(CONFIG_H) $(RTL_H) real.h flags.h expr.h \\\n    reload.h regs.h hard-reg-set.h insn-config.h insn-flags.h insn-codes.h \\\n-   $(BASIC_BLOCK_H) recog.h output.h\n+   $(BASIC_BLOCK_H) $(RECOG_H) output.h\n caller-save.o : caller-save.c $(CONFIG_H) $(RTL_H) flags.h \\\n-   regs.h hard-reg-set.h insn-codes.h insn-config.h $(BASIC_BLOCK_H) recog.h \\\n+   regs.h hard-reg-set.h insn-codes.h insn-config.h $(BASIC_BLOCK_H) $(RECOG_H) \\\n    reload.h expr.h\n reorg.o : reorg.c $(CONFIG_H) $(RTL_H) conditions.h hard-reg-set.h \\\n-   $(BASIC_BLOCK_H) regs.h insn-config.h insn-attr.h insn-flags.h recog.h \\\n+   $(BASIC_BLOCK_H) regs.h insn-config.h insn-attr.h insn-flags.h $(RECOG_H) \\\n    flags.h output.h\n alias.o : alias.c $(CONFIG_H) $(RTL_H) flags.h hard-reg-set.h regs.h \\\n    insn-codes.h\n@@ -1379,10 +1385,10 @@ regmove.o : regmove.c $(CONFIG_H) $(RTL_H) insn-config.h recog.h output.h \\\n $(SCHED_PREFIX)sched.o : $(SCHED_PREFIX)sched.c $(CONFIG_H) $(RTL_H) $(BASIC_BLOCK_H) regs.h hard-reg-set.h \\\n    flags.h insn-config.h insn-attr.h\n final.o : final.c $(CONFIG_H) $(RTL_H) $(TREE_H) flags.h regs.h \\\n-   recog.h conditions.h insn-config.h insn-attr.h except.h real.h output.h \\\n+   $(RECOG_H) conditions.h insn-config.h insn-attr.h except.h real.h output.h \\\n    hard-reg-set.h insn-flags.h insn-codes.h gstab.h xcoffout.h defaults.h\n recog.o : recog.c $(CONFIG_H) $(RTL_H)  \\\n-   regs.h recog.h hard-reg-set.h flags.h insn-config.h insn-attr.h \\\n+   regs.h $(RECOG_H) hard-reg-set.h flags.h insn-config.h insn-attr.h \\\n    insn-flags.h insn-codes.h real.h\n reg-stack.o : reg-stack.c $(CONFIG_H) $(RTL_H) $(TREE_H) \\\n    regs.h hard-reg-set.h flags.h insn-config.h insn-flags.h\n@@ -1468,7 +1474,7 @@ stamp-emit : $(md_file) genemit $(srcdir)/move-if-change\n \t$(srcdir)/move-if-change tmp-emit.c insn-emit.c\n \ttouch stamp-emit\n \n-insn-recog.o : insn-recog.c $(CONFIG_H) $(RTL_H) insn-config.h recog.h \\\n+insn-recog.o : insn-recog.c $(CONFIG_H) $(RTL_H) insn-config.h $(RECOG_H) \\\n   real.h output.h flags.h\n \t$(CC) $(ALL_CFLAGS) $(ALL_CPPFLAGS) $(INCLUDES) -c insn-recog.c\n \n@@ -1479,7 +1485,7 @@ stamp-recog : $(md_file) genrecog $(srcdir)/move-if-change\n \ttouch stamp-recog\n \n insn-opinit.o : insn-opinit.c $(CONFIG_H) $(RTL_H) insn-codes.h insn-flags.h \\\n-  insn-config.h flags.h rtl.h recog.h expr.h reload.h\n+  insn-config.h flags.h $(RECOG_H) expr.h reload.h\n \t$(CC) $(ALL_CFLAGS) $(ALL_CPPFLAGS) $(INCLUDES) -c insn-opinit.c\n \n insn-opinit.c: stamp-opinit ; @true\n@@ -1529,7 +1535,7 @@ stamp-attrtab : $(md_file) genattrtab $(srcdir)/move-if-change\n \ttouch stamp-attrtab\n \n insn-output.o : insn-output.c $(CONFIG_H) $(RTL_H) regs.h real.h conditions.h \\\n-    hard-reg-set.h insn-config.h insn-flags.h insn-attr.h output.h recog.h \\\n+    hard-reg-set.h insn-config.h insn-flags.h insn-attr.h output.h $(RECOG_H) \\\n     insn-codes.h\n \t$(CC) $(ALL_CFLAGS) $(ALL_CPPFLAGS) $(INCLUDES) -c insn-output.c\n \n@@ -2535,7 +2541,7 @@ gcc.xtar: distdir\n # This target exists to do the initial work before the language specific\n # stuff gets done.\n distdir-start: doc $(srcdir)/INSTALL $(srcdir)/c-parse.y $(srcdir)/c-gperf.h \\\n-  $(srcdir)/c-parse.c $(srcdir)/cexp.c\n+  $(srcdir)/c-parse.c $(srcdir)/cexp.c $(srcdir)/config.in\n \t@if grep -s \"for version ${mainversion}\" gcc.texi > /dev/null; \\\n \tthen true; \\\n \telse echo \"You must update the version number in \\`gcc.texi'\"; sleep 10;\\"}, {"sha": "b3cb770ebc6f42d7cdaa18ba9b2de7a5281cdd79", "filename": "gcc/NEWS", "status": "modified", "additions": 213, "deletions": 67, "changes": 280, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/956d69504d77d301015532d2f0564213f0efc706/gcc%2FNEWS", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/956d69504d77d301015532d2f0564213f0efc706/gcc%2FNEWS", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FNEWS?ref=956d69504d77d301015532d2f0564213f0efc706", "patch": "@@ -1,103 +1,248 @@\n Noteworthy changes in GCC for EGCS.\n \n-The -specs=file switch allows you to override default specs used in invoking\n-programs like cc1, as, etc.\n+A major change in this release is the addition of a framework for\n+exception handling, currently used by C++.  Many internal changes and\n+optimization improvements have been made.  These increase the\n+maintainability and portability of GCC.  GCC now uses autoconf to\n+compute many host parameters.\n \n-Options -Wall and -Wimplicit now cause GCC to warn about implicit int\n-in declarations (e.g. `register i;'), since the C Standard committee\n-has decided to disallow this in the next revision of the standard.\n+The following lists changes that add new features or targets.\n \n-The following new targets are supported:\n+See cp/NEWS for new features of C++ in this release.\n \n-    Solaris 2.5 running on UltraSPARC's.\n-    The sparclet cpu (a.out file format).\n-    Solaris 2.51 running on PowerPC's.\n-    Linux running on PowerPC's.\n-    Embedded target m32r-elf.\n-    Embedded target arc-elf.\n-    IRIX 6.2 running on MIPS.\n+New tools and features:\n \n-New features for the Hitachi H8/300(H).\n+    The Dwarf 2 debugging information format is supported on ELF systems, and\n+    is the default for -ggdb where available.  It can also be used for C++.\n+    The Dwarf version 1 debugging format is also permitted for C++, but\n+    does not work well.\n \n-    -malign-300\n-    -ms\n+    gcov.c is provided for test coverage analysis and branch profiling\n+    analysis is also supported; see -fprofile-arcs, -ftest-coverage,\n+    and -fbranch-probabilities.\n+\n+    Support for the Checker memory checking tool.\n+\n+    New switch, -fstack-check, to check for stack overflow on systems that\n+    don't have such built into their ABI.\n+\n+    New switches, -Wundef and -Wno-undef to warn if an undefined identifier\n+    is evaluated in an #if directive.\n+\n+    Options -Wall and -Wimplicit now cause GCC to warn about implicit int\n+    in declarations (e.g. `register i;'), since the C Standard committee\n+    has decided to disallow this in the next revision of the standard;\n+    -Wimplicit-function-declarations and -Wimplicit-int are subsets of\n+    this.\n+\n+    Option -Wsign-compare causes GCC to warn about comparison of signed and\n+    unsigned values.\n+\n+    Add -dI option of cccp for cxref.\n+\n+New features in configuration, installation and specs file handling:\n+\n+    New option --enable-c-cpplib to configure script.\n+\n+    Allow --with-cpu on configure command to specify a default CPU.\n+\n+    The -specs=file switch allows you to override default specs used in\n+    invoking programs like cc1, as, etc.\n+\n+    Allow including one specs file from another and renaming a specs\n+    variable.\n+\n+    You can now relocate all GCC files with a single environment variable\n+    or a registry entry under Windows 95 and Windows NT.\n+\n+Changes in Objective-C:\n+\n+    The Objective-C Runtime Library has been made thread-safe.\n+\n+    The Objective-C Runtime Library contains an interface for creating\n+    mutexes, condition mutexes, and threads; it requires a back-end\n+    implementation for the specific platform and/or thread package.\n+    Currently supported are DEC/OSF1, IRIX, Mach, OS/2, POSIX, PCThreads,\n+    Solaris, and Windows32.  The --enable-threads parameter can be used\n+    when configuring GCC to enable and select a thread back-end.\n+\n+    Objective-C is now configured as separate front-end language to GCC,\n+    making it more convenient to conditionally build it.\n \n-The -ms switch generates code for the Hitachi H8/S processor.\n+    The internal structures of the Objective-C Runtime Library have\n+    changed sufficiently to warrant a new version number; now version 8.\n+    Programs compiled with an older version must be recompiled.\n+\n+    The Objective-C Runtime Library can be built as a DLL on Windows 95\n+    and Windows NT systems.\n+    \n+    The Objective-C Runtime Library implements +load.\n+\n+The following new targets are supported (see also list under each\n+individual CPU below):\n+\n+    Embedded target m32r-elf.\n+    Embedded Hitachi Super-H using ELF.\n+    RTEMS real-time system on various CPU targets.\n+    ARC processor.\n+    NEC V850 processor.\n+    Matsushita MN10200 processor.\n+    Matsushita MN10300 processor.\n+    Sparc and PowerPC running on VxWorks.\n+    Support both glibc versions 1 and 2 on Linux-based GNU systems.\n+\n+New features for DEC Alpha systems:\n+\n+    Allow detailed specification of IEEE fp support:\n+      -mieee, -mieee-with-inexact, and -mieee-conformant\n+      -mfp-trap-mode=xxx, -mfp-round-mode=xxx, -mtrap-precision=xxx\n+    -mcpu=xxx for CPU selection\n+    Support scheduling parameters for EV5.\n+    Add support for BWX, CIX, and MAX instruction set extensions.\n+    Support Linux-based GNU systems.\n+    Support VMS.\n+\n+Additional supported processors and systems for MIPS targets:\n+\n+    MIPS4 instruction set.\n+    R4100, R4300 and R5000 processors.\n+    N32 and N64 ABI.\n+    IRIX 6.2.\n+    SNI SINIX.\n+    \n+New features for Intel x86 family:\n+\n+    Add scheduling parameters for Pentium and Pentium Pro.\n+    Support stabs on Solaris-x86.\n+    Intel x86 processors running the SCO OpenServer 5 family.\n+    Intel x86 processors running DG/UX.\n+    Intel x86 using Cygwin32 or Mingw32 on Windows 95 and Windows NT.\n+\n+New features for Motorola 68k family:\n+\n+    Support for 68060 processor.\n+    More consistent switches to specify processor.\n+    Motorola 68k family running AUX.\n+    68040 running pSOS, ELF object files, DBX debugging.\n+    Coldfire variant of Motorola m68k family.\n+\n+New features for the HP PA RISC:\n+\n+    -mspace and m-no-space\n+    -mlong-load-store and -mno-long-load-store\n+    -mbig-switch -mno-big-switch\n+\n+    GCC on the PA requires either gas-2.7 or the HP assembler; for best\n+    results using GAS is highly recommended.  GAS is required for -g and\n+    exception handling support.\n \n New features for SPARC-based systems:\n \n+    The ultrasparc cpu.\n+    The sparclet cpu, supporting only a.out file format.\n+    Sparc running SunOS 4 with the GNU assembler.\n+    Sparc running the Linux-based GNU system.\n+    Embedded Sparc processors running the ELF object file format.\n     -mcpu=xxx\n     -mtune=xxx\n     -malign-loops=xxx\n     -malign-jumps=xxx\n     -malign-functions=xxx\n     -mimpure-text and -mno-impure-text\n \n-New features for all rs6000 and PowerPC systems:\n+    Options -mno-v8 and -mno-sparclite are no longer supported on SPARC\n+    targets.  Options -mcypress, -mv8, -msupersparc, -msparclite, -mf930,\n+    and -mf934 are deprecated and will be deleted in GCC 2.9.  Use\n+    -mcpu=xxx instead.\n \n-    -mcpu=604e\n-    -mcpu=801\n-    -mcpu=823\n-    -mtune=xxx\n-    -mupdate\n-    -mno-update\n-    -mfused-madd\n-    -mno-fused-madd\n+New features for rs6000 and PowerPC systems:\n \n-New features for PowerPC-based systems running either System V, Linux, Solaris,\n-or embedded systems:\n+    Solaris 2.51 running on PowerPC's.\n+    The Linux-based GNU system running on PowerPC's.\n+    -mcpu=604e,602,603e,620,801,823,mpc505,821,860,power2\n+    -mtune=xxx\n+    -mrelocatable-lib, m-no-relocatable-lib\n+    -msim, -mmve, -memb\n+    -mupdate, -mno-update\n+    -mfused-madd, -mno-fused-madd\n \n     -mregnames\n     -meabi\n-    -mcall-linux\n-    -mcall-solaris\n-    -mcall-sysv-eabi\n-    -mcall-sysv-noeabi\n-    -msdata\n-    -msdata=none\n-    -msdata=default\n-    -msdata=sysv\n-    -msdata=eabi\n-    -memb\n-    -msim\n-    -mmvme\n-    -myellowknife\n-    -mads\n-    wchar_t is now of type long, not unsigned short as per ABI.\n+    -mcall-linux, -mcall-solaris, -mcall-sysv-eabi, -mcall-sysv-noeabi\n+    -msdata, -msdata=none, -msdata=default, -msdata=sysv, -msdata=eabi\n+    -memb, -msim, -mmvme\n+    -myellowknife, -mads\n+    wchar_t is now of type long as per the ABI, not unsigned short.\n     -p/-pg support\n     -mcpu=403 now implies -mstrict-align.\n+    Implement System V profiling.\n+\n+    Aix 4.1 GCC targets now default to -mcpu=common so that programs\n+    compiled can be moved between rs6000 and powerpc based systems.  A\n+    consequence of this is that -static won't work, and that some programs\n+    may be slightly slower.\n \n-Options -mno-v8 and -mno-sparclite are no longer supported on SPARC\n-targets.  Options -mcypress, -mv8, -msupersparc, -msparclite, -mf930,\n-and -mf934 are deprecated and will be deleted in GCC 2.9.\n-Use -mcpu=xxx instead.\n+    You can select the default value to use for -mcpu=xxx on rs6000 and\n+    powerpc targets by using the --with-cpu=xxx option when configuring the\n+    compiler.  In addition, a new options, -mtune=xxx was added that\n+    selects the machine to schedule for but does not select the\n+    architecture level.\n \n-GCC on the PA requires either gas-2.7 or the HP assembler; for best\n-results using GAS is highly recommended.  GAS is required for -g\n-and exception handling support.\n+    Directory names used for storing the multilib libraries on System V\n+    and embedded PowerPC systems have been shortened to work with commands\n+    like tar that have fixed limits on pathname size.\n \n-Aix 4.1 GCC targets now default to -mcpu=common so that programs compiled can\n-be moved between rs6000 and powerpc based systems.  A consequence of this is\n-that -static won't work, and that some programs may be slightly slower.\n+New features for the Hitachi H8/300(H):\n+\n+    -malign-300\n+    -ms (for the Hitachi H8/S processor)\n+    -mint32\n \n-You can select the default value to use for -mcpu=xxx on rs6000 and powerpc\n-targets by using the --with-cpu=xxx option when confiuring the compiler.  In\n-addition, a new options, -mtune=xxx was added that selects the machine to\n-schedule for but does not select the architecture level.\n+New features for the ARM:\n \n-Directory names used for storing the multilib libraries on System V and\n-embedded PowerPC systems have been shortened to work with commands like tar\n-that have fixed limits on pathname size.\n+    -march=xxx, -mtune=xxx, -mcpu=xxx\n+    Support interworking with Thumb code.\n+    ARM processor with a.out object format, COFF, or AOF assembler.\n+    ARM on \"semi-hosted\" platform.\n+    ARM running NetBSD.\n+    ARM running the Linux-based GNU system.\n \n-The DWARF 2 debugging information format is supported on ELF systems, and\n-is the default for -ggdb where available.\n+New feature for Solaris systems:\n \n-Noteworthy changes in GCC version 2.7.2:\n+    GCC installation no longer makes a copy of system include files,\n+    thus insulating GCC better from updates to the operating system.\n+\n+Changes in Objective-C:\n+\n+    The Objective-C Runtime Library has been made thread-safe.\n+\n+    The Objective-C Runtime Library contains an interface for creating\n+    mutexes, condition mutexes, and threads; it requires a back-end\n+    implementation for the specific platform and/or thread package.\n+    Currently supported are DEC/OSF1, IRIX, Mach, OS/2, POSIX, PCThreads,\n+    Solaris, and Windows32.  The --enable-threads parameter can be used\n+    when configuring GCC to enable and select a thread back-end.\n+\n+    Objective-C is now configured as separate front-end language to GCC,\n+    making it more convenient to conditionally build it.\n+\n+    The internal structures of the Objective-C Runtime Library have\n+    changed sufficiently to warrant a new version number; now version 8.\n+    Programs compiled with an older version must be recompiled.\n+\n+    The Objective-C Runtime Library can be built as a DLL on Windows 95\n+    and Windows NT systems.\n+    \n+    The Objective-C Runtime Library implements +load.\n+\f\n+Noteworthy changes in GCC version 2.7.2\n+---------------------------------------\n \n A few bugs have been fixed (most notably the generation of an\n invalid assembler opcode on some RS/6000 systems).\n \n-Noteworthy changes in GCC version 2.7.1:\n+Noteworthy changes in GCC version 2.7.1\n+---------------------------------------\n \n This release fixes numerous bugs (mostly minor) in GCC 2.7.0, but\n also contains a few new features, mostly related to specific targets.\n@@ -121,8 +266,9 @@ sequence used in GCC version 2.7.0.  That calling sequence was based on the AIX\n calling sequence without function descriptors.  To compile code for that older\n calling sequence, either configure the compiler for powerpc-*-eabiaix or use\n the -mcall-aix switch when compiling and linking.\n-\n-Noteworthy changes in GCC version 2.7.0:\n+\f\n+Noteworthy changes in GCC version 2.7.0\n+---------------------------------------\n \n GCC now works better on systems that use \".obj\" and \".exe\" instead of\n \".o\" and no extension.  This involved changes to the driver program,\n@@ -374,7 +520,7 @@ The following new configurations are supported:\n \tGNU on x86 (instead of treating it like MACH)\n \tNetBSD on Sparc and Motorola 68k\n \tAIX 4.1 on RS/6000 and PowerPC systems\n-\tSequent DYNUX/ptx 1.x and 2.x.\n+\tSequent DYNIX/ptx 1.x and 2.x.\n \tBoth COFF and ELF configurations on AViiON without using /bin/gcc\n \tWindows/NT on x86 architecture; preliminary\n \tAT&T DSP1610 digital signal processor chips"}, {"sha": "2b6c1442c971c408620a1a246d19759e503ca287", "filename": "gcc/acconfig.h", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/956d69504d77d301015532d2f0564213f0efc706/gcc%2Facconfig.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/956d69504d77d301015532d2f0564213f0efc706/gcc%2Facconfig.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Facconfig.h?ref=956d69504d77d301015532d2f0564213f0efc706", "patch": "@@ -12,4 +12,10 @@\n \n /* Whether free must be declared even if <stdlib.h> is included.  */\n #undef NEED_DECLARATION_FREE\n+\n+/* Whether index must be declared even if <stdlib.h> is included.  */\n+#undef NEED_DECLARATION_INDEX\n+\n+/* Whether rindex must be declared even if <stdlib.h> is included.  */\n+#undef NEED_DECLARATION_RINDEX\n @TOP@"}, {"sha": "d7d14a2d5e59dd087e8b9ecd5d63a9df0f887b1f", "filename": "gcc/aclocal.m4", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/956d69504d77d301015532d2f0564213f0efc706/gcc%2Faclocal.m4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/956d69504d77d301015532d2f0564213f0efc706/gcc%2Faclocal.m4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Faclocal.m4?ref=956d69504d77d301015532d2f0564213f0efc706", "patch": "@@ -16,6 +16,12 @@ AC_CACHE_VAL(gcc_cv_decl_needed_$1,\n #endif\n #ifdef HAVE_UNISTD_H\n #include <unistd.h>\n+#endif\n+#ifndef HAVE_RINDEX\n+#define rindex strrchr\n+#endif\n+#ifndef HAVE_INDEX\n+#define index strchr\n #endif],\n [char *(*pfn) = (char *(*)) $1],\n gcc_cv_decl_needed_$1=no, gcc_cv_decl_needed_$1=yes)])"}, {"sha": "dd134d5f0b32b468136cfd7db16f33b4896b05d2", "filename": "gcc/bc-optab.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/956d69504d77d301015532d2f0564213f0efc706/gcc%2Fbc-optab.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/956d69504d77d301015532d2f0564213f0efc706/gcc%2Fbc-optab.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fbc-optab.c?ref=956d69504d77d301015532d2f0564213f0efc706", "patch": "@@ -21,6 +21,9 @@ Boston, MA 02111-1307, USA.  */\n \n #include \"config.h\"\n #include <stdio.h>\n+#ifdef HAVE_STDLIB_H\n+#include <stdlib.h>\n+#endif\n #include \"tree.h\"\n #include \"rtl.h\"\n #include \"machmode.h\""}, {"sha": "2df648965f5b8906ecbd93ffe7a15ad257a6cfae", "filename": "gcc/bitmap.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/956d69504d77d301015532d2f0564213f0efc706/gcc%2Fbitmap.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/956d69504d77d301015532d2f0564213f0efc706/gcc%2Fbitmap.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fbitmap.h?ref=956d69504d77d301015532d2f0564213f0efc706", "patch": "@@ -200,7 +200,7 @@ do {\t\t\t\t\t\t\t\t\t\\\n   for (; ptr1_ != 0 ; ptr1_ = ptr1_->next)\t\t\t\t\\\n     {\t\t\t\t\t\t\t\t\t\\\n       /* Advance BITMAP2 to the equivalent link, using an all\t\t\\\n-\t zero element if an equavialent link doesn't exist.  */\t\t\\\n+\t zero element if an equivalent link doesn't exist.  */\t\t\\\n       bitmap_element *tmp2_;\t\t\t\t\t\t\\\n \t\t\t\t\t\t\t\t\t\\\n       while (ptr2_ != 0 && ptr2_->indx < ptr1_->indx)\t\t\t\\"}, {"sha": "7688dd23d678bcd85d75dcd44f9fb91821e42f0b", "filename": "gcc/c-decl.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/956d69504d77d301015532d2f0564213f0efc706/gcc%2Fc-decl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/956d69504d77d301015532d2f0564213f0efc706/gcc%2Fc-decl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-decl.c?ref=956d69504d77d301015532d2f0564213f0efc706", "patch": "@@ -1758,7 +1758,7 @@ duplicate_decls (newdecl, olddecl, different_binding_level)\n \n   /* Optionally warn about more than one declaration for the same name.  */\n   if (errmsg == 0 && warn_redundant_decls && DECL_SOURCE_LINE (olddecl) != 0\n-      /* Dont warn about a function declaration\n+      /* Don't warn about a function declaration\n \t followed by a definition.  */\n       && !(TREE_CODE (newdecl) == FUNCTION_DECL && DECL_INITIAL (newdecl) != 0\n \t   && DECL_INITIAL (olddecl) == 0)"}, {"sha": "a1ef5362ca9a5ae9d2ed13ee46309bd3e6a0e32f", "filename": "gcc/c-lex.c", "status": "modified", "additions": 12, "deletions": 13, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/956d69504d77d301015532d2f0564213f0efc706/gcc%2Fc-lex.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/956d69504d77d301015532d2f0564213f0efc706/gcc%2Fc-lex.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-lex.c?ref=956d69504d77d301015532d2f0564213f0efc706", "patch": "@@ -135,6 +135,9 @@ static int end_of_file;\n static int nextchar = -1;\n #endif\n \n+static int skip_which_space\t\tPROTO((int));\n+static char *extend_token_buffer\tPROTO((char *));\n+static int readescape\t\t\tPROTO((int *));\n int check_newline ();\n \f\n /* Do not insert generated code into the source, instead, include it.\n@@ -330,7 +333,6 @@ yyprint (file, yychar, yylval)\n       break;\n     }\n }\n-\n \f\n /* Iff C is a carriage return, warn about it - if appropriate -\n    and return nonzero.  */\n@@ -468,7 +470,6 @@ extend_token_buffer (p)\n \n   return token_buffer + offset;\n }\n-\n \f\n #if !USE_CPPLIB\n #define GET_DIRECTIVE_LINE() get_directive_line (finput)\n@@ -1711,20 +1712,15 @@ yylex ()\n \t\tc = GETC();\n \t      }\n \n-\t    /* If the constant is not long long and it won't fit in an\n-\t       unsigned long, or if the constant is long long and won't fit\n-\t       in an unsigned long long, then warn that the constant is out\n-\t       of range.  */\n+\t    /* If the constant won't fit in an unsigned long long,\n+\t       then warn that the constant is out of range.  */\n \n \t    /* ??? This assumes that long long and long integer types are\n \t       a multiple of 8 bits.  This better than the original code\n \t       though which assumed that long was exactly 32 bits and long\n \t       long was exactly 64 bits.  */\n \n-\t    if (spec_long_long)\n-\t      bytes = TYPE_PRECISION (long_long_integer_type_node) / 8;\n-\t    else\n-\t      bytes = TYPE_PRECISION (long_integer_type_node) / 8;\n+\t    bytes = TYPE_PRECISION (long_long_integer_type_node) / 8;\n \n \t    warn = overflow;\n \t    for (i = bytes; i < TOTAL_PARTS; i++)\n@@ -1791,7 +1787,9 @@ yylex ()\n \t\telse if (! spec_unsigned && !spec_long_long\n \t\t\t && int_fits_type_p (yylval.ttype, long_integer_type_node))\n \t\t  ansi_type = long_integer_type_node;\n-\t\telse if (! spec_long_long)\n+\t\telse if (! spec_long_long\n+\t\t\t && int_fits_type_p (yylval.ttype,\n+\t\t\t\t\t     long_unsigned_type_node))\n \t\t  ansi_type = long_unsigned_type_node;\n \t\telse if (! spec_unsigned\n \t\t\t && int_fits_type_p (yylval.ttype,\n@@ -1815,8 +1813,9 @@ yylex ()\n \t\t  warning (\"width of integer constant may change on other systems with -traditional\");\n \t      }\n \n-\t    if (!flag_traditional && !int_fits_type_p (yylval.ttype, type)\n-\t\t&& !warn)\n+\t    if (pedantic && !flag_traditional && !spec_long_long && !warn\n+\t\t&& (TYPE_PRECISION (long_integer_type_node)\n+\t\t    < TYPE_PRECISION (type)))\n \t      pedwarn (\"integer constant out of range\");\n \n \t    if (base == 10 && ! spec_unsigned && TREE_UNSIGNED (type))"}, {"sha": "135ca9b09c29866cee75d3ee34a6de0ac270c162", "filename": "gcc/c-typeck.c", "status": "modified", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/956d69504d77d301015532d2f0564213f0efc706/gcc%2Fc-typeck.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/956d69504d77d301015532d2f0564213f0efc706/gcc%2Fc-typeck.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-typeck.c?ref=956d69504d77d301015532d2f0564213f0efc706", "patch": "@@ -35,12 +35,29 @@ Boston, MA 02111-1307, USA.  */\n #include \"flags.h\"\n #include \"output.h\"\n \n+#ifdef HAVE_STDLIB_H\n+#include <stdlib.h>\n+#endif\n+\n+#ifdef HAVE_STRING_H\n+#include <string.h>\n+#else\n+#ifdef HAVE_STRINGS_H\n+#include <strings.h>\n+#endif\n+#endif\n+\n /* Nonzero if we've already printed a \"missing braces around initializer\"\n    message within this initializer.  */\n static int missing_braces_mentioned;\n \n+#ifdef NEED_DECLARATION_INDEX\n extern char *index ();\n+#endif\n+\n+#ifdef NEED_DECLARATION_RINDEX\n extern char *rindex ();\n+#endif\n \n static tree qualify_type\t\tPROTO((tree, tree));\n static int comp_target_types\t\tPROTO((tree, tree));"}, {"sha": "46f766bf48343f663c0401a5c340ac0fd62442bc", "filename": "gcc/calls.c", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/956d69504d77d301015532d2f0564213f0efc706/gcc%2Fcalls.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/956d69504d77d301015532d2f0564213f0efc706/gcc%2Fcalls.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcalls.c?ref=956d69504d77d301015532d2f0564213f0efc706", "patch": "@@ -1868,7 +1868,8 @@ expand_call (exp, target, ignore)\n \t\t\t   VOIDmode, 3,\n \t\t\t   structure_value_addr, ptr_mode, \n \t\t\t   GEN_INT (struct_value_size), TYPE_MODE (sizetype),\n-\t\t\t   GEN_INT (MEMORY_USE_WO), QImode);\n+\t\t\t   GEN_INT (MEMORY_USE_WO),\n+\t\t\t   TYPE_MODE (integer_type_node));\n \n       if (GET_CODE (struct_value_rtx) == REG)\n \t  use_reg (&call_fusage, struct_value_rtx);\n@@ -3579,7 +3580,8 @@ store_one_arg (arg, argblock, may_be_alloca, variable_size, fndecl,\n \t\t\t     XEXP (arg->stack, 0), ptr_mode, \n \t\t\t     GEN_INT (GET_MODE_SIZE (arg->mode)),\n \t\t\t     TYPE_MODE (sizetype),\n-\t\t\t     GEN_INT (MEMORY_USE_RW), QImode);\n+\t\t\t     GEN_INT (MEMORY_USE_RW),\n+\t\t\t     TYPE_MODE (integer_type_node));\n \t}\n     }\n   else if (arg->mode != BLKmode)"}, {"sha": "5e85fcdb50dd5059bfb56339981b657b97d876cf", "filename": "gcc/cccp.c", "status": "modified", "additions": 154, "deletions": 202, "changes": 356, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/956d69504d77d301015532d2f0564213f0efc706/gcc%2Fcccp.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/956d69504d77d301015532d2f0564213f0efc706/gcc%2Fcccp.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcccp.c?ref=956d69504d77d301015532d2f0564213f0efc706", "patch": "@@ -16,87 +16,27 @@ GNU General Public License for more details.\n You should have received a copy of the GNU General Public License\n along with this program; if not, write to the Free Software\n Foundation, 59 Temple Place - Suite 330,\n-Boston, MA 02111-1307, USA.\n+Boston, MA 02111-1307, USA. */\n \n- In other words, you are welcome to use, share and improve this program.\n- You are forbidden to forbid anyone else to use, share and improve\n- what you give them.   Help stamp out software-hoarding!  */\n-\f\n-typedef unsigned char U_CHAR;\n-\n-#ifdef EMACS\n-#define NO_SHORTNAMES\n-#include \"../src/config.h\"\n-#ifdef open\n-#undef open\n-#undef read\n-#undef write\n-#endif /* open */\n-#endif /* EMACS */\n-\n-/* The macro EMACS is defined when cpp is distributed as part of Emacs,\n-   for the sake of machines with limited C compilers.  */\n-#ifndef EMACS\n #include \"config.h\"\n-#endif /* not EMACS */\n-\n-#ifndef STANDARD_INCLUDE_DIR\n-#define STANDARD_INCLUDE_DIR \"/usr/include\"\n-#endif\n-\n-#include \"pcp.h\"\n-\n-/* By default, colon separates directories in a path.  */\n-#ifndef PATH_SEPARATOR\n-#define PATH_SEPARATOR ':'\n-#endif\n-\n-/* By default, the suffix for object files is \".o\".  */\n-#ifdef OBJECT_SUFFIX\n-#define HAVE_OBJECT_SUFFIX\n-#else\n-#define OBJECT_SUFFIX \".o\"\n-#endif\n-\n #include <sys/types.h>\n #include <sys/stat.h>\n #include <ctype.h>\n #include <stdio.h>\n #include <signal.h>\n \n-/* The following symbols should be autoconfigured:\n-\tHAVE_FCNTL_H\n-\tHAVE_SYS_TIME_H\n-\tSTDC_HEADERS\n-\tTIME_WITH_SYS_TIME\n-   In the mean time, we'll get by with approximations based\n-   on existing GCC configuration symbols.  */\n-\n-#ifdef POSIX\n-# ifndef STDC_HEADERS\n-# define STDC_HEADERS 1\n-# endif\n-#endif /* defined (POSIX) */\n-\n-#if defined (POSIX) || (defined (USG) && !defined (VMS))\n-# ifndef HAVE_FCNTL_H\n-# define HAVE_FCNTL_H 1\n-# endif\n-#endif\n-\n-#ifndef RLIMIT_STACK\n+#ifdef TIME_WITH_SYS_TIME\n+# include <sys/time.h>\n # include <time.h>\n #else\n-# if TIME_WITH_SYS_TIME\n-#  include <sys/time.h>\n-#  include <time.h>\n+# if HAVE_SYS_TIME_H\n+# include <sys/time.h>\n # else\n-#  if HAVE_SYS_TIME_H\n-#   include <sys/time.h>\n-#  else\n-#   include <time.h>\n-#  endif\n-# endif\n+#  include <time.h>\n+#endif\n+#endif\n+\n+#ifdef HAVE_SYS_RESOURCE_H\n # include <sys/resource.h>\n #endif\n \n@@ -108,96 +48,68 @@ typedef unsigned char U_CHAR;\n # include <limits.h>\n #endif\n \n+#if HAVE_UNISTD_H\n+# include <unistd.h>\n+#endif\n+\n #include <errno.h>\n \n #if HAVE_STDLIB_H\n # include <stdlib.h>\n-#else\n-char *getenv ();\n #endif\n \n-#if STDC_HEADERS\n+#ifdef HAVE_STRING_H\n # include <string.h>\n-# ifndef bcmp\n-# define bcmp(a, b, n) memcmp (a, b, n)\n-# endif\n-# ifndef bcopy\n-# define bcopy(s, d, n) memcpy (d, s, n)\n-# endif\n-# ifndef bzero\n-# define bzero(d, n) memset (d, 0, n)\n-# endif\n-#else /* !STDC_HEADERS */\n-char *index ();\n-char *rindex ();\n-\n-# if !defined (BSTRING) && (defined (USG) || defined (VMS))\n+#else\n+# ifdef HAVE_STRINGS_H\n+#  inclued <strings.h>\n+#endif\n+#endif\n \n-#  ifndef bcmp\n-#  define bcmp my_bcmp\n-static int\n-my_bcmp (a, b, n)\n-     register char *a;\n-     register char *b;\n-     register unsigned n;\n-{\n-   while (n-- > 0)\n-     if (*a++ != *b++)\n-       return 1;\n+typedef unsigned char U_CHAR;\n \n-   return 0;\n-}\n-#  endif /* !defined (bcmp) */\n+#include \"gansidecl.h\"\n+#include \"pcp.h\"\n \n-#  ifndef bcopy\n-#  define bcopy my_bcopy\n-static void\n-my_bcopy (s, d, n)\n-     register char *s;\n-     register char *d;\n-     register unsigned n;\n-{\n-  while (n-- > 0)\n-    *d++ = *s++;\n-}\n-#  endif /* !defined (bcopy) */\n+#ifdef NEED_DECLARATION_INDEX\n+extern char *index ();\n+#endif\n \n-#  ifndef bzero\n-#  define bzero my_bzero\n-static void\n-my_bzero (b, length)\n-     register char *b;\n-     register unsigned length;\n-{\n-  while (length-- > 0)\n-    *b++ = 0;\n-}\n-#  endif /* !defined (bzero) */\n+#ifdef NEED_DECLARATION_RINDEX\n+extern char *rindex ();\n+#endif\n \n-# endif /* !defined (BSTRING) && (defined (USG) || defined (VMS)) */\n-#endif /* ! STDC_HEADERS */\n+#ifdef NEED_DECLARATION_GETENV\n+extern char *getenv ();\n+#endif\n \n #if __GNUC__ < 2 || (__GNUC__ == 2 && __GNUC_MINOR__ < 7)\n # define __attribute__(x)\n #endif\n \n-#ifndef PROTO\n-# if defined (USE_PROTOTYPES) ? USE_PROTOTYPES : defined (__STDC__)\n-#  define PROTO(ARGS) ARGS\n-# else\n-#  define PROTO(ARGS) ()\n-# endif\n+#ifndef STANDARD_INCLUDE_DIR\n+# define STANDARD_INCLUDE_DIR \"/usr/include\"\n+#endif\n+\n+/* By default, colon separates directories in a path.  */\n+#ifndef PATH_SEPARATOR\n+# define PATH_SEPARATOR ':'\n+#endif\n+\n+/* By default, the suffix for object files is \".o\".  */\n+#ifdef OBJECT_SUFFIX\n+# define HAVE_OBJECT_SUFFIX\n+#else\n+# define OBJECT_SUFFIX \".o\"\n #endif\n \n #if defined (__STDC__) && defined (HAVE_VPRINTF)\n # include <stdarg.h>\n-# define VA_START(va_list, var) va_start (va_list, var)\n # define PRINTF_ALIST(msg) char *msg, ...\n # define PRINTF_DCL(msg)\n # define PRINTF_PROTO(ARGS, m, n) PROTO (ARGS) __attribute__ ((format (__printf__, m, n)))\n #else\n # include <varargs.h>\n-# define VA_START(va_list, var) va_start (va_list)\n # define PRINTF_ALIST(msg) msg, va_alist\n # define PRINTF_DCL(msg) char *msg; va_dcl\n # define PRINTF_PROTO(ARGS, m, n) () __attribute__ ((format (__printf__, m, n)))\n@@ -215,10 +127,6 @@ my_bzero (b, length)\n #define PRINTF_PROTO_2(ARGS) PRINTF_PROTO(ARGS, 2, 3)\n #define PRINTF_PROTO_3(ARGS) PRINTF_PROTO(ARGS, 3, 4)\n \n-#if HAVE_UNISTD_H\n-# include <unistd.h>\n-#endif\n-\n /* VMS-specific definitions */\n #ifdef VMS\n #include <descrip.h>\n@@ -258,12 +166,10 @@ static void hack_vms_include_specification ();\n #  include <inttypes.h>\n #  define HOST_WIDE_INT intmax_t\n # else\n-#  if (HOST_BITS_PER_LONG <= HOST_BITS_PER_INT \\\n-       && HOST_BITS_PER_LONGLONG <= HOST_BITS_PER_INT)\n+#  if (HOST_BITS_PER_LONG <= HOST_BITS_PER_INT && HOST_BITS_PER_LONGLONG <= HOST_BITS_PER_INT)\n #   define HOST_WIDE_INT int\n #  else\n-#  if (HOST_BITS_PER_LONGLONG <= HOST_BITS_PER_LONG \\\n-       || ! (defined LONG_LONG_MAX || defined LLONG_MAX))\n+#  if (HOST_BITS_PER_LONGLONG <= HOST_BITS_PER_LONG || ! (defined LONG_LONG_MAX || defined LLONG_MAX))\n #   define HOST_WIDE_INT long\n #  else\n #   define HOST_WIDE_INT long long\n@@ -288,24 +194,6 @@ static void hack_vms_include_specification ();\n #define INO_T_HASH(a) (a)\n #endif\n \n-/* Define a generic NULL if one hasn't already been defined.  */\n-\n-#ifndef NULL\n-#define NULL 0\n-#endif\n-\n-#ifndef GENERIC_PTR\n-#if defined (USE_PROTOTYPES) ? USE_PROTOTYPES : defined (__STDC__)\n-#define GENERIC_PTR void *\n-#else\n-#define GENERIC_PTR char *\n-#endif\n-#endif\n-\n-#ifndef NULL_PTR\n-#define NULL_PTR ((GENERIC_PTR) 0)\n-#endif\n-\n #ifndef INCLUDE_LEN_FUDGE\n #define INCLUDE_LEN_FUDGE 0\n #endif\n@@ -325,7 +213,7 @@ char *strerror ();\n char *strerror (int,...);\n #endif\n HOST_WIDE_INT parse_escape PROTO((char **, HOST_WIDE_INT));\n-HOST_WIDE_INT parse_c_expression PROTO((char *));\n+HOST_WIDE_INT parse_c_expression PROTO((char *, int));\n \n #ifndef errno\n extern int errno;\n@@ -412,7 +300,7 @@ static enum {dump_none, dump_only, dump_names, dump_definitions}\n static int debug_output = 0;\n \n /* Nonzero means pass #include lines through to the output,\n-   even if they are ifdeffed out.  */\n+   even if they are ifdefed out.  */\n static int dump_includes;\n \n /* Nonzero indicates special processing used by the pcp program.  The\n@@ -466,7 +354,7 @@ static int warn_trigraphs;\n \n /* Nonzero means warn if undefined identifiers are evaluated in an #if.  */\n \n-int warn_undef;\n+static int warn_undef;\n \n /* Nonzero means warn if #import is used.  */\n \n@@ -490,6 +378,9 @@ int c89;\n \n static int no_output;\n \n+/* Nonzero means we should look for header.gcc files that remap file names.  */\n+static int remap;\n+\n /* Nonzero means this file was included with a -imacros or -include\n    command line and should not be recorded as an include file.  */\n \n@@ -1214,6 +1105,7 @@ static void make_assertion PROTO((char *, char *));\n static struct file_name_list *new_include_prefix PROTO((struct file_name_list *, char *, char *, char *));\n static void append_include_chain PROTO((struct file_name_list *, struct file_name_list *));\n \n+static int quote_string_for_make PROTO((char *, char *));\n static void deps_output PROTO((char *, int));\n \n static void fatal PRINTF_PROTO_1((char *, ...)) __attribute__ ((noreturn));\n@@ -1775,6 +1667,11 @@ main (argc, argv)\n \t  no_precomp = 1;\n \tbreak;\n \n+      case 'r':\n+\tif (!strcmp (argv[i], \"-remap\"))\n+\t  remap = 1;\n+\tbreak;\n+\n       case 'u':\n \t/* Sun compiler passes undocumented switch \"-undef\".\n \t   Let's assume it means to inhibit the predefined symbols.  */\n@@ -2212,8 +2109,11 @@ main (argc, argv)\n   } else {\n     /* Read a file whose size we can determine in advance.\n        For the sake of VMS, st.st_size is just an upper bound.  */\n-    fp->buf = (U_CHAR *) xmalloc (st.st_size + 2);\n-    fp->length = safe_read (f, (char *) fp->buf, st.st_size);\n+    size_t s = (size_t) st.st_size;\n+    if (s != st.st_size || s + 2 < s)\n+      memory_full ();\n+    fp->buf = (U_CHAR *) xmalloc (s + 2);\n+    fp->length = safe_read (f, (char *) fp->buf, s);\n     if (fp->length < 0) goto perror;\n   }\n   fp->bufp = fp->buf;\n@@ -4709,7 +4609,7 @@ absolute_filename (filename)\n \n    Do only the simplifications allowed by Posix.\n    It is OK to miss simplifications on non-Posix hosts,\n-   since this merely leads to suboptimial results.  */\n+   since this merely leads to suboptimal results.  */\n \n static size_t\n simplify_filename (filename)\n@@ -4926,7 +4826,7 @@ open_include_file (filename, searchptr, importing, pinc)\n      U_CHAR *importing;\n      struct include_file **pinc;\n {\n-  char *fname = remap_include_file (filename, searchptr);\n+  char *fname = remap ? remap_include_file (filename, searchptr) : filename;\n   int fd = -2;\n \n   /* Look up FNAME in include_hashtab.  */\n@@ -5090,12 +4990,15 @@ finclude (f, inc, op, system_header_p, dirptr)\n   fp->dir = dirptr;\n \n   if (S_ISREG (inc->st.st_mode)) {\n-    fp->buf = (U_CHAR *) xmalloc (inc->st.st_size + 2);\n+    size_t s = (size_t) inc->st.st_size;\n+    if (s != inc->st.st_size || s + 2 < s)\n+      memory_full ();\n+    fp->buf = (U_CHAR *) xmalloc (s + 2);\n     fp->bufp = fp->buf;\n \n-    /* Read the file contents, knowing that inc->st.st_size is an upper bound\n+    /* Read the file contents, knowing that s is an upper bound\n        on the number of bytes we can read.  */\n-    fp->length = safe_read (f, (char *) fp->buf, inc->st.st_size);\n+    fp->length = safe_read (f, (char *) fp->buf, s);\n     if (fp->length < 0) goto nope;\n   }\n   else if (S_ISDIR (inc->st.st_mode)) {\n@@ -5210,8 +5113,11 @@ check_precompiled (pcf, st, fname, limit)\n \n   if (S_ISREG (st->st_mode))\n     {\n-      buf = xmalloc (st->st_size + 2);\n-      length = safe_read (pcf, buf, st->st_size);\n+      size_t s = (size_t) st->st_size;\n+      if (s != st->st_size || s + 2 < s)\n+\tmemory_full ();\n+      buf = xmalloc (s + 2);\n+      length = safe_read (pcf, buf, s);\n       if (length < 0)\n \tgoto nope;\n     }\n@@ -7032,7 +6938,8 @@ eval_if_expression (buf, length)\n   delete_macro (save_defined);\t/* clean up special symbol */\n \n   temp_obuf.buf[temp_obuf.length] = '\\n';\n-  value = parse_c_expression ((char *) temp_obuf.buf);\n+  value = parse_c_expression ((char *) temp_obuf.buf,\n+\t\t\t      warn_undef && !instack[indepth].system_header_p);\n \n   free (temp_obuf.buf);\n \n@@ -9940,6 +9847,67 @@ append_include_chain (first, last)\n   last_include = last;\n }\n \f\n+/* Place into DST a representation of the file named SRC that is suitable\n+   for `make'.  Do not null-terminate DST.  Return its length.  */\n+static int\n+quote_string_for_make (dst, src)\n+     char *dst;\n+     char *src;\n+{\n+  char *p = src;\n+  int i = 0;\n+  for (;;)\n+    {\n+      char c = *p++;\n+      switch (c)\n+\t{\n+\tcase '\\0':\n+\tcase ' ':\n+\tcase '\\t':\n+\t  {\n+\t    /* GNU make uses a weird quoting scheme for white space.\n+\t       A space or tab preceded by 2N+1 backslashes represents\n+\t       N backslashes followed by space; a space or tab\n+\t       preceded by 2N backslashes represents N backslashes at\n+\t       the end of a file name; and backslashes in other\n+\t       contexts should not be doubled.  */\n+\t    char *q;\n+\t    for (q = p - 1; src < q && q[-1] == '\\\\';  q--)\n+\t      {\n+\t\tif (dst)\n+\t\t  dst[i] = '\\\\';\n+\t\ti++;\n+\t      }\n+\t  }\n+\t  if (!c)\n+\t    return i;\n+\t  if (dst)\n+\t    dst[i] = '\\\\';\n+\t  i++;\n+\t  goto ordinary_char;\n+\t  \n+\tcase '$':\n+\t  if (dst)\n+\t    dst[i] = c;\n+\t  i++;\n+\t  /* Fall through.  This can mishandle things like \"$(\" but\n+\t     there's no easy fix.  */\n+\tdefault:\n+\tordinary_char:\n+\t  /* This can mishandle characters in the string \"\\0\\n%*?[\\\\~\";\n+\t     exactly which chars are mishandled depends on the `make' version.\n+\t     We know of no portable solution for this;\n+\t     even GNU make 3.76.1 doesn't solve the problem entirely.\n+\t     (Also, '\\0' is mishandled due to our calling conventions.)  */\n+\t  if (dst)\n+\t    dst[i] = c;\n+\t  i++;\n+\t  break;\n+\t}\n+    }\n+}\n+\n+\n /* Add output to `deps_buffer' for the -M switch.\n    STRING points to the text to be output.\n    SPACER is ':' for targets, ' ' for dependencies.  */\n@@ -9949,9 +9917,7 @@ deps_output (string, spacer)\n      char *string;\n      int spacer;\n {\n-  int size = strlen (string);\n-  int i;\n-  char *p;\n+  int size = quote_string_for_make ((char *) 0, string);\n \n   if (size == 0)\n     return;\n@@ -9976,27 +9942,9 @@ deps_output (string, spacer)\n     deps_buffer[deps_size++] = ' ';\n     deps_column++;\n   }\n-\n-  for (i = 0; i < size; ++i)\n-    {\n-      if (string[i] == '$')\n-\t{\n-\t  deps_buffer[deps_size++] = '$';\n-\t  deps_column++;\n-\t}\n-      else\n-\t{\n-\t  p = strchr (\"~[]*?()\\\\ \", string[i]);\n-\t  if (p != NULL)\n-\t    {\n-\t      deps_buffer[deps_size++] = '\\\\';\n-\t      deps_column++;\n-\t    }\n-\t}\n-      deps_buffer[deps_size++] = string[i];\n-      deps_column++;\n-    }\n-\n+  quote_string_for_make (&deps_buffer[deps_size], string);\n+  deps_size += size;\n+  deps_column += size;\n   if (spacer == ':') {\n     deps_buffer[deps_size++] = ':';\n     deps_column++;\n@@ -10272,21 +10220,23 @@ VMS_freopen (fname, type, oldfile)\n      char *type;\n      FILE *oldfile;\n {\n+#undef freopen\t/* Get back the real freopen routine.  */\n   if (strcmp (type, \"w\") == 0)\n-    return decc$freopen (fname, type, oldfile,\n+    return freopen (fname, type, oldfile,\n \t\t\t \"mbc=16\", \"deq=64\", \"fop=tef\", \"shr=nil\");\n-  return decc$freopen (fname, type, oldfile, \"mbc=16\");\n+  return freopen (fname, type, oldfile, \"mbc=16\");\n }\n \n static FILE *\n VMS_fopen (fname, type)\n      char *fname;\n      char *type;\n {\n+#undef fopen\t/* Get back the real fopen routine.  */\n   /* The gcc-vms-1.42 distribution's header files prototype fopen with two\n      fixed arguments, which matches ANSI's specification but not VAXCRTL's\n      pre-ANSI implementation.  This hack circumvents the mismatch problem.  */\n-  FILE *(*vmslib_fopen)() = (FILE *(*)()) decc$fopen;\n+  FILE *(*vmslib_fopen)() = (FILE *(*)()) fopen;\n \n   if (*type == 'w')\n     return (*vmslib_fopen) (fname, type, \"mbc=32\",\n@@ -10301,7 +10251,8 @@ VMS_open (fname, flags, prot)\n      int flags;\n      int prot;\n {\n-  return decc$open (fname, flags, prot, \"mbc=16\", \"deq=64\", \"fop=tef\");\n+#undef open\t/* Get back the real open routine.  */\n+  return open (fname, flags, prot, \"mbc=16\", \"deq=64\", \"fop=tef\");\n }\n \f\n /* more VMS hackery */\n@@ -10322,13 +10273,14 @@ extern unsigned long sys$parse(), sys$search();\n    bad enough, but then compounding the problem by reporting the reason for\n    failure as \"normal successful completion.\"  */\n \n+#undef fstat\t/* Get back to the library version.  */\n \n static int\n VMS_fstat (fd, statbuf)\n      int fd;\n      struct stat *statbuf;\n {\n-  int result = decc$fstat (fd, statbuf);\n+  int result = fstat (fd, statbuf);\n \n   if (result < 0)\n     {"}, {"sha": "9f44faae3ca3850e49be987e9aa6d8886b296c9d", "filename": "gcc/cexp.c", "status": "modified", "additions": 21, "deletions": 15, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/956d69504d77d301015532d2f0564213f0efc706/gcc%2Fcexp.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/956d69504d77d301015532d2f0564213f0efc706/gcc%2Fcexp.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcexp.c?ref=956d69504d77d301015532d2f0564213f0efc706", "patch": "@@ -1,6 +1,6 @@\n \n /*  A Bison parser, made from cexp.y\n- by  Bison version A2.5 (Andrew Consortium)\n+ by  GNU Bison version 1.25\n   */\n \n #define YYBISON 1  /* Identify Bison output.  */\n@@ -332,7 +332,7 @@ static const short yyrline[] = { 0,\n #endif\n \n \n-#if YYDEBUG != 0\n+#if YYDEBUG != 0 || defined (YYERROR_VERBOSE)\n \n static const char * const yytname[] = {   \"$\",\"error\",\"$undefined.\",\"INT\",\"CHAR\",\n \"NAME\",\"ERROR\",\"'?'\",\"':'\",\"','\",\"OR\",\"AND\",\"'|'\",\"'^'\",\"'&'\",\"EQUAL\",\"NOTEQUAL\",\n@@ -588,16 +588,16 @@ int yyparse (void);\n #endif\n \f\n #if __GNUC__ > 1\t\t/* GNU C and GNU C++ define this.  */\n-#define __yy_memcpy(FROM,TO,COUNT)\t__builtin_memcpy(TO,FROM,COUNT)\n+#define __yy_memcpy(TO,FROM,COUNT)\t__builtin_memcpy(TO,FROM,COUNT)\n #else\t\t\t\t/* not GNU C or C++ */\n #ifndef __cplusplus\n \n /* This is the most reliable way to avoid incompatibilities\n    in available built-in functions on various systems.  */\n static void\n-__yy_memcpy (from, to, count)\n-     char *from;\n+__yy_memcpy (to, from, count)\n      char *to;\n+     char *from;\n      int count;\n {\n   register char *f = from;\n@@ -613,7 +613,7 @@ __yy_memcpy (from, to, count)\n /* This is the most reliable way to avoid incompatibilities\n    in available built-in functions on various systems.  */\n static void\n-__yy_memcpy (char *from, char *to, int count)\n+__yy_memcpy (char *to, char *from, int count)\n {\n   register char *f = from;\n   register char *t = to;\n@@ -626,7 +626,7 @@ __yy_memcpy (char *from, char *to, int count)\n #endif\n #endif\n \f\n-#line 192 \"/usr/share/bison.simple\"\n+#line 196 \"/usr/share/bison.simple\"\n \n /* The user can define YYPARSE_PARAM as the name of an argument to be passed\n    into yyparse.  The argument should have type void *.\n@@ -635,14 +635,20 @@ __yy_memcpy (char *from, char *to, int count)\n    to the proper pointer type.  */\n \n #ifdef YYPARSE_PARAM\n+#ifdef __cplusplus\n+#define YYPARSE_PARAM_ARG void *YYPARSE_PARAM\n+#define YYPARSE_PARAM_DECL\n+#else /* not __cplusplus */\n+#define YYPARSE_PARAM_ARG YYPARSE_PARAM\n #define YYPARSE_PARAM_DECL void *YYPARSE_PARAM;\n-#else\n-#define YYPARSE_PARAM\n+#endif /* not __cplusplus */\n+#else /* not YYPARSE_PARAM */\n+#define YYPARSE_PARAM_ARG\n #define YYPARSE_PARAM_DECL\n-#endif\n+#endif /* not YYPARSE_PARAM */\n \n int\n-yyparse(YYPARSE_PARAM)\n+yyparse(YYPARSE_PARAM_ARG)\n      YYPARSE_PARAM_DECL\n {\n   register int yystate;\n@@ -759,12 +765,12 @@ yyparse(YYPARSE_PARAM)\n       if (yystacksize > YYMAXDEPTH)\n \tyystacksize = YYMAXDEPTH;\n       yyss = (short *) alloca (yystacksize * sizeof (*yyssp));\n-      __yy_memcpy ((char *)yyss1, (char *)yyss, size * sizeof (*yyssp));\n+      __yy_memcpy ((char *)yyss, (char *)yyss1, size * sizeof (*yyssp));\n       yyvs = (YYSTYPE *) alloca (yystacksize * sizeof (*yyvsp));\n-      __yy_memcpy ((char *)yyvs1, (char *)yyvs, size * sizeof (*yyvsp));\n+      __yy_memcpy ((char *)yyvs, (char *)yyvs1, size * sizeof (*yyvsp));\n #ifdef YYLSP_NEEDED\n       yyls = (YYLTYPE *) alloca (yystacksize * sizeof (*yylsp));\n-      __yy_memcpy ((char *)yyls1, (char *)yyls, size * sizeof (*yylsp));\n+      __yy_memcpy ((char *)yyls, (char *)yyls1, size * sizeof (*yylsp));\n #endif\n #endif /* no yyoverflow */\n \n@@ -1201,7 +1207,7 @@ case 40:\n     break;}\n }\n    /* the action file gets copied in in place of this dollarsign */\n-#line 487 \"/usr/share/bison.simple\"\n+#line 498 \"/usr/share/bison.simple\"\n \f\n   yyvsp -= yylen;\n   yyssp -= yylen;"}, {"sha": "de178d301b1d234beb0cc01dd5842000e334b90a", "filename": "gcc/collect2.c", "status": "modified", "additions": 33, "deletions": 2, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/956d69504d77d301015532d2f0564213f0efc706/gcc%2Fcollect2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/956d69504d77d301015532d2f0564213f0efc706/gcc%2Fcollect2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcollect2.c?ref=956d69504d77d301015532d2f0564213f0efc706", "patch": "@@ -34,6 +34,18 @@ Boston, MA 02111-1307, USA.  */\n #include <sys/file.h>\n #include <sys/stat.h>\n \n+#ifdef HAVE_STDLIB_H\n+#include <stdlib.h>\n+#endif\n+\n+#ifdef HAVE_STRING_H\n+#include <string.h>\n+#else\n+#ifdef HAVE_STRINGS_H\n+#include <strings.h>\n+#endif\n+#endif\n+\n #define COLLECT\n \n #include \"demangle.h\"\n@@ -292,9 +304,17 @@ static void scan_libraries\tPROTO((char *));\n char *xcalloc ();\n char *xmalloc ();\n \n+#ifdef NEED_DECLARATION_INDEX\n extern char *index ();\n+#endif\n+\n+#ifdef NEED_DECLARATION_RINDEX\n extern char *rindex ();\n+#endif\n+\n+#ifdef NEED_DECLARATION_FREE\n extern void free ();\n+#endif\n \f\n #ifdef NO_DUP2\n int\n@@ -1760,11 +1780,22 @@ write_c_file_stat (stream, name)\n       write_list (stream, \"\\t\\t&\", frame_tables.first);\n       fprintf (stream, \"\\t0\\n};\\n\");\n \n-      fprintf (stream, \"extern void __register_frame_table (void *);\\n\");\n+      /* This must match what's in frame.h.  */\n+      fprintf (stream, \"struct object {\\n\");\n+      fprintf (stream, \"  void *pc_begin;\\n\");\n+      fprintf (stream, \"  void *pc_end;\\n\");\n+      fprintf (stream, \"  void *fde_begin;\\n\");\n+      fprintf (stream, \"  void *fde_array;\\n\");\n+      fprintf (stream, \"  size_t count;\\n\");\n+      fprintf (stream, \"  struct object *next;\\n\");\n+      fprintf (stream, \"};\\n\");\n+\n+      fprintf (stream, \"extern void __register_frame_table (void *, struct object *);\\n\");\n       fprintf (stream, \"extern void __deregister_frame (void *);\\n\");\n \n       fprintf (stream, \"static void reg_frame () {\\n\");\n-      fprintf (stream, \"\\t__register_frame_table (frame_table);\\n\");\n+      fprintf (stream, \"\\tstatic struct object ob;\\n\");\n+      fprintf (stream, \"\\t__register_frame_table (frame_table, &ob);\\n\");\n       fprintf (stream, \"\\t}\\n\");\n \n       fprintf (stream, \"static void dereg_frame () {\\n\");"}, {"sha": "a96e4f765470627cc686a0938169b481d377d755", "filename": "gcc/combine.c", "status": "modified", "additions": 52, "deletions": 6, "changes": 58, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/956d69504d77d301015532d2f0564213f0efc706/gcc%2Fcombine.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/956d69504d77d301015532d2f0564213f0efc706/gcc%2Fcombine.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcombine.c?ref=956d69504d77d301015532d2f0564213f0efc706", "patch": "@@ -1055,6 +1055,43 @@ can_combine_p (insn, i3, pred, succ, pdest, psrc)\n   return 1;\n }\n \f\n+/* Check if PAT is an insn - or a part of it - used to set up an\n+   argument for a function in a hard register.  */\n+\n+static int\n+sets_function_arg_p (pat)\n+     rtx pat;\n+{\n+  int i;\n+  rtx inner_dest;\n+\n+  switch (GET_CODE (pat))\n+    {\n+    case INSN:\n+      return sets_function_arg_p (PATTERN (pat));\n+\n+    case PARALLEL:\n+      for (i = XVECLEN (pat, 0); --i >= 0;)\n+\tif (sets_function_arg_p (XVECEXP (pat, 0, i)))\n+\t  return 1;\n+\n+      break;\n+\n+    case SET:\n+      inner_dest = SET_DEST (pat);\n+      while (GET_CODE (inner_dest) == STRICT_LOW_PART\n+\t     || GET_CODE (inner_dest) == SUBREG\n+\t     || GET_CODE (inner_dest) == ZERO_EXTRACT)\n+\tinner_dest = XEXP (inner_dest, 0);\n+\n+      return (GET_CODE (inner_dest) == REG\n+\t      && REGNO (inner_dest) < FIRST_PSEUDO_REGISTER\n+\t      && FUNCTION_ARG_REGNO_P (REGNO (inner_dest)));\n+    }\n+\n+  return 0;\n+}\n+\n /* LOC is the location within I3 that contains its pattern or the component\n    of a PARALLEL of the pattern.  We validate that it is valid for combining.\n \n@@ -1150,19 +1187,28 @@ combinable_i3pat (i3, loc, i2dest, i1dest, i1_not_in_src, pi3dest_killed)\n       if ((inner_dest != dest\n \t   && (reg_overlap_mentioned_p (i2dest, inner_dest)\n \t       || (i1dest && reg_overlap_mentioned_p (i1dest, inner_dest))))\n+\n \t  /* This is the same test done in can_combine_p except that we\n \t     allow a hard register with SMALL_REGISTER_CLASSES if SRC is a\n-\t     CALL operation.\n-\t     Moreover, we can't test all_adjacent; we don't have to, since\n-\t     this instruction will stay in place, thus we are not considering\n-\t     to increase the lifetime of INNER_DEST.  */\n+\t     CALL operation. Moreover, we can't test all_adjacent; we don't\n+\t     have to, since this instruction will stay in place, thus we are\n+\t     not considering increasing the lifetime of INNER_DEST.\n+\n+\t     Also, if this insn sets a function argument, combining it with\n+\t     something that might need a spill could clobber a previous\n+\t     function argument; the all_adjacent test in can_combine_p also\n+\t     checks this; here, we do a more specific test for this case.  */\n+\t     \n \t  || (GET_CODE (inner_dest) == REG\n \t      && REGNO (inner_dest) < FIRST_PSEUDO_REGISTER\n \t      && (! HARD_REGNO_MODE_OK (REGNO (inner_dest),\n \t\t\t\t\tGET_MODE (inner_dest))\n \t\t || (SMALL_REGISTER_CLASSES && GET_CODE (src) != CALL\n \t\t     && ! REG_USERVAR_P (inner_dest)\n-\t\t     && FUNCTION_VALUE_REGNO_P (REGNO (inner_dest)))))\n+\t\t     && (FUNCTION_VALUE_REGNO_P (REGNO (inner_dest))\n+\t\t\t || (FUNCTION_ARG_REGNO_P (REGNO (inner_dest))\n+\t\t\t     && i3 != 0\n+\t\t\t     && sets_function_arg_p (prev_nonnote_insn (i3)))))))\n \t  || (i1_not_in_src && reg_overlap_mentioned_p (i1dest, src)))\n \treturn 0;\n \n@@ -7188,7 +7234,7 @@ simplify_and_const_int (x, mode, varop, constop)\n /* We let num_sign_bit_copies recur into nonzero_bits as that is useful.\n    We don't let nonzero_bits recur into num_sign_bit_copies, because that\n    is less useful.  We can't allow both, because that results in exponential\n-   run time recusion.  There is a nullstone testcase that triggered\n+   run time recursion.  There is a nullstone testcase that triggered\n    this.  This macro avoids accidental uses of num_sign_bit_copies.  */\n #define num_sign_bit_copies()\n "}, {"sha": "9a635158ccd17d8c74190d89c0dc7bc9a70f3161", "filename": "gcc/config.in", "status": "modified", "additions": 57, "deletions": 0, "changes": 57, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/956d69504d77d301015532d2f0564213f0efc706/gcc%2Fconfig.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/956d69504d77d301015532d2f0564213f0efc706/gcc%2Fconfig.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig.in?ref=956d69504d77d301015532d2f0564213f0efc706", "patch": "@@ -14,18 +14,60 @@\n /* Whether free must be declared even if <stdlib.h> is included.  */\n #undef NEED_DECLARATION_FREE\n \n+/* Whether index must be declared even if <stdlib.h> is included.  */\n+#undef NEED_DECLARATION_INDEX\n+\n+/* Whether rindex must be declared even if <stdlib.h> is included.  */\n+#undef NEED_DECLARATION_RINDEX\n+\n+/* Define if you have the ANSI C header files.  */\n+#undef STDC_HEADERS\n+\n /* Define if `sys_siglist' is declared by <signal.h>.  */\n #undef SYS_SIGLIST_DECLARED\n \n+/* Define if you can safely include both <sys/time.h> and <time.h>.  */\n+#undef TIME_WITH_SYS_TIME\n+\n+/* Define if you have the bcmp function.  */\n+#undef HAVE_BCMP\n+\n+/* Define if you have the bcopy function.  */\n+#undef HAVE_BCOPY\n+\n /* Define if you have the bsearch function.  */\n #undef HAVE_BSEARCH\n \n+/* Define if you have the bzero function.  */\n+#undef HAVE_BZERO\n+\n+/* Define if you have the index function.  */\n+#undef HAVE_INDEX\n+\n+/* Define if you have the kill function.  */\n+#undef HAVE_KILL\n+\n+/* Define if you have the popen function.  */\n+#undef HAVE_POPEN\n+\n+/* Define if you have the putenv function.  */\n+#undef HAVE_PUTENV\n+\n+/* Define if you have the rindex function.  */\n+#undef HAVE_RINDEX\n+\n /* Define if you have the strerror function.  */\n #undef HAVE_STRERROR\n \n /* Define if you have the strtoul function.  */\n #undef HAVE_STRTOUL\n \n+/* Define if you have the vprintf function.  */\n+#undef HAVE_VPRINTF\n+\n+/* Define if you have the <fcntl.h> header file.  */\n+#undef HAVE_FCNTL_H\n+\n /* Define if you have the <limits.h> header file.  */\n #undef HAVE_LIMITS_H\n \n@@ -41,6 +83,21 @@\n /* Define if you have the <strings.h> header file.  */\n #undef HAVE_STRINGS_H\n \n+/* Define if you have the <sys/file.h> header file.  */\n+#undef HAVE_SYS_FILE_H\n+\n+/* Define if you have the <sys/param.h> header file.  */\n+#undef HAVE_SYS_PARAM_H\n+\n+/* Define if you have the <sys/resource.h> header file.  */\n+#undef HAVE_SYS_RESOURCE_H\n+\n+/* Define if you have the <sys/time.h> header file.  */\n+#undef HAVE_SYS_TIME_H\n+\n+/* Define if you have the <sys/times.h> header file.  */\n+#undef HAVE_SYS_TIMES_H\n+\n /* Define if you have the <sys/varargs.h> header file.  */\n #undef HAVE_SYS_VARARGS_H\n "}, {"sha": "91c068c7dc32efc09dabeb69b1cff505faaf9632", "filename": "gcc/config/alpha/alpha.c", "status": "modified", "additions": 12, "deletions": 10, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/956d69504d77d301015532d2f0564213f0efc706/gcc%2Fconfig%2Falpha%2Falpha.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/956d69504d77d301015532d2f0564213f0efc706/gcc%2Fconfig%2Falpha%2Falpha.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Falpha%2Falpha.c?ref=956d69504d77d301015532d2f0564213f0efc706", "patch": "@@ -1201,10 +1201,9 @@ alpha_adjust_cost (insn, link, dep_insn, cost)\n \n   if (alpha_cpu == PROCESSOR_EV5)\n     {\n-      /* On EV5, \"A special bypass provides an effective latency of 0\n-\t cycles for an ICMP or ILOG insn producing the test operand of an\n-\t IBR or CMOV insn.\" */\n-\n+      /* And the lord DEC saith:  \"A special bypass provides an effective\n+\t latency of 0 cycles for an ICMP or ILOG insn producing the test\n+\t operand of an IBR or CMOV insn.\" */\n       if (recog_memoized (dep_insn) >= 0\n \t  && (get_attr_type (dep_insn) == TYPE_ICMP\n \t      || get_attr_type (dep_insn) == TYPE_ILOG)\n@@ -1753,10 +1752,12 @@ alpha_builtin_saveregs (arglist)\n       emit_move_insn (dest, addr);\n \n       if (flag_check_memory_usage)\n-\temit_library_call (chkr_set_right_libfunc, 1, VOIDmode, 3, dest,\n-\t\t\t   ptr_mode, GEN_INT (GET_MODE_SIZE (ptr_mode)),\n+\temit_library_call (chkr_set_right_libfunc, 1, VOIDmode, 3,\n+\t\t\t   dest, ptr_mode,\n+\t\t\t   GEN_INT (GET_MODE_SIZE (ptr_mode)),\n \t\t\t   TYPE_MODE (sizetype),\n-\t\t\t   GEN_INT (MEMORY_USE_RW), QImode);\n+\t\t\t   GEN_INT (MEMORY_USE_RW), \n+\t\t\t   TYPE_MODE (integer_type_node));\n   \n       /* Store the argsize as the __va_offset member.  */\n       dest = change_address (block, TYPE_MODE (integer_type_node),\n@@ -1765,12 +1766,13 @@ alpha_builtin_saveregs (arglist)\n       emit_move_insn (dest, argsize);\n \n       if (flag_check_memory_usage)\n-\temit_library_call (chkr_set_right_libfunc, 1, VOIDmode, 3, dest,\n-\t\t\t   ptr_mode,\n+\temit_library_call (chkr_set_right_libfunc, 1, VOIDmode, 3,\n+\t\t\t   dest, ptr_mode,\n \t\t\t   GEN_INT (GET_MODE_SIZE\n \t\t\t\t    (TYPE_MODE (integer_type_node))),\n \t\t\t   TYPE_MODE (sizetype),\n-\t\t\t   GEN_INT (MEMORY_USE_RW), QImode);\n+\t\t\t   GEN_INT (MEMORY_USE_RW),\n+\t\t\t   TYPE_MODE (integer_type_node));\n \n       /* Return the address of the va_list constructor, but don't put it in a\n \t register.  Doing so would fail when not optimizing and produce worse"}, {"sha": "339c4a62387a969318a33e2a38440d14128eff04", "filename": "gcc/config/alpha/alpha.h", "status": "modified", "additions": 7, "deletions": 5, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/956d69504d77d301015532d2f0564213f0efc706/gcc%2Fconfig%2Falpha%2Falpha.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/956d69504d77d301015532d2f0564213f0efc706/gcc%2Fconfig%2Falpha%2Falpha.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Falpha%2Falpha.h?ref=956d69504d77d301015532d2f0564213f0efc706", "patch": "@@ -747,8 +747,9 @@ enum reg_class { NO_REGS, GENERAL_REGS, FLOAT_REGS, ALL_REGS,\n        && (GET_CODE (SUBREG_REG (OUT)) == MEM\t\t\t\t\\\n \t   || (GET_CODE (SUBREG_REG (OUT)) == REG\t\t\t\\\n \t       && REGNO (SUBREG_REG (OUT)) >= FIRST_PSEUDO_REGISTER)))) \\\n-  && ((((MODE) == HImode || (MODE) == QImode) && ! TARGET_BWX\t\t\\\n-       || ((MODE) == SImode && (CLASS) == FLOAT_REGS))))\t\t\\\n+  && ((((MODE) == HImode || (MODE) == QImode)\t\t\t\t\\\n+       && (! TARGET_BWX || (CLASS) == FLOAT_REGS))\t\t\t\\\n+      || ((MODE) == SImode && (CLASS) == FLOAT_REGS)))\t\t\t\\\n  ? GENERAL_REGS\t\t\t\t\t\t\t\t\\\n  : ((CLASS) == FLOAT_REGS && GET_CODE (OUT) == MEM\t\t\t\\\n     && GET_CODE (XEXP (OUT, 0)) == AND) ? GENERAL_REGS\t\t\t\\\n@@ -911,8 +912,9 @@ enum reg_class { NO_REGS, GENERAL_REGS, FLOAT_REGS, ALL_REGS,\n \n #define FUNCTION_VALUE(VALTYPE, FUNC)\t\\\n   gen_rtx (REG,\t\t\t\t\t\t\t\\\n-\t   (INTEGRAL_TYPE_P (VALTYPE)\t\t\t\t\\\n-\t    && TYPE_PRECISION (VALTYPE) < BITS_PER_WORD) \t\\\n+\t   ((INTEGRAL_TYPE_P (VALTYPE)\t\t\t\t\\\n+\t     && TYPE_PRECISION (VALTYPE) < BITS_PER_WORD)\t\\\n+\t    || POINTER_TYPE_P (VALTYPE))\t\t\t\\\n \t   ? word_mode : TYPE_MODE (VALTYPE),\t\t\t\\\n \t   ((TARGET_FPREGS\t\t\t\t\t\\\n \t     && (TREE_CODE (VALTYPE) == REAL_TYPE\t\t\\\n@@ -2278,7 +2280,7 @@ do {\t\t\t\t\t\t\t\\\n #else\n /* In OSF/1 v3.2c, the assembler by default does not output file names which\n    causes mips-tfile to fail.  Passing -g to the assembler fixes this problem.\n-   ??? Stricly speaking, we only need -g if the user specifies -g.  Passing\n+   ??? Strictly speaking, we need -g only if the user specifies -g.  Passing\n    it always means that we get slightly larger than necessary object files\n    if the user does not specify -g.  If we don't pass -g, then mips-tfile\n    will need to be fixed to work in this case.  Pass -O0 since some"}, {"sha": "2e6b7b73c30958e07e2c93afeaf0da249bba0d96", "filename": "gcc/config/alpha/alpha.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/956d69504d77d301015532d2f0564213f0efc706/gcc%2Fconfig%2Falpha%2Falpha.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/956d69504d77d301015532d2f0564213f0efc706/gcc%2Fconfig%2Falpha%2Falpha.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Falpha%2Falpha.md?ref=956d69504d77d301015532d2f0564213f0efc706", "patch": "@@ -37,7 +37,7 @@\n   (const_string \"iadd\"))\n \n ;; The TRAP_TYPE attribute marks instructions that may generate traps\n-;; (which are imprecise and may need a trapb if software complention\n+;; (which are imprecise and may need a trapb if software completion\n ;; is desired).\n (define_attr \"trap\" \"no,yes\" (const_string \"no\"))\n "}, {"sha": "b1466ae6ba3090e37381052cf7e729a3d5ee2d52", "filename": "gcc/config/alpha/elf.h", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/956d69504d77d301015532d2f0564213f0efc706/gcc%2Fconfig%2Falpha%2Felf.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/956d69504d77d301015532d2f0564213f0efc706/gcc%2Fconfig%2Falpha%2Felf.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Falpha%2Felf.h?ref=956d69504d77d301015532d2f0564213f0efc706", "patch": "@@ -20,10 +20,10 @@ the Free Software Foundation, 59 Temple Place - Suite 330,\n Boston, MA 02111-1307, USA.    */\n \n /* This is used on Alpha platforms that use the ELF format.\n-Currently only Linux uses this. */\n+   Currently only GNU/Linux uses this. */\n \n #undef TARGET_VERSION\n-#define TARGET_VERSION fprintf (stderr, \" (Alpha Linux/ELF)\");\n+#define TARGET_VERSION fprintf (stderr, \" (Alpha GNU/Linux with ELF)\");\n \n #undef OBJECT_FORMAT_COFF\n #undef EXTENDED_COFF\n@@ -489,8 +489,8 @@ do {\t\t\t\t\t\t\t\t\t \\\n #undef PREFERRED_DEBUGGING_TYPE\n #define PREFERRED_DEBUGGING_TYPE DBX_DEBUG\n \n-/* Provide a STARTFILE_SPEC appropriate for Linux.  Here we add\n-   the Linux magical crtbegin.o file (see crtstuff.c) which\n+/* Provide a STARTFILE_SPEC appropriate for GNU/Linux.  Here we add\n+   the GNU/Linux magical crtbegin.o file (see crtstuff.c) which\n    provides part of the support for getting C++ file-scope static\n    object constructed before entering `main'. */\n    \n@@ -500,11 +500,11 @@ do {\t\t\t\t\t\t\t\t\t \\\n      %{pg:gcrt1.o%s} %{!pg:%{p:gcrt1.o%s} %{!p:crt1.o%s}}}\\\n    crti.o%s crtbegin.o%s\"\n \n-/* Provide a ENDFILE_SPEC appropriate for Linux.  Here we tack on\n-   the Linux magical crtend.o file (see crtstuff.c) which\n+/* Provide a ENDFILE_SPEC appropriate for GNU/Linux.  Here we tack on\n+   the GNU/Linux magical crtend.o file (see crtstuff.c) which\n    provides part of the support for getting C++ file-scope static\n    object constructed before entering `main', followed by a normal\n-   Linux \"finalizer\" file, `crtn.o'.  */\n+   GNU/Linux \"finalizer\" file, `crtn.o'.  */\n \n #undef\tENDFILE_SPEC\n #define ENDFILE_SPEC \\"}, {"sha": "32428df5db0d07b034d5b8df0d27dc5efa0a77ba", "filename": "gcc/config/alpha/linux.h", "status": "modified", "additions": 4, "deletions": 5, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/956d69504d77d301015532d2f0564213f0efc706/gcc%2Fconfig%2Falpha%2Flinux.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/956d69504d77d301015532d2f0564213f0efc706/gcc%2Fconfig%2Falpha%2Flinux.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Falpha%2Flinux.h?ref=956d69504d77d301015532d2f0564213f0efc706", "patch": "@@ -1,5 +1,5 @@\n-/* Definitions of target machine for GNU compiler, for Alpha Linux,\n-   using ECOFF.\n+/* Definitions of target machine for GNU compiler, for Alpha Linux-based GNU\n+   systems using ECOFF.\n    Copyright (C) 1996, 1997 Free Software Foundation, Inc.\n    Contributed by Bob Manson.\n \n@@ -23,7 +23,7 @@ the Free Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA.  */\n #define TARGET_DEFAULT (3 | MASK_GAS)\n \n #undef TARGET_VERSION\n-#define TARGET_VERSION fprintf (stderr, \" (Linux/Alpha)\");\n+#define TARGET_VERSION fprintf (stderr, \" (GNU/Linux/Alpha)\");\n \n #undef CPP_PREDEFINES\n #define CPP_PREDEFINES \"\\\n@@ -80,8 +80,7 @@ the Free Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA.  */\n    range and so the target is in range of something on the stack. \n    Omitting the hint saves a bogus branch-prediction cache line load.\n \n-   Linux always has an executable stack -- no need for a system call.\n- */\n+   GNU/Linux always has an executable stack -- no need for a system call. */\n \n #undef INITIALIZE_TRAMPOLINE\n #define INITIALIZE_TRAMPOLINE(TRAMP, FNADDR, CXT)                       \\"}, {"sha": "8b33a8d224ded2884ca5d165ea28ad5f5656c66a", "filename": "gcc/config/alpha/vms.h", "status": "modified", "additions": 3, "deletions": 30, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/956d69504d77d301015532d2f0564213f0efc706/gcc%2Fconfig%2Falpha%2Fvms.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/956d69504d77d301015532d2f0564213f0efc706/gcc%2Fconfig%2Falpha%2Fvms.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Falpha%2Fvms.h?ref=956d69504d77d301015532d2f0564213f0efc706", "patch": "@@ -89,10 +89,7 @@ Boston, MA 02111-1307, USA.  */\n #define POINTER_SIZE 32\n #define POINTERS_EXTEND_UNSIGNED 0\n \n-/* No data type wants to be aligned rounder than this. */\n-#undef BIGGEST_ALIGNMENT\n-#define BIGGEST_ALIGNMENT 128       /* X Complex */\n-#define MAX_OFILE_ALIGNMENT 524288  /* 8 x 2^16 by DEC Test CD40VRA */\n+#define MAX_OFILE_ALIGNMENT 524288  /* 8 x 2^16 by DEC Ada Test CD40VRA */\n \n #undef FIXED_REGISTERS\n #define FIXED_REGISTERS  \\\n@@ -213,13 +210,6 @@ extern struct rtx_def *alpha_arg_info_reg_val ();\n    + ALPHA_ARG_SIZE (MODE, TYPE, NAMED)\t\t\t\t\t\\\n  ? 6 - (CUM).num_args : 0)\n \n-#undef ENCODE_SECTION_INFO\n-#define ENCODE_SECTION_INFO(DECL)\t\t\t\t\\\n-do {\t\t\t\t\t\t\t\t\\\n-  if (TREE_CODE (DECL) == FUNCTION_DECL && ! TREE_PUBLIC (DECL)) \\\n-    SYMBOL_REF_FLAG (XEXP (DECL_RTL (DECL), 0)) = 1;\t\t\\\n-} while (0)\n-\n /* Perform any needed actions needed for a function that is receiving a\n    variable number of arguments. \n \n@@ -457,28 +447,11 @@ do {\t\t\t\t\t\t\t\t\t\\\n   sprintf ((OUTPUT), \"%s___%d\", (NAME), (LABELNO)))\n \n #undef ASM_SPEC\n-#define ASM_SPEC \"-nocpp %{pg}\"\n-\n #undef ASM_FINAL_SPEC\n-\n-#define OPTIMIZATION_OPTIONS                       \\\n-{                                                  \\\n-   write_symbols = PREFERRED_DEBUGGING_TYPE;       \\\n-   debug_info_level = (enum debug_info_level) 2;   \\\n-}\n-\n-#undef OVERRIDE_OPTIONS\n-#define OVERRIDE_OPTIONS                           \\\n-{                                                  \\\n-   if (write_symbols == NO_DEBUG)                  \\\n-     debug_info_level = (enum debug_info_level) 0; \\\n-   override_options ();                            \\\n-}\n-\n #undef LINK_SPEC\n-#define LINK_SPEC \"%{g3:-g3} %{g0:-g0} %{shared:-shared} %{v:-v}\"\n-\n #undef STARTFILE_SPEC\n+#define ASM_SPEC \"-nocpp %{pg}\"\n+#define LINK_SPEC \"%{g3:-g3} %{g0:-g0} %{shared:-shared} %{v:-v}\"\n \n /* Define the names of the division and modulus functions.  */\n #define DIVSI3_LIBCALL \"OTS$DIV_I\""}, {"sha": "4bf20c0a38511ae7689dd4e72a64c0e62b5f0756", "filename": "gcc/config/alpha/xm-alpha.h", "status": "modified", "additions": 0, "deletions": 8, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/956d69504d77d301015532d2f0564213f0efc706/gcc%2Fconfig%2Falpha%2Fxm-alpha.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/956d69504d77d301015532d2f0564213f0efc706/gcc%2Fconfig%2Falpha%2Fxm-alpha.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Falpha%2Fxm-alpha.h?ref=956d69504d77d301015532d2f0564213f0efc706", "patch": "@@ -71,14 +71,6 @@ extern void *malloc (), *realloc (), *calloc ();\n #include \"string.h\"\n #endif\n \n-/* OSF/1 has vprintf.  */\n-\n-#define HAVE_VPRINTF\n-\n-/* OSF/1 has putenv.  */\n-\n-#define HAVE_PUTENV\n-\n /* OSF/1 is POSIX.1 compliant.  */\n \n #define POSIX"}, {"sha": "7272cc927c893c8a5aafbb541556a86ab9d2026f", "filename": "gcc/config/arc/arc.c", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/956d69504d77d301015532d2f0564213f0efc706/gcc%2Fconfig%2Farc%2Farc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/956d69504d77d301015532d2f0564213f0efc706/gcc%2Fconfig%2Farc%2Farc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farc%2Farc.c?ref=956d69504d77d301015532d2f0564213f0efc706", "patch": "@@ -1118,7 +1118,7 @@ arc_output_function_prologue (file, size)\n   if (size == 0 && gmask)\n     abort ();\n \n-  /* Allocate space for register argumenets if this is a variadic function.  */\n+  /* Allocate space for register arguments if this is a variadic function.  */\n   if (current_frame_info.pretend_size != 0)\n     fprintf (file, \"\\tsub %s,%s,%d\\n\",\n \t     sp_str, sp_str, current_frame_info.pretend_size);\n@@ -1565,7 +1565,7 @@ arc_print_operand (file, x, code)\n   switch (code)\n     {\n     case '#' :\n-      /* Conditional brances.  For now these are equivalent.  */\n+      /* Conditional branches.  For now these are equivalent.  */\n     case '*' :\n       /* Unconditional branches.  Output the appropriate delay slot suffix.  */\n       if (!final_sequence || XVECLEN (final_sequence, 0) == 1)\n@@ -1971,7 +1971,7 @@ arc_final_prescan_insn (insn, opvec, noperands)\n   if (GET_CODE (insn) != JUMP_INSN)\n     return;\n \n-  /* This jump might be paralled with a clobber of the condition codes,\n+  /* This jump might be paralleled with a clobber of the condition codes,\n      the jump should always come first.  */\n   if (GET_CODE (body) == PARALLEL && XVECLEN (body, 0) > 0)\n     body = XVECEXP (body, 0, 0);\n@@ -2161,7 +2161,7 @@ arc_final_prescan_insn (insn, opvec, noperands)\n \n       /* Restore recog_operand.  Getting the attributes of other insns can\n \t destroy this array, but final.c assumes that it remains intact\n-\t accross this call; since the insn has been recognized already we\n+\t across this call; since the insn has been recognized already we\n \t call insn_extract direct. */\n       insn_extract (insn);\n     }"}, {"sha": "b73da5b1f37d35fc61107751965bf6c46999b183", "filename": "gcc/config/arm/arm.c", "status": "modified", "additions": 11, "deletions": 9, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/956d69504d77d301015532d2f0564213f0efc706/gcc%2Fconfig%2Farm%2Farm.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/956d69504d77d301015532d2f0564213f0efc706/gcc%2Fconfig%2Farm%2Farm.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm.c?ref=956d69504d77d301015532d2f0564213f0efc706", "patch": "@@ -1,7 +1,7 @@\n /* Output routines for GCC for ARM/RISCiX.\n    Copyright (C) 1991, 93, 94, 95, 96, 1997 Free Software Foundation, Inc.\n    Contributed by Pieter `Tiggr' Schoenmakers (rcpieter@win.tue.nl)\n-   \t      and Martin Simmons (@harleqn.co.uk).\n+   and Martin Simmons (@harleqn.co.uk).\n    More major hacks by Richard Earnshaw (rwe11@cl.cam.ac.uk)\n \n This file is part of GNU CC.\n@@ -176,7 +176,7 @@ static struct processors all_procs[] =\n   {\"arm600\",\tPROCESSOR_ARM6, FL_CO_PROC | FL_MODE32 | FL_MODE26},\n   {\"arm610\",\tPROCESSOR_ARM6, FL_MODE32 | FL_MODE26},\n   {\"arm7\",\tPROCESSOR_ARM7, FL_CO_PROC | FL_MODE32 | FL_MODE26},\n-  /* arm7m doesn't exist on its own, only in conjuction with D, (and I), but\n+  /* arm7m doesn't exist on its own, only in conjunction with D, (and I), but\n      those don't alter the code, so it is sometimes known as the arm7m */\n   {\"arm7m\",\tPROCESSOR_ARM7, (FL_CO_PROC | FL_FAST_MULT | FL_MODE32\n \t\t\t\t | FL_MODE26)},\n@@ -1302,10 +1302,12 @@ arm_finalize_pic ()\n   l1 = gen_label_rtx ();\n \n   global_offset_table = gen_rtx (SYMBOL_REF, Pmode, \"_GLOBAL_OFFSET_TABLE_\");\n+  /* The PC contains 'dot'+8, but the label L1 is on the next\n+     instruction, so the offset is only 'dot'+4.  */\n   pic_tmp = gen_rtx (CONST, VOIDmode, \n \t\t     gen_rtx (PLUS, Pmode, \n \t\t\t      gen_rtx (LABEL_REF, VOIDmode, l1),\n-\t\t\t      GEN_INT (8)));\n+\t\t\t      GEN_INT (4)));\n   pic_tmp2 = gen_rtx (CONST, VOIDmode,\n \t\t      gen_rtx (PLUS, Pmode,\n \t\t\t       global_offset_table,\n@@ -3050,7 +3052,7 @@ gen_rotated_half_load (memref)\n       base = XEXP (base, 0);\n     }\n \n-  /* If we aren't allowed to generate unalligned addresses, then fail.  */\n+  /* If we aren't allowed to generate unaligned addresses, then fail.  */\n   if (TARGET_SHORT_BY_BYTES\n       && ((BYTES_BIG_ENDIAN ? 1 : 0) ^ ((offset & 2) == 0)))\n     return NULL;\n@@ -3075,7 +3077,7 @@ select_dominance_cc_mode (op, x, y, cond_or)\n \n   /* Currently we will probably get the wrong result if the individual\n      comparisons are not simple.  This also ensures that it is safe to\n-     reverse a comparions if necessary.  */\n+     reverse a comparison if necessary.  */\n   if ((arm_select_cc_mode (cond1 = GET_CODE (x), XEXP (x, 0), XEXP (x, 1))\n        != CCmode)\n       || (arm_select_cc_mode (cond2 = GET_CODE (y), XEXP (y, 0), XEXP (y, 1))\n@@ -3191,10 +3193,10 @@ arm_select_cc_mode (op, x, y)\n \t  || GET_CODE (x) == ROTATERT))\n     return CC_SWPmode;\n \n-  /* This is a special case, that is used by combine to alow a \n-     comarison of a shifted byte load to be split into a zero-extend\n+  /* This is a special case that is used by combine to allow a \n+     comparison of a shifted byte load to be split into a zero-extend\n      followed by a comparison of the shifted integer (only valid for\n-     equalities and unsigned inequalites.  */\n+     equalities and unsigned inequalities).  */\n   if (GET_MODE (x) == SImode\n       && GET_CODE (x) == ASHIFT\n       && GET_CODE (XEXP (x, 1)) == CONST_INT && INTVAL (XEXP (x, 1)) == 24\n@@ -5940,7 +5942,7 @@ aof_data_section ()\n \n /* The AOF assembler is religiously strict about declarations of\n    imported and exported symbols, so that it is impossible to declare\n-   a function as imported near the begining of the file, and then to\n+   a function as imported near the beginning of the file, and then to\n    export it later on.  It is, however, possible to delay the decision\n    until all the functions in the file have been compiled.  To get\n    around this, we maintain a list of the imports and exports, and"}, {"sha": "56064bee9fd6f5d0e95c1b0cccf56ee2bcb2fe7e", "filename": "gcc/config/i386/cygwin32.h", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/956d69504d77d301015532d2f0564213f0efc706/gcc%2Fconfig%2Fi386%2Fcygwin32.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/956d69504d77d301015532d2f0564213f0efc706/gcc%2Fconfig%2Fi386%2Fcygwin32.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fcygwin32.h?ref=956d69504d77d301015532d2f0564213f0efc706", "patch": "@@ -41,6 +41,9 @@ Boston, MA 02111-1307, USA. */\n   -D__cdecl=__attribute__((__cdecl__)) \\\n   -Asystem(winnt) -Acpu(i386) -Amachine(i386)\"\n \n+#undef CPP_SPEC\n+#define CPP_SPEC \"-remap %(cpp_cpu) %[cpp_cpu] %{posix:-D_POSIX_SOURCE}\"\n+\n /* We have to dynamic link to get to the system DLLs.  All of libc, libm and\n    the Unix stuff is in cygwin.dll.  The import library is called\n    'libcygwin.a'.  For Windows applications, include more libraries, but"}, {"sha": "a4ec3b6a3f2945969a67960f333d12945a3bfd7a", "filename": "gcc/config/i386/i386.c", "status": "modified", "additions": 3, "deletions": 4, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/956d69504d77d301015532d2f0564213f0efc706/gcc%2Fconfig%2Fi386%2Fi386.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/956d69504d77d301015532d2f0564213f0efc706/gcc%2Fconfig%2Fi386%2Fi386.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.c?ref=956d69504d77d301015532d2f0564213f0efc706", "patch": "@@ -35,7 +35,6 @@ Boston, MA 02111-1307, USA. */\n #include \"flags.h\"\n #include \"except.h\"\n #include \"function.h\"\n-#include \"dwarf2.h\"\n \n #ifdef EXTRA_CONSTRAINT\n /* If EXTRA_CONSTRAINT is defined, then the 'S'\n@@ -4841,7 +4840,7 @@ reg_mentioned_in_mem (reg, rtl)\n   return 0;\n }\n \f\n-/* Output the approprate insns for doing strlen if not just doing repnz; scasb\n+/* Output the appropriate insns for doing strlen if not just doing repnz; scasb\n \n    operands[0] = result, initialized with the startaddress\n    operands[1] = alignment of the address.\n@@ -4896,7 +4895,7 @@ output_strlen_unroll (operands)\n \t     therefore use andl rather than andb. */\n \t  output_asm_insn (AS2 (and%L1,%4,%1), xops);\n \n-\t  /* Is aligned to 4-byte adress when zero */\n+\t  /* Is aligned to 4-byte address when zero */\n \t  output_asm_insn (AS1 (je,%l8), xops);\n \n \t  /* Side-effect even Parity when %eax == 3 */\n@@ -4916,7 +4915,7 @@ output_strlen_unroll (operands)\n \t     check if is aligned to 4 - byte.  */\n \t  output_asm_insn (AS2 (and%L1,%3,%1), xops);\n \n-\t  /* Is aligned to 4-byte adress when zero */\n+\t  /* Is aligned to 4-byte address when zero */\n \t  output_asm_insn (AS1 (je,%l8), xops);\n         }\n "}, {"sha": "9bfef4e98b2c4115d001b18b5e5c76f5a0e5aeca", "filename": "gcc/config/i386/i386.h", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/956d69504d77d301015532d2f0564213f0efc706/gcc%2Fconfig%2Fi386%2Fi386.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/956d69504d77d301015532d2f0564213f0efc706/gcc%2Fconfig%2Fi386%2Fi386.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.h?ref=956d69504d77d301015532d2f0564213f0efc706", "patch": "@@ -207,6 +207,8 @@ extern int target_flags;\n   { \"no-debug-arg\",\t\t-MASK_DEBUG_ARG },\t\t\t\\\n   { \"stack-arg-probe\",\t\t MASK_STACK_PROBE },\t\t\t\\\n   { \"no-stack-arg-probe\",\t-MASK_STACK_PROBE },\t\t\t\\\n+  { \"windows\",\t\t\t0 },\t\t\t\t\t\\\n+  { \"dll\",\t\t\t0 },\t\t\t\t\t\\\n   SUBTARGET_SWITCHES\t\t\t\t\t\t\t\\\n   { \"\", MASK_SCHEDULE_PROLOGUE | TARGET_DEFAULT}}\n "}, {"sha": "b31ceb9f799dd74be9ca3c38863fce7918e336d3", "filename": "gcc/config/i386/rtems.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/956d69504d77d301015532d2f0564213f0efc706/gcc%2Fconfig%2Fi386%2Frtems.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/956d69504d77d301015532d2f0564213f0efc706/gcc%2Fconfig%2Fi386%2Frtems.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Frtems.h?ref=956d69504d77d301015532d2f0564213f0efc706", "patch": "@@ -1,4 +1,4 @@\n-/* Definitions for rtems targetting an Intel i386 using coff.\n+/* Definitions for rtems targeting an Intel i386 using coff.\n    Copyright (C) 1996, 1997 Free Software Foundation, Inc.\n    Contributed by Joel Sherrill (joel@OARcorp.com).\n "}, {"sha": "d2bb1593358c42a65bd3785c53e5bf101ce16125", "filename": "gcc/config/i386/sco5.h", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/956d69504d77d301015532d2f0564213f0efc706/gcc%2Fconfig%2Fi386%2Fsco5.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/956d69504d77d301015532d2f0564213f0efc706/gcc%2Fconfig%2Fi386%2Fsco5.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fsco5.h?ref=956d69504d77d301015532d2f0564213f0efc706", "patch": "@@ -289,8 +289,8 @@ do {\t\t\t\t\t\t\t\t\t\\\n    NAME whose size is SIZE bytes and alignment is ALIGN bytes.\n    Try to use asm_output_aligned_bss to implement this macro.  */\n \n-#define ASM_OUTPUT_ALIGNED_BSS(FILE, DECL, NAME, SIZE, ALIGN) \t\t\\\n-  asm_output_aligned_bss (FILE, DECL, NAME, SIZE, ALIGN)\n+#define ASM_OUTPUT_ALIGNED_BSS(FILE, DECL, NAME, SIZE, ALIGN) \\\n+asm_output_aligned_bss (FILE, DECL, NAME, SIZE, ALIGN)\n \n #undef ESCAPES\n #define ESCAPES \\\n@@ -694,7 +694,7 @@ dtors_section ()\t\t\t\t\t\t\t\\\n #undef NO_IMPLICIT_EXTERN_C\n #define NO_IMPLICIT_EXTERN_C 1\n \n-/* JKJ FIXME - examine the rammifications of RETURN_IN_MEMORY and\n+/* JKJ FIXME - examine the ramifications of RETURN_IN_MEMORY and\n    RETURN_POPS_ARGS */\n \n #undef RETURN_POPS_ARGS"}, {"sha": "a734a81b94eb315184e7e3291022cf949c197fd6", "filename": "gcc/config/i386/xm-dos.h", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/956d69504d77d301015532d2f0564213f0efc706/gcc%2Fconfig%2Fi386%2Fxm-dos.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/956d69504d77d301015532d2f0564213f0efc706/gcc%2Fconfig%2Fi386%2Fxm-dos.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fxm-dos.h?ref=956d69504d77d301015532d2f0564213f0efc706", "patch": "@@ -1,8 +1,5 @@\n #include \"i386/xm-i386.h\"\n \n-/* Inhibit cccp.c's definition of putenv.  */\n-#define HAVE_PUTENV\n-\n /* Use semicolons to separate elements of a path.  */\n #define PATH_SEPARATOR ';'\n "}, {"sha": "47356f568d1db46835a91e45f49e79db1f2c3d20", "filename": "gcc/config/i386/xm-mingw32.h", "status": "modified", "additions": 3, "deletions": 10, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/956d69504d77d301015532d2f0564213f0efc706/gcc%2Fconfig%2Fi386%2Fxm-mingw32.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/956d69504d77d301015532d2f0564213f0efc706/gcc%2Fconfig%2Fi386%2Fxm-mingw32.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fxm-mingw32.h?ref=956d69504d77d301015532d2f0564213f0efc706", "patch": "@@ -33,20 +33,13 @@ Boston, MA 02111-1307, USA. */\n #define USE_PROTOTYPES 1\n #endif\n \n-#ifndef HAVE_VPRINTF\n-#define HAVE_VPRINTF 1\n-#endif\n-\n #define NO_SYS_SIGLIST 1\n-#define bcmp(a,b,c) memcmp (a,b,c)\n-#define bcopy(a,b,c) memcpy (b,a,c)\n-#define bzero(a,b) memset (a,0,b)\n-#define index  strchr\n-#define rindex strrchr\n-#define kill(a,b) raise(b)\n #define link(a,b) -1\n #define environ _environ\n \n /* Even though we support \"/\", allow \"\\\" since everybody tests both.  */\n #define DIR_SEPARATOR '\\\\'\n #define EXECUTABLE_SUFFIX \".exe\"\n+\n+#undef PATH_SEPARATOR\n+#define PATH_SEPARATOR ';'"}, {"sha": "714706859d99317b4bdf92f21c8ffaa46b720a0c", "filename": "gcc/config/i960/rtems.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/956d69504d77d301015532d2f0564213f0efc706/gcc%2Fconfig%2Fi960%2Frtems.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/956d69504d77d301015532d2f0564213f0efc706/gcc%2Fconfig%2Fi960%2Frtems.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi960%2Frtems.h?ref=956d69504d77d301015532d2f0564213f0efc706", "patch": "@@ -1,4 +1,4 @@\n-/* Definitions for rtems targetting an Intel i960.\n+/* Definitions for rtems targeting an Intel i960.\n    Copyright (C) 1996, 1997 Free Software Foundation, Inc.\n    Contributed by Joel Sherrill (joel@OARcorp.com).\n "}, {"sha": "870bbd277feedb1f9df435a5508ad821bc632aef", "filename": "gcc/config/linux.h", "status": "modified", "additions": 9, "deletions": 10, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/956d69504d77d301015532d2f0564213f0efc706/gcc%2Fconfig%2Flinux.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/956d69504d77d301015532d2f0564213f0efc706/gcc%2Fconfig%2Flinux.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Flinux.h?ref=956d69504d77d301015532d2f0564213f0efc706", "patch": "@@ -1,4 +1,4 @@\n-/* Definitions for Linux with ELF format\n+/* Definitions for Linux-based GNU systems with ELF format\n    Copyright (C) 1995, 1996, 1997 Free Software Foundation, Inc.\n    Contributed by Eric Youngdale.\n    Modified for stabs-in-ELF by H.J. Lu.\n@@ -26,7 +26,7 @@ Boston, MA 02111-1307, USA.  */\n #undef HAVE_ATEXIT\n #define HAVE_ATEXIT\n \n-/* Linux uses ctype from glibc.a. I am not sure how complete it is.\n+/* GNU/Linux uses ctype from glibc.a. I am not sure how complete it is.\n    For now, we play safe. It may change later. */\n \n #if 0\n@@ -59,8 +59,8 @@ Boston, MA 02111-1307, USA.  */\n \tfprintf (FILE, \"\\t.version\\t\\\"01.01\\\"\\n\");\t\t\t\\\n   } while (0)\n \n-/* Provide a STARTFILE_SPEC appropriate for Linux.  Here we add\n-   the Linux magical crtbegin.o file (see crtstuff.c) which\n+/* Provide a STARTFILE_SPEC appropriate for GNU/Linux.  Here we add\n+   the GNU/Linux magical crtbegin.o file (see crtstuff.c) which\n    provides part of the support for getting C++ file-scope static\n    object constructed before entering `main'. */\n    \n@@ -72,11 +72,11 @@ Boston, MA 02111-1307, USA.  */\n \t\t\t %{!profile:crt1.o%s}}}} \\\n    crti.o%s %{!shared:crtbegin.o%s} %{shared:crtbeginS.o%s}\"\n \n-/* Provide a ENDFILE_SPEC appropriate for Linux.  Here we tack on\n-   the Linux magical crtend.o file (see crtstuff.c) which\n+/* Provide a ENDFILE_SPEC appropriate for GNU/Linux.  Here we tack on\n+   the GNU/Linux magical crtend.o file (see crtstuff.c) which\n    provides part of the support for getting C++ file-scope static\n    object constructed before entering `main', followed by a normal\n-   Linux \"finalizer\" file, `crtn.o'.  */\n+   GNU/Linux \"finalizer\" file, `crtn.o'.  */\n \n #undef\tENDFILE_SPEC\n #define ENDFILE_SPEC \\\n@@ -94,9 +94,8 @@ Boston, MA 02111-1307, USA.  */\n \n #undef\tLIB_SPEC\n /* We no longer link with libc_p.a or libg.a by default. If you\n- * want to profile or debug the Linux C library, please add\n- * -profile or -ggdb to LDFLAGS at the link time, respectively.\n- */\n+   want to profile or debug the GNU/Linux C library, please add\n+   -profile or -ggdb to LDFLAGS at the link time, respectively. */\n #if 1\n #ifdef USE_GNULIBC_1\n #define LIB_SPEC \\"}, {"sha": "837712a38c611d9d2dda256da73581773e473862", "filename": "gcc/config/m68k/linux.h", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/956d69504d77d301015532d2f0564213f0efc706/gcc%2Fconfig%2Fm68k%2Flinux.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/956d69504d77d301015532d2f0564213f0efc706/gcc%2Fconfig%2Fm68k%2Flinux.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm68k%2Flinux.h?ref=956d69504d77d301015532d2f0564213f0efc706", "patch": "@@ -1,4 +1,5 @@\n-/* Definitions for Motorola 68k running Linux with ELF format.\n+/* Definitions for Motorola 68k running Linux-based GNU systems with\n+   ELF format.\n    Copyright (C) 1995, 1996, 1997 Free Software Foundation, Inc.\n \n This file is part of GNU CC.\n@@ -30,7 +31,7 @@ Boston, MA 02111-1307, USA.  */\n #include <linux.h>\t\t/* some common stuff */\n \n #undef TARGET_VERSION\n-#define TARGET_VERSION fprintf (stderr, \" (68k Linux/ELF)\");\n+#define TARGET_VERSION fprintf (stderr, \" (68k GNU/Linux with ELF)\");\n \n /* 68020 with 68881 */\n #define TARGET_DEFAULT (MASK_BITFIELD|MASK_68881|MASK_68020)\n@@ -135,7 +136,7 @@ Boston, MA 02111-1307, USA.  */\n   \"%{v:-V} %{Qy:} %{!Qn:-Qy} %{n} %{T} %{Ym,*} %{Yd,*} %{Wa,*:%*} \\\n %{m68040} %{m68060:-m68040}\"\n \n-/* Provide a LINK_SPEC appropriate for Linux.  Here we provide support\n+/* Provide a LINK_SPEC appropriate for GNU/Linux.  Here we provide support\n    for the special GCC options -static and -shared, which allow us to\n    link things in one of these three modes by applying the appropriate\n    combinations of options at link-time.  We like to support here for"}, {"sha": "4d958f1bea0d2eda10fb140666a5df481bfc6410", "filename": "gcc/config/m68k/m68k.c", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/956d69504d77d301015532d2f0564213f0efc706/gcc%2Fconfig%2Fm68k%2Fm68k.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/956d69504d77d301015532d2f0564213f0efc706/gcc%2Fconfig%2Fm68k%2Fm68k.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm68k%2Fm68k.c?ref=956d69504d77d301015532d2f0564213f0efc706", "patch": "@@ -32,7 +32,7 @@ Boston, MA 02111-1307, USA.  */\n #include \"insn-flags.h\"\n #include \"output.h\"\n #include \"insn-attr.h\"\n-#include \"dwarf2.h\"\n+#include \"tree.h\"\n \n /* Needed for use_return_insn.  */\n #include \"flags.h\"\n@@ -1313,6 +1313,8 @@ legitimize_pic_address (orig, mode, reg)\n \t\t\t gen_rtx (PLUS, Pmode,\n \t\t\t\t  pic_offset_table_rtx, orig));\n       current_function_uses_pic_offset_table = 1;\n+      if (reload_in_progress)\n+\tregs_ever_live[PIC_OFFSET_TABLE_REGNUM] = 1;\n       RTX_UNCHANGING_P (pic_ref) = 1;\n       emit_move_insn (reg, pic_ref);\n       return reg;"}, {"sha": "8c9cad0b522f2a9eaffa3d4a1c9442bfe529aa35", "filename": "gcc/config/m68k/m68k.h", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/956d69504d77d301015532d2f0564213f0efc706/gcc%2Fconfig%2Fm68k%2Fm68k.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/956d69504d77d301015532d2f0564213f0efc706/gcc%2Fconfig%2Fm68k%2Fm68k.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm68k%2Fm68k.h?ref=956d69504d77d301015532d2f0564213f0efc706", "patch": "@@ -280,8 +280,8 @@ extern int target_flags;\n \n /* No data type wants to be aligned rounder than this. \n    Most published ABIs say that ints should be aligned on 16 bit\n-   boundries, but cpus with 32 bit busses get better performance\n-   aligned on 32 bit boundries.  Coldfires without a misalignment\n+   boundaries, but cpus with 32 bit busses get better performance\n+   aligned on 32 bit boundaries.  Coldfires without a misalignment\n    module require 32 bit alignment. */\n #define BIGGEST_ALIGNMENT (TARGET_ALIGN_INT ? 32 : 16)\n \n@@ -378,7 +378,7 @@ extern int target_flags;\n    and are not available for the register allocator.\n    On the 68000, only the stack pointer is such.  */\n \n-/* fpa0 is also reserved so that it can be used to move shit back and\n+/* fpa0 is also reserved so that it can be used to move data back and\n    forth between high fpa regs and everything else. */\n \n #define FIXED_REGISTERS        \\"}, {"sha": "77c02f8e9c85501f16c3d91f09e942aef4dc34d9", "filename": "gcc/config/m68k/rtems.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/956d69504d77d301015532d2f0564213f0efc706/gcc%2Fconfig%2Fm68k%2Frtems.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/956d69504d77d301015532d2f0564213f0efc706/gcc%2Fconfig%2Fm68k%2Frtems.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm68k%2Frtems.h?ref=956d69504d77d301015532d2f0564213f0efc706", "patch": "@@ -1,4 +1,4 @@\n-/* Definitions for rtems targetting a Motorola m68k using coff.\n+/* Definitions for rtems targeting a Motorola m68k using coff.\n    Copyright (C) 1996, 1997 Free Software Foundation, Inc.\n    Contributed by Joel Sherrill (joel@OARcorp.com).\n "}, {"sha": "8f4c0a46bf9d3ab509689484d22a759e5858f7ec", "filename": "gcc/config/m68k/xm-mot3300.h", "status": "modified", "additions": 1, "deletions": 8, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/956d69504d77d301015532d2f0564213f0efc706/gcc%2Fconfig%2Fm68k%2Fxm-mot3300.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/956d69504d77d301015532d2f0564213f0efc706/gcc%2Fconfig%2Fm68k%2Fxm-mot3300.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm68k%2Fxm-mot3300.h?ref=956d69504d77d301015532d2f0564213f0efc706", "patch": "@@ -1,6 +1,6 @@\n /* Configuration for GNU C-compiler for Motorola 68000 family.\n    SysV68 Motorola 3300 Delta Series\n-   Copyright (C) 1994, 1995, 1996 Free Software Foundation, Inc.\n+   Copyright (C) 1994, 1995, 1996, 1997 Free Software Foundation, Inc.\n \n This file is part of GNU CC.\n \n@@ -24,13 +24,6 @@ Boston, MA 02111-1307, USA.  */\n \n #include \"m68k/xm-m68k.h\"\n \n-#define bcopy(a,b,c) memcpy (b,a,c)\n-#define bzero(a,b) memset (a,0,b)\n-#define bcmp(a,b,c) memcmp (a,b,c)\n-\n-#define rindex strrchr\n-#define index strchr\n-\n #define NO_SYS_SIGLIST\n \n /* do not use alloca from -lPW with cc, because function epilogues use %sp */"}, {"sha": "3e4c66ea90c87005215cb7482ace6f2087dce9eb", "filename": "gcc/config/m88k/dgux.h", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/956d69504d77d301015532d2f0564213f0efc706/gcc%2Fconfig%2Fm88k%2Fdgux.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/956d69504d77d301015532d2f0564213f0efc706/gcc%2Fconfig%2Fm88k%2Fdgux.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm88k%2Fdgux.h?ref=956d69504d77d301015532d2f0564213f0efc706", "patch": "@@ -1,6 +1,6 @@\n /* Definitions of target machine for GNU compiler.\n    Motorola m88100 running DG/UX.\n-   Copyright (C) 1988, 92, 93, 94, 95, 1996 Free Software Foundation, Inc.\n+   Copyright (C) 1988, 92, 93, 94, 95, 96, 1997 Free Software Foundation, Inc.\n    Contributed by Michael Tiemann (tiemann@mcc.com)\n    Currently maintained by (gcc@dg-rtp.dg.com)\n \n@@ -30,7 +30,7 @@ Boston, MA 02111-1307, USA.  */\n   (TARGET_SVR4 ? DWARF_DEBUG : SDB_DEBUG)\n \n #ifndef VERSION_INFO2\n-#define VERSION_INFO2   \"$Revision: 1.1.1.1 $\"\n+#define VERSION_INFO2   \"$Revision: 1.3 $\"\n #endif\n #ifndef NO_BUGS\n #define AS_BUG_IMMEDIATE_LABEL\n@@ -134,6 +134,8 @@ Boston, MA 02111-1307, USA.  */\n   { \"startfile_default\", STARTFILE_DEFAULT_SPEC },  \\\n   { \"startfile_crtbegin\", STARTFILE_CRTBEGIN_SPEC }\n    \n+/* Keep this left justified, no white space is allowed between\n+   the arguments to the -Wc option */\n #define ASM_CPU_SPEC \"\\\n \t\t  %{v:-V}\\\n \t\t  %{g:\\"}, {"sha": "45938a1d1e9ebfd2eefb4f05101f3f5e526ea8c3", "filename": "gcc/config/m88k/m88k.c", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/956d69504d77d301015532d2f0564213f0efc706/gcc%2Fconfig%2Fm88k%2Fm88k.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/956d69504d77d301015532d2f0564213f0efc706/gcc%2Fconfig%2Fm88k%2Fm88k.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm88k%2Fm88k.c?ref=956d69504d77d301015532d2f0564213f0efc706", "patch": "@@ -2650,13 +2650,15 @@ m88k_builtin_saveregs (arglist)\n       emit_library_call (chkr_set_right_libfunc, 1, VOIDmode, 3,\n \t\t\t block, ptr_mode,\n \t\t\t GEN_INT (3 * UNITS_PER_WORD), TYPE_MODE (sizetype),\n-\t\t\t GEN_INT (MEMORY_USE_RW), QImode);\n+\t\t\t GEN_INT (MEMORY_USE_RW),\n+\t\t\t TYPE_MODE (integer_type_node));\n       if (fixed < 8)\n \temit_library_call (chkr_set_right_libfunc, 1, VOIDmode, 3,\n \t\t\t   dest, ptr_mode,\n \t\t\t   GEN_INT (UNITS_PER_WORD * (8 - fixed)),\n \t\t\t   TYPE_MODE (sizetype),\n-\t\t\t   GEN_INT (MEMORY_USE_RW), QImode);\n+\t\t\t   GEN_INT (MEMORY_USE_RW),\n+\t\t\t   TYPE_MODE (integer_type_node));\n     }\n \n   /* Return the address of the va_list constructor, but don't put it in a"}, {"sha": "b330f5980fc23d42fcb75a43757102be7c736f92", "filename": "gcc/config/m88k/xm-m88k.h", "status": "modified", "additions": 1, "deletions": 12, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/956d69504d77d301015532d2f0564213f0efc706/gcc%2Fconfig%2Fm88k%2Fxm-m88k.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/956d69504d77d301015532d2f0564213f0efc706/gcc%2Fconfig%2Fm88k%2Fxm-m88k.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm88k%2Fxm-m88k.h?ref=956d69504d77d301015532d2f0564213f0efc706", "patch": "@@ -1,6 +1,6 @@\n /* Configuration for GNU compiler.\n    Motorola m88100 in an 88open OCS/BCS environment.\n-   Copyright (C) 1988, 1989, 1990, 1991, 1993 Free Software Foundation, Inc.\n+   Copyright (C) 1988, 89, 90, 91, 93, 1997 Free Software Foundation, Inc.\n \n This file is part of GNU CC.\n \n@@ -37,14 +37,6 @@ Boston, MA 02111-1307, USA.  */\n #define SUCCESS_EXIT_CODE 0\n #define FATAL_EXIT_CODE 33\n \n-/* Use System V memory functions.  */\n-#define bcopy(a,b,c) memcpy (b,a,c)\n-#define bzero(a,b) memset (a,0,b)\n-#define bcmp(a,b,c) memcmp (a,b,c)\n-\n-#define rindex strrchr\n-#define index strchr\n-\n /* The 88open BCS (and ABI) environment doesn't support BSD features\n    (vfork, getrusage), so use USG.  The Omron Luna/88k is BSD though.  */\n #ifndef luna88k\n@@ -54,9 +46,6 @@ Boston, MA 02111-1307, USA.  */\n #define NO_SYS_SIGLIST\n #endif\n \n-/* Define HAVE_VPRINTF if it is available on host system.  */\n-#define HAVE_VPRINTF\n-\n /* If not compiled with GNU C, use the C alloca */\n #ifndef __GNUC__\n #define USE_C_ALLOCA"}, {"sha": "5bc733cb42762ff76770bce2754541441ec8c4ae", "filename": "gcc/config/mips/iris6.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/956d69504d77d301015532d2f0564213f0efc706/gcc%2Fconfig%2Fmips%2Firis6.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/956d69504d77d301015532d2f0564213f0efc706/gcc%2Fconfig%2Fmips%2Firis6.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Firis6.h?ref=956d69504d77d301015532d2f0564213f0efc706", "patch": "@@ -1,5 +1,5 @@\n /* Definitions of target machine for GNU compiler.  Iris version 6.\n-   Copyright (C) 1994, 1995, 1996 Free Software Foundation, Inc.\n+   Copyright (C) 1994, 1995, 1996, 1997 Free Software Foundation, Inc.\n \n This file is part of GNU CC.\n \n@@ -140,7 +140,7 @@ Boston, MA 02111-1307, USA.  */\n   } while (0)\n \n /* Tell function_prologue in mips.c that we have already output the .ent/.end\n-   psuedo-ops.  */\n+   pseudo-ops.  */\n #define FUNCTION_NAME_ALREADY_DECLARED\n \n #undef SET_ASM_OP\t/* Has no equivalent.  See ASM_OUTPUT_DEF below.  */"}, {"sha": "78639d46bf7bbc9a9563a0c4a4c96603df57b03c", "filename": "gcc/config/mips/mips.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/956d69504d77d301015532d2f0564213f0efc706/gcc%2Fconfig%2Fmips%2Fmips.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/956d69504d77d301015532d2f0564213f0efc706/gcc%2Fconfig%2Fmips%2Fmips.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fmips.c?ref=956d69504d77d301015532d2f0564213f0efc706", "patch": "@@ -3687,7 +3687,7 @@ override_options ()\n     }\n \n   /* This optimization requires a linker that can support a R_MIPS_LO16\n-     relocation which is not immediately preceeded by a R_MIPS_HI16 relocation.\n+     relocation which is not immediately preceded by a R_MIPS_HI16 relocation.\n      GNU ld has this support, but not all other MIPS linkers do, so we enable\n      this optimization only if the user requests it, or if GNU ld is the\n      standard linker for this configuration.  */"}, {"sha": "44ac3b943d60fa8ea5f602d43abd1e81ae0bdb4a", "filename": "gcc/config/mips/mips.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/956d69504d77d301015532d2f0564213f0efc706/gcc%2Fconfig%2Fmips%2Fmips.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/956d69504d77d301015532d2f0564213f0efc706/gcc%2Fconfig%2Fmips%2Fmips.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fmips.h?ref=956d69504d77d301015532d2f0564213f0efc706", "patch": "@@ -1448,7 +1448,7 @@ do {\t\t\t\t\t\t\t\\\n \n    On the MIPS, all general registers are one word long.  Except on\n    the R4000 with the FR bit set, the floating point uses register\n-   pairs, with the second register not being allocatable.  */\n+   pairs, with the second register not being allocable.  */\n \n #define HARD_REGNO_NREGS(REGNO, MODE)\t\t\t\t\t\\\n   (! FP_REG_P (REGNO)\t\t\t\t\t\t\t\\"}, {"sha": "5dfbdefa012649b8d20ed0dcd22b6b016fda65db", "filename": "gcc/config/mips/mips.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/956d69504d77d301015532d2f0564213f0efc706/gcc%2Fconfig%2Fmips%2Fmips.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/956d69504d77d301015532d2f0564213f0efc706/gcc%2Fconfig%2Fmips%2Fmips.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fmips.md?ref=956d69504d77d301015532d2f0564213f0efc706", "patch": "@@ -255,7 +255,7 @@\n        (and (eq_attr \"mode\" \"DI\") (eq_attr \"cpu\" \"r5000\")))\n   68 68)\n \n-;; The R4300 does *NOT* have a seperate Floating Point Unit, instead\n+;; The R4300 does *NOT* have a separate Floating Point Unit, instead\n ;; the FP hardware is part of the normal ALU circuitry.  This means FP\n ;; instructions affect the pipe-line, and no functional unit\n ;; parallelism can occur on R4300 processors.  To force GCC into coding"}, {"sha": "6433ed564987c899aacf568888aa0f5cfd468c6f", "filename": "gcc/config/mips/rtems64.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/956d69504d77d301015532d2f0564213f0efc706/gcc%2Fconfig%2Fmips%2Frtems64.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/956d69504d77d301015532d2f0564213f0efc706/gcc%2Fconfig%2Fmips%2Frtems64.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Frtems64.h?ref=956d69504d77d301015532d2f0564213f0efc706", "patch": "@@ -1,4 +1,4 @@\n-/* Definitions for rtems targetting a MIPS ORION using ecoff.\n+/* Definitions for rtems targeting a MIPS ORION using ecoff.\n    Copyright (C) 1996, 1997 Free Software Foundation, Inc.\n    Contributed by Joel Sherrill (joel@OARcorp.com).\n "}, {"sha": "e10f78e5fcad72d294253d5ced18f9f8951f4263", "filename": "gcc/config/mips/xm-mips.h", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/956d69504d77d301015532d2f0564213f0efc706/gcc%2Fconfig%2Fmips%2Fxm-mips.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/956d69504d77d301015532d2f0564213f0efc706/gcc%2Fconfig%2Fmips%2Fxm-mips.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fxm-mips.h?ref=956d69504d77d301015532d2f0564213f0efc706", "patch": "@@ -1,5 +1,5 @@\n /* Configuration for GNU C-compiler for MIPS Rx000 family\n-   Copyright (C) 1989, 1990, 1991, 1993 Free Software Foundation, Inc.\n+   Copyright (C) 1989, 1990, 1991, 1993, 1997 Free Software Foundation, Inc.\n \n This file is part of GNU CC.\n \n@@ -77,8 +77,6 @@ extern char * alloca ();\n \n /* Say if we have vprintf.  BSD Mips targets probably don't have vfprintf.  */\n #if defined(__OSF1__) || defined(__OSF__) || defined(__osf__) || defined(bsd4_4)\n-#define HAVE_VPRINTF\n-#define HAVE_PUTENV\n \n #else\n #define NO_STAB_H\t\t/* mips doesn't typically have stab.h */"}, {"sha": "5435f773c8daf84c1e414687388365df54ba1366", "filename": "gcc/config/mn10200/mn10200.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/956d69504d77d301015532d2f0564213f0efc706/gcc%2Fconfig%2Fmn10200%2Fmn10200.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/956d69504d77d301015532d2f0564213f0efc706/gcc%2Fconfig%2Fmn10200%2Fmn10200.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmn10200%2Fmn10200.c?ref=956d69504d77d301015532d2f0564213f0efc706", "patch": "@@ -896,7 +896,7 @@ secondary_reload_class (class, mode, in, input)\n       && class == ADDRESS_REGS)\n     return DATA_REGS;\n \n-  /* Address register stores which are not PSImode need a scrach register.  */\n+  /* Address register stores which are not PSImode need a scratch register.  */\n   if (! input\n       && GET_CODE (in) == MEM\n       && (mode != PSImode)"}, {"sha": "2c51843f5742eb346cf88434d6ce38e124e24350", "filename": "gcc/config/mn10200/mn10200.h", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/956d69504d77d301015532d2f0564213f0efc706/gcc%2Fconfig%2Fmn10200%2Fmn10200.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/956d69504d77d301015532d2f0564213f0efc706/gcc%2Fconfig%2Fmn10200%2Fmn10200.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmn10200%2Fmn10200.h?ref=956d69504d77d301015532d2f0564213f0efc706", "patch": "@@ -1,5 +1,4 @@\n-/* Definitions of target machine for GNU compiler. \n-   Matsushita MN10200 series\n+/* Definitions of target machine for GNU compiler. Matsushita MN10200 series\n    Copyright (C) 1997 Free Software Foundation, Inc.\n    Contributed by Jeff Law (law@cygnus.com).\n \n@@ -954,7 +953,7 @@ do { char dstr[30];\t\t\t\t\t\\\n   if ((LOG) != 0)\t\t\t\\\n     fprintf (FILE, \"\\t.align %d\\n\", (LOG))\n \n-/* We don't have to worry about dbx compatability for the mn10200.  */\n+/* We don't have to worry about dbx compatibility for the mn10200.  */\n #define DEFAULT_GDB_EXTENSIONS 1\n \n /* Use stabs debugging info by default.  */"}, {"sha": "9dc753c3023ddd04d30726adceb221425c62bd8f", "filename": "gcc/config/mn10200/mn10200.md", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/956d69504d77d301015532d2f0564213f0efc706/gcc%2Fconfig%2Fmn10200%2Fmn10200.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/956d69504d77d301015532d2f0564213f0efc706/gcc%2Fconfig%2Fmn10200%2Fmn10200.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmn10200%2Fmn10200.md?ref=956d69504d77d301015532d2f0564213f0efc706", "patch": "@@ -30,7 +30,7 @@\n ;; none_0hit - insn does not affect cc but it does modify operand 0\n ;;\tThis attribute is used to keep track of when operand 0 changes.\n ;; \tSee the description of NOTICE_UPDATE_CC for more info.\n-;; set_znv - sets z,n,v to useable values; c is unknown.\n+;; set_znv - sets z,n,v to usable values; c is unknown.\n ;; set_zn  - sets z,n to usable values; v,c is unknown.\n ;; compare - compare instruction\n ;; clobber - value of cc is unknown\n@@ -1708,7 +1708,7 @@\n ;; a few times, then truncating the value to PSImode.\n ;;\n ;; This first pattern combines the shifting & truncation operations, by\n-;; itself it is a win because the shifts end up occuring in PSImode instead\n+;; itself it is a win because the shifts end up occurring in PSImode instead\n ;; of SImode.  However, it has the secondary effect of giving us the\n ;; opportunity to match patterns which allow us to remove the initial\n ;; extension completely, which is a big win."}, {"sha": "d813f2c32ccdb44bb8de4e67c034cdd15ff03646", "filename": "gcc/config/mn10300/mn10300.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/956d69504d77d301015532d2f0564213f0efc706/gcc%2Fconfig%2Fmn10300%2Fmn10300.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/956d69504d77d301015532d2f0564213f0efc706/gcc%2Fconfig%2Fmn10300%2Fmn10300.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmn10300%2Fmn10300.c?ref=956d69504d77d301015532d2f0564213f0efc706", "patch": "@@ -581,7 +581,7 @@ expand_epilogue ()\n      the stack with one instruction.\n \n      ?!? Only save registers which are actually used.  Reduces\n-     stack requireents and is faster.  */\n+     stack requirements and is faster.  */\n   if (regs_ever_live[2] || regs_ever_live[3]\n       || regs_ever_live[6] || regs_ever_live[7]\n       || frame_pointer_needed)"}, {"sha": "f244990cc09136df5e661bcd80065e6d91b58e1c", "filename": "gcc/config/mn10300/mn10300.h", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/956d69504d77d301015532d2f0564213f0efc706/gcc%2Fconfig%2Fmn10300%2Fmn10300.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/956d69504d77d301015532d2f0564213f0efc706/gcc%2Fconfig%2Fmn10300%2Fmn10300.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmn10300%2Fmn10300.h?ref=956d69504d77d301015532d2f0564213f0efc706", "patch": "@@ -1,5 +1,4 @@\n-/* Definitions of target machine for GNU compiler. \n-   Matsushita MN10300 series\n+/* Definitions of target machine for GNU compiler. Matsushita MN10300 series\n    Copyright (C) 1996, 1997 Free Software Foundation, Inc.\n    Contributed by Jeff Law (law@cygnus.com).\n \n@@ -937,7 +936,7 @@ do { char dstr[30];\t\t\t\t\t\\\n   if ((LOG) != 0)\t\t\t\\\n     fprintf (FILE, \"\\t.align %d\\n\", (LOG))\n \n-/* We don't have to worry about dbx compatability for the mn10300.  */\n+/* We don't have to worry about dbx compatibility for the mn10300.  */\n #define DEFAULT_GDB_EXTENSIONS 1\n \n /* Use stabs debugging info by default.  */"}, {"sha": "726418fba68dd8ed75598a674ca6623f494beed3", "filename": "gcc/config/mn10300/mn10300.md", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/956d69504d77d301015532d2f0564213f0efc706/gcc%2Fconfig%2Fmn10300%2Fmn10300.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/956d69504d77d301015532d2f0564213f0efc706/gcc%2Fconfig%2Fmn10300%2Fmn10300.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmn10300%2Fmn10300.md?ref=956d69504d77d301015532d2f0564213f0efc706", "patch": "@@ -1,4 +1,4 @@\n-; GCC machine description for Matsushita MN10300\n+;; GCC machine description for Matsushita MN10300\n ;; Copyright (C) 1996, 1997 Free Software Foundation, Inc.\n \n ;;   Contributed by Jeff Law (law@cygnus.com).\n@@ -30,8 +30,8 @@\n ;; none_0hit - insn does not affect cc but it does modify operand 0\n ;;\tThis attribute is used to keep track of when operand 0 changes.\n ;; \tSee the description of NOTICE_UPDATE_CC for more info.\n-;; set_znv - insn sets z,n,v to useable values; c is unusable.\n-;; set_zn  - insn sets z,n to useable values; v,c are unuseable.\n+;; set_znv - insn sets z,n,v to usable values; c is unusable.\n+;; set_zn  - insn sets z,n to usable values; v,c are unusable.\n ;; compare - compare instruction\n ;; invert -- like compare, but flags are inverted.\n ;; clobber - value of cc is unknown"}, {"sha": "9a2af5d578ca49e2d6ba175a09d991129329edec", "filename": "gcc/config/pa/pa-hpux10.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/956d69504d77d301015532d2f0564213f0efc706/gcc%2Fconfig%2Fpa%2Fpa-hpux10.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/956d69504d77d301015532d2f0564213f0efc706/gcc%2Fconfig%2Fpa%2Fpa-hpux10.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fpa%2Fpa-hpux10.h?ref=956d69504d77d301015532d2f0564213f0efc706", "patch": "@@ -1,5 +1,5 @@\n /* Definitions of target machine for GNU compiler, for HP PA-RISC 1.1\n-   Copyright (C) 1995, 1996 Free Software Foundation, Inc.\n+   Copyright (C) 1995, 1996, 1997 Free Software Foundation, Inc.\n    Contributed by Tim Moore (moore@defmacro.cs.utah.edu)\n \n This file is part of GNU CC.\n@@ -20,7 +20,7 @@ the Free Software Foundation, 59 Temple Place - Suite 330,\n Boston, MA 02111-1307, USA.  */\n \n /* We can debug dynamically linked executables on hpux9; we also want\n-   derefercing of a NULL pointer to cause a SEGV.  */\n+   dereferencing of a NULL pointer to cause a SEGV.  */\n #undef LINK_SPEC\n #if ((TARGET_DEFAULT | TARGET_CPU_DEFAULT) & 1)\n #define LINK_SPEC \\"}, {"sha": "eb1af93fe2f8eade70a85a5bb6ef9942d0e1ed08", "filename": "gcc/config/pa/pa.c", "status": "modified", "additions": 9, "deletions": 8, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/956d69504d77d301015532d2f0564213f0efc706/gcc%2Fconfig%2Fpa%2Fpa.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/956d69504d77d301015532d2f0564213f0efc706/gcc%2Fconfig%2Fpa%2Fpa.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fpa%2Fpa.c?ref=956d69504d77d301015532d2f0564213f0efc706", "patch": "@@ -126,17 +126,17 @@ override_options ()\n \n   if (flag_pic && (TARGET_NO_SPACE_REGS || TARGET_FAST_INDIRECT_CALLS))\n    {\n-      warning (\"PIC code generation is not compatable with fast indirect calls\\n\");\n+      warning (\"PIC code generation is not compatible with fast indirect calls\\n\");\n    }\n \n   if (flag_pic && profile_flag)\n     {\n-      warning (\"PIC code generation is not compatable with profiling\\n\");\n+      warning (\"PIC code generation is not compatible with profiling\\n\");\n     }\n \n   if (TARGET_SPACE && (flag_pic || profile_flag))\n     {\n-      warning (\"Out of line entry/exit sequences are not compatable\\n\");\n+      warning (\"Out of line entry/exit sequences are not compatible\\n\");\n       warning (\"with PIC or profiling\\n\");\n     }\n \n@@ -1885,7 +1885,7 @@ find_addr_reg (addr)\n    OPERANDS[4] is the size as a CONST_INT\n    OPERANDS[3] is a register for temporary storage.\n    OPERANDS[5] is the alignment safe to use, as a CONST_INT. \n-   OPERNADS[6] is another temporary register.   */\n+   OPERANDS[6] is another temporary register.   */\n \n char *\n output_block_move (operands, size_is_constant)\n@@ -4324,7 +4324,7 @@ hppa_builtin_saveregs (arglist)\n      individually as scalar stores.\n \n      However, other insns may later load from the same addresses for\n-     a struture load (passing a struct to a varargs routine).\n+     a structure load (passing a struct to a varargs routine).\n \n      The alias code assumes that such aliasing can never happen, so we\n      have to keep memory referencing insns from moving up beyond the\n@@ -4335,7 +4335,8 @@ hppa_builtin_saveregs (arglist)\n     emit_library_call (chkr_set_right_libfunc, 1, VOIDmode, 3,\n \t\t       dest, ptr_mode,\n \t\t       GEN_INT (4 * UNITS_PER_WORD), TYPE_MODE (sizetype),\n-\t\t       GEN_INT (MEMORY_USE_RW), QImode);\n+\t\t       GEN_INT (MEMORY_USE_RW),\n+\t\t       TYPE_MODE (integer_type_node));\n \n   return copy_to_reg (expand_binop (Pmode, add_optab,\n \t\t\t\t    current_function_internal_arg_pointer,\n@@ -6041,7 +6042,7 @@ pa_reorg (insns)\n \t    continue;\n \n \t  /* Now generate markers for the beginning and end of the\n-\t     branc table.  */\n+\t     branch table.  */\n \t  emit_insn_before (gen_begin_brtab (), insn);\n \t  emit_insn_after (gen_end_brtab (), insn);\n \t}\n@@ -6098,7 +6099,7 @@ pa_combine_instructions (insns)\n \n   /* This can get expensive since the basic algorithm is on the\n      order of O(n^2) (or worse).  Only do it for -O2 or higher\n-     levels of optimizaton.  */\n+     levels of optimization.  */\n   if (optimize < 2)\n     return;\n "}, {"sha": "c286fb9fa047245be110e74ec9603552237deac1", "filename": "gcc/config/pa/pa.h", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/956d69504d77d301015532d2f0564213f0efc706/gcc%2Fconfig%2Fpa%2Fpa.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/956d69504d77d301015532d2f0564213f0efc706/gcc%2Fconfig%2Fpa%2Fpa.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fpa%2Fpa.h?ref=956d69504d77d301015532d2f0564213f0efc706", "patch": "@@ -77,7 +77,7 @@ extern int target_flags;\n    this option will fail miserably if the executable is dynamically linked\n    or uses nested functions!\n \n-   This is also used to trigger agressive unscaled index addressing.  */\n+   This is also used to trigger aggressive unscaled index addressing.  */\n #define TARGET_NO_SPACE_REGS (target_flags & 4)\n \n /* Allow unconditional jumps in the delay slots of call instructions.  */\n@@ -118,7 +118,7 @@ extern int target_flags;\n #define TARGET_FAST_INDIRECT_CALLS (target_flags & 1024)\n \n /* Generate code with big switch statements to avoid out of range branches\n-   occuring within the switch table.  */\n+   occurring within the switch table.  */\n #define TARGET_BIG_SWITCH (target_flags & 2048)\n \n /* Macro to define tables used to set the flags.\n@@ -281,7 +281,7 @@ extern int target_flags;\n    or \"static    /usr/lib/X11R5/libX11.sl\". \n \n    HPUX 10.20 also has lines like \"static branch prediction ...\"\n-   so we filter that out explcitly.\n+   so we filter that out explicitly.\n \n    We also try to bound our search for libraries with marker\n    lines.  What a pain.  */"}, {"sha": "0ed6cbd2d0e00bf2fc3ae50920977c084902bf0c", "filename": "gcc/config/pa/pa.md", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/956d69504d77d301015532d2f0564213f0efc706/gcc%2Fconfig%2Fpa%2Fpa.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/956d69504d77d301015532d2f0564213f0efc706/gcc%2Fconfig%2Fpa%2Fpa.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fpa%2Fpa.md?ref=956d69504d77d301015532d2f0564213f0efc706", "patch": "@@ -5082,7 +5082,7 @@\n   /* Must import the magic millicode routine.  */\n   output_asm_insn (\\\".IMPORT $$sh_func_adrs,MILLICODE\\\", NULL);\n \n-  /* This is absolutely fucking amazing.\n+  /* This is absolutely amazing.\n \n      First, copy our input parameter into %r29 just in case we don't\n      need to call $$sh_func_adrs.  */\n@@ -5138,7 +5138,7 @@\n                      (const_int 0)))\n             (const_int 32)\n \n-;; PORTABLE_RUTNIME\n+;; PORTABLE_RUNTIME\n \t    (ne (symbol_ref \"TARGET_PORTABLE_RUNTIME\")\n \t\t(const_int 0))\n \t    (const_int 40)]"}, {"sha": "10474e4d5cf65cdd113fc3180ffc4173c270e609", "filename": "gcc/config/rs6000/linux.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/956d69504d77d301015532d2f0564213f0efc706/gcc%2Fconfig%2Frs6000%2Flinux.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/956d69504d77d301015532d2f0564213f0efc706/gcc%2Fconfig%2Frs6000%2Flinux.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Flinux.h?ref=956d69504d77d301015532d2f0564213f0efc706", "patch": "@@ -49,7 +49,7 @@ the Free Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA.  */\n #define LINK_OS_DEFAULT_SPEC \"%(link_os_linux)\"\n \n #undef TARGET_VERSION\n-#define TARGET_VERSION fprintf (stderr, \" (PowerPC Linux)\");\n+#define TARGET_VERSION fprintf (stderr, \" (PowerPC GNU/Linux)\");\n \n /* Define this macro as a C expression for the initializer of an\n    array of string to tell the driver program which options are"}, {"sha": "2dbdb923538942b1717b9f3294a6cf43d11caf39", "filename": "gcc/config/rs6000/rs6000.c", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/956d69504d77d301015532d2f0564213f0efc706/gcc%2Fconfig%2Frs6000%2Frs6000.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/956d69504d77d301015532d2f0564213f0efc706/gcc%2Fconfig%2Frs6000%2Frs6000.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.c?ref=956d69504d77d301015532d2f0564213f0efc706", "patch": "@@ -19,9 +19,9 @@ along with GNU CC; see the file COPYING.  If not, write to\n the Free Software Foundation, 59 Temple Place - Suite 330,\n Boston, MA 02111-1307, USA.  */\n \n-#include \"config.h\"\n #include <stdio.h>\n #include <ctype.h>\n+#include \"config.h\"\n #include \"rtl.h\"\n #include \"regs.h\"\n #include \"hard-reg-set.h\"\n@@ -2140,7 +2140,7 @@ rs6000_got_register (value)\n }\n \n \f\n-/* Replace all occurances of register FROM with an new pseduo register in an insn X.\n+/* Replace all occurrences of register FROM with an new pseudo register in an insn X.\n    Store the pseudo register used in REG.\n    This is only safe during FINALIZE_PIC, since the registers haven't been setup\n    yet.  */\n@@ -2215,7 +2215,7 @@ void\n rs6000_finalize_pic ()\n {\n   /* Loop through all of the insns, replacing the special GOT_TOC_REGNUM\n-     with an appropriate pseduo register.  If we find we need GOT/TOC,\n+     with an appropriate pseudo register.  If we find we need GOT/TOC,\n      add the appropriate init code.  */\n   if (flag_pic && (DEFAULT_ABI == ABI_V4 || DEFAULT_ABI == ABI_SOLARIS))\n     {\n@@ -2257,7 +2257,7 @@ rs6000_finalize_pic ()\n }\n \n \f\n-/* Search for any occurrance of the GOT_TOC register marker that should\n+/* Search for any occurrence of the GOT_TOC register marker that should\n    have been eliminated, but may have crept back in.  */\n \n void"}, {"sha": "d30af75f155e4c4ac91fd570e571a79181e66db6", "filename": "gcc/config/rs6000/rs6000.h", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/956d69504d77d301015532d2f0564213f0efc706/gcc%2Fconfig%2Frs6000%2Frs6000.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/956d69504d77d301015532d2f0564213f0efc706/gcc%2Fconfig%2Frs6000%2Frs6000.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.h?ref=956d69504d77d301015532d2f0564213f0efc706", "patch": "@@ -52,7 +52,7 @@ Boston, MA 02111-1307, USA.  */\n \n #define CPP_SPEC \"%{posix: -D_POSIX_SOURCE} %(cpp_cpu)\"\n \n-/* Common CPP definitions used by CPP_SPEC amonst the various targets\n+/* Common CPP definitions used by CPP_SPEC among the various targets\n    for handling -mcpu=xxx switches.  */\n #define CPP_CPU_SPEC \\\n \"%{!mcpu*: \\\n@@ -101,7 +101,7 @@ Boston, MA 02111-1307, USA.  */\n #define CPP_SYSV_DEFAULT_SPEC \"\"\n #endif\n \n-/* Common ASM definitions used by ASM_SPEC amonst the various targets\n+/* Common ASM definitions used by ASM_SPEC among the various targets\n    for handling -mcpu=xxx switches.  */\n #define ASM_CPU_SPEC \\\n \"%{!mcpu*: \\\n@@ -242,7 +242,7 @@ extern int target_flags;\n    if there are more than 16K unique variables/constant in a single module.\n \n    This is at the cost of having 2 extra loads and one extra store per\n-   function, and one less allocatable register.  */\n+   function, and one less allocable register.  */\n #define MASK_MINIMAL_TOC\t0x00000200\n \n /* Nonzero for the 64bit model: ints, longs, and pointers are 64 bits.  */\n@@ -424,7 +424,7 @@ extern enum processor_type rs6000_cpu;\n \textern char *m88k_short_data;\n \t#define TARGET_OPTIONS { { \"short-data-\", &m88k_short_data } }  */\n \n-/* This is meant to be overriden in target specific files.  */\n+/* This is meant to be overridden in target specific files.  */\n #ifndef SUBTARGET_OPTIONS\n #define\tSUBTARGET_OPTIONS\n #endif\n@@ -909,7 +909,7 @@ extern int rs6000_debug_arg;\t\t/* debug argument handling */\n    Also, cr0 is the only condition code register that can be used in\n    arithmetic insns, so make a separate class for it.\n \n-   There is a special 'registrer' (76), which is not a register, but a\n+   There is a special 'register' (76), which is not a register, but a\n    placeholder for memory allocated to convert between floating point and\n    integral types.  This works around a problem where if we allocate memory\n    with allocate_stack_{local,temp} and the function is an inline function, the"}, {"sha": "8f71378244ac6806d968f832cd9567e33b6a93ff", "filename": "gcc/config/rs6000/rs6000.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/956d69504d77d301015532d2f0564213f0efc706/gcc%2Fconfig%2Frs6000%2Frs6000.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/956d69504d77d301015532d2f0564213f0efc706/gcc%2Fconfig%2Frs6000%2Frs6000.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.md?ref=956d69504d77d301015532d2f0564213f0efc706", "patch": "@@ -7241,7 +7241,7 @@\n   DONE;\n }\")\n \n-;; If we have -mmiminal-toc, we need to reload r30 after a nonlocal goto.\n+;; If we have -mminimal-toc, we need to reload r30 after a nonlocal goto.\n \n (define_insn \"nonlocal_goto_receiver\"\n   [(unspec_volatile [(const_int 0)] 1)]"}, {"sha": "c00c5ad7704c530bb9ccb947d595aae978866f96", "filename": "gcc/config/rs6000/rtems.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/956d69504d77d301015532d2f0564213f0efc706/gcc%2Fconfig%2Frs6000%2Frtems.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/956d69504d77d301015532d2f0564213f0efc706/gcc%2Fconfig%2Frs6000%2Frtems.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frtems.h?ref=956d69504d77d301015532d2f0564213f0efc706", "patch": "@@ -1,4 +1,4 @@\n-/* Definitions for rtems targetting a PowerPC using elf.\n+/* Definitions for rtems targeting a PowerPC using elf.\n    Copyright (C) 1996, 1997 Free Software Foundation, Inc.\n    Contributed by Joel Sherrill (joel@OARcorp.com).\n "}, {"sha": "e9a88a2d15a9d70bb9ef7ea3b4f536ed33d81726", "filename": "gcc/config/rs6000/sysv4.h", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/956d69504d77d301015532d2f0564213f0efc706/gcc%2Fconfig%2Frs6000%2Fsysv4.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/956d69504d77d301015532d2f0564213f0efc706/gcc%2Fconfig%2Frs6000%2Fsysv4.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Fsysv4.h?ref=956d69504d77d301015532d2f0564213f0efc706", "patch": "@@ -1,5 +1,5 @@\n /* Target definitions for GNU compiler for PowerPC running System V.4\n-   Copyright (C) 1995, 1996 Free Software Foundation, Inc.\n+   Copyright (C) 1995, 1996, 1997 Free Software Foundation, Inc.\n    Contributed by Cygnus Support.\n \n This file is part of GNU CC.\n@@ -584,7 +584,7 @@ extern void rs6000_select_rtx_section (), rs6000_select_section ();\n    we can't check that since not every file that uses\n    GO_IF_LEGITIMATE_ADDRESS_P includes real.h.\n \n-   Unlike AIX, we don't key off of -mmininal-toc, but instead do not\n+   Unlike AIX, we don't key off of -mminimal-toc, but instead do not\n    allow floating point constants in the TOC if -mrelocatable.  */\n \n #undef\tASM_OUTPUT_SPECIAL_POOL_ENTRY_P\n@@ -713,7 +713,7 @@ do {\t\t\t\t\t\t\t\t\t\\\n     }\t\t\t\t\t\t\t\t\t\\\n } while (0)\n \n-/* Describe how to emit unitialized external linkage items  */\n+/* Describe how to emit uninitialized external linkage items  */\n #define ASM_OUTPUT_ALIGNED_BSS(FILE, DECL, NAME, SIZE, ALIGN)\t\t\\\n do {\t\t\t\t\t\t\t\t\t\\\n   ASM_GLOBALIZE_LABEL (FILE, NAME);\t\t\t\t\t\\\n@@ -1030,7 +1030,7 @@ do {\t\t\t\t\t\t\t\t\t\\\n \n #undef  LINK_SHLIB_SPEC\n #ifndef NO_SHARED_LIB_SUPPORT\n-/* Shared libaries are default.  */\n+/* Shared libraries are default.  */\n #define LINK_SHLIB_SPEC \"\\\n %{!static: %(link_path) %{!R*:%{L*:-R %*}}} \\\n %{mshlib: } \\\n@@ -1269,7 +1269,7 @@ do {\t\t\t\t\t\t\t\t\t\\\n #define CPP_OS_SIM_SPEC \"\"\n #endif\n \n-/* Linux support.  */\n+/* GNU/Linux support.  */\n #ifndef\tLIB_LINUX_SPEC\n #define LIB_LINUX_SPEC \"%{mnewlib: --start-group -llinux -lc --end-group } %{!mnewlib: -lc }\"\n #endif"}, {"sha": "677254b371ce825bf9c954676c59b335492eaf2e", "filename": "gcc/config/rs6000/xm-cygwin32.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/956d69504d77d301015532d2f0564213f0efc706/gcc%2Fconfig%2Frs6000%2Fxm-cygwin32.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/956d69504d77d301015532d2f0564213f0efc706/gcc%2Fconfig%2Frs6000%2Fxm-cygwin32.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Fxm-cygwin32.h?ref=956d69504d77d301015532d2f0564213f0efc706", "patch": "@@ -1,6 +1,6 @@\n /* Configuration for GNU C-compiler for hosting on Windows NT.\n    using a unix style C library.\n-   Copyright (C) 1995 Free Software Foundation, Inc.\n+   Copyright (C) 1995, 1997 Free Software Foundation, Inc.\n \n This file is part of GNU CC.\n "}, {"sha": "2e864ad5c292b07118b2c3c84e5b2a781979a9dd", "filename": "gcc/config/sh/rtems.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/956d69504d77d301015532d2f0564213f0efc706/gcc%2Fconfig%2Fsh%2Frtems.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/956d69504d77d301015532d2f0564213f0efc706/gcc%2Fconfig%2Fsh%2Frtems.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsh%2Frtems.h?ref=956d69504d77d301015532d2f0564213f0efc706", "patch": "@@ -1,4 +1,4 @@\n-/* Definitions for rtems targetting a SH using elf.\n+/* Definitions for rtems targeting a SH using elf.\n    Copyright (C) 1997 Free Software Foundation, Inc.\n    Contributed by Joel Sherrill (joel@OARcorp.com).\n "}, {"sha": "7f12528a877e7849980b05d3cf15b92776894a21", "filename": "gcc/config/sh/sh.c", "status": "modified", "additions": 13, "deletions": 13, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/956d69504d77d301015532d2f0564213f0efc706/gcc%2Fconfig%2Fsh%2Fsh.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/956d69504d77d301015532d2f0564213f0efc706/gcc%2Fconfig%2Fsh%2Fsh.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsh%2Fsh.c?ref=956d69504d77d301015532d2f0564213f0efc706", "patch": "@@ -1,5 +1,5 @@\n /* Output routines for GCC for Hitachi Super-H.\n-   Copyright (C) 1993, 1994, 1995, 1996 Free Software Foundation, Inc.\n+   Copyright (C) 1993, 1994, 1995, 1996, 1997 Free Software Foundation, Inc.\n \n This file is part of GNU CC.\n \n@@ -1919,7 +1919,7 @@ find_barrier (num_mova, mova, from)\n      delay slot.  This gives 1018.  */\n \n   /* The branch will always be shortened now that the reference address for\n-     forward branches is the sucessor address, thus we need no longer make\n+     forward branches is the successor address, thus we need no longer make\n      adjustments to the [sh]i_limit for -O0.  */\n \n   si_limit = 1018;\n@@ -1937,7 +1937,7 @@ find_barrier (num_mova, mova, from)\n       if (GET_CODE (from) == BARRIER)\n \t{\n \t  found_barrier = from;\n-\t  /* If we are at the end of the function, or in front of an alignemnt\n+\t  /* If we are at the end of the function, or in front of an alignment\n \t     instruction, we need not insert an extra alignment.  We prefer\n \t     this kind of barrier.  */\n \t\n@@ -2004,7 +2004,7 @@ find_barrier (num_mova, mova, from)\n \t      /* We have just passed the barrier in front front of the\n \t\t ADDR_DIFF_VEC.  Since the ADDR_DIFF_VEC is accessed\n \t\t as data, just like our pool constants, this is a good\n-\t\t opportunity to accomodate what we have gathered so far.\n+\t\t opportunity to accommodate what we have gathered so far.\n \t\t If we waited any longer, we could end up at a barrier in\n \t\t front of code, which gives worse cache usage for separated\n \t\t instruction / data caches.  */\n@@ -2286,7 +2286,7 @@ regs_used (x, is_dest)\n }\n \n /* Create an instruction that prevents redirection of a conditional branch\n-   to the desitination of the JUMP with address ADDR.\n+   to the destination of the JUMP with address ADDR.\n    If the branch needs to be implemented as an indirect jump, try to find\n    a scratch register for it.\n    If NEED_BLOCK is 0, don't do anything unless we need a scratch register.\n@@ -2327,7 +2327,7 @@ gen_block_redirect (jump, addr, need_block)\n     {\n       rtx scan;\n       /* Don't look for the stack pointer as a scratch register,\n-\t it would cause trouble if an interrupt occured.  */\n+\t it would cause trouble if an interrupt occurred.  */\n       unsigned try = 0x7fff, used;\n       int jump_left = flag_expensive_optimizations + 1;\n     \n@@ -2385,7 +2385,7 @@ gen_block_redirect (jump, addr, need_block)\n   /* If the immediate destination is still in range, check for possible\n      threading with a jump beyond the delay slot insn.\n      Don't check if we are called recursively; the jump has been or will be\n-     checked in a different invokation then.  */\n+     checked in a different invocation then.  */\n \t\n   else if (optimize && need_block >= 0)\n     {\n@@ -2406,7 +2406,7 @@ gen_block_redirect (jump, addr, need_block)\n       rtx reg = gen_rtx (REG, SImode, exact_log2 (dead & -dead));\n \n       /* It would be nice if we could convert the jump into an indirect\n-\t jump / far branch right now, and thus exposing all consitituent\n+\t jump / far branch right now, and thus exposing all constituent\n \t instructions to further optimization.  However, reorg uses\n \t simplejump_p to determine if there is an unconditional jump where\n \t it should try to schedule instructions from the target of the\n@@ -2936,7 +2936,7 @@ machine_dependent_reorg (first)\n     }\n \n   /* The following processing passes need length information.\n-     addr_diff_vec_adjust needs to know if insn_addreses is valid.  */\n+     addr_diff_vec_adjust needs to know if insn_addresses is valid.  */\n   insn_addresses = 0;\n \n   /* If not optimizing for space, we want extra alignment for code after\n@@ -3076,7 +3076,7 @@ machine_dependent_reorg (first)\n \t  /* range of mova is 1020, add 4 because pc counts from address of\n \t     second instruction after this one, subtract 2 in case pc is 2\n \t     byte aligned.  Possible alignment needed for the ADDR_DIFF_VEC\n-\t     chancles out with alignment effects of the mova itself.  */\n+\t     cancels out with alignment effects of the mova itself.  */\n \t  if (total > 1022)\n \t    {\n \t      /* Change the mova into a load, and restart scanning\n@@ -3278,7 +3278,7 @@ split_branches (first)\n \t\t   the label if th lABEL_BUSES count drops to zero.  There is\n \t\t   always a jump_optimize pass that sets these values, but it\n \t\t   proceeds to delete unreferenced code, and then if not\n-\t\t   optimizeing, to un-delete the deleted instructions, thus\n+\t\t   optimizing, to un-delete the deleted instructions, thus\n \t\t   leaving labels with too low uses counts.  */\n \t\tif (! optimize)\n \t\t  {\n@@ -3936,7 +3936,7 @@ handle_pragma (file, t)\n    sp_switch -- specifies an alternate stack for an interrupt handler\n    to run on.\n \n-   trap_exit -- use a trapa to exit an interrupt function intead of\n+   trap_exit -- use a trapa to exit an interrupt function instead of\n    an rte instruction.  */\n \n int\n@@ -4263,7 +4263,7 @@ branch_offset (branch)\n       while (dest_uid >= uid_align_max || ! uid_align[dest_uid])\n \t{\n \t  /* Label might be outside the insn stream, or even in a separate\n-\t     insn stream, after a syntax errror.  */\n+\t     insn stream, after a syntax error.  */\n \t  if (! NEXT_INSN (dest))\n \t    return 0;\n \t  dest = NEXT_INSN (dest), dest_uid = INSN_UID (dest);"}, {"sha": "a3aa90253e643fe19891152cbbac6b8657ac13c9", "filename": "gcc/config/sh/sh.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/956d69504d77d301015532d2f0564213f0efc706/gcc%2Fconfig%2Fsh%2Fsh.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/956d69504d77d301015532d2f0564213f0efc706/gcc%2Fconfig%2Fsh%2Fsh.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsh%2Fsh.h?ref=956d69504d77d301015532d2f0564213f0efc706", "patch": "@@ -404,7 +404,7 @@ do {\t\t\t\t\t\t\t\t\\\n    frame pointer register can often be eliminated in favor of the stack\n    pointer register.  Secondly, the argument pointer register can always be\n    eliminated; it is replaced with either the stack or frame pointer.\n-   Third, there is the retuen address pointer, which can also be replaced\n+   Third, there is the return address pointer, which can also be replaced\n    with either the stack or the frame pointer.  */\n \n /* This is an array of structures.  Each structure initializes one pair"}, {"sha": "ae49456a966d767aa7a88b8512a4344c1c60af7f", "filename": "gcc/config/sh/sh.md", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/956d69504d77d301015532d2f0564213f0efc706/gcc%2Fconfig%2Fsh%2Fsh.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/956d69504d77d301015532d2f0564213f0efc706/gcc%2Fconfig%2Fsh%2Fsh.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsh%2Fsh.md?ref=956d69504d77d301015532d2f0564213f0efc706", "patch": "@@ -1,5 +1,5 @@\n ;;- Machine description for the Hitachi SH.\n-;;  Copyright (C) 1993, 1994, 1995 Free Software Foundation, Inc.\n+;;  Copyright (C) 1993, 1994, 1995, 1997Free Software Foundation, Inc.\n ;;  Contributed by Steve Chamberlain (sac@cygnus.com).\n ;;  Improved by Jim Wilson (wilson@cygnus.com).\n \n@@ -80,7 +80,7 @@\n ;; cbranch\tconditional branch instructions\n ;; jump\t\tunconditional jumps\n ;; arith\tordinary arithmetic\n-;; arith3\ta compound insn that behaves similarily to a sequence of\n+;; arith3\ta compound insn that behaves similarly to a sequence of\n ;;\t\tthree insns of type arith\n ;; arith3b\tlike above, but might end with a redirected branch\n ;; load\t\tfrom memory\n@@ -169,7 +169,7 @@\n ;; between the actual call address and the function arguments.\n ;; ADJUST_COST can only properly handle reductions of the cost, so we\n ;; use a latency of three here.\n-;; We only do this for SImode loads of general regsiters, to make the work\n+;; We only do this for SImode loads of general registers, to make the work\n ;; for ADJUST_COST easier.\n (define_function_unit \"memory\" 1 0\n   (eq_attr \"type\" \"load_si,pcload_si\")\n@@ -563,7 +563,7 @@\n ;; registers as a normal function call would.\n \n ;; The INSN_REFERENCES_ARE_DELAYED in sh.h is problematic because it\n-;; also has an effect on the register that holds the addres of the sfunc.\n+;; also has an effect on the register that holds the address of the sfunc.\n ;; To make this work, we have an extra dummy insns that shows the use\n ;; of this register for reorg.\n \n@@ -2646,7 +2646,7 @@\n   return \\\"\\\";\n }\"\n ;; Need a variable length for this to be processed in each shorten_branch pass.\n-;; The actual work is done in ADJUST_INSN_LENTH, because length attributes\n+;; The actual work is done in ADJUST_INSN_LENGTH, because length attributes\n ;; need to be (a choice of) constants.\n ;; We use the calculated length before ADJUST_INSN_LENGTH to\n ;; determine if the insn_addresses array contents are valid.\n@@ -2807,7 +2807,7 @@\n   \"operands[2] = gen_reg_rtx (SImode);\")\n \n ;; Recognize mov #-1/negc/neg sequence, and change it to movt/add #-1.\n-;; This prevents a regression that occured when we switched from xor to\n+;; This prevents a regression that occurred when we switched from xor to\n ;; mov/neg for sne.\n \n (define_split\n@@ -2923,7 +2923,7 @@\n  \"\"\n  \".align %O0\"\n ;; Need a variable length for this to be processed in each shorten_branch pass.\n-;; The actual work is done in ADJUST_INSN_LENTH, because length attributes\n+;; The actual work is done in ADJUST_INSN_LENGTH, because length attributes\n ;; need to be (a choice of) constants.\n   [(set (attr \"length\")\n \t(if_then_else (ne (pc) (pc)) (const_int 2) (const_int 0)))\n@@ -3322,7 +3322,7 @@\n }\"\n   [(set_attr \"length\" \"10\")])\n \n-;; Switch back to the original stack for interrupt funtions with the\n+;; Switch back to the original stack for interrupt functions with the\n ;; sp_switch attribute.  */\n (define_insn \"sp_switch_2\"\n   [(const_int 2)]"}, {"sha": "7075b5fbe7c1fb76b01a0b641b67bf979d98686d", "filename": "gcc/config/sparc/linux-aout.h", "status": "modified", "additions": 6, "deletions": 7, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/956d69504d77d301015532d2f0564213f0efc706/gcc%2Fconfig%2Fsparc%2Flinux-aout.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/956d69504d77d301015532d2f0564213f0efc706/gcc%2Fconfig%2Fsparc%2Flinux-aout.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsparc%2Flinux-aout.h?ref=956d69504d77d301015532d2f0564213f0efc706", "patch": "@@ -1,4 +1,4 @@\n-/* Definitions for SPARC running Linux with a.out\n+/* Definitions for SPARC running Linux-based GNU systems with a.out.\n    Copyright (C) 1996, 1997 Free Software Foundation, Inc.\n    Contributed by Eddie C. Dost (ecd@skynet.be)\n \n@@ -28,7 +28,7 @@ Boston, MA 02111-1307, USA.  */\n #undef HAVE_ATEXIT\n #define HAVE_ATEXIT\n \n-/* Linux uses ctype from glibc.a. I am not sure how complete it is.\n+/* GNU/Linux uses ctype from glibc.a. I am not sure how complete it is.\n    For now, we play safe. It may change later. */\n \n #if 0\n@@ -55,7 +55,7 @@ Boston, MA 02111-1307, USA.  */\n #define STARTFILE_SPEC  \"%{pg:gcrt0.o%s} %{!pg:%{p:gcrt0.o%s} %{!p:crt0.o%s}} %{static:-static}\"\n \n #undef TARGET_VERSION\n-#define TARGET_VERSION fprintf (stderr, \" (sparc Linux/a.out)\");\n+#define TARGET_VERSION fprintf (stderr, \" (sparc GNU/Linux with a.out)\");\n \n #undef SIZE_TYPE\n #define SIZE_TYPE \"unsigned int\"\n@@ -84,9 +84,8 @@ Boston, MA 02111-1307, USA.  */\n \n #if 1\n /* We no longer link with libc_p.a or libg.a by default. If you\n- * want to profile or debug the Linux C library, please add\n- * -lc_p or -ggdb to LDFLAGS at the link time, respectively.\n- */\n+   want to profile or debug the GNU/Linux C library, please add\n+   -lc_p or -ggdb to LDFLAGS at the link time, respectively.  */\n #define LIB_SPEC \\\n \"%{mieee-fp:-lieee} %{p:-lgmon} %{pg:-lgmon} %{!ggdb:-lc} %{ggdb:-lg}\"\n #else    \n@@ -106,7 +105,7 @@ Boston, MA 02111-1307, USA.  */\n \n #if 0\n /* Define for support of TFmode long double and REAL_ARITHMETIC.\n-   Sparc ABI says that long double is 4 words. Linux does not support\n+   Sparc ABI says that long double is 4 words. GNU/Linux does not support\n    long double yet.  */\n #define LONG_DOUBLE_TYPE_SIZE 128\n #endif"}, {"sha": "a312967ac66fcded46b961e184db168ad338135b", "filename": "gcc/config/sparc/linux.h", "status": "modified", "additions": 12, "deletions": 13, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/956d69504d77d301015532d2f0564213f0efc706/gcc%2Fconfig%2Fsparc%2Flinux.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/956d69504d77d301015532d2f0564213f0efc706/gcc%2Fconfig%2Fsparc%2Flinux.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsparc%2Flinux.h?ref=956d69504d77d301015532d2f0564213f0efc706", "patch": "@@ -1,4 +1,4 @@\n-/* Definitions for SPARC running Linux with ELF\n+/* Definitions for SPARC running Linux-based GNU systems with ELF.\n    Copyright (C) 1996, 1997 Free Software Foundation, Inc.\n    Contributed by Eddie C. Dost (ecd@skynet.be)\n \n@@ -27,7 +27,7 @@ Boston, MA 02111-1307, USA.  */\n #undef HAVE_ATEXIT\n #define HAVE_ATEXIT\n \n-/* Linux uses ctype from glibc.a. I am not sure how complete it is.\n+/* GNU/Linux uses ctype from glibc.a. I am not sure how complete it is.\n    For now, we play safe. It may change later. */\n \n #if 0\n@@ -57,8 +57,8 @@ Boston, MA 02111-1307, USA.  */\n         fprintf (FILE, \"\\t.version\\t\\\"01.01\\\"\\n\");                      \\\n   } while (0)\n \n-/* Provide a STARTFILE_SPEC appropriate for Linux.  Here we add\n-   the Linux magical crtbegin.o file (see crtstuff.c) which\n+/* Provide a STARTFILE_SPEC appropriate for GNU/Linux.  Here we add\n+   the GNU/Linux magical crtbegin.o file (see crtstuff.c) which\n    provides part of the support for getting C++ file-scope static\n    object constructed before entering `main'. */\n    \n@@ -68,11 +68,11 @@ Boston, MA 02111-1307, USA.  */\n      %{pg:gcrt1.o%s} %{!pg:%{p:gcrt1.o%s} %{!p:crt1.o%s}}}\\\n    crti.o%s %{!shared:crtbegin.o%s} %{shared:crtbeginS.o%s}\"\n \n-/* Provide a ENDFILE_SPEC appropriate for Linux.  Here we tack on\n-   the Linux magical crtend.o file (see crtstuff.c) which\n+/* Provide a ENDFILE_SPEC appropriate for GNU/Linux.  Here we tack on\n+   the GNU/Linux magical crtend.o file (see crtstuff.c) which\n    provides part of the support for getting C++ file-scope static\n    object constructed before entering `main', followed by a normal\n-   Linux \"finalizer\" file, `crtn.o'.  */\n+   GNU/Linux \"finalizer\" file, `crtn.o'.  */\n \n #undef  ENDFILE_SPEC\n #define ENDFILE_SPEC \\\n@@ -88,7 +88,7 @@ Boston, MA 02111-1307, USA.  */\n \"\n \n #undef TARGET_VERSION\n-#define TARGET_VERSION fprintf (stderr, \" (sparc Linux/ELF)\");\n+#define TARGET_VERSION fprintf (stderr, \" (sparc GNU/Linux with ELF)\");\n \n #undef SIZE_TYPE\n #define SIZE_TYPE \"unsigned int\"\n@@ -116,9 +116,8 @@ Boston, MA 02111-1307, USA.  */\n \n #undef LIB_SPEC\n /* We no longer link with libc_p.a or libg.a by default. If you\n- * want to profile or debug the Linux C library, please add\n- * -lc_p or -ggdb to LDFLAGS at the link time, respectively.\n- */\n+   want to profile or debug the GNU/Linux C library, please add\n+   -lc_p or -ggdb to LDFLAGS at the link time, respectively.  */\n #if 1\n #ifdef USE_GNULIBC_1\n #define LIB_SPEC \\\n@@ -136,7 +135,7 @@ Boston, MA 02111-1307, USA.  */\n        %{!p:%{!pg:%{!g*:-lc} %{g*:-lg}}}}\"\n #endif\n \n-/* Provide a LINK_SPEC appropriate for Linux.  Here we provide support\n+/* Provide a LINK_SPEC appropriate for GNU/Linux.  Here we provide support\n    for the special GCC options -static and -shared, which allow us to\n    link things in one of these three modes by applying the appropriate\n    combinations of options at link-time. We like to support here for\n@@ -234,7 +233,7 @@ do {\t\t\t\t\t\t\t\t\t\\\n \f\n #if 0\n /* Define for support of TFmode long double and REAL_ARITHMETIC.\n-   Sparc ABI says that long double is 4 words. Linux does not support\n+   Sparc ABI says that long double is 4 words. GNU/Linux does not support\n    long double yet.  */\n #define LONG_DOUBLE_TYPE_SIZE 128\n #endif"}, {"sha": "74f632bb48c4368553df93bf3de883cae386db16", "filename": "gcc/config/sparc/linux64.h", "status": "modified", "additions": 10, "deletions": 11, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/956d69504d77d301015532d2f0564213f0efc706/gcc%2Fconfig%2Fsparc%2Flinux64.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/956d69504d77d301015532d2f0564213f0efc706/gcc%2Fconfig%2Fsparc%2Flinux64.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsparc%2Flinux64.h?ref=956d69504d77d301015532d2f0564213f0efc706", "patch": "@@ -1,4 +1,4 @@\n-/* Definitions for 64-bit SPARC running Linux with ELF\n+/* Definitions for 64-bit SPARC running Linux-based GNU systems with ELF.\n    Copyright 1996, 1997 Free Software Foundation, Inc.\n    Contributed by David S. Miller (davem@caip.rutgers.edu)\n \n@@ -52,8 +52,8 @@ Boston, MA 02111-1307, USA.  */\n #define LIBGCC_SPEC \\\n   \"%{!shared:-lgcc}\"\n \n-/* Provide a STARTFILE_SPEC appropriate for Linux.  Here we add\n-   the Linux magical crtbegin.o file (see crtstuff.c) which\n+/* Provide a STARTFILE_SPEC appropriate for GNU/Linux.  Here we add\n+   the GNU/Linux magical crtbegin.o file (see crtstuff.c) which\n    provides part of the support for getting C++ file-scope static\n    object constructed before entering `main'. */\n    \n@@ -63,18 +63,18 @@ Boston, MA 02111-1307, USA.  */\n      %{pg:gcrt1.o%s} %{!pg:%{p:gcrt1.o%s} %{!p:crt1.o%s}}}\\\n    crti.o%s %{!shared:crtbegin.o%s} %{shared:crtbeginS.o%s}\"\n \n-/* Provide a ENDFILE_SPEC appropriate for Linux.  Here we tack on\n-   the Linux magical crtend.o file (see crtstuff.c) which\n+/* Provide a ENDFILE_SPEC appropriate for GNU/Linux.  Here we tack on\n+   the GNU/Linux magical crtend.o file (see crtstuff.c) which\n    provides part of the support for getting C++ file-scope static\n    object constructed before entering `main', followed by a normal\n-   Linux \"finalizer\" file, `crtn.o'.  */\n+   GNU/Linux \"finalizer\" file, `crtn.o'.  */\n \n #undef  ENDFILE_SPEC\n #define ENDFILE_SPEC \\\n   \"%{!shared:crtend.o%s} %{shared:crtendS.o%s} crtn.o%s\"\n \n #undef TARGET_VERSION\n-#define TARGET_VERSION fprintf (stderr, \" (sparc64 Linux/ELF)\");\n+#define TARGET_VERSION fprintf (stderr, \" (sparc64 GNU/Linux with ELF)\");\n \n /* A 64 bit v9 compiler with stack-bias,\n    in a Medium/Anywhere code model environment.  */\n@@ -113,15 +113,14 @@ Boston, MA 02111-1307, USA.  */\n %{posix:-D_POSIX_SOURCE} \\\n \"\n /* We no longer link with libc_p.a or libg.a by default. If you\n- * want to profile or debug the Linux C library, please add\n- * -lc_p or -ggdb to LDFLAGS at the link time, respectively.\n- */\n+   want to profile or debug the GNU/Linux C library, please add\n+   -lc_p or -ggdb to LDFLAGS at the link time, respectively.  */\n #undef LIB_SPEC\n #define LIB_SPEC \\\n   \"%{!shared: %{mieee-fp:-lieee} %{p:-lgmon} %{pg:-lgmon} \\\n      %{!ggdb:-lc} %{ggdb:-lg}}\"\n \n-/* Provide a LINK_SPEC appropriate for Linux.  Here we provide support\n+/* Provide a LINK_SPEC appropriate for GNU/Linux.  Here we provide support\n    for the special GCC options -static and -shared, which allow us to\n    link things in one of these three modes by applying the appropriate\n    combinations of options at link-time. We like to support here for"}, {"sha": "55b7779818a3e2bee18927ef4d2bcbf1d1db3ec7", "filename": "gcc/config/sparc/rtems.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/956d69504d77d301015532d2f0564213f0efc706/gcc%2Fconfig%2Fsparc%2Frtems.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/956d69504d77d301015532d2f0564213f0efc706/gcc%2Fconfig%2Fsparc%2Frtems.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsparc%2Frtems.h?ref=956d69504d77d301015532d2f0564213f0efc706", "patch": "@@ -1,4 +1,4 @@\n-/* Definitions for rtems targetting a SPARC using a.out.\n+/* Definitions for rtems targeting a SPARC using a.out.\n    Copyright (C) 1996, 1997 Free Software Foundation, Inc.\n    Contributed by Joel Sherrill (joel@OARcorp.com).\n "}, {"sha": "692ba41f7904ef86b7726707a4da8c5746faa201", "filename": "gcc/config/sparc/sparc.c", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/956d69504d77d301015532d2f0564213f0efc706/gcc%2Fconfig%2Fsparc%2Fsparc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/956d69504d77d301015532d2f0564213f0efc706/gcc%2Fconfig%2Fsparc%2Fsparc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsparc%2Fsparc.c?ref=956d69504d77d301015532d2f0564213f0efc706", "patch": "@@ -3334,8 +3334,8 @@ output_function_prologue (file, size, leaf_function)\n   else if (! leaf_function && TARGET_BROKEN_SAVERESTORE)\n     {\n       /* We assume the environment will properly handle or otherwise avoid\n-\t trouble associated with an interrupt occuring after the `save' or\n-\t trap occuring during it.  */\n+\t trouble associated with an interrupt occurring after the `save' or\n+\t trap occurring during it.  */\n       fprintf (file, \"\\tsave\\n\");\n \n       if (actual_fsize <= 4096)\n@@ -3830,7 +3830,7 @@ function_arg (cum, mode, type, named, incoming_p)\n \t  /* ??? This will cause the value to be passed in the fp reg and\n \t     in the stack.  When a prototype exists we want to pass the\n \t     value in the reg but reserve space on the stack.  That's an\n-\t     optimization, and is defered [for a bit].  */\n+\t     optimization, and is deferred [for a bit].  */\n \t  if ((regno - SPARC_FP_ARG_FIRST) >= SPARC_INT_ARG_MAX * 2)\n \t    return gen_rtx (PARALLEL, mode,\n \t\t\t    gen_rtvec (2,\n@@ -4246,7 +4246,8 @@ sparc_builtin_saveregs (arglist)\n \t\t       address, ptr_mode,\n \t\t       GEN_INT (UNITS_PER_WORD \n \t\t\t \t* (NPARM_REGS (word_mode) - first_reg)),\n-\t\t       TYPE_MODE (sizetype), GEN_INT (MEMORY_USE_RW), QImode);\n+\t\t       TYPE_MODE (sizetype), GEN_INT (MEMORY_USE_RW),\n+\t\t       TYPE_MODE (integer_type_node));\n \n   return address;\n }"}, {"sha": "d839432e7665396e59d1c5bf771d244cf0bb672d", "filename": "gcc/config/sparc/sparc.h", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/956d69504d77d301015532d2f0564213f0efc706/gcc%2Fconfig%2Fsparc%2Fsparc.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/956d69504d77d301015532d2f0564213f0efc706/gcc%2Fconfig%2Fsparc%2Fsparc.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsparc%2Fsparc.h?ref=956d69504d77d301015532d2f0564213f0efc706", "patch": "@@ -440,8 +440,8 @@ extern int target_flags;\n /* Non-zero means the cpu has broken `save' and `restore' insns, only\n    the trivial versions work (save %g0,%g0,%g0; restore %g0,%g0,%g0).\n    We assume the environment will properly handle or otherwise avoid\n-   trouble associated with an interrupt occuring after the `save' or trap\n-   occuring during it.  */\n+   trouble associated with an interrupt occurring after the `save' or trap\n+   occurring during it.  */\n #define MASK_BROKEN_SAVERESTORE 0x200000\n #define TARGET_BROKEN_SAVERESTORE (target_flags & MASK_BROKEN_SAVERESTORE)\n \n@@ -1131,7 +1131,7 @@ extern int sparc_mode_class[];\n \n    It is important that SPARC_ICC_REG have class NO_REGS.  Otherwise combine\n    may try to use it to hold an SImode value.  See register_operand.\n-   ??? Should %fcc[0123] be handled similarily?\n+   ??? Should %fcc[0123] be handled similarly?\n */\n \n enum reg_class { NO_REGS, FPCC_REGS, GENERAL_REGS, FP_REGS, EXTRA_FP_REGS,"}, {"sha": "f68f57156628664d7d737bd1a815054ba7bc25e2", "filename": "gcc/config/sparc/xm-linux.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/956d69504d77d301015532d2f0564213f0efc706/gcc%2Fconfig%2Fsparc%2Fxm-linux.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/956d69504d77d301015532d2f0564213f0efc706/gcc%2Fconfig%2Fsparc%2Fxm-linux.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsparc%2Fxm-linux.h?ref=956d69504d77d301015532d2f0564213f0efc706", "patch": "@@ -1,4 +1,4 @@\n-/* Configuration for GCC for SPARC running Linux.\n+/* Configuration for GCC for SPARC running Linux-based GNU systems.\n    Copyright (C) 1996, 1997 Free Software Foundation, Inc.\n    Contributed by Eddie C. Dost (ecd@skynet.be)\n "}, {"sha": "100d901d136393909aa888eb6e8e0522f7b2ade5", "filename": "gcc/config/v850/lib1funcs.asm", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/956d69504d77d301015532d2f0564213f0efc706/gcc%2Fconfig%2Fv850%2Flib1funcs.asm", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/956d69504d77d301015532d2f0564213f0efc706/gcc%2Fconfig%2Fv850%2Flib1funcs.asm", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fv850%2Flib1funcs.asm?ref=956d69504d77d301015532d2f0564213f0efc706", "patch": "@@ -1172,7 +1172,7 @@ __save_interrupt:\n \t.size\t__save_interrupt,.-__save_interrupt\n \n \t/* Restore saved registers, deallocate stack and return from the interrupt */\n-\t/* Called via:\tjr __return_interupt */\n+\t/* Called via:\tjr __return_interrupt */\n \t.align\t2\n \t.globl\t__return_interrupt\n \t.type\t__return_interrupt,@function"}, {"sha": "0962c779145a64c709e19b9e9ef698a8caff91d6", "filename": "gcc/config/v850/v850.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/956d69504d77d301015532d2f0564213f0efc706/gcc%2Fconfig%2Fv850%2Fv850.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/956d69504d77d301015532d2f0564213f0efc706/gcc%2Fconfig%2Fv850%2Fv850.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fv850%2Fv850.c?ref=956d69504d77d301015532d2f0564213f0efc706", "patch": "@@ -448,7 +448,7 @@ print_operand (file, x, code)\n       break;\n     case 'S':\n       {\n-        /* if it's a referance to a TDA variable, use sst/sld vs. st/ld */\n+        /* if it's a reference to a TDA variable, use sst/sld vs. st/ld */\n         if (GET_CODE (x) == MEM && ep_memory_operand (x, GET_MODE (x), FALSE))\n           fputs (\"s\", file);\n \n@@ -2157,8 +2157,8 @@ pattern_is_ok_for_prologue (op, mode)\n \treturn 0;\n \n       /* If the register is being pushed somewhere other than the stack\n-\t space just aquired by the first operand then abandon this quest.\n-\t Note: the test is <= becuase both values are negative.\t */\n+\t space just acquired by the first operand then abandon this quest.\n+\t Note: the test is <= because both values are negative.\t */\n       if (INTVAL (XEXP (plus, 1))\n \t  <= INTVAL (XEXP (SET_SRC (XVECEXP (op, 0, 0)), 1)))\n \t{"}, {"sha": "9044f44a6d9e710f47586ac0cec1c198ed94a325", "filename": "gcc/config/v850/v850.h", "status": "modified", "additions": 5, "deletions": 6, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/956d69504d77d301015532d2f0564213f0efc706/gcc%2Fconfig%2Fv850%2Fv850.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/956d69504d77d301015532d2f0564213f0efc706/gcc%2Fconfig%2Fv850%2Fv850.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fv850%2Fv850.h?ref=956d69504d77d301015532d2f0564213f0efc706", "patch": "@@ -1,5 +1,4 @@\n-/* Definitions of target machine for GNU compiler. \n-   NEC V850 series\n+/* Definitions of target machine for GNU compiler. NEC V850 series\n    Copyright (C) 1996, 1997 Free Software Foundation, Inc.\n    Contributed by Jeff Law (law@cygnus.com).\n \n@@ -83,7 +82,7 @@ extern int target_flags;\n \n      * Passing/returning of large structures probably isn't the same\n      as GHS.  We don't have enough documentation on their conventions\n-     to be compatable.\n+     to be compatible.\n \n      * Tests of SETUP_INCOMING_VARARGS need to be made runtime checks\n      since it depends on TARGET_GHS.  */\n@@ -348,7 +347,7 @@ extern struct small_memory_info small_memory[(int)SMALL_MEMORY_max];\n \n    On the 850, we make the return registers first, then all of the volatile\n    registers, then the saved registers in reverse order to better save the\n-   registers with an out of line function , and finnally the fixed\n+   registers with an out of line function, and finally the fixed\n    registers.  */\n \n #define REG_ALLOC_ORDER\t\t\t\t\t\t\t\\\n@@ -1007,7 +1006,7 @@ do {\t\t\t\t\t\t\t\t\t\\\n    switch on CODE. \n \n    There aren't DImode MOD, DIV or MULT operations, so call them\n-   very expensive.  Everything else is pretty much a costant cost.  */\n+   very expensive.  Everything else is pretty much a constant cost.  */\n \n #define RTX_COSTS(RTX,CODE,OUTER_CODE)\t\t\t\t\t\\\n   case MOD:\t\t\t\t\t\t\t\t\\\n@@ -1296,7 +1295,7 @@ do { char dstr[30];\t\t\t\t\t\\\n   if ((LOG) != 0)\t\t\t\\\n     fprintf (FILE, \"\\t.align %d\\n\", (LOG))\n \n-/* We don't have to worry about dbx compatability for the v850.  */\n+/* We don't have to worry about dbx compatibility for the v850.  */\n #define DEFAULT_GDB_EXTENSIONS 1\n \n /* Use stabs debugging info by default.  */"}, {"sha": "0ba10ca0cc0222d95d3e9976bdfc246e10fe267a", "filename": "gcc/config/v850/v850.md", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/956d69504d77d301015532d2f0564213f0efc706/gcc%2Fconfig%2Fv850%2Fv850.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/956d69504d77d301015532d2f0564213f0efc706/gcc%2Fconfig%2Fv850%2Fv850.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fv850%2Fv850.md?ref=956d69504d77d301015532d2f0564213f0efc706", "patch": "@@ -46,7 +46,7 @@\n ;; none_0hit - insn does not affect cc but it does modify operand 0\n ;;\tThis attribute is used to keep track of when operand 0 changes.\n ;; \tSee the description of NOTICE_UPDATE_CC for more info.\n-;; set_znv - sets z,n,v to useable values; c is unknown.\n+;; set_znv - sets z,n,v to usable values; c is unknown.\n ;; set_zn  - sets z,n to usable values; v,c is unknown.\n ;; compare - compare instruction\n ;; clobber - value of cc is unknown\n@@ -935,7 +935,7 @@\n \n   /* Shift index for the table array access.  */\n   emit_insn (gen_ashlsi3 (reg, reg, GEN_INT (TARGET_BIG_SWITCH ? 2 : 1)));\n-  /* Load the table address into a psuedo.  */\n+  /* Load the table address into a pseudo.  */\n   emit_insn (gen_movsi (tableaddress,\n \t\t\tgen_rtx (LABEL_REF, VOIDmode, operands[3])));\n   /* Add the table address to the index.  */\n@@ -1201,8 +1201,8 @@\n ;; an interrupt function makes a call.\n ;; UNSPEC_VOLATILE is considered to use and clobber all hard registers and\n ;; all of memory.  This blocks insns from being moved across this point.\n-;; This is needed because the rest of the compiler is not reading to handle\n-;; insns this compilcated\n+;; This is needed because the rest of the compiler is not ready to handle\n+;; insns this complicated.\n \n (define_insn \"save_all_interrupt\"\n   [(unspec_volatile [(const_int 0)] 0)]\n@@ -1249,8 +1249,8 @@\n ;; Restore all registers saved when an interrupt function makes a call.\n ;; UNSPEC_VOLATILE is considered to use and clobber all hard registers and\n ;; all of memory.  This blocks insns from being moved across this point.\n-;; This is needed because the rest of the compiler is not reading to handle\n-;; insns this compilcated\n+;; This is needed because the rest of the compiler is not ready to handle\n+;; insns this complicated.\n \n (define_insn \"restore_all_interrupt\"\n   [(unspec_volatile [(const_int 0)] 1)]"}, {"sha": "9a3838b7d7fc104dadf9a724a8a8698db916cc31", "filename": "gcc/config/xm-linux.h", "status": "modified", "additions": 1, "deletions": 15, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/956d69504d77d301015532d2f0564213f0efc706/gcc%2Fconfig%2Fxm-linux.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/956d69504d77d301015532d2f0564213f0efc706/gcc%2Fconfig%2Fxm-linux.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fxm-linux.h?ref=956d69504d77d301015532d2f0564213f0efc706", "patch": "@@ -1,4 +1,4 @@\n-/* Configuration for GCC for Intel i386 running Linux.\n+/* Configuration for GCC for Intel i386 running Linux-based GNU systems.\n    Copyright (C) 1995, 1996, 1997 Free Software Foundation, Inc.\n    Contributed by H.J. Lu (hjl@nynexst.com)\n \n@@ -19,15 +19,6 @@ along with GNU CC; see the file COPYING.  If not, write to\n the Free Software Foundation, 59 Temple Place - Suite 330,\n Boston, MA 02111-1307, USA.  */\n \n-#undef  HAVE_VPRINTF\n-#define HAVE_VPRINTF\n-\n-#undef  HAVE_POPEN\n-#define HAVE_POPEN\n-\n-#undef  HAVE_PUTENV\n-#define HAVE_PUTENV\n-\n #undef  HAVE_ATEXIT\n #define HAVE_ATEXIT\n \n@@ -40,8 +31,3 @@ Boston, MA 02111-1307, USA.  */\n \n #undef BSTRING\n #define BSTRING\n-#undef bcmp\n-#undef bcopy\n-#undef bzero\n-#undef index\n-#undef rindex"}, {"sha": "8534aaa75a120a2e88a177fd600f3d6ccfc0634e", "filename": "gcc/config/xm-svr4.h", "status": "modified", "additions": 1, "deletions": 9, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/956d69504d77d301015532d2f0564213f0efc706/gcc%2Fconfig%2Fxm-svr4.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/956d69504d77d301015532d2f0564213f0efc706/gcc%2Fconfig%2Fxm-svr4.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fxm-svr4.h?ref=956d69504d77d301015532d2f0564213f0efc706", "patch": "@@ -1,5 +1,5 @@\n /* Configuration for GNU C-compiler for hosts running System V Release 4\n-   Copyright (C) 1988 Free Software Foundation, Inc.\n+   Copyright (C) 1988, 1997 Free Software Foundation, Inc.\n \n This file is part of GNU CC.\n \n@@ -18,15 +18,7 @@ along with GNU CC; see the file COPYING.  If not, write to\n the Free Software Foundation, 59 Temple Place - Suite 330,\n Boston, MA 02111-1307, USA.  */\n \n-#define bcopy(src,dst,len) memcpy ((dst),(src),(len))\n-#define bzero(dst,len) memset ((dst),0,(len))\n-#define bcmp(left,right,len) memcmp ((left),(right),(len))\n-\n-#define rindex strrchr\n-#define index strchr\n-\n #define USG\n-#define HAVE_VPRINTF\n \n #define POSIX\n "}, {"sha": "e2adcd2f3c71881f40008c296e9ded2d1235974b", "filename": "gcc/configure", "status": "modified", "additions": 1133, "deletions": 174, "changes": 1307, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/956d69504d77d301015532d2f0564213f0efc706/gcc%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/956d69504d77d301015532d2f0564213f0efc706/gcc%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfigure?ref=956d69504d77d301015532d2f0564213f0efc706", "patch": "@@ -1,7 +1,7 @@\n #! /bin/sh\n \n # Guess values for system-dependent variables and create Makefiles.\n-# Generated automatically using autoconf version 2.12 \n+# Generated automatically using autoconf version 2.12.1 \n # Copyright (C) 1992, 93, 94, 95, 96 Free Software Foundation, Inc.\n #\n # This configure script is free software; the Free Software Foundation\n@@ -71,6 +71,7 @@ mandir='${prefix}/man'\n # Initialize some other variables.\n subdirs=\n MFLAGS= MAKEFLAGS=\n+SHELL=${CONFIG_SHELL-/bin/sh}\n # Maximum number of lines to put in a shell here document.\n ac_max_here_lines=12\n \n@@ -354,7 +355,7 @@ EOF\n     verbose=yes ;;\n \n   -version | --version | --versio | --versi | --vers)\n-    echo \"configure generated by autoconf version 2.12\"\n+    echo \"configure generated by autoconf version 2.12.1\"\n     exit 0 ;;\n \n   -with-* | --with-*)\n@@ -715,33 +716,33 @@ esac\n \n \n # Make sure we can run config.sub.\n-if $ac_config_sub sun4 >/dev/null 2>&1; then :\n+if ${CONFIG_SHELL-/bin/sh} $ac_config_sub sun4 >/dev/null 2>&1; then :\n else { echo \"configure: error: can not run $ac_config_sub\" 1>&2; exit 1; }\n fi\n \n echo $ac_n \"checking host system type\"\"... $ac_c\" 1>&6\n-echo \"configure:724: checking host system type\" >&5\n+echo \"configure:725: checking host system type\" >&5\n \n host_alias=$host\n case \"$host_alias\" in\n NONE)\n   case $nonopt in\n   NONE)\n-    if host_alias=`$ac_config_guess`; then :\n+    if host_alias=`${CONFIG_SHELL-/bin/sh} $ac_config_guess`; then :\n     else { echo \"configure: error: can not guess host type; you must specify one\" 1>&2; exit 1; }\n     fi ;;\n   *) host_alias=$nonopt ;;\n   esac ;;\n esac\n \n-host=`$ac_config_sub $host_alias`\n+host=`${CONFIG_SHELL-/bin/sh} $ac_config_sub $host_alias`\n host_cpu=`echo $host | sed 's/^\\([^-]*\\)-\\([^-]*\\)-\\(.*\\)$/\\1/'`\n host_vendor=`echo $host | sed 's/^\\([^-]*\\)-\\([^-]*\\)-\\(.*\\)$/\\2/'`\n host_os=`echo $host | sed 's/^\\([^-]*\\)-\\([^-]*\\)-\\(.*\\)$/\\3/'`\n echo \"$ac_t\"\"$host\" 1>&6\n \n echo $ac_n \"checking target system type\"\"... $ac_c\" 1>&6\n-echo \"configure:745: checking target system type\" >&5\n+echo \"configure:746: checking target system type\" >&5\n \n target_alias=$target\n case \"$target_alias\" in\n@@ -752,14 +753,14 @@ NONE)\n   esac ;;\n esac\n \n-target=`$ac_config_sub $target_alias`\n+target=`${CONFIG_SHELL-/bin/sh} $ac_config_sub $target_alias`\n target_cpu=`echo $target | sed 's/^\\([^-]*\\)-\\([^-]*\\)-\\(.*\\)$/\\1/'`\n target_vendor=`echo $target | sed 's/^\\([^-]*\\)-\\([^-]*\\)-\\(.*\\)$/\\2/'`\n target_os=`echo $target | sed 's/^\\([^-]*\\)-\\([^-]*\\)-\\(.*\\)$/\\3/'`\n echo \"$ac_t\"\"$target\" 1>&6\n \n echo $ac_n \"checking build system type\"\"... $ac_c\" 1>&6\n-echo \"configure:763: checking build system type\" >&5\n+echo \"configure:764: checking build system type\" >&5\n \n build_alias=$build\n case \"$build_alias\" in\n@@ -770,7 +771,7 @@ NONE)\n   esac ;;\n esac\n \n-build=`$ac_config_sub $build_alias`\n+build=`${CONFIG_SHELL-/bin/sh} $ac_config_sub $build_alias`\n build_cpu=`echo $build | sed 's/^\\([^-]*\\)-\\([^-]*\\)-\\(.*\\)$/\\1/'`\n build_vendor=`echo $build | sed 's/^\\([^-]*\\)-\\([^-]*\\)-\\(.*\\)$/\\2/'`\n build_os=`echo $build | sed 's/^\\([^-]*\\)-\\([^-]*\\)-\\(.*\\)$/\\3/'`\n@@ -786,7 +787,7 @@ test \"$host_alias\" != \"$target_alias\" &&\n # Extract the first word of \"gcc\", so it can be a program name with args.\n set dummy gcc; ac_word=$2\n echo $ac_n \"checking for $ac_word\"\"... $ac_c\" 1>&6\n-echo \"configure:790: checking for $ac_word\" >&5\n+echo \"configure:791: checking for $ac_word\" >&5\n if eval \"test \\\"`echo '$''{'ac_cv_prog_CC'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n@@ -815,7 +816,7 @@ if test -z \"$CC\"; then\n   # Extract the first word of \"cc\", so it can be a program name with args.\n set dummy cc; ac_word=$2\n echo $ac_n \"checking for $ac_word\"\"... $ac_c\" 1>&6\n-echo \"configure:819: checking for $ac_word\" >&5\n+echo \"configure:820: checking for $ac_word\" >&5\n if eval \"test \\\"`echo '$''{'ac_cv_prog_CC'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n@@ -863,7 +864,7 @@ fi\n fi\n \n echo $ac_n \"checking whether the C compiler ($CC $CFLAGS $LDFLAGS) works\"\"... $ac_c\" 1>&6\n-echo \"configure:867: checking whether the C compiler ($CC $CFLAGS $LDFLAGS) works\" >&5\n+echo \"configure:868: checking whether the C compiler ($CC $CFLAGS $LDFLAGS) works\" >&5\n \n ac_ext=c\n # CFLAGS is not in ac_cpp because -g, -O, etc. are not valid cpp options.\n@@ -873,11 +874,11 @@ ac_link='${CC-cc} -o conftest $CFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS\n cross_compiling=$ac_cv_prog_cc_cross\n \n cat > conftest.$ac_ext <<EOF\n-#line 877 \"configure\"\n+#line 878 \"configure\"\n #include \"confdefs.h\"\n main(){return(0);}\n EOF\n-if { (eval echo configure:881: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest; then\n+if { (eval echo configure:882: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest; then\n   ac_cv_prog_cc_works=yes\n   # If we can't run a trivial program, we are probably using a cross compiler.\n   if (./conftest; exit) 2>/dev/null; then\n@@ -897,12 +898,12 @@ if test $ac_cv_prog_cc_works = no; then\n   { echo \"configure: error: installation or configuration problem: C compiler cannot create executables.\" 1>&2; exit 1; }\n fi\n echo $ac_n \"checking whether the C compiler ($CC $CFLAGS $LDFLAGS) is a cross-compiler\"\"... $ac_c\" 1>&6\n-echo \"configure:901: checking whether the C compiler ($CC $CFLAGS $LDFLAGS) is a cross-compiler\" >&5\n+echo \"configure:902: checking whether the C compiler ($CC $CFLAGS $LDFLAGS) is a cross-compiler\" >&5\n echo \"$ac_t\"\"$ac_cv_prog_cc_cross\" 1>&6\n cross_compiling=$ac_cv_prog_cc_cross\n \n echo $ac_n \"checking whether we are using GNU C\"\"... $ac_c\" 1>&6\n-echo \"configure:906: checking whether we are using GNU C\" >&5\n+echo \"configure:907: checking whether we are using GNU C\" >&5\n if eval \"test \\\"`echo '$''{'ac_cv_prog_gcc'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n@@ -911,7 +912,7 @@ else\n   yes;\n #endif\n EOF\n-if { ac_try='${CC-cc} -E conftest.c'; { (eval echo configure:915: \\\"$ac_try\\\") 1>&5; (eval $ac_try) 2>&5; }; } | egrep yes >/dev/null 2>&1; then\n+if { ac_try='${CC-cc} -E conftest.c'; { (eval echo configure:916: \\\"$ac_try\\\") 1>&5; (eval $ac_try) 2>&5; }; } | egrep yes >/dev/null 2>&1; then\n   ac_cv_prog_gcc=yes\n else\n   ac_cv_prog_gcc=no\n@@ -926,7 +927,7 @@ if test $ac_cv_prog_gcc = yes; then\n   ac_save_CFLAGS=\"$CFLAGS\"\n   CFLAGS=\n   echo $ac_n \"checking whether ${CC-cc} accepts -g\"\"... $ac_c\" 1>&6\n-echo \"configure:930: checking whether ${CC-cc} accepts -g\" >&5\n+echo \"configure:931: checking whether ${CC-cc} accepts -g\" >&5\n if eval \"test \\\"`echo '$''{'ac_cv_prog_cc_g'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n@@ -954,7 +955,7 @@ else\n fi\n \n echo $ac_n \"checking whether ${MAKE-make} sets \\${MAKE}\"\"... $ac_c\" 1>&6\n-echo \"configure:958: checking whether ${MAKE-make} sets \\${MAKE}\" >&5\n+echo \"configure:959: checking whether ${MAKE-make} sets \\${MAKE}\" >&5\n set dummy ${MAKE-make}; ac_make=`echo \"$2\" | sed 'y%./+-%__p_%'`\n if eval \"test \\\"`echo '$''{'ac_cv_prog_make_${ac_make}_set'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n@@ -987,7 +988,7 @@ do\n # Extract the first word of \"$ac_prog\", so it can be a program name with args.\n set dummy $ac_prog; ac_word=$2\n echo $ac_n \"checking for $ac_word\"\"... $ac_c\" 1>&6\n-echo \"configure:991: checking for $ac_word\" >&5\n+echo \"configure:992: checking for $ac_word\" >&5\n if eval \"test \\\"`echo '$''{'ac_cv_prog_AWK'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n@@ -1018,7 +1019,7 @@ done\n # Extract the first word of \"flex\", so it can be a program name with args.\n set dummy flex; ac_word=$2\n echo $ac_n \"checking for $ac_word\"\"... $ac_c\" 1>&6\n-echo \"configure:1022: checking for $ac_word\" >&5\n+echo \"configure:1023: checking for $ac_word\" >&5\n if eval \"test \\\"`echo '$''{'ac_cv_prog_LEX'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n@@ -1051,15 +1052,15 @@ then\n   *) ac_lib=l ;;\n   esac\n   echo $ac_n \"checking for yywrap in -l$ac_lib\"\"... $ac_c\" 1>&6\n-echo \"configure:1055: checking for yywrap in -l$ac_lib\" >&5\n+echo \"configure:1056: checking for yywrap in -l$ac_lib\" >&5\n ac_lib_var=`echo $ac_lib'_'yywrap | sed 'y%./+-%__p_%'`\n if eval \"test \\\"`echo '$''{'ac_cv_lib_$ac_lib_var'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n   ac_save_LIBS=\"$LIBS\"\n LIBS=\"-l$ac_lib  $LIBS\"\n cat > conftest.$ac_ext <<EOF\n-#line 1063 \"configure\"\n+#line 1064 \"configure\"\n #include \"confdefs.h\"\n /* Override any gcc2 internal prototype to avoid an error.  */\n /* We use char because int might match the return type of a gcc2\n@@ -1070,7 +1071,7 @@ int main() {\n yywrap()\n ; return 0; }\n EOF\n-if { (eval echo configure:1074: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest; then\n+if { (eval echo configure:1075: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest; then\n   rm -rf conftest*\n   eval \"ac_cv_lib_$ac_lib_var=yes\"\n else\n@@ -1093,7 +1094,7 @@ fi\n fi\n \n echo $ac_n \"checking whether ln works\"\"... $ac_c\" 1>&6\n-echo \"configure:1097: checking whether ln works\" >&5\n+echo \"configure:1098: checking whether ln works\" >&5\n if eval \"test \\\"`echo '$''{'gcc_cv_prog_LN'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n@@ -1125,7 +1126,7 @@ else\n fi\n \n echo $ac_n \"checking whether ln -s works\"\"... $ac_c\" 1>&6\n-echo \"configure:1129: checking whether ln -s works\" >&5\n+echo \"configure:1130: checking whether ln -s works\" >&5\n if eval \"test \\\"`echo '$''{'gcc_cv_prog_LN_S'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n@@ -1159,7 +1160,7 @@ fi\n # Extract the first word of \"ranlib\", so it can be a program name with args.\n set dummy ranlib; ac_word=$2\n echo $ac_n \"checking for $ac_word\"\"... $ac_c\" 1>&6\n-echo \"configure:1163: checking for $ac_word\" >&5\n+echo \"configure:1164: checking for $ac_word\" >&5\n if eval \"test \\\"`echo '$''{'ac_cv_prog_RANLIB'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n@@ -1190,7 +1191,7 @@ do\n # Extract the first word of \"$ac_prog\", so it can be a program name with args.\n set dummy $ac_prog; ac_word=$2\n echo $ac_n \"checking for $ac_word\"\"... $ac_c\" 1>&6\n-echo \"configure:1194: checking for $ac_word\" >&5\n+echo \"configure:1195: checking for $ac_word\" >&5\n if eval \"test \\\"`echo '$''{'ac_cv_prog_YACC'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n@@ -1230,7 +1231,7 @@ test -n \"$YACC\" || YACC=\"yacc\"\n # SVR4 /usr/ucb/install, which tries to use the nonexistent group \"staff\"\n # ./install, which can be erroneously created by make from ./install.sh.\n echo $ac_n \"checking for a BSD compatible install\"\"... $ac_c\" 1>&6\n-echo \"configure:1234: checking for a BSD compatible install\" >&5\n+echo \"configure:1235: checking for a BSD compatible install\" >&5\n if test -z \"$INSTALL\"; then\n if eval \"test \\\"`echo '$''{'ac_cv_path_install'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n@@ -1284,7 +1285,7 @@ test -z \"$INSTALL_DATA\" && INSTALL_DATA='${INSTALL} -m 644'\n # Extract the first word of \"gcc\", so it can be a program name with args.\n set dummy gcc; ac_word=$2\n echo $ac_n \"checking for $ac_word\"\"... $ac_c\" 1>&6\n-echo \"configure:1288: checking for $ac_word\" >&5\n+echo \"configure:1289: checking for $ac_word\" >&5\n if eval \"test \\\"`echo '$''{'ac_cv_prog_CC'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n@@ -1313,7 +1314,7 @@ if test -z \"$CC\"; then\n   # Extract the first word of \"cc\", so it can be a program name with args.\n set dummy cc; ac_word=$2\n echo $ac_n \"checking for $ac_word\"\"... $ac_c\" 1>&6\n-echo \"configure:1317: checking for $ac_word\" >&5\n+echo \"configure:1318: checking for $ac_word\" >&5\n if eval \"test \\\"`echo '$''{'ac_cv_prog_CC'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n@@ -1361,7 +1362,7 @@ fi\n fi\n \n echo $ac_n \"checking whether the C compiler ($CC $CFLAGS $LDFLAGS) works\"\"... $ac_c\" 1>&6\n-echo \"configure:1365: checking whether the C compiler ($CC $CFLAGS $LDFLAGS) works\" >&5\n+echo \"configure:1366: checking whether the C compiler ($CC $CFLAGS $LDFLAGS) works\" >&5\n \n ac_ext=c\n # CFLAGS is not in ac_cpp because -g, -O, etc. are not valid cpp options.\n@@ -1371,11 +1372,11 @@ ac_link='${CC-cc} -o conftest $CFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS\n cross_compiling=$ac_cv_prog_cc_cross\n \n cat > conftest.$ac_ext <<EOF\n-#line 1375 \"configure\"\n+#line 1376 \"configure\"\n #include \"confdefs.h\"\n main(){return(0);}\n EOF\n-if { (eval echo configure:1379: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest; then\n+if { (eval echo configure:1380: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest; then\n   ac_cv_prog_cc_works=yes\n   # If we can't run a trivial program, we are probably using a cross compiler.\n   if (./conftest; exit) 2>/dev/null; then\n@@ -1395,12 +1396,12 @@ if test $ac_cv_prog_cc_works = no; then\n   { echo \"configure: error: installation or configuration problem: C compiler cannot create executables.\" 1>&2; exit 1; }\n fi\n echo $ac_n \"checking whether the C compiler ($CC $CFLAGS $LDFLAGS) is a cross-compiler\"\"... $ac_c\" 1>&6\n-echo \"configure:1399: checking whether the C compiler ($CC $CFLAGS $LDFLAGS) is a cross-compiler\" >&5\n+echo \"configure:1400: checking whether the C compiler ($CC $CFLAGS $LDFLAGS) is a cross-compiler\" >&5\n echo \"$ac_t\"\"$ac_cv_prog_cc_cross\" 1>&6\n cross_compiling=$ac_cv_prog_cc_cross\n \n echo $ac_n \"checking whether we are using GNU C\"\"... $ac_c\" 1>&6\n-echo \"configure:1404: checking whether we are using GNU C\" >&5\n+echo \"configure:1405: checking whether we are using GNU C\" >&5\n if eval \"test \\\"`echo '$''{'ac_cv_prog_gcc'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n@@ -1409,7 +1410,7 @@ else\n   yes;\n #endif\n EOF\n-if { ac_try='${CC-cc} -E conftest.c'; { (eval echo configure:1413: \\\"$ac_try\\\") 1>&5; (eval $ac_try) 2>&5; }; } | egrep yes >/dev/null 2>&1; then\n+if { ac_try='${CC-cc} -E conftest.c'; { (eval echo configure:1414: \\\"$ac_try\\\") 1>&5; (eval $ac_try) 2>&5; }; } | egrep yes >/dev/null 2>&1; then\n   ac_cv_prog_gcc=yes\n else\n   ac_cv_prog_gcc=no\n@@ -1424,7 +1425,7 @@ if test $ac_cv_prog_gcc = yes; then\n   ac_save_CFLAGS=\"$CFLAGS\"\n   CFLAGS=\n   echo $ac_n \"checking whether ${CC-cc} accepts -g\"\"... $ac_c\" 1>&6\n-echo \"configure:1428: checking whether ${CC-cc} accepts -g\" >&5\n+echo \"configure:1429: checking whether ${CC-cc} accepts -g\" >&5\n if eval \"test \\\"`echo '$''{'ac_cv_prog_cc_g'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n@@ -1452,7 +1453,7 @@ else\n fi\n \n echo $ac_n \"checking whether ${MAKE-make} sets \\${MAKE}\"\"... $ac_c\" 1>&6\n-echo \"configure:1456: checking whether ${MAKE-make} sets \\${MAKE}\" >&5\n+echo \"configure:1457: checking whether ${MAKE-make} sets \\${MAKE}\" >&5\n set dummy ${MAKE-make}; ac_make=`echo \"$2\" | sed 'y%./+-%__p_%'`\n if eval \"test \\\"`echo '$''{'ac_cv_prog_make_${ac_make}_set'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n@@ -1480,7 +1481,7 @@ fi\n \n \n echo $ac_n \"checking how to run the C preprocessor\"\"... $ac_c\" 1>&6\n-echo \"configure:1484: checking how to run the C preprocessor\" >&5\n+echo \"configure:1485: checking how to run the C preprocessor\" >&5\n # On Suns, sometimes $CPP names a directory.\n if test -n \"$CPP\" && test -d \"$CPP\"; then\n   CPP=\n@@ -1495,13 +1496,13 @@ else\n   # On the NeXT, cc -E runs the code through the compiler's parser,\n   # not just through cpp.\n   cat > conftest.$ac_ext <<EOF\n-#line 1499 \"configure\"\n+#line 1500 \"configure\"\n #include \"confdefs.h\"\n #include <assert.h>\n Syntax Error\n EOF\n ac_try=\"$ac_cpp conftest.$ac_ext >/dev/null 2>conftest.out\"\n-{ (eval echo configure:1505: \\\"$ac_try\\\") 1>&5; (eval $ac_try) 2>&5; }\n+{ (eval echo configure:1506: \\\"$ac_try\\\") 1>&5; (eval $ac_try) 2>&5; }\n ac_err=`grep -v '^ *+' conftest.out`\n if test -z \"$ac_err\"; then\n   :\n@@ -1512,13 +1513,13 @@ else\n   rm -rf conftest*\n   CPP=\"${CC-cc} -E -traditional-cpp\"\n   cat > conftest.$ac_ext <<EOF\n-#line 1516 \"configure\"\n+#line 1517 \"configure\"\n #include \"confdefs.h\"\n #include <assert.h>\n Syntax Error\n EOF\n ac_try=\"$ac_cpp conftest.$ac_ext >/dev/null 2>conftest.out\"\n-{ (eval echo configure:1522: \\\"$ac_try\\\") 1>&5; (eval $ac_try) 2>&5; }\n+{ (eval echo configure:1523: \\\"$ac_try\\\") 1>&5; (eval $ac_try) 2>&5; }\n ac_err=`grep -v '^ *+' conftest.out`\n if test -z \"$ac_err\"; then\n   :\n@@ -1540,88 +1541,888 @@ else\n fi\n echo \"$ac_t\"\"$CPP\" 1>&6\n \n-for ac_hdr in limits.h stddef.h string.h strings.h stdlib.h time.h unistd.h varargs.h sys/varargs.h\n+echo $ac_n \"checking for ANSI C header files\"\"... $ac_c\" 1>&6\n+echo \"configure:1546: checking for ANSI C header files\" >&5\n+if eval \"test \\\"`echo '$''{'ac_cv_header_stdc'+set}'`\\\" = set\"; then\n+  echo $ac_n \"(cached) $ac_c\" 1>&6\n+else\n+  cat > conftest.$ac_ext <<EOF\n+#line 1551 \"configure\"\n+#include \"confdefs.h\"\n+#include <stdlib.h>\n+#include <stdarg.h>\n+#include <string.h>\n+#include <float.h>\n+EOF\n+ac_try=\"$ac_cpp conftest.$ac_ext >/dev/null 2>conftest.out\"\n+{ (eval echo configure:1559: \\\"$ac_try\\\") 1>&5; (eval $ac_try) 2>&5; }\n+ac_err=`grep -v '^ *+' conftest.out`\n+if test -z \"$ac_err\"; then\n+  rm -rf conftest*\n+  ac_cv_header_stdc=yes\n+else\n+  echo \"$ac_err\" >&5\n+  echo \"configure: failed program was:\" >&5\n+  cat conftest.$ac_ext >&5\n+  rm -rf conftest*\n+  ac_cv_header_stdc=no\n+fi\n+rm -f conftest*\n+\n+if test $ac_cv_header_stdc = yes; then\n+  # SunOS 4.x string.h does not declare mem*, contrary to ANSI.\n+cat > conftest.$ac_ext <<EOF\n+#line 1576 \"configure\"\n+#include \"confdefs.h\"\n+#include <string.h>\n+EOF\n+if (eval \"$ac_cpp conftest.$ac_ext\") 2>&5 |\n+  egrep \"memchr\" >/dev/null 2>&1; then\n+  :\n+else\n+  rm -rf conftest*\n+  ac_cv_header_stdc=no\n+fi\n+rm -f conftest*\n+\n+fi\n+\n+if test $ac_cv_header_stdc = yes; then\n+  # ISC 2.0.2 stdlib.h does not declare free, contrary to ANSI.\n+cat > conftest.$ac_ext <<EOF\n+#line 1594 \"configure\"\n+#include \"confdefs.h\"\n+#include <stdlib.h>\n+EOF\n+if (eval \"$ac_cpp conftest.$ac_ext\") 2>&5 |\n+  egrep \"free\" >/dev/null 2>&1; then\n+  :\n+else\n+  rm -rf conftest*\n+  ac_cv_header_stdc=no\n+fi\n+rm -f conftest*\n+\n+fi\n+\n+if test $ac_cv_header_stdc = yes; then\n+  # /bin/cc in Irix-4.0.5 gets non-ANSI ctype macros unless using -ansi.\n+if test \"$cross_compiling\" = yes; then\n+  :\n+else\n+  cat > conftest.$ac_ext <<EOF\n+#line 1615 \"configure\"\n+#include \"confdefs.h\"\n+#include <ctype.h>\n+#define ISLOWER(c) ('a' <= (c) && (c) <= 'z')\n+#define TOUPPER(c) (ISLOWER(c) ? 'A' + ((c) - 'a') : (c))\n+#define XOR(e, f) (((e) && !(f)) || (!(e) && (f)))\n+int main () { int i; for (i = 0; i < 256; i++)\n+if (XOR (islower (i), ISLOWER (i)) || toupper (i) != TOUPPER (i)) exit(2);\n+exit (0); }\n+\n+EOF\n+if { (eval echo configure:1626: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest && (./conftest; exit) 2>/dev/null\n+then\n+  :\n+else\n+  echo \"configure: failed program was:\" >&5\n+  cat conftest.$ac_ext >&5\n+  rm -fr conftest*\n+  ac_cv_header_stdc=no\n+fi\n+rm -fr conftest*\n+fi\n+\n+fi\n+fi\n+\n+echo \"$ac_t\"\"$ac_cv_header_stdc\" 1>&6\n+if test $ac_cv_header_stdc = yes; then\n+  cat >> confdefs.h <<\\EOF\n+#define STDC_HEADERS 1\n+EOF\n+\n+fi\n+\n+echo $ac_n \"checking whether time.h and sys/time.h may both be included\"\"... $ac_c\" 1>&6\n+echo \"configure:1650: checking whether time.h and sys/time.h may both be included\" >&5\n+if eval \"test \\\"`echo '$''{'ac_cv_header_time'+set}'`\\\" = set\"; then\n+  echo $ac_n \"(cached) $ac_c\" 1>&6\n+else\n+  cat > conftest.$ac_ext <<EOF\n+#line 1655 \"configure\"\n+#include \"confdefs.h\"\n+#include <sys/types.h>\n+#include <sys/time.h>\n+#include <time.h>\n+int main() {\n+struct tm *tp;\n+; return 0; }\n+EOF\n+if { (eval echo configure:1664: \\\"$ac_compile\\\") 1>&5; (eval $ac_compile) 2>&5; }; then\n+  rm -rf conftest*\n+  ac_cv_header_time=yes\n+else\n+  echo \"configure: failed program was:\" >&5\n+  cat conftest.$ac_ext >&5\n+  rm -rf conftest*\n+  ac_cv_header_time=no\n+fi\n+rm -f conftest*\n+fi\n+\n+echo \"$ac_t\"\"$ac_cv_header_time\" 1>&6\n+if test $ac_cv_header_time = yes; then\n+  cat >> confdefs.h <<\\EOF\n+#define TIME_WITH_SYS_TIME 1\n+EOF\n+\n+fi\n+\n+for ac_hdr in limits.h stddef.h string.h strings.h stdlib.h time.h fcntl.h unistd.h sys/file.h sys/time.h sys/resource.h sys/param.h sys/times.h varargs.h sys/varargs.h\n do\n ac_safe=`echo \"$ac_hdr\" | sed 'y%./+-%__p_%'`\n echo $ac_n \"checking for $ac_hdr\"\"... $ac_c\" 1>&6\n-echo \"configure:1548: checking for $ac_hdr\" >&5\n+echo \"configure:1688: checking for $ac_hdr\" >&5\n if eval \"test \\\"`echo '$''{'ac_cv_header_$ac_safe'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n   cat > conftest.$ac_ext <<EOF\n-#line 1553 \"configure\"\n+#line 1693 \"configure\"\n #include \"confdefs.h\"\n #include <$ac_hdr>\n EOF\n-ac_try=\"$ac_cpp conftest.$ac_ext >/dev/null 2>conftest.out\"\n-{ (eval echo configure:1558: \\\"$ac_try\\\") 1>&5; (eval $ac_try) 2>&5; }\n-ac_err=`grep -v '^ *+' conftest.out`\n-if test -z \"$ac_err\"; then\n+ac_try=\"$ac_cpp conftest.$ac_ext >/dev/null 2>conftest.out\"\n+{ (eval echo configure:1698: \\\"$ac_try\\\") 1>&5; (eval $ac_try) 2>&5; }\n+ac_err=`grep -v '^ *+' conftest.out`\n+if test -z \"$ac_err\"; then\n+  rm -rf conftest*\n+  eval \"ac_cv_header_$ac_safe=yes\"\n+else\n+  echo \"$ac_err\" >&5\n+  echo \"configure: failed program was:\" >&5\n+  cat conftest.$ac_ext >&5\n+  rm -rf conftest*\n+  eval \"ac_cv_header_$ac_safe=no\"\n+fi\n+rm -f conftest*\n+fi\n+if eval \"test \\\"`echo '$ac_cv_header_'$ac_safe`\\\" = yes\"; then\n+  echo \"$ac_t\"\"yes\" 1>&6\n+    ac_tr_hdr=HAVE_`echo $ac_hdr | sed 'y%abcdefghijklmnopqrstuvwxyz./-%ABCDEFGHIJKLMNOPQRSTUVWXYZ___%'`\n+  cat >> confdefs.h <<EOF\n+#define $ac_tr_hdr 1\n+EOF\n+ \n+else\n+  echo \"$ac_t\"\"no\" 1>&6\n+fi\n+done\n+\n+\n+# Use <inttypes.h> only if it exists,\n+# doesn't clash with <sys/types.h>, and declares intmax_t.\n+echo $ac_n \"checking for inttypes.h\"\"... $ac_c\" 1>&6\n+echo \"configure:1728: checking for inttypes.h\" >&5\n+if eval \"test \\\"`echo '$''{'gcc_cv_header_inttypes_h'+set}'`\\\" = set\"; then\n+  echo $ac_n \"(cached) $ac_c\" 1>&6\n+else\n+  cat > conftest.$ac_ext <<EOF\n+#line 1733 \"configure\"\n+#include \"confdefs.h\"\n+#include <sys/types.h>\n+#include <inttypes.h>\n+int main() {\n+intmax_t i = -1;\n+; return 0; }\n+EOF\n+if { (eval echo configure:1741: \\\"$ac_compile\\\") 1>&5; (eval $ac_compile) 2>&5; }; then\n+  rm -rf conftest*\n+  cat >> confdefs.h <<EOF\n+#define HAVE_INTTYPES_H 1\n+EOF\n+\n+   gcc_cv_header_inttypes_h=yes\n+else\n+  echo \"configure: failed program was:\" >&5\n+  cat conftest.$ac_ext >&5\n+  rm -rf conftest*\n+  gcc_cv_header_inttypes_h=no\n+fi\n+rm -f conftest*\n+fi\n+\n+echo \"$ac_t\"\"$gcc_cv_header_inttypes_h\" 1>&6\n+\n+for ac_func in strtoul\n+do\n+echo $ac_n \"checking for $ac_func\"\"... $ac_c\" 1>&6\n+echo \"configure:1762: checking for $ac_func\" >&5\n+if eval \"test \\\"`echo '$''{'ac_cv_func_$ac_func'+set}'`\\\" = set\"; then\n+  echo $ac_n \"(cached) $ac_c\" 1>&6\n+else\n+  cat > conftest.$ac_ext <<EOF\n+#line 1767 \"configure\"\n+#include \"confdefs.h\"\n+/* System header to define __stub macros and hopefully few prototypes,\n+    which can conflict with char $ac_func(); below.  */\n+#include <assert.h>\n+/* Override any gcc2 internal prototype to avoid an error.  */\n+/* We use char because int might match the return type of a gcc2\n+    builtin and then its argument prototype would still apply.  */\n+char $ac_func();\n+\n+int main() {\n+\n+/* The GNU C library defines this for functions which it implements\n+    to always fail with ENOSYS.  Some functions are actually named\n+    something starting with __ and the normal name is an alias.  */\n+#if defined (__stub_$ac_func) || defined (__stub___$ac_func)\n+choke me\n+#else\n+$ac_func();\n+#endif\n+\n+; return 0; }\n+EOF\n+if { (eval echo configure:1790: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest; then\n+  rm -rf conftest*\n+  eval \"ac_cv_func_$ac_func=yes\"\n+else\n+  echo \"configure: failed program was:\" >&5\n+  cat conftest.$ac_ext >&5\n+  rm -rf conftest*\n+  eval \"ac_cv_func_$ac_func=no\"\n+fi\n+rm -f conftest*\n+fi\n+\n+if eval \"test \\\"`echo '$ac_cv_func_'$ac_func`\\\" = yes\"; then\n+  echo \"$ac_t\"\"yes\" 1>&6\n+    ac_tr_func=HAVE_`echo $ac_func | tr 'abcdefghijklmnopqrstuvwxyz' 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'`\n+  cat >> confdefs.h <<EOF\n+#define $ac_tr_func 1\n+EOF\n+ \n+else\n+  echo \"$ac_t\"\"no\" 1>&6\n+fi\n+done\n+\n+for ac_func in bsearch\n+do\n+echo $ac_n \"checking for $ac_func\"\"... $ac_c\" 1>&6\n+echo \"configure:1817: checking for $ac_func\" >&5\n+if eval \"test \\\"`echo '$''{'ac_cv_func_$ac_func'+set}'`\\\" = set\"; then\n+  echo $ac_n \"(cached) $ac_c\" 1>&6\n+else\n+  cat > conftest.$ac_ext <<EOF\n+#line 1822 \"configure\"\n+#include \"confdefs.h\"\n+/* System header to define __stub macros and hopefully few prototypes,\n+    which can conflict with char $ac_func(); below.  */\n+#include <assert.h>\n+/* Override any gcc2 internal prototype to avoid an error.  */\n+/* We use char because int might match the return type of a gcc2\n+    builtin and then its argument prototype would still apply.  */\n+char $ac_func();\n+\n+int main() {\n+\n+/* The GNU C library defines this for functions which it implements\n+    to always fail with ENOSYS.  Some functions are actually named\n+    something starting with __ and the normal name is an alias.  */\n+#if defined (__stub_$ac_func) || defined (__stub___$ac_func)\n+choke me\n+#else\n+$ac_func();\n+#endif\n+\n+; return 0; }\n+EOF\n+if { (eval echo configure:1845: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest; then\n+  rm -rf conftest*\n+  eval \"ac_cv_func_$ac_func=yes\"\n+else\n+  echo \"configure: failed program was:\" >&5\n+  cat conftest.$ac_ext >&5\n+  rm -rf conftest*\n+  eval \"ac_cv_func_$ac_func=no\"\n+fi\n+rm -f conftest*\n+fi\n+\n+if eval \"test \\\"`echo '$ac_cv_func_'$ac_func`\\\" = yes\"; then\n+  echo \"$ac_t\"\"yes\" 1>&6\n+    ac_tr_func=HAVE_`echo $ac_func | tr 'abcdefghijklmnopqrstuvwxyz' 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'`\n+  cat >> confdefs.h <<EOF\n+#define $ac_tr_func 1\n+EOF\n+ \n+else\n+  echo \"$ac_t\"\"no\" 1>&6\n+fi\n+done\n+\n+for ac_func in strerror\n+do\n+echo $ac_n \"checking for $ac_func\"\"... $ac_c\" 1>&6\n+echo \"configure:1872: checking for $ac_func\" >&5\n+if eval \"test \\\"`echo '$''{'ac_cv_func_$ac_func'+set}'`\\\" = set\"; then\n+  echo $ac_n \"(cached) $ac_c\" 1>&6\n+else\n+  cat > conftest.$ac_ext <<EOF\n+#line 1877 \"configure\"\n+#include \"confdefs.h\"\n+/* System header to define __stub macros and hopefully few prototypes,\n+    which can conflict with char $ac_func(); below.  */\n+#include <assert.h>\n+/* Override any gcc2 internal prototype to avoid an error.  */\n+/* We use char because int might match the return type of a gcc2\n+    builtin and then its argument prototype would still apply.  */\n+char $ac_func();\n+\n+int main() {\n+\n+/* The GNU C library defines this for functions which it implements\n+    to always fail with ENOSYS.  Some functions are actually named\n+    something starting with __ and the normal name is an alias.  */\n+#if defined (__stub_$ac_func) || defined (__stub___$ac_func)\n+choke me\n+#else\n+$ac_func();\n+#endif\n+\n+; return 0; }\n+EOF\n+if { (eval echo configure:1900: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest; then\n+  rm -rf conftest*\n+  eval \"ac_cv_func_$ac_func=yes\"\n+else\n+  echo \"configure: failed program was:\" >&5\n+  cat conftest.$ac_ext >&5\n+  rm -rf conftest*\n+  eval \"ac_cv_func_$ac_func=no\"\n+fi\n+rm -f conftest*\n+fi\n+\n+if eval \"test \\\"`echo '$ac_cv_func_'$ac_func`\\\" = yes\"; then\n+  echo \"$ac_t\"\"yes\" 1>&6\n+    ac_tr_func=HAVE_`echo $ac_func | tr 'abcdefghijklmnopqrstuvwxyz' 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'`\n+  cat >> confdefs.h <<EOF\n+#define $ac_tr_func 1\n+EOF\n+ \n+else\n+  echo \"$ac_t\"\"no\" 1>&6\n+fi\n+done\n+\n+for ac_func in putenv\n+do\n+echo $ac_n \"checking for $ac_func\"\"... $ac_c\" 1>&6\n+echo \"configure:1927: checking for $ac_func\" >&5\n+if eval \"test \\\"`echo '$''{'ac_cv_func_$ac_func'+set}'`\\\" = set\"; then\n+  echo $ac_n \"(cached) $ac_c\" 1>&6\n+else\n+  cat > conftest.$ac_ext <<EOF\n+#line 1932 \"configure\"\n+#include \"confdefs.h\"\n+/* System header to define __stub macros and hopefully few prototypes,\n+    which can conflict with char $ac_func(); below.  */\n+#include <assert.h>\n+/* Override any gcc2 internal prototype to avoid an error.  */\n+/* We use char because int might match the return type of a gcc2\n+    builtin and then its argument prototype would still apply.  */\n+char $ac_func();\n+\n+int main() {\n+\n+/* The GNU C library defines this for functions which it implements\n+    to always fail with ENOSYS.  Some functions are actually named\n+    something starting with __ and the normal name is an alias.  */\n+#if defined (__stub_$ac_func) || defined (__stub___$ac_func)\n+choke me\n+#else\n+$ac_func();\n+#endif\n+\n+; return 0; }\n+EOF\n+if { (eval echo configure:1955: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest; then\n+  rm -rf conftest*\n+  eval \"ac_cv_func_$ac_func=yes\"\n+else\n+  echo \"configure: failed program was:\" >&5\n+  cat conftest.$ac_ext >&5\n+  rm -rf conftest*\n+  eval \"ac_cv_func_$ac_func=no\"\n+fi\n+rm -f conftest*\n+fi\n+\n+if eval \"test \\\"`echo '$ac_cv_func_'$ac_func`\\\" = yes\"; then\n+  echo \"$ac_t\"\"yes\" 1>&6\n+    ac_tr_func=HAVE_`echo $ac_func | tr 'abcdefghijklmnopqrstuvwxyz' 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'`\n+  cat >> confdefs.h <<EOF\n+#define $ac_tr_func 1\n+EOF\n+ \n+else\n+  echo \"$ac_t\"\"no\" 1>&6\n+fi\n+done\n+\n+for ac_func in popen\n+do\n+echo $ac_n \"checking for $ac_func\"\"... $ac_c\" 1>&6\n+echo \"configure:1982: checking for $ac_func\" >&5\n+if eval \"test \\\"`echo '$''{'ac_cv_func_$ac_func'+set}'`\\\" = set\"; then\n+  echo $ac_n \"(cached) $ac_c\" 1>&6\n+else\n+  cat > conftest.$ac_ext <<EOF\n+#line 1987 \"configure\"\n+#include \"confdefs.h\"\n+/* System header to define __stub macros and hopefully few prototypes,\n+    which can conflict with char $ac_func(); below.  */\n+#include <assert.h>\n+/* Override any gcc2 internal prototype to avoid an error.  */\n+/* We use char because int might match the return type of a gcc2\n+    builtin and then its argument prototype would still apply.  */\n+char $ac_func();\n+\n+int main() {\n+\n+/* The GNU C library defines this for functions which it implements\n+    to always fail with ENOSYS.  Some functions are actually named\n+    something starting with __ and the normal name is an alias.  */\n+#if defined (__stub_$ac_func) || defined (__stub___$ac_func)\n+choke me\n+#else\n+$ac_func();\n+#endif\n+\n+; return 0; }\n+EOF\n+if { (eval echo configure:2010: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest; then\n+  rm -rf conftest*\n+  eval \"ac_cv_func_$ac_func=yes\"\n+else\n+  echo \"configure: failed program was:\" >&5\n+  cat conftest.$ac_ext >&5\n+  rm -rf conftest*\n+  eval \"ac_cv_func_$ac_func=no\"\n+fi\n+rm -f conftest*\n+fi\n+\n+if eval \"test \\\"`echo '$ac_cv_func_'$ac_func`\\\" = yes\"; then\n+  echo \"$ac_t\"\"yes\" 1>&6\n+    ac_tr_func=HAVE_`echo $ac_func | tr 'abcdefghijklmnopqrstuvwxyz' 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'`\n+  cat >> confdefs.h <<EOF\n+#define $ac_tr_func 1\n+EOF\n+ \n+else\n+  echo \"$ac_t\"\"no\" 1>&6\n+fi\n+done\n+\n+for ac_func in vprintf\n+do\n+echo $ac_n \"checking for $ac_func\"\"... $ac_c\" 1>&6\n+echo \"configure:2037: checking for $ac_func\" >&5\n+if eval \"test \\\"`echo '$''{'ac_cv_func_$ac_func'+set}'`\\\" = set\"; then\n+  echo $ac_n \"(cached) $ac_c\" 1>&6\n+else\n+  cat > conftest.$ac_ext <<EOF\n+#line 2042 \"configure\"\n+#include \"confdefs.h\"\n+/* System header to define __stub macros and hopefully few prototypes,\n+    which can conflict with char $ac_func(); below.  */\n+#include <assert.h>\n+/* Override any gcc2 internal prototype to avoid an error.  */\n+/* We use char because int might match the return type of a gcc2\n+    builtin and then its argument prototype would still apply.  */\n+char $ac_func();\n+\n+int main() {\n+\n+/* The GNU C library defines this for functions which it implements\n+    to always fail with ENOSYS.  Some functions are actually named\n+    something starting with __ and the normal name is an alias.  */\n+#if defined (__stub_$ac_func) || defined (__stub___$ac_func)\n+choke me\n+#else\n+$ac_func();\n+#endif\n+\n+; return 0; }\n+EOF\n+if { (eval echo configure:2065: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest; then\n+  rm -rf conftest*\n+  eval \"ac_cv_func_$ac_func=yes\"\n+else\n+  echo \"configure: failed program was:\" >&5\n+  cat conftest.$ac_ext >&5\n+  rm -rf conftest*\n+  eval \"ac_cv_func_$ac_func=no\"\n+fi\n+rm -f conftest*\n+fi\n+\n+if eval \"test \\\"`echo '$ac_cv_func_'$ac_func`\\\" = yes\"; then\n+  echo \"$ac_t\"\"yes\" 1>&6\n+    ac_tr_func=HAVE_`echo $ac_func | tr 'abcdefghijklmnopqrstuvwxyz' 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'`\n+  cat >> confdefs.h <<EOF\n+#define $ac_tr_func 1\n+EOF\n+ \n+else\n+  echo \"$ac_t\"\"no\" 1>&6\n+fi\n+done\n+\n+for ac_func in bcopy\n+do\n+echo $ac_n \"checking for $ac_func\"\"... $ac_c\" 1>&6\n+echo \"configure:2092: checking for $ac_func\" >&5\n+if eval \"test \\\"`echo '$''{'ac_cv_func_$ac_func'+set}'`\\\" = set\"; then\n+  echo $ac_n \"(cached) $ac_c\" 1>&6\n+else\n+  cat > conftest.$ac_ext <<EOF\n+#line 2097 \"configure\"\n+#include \"confdefs.h\"\n+/* System header to define __stub macros and hopefully few prototypes,\n+    which can conflict with char $ac_func(); below.  */\n+#include <assert.h>\n+/* Override any gcc2 internal prototype to avoid an error.  */\n+/* We use char because int might match the return type of a gcc2\n+    builtin and then its argument prototype would still apply.  */\n+char $ac_func();\n+\n+int main() {\n+\n+/* The GNU C library defines this for functions which it implements\n+    to always fail with ENOSYS.  Some functions are actually named\n+    something starting with __ and the normal name is an alias.  */\n+#if defined (__stub_$ac_func) || defined (__stub___$ac_func)\n+choke me\n+#else\n+$ac_func();\n+#endif\n+\n+; return 0; }\n+EOF\n+if { (eval echo configure:2120: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest; then\n+  rm -rf conftest*\n+  eval \"ac_cv_func_$ac_func=yes\"\n+else\n+  echo \"configure: failed program was:\" >&5\n+  cat conftest.$ac_ext >&5\n+  rm -rf conftest*\n+  eval \"ac_cv_func_$ac_func=no\"\n+fi\n+rm -f conftest*\n+fi\n+\n+if eval \"test \\\"`echo '$ac_cv_func_'$ac_func`\\\" = yes\"; then\n+  echo \"$ac_t\"\"yes\" 1>&6\n+    ac_tr_func=HAVE_`echo $ac_func | tr 'abcdefghijklmnopqrstuvwxyz' 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'`\n+  cat >> confdefs.h <<EOF\n+#define $ac_tr_func 1\n+EOF\n+ \n+else\n+  echo \"$ac_t\"\"no\" 1>&6\n+fi\n+done\n+\n+for ac_func in bzero\n+do\n+echo $ac_n \"checking for $ac_func\"\"... $ac_c\" 1>&6\n+echo \"configure:2147: checking for $ac_func\" >&5\n+if eval \"test \\\"`echo '$''{'ac_cv_func_$ac_func'+set}'`\\\" = set\"; then\n+  echo $ac_n \"(cached) $ac_c\" 1>&6\n+else\n+  cat > conftest.$ac_ext <<EOF\n+#line 2152 \"configure\"\n+#include \"confdefs.h\"\n+/* System header to define __stub macros and hopefully few prototypes,\n+    which can conflict with char $ac_func(); below.  */\n+#include <assert.h>\n+/* Override any gcc2 internal prototype to avoid an error.  */\n+/* We use char because int might match the return type of a gcc2\n+    builtin and then its argument prototype would still apply.  */\n+char $ac_func();\n+\n+int main() {\n+\n+/* The GNU C library defines this for functions which it implements\n+    to always fail with ENOSYS.  Some functions are actually named\n+    something starting with __ and the normal name is an alias.  */\n+#if defined (__stub_$ac_func) || defined (__stub___$ac_func)\n+choke me\n+#else\n+$ac_func();\n+#endif\n+\n+; return 0; }\n+EOF\n+if { (eval echo configure:2175: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest; then\n+  rm -rf conftest*\n+  eval \"ac_cv_func_$ac_func=yes\"\n+else\n+  echo \"configure: failed program was:\" >&5\n+  cat conftest.$ac_ext >&5\n+  rm -rf conftest*\n+  eval \"ac_cv_func_$ac_func=no\"\n+fi\n+rm -f conftest*\n+fi\n+\n+if eval \"test \\\"`echo '$ac_cv_func_'$ac_func`\\\" = yes\"; then\n+  echo \"$ac_t\"\"yes\" 1>&6\n+    ac_tr_func=HAVE_`echo $ac_func | tr 'abcdefghijklmnopqrstuvwxyz' 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'`\n+  cat >> confdefs.h <<EOF\n+#define $ac_tr_func 1\n+EOF\n+ \n+else\n+  echo \"$ac_t\"\"no\" 1>&6\n+fi\n+done\n+\n+for ac_func in bcmp\n+do\n+echo $ac_n \"checking for $ac_func\"\"... $ac_c\" 1>&6\n+echo \"configure:2202: checking for $ac_func\" >&5\n+if eval \"test \\\"`echo '$''{'ac_cv_func_$ac_func'+set}'`\\\" = set\"; then\n+  echo $ac_n \"(cached) $ac_c\" 1>&6\n+else\n+  cat > conftest.$ac_ext <<EOF\n+#line 2207 \"configure\"\n+#include \"confdefs.h\"\n+/* System header to define __stub macros and hopefully few prototypes,\n+    which can conflict with char $ac_func(); below.  */\n+#include <assert.h>\n+/* Override any gcc2 internal prototype to avoid an error.  */\n+/* We use char because int might match the return type of a gcc2\n+    builtin and then its argument prototype would still apply.  */\n+char $ac_func();\n+\n+int main() {\n+\n+/* The GNU C library defines this for functions which it implements\n+    to always fail with ENOSYS.  Some functions are actually named\n+    something starting with __ and the normal name is an alias.  */\n+#if defined (__stub_$ac_func) || defined (__stub___$ac_func)\n+choke me\n+#else\n+$ac_func();\n+#endif\n+\n+; return 0; }\n+EOF\n+if { (eval echo configure:2230: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest; then\n+  rm -rf conftest*\n+  eval \"ac_cv_func_$ac_func=yes\"\n+else\n+  echo \"configure: failed program was:\" >&5\n+  cat conftest.$ac_ext >&5\n+  rm -rf conftest*\n+  eval \"ac_cv_func_$ac_func=no\"\n+fi\n+rm -f conftest*\n+fi\n+\n+if eval \"test \\\"`echo '$ac_cv_func_'$ac_func`\\\" = yes\"; then\n+  echo \"$ac_t\"\"yes\" 1>&6\n+    ac_tr_func=HAVE_`echo $ac_func | tr 'abcdefghijklmnopqrstuvwxyz' 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'`\n+  cat >> confdefs.h <<EOF\n+#define $ac_tr_func 1\n+EOF\n+ \n+else\n+  echo \"$ac_t\"\"no\" 1>&6\n+fi\n+done\n+\n+for ac_func in index\n+do\n+echo $ac_n \"checking for $ac_func\"\"... $ac_c\" 1>&6\n+echo \"configure:2257: checking for $ac_func\" >&5\n+if eval \"test \\\"`echo '$''{'ac_cv_func_$ac_func'+set}'`\\\" = set\"; then\n+  echo $ac_n \"(cached) $ac_c\" 1>&6\n+else\n+  cat > conftest.$ac_ext <<EOF\n+#line 2262 \"configure\"\n+#include \"confdefs.h\"\n+/* System header to define __stub macros and hopefully few prototypes,\n+    which can conflict with char $ac_func(); below.  */\n+#include <assert.h>\n+/* Override any gcc2 internal prototype to avoid an error.  */\n+/* We use char because int might match the return type of a gcc2\n+    builtin and then its argument prototype would still apply.  */\n+char $ac_func();\n+\n+int main() {\n+\n+/* The GNU C library defines this for functions which it implements\n+    to always fail with ENOSYS.  Some functions are actually named\n+    something starting with __ and the normal name is an alias.  */\n+#if defined (__stub_$ac_func) || defined (__stub___$ac_func)\n+choke me\n+#else\n+$ac_func();\n+#endif\n+\n+; return 0; }\n+EOF\n+if { (eval echo configure:2285: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest; then\n+  rm -rf conftest*\n+  eval \"ac_cv_func_$ac_func=yes\"\n+else\n+  echo \"configure: failed program was:\" >&5\n+  cat conftest.$ac_ext >&5\n+  rm -rf conftest*\n+  eval \"ac_cv_func_$ac_func=no\"\n+fi\n+rm -f conftest*\n+fi\n+\n+if eval \"test \\\"`echo '$ac_cv_func_'$ac_func`\\\" = yes\"; then\n+  echo \"$ac_t\"\"yes\" 1>&6\n+    ac_tr_func=HAVE_`echo $ac_func | tr 'abcdefghijklmnopqrstuvwxyz' 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'`\n+  cat >> confdefs.h <<EOF\n+#define $ac_tr_func 1\n+EOF\n+ \n+else\n+  echo \"$ac_t\"\"no\" 1>&6\n+fi\n+done\n+\n+for ac_func in rindex\n+do\n+echo $ac_n \"checking for $ac_func\"\"... $ac_c\" 1>&6\n+echo \"configure:2312: checking for $ac_func\" >&5\n+if eval \"test \\\"`echo '$''{'ac_cv_func_$ac_func'+set}'`\\\" = set\"; then\n+  echo $ac_n \"(cached) $ac_c\" 1>&6\n+else\n+  cat > conftest.$ac_ext <<EOF\n+#line 2317 \"configure\"\n+#include \"confdefs.h\"\n+/* System header to define __stub macros and hopefully few prototypes,\n+    which can conflict with char $ac_func(); below.  */\n+#include <assert.h>\n+/* Override any gcc2 internal prototype to avoid an error.  */\n+/* We use char because int might match the return type of a gcc2\n+    builtin and then its argument prototype would still apply.  */\n+char $ac_func();\n+\n+int main() {\n+\n+/* The GNU C library defines this for functions which it implements\n+    to always fail with ENOSYS.  Some functions are actually named\n+    something starting with __ and the normal name is an alias.  */\n+#if defined (__stub_$ac_func) || defined (__stub___$ac_func)\n+choke me\n+#else\n+$ac_func();\n+#endif\n+\n+; return 0; }\n+EOF\n+if { (eval echo configure:2340: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest; then\n   rm -rf conftest*\n-  eval \"ac_cv_header_$ac_safe=yes\"\n+  eval \"ac_cv_func_$ac_func=yes\"\n else\n-  echo \"$ac_err\" >&5\n   echo \"configure: failed program was:\" >&5\n   cat conftest.$ac_ext >&5\n   rm -rf conftest*\n-  eval \"ac_cv_header_$ac_safe=no\"\n+  eval \"ac_cv_func_$ac_func=no\"\n fi\n rm -f conftest*\n fi\n-if eval \"test \\\"`echo '$ac_cv_header_'$ac_safe`\\\" = yes\"; then\n+\n+if eval \"test \\\"`echo '$ac_cv_func_'$ac_func`\\\" = yes\"; then\n   echo \"$ac_t\"\"yes\" 1>&6\n-    ac_tr_hdr=HAVE_`echo $ac_hdr | sed 'y%abcdefghijklmnopqrstuvwxyz./-%ABCDEFGHIJKLMNOPQRSTUVWXYZ___%'`\n+    ac_tr_func=HAVE_`echo $ac_func | tr 'abcdefghijklmnopqrstuvwxyz' 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'`\n   cat >> confdefs.h <<EOF\n-#define $ac_tr_hdr 1\n+#define $ac_tr_func 1\n EOF\n  \n else\n   echo \"$ac_t\"\"no\" 1>&6\n fi\n done\n \n-\n-# Use <inttypes.h> only if it exists,\n-# doesn't clash with <sys/types.h>, and declares intmax_t.\n-echo $ac_n \"checking for inttypes.h\"\"... $ac_c\" 1>&6\n-echo \"configure:1588: checking for inttypes.h\" >&5\n-if eval \"test \\\"`echo '$''{'gcc_cv_header_inttypes_h'+set}'`\\\" = set\"; then\n+for ac_func in kill\n+do\n+echo $ac_n \"checking for $ac_func\"\"... $ac_c\" 1>&6\n+echo \"configure:2367: checking for $ac_func\" >&5\n+if eval \"test \\\"`echo '$''{'ac_cv_func_$ac_func'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n   cat > conftest.$ac_ext <<EOF\n-#line 1593 \"configure\"\n+#line 2372 \"configure\"\n #include \"confdefs.h\"\n-#include <sys/types.h>\n-#include <inttypes.h>\n+/* System header to define __stub macros and hopefully few prototypes,\n+    which can conflict with char $ac_func(); below.  */\n+#include <assert.h>\n+/* Override any gcc2 internal prototype to avoid an error.  */\n+/* We use char because int might match the return type of a gcc2\n+    builtin and then its argument prototype would still apply.  */\n+char $ac_func();\n+\n int main() {\n-intmax_t i = -1;\n+\n+/* The GNU C library defines this for functions which it implements\n+    to always fail with ENOSYS.  Some functions are actually named\n+    something starting with __ and the normal name is an alias.  */\n+#if defined (__stub_$ac_func) || defined (__stub___$ac_func)\n+choke me\n+#else\n+$ac_func();\n+#endif\n+\n ; return 0; }\n EOF\n-if { (eval echo configure:1601: \\\"$ac_compile\\\") 1>&5; (eval $ac_compile) 2>&5; }; then\n+if { (eval echo configure:2395: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest; then\n   rm -rf conftest*\n-  cat >> confdefs.h <<EOF\n-#define HAVE_INTTYPES_H 1\n-EOF\n-\n-   gcc_cv_header_inttypes_h=yes\n+  eval \"ac_cv_func_$ac_func=yes\"\n else\n   echo \"configure: failed program was:\" >&5\n   cat conftest.$ac_ext >&5\n   rm -rf conftest*\n-  gcc_cv_header_inttypes_h=no\n+  eval \"ac_cv_func_$ac_func=no\"\n fi\n rm -f conftest*\n fi\n \n-echo \"$ac_t\"\"$gcc_cv_header_inttypes_h\" 1>&6\n+if eval \"test \\\"`echo '$ac_cv_func_'$ac_func`\\\" = yes\"; then\n+  echo \"$ac_t\"\"yes\" 1>&6\n+    ac_tr_func=HAVE_`echo $ac_func | tr 'abcdefghijklmnopqrstuvwxyz' 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'`\n+  cat >> confdefs.h <<EOF\n+#define $ac_tr_func 1\n+EOF\n+ \n+else\n+  echo \"$ac_t\"\"no\" 1>&6\n+fi\n+done\n+\n \n echo $ac_n \"checking whether malloc must be declared\"\"... $ac_c\" 1>&6\n-echo \"configure:1620: checking whether malloc must be declared\" >&5\n+echo \"configure:2421: checking whether malloc must be declared\" >&5\n if eval \"test \\\"`echo '$''{'gcc_cv_decl_needed_malloc'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n   cat > conftest.$ac_ext <<EOF\n-#line 1625 \"configure\"\n+#line 2426 \"configure\"\n #include \"confdefs.h\"\n \n #include <stdio.h>\n@@ -1638,11 +2439,17 @@ else\n #ifdef HAVE_UNISTD_H\n #include <unistd.h>\n #endif\n+#ifndef HAVE_RINDEX\n+#define rindex strrchr\n+#endif\n+#ifndef HAVE_INDEX\n+#define index strchr\n+#endif\n int main() {\n char *(*pfn) = (char *(*)) malloc\n ; return 0; }\n EOF\n-if { (eval echo configure:1646: \\\"$ac_compile\\\") 1>&5; (eval $ac_compile) 2>&5; }; then\n+if { (eval echo configure:2453: \\\"$ac_compile\\\") 1>&5; (eval $ac_compile) 2>&5; }; then\n   rm -rf conftest*\n   gcc_cv_decl_needed_malloc=no\n else\n@@ -1664,12 +2471,12 @@ EOF\n fi\n \n echo $ac_n \"checking whether realloc must be declared\"\"... $ac_c\" 1>&6\n-echo \"configure:1668: checking whether realloc must be declared\" >&5\n+echo \"configure:2475: checking whether realloc must be declared\" >&5\n if eval \"test \\\"`echo '$''{'gcc_cv_decl_needed_realloc'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n   cat > conftest.$ac_ext <<EOF\n-#line 1673 \"configure\"\n+#line 2480 \"configure\"\n #include \"confdefs.h\"\n \n #include <stdio.h>\n@@ -1686,11 +2493,17 @@ else\n #ifdef HAVE_UNISTD_H\n #include <unistd.h>\n #endif\n+#ifndef HAVE_RINDEX\n+#define rindex strrchr\n+#endif\n+#ifndef HAVE_INDEX\n+#define index strchr\n+#endif\n int main() {\n char *(*pfn) = (char *(*)) realloc\n ; return 0; }\n EOF\n-if { (eval echo configure:1694: \\\"$ac_compile\\\") 1>&5; (eval $ac_compile) 2>&5; }; then\n+if { (eval echo configure:2507: \\\"$ac_compile\\\") 1>&5; (eval $ac_compile) 2>&5; }; then\n   rm -rf conftest*\n   gcc_cv_decl_needed_realloc=no\n else\n@@ -1712,12 +2525,12 @@ EOF\n fi\n \n echo $ac_n \"checking whether calloc must be declared\"\"... $ac_c\" 1>&6\n-echo \"configure:1716: checking whether calloc must be declared\" >&5\n+echo \"configure:2529: checking whether calloc must be declared\" >&5\n if eval \"test \\\"`echo '$''{'gcc_cv_decl_needed_calloc'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n   cat > conftest.$ac_ext <<EOF\n-#line 1721 \"configure\"\n+#line 2534 \"configure\"\n #include \"confdefs.h\"\n \n #include <stdio.h>\n@@ -1734,11 +2547,17 @@ else\n #ifdef HAVE_UNISTD_H\n #include <unistd.h>\n #endif\n+#ifndef HAVE_RINDEX\n+#define rindex strrchr\n+#endif\n+#ifndef HAVE_INDEX\n+#define index strchr\n+#endif\n int main() {\n char *(*pfn) = (char *(*)) calloc\n ; return 0; }\n EOF\n-if { (eval echo configure:1742: \\\"$ac_compile\\\") 1>&5; (eval $ac_compile) 2>&5; }; then\n+if { (eval echo configure:2561: \\\"$ac_compile\\\") 1>&5; (eval $ac_compile) 2>&5; }; then\n   rm -rf conftest*\n   gcc_cv_decl_needed_calloc=no\n else\n@@ -1760,12 +2579,12 @@ EOF\n fi\n \n echo $ac_n \"checking whether free must be declared\"\"... $ac_c\" 1>&6\n-echo \"configure:1764: checking whether free must be declared\" >&5\n+echo \"configure:2583: checking whether free must be declared\" >&5\n if eval \"test \\\"`echo '$''{'gcc_cv_decl_needed_free'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n   cat > conftest.$ac_ext <<EOF\n-#line 1769 \"configure\"\n+#line 2588 \"configure\"\n #include \"confdefs.h\"\n \n #include <stdio.h>\n@@ -1782,11 +2601,17 @@ else\n #ifdef HAVE_UNISTD_H\n #include <unistd.h>\n #endif\n+#ifndef HAVE_RINDEX\n+#define rindex strrchr\n+#endif\n+#ifndef HAVE_INDEX\n+#define index strchr\n+#endif\n int main() {\n char *(*pfn) = (char *(*)) free\n ; return 0; }\n EOF\n-if { (eval echo configure:1790: \\\"$ac_compile\\\") 1>&5; (eval $ac_compile) 2>&5; }; then\n+if { (eval echo configure:2615: \\\"$ac_compile\\\") 1>&5; (eval $ac_compile) 2>&5; }; then\n   rm -rf conftest*\n   gcc_cv_decl_needed_free=no\n else\n@@ -1807,100 +2632,206 @@ EOF\n \n fi\n \n-\n-echo $ac_n \"checking for sys_siglist declaration in signal.h or unistd.h\"\"... $ac_c\" 1>&6\n-echo \"configure:1813: checking for sys_siglist declaration in signal.h or unistd.h\" >&5\n-if eval \"test \\\"`echo '$''{'ac_cv_decl_sys_siglist'+set}'`\\\" = set\"; then\n+echo $ac_n \"checking whether index must be declared\"\"... $ac_c\" 1>&6\n+echo \"configure:2637: checking whether index must be declared\" >&5\n+if eval \"test \\\"`echo '$''{'gcc_cv_decl_needed_index'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n   cat > conftest.$ac_ext <<EOF\n-#line 1818 \"configure\"\n+#line 2642 \"configure\"\n #include \"confdefs.h\"\n-#include <sys/types.h>\n-#include <signal.h>\n-/* NetBSD declares sys_siglist in unistd.h.  */\n+\n+#include <stdio.h>\n+#ifdef HAVE_STRING_H\n+#include <string.h>\n+#else\n+#ifdef HAVE_STRINGS_H\n+#include <strings.h>\n+#endif\n+#endif\n+#ifdef HAVE_STDLIB_H\n+#include <stdlib.h>\n+#endif\n #ifdef HAVE_UNISTD_H\n #include <unistd.h>\n #endif\n+#ifndef HAVE_RINDEX\n+#define rindex strrchr\n+#endif\n+#ifndef HAVE_INDEX\n+#define index strchr\n+#endif\n int main() {\n-char *msg = *(sys_siglist + 1);\n+char *(*pfn) = (char *(*)) index\n ; return 0; }\n EOF\n-if { (eval echo configure:1830: \\\"$ac_compile\\\") 1>&5; (eval $ac_compile) 2>&5; }; then\n+if { (eval echo configure:2669: \\\"$ac_compile\\\") 1>&5; (eval $ac_compile) 2>&5; }; then\n   rm -rf conftest*\n-  ac_cv_decl_sys_siglist=yes\n+  gcc_cv_decl_needed_index=no\n else\n   echo \"configure: failed program was:\" >&5\n   cat conftest.$ac_ext >&5\n   rm -rf conftest*\n-  ac_cv_decl_sys_siglist=no\n+  gcc_cv_decl_needed_index=yes\n fi\n rm -f conftest*\n fi\n \n-echo \"$ac_t\"\"$ac_cv_decl_sys_siglist\" 1>&6\n-if test $ac_cv_decl_sys_siglist = yes; then\n-  cat >> confdefs.h <<\\EOF\n-#define SYS_SIGLIST_DECLARED 1\n+echo \"$ac_t\"\"$gcc_cv_decl_needed_index\" 1>&6\n+if test $gcc_cv_decl_needed_index = yes; then\n+  gcc_tr_decl=NEED_DECLARATION_`echo index | tr 'abcdefghijklmnopqrstuvwxyz' 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'`\n+  cat >> confdefs.h <<EOF\n+#define $gcc_tr_decl 1\n EOF\n \n fi\n \n-\n-for ac_func in strerror strtoul bsearch\n-do\n-echo $ac_n \"checking for $ac_func\"\"... $ac_c\" 1>&6\n-echo \"configure:1854: checking for $ac_func\" >&5\n-if eval \"test \\\"`echo '$''{'ac_cv_func_$ac_func'+set}'`\\\" = set\"; then\n+echo $ac_n \"checking whether rindex must be declared\"\"... $ac_c\" 1>&6\n+echo \"configure:2691: checking whether rindex must be declared\" >&5\n+if eval \"test \\\"`echo '$''{'gcc_cv_decl_needed_rindex'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n   cat > conftest.$ac_ext <<EOF\n-#line 1859 \"configure\"\n+#line 2696 \"configure\"\n #include \"confdefs.h\"\n-/* System header to define __stub macros and hopefully few prototypes,\n-    which can conflict with char $ac_func(); below.  */\n-#include <assert.h>\n-/* Override any gcc2 internal prototype to avoid an error.  */\n-/* We use char because int might match the return type of a gcc2\n-    builtin and then its argument prototype would still apply.  */\n-char $ac_func();\n \n+#include <stdio.h>\n+#ifdef HAVE_STRING_H\n+#include <string.h>\n+#else\n+#ifdef HAVE_STRINGS_H\n+#include <strings.h>\n+#endif\n+#endif\n+#ifdef HAVE_STDLIB_H\n+#include <stdlib.h>\n+#endif\n+#ifdef HAVE_UNISTD_H\n+#include <unistd.h>\n+#endif\n+#ifndef HAVE_RINDEX\n+#define rindex strrchr\n+#endif\n+#ifndef HAVE_INDEX\n+#define index strchr\n+#endif\n int main() {\n+char *(*pfn) = (char *(*)) rindex\n+; return 0; }\n+EOF\n+if { (eval echo configure:2723: \\\"$ac_compile\\\") 1>&5; (eval $ac_compile) 2>&5; }; then\n+  rm -rf conftest*\n+  gcc_cv_decl_needed_rindex=no\n+else\n+  echo \"configure: failed program was:\" >&5\n+  cat conftest.$ac_ext >&5\n+  rm -rf conftest*\n+  gcc_cv_decl_needed_rindex=yes\n+fi\n+rm -f conftest*\n+fi\n \n-/* The GNU C library defines this for functions which it implements\n-    to always fail with ENOSYS.  Some functions are actually named\n-    something starting with __ and the normal name is an alias.  */\n-#if defined (__stub_$ac_func) || defined (__stub___$ac_func)\n-choke me\n+echo \"$ac_t\"\"$gcc_cv_decl_needed_rindex\" 1>&6\n+if test $gcc_cv_decl_needed_rindex = yes; then\n+  gcc_tr_decl=NEED_DECLARATION_`echo rindex | tr 'abcdefghijklmnopqrstuvwxyz' 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'`\n+  cat >> confdefs.h <<EOF\n+#define $gcc_tr_decl 1\n+EOF\n+\n+fi\n+\n+echo $ac_n \"checking whether getenv must be declared\"\"... $ac_c\" 1>&6\n+echo \"configure:2745: checking whether getenv must be declared\" >&5\n+if eval \"test \\\"`echo '$''{'gcc_cv_decl_needed_getenv'+set}'`\\\" = set\"; then\n+  echo $ac_n \"(cached) $ac_c\" 1>&6\n+else\n+  cat > conftest.$ac_ext <<EOF\n+#line 2750 \"configure\"\n+#include \"confdefs.h\"\n+\n+#include <stdio.h>\n+#ifdef HAVE_STRING_H\n+#include <string.h>\n #else\n-$ac_func();\n+#ifdef HAVE_STRINGS_H\n+#include <strings.h>\n #endif\n-\n+#endif\n+#ifdef HAVE_STDLIB_H\n+#include <stdlib.h>\n+#endif\n+#ifdef HAVE_UNISTD_H\n+#include <unistd.h>\n+#endif\n+#ifndef HAVE_RINDEX\n+#define rindex strrchr\n+#endif\n+#ifndef HAVE_INDEX\n+#define index strchr\n+#endif\n+int main() {\n+char *(*pfn) = (char *(*)) getenv\n ; return 0; }\n EOF\n-if { (eval echo configure:1882: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest; then\n+if { (eval echo configure:2777: \\\"$ac_compile\\\") 1>&5; (eval $ac_compile) 2>&5; }; then\n   rm -rf conftest*\n-  eval \"ac_cv_func_$ac_func=yes\"\n+  gcc_cv_decl_needed_getenv=no\n else\n   echo \"configure: failed program was:\" >&5\n   cat conftest.$ac_ext >&5\n   rm -rf conftest*\n-  eval \"ac_cv_func_$ac_func=no\"\n+  gcc_cv_decl_needed_getenv=yes\n fi\n rm -f conftest*\n fi\n \n-if eval \"test \\\"`echo '$ac_cv_func_'$ac_func`\\\" = yes\"; then\n-  echo \"$ac_t\"\"yes\" 1>&6\n-    ac_tr_func=HAVE_`echo $ac_func | tr 'abcdefghijklmnopqrstuvwxyz' 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'`\n+echo \"$ac_t\"\"$gcc_cv_decl_needed_getenv\" 1>&6\n+if test $gcc_cv_decl_needed_getenv = yes; then\n+  gcc_tr_decl=NEED_DECLARATION_`echo getenv | tr 'abcdefghijklmnopqrstuvwxyz' 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'`\n   cat >> confdefs.h <<EOF\n-#define $ac_tr_func 1\n+#define $gcc_tr_decl 1\n EOF\n- \n+\n+fi\n+\n+\n+echo $ac_n \"checking for sys_siglist declaration in signal.h or unistd.h\"\"... $ac_c\" 1>&6\n+echo \"configure:2800: checking for sys_siglist declaration in signal.h or unistd.h\" >&5\n+if eval \"test \\\"`echo '$''{'ac_cv_decl_sys_siglist'+set}'`\\\" = set\"; then\n+  echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n-  echo \"$ac_t\"\"no\" 1>&6\n+  cat > conftest.$ac_ext <<EOF\n+#line 2805 \"configure\"\n+#include \"confdefs.h\"\n+#include <sys/types.h>\n+#include <signal.h>\n+/* NetBSD declares sys_siglist in unistd.h.  */\n+#ifdef HAVE_UNISTD_H\n+#include <unistd.h>\n+#endif\n+int main() {\n+char *msg = *(sys_siglist + 1);\n+; return 0; }\n+EOF\n+if { (eval echo configure:2817: \\\"$ac_compile\\\") 1>&5; (eval $ac_compile) 2>&5; }; then\n+  rm -rf conftest*\n+  ac_cv_decl_sys_siglist=yes\n+else\n+  echo \"configure: failed program was:\" >&5\n+  cat conftest.$ac_ext >&5\n+  rm -rf conftest*\n+  ac_cv_decl_sys_siglist=no\n+fi\n+rm -f conftest*\n+fi\n+\n+echo \"$ac_t\"\"$ac_cv_decl_sys_siglist\" 1>&6\n+if test $ac_cv_decl_sys_siglist = yes; then\n+  cat >> confdefs.h <<\\EOF\n+#define SYS_SIGLIST_DECLARED 1\n+EOF\n+\n fi\n-done\n \n \n # File extensions\n@@ -2150,9 +3081,8 @@ for machine in $build $host $target; do\n \t\ttmake_file=\"t-netbsd arm/t-netbsd\"\n \t\t# On NetBSD, the headers are already okay, except for math.h.\n \t\tfixincludes=fixinc.math\n-\t\tuse_collect2=yes\n \t\t;;\n-\tarm-*-linux-gnuaout*)\t\t# ARM Linux\n+\tarm-*-linux-gnuaout*)\t\t# ARM GNU/Linux\n \t\tcpu_type=arm\n \t\txm_file=arm/xm-linux.h\n \t\txmake_file=x-linux\n@@ -2524,7 +3454,6 @@ for machine in $build $host $target; do\n \t\t;;\n \ti[3456]86-*-freebsdelf*)\n \t\ttm_file=\"i386/i386.h i386/att.h linux.h i386/freebsd-elf.h i386/perform.h\"\n-\t\txm_file=i386/xm-freebsd.h\n \t\t# On FreeBSD, the headers are already ok, except for math.h.\n \t\tfixincludes=fixinc.math\n \t\ttmake_file=i386/t-freebsd\n@@ -2534,14 +3463,12 @@ for machine in $build $host $target; do\n \t\t;;\n \ti[3456]86-*-freebsd*)\n \t\ttm_file=i386/freebsd.h\n-\t\txm_file=i386/xm-freebsd.h\n \t\t# On FreeBSD, the headers are already ok, except for math.h.\n \t\tfixincludes=fixinc.math\n \t\ttmake_file=i386/t-freebsd\n \t\t;;\n \ti[3456]86-*-netbsd*)\n \t\ttm_file=i386/netbsd.h\n-\t\txm_file=i386/xm-netbsd.h\n \t\t# On NetBSD, the headers are already okay, except for math.h.\n \t\tfixincludes=fixinc.math\n \t\ttmake_file=t-netbsd\n@@ -2572,15 +3499,15 @@ for machine in $build $host $target; do\n \t\tfi\n \t\tinstall_headers_dir=install-headers-cpio\n \t\t;;\n-\ti[3456]86-*-linux-gnuoldld*)\t# Intel 80386's running Linux\n+\ti[3456]86-*-linux-gnuoldld*)\t# Intel 80386's running GNU/Linux\n \t\txm_file=i386/xm-linux.h # with a.out format using pre BFD linkers\n \t\txmake_file=x-linux-aout\n \t\ttmake_file=\"t-linux-aout i386/t-crtstuff\"\n \t\ttm_file=i386/linux-oldld.h\n \t\tfixincludes=Makefile.in #On Linux, the headers are ok already.\n \t\tgnu_ld=yes\n \t\t;;\n-\ti[3456]86-*-linux-gnuaout*)\t\t# Intel 80386's running Linux\n+\ti[3456]86-*-linux-gnuaout*)\t# Intel 80386's running GNU/Linux\n \t\txm_file=i386/xm-linux.h\t\t# with a.out format\n \t\txmake_file=x-linux-aout\n \t\ttmake_file=\"t-linux-aout i386/t-crtstuff\"\n@@ -2589,9 +3516,9 @@ for machine in $build $host $target; do\n \t\tgnu_ld=yes\n \t\t;;\n \ti[3456]86-*-linux-gnulibc1)\n-\t\txm_file=i386/xm-linux.h\t# Intel 80386's running Linux\n+\t\txm_file=i386/xm-linux.h\t# Intel 80386's running GNU/Linux\n \t\txmake_file=x-linux\t# with ELF format using the\n-\t\ttm_file=i386/linux.h\t# Linux C library 5\n+\t\ttm_file=i386/linux.h\t# GNU/Linux C library 5\n \t\ttmake_file=\"t-linux t-linux-gnulibc1 i386/t-crtstuff\"\n \t\textra_parts=\"crtbegin.o crtbeginS.o crtend.o crtendS.o\"\n \t\tfixincludes=Makefile.in #On Linux, the headers are ok already.\n@@ -2600,9 +3527,9 @@ for machine in $build $host $target; do\n  \t\t\tthread_file='single'\n  \t\tfi\n \t\t;;\n-\ti[3456]86-*-linux-gnu*)\t\t# Intel 80386's running Linux\n+\ti[3456]86-*-linux-gnu*)\t# Intel 80386's running GNU/Linux\n \t\txm_file=i386/xm-linux.h # with ELF format using glibc 2\n-\t\txmake_file=x-linux\t# aka Linux C library 6\n+\t\txmake_file=x-linux\t# aka GNU/Linux C library 6\n \t\ttm_file=i386/linux.h\n \t\ttmake_file=\"t-linux i386/t-crtstuff\"\n \t\textra_parts=\"crtbegin.o crtbeginS.o crtend.o crtendS.o\"\n@@ -2816,7 +3743,7 @@ for machine in $build $host $target; do\n               ;;\n \ti860-alliant-*)\t\t# Alliant FX/2800\n \t\ttm_file=\"${tm_file} svr4.h i860/sysv4.h i860/fx2800.h\"\n-\t\txm_file=\"${xm_file} i860/xm-fx2800.h\"\n+\t\txm_file=\"${xm_file}\"\n \t\txmake_file=i860/x-fx2800\n \t\ttmake_file=i860/t-fx2800\n \t\textra_parts=\"crtbegin.o crtend.o\"\n@@ -3020,7 +3947,7 @@ for machine in $build $host $target; do\n \t\t;;\n \tm68k-ncr-sysv*)\t\t\t# NCR Tower 32 SVR3\n \t\ttm_file=m68k/tower-as.h\n-\t\txm_file=m68k/xm-tower.h\n+\t\txm_file=\"${xm_file} xm-svr3.h\"\n \t\txmake_file=m68k/x-tower\n \t\textra_parts=\"crtbegin.o crtend.o\"\n \t\textra_headers=math-68881.h\n@@ -3168,7 +4095,6 @@ for machine in $build $host $target; do\n \t\telse\n \t\t\ttm_file=m68k/sun3.h\n \t\tfi\n-\t\txm_file=m68k/xm-sun3.h\n \t\tuse_collect2=yes\n \t\textra_headers=math-68881.h\n \t\t;;\n@@ -3201,7 +4127,6 @@ for machine in $build $host $target; do\n \t\t;;\n \tm68k-*-netbsd*)\n \t\ttm_file=m68k/netbsd.h\n-\t\txm_file=m68k/xm-netbsd.h\n \t\t# On NetBSD, the headers are already okay, except for math.h.\n \t\tfixincludes=fixinc.math\n \t\ttmake_file=t-netbsd\n@@ -3219,32 +4144,32 @@ for machine in $build $host $target; do\n \t\textra_parts=\"crtbegin.o crtend.o\"\n \t\textra_headers=math-68881.h\n \t\t;;\n-\tm68k-*-linux-gnuaout*)\t\t# Motorola m68k's running Linux\n+\tm68k-*-linux-gnuaout*)\t\t# Motorola m68k's running GNU/Linux\n \t\txm_file=m68k/xm-linux.h\t# with a.out format\n \t\txmake_file=x-linux\n \t\ttm_file=m68k/linux-aout.h\n \t\ttmake_file=\"t-linux-aout m68k/t-linux-aout\"\n-\t\tfixincludes=Makefile.in #On Linux, the headers are ok already.\n+\t\tfixincludes=Makefile.in # The headers are ok already.\n \t\textra_headers=math-68881.h\n \t\tgnu_ld=yes\n \t\t;;\n-\tm68k-*-linux-gnulibc1)\t\t# Motorola m68k's running Linux\n+\tm68k-*-linux-gnulibc1)\t\t# Motorola m68k's running GNU/Linux\n \t\txm_file=m68k/xm-linux.h\t# with ELF format using the\n-\t\txmake_file=x-linux\t# Linux C library 5\n+\t\txmake_file=x-linux\t# GNU/Linux C library 5\n \t\ttm_file=m68k/linux.h\n \t\ttmake_file=\"t-linux t-linux-gnulibc1 m68k/t-linux\"\n \t\textra_parts=\"crtbegin.o crtbeginS.o crtend.o crtendS.o\"\n-\t\tfixincludes=Makefile.in #On Linux, the headers are ok already.\n+\t\tfixincludes=Makefile.in # The headers are ok already.\n \t\textra_headers=math-68881.h\n \t\tgnu_ld=yes\n \t\t;;\n-\tm68k-*-linux-gnu*)\t\t\t# Motorola m68k's running Linux\n+\tm68k-*-linux-gnu*)\t\t# Motorola m68k's running GNU/Linux\n \t\txm_file=m68k/xm-linux.h\t# with ELF format using glibc 2\n-\t\txmake_file=x-linux\t# aka the Linux C library 6.\n+\t\txmake_file=x-linux\t# aka the GNU/Linux C library 6.\n \t\ttm_file=m68k/linux.h\n \t\ttmake_file=\"t-linux m68k/t-linux\"\n \t\textra_parts=\"crtbegin.o crtbeginS.o crtend.o crtendS.o\"\n-\t\tfixincludes=Makefile.in #On Linux, the headers are ok already.\n+\t\tfixincludes=Makefile.in # The headers are ok already.\n \t\textra_headers=math-68881.h\n \t\tgnu_ld=yes\n \t\tif [ x$enable_threads = xyes ]; then\n@@ -3500,7 +4425,6 @@ for machine in $build $host $target; do\n \t      ;;\n \tmips-dec-netbsd*)                  # Decstation running NetBSD\n \t\ttm_file=mips/netbsd.h\n-\t\txm_file=mips/xm-netbsd.h\n \t\t# On NetBSD, the headers are already okay, except for math.h.\n \t\tfixincludes=fixinc.math\n \t\ttmake_file=t-netbsd\n@@ -3828,7 +4752,6 @@ for machine in $build $host $target; do\n \t\t;;\n \tns32k-pc532-netbsd*)\n \t\ttm_file=ns32k/netbsd.h\n-\t\txm_file=ns32k/xm-netbsd.h\n \t\t# On NetBSD, the headers are already okay, except for math.h.\n \t\tfixincludes=fixinc.math\n \t\ttmake_file=t-netbsd\n@@ -4058,7 +4981,6 @@ for machine in $build $host $target; do\n \t\t;;\n \tsparc-*-netbsd*)\n \t\ttm_file=sparc/netbsd.h\n-\t\txm_file=sparc/xm-netbsd.h\n \t\t# On NetBSD, the headers are already okay, except for math.h.\n \t\tfixincludes=fixinc.math\n \t\ttmake_file=t-netbsd\n@@ -4073,14 +4995,14 @@ for machine in $build $host $target; do\n \t\t#float_format=i128\n \t\tfloat_format=i64\n \t\t;;\n-\tsparc-*-linux-gnuaout*)\t\t# Sparc's running Linux, a.out\n+\tsparc-*-linux-gnuaout*)\t\t# Sparc's running GNU/Linux, a.out\n \t\txm_file=\"sparc/xm-sparc.h sparc/xm-linux.h\"\n \t\ttm_file=sparc/linux-aout.h\n \t\txmake_file=x-linux\n \t\tfixincludes=Makefile.in #On Linux, the headers are ok already.\n \t\tgnu_ld=yes\n \t\t;;\n-\tsparc-*-linux-gnulibc1*)\t# Sparc's running Linux, libc5\n+\tsparc-*-linux-gnulibc1*)\t# Sparc's running GNU/Linux, libc5\n \t\txm_file=\"sparc/xm-sparc.h sparc/xm-linux.h\"\n \t\txmake_file=x-linux\n \t\ttm_file=sparc/linux.h\n@@ -4089,7 +5011,7 @@ for machine in $build $host $target; do\n \t\tfixincludes=Makefile.in #On Linux, the headers are ok already.\n \t\tgnu_ld=yes\n \t\t;;\n-\tsparc-*-linux-gnu*)\t\t# Sparc's running Linux, libc6\n+\tsparc-*-linux-gnu*)\t\t# Sparc's running GNU/Linux, libc6\n \t\txm_file=\"sparc/xm-sparc.h sparc/xm-linux.h\"\n \t\txmake_file=x-linux\n \t\ttm_file=sparc/linux.h\n@@ -4180,12 +5102,12 @@ for machine in $build $host $target; do\n \t\ttm_file=sparc/sp64-elf.h\n \t\textra_parts=\"crtbegin.o crtend.o\"\n \t\t;;\n-\tsparc64-*-linux*)\t\t# 64-bit Sparc's running Linux\n+\tsparc64-*-linux*)\t\t# 64-bit Sparc's running GNU/Linux\n \t\ttmake_file=sparc/t-sp64\n \t\txm_file=\"sparc/xm-sp64.h sparc/xm-linux.h\"\n \t\ttm_file=sparc/linux64.h\n \t\txmake_file=x-linux\n-\t\tfixincludes=Makefile.in\t# On Linux, the headers are ok already.\n+\t\tfixincludes=Makefile.in\t# The headers are ok already.\n \t\tgnu_ld=yes\n \t\t;;\n # This hasn't been upgraded to GCC 2.\n@@ -4215,12 +5137,11 @@ for machine in $build $host $target; do\n \t\t;;\n \tvax-*-sysv*)\t\t\t# vaxen running system V\n \t\ttm_file=\"${tm_file} vax/vaxv.h\"\n-\t\txm_file=\"${tm_file} vax/xm-vaxv.h\"\n+\t\txm_file=\"${xm_file} vax/xm-vaxv.h\"\n \t\tfloat_format=vax\n \t\t;;\n \tvax-*-netbsd*)\n \t\ttm_file=\"${tm_file} netbsd.h vax/netbsd.h\"\n-\t\txm_file=\"${xm_file} xm-netbsd.h\"\n \t\t# On NetBSD, the headers are already okay, except for math.h.\n \t\tfixincludes=fixinc.math\n \t\ttmake_file=t-netbsd\n@@ -4319,6 +5240,37 @@ for machine in $build $host $target; do\n \t\t\tfi\n \t\tfi\n \t\t;;\n+\tarm*-*-*)\n+\t\tcase \"x$with_cpu\" in\n+\t\t\tx)\n+\t\t\t\t# The most generic\n+\t\t\t\ttarget_cpu_default2=\"TARGET_CPU_generic\"\n+\t\t\t\t;;\n+\n+\t\t\t# Distinguish cores, and major variants\n+\t\t\t# arm7m doesn't exist, but D & I don't affect code\n+\t\t\txarm23678 | xarm250 | xarm67010 \\\n+\t\t\t| xarm7m | xarm7dm | xarm7dmi | xarm7tdmi \\\n+\t\t\t| xarm7100 | xarm7500 | xarm7500fe | xarm810 \\\n+\t\t\t| xstrongarm | xstrongarm110)\n+\t\t\t\ttarget_cpu_default2=\"TARGET_CPU_$with_cpu\"\n+\t\t\t\t;;\n+\n+\t\t\txyes | xno)\n+\t\t\t\techo \"--with-cpu must be passed a value\" 1>&2\n+\t\t\t\texit 1\n+\t\t\t\t;;\n+\n+\t\t\t*)\n+\t\t\t\tif [ x$pass2done = xyes ]\n+\t\t\t\tthen\n+\t\t\t\t\techo \"Unknown cpu used with --with-cpu=$with_cpu\" 1>&2\n+\t\t\t\t\texit 1\n+\t\t\t\tfi\n+\t\t\t\t;;\n+\t\tesac\n+\t\t;;\n+\n \tmips*-*-ecoff* | mips*-*-elf*)\n \t\tif [ x$gas = xyes ]\n \t\tthen\n@@ -4354,8 +5306,11 @@ for machine in $build $host $target; do\n \t\t\t\t;;\n \n \t\t\t*)\n-\t\t\t\techo \"Unknown cpu used with --with-cpu=$with_cpu\" 1>&2\n-\t\t\t\texit 1\n+\t\t\t\tif [ x$pass2done = xyes ]\n+\t\t\t\tthen\n+\t\t\t\t\techo \"Unknown cpu used with --with-cpu=$with_cpu\" 1>&2\n+\t\t\t\t\texit 1\n+\t\t\t\tfi\n \t\t\t\t;;\n \t\tesac\n \t\t;;\n@@ -4368,8 +5323,11 @@ for machine in $build $host $target; do\n \t\t\t\ttarget_cpu_default2=\"TARGET_CPU_$with_cpu\"\n \t\t\t\t;;\n \t\t\t*)\n-\t\t\t\techo \"Unknown cpu used with --with-cpu=$with_cpu\" 1>&2\n-\t\t\t\texit 1\n+\t\t\t\tif [ x$pass2done = xyes ]\n+\t\t\t\tthen\n+\t\t\t\t\techo \"Unknown cpu used with --with-cpu=$with_cpu\" 1>&2\n+\t\t\t\t\texit 1\n+\t\t\t\tfi\n \t\t\t\t;;\n \t\tesac\n \t\t;;\n@@ -4946,7 +5904,7 @@ EOF\n # Ultrix sh set writes to stderr and can't be redirected directly,\n # and sets the high bit in the cache file unless we assign to the vars.\n (set) 2>&1 |\n-  case `(ac_space=' '; set) 2>&1` in\n+  case `(ac_space=' '; set) 2>&1 | grep ac_space` in\n   *ac_space=\\ *)\n     # `set' does not quote correctly, so add quotes (double-quote substitution\n     # turns \\\\\\\\ into \\\\, and sed turns \\\\ into \\).\n@@ -5013,7 +5971,7 @@ do\n     echo \"running \\${CONFIG_SHELL-/bin/sh} $0 $ac_configure_args --no-create --no-recursion\"\n     exec \\${CONFIG_SHELL-/bin/sh} $0 $ac_configure_args --no-create --no-recursion ;;\n   -version | --version | --versio | --versi | --vers | --ver | --ve | --v)\n-    echo \"$CONFIG_STATUS generated by autoconf version 2.12\"\n+    echo \"$CONFIG_STATUS generated by autoconf version 2.12.1\"\n     exit 0 ;;\n   -help | --help | --hel | --he | --h)\n     echo \"\\$ac_cs_usage\"; exit 0 ;;\n@@ -5032,6 +5990,7 @@ sed 's/%@/@@/; s/@%/@@/; s/%g\\$/@g/; /@g\\$/s/[\\\\\\\\&%]/\\\\\\\\&/g;\n  s/@@/%@/; s/@@/@%/; s/@g\\$/%g/' > conftest.subs <<\\\\CEOF\n $ac_vpsub\n $extrasub\n+s%@SHELL@%$SHELL%g\n s%@CFLAGS@%$CFLAGS%g\n s%@CPPFLAGS@%$CPPFLAGS%g\n s%@CXXFLAGS@%$CXXFLAGS%g"}, {"sha": "908759363390ea6970c0a1d945a8eba0b7edbc11", "filename": "gcc/configure.in", "status": "modified", "additions": 83, "deletions": 40, "changes": 123, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/956d69504d77d301015532d2f0564213f0efc706/gcc%2Fconfigure.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/956d69504d77d301015532d2f0564213f0efc706/gcc%2Fconfigure.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfigure.in?ref=956d69504d77d301015532d2f0564213f0efc706", "patch": "@@ -143,7 +143,9 @@ EGCS_PROG_INSTALL\n AC_PROG_CC\n AC_PROG_MAKE_SET\n \n-AC_CHECK_HEADERS(limits.h stddef.h string.h strings.h stdlib.h time.h unistd.h varargs.h sys/varargs.h)\n+AC_HEADER_STDC\n+AC_HEADER_TIME\n+AC_CHECK_HEADERS(limits.h stddef.h string.h strings.h stdlib.h time.h fcntl.h unistd.h sys/file.h sys/time.h sys/resource.h sys/param.h sys/times.h varargs.h sys/varargs.h)\n \n # Use <inttypes.h> only if it exists,\n # doesn't clash with <sys/types.h>, and declares intmax_t.\n@@ -158,15 +160,29 @@ AC_CACHE_VAL(gcc_cv_header_inttypes_h,\n   gcc_cv_header_inttypes_h=no)])\n AC_MSG_RESULT($gcc_cv_header_inttypes_h)\n \n+AC_CHECK_FUNCS(strtoul)\n+AC_CHECK_FUNCS(bsearch)\n+AC_CHECK_FUNCS(strerror)\n+AC_CHECK_FUNCS(putenv)\n+AC_CHECK_FUNCS(popen)\n+AC_CHECK_FUNCS(vprintf)\n+AC_CHECK_FUNCS(bcopy)\n+AC_CHECK_FUNCS(bzero)\n+AC_CHECK_FUNCS(bcmp)\n+AC_CHECK_FUNCS(index)\n+AC_CHECK_FUNCS(rindex)\n+AC_CHECK_FUNCS(kill)\n+\n GCC_NEED_DECLARATION(malloc)\n GCC_NEED_DECLARATION(realloc)\n GCC_NEED_DECLARATION(calloc)\n GCC_NEED_DECLARATION(free)\n+GCC_NEED_DECLARATION(index)\n+GCC_NEED_DECLARATION(rindex)\n+GCC_NEED_DECLARATION(getenv)\n \n AC_DECL_SYS_SIGLIST\n \n-AC_CHECK_FUNCS(strerror strtoul bsearch)\n-\n # File extensions\n manext='.1'\n objext='.o'\n@@ -414,9 +430,8 @@ for machine in $build $host $target; do\n \t\ttmake_file=\"t-netbsd arm/t-netbsd\"\n \t\t# On NetBSD, the headers are already okay, except for math.h.\n \t\tfixincludes=fixinc.math\n-\t\tuse_collect2=yes\n \t\t;;\n-\tarm-*-linux-gnuaout*)\t\t# ARM Linux\n+\tarm-*-linux-gnuaout*)\t\t# ARM GNU/Linux\n \t\tcpu_type=arm\n \t\txm_file=arm/xm-linux.h\n \t\txmake_file=x-linux\n@@ -788,7 +803,6 @@ for machine in $build $host $target; do\n \t\t;;\n \ti[[3456]]86-*-freebsdelf*)\n \t\ttm_file=\"i386/i386.h i386/att.h linux.h i386/freebsd-elf.h i386/perform.h\"\n-\t\txm_file=i386/xm-freebsd.h\n \t\t# On FreeBSD, the headers are already ok, except for math.h.\n \t\tfixincludes=fixinc.math\n \t\ttmake_file=i386/t-freebsd\n@@ -798,14 +812,12 @@ for machine in $build $host $target; do\n \t\t;;\n \ti[[3456]]86-*-freebsd*)\n \t\ttm_file=i386/freebsd.h\n-\t\txm_file=i386/xm-freebsd.h\n \t\t# On FreeBSD, the headers are already ok, except for math.h.\n \t\tfixincludes=fixinc.math\n \t\ttmake_file=i386/t-freebsd\n \t\t;;\n \ti[[3456]]86-*-netbsd*)\n \t\ttm_file=i386/netbsd.h\n-\t\txm_file=i386/xm-netbsd.h\n \t\t# On NetBSD, the headers are already okay, except for math.h.\n \t\tfixincludes=fixinc.math\n \t\ttmake_file=t-netbsd\n@@ -836,15 +848,15 @@ for machine in $build $host $target; do\n \t\tfi\n \t\tinstall_headers_dir=install-headers-cpio\n \t\t;;\n-\ti[[3456]]86-*-linux-gnuoldld*)\t# Intel 80386's running Linux\n+\ti[[3456]]86-*-linux-gnuoldld*)\t# Intel 80386's running GNU/Linux\n \t\txm_file=i386/xm-linux.h # with a.out format using pre BFD linkers\n \t\txmake_file=x-linux-aout\n \t\ttmake_file=\"t-linux-aout i386/t-crtstuff\"\n \t\ttm_file=i386/linux-oldld.h\n \t\tfixincludes=Makefile.in #On Linux, the headers are ok already.\n \t\tgnu_ld=yes\n \t\t;;\n-\ti[[3456]]86-*-linux-gnuaout*)\t\t# Intel 80386's running Linux\n+\ti[[3456]]86-*-linux-gnuaout*)\t# Intel 80386's running GNU/Linux\n \t\txm_file=i386/xm-linux.h\t\t# with a.out format\n \t\txmake_file=x-linux-aout\n \t\ttmake_file=\"t-linux-aout i386/t-crtstuff\"\n@@ -853,9 +865,9 @@ for machine in $build $host $target; do\n \t\tgnu_ld=yes\n \t\t;;\n \ti[[3456]]86-*-linux-gnulibc1)\n-\t\txm_file=i386/xm-linux.h\t# Intel 80386's running Linux\n+\t\txm_file=i386/xm-linux.h\t# Intel 80386's running GNU/Linux\n \t\txmake_file=x-linux\t# with ELF format using the\n-\t\ttm_file=i386/linux.h\t# Linux C library 5\n+\t\ttm_file=i386/linux.h\t# GNU/Linux C library 5\n \t\ttmake_file=\"t-linux t-linux-gnulibc1 i386/t-crtstuff\"\n \t\textra_parts=\"crtbegin.o crtbeginS.o crtend.o crtendS.o\"\n \t\tfixincludes=Makefile.in #On Linux, the headers are ok already.\n@@ -864,9 +876,9 @@ for machine in $build $host $target; do\n  \t\t\tthread_file='single'\n  \t\tfi\n \t\t;;\n-\ti[[3456]]86-*-linux-gnu*)\t\t# Intel 80386's running Linux\n+\ti[[3456]]86-*-linux-gnu*)\t# Intel 80386's running GNU/Linux\n \t\txm_file=i386/xm-linux.h # with ELF format using glibc 2\n-\t\txmake_file=x-linux\t# aka Linux C library 6\n+\t\txmake_file=x-linux\t# aka GNU/Linux C library 6\n \t\ttm_file=i386/linux.h\n \t\ttmake_file=\"t-linux i386/t-crtstuff\"\n \t\textra_parts=\"crtbegin.o crtbeginS.o crtend.o crtendS.o\"\n@@ -1080,7 +1092,7 @@ for machine in $build $host $target; do\n               ;;\n \ti860-alliant-*)\t\t# Alliant FX/2800\n \t\ttm_file=\"${tm_file} svr4.h i860/sysv4.h i860/fx2800.h\"\n-\t\txm_file=\"${xm_file} i860/xm-fx2800.h\"\n+\t\txm_file=\"${xm_file}\"\n \t\txmake_file=i860/x-fx2800\n \t\ttmake_file=i860/t-fx2800\n \t\textra_parts=\"crtbegin.o crtend.o\"\n@@ -1284,7 +1296,7 @@ for machine in $build $host $target; do\n \t\t;;\n \tm68k-ncr-sysv*)\t\t\t# NCR Tower 32 SVR3\n \t\ttm_file=m68k/tower-as.h\n-\t\txm_file=m68k/xm-tower.h\n+\t\txm_file=\"${xm_file} xm-svr3.h\"\n \t\txmake_file=m68k/x-tower\n \t\textra_parts=\"crtbegin.o crtend.o\"\n \t\textra_headers=math-68881.h\n@@ -1432,7 +1444,6 @@ for machine in $build $host $target; do\n \t\telse\n \t\t\ttm_file=m68k/sun3.h\n \t\tfi\n-\t\txm_file=m68k/xm-sun3.h\n \t\tuse_collect2=yes\n \t\textra_headers=math-68881.h\n \t\t;;\n@@ -1465,7 +1476,6 @@ for machine in $build $host $target; do\n \t\t;;\n \tm68k-*-netbsd*)\n \t\ttm_file=m68k/netbsd.h\n-\t\txm_file=m68k/xm-netbsd.h\n \t\t# On NetBSD, the headers are already okay, except for math.h.\n \t\tfixincludes=fixinc.math\n \t\ttmake_file=t-netbsd\n@@ -1483,32 +1493,32 @@ for machine in $build $host $target; do\n \t\textra_parts=\"crtbegin.o crtend.o\"\n \t\textra_headers=math-68881.h\n \t\t;;\n-\tm68k-*-linux-gnuaout*)\t\t# Motorola m68k's running Linux\n+\tm68k-*-linux-gnuaout*)\t\t# Motorola m68k's running GNU/Linux\n \t\txm_file=m68k/xm-linux.h\t# with a.out format\n \t\txmake_file=x-linux\n \t\ttm_file=m68k/linux-aout.h\n \t\ttmake_file=\"t-linux-aout m68k/t-linux-aout\"\n-\t\tfixincludes=Makefile.in #On Linux, the headers are ok already.\n+\t\tfixincludes=Makefile.in # The headers are ok already.\n \t\textra_headers=math-68881.h\n \t\tgnu_ld=yes\n \t\t;;\n-\tm68k-*-linux-gnulibc1)\t\t# Motorola m68k's running Linux\n+\tm68k-*-linux-gnulibc1)\t\t# Motorola m68k's running GNU/Linux\n \t\txm_file=m68k/xm-linux.h\t# with ELF format using the\n-\t\txmake_file=x-linux\t# Linux C library 5\n+\t\txmake_file=x-linux\t# GNU/Linux C library 5\n \t\ttm_file=m68k/linux.h\n \t\ttmake_file=\"t-linux t-linux-gnulibc1 m68k/t-linux\"\n \t\textra_parts=\"crtbegin.o crtbeginS.o crtend.o crtendS.o\"\n-\t\tfixincludes=Makefile.in #On Linux, the headers are ok already.\n+\t\tfixincludes=Makefile.in # The headers are ok already.\n \t\textra_headers=math-68881.h\n \t\tgnu_ld=yes\n \t\t;;\n-\tm68k-*-linux-gnu*)\t\t\t# Motorola m68k's running Linux\n+\tm68k-*-linux-gnu*)\t\t# Motorola m68k's running GNU/Linux\n \t\txm_file=m68k/xm-linux.h\t# with ELF format using glibc 2\n-\t\txmake_file=x-linux\t# aka the Linux C library 6.\n+\t\txmake_file=x-linux\t# aka the GNU/Linux C library 6.\n \t\ttm_file=m68k/linux.h\n \t\ttmake_file=\"t-linux m68k/t-linux\"\n \t\textra_parts=\"crtbegin.o crtbeginS.o crtend.o crtendS.o\"\n-\t\tfixincludes=Makefile.in #On Linux, the headers are ok already.\n+\t\tfixincludes=Makefile.in # The headers are ok already.\n \t\textra_headers=math-68881.h\n \t\tgnu_ld=yes\n \t\tif [[ x$enable_threads = xyes ]]; then\n@@ -1764,7 +1774,6 @@ for machine in $build $host $target; do\n \t      ;;\n \tmips-dec-netbsd*)                  # Decstation running NetBSD\n \t\ttm_file=mips/netbsd.h\n-\t\txm_file=mips/xm-netbsd.h\n \t\t# On NetBSD, the headers are already okay, except for math.h.\n \t\tfixincludes=fixinc.math\n \t\ttmake_file=t-netbsd\n@@ -2092,7 +2101,6 @@ for machine in $build $host $target; do\n \t\t;;\n \tns32k-pc532-netbsd*)\n \t\ttm_file=ns32k/netbsd.h\n-\t\txm_file=ns32k/xm-netbsd.h\n \t\t# On NetBSD, the headers are already okay, except for math.h.\n \t\tfixincludes=fixinc.math\n \t\ttmake_file=t-netbsd\n@@ -2322,7 +2330,6 @@ for machine in $build $host $target; do\n \t\t;;\n \tsparc-*-netbsd*)\n \t\ttm_file=sparc/netbsd.h\n-\t\txm_file=sparc/xm-netbsd.h\n \t\t# On NetBSD, the headers are already okay, except for math.h.\n \t\tfixincludes=fixinc.math\n \t\ttmake_file=t-netbsd\n@@ -2337,14 +2344,14 @@ for machine in $build $host $target; do\n \t\t#float_format=i128\n \t\tfloat_format=i64\n \t\t;;\n-\tsparc-*-linux-gnuaout*)\t\t# Sparc's running Linux, a.out\n+\tsparc-*-linux-gnuaout*)\t\t# Sparc's running GNU/Linux, a.out\n \t\txm_file=\"sparc/xm-sparc.h sparc/xm-linux.h\"\n \t\ttm_file=sparc/linux-aout.h\n \t\txmake_file=x-linux\n \t\tfixincludes=Makefile.in #On Linux, the headers are ok already.\n \t\tgnu_ld=yes\n \t\t;;\n-\tsparc-*-linux-gnulibc1*)\t# Sparc's running Linux, libc5\n+\tsparc-*-linux-gnulibc1*)\t# Sparc's running GNU/Linux, libc5\n \t\txm_file=\"sparc/xm-sparc.h sparc/xm-linux.h\"\n \t\txmake_file=x-linux\n \t\ttm_file=sparc/linux.h\n@@ -2353,7 +2360,7 @@ for machine in $build $host $target; do\n \t\tfixincludes=Makefile.in #On Linux, the headers are ok already.\n \t\tgnu_ld=yes\n \t\t;;\n-\tsparc-*-linux-gnu*)\t\t# Sparc's running Linux, libc6\n+\tsparc-*-linux-gnu*)\t\t# Sparc's running GNU/Linux, libc6\n \t\txm_file=\"sparc/xm-sparc.h sparc/xm-linux.h\"\n \t\txmake_file=x-linux\n \t\ttm_file=sparc/linux.h\n@@ -2444,12 +2451,12 @@ for machine in $build $host $target; do\n \t\ttm_file=sparc/sp64-elf.h\n \t\textra_parts=\"crtbegin.o crtend.o\"\n \t\t;;\n-\tsparc64-*-linux*)\t\t# 64-bit Sparc's running Linux\n+\tsparc64-*-linux*)\t\t# 64-bit Sparc's running GNU/Linux\n \t\ttmake_file=sparc/t-sp64\n \t\txm_file=\"sparc/xm-sp64.h sparc/xm-linux.h\"\n \t\ttm_file=sparc/linux64.h\n \t\txmake_file=x-linux\n-\t\tfixincludes=Makefile.in\t# On Linux, the headers are ok already.\n+\t\tfixincludes=Makefile.in\t# The headers are ok already.\n \t\tgnu_ld=yes\n \t\t;;\n # This hasn't been upgraded to GCC 2.\n@@ -2479,12 +2486,11 @@ for machine in $build $host $target; do\n \t\t;;\n \tvax-*-sysv*)\t\t\t# vaxen running system V\n \t\ttm_file=\"${tm_file} vax/vaxv.h\"\n-\t\txm_file=\"${tm_file} vax/xm-vaxv.h\"\n+\t\txm_file=\"${xm_file} vax/xm-vaxv.h\"\n \t\tfloat_format=vax\n \t\t;;\n \tvax-*-netbsd*)\n \t\ttm_file=\"${tm_file} netbsd.h vax/netbsd.h\"\n-\t\txm_file=\"${xm_file} xm-netbsd.h\"\n \t\t# On NetBSD, the headers are already okay, except for math.h.\n \t\tfixincludes=fixinc.math\n \t\ttmake_file=t-netbsd\n@@ -2583,6 +2589,37 @@ for machine in $build $host $target; do\n \t\t\tfi\n \t\tfi\n \t\t;;\n+\tarm*-*-*)\n+\t\tcase \"x$with_cpu\" in\n+\t\t\tx)\n+\t\t\t\t# The most generic\n+\t\t\t\ttarget_cpu_default2=\"TARGET_CPU_generic\"\n+\t\t\t\t;;\n+\n+\t\t\t# Distinguish cores, and major variants\n+\t\t\t# arm7m doesn't exist, but D & I don't affect code\n+\t\t\txarm[23678] | xarm250 | xarm[67][01]0 \\\n+\t\t\t| xarm7m | xarm7dm | xarm7dmi | xarm7tdmi \\\n+\t\t\t| xarm7100 | xarm7500 | xarm7500fe | xarm810 \\\n+\t\t\t| xstrongarm | xstrongarm110)\n+\t\t\t\ttarget_cpu_default2=\"TARGET_CPU_$with_cpu\"\n+\t\t\t\t;;\n+\n+\t\t\txyes | xno)\n+\t\t\t\techo \"--with-cpu must be passed a value\" 1>&2\n+\t\t\t\texit 1\n+\t\t\t\t;;\n+\n+\t\t\t*)\n+\t\t\t\tif [[ x$pass2done = xyes ]]\n+\t\t\t\tthen\n+\t\t\t\t\techo \"Unknown cpu used with --with-cpu=$with_cpu\" 1>&2\n+\t\t\t\t\texit 1\n+\t\t\t\tfi\n+\t\t\t\t;;\n+\t\tesac\n+\t\t;;\n+\n \tmips*-*-ecoff* | mips*-*-elf*)\n \t\tif [[ x$gas = xyes ]]\n \t\tthen\n@@ -2618,8 +2655,11 @@ for machine in $build $host $target; do\n \t\t\t\t;;\n \n \t\t\t*)\n-\t\t\t\techo \"Unknown cpu used with --with-cpu=$with_cpu\" 1>&2\n-\t\t\t\texit 1\n+\t\t\t\tif [[ x$pass2done = xyes ]]\n+\t\t\t\tthen\n+\t\t\t\t\techo \"Unknown cpu used with --with-cpu=$with_cpu\" 1>&2\n+\t\t\t\t\texit 1\n+\t\t\t\tfi\n \t\t\t\t;;\n \t\tesac\n \t\t;;\n@@ -2632,8 +2672,11 @@ for machine in $build $host $target; do\n \t\t\t\ttarget_cpu_default2=\"TARGET_CPU_$with_cpu\"\n \t\t\t\t;;\n \t\t\t*)\n-\t\t\t\techo \"Unknown cpu used with --with-cpu=$with_cpu\" 1>&2\n-\t\t\t\texit 1\n+\t\t\t\tif [[ x$pass2done = xyes ]]\n+\t\t\t\tthen\n+\t\t\t\t\techo \"Unknown cpu used with --with-cpu=$with_cpu\" 1>&2\n+\t\t\t\t\texit 1\n+\t\t\t\tfi\n \t\t\t\t;;\n \t\tesac\n \t\t;;"}, {"sha": "6932f8fa4f66bdaa89840a114e7d15a9e585370e", "filename": "gcc/configure.lang", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/956d69504d77d301015532d2f0564213f0efc706/gcc%2Fconfigure.lang", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/956d69504d77d301015532d2f0564213f0efc706/gcc%2Fconfigure.lang", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfigure.lang?ref=956d69504d77d301015532d2f0564213f0efc706", "patch": "@@ -1,6 +1,6 @@\n # configure.lang for GNU CC\n # This script is run by configure for configuration of language\n-# subdirectories which conform to the old GCC configure mechansim\n+# subdirectories which conform to the old GCC configure mechanism\n # for such subdirectories.\n \n # Copyright (C) 1997 Free Software Foundation, Inc."}, {"sha": "5c988a22da444535dac971b02770d0575e3b8717", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/956d69504d77d301015532d2f0564213f0efc706/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/956d69504d77d301015532d2f0564213f0efc706/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=956d69504d77d301015532d2f0564213f0efc706", "patch": "@@ -37,6 +37,13 @@ Wed Dec  3 11:44:52 1997  Jason Merrill  <jason@yorick.cygnus.com>\n \n \t* tree.c, cp-tree.h (get_target_expr): New fn.\n \n+Wed Dec  3 08:47:27 1997  Paul Eggert  <eggert@twinsun.com>\n+\n+\t* pt.c (check_explicit_specialization): Fix misspelling in\n+\tdiagnostic: `preceeded'.\n+\t* typeck.c (get_delta_difference): Fix misspelling in diagnostic:\n+\t`conversiona'.\n+\n 1997-12-02  Mark Mitchell  <mmitchell@usa.net>\n \n \t* pt.c (determine_explicit_specialization): Avoid an internal\n@@ -63,6 +70,11 @@ Fri Nov 28 01:58:14 1997  Jason Merrill  <jason@yorick.cygnus.com>\n \t* pt.c (check_explicit_specialization): Complain about using a \n \ttemplate-id for a non-specialization.\n \n+Fri Nov 28 12:35:19 1997  Scott Christley  <scottc@net-community.com>\n+\n+\t* repo.c: Prototype rindex only if needed.\n+\t* xref.c: Likewise.\n+\n Fri Nov 28 01:56:35 1997  Bruno Haible  <bruno@linuix.mathematik.uni-karlsruhe.de>\n \n         * error.c (dump_decl): Handle TEMPLATE_ID_EXPR.\n@@ -101,6 +113,11 @@ Wed Nov 26 20:28:49 1997  Jason Merrill  <jason@yorick.cygnus.com>\n \n \t* except.c (expand_throw): Call mark_used on the destructor.\n \n+Wed Nov 26 15:13:48 1997  Jeffrey A Law  (law@cygnus.com)\n+\n+\t* lex.c (lang_init): Enable flag_exceptions by default if no\n+\tcommand line switch was specified.\n+\n 1997-11-26  Mark Mitchell  <mmitchell@usa.net>\n \n \t* pt.c (unify): Handle `void' template parameters in"}, {"sha": "ddefd5c52fe1a22329415a43ed141a9af7d19c1c", "filename": "gcc/cp/ChangeLog.egcs", "status": "modified", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/956d69504d77d301015532d2f0564213f0efc706/gcc%2Fcp%2FChangeLog.egcs", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/956d69504d77d301015532d2f0564213f0efc706/gcc%2Fcp%2FChangeLog.egcs", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog.egcs?ref=956d69504d77d301015532d2f0564213f0efc706", "patch": "@@ -1,8 +1,3 @@\n-Wed Oct 22 18:56:31 1997  Jeffrey A Law  (law@cygnus.com)\n-\n-\t* lex.c (lang_init): Enable flag_exceptions by default if no\n-\tcommand line switch was specified.\n-\n Wed Sep 10 16:39:26 1997  Jim Wilson  <wilson@cygnus.com>\n \n \t* Make-lang.in (LN, LN_S): New macros, use where appropriate."}, {"sha": "3580a2bf876ef6cedc269d7e12a53df4b594ac0b", "filename": "gcc/cp/Make-lang.in", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/956d69504d77d301015532d2f0564213f0efc706/gcc%2Fcp%2FMake-lang.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/956d69504d77d301015532d2f0564213f0efc706/gcc%2Fcp%2FMake-lang.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FMake-lang.in?ref=956d69504d77d301015532d2f0564213f0efc706", "patch": "@@ -92,8 +92,8 @@ g++.o: $(CONFIG_H) multilib.h config.status $(lang_specs_files) g++.c\n \n # Create the compiler driver for g++.\n g++$(exeext): g++.o g++spec.o version.o choose-temp.o pexecute.o prefix.o $(LIBDEPS) $(EXTRA_GCC_OBJS)\n-\t$(CC) $(ALL_CFLAGS) $(LDFLAGS) -o $@ g++.o g++spec.o prefix.o version.o \\\n-\t  choose-temp.o pexecute.o $(EXTRA_GCC_OBJS) $(LIBS)\n+\t$(CC) $(ALL_CFLAGS) $(LDFLAGS) -o $@ g++.o g++spec.o prefix.o \\\n+\t  version.o choose-temp.o pexecute.o $(EXTRA_GCC_OBJS) $(LIBS)\n \n # Create a version of the g++ driver which calls the cross-compiler.\n g++-cross$(exeext): g++$(exeext)"}, {"sha": "b26979a20e760d8bfd2a3524726fd3d26cf0985a", "filename": "gcc/cp/class.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/956d69504d77d301015532d2f0564213f0efc706/gcc%2Fcp%2Fclass.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/956d69504d77d301015532d2f0564213f0efc706/gcc%2Fcp%2Fclass.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fclass.c?ref=956d69504d77d301015532d2f0564213f0efc706", "patch": "@@ -1,5 +1,5 @@\n /* Functions related to building classes and their related objects.\n-   Copyright (C) 1987, 92, 93, 94, 95, 1996 Free Software Foundation, Inc.\n+   Copyright (C) 1987, 92, 93, 94, 95, 96, 1997 Free Software Foundation, Inc.\n    Contributed by Michael Tiemann (tiemann@cygnus.com)\n \n This file is part of GNU CC.\n@@ -72,7 +72,7 @@ struct class_level\n   int unused;\n };\n \n-/* The currect_class_ptr is the pointer to the current class.\n+/* The current_class_ptr is the pointer to the current class.\n    current_class_ref is the actual current class.  */\n tree current_class_ptr, current_class_ref;\n "}, {"sha": "4bcb79c6420663bda5c01abaea96bbced0ee8f84", "filename": "gcc/cp/decl.c", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/956d69504d77d301015532d2f0564213f0efc706/gcc%2Fcp%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/956d69504d77d301015532d2f0564213f0efc706/gcc%2Fcp%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fdecl.c?ref=956d69504d77d301015532d2f0564213f0efc706", "patch": "@@ -1,5 +1,5 @@\n /* Process declarations and variables for C compiler.\n-   Copyright (C) 1988, 92, 93, 94, 95, 1996 Free Software Foundation, Inc.\n+   Copyright (C) 1988, 92, 93, 94, 95, 96, 1997 Free Software Foundation, Inc.\n    Hacked by Michael Tiemann (tiemann@cygnus.com)\n \n This file is part of GNU CC.\n@@ -2307,7 +2307,7 @@ decls_match (newdecl, olddecl)\n \ttree oldargs = DECL_TEMPLATE_PARMS (olddecl);\n \tint i;\n \n-\t/* Run through all the levels of template parmaters, checking\n+\t/* Run through all the levels of template parameters, checking\n \t   that they match.  */\n \twhile (newargs && oldargs) \n \t  {\n@@ -6422,7 +6422,7 @@ cp_finish_decl (decl, init, asmspec_tree, need_pop, flags)\n \n       /* If we have installed this as the canonical typedef for this\n \t type, and that type has not been defined yet, delay emitting\n-\t the debug informaion for it, as we will emit it later.  */\n+\t the debug information for it, as we will emit it later.  */\n       if (TYPE_MAIN_DECL (TREE_TYPE (decl)) == decl\n \t  && TYPE_SIZE (TREE_TYPE (decl)) == NULL_TREE)\n \tTYPE_DECL_SUPPRESS_DEBUG (decl) = 1;\n@@ -7859,7 +7859,7 @@ grokdeclarator (declarator, declspecs, decl_context, initialized, attrlist)\n \t\tname = IDENTIFIER_POINTER (dname);\n \t      }\n \t    if (! IDENTIFIER_OPNAME_P (dname)\n-\t\t/* Linux headers use '__op'.  Arrgh.  */\n+\t\t/* GNU/Linux headers use '__op'.  Arrgh.  */\n \t\t|| IDENTIFIER_TYPENAME_P (dname) && ! TREE_TYPE (dname))\n \t      name = IDENTIFIER_POINTER (dname);\n \t    else\n@@ -12144,7 +12144,7 @@ finish_function (lineno, call_poplevel, nested)\n \t  poplevel (2, 0, 0);\t/* XXX change to 1 */\n \n \t  /* Back to the top of destructor.  */\n-\t  /* Dont execute destructor code if `this' is NULL.  */\n+\t  /* Don't execute destructor code if `this' is NULL.  */\n \n \t  start_sequence ();\n "}, {"sha": "cb170210922403d973855ce4facb1181a10d0b5b", "filename": "gcc/cp/except.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/956d69504d77d301015532d2f0564213f0efc706/gcc%2Fcp%2Fexcept.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/956d69504d77d301015532d2f0564213f0efc706/gcc%2Fcp%2Fexcept.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fexcept.c?ref=956d69504d77d301015532d2f0564213f0efc706", "patch": "@@ -1,5 +1,5 @@\n /* Handle exceptional things in C++.\n-   Copyright (C) 1989, 92-95, 1996 Free Software Foundation, Inc.\n+   Copyright (C) 1989, 92-96, 1997 Free Software Foundation, Inc.\n    Contributed by Michael Tiemann <tiemann@cygnus.com>\n    Rewritten by Mike Stump <mrs@cygnus.com>, based upon an\n    initial re-implementation courtesy Tad Hunt.\n@@ -1109,7 +1109,7 @@ start_anon_func ()\n   interface_unknown = 1;\n \n   params = void_list_node;\n-  /* tcf stands for throw clean funciton.  */\n+  /* tcf stands for throw clean function.  */\n   sprintf (name, \"__tcf_%d\", counter++);\n   t = make_call_declarator (get_identifier (name), params, NULL_TREE,\n \t\t\t    NULL_TREE);"}, {"sha": "f0064f346b19ce68f8ffde673c116f7ed4141fea", "filename": "gcc/cp/g++FAQ.texi", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/956d69504d77d301015532d2f0564213f0efc706/gcc%2Fcp%2Fg%2B%2BFAQ.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/956d69504d77d301015532d2f0564213f0efc706/gcc%2Fcp%2Fg%2B%2BFAQ.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fg%2B%2BFAQ.texi?ref=956d69504d77d301015532d2f0564213f0efc706", "patch": "@@ -401,7 +401,7 @@ places\n \n Eberhard Mattes did the EMX port.  His address is\n mattes@@azu.informatik.uni-stuttgart.de.\n-Read the FAQ file included with the distribution before harrassing the author.\n+Read the FAQ file included with the distribution before harassing the author.\n \n @cindex Apple support\n @cindex Macintosh support\n@@ -1901,7 +1901,7 @@ still be true when 2.8.0 is released.\n As of version 2.7.0, g++ has exception support on most but not all\n platforms\n (no support on MIPS-based platforms yet), but\n-it doesn't work right if optimizaton is enabled, which means the\n+it doesn't work right if optimization is enabled, which means the\n exception\n implementation is still\n not really ready for production use."}, {"sha": "5f7346561c5ca5283f6eef4e04557330f002538a", "filename": "gcc/cp/gxxint.texi", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/956d69504d77d301015532d2f0564213f0efc706/gcc%2Fcp%2Fgxxint.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/956d69504d77d301015532d2f0564213f0efc706/gcc%2Fcp%2Fgxxint.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fgxxint.texi?ref=956d69504d77d301015532d2f0564213f0efc706", "patch": "@@ -1425,7 +1425,7 @@ Major disadvantages when enabling exceptions are:\n @itemize @bullet\n @item\n Code that uses caller saved registers, can't, when flow can be\n-transfered into that code from an exception handler.  In high performace\n+transferred into that code from an exception handler.  In high performance\n code this should not usually be true, so the effects should be minimal.\n \n @end itemize\n@@ -1478,7 +1478,7 @@ This can be passed in many ways, currently a tree is used.  Another\n possibility would be insns for the handler, or a label that denotes a\n handler.  I have a feeling insns might be the the best way to pass it.\n Semantics are, if an exception is thrown inside the region, control is\n-transfered unconditionally to the handler.  If control passes through\n+transferred unconditionally to the handler.  If control passes through\n the handler, then the backend is to rethrow the exception, in the\n context of the end of the original region.  The handler is protected by\n the conventional mechanisms; it is the frontend's responsibility to"}, {"sha": "2ad20ffb9b3d29c03285e1fbe0ebef79031a7645", "filename": "gcc/cp/init.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/956d69504d77d301015532d2f0564213f0efc706/gcc%2Fcp%2Finit.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/956d69504d77d301015532d2f0564213f0efc706/gcc%2Fcp%2Finit.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Finit.c?ref=956d69504d77d301015532d2f0564213f0efc706", "patch": "@@ -1,5 +1,5 @@\n /* Handle initialization things in C++.\n-   Copyright (C) 1987, 89, 92, 93, 94, 95, 1996 Free Software Foundation, Inc.\n+   Copyright (C) 1987, 89, 92-96, 1997 Free Software Foundation, Inc.\n    Contributed by Michael Tiemann (tiemann@cygnus.com)\n \n This file is part of GNU CC."}, {"sha": "f634b213505fea7b499eb713d659c54fdc41d92d", "filename": "gcc/cp/lex.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/956d69504d77d301015532d2f0564213f0efc706/gcc%2Fcp%2Flex.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/956d69504d77d301015532d2f0564213f0efc706/gcc%2Fcp%2Flex.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Flex.c?ref=956d69504d77d301015532d2f0564213f0efc706", "patch": "@@ -1,5 +1,5 @@\n /* Separate lexical analyzer for GNU C++.\n-   Copyright (C) 1987, 89, 92, 93, 94, 95, 1996 Free Software Foundation, Inc.\n+   Copyright (C) 1987, 89, 92-96, 1997 Free Software Foundation, Inc.\n    Hacked by Michael Tiemann (tiemann@cygnus.com)\n \n This file is part of GNU CC."}, {"sha": "35b39ac9eda9dd4952853de09f28dd657bb4f91f", "filename": "gcc/cp/parse.c", "status": "modified", "additions": 3700, "deletions": 3703, "changes": 7403, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/956d69504d77d301015532d2f0564213f0efc706/gcc%2Fcp%2Fparse.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/956d69504d77d301015532d2f0564213f0efc706/gcc%2Fcp%2Fparse.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fparse.c?ref=956d69504d77d301015532d2f0564213f0efc706"}, {"sha": "2567127fd2fc9f76d088fb24729d07eda08076e2", "filename": "gcc/cp/pt.c", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/956d69504d77d301015532d2f0564213f0efc706/gcc%2Fcp%2Fpt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/956d69504d77d301015532d2f0564213f0efc706/gcc%2Fcp%2Fpt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fpt.c?ref=956d69504d77d301015532d2f0564213f0efc706", "patch": "@@ -1,5 +1,5 @@\n /* Handle parameterized types (templates) for GNU C++.\n-   Copyright (C) 1992, 93, 94, 95, 1996 Free Software Foundation, Inc.\n+   Copyright (C) 1992, 93, 94, 95, 96, 1997 Free Software Foundation, Inc.\n    Written by Ken Raeburn (raeburn@cygnus.com) while at Watchmaker Computing.\n    Rewritten by Jason Merrill (jason@cygnus.com).\n \n@@ -150,7 +150,7 @@ is_member_template (t)\n \n   if (TREE_CODE (t) != FUNCTION_DECL\n       && !DECL_FUNCTION_TEMPLATE_P (t))\n-    /* Anything that isn't a template or a template functon is\n+    /* Anything that isn't a template or a template function is\n        certainly not a member template.  */\n     return 0;\n \n@@ -509,7 +509,7 @@ check_explicit_specialization (declarator, decl, template_count, flags)\n \t      return 0;\n \t    }\n \t  else if (pedantic || uses_template_parms (decl))\n-\t    pedwarn (\"explicit specialization not preceeded by `template <>'\");\n+\t    pedwarn (\"explicit specialization not preceded by `template <>'\");\n \t}\n \n       if (TREE_CODE (declarator) != TEMPLATE_ID_EXPR)\n@@ -3505,7 +3505,7 @@ overload_template_name (type)\n   pushdecl_class_level (decl);\n }\n \n-/* Like type_unfication but designed specially to handle conversion\n+/* Like type_unification but designed specially to handle conversion\n    operators.  */\n \n int\n@@ -4613,7 +4613,7 @@ instantiate_decl (d)\n \n       setup_vtbl_ptr ();\n       /* Always keep the BLOCK node associated with the outermost\n-\t pair of curley braces of a function.  These are needed\n+\t pair of curly braces of a function.  These are needed\n \t for correct operation of dwarfout.c.  */\n       keep_next_level ();\n "}, {"sha": "c1d756c91c26d7251875556f99c7a426dd35a0d5", "filename": "gcc/cp/repo.c", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/956d69504d77d301015532d2f0564213f0efc706/gcc%2Fcp%2Frepo.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/956d69504d77d301015532d2f0564213f0efc706/gcc%2Fcp%2Frepo.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Frepo.c?ref=956d69504d77d301015532d2f0564213f0efc706", "patch": "@@ -1,5 +1,5 @@\n /* Code to maintain a C++ template repository.\n-   Copyright (C) 1995 Free Software Foundation, Inc.\n+   Copyright (C) 1995, 1997 Free Software Foundation, Inc.\n    Contributed by Jason Merrill (jason@cygnus.com)\n \n This file is part of GNU CC.\n@@ -41,7 +41,9 @@ Boston, MA 02111-1307, USA.  */\n extern char * getenv ();\n #endif\n \n+#ifdef NEED_DECLARATION_RINDEX\n extern char *rindex ();\n+#endif rindex\n extern char *getpwd PROTO((void));\n \n static tree repo_get_id PROTO((tree));"}, {"sha": "4624ca99518abed92d01e7e9caae4cc96710edac", "filename": "gcc/cp/search.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/956d69504d77d301015532d2f0564213f0efc706/gcc%2Fcp%2Fsearch.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/956d69504d77d301015532d2f0564213f0efc706/gcc%2Fcp%2Fsearch.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fsearch.c?ref=956d69504d77d301015532d2f0564213f0efc706", "patch": "@@ -1,6 +1,6 @@\n /* Breadth-first and depth-first routines for\n    searching multiple-inheritance lattice for GNU C++.\n-   Copyright (C) 1987, 89, 92, 93, 94, 95, 96, 1997 Free Software Foundation, Inc.\n+   Copyright (C) 1987, 89, 92-96, 1997 Free Software Foundation, Inc.\n    Contributed by Michael Tiemann (tiemann@cygnus.com)\n \n This file is part of GNU CC.\n@@ -3025,7 +3025,7 @@ expand_indirect_vtbls_init (binfo, true_exp, decl_ptr)\n \n \t  /* Do all vtables from this virtual base.  */\n \t  /* This assumes that virtual bases can never serve as parent\n-\t     binfos.  (in the CLASSTPE_VFIELD_PARENT sense)  */\n+\t     binfos.  (in the CLASSTYPE_VFIELD_PARENT sense)  */\n \t  expand_direct_vtbls_init (vbases, TYPE_BINFO (BINFO_TYPE (vbases)),\n \t\t\t\t    1, 0, addr);\n "}, {"sha": "10e25178f3b57ba0bcb742cc70c5b4d1b784d07b", "filename": "gcc/cp/typeck.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/956d69504d77d301015532d2f0564213f0efc706/gcc%2Fcp%2Ftypeck.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/956d69504d77d301015532d2f0564213f0efc706/gcc%2Fcp%2Ftypeck.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Ftypeck.c?ref=956d69504d77d301015532d2f0564213f0efc706", "patch": "@@ -1,5 +1,5 @@\n /* Build expressions with type checking for C++ compiler.\n-   Copyright (C) 1987, 88, 89, 92, 93, 94, 95, 1996 Free Software Foundation, Inc.\n+   Copyright (C) 1987, 88, 89, 92-96, 1997 Free Software Foundation, Inc.\n    Hacked by Michael Tiemann (tiemann@cygnus.com)\n \n This file is part of GNU CC.\n@@ -6243,7 +6243,7 @@ get_delta_difference (from, to, force)\n   binfo = get_binfo (from, to, 1);\n   if (binfo == error_mark_node)\n     {\n-      error (\"   in pointer to member function conversiona\");\n+      error (\"   in pointer to member function conversion\");\n       return delta;\n     }\n   if (binfo == 0)"}, {"sha": "40cdf42103f8987dc97e5325fbf7170a970c62a1", "filename": "gcc/cp/xref.c", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/956d69504d77d301015532d2f0564213f0efc706/gcc%2Fcp%2Fxref.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/956d69504d77d301015532d2f0564213f0efc706/gcc%2Fcp%2Fxref.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fxref.c?ref=956d69504d77d301015532d2f0564213f0efc706", "patch": "@@ -1,5 +1,5 @@\n /* Code for handling XREF output from GNU C++.\n-   Copyright (C) 1992, 1993, 1994, 1995 Free Software Foundation, Inc.\n+   Copyright (C) 1992, 1993, 1994, 1995, 1997 Free Software Foundation, Inc.\n    Contributed by Michael Tiemann (tiemann@cygnus.com)\n \n This file is part of GNU CC.\n@@ -42,7 +42,9 @@ extern char *getpwd PROTO((void));\n #include <string.h>\n #endif\n \n+#ifdef NEED_DECLARATION_RINDEX\n extern char *rindex ();\n+#endif\n \n /* The character(s) used to join a directory specification (obtained with\n    getwd or equivalent) with a non-absolute file name.  */"}, {"sha": "8d47c6d9933a757e4f8dd4db6e120e8585f4b704", "filename": "gcc/cplus-dem.c", "status": "modified", "additions": 10, "deletions": 1, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/956d69504d77d301015532d2f0564213f0efc706/gcc%2Fcplus-dem.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/956d69504d77d301015532d2f0564213f0efc706/gcc%2Fcplus-dem.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcplus-dem.c?ref=956d69504d77d301015532d2f0564213f0efc706", "patch": "@@ -342,7 +342,7 @@ consume_count (type)\n }\n \n \n-/* Like consume_count, but for counts that are preceeded and followed\n+/* Like consume_count, but for counts that are preceded and followed\n    by '_' if they are greater than 10.  Also, -1 is returned for\n    failure, since 0 can be a valid value.  */\n \n@@ -3136,6 +3136,15 @@ static struct option long_options[] = {\n   {0, no_argument, 0, 0}\n };\n \n+/* More 'friendly' abort that prints the line and file.\n+   config.h can #define abort fancy_abort if you like that sort of thing.  */\n+\n+void\n+fancy_abort ()\n+{\n+  fatal (\"Internal gcc abort.\");\n+}\n+\n int\n main (argc, argv)\n      int argc;"}, {"sha": "9cfd3ac6e46158de5702d057924665ae7b8eb85a", "filename": "gcc/cpplib.c", "status": "modified", "additions": 128, "deletions": 141, "changes": 269, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/956d69504d77d301015532d2f0564213f0efc706/gcc%2Fcpplib.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/956d69504d77d301015532d2f0564213f0efc706/gcc%2Fcpplib.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcpplib.c?ref=956d69504d77d301015532d2f0564213f0efc706", "patch": "@@ -16,79 +16,80 @@ GNU General Public License for more details.\n \n You should have received a copy of the GNU General Public License\n along with this program; if not, write to the Free Software\n-Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.\n-\n- In other words, you are welcome to use, share and improve this program.\n- You are forbidden to forbid anyone else to use, share and improve\n- what you give them.   Help stamp out software-hoarding!  */\n-\n-#ifdef EMACS\n-#define NO_SHORTNAMES\n-#include \"../src/config.h\"\n-#ifdef open\n-#undef open\n-#undef read\n-#undef write\n-#endif /* open */\n-#endif /* EMACS */\n-\n-/* The macro EMACS is defined when cpp is distributed as part of Emacs,\n-   for the sake of machines with limited C compilers.  */\n-#ifndef EMACS\n-#include \"config.h\"\n-#endif /* not EMACS */\n-\n-#ifndef STANDARD_INCLUDE_DIR\n-#define STANDARD_INCLUDE_DIR \"/usr/include\"\n-#endif\n-\n-#if 0 /* We can't get ptrdiff_t, so I arranged not to need PTR_INT_TYPE.  */\n-#ifdef __STDC__\n-#define PTR_INT_TYPE ptrdiff_t\n-#else\n-#define PTR_INT_TYPE long\n-#endif\n-#endif /* 0 */\n+Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.  */\n \n-#include \"cpplib.h\"\n-#include \"cpphash.h\"\n+#include \"config.h\"\n \n #ifndef STDC_VALUE\n #define STDC_VALUE 1\n #endif\n \n-/* By default, colon separates directories in a path.  */\n-#ifndef PATH_SEPARATOR\n-#define PATH_SEPARATOR ':'\n-#endif\n-\n #include <ctype.h>\n #include <stdio.h>\n #include <signal.h>\n-#ifdef __STDC__\n+\n+#ifdef HAVE_STDLIB_H\n #include <stdlib.h>\n #endif\n \n-#ifndef VMS\n-#ifndef USG\n-#include <sys/time.h>\t\t/* for __DATE__ and __TIME__ */\n-#include <sys/resource.h>\n+#ifdef TIME_WITH_SYS_TIME\n+# include <sys/time.h>\n+# include <time.h>\n #else\n+# if HAVE_SYS_TIME_H\n+# include <sys/time.h>\n+# else\n+#  include <time.h>\n+#endif\n+#endif\n+\n+#ifdef HAVE_SYS_TIMES_H\n #include <sys/times.h>\n-#include <time.h>\n-#include <fcntl.h>\n-#endif /* USG */\n-#endif /* not VMS */\n+#endif\n+\n+#ifdef HAVE_SYS_RESOURCE_H\n+# include <sys/resource.h>\n+#endif\n+\n+#ifdef HAVE_FCNTL_H\n+# include <fcntl.h>\n+#endif\n \n #if HAVE_LIMITS_H\n # include <limits.h>\n #endif\n \n+#ifdef HAVE_STDLIB_H\n+# include <stdlib.h>\n+#endif\n+\n+#ifdef HAVE_STRING_H\n+# include <string.h>\n+# else\n+# ifdef HAVE_STRINGS_H\n+#  include <strings.h>\n+#endif\n+#endif\n+\n /* This defines \"errno\" properly for VMS, and gives us EACCES.  */\n #include <errno.h>\n \n+#include \"cpplib.h\"\n+#include \"cpphash.h\"\n+#include \"gansidecl.h\"\n+\n+#ifdef NEED_DECLARATION_INDEX\n extern char *index ();\n+#endif\n+\n+#ifdef NEED_DECLARATION_RINDEX\n extern char *rindex ();\n+#endif\n+\n+#ifdef NEED_DECLARATION_GETENV\n+extern char *getenv ();\n+#endif\n+\n extern char *update_path ();\n \n #ifndef O_RDONLY\n@@ -130,24 +131,14 @@ extern char *update_path ();\n #define S_ISDIR(m) (((m) & S_IFMT) == S_IFDIR)\n #endif\n \n-/* Define a generic NULL if one hasn't already been defined.  */\n-\n-#ifndef NULL\n-#define NULL 0\n-#endif\n-\n-#ifndef GENERIC_PTR\n-#if defined (USE_PROTOTYPES) ? USE_PROTOTYPES : defined (__STDC__)\n-#define GENERIC_PTR void *\n-#else\n-#define GENERIC_PTR char *\n-#endif\n+/* By default, colon separates directories in a path.  */\n+#ifndef PATH_SEPARATOR\n+#define PATH_SEPARATOR ':'\n #endif\n \n-#ifndef NULL_PTR\n-#define NULL_PTR ((GENERIC_PTR) 0)\n+#ifndef STANDARD_INCLUDE_DIR\n+#define STANDARD_INCLUDE_DIR \"/usr/include\"\n #endif\n-\n #ifndef INCLUDE_LEN_FUDGE\n #define INCLUDE_LEN_FUDGE 0\n #endif\n@@ -290,7 +281,6 @@ static int compare_token_lists ();\n static HOST_WIDE_INT eval_if_expression ();\n static int change_newlines ();\n extern int hashf ();\n-static int file_size_and_mode ();\n static struct arglist *read_token_list ();\n static void free_token_list ();\n static int safe_read ();\n@@ -311,7 +301,6 @@ enum file_change_code {same_file, enter_file, leave_file};\n \n extern HOST_WIDE_INT cpp_parse_expr PARAMS ((cpp_reader *));\n \n-extern char *getenv ();\n extern FILE *fdopen ();\n extern char *version_string;\n extern struct tm *localtime ();\n@@ -810,6 +799,7 @@ cpp_options_init (opts)\n   opts->print_include_names = 0;\n   opts->dump_macros = dump_none;\n   opts->no_output = 0;\n+  opts->remap = 0;\n   opts->cplusplus = 0;\n   opts->cplusplus_comments = 0;\n \n@@ -4727,8 +4717,8 @@ cpp_get_token (pfile)\n \t      }\n \n \t      /* OK, now bring us back to the state we were in before we entered\n-\t\t this branch.  We need #line b/c the newline for the pragma\n-\t\t could fuck things up.  */\n+\t\t this branch.  We need #line because the newline for the pragma\n+\t\t could mess things up.  */\n \t      output_line_command (pfile, 0, same_file);\n \t      *(obp++) = ' ';\t/* just in case, if comments are copied thru */\n \t      *(obp++) = '/';\n@@ -5522,65 +5512,68 @@ open_include_file (pfile, filename, searchptr)\n      char *filename;\n      struct file_name_list *searchptr;\n {\n-  register struct file_name_map *map;\n-  register char *from;\n-  char *p, *dir;\n-\n-  if (searchptr && ! searchptr->got_name_map)\n+  if (CPP_OPTIONS (pfile)->remap)\n     {\n-      searchptr->name_map = read_name_map (pfile,\n-\t\t\t\t\t   searchptr->fname\n-\t\t\t\t\t   ? searchptr->fname : \".\");\n-      searchptr->got_name_map = 1;\n-    }\n+      register struct file_name_map *map;\n+      register char *from;\n+      char *p, *dir;\n \n-  /* First check the mapping for the directory we are using.  */\n-  if (searchptr && searchptr->name_map)\n-    {\n-      from = filename;\n-      if (searchptr->fname)\n-\tfrom += strlen (searchptr->fname) + 1;\n-      for (map = searchptr->name_map; map; map = map->map_next)\n+      if (searchptr && ! searchptr->got_name_map)\n+\t{\n+\t  searchptr->name_map = read_name_map (pfile,\n+\t\t\t\t\t       searchptr->fname\n+\t\t\t\t\t       ? searchptr->fname : \".\");\n+\t  searchptr->got_name_map = 1;\n+\t}\n+\n+      /* First check the mapping for the directory we are using.  */\n+      if (searchptr && searchptr->name_map)\n \t{\n-\t  if (! strcmp (map->map_from, from))\n+\t  from = filename;\n+\t  if (searchptr->fname)\n+\t    from += strlen (searchptr->fname) + 1;\n+\t  for (map = searchptr->name_map; map; map = map->map_next)\n \t    {\n-\t      /* Found a match.  */\n-\t      return open (map->map_to, O_RDONLY, 0666);\n+\t      if (! strcmp (map->map_from, from))\n+\t\t{\n+\t\t  /* Found a match.  */\n+\t\t  return open (map->map_to, O_RDONLY, 0666);\n+\t\t}\n \t    }\n \t}\n-    }\n \n-  /* Try to find a mapping file for the particular directory we are\n-     looking in.  Thus #include <sys/types.h> will look up sys/types.h\n-     in /usr/include/header.gcc and look up types.h in\n-     /usr/include/sys/header.gcc.  */\n-  p = rindex (filename, '/');\n-  if (! p)\n-    p = filename;\n-  if (searchptr\n-      && searchptr->fname\n-      && strlen (searchptr->fname) == p - filename\n-      && ! strncmp (searchptr->fname, filename, p - filename))\n-    {\n-      /* FILENAME is in SEARCHPTR, which we've already checked.  */\n-      return open (filename, O_RDONLY, 0666);\n-    }\n+      /* Try to find a mapping file for the particular directory we are\n+\t looking in.  Thus #include <sys/types.h> will look up sys/types.h\n+\t in /usr/include/header.gcc and look up types.h in\n+\t /usr/include/sys/header.gcc.  */\n+      p = rindex (filename, '/');\n+      if (! p)\n+\tp = filename;\n+      if (searchptr\n+\t  && searchptr->fname\n+\t  && strlen (searchptr->fname) == p - filename\n+\t  && ! strncmp (searchptr->fname, filename, p - filename))\n+\t{\n+\t  /* FILENAME is in SEARCHPTR, which we've already checked.  */\n+\t  return open (filename, O_RDONLY, 0666);\n+\t}\n \n-  if (p == filename)\n-    {\n-      dir = \".\";\n-      from = filename;\n-    }\n-  else\n-    {\n-      dir = (char *) alloca (p - filename + 1);\n-      bcopy (filename, dir, p - filename);\n-      dir[p - filename] = '\\0';\n-      from = p + 1;\n+      if (p == filename)\n+\t{\n+\t  dir = \".\";\n+\t  from = filename;\n+\t}\n+      else\n+\t{\n+\t  dir = (char *) alloca (p - filename + 1);\n+\t  bcopy (filename, dir, p - filename);\n+\t  dir[p - filename] = '\\0';\n+\t  from = p + 1;\n+\t}\n+      for (map = read_name_map (pfile, dir); map; map = map->map_next)\n+\tif (! strcmp (map->map_from, from))\n+\t  return open (map->map_to, O_RDONLY, 0666);\n     }\n-  for (map = read_name_map (pfile, dir); map; map = map->map_next)\n-    if (! strcmp (map->map_from, from))\n-      return open (map->map_to, O_RDONLY, 0666);\n \n   return open (filename, O_RDONLY, 0666);\n }\n@@ -5604,14 +5597,14 @@ finclude (pfile, f, fname, system_header_p, dirptr)\n      int system_header_p;\n      struct file_name_list *dirptr;\n {\n-  int st_mode;\n-  long st_size;\n+  struct stat st;\n+  size_t st_size;\n   long i;\n   int length;\n   cpp_buffer *fp;\t\t\t/* For input stack frame */\n   int missing_newline = 0;\n \n-  if (file_size_and_mode (f, &st_mode, &st_size) < 0)\n+  if (fstat (f, &st) < 0)\n     {\n       cpp_perror_with_name (pfile, fname);\n       close (f);\n@@ -5630,7 +5623,13 @@ finclude (pfile, f, fname, system_header_p, dirptr)\n   fp->colno = 1;\n   fp->cleanup = file_cleanup;\n \n-  if (S_ISREG (st_mode)) {\n+  if (S_ISREG (st.st_mode)) {\n+    st_size = (size_t) st.st_size;\n+    if (st_size != st.st_size || st_size + 2 < st_size) {\n+      cpp_error (pfile, \"file `%s' too large\", fname);\n+      close (f);\n+      return 0;\n+    }\n     fp->buf = (U_CHAR *) xmalloc (st_size + 2);\n     fp->alimit = fp->buf + st_size + 2;\n     fp->cur = fp->buf;\n@@ -5641,7 +5640,7 @@ finclude (pfile, f, fname, system_header_p, dirptr)\n     fp->rlimit = fp->buf + length;\n     if (length < 0) goto nope;\n   }\n-  else if (S_ISDIR (st_mode)) {\n+  else if (S_ISDIR (st.st_mode)) {\n     cpp_error (pfile, \"directory `%s' specified in #include\", fname);\n     close (f);\n     return 0;\n@@ -5719,7 +5718,7 @@ finclude (pfile, f, fname, system_header_p, dirptr)\n /* This is called after options have been processed.\n  * Check options for consistency, and setup for processing input\n  * from the file named FNAME.  (Use standard input if FNAME==NULL.)\n- * Return 1 on succes, 0 on failure.\n+ * Return 1 on success, 0 on failure.\n  */\n \n int\n@@ -6747,6 +6746,11 @@ cpp_handle_options (pfile, argc, argv)\n #endif\n \tbreak;\n \n+      case 'r':\n+\tif (!strcmp (argv[i], \"-remap\"))\n+\t  opts->remap = 1;\n+\tbreak;\n+\n       case 'u':\n \t/* Sun compiler passes undocumented switch \"-undef\".\n \t   Let's assume it means to inhibit the predefined symbols.  */\n@@ -7207,23 +7211,6 @@ free_token_list (tokens)\n   }\n }\n \f\n-/* Get the file-mode and data size of the file open on FD\n-   and store them in *MODE_POINTER and *SIZE_POINTER.  */\n-\n-static int\n-file_size_and_mode (fd, mode_pointer, size_pointer)\n-     int fd;\n-     int *mode_pointer;\n-     long int *size_pointer;\n-{\n-  struct stat sbuf;\n-\n-  if (fstat (fd, &sbuf) < 0) return (-1);\n-  if (mode_pointer) *mode_pointer = sbuf.st_mode;\n-  if (size_pointer) *size_pointer = sbuf.st_size;\n-  return 0;\n-}\n-\n /* Read LEN bytes at PTR from descriptor DESC, for file FILENAME,\n    retrying if necessary.  If MAX_READ_LEN is defined, read at most\n    that bytes at a time.  Return a negative value if an error occurs,"}, {"sha": "bccf51d174e0317d647e7392bf13ac8b9b60dc0b", "filename": "gcc/crtstuff.c", "status": "modified", "additions": 6, "deletions": 3, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/956d69504d77d301015532d2f0564213f0efc706/gcc%2Fcrtstuff.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/956d69504d77d301015532d2f0564213f0efc706/gcc%2Fcrtstuff.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcrtstuff.c?ref=956d69504d77d301015532d2f0564213f0efc706", "patch": "@@ -1,6 +1,6 @@\n /* Specialized bits of code needed to support construction and\n    destruction of file-scope objects in C++ code.\n-   Copyright (C) 1991, 1994, 1995, 1996 Free Software Foundation, Inc.\n+   Copyright (C) 1991, 1994, 1995, 1996, 1997 Free Software Foundation, Inc.\n    Contributed by Ron Guilmette (rfg@monkeys.com).\n \n This file is part of GNU CC.\n@@ -53,6 +53,8 @@ Boston, MA 02111-1307, USA.  */\n \n #include \"tm.h\"\n #include \"defaults.h\"\n+#include <stddef.h>\n+#include \"frame.h\"\n \n /* Provide default definitions for the pseudo-ops used to switch to the\n    .ctors and .dtors sections.\n@@ -167,7 +169,8 @@ fini_dummy ()\n static void\n frame_dummy ()\n {\n-  __register_frame (__EH_FRAME_BEGIN__);\n+  static struct object object;\n+  __register_frame (__EH_FRAME_BEGIN__, &object);\n }\n \n static void\n@@ -329,7 +332,7 @@ init_dummy ()\n #endif\n   asm (TEXT_SECTION_ASM_OP);\n \n-/* This is a kludge. The i386 Linux dynamic linker needs ___brk_addr,\n+/* This is a kludge. The i386 GNU/Linux dynamic linker needs ___brk_addr,\n    __environ and atexit (). We have to make sure they are in the .dynsym\n    section. We accomplish it by making a dummy call here. This\n    code is never reached.  */"}, {"sha": "9b1ffe11dd5ab60b4846c5fdbfe4c922b51e5a37", "filename": "gcc/cse.c", "status": "modified", "additions": 11, "deletions": 2, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/956d69504d77d301015532d2f0564213f0efc706/gcc%2Fcse.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/956d69504d77d301015532d2f0564213f0efc706/gcc%2Fcse.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcse.c?ref=956d69504d77d301015532d2f0564213f0efc706", "patch": "@@ -30,6 +30,7 @@ Boston, MA 02111-1307, USA.  */\n #include \"real.h\"\n #include \"insn-config.h\"\n #include \"recog.h\"\n+#include \"expr.h\"\n \n #include <setjmp.h>\n \n@@ -3390,6 +3391,10 @@ simplify_binary_operation (code, mode, op0, op1)\n       f1 = real_value_truncate (mode, f1);\n \n #ifdef REAL_ARITHMETIC\n+#ifndef REAL_INFINITY\n+      if (code == DIV && REAL_VALUES_EQUAL (f1, dconst0))\n+\treturn 0;\n+#endif\n       REAL_ARITHMETIC (value, rtx_to_tree_code (code), f0, f1);\n #else\n       switch (code)\n@@ -4769,6 +4774,10 @@ fold_rtx (x, insn)\n \t since they are used only for lists of args\n \t in a function call's REG_EQUAL note.  */\n     case EXPR_LIST:\n+      /* Changing anything inside an ADDRESSOF is incorrect; we don't\n+\t want to (e.g.,) make (addressof (const_int 0)) just because\n+\t the location is known to be zero.  */\n+    case ADDRESSOF:\n       return x;\n \n #ifdef HAVE_cc0\n@@ -5019,7 +5028,7 @@ fold_rtx (x, insn)\n \t\t && GET_CODE (XEXP (addr, 1)) == SYMBOL_REF)\n \t  base = XEXP (addr, 1);\n \telse if (GET_CODE (addr) == ADDRESSOF)\n-\t  XEXP (x, 0) = addr;\n+\t  return change_address (x, VOIDmode, addr);\n \n \t/* If this is a constant pool reference, we can fold it into its\n \t   constant to allow better value tracking.  */\n@@ -6410,7 +6419,7 @@ cse_insn (insn, in_libcall_block)\n \t a pseudo that is set more than once, do not record SRC.  Using\n \t SRC as a replacement for anything else will be incorrect in that\n \t situation.  Note that this usually occurs only for stack slots,\n-\t in which case all the RTL would be refering to SRC, so we don't\n+\t in which case all the RTL would be referring to SRC, so we don't\n \t lose any optimization opportunities by not having SRC in the\n \t hash table.  */\n "}, {"sha": "db19904802c017da9735b93c10c9a774d1c99dc3", "filename": "gcc/dwarf2.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/956d69504d77d301015532d2f0564213f0efc706/gcc%2Fdwarf2.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/956d69504d77d301015532d2f0564213f0efc706/gcc%2Fdwarf2.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdwarf2.h?ref=956d69504d77d301015532d2f0564213f0efc706", "patch": "@@ -444,8 +444,8 @@ enum dwarf_inline_attribute\n     DW_INL_declared_inlined = 3\n   };\n \n-/* descriminant lists */\n-enum dwarf_descrim_list\n+/* discriminant lists */\n+enum dwarf_discrim_list\n   {\n     DW_DSC_label = 0,\n     DW_DSC_range = 1"}, {"sha": "cb16ac48b95fc8dad7741ff519860389420539e6", "filename": "gcc/dwarf2out.c", "status": "modified", "additions": 27, "deletions": 20, "changes": 47, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/956d69504d77d301015532d2f0564213f0efc706/gcc%2Fdwarf2out.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/956d69504d77d301015532d2f0564213f0efc706/gcc%2Fdwarf2out.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdwarf2out.c?ref=956d69504d77d301015532d2f0564213f0efc706", "patch": "@@ -254,7 +254,7 @@ static unsigned reg_number\t\tPROTO((rtx));\n \n /* Definitions of defaults for various types of primitive assembly language\n    output operations.  These may be overridden from within the tm.h file,\n-   but typically, that is unecessary.  */\n+   but typically, that is unnecessary.  */\n \n #ifndef ASM_OUTPUT_SECTION\n #define ASM_OUTPUT_SECTION(FILE, SECTION) \\\n@@ -1564,7 +1564,7 @@ output_call_frame_info (for_eh)\n   /* We're going to be generating comments, so turn on app.  */\n   if (flag_debug_asm)\n     app_enable ();\n- \n+\n   if (for_eh)\n     {\n #ifdef EH_FRAME_SECTION\n@@ -1929,7 +1929,7 @@ typedef struct dw_fp_struct\n dw_float_const;\n \n /* Each entry in the line_info_table maintains the file and\n-   line nuber associated with the label generated for that\n+   line number associated with the label generated for that\n    entry.  The label gives the PC value associated with\n    the line number entry.  */\n \n@@ -1950,7 +1950,7 @@ typedef struct dw_separate_line_info_struct\n }\n dw_separate_line_info_entry;\n \n-/* The dw_val_node describes an attibute's value, as it is\n+/* The dw_val_node describes an attribute's value, as it is\n    represented internally.  */\n \n typedef struct dw_val_struct\n@@ -2143,7 +2143,7 @@ static unsigned next_block_number = 2;\n \n /* A pointer to the base of a table of references to DIE's that describe\n    declarations.  The table is indexed by DECL_UID() which is a unique\n-   number, indentifying each decl.  */\n+   number identifying each decl.  */\n static dw_die_ref *decl_die_table;\n \n /* Number of elements currently allocated for the decl_die_table.  */\n@@ -2166,7 +2166,7 @@ static tree *decl_scope_table;\n /* Number of elements currently allocated for the decl_scope_table.  */\n static unsigned decl_scope_table_allocated;\n \n-/* Current level of nesting of declataion scopes.  */\n+/* Current level of nesting of declaration scopes.  */\n static unsigned decl_scope_depth;\n \n /* Size (in elements) of increments by which we may expand the\n@@ -2312,7 +2312,7 @@ static void add_AT_addr\t\t\tPROTO((dw_die_ref,\n \t\t\t\t\t       enum dwarf_attribute, char *));\n static void add_AT_lbl_id\t\tPROTO((dw_die_ref,\n \t\t\t\t\t       enum dwarf_attribute, char *));\n-static void add_AT_setion_offset\tPROTO((dw_die_ref,\n+static void add_AT_section_offset\tPROTO((dw_die_ref,\n \t\t\t\t\t       enum dwarf_attribute, char *));\n static int is_extern_subr_die\t\tPROTO((dw_die_ref));\n static dw_attr_ref get_AT\t\tPROTO((dw_die_ref,\n@@ -2343,7 +2343,7 @@ static void add_loc_descr\t\tPROTO((dw_loc_descr_ref *,\n static void print_spaces\t\tPROTO((FILE *));\n static void print_die\t\t\tPROTO((dw_die_ref, FILE *));\n static void print_dwarf_line_table\tPROTO((FILE *));\n-static void add_sibling_atttributes\tPROTO((dw_die_ref));\n+static void add_sibling_attributes\tPROTO((dw_die_ref));\n static void build_abbrev_table\t\tPROTO((dw_die_ref));\n static unsigned long size_of_string\tPROTO((char *));\n static unsigned long size_of_loc_descr\tPROTO((dw_loc_descr_ref));\n@@ -2470,7 +2470,7 @@ static unsigned lookup_filename\t\tPROTO((char *));\n #define STR_SECTION\t\t\".debug_str\"\n #endif\n \n-/* Standerd ELF section names for compiled code and data.  */\n+/* Standard ELF section names for compiled code and data.  */\n #ifndef TEXT_SECTION\n #define TEXT_SECTION\t\t\".text\"\n #endif\n@@ -2681,7 +2681,7 @@ addr_to_string (x)\n   return xstrdup (buf);\n }\n \n-/* Test if rtl node points to a psuedo register.  */\n+/* Test if rtl node points to a pseudo register.  */\n \n static inline int\n is_pseudo_reg (rtl)\n@@ -4120,7 +4120,7 @@ print_spaces (outfile)\n   fprintf (outfile, \"%*s\", print_indent, \"\");\n }\n \n-/* Print the information assoaciated with a given DIE, and its children.\n+/* Print the information associated with a given DIE, and its children.\n    This routine is a debugging aid only.  */\n \n static void\n@@ -4569,10 +4569,10 @@ size_of_die (die)\n   return size;\n }\n \n-/* Size the debgging information associted with a given DIE.\n+/* Size the debugging information associated with a given DIE.\n    Visits the DIE's children recursively.  Updates the global\n    variable next_die_offset, on each time through.  Uses the\n-   current value of next_die_offset to updete the die_offset\n+   current value of next_die_offset to update the die_offset\n    field in each DIE.  */\n \n static void\n@@ -4802,7 +4802,7 @@ size_of_pubnames ()\n   return size;\n }\n \n-/* Return the size of the information in the .debug_aranges seciton.  */\n+/* Return the size of the information in the .debug_aranges section.  */\n \n static unsigned long\n size_of_aranges ()\n@@ -6423,7 +6423,7 @@ mem_loc_descriptor (rtl)\n   return mem_loc_result;\n }\n \n-/* Return a descriptor that describes the concatination of two locations.\n+/* Return a descriptor that describes the concatenation of two locations.\n    This is typically a complex variable.  */\n \n static dw_loc_descr_ref\n@@ -6940,7 +6940,7 @@ add_location_or_const_value_attribute (die, decl)\n      get valid non-NULL DECL_INCOMING_RTL values, but integrate.c\n      doesn't currently generate these values for inlined instances of\n      inline function parameters, so when we see such cases, we are\n-     just SOL (shit-out-of-luck) for the time being (until integrate.c\n+     just out-of-luck for the time being (until integrate.c\n      gets fixed).  */\n \n   /* Use DECL_RTL as the \"location\" unless we find something better.  */\n@@ -7567,7 +7567,7 @@ decl_start_label (decl)\n   return fnname;\n }\n \f\n-/* These routines generate the internnal representation of the DIE's for\n+/* These routines generate the internal representation of the DIE's for\n    the compilation unit.  Debugging information is collected by walking\n    the declaration trees passed in from dwarf2out_decl().  */\n \n@@ -8562,7 +8562,7 @@ gen_inheritance_die (binfo, context_die)\n     add_AT_unsigned (die, DW_AT_accessibility, DW_ACCESS_protected);\n }\n \n-/* Genearate a DIE for a class member.  */\n+/* Generate a DIE for a class member.  */\n \n static void\n gen_member_die (type, context_die)\n@@ -8768,6 +8768,13 @@ gen_type_die (type, context_die)\n \n     case POINTER_TYPE:\n     case REFERENCE_TYPE:\n+      /* We must set TREE_ASM_WRITTEN in case this is a recursive type.  This\n+\t ensures that the gen_type_die recursion will terminate even if the\n+\t type is recursive.  Recursive types are possible in Ada.  */\n+      /* ??? We could perhaps do this for all types before the switch\n+\t statement.  */\n+      TREE_ASM_WRITTEN (type) = 1;\n+\n       /* For these types, all that is required is that we output a DIE (or a\n          set of DIEs) to represent the \"basis\" type.  */\n       gen_type_die (TREE_TYPE (type), context_die);\n@@ -9242,11 +9249,11 @@ dwarf2out_decl (decl)\n       /* What we would really like to do here is to filter out all mere\n          file-scope declarations of file-scope functions which are never\n          referenced later within this translation unit (and keep all of ones\n-         that *are* referenced later on) but we aren't clarvoiant, so we have \n+         that *are* referenced later on) but we aren't clairvoyant, so we have \n          no idea which functions will be referenced in the future (i.e. later \n          on within the current translation unit). So here we just ignore all\n          file-scope function declarations which are not also definitions.  If \n-         and when the debugger needs to know something about these funcstion, \n+         and when the debugger needs to know something about these functions,\n          it wil have to hunt around and find the DWARF information associated \n          with the definition of the function. Note that we can't just check\n          `DECL_EXTERNAL' to find out which FUNCTION_DECL nodes represent"}, {"sha": "d7eef70444ce67eeb0a29d2ba64974ee14bfbcea", "filename": "gcc/dwarfout.c", "status": "modified", "additions": 20, "deletions": 3, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/956d69504d77d301015532d2f0564213f0efc706/gcc%2Fdwarfout.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/956d69504d77d301015532d2f0564213f0efc706/gcc%2Fdwarfout.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdwarfout.c?ref=956d69504d77d301015532d2f0564213f0efc706", "patch": "@@ -46,10 +46,27 @@ extern time_t time ();\n #endif /* !defined(POSIX) */\n #endif /* defined(DWARF_TIMESTAMPS) */\n \n+#ifdef HAVE_STDLIB_H\n+#include <stdlib.h>\n+#endif\n+\n+#ifdef HAVE_STRING_H\n+#include <string.h>\n+#else\n+#ifdef HAVE_STRINGS_H\n+#include <strings.h>\n+#endif\n+#endif\n+\n extern char *getpwd ();\n \n+#ifdef NEED_DECLARATION_INDEX\n extern char *index ();\n+#endif\n+\n+#ifdef NEED_DECLARATION_RINDEX\n extern char *rindex ();\n+#endif\n \n /* IMPORTANT NOTE: Please see the file README.DWARF for important details\n    regarding the GNU implementation of Dwarf.  */\n@@ -354,7 +371,7 @@ static inline void low_pc_attribute\tPROTO((char *));\n static inline void high_pc_attribute\tPROTO((char *));\n static inline void body_begin_attribute\tPROTO((char *));\n static inline void body_end_attribute\tPROTO((char *));\n-static inline void langauge_attribute\tPROTO((unsigned));\n+static inline void language_attribute\tPROTO((unsigned));\n static inline void member_attribute\tPROTO((tree));\n static inline void string_length_attribute PROTO((tree));\n static inline void comp_dir_attribute\tPROTO((char *));\n@@ -414,7 +431,7 @@ static void output_block\t\tPROTO((tree, int));\n static void output_decls_for_scope\tPROTO((tree, int));\n static void output_decl\t\t\tPROTO((tree, tree));\n static void shuffle_filename_entry\tPROTO((filename_entry *));\n-static void geneate_new_sfname_entry\tPROTO((void));\n+static void generate_new_sfname_entry\tPROTO((void));\n static unsigned lookup_filename\t\tPROTO((char *));\n static void generate_srcinfo_entry\tPROTO((unsigned, unsigned));\n static void generate_macinfo_entry\tPROTO((char *, char *));\n@@ -2364,7 +2381,7 @@ location_or_const_value_attribute (decl)\n      shouldn't be happening.  All PARM_DECL nodes should get valid non-NULL\n      DECL_INCOMING_RTL values, but integrate.c doesn't currently generate\n      these values for inlined instances of inline function parameters, so\n-     when we see such cases, we are just SOL (shit-out-of-luck) for the time\n+     when we see such cases, we are just out-of-luck for the time\n      being (until integrate.c gets fixed).\n   */\n "}, {"sha": "941c9d089af7f03f5046f4c36e8aa8ea75ad3260", "filename": "gcc/emit-rtl.c", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/956d69504d77d301015532d2f0564213f0efc706/gcc%2Femit-rtl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/956d69504d77d301015532d2f0564213f0efc706/gcc%2Femit-rtl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Femit-rtl.c?ref=956d69504d77d301015532d2f0564213f0efc706", "patch": "@@ -258,6 +258,10 @@ extern int rtx_equal_function_value_matters;\n    whether we actually emitted it or not.  */\n extern char *emit_filename;\n extern int emit_lineno;\n+\n+static rtx make_jump_insn_raw\t\tPROTO((rtx));\n+static rtx make_call_insn_raw\t\tPROTO((rtx));\n+static rtx find_line_node\t\tPROTO((rtx));\n \f\n /* rtx gen_rtx (code, mode, [element1, ..., elementn])\n **"}, {"sha": "a39d8e5544cec5996d34d9becf71321dafea8bc6", "filename": "gcc/except.c", "status": "modified", "additions": 12, "deletions": 6, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/956d69504d77d301015532d2f0564213f0efc706/gcc%2Fexcept.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/956d69504d77d301015532d2f0564213f0efc706/gcc%2Fexcept.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fexcept.c?ref=956d69504d77d301015532d2f0564213f0efc706", "patch": "@@ -23,7 +23,7 @@ Boston, MA 02111-1307, USA.  */\n /* An exception is an event that can be signaled from within a\n    function. This event can then be \"caught\" or \"trapped\" by the\n    callers of this function. This potentially allows program flow to\n-   be transferred to any arbitrary code assocated with a function call\n+   be transferred to any arbitrary code associated with a function call\n    several levels up the stack.\n \n    The intended use for this mechanism is for signaling \"exceptional\n@@ -71,7 +71,7 @@ Boston, MA 02111-1307, USA.  */\n    perform tasks such as destruction of objects allocated on the\n    stack.\n \n-   In the current implementaion, cleanups are handled by allocating an\n+   In the current implementation, cleanups are handled by allocating an\n    exception region for the area that the cleanup is designated for,\n    and the handler for the region performs the cleanup and then\n    rethrows the exception to the outer exception region. From the\n@@ -279,7 +279,7 @@ Boston, MA 02111-1307, USA.  */\n    when the unwinder isn't needed.  __unwind_function is used as an\n    action of last resort.  If no other method can be used for\n    unwinding, __unwind_function is used.  If it cannot unwind, it\n-   should call __teminate.\n+   should call __terminate.\n \n    By default, if the target-specific backend doesn't supply a definition\n    for __unwind_function and doesn't support DWARF2_UNWIND_INFO, inlined\n@@ -377,7 +377,7 @@ Boston, MA 02111-1307, USA.  */\n    for all the machine specific details.  There is no variable context\n    of a throw, just the one implied by the dynamic handler stack\n    pointed to by the dynamic handler chain.  There is no exception\n-   table, and no calls to __register_excetpions.  __sjthrow is used\n+   table, and no calls to __register_exceptions.  __sjthrow is used\n    instead of __throw, and it works by using the dynamic handler\n    chain, and longjmp.  -fasynchronous-exceptions has no effect, as\n    the elimination of trivial exception regions is not yet performed.\n@@ -443,7 +443,7 @@ rtx current_function_dhc;\n \n rtx current_function_dcc;\n \n-/* A stack used for keeping track of the currectly active exception\n+/* A stack used for keeping track of the currently active exception\n    handling region.  As each exception region is started, an entry\n    describing the region is pushed onto this stack.  The current\n    region can be found by looking at the top of the stack, and as we\n@@ -487,6 +487,11 @@ static tree protect_list;\n \n struct label_node *caught_return_label_stack = NULL;\n \n+/* Keeps track of the label used as the context of a throw to rethrow an\n+   exception to the outer exception region.  */\n+\n+struct label_node *outer_context_label_stack = NULL;\n+\n /* A random data area for the front end's own use.  */\n \n struct label_node *false_label_stack = NULL;\n@@ -1303,7 +1308,7 @@ expand_start_all_catch ()\n   label = build_decl (LABEL_DECL, NULL_TREE, NULL_TREE);\n \n   /* The label for the exception handling block that we will save.\n-     This is Lresume in the documention.  */\n+     This is Lresume in the documentation.  */\n   expand_label (label);\n   \n   /* Push the label that points to where normal flow is resumed onto\n@@ -1416,6 +1421,7 @@ expand_end_all_catch ()\n   /* This level of catch blocks is done, so set up the successful\n      catch jump label for the next layer of catch blocks.  */\n   pop_label_entry (&caught_return_label_stack);\n+  pop_label_entry (&outer_context_label_stack);\n \n   /* Add the new sequence of catches to the main one for this function.  */\n   push_to_sequence (catch_clauses);"}, {"sha": "46b1f47879e2f7360834bfabe9ccc900c9731c92", "filename": "gcc/except.h", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/956d69504d77d301015532d2f0564213f0efc706/gcc%2Fexcept.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/956d69504d77d301015532d2f0564213f0efc706/gcc%2Fexcept.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fexcept.h?ref=956d69504d77d301015532d2f0564213f0efc706", "patch": "@@ -226,6 +226,11 @@ extern void check_exception_handler_labels\tPROTO((void));\n \n extern struct label_node *caught_return_label_stack;\n \n+/* Keeps track of the label used as the context of a throw to rethrow an\n+   exception to the outer exception region.  */\n+\n+extern struct label_node *outer_context_label_stack;\n+\n /* A random area used for purposes elsewhere.  */\n \n extern struct label_node *false_label_stack;"}, {"sha": "8170c26b7cc6eadd50550b8d9244cbd8e6e03ab2", "filename": "gcc/expmed.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/956d69504d77d301015532d2f0564213f0efc706/gcc%2Fexpmed.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/956d69504d77d301015532d2f0564213f0efc706/gcc%2Fexpmed.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fexpmed.c?ref=956d69504d77d301015532d2f0564213f0efc706", "patch": "@@ -748,6 +748,8 @@ store_split_bit_field (op0, bitsize, bitpos, value, align)\n \t\t\t\t\t       ? GET_MODE (value)\n \t\t\t\t\t       : word_mode, value));\n     }\n+  else if (GET_CODE (value) == ADDRESSOF)\n+    value = copy_to_reg (value);\n \n   while (bitsdone < bitsize)\n     {"}, {"sha": "a84beb583f58be92a71d3b6f88660c26ea649654", "filename": "gcc/expr.c", "status": "modified", "additions": 85, "deletions": 38, "changes": 123, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/956d69504d77d301015532d2f0564213f0efc706/gcc%2Fexpr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/956d69504d77d301015532d2f0564213f0efc706/gcc%2Fexpr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fexpr.c?ref=956d69504d77d301015532d2f0564213f0efc706", "patch": "@@ -110,9 +110,13 @@ static rtx saveregs_value;\n /* Similarly for __builtin_apply_args.  */\n static rtx apply_args_value;\n \n+/* Don't check memory usage, since code is being emitted to check a memory\n+   usage.  Used when flag_check_memory_usage is true, to avoid infinite\n+   recursion.  */\n+static int in_check_memory_usage;\n+\n /* This structure is used by move_by_pieces to describe the move to\n    be performed.  */\n-\n struct move_by_pieces\n {\n   rtx to;\n@@ -2551,10 +2555,11 @@ emit_push_insn (x, mode, type, size, align, partial, reg, extra,\n \t  move_by_pieces (gen_rtx (MEM, BLKmode, gen_push_operand ()), xinner,\n \t\t\t  INTVAL (size) - used, align);\n \n-\t  if (flag_check_memory_usage)\n+\t  if (flag_check_memory_usage && ! in_check_memory_usage)\n \t    {\n \t      rtx temp;\n \t      \n+\t      in_check_memory_usage = 1;\n \t      temp = get_push_address (INTVAL(size) - used);\n \t      if (GET_CODE (x) == MEM && AGGREGATE_TYPE_P (type))\n \t\temit_library_call (chkr_copy_bitmap_libfunc, 1, VOIDmode, 3,\n@@ -2567,7 +2572,9 @@ emit_push_insn (x, mode, type, size, align, partial, reg, extra,\n \t\t\t\t   temp, ptr_mode,\n \t\t\t \t   GEN_INT (INTVAL(size) - used),\n \t\t\t\t   TYPE_MODE (sizetype),\n-\t\t\t\t   GEN_INT (MEMORY_USE_RW), QImode);\n+\t\t\t\t   GEN_INT (MEMORY_USE_RW),\n+\t\t\t\t   TYPE_MODE (integer_type_node));\n+\t      in_check_memory_usage = 0;\n \t    }\n \t}\n       else\n@@ -2604,10 +2611,11 @@ emit_push_insn (x, mode, type, size, align, partial, reg, extra,\n \t\t\t\t   plus_constant (gen_rtx (PLUS, Pmode,\n \t\t\t\t\t\t\t   args_addr, args_so_far),\n \t\t\t\t\t\t  skip));\n-\t  if (flag_check_memory_usage)\n+\t  if (flag_check_memory_usage && ! in_check_memory_usage)\n \t    {\n \t      rtx target;\n \t      \n+\t      in_check_memory_usage = 1;\n \t      target = copy_to_reg (temp);\n \t      if (GET_CODE (x) == MEM && AGGREGATE_TYPE_P (type))\n \t\temit_library_call (chkr_copy_bitmap_libfunc, 1, VOIDmode, 3,\n@@ -2618,7 +2626,9 @@ emit_push_insn (x, mode, type, size, align, partial, reg, extra,\n \t        emit_library_call (chkr_set_right_libfunc, 1, VOIDmode, 3,\n \t\t\t\t   target, ptr_mode,\n \t\t\t \t   size, TYPE_MODE (sizetype),\n-\t\t\t\t   GEN_INT (MEMORY_USE_RW), QImode);\n+\t\t\t\t   GEN_INT (MEMORY_USE_RW),\n+\t\t\t\t   TYPE_MODE (integer_type_node));\n+\t      in_check_memory_usage = 0;\n \t    }\n \n \t  /* TEMP is the address of the block.  Copy the data there.  */\n@@ -2813,8 +2823,9 @@ emit_push_insn (x, mode, type, size, align, partial, reg, extra,\n \n       emit_move_insn (gen_rtx (MEM, mode, addr), x);\n \n-      if (flag_check_memory_usage)\n+      if (flag_check_memory_usage && ! in_check_memory_usage)\n \t{\n+\t  in_check_memory_usage = 1;\n \t  if (target == 0)\n \t    target = get_push_address (GET_MODE_SIZE (mode));\n \n@@ -2829,7 +2840,9 @@ emit_push_insn (x, mode, type, size, align, partial, reg, extra,\n \t\t\t       target, ptr_mode,\n \t\t\t       GEN_INT (GET_MODE_SIZE (mode)),\n \t\t\t       TYPE_MODE (sizetype),\n-\t\t\t       GEN_INT (MEMORY_USE_RW), QImode);\n+\t\t\t       GEN_INT (MEMORY_USE_RW),\n+\t\t\t       TYPE_MODE (integer_type_node));\n+\t  in_check_memory_usage = 0;\n \t}\n     }\n \n@@ -2954,6 +2967,15 @@ expand_assignment (to, from, want_value, suggest_reg)\n #endif\n \t}\n \n+      if (TREE_CODE (to) == COMPONENT_REF\n+\t  && TREE_READONLY (TREE_OPERAND (to, 1)))\n+\t{\n+\t  if (offset = 0)\n+\t    to_rtx = copy_rtx (to_rtx);\n+\n+\t  RTX_UNCHANGING_P (to_rtx) = 1;\n+\t}\n+\n       /* Check the access.  */\n       if (flag_check_memory_usage && GET_CODE (to_rtx) == MEM)\n \t{\n@@ -2978,7 +3000,8 @@ expand_assignment (to, from, want_value, suggest_reg)\n \t    emit_library_call (chkr_check_addr_libfunc, 1, VOIDmode, 3,\n \t\t\t       to_addr, ptr_mode,\n \t\t\t       GEN_INT (size), TYPE_MODE (sizetype),\n-\t\t\t       GEN_INT (MEMORY_USE_WO), QImode);\n+\t\t\t       GEN_INT (MEMORY_USE_WO),\n+\t\t\t       TYPE_MODE (integer_type_node));\n \t}\n \n       result = store_field (to_rtx, bitsize, bitpos, mode1, from,\n@@ -3169,16 +3192,16 @@ store_expr (exp, target, want_value)\n       do_pending_stack_adjust ();\n       NO_DEFER_POP;\n       jumpifnot (TREE_OPERAND (exp, 0), lab1);\n-      start_cleanup_deferal ();\n+      start_cleanup_deferral ();\n       store_expr (TREE_OPERAND (exp, 1), target, 0);\n-      end_cleanup_deferal ();\n+      end_cleanup_deferral ();\n       emit_queue ();\n       emit_jump_insn (gen_jump (lab2));\n       emit_barrier ();\n       emit_label (lab1);\n-      start_cleanup_deferal ();\n+      start_cleanup_deferral ();\n       store_expr (TREE_OPERAND (exp, 2), target, 0);\n-      end_cleanup_deferal ();\n+      end_cleanup_deferral ();\n       emit_queue ();\n       emit_label (lab2);\n       OK_DEFER_POP;\n@@ -3309,7 +3332,8 @@ store_expr (exp, target, want_value)\n         emit_library_call (chkr_check_addr_libfunc, 1, VOIDmode, 3,\n \t\t\t   XEXP (target, 0), ptr_mode, \n \t\t\t   expr_size (exp), TYPE_MODE (sizetype),\n-\t\t\t   GEN_INT (MEMORY_USE_WO), QImode);\n+\t\t\t   GEN_INT (MEMORY_USE_WO), \n+\t\t\t   TYPE_MODE (integer_type_node));\n     }\n \n   /* If value was not generated in the target, store it there.\n@@ -3400,7 +3424,8 @@ store_expr (exp, target, want_value)\n \t\t    emit_library_call (chkr_check_addr_libfunc, 1, VOIDmode, 3,\n \t\t\t\t       addr, ptr_mode,\n \t\t\t\t       size, TYPE_MODE (sizetype),\n- \t\t\t\t       GEN_INT (MEMORY_USE_WO), QImode);\n+ \t\t\t\t       GEN_INT (MEMORY_USE_WO), \n+\t\t\t\t       TYPE_MODE (integer_type_node));\n #ifdef TARGET_MEM_FUNCTIONS\n \t\t  emit_library_call (memset_libfunc, 0, VOIDmode, 3,\n \t\t\t\t     addr, ptr_mode,\n@@ -3675,7 +3700,7 @@ store_constructor (exp, target, cleared)\n \n \t      if (contains_placeholder_p (offset))\n \t\toffset = build (WITH_RECORD_EXPR, sizetype,\n-\t\t\t\toffset, exp);\n+\t\t\t\toffset, make_tree (TREE_TYPE (exp), target));\n \n \t      offset = size_binop (FLOOR_DIV_EXPR, offset,\n \t\t\t\t   size_int (BITS_PER_UNIT));\n@@ -4403,9 +4428,14 @@ get_inner_reference (exp, pbitsize, pbitpos, poffset, pmode,\n \t      && TREE_INT_CST_HIGH (index) == 0)\n \t    *pbitpos += TREE_INT_CST_LOW (index);\n \t  else\n-\t    offset = size_binop (PLUS_EXPR, offset,\n-\t\t\t\t size_binop (FLOOR_DIV_EXPR, index,\n-\t\t\t\t\t     size_int (BITS_PER_UNIT)));\n+\t    {\n+\t      offset = size_binop (PLUS_EXPR, offset,\n+\t\t\t\t   size_binop (FLOOR_DIV_EXPR, index,\n+\t\t\t\t\t       size_int (BITS_PER_UNIT)));\n+\n+\t      if (contains_placeholder_p (offset))\n+\t\toffset = build (WITH_RECORD_EXPR, sizetype, offset, exp);\n+\t    }\n \t}\n       else if (TREE_CODE (exp) != NON_LVALUE_EXPR\n \t       && ! ((TREE_CODE (exp) == NOP_EXPR\n@@ -5016,7 +5046,8 @@ expand_expr (exp, target, tmode, modifier)\n \t\t\t       XEXP (DECL_RTL (exp), 0), ptr_mode,\n \t\t\t       GEN_INT (int_size_in_bytes (type)),\n \t\t\t       TYPE_MODE (sizetype),\n-\t\t\t       GEN_INT (memory_usage), QImode);\n+\t\t\t       GEN_INT (memory_usage),\n+\t\t\t       TYPE_MODE (integer_type_node));\n \t}\n \n       /* ... fall through ...  */\n@@ -5483,7 +5514,8 @@ expand_expr (exp, target, tmode, modifier)\n \t\t\t\t op0, ptr_mode,\n \t\t\t\t GEN_INT (int_size_in_bytes (type)),\n \t\t\t\t TYPE_MODE (sizetype),\n-\t\t\t\t GEN_INT (memory_usage), QImode);\n+\t\t\t\t GEN_INT (memory_usage),\n+\t\t\t\t TYPE_MODE (integer_type_node));\n \t  }\n \n \ttemp = gen_rtx (MEM, mode, op0);\n@@ -5737,7 +5769,8 @@ expand_expr (exp, target, tmode, modifier)\n \t\t\t\t     to, ptr_mode,\n \t\t\t\t     GEN_INT (size / BITS_PER_UNIT),\n \t\t\t\t     TYPE_MODE (sizetype),\n-\t\t\t\t     GEN_INT (memory_usage), QImode);\n+\t\t\t\t     GEN_INT (memory_usage), \n+\t\t\t\t     TYPE_MODE (integer_type_node));\n \t      }\n \t  }\n \n@@ -6859,7 +6892,7 @@ expand_expr (exp, target, tmode, modifier)\n \t    else\n \t      jumpifnot (TREE_OPERAND (exp, 0), op0);\n \n-\t    start_cleanup_deferal ();\n+\t    start_cleanup_deferral ();\n \t    if (binary_op && temp == 0)\n \t      /* Just touch the other operand.  */\n \t      expand_expr (TREE_OPERAND (binary_op, 1),\n@@ -6893,7 +6926,7 @@ expand_expr (exp, target, tmode, modifier)\n \t    store_expr (TREE_OPERAND (exp, 1), temp, 0);\n \t    jumpif (TREE_OPERAND (exp, 0), op0);\n \n-\t    start_cleanup_deferal ();\n+\t    start_cleanup_deferral ();\n \t    store_expr (TREE_OPERAND (exp, 2), temp, 0);\n \t    op1 = op0;\n \t  }\n@@ -6911,7 +6944,7 @@ expand_expr (exp, target, tmode, modifier)\n \t    store_expr (TREE_OPERAND (exp, 2), temp, 0);\n \t    jumpifnot (TREE_OPERAND (exp, 0), op0);\n \n-\t    start_cleanup_deferal ();\n+\t    start_cleanup_deferral ();\n \t    store_expr (TREE_OPERAND (exp, 1), temp, 0);\n \t    op1 = op0;\n \t  }\n@@ -6920,26 +6953,26 @@ expand_expr (exp, target, tmode, modifier)\n \t    op1 = gen_label_rtx ();\n \t    jumpifnot (TREE_OPERAND (exp, 0), op0);\n \n-\t    start_cleanup_deferal ();\n+\t    start_cleanup_deferral ();\n \t    if (temp != 0)\n \t      store_expr (TREE_OPERAND (exp, 1), temp, 0);\n \t    else\n \t      expand_expr (TREE_OPERAND (exp, 1),\n \t\t\t   ignore ? const0_rtx : NULL_RTX, VOIDmode, 0);\n-\t    end_cleanup_deferal ();\n+\t    end_cleanup_deferral ();\n \t    emit_queue ();\n \t    emit_jump_insn (gen_jump (op1));\n \t    emit_barrier ();\n \t    emit_label (op0);\n-\t    start_cleanup_deferal ();\n+\t    start_cleanup_deferral ();\n \t    if (temp != 0)\n \t      store_expr (TREE_OPERAND (exp, 2), temp, 0);\n \t    else\n \t      expand_expr (TREE_OPERAND (exp, 2),\n \t\t\t   ignore ? const0_rtx : NULL_RTX, VOIDmode, 0);\n \t  }\n \n-\tend_cleanup_deferal ();\n+\tend_cleanup_deferral ();\n \n \temit_queue ();\n \temit_label (op1);\n@@ -8855,7 +8888,8 @@ expand_builtin (exp, target, subtarget, mode, ignore)\n \t  if (flag_check_memory_usage)\n \t    emit_library_call (chkr_check_str_libfunc, 1, VOIDmode, 2,\n \t\t\t       src_rtx, ptr_mode,\n-\t\t\t       GEN_INT (MEMORY_USE_RO), QImode);\n+\t\t\t       GEN_INT (MEMORY_USE_RO),\n+\t\t\t       TYPE_MODE (integer_type_node));\n \n \t  char_rtx = const0_rtx;\n \t  char_mode = insn_operand_mode[(int)icode][2];\n@@ -9024,7 +9058,8 @@ expand_builtin (exp, target, subtarget, mode, ignore)\n \t    emit_library_call (chkr_check_addr_libfunc, 1, VOIDmode, 3,\n \t\t\t       dest_rtx, ptr_mode,\n \t\t\t       len_rtx, TYPE_MODE (sizetype),\n-\t\t\t       GEN_INT (MEMORY_USE_WO), QImode);\n+\t\t\t       GEN_INT (MEMORY_USE_WO),\n+\t\t\t       TYPE_MODE (integer_type_node));\n \n \n \t  /* There could be a void* cast on top of the object.  */\n@@ -9598,7 +9633,14 @@ expand_builtin_apply (function, arguments, argsize)\n \n   /* Push a new argument block and copy the arguments.  */\n   do_pending_stack_adjust ();\n-  emit_stack_save (SAVE_BLOCK, &old_stack_level, NULL_RTX);\n+\n+  /* Save the stack with nonlocal if available */\n+#ifdef HAVE_save_stack_nonlocal\n+  if (HAVE_save_stack_nonlocal)\n+    emit_stack_save (SAVE_NONLOCAL, &old_stack_level, NULL_RTX);\n+  else\n+#endif\n+    emit_stack_save (SAVE_BLOCK, &old_stack_level, NULL_RTX);\n \n   /* Push a block of memory onto the stack to store the memory arguments.\n      Save the address in a register, and copy the memory arguments.  ??? I\n@@ -9724,7 +9766,12 @@ expand_builtin_apply (function, arguments, argsize)\n     CALL_INSN_FUNCTION_USAGE (call_insn) = call_fusage;\n \n   /* Restore the stack.  */\n-  emit_stack_restore (SAVE_BLOCK, old_stack_level, NULL_RTX);\n+#ifdef HAVE_save_stack_nonlocal\n+  if (HAVE_save_stack_nonlocal)\n+    emit_stack_restore (SAVE_NONLOCAL, old_stack_level, NULL_RTX);\n+  else\n+#endif\n+    emit_stack_restore (SAVE_BLOCK, old_stack_level, NULL_RTX);\n \n   /* Return the address of the result block.  */\n   return copy_addr_to_reg (XEXP (result, 0));\n@@ -10249,18 +10296,18 @@ do_jump (exp, if_false_label, if_true_label)\n       if (if_false_label == 0)\n \tif_false_label = drop_through_label = gen_label_rtx ();\n       do_jump (TREE_OPERAND (exp, 0), if_false_label, NULL_RTX);\n-      start_cleanup_deferal ();\n+      start_cleanup_deferral ();\n       do_jump (TREE_OPERAND (exp, 1), if_false_label, if_true_label);\n-      end_cleanup_deferal ();\n+      end_cleanup_deferral ();\n       break;\n \n     case TRUTH_ORIF_EXPR:\n       if (if_true_label == 0)\n \tif_true_label = drop_through_label = gen_label_rtx ();\n       do_jump (TREE_OPERAND (exp, 0), NULL_RTX, if_true_label);\n-      start_cleanup_deferal ();\n+      start_cleanup_deferral ();\n       do_jump (TREE_OPERAND (exp, 1), if_false_label, if_true_label);\n-      end_cleanup_deferal ();\n+      end_cleanup_deferral ();\n       break;\n \n     case COMPOUND_EXPR:\n@@ -10321,7 +10368,7 @@ do_jump (exp, if_false_label, if_true_label)\n \n \t  do_jump (TREE_OPERAND (exp, 0), label1, NULL_RTX);\n \n-\t  start_cleanup_deferal ();\n+\t  start_cleanup_deferral ();\n \t  /* Now the THEN-expression.  */\n \t  do_jump (TREE_OPERAND (exp, 1),\n \t\t   if_false_label ? if_false_label : drop_through_label,\n@@ -10334,7 +10381,7 @@ do_jump (exp, if_false_label, if_true_label)\n \t  do_jump (TREE_OPERAND (exp, 2),\n \t\t   if_false_label ? if_false_label : drop_through_label,\n \t\t   if_true_label ? if_true_label : drop_through_label);\n-\t  end_cleanup_deferal ();\n+\t  end_cleanup_deferral ();\n \t}\n       break;\n "}, {"sha": "7c852c0e515b7c36c8f859ea0ba593d0c1a656fe", "filename": "gcc/extend.texi", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/956d69504d77d301015532d2f0564213f0efc706/gcc%2Fextend.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/956d69504d77d301015532d2f0564213f0efc706/gcc%2Fextend.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fextend.texi?ref=956d69504d77d301015532d2f0564213f0efc706", "patch": "@@ -2174,7 +2174,7 @@ possibly unused.  GNU CC will not produce a warning for any variables of\n that type, even if the variable appears to do nothing.  This is often\n the case with lock or thread classes, which are usually defined and then\n not referenced, but contain constructors and destructors that have\n-non-trivial bookeeping functions.\n+nontrivial bookkeeping functions.\n \n @end table\n "}, {"sha": "90df30a361a429d1815779e8d6b6ab37721c2899", "filename": "gcc/flow.c", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/956d69504d77d301015532d2f0564213f0efc706/gcc%2Fflow.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/956d69504d77d301015532d2f0564213f0efc706/gcc%2Fflow.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fflow.c?ref=956d69504d77d301015532d2f0564213f0efc706", "patch": "@@ -1541,9 +1541,10 @@ propagate_block (old, first, last, final, significant, bnum)\n \t     merged into a following memory address.  */\n #ifdef AUTO_INC_DEC\n \t  {\n-\t    register rtx x = PATTERN (insn);\n+\t    register rtx x = single_set (insn);\n+\n \t    /* Does this instruction increment or decrement a register?  */\n-\t    if (final && GET_CODE (x) == SET\n+\t    if (final && x != 0\n \t\t&& GET_CODE (SET_DEST (x)) == REG\n \t\t&& (GET_CODE (SET_SRC (x)) == PLUS\n \t\t    || GET_CODE (SET_SRC (x)) == MINUS)\n@@ -2679,7 +2680,7 @@ try_pre_increment_1 (insn)\n {\n   /* Find the next use of this reg.  If in same basic block,\n      make it do pre-increment or pre-decrement if appropriate.  */\n-  rtx x = PATTERN (insn);\n+  rtx x = single_set (insn);\n   HOST_WIDE_INT amount = ((GET_CODE (SET_SRC (x)) == PLUS ? 1 : -1)\n \t\t* INTVAL (XEXP (SET_SRC (x), 1)));\n   int regno = REGNO (SET_DEST (x));\n@@ -2689,8 +2690,7 @@ try_pre_increment_1 (insn)\n       /* Don't do this if the reg dies, or gets set in y; a standard addressing\n \t mode would be better.  */\n       && ! dead_or_set_p (y, SET_DEST (x))\n-      && try_pre_increment (y, SET_DEST (PATTERN (insn)),\n-\t\t\t    amount))\n+      && try_pre_increment (y, SET_DEST (x), amount))\n     {\n       /* We have found a suitable auto-increment\n \t and already changed insn Y to do it."}, {"sha": "0bc822645423856eebb23dc2f498dbefbde1e3e1", "filename": "gcc/fold-const.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/956d69504d77d301015532d2f0564213f0efc706/gcc%2Ffold-const.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/956d69504d77d301015532d2f0564213f0efc706/gcc%2Ffold-const.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffold-const.c?ref=956d69504d77d301015532d2f0564213f0efc706", "patch": "@@ -481,7 +481,7 @@ div_and_round_double (code, uns,\n   int overflow = 0;\n \n   if ((hden == 0) && (lden == 0))\n-    abort ();\n+    overflow = 1, lden = 1;\n \n   /* calculate quotient sign and convert operands to unsigned.  */\n   if (!uns) \n@@ -2672,13 +2672,13 @@ simple_operand_p (exp)\n    are converted to\n \t(unsigned) (X - 2) <= 3\n \n-   We decribe each set of comparisons as being either inside or outside\n+   We describe each set of comparisons as being either inside or outside\n    a range, using a variable named like IN_P, and then describe the\n    range with a lower and upper bound.  If one of the bounds is omitted,\n    it represents either the highest or lowest value of the type.\n \n    In the comments below, we represent a range by two numbers in brackets\n-   preceeded by a \"+\" to designate being inside that range, or a \"-\" to\n+   preceded by a \"+\" to designate being inside that range, or a \"-\" to\n    designate being outside that range, so the condition can be inverted by\n    flipping the prefix.  An omitted bound is represented by a \"-\".  For\n    example, \"- [-, 10]\" means being outside the range starting at the lowest"}, {"sha": "747fb9f1c40b9f8d11657e757b237c153e68bcab", "filename": "gcc/frame.c", "status": "modified", "additions": 4, "deletions": 20, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/956d69504d77d301015532d2f0564213f0efc706/gcc%2Fframe.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/956d69504d77d301015532d2f0564213f0efc706/gcc%2Fframe.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fframe.c?ref=956d69504d77d301015532d2f0564213f0efc706", "patch": "@@ -37,8 +37,8 @@ Boston, MA 02111-1307, USA.  */\n #ifdef DWARF2_UNWIND_INFO\n #include \"gansidecl.h\"\n #include \"dwarf2.h\"\n-#include \"frame.h\"\n #include <stddef.h>\n+#include \"frame.h\"\n \n /* Don't use `fancy_abort' here even if config.h says to use it.  */\n #ifdef abort\n@@ -75,18 +75,7 @@ struct dwarf_fde {\n \n typedef struct dwarf_fde fde;\n \n-/* The representation for an \"object\" to be searched for frame unwind info.\n-   For targets with named sections, one object is an executable or shared\n-   library; for other targets, one object is one translation unit.  */\n-\n-struct object {\n-  void *pc_begin;\n-  void *pc_end;\n-  fde *fde_begin;\n-  fde ** fde_array;\n-  size_t count;\n-  struct object *next;\n-};\n+/* Objects to be searched for frame unwind info.  */\n \n static struct object *objects;\n \n@@ -512,10 +501,8 @@ execute_cfa_insn (void *p, struct frame_state_internal *state,\n /* Called from crtbegin.o to register the unwind info for an object.  */\n \n void\n-__register_frame (void *begin)\n+__register_frame (void *begin, struct object *ob)\n {\n-  struct object *ob = (struct object *) malloc (sizeof (struct object));\n-\n   ob->fde_begin = begin;\n \n   ob->pc_begin = ob->pc_end = 0;\n@@ -531,10 +518,8 @@ __register_frame (void *begin)\n    collect2.  */\n \n void\n-__register_frame_table (void *begin)\n+__register_frame_table (void *begin, struct object *ob)\n {\n-  struct object *ob = (struct object *) malloc (sizeof (struct object));\n-\n   ob->fde_begin = begin;\n   ob->fde_array = begin;\n \n@@ -562,7 +547,6 @@ __deregister_frame (void *begin)\n \t  /* If we've run init_frame for this object, free the FDE array.  */\n \t  if (ob->pc_begin)\n \t    free (ob->fde_array);\n-\t  free (ob);\n \n \t  return;\n \t}"}, {"sha": "c1cc7028c2dda770726df556a5b6eeb6731dcf2c", "filename": "gcc/frame.h", "status": "modified", "additions": 17, "deletions": 1, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/956d69504d77d301015532d2f0564213f0efc706/gcc%2Fframe.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/956d69504d77d301015532d2f0564213f0efc706/gcc%2Fframe.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fframe.h?ref=956d69504d77d301015532d2f0564213f0efc706", "patch": "@@ -18,10 +18,26 @@ typedef struct frame_state\n #define REG_SAVED_OFFSET 1\n #define REG_SAVED_REG 2\n \n+/* The representation for an \"object\" to be searched for frame unwind info.\n+   For targets with named sections, one object is an executable or shared\n+   library; for other targets, one object is one translation unit.\n+\n+   A copy of this structure declaration is printed by collect2.c;\n+   keep the copies synchronized!  */\n+\n+struct object {\n+  void *pc_begin;\n+  void *pc_end;\n+  struct dwarf_fde *fde_begin;\n+  struct dwarf_fde **fde_array;\n+  size_t count;\n+  struct object *next;\n+};\n+\n /* Called either from crtbegin.o or a static constructor to register the\n    unwind info for an object or translation unit, respectively.  */\n \n-extern void __register_frame (void *);\n+extern void __register_frame (void *, struct object *);\n \n /* Called from crtend.o to deregister the unwind info for an object.  */\n "}, {"sha": "d13724fea3465eaa702675944089a6699e6e174b", "filename": "gcc/function.c", "status": "modified", "additions": 32, "deletions": 11, "changes": 43, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/956d69504d77d301015532d2f0564213f0efc706/gcc%2Ffunction.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/956d69504d77d301015532d2f0564213f0efc706/gcc%2Ffunction.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffunction.c?ref=956d69504d77d301015532d2f0564213f0efc706", "patch": "@@ -1248,7 +1248,7 @@ free_temps_for_rtl_expr (t)\n   combine_temp_slots ();\n }\n \n-/* Mark all temporaries ever allocated in this functon as not suitable\n+/* Mark all temporaries ever allocated in this function as not suitable\n    for reuse until the current level is exited.  */\n \n void\n@@ -1417,7 +1417,8 @@ put_var_into_stack (decl)\n \t\t       XEXP (reg, 0), ptr_mode,\n \t\t       GEN_INT (GET_MODE_SIZE (GET_MODE (reg))),\n \t\t       TYPE_MODE (sizetype),\n-\t\t       GEN_INT (MEMORY_USE_RW), QImode);\n+\t\t       GEN_INT (MEMORY_USE_RW),\n+\t\t       TYPE_MODE (integer_type_node));\n }\n \n /* Subroutine of put_var_into_stack.  This puts a single pseudo reg REG\n@@ -1767,8 +1768,19 @@ fixup_var_refs_1 (var, promoted_mode, loc, insn, replacements)\n     case ADDRESSOF:\n       if (XEXP (x, 0) == var)\n \t{\n+\t  /* Prevent sharing of rtl that might lose.  */\n+\t  rtx sub = copy_rtx (XEXP (var, 0));\n+\n \t  start_sequence ();\n-\t  *loc = force_operand (XEXP (var, 0), NULL_RTX);\n+\n+\t  if (! validate_change (insn, loc, sub, 0))\n+\t    {\n+\t      rtx y = force_operand (sub, NULL_RTX);\n+\n+\t      if (! validate_change (insn, loc, y, 0))\n+\t\t*loc = copy_to_reg (y);\n+\t    }\n+\n \t  emit_insn_before (gen_sequence (), insn);\n \t  end_sequence ();\n \t}\n@@ -2381,6 +2393,7 @@ fixup_stack_1 (x, insn)\n \t      || REGNO (XEXP (ad, 0)) == HARD_FRAME_POINTER_REGNUM\n #endif\n \t      || REGNO (XEXP (ad, 0)) == STACK_POINTER_REGNUM\n+\t      || REGNO (XEXP (ad, 0)) == ARG_POINTER_REGNUM\n \t      || XEXP (ad, 0) == current_function_internal_arg_pointer)\n \t  && GET_CODE (XEXP (ad, 1)) == CONST_INT)\n \t{\n@@ -2705,13 +2718,16 @@ purge_addressof_1 (loc, insn, force)\n   if (code == ADDRESSOF && GET_CODE (XEXP (x, 0)) == MEM)\n     {\n       rtx insns;\n+      /* We must create a copy of the rtx because it was created by\n+\t overwriting a REG rtx which is always shared.  */\n+      rtx sub = copy_rtx (XEXP (XEXP (x, 0), 0));\n \n-      if (validate_change (insn, loc, XEXP (XEXP (x, 0), 0), 0))\n+      if (validate_change (insn, loc, sub, 0))\n \treturn;\n \n       start_sequence ();\n       if (! validate_change (insn, loc,\n-\t\t\t     force_operand (XEXP (XEXP (x, 0), 0), NULL_RTX),\n+\t\t\t     force_operand (sub, NULL_RTX),\n \t\t\t     0))\n \tabort ();\n \n@@ -2723,6 +2739,8 @@ purge_addressof_1 (loc, insn, force)\n   else if (code == MEM && GET_CODE (XEXP (x, 0)) == ADDRESSOF && ! force)\n     {\n       rtx sub = XEXP (XEXP (x, 0), 0);\n+      if (GET_CODE (sub) != REG)\n+\tsub = copy_rtx (sub);\n       if (GET_CODE (sub) == REG && GET_MODE (x) != GET_MODE (sub))\n \t{\n \t  if (! BYTES_BIG_ENDIAN && ! WORDS_BIG_ENDIAN)\n@@ -2912,7 +2930,7 @@ instantiate_decl (x, size, valid_only)\n \n   addr = XEXP (x, 0);\n   if (CONSTANT_P (addr)\n-      || GET_CODE (addr) == ADDRESSOF\n+      || (GET_CODE (addr) == ADDRESSOF && GET_CODE (XEXP (addr, 0)) == REG)\n       || (GET_CODE (addr) == REG\n \t  && (REGNO (addr) < FIRST_VIRTUAL_REGISTER\n \t      || REGNO (addr) > LAST_VIRTUAL_REGISTER)))\n@@ -3507,7 +3525,7 @@ aggregate_value_p (exp)\n \n   if (RETURN_IN_MEMORY (type))\n     return 1;\n-  /* Types that are TREE_ADDRESSABLE must be contructed in memory,\n+  /* Types that are TREE_ADDRESSABLE must be constructed in memory,\n      and thus can't be returned in registers.  */\n   if (TREE_ADDRESSABLE (type))\n     return 1;\n@@ -3930,7 +3948,8 @@ assign_parms (fndecl, second_time)\n \t\t\t\t     GEN_INT (int_size_in_bytes \n \t\t\t\t\t      (TREE_TYPE (parm))),\n \t\t\t\t     TYPE_MODE (sizetype),\n-\t\t\t\t     GEN_INT (MEMORY_USE_RW), QImode);\n+\t\t\t\t     GEN_INT (MEMORY_USE_RW),\n+\t\t\t\t     TYPE_MODE (integer_type_node));\n \t\t  conversion_insns = get_insns ();\n \t\t  end_sequence ();\n \t\t}\n@@ -4061,7 +4080,7 @@ assign_parms (fndecl, second_time)\n \t      /* ENTRY_PARM has been converted to PROMOTED_MODE, its\n \t\t mode, by the caller.  We now have to convert it to \n \t\t NOMINAL_MODE, if different.  However, PARMREG may be in\n-\t\t a diffent mode than NOMINAL_MODE if it is being stored\n+\t\t a different mode than NOMINAL_MODE if it is being stored\n \t\t promoted.\n \n \t\t If ENTRY_PARM is a hard register, it might be in a register\n@@ -4160,7 +4179,8 @@ assign_parms (fndecl, second_time)\n \t\t\t\t   XEXP (copy, 0), ptr_mode,\n \t\t\t\t   GEN_INT (int_size_in_bytes (type)),\n \t\t\t\t   TYPE_MODE (sizetype),\n-\t\t\t\t   GEN_INT (MEMORY_USE_RW), QImode);\n+\t\t\t\t   GEN_INT (MEMORY_USE_RW),\n+\t\t\t\t   TYPE_MODE (integer_type_node));\n \t      conversion_insns = get_insns ();\n \t      did_conversion = 1;\n \t      end_sequence ();\n@@ -4327,7 +4347,8 @@ assign_parms (fndecl, second_time)\n \t\t\t\t GEN_INT (GET_MODE_SIZE (GET_MODE \n \t\t\t\t\t\t\t (entry_parm))),\n \t\t\t\t TYPE_MODE (sizetype),\n-\t\t\t\t GEN_INT (MEMORY_USE_RW), QImode);\n+\t\t\t\t GEN_INT (MEMORY_USE_RW),\n+\t\t\t\t TYPE_MODE (integer_type_node));\n \n \t      conversion_insns = get_insns ();\n \t      end_sequence ();"}, {"sha": "9999507971c59523e46c38fb36f86a77a8df2e75", "filename": "gcc/gcc.1", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/956d69504d77d301015532d2f0564213f0efc706/gcc%2Fgcc.1", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/956d69504d77d301015532d2f0564213f0efc706/gcc%2Fgcc.1", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgcc.1?ref=956d69504d77d301015532d2f0564213f0efc706", "patch": "@@ -20,7 +20,7 @@\n .if n .sp\n .if t .sp 0.4\n ..\n-.Id $Id: gcc.1,v 1.1.1.2 1997/11/02 08:40:04 law Exp $\n+.Id $Id: gcc.1,v 1.2 1997/12/05 22:12:45 law Exp $\n .TH GCC 1 \"\\*(Dt\" \"GNU Tools\" \"GNU Tools\"\n .SH NAME\n gcc, g++ \\- GNU project C and C++ Compiler (egcs-1.0)\n@@ -3998,7 +3998,7 @@ three-way choice.\n .BI \"\\-fcall\\-used\\-\" \"reg\"\n Treat the register named \\c\n .I reg\\c\n-\\& as an allocatable register that is\n+\\& as an allocable register that is\n clobbered by function calls.  It may be allocated for temporaries or\n variables that do not live across a call.  Functions compiled this way\n will not save and restore the register \\c\n@@ -4015,7 +4015,7 @@ three-way choice.\n .BI \"\\-fcall\\-saved\\-\" \"reg\"\n Treat the register named \\c\n .I reg\\c\n-\\& as an allocatable register saved by\n+\\& as an allocable register saved by\n functions.  It may be allocated even for temporaries or variables that\n live across a call.  Functions compiled this way will save and restore\n the register \\c"}, {"sha": "6e4a10d95158609afc9d294ebc71cfdade534d42", "filename": "gcc/gcc.c", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/956d69504d77d301015532d2f0564213f0efc706/gcc%2Fgcc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/956d69504d77d301015532d2f0564213f0efc706/gcc%2Fgcc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgcc.c?ref=956d69504d77d301015532d2f0564213f0efc706", "patch": "@@ -39,7 +39,7 @@ compilation is specified by a string called a \"spec\".  */\n #include <sys/stat.h>\n #include <errno.h>\n \n-#ifndef NO_SYS_FILE_H\n+#ifdef HAVE_SYS_FILE_H\n #include <sys/file.h>   /* May get R_OK, etc. on some systems.  */\n #endif\n \n@@ -150,6 +150,10 @@ extern char *sys_errlist[];\n extern char *strerror();\n #endif\n \n+#ifndef HAVE_KILL\n+#define kill(p,s) raise(s)\n+#endif\n+\n /* If a stage of compilation returns an exit status >= 1,\n    compilation of that file ceases.  */\n \n@@ -5152,7 +5156,7 @@ validate_switches (start)\n }\n \f\n /* Check whether a particular argument was used.  The first time we\n-   canonialize the switches to keep only the ones we care about.  */\n+   canonicalize the switches to keep only the ones we care about.  */\n \n static int\n used_arg (p, len)"}, {"sha": "bd3b0b01c8010aaabc7a91045b298b81d3f41f1e", "filename": "gcc/gcc.texi", "status": "modified", "additions": 3, "deletions": 21, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/956d69504d77d301015532d2f0564213f0efc706/gcc%2Fgcc.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/956d69504d77d301015532d2f0564213f0efc706/gcc%2Fgcc.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgcc.texi?ref=956d69504d77d301015532d2f0564213f0efc706", "patch": "@@ -144,9 +144,9 @@ original English.\n @sp 2\n @center Richard M. Stallman\n @sp 3\n-@center Last updated 26 November 1995\n+@center Last updated 4 December 1997\n @sp 1\n-@c The version number appears twice more in this file.\n+@c The version number appears three times more in this file.\n \n @center for egcs-1.0\n @page\n@@ -437,7 +437,7 @@ GNU CC.  The fix is to get rid of the file @code{real-ld} which purify\n installs---so that GNU CC won't try to use it.\n \n @item\n-On Linux SLS 1.01, there is a problem with @file{libc.a}: it does not\n+On GNU/Linux SLS 1.01, there is a problem with @file{libc.a}: it does not\n contain the obstack functions.  However, GNU CC assumes that the obstack\n functions are in @file{libc.a} when it is the GNU C library.  To work\n around this problem, change the @code{__GNU_LIBRARY__} conditional\n@@ -3681,35 +3681,17 @@ Define this macro to indicate that the host compiler does not properly\n handle converting a function value to a pointer-to-function when it is\n used in an expression.\n \n-@findex HAVE_VPRINTF\n-@findex vprintf\n-@item HAVE_VPRINTF\n-Define this if the library function @code{vprintf} is available on your\n-system.\n-\n @findex MULTIBYTE_CHARS\n @item MULTIBYTE_CHARS\n Define this macro to enable support for multibyte characters in the\n input to GNU CC.  This requires that the host system support the ANSI C\n library functions for converting multibyte characters to wide\n characters.\n \n-@findex HAVE_PUTENV\n-@findex putenv\n-@item HAVE_PUTENV\n-Define this if the library function @code{putenv} is available on your\n-system.\n-\n @findex POSIX\n @item POSIX\n Define this if your system is POSIX.1 compliant.\n \n-@findex HAVE_POPEN\n-@findex popen\n-@item HAVE_POPEN\n-Define this if the library function @code{popen} is available on your\n-system.\n-\n @findex NO_SYS_SIGLIST\n @item NO_SYS_SIGLIST\n Define this if your system @emph{does not} provide the variable"}, {"sha": "025c61f7321908a86bd3217959766e0f17c399a4", "filename": "gcc/genattrtab.c", "status": "modified", "additions": 13, "deletions": 5, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/956d69504d77d301015532d2f0564213f0efc706/gcc%2Fgenattrtab.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/956d69504d77d301015532d2f0564213f0efc706/gcc%2Fgenattrtab.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgenattrtab.c?ref=956d69504d77d301015532d2f0564213f0efc706", "patch": "@@ -106,11 +106,19 @@ Boston, MA 02111-1307, USA.  */\n #include \"rtl.h\"\n #include \"insn-config.h\"\t/* For REGISTER_CONSTRAINTS */\n \n-#ifndef VMS\n-#ifndef USG\n-#include <sys/time.h>\n-#include <sys/resource.h>\n+#ifdef TIME_WITH_SYS_TIME\n+# include <sys/time.h>\n+# include <time.h>\n+#else\n+# if HAVE_SYS_TIME_H\n+# include <sys/time.h>\n+# else\n+#  include <time.h>\n+#endif\n #endif\n+\n+#ifdef HAVE_SYS_RESOURCE_H\n+# include <sys/resource.h>\n #endif\n \n /* We must include obstack.h after <sys/time.h>, to avoid lossage with\n@@ -1389,7 +1397,7 @@ make_canonical (attr, exp)\n       RTX_UNCHANGING_P (exp) = 1;\n       exp = check_attr_value (exp, attr);\n       /* Goto COND case since this is now a COND.  Note that while the\n-         new expression is rescanned, all symbol_ref notes are mared as\n+         new expression is rescanned, all symbol_ref notes are marked as\n \t unchanging.  */\n       goto cond;\n "}, {"sha": "68b68792661a9db65635d8b0ab56cfbf176b1fca", "filename": "gcc/install.texi", "status": "modified", "additions": 4, "deletions": 9, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/956d69504d77d301015532d2f0564213f0efc706/gcc%2Finstall.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/956d69504d77d301015532d2f0564213f0efc706/gcc%2Finstall.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Finstall.texi?ref=956d69504d77d301015532d2f0564213f0efc706", "patch": "@@ -727,8 +727,7 @@ GNU CC.\n @item alpha-*-osf1\n Systems using processors that implement the DEC Alpha architecture and\n are running the DEC Unix (OSF/1) operating system, for example the DEC\n-Alpha AXP systems.  (VMS on the Alpha is not currently supported by GNU\n-CC.)\n+Alpha AXP systems.CC.)\n \n GNU CC writes a @samp{.verstamp} directive to the assembler output file\n unless it is built as a cross-compiler.  It gets the version to use from\n@@ -788,7 +787,7 @@ configuration.\n @item arm-*-linuxaout\n Any of the ARM family processors running the Linux-based GNU system with\n the @file{a.out} binary format (ELF is not yet supported).  You must use\n-version 2.8.1.0.7 or later of the Linux binutils, which you can download\n+version 2.8.1.0.7 or later of the GNU/Linux binutils, which you can download\n from @file{sunsite.unc.edu:/pub/Linux/GCC} and other mirror sites for\n Linux-based GNU systems.\n \n@@ -965,9 +964,7 @@ You need to use GAS version 2.1 or later, and LD from\n GNU binutils version 2.2 or later.\n \n @item i386-sequent-bsd\n-Go to the Berkeley universe before compiling.  In addition, you probably\n-need to create a file named @file{string.h} containing just one line:\n-@samp{#include <strings.h>}.\n+Go to the Berkeley universe before compiling.\n \n @item i386-sequent-ptx1*\n Sequent DYNIX/ptx 1.x.\n@@ -1343,9 +1340,7 @@ and @code{malloc}; you must get the compiled versions of these from GNU\n Emacs.\n \n @item ns32k-sequent\n-Go to the Berkeley universe before compiling.  In addition, you probably\n-need to create a file named @file{string.h} containing just one line:\n-@samp{#include <strings.h>}.\n+Go to the Berkeley universe before compiling.\n \n @item ns32k-utek\n UTEK ns32000 system (``merlin'').  The C compiler that comes with this"}, {"sha": "6854cf66a971262fc32ee217d61df1a70255a92d", "filename": "gcc/integrate.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/956d69504d77d301015532d2f0564213f0efc706/gcc%2Fintegrate.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/956d69504d77d301015532d2f0564213f0efc706/gcc%2Fintegrate.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fintegrate.c?ref=956d69504d77d301015532d2f0564213f0efc706", "patch": "@@ -335,7 +335,7 @@ initialize_for_inline (fndecl, min_labelno, max_labelno, max_reg, copy)\n      the value of current_function_outgoing_args_size,\n      the original argument vector,\n      the original DECL_INITIAL,\n-     and pointers to the table of psuedo regs, pointer flags, and alignment. */\n+     and pointers to the table of pseudo regs, pointer flags, and alignment. */\n \n   return gen_inline_header_rtx (NULL_RTX, NULL_RTX, min_labelno, max_labelno,\n \t\t\t\tmax_parm_reg, max_reg,"}, {"sha": "0eb028713652aabe639f8a55a2185811c655fbbc", "filename": "gcc/invoke.texi", "status": "modified", "additions": 86, "deletions": 12, "changes": 98, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/956d69504d77d301015532d2f0564213f0efc706/gcc%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/956d69504d77d301015532d2f0564213f0efc706/gcc%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Finvoke.texi?ref=956d69504d77d301015532d2f0564213f0efc706", "patch": "@@ -337,11 +337,13 @@ in the following sections.\n -mtail-call\n \n @emph{DEC Alpha Options}\n--mfp-regs  -mno-fp-regs\n--mno-soft-float  -msoft-float\n+-mfp-regs  -mno-fp-regs -mno-soft-float  -msoft-float\n+-malpha-as -mgas\n -mieee  -mieee-with-inexact  -mieee-conformant\n--mfp-trap-mode  -mfp-rounding-mode  -mtrap-precision\n--mbuild-constants\n+-mfp-trap-mode=@var{mode}  -mfp-rounding-mode=@var{mode}\n+-mtrap-precision=@var{mode}  -mbuild-constants\n+-mcpu=@var{cpu type}\n+-mbwx -mno-bwx -mcix -mno-cix -mmax -mno-max\n \n @emph{Clipper Options}\n -mc300  -mc400\n@@ -1307,6 +1309,9 @@ whenever a function is declared static but never defined, whenever a\n label is declared but not used, and whenever a statement computes a\n result that is explicitly not used.\n \n+In order to get a warning about an unused function parameter, you must\n+specify both @samp{-W} and @samp{-Wunused}.\n+\n To suppress this warning for an expression, simply cast it to void.  For\n unused variables and parameters, use the @samp{unused} attribute\n (@pxref{Variable Attributes}).\n@@ -1784,7 +1789,7 @@ and (optionally) the complete sequence of basic blocks being executed.\n The output is appended to file @file{bb.out}.\n \n You can examine different profiling aspects without recompilation.  Your\n-execuable will read a list of function names from file @file{bb.in}.\n+executable will read a list of function names from file @file{bb.in}.\n Profiling starts when a function on the list is entered and stops when\n that invocation is exited.  To exclude a function from profiling, prefix\n its name with `-'.  If a function name is not unique, you can\n@@ -1896,6 +1901,10 @@ block and arc execution counts from the information in the\n @samp{-fprofile-arcs}).\n @end table\n \n+@item -Q\n+Makes the compiler print out each function name as it is compiled, and\n+print some statistics about each pass when it finishes.\n+\n @item -d@var{letters}\n Says to make debugging dumps during compilation at times specified by\n @var{letters}.  This is used for debugging the compiler.  The file names\n@@ -1924,11 +1933,15 @@ Dump after first jump optimization, to @file{@var{file}.jump}.\n @item s\n Dump after CSE (including the jump optimization that sometimes\n follows CSE), to @file{@var{file}.cse}.\n+@item D\n+Dump after purging ADDRESSOF, to @file{@var{file}.addressof}.\n @item L\n Dump after loop optimization, to @file{@var{file}.loop}.\n @item t\n Dump after the second CSE pass (including the jump optimization that\n sometimes follows CSE), to @file{@var{file}.cse2}.\n+@item b\n+Dump after computing branch probabilities, to @file{@var{file}.bp}.\n @item f\n Dump after flow analysis, to @file{@var{file}.flow}.\n @item c\n@@ -4102,7 +4115,7 @@ be compiled with @samp{-mrelocatable} or @samp{-mrelocatable-lib}.\n @itemx -mno-relocatable-lib\n On embedded PowerPC systems generate code that allows (does not allow)\n the program to be relocated to a different address at runtime.  Modules\n-compiled with @samp{-mreloctable-lib} can be linked with either modules\n+compiled with @samp{-mrelocatable-lib} can be linked with either modules\n compiled without @samp{-mrelocatable} and @samp{-mrelocatable-lib} or\n with modules compiled with the @samp{-mrelocatable} options.\n \n@@ -4247,7 +4260,7 @@ in the @samp{.data} section, and all uninitialized data in the\n @item -G @var{num}\n @cindex smaller data references (PowerPC)\n @cindex .sdata/.sdata2 references (PowerPC)\n-On embbeded PowerPC systems, put global and static items less than or\n+On embedded PowerPC systems, put global and static items less than or\n equal to @var{num} bytes into the small data or bss sections instead of\n the normal data or bss section.  By default, @var{num} is 8.  The\n @samp{-G @var{num}} switch is also passed to the linker.\n@@ -4712,7 +4725,7 @@ functions.\n @item -mspace\n Optimize for space rather than execution time.  Currently this only\n enables out of line function prologues and epilogues.  This option is\n-incompatable with PIC code generation and profiling.\n+incompatible with PIC code generation and profiling.\n \n @item -mlong-load-store\n Generate 3-instruction load and store sequences as sometimes required by\n@@ -4995,14 +5008,65 @@ IEEE-conformant math library routines will be linked in.\n Normally GNU CC examines a 32- or 64-bit integer constant to\n see if it can construct it from smaller constants in two or three\n instructions.  If it cannot, it will output the constant as a literal and\n-generate code to load it from the data segement at runtime.\n+generate code to load it from the data segment at runtime.\n \n Use this option to require GNU CC to construct @emph{all} integer constants\n using code, even if it takes more instructions (the maximum is six).\n \n You would typically use this option to build a shared library dynamic\n loader.  Itself a shared library, it must relocate itself in memory\n before it can find the variables and constants in its own data segment.\n+\n+@item -malpha-as\n+@itemx -mgas\n+Select whether to generate code to be assembled by the vendor-supplied\n+assembler (@samp{-malpha-as}) or by the GNU assembler @samp{-mgas}.\n+\n+@item -mbwx\n+@itemx -mno-bwx\n+@itemx -mcix\n+@itemx -mno-cix\n+@itemx -mmax\n+@itemx -mno-max\n+Indicate whether GNU CC should generate code to use the optional BWX,\n+CIX, and MAX instruction sets.  The default is to use the instruction sets\n+supported by the CPU type specified via @samp{-mcpu=} option or that\n+of the CPU on which GNU CC was built if none was specified.\n+\n+@item -mcpu=@var{cpu type}\n+@item -mcpu=@var{cpu_type}\n+Set the instruction set, register set, and instruction scheduling\n+parameters for machine type @var{cpu_type}.  You can specify either the\n+@samp{EV} style name or the corresponding chip number.  GNU CC\n+supports scheduling parameters for the EV4 and EV5 family of processors\n+and will choose the default values for the instruction set from\n+the processor you specify.  If you do not specify a processor type,\n+GNU CC will default to the processor on which the compiler was built.\n+\n+Supported values for @var{cpu_type} are\n+\n+@table @samp\n+@item ev4\n+@itemx 21064\n+Schedules as an EV4 and has no instruction set extensions.\n+\n+@item ev5\n+@itemx 21164\n+Schedules as an EV5 and has no instruction set extensions.\n+\n+@item ev56\n+@itemx 21164a\n+Schedules as an EV5 and supports the BWX extension.\n+\n+@item pca56\n+@itemx 21164PC\n+Schedules as an EV5 and supports the BWX and MAX extensions.\n+\n+@item ev6\n+@itemx 21264\n+Schedules as an EV5 (until Digital releases the scheduling parameters\n+for the EV6) and supports the BWX, CIX, and MAX extensions.\n+@end table\n @end table\n \n @node Clipper Options\n@@ -5176,6 +5240,16 @@ can figure out the other form by either removing @samp{no-} or adding\n it.\n \n @table @code\n+@item -fexceptions\n+Enable exception handling, and generate extra code needed to propagate\n+exceptions.  If you do not specify this option, GNU CC enables it by\n+default for languages like C++ that normally require exception handling,\n+and disabled for languages like C that do not normally require it.\n+However, when compiling C code that needs to interoperate properly with\n+exception handlers written in C++, you may need to enable this option.\n+You may also wish to disable this option is you are compiling older C++\n+programs that don't use exception handling.\n+\n @item -fpcc-struct-return\n Return ``short'' @code{struct} and @code{union} values in memory like\n longer ones, rather than in registers.  This convention is less\n@@ -5301,7 +5375,7 @@ This flag does not have a negative form, because it specifies a\n three-way choice.\n \n @item -fcall-used-@var{reg}\n-Treat the register named @var{reg} as an allocatable register that is\n+Treat the register named @var{reg} as an allocable register that is\n clobbered by function calls.  It may be allocated for temporaries or\n variables that do not live across a call.  Functions compiled this way\n will not save and restore the register @var{reg}.\n@@ -5314,7 +5388,7 @@ This flag does not have a negative form, because it specifies a\n three-way choice.\n \n @item -fcall-saved-@var{reg}\n-Treat the register named @var{reg} as an allocatable register saved by\n+Treat the register named @var{reg} as an allocable register saved by\n functions.  It may be allocated even for temporaries or variables that\n live across a call.  Functions compiled this way will save and restore\n the register @var{reg} if they use it.\n@@ -5341,7 +5415,7 @@ code that is suitable for a detector of bad memory accesses such as\n @code{asm} or @code{__asm__} keywords.\n \n You must also specify this option when you compile functions you call that\n-have side effects.  If you do not, you may get erronous messages from\n+have side effects.  If you do not, you may get erroneous messages from\n the detector.  Normally,  you should compile all your code with this option.\n If you use functions from a library that have side-effects (such as\n @code{read}), you may not be able to recompile the library and"}, {"sha": "00e31cf22ec4bfb8a5ba7960cedfc5b1087e16c4", "filename": "gcc/jump.c", "status": "modified", "additions": 62, "deletions": 8, "changes": 70, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/956d69504d77d301015532d2f0564213f0efc706/gcc%2Fjump.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/956d69504d77d301015532d2f0564213f0efc706/gcc%2Fjump.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjump.c?ref=956d69504d77d301015532d2f0564213f0efc706", "patch": "@@ -117,6 +117,7 @@ static void delete_computation\t\tPROTO((rtx));\n static void delete_from_jump_chain\tPROTO((rtx));\n static int delete_labelref_insn\t\tPROTO((rtx, rtx, int));\n static void redirect_tablejump\t\tPROTO((rtx, rtx));\n+static rtx find_insert_position         PROTO((rtx, rtx));\n \f\n /* Delete no-op jumps and optimize jumps to jumps\n    and jumps around jumps.\n@@ -996,11 +997,12 @@ jump_optimize (f, cross_jump, noop_moves, after_regscan)\n \t    {\n \t      rtx new = gen_reg_rtx (GET_MODE (temp2));\n \n-\t      if (validate_change (temp, &SET_DEST (temp1), new, 0))\n+\t      if ((temp3 = find_insert_position (insn, temp))\n+\t\t  && validate_change (temp, &SET_DEST (temp1), new, 0))\n \t\t{\n \t\t  next = emit_insn_after (gen_move_insn (temp2, new), insn);\n \t\t  emit_insn_after_with_line_notes (PATTERN (temp), \n-\t\t\t\t\t\t   PREV_INSN (insn), temp);\n+\t\t\t\t\t\t   PREV_INSN (temp3), temp);\n \t\t  delete_insn (temp);\n \t\t  reallabelprev = prev_active_insn (JUMP_LABEL (insn));\n \t\t}\n@@ -1039,14 +1041,19 @@ jump_optimize (f, cross_jump, noop_moves, after_regscan)\n \t    {\n \t      rtx new = gen_reg_rtx (GET_MODE (temp2));\n \n-\t      if (validate_change (temp, &SET_DEST (temp1), new, 0))\n+\t      if ((temp5 = find_insert_position (insn, temp))\n+\t\t  && (temp6 = find_insert_position (insn, temp3))\n+\t\t  && validate_change (temp, &SET_DEST (temp1), new, 0))\n \t\t{\n+\t\t  /* Use the earliest of temp5 and temp6. */\n+\t\t  if (temp5 != insn)\n+\t\t    temp6 = temp5;\n \t\t  next = emit_insn_after (gen_move_insn (temp2, new), insn);\n \t\t  emit_insn_after_with_line_notes (PATTERN (temp),\n-\t\t\t\t\t\t   PREV_INSN (insn), temp);\n+\t\t\t\t\t\t   PREV_INSN (temp6), temp);\n \t\t  emit_insn_after_with_line_notes\n \t\t    (replace_rtx (PATTERN (temp3), temp2, new),\n-\t\t     PREV_INSN (insn), temp3);\n+\t\t     PREV_INSN (temp6), temp3);\n \t\t  delete_insn (temp);\n \t\t  delete_insn (temp3);\n \t\t  reallabelprev = prev_active_insn (JUMP_LABEL (insn));\n@@ -1095,13 +1102,18 @@ jump_optimize (f, cross_jump, noop_moves, after_regscan)\n \t    {\n \t      rtx new = gen_reg_rtx (GET_MODE (temp2));\n \n-\t      if (validate_change (temp3, &SET_DEST (temp4), new, 0))\n+\t      if ((temp5 = find_insert_position (insn, temp))\n+\t\t  && (temp6 = find_insert_position (insn, temp3))\n+\t\t  && validate_change (temp3, &SET_DEST (temp4), new, 0))\n \t\t{\n+\t\t  /* Use the earliest of temp5 and temp6. */\n+\t\t  if (temp5 != insn)\n+\t\t    temp6 = temp5;\n \t\t  next = emit_insn_after (gen_move_insn (temp2, new), insn);\n \t\t  emit_insn_after_with_line_notes (PATTERN (temp),\n-\t\t\t\t\t\t   PREV_INSN (insn), temp);\n+\t\t\t\t\t\t   PREV_INSN (temp6), temp);\n \t\t  emit_insn_after_with_line_notes (PATTERN (temp3),\n-\t\t\t\t\t\t   PREV_INSN (insn), temp3);\n+\t\t\t\t\t\t   PREV_INSN (temp6), temp3);\n \t\t  delete_insn (temp);\n \t\t  delete_insn (temp3);\n \t\t  reallabelprev = prev_active_insn (JUMP_LABEL (insn));\n@@ -4708,3 +4720,45 @@ rtx_equal_for_thread_p (x, y, yinsn)\n     }\n   return 1;\n }\n+\f\n+\n+/* Return the insn that NEW can be safely inserted in front of starting at\n+   the jump insn INSN.  Return 0 if it is not safe to do this jump\n+   optimization.  Note that NEW must contain a single set. */\n+\n+static rtx\n+find_insert_position (insn, new)\n+     rtx insn;\n+     rtx new;\n+{\n+  int i;\n+  rtx prev;\n+\n+  /* If NEW does not clobber, it is safe to insert NEW before INSN. */\n+  if (GET_CODE (PATTERN (new)) != PARALLEL)\n+    return insn;\n+\n+  for (i = XVECLEN (PATTERN (new), 0) - 1; i >= 0; i--)\n+    if (GET_CODE (XVECEXP (PATTERN (new), 0, i)) == CLOBBER\n+\t&& reg_overlap_mentioned_p (XEXP (XVECEXP (PATTERN (new), 0, i), 0),\n+\t\t\t\t    insn))\n+      break;\n+\n+  if (i < 0)\n+    return insn;\n+\n+  /* There is a good chance that the previous insn PREV sets the thing\n+     being clobbered (often the CC in a hard reg).  If PREV does not\n+     use what NEW sets, we can insert NEW before PREV. */\n+\n+  prev = prev_active_insn (insn);\n+  for (i = XVECLEN (PATTERN (new), 0) - 1; i >= 0; i--)\n+    if (GET_CODE (XVECEXP (PATTERN (new), 0, i)) == CLOBBER\n+\t&& reg_overlap_mentioned_p (XEXP (XVECEXP (PATTERN (new), 0, i), 0),\n+\t\t\t\t    insn)\n+\t&& ! modified_in_p (XEXP (XVECEXP (PATTERN (new), 0, i), 0),\n+\t\t\t    prev))\n+      return 0;\n+\n+  return reg_mentioned_p (SET_DEST (single_set (new)), prev) ? 0 : prev;\n+}"}, {"sha": "dd54319615d8a5094c41dd3157edaf6a8746545f", "filename": "gcc/libgcc2.c", "status": "modified", "additions": 12, "deletions": 1, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/956d69504d77d301015532d2f0564213f0efc706/gcc%2Flibgcc2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/956d69504d77d301015532d2f0564213f0efc706/gcc%2Flibgcc2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flibgcc2.c?ref=956d69504d77d301015532d2f0564213f0efc706", "patch": "@@ -42,6 +42,17 @@ Boston, MA 02111-1307, USA.  */\n #undef abort\n #endif\n \n+#if (SUPPORTS_WEAK == 1) && (defined (ASM_OUTPUT_DEF) || defined (ASM_OUTPUT_WEAK_ALIAS))\n+#define WEAK_ALIAS\n+#endif\n+\n+/* In a cross-compilation situation, default to inhibiting compilation\n+   of routines that use libc.  */\n+\n+#ifdef CROSS_COMPILE\n+#define inhibit_libc\n+#endif\n+\n /* Permit the tm.h file to select the endianness to use just for this\n    file.  This is used when the endianness is determined when the\n    compiler is run.  */\n@@ -1526,7 +1537,7 @@ __bb_exit_func (void)\n \t      continue;\n \t    }\n \n-\t  /* ??? Should first write a header to the file.  Perferably, a 4 byte\n+\t  /* ??? Should first write a header to the file.  Preferably, a 4 byte\n \t     magic number, 4 bytes containing the time the program was\n \t     compiled, 4 bytes containing the last modification time of the\n \t     source file, and 4 bytes indicating the compiler options used."}, {"sha": "b7aade256dcbbe487756901fc03ce54db4467286", "filename": "gcc/local-alloc.c", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/956d69504d77d301015532d2f0564213f0efc706/gcc%2Flocal-alloc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/956d69504d77d301015532d2f0564213f0efc706/gcc%2Flocal-alloc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flocal-alloc.c?ref=956d69504d77d301015532d2f0564213f0efc706", "patch": "@@ -1715,12 +1715,11 @@ block_alloc (b)\n \t  {\n \t    if (GET_CODE (qty_scratch_rtx[q]) == REG)\n \t      abort ();\n-\n \t    qty_scratch_rtx[q] = gen_rtx (REG, GET_MODE (qty_scratch_rtx[q]),\n \t\t\t\t\t  qty_phys_reg[q]);\n-\n \t    scratch_block[scratch_index] = b;\n \t    scratch_list[scratch_index++] = qty_scratch_rtx[q];\n+\n \t  }\n       }\n }"}, {"sha": "a26c04ac995facfaec1eef2741cfa305a4a09e85", "filename": "gcc/loop.c", "status": "modified", "additions": 14, "deletions": 4, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/956d69504d77d301015532d2f0564213f0efc706/gcc%2Floop.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/956d69504d77d301015532d2f0564213f0efc706/gcc%2Floop.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Floop.c?ref=956d69504d77d301015532d2f0564213f0efc706", "patch": "@@ -3633,11 +3633,20 @@ strength_reduce (scan_start, end, loop_top, insn_count,\n   for (bl = loop_iv_list; bl; bl = bl->next)\n     {\n       rtx src;\n+      rtx note;\n \n       if (! bl->init_insn)\n \tcontinue;\n \n-      src = SET_SRC (bl->init_set);\n+      /* IF INIT_INSN has a REG_EQUAL or REG_EQUIV note and the value\n+\t is a constant, use the value of that.  */\n+      if (((note = find_reg_note (bl->init_insn, REG_EQUAL, 0)) != NULL\n+\t   && CONSTANT_P (XEXP (note, 0)))\n+\t  || ((note = find_reg_note (bl->init_insn, REG_EQUIV, 0)) != NULL\n+\t      && CONSTANT_P (XEXP (note, 0))))\n+\tsrc = XEXP (note, 0);\n+      else\n+\tsrc = SET_SRC (bl->init_set);\n \n       if (loop_dump_stream)\n \tfprintf (loop_dump_stream,\n@@ -6185,8 +6194,8 @@ check_dbra_loop (loop_end, insn_count, loop_start)\n \n \t  /* Now check other conditions:\n \n-\t     The increment must be a constant and the comparison code\n-\t     must be LT. \n+\t     The increment must be a constant, as must the initial value,\n+\t     and the comparison code must be LT. \n \n \t     This test can probably be improved since +/- 1 in the constant\n \t     can be obtained by changing LT to LE and vice versa; this is\n@@ -6195,7 +6204,8 @@ check_dbra_loop (loop_end, insn_count, loop_start)\n \t  if (comparison\n \t      && GET_CODE (XEXP (comparison, 1)) == CONST_INT\n \t      /* LE gets turned into LT */\n-\t      && GET_CODE (comparison) == LT)\n+\t      && GET_CODE (comparison) == LT\n+\t      && GET_CODE (bl->initial_value) == CONST_INT)\n \t    {\n \t      HOST_WIDE_INT add_val, comparison_val;\n \t      rtx initial_value;"}, {"sha": "acc616fb8e403d2f698c4c3d3669b031c409f415", "filename": "gcc/md.texi", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/956d69504d77d301015532d2f0564213f0efc706/gcc%2Fmd.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/956d69504d77d301015532d2f0564213f0efc706/gcc%2Fmd.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fmd.texi?ref=956d69504d77d301015532d2f0564213f0efc706", "patch": "@@ -1735,23 +1735,23 @@ scratch registers after reload, you must define\n patterns @samp{reload_in@var{m}} or @samp{reload_out@var{m}} to handle\n them.  @xref{Register Classes}.\n \n-The constraints on a @samp{move@var{m}} must permit moving any hard\n+The constraints on a @samp{mov@var{m}} must permit moving any hard\n register to any other hard register provided that\n @code{HARD_REGNO_MODE_OK} permits mode @var{m} in both registers and\n @code{REGISTER_MOVE_COST} applied to their classes returns a value of 2.\n \n-It is obligatory to support floating point @samp{move@var{m}}\n+It is obligatory to support floating point @samp{mov@var{m}}\n instructions into and out of any registers that can hold fixed point\n values, because unions and structures (which have modes @code{SImode} or\n @code{DImode}) can be in those registers and they may have floating\n point members.\n \n-There may also be a need to support fixed point @samp{move@var{m}}\n+There may also be a need to support fixed point @samp{mov@var{m}}\n instructions in and out of floating point registers.  Unfortunately, I\n have forgotten why this was so, and I don't know whether it is still\n true.  If @code{HARD_REGNO_MODE_OK} rejects fixed point values in\n floating point registers, then the constraints of the fixed point\n-@samp{move@var{m}} instructions must be designed to avoid ever trying to\n+@samp{mov@var{m}} instructions must be designed to avoid ever trying to\n reload into a floating point register.\n \n @cindex @code{reload_in} instruction pattern\n@@ -2400,7 +2400,7 @@ are allocating space from the main stack, do this by emitting a\n move insn to copy @code{virtual_stack_dynamic_rtx} to operand 0.\n If you are allocating the space elsewhere, generate code to copy the\n location of the space to operand 0.  In the latter case, you must\n-ensure this space gets freed when the correspoinding space on the main\n+ensure this space gets freed when the corresponding space on the main\n stack is free.\n \n Do not define this pattern if all that must be done is the subtraction."}, {"sha": "39f3bc61f1f51b1b018d0b6ab6c1f021c853c53e", "filename": "gcc/mips-tfile.c", "status": "modified", "additions": 11, "deletions": 12, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/956d69504d77d301015532d2f0564213f0efc706/gcc%2Fmips-tfile.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/956d69504d77d301015532d2f0564213f0efc706/gcc%2Fmips-tfile.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fmips-tfile.c?ref=956d69504d77d301015532d2f0564213f0efc706", "patch": "@@ -3294,14 +3294,22 @@ parse_def (name_start)\n     }\n \n \n-  t.extra_sizes = (tag_start != (char *) 0);\n+  if (storage_class == sc_Bits)\n+    {\n+      t.bitfield = 1;\n+      t.extra_sizes = 1;\n+    }\n+  else\n+    t.extra_sizes = 0;\n+\n   if (t.num_dims > 0)\n     {\n-      int diff = t.num_dims - t.num_sizes;\n+      int num_real_sizes = t.num_sizes - t.extra_sizes;\n+      int diff = t.num_dims - num_real_sizes;\n       int i = t.num_dims - 1;\n       int j;\n \n-      if (t.num_sizes != 1 || diff < 0)\n+      if (num_real_sizes != 1 || diff < 0)\n \t{\n \t  error_line = __LINE__;\n \t  saber_stop ();\n@@ -3312,7 +3320,6 @@ parse_def (name_start)\n \t and sizes were passed, creating extra sizes for multiply\n \t dimensioned arrays if not passed.  */\n \n-      t.extra_sizes = 0;\n       if (diff)\n \t{\n \t  for (j = (sizeof (t.sizes) / sizeof (t.sizes[0])) - 1; j >= 0; j--)\n@@ -3329,14 +3336,6 @@ parse_def (name_start)\n \t}\n     }\n \n-  else if (symbol_type == st_Member && t.num_sizes - t.extra_sizes == 1)\n-    { /* Is this a bitfield?  This is indicated by a structure member\n-\t having a size field that isn't an array.  */\n-\n-      t.bitfield = 1;\n-    }\n-\n-\n   /* Except for enumeration members & begin/ending of scopes, put the\n      type word in the aux. symbol table.  */\n "}, {"sha": "1122bca263b7a1115ddf34f4fb5e46b7301e965a", "filename": "gcc/objc/Make-lang.in", "status": "modified", "additions": 16, "deletions": 10, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/956d69504d77d301015532d2f0564213f0efc706/gcc%2Fobjc%2FMake-lang.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/956d69504d77d301015532d2f0564213f0efc706/gcc%2Fobjc%2FMake-lang.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fobjc%2FMake-lang.in?ref=956d69504d77d301015532d2f0564213f0efc706", "patch": "@@ -71,7 +71,7 @@ cc1obj: $(P) $(OBJC_OBJS) $(OBJS) $(BC_OBJS) $(LIBDEPS)\n objc-parse.o : $(srcdir)/objc/objc-parse.c \\\n    $(CONFIG_H) $(TREE_H) \\\n    $(srcdir)/c-lex.h $(srcdir)/c-tree.h $(srcdir)/input.h \\\n-   $(srcdir)/flags.h $(srcdir)/objc/objc-act.h\n+   $(srcdir)/flags.h $(srcdir)/output.h $(srcdir)/objc/objc-act.h\n \t$(CC) $(ALL_CFLAGS) $(ALL_CPPFLAGS) $(INCLUDES) -I$(srcdir)/objc \\\n \t-c $(srcdir)/objc/objc-parse.c\n \n@@ -90,7 +90,7 @@ objc-act.o : $(srcdir)/objc/objc-act.c \\\n    $(CONFIG_H) $(TREE_H) $(RTL_H) \\\n    $(srcdir)/c-tree.h $(srcdir)/c-lex.h \\\n    $(srcdir)/flags.h $(srcdir)/objc/objc-act.h $(srcdir)/input.h \\\n-   $(srcdir)/function.h $(srcdir)/c-parse.h\n+   $(srcdir)/function.h $(srcdir)/output.h $(srcdir)/c-parse.h\n \t$(CC) $(ALL_CFLAGS) $(ALL_CPPFLAGS) $(INCLUDES) -I$(srcdir)/objc \\\n \t-c $(srcdir)/objc/objc-act.c\n \n@@ -153,13 +153,13 @@ objc/misc.o: $(srcdir)/objc/misc.c $(GCC_PASSES)\n \t-c $(srcdir)/objc/misc.c -o $@\n objc/NXConstStr.o: $(srcdir)/objc/NXConstStr.m $(GCC_PASSES)\n \t$(GCC_FOR_TARGET) $(GCC_CFLAGS) $(INCLUDES) \\\n-\t-c $(srcdir)/objc/NXConstStr.m -o $@\n+\t-fgnu-runtime -c $(srcdir)/objc/NXConstStr.m -o $@\n objc/Object.o: $(srcdir)/objc/Object.m $(GCC_PASSES)\n \t$(GCC_FOR_TARGET) $(GCC_CFLAGS) $(INCLUDES) \\\n-\t-c $(srcdir)/objc/Object.m -o $@\n+\t-fgnu-runtime -c $(srcdir)/objc/Object.m -o $@\n objc/Protocol.o: $(srcdir)/objc/Protocol.m $(GCC_PASSES)\n \t$(GCC_FOR_TARGET) $(GCC_CFLAGS) $(INCLUDES) \\\n-\t-c $(srcdir)/objc/Protocol.m -o $@\n+\t-fgnu-runtime -c $(srcdir)/objc/Protocol.m -o $@\n objc/thr.o: $(srcdir)/objc/thr.h $(srcdir)/objc/thr.c $(GCC_PASSES)\n \t$(GCC_FOR_TARGET) $(GCC_CFLAGS) $(INCLUDES) \\\n \t-c $(srcdir)/objc/thr.c -o $@\n@@ -171,7 +171,7 @@ objc/nil_method.o: $(srcdir)/objc/nil_method.c $(GCC_PASSES)\n \t-c $(srcdir)/objc/nil_method.c -o $@\n objc/linking.o: $(srcdir)/objc/linking.m $(GCC_PASSES)\n \t$(GCC_FOR_TARGET) $(GCC_CFLAGS) $(INCLUDES) \\\n-\t-c $(srcdir)/objc/linking.m -o $@\n+\t-fgnu-runtime -c $(srcdir)/objc/linking.m -o $@\n \n $(srcdir)/objc/libobjc_entry.o: $(srcdir)/objc/libobjc_entry.c $(GCC_PASSES)\n \t$(GCC_FOR_TARGET) $(GCC_CFLAGS) $(INCLUDES) \\\n@@ -181,7 +181,7 @@ $(OBJC_O): $(GCC_PASSES) cc1obj\n \n # Build the Objective C runtime library.\n libobjc.a: cc1obj specs stmp-int-hdrs libgcc2.ready \\\n- $(USE_COLLECT2) $(EXTRA_PARTS) $(OBJC_O)\n+ $(USE_COLLECT2) $(EXTRA_PARTS) $(srcdir)/objc/runtime-info.h $(OBJC_O)\n \t-rm -f libobjc.a\n \t$(AR) $(AR_FLAGS) libobjc.a $(OBJC_O)\n \t-if $(RANLIB_TEST) ; then $(RANLIB) libobjc.a; else true; fi\n@@ -191,22 +191,28 @@ libobjc_s.a: libobjc.a\n \n # Create a relocatable DLL\n libobjc.dll: libobjc_s.a $(srcdir)/objc/libobjc_entry.o\n-\t$(GCC_FOR_TARGET) -dll -Wl,--base-file -Wl,libobjc.base \\\n+\t$(GCC_FOR_TARGET) -mdll -Wl,--base-file -Wl,libobjc.base \\\n \t\t-o libobjc.dll libobjc_s.a \\\n \t\t$(srcdir)/objc/libobjc_entry.o -lkernel32\n \t$(DLLTOOL) --dllname libobjc.dll --def $(srcdir)/objc/libobjc.def \\\n \t\t--base-file libobjc.base --output-exp libobjc.exp\n-\t$(GCC_FOR_TARGET) -dll -Wl,--base-file libobjc.base libobjc.exp \\\n+\t$(GCC_FOR_TARGET) -mdll -Wl,--base-file libobjc.base libobjc.exp \\\n \t\t-o libobjc.dll libobjc_s.a \\\n \t\t$(srcdir)/objc/libobjc_entry.o -lkernel32\n \t$(DLLTOOL) --dllname libobjc.dll --def $(srcdir)/objc/libobjc.def \\\n \t\t--base-file libobjc.base --output-exp libobjc.exp\n-\t$(GCC_FOR_TARGET) libobjc.exp -dll \\\n+\t$(GCC_FOR_TARGET) libobjc.exp -mdll \\\n \t\t-o libobjc.dll libobjc_s.a \\\n \t\t$(srcdir)/objc/libobjc_entry.o -lkernel32\n \t$(DLLTOOL) --dllname libobjc.dll --def $(srcdir)/objc/libobjc.def \\\n \t\t--output-lib libobjc.a\n \n+# Platform generated information needed by ObjC runtime\n+$(srcdir)/objc/runtime-info.h: cc1obj\n+\techo \"\" > emptyfile\n+\techo \"/* This file is automatically generated */\" >$@\n+\t./cc1obj -print-objc-runtime-info emptyfile >>$@\n+\n #\f\n # Build hooks:\n "}, {"sha": "3edd3f4285edc0143546d7b5c7a79d46ffa0bd67", "filename": "gcc/obstack.h", "status": "modified", "additions": 110, "deletions": 74, "changes": 184, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/956d69504d77d301015532d2f0564213f0efc706/gcc%2Fobstack.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/956d69504d77d301015532d2f0564213f0efc706/gcc%2Fobstack.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fobstack.h?ref=956d69504d77d301015532d2f0564213f0efc706", "patch": "@@ -1,19 +1,25 @@\n /* obstack.h - object stack macros\n    Copyright (C) 1988,89,90,91,92,93,94,96,97 Free Software Foundation, Inc.\n \n-This program is free software; you can redistribute it and/or modify it\n-under the terms of the GNU General Public License as published by the\n-Free Software Foundation; either version 2, or (at your option) any\n-later version.\n+   the C library, however.  The master source lives in /gd/gnu/lib.\n \n-This program is distributed in the hope that it will be useful,\n-but WITHOUT ANY WARRANTY; without even the implied warranty of\n-MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-GNU General Public License for more details.\n+   NOTE: The canonical source of this file is maintained with the GNU C Library.\n+   Bugs can be reported to bug-glibc@prep.ai.mit.edu.\n \n-You should have received a copy of the GNU General Public License\n-along with this program; if not, write to the Free Software\n-Foundation, 675 Mass Ave, Cambridge, MA 02139, USA.  */\n+   This program is free software; you can redistribute it and/or modify it\n+   under the terms of the GNU General Public License as published by the\n+   Free Software Foundation; either version 2, or (at your option) any\n+   later version.\n+\n+   This program is distributed in the hope that it will be useful,\n+   but WITHOUT ANY WARRANTY; without even the implied warranty of\n+   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+   GNU General Public License for more details.\n+\n+   You should have received a copy of the GNU General Public License\n+   along with this program; if not, write to the Free Software\n+   Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307,\n+   USA.  */\n \n /* Summary:\n \n@@ -100,8 +106,12 @@ break the ordinary 'growth' macro.\n \n /* Don't do the contents of this file more than once.  */\n \n-#ifndef __OBSTACK_H__\n-#define __OBSTACK_H__\n+#ifndef _OBSTACK_H\n+#define _OBSTACK_H 1\n+\n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif\n \f\n /* We use subtraction of (char *) 0 instead of casting to int\n    because on word-addressable machines a simple cast to int\n@@ -138,6 +148,17 @@ break the ordinary 'growth' macro.\n #define PTR_INT_TYPE long\n #endif\n \n+#if defined (_LIBC) || defined (HAVE_STRING_H)\n+#include <string.h>\n+#define _obstack_memcpy(To, From, N) memcpy ((To), (From), (N))\n+#else\n+#ifdef memcpy\n+#define _obstack_memcpy(To, From, N) memcpy ((To), (From), (N))\n+#else\n+#define _obstack_memcpy(To, From, N) bcopy ((From), (To), (N))\n+#endif\n+#endif\n+\n struct _obstack_chunk\t\t/* Lives at front of each chunk. */\n {\n   char  *limit;\t\t\t/* 1 past end of this chunk */\n@@ -171,7 +192,9 @@ struct obstack\t\t/* control current object in current chunk */\n \t\t\t\t   chunk contains a zero-length object.  This\n \t\t\t\t   prevents freeing the chunk if we allocate\n \t\t\t\t   a bigger chunk to replace it. */\n-  unsigned alloc_failed:1;\t/* chunk alloc func returned 0 */\n+  unsigned alloc_failed:1;\t/* No longer used, as we now call the failed\n+\t\t\t\t   handler on error, but retained for binary\n+\t\t\t\t   compatibility.  */\n };\n \n /* Declare the external functions we use; they are in obstack.c.  */\n@@ -184,11 +207,13 @@ extern int _obstack_begin (struct obstack *, int, int,\n extern int _obstack_begin_1 (struct obstack *, int, int,\n \t\t\t     void *(*) (void *, long),\n \t\t\t     void (*) (void *, void *), void *);\n+extern int _obstack_memory_used (struct obstack *);\n #else\n extern void _obstack_newchunk ();\n extern void _obstack_free ();\n extern int _obstack_begin ();\n extern int _obstack_begin_1 ();\n+extern int _obstack_memory_used ();\n #endif\n \f\n #if defined (__STDC__) && __STDC__\n@@ -219,6 +244,7 @@ void * obstack_finish (struct obstack *obstack);\n int obstack_object_size (struct obstack *obstack);\n \n int obstack_room (struct obstack *obstack);\n+void obstack_make_room (struct obstack *obstack, int size);\n void obstack_1grow_fast (struct obstack *obstack, int data_char);\n void obstack_ptr_grow_fast (struct obstack *obstack, void *data);\n void obstack_int_grow_fast (struct obstack *obstack, int data);\n@@ -228,25 +254,38 @@ void * obstack_base (struct obstack *obstack);\n void * obstack_next_free (struct obstack *obstack);\n int obstack_alignment_mask (struct obstack *obstack);\n int obstack_chunk_size (struct obstack *obstack);\n+int obstack_memory_used (struct obstack *obstack);\n \n #endif /* __STDC__ */\n \n /* Non-ANSI C cannot really support alternative functions for these macros,\n    so we do not declare them.  */\n+\n+/* Error handler called when `obstack_chunk_alloc' failed to allocate\n+   more memory.  This can be set to a user defined function.  The\n+   default action is to print a message and abort.  */\n+#if defined (__STDC__) && __STDC__\n+extern void (*obstack_alloc_failed_handler) (void);\n+#else\n+extern void (*obstack_alloc_failed_handler) ();\n+#endif\n+\n+/* Exit value used when `print_and_abort' is used.  */\n+extern int obstack_exit_failure;\n \f\n /* Pointer to beginning of object being allocated or to be allocated next.\n    Note that this might not be the final address of the object\n    because a new chunk might be needed to hold the final size.  */\n \n-#define obstack_base(h) ((h)->alloc_failed ? 0 : (h)->object_base)\n+#define obstack_base(h) ((h)->object_base)\n \n /* Size for allocating ordinary chunks.  */\n \n #define obstack_chunk_size(h) ((h)->chunk_size)\n \n /* Pointer to next byte not yet allocated in current chunk.  */\n \n-#define obstack_next_free(h)\t((h)->alloc_failed ? 0 : (h)->next_free)\n+#define obstack_next_free(h)\t((h)->next_free)\n \n /* Mask specifying low bits that should be clear in address of an object.  */\n \n@@ -270,13 +309,14 @@ int obstack_chunk_size (struct obstack *obstack);\n \n #define obstack_specify_allocation_with_arg(h, size, alignment, chunkfun, freefun, arg) \\\n   _obstack_begin_1 ((h), (size), (alignment), \\\n-\t\t    (void *(*) (long)) (chunkfun), (void (*) (void *)) (freefun), (arg))\n+\t\t    (void *(*) (void *, long)) (chunkfun), \\\n+\t\t    (void (*) (void *, void *)) (freefun), (arg))\n \n #define obstack_chunkfun(h, newchunkfun) \\\n-  ((h) -> chunkfun = (struct _obstack_chunk *(*)(long)) (newchunkfun))\n+  ((h) -> chunkfun = (struct _obstack_chunk *(*)(void *, long)) (newchunkfun))\n \n #define obstack_freefun(h, newfreefun) \\\n-  ((h) -> freefun = (void (*)(void *)) (newfreefun))\n+  ((h) -> freefun = (void (*)(void *, struct _obstack_chunk *)) (newfreefun))\n \n #else\n \n@@ -307,6 +347,8 @@ int obstack_chunk_size (struct obstack *obstack);\n #define obstack_1grow_fast(h,achar) (*((h)->next_free)++ = achar)\n \n #define obstack_blank_fast(h,n) ((h)->next_free += (n))\n+\n+#define obstack_memory_used(h) _obstack_memory_used (h)\n \f\n #if defined (__GNUC__) && defined (__STDC__) && __STDC__\n /* NextStep 2.0 cc is really gcc 1.93 but it defines __GNUC__ = 2 and\n@@ -324,14 +366,21 @@ int obstack_chunk_size (struct obstack *obstack);\n #define obstack_object_size(OBSTACK)\t\t\t\t\t\\\n   __extension__\t\t\t\t\t\t\t\t\\\n   ({ struct obstack *__o = (OBSTACK);\t\t\t\t\t\\\n-     __o->alloc_failed ? 0 :\t\t\t\t\t\t\\\n      (unsigned) (__o->next_free - __o->object_base); })\n \n #define obstack_room(OBSTACK)\t\t\t\t\t\t\\\n   __extension__\t\t\t\t\t\t\t\t\\\n   ({ struct obstack *__o = (OBSTACK);\t\t\t\t\t\\\n      (unsigned) (__o->chunk_limit - __o->next_free); })\n \n+#define obstack_make_room(OBSTACK,length)\t\t\t\t\\\n+__extension__\t\t\t\t\t\t\t\t\\\n+({ struct obstack *__o = (OBSTACK);\t\t\t\t\t\\\n+   int __len = (length);\t\t\t\t\t\t\\\n+   if (__o->chunk_limit - __o->next_free < __len)\t\t\t\\\n+     _obstack_newchunk (__o, __len);\t\t\t\t\t\\\n+   (void) 0; })\n+\n #define obstack_empty_p(OBSTACK)\t\t\t\t\t\\\n   __extension__\t\t\t\t\t\t\t\t\\\n   ({ struct obstack *__o = (OBSTACK);\t\t\t\t\t\\\n@@ -343,11 +392,8 @@ __extension__\t\t\t\t\t\t\t\t\\\n    int __len = (length);\t\t\t\t\t\t\\\n    if (__o->next_free + __len > __o->chunk_limit)\t\t\t\\\n      _obstack_newchunk (__o, __len);\t\t\t\t\t\\\n-   if (!__o->alloc_failed)\t\t\t\t\t\t\\\n-     {\t\t\t\t\t\t\t\t\t\\\n-        bcopy ((char *) (where), __o->next_free, __len);\t\t\\\n-\t__o->next_free += __len;\t\t\t\t\t\\\n-     }\t\t\t\t\t\t\t\t\t\\\n+   _obstack_memcpy (__o->next_free, (char *) (where), __len);\t\t\\\n+   __o->next_free += __len;\t\t\t\t\t\t\\\n    (void) 0; })\n \n #define obstack_grow0(OBSTACK,where,length)\t\t\t\t\\\n@@ -356,21 +402,17 @@ __extension__\t\t\t\t\t\t\t\t\\\n    int __len = (length);\t\t\t\t\t\t\\\n    if (__o->next_free + __len + 1 > __o->chunk_limit)\t\t\t\\\n      _obstack_newchunk (__o, __len + 1);\t\t\t\t\\\n-   if (!__o->alloc_failed)\t\t\t\t\t\t\\\n-     {\t\t\t\t\t\t\t\t\t\\\n-       bcopy ((char *) (where), __o->next_free, __len);\t\t\t\\\n-       __o->next_free += __len;\t\t\t\t\t\t\\\n-       *(__o->next_free)++ = 0;\t\t\t\t\t\t\\\n-     }\t\t\t\t\t\t\t\t\t\\\n+   _obstack_memcpy (__o->next_free, (char *) (where), __len);\t\t\\\n+   __o->next_free += __len;\t\t\t\t\t\t\\\n+   *(__o->next_free)++ = 0;\t\t\t\t\t\t\\\n    (void) 0; })\n \n #define obstack_1grow(OBSTACK,datum)\t\t\t\t\t\\\n __extension__\t\t\t\t\t\t\t\t\\\n ({ struct obstack *__o = (OBSTACK);\t\t\t\t\t\\\n    if (__o->next_free + 1 > __o->chunk_limit)\t\t\t\t\\\n      _obstack_newchunk (__o, 1);\t\t\t\t\t\\\n-   if (!__o->alloc_failed)\t\t\t\t\t\t\\\n-     *(__o->next_free)++ = (datum);\t\t\t\t\t\\\n+   *(__o->next_free)++ = (datum);\t\t\t\t\t\\\n    (void) 0; })\n \n /* These assume that the obstack alignment is good enough for pointers or ints,\n@@ -382,17 +424,15 @@ __extension__\t\t\t\t\t\t\t\t\\\n ({ struct obstack *__o = (OBSTACK);\t\t\t\t\t\\\n    if (__o->next_free + sizeof (void *) > __o->chunk_limit)\t\t\\\n      _obstack_newchunk (__o, sizeof (void *));\t\t\t\t\\\n-   if (!__o->alloc_failed)\t\t\t\t\t\t\\\n-     *((void **)__o->next_free)++ = ((void *)datum);\t\t\t\\\n+   *((void **)__o->next_free)++ = ((void *)datum);\t\t\t\\\n    (void) 0; })\n \n #define obstack_int_grow(OBSTACK,datum)\t\t\t\t\t\\\n __extension__\t\t\t\t\t\t\t\t\\\n ({ struct obstack *__o = (OBSTACK);\t\t\t\t\t\\\n    if (__o->next_free + sizeof (int) > __o->chunk_limit)\t\t\\\n      _obstack_newchunk (__o, sizeof (int));\t\t\t\t\\\n-   if (!__o->alloc_failed)\t\t\t\t\t\t\\\n-     *((int *)__o->next_free)++ = ((int)datum);\t\t\t\t\\\n+   *((int *)__o->next_free)++ = ((int)datum);\t\t\t\t\\\n    (void) 0; })\n \n #define obstack_ptr_grow_fast(h,aptr) (*((void **) (h)->next_free)++ = (void *)aptr)\n@@ -404,8 +444,7 @@ __extension__\t\t\t\t\t\t\t\t\\\n    int __len = (length);\t\t\t\t\t\t\\\n    if (__o->chunk_limit - __o->next_free < __len)\t\t\t\\\n      _obstack_newchunk (__o, __len);\t\t\t\t\t\\\n-   if (!__o->alloc_failed)\t\t\t\t\t\t\\\n-     __o->next_free += __len;\t\t\t\t\t\t\\\n+   __o->next_free += __len;\t\t\t\t\t\t\\\n    (void) 0; })\n \n #define obstack_alloc(OBSTACK,length)\t\t\t\t\t\\\n@@ -432,21 +471,16 @@ __extension__\t\t\t\t\t\t\t\t\\\n __extension__\t\t\t\t\t\t\t\t\\\n ({ struct obstack *__o1 = (OBSTACK);\t\t\t\t\t\\\n    void *value;\t\t\t\t\t\t\t\t\\\n-   if (__o1->alloc_failed)\t\t\t\t\t\t\\\n-     value = 0;\t\t\t\t\t\t\t\t\\\n-   else\t\t\t\t\t\t\t\t\t\\\n-     {\t\t\t\t\t\t\t\t\t\\\n-       value = (void *) __o1->object_base;\t\t\t\t\\\n-       if (__o1->next_free == value)\t\t\t\t\t\\\n-         __o1->maybe_empty_object = 1;\t\t\t\t\t\\\n-       __o1->next_free\t\t\t\t\t\t\t\\\n-\t = __INT_TO_PTR ((__PTR_TO_INT (__o1->next_free)+__o1->alignment_mask)\\\n-\t\t\t & ~ (__o1->alignment_mask));\t\t\t\\\n-       if (__o1->next_free - (char *)__o1->chunk\t\t\t\\\n-\t   > __o1->chunk_limit - (char *)__o1->chunk)\t\t\t\\\n-\t __o1->next_free = __o1->chunk_limit;\t\t\t\t\\\n-       __o1->object_base = __o1->next_free;\t\t\t\t\\\n-      }\t\t\t\t\t\t\t\t\t\\\n+   value = (void *) __o1->object_base;\t\t\t\t\t\\\n+   if (__o1->next_free == value)\t\t\t\t\t\\\n+     __o1->maybe_empty_object = 1;\t\t\t\t\t\\\n+   __o1->next_free\t\t\t\t\t\t\t\\\n+     = __INT_TO_PTR ((__PTR_TO_INT (__o1->next_free)+__o1->alignment_mask)\\\n+\t\t     & ~ (__o1->alignment_mask));\t\t\t\\\n+   if (__o1->next_free - (char *)__o1->chunk\t\t\t\t\\\n+       > __o1->chunk_limit - (char *)__o1->chunk)\t\t\t\\\n+     __o1->next_free = __o1->chunk_limit;\t\t\t\t\\\n+   __o1->object_base = __o1->next_free;\t\t\t\t\t\\\n    value; })\n \n #define obstack_free(OBSTACK, OBJ)\t\t\t\t\t\\\n@@ -460,7 +494,7 @@ __extension__\t\t\t\t\t\t\t\t\\\n #else /* not __GNUC__ or not __STDC__ */\n \n #define obstack_object_size(h) \\\n- (unsigned) ((h)->alloc_failed ? 0 : (h)->next_free - (h)->object_base)\n+ (unsigned) ((h)->next_free - (h)->object_base)\n \n #define obstack_room(h)\t\t\\\n  (unsigned) ((h)->chunk_limit - (h)->next_free)\n@@ -474,40 +508,40 @@ __extension__\t\t\t\t\t\t\t\t\\\n    Casting the third operand to void was tried before,\n    but some compilers won't accept it.  */\n \n+#define obstack_make_room(h,length)\t\t\t\t\t\\\n+( (h)->temp = (length),\t\t\t\t\t\t\t\\\n+  (((h)->next_free + (h)->temp > (h)->chunk_limit)\t\t\t\\\n+   ? (_obstack_newchunk ((h), (h)->temp), 0) : 0))\n+\n #define obstack_grow(h,where,length)\t\t\t\t\t\\\n ( (h)->temp = (length),\t\t\t\t\t\t\t\\\n   (((h)->next_free + (h)->temp > (h)->chunk_limit)\t\t\t\\\n    ? (_obstack_newchunk ((h), (h)->temp), 0) : 0),\t\t\t\\\n-  ((h)->alloc_failed ? 0 :\t\t\t\t\t\t\\\n-  (bcopy ((char *) (where), (h)->next_free, (h)->temp),\t\t\t\\\n-  (h)->next_free += (h)->temp)))\n+  _obstack_memcpy ((h)->next_free, (char *) (where), (h)->temp),\t\\\n+  (h)->next_free += (h)->temp)\n \n #define obstack_grow0(h,where,length)\t\t\t\t\t\\\n ( (h)->temp = (length),\t\t\t\t\t\t\t\\\n   (((h)->next_free + (h)->temp + 1 > (h)->chunk_limit)\t\t\t\\\n    ? (_obstack_newchunk ((h), (h)->temp + 1), 0) : 0),\t\t\t\\\n-  ((h)->alloc_failed ? 0 :\t\t\t\t\t\t\\\n-  (bcopy ((char *) (where), (h)->next_free, (h)->temp),\t\t\t\\\n+  _obstack_memcpy ((h)->next_free, (char *) (where), (h)->temp),\t\\\n   (h)->next_free += (h)->temp,\t\t\t\t\t\t\\\n-  *((h)->next_free)++ = 0)))\n+  *((h)->next_free)++ = 0)\n \n #define obstack_1grow(h,datum)\t\t\t\t\t\t\\\n ( (((h)->next_free + 1 > (h)->chunk_limit)\t\t\t\t\\\n    ? (_obstack_newchunk ((h), 1), 0) : 0),\t\t\t\t\\\n- ((h)->alloc_failed ? 0 :\t\t\t\t\t\t\\\n-  (*((h)->next_free)++ = (datum))))\n+  (*((h)->next_free)++ = (datum)))\n \n #define obstack_ptr_grow(h,datum)\t\t\t\t\t\\\n ( (((h)->next_free + sizeof (char *) > (h)->chunk_limit)\t\t\\\n    ? (_obstack_newchunk ((h), sizeof (char *)), 0) : 0),\t\t\\\n-  ((h)->alloc_failed ? 0 :\t\t\t\t\t\t\\\n-  (*((char **) (((h)->next_free+=sizeof(char *))-sizeof(char *))) = ((char *) datum))))\n+  (*((char **) (((h)->next_free+=sizeof(char *))-sizeof(char *))) = ((char *) datum)))\n \n #define obstack_int_grow(h,datum)\t\t\t\t\t\\\n ( (((h)->next_free + sizeof (int) > (h)->chunk_limit)\t\t\t\\\n    ? (_obstack_newchunk ((h), sizeof (int)), 0) : 0),\t\t\t\\\n-  ((h)->alloc_failed ? 0 :\t\t\t\t\t\t\\\n-  (*((int *) (((h)->next_free+=sizeof(int))-sizeof(int))) = ((int) datum))))\n+  (*((int *) (((h)->next_free+=sizeof(int))-sizeof(int))) = ((int) datum)))\n \n #define obstack_ptr_grow_fast(h,aptr) (*((char **) (h)->next_free)++ = (char *) aptr)\n #define obstack_int_grow_fast(h,aint) (*((int *) (h)->next_free)++ = (int) aint)\n@@ -516,8 +550,7 @@ __extension__\t\t\t\t\t\t\t\t\\\n ( (h)->temp = (length),\t\t\t\t\t\t\t\\\n   (((h)->chunk_limit - (h)->next_free < (h)->temp)\t\t\t\\\n    ? (_obstack_newchunk ((h), (h)->temp), 0) : 0),\t\t\t\\\n-  ((h)->alloc_failed ? 0 :\t\t\t\t\t\t\\\n-  ((h)->next_free += (h)->temp)))\n+  ((h)->next_free += (h)->temp))\n \n #define obstack_alloc(h,length)\t\t\t\t\t\t\\\n  (obstack_blank ((h), (length)), obstack_finish ((h)))\n@@ -529,19 +562,18 @@ __extension__\t\t\t\t\t\t\t\t\\\n  (obstack_grow0 ((h), (where), (length)), obstack_finish ((h)))\n \n #define obstack_finish(h)  \t\t\t\t\t\t\\\n-( (h)->alloc_failed ? 0 :\t\t\t\t\t\t\\\n-  (((h)->next_free == (h)->object_base\t\t\t\t\t\\\n+( ((h)->next_free == (h)->object_base\t\t\t\t\t\\\n    ? (((h)->maybe_empty_object = 1), 0)\t\t\t\t\t\\\n    : 0),\t\t\t\t\t\t\t\t\\\n   (h)->temp = __PTR_TO_INT ((h)->object_base),\t\t\t\t\\\n   (h)->next_free\t\t\t\t\t\t\t\\\n     = __INT_TO_PTR ((__PTR_TO_INT ((h)->next_free)+(h)->alignment_mask)\t\\\n \t\t    & ~ ((h)->alignment_mask)),\t\t\t\t\\\n-  (((h)->next_free - (char *) (h)->chunk\t\t\t\t\t\\\n+  (((h)->next_free - (char *) (h)->chunk\t\t\t\t\\\n     > (h)->chunk_limit - (char *) (h)->chunk)\t\t\t\t\\\n    ? ((h)->next_free = (h)->chunk_limit) : 0),\t\t\t\t\\\n   (h)->object_base = (h)->next_free,\t\t\t\t\t\\\n-  __INT_TO_PTR ((h)->temp)))\n+  __INT_TO_PTR ((h)->temp))\n \n #if defined (__STDC__) && __STDC__\n #define obstack_free(h,obj)\t\t\t\t\t\t\\\n@@ -561,4 +593,8 @@ __extension__\t\t\t\t\t\t\t\t\\\n \n #endif /* not __GNUC__ or not __STDC__ */\n \n-#endif /* not __OBSTACK_H__ */\n+#ifdef __cplusplus\n+}\t/* C++ */\n+#endif\n+\n+#endif /* obstack.h */"}, {"sha": "9f80cb05b39a498b9f32e5734c42b2ddae310fa5", "filename": "gcc/pexecute.c", "status": "modified", "additions": 16, "deletions": 1, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/956d69504d77d301015532d2f0564213f0efc706/gcc%2Fpexecute.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/956d69504d77d301015532d2f0564213f0efc706/gcc%2Fpexecute.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fpexecute.c?ref=956d69504d77d301015532d2f0564213f0efc706", "patch": "@@ -223,6 +223,7 @@ pwait (pid, status, flags)\n #if defined (_WIN32)\n \n #include <process.h>\n+#include <signal.h>\n extern int _spawnv ();\n extern int _spawnvp ();\n \n@@ -301,9 +302,23 @@ pwait (pid, status, flags)\n      int *status;\n      int flags;\n {\n+  int termstat;\n+\n+  pid = cwait (&termstat, pid, WAIT_CHILD);\n+\n   /* ??? Here's an opportunity to canonicalize the values in STATUS.\n      Needed?  */\n-  return _cwait (status, pid, WAIT_CHILD);\n+\n+  /* cwait returns the child process exit code in termstat.\n+     A value of 3 indicates that the child caught a signal, but not\n+     which one.  Since only SIGABRT, SIGFPE and SIGINT do anything, we\n+     report SIGABRT.  */\n+  if (termstat == 3)\n+    *status = SIGABRT;\n+  else\n+    *status = (((termstat) & 0xff) << 8);\n+\n+  return pid;\n }\n \n #endif /* _WIN32 */"}, {"sha": "60405bd8a81097585e07cda08bbab7305b38b60d", "filename": "gcc/print-rtl.c", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/956d69504d77d301015532d2f0564213f0efc706/gcc%2Fprint-rtl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/956d69504d77d301015532d2f0564213f0efc706/gcc%2Fprint-rtl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fprint-rtl.c?ref=956d69504d77d301015532d2f0564213f0efc706", "patch": "@@ -232,10 +232,15 @@ print_inline_rtx (outf, x, ind)\n      FILE *outf;\n      rtx x;\n {\n+  int oldsaw = sawclose;\n+  int oldindent = indent;\n+\n   sawclose = 0;\n   indent = ind;\n   outfile = outf;\n   print_rtx (x);\n+  sawclose = oldsaw;\n+  indent = oldindent;\n }\n \n /* Call this function from the debugger to see what X looks like.  */"}, {"sha": "e49c4be6b436e846461c22c3a97b1a4b41fa7efb", "filename": "gcc/profile.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/956d69504d77d301015532d2f0564213f0efc706/gcc%2Fprofile.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/956d69504d77d301015532d2f0564213f0efc706/gcc%2Fprofile.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fprofile.c?ref=956d69504d77d301015532d2f0564213f0efc706", "patch": "@@ -427,7 +427,7 @@ output_gcov_string (string, delimiter)\n    the flow graph that are needed to reconstruct the dynamic behavior of the\n    flow graph.\n \n-   When FLAG_BRANCH_PROBABILITIES is nonzero, this function reads auxilliary\n+   When FLAG_BRANCH_PROBABILITIES is nonzero, this function reads auxiliary\n    information from a data file containing arc count information from previous\n    executions of the function being compiled.  In this case, the flow graph is\n    annotated with actual execution counts, which are later propagated into the\n@@ -867,7 +867,7 @@ branch_prob (f, dump_file)\n      Note that the spanning tree is considered undirected, so that as many\n      must-split arcs as possible can be put on it.\n \n-     Fallthough arcs which are crowded should not be chosen on the first\n+     Fallthrough arcs which are crowded should not be chosen on the first\n      pass, since they do not require creating a new basic block.  These\n      arcs will have fall_through set.  */\n "}, {"sha": "3a8177f125e8140f1e3dcaa62a31a04e35c7bc90", "filename": "gcc/protoize.c", "status": "modified", "additions": 27, "deletions": 17, "changes": 44, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/956d69504d77d301015532d2f0564213f0efc706/gcc%2Fprotoize.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/956d69504d77d301015532d2f0564213f0efc706/gcc%2Fprotoize.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fprotoize.c?ref=956d69504d77d301015532d2f0564213f0efc706", "patch": "@@ -81,6 +81,18 @@ Boston, MA 02111-1307, USA.  */\n #endif\n #include <setjmp.h>\n \n+#ifdef HAVE_STDLIB_H\n+#include <stdlib.h>\n+#endif\n+\n+#ifdef HAVE_STRING_H\n+#include <string.h>\n+#else\n+#ifdef HAVE_STRINGS_H\n+#include <strings.h>\n+#endif\n+#endif\n+\n #include \"gansidecl.h\"\n \n /* Include getopt.h for the sake of getopt_long.\n@@ -180,18 +192,12 @@ typedef char * const_pointer_type;\n /* Declaring stat or __flsbuf with a prototype\n    causes conflicts with system headers on some systems.  */\n \n-#ifndef abort\n-typedef void voidfn ();\n-extern VOLATILE voidfn abort;\n-#endif\n extern int creat ();\n #if 0 /* These conflict with stdio.h on some systems.  */\n extern int fprintf (FILE *, const char *, ...);\n extern int printf (const char *, ...);\n extern int open (const char *, int, ...);\n #endif /* 0 */\n-extern void exit ();\n-extern void free ();\n extern int read ();\n extern int write ();\n extern int close ();\n@@ -219,7 +225,9 @@ extern size_t   strlen ()\n \n #endif /* !defined (POSIX) */\n \n+#ifdef NEED_DECLARATION_RINDEX\n extern char *rindex ();\n+#endif\n \n /* Look for these where the `const' qualifier is intentionally cast aside.  */\n \n@@ -307,39 +315,41 @@ static const int hash_mask = (HASH_TABLE_SIZE - 1);\n #define LOCAL_INCLUDE_DIR \"/usr/local/include\"\n #endif\n \n-struct default_include { const char *fname; int x1, x2; } include_defaults[]\n+struct default_include { const char *fname; \n+\t\t\t const char *component;\n+\t\t\t int x1, x2; } include_defaults[]\n #ifdef INCLUDE_DEFAULTS\n   = INCLUDE_DEFAULTS;\n #else\n   = {\n     /* Pick up GNU C++ specific include files.  */\n-    { GPLUSPLUS_INCLUDE_DIR, 1, 1 },\n+    { GPLUSPLUS_INCLUDE_DIR, \"G++\", 1, 1 },\n #ifdef CROSS_COMPILE\n     /* This is the dir for fixincludes.  Put it just before\n        the files that we fix.  */\n-    { GCC_INCLUDE_DIR, 0, 0 },\n+    { GCC_INCLUDE_DIR, \"GCC\", 0, 0 },\n     /* For cross-compilation, this dir name is generated\n        automatically in Makefile.in.  */\n-    { CROSS_INCLUDE_DIR, 0, 0 },\n+    { CROSS_INCLUDE_DIR, 0, 0, 0 },\n     /* This is another place that the target system's headers might be.  */\n-    { TOOL_INCLUDE_DIR, 0, 0 },\n+    { TOOL_INCLUDE_DIR, \"BINUTILS\", 0, 0 },\n #else /* not CROSS_COMPILE */\n     /* This should be /use/local/include and should come before\n        the fixincludes-fixed header files.  */\n-    { LOCAL_INCLUDE_DIR, 0, 1 },\n+    { LOCAL_INCLUDE_DIR, 0, 0, 1 },\n     /* This is here ahead of GCC_INCLUDE_DIR because assert.h goes here.\n        Likewise, behind LOCAL_INCLUDE_DIR, where glibc puts its assert.h.  */\n-    { TOOL_INCLUDE_DIR, 0, 0 },\n+    { TOOL_INCLUDE_DIR, \"BINUTILS\", 0, 0 },\n     /* This is the dir for fixincludes.  Put it just before\n        the files that we fix.  */\n-    { GCC_INCLUDE_DIR, 0, 0 },\n+    { GCC_INCLUDE_DIR, \"GCC\", 0, 0 },\n     /* Some systems have an extra dir of include files.  */\n #ifdef SYSTEM_INCLUDE_DIR\n-    { SYSTEM_INCLUDE_DIR, 0, 0 },\n+    { SYSTEM_INCLUDE_DIR, 0, 0, 0 },\n #endif\n-    { STANDARD_INCLUDE_DIR, 0, 0},\n+    { STANDARD_INCLUDE_DIR, 0, 0, 0},\n #endif /* not CROSS_COMPILE */\n-    { 0, 0, 0}\n+    { 0, 0, 0, 0}\n     };\n #endif /* no INCLUDE_DEFAULTS */\n "}, {"sha": "7d9edd26e966516407c8c14f2904feb57909ddd7", "filename": "gcc/regclass.c", "status": "modified", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/956d69504d77d301015532d2f0564213f0efc706/gcc%2Fregclass.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/956d69504d77d301015532d2f0564213f0efc706/gcc%2Fregclass.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fregclass.c?ref=956d69504d77d301015532d2f0564213f0efc706", "patch": "@@ -1540,6 +1540,25 @@ record_address_regs (x, class, scale)\n \telse if (code1 == SYMBOL_REF || code1 == CONST || code1 == LABEL_REF)\n \t  record_address_regs (arg0, INDEX_REG_CLASS, scale);\n \n+\t/* If both operands are registers but one is already a hard register\n+\t   of index or base class, give the other the class that the hard\n+\t   register is not.  */\n+\n+\telse if (code0 == REG && code1 == REG\n+\t\t && REGNO (arg0) < FIRST_PSEUDO_REGISTER\n+\t\t && (REG_OK_FOR_BASE_P (arg0) || REG_OK_FOR_INDEX_P (arg0)))\n+\t  record_address_regs (arg1,\n+\t\t\t       REG_OK_FOR_BASE_P (arg0)\n+\t\t\t       ? INDEX_REG_CLASS : BASE_REG_CLASS,\n+\t\t\t       scale);\n+\telse if (code0 == REG && code1 == REG\n+\t\t && REGNO (arg1) < FIRST_PSEUDO_REGISTER\n+\t\t && (REG_OK_FOR_BASE_P (arg1) || REG_OK_FOR_INDEX_P (arg1)))\n+\t  record_address_regs (arg0,\n+\t\t\t       REG_OK_FOR_BASE_P (arg1)\n+\t\t\t       ? INDEX_REG_CLASS : BASE_REG_CLASS,\n+\t\t\t       scale);\n+\n \t/* If one operand is known to be a pointer, it must be the base\n \t   with the other operand the index.  Likewise if the other operand\n \t   is a MULT.  */"}, {"sha": "f8d0b8bf15949d1be3db045e55eba4ee342992b0", "filename": "gcc/reload.c", "status": "modified", "additions": 14, "deletions": 2, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/956d69504d77d301015532d2f0564213f0efc706/gcc%2Freload.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/956d69504d77d301015532d2f0564213f0efc706/gcc%2Freload.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Freload.c?ref=956d69504d77d301015532d2f0564213f0efc706", "patch": "@@ -260,7 +260,7 @@ static int this_insn_is_asm;\n static int hard_regs_live_known;\n \n /* Indexed by hard reg number,\n-   element is nonegative if hard reg has been spilled.\n+   element is nonnegative if hard reg has been spilled.\n    This vector is passed to `find_reloads' as an argument\n    and is not changed here.  */\n static short *static_reload_reg_p;\n@@ -4940,7 +4940,7 @@ find_reloads_address_1 (mode, x, context, loc, opnum, type, ind_levels, insn)\n \t\t CALL_INSN - and it does not set CC0.\n \t\t But don't do this if we cannot directly address the\n \t\t memory location, since this will make it harder to\n-\t\t reuse address reloads, and increses register pressure.\n+\t\t reuse address reloads, and increases register pressure.\n \t\t Also don't do this if we can probably update x directly.  */\n \t      rtx equiv = reg_equiv_mem[regno];\n \t      int icode = (int) add_optab->handlers[(int) Pmode].insn_code;\n@@ -5351,6 +5351,18 @@ find_replacement (loc)\n \t}\n     }\n \n+  /* If *LOC is a PLUS, MINUS, or MULT, see if a replacement is scheduled for\n+     what's inside and make a new rtl if so.  */\n+  if (GET_CODE (*loc) == PLUS || GET_CODE (*loc) == MINUS\n+      || GET_CODE (*loc) == MULT)\n+    {\n+      rtx x = find_replacement (&XEXP (*loc, 0));\n+      rtx y = find_replacement (&XEXP (*loc, 1));\n+\n+      if (x != XEXP (*loc, 0) || y != XEXP (*loc, 1))\n+\treturn gen_rtx (GET_CODE (*loc), GET_MODE (*loc), x, y);\n+    }\n+\n   return *loc;\n }\n \f"}, {"sha": "c8573dc39bc766ad18bef35e302af0e2f1725752", "filename": "gcc/reload1.c", "status": "modified", "additions": 8, "deletions": 1, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/956d69504d77d301015532d2f0564213f0efc706/gcc%2Freload1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/956d69504d77d301015532d2f0564213f0efc706/gcc%2Freload1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Freload1.c?ref=956d69504d77d301015532d2f0564213f0efc706", "patch": "@@ -673,7 +673,14 @@ reload (first, global, dumpfile)\n \t      if (i > LAST_VIRTUAL_REGISTER)\n \t\t{\n \t\t  if (GET_CODE (x) == MEM)\n-\t\t    reg_equiv_memory_loc[i] = x;\n+\t\t    {\n+\t\t      /* If the operand is a PLUS, the MEM may be shared,\n+\t\t\t so make sure we have an unshared copy here.  */\n+\t\t      if (GET_CODE (XEXP (x, 0)) == PLUS)\n+\t\t\tx = copy_rtx (x);\n+\n+\t\t      reg_equiv_memory_loc[i] = x;\n+\t\t    }\n \t\t  else if (CONSTANT_P (x))\n \t\t    {\n \t\t      if (LEGITIMATE_CONSTANT_P (x))"}, {"sha": "dde2a8396a5e6df51bded468e61d4463cfdbf8b0", "filename": "gcc/rtl.c", "status": "modified", "additions": 3, "deletions": 11, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/956d69504d77d301015532d2f0564213f0efc706/gcc%2Frtl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/956d69504d77d301015532d2f0564213f0efc706/gcc%2Frtl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frtl.c?ref=956d69504d77d301015532d2f0564213f0efc706", "patch": "@@ -184,6 +184,9 @@ char *reg_note_name[] = { \"\", \"REG_DEAD\", \"REG_INC\", \"REG_EQUIV\", \"REG_WAS_0\",\n \t\t\t  \"REG_EXEC_COUNT\", \"REG_NOALIAS\", \"REG_SAVE_AREA\",\n \t\t\t  \"REG_BR_PRED\" };\n \n+static void dump_and_abort\tPROTO((int, int, FILE *));\n+static void read_name\t\tPROTO((char *, FILE *));\n+\f\n /* Allocate an rtx vector of N elements.\n    Store the length, and initialize all elements to zero.  */\n \n@@ -849,14 +852,3 @@ init_rtl ()\n \t}\n     }\n }\n-\f\n-#ifdef memset\n-gcc_memset (dest, value, len)\n-     char *dest;\n-     int value;\n-     int len;\n-{\n-  while (len-- > 0)\n-    *dest++ = value;\n-}\n-#endif /* memset */"}, {"sha": "c1d14a1bb5ae84dfb4bfac1fb209954e83075e3f", "filename": "gcc/rtl.def", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/956d69504d77d301015532d2f0564213f0efc706/gcc%2Frtl.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/956d69504d77d301015532d2f0564213f0efc706/gcc%2Frtl.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frtl.def?ref=956d69504d77d301015532d2f0564213f0efc706", "patch": "@@ -1,7 +1,7 @@\n /* This file contains the definitions and documentation for the\n    Register Transfer Expressions (rtx's) that make up the\n    Register Transfer Language (rtl) used in the Back End of the GNU compiler.\n-   Copyright (C) 1987, 1988, 1992, 1994, 1995 Free Software Foundation, Inc.\n+   Copyright (C) 1987, 88, 92, 94, 95, 1997 Free Software Foundation, Inc.\n \n This file is part of GNU CC.\n \n@@ -102,7 +102,7 @@ DEF_RTL_EXPR(INSN_LIST, \"insn_list\", \"ue\", 'x')\n    '=' to indicate the operand is only written to.\n    '+' to indicate the operand is both read and written to.\n \n-   Each character in the string represents an allocatable class for an operand.\n+   Each character in the string represents an allocable class for an operand.\n    'g' indicates the operand can be any valid class.\n    'i' indicates the operand can be immediate (in the instruction) data.\n    'r' indicates the operand can be in a register.\n@@ -257,7 +257,7 @@ DEF_RTL_EXPR(DEFINE_DELAY, \"define_delay\", \"eE\", 'x')\n \t\tunit with no issue constraints.  If only one operation can\n \t\tbe executed a time and the unit is busy for the entire time,\n \t\tthe 3rd operand should be specified as 1, the 6th operand\n-\t\tsould be specified as 0, and the 7th operand should not\n+\t\tshould be specified as 0, and the 7th operand should not\n \t\tbe specified.\n \n \t\tIf this operand is specified, it is a list of attribute"}, {"sha": "aa3ef9f47ba84f9a6c0f51ab233ac22332414873", "filename": "gcc/rtl.h", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/956d69504d77d301015532d2f0564213f0efc706/gcc%2Frtl.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/956d69504d77d301015532d2f0564213f0efc706/gcc%2Frtl.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frtl.h?ref=956d69504d77d301015532d2f0564213f0efc706", "patch": "@@ -699,6 +699,9 @@ extern char *xrealloc ();\n \n extern char *oballoc\t\t\tPROTO((int));\n extern char *permalloc\t\t\tPROTO((int));\n+#ifdef NEED_DECLARATION_FREE\n+extern void free\t\t\tPROTO((void *));\n+#endif\n extern rtx rtx_alloc\t\t\tPROTO((RTX_CODE));\n extern rtvec rtvec_alloc\t\tPROTO((int));\n extern rtx copy_rtx\t\t\tPROTO((rtx));"}, {"sha": "db0b77dc133cfafd05f2704475ffad41ccf2e673", "filename": "gcc/stmt.c", "status": "modified", "additions": 39, "deletions": 28, "changes": 67, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/956d69504d77d301015532d2f0564213f0efc706/gcc%2Fstmt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/956d69504d77d301015532d2f0564213f0efc706/gcc%2Fstmt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fstmt.c?ref=956d69504d77d301015532d2f0564213f0efc706", "patch": "@@ -1618,7 +1618,11 @@ expand_asm_operands (string, outputs, inputs, clobbers, vol, filename, line)\n \t  case '5':  case '6':  case '7':  case '8':  case '9':\n \t    if (TREE_STRING_POINTER (TREE_PURPOSE (tail))[j]\n \t\t>= '0' + noutputs)\n-\t      error (\"matching constraint references invalid operand number\");\n+\t      {\n+\t\terror\n+\t\t  (\"matching constraint references invalid operand number\");\n+\t\treturn;\n+\t      }\n \n \t    /* ... fall through ... */\n \n@@ -1751,7 +1755,7 @@ expand_asm_operands (string, outputs, inputs, clobbers, vol, filename, line)\n \t\t  continue;\n \t\t}\n \n-\t      /* Ignore unknown register, error already signalled.  */\n+\t      /* Ignore unknown register, error already signaled.  */\n \t      continue;\n \t    }\n \n@@ -4071,7 +4075,7 @@ expand_dcc_cleanup (decl)\n \n /* Arrange for the top element of the dynamic handler chain to be\n    popped if we exit the current binding contour.  DECL is the\n-   assciated declaration, if any, otherwise NULL_TREE.  If the current\n+   associated declaration, if any, otherwise NULL_TREE.  If the current\n    contour is left via an exception, then __sjthrow will pop the top\n    element off the dynamic handler chain.  The code that avoids doing\n    the action we push into the handler chain in the exceptional case\n@@ -4248,10 +4252,10 @@ expand_cleanups (list, dont_do, in_fixup, reachable)\n    context, so that any cleanup actions we register with\n    expand_decl_init will be properly conditionalized when those\n    cleanup actions are later performed.  Must be called before any\n-   expression (tree) is expanded that is within a contidional context.  */\n+   expression (tree) is expanded that is within a conditional context.  */\n \n void\n-start_cleanup_deferal ()\n+start_cleanup_deferral ()\n {\n   /* block_stack can be NULL if we are inside the parameter list.  It is\n      OK to do nothing, because cleanups aren't possible here.  */\n@@ -4260,12 +4264,12 @@ start_cleanup_deferal ()\n }\n \n /* Mark the end of a conditional region of code.  Because cleanup\n-   deferals may be nested, we may still be in a conditional region\n+   deferrals may be nested, we may still be in a conditional region\n    after we end the currently deferred cleanups, only after we end all\n    deferred cleanups, are we back in unconditional code.  */\n \n void\n-end_cleanup_deferal ()\n+end_cleanup_deferral ()\n {\n   /* block_stack can be NULL if we are inside the parameter list.  It is\n      OK to do nothing, because cleanups aren't possible here.  */\n@@ -4378,7 +4382,7 @@ expand_start_case (exit_flag, expr, type, printname)\n \n   thiscase->data.case_stmt.start = get_last_insn ();\n \n-  start_cleanup_deferal ();\n+  start_cleanup_deferral ();\n }\n \n \n@@ -4431,15 +4435,15 @@ expand_start_case_dummy ()\n   thiscase->data.case_stmt.num_ranges = 0;\n   case_stack = thiscase;\n   nesting_stack = thiscase;\n-  start_cleanup_deferal ();\n+  start_cleanup_deferral ();\n }\n \n /* End a dummy case statement.  */\n \n void\n expand_end_case_dummy ()\n {\n-  end_cleanup_deferal ();\n+  end_cleanup_deferral ();\n   POPSTACK (case_stack);\n }\n \n@@ -4546,11 +4550,14 @@ pushcase (value, converter, label, duplicate)\n   return 0;\n }\n \n-/* Like pushcase but this case applies to all values\n-   between VALUE1 and VALUE2 (inclusive).\n-   The return value is the same as that of pushcase\n-   but there is one additional error code:\n-   4 means the specified range was empty.  */\n+/* Like pushcase but this case applies to all values between VALUE1 and\n+   VALUE2 (inclusive).  If VALUE1 is NULL, the range starts at the lowest\n+   value of the index type and ends at VALUE2.  If VALUE2 is NULL, the range\n+   starts at VALUE1 and ends at the highest value of the index type.\n+   If both are NULL, this case applies to all values.\n+\n+   The return value is the same as that of pushcase but there is one\n+   additional error code: 4 means the specified range was empty.  */\n \n int\n pushcase_range (value1, value2, converter, label, duplicate)\n@@ -4568,10 +4575,6 @@ pushcase_range (value1, value2, converter, label, duplicate)\n   if (! (case_stack && case_stack->data.case_stmt.start))\n     return 1;\n \n-  /* Fail if the range is empty.  */\n-  if (tree_int_cst_lt (value2, value1))\n-    return 4;\n-\n   if (stack_block_stack\n       && stack_block_stack->depth > case_stack->depth)\n     return 5;\n@@ -4604,20 +4607,28 @@ pushcase_range (value1, value2, converter, label, duplicate)\n     }\n   case_stack->data.case_stmt.seenlabel = 1;\n \n-  /* Convert VALUEs to type in which the comparisons are nominally done.  */\n-  if (value1 == 0)  /* Negative infinity.  */\n+  /* Convert VALUEs to type in which the comparisons are nominally done\n+     and replace any unspecified value with the corresponding bound.  */\n+  if (value1 == 0)\n     value1 = TYPE_MIN_VALUE (index_type);\n-  value1 = (*converter) (nominal_type, value1);\n-\n-  if (value2 == 0)  /* Positive infinity.  */\n+  if (value2 == 0)\n     value2 = TYPE_MAX_VALUE (index_type);\n+\n+  /* Fail if the range is empty.  Do this before any conversion since\n+     we want to allow out-of-range empty ranges.  */\n+  if (tree_int_cst_lt (value2, value1))\n+    return 4;\n+\n+  value1 = (*converter) (nominal_type, value1);\n   value2 = (*converter) (nominal_type, value2);\n \n   /* Fail if these values are out of range.  */\n-  if (! int_fits_type_p (value1, index_type))\n+  if (TREE_CONSTANT_OVERFLOW (value1)\n+      || ! int_fits_type_p (value1, index_type))\n     return 3;\n \n-  if (! int_fits_type_p (value2, index_type))\n+  if (TREE_CONSTANT_OVERFLOW (value2)\n+      || ! int_fits_type_p (value2, index_type))\n     return 3;\n \n   return add_case_node (value1, value2, label, duplicate);\n@@ -5433,7 +5444,7 @@ expand_end_case (orig_index)\n       if (count != 0)\n \trange = fold (build (MINUS_EXPR, index_type, maxval, minval));\n \n-      end_cleanup_deferal ();\n+      end_cleanup_deferral ();\n \n       if (count == 0)\n \t{\n@@ -5703,7 +5714,7 @@ expand_end_case (orig_index)\n \t\t     thiscase->data.case_stmt.start);\n     }\n   else\n-    end_cleanup_deferal ();\n+    end_cleanup_deferral ();\n \n   if (thiscase->exit_label)\n     emit_label (thiscase->exit_label);"}, {"sha": "a4698157cc70a4e09cc397a87700eea164706f09", "filename": "gcc/stor-layout.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/956d69504d77d301015532d2f0564213f0efc706/gcc%2Fstor-layout.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/956d69504d77d301015532d2f0564213f0efc706/gcc%2Fstor-layout.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fstor-layout.c?ref=956d69504d77d301015532d2f0564213f0efc706", "patch": "@@ -1190,7 +1190,7 @@ get_best_mode (bitsize, bitpos, align, largest_mode, volatilep)\n        mode = GET_MODE_WIDER_MODE (mode))\n     {\n       unit = GET_MODE_BITSIZE (mode);\n-      if (bitpos / unit == (bitpos + bitsize - 1) / unit)\n+      if ((bitpos % unit) + bitsize <= unit)\n \tbreak;\n     }\n "}, {"sha": "3f451d1f5b0ae82ca03df8d58a43081a316f09d0", "filename": "gcc/tm.texi", "status": "modified", "additions": 17, "deletions": 5, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/956d69504d77d301015532d2f0564213f0efc706/gcc%2Ftm.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/956d69504d77d301015532d2f0564213f0efc706/gcc%2Ftm.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftm.texi?ref=956d69504d77d301015532d2f0564213f0efc706", "patch": "@@ -1361,7 +1361,7 @@ One use of this macro is on machines where the highest numbered\n registers must always be saved and the save-multiple-registers\n instruction supports only sequences of consecutive registers.  On such\n machines, define @code{REG_ALLOC_ORDER} to be an initializer that lists\n-the highest numbered allocatable register first.\n+the highest numbered allocable register first.\n \n @findex ORDER_REGS_FOR_LOCAL_ALLOC\n @item ORDER_REGS_FOR_LOCAL_ALLOC\n@@ -1465,14 +1465,14 @@ be used unless some pattern's constraint asks for one.\n @findex MODES_TIEABLE_P\n @item MODES_TIEABLE_P (@var{mode1}, @var{mode2})\n A C expression that is nonzero if a value of mode\n-@var{mode1} is accessable in mode @var{mode2} without copying.\n+@var{mode1} is accessible in mode @var{mode2} without copying.\n \n If @code{HARD_REGNO_MODE_OK (@var{r}, @var{mode1})} and\n @code{HARD_REGNO_MODE_OK (@var{r}, @var{mode2})} are always the same for\n any @var{r}, then @code{MODES_TIEABLE_P (@var{mode1}, @var{mode2})}\n should be nonzero.  If they differ for any @var{r}, you should define\n this macro to return zero unless some other mechanism ensures the\n-accessability of the value in a narrower mode.\n+accessibility of the value in a narrower mode.\n \n You should define this macro to return nonzero in as many cases as\n possible since doing so will allow GNU CC to perform better register\n@@ -3333,7 +3333,7 @@ the function prologue.  Normally, the profiling code comes after.\n A C statement or compound statement to output to @var{file} some\n assembler code to initialize basic-block profiling for the current\n object module.  The global compile flag @code{profile_block_flag}\n-distingishes two profile modes.\n+distinguishes two profile modes.\n \n @table @code\n @findex __bb_init_func\n@@ -3393,7 +3393,7 @@ call __bb_init_trace_func\n A C statement or compound statement to output to @var{file} some\n assembler code to increment the count associated with the basic\n block number @var{blockno}.  The global compile flag\n-@code{profile_block_flag} distingishes two profile modes.\n+@code{profile_block_flag} distinguishes two profile modes.\n \n @table @code\n @item profile_block_flag != 2\n@@ -5479,6 +5479,18 @@ which defines (equates) the symbol @var{name} to have the value @var{value}.\n If SET_ASM_OP is defined, a default definition is provided which is\n correct for most systems.\n \n+@findex ASM_OUTPUT_DEFINE_LABEL_DIFFERENCE_SYMBOL\n+@item ASM_OUTPUT_DEFINE_LABEL_DIFFERENCE_SYMBOL (@var{stream}, @var{symbol}, @var{high}, @var{low})\n+A C statement to output to the stdio stream @var{stream} assembler code\n+which defines (equates) the symbol @var{symbol} to have a value equal to\n+the difference of the two symbols @var{high} and @var{low}, i.e.\n+@var{high} minus @var{low}.  GNU CC guarantees that the symbols @var{high}\n+and @var{low} are already known by the assembler so that the difference\n+resolves into a constant.\n+\n+If SET_ASM_OP is defined, a default definition is provided which is\n+correct for most systems.\n+\n @findex ASM_OUTPUT_WEAK_ALIAS\n @item ASM_OUTPUT_WEAK_ALIAS (@var{stream}, @var{name}, @var{value})\n A C statement to output to the stdio stream @var{stream} assembler code"}, {"sha": "7340b623b64fadf7988460e148184e938db2817e", "filename": "gcc/toplev.c", "status": "modified", "additions": 27, "deletions": 16, "changes": 43, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/956d69504d77d301015532d2f0564213f0efc706/gcc%2Ftoplev.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/956d69504d77d301015532d2f0564213f0efc706/gcc%2Ftoplev.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftoplev.c?ref=956d69504d77d301015532d2f0564213f0efc706", "patch": "@@ -35,21 +35,31 @@ Boston, MA 02111-1307, USA.  */\n #include <sys/types.h>\n #include <ctype.h>\n #include <sys/stat.h>\n-#if !defined (_WIN32) || defined (__CYGWIN32__)\n-#ifdef USG\n #undef FLOAT\n+#ifdef HAVE_SYS_PARAM_H\n #include <sys/param.h>\n-/* This is for hpux.  It is a real screw.  They should change hpux.  */\n-#undef FLOAT\n-#include <sys/times.h>\n-#include <time.h>   /* Correct for hpux at least.  Is it good on other USG?  */\n+#endif\n+\n+#undef FLOAT /* This is for hpux. They should change hpux.  */\n #undef FFS  /* Some systems define this in param.h.  */\n+\n+#ifdef TIME_WITH_SYS_TIME\n+# include <sys/time.h>\n+# include <time.h>\n #else\n-#ifndef VMS\n-#include <sys/time.h>\n-#include <sys/resource.h>\n+# if HAVE_SYS_TIME_H\n+# include <sys/time.h>\n+# else\n+#  include <time.h>\n #endif\n #endif\n+\n+#ifdef HAVE_SYS_RESOURCE_H\n+# include <sys/resource.h>\n+#endif\n+\n+#ifdef HAVE_SYS_TIMES_H\n+# include <sys/times.h>\n #endif\n \n #include \"input.h\"\n@@ -854,6 +864,7 @@ char *lang_options[] =\n   \"-Wno-selector\",\n   \"-Wprotocol\",\n   \"-Wno-protocol\",\n+  \"-print-objc-runtime-info\",\n \n #include \"options.h\"\n   0\n@@ -3026,7 +3037,7 @@ rest_of_compilation (decl)\n \n   if (DECL_SAVED_INSNS (decl) == 0)\n     {\n-      int inlineable = 0;\n+      int inlinable = 0;\n       char *lose;\n \n       /* If requested, consider whether to make this function inline.  */\n@@ -3053,7 +3064,7 @@ rest_of_compilation (decl)\n \t\t\tlike \"inline\" was specified for a function if we choose\n \t\t\tto inline it.  This isn't quite right, but it's\n \t\t\tprobably not worth the trouble to fix.  */\n-\t\t     inlineable = DECL_INLINE (decl) = 1;\n+\t\t     inlinable = DECL_INLINE (decl) = 1;\n \t\t });\n \n       insns = get_insns ();\n@@ -3073,7 +3084,7 @@ rest_of_compilation (decl)\n \n       /* If we can, defer compiling inlines until EOF.\n \t save_for_inline_copying can be extremely expensive.  */\n-      if (inlineable && ! decl_function_context (decl))\n+      if (inlinable && ! decl_function_context (decl))\n \tDECL_DEFER_OUTPUT (decl) = 1;\n \n       /* If function is inline, and we don't yet know whether to\n@@ -3088,7 +3099,7 @@ rest_of_compilation (decl)\n \t finish compiling ourselves.  Otherwise, wait until EOF.\n \t We have to do this because the purge_addressof transformation\n \t changes the DECL_RTL for many variables, which confuses integrate.  */\n-      if (inlineable)\n+      if (inlinable)\n \t{\n \t  if (decl_function_context (decl))\n \t    purge_addressof (insns);\n@@ -3131,14 +3142,14 @@ rest_of_compilation (decl)\n \t\t}\n #endif\n \t      TIMEVAR (integration_time, save_for_inline_nocopy (decl));\n-\t      RTX_INTEGRATED_P (DECL_SAVED_INSNS (decl)) = inlineable;\n+\t      RTX_INTEGRATED_P (DECL_SAVED_INSNS (decl)) = inlinable;\n \t      goto exit_rest_of_compilation;\n \t    }\n \t}\n \n       /* If we have to compile the function now, save its rtl and subdecls\n \t so that its compilation will not affect what others get.  */\n-      if (inlineable || DECL_DEFER_OUTPUT (decl))\n+      if (inlinable || DECL_DEFER_OUTPUT (decl))\n \t{\n #ifdef DWARF_DEBUGGING_INFO\n \t  /* Generate the DWARF info for the \"abstract\" instance of\n@@ -3167,7 +3178,7 @@ rest_of_compilation (decl)\n \t  saved_block_tree = DECL_INITIAL (decl);\n \t  saved_arguments = DECL_ARGUMENTS (decl);\n \t  TIMEVAR (integration_time, save_for_inline_copying (decl));\n-\t  RTX_INTEGRATED_P (DECL_SAVED_INSNS (decl)) = inlineable;\n+\t  RTX_INTEGRATED_P (DECL_SAVED_INSNS (decl)) = inlinable;\n \t}\n \n       /* If specified extern inline but we aren't inlining it, we are"}, {"sha": "5db36c2a5eb8b40972cd88f31e446baf5bc3442f", "filename": "gcc/tree.c", "status": "modified", "additions": 7, "deletions": 3, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/956d69504d77d301015532d2f0564213f0efc706/gcc%2Ftree.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/956d69504d77d301015532d2f0564213f0efc706/gcc%2Ftree.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree.c?ref=956d69504d77d301015532d2f0564213f0efc706", "patch": "@@ -55,6 +55,10 @@ Boston, MA 02111-1307, USA.  */\n extern void free PROTO((void *));\n #endif\n \n+#ifdef HAVE_STDLIB_H\n+#include <stdlib.h>\n+#endif\n+\n #define obstack_chunk_alloc xmalloc\n #define obstack_chunk_free free\n \n@@ -2605,10 +2609,10 @@ substitute_in_expr (exp, f, r)\n \t  op0 = (TREE_CHAIN (exp) == 0\n \t\t ? 0 : substitute_in_expr (TREE_CHAIN (exp), f, r));\n \t  op1 = substitute_in_expr (TREE_VALUE (exp), f, r);\n-\t  if (op0 == TREE_CHAIN (exp) || op1 == TREE_VALUE (exp))\n+\t  if (op0 == TREE_CHAIN (exp) && op1 == TREE_VALUE (exp))\n \t    return exp;\n \n-\t  return tree_cons (TREE_PURPOSE (exp), op0, op1);\n+\t  return tree_cons (TREE_PURPOSE (exp), op1, op0);\n \t}\n \n       abort ();\n@@ -4361,7 +4365,7 @@ get_unwidened (op, for_type)\n   if (TREE_CODE (op) == COMPONENT_REF\n       /* Since type_for_size always gives an integer type.  */\n       && TREE_CODE (type) != REAL_TYPE\n-      /* Don't crash if field not layed out yet.  */\n+      /* Don't crash if field not laid out yet.  */\n       && DECL_SIZE (TREE_OPERAND (op, 1)) != 0)\n     {\n       unsigned innerprec = TREE_INT_CST_LOW (DECL_SIZE (TREE_OPERAND (op, 1)));"}, {"sha": "bd4b989e426fb1a826de3f587e9de77afca0fc6d", "filename": "gcc/tree.def", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/956d69504d77d301015532d2f0564213f0efc706/gcc%2Ftree.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/956d69504d77d301015532d2f0564213f0efc706/gcc%2Ftree.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree.def?ref=956d69504d77d301015532d2f0564213f0efc706", "patch": "@@ -1,6 +1,6 @@\n /* This file contains the definitions and documentation for the\n    tree codes used in the GNU C compiler.\n-   Copyright (C) 1987, 1988, 1993, 1995 Free Software Foundation, Inc.\n+   Copyright (C) 1987, 1988, 1993, 1995, 1997 Free Software Foundation, Inc.\n \n This file is part of GNU CC.\n \n@@ -693,7 +693,7 @@ DEFTREECODE (PREINCREMENT_EXPR, \"preincrement_expr\", \"e\", 2)\n DEFTREECODE (POSTDECREMENT_EXPR, \"postdecrement_expr\", \"e\", 2)\n DEFTREECODE (POSTINCREMENT_EXPR, \"postincrement_expr\", \"e\", 2)\n \n-/* Evalute operand 1.  If and only if an exception is thrown during\n+/* Evaluate operand 1.  If and only if an exception is thrown during\n    the evaluation of operand 1, evaluate operand 2.\n \n    This differs from WITH_CLEANUP_EXPR, in that operand 2 is never"}, {"sha": "27fa47d5c2f662ea1b043ee0f3b57acba550f539", "filename": "gcc/tree.h", "status": "modified", "additions": 51, "deletions": 3, "changes": 54, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/956d69504d77d301015532d2f0564213f0efc706/gcc%2Ftree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/956d69504d77d301015532d2f0564213f0efc706/gcc%2Ftree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree.h?ref=956d69504d77d301015532d2f0564213f0efc706", "patch": "@@ -752,7 +752,7 @@ struct tree_block\n    the same way that the first union alternative would be passed.  */\n #define TYPE_TRANSPARENT_UNION(NODE) ((NODE)->type.transparent_union_flag)\n \n-/* Indicated that objects of this type should be layed out in as\n+/* Indicated that objects of this type should be laid out in as\n    compact a way as possible.  */\n #define TYPE_PACKED(NODE) ((NODE)->type.packed_flag)\n \n@@ -1232,7 +1232,9 @@ extern char *oballoc\t\t\tPROTO((int));\n extern char *permalloc\t\t\tPROTO((int));\n extern char *savealloc\t\t\tPROTO((int));\n extern char *expralloc\t\t\tPROTO((int));\n+#ifdef NEED_DECLARATION_FREE\n extern void free\t\t\tPROTO((void *));\n+#endif\n \n /* Lowest level primitive for allocating a node.\n    The TREE_CODE is the only argument.  Contents are initialized\n@@ -1711,8 +1713,8 @@ extern void expand_null_return\t\t\tPROTO((void));\n extern void expand_return\t\t\tPROTO((tree));\n extern void expand_start_bindings\t\tPROTO((int));\n extern void expand_end_bindings\t\t\tPROTO((tree, int, int));\n-extern void start_cleanup_deferal\t\tPROTO((void));\n-extern void end_cleanup_deferal\t\t\tPROTO((void));\n+extern void start_cleanup_deferral\t\tPROTO((void));\n+extern void end_cleanup_deferral\t\tPROTO((void));\n extern void mark_block_as_eh_region\t\tPROTO((void));\n extern void mark_block_as_not_eh_region\t\tPROTO((void));\n extern int is_eh_region\t\t\t\tPROTO((void));\n@@ -1764,6 +1766,52 @@ extern void rrotate_double\tPROTO((HOST_WIDE_INT, HOST_WIDE_INT,\n extern int operand_equal_p\tPROTO((tree, tree, int));\n extern tree invert_truthvalue\tPROTO((tree));\n \f\n+/* Interface of the DWARF2 unwind info support.  */\n+\n+/* Decide whether we want to emit frame unwind information for the current\n+   translation unit.  */\n+\n+extern int dwarf2out_do_frame\t\tPROTO((void));\n+\n+/* Generate a new label for the CFI info to refer to.  */\n+\n+extern char *dwarf2out_cfi_label\tPROTO((void));\n+\n+/* Entry point to update the canonical frame address (CFA).  */\n+\n+extern void dwarf2out_def_cfa\t\tPROTO((char *, unsigned, long));\n+\n+/* Add the CFI for saving a register window.  */\n+\n+extern void dwarf2out_window_save\tPROTO((char *));\n+\n+/* Add a CFI to update the running total of the size of arguments pushed\n+   onto the stack.  */\n+\n+extern void dwarf2out_args_size\t\tPROTO((char *, long));\n+\n+/* Entry point for saving a register to the stack.  */\n+\n+extern void dwarf2out_reg_save\t\tPROTO((char *, unsigned, long));\n+\n+/* Entry point for saving the return address in the stack.  */\n+\n+extern void dwarf2out_return_save\tPROTO((char *, long));\n+\n+/* Entry point for saving the return address in a register.  */\n+\n+extern void dwarf2out_return_reg\tPROTO((char *, unsigned));\n+\n+/* Output a marker (i.e. a label) for the beginning of a function, before\n+   the prologue.  */\n+\n+extern void dwarf2out_begin_prologue\tPROTO((void));\n+\n+/* Output a marker (i.e. a label) for the absolute end of the generated\n+   code for a function definition.  */\n+\n+extern void dwarf2out_end_epilogue\tPROTO((void));\n+\f\n /* The language front-end must define these functions.  */\n \n /* Function of no arguments for initializing lexical scanning.  */"}, {"sha": "b2879b3466afc1580bf0e82fd6149d1f9401b851", "filename": "gcc/unroll.c", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/956d69504d77d301015532d2f0564213f0efc706/gcc%2Funroll.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/956d69504d77d301015532d2f0564213f0efc706/gcc%2Funroll.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Funroll.c?ref=956d69504d77d301015532d2f0564213f0efc706", "patch": "@@ -2160,6 +2160,7 @@ back_branch_in_range_p (insn, loop_start, loop_end)\n      rtx loop_start, loop_end;\n {\n   rtx p, q, target_insn;\n+  rtx orig_loop_end = loop_end;\n \n   /* Stop before we get to the backward branch at the end of the loop.  */\n   loop_end = prev_nonnote_insn (loop_end);\n@@ -2171,8 +2172,10 @@ back_branch_in_range_p (insn, loop_start, loop_end)\n   while (INSN_DELETED_P (insn))\n     insn = NEXT_INSN (insn);\n \n-  /* Check for the case where insn is the last insn in the loop.  */\n-  if (insn == loop_end)\n+  /* Check for the case where insn is the last insn in the loop.  Deal\n+     with the case where INSN was a deleted loop test insn, in which case\n+     it will now be the NOTE_LOOP_END.  */\n+  if (insn == loop_end || insn == orig_loop_end)\n     return 0;\n \n   for (p = NEXT_INSN (insn); p != loop_end; p = NEXT_INSN (p))"}, {"sha": "7f2970fa770af0adbd328237509b1f76503ee695", "filename": "gcc/varasm.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/956d69504d77d301015532d2f0564213f0efc706/gcc%2Fvarasm.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/956d69504d77d301015532d2f0564213f0efc706/gcc%2Fvarasm.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fvarasm.c?ref=956d69504d77d301015532d2f0564213f0efc706", "patch": "@@ -67,7 +67,7 @@ Boston, MA 02111-1307, USA.  */\n #else /* !NO_DOT_IN_LABEL */\n #define CHKR_PREFIX \"chkr.\"\n #endif \n-#else /* !NO_DOLLAR_IN_LABLE */\n+#else /* !NO_DOLLAR_IN_LABEL */\n #define CHKR_PREFIX \"chkr$\"\n #endif\n #define CHKR_PREFIX_SIZE (sizeof (CHKR_PREFIX) - 1)"}, {"sha": "6bef736eedf4895901c405fd26ffbd83546d4c13", "filename": "gcc/version.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/956d69504d77d301015532d2f0564213f0efc706/gcc%2Fversion.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/956d69504d77d301015532d2f0564213f0efc706/gcc%2Fversion.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fversion.c?ref=956d69504d77d301015532d2f0564213f0efc706", "patch": "@@ -1 +1 @@\n-char *version_string = \"egcs-2.91.00 971101 (gcc2-971021 experimental)\";\n+char *version_string = \"egcs-2.91.01 971206 (gcc-2.8.0)\";"}, {"sha": "87d34daa5a837a615479b34e6b17eace9a76249f", "filename": "gcc/vmsconfig.com", "status": "modified", "additions": 22, "deletions": 17, "changes": 39, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/956d69504d77d301015532d2f0564213f0efc706/gcc%2Fvmsconfig.com", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/956d69504d77d301015532d2f0564213f0efc706/gcc%2Fvmsconfig.com", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fvmsconfig.com?ref=956d69504d77d301015532d2f0564213f0efc706", "patch": "@@ -101,18 +101,17 @@ $open ifile$ t.tmp\n $read ifile$ line\n $close ifile$\n $delete t.tmp;\n-$ijk=f$locate(\"\"\"\",line)+1\n-$line=f$extract(ijk,f$length(line)-ijk,line)\n-$ijk=f$locate(\"\"\"\",line)\n-$line=f$extract(0,ijk,line)\n-$ijk=f$locate(\"\\n\",line)\n-$line=f$extract(0,ijk,line)\n-$ !\n-$elm=f$element(1,\" \",line)\n-$ !\n-$write_ident:\n+$line=f$element(1,\"\"\"\",line)\t!extract the portion between 1st & 2nd quotes\n+$! Format of 'line' is \"name-nn.nn.nn[.nn] [date text]\" (without the quotes).\n+$! We want \"name-nn.nn.nn[.nn][-date]\"; \"-date\" suffix is optional.\n+$id = f$element(1,\"-\",line)\t\t!strip \"name-\" prefix\n+$if id.eqs.\"-\" then  id = line\t\t!no prefix found?\n+$id = f$element(0,\" \",id) + \"-\" + f$element(1,\" \",id)\t!first two tokens\n+$id = id - \"- \"\t\t!in case 2nd token was empty\n+$if f$length(id).gt.15 then  id = f$extract(0,15,id)\t!length limitation\n+$!\n $open/write ifile$ version.opt\n-$write ifile$ \"ident=\"+\"\"\"\"+elm+\"\"\"\"\n+$write ifile$ \"ident=\"+\"\"\"\"+id+\"\"\"\"\n $close ifile$\n $purge version.opt\n $!\n@@ -175,11 +174,11 @@ PROCEDURE process_makefile( )\n   ! The contents are assumed to be a list of object files, and from this\n   ! list a VMS linker options file is generated.\n   !\n-  generate_option_file (\"OBJS\",      \"=\", \"independent.opt\");\n-  generate_option_file (\"LIB2FUNCS\", \"=\", \"libgcc2.list\");\n+  generate_option_file (\"OBJS\",\t\t \"=\", \"independent.opt\");\n+  generate_option_file (\"LIB2FUNCS\",\t \"=\", \"libgcc2.list\");\n   generate_option_file (\"CXX_LIB2FUNCS\", \"=\", \"libgcc2-cxx.list\");\n-  generate_option_file (\"BC_ALL\",    \"=\", \"bc_all.list\");\n-  generate_option_file (\"BI_OBJ\",    \"=\", \"bi_all.opt\");\n+  generate_option_file (\"BC_ALL\",\t \"=\", \"bc_all.list\");\n+  generate_option_file (\"BI_OBJ\",\t \"=\", \"bi_all.opt\");\n   !\n   ! Now change OBJS in the Makefile, so each language specific options file\n   ! does not pick up all of the language independent files.\n@@ -215,7 +214,7 @@ PROCEDURE process_objc_lib( )\n \n   ERASE (makefile_buf);\t\t\t!discard top Makefile\n   POSITION (END_OF (makefile_buf));\n-  READ_FILE (\"[.objc]Makefile\");\t!load objc one\n+  READ_FILE (\"[.objc]Make-lang.in\");\t!load objc one\n   MESSAGE (\"objclib\");\n   pat_replace (ASCII(9), \" \");\t\t!change any <tab> to <space>\n   generate_option_file (\"OBJC_O\", \"=\", \"objc-objs.opt\");\n@@ -244,7 +243,7 @@ PROCEDURE configure_makefile( )\n   COPY_TEXT (\"tm_file=tm.h\");\t\t\tSPLIT_LINE;\t! 'arch'/tm-vms.h\n   pat_replace (\"@\" &\n     SPAN(\"abcdefghijklmnopqrstuvwxyz_ABCDEFGHIJKLMNOPQRSTUVWXYZ#~0123456789\")\n-\t\t& \"@\", );\t\t\t! strip `configure' dummy values\n+\t\t   & \"@\", );\t\t! strip `configure' dummy values\n ENDPROCEDURE; !configure_makefile\n !!\n \n@@ -296,6 +295,12 @@ PROCEDURE additional_compiler( cname, subdir )\n   pat_replace (\"_OTH_SRCS)\", \"_OTH_SRCS_dummy_)\");\n   ! Convert subdirectory references into VMS syntax.\n   pat_replace (\"$(srcdir)/\" + subdir + \"/\", \"[.\" + subdir + \"]\");\n+\n+    ! Temporary? hack for cp/Make-lang.in's mishandling of \"input.c\".\n+    IF (subdir = 'cp') THEN\n+      pat_replace (\"[.cp]input.c\", );\t! Discard this text.\n+    ENDIF;\n+\n   ! Add this name to compilers.list.\n   POSITION (END_OF (complist_buf));\n   COPY_TEXT (cname);"}]}