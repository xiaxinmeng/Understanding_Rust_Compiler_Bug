{"sha": "e91cacaedb0ef7c9674af7f8920de5952bbb7fbb", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTkxY2FjYWVkYjBlZjdjOTY3NGFmN2Y4OTIwZGU1OTUyYmJiN2ZiYg==", "commit": {"author": {"name": "Thomas Schwinge", "email": "thomas@codesourcery.com", "date": "2016-05-02T11:25:17Z"}, "committer": {"name": "Thomas Schwinge", "email": "tschwinge@gcc.gnu.org", "date": "2016-05-02T11:25:17Z"}, "message": "[PR target/70860] [nvptx] Handle NULL cfun in nvptx_libcall_value\n\n\tgcc/\n\tPR target/70860\n\t* config/nvptx/nvptx.c (nvptx_libcall_value): Handle NULL cfun.\n\t(nvptx_function_value): Assert non-NULL cfun.\n\nFrom-SVN: r235748", "tree": {"sha": "f6f32bb7c89b7af952b468d97d16ba021ad5bb98", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f6f32bb7c89b7af952b468d97d16ba021ad5bb98"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e91cacaedb0ef7c9674af7f8920de5952bbb7fbb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e91cacaedb0ef7c9674af7f8920de5952bbb7fbb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e91cacaedb0ef7c9674af7f8920de5952bbb7fbb", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e91cacaedb0ef7c9674af7f8920de5952bbb7fbb/comments", "author": {"login": "tschwinge", "id": 21753, "node_id": "MDQ6VXNlcjIxNzUz", "avatar_url": "https://avatars.githubusercontent.com/u/21753?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tschwinge", "html_url": "https://github.com/tschwinge", "followers_url": "https://api.github.com/users/tschwinge/followers", "following_url": "https://api.github.com/users/tschwinge/following{/other_user}", "gists_url": "https://api.github.com/users/tschwinge/gists{/gist_id}", "starred_url": "https://api.github.com/users/tschwinge/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tschwinge/subscriptions", "organizations_url": "https://api.github.com/users/tschwinge/orgs", "repos_url": "https://api.github.com/users/tschwinge/repos", "events_url": "https://api.github.com/users/tschwinge/events{/privacy}", "received_events_url": "https://api.github.com/users/tschwinge/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "c408fb34f9068cf559e8065b60fdf44450377a67", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c408fb34f9068cf559e8065b60fdf44450377a67", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c408fb34f9068cf559e8065b60fdf44450377a67"}], "stats": {"total": 9, "additions": 8, "deletions": 1}, "files": [{"sha": "f344e0ff0702e5007fa2784e539e9d8e0350bd39", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e91cacaedb0ef7c9674af7f8920de5952bbb7fbb/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e91cacaedb0ef7c9674af7f8920de5952bbb7fbb/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=e91cacaedb0ef7c9674af7f8920de5952bbb7fbb", "patch": "@@ -1,3 +1,9 @@\n+2016-05-02  Thomas Schwinge  <thomas@codesourcery.com>\n+\n+\tPR target/70860\n+\t* config/nvptx/nvptx.c (nvptx_libcall_value): Handle NULL cfun.\n+\t(nvptx_function_value): Assert non-NULL cfun.\n+\n 2016-05-02  Eric Botcazou  <ebotcazou@adacore.com>\n \n \tPR rtl-optimization/70886"}, {"sha": "a6c90b633f91c32695ee6b4cbb2f6dd19829559e", "filename": "gcc/config/nvptx/nvptx.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e91cacaedb0ef7c9674af7f8920de5952bbb7fbb/gcc%2Fconfig%2Fnvptx%2Fnvptx.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e91cacaedb0ef7c9674af7f8920de5952bbb7fbb/gcc%2Fconfig%2Fnvptx%2Fnvptx.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fnvptx%2Fnvptx.c?ref=e91cacaedb0ef7c9674af7f8920de5952bbb7fbb", "patch": "@@ -483,7 +483,7 @@ nvptx_strict_argument_naming (cumulative_args_t cum_v)\n static rtx\n nvptx_libcall_value (machine_mode mode, const_rtx)\n {\n-  if (!cfun->machine->doing_call)\n+  if (!cfun || !cfun->machine->doing_call)\n     /* Pretend to return in a hard reg for early uses before pseudos can be\n        generated.  */\n     return gen_rtx_REG (mode, NVPTX_RETURN_REGNUM);\n@@ -502,6 +502,7 @@ nvptx_function_value (const_tree type, const_tree ARG_UNUSED (func),\n \n   if (outgoing)\n     {\n+      gcc_assert (cfun);\n       cfun->machine->return_mode = mode;\n       return gen_rtx_REG (mode, NVPTX_RETURN_REGNUM);\n     }"}]}