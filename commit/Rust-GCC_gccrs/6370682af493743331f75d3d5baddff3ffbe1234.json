{"sha": "6370682af493743331f75d3d5baddff3ffbe1234", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjM3MDY4MmFmNDkzNzQzMzMxZjc1ZDNkNWJhZGRmZjNmZmJlMTIzNA==", "commit": {"author": {"name": "Kazu Hirata", "email": "kazu@codesourcery.com", "date": "2006-04-18T12:32:11Z"}, "committer": {"name": "Kazu Hirata", "email": "kazu@gcc.gnu.org", "date": "2006-04-18T12:32:11Z"}, "message": "function.c (temp_slots_at_level, [...]): Use VEC instead of VARRAY.\n\n\t* function.c (temp_slots_at_level, max_slot_level): Use VEC\n\tinstead of VARRAY.\n\t* function.h (temp_slot_p): New.\n\t(function): Change the type of x_used_temp_slots to\n\tVEC(temp_slot_p,gc) *.\n\nFrom-SVN: r113029", "tree": {"sha": "cad6dcd18e053b0942232163fd9d1917b95533ef", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/cad6dcd18e053b0942232163fd9d1917b95533ef"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6370682af493743331f75d3d5baddff3ffbe1234", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6370682af493743331f75d3d5baddff3ffbe1234", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6370682af493743331f75d3d5baddff3ffbe1234", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6370682af493743331f75d3d5baddff3ffbe1234/comments", "author": null, "committer": null, "parents": [{"sha": "13a41b42ed2e0f70716f810d3a4d10cadb02dcb2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/13a41b42ed2e0f70716f810d3a4d10cadb02dcb2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/13a41b42ed2e0f70716f810d3a4d10cadb02dcb2"}], "stats": {"total": 34, "additions": 26, "deletions": 8}, "files": [{"sha": "8bdd0dd37ee35cb8106c55a6fb28b4c78672949c", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6370682af493743331f75d3d5baddff3ffbe1234/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6370682af493743331f75d3d5baddff3ffbe1234/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=6370682af493743331f75d3d5baddff3ffbe1234", "patch": "@@ -1,3 +1,11 @@\n+2006-04-18  Kazu Hirata  <kazu@codesourcery.com>\n+\n+\t* function.c (temp_slots_at_level, max_slot_level): Use VEC\n+\tinstead of VARRAY.\n+\t* function.h (temp_slot_p): New.\n+\t(function): Change the type of x_used_temp_slots to\n+\tVEC(temp_slot_p,gc) *.\n+\n 2006-04-18  Nick Clifton  <nickc@redhat.com>\n \n \t* config/mmix/mmix.h (OPTIMIZATION_OPTIONS): Remove reference to"}, {"sha": "cc50f50777dbbdb174a71d39015a141dcbf42af2", "filename": "gcc/function.c", "status": "modified", "additions": 11, "deletions": 7, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6370682af493743331f75d3d5baddff3ffbe1234/gcc%2Ffunction.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6370682af493743331f75d3d5baddff3ffbe1234/gcc%2Ffunction.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffunction.c?ref=6370682af493743331f75d3d5baddff3ffbe1234", "patch": "@@ -546,14 +546,18 @@ insert_slot_to_list (struct temp_slot *temp, struct temp_slot **list)\n static struct temp_slot **\n temp_slots_at_level (int level)\n {\n+  if (level >= (int) VEC_length (temp_slot_p, used_temp_slots))\n+    {\n+      size_t old_length = VEC_length (temp_slot_p, used_temp_slots);\n+      temp_slot_p *p;\n \n-  if (!used_temp_slots)\n-    VARRAY_GENERIC_PTR_INIT (used_temp_slots, 3, \"used_temp_slots\");\n-\n-  while (level >= (int) VARRAY_ACTIVE_SIZE (used_temp_slots))\n-    VARRAY_PUSH_GENERIC_PTR (used_temp_slots, NULL);\n+      VEC_safe_grow (temp_slot_p, gc, used_temp_slots, level + 1);\n+      p = VEC_address (temp_slot_p, used_temp_slots);\n+      memset (&p[old_length], 0,\n+\t      sizeof (temp_slot_p) * (level + 1 - old_length));\n+    }\n \n-  return (struct temp_slot **) &VARRAY_GENERIC_PTR (used_temp_slots, level);\n+  return &(VEC_address (temp_slot_p, used_temp_slots)[level]);\n }\n \n /* Returns the maximal temporary slot level.  */\n@@ -564,7 +568,7 @@ max_slot_level (void)\n   if (!used_temp_slots)\n     return -1;\n \n-  return VARRAY_ACTIVE_SIZE (used_temp_slots) - 1;\n+  return VEC_length (temp_slot_p, used_temp_slots) - 1;\n }\n \n /* Moves temporary slot TEMP to LEVEL.  */"}, {"sha": "bce52909aebc299954332070f25cf798d162dbd8", "filename": "gcc/function.h", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6370682af493743331f75d3d5baddff3ffbe1234/gcc%2Ffunction.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6370682af493743331f75d3d5baddff3ffbe1234/gcc%2Ffunction.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffunction.h?ref=6370682af493743331f75d3d5baddff3ffbe1234", "patch": "@@ -159,6 +159,12 @@ struct expr_status GTY(())\n #define forced_labels (cfun->expr->x_forced_labels)\n #define stack_pointer_delta (cfun->expr->x_stack_pointer_delta)\n \n+struct temp_slot;\n+typedef struct temp_slot *temp_slot_p;\n+\n+DEF_VEC_P(temp_slot_p);\n+DEF_VEC_ALLOC_P(temp_slot_p,gc);\n+\n /* This structure can save all the important global and static variables\n    describing the status of the current function.  */\n \n@@ -266,7 +272,7 @@ struct function GTY(())\n   rtx x_parm_birth_insn;\n \n   /* List of all used temporaries allocated, by level.  */\n-  struct varray_head_tag * GTY((param_is (struct temp_slot))) x_used_temp_slots;\n+  VEC(temp_slot_p,gc) *x_used_temp_slots;\n \n   /* List of available temp slots.  */\n   struct temp_slot *x_avail_temp_slots;"}]}