{"sha": "0fb3402f691447225a17f83d1ef168eb71a25ce0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MGZiMzQwMmY2OTE0NDcyMjVhMTdmODNkMWVmMTY4ZWI3MWEyNWNlMA==", "commit": {"author": {"name": "Rong Xu", "email": "xur@gcc.gnu.org", "date": "2014-11-14T00:30:31Z"}, "committer": {"name": "Rong Xu", "email": "xur@gcc.gnu.org", "date": "2014-11-14T00:30:31Z"}, "message": "re PR debug/63581 (undefined references in debug_info)\n\n2014-11-13  Rong Xu  <xur@google.com>\n\ngcc:\n\tPR debug/63581\n\t* cfgrtl.c (emit_barrier_after_bb): Append the barrier to the\n \tfooter, instead of unconditionally overwritten\n\ngcc/testsuite:\n\tPR debug/63581\n\t* g++.dg/tree-prof/pr63581.C: New test.\n\nFrom-SVN: r217530", "tree": {"sha": "a2d90d71efdd31c74e3e6708927cf8f6f80dd80b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a2d90d71efdd31c74e3e6708927cf8f6f80dd80b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0fb3402f691447225a17f83d1ef168eb71a25ce0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0fb3402f691447225a17f83d1ef168eb71a25ce0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0fb3402f691447225a17f83d1ef168eb71a25ce0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0fb3402f691447225a17f83d1ef168eb71a25ce0/comments", "author": null, "committer": null, "parents": [{"sha": "6ff65dd7d59139e120d1dcdb54d5a5bb0d07e2c0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6ff65dd7d59139e120d1dcdb54d5a5bb0d07e2c0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6ff65dd7d59139e120d1dcdb54d5a5bb0d07e2c0"}], "stats": {"total": 123, "additions": 122, "deletions": 1}, "files": [{"sha": "ff92bb235dc78be3a7627c00bbe0d0218eadef6d", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0fb3402f691447225a17f83d1ef168eb71a25ce0/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0fb3402f691447225a17f83d1ef168eb71a25ce0/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=0fb3402f691447225a17f83d1ef168eb71a25ce0", "patch": "@@ -1,3 +1,9 @@\n+2014-11-13  Rong Xu  <xur@google.com>\n+\n+\tPR debug/63581\n+\t* cfgrtl.c (emit_barrier_after_bb): Append the barrier to the\n+\tfooter, instead of unconditionally overwritten.\n+\n 2014-11-14  Martin Jambor  <mjambor@suse.cz>\n \n \t* cgraph.h (clear_outer_type): Make public.  Fix comment.\n@@ -6399,6 +6405,7 @@\n \t(lds_fpscr, sts_fpscr): New insns.\n \t(toggle_sz, toggle_pr): Use SImode for FPSCR_REG instead of PSImode.\n \n+>>>>>>> .r217525\n 2014-10-17  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* ipa-inline-transform.c (master_clone_with_noninline_clones_p): New."}, {"sha": "42d21d7220147359896067118ebd5c14e9948215", "filename": "gcc/cfgrtl.c", "status": "modified", "additions": 18, "deletions": 1, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0fb3402f691447225a17f83d1ef168eb71a25ce0/gcc%2Fcfgrtl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0fb3402f691447225a17f83d1ef168eb71a25ce0/gcc%2Fcfgrtl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcfgrtl.c?ref=0fb3402f691447225a17f83d1ef168eb71a25ce0", "patch": "@@ -1461,7 +1461,24 @@ emit_barrier_after_bb (basic_block bb)\n   gcc_assert (current_ir_type () == IR_RTL_CFGRTL\n               || current_ir_type () == IR_RTL_CFGLAYOUT);\n   if (current_ir_type () == IR_RTL_CFGLAYOUT)\n-    BB_FOOTER (bb) = unlink_insn_chain (barrier, barrier);\n+    {\n+      rtx_insn *insn = unlink_insn_chain (barrier, barrier);\n+\n+      if (BB_FOOTER (bb))\n+\t{\n+          rtx_insn *footer_tail = BB_FOOTER (bb);\n+\n+          while (NEXT_INSN (footer_tail))\n+            footer_tail = NEXT_INSN (footer_tail);\n+          if (!BARRIER_P (footer_tail))\n+            {\n+              SET_NEXT_INSN (footer_tail) = insn;\n+              SET_PREV_INSN (insn) = footer_tail;\n+            }\n+\t}\n+      else\n+        BB_FOOTER (bb) = insn;\n+    }\n }\n \n /* Like force_nonfallthru below, but additionally performs redirection"}, {"sha": "c61744b4b44cf01d51f3072ca417d01c887b5274", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0fb3402f691447225a17f83d1ef168eb71a25ce0/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0fb3402f691447225a17f83d1ef168eb71a25ce0/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=0fb3402f691447225a17f83d1ef168eb71a25ce0", "patch": "@@ -1,3 +1,8 @@\n+2014-11-13  Rong Xu  <xur@google.com>\n+\n+\tPR debug/63581\n+\t* g++.dg/tree-prof/pr63581.C: New test.\n+\n 2014-11-13  Teresa Johnson  <tejohnson@google.com>\n \n \tPR tree-optimization/63841\n@@ -3153,6 +3158,7 @@\n \t* gcc.dg/attr-isr.c: Move SH specific test to ...\n \t* gcc.target/sh/attr-isr.c: ... here.\n \n+>>>>>>> .r217525\n 2014-10-17  Marek Polacek  <polacek@redhat.com>\n \n \tPR c/63567"}, {"sha": "c8caf0765841803e92c7bdee6dcc23ea196a933e", "filename": "gcc/testsuite/g++.dg/tree-prof/pr63581.C", "status": "added", "additions": 91, "deletions": 0, "changes": 91, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0fb3402f691447225a17f83d1ef168eb71a25ce0/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftree-prof%2Fpr63581.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0fb3402f691447225a17f83d1ef168eb71a25ce0/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftree-prof%2Fpr63581.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftree-prof%2Fpr63581.C?ref=0fb3402f691447225a17f83d1ef168eb71a25ce0", "patch": "@@ -0,0 +1,91 @@\n+// { dg-require-effective-target freorder }\n+/* { dg-options \"-O2 -g -fno-peel-loops\" } */\n+\n+struct page {\n+  int i;\n+} global;\n+\n+__attribute__((noinline)) static struct page* find_page1 (int i)\n+{\n+  if ( i< 150)\n+      return 0;\n+  global.i = i;\n+  return &global;\n+}\n+\n+__attribute__((noinline)) static struct page* find_page2 (int i)\n+{\n+  global.i = i;\n+  return &global;\n+}\n+\n+volatile int ii;\n+__attribute__((noinline)) static int zero (void)\n+{\n+  return ii;\n+}\n+\n+static inline int uptodate (struct page* p)\n+{\n+  return (p->i < 709);\n+}\n+\n+static struct page* bar(int i)\n+{\n+  struct page *page;\n+\n+repeat:\n+  page = find_page1 (i);\n+  if (!page) {\n+    page = find_page2 (i);\n+    if (!page)\n+      return 0;\n+    if (zero () ) {\n+      zero ();\n+      goto repeat;\n+    }\n+  }\n+  return page;\n+}\n+\n+__attribute__((noinline)) int foo (int n)\n+{\n+  struct page *page;\n+\n+retry:\n+  page = bar (n);\n+  if (page == 0)\n+    return 0;\n+  if (uptodate (page))\n+    goto out;\n+\n+   zero ();\n+   if (page->i < 0) {\n+     zero ();\n+     goto retry;\n+   }\n+out:\n+   return 1;\n+}\n+\n+__attribute__((noinline)) int hot (void)\n+{\n+  int i;\n+  int sum = 0;\n+\n+  for (i = 0; i < 433038; i++)\n+    sum+=i;\n+\n+  return sum;\n+}\n+\n+int main(void)\n+{\n+  int i;\n+\n+  global.i = hot ();\n+  for (i = 0; i < 858; i++)\n+    foo (i);\n+\n+  return 0;\n+}"}]}