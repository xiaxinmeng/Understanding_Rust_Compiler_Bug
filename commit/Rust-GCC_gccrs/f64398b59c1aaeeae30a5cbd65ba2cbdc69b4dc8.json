{"sha": "f64398b59c1aaeeae30a5cbd65ba2cbdc69b4dc8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjY0Mzk4YjU5YzFhYWVlYWUzMGE1Y2JkNjViYTJjYmRjNjliNGRjOA==", "commit": {"author": {"name": "Julian Brown", "email": "julian@codesourcery.com", "date": "2011-08-01T11:46:27Z"}, "committer": {"name": "Julian Brown", "email": "jules@gcc.gnu.org", "date": "2011-08-01T11:46:27Z"}, "message": "optabs.c (prepare_cmp_insn): Use correct biasing for fixed-point comparison helpers.\n\n\t* optabs.c (prepare_cmp_insn): Use correct biasing for fixed-point\n\tcomparison helpers.\n\nFrom-SVN: r177015", "tree": {"sha": "cf7132d9195abf40c4caff6c21af115100b1baf3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/cf7132d9195abf40c4caff6c21af115100b1baf3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f64398b59c1aaeeae30a5cbd65ba2cbdc69b4dc8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f64398b59c1aaeeae30a5cbd65ba2cbdc69b4dc8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f64398b59c1aaeeae30a5cbd65ba2cbdc69b4dc8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f64398b59c1aaeeae30a5cbd65ba2cbdc69b4dc8/comments", "author": {"login": "jtb20", "id": 6094880, "node_id": "MDQ6VXNlcjYwOTQ4ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/6094880?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jtb20", "html_url": "https://github.com/jtb20", "followers_url": "https://api.github.com/users/jtb20/followers", "following_url": "https://api.github.com/users/jtb20/following{/other_user}", "gists_url": "https://api.github.com/users/jtb20/gists{/gist_id}", "starred_url": "https://api.github.com/users/jtb20/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jtb20/subscriptions", "organizations_url": "https://api.github.com/users/jtb20/orgs", "repos_url": "https://api.github.com/users/jtb20/repos", "events_url": "https://api.github.com/users/jtb20/events{/privacy}", "received_events_url": "https://api.github.com/users/jtb20/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "857ade1b5ac9928145759c763059b7eda3d6739a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/857ade1b5ac9928145759c763059b7eda3d6739a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/857ade1b5ac9928145759c763059b7eda3d6739a"}], "stats": {"total": 11, "additions": 9, "deletions": 2}, "files": [{"sha": "da6e982b712a1342bccd67331f528677afff0d57", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f64398b59c1aaeeae30a5cbd65ba2cbdc69b4dc8/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f64398b59c1aaeeae30a5cbd65ba2cbdc69b4dc8/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=f64398b59c1aaeeae30a5cbd65ba2cbdc69b4dc8", "patch": "@@ -1,3 +1,8 @@\n+2011-08-01  Julian Brown  <julian@codesourcery.com>\n+\n+\t* optabs.c (prepare_cmp_insn): Use correct biasing for fixed-point\n+\tcomparison helpers.\n+\n 2011-07-31  Richard Henderson  <rth@redhat.com>\n \n \t* config/h8300/crti.asm: Add flags to .section directive."}, {"sha": "99228f36d8f14058f7b9a65038a894de7e6924bc", "filename": "gcc/optabs.c", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f64398b59c1aaeeae30a5cbd65ba2cbdc69b4dc8/gcc%2Foptabs.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f64398b59c1aaeeae30a5cbd65ba2cbdc69b4dc8/gcc%2Foptabs.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Foptabs.c?ref=f64398b59c1aaeeae30a5cbd65ba2cbdc69b4dc8", "patch": "@@ -3959,11 +3959,13 @@ prepare_cmp_insn (rtx x, rtx y, enum rtx_code comparison, rtx size,\n \t result against 1 in the biased case, and zero in the unbiased\n \t case. For unsigned comparisons always compare against 1 after\n \t biasing the unbiased result by adding 1. This gives us a way to\n-\t represent LTU. */\n+\t represent LTU.\n+\t The comparisons in the fixed-point helper library are always\n+\t biased.  */\n       x = result;\n       y = const1_rtx;\n \n-      if (!TARGET_LIB_INT_CMP_BIASED)\n+      if (!TARGET_LIB_INT_CMP_BIASED && !ALL_FIXED_POINT_MODE_P (mode))\n \t{\n \t  if (unsignedp)\n \t    x = plus_constant (result, 1);"}]}