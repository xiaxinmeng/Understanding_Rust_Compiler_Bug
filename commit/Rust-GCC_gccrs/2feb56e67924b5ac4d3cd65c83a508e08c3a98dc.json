{"sha": "2feb56e67924b5ac4d3cd65c83a508e08c3a98dc", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmZlYjU2ZTY3OTI0YjVhYzRkM2NkNjVjODNhNTA4ZTA4YzNhOThkYw==", "commit": {"author": {"name": "Alexandre Oliva", "email": "aoliva@redhat.com", "date": "2009-06-02T08:11:31Z"}, "committer": {"name": "Alexandre Oliva", "email": "aoliva@gcc.gnu.org", "date": "2009-06-02T08:11:31Z"}, "message": "* compare-debug: Don't fail just because of .eh_frame differences.\n\nFrom-SVN: r148079", "tree": {"sha": "3d8772916292064a0011e4f3af9cf255792a4385", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3d8772916292064a0011e4f3af9cf255792a4385"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2feb56e67924b5ac4d3cd65c83a508e08c3a98dc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2feb56e67924b5ac4d3cd65c83a508e08c3a98dc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2feb56e67924b5ac4d3cd65c83a508e08c3a98dc", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2feb56e67924b5ac4d3cd65c83a508e08c3a98dc/comments", "author": null, "committer": null, "parents": [{"sha": "fe8a77795ad17af6538796266edf9a04b54b2f34", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fe8a77795ad17af6538796266edf9a04b54b2f34", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fe8a77795ad17af6538796266edf9a04b54b2f34"}], "stats": {"total": 82, "additions": 81, "deletions": 1}, "files": [{"sha": "072c904b067b718621f1b7a33ea93929290f298a", "filename": "contrib/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2feb56e67924b5ac4d3cd65c83a508e08c3a98dc/contrib%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2feb56e67924b5ac4d3cd65c83a508e08c3a98dc/contrib%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/contrib%2FChangeLog?ref=2feb56e67924b5ac4d3cd65c83a508e08c3a98dc", "patch": "@@ -1,3 +1,7 @@\n+2009-06-02  Alexandre Oliva  <aoliva@redhat.com>\n+\n+\t* compare-debug: Don't fail just because of .eh_frame differences.\n+\n 2009-04-27  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR testsuite/39807"}, {"sha": "e91e05d576e5065b3ed2774c184458028b4ce935", "filename": "contrib/compare-debug", "status": "modified", "additions": 77, "deletions": 1, "changes": 78, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2feb56e67924b5ac4d3cd65c83a508e08c3a98dc/contrib%2Fcompare-debug", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2feb56e67924b5ac4d3cd65c83a508e08c3a98dc/contrib%2Fcompare-debug", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/contrib%2Fcompare-debug?ref=2feb56e67924b5ac4d3cd65c83a508e08c3a98dc", "patch": "@@ -2,7 +2,7 @@\n \n # Compare stripped copies of two given object files.\n \n-# Copyright (C) 2007 Free Software Foundation\n+# Copyright (C) 2007, 2008, 2009 Free Software Foundation\n # Originally by Alexandre Oliva <aoliva@redhat.com>\n \n # This file is part of GCC.\n@@ -67,6 +67,82 @@ if cmp \"$1.$suf1\" \"$2.$suf2\"; then\n   status=0\n else\n   status=1\n+\n+  # Assembler-generated CFI will add an .eh_frame section for -g not\n+  # present in -g0.  Try to cope with it by checking that an .eh_frame\n+  # section is present in either object file, and then stripping it\n+  # off before re-comparing.\n+\n+  cmd=\n+  cmp1=\n+  cmp2=\n+\n+  for t in objdump readelf eu-readelf; do\n+    if ($t --help) 2>&1 | grep -e '--\\[*section-\\]*headers' > /dev/null; then\n+      cmd=$t\n+\n+      $cmd --section-headers \"$1.$suf1\" | grep '\\.eh_frame' > /dev/null\n+      cmp1=$?\n+\n+      $cmd --section-headers \"$2.$suf2\" | grep '\\.eh_frame' > /dev/null\n+      cmp2=$?\n+\n+      break\n+    fi\n+  done\n+\n+  # If we found .eh_frame in one but not the other, or if we could not\n+  # find a command to tell, try to strip off the .eh_frame section\n+  # from both.\n+  if test \"x$cmp1\" != \"x$cmp2\" || test \"x$cmd\" = \"x\"; then\n+    suf3=$suf1.\n+    while test -f \"$1.$suf3\"; do\n+      suf3=$suf3.\n+    done\n+\n+    suf4=$suf2.\n+    while test -f \"$2.$suf4\"; do\n+      suf4=$suf4.\n+    done\n+\n+    trap 'rm -f \"$1.$suf1\" \"$2.$suf2\" \"$1.$suf3\" \"$2.$suf4\"' 0 1 2 15\n+\n+    if (objcopy -v) 2>&1 | grep -e \"--remove-section\" > /dev/null; then\n+      objcopy --remove-section .eh_frame \"$1.$suf1\" \"$1.$suf3\"\n+      cmp \"$1.$suf1\" \"$1.$suf3\" > /dev/null\n+      cmp1=$?\n+\n+      objcopy --remove-section .eh_frame \"$2.$suf2\" \"$2.$suf4\"\n+      cmp \"$2.$suf2\" \"$2.$suf4\" > /dev/null\n+      cmp2=$?\n+\n+      mv \"$1.$suf3\" \"$1.$suf1\"\n+      mv \"$2.$suf4\" \"$2.$suf2\"\n+    elif (strip --help) 2>&1 | grep -e --remove-section > /dev/null; then\n+      cp \"$1.$suf1\" \"$1.$suf3\"\n+      strip --remove-section .eh_frame \"$1.$suf3\"\n+\n+      cp \"$2.$suf2\" \"$2.$suf4\"\n+      strip --remove-section .eh_frame \"$2.$suf4\"\n+\n+      cmp \"$1.$suf1\" \"$1.$suf3\" > /dev/null\n+      cmp1=$?\n+\n+      cmp \"$2.$suf2\" \"$2.$suf4\" > /dev/null\n+      cmp2=$?\n+\n+      mv \"$1.$suf3\" \"$1.$suf1\"\n+      mv \"$2.$suf4\" \"$2.$suf2\"\n+    fi\n+\n+    trap 'rm -f \"$1.$suf1\" \"$2.$suf2\"' 0 1 2 15\n+  fi\n+\n+  if test \"x$cmp1\" != \"x$cmp2\" && cmp \"$1.$suf1\" \"$2.$suf2\"; then\n+    status=0\n+  else\n+    status=1\n+  fi\n fi\n \n $rm \"$1.$suf1\" \"$2.$suf2\""}]}