{"sha": "7f394c1d9bbd3a480f4abfbc0aca8a4e755211a8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6N2YzOTRjMWQ5YmJkM2E0ODBmNGFiZmJjMGFjYThhNGU3NTUyMTFhOA==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@adacore.com", "date": "2011-08-29T08:55:18Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2011-08-29T08:55:18Z"}, "message": "gnat_rm.texi: Add doc for 'Elab_Subp_Body.\n\n2011-08-29  Arnaud Charlet  <charlet@adacore.com>\n\n\t* gnat_rm.texi: Add doc for 'Elab_Subp_Body.\n\t* bindgen.adb: Add comments.\n\t* snames.adb-tmpl (Is_Attribute_Name): Only recognize 'Elab_Subp_Body\n\tin CodePeer mode.\n\nFrom-SVN: r178168", "tree": {"sha": "f800b935551ef86b82d80222dcee41567552a48c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f800b935551ef86b82d80222dcee41567552a48c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7f394c1d9bbd3a480f4abfbc0aca8a4e755211a8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7f394c1d9bbd3a480f4abfbc0aca8a4e755211a8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7f394c1d9bbd3a480f4abfbc0aca8a4e755211a8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7f394c1d9bbd3a480f4abfbc0aca8a4e755211a8/comments", "author": {"login": "ArnaudCharlet", "id": 30291825, "node_id": "MDQ6VXNlcjMwMjkxODI1", "avatar_url": "https://avatars.githubusercontent.com/u/30291825?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ArnaudCharlet", "html_url": "https://github.com/ArnaudCharlet", "followers_url": "https://api.github.com/users/ArnaudCharlet/followers", "following_url": "https://api.github.com/users/ArnaudCharlet/following{/other_user}", "gists_url": "https://api.github.com/users/ArnaudCharlet/gists{/gist_id}", "starred_url": "https://api.github.com/users/ArnaudCharlet/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ArnaudCharlet/subscriptions", "organizations_url": "https://api.github.com/users/ArnaudCharlet/orgs", "repos_url": "https://api.github.com/users/ArnaudCharlet/repos", "events_url": "https://api.github.com/users/ArnaudCharlet/events{/privacy}", "received_events_url": "https://api.github.com/users/ArnaudCharlet/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "304fe432e55a7dffc0a7f9ceaedce48345ba7a5d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/304fe432e55a7dffc0a7f9ceaedce48345ba7a5d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/304fe432e55a7dffc0a7f9ceaedce48345ba7a5d"}], "stats": {"total": 40, "additions": 36, "deletions": 4}, "files": [{"sha": "a9551c7016ae3029fa5b75605cde07a10d08fcaf", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7f394c1d9bbd3a480f4abfbc0aca8a4e755211a8/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7f394c1d9bbd3a480f4abfbc0aca8a4e755211a8/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=7f394c1d9bbd3a480f4abfbc0aca8a4e755211a8", "patch": "@@ -1,3 +1,10 @@\n+2011-08-29  Arnaud Charlet  <charlet@adacore.com>\n+\n+\t* gnat_rm.texi: Add doc for 'Elab_Subp_Body.\n+\t* bindgen.adb: Add comments.\n+\t* snames.adb-tmpl (Is_Attribute_Name): Only recognize 'Elab_Subp_Body\n+\tin CodePeer mode.\n+\n 2011-08-29  Robert Dewar  <dewar@adacore.com>\n \n \t* exp_attr.adb: Minor reformatting."}, {"sha": "8d402736e9597b4abb49cc3b023312c2b9a6c18b", "filename": "gcc/ada/bindgen.adb", "status": "modified", "additions": 14, "deletions": 3, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7f394c1d9bbd3a480f4abfbc0aca8a4e755211a8/gcc%2Fada%2Fbindgen.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7f394c1d9bbd3a480f4abfbc0aca8a4e755211a8/gcc%2Fada%2Fbindgen.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fbindgen.adb?ref=7f394c1d9bbd3a480f4abfbc0aca8a4e755211a8", "patch": "@@ -984,11 +984,15 @@ package body Bindgen is\n \n             --  Case of no elaboration code\n \n+            --  In CodePeer mode, we special case subprogram bodies which\n+            --  are handled in the 'else' part below, and lead to a call to\n+            --  <subp>'Elab_Subp_Body.\n+\n             elsif U.No_Elab\n               and then (not CodePeer_Mode\n-                        or else U.Utype = Is_Spec\n-                        or else U.Utype = Is_Spec_Only\n-                        or else U.Unit_Kind /= 's')\n+                         or else U.Utype = Is_Spec\n+                         or else U.Utype = Is_Spec_Only\n+                         or else U.Unit_Kind /= 's')\n             then\n \n                --  The only case in which we have to do something is if this\n@@ -1024,6 +1028,9 @@ package body Bindgen is\n             --  The uname_E increment is skipped if this is a separate spec,\n             --  since it will be done when we process the body.\n \n+            --  In CodePeer mode, we do not generate any reference to xxx_E\n+            --  variables, only calls to 'Elab* subprograms.\n+\n             else\n                Check_Elab_Flag :=\n                  not CodePeer_Mode\n@@ -1059,6 +1066,10 @@ package body Bindgen is\n                        \"'elab_spec\";\n                      Name_Len := Name_Len + 8;\n \n+                  --  Special case in CodePeer mode for subprogram bodies\n+                  --  which correspond to CodePeer 'Elab_Subp_Body special\n+                  --  init procedure.\n+\n                   elsif U.Unit_Kind = 's' and CodePeer_Mode then\n                      Name_Buffer (Name_Len - 1 .. Name_Len + 13) :=\n                        \"'elab_subp_body\";"}, {"sha": "803f210c8a38d4be927989510bb87ba934497a1a", "filename": "gcc/ada/gnat_rm.texi", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7f394c1d9bbd3a480f4abfbc0aca8a4e755211a8/gcc%2Fada%2Fgnat_rm.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7f394c1d9bbd3a480f4abfbc0aca8a4e755211a8/gcc%2Fada%2Fgnat_rm.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnat_rm.texi?ref=7f394c1d9bbd3a480f4abfbc0aca8a4e755211a8", "patch": "@@ -239,6 +239,7 @@ Implementation Defined Attributes\n * Elaborated::\n * Elab_Body::\n * Elab_Spec::\n+* Elab_Subp_Body::\n * Emax::\n * Enabled::\n * Enum_Rep::\n@@ -5719,6 +5720,7 @@ consideration, you should minimize the use of these attributes.\n * Elaborated::\n * Elab_Body::\n * Elab_Spec::\n+* Elab_Subp_Body::\n * Emax::\n * Enabled::\n * Enum_Rep::\n@@ -5966,6 +5968,17 @@ which it is useful to be able to call this elaboration procedure from\n Ada code, e.g.@: if it is necessary to do selective re-elaboration to fix\n some error.\n \n+@node Elab_Subp_Body\n+@unnumberedsec Elab_Subp_Body\n+@findex Elab_Subp_Body\n+@noindent\n+This attribute can only be applied to a library level subprogram\n+name and is only allowed in CodePeer mode. It returns the entity\n+for the corresponding elaboration procedure for elaborating the body\n+of the referenced subprogram unit. This is used in the main generated\n+elaboration procedure by the binder in CodePeer mode only and is unrecognized\n+otherwise.\n+\n @node Emax\n @unnumberedsec Emax\n @cindex Ada 83 attributes"}, {"sha": "92b258df923dfaa17952a0e13f385d788bfb883d", "filename": "gcc/ada/snames.adb-tmpl", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7f394c1d9bbd3a480f4abfbc0aca8a4e755211a8/gcc%2Fada%2Fsnames.adb-tmpl", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7f394c1d9bbd3a480f4abfbc0aca8a4e755211a8/gcc%2Fada%2Fsnames.adb-tmpl", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsnames.adb-tmpl?ref=7f394c1d9bbd3a480f4abfbc0aca8a4e755211a8", "patch": "@@ -306,7 +306,8 @@ package body Snames is\n \n    function Is_Attribute_Name (N : Name_Id) return Boolean is\n    begin\n-      return N in First_Attribute_Name .. Last_Attribute_Name;\n+      return N in First_Attribute_Name .. Last_Attribute_Name\n+        and then (CodePeer_Mode or else N /= Name_Elab_Subp_Body);\n    end Is_Attribute_Name;\n \n    ----------------------------------"}]}