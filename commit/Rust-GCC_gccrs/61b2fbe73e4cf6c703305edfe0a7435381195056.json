{"sha": "61b2fbe73e4cf6c703305edfe0a7435381195056", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjFiMmZiZTczZTRjZjZjNzAzMzA1ZWRmZTBhNzQzNTM4MTE5NTA1Ng==", "commit": {"author": {"name": "Michael Meissner", "email": "meissner@gcc.gnu.org", "date": "1996-08-06T21:47:05Z"}, "committer": {"name": "Michael Meissner", "email": "meissner@gcc.gnu.org", "date": "1996-08-06T21:47:05Z"}, "message": "Make STACK_BOUNDARY always 64 bits\n\nFrom-SVN: r12599", "tree": {"sha": "2e4061c7ae7d4b52384009dcfd7c5ef89872c639", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2e4061c7ae7d4b52384009dcfd7c5ef89872c639"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/61b2fbe73e4cf6c703305edfe0a7435381195056", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/61b2fbe73e4cf6c703305edfe0a7435381195056", "html_url": "https://github.com/Rust-GCC/gccrs/commit/61b2fbe73e4cf6c703305edfe0a7435381195056", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/61b2fbe73e4cf6c703305edfe0a7435381195056/comments", "author": null, "committer": null, "parents": [{"sha": "3d348653e0fbd1567780a1858a8ca3fcccbbe385", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3d348653e0fbd1567780a1858a8ca3fcccbbe385", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3d348653e0fbd1567780a1858a8ca3fcccbbe385"}], "stats": {"total": 15, "additions": 12, "deletions": 3}, "files": [{"sha": "00ec109f87febf9f69f79d4ed83320b34252a572", "filename": "gcc/config/rs6000/rs6000.c", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/61b2fbe73e4cf6c703305edfe0a7435381195056/gcc%2Fconfig%2Frs6000%2Frs6000.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/61b2fbe73e4cf6c703305edfe0a7435381195056/gcc%2Fconfig%2Frs6000%2Frs6000.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.c?ref=61b2fbe73e4cf6c703305edfe0a7435381195056", "patch": "@@ -2994,6 +2994,10 @@ rs6000_makes_calls ()\n    old SP.  To support calls through pointers, we also allocate a\n    fixed slot to store the TOC, -8 off the old SP.  */\n \n+#ifndef ABI_STACK_BOUNDARY\n+#define ABI_STACK_BOUNDARY STACK_BOUNDARY\n+#endif\n+\n rs6000_stack_t *\n rs6000_stack_info ()\n {\n@@ -3108,7 +3112,7 @@ rs6000_stack_info ()\n \t\t\t    + info_ptr->varargs_size\n \t\t\t    + info_ptr->fixed_size);\n \n-  info_ptr->total_size   = ALIGN (total_raw_size, STACK_BOUNDARY / BITS_PER_UNIT);\n+  info_ptr->total_size   = ALIGN (total_raw_size, ABI_STACK_BOUNDARY / BITS_PER_UNIT);\n \n   /* Determine if we need to allocate any stack frame.\n      For AIX We need to push the stack if a frame pointer is needed (because"}, {"sha": "68f4b8396b2af1ef9e73b4b63318abc0a3879135", "filename": "gcc/config/rs6000/sysv4.h", "status": "modified", "additions": 7, "deletions": 2, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/61b2fbe73e4cf6c703305edfe0a7435381195056/gcc%2Fconfig%2Frs6000%2Fsysv4.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/61b2fbe73e4cf6c703305edfe0a7435381195056/gcc%2Fconfig%2Frs6000%2Fsysv4.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Fsysv4.h?ref=61b2fbe73e4cf6c703305edfe0a7435381195056", "patch": "@@ -383,9 +383,14 @@ do {\t\t\t\t\t\t\t\t\t\\\n #undef\tSTRICT_ALIGNMENT\n #define\tSTRICT_ALIGNMENT (TARGET_STRICT_ALIGN || TARGET_LITTLE_ENDIAN)\n \n-/* Align stack to 8 byte boundaries for eabi, 16 byte boundaries for System V.4  */\n+/* Alignment in bits of the stack boundary.  Note, in order to allow building\n+   one set of libraries with -mno-eabi instead of eabi libraries and non-eabi\n+   versions, just use 64 as the stack boundary.  */\n #undef\tSTACK_BOUNDARY\n-#define\tSTACK_BOUNDARY\t((TARGET_EABI) ? 64 : 128)\n+#define\tSTACK_BOUNDARY\t64\n+\n+/* Real stack boundary as mandated by the appropriate ABI */\n+#define ABI_STACK_BOUNDARY ((TARGET_EABI) ? 64 : 128)\n \n /* No data type wants to be aligned rounder than this.  */\n #undef\tBIGGEST_ALIGNMENT"}]}