{"sha": "005c1a13e5649b1c7a213c8d76f8e0e20d25a891", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDA1YzFhMTNlNTY0OWIxYzdhMjEzYzhkNzZmOGUwZTIwZDI1YTg5MQ==", "commit": {"author": {"name": "Geoffrey Keating", "email": "geoffk@apple.com", "date": "2004-10-27T23:02:39Z"}, "committer": {"name": "Geoffrey Keating", "email": "geoffk@gcc.gnu.org", "date": "2004-10-27T23:02:39Z"}, "message": "Index: fixincludes/ChangeLog\n2004-10-27  Geoffrey Keating  <geoffk@apple.com>\n\n\t* inclhack.def (darwin_gcc4_breakage): New.\n\t* fixincl.x: Regenerate.\n\nIndex: gcc/ChangeLog\n2004-10-27  Geoffrey Keating  <geoffk@apple.com>\n\n\t* config/rs6000/rs6000.c (rs6000_attribute_table): Add\n\tSUBTARGET_ATTRIBUTE_TABLE.\n\t* config/darwin.h (ASM_WEAKEN_DECL): Handle weak_import.\n\t(SUBTARGET_ATTRIBUTE_TABLE): Define.\n\t* config/darwin.c (darwin_handle_weak_import_attribute): New.\n\t(HAVE_DEAD_STRIP): Delete.\n\t(no_dead_strip): Don't test HAVE_DEAD_STRIP.\n\t* config/darwin-protos.h (darwin_handle_weak_import_attribute):\n\tPrototype.\n\nIndex: gcc/testsuite/ChangeLog\n2004-10-27  Geoffrey Keating  <geoffk@apple.com>\n\n\t* gcc.dg/darwin-weakimport-1.c: New.\n\nFrom-SVN: r89716", "tree": {"sha": "cfb4cd621b8390f148fe008b597f52830668a28b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/cfb4cd621b8390f148fe008b597f52830668a28b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/005c1a13e5649b1c7a213c8d76f8e0e20d25a891", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/005c1a13e5649b1c7a213c8d76f8e0e20d25a891", "html_url": "https://github.com/Rust-GCC/gccrs/commit/005c1a13e5649b1c7a213c8d76f8e0e20d25a891", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/005c1a13e5649b1c7a213c8d76f8e0e20d25a891/comments", "author": {"login": "geoffk01", "id": 31905243, "node_id": "MDQ6VXNlcjMxOTA1MjQz", "avatar_url": "https://avatars.githubusercontent.com/u/31905243?v=4", "gravatar_id": "", "url": "https://api.github.com/users/geoffk01", "html_url": "https://github.com/geoffk01", "followers_url": "https://api.github.com/users/geoffk01/followers", "following_url": "https://api.github.com/users/geoffk01/following{/other_user}", "gists_url": "https://api.github.com/users/geoffk01/gists{/gist_id}", "starred_url": "https://api.github.com/users/geoffk01/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/geoffk01/subscriptions", "organizations_url": "https://api.github.com/users/geoffk01/orgs", "repos_url": "https://api.github.com/users/geoffk01/repos", "events_url": "https://api.github.com/users/geoffk01/events{/privacy}", "received_events_url": "https://api.github.com/users/geoffk01/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "9a3137c336cf8e3f34d86a36a8eb76043abec00b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9a3137c336cf8e3f34d86a36a8eb76043abec00b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9a3137c336cf8e3f34d86a36a8eb76043abec00b"}], "stats": {"total": 143, "additions": 135, "deletions": 8}, "files": [{"sha": "defdb6517e03ea61c2a49df610153b5e46cdc5eb", "filename": "fixincludes/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/005c1a13e5649b1c7a213c8d76f8e0e20d25a891/fixincludes%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/005c1a13e5649b1c7a213c8d76f8e0e20d25a891/fixincludes%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/fixincludes%2FChangeLog?ref=005c1a13e5649b1c7a213c8d76f8e0e20d25a891", "patch": "@@ -1,3 +1,8 @@\n+2004-10-27  Geoffrey Keating  <geoffk@apple.com>\n+\n+\t* inclhack.def (darwin_gcc4_breakage): New.\n+\t* fixincl.x: Regenerate.\n+\n 2004-10-27  Aaron W. LaFramboise  <aaronavay62@aaronwl.com>\n \n \tPR bootstrap/17832"}, {"sha": "69098aefa90ffb32ed29295a501b4c27b05169b3", "filename": "fixincludes/fixincl.x", "status": "modified", "additions": 48, "deletions": 5, "changes": 53, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/005c1a13e5649b1c7a213c8d76f8e0e20d25a891/fixincludes%2Ffixincl.x", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/005c1a13e5649b1c7a213c8d76f8e0e20d25a891/fixincludes%2Ffixincl.x", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/fixincludes%2Ffixincl.x?ref=005c1a13e5649b1c7a213c8d76f8e0e20d25a891", "patch": "@@ -2,11 +2,11 @@\n  * \n  * DO NOT EDIT THIS FILE   (fixincl.x)\n  * \n- * It has been AutoGen-ed  Saturday September 18, 2004 at 10:59:03 AM MDT\n+ * It has been AutoGen-ed  Tuesday October 26, 2004 at 01:55:22 PM PDT\n  * From the definitions    inclhack.def\n  * and the template file   fixincl\n  */\n-/* DO NOT CVS-MERGE THIS FILE, EITHER Sat Sep 18 10:59:03 MDT 2004\n+/* DO NOT CVS-MERGE THIS FILE, EITHER Tue Oct 26 13:55:22 PDT 2004\n  *\n  * You must regenerate it.  Use the ./genfixes script.\n  *\n@@ -15,7 +15,7 @@\n  * certain ANSI-incompatible system header files which are fixed to work\n  * correctly with ANSI C and placed in a directory that GNU C will search.\n  *\n- * This file contains 179 fixup descriptions.\n+ * This file contains 180 fixup descriptions.\n  *\n  * See README for more information.\n  *\n@@ -1640,6 +1640,43 @@ extern \\\"C\\\" {\\n\\\n #endif\\n\",\n     (char*)NULL };\n \n+/* * * * * * * * * * * * * * * * * * * * * * * * * *\n+ *\n+ *  Description of Darwin_Gcc4_Breakage fix\n+ */\n+tSCC zDarwin_Gcc4_BreakageName[] =\n+     \"darwin_gcc4_breakage\";\n+\n+/*\n+ *  File name selection pattern\n+ */\n+tSCC zDarwin_Gcc4_BreakageList[] =\n+  \"|AvailabilityMacros.h|\";\n+/*\n+ *  Machine/OS name selection pattern\n+ */\n+tSCC* apzDarwin_Gcc4_BreakageMachs[] = {\n+        \"*-*-darwin*\",\n+        (const char*)NULL };\n+\n+/*\n+ *  content selection pattern - do fix if pattern found\n+ */\n+tSCC zDarwin_Gcc4_BreakageSelect0[] =\n+       \"\\\\(__GNUC__ >= 3\\\\) && \\\\(__GNUC_MINOR__ >= 1\\\\)\";\n+\n+#define    DARWIN_GCC4_BREAKAGE_TEST_CT  1\n+static tTestDesc aDarwin_Gcc4_BreakageTests[] = {\n+  { TT_EGREP,    zDarwin_Gcc4_BreakageSelect0, (regex_t*)NULL }, };\n+\n+/*\n+ *  Fix Command Arguments for Darwin_Gcc4_Breakage\n+ */\n+static const char* apzDarwin_Gcc4_BreakagePatch[] = {\n+    \"format\",\n+    \"((__GNUC__ >= 4) || (__GNUC__ == 3 && __GNUC_MINOR__ >= 1))\",\n+    (char*)NULL };\n+\n /* * * * * * * * * * * * * * * * * * * * * * * * * *\n  *\n  *  Description of Darwin_Private_Extern fix\n@@ -7102,9 +7139,9 @@ static const char* apzX11_SprintfPatch[] = {\n  *\n  *  List of all fixes\n  */\n-#define REGEX_COUNT          202\n+#define REGEX_COUNT          203\n #define MACH_LIST_SIZE_LIMIT 261\n-#define FIX_COUNT            179\n+#define FIX_COUNT            180\n \n /*\n  *  Enumerate the fixes\n@@ -7148,6 +7185,7 @@ typedef enum {\n     CTRL_QUOTES_DEF_FIXIDX,\n     CTRL_QUOTES_USE_FIXIDX,\n     CXX_UNREADY_FIXIDX,\n+    DARWIN_GCC4_BREAKAGE_FIXIDX,\n     DARWIN_PRIVATE_EXTERN_FIXIDX,\n     DEC_INTERN_ASM_FIXIDX,\n     DJGPP_WCHAR_H_FIXIDX,\n@@ -7482,6 +7520,11 @@ tFixDesc fixDescList[ FIX_COUNT ] = {\n      CXX_UNREADY_TEST_CT, FD_MACH_ONLY | FD_SUBROUTINE,\n      aCxx_UnreadyTests,   apzCxx_UnreadyPatch, 0 },\n \n+  {  zDarwin_Gcc4_BreakageName,    zDarwin_Gcc4_BreakageList,\n+     apzDarwin_Gcc4_BreakageMachs,\n+     DARWIN_GCC4_BREAKAGE_TEST_CT, FD_MACH_ONLY | FD_SUBROUTINE,\n+     aDarwin_Gcc4_BreakageTests,   apzDarwin_Gcc4_BreakagePatch, 0 },\n+\n   {  zDarwin_Private_ExternName,    zDarwin_Private_ExternList,\n      apzDarwin_Private_ExternMachs,\n      DARWIN_PRIVATE_EXTERN_TEST_CT, FD_MACH_ONLY | FD_SUBROUTINE,"}, {"sha": "00c5ae6aba357ae6c6f394b44d4a64054b3bff50", "filename": "fixincludes/inclhack.def", "status": "modified", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/005c1a13e5649b1c7a213c8d76f8e0e20d25a891/fixincludes%2Finclhack.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/005c1a13e5649b1c7a213c8d76f8e0e20d25a891/fixincludes%2Finclhack.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/fixincludes%2Finclhack.def?ref=005c1a13e5649b1c7a213c8d76f8e0e20d25a891", "patch": "@@ -977,6 +977,23 @@ fix = {\n };\n \n \n+/*\n+ * AvailabilityMacros.h on Darwin breaks with GCC 4.0, because of\n+ * bad __GNUC__ tests.\n+ */\n+\n+fix = {\n+  hackname  = darwin_gcc4_breakage;\n+  mach      = \"*-*-darwin*\";\n+  files     = AvailabilityMacros.h;\n+  select    = \"\\\\(__GNUC__ >= 3\\\\) && \\\\(__GNUC_MINOR__ >= 1\\\\)\";\n+  c_fix     = format;\n+  c_fix_arg = \"((__GNUC__ >= 4) || (__GNUC__ == 3 && __GNUC_MINOR__ >= 1))\";\n+  test_text = \"#if defined(__GNUC__) && (__GNUC__ >= 3) && \"\n+  \t      \"(__GNUC_MINOR__ >= 1)\\n\";\n+};\n+\n+\n /*\n  *  __private_extern__ doesn't exist in FSF GCC.  Even if it did,\n  *  why would you ever put it in a system header file?"}, {"sha": "8199b2a3e927828ae5012ed2a55d1eaf9dbde492", "filename": "gcc/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/005c1a13e5649b1c7a213c8d76f8e0e20d25a891/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/005c1a13e5649b1c7a213c8d76f8e0e20d25a891/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=005c1a13e5649b1c7a213c8d76f8e0e20d25a891", "patch": "@@ -8,6 +8,16 @@\n \n 2004-10-27  Geoffrey Keating  <geoffk@apple.com>\n \n+\t* config/rs6000/rs6000.c (rs6000_attribute_table): Add\n+\tSUBTARGET_ATTRIBUTE_TABLE.\n+\t* config/darwin.h (ASM_WEAKEN_DECL): Handle weak_import.\n+\t(SUBTARGET_ATTRIBUTE_TABLE): Define.\n+\t* config/darwin.c (darwin_handle_weak_import_attribute): New.\n+\t(HAVE_DEAD_STRIP): Delete.\n+\t(no_dead_strip): Don't test HAVE_DEAD_STRIP.\n+\t* config/darwin-protos.h (darwin_handle_weak_import_attribute):\n+\tPrototype.\n+\n \t* doc/tm.texi (USE_SELECT_SECTION_FOR_FUNCTIONS): Document.\n \n \t* config/darwin.h (GTHREAD_USE_WEAK): Define."}, {"sha": "43ea4cd3363196420e7a5241bbb915f2de2a2df8", "filename": "gcc/config/darwin-protos.h", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/005c1a13e5649b1c7a213c8d76f8e0e20d25a891/gcc%2Fconfig%2Fdarwin-protos.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/005c1a13e5649b1c7a213c8d76f8e0e20d25a891/gcc%2Fconfig%2Fdarwin-protos.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fdarwin-protos.h?ref=005c1a13e5649b1c7a213c8d76f8e0e20d25a891", "patch": "@@ -82,6 +82,10 @@ extern void darwin_file_end (void);\n \n extern void darwin_mark_decl_preserved (const char *);\n \n+extern tree darwin_handle_weak_import_attribute (tree *node, tree name,\n+\t\t\t\t\t\t tree args, int flags,\n+\t\t\t\t\t\t bool * no_add_attrs);\n+\n /* Expanded by EXTRA_SECTION_FUNCTIONS into varasm.o.  */\n extern void text_coal_section (void);\n extern void text_unlikely_section (void);"}, {"sha": "73581f7346ac8b5b95b47b3fabfc49e69b834cd1", "filename": "gcc/config/darwin.c", "status": "modified", "additions": 20, "deletions": 3, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/005c1a13e5649b1c7a213c8d76f8e0e20d25a891/gcc%2Fconfig%2Fdarwin.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/005c1a13e5649b1c7a213c8d76f8e0e20d25a891/gcc%2Fconfig%2Fdarwin.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fdarwin.c?ref=005c1a13e5649b1c7a213c8d76f8e0e20d25a891", "patch": "@@ -1209,13 +1209,30 @@ darwin_unique_section (tree decl ATTRIBUTE_UNUSED, int reloc ATTRIBUTE_UNUSED)\n   /* Darwin does not use unique sections.  */\n }\n \n-#define HAVE_DEAD_STRIP 0\n+/* Handle a \"weak_import\" attribute; arguments as in\n+   struct attribute_spec.handler.  */\n+\n+tree\n+darwin_handle_weak_import_attribute (tree *node, tree name,\n+\t\t\t\t     tree ARG_UNUSED (args),\n+\t\t\t\t     int ARG_UNUSED (flags),\n+\t\t\t\t     bool * no_add_attrs)\n+{\n+  if (TREE_CODE (*node) != FUNCTION_DECL)\n+    {\n+      warning (\"`%s' attribute ignored\", IDENTIFIER_POINTER (name));\n+      *no_add_attrs = true;\n+    }\n+  else\n+    declare_weak (*node);\n+\n+  return NULL_TREE;\n+}\n \n static void\n no_dead_strip (FILE *file, const char *lab)\n {\n-  if (HAVE_DEAD_STRIP)\n-    fprintf (file, \".no_dead_strip %s\\n\", lab);\n+  fprintf (file, \".no_dead_strip %s\\n\", lab);\n }\n \n /* Emit a label for an FDE, making it global and/or weak if appropriate. "}, {"sha": "098caa2d76de960946724c5248e68877828efdbf", "filename": "gcc/config/darwin.h", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/005c1a13e5649b1c7a213c8d76f8e0e20d25a891/gcc%2Fconfig%2Fdarwin.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/005c1a13e5649b1c7a213c8d76f8e0e20d25a891/gcc%2Fconfig%2Fdarwin.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fdarwin.h?ref=005c1a13e5649b1c7a213c8d76f8e0e20d25a891", "patch": "@@ -385,6 +385,9 @@ extern const char *darwin_fix_and_continue_switch;\n       targetm.asm_out.globalize_label (FILE, NAME);\t\t\t\\\n     if (DECL_EXTERNAL (DECL))\t\t\t\t\t\t\\\n       fputs (\"\\t.weak_reference \", FILE);\t\t\t\t\\\n+    else if (! lookup_attribute (\"weak\", DECL_ATTRIBUTES (DECL))\t\\\n+\t&& lookup_attribute (\"weak_import\", DECL_ATTRIBUTES (DECL)))\t\\\n+      break;\t\t\t\t\t\t\t\t\\\n     else if (TREE_PUBLIC (DECL))\t\t\t\t\t\\\n       fputs (\"\\t.weak_definition \", FILE);\t\t\t\t\\\n     else\t\t\t\t\t\t\t\t\\\n@@ -862,6 +865,11 @@ objc_section_init (void)\t\t\t\\\n #undef TARGET_ASM_ASSEMBLE_VISIBILITY\n #define TARGET_ASM_ASSEMBLE_VISIBILITY darwin_assemble_visibility\n \n+/* Extra attributes for Darwin.  */\n+#define SUBTARGET_ATTRIBUTE_TABLE\t\t\t\t\t     \\\n+  /* { name, min_len, max_len, decl_req, type_req, fn_type_req, handler } */ \\\n+  { \"weak_import\", 0, 0, true, false, false,\t\t\t\t     \\\n+    darwin_handle_weak_import_attribute }\n \n #undef ASM_GENERATE_INTERNAL_LABEL\n #define ASM_GENERATE_INTERNAL_LABEL(LABEL,PREFIX,NUM)\t\\"}, {"sha": "e2f97d7742cfd8a4c01b64fe883b3235b67b089f", "filename": "gcc/config/rs6000/rs6000.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/005c1a13e5649b1c7a213c8d76f8e0e20d25a891/gcc%2Fconfig%2Frs6000%2Frs6000.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/005c1a13e5649b1c7a213c8d76f8e0e20d25a891/gcc%2Fconfig%2Frs6000%2Frs6000.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.c?ref=005c1a13e5649b1c7a213c8d76f8e0e20d25a891", "patch": "@@ -16659,6 +16659,9 @@ const struct attribute_spec rs6000_attribute_table[] =\n   { \"altivec\",   1, 1, false, true,  false, rs6000_handle_altivec_attribute },\n   { \"longcall\",  0, 0, false, true,  true,  rs6000_handle_longcall_attribute },\n   { \"shortcall\", 0, 0, false, true,  true,  rs6000_handle_longcall_attribute },\n+#ifdef SUBTARGET_ATTRIBUTE_TABLE\n+  SUBTARGET_ATTRIBUTE_TABLE,\n+#endif\n   { NULL,        0, 0, false, false, false, NULL }\n };\n "}, {"sha": "647ab555ddae86e057e9eef69e7aea66fdc6e6d4", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/005c1a13e5649b1c7a213c8d76f8e0e20d25a891/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/005c1a13e5649b1c7a213c8d76f8e0e20d25a891/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=005c1a13e5649b1c7a213c8d76f8e0e20d25a891", "patch": "@@ -1,3 +1,7 @@\n+2004-10-27  Geoffrey Keating  <geoffk@apple.com>\n+\n+\t* gcc.dg/darwin-weakimport-1.c: New.\n+\n 2004-10-28  Ben Elliston  <bje@au.ibm.com>\n \n \t* gcc.dg/tree-ssa/sra-1.c: Pass --param sra-max-structure-size."}, {"sha": "c797720e4e2400a418af29951c1170aa482e9c81", "filename": "gcc/testsuite/gcc.dg/darwin-weakimport-1.c", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/005c1a13e5649b1c7a213c8d76f8e0e20d25a891/gcc%2Ftestsuite%2Fgcc.dg%2Fdarwin-weakimport-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/005c1a13e5649b1c7a213c8d76f8e0e20d25a891/gcc%2Ftestsuite%2Fgcc.dg%2Fdarwin-weakimport-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fdarwin-weakimport-1.c?ref=005c1a13e5649b1c7a213c8d76f8e0e20d25a891", "patch": "@@ -0,0 +1,16 @@\n+/* { dg-do compile { target *-*-darwin* } } */\n+/* { dg-require-weak \"\" } */\n+/* { dg-options \"-fno-common\" } */\n+\n+/* { dg-final { scan-assembler \"weak_reference _a\" } } */\n+/* { dg-final { scan-assembler-not \"weak_\\[a-z \\t\\]*_b\" } } */\n+\n+extern void a (void) __attribute__((weak_import));\n+extern void b (void) __attribute__((weak_import));\n+\n+void b(void)\n+{\n+  a();\n+}\n+\n+extern int c __attribute__((weak_import)); /* { dg-warning \"ignored\" } */"}]}