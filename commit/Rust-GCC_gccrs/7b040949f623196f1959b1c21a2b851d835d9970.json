{"sha": "7b040949f623196f1959b1c21a2b851d835d9970", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6N2IwNDA5NDlmNjIzMTk2ZjE5NTliMWMyMWEyYjg1MWQ4MzVkOTk3MA==", "commit": {"author": {"name": "Tobias Burnus", "email": "burnus@gcc.gnu.org", "date": "2011-05-06T18:33:31Z"}, "committer": {"name": "Tobias Burnus", "email": "burnus@gcc.gnu.org", "date": "2011-05-06T18:33:31Z"}, "message": "Really commit:\n\n2011-05-06  Tobias Burnus  <burnus@net-b.de>\n    \n        PR fortran/48858\n        PR fortran/48820\n        * gfortran.dg/bind_c_usage_24.f90: New.\n        * gfortran.dg/bind_c_usage_24_c.c: New.\n\nFrom-SVN: r173503", "tree": {"sha": "7a8bc6872cfec4fa937b49c525c903ad579ee918", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7a8bc6872cfec4fa937b49c525c903ad579ee918"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7b040949f623196f1959b1c21a2b851d835d9970", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7b040949f623196f1959b1c21a2b851d835d9970", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7b040949f623196f1959b1c21a2b851d835d9970", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7b040949f623196f1959b1c21a2b851d835d9970/comments", "author": null, "committer": null, "parents": [{"sha": "1f94e0c6f7f5b1066ecb949efa24303719a65278", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1f94e0c6f7f5b1066ecb949efa24303719a65278", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1f94e0c6f7f5b1066ecb949efa24303719a65278"}], "stats": {"total": 67, "additions": 67, "deletions": 0}, "files": [{"sha": "703ab5f19fa11c8feba0ea883e10a9bb14449f64", "filename": "gcc/testsuite/gfortran.dg/bind_c_usage_24.f90", "status": "added", "additions": 43, "deletions": 0, "changes": 43, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7b040949f623196f1959b1c21a2b851d835d9970/gcc%2Ftestsuite%2Fgfortran.dg%2Fbind_c_usage_24.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7b040949f623196f1959b1c21a2b851d835d9970/gcc%2Ftestsuite%2Fgfortran.dg%2Fbind_c_usage_24.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fbind_c_usage_24.f90?ref=7b040949f623196f1959b1c21a2b851d835d9970", "patch": "@@ -0,0 +1,43 @@\n+! { dg-do run }\n+! { dg-additional-sources bind_c_usage_24_c.c }\n+!\n+! PR fortran/48858\n+! PR fortran/48820\n+!\n+! TR 29113: BIND(C) with OPTIONAL\n+!\n+module m\n+  use iso_c_binding\n+  interface\n+    subroutine c_proc (is_present, var) bind(C)\n+      import\n+      logical(c_bool), value    :: is_present\n+      integer(c_int),  optional :: var\n+    end subroutine\n+  end interface\n+contains\n+  subroutine subtest (is_present, var) bind(C)\n+    logical(c_bool), intent(in),    value    :: is_present\n+    integer(c_int),  intent(inout), optional :: var\n+    if (is_present) then\n+      if (.not. present (var)) call abort ()\n+      if (var /= 43) call abort ()\n+      var = -45\n+    else\n+      if (present (var)) call abort ()\n+    end if\n+  end subroutine subtest\n+end module m\n+\n+program test\n+  use m\n+  implicit none\n+  integer :: val\n+\n+  val = 4\n+  call c_proc (.false._c_bool)\n+  call c_proc (.true._c_bool, val)\n+  if (val /= 7) call abort ()\n+end program test\n+\n+! { dg-final { cleanup-modules \"m\" } }"}, {"sha": "ffc90b728b5e1f1f241da8f20ba397d87d35ceda", "filename": "gcc/testsuite/gfortran.dg/bind_c_usage_24_c.c", "status": "added", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7b040949f623196f1959b1c21a2b851d835d9970/gcc%2Ftestsuite%2Fgfortran.dg%2Fbind_c_usage_24_c.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7b040949f623196f1959b1c21a2b851d835d9970/gcc%2Ftestsuite%2Fgfortran.dg%2Fbind_c_usage_24_c.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fbind_c_usage_24_c.c?ref=7b040949f623196f1959b1c21a2b851d835d9970", "patch": "@@ -0,0 +1,24 @@\n+/* Compiled and linked by bind_c.f90.  */\n+\n+#include <stdlib.h>\n+\n+void subtest (_Bool, int *);\n+\n+void\n+c_proc (_Bool present, int *val)\n+{\n+  int val2;\n+  if (!present && val)\n+    abort ();\n+  else if (present)\n+    {\n+      if (!val) abort ();\n+      if (*val != 4) abort ();\n+      *val = 7;\n+    }\n+\n+  val2 = 43;\n+  subtest (1, &val2);\n+  subtest (0, NULL);\n+  if (val2 != -45) abort ();\n+}"}]}