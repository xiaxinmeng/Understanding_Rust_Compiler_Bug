{"sha": "f96850afe57a8082689ee9c249b5f39696731a88", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Zjk2ODUwYWZlNTdhODA4MjY4OWVlOWMyNDliNWYzOTY5NjczMWE4OA==", "commit": {"author": {"name": "David Edelsohn", "email": "dje@gcc.gnu.org", "date": "2001-07-31T21:47:42Z"}, "committer": {"name": "David Edelsohn", "email": "dje@gcc.gnu.org", "date": "2001-07-31T21:47:42Z"}, "message": "Expand PowerPC reorg ChangeLog entries.\n\nFrom-SVN: r44521", "tree": {"sha": "8febbac18c1d1c3019f2a3c178619705318a66fd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8febbac18c1d1c3019f2a3c178619705318a66fd"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f96850afe57a8082689ee9c249b5f39696731a88", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f96850afe57a8082689ee9c249b5f39696731a88", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f96850afe57a8082689ee9c249b5f39696731a88", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f96850afe57a8082689ee9c249b5f39696731a88/comments", "author": null, "committer": null, "parents": [{"sha": "0498eaeaab1d3894416baf4558697ba51e044cc7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0498eaeaab1d3894416baf4558697ba51e044cc7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0498eaeaab1d3894416baf4558697ba51e044cc7"}], "stats": {"total": 48, "additions": 29, "deletions": 19}, "files": [{"sha": "0bc8c86c11518eb490b099bb29cf60f304685c21", "filename": "gcc/ChangeLog", "status": "modified", "additions": 29, "deletions": 19, "changes": 48, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f96850afe57a8082689ee9c249b5f39696731a88/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f96850afe57a8082689ee9c249b5f39696731a88/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=f96850afe57a8082689ee9c249b5f39696731a88", "patch": "@@ -16,8 +16,6 @@\n \t* config/rs6000/rs6000.h: Split XCOFF specific stuff into\n \txcoff.h. \n \tMove AIX specific stuff into aix.h.\n-\t(ASM_LONG): Use DOUBLE_INT_ASM_OP if we are on a 64 bit target.\n-\t(ASM_OUTPUT_DOUBLE_INT): Ditto.\n \t(TARGET_AIX): Renamed to TARGET_XCOFF, since the AIX ABI is used\n \twith more than just XCOFF now.\n \t(SET_ASM_OP): Remove, now defined where needed.\n@@ -26,28 +24,40 @@\n \t(CONST_OK_FOR_LETTER_P): Change N to require that value is\n \tpositive, too.\n \t(ASM_OPEN_PAREN, ASM_CLOSE_PAREN): New macro definition.\n-\t(PREDICATE_CODES): Added exact_log2_cint_operand,\n-\treg_or_add_cint64_operand, reg_or_sub_cint64_operand.\n-\n-\t* config/rs6000/rs6000.c: #ifdef XCOFF debugging info stuff on\n-\tXCOFF_DEBUGGING_INFO.\n-\tUse DOUBLE_INT_ASM_OP where approriate.\n-\t(rs6000_emit_set_long_const): New function.\n-\t(rs6000_emit_set_const): New function.\n-\t(reg_or_sub_cint64_operand): New function.\n-\t(reg_or_add_cint64_operand): New function.\n-\t(exact_log2_cint_operand): New function.\n-\n-\t* config/rs6000/rs6000.md: Fix emitting of constants.\n-\tFix patterns that were AIX ABI specific, but depended on\n-\t!TARGET_ELF (instead of DEFAULT_ABI == ABI_AIX).\t\n-\t\n+\n \t* config/rs6000/xcoff.h: New file.\n \n \t* config/rs6000/linux64.h: New file.\n \n \t* config/rs6000/darwin.h: Copy needed AIX alignment definitions.\n-\t\n+\n+2001-07-31  Alan Modra  <amodra@bigpond.net.au>\n+\n+\t* rs6000.c (print_operand_address): Handle ELF syntax.\n+\t(output_toc): Simplify.  Use DOUBLE_INT_ASM_OP.\n+\t* rs6000.md (load_toc_aix_di): Handle ELF syntax.\n+\t* rs6000.h (ASM_OUTPUT_DOUBLE_INT, ASM_LONG): Use DOUBLE_INT_ASM_OP.\n+\n+2001-07-31  David Edelsohn  <edelsohn@gnu.org>\n+\n+\t* rs6000.c (rs6000_override_options): Only disable\n+\tflag_function_sections for XCOFF.\n+\t(exact_log2_cint_operand): New predicate.\n+\t(reg_or_{add,sub}_cint64_operand): New predicates.\n+\t(add_operand): Compare CONST_INT with fewer function calls.\n+\t(rs6000_emit_set_const, rs6000_emit_set_long_const): New functions.\n+\t(print_operand, case 'p'): Ensure positive operand.\n+\t(rs6000_emit_load_toc_table): No load_toc_v4_pic_di.\n+\t* rs6000.h (CONST_OK_FOR_LETTER_P, case 'N'): Ensure positive value.\n+\t(PREDICATE_CODES): Add new predicates.\n+\t* rs6000.md (addsi3): Split 32-bit constants more correctly.\n+\t(divsi3, modsi3): Ensure positive power-of-2.\n+\t(adddi3): Use new predicate.  Split 32-bit constants more\n+\tcorrectly.  Re-arrange splitter to handle any constant.\n+\t(subdi3): Use new predicate.\n+\t(divdi3, moddi3): Ensure positive power-of-2.\n+\t(movdi): Use rs6000_emit_set_const.\n+\t(load_toc_v4_pic_di): Delete.\n \n 2001-07-31  Graham Stott <grahams@redhat.com>\n "}]}