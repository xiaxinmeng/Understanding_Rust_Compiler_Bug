{"sha": "08dc0e10f4c6528bdb8207230edbbc5e8e2fce2f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDhkYzBlMTBmNGM2NTI4YmRiODIwNzIzMGVkYmJjNWU4ZTJmY2UyZg==", "commit": {"author": {"name": "Janis Johnson", "email": "janis@gcc.gnu.org", "date": "2001-09-07T16:42:54Z"}, "committer": {"name": "Janis Johnson", "email": "janis@gcc.gnu.org", "date": "2001-09-07T16:42:54Z"}, "message": "Test gcov output for functions that use longjmp.\n\nFrom-SVN: r45468", "tree": {"sha": "d8659f54231f8dbf0e14b500708e0e20e9aed443", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d8659f54231f8dbf0e14b500708e0e20e9aed443"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/08dc0e10f4c6528bdb8207230edbbc5e8e2fce2f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/08dc0e10f4c6528bdb8207230edbbc5e8e2fce2f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/08dc0e10f4c6528bdb8207230edbbc5e8e2fce2f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/08dc0e10f4c6528bdb8207230edbbc5e8e2fce2f/comments", "author": null, "committer": null, "parents": [{"sha": "518c36b65ef9803686d0567f703a1d412f03ed24", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/518c36b65ef9803686d0567f703a1d412f03ed24", "html_url": "https://github.com/Rust-GCC/gccrs/commit/518c36b65ef9803686d0567f703a1d412f03ed24"}], "stats": {"total": 84, "additions": 84, "deletions": 0}, "files": [{"sha": "e0ed7a3d3c89e64269161b5aef415b4c3b41bdfd", "filename": "gcc/testsuite/gcc.misc-tests/gcov-7.c", "status": "added", "additions": 84, "deletions": 0, "changes": 84, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/08dc0e10f4c6528bdb8207230edbbc5e8e2fce2f/gcc%2Ftestsuite%2Fgcc.misc-tests%2Fgcov-7.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/08dc0e10f4c6528bdb8207230edbbc5e8e2fce2f/gcc%2Ftestsuite%2Fgcc.misc-tests%2Fgcov-7.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.misc-tests%2Fgcov-7.c?ref=08dc0e10f4c6528bdb8207230edbbc5e8e2fce2f", "patch": "@@ -0,0 +1,84 @@\n+/* Check that gcov correctly reports line counts, branch percentages,\n+ * and call return percentages for functions that call longjmp. */\n+\n+/* { dg-options \"-fprofile-arcs -ftest-coverage\" } */\n+/* { dg-do run { target native } } */\n+\n+#include <setjmp.h>\n+\n+jmp_buf env;\n+int val;\n+int longjmp_taken;\n+int bar_enter, bar_exit;\n+int foo_enter, foo_exit;\n+\n+void bar (int i)\n+{\n+  bar_enter++;\t\t\t\t/* count(3) */\n+\t\t\t\t\t/* branch(67) */\n+  if (i == 0) {\n+    \t\t\t\t\t/* branch(end) */\n+      longjmp_taken++;\t\t\t/* count(1) */\n+      longjmp (env, 1);\n+    }\n+  val += i+1;\n+  bar_exit++;\t\t\t\t/* count(2) */\n+}\n+\n+void foo (int i)\n+{\n+  foo_enter++;\t\t\t\t/* count(3) */\n+\t\t\t\t\t/* branch(67) */\n+  if (i == 1) {\n+\t\t\t\t\t/* branch(end) */\n+      longjmp_taken++;\t\t\t/* count(1) */\n+      longjmp (env, 2);\n+    }\n+\t\t\t\t\t/* returns(50) */\n+  bar (i);\t\t\t\t/* count(2) */\n+\t\t\t\t\t/* returns(100) */\n+  bar (7);\t\t\t\t/* count(1) */\n+\t\t\t\t\t/* returns(end) */\n+  val += 16;\n+  foo_exit++;\t\t\t\t/* count(1) */\n+}\n+\n+int\n+passed ()\n+{\n+  return (val == 31 &&\n+          longjmp_taken == 2 &&\n+\t  foo_enter == 3 &&\n+\t  foo_exit == 1 &&\n+\t  bar_enter == 3 &&\n+\t  bar_exit == 2);\n+\t\n+}\n+\n+void\n+leave (int i)\n+{\n+  if (i == 0) {\n+      abort ();\n+    }\n+  exit (0);\n+}\n+\n+int\n+main()\n+{\n+  int retval;\n+\n+\t\t\t\t\t/* branch(33) */\n+  if ((retval = setjmp (env))) {\n+\t\t\t\t\t/* branch(end) */\n+      val += retval;\t\t\t/* count(2) */\n+    }\n+\t\t\t\t\t/* returns(33) */\n+  foo (val);\t\t\t\t/* count(3) */\n+\t\t\t\t\t/* returns(0) */\n+  leave (passed());\t\t\t/* count(1) */\n+\t\t\t\t\t/* returns(end) */\n+}\n+\n+/* { dg-final { run-gcov -b gcov-7.c } } */"}]}