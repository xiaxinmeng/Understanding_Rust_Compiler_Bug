{"sha": "7325d85abe7451e213f3aafea6938f9810c7f277", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzMyNWQ4NWFiZTc0NTFlMjEzZjNhYWZlYTY5MzhmOTgxMGM3ZjI3Nw==", "commit": {"author": {"name": "Kyrylo Tkachov", "email": "kyrylo.tkachov@arm.com", "date": "2015-12-18T09:58:07Z"}, "committer": {"name": "Kyrylo Tkachov", "email": "ktkachov@gcc.gnu.org", "date": "2015-12-18T09:58:07Z"}, "message": "[AArch64] PR rtl-optimization/68796 Add compare-of-zero_extract pattern\n\n\tPR rtl-optimization/68796\n\t* config/aarch64/aarch64.md (*and<mode>3nr_compare0_zextract):\n\tNew pattern.\n\t* config/aarch64/aarch64.c (aarch64_select_cc_mode): Handle\n\tZERO_EXTRACT comparison with zero.\n\t(aarch64_mask_from_zextract_ops): New function.\n\t* config/aarch64/aarch64-protos.h (aarch64_mask_from_zextract_ops):\n\tNew prototype.\n\n\t* gcc.target/aarch64/tst_3.c: New test.\n\t* gcc.target/aarch64/tst_4.c: Likewise.\n\nFrom-SVN: r231810", "tree": {"sha": "1e1e4a54f101c13a2881b2f56cec68b4866f8073", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1e1e4a54f101c13a2881b2f56cec68b4866f8073"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7325d85abe7451e213f3aafea6938f9810c7f277", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7325d85abe7451e213f3aafea6938f9810c7f277", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7325d85abe7451e213f3aafea6938f9810c7f277", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7325d85abe7451e213f3aafea6938f9810c7f277/comments", "author": {"login": "ktkachov-arm", "id": 74917949, "node_id": "MDQ6VXNlcjc0OTE3OTQ5", "avatar_url": "https://avatars.githubusercontent.com/u/74917949?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ktkachov-arm", "html_url": "https://github.com/ktkachov-arm", "followers_url": "https://api.github.com/users/ktkachov-arm/followers", "following_url": "https://api.github.com/users/ktkachov-arm/following{/other_user}", "gists_url": "https://api.github.com/users/ktkachov-arm/gists{/gist_id}", "starred_url": "https://api.github.com/users/ktkachov-arm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ktkachov-arm/subscriptions", "organizations_url": "https://api.github.com/users/ktkachov-arm/orgs", "repos_url": "https://api.github.com/users/ktkachov-arm/repos", "events_url": "https://api.github.com/users/ktkachov-arm/events{/privacy}", "received_events_url": "https://api.github.com/users/ktkachov-arm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "916c0f6a41f0ff905cbc9d756212072deed5d202", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/916c0f6a41f0ff905cbc9d756212072deed5d202", "html_url": "https://github.com/Rust-GCC/gccrs/commit/916c0f6a41f0ff905cbc9d756212072deed5d202"}], "stats": {"total": 81, "additions": 80, "deletions": 1}, "files": [{"sha": "69e2d3c631be1affc8e2529affd42e9efa50566d", "filename": "gcc/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7325d85abe7451e213f3aafea6938f9810c7f277/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7325d85abe7451e213f3aafea6938f9810c7f277/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=7325d85abe7451e213f3aafea6938f9810c7f277", "patch": "@@ -1,3 +1,14 @@\n+2015-12-18  Kyrylo Tkachov  <kyrylo.tkachov@arm.com>\n+\n+\tPR rtl-optimization/68796\n+\t* config/aarch64/aarch64.md (*and<mode>3nr_compare0_zextract):\n+\tNew pattern.\n+\t* config/aarch64/aarch64.c (aarch64_select_cc_mode): Handle\n+\tZERO_EXTRACT comparison with zero.\n+\t(aarch64_mask_from_zextract_ops): New function.\n+\t* config/aarch64/aarch64-protos.h (aarch64_mask_from_zextract_ops):\n+\tNew prototype.\n+\n 2015-12-18 Robin Dapp <rdapp@linux.vnet.ibm.com>\n \n \t* config/s390/predicates.md: Change and rename"}, {"sha": "40d635bcc53b21157199e4a0183c0eba51be8655", "filename": "gcc/config/aarch64/aarch64-protos.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7325d85abe7451e213f3aafea6938f9810c7f277/gcc%2Fconfig%2Faarch64%2Faarch64-protos.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7325d85abe7451e213f3aafea6938f9810c7f277/gcc%2Fconfig%2Faarch64%2Faarch64-protos.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Faarch64-protos.h?ref=7325d85abe7451e213f3aafea6938f9810c7f277", "patch": "@@ -329,6 +329,7 @@ int aarch64_uxt_size (int, HOST_WIDE_INT);\n int aarch64_vec_fpconst_pow_of_2 (rtx);\n rtx aarch64_final_eh_return_addr (void);\n rtx aarch64_legitimize_reload_address (rtx *, machine_mode, int, int, int);\n+rtx aarch64_mask_from_zextract_ops (rtx, rtx);\n const char *aarch64_output_move_struct (rtx *operands);\n rtx aarch64_return_addr (int, rtx);\n rtx aarch64_simd_gen_const_vector_dup (machine_mode, int);"}, {"sha": "1f020d38ba4d1d15738e6c609a79d8dc3af3aecb", "filename": "gcc/config/aarch64/aarch64.c", "status": "modified", "additions": 18, "deletions": 1, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7325d85abe7451e213f3aafea6938f9810c7f277/gcc%2Fconfig%2Faarch64%2Faarch64.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7325d85abe7451e213f3aafea6938f9810c7f277/gcc%2Fconfig%2Faarch64%2Faarch64.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Faarch64.c?ref=7325d85abe7451e213f3aafea6938f9810c7f277", "patch": "@@ -4146,7 +4146,9 @@ aarch64_select_cc_mode (RTX_CODE code, rtx x, rtx y)\n       && y == const0_rtx\n       && (code == EQ || code == NE || code == LT || code == GE)\n       && (GET_CODE (x) == PLUS || GET_CODE (x) == MINUS || GET_CODE (x) == AND\n-\t  || GET_CODE (x) == NEG))\n+\t  || GET_CODE (x) == NEG\n+\t  || (GET_CODE (x) == ZERO_EXTRACT && CONST_INT_P (XEXP (x, 1))\n+\t      && CONST_INT_P (XEXP (x, 2)))))\n     return CC_NZmode;\n \n   /* A compare with a shifted operand.  Because of canonicalization,\n@@ -10728,6 +10730,21 @@ aarch64_simd_imm_zero_p (rtx x, machine_mode mode)\n   return x == CONST0_RTX (mode);\n }\n \n+\n+/* Return the bitmask CONST_INT to select the bits required by a zero extract\n+   operation of width WIDTH at bit position POS.  */\n+\n+rtx\n+aarch64_mask_from_zextract_ops (rtx width, rtx pos)\n+{\n+  gcc_assert (CONST_INT_P (width));\n+  gcc_assert (CONST_INT_P (pos));\n+\n+  unsigned HOST_WIDE_INT mask\n+    = ((unsigned HOST_WIDE_INT) 1 << UINTVAL (width)) - 1;\n+  return GEN_INT (mask << UINTVAL (pos));\n+}\n+\n bool\n aarch64_simd_imm_scalar_p (rtx x, machine_mode mode ATTRIBUTE_UNUSED)\n {"}, {"sha": "a67296ee255a0db43c2340f7e33db7e0665fc529", "filename": "gcc/config/aarch64/aarch64.md", "status": "modified", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7325d85abe7451e213f3aafea6938f9810c7f277/gcc%2Fconfig%2Faarch64%2Faarch64.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7325d85abe7451e213f3aafea6938f9810c7f277/gcc%2Fconfig%2Faarch64%2Faarch64.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Faarch64.md?ref=7325d85abe7451e213f3aafea6938f9810c7f277", "patch": "@@ -3683,6 +3683,28 @@\n   [(set_attr \"type\" \"logics_reg,logics_imm\")]\n )\n \n+(define_insn \"*and<mode>3nr_compare0_zextract\"\n+  [(set (reg:CC_NZ CC_REGNUM)\n+\t(compare:CC_NZ\n+\t (zero_extract:GPI (match_operand:GPI 0 \"register_operand\" \"r\")\n+\t\t  (match_operand:GPI 1 \"const_int_operand\" \"n\")\n+\t\t  (match_operand:GPI 2 \"const_int_operand\" \"n\"))\n+\t (const_int 0)))]\n+  \"INTVAL (operands[1]) > 0\n+   && ((INTVAL (operands[1]) + INTVAL (operands[2]))\n+\t<= GET_MODE_BITSIZE (<MODE>mode))\n+   && aarch64_bitmask_imm (\n+\tUINTVAL (aarch64_mask_from_zextract_ops (operands[1],\n+\t\t\t\t\t\t operands[2])),\n+\t<MODE>mode)\"\n+  {\n+    operands[1]\n+      = aarch64_mask_from_zextract_ops (operands[1], operands[2]);\n+    return \"tst\\\\t%<w>0, %1\";\n+  }\n+  [(set_attr \"type\" \"logics_shift_imm\")]\n+)\n+\n (define_insn \"*and_<SHIFT:optab><mode>3nr_compare0\"\n   [(set (reg:CC_NZ CC_REGNUM)\n \t(compare:CC_NZ"}, {"sha": "c902f9d740fbf7dc806bb1902aaba3c8f86dbf90", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7325d85abe7451e213f3aafea6938f9810c7f277/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7325d85abe7451e213f3aafea6938f9810c7f277/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=7325d85abe7451e213f3aafea6938f9810c7f277", "patch": "@@ -1,3 +1,9 @@\n+2015-12-18  Kyrylo Tkachov  <kyrylo.tkachov@arm.com>\n+\n+\tPR rtl-optimization/68796\n+\t* gcc.target/aarch64/tst_3.c: New test.\n+\t* gcc.target/aarch64/tst_4.c: Likewise.\n+\n 2015-12-18  Robin Dapp  <rdapp@linux.vnet.ibm.com>\n \n \t* gcc.target/s390/vcond-shift.c: New test to check vcond"}, {"sha": "2204b33f3bc2ea974b3b0a7d1a5bdca7c6b37b82", "filename": "gcc/testsuite/gcc.target/aarch64/tst_3.c", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7325d85abe7451e213f3aafea6938f9810c7f277/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Ftst_3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7325d85abe7451e213f3aafea6938f9810c7f277/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Ftst_3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Ftst_3.c?ref=7325d85abe7451e213f3aafea6938f9810c7f277", "patch": "@@ -0,0 +1,12 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O2\" } */\n+\n+int\n+f1 (int x)\n+{\n+  if (x & 1)\n+    return 1;\n+  return x;\n+}\n+\n+/* { dg-final { scan-assembler \"tst\\t(x|w)\\[0-9\\]*.*1\" } } */"}, {"sha": "2b869c05c87ec120e1632a1420349a5eb98ff895", "filename": "gcc/testsuite/gcc.target/aarch64/tst_4.c", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7325d85abe7451e213f3aafea6938f9810c7f277/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Ftst_4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7325d85abe7451e213f3aafea6938f9810c7f277/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Ftst_4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Ftst_4.c?ref=7325d85abe7451e213f3aafea6938f9810c7f277", "patch": "@@ -0,0 +1,10 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O2\" } */\n+\n+int\n+f1 (long x)\n+{\n+   return ((short) x >= 0) ? x : 0;\n+}\n+\n+/* { dg-final { scan-assembler \"tst\\t(x|w)\\[0-9\\]*.*32768\\n\" } } */"}]}