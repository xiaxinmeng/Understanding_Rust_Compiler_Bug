{"sha": "cc5b8f3d568e95ce74e03d8d87ada71117a6c106", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2M1YjhmM2Q1NjhlOTVjZTc0ZTAzZDhkODdhZGE3MTExN2E2YzEwNg==", "commit": {"author": {"name": "Tamar Christina", "email": "tamar.christina@arm.com", "date": "2017-05-02T15:19:07Z"}, "committer": {"name": "Tamar Christina", "email": "tnfchris@gcc.gnu.org", "date": "2017-05-02T15:19:07Z"}, "message": "simplify-rtx.c (simplify_binary_operation_1): Add LSHIFTRT case.\n\ngcc/\n2017-04-27  Tamar Christina  <tamar.christina@arm.com>\n\n\t* simplify-rtx.c (simplify_binary_operation_1): Add LSHIFTRT case.\n\ngcc/testsuite/\n2017-04-27  Tamar Christina  <tamar.christina@arm.com>\n\n\t* gcc.dg/lsr-div1.c: New testcase.\n\nFrom-SVN: r247504", "tree": {"sha": "9466e3e211c6783f0f35e6a524d4b1e5772df60a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9466e3e211c6783f0f35e6a524d4b1e5772df60a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/cc5b8f3d568e95ce74e03d8d87ada71117a6c106", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cc5b8f3d568e95ce74e03d8d87ada71117a6c106", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cc5b8f3d568e95ce74e03d8d87ada71117a6c106", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cc5b8f3d568e95ce74e03d8d87ada71117a6c106/comments", "author": {"login": "TamarChristinaArm", "id": 48126768, "node_id": "MDQ6VXNlcjQ4MTI2NzY4", "avatar_url": "https://avatars.githubusercontent.com/u/48126768?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TamarChristinaArm", "html_url": "https://github.com/TamarChristinaArm", "followers_url": "https://api.github.com/users/TamarChristinaArm/followers", "following_url": "https://api.github.com/users/TamarChristinaArm/following{/other_user}", "gists_url": "https://api.github.com/users/TamarChristinaArm/gists{/gist_id}", "starred_url": "https://api.github.com/users/TamarChristinaArm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TamarChristinaArm/subscriptions", "organizations_url": "https://api.github.com/users/TamarChristinaArm/orgs", "repos_url": "https://api.github.com/users/TamarChristinaArm/repos", "events_url": "https://api.github.com/users/TamarChristinaArm/events{/privacy}", "received_events_url": "https://api.github.com/users/TamarChristinaArm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "c8429337386348018079e683ac3bfd35c51672d0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c8429337386348018079e683ac3bfd35c51672d0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c8429337386348018079e683ac3bfd35c51672d0"}], "stats": {"total": 77, "additions": 72, "deletions": 5}, "files": [{"sha": "00f21e71c5d1a2e9a1e036976e8ebf57de40dd36", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cc5b8f3d568e95ce74e03d8d87ada71117a6c106/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cc5b8f3d568e95ce74e03d8d87ada71117a6c106/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=cc5b8f3d568e95ce74e03d8d87ada71117a6c106", "patch": "@@ -1,3 +1,7 @@\n+2017-04-27  Tamar Christina  <tamar.christina@arm.com>\n+\n+\t* simplify-rtx.c (simplify_binary_operation_1): Add LSHIFTRT case.\n+\n 2017-05-02  Martin Liska  <mliska@suse.cz>\n \n \tPR lto/77954."}, {"sha": "ac85a564b10cf3a6ea16e7d21ef4fe74d86f47b1", "filename": "gcc/simplify-rtx.c", "status": "modified", "additions": 7, "deletions": 5, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cc5b8f3d568e95ce74e03d8d87ada71117a6c106/gcc%2Fsimplify-rtx.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cc5b8f3d568e95ce74e03d8d87ada71117a6c106/gcc%2Fsimplify-rtx.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fsimplify-rtx.c?ref=cc5b8f3d568e95ce74e03d8d87ada71117a6c106", "patch": "@@ -3345,19 +3345,21 @@ simplify_binary_operation_1 (enum rtx_code code, machine_mode mode,\n \t  && UINTVAL (trueop0) == GET_MODE_MASK (mode)\n \t  && ! side_effects_p (op1))\n \treturn op0;\n+\n+    canonicalize_shift:\n       /* Given:\n \t scalar modes M1, M2\n \t scalar constants c1, c2\n \t size (M2) > size (M1)\n \t c1 == size (M2) - size (M1)\n \t optimize:\n-\t (ashiftrt:M1 (subreg:M1 (lshiftrt:M2 (reg:M2) (const_int <c1>))\n+\t ([a|l]shiftrt:M1 (subreg:M1 (lshiftrt:M2 (reg:M2) (const_int <c1>))\n \t\t\t\t <low_part>)\n \t\t      (const_int <c2>))\n \t to:\n-\t (subreg:M1 (ashiftrt:M2 (reg:M2) (const_int <c1 + c2>))\n+\t (subreg:M1 ([a|l]shiftrt:M2 (reg:M2) (const_int <c1 + c2>))\n \t\t    <low_part>).  */\n-      if (code == ASHIFTRT\n+      if ((code == ASHIFTRT || code == LSHIFTRT)\n \t  && !VECTOR_MODE_P (mode)\n \t  && SUBREG_P (op0)\n \t  && CONST_INT_P (op1)\n@@ -3374,13 +3376,13 @@ simplify_binary_operation_1 (enum rtx_code code, machine_mode mode,\n \t  rtx tmp = GEN_INT (INTVAL (XEXP (SUBREG_REG (op0), 1))\n \t\t\t     + INTVAL (op1));\n \t  machine_mode inner_mode = GET_MODE (SUBREG_REG (op0));\n-\t  tmp = simplify_gen_binary (ASHIFTRT,\n+\t  tmp = simplify_gen_binary (code,\n \t\t\t\t     GET_MODE (SUBREG_REG (op0)),\n \t\t\t\t     XEXP (SUBREG_REG (op0), 0),\n \t\t\t\t     tmp);\n \t  return lowpart_subreg (mode, tmp, inner_mode);\n \t}\n-    canonicalize_shift:\n+\n       if (SHIFT_COUNT_TRUNCATED && CONST_INT_P (op1))\n \t{\n \t  val = INTVAL (op1) & (GET_MODE_PRECISION (mode) - 1);"}, {"sha": "759a6034898f4a019af8a74c5f6bc462434dbeca", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cc5b8f3d568e95ce74e03d8d87ada71117a6c106/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cc5b8f3d568e95ce74e03d8d87ada71117a6c106/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=cc5b8f3d568e95ce74e03d8d87ada71117a6c106", "patch": "@@ -1,3 +1,7 @@\n+2017-04-27  Tamar Christina  <tamar.christina@arm.com>\n+\n+\t* gcc.dg/lsr-div1.c: New testcase.\n+\n 2017-05-02  Sebastian Peryt  <sebastian.peryt@intel.com>\n \n \t* gcc.target/i386/avx512f-vaddsd-1.c (_mm_mask_add_sd)"}, {"sha": "962054d34d953b63c9736134b9ad147791a491d3", "filename": "gcc/testsuite/gcc.dg/lsr-div1.c", "status": "added", "additions": 57, "deletions": 0, "changes": 57, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cc5b8f3d568e95ce74e03d8d87ada71117a6c106/gcc%2Ftestsuite%2Fgcc.dg%2Flsr-div1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cc5b8f3d568e95ce74e03d8d87ada71117a6c106/gcc%2Ftestsuite%2Fgcc.dg%2Flsr-div1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Flsr-div1.c?ref=cc5b8f3d568e95ce74e03d8d87ada71117a6c106", "patch": "@@ -0,0 +1,57 @@\n+/* Test division by const int generates only one shift.  */\n+/* { dg-do run } */\n+/* { dg-options \"-O2 -fdump-rtl-combine-all\" } */\n+/* { dg-options \"-O2 -fdump-rtl-combine-all -mtune=cortex-a53\" { target aarch64*-*-* } } */\n+/* { dg-require-effective-target int32plus } */\n+\n+extern void abort (void);\n+\n+#define NOINLINE __attribute__((noinline))\n+\n+static NOINLINE int\n+f1 (unsigned int n)\n+{\n+  return n % 0x33;\n+}\n+\n+static NOINLINE int\n+f2 (unsigned int n)\n+{\n+  return n % 0x12;\n+}\n+\n+int\n+main ()\n+{\n+  int a = 0xaaaaaaaa;\n+  int b = 0x55555555;\n+  int c;\n+  c = f1 (a);\n+  if (c != 0x11)\n+    abort ();\n+  c = f1 (b);\n+  if (c != 0x22)\n+    abort ();\n+  c = f2 (a);\n+  if (c != 0xE)\n+    abort ();\n+  c = f2 (b);\n+  if (c != 0x7)\n+    abort ();\n+  return 0;\n+}\n+\n+/* Following replacement pattern of intger division by constant, GCC is expected\n+   to generate UMULL and (x)SHIFTRT.  This test checks that considering division\n+   by const 0x33, gcc generates a single LSHIFTRT by 37, instead of\n+   two - LSHIFTRT by 32 and LSHIFTRT by 5.  */\n+\n+/* { dg-final { scan-rtl-dump \"\\\\(set \\\\(subreg:DI \\\\(reg:SI\" \"combine\" { target aarch64*-*-* } } } */\n+/* { dg-final { scan-rtl-dump \"\\\\(lshiftrt:DI \\\\(reg:DI\" \"combine\" { target aarch64*-*-* } } } */\n+/* { dg-final { scan-rtl-dump \"\\\\(const_int 37 \" \"combine\" { target aarch64*-*-* } } } */\n+\n+/* Similarly, considering division by const 0x12, gcc generates a\n+   single LSHIFTRT by 34, instead of two - LSHIFTRT by 32 and LSHIFTRT by 2.  */\n+\n+/* { dg-final { scan-rtl-dump \"\\\\(const_int 34 \" \"combine\" { target aarch64*-*-* } } } */\n+"}]}