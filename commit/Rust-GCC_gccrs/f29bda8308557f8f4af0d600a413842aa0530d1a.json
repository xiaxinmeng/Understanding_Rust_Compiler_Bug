{"sha": "f29bda8308557f8f4af0d600a413842aa0530d1a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjI5YmRhODMwODU1N2Y4ZjRhZjBkNjAwYTQxMzg0MmFhMDUzMGQxYQ==", "commit": {"author": {"name": "Tobias Burnus", "email": "burnus@net-b.de", "date": "2011-11-25T16:26:47Z"}, "committer": {"name": "Tobias Burnus", "email": "burnus@gcc.gnu.org", "date": "2011-11-25T16:26:47Z"}, "message": "re PR fortran/50408 (ICE in transfer_expr)\n\n2011-11-25  Tobias Burnus  <burnus@net-b.de>\n\n        PR fortran/50408\n        * trans-decl.c (gfc_get_module_backend_decl): Also copy\n        ts.u.derived from the gsym if the ts.type is BT_CLASS.\n        (gfc_get_extern_function_decl): Copy also the backend_decl\n        for the symbol's ts.u.{derived,cl} from the gsym.\n        * trans-types.c (gfc_copy_dt_decls_ifequal): Directly\n        return if \"from\" and \"to\" are the same.\n\n2011-11-25  Tobias Burnus  <burnus@net-b.de>\n\n        PR fortran/50408\n        * gfortran.dg/whole_file_35.f90: New.\n\nFrom-SVN: r181725", "tree": {"sha": "c3e8d5893fa32c51d1e46b85f536c078a51acab9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c3e8d5893fa32c51d1e46b85f536c078a51acab9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f29bda8308557f8f4af0d600a413842aa0530d1a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f29bda8308557f8f4af0d600a413842aa0530d1a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f29bda8308557f8f4af0d600a413842aa0530d1a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f29bda8308557f8f4af0d600a413842aa0530d1a/comments", "author": {"login": "tob2", "id": 264461, "node_id": "MDQ6VXNlcjI2NDQ2MQ==", "avatar_url": "https://avatars.githubusercontent.com/u/264461?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tob2", "html_url": "https://github.com/tob2", "followers_url": "https://api.github.com/users/tob2/followers", "following_url": "https://api.github.com/users/tob2/following{/other_user}", "gists_url": "https://api.github.com/users/tob2/gists{/gist_id}", "starred_url": "https://api.github.com/users/tob2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tob2/subscriptions", "organizations_url": "https://api.github.com/users/tob2/orgs", "repos_url": "https://api.github.com/users/tob2/repos", "events_url": "https://api.github.com/users/tob2/events{/privacy}", "received_events_url": "https://api.github.com/users/tob2/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "8594f636ac2b823bcdd6e34afb4588013b330da7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8594f636ac2b823bcdd6e34afb4588013b330da7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8594f636ac2b823bcdd6e34afb4588013b330da7"}], "stats": {"total": 53, "additions": 52, "deletions": 1}, "files": [{"sha": "f0faca4b7f0fd6482804840b9454e60ce86b56c4", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f29bda8308557f8f4af0d600a413842aa0530d1a/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f29bda8308557f8f4af0d600a413842aa0530d1a/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=f29bda8308557f8f4af0d600a413842aa0530d1a", "patch": "@@ -1,3 +1,13 @@\n+2011-11-25  Tobias Burnus  <burnus@net-b.de>\n+\n+\tPR fortran/50408\n+\t* trans-decl.c (gfc_get_module_backend_decl): Also copy\n+\tts.u.derived from the gsym if the ts.type is BT_CLASS.\n+\t(gfc_get_extern_function_decl): Copy also the backend_decl\n+\tfor the symbol's ts.u.{derived,cl} from the gsym.\n+\t* trans-types.c (gfc_copy_dt_decls_ifequal): Directly\n+\treturn if \"from\" and \"to\" are the same.\n+\n 2011-11-25  Tobias Burnus  <burnus@net-b.de>\n \n \tPR fortran/51302"}, {"sha": "67bd3e233f0e6d52bd073d05714cb2158d3a7cfc", "filename": "gcc/fortran/trans-decl.c", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f29bda8308557f8f4af0d600a413842aa0530d1a/gcc%2Ffortran%2Ftrans-decl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f29bda8308557f8f4af0d600a413842aa0530d1a/gcc%2Ffortran%2Ftrans-decl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ftrans-decl.c?ref=f29bda8308557f8f4af0d600a413842aa0530d1a", "patch": "@@ -718,7 +718,7 @@ gfc_get_module_backend_decl (gfc_symbol *sym)\n \t}\n       else if (s->backend_decl)\n \t{\n-\t  if (sym->ts.type == BT_DERIVED)\n+\t  if (sym->ts.type == BT_DERIVED || sym->ts.type == BT_CLASS)\n \t    gfc_copy_dt_decls_ifequal (s->ts.u.derived, sym->ts.u.derived,\n \t\t\t\t       true);\n \t  else if (sym->ts.type == BT_CHARACTER)\n@@ -1670,6 +1670,11 @@ gfc_get_extern_function_decl (gfc_symbol * sym)\n       gfc_find_symbol (sym->name, gsym->ns, 0, &s);\n       if (s && s->backend_decl)\n \t{\n+\t  if (sym->ts.type == BT_DERIVED || sym->ts.type == BT_CLASS)\n+\t    gfc_copy_dt_decls_ifequal (s->ts.u.derived, sym->ts.u.derived,\n+\t\t\t\t       true);\n+\t  else if (sym->ts.type == BT_CHARACTER)\n+\t    sym->ts.u.cl->backend_decl = s->ts.u.cl->backend_decl;\n \t  sym->backend_decl = s->backend_decl;\n \t  return sym->backend_decl;\n \t}"}, {"sha": "d643c2e45b8d18778596426a5aa9344fd9034118", "filename": "gcc/fortran/trans-types.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f29bda8308557f8f4af0d600a413842aa0530d1a/gcc%2Ffortran%2Ftrans-types.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f29bda8308557f8f4af0d600a413842aa0530d1a/gcc%2Ffortran%2Ftrans-types.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ftrans-types.c?ref=f29bda8308557f8f4af0d600a413842aa0530d1a", "patch": "@@ -2188,6 +2188,9 @@ gfc_copy_dt_decls_ifequal (gfc_symbol *from, gfc_symbol *to,\n   gfc_component *to_cm;\n   gfc_component *from_cm;\n \n+  if (from == to)\n+    return 1;\n+\n   if (from->backend_decl == NULL\n \t|| !gfc_compare_derived_types (from, to))\n     return 0;"}, {"sha": "34d262f3427dfa1ae81d46d7854ece52ca5f9eb2", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f29bda8308557f8f4af0d600a413842aa0530d1a/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f29bda8308557f8f4af0d600a413842aa0530d1a/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=f29bda8308557f8f4af0d600a413842aa0530d1a", "patch": "@@ -1,3 +1,8 @@\n+2011-11-25  Tobias Burnus  <burnus@net-b.de>\n+\n+\tPR fortran/50408\n+\t* gfortran.dg/whole_file_35.f90: New.\n+\n 2011-11-25  Tobias Burnus  <burnus@net-b.de>\n \n \tPR fortran/51302"}, {"sha": "46a8865514563f61a63ad3fd2218d56b5023cdae", "filename": "gcc/testsuite/gfortran.dg/whole_file_35.f90", "status": "added", "additions": 28, "deletions": 0, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f29bda8308557f8f4af0d600a413842aa0530d1a/gcc%2Ftestsuite%2Fgfortran.dg%2Fwhole_file_35.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f29bda8308557f8f4af0d600a413842aa0530d1a/gcc%2Ftestsuite%2Fgfortran.dg%2Fwhole_file_35.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fwhole_file_35.f90?ref=f29bda8308557f8f4af0d600a413842aa0530d1a", "patch": "@@ -0,0 +1,28 @@\n+! { dg-do compile }\n+!\n+! PR fortran/50408\n+!\n+! Contributed by Vittorio Zecca\n+!\n+       module m\n+         type int\n+           integer  :: val\n+         end type int\n+         interface ichar\n+           module procedure uch\n+        end interface\n+       contains\n+         function uch (c)\n+           character (len=1), intent (in) :: c\n+           type (int)                     :: uch\n+           intrinsic ichar\n+           uch%val = 127 - ichar (c)\n+         end function uch \n+       end module m\n+\n+      program p\n+        use m\n+        print *,ichar('~') ! must print \"1\"\n+      end program p\n+\n+! { dg-final { cleanup-modules \"m\" } }"}]}