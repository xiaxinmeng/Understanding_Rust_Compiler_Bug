{"sha": "a8afd3ac1468d88711b8ca0496744c459811d27d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YThhZmQzYWMxNDY4ZDg4NzExYjhjYTA0OTY3NDRjNDU5ODExZDI3ZA==", "commit": {"author": {"name": "Richard Henderson", "email": "rth@redhat.com", "date": "2004-10-19T17:24:46Z"}, "committer": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "2004-10-19T17:24:46Z"}, "message": "re PR middle-end/17885 (gimplifing of volatile &a->)\n\n        PR middle-end/17885\n        * tree.c (recompute_tree_invarant_for_addr_expr): Always poll address\n        of INDIRECT_REF.\n\nFrom-SVN: r89280", "tree": {"sha": "f19d2e20ee8123aed347debb17ed4b5e94b0966a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f19d2e20ee8123aed347debb17ed4b5e94b0966a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a8afd3ac1468d88711b8ca0496744c459811d27d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a8afd3ac1468d88711b8ca0496744c459811d27d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a8afd3ac1468d88711b8ca0496744c459811d27d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a8afd3ac1468d88711b8ca0496744c459811d27d/comments", "author": null, "committer": null, "parents": [{"sha": "e61d7b781ecc1493975fdcf58ba28a34f4b5cc7d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e61d7b781ecc1493975fdcf58ba28a34f4b5cc7d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e61d7b781ecc1493975fdcf58ba28a34f4b5cc7d"}], "stats": {"total": 21, "additions": 12, "deletions": 9}, "files": [{"sha": "6bf70ad6a96c3c33413f3e790c2e170deb59d3ce", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a8afd3ac1468d88711b8ca0496744c459811d27d/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a8afd3ac1468d88711b8ca0496744c459811d27d/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=a8afd3ac1468d88711b8ca0496744c459811d27d", "patch": "@@ -1,3 +1,9 @@\n+2004-10-19  Richard Hendeson  <rth@redhat.com>\n+\n+\tPR middle-end/17885\n+\t* tree.c (recompute_tree_invarant_for_addr_expr): Always poll address\n+\tof INDIRECT_REF.\n+\n 2004-10-19  Kazu Hirata  <kazu@cs.umass.edu>\n \n \t* tree-cfg.c (thread_jumps): Use a do-while loop instead of a"}, {"sha": "e07bd4799087f269cfa3785f6bd88a36815e3d47", "filename": "gcc/tree.c", "status": "modified", "additions": 6, "deletions": 9, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a8afd3ac1468d88711b8ca0496744c459811d27d/gcc%2Ftree.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a8afd3ac1468d88711b8ca0496744c459811d27d/gcc%2Ftree.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree.c?ref=a8afd3ac1468d88711b8ca0496744c459811d27d", "patch": "@@ -2311,16 +2311,13 @@ do { tree _node = (NODE); \\\n     }\n \n   /* Now see what's inside.  If it's an INDIRECT_REF, copy our properties from\n-     it.  If it's a decl, it's invariant and constant if the decl is static.\n-     It's also invariant if it's a decl in the current function.  (Taking the\n-     address of a volatile variable is not volatile.)  If it's a constant,\n-     the address is both invariant and constant.  Otherwise it's neither.  */\n+     the address, since &(*a)->b is a form of addition.  If it's a decl, it's\n+     invariant and constant if the decl is static.  It's also invariant if it's\n+     a decl in the current function.  Taking the address of a volatile variable\n+     is not volatile.  If it's a constant, the address is both invariant and\n+     constant.  Otherwise it's neither.  */\n   if (TREE_CODE (node) == INDIRECT_REF)\n-    {\n-      /* If this is &((T*)0)->field, then this is a form of addition.  */\n-      if (TREE_CODE (TREE_OPERAND (node, 0)) != INTEGER_CST)\n-\tUPDATE_TITCSE (node);\n-    }\n+    UPDATE_TITCSE (TREE_OPERAND (node, 0));\n   else if (DECL_P (node))\n     {\n       if (staticp (node))"}]}