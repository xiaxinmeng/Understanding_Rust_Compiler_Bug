{"sha": "b6ca28e64b3f31a4fac50e506f63d947d9697ca0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjZjYTI4ZTY0YjNmMzFhNGZhYzUwZTUwNmY2M2Q5NDdkOTY5N2NhMA==", "commit": {"author": {"name": "Mark Mitchell", "email": "mark@codesourcery.com", "date": "2006-06-06T21:38:54Z"}, "committer": {"name": "Mark Mitchell", "email": "mmitchel@gcc.gnu.org", "date": "2006-06-06T21:38:54Z"}, "message": "re PR c++/27177 (ICE in build_simple_base_path, at cp/class.c:474)\n\n\tPR c++/27177\n\t* call.c (standard_conversion): Require that the derived type be\n\tcomplete when performing a derived-to-base conversion.\n\tPR c++/27177\n\t* g++.dg/expr/cast7.C: New test.\n\nFrom-SVN: r114448", "tree": {"sha": "bd2f3421ea002ee456b375edb294c66e22917bae", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/bd2f3421ea002ee456b375edb294c66e22917bae"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b6ca28e64b3f31a4fac50e506f63d947d9697ca0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b6ca28e64b3f31a4fac50e506f63d947d9697ca0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b6ca28e64b3f31a4fac50e506f63d947d9697ca0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b6ca28e64b3f31a4fac50e506f63d947d9697ca0/comments", "author": null, "committer": null, "parents": [{"sha": "6edf8a522985d30615ff15de817b1b47969dc5b9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6edf8a522985d30615ff15de817b1b47969dc5b9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6edf8a522985d30615ff15de817b1b47969dc5b9"}], "stats": {"total": 38, "additions": 37, "deletions": 1}, "files": [{"sha": "c63ad8390ef42fac69aee1e4f43740ca4fa1a79a", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b6ca28e64b3f31a4fac50e506f63d947d9697ca0/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b6ca28e64b3f31a4fac50e506f63d947d9697ca0/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=b6ca28e64b3f31a4fac50e506f63d947d9697ca0", "patch": "@@ -1,3 +1,9 @@\n+2006-06-06  Mark Mitchell  <mark@codesourcery.com>\n+\n+\tPR c++/27177\n+\t* call.c (standard_conversion): Require that the derived type be\n+\tcomplete when performing a derived-to-base conversion.\n+\n 2006-06-04  Mark Mitchell  <mark@codesourcery.com>\n \n \tPR c++/27819"}, {"sha": "db8dd219ba8525006c1040508e9558fda87e69ad", "filename": "gcc/cp/call.c", "status": "modified", "additions": 13, "deletions": 1, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b6ca28e64b3f31a4fac50e506f63d947d9697ca0/gcc%2Fcp%2Fcall.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b6ca28e64b3f31a4fac50e506f63d947d9697ca0/gcc%2Fcp%2Fcall.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcall.c?ref=b6ca28e64b3f31a4fac50e506f63d947d9697ca0", "patch": "@@ -727,7 +727,19 @@ standard_conversion (tree to, tree from, tree expr, bool c_cast_p,\n \t\t  that necessitates this conversion is ill-formed.\n \t\t  Therefore, we use DERIVED_FROM_P, and do not check\n \t\t  access or uniqueness.  */\n-\t       && DERIVED_FROM_P (TREE_TYPE (to), TREE_TYPE (from)))\n+\t       && DERIVED_FROM_P (TREE_TYPE (to), TREE_TYPE (from))\n+\t       /* If FROM is not yet complete, then we must be parsing\n+\t\t  the body of a class.  We know what's derived from\n+\t\t  what, but we can't actually perform a\n+\t\t  derived-to-base conversion.  For example, in:\n+\n+\t\t     struct D : public B { \n+                       static const int i = sizeof((B*)(D*)0);\n+                     };\n+\n+                  the D*-to-B* conversion is a reinterpret_cast, not a\n+\t\t  static_cast.  */\n+\t       && COMPLETE_TYPE_P (TREE_TYPE (from)))\n \t{\n \t  from =\n \t    cp_build_qualified_type (TREE_TYPE (to),"}, {"sha": "0f42204d4346929a19df07b166adbc2f0ead038f", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b6ca28e64b3f31a4fac50e506f63d947d9697ca0/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b6ca28e64b3f31a4fac50e506f63d947d9697ca0/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=b6ca28e64b3f31a4fac50e506f63d947d9697ca0", "patch": "@@ -1,3 +1,8 @@\n+2006-06-06  Mark Mitchell  <mark@codesourcery.com>\n+\n+\tPR c++/27177\n+\t* g++.dg/expr/cast7.C: New test.\n+\n 2006-06-06  Janis Johnson  <janis187@us.ibm.com>\n \n \t* lib/gcc-dg.exp (gcc-dg-test-1): Detect and report ICE."}, {"sha": "c948919e9450fa4a6ddd0a9baa1064ee8874680c", "filename": "gcc/testsuite/g++.dg/expr/cast7.C", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b6ca28e64b3f31a4fac50e506f63d947d9697ca0/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fexpr%2Fcast7.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b6ca28e64b3f31a4fac50e506f63d947d9697ca0/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fexpr%2Fcast7.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fexpr%2Fcast7.C?ref=b6ca28e64b3f31a4fac50e506f63d947d9697ca0", "patch": "@@ -0,0 +1,13 @@\n+// PR c++/27177\n+\n+struct X {};\n+\n+struct Y : virtual X {};\n+struct Z : virtual X {};\n+\n+struct A : Y, Z {};\n+\n+struct B : A\n+{\n+  static const int i = sizeof((Z*)(B*)0);\n+};"}]}