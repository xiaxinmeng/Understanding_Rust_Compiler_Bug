{"sha": "f0fbe57d54af9234f441f1332050ef36d0787653", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjBmYmU1N2Q1NGFmOTIzNGY0NDFmMTMzMjA1MGVmMzZkMDc4NzY1Mw==", "commit": {"author": {"name": "Nathan Sidwell", "email": "nathan@acm.org", "date": "2018-01-17T15:39:35Z"}, "committer": {"name": "Nathan Sidwell", "email": "nathan@gcc.gnu.org", "date": "2018-01-17T15:39:35Z"}, "message": "[C++/83739] bogus error tsubsting range for in generic lambda\n\nhttps://gcc.gnu.org/ml/gcc-patches/2018-01/msg01554.html\n\tPR c++/83739\n\t* pt.c (tsubst_expr) <case RANGE_FOR_STMT>: Rebuild a range_for if\n\tthis not a final instantiation.\n\n\tPR c++/83739\n\t* g++.dg/cpp1y/pr83739.C: New.\n\nFrom-SVN: r256795", "tree": {"sha": "5ef4ecb3766aa95801d7aaca21e21760deb9cd88", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5ef4ecb3766aa95801d7aaca21e21760deb9cd88"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f0fbe57d54af9234f441f1332050ef36d0787653", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f0fbe57d54af9234f441f1332050ef36d0787653", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f0fbe57d54af9234f441f1332050ef36d0787653", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f0fbe57d54af9234f441f1332050ef36d0787653/comments", "author": {"login": "urnathan", "id": 13103001, "node_id": "MDQ6VXNlcjEzMTAzMDAx", "avatar_url": "https://avatars.githubusercontent.com/u/13103001?v=4", "gravatar_id": "", "url": "https://api.github.com/users/urnathan", "html_url": "https://github.com/urnathan", "followers_url": "https://api.github.com/users/urnathan/followers", "following_url": "https://api.github.com/users/urnathan/following{/other_user}", "gists_url": "https://api.github.com/users/urnathan/gists{/gist_id}", "starred_url": "https://api.github.com/users/urnathan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/urnathan/subscriptions", "organizations_url": "https://api.github.com/users/urnathan/orgs", "repos_url": "https://api.github.com/users/urnathan/repos", "events_url": "https://api.github.com/users/urnathan/events{/privacy}", "received_events_url": "https://api.github.com/users/urnathan/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "c6d6367f848cfd8381aba41e035c5e7e873667c5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c6d6367f848cfd8381aba41e035c5e7e873667c5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c6d6367f848cfd8381aba41e035c5e7e873667c5"}], "stats": {"total": 63, "additions": 52, "deletions": 11}, "files": [{"sha": "9a48abab6af198889b77f21d94e29950edeb0093", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f0fbe57d54af9234f441f1332050ef36d0787653/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f0fbe57d54af9234f441f1332050ef36d0787653/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=f0fbe57d54af9234f441f1332050ef36d0787653", "patch": "@@ -1,3 +1,9 @@\n+2018-01-17  Nathan Sidwell  <nathan@acm.org>\n+\n+\tPR c++/83739\n+\t* pt.c (tsubst_expr) <case RANGE_FOR_STMT>: Rebuild a range_for if\n+\tthis not a final instantiation.\n+\n 2018-01-16  Jason Merrill  <jason@redhat.com>\n \n \tPR c++/83714 - ICE checking return in template."}, {"sha": "01778820793a4fa90b47a732487eafa8060b06ce", "filename": "gcc/cp/pt.c", "status": "modified", "additions": 25, "deletions": 11, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f0fbe57d54af9234f441f1332050ef36d0787653/gcc%2Fcp%2Fpt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f0fbe57d54af9234f441f1332050ef36d0787653/gcc%2Fcp%2Fpt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fpt.c?ref=f0fbe57d54af9234f441f1332050ef36d0787653", "patch": "@@ -16153,26 +16153,40 @@ tsubst_expr (tree t, tree args, tsubst_flags_t complain, tree in_decl,\n \n     case RANGE_FOR_STMT:\n       {\n+\t/* Construct another range_for, if this is not a final\n+\t   substitution (for inside inside a generic lambda of a\n+\t   template).  Otherwise convert to a regular for.  */\n         tree decl, expr;\n-        stmt = begin_for_stmt (NULL_TREE, NULL_TREE);\n+        stmt = (processing_template_decl\n+\t\t? begin_range_for_stmt (NULL_TREE, NULL_TREE)\n+\t\t: begin_for_stmt (NULL_TREE, NULL_TREE));\n         decl = RANGE_FOR_DECL (t);\n         decl = tsubst (decl, args, complain, in_decl);\n         maybe_push_decl (decl);\n         expr = RECUR (RANGE_FOR_EXPR (t));\n-\tconst unsigned short unroll\n-\t  = RANGE_FOR_UNROLL (t) ? tree_to_uhwi (RANGE_FOR_UNROLL (t)) : 0;\n+\n+\ttree decomp_first = NULL_TREE;\n+\tunsigned decomp_cnt = 0;\n \tif (VAR_P (decl) && DECL_DECOMPOSITION_P (decl))\n+\t  decl = tsubst_decomp_names (decl, RANGE_FOR_DECL (t), args,\n+\t\t\t\t      complain, in_decl,\n+\t\t\t\t      &decomp_first, &decomp_cnt);\n+\n+\tif (processing_template_decl)\n \t  {\n-\t    unsigned int cnt;\n-\t    tree first;\n-\t    decl = tsubst_decomp_names (decl, RANGE_FOR_DECL (t), args,\n-\t\t\t\t\tcomplain, in_decl, &first, &cnt);\n-\t    stmt = cp_convert_range_for (stmt, decl, expr, first, cnt,\n-\t\t\t\t\t RANGE_FOR_IVDEP (t), unroll);\n+\t    RANGE_FOR_IVDEP (stmt) = RANGE_FOR_IVDEP (t);\n+\t    RANGE_FOR_UNROLL (stmt) = RANGE_FOR_UNROLL (t);\n+\t    finish_range_for_decl (stmt, decl, expr);\n \t  }\n \telse\n-\t  stmt = cp_convert_range_for (stmt, decl, expr, NULL_TREE, 0,\n-\t\t\t\t       RANGE_FOR_IVDEP (t), unroll);\n+\t  {\n+\t    unsigned short unroll = (RANGE_FOR_UNROLL (t)\n+\t\t\t\t     ? tree_to_uhwi (RANGE_FOR_UNROLL (t)) : 0);\n+\t    stmt = cp_convert_range_for (stmt, decl, expr,\n+\t\t\t\t\t decomp_first, decomp_cnt,\n+\t\t\t\t\t RANGE_FOR_IVDEP (t), unroll);\n+\t  }\n+\n \tbool prev = note_iteration_stmt_body_start ();\n         RECUR (RANGE_FOR_BODY (t));\n \tnote_iteration_stmt_body_end (prev);"}, {"sha": "04a1ffcc8824a806320e18a7732c0d0383d1aeb8", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f0fbe57d54af9234f441f1332050ef36d0787653/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f0fbe57d54af9234f441f1332050ef36d0787653/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=f0fbe57d54af9234f441f1332050ef36d0787653", "patch": "@@ -1,3 +1,8 @@\n+2018-01-17  Nathan Sidwell  <nathan@acm.org>\n+\n+\tPR c++/83739\n+\t* g++.dg/cpp1y/pr83739.C: New.\n+\n 2018-01-17  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* gcc.target/visium/overflow8.c: Pass -fno-if-conversion."}, {"sha": "4761220c057c096981ccc1392b085d61c8d7b252", "filename": "gcc/testsuite/g++.dg/cpp1y/pr83739.C", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f0fbe57d54af9234f441f1332050ef36d0787653/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1y%2Fpr83739.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f0fbe57d54af9234f441f1332050ef36d0787653/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1y%2Fpr83739.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1y%2Fpr83739.C?ref=f0fbe57d54af9234f441f1332050ef36d0787653", "patch": "@@ -0,0 +1,16 @@\n+// { dg-do compile { target c++14 } }\n+\n+// PR 83739, deduced range-for in lambda in template\n+\n+template <bool> void f()\n+{\n+  int x[2];\n+  auto delegate = [](auto & foo)\n+  {\n+    for (auto bar : foo);\n+  };\n+  delegate(x);\n+}\n+int main() {\n+  f<true>();\n+}"}]}