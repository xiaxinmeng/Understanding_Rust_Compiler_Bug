{"sha": "4849c1c7f6cfc6725b886b6804442a3390232c69", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDg0OWMxYzdmNmNmYzY3MjViODg2YjY4MDQ0NDJhMzM5MDIzMmM2OQ==", "commit": {"author": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2016-02-09T17:43:48Z"}, "committer": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2016-02-09T17:43:48Z"}, "message": "i386.md (insv<mode>_1): Use gen_int_mode to truncate const_int operand 1 to QImode.\n\n\t* config/i386/i386.md (insv<mode>_1): Use gen_int_mode to\n\ttruncate const_int operand 1 to QImode.\n\nFrom-SVN: r233249", "tree": {"sha": "6731a40cec6e557668018b1a203b52088f414529", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6731a40cec6e557668018b1a203b52088f414529"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4849c1c7f6cfc6725b886b6804442a3390232c69", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4849c1c7f6cfc6725b886b6804442a3390232c69", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4849c1c7f6cfc6725b886b6804442a3390232c69", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4849c1c7f6cfc6725b886b6804442a3390232c69/comments", "author": null, "committer": null, "parents": [{"sha": "a864ad5ba2501dd2157fd2512ebf00b3d529f921", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a864ad5ba2501dd2157fd2512ebf00b3d529f921", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a864ad5ba2501dd2157fd2512ebf00b3d529f921"}], "stats": {"total": 15, "additions": 9, "deletions": 6}, "files": [{"sha": "bcb9e847220014f5d25fcecceef1692028182678", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 5, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4849c1c7f6cfc6725b886b6804442a3390232c69/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4849c1c7f6cfc6725b886b6804442a3390232c69/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=4849c1c7f6cfc6725b886b6804442a3390232c69", "patch": "@@ -1,3 +1,8 @@\n+2016-02-09  Uros Bizjak  <ubizjak@gmail.com>\n+\n+\t* config/i386/i386.md (insv<mode>_1): Use gen_int_mode to\n+\ttruncate const_int operand 1 to QImode.\n+\n 2016-02-09  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* gimple-ssa-backprop.c (optimize_phi): Do not replace an argument\n@@ -83,7 +88,7 @@\n \tcompare or adjust the segment length.\n \n 2016-02-08  Richard Biener  <rguenther@suse.de>\n-\tJeff Law  <law@redhat.com>\n+\t    Jeff Law  <law@redhat.com>\n \n \tPR target/68273\n \t* tree-ssanames.c (make_ssa_name_fn): Always use unqualified\n@@ -92,8 +97,7 @@\n 2016-02-08   Richard Biener  <rguenther@suse.de>\n \n \tPR rtl-optimization/69274\n-\t* ira.c (ira_setup_alts): Do not change recog_data.operand\n-\torder.\n+\t* ira.c (ira_setup_alts): Do not change recog_data.operand order.\n \n 2016-02-08  Jeff Law  <law@redhat.com>\n \n@@ -181,8 +185,7 @@\n 2016-02-05  Andreas Krebbel  <krebbel@linux.vnet.ibm.com>\n \n \tPR target/69625\n-\t* config/s390/s390.c (SAVE_SLOT_NONE, SAVE_SLOT_STACK): New\n-\tdefines.\n+\t* config/s390/s390.c (SAVE_SLOT_NONE, SAVE_SLOT_STACK): New defines.\n \t(s390_register_info_gprtofpr): Use new macros above.\n \t(s390_register_info_stdarg_fpr): Adjust max_fpr to better match\n \tits name."}, {"sha": "edde41a7ac51013200ead5f7c5fdf87d5255b533", "filename": "gcc/config/i386/i386.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4849c1c7f6cfc6725b886b6804442a3390232c69/gcc%2Fconfig%2Fi386%2Fi386.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4849c1c7f6cfc6725b886b6804442a3390232c69/gcc%2Fconfig%2Fi386%2Fi386.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.md?ref=4849c1c7f6cfc6725b886b6804442a3390232c69", "patch": "@@ -2883,7 +2883,7 @@\n   \"\"\n {\n   if (CONST_INT_P (operands[1]))\n-    operands[1] = simplify_gen_subreg (QImode, operands[1], <MODE>mode, 0);\n+    operands[1] = gen_int_mode (INTVAL (operands[1]), QImode);\n   return \"mov{b}\\t{%b1, %h0|%h0, %b1}\";\n }\n   [(set_attr \"isa\" \"*,nox64\")"}]}