{"sha": "0bbadf8bc35fb4d4d4206d1d8164695cec45c1c2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MGJiYWRmOGJjMzVmYjRkNGQ0MjA2ZDFkODE2NDY5NWNlYzQ1YzFjMg==", "commit": {"author": {"name": "Segher Boessenkool", "email": "segher@kernel.crashing.org", "date": "2018-09-25T23:42:28Z"}, "committer": {"name": "Segher Boessenkool", "email": "segher@gcc.gnu.org", "date": "2018-09-25T23:42:28Z"}, "message": "rs6000: Use set_attr_alternative in some places\n\nSome code is much neater if it uses set_attr_alternative than if it\ndoes everything by hand.  Change some patterns to use this shorthand.\n\n\n\t* config/rs6000/rs6000.md (*movcc_internal1): Use set_attr_alternative.\n\t(*call_indirect_nonlocal_sysv<mode>): Ditto.\n\t(*call_value_indirect_nonlocal_sysv<mode>): Ditto.\n\t(*sibcall_nonlocal_sysv<mode>): Ditto.\n\t(*sibcall_value_nonlocal_sysv<mode>): Ditto.\n\t(<bd>_<mode>): Ditto.\n\t(<bd>tf_<mode>): Ditto.\n\nFrom-SVN: r264588", "tree": {"sha": "0bbdf4830c58d3222a0e29e41d744f8c15bd5630", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0bbdf4830c58d3222a0e29e41d744f8c15bd5630"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0bbadf8bc35fb4d4d4206d1d8164695cec45c1c2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0bbadf8bc35fb4d4d4206d1d8164695cec45c1c2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0bbadf8bc35fb4d4d4206d1d8164695cec45c1c2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0bbadf8bc35fb4d4d4206d1d8164695cec45c1c2/comments", "author": {"login": "segher", "id": 417629, "node_id": "MDQ6VXNlcjQxNzYyOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/417629?v=4", "gravatar_id": "", "url": "https://api.github.com/users/segher", "html_url": "https://github.com/segher", "followers_url": "https://api.github.com/users/segher/followers", "following_url": "https://api.github.com/users/segher/following{/other_user}", "gists_url": "https://api.github.com/users/segher/gists{/gist_id}", "starred_url": "https://api.github.com/users/segher/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/segher/subscriptions", "organizations_url": "https://api.github.com/users/segher/orgs", "repos_url": "https://api.github.com/users/segher/repos", "events_url": "https://api.github.com/users/segher/events{/privacy}", "received_events_url": "https://api.github.com/users/segher/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "07a38de7ceed3080f6f95912624d7e01ae352b6d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/07a38de7ceed3080f6f95912624d7e01ae352b6d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/07a38de7ceed3080f6f95912624d7e01ae352b6d"}], "stats": {"total": 194, "additions": 89, "deletions": 105}, "files": [{"sha": "1b25c3eebf283ed8102ae1afc1cc07c4ebe8afb2", "filename": "gcc/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0bbadf8bc35fb4d4d4206d1d8164695cec45c1c2/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0bbadf8bc35fb4d4d4206d1d8164695cec45c1c2/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=0bbadf8bc35fb4d4d4206d1d8164695cec45c1c2", "patch": "@@ -1,3 +1,13 @@\n+2018-09-25  Segher Boessenkool  <segher@kernel.crashing.org>\n+\n+\t* config/rs6000/rs6000.md (*movcc_internal1): Use set_attr_alternative.\n+\t(*call_indirect_nonlocal_sysv<mode>): Ditto.\n+\t(*call_value_indirect_nonlocal_sysv<mode>): Ditto.\n+\t(*sibcall_nonlocal_sysv<mode>): Ditto.\n+\t(*sibcall_value_nonlocal_sysv<mode>): Ditto.\n+\t(<bd>_<mode>): Ditto.\n+\t(<bd>tf_<mode>): Ditto.\n+\n 2018-09-25  Segher Boessenkool  <segher@kernel.crashing.org>\n \n \t* config/rs6000/altivec.md (*altivec_mov<mode>): Write the output"}, {"sha": "bcabf4ddac05575612315340f0204b30fc71b31a", "filename": "gcc/config/rs6000/rs6000.md", "status": "modified", "additions": 79, "deletions": 105, "changes": 184, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0bbadf8bc35fb4d4d4206d1d8164695cec45c1c2/gcc%2Fconfig%2Frs6000%2Frs6000.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0bbadf8bc35fb4d4d4206d1d8164695cec45c1c2/gcc%2Fconfig%2Frs6000%2Frs6000.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.md?ref=0bbadf8bc35fb4d4d4206d1d8164695cec45c1c2", "patch": "@@ -7050,25 +7050,21 @@\n    mt%0 %1\n    lwz%U1%X1 %0,%1\n    stw%U0%X0 %1,%0\"\n-  [(set (attr \"type\")\n-     (cond [(eq_attr \"alternative\" \"0,3\")\n-\t\t(const_string \"cr_logical\")\n-\t    (eq_attr \"alternative\" \"1,2\")\n-\t\t(const_string \"mtcr\")\n-\t    (eq_attr \"alternative\" \"6,7\")\n-\t\t(const_string \"integer\")\n-\t    (eq_attr \"alternative\" \"8\")\n-\t\t(const_string \"mfjmpr\")\n-\t    (eq_attr \"alternative\" \"9\")\n-\t\t(const_string \"mtjmpr\")\n-\t    (eq_attr \"alternative\" \"10\")\n-\t\t(const_string \"load\")\n-\t    (eq_attr \"alternative\" \"11\")\n-\t\t(const_string \"store\")\n-\t    (match_test \"TARGET_MFCRF\")\n-\t\t(const_string \"mfcrf\")\n-\t   ]\n-\t(const_string \"mfcr\")))\n+  [(set_attr_alternative \"type\"\n+     [(const_string \"cr_logical\")\n+      (const_string \"mtcr\")\n+      (const_string \"mtcr\")\n+      (const_string \"cr_logical\")\n+      (if_then_else (match_test \"TARGET_MFCRF\")\n+\t\t    (const_string \"mfcrf\") (const_string \"mfcr\"))\n+      (if_then_else (match_test \"TARGET_MFCRF\")\n+\t\t    (const_string \"mfcrf\") (const_string \"mfcr\"))\n+      (const_string \"integer\")\n+      (const_string \"integer\")\n+      (const_string \"mfjmpr\")\n+      (const_string \"mtjmpr\")\n+      (const_string \"load\")\n+      (const_string \"store\")])\n    (set_attr \"length\" \"4,4,12,4,4,8,4,4,4,4,4,4\")])\n \f\n ;; For floating-point, we normally deal with the floating-point registers\n@@ -10431,22 +10427,17 @@\n     return \"crset 2\\;beq%T0l-\";\n }\n   [(set_attr \"type\" \"jmpreg,jmpreg,jmpreg,jmpreg\")\n-   (set (attr \"length\")\n-\t(cond [(and (eq (symbol_ref \"which_alternative\") (const_int 0))\n-\t\t    (eq (symbol_ref \"rs6000_speculate_indirect_jumps\")\n-\t\t\t(const_int 0)))\n-\t\t  (const_string \"8\")\n-\t       (and (eq (symbol_ref \"which_alternative\") (const_int 2))\n-\t\t    (ne (symbol_ref \"rs6000_speculate_indirect_jumps\")\n-\t\t\t(const_int 0)))\n-\t\t  (const_string \"8\")\n-\t       (and (eq (symbol_ref \"which_alternative\") (const_int 2))\n-\t\t    (eq (symbol_ref \"rs6000_speculate_indirect_jumps\")\n-\t\t\t(const_int 0)))\n-\t\t  (const_string \"12\")\n-\t       (eq (symbol_ref \"which_alternative\") (const_int 3))\n-\t\t  (const_string \"8\")]\n-\t      (const_string \"4\")))])\n+   (set_attr_alternative \"length\"\n+     [(if_then_else (eq (symbol_ref \"rs6000_speculate_indirect_jumps\")\n+\t\t\t(const_int 0))\n+\t\t    (const_string \"8\")\n+\t\t    (const_string \"4\"))\n+      (const_string \"4\")\n+      (if_then_else (eq (symbol_ref \"rs6000_speculate_indirect_jumps\")\n+\t\t\t(const_int 0))\n+\t\t    (const_string \"12\")\n+\t\t    (const_string \"8\"))\n+      (const_string \"8\")])])\n \n (define_insn_and_split \"*call_nonlocal_sysv<mode>\"\n   [(call (mem:SI (match_operand:P 0 \"symbol_ref_operand\" \"s,s\"))\n@@ -10538,22 +10529,17 @@\n     return \"crset 2\\;beq%T1l-\";\n }\n   [(set_attr \"type\" \"jmpreg,jmpreg,jmpreg,jmpreg\")\n-   (set (attr \"length\")\n-\t(cond [(and (eq (symbol_ref \"which_alternative\") (const_int 0))\n-\t\t    (eq (symbol_ref \"rs6000_speculate_indirect_jumps\")\n-\t\t\t(const_int 0)))\n-\t\t  (const_string \"8\")\n-\t       (and (eq (symbol_ref \"which_alternative\") (const_int 2))\n-\t\t    (ne (symbol_ref \"rs6000_speculate_indirect_jumps\")\n-\t\t\t(const_int 0)))\n-\t\t  (const_string \"8\")\n-\t       (and (eq (symbol_ref \"which_alternative\") (const_int 2))\n-\t\t    (eq (symbol_ref \"rs6000_speculate_indirect_jumps\")\n-\t\t\t(const_int 0)))\n-\t\t  (const_string \"12\")\n-\t       (eq (symbol_ref \"which_alternative\") (const_int 3))\n-\t\t  (const_string \"8\")]\n-\t      (const_string \"4\")))])\n+   (set_attr_alternative \"length\"\n+     [(if_then_else (eq (symbol_ref \"rs6000_speculate_indirect_jumps\")\n+\t\t\t(const_int 0))\n+\t\t    (const_string \"8\")\n+\t\t    (const_string \"4\"))\n+      (const_string \"4\")\n+      (if_then_else (eq (symbol_ref \"rs6000_speculate_indirect_jumps\")\n+\t\t\t(const_int 0))\n+\t\t    (const_string \"12\")\n+\t\t    (const_string \"8\"))\n+      (const_string \"8\")])])\n \n (define_insn_and_split \"*call_value_nonlocal_sysv<mode>\"\n   [(set (match_operand 0 \"\" \"\")\n@@ -10947,22 +10933,17 @@\n     return \"b %z0\";\n }\n   [(set_attr \"type\" \"branch\")\n-   (set (attr \"length\")\n-\t(cond [(eq (symbol_ref \"which_alternative\") (const_int 1))\n-\t\t  (const_string \"8\")\n-\t       (and (eq (symbol_ref \"which_alternative\") (const_int 2))\n-\t\t    (eq (symbol_ref \"rs6000_speculate_indirect_jumps\")\n-\t\t\t(const_int 0)))\n-\t\t  (const_string \"12\")\n-\t       (and (eq (symbol_ref \"which_alternative\") (const_int 3))\n-\t\t    (ne (symbol_ref \"rs6000_speculate_indirect_jumps\")\n-\t\t\t(const_int 0)))\n-\t\t  (const_string \"8\")\n-\t       (and (eq (symbol_ref \"which_alternative\") (const_int 3))\n-\t\t    (eq (symbol_ref \"rs6000_speculate_indirect_jumps\")\n-\t\t\t(const_int 0)))\n-\t\t  (const_string \"16\")]\n-\t      (const_string \"4\")))])\n+   (set_attr_alternative \"length\"\n+     [(const_string \"4\")\n+      (const_string \"8\")\n+      (if_then_else (eq (symbol_ref \"rs6000_speculate_indirect_jumps\")\n+\t\t\t(const_int 0))\n+\t\t    (const_string \"12\")\n+\t\t    (const_string \"4\"))\n+      (if_then_else (eq (symbol_ref \"rs6000_speculate_indirect_jumps\")\n+\t\t\t(const_int 0))\n+\t\t    (const_string \"16\")\n+\t\t    (const_string \"8\"))])])\n \n (define_insn \"*sibcall_value_nonlocal_sysv<mode>\"\n   [(set (match_operand 0 \"\" \"\")\n@@ -10997,22 +10978,17 @@\n     return \"b %z1\";\n }\n   [(set_attr \"type\" \"branch\")\n-   (set (attr \"length\")\n-\t(cond [(eq (symbol_ref \"which_alternative\") (const_int 1))\n-\t\t  (const_string \"8\")\n-\t       (and (eq (symbol_ref \"which_alternative\") (const_int 2))\n-\t\t    (eq (symbol_ref \"rs6000_speculate_indirect_jumps\")\n-\t\t\t(const_int 0)))\n-\t\t  (const_string \"12\")\n-\t       (and (eq (symbol_ref \"which_alternative\") (const_int 3))\n-\t\t    (ne (symbol_ref \"rs6000_speculate_indirect_jumps\")\n-\t\t\t(const_int 0)))\n-\t\t  (const_string \"8\")\n-\t       (and (eq (symbol_ref \"which_alternative\") (const_int 3))\n-\t\t    (eq (symbol_ref \"rs6000_speculate_indirect_jumps\")\n-\t\t\t(const_int 0)))\n-\t\t  (const_string \"16\")]\n-\t      (const_string \"4\")))])\n+   (set_attr_alternative \"length\"\n+     [(const_string \"4\")\n+      (const_string \"8\")\n+      (if_then_else (eq (symbol_ref \"rs6000_speculate_indirect_jumps\")\n+\t\t\t(const_int 0))\n+\t\t    (const_string \"12\")\n+\t\t    (const_string \"4\"))\n+      (if_then_else (eq (symbol_ref \"rs6000_speculate_indirect_jumps\")\n+\t\t\t(const_int 0))\n+\t\t    (const_string \"16\")\n+\t\t    (const_string \"8\"))])])\n \n ;; AIX ABI sibling call patterns.\n \n@@ -12645,17 +12621,16 @@\n     return \"<bd_neg> $+8\\;b %l0\";\n }\n   [(set_attr \"type\" \"branch\")\n-   (set (attr \"length\")\n-\t(cond [(eq (symbol_ref \"which_alternative\") (const_int 0))\n-\t\t  (if_then_else (and (ge (minus (match_dup 0) (pc))\n-\t\t\t\t\t (const_int -32768))\n-\t\t\t\t     (lt (minus (match_dup 0) (pc))\n-\t\t\t\t\t (const_int 32764)))\n-\t\t\t\t(const_int 4)\n-\t\t\t\t(const_int 8))\n-\t       (eq (symbol_ref \"which_alternative\") (const_int 1))\n-\t\t  (const_int 16)]\n-\t   (const_int 20)))])\n+   (set_attr_alternative \"length\"\n+     [(if_then_else (and (ge (minus (match_dup 0) (pc))\n+\t\t\t     (const_int -32768))\n+\t\t\t (lt (minus (match_dup 0) (pc))\n+\t\t\t     (const_int 32764)))\n+\t\t    (const_int 4)\n+\t\t    (const_int 8))\n+      (const_string \"16\")\n+      (const_string \"20\")\n+      (const_string \"20\")])])\n \n ;; Now the splitter if we could not allocate the CTR register\n (define_split\n@@ -12734,17 +12709,16 @@\n     }\n }\n   [(set_attr \"type\" \"branch\")\n-   (set (attr \"length\")\n-\t(cond [(eq (symbol_ref \"which_alternative\") (const_int 0))\n-\t\t  (if_then_else (and (ge (minus (match_dup 0) (pc))\n-\t\t\t\t\t (const_int -32768))\n-\t\t\t\t     (lt (minus (match_dup 0) (pc))\n-\t\t\t\t\t (const_int 32764)))\n-\t\t\t\t(const_int 4)\n-\t\t\t\t(const_int 8))\n-\t       (eq (symbol_ref \"which_alternative\") (const_int 1))\n-\t\t  (const_int 16)]\n-\t     (const_int 20)))])\n+   (set_attr_alternative \"length\"\n+     [(if_then_else (and (ge (minus (match_dup 0) (pc))\n+\t\t\t     (const_int -32768))\n+\t\t\t (lt (minus (match_dup 0) (pc))\n+\t\t\t     (const_int 32764)))\n+\t\t    (const_int 4)\n+\t\t    (const_int 8))\n+      (const_string \"16\")\n+      (const_string \"20\")\n+      (const_string \"20\")])])\n \n ;; Now the splitter if we could not allocate the CTR register\n (define_split"}]}