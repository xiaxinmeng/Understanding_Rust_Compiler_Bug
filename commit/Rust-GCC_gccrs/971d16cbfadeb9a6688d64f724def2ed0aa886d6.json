{"sha": "971d16cbfadeb9a6688d64f724def2ed0aa886d6", "node_id": "C_kwDOANBUbNoAKDk3MWQxNmNiZmFkZWI5YTY2ODhkNjRmNzI0ZGVmMmVkMGFhODg2ZDY", "commit": {"author": {"name": "Jakub Dupak", "email": "dev@jakubdupak.com", "date": "2022-11-06T20:21:34Z"}, "committer": {"name": "Arthur Cohen", "email": "arthur.cohen@embecosm.com", "date": "2023-02-21T11:36:46Z"}, "message": "gccrs: ast: Dump raw pointer type\n\ngcc/rust/ChangeLog:\n\n\t* ast/rust-ast-dump.cc (Dump::visit): Add missing RawPointer visitor.\n\nSigned-off-by: Jakub Dupak <dev@jakubdupak.com>", "tree": {"sha": "0ac47dad8afbe9db9f6d96afff34691841816ffc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0ac47dad8afbe9db9f6d96afff34691841816ffc"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/971d16cbfadeb9a6688d64f724def2ed0aa886d6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/971d16cbfadeb9a6688d64f724def2ed0aa886d6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/971d16cbfadeb9a6688d64f724def2ed0aa886d6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/971d16cbfadeb9a6688d64f724def2ed0aa886d6/comments", "author": {"login": "jdupak", "id": 22683640, "node_id": "MDQ6VXNlcjIyNjgzNjQw", "avatar_url": "https://avatars.githubusercontent.com/u/22683640?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jdupak", "html_url": "https://github.com/jdupak", "followers_url": "https://api.github.com/users/jdupak/followers", "following_url": "https://api.github.com/users/jdupak/following{/other_user}", "gists_url": "https://api.github.com/users/jdupak/gists{/gist_id}", "starred_url": "https://api.github.com/users/jdupak/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jdupak/subscriptions", "organizations_url": "https://api.github.com/users/jdupak/orgs", "repos_url": "https://api.github.com/users/jdupak/repos", "events_url": "https://api.github.com/users/jdupak/events{/privacy}", "received_events_url": "https://api.github.com/users/jdupak/received_events", "type": "User", "site_admin": false}, "committer": {"login": "CohenArthur", "id": 43524065, "node_id": "MDQ6VXNlcjQzNTI0MDY1", "avatar_url": "https://avatars.githubusercontent.com/u/43524065?v=4", "gravatar_id": "", "url": "https://api.github.com/users/CohenArthur", "html_url": "https://github.com/CohenArthur", "followers_url": "https://api.github.com/users/CohenArthur/followers", "following_url": "https://api.github.com/users/CohenArthur/following{/other_user}", "gists_url": "https://api.github.com/users/CohenArthur/gists{/gist_id}", "starred_url": "https://api.github.com/users/CohenArthur/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/CohenArthur/subscriptions", "organizations_url": "https://api.github.com/users/CohenArthur/orgs", "repos_url": "https://api.github.com/users/CohenArthur/repos", "events_url": "https://api.github.com/users/CohenArthur/events{/privacy}", "received_events_url": "https://api.github.com/users/CohenArthur/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "140a2aed7e1cecd162cc975b6d745db38b5d8d31", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/140a2aed7e1cecd162cc975b6d745db38b5d8d31", "html_url": "https://github.com/Rust-GCC/gccrs/commit/140a2aed7e1cecd162cc975b6d745db38b5d8d31"}], "stats": {"total": 200, "additions": 112, "deletions": 88}, "files": [{"sha": "e6d6e070709172f12e82d5b87c7ef428df1a7a90", "filename": "gcc/rust/ast/rust-ast-dump.cc", "status": "modified", "additions": 112, "deletions": 88, "changes": 200, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/971d16cbfadeb9a6688d64f724def2ed0aa886d6/gcc%2Frust%2Fast%2Frust-ast-dump.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/971d16cbfadeb9a6688d64f724def2ed0aa886d6/gcc%2Frust%2Fast%2Frust-ast-dump.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Fast%2Frust-ast-dump.cc?ref=971d16cbfadeb9a6688d64f724def2ed0aa886d6", "patch": "@@ -269,7 +269,7 @@ Dump::visit (DelimTokenTree &delim_tok_tree)\n }\n \n void\n-Dump::visit (AttrInputMetaItemContainer &input)\n+Dump::visit (AttrInputMetaItemContainer &)\n {}\n \n void\n@@ -311,7 +311,7 @@ Dump::visit (LifetimeParam &lifetime_param)\n }\n \n void\n-Dump::visit (ConstGenericParam &lifetime_param)\n+Dump::visit (ConstGenericParam &)\n {}\n \n // rust-path.h\n@@ -322,15 +322,15 @@ Dump::visit (PathInExpression &path)\n }\n \n void\n-Dump::visit (TypePathSegment &segment)\n+Dump::visit (TypePathSegment &)\n {}\n \n void\n-Dump::visit (TypePathSegmentGeneric &segment)\n+Dump::visit (TypePathSegmentGeneric &)\n {}\n \n void\n-Dump::visit (TypePathSegmentFunction &segment)\n+Dump::visit (TypePathSegmentFunction &)\n {}\n \n void\n@@ -346,7 +346,7 @@ Dump::visit (QualifiedPathInExpression &path)\n }\n \n void\n-Dump::visit (QualifiedPathInType &path)\n+Dump::visit (QualifiedPathInType &)\n {}\n \n // rust-expr.h\n@@ -357,15 +357,15 @@ Dump::visit (LiteralExpr &expr)\n }\n \n void\n-Dump::visit (AttrInputLiteral &attr_input)\n+Dump::visit (AttrInputLiteral &)\n {}\n \n void\n-Dump::visit (MetaItemLitExpr &meta_item)\n+Dump::visit (MetaItemLitExpr &)\n {}\n \n void\n-Dump::visit (MetaItemPathLit &meta_item)\n+Dump::visit (MetaItemPathLit &)\n {}\n \n void\n@@ -623,35 +623,35 @@ Dump::visit (ArrayIndexExpr &expr)\n }\n \n void\n-Dump::visit (TupleExpr &expr)\n+Dump::visit (TupleExpr &)\n {}\n \n void\n-Dump::visit (TupleIndexExpr &expr)\n+Dump::visit (TupleIndexExpr &)\n {}\n \n void\n-Dump::visit (StructExprStruct &expr)\n+Dump::visit (StructExprStruct &)\n {}\n \n void\n-Dump::visit (StructExprFieldIdentifier &field)\n+Dump::visit (StructExprFieldIdentifier &)\n {}\n \n void\n-Dump::visit (StructExprFieldIdentifierValue &field)\n+Dump::visit (StructExprFieldIdentifierValue &)\n {}\n \n void\n-Dump::visit (StructExprFieldIndexValue &field)\n+Dump::visit (StructExprFieldIndexValue &)\n {}\n \n void\n-Dump::visit (StructExprStructFields &expr)\n+Dump::visit (StructExprStructFields &)\n {}\n \n void\n-Dump::visit (StructExprStructBase &expr)\n+Dump::visit (StructExprStructBase &)\n {}\n \n void\n@@ -669,15 +669,15 @@ Dump::visit (CallExpr &expr)\n }\n \n void\n-Dump::visit (MethodCallExpr &expr)\n+Dump::visit (MethodCallExpr &)\n {}\n \n void\n-Dump::visit (FieldAccessExpr &expr)\n+Dump::visit (FieldAccessExpr &)\n {}\n \n void\n-Dump::visit (ClosureExprInner &expr)\n+Dump::visit (ClosureExprInner &)\n {}\n \n void\n@@ -696,15 +696,15 @@ Dump::visit (BlockExpr &expr)\n }\n \n void\n-Dump::visit (ClosureExprInnerTyped &expr)\n+Dump::visit (ClosureExprInnerTyped &)\n {}\n \n void\n-Dump::visit (ContinueExpr &expr)\n+Dump::visit (ContinueExpr &)\n {}\n \n void\n-Dump::visit (BreakExpr &expr)\n+Dump::visit (BreakExpr &)\n {}\n \n void\n@@ -730,7 +730,7 @@ Dump::visit (RangeToExpr &expr)\n }\n \n void\n-Dump::visit (RangeFullExpr &expr)\n+Dump::visit (RangeFullExpr &)\n {\n   stream << \"..\";\n }\n@@ -751,27 +751,27 @@ Dump::visit (RangeToInclExpr &expr)\n }\n \n void\n-Dump::visit (ReturnExpr &expr)\n+Dump::visit (ReturnExpr &)\n {}\n \n void\n-Dump::visit (UnsafeBlockExpr &expr)\n+Dump::visit (UnsafeBlockExpr &)\n {}\n \n void\n-Dump::visit (LoopExpr &expr)\n+Dump::visit (LoopExpr &)\n {}\n \n void\n-Dump::visit (WhileLoopExpr &expr)\n+Dump::visit (WhileLoopExpr &)\n {}\n \n void\n-Dump::visit (WhileLetLoopExpr &expr)\n+Dump::visit (WhileLetLoopExpr &)\n {}\n \n void\n-Dump::visit (ForLoopExpr &expr)\n+Dump::visit (ForLoopExpr &)\n {}\n \n void\n@@ -807,35 +807,35 @@ Dump::visit (IfExprConseqIf &expr)\n }\n \n void\n-Dump::visit (IfExprConseqIfLet &expr)\n+Dump::visit (IfExprConseqIfLet &)\n {}\n \n void\n-Dump::visit (IfLetExpr &expr)\n+Dump::visit (IfLetExpr &)\n {}\n \n void\n-Dump::visit (IfLetExprConseqElse &expr)\n+Dump::visit (IfLetExprConseqElse &)\n {}\n \n void\n-Dump::visit (IfLetExprConseqIf &expr)\n+Dump::visit (IfLetExprConseqIf &)\n {}\n \n void\n-Dump::visit (IfLetExprConseqIfLet &expr)\n+Dump::visit (IfLetExprConseqIfLet &)\n {}\n \n void\n-Dump::visit (MatchExpr &expr)\n+Dump::visit (MatchExpr &)\n {}\n \n void\n-Dump::visit (AwaitExpr &expr)\n+Dump::visit (AwaitExpr &)\n {}\n \n void\n-Dump::visit (AsyncBlockExpr &expr)\n+Dump::visit (AsyncBlockExpr &)\n {}\n \n // rust-item.h\n@@ -959,23 +959,23 @@ Dump::visit (Module &module)\n }\n \n void\n-Dump::visit (ExternCrate &crate)\n+Dump::visit (ExternCrate &)\n {}\n \n void\n-Dump::visit (UseTreeGlob &use_tree)\n+Dump::visit (UseTreeGlob &)\n {}\n \n void\n-Dump::visit (UseTreeList &use_tree)\n+Dump::visit (UseTreeList &)\n {}\n \n void\n-Dump::visit (UseTreeRebind &use_tree)\n+Dump::visit (UseTreeRebind &)\n {}\n \n void\n-Dump::visit (UseDeclaration &use_decl)\n+Dump::visit (UseDeclaration &)\n {}\n \n void\n@@ -1117,11 +1117,11 @@ Dump::visit (Union &union_item)\n }\n \n void\n-Dump::visit (ConstantItem &const_item)\n+Dump::visit (ConstantItem &)\n {}\n \n void\n-Dump::visit (StaticItem &static_item)\n+Dump::visit (StaticItem &)\n {}\n \n void\n@@ -1259,7 +1259,7 @@ Dump::visit (TraitImpl &impl)\n }\n \n void\n-Dump::visit (ExternalStaticItem &item)\n+Dump::visit (ExternalStaticItem &)\n {}\n \n void\n@@ -1386,36 +1386,36 @@ Dump::visit (MacroRulesDefinition &rules_def)\n }\n \n void\n-Dump::visit (MacroInvocation &macro_invoc)\n+Dump::visit (MacroInvocation &)\n {}\n \n void\n-Dump::visit (MetaItemPath &meta_item)\n+Dump::visit (MetaItemPath &)\n {}\n \n void\n-Dump::visit (MetaItemSeq &meta_item)\n+Dump::visit (MetaItemSeq &)\n {}\n \n void\n-Dump::visit (MetaWord &meta_item)\n+Dump::visit (MetaWord &)\n {}\n \n void\n-Dump::visit (MetaNameValueStr &meta_item)\n+Dump::visit (MetaNameValueStr &)\n {}\n \n void\n-Dump::visit (MetaListPaths &meta_item)\n+Dump::visit (MetaListPaths &)\n {}\n \n void\n-Dump::visit (MetaListNameValueStr &meta_item)\n+Dump::visit (MetaListNameValueStr &)\n {}\n \n // rust-pattern.h\n void\n-Dump::visit (LiteralPattern &pattern)\n+Dump::visit (LiteralPattern &)\n {}\n \n void\n@@ -1425,88 +1425,88 @@ Dump::visit (IdentifierPattern &pattern)\n }\n \n void\n-Dump::visit (WildcardPattern &pattern)\n+Dump::visit (WildcardPattern &)\n {}\n \n-// void Dump::visit(RangePatternBound& bound){}\n+// void Dump::visit(RangePatternBound& ){}\n \n void\n-Dump::visit (RangePatternBoundLiteral &bound)\n+Dump::visit (RangePatternBoundLiteral &)\n {}\n \n void\n-Dump::visit (RangePatternBoundPath &bound)\n+Dump::visit (RangePatternBoundPath &)\n {}\n \n void\n-Dump::visit (RangePatternBoundQualPath &bound)\n+Dump::visit (RangePatternBoundQualPath &)\n {}\n \n void\n-Dump::visit (RangePattern &pattern)\n+Dump::visit (RangePattern &)\n {}\n \n void\n-Dump::visit (ReferencePattern &pattern)\n+Dump::visit (ReferencePattern &)\n {}\n \n-// void Dump::visit(StructPatternField& field){}\n+// void Dump::visit(StructPatternField& ){}\n \n void\n-Dump::visit (StructPatternFieldTuplePat &field)\n+Dump::visit (StructPatternFieldTuplePat &)\n {}\n \n void\n-Dump::visit (StructPatternFieldIdentPat &field)\n+Dump::visit (StructPatternFieldIdentPat &)\n {}\n \n void\n-Dump::visit (StructPatternFieldIdent &field)\n+Dump::visit (StructPatternFieldIdent &)\n {}\n \n void\n-Dump::visit (StructPattern &pattern)\n+Dump::visit (StructPattern &)\n {}\n \n-// void Dump::visit(TupleStructItems& tuple_items){}\n+// void Dump::visit(TupleStructItems& ){}\n \n void\n-Dump::visit (TupleStructItemsNoRange &tuple_items)\n+Dump::visit (TupleStructItemsNoRange &)\n {}\n \n void\n-Dump::visit (TupleStructItemsRange &tuple_items)\n+Dump::visit (TupleStructItemsRange &)\n {}\n \n void\n-Dump::visit (TupleStructPattern &pattern)\n+Dump::visit (TupleStructPattern &)\n {}\n \n-// void Dump::visit(TuplePatternItems& tuple_items){}\n+// void Dump::visit(TuplePatternItems& ){}\n \n void\n-Dump::visit (TuplePatternItemsMultiple &tuple_items)\n+Dump::visit (TuplePatternItemsMultiple &)\n {}\n \n void\n-Dump::visit (TuplePatternItemsRanged &tuple_items)\n+Dump::visit (TuplePatternItemsRanged &)\n {}\n \n void\n-Dump::visit (TuplePattern &pattern)\n+Dump::visit (TuplePattern &)\n {}\n \n void\n-Dump::visit (GroupedPattern &pattern)\n+Dump::visit (GroupedPattern &)\n {}\n \n void\n-Dump::visit (SlicePattern &pattern)\n+Dump::visit (SlicePattern &)\n {}\n \n // rust-stmt.h\n void\n-Dump::visit (EmptyStmt &stmt)\n+Dump::visit (EmptyStmt &)\n {}\n \n void\n@@ -1560,40 +1560,64 @@ Dump::visit (TraitBound &bound)\n }\n \n void\n-Dump::visit (ImplTraitType &type)\n+Dump::visit (ImplTraitType &)\n {}\n \n void\n-Dump::visit (TraitObjectType &type)\n+Dump::visit (TraitObjectType &)\n {}\n \n void\n-Dump::visit (ParenthesisedType &type)\n+Dump::visit (ParenthesisedType &)\n {}\n \n void\n-Dump::visit (ImplTraitTypeOneBound &type)\n+Dump::visit (ImplTraitTypeOneBound &)\n {}\n \n void\n-Dump::visit (TraitObjectTypeOneBound &type)\n+Dump::visit (TraitObjectTypeOneBound &)\n {}\n \n void\n-Dump::visit (TupleType &type)\n+Dump::visit (TupleType &)\n {}\n \n void\n-Dump::visit (NeverType &type)\n+Dump::visit (NeverType &)\n {}\n \n void\n Dump::visit (RawPointerType &type)\n-{}\n+{\n+  // Syntax:\n+  //    * ( mut | const ) TypeNoBounds\n+\n+  if (type.get_pointer_type () == RawPointerType::MUT)\n+    stream << \"*mut \";\n+  else /* RawPointerType::CONST */\n+    stream << \"*const \";\n+\n+  visit (type.get_type_pointed_to ());\n+}\n \n void\n Dump::visit (ReferenceType &type)\n {\n+  // Syntax:\n+  //    & Lifetime? mut? TypeNoBounds\n+\n+  stream << '&';\n+\n+  if (type.has_lifetime ())\n+    {\n+      visit (type.get_lifetime ());\n+      stream << ' ';\n+    }\n+\n+  if (type.get_has_mut ())\n+    stream << \"mut \";\n+\n   visit (type.get_type_referenced ());\n }\n \n@@ -1606,7 +1630,7 @@ Dump::visit (ArrayType &type)\n   stream << '[';\n   visit (type.get_elem_type ());\n   stream << \"; \";\n-  visit(type.get_size_expr());\n+  visit (type.get_size_expr ());\n   stream << ']';\n }\n \n@@ -1622,13 +1646,13 @@ Dump::visit (SliceType &type)\n }\n \n void\n-Dump::visit (InferredType &type)\n+Dump::visit (InferredType &)\n {\n   stream << \"_\";\n }\n \n void\n-Dump::visit (BareFunctionType &type)\n+Dump::visit (BareFunctionType &)\n {}\n \n } // namespace AST"}]}