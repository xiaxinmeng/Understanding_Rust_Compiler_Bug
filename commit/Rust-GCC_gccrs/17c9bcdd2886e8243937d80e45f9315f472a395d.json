{"sha": "17c9bcdd2886e8243937d80e45f9315f472a395d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTdjOWJjZGQyODg2ZTgyNDM5MzdkODBlNDVmOTMxNWY0NzJhMzk1ZA==", "commit": {"author": {"name": "Hans-Peter Nilsson", "email": "hp@axis.com", "date": "2005-03-22T03:48:44Z"}, "committer": {"name": "Hans-Peter Nilsson", "email": "hp@gcc.gnu.org", "date": "2005-03-22T03:48:44Z"}, "message": "re PR rtl-optimization/20527 (Mishandling of postincrement causes bzip2 miscompilation.)\n\n\tPR rtl-optimization/20527\n\t* combine.c (can_combine_p) [AUTO_INC_DEC]: When INSN has an\n\tREG_INC note, test that the register also isn't mentioned in PRED\n\tor SUCC.\n\nFrom-SVN: r96853", "tree": {"sha": "49b678c9ba3b7d15c623064be8b7ac677529e32b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/49b678c9ba3b7d15c623064be8b7ac677529e32b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/17c9bcdd2886e8243937d80e45f9315f472a395d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/17c9bcdd2886e8243937d80e45f9315f472a395d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/17c9bcdd2886e8243937d80e45f9315f472a395d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/17c9bcdd2886e8243937d80e45f9315f472a395d/comments", "author": {"login": "hpataxisdotcom", "id": 80339731, "node_id": "MDQ6VXNlcjgwMzM5NzMx", "avatar_url": "https://avatars.githubusercontent.com/u/80339731?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hpataxisdotcom", "html_url": "https://github.com/hpataxisdotcom", "followers_url": "https://api.github.com/users/hpataxisdotcom/followers", "following_url": "https://api.github.com/users/hpataxisdotcom/following{/other_user}", "gists_url": "https://api.github.com/users/hpataxisdotcom/gists{/gist_id}", "starred_url": "https://api.github.com/users/hpataxisdotcom/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hpataxisdotcom/subscriptions", "organizations_url": "https://api.github.com/users/hpataxisdotcom/orgs", "repos_url": "https://api.github.com/users/hpataxisdotcom/repos", "events_url": "https://api.github.com/users/hpataxisdotcom/events{/privacy}", "received_events_url": "https://api.github.com/users/hpataxisdotcom/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "9d7cb254255ee037f4b0852c661a5a5212353d1c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9d7cb254255ee037f4b0852c661a5a5212353d1c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9d7cb254255ee037f4b0852c661a5a5212353d1c"}], "stats": {"total": 17, "additions": 14, "deletions": 3}, "files": [{"sha": "0bc1367cf34c9b4775afe5781d05976f8ba2f14c", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/17c9bcdd2886e8243937d80e45f9315f472a395d/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/17c9bcdd2886e8243937d80e45f9315f472a395d/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=17c9bcdd2886e8243937d80e45f9315f472a395d", "patch": "@@ -1,3 +1,10 @@\n+2005-03-22  Hans-Peter Nilsson  <hp@axis.com>\n+\n+\tPR rtl-optimization/20527\n+\t* combine.c (can_combine_p) [AUTO_INC_DEC]: When INSN has an\n+\tREG_INC note, test that the register also isn't mentioned in PRED\n+\tor SUCC.\n+\n 2005-03-22  Ben Elliston  <bje@au.ibm.com>\n \n \t* dwarf2out.c (dwarf_type_encoding_name): Remove unused prototype"}, {"sha": "297b58e914e050d132db5b3a12fb6d0118eb8475", "filename": "gcc/combine.c", "status": "modified", "additions": 7, "deletions": 3, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/17c9bcdd2886e8243937d80e45f9315f472a395d/gcc%2Fcombine.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/17c9bcdd2886e8243937d80e45f9315f472a395d/gcc%2Fcombine.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcombine.c?ref=17c9bcdd2886e8243937d80e45f9315f472a395d", "patch": "@@ -1314,9 +1314,9 @@ can_combine_p (rtx insn, rtx i3, rtx pred ATTRIBUTE_UNUSED, rtx succ,\n     if (INSN_P (p) && p != succ && volatile_insn_p (PATTERN (p)))\n       return 0;\n \n-  /* If INSN or I2 contains an autoincrement or autodecrement,\n-     make sure that register is not used between there and I3,\n-     and not already used in I3 either.\n+  /* If INSN contains an autoincrement or autodecrement, make sure that\n+     register is not used between there and I3, and not already used in\n+     I3 either.  Neither must it be used in PRED or SUCC, if they exist.\n      Also insist that I3 not be a jump; if it were one\n      and the incremented register were spilled, we would lose.  */\n \n@@ -1325,6 +1325,10 @@ can_combine_p (rtx insn, rtx i3, rtx pred ATTRIBUTE_UNUSED, rtx succ,\n     if (REG_NOTE_KIND (link) == REG_INC\n \t&& (JUMP_P (i3)\n \t    || reg_used_between_p (XEXP (link, 0), insn, i3)\n+\t    || (pred != NULL_RTX\n+\t\t&& reg_overlap_mentioned_p (XEXP (link, 0), PATTERN (pred)))\n+\t    || (succ != NULL_RTX\n+\t\t&& reg_overlap_mentioned_p (XEXP (link, 0), PATTERN (succ)))\n \t    || reg_overlap_mentioned_p (XEXP (link, 0), PATTERN (i3))))\n       return 0;\n #endif"}]}