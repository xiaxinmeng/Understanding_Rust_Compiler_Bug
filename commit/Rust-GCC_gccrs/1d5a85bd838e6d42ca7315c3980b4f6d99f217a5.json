{"sha": "1d5a85bd838e6d42ca7315c3980b4f6d99f217a5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWQ1YTg1YmQ4MzhlNmQ0MmNhNzMxNWMzOTgwYjRmNmQ5OWYyMTdhNQ==", "commit": {"author": {"name": "Robert Dewar", "email": "dewar@adacore.com", "date": "2009-08-17T10:09:55Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2009-08-17T10:09:55Z"}, "message": "a-caldel-vms.adb, [...]: Minor code reorganization (use conditional expressions).\n\n2009-08-17  Robert Dewar  <dewar@adacore.com>\n\n\t* a-caldel-vms.adb, a-calend-vms.adb, a-calfor.adb, a-cdlili.adb,\n\ta-chahan.adb, a-cidlli.adb, a-coinve.adb, a-comlin.adb: Minor code\n\treorganization (use conditional expressions).\n\nFrom-SVN: r150834", "tree": {"sha": "413a1ca4724e02b6fd1f64e1fe14e1d496bbffa8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/413a1ca4724e02b6fd1f64e1fe14e1d496bbffa8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1d5a85bd838e6d42ca7315c3980b4f6d99f217a5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1d5a85bd838e6d42ca7315c3980b4f6d99f217a5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1d5a85bd838e6d42ca7315c3980b4f6d99f217a5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1d5a85bd838e6d42ca7315c3980b4f6d99f217a5/comments", "author": null, "committer": null, "parents": [{"sha": "b01bf852a0c2a50f5511c00c553eaed3b894ef05", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b01bf852a0c2a50f5511c00c553eaed3b894ef05", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b01bf852a0c2a50f5511c00c553eaed3b894ef05"}], "stats": {"total": 101, "additions": 29, "deletions": 72}, "files": [{"sha": "2107917f803ebcec3cbdcaaabfe30fd965e17155", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1d5a85bd838e6d42ca7315c3980b4f6d99f217a5/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1d5a85bd838e6d42ca7315c3980b4f6d99f217a5/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=1d5a85bd838e6d42ca7315c3980b4f6d99f217a5", "patch": "@@ -1,3 +1,9 @@\n+2009-08-17  Robert Dewar  <dewar@adacore.com>\n+\n+\t* a-caldel-vms.adb, a-calend-vms.adb, a-calfor.adb, a-cdlili.adb,\n+\ta-chahan.adb, a-cidlli.adb, a-coinve.adb, a-comlin.adb: Minor code\n+\treorganization (use conditional expressions).\n+\n 2009-08-17  Robert Dewar  <dewar@adacore.com>\n \n \t* make.adb: Add ??? comment"}, {"sha": "128918a9ac6248c6750efad66f9cbf2100a2c786", "filename": "gcc/ada/a-caldel-vms.adb", "status": "modified", "additions": 3, "deletions": 8, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1d5a85bd838e6d42ca7315c3980b4f6d99f217a5/gcc%2Fada%2Fa-caldel-vms.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1d5a85bd838e6d42ca7315c3980b4f6d99f217a5/gcc%2Fada%2Fa-caldel-vms.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-caldel-vms.adb?ref=1d5a85bd838e6d42ca7315c3980b4f6d99f217a5", "patch": "@@ -7,7 +7,7 @@\n --                                  B o d y                                 --\n --                                                                          --\n --             Copyright (C) 1991-1994, Florida State University            --\n---                     Copyright (C) 1995-2008, AdaCore                     --\n+--                     Copyright (C) 1995-2009, AdaCore                     --\n --                                                                          --\n -- GNARL is free software; you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -79,15 +79,10 @@ package body Ada.Calendar.Delays is\n       --  A value distant enough to emulate \"end of time\" but which does not\n       --  cause overflow.\n \n-      Safe_T : Time;\n+      Safe_T : constant Time :=\n+                 (if T > Safe_Ada_High then Safe_Ada_High else T);\n \n    begin\n-      if T > Safe_Ada_High then\n-         Safe_T := Safe_Ada_High;\n-      else\n-         Safe_T := T;\n-      end if;\n-\n       return OSP.To_Duration (OSP.OS_Time (Safe_T), OSP.Absolute_Calendar);\n    end To_Duration;\n "}, {"sha": "3daf4e0c185cc010b78835c1427add61dee2b396", "filename": "gcc/ada/a-calend-vms.adb", "status": "modified", "additions": 5, "deletions": 10, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1d5a85bd838e6d42ca7315c3980b4f6d99f217a5/gcc%2Fada%2Fa-calend-vms.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1d5a85bd838e6d42ca7315c3980b4f6d99f217a5/gcc%2Fada%2Fa-calend-vms.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-calend-vms.adb?ref=1d5a85bd838e6d42ca7315c3980b4f6d99f217a5", "patch": "@@ -921,11 +921,7 @@ package body Ada.Calendar is\n \n          --  Step 3: Handle leap second occurrences\n \n-         if Leap_Sec then\n-            tm_sec := 60;\n-         else\n-            tm_sec := Second;\n-         end if;\n+         tm_Sec := (if Leap_Sec then 60 else Second);\n       end To_Struct_Tm;\n \n       ------------------\n@@ -1195,11 +1191,10 @@ package body Ada.Calendar is\n             else\n                --  Sub second extraction\n \n-               if Day_Secs > 0.0 then\n-                  Int_Day_Secs := Integer (Day_Secs - 0.5);\n-               else\n-                  Int_Day_Secs := Integer (Day_Secs);\n-               end if;\n+               Int_Day_Secs :=\n+                 (if Day_Secs > 0.0\n+                  then Integer (Day_Secs - 0.5)\n+                  else Integer (Day_Secs));\n \n                H  := Int_Day_Secs / 3_600;\n                Mi := (Int_Day_Secs / 60) mod 60;"}, {"sha": "b8e6222475dad46e22def19c2110eea25b4914b7", "filename": "gcc/ada/a-calfor.adb", "status": "modified", "additions": 3, "deletions": 16, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1d5a85bd838e6d42ca7315c3980b4f6d99f217a5/gcc%2Fada%2Fa-calfor.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1d5a85bd838e6d42ca7315c3980b4f6d99f217a5/gcc%2Fada%2Fa-calfor.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-calfor.adb?ref=1d5a85bd838e6d42ca7315c3980b4f6d99f217a5", "patch": "@@ -156,17 +156,8 @@ package body Ada.Calendar.Formatting is\n       --  Determine the two slice bounds for the result string depending on\n       --  whether the input is negative and whether fractions are requested.\n \n-      if Elapsed_Time < 0.0 then\n-         Low := 1;\n-      else\n-         Low := 2;\n-      end if;\n-\n-      if Include_Time_Fraction then\n-         High := 12;\n-      else\n-         High := 9;\n-      end if;\n+      Low  := (if Elapsed_Time < 0.0 then 1 else 2);\n+      High := (if Include_Time_Fraction then 12 else 9);\n \n       --  Prevent rounding when converting to natural\n \n@@ -457,11 +448,7 @@ package body Ada.Calendar.Formatting is\n          raise Constraint_Error;\n       end if;\n \n-      if Seconds = 0.0 then\n-         Secs := 0;\n-      else\n-         Secs := Natural (Seconds - 0.5);\n-      end if;\n+      Secs := (if Seconds = 0.0 then 0 else Natural (Seconds - 0.5));\n \n       Sub_Second := Second_Duration (Seconds - Day_Duration (Secs));\n       Hour       := Hour_Number (Secs / 3_600);"}, {"sha": "f9d7db832da1d941c4ceb0df58f5daa17fe6732f", "filename": "gcc/ada/a-cdlili.adb", "status": "modified", "additions": 2, "deletions": 8, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1d5a85bd838e6d42ca7315c3980b4f6d99f217a5/gcc%2Fada%2Fa-cdlili.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1d5a85bd838e6d42ca7315c3980b4f6d99f217a5/gcc%2Fada%2Fa-cdlili.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-cdlili.adb?ref=1d5a85bd838e6d42ca7315c3980b4f6d99f217a5", "patch": "@@ -561,15 +561,9 @@ package body Ada.Containers.Doubly_Linked_Lists is\n          ----------\n \n          procedure Sort (Front, Back : Node_Access) is\n-            Pivot : Node_Access;\n-\n+            Pivot : constant Node_Access :=\n+                      (if Front = null then Container.First else Front.Next);\n          begin\n-            if Front = null then\n-               Pivot := Container.First;\n-            else\n-               Pivot := Front.Next;\n-            end if;\n-\n             if Pivot /= Back then\n                Partition (Pivot, Back);\n                Sort (Front, Pivot);"}, {"sha": "61419b090ee87c02ab65fd2c55cb85f59d0e8dbc", "filename": "gcc/ada/a-chahan.adb", "status": "modified", "additions": 3, "deletions": 10, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1d5a85bd838e6d42ca7315c3980b4f6d99f217a5/gcc%2Fada%2Fa-chahan.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1d5a85bd838e6d42ca7315c3980b4f6d99f217a5/gcc%2Fada%2Fa-chahan.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-chahan.adb?ref=1d5a85bd838e6d42ca7315c3980b4f6d99f217a5", "patch": "@@ -457,11 +457,7 @@ package body Ada.Characters.Handling is\n       Substitute : ISO_646 := ' ') return ISO_646\n    is\n    begin\n-      if Item in ISO_646 then\n-         return Item;\n-      else\n-         return Substitute;\n-      end if;\n+      return (if Item in ISO_646 then Item else Substitute);\n    end To_ISO_646;\n \n    function To_ISO_646\n@@ -472,11 +468,8 @@ package body Ada.Characters.Handling is\n \n    begin\n       for J in Item'Range loop\n-         if Item (J) in ISO_646 then\n-            Result (J - (Item'First - 1)) := Item (J);\n-         else\n-            Result (J - (Item'First - 1)) := Substitute;\n-         end if;\n+         Result (J - (Item'First - 1)) :=\n+           (if Item (J) in ISO_646 then Item (J) else Substitute);\n       end loop;\n \n       return Result;"}, {"sha": "0d01502e05dcdfb8503261df04304ab42a232129", "filename": "gcc/ada/a-cidlli.adb", "status": "modified", "additions": 2, "deletions": 8, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1d5a85bd838e6d42ca7315c3980b4f6d99f217a5/gcc%2Fada%2Fa-cidlli.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1d5a85bd838e6d42ca7315c3980b4f6d99f217a5/gcc%2Fada%2Fa-cidlli.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-cidlli.adb?ref=1d5a85bd838e6d42ca7315c3980b4f6d99f217a5", "patch": "@@ -605,15 +605,9 @@ package body Ada.Containers.Indefinite_Doubly_Linked_Lists is\n          ----------\n \n          procedure Sort (Front, Back : Node_Access) is\n-            Pivot : Node_Access;\n-\n+            Pivot : constant Node_Access :=\n+                      (if Front = null then Container.First else Front.Next);\n          begin\n-            if Front = null then\n-               Pivot := Container.First;\n-            else\n-               Pivot := Front.Next;\n-            end if;\n-\n             if Pivot /= Back then\n                Partition (Pivot, Back);\n                Sort (Front, Pivot);"}, {"sha": "9169e086ebdfa2b050e76d08651116f183c57970", "filename": "gcc/ada/a-coinve.adb", "status": "modified", "additions": 2, "deletions": 10, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1d5a85bd838e6d42ca7315c3980b4f6d99f217a5/gcc%2Fada%2Fa-coinve.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1d5a85bd838e6d42ca7315c3980b4f6d99f217a5/gcc%2Fada%2Fa-coinve.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-coinve.adb?ref=1d5a85bd838e6d42ca7315c3980b4f6d99f217a5", "patch": "@@ -1171,7 +1171,6 @@ package body Ada.Containers.Indefinite_Vectors is\n            and then Index_Type'Last >= 0\n          then\n             CC := UInt (Index_Type'Last) + UInt (-Index_Type'First) + 1;\n-\n          else\n             CC := UInt (Int (Index_Type'Last) - First + 1);\n          end if;\n@@ -1610,7 +1609,6 @@ package body Ada.Containers.Indefinite_Vectors is\n            and then Index_Type'Last >= 0\n          then\n             CC := UInt (Index_Type'Last) + UInt (-Index_Type'First) + 1;\n-\n          else\n             CC := UInt (Int (Index_Type'Last) - First + 1);\n          end if;\n@@ -2283,15 +2281,9 @@ package body Ada.Containers.Indefinite_Vectors is\n       Item      : Element_Type;\n       Index     : Index_Type := Index_Type'Last) return Extended_Index\n    is\n-      Last : Index_Type'Base;\n-\n+      Last : constant Index_Type'Base :=\n+               (if Index > Container.Last then Container.Last else Index);\n    begin\n-      if Index > Container.Last then\n-         Last := Container.Last;\n-      else\n-         Last := Index;\n-      end if;\n-\n       for Indx in reverse Index_Type'First .. Last loop\n          if Container.Elements.EA (Indx) /= null\n            and then Container.Elements.EA (Indx).all = Item"}, {"sha": "b29693638d6e37cbe1d957b0f08780f18cafe066", "filename": "gcc/ada/a-comlin.adb", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1d5a85bd838e6d42ca7315c3980b4f6d99f217a5/gcc%2Fada%2Fa-comlin.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1d5a85bd838e6d42ca7315c3980b4f6d99f217a5/gcc%2Fada%2Fa-comlin.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-comlin.adb?ref=1d5a85bd838e6d42ca7315c3980b4f6d99f217a5", "patch": "@@ -29,7 +29,9 @@\n --                                                                          --\n ------------------------------------------------------------------------------\n \n-with System;                 use System;\n+pragma Compiler_Unit;\n+\n+with System; use System;\n \n package body Ada.Command_Line is\n \n@@ -71,7 +73,6 @@ package body Ada.Command_Line is\n \n       declare\n          Arg : aliased String (1 .. Len_Arg (Num));\n-\n       begin\n          Fill_Arg (Arg'Address, Num);\n          return Arg;"}]}