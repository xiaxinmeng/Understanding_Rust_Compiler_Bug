{"sha": "d1caf05a899bb57d1a96acd4869890991dedca20", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDFjYWYwNWE4OTliYjU3ZDFhOTZhY2Q0ODY5ODkwOTkxZGVkY2EyMA==", "commit": {"author": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2019-07-22T07:34:32Z"}, "committer": {"name": "Martin Liska", "email": "marxin@gcc.gnu.org", "date": "2019-07-22T07:34:32Z"}, "message": "Simplify LTO section format.\n\n2019-07-22  Martin Liska  <mliska@suse.cz>\n\n\t* lto-section-in.c (lto_get_section_data):\n\tUse new function get_compression.\n\t* lto-streamer-out.c (produce_lto_section): Use\n\tset_compression to encode compression algorithm.\n\t* lto-streamer.h (struct lto_section): Do not\n\tuse bitfields in the format.\n\nFrom-SVN: r273661", "tree": {"sha": "6b31f36652cb64bc8ed425701a2b3d8cab17aa82", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6b31f36652cb64bc8ed425701a2b3d8cab17aa82"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d1caf05a899bb57d1a96acd4869890991dedca20", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d1caf05a899bb57d1a96acd4869890991dedca20", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d1caf05a899bb57d1a96acd4869890991dedca20", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d1caf05a899bb57d1a96acd4869890991dedca20/comments", "author": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "2df89b66f1b397c9eacd2078eb6a9b52c2c4853f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2df89b66f1b397c9eacd2078eb6a9b52c2c4853f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2df89b66f1b397c9eacd2078eb6a9b52c2c4853f"}], "stats": {"total": 34, "additions": 29, "deletions": 5}, "files": [{"sha": "528432f7b8b5bd34da6194ce680765843d90ffe8", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d1caf05a899bb57d1a96acd4869890991dedca20/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d1caf05a899bb57d1a96acd4869890991dedca20/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=d1caf05a899bb57d1a96acd4869890991dedca20", "patch": "@@ -1,3 +1,12 @@\n+2019-07-22  Martin Liska  <mliska@suse.cz>\n+\n+\t* lto-section-in.c (lto_get_section_data):\n+\tUse new function get_compression.\n+\t* lto-streamer-out.c (produce_lto_section): Use\n+\tset_compression to encode compression algorithm.\n+\t* lto-streamer.h (struct lto_section): Do not\n+\tuse bitfields in the format.\n+\n 2019-07-22  Martin Liska  <mliska@suse.cz>\n \n \tPR driver/91172"}, {"sha": "0bdcf62b1deb669c13aeabc30a74911f571610df", "filename": "gcc/lto-section-in.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d1caf05a899bb57d1a96acd4869890991dedca20/gcc%2Flto-section-in.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d1caf05a899bb57d1a96acd4869890991dedca20/gcc%2Flto-section-in.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flto-section-in.c?ref=d1caf05a899bb57d1a96acd4869890991dedca20", "patch": "@@ -161,7 +161,8 @@ lto_get_section_data (struct lto_file_decl_data *file_data,\n \n       stream = lto_start_uncompression (lto_append_data, &buffer);\n       lto_uncompress_block (stream, data, *len);\n-      lto_end_uncompression (stream, file_data->lto_section_header.compression);\n+      lto_end_uncompression (stream,\n+\t\t\t     file_data->lto_section_header.get_compression ());\n \n       *len = buffer.length - header_length;\n       data = buffer.data + header_length;"}, {"sha": "e0881cf57af9b0ed660a49d08c980a1f43e82ee5", "filename": "gcc/lto-streamer-out.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d1caf05a899bb57d1a96acd4869890991dedca20/gcc%2Flto-streamer-out.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d1caf05a899bb57d1a96acd4869890991dedca20/gcc%2Flto-streamer-out.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flto-streamer-out.c?ref=d1caf05a899bb57d1a96acd4869890991dedca20", "patch": "@@ -2403,7 +2403,8 @@ produce_lto_section ()\n \n   bool slim_object = flag_generate_lto && !flag_fat_lto_objects;\n   lto_section s\n-    = { LTO_major_version, LTO_minor_version, slim_object, compression, 0 };\n+    = { LTO_major_version, LTO_minor_version, slim_object, 0 };\n+  s.set_compression (compression);\n   lto_write_data (&s, sizeof s);\n   lto_end_section ();\n   destroy_output_block (ob);"}, {"sha": "bf755a641413b4de3f20fbc911c577ed8f8f739c", "filename": "gcc/lto-streamer.h", "status": "modified", "additions": 16, "deletions": 3, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d1caf05a899bb57d1a96acd4869890991dedca20/gcc%2Flto-streamer.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d1caf05a899bb57d1a96acd4869890991dedca20/gcc%2Flto-streamer.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flto-streamer.h?ref=d1caf05a899bb57d1a96acd4869890991dedca20", "patch": "@@ -394,9 +394,22 @@ struct lto_section\n {\n   int16_t major_version;\n   int16_t minor_version;\n-  unsigned char slim_object: 1;\n-  lto_compression compression: 4;\n-  int32_t reserved0: 27;\n+  unsigned char slim_object;\n+\n+  /* Flags is a private field that is not defined publicly.  */\n+  uint16_t flags;\n+\n+  /* Set compression to FLAGS.  */\n+  inline void set_compression (lto_compression c)\n+  {\n+    flags = c;\n+  }\n+\n+  /* Get compression from FLAGS.  */\n+  inline lto_compression get_compression ()\n+  {\n+    return (lto_compression) flags;\n+  }\n };\n \n STATIC_ASSERT (sizeof (lto_section) == 8);"}]}