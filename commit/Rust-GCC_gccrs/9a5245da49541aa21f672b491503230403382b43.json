{"sha": "9a5245da49541aa21f672b491503230403382b43", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OWE1MjQ1ZGE0OTU0MWFhMjFmNjcyYjQ5MTUwMzIzMDQwMzM4MmI0Mw==", "commit": {"author": {"name": "Hristian Kirtchev", "email": "kirtchev@adacore.com", "date": "2019-07-10T09:02:03Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "pmderodat@gcc.gnu.org", "date": "2019-07-10T09:02:03Z"}, "message": "[Ada] Spelling mistakes in error messages\n\nThis patch updates certain error messages to eliminate spelling\nmistakes. No need for a test as this is a minor cosmetic fix.\n\n2019-07-10  Hristian Kirtchev  <kirtchev@adacore.com>\n\ngcc/ada/\n\n\t* sem_ch3.adb (Check_Nonoverridable_Aspects): Correct the\n\tspelling in certain error messages.\n\t(Check_Pragma_Implemented): Correct the spelling in certain\n\terror messages.\n\nFrom-SVN: r273341", "tree": {"sha": "f8fa9c0135d455840807b9f1403ecf2601f751d1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f8fa9c0135d455840807b9f1403ecf2601f751d1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9a5245da49541aa21f672b491503230403382b43", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9a5245da49541aa21f672b491503230403382b43", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9a5245da49541aa21f672b491503230403382b43", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9a5245da49541aa21f672b491503230403382b43/comments", "author": {"login": "kirtchev-adacore", "id": 60669983, "node_id": "MDQ6VXNlcjYwNjY5OTgz", "avatar_url": "https://avatars.githubusercontent.com/u/60669983?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kirtchev-adacore", "html_url": "https://github.com/kirtchev-adacore", "followers_url": "https://api.github.com/users/kirtchev-adacore/followers", "following_url": "https://api.github.com/users/kirtchev-adacore/following{/other_user}", "gists_url": "https://api.github.com/users/kirtchev-adacore/gists{/gist_id}", "starred_url": "https://api.github.com/users/kirtchev-adacore/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kirtchev-adacore/subscriptions", "organizations_url": "https://api.github.com/users/kirtchev-adacore/orgs", "repos_url": "https://api.github.com/users/kirtchev-adacore/repos", "events_url": "https://api.github.com/users/kirtchev-adacore/events{/privacy}", "received_events_url": "https://api.github.com/users/kirtchev-adacore/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "9ead6ee5c84ed6a5d670e0c5a46d0b1e9a926ca3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9ead6ee5c84ed6a5d670e0c5a46d0b1e9a926ca3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9ead6ee5c84ed6a5d670e0c5a46d0b1e9a926ca3"}], "stats": {"total": 41, "additions": 24, "deletions": 17}, "files": [{"sha": "4db8abc5fa2559fd1a9e1616c76d01bb877ec1b8", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9a5245da49541aa21f672b491503230403382b43/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9a5245da49541aa21f672b491503230403382b43/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=9a5245da49541aa21f672b491503230403382b43", "patch": "@@ -1,3 +1,10 @@\n+2019-07-10  Hristian Kirtchev  <kirtchev@adacore.com>\n+\n+\t* sem_ch3.adb (Check_Nonoverridable_Aspects): Correct the\n+\tspelling in certain error messages.\n+\t(Check_Pragma_Implemented): Correct the spelling in certain\n+\terror messages.\n+\n 2019-07-10  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* Makefile.rtl (GNATRTL_NONTASKING_OBJS): Add g-brapre."}, {"sha": "ae0a7bfde7f27d3549b0b7e8aa3253bc5da92de1", "filename": "gcc/ada/sem_ch3.adb", "status": "modified", "additions": 17, "deletions": 17, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9a5245da49541aa21f672b491503230403382b43/gcc%2Fada%2Fsem_ch3.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9a5245da49541aa21f672b491503230403382b43/gcc%2Fada%2Fsem_ch3.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch3.adb?ref=9a5245da49541aa21f672b491503230403382b43", "patch": "@@ -3009,14 +3009,15 @@ package body Sem_Ch3 is\n                --  is consistent with that of the parent.\n \n                declare\n-                  Par_Discr  : constant Entity_Id :=\n-                                Get_Reference_Discriminant (Par_Type);\n-                  Cur_Discr  : constant Entity_Id :=\n+                  Cur_Discr : constant Entity_Id :=\n                                 Get_Reference_Discriminant (Prev);\n+                  Par_Discr : constant Entity_Id :=\n+                                Get_Reference_Discriminant (Par_Type);\n \n                begin\n                   if Corresponding_Discriminant (Cur_Discr) /= Par_Discr then\n-                     Error_Msg_N (\"aspect incosistent with that of parent\", N);\n+                     Error_Msg_N\n+                       (\"aspect inconsistent with that of parent\", N);\n                   end if;\n \n                   --  Check that specification in partial view matches the\n@@ -3029,7 +3030,7 @@ package body Sem_Ch3 is\n                                Chars (Cur_Discr)\n                   then\n                      Error_Msg_N\n-                       (\"aspect incosistent with that of parent\", N);\n+                       (\"aspect inconsistent with that of parent\", N);\n                   end if;\n                end;\n             end if;\n@@ -10641,38 +10642,37 @@ package body Sem_Ch3 is\n             if Ekind (Contr_Typ) /= E_Protected_Type then\n                Error_Msg_Node_2 := Contr_Typ;\n                Error_Msg_NE\n-                 (\"interface subprogram & cannot be implemented by a \" &\n-                  \"primitive procedure of task type &\", Subp_Alias,\n-                  Iface_Alias);\n+                 (\"interface subprogram & cannot be implemented by a \"\n+                  & \"primitive procedure of task type &\",\n+                  Subp_Alias, Iface_Alias);\n \n             --  An interface subprogram whose implementation kind is By_\n             --  Protected_Procedure must be implemented by a procedure.\n \n             elsif Ekind (Impl_Subp) /= E_Procedure then\n                Error_Msg_Node_2 := Iface_Alias;\n                Error_Msg_NE\n-                 (\"type & must implement abstract subprogram & with a \" &\n-                  \"procedure\", Subp_Alias, Contr_Typ);\n+                 (\"type & must implement abstract subprogram & with a \"\n+                  & \"procedure\", Subp_Alias, Contr_Typ);\n \n             elsif Present (Get_Rep_Pragma (Impl_Subp, Name_Implemented))\n               and then Implementation_Kind (Impl_Subp) /= Impl_Kind\n             then\n                Error_Msg_Name_1 := Impl_Kind;\n                Error_Msg_N\n-                (\"overriding operation& must have synchronization%\",\n-                 Subp_Alias);\n+                 (\"overriding operation& must have synchronization%\",\n+                  Subp_Alias);\n             end if;\n \n          --  If primitive has Optional synchronization, overriding operation\n-         --  must match if it has an explicit synchronization..\n+         --  must match if it has an explicit synchronization.\n \n          elsif Present (Get_Rep_Pragma (Impl_Subp, Name_Implemented))\n            and then Implementation_Kind (Impl_Subp) /= Impl_Kind\n          then\n-               Error_Msg_Name_1 := Impl_Kind;\n-               Error_Msg_N\n-                (\"overriding operation& must have syncrhonization%\",\n-                 Subp_Alias);\n+            Error_Msg_Name_1 := Impl_Kind;\n+            Error_Msg_N\n+              (\"overriding operation& must have synchronization%\", Subp_Alias);\n          end if;\n       end Check_Pragma_Implemented;\n "}]}