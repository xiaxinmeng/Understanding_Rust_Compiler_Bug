{"sha": "72ec635f5a09e342acee7752e305be4b49023fee", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzJlYzYzNWY1YTA5ZTM0MmFjZWU3NzUyZTMwNWJlNGI0OTAyM2ZlZQ==", "commit": {"author": {"name": "Jeffrey A Law", "email": "law@cygnus.com", "date": "1998-01-17T21:50:05Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "1998-01-17T21:50:05Z"}, "message": "loop.c (find_and_verify_loops): When attempting to move insns from inside the loop outside the loop...\n\n        * loop.c (find_and_verify_loops): When attempting to move insns from\n        inside the loop outside the loop, create a BARRIER if no suitable\n        one was found.\n\nFrom-SVN: r17399", "tree": {"sha": "1f2c3ee528dc36eff6e8def1f98e791d86d5fa08", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1f2c3ee528dc36eff6e8def1f98e791d86d5fa08"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/72ec635f5a09e342acee7752e305be4b49023fee", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/72ec635f5a09e342acee7752e305be4b49023fee", "html_url": "https://github.com/Rust-GCC/gccrs/commit/72ec635f5a09e342acee7752e305be4b49023fee", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/72ec635f5a09e342acee7752e305be4b49023fee/comments", "author": null, "committer": null, "parents": [{"sha": "d9a3317a6806010861b6f640ca1cc76e2044fefc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d9a3317a6806010861b6f640ca1cc76e2044fefc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d9a3317a6806010861b6f640ca1cc76e2044fefc"}], "stats": {"total": 25, "additions": 25, "deletions": 0}, "files": [{"sha": "299297dba0978fa42569b05e2a6923a44a2afd9c", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/72ec635f5a09e342acee7752e305be4b49023fee/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/72ec635f5a09e342acee7752e305be4b49023fee/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=72ec635f5a09e342acee7752e305be4b49023fee", "patch": "@@ -23,6 +23,10 @@ Sat Jan 17 21:24:16 1998  David T. McWherter <dtm@waterw.com>\n \n Sat Jan 17 21:16:19 1998  Jeffrey A Law  (law@cygnus.com)\n \n+\t* loop.c (find_and_verify_loops): When attempting to move insns from\n+\tinside the loop outside the loop, create a BARRIER if no suitable\n+\tone was found.\n+\n \t* jump.c (jump_optimize): Remove Dec 17, 1997 chance in\n \tfavor of an equivalent change from gcc-2.8.\n "}, {"sha": "0fa3b4f0d2ba899c0d54369d482445f462f6e233", "filename": "gcc/loop.c", "status": "modified", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/72ec635f5a09e342acee7752e305be4b49023fee/gcc%2Floop.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/72ec635f5a09e342acee7752e305be4b49023fee/gcc%2Floop.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Floop.c?ref=72ec635f5a09e342acee7752e305be4b49023fee", "patch": "@@ -2531,6 +2531,27 @@ find_and_verify_loops (f)\n \t\t     {\n \t\t       rtx q, r;\n \n+\t\t       /* If no suitable BARRIER was found, create a suitable\n+\t\t\t  one before TARGET.  Since TARGET is a fall through\n+\t\t\t  path, we'll need to insert an jump around our block\n+\t\t\t  and a add a BARRIER before TARGET.\n+\n+\t\t\t  This creates an extra unconditional jump outside\n+\t\t\t  the loop.  However, the benefits of removing rarely\n+\t\t\t  executed instructions from inside the loop usually\n+\t\t\t  outweighs the cost of the extra unconditional jump\n+\t\t\t  outside the loop.  */\n+\t\t       if (loc == 0)\n+\t\t\t {\n+\t\t\t   rtx temp;\n+\n+\t\t           temp = gen_jump (JUMP_LABEL (insn));\n+\t\t\t   temp = emit_jump_insn_before (temp, target);\n+\t\t\t   JUMP_LABEL (temp) = JUMP_LABEL (insn);\n+\t\t\t   LABEL_NUSES (JUMP_LABEL (insn))++;\n+\t\t\t   loc = emit_barrier_before (target);\n+\t\t\t }\n+\n \t\t       /* Include the BARRIER after INSN and copy the\n \t\t\t  block after LOC.  */\n \t\t       new_label = squeeze_notes (new_label, NEXT_INSN (insn));"}]}