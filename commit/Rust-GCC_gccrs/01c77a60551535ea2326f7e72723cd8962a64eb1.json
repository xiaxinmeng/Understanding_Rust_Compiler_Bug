{"sha": "01c77a60551535ea2326f7e72723cd8962a64eb1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDFjNzdhNjA1NTE1MzVlYTIzMjZmN2U3MjcyM2NkODk2MmE2NGViMQ==", "commit": {"author": {"name": "Richard Guenther", "email": "rguenther@suse.de", "date": "2011-03-15T09:30:13Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2011-03-15T09:30:13Z"}, "message": "i386.c (ix86_emit_swdivsf): Implement more efficiently.\n\n2011-03-15  Richard Guenther  <rguenther@suse.de>\n\n\t* config/i386/i386.c (ix86_emit_swdivsf): Implement more\n\tefficiently.\n\nFrom-SVN: r170981", "tree": {"sha": "e093dc10c71dc20327bca26defccbb70ebe56a99", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e093dc10c71dc20327bca26defccbb70ebe56a99"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/01c77a60551535ea2326f7e72723cd8962a64eb1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/01c77a60551535ea2326f7e72723cd8962a64eb1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/01c77a60551535ea2326f7e72723cd8962a64eb1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/01c77a60551535ea2326f7e72723cd8962a64eb1/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "cc9ce9ffd6a66a6eb5a317d9c027228753d6e490", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cc9ce9ffd6a66a6eb5a317d9c027228753d6e490", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cc9ce9ffd6a66a6eb5a317d9c027228753d6e490"}], "stats": {"total": 39, "additions": 22, "deletions": 17}, "files": [{"sha": "aae2ea0d70f77a69a27f5052e9b66859f782b5a7", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/01c77a60551535ea2326f7e72723cd8962a64eb1/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/01c77a60551535ea2326f7e72723cd8962a64eb1/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=01c77a60551535ea2326f7e72723cd8962a64eb1", "patch": "@@ -1,3 +1,8 @@\n+2011-03-15  Richard Guenther  <rguenther@suse.de>\n+\n+\t* config/i386/i386.c (ix86_emit_swdivsf): Implement more\n+\tefficiently.\n+\n 2011-03-15  Alan Modra  <amodra@gmail.com>\n \n \tPR target/48032"}, {"sha": "1a3c97fa9486e5ff345fb70bda6fa71db31174d1", "filename": "gcc/config/i386/i386.c", "status": "modified", "additions": 17, "deletions": 17, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/01c77a60551535ea2326f7e72723cd8962a64eb1/gcc%2Fconfig%2Fi386%2Fi386.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/01c77a60551535ea2326f7e72723cd8962a64eb1/gcc%2Fconfig%2Fi386%2Fi386.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.c?ref=01c77a60551535ea2326f7e72723cd8962a64eb1", "patch": "@@ -31935,38 +31935,38 @@ void ix86_emit_i387_log1p (rtx op0, rtx op1)\n \n void ix86_emit_swdivsf (rtx res, rtx a, rtx b, enum machine_mode mode)\n {\n-  rtx x0, x1, e0, e1, two;\n+  rtx x0, x1, e0, e1;\n \n   x0 = gen_reg_rtx (mode);\n   e0 = gen_reg_rtx (mode);\n   e1 = gen_reg_rtx (mode);\n   x1 = gen_reg_rtx (mode);\n \n-  two = CONST_DOUBLE_FROM_REAL_VALUE (dconst2, SFmode);\n-\n-  if (VECTOR_MODE_P (mode))\n-    two = ix86_build_const_vector (mode, true, two);\n-\n-  two = force_reg (mode, two);\n-\n-  /* a / b = a * rcp(b) * (2.0 - b * rcp(b)) */\n+  /* a / b = a * ((rcp(b) + rcp(b)) - (b * rcp(b) * rcp (b))) */\n \n   /* x0 = rcp(b) estimate */\n   emit_insn (gen_rtx_SET (VOIDmode, x0,\n \t\t\t  gen_rtx_UNSPEC (mode, gen_rtvec (1, b),\n \t\t\t\t\t  UNSPEC_RCP)));\n-  /* e0 = x0 * a */\n+  /* e0 = x0 * b */\n   emit_insn (gen_rtx_SET (VOIDmode, e0,\n-\t\t\t  gen_rtx_MULT (mode, x0, a)));\n-  /* e1 = x0 * b */\n-  emit_insn (gen_rtx_SET (VOIDmode, e1,\n \t\t\t  gen_rtx_MULT (mode, x0, b)));\n-  /* x1 = 2. - e1 */\n+\n+  /* e0 = x0 * e0 */\n+  emit_insn (gen_rtx_SET (VOIDmode, e0,\n+\t\t\t  gen_rtx_MULT (mode, x0, e0)));\n+\n+  /* e1 = x0 + x0 */\n+  emit_insn (gen_rtx_SET (VOIDmode, e1,\n+\t\t\t  gen_rtx_PLUS (mode, x0, x0)));\n+\n+  /* x1 = e1 - e0 */\n   emit_insn (gen_rtx_SET (VOIDmode, x1,\n-\t\t\t  gen_rtx_MINUS (mode, two, e1)));\n-  /* res = e0 * x1 */\n+\t\t\t  gen_rtx_MINUS (mode, e1, e0)));\n+\n+  /* res = a * x1 */\n   emit_insn (gen_rtx_SET (VOIDmode, res,\n-\t\t\t  gen_rtx_MULT (mode, e0, x1)));\n+\t\t\t  gen_rtx_MULT (mode, a, x1)));\n }\n \n /* Output code to perform a Newton-Rhapson approximation of a"}]}