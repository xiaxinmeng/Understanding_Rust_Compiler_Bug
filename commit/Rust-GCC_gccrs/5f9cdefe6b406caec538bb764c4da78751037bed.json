{"sha": "5f9cdefe6b406caec538bb764c4da78751037bed", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWY5Y2RlZmU2YjQwNmNhZWM1MzhiYjc2NGM0ZGE3ODc1MTAzN2JlZA==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2011-08-05T14:24:40Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2011-08-05T14:24:40Z"}, "message": "[multiple changes]\n\n2011-08-05  Yannick Moy  <moy@adacore.com>\n\n\t* sem_ch12.adb (Analyze_Package_Instantiation,\n\tNeed_Subprogram_Instance_Body): do not generate instance bodies in ALFA\n\tmode.\n\n2011-08-05  Ed Schonberg  <schonberg@adacore.com>\n\n\t* sem_type.adb (Specific_Type): in an instance, the type-specific\n\toperand of an equality check that involves null may have a private\n\ttype. Use full view to determine legality of construct.\n\nFrom-SVN: r177444", "tree": {"sha": "5362e5f179fb36694f2348474e8ce0cb0d242fe6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5362e5f179fb36694f2348474e8ce0cb0d242fe6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5f9cdefe6b406caec538bb764c4da78751037bed", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5f9cdefe6b406caec538bb764c4da78751037bed", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5f9cdefe6b406caec538bb764c4da78751037bed", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5f9cdefe6b406caec538bb764c4da78751037bed/comments", "author": null, "committer": null, "parents": [{"sha": "822868aa564816380d7928a6ead984524abc8259", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/822868aa564816380d7928a6ead984524abc8259", "html_url": "https://github.com/Rust-GCC/gccrs/commit/822868aa564816380d7928a6ead984524abc8259"}], "stats": {"total": 25, "additions": 25, "deletions": 0}, "files": [{"sha": "e9b409c544f7a71229a8f7189e5f7086d4470f0c", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5f9cdefe6b406caec538bb764c4da78751037bed/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5f9cdefe6b406caec538bb764c4da78751037bed/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=5f9cdefe6b406caec538bb764c4da78751037bed", "patch": "@@ -1,3 +1,15 @@\n+2011-08-05  Yannick Moy  <moy@adacore.com>\n+\n+\t* sem_ch12.adb (Analyze_Package_Instantiation,\n+\tNeed_Subprogram_Instance_Body): do not generate instance bodies in ALFA\n+\tmode.\n+\n+2011-08-05  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* sem_type.adb (Specific_Type): in an instance, the type-specific\n+\toperand of an equality check that involves null may have a private\n+\ttype. Use full view to determine legality of construct.\n+\n 2011-08-05  Vincent Celier  <celier@adacore.com>\n \n \t* gnatcmd.adb (Get_Closure): Do not crash when it is not possible to"}, {"sha": "c25e2e9b02ada2604d9d470d2f7a144a071e5e7e", "filename": "gcc/ada/sem_ch12.adb", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5f9cdefe6b406caec538bb764c4da78751037bed/gcc%2Fada%2Fsem_ch12.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5f9cdefe6b406caec538bb764c4da78751037bed/gcc%2Fada%2Fsem_ch12.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch12.adb?ref=5f9cdefe6b406caec538bb764c4da78751037bed", "patch": "@@ -3400,6 +3400,7 @@ package body Sem_Ch12 is\n                            or else Might_Inline_Subp)\n                 and then not Is_Actual_Pack\n                 and then not Inline_Now\n+                and then not ALFA_Mode\n                 and then (Operating_Mode = Generate_Code\n                             or else (Operating_Mode = Check_Semantics\n                                       and then ASIS_Mode));\n@@ -4015,6 +4016,7 @@ package body Sem_Ch12 is\n       if (Is_In_Main_Unit (N)\n             or else Is_Inlined (Subp)\n             or else Is_Inlined (Alias (Subp)))\n+        and then not ALFA_Mode\n         and then (Operating_Mode = Generate_Code\n                     or else (Operating_Mode = Check_Semantics\n                                and then ASIS_Mode))"}, {"sha": "d11767b485930f7feadb42aa95eb7fe7be0cab68", "filename": "gcc/ada/sem_type.adb", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5f9cdefe6b406caec538bb764c4da78751037bed/gcc%2Fada%2Fsem_type.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5f9cdefe6b406caec538bb764c4da78751037bed/gcc%2Fada%2Fsem_type.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_type.adb?ref=5f9cdefe6b406caec538bb764c4da78751037bed", "patch": "@@ -3198,6 +3198,17 @@ package body Sem_Type is\n       then\n          return T1;\n \n+      --  In an instance, the specific type may have a private view. Use full\n+      --  view to check legality.\n+\n+      elsif T2 = Any_Access\n+        and then Is_Private_Type (T1)\n+        and then Present (Full_View (T1))\n+        and then Is_Access_Type (Full_View (T1))\n+        and then In_Instance\n+      then\n+         return T1;\n+\n       elsif T2 = Any_Composite\n         and then Is_Aggregate_Type (T1)\n       then"}]}