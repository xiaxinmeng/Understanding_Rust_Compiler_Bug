{"sha": "11543b27fe16d81ca5483ecb98ec7a5b2426e0c0", "node_id": "C_kwDOANBUbNoAKDExNTQzYjI3ZmUxNmQ4MWNhNTQ4M2VjYjk4ZWM3YTViMjQyNmUwYzA", "commit": {"author": {"name": "Richard Purdie", "email": "richard.purdie@linuxfoundation.org", "date": "2022-11-18T20:13:50Z"}, "committer": {"name": "Jeff Law", "email": "jlaw@ventanamicro.com", "date": "2022-11-18T20:13:50Z"}, "message": "libcpp: Avoid remapping filenames within directives\n\nCode such as:\n\n #include __FILE__\n\ncan interact poorly with the *-prefix-map options when cross compiling. In\ngeneral you're after to remap filenames for use in target context but the\nlocal paths should be used to find include files at compile time. Ingoring\nfilename remapping for directives allows avoiding such failures.\n\nFix this to improve such usage and then document this against file-prefix-map\n(referenced by the other *-prefix-map options) to make the behaviour clear\nand defined.\n\nlibcpp/ChangeLog:\n\n\t* macro.cc (_cpp_builtin_macro_text): Don't remap filenames within\n\tdirectives.\n\ngcc/ChangeLog:\n\n\t* doc/invoke.texi: Document prefix-maps don't affect directives.", "tree": {"sha": "23cf7c6e67f1321b7000b1e75783b330f81baea5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/23cf7c6e67f1321b7000b1e75783b330f81baea5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/11543b27fe16d81ca5483ecb98ec7a5b2426e0c0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/11543b27fe16d81ca5483ecb98ec7a5b2426e0c0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/11543b27fe16d81ca5483ecb98ec7a5b2426e0c0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/11543b27fe16d81ca5483ecb98ec7a5b2426e0c0/comments", "author": {"login": "rpurdie", "id": 1184070, "node_id": "MDQ6VXNlcjExODQwNzA=", "avatar_url": "https://avatars.githubusercontent.com/u/1184070?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rpurdie", "html_url": "https://github.com/rpurdie", "followers_url": "https://api.github.com/users/rpurdie/followers", "following_url": "https://api.github.com/users/rpurdie/following{/other_user}", "gists_url": "https://api.github.com/users/rpurdie/gists{/gist_id}", "starred_url": "https://api.github.com/users/rpurdie/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rpurdie/subscriptions", "organizations_url": "https://api.github.com/users/rpurdie/orgs", "repos_url": "https://api.github.com/users/rpurdie/repos", "events_url": "https://api.github.com/users/rpurdie/events{/privacy}", "received_events_url": "https://api.github.com/users/rpurdie/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "59cc4da605e5cb8e31e9f1d54ef2b5ba47fc8f88", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/59cc4da605e5cb8e31e9f1d54ef2b5ba47fc8f88", "html_url": "https://github.com/Rust-GCC/gccrs/commit/59cc4da605e5cb8e31e9f1d54ef2b5ba47fc8f88"}], "stats": {"total": 5, "additions": 3, "deletions": 2}, "files": [{"sha": "0f6a1833ef1ed254c0cbb25a072521d87f47385e", "filename": "gcc/doc/invoke.texi", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/11543b27fe16d81ca5483ecb98ec7a5b2426e0c0/gcc%2Fdoc%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/11543b27fe16d81ca5483ecb98ec7a5b2426e0c0/gcc%2Fdoc%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finvoke.texi?ref=11543b27fe16d81ca5483ecb98ec7a5b2426e0c0", "patch": "@@ -2201,7 +2201,8 @@ any references to them in the result of the compilation as if the\n files resided in directory @file{@var{new}} instead.  Specifying this\n option is equivalent to specifying all the individual\n @option{-f*-prefix-map} options.  This can be used to make reproducible\n-builds that are location independent.  See also\n+builds that are location independent.  Directories referenced by\n+directives are not affected by these options. See also\n @option{-fmacro-prefix-map}, @option{-fdebug-prefix-map} and\n @option{-fprofile-prefix-map}.\n "}, {"sha": "7d5a0d0fd2e7a83b92f8a1b3181cc9827fd7e978", "filename": "libcpp/macro.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/11543b27fe16d81ca5483ecb98ec7a5b2426e0c0/libcpp%2Fmacro.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/11543b27fe16d81ca5483ecb98ec7a5b2426e0c0/libcpp%2Fmacro.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libcpp%2Fmacro.cc?ref=11543b27fe16d81ca5483ecb98ec7a5b2426e0c0", "patch": "@@ -563,7 +563,7 @@ _cpp_builtin_macro_text (cpp_reader *pfile, cpp_hashnode *node,\n \t    if (!name)\n \t      abort ();\n \t  }\n-\tif (pfile->cb.remap_filename)\n+\tif (pfile->cb.remap_filename && !pfile->state.in_directive)\n \t  name = pfile->cb.remap_filename (name);\n \tlen = strlen (name);\n \tbuf = _cpp_unaligned_alloc (pfile, len * 2 + 3);"}]}