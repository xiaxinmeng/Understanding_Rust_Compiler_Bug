{"sha": "6cc30cb4ff182583ffbebe9819973b5b693322fd", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmNjMzBjYjRmZjE4MjU4M2ZmYmViZTk4MTk5NzNiNWI2OTMzMjJmZA==", "commit": {"author": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2017-08-30T12:38:31Z"}, "committer": {"name": "Martin Liska", "email": "marxin@gcc.gnu.org", "date": "2017-08-30T12:38:31Z"}, "message": "Fix IPA ICF with ASM statements (PR inline-asm/82001).\n\n2017-08-30  Martin Liska  <mliska@suse.cz>\n\n\tPR inline-asm/82001\n\t* ipa-icf-gimple.c (func_checker::compare_tree_list_operand):\n\tRename to ...\n\t(func_checker::compare_asm_inputs_outputs): ... this function.\n\t(func_checker::compare_gimple_asm): Use the function to compare\n\talso ASM constrains.\n\t* ipa-icf-gimple.h: Rename the function.\n2017-08-30  Martin Liska  <mliska@suse.cz>\n\n\tPR inline-asm/82001\n\t* gcc.dg/ipa/pr82001.c: New test.\n\nFrom-SVN: r251530", "tree": {"sha": "7aa4046e7e1ba187d40f28ab3b802965c1bb0c48", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7aa4046e7e1ba187d40f28ab3b802965c1bb0c48"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6cc30cb4ff182583ffbebe9819973b5b693322fd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6cc30cb4ff182583ffbebe9819973b5b693322fd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6cc30cb4ff182583ffbebe9819973b5b693322fd", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6cc30cb4ff182583ffbebe9819973b5b693322fd/comments", "author": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "357b7604e55516bd3e1f44d1670d2248478a9b57", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/357b7604e55516bd3e1f44d1670d2248478a9b57", "html_url": "https://github.com/Rust-GCC/gccrs/commit/357b7604e55516bd3e1f44d1670d2248478a9b57"}], "stats": {"total": 61, "additions": 52, "deletions": 9}, "files": [{"sha": "006a039c8b2164bb249e0bf66968e2669a2e2c5f", "filename": "gcc/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6cc30cb4ff182583ffbebe9819973b5b693322fd/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6cc30cb4ff182583ffbebe9819973b5b693322fd/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=6cc30cb4ff182583ffbebe9819973b5b693322fd", "patch": "@@ -1,3 +1,13 @@\n+2017-08-30  Martin Liska  <mliska@suse.cz>\n+\n+\tPR inline-asm/82001\n+\t* ipa-icf-gimple.c (func_checker::compare_tree_list_operand):\n+\tRename to ...\n+\t(func_checker::compare_asm_inputs_outputs): ... this function.\n+\t(func_checker::compare_gimple_asm): Use the function to compare\n+\talso ASM constrains.\n+\t* ipa-icf-gimple.h: Rename the function.\n+\n 2017-08-30  Richard Sandiford  <richard.sandiford@linaro.org>\n \t    Alan Hayward  <alan.hayward@arm.com>\n \t    David Sherwood  <david.sherwood@arm.com>"}, {"sha": "b40dd8653b4d5b2a3e482e3b124bbd995c0472be", "filename": "gcc/ipa-icf-gimple.c", "status": "modified", "additions": 13, "deletions": 6, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6cc30cb4ff182583ffbebe9819973b5b693322fd/gcc%2Fipa-icf-gimple.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6cc30cb4ff182583ffbebe9819973b5b693322fd/gcc%2Fipa-icf-gimple.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fipa-icf-gimple.c?ref=6cc30cb4ff182583ffbebe9819973b5b693322fd", "patch": "@@ -543,11 +543,8 @@ func_checker::compare_operand (tree t1, tree t2)\n     }\n }\n \n-/* Compares two tree list operands T1 and T2 and returns true if these\n-   two trees are semantically equivalent.  */\n-\n bool\n-func_checker::compare_tree_list_operand (tree t1, tree t2)\n+func_checker::compare_asm_inputs_outputs (tree t1, tree t2)\n {\n   gcc_assert (TREE_CODE (t1) == TREE_LIST);\n   gcc_assert (TREE_CODE (t2) == TREE_LIST);\n@@ -560,6 +557,16 @@ func_checker::compare_tree_list_operand (tree t1, tree t2)\n       if (!compare_operand (TREE_VALUE (t1), TREE_VALUE (t2)))\n \treturn return_false ();\n \n+      tree p1 = TREE_PURPOSE (t1);\n+      tree p2 = TREE_PURPOSE (t2);\n+\n+      gcc_assert (TREE_CODE (p1) == TREE_LIST);\n+      gcc_assert (TREE_CODE (p2) == TREE_LIST);\n+\n+      if (strcmp (TREE_STRING_POINTER (TREE_VALUE (p1)),\n+\t\t  TREE_STRING_POINTER (TREE_VALUE (p2))) != 0)\n+\treturn return_false ();\n+\n       t2 = TREE_CHAIN (t2);\n     }\n \n@@ -1008,7 +1015,7 @@ func_checker::compare_gimple_asm (const gasm *g1, const gasm *g2)\n       tree input1 = gimple_asm_input_op (g1, i);\n       tree input2 = gimple_asm_input_op (g2, i);\n \n-      if (!compare_tree_list_operand (input1, input2))\n+      if (!compare_asm_inputs_outputs (input1, input2))\n \treturn return_false_with_msg (\"ASM input is different\");\n     }\n \n@@ -1017,7 +1024,7 @@ func_checker::compare_gimple_asm (const gasm *g1, const gasm *g2)\n       tree output1 = gimple_asm_output_op (g1, i);\n       tree output2 = gimple_asm_output_op (g2, i);\n \n-      if (!compare_tree_list_operand (output1, output2))\n+      if (!compare_asm_inputs_outputs (output1, output2))\n \treturn return_false_with_msg (\"ASM output is different\");\n     }\n "}, {"sha": "7e69024165f8d7360ec137918ed7bb5c86a79471", "filename": "gcc/ipa-icf-gimple.h", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6cc30cb4ff182583ffbebe9819973b5b693322fd/gcc%2Fipa-icf-gimple.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6cc30cb4ff182583ffbebe9819973b5b693322fd/gcc%2Fipa-icf-gimple.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fipa-icf-gimple.h?ref=6cc30cb4ff182583ffbebe9819973b5b693322fd", "patch": "@@ -215,9 +215,9 @@ class func_checker\n      is returned.  */\n   bool compare_operand (tree t1, tree t2);\n \n-  /* Compares two tree list operands T1 and T2 and returns true if these\n-     two trees are semantically equivalent.  */\n-  bool compare_tree_list_operand (tree t1, tree t2);\n+  /* Compares GIMPLE ASM inputs (or outputs) where we iterate tree chain\n+     and compare both TREE_PURPOSEs and TREE_VALUEs.  */\n+  bool compare_asm_inputs_outputs (tree t1, tree t2);\n \n   /* Verifies that trees T1 and T2, representing function declarations\n      are equivalent from perspective of ICF.  */"}, {"sha": "6298c2709d9d5327a4b41b614b3f339f3c8a2d48", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6cc30cb4ff182583ffbebe9819973b5b693322fd/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6cc30cb4ff182583ffbebe9819973b5b693322fd/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=6cc30cb4ff182583ffbebe9819973b5b693322fd", "patch": "@@ -1,3 +1,8 @@\n+2017-08-30  Martin Liska  <mliska@suse.cz>\n+\n+\tPR inline-asm/82001\n+\t* gcc.dg/ipa/pr82001.c: New test.\n+\n 2017-08-30  Martin Liska  <mliska@suse.cz>\n \n \t* gcc.dg/tree-ssa/vrp104.c: Change dump file name."}, {"sha": "05e32b10ef570f2310201c89aa5c1074bf25cde1", "filename": "gcc/testsuite/gcc.dg/ipa/pr82001.c", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6cc30cb4ff182583ffbebe9819973b5b693322fd/gcc%2Ftestsuite%2Fgcc.dg%2Fipa%2Fpr82001.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6cc30cb4ff182583ffbebe9819973b5b693322fd/gcc%2Ftestsuite%2Fgcc.dg%2Fipa%2Fpr82001.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fipa%2Fpr82001.c?ref=6cc30cb4ff182583ffbebe9819973b5b693322fd", "patch": "@@ -0,0 +1,21 @@\n+/* { dg-do compile { target i?86-*-* x86_64-*-* } } */\n+/* { dg-options \"-O2 -fdump-ipa-icf-details\"  } */\n+\n+int\n+mullo (int a, int b)\n+{\n+  asm(\"mul %%edx   # %%1 was %1\"\n+      : \"+\"\n+\t\"a\"(a),\n+\t\"+d\"(b));\n+  return a;\n+}\n+\n+int\n+mulhi (int a, int b)\n+{\n+  asm(\"mul %%edx   # %%1 was %1\" : \"+d\"(a), \"+a\"(b));\n+  return a;\n+}\n+\n+/* { dg-final { scan-ipa-dump \"Equal symbols: 0\" \"icf\"  } } */"}]}