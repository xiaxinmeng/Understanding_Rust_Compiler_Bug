{"sha": "05b449213cccb347aa6d0ee65e4fb9b7ad242b6b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDViNDQ5MjEzY2NjYjM0N2FhNmQwZWU2NWU0ZmI5YjdhZDI0MmI2Yg==", "commit": {"author": {"name": "H.J. Lu", "email": "hongjiu.lu@intel.com", "date": "2006-05-15T03:09:17Z"}, "committer": {"name": "H.J. Lu", "email": "hjl@gcc.gnu.org", "date": "2006-05-15T03:09:17Z"}, "message": "Make-lang.in (ada/decl.o): Replace target.h with $(TARGET_H).\n\ngcc/ada/\n\n2006-05-14  H.J. Lu  <hongjiu.lu@intel.com>\n\n\t* Make-lang.in (ada/decl.o): Replace target.h with $(TARGET_H).\n\t(ada/misc.o): Likewise.\n\t(ada/utils.o): Likewise.\n\ngcc/cp/\n\n2006-05-14  H.J. Lu  <hongjiu.lu@intel.com>\n\n\t* Make-lang.in (cp/decl.o): Add dependency on $(TARGET_H).\n\t(cp/decl2.o): Likewise.\n\t(cp/typeck.o): Likewise.\n\t(cp/cvt.o): Likewise.\n\t(cp/parser.o): Likewise.\n\t(cp/call.o): Replace target.h with $(TARGET_H).\n\ngcc/fortran/\n\n2006-05-14  H.J. Lu  <hongjiu.lu@intel.com>\n\n\t* Make-lang.in (fortran/options.o): Depend on $(TARGET_H).\n\ngcc/java/\n\n2006-05-14  H.J. Lu  <hongjiu.lu@intel.com>\n\n\t* Make-lang.in (java/decl.o): Add dependency on $(TARGET_H).\n\t(java/expr.o): Replace target.h with $(TARGET_H).\n\t(java/parse.o): Likewise.\n\ngcc/objcp/\n\n2006-05-14  H.J. Lu  <hongjiu.lu@intel.com>\n\n\t* Make-lang.in (objcp/objcp-decl.o): Add dependency on\n\t$(TARGET_H).\n\ngcc/treelang/\n\n2006-05-14  H.J. Lu  <hongjiu.lu@intel.com>\n\n\t* Make-lang.in (treelang/treetree.o): Add dependency on\n\t$(TARGET_H).\n\nFrom-SVN: r113773", "tree": {"sha": "fc045be1ae98126770f0d4509389ce1aedba1c69", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/fc045be1ae98126770f0d4509389ce1aedba1c69"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/05b449213cccb347aa6d0ee65e4fb9b7ad242b6b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/05b449213cccb347aa6d0ee65e4fb9b7ad242b6b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/05b449213cccb347aa6d0ee65e4fb9b7ad242b6b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/05b449213cccb347aa6d0ee65e4fb9b7ad242b6b/comments", "author": {"login": "hjl-tools", "id": 1072356, "node_id": "MDQ6VXNlcjEwNzIzNTY=", "avatar_url": "https://avatars.githubusercontent.com/u/1072356?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hjl-tools", "html_url": "https://github.com/hjl-tools", "followers_url": "https://api.github.com/users/hjl-tools/followers", "following_url": "https://api.github.com/users/hjl-tools/following{/other_user}", "gists_url": "https://api.github.com/users/hjl-tools/gists{/gist_id}", "starred_url": "https://api.github.com/users/hjl-tools/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hjl-tools/subscriptions", "organizations_url": "https://api.github.com/users/hjl-tools/orgs", "repos_url": "https://api.github.com/users/hjl-tools/repos", "events_url": "https://api.github.com/users/hjl-tools/events{/privacy}", "received_events_url": "https://api.github.com/users/hjl-tools/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "eaebb9cbc14dc32298b557dbb3dadbc8a43aa33b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/eaebb9cbc14dc32298b557dbb3dadbc8a43aa33b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/eaebb9cbc14dc32298b557dbb3dadbc8a43aa33b"}], "stats": {"total": 67, "additions": 52, "deletions": 15}, "files": [{"sha": "870ed8cf29078c7b6562f47e9424eefbd2290cbe", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/05b449213cccb347aa6d0ee65e4fb9b7ad242b6b/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/05b449213cccb347aa6d0ee65e4fb9b7ad242b6b/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=05b449213cccb347aa6d0ee65e4fb9b7ad242b6b", "patch": "@@ -1,3 +1,9 @@\n+2006-05-14  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\t* Make-lang.in (ada/decl.o): Replace target.h with $(TARGET_H).\n+\t(ada/misc.o): Likewise.\n+\t(ada/utils.o): Likewise.\n+\n 2006-04-08  Aurelien Jarno  <aurel32@debian.org>\n \n \t* Makefile.in: Add Ada support for GNU/kFreeBSD."}, {"sha": "bbbede5d5132724d7b824502284ad7c42814f40a", "filename": "gcc/ada/Make-lang.in", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/05b449213cccb347aa6d0ee65e4fb9b7ad242b6b/gcc%2Fada%2FMake-lang.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/05b449213cccb347aa6d0ee65e4fb9b7ad242b6b/gcc%2Fada%2FMake-lang.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FMake-lang.in?ref=05b449213cccb347aa6d0ee65e4fb9b7ad242b6b", "patch": "@@ -1052,7 +1052,7 @@ ada/cuintp.o : ada/cuintp.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n    ada/elists.h ada/nlists.h ada/fe.h ada/gigi.h\n \n ada/decl.o : ada/decl.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(TREE_H) \\\n-   flags.h toplev.h convert.h target.h ada/ada.h ada/types.h ada/atree.h \\\n+   flags.h toplev.h convert.h $(TARGET_H) ada/ada.h ada/types.h ada/atree.h \\\n    ada/nlists.h ada/elists.h ada/uintp.h ada/sinfo.h ada/einfo.h ada/snames.h \\\n    ada/namet.h ada/stringt.h ada/repinfo.h ada/fe.h $(ADA_TREE_H) ada/gigi.h \\\n    gt-ada-decl.h $(EXPR_H)\n@@ -1063,7 +1063,7 @@ ada/misc.o : ada/misc.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(TREE_H) \\\n    $(LANGHOOKS_DEF_H) libfuncs.h $(OPTABS_H) ada/ada.h ada/types.h \\\n    ada/atree.h ada/nlists.h ada/elists.h ada/sinfo.h ada/einfo.h ada/namet.h \\\n    ada/stringt.h ada/uintp.h ada/fe.h $(ADA_TREE_H) ada/gigi.h \\\n-   ada/adadecode.h opts.h options.h target.h real.h\n+   ada/adadecode.h opts.h options.h $(TARGET_H) real.h\n \n ada/targtyps.o : ada/targtyps.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n    $(TREE_H) ada/ada.h ada/types.h ada/atree.h ada/nlists.h ada/elists.h \\\n@@ -1080,7 +1080,7 @@ ada/utils.o : ada/utils.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n    $(TREE_H) flags.h expr.h convert.h defaults.h ada/ada.h ada/types.h \\\n    ada/atree.h ada/nlists.h ada/elists.h ada/sinfo.h ada/einfo.h ada/namet.h \\\n    ada/stringt.h ada/uintp.h ada/fe.h $(ADA_TREE_H) ada/gigi.h gt-ada-utils.h \\\n-   gtype-ada.h target.h\n+   gtype-ada.h $(TARGET_H)\n \n ada/utils2.o : ada/utils2.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n    $(TREE_H) flags.h ada/ada.h ada/types.h ada/atree.h ada/nlists.h \\"}, {"sha": "593ee2ce566f83dcc96d4602c5ec085bf15a9f3f", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/05b449213cccb347aa6d0ee65e4fb9b7ad242b6b/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/05b449213cccb347aa6d0ee65e4fb9b7ad242b6b/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=05b449213cccb347aa6d0ee65e4fb9b7ad242b6b", "patch": "@@ -1,3 +1,12 @@\n+2006-05-14  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\t* Make-lang.in (cp/decl.o): Add dependency on $(TARGET_H).\n+\t(cp/decl2.o): Likewise.\n+\t(cp/typeck.o): Likewise.\n+\t(cp/cvt.o): Likewise.\n+\t(cp/parser.o): Likewise.\n+\t(cp/call.o): Replace target.h with $(TARGET_H).\n+\n 2006-05-14  Alexandre Oliva  <aoliva@redhat.com>\n \n \t* pt.c (build_non_dependent_expr): Leave ADDR_EXPR of"}, {"sha": "7b6268d9e9b123b13a320094413ba3337c450a28", "filename": "gcc/cp/Make-lang.in", "status": "modified", "additions": 7, "deletions": 6, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/05b449213cccb347aa6d0ee65e4fb9b7ad242b6b/gcc%2Fcp%2FMake-lang.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/05b449213cccb347aa6d0ee65e4fb9b7ad242b6b/gcc%2Fcp%2FMake-lang.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FMake-lang.in?ref=05b449213cccb347aa6d0ee65e4fb9b7ad242b6b", "patch": "@@ -235,29 +235,30 @@ cp/cp-lang.o: cp/cp-lang.c $(CXX_TREE_H) $(TM_H) toplev.h debug.h langhooks.h \\\n cp/decl.o: cp/decl.c $(CXX_TREE_H) $(TM_H) flags.h cp/decl.h \\\n   output.h $(EXPR_H) except.h toplev.h $(HASHTAB_H) $(RTL_H) \\\n   cp/operators.def $(TM_P_H) tree-inline.h diagnostic.h c-pragma.h \\\n-  debug.h gt-cp-decl.h timevar.h $(TREE_FLOW_H)\n+  debug.h gt-cp-decl.h timevar.h $(TREE_FLOW_H) $(TARGET_H)\n cp/decl2.o: cp/decl2.c $(CXX_TREE_H) $(TM_H) flags.h cp/decl.h $(EXPR_H) \\\n   output.h except.h toplev.h $(RTL_H) c-common.h gt-cp-decl2.h cgraph.h \\\n-  c-pragma.h $(TREE_DUMP_H) intl.h\n+  c-pragma.h $(TREE_DUMP_H) intl.h $(TARGET_H)\n cp/cp-objcp-common.o : cp/cp-objcp-common.c $(CONFIG_H) $(SYSTEM_H) \\\n   coretypes.h $(TM_H) $(TREE_H) $(CXX_TREE_H) c-common.h toplev.h langhooks.h \\\n   $(LANGHOOKS_DEF_H) $(DIAGNOSTIC_H) debug.h $(CXX_PRETTY_PRINT_H) \\\n   cp/cp-objcp-common.h gt-cp-cp-objcp-common.h\n cp/typeck2.o: cp/typeck2.c $(CXX_TREE_H) $(TM_H) flags.h toplev.h output.h \\\n   $(TM_P_H) diagnostic.h gt-cp-typeck2.h\n cp/typeck.o: cp/typeck.c $(CXX_TREE_H) $(TM_H) flags.h $(RTL_H) $(EXPR_H) \\\n-  toplev.h diagnostic.h convert.h c-common.h\n+  toplev.h diagnostic.h convert.h c-common.h $(TARGET_H)\n cp/class.o: cp/class.c $(CXX_TREE_H) $(TM_H) flags.h toplev.h $(RTL_H) \\\n   $(TARGET_H) convert.h $(CGRAPH_H) $(TREE_DUMP_H)\n cp/call.o: cp/call.c $(CXX_TREE_H) $(TM_H) flags.h toplev.h $(RTL_H) \\\n-  $(EXPR_H) diagnostic.h intl.h gt-cp-call.h convert.h target.h\n+  $(EXPR_H) diagnostic.h intl.h gt-cp-call.h convert.h $(TARGET_H)\n cp/friend.o: cp/friend.c $(CXX_TREE_H) $(TM_H) flags.h $(RTL_H) toplev.h \\\n   $(EXPR_H)\n cp/init.o: cp/init.c $(CXX_TREE_H) $(TM_H) flags.h $(RTL_H) $(EXPR_H) \\\n   toplev.h except.h $(TARGET_H)\n cp/method.o: cp/method.c $(CXX_TREE_H) $(TM_H) toplev.h $(RTL_H) $(EXPR_H) \\\n   $(TM_P_H) $(TARGET_H) diagnostic.h gt-cp-method.h\n-cp/cvt.o: cp/cvt.c $(CXX_TREE_H) $(TM_H) cp/decl.h flags.h toplev.h convert.h\n+cp/cvt.o: cp/cvt.c $(CXX_TREE_H) $(TM_H) cp/decl.h flags.h toplev.h \\\n+  convert.h $(TARGET_H)\n cp/search.o: cp/search.c $(CXX_TREE_H) $(TM_H) flags.h toplev.h $(RTL_H)\n cp/tree.o: cp/tree.c $(CXX_TREE_H) $(TM_H) flags.h toplev.h $(RTL_H) \\\n   insn-config.h integrate.h tree-inline.h real.h gt-cp-tree.h $(TARGET_H) \\\n@@ -285,7 +286,7 @@ cp/optimize.o: cp/optimize.c $(CXX_TREE_H) $(TM_H) rtl.h integrate.h \\\n cp/mangle.o: cp/mangle.c $(CXX_TREE_H) $(TM_H) toplev.h real.h gt-cp-mangle.h \\\n   $(TARGET_H) $(TM_P_H)\n cp/parser.o: cp/parser.c $(CXX_TREE_H) $(TM_H) diagnostic.h gt-cp-parser.h \\\n-  output.h\n+  output.h $(TARGET_H)\n cp/cp-gimplify.o: cp/cp-gimplify.c $(CXX_TREE_H) toplev.h c-common.h \\\n \t$(TM_H) coretypes.h pointer-set.h\n "}, {"sha": "fadf75031f7b65593679e3aec19f03eeb9460e7b", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/05b449213cccb347aa6d0ee65e4fb9b7ad242b6b/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/05b449213cccb347aa6d0ee65e4fb9b7ad242b6b/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=05b449213cccb347aa6d0ee65e4fb9b7ad242b6b", "patch": "@@ -1,3 +1,7 @@\n+2006-05-14  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\t* Make-lang.in (fortran/options.o): Depend on $(TARGET_H).\n+\n 2006-05-11  Francois-Xavier Coudert  <coudert@clipper.ens.fr>\n \n \tPR fortran/27553"}, {"sha": "ba9bfe82158ff829d70f78db49e6f1a0a057edd9", "filename": "gcc/fortran/Make-lang.in", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/05b449213cccb347aa6d0ee65e4fb9b7ad242b6b/gcc%2Ffortran%2FMake-lang.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/05b449213cccb347aa6d0ee65e4fb9b7ad242b6b/gcc%2Ffortran%2FMake-lang.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FMake-lang.in?ref=05b449213cccb347aa6d0ee65e4fb9b7ad242b6b", "patch": "@@ -297,4 +297,4 @@ fortran/trans-intrinsic.o: $(GFORTRAN_TRANS_DEPS) fortran/mathbuiltins.def \\\n fortran/dependency.o: $(GFORTRAN_TRANS_DEPS) fortran/dependency.h\n fortran/trans-common.o: $(GFORTRAN_TRANS_DEPS) $(TARGET_H) $(RTL_H)\n fortran/resolve.o: fortran/dependency.h\n-\n+fortran/options.o: $(TARGET_H)"}, {"sha": "783ba555f6cb9d8ee116274d6ac5a7d9d9419b23", "filename": "gcc/java/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/05b449213cccb347aa6d0ee65e4fb9b7ad242b6b/gcc%2Fjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/05b449213cccb347aa6d0ee65e4fb9b7ad242b6b/gcc%2Fjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2FChangeLog?ref=05b449213cccb347aa6d0ee65e4fb9b7ad242b6b", "patch": "@@ -1,3 +1,9 @@\n+2006-05-14  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\t* Make-lang.in (java/decl.o): Add dependency on $(TARGET_H).\n+\t(java/expr.o): Replace target.h with $(TARGET_H).\n+\t(java/parse.o): Likewise.\n+\n 2006-05-10  Andrew Haley  <aph@redhat.com>\n \n \t* class.c (emit_indirect_register_classes): Fix comment."}, {"sha": "dcb94d510c0c4488c05d0e5de0c8b429e6a025a9", "filename": "gcc/java/Make-lang.in", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/05b449213cccb347aa6d0ee65e4fb9b7ad242b6b/gcc%2Fjava%2FMake-lang.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/05b449213cccb347aa6d0ee65e4fb9b7ad242b6b/gcc%2Fjava%2FMake-lang.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2FMake-lang.in?ref=05b449213cccb347aa6d0ee65e4fb9b7ad242b6b", "patch": "@@ -309,14 +309,14 @@ java/constants.o: java/constants.c $(CONFIG_H) $(JAVA_TREE_H) java/jcf.h \\\n java/decl.o: java/decl.c $(CONFIG_H) $(JAVA_TREE_H) $(RTL_H) java/jcf.h \\\n   toplev.h flags.h $(SYSTEM_H) coretypes.h $(TM_H) function.h $(EXPR_H) \\\n   libfuncs.h except.h java/java-except.h $(GGC_H) real.h gt-java-decl.h \\\n-  target.h cgraph.h\n+  $(TARGET_H) cgraph.h\n java/except.o: java/except.c $(CONFIG_H) $(JAVA_TREE_H) java/jcf.h real.h \\\n   $(RTL_H) java/javaop.h java/java-opcodes.h except.h java/java-except.h \\\n   toplev.h $(SYSTEM_H) coretypes.h $(TM_H) function.h \n java/expr.o: java/expr.c $(CONFIG_H) $(JAVA_TREE_H) java/jcf.h real.h \\\n   $(RTL_H) $(EXPR_H) java/javaop.h java/java-opcodes.h except.h \\\n   java/java-except.h java/java-except.h java/parse.h toplev.h \\\n-  $(SYSTEM_H) coretypes.h $(TM_H) $(GGC_H) gt-java-expr.h target.h\n+  $(SYSTEM_H) coretypes.h $(TM_H) $(GGC_H) gt-java-expr.h $(TARGET_H)\n java/jcf-depend.o: java/jcf-depend.c $(CONFIG_H) $(SYSTEM_H) coretypes.h \\\n   $(TM_H) java/jcf.h\n java/jcf-parse.o: java/jcf-parse.c $(CONFIG_H) $(JAVA_TREE_H) flags.h \\\n@@ -355,7 +355,7 @@ java/parse-scan.o: java/parse-scan.c $(CONFIG_H) $(SYSTEM_H) \\\n   coretypes.h $(TM_H) toplev.h $(JAVA_LEX_C) java/parse.h java/lex.h input.h\n java/parse.o: java/parse.c java/jcf-reader.c $(CONFIG_H) $(SYSTEM_H) \\\n   coretypes.h $(TM_H) function.h $(JAVA_TREE_H) $(JAVA_LEX_C) java/parse.h \\\n-  java/lex.h input.h $(GGC_H) debug.h gt-java-parse.h gtype-java.h target.h \\\n+  java/lex.h input.h $(GGC_H) debug.h gt-java-parse.h gtype-java.h $(TARGET_H) \\\n   $(TREE_DUMP_H)\n \n # jcf-io.o needs $(ZLIBINC) added to cflags."}, {"sha": "3340ac764dd7a4d67237b5b501d15443d5651368", "filename": "gcc/objcp/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/05b449213cccb347aa6d0ee65e4fb9b7ad242b6b/gcc%2Fobjcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/05b449213cccb347aa6d0ee65e4fb9b7ad242b6b/gcc%2Fobjcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fobjcp%2FChangeLog?ref=05b449213cccb347aa6d0ee65e4fb9b7ad242b6b", "patch": "@@ -1,4 +1,10 @@\n+2006-05-14  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\t* Make-lang.in (objcp/objcp-decl.o): Add dependency on\n+\t$(TARGET_H).\n+\n 2006-02-20 Rafael \ufffdvila de Esp\ufffdndola <rafael.espindola@gmail.com>\n+\n \t* Make-lang.in (OBJ-C++): Remove\n \t(.PHONY): Remove Obj-c++ and obj-C++. Add obj-c++\n "}, {"sha": "f5e163d2aa62f9f637e40175d6f3b41e3124fdd9", "filename": "gcc/objcp/Make-lang.in", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/05b449213cccb347aa6d0ee65e4fb9b7ad242b6b/gcc%2Fobjcp%2FMake-lang.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/05b449213cccb347aa6d0ee65e4fb9b7ad242b6b/gcc%2Fobjcp%2FMake-lang.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fobjcp%2FMake-lang.in?ref=05b449213cccb347aa6d0ee65e4fb9b7ad242b6b", "patch": "@@ -75,7 +75,7 @@ objcp/objcp-lang.o : objcp/objcp-lang.c \\\n objcp/objcp-decl.o : objcp/objcp-decl.c \\\n    $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(TREE_H) $(C_TREE_H) \\\n    toplev.h $(GGC_H) c-pragma.h input.h flags.h output.h objc/objc-act.h \\\n-   objcp/objcp-decl.h tree-gimple.h $(EXPR_H)\n+   objcp/objcp-decl.h tree-gimple.h $(EXPR_H) $(TARGET_H)\n \n # The following must be an explicit rule; please keep in sync with the implicit\n # one in Makefile.in."}, {"sha": "71b444d0fb67d790ce9090f6dea41331309b681a", "filename": "gcc/treelang/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/05b449213cccb347aa6d0ee65e4fb9b7ad242b6b/gcc%2Ftreelang%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/05b449213cccb347aa6d0ee65e4fb9b7ad242b6b/gcc%2Ftreelang%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftreelang%2FChangeLog?ref=05b449213cccb347aa6d0ee65e4fb9b7ad242b6b", "patch": "@@ -1,3 +1,8 @@\n+2006-05-14  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\t* Make-lang.in (treelang/treetree.o): Add dependency on\n+\t$(TARGET_H).\n+\n 2006-04-22  Matthias Klose  <doko@debian.org>\n \n \t* Make-lang.in (treelang.check): Don't set and pass TRANSFORM."}, {"sha": "2d91fd3e89aa4f1d79a443458721223c9efbd28c", "filename": "gcc/treelang/Make-lang.in", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/05b449213cccb347aa6d0ee65e4fb9b7ad242b6b/gcc%2Ftreelang%2FMake-lang.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/05b449213cccb347aa6d0ee65e4fb9b7ad242b6b/gcc%2Ftreelang%2FMake-lang.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftreelang%2FMake-lang.in?ref=05b449213cccb347aa6d0ee65e4fb9b7ad242b6b", "patch": "@@ -107,7 +107,7 @@ treelang/tree1.o: treelang/tree1.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n treelang/treetree.o: treelang/treetree.c $(CONFIG_H) $(SYSTEM_H) coretypes.h \\\n   $(TM_H) $(TREE_H) flags.h output.h $(RTL_H) $(GGC_H) toplev.h \\\n   varray.h $(LANGHOOKS_DEF_H) langhooks.h treelang/treelang.h input.h \\\n-  treelang/treetree.h treelang/parse.h\n+  treelang/treetree.h treelang/parse.h $(TARGET_H)\n \n treelang/tree-convert.o: treelang/tree-convert.c $(CONFIG_H) $(SYSTEM_H) \\\n   coretypes.h diagnostic.h $(TREE_H) flags.h toplev.h langhooks.h $(TM_H)"}]}