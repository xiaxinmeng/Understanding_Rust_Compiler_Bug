{"sha": "f4d1d50a5a78c87a06a269f25fbfc7ff29896d14", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjRkMWQ1MGE1YTc4Yzg3YTA2YTI2OWYyNWZiZmM3ZmYyOTg5NmQxNA==", "commit": {"author": {"name": "Tobias Burnus", "email": "burnus@net-b.de", "date": "2010-04-06T19:03:10Z"}, "committer": {"name": "Tobias Burnus", "email": "burnus@gcc.gnu.org", "date": "2010-04-06T19:03:10Z"}, "message": "re PR fortran/18918 (Eventually support Fortran 2008's coarrays [co-arrays])\n\n2010-04-06  Tobias Burnus  <burnus@net-b.de>\n\n        PR fortran/18918\n        * array.c (gfc_match_array_spec): Add error for -fcoarray=none.\n        * match.c (gfc_match_critical, sync_statement): Ditto.\n        * gfortran.h (gfc_fcoarray): New enum.\n        (gfc_option_t): Use it.\n        * lang.opt (fcoarray): Add new flag.\n        * invoke.texi (fcoarray): Document it.\n        * options.c (gfc_init_options,gfc_handle_option): Handle\n        * -fcoarray=.\n        (gfc_handle_coarray_option): New function.\n\n2010-04-06  Tobias Burnus  <burnus@net-b.de>\n\n        PR fortran/18918\n        * gfortran.dg/coarray_2.f90: Add dg-options -fcoarray=single.\n        * gfortran.dg/coarray_3.f90: Ditto.\n        * gfortran.dg/coarray_4.f90: Ditto.\n        * gfortran.dg/coarray_5.f90: Ditto.\n        * gfortran.dg/coarray_6.f90: Ditto.\n        * gfortran.dg/coarray_7.f90: Ditto.\n        * gfortran.dg/coarray_8.f90: Ditto.\n        * gfortran.dg/coarray_9.f90: New -fcoarray=none test.\n\nFrom-SVN: r158016", "tree": {"sha": "44ad7701af6f733236c159c4af2013f131e90322", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/44ad7701af6f733236c159c4af2013f131e90322"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f4d1d50a5a78c87a06a269f25fbfc7ff29896d14", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f4d1d50a5a78c87a06a269f25fbfc7ff29896d14", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f4d1d50a5a78c87a06a269f25fbfc7ff29896d14", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f4d1d50a5a78c87a06a269f25fbfc7ff29896d14/comments", "author": {"login": "tob2", "id": 264461, "node_id": "MDQ6VXNlcjI2NDQ2MQ==", "avatar_url": "https://avatars.githubusercontent.com/u/264461?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tob2", "html_url": "https://github.com/tob2", "followers_url": "https://api.github.com/users/tob2/followers", "following_url": "https://api.github.com/users/tob2/following{/other_user}", "gists_url": "https://api.github.com/users/tob2/gists{/gist_id}", "starred_url": "https://api.github.com/users/tob2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tob2/subscriptions", "organizations_url": "https://api.github.com/users/tob2/orgs", "repos_url": "https://api.github.com/users/tob2/repos", "events_url": "https://api.github.com/users/tob2/events{/privacy}", "received_events_url": "https://api.github.com/users/tob2/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "377949813aecca7f8c1ede0c28d3de708eb5d06a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/377949813aecca7f8c1ede0c28d3de708eb5d06a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/377949813aecca7f8c1ede0c28d3de708eb5d06a"}], "stats": {"total": 107, "additions": 105, "deletions": 2}, "files": [{"sha": "9725d8e2f1dda00dbf7caf009066a658aafd017b", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f4d1d50a5a78c87a06a269f25fbfc7ff29896d14/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f4d1d50a5a78c87a06a269f25fbfc7ff29896d14/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=f4d1d50a5a78c87a06a269f25fbfc7ff29896d14", "patch": "@@ -1,3 +1,15 @@\n+2010-04-06  Tobias Burnus  <burnus@net-b.de>\n+\n+\tPR fortran/18918\n+\t* array.c (gfc_match_array_spec): Add error for -fcoarray=none.\n+\t* match.c (gfc_match_critical, sync_statement): Ditto.\n+\t* gfortran.h (gfc_fcoarray): New enum.\n+\t(gfc_option_t): Use it.\n+\t* lang.opt (fcoarray): Add new flag.\n+\t* invoke.texi (fcoarray): Document it.\n+\t* options.c (gfc_init_options,gfc_handle_option): Handle -fcoarray=.\n+\t(gfc_handle_coarray_option): New function.\n+\n 2010-04-06  Tobias Burnus  <burnus@net-b.de>\n \n \tPR fortran/18918"}, {"sha": "4282fd1d8e975040335d446b677af17951b5cd4d", "filename": "gcc/fortran/array.c", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f4d1d50a5a78c87a06a269f25fbfc7ff29896d14/gcc%2Ffortran%2Farray.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f4d1d50a5a78c87a06a269f25fbfc7ff29896d14/gcc%2Ffortran%2Farray.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Farray.c?ref=f4d1d50a5a78c87a06a269f25fbfc7ff29896d14", "patch": "@@ -458,6 +458,12 @@ gfc_match_array_spec (gfc_array_spec **asp, bool match_dim, bool match_codim)\n       == FAILURE)\n     goto cleanup;\n \n+  if (gfc_option.coarray == GFC_FCOARRAY_NONE)\n+    {\n+       gfc_error (\"Coarrays disabled at %C, use -fcoarray= to enable\");\n+       goto cleanup;\n+    }\n+\n   for (;;)\n     {\n       as->corank++;"}, {"sha": "f4f5d5294e33762d2b5afb8bc7acaf9875d7f7b3", "filename": "gcc/fortran/gfortran.h", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f4d1d50a5a78c87a06a269f25fbfc7ff29896d14/gcc%2Ffortran%2Fgfortran.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f4d1d50a5a78c87a06a269f25fbfc7ff29896d14/gcc%2Ffortran%2Fgfortran.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fgfortran.h?ref=f4d1d50a5a78c87a06a269f25fbfc7ff29896d14", "patch": "@@ -563,6 +563,13 @@ typedef enum\n }\n init_local_integer;\n \n+typedef enum\n+{\n+  GFC_FCOARRAY_NONE = 0,\n+  GFC_FCOARRAY_SINGLE\n+}\n+gfc_fcoarray;\n+\n /************************* Structures *****************************/\n \n /* Used for keeping things in balanced binary trees.  */\n@@ -2158,6 +2165,7 @@ typedef struct\n \n   int fpe;\n   int rtcheck;\n+  gfc_fcoarray coarray;\n \n   int warn_std;\n   int allow_std;"}, {"sha": "0a3dd7d12d12f96369fffeb029e5e28d5981918c", "filename": "gcc/fortran/invoke.texi", "status": "modified", "additions": 16, "deletions": 2, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f4d1d50a5a78c87a06a269f25fbfc7ff29896d14/gcc%2Ffortran%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f4d1d50a5a78c87a06a269f25fbfc7ff29896d14/gcc%2Ffortran%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Finvoke.texi?ref=f4d1d50a5a78c87a06a269f25fbfc7ff29896d14", "patch": "@@ -166,8 +166,8 @@ and warnings}.\n @gccoptlist{-fno-automatic  -ff2c  -fno-underscoring @gol\n -fwhole-file -fsecond-underscore @gol\n -fbounds-check -fcheck-array-temporaries  -fmax-array-constructor =@var{n} @gol\n--fcheck=@var{<all|array-temps|bounds|do|mem|pointer|recursion>}\n--fmax-stack-var-size=@var{n} @gol\n+-fcheck=@var{<all|array-temps|bounds|do|mem|pointer|recursion>} @gol\n+-fcoarray=@var{<none|single>} -fmax-stack-var-size=@var{n} @gol\n -fpack-derived  -frepack-arrays  -fshort-enums  -fexternal-blas @gol\n -fblas-matmul-limit=@var{n} -frecursive -finit-local-zero @gol\n -finit-integer=@var{n} -finit-real=@var{<zero|inf|-inf|nan|snan>} @gol\n@@ -1212,6 +1212,20 @@ is implemented as a reference to the link-time external symbol\n for compatibility with @command{g77} and @command{f2c}, and is implied\n by use of the @option{-ff2c} option.\n \n+@item -fcoarray=@var{<keyword>}\n+@opindex @code{fcoarray}\n+@cindex coarrays\n+\n+@table @asis\n+@item @samp{none}\n+Disable coarray support; using coarray declarations and image-control\n+statements will produce a compile-time error. (Default)\n+\n+@item @samp{single}\n+Single-image mode, i.e. @code{num_images()} is always one.\n+@end table\n+\n+\n @item -fcheck=@var{<keyword>}\n @opindex @code{fcheck}\n @cindex array, bounds checking"}, {"sha": "1438aa2d0ca976527d2202e213b81cd401c71038", "filename": "gcc/fortran/lang.opt", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f4d1d50a5a78c87a06a269f25fbfc7ff29896d14/gcc%2Ffortran%2Flang.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f4d1d50a5a78c87a06a269f25fbfc7ff29896d14/gcc%2Ffortran%2Flang.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Flang.opt?ref=f4d1d50a5a78c87a06a269f25fbfc7ff29896d14", "patch": "@@ -348,6 +348,10 @@ frepack-arrays\n Fortran\n Copy array sections into a contiguous block on procedure entry\n \n+fcoarray=\n+Fortran RejectNegative JoinedOrMissing\n+-fcoarray=[...]\tSpecify which coarray parallelization should be used\n+\n fcheck=\n Fortran RejectNegative JoinedOrMissing\n -fcheck=[...]\tSpecify which runtime checks are to be performed"}, {"sha": "70bf9ac798627e3aaae323b902765348be17e7f4", "filename": "gcc/fortran/match.c", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f4d1d50a5a78c87a06a269f25fbfc7ff29896d14/gcc%2Ffortran%2Fmatch.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f4d1d50a5a78c87a06a269f25fbfc7ff29896d14/gcc%2Ffortran%2Fmatch.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fmatch.c?ref=f4d1d50a5a78c87a06a269f25fbfc7ff29896d14", "patch": "@@ -1743,6 +1743,12 @@ gfc_match_critical (void)\n       == FAILURE)\n     return MATCH_ERROR;\n \n+  if (gfc_option.coarray == GFC_FCOARRAY_NONE)\n+    {\n+       gfc_error (\"Coarrays disabled at %C, use -fcoarray= to enable\");\n+       return MATCH_ERROR;\n+    }\n+\n   if (gfc_find_state (COMP_CRITICAL) == SUCCESS)\n     {\n       gfc_error (\"Nested CRITICAL block at %C\");\n@@ -2138,6 +2144,12 @@ sync_statement (gfc_statement st)\n       == FAILURE)\n     return MATCH_ERROR;\n \n+  if (gfc_option.coarray == GFC_FCOARRAY_NONE)\n+    {\n+       gfc_error (\"Coarrays disabled at %C, use -fcoarray= to enable\");\n+       return MATCH_ERROR;\n+    }\n+\n   if (gfc_find_state (COMP_CRITICAL) == SUCCESS)\n     {\n       gfc_error (\"Image control statement SYNC at %C in CRITICAL block\");"}, {"sha": "676bbe125bd2318cb0a819eb3a35a35a5d6743c3", "filename": "gcc/fortran/options.c", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f4d1d50a5a78c87a06a269f25fbfc7ff29896d14/gcc%2Ffortran%2Foptions.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f4d1d50a5a78c87a06a269f25fbfc7ff29896d14/gcc%2Ffortran%2Foptions.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Foptions.c?ref=f4d1d50a5a78c87a06a269f25fbfc7ff29896d14", "patch": "@@ -130,6 +130,7 @@ gfc_init_options (unsigned int argc, const char **argv)\n   \n   gfc_option.fpe = 0;\n   gfc_option.rtcheck = 0;\n+  gfc_option.coarray = GFC_FCOARRAY_NONE;\n \n   /* Argument pointers cannot point to anything but their argument.  */\n   flag_argument_noalias = 3;\n@@ -479,6 +480,18 @@ gfc_handle_fpe_trap_option (const char *arg)\n }\n \n \n+static void\n+gfc_handle_coarray_option (const char *arg)\n+{\n+  if (strcmp (arg, \"none\") == 0)\n+    gfc_option.coarray = GFC_FCOARRAY_NONE;\n+  else if (strcmp (arg, \"single\") == 0)\n+    gfc_option.coarray = GFC_FCOARRAY_SINGLE;\n+  else\n+    gfc_fatal_error (\"Argument to -fcoarray is not valid: %s\", arg);\n+}\n+\n+\n static void\n gfc_handle_runtime_check_option (const char *arg)\n {\n@@ -931,6 +944,9 @@ gfc_handle_option (size_t scode, const char *arg, int value)\n       gfc_handle_runtime_check_option (arg);\n       break;\n \n+    case OPT_fcoarray_:\n+      gfc_handle_coarray_option (arg);\n+      break;\n     }\n \n   return result;"}, {"sha": "a485fcb3d7ee1130237b014f1a4802d54b8c4064", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f4d1d50a5a78c87a06a269f25fbfc7ff29896d14/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f4d1d50a5a78c87a06a269f25fbfc7ff29896d14/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=f4d1d50a5a78c87a06a269f25fbfc7ff29896d14", "patch": "@@ -1,3 +1,13 @@\n+2010-04-06  Tobias Burnus  <burnus@net-b.de>\n+\n+\tPR fortran/18918\n+\t* gfortran.dg/coarray_2.f90: Add dg-options -fcoarray=single.\n+\t* gfortran.dg/coarray_3.f90: Ditto.\n+\t* gfortran.dg/coarray_4.f90: Ditto.\n+\t* gfortran.dg/coarray_5.f90: Ditto.\n+\t* gfortran.dg/coarray_6.f90: Ditto.\n+\t* gfortran.dg/coarray_9.f90: New -fcoarray=none test.\n+\n 2010-04-06  Tobias Burnus  <burnus@net-b.de>\n \n \tPR fortran/18918"}, {"sha": "902a0dd98206259613f072cc45172991fd435f56", "filename": "gcc/testsuite/gfortran.dg/coarray_2.f90", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f4d1d50a5a78c87a06a269f25fbfc7ff29896d14/gcc%2Ftestsuite%2Fgfortran.dg%2Fcoarray_2.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f4d1d50a5a78c87a06a269f25fbfc7ff29896d14/gcc%2Ftestsuite%2Fgfortran.dg%2Fcoarray_2.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fcoarray_2.f90?ref=f4d1d50a5a78c87a06a269f25fbfc7ff29896d14", "patch": "@@ -1,4 +1,5 @@\n ! { dg-do run }\n+! { dg-options \"-fcoarray=single\" }\n ! { dg-shouldfail \"error stop\" }\n ! \n ! Coarray support"}, {"sha": "63c3bd33571b67e08da078b199887ad7db4c189f", "filename": "gcc/testsuite/gfortran.dg/coarray_3.f90", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f4d1d50a5a78c87a06a269f25fbfc7ff29896d14/gcc%2Ftestsuite%2Fgfortran.dg%2Fcoarray_3.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f4d1d50a5a78c87a06a269f25fbfc7ff29896d14/gcc%2Ftestsuite%2Fgfortran.dg%2Fcoarray_3.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fcoarray_3.f90?ref=f4d1d50a5a78c87a06a269f25fbfc7ff29896d14", "patch": "@@ -1,4 +1,5 @@\n ! { dg-do compile }\n+! { dg-options \"-fcoarray=single\" }\n ! \n ! Coarray support\n ! PR fortran/18918"}, {"sha": "5607ec99ace7c229b2feba6a11e546606238bf55", "filename": "gcc/testsuite/gfortran.dg/coarray_4.f90", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f4d1d50a5a78c87a06a269f25fbfc7ff29896d14/gcc%2Ftestsuite%2Fgfortran.dg%2Fcoarray_4.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f4d1d50a5a78c87a06a269f25fbfc7ff29896d14/gcc%2Ftestsuite%2Fgfortran.dg%2Fcoarray_4.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fcoarray_4.f90?ref=f4d1d50a5a78c87a06a269f25fbfc7ff29896d14", "patch": "@@ -1,4 +1,5 @@\n ! { dg-do compile }\n+! { dg-options \"-fcoarray=single\" }\n !\n ! Coarray support -- corank declarations\n ! PR fortran/18918"}, {"sha": "d3c600b361895382ced956a8006abaf70f90bf25", "filename": "gcc/testsuite/gfortran.dg/coarray_6.f90", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f4d1d50a5a78c87a06a269f25fbfc7ff29896d14/gcc%2Ftestsuite%2Fgfortran.dg%2Fcoarray_6.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f4d1d50a5a78c87a06a269f25fbfc7ff29896d14/gcc%2Ftestsuite%2Fgfortran.dg%2Fcoarray_6.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fcoarray_6.f90?ref=f4d1d50a5a78c87a06a269f25fbfc7ff29896d14", "patch": "@@ -1,4 +1,5 @@\n ! { dg-do compile }\n+! { dg-options \"-fcoarray=single\" }\n !\n ! Coarray support -- corank declarations\n ! PR fortran/18918"}, {"sha": "d44cdda5646ed1d2f3fe651719cb56fa229f78fe", "filename": "gcc/testsuite/gfortran.dg/coarray_9.f90", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f4d1d50a5a78c87a06a269f25fbfc7ff29896d14/gcc%2Ftestsuite%2Fgfortran.dg%2Fcoarray_9.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f4d1d50a5a78c87a06a269f25fbfc7ff29896d14/gcc%2Ftestsuite%2Fgfortran.dg%2Fcoarray_9.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fcoarray_9.f90?ref=f4d1d50a5a78c87a06a269f25fbfc7ff29896d14", "patch": "@@ -0,0 +1,17 @@\n+! { dg-do compile }\n+!\n+! PR fortran/18918\n+!\n+! Check for error if no -fcoarray= option has been given\n+!\n+\n+integer :: a\n+integer :: b[*] ! { dg-error \"Coarrays disabled\" }\n+\n+error stop \"Error\"\n+sync all ! { dg-error \"Coarrays disabled\" }\n+\n+critical ! { dg-error \"Coarrays disabled\" }\n+end critical ! { dg-error \"Expecting END PROGRAM statement\" }\n+\n+end"}]}