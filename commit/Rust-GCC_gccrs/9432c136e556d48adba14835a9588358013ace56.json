{"sha": "9432c136e556d48adba14835a9588358013ace56", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTQzMmMxMzZlNTU2ZDQ4YWRiYTE0ODM1YTk1ODgzNTgwMTNhY2U1Ng==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@multimania.com", "date": "2002-04-03T03:41:40Z"}, "committer": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "2002-04-03T03:41:40Z"}, "message": "function.c (assign_temp): Accept either type or decl argument.\n\n        * function.c (assign_temp): Accept either type or decl argument.\n        Detect variables whose size is too large to fit into an integer.\n        * stmt.c (expand_decl): Pass the decl, not the type.\n\nCo-Authored-By: Richard Henderson <rth@redhat.com>\n\nFrom-SVN: r51788", "tree": {"sha": "844e400ff563761e03467d66dbae67488978921a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/844e400ff563761e03467d66dbae67488978921a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9432c136e556d48adba14835a9588358013ace56", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9432c136e556d48adba14835a9588358013ace56", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9432c136e556d48adba14835a9588358013ace56", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9432c136e556d48adba14835a9588358013ace56/comments", "author": null, "committer": null, "parents": [{"sha": "058b12757e42cba6708dd350e43ebb71c8655bf5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/058b12757e42cba6708dd350e43ebb71c8655bf5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/058b12757e42cba6708dd350e43ebb71c8655bf5"}], "stats": {"total": 45, "additions": 39, "deletions": 6}, "files": [{"sha": "a8346bdca7774c950989c8f48486edb6aeb3bea4", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9432c136e556d48adba14835a9588358013ace56/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9432c136e556d48adba14835a9588358013ace56/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=9432c136e556d48adba14835a9588358013ace56", "patch": "@@ -1,3 +1,11 @@\n+2002-04-02  Eric Botcazou  <ebotcazou@multimania.com>\n+\t    Richard Henderson  <rth@redhat.com>\n+\n+\tPR c/5484\n+\t* function.c (assign_temp): Accept either type or decl argument.\n+\tDetect variables whose size is too large to fit into an integer.\n+\t* stmt.c (expand_decl): Pass the decl, not the type.\n+\n 2002-04-02  David O'Brien  <obrien@FreeBSD.org>\n \n \t* protoize.c: Match include directory usage with cppdefault.c."}, {"sha": "5922712b8edbae1464c696009902bdb57b39b1e9", "filename": "gcc/function.c", "status": "modified", "additions": 30, "deletions": 5, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9432c136e556d48adba14835a9588358013ace56/gcc%2Ffunction.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9432c136e556d48adba14835a9588358013ace56/gcc%2Ffunction.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffunction.c?ref=9432c136e556d48adba14835a9588358013ace56", "patch": "@@ -845,23 +845,37 @@ assign_stack_temp (mode, size, keep)\n   return assign_stack_temp_for_type (mode, size, keep, NULL_TREE);\n }\n \f\n-/* Assign a temporary of given TYPE.\n+/* Assign a temporary.\n+   If TYPE_OR_DECL is a decl, then we are doing it on behalf of the decl\n+   and so that should be used in error messages.  In either case, we\n+   allocate of the given type.\n    KEEP is as for assign_stack_temp.\n    MEMORY_REQUIRED is 1 if the result must be addressable stack memory;\n    it is 0 if a register is OK.\n    DONT_PROMOTE is 1 if we should not promote values in register\n    to wider modes.  */\n \n rtx\n-assign_temp (type, keep, memory_required, dont_promote)\n-     tree type;\n+assign_temp (type_or_decl, keep, memory_required, dont_promote)\n+     tree type_or_decl;\n      int keep;\n      int memory_required;\n      int dont_promote ATTRIBUTE_UNUSED;\n {\n-  enum machine_mode mode = TYPE_MODE (type);\n+  tree type, decl;\n+  enum machine_mode mode;\n #ifndef PROMOTE_FOR_CALL_ONLY\n-  int unsignedp = TREE_UNSIGNED (type);\n+  int unsignedp;\n+#endif\n+\n+  if (DECL_P (type_or_decl))\n+    decl = type_or_decl, type = TREE_TYPE (decl);\n+  else\n+    decl = NULL, type = type_or_decl;\n+\n+  mode = TYPE_MODE (type);\n+#ifndef PROMOTE_FOR_CALL_ONLY\n+  unsignedp = TREE_UNSIGNED (type);\n #endif\n \n   if (mode == BLKmode || memory_required)\n@@ -883,6 +897,17 @@ assign_temp (type, keep, memory_required, dont_promote)\n \t  && host_integerp (TYPE_ARRAY_MAX_SIZE (type), 1))\n \tsize = tree_low_cst (TYPE_ARRAY_MAX_SIZE (type), 1);\n \n+      /* The size of the temporary may be too large to fit into an integer.  */\n+      /* ??? Not sure this should happen except for user silliness, so limit\n+\t this to things that aren't compiler-generated temporaries.  The \n+\t rest of the time we'll abort in assign_stack_temp_for_type.  */\n+      if (decl && size == -1\n+\t  && TREE_CODE (TYPE_SIZE_UNIT (type)) == INTEGER_CST)\n+\t{\n+\t  error_with_decl (decl, \"size of variable `%s' is too large\");\n+\t  size = 1;\n+\t}\n+\n       tmp = assign_stack_temp_for_type (mode, size, keep, type);\n       return tmp;\n     }"}, {"sha": "9a72b8784f4662e3532bc9a2f43e7d0a4e7b1b07", "filename": "gcc/stmt.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9432c136e556d48adba14835a9588358013ace56/gcc%2Fstmt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9432c136e556d48adba14835a9588358013ace56/gcc%2Fstmt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fstmt.c?ref=9432c136e556d48adba14835a9588358013ace56", "patch": "@@ -3969,7 +3969,7 @@ expand_decl (decl)\n \t\t\t   : GET_MODE_BITSIZE (DECL_MODE (decl)));\n       DECL_USER_ALIGN (decl) = 0;\n \n-      x = assign_temp (TREE_TYPE (decl), 1, 1, 1);\n+      x = assign_temp (decl, 1, 1, 1);\n       set_mem_attributes (x, decl, 1);\n       SET_DECL_RTL (decl, x);\n "}]}