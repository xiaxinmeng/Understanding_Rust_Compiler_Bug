{"sha": "b9d896d6002cad7cb268a7c6084e0008561aa4ea", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjlkODk2ZDYwMDJjYWQ3Y2IyNjhhN2M2MDg0ZTAwMDg1NjFhYTRlYQ==", "commit": {"author": {"name": "Roman Kennke", "email": "roman@kennke.org", "date": "2005-04-19T05:59:46Z"}, "committer": {"name": "Michael Koch", "email": "mkoch@gcc.gnu.org", "date": "2005-04-19T05:59:46Z"}, "message": "2005-04-19  Roman Kennke  <roman@kennke.org>\n\n\t* javax/swing/ImageIcon.java\n\tAdded API documentation.\n\n2005-04-19  Roman Kennke  <roman@kennke.org>\n\n\t* javax/swing/text/ImageIcon.java\n\t(ImageIcon): Use setImage instead of direct assignment.\n\t(setImage): Call loadImage to make sure that the image is loaded.\n\t(loadImage): Waits for the image to complete loading.\n\t(getImageLoadStatus): Added. Returns the load status of the\n\timage.\n\nFrom-SVN: r98384", "tree": {"sha": "f2952ddb00a8a74291e45916d156b5dbf0f1a445", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f2952ddb00a8a74291e45916d156b5dbf0f1a445"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b9d896d6002cad7cb268a7c6084e0008561aa4ea", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b9d896d6002cad7cb268a7c6084e0008561aa4ea", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b9d896d6002cad7cb268a7c6084e0008561aa4ea", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b9d896d6002cad7cb268a7c6084e0008561aa4ea/comments", "author": null, "committer": null, "parents": [{"sha": "3419f465cfedf821015bf783a24beac6f9f1b87f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3419f465cfedf821015bf783a24beac6f9f1b87f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3419f465cfedf821015bf783a24beac6f9f1b87f"}], "stats": {"total": 74, "additions": 70, "deletions": 4}, "files": [{"sha": "95488e7216dd5feb7f575033feaf84c51fe4720b", "filename": "libjava/ChangeLog", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b9d896d6002cad7cb268a7c6084e0008561aa4ea/libjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b9d896d6002cad7cb268a7c6084e0008561aa4ea/libjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog?ref=b9d896d6002cad7cb268a7c6084e0008561aa4ea", "patch": "@@ -1,3 +1,17 @@\n+2005-04-19  Roman Kennke  <roman@kennke.org>\n+\n+\t* javax/swing/ImageIcon.java\n+\tAdded API documentation.\n+\n+2005-04-19  Roman Kennke  <roman@kennke.org>\n+\n+\t* javax/swing/text/ImageIcon.java\n+\t(ImageIcon): Use setImage instead of direct assignment.\n+\t(setImage): Call loadImage to make sure that the image is loaded.\n+\t(loadImage): Waits for the image to complete loading.\n+\t(getImageLoadStatus): Added. Returns the load status of the\n+\timage.\n+\n 2005-04-19  Audrius Meskauskas  <audriusa@bluewin.ch>\n \n \t* javax/swing/JTextArea.java (replaceRange):"}, {"sha": "abdc391317924a5783e0aef39bce44159fca269e", "filename": "libjava/javax/swing/ImageIcon.java", "status": "modified", "additions": 56, "deletions": 4, "changes": 60, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b9d896d6002cad7cb268a7c6084e0008561aa4ea/libjava%2Fjavax%2Fswing%2FImageIcon.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b9d896d6002cad7cb268a7c6084e0008561aa4ea/libjava%2Fjavax%2Fswing%2FImageIcon.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2FImageIcon.java?ref=b9d896d6002cad7cb268a7c6084e0008561aa4ea", "patch": "@@ -1,5 +1,5 @@\n /* ImageIcon.java --\n-   Copyright (C) 2002, 2004  Free Software Foundation, Inc.\n+   Copyright (C) 2002, 2004, 2005  Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -40,6 +40,7 @@\n import java.awt.Component;\n import java.awt.Graphics;\n import java.awt.Image;\n+import java.awt.MediaTracker;\n import java.awt.Toolkit;\n import java.awt.image.ImageObserver;\n import java.io.Serializable;\n@@ -50,10 +51,23 @@\n   implements Icon, Serializable\n {\n   private static final long serialVersionUID = 532615968316031794L;\n+\n+  /** A dummy Component that is used in the MediaTracker. */\n+  protected static Component component = new Component(){};\n+\n+  /** The MediaTracker used to monitor the loading of images. */\n+  protected static MediaTracker tracker = new MediaTracker(component);\n+\n+  /** The ID that is used in the tracker. */\n+  private static int id;\n+\n   Image image;\n   String description;\n   ImageObserver observer;\n \n+  /** The image loading status. */\n+  private int loadStatus;\n+\n   public ImageIcon()\n   {\n   }\n@@ -95,8 +109,8 @@ public ImageIcon(Image image)\n \n   public ImageIcon(Image image, String description)\n   {\n-    this.image = Toolkit.getDefaultToolkit().createImage(image.getSource());\n-    this.description = description;\n+    setImage(image);\n+    setDescription(description);\n   }\n     \n   public ImageObserver getImageObserver()\n@@ -116,7 +130,8 @@ public Image getImage()\n \n   public void setImage(Image image)\n   {\n-    this.image = Toolkit.getDefaultToolkit().createImage(image.getSource());\n+    loadImage(image);\n+    this.image = image;\n   }\n \n   public String getDescription()\n@@ -143,4 +158,41 @@ public void paintIcon(Component c, Graphics g, int x, int y)\n   {\n     g.drawImage(image, x, y, observer != null ? observer : c);\n   }\n+\n+  /**\n+   * Loads the image and blocks until the loading operation is finished.\n+   *\n+   * @param image the image to be loaded\n+   */\n+  protected void loadImage(Image image)\n+  {\n+    try\n+      {\n+\ttracker.addImage(image, id);\n+\tid++;\n+\ttracker.waitForID(id - 1);\n+      }\n+    catch (InterruptedException ex)\n+      {\n+\t; // ignore this for now\n+      }\n+    finally\n+      {\n+\tloadStatus = tracker.statusID(id - 1, false);\n+      }\n+  }\n+\n+  /**\n+   * Returns the load status of the icon image.\n+   *\n+   * @return the load status of the icon image\n+   *\n+   * @see {@link MediaTracker.COMPLETE}\n+   * @see {@link MediaTracker.ABORTED}\n+   * @see {@link MediaTracker.ERRORED}\n+   */\n+  public int getImageLoadStatus()\n+  {\n+    return loadStatus;\n+  }\n }"}]}