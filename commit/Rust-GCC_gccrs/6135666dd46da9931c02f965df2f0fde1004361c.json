{"sha": "6135666dd46da9931c02f965df2f0fde1004361c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjEzNTY2NmRkNDZkYTk5MzFjMDJmOTY1ZGYyZjBmZGUxMDA0MzYxYw==", "commit": {"author": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2015-07-23T21:49:34Z"}, "committer": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2015-07-23T21:49:34Z"}, "message": "i386.c (ix86_build_builtin_va_list_64): Rename from ix86_build_builtin_va_list_abi.\n\n\t* config/i386/i386.c (ix86_build_builtin_va_list_64): Rename\n\tfrom ix86_build_builtin_va_list_abi.  Handle only 64bit non-MS_ABI\n\ttargets here.\n\t(ix86_build_builtin_va_list): Rewrite sysv_va_list_type_node and\n\tms_va_list_type_node initialization.\n\nFrom-SVN: r226127", "tree": {"sha": "2056906bea8b2aaec8521be7ee79b9028eba026e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2056906bea8b2aaec8521be7ee79b9028eba026e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6135666dd46da9931c02f965df2f0fde1004361c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6135666dd46da9931c02f965df2f0fde1004361c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6135666dd46da9931c02f965df2f0fde1004361c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6135666dd46da9931c02f965df2f0fde1004361c/comments", "author": null, "committer": null, "parents": [{"sha": "eb3982c17ef6db63b43eda4b346f34d4a2bd2465", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/eb3982c17ef6db63b43eda4b346f34d4a2bd2465", "html_url": "https://github.com/Rust-GCC/gccrs/commit/eb3982c17ef6db63b43eda4b346f34d4a2bd2465"}], "stats": {"total": 69, "additions": 26, "deletions": 43}, "files": [{"sha": "a1fd494156dfa67dcf31a68f24a075a75cd42a12", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 1, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6135666dd46da9931c02f965df2f0fde1004361c/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6135666dd46da9931c02f965df2f0fde1004361c/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=6135666dd46da9931c02f965df2f0fde1004361c", "patch": "@@ -1,4 +1,12 @@\n-2015-01-12  Jeff Law  <law@redhat.com>\n+2015-07-23  Uros Bizjak  <ubizjak@gmail.com>\n+\n+\t* config/i386/i386.c (ix86_build_builtin_va_list_64): Rename\n+\tfrom ix86_build_builtin_va_list_abi.  Handle only 64bit non-MS_ABI\n+\ttargets here.\n+\t(ix86_build_builtin_va_list): Rewrite sysv_va_list_type_node and\n+\tms_va_list_type_node initialization.\n+\n+2015-07-23  Jeff Law  <law@redhat.com>\n \n \tPR lto/66752\n \t* tree-ssa-threadedge.c (simplify_conrol_stmt_condition): If we are"}, {"sha": "d6b4508c880d70fdd212d38b4021dc03a71432e5", "filename": "gcc/config/i386/i386.c", "status": "modified", "additions": 17, "deletions": 42, "changes": 59, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6135666dd46da9931c02f965df2f0fde1004361c/gcc%2Fconfig%2Fi386%2Fi386.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6135666dd46da9931c02f965df2f0fde1004361c/gcc%2Fconfig%2Fi386%2Fi386.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.c?ref=6135666dd46da9931c02f965df2f0fde1004361c", "patch": "@@ -8744,18 +8744,11 @@ ix86_return_in_memory (const_tree type, const_tree fntype ATTRIBUTE_UNUSED)\n \f\n /* Create the va_list data type.  */\n \n-/* Returns the calling convention specific va_list date type.\n-   The argument ABI can be DEFAULT_ABI, MS_ABI, or SYSV_ABI.  */\n-\n static tree\n-ix86_build_builtin_va_list_abi (enum calling_abi abi)\n+ix86_build_builtin_va_list_64 (void)\n {\n   tree f_gpr, f_fpr, f_ovf, f_sav, record, type_decl;\n \n-  /* For i386 we use plain pointer to argument area.  */\n-  if (!TARGET_64BIT || abi == MS_ABI)\n-    return build_pointer_type (char_type_node);\n-\n   record = lang_hooks.types.make_type (RECORD_TYPE);\n   type_decl = build_decl (BUILTINS_LOCATION,\n \t\t\t  TYPE_DECL, get_identifier (\"__va_list_tag\"), record);\n@@ -8800,43 +8793,25 @@ ix86_build_builtin_va_list_abi (enum calling_abi abi)\n static tree\n ix86_build_builtin_va_list (void)\n {\n-  tree ret = ix86_build_builtin_va_list_abi (ix86_abi);\n-\n-  /* Initialize abi specific va_list builtin types.  */\n   if (TARGET_64BIT)\n     {\n-      tree t;\n-      if (ix86_abi == MS_ABI)\n-        {\n-          t = ix86_build_builtin_va_list_abi (SYSV_ABI);\n-          if (TREE_CODE (t) != RECORD_TYPE)\n-            t = build_variant_type_copy (t);\n-          sysv_va_list_type_node = t;\n-        }\n-      else\n-        {\n-          t = ret;\n-          if (TREE_CODE (t) != RECORD_TYPE)\n-            t = build_variant_type_copy (t);\n-          sysv_va_list_type_node = t;\n-        }\n-      if (ix86_abi != MS_ABI)\n-        {\n-          t = ix86_build_builtin_va_list_abi (MS_ABI);\n-          if (TREE_CODE (t) != RECORD_TYPE)\n-            t = build_variant_type_copy (t);\n-          ms_va_list_type_node = t;\n-        }\n-      else\n-        {\n-          t = ret;\n-          if (TREE_CODE (t) != RECORD_TYPE)\n-            t = build_variant_type_copy (t);\n-          ms_va_list_type_node = t;\n-        }\n-    }\n+      /* Initialize ABI specific va_list builtin types.  */\n+      tree sysv_va_list, ms_va_list;\n \n-  return ret;\n+      sysv_va_list = ix86_build_builtin_va_list_64 ();\n+      sysv_va_list_type_node = build_variant_type_copy (sysv_va_list);\n+\t\n+      /* For MS_ABI we use plain pointer to argument area.  */\n+      ms_va_list = build_pointer_type (char_type_node);\n+      ms_va_list_type_node = build_variant_type_copy (ms_va_list);\n+\n+      return (ix86_abi == MS_ABI) ? ms_va_list : sysv_va_list;\n+    }\n+  else\n+    {\n+      /* For i386 we use plain pointer to argument area.  */\n+      return build_pointer_type (char_type_node);\n+    }\n }\n \n /* Worker function for TARGET_SETUP_INCOMING_VARARGS.  */"}]}