{"sha": "a82d6da5fcc41ade40261bca65c7717686c1ac9f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTgyZDZkYTVmY2M0MWFkZTQwMjYxYmNhNjVjNzcxNzY4NmMxYWM5Zg==", "commit": {"author": {"name": "Mark Mitchell", "email": "mark@codesourcery.com", "date": "2002-12-01T20:27:37Z"}, "committer": {"name": "Mark Mitchell", "email": "mmitchel@gcc.gnu.org", "date": "2002-12-01T20:27:37Z"}, "message": "re PR c++/8727 (compiler confused by inheritance from an anonymous struct)\n\n\tPR c++/8727\n\t* g++.dg/inherit/typeinfo1.C: New test.\n\n\tPR c++/8663\n\t* g++.dg/inherit/typedef1.C: New test.\n\n\tPR c++/8727\n\t* cp-tree.h (lang_type_class): Add typeinfo_var.\n\t(CLASSTYPE_TYPEINFO_VAR): New macro.\n\t* rtti.c (get_tinfo_decl): Use it.\n\n\tPR c++/8663\n\t* init.c (expand_member_init): Always get the main variant of a\n\tbase class.\n\nFrom-SVN: r59694", "tree": {"sha": "949e579a2127ed5b717cc2f0c87ffab7e3cf700e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/949e579a2127ed5b717cc2f0c87ffab7e3cf700e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a82d6da5fcc41ade40261bca65c7717686c1ac9f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a82d6da5fcc41ade40261bca65c7717686c1ac9f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a82d6da5fcc41ade40261bca65c7717686c1ac9f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a82d6da5fcc41ade40261bca65c7717686c1ac9f/comments", "author": null, "committer": null, "parents": [{"sha": "558bb2c45e1eb7ef91a7ed959aad41b7b2eb6cf9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/558bb2c45e1eb7ef91a7ed959aad41b7b2eb6cf9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/558bb2c45e1eb7ef91a7ed959aad41b7b2eb6cf9"}], "stats": {"total": 66, "additions": 65, "deletions": 1}, "files": [{"sha": "8c784806e35e08b32f299dd435c0e552bfab9600", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a82d6da5fcc41ade40261bca65c7717686c1ac9f/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a82d6da5fcc41ade40261bca65c7717686c1ac9f/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=a82d6da5fcc41ade40261bca65c7717686c1ac9f", "patch": "@@ -1,3 +1,14 @@\n+2002-12-01  Mark Mitchell  <mark@codesourcery.com>\n+\n+\tPR c++/8727\n+\t* cp-tree.h (lang_type_class): Add typeinfo_var.\n+\t(CLASSTYPE_TYPEINFO_VAR): New macro.\n+\t* rtti.c (get_tinfo_decl): Use it.\n+\n+\tPR c++/8663\n+\t* init.c (expand_member_init): Always get the main variant of a\n+\tbase class.\n+\n 2002-12-01  Mark Mitchell  <mark@codesourcery.com>\n \n \tPR c++/8332"}, {"sha": "0c8c37a7e20eb17a5ff9e587c15d76ba35cd51ab", "filename": "gcc/cp/cp-tree.h", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a82d6da5fcc41ade40261bca65c7717686c1ac9f/gcc%2Fcp%2Fcp-tree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a82d6da5fcc41ade40261bca65c7717686c1ac9f/gcc%2Fcp%2Fcp-tree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcp-tree.h?ref=a82d6da5fcc41ade40261bca65c7717686c1ac9f", "patch": "@@ -1159,6 +1159,7 @@ struct lang_type_class GTY(())\n   tree vfields;\n   tree vcall_indices;\n   tree vtables;\n+  tree typeinfo_var;\n   tree vbases;\n   tree tags;\n   tree as_base;\n@@ -1637,6 +1638,12 @@ struct lang_type GTY(())\n #define CLASSTYPE_VTABLES(NODE) \\\n   (LANG_TYPE_CLASS_CHECK (NODE)->vtables)\n \n+/* The std::type_info variable representing this class, or NULL if no\n+   such variable has been created.  This field is only set for the\n+   TYPE_MAIN_VARIANT of the class.  */\n+#define CLASSTYPE_TYPEINFO_VAR(NODE) \\\n+  (LANG_TYPE_CLASS_CHECK (NODE)->typeinfo_var)\n+\n /* Accessor macros for the vfield slots in structures.  */\n \n /* List of virtual table fields that this type contains (both the primary"}, {"sha": "39d4c57047e4c8252d430ab93a816eccc710963e", "filename": "gcc/cp/init.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a82d6da5fcc41ade40261bca65c7717686c1ac9f/gcc%2Fcp%2Finit.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a82d6da5fcc41ade40261bca65c7717686c1ac9f/gcc%2Fcp%2Finit.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Finit.c?ref=a82d6da5fcc41ade40261bca65c7717686c1ac9f", "patch": "@@ -967,7 +967,7 @@ expand_member_init (tree name, tree init)\n     }\n   else if (TYPE_P (name))\n     {\n-      basetype = name;\n+      basetype = TYPE_MAIN_VARIANT (name);\n       name = TYPE_NAME (name);\n     }\n   else if (TREE_CODE (name) == TYPE_DECL)"}, {"sha": "7540b5c0e72b0fd735b542181693d46ced22010f", "filename": "gcc/cp/rtti.c", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a82d6da5fcc41ade40261bca65c7717686c1ac9f/gcc%2Fcp%2Frtti.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a82d6da5fcc41ade40261bca65c7717686c1ac9f/gcc%2Fcp%2Frtti.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Frtti.c?ref=a82d6da5fcc41ade40261bca65c7717686c1ac9f", "patch": "@@ -328,6 +328,15 @@ get_tinfo_decl (type)\n     type = build_function_type (TREE_TYPE (type),\n \t\t\t\tTREE_CHAIN (TYPE_ARG_TYPES (type)));\n \n+  /* For a class type, the variable is cached in the type node\n+     itself.  */\n+  if (CLASS_TYPE_P (type))\n+    {\n+      d = CLASSTYPE_TYPEINFO_VAR (TYPE_MAIN_VARIANT (type));\n+      if (d)\n+\treturn d;\n+    }\n+    \n   name = mangle_typeinfo_for_type (type);\n \n   d = IDENTIFIER_GLOBAL_VALUE (name);\n@@ -347,6 +356,9 @@ get_tinfo_decl (type)\n \n       pushdecl_top_level (d);\n \n+      if (CLASS_TYPE_P (type))\n+\tCLASSTYPE_TYPEINFO_VAR (TYPE_MAIN_VARIANT (type)) = d;\n+\n       /* Remember the type it is for.  */\n       TREE_TYPE (name) = type;\n     }"}, {"sha": "844d5926731e15bf5c3519bc671626ee0189a28b", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a82d6da5fcc41ade40261bca65c7717686c1ac9f/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a82d6da5fcc41ade40261bca65c7717686c1ac9f/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=a82d6da5fcc41ade40261bca65c7717686c1ac9f", "patch": "@@ -1,3 +1,11 @@\n+2002-12-01  Mark Mitchell  <mark@codesourcery.com>\n+\n+\tPR c++/8727\n+\t* g++.dg/inherit/typeinfo1.C: New test.\n+\t\n+\tPR c++/8663\n+\t* g++.dg/inherit/typedef1.C: New test.\n+\n 2002-11-30  Mark Mitchell  <mark@codesourcery.com>\n \n \tPR c++/8332"}, {"sha": "20da08b2c438a7088bd3ea599b6173a1b82bbe8d", "filename": "gcc/testsuite/g++.dg/inherit/typedef1.C", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a82d6da5fcc41ade40261bca65c7717686c1ac9f/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Finherit%2Ftypedef1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a82d6da5fcc41ade40261bca65c7717686c1ac9f/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Finherit%2Ftypedef1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Finherit%2Ftypedef1.C?ref=a82d6da5fcc41ade40261bca65c7717686c1ac9f", "patch": "@@ -0,0 +1,8 @@\n+namespace NS {\n+class X {};\n+typedef X Y;\n+}\n+\n+struct Base : virtual public NS::Y {\n+  Base() : NS::Y() {}\n+};"}, {"sha": "794776ecbe84bcf77524ef0b664880ca2fdc8321", "filename": "gcc/testsuite/g++.dg/inherit/typeinfo1.C", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a82d6da5fcc41ade40261bca65c7717686c1ac9f/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Finherit%2Ftypeinfo1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a82d6da5fcc41ade40261bca65c7717686c1ac9f/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Finherit%2Ftypeinfo1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Finherit%2Ftypeinfo1.C?ref=a82d6da5fcc41ade40261bca65c7717686c1ac9f", "patch": "@@ -0,0 +1,18 @@\n+typedef struct {\n+   virtual const char *blah() {\n+     return \"Heya::blah\";\n+   }\n+} Heya;\n+\n+struct Grok : public Heya {\n+   virtual const char *blah() {\n+     return \"Grok::blah\";\n+   }\n+};\n+\n+int main() {\n+   Grok *g = new Grok();\n+   delete g;\n+   return 0;\n+}\n+"}]}