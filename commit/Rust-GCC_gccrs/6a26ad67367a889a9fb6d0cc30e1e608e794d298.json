{"sha": "6a26ad67367a889a9fb6d0cc30e1e608e794d298", "node_id": "C_kwDOANBUbNoAKDZhMjZhZDY3MzY3YTg4OWE5ZmI2ZDBjYzMwZTFlNjA4ZTc5NGQyOTg", "commit": {"author": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2022-01-19T14:20:52Z"}, "committer": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2022-01-19T14:23:13Z"}, "message": "libstdc++: Fix libbacktrace build files\n\nThis makes it possible to combine --enable-libstdcxx-debug with\n--enable-libstdcxx-backtrace, by adding a rule to src/Makefile to copy\nthe backtrace-supported.h header into the src/debug/libbacktrace\ndirectory.\n\nAdd libbacktrace path to testsuite flags so the tests can link without\nhaving the library installed.\n\nAlso fix some warnings when running automake for the libbacktrace\nmakefile.\n\nUse a per-library CPPFLAGS variable to fix:\n\nsrc/libbacktrace/Makefile.am:38: warning: AM_CPPFLAGS multiply defined in condition TRUE ...\nfragment.am:43: ... 'AM_CPPFLAGS' previously defined here\nsrc/libbacktrace/Makefile.am:32:   'fragment.am' included from here\n\nCreate symlinks to the libbacktrace sources to fix:\n\nsrc/libbacktrace/Makefile.am:55: warning: source file '../../../libbacktrace/atomic.c' is in a subdirectory,\nsrc/libbacktrace/Makefile.am:55: but option 'subdir-objects' is disabled\n\nlibstdc++-v3/ChangeLog:\n\n\t* scripts/testsuite_flags.in: Add src/libbacktrace/.libs to\n\tlinker search paths.\n\t* src/Makefile.am: Fix src/debug/libbacktrace build.\n\t* src/Makefile.in: Regenerate.\n\t* src/libbacktrace/Makefile.am: Use per-library CPPFLAGS\n\tvariable. Use symlinks for the source files.\n\t* src/libbacktrace/Makefile.in: Regenerate.", "tree": {"sha": "4ae46607efde0853bdf926b7ad13f9c2a2e11434", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4ae46607efde0853bdf926b7ad13f9c2a2e11434"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6a26ad67367a889a9fb6d0cc30e1e608e794d298", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6a26ad67367a889a9fb6d0cc30e1e608e794d298", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6a26ad67367a889a9fb6d0cc30e1e608e794d298", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6a26ad67367a889a9fb6d0cc30e1e608e794d298/comments", "author": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f4ca0a53be18dfc7162fd5dcc1e73c4203805e14", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f4ca0a53be18dfc7162fd5dcc1e73c4203805e14", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f4ca0a53be18dfc7162fd5dcc1e73c4203805e14"}], "stats": {"total": 208, "additions": 132, "deletions": 76}, "files": [{"sha": "40dd3d3465e82332d961adb306e57bec465087db", "filename": "libstdc++-v3/scripts/testsuite_flags.in", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6a26ad67367a889a9fb6d0cc30e1e608e794d298/libstdc%2B%2B-v3%2Fscripts%2Ftestsuite_flags.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6a26ad67367a889a9fb6d0cc30e1e608e794d298/libstdc%2B%2B-v3%2Fscripts%2Ftestsuite_flags.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fscripts%2Ftestsuite_flags.in?ref=6a26ad67367a889a9fb6d0cc30e1e608e794d298", "patch": "@@ -78,7 +78,8 @@ case ${query} in\n       ;;\n     --cxxldflags)\n       SECTIONLDFLAGS=\"@SECTION_LDFLAGS@ @LIBICONV@\n-                      -L${BUILD_DIR}/src/filesystem/.libs\"\n+                      -L${BUILD_DIR}/src/filesystem/.libs\n+                      -L${BUILD_DIR}/src/libbacktrace/.libs\"\n       echo ${SECTIONLDFLAGS}\n       ;;\n     *)"}, {"sha": "18f57632c3db9bf0cd36e48e1e3b04fb01a6d046", "filename": "libstdc++-v3/src/Makefile.am", "status": "modified", "additions": 11, "deletions": 1, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6a26ad67367a889a9fb6d0cc30e1e608e794d298/libstdc%2B%2B-v3%2Fsrc%2FMakefile.am", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6a26ad67367a889a9fb6d0cc30e1e608e794d298/libstdc%2B%2B-v3%2Fsrc%2FMakefile.am", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fsrc%2FMakefile.am?ref=6a26ad67367a889a9fb6d0cc30e1e608e794d298", "patch": "@@ -30,8 +30,10 @@ endif\n \n if ENABLE_BACKTRACE\n backtrace_dir = libbacktrace\n+backtrace_supported_h = $(backtrace_dir)/backtrace-supported.h\n else\n backtrace_dir =\n+backtrace_supported_h =\n endif\n \n ## Keep this list sync'd with acinclude.m4:GLIBCXX_CONFIGURE.\n@@ -402,7 +404,15 @@ stamp-debug: Makefile $(foreach dir,$(SUBDIRS),$(dir)/Makefile)\n \tfi; \\\n \techo `date` > stamp-debug;\n \n-build-debug: stamp-debug\n+if ENABLE_BACKTRACE\n+${debugdir}/$(backtrace_supported_h): $(backtrace_supported_h) stamp-debug\n+\tcp $< $@\n+debug_backtrace_supported_h = ${debugdir}/$(backtrace_supported_h)\n+else\n+debug_backtrace_supported_h =\n+endif\n+\n+build-debug: stamp-debug $(debug_backtrace_supported_h)\n \t  (cd ${debugdir}; \\\n \t  mv Makefile Makefile.tmp; \\\n \t  sed -e 's,all-local: all-once,all-local:,' \\"}, {"sha": "eeafb892386d86294e94b18f92aa3bf014d78116", "filename": "libstdc++-v3/src/Makefile.in", "status": "modified", "additions": 8, "deletions": 1, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6a26ad67367a889a9fb6d0cc30e1e608e794d298/libstdc%2B%2B-v3%2Fsrc%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6a26ad67367a889a9fb6d0cc30e1e608e794d298/libstdc%2B%2B-v3%2Fsrc%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fsrc%2FMakefile.in?ref=6a26ad67367a889a9fb6d0cc30e1e608e794d298", "patch": "@@ -482,6 +482,8 @@ AM_CPPFLAGS = $(GLIBCXX_INCLUDES) $(CPPFLAGS)\n @ENABLE_FILESYSTEM_TS_TRUE@filesystem_dir = filesystem\n @ENABLE_BACKTRACE_FALSE@backtrace_dir = \n @ENABLE_BACKTRACE_TRUE@backtrace_dir = libbacktrace\n+@ENABLE_BACKTRACE_FALSE@backtrace_supported_h = \n+@ENABLE_BACKTRACE_TRUE@backtrace_supported_h = $(backtrace_dir)/backtrace-supported.h\n SUBDIRS = c++98 c++11 c++17 c++20 $(filesystem_dir) $(backtrace_dir)\n @VTV_CYGMIN_FALSE@toolexeclib_LTLIBRARIES = libstdc++.la\n \n@@ -668,6 +670,8 @@ CXXLINK = \\\n # Build a debug variant.\n # Take care to fix all possibly-relative paths.\n debugdir = ${glibcxx_builddir}/src/debug\n+@ENABLE_BACKTRACE_FALSE@debug_backtrace_supported_h = \n+@ENABLE_BACKTRACE_TRUE@debug_backtrace_supported_h = ${debugdir}/$(backtrace_supported_h)\n all: all-recursive\n \n .SUFFIXES:\n@@ -1125,7 +1129,10 @@ stamp-debug: Makefile $(foreach dir,$(SUBDIRS),$(dir)/Makefile)\n \tfi; \\\n \techo `date` > stamp-debug;\n \n-build-debug: stamp-debug\n+@ENABLE_BACKTRACE_TRUE@${debugdir}/$(backtrace_supported_h): $(backtrace_supported_h) stamp-debug\n+@ENABLE_BACKTRACE_TRUE@\tcp $< $@\n+\n+build-debug: stamp-debug $(debug_backtrace_supported_h)\n \t  (cd ${debugdir}; \\\n \t  mv Makefile Makefile.tmp; \\\n \t  sed -e 's,all-local: all-once,all-local:,' \\"}, {"sha": "0f1143507f30641d2497a098ddc5bcd2abe4f60c", "filename": "libstdc++-v3/src/libbacktrace/Makefile.am", "status": "modified", "additions": 36, "deletions": 20, "changes": 56, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6a26ad67367a889a9fb6d0cc30e1e608e794d298/libstdc%2B%2B-v3%2Fsrc%2Flibbacktrace%2FMakefile.am", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6a26ad67367a889a9fb6d0cc30e1e608e794d298/libstdc%2B%2B-v3%2Fsrc%2Flibbacktrace%2FMakefile.am", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fsrc%2Flibbacktrace%2FMakefile.am?ref=6a26ad67367a889a9fb6d0cc30e1e608e794d298", "patch": "@@ -35,9 +35,12 @@ toolexeclib_LTLIBRARIES = libstdc++_libbacktrace.la\n \n ACLOCAL_AMFLAGS = -I ../.. -I ../../config\n \n-AM_CPPFLAGS = -I $(top_srcdir)/../include -I $(top_srcdir)/../libgcc \\\n+# This will be used instead of the common AM_CPPFLAGS from fragment.am\n+libstdc___libbacktrace_la_CPPFLAGS = \\\n+\t-I $(top_srcdir)/../include -I $(top_srcdir)/../libgcc \\\n \t-I ../../../libgcc -I .. -I $(top_srcdir) \\\n \t-I $(top_srcdir)/../libbacktrace \\\n+\t-I $(top_srcdir)/../libiberty \\\n \t-include $(top_srcdir)/src/libbacktrace/backtrace-rename.h \\\n \t$(BACKTRACE_CPPFLAGS)\n \n@@ -50,42 +53,55 @@ AM_CFLAGS += $(EXTRA_CFLAGS)\n AM_CXXFLAGS = $(CXX_WARN_FLAGS) -fno-rtti -fno-exceptions\n AM_CXXFLAGS += $(EXTRA_CXXFLAGS)\n \n+obj_prefix = std_stacktrace\n+\n+# Each FILE.c in SOURCES will be compiled to SHORTNAME-FILE.o\n+libstdc___libbacktrace_la_SHORTNAME = $(obj_prefix)\n+\n libstdc___libbacktrace_la_SOURCES = \\\n-\t../../../libbacktrace/backtrace.h \\\n-\t../../../libbacktrace/atomic.c \\\n-\t../../../libbacktrace/dwarf.c \\\n-\t../../../libbacktrace/fileline.c \\\n-\t../../../libbacktrace/internal.h \\\n-\t../../../libbacktrace/posix.c \\\n-\t../../../libbacktrace/sort.c \\\n-\t../../../libbacktrace/simple.c \\\n-\t../../../libbacktrace/state.c \\\n-\t../../../libiberty/cp-demangle.c\n+\tatomic.c \\\n+\tdwarf.c \\\n+\tfileline.c \\\n+\tposix.c \\\n+\tsort.c \\\n+\tsimple.c \\\n+\tstate.c \\\n+\tcp-demangle.c\n \n FORMAT_FILES = \\\n-\t../../../libbacktrace/elf.c \\\n-\t../../../libbacktrace/unknown.c\n+\telf.c \\\n+\tunknown.c\n \n VIEW_FILES = \\\n-\t../../../libbacktrace/read.c \\\n-\t../../../libbacktrace/mmapio.c\n+\tread.c \\\n+\tmmapio.c\n \n ALLOC_FILES = \\\n-\t../../../libbacktrace/alloc.c \\\n-\t../../../libbacktrace/mmap.c\n+\talloc.c \\\n+\tmmap.c\n \n EXTRA_libstdc___libbacktrace_la_SOURCES = \\\n \t$(FORMAT_FILES) \\\n \t$(VIEW_FILES) \\\n \t$(ALLOC_FILES)\n \n+# These three files are chosen by configure and added to the link.\n+# We need the SHORTNAME- prefix so that they use the custom CPPFLAGS above.\n libstdc___libbacktrace_la_LIBADD = \\\n-\t$(FORMAT_FILE) \\\n-\t$(VIEW_FILE) \\\n-\t$(ALLOC_FILE)\n+\t$(obj_prefix)-$(FORMAT_FILE) \\\n+\t$(obj_prefix)-$(VIEW_FILE) \\\n+\t$(obj_prefix)-$(ALLOC_FILE)\n \n libstdc___libbacktrace_la_DEPENDENCIES = $(libstdc___libbacktrace_la_LIBADD)\n \n+# Use symlinks for the sources\n+\n+%.c: ../../../libbacktrace/%.c\n+\t$(LN_S) $< $@\n+\n+cp-demangle.c: ../../../libiberty/cp-demangle.c\n+\t$(LN_S) $< $@\n+\n LTCOMPILE = \\\n \t$(LIBTOOL) --tag CC --tag disable-shared \\\n \t$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \\"}, {"sha": "7545894d59a0c0073568d08b4d1610dfb0d76e37", "filename": "libstdc++-v3/src/libbacktrace/Makefile.in", "status": "modified", "additions": 75, "deletions": 53, "changes": 128, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6a26ad67367a889a9fb6d0cc30e1e608e794d298/libstdc%2B%2B-v3%2Fsrc%2Flibbacktrace%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6a26ad67367a889a9fb6d0cc30e1e608e794d298/libstdc%2B%2B-v3%2Fsrc%2Flibbacktrace%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fsrc%2Flibbacktrace%2FMakefile.in?ref=6a26ad67367a889a9fb6d0cc30e1e608e794d298", "patch": "@@ -180,9 +180,11 @@ am__uninstall_files_from_dir = { \\\n   }\n am__installdirs = \"$(DESTDIR)$(toolexeclibdir)\"\n LTLIBRARIES = $(toolexeclib_LTLIBRARIES)\n-am__DEPENDENCIES_1 =\n-am_libstdc___libbacktrace_la_OBJECTS = atomic.lo dwarf.lo fileline.lo \\\n-\tposix.lo sort.lo simple.lo state.lo cp-demangle.lo\n+am_libstdc___libbacktrace_la_OBJECTS = $(obj_prefix)-atomic.lo \\\n+\t$(obj_prefix)-dwarf.lo $(obj_prefix)-fileline.lo \\\n+\t$(obj_prefix)-posix.lo $(obj_prefix)-sort.lo \\\n+\t$(obj_prefix)-simple.lo $(obj_prefix)-state.lo \\\n+\t$(obj_prefix)-cp-demangle.lo\n libstdc___libbacktrace_la_OBJECTS =  \\\n \t$(am_libstdc___libbacktrace_la_OBJECTS)\n AM_V_lt = $(am__v_lt_@AM_V@)\n@@ -479,52 +481,64 @@ CONFIG_CXXFLAGS = \\\n WARN_CXXFLAGS = \\\n \t$(WARN_FLAGS) $(WERROR_FLAG) -fdiagnostics-show-location=once \n \n-AM_CPPFLAGS = -I $(top_srcdir)/../include -I $(top_srcdir)/../libgcc \\\n+\n+# -I/-D flags to pass when compiling.\n+AM_CPPFLAGS = $(GLIBCXX_INCLUDES) $(CPPFLAGS)\n+toolexeclib_LTLIBRARIES = libstdc++_libbacktrace.la\n+ACLOCAL_AMFLAGS = -I ../.. -I ../../config\n+\n+# This will be used instead of the common AM_CPPFLAGS from fragment.am\n+libstdc___libbacktrace_la_CPPFLAGS = \\\n+\t-I $(top_srcdir)/../include -I $(top_srcdir)/../libgcc \\\n \t-I ../../../libgcc -I .. -I $(top_srcdir) \\\n \t-I $(top_srcdir)/../libbacktrace \\\n+\t-I $(top_srcdir)/../libiberty \\\n \t-include $(top_srcdir)/src/libbacktrace/backtrace-rename.h \\\n \t$(BACKTRACE_CPPFLAGS)\n \n-toolexeclib_LTLIBRARIES = libstdc++_libbacktrace.la\n-ACLOCAL_AMFLAGS = -I ../.. -I ../../config\n C_WARN_FLAGS = $(WARN_FLAGS) -Wstrict-prototypes -Wmissing-prototypes -Wold-style-definition -Wno-unused-but-set-variable\n CXX_WARN_FLAGS = $(WARN_FLAGS) -Wno-unused-parameter\n AM_CFLAGS = $(C_WARN_FLAGS) $(EXTRA_CFLAGS)\n AM_CXXFLAGS = $(CXX_WARN_FLAGS) -fno-rtti -fno-exceptions \\\n \t$(EXTRA_CXXFLAGS)\n+obj_prefix = std_stacktrace\n+\n+# Each FILE.c in SOURCES will be compiled to SHORTNAME-FILE.o\n+libstdc___libbacktrace_la_SHORTNAME = $(obj_prefix)\n libstdc___libbacktrace_la_SOURCES = \\\n-\t../../../libbacktrace/backtrace.h \\\n-\t../../../libbacktrace/atomic.c \\\n-\t../../../libbacktrace/dwarf.c \\\n-\t../../../libbacktrace/fileline.c \\\n-\t../../../libbacktrace/internal.h \\\n-\t../../../libbacktrace/posix.c \\\n-\t../../../libbacktrace/sort.c \\\n-\t../../../libbacktrace/simple.c \\\n-\t../../../libbacktrace/state.c \\\n-\t../../../libiberty/cp-demangle.c\n+\tatomic.c \\\n+\tdwarf.c \\\n+\tfileline.c \\\n+\tposix.c \\\n+\tsort.c \\\n+\tsimple.c \\\n+\tstate.c \\\n+\tcp-demangle.c\n \n FORMAT_FILES = \\\n-\t../../../libbacktrace/elf.c \\\n-\t../../../libbacktrace/unknown.c\n+\telf.c \\\n+\tunknown.c\n \n VIEW_FILES = \\\n-\t../../../libbacktrace/read.c \\\n-\t../../../libbacktrace/mmapio.c\n+\tread.c \\\n+\tmmapio.c\n \n ALLOC_FILES = \\\n-\t../../../libbacktrace/alloc.c \\\n-\t../../../libbacktrace/mmap.c\n+\talloc.c \\\n+\tmmap.c\n \n EXTRA_libstdc___libbacktrace_la_SOURCES = \\\n \t$(FORMAT_FILES) \\\n \t$(VIEW_FILES) \\\n \t$(ALLOC_FILES)\n \n+\n+# These three files are chosen by configure and added to the link.\n+# We need the SHORTNAME- prefix so that they use the custom CPPFLAGS above.\n libstdc___libbacktrace_la_LIBADD = \\\n-\t$(FORMAT_FILE) \\\n-\t$(VIEW_FILE) \\\n-\t$(ALLOC_FILE)\n+\t$(obj_prefix)-$(FORMAT_FILE) \\\n+\t$(obj_prefix)-$(VIEW_FILE) \\\n+\t$(obj_prefix)-$(ALLOC_FILE)\n \n libstdc___libbacktrace_la_DEPENDENCIES = $(libstdc___libbacktrace_la_LIBADD)\n LTCOMPILE = \\\n@@ -630,47 +644,47 @@ distclean-compile:\n .c.lo:\n \t$(AM_V_CC)$(LTCOMPILE) -c -o $@ $<\n \n-atomic.lo: ../../../libbacktrace/atomic.c\n-\t$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o atomic.lo `test -f '../../../libbacktrace/atomic.c' || echo '$(srcdir)/'`../../../libbacktrace/atomic.c\n+$(obj_prefix)-atomic.lo: atomic.c\n+\t$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libstdc___libbacktrace_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o $(obj_prefix)-atomic.lo `test -f 'atomic.c' || echo '$(srcdir)/'`atomic.c\n \n-dwarf.lo: ../../../libbacktrace/dwarf.c\n-\t$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o dwarf.lo `test -f '../../../libbacktrace/dwarf.c' || echo '$(srcdir)/'`../../../libbacktrace/dwarf.c\n+$(obj_prefix)-dwarf.lo: dwarf.c\n+\t$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libstdc___libbacktrace_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o $(obj_prefix)-dwarf.lo `test -f 'dwarf.c' || echo '$(srcdir)/'`dwarf.c\n \n-fileline.lo: ../../../libbacktrace/fileline.c\n-\t$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o fileline.lo `test -f '../../../libbacktrace/fileline.c' || echo '$(srcdir)/'`../../../libbacktrace/fileline.c\n+$(obj_prefix)-fileline.lo: fileline.c\n+\t$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libstdc___libbacktrace_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o $(obj_prefix)-fileline.lo `test -f 'fileline.c' || echo '$(srcdir)/'`fileline.c\n \n-posix.lo: ../../../libbacktrace/posix.c\n-\t$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o posix.lo `test -f '../../../libbacktrace/posix.c' || echo '$(srcdir)/'`../../../libbacktrace/posix.c\n+$(obj_prefix)-posix.lo: posix.c\n+\t$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libstdc___libbacktrace_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o $(obj_prefix)-posix.lo `test -f 'posix.c' || echo '$(srcdir)/'`posix.c\n \n-sort.lo: ../../../libbacktrace/sort.c\n-\t$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o sort.lo `test -f '../../../libbacktrace/sort.c' || echo '$(srcdir)/'`../../../libbacktrace/sort.c\n+$(obj_prefix)-sort.lo: sort.c\n+\t$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libstdc___libbacktrace_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o $(obj_prefix)-sort.lo `test -f 'sort.c' || echo '$(srcdir)/'`sort.c\n \n-simple.lo: ../../../libbacktrace/simple.c\n-\t$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o simple.lo `test -f '../../../libbacktrace/simple.c' || echo '$(srcdir)/'`../../../libbacktrace/simple.c\n+$(obj_prefix)-simple.lo: simple.c\n+\t$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libstdc___libbacktrace_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o $(obj_prefix)-simple.lo `test -f 'simple.c' || echo '$(srcdir)/'`simple.c\n \n-state.lo: ../../../libbacktrace/state.c\n-\t$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o state.lo `test -f '../../../libbacktrace/state.c' || echo '$(srcdir)/'`../../../libbacktrace/state.c\n+$(obj_prefix)-state.lo: state.c\n+\t$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libstdc___libbacktrace_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o $(obj_prefix)-state.lo `test -f 'state.c' || echo '$(srcdir)/'`state.c\n \n-cp-demangle.lo: ../../../libiberty/cp-demangle.c\n-\t$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o cp-demangle.lo `test -f '../../../libiberty/cp-demangle.c' || echo '$(srcdir)/'`../../../libiberty/cp-demangle.c\n+$(obj_prefix)-cp-demangle.lo: cp-demangle.c\n+\t$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libstdc___libbacktrace_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o $(obj_prefix)-cp-demangle.lo `test -f 'cp-demangle.c' || echo '$(srcdir)/'`cp-demangle.c\n \n-elf.lo: ../../../libbacktrace/elf.c\n-\t$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o elf.lo `test -f '../../../libbacktrace/elf.c' || echo '$(srcdir)/'`../../../libbacktrace/elf.c\n+$(obj_prefix)-elf.lo: elf.c\n+\t$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libstdc___libbacktrace_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o $(obj_prefix)-elf.lo `test -f 'elf.c' || echo '$(srcdir)/'`elf.c\n \n-unknown.lo: ../../../libbacktrace/unknown.c\n-\t$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o unknown.lo `test -f '../../../libbacktrace/unknown.c' || echo '$(srcdir)/'`../../../libbacktrace/unknown.c\n+$(obj_prefix)-unknown.lo: unknown.c\n+\t$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libstdc___libbacktrace_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o $(obj_prefix)-unknown.lo `test -f 'unknown.c' || echo '$(srcdir)/'`unknown.c\n \n-read.lo: ../../../libbacktrace/read.c\n-\t$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o read.lo `test -f '../../../libbacktrace/read.c' || echo '$(srcdir)/'`../../../libbacktrace/read.c\n+$(obj_prefix)-read.lo: read.c\n+\t$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libstdc___libbacktrace_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o $(obj_prefix)-read.lo `test -f 'read.c' || echo '$(srcdir)/'`read.c\n \n-mmapio.lo: ../../../libbacktrace/mmapio.c\n-\t$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o mmapio.lo `test -f '../../../libbacktrace/mmapio.c' || echo '$(srcdir)/'`../../../libbacktrace/mmapio.c\n+$(obj_prefix)-mmapio.lo: mmapio.c\n+\t$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libstdc___libbacktrace_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o $(obj_prefix)-mmapio.lo `test -f 'mmapio.c' || echo '$(srcdir)/'`mmapio.c\n \n-alloc.lo: ../../../libbacktrace/alloc.c\n-\t$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o alloc.lo `test -f '../../../libbacktrace/alloc.c' || echo '$(srcdir)/'`../../../libbacktrace/alloc.c\n+$(obj_prefix)-alloc.lo: alloc.c\n+\t$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libstdc___libbacktrace_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o $(obj_prefix)-alloc.lo `test -f 'alloc.c' || echo '$(srcdir)/'`alloc.c\n \n-mmap.lo: ../../../libbacktrace/mmap.c\n-\t$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o mmap.lo `test -f '../../../libbacktrace/mmap.c' || echo '$(srcdir)/'`../../../libbacktrace/mmap.c\n+$(obj_prefix)-mmap.lo: mmap.c\n+\t$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libstdc___libbacktrace_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o $(obj_prefix)-mmap.lo `test -f 'mmap.c' || echo '$(srcdir)/'`mmap.c\n \n mostlyclean-libtool:\n \t-rm -f *.lo\n@@ -855,6 +869,14 @@ uninstall-am: uninstall-toolexeclibLTLIBRARIES\n .PRECIOUS: Makefile\n \n \n+# Use symlinks for the sources\n+\n+%.c: ../../../libbacktrace/%.c\n+\t$(LN_S) $< $@\n+\n+cp-demangle.c: ../../../libiberty/cp-demangle.c\n+\t$(LN_S) $< $@\n+\n # Tell versions [3.59,3.63) of GNU make to not export all variables.\n # Otherwise a system limit (for SysV at least) may be exceeded.\n .NOEXPORT:"}]}