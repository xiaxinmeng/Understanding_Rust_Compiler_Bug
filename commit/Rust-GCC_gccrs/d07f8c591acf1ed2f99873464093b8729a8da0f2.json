{"sha": "d07f8c591acf1ed2f99873464093b8729a8da0f2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDA3ZjhjNTkxYWNmMWVkMmY5OTg3MzQ2NDA5M2I4NzI5YThkYTBmMg==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2016-11-11T12:53:36Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2016-11-11T12:53:36Z"}, "message": "re PR middle-end/78295 (Spurious -Wuninitialized warning for vector element assignment)\n\n2016-11-11  Richard Biener  <rguenther@suse.de>\n\n\tPR middle-end/78295\n\t* tree-ssa-uninit.c (warn_uninitialized_vars): Do not warn\n\tabout uninitialized destination arg of BIT_INSERT_EXPR.\n\n\t* gcc.dg/uninit-pr78295.c: New testcase.\n\nFrom-SVN: r242068", "tree": {"sha": "0252505042f9bed107f88180981e1af3b6ada3e7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0252505042f9bed107f88180981e1af3b6ada3e7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d07f8c591acf1ed2f99873464093b8729a8da0f2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d07f8c591acf1ed2f99873464093b8729a8da0f2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d07f8c591acf1ed2f99873464093b8729a8da0f2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d07f8c591acf1ed2f99873464093b8729a8da0f2/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "495d8b0f033533909bc9bcc4aa246864ccb9136b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/495d8b0f033533909bc9bcc4aa246864ccb9136b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/495d8b0f033533909bc9bcc4aa246864ccb9136b"}], "stats": {"total": 32, "additions": 32, "deletions": 0}, "files": [{"sha": "5ca356d7b1399ccc3dccfb5bb81cbba1906ff281", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d07f8c591acf1ed2f99873464093b8729a8da0f2/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d07f8c591acf1ed2f99873464093b8729a8da0f2/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=d07f8c591acf1ed2f99873464093b8729a8da0f2", "patch": "@@ -1,3 +1,9 @@\n+2016-11-11  Richard Biener  <rguenther@suse.de>\n+\n+\tPR middle-end/78295\n+\t* tree-ssa-uninit.c (warn_uninitialized_vars): Do not warn\n+\tabout uninitialized destination arg of BIT_INSERT_EXPR.\n+\n 2016-11-10  Sandra Loosemore  <sandra@codesourcery.com>\n \n \tPR c/37998"}, {"sha": "acec6d953438f28cb7fd1409f0370a5cb7f1dc5b", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d07f8c591acf1ed2f99873464093b8729a8da0f2/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d07f8c591acf1ed2f99873464093b8729a8da0f2/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=d07f8c591acf1ed2f99873464093b8729a8da0f2", "patch": "@@ -1,3 +1,8 @@\n+2016-11-11  Richard Biener  <rguenther@suse.de>\n+\n+\tPR middle-end/78295\n+\t* gcc.dg/uninit-pr78295.c: New testcase.\n+\n 2016-11-10  Fritz O. Reese <fritzoreese@gmail.com>\n \n \tPR fortran/78277"}, {"sha": "ae0b21469b0b1345da9da2c95a5fcb0608a81987", "filename": "gcc/testsuite/gcc.dg/uninit-pr78295.c", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d07f8c591acf1ed2f99873464093b8729a8da0f2/gcc%2Ftestsuite%2Fgcc.dg%2Funinit-pr78295.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d07f8c591acf1ed2f99873464093b8729a8da0f2/gcc%2Ftestsuite%2Fgcc.dg%2Funinit-pr78295.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Funinit-pr78295.c?ref=d07f8c591acf1ed2f99873464093b8729a8da0f2", "patch": "@@ -0,0 +1,13 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -Wall\" } */\n+\n+typedef double vectype __attribute__ ((__vector_size__ (16)));\n+\n+vectype\n+f (double x)\n+{\n+  vectype t;\n+  for (int i = 0; i < 2; i++)\n+    t[i] = x; /* { dg-bogus \"uninitialized\" } */\n+  return t;\n+}"}, {"sha": "dfee0ea72d1adca28e85d7213a9956171e3e95fa", "filename": "gcc/tree-ssa-uninit.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d07f8c591acf1ed2f99873464093b8729a8da0f2/gcc%2Ftree-ssa-uninit.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d07f8c591acf1ed2f99873464093b8729a8da0f2/gcc%2Ftree-ssa-uninit.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-uninit.c?ref=d07f8c591acf1ed2f99873464093b8729a8da0f2", "patch": "@@ -212,6 +212,14 @@ warn_uninitialized_vars (bool warn_possibly_uninitialized)\n \t     can warn about.  */\n \t  FOR_EACH_SSA_USE_OPERAND (use_p, stmt, op_iter, SSA_OP_USE)\n \t    {\n+\t      /* BIT_INSERT_EXPR first operand should not be considered\n+\t         a use for the purpose of uninit warnings.  */\n+\t      if (gassign *ass = dyn_cast <gassign *> (stmt))\n+\t\t{\n+\t\t  if (gimple_assign_rhs_code (ass) == BIT_INSERT_EXPR\n+\t\t      && use_p->use == gimple_assign_rhs1_ptr (ass))\n+\t\t    continue;\n+\t\t}\n \t      use = USE_FROM_PTR (use_p);\n \t      if (always_executed)\n \t\twarn_uninit (OPT_Wuninitialized, use, SSA_NAME_VAR (use),"}]}