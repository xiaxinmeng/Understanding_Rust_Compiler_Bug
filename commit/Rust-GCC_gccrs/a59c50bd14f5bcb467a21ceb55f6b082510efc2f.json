{"sha": "a59c50bd14f5bcb467a21ceb55f6b082510efc2f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTU5YzUwYmQxNGY1YmNiNDY3YTIxY2ViNTVmNmIwODI1MTBlZmMyZg==", "commit": {"author": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2019-12-05T00:42:11Z"}, "committer": {"name": "Jonathan Wakely", "email": "redi@gcc.gnu.org", "date": "2019-12-05T00:42:11Z"}, "message": "libstdc++: Define pretty printer for comparison categories\n\n\t* python/libstdcxx/v6/printers.py (StdCmpCatPrinter): New printer.\n\t* testsuite/libstdc++-prettyprinters/cxx20.cc: New test.\n\nFrom-SVN: r278982", "tree": {"sha": "ebcc3b6efb8238c1fffe34f359820fd972a693d8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ebcc3b6efb8238c1fffe34f359820fd972a693d8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a59c50bd14f5bcb467a21ceb55f6b082510efc2f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a59c50bd14f5bcb467a21ceb55f6b082510efc2f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a59c50bd14f5bcb467a21ceb55f6b082510efc2f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a59c50bd14f5bcb467a21ceb55f6b082510efc2f/comments", "author": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3a4cc6281b56c52136cc755e46776c025114d865", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3a4cc6281b56c52136cc755e46776c025114d865", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3a4cc6281b56c52136cc755e46776c025114d865"}], "stats": {"total": 83, "additions": 83, "deletions": 0}, "files": [{"sha": "3bbf4253e665e984f6f3b67e2d7d0d8aca09898e", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a59c50bd14f5bcb467a21ceb55f6b082510efc2f/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a59c50bd14f5bcb467a21ceb55f6b082510efc2f/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=a59c50bd14f5bcb467a21ceb55f6b082510efc2f", "patch": "@@ -1,5 +1,8 @@\n 2019-12-05  Jonathan Wakely  <jwakely@redhat.com>\n \n+\t* python/libstdcxx/v6/printers.py (StdCmpCatPrinter): New printer.\n+\t* testsuite/libstdc++-prettyprinters/cxx20.cc: New test.\n+\n \t* include/bits/cpp_type_traits.h (__is_byte<char8_t>): Add\n \tspecialization.\n \t* include/std/array (operator<=>): Likewise."}, {"sha": "5eab57ea6a7447ac9670bffd0b8a088bb7667f36", "filename": "libstdc++-v3/python/libstdcxx/v6/printers.py", "status": "modified", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a59c50bd14f5bcb467a21ceb55f6b082510efc2f/libstdc%2B%2B-v3%2Fpython%2Flibstdcxx%2Fv6%2Fprinters.py", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a59c50bd14f5bcb467a21ceb55f6b082510efc2f/libstdc%2B%2B-v3%2Fpython%2Flibstdcxx%2Fv6%2Fprinters.py", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fpython%2Flibstdcxx%2Fv6%2Fprinters.py?ref=a59c50bd14f5bcb467a21ceb55f6b082510efc2f", "patch": "@@ -1425,6 +1425,20 @@ def children(self):\n     def to_string(self):\n         return None\n \n+class StdCmpCatPrinter:\n+    \"Print a comparison category object\"\n+\n+    def __init__ (self, typename, val):\n+        self.typename = typename[typename.rfind(':')+1:]\n+        self.val = val['_M_value']\n+\n+    def to_string (self):\n+        if self.typename == 'strong_ordering' and self.val == 0:\n+            name = 'equal'\n+        else:\n+            names = {-127:'unordered', -1:'less', 0:'equivalent', 1:'greater'}\n+            name = names[int(self.val)]\n+        return 'std::{}::{}'.format(self.typename, name)\n \n # A \"regular expression\" printer which conforms to the\n # \"SubPrettyPrinter\" protocol from gdb.printing.\n@@ -1928,6 +1942,11 @@ def build_libstdcxx_dictionary ():\n     libstdcxx_printer.add_version('std::',\n                                   '_Node_handle', StdNodeHandlePrinter)\n \n+    # C++20 components\n+    libstdcxx_printer.add_version('std::', 'partial_ordering', StdCmpCatPrinter)\n+    libstdcxx_printer.add_version('std::', 'weak_ordering', StdCmpCatPrinter)\n+    libstdcxx_printer.add_version('std::', 'strong_ordering', StdCmpCatPrinter)\n+\n     # Extensions.\n     libstdcxx_printer.add_version('__gnu_cxx::', 'slist', StdSlistPrinter)\n "}, {"sha": "0a3be53f5f479ff393e859415bad66e9264b85a3", "filename": "libstdc++-v3/testsuite/libstdc++-prettyprinters/cxx20.cc", "status": "added", "additions": 61, "deletions": 0, "changes": 61, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a59c50bd14f5bcb467a21ceb55f6b082510efc2f/libstdc%2B%2B-v3%2Ftestsuite%2Flibstdc%2B%2B-prettyprinters%2Fcxx20.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a59c50bd14f5bcb467a21ceb55f6b082510efc2f/libstdc%2B%2B-v3%2Ftestsuite%2Flibstdc%2B%2B-prettyprinters%2Fcxx20.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Flibstdc%2B%2B-prettyprinters%2Fcxx20.cc?ref=a59c50bd14f5bcb467a21ceb55f6b082510efc2f", "patch": "@@ -0,0 +1,61 @@\n+// { dg-options \"-g -O0 -std=gnu++2a\" }\n+// { dg-do run { target c++2a } }\n+\n+// Copyright (C) 2014-2019 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+#include <compare>\n+#include <iostream>\n+\n+struct X\n+{\n+  int i;\n+\n+  std::weak_ordering operator<=>(X x) const noexcept { return i <=> x.i; }\n+};\n+\n+int\n+main()\n+{\n+  auto c1 = 1 <=> 1;\n+// { dg-final { note-test c1 \"std::strong_ordering::equal\" } }\n+  auto c2 = 1 <=> 2;\n+// { dg-final { note-test c2 \"std::strong_ordering::less\" } }\n+  auto c3 = 4 <=> 3;\n+// { dg-final { note-test c3 \"std::strong_ordering::greater\" } }\n+\n+  auto c4 = X{1} <=> X{1};\n+// { dg-final { note-test c4 \"std::weak_ordering::equivalent\" } }\n+  auto c5 = X{2} <=> X{3};\n+// { dg-final { note-test c5 \"std::weak_ordering::less\" } }\n+  auto c6 = X{2} <=> X{1};\n+// { dg-final { note-test c6 \"std::weak_ordering::greater\" } }\n+\n+  auto c7 = 0.2 <=> 0.2;\n+// { dg-final { note-test c7 \"std::partial_ordering::equivalent\" } }\n+  auto c8 = 2.5 <=> 5.5;\n+// { dg-final { note-test c8 \"std::partial_ordering::less\" } }\n+  auto c9 = 7.5 <=> -2.2;\n+// { dg-final { note-test c9 \"std::partial_ordering::greater\" } }\n+  auto c10 = 0.0 <=> __builtin_nan(\"\");\n+// { dg-final { note-test c10 \"std::partial_ordering::unordered\" } }\n+\n+  std::cout << \"\\n\";\n+  return 0;\t\t\t// Mark SPOT\n+}\n+\n+// { dg-final { gdb-test SPOT } }"}]}