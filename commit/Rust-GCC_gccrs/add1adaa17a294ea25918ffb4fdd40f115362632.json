{"sha": "add1adaa17a294ea25918ffb4fdd40f115362632", "node_id": "C_kwDOANBUbNoAKGFkZDFhZGFhMTdhMjk0ZWEyNTkxOGZmYjRmZGQ0MGYxMTUzNjI2MzI", "commit": {"author": {"name": "Simon Wright", "email": "simon@pushface.org", "date": "2022-06-12T16:01:22Z"}, "committer": {"name": "Iain Sandoe", "email": "iain@sandoe.co.uk", "date": "2022-06-12T22:22:20Z"}, "message": "Darwin: Truncate kernel-provided version to OS major for Darwin >= 20.\n\nIn common with system tools, GCC uses a version obtained from the kernel as\nthe prevailing macOS target, when that is not overridden by command line or\nenvironment versions (i.e. mmacosx-version-min=, MACOSX_DEPLOYMENT_TARGET).\n\nPresently, GCC assumes that if the OS version is >= 20, the value used should\ninclude both major and minium version identifiers.  However the system tools\n(for those versions) truncate the value to the major version - this leads to\nlink errors when combining objects built with clang and GCC for example:\n\nld: warning: object file (null.o) was built for newer macOS version (12.2)\nthan being linked (12.0)\n\nThe change here truncates the values GCC uses to the major version.\n\ngcc/ChangeLog:\n\n\tPR target/104871\n\t* config/darwin-driver.cc (darwin_find_version_from_kernel): If the OS\n\tversion is darwin20 (macOS 11) or greater, truncate the version to the\n\tmajor number.", "tree": {"sha": "dcdfb8d3c6d260dbcd54bbd2a6e27f99f8d59079", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/dcdfb8d3c6d260dbcd54bbd2a6e27f99f8d59079"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/add1adaa17a294ea25918ffb4fdd40f115362632", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/add1adaa17a294ea25918ffb4fdd40f115362632", "html_url": "https://github.com/Rust-GCC/gccrs/commit/add1adaa17a294ea25918ffb4fdd40f115362632", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/add1adaa17a294ea25918ffb4fdd40f115362632/comments", "author": {"login": "simonjwright", "id": 1824512, "node_id": "MDQ6VXNlcjE4MjQ1MTI=", "avatar_url": "https://avatars.githubusercontent.com/u/1824512?v=4", "gravatar_id": "", "url": "https://api.github.com/users/simonjwright", "html_url": "https://github.com/simonjwright", "followers_url": "https://api.github.com/users/simonjwright/followers", "following_url": "https://api.github.com/users/simonjwright/following{/other_user}", "gists_url": "https://api.github.com/users/simonjwright/gists{/gist_id}", "starred_url": "https://api.github.com/users/simonjwright/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/simonjwright/subscriptions", "organizations_url": "https://api.github.com/users/simonjwright/orgs", "repos_url": "https://api.github.com/users/simonjwright/repos", "events_url": "https://api.github.com/users/simonjwright/events{/privacy}", "received_events_url": "https://api.github.com/users/simonjwright/received_events", "type": "User", "site_admin": false}, "committer": {"login": "iains", "id": 4039407, "node_id": "MDQ6VXNlcjQwMzk0MDc=", "avatar_url": "https://avatars.githubusercontent.com/u/4039407?v=4", "gravatar_id": "", "url": "https://api.github.com/users/iains", "html_url": "https://github.com/iains", "followers_url": "https://api.github.com/users/iains/followers", "following_url": "https://api.github.com/users/iains/following{/other_user}", "gists_url": "https://api.github.com/users/iains/gists{/gist_id}", "starred_url": "https://api.github.com/users/iains/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/iains/subscriptions", "organizations_url": "https://api.github.com/users/iains/orgs", "repos_url": "https://api.github.com/users/iains/repos", "events_url": "https://api.github.com/users/iains/events{/privacy}", "received_events_url": "https://api.github.com/users/iains/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6725f186cb70d48338f69456864bf469a12ee5be", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6725f186cb70d48338f69456864bf469a12ee5be", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6725f186cb70d48338f69456864bf469a12ee5be"}], "stats": {"total": 16, "additions": 5, "deletions": 11}, "files": [{"sha": "00287f3d5ecc7dee39d40aec9328b1c24581acf1", "filename": "gcc/config/darwin-driver.cc", "status": "modified", "additions": 5, "deletions": 11, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/add1adaa17a294ea25918ffb4fdd40f115362632/gcc%2Fconfig%2Fdarwin-driver.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/add1adaa17a294ea25918ffb4fdd40f115362632/gcc%2Fconfig%2Fdarwin-driver.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fdarwin-driver.cc?ref=add1adaa17a294ea25918ffb4fdd40f115362632", "patch": "@@ -160,19 +160,13 @@ darwin_find_version_from_kernel (void)\n     goto parse_failed;\n \n   /* Darwin20 sees a transition to macOS 11.  In this, it seems that the\n-     mapping to macOS minor version is now shifted to the kernel minor\n-     version - 1 (at least for the initial releases).  */\n+     mapping to macOS minor version and patch level is now always 0, 0\n+     (at least for macOS 11 and 12).  */\n   if (major_vers >= 20)\n     {\n-      int minor_vers = *version_p++ - '0';\n-      if (ISDIGIT (*version_p))\n-\tminor_vers = minor_vers * 10 + (*version_p++ - '0');\n-      if (*version_p++ != '.')\n-\tgoto parse_failed;\n-      if (minor_vers > 0)\n-\tminor_vers -= 1; /* Kernel 20.3 => macOS 11.2.  */\n-      /* It's not yet clear whether patch level will be considered.  */\n-      asprintf (&new_flag, \"%d.%02d.00\", major_vers - 9, minor_vers);\n+      /* Apple clang doesn't include the minor version or the patch level\n+\t in the object file, nor does it pass it to ld  */\n+      asprintf (&new_flag, \"%d.00.00\", major_vers - 9);\n     }\n   else if (major_vers - 4 <= 4)\n     /* On 10.4 and earlier, the old linker is used which does not"}]}