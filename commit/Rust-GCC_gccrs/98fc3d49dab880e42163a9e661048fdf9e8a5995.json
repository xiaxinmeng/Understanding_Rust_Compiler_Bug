{"sha": "98fc3d49dab880e42163a9e661048fdf9e8a5995", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OThmYzNkNDlkYWI4ODBlNDIxNjNhOWU2NjEwNDhmZGY5ZThhNTk5NQ==", "commit": {"author": {"name": "Lawrence Vel\u00e1zquez", "email": "vq@larryv.me", "date": "2015-05-28T12:27:05Z"}, "committer": {"name": "Mike Stump", "email": "mrs@gcc.gnu.org", "date": "2015-05-28T12:27:05Z"}, "message": "re PR target/63810 (gcc sets incorrect macro for OS X deployment targets)\n\n2015-05-28  Lawrence Vel\u00e1zquez  <vq@larryv.me>\n\n\tPR target/63810\n\t* config/darwin-c.c (version_components): New global enum.\n\t(parse_version, version_as_legacy_macro)\n\t(version_as_modern_macro, macosx_version_as_macro): New functions.\n\t(version_as_macro): Remove.\n\t(darwin_cpp_builtins): Use new function.\n\ntestsuite:\n\tPR target/63810\n\t* gcc.dg/darwin-minversion-3.c: Update testcase.\n\t* gcc.dg/darwin-minversion-4.c: Ditto.\n\t* gcc.dg/darwin-minversion-5.c: New testcase.\n\t* gcc.dg/darwin-minversion-6.c: Ditto.\n\t* gcc.dg/darwin-minversion-7.c: Ditto.\n\t* gcc.dg/darwin-minversion-8.c: Ditto.\n\t* gcc.dg/darwin-minversion-9.c: Ditto.\n\t* gcc.dg/darwin-minversion-10.c: Ditto.\n\t* gcc.dg/darwin-minversion-11.c: Ditto.\n\t* gcc.dg/darwin-minversion-12.c: Ditto.\n\nFrom-SVN: r223808", "tree": {"sha": "20c7b2ea1af3e320b3b12776646a85bfb072bfec", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/20c7b2ea1af3e320b3b12776646a85bfb072bfec"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/98fc3d49dab880e42163a9e661048fdf9e8a5995", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/98fc3d49dab880e42163a9e661048fdf9e8a5995", "html_url": "https://github.com/Rust-GCC/gccrs/commit/98fc3d49dab880e42163a9e661048fdf9e8a5995", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/98fc3d49dab880e42163a9e661048fdf9e8a5995/comments", "author": {"login": "larryv", "id": 281175, "node_id": "MDQ6VXNlcjI4MTE3NQ==", "avatar_url": "https://avatars.githubusercontent.com/u/281175?v=4", "gravatar_id": "", "url": "https://api.github.com/users/larryv", "html_url": "https://github.com/larryv", "followers_url": "https://api.github.com/users/larryv/followers", "following_url": "https://api.github.com/users/larryv/following{/other_user}", "gists_url": "https://api.github.com/users/larryv/gists{/gist_id}", "starred_url": "https://api.github.com/users/larryv/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/larryv/subscriptions", "organizations_url": "https://api.github.com/users/larryv/orgs", "repos_url": "https://api.github.com/users/larryv/repos", "events_url": "https://api.github.com/users/larryv/events{/privacy}", "received_events_url": "https://api.github.com/users/larryv/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "6a344b953a3e8a51808bc260f8f5f2f2f363e2c2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6a344b953a3e8a51808bc260f8f5f2f2f363e2c2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6a344b953a3e8a51808bc260f8f5f2f2f363e2c2"}], "stats": {"total": 328, "additions": 296, "deletions": 32}, "files": [{"sha": "0603918fddc88bffef6d243173c1c9ca30b5934f", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/98fc3d49dab880e42163a9e661048fdf9e8a5995/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/98fc3d49dab880e42163a9e661048fdf9e8a5995/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=98fc3d49dab880e42163a9e661048fdf9e8a5995", "patch": "@@ -1,3 +1,12 @@\n+2015-05-28  Lawrence Vel\u00e1zquez  <vq@larryv.me>\n+\n+\tPR target/63810\n+\t* config/darwin-c.c (version_components): New global enum.\n+\t(parse_version, version_as_legacy_macro)\n+\t(version_as_modern_macro, macosx_version_as_macro): New functions.\n+\t(version_as_macro): Remove.\n+\t(darwin_cpp_builtins): Use new function.\n+\n 2015-05-28  H.J. Lu  <hongjiu.lu@intel.com>\n \n \t* builtins.c (expand_builtin_acc_on_device): Mark parameters"}, {"sha": "6d49f05b0dbc25de820b45f7de003763b822560a", "filename": "gcc/config/darwin-c.c", "status": "modified", "additions": 142, "deletions": 26, "changes": 168, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/98fc3d49dab880e42163a9e661048fdf9e8a5995/gcc%2Fconfig%2Fdarwin-c.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/98fc3d49dab880e42163a9e661048fdf9e8a5995/gcc%2Fconfig%2Fdarwin-c.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fdarwin-c.c?ref=98fc3d49dab880e42163a9e661048fdf9e8a5995", "patch": "@@ -599,42 +599,158 @@ find_subframework_header (cpp_reader *pfile, const char *header, cpp_dir **dirp)\n   return 0;\n }\n \n-/* Return the value of darwin_macosx_version_min suitable for the\n-   __ENVIRONMENT_MAC_OS_X_VERSION_MIN_REQUIRED__ macro, so '10.4.2'\n-   becomes 1040 and '10.10.0' becomes 101000.  The lowest digit is\n-   always zero, as is the second lowest for '10.10.x' and above.\n-   Print a warning if the version number can't be understood.  */\n+/* Given an OS X version VERSION_STR, return it as a statically-allocated array\n+   of three integers. If VERSION_STR is invalid, return NULL.\n+\n+   VERSION_STR must consist of one, two, or three tokens, each separated by\n+   a single period.  Each token must contain only the characters '0' through\n+   '9' and is converted to an equivalent non-negative decimal integer. Omitted\n+   tokens become zeros.  For example:\n+\n+        \"10\"              becomes       {10,0,0}\n+        \"10.10\"           becomes       {10,10,0}\n+        \"10.10.1\"         becomes       {10,10,1}\n+        \"10.000010.1\"     becomes       {10,10,1}\n+        \"10.010.001\"      becomes       {10,10,1}\n+        \"000010.10.00001\" becomes       {10,10,1}\n+        \".9.1\"            is invalid\n+        \"10..9\"           is invalid\n+        \"10.10.\"          is invalid  */\n+\n+enum version_components { MAJOR, MINOR, TINY };\n+\n+static const unsigned long *\n+parse_version (const char *version_str)\n+{\n+  size_t version_len;\n+  char *end;\n+  static unsigned long version_array[3];\n+\n+  version_len = strlen (version_str);\n+  if (version_len < 1)\n+    return NULL;\n+\n+  /* Version string must consist of digits and periods only.  */\n+  if (strspn (version_str, \"0123456789.\") != version_len)\n+    return NULL;\n+\n+  if (!ISDIGIT (version_str[0]) || !ISDIGIT (version_str[version_len - 1]))\n+    return NULL;\n+\n+  version_array[MAJOR] = strtoul (version_str, &end, 10);\n+  version_str = end + ((*end == '.') ? 1 : 0);\n+\n+  /* Version string must not contain adjacent periods.  */\n+  if (*version_str == '.')\n+    return NULL;\n+\n+  version_array[MINOR] = strtoul (version_str, &end, 10);\n+  version_str = end + ((*end == '.') ? 1 : 0);\n+\n+  version_array[TINY] = strtoul (version_str, &end, 10);\n+\n+  /* Version string must contain no more than three tokens.  */\n+  if (*end != '\\0')\n+    return NULL;\n+\n+  return version_array;\n+}\n+\n+/* Given VERSION -- a three-component OS X version represented as an array of\n+   non-negative integers -- return a statically-allocated string suitable for\n+   the legacy __ENVIRONMENT_MAC_OS_X_VERSION_MIN_REQUIRED__ macro.  If VERSION\n+   is invalid and cannot be coerced into a valid form, return NULL.\n+\n+   The legacy format is a four-character string -- two chars for the major\n+   number and one each for the minor and tiny numbers.  Minor and tiny numbers\n+   from 10 through 99 are permitted but are clamped to 9 (for example, {10,9,10}\n+   produces \"1099\").  If VERSION contains numbers greater than 99, it is\n+   rejected.  */\n+\n+static const char *\n+version_as_legacy_macro (const unsigned long *version)\n+{\n+  unsigned long major, minor, tiny;\n+  static char result[5];\n+\n+  major = version[MAJOR];\n+  minor = version[MINOR];\n+  tiny = version[TINY];\n+\n+  if (major > 99 || minor > 99 || tiny > 99)\n+    return NULL;\n+\n+  minor = ((minor > 9) ? 9 : minor);\n+  tiny = ((tiny > 9) ? 9 : tiny);\n+\n+  if (sprintf (result, \"%lu%lu%lu\", major, minor, tiny) != 4)\n+    return NULL;\n+\n+  return result;\n+}\n+\n+/* Given VERSION -- a three-component OS X version represented as an array of\n+   non-negative integers -- return a statically-allocated string suitable for\n+   the modern __ENVIRONMENT_MAC_OS_X_VERSION_MIN_REQUIRED__ macro.  If VERSION\n+   is invalid, return NULL.\n+\n+   The modern format is a six-character string -- two chars for each component,\n+   with zero-padding if necessary (for example, {10,10,1} produces \"101001\"). If\n+   VERSION contains numbers greater than 99, it is rejected.  */\n+\n static const char *\n-version_as_macro (void)\n+version_as_modern_macro (const unsigned long *version)\n {\n-  static char result[7] = \"1000\";\n-  int minorDigitIdx;\n+  unsigned long major, minor, tiny;\n+  static char result[7];\n+\n+  major = version[MAJOR];\n+  minor = version[MINOR];\n+  tiny = version[TINY];\n+\n+  if (major > 99 || minor > 99 || tiny > 99)\n+    return NULL;\n+\n+  if (sprintf (result, \"%02lu%02lu%02lu\", major, minor, tiny) != 6)\n+    return NULL;\n+\n+  return result;\n+}\n \n-  if (strncmp (darwin_macosx_version_min, \"10.\", 3) != 0)\n+/* Return the value of darwin_macosx_version_min, suitably formatted for the\n+   __ENVIRONMENT_MAC_OS_X_VERSION_MIN_REQUIRED__ macro.  Values representing\n+   OS X 10.9 and earlier are encoded using the legacy four-character format,\n+   while 10.10 and later use a modern six-character format.  (For example,\n+   \"10.9\" produces \"1090\", and \"10.10.1\" produces \"101001\".)  If\n+   darwin_macosx_version_min is invalid and cannot be coerced into a valid\n+   form, print a warning and return \"1000\".  */\n+\n+static const char *\n+macosx_version_as_macro (void)\n+{\n+  const unsigned long *version_array;\n+  const char *version_macro;\n+\n+  version_array = parse_version (darwin_macosx_version_min);\n+  if (!version_array)\n     goto fail;\n-  if (! ISDIGIT (darwin_macosx_version_min[3]))\n+\n+  if (version_array[MAJOR] != 10)\n     goto fail;\n \n-  minorDigitIdx = 3;\n-  result[2] = darwin_macosx_version_min[minorDigitIdx++];\n-  if (ISDIGIT (darwin_macosx_version_min[minorDigitIdx]))\n-  {\n-    /* Starting with OS X 10.10, the macro ends '00' rather than '0',\n-       i.e. 10.10.x becomes 101000 rather than 10100.  */\n-    result[3] = darwin_macosx_version_min[minorDigitIdx++];\n-    result[4] = '0';\n-    result[5] = '0';\n-    result[6] = '\\0';\n-  }\n-  if (darwin_macosx_version_min[minorDigitIdx] != '\\0'\n-      && darwin_macosx_version_min[minorDigitIdx] != '.')\n+  if (version_array[MINOR] < 10)\n+    version_macro = version_as_legacy_macro (version_array);\n+  else\n+    version_macro = version_as_modern_macro (version_array);\n+\n+  if (!version_macro)\n     goto fail;\n \n-  return result;\n+  return version_macro;\n \n  fail:\n   error (\"unknown value %qs of -mmacosx-version-min\",\n-\t darwin_macosx_version_min);\n+         darwin_macosx_version_min);\n   return \"1000\";\n }\n \n@@ -656,7 +772,7 @@ darwin_cpp_builtins (cpp_reader *pfile)\n     builtin_define (\"__CONSTANT_CFSTRINGS__\");\n \n   builtin_define_with_value (\"__ENVIRONMENT_MAC_OS_X_VERSION_MIN_REQUIRED__\",\n-\t\t\t     version_as_macro(), false);\n+\t\t\t     macosx_version_as_macro(), false);\n \n   /* Since we do not (at 4.6) support ObjC gc for the NeXT runtime, the\n      following will cause a syntax error if one tries to compile gc attributed"}, {"sha": "22e6021fb685f6811778fca2baa91e142cb6b45e", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/98fc3d49dab880e42163a9e661048fdf9e8a5995/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/98fc3d49dab880e42163a9e661048fdf9e8a5995/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=98fc3d49dab880e42163a9e661048fdf9e8a5995", "patch": "@@ -1,3 +1,17 @@\n+2015-05-28  Lawrence Vel\u00e1zquez  <vq@larryv.me>\n+\n+\tPR target/63810\n+\t* gcc.dg/darwin-minversion-3.c: Update testcase.\n+\t* gcc.dg/darwin-minversion-4.c: Ditto.\n+\t* gcc.dg/darwin-minversion-5.c: New testcase.\n+\t* gcc.dg/darwin-minversion-6.c: Ditto.\n+\t* gcc.dg/darwin-minversion-7.c: Ditto.\n+\t* gcc.dg/darwin-minversion-8.c: Ditto.\n+\t* gcc.dg/darwin-minversion-9.c: Ditto.\n+\t* gcc.dg/darwin-minversion-10.c: Ditto.\n+\t* gcc.dg/darwin-minversion-11.c: Ditto.\n+\t* gcc.dg/darwin-minversion-12.c: Ditto.\n+\n 2015-05-28  Thomas Preud'homme  <thomas.preudhomme@arm.com>\n \n \tPR rtl-optimization/66168"}, {"sha": "bf95d46960de57aa3c8f6be50ca7687a18c5e4b4", "filename": "gcc/testsuite/gcc.dg/darwin-minversion-10.c", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/98fc3d49dab880e42163a9e661048fdf9e8a5995/gcc%2Ftestsuite%2Fgcc.dg%2Fdarwin-minversion-10.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/98fc3d49dab880e42163a9e661048fdf9e8a5995/gcc%2Ftestsuite%2Fgcc.dg%2Fdarwin-minversion-10.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fdarwin-minversion-10.c?ref=98fc3d49dab880e42163a9e661048fdf9e8a5995", "patch": "@@ -0,0 +1,16 @@\n+/* PR target/63810: Test that an OS X minimum version with zero-padded\n+   minor and tiny numbers less than 10 produces the correct\n+   four-character macro.  */\n+/* Added by Lawrence Vel\u00e1zquez <vq@larryv.me>.  */\n+\n+/* { dg-options \"-mmacosx-version-min=10.07.02\" } */\n+/* { dg-do compile { target *-*-darwin* } } */\n+\n+int\n+main ()\n+{\n+#if __ENVIRONMENT_MAC_OS_X_VERSION_MIN_REQUIRED__ != 1072\n+  fail me;\n+#endif\n+  return 0;\n+}"}, {"sha": "a03e7071682573e5539a6e75fe85002fcd813ff2", "filename": "gcc/testsuite/gcc.dg/darwin-minversion-11.c", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/98fc3d49dab880e42163a9e661048fdf9e8a5995/gcc%2Ftestsuite%2Fgcc.dg%2Fdarwin-minversion-11.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/98fc3d49dab880e42163a9e661048fdf9e8a5995/gcc%2Ftestsuite%2Fgcc.dg%2Fdarwin-minversion-11.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fdarwin-minversion-11.c?ref=98fc3d49dab880e42163a9e661048fdf9e8a5995", "patch": "@@ -0,0 +1,16 @@\n+/* PR target/63810: Test that an OS X minimum version with outrageous\n+   zero-padding and a minor number greater than 9 still produces\n+   a six-character macro.  */\n+/* Added by Lawrence Vel\u00e1zquez <vq@larryv.me>.  */\n+\n+/* { dg-options \"-mmacosx-version-min=00010.010.0000098\" } */\n+/* { dg-do compile { target *-*-darwin* } } */\n+\n+int\n+main ()\n+{\n+#if __ENVIRONMENT_MAC_OS_X_VERSION_MIN_REQUIRED__ != 101098\n+  fail me;\n+#endif\n+  return 0;\n+}"}, {"sha": "4c2ce38b55e0233fa7a332b237f5e072218b359d", "filename": "gcc/testsuite/gcc.dg/darwin-minversion-12.c", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/98fc3d49dab880e42163a9e661048fdf9e8a5995/gcc%2Ftestsuite%2Fgcc.dg%2Fdarwin-minversion-12.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/98fc3d49dab880e42163a9e661048fdf9e8a5995/gcc%2Ftestsuite%2Fgcc.dg%2Fdarwin-minversion-12.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fdarwin-minversion-12.c?ref=98fc3d49dab880e42163a9e661048fdf9e8a5995", "patch": "@@ -0,0 +1,16 @@\n+/* PR target/63810: Test that an OS X minimum version with outrageous\n+   zero-padding and a minor number less than 10 still produces\n+   a four-character macro.  */\n+/* Added by Lawrence Vel\u00e1zquez <vq@larryv.me>.  */\n+\n+/* { dg-options \"-mmacosx-version-min=010.008.000031\" } */\n+/* { dg-do compile { target *-*-darwin* } } */\n+\n+int\n+main ()\n+{\n+#if __ENVIRONMENT_MAC_OS_X_VERSION_MIN_REQUIRED__ != 1089\n+  fail me;\n+#endif\n+  return 0;\n+}"}, {"sha": "d1795e74a692410db42266c1ba2bb7fbcc950102", "filename": "gcc/testsuite/gcc.dg/darwin-minversion-3.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/98fc3d49dab880e42163a9e661048fdf9e8a5995/gcc%2Ftestsuite%2Fgcc.dg%2Fdarwin-minversion-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/98fc3d49dab880e42163a9e661048fdf9e8a5995/gcc%2Ftestsuite%2Fgcc.dg%2Fdarwin-minversion-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fdarwin-minversion-3.c?ref=98fc3d49dab880e42163a9e661048fdf9e8a5995", "patch": "@@ -1,11 +1,11 @@\n-/* Test that most-minor versions greater than 9 work.  */\n-/* { dg-options \"-mmacosx-version-min=10.4.10\" } */\n+/* Test that most minor versions less than 10 work.  */\n+/* { dg-options \"-mmacosx-version-min=10.4.1\" } */\n /* { dg-do compile { target *-*-darwin* } } */\n \n int\n main ()\n {\n-#if __ENVIRONMENT_MAC_OS_X_VERSION_MIN_REQUIRED__ != 1040\n+#if __ENVIRONMENT_MAC_OS_X_VERSION_MIN_REQUIRED__ != 1041\n   fail me;\n #endif\n   return 0;"}, {"sha": "1481aa53dc755f442a2cb2446732343f3afc7508", "filename": "gcc/testsuite/gcc.dg/darwin-minversion-4.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/98fc3d49dab880e42163a9e661048fdf9e8a5995/gcc%2Ftestsuite%2Fgcc.dg%2Fdarwin-minversion-4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/98fc3d49dab880e42163a9e661048fdf9e8a5995/gcc%2Ftestsuite%2Fgcc.dg%2Fdarwin-minversion-4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fdarwin-minversion-4.c?ref=98fc3d49dab880e42163a9e661048fdf9e8a5995", "patch": "@@ -1,11 +1,11 @@\n-/* Test that major versions greater than 9 work and have the additional 0.  */\n-/* { dg-options \"-mmacosx-version-min=10.10.0\" } */\n+/* Test that minor versions greater than 9 produce a six-character macro.  */\n+/* { dg-options \"-mmacosx-version-min=10.10.1\" } */\n /* { dg-do compile { target *-*-darwin* } } */\n \n int\n main ()\n {\n-#if __ENVIRONMENT_MAC_OS_X_VERSION_MIN_REQUIRED__ != 101000\n+#if __ENVIRONMENT_MAC_OS_X_VERSION_MIN_REQUIRED__ != 101001\n   fail me;\n #endif\n   return 0;"}, {"sha": "09a9d7263b8f5b06bf60258d6053b9811d296da2", "filename": "gcc/testsuite/gcc.dg/darwin-minversion-5.c", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/98fc3d49dab880e42163a9e661048fdf9e8a5995/gcc%2Ftestsuite%2Fgcc.dg%2Fdarwin-minversion-5.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/98fc3d49dab880e42163a9e661048fdf9e8a5995/gcc%2Ftestsuite%2Fgcc.dg%2Fdarwin-minversion-5.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fdarwin-minversion-5.c?ref=98fc3d49dab880e42163a9e661048fdf9e8a5995", "patch": "@@ -0,0 +1,16 @@\n+/* PR target/63810: Test that an OS X minimum version with minor number\n+   less than 10 and tiny number greater than 9 produces a four-character\n+   macro with the tiny number clamped to 9.  */\n+/* Added by Lawrence Vel\u00e1zquez <vq@larryv.me>.  */\n+\n+/* { dg-options \"-mmacosx-version-min=10.9.10\" } */\n+/* { dg-do compile { target *-*-darwin* } } */\n+\n+int\n+main ()\n+{\n+#if __ENVIRONMENT_MAC_OS_X_VERSION_MIN_REQUIRED__ != 1099\n+  fail me;\n+#endif\n+  return 0;\n+}"}, {"sha": "e01fa72c59e4031e49d5de04d341ccb18e531fa7", "filename": "gcc/testsuite/gcc.dg/darwin-minversion-6.c", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/98fc3d49dab880e42163a9e661048fdf9e8a5995/gcc%2Ftestsuite%2Fgcc.dg%2Fdarwin-minversion-6.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/98fc3d49dab880e42163a9e661048fdf9e8a5995/gcc%2Ftestsuite%2Fgcc.dg%2Fdarwin-minversion-6.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fdarwin-minversion-6.c?ref=98fc3d49dab880e42163a9e661048fdf9e8a5995", "patch": "@@ -0,0 +1,15 @@\n+/* PR target/63810: Test that tiny numbers are preserved in\n+   six-character macros.  */\n+/* Added by Lawrence Vel\u00e1zquez <vq@larryv.me>.  */\n+\n+/* { dg-options \"-mmacosx-version-min=10.10.11\" } */\n+/* { dg-do compile { target *-*-darwin* } } */\n+\n+int\n+main ()\n+{\n+#if __ENVIRONMENT_MAC_OS_X_VERSION_MIN_REQUIRED__ != 101011\n+  fail me;\n+#endif\n+  return 0;\n+}"}, {"sha": "72f495b22a190734ca1da25e3400a1c3351b22ee", "filename": "gcc/testsuite/gcc.dg/darwin-minversion-7.c", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/98fc3d49dab880e42163a9e661048fdf9e8a5995/gcc%2Ftestsuite%2Fgcc.dg%2Fdarwin-minversion-7.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/98fc3d49dab880e42163a9e661048fdf9e8a5995/gcc%2Ftestsuite%2Fgcc.dg%2Fdarwin-minversion-7.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fdarwin-minversion-7.c?ref=98fc3d49dab880e42163a9e661048fdf9e8a5995", "patch": "@@ -0,0 +1,15 @@\n+/* PR target/63810: Test that tiny numbers less than 10 are preserved in\n+   four-character macros.  */\n+/* Added by Lawrence Vel\u00e1zquez <vq@larryv.me>.  */\n+\n+/* { dg-options \"-mmacosx-version-min=10.9.1\" } */\n+/* { dg-do compile { target *-*-darwin* } } */\n+\n+int\n+main ()\n+{\n+#if __ENVIRONMENT_MAC_OS_X_VERSION_MIN_REQUIRED__ != 1091\n+  fail me;\n+#endif\n+  return 0;\n+}"}, {"sha": "5982df5e3f8fae6de76acbb0bf4bc554d6ddc405", "filename": "gcc/testsuite/gcc.dg/darwin-minversion-8.c", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/98fc3d49dab880e42163a9e661048fdf9e8a5995/gcc%2Ftestsuite%2Fgcc.dg%2Fdarwin-minversion-8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/98fc3d49dab880e42163a9e661048fdf9e8a5995/gcc%2Ftestsuite%2Fgcc.dg%2Fdarwin-minversion-8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fdarwin-minversion-8.c?ref=98fc3d49dab880e42163a9e661048fdf9e8a5995", "patch": "@@ -0,0 +1,16 @@\n+/* PR target/63810: Test that an OS X minimum version with minor number\n+   greater than 9 and no tiny number produces a six-character macro\n+   ending in \"00\".  */\n+/* Added by Lawrence Vel\u00e1zquez <vq@larryv.me>.  */\n+\n+/* { dg-options \"-mmacosx-version-min=10.11\" } */\n+/* { dg-do compile { target *-*-darwin* } } */\n+\n+int\n+main ()\n+{\n+#if __ENVIRONMENT_MAC_OS_X_VERSION_MIN_REQUIRED__ != 101100\n+  fail me;\n+#endif\n+  return 0;\n+}"}, {"sha": "d78178376de807abad796fed6d3b30fce72357bc", "filename": "gcc/testsuite/gcc.dg/darwin-minversion-9.c", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/98fc3d49dab880e42163a9e661048fdf9e8a5995/gcc%2Ftestsuite%2Fgcc.dg%2Fdarwin-minversion-9.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/98fc3d49dab880e42163a9e661048fdf9e8a5995/gcc%2Ftestsuite%2Fgcc.dg%2Fdarwin-minversion-9.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fdarwin-minversion-9.c?ref=98fc3d49dab880e42163a9e661048fdf9e8a5995", "patch": "@@ -0,0 +1,15 @@\n+/* PR target/63810: Test that an OS X minimum version with a zero-padded\n+   minor number less than 10 produces a four-character macro.  */\n+/* Added by Lawrence Vel\u00e1zquez <vq@larryv.me>.  */\n+\n+/* { dg-options \"-mmacosx-version-min=10.08.4\" } */\n+/* { dg-do compile { target *-*-darwin* } } */\n+\n+int\n+main ()\n+{\n+#if __ENVIRONMENT_MAC_OS_X_VERSION_MIN_REQUIRED__ != 1084\n+  fail me;\n+#endif\n+  return 0;\n+}"}]}