{"sha": "dcc72b9e73852d9e3b5f40c6dc51da12c444d699", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGNjNzJiOWU3Mzg1MmQ5ZTNiNWY0MGM2ZGM1MWRhMTJjNDQ0ZDY5OQ==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2015-04-07T14:34:06Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2015-04-07T14:34:06Z"}, "message": "re PR middle-end/65680 (ICE at -O1 and above on x86_64-linux-gnu in expand_assignment, at expr.c:4830)\n\n\tPR middle-end/65680\n\t* expr.c (get_inner_reference): Handle bit_offset that doesn't fit\n\tinto signed HOST_WIDE_INT the same as negative bit_offset.\n\n\t* gcc.c-torture/compile/pr65680.c: New test.\n\nFrom-SVN: r221899", "tree": {"sha": "f42a807458e5c2d2ddd09d1038d0bf44d207f68c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f42a807458e5c2d2ddd09d1038d0bf44d207f68c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/dcc72b9e73852d9e3b5f40c6dc51da12c444d699", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dcc72b9e73852d9e3b5f40c6dc51da12c444d699", "html_url": "https://github.com/Rust-GCC/gccrs/commit/dcc72b9e73852d9e3b5f40c6dc51da12c444d699", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dcc72b9e73852d9e3b5f40c6dc51da12c444d699/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "440f9408ea950a29ef7606b6114d84d1a5b53c90", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/440f9408ea950a29ef7606b6114d84d1a5b53c90", "html_url": "https://github.com/Rust-GCC/gccrs/commit/440f9408ea950a29ef7606b6114d84d1a5b53c90"}], "stats": {"total": 33, "additions": 32, "deletions": 1}, "files": [{"sha": "dcb7e99bd7f5e12f76e05e84130ad102c267aafe", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dcc72b9e73852d9e3b5f40c6dc51da12c444d699/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dcc72b9e73852d9e3b5f40c6dc51da12c444d699/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=dcc72b9e73852d9e3b5f40c6dc51da12c444d699", "patch": "@@ -1,3 +1,9 @@\n+2015-04-07  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR middle-end/65680\n+\t* expr.c (get_inner_reference): Handle bit_offset that doesn't fit\n+\tinto signed HOST_WIDE_INT the same as negative bit_offset.\n+\n 2015-04-07  Ilya Enkovich  <ilya.enkovich@intel.com>\n \n \t* ipa-comdats.c (ipa_comdats): Visit all thunks"}, {"sha": "5c095507f4a303b1c4ab3519d165735be5a37d07", "filename": "gcc/expr.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dcc72b9e73852d9e3b5f40c6dc51da12c444d699/gcc%2Fexpr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dcc72b9e73852d9e3b5f40c6dc51da12c444d699/gcc%2Fexpr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fexpr.c?ref=dcc72b9e73852d9e3b5f40c6dc51da12c444d699", "patch": "@@ -6941,7 +6941,7 @@ get_inner_reference (tree exp, HOST_WIDE_INT *pbitsize,\n   if (offset)\n     {\n       /* Avoid returning a negative bitpos as this may wreak havoc later.  */\n-      if (wi::neg_p (bit_offset))\n+      if (wi::neg_p (bit_offset) || !wi::fits_shwi_p (bit_offset))\n         {\n \t  offset_int mask = wi::mask <offset_int> (LOG2_BITS_PER_UNIT, false);\n \t  offset_int tem = bit_offset.and_not (mask);"}, {"sha": "933da2cac14e5bd6bdf3c62619ffc32381589beb", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dcc72b9e73852d9e3b5f40c6dc51da12c444d699/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dcc72b9e73852d9e3b5f40c6dc51da12c444d699/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=dcc72b9e73852d9e3b5f40c6dc51da12c444d699", "patch": "@@ -1,3 +1,8 @@\n+2015-04-07  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR middle-end/65680\n+\t* gcc.c-torture/compile/pr65680.c: New test.\n+\n 2015-04-07  Andre Vehreschild  <vehre@gmx.de>\n \n \tPR fortran/65548"}, {"sha": "02f08cee26d585540042e7adb9b3e46bf83dc394", "filename": "gcc/testsuite/gcc.c-torture/compile/pr65680.c", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dcc72b9e73852d9e3b5f40c6dc51da12c444d699/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr65680.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dcc72b9e73852d9e3b5f40c6dc51da12c444d699/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr65680.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr65680.c?ref=dcc72b9e73852d9e3b5f40c6dc51da12c444d699", "patch": "@@ -0,0 +1,20 @@\n+/* PR middle-end/65680 */\n+/* { dg-do compile { target lp64 } } */\n+\n+struct S\n+{\n+  int f : 1;\n+} a[100000000000000001][3];\n+\n+void\n+foo (void)\n+{\n+  struct S b = { 0 };\n+  a[100000000000000000][0] = b;\n+}\n+\n+void\n+bar (void)\n+{\n+  a[100000000000000000][0].f = 1;\n+}"}]}