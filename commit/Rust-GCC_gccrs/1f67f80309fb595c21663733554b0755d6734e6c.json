{"sha": "1f67f80309fb595c21663733554b0755d6734e6c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWY2N2Y4MDMwOWZiNTk1YzIxNjYzNzMzNTU0YjA3NTVkNjczNGU2Yw==", "commit": {"author": {"name": "Ben Elliston", "email": "bje@au.ibm.com", "date": "2009-11-30T00:23:45Z"}, "committer": {"name": "Ben Elliston", "email": "bje@gcc.gnu.org", "date": "2009-11-30T00:23:45Z"}, "message": "os_dep.c: Use the POSIX signal API in preference to the BSD API.\n\n\t* os_dep.c: Use the POSIX signal API in preference to the BSD API.\n\tGenerate a compilation error if neither the POSIX nor BSD APIs can\n\tbe detected.\n\nFrom-SVN: r154747", "tree": {"sha": "9d5d70e132e325c2c358b0f3566007dcf4622867", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9d5d70e132e325c2c358b0f3566007dcf4622867"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1f67f80309fb595c21663733554b0755d6734e6c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1f67f80309fb595c21663733554b0755d6734e6c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1f67f80309fb595c21663733554b0755d6734e6c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1f67f80309fb595c21663733554b0755d6734e6c/comments", "author": null, "committer": null, "parents": [{"sha": "7abe582f9d35c9c74b63a5527696d8bfc443f500", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7abe582f9d35c9c74b63a5527696d8bfc443f500", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7abe582f9d35c9c74b63a5527696d8bfc443f500"}], "stats": {"total": 20, "additions": 14, "deletions": 6}, "files": [{"sha": "5b615d956a426e1293b56eb188d5e0b4c10ac9ae", "filename": "boehm-gc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1f67f80309fb595c21663733554b0755d6734e6c/boehm-gc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1f67f80309fb595c21663733554b0755d6734e6c/boehm-gc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/boehm-gc%2FChangeLog?ref=1f67f80309fb595c21663733554b0755d6734e6c", "patch": "@@ -1,3 +1,9 @@\n+2009-11-30  Ben Elliston  <bje@au.ibm.com>\n+\n+\t* os_dep.c: Use the POSIX signal API in preference to the BSD API.\n+\tGenerate a compilation error if neither the POSIX nor BSD APIs can\n+\tbe detected.\n+\n 2009-09-11  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n \n \t* Makefile.am (libgcjgc_la_LINK, gctest_LINK): New."}, {"sha": "6f1e81abc16dae1147ee5e10c03521ee71010b49", "filename": "boehm-gc/os_dep.c", "status": "modified", "additions": 8, "deletions": 6, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1f67f80309fb595c21663733554b0755d6734e6c/boehm-gc%2Fos_dep.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1f67f80309fb595c21663733554b0755d6734e6c/boehm-gc%2Fos_dep.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/boehm-gc%2Fos_dep.c?ref=1f67f80309fb595c21663733554b0755d6734e6c", "patch": "@@ -501,7 +501,13 @@ void GC_enable_signals(void)\n       && !defined(MACOS) && !defined(DJGPP) && !defined(DOS4GW) \\\n       && !defined(NOSYS) && !defined(ECOS)\n \n-#   if defined(sigmask) && !defined(UTS4) && !defined(HURD)\n+#   if defined(SIG_BLOCK)\n+\t/* Use POSIX/SYSV interface */\n+#\tdefine SIGSET_T sigset_t\n+#\tdefine SIG_DEL(set, signal) sigdelset(&(set), (signal))\n+#\tdefine SIG_FILL(set) sigfillset(&set)\n+#\tdefine SIGSETMASK(old, new) sigprocmask(SIG_SETMASK, &(new), &(old))\n+#   elif defined(sigmask) && !defined(UTS4) && !defined(HURD)\n \t/* Use the traditional BSD interface */\n #\tdefine SIGSET_T int\n #\tdefine SIG_DEL(set, signal) (set) &= ~(sigmask(signal))\n@@ -511,11 +517,7 @@ void GC_enable_signals(void)\n     \t  /* a signal 32.\t\t\t\t\t\t*/\n #\tdefine SIGSETMASK(old, new) (old) = sigsetmask(new)\n #   else\n-\t/* Use POSIX/SYSV interface\t*/\n-#\tdefine SIGSET_T sigset_t\n-#\tdefine SIG_DEL(set, signal) sigdelset(&(set), (signal))\n-#\tdefine SIG_FILL(set) sigfillset(&set)\n-#\tdefine SIGSETMASK(old, new) sigprocmask(SIG_SETMASK, &(new), &(old))\n+#       error undetectable signal API\n #   endif\n \n static GC_bool mask_initialized = FALSE;"}]}