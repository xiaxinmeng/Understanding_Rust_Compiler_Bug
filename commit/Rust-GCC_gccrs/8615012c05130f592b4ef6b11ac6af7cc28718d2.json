{"sha": "8615012c05130f592b4ef6b11ac6af7cc28718d2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODYxNTAxMmMwNTEzMGY1OTJiNGVmNmIxMWFjNmFmN2NjMjg3MThkMg==", "commit": {"author": {"name": "Michael Meissner", "email": "meissner@linux.vnet.ibm.com", "date": "2017-09-26T17:37:14Z"}, "committer": {"name": "Michael Meissner", "email": "meissner@gcc.gnu.org", "date": "2017-09-26T17:37:14Z"}, "message": "rs6000.md (extendsi<mode>2): Add a splitter to do sign extension from a vector register to a GPR by doing a...\n\n2017-09-26  Michael Meissner  <meissner@linux.vnet.ibm.com>\n\n\t* config/rs6000/rs6000.md (extendsi<mode>2): Add a splitter to do\n\tsign extension from a vector register to a GPR by doing a 32-bit\n\tdirect move and then an EXTSW.\n\t(extendsi<mode>2 splitter): Likewise.\n\nFrom-SVN: r253208", "tree": {"sha": "fe9ace577a054da23349bae6e387bbe0b6843d82", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/fe9ace577a054da23349bae6e387bbe0b6843d82"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8615012c05130f592b4ef6b11ac6af7cc28718d2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8615012c05130f592b4ef6b11ac6af7cc28718d2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8615012c05130f592b4ef6b11ac6af7cc28718d2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8615012c05130f592b4ef6b11ac6af7cc28718d2/comments", "author": null, "committer": null, "parents": [{"sha": "973c150c2d564fbe077f14cb80c17da175c89323", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/973c150c2d564fbe077f14cb80c17da175c89323", "html_url": "https://github.com/Rust-GCC/gccrs/commit/973c150c2d564fbe077f14cb80c17da175c89323"}], "stats": {"total": 31, "additions": 27, "deletions": 4}, "files": [{"sha": "195571333beede368245601a28b1f406431e5231", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8615012c05130f592b4ef6b11ac6af7cc28718d2/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8615012c05130f592b4ef6b11ac6af7cc28718d2/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=8615012c05130f592b4ef6b11ac6af7cc28718d2", "patch": "@@ -1,3 +1,10 @@\n+2017-09-26  Michael Meissner  <meissner@linux.vnet.ibm.com>\n+\n+\t* config/rs6000/rs6000.md (extendsi<mode>2): Add a splitter to do\n+\tsign extension from a vector register to a GPR by doing a 32-bit\n+\tdirect move and then an EXTSW.\n+\t(extendsi<mode>2 splitter): Likewise.\n+\n 2017-09-26  Martin Jambor  <mjambor@suse.cz>\n \n \t* tree-sra.c (compare_access_positions): Put integral types first,"}, {"sha": "f22dbce494af7c36cf60b0ced56c931767eb601d", "filename": "gcc/config/rs6000/rs6000.md", "status": "modified", "additions": 20, "deletions": 4, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8615012c05130f592b4ef6b11ac6af7cc28718d2/gcc%2Fconfig%2Frs6000%2Frs6000.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8615012c05130f592b4ef6b11ac6af7cc28718d2/gcc%2Fconfig%2Frs6000%2Frs6000.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.md?ref=8615012c05130f592b4ef6b11ac6af7cc28718d2", "patch": "@@ -986,8 +986,11 @@\n \n \n (define_insn \"extendsi<mode>2\"\n-  [(set (match_operand:EXTSI 0 \"gpc_reg_operand\" \"=r,r,wl,wu,wj,wK,wH\")\n-\t(sign_extend:EXTSI (match_operand:SI 1 \"lwa_operand\" \"Y,r,Z,Z,r,wK,wH\")))]\n+  [(set (match_operand:EXTSI 0 \"gpc_reg_operand\"\n+\t\t     \"=r, r,   wl,    wu,    wj,    wK,     wH,    wr\")\n+\n+\t(sign_extend:EXTSI (match_operand:SI 1 \"lwa_operand\"\n+\t\t     \"Y,  r,   Z,     Z,     r,     wK,     wH,    ?wIwH\")))]\n   \"\"\n   \"@\n    lwa%U1%X1 %0,%1\n@@ -996,10 +999,23 @@\n    lxsiwax %x0,%y1\n    mtvsrwa %x0,%1\n    vextsw2d %0,%1\n+   #\n    #\"\n-  [(set_attr \"type\" \"load,exts,fpload,fpload,mffgpr,vecexts,vecperm\")\n+  [(set_attr \"type\" \"load,exts,fpload,fpload,mffgpr,vecexts,vecperm,mftgpr\")\n    (set_attr \"sign_extend\" \"yes\")\n-   (set_attr \"length\" \"4,4,4,4,4,4,8\")])\n+   (set_attr \"length\" \"4,4,4,4,4,4,8,8\")])\n+\n+(define_split\n+  [(set (match_operand:EXTSI 0 \"int_reg_operand\")\n+\t(sign_extend:EXTSI (match_operand:SI 1 \"vsx_register_operand\")))]\n+  \"TARGET_DIRECT_MOVE_64BIT && reload_completed\"\n+  [(set (match_dup 2)\n+\t(match_dup 1))\n+   (set (match_dup 0)\n+\t(sign_extend:DI (match_dup 2)))]\n+{\n+  operands[2] = gen_rtx_REG (SImode, reg_or_subregno (operands[0]));\n+})\n \n (define_split\n   [(set (match_operand:DI 0 \"altivec_register_operand\")"}]}