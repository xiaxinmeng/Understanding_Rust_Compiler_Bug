{"sha": "5d72b79faa6924198b321b860244b7e228025a66", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWQ3MmI3OWZhYTY5MjQxOThiMzIxYjg2MDI0NGI3ZTIyODAyNWE2Ng==", "commit": {"author": {"name": "Yufeng Zhang", "email": "yufeng.zhang@arm.com", "date": "2014-01-07T16:18:04Z"}, "committer": {"name": "Yufeng Zhang", "email": "yufeng@gcc.gnu.org", "date": "2014-01-07T16:18:04Z"}, "message": "arm.c (arm_expand_neon_args): Call expand_expr with EXPAND_MEMORY for NEON_ARG_MEMORY...\n\ngcc/\n\n\t* config/arm/arm.c (arm_expand_neon_args): Call expand_expr\n\twith EXPAND_MEMORY for NEON_ARG_MEMORY; check if the returned\n\trtx is const0_rtx or not.\n\ngcc/testsuite/\n\n\t* gcc.target/arm/neon/vst1Q_laneu64-1.c: New test.\n\nFrom-SVN: r206395", "tree": {"sha": "dea23c1fa6a88632d40e007856454870302f9824", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/dea23c1fa6a88632d40e007856454870302f9824"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5d72b79faa6924198b321b860244b7e228025a66", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5d72b79faa6924198b321b860244b7e228025a66", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5d72b79faa6924198b321b860244b7e228025a66", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5d72b79faa6924198b321b860244b7e228025a66/comments", "author": null, "committer": null, "parents": [{"sha": "48d534390f43b216715d3d1b4c39c998b1d0bced", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/48d534390f43b216715d3d1b4c39c998b1d0bced", "html_url": "https://github.com/Rust-GCC/gccrs/commit/48d534390f43b216715d3d1b4c39c998b1d0bced"}], "stats": {"total": 44, "additions": 43, "deletions": 1}, "files": [{"sha": "c02060f904eab0039d0ba64c5533cb7f0893b3da", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5d72b79faa6924198b321b860244b7e228025a66/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5d72b79faa6924198b321b860244b7e228025a66/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=5d72b79faa6924198b321b860244b7e228025a66", "patch": "@@ -1,3 +1,9 @@\n+2014-01-07  Yufeng Zhang  <yufeng.zhang@arm.com>\n+\n+\t* config/arm/arm.c (arm_expand_neon_args): Call expand_expr\n+\twith EXPAND_MEMORY for NEON_ARG_MEMORY; check if the returned\n+\trtx is const0_rtx or not.\n+\n 2014-01-07  Richard Sandiford  <rdsandiford@googlemail.com>\n \n \tPR target/58115"}, {"sha": "c8bf7c1ecf33335851c74f161c36651ec53a785c", "filename": "gcc/config/arm/arm.c", "status": "modified", "additions": 8, "deletions": 1, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5d72b79faa6924198b321b860244b7e228025a66/gcc%2Fconfig%2Farm%2Farm.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5d72b79faa6924198b321b860244b7e228025a66/gcc%2Fconfig%2Farm%2Farm.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm.c?ref=5d72b79faa6924198b321b860244b7e228025a66", "patch": "@@ -24841,7 +24841,11 @@ arm_expand_neon_args (rtx target, int icode, int have_retval,\n \t\t\t\t\t\t    type_mode);\n             }\n \n-          op[argc] = expand_normal (arg[argc]);\n+\t  /* Use EXPAND_MEMORY for NEON_ARG_MEMORY to ensure a MEM_P\n+\t     be returned.  */\n+\t  op[argc] = expand_expr (arg[argc], NULL_RTX, VOIDmode,\n+\t\t\t\t  (thisarg == NEON_ARG_MEMORY\n+\t\t\t\t   ? EXPAND_MEMORY : EXPAND_NORMAL));\n \n           switch (thisarg)\n             {\n@@ -24860,6 +24864,9 @@ arm_expand_neon_args (rtx target, int icode, int have_retval,\n               break;\n \n             case NEON_ARG_MEMORY:\n+\t      /* Check if expand failed.  */\n+\t      if (op[argc] == const0_rtx)\n+\t\treturn 0;\n \t      gcc_assert (MEM_P (op[argc]));\n \t      PUT_MODE (op[argc], mode[argc]);\n \t      /* ??? arm_neon.h uses the same built-in functions for signed"}, {"sha": "519d47270367b1f4058e6db97aaf03a86edaf311", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5d72b79faa6924198b321b860244b7e228025a66/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5d72b79faa6924198b321b860244b7e228025a66/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=5d72b79faa6924198b321b860244b7e228025a66", "patch": "@@ -1,3 +1,7 @@\n+2014-01-07  Yufeng Zhang  <yufeng.zhang@arm.com>\n+\n+\t* gcc.target/arm/neon/vst1Q_laneu64-1.c: New test.\n+\n 2014-01-07  Richard Sandiford  <rdsandiford@googlemail.com>\n \n \t* gcc.target/i386/intrinsics_4.c (bar): New function."}, {"sha": "5f4c927b6e0af9e9e3885e5e1fa25ec21fd53c78", "filename": "gcc/testsuite/gcc.target/arm/neon/vst1Q_laneu64-1.c", "status": "added", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5d72b79faa6924198b321b860244b7e228025a66/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fneon%2Fvst1Q_laneu64-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5d72b79faa6924198b321b860244b7e228025a66/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fneon%2Fvst1Q_laneu64-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fneon%2Fvst1Q_laneu64-1.c?ref=5d72b79faa6924198b321b860244b7e228025a66", "patch": "@@ -0,0 +1,25 @@\n+/* Test the `vst1Q_laneu64' ARM Neon intrinsic.  */\n+\n+/* Detect ICE in the case of unaligned memory address.  */\n+\n+/* { dg-do compile } */\n+/* { dg-require-effective-target arm_neon_ok } */\n+/* { dg-add-options arm_neon } */\n+\n+#include \"arm_neon.h\"\n+\n+unsigned char dummy_store[1000];\n+\n+void\n+foo (char* addr)\n+{\n+  uint8x16_t vdata = vld1q_u8 (addr);\n+  vst1q_lane_u64 ((uint64_t*) &dummy_store, vreinterpretq_u64_u8 (vdata), 0);\n+}\n+\n+uint64_t\n+bar (uint64x2_t vdata)\n+{\n+  vdata = vld1q_lane_u64 ((uint64_t*) &dummy_store, vdata, 0);\n+  return vgetq_lane_u64 (vdata, 0);\n+}"}]}