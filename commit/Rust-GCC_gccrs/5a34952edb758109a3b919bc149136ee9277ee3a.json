{"sha": "5a34952edb758109a3b919bc149136ee9277ee3a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWEzNDk1MmVkYjc1ODEwOWEzYjkxOWJjMTQ5MTM2ZWU5Mjc3ZWUzYQ==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2019-11-25T07:48:48Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2019-11-25T07:48:48Z"}, "message": "cfganal.c (pre_and_rev_post_order_compute_fn): Use an auto_bb_flag instead of an sbitmap for visited handling.\n\n2019-11-25  Richard Biener  <rguenther@suse.de>\n\n\t* cfganal.c (pre_and_rev_post_order_compute_fn): Use an\n\tauto_bb_flag instead of an sbitmap for visited handling.\n\nFrom-SVN: r278666", "tree": {"sha": "e1c7bd72d45afac42b8f98d49cdb55b2f10707ec", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e1c7bd72d45afac42b8f98d49cdb55b2f10707ec"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5a34952edb758109a3b919bc149136ee9277ee3a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5a34952edb758109a3b919bc149136ee9277ee3a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5a34952edb758109a3b919bc149136ee9277ee3a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5a34952edb758109a3b919bc149136ee9277ee3a/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "bceb7181c852f0829ff4b8b4c86bd949eceda7bf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bceb7181c852f0829ff4b8b4c86bd949eceda7bf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bceb7181c852f0829ff4b8b4c86bd949eceda7bf"}], "stats": {"total": 20, "additions": 13, "deletions": 7}, "files": [{"sha": "a385d20617d39fae33dd32c9dabb12f38b838f15", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5a34952edb758109a3b919bc149136ee9277ee3a/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5a34952edb758109a3b919bc149136ee9277ee3a/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=5a34952edb758109a3b919bc149136ee9277ee3a", "patch": "@@ -1,3 +1,8 @@\n+2019-11-25  Richard Biener  <rguenther@suse.de>\n+\n+\t* cfganal.c (pre_and_rev_post_order_compute_fn): Use an\n+\tauto_bb_flag instead of an sbitmap for visited handling.\n+\n 2019-11-25 Kewen Lin  <linkw@gcc.gnu.org>\n \n \t* config/rs6000/vector.md (vector_fp_comparison_simple): New code"}, {"sha": "1a5c720984e1c1da28f55d1ba191f188a8d21fc4", "filename": "gcc/cfganal.c", "status": "modified", "additions": 8, "deletions": 7, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5a34952edb758109a3b919bc149136ee9277ee3a/gcc%2Fcfganal.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5a34952edb758109a3b919bc149136ee9277ee3a/gcc%2Fcfganal.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcfganal.c?ref=5a34952edb758109a3b919bc149136ee9277ee3a", "patch": "@@ -967,11 +967,8 @@ pre_and_rev_post_order_compute_fn (struct function *fn,\n   else\n     rev_post_order_num -= NUM_FIXED_BLOCKS;\n \n-  /* Allocate bitmap to track nodes that have been visited.  */\n-  auto_sbitmap visited (last_basic_block_for_fn (fn));\n-\n-  /* None of the nodes in the CFG have been visited yet.  */\n-  bitmap_clear (visited);\n+  /* BB flag to track nodes that have been visited.  */\n+  auto_bb_flag visited (fn);\n \n   /* Push the first edge on to the stack.  */\n   stack.quick_push (ei_start (ENTRY_BLOCK_PTR_FOR_FN (fn)->succs));\n@@ -988,10 +985,10 @@ pre_and_rev_post_order_compute_fn (struct function *fn,\n \n       /* Check if the edge destination has been visited yet.  */\n       if (dest != EXIT_BLOCK_PTR_FOR_FN (fn)\n-\t  && ! bitmap_bit_p (visited, dest->index))\n+\t  && ! (dest->flags & visited))\n \t{\n \t  /* Mark that we have visited the destination.  */\n-\t  bitmap_set_bit (visited, dest->index);\n+\t  dest->flags |= visited;\n \n \t  if (pre_order)\n \t    pre_order[pre_order_num] = dest->index;\n@@ -1032,6 +1029,10 @@ pre_and_rev_post_order_compute_fn (struct function *fn,\n \trev_post_order[rev_post_order_num--] = ENTRY_BLOCK;\n     }\n \n+  /* Clear the temporarily allocated flag.  */\n+  for (int i = 0; i < pre_order_num; ++i)\n+    BASIC_BLOCK_FOR_FN (fn, rev_post_order[i])->flags &= ~visited;\n+\n   return pre_order_num;\n }\n "}]}