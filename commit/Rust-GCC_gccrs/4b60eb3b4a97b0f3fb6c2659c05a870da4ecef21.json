{"sha": "4b60eb3b4a97b0f3fb6c2659c05a870da4ecef21", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGI2MGViM2I0YTk3YjBmM2ZiNmMyNjU5YzA1YTg3MGRhNGVjZWYyMQ==", "commit": {"author": {"name": "John David Anglin", "email": "dave.anglin@nrc-cnrc.gc.ca", "date": "2004-01-21T20:08:22Z"}, "committer": {"name": "John David Anglin", "email": "danglin@gcc.gnu.org", "date": "2004-01-21T20:08:22Z"}, "message": "inclhack.def (hpux10_stdio_declarations, [...]): New hacks.\n\n\t* fixinc/inclhack.def (hpux10_stdio_declarations, ultrix_const3,\n\tultrix_locale, ultrix_stdlib, ultrix_strings, ultrix_sys_time,\n\tultrix_unistd): New hacks.\n\t* fixinc/tests/base/stdio.h (HPUX10_STDIO_DECLARATIONS_CHECK,\n\tULTRIX_CONST2_CHECK): Add checks.\n\t* fixinc/tests/base/stdlib.h (ULTRIX_STDLIB_CHECK): Likewise.\n\t* fixinc/tests/base/strings.h (ULTRIX_STRINGS2_CHECK): Likewise.\n\t* fixinc/tests/base/unistd.h (ULTRIX_UNISTD_CHECK): Likewise.\n\t* fixinc/tests/base/sys/time.h (ULTRIX_SYS_TIME_CHECK): Likewise.\n\t* fixinc/tests/base/locale.h: New file.\n\t* fixinc/fixincl.x: Rebuilt.\n\nFrom-SVN: r76298", "tree": {"sha": "b773c74895d69c7da8c863cdba4473ad83c0fa7f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b773c74895d69c7da8c863cdba4473ad83c0fa7f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4b60eb3b4a97b0f3fb6c2659c05a870da4ecef21", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4b60eb3b4a97b0f3fb6c2659c05a870da4ecef21", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4b60eb3b4a97b0f3fb6c2659c05a870da4ecef21", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4b60eb3b4a97b0f3fb6c2659c05a870da4ecef21/comments", "author": null, "committer": null, "parents": [{"sha": "dd69a0e038b94aca96bb0028ac1279ac243ba4e5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dd69a0e038b94aca96bb0028ac1279ac243ba4e5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/dd69a0e038b94aca96bb0028ac1279ac243ba4e5"}], "stats": {"total": 620, "additions": 615, "deletions": 5}, "files": [{"sha": "83a2d5c5f7f04b86358c297eb3b9d143dfe5bc25", "filename": "gcc/ChangeLog", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b60eb3b4a97b0f3fb6c2659c05a870da4ecef21/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b60eb3b4a97b0f3fb6c2659c05a870da4ecef21/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=4b60eb3b4a97b0f3fb6c2659c05a870da4ecef21", "patch": "@@ -1,3 +1,17 @@\n+2004-01-21  John David Anglin  <dave.anglin@nrc-cnrc.gc.ca>\n+\n+\t* fixinc/inclhack.def (hpux10_stdio_declarations, ultrix_const3,\n+\tultrix_locale, ultrix_stdlib, ultrix_strings, ultrix_sys_time,\n+\tultrix_unistd): New hacks.\n+\t* fixinc/tests/base/stdio.h (HPUX10_STDIO_DECLARATIONS_CHECK,\n+\tULTRIX_CONST2_CHECK): Add checks.\n+\t* fixinc/tests/base/stdlib.h (ULTRIX_STDLIB_CHECK): Likewise.\n+\t* fixinc/tests/base/strings.h (ULTRIX_STRINGS2_CHECK): Likewise.\n+\t* fixinc/tests/base/unistd.h (ULTRIX_UNISTD_CHECK): Likewise.\n+\t* fixinc/tests/base/sys/time.h (ULTRIX_SYS_TIME_CHECK): Likewise.\n+\t* fixinc/tests/base/locale.h: New file.\n+\t* fixinc/fixincl.x: Rebuilt.\n+\n 2004-01-21  Andreas Jaeger  <aj@suse.de>\n \t    Michael Matz  <matz@suse.de>\n "}, {"sha": "f0cecc2d34c16dabbd245d4bbfc9e9af48f8833a", "filename": "gcc/fixinc/fixincl.x", "status": "modified", "additions": 340, "deletions": 5, "changes": 345, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b60eb3b4a97b0f3fb6c2659c05a870da4ecef21/gcc%2Ffixinc%2Ffixincl.x", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b60eb3b4a97b0f3fb6c2659c05a870da4ecef21/gcc%2Ffixinc%2Ffixincl.x", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffixinc%2Ffixincl.x?ref=4b60eb3b4a97b0f3fb6c2659c05a870da4ecef21", "patch": "@@ -2,11 +2,11 @@\n  * \n  * DO NOT EDIT THIS FILE   (fixincl.x)\n  * \n- * It has been AutoGen-ed  Tuesday January 20, 2004 at 03:43:24 PM PST\n+ * It has been AutoGen-ed  Wednesday January 21, 2004 at 03:05:26 PM EST\n  * From the definitions    inclhack.def\n  * and the template file   fixincl\n  */\n-/* DO NOT CVS-MERGE THIS FILE, EITHER Tue Jan 20 15:43:24 PST 2004\n+/* DO NOT CVS-MERGE THIS FILE, EITHER Wed Jan 21 15:05:26 EST 2004\n  *\n  * You must regenerate it.  Use the ./genfixes script.\n  *\n@@ -15,7 +15,7 @@\n  * certain ANSI-incompatible system header files which are fixed to work\n  * correctly with ANSI C and placed in a directory that GNU C will search.\n  *\n- * This file contains 165 fixup descriptions.\n+ * This file contains 172 fixup descriptions.\n  *\n  * See README for more information.\n  *\n@@ -2143,6 +2143,55 @@ static const char* apzHpux10_Ctype_Declarations2Patch[] = {\n #endif /* _PROTOTYPES */\\n\",\n     (char*)NULL };\n \n+/* * * * * * * * * * * * * * * * * * * * * * * * * *\n+ *\n+ *  Description of Hpux10_Stdio_Declarations fix\n+ */\n+tSCC zHpux10_Stdio_DeclarationsName[] =\n+     \"hpux10_stdio_declarations\";\n+\n+/*\n+ *  File name selection pattern\n+ */\n+tSCC zHpux10_Stdio_DeclarationsList[] =\n+  \"|stdio.h|\";\n+/*\n+ *  Machine/OS name selection pattern\n+ */\n+#define apzHpux10_Stdio_DeclarationsMachs (const char**)NULL\n+\n+/*\n+ *  content selection pattern - do fix if pattern found\n+ */\n+tSCC zHpux10_Stdio_DeclarationsSelect0[] =\n+       \"^#[ \\t]*define _iob[ \\t]*__iob\";\n+\n+/*\n+ *  content bypass pattern - skip fix if pattern found\n+ */\n+tSCC zHpux10_Stdio_DeclarationsBypass0[] =\n+       \"^[ \\t]*extern[ \\t]*int[ \\t]*vsnprintf[ \\t]*\\\\(\";\n+\n+#define    HPUX10_STDIO_DECLARATIONS_TEST_CT  2\n+static tTestDesc aHpux10_Stdio_DeclarationsTests[] = {\n+  { TT_NEGREP,   zHpux10_Stdio_DeclarationsBypass0, (regex_t*)NULL },\n+  { TT_EGREP,    zHpux10_Stdio_DeclarationsSelect0, (regex_t*)NULL }, };\n+\n+/*\n+ *  Fix Command Arguments for Hpux10_Stdio_Declarations\n+ */\n+static const char* apzHpux10_Stdio_DeclarationsPatch[] = {\n+    \"format\",\n+    \"%0\\n\\n\\\n+#  if defined(__STDC__) || defined(__cplusplus)\\n\\\n+     extern int snprintf(char *, size_t, const char *, ...);\\n\\\n+     extern int vsnprintf(char *, size_t, const char *, __va_list);\\n\\\n+#  else /* not __STDC__) || __cplusplus */\\n\\\n+     extern int snprintf();\\n\\\n+     extern int vsnprintf();\\n\\\n+#  endif /* __STDC__) || __cplusplus */\\n\",\n+    (char*)NULL };\n+\n /* * * * * * * * * * * * * * * * * * * * * * * * * *\n  *\n  *  Description of Hpux11_Abs fix\n@@ -5599,6 +5648,42 @@ static const char* apzUltrix_Const2Patch[] = {\n     \"([ \\t*](fopen|sscanf|popen|tempnam))\\\\([ \\t]*char[ \\t]*\\\\*([^,]*),[ \\t]*char[ \\t]*\\\\*[ \\t]*\",\n     (char*)NULL };\n \n+/* * * * * * * * * * * * * * * * * * * * * * * * * *\n+ *\n+ *  Description of Ultrix_Const3 fix\n+ */\n+tSCC zUltrix_Const3Name[] =\n+     \"ultrix_const3\";\n+\n+/*\n+ *  File name selection pattern\n+ */\n+tSCC zUltrix_Const3List[] =\n+  \"|stdio.h|\";\n+/*\n+ *  Machine/OS name selection pattern\n+ */\n+#define apzUltrix_Const3Machs (const char**)NULL\n+\n+/*\n+ *  content selection pattern - do fix if pattern found\n+ */\n+tSCC zUltrix_Const3Select0[] =\n+       \"fdopen\\\\( .*, char \\\\*\";\n+\n+#define    ULTRIX_CONST3_TEST_CT  1\n+static tTestDesc aUltrix_Const3Tests[] = {\n+  { TT_EGREP,    zUltrix_Const3Select0, (regex_t*)NULL }, };\n+\n+/*\n+ *  Fix Command Arguments for Ultrix_Const3\n+ */\n+static const char* apzUltrix_Const3Patch[] = {\n+    \"format\",\n+    \"%1 const %3 *__\",\n+    \"([ \\t*](fdopen)\\\\(.*)[ \\t]+(char|void) \\\\*__\",\n+    (char*)NULL };\n+\n /* * * * * * * * * * * * * * * * * * * * * * * * * *\n  *\n  *  Description of Ultrix_Fix_Fixproto fix\n@@ -5671,6 +5756,40 @@ static const char* apzUltrix_IfdefPatch[] = {\n     \"#if defined(KERNEL) &&\",\n     (char*)NULL };\n \n+/* * * * * * * * * * * * * * * * * * * * * * * * * *\n+ *\n+ *  Description of Ultrix_Locale fix\n+ */\n+tSCC zUltrix_LocaleName[] =\n+     \"ultrix_locale\";\n+\n+/*\n+ *  File name selection pattern\n+ */\n+tSCC zUltrix_LocaleList[] =\n+  \"|locale.h|\";\n+/*\n+ *  Machine/OS name selection pattern\n+ */\n+#define apzUltrix_LocaleMachs (const char**)NULL\n+\n+/*\n+ *  content selection pattern - do fix if pattern found\n+ */\n+tSCC zUltrix_LocaleSelect0[] =\n+       \"@\\\\(#\\\\)locale\\\\.h.*6\\\\.1.*\\\\(ULTRIX\\\\)\";\n+\n+#define    ULTRIX_LOCALE_TEST_CT  1\n+static tTestDesc aUltrix_LocaleTests[] = {\n+  { TT_EGREP,    zUltrix_LocaleSelect0, (regex_t*)NULL }, };\n+\n+/*\n+ *  Fix Command Arguments for Ultrix_Locale\n+ */\n+static const char* apzUltrix_LocalePatch[] = {\n+    \"wrap\",\n+    (char*)NULL };\n+\n /* * * * * * * * * * * * * * * * * * * * * * * * * *\n  *\n  *  Description of Ultrix_Math_Ifdef fix\n@@ -5849,6 +5968,47 @@ static const char* apzUltrix_StaticPatch[] = { \"sed\",\n     \"-e\", \"s/^#include \\\"r4_cpu\\\\.h\\\"$/#include <machine\\\\/r4_cpu\\\\.h>/\",\n     (char*)NULL };\n \n+/* * * * * * * * * * * * * * * * * * * * * * * * * *\n+ *\n+ *  Description of Ultrix_Stdlib fix\n+ */\n+tSCC zUltrix_StdlibName[] =\n+     \"ultrix_stdlib\";\n+\n+/*\n+ *  File name selection pattern\n+ */\n+tSCC zUltrix_StdlibList[] =\n+  \"|stdlib.h|\";\n+/*\n+ *  Machine/OS name selection pattern\n+ */\n+#define apzUltrix_StdlibMachs (const char**)NULL\n+\n+/*\n+ *  content selection pattern - do fix if pattern found\n+ */\n+tSCC zUltrix_StdlibSelect0[] =\n+       \"@\\\\(#\\\\)stdlib\\\\.h.*6\\\\.1.*\\\\(ULTRIX\\\\)\";\n+\n+#define    ULTRIX_STDLIB_TEST_CT  1\n+static tTestDesc aUltrix_StdlibTests[] = {\n+  { TT_EGREP,    zUltrix_StdlibSelect0, (regex_t*)NULL }, };\n+\n+/*\n+ *  Fix Command Arguments for Ultrix_Stdlib\n+ */\n+static const char* apzUltrix_StdlibPatch[] = { \"sed\",\n+    \"-e\", \"/^char.*getenv( const char .* );.*$/a\\\\\\n\\\n+int\\t\\tsetenv( const char *__name, const char *__val, int __ovrwrt );\\\\\\n\\\n+void\\t\\tunsetenv( const char *__name );\\\\\\n\\\n+int\\t\\tputenv( char *__s );\\n\",\n+    \"-e\", \"/^char.*getenv();.*$/a\\\\\\n\\\n+int\\tsetenv();\\\\\\n\\\n+void\\tunsetenv();\\\\\\n\\\n+int\\tputenv();\\n\",\n+    (char*)NULL };\n+\n /* * * * * * * * * * * * * * * * * * * * * * * * * *\n  *\n  *  Description of Ultrix_Strings fix\n@@ -5883,6 +6043,139 @@ static const char* apzUltrix_StringsPatch[] = {\n     \"wrap\",\n     (char*)NULL };\n \n+/* * * * * * * * * * * * * * * * * * * * * * * * * *\n+ *\n+ *  Description of Ultrix_Strings2 fix\n+ */\n+tSCC zUltrix_Strings2Name[] =\n+     \"ultrix_strings2\";\n+\n+/*\n+ *  File name selection pattern\n+ */\n+tSCC zUltrix_Strings2List[] =\n+  \"|strings.h|\";\n+/*\n+ *  Machine/OS name selection pattern\n+ */\n+#define apzUltrix_Strings2Machs (const char**)NULL\n+\n+/*\n+ *  content selection pattern - do fix if pattern found\n+ */\n+tSCC zUltrix_Strings2Select0[] =\n+       \"@\\\\(#\\\\)strings\\\\.h.*6\\\\.1.*\\\\(ULTRIX\\\\)\";\n+\n+#define    ULTRIX_STRINGS2_TEST_CT  1\n+static tTestDesc aUltrix_Strings2Tests[] = {\n+  { TT_EGREP,    zUltrix_Strings2Select0, (regex_t*)NULL }, };\n+\n+/*\n+ *  Fix Command Arguments for Ultrix_Strings2\n+ */\n+static const char* apzUltrix_Strings2Patch[] = { \"sed\",\n+    \"-e\", \"/^.*strncmp( const .* );.*/a\\\\\\n\\\n+\\\\\\n\\\n+extern int\\\\\\n\\\n+\\tstrcasecmp( const char *__s1, const char *__s2),\\\\\\n\\\n+\\tstrncasecmp( const char *__s1, const char *__s2, size_t __n );\\n\",\n+    \"-e\", \"/^.*strncmp();.*/a\\\\\\n\\\n+extern int\\\\\\n\\\n+\\tstrcasecmp(),\\\\\\n\\\n+\\tstrncasecmp();\\n\",\n+    (char*)NULL };\n+\n+/* * * * * * * * * * * * * * * * * * * * * * * * * *\n+ *\n+ *  Description of Ultrix_Sys_Time fix\n+ */\n+tSCC zUltrix_Sys_TimeName[] =\n+     \"ultrix_sys_time\";\n+\n+/*\n+ *  File name selection pattern\n+ */\n+tSCC zUltrix_Sys_TimeList[] =\n+  \"|sys/time.h|\";\n+/*\n+ *  Machine/OS name selection pattern\n+ */\n+#define apzUltrix_Sys_TimeMachs (const char**)NULL\n+\n+/*\n+ *  content selection pattern - do fix if pattern found\n+ */\n+tSCC zUltrix_Sys_TimeSelect0[] =\n+       \"@\\\\(#\\\\)time\\\\.h.*6\\\\.1.*\\\\(ULTRIX\\\\)\";\n+\n+#define    ULTRIX_SYS_TIME_TEST_CT  1\n+static tTestDesc aUltrix_Sys_TimeTests[] = {\n+  { TT_EGREP,    zUltrix_Sys_TimeSelect0, (regex_t*)NULL }, };\n+\n+/*\n+ *  Fix Command Arguments for Ultrix_Sys_Time\n+ */\n+static const char* apzUltrix_Sys_TimePatch[] = { \"sed\",\n+    \"-e\", \"/^extern.*time_t.*time( time_t .* );.*$/a\\\\\\n\\\n+\\\\\\n\\\n+extern int adjtime(struct timeval *, struct timeval *);\\\\\\n\\\n+extern int getitimer(int, struct itimerval *);\\\\\\n\\\n+extern int setitimer(int, struct itimerval *, struct itimerval *);\\\\\\n\\\n+extern int gettimeofday(struct timeval *, struct timezone *);\\\\\\n\\\n+extern int settimeofday(struct timeval *, struct timezone *);\\\\\\n\\\n+extern void profil(const void *, size_t, size_t, unsigned int);\\\\\\n\\\n+extern int stime(const time_t *);\\\\\\n\\\n+extern int utimes(const char *, const struct timeval[2]);\\\\\\n\\\n+extern int select(int, fd_set *, fd_set *, fd_set *, struct timeval *);\\n\",\n+    \"-e\", \"/^extern.*double.*difftime();.*$/a\\\\\\n\\\n+extern\\tint adjtime();\\\\\\n\\\n+extern\\tint getitimer();\\\\\\n\\\n+extern\\tint setitimer();\\\\\\n\\\n+extern\\tint gettimeofday();\\\\\\n\\\n+extern\\tint settimeofday();\\\\\\n\\\n+extern\\tvoid profil();\\\\\\n\\\n+extern\\tint stime();\\\\\\n\\\n+extern\\tint utimes();\\\\\\n\\\n+extern\\tint select();\\n\",\n+    (char*)NULL };\n+\n+/* * * * * * * * * * * * * * * * * * * * * * * * * *\n+ *\n+ *  Description of Ultrix_Unistd fix\n+ */\n+tSCC zUltrix_UnistdName[] =\n+     \"ultrix_unistd\";\n+\n+/*\n+ *  File name selection pattern\n+ */\n+tSCC zUltrix_UnistdList[] =\n+  \"|unistd.h|\";\n+/*\n+ *  Machine/OS name selection pattern\n+ */\n+#define apzUltrix_UnistdMachs (const char**)NULL\n+\n+/*\n+ *  content selection pattern - do fix if pattern found\n+ */\n+tSCC zUltrix_UnistdSelect0[] =\n+       \"@\\\\(#\\\\)unistd\\\\.h.*6\\\\.1.*\\\\(ULTRIX\\\\)\";\n+\n+#define    ULTRIX_UNISTD_TEST_CT  1\n+static tTestDesc aUltrix_UnistdTests[] = {\n+  { TT_EGREP,    zUltrix_UnistdSelect0, (regex_t*)NULL }, };\n+\n+/*\n+ *  Fix Command Arguments for Ultrix_Unistd\n+ */\n+static const char* apzUltrix_UnistdPatch[] = { \"sed\",\n+    \"-e\", \"/^[ \\t]*getgroups(),.*$/a\\\\\\n\\\n+\\tgetpagesize(),\\n\",\n+    \"-e\", \"/^[ \\t]*fork(),.*$/a\\\\\\n\\\n+\\tvfork(),\\n\",\n+    (char*)NULL };\n+\n /* * * * * * * * * * * * * * * * * * * * * * * * * *\n  *\n  *  Description of Undefine_Null fix\n@@ -6528,9 +6821,9 @@ static const char* apzX11_SprintfPatch[] = {\n  *\n  *  List of all fixes\n  */\n-#define REGEX_COUNT          185\n+#define REGEX_COUNT          193\n #define MACH_LIST_SIZE_LIMIT 261\n-#define FIX_COUNT            165\n+#define FIX_COUNT            172\n \n /*\n  *  Enumerate the fixes\n@@ -6586,6 +6879,7 @@ typedef enum {\n     HPUX11_CPP_POW_INLINE_FIXIDX,\n     HPUX10_CTYPE_DECLARATIONS1_FIXIDX,\n     HPUX10_CTYPE_DECLARATIONS2_FIXIDX,\n+    HPUX10_STDIO_DECLARATIONS_FIXIDX,\n     HPUX11_ABS_FIXIDX,\n     HPUX11_FABSF_FIXIDX,\n     HPUX11_SIZE_T_FIXIDX,\n@@ -6677,14 +6971,20 @@ typedef enum {\n     ULTRIX_ATOF_PARAM_FIXIDX,\n     ULTRIX_CONST_FIXIDX,\n     ULTRIX_CONST2_FIXIDX,\n+    ULTRIX_CONST3_FIXIDX,\n     ULTRIX_FIX_FIXPROTO_FIXIDX,\n     ULTRIX_IFDEF_FIXIDX,\n+    ULTRIX_LOCALE_FIXIDX,\n     ULTRIX_MATH_IFDEF_FIXIDX,\n     ULTRIX_NESTED_IOCTL_FIXIDX,\n     ULTRIX_NESTED_SVC_FIXIDX,\n     ULTRIX_STAT_FIXIDX,\n     ULTRIX_STATIC_FIXIDX,\n+    ULTRIX_STDLIB_FIXIDX,\n     ULTRIX_STRINGS_FIXIDX,\n+    ULTRIX_STRINGS2_FIXIDX,\n+    ULTRIX_SYS_TIME_FIXIDX,\n+    ULTRIX_UNISTD_FIXIDX,\n     UNDEFINE_NULL_FIXIDX,\n     UNICOSMK_RESTRICT_FIXIDX,\n     UW7_BYTEORDER_FIX_FIXIDX,\n@@ -6954,6 +7254,11 @@ tFixDesc fixDescList[ FIX_COUNT ] = {\n      HPUX10_CTYPE_DECLARATIONS2_TEST_CT, FD_MACH_ONLY | FD_SUBROUTINE,\n      aHpux10_Ctype_Declarations2Tests,   apzHpux10_Ctype_Declarations2Patch, 0 },\n \n+  {  zHpux10_Stdio_DeclarationsName,    zHpux10_Stdio_DeclarationsList,\n+     apzHpux10_Stdio_DeclarationsMachs,\n+     HPUX10_STDIO_DECLARATIONS_TEST_CT, FD_MACH_ONLY | FD_SUBROUTINE,\n+     aHpux10_Stdio_DeclarationsTests,   apzHpux10_Stdio_DeclarationsPatch, 0 },\n+\n   {  zHpux11_AbsName,    zHpux11_AbsList,\n      apzHpux11_AbsMachs,\n      HPUX11_ABS_TEST_CT, FD_MACH_ONLY | FD_SUBROUTINE,\n@@ -7409,6 +7714,11 @@ tFixDesc fixDescList[ FIX_COUNT ] = {\n      ULTRIX_CONST2_TEST_CT, FD_MACH_ONLY | FD_SUBROUTINE,\n      aUltrix_Const2Tests,   apzUltrix_Const2Patch, 0 },\n \n+  {  zUltrix_Const3Name,    zUltrix_Const3List,\n+     apzUltrix_Const3Machs,\n+     ULTRIX_CONST3_TEST_CT, FD_MACH_ONLY | FD_SUBROUTINE,\n+     aUltrix_Const3Tests,   apzUltrix_Const3Patch, 0 },\n+\n   {  zUltrix_Fix_FixprotoName,    zUltrix_Fix_FixprotoList,\n      apzUltrix_Fix_FixprotoMachs,\n      ULTRIX_FIX_FIXPROTO_TEST_CT, FD_MACH_ONLY | FD_SUBROUTINE,\n@@ -7419,6 +7729,11 @@ tFixDesc fixDescList[ FIX_COUNT ] = {\n      ULTRIX_IFDEF_TEST_CT, FD_MACH_ONLY | FD_SUBROUTINE,\n      aUltrix_IfdefTests,   apzUltrix_IfdefPatch, 0 },\n \n+  {  zUltrix_LocaleName,    zUltrix_LocaleList,\n+     apzUltrix_LocaleMachs,\n+     ULTRIX_LOCALE_TEST_CT, FD_MACH_ONLY | FD_SUBROUTINE,\n+     aUltrix_LocaleTests,   apzUltrix_LocalePatch, 0 },\n+\n   {  zUltrix_Math_IfdefName,    zUltrix_Math_IfdefList,\n      apzUltrix_Math_IfdefMachs,\n      ULTRIX_MATH_IFDEF_TEST_CT, FD_MACH_ONLY | FD_SUBROUTINE,\n@@ -7444,11 +7759,31 @@ tFixDesc fixDescList[ FIX_COUNT ] = {\n      ULTRIX_STATIC_TEST_CT, FD_MACH_ONLY,\n      aUltrix_StaticTests,   apzUltrix_StaticPatch, 0 },\n \n+  {  zUltrix_StdlibName,    zUltrix_StdlibList,\n+     apzUltrix_StdlibMachs,\n+     ULTRIX_STDLIB_TEST_CT, FD_MACH_ONLY,\n+     aUltrix_StdlibTests,   apzUltrix_StdlibPatch, 0 },\n+\n   {  zUltrix_StringsName,    zUltrix_StringsList,\n      apzUltrix_StringsMachs,\n      ULTRIX_STRINGS_TEST_CT, FD_MACH_ONLY | FD_SUBROUTINE,\n      aUltrix_StringsTests,   apzUltrix_StringsPatch, 0 },\n \n+  {  zUltrix_Strings2Name,    zUltrix_Strings2List,\n+     apzUltrix_Strings2Machs,\n+     ULTRIX_STRINGS2_TEST_CT, FD_MACH_ONLY,\n+     aUltrix_Strings2Tests,   apzUltrix_Strings2Patch, 0 },\n+\n+  {  zUltrix_Sys_TimeName,    zUltrix_Sys_TimeList,\n+     apzUltrix_Sys_TimeMachs,\n+     ULTRIX_SYS_TIME_TEST_CT, FD_MACH_ONLY,\n+     aUltrix_Sys_TimeTests,   apzUltrix_Sys_TimePatch, 0 },\n+\n+  {  zUltrix_UnistdName,    zUltrix_UnistdList,\n+     apzUltrix_UnistdMachs,\n+     ULTRIX_UNISTD_TEST_CT, FD_MACH_ONLY,\n+     aUltrix_UnistdTests,   apzUltrix_UnistdPatch, 0 },\n+\n   {  zUndefine_NullName,    zUndefine_NullList,\n      apzUndefine_NullMachs,\n      UNDEFINE_NULL_TEST_CT, FD_MACH_ONLY | FD_SUBROUTINE,"}, {"sha": "a05227451897e0066f1ec4d98be16b3b50b44314", "filename": "gcc/fixinc/inclhack.def", "status": "modified", "additions": 163, "deletions": 0, "changes": 163, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b60eb3b4a97b0f3fb6c2659c05a870da4ecef21/gcc%2Ffixinc%2Finclhack.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b60eb3b4a97b0f3fb6c2659c05a870da4ecef21/gcc%2Ffixinc%2Finclhack.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffixinc%2Finclhack.def?ref=4b60eb3b4a97b0f3fb6c2659c05a870da4ecef21", "patch": "@@ -1265,6 +1265,28 @@ fix = {\n };\n \n \n+/*\n+ *  Fix hpux 10.X missing stdio declarations\n+ */\n+fix = {\n+    hackname = hpux10_stdio_declarations;\n+    files    = stdio.h;\n+    select   = \"^#[ \\t]*define _iob[ \\t]*__iob\";\n+    bypass   = \"^[ \\t]*extern[ \\t]*int[ \\t]*vsnprintf[ \\t]*\\\\(\";\n+    c_fix     = format;\n+    c_fix_arg = \"%0\\n\\n\"\n+\t\"#  if defined(__STDC__) || defined(__cplusplus)\\n\"\n+\t\"     extern int snprintf(char *, size_t, const char *, ...);\\n\"\n+\t\"     extern int vsnprintf(char *, size_t, const char *, __va_list);\\n\"\n+\t\"#  else /* not __STDC__) || __cplusplus */\\n\"\n+\t\"     extern int snprintf();\\n\"\n+\t\"     extern int vsnprintf();\\n\"\n+\t\"#  endif /* __STDC__) || __cplusplus */\\n\";\n+\n+    test_text = \"#  define _iob __iob\\n\";\n+};\n+\n+\n /*\n  *  Make sure hpux defines abs in header.\n  */\n@@ -3445,6 +3467,24 @@ fix = {\n };\n \n \n+/*\n+ *  parameters not const on Ultrix V4.3.\n+ */\n+fix = {\n+    hackname  = ultrix_const3;\n+    files     = stdio.h;\n+    select    = 'fdopen\\( .*, char \\*';\n+\n+    c_fix     = format;\n+    c_fix_arg = \"%1 const %3 *__\";\n+    c_fix_arg = \"([ \\t*](fdopen)\\\\(.*)\"\n+                \"[ \\t]+(char|void) \\\\*__\";\n+\n+    test_text =\n+    \"extern FILE *\tfdopen( int __filedes, char *__type );\\n\";\n+};\n+\n+\n /*\n  * Ultrix V4.[35] puts the declaration of uname before the definition\n  * of struct utsname, so the prototype (added by fixproto) causes havoc.\n@@ -3479,6 +3519,19 @@ fix = {\n };\n \n \n+/*\n+ *  Add once-only latch to Ultrix V4.3 locale.h.\n+ */\n+fix = {\n+    hackname = ultrix_locale;\n+    files  = locale.h;\n+    select = \"@\\\\(#\\\\)locale\\\\.h.*6\\\\.1.*\\\\(ULTRIX\\\\)\";\n+    c_fix  = wrap;\n+    test_text =\n+    \"@(#)locale.h   6.1     (ULTRIX)\\n\";\n+};\n+\n+\n /*\n  * Strip \"|| CC$gfloat\" from Ultrix math headers.\n  */\n@@ -3558,6 +3611,31 @@ fix = {\n };\n \n \n+/*\n+ *  Add missing declarations to Ultrix V4.3 stdlib.h.\n+ */\n+fix = {\n+    hackname = ultrix_stdlib;\n+    files  = stdlib.h;\n+    select = \"@\\\\(#\\\\)stdlib\\\\.h.*6\\\\.1.*\\\\(ULTRIX\\\\)\";\n+\n+    sed    = \"/^char.*getenv( const char .* );.*$/a\\\\\\n\"\n+    \"int\\t\\tsetenv( const char *__name, const char *__val, int __ovrwrt );\\\\\\n\"\n+    \"void\\t\\tunsetenv( const char *__name );\\\\\\n\"\n+    \"int\\t\\tputenv( char *__s );\\n\";\n+\n+    sed    = \"/^char.*getenv();.*$/a\\\\\\n\"\n+    \"int\\tsetenv();\\\\\\n\"\n+    \"void\\tunsetenv();\\\\\\n\"\n+    \"int\\tputenv();\\n\";\n+\n+    test_text =\n+    \"@(#)stdlib.h      6.1     (ULTRIX)\\n\"\n+    \"char *\t\tgetenv( const char *__name );\\n\"\n+    \"char\t*getenv();\\n\";\n+};\n+\n+\n /*\n  *  Add once-only latch to Ultrix V4.3 strings.h.\n  */\n@@ -3571,6 +3649,91 @@ fix = {\n };\n \n \n+/*\n+ *  Add missing declarations to Ultrix V4.3 strings.h.\n+ */\n+fix = {\n+    hackname = ultrix_strings2;\n+    files  = strings.h;\n+    select = \"@\\\\(#\\\\)strings\\\\.h.*6\\\\.1.*\\\\(ULTRIX\\\\)\";\n+\n+    sed    = \"/^.*strncmp( const .* );.*/a\\\\\\n\"\n+    \"\\\\\\n\"\n+    \"extern int\\\\\\n\"\n+    \"\\tstrcasecmp( const char *__s1, const char *__s2),\\\\\\n\"\n+    \"\\tstrncasecmp( const char *__s1, const char *__s2, size_t __n );\\n\";\n+\n+    sed    = \"/^.*strncmp();.*/a\\\\\\n\"\n+    \"extern int\\\\\\n\"\n+    \"\\tstrcasecmp(),\\\\\\n\"\n+    \"\\tstrncasecmp();\\n\";\n+\n+    test_text =\n+    \"@(#)strings.h      6.1     (ULTRIX)\\n\"\n+    \"\\tstrncmp( const char *__s1, const char *__s2, size_t __n );\\n\"\n+    \"\\tstrncmp();\\n\";\n+};\n+\n+\n+/*\n+ *  Add missing declarations to Ultrix V4.3 sys/time.h.\n+ */\n+fix = {\n+    hackname = ultrix_sys_time;\n+    files  = sys/time.h;\n+    select = \"@\\\\(#\\\\)time\\\\.h.*6\\\\.1.*\\\\(ULTRIX\\\\)\";\n+\n+    sed    = \"/^extern.*time_t.*time( time_t .* );.*$/a\\\\\\n\"\n+    \"\\\\\\n\"\n+    \"extern int adjtime(struct timeval *, struct timeval *);\\\\\\n\"\n+    \"extern int getitimer(int, struct itimerval *);\\\\\\n\"\n+    \"extern int setitimer(int, struct itimerval *, struct itimerval *);\\\\\\n\"\n+    \"extern int gettimeofday(struct timeval *, struct timezone *);\\\\\\n\"\n+    \"extern int settimeofday(struct timeval *, struct timezone *);\\\\\\n\"\n+    \"extern void profil(const void *, size_t, size_t, unsigned int);\\\\\\n\"\n+    \"extern int stime(const time_t *);\\\\\\n\"\n+    \"extern int utimes(const char *, const struct timeval[2]);\\\\\\n\"\n+    \"extern int select(int, fd_set *, fd_set *, fd_set *, struct timeval *);\\n\";\n+\n+    sed    = \"/^extern.*double.*difftime();.*$/a\\\\\\n\"\n+    \"extern\\tint adjtime();\\\\\\n\"\n+    \"extern\\tint getitimer();\\\\\\n\"\n+    \"extern\\tint setitimer();\\\\\\n\"\n+    \"extern\\tint gettimeofday();\\\\\\n\"\n+    \"extern\\tint settimeofday();\\\\\\n\"\n+    \"extern\\tvoid profil();\\\\\\n\"\n+    \"extern\\tint stime();\\\\\\n\"\n+    \"extern\\tint utimes();\\\\\\n\"\n+    \"extern\\tint select();\\n\";\n+\n+    test_text =\n+    \"@(#)time.h      6.1     (ULTRIX)\\n\"\n+    \"extern time_t\t\ttime( time_t *__tloc );\\n\"\n+    \"extern double difftime();\\n\";\n+};\n+\n+\n+/*\n+ *  Add missing declarations to Ultrix V4.3 unistd.h.\n+ */\n+fix = {\n+    hackname = ultrix_unistd;\n+    files  = unistd.h;\n+    select = \"@\\\\(#\\\\)unistd\\\\.h.*6\\\\.1.*\\\\(ULTRIX\\\\)\";\n+\n+    sed    = \"/^[ \\t]*getgroups(),.*$/a\\\\\\n\"\n+    \"\\tgetpagesize(),\\n\";\n+\n+    sed    = \"/^[ \\t]*fork(),.*$/a\\\\\\n\"\n+    \"\\tvfork(),\\n\";\n+\n+    test_text =\n+    \"@(#)unistd.h      6.1     (ULTRIX)\\n\"\n+    \"\\tgetgroups(),\\n\"\n+    \"\\tfork(),\\n\";\n+};\n+\n+\n /*\n  *  Fix multiple defines for NULL.  Sometimes, we stumble into \\r\\n\n  *  terminated lines, so accommodate these.  Test both ways."}, {"sha": "3b079e544c966e24c00121ca5f8412c0ac8e664a", "filename": "gcc/fixinc/tests/base/locale.h", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b60eb3b4a97b0f3fb6c2659c05a870da4ecef21/gcc%2Ffixinc%2Ftests%2Fbase%2Flocale.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b60eb3b4a97b0f3fb6c2659c05a870da4ecef21/gcc%2Ffixinc%2Ftests%2Fbase%2Flocale.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffixinc%2Ftests%2Fbase%2Flocale.h?ref=4b60eb3b4a97b0f3fb6c2659c05a870da4ecef21", "patch": "@@ -0,0 +1,20 @@\n+/*  DO NOT EDIT THIS FILE.\n+\n+    It has been auto-edited by fixincludes from:\n+\n+\t\"fixinc/tests/inc/locale.h\"\n+\n+    This had to be done to correct non-standard usages in the\n+    original, manufacturer supplied header file.  */\n+\n+#ifndef FIXINC_WRAP_LOCALE_H_ULTRIX_LOCALE\n+#define FIXINC_WRAP_LOCALE_H_ULTRIX_LOCALE 1\n+\n+\n+\n+#if defined( ULTRIX_LOCALE_CHECK )\n+@(#)locale.h   6.1     (ULTRIX)\n+\n+#endif  /* ULTRIX_LOCALE_CHECK */\n+\n+#endif  /* FIXINC_WRAP_LOCALE_H_ULTRIX_LOCALE */"}, {"sha": "ea2c001e163e07caf4db54ec639bc447656afb8d", "filename": "gcc/fixinc/tests/base/stdio.h", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b60eb3b4a97b0f3fb6c2659c05a870da4ecef21/gcc%2Ffixinc%2Ftests%2Fbase%2Fstdio.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b60eb3b4a97b0f3fb6c2659c05a870da4ecef21/gcc%2Ffixinc%2Ftests%2Fbase%2Fstdio.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffixinc%2Ftests%2Fbase%2Fstdio.h?ref=4b60eb3b4a97b0f3fb6c2659c05a870da4ecef21", "patch": "@@ -26,6 +26,12 @@ int vfscanf(FILE *, const char *, __builtin_va_list) __asm__ (_BSD_STRING(__USER\n #endif  /* BSD_STDIO_ATTRS_CONFLICT_CHECK */\n \n \n+#if defined( HPUX10_STDIO_DECLARATIONS_CHECK )\n+#  define _iob __iob\n+\n+#endif  /* HPUX10_STDIO_DECLARATIONS_CHECK */\n+\n+\n #if defined( HPUX11_SNPRINTF_CHECK )\n extern int snprintf(char *, size_t, const char *, ...);\n extern int snprintf(char *, _hpux_size_t, const char *, ...);\n@@ -90,6 +96,12 @@ extern char *tempnam( const char *, const char *);\n #endif  /* ULTRIX_CONST2_CHECK */\n \n \n+#if defined( ULTRIX_CONST3_CHECK )\n+extern FILE *\tfdopen( int __filedes, const char *__type );\n+\n+#endif  /* ULTRIX_CONST3_CHECK */\n+\n+\n #if defined( UNICOSMK_RESTRICT_CHECK )\n void f (char * __restrict__ x);\n #endif  /* UNICOSMK_RESTRICT_CHECK */"}, {"sha": "0e1e59cb4f06de92851ce4c87116b2a07f00bb9a", "filename": "gcc/fixinc/tests/base/stdlib.h", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b60eb3b4a97b0f3fb6c2659c05a870da4ecef21/gcc%2Ffixinc%2Ftests%2Fbase%2Fstdlib.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b60eb3b4a97b0f3fb6c2659c05a870da4ecef21/gcc%2Ffixinc%2Ftests%2Fbase%2Fstdlib.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffixinc%2Ftests%2Fbase%2Fstdlib.h?ref=4b60eb3b4a97b0f3fb6c2659c05a870da4ecef21", "patch": "@@ -50,3 +50,17 @@ extern void *\tbsearch(void*,size_t,size_t);\n int atexit( void (*__func)( void ) );\n \n #endif  /* ULTRIX_ATEXIT_PARAM_CHECK */\n+\n+\n+#if defined( ULTRIX_STDLIB_CHECK )\n+@(#)stdlib.h      6.1     (ULTRIX)\n+char *\t\tgetenv( const char *__name );\n+int\t\tsetenv( const char *__name, const char *__val, int __ovrwrt );\n+void\t\tunsetenv( const char *__name );\n+int\t\tputenv( char *__s );\n+char\t*getenv();\n+int\tsetenv();\n+void\tunsetenv();\n+int\tputenv();\n+\n+#endif  /* ULTRIX_STDLIB_CHECK */"}, {"sha": "f17d3f81197fb6eafed0026a7818e1fc93c9d109", "filename": "gcc/fixinc/tests/base/strings.h", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b60eb3b4a97b0f3fb6c2659c05a870da4ecef21/gcc%2Ffixinc%2Ftests%2Fbase%2Fstrings.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b60eb3b4a97b0f3fb6c2659c05a870da4ecef21/gcc%2Ffixinc%2Ftests%2Fbase%2Fstrings.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffixinc%2Ftests%2Fbase%2Fstrings.h?ref=4b60eb3b4a97b0f3fb6c2659c05a870da4ecef21", "patch": "@@ -22,4 +22,19 @@\n \n #endif  /* ULTRIX_STRINGS_CHECK */\n \n+\n+#if defined( ULTRIX_STRINGS2_CHECK )\n+@(#)strings.h      6.1     (ULTRIX)\n+\tstrncmp( const char *__s1, const char *__s2, size_t __n );\n+\n+extern int\n+\tstrcasecmp( const char *__s1, const char *__s2),\n+\tstrncasecmp( const char *__s1, const char *__s2, size_t __n );\n+\tstrncmp();\n+extern int\n+\tstrcasecmp(),\n+\tstrncasecmp();\n+\n+#endif  /* ULTRIX_STRINGS2_CHECK */\n+\n #endif  /* FIXINC_WRAP_STRINGS_H_ULTRIX_STRINGS */"}, {"sha": "f009f7e11aa9995e59343d483cd28ade1d1b8976", "filename": "gcc/fixinc/tests/base/sys/time.h", "status": "modified", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b60eb3b4a97b0f3fb6c2659c05a870da4ecef21/gcc%2Ffixinc%2Ftests%2Fbase%2Fsys%2Ftime.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b60eb3b4a97b0f3fb6c2659c05a870da4ecef21/gcc%2Ffixinc%2Ftests%2Fbase%2Fsys%2Ftime.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffixinc%2Ftests%2Fbase%2Fsys%2Ftime.h?ref=4b60eb3b4a97b0f3fb6c2659c05a870da4ecef21", "patch": "@@ -12,3 +12,30 @@\n #if defined( HPUX_SYSTIME_CHECK )\n struct sigevent;\n #endif  /* HPUX_SYSTIME_CHECK */\n+\n+\n+#if defined( ULTRIX_SYS_TIME_CHECK )\n+@(#)time.h      6.1     (ULTRIX)\n+extern time_t\t\ttime( time_t *__tloc );\n+\n+extern int adjtime(struct timeval *, struct timeval *);\n+extern int getitimer(int, struct itimerval *);\n+extern int setitimer(int, struct itimerval *, struct itimerval *);\n+extern int gettimeofday(struct timeval *, struct timezone *);\n+extern int settimeofday(struct timeval *, struct timezone *);\n+extern void profil(const void *, size_t, size_t, unsigned int);\n+extern int stime(const time_t *);\n+extern int utimes(const char *, const struct timeval[2]);\n+extern int select(int, fd_set *, fd_set *, fd_set *, struct timeval *);\n+extern double difftime();\n+extern\tint adjtime();\n+extern\tint getitimer();\n+extern\tint setitimer();\n+extern\tint gettimeofday();\n+extern\tint settimeofday();\n+extern\tvoid profil();\n+extern\tint stime();\n+extern\tint utimes();\n+extern\tint select();\n+\n+#endif  /* ULTRIX_SYS_TIME_CHECK */"}, {"sha": "98e8c34b8caf10ac94b2358c0e8967b1f9b2b8a9", "filename": "gcc/fixinc/tests/base/unistd.h", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b60eb3b4a97b0f3fb6c2659c05a870da4ecef21/gcc%2Ffixinc%2Ftests%2Fbase%2Funistd.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b60eb3b4a97b0f3fb6c2659c05a870da4ecef21/gcc%2Ffixinc%2Ftests%2Fbase%2Funistd.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffixinc%2Ftests%2Fbase%2Funistd.h?ref=4b60eb3b4a97b0f3fb6c2659c05a870da4ecef21", "patch": "@@ -21,3 +21,13 @@ extern pid_t getpgid(pid_t);\n extern int getpagesize();\n extern int getpgid();\n #endif  /* SOLARIS_UNISTD_CHECK */\n+\n+\n+#if defined( ULTRIX_UNISTD_CHECK )\n+@(#)unistd.h      6.1     (ULTRIX)\n+\tgetgroups(),\n+\tgetpagesize(),\n+\tfork(),\n+\tvfork(),\n+\n+#endif  /* ULTRIX_UNISTD_CHECK */"}]}