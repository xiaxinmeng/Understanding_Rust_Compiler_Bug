{"sha": "2f1686ff70b25fceb04ca2ffc0a450fb682913ef", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmYxNjg2ZmY3MGIyNWZjZWIwNGNhMmZmYzBhNDUwZmI2ODI5MTNlZg==", "commit": {"author": {"name": "Andrew Pinski", "email": "apinski@marvell.com", "date": "2021-06-06T02:03:06Z"}, "committer": {"name": "Andrew Pinski", "email": "apinski@marvell.com", "date": "2021-06-18T07:58:18Z"}, "message": "Disallow pointer and offset types on some gimple\n\nWhile debugging PR 100925, I found that the gimple verifiers\ndon't reject NEGATE on pointer or offset type.\nThis patch adds the check on some unary and binary gimple which\nshould not have operated on pointer/offset types.\n\nOK? Bootstrapped and tested on x86_64-linux-gnu with no regressions.\n\nThanks,\nAndrew Pinski\n\ngcc/ChangeLog:\n\n\t* tree-cfg.c (verify_gimple_assign_unary): Reject point and offset\n\ttypes on NEGATE_EXPR, ABS_EXPR, BIT_NOT_EXPR, PAREN_EXPR and CNONJ_EXPR.\n\t(verify_gimple_assign_binary): Reject point and offset types on\n\tMULT_EXPR, MULT_HIGHPART_EXPR, TRUNC_DIV_EXPR, CEIL_DIV_EXPR,\n\tFLOOR_DIV_EXPR, ROUND_DIV_EXPR, TRUNC_MOD_EXPR, CEIL_MOD_EXPR,\n\tFLOOR_MOD_EXPR, ROUND_MOD_EXPR, RDIV_EXPR, and EXACT_DIV_EXPR.", "tree": {"sha": "3f59db825745ac968c5e93b3de50f6cc6a46301d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3f59db825745ac968c5e93b3de50f6cc6a46301d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2f1686ff70b25fceb04ca2ffc0a450fb682913ef", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2f1686ff70b25fceb04ca2ffc0a450fb682913ef", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2f1686ff70b25fceb04ca2ffc0a450fb682913ef", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2f1686ff70b25fceb04ca2ffc0a450fb682913ef/comments", "author": {"login": "apinski-cavium", "id": 6335315, "node_id": "MDQ6VXNlcjYzMzUzMTU=", "avatar_url": "https://avatars.githubusercontent.com/u/6335315?v=4", "gravatar_id": "", "url": "https://api.github.com/users/apinski-cavium", "html_url": "https://github.com/apinski-cavium", "followers_url": "https://api.github.com/users/apinski-cavium/followers", "following_url": "https://api.github.com/users/apinski-cavium/following{/other_user}", "gists_url": "https://api.github.com/users/apinski-cavium/gists{/gist_id}", "starred_url": "https://api.github.com/users/apinski-cavium/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/apinski-cavium/subscriptions", "organizations_url": "https://api.github.com/users/apinski-cavium/orgs", "repos_url": "https://api.github.com/users/apinski-cavium/repos", "events_url": "https://api.github.com/users/apinski-cavium/events{/privacy}", "received_events_url": "https://api.github.com/users/apinski-cavium/received_events", "type": "User", "site_admin": false}, "committer": {"login": "apinski-cavium", "id": 6335315, "node_id": "MDQ6VXNlcjYzMzUzMTU=", "avatar_url": "https://avatars.githubusercontent.com/u/6335315?v=4", "gravatar_id": "", "url": "https://api.github.com/users/apinski-cavium", "html_url": "https://github.com/apinski-cavium", "followers_url": "https://api.github.com/users/apinski-cavium/followers", "following_url": "https://api.github.com/users/apinski-cavium/following{/other_user}", "gists_url": "https://api.github.com/users/apinski-cavium/gists{/gist_id}", "starred_url": "https://api.github.com/users/apinski-cavium/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/apinski-cavium/subscriptions", "organizations_url": "https://api.github.com/users/apinski-cavium/orgs", "repos_url": "https://api.github.com/users/apinski-cavium/repos", "events_url": "https://api.github.com/users/apinski-cavium/events{/privacy}", "received_events_url": "https://api.github.com/users/apinski-cavium/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2786064d91f46cbdb35a543a883155a3982b9478", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2786064d91f46cbdb35a543a883155a3982b9478", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2786064d91f46cbdb35a543a883155a3982b9478"}], "stats": {"total": 22, "additions": 22, "deletions": 0}, "files": [{"sha": "f126d2afd9fb7d01cac932715c9735e6d2ac757d", "filename": "gcc/tree-cfg.c", "status": "modified", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2f1686ff70b25fceb04ca2ffc0a450fb682913ef/gcc%2Ftree-cfg.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2f1686ff70b25fceb04ca2ffc0a450fb682913ef/gcc%2Ftree-cfg.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-cfg.c?ref=2f1686ff70b25fceb04ca2ffc0a450fb682913ef", "patch": "@@ -3752,6 +3752,15 @@ verify_gimple_assign_unary (gassign *stmt)\n     case BIT_NOT_EXPR:\n     case PAREN_EXPR:\n     case CONJ_EXPR:\n+      /* Disallow pointer and offset types for many of the unary gimple. */\n+      if (POINTER_TYPE_P (lhs_type)\n+\t  || TREE_CODE (lhs_type) == OFFSET_TYPE)\n+\t{\n+\t  error (\"invalid types for %qs\", code_name);\n+\t  debug_generic_expr (lhs_type);\n+\t  debug_generic_expr (rhs1_type);\n+\t  return true;\n+\t}\n       break;\n \n     case ABSU_EXPR:\n@@ -4127,6 +4136,19 @@ verify_gimple_assign_binary (gassign *stmt)\n     case ROUND_MOD_EXPR:\n     case RDIV_EXPR:\n     case EXACT_DIV_EXPR:\n+      /* Disallow pointer and offset types for many of the binary gimple. */\n+      if (POINTER_TYPE_P (lhs_type)\n+\t  || TREE_CODE (lhs_type) == OFFSET_TYPE)\n+\t{\n+\t  error (\"invalid types for %qs\", code_name);\n+\t  debug_generic_expr (lhs_type);\n+\t  debug_generic_expr (rhs1_type);\n+\t  debug_generic_expr (rhs2_type);\n+\t  return true;\n+\t}\n+      /* Continue with generic binary expression handling.  */\n+      break;\n+\n     case MIN_EXPR:\n     case MAX_EXPR:\n     case BIT_IOR_EXPR:"}]}