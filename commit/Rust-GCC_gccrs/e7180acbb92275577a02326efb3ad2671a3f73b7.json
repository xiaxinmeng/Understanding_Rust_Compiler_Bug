{"sha": "e7180acbb92275577a02326efb3ad2671a3f73b7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTcxODBhY2JiOTIyNzU1NzdhMDIzMjZlZmIzYWQyNjcxYTNmNzNiNw==", "commit": {"author": {"name": "Mike Stump", "email": "mikestump@comcast.net", "date": "2013-05-14T17:43:57Z"}, "committer": {"name": "Mike Stump", "email": "mrs@gcc.gnu.org", "date": "2013-05-14T17:43:57Z"}, "message": "* web.c (union_match_dups): Also check DF_REF_REAL_LOC.\n\nFrom-SVN: r198896", "tree": {"sha": "8f73141ddbcd16b4863cb33eac109d97856d9cc0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8f73141ddbcd16b4863cb33eac109d97856d9cc0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e7180acbb92275577a02326efb3ad2671a3f73b7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e7180acbb92275577a02326efb3ad2671a3f73b7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e7180acbb92275577a02326efb3ad2671a3f73b7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e7180acbb92275577a02326efb3ad2671a3f73b7/comments", "author": null, "committer": null, "parents": [{"sha": "fd6beed48d5783b4dd6bb6a4aabff7491041eeeb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fd6beed48d5783b4dd6bb6a4aabff7491041eeeb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fd6beed48d5783b4dd6bb6a4aabff7491041eeeb"}], "stats": {"total": 20, "additions": 16, "deletions": 4}, "files": [{"sha": "62255a36537407121159b162da9ab6b98e746afc", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e7180acbb92275577a02326efb3ad2671a3f73b7/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e7180acbb92275577a02326efb3ad2671a3f73b7/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=e7180acbb92275577a02326efb3ad2671a3f73b7", "patch": "@@ -1,3 +1,7 @@\n+2013-05-14  Mike Stump  <mikestump@comcast.net>\n+\n+\t* web.c (union_match_dups): Also check DF_REF_REAL_LOC.\n+\n 2013-05-14  Steven Bosscher  <steven@gcc.gnu.org>\n \n \t* resource.h (struct resources): Remove unch_memory member."}, {"sha": "7f667db2cc535b87c496e46a47bb1b657ea9aa9a", "filename": "gcc/web.c", "status": "modified", "additions": 12, "deletions": 4, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e7180acbb92275577a02326efb3ad2671a3f73b7/gcc%2Fweb.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e7180acbb92275577a02326efb3ad2671a3f73b7/gcc%2Fweb.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fweb.c?ref=e7180acbb92275577a02326efb3ad2671a3f73b7", "patch": "@@ -132,14 +132,22 @@ union_match_dups (rtx insn, struct web_entry *def_entry,\n       ref = type == OP_IN ? use_link : def_link;\n       entry = type == OP_IN ? use_entry : def_entry;\n       for (; *ref; ref++)\n-\tif (DF_REF_LOC (*ref) == recog_data.operand_loc[op])\n-\t  break;\n+\t{\n+\t  if (DF_REF_LOC (*ref) == recog_data.operand_loc[op])\n+\t    break;\n+\t  if (DF_REF_REAL_LOC (*ref) == recog_data.operand_loc[op])\n+\t    break;\n+\t}\n \n       if (!*ref && type == OP_INOUT)\n \t{\n \t  for (ref = use_link, entry = use_entry; *ref; ref++)\n-\t    if (DF_REF_LOC (*ref) == recog_data.operand_loc[op])\n-\t      break;\n+\t    {\n+\t      if (DF_REF_LOC (*ref) == recog_data.operand_loc[op])\n+\t\tbreak;\n+\t      if (DF_REF_REAL_LOC (*ref) == recog_data.operand_loc[op])\n+\t\tbreak;\n+\t    }\n \t}\n \n       gcc_assert (*ref);"}]}