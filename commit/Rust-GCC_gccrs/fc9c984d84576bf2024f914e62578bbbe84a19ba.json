{"sha": "fc9c984d84576bf2024f914e62578bbbe84a19ba", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZmM5Yzk4NGQ4NDU3NmJmMjAyNGY5MTRlNjI1NzhiYmJlODRhMTliYQ==", "commit": {"author": {"name": "Kaz Kojima", "email": "kkojima@gcc.gnu.org", "date": "2010-04-22T22:02:55Z"}, "committer": {"name": "Kaz Kojima", "email": "kkojima@gcc.gnu.org", "date": "2010-04-22T22:02:55Z"}, "message": "re PR target/43744 (SH: Error: pcrel too far)\n\n\tPR target/43744\n\t* config/sh/sh.c (find_barrier): Don't emit a constant pool\n\tin the middle of insns for casesi_worker_2.\n\nFrom-SVN: r158655", "tree": {"sha": "ef66a240acfd5b2060476084edf5a82e83440f13", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ef66a240acfd5b2060476084edf5a82e83440f13"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/fc9c984d84576bf2024f914e62578bbbe84a19ba", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fc9c984d84576bf2024f914e62578bbbe84a19ba", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fc9c984d84576bf2024f914e62578bbbe84a19ba", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fc9c984d84576bf2024f914e62578bbbe84a19ba/comments", "author": null, "committer": null, "parents": [{"sha": "d5dceab84ca90088c65a64c15dce862ffb75f378", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d5dceab84ca90088c65a64c15dce862ffb75f378", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d5dceab84ca90088c65a64c15dce862ffb75f378"}], "stats": {"total": 23, "additions": 23, "deletions": 0}, "files": [{"sha": "3d8c5b0272edc5d6b402cc1178eaeeb3e8b690fc", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fc9c984d84576bf2024f914e62578bbbe84a19ba/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fc9c984d84576bf2024f914e62578bbbe84a19ba/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=fc9c984d84576bf2024f914e62578bbbe84a19ba", "patch": "@@ -1,3 +1,9 @@\n+2010-04-22  Kaz Kojima  <kkojima@gcc.gnu.org>\n+\n+\tPR target/43744\n+\t* config/sh/sh.c (find_barrier): Don't emit a constant pool\n+\tin the middle of insns for casesi_worker_2.\n+\n 2010-04-22  David Edelsohn  <edelsohn@gnu.org>\n \n \t* config/rs6000/x-aix: Override LDFLAGS for all COMPILERS."}, {"sha": "a3084b91a0b3980b5b7f8698b4ed9947bbaffe21", "filename": "gcc/config/sh/sh.c", "status": "modified", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fc9c984d84576bf2024f914e62578bbbe84a19ba/gcc%2Fconfig%2Fsh%2Fsh.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fc9c984d84576bf2024f914e62578bbbe84a19ba/gcc%2Fconfig%2Fsh%2Fsh.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsh%2Fsh.c?ref=fc9c984d84576bf2024f914e62578bbbe84a19ba", "patch": "@@ -4410,6 +4410,7 @@ find_barrier (int num_mova, rtx mova, rtx from)\n   int hi_limit;\n   rtx orig = from;\n   rtx last_got = NULL_RTX;\n+  rtx last_symoff = NULL_RTX;\n \n   /* For HImode: range is 510, add 4 because pc counts from address of\n      second instruction after this one, subtract 2 for the jump instruction\n@@ -4551,6 +4552,16 @@ find_barrier (int num_mova, rtx mova, rtx from)\n \t{\n \t  switch (untangle_mova (&num_mova, &mova, from))\n \t    {\n+\t      case 1:\n+\t\tif (flag_pic)\n+\t\t  {\n+\t\t    rtx src = SET_SRC (PATTERN (from));\n+\t\t    if (GET_CODE (src) == CONST\n+\t\t\t&& GET_CODE (XEXP (src, 0)) == UNSPEC\n+\t\t\t&& XINT (XEXP (src, 0), 1) == UNSPEC_SYMOFF)\n+\t\t      last_symoff = from;\n+\t\t  }\n+\t\tbreak;\n \t      case 0:\treturn find_barrier (0, 0, mova);\n \t      case 2:\n \t\t{\n@@ -4654,6 +4665,12 @@ find_barrier (int num_mova, rtx mova, rtx from)\n \t so we'll make one.  */\n       rtx label = gen_label_rtx ();\n \n+      /* Don't emit a constant table in the middle of insns for\n+\t casesi_worker_2.  This is a bit overkill but is enough\n+\t because casesi_worker_2 wouldn't appear so frequently.  */\n+      if (last_symoff)\n+\tfrom = last_symoff;\n+\n       /* If we exceeded the range, then we must back up over the last\n \t instruction we looked at.  Otherwise, we just need to undo the\n \t NEXT_INSN at the end of the loop.  */"}]}