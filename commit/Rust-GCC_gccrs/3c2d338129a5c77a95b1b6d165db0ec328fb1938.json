{"sha": "3c2d338129a5c77a95b1b6d165db0ec328fb1938", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2MyZDMzODEyOWE1Yzc3YTk1YjFiNmQxNjVkYjBlYzMyOGZiMTkzOA==", "commit": {"author": {"name": "Dmitriy Anisimkov", "email": "anisimko@adacore.com", "date": "2020-08-06T05:54:48Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "derodat@adacore.com", "date": "2020-10-21T07:22:48Z"}, "message": "[Ada] Fix bootstrap with old GCC\n\ngcc/ada/\n\n\t* adaint.c (__gnat_file_time): Use regular arithmetic instead of\n\t__builtin_*_overflow routines if GCC version 4 or less and\n\tcompiler is g++.", "tree": {"sha": "b3f1d35ef21bed7ea6549d022a6222846838f34d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b3f1d35ef21bed7ea6549d022a6222846838f34d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3c2d338129a5c77a95b1b6d165db0ec328fb1938", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3c2d338129a5c77a95b1b6d165db0ec328fb1938", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3c2d338129a5c77a95b1b6d165db0ec328fb1938", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3c2d338129a5c77a95b1b6d165db0ec328fb1938/comments", "author": {"login": "anisimkov", "id": 15864134, "node_id": "MDQ6VXNlcjE1ODY0MTM0", "avatar_url": "https://avatars.githubusercontent.com/u/15864134?v=4", "gravatar_id": "", "url": "https://api.github.com/users/anisimkov", "html_url": "https://github.com/anisimkov", "followers_url": "https://api.github.com/users/anisimkov/followers", "following_url": "https://api.github.com/users/anisimkov/following{/other_user}", "gists_url": "https://api.github.com/users/anisimkov/gists{/gist_id}", "starred_url": "https://api.github.com/users/anisimkov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/anisimkov/subscriptions", "organizations_url": "https://api.github.com/users/anisimkov/orgs", "repos_url": "https://api.github.com/users/anisimkov/repos", "events_url": "https://api.github.com/users/anisimkov/events{/privacy}", "received_events_url": "https://api.github.com/users/anisimkov/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pmderodat", "id": 758452, "node_id": "MDQ6VXNlcjc1ODQ1Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/758452?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pmderodat", "html_url": "https://github.com/pmderodat", "followers_url": "https://api.github.com/users/pmderodat/followers", "following_url": "https://api.github.com/users/pmderodat/following{/other_user}", "gists_url": "https://api.github.com/users/pmderodat/gists{/gist_id}", "starred_url": "https://api.github.com/users/pmderodat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pmderodat/subscriptions", "organizations_url": "https://api.github.com/users/pmderodat/orgs", "repos_url": "https://api.github.com/users/pmderodat/repos", "events_url": "https://api.github.com/users/pmderodat/events{/privacy}", "received_events_url": "https://api.github.com/users/pmderodat/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ed9a428d02a5e3cd191aec9421808c5ce8ab7db3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ed9a428d02a5e3cd191aec9421808c5ce8ab7db3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ed9a428d02a5e3cd191aec9421808c5ce8ab7db3"}], "stats": {"total": 12, "additions": 11, "deletions": 1}, "files": [{"sha": "b7406a03c31f3a981b410f0b7a08f414c4c40758", "filename": "gcc/ada/adaint.c", "status": "modified", "additions": 11, "deletions": 1, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3c2d338129a5c77a95b1b6d165db0ec328fb1938/gcc%2Fada%2Fadaint.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3c2d338129a5c77a95b1b6d165db0ec328fb1938/gcc%2Fada%2Fadaint.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fadaint.c?ref=3c2d338129a5c77a95b1b6d165db0ec328fb1938", "patch": "@@ -1503,6 +1503,9 @@ extern long long __gnat_file_time(char* name)\n \n   t_write.ft_time = fad.ftLastWriteTime;\n \n+#if defined(__GNUG__) && __GNUG__ <= 4\n+  result = (t_write.ll_time - w32_epoch_offset) * 100;\n+#else\n   /* Next code similar to (t_write.ll_time - w32_epoch_offset) * 100\n      but on overflow returns LLONG_MIN value. */\n \n@@ -1513,6 +1516,7 @@ extern long long __gnat_file_time(char* name)\n   if (__builtin_smulll_overflow(result, 100, &result)) {\n     return LLONG_MIN;\n   }\n+#endif\n \n #else\n \n@@ -1521,6 +1525,12 @@ extern long long __gnat_file_time(char* name)\n     return LLONG_MIN;\n   }\n \n+#if defined(__GNUG__) && __GNUG__ <= 4\n+    result = (sb.st_mtime - ada_epoch_offset) * 1E9;\n+#if defined(st_mtime)\n+    result += sb.st_mtim.tv_nsec;\n+#endif\n+#else\n   /* Next code similar to\n      (sb.st_mtime - ada_epoch_offset) * 1E9 + sb.st_mtim.tv_nsec\n      but on overflow returns LLONG_MIN value. */\n@@ -1538,7 +1548,7 @@ extern long long __gnat_file_time(char* name)\n     return LLONG_MIN;\n   }\n #endif\n-\n+#endif\n #endif\n   return result;\n }"}]}