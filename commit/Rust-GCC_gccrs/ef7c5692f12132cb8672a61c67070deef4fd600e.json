{"sha": "ef7c5692f12132cb8672a61c67070deef4fd600e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWY3YzU2OTJmMTIxMzJjYjg2NzJhNjFjNjcwNzBkZWVmNGZkNjAwZQ==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2009-04-08T14:49:44Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2009-04-08T14:49:44Z"}, "message": "[multiple changes]\n\n2009-04-08  Thomas Quinot  <quinot@adacore.com>\n\n\t* exp_util.adb: Minor comment fix\n\n2009-04-08  Robert Dewar  <dewar@adacore.com>\n\n\t* g-socket.ads: Fix bad syntax in pragma Obsolescent\n\n\t* par-ch2.adb (Scan_Pragma_Argument_Association): Check for error of\n\targument with no identifier following one that has an identifier. Was\n\tmissed in some cases.\n\n\t* sem_prag.adb (Analyze_Pragma, case Check_Policy): Allow Policy\n\tidentifier.\n\t(Analyze_Pragma, case Obsolescent): Allow Message, Version identifiers\n\n\t* snames.adb: Add Name_Policy\n\n\t* snames.ads: Add Name_Policy\n\nFrom-SVN: r145744", "tree": {"sha": "b8ec63645bea28745bba045ef8d3e362144b65d6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b8ec63645bea28745bba045ef8d3e362144b65d6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ef7c5692f12132cb8672a61c67070deef4fd600e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ef7c5692f12132cb8672a61c67070deef4fd600e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ef7c5692f12132cb8672a61c67070deef4fd600e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ef7c5692f12132cb8672a61c67070deef4fd600e/comments", "author": null, "committer": null, "parents": [{"sha": "4da17013c086241754907c0560c4c84427aec3ac", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4da17013c086241754907c0560c4c84427aec3ac", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4da17013c086241754907c0560c4c84427aec3ac"}], "stats": {"total": 974, "additions": 510, "deletions": 464}, "files": [{"sha": "6530050d1bebe819a90023a006c3abd4017f6681", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ef7c5692f12132cb8672a61c67070deef4fd600e/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ef7c5692f12132cb8672a61c67070deef4fd600e/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=ef7c5692f12132cb8672a61c67070deef4fd600e", "patch": "@@ -1,3 +1,23 @@\n+2009-04-08  Thomas Quinot  <quinot@adacore.com>\n+\n+\t* exp_util.adb: Minor comment fix\n+\n+2009-04-08  Robert Dewar  <dewar@adacore.com>\n+\n+\t* g-socket.ads: Fix bad syntax in pragma Obsolescent\n+\n+\t* par-ch2.adb (Scan_Pragma_Argument_Association): Check for error of\n+\targument with no identifier following one that has an identifier. Was\n+\tmissed in some cases.\n+\n+\t* sem_prag.adb (Analyze_Pragma, case Check_Policy): Allow Policy\n+\tidentifier.\n+\t(Analyze_Pragma, case Obsolescent): Allow Message, Version identifiers\n+\n+\t* snames.adb: Add Name_Policy\n+\n+\t* snames.ads: Add Name_Policy\n+\n 2009-04-08  Robert Dewar  <dewar@adacore.com>\n \n \t* gnat_rm.texi: Minor reformatting"}, {"sha": "241132ff04c110aeb068c43906c824ab5c0aa17f", "filename": "gcc/ada/exp_util.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ef7c5692f12132cb8672a61c67070deef4fd600e/gcc%2Fada%2Fexp_util.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ef7c5692f12132cb8672a61c67070deef4fd600e/gcc%2Fada%2Fexp_util.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_util.adb?ref=ef7c5692f12132cb8672a61c67070deef4fd600e", "patch": "@@ -4844,7 +4844,7 @@ package body Exp_Util is\n \n       --  If the expression has an access type (object or subprogram) we\n       --  assume that the conversion is safe, because the size of the target\n-      --  is safe, even it is a record (which might be treated as having\n+      --  is safe, even if it is a record (which might be treated as having\n       --  unknown size at this point).\n \n       elsif Is_Access_Type (Ityp) then"}, {"sha": "7dddd3decea63be94a6b1f6533a0232603d506e5", "filename": "gcc/ada/g-socket.ads", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ef7c5692f12132cb8672a61c67070deef4fd600e/gcc%2Fada%2Fg-socket.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ef7c5692f12132cb8672a61c67070deef4fd600e/gcc%2Fada%2Fg-socket.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-socket.ads?ref=ef7c5692f12132cb8672a61c67070deef4fd600e", "patch": "@@ -386,8 +386,8 @@ package GNAT.Sockets is\n \n    procedure Initialize (Process_Blocking_IO : Boolean);\n    pragma Obsolescent\n-     (Entity => Initialize,\n-      \"passing a parameter to Initialize is not supported anymore\");\n+     (Entity  => Initialize,\n+      Message => \"passing a parameter to Initialize is not supported anymore\");\n    --  Previous versions of GNAT.Sockets used to require the user to indicate\n    --  whether socket I/O was process- or thread-blocking on the platform.\n    --  This property is now determined automatically when the run-time library"}, {"sha": "36ea82f9d12598ee6edfed8d1dab08bcc83e3821", "filename": "gcc/ada/gnat_rm.texi", "status": "modified", "additions": 12, "deletions": 5, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ef7c5692f12132cb8672a61c67070deef4fd600e/gcc%2Fada%2Fgnat_rm.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ef7c5692f12132cb8672a61c67070deef4fd600e/gcc%2Fada%2Fgnat_rm.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnat_rm.texi?ref=ef7c5692f12132cb8672a61c67070deef4fd600e", "patch": "@@ -1171,7 +1171,9 @@ are mentioned in @code{with} clauses).\n @noindent\n Syntax:\n @smallexample @c ada\n-pragma Check_Policy ([Name =>] Identifier, POLICY_IDENTIFIER);\n+pragma Check_Policy\n+ ([Name   =>] Identifier,\n+  [Policy =>] POLICY_IDENTIFIER);\n \n POLICY_IDENTIFIER ::= On | Off | Check | Ignore\n @end smallexample\n@@ -3462,7 +3464,9 @@ Syntax:\n \n @smallexample @c ada\n pragma Obsolescent\n-  [(Entity => NAME [, static_string_EXPRESSION [,Ada_05]])];\n+  [([Entity  =>] NAME\n+  [,[Message =>] static_string_EXPRESSION\n+  [,[Version =>] Ada_05]])];\n @end smallexample\n \n @noindent\n@@ -3508,17 +3512,20 @@ The following examples show typical uses of this pragma:\n @smallexample @c ada\n package p is\n    pragma Obsolescent\n-     (Entity => p, \"use pp instead of p\");\n+     (Entity => p, Message => \"use pp instead of p\");\n end p;\n \n package q is\n    procedure q2;\n    pragma Obsolescent\n-     (Entity => q2, \"use q2new instead\");\n+     (Entity  => q2,\n+      Message => \"use q2new instead\");\n \n    type R is new integer;\n    pragma Obsolescent\n-     (Entity => R, \"use RR in Ada 2005\", Ada_05);\n+     (Entity  => R,\n+      Message => \"use RR in Ada 2005\",\n+      Version => Ada_05);\n \n    type M is record\n       F1 : Integer;"}, {"sha": "5e174eeb8c8123b2caa84091a8488e77935e3851", "filename": "gcc/ada/par-ch2.adb", "status": "modified", "additions": 15, "deletions": 5, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ef7c5692f12132cb8672a61c67070deef4fd600e/gcc%2Fada%2Fpar-ch2.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ef7c5692f12132cb8672a61c67070deef4fd600e/gcc%2Fada%2Fpar-ch2.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fpar-ch2.adb?ref=ef7c5692f12132cb8672a61c67070deef4fd600e", "patch": "@@ -469,11 +469,14 @@ package body Ch2 is\n    is\n       Scan_State      : Saved_Scan_State;\n       Identifier_Node : Node_Id;\n+      Id_Present      : Boolean;\n \n    begin\n       Association := New_Node (N_Pragma_Argument_Association, Token_Ptr);\n       Set_Chars (Association, No_Name);\n \n+      --  Argument starts with identifier\n+\n       if Token = Tok_Identifier then\n          Identifier_Node := Token_Node;\n          Save_Scan_State (Scan_State); -- at Identifier\n@@ -483,17 +486,24 @@ package body Ch2 is\n             Identifier_Seen := True;\n             Scan; -- past arrow\n             Set_Chars (Association, Chars (Identifier_Node));\n+            Id_Present := True;\n \n          --  Case of argument with no identifier\n \n          else\n             Restore_Scan_State (Scan_State); -- to Identifier\n-\n-            if Identifier_Seen then\n-               Error_Msg_SC\n-                 (\"|pragma argument identifier required here (RM 2.8(4))\");\n-            end if;\n+            Id_Present := False;\n          end if;\n+\n+      --  Argument does not start with identifier\n+\n+      else\n+         Id_Present := False;\n+      end if;\n+\n+      if Identifier_Seen and not Id_Present then\n+         Error_Msg_SC\n+           (\"|pragma argument identifier required here (RM 2.8(4))\");\n       end if;\n \n       Set_Expression (Association, P_Expression);"}, {"sha": "b8b5ed51bbd63d007f1d18359f5bd4e10919663e", "filename": "gcc/ada/sem_prag.adb", "status": "modified", "additions": 19, "deletions": 12, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ef7c5692f12132cb8672a61c67070deef4fd600e/gcc%2Fada%2Fsem_prag.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ef7c5692f12132cb8672a61c67070deef4fd600e/gcc%2Fada%2Fsem_prag.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_prag.adb?ref=ef7c5692f12132cb8672a61c67070deef4fd600e", "patch": "@@ -5789,8 +5789,9 @@ package body Sem_Prag is\n          -- Check_Policy --\n          ------------------\n \n-         --  pragma Check_Policy ([Name =>] IDENTIFIER,\n-         --                       POLICY_IDENTIFIER;\n+         --  pragma Check_Policy (\n+         --    [Name   =>] IDENTIFIER,\n+         --    [Policy =>] POLICY_IDENTIFIER);\n \n          --  POLICY_IDENTIFIER ::= ON | OFF | CHECK | IGNORE\n \n@@ -5800,8 +5801,8 @@ package body Sem_Prag is\n          when Pragma_Check_Policy =>\n             GNAT_Pragma;\n             Check_Arg_Count (2);\n-            Check_No_Identifier (Arg2);\n             Check_Optional_Identifier (Arg1, Name_Name);\n+            Check_Optional_Identifier (Arg2, Name_Policy);\n             Check_Arg_Is_One_Of\n               (Arg2, Name_On, Name_Off, Name_Check, Name_Ignore);\n \n@@ -6627,12 +6628,11 @@ package body Sem_Prag is\n          ---------------\n \n          --  pragma Eliminate (\n-         --      [Unit_Name       =>]  IDENTIFIER |\n-         --                            SELECTED_COMPONENT\n-         --    [,[Entity          =>]  IDENTIFIER |\n-         --                            SELECTED_COMPONENT |\n-         --                            STRING_LITERAL]\n-         --    [,]OVERLOADING_RESOLUTION);\n+         --      [Unit_Name  =>] IDENTIFIER | SELECTED_COMPONENT,\n+         --    [,[Entity     =>] IDENTIFIER |\n+         --                      SELECTED_COMPONENT |\n+         --                      STRING_LITERAL]\n+         --    [,                OVERLOADING_RESOLUTION]);\n \n          --  OVERLOADING_RESOLUTION ::= PARAMETER_AND_RESULT_TYPE_PROFILE |\n          --                             SOURCE_LOCATION\n@@ -9059,8 +9059,9 @@ package body Sem_Prag is\n          -----------------\n \n          --  pragma Obsolescent [(\n-         --    [Entity => NAME,]\n-         --    [(static_string_EXPRESSION [, Ada_05])];\n+         --    [Entity  => NAME,]\n+         --    [Message => static_string_EXPRESSION\n+         --  [,[Version => Ada_05]] )];\n \n          when Pragma_Obsolescent => Obsolescent : declare\n             Ename : Node_Id;\n@@ -9210,7 +9211,13 @@ package body Sem_Prag is\n                Ename := Empty;\n             end if;\n \n-            Check_No_Identifiers;\n+            if Arg_Count >= 1 then\n+               Check_Optional_Identifier (Arg1, Name_Message);\n+\n+               if Arg_Count = 2 then\n+                  Check_Optional_Identifier (Arg2, Name_Version);\n+               end if;\n+            end if;\n \n             --  Get immediately preceding declaration\n "}, {"sha": "7d9f04fcd4efeee5f905f63353d4da6b33e0cbaf", "filename": "gcc/ada/snames.adb", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ef7c5692f12132cb8672a61c67070deef4fd600e/gcc%2Fada%2Fsnames.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ef7c5692f12132cb8672a61c67070deef4fd600e/gcc%2Fada%2Fsnames.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsnames.adb?ref=ef7c5692f12132cb8672a61c67070deef4fd600e", "patch": "@@ -403,6 +403,7 @@ package body Snames is\n      \"no_task_attributes#\" &\n      \"no_task_attributes_package#\" &\n      \"on#\" &\n+     \"policy#\" &\n      \"parameter_types#\" &\n      \"reference#\" &\n      \"restricted#\" &"}, {"sha": "0b7f9b733cf62e8aab4f7e1ae155d80f1b0a4e7c", "filename": "gcc/ada/snames.ads", "status": "modified", "additions": 440, "deletions": 439, "changes": 879, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ef7c5692f12132cb8672a61c67070deef4fd600e/gcc%2Fada%2Fsnames.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ef7c5692f12132cb8672a61c67070deef4fd600e/gcc%2Fada%2Fsnames.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsnames.ads?ref=ef7c5692f12132cb8672a61c67070deef4fd600e", "patch": "@@ -628,39 +628,40 @@ package Snames is\n    Name_No_Task_Attributes             : constant Name_Id := N + 342;\n    Name_No_Task_Attributes_Package     : constant Name_Id := N + 343;\n    Name_On                             : constant Name_Id := N + 344;\n-   Name_Parameter_Types                : constant Name_Id := N + 345;\n-   Name_Reference                      : constant Name_Id := N + 346;\n-   Name_Restricted                     : constant Name_Id := N + 347;\n-   Name_Result_Mechanism               : constant Name_Id := N + 348;\n-   Name_Result_Type                    : constant Name_Id := N + 349;\n-   Name_Runtime                        : constant Name_Id := N + 350;\n-   Name_SB                             : constant Name_Id := N + 351;\n-   Name_Secondary_Stack_Size           : constant Name_Id := N + 352;\n-   Name_Section                        : constant Name_Id := N + 353;\n-   Name_Semaphore                      : constant Name_Id := N + 354;\n-   Name_Short_Descriptor               : constant Name_Id := N + 355;\n-   Name_Simple_Barriers                : constant Name_Id := N + 356;\n-   Name_Spec_File_Name                 : constant Name_Id := N + 357;\n-   Name_State                          : constant Name_Id := N + 358;\n-   Name_Static                         : constant Name_Id := N + 359;\n-   Name_Stack_Size                     : constant Name_Id := N + 360;\n-   Name_Subunit_File_Name              : constant Name_Id := N + 361;\n-   Name_Task_Stack_Size_Default        : constant Name_Id := N + 362;\n-   Name_Task_Type                      : constant Name_Id := N + 363;\n-   Name_Time_Slicing_Enabled           : constant Name_Id := N + 364;\n-   Name_Top_Guard                      : constant Name_Id := N + 365;\n-   Name_UBA                            : constant Name_Id := N + 366;\n-   Name_UBS                            : constant Name_Id := N + 367;\n-   Name_UBSB                           : constant Name_Id := N + 368;\n-   Name_Unit_Name                      : constant Name_Id := N + 369;\n-   Name_Unknown                        : constant Name_Id := N + 370;\n-   Name_Unrestricted                   : constant Name_Id := N + 371;\n-   Name_Uppercase                      : constant Name_Id := N + 372;\n-   Name_User                           : constant Name_Id := N + 373;\n-   Name_VAX_Float                      : constant Name_Id := N + 374;\n-   Name_VMS                            : constant Name_Id := N + 375;\n-   Name_Vtable_Ptr                     : constant Name_Id := N + 376;\n-   Name_Working_Storage                : constant Name_Id := N + 377;\n+   Name_Policy                         : constant Name_Id := N + 345;\n+   Name_Parameter_Types                : constant Name_Id := N + 346;\n+   Name_Reference                      : constant Name_Id := N + 347;\n+   Name_Restricted                     : constant Name_Id := N + 348;\n+   Name_Result_Mechanism               : constant Name_Id := N + 349;\n+   Name_Result_Type                    : constant Name_Id := N + 350;\n+   Name_Runtime                        : constant Name_Id := N + 351;\n+   Name_SB                             : constant Name_Id := N + 352;\n+   Name_Secondary_Stack_Size           : constant Name_Id := N + 353;\n+   Name_Section                        : constant Name_Id := N + 354;\n+   Name_Semaphore                      : constant Name_Id := N + 355;\n+   Name_Short_Descriptor               : constant Name_Id := N + 356;\n+   Name_Simple_Barriers                : constant Name_Id := N + 357;\n+   Name_Spec_File_Name                 : constant Name_Id := N + 358;\n+   Name_State                          : constant Name_Id := N + 359;\n+   Name_Static                         : constant Name_Id := N + 360;\n+   Name_Stack_Size                     : constant Name_Id := N + 361;\n+   Name_Subunit_File_Name              : constant Name_Id := N + 362;\n+   Name_Task_Stack_Size_Default        : constant Name_Id := N + 363;\n+   Name_Task_Type                      : constant Name_Id := N + 364;\n+   Name_Time_Slicing_Enabled           : constant Name_Id := N + 365;\n+   Name_Top_Guard                      : constant Name_Id := N + 366;\n+   Name_UBA                            : constant Name_Id := N + 367;\n+   Name_UBS                            : constant Name_Id := N + 368;\n+   Name_UBSB                           : constant Name_Id := N + 369;\n+   Name_Unit_Name                      : constant Name_Id := N + 370;\n+   Name_Unknown                        : constant Name_Id := N + 371;\n+   Name_Unrestricted                   : constant Name_Id := N + 372;\n+   Name_Uppercase                      : constant Name_Id := N + 373;\n+   Name_User                           : constant Name_Id := N + 374;\n+   Name_VAX_Float                      : constant Name_Id := N + 375;\n+   Name_VMS                            : constant Name_Id := N + 376;\n+   Name_Vtable_Ptr                     : constant Name_Id := N + 377;\n+   Name_Working_Storage                : constant Name_Id := N + 378;\n \n    --  Names of recognized attributes. The entries with the comment \"Ada 83\"\n    --  are attributes that are defined in Ada 83, but not in Ada 95. These\n@@ -674,488 +675,488 @@ package Snames is\n    --  The entries marked VMS are recognized only in OpenVMS implementations\n    --  of GNAT, and are treated as illegal in all other contexts.\n \n-   First_Attribute_Name                : constant Name_Id := N + 378;\n-   Name_Abort_Signal                   : constant Name_Id := N + 378; -- GNAT\n-   Name_Access                         : constant Name_Id := N + 379;\n-   Name_Address                        : constant Name_Id := N + 380;\n-   Name_Address_Size                   : constant Name_Id := N + 381; -- GNAT\n-   Name_Aft                            : constant Name_Id := N + 382;\n-   Name_Alignment                      : constant Name_Id := N + 383;\n-   Name_Asm_Input                      : constant Name_Id := N + 384; -- GNAT\n-   Name_Asm_Output                     : constant Name_Id := N + 385; -- GNAT\n-   Name_AST_Entry                      : constant Name_Id := N + 386; -- VMS\n-   Name_Bit                            : constant Name_Id := N + 387; -- GNAT\n-   Name_Bit_Order                      : constant Name_Id := N + 388;\n-   Name_Bit_Position                   : constant Name_Id := N + 389; -- GNAT\n-   Name_Body_Version                   : constant Name_Id := N + 390;\n-   Name_Callable                       : constant Name_Id := N + 391;\n-   Name_Caller                         : constant Name_Id := N + 392;\n-   Name_Code_Address                   : constant Name_Id := N + 393; -- GNAT\n-   Name_Component_Size                 : constant Name_Id := N + 394;\n-   Name_Compose                        : constant Name_Id := N + 395;\n-   Name_Constrained                    : constant Name_Id := N + 396;\n-   Name_Count                          : constant Name_Id := N + 397;\n-   Name_Default_Bit_Order              : constant Name_Id := N + 398; -- GNAT\n-   Name_Definite                       : constant Name_Id := N + 399;\n-   Name_Delta                          : constant Name_Id := N + 400;\n-   Name_Denorm                         : constant Name_Id := N + 401;\n-   Name_Digits                         : constant Name_Id := N + 402;\n-   Name_Elaborated                     : constant Name_Id := N + 403; -- GNAT\n-   Name_Emax                           : constant Name_Id := N + 404; -- Ada 83\n-   Name_Enabled                        : constant Name_Id := N + 405; -- GNAT\n-   Name_Enum_Rep                       : constant Name_Id := N + 406; -- GNAT\n-   Name_Enum_Val                       : constant Name_Id := N + 407; -- GNAT\n-   Name_Epsilon                        : constant Name_Id := N + 408; -- Ada 83\n-   Name_Exponent                       : constant Name_Id := N + 409;\n-   Name_External_Tag                   : constant Name_Id := N + 410;\n-   Name_Fast_Math                      : constant Name_Id := N + 411; -- GNAT\n-   Name_First                          : constant Name_Id := N + 412;\n-   Name_First_Bit                      : constant Name_Id := N + 413;\n-   Name_Fixed_Value                    : constant Name_Id := N + 414; -- GNAT\n-   Name_Fore                           : constant Name_Id := N + 415;\n-   Name_Has_Access_Values              : constant Name_Id := N + 416; -- GNAT\n-   Name_Has_Discriminants              : constant Name_Id := N + 417; -- GNAT\n-   Name_Has_Tagged_Values              : constant Name_Id := N + 418; -- GNAT\n-   Name_Identity                       : constant Name_Id := N + 419;\n-   Name_Img                            : constant Name_Id := N + 420; -- GNAT\n-   Name_Integer_Value                  : constant Name_Id := N + 421; -- GNAT\n-   Name_Invalid_Value                  : constant Name_Id := N + 422; -- GNAT\n-   Name_Large                          : constant Name_Id := N + 423; -- Ada 83\n-   Name_Last                           : constant Name_Id := N + 424;\n-   Name_Last_Bit                       : constant Name_Id := N + 425;\n-   Name_Leading_Part                   : constant Name_Id := N + 426;\n-   Name_Length                         : constant Name_Id := N + 427;\n-   Name_Machine_Emax                   : constant Name_Id := N + 428;\n-   Name_Machine_Emin                   : constant Name_Id := N + 429;\n-   Name_Machine_Mantissa               : constant Name_Id := N + 430;\n-   Name_Machine_Overflows              : constant Name_Id := N + 431;\n-   Name_Machine_Radix                  : constant Name_Id := N + 432;\n-   Name_Machine_Rounding               : constant Name_Id := N + 433; -- Ada 05\n-   Name_Machine_Rounds                 : constant Name_Id := N + 434;\n-   Name_Machine_Size                   : constant Name_Id := N + 435; -- GNAT\n-   Name_Mantissa                       : constant Name_Id := N + 436; -- Ada 83\n-   Name_Max_Size_In_Storage_Elements   : constant Name_Id := N + 437;\n-   Name_Maximum_Alignment              : constant Name_Id := N + 438; -- GNAT\n-   Name_Mechanism_Code                 : constant Name_Id := N + 439; -- GNAT\n-   Name_Mod                            : constant Name_Id := N + 440; -- Ada 05\n-   Name_Model_Emin                     : constant Name_Id := N + 441;\n-   Name_Model_Epsilon                  : constant Name_Id := N + 442;\n-   Name_Model_Mantissa                 : constant Name_Id := N + 443;\n-   Name_Model_Small                    : constant Name_Id := N + 444;\n-   Name_Modulus                        : constant Name_Id := N + 445;\n-   Name_Null_Parameter                 : constant Name_Id := N + 446; -- GNAT\n-   Name_Object_Size                    : constant Name_Id := N + 447; -- GNAT\n-   Name_Old                            : constant Name_Id := N + 448; -- GNAT\n-   Name_Partition_ID                   : constant Name_Id := N + 449;\n-   Name_Passed_By_Reference            : constant Name_Id := N + 450; -- GNAT\n-   Name_Pool_Address                   : constant Name_Id := N + 451;\n-   Name_Pos                            : constant Name_Id := N + 452;\n-   Name_Position                       : constant Name_Id := N + 453;\n-   Name_Priority                       : constant Name_Id := N + 454; -- Ada 05\n-   Name_Range                          : constant Name_Id := N + 455;\n-   Name_Range_Length                   : constant Name_Id := N + 456; -- GNAT\n-   Name_Result                         : constant Name_Id := N + 457; -- GNAT\n-   Name_Round                          : constant Name_Id := N + 458;\n-   Name_Safe_Emax                      : constant Name_Id := N + 459; -- Ada 83\n-   Name_Safe_First                     : constant Name_Id := N + 460;\n-   Name_Safe_Large                     : constant Name_Id := N + 461; -- Ada 83\n-   Name_Safe_Last                      : constant Name_Id := N + 462;\n-   Name_Safe_Small                     : constant Name_Id := N + 463; -- Ada 83\n-   Name_Scale                          : constant Name_Id := N + 464;\n-   Name_Scaling                        : constant Name_Id := N + 465;\n-   Name_Signed_Zeros                   : constant Name_Id := N + 466;\n-   Name_Size                           : constant Name_Id := N + 467;\n-   Name_Small                          : constant Name_Id := N + 468;\n-   Name_Storage_Size                   : constant Name_Id := N + 469;\n-   Name_Storage_Unit                   : constant Name_Id := N + 470; -- GNAT\n-   Name_Stream_Size                    : constant Name_Id := N + 471; -- Ada 05\n-   Name_Tag                            : constant Name_Id := N + 472;\n-   Name_Target_Name                    : constant Name_Id := N + 473; -- GNAT\n-   Name_Terminated                     : constant Name_Id := N + 474;\n-   Name_To_Address                     : constant Name_Id := N + 475; -- GNAT\n-   Name_Type_Class                     : constant Name_Id := N + 476; -- GNAT\n-   Name_UET_Address                    : constant Name_Id := N + 477; -- GNAT\n-   Name_Unbiased_Rounding              : constant Name_Id := N + 478;\n-   Name_Unchecked_Access               : constant Name_Id := N + 479;\n-   Name_Unconstrained_Array            : constant Name_Id := N + 480;\n-   Name_Universal_Literal_String       : constant Name_Id := N + 481; -- GNAT\n-   Name_Unrestricted_Access            : constant Name_Id := N + 482; -- GNAT\n-   Name_VADS_Size                      : constant Name_Id := N + 483; -- GNAT\n-   Name_Val                            : constant Name_Id := N + 484;\n-   Name_Valid                          : constant Name_Id := N + 485;\n-   Name_Value_Size                     : constant Name_Id := N + 486; -- GNAT\n-   Name_Version                        : constant Name_Id := N + 487;\n-   Name_Wchar_T_Size                   : constant Name_Id := N + 488; -- GNAT\n-   Name_Wide_Wide_Width                : constant Name_Id := N + 489; -- Ada 05\n-   Name_Wide_Width                     : constant Name_Id := N + 490;\n-   Name_Width                          : constant Name_Id := N + 491;\n-   Name_Word_Size                      : constant Name_Id := N + 492; -- GNAT\n+   First_Attribute_Name                : constant Name_Id := N + 379;\n+   Name_Abort_Signal                   : constant Name_Id := N + 379; -- GNAT\n+   Name_Access                         : constant Name_Id := N + 380;\n+   Name_Address                        : constant Name_Id := N + 381;\n+   Name_Address_Size                   : constant Name_Id := N + 382; -- GNAT\n+   Name_Aft                            : constant Name_Id := N + 383;\n+   Name_Alignment                      : constant Name_Id := N + 384;\n+   Name_Asm_Input                      : constant Name_Id := N + 385; -- GNAT\n+   Name_Asm_Output                     : constant Name_Id := N + 386; -- GNAT\n+   Name_AST_Entry                      : constant Name_Id := N + 387; -- VMS\n+   Name_Bit                            : constant Name_Id := N + 388; -- GNAT\n+   Name_Bit_Order                      : constant Name_Id := N + 389;\n+   Name_Bit_Position                   : constant Name_Id := N + 390; -- GNAT\n+   Name_Body_Version                   : constant Name_Id := N + 391;\n+   Name_Callable                       : constant Name_Id := N + 392;\n+   Name_Caller                         : constant Name_Id := N + 393;\n+   Name_Code_Address                   : constant Name_Id := N + 394; -- GNAT\n+   Name_Component_Size                 : constant Name_Id := N + 395;\n+   Name_Compose                        : constant Name_Id := N + 396;\n+   Name_Constrained                    : constant Name_Id := N + 397;\n+   Name_Count                          : constant Name_Id := N + 398;\n+   Name_Default_Bit_Order              : constant Name_Id := N + 399; -- GNAT\n+   Name_Definite                       : constant Name_Id := N + 400;\n+   Name_Delta                          : constant Name_Id := N + 401;\n+   Name_Denorm                         : constant Name_Id := N + 402;\n+   Name_Digits                         : constant Name_Id := N + 403;\n+   Name_Elaborated                     : constant Name_Id := N + 404; -- GNAT\n+   Name_Emax                           : constant Name_Id := N + 405; -- Ada 83\n+   Name_Enabled                        : constant Name_Id := N + 406; -- GNAT\n+   Name_Enum_Rep                       : constant Name_Id := N + 407; -- GNAT\n+   Name_Enum_Val                       : constant Name_Id := N + 408; -- GNAT\n+   Name_Epsilon                        : constant Name_Id := N + 409; -- Ada 83\n+   Name_Exponent                       : constant Name_Id := N + 410;\n+   Name_External_Tag                   : constant Name_Id := N + 411;\n+   Name_Fast_Math                      : constant Name_Id := N + 412; -- GNAT\n+   Name_First                          : constant Name_Id := N + 413;\n+   Name_First_Bit                      : constant Name_Id := N + 414;\n+   Name_Fixed_Value                    : constant Name_Id := N + 415; -- GNAT\n+   Name_Fore                           : constant Name_Id := N + 416;\n+   Name_Has_Access_Values              : constant Name_Id := N + 417; -- GNAT\n+   Name_Has_Discriminants              : constant Name_Id := N + 418; -- GNAT\n+   Name_Has_Tagged_Values              : constant Name_Id := N + 419; -- GNAT\n+   Name_Identity                       : constant Name_Id := N + 420;\n+   Name_Img                            : constant Name_Id := N + 421; -- GNAT\n+   Name_Integer_Value                  : constant Name_Id := N + 422; -- GNAT\n+   Name_Invalid_Value                  : constant Name_Id := N + 423; -- GNAT\n+   Name_Large                          : constant Name_Id := N + 424; -- Ada 83\n+   Name_Last                           : constant Name_Id := N + 425;\n+   Name_Last_Bit                       : constant Name_Id := N + 426;\n+   Name_Leading_Part                   : constant Name_Id := N + 427;\n+   Name_Length                         : constant Name_Id := N + 428;\n+   Name_Machine_Emax                   : constant Name_Id := N + 429;\n+   Name_Machine_Emin                   : constant Name_Id := N + 430;\n+   Name_Machine_Mantissa               : constant Name_Id := N + 431;\n+   Name_Machine_Overflows              : constant Name_Id := N + 432;\n+   Name_Machine_Radix                  : constant Name_Id := N + 433;\n+   Name_Machine_Rounding               : constant Name_Id := N + 434; -- Ada 05\n+   Name_Machine_Rounds                 : constant Name_Id := N + 435;\n+   Name_Machine_Size                   : constant Name_Id := N + 436; -- GNAT\n+   Name_Mantissa                       : constant Name_Id := N + 437; -- Ada 83\n+   Name_Max_Size_In_Storage_Elements   : constant Name_Id := N + 438;\n+   Name_Maximum_Alignment              : constant Name_Id := N + 439; -- GNAT\n+   Name_Mechanism_Code                 : constant Name_Id := N + 440; -- GNAT\n+   Name_Mod                            : constant Name_Id := N + 441; -- Ada 05\n+   Name_Model_Emin                     : constant Name_Id := N + 442;\n+   Name_Model_Epsilon                  : constant Name_Id := N + 443;\n+   Name_Model_Mantissa                 : constant Name_Id := N + 444;\n+   Name_Model_Small                    : constant Name_Id := N + 445;\n+   Name_Modulus                        : constant Name_Id := N + 446;\n+   Name_Null_Parameter                 : constant Name_Id := N + 447; -- GNAT\n+   Name_Object_Size                    : constant Name_Id := N + 448; -- GNAT\n+   Name_Old                            : constant Name_Id := N + 449; -- GNAT\n+   Name_Partition_ID                   : constant Name_Id := N + 450;\n+   Name_Passed_By_Reference            : constant Name_Id := N + 451; -- GNAT\n+   Name_Pool_Address                   : constant Name_Id := N + 452;\n+   Name_Pos                            : constant Name_Id := N + 453;\n+   Name_Position                       : constant Name_Id := N + 454;\n+   Name_Priority                       : constant Name_Id := N + 455; -- Ada 05\n+   Name_Range                          : constant Name_Id := N + 456;\n+   Name_Range_Length                   : constant Name_Id := N + 457; -- GNAT\n+   Name_Result                         : constant Name_Id := N + 458; -- GNAT\n+   Name_Round                          : constant Name_Id := N + 459;\n+   Name_Safe_Emax                      : constant Name_Id := N + 460; -- Ada 83\n+   Name_Safe_First                     : constant Name_Id := N + 461;\n+   Name_Safe_Large                     : constant Name_Id := N + 462; -- Ada 83\n+   Name_Safe_Last                      : constant Name_Id := N + 463;\n+   Name_Safe_Small                     : constant Name_Id := N + 464; -- Ada 83\n+   Name_Scale                          : constant Name_Id := N + 465;\n+   Name_Scaling                        : constant Name_Id := N + 466;\n+   Name_Signed_Zeros                   : constant Name_Id := N + 467;\n+   Name_Size                           : constant Name_Id := N + 468;\n+   Name_Small                          : constant Name_Id := N + 469;\n+   Name_Storage_Size                   : constant Name_Id := N + 470;\n+   Name_Storage_Unit                   : constant Name_Id := N + 471; -- GNAT\n+   Name_Stream_Size                    : constant Name_Id := N + 472; -- Ada 05\n+   Name_Tag                            : constant Name_Id := N + 473;\n+   Name_Target_Name                    : constant Name_Id := N + 474; -- GNAT\n+   Name_Terminated                     : constant Name_Id := N + 475;\n+   Name_To_Address                     : constant Name_Id := N + 476; -- GNAT\n+   Name_Type_Class                     : constant Name_Id := N + 477; -- GNAT\n+   Name_UET_Address                    : constant Name_Id := N + 478; -- GNAT\n+   Name_Unbiased_Rounding              : constant Name_Id := N + 479;\n+   Name_Unchecked_Access               : constant Name_Id := N + 480;\n+   Name_Unconstrained_Array            : constant Name_Id := N + 481;\n+   Name_Universal_Literal_String       : constant Name_Id := N + 482; -- GNAT\n+   Name_Unrestricted_Access            : constant Name_Id := N + 483; -- GNAT\n+   Name_VADS_Size                      : constant Name_Id := N + 484; -- GNAT\n+   Name_Val                            : constant Name_Id := N + 485;\n+   Name_Valid                          : constant Name_Id := N + 486;\n+   Name_Value_Size                     : constant Name_Id := N + 487; -- GNAT\n+   Name_Version                        : constant Name_Id := N + 488;\n+   Name_Wchar_T_Size                   : constant Name_Id := N + 489; -- GNAT\n+   Name_Wide_Wide_Width                : constant Name_Id := N + 490; -- Ada 05\n+   Name_Wide_Width                     : constant Name_Id := N + 491;\n+   Name_Width                          : constant Name_Id := N + 492;\n+   Name_Word_Size                      : constant Name_Id := N + 493; -- GNAT\n \n    --  Attributes that designate attributes returning renamable functions,\n    --  i.e. functions that return other than a universal value and that\n    --  have non-universal arguments.\n \n-   First_Renamable_Function_Attribute  : constant Name_Id := N + 493;\n-   Name_Adjacent                       : constant Name_Id := N + 493;\n-   Name_Ceiling                        : constant Name_Id := N + 494;\n-   Name_Copy_Sign                      : constant Name_Id := N + 495;\n-   Name_Floor                          : constant Name_Id := N + 496;\n-   Name_Fraction                       : constant Name_Id := N + 497;\n-   Name_From_Any                       : constant Name_Id := N + 498; -- GNAT\n-   Name_Image                          : constant Name_Id := N + 499;\n-   Name_Input                          : constant Name_Id := N + 500;\n-   Name_Machine                        : constant Name_Id := N + 501;\n-   Name_Max                            : constant Name_Id := N + 502;\n-   Name_Min                            : constant Name_Id := N + 503;\n-   Name_Model                          : constant Name_Id := N + 504;\n-   Name_Pred                           : constant Name_Id := N + 505;\n-   Name_Remainder                      : constant Name_Id := N + 506;\n-   Name_Rounding                       : constant Name_Id := N + 507;\n-   Name_Succ                           : constant Name_Id := N + 508;\n-   Name_To_Any                         : constant Name_Id := N + 509; -- GNAT\n-   Name_Truncation                     : constant Name_Id := N + 510;\n-   Name_TypeCode                       : constant Name_Id := N + 511; -- GNAT\n-   Name_Value                          : constant Name_Id := N + 512;\n-   Name_Wide_Image                     : constant Name_Id := N + 513;\n-   Name_Wide_Wide_Image                : constant Name_Id := N + 514;\n-   Name_Wide_Value                     : constant Name_Id := N + 515;\n-   Name_Wide_Wide_Value                : constant Name_Id := N + 516;\n-   Last_Renamable_Function_Attribute   : constant Name_Id := N + 516;\n+   First_Renamable_Function_Attribute  : constant Name_Id := N + 494;\n+   Name_Adjacent                       : constant Name_Id := N + 494;\n+   Name_Ceiling                        : constant Name_Id := N + 495;\n+   Name_Copy_Sign                      : constant Name_Id := N + 496;\n+   Name_Floor                          : constant Name_Id := N + 497;\n+   Name_Fraction                       : constant Name_Id := N + 498;\n+   Name_From_Any                       : constant Name_Id := N + 499; -- GNAT\n+   Name_Image                          : constant Name_Id := N + 500;\n+   Name_Input                          : constant Name_Id := N + 501;\n+   Name_Machine                        : constant Name_Id := N + 502;\n+   Name_Max                            : constant Name_Id := N + 503;\n+   Name_Min                            : constant Name_Id := N + 504;\n+   Name_Model                          : constant Name_Id := N + 505;\n+   Name_Pred                           : constant Name_Id := N + 506;\n+   Name_Remainder                      : constant Name_Id := N + 507;\n+   Name_Rounding                       : constant Name_Id := N + 508;\n+   Name_Succ                           : constant Name_Id := N + 509;\n+   Name_To_Any                         : constant Name_Id := N + 510; -- GNAT\n+   Name_Truncation                     : constant Name_Id := N + 511;\n+   Name_TypeCode                       : constant Name_Id := N + 512; -- GNAT\n+   Name_Value                          : constant Name_Id := N + 513;\n+   Name_Wide_Image                     : constant Name_Id := N + 514;\n+   Name_Wide_Wide_Image                : constant Name_Id := N + 515;\n+   Name_Wide_Value                     : constant Name_Id := N + 516;\n+   Name_Wide_Wide_Value                : constant Name_Id := N + 517;\n+   Last_Renamable_Function_Attribute   : constant Name_Id := N + 517;\n \n    --  Attributes that designate procedures\n \n-   First_Procedure_Attribute           : constant Name_Id := N + 517;\n-   Name_Output                         : constant Name_Id := N + 517;\n-   Name_Read                           : constant Name_Id := N + 518;\n-   Name_Write                          : constant Name_Id := N + 519;\n-   Last_Procedure_Attribute            : constant Name_Id := N + 519;\n+   First_Procedure_Attribute           : constant Name_Id := N + 518;\n+   Name_Output                         : constant Name_Id := N + 518;\n+   Name_Read                           : constant Name_Id := N + 519;\n+   Name_Write                          : constant Name_Id := N + 520;\n+   Last_Procedure_Attribute            : constant Name_Id := N + 520;\n \n    --  Remaining attributes are ones that return entities\n \n-   First_Entity_Attribute_Name         : constant Name_Id := N + 520;\n-   Name_Elab_Body                      : constant Name_Id := N + 520; -- GNAT\n-   Name_Elab_Spec                      : constant Name_Id := N + 521; -- GNAT\n-   Name_Storage_Pool                   : constant Name_Id := N + 522;\n+   First_Entity_Attribute_Name         : constant Name_Id := N + 521;\n+   Name_Elab_Body                      : constant Name_Id := N + 521; -- GNAT\n+   Name_Elab_Spec                      : constant Name_Id := N + 522; -- GNAT\n+   Name_Storage_Pool                   : constant Name_Id := N + 523;\n \n    --  These attributes are the ones that return types\n \n-   First_Type_Attribute_Name           : constant Name_Id := N + 523;\n-   Name_Base                           : constant Name_Id := N + 523;\n-   Name_Class                          : constant Name_Id := N + 524;\n-   Name_Stub_Type                      : constant Name_Id := N + 525;\n-   Last_Type_Attribute_Name            : constant Name_Id := N + 525;\n-   Last_Entity_Attribute_Name          : constant Name_Id := N + 525;\n-   Last_Attribute_Name                 : constant Name_Id := N + 525;\n+   First_Type_Attribute_Name           : constant Name_Id := N + 524;\n+   Name_Base                           : constant Name_Id := N + 524;\n+   Name_Class                          : constant Name_Id := N + 525;\n+   Name_Stub_Type                      : constant Name_Id := N + 526;\n+   Last_Type_Attribute_Name            : constant Name_Id := N + 526;\n+   Last_Entity_Attribute_Name          : constant Name_Id := N + 526;\n+   Last_Attribute_Name                 : constant Name_Id := N + 526;\n \n    --  Names of recognized locking policy identifiers\n \n    --  Note: policies are identified by the first character of the\n    --  name (e.g. C for Ceiling_Locking). If new policy names are added,\n    --  the first character must be distinct.\n \n-   First_Locking_Policy_Name           : constant Name_Id := N + 526;\n-   Name_Ceiling_Locking                : constant Name_Id := N + 526;\n-   Name_Inheritance_Locking            : constant Name_Id := N + 527;\n-   Last_Locking_Policy_Name            : constant Name_Id := N + 527;\n+   First_Locking_Policy_Name           : constant Name_Id := N + 527;\n+   Name_Ceiling_Locking                : constant Name_Id := N + 527;\n+   Name_Inheritance_Locking            : constant Name_Id := N + 528;\n+   Last_Locking_Policy_Name            : constant Name_Id := N + 528;\n \n    --  Names of recognized queuing policy identifiers\n \n    --  Note: policies are identified by the first character of the\n    --  name (e.g. F for FIFO_Queuing). If new policy names are added,\n    --  the first character must be distinct.\n \n-   First_Queuing_Policy_Name           : constant Name_Id := N + 528;\n-   Name_FIFO_Queuing                   : constant Name_Id := N + 528;\n-   Name_Priority_Queuing               : constant Name_Id := N + 529;\n-   Last_Queuing_Policy_Name            : constant Name_Id := N + 529;\n+   First_Queuing_Policy_Name           : constant Name_Id := N + 529;\n+   Name_FIFO_Queuing                   : constant Name_Id := N + 529;\n+   Name_Priority_Queuing               : constant Name_Id := N + 530;\n+   Last_Queuing_Policy_Name            : constant Name_Id := N + 530;\n \n    --  Names of recognized task dispatching policy identifiers\n \n    --  Note: policies are identified by the first character of the\n    --  name (e.g. F for FIFO_Within_Priorities). If new policy names\n    --  are added, the first character must be distinct.\n \n-   First_Task_Dispatching_Policy_Name    : constant Name_Id := N + 530;\n-   Name_EDF_Across_Priorities            : constant Name_Id := N + 530;\n-   Name_FIFO_Within_Priorities           : constant Name_Id := N + 531;\n-   Name_Non_Preemptive_Within_Priorities : constant Name_Id := N + 532;\n-   Name_Round_Robin_Within_Priorities    : constant Name_Id := N + 533;\n-   Last_Task_Dispatching_Policy_Name     : constant Name_Id := N + 533;\n+   First_Task_Dispatching_Policy_Name    : constant Name_Id := N + 531;\n+   Name_EDF_Across_Priorities            : constant Name_Id := N + 531;\n+   Name_FIFO_Within_Priorities           : constant Name_Id := N + 532;\n+   Name_Non_Preemptive_Within_Priorities : constant Name_Id := N + 533;\n+   Name_Round_Robin_Within_Priorities    : constant Name_Id := N + 534;\n+   Last_Task_Dispatching_Policy_Name     : constant Name_Id := N + 534;\n \n    --  Names of recognized checks for pragma Suppress\n \n-   First_Check_Name                    : constant Name_Id := N + 534;\n-   Name_Access_Check                   : constant Name_Id := N + 534;\n-   Name_Accessibility_Check            : constant Name_Id := N + 535;\n-   Name_Alignment_Check                : constant Name_Id := N + 536; -- GNAT\n-   Name_Discriminant_Check             : constant Name_Id := N + 537;\n-   Name_Division_Check                 : constant Name_Id := N + 538;\n-   Name_Elaboration_Check              : constant Name_Id := N + 539;\n-   Name_Index_Check                    : constant Name_Id := N + 540;\n-   Name_Length_Check                   : constant Name_Id := N + 541;\n-   Name_Overflow_Check                 : constant Name_Id := N + 542;\n-   Name_Range_Check                    : constant Name_Id := N + 543;\n-   Name_Storage_Check                  : constant Name_Id := N + 544;\n-   Name_Tag_Check                      : constant Name_Id := N + 545;\n-   Name_Validity_Check                 : constant Name_Id := N + 546; -- GNAT\n-   Name_All_Checks                     : constant Name_Id := N + 547;\n-   Last_Check_Name                     : constant Name_Id := N + 547;\n+   First_Check_Name                    : constant Name_Id := N + 535;\n+   Name_Access_Check                   : constant Name_Id := N + 535;\n+   Name_Accessibility_Check            : constant Name_Id := N + 536;\n+   Name_Alignment_Check                : constant Name_Id := N + 537; -- GNAT\n+   Name_Discriminant_Check             : constant Name_Id := N + 538;\n+   Name_Division_Check                 : constant Name_Id := N + 539;\n+   Name_Elaboration_Check              : constant Name_Id := N + 540;\n+   Name_Index_Check                    : constant Name_Id := N + 541;\n+   Name_Length_Check                   : constant Name_Id := N + 542;\n+   Name_Overflow_Check                 : constant Name_Id := N + 543;\n+   Name_Range_Check                    : constant Name_Id := N + 544;\n+   Name_Storage_Check                  : constant Name_Id := N + 545;\n+   Name_Tag_Check                      : constant Name_Id := N + 546;\n+   Name_Validity_Check                 : constant Name_Id := N + 547; -- GNAT\n+   Name_All_Checks                     : constant Name_Id := N + 548;\n+   Last_Check_Name                     : constant Name_Id := N + 548;\n \n    --  Names corresponding to reserved keywords, excluding those already\n    --  declared in the attribute list (Access, Delta, Digits, Mod, Range).\n \n-   Name_Abort                          : constant Name_Id := N + 548;\n-   Name_Abs                            : constant Name_Id := N + 549;\n-   Name_Accept                         : constant Name_Id := N + 550;\n-   Name_And                            : constant Name_Id := N + 551;\n-   Name_All                            : constant Name_Id := N + 552;\n-   Name_Array                          : constant Name_Id := N + 553;\n-   Name_At                             : constant Name_Id := N + 554;\n-   Name_Begin                          : constant Name_Id := N + 555;\n-   Name_Body                           : constant Name_Id := N + 556;\n-   Name_Case                           : constant Name_Id := N + 557;\n-   Name_Constant                       : constant Name_Id := N + 558;\n-   Name_Declare                        : constant Name_Id := N + 559;\n-   Name_Delay                          : constant Name_Id := N + 560;\n-   Name_Do                             : constant Name_Id := N + 561;\n-   Name_Else                           : constant Name_Id := N + 562;\n-   Name_Elsif                          : constant Name_Id := N + 563;\n-   Name_End                            : constant Name_Id := N + 564;\n-   Name_Entry                          : constant Name_Id := N + 565;\n-   Name_Exception                      : constant Name_Id := N + 566;\n-   Name_Exit                           : constant Name_Id := N + 567;\n-   Name_For                            : constant Name_Id := N + 568;\n-   Name_Function                       : constant Name_Id := N + 569;\n-   Name_Generic                        : constant Name_Id := N + 570;\n-   Name_Goto                           : constant Name_Id := N + 571;\n-   Name_If                             : constant Name_Id := N + 572;\n-   Name_In                             : constant Name_Id := N + 573;\n-   Name_Is                             : constant Name_Id := N + 574;\n-   Name_Limited                        : constant Name_Id := N + 575;\n-   Name_Loop                           : constant Name_Id := N + 576;\n-   Name_New                            : constant Name_Id := N + 577;\n-   Name_Not                            : constant Name_Id := N + 578;\n-   Name_Null                           : constant Name_Id := N + 579;\n-   Name_Of                             : constant Name_Id := N + 580;\n-   Name_Or                             : constant Name_Id := N + 581;\n-   Name_Others                         : constant Name_Id := N + 582;\n-   Name_Out                            : constant Name_Id := N + 583;\n-   Name_Package                        : constant Name_Id := N + 584;\n-   Name_Pragma                         : constant Name_Id := N + 585;\n-   Name_Private                        : constant Name_Id := N + 586;\n-   Name_Procedure                      : constant Name_Id := N + 587;\n-   Name_Raise                          : constant Name_Id := N + 588;\n-   Name_Record                         : constant Name_Id := N + 589;\n-   Name_Rem                            : constant Name_Id := N + 590;\n-   Name_Renames                        : constant Name_Id := N + 591;\n-   Name_Return                         : constant Name_Id := N + 592;\n-   Name_Reverse                        : constant Name_Id := N + 593;\n-   Name_Select                         : constant Name_Id := N + 594;\n-   Name_Separate                       : constant Name_Id := N + 595;\n-   Name_Subtype                        : constant Name_Id := N + 596;\n-   Name_Task                           : constant Name_Id := N + 597;\n-   Name_Terminate                      : constant Name_Id := N + 598;\n-   Name_Then                           : constant Name_Id := N + 599;\n-   Name_Type                           : constant Name_Id := N + 600;\n-   Name_Use                            : constant Name_Id := N + 601;\n-   Name_When                           : constant Name_Id := N + 602;\n-   Name_While                          : constant Name_Id := N + 603;\n-   Name_With                           : constant Name_Id := N + 604;\n-   Name_Xor                            : constant Name_Id := N + 605;\n+   Name_Abort                          : constant Name_Id := N + 549;\n+   Name_Abs                            : constant Name_Id := N + 550;\n+   Name_Accept                         : constant Name_Id := N + 551;\n+   Name_And                            : constant Name_Id := N + 552;\n+   Name_All                            : constant Name_Id := N + 553;\n+   Name_Array                          : constant Name_Id := N + 554;\n+   Name_At                             : constant Name_Id := N + 555;\n+   Name_Begin                          : constant Name_Id := N + 556;\n+   Name_Body                           : constant Name_Id := N + 557;\n+   Name_Case                           : constant Name_Id := N + 558;\n+   Name_Constant                       : constant Name_Id := N + 559;\n+   Name_Declare                        : constant Name_Id := N + 560;\n+   Name_Delay                          : constant Name_Id := N + 561;\n+   Name_Do                             : constant Name_Id := N + 562;\n+   Name_Else                           : constant Name_Id := N + 563;\n+   Name_Elsif                          : constant Name_Id := N + 564;\n+   Name_End                            : constant Name_Id := N + 565;\n+   Name_Entry                          : constant Name_Id := N + 566;\n+   Name_Exception                      : constant Name_Id := N + 567;\n+   Name_Exit                           : constant Name_Id := N + 568;\n+   Name_For                            : constant Name_Id := N + 569;\n+   Name_Function                       : constant Name_Id := N + 570;\n+   Name_Generic                        : constant Name_Id := N + 571;\n+   Name_Goto                           : constant Name_Id := N + 572;\n+   Name_If                             : constant Name_Id := N + 573;\n+   Name_In                             : constant Name_Id := N + 574;\n+   Name_Is                             : constant Name_Id := N + 575;\n+   Name_Limited                        : constant Name_Id := N + 576;\n+   Name_Loop                           : constant Name_Id := N + 577;\n+   Name_New                            : constant Name_Id := N + 578;\n+   Name_Not                            : constant Name_Id := N + 579;\n+   Name_Null                           : constant Name_Id := N + 580;\n+   Name_Of                             : constant Name_Id := N + 581;\n+   Name_Or                             : constant Name_Id := N + 582;\n+   Name_Others                         : constant Name_Id := N + 583;\n+   Name_Out                            : constant Name_Id := N + 584;\n+   Name_Package                        : constant Name_Id := N + 585;\n+   Name_Pragma                         : constant Name_Id := N + 586;\n+   Name_Private                        : constant Name_Id := N + 587;\n+   Name_Procedure                      : constant Name_Id := N + 588;\n+   Name_Raise                          : constant Name_Id := N + 589;\n+   Name_Record                         : constant Name_Id := N + 590;\n+   Name_Rem                            : constant Name_Id := N + 591;\n+   Name_Renames                        : constant Name_Id := N + 592;\n+   Name_Return                         : constant Name_Id := N + 593;\n+   Name_Reverse                        : constant Name_Id := N + 594;\n+   Name_Select                         : constant Name_Id := N + 595;\n+   Name_Separate                       : constant Name_Id := N + 596;\n+   Name_Subtype                        : constant Name_Id := N + 597;\n+   Name_Task                           : constant Name_Id := N + 598;\n+   Name_Terminate                      : constant Name_Id := N + 599;\n+   Name_Then                           : constant Name_Id := N + 600;\n+   Name_Type                           : constant Name_Id := N + 601;\n+   Name_Use                            : constant Name_Id := N + 602;\n+   Name_When                           : constant Name_Id := N + 603;\n+   Name_While                          : constant Name_Id := N + 604;\n+   Name_With                           : constant Name_Id := N + 605;\n+   Name_Xor                            : constant Name_Id := N + 606;\n \n    --  Names of intrinsic subprograms\n \n    --  Note: Asm is missing from this list, since Asm is a legitimate\n    --  convention name. So is To_Address, which is a GNAT attribute.\n \n-   First_Intrinsic_Name                 : constant Name_Id := N + 606;\n-   Name_Divide                          : constant Name_Id := N + 606;\n-   Name_Enclosing_Entity                : constant Name_Id := N + 607;\n-   Name_Exception_Information           : constant Name_Id := N + 608;\n-   Name_Exception_Message               : constant Name_Id := N + 609;\n-   Name_Exception_Name                  : constant Name_Id := N + 610;\n-   Name_File                            : constant Name_Id := N + 611;\n-   Name_Generic_Dispatching_Constructor : constant Name_Id := N + 612;\n-   Name_Import_Address                  : constant Name_Id := N + 613;\n-   Name_Import_Largest_Value            : constant Name_Id := N + 614;\n-   Name_Import_Value                    : constant Name_Id := N + 615;\n-   Name_Is_Negative                     : constant Name_Id := N + 616;\n-   Name_Line                            : constant Name_Id := N + 617;\n-   Name_Rotate_Left                     : constant Name_Id := N + 618;\n-   Name_Rotate_Right                    : constant Name_Id := N + 619;\n-   Name_Shift_Left                      : constant Name_Id := N + 620;\n-   Name_Shift_Right                     : constant Name_Id := N + 621;\n-   Name_Shift_Right_Arithmetic          : constant Name_Id := N + 622;\n-   Name_Source_Location                 : constant Name_Id := N + 623;\n-   Name_Unchecked_Conversion            : constant Name_Id := N + 624;\n-   Name_Unchecked_Deallocation          : constant Name_Id := N + 625;\n-   Name_To_Pointer                      : constant Name_Id := N + 626;\n-   Last_Intrinsic_Name                  : constant Name_Id := N + 626;\n+   First_Intrinsic_Name                 : constant Name_Id := N + 607;\n+   Name_Divide                          : constant Name_Id := N + 607;\n+   Name_Enclosing_Entity                : constant Name_Id := N + 608;\n+   Name_Exception_Information           : constant Name_Id := N + 609;\n+   Name_Exception_Message               : constant Name_Id := N + 610;\n+   Name_Exception_Name                  : constant Name_Id := N + 611;\n+   Name_File                            : constant Name_Id := N + 612;\n+   Name_Generic_Dispatching_Constructor : constant Name_Id := N + 613;\n+   Name_Import_Address                  : constant Name_Id := N + 614;\n+   Name_Import_Largest_Value            : constant Name_Id := N + 615;\n+   Name_Import_Value                    : constant Name_Id := N + 616;\n+   Name_Is_Negative                     : constant Name_Id := N + 617;\n+   Name_Line                            : constant Name_Id := N + 618;\n+   Name_Rotate_Left                     : constant Name_Id := N + 619;\n+   Name_Rotate_Right                    : constant Name_Id := N + 620;\n+   Name_Shift_Left                      : constant Name_Id := N + 621;\n+   Name_Shift_Right                     : constant Name_Id := N + 622;\n+   Name_Shift_Right_Arithmetic          : constant Name_Id := N + 623;\n+   Name_Source_Location                 : constant Name_Id := N + 624;\n+   Name_Unchecked_Conversion            : constant Name_Id := N + 625;\n+   Name_Unchecked_Deallocation          : constant Name_Id := N + 626;\n+   Name_To_Pointer                      : constant Name_Id := N + 627;\n+   Last_Intrinsic_Name                  : constant Name_Id := N + 627;\n \n    --  Names used in processing intrinsic calls\n \n-   Name_Free                           : constant Name_Id := N + 627;\n+   Name_Free                           : constant Name_Id := N + 628;\n \n    --  Reserved words used only in Ada 95\n \n-   First_95_Reserved_Word              : constant Name_Id := N + 628;\n-   Name_Abstract                       : constant Name_Id := N + 628;\n-   Name_Aliased                        : constant Name_Id := N + 629;\n-   Name_Protected                      : constant Name_Id := N + 630;\n-   Name_Until                          : constant Name_Id := N + 631;\n-   Name_Requeue                        : constant Name_Id := N + 632;\n-   Name_Tagged                         : constant Name_Id := N + 633;\n-   Last_95_Reserved_Word               : constant Name_Id := N + 633;\n+   First_95_Reserved_Word              : constant Name_Id := N + 629;\n+   Name_Abstract                       : constant Name_Id := N + 629;\n+   Name_Aliased                        : constant Name_Id := N + 630;\n+   Name_Protected                      : constant Name_Id := N + 631;\n+   Name_Until                          : constant Name_Id := N + 632;\n+   Name_Requeue                        : constant Name_Id := N + 633;\n+   Name_Tagged                         : constant Name_Id := N + 634;\n+   Last_95_Reserved_Word               : constant Name_Id := N + 634;\n \n    subtype Ada_95_Reserved_Words is\n      Name_Id range First_95_Reserved_Word .. Last_95_Reserved_Word;\n \n    --  Miscellaneous names used in semantic checking\n \n-   Name_Raise_Exception                : constant Name_Id := N + 634;\n+   Name_Raise_Exception                : constant Name_Id := N + 635;\n \n    --  Additional reserved words and identifiers used in GNAT Project Files\n    --  Note that Name_External is already previously declared\n \n-   Name_Ada_Roots                      : constant Name_Id := N + 635;\n-   Name_Aggregate                      : constant Name_Id := N + 636;\n-   Name_Archive_Builder                : constant Name_Id := N + 637;\n-   Name_Archive_Builder_Append_Option  : constant Name_Id := N + 638;\n-   Name_Archive_Indexer                : constant Name_Id := N + 639;\n-   Name_Archive_Suffix                 : constant Name_Id := N + 640;\n-   Name_Binder                         : constant Name_Id := N + 641;\n-   Name_Binder_Prefix                  : constant Name_Id := N + 642;\n-   Name_Body_Suffix                    : constant Name_Id := N + 643;\n-   Name_Builder                        : constant Name_Id := N + 644;\n-   Name_Builder_Switches               : constant Name_Id := N + 645;\n-   Name_Compiler                       : constant Name_Id := N + 646;\n-   Name_Compiler_Command               : constant Name_Id := N + 647;\n-   Name_Compiler_Kind                  : constant Name_Id := N + 648;\n-   Name_Config_Body_File_Name          : constant Name_Id := N + 649;\n-   Name_Config_Body_File_Name_Pattern  : constant Name_Id := N + 650;\n-   Name_Config_File_Switches           : constant Name_Id := N + 651;\n-   Name_Config_File_Unique             : constant Name_Id := N + 652;\n-   Name_Config_Spec_File_Name          : constant Name_Id := N + 653;\n-   Name_Config_Spec_File_Name_Pattern  : constant Name_Id := N + 654;\n-   Name_Configuration                  : constant Name_Id := N + 655;\n-   Name_Cross_Reference                : constant Name_Id := N + 656;\n-   Name_Default_Language               : constant Name_Id := N + 657;\n-   Name_Default_Switches               : constant Name_Id := N + 658;\n-   Name_Dependency_Driver              : constant Name_Id := N + 659;\n-   Name_Dependency_File_Kind           : constant Name_Id := N + 660;\n-   Name_Dependency_Switches            : constant Name_Id := N + 661;\n-   Name_Driver                         : constant Name_Id := N + 662;\n-   Name_Excluded_Source_Dirs           : constant Name_Id := N + 663;\n-   Name_Excluded_Source_Files          : constant Name_Id := N + 664;\n-   Name_Excluded_Source_List_File      : constant Name_Id := N + 665;\n-   Name_Exec_Dir                       : constant Name_Id := N + 666;\n-   Name_Executable                     : constant Name_Id := N + 667;\n-   Name_Executable_Suffix              : constant Name_Id := N + 668;\n-   Name_Extends                        : constant Name_Id := N + 669;\n-   Name_Externally_Built               : constant Name_Id := N + 670;\n-   Name_Finder                         : constant Name_Id := N + 671;\n-   Name_Global_Compilation_Switches    : constant Name_Id := N + 672;\n-   Name_Global_Configuration_Pragmas   : constant Name_Id := N + 673;\n-   Name_Global_Config_File             : constant Name_Id := N + 674;\n-   Name_Gnatls                         : constant Name_Id := N + 675;\n-   Name_Gnatstub                       : constant Name_Id := N + 676;\n-   Name_Ide                            : constant Name_Id := N + 677;\n-   Name_Implementation                 : constant Name_Id := N + 678;\n-   Name_Implementation_Exceptions      : constant Name_Id := N + 679;\n-   Name_Implementation_Suffix          : constant Name_Id := N + 680;\n-   Name_Include_Switches               : constant Name_Id := N + 681;\n-   Name_Include_Path                   : constant Name_Id := N + 682;\n-   Name_Include_Path_File              : constant Name_Id := N + 683;\n-   Name_Inherit_Source_Path            : constant Name_Id := N + 684;\n-   Name_Language_Kind                  : constant Name_Id := N + 685;\n-   Name_Language_Processing            : constant Name_Id := N + 686;\n-   Name_Languages                      : constant Name_Id := N + 687;\n-   Name_Library                        : constant Name_Id := N + 688;\n-   Name_Library_Ali_Dir                : constant Name_Id := N + 689;\n-   Name_Library_Auto_Init              : constant Name_Id := N + 690;\n-   Name_Library_Auto_Init_Supported    : constant Name_Id := N + 691;\n-   Name_Library_Builder                : constant Name_Id := N + 692;\n-   Name_Library_Dir                    : constant Name_Id := N + 693;\n-   Name_Library_GCC                    : constant Name_Id := N + 694;\n-   Name_Library_Interface              : constant Name_Id := N + 695;\n-   Name_Library_Kind                   : constant Name_Id := N + 696;\n-   Name_Library_Name                   : constant Name_Id := N + 697;\n-   Name_Library_Major_Minor_Id_Supported : constant Name_Id := N + 698;\n-   Name_Library_Options                : constant Name_Id := N + 699;\n-   Name_Library_Partial_Linker         : constant Name_Id := N + 700;\n-   Name_Library_Reference_Symbol_File  : constant Name_Id := N + 701;\n-   Name_Library_Src_Dir                : constant Name_Id := N + 702;\n-   Name_Library_Support                : constant Name_Id := N + 703;\n-   Name_Library_Symbol_File            : constant Name_Id := N + 704;\n-   Name_Library_Symbol_Policy          : constant Name_Id := N + 705;\n-   Name_Library_Version                : constant Name_Id := N + 706;\n-   Name_Library_Version_Switches       : constant Name_Id := N + 707;\n-   Name_Linker                         : constant Name_Id := N + 708;\n-   Name_Linker_Executable_Option       : constant Name_Id := N + 709;\n-   Name_Linker_Lib_Dir_Option          : constant Name_Id := N + 710;\n-   Name_Linker_Lib_Name_Option         : constant Name_Id := N + 711;\n-   Name_Local_Config_File              : constant Name_Id := N + 712;\n-   Name_Local_Configuration_Pragmas    : constant Name_Id := N + 713;\n-   Name_Locally_Removed_Files          : constant Name_Id := N + 714;\n-   Name_Map_File_Option                : constant Name_Id := N + 715;\n-   Name_Mapping_File_Switches          : constant Name_Id := N + 716;\n-   Name_Mapping_Spec_Suffix            : constant Name_Id := N + 717;\n-   Name_Mapping_Body_Suffix            : constant Name_Id := N + 718;\n-   Name_Metrics                        : constant Name_Id := N + 719;\n-   Name_Naming                         : constant Name_Id := N + 720;\n-   Name_Object_Generated               : constant Name_Id := N + 721;\n-   Name_Objects_Linked                 : constant Name_Id := N + 722;\n-   Name_Objects_Path                   : constant Name_Id := N + 723;\n-   Name_Objects_Path_File              : constant Name_Id := N + 724;\n-   Name_Object_Dir                     : constant Name_Id := N + 725;\n-   Name_Path_Syntax                    : constant Name_Id := N + 726;\n-   Name_Pic_Option                     : constant Name_Id := N + 727;\n-   Name_Pretty_Printer                 : constant Name_Id := N + 728;\n-   Name_Prefix                         : constant Name_Id := N + 729;\n-   Name_Project                        : constant Name_Id := N + 730;\n-   Name_Roots                          : constant Name_Id := N + 731;\n-   Name_Required_Switches              : constant Name_Id := N + 732;\n-   Name_Run_Path_Option                : constant Name_Id := N + 733;\n-   Name_Runtime_Project                : constant Name_Id := N + 734;\n-   Name_Shared_Library_Minimum_Switches : constant Name_Id := N + 735;\n-   Name_Shared_Library_Prefix          : constant Name_Id := N + 736;\n-   Name_Shared_Library_Suffix          : constant Name_Id := N + 737;\n-   Name_Separate_Suffix                : constant Name_Id := N + 738;\n-   Name_Source_Dirs                    : constant Name_Id := N + 739;\n-   Name_Source_Files                   : constant Name_Id := N + 740;\n-   Name_Source_List_File               : constant Name_Id := N + 741;\n-   Name_Spec                           : constant Name_Id := N + 742;\n-   Name_Spec_Suffix                    : constant Name_Id := N + 743;\n-   Name_Specification                  : constant Name_Id := N + 744;\n-   Name_Specification_Exceptions       : constant Name_Id := N + 745;\n-   Name_Specification_Suffix           : constant Name_Id := N + 746;\n-   Name_Stack                          : constant Name_Id := N + 747;\n-   Name_Switches                       : constant Name_Id := N + 748;\n-   Name_Symbolic_Link_Supported        : constant Name_Id := N + 749;\n-   Name_Sync                           : constant Name_Id := N + 750;\n-   Name_Synchronize                    : constant Name_Id := N + 751;\n-   Name_Toolchain_Description          : constant Name_Id := N + 752;\n-   Name_Toolchain_Version              : constant Name_Id := N + 753;\n-   Name_Runtime_Library_Dir            : constant Name_Id := N + 754;\n+   Name_Ada_Roots                      : constant Name_Id := N + 636;\n+   Name_Aggregate                      : constant Name_Id := N + 637;\n+   Name_Archive_Builder                : constant Name_Id := N + 638;\n+   Name_Archive_Builder_Append_Option  : constant Name_Id := N + 639;\n+   Name_Archive_Indexer                : constant Name_Id := N + 640;\n+   Name_Archive_Suffix                 : constant Name_Id := N + 641;\n+   Name_Binder                         : constant Name_Id := N + 642;\n+   Name_Binder_Prefix                  : constant Name_Id := N + 643;\n+   Name_Body_Suffix                    : constant Name_Id := N + 644;\n+   Name_Builder                        : constant Name_Id := N + 645;\n+   Name_Builder_Switches               : constant Name_Id := N + 646;\n+   Name_Compiler                       : constant Name_Id := N + 647;\n+   Name_Compiler_Command               : constant Name_Id := N + 648;\n+   Name_Compiler_Kind                  : constant Name_Id := N + 649;\n+   Name_Config_Body_File_Name          : constant Name_Id := N + 650;\n+   Name_Config_Body_File_Name_Pattern  : constant Name_Id := N + 651;\n+   Name_Config_File_Switches           : constant Name_Id := N + 652;\n+   Name_Config_File_Unique             : constant Name_Id := N + 653;\n+   Name_Config_Spec_File_Name          : constant Name_Id := N + 654;\n+   Name_Config_Spec_File_Name_Pattern  : constant Name_Id := N + 655;\n+   Name_Configuration                  : constant Name_Id := N + 656;\n+   Name_Cross_Reference                : constant Name_Id := N + 657;\n+   Name_Default_Language               : constant Name_Id := N + 658;\n+   Name_Default_Switches               : constant Name_Id := N + 659;\n+   Name_Dependency_Driver              : constant Name_Id := N + 660;\n+   Name_Dependency_File_Kind           : constant Name_Id := N + 661;\n+   Name_Dependency_Switches            : constant Name_Id := N + 662;\n+   Name_Driver                         : constant Name_Id := N + 663;\n+   Name_Excluded_Source_Dirs           : constant Name_Id := N + 664;\n+   Name_Excluded_Source_Files          : constant Name_Id := N + 665;\n+   Name_Excluded_Source_List_File      : constant Name_Id := N + 666;\n+   Name_Exec_Dir                       : constant Name_Id := N + 667;\n+   Name_Executable                     : constant Name_Id := N + 668;\n+   Name_Executable_Suffix              : constant Name_Id := N + 669;\n+   Name_Extends                        : constant Name_Id := N + 670;\n+   Name_Externally_Built               : constant Name_Id := N + 671;\n+   Name_Finder                         : constant Name_Id := N + 672;\n+   Name_Global_Compilation_Switches    : constant Name_Id := N + 673;\n+   Name_Global_Configuration_Pragmas   : constant Name_Id := N + 674;\n+   Name_Global_Config_File             : constant Name_Id := N + 675;\n+   Name_Gnatls                         : constant Name_Id := N + 676;\n+   Name_Gnatstub                       : constant Name_Id := N + 677;\n+   Name_Ide                            : constant Name_Id := N + 678;\n+   Name_Implementation                 : constant Name_Id := N + 679;\n+   Name_Implementation_Exceptions      : constant Name_Id := N + 680;\n+   Name_Implementation_Suffix          : constant Name_Id := N + 681;\n+   Name_Include_Switches               : constant Name_Id := N + 682;\n+   Name_Include_Path                   : constant Name_Id := N + 683;\n+   Name_Include_Path_File              : constant Name_Id := N + 684;\n+   Name_Inherit_Source_Path            : constant Name_Id := N + 685;\n+   Name_Language_Kind                  : constant Name_Id := N + 686;\n+   Name_Language_Processing            : constant Name_Id := N + 687;\n+   Name_Languages                      : constant Name_Id := N + 688;\n+   Name_Library                        : constant Name_Id := N + 689;\n+   Name_Library_Ali_Dir                : constant Name_Id := N + 690;\n+   Name_Library_Auto_Init              : constant Name_Id := N + 691;\n+   Name_Library_Auto_Init_Supported    : constant Name_Id := N + 692;\n+   Name_Library_Builder                : constant Name_Id := N + 693;\n+   Name_Library_Dir                    : constant Name_Id := N + 694;\n+   Name_Library_GCC                    : constant Name_Id := N + 695;\n+   Name_Library_Interface              : constant Name_Id := N + 696;\n+   Name_Library_Kind                   : constant Name_Id := N + 697;\n+   Name_Library_Name                   : constant Name_Id := N + 698;\n+   Name_Library_Major_Minor_Id_Supported : constant Name_Id := N + 699;\n+   Name_Library_Options                : constant Name_Id := N + 700;\n+   Name_Library_Partial_Linker         : constant Name_Id := N + 701;\n+   Name_Library_Reference_Symbol_File  : constant Name_Id := N + 702;\n+   Name_Library_Src_Dir                : constant Name_Id := N + 703;\n+   Name_Library_Support                : constant Name_Id := N + 704;\n+   Name_Library_Symbol_File            : constant Name_Id := N + 705;\n+   Name_Library_Symbol_Policy          : constant Name_Id := N + 706;\n+   Name_Library_Version                : constant Name_Id := N + 707;\n+   Name_Library_Version_Switches       : constant Name_Id := N + 708;\n+   Name_Linker                         : constant Name_Id := N + 709;\n+   Name_Linker_Executable_Option       : constant Name_Id := N + 710;\n+   Name_Linker_Lib_Dir_Option          : constant Name_Id := N + 711;\n+   Name_Linker_Lib_Name_Option         : constant Name_Id := N + 712;\n+   Name_Local_Config_File              : constant Name_Id := N + 713;\n+   Name_Local_Configuration_Pragmas    : constant Name_Id := N + 714;\n+   Name_Locally_Removed_Files          : constant Name_Id := N + 715;\n+   Name_Map_File_Option                : constant Name_Id := N + 716;\n+   Name_Mapping_File_Switches          : constant Name_Id := N + 717;\n+   Name_Mapping_Spec_Suffix            : constant Name_Id := N + 718;\n+   Name_Mapping_Body_Suffix            : constant Name_Id := N + 719;\n+   Name_Metrics                        : constant Name_Id := N + 720;\n+   Name_Naming                         : constant Name_Id := N + 721;\n+   Name_Object_Generated               : constant Name_Id := N + 722;\n+   Name_Objects_Linked                 : constant Name_Id := N + 723;\n+   Name_Objects_Path                   : constant Name_Id := N + 724;\n+   Name_Objects_Path_File              : constant Name_Id := N + 725;\n+   Name_Object_Dir                     : constant Name_Id := N + 726;\n+   Name_Path_Syntax                    : constant Name_Id := N + 727;\n+   Name_Pic_Option                     : constant Name_Id := N + 728;\n+   Name_Pretty_Printer                 : constant Name_Id := N + 729;\n+   Name_Prefix                         : constant Name_Id := N + 730;\n+   Name_Project                        : constant Name_Id := N + 731;\n+   Name_Roots                          : constant Name_Id := N + 732;\n+   Name_Required_Switches              : constant Name_Id := N + 733;\n+   Name_Run_Path_Option                : constant Name_Id := N + 734;\n+   Name_Runtime_Project                : constant Name_Id := N + 735;\n+   Name_Shared_Library_Minimum_Switches : constant Name_Id := N + 736;\n+   Name_Shared_Library_Prefix          : constant Name_Id := N + 737;\n+   Name_Shared_Library_Suffix          : constant Name_Id := N + 738;\n+   Name_Separate_Suffix                : constant Name_Id := N + 739;\n+   Name_Source_Dirs                    : constant Name_Id := N + 740;\n+   Name_Source_Files                   : constant Name_Id := N + 741;\n+   Name_Source_List_File               : constant Name_Id := N + 742;\n+   Name_Spec                           : constant Name_Id := N + 743;\n+   Name_Spec_Suffix                    : constant Name_Id := N + 744;\n+   Name_Specification                  : constant Name_Id := N + 745;\n+   Name_Specification_Exceptions       : constant Name_Id := N + 746;\n+   Name_Specification_Suffix           : constant Name_Id := N + 747;\n+   Name_Stack                          : constant Name_Id := N + 748;\n+   Name_Switches                       : constant Name_Id := N + 749;\n+   Name_Symbolic_Link_Supported        : constant Name_Id := N + 750;\n+   Name_Sync                           : constant Name_Id := N + 751;\n+   Name_Synchronize                    : constant Name_Id := N + 752;\n+   Name_Toolchain_Description          : constant Name_Id := N + 753;\n+   Name_Toolchain_Version              : constant Name_Id := N + 754;\n+   Name_Runtime_Library_Dir            : constant Name_Id := N + 755;\n \n    --  Other miscellaneous names used in front end\n \n-   Name_Unaligned_Valid                : constant Name_Id := N + 755;\n+   Name_Unaligned_Valid                : constant Name_Id := N + 756;\n \n    --  Ada 2005 reserved words\n \n-   First_2005_Reserved_Word            : constant Name_Id := N + 756;\n-   Name_Interface                      : constant Name_Id := N + 756;\n-   Name_Overriding                     : constant Name_Id := N + 757;\n-   Name_Synchronized                   : constant Name_Id := N + 758;\n-   Last_2005_Reserved_Word             : constant Name_Id := N + 758;\n+   First_2005_Reserved_Word            : constant Name_Id := N + 757;\n+   Name_Interface                      : constant Name_Id := N + 757;\n+   Name_Overriding                     : constant Name_Id := N + 758;\n+   Name_Synchronized                   : constant Name_Id := N + 759;\n+   Last_2005_Reserved_Word             : constant Name_Id := N + 759;\n \n    subtype Ada_2005_Reserved_Words is\n      Name_Id range First_2005_Reserved_Word .. Last_2005_Reserved_Word;\n \n    --  Mark last defined name for consistency check in Snames body\n \n-   Last_Predefined_Name                : constant Name_Id := N + 758;\n+   Last_Predefined_Name                : constant Name_Id := N + 759;\n \n    ---------------------------------------\n    -- Subtypes Defining Name Categories --"}]}