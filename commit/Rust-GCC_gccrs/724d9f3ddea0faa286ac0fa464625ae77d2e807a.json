{"sha": "724d9f3ddea0faa286ac0fa464625ae77d2e807a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzI0ZDlmM2RkZWEwZmFhMjg2YWMwZmE0NjQ2MjVhZTc3ZDJlODA3YQ==", "commit": {"author": {"name": "David J. MacKenzie", "email": "djm@gnu.org", "date": "1992-03-04T19:21:29Z"}, "committer": {"name": "David J. MacKenzie", "email": "djm@gnu.org", "date": "1992-03-04T19:21:29Z"}, "message": "Initial revision\n\nFrom-SVN: r392", "tree": {"sha": "80712627ff093474f4b0c7ed59e5f94f14345d17", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/80712627ff093474f4b0c7ed59e5f94f14345d17"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/724d9f3ddea0faa286ac0fa464625ae77d2e807a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/724d9f3ddea0faa286ac0fa464625ae77d2e807a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/724d9f3ddea0faa286ac0fa464625ae77d2e807a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/724d9f3ddea0faa286ac0fa464625ae77d2e807a/comments", "author": null, "committer": null, "parents": [{"sha": "1e12b4c51460bd755c66f537ed05774a3828794c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1e12b4c51460bd755c66f537ed05774a3828794c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1e12b4c51460bd755c66f537ed05774a3828794c"}], "stats": {"total": 844, "additions": 844, "deletions": 0}, "files": [{"sha": "77454e2accf2ba1bd9a3d570bbed22a1c2dc9fa5", "filename": "gcc/fixinc.svr4", "status": "added", "additions": 844, "deletions": 0, "changes": 844, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/724d9f3ddea0faa286ac0fa464625ae77d2e807a/gcc%2Ffixinc.svr4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/724d9f3ddea0faa286ac0fa464625ae77d2e807a/gcc%2Ffixinc.svr4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffixinc.svr4?ref=724d9f3ddea0faa286ac0fa464625ae77d2e807a", "patch": "@@ -0,0 +1,844 @@\n+#! /bin/sh\n+#\n+#   fixinc.svr4  --  Install modified versions of certain ANSI-incompatible\n+#   native System V Release 4 system include files.\n+#\n+#   Written by Ron Guilmette (rfg@ncd.com).\n+#\n+# This file is part of GNU CC.\n+# \n+# GNU CC is free software; you can redistribute it and/or modify\n+# it under the terms of the GNU General Public License as published by\n+# the Free Software Foundation; either version 2, or (at your option)\n+# any later version.\n+# \n+# GNU CC is distributed in the hope that it will be useful,\n+# but WITHOUT ANY WARRANTY; without even the implied warranty of\n+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+# GNU General Public License for more details.\n+# \n+# You should have received a copy of the GNU General Public License\n+# along with GNU CC; see the file COPYING.  If not, write to\n+# the Free Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA.\n+#\n+#\tThis script munges the native include files provided with System V\n+#\tRelease 4 systems so as to remove things which are violations of the\n+#\tANSI C standard.  Once munged, the resulting new system include files\n+#\tare placed in a directory that GNU C will search *before* searching\n+#\tthe /usr/include directory. This script should work properly for most\n+#\tSystem V Release 4 systems.  For other types of systems, you should\n+#\tuse the `fixincludes' script instead.\n+#\n+#\tSee README-fixinc for more information.\n+\n+# Directory containing the original header files.\n+INPUT=${2-${INPUT-/usr/include}}\n+\n+# Fail if no arg to specify a directory for the output.\n+if [ x$1 = x ]\n+then echo fixincludes: no output directory specified\n+exit 1\n+fi\n+\n+# Directory in which to store the results.\n+LIB=${1-${LIB-/usr/local/lib/gcc-include}}\n+\n+# Make sure it exists.\n+if [ ! -d $LIB ]; then\n+  mkdir $LIB || exit 1\n+fi\n+\n+ORIG_DIR=`pwd`\n+\n+# Make LIB absolute.\n+cd $LIB; LIB=`pwd`\n+\n+# This prevents /bin/ex from failing if the current terminal type is\n+# unrecognizable.\n+TERM=unknown\n+export TERM\n+\n+echo 'Building fixincludes in ' ${LIB}\n+\n+# Determine whether this filesystem has symbolic links.\n+if ln -s X $LIB/ShouldNotExist 2>/dev/null; then\n+  rm -f $LIB/ShouldNotExist\n+  LINKS=true\n+else\n+  LINKS=false\n+fi\n+\n+echo 'Making directories:'\n+cd ${INPUT}\n+if $LINKS; then\n+  files=`ls -LR | sed -n s/:$//p`\n+else\n+  files=`find . -type d -print | sed '/^.$/d'`\n+fi\n+for file in $files; do\n+  rm -rf $LIB/$file\n+  if [ ! -d $LIB/$file ]\n+  then mkdir $LIB/$file\n+  fi\n+done\n+\n+# treetops gets an alternating list\n+# of old directories to copy\n+# and the new directories to copy to.\n+treetops=\"${INPUT} ${LIB}\"\n+\n+if $LINKS; then\n+  echo 'Making internal symbolic directory links'\n+  for file in $files; do\n+    dest=`ls -ld $file | sed -n 's/.*-> //p'`\n+    if [ \"$dest\" ]; then    \n+      cwd=`pwd`\n+      # In case $dest is relative, get to $file's dir first.\n+      cd ${INPUT}\n+      cd `echo ./$file | sed -n 's&[^/]*$&&p'`\n+      # Check that the target directory exists.\n+      # Redirections changed to avoid bug in sh on Ultrix.\n+      (cd $dest) > /dev/null 2>&1\n+      if [ $? = 0 ]; then\n+\tcd $dest\n+\t# X gets the dir that the link actually leads to.\n+\tx=`pwd`\n+\t# If link leads back into ${INPUT},\n+\t# make a similar link here.\n+\tif expr $x : \"${INPUT}/.*\" > /dev/null; then\n+\t  # Y gets the actual target dir name, relative to ${INPUT}.\n+\t  y=`echo $x | sed -n \"s&${INPUT}/&&p\"`\n+\t  echo $file '->' $y ': Making link'\n+\t  rm -fr ${LIB}/$file > /dev/null 2>&1\n+\t  ln -s ${LIB}/$y ${LIB}/$file > /dev/null 2>&1\n+\telse\n+\t  # If the link is to outside ${INPUT},\n+\t  # treat this directory as if it actually contained the files.\n+# This line used to have $dest instead of $x.\n+# $dest seemed to be wrong for links found in subdirectories\n+# of ${INPUT}.  Does this change break anything?\n+\t  treetops=\"$treetops $x ${LIB}/$file\"\n+\tfi\n+      fi\n+      cd $cwd\n+    fi\n+  done\n+fi\n+\n+set - $treetops\n+while [ $# != 0 ]; do\n+  # $1 is an old directory to copy, and $2 is the new directory to copy to.\n+  echo \"Finding header files in $1:\"\n+  cd ${INPUT}\n+  cd $1\n+  files=`find . -name '*.h' -type f -print`\n+  echo 'Checking header files:'\n+  for file in $files; do\n+      echo Fixing $file\n+      if [ -r $file ]; then\n+\tcp $file $2/$file >/dev/null 2>&1 || echo \"Can't copy $file\"\n+\tchmod +w $2/$file\n+\n+# The following have been removed from the sed command below\n+# because it is more useful to leave these things in.\n+# The only reason to remove them was for -pedantic,\n+# which isn't much of a reason. -- rms.\n+#\t  /^[ \t]*#[ \t]*ident/d\n+\n+# The change of u_char, etc, to u_int\n+# applies to bit fields.\n+\tsed -e '\n+\t  s%^\\([ \t]*#[ \t]*endif[ \t]*\\)\\([^/ \t].*\\)$%\\1/* \\2 */%\n+\t  s%^\\([ \t]*#[ \t]*else[ \t]*\\)\\([^/ \t].*\\)$%\\1/* \\2 */%\n+  \t  s/#lint(on)/defined(lint)/g\n+  \t  s/#lint(off)/!defined(lint)/g\n+  \t  s/#machine(\\([^)]*\\))/defined(__\\1__)/g\n+  \t  s/#system(\\([^)]*\\))/defined(__\\1__)/g\n+  \t  s/#cpu(\\([^)]*\\))/defined(__\\1__)/g\n+\t  /#[a-z]*if.*[\t (]m68k/\t\ts/\\([^_]\\)m68k/\\1__m68k__/g\n+\t  /#[a-z]*if.*[\t (]__i386/\ts/__i386/__i386__/g\n+\t  /#[a-z]*if.*[\t (]i386/\t\ts/\\([^_]\\)i386/\\1__i386__/g\n+\t  /#[a-z]*if.*[\t (]sparc/\ts/\\([^_]\\)sparc/\\1__sparc__/g\n+\t  /#[a-z]*if.*[\t (]mc68000/\ts/\\([^_]\\)mc68000/\\1__mc68000__/g\n+\t  /#[a-z]*if.*[\t (]vax/\t\ts/\\([^_]\\)vax/\\1__vax__/g\n+\t  /#[a-z]*if.*[\t (]sun/\t\ts/\\([^_]\\)\\(sun[a-z0-9]*\\)\\([^a-z0-9_]\\)/\\1__\\2__\\3/g\n+\t  /#[a-z]*if.*[\t (]sun/\t\ts/\\([^_]\\)\\(sun[a-z0-9]*\\)$/\\1__\\2__/g\n+\t  /#[a-z]*if.*[\t (]ns32000/\ts/\\([^_]\\)ns32000/\\1__ns32000__/g\n+\t  /#[a-z]*if.*[\t (]pyr/\t\ts/\\([^_]\\)pyr/\\1__pyr__/g\n+\t  /#[a-z]*if.*[\t (]is68k/\ts/\\([^_]\\)is68k/\\1__is68k__/g\n+\t  s/u_char\\([ \t][ \t]*[a-zA-Z0-9_][a-zA-Z0-9_]*[ \t]*:[ \t]*[0-9][0-9]*\\)/u_int\\1/\n+\t  s/u_short\\([ \t][ \t]*[a-zA-Z0-9_][a-zA-Z0-9_]*[ \t]*:[ \t]*[0-9][0-9]*\\)/u_int\\1/\n+\t  s/ushort\\([ \t][ \t]*[a-zA-Z0-9_][a-zA-Z0-9_]*[ \t]*:[ \t]*[0-9][0-9]*\\)/u_int\\1/\n+\t  s/evcm_t\\([ \t][ \t]*[a-zA-Z0-9_][a-zA-Z0-9_]*[ \t]*:[ \t]*[0-9][0-9]*\\)/u_int\\1/\n+\t  s/Pbyte\\([ \t][ \t]*[a-zA-Z0-9_][a-zA-Z0-9_]*[ \t]*:[ \t]*SEQSIZ\\)/unsigned int\\1/\n+\t  s/__STDC__ == 0/!defined (__STRICT_ANSI__)/g\n+\t  s/__STDC__ != 0/defined (__STRICT_ANSI__)/g\n+\t  s/__STDC__ - 0 == 0/!defined (__STRICT_ANSI__)/g\n+\t' $2/$file > $2/$file.sed\n+\tmv $2/$file.sed $2/$file\n+\tif cmp $file $2/$file >/dev/null 2>&1; then\n+\t   echo Deleting $2/$file\\; no fixes were needed.\n+\t   rm $2/$file\n+\tfi\n+      fi\n+  done\n+  shift; shift\n+done\n+\n+# Fix first broken decl of getcwd present on some svr4 systems.\n+\n+file=stdlib.h\n+base=`basename $file`\n+if [ -r ${LIB}/$file ]; then\n+  file_to_fix=${LIB}/$file\n+else\n+  if [ -r ${INPUT}/$file ]; then\n+    file_to_fix=${INPUT}/$file\n+  else\n+    file_to_fix=\"\"\n+  fi\n+fi\n+if [ \\! -z \"$file_to_fix\" ]; then\n+  echo Checking $file_to_fix\n+  sed -e 's/getcwd(char \\*, int)/getcwd(char *, size_t)/' $file_to_fix > /tmp/$base\n+  if cmp $file_to_fix /tmp/$base >/dev/null 2>&1; then \\\n+    echo No change needed in $file_to_fix\n+  else\n+    echo Fixed $file_to_fix\n+    rm -f ${LIB}/$file\n+    cp /tmp/$base ${LIB}/$file\n+  fi\n+  rm -f /tmp/$base\n+fi\n+\n+# Fix second broken decl of getcwd present on some svr4 systems.  Also\n+# fix the incorrect decl of profil present on some svr4 systems.\n+\n+file=unistd.h\n+base=`basename $file`\n+if [ -r ${LIB}/$file ]; then\n+  file_to_fix=${LIB}/$file\n+else\n+  if [ -r ${INPUT}/$file ]; then\n+    file_to_fix=${INPUT}/$file\n+  else\n+    file_to_fix=\"\"\n+  fi\n+fi\n+if [ \\! -z \"$file_to_fix\" ]; then\n+  echo Checking $file_to_fix\n+  sed -e 's/getcwd(char \\*, int)/getcwd(char *, size_t)/' $file_to_fix \\\n+    | sed -e 's/profil(unsigned short \\*, unsigned int, unsigned int, unsigned int)/profil(unsigned short *, size_t, int, unsigned)/' > /tmp/$base\n+  if cmp $file_to_fix /tmp/$base >/dev/null 2>&1; then \\\n+    echo No change needed in $file_to_fix\n+  else\n+    echo Fixed $file_to_fix\n+    rm -f ${LIB}/$file\n+    cp /tmp/$base ${LIB}/$file\n+  fi\n+  rm -f /tmp/$base\n+fi\n+\n+# Fix the definition of NULL in <sys/param.h> so that it is conditional\n+# and so that it is correct for both C and C++.\n+\n+file=sys/param.h\n+base=`basename $file`\n+if [ -r ${LIB}/$file ]; then\n+  file_to_fix=${LIB}/$file\n+else\n+  if [ -r ${INPUT}/$file ]; then\n+    file_to_fix=${INPUT}/$file\n+  else\n+    file_to_fix=\"\"\n+  fi\n+fi\n+if [ \\! -z \"$file_to_fix\" ]; then\n+  echo Checking $file_to_fix\n+  cp $file_to_fix /tmp/$base\n+  chmod +w /tmp/$base\n+  ex /tmp/$base <<EOF\n+  /^#define[ \t]*NULL[ \t]*0$/c\n+#ifndef NULL\n+#ifdef __cplusplus\n+#define __NULL_TYPE\n+#else /* !defined(__cplusplus) */\n+#define __NULL_TYPE (void *)\n+#endif /* !defined(__cplusplus) */\n+#define NULL (__NULL_TYPE 0)\n+#endif /* !defined(NULL) */\n+.\n+  wq\n+EOF\n+  if cmp $file_to_fix /tmp/$base >/dev/null 2>&1; then \\\n+    echo No change needed in $file_to_fix\n+  else\n+    echo Fixed $file_to_fix\n+    rm -f ${LIB}/$file\n+    cp /tmp/$base ${LIB}/$file\n+  fi\n+  rm -f /tmp/$base\n+fi\n+\n+# Likewise fix the definition of NULL in <stdio.h> so that it is conditional\n+# and so that it is correct for both C and C++.\n+\n+file=stdio.h\n+base=`basename $file`\n+if [ -r ${LIB}/$file ]; then\n+  file_to_fix=${LIB}/$file\n+else\n+  if [ -r ${INPUT}/$file ]; then\n+    file_to_fix=${INPUT}/$file\n+  else\n+    file_to_fix=\"\"\n+  fi\n+fi\n+if [ \\! -z \"$file_to_fix\" ]; then\n+  echo Checking $file_to_fix\n+  cp $file_to_fix /tmp/$base\n+  chmod +w /tmp/$base\n+  ex /tmp/$base <<EOF\n+  /^#define[ \t]*NULL[ \t]*0$/c\n+#ifdef __cplusplus\n+#define __NULL_TYPE\n+#else /* !defined(__cplusplus) */\n+#define __NULL_TYPE (void *)\n+#endif /* !defined(__cplusplus) */\n+#define NULL (__NULL_TYPE 0)\n+.\n+  wq\n+EOF\n+  if cmp $file_to_fix /tmp/$base >/dev/null 2>&1; then \\\n+    echo No change needed in $file_to_fix\n+  else\n+    echo Fixed $file_to_fix\n+    rm -f ${LIB}/$file\n+    cp /tmp/$base ${LIB}/$file\n+  fi\n+  rm -f /tmp/$base\n+fi\n+\n+# Add some missing declarations to <sys/mman.h>.\n+\n+file=sys/mman.h\n+base=`basename $file`\n+if [ -r ${LIB}/$file ]; then\n+  file_to_fix=${LIB}/$file\n+else\n+  if [ -r ${INPUT}/$file ]; then\n+    file_to_fix=${INPUT}/$file\n+  else\n+    file_to_fix=\"\"\n+  fi\n+fi\n+if [ \\! -z \"$file_to_fix\" ]; then\n+  echo Checking $file_to_fix\n+  cp $file_to_fix /tmp/$base\n+  chmod +w /tmp/$base\n+  ex /tmp/$base <<EOF\n+  /^extern caddr_t mmap();$/c\n+#ifdef __STDC__\n+extern caddr_t mmap (caddr_t addr, size_t len, int prot, int flags,\n+                     int fd, off_t off);\n+#else /* !defined(__STDC__) */\n+extern caddr_t mmap ();\n+#endif /* !defined(__STDC__) */\n+.\n+  wq\n+EOF\n+  if cmp $file_to_fix /tmp/$base >/dev/null 2>&1; then \\\n+    echo No changed needed in $file_to_fix\n+  else\n+    echo Fixed $file_to_fix\n+    rm -f ${LIB}/$file\n+    cp /tmp/$base ${LIB}/$file\n+  fi\n+  rm -f /tmp/$base\n+fi\n+\n+# Fix declarations of `ftw' and `nftw' in <ftw.h>.\n+\n+file=ftw.h\n+base=`basename $file`\n+if [ -r ${LIB}/$file ]; then\n+  file_to_fix=${LIB}/$file\n+else\n+  if [ -r ${INPUT}/$file ]; then\n+    file_to_fix=${INPUT}/$file\n+  else\n+    file_to_fix=\"\"\n+  fi\n+fi\n+if [ \\! -z \"$file_to_fix\" ]; then\n+  echo Checking $file_to_fix\n+  cp $file_to_fix /tmp/$base\n+  chmod +w /tmp/$base\n+  ex /tmp/$base <<EOF\n+  /^extern int ftw(const/c\n+#if !defined(_STYPES)\n+static\n+#else\n+extern\n+#endif\n+  int ftw(const char *, int (*)(const char *, const struct stat *, int), int);\n+.\n+  /^extern int nftw/c\n+#if defined(_STYPES)\n+static\n+#else\n+extern\n+#endif\n+  int nftw(const char *, int (*)(const char *, const struct stat *, int, struct FTW *),int, int);\n+.\n+  /^extern int ftw(),/c\n+#if !defined(_STYPES)\n+static\n+#else\n+extern\n+#endif\n+  int ftw();\n+#if defined(_STYPES)\n+static\n+#else\n+extern\n+#endif\n+  int nftw();\n+.\n+  wq\n+EOF\n+  if cmp $file_to_fix /tmp/$base >/dev/null 2>&1; then \\\n+    echo No change needed in $file_to_fix\n+  else\n+    echo Fixed $file_to_fix\n+    rm -f ${LIB}/$file\n+    cp /tmp/$base ${LIB}/$file\n+  fi\n+  rm -f /tmp/$base\n+fi\n+\n+# Add a `static' declaration of `getrnge' into <regexp.h>.\n+\n+file=regexp.h\n+base=`basename $file`\n+if [ -r ${LIB}/$file ]; then\n+  file_to_fix=${LIB}/$file\n+else\n+  if [ -r ${INPUT}/$file ]; then\n+    file_to_fix=${INPUT}/$file\n+  else\n+    file_to_fix=\"\"\n+  fi\n+fi\n+if [ \\! -z \"$file_to_fix\" ]; then\n+  echo Checking $file_to_fix\n+  cp $file_to_fix /tmp/$base\n+  chmod +w /tmp/$base\n+  ex /tmp/$base <<EOF\n+  /^static int[ \t]*size;/c\n+static int\tsize ;\n+\n+static int getrnge ();\n+.\n+  wq\n+EOF\n+  if cmp $file_to_fix /tmp/$base >/dev/null 2>&1; then \\\n+    echo No change needed in $file_to_fix\n+  else\n+    echo Fixed $file_to_fix\n+    rm -f ${LIB}/$file\n+    cp /tmp/$base ${LIB}/$file\n+  fi\n+  rm -f /tmp/$base\n+fi\n+\n+# Add a #define of _SIGACTION_ into <sys/signal.h>.\n+\n+file=sys/signal.h\n+base=`basename $file`\n+if [ -r ${LIB}/$file ]; then\n+  file_to_fix=${LIB}/$file\n+else\n+  if [ -r ${INPUT}/$file ]; then\n+    file_to_fix=${INPUT}/$file\n+  else\n+    file_to_fix=\"\"\n+  fi\n+fi\n+if [ \\! -z \"$file_to_fix\" ]; then\n+  echo Checking $file_to_fix\n+  cp $file_to_fix /tmp/$base\n+  chmod +w /tmp/$base\n+  ex /tmp/$base <<EOF\n+  /^struct sigaction {/c\n+#define _SIGACTION_\n+struct  sigaction  {\n+.\n+  wq\n+EOF\n+  if cmp $file_to_fix /tmp/$base >/dev/null 2>&1; then \\\n+    echo No change needed in $file_to_fix\n+  else\n+    echo Fixed $file_to_fix\n+    rm -f ${LIB}/$file\n+    cp /tmp/$base ${LIB}/$file\n+  fi\n+  rm -f /tmp/$base\n+fi\n+\n+# Fix declarations of `makedev', `major', and `minor' in <sys/mkdev.h>.\n+\n+file=sys/mkdev.h\n+base=`basename $file`\n+if [ -r ${LIB}/$file ]; then\n+  file_to_fix=${LIB}/$file\n+else\n+  if [ -r ${INPUT}/$file ]; then\n+    file_to_fix=${INPUT}/$file\n+  else\n+    file_to_fix=\"\"\n+  fi\n+fi\n+if [ \\! -z \"$file_to_fix\" ]; then\n+  echo Checking $file_to_fix\n+  cp $file_to_fix /tmp/$base\n+  chmod +w /tmp/$base\n+  ex /tmp/$base <<EOF\n+  /^dev_t makedev(const/c\n+static dev_t makedev(const major_t, const minor_t);\n+.\n+  /^dev_t makedev()/c\n+static dev_t makedev();\n+.\n+  /^major_t major(const/c\n+static major_t major(const dev_t);\n+.\n+  /^major_t major()/c\n+static major_t major();\n+.\n+  /^minor_t minor(const/c\n+static minor_t minor(const dev_t);\n+.\n+  /^minor_t minor()/c\n+static minor_t minor();\n+.\n+  wq\n+EOF\n+  if cmp $file_to_fix /tmp/$base >/dev/null 2>&1; then \\\n+    echo No change needed in $file_to_fix\n+  else\n+    echo Fixed $file_to_fix\n+    rm -f ${LIB}/$file\n+    cp /tmp/$base ${LIB}/$file\n+  fi\n+  rm -f /tmp/$base\n+fi\n+\n+# Fix reference to NMSZ in <sys/adv.h>.\n+\n+file=sys/adv.h\n+base=`basename $file`\n+if [ -r ${LIB}/$file ]; then\n+  file_to_fix=${LIB}/$file\n+else\n+  if [ -r ${INPUT}/$file ]; then\n+    file_to_fix=${INPUT}/$file\n+  else\n+    file_to_fix=\"\"\n+  fi\n+fi\n+if [ \\! -z \"$file_to_fix\" ]; then\n+  echo Checking $file_to_fix\n+  sed 's/\\[NMSZ\\]/\\[RFS_NMSZ\\]/g' $file_to_fix > /tmp/$base\n+  if cmp $file_to_fix /tmp/$base >/dev/null 2>&1; then \\\n+    echo No change needed in $file_to_fix\n+  else\n+    echo Fixed $file_to_fix\n+    rm -f ${LIB}/$file\n+    cp /tmp/$base ${LIB}/$file\n+  fi\n+  rm -f /tmp/$base\n+fi\n+\n+# Fix reference to NC_NPI_RAW in <sys/netcspace.h>.  Also fix types of\n+# array initializers.\n+\n+file=sys/netcspace.h\n+base=`basename $file`\n+if [ -r ${LIB}/$file ]; then\n+  file_to_fix=${LIB}/$file\n+else\n+  if [ -r ${INPUT}/$file ]; then\n+    file_to_fix=${INPUT}/$file\n+  else\n+    file_to_fix=\"\"\n+  fi\n+fi\n+if [ \\! -z \"$file_to_fix\" ]; then\n+  echo Checking $file_to_fix\n+  sed 's/NC_NPI_RAW/NC_TPI_RAW/g' $file_to_fix \\\n+    | sed 's/NC_/(unsigned long) NC_/' > /tmp/$base\n+  if cmp $file_to_fix /tmp/$base >/dev/null 2>&1; then \\\n+    echo No change needed in $file_to_fix\n+  else\n+    echo Fixed $file_to_fix\n+    rm -f ${LIB}/$file\n+    cp /tmp/$base ${LIB}/$file\n+  fi\n+  rm -f /tmp/$base\n+fi\n+\n+# Conditionalize all of <fs/rfs/rf_cache.h> on _KERNEL being defined.\n+\n+file=fs/rfs/rf_cache.h\n+base=`basename $file`\n+if [ -r ${LIB}/$file ]; then\n+  file_to_fix=${LIB}/$file\n+else\n+  if [ -r ${INPUT}/$file ]; then\n+    file_to_fix=${INPUT}/$file\n+  else\n+    file_to_fix=\"\"\n+  fi\n+fi\n+if [ \\! -z \"$file_to_fix\" ]; then\n+  echo Checking $file_to_fix\n+  if grep _KERNEL $file_to_fix > /dev/null; then\n+    echo No change needed in $file_to_fix\n+  else\n+    echo '#ifdef _KERNEL' > /tmp/$base\n+    cat $file_to_fix >> /tmp/$base\n+    echo '#endif /* defined(_KERNEL) */' >> /tmp/$base\n+    echo Fixed $file_to_fix\n+    rm -f ${LIB}/$file\n+    cp /tmp/$base ${LIB}/$file\n+    rm -f /tmp/$base\n+  fi\n+fi\n+\n+# Conditionalize all of <sys/erec.h> on _KERNEL being defined.\n+\n+file=sys/erec.h\n+base=`basename $file`\n+if [ -r ${LIB}/$file ]; then\n+  file_to_fix=${LIB}/$file\n+else\n+  if [ -r ${INPUT}/$file ]; then\n+    file_to_fix=${INPUT}/$file\n+  else\n+    file_to_fix=\"\"\n+  fi\n+fi\n+if [ \\! -z \"$file_to_fix\" ]; then\n+  echo Checking $file_to_fix\n+  if grep _KERNEL $file_to_fix > /dev/null; then\n+    echo No change needed in $file_to_fix\n+  else\n+    echo '#ifdef _KERNEL' > /tmp/$base\n+    cat $file_to_fix >> /tmp/$base\n+    echo '#endif /* defined(_KERNEL) */' >> /tmp/$base\n+    echo Fixed $file_to_fix\n+    rm -f ${LIB}/$file\n+    cp /tmp/$base ${LIB}/$file\n+    rm -f /tmp/$base\n+  fi\n+fi\n+\n+# Conditionalize all of <sys/err.h> on _KERNEL being defined.\n+\n+file=sys/err.h\n+base=`basename $file`\n+if [ -r ${LIB}/$file ]; then\n+  file_to_fix=${LIB}/$file\n+else\n+  if [ -r ${INPUT}/$file ]; then\n+    file_to_fix=${INPUT}/$file\n+  else\n+    file_to_fix=\"\"\n+  fi\n+fi\n+if [ \\! -z \"$file_to_fix\" ]; then\n+  echo Checking $file_to_fix\n+  if grep _KERNEL $file_to_fix > /dev/null; then\n+    echo No change needed in $file_to_fix\n+  else\n+    echo '#ifdef _KERNEL' > /tmp/$base\n+    cat $file_to_fix >> /tmp/$base\n+    echo '#endif /* defined(_KERNEL) */' >> /tmp/$base\n+    echo Fixed $file_to_fix\n+    rm -f ${LIB}/$file\n+    cp /tmp/$base ${LIB}/$file\n+    rm -f /tmp/$base\n+  fi\n+fi\n+\n+# Conditionalize all of <sys/char.h> on _KERNEL being defined.\n+\n+file=sys/char.h\n+base=`basename $file`\n+if [ -r ${LIB}/$file ]; then\n+  file_to_fix=${LIB}/$file\n+else\n+  if [ -r ${INPUT}/$file ]; then\n+    file_to_fix=${INPUT}/$file\n+  else\n+    file_to_fix=\"\"\n+  fi\n+fi\n+if [ \\! -z \"$file_to_fix\" ]; then\n+  echo Checking $file_to_fix\n+  if grep _KERNEL $file_to_fix > /dev/null; then\n+    echo No change needed in $file_to_fix\n+  else\n+    echo '#ifdef _KERNEL' > /tmp/$base\n+    cat $file_to_fix >> /tmp/$base\n+    echo '#endif /* defined(_KERNEL) */' >> /tmp/$base\n+    echo Fixed $file_to_fix\n+    rm -f ${LIB}/$file\n+    cp /tmp/$base ${LIB}/$file\n+    rm -f /tmp/$base\n+  fi\n+fi\n+\n+# Conditionalize all of <sys/getpages.h> on _KERNEL being defined.\n+\n+file=sys/getpages.h\n+base=`basename $file`\n+if [ -r ${LIB}/$file ]; then\n+  file_to_fix=${LIB}/$file\n+else\n+  if [ -r ${INPUT}/$file ]; then\n+    file_to_fix=${INPUT}/$file\n+  else\n+    file_to_fix=\"\"\n+  fi\n+fi\n+if [ \\! -z \"$file_to_fix\" ]; then\n+  echo Checking $file_to_fix\n+  if grep _KERNEL $file_to_fix > /dev/null; then\n+    echo No change needed in $file_to_fix\n+  else\n+    echo '#ifdef _KERNEL' > /tmp/$base\n+    cat $file_to_fix >> /tmp/$base\n+    echo '#endif /* defined(_KERNEL) */' >> /tmp/$base\n+    echo Fixed $file_to_fix\n+    rm -f ${LIB}/$file\n+    cp /tmp/$base ${LIB}/$file\n+    rm -f /tmp/$base\n+  fi\n+fi\n+\n+# Conditionalize all of <sys/map.h> on _KERNEL being defined.\n+\n+file=sys/map.h\n+base=`basename $file`\n+if [ -r ${LIB}/$file ]; then\n+  file_to_fix=${LIB}/$file\n+else\n+  if [ -r ${INPUT}/$file ]; then\n+    file_to_fix=${INPUT}/$file\n+  else\n+    file_to_fix=\"\"\n+  fi\n+fi\n+if [ \\! -z \"$file_to_fix\" ]; then\n+  echo Checking $file_to_fix\n+  if grep _KERNEL $file_to_fix > /dev/null; then\n+    echo No change needed in $file_to_fix\n+  else\n+    echo '#ifdef _KERNEL' > /tmp/$base\n+    cat $file_to_fix >> /tmp/$base\n+    echo '#endif /* defined(_KERNEL) */' >> /tmp/$base\n+    echo Fixed $file_to_fix\n+    rm -f ${LIB}/$file\n+    cp /tmp/$base ${LIB}/$file\n+    rm -f /tmp/$base\n+  fi\n+fi\n+\n+# Conditionalize all of <sys/cmn_err.h> on _KERNEL being defined.\n+\n+file=sys/cmn_err.h\n+base=`basename $file`\n+if [ -r ${LIB}/$file ]; then\n+  file_to_fix=${LIB}/$file\n+else\n+  if [ -r ${INPUT}/$file ]; then\n+    file_to_fix=${INPUT}/$file\n+  else\n+    file_to_fix=\"\"\n+  fi\n+fi\n+if [ \\! -z \"$file_to_fix\" ]; then\n+  echo Checking $file_to_fix\n+  if grep _KERNEL $file_to_fix > /dev/null; then\n+    echo No change needed in $file_to_fix\n+  else\n+    echo '#ifdef _KERNEL' > /tmp/$base\n+    cat $file_to_fix >> /tmp/$base\n+    echo '#endif /* defined(_KERNEL) */' >> /tmp/$base\n+    echo Fixed $file_to_fix\n+    rm -f ${LIB}/$file\n+    cp /tmp/$base ${LIB}/$file\n+    rm -f /tmp/$base\n+  fi\n+fi\n+\n+# Conditionalize all of <sys/kdebugger.h> on _KERNEL being defined.\n+\n+file=sys/kdebugger.h\n+base=`basename $file`\n+if [ -r ${LIB}/$file ]; then\n+  file_to_fix=${LIB}/$file\n+else\n+  if [ -r ${INPUT}/$file ]; then\n+    file_to_fix=${INPUT}/$file\n+  else\n+    file_to_fix=\"\"\n+  fi\n+fi\n+if [ \\! -z \"$file_to_fix\" ]; then\n+  echo Checking $file_to_fix\n+  if grep _KERNEL $file_to_fix > /dev/null; then\n+    echo No change needed in $file_to_fix\n+  else\n+    echo '#ifdef _KERNEL' > /tmp/$base\n+    cat $file_to_fix >> /tmp/$base\n+    echo '#endif /* defined(_KERNEL) */' >> /tmp/$base\n+    echo Fixed $file_to_fix\n+    rm -f ${LIB}/$file\n+    cp /tmp/$base ${LIB}/$file\n+    rm -f /tmp/$base\n+  fi\n+fi\n+\n+echo 'Removing unneeded directories:'\n+cd $LIB\n+files=`find . -type d -print | sort -r`\n+for file in $files; do\n+  rmdir $LIB/$file > /dev/null 2>&1\n+done\n+\n+if $LINKS; then\n+  echo 'Making internal symbolic non-directory links'\n+  cd ${INPUT}\n+  files=`find . -type l -print`\n+  for file in $files; do\n+    dest=`ls -ld $file | sed -n 's/.*-> //p'`\n+    if expr \"$dest\" : '[^/].*' > /dev/null; then    \n+      target=${LIB}/`echo file | sed \"s|[^/]*\\$|$dest|\"`\n+      if [ -f $target ]; then\n+        ln -s $dest ${LIB}/$file >/dev/null 2>&1\n+      fi\n+    fi\n+  done\n+fi\n+\n+cd ${ORIG_DIR}\n+\n+echo 'Replacing <sys/byteorder.h>'\n+rm -f ${LIB}/sys/byteorder.h\n+cp byteorder.h ${LIB}/sys/byteorder.h\n+\n+exit 0\n+"}]}