{"sha": "129e0ee875fbde69fd5bef74a99247b6dfd7b36c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTI5ZTBlZTg3NWZiZGU2OWZkNWJlZjc0YTk5MjQ3YjZkZmQ3YjM2Yw==", "commit": {"author": {"name": "Roger Sayle", "email": "roger@eyesopen.com", "date": "2002-06-15T20:21:22Z"}, "committer": {"name": "Roger Sayle", "email": "sayle@gcc.gnu.org", "date": "2002-06-15T20:21:22Z"}, "message": "expr.c (compare_from_rtx): Call simplify_relational_operation on all comparisons...\n\n\n\t* expr.c (compare_from_rtx): Call simplify_relational_operation\n\ton all comparisons, not just those between integer constants,\n\twith the correct (possibly unsigned) comparison code.\n\t(do_compare_rtx_and_jump): Likewise.\n\nFrom-SVN: r54657", "tree": {"sha": "a7b0af58916c32e9d0a0970b6cb38fdfc45107df", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a7b0af58916c32e9d0a0970b6cb38fdfc45107df"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/129e0ee875fbde69fd5bef74a99247b6dfd7b36c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/129e0ee875fbde69fd5bef74a99247b6dfd7b36c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/129e0ee875fbde69fd5bef74a99247b6dfd7b36c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/129e0ee875fbde69fd5bef74a99247b6dfd7b36c/comments", "author": null, "committer": null, "parents": [{"sha": "3e1b181a6785c3b77b1cd877a8f6759efad6cfe8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3e1b181a6785c3b77b1cd877a8f6759efad6cfe8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3e1b181a6785c3b77b1cd877a8f6759efad6cfe8"}], "stats": {"total": 17, "additions": 13, "deletions": 4}, "files": [{"sha": "6e23210797b63fe21ca211c350a381ed2b1b1934", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/129e0ee875fbde69fd5bef74a99247b6dfd7b36c/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/129e0ee875fbde69fd5bef74a99247b6dfd7b36c/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=129e0ee875fbde69fd5bef74a99247b6dfd7b36c", "patch": "@@ -1,3 +1,10 @@\n+2002-06-15  Roger Sayle  <roger@eyesopen.com>\n+\n+\t* expr.c (compare_from_rtx): Call simplify_relational_operation\n+\ton all comparisons, not just those between integer constants,\n+\twith the correct (possibly unsigned) comparison code.\n+\t(do_compare_rtx_and_jump): Likewise.\n+\n 2002-06-15  John David Anglin  <dave@hiauly1.hia.nrc.ca>\n \n \t* Makefile.in (tm_defines): New configuration variable."}, {"sha": "bba785ab33b68b404bf4727d11f7767e8dd7b449", "filename": "gcc/expr.c", "status": "modified", "additions": 6, "deletions": 4, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/129e0ee875fbde69fd5bef74a99247b6dfd7b36c/gcc%2Fexpr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/129e0ee875fbde69fd5bef74a99247b6dfd7b36c/gcc%2Fexpr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fexpr.c?ref=129e0ee875fbde69fd5bef74a99247b6dfd7b36c", "patch": "@@ -10045,6 +10045,7 @@ compare_from_rtx (op0, op1, code, unsignedp, mode, size)\n      enum machine_mode mode;\n      rtx size;\n {\n+  enum rtx_code ucode;\n   rtx tem;\n \n   /* If one operand is constant, make it the second one.  Only do this\n@@ -10066,8 +10067,8 @@ compare_from_rtx (op0, op1, code, unsignedp, mode, size)\n \n   do_pending_stack_adjust ();\n \n-  if (GET_CODE (op0) == CONST_INT && GET_CODE (op1) == CONST_INT\n-      && (tem = simplify_relational_operation (code, mode, op0, op1)) != 0)\n+  ucode = unsignedp ? unsigned_condition (code) : code;\n+  if ((tem = simplify_relational_operation (ucode, mode, op0, op1)) != 0)\n     return tem;\n \n #if 0\n@@ -10117,6 +10118,7 @@ do_compare_rtx_and_jump (op0, op1, code, unsignedp, mode, size,\n      rtx size;\n      rtx if_false_label, if_true_label;\n {\n+  enum rtx_code ucode;\n   rtx tem;\n   int dummy_true_label = 0;\n \n@@ -10148,8 +10150,8 @@ do_compare_rtx_and_jump (op0, op1, code, unsignedp, mode, size,\n \n   do_pending_stack_adjust ();\n \n-  if (GET_CODE (op0) == CONST_INT && GET_CODE (op1) == CONST_INT\n-      && (tem = simplify_relational_operation (code, mode, op0, op1)) != 0)\n+  ucode = unsignedp ? unsigned_condition (code) : code;\n+  if ((tem = simplify_relational_operation (ucode, mode, op0, op1)) != 0)\n     {\n       if (tem == const_true_rtx)\n \t{"}]}