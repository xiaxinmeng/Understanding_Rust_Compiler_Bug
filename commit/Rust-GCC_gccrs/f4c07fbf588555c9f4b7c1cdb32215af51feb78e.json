{"sha": "f4c07fbf588555c9f4b7c1cdb32215af51feb78e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjRjMDdmYmY1ODg1NTVjOWY0YjdjMWNkYjMyMjE1YWY1MWZlYjc4ZQ==", "commit": {"author": {"name": "Kazu Hirata", "email": "kazu@cs.umass.edu", "date": "2003-02-19T13:00:27Z"}, "committer": {"name": "Kazu Hirata", "email": "kazu@gcc.gnu.org", "date": "2003-02-19T13:00:27Z"}, "message": "h8300.md (extendqisi2): Change to an expander.\n\n\t* config/h8300/h8300.md (extendqisi2): Change to an expander.\n\t(*extendqisi2_h8300): New.\n\t(*extendqisi2_h8300hs): Likewise.\n\nFrom-SVN: r63104", "tree": {"sha": "23c5b79743aad719a4478ecc73ac830ba2449882", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/23c5b79743aad719a4478ecc73ac830ba2449882"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f4c07fbf588555c9f4b7c1cdb32215af51feb78e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f4c07fbf588555c9f4b7c1cdb32215af51feb78e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f4c07fbf588555c9f4b7c1cdb32215af51feb78e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f4c07fbf588555c9f4b7c1cdb32215af51feb78e/comments", "author": null, "committer": null, "parents": [{"sha": "590734b6544d296f3d4cf74713f7a1e723d03fbe", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/590734b6544d296f3d4cf74713f7a1e723d03fbe", "html_url": "https://github.com/Rust-GCC/gccrs/commit/590734b6544d296f3d4cf74713f7a1e723d03fbe"}], "stats": {"total": 32, "additions": 29, "deletions": 3}, "files": [{"sha": "7bd6a72ce2705a32b012153f74b932ee08625aab", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f4c07fbf588555c9f4b7c1cdb32215af51feb78e/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f4c07fbf588555c9f4b7c1cdb32215af51feb78e/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=f4c07fbf588555c9f4b7c1cdb32215af51feb78e", "patch": "@@ -1,3 +1,9 @@\n+2003-02-19  Kazu Hirata  <kazu@cs.umass.edu>\n+\n+\t* config/h8300/h8300.md (extendqisi2): Change to an expander.\n+\t(*extendqisi2_h8300): New.\n+\t(*extendqisi2_h8300hs): Likewise.\n+\n 2003-02-19  Kazu Hirata  <kazu@cs.umass.edu>\n \n \t* config/h8300/h8300-protos.h: Update the prototype for"}, {"sha": "2332c4b64ac9236e96ef537fabe818b702827b5c", "filename": "gcc/config/h8300/h8300.md", "status": "modified", "additions": 23, "deletions": 3, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f4c07fbf588555c9f4b7c1cdb32215af51feb78e/gcc%2Fconfig%2Fh8300%2Fh8300.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f4c07fbf588555c9f4b7c1cdb32215af51feb78e/gcc%2Fconfig%2Fh8300%2Fh8300.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fh8300%2Fh8300.md?ref=f4c07fbf588555c9f4b7c1cdb32215af51feb78e", "patch": "@@ -2101,10 +2101,14 @@\n   [(set_attr \"length\" \"2\")\n    (set_attr \"cc\" \"set_znv\")])\n \n-;; The compiler can synthesize a H8/300H variant of this which is\n-;; just as efficient as one that we'd create\n-(define_insn \"extendqisi2\"\n+(define_expand \"extendqisi2\"\n   [(set (match_operand:SI 0 \"register_operand\" \"=r,r\")\n+\t(sign_extend:SI (match_operand:QI 1 \"register_operand\" \"\")))]\n+  \"\"\n+  \"\")\n+\n+(define_insn \"*extendqisi2_h8300\"\n+  [(set (match_operand:SI 0 \"register_operand\" \"\")\n \t(sign_extend:SI (match_operand:QI 1 \"general_operand_src\" \"0,g>\")))]\n   \"TARGET_H8300\"\n   \"@\n@@ -2113,6 +2117,22 @@\n   [(set_attr \"length\" \"8,12\")\n    (set_attr \"cc\" \"clobber,clobber\")])\n \n+;; The following pattern is needed because without the pattern, the\n+;; combiner would split (sign_extend:SI (reg:QI)) into into two 24-bit\n+;; shifts, one ashift and one ashiftrt.\n+\n+(define_insn_and_split \"*extendqisi2_h8300hs\"\n+  [(set (match_operand:SI 0 \"register_operand\" \"=r\")\n+\t(sign_extend:SI (match_operand:QI 1 \"register_operand\" \"0\")))]\n+  \"(TARGET_H8300H || TARGET_H8300S)\"\n+  \"#\"\n+  \"&& reload_completed\"\n+  [(set (match_dup 2)\n+\t(sign_extend:HI (match_dup 1)))\n+   (set (match_dup 0)\n+\t(sign_extend:SI (match_dup 2)))]\n+  \"operands[2] = gen_rtx_REG (HImode, REGNO (operands[0]));\")\n+\n (define_expand \"extendhisi2\"\n   [(set (match_operand:SI 0 \"register_operand\" \"\")\n \t(sign_extend:SI (match_operand:HI 1 \"register_operand\" \"\")))]"}]}