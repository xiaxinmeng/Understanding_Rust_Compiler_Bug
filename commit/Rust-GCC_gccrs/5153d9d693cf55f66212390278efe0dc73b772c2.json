{"sha": "5153d9d693cf55f66212390278efe0dc73b772c2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTE1M2Q5ZDY5M2NmNTVmNjYyMTIzOTAyNzhlZmUwZGM3M2I3NzJjMg==", "commit": {"author": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1992-11-30T23:07:11Z"}, "committer": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1992-11-30T23:07:11Z"}, "message": "(va_arg): Copy both definitions from gstdarg.h.\n\nFrom-SVN: r2821", "tree": {"sha": "f2c3b55b4077782c4884d442aa33a2e6cdcce484", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f2c3b55b4077782c4884d442aa33a2e6cdcce484"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5153d9d693cf55f66212390278efe0dc73b772c2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5153d9d693cf55f66212390278efe0dc73b772c2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5153d9d693cf55f66212390278efe0dc73b772c2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5153d9d693cf55f66212390278efe0dc73b772c2/comments", "author": null, "committer": null, "parents": [{"sha": "0cd3c247a3b77a858b713e4da4271e4b9f6e31bb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0cd3c247a3b77a858b713e4da4271e4b9f6e31bb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0cd3c247a3b77a858b713e4da4271e4b9f6e31bb"}], "stats": {"total": 14, "additions": 12, "deletions": 2}, "files": [{"sha": "a66c72ae597d4937d88b01226d1396fbaf68a169", "filename": "gcc/ginclude/varargs.h", "status": "modified", "additions": 12, "deletions": 2, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5153d9d693cf55f66212390278efe0dc73b772c2/gcc%2Fginclude%2Fvarargs.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5153d9d693cf55f66212390278efe0dc73b772c2/gcc%2Fginclude%2Fvarargs.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fginclude%2Fvarargs.h?ref=5153d9d693cf55f66212390278efe0dc73b772c2", "patch": "@@ -87,9 +87,19 @@ typedef void *__gnuc_va_list;\n #define __va_rounded_size(TYPE)  \\\n   (((sizeof (TYPE) + sizeof (int) - 1) / sizeof (int)) * sizeof (int))\n \n+#if defined (__arm__) || defined (__i386__) || defined (__ns32000__) || defined (__vax__)\n+/* This is for little-endian machines; small args are padded upward.  */\n #define va_arg(AP, TYPE)\t\t\t\t\t\t\\\n- (AP += __va_rounded_size (TYPE),\t\t\t\t\t\\\n-  *((TYPE *) (AP - __va_rounded_size (TYPE))))\n+ (AP = (__gnuc_va_list) ((char *) (AP) + __va_rounded_size (TYPE)),\t\\\n+  *((TYPE *) (void *) ((char *) (AP) - __va_rounded_size (TYPE))))\n+#else /* big-endian */\n+/* This is for big-endian machines; small args are padded downward.  */\n+#define va_arg(AP, TYPE)\t\t\t\t\t\t\\\n+ (AP = (__gnuc_va_list) ((char *) (AP) + __va_rounded_size (TYPE)),\t\\\n+  *((TYPE *) (void *) ((char *) (AP) - ((sizeof (TYPE) < 4\t\t\\\n+\t\t\t\t\t ? sizeof (TYPE)\t\t\\\n+\t\t\t\t\t : __va_rounded_size (TYPE))))))\n+#endif /* big-endian */\n \n #endif /* not alpha */\n #endif /* not i960 */"}]}