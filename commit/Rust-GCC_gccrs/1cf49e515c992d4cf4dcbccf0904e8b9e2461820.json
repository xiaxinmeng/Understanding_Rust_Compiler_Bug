{"sha": "1cf49e515c992d4cf4dcbccf0904e8b9e2461820", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWNmNDllNTE1Yzk5MmQ0Y2Y0ZGNiY2NmMDkwNGU4YjllMjQ2MTgyMA==", "commit": {"author": {"name": "Olivier Hainque", "email": "hainque@adacore.com", "date": "2019-12-30T22:31:37Z"}, "committer": {"name": "Olivier Hainque", "email": "hainque@gcc.gnu.org", "date": "2019-12-30T22:31:37Z"}, "message": "Prevent redefinition of WCHAR_MAX from testsuite/gcc.dg/cpp/ucs.c\n\ngcc/testsuite/gcc.dg/cpp/ucs.c #include <limits.h>\nand then crafts a definition of WCHAR_MAX depending\non __WCHAR_TYPE__.\n\nThe test fails in VxWorks configurations because WCHAR_MAX\nis already exposed by the system limits.h.\n\nThe patch simply guards the tentative definition\nby a check verifying if the macro is defined already, so\nwe're using the value exposed by limits.h in this case.\n\n2019-12-30  Olivier Hainque  <hainque@adacore.com>\n\n\t* testsuite/gcc.dg/cpp/ucs.c: Prevent redefinition\n\tof WCHAR_MAX if already exposed by limits.h.\n\nFrom-SVN: r279795", "tree": {"sha": "c62c39a299f365da2e0d0d83a534fda78569fa34", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c62c39a299f365da2e0d0d83a534fda78569fa34"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1cf49e515c992d4cf4dcbccf0904e8b9e2461820", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1cf49e515c992d4cf4dcbccf0904e8b9e2461820", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1cf49e515c992d4cf4dcbccf0904e8b9e2461820", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1cf49e515c992d4cf4dcbccf0904e8b9e2461820/comments", "author": {"login": "hainque", "id": 18735142, "node_id": "MDQ6VXNlcjE4NzM1MTQy", "avatar_url": "https://avatars.githubusercontent.com/u/18735142?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hainque", "html_url": "https://github.com/hainque", "followers_url": "https://api.github.com/users/hainque/followers", "following_url": "https://api.github.com/users/hainque/following{/other_user}", "gists_url": "https://api.github.com/users/hainque/gists{/gist_id}", "starred_url": "https://api.github.com/users/hainque/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hainque/subscriptions", "organizations_url": "https://api.github.com/users/hainque/orgs", "repos_url": "https://api.github.com/users/hainque/repos", "events_url": "https://api.github.com/users/hainque/events{/privacy}", "received_events_url": "https://api.github.com/users/hainque/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "8ee81b4d275bac80210cc39bb8c93e1f73e1f307", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8ee81b4d275bac80210cc39bb8c93e1f73e1f307", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8ee81b4d275bac80210cc39bb8c93e1f73e1f307"}], "stats": {"total": 9, "additions": 9, "deletions": 0}, "files": [{"sha": "809b8a4e67095c799d2426266c1691d37d93dde0", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1cf49e515c992d4cf4dcbccf0904e8b9e2461820/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1cf49e515c992d4cf4dcbccf0904e8b9e2461820/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=1cf49e515c992d4cf4dcbccf0904e8b9e2461820", "patch": "@@ -1,3 +1,8 @@\n+2019-12-20  Olivier Hainque  <hainque@adacore.com>\n+\n+\t* testsuite/gcc.dg/cpp/ucs.c: Prevent redefinition\n+\tof WCHAR_MAX if already exposed by limits.h.\n+\n 2019-12-20  Olivier Hainque  <hainque@adacore.com>\n            Jerome Lambourg  <lambourg@adacore.com>\n "}, {"sha": "f52cd5712587f34b0c38d213bfd50d5664cb9555", "filename": "gcc/testsuite/gcc.dg/cpp/ucs.c", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1cf49e515c992d4cf4dcbccf0904e8b9e2461820/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Fucs.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1cf49e515c992d4cf4dcbccf0904e8b9e2461820/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Fucs.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Fucs.c?ref=1cf49e515c992d4cf4dcbccf0904e8b9e2461820", "patch": "@@ -16,6 +16,8 @@\n #define short           +2 \n #define long            +3\n \n+#if !defined(WCHAR_MAX)\n+\n #if __WCHAR_TYPE__ == 0\n # define WCHAR_MAX      INT_MAX\n #elif __WCHAR_TYPE__ == 1\n@@ -28,6 +30,8 @@\n # error wacky wchar_t\n #endif\n \n+#endif\n+\n #undef unsigned\n #undef int\n #undef char"}]}