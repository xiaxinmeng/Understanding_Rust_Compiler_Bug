{"sha": "a2f2e0ffa2a270043a1c16ba4553652c7b8d4525", "node_id": "C_kwDOANBUbNoAKGEyZjJlMGZmYTJhMjcwMDQzYTFjMTZiYTQ1NTM2NTJjN2I4ZDQ1MjU", "commit": {"author": {"name": "David Malcolm", "email": "dmalcolm@redhat.com", "date": "2022-06-27T21:00:33Z"}, "committer": {"name": "David Malcolm", "email": "dmalcolm@redhat.com", "date": "2022-06-27T21:00:33Z"}, "message": "tree-switch-conversion.h: use final/override for cluster vfunc impls\n\ngcc/ChangeLog:\n\t* tree-switch-conversion.h: Add \"final\" and \"override\" to cluster\n\tvfunc implementations as appropriate.\n\nSigned-off-by: David Malcolm <dmalcolm@redhat.com>", "tree": {"sha": "d0959ff07cf63f9bdedd071198915e8e5e61753f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d0959ff07cf63f9bdedd071198915e8e5e61753f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a2f2e0ffa2a270043a1c16ba4553652c7b8d4525", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a2f2e0ffa2a270043a1c16ba4553652c7b8d4525", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a2f2e0ffa2a270043a1c16ba4553652c7b8d4525", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a2f2e0ffa2a270043a1c16ba4553652c7b8d4525/comments", "author": {"login": "davidmalcolm", "id": 1553248, "node_id": "MDQ6VXNlcjE1NTMyNDg=", "avatar_url": "https://avatars.githubusercontent.com/u/1553248?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidmalcolm", "html_url": "https://github.com/davidmalcolm", "followers_url": "https://api.github.com/users/davidmalcolm/followers", "following_url": "https://api.github.com/users/davidmalcolm/following{/other_user}", "gists_url": "https://api.github.com/users/davidmalcolm/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidmalcolm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidmalcolm/subscriptions", "organizations_url": "https://api.github.com/users/davidmalcolm/orgs", "repos_url": "https://api.github.com/users/davidmalcolm/repos", "events_url": "https://api.github.com/users/davidmalcolm/events{/privacy}", "received_events_url": "https://api.github.com/users/davidmalcolm/received_events", "type": "User", "site_admin": false}, "committer": {"login": "davidmalcolm", "id": 1553248, "node_id": "MDQ6VXNlcjE1NTMyNDg=", "avatar_url": "https://avatars.githubusercontent.com/u/1553248?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidmalcolm", "html_url": "https://github.com/davidmalcolm", "followers_url": "https://api.github.com/users/davidmalcolm/followers", "following_url": "https://api.github.com/users/davidmalcolm/following{/other_user}", "gists_url": "https://api.github.com/users/davidmalcolm/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidmalcolm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidmalcolm/subscriptions", "organizations_url": "https://api.github.com/users/davidmalcolm/orgs", "repos_url": "https://api.github.com/users/davidmalcolm/repos", "events_url": "https://api.github.com/users/davidmalcolm/events{/privacy}", "received_events_url": "https://api.github.com/users/davidmalcolm/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ddff65d64d5fb20da7dea3adaa406e2244d055e9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ddff65d64d5fb20da7dea3adaa406e2244d055e9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ddff65d64d5fb20da7dea3adaa406e2244d055e9"}], "stats": {"total": 32, "additions": 17, "deletions": 15}, "files": [{"sha": "6861572fb17b94516a3b6db13da46b8954610ab3", "filename": "gcc/tree-switch-conversion.h", "status": "modified", "additions": 17, "deletions": 15, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a2f2e0ffa2a270043a1c16ba4553652c7b8d4525/gcc%2Ftree-switch-conversion.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a2f2e0ffa2a270043a1c16ba4553652c7b8d4525/gcc%2Ftree-switch-conversion.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-switch-conversion.h?ref=a2f2e0ffa2a270043a1c16ba4553652c7b8d4525", "patch": "@@ -130,19 +130,19 @@ class simple_cluster: public cluster\n   {}\n \n   cluster_type\n-  get_type ()\n+  get_type () final override\n   {\n     return SIMPLE_CASE;\n   }\n \n   tree\n-  get_low ()\n+  get_low () final override\n   {\n     return m_low;\n   }\n \n   tree\n-  get_high ()\n+  get_high () final override\n   {\n     return m_high;\n   }\n@@ -153,13 +153,13 @@ class simple_cluster: public cluster\n   }\n \n   void\n-  debug ()\n+  debug () final override\n   {\n     dump (stderr);\n   }\n \n   void\n-  dump (FILE *f, bool details ATTRIBUTE_UNUSED = false)\n+  dump (FILE *f, bool details ATTRIBUTE_UNUSED = false) final override\n   {\n     PRINT_CASE (f, get_low ());\n     if (get_low () != get_high ())\n@@ -170,12 +170,12 @@ class simple_cluster: public cluster\n     fprintf (f, \" \");\n   }\n \n-  void emit (tree, tree, tree, basic_block, location_t)\n+  void emit (tree, tree, tree, basic_block, location_t) final override\n   {\n     gcc_unreachable ();\n   }\n \n-  bool is_single_value_p ()\n+  bool is_single_value_p () final override\n   {\n     return tree_int_cst_equal (get_low (), get_high ());\n   }\n@@ -224,24 +224,24 @@ class group_cluster: public cluster\n   ~group_cluster ();\n \n   tree\n-  get_low ()\n+  get_low () final override\n   {\n     return m_cases[0]->get_low ();\n   }\n \n   tree\n-  get_high ()\n+  get_high () final override\n   {\n     return m_cases[m_cases.length () - 1]->get_high ();\n   }\n \n   void\n-  debug ()\n+  debug () final override\n   {\n     dump (stderr);\n   }\n \n-  void dump (FILE *f, bool details = false);\n+  void dump (FILE *f, bool details = false) final override;\n \n   /* List of simple clusters handled by the group.  */\n   vec<simple_cluster *> m_cases;\n@@ -261,13 +261,14 @@ class jump_table_cluster: public group_cluster\n   {}\n \n   cluster_type\n-  get_type ()\n+  get_type () final override\n   {\n     return JUMP_TABLE;\n   }\n \n   void emit (tree index_expr, tree index_type,\n-\t     tree default_label_expr, basic_block default_bb, location_t loc);\n+\t     tree default_label_expr, basic_block default_bb, location_t loc)\n+    final override;\n \n   /* Find jump tables of given CLUSTERS, where all members of the vector\n      are of type simple_cluster.  New clusters are returned.  */\n@@ -366,7 +367,7 @@ class bit_test_cluster: public group_cluster\n   {}\n \n   cluster_type\n-  get_type ()\n+  get_type () final override\n   {\n     return BIT_TEST;\n   }\n@@ -388,7 +389,8 @@ class bit_test_cluster: public group_cluster\n     There *MUST* be max_case_bit_tests or less unique case\n     node targets.  */\n   void emit (tree index_expr, tree index_type,\n-\t     tree default_label_expr, basic_block default_bb, location_t loc);\n+\t     tree default_label_expr, basic_block default_bb, location_t loc)\n+     final override;\n \n   /* Find bit tests of given CLUSTERS, where all members of the vector\n      are of type simple_cluster.  New clusters are returned.  */"}]}