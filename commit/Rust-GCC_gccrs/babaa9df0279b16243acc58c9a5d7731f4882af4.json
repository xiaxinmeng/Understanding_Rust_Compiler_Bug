{"sha": "babaa9df0279b16243acc58c9a5d7731f4882af4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmFiYWE5ZGYwMjc5YjE2MjQzYWNjNThjOWE1ZDc3MzFmNDg4MmFmNA==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2016-04-28T19:01:13Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2016-04-28T19:01:13Z"}, "message": "cvt.c (cp_get_callee): New.\n\n\t* cvt.c (cp_get_callee): New.\n\n\t* constexpr.c (get_function_named_in_call): Use it.\n\t* cxx-pretty-print.c (postfix_expression): Use it.\n\t* except.c (check_noexcept_r): Use it.\n\t* method.c (check_nontriv): Use it.\n\t* tree.c (build_aggr_init_expr): Use it.\n\t* cp-tree.h: Declare it.\n\nFrom-SVN: r235596", "tree": {"sha": "b72de2324ca719d4d3a1fc4ddc1c350892ee00d7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b72de2324ca719d4d3a1fc4ddc1c350892ee00d7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/babaa9df0279b16243acc58c9a5d7731f4882af4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/babaa9df0279b16243acc58c9a5d7731f4882af4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/babaa9df0279b16243acc58c9a5d7731f4882af4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/babaa9df0279b16243acc58c9a5d7731f4882af4/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "ceaaa9fe93fd5c33028b74eff376aff8321ecfa5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ceaaa9fe93fd5c33028b74eff376aff8321ecfa5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ceaaa9fe93fd5c33028b74eff376aff8321ecfa5"}], "stats": {"total": 62, "additions": 32, "deletions": 30}, "files": [{"sha": "ff6d30a00f7377f66a2ebea19053fd7d33889a19", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/babaa9df0279b16243acc58c9a5d7731f4882af4/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/babaa9df0279b16243acc58c9a5d7731f4882af4/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=babaa9df0279b16243acc58c9a5d7731f4882af4", "patch": "@@ -1,3 +1,13 @@\n+2016-04-28  Jason Merrill  <jason@redhat.com>\n+\n+\t* cvt.c (cp_get_callee): New.\n+\t* constexpr.c (get_function_named_in_call): Use it.\n+\t* cxx-pretty-print.c (postfix_expression): Use it.\n+\t* except.c (check_noexcept_r): Use it.\n+\t* method.c (check_nontriv): Use it.\n+\t* tree.c (build_aggr_init_expr): Use it.\n+\t* cp-tree.h: Declare it.\n+\n 2015-04-27  Ryan Burn  <contact@rnburn.com>\n \t    Jeff Law  <law@redhat.com>\n "}, {"sha": "6054d1a9e3f76f8001e588fb8c6618124213919d", "filename": "gcc/cp/constexpr.c", "status": "modified", "additions": 1, "deletions": 15, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/babaa9df0279b16243acc58c9a5d7731f4882af4/gcc%2Fcp%2Fconstexpr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/babaa9df0279b16243acc58c9a5d7731f4882af4/gcc%2Fcp%2Fconstexpr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fconstexpr.c?ref=babaa9df0279b16243acc58c9a5d7731f4882af4", "patch": "@@ -1044,21 +1044,7 @@ save_fundef_copy (tree fun, tree copy)\n static tree\n get_function_named_in_call (tree t)\n {\n-  tree fun = NULL;\n-  switch (TREE_CODE (t))\n-    {\n-    case CALL_EXPR:\n-      fun = CALL_EXPR_FN (t);\n-      break;\n-\n-    case AGGR_INIT_EXPR:\n-      fun = AGGR_INIT_EXPR_FN (t);\n-      break;\n-\n-    default:\n-      gcc_unreachable();\n-      break;\n-    }\n+  tree fun = cp_get_callee (t);\n   if (fun && TREE_CODE (fun) == ADDR_EXPR\n       && TREE_CODE (TREE_OPERAND (fun, 0)) == FUNCTION_DECL)\n     fun = TREE_OPERAND (fun, 0);"}, {"sha": "f6ea0b734c2273e68a99f8695a91099c7224cf1b", "filename": "gcc/cp/cp-tree.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/babaa9df0279b16243acc58c9a5d7731f4882af4/gcc%2Fcp%2Fcp-tree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/babaa9df0279b16243acc58c9a5d7731f4882af4/gcc%2Fcp%2Fcp-tree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcp-tree.h?ref=babaa9df0279b16243acc58c9a5d7731f4882af4", "patch": "@@ -5694,6 +5694,7 @@ extern tree ocp_convert\t\t\t\t(tree, tree, int, int,\n extern tree cp_convert\t\t\t\t(tree, tree, tsubst_flags_t);\n extern tree cp_convert_and_check                (tree, tree, tsubst_flags_t);\n extern tree cp_fold_convert\t\t\t(tree, tree);\n+extern tree cp_get_callee\t\t\t(tree);\n extern tree convert_to_void\t\t\t(tree, impl_conv_void,\n                                  \t\t tsubst_flags_t);\n extern tree convert_force\t\t\t(tree, tree, int,"}, {"sha": "8c9d78b641c69147f653fa3eca7223f26cf9be58", "filename": "gcc/cp/cvt.c", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/babaa9df0279b16243acc58c9a5d7731f4882af4/gcc%2Fcp%2Fcvt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/babaa9df0279b16243acc58c9a5d7731f4882af4/gcc%2Fcp%2Fcvt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcvt.c?ref=babaa9df0279b16243acc58c9a5d7731f4882af4", "patch": "@@ -904,6 +904,20 @@ ocp_convert (tree type, tree expr, int convtype, int flags,\n   return error_mark_node;\n }\n \n+/* If CALL is a call, return the callee; otherwise null.  */\n+\n+tree\n+cp_get_callee (tree call)\n+{\n+  if (call == NULL_TREE)\n+    return call;\n+  else if (TREE_CODE (call) == CALL_EXPR)\n+    return CALL_EXPR_FN (call);\n+  else if (TREE_CODE (call) == AGGR_INIT_EXPR)\n+    return AGGR_INIT_EXPR_FN (call);\n+  return NULL_TREE;\n+}\n+\n /* When an expression is used in a void context, its value is discarded and\n    no lvalue-rvalue and similar conversions happen [expr.static.cast/4,\n    stmt.expr/1, expr.comma/1].  This permits dereferencing an incomplete type"}, {"sha": "3b52a35a2e581818685e4c0c43cf8a5e62bed9fc", "filename": "gcc/cp/cxx-pretty-print.c", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/babaa9df0279b16243acc58c9a5d7731f4882af4/gcc%2Fcp%2Fcxx-pretty-print.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/babaa9df0279b16243acc58c9a5d7731f4882af4/gcc%2Fcp%2Fcxx-pretty-print.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcxx-pretty-print.c?ref=babaa9df0279b16243acc58c9a5d7731f4882af4", "patch": "@@ -490,8 +490,7 @@ cxx_pretty_printer::postfix_expression (tree t)\n     case AGGR_INIT_EXPR:\n     case CALL_EXPR:\n       {\n-\ttree fun = (code == AGGR_INIT_EXPR ? AGGR_INIT_EXPR_FN (t)\n-\t\t\t\t\t   : CALL_EXPR_FN (t));\n+\ttree fun = cp_get_callee (t);\n \ttree saved_scope = enclosing_scope;\n \tbool skipfirst = false;\n \ttree arg;"}, {"sha": "014df507f227397b4d7ca02f8c61a564f007f41a", "filename": "gcc/cp/except.c", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/babaa9df0279b16243acc58c9a5d7731f4882af4/gcc%2Fcp%2Fexcept.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/babaa9df0279b16243acc58c9a5d7731f4882af4/gcc%2Fcp%2Fexcept.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fexcept.c?ref=babaa9df0279b16243acc58c9a5d7731f4882af4", "patch": "@@ -1158,8 +1158,7 @@ check_noexcept_r (tree *tp, int * /*walk_subtrees*/, void * /*data*/)\n \t translation unit, creating ODR problems.\n \n          We could use TREE_NOTHROW (t) for !TREE_PUBLIC fns, though... */\n-      tree fn = (code == AGGR_INIT_EXPR\n-\t\t ? AGGR_INIT_EXPR_FN (t) : CALL_EXPR_FN (t));\n+      tree fn = cp_get_callee (t);\n       tree type = TREE_TYPE (fn);\n       gcc_assert (POINTER_TYPE_P (type));\n       type = TREE_TYPE (type);"}, {"sha": "0e501d9045ab7446bef42136e9441516d30f2fc4", "filename": "gcc/cp/method.c", "status": "modified", "additions": 2, "deletions": 6, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/babaa9df0279b16243acc58c9a5d7731f4882af4/gcc%2Fcp%2Fmethod.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/babaa9df0279b16243acc58c9a5d7731f4882af4/gcc%2Fcp%2Fmethod.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fmethod.c?ref=babaa9df0279b16243acc58c9a5d7731f4882af4", "patch": "@@ -1002,12 +1002,8 @@ get_inherited_ctor (tree ctor)\n static tree\n check_nontriv (tree *tp, int *, void *)\n {\n-  tree fn;\n-  if (TREE_CODE (*tp) == CALL_EXPR)\n-    fn = CALL_EXPR_FN (*tp);\n-  else if (TREE_CODE (*tp) == AGGR_INIT_EXPR)\n-    fn = AGGR_INIT_EXPR_FN (*tp);\n-  else\n+  tree fn = cp_get_callee (*tp);\n+  if (fn == NULL_TREE)\n     return NULL_TREE;\n \n   if (TREE_CODE (fn) == ADDR_EXPR)"}, {"sha": "97601aa1f186e055bbcd35f9f06d19f406db3599", "filename": "gcc/cp/tree.c", "status": "modified", "additions": 2, "deletions": 5, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/babaa9df0279b16243acc58c9a5d7731f4882af4/gcc%2Fcp%2Ftree.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/babaa9df0279b16243acc58c9a5d7731f4882af4/gcc%2Fcp%2Ftree.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Ftree.c?ref=babaa9df0279b16243acc58c9a5d7731f4882af4", "patch": "@@ -470,11 +470,8 @@ build_aggr_init_expr (tree type, tree init)\n   if (processing_template_decl)\n     return init;\n \n-  if (TREE_CODE (init) == CALL_EXPR)\n-    fn = CALL_EXPR_FN (init);\n-  else if (TREE_CODE (init) == AGGR_INIT_EXPR)\n-    fn = AGGR_INIT_EXPR_FN (init);\n-  else\n+  fn = cp_get_callee (init);\n+  if (fn == NULL_TREE)\n     return convert (type, init);\n \n   is_ctor = (TREE_CODE (fn) == ADDR_EXPR"}]}