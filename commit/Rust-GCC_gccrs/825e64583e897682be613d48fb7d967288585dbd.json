{"sha": "825e64583e897682be613d48fb7d967288585dbd", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODI1ZTY0NTgzZTg5NzY4MmJlNjEzZDQ4ZmI3ZDk2NzI4ODU4NWRiZA==", "commit": {"author": {"name": "Steve Ellcey", "email": "sellcey@cavium.com", "date": "2018-10-05T15:26:40Z"}, "committer": {"name": "Steve Ellcey", "email": "sje@gcc.gnu.org", "date": "2018-10-05T15:26:40Z"}, "message": "re PR tree-optimization/71625 (missing strlen optimization on different array initialization style)\n\n2018-10-05  Steve Ellcey  <sellcey@cavium.com>\n\n\tPR tree-optimization/71625\n\t* /gcc.target/aarch64/vclz.c (test_vclz_s8): Add noinline attribute.\n\t(test_vclz_s16): Ditto.\n\t(test_vclz_s32): Ditto.\n\t(test_vclzq_s8): Ditto.\n\t(test_vclzq_s16): Ditto.\n\t(test_vclzq_s32): Ditto.\n\t(test_vclz_u8): Ditto.\n\t(test_vclz_u16): Ditto.\n\t(test_vclz_u32): Ditto.\n\t(test_vclzq_u8): Ditto.\n\t(test_vclzq_u16): Ditto.\n\t(test_vclzq_u32): Ditto.\n\t* gcc.target/aarch64/vneg_s.c (test_vneg_s8): Ditto.\n\t(test_vneg_s16): Ditto.\n\t(test_vneg_s32): Ditto.\n\t(test_vneg_s64): Ditto.\n\t(test_vnegd_s64): Ditto.\n\t(test_vnegq_s8): Ditto.\n\t(test_vnegq_s16): Ditto.\n\t(test_vnegq_s32): Ditto.\n\t(test_vnegq_s64): Ditto.\n\nFrom-SVN: r264874", "tree": {"sha": "b66efa1c0ed8bfe4e86dec1dd21ddfe898289e36", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b66efa1c0ed8bfe4e86dec1dd21ddfe898289e36"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/825e64583e897682be613d48fb7d967288585dbd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/825e64583e897682be613d48fb7d967288585dbd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/825e64583e897682be613d48fb7d967288585dbd", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/825e64583e897682be613d48fb7d967288585dbd/comments", "author": {"login": "sellcey", "id": 25938520, "node_id": "MDQ6VXNlcjI1OTM4NTIw", "avatar_url": "https://avatars.githubusercontent.com/u/25938520?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sellcey", "html_url": "https://github.com/sellcey", "followers_url": "https://api.github.com/users/sellcey/followers", "following_url": "https://api.github.com/users/sellcey/following{/other_user}", "gists_url": "https://api.github.com/users/sellcey/gists{/gist_id}", "starred_url": "https://api.github.com/users/sellcey/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sellcey/subscriptions", "organizations_url": "https://api.github.com/users/sellcey/orgs", "repos_url": "https://api.github.com/users/sellcey/repos", "events_url": "https://api.github.com/users/sellcey/events{/privacy}", "received_events_url": "https://api.github.com/users/sellcey/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "cbba2e1e47b550cebfb63fec85519cb14f2517d4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cbba2e1e47b550cebfb63fec85519cb14f2517d4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cbba2e1e47b550cebfb63fec85519cb14f2517d4"}], "stats": {"total": 67, "additions": 46, "deletions": 21}, "files": [{"sha": "996ec0b57583df3a774f330124c71ee956d095e9", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/825e64583e897682be613d48fb7d967288585dbd/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/825e64583e897682be613d48fb7d967288585dbd/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=825e64583e897682be613d48fb7d967288585dbd", "patch": "@@ -1,3 +1,28 @@\n+2018-10-05  Steve Ellcey  <sellcey@cavium.com>\n+\n+\tPR tree-optimization/71625\n+\t* /gcc.target/aarch64/vclz.c (test_vclz_s8): Add noinline attribute.\n+\t(test_vclz_s16): Ditto.\n+\t(test_vclz_s32): Ditto.\n+\t(test_vclzq_s8): Ditto.\n+\t(test_vclzq_s16): Ditto.\n+\t(test_vclzq_s32): Ditto.\n+\t(test_vclz_u8): Ditto.\n+\t(test_vclz_u16): Ditto.\n+\t(test_vclz_u32): Ditto.\n+\t(test_vclzq_u8): Ditto.\n+\t(test_vclzq_u16): Ditto.\n+\t(test_vclzq_u32): Ditto.\n+\t* gcc.target/aarch64/vneg_s.c (test_vneg_s8): Ditto.\n+\t(test_vneg_s16): Ditto.\n+\t(test_vneg_s32): Ditto.\n+\t(test_vneg_s64): Ditto.\n+\t(test_vnegd_s64): Ditto.\n+\t(test_vnegq_s8): Ditto.\n+\t(test_vnegq_s16): Ditto.\n+\t(test_vnegq_s32): Ditto.\n+\t(test_vnegq_s64): Ditto.\n+\n 2018-10-05  Segher Boessenkool  <segher@kernel.crashing.org>\n \n \tPR target/87509"}, {"sha": "a36ee44fc1658886f04dff19b946b933f9668008", "filename": "gcc/testsuite/gcc.target/aarch64/vclz.c", "status": "modified", "additions": 12, "deletions": 12, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/825e64583e897682be613d48fb7d967288585dbd/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fvclz.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/825e64583e897682be613d48fb7d967288585dbd/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fvclz.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fvclz.c?ref=825e64583e897682be613d48fb7d967288585dbd", "patch": "@@ -75,7 +75,7 @@ extern void abort (void);\n     if (a [i] != b [i])\t\t\t\t\t\t\t\\\n       return 1;\n \n-int\n+int __attribute__ ((noinline))\n test_vclz_s8 ()\n {\n   int i;\n@@ -107,7 +107,7 @@ test_vclz_s8 ()\n /* Double scan-assembler-times to take account of unsigned functions.  */\n /* { dg-final { scan-assembler-times \"clz\\\\tv\\[0-9\\]+\\.8b, v\\[0-9\\]+\\.8b\" 4 } } */\n \n-int\n+int __attribute__ ((noinline))\n test_vclz_s16 ()\n {\n   int i;\n@@ -138,7 +138,7 @@ test_vclz_s16 ()\n /* Double scan-assembler-times to take account of unsigned functions.  */\n /* { dg-final { scan-assembler-times \"clz\\\\tv\\[0-9\\]+\\.4h, v\\[0-9\\]+\\.4h\" 10} } */\n \n-int\n+int __attribute__ ((noinline))\n test_vclz_s32 ()\n {\n   int i;\n@@ -205,7 +205,7 @@ test_vclz_s32 ()\n /* Double scan-assembler-times to take account of unsigned functions.  */\n /* { dg-final { scan-assembler-times \"clz\\\\tv\\[0-9\\]+\\.2s, v\\[0-9\\]+\\.2s\" 34 } } */\n \n-int\n+int __attribute__ ((noinline))\n test_vclzq_s8 ()\n {\n   int i;\n@@ -226,7 +226,7 @@ test_vclzq_s8 ()\n /* Double scan-assembler-times to take account of unsigned functions.  */\n /* { dg-final { scan-assembler-times \"clz\\\\tv\\[0-9\\]+\\.16b, v\\[0-9\\]+\\.16b\" 2 } } */\n \n-int\n+int __attribute__ ((noinline))\n test_vclzq_s16 ()\n {\n   int i;\n@@ -262,7 +262,7 @@ test_vclzq_s16 ()\n /* Double scan-assembler-times to take account of unsigned functions.  */\n /* { dg-final { scan-assembler-times \"clz\\\\tv\\[0-9\\]+\\.8h, v\\[0-9\\]+\\.8h\" 6 } } */\n \n-int\n+int __attribute__ ((noinline))\n test_vclzq_s32 ()\n {\n   int i;\n@@ -303,7 +303,7 @@ test_vclzq_s32 ()\n \n /* Unsigned versions.  */\n \n-int\n+int __attribute__ ((noinline))\n test_vclz_u8 ()\n {\n   int i;\n@@ -331,7 +331,7 @@ test_vclz_u8 ()\n \n /* ASM scan near test for signed version.  */\n \n-int\n+int __attribute__ ((noinline))\n test_vclz_u16 ()\n {\n   int i;\n@@ -361,7 +361,7 @@ test_vclz_u16 ()\n \n /* ASM scan near test for signed version.  */\n \n-int\n+int __attribute__ ((noinline))\n test_vclz_u32 ()\n {\n   int i;\n@@ -427,7 +427,7 @@ test_vclz_u32 ()\n \n /* ASM scan near test for signed version.  */\n \n-int\n+int __attribute__ ((noinline))\n test_vclzq_u8 ()\n {\n   int i;\n@@ -448,7 +448,7 @@ test_vclzq_u8 ()\n \n /* ASM scan near test for signed version.  */\n \n-int\n+int __attribute__ ((noinline))\n test_vclzq_u16 ()\n {\n   int i;\n@@ -485,7 +485,7 @@ test_vclzq_u16 ()\n \n /* ASM scan near test for signed version.  */\n \n-int\n+int __attribute__ ((noinline))\n test_vclzq_u32 ()\n {\n   int i;"}, {"sha": "6947526abdd4f49cf560661531e96feb9b934eb5", "filename": "gcc/testsuite/gcc.target/aarch64/vneg_s.c", "status": "modified", "additions": 9, "deletions": 9, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/825e64583e897682be613d48fb7d967288585dbd/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fvneg_s.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/825e64583e897682be613d48fb7d967288585dbd/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fvneg_s.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fvneg_s.c?ref=825e64583e897682be613d48fb7d967288585dbd", "patch": "@@ -87,7 +87,7 @@ extern void abort (void);\n     force_simd (res);                                 \\\n   }\n \n-int\n+int __attribute__ ((noinline))\n test_vneg_s8 ()\n {\n   int8x8_t a;\n@@ -107,7 +107,7 @@ test_vneg_s8 ()\n \n /* { dg-final { scan-assembler-times \"neg\\\\tv\\[0-9\\]+\\.8b, v\\[0-9\\]+\\.8b\" 1 } } */\n \n-int\n+int __attribute__ ((noinline))\n test_vneg_s16 ()\n {\n   int16x4_t a;\n@@ -127,7 +127,7 @@ test_vneg_s16 ()\n \n /* { dg-final { scan-assembler-times \"neg\\\\tv\\[0-9\\]+\\.4h, v\\[0-9\\]+\\.4h\" 2 } } */\n \n-int\n+int __attribute__ ((noinline))\n test_vneg_s32 ()\n {\n   int32x2_t a;\n@@ -153,7 +153,7 @@ test_vneg_s32 ()\n \n /* { dg-final { scan-assembler-times \"neg\\\\tv\\[0-9\\]+\\.2s, v\\[0-9\\]+\\.2s\" 4 } } */\n \n-int\n+int __attribute__ ((noinline))\n test_vneg_s64 ()\n {\n   int64x1_t a;\n@@ -189,7 +189,7 @@ test_vneg_s64 ()\n   return 0;\n }\n \n-int\n+int __attribute__ ((noinline))\n test_vnegd_s64 ()\n {\n   int64_t a, b;\n@@ -208,7 +208,7 @@ test_vnegd_s64 ()\n \n /* { dg-final { scan-assembler-times \"neg\\\\td\\[0-9\\]+, d\\[0-9\\]+\" 16 } } */\n \n-int\n+int __attribute__ ((noinline))\n test_vnegq_s8 ()\n {\n   int8x16_t a;\n@@ -231,7 +231,7 @@ test_vnegq_s8 ()\n \n /* { dg-final { scan-assembler-times \"neg\\\\tv\\[0-9\\]+\\.16b, v\\[0-9\\]+\\.16b\" 1 } } */\n \n-int\n+int __attribute__ ((noinline))\n test_vnegq_s16 ()\n {\n   int16x8_t a;\n@@ -251,7 +251,7 @@ test_vnegq_s16 ()\n \n /* { dg-final { scan-assembler-times \"neg\\\\tv\\[0-9\\]+\\.8h, v\\[0-9\\]+\\.8h\" 1 } } */\n \n-int\n+int __attribute__ ((noinline))\n test_vnegq_s32 ()\n {\n   int32x4_t a;\n@@ -271,7 +271,7 @@ test_vnegq_s32 ()\n \n /* { dg-final { scan-assembler-times \"neg\\\\tv\\[0-9\\]+\\.4s, v\\[0-9\\]+\\.4s\" 2 } } */\n \n-int\n+int __attribute__ ((noinline))\n test_vnegq_s64 ()\n {\n   int64x2_t a;"}]}