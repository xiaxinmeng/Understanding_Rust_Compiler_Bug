{"sha": "194d6f3fc91c5642cb2dd9e93379af66d5e71e0c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTk0ZDZmM2ZjOTFjNTY0MmNiMmRkOWU5MzM3OWFmNjZkNWU3MWUwYw==", "commit": {"author": {"name": "Justin Squirek", "email": "squirek@adacore.com", "date": "2016-06-22T10:42:46Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2016-06-22T10:42:46Z"}, "message": "sem_ch8.adb (Push_Scope): Add a check for when the scope table is empty to assign the global variable...\n\n2016-06-22  Justin Squirek  <squirek@adacore.com>\n\n\t* sem_ch8.adb (Push_Scope): Add a check for when the\n\tscope table is empty to assign the global variable\n\tConfiguration_Component_Alignment.\n\t* sem.adb (Do_Analyze): Add Configuration_Component_Alignment\n\tto be assigned when the environment is cleaned instead of the\n\tdefault.\n\t* sem.ads Add a global variable Configuration_Component_Alignment\n\tto store the value given by pragma Component_Alignment in the\n\tcontext of a configuration file.\n\t* sem_prag.adb (Analyze_Pragma): Correct the case for\n\tComponent_Alignment so that the pragma is verified and add\n\tcomments to explain how it is applied to the scope stack.\n\n2016-06-22  Justin Squirek  <squirek@adacore.com>\n\n\t* sprint.adb (Sprint_Node_Actual): Add check in\n\tthe case of an N_Object_Declaration when evaluating an expression\n\tto properly ignore errors.\n\nFrom-SVN: r237694", "tree": {"sha": "c35548449fd5d924b590fb1c7b93d165c5f631a0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c35548449fd5d924b590fb1c7b93d165c5f631a0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/194d6f3fc91c5642cb2dd9e93379af66d5e71e0c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/194d6f3fc91c5642cb2dd9e93379af66d5e71e0c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/194d6f3fc91c5642cb2dd9e93379af66d5e71e0c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/194d6f3fc91c5642cb2dd9e93379af66d5e71e0c/comments", "author": {"login": "AdaDoom3", "id": 3445599, "node_id": "MDQ6VXNlcjM0NDU1OTk=", "avatar_url": "https://avatars.githubusercontent.com/u/3445599?v=4", "gravatar_id": "", "url": "https://api.github.com/users/AdaDoom3", "html_url": "https://github.com/AdaDoom3", "followers_url": "https://api.github.com/users/AdaDoom3/followers", "following_url": "https://api.github.com/users/AdaDoom3/following{/other_user}", "gists_url": "https://api.github.com/users/AdaDoom3/gists{/gist_id}", "starred_url": "https://api.github.com/users/AdaDoom3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/AdaDoom3/subscriptions", "organizations_url": "https://api.github.com/users/AdaDoom3/orgs", "repos_url": "https://api.github.com/users/AdaDoom3/repos", "events_url": "https://api.github.com/users/AdaDoom3/events{/privacy}", "received_events_url": "https://api.github.com/users/AdaDoom3/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "d1aea5ddc5c0667762f8e0138c60199ba0f31fe2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d1aea5ddc5c0667762f8e0138c60199ba0f31fe2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d1aea5ddc5c0667762f8e0138c60199ba0f31fe2"}], "stats": {"total": 63, "additions": 58, "deletions": 5}, "files": [{"sha": "82d33d026bb7b150716a3b2ce010a38cc8f47315", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/194d6f3fc91c5642cb2dd9e93379af66d5e71e0c/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/194d6f3fc91c5642cb2dd9e93379af66d5e71e0c/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=194d6f3fc91c5642cb2dd9e93379af66d5e71e0c", "patch": "@@ -1,3 +1,24 @@\n+2016-06-22  Justin Squirek  <squirek@adacore.com>\n+\n+\t* sem_ch8.adb (Push_Scope): Add a check for when the\n+\tscope table is empty to assign the global variable\n+\tConfiguration_Component_Alignment.\n+\t* sem.adb (Do_Analyze): Add Configuration_Component_Alignment\n+\tto be assigned when the environment is cleaned instead of the\n+\tdefault.\n+\t* sem.ads Add a global variable Configuration_Component_Alignment\n+\tto store the value given by pragma Component_Alignment in the\n+\tcontext of a configuration file.\n+\t* sem_prag.adb (Analyze_Pragma): Correct the case for\n+\tComponent_Alignment so that the pragma is verified and add\n+\tcomments to explain how it is applied to the scope stack.\n+\n+2016-06-22  Justin Squirek  <squirek@adacore.com>\n+\n+\t* sprint.adb (Sprint_Node_Actual): Add check in\n+\tthe case of an N_Object_Declaration when evaluating an expression\n+\tto properly ignore errors.\n+\n 2016-06-22  Bob Duff  <duff@adacore.com>\n \n \t* g-comlin.ads (Parameter_Type): Change subtype of Last to"}, {"sha": "ea5f4741727d4d82d1ba1723a3dc96259682dbc0", "filename": "gcc/ada/sem.adb", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/194d6f3fc91c5642cb2dd9e93379af66d5e71e0c/gcc%2Fada%2Fsem.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/194d6f3fc91c5642cb2dd9e93379af66d5e71e0c/gcc%2Fada%2Fsem.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem.adb?ref=194d6f3fc91c5642cb2dd9e93379af66d5e71e0c", "patch": "@@ -1355,7 +1355,8 @@ package body Sem is\n          Outer_Generic_Scope := Empty;\n          Scope_Suppress      := Suppress_Options;\n          Scope_Stack.Table\n-           (Scope_Stack.Last).Component_Alignment_Default := Calign_Default;\n+           (Scope_Stack.Last).Component_Alignment_Default :=\n+             Configuration_Component_Alignment;\n          Scope_Stack.Table\n            (Scope_Stack.Last).Is_Active_Stack_Base := True;\n "}, {"sha": "f9c2dadabf3fefb1489aca96a1a9ae34125d3883", "filename": "gcc/ada/sem.ads", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/194d6f3fc91c5642cb2dd9e93379af66d5e71e0c/gcc%2Fada%2Fsem.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/194d6f3fc91c5642cb2dd9e93379af66d5e71e0c/gcc%2Fada%2Fsem.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem.ads?ref=194d6f3fc91c5642cb2dd9e93379af66d5e71e0c", "patch": "@@ -461,6 +461,11 @@ package Sem is\n    --  Transient blocks have three associated actions list, to be inserted\n    --  before and after the block's statements, and as cleanup actions.\n \n+   Configuration_Component_Alignment : Component_Alignment_Kind :=\n+                                         Calign_Default;\n+   --  Used for handling the pragma Component_Alignment in the context of a\n+   --  configuration file.\n+\n    type Scope_Stack_Entry is record\n       Entity : Entity_Id;\n       --  Entity representing the scope"}, {"sha": "0c5860b81d94682f22822b79df6932d34bb859c1", "filename": "gcc/ada/sem_ch8.adb", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/194d6f3fc91c5642cb2dd9e93379af66d5e71e0c/gcc%2Fada%2Fsem_ch8.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/194d6f3fc91c5642cb2dd9e93379af66d5e71e0c/gcc%2Fada%2Fsem_ch8.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch8.adb?ref=194d6f3fc91c5642cb2dd9e93379af66d5e71e0c", "patch": "@@ -8192,10 +8192,22 @@ package body Sem_Ch8 is\n          SST.Save_Default_SSO              := Default_SSO;\n          SST.Save_Uneval_Old               := Uneval_Old;\n \n+         --  Each new scope pushed onto the scope stack inherits the component\n+         --  alignment of the previous scope. This emulates the \"visibility\"\n+         --  semantics of pragma Component_Alignment.\n+\n          if Scope_Stack.Last > Scope_Stack.First then\n             SST.Component_Alignment_Default := Scope_Stack.Table\n                                                  (Scope_Stack.Last - 1).\n                                                    Component_Alignment_Default;\n+\n+         --  Otherwise, this is the first scope being pushed on the scope\n+         --  stack. Inherit the component alignment from the configuration\n+         --  form of pragma Component_Alignment (if any).\n+\n+         else\n+            SST.Component_Alignment_Default :=\n+              Configuration_Component_Alignment;\n          end if;\n \n          SST.Last_Subprogram_Name           := null;"}, {"sha": "d17dee2aefa0d43f4077fd0c116f3e36a886a5e9", "filename": "gcc/ada/sem_prag.adb", "status": "modified", "additions": 14, "deletions": 2, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/194d6f3fc91c5642cb2dd9e93379af66d5e71e0c/gcc%2Fada%2Fsem_prag.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/194d6f3fc91c5642cb2dd9e93379af66d5e71e0c/gcc%2Fada%2Fsem_prag.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_prag.adb?ref=194d6f3fc91c5642cb2dd9e93379af66d5e71e0c", "patch": "@@ -12787,9 +12787,21 @@ package body Sem_Prag is\n                  (\"invalid Form parameter for pragma%\", Form);\n             end if;\n \n+            --  The pragma appears in a configuration file\n+\n+            if No (Parent (N)) then\n+               Check_Valid_Configuration_Pragma;\n+\n+               --  Capture the component alignment in a global variable when\n+               --  the pragma appears in a configuration file. Note that the\n+               --  scope stack is empty at this point and cannot be used to\n+               --  store the alignment value.\n+\n+               Configuration_Component_Alignment := Atype;\n+\n             --  Case with no name, supplied, affects scope table entry\n \n-            if No (Name) then\n+            elsif No (Name) then\n                Scope_Stack.Table\n                  (Scope_Stack.Last).Component_Alignment_Default := Atype;\n \n@@ -20901,7 +20913,7 @@ package body Sem_Prag is\n             Mode_Id := Get_SPARK_Mode_Type (Mode);\n             Context := Parent (N);\n \n-            --  The pragma appears in a configuration pragmas file\n+            --  The pragma appears in a configuration file\n \n             if No (Context) then\n                Check_Valid_Configuration_Pragma;"}, {"sha": "0185719b795991c64e641f9a59db2825a13e535e", "filename": "gcc/ada/sprint.adb", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/194d6f3fc91c5642cb2dd9e93379af66d5e71e0c/gcc%2Fada%2Fsprint.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/194d6f3fc91c5642cb2dd9e93379af66d5e71e0c/gcc%2Fada%2Fsprint.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsprint.adb?ref=194d6f3fc91c5642cb2dd9e93379af66d5e71e0c", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2015, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2016, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -2385,7 +2385,9 @@ package body Sprint is\n                      end if;\n                   end;\n \n-                  if Present (Expression (Node)) then\n+                  if Present (Expression (Node))\n+                    and then Expression (Node) /= Error\n+                  then\n                      Write_Str (\" := \");\n                      Sprint_Node (Expression (Node));\n                   end if;"}]}