{"sha": "33e8e0ee4cd185f5073546fed2199c6ec76933ca", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzNlOGUwZWU0Y2QxODVmNTA3MzU0NmZlZDIxOTljNmVjNzY5MzNjYQ==", "commit": {"author": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2019-08-09T12:06:30Z"}, "committer": {"name": "Martin Liska", "email": "marxin@gcc.gnu.org", "date": "2019-08-09T12:06:30Z"}, "message": "Strengthen alias_ptr_types_compatible_p in LTO mode.\n\n2019-08-09  Martin Liska  <mliska@suse.cz>\n\n\t* alias.c (alias_ptr_types_compatible_p): Strengten\n\ttype comparison in LTO mode.\n\nFrom-SVN: r274235", "tree": {"sha": "287e6e2239474fa8a4b2fc2ff69e4bb973982fee", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/287e6e2239474fa8a4b2fc2ff69e4bb973982fee"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/33e8e0ee4cd185f5073546fed2199c6ec76933ca", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/33e8e0ee4cd185f5073546fed2199c6ec76933ca", "html_url": "https://github.com/Rust-GCC/gccrs/commit/33e8e0ee4cd185f5073546fed2199c6ec76933ca", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/33e8e0ee4cd185f5073546fed2199c6ec76933ca/comments", "author": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "97bf048c04d93ba1e0265893fdb06f8991c149f7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/97bf048c04d93ba1e0265893fdb06f8991c149f7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/97bf048c04d93ba1e0265893fdb06f8991c149f7"}], "stats": {"total": 17, "additions": 15, "deletions": 2}, "files": [{"sha": "e9fd0786a465541d21accd0a7bb981ed6288e7b3", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/33e8e0ee4cd185f5073546fed2199c6ec76933ca/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/33e8e0ee4cd185f5073546fed2199c6ec76933ca/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=33e8e0ee4cd185f5073546fed2199c6ec76933ca", "patch": "@@ -1,3 +1,8 @@\n+2019-08-09  Martin Liska  <mliska@suse.cz>\n+\n+\t* alias.c (alias_ptr_types_compatible_p): Strengten\n+\ttype comparison in LTO mode.\n+\n 2019-08-09  Richard Sandiford  <richard.sandiford@arm.com>\n \n \tPR middle-end/90313"}, {"sha": "1579dfa68a7b16cc6563a5dfe1bdf39cd8a8c9c9", "filename": "gcc/alias.c", "status": "modified", "additions": 10, "deletions": 2, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/33e8e0ee4cd185f5073546fed2199c6ec76933ca/gcc%2Falias.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/33e8e0ee4cd185f5073546fed2199c6ec76933ca/gcc%2Falias.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Falias.c?ref=33e8e0ee4cd185f5073546fed2199c6ec76933ca", "patch": "@@ -793,8 +793,16 @@ alias_ptr_types_compatible_p (tree t1, tree t2)\n       || ref_all_alias_ptr_type_p (t2))\n     return false;\n \n-  return (TYPE_MAIN_VARIANT (TREE_TYPE (t1))\n-\t  == TYPE_MAIN_VARIANT (TREE_TYPE (t2)));\n+    /* This function originally abstracts from simply comparing\n+       get_deref_alias_set so that we are sure this still computes\n+       the same result after LTO type merging is applied.\n+       When in LTO type merging is done we can actually do this compare.\n+    */\n+  if (in_lto_p)\n+    return get_deref_alias_set (t1) == get_deref_alias_set (t2);\n+  else\n+    return (TYPE_MAIN_VARIANT (TREE_TYPE (t1))\n+\t    == TYPE_MAIN_VARIANT (TREE_TYPE (t2)));\n }\n \n /* Create emptry alias set entry.  */"}]}