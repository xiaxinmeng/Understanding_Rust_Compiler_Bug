{"sha": "0ebdf3ae98f374c2270d92b19d6d3465422fbe4f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MGViZGYzYWU5OGYzNzRjMjI3MGQ5MmIxOWQ2ZDM0NjU0MjJmYmU0Zg==", "commit": {"author": {"name": "Tobias Burnus", "email": "burnus@net-b.de", "date": "2013-09-16T18:01:59Z"}, "committer": {"name": "Tobias Burnus", "email": "burnus@gcc.gnu.org", "date": "2013-09-16T18:01:59Z"}, "message": "re PR fortran/58356 (ICE with finalization and type extension)\n\n2013-09-16  Tobias Burnus  <burnus@net-b.de>\n\n        PR fortran/58356\n        * class.c (generate_finalization_wrapper): Init proc_tree if\n        not yet resolved.\n\n2013-09-16  Tobias Burnus  <burnus@net-b.de>\n\n        PR fortran/58356\n        * gfortran.dg/finalize_19.f90: New.\n\nFrom-SVN: r202633", "tree": {"sha": "4873887ffd5e7ca0875b3caf0d6c7e56987f0e4a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4873887ffd5e7ca0875b3caf0d6c7e56987f0e4a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0ebdf3ae98f374c2270d92b19d6d3465422fbe4f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0ebdf3ae98f374c2270d92b19d6d3465422fbe4f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0ebdf3ae98f374c2270d92b19d6d3465422fbe4f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0ebdf3ae98f374c2270d92b19d6d3465422fbe4f/comments", "author": {"login": "tob2", "id": 264461, "node_id": "MDQ6VXNlcjI2NDQ2MQ==", "avatar_url": "https://avatars.githubusercontent.com/u/264461?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tob2", "html_url": "https://github.com/tob2", "followers_url": "https://api.github.com/users/tob2/followers", "following_url": "https://api.github.com/users/tob2/following{/other_user}", "gists_url": "https://api.github.com/users/tob2/gists{/gist_id}", "starred_url": "https://api.github.com/users/tob2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tob2/subscriptions", "organizations_url": "https://api.github.com/users/tob2/orgs", "repos_url": "https://api.github.com/users/tob2/repos", "events_url": "https://api.github.com/users/tob2/events{/privacy}", "received_events_url": "https://api.github.com/users/tob2/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "a5bd71fa0e4e2b3063896e979f888e1296d60b4e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a5bd71fa0e4e2b3063896e979f888e1296d60b4e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a5bd71fa0e4e2b3063896e979f888e1296d60b4e"}], "stats": {"total": 34, "additions": 34, "deletions": 0}, "files": [{"sha": "37c59506e54099cbd05e76a9c26430f561712a10", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0ebdf3ae98f374c2270d92b19d6d3465422fbe4f/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0ebdf3ae98f374c2270d92b19d6d3465422fbe4f/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=0ebdf3ae98f374c2270d92b19d6d3465422fbe4f", "patch": "@@ -1,3 +1,9 @@\n+2013-09-16  Tobias Burnus  <burnus@net-b.de>\n+\n+\tPR fortran/58356\n+\t* class.c (generate_finalization_wrapper): Init proc_tree if\n+\tnot yet resolved.\n+\n 2013-09-16  Tobias Burnus  <burnus@net-b.de>\n \n \tPR fortran/57697"}, {"sha": "7117e8361564e174db90d3c65eaf0c1d75e80f6a", "filename": "gcc/fortran/class.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0ebdf3ae98f374c2270d92b19d6d3465422fbe4f/gcc%2Ffortran%2Fclass.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0ebdf3ae98f374c2270d92b19d6d3465422fbe4f/gcc%2Ffortran%2Fclass.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fclass.c?ref=0ebdf3ae98f374c2270d92b19d6d3465422fbe4f", "patch": "@@ -1881,6 +1881,8 @@ generate_finalization_wrapper (gfc_symbol *derived, gfc_namespace *ns,\n \n       for (fini = derived->f2k_derived->finalizers; fini; fini = fini->next)\n \t{\n+\t  if (!fini->proc_tree)\n+\t    fini->proc_tree = gfc_find_sym_in_symtree (fini->proc_sym);\n \t  if (fini->proc_tree->n.sym->attr.elemental)\n \t    {\n \t      fini_elem = fini;"}, {"sha": "f606965c88d84e2227fad9ef1eecdc03be1eafa8", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0ebdf3ae98f374c2270d92b19d6d3465422fbe4f/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0ebdf3ae98f374c2270d92b19d6d3465422fbe4f/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=0ebdf3ae98f374c2270d92b19d6d3465422fbe4f", "patch": "@@ -1,3 +1,8 @@\n+2013-09-16  Tobias Burnus  <burnus@net-b.de>\n+\n+\tPR fortran/58356\n+\t* gfortran.dg/finalize_19.f90: New.\n+\n 2013-09-16  Vladimir Makarov  <vmakarov@redhat.com>\n \n \t* gcc.target/i386/pr58418.c: New."}, {"sha": "1eeb6af658e30d89d1ca2c63cd611fa2f7fbb553", "filename": "gcc/testsuite/gfortran.dg/finalize_19.f90", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0ebdf3ae98f374c2270d92b19d6d3465422fbe4f/gcc%2Ftestsuite%2Fgfortran.dg%2Ffinalize_19.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0ebdf3ae98f374c2270d92b19d6d3465422fbe4f/gcc%2Ftestsuite%2Fgfortran.dg%2Ffinalize_19.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Ffinalize_19.f90?ref=0ebdf3ae98f374c2270d92b19d6d3465422fbe4f", "patch": "@@ -0,0 +1,21 @@\n+! { dg-do compile }\n+!\n+! PR fortran/58356\n+!\n+! Contributed by Andrew Benson\n+!\n+module ct\n+  type :: cfl\n+   contains\n+     final :: cfld\n+  end type cfl\n+  type, extends(cfl) :: cfde\n+   contains\n+  end type cfde\n+contains\n+  subroutine cfld(self)\n+    implicit none\n+    type(cfl), intent(inout) :: self\n+    return\n+  end subroutine cfld\n+end module ct"}]}