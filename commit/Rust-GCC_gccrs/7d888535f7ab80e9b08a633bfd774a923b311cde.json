{"sha": "7d888535f7ab80e9b08a633bfd774a923b311cde", "node_id": "C_kwDOANBUbNoAKDdkODg4NTM1ZjdhYjgwZTliMDhhNjMzYmZkNzc0YTkyM2IzMTFjZGU", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2022-10-25T08:39:20Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2022-10-25T08:39:20Z"}, "message": "gimplify: Don't add GIMPLE_ASSUME if errors were seen [PR107369]\n\nThe FEs emit errors about jumps into assume attribute conditions,\nbut when we add GIMPLE_ASSUME for the condition which is reachable\nthrough those jumps, we can run into cfg verification diagnostics.\n\nFixed by throwing the IFN_ASSUME away during gimplification if\nseen_error () - like we already do for -O0.  GIMPLE_ASSUME in the middle-end\nis a pure optimization thing and if errors were reported, the optimizations\nwill not be beneficial for anything.\n\n2022-10-25  Jakub Jelinek  <jakub@redhat.com>\n\n\tPR tree-optimization/107369\n\t* gimplify.cc (gimplify_call_expr): If seen_error, handle complex\n\tIFN_ASSUME the same as for -O0.\n\n\t* gcc.dg/attr-assume-4.c: New test.\n\t* g++.dg/cpp23/attr-assume8.C: New test.", "tree": {"sha": "5f61b07097071bb42a178ca4b8677eb0a427d96f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5f61b07097071bb42a178ca4b8677eb0a427d96f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7d888535f7ab80e9b08a633bfd774a923b311cde", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7d888535f7ab80e9b08a633bfd774a923b311cde", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7d888535f7ab80e9b08a633bfd774a923b311cde", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7d888535f7ab80e9b08a633bfd774a923b311cde/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "354c97ee05b23707efbfc7ff6640dcec7336ac7a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/354c97ee05b23707efbfc7ff6640dcec7336ac7a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/354c97ee05b23707efbfc7ff6640dcec7336ac7a"}], "stats": {"total": 26, "additions": 25, "deletions": 1}, "files": [{"sha": "44cc9e6677ba124321e79ee1205663a31bace626", "filename": "gcc/gimplify.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7d888535f7ab80e9b08a633bfd774a923b311cde/gcc%2Fgimplify.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7d888535f7ab80e9b08a633bfd774a923b311cde/gcc%2Fgimplify.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgimplify.cc?ref=7d888535f7ab80e9b08a633bfd774a923b311cde", "patch": "@@ -3568,7 +3568,7 @@ gimplify_call_expr (tree *expr_p, gimple_seq *pre_p, bool want_value)\n \t      return GS_OK;\n \t    }\n \t  /* If not optimizing, ignore the assumptions.  */\n-\t  if (!optimize)\n+\t  if (!optimize || seen_error ())\n \t    {\n \t      *expr_p = NULL_TREE;\n \t      return GS_ALL_DONE;"}, {"sha": "3c7a62f7fc4e941b7993e0ad0e79a18fe72bcfaf", "filename": "gcc/testsuite/g++.dg/cpp23/attr-assume8.C", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7d888535f7ab80e9b08a633bfd774a923b311cde/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp23%2Fattr-assume8.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7d888535f7ab80e9b08a633bfd774a923b311cde/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp23%2Fattr-assume8.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp23%2Fattr-assume8.C?ref=7d888535f7ab80e9b08a633bfd774a923b311cde", "patch": "@@ -0,0 +1,12 @@\n+// PR tree-optimization/107369\n+// { dg-do compile { target c++11 } }\n+// { dg-options \"-O1\" }\n+\n+void\n+foo (int x)\n+{\n+  if (x == 1)\n+    goto l1;\t\t\t// { dg-message \"from here\" }\n+\n+  [[assume (({ l1:; 1; }))]];\t// { dg-error \"jump to label 'l1'\" }\n+}\t\t\t\t// { dg-message \"enters statement expression\" \"\" { target *-*-* } .-1 }"}, {"sha": "e8a2b8d316c634520d5adc2fd7116d97ed5b6974", "filename": "gcc/testsuite/gcc.dg/attr-assume-4.c", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7d888535f7ab80e9b08a633bfd774a923b311cde/gcc%2Ftestsuite%2Fgcc.dg%2Fattr-assume-4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7d888535f7ab80e9b08a633bfd774a923b311cde/gcc%2Ftestsuite%2Fgcc.dg%2Fattr-assume-4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fattr-assume-4.c?ref=7d888535f7ab80e9b08a633bfd774a923b311cde", "patch": "@@ -0,0 +1,12 @@\n+/* PR tree-optimization/107369 */\n+/* { dg-do compile } */\n+/* { dg-options \"-std=c2x -O1\" } */\n+\n+void\n+foo (int x)\n+{\n+  if (x == 1)\n+    goto l1;\t\t\t\t/* { dg-error \"jump into statement expression\" } */\n+\n+  [[gnu::assume (({ l1:; 1; }))]];\t/* { dg-message \"label 'l1' defined here\" } */\n+}"}]}