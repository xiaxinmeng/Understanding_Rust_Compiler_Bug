{"sha": "0a45ec5c78e634e129fe3e9bbcddf6b721a10ca8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MGE0NWVjNWM3OGU2MzRlMTI5ZmUzZTliYmNkZGY2YjcyMWExMGNhOA==", "commit": {"author": {"name": "Roger Sayle", "email": "roger@eyesopen.com", "date": "2003-04-20T03:11:14Z"}, "committer": {"name": "Roger Sayle", "email": "sayle@gcc.gnu.org", "date": "2003-04-20T03:11:14Z"}, "message": "builtins.c (expand_builtin): Don't expand a pure or const built-in function if...\n\n\n\t* builtins.c (expand_builtin):  Don't expand a pure or const\n\tbuilt-in function if the result will be ignored and none of\n\tits arguments are volatile.\n\nFrom-SVN: r65843", "tree": {"sha": "d3c6dc4d970337ee030f7fda0105a2d638d5ef0e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d3c6dc4d970337ee030f7fda0105a2d638d5ef0e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0a45ec5c78e634e129fe3e9bbcddf6b721a10ca8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0a45ec5c78e634e129fe3e9bbcddf6b721a10ca8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0a45ec5c78e634e129fe3e9bbcddf6b721a10ca8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0a45ec5c78e634e129fe3e9bbcddf6b721a10ca8/comments", "author": null, "committer": null, "parents": [{"sha": "4049c77a01ab09b2b8bf59bd71a873ba672bcf86", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4049c77a01ab09b2b8bf59bd71a873ba672bcf86", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4049c77a01ab09b2b8bf59bd71a873ba672bcf86"}], "stats": {"total": 36, "additions": 36, "deletions": 0}, "files": [{"sha": "8d73923524137a7e6efa02eaaacc40124b5d92c8", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0a45ec5c78e634e129fe3e9bbcddf6b721a10ca8/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0a45ec5c78e634e129fe3e9bbcddf6b721a10ca8/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=0a45ec5c78e634e129fe3e9bbcddf6b721a10ca8", "patch": "@@ -1,3 +1,9 @@\n+2003-04-19  Roger Sayle  <roger@eyesopen.com>\n+\n+\t* builtins.c (expand_builtin):  Don't expand a pure or const\n+\tbuilt-in function if the result will be ignored and none of\n+\tits arguments are volatile.\n+\n 2003-04-19  Kean Johnston  <jkj@sco.com>\n \n \t* unwind-dw2.c (_Unwind_GetCFA): cast return to avoid warning"}, {"sha": "87437d0e657fd095a3c87986f100aceaf4d98cc2", "filename": "gcc/builtins.c", "status": "modified", "additions": 30, "deletions": 0, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0a45ec5c78e634e129fe3e9bbcddf6b721a10ca8/gcc%2Fbuiltins.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0a45ec5c78e634e129fe3e9bbcddf6b721a10ca8/gcc%2Fbuiltins.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fbuiltins.c?ref=0a45ec5c78e634e129fe3e9bbcddf6b721a10ca8", "patch": "@@ -4139,6 +4139,36 @@ expand_builtin (exp, target, subtarget, mode, ignore)\n \tbreak;\n       }\n \n+  /* The built-in function expanders test for target == const0_rtx\n+     to determine whether the function's result will be ignored.  */\n+  if (ignore)\n+    target = const0_rtx;\n+\n+  /* If the result of a pure or const built-in function is ignored, and\n+     none of its arguments are volatile, we can avoid expanding the\n+     built-in call and just evaluate the arguments for side-effects.  */\n+  if (target == const0_rtx\n+      && (DECL_IS_PURE (fndecl) || TREE_READONLY (fndecl)))\n+    {\n+      bool volatilep = false;\n+      tree arg;\n+\n+      for (arg = arglist; arg; arg = TREE_CHAIN (arg))\n+\tif (TREE_THIS_VOLATILE (TREE_VALUE (arg)))\n+\t  {\n+\t    volatilep = true;\n+\t    break;\n+\t  }\n+\n+      if (! volatilep)\n+\t{\n+\t  for (arg = arglist; arg; arg = TREE_CHAIN (arg))\n+\t    expand_expr (TREE_VALUE (arg), const0_rtx,\n+\t\t\t VOIDmode, EXPAND_NORMAL);\n+\t  return const0_rtx;\n+\t}\n+    }\n+\n   switch (fcode)\n     {\n     case BUILT_IN_ABS:"}]}