{"sha": "af27d545dc6132dcd67d1ee854372ea9cfd2a225", "node_id": "C_kwDOANBUbNoAKGFmMjdkNTQ1ZGM2MTMyZGNkNjdkMWVlODU0MzcyZWE5Y2ZkMmEyMjU", "commit": {"author": {"name": "Ian Lance Taylor", "email": "iant@golang.org", "date": "2022-04-13T21:37:12Z"}, "committer": {"name": "Ian Lance Taylor", "email": "iant@golang.org", "date": "2022-04-14T22:14:57Z"}, "message": "runtime: use regset indexes for PPC register values\n\nUsing names depended on <asm/ptrace.h>, which glibc includes somewhere\nbut musl did not.  Change to just always use indexes.\n\nBased on patch by S\u00f6ren Tempel.\n\nReviewed-on: https://go-review.googlesource.com/c/gofrontend/+/400214", "tree": {"sha": "34f5a8d6237e26070a1a11ac96ca1a13555ec515", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/34f5a8d6237e26070a1a11ac96ca1a13555ec515"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/af27d545dc6132dcd67d1ee854372ea9cfd2a225", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/af27d545dc6132dcd67d1ee854372ea9cfd2a225", "html_url": "https://github.com/Rust-GCC/gccrs/commit/af27d545dc6132dcd67d1ee854372ea9cfd2a225", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/af27d545dc6132dcd67d1ee854372ea9cfd2a225/comments", "author": {"login": "ianlancetaylor", "id": 3194333, "node_id": "MDQ6VXNlcjMxOTQzMzM=", "avatar_url": "https://avatars.githubusercontent.com/u/3194333?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ianlancetaylor", "html_url": "https://github.com/ianlancetaylor", "followers_url": "https://api.github.com/users/ianlancetaylor/followers", "following_url": "https://api.github.com/users/ianlancetaylor/following{/other_user}", "gists_url": "https://api.github.com/users/ianlancetaylor/gists{/gist_id}", "starred_url": "https://api.github.com/users/ianlancetaylor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ianlancetaylor/subscriptions", "organizations_url": "https://api.github.com/users/ianlancetaylor/orgs", "repos_url": "https://api.github.com/users/ianlancetaylor/repos", "events_url": "https://api.github.com/users/ianlancetaylor/events{/privacy}", "received_events_url": "https://api.github.com/users/ianlancetaylor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ianlancetaylor", "id": 3194333, "node_id": "MDQ6VXNlcjMxOTQzMzM=", "avatar_url": "https://avatars.githubusercontent.com/u/3194333?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ianlancetaylor", "html_url": "https://github.com/ianlancetaylor", "followers_url": "https://api.github.com/users/ianlancetaylor/followers", "following_url": "https://api.github.com/users/ianlancetaylor/following{/other_user}", "gists_url": "https://api.github.com/users/ianlancetaylor/gists{/gist_id}", "starred_url": "https://api.github.com/users/ianlancetaylor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ianlancetaylor/subscriptions", "organizations_url": "https://api.github.com/users/ianlancetaylor/orgs", "repos_url": "https://api.github.com/users/ianlancetaylor/repos", "events_url": "https://api.github.com/users/ianlancetaylor/events{/privacy}", "received_events_url": "https://api.github.com/users/ianlancetaylor/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c5de3444c4798758cdd800eca144480b4a8ef299", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c5de3444c4798758cdd800eca144480b4a8ef299", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c5de3444c4798758cdd800eca144480b4a8ef299"}], "stats": {"total": 27, "additions": 11, "deletions": 16}, "files": [{"sha": "75ee2e3aaca6957f64bf0674a399768ed3815b3a", "filename": "gcc/go/gofrontend/MERGE", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/af27d545dc6132dcd67d1ee854372ea9cfd2a225/gcc%2Fgo%2Fgofrontend%2FMERGE", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/af27d545dc6132dcd67d1ee854372ea9cfd2a225/gcc%2Fgo%2Fgofrontend%2FMERGE", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgo%2Fgofrontend%2FMERGE?ref=af27d545dc6132dcd67d1ee854372ea9cfd2a225", "patch": "@@ -1,4 +1,4 @@\n-45108f37070afb696b069768700e39a269f1fecb\n+323ab0e6fab89978bdbd83dca9c2ad9c5dcd690f\n \n The first line of this file holds the git revision number of the last\n merge done from the gofrontend repository."}, {"sha": "2caddd068d6083eec90291325b61d164c9c908db", "filename": "libgo/runtime/go-signal.c", "status": "modified", "additions": 10, "deletions": 15, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/af27d545dc6132dcd67d1ee854372ea9cfd2a225/libgo%2Fruntime%2Fgo-signal.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/af27d545dc6132dcd67d1ee854372ea9cfd2a225/libgo%2Fruntime%2Fgo-signal.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fruntime%2Fgo-signal.c?ref=af27d545dc6132dcd67d1ee854372ea9cfd2a225", "patch": "@@ -230,15 +230,10 @@ getSiginfo(siginfo_t *info, void *context __attribute__((unused)))\n \tret.sigpc = ((ucontext_t*)(context))->uc_mcontext.gregs[REG_EIP];\n #elif defined(__alpha__) && defined(__linux__)\n \tret.sigpc = ((ucontext_t*)(context))->uc_mcontext.sc_pc;\n+#elif defined(__PPC64__) && defined(__linux__)\n+\tret.sigpc = ((ucontext_t*)(context))->uc_mcontext.gp_regs[32];\n #elif defined(__PPC__) && defined(__linux__)\n-\t// For some reason different libc implementations use\n-\t// different names.\n-#if defined(__PPC64__) || defined(__GLIBC__)\n-\tret.sigpc = ((ucontext_t*)(context))->uc_mcontext.regs->nip;\n-#else\n-\t// Assumed to be ppc32 musl.\n \tret.sigpc = ((ucontext_t*)(context))->uc_mcontext.gregs[32];\n-#endif\n #elif defined(__PPC__) && defined(_AIX)\n \tret.sigpc = ((ucontext_t*)(context))->uc_mcontext.jmp_context.iar;\n #elif defined(__aarch64__) && defined(__linux__)\n@@ -354,15 +349,15 @@ dumpregs(siginfo_t *info __attribute__((unused)), void *context __attribute__((u\n \t\tmcontext_t *m = &((ucontext_t*)(context))->uc_mcontext;\n \t\tint i;\n \n-#if defined(__PPC64__) || defined(__GLIBC__)\n+#if defined(__PPC64__)\n \t\tfor (i = 0; i < 32; i++)\n-\t\t\truntime_printf(\"r%d %X\\n\", i, m->regs->gpr[i]);\n-\t\truntime_printf(\"pc  %X\\n\", m->regs->nip);\n-\t\truntime_printf(\"msr %X\\n\", m->regs->msr);\n-\t\truntime_printf(\"cr  %X\\n\", m->regs->ccr);\n-\t\truntime_printf(\"lr  %X\\n\", m->regs->link);\n-\t\truntime_printf(\"ctr %X\\n\", m->regs->ctr);\n-\t\truntime_printf(\"xer %X\\n\", m->regs->xer);\n+\t\t\truntime_printf(\"r%d %X\\n\", i, m->gp_regs[i]);\n+\t\truntime_printf(\"pc  %X\\n\", m->gp_regs[32]);\n+\t\truntime_printf(\"msr %X\\n\", m->gp_regs[33]);\n+\t\truntime_printf(\"cr  %X\\n\", m->gp_regs[38]);\n+\t\truntime_printf(\"lr  %X\\n\", m->gp_regs[36]);\n+\t\truntime_printf(\"ctr %X\\n\", m->gp_regs[35]);\n+\t\truntime_printf(\"xer %X\\n\", m->gp_regs[37]);\n #else\n \t\tfor (i = 0; i < 32; i++)\n \t\t\truntime_printf(\"r%d %X\\n\", i, m->gregs[i]);"}]}