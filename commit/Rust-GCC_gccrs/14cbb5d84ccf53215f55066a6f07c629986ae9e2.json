{"sha": "14cbb5d84ccf53215f55066a6f07c629986ae9e2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTRjYmI1ZDg0Y2NmNTMyMTVmNTUwNjZhNmYwN2M2Mjk5ODZhZTllMg==", "commit": {"author": {"name": "Fran\u00e7ois Dumont", "email": "fdumont@gcc.gnu.org", "date": "2012-10-18T19:50:37Z"}, "committer": {"name": "Fran\u00e7ois Dumont", "email": "fdumont@gcc.gnu.org", "date": "2012-10-18T19:50:37Z"}, "message": "formatter.h (_Debug_msg_id): Add __msg_valid_load_factor.\n\n2012-10-18  Fran\u00e7ois Dumont  <fdumont@gcc.gnu.org>\n\n\t* include/debug/formatter.h (_Debug_msg_id): Add\n\t__msg_valid_load_factor.\n\t* include/debug/macros.h (__glibcxx_check_max_load_factor): New.\n\t* include/debug/unordered_set\n\t(unordered_set<>::max_load_factor(float)): Check max load factor\n\tis positive.\n\t(unordered_multiset<>::max_load_factor(float)): Likewise.\n\t* include/debug/unordered_map\n\t(unordered_map<>::max_load_factor(float)): Likewise.\n\t(unordered_multimap<>::max_load_factor(float)): Likewise.\n\t* testsuite/23_containers/unordered_map/debug/max_load_factor_neg.cc:\n\tNew.\n\t* testsuite/23_containers/unordered_multimap/debug/\n\tmax_load_factor_neg.cc: New.\n\t* testsuite/23_containers/unordered_set/debug/max_load_factor_neg.cc:\n\tNew.\n\t* testsuite/23_containers/unordered_multiset/debug/\n\tmax_load_factor_neg.cc: New.\n\nFrom-SVN: r192575", "tree": {"sha": "34bf4a9562ff07a024989aa0df8e2fe4da90b296", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/34bf4a9562ff07a024989aa0df8e2fe4da90b296"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/14cbb5d84ccf53215f55066a6f07c629986ae9e2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/14cbb5d84ccf53215f55066a6f07c629986ae9e2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/14cbb5d84ccf53215f55066a6f07c629986ae9e2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/14cbb5d84ccf53215f55066a6f07c629986ae9e2/comments", "author": null, "committer": null, "parents": [{"sha": "67e4210bf18a6ec35b00159b486f40f24dc02c36", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/67e4210bf18a6ec35b00159b486f40f24dc02c36", "html_url": "https://github.com/Rust-GCC/gccrs/commit/67e4210bf18a6ec35b00159b486f40f24dc02c36"}], "stats": {"total": 215, "additions": 212, "deletions": 3}, "files": [{"sha": "fabcbc73925f259bccf8296362815b236d7df0ce", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/14cbb5d84ccf53215f55066a6f07c629986ae9e2/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/14cbb5d84ccf53215f55066a6f07c629986ae9e2/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=14cbb5d84ccf53215f55066a6f07c629986ae9e2", "patch": "@@ -1,3 +1,24 @@\n+2012-10-18  Fran\u00e7ois Dumont  <fdumont@gcc.gnu.org>\n+\n+\t* include/debug/formatter.h (_Debug_msg_id): Add\n+\t__msg_valid_load_factor.\n+\t* include/debug/macros.h (__glibcxx_check_max_load_factor): New.\n+\t* include/debug/unordered_set\n+\t(unordered_set<>::max_load_factor(float)): Check max load factor\n+\tis positive.\n+\t(unordered_multiset<>::max_load_factor(float)): Likewise.\n+\t* include/debug/unordered_map\n+\t(unordered_map<>::max_load_factor(float)): Likewise.\n+\t(unordered_multimap<>::max_load_factor(float)): Likewise.\n+\t* testsuite/23_containers/unordered_map/debug/max_load_factor_neg.cc:\n+\tNew.\n+\t* testsuite/23_containers/unordered_multimap/debug/\n+\tmax_load_factor_neg.cc: New.\n+\t* testsuite/23_containers/unordered_set/debug/max_load_factor_neg.cc:\n+\tNew.\n+\t* testsuite/23_containers/unordered_multiset/debug/\n+\tmax_load_factor_neg.cc: New.\n+\n 2012-10-17  Benjamin Kosnik  <bkoz@redhat.com>\n \n \t* include/bits/move.h (move_if_noexcept): Mark constexpr."}, {"sha": "1d29d8ce55a4fedc2a409f7d79f641751b9c0ee1", "filename": "libstdc++-v3/include/debug/formatter.h", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/14cbb5d84ccf53215f55066a6f07c629986ae9e2/libstdc%2B%2B-v3%2Finclude%2Fdebug%2Fformatter.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/14cbb5d84ccf53215f55066a6f07c629986ae9e2/libstdc%2B%2B-v3%2Finclude%2Fdebug%2Fformatter.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fdebug%2Fformatter.h?ref=14cbb5d84ccf53215f55066a6f07c629986ae9e2", "patch": "@@ -113,7 +113,8 @@ namespace __gnu_debug\n     // self move assign\n     __msg_self_move_assign,\n     // unordered container buckets\n-    __msg_bucket_index_oob\n+    __msg_bucket_index_oob,\n+    __msg_valid_load_factor\n   };\n \n   class _Error_formatter"}, {"sha": "3df0c9bd31d7ce67edb73f5e178ea3ab2eba13ee", "filename": "libstdc++-v3/include/debug/macros.h", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/14cbb5d84ccf53215f55066a6f07c629986ae9e2/libstdc%2B%2B-v3%2Finclude%2Fdebug%2Fmacros.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/14cbb5d84ccf53215f55066a6f07c629986ae9e2/libstdc%2B%2B-v3%2Finclude%2Fdebug%2Fmacros.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fdebug%2Fmacros.h?ref=14cbb5d84ccf53215f55066a6f07c629986ae9e2", "patch": "@@ -324,7 +324,13 @@ _GLIBCXX_DEBUG_VERIFY(__gnu_debug::__check_partitioned_upper(_First, _Last, \\\n // Verify that the container is not self move assigned\n #define __glibcxx_check_self_move_assign(_Other)\t\t\t\\\n _GLIBCXX_DEBUG_VERIFY(this != &_Other,\t\t\t\t\t\\\n-\t\t      _M_message(__gnu_debug::__msg_self_move_assign)   \\\n+\t\t      _M_message(__gnu_debug::__msg_self_move_assign)\t\\\n+                      ._M_sequence(*this, \"this\"))\n+\n+// Verify that load factor is position\n+#define __glibcxx_check_max_load_factor(_F)\t\t\t\t\\\n+_GLIBCXX_DEBUG_VERIFY(_F > 0.0f,\t\t\t\t\t\\\n+\t\t      _M_message(__gnu_debug::__msg_valid_load_factor)\t\\\n                       ._M_sequence(*this, \"this\"))\n \n #ifdef _GLIBCXX_DEBUG_PEDANTIC"}, {"sha": "b03772d4cae0b4352258f3a6809ee3399872cf0e", "filename": "libstdc++-v3/include/debug/unordered_map", "status": "modified", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/14cbb5d84ccf53215f55066a6f07c629986ae9e2/libstdc%2B%2B-v3%2Finclude%2Fdebug%2Funordered_map", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/14cbb5d84ccf53215f55066a6f07c629986ae9e2/libstdc%2B%2B-v3%2Finclude%2Fdebug%2Funordered_map", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fdebug%2Funordered_map?ref=14cbb5d84ccf53215f55066a6f07c629986ae9e2", "patch": "@@ -230,6 +230,17 @@ namespace __debug\n \treturn _Base::bucket_size(__b);\n       }\n \n+      float\n+      max_load_factor() const noexcept\n+      { return _Base::max_load_factor(); }\n+\n+      void\n+      max_load_factor(float __f)\n+      {\n+\t__glibcxx_check_max_load_factor(__f);\n+\t_Base::max_load_factor(__f);\n+      }\n+\n       template<typename... _Args>\n \tstd::pair<iterator, bool>\n \templace(_Args&&... __args)\n@@ -670,6 +681,17 @@ namespace __debug\n \treturn _Base::bucket_size(__b);\n       }\n \n+      float\n+      max_load_factor() const noexcept\n+      { return _Base::max_load_factor(); }\n+\n+      void\n+      max_load_factor(float __f)\n+      {\n+\t__glibcxx_check_max_load_factor(__f);\n+\t_Base::max_load_factor(__f);\n+      }\n+\n       template<typename... _Args>\n \titerator\n \templace(_Args&&... __args)"}, {"sha": "07d2893b83949457e9d60bb0a9ac0efb4ec33bcf", "filename": "libstdc++-v3/include/debug/unordered_set", "status": "modified", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/14cbb5d84ccf53215f55066a6f07c629986ae9e2/libstdc%2B%2B-v3%2Finclude%2Fdebug%2Funordered_set", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/14cbb5d84ccf53215f55066a6f07c629986ae9e2/libstdc%2B%2B-v3%2Finclude%2Fdebug%2Funordered_set", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fdebug%2Funordered_set?ref=14cbb5d84ccf53215f55066a6f07c629986ae9e2", "patch": "@@ -230,6 +230,17 @@ namespace __debug\n \treturn _Base::bucket_size(__b);\n       }\n \n+      float\n+      max_load_factor() const noexcept\n+      { return _Base::max_load_factor(); }\n+\n+      void\n+      max_load_factor(float __f)\n+      {\n+\t__glibcxx_check_max_load_factor(__f);\n+\t_Base::max_load_factor(__f);\n+      }\n+\n       template<typename... _Args>\n \tstd::pair<iterator, bool>\n \templace(_Args&&... __args)\n@@ -665,6 +676,17 @@ namespace __debug\n \treturn _Base::bucket_size(__b);\n       }\n \n+      float\n+      max_load_factor() const noexcept\n+      { return _Base::max_load_factor(); }\n+\n+      void\n+      max_load_factor(float __f)\n+      {\n+\t__glibcxx_check_max_load_factor(__f);\n+\t_Base::max_load_factor(__f);\n+      }\n+\n       template<typename... _Args>\n \titerator\n \templace(_Args&&... __args)"}, {"sha": "8a18026a44e8f5e5d632ea38c53423517f3d7d83", "filename": "libstdc++-v3/src/c++11/debug.cc", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/14cbb5d84ccf53215f55066a6f07c629986ae9e2/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B11%2Fdebug.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/14cbb5d84ccf53215f55066a6f07c629986ae9e2/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B11%2Fdebug.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B11%2Fdebug.cc?ref=14cbb5d84ccf53215f55066a6f07c629986ae9e2", "patch": "@@ -180,7 +180,8 @@ namespace __gnu_debug\n     \"function requires a non-empty iterator range [%1.name;, %2.name;)\",\n     \"attempt to self move assign\",\n     \"attempt to access container with out-of-bounds bucket index %2;,\"\n-    \" container only holds %3; buckets\"\n+    \" container only holds %3; buckets\",\n+    \"load factor shall be positive\"\n   };\n \n   void"}, {"sha": "57664890672966c0f195ae47626841c9fc47fdc1", "filename": "libstdc++-v3/testsuite/23_containers/unordered_map/debug/max_load_factor_neg.cc", "status": "added", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/14cbb5d84ccf53215f55066a6f07c629986ae9e2/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_map%2Fdebug%2Fmax_load_factor_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/14cbb5d84ccf53215f55066a6f07c629986ae9e2/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_map%2Fdebug%2Fmax_load_factor_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_map%2Fdebug%2Fmax_load_factor_neg.cc?ref=14cbb5d84ccf53215f55066a6f07c629986ae9e2", "patch": "@@ -0,0 +1,34 @@\n+// Copyright (C) 2012 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+//\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+//\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+//\n+// { dg-require-debug-mode \"\" }\n+// { dg-options \"-std=c++11\" }\n+// { dg-do run { xfail *-*-* } }\n+\n+#include <unordered_map>\n+\n+void test01()\n+{\n+  std::unordered_multimap<int, int> um;\n+  um.max_load_factor(-1.0f);\n+}\n+\n+int main()\n+{\n+  test01();\n+  return 0;\n+}"}, {"sha": "b4b15decf77c590b475990622d99c35d6a0df496", "filename": "libstdc++-v3/testsuite/23_containers/unordered_multimap/debug/max_load_factor_neg.cc", "status": "added", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/14cbb5d84ccf53215f55066a6f07c629986ae9e2/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_multimap%2Fdebug%2Fmax_load_factor_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/14cbb5d84ccf53215f55066a6f07c629986ae9e2/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_multimap%2Fdebug%2Fmax_load_factor_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_multimap%2Fdebug%2Fmax_load_factor_neg.cc?ref=14cbb5d84ccf53215f55066a6f07c629986ae9e2", "patch": "@@ -0,0 +1,34 @@\n+// Copyright (C) 2012 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+//\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+//\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+//\n+// { dg-require-debug-mode \"\" }\n+// { dg-options \"-std=c++11\" }\n+// { dg-do run { xfail *-*-* } }\n+\n+#include <unordered_map>\n+\n+void test01()\n+{\n+  std::unordered_map<int, int> um;\n+  um.max_load_factor(-1.0f);\n+}\n+\n+int main()\n+{\n+  test01();\n+  return 0;\n+}"}, {"sha": "797eeaafeeddbe4bdc76762bf0a7805283c6926e", "filename": "libstdc++-v3/testsuite/23_containers/unordered_multiset/debug/max_load_factor_neg.cc", "status": "added", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/14cbb5d84ccf53215f55066a6f07c629986ae9e2/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_multiset%2Fdebug%2Fmax_load_factor_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/14cbb5d84ccf53215f55066a6f07c629986ae9e2/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_multiset%2Fdebug%2Fmax_load_factor_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_multiset%2Fdebug%2Fmax_load_factor_neg.cc?ref=14cbb5d84ccf53215f55066a6f07c629986ae9e2", "patch": "@@ -0,0 +1,34 @@\n+// Copyright (C) 2012 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+//\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+//\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+//\n+// { dg-require-debug-mode \"\" }\n+// { dg-options \"-std=c++11\" }\n+// { dg-do run { xfail *-*-* } }\n+\n+#include <unordered_set>\n+\n+void test01()\n+{\n+  std::unordered_multiset<int> us;\n+  us.max_load_factor(-1.0f);\n+}\n+\n+int main()\n+{\n+  test01();\n+  return 0;\n+}"}, {"sha": "b18e6e592eafff9a0017f6ba25635f90be4ceb35", "filename": "libstdc++-v3/testsuite/23_containers/unordered_set/debug/max_load_factor_neg.cc", "status": "added", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/14cbb5d84ccf53215f55066a6f07c629986ae9e2/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_set%2Fdebug%2Fmax_load_factor_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/14cbb5d84ccf53215f55066a6f07c629986ae9e2/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_set%2Fdebug%2Fmax_load_factor_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_set%2Fdebug%2Fmax_load_factor_neg.cc?ref=14cbb5d84ccf53215f55066a6f07c629986ae9e2", "patch": "@@ -0,0 +1,34 @@\n+// Copyright (C) 2012 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+//\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+//\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+//\n+// { dg-require-debug-mode \"\" }\n+// { dg-options \"-std=c++11\" }\n+// { dg-do run { xfail *-*-* } }\n+\n+#include <unordered_set>\n+\n+void test01()\n+{\n+  std::unordered_set<int> us;\n+  us.max_load_factor(-1.0f);\n+}\n+\n+int main()\n+{\n+  test01();\n+  return 0;\n+}"}]}