{"sha": "a18e3d62790873a98c07b098647a7002a24a1690", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTE4ZTNkNjI3OTA4NzNhOThjMDdiMDk4NjQ3YTcwMDJhMjRhMTY5MA==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2014-07-30T15:17:33Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2014-07-30T15:17:33Z"}, "message": "[multiple changes]\n\n2014-07-30  Ed Schonberg  <schonberg@adacore.com>\n\n\t* a-crdlli.ads: Place declaration of Empty_List after full type\n\tdeclaration for Curosr, to prevent freezing error.\n\n2014-07-30  Robert Dewar  <dewar@adacore.com>\n\n\t* get_targ.adb: Minor code reorganization.\n\t* prj-proc.adb, prj-proc.ads, get_targ.ads, sem_ch6.adb: Minor\n\treformatting.\n\n2014-07-30  Ed Schonberg  <schonberg@adacore.com>\n\n\t* a-cbhase.adb: a-cbhase.adb (Insert): Raise Constraint_Error,\n\tnot Program_Error, when attempting to remove an element not in\n\tthe set. This is the given semantics for all set containers.\n\n2014-07-30  Ed Schonberg  <schonberg@adacore.com>\n\n\t* a-rbtgbo.adb: -rbtgbo.adb (Delete_Node_Sans_Free): If\n\telement is not present in tree return rather than violating\n\tan assertion. Constraint_Error will be raised in the caller if\n\telement is not in the container.\n\nFrom-SVN: r213300", "tree": {"sha": "0642edd4a753596c880abaf39ba029b60bd63cc9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0642edd4a753596c880abaf39ba029b60bd63cc9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a18e3d62790873a98c07b098647a7002a24a1690", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a18e3d62790873a98c07b098647a7002a24a1690", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a18e3d62790873a98c07b098647a7002a24a1690", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a18e3d62790873a98c07b098647a7002a24a1690/comments", "author": null, "committer": null, "parents": [{"sha": "1ebc2612da88cbb87faed5106329fd03831e0ebc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1ebc2612da88cbb87faed5106329fd03831e0ebc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1ebc2612da88cbb87faed5106329fd03831e0ebc"}], "stats": {"total": 95, "additions": 59, "deletions": 36}, "files": [{"sha": "3fac0296dbbb362da5562eff786c40095166e302", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a18e3d62790873a98c07b098647a7002a24a1690/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a18e3d62790873a98c07b098647a7002a24a1690/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=a18e3d62790873a98c07b098647a7002a24a1690", "patch": "@@ -1,3 +1,27 @@\n+2014-07-30  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* a-crdlli.ads: Place declaration of Empty_List after full type\n+\tdeclaration for Curosr, to prevent freezing error.\n+\n+2014-07-30  Robert Dewar  <dewar@adacore.com>\n+\n+\t* get_targ.adb: Minor code reorganization.\n+\t* prj-proc.adb, prj-proc.ads, get_targ.ads, sem_ch6.adb: Minor\n+\treformatting.\n+\n+2014-07-30  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* a-cbhase.adb: a-cbhase.adb (Insert): Raise Constraint_Error,\n+\tnot Program_Error, when attempting to remove an element not in\n+\tthe set. This is the given semantics for all set containers.\n+\n+2014-07-30  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* a-rbtgbo.adb: -rbtgbo.adb (Delete_Node_Sans_Free): If\n+\telement is not present in tree return rather than violating\n+\tan assertion. Constraint_Error will be raised in the caller if\n+\telement is not in the container.\n+\n 2014-07-30  Arnaud Charlet  <charlet@adacore.com>\n \n \t* set_targ.adb (Read_Target_Dependent_Values): New subprogram."}, {"sha": "331087b9eeba5338a03418dda1694f3238b382fe", "filename": "gcc/ada/a-cbhase.adb", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a18e3d62790873a98c07b098647a7002a24a1690/gcc%2Fada%2Fa-cbhase.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a18e3d62790873a98c07b098647a7002a24a1690/gcc%2Fada%2Fa-cbhase.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-cbhase.adb?ref=a18e3d62790873a98c07b098647a7002a24a1690", "patch": "@@ -762,7 +762,8 @@ package body Ada.Containers.Bounded_Hashed_Sets is\n       Insert (Container, New_Item, Position, Inserted);\n \n       if not Inserted then\n-         raise Program_Error with \"attempt to insert element already in set\";\n+         raise Constraint_Error with\n+           \"attempt to insert element already in set\";\n       end if;\n    end Insert;\n "}, {"sha": "c18005fc720bfd41ed9de769904de0a52dc0933f", "filename": "gcc/ada/a-crdlli.ads", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a18e3d62790873a98c07b098647a7002a24a1690/gcc%2Fada%2Fa-crdlli.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a18e3d62790873a98c07b098647a7002a24a1690/gcc%2Fada%2Fa-crdlli.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-crdlli.ads?ref=a18e3d62790873a98c07b098647a7002a24a1690", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 2004-2009, Free Software Foundation, Inc.         --\n+--          Copyright (C) 2004-2014, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -321,8 +321,6 @@ private\n       Length : Count_Type := 0;\n    end record;\n \n-   Empty_List : constant List := (0, others => <>);\n-\n    type List_Access is access all List;\n    for List_Access'Storage_Size use 0;\n \n@@ -332,6 +330,8 @@ private\n          Node      : Count_Type := 0;\n       end record;\n \n+   Empty_List : constant List := (0, others => <>);\n+\n    No_Element : constant Cursor := (null, 0);\n \n end Ada.Containers.Restricted_Doubly_Linked_Lists;"}, {"sha": "d3b54d64695816e102d9eb56ec10d6bcaf037b06", "filename": "gcc/ada/a-rbtgbo.adb", "status": "modified", "additions": 7, "deletions": 2, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a18e3d62790873a98c07b098647a7002a24a1690/gcc%2Fada%2Fa-rbtgbo.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a18e3d62790873a98c07b098647a7002a24a1690/gcc%2Fada%2Fa-rbtgbo.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-rbtgbo.adb?ref=a18e3d62790873a98c07b098647a7002a24a1690", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 2004-2013, Free Software Foundation, Inc.         --\n+--          Copyright (C) 2004-2014, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -196,7 +196,6 @@ package body Ada.Containers.Red_Black_Trees.Generic_Bounded_Operations is\n       X, Y : Count_Type;\n \n       Z : constant Count_Type := Node;\n-      pragma Assert (Z /= 0);\n \n       N : Nodes_Type renames Tree.Nodes;\n \n@@ -206,6 +205,12 @@ package body Ada.Containers.Red_Black_Trees.Generic_Bounded_Operations is\n            \"attempt to tamper with cursors (container is busy)\";\n       end if;\n \n+      --  If node is not present, return. Exception will be raised in caller.\n+\n+      if Z = 0 then\n+         return;\n+      end if;\n+\n       pragma Assert (Tree.Length > 0);\n       pragma Assert (Tree.Root  /= 0);\n       pragma Assert (Tree.First /= 0);"}, {"sha": "9dde22bebf699f68ed675e53bd1a9e7f4d5665a1", "filename": "gcc/ada/get_targ.adb", "status": "modified", "additions": 15, "deletions": 24, "changes": 39, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a18e3d62790873a98c07b098647a7002a24a1690/gcc%2Fada%2Fget_targ.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a18e3d62790873a98c07b098647a7002a24a1690/gcc%2Fada%2Fget_targ.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fget_targ.adb?ref=a18e3d62790873a98c07b098647a7002a24a1690", "patch": "@@ -308,19 +308,14 @@ package body Get_Targ is\n \n    function Digits_From_Size (Size : Pos) return Pos is\n    begin\n-      if    Size =  32 then\n-         return  6;\n-      elsif Size =  48 then\n-         return  9;\n-      elsif Size =  64 then\n-         return 15;\n-      elsif Size =  96 then\n-         return 18;\n-      elsif Size = 128 then\n-         return 18;\n-      else\n-         raise Program_Error;\n-      end if;\n+      case Size is\n+         when  32    => return  6;\n+         when  48    => return  9;\n+         when  64    => return 15;\n+         when  96    => return 18;\n+         when 128    => return 18;\n+         when others => raise Program_Error;\n+      end case;\n    end Digits_From_Size;\n \n    -----------------------------\n@@ -349,17 +344,13 @@ package body Get_Targ is\n \n    function Width_From_Size  (Size : Pos) return Pos is\n    begin\n-      if    Size =  8 then\n-         return  4;\n-      elsif Size = 16 then\n-         return  6;\n-      elsif Size = 32 then\n-         return 11;\n-      elsif Size = 64 then\n-         return 21;\n-      else\n-         raise Program_Error;\n-      end if;\n+      case Size is\n+         when  8     => return  4;\n+         when 16     => return  6;\n+         when 32     => return 11;\n+         when 64     => return 21;\n+         when others => raise Program_Error;\n+      end case;\n    end Width_From_Size;\n \n end Get_Targ;"}, {"sha": "457575eddd9e78deb140f3e1429d2933dae91c92", "filename": "gcc/ada/get_targ.ads", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a18e3d62790873a98c07b098647a7002a24a1690/gcc%2Fada%2Fget_targ.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a18e3d62790873a98c07b098647a7002a24a1690/gcc%2Fada%2Fget_targ.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fget_targ.ads?ref=a18e3d62790873a98c07b098647a7002a24a1690", "patch": "@@ -146,8 +146,8 @@ package Get_Targ is\n    --  Calls the Call_Back function with information for each supported type\n \n    function Get_Back_End_Config_File return String_Ptr;\n-   --  Return the back end configuration file, or null if none.\n-   --  If non null, this file should be used instead of calling the various\n-   --  Get_xxx functions in this package.\n+   --  Return the back end configuration file, or null if none. If non-null,\n+   --  this file should be used instead of calling the various Get_xxx\n+   --  functions in this package.\n \n end Get_Targ;"}, {"sha": "08232cdd5c81eeeb87b76011c5d7b74f89b6a0bf", "filename": "gcc/ada/prj-proc.adb", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a18e3d62790873a98c07b098647a7002a24a1690/gcc%2Fada%2Fprj-proc.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a18e3d62790873a98c07b098647a7002a24a1690/gcc%2Fada%2Fprj-proc.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-proc.adb?ref=a18e3d62790873a98c07b098647a7002a24a1690", "patch": "@@ -2,7 +2,7 @@\n --                                                                          --\n --                         GNAT COMPILER COMPONENTS                         --\n --                                                                          --\n---                              P R J . P R O C                             --\n+--                             P R J . P R O C                              --\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n@@ -2848,6 +2848,7 @@ package body Prj.Proc is\n             --  Check if the project is already in the tree\n \n             Project := No_Project;\n+\n             declare\n                List : Project_List := In_Tree.Projects;\n                Path : constant Path_Name_Type :="}, {"sha": "2b0680ebe5285629bcb8fc46b903d120a8e87c63", "filename": "gcc/ada/prj-proc.ads", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a18e3d62790873a98c07b098647a7002a24a1690/gcc%2Fada%2Fprj-proc.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a18e3d62790873a98c07b098647a7002a24a1690/gcc%2Fada%2Fprj-proc.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-proc.ads?ref=a18e3d62790873a98c07b098647a7002a24a1690", "patch": "@@ -2,11 +2,11 @@\n --                                                                          --\n --                         GNAT COMPILER COMPONENTS                         --\n --                                                                          --\n---                              P R J . P R O C                             --\n+--                             P R J . P R O C                              --\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 2001-2013, Free Software Foundation, Inc.         --\n+--          Copyright (C) 2001-2014, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --"}, {"sha": "77c329436213e8447422ee8d982d4dccc647da24", "filename": "gcc/ada/sem_ch6.adb", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a18e3d62790873a98c07b098647a7002a24a1690/gcc%2Fada%2Fsem_ch6.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a18e3d62790873a98c07b098647a7002a24a1690/gcc%2Fada%2Fsem_ch6.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch6.adb?ref=a18e3d62790873a98c07b098647a7002a24a1690", "patch": "@@ -9891,6 +9891,7 @@ package body Sem_Ch6 is\n                   --  in bodies. Limited views of either kind are not allowed\n                   --  if there is no place at which the non-limited view can\n                   --  become available.\n+\n                   --  Incomplete formal untagged types are not allowed in\n                   --  subprogram bodies (but are legal in their declarations).\n "}]}