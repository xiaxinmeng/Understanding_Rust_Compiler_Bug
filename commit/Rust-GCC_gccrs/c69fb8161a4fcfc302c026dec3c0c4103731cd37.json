{"sha": "c69fb8161a4fcfc302c026dec3c0c4103731cd37", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzY5ZmI4MTYxYTRmY2ZjMzAyYzAyNmRlYzNjMGM0MTAzNzMxY2QzNw==", "commit": {"author": {"name": "Kyrylo Tkachov", "email": "kyrylo.tkachov@arm.com", "date": "2016-11-22T12:12:05Z"}, "committer": {"name": "Kyrylo Tkachov", "email": "ktkachov@gcc.gnu.org", "date": "2016-11-22T12:12:05Z"}, "message": "[ARM] PR target/78439: Update movdi constraints for Cortex-A8 tuning to handle LDRD/STRD\n\n\tPR target/78439\n\t* config/arm/vfp.md (*movdi_vfp_cortexa8): Use 'q' constraints for the\n\tregister operand in alternatives 4,5,6.\n\n\t* gcc.c-torture/compile/pr78439.c: New test.\n\nFrom-SVN: r242695", "tree": {"sha": "13fa9d80862d235db48363df5a2bac19108f8af4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/13fa9d80862d235db48363df5a2bac19108f8af4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c69fb8161a4fcfc302c026dec3c0c4103731cd37", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c69fb8161a4fcfc302c026dec3c0c4103731cd37", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c69fb8161a4fcfc302c026dec3c0c4103731cd37", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c69fb8161a4fcfc302c026dec3c0c4103731cd37/comments", "author": {"login": "ktkachov-arm", "id": 74917949, "node_id": "MDQ6VXNlcjc0OTE3OTQ5", "avatar_url": "https://avatars.githubusercontent.com/u/74917949?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ktkachov-arm", "html_url": "https://github.com/ktkachov-arm", "followers_url": "https://api.github.com/users/ktkachov-arm/followers", "following_url": "https://api.github.com/users/ktkachov-arm/following{/other_user}", "gists_url": "https://api.github.com/users/ktkachov-arm/gists{/gist_id}", "starred_url": "https://api.github.com/users/ktkachov-arm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ktkachov-arm/subscriptions", "organizations_url": "https://api.github.com/users/ktkachov-arm/orgs", "repos_url": "https://api.github.com/users/ktkachov-arm/repos", "events_url": "https://api.github.com/users/ktkachov-arm/events{/privacy}", "received_events_url": "https://api.github.com/users/ktkachov-arm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "4ac52f1614e8d199e55b915dc23e687a76327ba8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4ac52f1614e8d199e55b915dc23e687a76327ba8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4ac52f1614e8d199e55b915dc23e687a76327ba8"}], "stats": {"total": 71, "additions": 69, "deletions": 2}, "files": [{"sha": "3dc1af0fc336c2d04ad30a6d1e2b32c5216229a3", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c69fb8161a4fcfc302c026dec3c0c4103731cd37/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c69fb8161a4fcfc302c026dec3c0c4103731cd37/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=c69fb8161a4fcfc302c026dec3c0c4103731cd37", "patch": "@@ -1,3 +1,9 @@\n+2016-11-22  Kyrylo Tkachov  <kyrylo.tkachov@arm.com>\n+\n+\tPR target/78439\n+\t* config/arm/vfp.md (*movdi_vfp_cortexa8): Use 'q' constraints for the\n+\tregister operand in alternatives 4,5,6.\n+\n 2016-11-22  Thomas Preud'homme  <thomas.preudhomme@arm.com>\n \n \tPR target/77904"}, {"sha": "ce56e160c043264fd41077e075896760644cd9a5", "filename": "gcc/config/arm/vfp.md", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c69fb8161a4fcfc302c026dec3c0c4103731cd37/gcc%2Fconfig%2Farm%2Fvfp.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c69fb8161a4fcfc302c026dec3c0c4103731cd37/gcc%2Fconfig%2Farm%2Fvfp.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Fvfp.md?ref=c69fb8161a4fcfc302c026dec3c0c4103731cd37", "patch": "@@ -355,8 +355,8 @@\n )\n \n (define_insn \"*movdi_vfp_cortexa8\"\n-  [(set (match_operand:DI 0 \"nonimmediate_di_operand\" \"=r,r,r,r,r,r,m,w,!r,w,w, Uv\")\n-       (match_operand:DI 1 \"di_operand\"              \"r,rDa,Db,Dc,mi,mi,r,r,w,w,Uvi,w\"))]\n+  [(set (match_operand:DI 0 \"nonimmediate_di_operand\" \"=r,r,r,r,q,q,m,w,!r,w,w, Uv\")\n+\t(match_operand:DI 1 \"di_operand\"\t\t\"r,rDa,Db,Dc,mi,mi,q,r,w,w,Uvi,w\"))]\n   \"TARGET_32BIT && TARGET_HARD_FLOAT && arm_tune == TARGET_CPU_cortexa8\n     && (   register_operand (operands[0], DImode)\n         || register_operand (operands[1], DImode))"}, {"sha": "a9ef58c57db9ea452569babf4c1776afec93962f", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c69fb8161a4fcfc302c026dec3c0c4103731cd37/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c69fb8161a4fcfc302c026dec3c0c4103731cd37/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=c69fb8161a4fcfc302c026dec3c0c4103731cd37", "patch": "@@ -1,3 +1,8 @@\n+2016-11-22  Kyrylo Tkachov  <kyrylo.tkachov@arm.com>\n+\n+\tPR target/78439\n+\t* gcc.c-torture/compile/pr78439.c: New test.\n+\n 2016-11-22  Thomas Preud'homme  <thomas.preudhomme@arm.com>\n \n \tPR target/77904"}, {"sha": "a8af86bca346561b922e24c7260a7bb73d16658d", "filename": "gcc/testsuite/gcc.c-torture/compile/pr78439.c", "status": "added", "additions": 56, "deletions": 0, "changes": 56, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c69fb8161a4fcfc302c026dec3c0c4103731cd37/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr78439.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c69fb8161a4fcfc302c026dec3c0c4103731cd37/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr78439.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr78439.c?ref=c69fb8161a4fcfc302c026dec3c0c4103731cd37", "patch": "@@ -0,0 +1,56 @@\n+/* PR target/78439.  */\n+\n+enum demangle_component_type\n+{\n+  DEMANGLE_COMPONENT_THROW_SPEC\n+};\n+struct demangle_component\n+{\n+  enum demangle_component_type type;\n+  struct\n+  {\n+    struct\n+    {\n+      struct demangle_component *left;\n+      struct demangle_component *right;\n+    };\n+  };\n+};\n+\n+int a, b;\n+\n+struct d_info\n+{\n+  struct demangle_component *comps;\n+  int next_comp;\n+  int num_comps;\n+  struct demangle_component *subs;\n+  int num_subs;\n+  int is_conversion;\n+};\n+\n+void\n+fn1 (int p1, struct d_info *p2)\n+{\n+  p2->num_comps = 2 * p1;\n+  p2->next_comp = p2->num_subs = p1;\n+  p2->is_conversion = 0;\n+}\n+\n+int fn3 (int *);\n+void fn4 (struct d_info *, int);\n+\n+void\n+fn2 ()\n+{\n+  int c;\n+  struct d_info d;\n+  b = 0;\n+  c = fn3 (&a);\n+  fn1 (c, &d);\n+  struct demangle_component e[d.num_comps];\n+  struct demangle_component *f[d.num_subs];\n+  d.comps = e;\n+  d.subs = (struct demangle_component *) f;\n+  fn4 (&d, 1);\n+}"}]}