{"sha": "7a3a3fadb050d9e49b18d052cfc20191acdf4126", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6N2EzYTNmYWRiMDUwZDllNDliMThkMDUyY2ZjMjAxOTFhY2RmNDEyNg==", "commit": {"author": {"name": "Patrick Palka", "email": "ppalka@gcc.gnu.org", "date": "2016-03-05T01:59:04Z"}, "committer": {"name": "Patrick Palka", "email": "ppalka@gcc.gnu.org", "date": "2016-03-05T01:59:04Z"}, "message": "Fix PR c++/66786 (ICE with nested lambdas in variable template)\n\ngcc/cp/ChangeLog:\n\n\tPR c++/66786\n\t* pt.c (template_class_depth): Given a lambda type, iterate\n\tinto its LAMBDA_TYPE_EXTRA_SCOPE field instead of its\n\tTYPE_CONTEXT.  Given a VAR_DECL, iterate into its\n\tCP_DECL_CONTEXT.\n\ngcc/testsuite/ChangeLog:\n\n\tPR c++/66786\n\t* g++.dg/cpp1y/var-templ48.C: New test.\n\t* g++.dg/cpp1y/var-templ49.C: New test.\n\nFrom-SVN: r233997", "tree": {"sha": "254c9fbf70248291f4be405898f6b1b4c374240f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/254c9fbf70248291f4be405898f6b1b4c374240f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7a3a3fadb050d9e49b18d052cfc20191acdf4126", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7a3a3fadb050d9e49b18d052cfc20191acdf4126", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7a3a3fadb050d9e49b18d052cfc20191acdf4126", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7a3a3fadb050d9e49b18d052cfc20191acdf4126/comments", "author": null, "committer": null, "parents": [{"sha": "b554db5b0390f394bf9b8269c0398da9c8a3cbdb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b554db5b0390f394bf9b8269c0398da9c8a3cbdb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b554db5b0390f394bf9b8269c0398da9c8a3cbdb"}], "stats": {"total": 40, "additions": 36, "deletions": 4}, "files": [{"sha": "0ef1ac744addbcd85988c029fd8a08ab9ca098d6", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7a3a3fadb050d9e49b18d052cfc20191acdf4126/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7a3a3fadb050d9e49b18d052cfc20191acdf4126/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=7a3a3fadb050d9e49b18d052cfc20191acdf4126", "patch": "@@ -1,3 +1,11 @@\n+2016-03-05  Patrick Palka  <ppalka@gcc.gnu.org>\n+\n+\tPR c++/66786\n+\t* pt.c (template_class_depth): Given a lambda type, iterate\n+\tinto its LAMBDA_TYPE_EXTRA_SCOPE field instead of its\n+\tTYPE_CONTEXT.  Given a VAR_DECL, iterate into its\n+\tCP_DECL_CONTEXT.\n+\n 2016-03-04  Jason Merrill  <jason@redhat.com>\n \n \tPR c++/69203"}, {"sha": "f6dd75a89aadcf9abfa113b59f2f4a171018fe80", "filename": "gcc/cp/pt.c", "status": "modified", "additions": 8, "deletions": 4, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7a3a3fadb050d9e49b18d052cfc20191acdf4126/gcc%2Fcp%2Fpt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7a3a3fadb050d9e49b18d052cfc20191acdf4126/gcc%2Fcp%2Fpt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fpt.c?ref=7a3a3fadb050d9e49b18d052cfc20191acdf4126", "patch": "@@ -370,16 +370,20 @@ template_class_depth (tree type)\n {\n   int depth;\n \n-  for (depth = 0;\n-       type && TREE_CODE (type) != NAMESPACE_DECL;\n-       type = (TREE_CODE (type) == FUNCTION_DECL)\n-\t ? CP_DECL_CONTEXT (type) : CP_TYPE_CONTEXT (type))\n+  for (depth = 0; type && TREE_CODE (type) != NAMESPACE_DECL; )\n     {\n       tree tinfo = get_template_info (type);\n \n       if (tinfo && PRIMARY_TEMPLATE_P (TI_TEMPLATE (tinfo))\n \t  && uses_template_parms (INNERMOST_TEMPLATE_ARGS (TI_ARGS (tinfo))))\n \t++depth;\n+\n+      if (VAR_OR_FUNCTION_DECL_P (type))\n+\ttype = CP_DECL_CONTEXT (type);\n+      else if (LAMBDA_TYPE_P (type))\n+\ttype = LAMBDA_TYPE_EXTRA_SCOPE (type);\n+      else\n+\ttype = CP_TYPE_CONTEXT (type);\n     }\n \n   return depth;"}, {"sha": "ca65abf63389416fb7b69ffed45beb7034aa1a9c", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7a3a3fadb050d9e49b18d052cfc20191acdf4126/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7a3a3fadb050d9e49b18d052cfc20191acdf4126/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=7a3a3fadb050d9e49b18d052cfc20191acdf4126", "patch": "@@ -1,3 +1,9 @@\n+2016-03-05  Patrick Palka  <ppalka@gcc.gnu.org>\n+\n+\tPR c++/66786\n+\t* g++.dg/cpp1y/var-templ48.C: New test.\n+\t* g++.dg/cpp1y/var-templ49.C: New test.\n+\n 2016-03-04  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* g++.dg/Wno-frame-address.C: Skip on IA-64."}, {"sha": "f0c7693f03fd01d28e7d97bbe1678a2550af699b", "filename": "gcc/testsuite/g++.dg/cpp1y/var-templ48.C", "status": "added", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7a3a3fadb050d9e49b18d052cfc20191acdf4126/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1y%2Fvar-templ48.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7a3a3fadb050d9e49b18d052cfc20191acdf4126/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1y%2Fvar-templ48.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1y%2Fvar-templ48.C?ref=7a3a3fadb050d9e49b18d052cfc20191acdf4126", "patch": "@@ -0,0 +1,5 @@\n+// PR c++/66786\n+// { dg-do compile { target c++14 } }\n+\n+template <typename... T> auto list = [](T... xs) { [=](auto f) { f(xs...); }; };\n+int main() { list<int>(0); }"}, {"sha": "7ac574420f428405e6c3c4ecd74db62d9dc77cd7", "filename": "gcc/testsuite/g++.dg/cpp1y/var-templ49.C", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7a3a3fadb050d9e49b18d052cfc20191acdf4126/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1y%2Fvar-templ49.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7a3a3fadb050d9e49b18d052cfc20191acdf4126/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1y%2Fvar-templ49.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1y%2Fvar-templ49.C?ref=7a3a3fadb050d9e49b18d052cfc20191acdf4126", "patch": "@@ -0,0 +1,9 @@\n+// PR c++/66786\n+// { dg-do compile { target c++14 } }\n+\n+int f (int, bool);\n+\n+template <typename>\n+auto list = [](auto... xs) { return [=](auto f, auto... ys) { return f(xs..., ys...); }; };\n+\n+const int &a = list<int>(0)(f, true);"}]}