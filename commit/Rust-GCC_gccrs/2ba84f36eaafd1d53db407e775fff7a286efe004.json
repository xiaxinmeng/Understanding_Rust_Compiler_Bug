{"sha": "2ba84f36eaafd1d53db407e775fff7a286efe004", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmJhODRmMzZlYWFmZDFkNTNkYjQwN2U3NzVmZmY3YTI4NmVmZTAwNA==", "commit": {"author": {"name": "Kazu Hirata", "email": "kazu@hxi.com", "date": "2001-10-09T14:03:13Z"}, "committer": {"name": "Kazu Hirata", "email": "kazu@gcc.gnu.org", "date": "2001-10-09T14:03:13Z"}, "message": "c-common.h: Fix comment formatting.\n\n\t* c-common.h: Fix comment formatting.\n\t* c-dump.c: Likewise.\n\t* cfg.c: Likewise.\n\t* diagnostic.h: Likewise.\n\t* except.c: Likewise.\n\t* gcc.h: Likewise.\n\t* gcov-io.h: Likewise.\n\t* genattrtab.c: Likewise.\n\t* output.h: Likewise.\n\t* predict.h: Likewise.\n\t* reload1.c: Likewise.\n\t* reload.h: Likewise.\n\t* resource.h: Likewise.\n\t* scan.h: Likewise.\n\t* system.h: Likewise.\n\t* tree.h: Likewise.\n\t* tree-inline.c: Likewise.\n\t* tsystem.h: Likewise.\n\t* varasm.c: Likewise.\n\t* xcoffout.h: Likewise.\n\nFrom-SVN: r46122", "tree": {"sha": "2bca05f2ef10d55e4d51ec6066c42bb45253a03c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2bca05f2ef10d55e4d51ec6066c42bb45253a03c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2ba84f36eaafd1d53db407e775fff7a286efe004", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2ba84f36eaafd1d53db407e775fff7a286efe004", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2ba84f36eaafd1d53db407e775fff7a286efe004", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2ba84f36eaafd1d53db407e775fff7a286efe004/comments", "author": null, "committer": null, "parents": [{"sha": "77332b4e0b7f45f1cbba6b624765fa041c85efa7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/77332b4e0b7f45f1cbba6b624765fa041c85efa7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/77332b4e0b7f45f1cbba6b624765fa041c85efa7"}], "stats": {"total": 175, "additions": 99, "deletions": 76}, "files": [{"sha": "1363cb9f80d5a5fa92e4adf37b18860195085939", "filename": "gcc/ChangeLog", "status": "modified", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2ba84f36eaafd1d53db407e775fff7a286efe004/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2ba84f36eaafd1d53db407e775fff7a286efe004/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=2ba84f36eaafd1d53db407e775fff7a286efe004", "patch": "@@ -1,3 +1,26 @@\n+2001-10-09  Kazu Hirata  <kazu@hxi.com>\n+\n+\t* c-common.h: Fix comment formatting.\n+\t* c-dump.c: Likewise.\n+\t* cfg.c: Likewise.\n+\t* diagnostic.h: Likewise.\n+\t* except.c: Likewise.\n+\t* gcc.h: Likewise.\n+\t* gcov-io.h: Likewise.\n+\t* genattrtab.c: Likewise.\n+\t* output.h: Likewise.\n+\t* predict.h: Likewise.\n+\t* reload1.c: Likewise.\n+\t* reload.h: Likewise.\n+\t* resource.h: Likewise.\n+\t* scan.h: Likewise.\n+\t* system.h: Likewise.\n+\t* tree.h: Likewise.\n+\t* tree-inline.c: Likewise.\n+\t* tsystem.h: Likewise.\n+\t* varasm.c: Likewise.\n+\t* xcoffout.h: Likewise.\n+\n 2001-10-09  Joseph S. Myers  <jsm28@cam.ac.uk>\n \n \t* doc/gcc.texi: Document preference for \"nonzero\" over \"non-zero\"."}, {"sha": "89a4ae7252fe665ed56754b4c7799f7b0d8c1980", "filename": "gcc/c-common.h", "status": "modified", "additions": 19, "deletions": 19, "changes": 38, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2ba84f36eaafd1d53db407e775fff7a286efe004/gcc%2Fc-common.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2ba84f36eaafd1d53db407e775fff7a286efe004/gcc%2Fc-common.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-common.h?ref=2ba84f36eaafd1d53db407e775fff7a286efe004", "patch": "@@ -49,7 +49,7 @@ Software Foundation, 59 Temple Place - Suite 330, Boston, MA\n enum rid\n {\n   /* Modifiers: */\n-  /* C, in empirical order of frequency. */\n+  /* C, in empirical order of frequency.  */\n   RID_STATIC = 0,\n   RID_UNSIGNED, RID_LONG,    RID_CONST, RID_EXTERN,\n   RID_REGISTER, RID_TYPEDEF, RID_SHORT, RID_INLINE,\n@@ -166,7 +166,7 @@ enum c_tree_index\n     CTI_G77_LONGINT_TYPE,\n     CTI_G77_ULONGINT_TYPE,\n \n-    /* These are not types, but we have to look them up all the time. */\n+    /* These are not types, but we have to look them up all the time.  */\n     CTI_FUNCTION_NAME_DECL,\n     CTI_PRETTY_FUNCTION_NAME_DECL,\n     CTI_C99_FUNCTION_NAME_DECL,\n@@ -239,7 +239,7 @@ extern tree c_global_trees[CTI_MAX];\n typedef enum c_language_kind\n {\n   clk_c,           /* A dialect of C: K&R C, ANSI/ISO C89, C2000,\n-\t\t       etc. */\n+\t\t       etc.  */\n   clk_cplusplus,   /* ANSI/ISO C++ */\n   clk_objective_c  /* Objective C */\n }\n@@ -368,7 +368,7 @@ extern int flag_short_double;\n \n extern int flag_short_wchar;\n \n-/* Warn about *printf or *scanf format/argument anomalies. */\n+/* Warn about *printf or *scanf format/argument anomalies.  */\n \n extern int warn_format;\n \n@@ -555,18 +555,18 @@ extern tree strip_array_types                   PARAMS ((tree));\n \n /* IF_STMT accessors. These give access to the condtion of the if\n    statement, the then block of the if statement, and the else block\n-   of the if stsatement if it exists. */\n+   of the if stsatement if it exists.  */\n #define IF_COND(NODE)           TREE_OPERAND (IF_STMT_CHECK (NODE), 0)\n #define THEN_CLAUSE(NODE)       TREE_OPERAND (IF_STMT_CHECK (NODE), 1)\n #define ELSE_CLAUSE(NODE)       TREE_OPERAND (IF_STMT_CHECK (NODE), 2)\n \n /* WHILE_STMT accessors. These give access to the condtion of the\n-   while statement and the body of the while statement, respectively. */\n+   while statement and the body of the while statement, respectively.  */\n #define WHILE_COND(NODE)        TREE_OPERAND (WHILE_STMT_CHECK (NODE), 0)\n #define WHILE_BODY(NODE)        TREE_OPERAND (WHILE_STMT_CHECK (NODE), 1)\n \n /* DO_STMT accessors. These give access to the condition of the do\n-   statement and the body of the do statement, respectively. */\n+   statement and the body of the do statement, respectively.  */\n #define DO_COND(NODE)           TREE_OPERAND (DO_STMT_CHECK (NODE), 0)\n #define DO_BODY(NODE)           TREE_OPERAND (DO_STMT_CHECK (NODE), 1)\n \n@@ -576,57 +576,57 @@ extern tree strip_array_types                   PARAMS ((tree));\n #define RETURN_EXPR(NODE)       TREE_OPERAND (RETURN_STMT_CHECK (NODE), 0)\n \n /* EXPR_STMT accessor. This gives the expression associated with an\n-   expression statement. */\n+   expression statement.  */\n #define EXPR_STMT_EXPR(NODE)    TREE_OPERAND (EXPR_STMT_CHECK (NODE), 0)\n \n /* FOR_STMT accessors. These give access to the init statement,\n    condition, update expression, and body of the for statement,\n-   respectively. */\n+   respectively.  */\n #define FOR_INIT_STMT(NODE)     TREE_OPERAND (FOR_STMT_CHECK (NODE), 0)\n #define FOR_COND(NODE)          TREE_OPERAND (FOR_STMT_CHECK (NODE), 1)\n #define FOR_EXPR(NODE)          TREE_OPERAND (FOR_STMT_CHECK (NODE), 2)\n #define FOR_BODY(NODE)          TREE_OPERAND (FOR_STMT_CHECK (NODE), 3)\n \n /* SWITCH_STMT accessors. These give access to the condition and body\n-   of the switch statement, respectively. */\n+   of the switch statement, respectively.  */\n #define SWITCH_COND(NODE)       TREE_OPERAND (SWITCH_STMT_CHECK (NODE), 0)\n #define SWITCH_BODY(NODE)       TREE_OPERAND (SWITCH_STMT_CHECK (NODE), 1)\n \n /* CASE_LABEL accessors. These give access to the high and low values\n-   of a case label, respectively. */\n+   of a case label, respectively.  */\n #define CASE_LOW(NODE)          TREE_OPERAND (CASE_LABEL_CHECK (NODE), 0)\n #define CASE_HIGH(NODE)         TREE_OPERAND (CASE_LABEL_CHECK (NODE), 1)\n #define CASE_LABEL_DECL(NODE)   TREE_OPERAND (CASE_LABEL_CHECK (NODE), 2)\n \n /* GOTO_STMT accessor. This gives access to the label associated with\n-   a goto statement. */\n+   a goto statement.  */\n #define GOTO_DESTINATION(NODE)  TREE_OPERAND (GOTO_STMT_CHECK (NODE), 0)\n \n /* COMPOUND_STMT accessor. This gives access to the TREE_LIST of\n    statements assocated with a compound statement. The result is the\n    first statement in the list. Succeeding nodes can be acccessed by\n-   calling TREE_CHAIN on a node in the list. */\n+   calling TREE_CHAIN on a node in the list.  */\n #define COMPOUND_BODY(NODE)     TREE_OPERAND (COMPOUND_STMT_CHECK (NODE), 0)\n \n /* ASM_STMT accessors. ASM_STRING returns a STRING_CST for the\n    instruction (e.g., \"mov x, y\"). ASM_OUTPUTS, ASM_INPUTS, and\n    ASM_CLOBBERS represent the outputs, inputs, and clobbers for the\n-   statement. */\n+   statement.  */\n #define ASM_CV_QUAL(NODE)       TREE_OPERAND (ASM_STMT_CHECK (NODE), 0)\n #define ASM_STRING(NODE)        TREE_OPERAND (ASM_STMT_CHECK (NODE), 1)\n #define ASM_OUTPUTS(NODE)       TREE_OPERAND (ASM_STMT_CHECK (NODE), 2)\n #define ASM_INPUTS(NODE)        TREE_OPERAND (ASM_STMT_CHECK (NODE), 3)\n #define ASM_CLOBBERS(NODE)      TREE_OPERAND (ASM_STMT_CHECK (NODE), 4)\n \n /* DECL_STMT accessor. This gives access to the DECL associated with\n-   the given declaration statement. */\n+   the given declaration statement.  */\n #define DECL_STMT_DECL(NODE)    TREE_OPERAND (DECL_STMT_CHECK (NODE), 0)\n \n-/* STMT_EXPR accessor. */\n+/* STMT_EXPR accessor.  */\n #define STMT_EXPR_STMT(NODE)    TREE_OPERAND (STMT_EXPR_CHECK (NODE), 0)\n \n /* LABEL_STMT accessor. This gives access to the label associated with\n-   the given label statement. */\n+   the given label statement.  */\n #define LABEL_STMT_LABEL(NODE)  TREE_OPERAND (LABEL_STMT_CHECK (NODE), 0)\n \n /* Nonzero if this SCOPE_STMT is for the beginning of a scope.  */\n@@ -682,7 +682,7 @@ extern tree strip_array_types                   PARAMS ((tree));\n   (TREE_LANG_FLAG_2 ((NODE)))\n \n /* Nonzero if we want the new ISO rules for pushing a new scope for `for'\n-   initialization variables. */\n+   initialization variables.  */\n #define NEW_FOR_SCOPE_P(NODE) (TREE_LANG_FLAG_0 (NODE))\n \n /* Nonzero if we want to create an ASM_INPUT instead of an\n@@ -825,7 +825,7 @@ enum tree_dump_index\n   TDI_original,\t\t\t/* dump each function before optimizing it */\n   TDI_optimized,\t\t/* dump each function after optimizing it */\n   TDI_inlined,\t\t\t/* dump each function after inlining\n-\t\t\t\t   within it. */\n+\t\t\t\t   within it.  */\n   TDI_end\n };\n "}, {"sha": "5c792683f33f5978ea8d2729556a874ba7da7ffb", "filename": "gcc/c-dump.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2ba84f36eaafd1d53db407e775fff7a286efe004/gcc%2Fc-dump.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2ba84f36eaafd1d53db407e775fff7a286efe004/gcc%2Fc-dump.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-dump.c?ref=2ba84f36eaafd1d53db407e775fff7a286efe004", "patch": "@@ -806,7 +806,7 @@ static struct dump_file_info dump_files[TDI_end] =\n   {\".inlined\", \"dump-tree-inlined\", 0, 0},\n };\n \n-/* Define a name->number mapping for a dump flag value. */\n+/* Define a name->number mapping for a dump flag value.  */\n struct dump_option_value_info\n {\n   const char *const name;\t/* the name of the value */"}, {"sha": "f8badd3a78ff5203d9b2d671498b1283c593e61b", "filename": "gcc/cfg.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2ba84f36eaafd1d53db407e775fff7a286efe004/gcc%2Fcfg.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2ba84f36eaafd1d53db407e775fff7a286efe004/gcc%2Fcfg.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcfg.c?ref=2ba84f36eaafd1d53db407e775fff7a286efe004", "patch": "@@ -210,7 +210,7 @@ expunge_block (b)\n }\n \f\n /* Create an edge connecting SRC and DST with FLAGS optionally using\n-   edge cache CACHE.  Return the new edge, NULL if already exist. */\n+   edge cache CACHE.  Return the new edge, NULL if already exist.  */\n \n edge\n cached_make_edge (edge_cache, src, dst, flags)"}, {"sha": "4105e0acbfee61e50ee735d3745ba0b9795ffc31", "filename": "gcc/diagnostic.h", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2ba84f36eaafd1d53db407e775fff7a286efe004/gcc%2Fdiagnostic.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2ba84f36eaafd1d53db407e775fff7a286efe004/gcc%2Fdiagnostic.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdiagnostic.h?ref=2ba84f36eaafd1d53db407e775fff7a286efe004", "patch": "@@ -55,7 +55,7 @@ typedef enum\n \n /* The type of front-end specific hook that formats trees into an\n    output_buffer.  A language specific printer returns a truth value if\n-   everything goes well. */\n+   everything goes well.  */\n typedef int (*printer_fn) PARAMS ((output_buffer *));\n \n /* This data structure encapsulates an output_buffer's state.  */\n@@ -69,7 +69,7 @@ typedef struct\n   int maximum_length;\n \n   /* The ideal upper bound of number of characters per line, as suggested\n-     by front-end. */  \n+     by front-end.  */  \n   int ideal_maximum_length;\n \n   /* Indentation count.  */\n@@ -234,7 +234,7 @@ struct diagnostic_context\n    ((output_buffer *)(DC))->state.prefixing_rule\n \n /* Maximum characters per line in automatic line wrapping mode.\n-   Zero means don't wrap lines. */\n+   Zero means don't wrap lines.  */\n #define diagnostic_line_cutoff(DC) \\\n    ((output_buffer *)(DC))->state.ideal_maximum_length\n "}, {"sha": "6ea1723c24fa31b05f9a6254aed3ff8983f0c9a4", "filename": "gcc/except.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2ba84f36eaafd1d53db407e775fff7a286efe004/gcc%2Fexcept.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2ba84f36eaafd1d53db407e775fff7a286efe004/gcc%2Fexcept.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fexcept.c?ref=2ba84f36eaafd1d53db407e775fff7a286efe004", "patch": "@@ -1913,7 +1913,7 @@ dw2_build_landing_pads ()\n \t  /* @@@ This is a kludge.  Not all machine descriptions define a\n \t     blockage insn, but we must not allow the code we just generated\n \t     to be reordered by scheduling.  So emit an ASM_INPUT to act as\n-\t     blockage insn. */\n+\t     blockage insn.  */\n \t  emit_insn (gen_rtx_ASM_INPUT (VOIDmode, \"\"));\n \t}\n "}, {"sha": "2338f8267ca3a74557e459261dc116249b5a8569", "filename": "gcc/gcc.h", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2ba84f36eaafd1d53db407e775fff7a286efe004/gcc%2Fgcc.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2ba84f36eaafd1d53db407e775fff7a286efe004/gcc%2Fgcc.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgcc.h?ref=2ba84f36eaafd1d53db407e775fff7a286efe004", "patch": "@@ -23,7 +23,7 @@ Software Foundation, 59 Temple Place - Suite 330, Boston, MA\n \n #include \"version.h\"\n \n-/* These are exported by gcc.c. */\n+/* These are exported by gcc.c.  */\n extern int do_spec PARAMS ((const char *));\n extern void record_temp_file PARAMS ((const char *, int, int));\n extern void fancy_abort PARAMS ((void)) ATTRIBUTE_NORETURN;\n@@ -34,17 +34,17 @@ extern void fatal PARAMS ((const char *, ...))\n extern void error PARAMS ((const char *, ...)) ATTRIBUTE_PRINTF_1;\n extern void pfatal_with_name PARAMS ((const char *)) ATTRIBUTE_NORETURN;\n \n-/* Spec files linked with gcc.c must provide definitions for these. */\n+/* Spec files linked with gcc.c must provide definitions for these.  */\n \n-/* Called before processing to change/add/remove arguments. */\n+/* Called before processing to change/add/remove arguments.  */\n extern void lang_specific_driver PARAMS ((int *, const char *const **, int *));\n \n-/* Called before linking.  Returns 0 on success and -1 on failure. */\n+/* Called before linking.  Returns 0 on success and -1 on failure.  */\n extern int lang_specific_pre_link PARAMS ((void));\n \n extern int n_infiles;\n \n-/* Number of extra output files that lang_specific_pre_link may generate. */\n+/* Number of extra output files that lang_specific_pre_link may generate.  */\n extern int lang_specific_extra_outfiles;\n \n /* A vector of corresponding output files is made up later.  */"}, {"sha": "7352429c80d2ef84b4216f91470921ad52be60de", "filename": "gcc/gcov-io.h", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2ba84f36eaafd1d53db407e775fff7a286efe004/gcc%2Fgcov-io.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2ba84f36eaafd1d53db407e775fff7a286efe004/gcc%2Fgcov-io.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgcov-io.h?ref=2ba84f36eaafd1d53db407e775fff7a286efe004", "patch": "@@ -32,11 +32,11 @@ static int __store_gcov_type PARAMS ((gcov_type, char *, size_t)) ATTRIBUTE_UNUS\n static int __read_gcov_type  PARAMS ((gcov_type *, FILE *, size_t)) ATTRIBUTE_UNUSED;\n static int __write_gcov_type PARAMS ((gcov_type, FILE *, size_t)) ATTRIBUTE_UNUSED;\n \n-/* These routines only work for signed values. */\n+/* These routines only work for signed values.  */\n \n /* Store a portable representation of VALUE in DEST using BYTES*8-1 bits.\n    Return a non-zero value if VALUE requires more than BYTES*8-1 bits\n-   to store. */\n+   to store.  */\n \n static int\n __store_gcov_type (value, dest, bytes)\n@@ -71,7 +71,7 @@ __store_gcov_type (value, dest, bytes)\n \n /* Retrieve a quantity containing BYTES*8-1 bits from SOURCE and store\n    the result in DEST. Returns a non-zero value if the value in SOURCE\n-   will not fit in DEST. */\n+   will not fit in DEST.  */\n \n static int\n __fetch_gcov_type (dest, source, bytes)\n@@ -126,7 +126,7 @@ __fetch_long (dest, source, bytes)\n    Note that VALUE may not actually be large enough to hold BYTES*8\n    bits, but BYTES characters will be written anyway.\n \n-   BYTES may be a maximum of 10. */\n+   BYTES may be a maximum of 10.  */\n \n static int\n __write_gcov_type (value, file, bytes)\n@@ -163,7 +163,7 @@ __write_long (value, file, bytes)\n    Note that DEST may not be large enough to hold all of the requested\n    data, but the function will read BYTES characters anyway.\n \n-   BYTES may be a maximum of 10. */\n+   BYTES may be a maximum of 10.  */\n \n static int\n __read_gcov_type (dest, file, bytes)"}, {"sha": "26e32a5603e3880f034b1d75e69d08f818bbb683", "filename": "gcc/genattrtab.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2ba84f36eaafd1d53db407e775fff7a286efe004/gcc%2Fgenattrtab.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2ba84f36eaafd1d53db407e775fff7a286efe004/gcc%2Fgenattrtab.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgenattrtab.c?ref=2ba84f36eaafd1d53db407e775fff7a286efe004", "patch": "@@ -751,7 +751,7 @@ attr_printf VPARAMS ((register unsigned int len, const char *fmt, ...))\n   VA_FIXEDARG (p, unsigned int, len);\n   VA_FIXEDARG (p, const char *, fmt);\n   \n-  if (len > sizeof str - 1) /* leave room for \\0. */\n+  if (len > sizeof str - 1) /* Leave room for \\0.  */\n     abort ();\n \n   vsprintf (str, fmt, p);"}, {"sha": "9194aea4f2f9b38415411b91457c72a70252d6f3", "filename": "gcc/output.h", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2ba84f36eaafd1d53db407e775fff7a286efe004/gcc%2Foutput.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2ba84f36eaafd1d53db407e775fff7a286efe004/gcc%2Foutput.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Foutput.h?ref=2ba84f36eaafd1d53db407e775fff7a286efe004", "patch": "@@ -163,7 +163,7 @@ extern void force_data_section\t\tPARAMS ((void));\n    the text section.  */\n extern void readonly_data_section\tPARAMS ((void));\n \n-/* Determine if we're in the text section. */\n+/* Determine if we're in the text section.  */\n extern int in_text_section\t\tPARAMS ((void));\n \n #ifdef CTORS_SECTION_ASM_OP\n@@ -394,7 +394,7 @@ extern const char *weak_global_object_name;\n /* Nonzero if function being compiled doesn't contain any calls\n    (ignoring the prologue and epilogue).  This is set prior to\n    local register allocation and is valid for the remaining\n-   compiler passes. */\n+   compiler passes.  */\n \n extern int current_function_is_leaf;\n \n@@ -405,7 +405,7 @@ extern int current_function_nothrow;\n \n /* Nonzero if function being compiled doesn't modify the stack pointer\n    (ignoring the prologue and epilogue).  This is only valid after\n-   life_analysis has run. */\n+   life_analysis has run.  */\n \n extern int current_function_sp_is_unchanging;\n "}, {"sha": "c6bd45f8e8ac29fae6c3b23e69e87c8d64df7b0a", "filename": "gcc/predict.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2ba84f36eaafd1d53db407e775fff7a286efe004/gcc%2Fpredict.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2ba84f36eaafd1d53db407e775fff7a286efe004/gcc%2Fpredict.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fpredict.h?ref=2ba84f36eaafd1d53db407e775fff7a286efe004", "patch": "@@ -24,7 +24,7 @@ enum br_predictor\n {\n #include \"predict.def\"\n \n-  /* Upper bound on non-language-specific builtins. */\n+  /* Upper bound on non-language-specific builtins.  */\n   END_PREDICTORS\n };\n #undef DEF_PREDICTOR"}, {"sha": "3e041756430d1dcf35ec625b2596f35cd24af85c", "filename": "gcc/reload.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2ba84f36eaafd1d53db407e775fff7a286efe004/gcc%2Freload.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2ba84f36eaafd1d53db407e775fff7a286efe004/gcc%2Freload.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Freload.h?ref=2ba84f36eaafd1d53db407e775fff7a286efe004", "patch": "@@ -278,7 +278,7 @@ extern int remove_address_replacements PARAMS ((rtx in_rtx));\n    autoincrement and autodecrement.  */\n extern int operands_match_p PARAMS ((rtx, rtx));\n \n-/* Return 1 if altering OP will not modify the value of CLOBBER. */\n+/* Return 1 if altering OP will not modify the value of CLOBBER.  */\n extern int safe_from_earlyclobber PARAMS ((rtx, rtx));\n \n /* Search the body of INSN for values that need reloading and record them"}, {"sha": "74783efaf83a316cde6f8a1ac077f4373e90caa7", "filename": "gcc/reload1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2ba84f36eaafd1d53db407e775fff7a286efe004/gcc%2Freload1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2ba84f36eaafd1d53db407e775fff7a286efe004/gcc%2Freload1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Freload1.c?ref=2ba84f36eaafd1d53db407e775fff7a286efe004", "patch": "@@ -790,7 +790,7 @@ reload (first, global)\n \t\t    {\n \t\t      /* Always unshare the equivalence, so we can\n \t\t\t substitute into this insn without touching the\n-\t\t\t equivalence. */\n+\t\t\t equivalence.  */\n \t\t      reg_equiv_memory_loc[i] = copy_rtx (x);\n \t\t    }\n \t\t  else if (function_invariant_p (x))"}, {"sha": "fc2330c8e151bc865c42ff56768a283dc2ccf54b", "filename": "gcc/resource.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2ba84f36eaafd1d53db407e775fff7a286efe004/gcc%2Fresource.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2ba84f36eaafd1d53db407e775fff7a286efe004/gcc%2Fresource.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fresource.h?ref=2ba84f36eaafd1d53db407e775fff7a286efe004", "patch": "@@ -23,7 +23,7 @@ Software Foundation, 59 Temple Place - Suite 330, Boston, MA\n  do { (RES)->memory = (RES)->unch_memory = (RES)->volatil = (RES)->cc = 0; \\\n       CLEAR_HARD_REG_SET ((RES)->regs); } while (0)\n \n-/* The resources used by a given insn. */\n+/* The resources used by a given insn.  */\n struct resources\n {\n   char memory;\t\t/* Insn sets or needs a memory location.  */"}, {"sha": "8b74f8e1246ecb6a6b1e92403ce873128dc2fd72", "filename": "gcc/scan.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2ba84f36eaafd1d53db407e775fff7a286efe004/gcc%2Fscan.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2ba84f36eaafd1d53db407e775fff7a286efe004/gcc%2Fscan.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fscan.h?ref=2ba84f36eaafd1d53db407e775fff7a286efe004", "patch": "@@ -68,7 +68,7 @@ extern unsigned int hashstr _PARAMS((const char *, unsigned int));\n struct cpp_reader;\n extern int scan_decls _PARAMS((struct cpp_reader *, int, char **));\n \n-/* get_token is a simple C lexer. */\n+/* get_token is a simple C lexer.  */\n #define IDENTIFIER_TOKEN 300\n #define CHAR_TOKEN 301\n #define STRING_TOKEN 302"}, {"sha": "97c021774c908f56dad11e3b6aaec3e576b593fb", "filename": "gcc/system.h", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2ba84f36eaafd1d53db407e775fff7a286efe004/gcc%2Fsystem.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2ba84f36eaafd1d53db407e775fff7a286efe004/gcc%2Fsystem.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fsystem.h?ref=2ba84f36eaafd1d53db407e775fff7a286efe004", "patch": "@@ -28,7 +28,7 @@ Software Foundation, 59 Temple Place - Suite 330, Boston, MA\n    not under control of the preprocessor.  */\n #define GCCBUGURL \"<URL:http://www.gnu.org/software/gcc/bugs.html>\"\n \n-/* We must include stdarg.h/varargs.h before stdio.h. */\n+/* We must include stdarg.h/varargs.h before stdio.h.  */\n #ifdef ANSI_PROTOTYPES\n #include <stdarg.h>\n #else\n@@ -313,7 +313,7 @@ extern PTR realloc PARAMS ((PTR, size_t));\n #endif\n \n /* If the system doesn't provide strsignal, we get it defined in\n-   libiberty but no declaration is supplied. */\n+   libiberty but no declaration is supplied.  */\n #ifndef HAVE_STRSIGNAL\n # ifndef strsignal\n extern const char *strsignal PARAMS ((int));\n@@ -343,7 +343,7 @@ extern int setrlimit PARAMS ((int, const struct rlimit *));\n #endif\n \n /* HAVE_VOLATILE only refers to the stage1 compiler.  We also check\n-   __STDC__ and assume gcc sets it and has volatile in stage >=2. */\n+   __STDC__ and assume gcc sets it and has volatile in stage >=2.  */\n #if !defined(HAVE_VOLATILE) && !defined(__STDC__) && !defined(volatile)\n #define volatile\n #endif\n@@ -428,7 +428,7 @@ extern void abort PARAMS ((void));\n # define STDERR_FILENO  2\n #endif\n \n-/* Some systems have mkdir that takes a single argument. */\n+/* Some systems have mkdir that takes a single argument.  */\n #ifdef MKDIR_TAKES_ONE_ARG\n # define mkdir(a,b) mkdir(a)\n #endif\n@@ -474,7 +474,7 @@ extern void abort PARAMS ((void));\n   (IS_DIR_SEPARATOR ((STR)[0]) || (STR)[0] == '$')\n #endif\n \n-/* Get libiberty declarations. */\n+/* Get libiberty declarations.  */\n #include \"libiberty.h\"\n #include \"symcat.h\"\n "}, {"sha": "1018408524c2cc2d86030385f81e0e59cb751d2e", "filename": "gcc/tree-inline.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2ba84f36eaafd1d53db407e775fff7a286efe004/gcc%2Ftree-inline.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2ba84f36eaafd1d53db407e775fff7a286efe004/gcc%2Ftree-inline.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-inline.c?ref=2ba84f36eaafd1d53db407e775fff7a286efe004", "patch": "@@ -164,7 +164,7 @@ remap_decl (decl, id)\n \t{\n \t  /* For a VAR_DECL of anonymous type, we must also copy the\n \t     member VAR_DECLS here and rechain the\n-\t     DECL_ANON_UNION_ELEMS. */\n+\t     DECL_ANON_UNION_ELEMS.  */\n \t  tree members = NULL;\n \t  tree src;\n \t  \n@@ -1093,10 +1093,10 @@ walk_tree (tp, func, data, htab_)\n       void **slot;\n       \n       /* Don't walk the same tree twice, if the user has requested\n-         that we avoid doing so. */\n+         that we avoid doing so.  */\n       if (htab_find (htab, *tp))\n \treturn NULL_TREE;\n-      /* If we haven't already seen this node, add it to the table. */\n+      /* If we haven't already seen this node, add it to the table.  */\n       slot = htab_find_slot (htab, *tp, INSERT);\n       *slot = *tp;\n     }"}, {"sha": "ba108397767dad9473e07c7602e389d790dc160d", "filename": "gcc/tree.h", "status": "modified", "additions": 15, "deletions": 15, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2ba84f36eaafd1d53db407e775fff7a286efe004/gcc%2Ftree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2ba84f36eaafd1d53db407e775fff7a286efe004/gcc%2Ftree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree.h?ref=2ba84f36eaafd1d53db407e775fff7a286efe004", "patch": "@@ -85,7 +85,7 @@ enum built_in_function\n {\n #include \"builtins.def\"\n \n-  /* Upper bound on non-language-specific builtins. */\n+  /* Upper bound on non-language-specific builtins.  */\n   END_BUILTINS\n };\n #undef DEF_BUILTIN\n@@ -393,7 +393,7 @@ extern void tree_class_check_failed PARAMS ((const tree, int,\n    || (TREE_CODE (TYPE) == COMPLEX_TYPE \\\n        && TREE_CODE (TREE_TYPE (TYPE)) == REAL_TYPE))\n \n-/* Nonzero if TYPE represents an aggregate (multi-component) type. */\n+/* Nonzero if TYPE represents an aggregate (multi-component) type.  */\n \n #define AGGREGATE_TYPE_P(TYPE) \\\n   (TREE_CODE (TYPE) == ARRAY_TYPE || TREE_CODE (TYPE) == RECORD_TYPE \\\n@@ -989,7 +989,7 @@ struct tree_block\n    type node.  You then set the TYPE_STUB_DECL field of the type node\n    to point back at the TYPE_DECL node.  This allows the debug routines\n    to know that the two nodes represent the same type, so that we only\n-   get one debug info record for them. */\n+   get one debug info record for them.  */\n #define TYPE_STUB_DECL(NODE) (TREE_CHAIN (NODE))\n \n /* In a RECORD_TYPE, UNION_TYPE or QUAL_UNION_TYPE, it means the type\n@@ -1067,11 +1067,11 @@ struct tree_block\n \n /* If set in an ARRAY_TYPE, indicates a string type (for languages\n    that distinguish string from array of char).\n-   If set in a SET_TYPE, indicates a bitstring type. */\n+   If set in a SET_TYPE, indicates a bitstring type.  */\n #define TYPE_STRING_FLAG(NODE) (TYPE_CHECK (NODE)->type.string_flag)\n \n /* If non-NULL, this is an upper bound of the size (in bytes) of an\n-   object of the given ARRAY_TYPE.  This allows temporaries to be allocated. */\n+   object of the given ARRAY_TYPE.  This allows temporaries to be allocated.  */\n #define TYPE_ARRAY_MAX_SIZE(ARRAY_TYPE) TYPE_MAX_VALUE (ARRAY_TYPE)\n \n /* For a VECTOR_TYPE, this is the number of sub-parts of the vector.  */\n@@ -1477,7 +1477,7 @@ struct tree_type\n /* Nonzero for any sort of ..._DECL node means this decl node represents an\n    inline instance of some original (abstract) decl from an inline function;\n    suppress any warnings about shadowing some other variable.  FUNCTION_DECL\n-   nodes can also have their abstract origin set to themselves. */\n+   nodes can also have their abstract origin set to themselves.  */\n #define DECL_FROM_INLINE(NODE) (DECL_ABSTRACT_ORIGIN (NODE) != (tree) 0 \\\n \t\t\t\t&& DECL_ABSTRACT_ORIGIN (NODE) != (NODE))\n \n@@ -1511,15 +1511,15 @@ struct tree_type\n #define DECL_EXTERNAL(NODE) (DECL_CHECK (NODE)->decl.external_flag)\n \n /* In a VAR_DECL for a RECORD_TYPE, sets number for non-init_priority\n-   initializatons. */\n+   initializatons.  */\n #define DEFAULT_INIT_PRIORITY 65535\n #define MAX_INIT_PRIORITY 65535\n #define MAX_RESERVED_INIT_PRIORITY 100\n \n /* In a TYPE_DECL\n    nonzero means the detail info about this type is not dumped into stabs.\n    Instead it will generate cross reference ('x') of names. \n-   This uses the same flag as DECL_EXTERNAL. */\n+   This uses the same flag as DECL_EXTERNAL.  */\n #define TYPE_DECL_SUPPRESS_DEBUG(NODE) \\\n (TYPE_DECL_CHECK (NODE)->decl.external_flag)\n \n@@ -2089,7 +2089,7 @@ extern tree make_tree\t\t\tPARAMS ((tree, rtx));\n    is ATTRIBUTE.\n \n    Such modified types already made are recorded so that duplicates\n-   are not made. */\n+   are not made.  */\n \n extern tree build_type_attribute_variant PARAMS ((tree, tree));\n extern tree build_decl_attribute_variant PARAMS ((tree, tree));\n@@ -2331,8 +2331,8 @@ extern HOST_WIDE_INT int_byte_position\tPARAMS ((tree));\n \n enum size_type_kind\n {\n-  SIZETYPE,\t\t/* Normal representation of sizes in bytes. */\n-  SSIZETYPE,\t\t/* Signed representation of sizes in bytes. */\n+  SIZETYPE,\t\t/* Normal representation of sizes in bytes.  */\n+  SSIZETYPE,\t\t/* Signed representation of sizes in bytes.  */\n   USIZETYPE,\t\t/* Unsigned representation of sizes in bytes.  */\n   BITSIZETYPE,\t\t/* Normal representation of sizes in bits.  */\n   SBITSIZETYPE,\t\t/* Signed representation of sizes in bits.  */\n@@ -2374,10 +2374,10 @@ extern void put_pending_sizes\t\tPARAMS ((tree));\n    + (BITS_PER_UNIT > 8) + (BITS_PER_UNIT > 16) + (BITS_PER_UNIT > 32) \\\n    + (BITS_PER_UNIT > 64) + (BITS_PER_UNIT > 128) + (BITS_PER_UNIT > 256))\n \n-/* If nonzero, an upper limit on alignment of structure fields, in bits. */\n+/* If nonzero, an upper limit on alignment of structure fields, in bits.  */\n extern unsigned int maximum_field_alignment;\n \n-/* If non-zero, the alignment of a bitstring or (power-)set value, in bits. */\n+/* If non-zero, the alignment of a bitstring or (power-)set value, in bits.  */\n extern unsigned int set_alignment;\n \n /* Concatenate two lists (chains of TREE_LIST nodes) X and Y\n@@ -2617,7 +2617,7 @@ extern int pedantic_lvalues;\n \n extern int immediate_size_expand;\n \n-/* Points to the FUNCTION_DECL of the function whose body we are reading. */\n+/* Points to the FUNCTION_DECL of the function whose body we are reading.  */\n \n extern tree current_function_decl;\n \n@@ -2778,7 +2778,7 @@ extern void init_lex\t\t\t\tPARAMS ((void));\n /* Function of no arguments for initializing the symbol table.  */\n extern void init_decl_processing\t\tPARAMS ((void));\n \n-/* Function to identify which front-end produced the output file. */\n+/* Function to identify which front-end produced the output file.  */\n extern const char *lang_identify\t\t\tPARAMS ((void));\n \n /* Function to replace the DECL_LANG_SPECIFIC field of a DECL with a copy.  */"}, {"sha": "97333bba506e022d14a678aff20aa591692b6f9d", "filename": "gcc/tsystem.h", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2ba84f36eaafd1d53db407e775fff7a286efe004/gcc%2Ftsystem.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2ba84f36eaafd1d53db407e775fff7a286efe004/gcc%2Ftsystem.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftsystem.h?ref=2ba84f36eaafd1d53db407e775fff7a286efe004", "patch": "@@ -33,7 +33,7 @@ Software Foundation, 59 Temple Place - Suite 330, Boston, MA\n #define HAVE_DECL_GETOPT 1\n #endif\n \n-/* GCC supplies this header. */\n+/* GCC supplies this header.  */\n #include <stddef.h>\n \n #ifdef inhibit_libc\n@@ -56,16 +56,16 @@ extern int atexit (void (*)(void));\n /* ??? This is not a good solution, since prototypes may be required in\n    some cases for correct code.  */\n \n-/* GCC supplies this header. */\n+/* GCC supplies this header.  */\n #include <stdarg.h>\n \n-/* All systems have this header. */\n+/* All systems have this header.  */\n #include <stdio.h>\n \n-/* All systems have this header. */\n+/* All systems have this header.  */\n #include <sys/types.h>\n \n-/* All systems have this header. */\n+/* All systems have this header.  */\n #include <errno.h>\n \n #ifndef errno\n@@ -76,11 +76,11 @@ extern int errno;\n #include <string.h>\n #endif\n \n-/* GCC (fixproto) guarantees these system headers exist. */\n+/* GCC (fixproto) guarantees these system headers exist.  */\n #include <stdlib.h>\n #include <unistd.h>\n \n-/* GCC supplies this header. */\n+/* GCC supplies this header.  */\n #include <limits.h>\n \n #ifdef POSIX"}, {"sha": "0dea54de3fbf9e6698c5f9a2bf9cb7e5ca43805a", "filename": "gcc/varasm.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2ba84f36eaafd1d53db407e775fff7a286efe004/gcc%2Fvarasm.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2ba84f36eaafd1d53db407e775fff7a286efe004/gcc%2Fvarasm.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fvarasm.c?ref=2ba84f36eaafd1d53db407e775fff7a286efe004", "patch": "@@ -343,7 +343,7 @@ get_named_section_flags (section)\n \n /* Returns true if the section has been declared before.   Sets internal\n    flag on this section in in_named_hash so subsequent calls on this \n-   section will return false. */\n+   section will return false.  */\n \n bool\n named_section_first_declaration (name)"}, {"sha": "12e4a74e329789c226fc592de20c05d9d4960bfd", "filename": "gcc/xcoffout.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2ba84f36eaafd1d53db407e775fff7a286efe004/gcc%2Fxcoffout.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2ba84f36eaafd1d53db407e775fff7a286efe004/gcc%2Fxcoffout.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fxcoffout.h?ref=2ba84f36eaafd1d53db407e775fff7a286efe004", "patch": "@@ -195,7 +195,7 @@ extern const char *xcoff_lastfile;\n \n #define DEBUG_SYMS_TEXT\n \n-/* Prototype functions in xcoffout.c. */\n+/* Prototype functions in xcoffout.c.  */\n \n extern int stab_to_sclass\t\t\tPARAMS ((int));\n #ifdef BUFSIZ"}]}