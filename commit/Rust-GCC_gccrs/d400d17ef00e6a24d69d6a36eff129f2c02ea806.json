{"sha": "d400d17ef00e6a24d69d6a36eff129f2c02ea806", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDQwMGQxN2VmMDBlNmEyNGQ2OWQ2YTM2ZWZmMTI5ZjJjMDJlYTgwNg==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@adacore.com", "date": "2012-05-10T14:57:48Z"}, "committer": {"name": "Eric Botcazou", "email": "ebotcazou@gcc.gnu.org", "date": "2012-05-10T14:57:48Z"}, "message": "gimplify.c (gimplify_decl_expr): For a TYPE_DECL, also gimplify the DECL_ORIGINAL_TYPE if it is present.\n\n\t* gimplify.c (gimplify_decl_expr): For a TYPE_DECL, also gimplify the\n\tDECL_ORIGINAL_TYPE if it is present.\n\nFrom-SVN: r187369", "tree": {"sha": "babd3ce2e8db98e18c499ab64b86675774cc91df", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/babd3ce2e8db98e18c499ab64b86675774cc91df"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d400d17ef00e6a24d69d6a36eff129f2c02ea806", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d400d17ef00e6a24d69d6a36eff129f2c02ea806", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d400d17ef00e6a24d69d6a36eff129f2c02ea806", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d400d17ef00e6a24d69d6a36eff129f2c02ea806/comments", "author": null, "committer": null, "parents": [{"sha": "b5ba5188a546443cf3a6ce3b1306c54265ddf675", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b5ba5188a546443cf3a6ce3b1306c54265ddf675", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b5ba5188a546443cf3a6ce3b1306c54265ddf675"}], "stats": {"total": 45, "additions": 45, "deletions": 0}, "files": [{"sha": "d9eca8eefa10d339f28aeb361e293923f73c39a7", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d400d17ef00e6a24d69d6a36eff129f2c02ea806/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d400d17ef00e6a24d69d6a36eff129f2c02ea806/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=d400d17ef00e6a24d69d6a36eff129f2c02ea806", "patch": "@@ -1,3 +1,8 @@\n+2012-05-10  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* gimplify.c (gimplify_decl_expr): For a TYPE_DECL, also gimplify the\n+\tDECL_ORIGINAL_TYPE if it is present.\n+\n 2012-05-10  Nick Clifton  <nickc@redhat.com>\n \n \tPR target/53120"}, {"sha": "ca38a0e267599e96885aa048fd44cd75bc6ba119", "filename": "gcc/gimplify.c", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d400d17ef00e6a24d69d6a36eff129f2c02ea806/gcc%2Fgimplify.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d400d17ef00e6a24d69d6a36eff129f2c02ea806/gcc%2Fgimplify.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgimplify.c?ref=d400d17ef00e6a24d69d6a36eff129f2c02ea806", "patch": "@@ -1441,6 +1441,13 @@ gimplify_decl_expr (tree *stmt_p, gimple_seq *seq_p)\n       && !TYPE_SIZES_GIMPLIFIED (TREE_TYPE (decl)))\n     gimplify_type_sizes (TREE_TYPE (decl), seq_p);\n \n+  /* ??? DECL_ORIGINAL_TYPE is streamed for LTO so it needs to be gimplified\n+     in case its size expressions contain problematic nodes like CALL_EXPR.  */\n+  if (TREE_CODE (decl) == TYPE_DECL\n+      && DECL_ORIGINAL_TYPE (decl)\n+      && !TYPE_SIZES_GIMPLIFIED (DECL_ORIGINAL_TYPE (decl)))\n+    gimplify_type_sizes (DECL_ORIGINAL_TYPE (decl), seq_p);\n+\n   if (TREE_CODE (decl) == VAR_DECL && !DECL_EXTERNAL (decl))\n     {\n       tree init = DECL_INITIAL (decl);"}, {"sha": "7162e4e0ec872e511c479b4f48d356c39c5e8381", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d400d17ef00e6a24d69d6a36eff129f2c02ea806/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d400d17ef00e6a24d69d6a36eff129f2c02ea806/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=d400d17ef00e6a24d69d6a36eff129f2c02ea806", "patch": "@@ -1,3 +1,7 @@\n+2012-05-10  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* gnat.dg/lto11.ad[sb]: New test.\n+\n 2012-05-09  Uros Bizjak  <ubizjak@gmail.com>\n \n \tPR target/52908"}, {"sha": "ad0b8db30a3034bcd87129a48c888a7ebdf1b113", "filename": "gcc/testsuite/gnat.dg/lto11.adb", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d400d17ef00e6a24d69d6a36eff129f2c02ea806/gcc%2Ftestsuite%2Fgnat.dg%2Flto11.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d400d17ef00e6a24d69d6a36eff129f2c02ea806/gcc%2Ftestsuite%2Fgnat.dg%2Flto11.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Flto11.adb?ref=d400d17ef00e6a24d69d6a36eff129f2c02ea806", "patch": "@@ -0,0 +1,20 @@\n+-- { dg-do compile }\n+-- { dg-options \"-flto\" { target lto } }\n+\n+with Ada.Streams; use Ada.Streams;\n+\n+package body Lto11 is\n+\n+   procedure Write\n+     (S : not null access Root_Stream_Type'Class;\n+      V : Vector)\n+   is\n+      subtype M_SEA is Stream_Element_Array (1 .. V'Size / Stream_Element'Size);\n+      Bytes : M_SEA;\n+      for Bytes'Address use V'Address;\n+      pragma Import (Ada, Bytes);\n+   begin\n+      Ada.Streams.Write (S.all, Bytes);\n+   end;\n+\n+end Lto11;"}, {"sha": "386d5ac4620a23eb1b9a064e33802e705ea3e4cf", "filename": "gcc/testsuite/gnat.dg/lto11.ads", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d400d17ef00e6a24d69d6a36eff129f2c02ea806/gcc%2Ftestsuite%2Fgnat.dg%2Flto11.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d400d17ef00e6a24d69d6a36eff129f2c02ea806/gcc%2Ftestsuite%2Fgnat.dg%2Flto11.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Flto11.ads?ref=d400d17ef00e6a24d69d6a36eff129f2c02ea806", "patch": "@@ -0,0 +1,9 @@\n+with Ada.Streams; use Ada.Streams;\n+\n+package Lto11 is\n+\n+   type Vector is array (Positive range <>) of Float;\n+\n+   procedure Write (S : not null access Root_Stream_Type'Class; V : Vector);\n+\n+end Lto11;"}]}