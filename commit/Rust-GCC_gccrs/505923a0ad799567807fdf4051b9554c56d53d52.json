{"sha": "505923a0ad799567807fdf4051b9554c56d53d52", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTA1OTIzYTBhZDc5OTU2NzgwN2ZkZjQwNTFiOTU1NGM1NmQ1M2Q1Mg==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1997-08-02T21:29:22Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1997-08-02T21:29:22Z"}, "message": "(debug_reload): Rework to make output more compact.\n\nFrom-SVN: r14634", "tree": {"sha": "a8878e13582470ae3949772412aaf9913105149e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a8878e13582470ae3949772412aaf9913105149e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/505923a0ad799567807fdf4051b9554c56d53d52", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/505923a0ad799567807fdf4051b9554c56d53d52", "html_url": "https://github.com/Rust-GCC/gccrs/commit/505923a0ad799567807fdf4051b9554c56d53d52", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/505923a0ad799567807fdf4051b9554c56d53d52/comments", "author": null, "committer": null, "parents": [{"sha": "1d79197a779af13d4b6246e8020532ac5a72cc51", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1d79197a779af13d4b6246e8020532ac5a72cc51", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1d79197a779af13d4b6246e8020532ac5a72cc51"}], "stats": {"total": 71, "additions": 30, "deletions": 41}, "files": [{"sha": "a8bd5de579ac0f7d15dc2b1bde2fcf906cb465b1", "filename": "gcc/reload.c", "status": "modified", "additions": 30, "deletions": 41, "changes": 71, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/505923a0ad799567807fdf4051b9554c56d53d52/gcc%2Freload.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/505923a0ad799567807fdf4051b9554c56d53d52/gcc%2Freload.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Freload.c?ref=505923a0ad799567807fdf4051b9554c56d53d52", "patch": "@@ -6070,94 +6070,83 @@ static char *reg_class_names[] = REG_CLASS_NAMES;\n /* This function is used to print the variables set by 'find_reloads' */\n \n void\n-debug_reload()\n+debug_reload ()\n {\n   int r;\n-\n-  fprintf (stderr, \"\\nn_reloads = %d\\n\", n_reloads);\n+  char *prefix;\n \n   for (r = 0; r < n_reloads; r++)\n     {\n-      fprintf (stderr, \"\\nRELOAD %d\\n\", r);\n+      fprintf (stderr, \"Reload %d: \", r);\n \n-      if (reload_in[r])\n+      if (reload_in[r] != 0)\n \t{\n-\t  fprintf (stderr, \"\\nreload_in (%s) = \",\n+\t  fprintf (stderr, \"reload_in (%s) = \",\n \t\t   GET_MODE_NAME (reload_inmode[r]));\n-\t  debug_rtx (reload_in[r]);\n+\t  print_inline_rtx (stderr, reload_in[r], 24);\n+\t  fprintf (stderr, \"\\n\\t\");\n \t}\n \n-      if (reload_out[r])\n+      if (reload_out[r] != 0)\n \t{\n-\t  fprintf (stderr, \"\\nreload_out (%s) = \",\n+\t  fprintf (stderr, \"reload_out (%s) = \",\n \t\t   GET_MODE_NAME (reload_outmode[r]));\n-\t  debug_rtx (reload_out[r]);\n+\t  print_inline_rtx (stderr, reload_out[r], 24);\n+\t  fprintf (stderr, \"\\n\\t\");\n \t}\n \n       fprintf (stderr, \"%s, \", reg_class_names[(int) reload_reg_class[r]]);\n \n       fprintf (stderr, \"%s (opnum = %d)\",\n-\t       reload_when_needed_name[(int)reload_when_needed[r]],\n+\t       reload_when_needed_name[(int) reload_when_needed[r]],\n \t       reload_opnum[r]);\n \n       if (reload_optional[r])\n \tfprintf (stderr, \", optional\");\n \n-      if (reload_in[r])\n-\tfprintf (stderr, \", inc by %d\\n\", reload_inc[r]);\n+      if (reload_inc[r] != 0)\n+\tfprintf (stderr, \", inc by %d\", reload_inc[r]);\n \n       if (reload_nocombine[r])\n \tfprintf (stderr, \", can't combine\");\n \n       if (reload_secondary_p[r])\n \tfprintf (stderr, \", secondary_reload_p\");\n \n-      if (reload_in_reg[r])\n+      if (reload_in_reg[r] != 0)\n \t{\n-\t  fprintf (stderr, \"\\nreload_in_reg:\\t\\t\\t\");\n-\t  debug_rtx (reload_in_reg[r]);\n+\t  fprintf (stderr, \"\\n\\treload_in_reg: \");\n+\t  print_inline_rtx (stderr, reload_in_reg[r], 24);\n \t}\n \n-      if (reload_reg_rtx[r])\n+      if (reload_reg_rtx[r] != 0)\n \t{\n-\t  fprintf (stderr, \"\\nreload_reg_rtx:\\t\\t\\t\");\n-\t  debug_rtx (reload_reg_rtx[r]);\n+\t  fprintf (stderr, \"\\n\\treload_reg_rtx: \");\n+\t  print_inline_rtx (stderr, reload_reg_rtx[r], 24);\n \t}\n \n+      prefix = \"\\n\\t\";\n       if (reload_secondary_in_reload[r] != -1)\n \t{\n-\t  fprintf (stderr, \"\\nsecondary_in_reload = \");\n-\t  fprintf (stderr, \"%d \", reload_secondary_in_reload[r]);\n+\t  fprintf (stderr, \"%ssecondary_in_reload = %d\",\n+\t\t   prefix, reload_secondary_in_reload[r]);\n+\t  prefix = \", \";\n \t}\n \n       if (reload_secondary_out_reload[r] != -1)\n-\t{\n-\t  if (reload_secondary_in_reload[r] != -1)\n-\t    fprintf (stderr, \", secondary_out_reload = \");\n-\t  else\n-\t    fprintf (stderr, \"\\nsecondary_out_reload = \");\n-\n-\t  fprintf (stderr, \"%d\", reload_secondary_out_reload[r]);\n-\t}\n-\n+\tfprintf (stderr, \"%ssecondary_out_reload = %d\\n\",\n+\t\t prefix, reload_secondary_out_reload[r]);\n \n+      prefix = \"\\n\\t\";\n       if (reload_secondary_in_icode[r] != CODE_FOR_nothing)\n \t{\n-\t  fprintf (stderr, \"\\nsecondary_in_icode = \");\n-\t  fprintf (stderr, \"%s\", insn_name[r]);\n+\t  fprintf (stderr, \"%ssecondary_in_icode = %s\", prefix, insn_name[r]);\n+\t  prefix = \", \";\n \t}\n \n       if (reload_secondary_out_icode[r] != CODE_FOR_nothing)\n-\t{\n-\t  if (reload_secondary_in_icode[r] != CODE_FOR_nothing)\n-\t    fprintf (stderr, \", secondary_out_icode = \");\n-\t  else\n-\t    fprintf (stderr, \"\\nsecondary_out_icode = \");\n+\tfprintf (stderr, \"%ssecondary_out_icode = %s\", prefix, insn_name[r]);\n \n-\t  fprintf (stderr, \"%s \", insn_name[r]);\n-\t}\n       fprintf (stderr, \"\\n\");\n     }\n-\n-  fprintf (stderr, \"\\n\");\n }"}]}