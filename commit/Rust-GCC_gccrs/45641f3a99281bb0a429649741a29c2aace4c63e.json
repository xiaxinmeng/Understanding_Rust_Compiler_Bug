{"sha": "45641f3a99281bb0a429649741a29c2aace4c63e", "node_id": "C_kwDOANBUbNoAKDQ1NjQxZjNhOTkyODFiYjBhNDI5NjQ5NzQxYTI5YzJhYWNlNGM2M2U", "commit": {"author": {"name": "Xi Ruoyao", "email": "xry111@xry111.site", "date": "2023-03-15T07:34:52Z"}, "committer": {"name": "Xi Ruoyao", "email": "xry111@xry111.site", "date": "2023-03-15T09:28:13Z"}, "message": "builtins: Move the character difference into result instead of reassigning result [PR109086]\n\nexpand_simple_binop() is allowed to allocate a new pseudo-register and\nreturn it, instead of forcing the result into the provided\npseudo-register.  This can cause a problem when we expand the unrolled\nloop for __builtin_strcmp: the compiler always generates code for all n\niterations of the loop, so \"result\" will be an alias of the\npseudo-register allocated and used in the last iteration; but at runtime\nthe loop can break early, causing this pseudo-register uninitialized.\n\nEmit a move instruction in the iteration to force the difference into\none register which has been allocated before the loop, to avoid this\nissue.\n\ngcc/ChangeLog:\n\n\tPR other/109086\n\t* builtins.cc (inline_string_cmp): Force the character\n\tdifference into \"result\" pseudo-register, instead of reassign\n\tthe pseudo-register.", "tree": {"sha": "15089cf7c6fcf11508ea436428b074301a1cf5a5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/15089cf7c6fcf11508ea436428b074301a1cf5a5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/45641f3a99281bb0a429649741a29c2aace4c63e", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niHUEABYKAB0WIQSR0PV2MB+STX3t3OisqtIOGecQ4wUCZBGPrQAKCRCsqtIOGecQ\n46voAQCjKQewWO3vkTy2NS99PGiB4eMZt1DIpsrbyMMKSF1VTQEAtcuWDTq//nKT\n3mHAfqGUybFiXcnN85pmt6dP39RE1go=\n=9bgX\n-----END PGP SIGNATURE-----", "payload": "tree 15089cf7c6fcf11508ea436428b074301a1cf5a5\nparent 02fcaf412ae9508b75efa9602cd4ac58bc63d6a4\nauthor Xi Ruoyao <xry111@xry111.site> 1678865692 +0800\ncommitter Xi Ruoyao <xry111@xry111.site> 1678872493 +0800\n\nbuiltins: Move the character difference into result instead of reassigning result [PR109086]\n\nexpand_simple_binop() is allowed to allocate a new pseudo-register and\nreturn it, instead of forcing the result into the provided\npseudo-register.  This can cause a problem when we expand the unrolled\nloop for __builtin_strcmp: the compiler always generates code for all n\niterations of the loop, so \"result\" will be an alias of the\npseudo-register allocated and used in the last iteration; but at runtime\nthe loop can break early, causing this pseudo-register uninitialized.\n\nEmit a move instruction in the iteration to force the difference into\none register which has been allocated before the loop, to avoid this\nissue.\n\ngcc/ChangeLog:\n\n\tPR other/109086\n\t* builtins.cc (inline_string_cmp): Force the character\n\tdifference into \"result\" pseudo-register, instead of reassign\n\tthe pseudo-register.\n"}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/45641f3a99281bb0a429649741a29c2aace4c63e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/45641f3a99281bb0a429649741a29c2aace4c63e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/45641f3a99281bb0a429649741a29c2aace4c63e/comments", "author": {"login": "xry111", "id": 8733039, "node_id": "MDQ6VXNlcjg3MzMwMzk=", "avatar_url": "https://avatars.githubusercontent.com/u/8733039?v=4", "gravatar_id": "", "url": "https://api.github.com/users/xry111", "html_url": "https://github.com/xry111", "followers_url": "https://api.github.com/users/xry111/followers", "following_url": "https://api.github.com/users/xry111/following{/other_user}", "gists_url": "https://api.github.com/users/xry111/gists{/gist_id}", "starred_url": "https://api.github.com/users/xry111/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/xry111/subscriptions", "organizations_url": "https://api.github.com/users/xry111/orgs", "repos_url": "https://api.github.com/users/xry111/repos", "events_url": "https://api.github.com/users/xry111/events{/privacy}", "received_events_url": "https://api.github.com/users/xry111/received_events", "type": "User", "site_admin": false}, "committer": {"login": "xry111", "id": 8733039, "node_id": "MDQ6VXNlcjg3MzMwMzk=", "avatar_url": "https://avatars.githubusercontent.com/u/8733039?v=4", "gravatar_id": "", "url": "https://api.github.com/users/xry111", "html_url": "https://github.com/xry111", "followers_url": "https://api.github.com/users/xry111/followers", "following_url": "https://api.github.com/users/xry111/following{/other_user}", "gists_url": "https://api.github.com/users/xry111/gists{/gist_id}", "starred_url": "https://api.github.com/users/xry111/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/xry111/subscriptions", "organizations_url": "https://api.github.com/users/xry111/orgs", "repos_url": "https://api.github.com/users/xry111/repos", "events_url": "https://api.github.com/users/xry111/events{/privacy}", "received_events_url": "https://api.github.com/users/xry111/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "02fcaf412ae9508b75efa9602cd4ac58bc63d6a4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/02fcaf412ae9508b75efa9602cd4ac58bc63d6a4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/02fcaf412ae9508b75efa9602cd4ac58bc63d6a4"}], "stats": {"total": 12, "additions": 10, "deletions": 2}, "files": [{"sha": "90246e214d6c6f8861ca4470a853aae18306f446", "filename": "gcc/builtins.cc", "status": "modified", "additions": 10, "deletions": 2, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/45641f3a99281bb0a429649741a29c2aace4c63e/gcc%2Fbuiltins.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/45641f3a99281bb0a429649741a29c2aace4c63e/gcc%2Fbuiltins.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fbuiltins.cc?ref=45641f3a99281bb0a429649741a29c2aace4c63e", "patch": "@@ -7142,8 +7142,16 @@ inline_string_cmp (rtx target, tree var_str, const char *const_str,\n \n       op0 = convert_modes (mode, unit_mode, op0, 1);\n       op1 = convert_modes (mode, unit_mode, op1, 1);\n-      result = expand_simple_binop (mode, MINUS, op0, op1,\n-\t\t\t\t    result, 1, OPTAB_WIDEN);\n+      rtx diff = expand_simple_binop (mode, MINUS, op0, op1,\n+\t\t\t\t      result, 1, OPTAB_WIDEN);\n+\n+      /* Force the difference into result register.  We cannot reassign\n+\t result here (\"result = diff\") or we may end up returning\n+\t uninitialized result when expand_simple_binop allocates a new\n+\t pseudo-register for returning.  */\n+      if (diff != result)\n+\temit_move_insn (result, diff);\n+\n       if (i < length - 1)\n \temit_cmp_and_jump_insns (result, CONST0_RTX (mode), NE, NULL_RTX,\n \t    \t\t\t mode, true, ne_label);"}]}