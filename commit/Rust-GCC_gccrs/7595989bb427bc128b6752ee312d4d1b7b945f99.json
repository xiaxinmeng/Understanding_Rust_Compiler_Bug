{"sha": "7595989bb427bc128b6752ee312d4d1b7b945f99", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzU5NTk4OWJiNDI3YmMxMjhiNjc1MmVlMzEyZDRkMWI3Yjk0NWY5OQ==", "commit": {"author": {"name": "Richard Guenther", "email": "rguenther@suse.de", "date": "2012-05-18T12:09:49Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2012-05-18T12:09:49Z"}, "message": "re PR tree-optimization/53390 (ICE: tree check: expected integer_cst, have nop_expr in vect_compute_data_ref_alignmen on 32-bit x86 host)\n\n2012-05-18  Richard Guenther  <rguenther@suse.de>\n\n\tPR tree-optimization/53390\n\t* tree-vect-data-refs.c (vect_compute_data_ref_alignment): Ignore\n\tstrided loads.\n\n\t* gcc.dg/torture/pr53390.c: New testcase.\n\nFrom-SVN: r187653", "tree": {"sha": "9aae7ac764f8a15c859e29be337d0f35b644b903", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9aae7ac764f8a15c859e29be337d0f35b644b903"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7595989bb427bc128b6752ee312d4d1b7b945f99", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7595989bb427bc128b6752ee312d4d1b7b945f99", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7595989bb427bc128b6752ee312d4d1b7b945f99", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7595989bb427bc128b6752ee312d4d1b7b945f99/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "917a52020ad1cc0d799476bffcc900a1a14824f5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/917a52020ad1cc0d799476bffcc900a1a14824f5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/917a52020ad1cc0d799476bffcc900a1a14824f5"}], "stats": {"total": 37, "additions": 37, "deletions": 0}, "files": [{"sha": "70571cd4b5800558ad75a739c6dd33ddf579b3a3", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7595989bb427bc128b6752ee312d4d1b7b945f99/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7595989bb427bc128b6752ee312d4d1b7b945f99/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=7595989bb427bc128b6752ee312d4d1b7b945f99", "patch": "@@ -1,3 +1,9 @@\n+2012-05-18  Richard Guenther  <rguenther@suse.de>\n+\n+\tPR tree-optimization/53390\n+\t* tree-vect-data-refs.c (vect_compute_data_ref_alignment): Ignore\n+\tstrided loads.\n+\n 2012-05-18  Bill Schmidt  <wschmidt@linux.vnet.ibm.com>\n \n \t* tree-ssa-reassoc.c (bip_map): Remove decl."}, {"sha": "fb6ede643aa9320a3b502f17c67b9c64702861c9", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7595989bb427bc128b6752ee312d4d1b7b945f99/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7595989bb427bc128b6752ee312d4d1b7b945f99/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=7595989bb427bc128b6752ee312d4d1b7b945f99", "patch": "@@ -1,3 +1,8 @@\n+2012-05-18  Richard Guenther  <rguenther@suse.de>\n+\n+\tPR tree-optimization/53390\n+\t* gcc.dg/torture/pr53390.c: New testcase.\n+\n 2012-05-18  Meador Inge  <meadori@codesourcery.com>\n \n \tPR rtl-optimization/53352"}, {"sha": "72a25c52eac2eb43e9e17c29d25ae77fbd514d07", "filename": "gcc/testsuite/gcc.dg/torture/pr53390.c", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7595989bb427bc128b6752ee312d4d1b7b945f99/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr53390.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7595989bb427bc128b6752ee312d4d1b7b945f99/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr53390.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr53390.c?ref=7595989bb427bc128b6752ee312d4d1b7b945f99", "patch": "@@ -0,0 +1,21 @@\n+/* { dg-do compile } */\n+\n+extern unsigned short var1;\n+extern int var2;\n+\n+extern struct {\n+  int f1;\n+  unsigned short *f2;\n+} *my_table;\n+\n+void foo(void)\n+{\n+  unsigned short *local_vec\n+    = __builtin_malloc(var1 * var2 * sizeof(unsigned short));\n+  unsigned short i;\n+\n+  my_table[0].f2 = __builtin_malloc(var1 * sizeof(unsigned short));\n+\n+  for (i = 0; i < var1; ++i)\n+    my_table[0].f2[i] = local_vec[i * var2];\n+}"}, {"sha": "a5ed0533db6ca3e03a4c2f91afa0a95c163c3676", "filename": "gcc/tree-vect-data-refs.c", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7595989bb427bc128b6752ee312d4d1b7b945f99/gcc%2Ftree-vect-data-refs.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7595989bb427bc128b6752ee312d4d1b7b945f99/gcc%2Ftree-vect-data-refs.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vect-data-refs.c?ref=7595989bb427bc128b6752ee312d4d1b7b945f99", "patch": "@@ -824,6 +824,11 @@ vect_compute_data_ref_alignment (struct data_reference *dr)\n   /* Initialize misalignment to unknown.  */\n   SET_DR_MISALIGNMENT (dr, -1);\n \n+  /* Strided loads perform only component accesses, misalignment information\n+     is irrelevant for them.  */\n+  if (STMT_VINFO_STRIDE_LOAD_P (stmt_info))\n+    return true;\n+\n   misalign = DR_INIT (dr);\n   aligned_to = DR_ALIGNED_TO (dr);\n   base_addr = DR_BASE_ADDRESS (dr);"}]}