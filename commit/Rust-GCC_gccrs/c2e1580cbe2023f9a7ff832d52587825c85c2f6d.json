{"sha": "c2e1580cbe2023f9a7ff832d52587825c85c2f6d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzJlMTU4MGNiZTIwMjNmOWE3ZmY4MzJkNTI1ODc4MjVjODVjMmY2ZA==", "commit": {"author": {"name": "Tom de Vries", "email": "tom@codesourcery.com", "date": "2018-05-02T07:12:15Z"}, "committer": {"name": "Tom de Vries", "email": "vries@gcc.gnu.org", "date": "2018-05-02T07:12:15Z"}, "message": "[lto] Add \"could not find mkoffload\" error message to lto-wrapper\n\n2018-05-02  Tom de Vries  <tom@codesourcery.com>\n\n\tPR lto/85451\n\t* lto-wrapper.c (compile_offload_image): Add \"could not find mkoffload\"\n\terror message.\n\nFrom-SVN: r259821", "tree": {"sha": "188bd964c2bf723bbfced6eaacbe277c9ea15d3a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/188bd964c2bf723bbfced6eaacbe277c9ea15d3a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c2e1580cbe2023f9a7ff832d52587825c85c2f6d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c2e1580cbe2023f9a7ff832d52587825c85c2f6d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c2e1580cbe2023f9a7ff832d52587825c85c2f6d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c2e1580cbe2023f9a7ff832d52587825c85c2f6d/comments", "author": null, "committer": null, "parents": [{"sha": "01f30ce6ea0a7b0e60fd2284fd17b078f1d53d3c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/01f30ce6ea0a7b0e60fd2284fd17b078f1d53d3c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/01f30ce6ea0a7b0e60fd2284fd17b078f1d53d3c"}], "stats": {"total": 72, "additions": 40, "deletions": 32}, "files": [{"sha": "65f76ab976b8d71c606da44d57475a248599974e", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c2e1580cbe2023f9a7ff832d52587825c85c2f6d/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c2e1580cbe2023f9a7ff832d52587825c85c2f6d/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=c2e1580cbe2023f9a7ff832d52587825c85c2f6d", "patch": "@@ -1,3 +1,9 @@\n+2018-05-02  Tom de Vries  <tom@codesourcery.com>\n+\n+\tPR lto/85451\n+\t* lto-wrapper.c (compile_offload_image): Add \"could not find mkoffload\"\n+\terror message.\n+\n 2018-05-01  Marc Glisse  <marc.glisse@inria.fr>\n \n \tPR tree-optimization/85143"}, {"sha": "7de58d4778125d8b05b7dc4f56604448b7d7706d", "filename": "gcc/lto-wrapper.c", "status": "modified", "additions": 34, "deletions": 32, "changes": 66, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c2e1580cbe2023f9a7ff832d52587825c85c2f6d/gcc%2Flto-wrapper.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c2e1580cbe2023f9a7ff832d52587825c85c2f6d/gcc%2Flto-wrapper.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flto-wrapper.c?ref=c2e1580cbe2023f9a7ff832d52587825c85c2f6d", "patch": "@@ -749,42 +749,44 @@ compile_offload_image (const char *target, const char *compiler_path,\n \tbreak;\n       }\n \n-  if (compiler)\n-    {\n-      /* Generate temporary output file name.  */\n-      filename = make_temp_file (\".target.o\");\n-\n-      struct obstack argv_obstack;\n-      obstack_init (&argv_obstack);\n-      obstack_ptr_grow (&argv_obstack, compiler);\n-      if (save_temps)\n-\tobstack_ptr_grow (&argv_obstack, \"-save-temps\");\n-      if (verbose)\n-\tobstack_ptr_grow (&argv_obstack, \"-v\");\n-      obstack_ptr_grow (&argv_obstack, \"-o\");\n-      obstack_ptr_grow (&argv_obstack, filename);\n+  if (!compiler)\n+    fatal_error (input_location,\n+\t\t \"could not find %s in %s (consider using '-B')\\n\", suffix + 1,\n+\t\t compiler_path);\n \n-      /* Append names of input object files.  */\n-      for (unsigned i = 0; i < in_argc; i++)\n-\tobstack_ptr_grow (&argv_obstack, in_argv[i]);\n+  /* Generate temporary output file name.  */\n+  filename = make_temp_file (\".target.o\");\n \n-      /* Append options from offload_lto sections.  */\n-      append_compiler_options (&argv_obstack, compiler_opts,\n-\t\t\t       compiler_opt_count);\n-      append_diag_options (&argv_obstack, linker_opts, linker_opt_count);\n+  struct obstack argv_obstack;\n+  obstack_init (&argv_obstack);\n+  obstack_ptr_grow (&argv_obstack, compiler);\n+  if (save_temps)\n+    obstack_ptr_grow (&argv_obstack, \"-save-temps\");\n+  if (verbose)\n+    obstack_ptr_grow (&argv_obstack, \"-v\");\n+  obstack_ptr_grow (&argv_obstack, \"-o\");\n+  obstack_ptr_grow (&argv_obstack, filename);\n \n-      /* Append options specified by -foffload last.  In case of conflicting\n-\t options we expect offload compiler to choose the latest.  */\n-      append_offload_options (&argv_obstack, target, compiler_opts,\n-\t\t\t      compiler_opt_count);\n-      append_offload_options (&argv_obstack, target, linker_opts,\n-\t\t\t      linker_opt_count);\n+  /* Append names of input object files.  */\n+  for (unsigned i = 0; i < in_argc; i++)\n+    obstack_ptr_grow (&argv_obstack, in_argv[i]);\n \n-      obstack_ptr_grow (&argv_obstack, NULL);\n-      argv = XOBFINISH (&argv_obstack, char **);\n-      fork_execute (argv[0], argv, true);\n-      obstack_free (&argv_obstack, NULL);\n-    }\n+  /* Append options from offload_lto sections.  */\n+  append_compiler_options (&argv_obstack, compiler_opts,\n+\t\t\t   compiler_opt_count);\n+  append_diag_options (&argv_obstack, linker_opts, linker_opt_count);\n+\n+  /* Append options specified by -foffload last.  In case of conflicting\n+     options we expect offload compiler to choose the latest.  */\n+  append_offload_options (&argv_obstack, target, compiler_opts,\n+\t\t\t  compiler_opt_count);\n+  append_offload_options (&argv_obstack, target, linker_opts,\n+\t\t\t  linker_opt_count);\n+\n+  obstack_ptr_grow (&argv_obstack, NULL);\n+  argv = XOBFINISH (&argv_obstack, char **);\n+  fork_execute (argv[0], argv, true);\n+  obstack_free (&argv_obstack, NULL);\n \n   free_array_of_ptrs ((void **) paths, n_paths);\n   return filename;"}]}