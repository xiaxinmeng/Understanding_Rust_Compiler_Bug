{"sha": "f28573f4914479bb9f9ca96f3a1436dcadb36c51", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjI4NTczZjQ5MTQ0NzliYjlmOWNhOTZmM2ExNDM2ZGNhZGIzNmM1MQ==", "commit": {"author": {"name": "Ed Schonberg", "email": "schonberg@adacore.com", "date": "2007-04-06T09:27:42Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2007-04-06T09:27:42Z"}, "message": "sinfo.ads, sinfo.adb (Coextensions): New element list for allocators...\n\n2007-04-06  Ed Schonberg  <schonberg@adacore.com>\n\t    Robert Dewar  <dewar@adacore.com>\n\n\t* sinfo.ads, sinfo.adb (Coextensions): New element list for allocators,\n\tto chain nested components that are allocators for access discriminants\n\tof the enclosing object.\n\tAdd N_Push and N_Pop nodes\n\tNew field Exception_Label added\n\t(Local_Raise_Statements): New field in N_Exception_Handler_Node\n\t(Local_Raise_Not_OK): New flag in N_Exception_Handler_Node\n\t(Is_Coextension): New flag for allocators, to mark allocators that\n\tcorrespond to access discriminants of dynamically allocated objects.\n\t(N_Block_Statement): Document the fact that the corresponding entity\n\tcan be an E_Return_Statement.\n\t(Is_Coextension): New flag for allocators.\n\tRemove all code for DSP option\n\n\t* sprint.ads, sprint.adb: Display basic information for class_wide\n\tsubtypes. Add handling of N_Push and N_Pop nodes\n\nFrom-SVN: r123600", "tree": {"sha": "09de6cbedd12384c33d75cfc489f9993e719764d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/09de6cbedd12384c33d75cfc489f9993e719764d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f28573f4914479bb9f9ca96f3a1436dcadb36c51", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f28573f4914479bb9f9ca96f3a1436dcadb36c51", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f28573f4914479bb9f9ca96f3a1436dcadb36c51", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f28573f4914479bb9f9ca96f3a1436dcadb36c51/comments", "author": {"login": "Edschonberg", "id": 6352375, "node_id": "MDQ6VXNlcjYzNTIzNzU=", "avatar_url": "https://avatars.githubusercontent.com/u/6352375?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Edschonberg", "html_url": "https://github.com/Edschonberg", "followers_url": "https://api.github.com/users/Edschonberg/followers", "following_url": "https://api.github.com/users/Edschonberg/following{/other_user}", "gists_url": "https://api.github.com/users/Edschonberg/gists{/gist_id}", "starred_url": "https://api.github.com/users/Edschonberg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Edschonberg/subscriptions", "organizations_url": "https://api.github.com/users/Edschonberg/orgs", "repos_url": "https://api.github.com/users/Edschonberg/repos", "events_url": "https://api.github.com/users/Edschonberg/events{/privacy}", "received_events_url": "https://api.github.com/users/Edschonberg/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "9e87a68deb22cb321bcec7c4cb6da10aa4a81827", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9e87a68deb22cb321bcec7c4cb6da10aa4a81827", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9e87a68deb22cb321bcec7c4cb6da10aa4a81827"}], "stats": {"total": 416, "additions": 379, "deletions": 37}, "files": [{"sha": "6d0f28917bf2211a06762b13e3b5629c82576f32", "filename": "gcc/ada/sinfo.adb", "status": "modified", "additions": 86, "deletions": 0, "changes": 86, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f28573f4914479bb9f9ca96f3a1436dcadb36c51/gcc%2Fada%2Fsinfo.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f28573f4914479bb9f9ca96f3a1436dcadb36c51/gcc%2Fada%2Fsinfo.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsinfo.adb?ref=f28573f4914479bb9f9ca96f3a1436dcadb36c51", "patch": "@@ -380,6 +380,14 @@ package body Sinfo is\n       return List1 (N);\n    end Choices;\n \n+   function Coextensions\n+      (N : Node_Id) return Elist_Id is\n+   begin\n+      pragma Assert (False\n+        or else NT (N).Nkind = N_Allocator);\n+      return Elist4 (N);\n+   end Coextensions;\n+\n    function Comes_From_Extended_Return_Statement\n      (N : Node_Id) return Boolean is\n    begin\n@@ -1100,6 +1108,17 @@ package body Sinfo is\n       return Flag7 (N);\n    end Exception_Junk;\n \n+   function Exception_Label\n+     (N : Node_Id) return Node_Id is\n+   begin\n+      pragma Assert (False\n+        or else NT (N).Nkind = N_Exception_Handler\n+        or else NT (N).Nkind = N_Push_Constraint_Error_Label\n+        or else NT (N).Nkind = N_Push_Program_Error_Label\n+        or else NT (N).Nkind = N_Push_Storage_Error_Label);\n+      return Node5 (N);\n+   end Exception_Label;\n+\n    function Expansion_Delayed\n      (N : Node_Id) return Boolean is\n    begin\n@@ -1522,6 +1541,14 @@ package body Sinfo is\n       return Flag7 (N);\n    end Is_Asynchronous_Call_Block;\n \n+   function Is_Coextension\n+      (N : Node_Id) return Boolean is\n+   begin\n+      pragma Assert (False\n+        or else NT (N).Nkind = N_Allocator);\n+      return Flag18 (N);\n+   end Is_Coextension;\n+\n    function Is_Component_Left_Opnd\n       (N : Node_Id) return Boolean is\n    begin\n@@ -1740,6 +1767,22 @@ package body Sinfo is\n       return List1 (N);\n    end Literals;\n \n+   function Local_Raise_Not_OK\n+      (N : Node_Id) return Boolean is\n+   begin\n+      pragma Assert (False\n+        or else NT (N).Nkind = N_Exception_Handler);\n+      return Flag7 (N);\n+   end Local_Raise_Not_OK;\n+\n+   function Local_Raise_Statements\n+      (N : Node_Id) return Elist_Id is\n+   begin\n+      pragma Assert (False\n+        or else NT (N).Nkind = N_Exception_Handler);\n+      return Elist1 (N);\n+   end Local_Raise_Statements;\n+\n    function Loop_Actions\n       (N : Node_Id) return List_Id is\n    begin\n@@ -3022,6 +3065,14 @@ package body Sinfo is\n       Set_List1_With_Parent (N, Val);\n    end Set_Choices;\n \n+   procedure Set_Coextensions\n+      (N : Node_Id; Val : Elist_Id) is\n+   begin\n+      pragma Assert (False\n+        or else NT (N).Nkind = N_Allocator);\n+      Set_Elist4 (N, Val);\n+   end Set_Coextensions;\n+\n    procedure Set_Comes_From_Extended_Return_Statement\n      (N : Node_Id; Val : Boolean := True) is\n    begin\n@@ -3733,6 +3784,17 @@ package body Sinfo is\n       Set_Flag7 (N, Val);\n    end Set_Exception_Junk;\n \n+   procedure Set_Exception_Label\n+     (N : Node_Id; Val : Node_Id) is\n+   begin\n+      pragma Assert (False\n+        or else NT (N).Nkind = N_Exception_Handler\n+        or else NT (N).Nkind = N_Push_Constraint_Error_Label\n+        or else NT (N).Nkind = N_Push_Program_Error_Label\n+        or else NT (N).Nkind = N_Push_Storage_Error_Label);\n+      Set_Node5 (N, Val); -- semantic field, no parent set\n+   end Set_Exception_Label;\n+\n    procedure Set_Expansion_Delayed\n      (N : Node_Id; Val : Boolean := True) is\n    begin\n@@ -4155,6 +4217,14 @@ package body Sinfo is\n       Set_Flag7 (N, Val);\n    end Set_Is_Asynchronous_Call_Block;\n \n+   procedure Set_Is_Coextension\n+      (N : Node_Id; Val : Boolean := True) is\n+   begin\n+      pragma Assert (False\n+        or else NT (N).Nkind = N_Allocator);\n+      Set_Flag18 (N, Val);\n+   end Set_Is_Coextension;\n+\n    procedure Set_Is_Component_Left_Opnd\n       (N : Node_Id; Val : Boolean := True) is\n    begin\n@@ -4373,6 +4443,22 @@ package body Sinfo is\n       Set_List1_With_Parent (N, Val);\n    end Set_Literals;\n \n+   procedure Set_Local_Raise_Not_OK\n+      (N : Node_Id; Val : Boolean := True) is\n+   begin\n+      pragma Assert (False\n+        or else NT (N).Nkind = N_Exception_Handler);\n+      Set_Flag7 (N, Val);\n+   end Set_Local_Raise_Not_OK;\n+\n+   procedure Set_Local_Raise_Statements\n+      (N : Node_Id; Val : Elist_Id) is\n+   begin\n+      pragma Assert (False\n+        or else NT (N).Nkind = N_Exception_Handler);\n+      Set_Elist1 (N, Val);\n+   end Set_Local_Raise_Statements;\n+\n    procedure Set_Loop_Actions\n       (N : Node_Id; Val : List_Id) is\n    begin"}, {"sha": "85fbcf1f9a300a2b7e33743b6b1860b3e64a15a6", "filename": "gcc/ada/sinfo.ads", "status": "modified", "additions": 253, "deletions": 36, "changes": 289, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f28573f4914479bb9f9ca96f3a1436dcadb36c51/gcc%2Fada%2Fsinfo.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f28573f4914479bb9f9ca96f3a1436dcadb36c51/gcc%2Fada%2Fsinfo.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsinfo.ads?ref=f28573f4914479bb9f9ca96f3a1436dcadb36c51", "patch": "@@ -462,6 +462,10 @@ package Sinfo is\n    --    already been analyzed, both for efficiency and functional correctness\n    --    reasons.\n \n+   --  Coextensions (Elist4-Sem)\n+   --    Present in allocators nodes. Points to list of allocators for the\n+   --    access discriminants of the allocated object,\n+\n    --  Comes_From_Source (Flag2)\n    --    This flag is on for any nodes built by the scanner or parser from the\n    --    source program, and off for any nodes built by the analyzer or\n@@ -474,6 +478,15 @@ package Sinfo is\n    --    refers to a node or is posted on its source location, and has the\n    --    effect of inhibiting further messages involving this same node.\n \n+   --  Local_Raise_Statements (Elist1)\n+   --    This field is present in exception handler nodes. It is set to\n+   --    No_Elist in the normal case. If there is at least one raise statement\n+   --    which can potentially be handled as a local raise, then this field\n+   --    points to a list of raise nodes, which are calls to a routine to raise\n+   --    an exception. These are raise nodes which can be optimized into gotos\n+   --    if the handler turns out to meet the conditions which permit this\n+   --    transformation.\n+\n    --  Has_Dynamic_Length_Check (Flag10-Sem)\n    --    This flag is present on all nodes. It is set to indicate that one of\n    --    the routines in unit Checks has generated a length check action which\n@@ -532,7 +545,12 @@ package Sinfo is\n    --    declared Activation_Chain variable when the first task is declared.\n    --    When tasks are declared in the corresponding declarative region this\n    --    entity is located by name (its name is always _Chain) and the declared\n-   --    tasks are added to the chain.\n+   --    tasks are added to the chain. Note that N_Extended_Return_Statement\n+   --    does not have this attribute, although it does have an activation\n+   --    chain. This chain is used to store the tasks temporarily, and is not\n+   --    used for activating them. On successful completion of the return\n+   --    statement, the tasks are moved to the caller's chain, and the caller\n+   --    activates them.\n \n    --  Acts_As_Spec (Flag4-Sem)\n    --    A flag set in the N_Subprogram_Body node for a subprogram body which\n@@ -643,7 +661,7 @@ package Sinfo is\n    --    freeze point.\n \n    --  Comes_From_Extended_Return_Statement (Flag18-Sem)\n-   --    Present in N_Return_Statement nodes.  True if this node was\n+   --    Present in N_Return_Statement nodes. True if this node was\n    --    constructed as part of the expansion of an\n    --    N_Extended_Return_Statement.\n \n@@ -702,7 +720,7 @@ package Sinfo is\n    --  Corresponding_Generic_Association (Node5-Sem)\n    --    This field is defined for object declarations and object renaming\n    --    declarations. It is set for the declarations within an instance that\n-   --    map generic formals to their actuals.  If set, the field points to\n+   --    map generic formals to their actuals. If set, the field points to\n    --    a generic_association which is the original parent of the expression\n    --    or name appearing in the declaration. This simplifies ASIS queries.\n \n@@ -939,6 +957,15 @@ package Sinfo is\n    --    analyzing the control flow of the relevant sequence of statements\n    --    (e.g. to check that it does not end with a bad return statement).\n \n+   --  Exception_Label (Node5-Sem)\n+   --    Appears in N_Push_xxx_Label nodes. Points to the entity of the label\n+   --    to be used for transforming the corresponding exception into a goto,\n+   --    or contains Empty, if this exception is not to be transformed. Also\n+   --    appears in N_Exception_Handler nodes, where, if set, it indicates\n+   --    that there may be a local raise for the handler, so that expansion\n+   --    to allow a goto is required (and this field contains the label for\n+   --    this goto). See Exp_Ch11.Expand_Local_Exception_Handlers for details.\n+\n    --  Expansion_Delayed (Flag11-Sem)\n    --    Set on aggregates and extension aggregates that need a top-down rather\n    --    than bottom up expansion. Typically aggregate expansion happens bottom\n@@ -1116,6 +1143,12 @@ package Sinfo is\n    --    expansion of an asynchronous entry call. Such a block needs cleanup\n    --    handler to assure that the call is cancelled.\n \n+   --  Is_Coextension (Flag18-Sem)\n+   --    Present in allocator nodes, to indicate that this is an allocator\n+   --    for an access discriminant of a dynamically allocated object. The\n+   --    coextension must be deallocated and finalized at the same time as\n+   --    the enclosing object.\n+\n    --  Is_Component_Left_Opnd  (Flag13-Sem)\n    --  Is_Component_Right_Opnd (Flag14-Sem)\n    --    Present in concatenation nodes, to indicate that the corresponding\n@@ -1214,6 +1247,8 @@ package Sinfo is\n    --    N_Block_Statement or N_Loop_Statement node to which the label\n    --    declaration applies. This is not currently used in the compiler\n    --    itself, but it is useful in the implementation of ASIS queries.\n+   --    This field is left empty for the special labels generated as part\n+   --    of expanding raise statements with a local exception handler.\n \n    --  Library_Unit (Node4-Sem)\n    --    In a stub node, Library_Unit points to the compilation unit node of\n@@ -1259,6 +1294,12 @@ package Sinfo is\n    --    package is mentioned in a limited_with_clause in the closure of the\n    --    unit being compiled.\n \n+   --  Local_Raise_Not_OK (Flag7-Sem)\n+   --    Present in N_Exception_Handler nodes. Set if the handler contains\n+   --    a construct (reraise statement, or call to subprogram in package\n+   --    GNAT.Current_Exception) that makes the handler unsuitable as a target\n+   --    for a local raise (one that could otherwise be converted to a goto).\n+\n    --  Must_Be_Byte_Aligned (Flag14-Sem)\n    --    This flag is present in N_Attribute_Reference nodes. It can be set\n    --    only for the Address and Unrestricted_Access attributes. If set it\n@@ -1483,25 +1524,23 @@ package Sinfo is\n    --  Static_Processing_OK (Flag4-Sem)\n    --    Present in N_Aggregate nodes. When the Compile_Time_Known_Aggregate\n    --    flag is set, the full value of the aggregate can be determined at\n-   --    compile time and the aggregate can be passed as is to the back-end. In\n-   --    this event it is irrelevant whether this flag is set or not. However,\n-   --    if the Compile_Time_Known_Aggregate flag is not set but\n+   --    compile time and the aggregate can be passed as is to the back-end.\n+   --    In this event it is irrelevant whether this flag is set or not.\n+   --    However, if the flag Compile_Time_Known_Aggregate is not set but\n    --    Static_Processing_OK is set, the aggregate can (but need not) be\n    --    converted into a compile time known aggregate by the expander. See\n    --    Sem_Aggr for the specific conditions under which an aggregate has its\n    --    Static_Processing_OK flag set.\n \n    --  Storage_Pool (Node1-Sem)\n-   --    Present in N_Allocator, N_Free_Statement, N_Return_Statement,\n-   --    and N_Extended_Return_Statement nodes.\n-   --    References the entity for the storage pool to be used for the allocate\n-   --    or free call or for the allocation of the returned value from a\n-   --    function. Empty indicates that the global default default pool is to\n-   --    be used. Note that in the case of a return statement, this field is\n-   --    set only if the function returns value of a type whose size is not\n-   --    known at compile time on the secondary stack. It is never set on\n-   --    targets for which the parameter Functions_Return_By_DSP_On_Target in\n-   --    Targparm is True.\n+   --    Present in N_Allocator, N_Free_Statement, N_Return_Statement, and\n+   --    N_Extended_Return_Statement nodes. References the entity for the\n+   --    storage pool to be used for the allocate or free call or for the\n+   --    allocation of the returned value from function. Empty indicates that\n+   --    the global default default pool is to be used. Note that in the case\n+   --    of a return statement, this field is set only if the function returns\n+   --    value of a type whose size is not known at compile time on the\n+   --    secondary stack.\n \n    --  Target_Type (Node2-Sem)\n    --    Used in an N_Validate_Unchecked_Conversion node to point to the target\n@@ -3602,8 +3641,10 @@ package Sinfo is\n       --  Null_Exclusion_Present (Flag11)\n       --  Storage_Pool (Node1-Sem)\n       --  Procedure_To_Call (Node2-Sem)\n+      --  Coextensions (Elist4-Sem)\n       --  No_Initialization (Flag13-Sem)\n       --  Do_Storage_Check (Flag17-Sem)\n+      --  Is_Coextension (Flag18-Sem)\n       --  plus fields for expression\n \n       ---------------------------------\n@@ -3868,19 +3909,21 @@ package Sinfo is\n \n       --  Note that the occurrence of a block identifier is not a defining\n       --  identifier, but rather a referencing occurrence. The defining\n-      --  occurrence is in the implicit label declaration which occurs in\n-      --  the innermost enclosing block.\n-\n-      --  Note: there is always a block statement identifier present in\n-      --  the tree, even if none was given in the source. In the case where\n-      --  no block identifier is given in the source, the parser creates\n-      --  a name of the form _Block_n, where n is a decimal integer (the\n-      --  two underlines ensure that the block names created in this manner\n-      --  do not conflict with any user defined identifiers), and the flag\n-      --  Has_Created_Identifier is set to True. The only exception to the\n-      --  rule that all loop statement nodes have identifiers occurs for\n-      --  blocks constructed by the expander, and the semantic analyzer\n-      --  creates and supplies dummy names for the blocks).\n+      --  occurrence is an E_Block entity declared by the implicit label\n+      --  declaration which occurs in the innermost enclosing block statement\n+      --  or body; the block identifier denotes that E_Block.\n+\n+      --  For block statements that come from source code, there is always a\n+      --  block statement identifier present in the tree, denoting an\n+      --  E_Block. In the case where no block identifier is given in the\n+      --  source, the parser creates a name of the form B_n, where n is a\n+      --  decimal integer, and the flag Has_Created_Identifier is set to\n+      --  True. Blocks constructed by the expander usually have no identifier,\n+      --  and no corresponding entity.\n+\n+      --  Note well: the block statement created for an extended return\n+      --  statement has an entity, and this entity is an E_Return_Statement,\n+      --  rather than the usual E_Block.\n \n       --  N_Block_Statement\n       --  Sloc points to DECLARE or BEGIN\n@@ -5518,7 +5561,10 @@ package Sinfo is\n       --  Choice_Parameter (Node2) (set to Empty if not present)\n       --  Exception_Choices (List4)\n       --  Statements (List3)\n+      --  Exception_Label (Node5-Sem) (set to Empty of not present)\n       --  Zero_Cost_Handling (Flag5-Sem)\n+      --  Local_Raise_Statements (Elist1-Sem) (set to No_Elist if not present)\n+      --  Local_Raise_Not_OK (Flag7-Sem)\n \n       ------------------------------------------\n       -- 11.2  Choice parameter specification --\n@@ -6483,7 +6529,10 @@ package Sinfo is\n       --  error. The creation of this node will usually be accompanied by a\n       --  message (unless it appears within the right operand of a short\n       --  circuit form whose left argument is static and decisively\n-      --  eliminates elaboration of the raise operation.\n+      --  eliminates elaboration of the raise operation. The condition field\n+      --  can ONLY be present when the node is used as a statement form, it\n+      --  may NOT be present in the case where the node appears within an\n+      --  expression.\n \n       --  The exception is generated with a message that contains the\n       --  file name and line number, and then appended text. The Reason\n@@ -6522,6 +6571,72 @@ package Sinfo is\n       --  In the case where a debug source file is generated, the Sloc for\n       --  this node points to the left bracket in the Sprint file output.\n \n+      --  Note: the back end may be required to translate these nodes into\n+      --  appropriate goto statements. See description of N_Push/Pop_xxx_Label.\n+\n+      ---------------------------------------------\n+      -- Optimization of Exception Raise to Goto --\n+      ---------------------------------------------\n+\n+      --  In some cases, the front end will determine that any exception raised\n+      --  by the back end for a certain exception should be transformed into a\n+      --  goto statement.\n+\n+      --  There are three kinds of exceptions raised by the back end (note that\n+      --  for this purpose we consider gigi to be part of the back end in the\n+      --  gcc case):\n+\n+      --     1. Exceptions resulting from N_Raise_xxx_Error nodes\n+      --     2. Exceptions from checks triggered by Do_xxx_Check flags\n+      --     3. Other cases not specifically marked by the front end\n+\n+      --  Normally all such exceptions are translated into calls to the proper\n+      --  Rcheck_xx procedure, where xx encodes both the exception to be raised\n+      --  and the exception message.\n+\n+      --  The front end may determine that for a particular sequence of code,\n+      --  exceptions in any of these three categories for a particular builtin\n+      --  exception should result in a goto, rather than a call to Rcheck_xx.\n+      --  The exact sequence to be generated is:\n+\n+      --      Local_Raise (exception'Identity);\n+      --      goto Label\n+\n+      --  The front end marks such a sequence of code by bracketing it with\n+      --  push and pop nodes:\n+\n+      --       N_Push_xxx_Label (referencing the label)\n+      --       ...\n+      --       (code where transformation is expected for exception xxx)\n+      --       ...\n+      --       N_Pop_xxx_Label\n+\n+      --  The use of push/pop reflects the fact that such regions can properly\n+      --  nest, and one special case is a subregion in which no transformation\n+      --  is allowed. Such a region is marked by a N_Push_xxx_Label node whose\n+      --  Exception_Label field is Empty.\n+\n+      --  N_Push_Constraint_Error_Label\n+      --  Sloc references first statement in region covered\n+      --  Exception_Label (Node5-Sem)\n+\n+      --  N_Push_Program_Error_Label\n+      --  Sloc references first statement in region covered\n+      --  Exception_Label (Node5-Sem)\n+\n+      --  N_Push_Storage_Error_Label\n+      --  Sloc references first statement in region covered\n+      --  Exception_Label (Node5-Sem)\n+\n+      --  N_Pop_Constraint_Error_Label\n+      --  Sloc references last statement in region covered\n+\n+      --  N_Pop_Program_Error_Label\n+      --  Sloc references last statement in region covered\n+\n+      --  N_Pop_Storage_Error_Label\n+      --  Sloc references last statement in region covered\n+\n       ---------------\n       -- Reference --\n       ---------------\n@@ -6978,6 +7093,18 @@ package Sinfo is\n       N_Formal_Abstract_Subprogram_Declaration,\n       N_Formal_Concrete_Subprogram_Declaration,\n \n+      --  N_Push_xxx_Label\n+\n+      N_Push_Constraint_Error_Label,\n+      N_Push_Program_Error_Label,\n+      N_Push_Storage_Error_Label,\n+\n+      --  N_Pop_xxx_Label\n+\n+      N_Pop_Constraint_Error_Label,\n+      N_Pop_Program_Error_Label,\n+      N_Pop_Storage_Error_Label,\n+\n       --  Other nodes (not part of any subtype class)\n \n       N_Abortable_Part,\n@@ -7161,6 +7288,14 @@ package Sinfo is\n      N_Package_Body ..\n      N_Task_Body;\n \n+   subtype N_Push_xxx_Label is Node_Kind range\n+     N_Push_Constraint_Error_Label ..\n+     N_Push_Storage_Error_Label;\n+\n+   subtype N_Pop_xxx_Label is Node_Kind range\n+     N_Pop_Constraint_Error_Label ..\n+     N_Pop_Storage_Error_Label;\n+\n    subtype N_Raise_xxx_Error is Node_Kind range\n      N_Raise_Constraint_Error ..\n      N_Raise_Storage_Error;\n@@ -7327,6 +7462,9 @@ package Sinfo is\n    function Choices\n      (N : Node_Id) return List_Id;    -- List1\n \n+   function Coextensions\n+      (N : Node_Id) return Elist_Id;  -- Elist4\n+\n    function Comes_From_Extended_Return_Statement\n      (N : Node_Id) return Boolean;    -- Flag18\n \n@@ -7549,6 +7687,9 @@ package Sinfo is\n    function Exception_Junk\n      (N : Node_Id) return Boolean;    -- Flag7\n \n+   function Exception_Label\n+     (N : Node_Id) return Node_Id;    -- Node5\n+\n    function Explicit_Actual_Parameter\n      (N : Node_Id) return Node_Id;    -- Node3\n \n@@ -7681,6 +7822,9 @@ package Sinfo is\n    function Is_Asynchronous_Call_Block\n      (N : Node_Id) return Boolean;    -- Flag7\n \n+   function Is_Coextension\n+     (N : Node_Id) return Boolean;    -- Flag18\n+\n    function Is_Component_Left_Opnd\n      (N : Node_Id) return Boolean;    -- Flag13\n \n@@ -7756,6 +7900,12 @@ package Sinfo is\n    function Literals\n      (N : Node_Id) return List_Id;    -- List1\n \n+   function Local_Raise_Not_OK\n+     (N : Node_Id) return Boolean;    -- Flag7\n+\n+   function Local_Raise_Statements\n+     (N : Node_Id) return Elist_Id;   -- Elist1\n+\n    function Loop_Actions\n      (N : Node_Id) return List_Id;    -- List2\n \n@@ -8158,6 +8308,9 @@ package Sinfo is\n    procedure Set_Choice_Parameter\n      (N : Node_Id; Val : Node_Id);            -- Node2\n \n+   procedure Set_Coextensions\n+     (N : Node_Id; Val : Elist_Id);           -- Elist4\n+\n    procedure Set_Choices\n      (N : Node_Id; Val : List_Id);            -- List1\n \n@@ -8380,6 +8533,9 @@ package Sinfo is\n    procedure Set_Exception_Junk\n      (N : Node_Id; Val : Boolean := True);    -- Flag7\n \n+   procedure Set_Exception_Label\n+     (N : Node_Id; Val : Node_Id);            -- Node5\n+\n    procedure Set_Expansion_Delayed\n      (N : Node_Id; Val : Boolean := True);    -- Flag11\n \n@@ -8512,6 +8668,9 @@ package Sinfo is\n    procedure Set_Is_Asynchronous_Call_Block\n      (N : Node_Id; Val : Boolean := True);    -- Flag7\n \n+   procedure Set_Is_Coextension\n+     (N : Node_Id; Val : Boolean := True);    -- Flag18\n+\n    procedure Set_Is_Component_Left_Opnd\n      (N : Node_Id; Val : Boolean := True);    -- Flag13\n \n@@ -8587,6 +8746,12 @@ package Sinfo is\n    procedure Set_Literals\n      (N : Node_Id; Val : List_Id);            -- List1\n \n+   procedure Set_Local_Raise_Not_OK\n+     (N : Node_Id; Val : Boolean := True);    -- Flag7\n+\n+   procedure Set_Local_Raise_Statements\n+     (N : Node_Id; Val : Elist_Id);           -- Elist1\n+\n    procedure Set_Loop_Actions\n      (N : Node_Id; Val : List_Id);            -- List2\n \n@@ -9463,7 +9628,7 @@ package Sinfo is\n        (1 => False,   --  Storage_Pool (Node1-Sem)\n         2 => False,   --  Procedure_To_Call (Node2-Sem)\n         3 => True,    --  Expression (Node3)\n-        4 => False,   --  unused\n+        4 => False,   --  Coextensions (Elist4-Sem)\n         5 => False),  --  Etype (Node5-Sem)\n \n      N_Null_Statement =>\n@@ -10034,11 +10199,11 @@ package Sinfo is\n         5 => True),   --  Exception_Handlers (List5)\n \n      N_Exception_Handler =>\n-       (1 => False,   --  unused\n+       (1 => False,   --  Local_Raise_Statements (Elist1)\n         2 => True,    --  Choice_Parameter (Node2)\n         3 => True,    --  Statements (List3)\n         4 => True,    --  Exception_Choices (List4)\n-        5 => False),  --  unused\n+        5 => False),  --  Exception_Label (Node5)\n \n      N_Raise_Statement =>\n        (1 => False,   --  unused\n@@ -10334,6 +10499,48 @@ package Sinfo is\n         4 => False,   --  unused\n         5 => False),  --  Etype (Node5-Sem)\n \n+     N_Push_Constraint_Error_Label =>\n+       (1 => False,   --  unused\n+        2 => False,   --  unused\n+        3 => False,   --  unused\n+        4 => False,   --  unused\n+        5 => False),  --  unused\n+\n+     N_Push_Program_Error_Label =>\n+       (1 => False,   --  Exception_Label\n+        2 => False,   --  unused\n+        3 => False,   --  unused\n+        4 => False,   --  unused\n+        5 => False),  --  Exception_Label\n+\n+     N_Push_Storage_Error_Label =>\n+       (1 => False,   --  Exception_Label\n+        2 => False,   --  unused\n+        3 => False,   --  unused\n+        4 => False,   --  unused\n+        5 => False),  --  Exception_Label\n+\n+     N_Pop_Constraint_Error_Label =>\n+       (1 => False,   --  unused\n+        2 => False,   --  unused\n+        3 => False,   --  unused\n+        4 => False,   --  unused\n+        5 => False),  --  unused\n+\n+     N_Pop_Program_Error_Label =>\n+       (1 => False,   --  unused\n+        2 => False,   --  unused\n+        3 => False,   --  unused\n+        4 => False,   --  unused\n+        5 => False),  --  unused\n+\n+     N_Pop_Storage_Error_Label =>\n+       (1 => False,   --  unused\n+        2 => False,   --  unused\n+        3 => False,   --  unused\n+        4 => False,   --  unused\n+        5 => False),  --  unused\n+\n      N_Reference =>\n        (1 => False,   --  unused\n         2 => False,   --  unused\n@@ -10443,6 +10650,7 @@ package Sinfo is\n    pragma Inline (Check_Address_Alignment);\n    pragma Inline (Choice_Parameter);\n    pragma Inline (Choices);\n+   pragma Inline (Coextensions);\n    pragma Inline (Comes_From_Extended_Return_Statement);\n    pragma Inline (Compile_Time_Known_Aggregate);\n    pragma Inline (Component_Associations);\n@@ -10515,8 +10723,9 @@ package Sinfo is\n    pragma Inline (Entry_Index_Specification);\n    pragma Inline (Etype);\n    pragma Inline (Exception_Choices);\n-   pragma Inline (Exception_Junk);\n    pragma Inline (Exception_Handlers);\n+   pragma Inline (Exception_Junk);\n+   pragma Inline (Exception_Label);\n    pragma Inline (Expansion_Delayed);\n    pragma Inline (Explicit_Actual_Parameter);\n    pragma Inline (Explicit_Generic_Actual_Parameter);\n@@ -10542,6 +10751,7 @@ package Sinfo is\n    pragma Inline (Has_Created_Identifier);\n    pragma Inline (Has_Dynamic_Length_Check);\n    pragma Inline (Has_Dynamic_Range_Check);\n+   pragma Inline (Has_Self_Reference);\n    pragma Inline (Has_No_Elaboration_Code);\n    pragma Inline (Has_Priority_Pragma);\n    pragma Inline (Has_Private_View);\n@@ -10560,6 +10770,7 @@ package Sinfo is\n    pragma Inline (Instance_Spec);\n    pragma Inline (Intval);\n    pragma Inline (Is_Asynchronous_Call_Block);\n+   pragma Inline (Is_Coextension);\n    pragma Inline (Is_Component_Left_Opnd);\n    pragma Inline (Is_Component_Right_Opnd);\n    pragma Inline (Is_Controlling_Actual);\n@@ -10570,7 +10781,6 @@ package Sinfo is\n    pragma Inline (Is_Overloaded);\n    pragma Inline (Is_Power_Of_2_For_Shift);\n    pragma Inline (Is_Protected_Subprogram_Body);\n-   pragma Inline (Has_Self_Reference);\n    pragma Inline (Is_Static_Expression);\n    pragma Inline (Is_Subprogram_Descriptor);\n    pragma Inline (Is_Task_Allocation_Block);\n@@ -10586,6 +10796,8 @@ package Sinfo is\n    pragma Inline (Limited_View_Installed);\n    pragma Inline (Limited_Present);\n    pragma Inline (Literals);\n+   pragma Inline (Local_Raise_Not_OK);\n+   pragma Inline (Local_Raise_Statements);\n    pragma Inline (Loop_Actions);\n    pragma Inline (Loop_Parameter_Specification);\n    pragma Inline (Low_Bound);\n@@ -10718,6 +10930,7 @@ package Sinfo is\n    pragma Inline (Set_Check_Address_Alignment);\n    pragma Inline (Set_Choice_Parameter);\n    pragma Inline (Set_Choices);\n+   pragma Inline (Set_Coextensions);\n    pragma Inline (Set_Comes_From_Extended_Return_Statement);\n    pragma Inline (Set_Compile_Time_Known_Aggregate);\n    pragma Inline (Set_Component_Associations);\n@@ -10789,8 +11002,9 @@ package Sinfo is\n    pragma Inline (Set_Entry_Index_Specification);\n    pragma Inline (Set_Etype);\n    pragma Inline (Set_Exception_Choices);\n-   pragma Inline (Set_Exception_Junk);\n    pragma Inline (Set_Exception_Handlers);\n+   pragma Inline (Set_Exception_Junk);\n+   pragma Inline (Set_Exception_Label);\n    pragma Inline (Set_Expansion_Delayed);\n    pragma Inline (Set_Explicit_Actual_Parameter);\n    pragma Inline (Set_Explicit_Generic_Actual_Parameter);\n@@ -10834,6 +11048,7 @@ package Sinfo is\n    pragma Inline (Set_Instance_Spec);\n    pragma Inline (Set_Intval);\n    pragma Inline (Set_Is_Asynchronous_Call_Block);\n+   pragma Inline (Set_Is_Coextension);\n    pragma Inline (Set_Is_Component_Left_Opnd);\n    pragma Inline (Set_Is_Component_Right_Opnd);\n    pragma Inline (Set_Is_Controlling_Actual);\n@@ -10860,6 +11075,8 @@ package Sinfo is\n    pragma Inline (Set_Limited_View_Installed);\n    pragma Inline (Set_Limited_Present);\n    pragma Inline (Set_Literals);\n+   pragma Inline (Set_Local_Raise_Not_OK);\n+   pragma Inline (Set_Local_Raise_Statements);\n    pragma Inline (Set_Loop_Actions);\n    pragma Inline (Set_Loop_Parameter_Specification);\n    pragma Inline (Set_Low_Bound);"}, {"sha": "51131e3a67f1c9cc9d547900aca6efa30c4d8a33", "filename": "gcc/ada/sprint.adb", "status": "modified", "additions": 38, "deletions": 1, "changes": 39, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f28573f4914479bb9f9ca96f3a1436dcadb36c51/gcc%2Fada%2Fsprint.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f28573f4914479bb9f9ca96f3a1436dcadb36c51/gcc%2Fada%2Fsprint.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsprint.adb?ref=f28573f4914479bb9f9ca96f3a1436dcadb36c51", "patch": "@@ -2218,6 +2218,42 @@ package body Sprint is\n                Write_Str (\", \");\n             end if;\n \n+         when N_Pop_Constraint_Error_Label =>\n+            Write_Indent_Str (\"%pop_constraint_error_label\");\n+\n+         when N_Pop_Program_Error_Label =>\n+            Write_Indent_Str (\"%pop_program_error_label\");\n+\n+         when N_Pop_Storage_Error_Label =>\n+            Write_Indent_Str (\"%pop_storage_error_label\");\n+\n+         when N_Push_Constraint_Error_Label =>\n+            Write_Indent_Str (\"%push_constraint_error_label (\");\n+\n+            if Present (Exception_Label (Node)) then\n+               Write_Name_With_Col_Check (Chars (Exception_Label (Node)));\n+            end if;\n+\n+            Write_Str (\")\");\n+\n+         when N_Push_Program_Error_Label =>\n+            Write_Indent_Str (\"%push_program_error_label (\");\n+\n+            if Present (Exception_Label (Node)) then\n+               Write_Name_With_Col_Check (Chars (Exception_Label (Node)));\n+            end if;\n+\n+            Write_Str (\")\");\n+\n+         when N_Push_Storage_Error_Label =>\n+            Write_Indent_Str (\"%push_storage_error_label (\");\n+\n+            if Present (Exception_Label (Node)) then\n+               Write_Name_With_Col_Check (Chars (Exception_Label (Node)));\n+            end if;\n+\n+            Write_Str (\")\");\n+\n          when N_Pragma =>\n             Write_Indent_Str_Sloc (\"pragma \");\n             Write_Name_With_Col_Check (Chars (Node));\n@@ -3698,7 +3734,8 @@ package body Sprint is\n \n                   --  Class-Wide types\n \n-                  when E_Class_Wide_Type =>\n+                  when E_Class_Wide_Type    |\n+                       E_Class_Wide_Subtype =>\n                      Write_Header;\n                      Write_Name_With_Col_Check (Chars (Etype (Typ)));\n                      Write_Str (\"'Class\");"}, {"sha": "66aeea83bd3b4807b89f2a152040ed3301adfcb8", "filename": "gcc/ada/sprint.ads", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f28573f4914479bb9f9ca96f3a1436dcadb36c51/gcc%2Fada%2Fsprint.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f28573f4914479bb9f9ca96f3a1436dcadb36c51/gcc%2Fada%2Fsprint.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsprint.ads?ref=f28573f4914479bb9f9ca96f3a1436dcadb36c51", "patch": "@@ -67,6 +67,8 @@ package Sprint is\n    --    Multiply wi Treat_Fixed_As_Integer  x #* y\n    --    Multiply wi Rounded_Result          x @* y\n    --    Others choice for cleanup           when all others\n+   --    Pop exception label                 %pop_xxx_exception_label\n+   --    Push exception label                %push_xxx_exception_label (label)\n    --    Raise xxx error                     [xxx_error [when cond]]\n    --    Raise xxx error with msg            [xxx_error [when cond], \"msg\"]\n    --    Rational literal                    See UR_Write for details"}]}