{"sha": "2a1586401a21dcd43e0f904bb6eec26c8b2f366b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmExNTg2NDAxYTIxZGNkNDNlMGY5MDRiYjZlZWMyNmM4YjJmMzY2Yg==", "commit": {"author": {"name": "Tom de Vries", "email": "tdevries@suse.de", "date": "2021-05-12T10:40:37Z"}, "committer": {"name": "Tom de Vries", "email": "tdevries@suse.de", "date": "2021-05-12T16:37:07Z"}, "message": "[nvptx] Add -mptx=3.1/6.3\n\nAdd nvptx option -mptx that sets the ptx ISA version.  This is currently\nhardcoded to 3.1.\n\nTested libgomp on x86_64-linux with nvptx accelerator, both with default set to\n3.1 and 6.3.\n\ngcc/ChangeLog:\n\n2021-05-12  Tom de Vries  <tdevries@suse.de>\n\n\tPR target/96005\n\t* config/nvptx/nvptx-opts.h (enum ptx_version): New enum.\n\t* config/nvptx/nvptx.c (nvptx_file_start): Print .version according\n\tto ptx_version_option.\n\t* config/nvptx/nvptx.h (TARGET_PTX_6_3): Define.\n\t* config/nvptx/nvptx.md (define_insn \"nvptx_shuffle<mode>\")\n\t(define_insn \"nvptx_vote_ballot\"): Use sync variant for\n\tTARGET_PTX_6_3.\n\t* config/nvptx/nvptx.opt (ptx_version): Add enum.\n\t(mptx): Add option.\n\t* doc/invoke.texi (Nvidia PTX Options): Add mptx item.", "tree": {"sha": "29c3521ca3d33d8048644f821afcd4e9adfa9570", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/29c3521ca3d33d8048644f821afcd4e9adfa9570"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2a1586401a21dcd43e0f904bb6eec26c8b2f366b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2a1586401a21dcd43e0f904bb6eec26c8b2f366b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2a1586401a21dcd43e0f904bb6eec26c8b2f366b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2a1586401a21dcd43e0f904bb6eec26c8b2f366b/comments", "author": {"login": "vries", "id": 4057235, "node_id": "MDQ6VXNlcjQwNTcyMzU=", "avatar_url": "https://avatars.githubusercontent.com/u/4057235?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vries", "html_url": "https://github.com/vries", "followers_url": "https://api.github.com/users/vries/followers", "following_url": "https://api.github.com/users/vries/following{/other_user}", "gists_url": "https://api.github.com/users/vries/gists{/gist_id}", "starred_url": "https://api.github.com/users/vries/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vries/subscriptions", "organizations_url": "https://api.github.com/users/vries/orgs", "repos_url": "https://api.github.com/users/vries/repos", "events_url": "https://api.github.com/users/vries/events{/privacy}", "received_events_url": "https://api.github.com/users/vries/received_events", "type": "User", "site_admin": false}, "committer": {"login": "vries", "id": 4057235, "node_id": "MDQ6VXNlcjQwNTcyMzU=", "avatar_url": "https://avatars.githubusercontent.com/u/4057235?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vries", "html_url": "https://github.com/vries", "followers_url": "https://api.github.com/users/vries/followers", "following_url": "https://api.github.com/users/vries/following{/other_user}", "gists_url": "https://api.github.com/users/vries/gists{/gist_id}", "starred_url": "https://api.github.com/users/vries/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vries/subscriptions", "organizations_url": "https://api.github.com/users/vries/orgs", "repos_url": "https://api.github.com/users/vries/repos", "events_url": "https://api.github.com/users/vries/events{/privacy}", "received_events_url": "https://api.github.com/users/vries/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "097fde5e7514e909f2e8472be2e008d0cab2260d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/097fde5e7514e909f2e8472be2e008d0cab2260d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/097fde5e7514e909f2e8472be2e008d0cab2260d"}], "stats": {"total": 47, "additions": 44, "deletions": 3}, "files": [{"sha": "bfa926ef0f78650883e1fbe9bf3685e67bf2e34e", "filename": "gcc/config/nvptx/nvptx-opts.h", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2a1586401a21dcd43e0f904bb6eec26c8b2f366b/gcc%2Fconfig%2Fnvptx%2Fnvptx-opts.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2a1586401a21dcd43e0f904bb6eec26c8b2f366b/gcc%2Fconfig%2Fnvptx%2Fnvptx-opts.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fnvptx%2Fnvptx-opts.h?ref=2a1586401a21dcd43e0f904bb6eec26c8b2f366b", "patch": "@@ -26,5 +26,11 @@ enum ptx_isa\n   PTX_ISA_SM35\n };\n \n+enum ptx_version\n+{\n+  PTX_VERSION_3_1,\n+  PTX_VERSION_6_3\n+};\n+\n #endif\n "}, {"sha": "ebbfa9215899716c8d9fb059b36b2654cd6486e4", "filename": "gcc/config/nvptx/nvptx.c", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2a1586401a21dcd43e0f904bb6eec26c8b2f366b/gcc%2Fconfig%2Fnvptx%2Fnvptx.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2a1586401a21dcd43e0f904bb6eec26c8b2f366b/gcc%2Fconfig%2Fnvptx%2Fnvptx.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fnvptx%2Fnvptx.c?ref=2a1586401a21dcd43e0f904bb6eec26c8b2f366b", "patch": "@@ -5309,7 +5309,10 @@ static void\n nvptx_file_start (void)\n {\n   fputs (\"// BEGIN PREAMBLE\\n\", asm_out_file);\n-  fputs (\"\\t.version\\t3.1\\n\", asm_out_file);\n+  if (TARGET_PTX_6_3)\n+    fputs (\"\\t.version\\t6.3\\n\", asm_out_file);\n+  else\n+    fputs (\"\\t.version\\t3.1\\n\", asm_out_file);\n   if (TARGET_SM35)\n     fputs (\"\\t.target\\tsm_35\\n\", asm_out_file);\n   else"}, {"sha": "fdaacdd72d8968d0f49921175b6929bfc84d3924", "filename": "gcc/config/nvptx/nvptx.h", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2a1586401a21dcd43e0f904bb6eec26c8b2f366b/gcc%2Fconfig%2Fnvptx%2Fnvptx.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2a1586401a21dcd43e0f904bb6eec26c8b2f366b/gcc%2Fconfig%2Fnvptx%2Fnvptx.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fnvptx%2Fnvptx.h?ref=2a1586401a21dcd43e0f904bb6eec26c8b2f366b", "patch": "@@ -98,6 +98,8 @@\n \n #define TARGET_SM35 (ptx_isa_option >= PTX_ISA_SM35)\n \n+#define TARGET_PTX_6_3 (ptx_version_option >= PTX_VERSION_6_3)\n+\n /* Registers.  Since ptx is a virtual target, we just define a few\n    hard registers for special purposes and leave pseudos unallocated.\n    We have to have some available hard registers, to keep gcc setup"}, {"sha": "00bb8fea8214ee0319a505512c8f96f62432df71", "filename": "gcc/config/nvptx/nvptx.md", "status": "modified", "additions": 12, "deletions": 2, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2a1586401a21dcd43e0f904bb6eec26c8b2f366b/gcc%2Fconfig%2Fnvptx%2Fnvptx.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2a1586401a21dcd43e0f904bb6eec26c8b2f366b/gcc%2Fconfig%2Fnvptx%2Fnvptx.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fnvptx%2Fnvptx.md?ref=2a1586401a21dcd43e0f904bb6eec26c8b2f366b", "patch": "@@ -1452,14 +1452,24 @@\n \t\t (match_operand:SI 3 \"const_int_operand\" \"n\")]\n \t\t  UNSPEC_SHUFFLE))]\n   \"\"\n-  \"%.\\\\tshfl%S3.b32\\\\t%0, %1, %2, 31;\")\n+  {\n+    if (TARGET_PTX_6_3)\n+      return \"%.\\\\tshfl.sync%S3.b32\\\\t%0, %1, %2, 31, 0xffffffff;\";\n+    else\n+      return \"%.\\\\tshfl%S3.b32\\\\t%0, %1, %2, 31;\";\n+  })\n \n (define_insn \"nvptx_vote_ballot\"\n   [(set (match_operand:SI 0 \"nvptx_register_operand\" \"=R\")\n \t(unspec:SI [(match_operand:BI 1 \"nvptx_register_operand\" \"R\")]\n \t\t   UNSPEC_VOTE_BALLOT))]\n   \"\"\n-  \"%.\\\\tvote.ballot.b32\\\\t%0, %1;\")\n+  {\n+    if (TARGET_PTX_6_3)\n+      return \"%.\\\\tvote.sync.ballot.b32\\\\t%0, %1, 0xffffffff;\";\n+    else\n+      return \"%.\\\\tvote.ballot.b32\\\\t%0, %1;\";\n+  })\n \n ;; Patterns for OpenMP SIMD-via-SIMT lowering\n "}, {"sha": "468c6cafd571238d5a07632ce842f0df0cbebc80", "filename": "gcc/config/nvptx/nvptx.opt", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2a1586401a21dcd43e0f904bb6eec26c8b2f366b/gcc%2Fconfig%2Fnvptx%2Fnvptx.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2a1586401a21dcd43e0f904bb6eec26c8b2f366b/gcc%2Fconfig%2Fnvptx%2Fnvptx.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fnvptx%2Fnvptx.opt?ref=2a1586401a21dcd43e0f904bb6eec26c8b2f366b", "patch": "@@ -65,3 +65,17 @@ Enum(ptx_isa) String(sm_35) Value(PTX_ISA_SM35)\n misa=\n Target RejectNegative ToLower Joined Enum(ptx_isa) Var(ptx_isa_option) Init(PTX_ISA_SM35)\n Specify the version of the ptx ISA to use.\n+\n+Enum\n+Name(ptx_version) Type(int)\n+Known PTX versions (for use with the -mptx= option):\n+\n+EnumValue\n+Enum(ptx_version) String(3.1) Value(PTX_VERSION_3_1)\n+\n+EnumValue\n+Enum(ptx_version) String(6.3) Value(PTX_VERSION_6_3)\n+\n+mptx=\n+Target RejectNegative ToLower Joined Enum(ptx_version) Var(ptx_version_option) Init(PTX_VERSION_3_1)\n+Specify the version of the ptx version to use."}, {"sha": "519881509a64855d4068ae5f52ca1398aa993d99", "filename": "gcc/doc/invoke.texi", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2a1586401a21dcd43e0f904bb6eec26c8b2f366b/gcc%2Fdoc%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2a1586401a21dcd43e0f904bb6eec26c8b2f366b/gcc%2Fdoc%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finvoke.texi?ref=2a1586401a21dcd43e0f904bb6eec26c8b2f366b", "patch": "@@ -26284,6 +26284,12 @@ Generate code for given the specified PTX ISA (e.g.@: @samp{sm_35}).  ISA\n strings must be lower-case.  Valid ISA strings include @samp{sm_30} and\n @samp{sm_35}.  The default ISA is sm_35.\n \n+@item -mptx=@var{version-string}\n+@opindex mptx\n+Generate code for given the specified PTX version (e.g.@: @samp{6.3}).\n+Valid version strings include @samp{3.1} and @samp{6.3}.  The default PTX\n+version is 3.1.\n+\n @item -mmainkernel\n @opindex mmainkernel\n Link in code for a __main kernel.  This is for stand-alone instead of"}]}