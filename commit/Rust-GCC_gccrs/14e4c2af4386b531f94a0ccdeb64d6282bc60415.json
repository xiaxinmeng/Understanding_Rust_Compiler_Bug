{"sha": "14e4c2af4386b531f94a0ccdeb64d6282bc60415", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTRlNGMyYWY0Mzg2YjUzMWY5NGEwY2NkZWI2NGQ2MjgyYmM2MDQxNQ==", "commit": {"author": {"name": "Easwaran Raman", "email": "eraman@google.com", "date": "2014-09-05T22:23:26Z"}, "committer": {"name": "Easwaran Raman", "email": "eraman@gcc.gnu.org", "date": "2014-09-05T22:23:26Z"}, "message": "re PR rtl-optimization/62146 (CSE replaces constant with an expression incorrectly)\n\n2014-09-05  Easwaran Raman  <eraman@google.com>\n\n        PR rtl-optimization/62146\n        * ifcvt.c (dead_or_predicable): Make removal of REG_EQUAL note of\n          hoisted instruction unconditional.\n\n        testsuite:\n        * testsuite/g++.dg/opt/pr62146.C: New.\n\nFrom-SVN: r214977", "tree": {"sha": "402ca864e3336212cecef4013cf31f42d3c49309", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/402ca864e3336212cecef4013cf31f42d3c49309"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/14e4c2af4386b531f94a0ccdeb64d6282bc60415", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/14e4c2af4386b531f94a0ccdeb64d6282bc60415", "html_url": "https://github.com/Rust-GCC/gccrs/commit/14e4c2af4386b531f94a0ccdeb64d6282bc60415", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/14e4c2af4386b531f94a0ccdeb64d6282bc60415/comments", "author": null, "committer": null, "parents": [{"sha": "8a03df77b1b29bc1a1609a68d694890a28e089a4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8a03df77b1b29bc1a1609a68d694890a28e089a4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8a03df77b1b29bc1a1609a68d694890a28e089a4"}], "stats": {"total": 69, "additions": 64, "deletions": 5}, "files": [{"sha": "07988cdc42c212ca6fda16cc2f07d98c81713e0b", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/14e4c2af4386b531f94a0ccdeb64d6282bc60415/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/14e4c2af4386b531f94a0ccdeb64d6282bc60415/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=14e4c2af4386b531f94a0ccdeb64d6282bc60415", "patch": "@@ -1,3 +1,9 @@\n+2014-09-05  Easwaran Raman  <eraman@google.com>\n+\n+\tPR rtl-optimization/62146\n+\t* ifcvt.c (dead_or_predicable): Make removal of REG_EQUAL note of\n+\thoisted instruction unconditional.\n+\n 2014-09-05  Segher Boessenkool  <segher@kernel.crashing.org>\n \n \tPR target/63187"}, {"sha": "bce9fb3f0fedb604312cb6c438e495bc62a9f1bf", "filename": "gcc/ifcvt.c", "status": "modified", "additions": 2, "deletions": 5, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/14e4c2af4386b531f94a0ccdeb64d6282bc60415/gcc%2Fifcvt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/14e4c2af4386b531f94a0ccdeb64d6282bc60415/gcc%2Fifcvt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fifcvt.c?ref=14e4c2af4386b531f94a0ccdeb64d6282bc60415", "patch": "@@ -4403,17 +4403,14 @@ dead_or_predicable (basic_block test_bb, basic_block merge_bb,\n       insn = head;\n       do\n \t{\n-\t  rtx note, set;\n+\t  rtx note;\n \n \t  if (! INSN_P (insn))\n \t    continue;\n \t  note = find_reg_note (insn, REG_EQUAL, NULL_RTX);\n \t  if (! note)\n \t    continue;\n-\t  set = single_set (insn);\n-\t  if (!set || !function_invariant_p (SET_SRC (set))\n-\t      || !function_invariant_p (XEXP (note, 0)))\n-\t    remove_note (insn, note);\n+\t  remove_note (insn, note);\n \t} while (insn != end && (insn = NEXT_INSN (insn)));\n \n       /* PR46315: when moving insns above a conditional branch, the REG_EQUAL"}, {"sha": "582f538857c4b200a2b583b3267b3b35af075942", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/14e4c2af4386b531f94a0ccdeb64d6282bc60415/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/14e4c2af4386b531f94a0ccdeb64d6282bc60415/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=14e4c2af4386b531f94a0ccdeb64d6282bc60415", "patch": "@@ -1,3 +1,8 @@\n+2014-09-05  Easwaran Raman  <eraman@google.com>\n+\n+\tPR rtl-optimization/62146\n+\t* testsuite/g++.dg/opt/pr62146.C: New.\n+\n 2014-09-05  Marat Zakirov  <m.zakirov@samsung.com>\n \n \t* gcc.dg/vect/vect-109.c: Skip predicate added."}, {"sha": "dbe41743424b554911b594b1dac51f1dca9da22f", "filename": "gcc/testsuite/g++.dg/opt/pr62146.C", "status": "added", "additions": 51, "deletions": 0, "changes": 51, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/14e4c2af4386b531f94a0ccdeb64d6282bc60415/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fopt%2Fpr62146.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/14e4c2af4386b531f94a0ccdeb64d6282bc60415/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fopt%2Fpr62146.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fopt%2Fpr62146.C?ref=14e4c2af4386b531f94a0ccdeb64d6282bc60415", "patch": "@@ -0,0 +1,51 @@\n+/* PR rtl-optimization/62146 */\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 \" } */\n+class F\n+{\n+public:\n+    virtual ~ F ();\n+};\n+template < class CL > class G:public F\n+{\n+    int *member_;\n+public:\n+    G ( int *b): member_ (0)\n+    {\n+    }\n+};\n+\n+class D\n+{\n+public:\n+    template < class CL > void RegisterNonTagCallback (int,\n+            void (CL::\n+                  *p3) ())\n+    {\n+        InternalRegisterNonTag (p3 ? new G < CL > ( 0) : 0);\n+    } void InternalRegisterNonTag (F *);\n+};\n+\n+void fn1 ();\n+class C1\n+{\n+    void  foo();\n+    class TokenType\n+    {\n+    public:\n+        void AddToken ()\n+        {\n+        }\n+    };\n+    C1::TokenType bar_t;\n+};\n+D a;\n+void C1::foo()\n+{\n+    if (&bar_t)\n+        fn1 ();\n+    for (int i = 0; i < sizeof 0; ++i)\n+        a.RegisterNonTagCallback (0, &TokenType::AddToken);\n+}\n+\n+/* { dg-final { scan-assembler-not \"mov.*_ZN2C19TokenType8AddTokenEv, .\\\\\\(\" } } */"}]}