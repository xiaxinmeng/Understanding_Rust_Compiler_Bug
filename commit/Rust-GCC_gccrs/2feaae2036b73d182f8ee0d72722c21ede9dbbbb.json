{"sha": "2feaae2036b73d182f8ee0d72722c21ede9dbbbb", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmZlYWFlMjAzNmI3M2QxODJmOGVlMGQ3MjcyMmMyMWVkZTlkYmJiYg==", "commit": {"author": {"name": "Richard Sandiford", "email": "rdsandiford@googlemail.com", "date": "2008-07-12T07:57:42Z"}, "committer": {"name": "Richard Sandiford", "email": "rsandifo@gcc.gnu.org", "date": "2008-07-12T07:57:42Z"}, "message": "md.texi: Document the MIPS \"v\" constraint.\n\ngcc/\n\t* doc/md.texi: Document the MIPS \"v\" constraint.\n\t* config/mips/mips.h (reg_class): Revert last change.\n\t(REG_CLASS_NAMES): Likewise.\n\t(REG_CLASS_CONTENTS): Likewise.\n\t* config/mips/mips.c (mips_regno_to_class): Likewise.\n\t* config/mips/constraints.md (v): Likewise, but add documentation.\n\tAdd a comment to say that this constraint should not be used in\n\tgcc code.\n\nFrom-SVN: r137734", "tree": {"sha": "851961de1f0ab81190bec7912d2e8cc79662b6e2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/851961de1f0ab81190bec7912d2e8cc79662b6e2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2feaae2036b73d182f8ee0d72722c21ede9dbbbb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2feaae2036b73d182f8ee0d72722c21ede9dbbbb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2feaae2036b73d182f8ee0d72722c21ede9dbbbb", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2feaae2036b73d182f8ee0d72722c21ede9dbbbb/comments", "author": {"login": "rsandifo", "id": 4235983, "node_id": "MDQ6VXNlcjQyMzU5ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/4235983?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rsandifo", "html_url": "https://github.com/rsandifo", "followers_url": "https://api.github.com/users/rsandifo/followers", "following_url": "https://api.github.com/users/rsandifo/following{/other_user}", "gists_url": "https://api.github.com/users/rsandifo/gists{/gist_id}", "starred_url": "https://api.github.com/users/rsandifo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rsandifo/subscriptions", "organizations_url": "https://api.github.com/users/rsandifo/orgs", "repos_url": "https://api.github.com/users/rsandifo/repos", "events_url": "https://api.github.com/users/rsandifo/events{/privacy}", "received_events_url": "https://api.github.com/users/rsandifo/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "4f72fd0bcf71d540cbb8637bdc4079a8b25bb9a3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4f72fd0bcf71d540cbb8637bdc4079a8b25bb9a3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4f72fd0bcf71d540cbb8637bdc4079a8b25bb9a3"}], "stats": {"total": 26, "additions": 25, "deletions": 1}, "files": [{"sha": "895d6834cd1eabe5c5a1bd425f6c4d7aa0665dff", "filename": "gcc/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2feaae2036b73d182f8ee0d72722c21ede9dbbbb/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2feaae2036b73d182f8ee0d72722c21ede9dbbbb/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=2feaae2036b73d182f8ee0d72722c21ede9dbbbb", "patch": "@@ -1,3 +1,14 @@\n+2008-07-12  Richard Sandiford  <rdsandiford@googlemail.com>\n+\n+\t* doc/md.texi: Document the MIPS \"v\" constraint.\n+\t* config/mips/mips.h (reg_class): Revert last change.\n+\t(REG_CLASS_NAMES): Likewise.\n+\t(REG_CLASS_CONTENTS): Likewise.\n+\t* config/mips/mips.c (mips_regno_to_class): Likewise.\n+\t* config/mips/constraints.md (v): Likewise, but add documentation.\n+\tAdd a comment to say that this constraint should not be used in\n+\tgcc code.\n+\n 2008-07-11  DJ Delorie  <dj@redhat.com>\n \n \t* config/h8300/h8300.md (length): Fix branch offset limit."}, {"sha": "88fcbf65ef6a90b8b2f91fcdda2742ba069f5051", "filename": "gcc/config/mips/constraints.md", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2feaae2036b73d182f8ee0d72722c21ede9dbbbb/gcc%2Fconfig%2Fmips%2Fconstraints.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2feaae2036b73d182f8ee0d72722c21ede9dbbbb/gcc%2Fconfig%2Fmips%2Fconstraints.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fconstraints.md?ref=2feaae2036b73d182f8ee0d72722c21ede9dbbbb", "patch": "@@ -55,6 +55,12 @@\n (define_register_constraint \"j\" \"PIC_FN_ADDR_REG\"\n   \"@internal\")\n \n+;; Don't use this constraint in gcc code!  It runs the risk of\n+;; introducing a spill failure; see tls_get_tp_<mode>.\n+(define_register_constraint \"v\" \"V1_REG\"\n+  \"Register @code{$3}.  Do not use this constraint in new code;\n+   it is retained only for compatibility with glibc.\")\n+\n (define_register_constraint \"y\" \"GR_REGS\"\n   \"Equivalent to @code{r}; retained for backwards compatibility.\")\n "}, {"sha": "d1def42557619a6856dd6dc006a1679a29b70c8b", "filename": "gcc/config/mips/mips.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2feaae2036b73d182f8ee0d72722c21ede9dbbbb/gcc%2Fconfig%2Fmips%2Fmips.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2feaae2036b73d182f8ee0d72722c21ede9dbbbb/gcc%2Fconfig%2Fmips%2Fmips.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fmips.c?ref=2feaae2036b73d182f8ee0d72722c21ede9dbbbb", "patch": "@@ -479,7 +479,7 @@ static const char *mips_hi_relocs[NUM_SYMBOL_TYPES];\n \n /* Index R is the smallest register class that contains register R.  */\n const enum reg_class mips_regno_to_class[FIRST_PSEUDO_REGISTER] = {\n-  LEA_REGS,\tLEA_REGS,\tM16_NA_REGS,\tM16_NA_REGS,\n+  LEA_REGS,\tLEA_REGS,\tM16_NA_REGS,\tV1_REG,\n   M16_REGS,\tM16_REGS,\tM16_REGS,\tM16_REGS,\n   LEA_REGS,\tLEA_REGS,\tLEA_REGS,\tLEA_REGS,\n   LEA_REGS,\tLEA_REGS,\tLEA_REGS,\tLEA_REGS,"}, {"sha": "8518a86233bac2805fd3b4ef7a1df1ba637a6883", "filename": "gcc/config/mips/mips.h", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2feaae2036b73d182f8ee0d72722c21ede9dbbbb/gcc%2Fconfig%2Fmips%2Fmips.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2feaae2036b73d182f8ee0d72722c21ede9dbbbb/gcc%2Fconfig%2Fmips%2Fmips.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fmips.h?ref=2feaae2036b73d182f8ee0d72722c21ede9dbbbb", "patch": "@@ -1690,6 +1690,7 @@ enum reg_class\n   T_REG,\t\t\t/* mips16 T register ($24) */\n   M16_T_REGS,\t\t\t/* mips16 registers plus T register */\n   PIC_FN_ADDR_REG,\t\t/* SVR4 PIC function address register */\n+  V1_REG,\t\t\t/* Register $v1 ($3) used for TLS access.  */\n   LEA_REGS,\t\t\t/* Every GPR except $25 */\n   GR_REGS,\t\t\t/* integer registers */\n   FP_REGS,\t\t\t/* floating point registers */\n@@ -1730,6 +1731,7 @@ enum reg_class\n   \"T_REG\",\t\t\t\t\t\t\t\t\\\n   \"M16_T_REGS\",\t\t\t\t\t\t\t\t\\\n   \"PIC_FN_ADDR_REG\",\t\t\t\t\t\t\t\\\n+  \"V1_REG\",\t\t\t\t\t\t\t\t\\\n   \"LEA_REGS\",\t\t\t\t\t\t\t\t\\\n   \"GR_REGS\",\t\t\t\t\t\t\t\t\\\n   \"FP_REGS\",\t\t\t\t\t\t\t\t\\\n@@ -1773,6 +1775,7 @@ enum reg_class\n   { 0x01000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000 },\t/* mips16 T register */\t\\\n   { 0x010300fc, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000 },\t/* mips16 and T regs */ \\\n   { 0x02000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000 },\t/* SVR4 PIC function address register */ \\\n+  { 0x00000008, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000 },\t/* only $v1 */ \\\n   { 0xfdffffff, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000 },\t/* Every other GPR except $25 */   \\\n   { 0xffffffff, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000 },\t/* integer registers */\t\\\n   { 0x00000000, 0xffffffff, 0x00000000, 0x00000000, 0x00000000, 0x00000000 },\t/* floating registers*/\t\\"}, {"sha": "66ca3e98fd0f8010a6f4266800421ab402af814a", "filename": "gcc/doc/md.texi", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2feaae2036b73d182f8ee0d72722c21ede9dbbbb/gcc%2Fdoc%2Fmd.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2feaae2036b73d182f8ee0d72722c21ede9dbbbb/gcc%2Fdoc%2Fmd.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Fmd.texi?ref=2feaae2036b73d182f8ee0d72722c21ede9dbbbb", "patch": "@@ -2483,6 +2483,10 @@ to store doubleword values.\n A register suitable for use in an indirect jump.  This will always be\n @code{$25} for @option{-mabicalls}.\n \n+@item v\n+Register @code{$3}.  Do not use this constraint in new code;\n+it is retained only for compatibility with glibc.\n+\n @item y\n Equivalent to @code{r}; retained for backwards compatibility.\n "}]}