{"sha": "442b5a661e312b27fc87f769834a2b58412a847a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDQyYjVhNjYxZTMxMmIyN2ZjODdmNzY5ODM0YTJiNTg0MTJhODQ3YQ==", "commit": {"author": {"name": "Iain Buclaw", "email": "ibuclaw@gdcproject.org", "date": "2020-07-21T17:32:54Z"}, "committer": {"name": "Iain Buclaw", "email": "ibuclaw@gdcproject.org", "date": "2020-08-03T02:40:18Z"}, "message": "d: Merge upstream dmd c2274e56a (PR96250).\n\n1. Fixes an ICE in the front-end if a struct symbol were to appear twice\nin the compilation unit.\n\n2. Fixes a rejects-valid bug in the front-end where `(symbol)' was being\nresolved as a `var' expression, instead of `this.var'.\n\nReviewed-on: https://github.com/dlang/dmd/pull/11436\n\t     https://github.com/dlang/dmd/pull/11439\n\ngcc/d/ChangeLog:\n\n\tPR d/96250\n\t* dmd/MERGE: Merge upstream dmd c2274e56a.", "tree": {"sha": "493216f398cb16044a59d39fdebb97a6d683baef", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/493216f398cb16044a59d39fdebb97a6d683baef"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/442b5a661e312b27fc87f769834a2b58412a847a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/442b5a661e312b27fc87f769834a2b58412a847a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/442b5a661e312b27fc87f769834a2b58412a847a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/442b5a661e312b27fc87f769834a2b58412a847a/comments", "author": {"login": "ibuclaw", "id": 397929, "node_id": "MDQ6VXNlcjM5NzkyOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/397929?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ibuclaw", "html_url": "https://github.com/ibuclaw", "followers_url": "https://api.github.com/users/ibuclaw/followers", "following_url": "https://api.github.com/users/ibuclaw/following{/other_user}", "gists_url": "https://api.github.com/users/ibuclaw/gists{/gist_id}", "starred_url": "https://api.github.com/users/ibuclaw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ibuclaw/subscriptions", "organizations_url": "https://api.github.com/users/ibuclaw/orgs", "repos_url": "https://api.github.com/users/ibuclaw/repos", "events_url": "https://api.github.com/users/ibuclaw/events{/privacy}", "received_events_url": "https://api.github.com/users/ibuclaw/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ibuclaw", "id": 397929, "node_id": "MDQ6VXNlcjM5NzkyOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/397929?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ibuclaw", "html_url": "https://github.com/ibuclaw", "followers_url": "https://api.github.com/users/ibuclaw/followers", "following_url": "https://api.github.com/users/ibuclaw/following{/other_user}", "gists_url": "https://api.github.com/users/ibuclaw/gists{/gist_id}", "starred_url": "https://api.github.com/users/ibuclaw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ibuclaw/subscriptions", "organizations_url": "https://api.github.com/users/ibuclaw/orgs", "repos_url": "https://api.github.com/users/ibuclaw/repos", "events_url": "https://api.github.com/users/ibuclaw/events{/privacy}", "received_events_url": "https://api.github.com/users/ibuclaw/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7031087cd7d6cd07d18797b0cac90dc048103ed1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7031087cd7d6cd07d18797b0cac90dc048103ed1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7031087cd7d6cd07d18797b0cac90dc048103ed1"}], "stats": {"total": 133, "additions": 129, "deletions": 4}, "files": [{"sha": "daa3e565ff7540272bce9c21e1201859ddabc2f0", "filename": "gcc/d/dmd/MERGE", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/442b5a661e312b27fc87f769834a2b58412a847a/gcc%2Fd%2Fdmd%2FMERGE", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/442b5a661e312b27fc87f769834a2b58412a847a/gcc%2Fd%2Fdmd%2FMERGE", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fdmd%2FMERGE?ref=442b5a661e312b27fc87f769834a2b58412a847a", "patch": "@@ -1,4 +1,4 @@\n-8508c4e683f065eb3deab76b610f7fecb3258a8e\n+c2274e56a3220ea636c6199fd06cd54fcdf6bad9\n \n The first line of this file holds the git revision number of the last\n merge done from the dlang/dmd repository."}, {"sha": "2b87154142c1d311bdbd339a8a37d7b9ea3cd073", "filename": "gcc/d/dmd/dstruct.c", "status": "modified", "additions": 7, "deletions": 2, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/442b5a661e312b27fc87f769834a2b58412a847a/gcc%2Fd%2Fdmd%2Fdstruct.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/442b5a661e312b27fc87f769834a2b58412a847a/gcc%2Fd%2Fdmd%2Fdstruct.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fdmd%2Fdstruct.c?ref=442b5a661e312b27fc87f769834a2b58412a847a", "patch": "@@ -1206,6 +1206,13 @@ void StructDeclaration::semantic(Scope *sc)\n         }\n     }\n \n+    if (type->ty == Tstruct && ((TypeStruct *)type)->sym != this)\n+    {\n+        // https://issues.dlang.org/show_bug.cgi?id=19024\n+        StructDeclaration *sd = ((TypeStruct *)type)->sym;\n+        error(\"already exists at %s. Perhaps in another function with the same name?\", sd->loc.toChars());\n+    }\n+\n     if (global.errors != errors)\n     {\n         // The type is no good.\n@@ -1220,8 +1227,6 @@ void StructDeclaration::semantic(Scope *sc)\n         deferred->semantic2(sc);\n         deferred->semantic3(sc);\n     }\n-\n-    assert(type->ty != Tstruct || ((TypeStruct *)type)->sym == this);\n }\n \n Dsymbol *StructDeclaration::search(const Loc &loc, Identifier *ident, int flags)"}, {"sha": "9f21dabb7e4db4c6fca2e0709a6be0ee6b9379ad", "filename": "gcc/d/dmd/expressionsem.c", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/442b5a661e312b27fc87f769834a2b58412a847a/gcc%2Fd%2Fdmd%2Fexpressionsem.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/442b5a661e312b27fc87f769834a2b58412a847a/gcc%2Fd%2Fdmd%2Fexpressionsem.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fdmd%2Fexpressionsem.c?ref=442b5a661e312b27fc87f769834a2b58412a847a", "patch": "@@ -812,6 +812,16 @@ class ExpressionSemanticVisitor : public Visitor\n         exp->type->resolve(exp->loc, sc, &e, &t, &s, true);\n         if (e)\n         {\n+            // `(Type)` is actually `(var)` so if `(var)` is a member requiring `this`\n+            // then rewrite as `(this.var)` in case it would be followed by a DotVar\n+            // to fix https://issues.dlang.org/show_bug.cgi?id=9490\n+            VarExp *ve = e->isVarExp();\n+            if (ve && ve->var && exp->parens && !ve->var->isStatic() && !(sc->stc & STCstatic) &&\n+                sc->func && sc->func->needThis() && ve->var->toParent2()->isAggregateDeclaration())\n+            {\n+                // printf(\"apply fix for issue 9490: add `this.` to `%s`...\\n\", e->toChars());\n+                e = new DotVarExp(exp->loc, new ThisExp(exp->loc), ve->var, false);\n+            }\n             //printf(\"e = %s %s\\n\", Token::toChars(e->op), e->toChars());\n             e = semantic(e, sc);\n         }"}, {"sha": "d1017ac462c6bc892f489e54e9cc30b715cde9bc", "filename": "gcc/d/dmd/parse.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/442b5a661e312b27fc87f769834a2b58412a847a/gcc%2Fd%2Fdmd%2Fparse.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/442b5a661e312b27fc87f769834a2b58412a847a/gcc%2Fd%2Fdmd%2Fparse.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fdmd%2Fparse.c?ref=442b5a661e312b27fc87f769834a2b58412a847a", "patch": "@@ -7531,6 +7531,7 @@ Expression *Parser::parseUnaryExp()\n                                 return NULL;\n                             }\n                             e = new TypeExp(loc, t);\n+                            e->parens = 1;\n                             e = parsePostExp(e);\n                         }\n                         else"}, {"sha": "d0148b1a73885e5684de19333aab3a170cae6a5f", "filename": "gcc/testsuite/gdc.test/compilable/b9490.d", "status": "added", "additions": 39, "deletions": 0, "changes": 39, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/442b5a661e312b27fc87f769834a2b58412a847a/gcc%2Ftestsuite%2Fgdc.test%2Fcompilable%2Fb9490.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/442b5a661e312b27fc87f769834a2b58412a847a/gcc%2Ftestsuite%2Fgdc.test%2Fcompilable%2Fb9490.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Fcompilable%2Fb9490.d?ref=442b5a661e312b27fc87f769834a2b58412a847a", "patch": "@@ -0,0 +1,39 @@\n+// https://issues.dlang.org/show_bug.cgi?id=9490\n+class A\n+{\n+    int[1] arr;\n+\n+    this()\n+    {\n+        assert(arr.length);\n+        assert((arr).length);\n+    }\n+}\n+\n+class C\n+{\n+    struct Foo { int a; void funcToo(){} }\n+    Foo foo;\n+\n+    auto get(){return foo;}\n+\n+    void test()\n+    {\n+        // Error: need 'this' to access member a\n+        (foo).a = 1;\n+        (foo).funcToo();\n+        (get()).a = 2;\n+    }\n+}\n+\n+struct S { int i; }\n+struct S1 { S s; }\n+void f(int) { }\n+\n+void main()\n+{\n+    S1 s1;\n+    f(s1.s.tupleof); // OK\n+    f((s1.s).tupleof); // Error: need 'this' to access member s\n+}\n+"}, {"sha": "cc90da6342e89cd52b82991690ee6e0fc1701c46", "filename": "gcc/testsuite/gdc.test/compilable/ice14739.d", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/442b5a661e312b27fc87f769834a2b58412a847a/gcc%2Ftestsuite%2Fgdc.test%2Fcompilable%2Fice14739.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/442b5a661e312b27fc87f769834a2b58412a847a/gcc%2Ftestsuite%2Fgdc.test%2Fcompilable%2Fice14739.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Fcompilable%2Fice14739.d?ref=442b5a661e312b27fc87f769834a2b58412a847a", "patch": "@@ -0,0 +1,19 @@\n+// REQUIRED_ARGS: -o-\n+\n+void main(string[] args)\n+{\n+    immutable int a;\n+    immutable int b;\n+    S!a sa;\n+    S!b sb;\n+    C!a ca;\n+    C!b cb;\n+}\n+\n+struct S(alias a)\n+{\n+}\n+\n+class C(alias a)\n+{\n+}"}, {"sha": "80e9e2a2c4aafc8e68315c2b974c2f9dd55b15cb", "filename": "gcc/testsuite/gdc.test/fail_compilation/fail17492.d", "status": "modified", "additions": 19, "deletions": 1, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/442b5a661e312b27fc87f769834a2b58412a847a/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail17492.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/442b5a661e312b27fc87f769834a2b58412a847a/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail17492.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail17492.d?ref=442b5a661e312b27fc87f769834a2b58412a847a", "patch": "@@ -1,6 +1,7 @@\n /* TEST_OUTPUT:\n ---\n-fail_compilation/fail17492.d(19): Error: class fail17492.C.testE.I already exists at fail_compilation/fail17492.d(12). Perhaps in another function with the same name?\n+fail_compilation/fail17492.d(20): Error: class `fail17492.C.testE.I` already exists at fail17492.d(13). Perhaps in another function with the same name?\n+fail_compilation/fail17492.d(37): Error: struct `fail17492.S.testE.I` already exists at fail17492.d(30). Perhaps in another function with the same name?\n ---\n https://issues.dlang.org/show_bug.cgi?id=17492\n */\n@@ -21,3 +22,20 @@ class C\n         }\n     }\n }\n+\n+class S\n+{\n+    void testE()\n+    {\n+        struct I\n+        {\n+        }\n+    }\n+\n+    void testE()\n+    {\n+        struct I\n+        {\n+        }\n+    }\n+}"}, {"sha": "d33889cee3d7e92ed00f1190524a8dd46b323e7a", "filename": "gcc/testsuite/gdc.test/fail_compilation/ice21060.d", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/442b5a661e312b27fc87f769834a2b58412a847a/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Fice21060.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/442b5a661e312b27fc87f769834a2b58412a847a/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Fice21060.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Fice21060.d?ref=442b5a661e312b27fc87f769834a2b58412a847a", "patch": "@@ -0,0 +1,15 @@\n+/*\n+EXTRA_FILES: imports/ice21060a/package.d imports/ice21060b/package.d imports/ice21060c/package.d imports/ice21060d/package.d\n+TEST_OUTPUT:\n+---\n+fail_compilation/imports/ice21060b/package.d(3): Error: struct `imports.ice21060d.P21060` already exists at fail_compilation/imports/ice21060d/package.d(3). Perhaps in another function with the same name?\n+---\n+*/\n+struct S21060\n+{\n+    void print()\n+    {\n+        import imports.ice21060a;\n+        import imports.ice21060b;\n+    }\n+}"}, {"sha": "b046aebe1d8261e126f3452b5ceabd658dfb50d6", "filename": "gcc/testsuite/gdc.test/fail_compilation/imports/ice21060a/package.d", "status": "added", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/442b5a661e312b27fc87f769834a2b58412a847a/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Fimports%2Fice21060a%2Fpackage.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/442b5a661e312b27fc87f769834a2b58412a847a/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Fimports%2Fice21060a%2Fpackage.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Fimports%2Fice21060a%2Fpackage.d?ref=442b5a661e312b27fc87f769834a2b58412a847a", "patch": "@@ -0,0 +1 @@\n+import imports.ice21060c;"}, {"sha": "a806fd08a6a9e82c4e81ced3114258886abf74ba", "filename": "gcc/testsuite/gdc.test/fail_compilation/imports/ice21060b/package.d", "status": "added", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/442b5a661e312b27fc87f769834a2b58412a847a/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Fimports%2Fice21060b%2Fpackage.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/442b5a661e312b27fc87f769834a2b58412a847a/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Fimports%2Fice21060b%2Fpackage.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Fimports%2Fice21060b%2Fpackage.d?ref=442b5a661e312b27fc87f769834a2b58412a847a", "patch": "@@ -0,0 +1,5 @@\n+module imports.ice21060d;\n+\n+struct P21060\n+{\n+}"}, {"sha": "cc6f74ec6bbc235c05ed986293f68ed24d4dcbe2", "filename": "gcc/testsuite/gdc.test/fail_compilation/imports/ice21060c/package.d", "status": "added", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/442b5a661e312b27fc87f769834a2b58412a847a/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Fimports%2Fice21060c%2Fpackage.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/442b5a661e312b27fc87f769834a2b58412a847a/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Fimports%2Fice21060c%2Fpackage.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Fimports%2Fice21060c%2Fpackage.d?ref=442b5a661e312b27fc87f769834a2b58412a847a", "patch": "@@ -0,0 +1 @@\n+import imports.ice21060d;"}, {"sha": "a806fd08a6a9e82c4e81ced3114258886abf74ba", "filename": "gcc/testsuite/gdc.test/fail_compilation/imports/ice21060d/package.d", "status": "added", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/442b5a661e312b27fc87f769834a2b58412a847a/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Fimports%2Fice21060d%2Fpackage.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/442b5a661e312b27fc87f769834a2b58412a847a/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Fimports%2Fice21060d%2Fpackage.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Fimports%2Fice21060d%2Fpackage.d?ref=442b5a661e312b27fc87f769834a2b58412a847a", "patch": "@@ -0,0 +1,5 @@\n+module imports.ice21060d;\n+\n+struct P21060\n+{\n+}"}, {"sha": "a0a422daf6b61e83d25de8ebf499902b63b8caa0", "filename": "gcc/testsuite/gdc.test/runnable/b16278.d", "status": "added", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/442b5a661e312b27fc87f769834a2b58412a847a/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Fb16278.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/442b5a661e312b27fc87f769834a2b58412a847a/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Fb16278.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Fb16278.d?ref=442b5a661e312b27fc87f769834a2b58412a847a", "patch": "@@ -0,0 +1,6 @@\n+// REQUIRED_ARGS: -main\n+class A()\n+{\n+    static struct S { A a; }\n+}\n+enum e = is(A!());"}]}