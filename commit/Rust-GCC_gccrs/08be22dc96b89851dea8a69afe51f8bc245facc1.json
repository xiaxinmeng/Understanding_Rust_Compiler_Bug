{"sha": "08be22dc96b89851dea8a69afe51f8bc245facc1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDhiZTIyZGM5NmI4OTg1MWRlYThhNjlhZmU1MWY4YmMyNDVmYWNjMQ==", "commit": {"author": {"name": "Ian Lance Taylor", "email": "iant@google.com", "date": "2012-01-21T22:50:36Z"}, "committer": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2012-01-21T22:50:36Z"}, "message": "compiler: The type descriptor of an undefined forward type is an error.\n\n\t* go-gcc.cc (Gcc_backend::type_size): Check for error_mark_node.\n\t(Gcc_backend::type_alignment): Likewise.\n\t(Gcc_backend::type_field_alignment): Likewise.\n\t(Gcc_backend::type_field_offset): Likewise.\n\nFrom-SVN: r183381", "tree": {"sha": "ba911f21b3399364f691e4f99f6c86710225dae3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ba911f21b3399364f691e4f99f6c86710225dae3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/08be22dc96b89851dea8a69afe51f8bc245facc1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/08be22dc96b89851dea8a69afe51f8bc245facc1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/08be22dc96b89851dea8a69afe51f8bc245facc1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/08be22dc96b89851dea8a69afe51f8bc245facc1/comments", "author": null, "committer": null, "parents": [{"sha": "8f94383a99eddb3c7c6b94ffaa3528c0e22c68c2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8f94383a99eddb3c7c6b94ffaa3528c0e22c68c2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8f94383a99eddb3c7c6b94ffaa3528c0e22c68c2"}], "stats": {"total": 26, "additions": 22, "deletions": 4}, "files": [{"sha": "5be897536267777799b6ad95620d769a6da160bc", "filename": "gcc/go/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/08be22dc96b89851dea8a69afe51f8bc245facc1/gcc%2Fgo%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/08be22dc96b89851dea8a69afe51f8bc245facc1/gcc%2Fgo%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgo%2FChangeLog?ref=08be22dc96b89851dea8a69afe51f8bc245facc1", "patch": "@@ -1,3 +1,10 @@\n+2012-01-21  Ian Lance Taylor  <iant@google.com>\n+\n+\t* go-gcc.cc (Gcc_backend::type_size): Check for error_mark_node.\n+\t(Gcc_backend::type_alignment): Likewise.\n+\t(Gcc_backend::type_field_alignment): Likewise.\n+\t(Gcc_backend::type_field_offset): Likewise.\n+\n 2012-01-20  Ian Lance Taylor  <iant@google.com>\n \n \t* go-gcc.cc (Gcc_backend::placeholder_struct_type): Permit name to"}, {"sha": "e6967a830e1a43a577dbd9255f0dcd1e1308fccc", "filename": "gcc/go/go-gcc.cc", "status": "modified", "additions": 14, "deletions": 3, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/08be22dc96b89851dea8a69afe51f8bc245facc1/gcc%2Fgo%2Fgo-gcc.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/08be22dc96b89851dea8a69afe51f8bc245facc1/gcc%2Fgo%2Fgo-gcc.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgo%2Fgo-gcc.cc?ref=08be22dc96b89851dea8a69afe51f8bc245facc1", "patch": "@@ -778,7 +778,10 @@ Gcc_backend::is_circular_pointer_type(Btype* btype)\n size_t\n Gcc_backend::type_size(Btype* btype)\n {\n-  tree t = TYPE_SIZE_UNIT(btype->get_tree());\n+  tree t = btype->get_tree();\n+  if (t == error_mark_node)\n+    return 1;\n+  t = TYPE_SIZE_UNIT(t);\n   gcc_assert(TREE_CODE(t) == INTEGER_CST);\n   gcc_assert(TREE_INT_CST_HIGH(t) == 0);\n   unsigned HOST_WIDE_INT val_wide = TREE_INT_CST_LOW(t);\n@@ -792,15 +795,21 @@ Gcc_backend::type_size(Btype* btype)\n size_t\n Gcc_backend::type_alignment(Btype* btype)\n {\n-  return TYPE_ALIGN_UNIT(btype->get_tree());\n+  tree t = btype->get_tree();\n+  if (t == error_mark_node)\n+    return 1;\n+  return TYPE_ALIGN_UNIT(t);\n }\n \n // Return the alignment of a struct field of type BTYPE.\n \n size_t\n Gcc_backend::type_field_alignment(Btype* btype)\n {\n-  return go_field_alignment(btype->get_tree());\n+  tree t = btype->get_tree();\n+  if (t == error_mark_node)\n+    return 1;\n+  return go_field_alignment(t);\n }\n \n // Return the offset of a field in a struct.\n@@ -809,6 +818,8 @@ size_t\n Gcc_backend::type_field_offset(Btype* btype, size_t index)\n {\n   tree struct_tree = btype->get_tree();\n+  if (struct_tree == error_mark_node)\n+    return 0;\n   gcc_assert(TREE_CODE(struct_tree) == RECORD_TYPE);\n   tree field = TYPE_FIELDS(struct_tree);\n   for (; index > 0; --index)"}, {"sha": "525d33ad8e5faf9447e006a1343d27ce4744d3de", "filename": "gcc/go/gofrontend/types.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/08be22dc96b89851dea8a69afe51f8bc245facc1/gcc%2Fgo%2Fgofrontend%2Ftypes.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/08be22dc96b89851dea8a69afe51f8bc245facc1/gcc%2Fgo%2Fgofrontend%2Ftypes.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgo%2Fgofrontend%2Ftypes.cc?ref=08be22dc96b89851dea8a69afe51f8bc245facc1", "patch": "@@ -9163,7 +9163,7 @@ Forward_declaration_type::do_type_descriptor(Gogo* gogo, Named_type* name)\n {\n   Location ploc = Linemap::predeclared_location();\n   if (!this->is_defined())\n-    return Expression::make_nil(ploc);\n+    return Expression::make_error(ploc);\n   else\n     {\n       Type* t = this->real_type();"}]}