{"sha": "d635c70797688ead5f670ad5b176b12c0129b74f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDYzNWM3MDc5NzY4OGVhZDVmNjcwYWQ1YjE3NmIxMmMwMTI5Yjc0Zg==", "commit": {"author": {"name": "Adam Nemet", "email": "anemet@lnxw.com", "date": "2004-09-10T13:56:50Z"}, "committer": {"name": "Adam Nemet", "email": "nemet@gcc.gnu.org", "date": "2004-09-10T13:56:50Z"}, "message": "inclhack.def (lynx_void_int): Remove.\n\n\t* inclhack.def (lynx_void_int): Remove.\n\t(lynxos_fcntl_proto): Remove.\n\t(lynxos_no_warning_in_sys_time_h): New fix.\n\t(lynxos_missing_putenv): New fix.\n\t* fixincl.x: Regenerate.\n\t* tests/base/fcntl.h: Remove.\n\t* tests/base/sys/time.h: Update from test area.\n\t* tests/base/curses.h: Likewise.\n\t* tests/base/stdlib.h: Likewise.\n\nFrom-SVN: r87298", "tree": {"sha": "a8e8932efa0ab6fe75534e82ba535ebe41512099", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a8e8932efa0ab6fe75534e82ba535ebe41512099"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d635c70797688ead5f670ad5b176b12c0129b74f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d635c70797688ead5f670ad5b176b12c0129b74f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d635c70797688ead5f670ad5b176b12c0129b74f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d635c70797688ead5f670ad5b176b12c0129b74f/comments", "author": null, "committer": null, "parents": [{"sha": "85d625202998b5153d40cf1fbc36a400e8e013dd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/85d625202998b5153d40cf1fbc36a400e8e013dd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/85d625202998b5153d40cf1fbc36a400e8e013dd"}], "stats": {"total": 168, "additions": 93, "deletions": 75}, "files": [{"sha": "0119a597beca80fd7d3f5b80b38f2b14d3f3bee4", "filename": "fixincludes/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d635c70797688ead5f670ad5b176b12c0129b74f/fixincludes%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d635c70797688ead5f670ad5b176b12c0129b74f/fixincludes%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/fixincludes%2FChangeLog?ref=d635c70797688ead5f670ad5b176b12c0129b74f", "patch": "@@ -1,3 +1,15 @@\n+2004-09-10  Adam Nemet  <anemet@lnxw.com>\n+\n+\t* inclhack.def (lynx_void_int): Remove.\n+\t(lynxos_fcntl_proto): Remove.\n+\t(lynxos_no_warning_in_sys_time_h): New fix.\n+\t(lynxos_missing_putenv): New fix.\n+\t* fixincl.x: Regenerate.\n+\t* tests/base/fcntl.h: Remove.\n+\t* tests/base/sys/time.h: Update from test area.\n+\t* tests/base/curses.h: Likewise.\n+\t* tests/base/stdlib.h: Likewise.\n+\n 2004-09-03  Jan Beulich  <jbeulich@novell.com>\n \n \t* inclhack.def: Suppress exception_structure and math_exception"}, {"sha": "2089ac3682461e12fb9ced268fb056ff6d6a5a60", "filename": "fixincludes/fixincl.x", "status": "modified", "additions": 51, "deletions": 41, "changes": 92, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d635c70797688ead5f670ad5b176b12c0129b74f/fixincludes%2Ffixincl.x", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d635c70797688ead5f670ad5b176b12c0129b74f/fixincludes%2Ffixincl.x", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/fixincludes%2Ffixincl.x?ref=d635c70797688ead5f670ad5b176b12c0129b74f", "patch": "@@ -2,11 +2,11 @@\n  * \n  * DO NOT EDIT THIS FILE   (fixincl.x)\n  * \n- * It has been AutoGen-ed  Saturday August 14, 2004 at 05:48:43 PM EDT\n+ * It has been AutoGen-ed  Thursday September  9, 2004 at 08:07:32 PM PDT\n  * From the definitions    inclhack.def\n  * and the template file   fixincl\n  */\n-/* DO NOT CVS-MERGE THIS FILE, EITHER Sat Aug 14 17:48:43 EDT 2004\n+/* DO NOT CVS-MERGE THIS FILE, EITHER Thu Sep  9 20:07:32 PDT 2004\n  *\n  * You must regenerate it.  Use the ./genfixes script.\n  *\n@@ -3333,73 +3333,83 @@ static const char* apzLimits_IfndefsPatch[] = {\n \n /* * * * * * * * * * * * * * * * * * * * * * * * * *\n  *\n- *  Description of Lynx_Void_Int fix\n+ *  Description of Lynxos_No_Warning_In_Sys_Time_H fix\n  */\n-tSCC zLynx_Void_IntName[] =\n-     \"lynx_void_int\";\n+tSCC zLynxos_No_Warning_In_Sys_Time_HName[] =\n+     \"lynxos_no_warning_in_sys_time_h\";\n \n /*\n  *  File name selection pattern\n  */\n-tSCC zLynx_Void_IntList[] =\n-  \"|curses.h|\";\n+tSCC zLynxos_No_Warning_In_Sys_Time_HList[] =\n+  \"|sys/time.h|\";\n /*\n  *  Machine/OS name selection pattern\n  */\n-#define apzLynx_Void_IntMachs (const char**)NULL\n+#define apzLynxos_No_Warning_In_Sys_Time_HMachs (const char**)NULL\n \n /*\n  *  content selection pattern - do fix if pattern found\n  */\n-tSCC zLynx_Void_IntSelect0[] =\n-       \"#[ \\t]*define[ \\t]+void[ \\t]+int[ \\t]*\";\n+tSCC zLynxos_No_Warning_In_Sys_Time_HSelect0[] =\n+       \"#warning[ \\t]+Using <time.h> instead of <sys/time.h>\";\n \n-#define    LYNX_VOID_INT_TEST_CT  1\n-static tTestDesc aLynx_Void_IntTests[] = {\n-  { TT_EGREP,    zLynx_Void_IntSelect0, (regex_t*)NULL }, };\n+#define    LYNXOS_NO_WARNING_IN_SYS_TIME_H_TEST_CT  1\n+static tTestDesc aLynxos_No_Warning_In_Sys_Time_HTests[] = {\n+  { TT_EGREP,    zLynxos_No_Warning_In_Sys_Time_HSelect0, (regex_t*)NULL }, };\n \n /*\n- *  Fix Command Arguments for Lynx_Void_Int\n+ *  Fix Command Arguments for Lynxos_No_Warning_In_Sys_Time_H\n  */\n-static const char* apzLynx_Void_IntPatch[] = {\n+static const char* apzLynxos_No_Warning_In_Sys_Time_HPatch[] = {\n     \"format\",\n     \"\",\n     (char*)NULL };\n \n /* * * * * * * * * * * * * * * * * * * * * * * * * *\n  *\n- *  Description of Lynxos_Fcntl_Proto fix\n+ *  Description of Lynxos_Missing_Putenv fix\n  */\n-tSCC zLynxos_Fcntl_ProtoName[] =\n-     \"lynxos_fcntl_proto\";\n+tSCC zLynxos_Missing_PutenvName[] =\n+     \"lynxos_missing_putenv\";\n \n /*\n  *  File name selection pattern\n  */\n-tSCC zLynxos_Fcntl_ProtoList[] =\n-  \"|fcntl.h|\";\n+tSCC zLynxos_Missing_PutenvList[] =\n+  \"|stdlib.h|\";\n /*\n  *  Machine/OS name selection pattern\n  */\n-#define apzLynxos_Fcntl_ProtoMachs (const char**)NULL\n+tSCC* apzLynxos_Missing_PutenvMachs[] = {\n+        \"*-*-lynxos*\",\n+        (const char*)NULL };\n \n /*\n  *  content selection pattern - do fix if pattern found\n  */\n-tSCC zLynxos_Fcntl_ProtoSelect0[] =\n-       \"fcntl[ \\t]*\\\\(int, int, int\\\\)\";\n+tSCC zLynxos_Missing_PutenvSelect0[] =\n+       \"extern char \\\\*getenv[ \\t]*_AP\\\\(\\\\(const char \\\\*\\\\)\\\\);\";\n \n-#define    LYNXOS_FCNTL_PROTO_TEST_CT  1\n-static tTestDesc aLynxos_Fcntl_ProtoTests[] = {\n-  { TT_EGREP,    zLynxos_Fcntl_ProtoSelect0, (regex_t*)NULL }, };\n+/*\n+ *  content bypass pattern - skip fix if pattern found\n+ */\n+tSCC zLynxos_Missing_PutenvBypass0[] =\n+       \"putenv[ \\\\t]*\\\\(\";\n+\n+#define    LYNXOS_MISSING_PUTENV_TEST_CT  2\n+static tTestDesc aLynxos_Missing_PutenvTests[] = {\n+  { TT_NEGREP,   zLynxos_Missing_PutenvBypass0, (regex_t*)NULL },\n+  { TT_EGREP,    zLynxos_Missing_PutenvSelect0, (regex_t*)NULL }, };\n \n /*\n- *  Fix Command Arguments for Lynxos_Fcntl_Proto\n+ *  Fix Command Arguments for Lynxos_Missing_Putenv\n  */\n-static const char* apzLynxos_Fcntl_ProtoPatch[] = {\n+static const char* apzLynxos_Missing_PutenvPatch[] = {\n     \"format\",\n-    \"%1...)\",\n-    \"(fcntl[ \\t]*\\\\(int, int, )int\\\\)\",\n+    \"%0\\n\\\n+extern int putenv\\t\\t\\t\\t_AP((char *));\",\n+    \"extern char \\\\*getenv[ \\t]*_AP\\\\(\\\\(const char \\\\*\\\\)\\\\);\",\n     (char*)NULL };\n \n /* * * * * * * * * * * * * * * * * * * * * * * * * *\n@@ -7018,7 +7028,7 @@ static const char* apzX11_SprintfPatch[] = {\n  *\n  *  List of all fixes\n  */\n-#define REGEX_COUNT          199\n+#define REGEX_COUNT          200\n #define MACH_LIST_SIZE_LIMIT 261\n #define FIX_COUNT            177\n \n@@ -7107,8 +7117,8 @@ typedef enum {\n     LIBC1_G_VA_LIST_FIXIDX,\n     LIBC1_IFDEFD_MEMX_FIXIDX,\n     LIMITS_IFNDEFS_FIXIDX,\n-    LYNX_VOID_INT_FIXIDX,\n-    LYNXOS_FCNTL_PROTO_FIXIDX,\n+    LYNXOS_NO_WARNING_IN_SYS_TIME_H_FIXIDX,\n+    LYNXOS_MISSING_PUTENV_FIXIDX,\n     MACHINE_ANSI_H_VA_LIST_FIXIDX,\n     MACHINE_NAME_FIXIDX,\n     MATH_EXCEPTION_FIXIDX,\n@@ -7611,15 +7621,15 @@ tFixDesc fixDescList[ FIX_COUNT ] = {\n      LIMITS_IFNDEFS_TEST_CT, FD_MACH_ONLY | FD_SUBROUTINE,\n      aLimits_IfndefsTests,   apzLimits_IfndefsPatch, 0 },\n \n-  {  zLynx_Void_IntName,    zLynx_Void_IntList,\n-     apzLynx_Void_IntMachs,\n-     LYNX_VOID_INT_TEST_CT, FD_MACH_ONLY | FD_SUBROUTINE,\n-     aLynx_Void_IntTests,   apzLynx_Void_IntPatch, 0 },\n+  {  zLynxos_No_Warning_In_Sys_Time_HName,    zLynxos_No_Warning_In_Sys_Time_HList,\n+     apzLynxos_No_Warning_In_Sys_Time_HMachs,\n+     LYNXOS_NO_WARNING_IN_SYS_TIME_H_TEST_CT, FD_MACH_ONLY | FD_SUBROUTINE,\n+     aLynxos_No_Warning_In_Sys_Time_HTests,   apzLynxos_No_Warning_In_Sys_Time_HPatch, 0 },\n \n-  {  zLynxos_Fcntl_ProtoName,    zLynxos_Fcntl_ProtoList,\n-     apzLynxos_Fcntl_ProtoMachs,\n-     LYNXOS_FCNTL_PROTO_TEST_CT, FD_MACH_ONLY | FD_SUBROUTINE,\n-     aLynxos_Fcntl_ProtoTests,   apzLynxos_Fcntl_ProtoPatch, 0 },\n+  {  zLynxos_Missing_PutenvName,    zLynxos_Missing_PutenvList,\n+     apzLynxos_Missing_PutenvMachs,\n+     LYNXOS_MISSING_PUTENV_TEST_CT, FD_MACH_ONLY | FD_SUBROUTINE,\n+     aLynxos_Missing_PutenvTests,   apzLynxos_Missing_PutenvPatch, 0 },\n \n   {  zMachine_Ansi_H_Va_ListName,    zMachine_Ansi_H_Va_ListList,\n      apzMachine_Ansi_H_Va_ListMachs,"}, {"sha": "ef32025438a43fde41608142add4acc9e70173b0", "filename": "fixincludes/inclhack.def", "status": "modified", "additions": 19, "deletions": 15, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d635c70797688ead5f670ad5b176b12c0129b74f/fixincludes%2Finclhack.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d635c70797688ead5f670ad5b176b12c0129b74f/fixincludes%2Finclhack.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/fixincludes%2Finclhack.def?ref=d635c70797688ead5f670ad5b176b12c0129b74f", "patch": "@@ -1870,31 +1870,35 @@ fix = {\n };\n #endif\n \n-\n-/*\n- *  Delete the '#define void int' line from curses.h on Lynx\n+/* \n+ *  Remove header file warning from sys/time.h.  Autoconf's\n+ *  AC_HEADER_TIME recommends to include both sys/time.h and time.h\n+ *  which causes warning on LynxOS.  Remove the warning.\n  */\n fix = {\n-    hackname  = lynx_void_int;\n-    files     = curses.h;\n-    select    = \"#[ \\t]*define[ \\t]+void[ \\t]+int[ \\t]*\";\n+    hackname  = lynxos_no_warning_in_sys_time_h;\n+    files     = sys/time.h;\n+    select    = \"#warning[ \\t]+Using <time.h> instead of <sys/time.h>\";\n     c_fix     = format;\n     c_fix_arg = \"\";\n-    test_text = \"# define\\tvoid\\tint \\t/* curses foiled again */\";\n+    test_text = \"#warning Using <time.h> instead of <sys/time.h>\";\n };\n \n \n-/*\n- *  Fix fcntl prototype in fcntl.h on LynxOS.\n+/* \n+ *  Add missing declaration for putenv.\n  */\n fix = {\n-    hackname  = lynxos_fcntl_proto;\n-    files     = fcntl.h;\n-    select    = \"fcntl[ \\t]*\" '\\(int, int, int\\)';\n+    hackname  = lynxos_missing_putenv;\n+    mach      = '*-*-lynxos*';\n+    files     = stdlib.h;\n+    bypass    = 'putenv[ \\t]*\\\\(';\n+    select    = \"extern char \\\\*getenv[ \\t]*_AP\\\\(\\\\(const char \\\\*\\\\)\\\\);\";\n     c_fix     = format;\n-    c_fix_arg = '%1...)';\n-    c_fix_arg = \"(fcntl[ \\t]*\" '\\(int, int, )int\\)';\n-    test_text = \"extern int fcntl(int, int, int);\";\n+    c_fix_arg = \"%0\\n\"\n+        \"extern int putenv\t\t\t\t_AP((char *));\";\n+    c_fix_arg = \"extern char \\\\*getenv[ \\t]*_AP\\\\(\\\\(const char \\\\*\\\\)\\\\);\";\n+    test_text = \"extern char *getenv\t_AP((const char *));\";\n };\n \n "}, {"sha": "eb2067e97af02e38618e80e4325b419299d1463e", "filename": "fixincludes/tests/base/curses.h", "status": "modified", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d635c70797688ead5f670ad5b176b12c0129b74f/fixincludes%2Ftests%2Fbase%2Fcurses.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d635c70797688ead5f670ad5b176b12c0129b74f/fixincludes%2Ftests%2Fbase%2Fcurses.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/fixincludes%2Ftests%2Fbase%2Fcurses.h?ref=d635c70797688ead5f670ad5b176b12c0129b74f", "patch": "@@ -30,11 +30,6 @@ struct term;\n #endif  /* BAD_STRUCT_TERM_CHECK */\n \n \n-#if defined( LYNX_VOID_INT_CHECK )\n-/* curses foiled again */\n-#endif  /* LYNX_VOID_INT_CHECK */\n-\n-\n #if defined( VOID_NULL_CHECK )\n #ifndef NULL\n #define NULL 0  /* typed NULL */"}, {"sha": "ad6c8c99f956d8981c8489e22982a0f50207250e", "filename": "fixincludes/tests/base/fcntl.h", "status": "removed", "additions": 0, "deletions": 14, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/85d625202998b5153d40cf1fbc36a400e8e013dd/fixincludes%2Ftests%2Fbase%2Ffcntl.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/85d625202998b5153d40cf1fbc36a400e8e013dd/fixincludes%2Ftests%2Fbase%2Ffcntl.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/fixincludes%2Ftests%2Fbase%2Ffcntl.h?ref=85d625202998b5153d40cf1fbc36a400e8e013dd", "patch": "@@ -1,14 +0,0 @@\n-/*  DO NOT EDIT THIS FILE.\n-\n-    It has been auto-edited by fixincludes from:\n-\n-\t\"fixinc/tests/inc/fcntl.h\"\n-\n-    This had to be done to correct non-standard usages in the\n-    original, manufacturer supplied header file.  */\n-\n-\n-\n-#if defined( LYNXOS_FCNTL_PROTO_CHECK )\n-extern int fcntl(int, int, ...);\n-#endif  /* LYNXOS_FCNTL_PROTO_CHECK */"}, {"sha": "d1d4f3706eb3bd9c9f62aadbb896452cf61979a9", "filename": "fixincludes/tests/base/stdlib.h", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d635c70797688ead5f670ad5b176b12c0129b74f/fixincludes%2Ftests%2Fbase%2Fstdlib.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d635c70797688ead5f670ad5b176b12c0129b74f/fixincludes%2Ftests%2Fbase%2Fstdlib.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/fixincludes%2Ftests%2Fbase%2Fstdlib.h?ref=d635c70797688ead5f670ad5b176b12c0129b74f", "patch": "@@ -27,6 +27,12 @@ extern void\texit(void*);\n #endif  /* INT_ABORT_FREE_AND_EXIT_CHECK */\n \n \n+#if defined( LYNX_MISSING_PUTENV_CHECK )\n+extern char *getenv\t_AP((const char *));\n+extern int putenv\t\t\t\t_AP((char *));\n+#endif  /* LYNX_MISSING_PUTENV_CHECK */\n+\n+\n #if defined( SVR4_GETCWD_CHECK )\n extern char* getcwd(char *, size_t);\n #endif  /* SVR4_GETCWD_CHECK */"}, {"sha": "d669df0af4c39aa4884a2fca7728ac99537aefe7", "filename": "fixincludes/tests/base/sys/time.h", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d635c70797688ead5f670ad5b176b12c0129b74f/fixincludes%2Ftests%2Fbase%2Fsys%2Ftime.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d635c70797688ead5f670ad5b176b12c0129b74f/fixincludes%2Ftests%2Fbase%2Fsys%2Ftime.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/fixincludes%2Ftests%2Fbase%2Fsys%2Ftime.h?ref=d635c70797688ead5f670ad5b176b12c0129b74f", "patch": "@@ -14,6 +14,11 @@ struct sigevent;\n #endif  /* HPUX_SYSTIME_CHECK */\n \n \n+#if defined( LYNX_NO_WARNING_IN_SYS_TIME_H_CHECK )\n+\n+#endif  /* LYNX_NO_WARNING_IN_SYS_TIME_H_CHECK */\n+\n+\n #if defined( ULTRIX_SYS_TIME_CHECK )\n @(#)time.h      6.1     (ULTRIX)\n extern time_t\t\ttime( time_t *__tloc );"}]}