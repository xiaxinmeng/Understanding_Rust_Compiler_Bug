{"sha": "a5ed4958a2c1b563e933b25ca3b481761cc40b07", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTVlZDQ5NThhMmMxYjU2M2U5MzNiMjVjYTNiNDgxNzYxY2M0MGIwNw==", "commit": {"author": {"name": "Julian Brown", "email": "julian@codesourcery.com", "date": "2020-01-04T01:39:56Z"}, "committer": {"name": "Julian Brown", "email": "julian@codesourcery.com", "date": "2020-01-28T14:00:30Z"}, "message": "Check array contiguity for OpenACC/Fortran\n\n\tPR fortran/93025\n\n\tgcc/fortran/\n\t* openmp.c (resolve_omp_clauses): Check array references for contiguity.\n\n\tgcc/testsuite/\n\t* gfortran.dg/goacc/mapping-tests-2.f90: New test.\n\t* gfortran.dg/goacc/subarrays.f95: Expect rejection of non-contiguous\n\tarray.", "tree": {"sha": "1fa8f2157f7b0382370e65956bf4f2d569afcada", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1fa8f2157f7b0382370e65956bf4f2d569afcada"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a5ed4958a2c1b563e933b25ca3b481761cc40b07", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a5ed4958a2c1b563e933b25ca3b481761cc40b07", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a5ed4958a2c1b563e933b25ca3b481761cc40b07", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a5ed4958a2c1b563e933b25ca3b481761cc40b07/comments", "author": {"login": "jtb20", "id": 6094880, "node_id": "MDQ6VXNlcjYwOTQ4ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/6094880?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jtb20", "html_url": "https://github.com/jtb20", "followers_url": "https://api.github.com/users/jtb20/followers", "following_url": "https://api.github.com/users/jtb20/following{/other_user}", "gists_url": "https://api.github.com/users/jtb20/gists{/gist_id}", "starred_url": "https://api.github.com/users/jtb20/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jtb20/subscriptions", "organizations_url": "https://api.github.com/users/jtb20/orgs", "repos_url": "https://api.github.com/users/jtb20/repos", "events_url": "https://api.github.com/users/jtb20/events{/privacy}", "received_events_url": "https://api.github.com/users/jtb20/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jtb20", "id": 6094880, "node_id": "MDQ6VXNlcjYwOTQ4ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/6094880?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jtb20", "html_url": "https://github.com/jtb20", "followers_url": "https://api.github.com/users/jtb20/followers", "following_url": "https://api.github.com/users/jtb20/following{/other_user}", "gists_url": "https://api.github.com/users/jtb20/gists{/gist_id}", "starred_url": "https://api.github.com/users/jtb20/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jtb20/subscriptions", "organizations_url": "https://api.github.com/users/jtb20/orgs", "repos_url": "https://api.github.com/users/jtb20/repos", "events_url": "https://api.github.com/users/jtb20/events{/privacy}", "received_events_url": "https://api.github.com/users/jtb20/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "278c3214b344ac7c5daf974196fbebc531bff058", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/278c3214b344ac7c5daf974196fbebc531bff058", "html_url": "https://github.com/Rust-GCC/gccrs/commit/278c3214b344ac7c5daf974196fbebc531bff058"}], "stats": {"total": 75, "additions": 67, "deletions": 8}, "files": [{"sha": "c7e2b31933769b36ec71bf1e618fb048d39f186d", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a5ed4958a2c1b563e933b25ca3b481761cc40b07/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a5ed4958a2c1b563e933b25ca3b481761cc40b07/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=a5ed4958a2c1b563e933b25ca3b481761cc40b07", "patch": "@@ -1,3 +1,8 @@\n+2020-01-28  Julian Brown  <julian@codesourcery.com>\n+\n+\tPR fortran/93025\n+\t* openmp.c (resolve_omp_clauses): Check array references for contiguity.\n+\n 2020-01-28  Julian Brown  <julian@codesourcery.com>\n \n \t* gfortran.h (gfc_symbol): Add comp_mark bitfield."}, {"sha": "0accb185e87de4b22001e6e9a8741fb461874063", "filename": "gcc/fortran/openmp.c", "status": "modified", "additions": 22, "deletions": 7, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a5ed4958a2c1b563e933b25ca3b481761cc40b07/gcc%2Ffortran%2Fopenmp.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a5ed4958a2c1b563e933b25ca3b481761cc40b07/gcc%2Ffortran%2Fopenmp.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fopenmp.c?ref=a5ed4958a2c1b563e933b25ca3b481761cc40b07", "patch": "@@ -4536,13 +4536,28 @@ resolve_omp_clauses (gfc_code *code, gfc_omp_clauses *omp_clauses,\n \t\t    /* Look through component refs to find last array\n \t\t       reference.  */\n \t\t    if (openacc && resolved)\n-\t\t      while (array_ref\n-\t\t\t     && (array_ref->type == REF_COMPONENT\n-\t\t\t\t || (array_ref->type == REF_ARRAY\n-\t\t\t\t     && array_ref->next\n-\t\t\t\t     && (array_ref->next->type\n-\t\t\t\t\t == REF_COMPONENT))))\n-\t\t\tarray_ref = array_ref->next;\n+\t\t      {\n+\t\t\t/* The \"!$acc cache\" directive allows rectangular\n+\t\t\t   subarrays to be specified, with some restrictions\n+\t\t\t   on the form of bounds (not implemented).\n+\t\t\t   Only raise an error here if we're really sure the\n+\t\t\t   array isn't contiguous.  An expression such as\n+\t\t\t   arr(-n:n,-n:n) could be contiguous even if it looks\n+\t\t\t   like it may not be.  */\n+\t\t\tif (list != OMP_LIST_CACHE\n+\t\t\t    && !gfc_is_simply_contiguous (n->expr, false, true)\n+\t\t\t    && gfc_is_not_contiguous (n->expr))\n+\t\t\t  gfc_error (\"Array is not contiguous at %L\",\n+\t\t\t\t     &n->where);\n+\n+\t\t\twhile (array_ref\n+\t\t\t       && (array_ref->type == REF_COMPONENT\n+\t\t\t\t   || (array_ref->type == REF_ARRAY\n+\t\t\t\t       && array_ref->next\n+\t\t\t\t       && (array_ref->next->type\n+\t\t\t\t\t   == REF_COMPONENT))))\n+\t\t\t  array_ref = array_ref->next;\n+\t\t      }\n \t\t  }\n \t\tif (array_ref\n \t\t    || (n->expr"}, {"sha": "9e1af091bccb29f53ee5ec80fbb91da6f34b2f93", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a5ed4958a2c1b563e933b25ca3b481761cc40b07/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a5ed4958a2c1b563e933b25ca3b481761cc40b07/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=a5ed4958a2c1b563e933b25ca3b481761cc40b07", "patch": "@@ -1,3 +1,10 @@\n+2020-01-28  Tobias Burnus  <tobias@codesourcery.com>\n+\t    Julian Brown  <julian@codesourcery.com>\n+\n+\t* gfortran.dg/goacc/mapping-tests-2.f90: New test.\n+\t* gfortran.dg/goacc/subarrays.f95: Expect rejection of non-contiguous\n+\tarray.\n+\n 2020-01-28  Julian Brown  <julian@codesourcery.com>\n \n \t* gfortran.dg/goacc/deep-copy-2.f90: Move test here (from libgomp"}, {"sha": "1372f6af53e9eaf81728dc3209047a9cff6e0364", "filename": "gcc/testsuite/gfortran.dg/goacc/mapping-tests-2.f90", "status": "added", "additions": 32, "deletions": 0, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a5ed4958a2c1b563e933b25ca3b481761cc40b07/gcc%2Ftestsuite%2Fgfortran.dg%2Fgoacc%2Fmapping-tests-2.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a5ed4958a2c1b563e933b25ca3b481761cc40b07/gcc%2Ftestsuite%2Fgfortran.dg%2Fgoacc%2Fmapping-tests-2.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fgoacc%2Fmapping-tests-2.f90?ref=a5ed4958a2c1b563e933b25ca3b481761cc40b07", "patch": "@@ -0,0 +1,32 @@\n+subroutine foo\n+  type t\n+    integer :: i, j\n+  end type t\n+\n+  type t2\n+    type(t) :: cc(3)\n+  end type t2\n+\n+  type(t) x, y(3)\n+  type(t2) :: z(3)\n+\n+  ! OK - map whole aggregated variable\n+!$acc enter data copyin(x)\n+  ! map(to:x [len: 8])\n+\n+  ! OK - map two components of the aggregated variable\n+!$acc enter data copyin(x%j, x%i)\n+\n+  ! Bad - we cannot mix full-object and component accesses\n+!$acc enter data copyin(x, x%i)\n+! { dg-error \"Symbol .x. has mixed component and non-component accesses\" \"\" { target \"*-*-*\" } 21 }\n+\n+  ! Bad - we cannot do a strided access of 'x'\n+  ! No C/C++ equivalent\n+!$acc enter data copyin(y(:)%i)\n+! { dg-error \"Array is not contiguous\" \"\" { target \"*-*-*\" } 26 }\n+\n+  ! Bad - again, a strided access\n+!$acc enter data copyin(z(1)%cc(:)%i)\n+! { dg-error \"Array is not contiguous\" \"\" { target \"*-*-*\" } 30 }\n+end"}, {"sha": "fa0378550e9a861b79817b2e86c8bd3bbed33fca", "filename": "gcc/testsuite/gfortran.dg/goacc/subarrays.f95", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a5ed4958a2c1b563e933b25ca3b481761cc40b07/gcc%2Ftestsuite%2Fgfortran.dg%2Fgoacc%2Fsubarrays.f95", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a5ed4958a2c1b563e933b25ca3b481761cc40b07/gcc%2Ftestsuite%2Fgfortran.dg%2Fgoacc%2Fsubarrays.f95", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fgoacc%2Fsubarrays.f95?ref=a5ed4958a2c1b563e933b25ca3b481761cc40b07", "patch": "@@ -27,7 +27,7 @@ program test\n   ! { dg-error \"'a' in MAP clause\" \"\" { target *-*-* } .-2 }\n   !$acc end parallel\n \n-  !$acc parallel copy (b(1:3,2:4))\n+  !$acc parallel copy (b(1:3,2:4)) ! { dg-error \"Array is not contiguous\" }\n   !$acc end parallel\n   !$acc parallel copy (b(2:3))\n   ! { dg-error \"Rank mismatch\" \"\" { target *-*-* } .-1 }"}]}