{"sha": "383321ecc99a881f9f1a8249295d23e717cbdf7e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzgzMzIxZWNjOTlhODgxZjlmMWE4MjQ5Mjk1ZDIzZTcxN2NiZGY3ZQ==", "commit": {"author": {"name": "Uros Bizjak", "email": "ubizjak@gmail.com", "date": "2016-08-04T21:14:39Z"}, "committer": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2016-08-04T21:14:39Z"}, "message": "re PR target/72805 (AVX512: invalid code generation involving masks)\n\n\tPR target/72805\n\t* config/i386/avx512fintrin.h (_mm512_cmp_epi32_mask) [!__OPTIMIZE__]:\n\tCast builtin function result to __mmask16 instead of __mmask8.\n\t(_mm512_cmp_epu32_mask) [!__OPTIMIZE__]: Ditto.\n\t(_mm512_mask_cmp_epi32_mask) [!__OPTIMIZE__]: Ditto.\n\t(_mm512_mask_cmp_epu32_mask) [!__OPTIMIZE__]: Ditto.\n\nFrom-SVN: r239152", "tree": {"sha": "b25121ec4995070a6ebf7eee91ddccf1b1967214", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b25121ec4995070a6ebf7eee91ddccf1b1967214"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/383321ecc99a881f9f1a8249295d23e717cbdf7e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/383321ecc99a881f9f1a8249295d23e717cbdf7e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/383321ecc99a881f9f1a8249295d23e717cbdf7e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/383321ecc99a881f9f1a8249295d23e717cbdf7e/comments", "author": {"login": "ubizjak", "id": 55479990, "node_id": "MDQ6VXNlcjU1NDc5OTkw", "avatar_url": "https://avatars.githubusercontent.com/u/55479990?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ubizjak", "html_url": "https://github.com/ubizjak", "followers_url": "https://api.github.com/users/ubizjak/followers", "following_url": "https://api.github.com/users/ubizjak/following{/other_user}", "gists_url": "https://api.github.com/users/ubizjak/gists{/gist_id}", "starred_url": "https://api.github.com/users/ubizjak/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ubizjak/subscriptions", "organizations_url": "https://api.github.com/users/ubizjak/orgs", "repos_url": "https://api.github.com/users/ubizjak/repos", "events_url": "https://api.github.com/users/ubizjak/events{/privacy}", "received_events_url": "https://api.github.com/users/ubizjak/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "d4f7837c5a8aacaf7c651d66cbd3e1363e15d564", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d4f7837c5a8aacaf7c651d66cbd3e1363e15d564", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d4f7837c5a8aacaf7c651d66cbd3e1363e15d564"}], "stats": {"total": 57, "additions": 33, "deletions": 24}, "files": [{"sha": "fd6fa781277b5c63d92c8cf516a89e9c6d6b5ffc", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/383321ecc99a881f9f1a8249295d23e717cbdf7e/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/383321ecc99a881f9f1a8249295d23e717cbdf7e/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=383321ecc99a881f9f1a8249295d23e717cbdf7e", "patch": "@@ -1,3 +1,12 @@\n+2016-08-04  Uros Bizjak  <ubizjak@gmail.com>\n+\n+\tPR target/72805\n+\t* config/i386/avx512fintrin.h (_mm512_cmp_epi32_mask) [!__OPTIMIZE__]:\n+\tCast builtin function result to __mmask16 instead of __mmask8.\n+\t(_mm512_cmp_epu32_mask) [!__OPTIMIZE__]: Ditto.\n+\t(_mm512_mask_cmp_epi32_mask) [!__OPTIMIZE__]: Ditto.\n+\t(_mm512_mask_cmp_epu32_mask) [!__OPTIMIZE__]: Ditto.\n+\n 2016-08-04  David Malcolm  <dmalcolm@redhat.com>\n \n \t* selftest.h (ASSERT_TRUE): Reimplement in terms of..."}, {"sha": "2b30eae8ce06062e2e0daef69ba09c20b42224cd", "filename": "gcc/config/i386/avx512fintrin.h", "status": "modified", "additions": 24, "deletions": 24, "changes": 48, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/383321ecc99a881f9f1a8249295d23e717cbdf7e/gcc%2Fconfig%2Fi386%2Favx512fintrin.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/383321ecc99a881f9f1a8249295d23e717cbdf7e/gcc%2Fconfig%2Fi386%2Favx512fintrin.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Favx512fintrin.h?ref=383321ecc99a881f9f1a8249295d23e717cbdf7e", "patch": "@@ -9130,76 +9130,76 @@ _mm_mask_cmp_round_ss_mask (__mmask8 __M, __m128 __X, __m128 __Y,\n \t\t\t\t\t   (__mmask8)-1))\n \n #define _mm512_cmp_epi32_mask(X, Y, P)\t\t\t\t\t\\\n-  ((__mmask8) __builtin_ia32_cmpd512_mask ((__v16si)(__m512i)(X),\t\\\n-\t\t\t\t\t   (__v16si)(__m512i)(Y), (int)(P),\\\n-\t\t\t\t\t   (__mmask16)-1))\n+  ((__mmask16) __builtin_ia32_cmpd512_mask ((__v16si)(__m512i)(X),\t\\\n+\t\t\t\t\t    (__v16si)(__m512i)(Y), (int)(P), \\\n+\t\t\t\t\t    (__mmask16)-1))\n \n #define _mm512_cmp_epu64_mask(X, Y, P)\t\t\t\t\t\\\n   ((__mmask8) __builtin_ia32_ucmpq512_mask ((__v8di)(__m512i)(X),\t\\\n \t\t\t\t\t    (__v8di)(__m512i)(Y), (int)(P),\\\n \t\t\t\t\t    (__mmask8)-1))\n \n #define _mm512_cmp_epu32_mask(X, Y, P)\t\t\t\t\t\\\n-  ((__mmask8) __builtin_ia32_ucmpd512_mask ((__v16si)(__m512i)(X),\t\\\n-\t\t\t\t\t    (__v16si)(__m512i)(Y), (int)(P),\\\n-\t\t\t\t\t    (__mmask16)-1))\n+  ((__mmask16) __builtin_ia32_ucmpd512_mask ((__v16si)(__m512i)(X),\t\\\n+\t\t\t\t\t     (__v16si)(__m512i)(Y), (int)(P), \\\n+\t\t\t\t\t     (__mmask16)-1))\n \n-#define _mm512_cmp_round_pd_mask(X, Y, P, R)\t\t\t\t\t\\\n+#define _mm512_cmp_round_pd_mask(X, Y, P, R)\t\t\t\t\\\n   ((__mmask8) __builtin_ia32_cmppd512_mask ((__v8df)(__m512d)(X),\t\\\n \t\t\t\t\t    (__v8df)(__m512d)(Y), (int)(P),\\\n \t\t\t\t\t    (__mmask8)-1, R))\n \n-#define _mm512_cmp_round_ps_mask(X, Y, P, R)\t\t\t\t\t\\\n+#define _mm512_cmp_round_ps_mask(X, Y, P, R)\t\t\t\t\\\n   ((__mmask16) __builtin_ia32_cmpps512_mask ((__v16sf)(__m512)(X),\t\\\n \t\t\t\t\t     (__v16sf)(__m512)(Y), (int)(P),\\\n \t\t\t\t\t     (__mmask16)-1, R))\n \n-#define _mm512_mask_cmp_epi64_mask(M, X, Y, P)\t\t\t\t\t\\\n+#define _mm512_mask_cmp_epi64_mask(M, X, Y, P)\t\t\t\t\\\n   ((__mmask8) __builtin_ia32_cmpq512_mask ((__v8di)(__m512i)(X),\t\\\n \t\t\t\t\t   (__v8di)(__m512i)(Y), (int)(P),\\\n \t\t\t\t\t   (__mmask8)M))\n \n-#define _mm512_mask_cmp_epi32_mask(M, X, Y, P)\t\t\t\t\t\\\n-  ((__mmask8) __builtin_ia32_cmpd512_mask ((__v16si)(__m512i)(X),\t\\\n-\t\t\t\t\t   (__v16si)(__m512i)(Y), (int)(P),\\\n-\t\t\t\t\t   (__mmask16)M))\n+#define _mm512_mask_cmp_epi32_mask(M, X, Y, P)\t\t\t\t\\\n+  ((__mmask16) __builtin_ia32_cmpd512_mask ((__v16si)(__m512i)(X),\t\\\n+\t\t\t\t\t    (__v16si)(__m512i)(Y), (int)(P), \\\n+\t\t\t\t\t    (__mmask16)M))\n \n-#define _mm512_mask_cmp_epu64_mask(M, X, Y, P)\t\t\t\t\t\\\n+#define _mm512_mask_cmp_epu64_mask(M, X, Y, P)\t\t\t\t\\\n   ((__mmask8) __builtin_ia32_ucmpq512_mask ((__v8di)(__m512i)(X),\t\\\n \t\t\t\t\t    (__v8di)(__m512i)(Y), (int)(P),\\\n \t\t\t\t\t    (__mmask8)M))\n \n-#define _mm512_mask_cmp_epu32_mask(M, X, Y, P)\t\t\t\t\t\\\n-  ((__mmask8) __builtin_ia32_ucmpd512_mask ((__v16si)(__m512i)(X),\t\\\n-\t\t\t\t\t    (__v16si)(__m512i)(Y), (int)(P),\\\n-\t\t\t\t\t    (__mmask16)M))\n+#define _mm512_mask_cmp_epu32_mask(M, X, Y, P)\t\t\t\t\\\n+  ((__mmask16) __builtin_ia32_ucmpd512_mask ((__v16si)(__m512i)(X),\t\\\n+\t\t\t\t\t     (__v16si)(__m512i)(Y), (int)(P), \\\n+\t\t\t\t\t     (__mmask16)M))\n \n-#define _mm512_mask_cmp_round_pd_mask(M, X, Y, P, R)\t\t\t\t\t\\\n+#define _mm512_mask_cmp_round_pd_mask(M, X, Y, P, R)\t\t\t\\\n   ((__mmask8) __builtin_ia32_cmppd512_mask ((__v8df)(__m512d)(X),\t\\\n \t\t\t\t\t    (__v8df)(__m512d)(Y), (int)(P),\\\n \t\t\t\t\t    (__mmask8)M, R))\n \n-#define _mm512_mask_cmp_round_ps_mask(M, X, Y, P, R)\t\t\t\t\t\\\n+#define _mm512_mask_cmp_round_ps_mask(M, X, Y, P, R)\t\t\t\\\n   ((__mmask16) __builtin_ia32_cmpps512_mask ((__v16sf)(__m512)(X),\t\\\n \t\t\t\t\t     (__v16sf)(__m512)(Y), (int)(P),\\\n \t\t\t\t\t     (__mmask16)M, R))\n \n-#define _mm_cmp_round_sd_mask(X, Y, P, R)\t\t\t\t\t\\\n+#define _mm_cmp_round_sd_mask(X, Y, P, R)\t\t\t\t\\\n   ((__mmask8) __builtin_ia32_cmpsd_mask ((__v2df)(__m128d)(X),\t\t\\\n \t\t\t\t\t (__v2df)(__m128d)(Y), (int)(P),\\\n \t\t\t\t\t (__mmask8)-1, R))\n \n-#define _mm_mask_cmp_round_sd_mask(M, X, Y, P, R)\t\t\t\t\t\\\n+#define _mm_mask_cmp_round_sd_mask(M, X, Y, P, R)\t\t\t\\\n   ((__mmask8) __builtin_ia32_cmpsd_mask ((__v2df)(__m128d)(X),\t\t\\\n \t\t\t\t\t (__v2df)(__m128d)(Y), (int)(P),\\\n \t\t\t\t\t (M), R))\n \n-#define _mm_cmp_round_ss_mask(X, Y, P, R)\t\t\t\t\t\\\n+#define _mm_cmp_round_ss_mask(X, Y, P, R)\t\t\t\t\\\n   ((__mmask8) __builtin_ia32_cmpss_mask ((__v4sf)(__m128)(X),\t\t\\\n \t\t\t\t\t (__v4sf)(__m128)(Y), (int)(P), \\\n \t\t\t\t\t (__mmask8)-1, R))\n \n-#define _mm_mask_cmp_round_ss_mask(M, X, Y, P, R)\t\t\t\t\t\\\n+#define _mm_mask_cmp_round_ss_mask(M, X, Y, P, R)\t\t\t\\\n   ((__mmask8) __builtin_ia32_cmpss_mask ((__v4sf)(__m128)(X),\t\t\\\n \t\t\t\t\t (__v4sf)(__m128)(Y), (int)(P), \\\n \t\t\t\t\t (M), R))"}]}