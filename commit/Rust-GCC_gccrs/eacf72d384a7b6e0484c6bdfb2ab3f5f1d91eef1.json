{"sha": "eacf72d384a7b6e0484c6bdfb2ab3f5f1d91eef1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWFjZjcyZDM4NGE3YjZlMDQ4NGM2YmRmYjJhYjNmNWYxZDkxZWVmMQ==", "commit": {"author": {"name": "Nathan Myers", "email": "ncm@cantrip.org", "date": "2004-11-24T17:01:22Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2004-11-24T17:01:22Z"}, "message": "2004-11-24  Nathan Myers  <ncm@cantrip.org>\n\n\t* include/bits/streambuf_iterator.h\n\t(istreambuf_iterator<>::operator++(), operator++(int)): Don't\n\tcheck unnecessarily the return value of _M_sbuf->sbumpc().\n\nFrom-SVN: r91176", "tree": {"sha": "689b9a071e8e4692a18d3864833dd4c50583e012", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/689b9a071e8e4692a18d3864833dd4c50583e012"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/eacf72d384a7b6e0484c6bdfb2ab3f5f1d91eef1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/eacf72d384a7b6e0484c6bdfb2ab3f5f1d91eef1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/eacf72d384a7b6e0484c6bdfb2ab3f5f1d91eef1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/eacf72d384a7b6e0484c6bdfb2ab3f5f1d91eef1/comments", "author": {"login": "ncm", "id": 215047, "node_id": "MDQ6VXNlcjIxNTA0Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/215047?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ncm", "html_url": "https://github.com/ncm", "followers_url": "https://api.github.com/users/ncm/followers", "following_url": "https://api.github.com/users/ncm/following{/other_user}", "gists_url": "https://api.github.com/users/ncm/gists{/gist_id}", "starred_url": "https://api.github.com/users/ncm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ncm/subscriptions", "organizations_url": "https://api.github.com/users/ncm/orgs", "repos_url": "https://api.github.com/users/ncm/repos", "events_url": "https://api.github.com/users/ncm/events{/privacy}", "received_events_url": "https://api.github.com/users/ncm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "bada2eb851f70e49bb06d04586b767c5ba3a4d16", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bada2eb851f70e49bb06d04586b767c5ba3a4d16", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bada2eb851f70e49bb06d04586b767c5ba3a4d16"}], "stats": {"total": 28, "additions": 16, "deletions": 12}, "files": [{"sha": "9ca1b15104092f6b32890ff7f6d492c544bd733d", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eacf72d384a7b6e0484c6bdfb2ab3f5f1d91eef1/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eacf72d384a7b6e0484c6bdfb2ab3f5f1d91eef1/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=eacf72d384a7b6e0484c6bdfb2ab3f5f1d91eef1", "patch": "@@ -1,3 +1,9 @@\n+2004-11-24  Nathan Myers  <ncm@cantrip.org>\n+\n+\t* include/bits/streambuf_iterator.h\n+\t(istreambuf_iterator<>::operator++(), operator++(int)): Don't\n+\tcheck unnecessarily the return value of _M_sbuf->sbumpc().\n+\n 2004-11-24  Benjamin Kosnik  <bkoz@redhat.com>\n \n \t* include/Makefile.am (tr1_headers): Add utility, functional."}, {"sha": "df06538f97210c49b8836319265e3b5551104b72", "filename": "libstdc++-v3/include/bits/streambuf_iterator.h", "status": "modified", "additions": 10, "deletions": 12, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eacf72d384a7b6e0484c6bdfb2ab3f5f1d91eef1/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstreambuf_iterator.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eacf72d384a7b6e0484c6bdfb2ab3f5f1d91eef1/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstreambuf_iterator.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstreambuf_iterator.h?ref=eacf72d384a7b6e0484c6bdfb2ab3f5f1d91eef1", "patch": "@@ -110,11 +110,11 @@ namespace std\n \t__glibcxx_requires_cond(!_M_at_eof(),\n \t\t\t\t_M_message(__gnu_debug::__msg_inc_istreambuf)\n \t\t\t\t._M_iterator(*this));\n-\tconst int_type __eof = traits_type::eof();\n-\tif (_M_sbuf && traits_type::eq_int_type(_M_sbuf->sbumpc(), __eof))\n-\t  _M_sbuf = 0;\n-\telse\n-\t  _M_c = __eof;\n+\tif (_M_sbuf)\n+\t  {\n+\t    _M_sbuf->sbumpc();\n+\t    _M_c = traits_type::eof();\n+\t  }\n \treturn *this;\n       }\n \n@@ -126,14 +126,12 @@ namespace std\n \t\t\t\t_M_message(__gnu_debug::__msg_inc_istreambuf)\n \t\t\t\t._M_iterator(*this));\n \n-\tconst int_type __eof = traits_type::eof();\n \tistreambuf_iterator __old = *this;\n-\tif (_M_sbuf\n-\t    && traits_type::eq_int_type((__old._M_c = _M_sbuf->sbumpc()),\n-\t\t\t\t\t__eof))\n-\t  _M_sbuf = 0;\n-\telse\n-\t  _M_c = __eof;\n+\tif (_M_sbuf)\n+\t  {\n+\t    __old._M_c = _M_sbuf->sbumpc();\n+\t    _M_c = traits_type::eof();\n+\t  }\n \treturn __old;\n       }\n "}]}