{"sha": "0646b0597b3e675c23938fae830dba69aefc6b33", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDY0NmIwNTk3YjNlNjc1YzIzOTM4ZmFlODMwZGJhNjlhZWZjNmIzMw==", "commit": {"author": {"name": "Geoffrey Keating", "email": "geoffk@apple.com", "date": "2005-08-03T23:17:06Z"}, "committer": {"name": "Geoffrey Keating", "email": "geoffk@gcc.gnu.org", "date": "2005-08-03T23:17:06Z"}, "message": "configure.ac: Don't use GCC_NO_EXECUTABLES or clear GLIBCXX_IS_NATIVE on Darwin crosses.\n\n\t* configure.ac: Don't use GCC_NO_EXECUTABLES or clear\n\tGLIBCXX_IS_NATIVE on Darwin crosses.\n\t* acinclude.m4 (GLIBCXX_CONFIGURE_TESTSUITE): Don't skip configuring\n\tthe testsuite just because there's no symbol versioning.\n\t* configure: Regenerate.\n\nFrom-SVN: r102718", "tree": {"sha": "209cc465f4311fcece71dc88d8a2baf6dc9a0e75", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/209cc465f4311fcece71dc88d8a2baf6dc9a0e75"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0646b0597b3e675c23938fae830dba69aefc6b33", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0646b0597b3e675c23938fae830dba69aefc6b33", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0646b0597b3e675c23938fae830dba69aefc6b33", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0646b0597b3e675c23938fae830dba69aefc6b33/comments", "author": {"login": "geoffk01", "id": 31905243, "node_id": "MDQ6VXNlcjMxOTA1MjQz", "avatar_url": "https://avatars.githubusercontent.com/u/31905243?v=4", "gravatar_id": "", "url": "https://api.github.com/users/geoffk01", "html_url": "https://github.com/geoffk01", "followers_url": "https://api.github.com/users/geoffk01/followers", "following_url": "https://api.github.com/users/geoffk01/following{/other_user}", "gists_url": "https://api.github.com/users/geoffk01/gists{/gist_id}", "starred_url": "https://api.github.com/users/geoffk01/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/geoffk01/subscriptions", "organizations_url": "https://api.github.com/users/geoffk01/orgs", "repos_url": "https://api.github.com/users/geoffk01/repos", "events_url": "https://api.github.com/users/geoffk01/events{/privacy}", "received_events_url": "https://api.github.com/users/geoffk01/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "d783b2a2dc91e1d2c1fea78cac2b6c6c73b3680d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d783b2a2dc91e1d2c1fea78cac2b6c6c73b3680d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d783b2a2dc91e1d2c1fea78cac2b6c6c73b3680d"}], "stats": {"total": 90, "additions": 63, "deletions": 27}, "files": [{"sha": "abb466fe9810ec2bde3b110dc8bfc7cf80088bef", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0646b0597b3e675c23938fae830dba69aefc6b33/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0646b0597b3e675c23938fae830dba69aefc6b33/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=0646b0597b3e675c23938fae830dba69aefc6b33", "patch": "@@ -1,5 +1,11 @@\n 2005-08-03  Geoffrey Keating  <geoffk@apple.com>\n \n+\t* configure.ac: Don't use GCC_NO_EXECUTABLES or clear\n+\tGLIBCXX_IS_NATIVE on Darwin crosses.\n+\t* acinclude.m4 (GLIBCXX_CONFIGURE_TESTSUITE): Don't skip configuring\n+\tthe testsuite just because there's no symbol versioning.\n+\t* configure: Regenerate.\n+\n \t* acinclude.m4 (GLIBCXX_CHECK_SETRLIMIT_ancilliary): Print\n \tstatus messages.\n \t(GLIBCXX_CHECK_S_ISREG_OR_S_IFREG): Likewise."}, {"sha": "d66970220a410d0a2c8444adabdcb22165a7b2d0", "filename": "libstdc++-v3/acinclude.m4", "status": "modified", "additions": 10, "deletions": 12, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0646b0597b3e675c23938fae830dba69aefc6b33/libstdc%2B%2B-v3%2Facinclude.m4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0646b0597b3e675c23938fae830dba69aefc6b33/libstdc%2B%2B-v3%2Facinclude.m4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Facinclude.m4?ref=0646b0597b3e675c23938fae830dba69aefc6b33", "patch": "@@ -554,24 +554,22 @@ dnl Substs:\n dnl  baseline_dir\n dnl\n AC_DEFUN([GLIBCXX_CONFIGURE_TESTSUITE], [\n-  if $GLIBCXX_IS_NATIVE && test $is_hosted = yes && \n-\t\t\ttest $enable_symvers != no; then\n+  if $GLIBCXX_IS_NATIVE ; then\n     # Do checks for resource limit functions.\n     GLIBCXX_CHECK_SETRLIMIT\n \n     # Look for setenv, so that extended locale tests can be performed.\n     GLIBCXX_CHECK_STDLIB_DECL_AND_LINKAGE_3(setenv)\n+  fi\n \n-    if test $enable_symvers = no; then\n-      enable_abi_check=no\n-    else\n-      case \"$host\" in\n-        *-*-cygwin*)\n-          enable_abi_check=no ;;\n-        *)\n-          enable_abi_check=yes ;;\n-      esac\n-    fi\n+  if $GLIBCXX_IS_NATIVE && test $is_hosted = yes &&\n+     test $enable_symvers != no; then\n+    case \"$host\" in\n+      *-*-cygwin*)\n+        enable_abi_check=no ;;\n+      *)\n+        enable_abi_check=yes ;;\n+    esac\n   else\n     # Only build this as native, since automake does not understand\n     # CXX_FOR_BUILD."}, {"sha": "1a32ed4d2f793b70dd9fe157a5e51da94c0e6720", "filename": "libstdc++-v3/configure", "status": "modified", "additions": 29, "deletions": 14, "changes": 43, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0646b0597b3e675c23938fae830dba69aefc6b33/libstdc%2B%2B-v3%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0646b0597b3e675c23938fae830dba69aefc6b33/libstdc%2B%2B-v3%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfigure?ref=0646b0597b3e675c23938fae830dba69aefc6b33", "patch": "@@ -1542,7 +1542,24 @@ target_alias=${target_alias-$host_alias}\n if test \"$build\" != \"$host\"; then\n   # We are being configured with some form of cross compiler.\n   GLIBCXX_IS_NATIVE=false\n+  case \"$host\",\"$target\" in\n+    # Darwin crosses can use the host system's libraries and headers,\n+    # because of the fat library support.  Of course, it must be the\n+    # same version of Darwin on both sides.  Allow the user to\n+    # just say --target=foo-darwin without a version number to mean\n+    # \"the version on this system\".\n+      *-*-darwin*,*-*-darwin*)\n+\thostos=`echo $host | sed 's/.*-darwin/darwin/'`\n+\ttargetos=`echo $target | sed 's/.*-darwin/darwin/'`\n+\tif test $hostos = $targetos -o $targetos = darwin ; then\n+\t  GLIBCXX_IS_NATIVE=true\n+\tfi\n+\t;;\n+\n+      *)\n \n+\t;;\n+  esac\n else\n   GLIBCXX_IS_NATIVE=true\n fi\n@@ -4439,7 +4456,7 @@ test x\"$pic_mode\" = xno && libtool_flags=\"$libtool_flags --prefer-non-pic\"\n case $host in\n *-*-irix6*)\n   # Find out which ABI we are using.\n-  echo '#line 4442 \"configure\"' > conftest.$ac_ext\n+  echo '#line 4459 \"configure\"' > conftest.$ac_ext\n   if { (eval echo \"$as_me:$LINENO: \\\"$ac_compile\\\"\") >&5\n   (eval $ac_compile) 2>&5\n   ac_status=$?\n@@ -5059,7 +5076,7 @@ fi;\n     #\n     # Fake what AC_TRY_COMPILE does.  XXX Look at redoing this new-style.\n     cat > conftest.$ac_ext << EOF\n-#line 5062 \"configure\"\n+#line 5079 \"configure\"\n struct S { ~S(); };\n void bar();\n void foo()\n@@ -87579,8 +87596,7 @@ echo \"$as_me: versioning on shared library symbols is $enable_symvers\" >&6;}\n \n # This depends on GLIBCXX_ENABLE_SYMVERS and GLIBCXX_IS_NATIVE.\n \n-  if $GLIBCXX_IS_NATIVE && test $is_hosted = yes &&\n-\t\t\ttest $enable_symvers != no; then\n+  if $GLIBCXX_IS_NATIVE ; then\n     # Do checks for resource limit functions.\n \n   setrlimit_have_headers=yes\n@@ -88302,17 +88318,16 @@ done\n \n   fi\n \n+  fi\n \n-    if test $enable_symvers = no; then\n-      enable_abi_check=no\n-    else\n-      case \"$host\" in\n-        *-*-cygwin*)\n-          enable_abi_check=no ;;\n-        *)\n-          enable_abi_check=yes ;;\n-      esac\n-    fi\n+  if $GLIBCXX_IS_NATIVE && test $is_hosted = yes &&\n+     test $enable_symvers != no; then\n+    case \"$host\" in\n+      *-*-cygwin*)\n+        enable_abi_check=no ;;\n+      *)\n+        enable_abi_check=yes ;;\n+    esac\n   else\n     # Only build this as native, since automake does not understand\n     # CXX_FOR_BUILD."}, {"sha": "d350e6e99103f440c7615b9acc1d3d8f7da8ef95", "filename": "libstdc++-v3/configure.ac", "status": "modified", "additions": 18, "deletions": 1, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0646b0597b3e675c23938fae830dba69aefc6b33/libstdc%2B%2B-v3%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0646b0597b3e675c23938fae830dba69aefc6b33/libstdc%2B%2B-v3%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfigure.ac?ref=0646b0597b3e675c23938fae830dba69aefc6b33", "patch": "@@ -41,7 +41,24 @@ target_alias=${target_alias-$host_alias}\n if test \"$build\" != \"$host\"; then\n   # We are being configured with some form of cross compiler.\n   GLIBCXX_IS_NATIVE=false\n-  GCC_NO_EXECUTABLES\n+  case \"$host\",\"$target\" in\n+    # Darwin crosses can use the host system's libraries and headers,\n+    # because of the fat library support.  Of course, it must be the\n+    # same version of Darwin on both sides.  Allow the user to\n+    # just say --target=foo-darwin without a version number to mean\n+    # \"the version on this system\".\n+      *-*-darwin*,*-*-darwin*)\n+\thostos=`echo $host | sed 's/.*-darwin/darwin/'`\n+\ttargetos=`echo $target | sed 's/.*-darwin/darwin/'`\n+\tif test $hostos = $targetos -o $targetos = darwin ; then\n+\t  GLIBCXX_IS_NATIVE=true\n+\tfi\n+\t;;\n+\n+      *)\n+\tGCC_NO_EXECUTABLES\n+\t;;\n+  esac\n else\n   GLIBCXX_IS_NATIVE=true\n fi"}]}