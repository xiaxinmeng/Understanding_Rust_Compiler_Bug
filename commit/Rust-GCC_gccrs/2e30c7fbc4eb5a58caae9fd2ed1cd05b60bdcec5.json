{"sha": "2e30c7fbc4eb5a58caae9fd2ed1cd05b60bdcec5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmUzMGM3ZmJjNGViNWE1OGNhYWU5ZmQyZWQxY2QwNWI2MGJkY2VjNQ==", "commit": {"author": {"name": "Nick Clifton", "email": "nickc@redhat.com", "date": "2013-10-25T09:04:53Z"}, "committer": {"name": "Nick Clifton", "email": "nickc@gcc.gnu.org", "date": "2013-10-25T09:04:53Z"}, "message": "pr57793.c: Add expected error messages for targets with small integers.\n\n\t* c-c++-common/pr57793.c: Add expected error messages for\n\ttargets with small integers.\n\t* gcc.dg/c99-stdint-1.c: Only run on 32-bit plus targets.\n\t* gcc.dg/c99-stdint-2.c: Likewise.\n\t* gcc.dg/cdce1.c: Likewise.\n\t* gcc.dg/fold-overflow-1.c: Likewise.\n\t* gcc.dg/utf-cvt.c: Likewise.\n\t* gcc.dg/ftrapv-1.c: Only run on targets that support trapping\n\tarithmetic.\n\t* gcc.dg/ftrapv-2.c: Likewise.\n\t* gcc.dg/pr30286.c: Likewise.\n\t* gcc.dg/pr19340.c: Only run on targets that support\n\tscheduling.\n\t* lib/target-supports.exp (check_effective_target_trapping): New\n\tproc.  Returns true if the target supports trapping arithmetic.\n\nFrom-SVN: r204053", "tree": {"sha": "cc6bd7d67e025ac615ac9f9b036f48b5556d86fe", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/cc6bd7d67e025ac615ac9f9b036f48b5556d86fe"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2e30c7fbc4eb5a58caae9fd2ed1cd05b60bdcec5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2e30c7fbc4eb5a58caae9fd2ed1cd05b60bdcec5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2e30c7fbc4eb5a58caae9fd2ed1cd05b60bdcec5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2e30c7fbc4eb5a58caae9fd2ed1cd05b60bdcec5/comments", "author": {"login": "nickclifton", "id": 31441682, "node_id": "MDQ6VXNlcjMxNDQxNjgy", "avatar_url": "https://avatars.githubusercontent.com/u/31441682?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nickclifton", "html_url": "https://github.com/nickclifton", "followers_url": "https://api.github.com/users/nickclifton/followers", "following_url": "https://api.github.com/users/nickclifton/following{/other_user}", "gists_url": "https://api.github.com/users/nickclifton/gists{/gist_id}", "starred_url": "https://api.github.com/users/nickclifton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nickclifton/subscriptions", "organizations_url": "https://api.github.com/users/nickclifton/orgs", "repos_url": "https://api.github.com/users/nickclifton/repos", "events_url": "https://api.github.com/users/nickclifton/events{/privacy}", "received_events_url": "https://api.github.com/users/nickclifton/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "e86a8146c74c2f1642a7a2b27033fe900e4129ad", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e86a8146c74c2f1642a7a2b27033fe900e4129ad", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e86a8146c74c2f1642a7a2b27033fe900e4129ad"}], "stats": {"total": 47, "additions": 39, "deletions": 8}, "files": [{"sha": "3b99bfb90cca764c5c81e5a567529389d7bec7f1", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2e30c7fbc4eb5a58caae9fd2ed1cd05b60bdcec5/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2e30c7fbc4eb5a58caae9fd2ed1cd05b60bdcec5/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=2e30c7fbc4eb5a58caae9fd2ed1cd05b60bdcec5", "patch": "@@ -1,3 +1,21 @@\n+2013-10-24  Nick Clifton  <nickc@redhat.com>\n+\n+\t* c-c++-common/pr57793.c: Add expected error messages for\n+\ttargets with small integers.\n+\t* gcc.dg/c99-stdint-1.c: Only run on 32-bit plus targets.\n+\t* gcc.dg/c99-stdint-2.c: Likewise.\n+\t* gcc.dg/cdce1.c: Likewise.\n+\t* gcc.dg/fold-overflow-1.c: Likewise.\n+\t* gcc.dg/utf-cvt.c: Likewise.\n+\t* gcc.dg/ftrapv-1.c: Only run on targets that support trapping\n+\tarithmetic.\n+\t* gcc.dg/ftrapv-2.c: Likewise.\n+\t* gcc.dg/pr30286.c: Likewise.\n+\t* gcc.dg/pr19340.c: Only run on targets that support\n+\tscheduling.\n+\t* lib/target-supports.exp (check_effective_target_trapping): New\n+\tproc.  Returns true if the target supports trapping arithmetic.\n+\n 2013-10-25  Tobias Burnus  <burnus@net-b.de>\n \n \t* g++.dg/parse/ivdep.C: New."}, {"sha": "f2719529ebb2feb7b0c06c1c28f17bf17703c254", "filename": "gcc/testsuite/c-c++-common/pr57793.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2e30c7fbc4eb5a58caae9fd2ed1cd05b60bdcec5/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fpr57793.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2e30c7fbc4eb5a58caae9fd2ed1cd05b60bdcec5/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fpr57793.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fpr57793.c?ref=2e30c7fbc4eb5a58caae9fd2ed1cd05b60bdcec5", "patch": "@@ -3,8 +3,8 @@\n struct A { unsigned a : 1; unsigned b : 1; };\n struct B     /* { dg-error \"type .B. is too large\" \"\" { target { c++ && ilp32 } } } */\n {\n-  unsigned char c[0x40000000];\n-  unsigned char d[0x40000ff0];\n+  unsigned char c[0x40000000]; /* { dg-error \"size of array .c. is too large\" \"\" { target { ! int32plus } } } */\n+  unsigned char d[0x40000ff0];/* { dg-error \"size of array .d. is too large\" \"\" { target { ! int32plus } } } */\n   struct A e;\n }; /* { dg-error \"type .struct B. is too large\" \"\" { target { c && ilp32 } } } */\n "}, {"sha": "530d13025e7998f7fc417a536d8f89ef23ad1bea", "filename": "gcc/testsuite/gcc.dg/c99-stdint-1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2e30c7fbc4eb5a58caae9fd2ed1cd05b60bdcec5/gcc%2Ftestsuite%2Fgcc.dg%2Fc99-stdint-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2e30c7fbc4eb5a58caae9fd2ed1cd05b60bdcec5/gcc%2Ftestsuite%2Fgcc.dg%2Fc99-stdint-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fc99-stdint-1.c?ref=2e30c7fbc4eb5a58caae9fd2ed1cd05b60bdcec5", "patch": "@@ -9,6 +9,7 @@\n    version).  */\n /* { dg-do compile } */\n /* { dg-options \"-std=iso9899:1999 -pedantic-errors -fhosted\" } */\n+/* { dg-require-effective-target ptr32plus } */\n \n #include <limits.h>\n #include <stdint.h>\n@@ -214,7 +215,6 @@ test_max (void)\n void\n test_misc_limits (void)\n {\n-/* { dg-bogus  \"size\" \"ptrdiff is 16bits\" { xfail avr-*-* } 56 } */\n   CHECK_SIGNED_LIMITS_2(__PTRDIFF_TYPE__, PTRDIFF_MIN, PTRDIFF_MAX, -65535L, 65535L);\n #ifndef SIGNAL_SUPPRESS\n   CHECK_LIMITS_2(sig_atomic_t, SIG_ATOMIC_MIN, SIG_ATOMIC_MAX, -127, 127, 255);"}, {"sha": "1784b0c413e20348844dc3e73ef8cd9cba17b560", "filename": "gcc/testsuite/gcc.dg/c99-stdint-2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2e30c7fbc4eb5a58caae9fd2ed1cd05b60bdcec5/gcc%2Ftestsuite%2Fgcc.dg%2Fc99-stdint-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2e30c7fbc4eb5a58caae9fd2ed1cd05b60bdcec5/gcc%2Ftestsuite%2Fgcc.dg%2Fc99-stdint-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fc99-stdint-2.c?ref=2e30c7fbc4eb5a58caae9fd2ed1cd05b60bdcec5", "patch": "@@ -2,7 +2,7 @@\n    Freestanding version.  */\n /* { dg-do compile } */\n /* { dg-options \"-std=iso9899:1999 -pedantic-errors -ffreestanding\" } */\n-/* { dg-xfail-if \"ptrdiff size is 16bits\" { avr-*-* } } */\n+/* { dg-require-effective-target ptr32plus } */\n /* The test is that there are no diagnostics, so just include the\n    hosted version.  */\n #include \"c99-stdint-1.c\""}, {"sha": "2123f7fd8e9c0b68ae3fa753b8c4c3086affdfca", "filename": "gcc/testsuite/gcc.dg/cdce1.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2e30c7fbc4eb5a58caae9fd2ed1cd05b60bdcec5/gcc%2Ftestsuite%2Fgcc.dg%2Fcdce1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2e30c7fbc4eb5a58caae9fd2ed1cd05b60bdcec5/gcc%2Ftestsuite%2Fgcc.dg%2Fcdce1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fcdce1.c?ref=2e30c7fbc4eb5a58caae9fd2ed1cd05b60bdcec5", "patch": "@@ -1,6 +1,7 @@\n /* { dg-do  run  } */\n /* { dg-options \"-O2 -fmath-errno -fdump-tree-cdce-details  -lm\" } */\n-/* { dg-final { scan-tree-dump  \"cdce1.c:16: note: function call is shrink-wrapped into error conditions\\.\"  \"cdce\" } } */\n+/* { dg-require-effective-target int32plus } */\n+/* { dg-final { scan-tree-dump  \"cdce1.c:17: note: function call is shrink-wrapped into error conditions\\.\"  \"cdce\" } } */\n /* { dg-final { cleanup-tree-dump \"cdce\" } } */\n /* { dg-require-effective-target large_double } */\n "}, {"sha": "4f45b35ee45da04548be36375025844960846a4e", "filename": "gcc/testsuite/gcc.dg/fold-overflow-1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2e30c7fbc4eb5a58caae9fd2ed1cd05b60bdcec5/gcc%2Ftestsuite%2Fgcc.dg%2Ffold-overflow-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2e30c7fbc4eb5a58caae9fd2ed1cd05b60bdcec5/gcc%2Ftestsuite%2Fgcc.dg%2Ffold-overflow-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ffold-overflow-1.c?ref=2e30c7fbc4eb5a58caae9fd2ed1cd05b60bdcec5", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do compile } */\n-/* { dg-skip-if \"consts are shorts, not longs\" { \"m32c-*-*\" \"avr-*-*\" } { \"*\" } { \"\" } } */\n+/* { dg-require-effective-target int32plus } */\n /* { dg-skip-if \"No Inf support\" { spu-*-* } } */\n /* { dg-options \"-O -ftrapping-math\" } */\n "}, {"sha": "86bd802cf13eb30477b32e16eb06b52a08766ed2", "filename": "gcc/testsuite/gcc.dg/ftrapv-1.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2e30c7fbc4eb5a58caae9fd2ed1cd05b60bdcec5/gcc%2Ftestsuite%2Fgcc.dg%2Fftrapv-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2e30c7fbc4eb5a58caae9fd2ed1cd05b60bdcec5/gcc%2Ftestsuite%2Fgcc.dg%2Fftrapv-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fftrapv-1.c?ref=2e30c7fbc4eb5a58caae9fd2ed1cd05b60bdcec5", "patch": "@@ -7,6 +7,7 @@\n \n /* { dg-do run } */\n /* { dg-options \"-ftrapv\" } */\n+/* { dg-require-effective-target trapping } */\n \n __attribute__((noinline)) int\n mulv(int a, int b)"}, {"sha": "7d765747c9c3d0b34d136a863c4f7a19e2c85a1a", "filename": "gcc/testsuite/gcc.dg/ftrapv-2.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2e30c7fbc4eb5a58caae9fd2ed1cd05b60bdcec5/gcc%2Ftestsuite%2Fgcc.dg%2Fftrapv-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2e30c7fbc4eb5a58caae9fd2ed1cd05b60bdcec5/gcc%2Ftestsuite%2Fgcc.dg%2Fftrapv-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fftrapv-2.c?ref=2e30c7fbc4eb5a58caae9fd2ed1cd05b60bdcec5", "patch": "@@ -8,6 +8,7 @@\n \n /* { dg-do run } */\n /* { dg-options \"-ftrapv\" } */\n+/* { dg-require-effective-target trapping } */\n \n extern void abort(void);\n extern long labs(long);"}, {"sha": "c75d35d1d01a8755bca00133932f87a7c1707424", "filename": "gcc/testsuite/gcc.dg/pr19340.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2e30c7fbc4eb5a58caae9fd2ed1cd05b60bdcec5/gcc%2Ftestsuite%2Fgcc.dg%2Fpr19340.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2e30c7fbc4eb5a58caae9fd2ed1cd05b60bdcec5/gcc%2Ftestsuite%2Fgcc.dg%2Fpr19340.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr19340.c?ref=2e30c7fbc4eb5a58caae9fd2ed1cd05b60bdcec5", "patch": "@@ -1,6 +1,6 @@\n /* { dg-do compile } */\n /* { dg-options \"-O1 -fschedule-insns2 -fsched2-use-superblocks\" } */\n-/* { dg-skip-if \"No scheduling\" { mmix-*-* cris-*-* crisv32-*-* fido-*-* m68k-*-* m32c-*-* avr-*-* moxie-*-* } { \"*\" } { \"\" } } */\n+/* { dg-require-effective-target scheduling } */\n \n extern double f (double x);\n "}, {"sha": "d35eacd807a9b2246bb06756ae7541cb808b404b", "filename": "gcc/testsuite/gcc.dg/pr30286.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2e30c7fbc4eb5a58caae9fd2ed1cd05b60bdcec5/gcc%2Ftestsuite%2Fgcc.dg%2Fpr30286.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2e30c7fbc4eb5a58caae9fd2ed1cd05b60bdcec5/gcc%2Ftestsuite%2Fgcc.dg%2Fpr30286.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr30286.c?ref=2e30c7fbc4eb5a58caae9fd2ed1cd05b60bdcec5", "patch": "@@ -1,6 +1,7 @@\n /* PR middle-end/30286 */\n /* { dg-do run } */\n /* { dg-options \"-O2 -ftrapv\" } */\n+/* { dg-require-effective-target trapping } */\n \n extern void abort (void);\n struct S { struct S *s; };"}, {"sha": "6b22e9d78e986870ed11270a1f026bb0ab8b21ac", "filename": "gcc/testsuite/gcc.dg/pr38364.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2e30c7fbc4eb5a58caae9fd2ed1cd05b60bdcec5/gcc%2Ftestsuite%2Fgcc.dg%2Fpr38364.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2e30c7fbc4eb5a58caae9fd2ed1cd05b60bdcec5/gcc%2Ftestsuite%2Fgcc.dg%2Fpr38364.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr38364.c?ref=2e30c7fbc4eb5a58caae9fd2ed1cd05b60bdcec5", "patch": "@@ -1,6 +1,7 @@\n /* PR middle-end/38364 */\n /* { dg-do run } */\n /* { dg-options \"-O2 -ftrapv\" } */\n+/* { dg-require-effective-target trapping } */\n \n extern void abort (void);\n "}, {"sha": "d6f18eeade72d5595d01387e5b8cb7176dd15203", "filename": "gcc/testsuite/gcc.dg/utf-cvt.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2e30c7fbc4eb5a58caae9fd2ed1cd05b60bdcec5/gcc%2Ftestsuite%2Fgcc.dg%2Futf-cvt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2e30c7fbc4eb5a58caae9fd2ed1cd05b60bdcec5/gcc%2Ftestsuite%2Fgcc.dg%2Futf-cvt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Futf-cvt.c?ref=2e30c7fbc4eb5a58caae9fd2ed1cd05b60bdcec5", "patch": "@@ -1,7 +1,7 @@\n /* Contributed by Kris Van Hees <kris.van.hees@oracle.com> */\n /* Test the char16_t and char32_t promotion rules. */\n /* { dg-do compile } */\n-/* { dg-excess-errors \"short and int are 16bit\" { target { \"avr-*-*\" } } } */\n+/* { dg-require-effective-target int32plus } */\n /* { dg-options \"-std=gnu99 -Wall -Wconversion -Wsign-conversion\" } */\n \n typedef __CHAR16_TYPE__ char16_t;"}, {"sha": "5ca0b76d5fc187c391b3724fc5f36c679a12af1a", "filename": "gcc/testsuite/lib/target-supports.exp", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2e30c7fbc4eb5a58caae9fd2ed1cd05b60bdcec5/gcc%2Ftestsuite%2Flib%2Ftarget-supports.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2e30c7fbc4eb5a58caae9fd2ed1cd05b60bdcec5/gcc%2Ftestsuite%2Flib%2Ftarget-supports.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Flib%2Ftarget-supports.exp?ref=2e30c7fbc4eb5a58caae9fd2ed1cd05b60bdcec5", "patch": "@@ -701,6 +701,14 @@ proc check_effective_target_scheduling {} {\n     } \"-fschedule-insns\"]\n }\n \n+# Return 1 if trapping arithmetic is available, 0 otherwise.\n+\n+proc check_effective_target_trapping {} {\n+    return [check_no_compiler_messages scheduling object {\n+        add (int a, int b) { return a + b; }\n+    } \"-ftrapv\"]\n+}\n+\n # Return 1 if compilation with -fgraphite is error-free for trivial \n # code, 0 otherwise.\n "}]}