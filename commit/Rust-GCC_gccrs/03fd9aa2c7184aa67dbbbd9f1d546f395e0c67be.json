{"sha": "03fd9aa2c7184aa67dbbbd9f1d546f395e0c67be", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDNmZDlhYTJjNzE4NGFhNjdkYmJiZDlmMWQ1NDZmMzk1ZTBjNjdiZQ==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2005-06-26T05:20:30Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2005-06-26T05:20:30Z"}, "message": "regrename.c (copy_value): Don't replace fixed or global regs with older regs.\n\n\t* regrename.c (copy_value): Don't replace fixed or global\n\tregs with older regs.\n\nFrom-SVN: r101330", "tree": {"sha": "d6a8888b030865f9765f3c891a74c2ae292e474b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d6a8888b030865f9765f3c891a74c2ae292e474b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/03fd9aa2c7184aa67dbbbd9f1d546f395e0c67be", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/03fd9aa2c7184aa67dbbbd9f1d546f395e0c67be", "html_url": "https://github.com/Rust-GCC/gccrs/commit/03fd9aa2c7184aa67dbbbd9f1d546f395e0c67be", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/03fd9aa2c7184aa67dbbbd9f1d546f395e0c67be/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "f62c8a5c7996b97c736e3242de0d5527ec299a34", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f62c8a5c7996b97c736e3242de0d5527ec299a34", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f62c8a5c7996b97c736e3242de0d5527ec299a34"}], "stats": {"total": 7, "additions": 7, "deletions": 0}, "files": [{"sha": "aaccb6efe1ebb166574bf36fc7175baae624fd10", "filename": "gcc/ChangeLog", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/03fd9aa2c7184aa67dbbbd9f1d546f395e0c67be/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/03fd9aa2c7184aa67dbbbd9f1d546f395e0c67be/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=03fd9aa2c7184aa67dbbbd9f1d546f395e0c67be", "patch": "@@ -1,5 +1,8 @@\n 2005-06-26  Jakub Jelinek  <jakub@redhat.com>\n \n+\t* regrename.c (copy_value): Don't replace fixed or global\n+\tregs with older regs.\n+\n \t* defaults.h (FRAME_GROWS_DOWNWARD): Define to 0 if not defined.\n \t* function.c (get_func_frame_size): Use if (FRAME_GROWS_DOWNWARD)\n \tinstead of preprocessor conditionals."}, {"sha": "91e9d71a9a1391f8bb8644843d3c7072fecc1bf6", "filename": "gcc/regrename.c", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/03fd9aa2c7184aa67dbbbd9f1d546f395e0c67be/gcc%2Fregrename.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/03fd9aa2c7184aa67dbbbd9f1d546f395e0c67be/gcc%2Fregrename.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fregrename.c?ref=03fd9aa2c7184aa67dbbbd9f1d546f395e0c67be", "patch": "@@ -1225,6 +1225,10 @@ copy_value (rtx dest, rtx src, struct value_data *vd)\n   if (frame_pointer_needed && dr == HARD_FRAME_POINTER_REGNUM)\n     return;\n \n+  /* Likewise for fixed or global registers.  */\n+  if (fixed_regs[dr] || global_regs[dr])\n+    return;\n+\n   /* If SRC and DEST overlap, don't record anything.  */\n   dn = hard_regno_nregs[dr][GET_MODE (dest)];\n   sn = hard_regno_nregs[sr][GET_MODE (dest)];"}]}