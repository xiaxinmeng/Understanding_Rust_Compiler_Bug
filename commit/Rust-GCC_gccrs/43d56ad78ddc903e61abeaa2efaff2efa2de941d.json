{"sha": "43d56ad78ddc903e61abeaa2efaff2efa2de941d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDNkNTZhZDc4ZGRjOTAzZTYxYWJlYWEyZWZhZmYyZWZhMmRlOTQxZA==", "commit": {"author": {"name": "Thomas Preud'homme", "email": "thomas.preudhomme@arm.com", "date": "2015-08-04T02:11:58Z"}, "committer": {"name": "Thomas Preud'homme", "email": "thopre01@gcc.gnu.org", "date": "2015-08-04T02:11:58Z"}, "message": "re PR debug/67043 (-fcompare-debug failure with -O3)\n\n2015-08-04  Thomas Preud'homme  <thomas.preudhomme@arm.com>\n\n    gcc/\n    PR tree-optimization/67043\n    * loop-invariant.c (move_invariant_reg): Recompute luids in loop\n    preheader after hoisting invariant in it.\n    (find_defs): Force recomputation of all luids.\n\n    gcc/testsuite/\n    PR tree-optimization/67043\n    * gcc.dg/pr67043.c: New test.\n\nFrom-SVN: r226540", "tree": {"sha": "4665f4d18b1ff681b729f8e6332f6317ef394f2d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4665f4d18b1ff681b729f8e6332f6317ef394f2d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/43d56ad78ddc903e61abeaa2efaff2efa2de941d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/43d56ad78ddc903e61abeaa2efaff2efa2de941d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/43d56ad78ddc903e61abeaa2efaff2efa2de941d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/43d56ad78ddc903e61abeaa2efaff2efa2de941d/comments", "author": {"login": "RoboTux", "id": 272327, "node_id": "MDQ6VXNlcjI3MjMyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/272327?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RoboTux", "html_url": "https://github.com/RoboTux", "followers_url": "https://api.github.com/users/RoboTux/followers", "following_url": "https://api.github.com/users/RoboTux/following{/other_user}", "gists_url": "https://api.github.com/users/RoboTux/gists{/gist_id}", "starred_url": "https://api.github.com/users/RoboTux/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RoboTux/subscriptions", "organizations_url": "https://api.github.com/users/RoboTux/orgs", "repos_url": "https://api.github.com/users/RoboTux/repos", "events_url": "https://api.github.com/users/RoboTux/events{/privacy}", "received_events_url": "https://api.github.com/users/RoboTux/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "9ebddeb045135d827eb59bfa822a0b026ea39f04", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9ebddeb045135d827eb59bfa822a0b026ea39f04", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9ebddeb045135d827eb59bfa822a0b026ea39f04"}], "stats": {"total": 47, "additions": 47, "deletions": 0}, "files": [{"sha": "acb75e80ae0c03debe4fef608ea52c1b8b32fb35", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/43d56ad78ddc903e61abeaa2efaff2efa2de941d/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/43d56ad78ddc903e61abeaa2efaff2efa2de941d/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=43d56ad78ddc903e61abeaa2efaff2efa2de941d", "patch": "@@ -1,3 +1,10 @@\n+2015-08-04  Thomas Preud'homme  <thomas.preudhomme@arm.com>\n+\n+\tPR tree-optimization/67043\n+\t* loop-invariant.c (move_invariant_reg): Recompute luids in loop\n+\tpreheader after hoisting invariant in it.\n+\t(find_defs): Force recomputation of all luids.\n+\n 2015-08-03  Peter Bergner  <bergner@vnet.ibm.com>\n \n \t* config/rs6000/htm.md (tabort.): Restrict the source operand to"}, {"sha": "52c8ae857c16b04efd28bf32e1219fce007634bd", "filename": "gcc/loop-invariant.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/43d56ad78ddc903e61abeaa2efaff2efa2de941d/gcc%2Floop-invariant.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/43d56ad78ddc903e61abeaa2efaff2efa2de941d/gcc%2Floop-invariant.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Floop-invariant.c?ref=43d56ad78ddc903e61abeaa2efaff2efa2de941d", "patch": "@@ -676,6 +676,8 @@ find_defs (struct loop *loop)\n   df_remove_problem (df_chain);\n   df_process_deferred_rescans ();\n   df_chain_add_problem (DF_UD_CHAIN);\n+  df_live_add_problem ();\n+  df_live_set_all_dirty ();\n   df_set_flags (DF_RD_PRUNE_DEAD_DEFS);\n   df_analyze_loop (loop);\n   check_invariant_table_size ();\n@@ -1629,6 +1631,7 @@ move_invariant_reg (struct loop *loop, unsigned invno)\n \tfprintf (dump_file, \"Invariant %d moved without introducing a new \"\n \t\t\t    \"temporary register\\n\", invno);\n       reorder_insns (inv->insn, inv->insn, BB_END (preheader));\n+      df_recompute_luids (preheader);\n \n       /* If there is a REG_EQUAL note on the insn we just moved, and the\n \t insn is in a basic block that is not always executed or the note"}, {"sha": "ae404d3040936821470a8e9517dd78b0050d4f6d", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/43d56ad78ddc903e61abeaa2efaff2efa2de941d/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/43d56ad78ddc903e61abeaa2efaff2efa2de941d/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=43d56ad78ddc903e61abeaa2efaff2efa2de941d", "patch": "@@ -1,3 +1,8 @@\n+2015-08-04  Thomas Preud'homme  <thomas.preudhomme@arm.com>\n+\n+\tPR tree-optimization/67043\n+\t* gcc.dg/pr67043.c: New test.\n+\n 2015-08-03  Peter Bergner  <bergner@vnet.ibm.com>\n \n \t* gcc.target/powerpc/htm-tabort-no-r0.c: New test."}, {"sha": "36aa68673f15ef1e768830ec1ce98fe7f0da0713", "filename": "gcc/testsuite/gcc.dg/pr67043.c", "status": "added", "additions": 32, "deletions": 0, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/43d56ad78ddc903e61abeaa2efaff2efa2de941d/gcc%2Ftestsuite%2Fgcc.dg%2Fpr67043.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/43d56ad78ddc903e61abeaa2efaff2efa2de941d/gcc%2Ftestsuite%2Fgcc.dg%2Fpr67043.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr67043.c?ref=43d56ad78ddc903e61abeaa2efaff2efa2de941d", "patch": "@@ -0,0 +1,32 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O3 -fcompare-debug -w\" } */\n+\n+extern void rt_mutex_owner (void);\n+extern void rt_mutex_deadlock_account_lock (int);\n+extern void signal_pending (void);\n+__typeof__ (int *) a;\n+int b;\n+\n+int\n+try_to_take_rt_mutex (int p1) {\n+  rt_mutex_owner ();\n+  if (b)\n+    return 0;\n+  rt_mutex_deadlock_account_lock (p1);\n+  return 1;\n+}\n+\n+void\n+__rt_mutex_slowlock (int p1) {\n+  int c;\n+  for (;;) {\n+    c = ({\n+      asm (\"\" : \"=r\"(a));\n+      a;\n+    });\n+    if (try_to_take_rt_mutex (c))\n+      break;\n+    if (__builtin_expect (p1 == 0, 0))\n+      signal_pending ();\n+  }\n+}"}]}