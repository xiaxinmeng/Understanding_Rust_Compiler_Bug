{"sha": "0df28e68fd126d9c3356a3d314be383a877b74a7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MGRmMjhlNjhmZDEyNmQ5YzMzNTZhM2QzMTRiZTM4M2E4NzdiNzRhNw==", "commit": {"author": {"name": "Richard Sandiford", "email": "richard.sandiford@arm.com", "date": "2020-02-20T15:04:19Z"}, "committer": {"name": "Richard Sandiford", "email": "richard.sandiford@arm.com", "date": "2020-02-21T10:17:28Z"}, "message": "aarch64: Avoid creating an unused register\n\nThe rsqrt path of aarch64_emit_approx_sqrt created a pseudo\nregister that it never used.\n\n2020-02-21  Richard Sandiford  <richard.sandiford@arm.com>\n\ngcc/\n\t* config/aarch64/aarch64.c (aarch64_emit_approx_sqrt): Don't create\n\tan unused xmsk register when handling approximate rsqrt.", "tree": {"sha": "c34f82a0c9311ff9fbffcbcbff73c610182135a2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c34f82a0c9311ff9fbffcbcbff73c610182135a2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0df28e68fd126d9c3356a3d314be383a877b74a7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0df28e68fd126d9c3356a3d314be383a877b74a7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0df28e68fd126d9c3356a3d314be383a877b74a7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0df28e68fd126d9c3356a3d314be383a877b74a7/comments", "author": {"login": "rsandifo-arm", "id": 28043039, "node_id": "MDQ6VXNlcjI4MDQzMDM5", "avatar_url": "https://avatars.githubusercontent.com/u/28043039?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rsandifo-arm", "html_url": "https://github.com/rsandifo-arm", "followers_url": "https://api.github.com/users/rsandifo-arm/followers", "following_url": "https://api.github.com/users/rsandifo-arm/following{/other_user}", "gists_url": "https://api.github.com/users/rsandifo-arm/gists{/gist_id}", "starred_url": "https://api.github.com/users/rsandifo-arm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rsandifo-arm/subscriptions", "organizations_url": "https://api.github.com/users/rsandifo-arm/orgs", "repos_url": "https://api.github.com/users/rsandifo-arm/repos", "events_url": "https://api.github.com/users/rsandifo-arm/events{/privacy}", "received_events_url": "https://api.github.com/users/rsandifo-arm/received_events", "type": "User", "site_admin": false}, "committer": {"login": "rsandifo-arm", "id": 28043039, "node_id": "MDQ6VXNlcjI4MDQzMDM5", "avatar_url": "https://avatars.githubusercontent.com/u/28043039?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rsandifo-arm", "html_url": "https://github.com/rsandifo-arm", "followers_url": "https://api.github.com/users/rsandifo-arm/followers", "following_url": "https://api.github.com/users/rsandifo-arm/following{/other_user}", "gists_url": "https://api.github.com/users/rsandifo-arm/gists{/gist_id}", "starred_url": "https://api.github.com/users/rsandifo-arm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rsandifo-arm/subscriptions", "organizations_url": "https://api.github.com/users/rsandifo-arm/orgs", "repos_url": "https://api.github.com/users/rsandifo-arm/repos", "events_url": "https://api.github.com/users/rsandifo-arm/events{/privacy}", "received_events_url": "https://api.github.com/users/rsandifo-arm/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "902d28bd838c4d3f9d28832d387812da2232e1ec", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/902d28bd838c4d3f9d28832d387812da2232e1ec", "html_url": "https://github.com/Rust-GCC/gccrs/commit/902d28bd838c4d3f9d28832d387812da2232e1ec"}], "stats": {"total": 22, "additions": 15, "deletions": 7}, "files": [{"sha": "8241af4fbef997893b751437a82bd8cb73500432", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0df28e68fd126d9c3356a3d314be383a877b74a7/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0df28e68fd126d9c3356a3d314be383a877b74a7/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=0df28e68fd126d9c3356a3d314be383a877b74a7", "patch": "@@ -1,3 +1,8 @@\n+2020-02-21  Richard Sandiford  <richard.sandiford@arm.com>\n+\n+\t* config/aarch64/aarch64.c (aarch64_emit_approx_sqrt): Don't create\n+\tan unused xmsk register when handling approximate rsqrt.\n+\n 2020-02-21  Richard Sandiford  <richard.sandiford@arm.com>\n \n \t* config/aarch64/aarch64.c (aarch64_emit_approx_sqrt): Fix inverted"}, {"sha": "0acaa06b91c47095cb355ab6212eaacf27e780d8", "filename": "gcc/config/aarch64/aarch64.c", "status": "modified", "additions": 10, "deletions": 7, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0df28e68fd126d9c3356a3d314be383a877b74a7/gcc%2Fconfig%2Faarch64%2Faarch64.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0df28e68fd126d9c3356a3d314be383a877b74a7/gcc%2Fconfig%2Faarch64%2Faarch64.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Faarch64.c?ref=0df28e68fd126d9c3356a3d314be383a877b74a7", "patch": "@@ -12774,14 +12774,17 @@ aarch64_emit_approx_sqrt (rtx dst, rtx src, bool recp)\n   machine_mode mmsk = (VECTOR_MODE_P (mode)\n \t\t       ? related_int_vector_mode (mode).require ()\n \t\t       : int_mode_for_mode (mode).require ());\n-  rtx xmsk = gen_reg_rtx (mmsk);\n+  rtx xmsk = NULL_RTX;\n   if (!recp)\n-    /* When calculating the approximate square root, compare the\n-       argument with 0.0 and create a mask.  */\n-    emit_insn (gen_rtx_SET (xmsk,\n-\t\t\t    gen_rtx_NEG (mmsk,\n-\t\t\t\t\t gen_rtx_EQ (mmsk, src,\n-\t\t\t\t\t\t     CONST0_RTX (mode)))));\n+    {\n+      /* When calculating the approximate square root, compare the\n+\t argument with 0.0 and create a mask.  */\n+      xmsk = gen_reg_rtx (mmsk);\n+      emit_insn (gen_rtx_SET (xmsk,\n+\t\t\t      gen_rtx_NEG (mmsk,\n+\t\t\t\t\t   gen_rtx_EQ (mmsk, src,\n+\t\t\t\t\t\t       CONST0_RTX (mode)))));\n+    }\n \n   /* Estimate the approximate reciprocal square root.  */\n   rtx xdst = gen_reg_rtx (mode);"}]}