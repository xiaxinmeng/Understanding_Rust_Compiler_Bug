{"sha": "a8cacfd2a5ab2e7bd20e1360fd4a354288576e7a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YThjYWNmZDJhNWFiMmU3YmQyMGUxMzYwZmQ0YTM1NDI4ODU3NmU3YQ==", "commit": {"author": {"name": "Bob Wilson", "email": "bob.wilson@acm.org", "date": "2002-03-22T22:57:53Z"}, "committer": {"name": "Bob Wilson", "email": "bwilson@gcc.gnu.org", "date": "2002-03-22T22:57:53Z"}, "message": "xtensa-protos.h (non_acc_reg_operand): Remove.\n\n\t* config/xtensa/xtensa-protos.h (non_acc_reg_operand): Remove.\n\t(xtensa_valid_move, xtensa_preferred_reload_class): Define.\n\t* config/xtensa/xtensa.c (non_acc_reg_operand): Remove.\n\t(xtensa_valid_move, xtensa_preferred_reload_class): Define to\n\tprevent use of sp as a reload register.\n\t(xtensa_emit_move_sequence): Use xtensa_valid_move instead of\n\tnon_acc_reg_operand.\n\t* config/xtensa/xtensa.h (PREDICATE_CODES): Remove non_acc_reg_operand.\n\t(PREFERRED_RELOAD_CLASS): Move code to xtensa_preferred_reload_class.\n\t* config/xtensa/xtensa.md (movsi_internal, movhi_internal,\n\tmovqi_internal): Use xtensa_valid_move instead of non_acc_reg_operand.\n\nFrom-SVN: r51201", "tree": {"sha": "2573972ec9c1fb508000f7cb300e0c82c4d6a10f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2573972ec9c1fb508000f7cb300e0c82c4d6a10f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a8cacfd2a5ab2e7bd20e1360fd4a354288576e7a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a8cacfd2a5ab2e7bd20e1360fd4a354288576e7a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a8cacfd2a5ab2e7bd20e1360fd4a354288576e7a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a8cacfd2a5ab2e7bd20e1360fd4a354288576e7a/comments", "author": null, "committer": null, "parents": [{"sha": "41c643948c237b94330e47ff9f860206ebb816c2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/41c643948c237b94330e47ff9f860206ebb816c2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/41c643948c237b94330e47ff9f860206ebb816c2"}], "stats": {"total": 81, "additions": 62, "deletions": 19}, "files": [{"sha": "1616ef618f74b62449e04d1ad612d747cd689ee3", "filename": "gcc/ChangeLog", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a8cacfd2a5ab2e7bd20e1360fd4a354288576e7a/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a8cacfd2a5ab2e7bd20e1360fd4a354288576e7a/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=a8cacfd2a5ab2e7bd20e1360fd4a354288576e7a", "patch": "@@ -1,3 +1,17 @@\n+2002-03-22  Bob Wilson  <bob.wilson@acm.org>\n+\n+\t* config/xtensa/xtensa-protos.h (non_acc_reg_operand): Remove.\n+\t(xtensa_valid_move, xtensa_preferred_reload_class): Define.\n+\t* config/xtensa/xtensa.c (non_acc_reg_operand): Remove.\n+\t(xtensa_valid_move, xtensa_preferred_reload_class): Define to\n+\tprevent use of sp as a reload register.\n+\t(xtensa_emit_move_sequence): Use xtensa_valid_move instead of\n+\tnon_acc_reg_operand.\n+\t* config/xtensa/xtensa.h (PREDICATE_CODES): Remove non_acc_reg_operand.\n+\t(PREFERRED_RELOAD_CLASS): Move code to xtensa_preferred_reload_class.\n+\t* config/xtensa/xtensa.md (movsi_internal, movhi_internal,\n+\tmovqi_internal): Use xtensa_valid_move instead of non_acc_reg_operand.\n+\n 2002-03-22  Neil Booth  <neil@daikokuya.demon.co.uk>\n \n         * cpphash.h (struct cpp_reader): Remove mls_line and mls_col."}, {"sha": "76cf73cb338ee5a06216fbdb9b651e74c5d98e6f", "filename": "gcc/config/xtensa/xtensa-protos.h", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a8cacfd2a5ab2e7bd20e1360fd4a354288576e7a/gcc%2Fconfig%2Fxtensa%2Fxtensa-protos.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a8cacfd2a5ab2e7bd20e1360fd4a354288576e7a/gcc%2Fconfig%2Fxtensa%2Fxtensa-protos.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fxtensa%2Fxtensa-protos.h?ref=a8cacfd2a5ab2e7bd20e1360fd4a354288576e7a", "patch": "@@ -43,7 +43,7 @@ extern int add_operand PARAMS ((rtx, enum machine_mode));\n extern int arith_operand PARAMS ((rtx, enum machine_mode));\n extern int nonimmed_operand PARAMS ((rtx, enum machine_mode));\n extern int mem_operand PARAMS ((rtx, enum machine_mode));\n-extern int non_acc_reg_operand PARAMS ((rtx, enum machine_mode));\n+extern int xtensa_valid_move PARAMS ((enum machine_mode, rtx *operands));\n extern int mask_operand PARAMS ((rtx, enum machine_mode));\n extern int extui_fldsz_operand PARAMS ((rtx, enum machine_mode));\n extern int sext_operand PARAMS ((rtx, enum machine_mode));\n@@ -87,6 +87,8 @@ extern void xtensa_output_literal\n   PARAMS ((FILE *, rtx, enum machine_mode, int labelno));\n extern void xtensa_reorg PARAMS ((rtx));\n extern rtx xtensa_builtin_saveregs PARAMS ((void));\n+extern enum reg_class xtensa_preferred_reload_class\n+  PARAMS ((rtx, enum reg_class));\n extern enum reg_class xtensa_secondary_reload_class\n   PARAMS ((enum reg_class, enum machine_mode, rtx, int));\n extern int a7_overlap_mentioned_p PARAMS ((rtx x));"}, {"sha": "e24525bd1d6237b62462141328f917eff13335fa", "filename": "gcc/config/xtensa/xtensa.c", "status": "modified", "additions": 41, "deletions": 6, "changes": 47, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a8cacfd2a5ab2e7bd20e1360fd4a354288576e7a/gcc%2Fconfig%2Fxtensa%2Fxtensa.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a8cacfd2a5ab2e7bd20e1360fd4a354288576e7a/gcc%2Fconfig%2Fxtensa%2Fxtensa.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fxtensa%2Fxtensa.c?ref=a8cacfd2a5ab2e7bd20e1360fd4a354288576e7a", "patch": "@@ -440,12 +440,32 @@ mem_operand (op, mode)\n \n \n int\n-non_acc_reg_operand (op, mode)\n-     rtx op;\n+xtensa_valid_move (mode, operands)\n      enum machine_mode mode;\n+     rtx *operands;\n {\n-  if (register_operand (op, mode))\n-    return !ACC_REG_P (xt_true_regnum (op));\n+  /* Either the destination or source must be a register, and the\n+     MAC16 accumulator doesn't count.  */\n+\n+  if (register_operand (operands[0], mode))\n+    {\n+      int dst_regnum = xt_true_regnum (operands[0]);\n+\n+      /* The stack pointer can only be assigned with a MOVSP opcode. */\n+      if (dst_regnum == STACK_POINTER_REGNUM)\n+\treturn (mode == SImode\n+\t\t&& register_operand (operands[1], mode)\n+\t\t&& !ACC_REG_P (xt_true_regnum (operands[1])));\n+\n+      if (!ACC_REG_P (dst_regnum))\n+\treturn true;\n+    }\n+  else if (register_operand (operands[1], mode))\n+    {\n+      int src_regnum = xt_true_regnum (operands[1]);\n+      if (!ACC_REG_P (src_regnum))\n+\treturn true;\n+    }\n   return FALSE;\n }\n \n@@ -1239,8 +1259,7 @@ xtensa_emit_move_sequence (operands, mode)\n \n   if (!(reload_in_progress | reload_completed))\n     {\n-      if (!non_acc_reg_operand (operands[0], mode)\n-\t  && !non_acc_reg_operand (operands[1], mode))\n+      if (!xtensa_valid_move (mode, operands))\n \toperands[1] = force_reg (mode, operands[1]);\n \n       /* Check if this move is copying an incoming argument in a7.  If\n@@ -2538,6 +2557,22 @@ xtensa_va_arg (valist, type)\n }\n \n \n+enum reg_class\n+xtensa_preferred_reload_class (x, class)\n+     rtx x;\n+     enum reg_class class;\n+{\n+  if (CONSTANT_P (x) && GET_CODE (x) == CONST_DOUBLE)\n+    return NO_REGS;\n+\n+  /* Don't use sp for reloads! */\n+  if (class == AR_REGS)\n+    return GR_REGS;\n+\n+  return class;\n+}\n+\n+\n enum reg_class\n xtensa_secondary_reload_class (class, mode, x, isoutput)\n      enum reg_class class;"}, {"sha": "15b57ccd2fbcb3989087d3a33d7dc657677a7bf0", "filename": "gcc/config/xtensa/xtensa.h", "status": "modified", "additions": 1, "deletions": 6, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a8cacfd2a5ab2e7bd20e1360fd4a354288576e7a/gcc%2Fconfig%2Fxtensa%2Fxtensa.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a8cacfd2a5ab2e7bd20e1360fd4a354288576e7a/gcc%2Fconfig%2Fxtensa%2Fxtensa.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fxtensa%2Fxtensa.h?ref=a8cacfd2a5ab2e7bd20e1360fd4a354288576e7a", "patch": "@@ -708,12 +708,8 @@ extern enum reg_class xtensa_char_to_class[256];\n    : ((CODE) == 'U') ? !constantpool_mem_p (OP)\t\t\t\t\\\n    : FALSE)\n \n-/* Given an rtx X being reloaded into a reg required to be\n-   in class CLASS, return the class of reg to actually use.  */\n #define PREFERRED_RELOAD_CLASS(X, CLASS)\t\t\t\t\\\n-  (CONSTANT_P (X)\t\t\t\t\t\t\t\\\n-   ? (GET_CODE (X) == CONST_DOUBLE) ? NO_REGS : (CLASS)\t\t\t\\\n-   : (CLASS))\n+  xtensa_preferred_reload_class (X, CLASS)\n \n #define PREFERRED_OUTPUT_RELOAD_CLASS(X, CLASS)\t\t\t\t\\\n   (CLASS)\n@@ -1511,7 +1507,6 @@ typedef struct xtensa_args {\n   {\"add_operand\",\t\t{ REG, CONST_INT, SUBREG }},\t\t\\\n   {\"arith_operand\",\t\t{ REG, CONST_INT, SUBREG }},\t\t\\\n   {\"nonimmed_operand\",\t\t{ REG, SUBREG, MEM }},\t\t\t\\\n-  {\"non_acc_reg_operand\",\t{ REG, SUBREG }},\t\t\t\\\n   {\"mem_operand\",\t\t{ MEM }},\t\t\t\t\\\n   {\"mask_operand\",\t\t{ REG, CONST_INT, SUBREG }},\t\t\\\n   {\"extui_fldsz_operand\",\t{ CONST_INT }},\t\t\t\t\\"}, {"sha": "771edd556e3343344421b8d94166147fa5198652", "filename": "gcc/config/xtensa/xtensa.md", "status": "modified", "additions": 3, "deletions": 6, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a8cacfd2a5ab2e7bd20e1360fd4a354288576e7a/gcc%2Fconfig%2Fxtensa%2Fxtensa.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a8cacfd2a5ab2e7bd20e1360fd4a354288576e7a/gcc%2Fconfig%2Fxtensa%2Fxtensa.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fxtensa%2Fxtensa.md?ref=a8cacfd2a5ab2e7bd20e1360fd4a354288576e7a", "patch": "@@ -1009,8 +1009,7 @@\n (define_insn \"movsi_internal\"\n   [(set (match_operand:SI 0 \"nonimmed_operand\" \"=D,D,D,D,R,R,a,q,a,a,a,U,*a,*A\")\n \t(match_operand:SI 1 \"move_operand\" \"M,D,d,R,D,d,r,r,I,T,U,r,*A,*r\"))]\n-  \"non_acc_reg_operand (operands[0], SImode)\n-   || non_acc_reg_operand (operands[1], SImode)\"\n+  \"xtensa_valid_move (SImode, operands)\"\n   \"@\n    movi.n\\\\t%0, %x1\n    mov.n\\\\t%0, %1\n@@ -1045,8 +1044,7 @@\n (define_insn \"movhi_internal\"\n   [(set (match_operand:HI 0 \"nonimmed_operand\" \"=D,D,a,a,a,U,*a,*A\")\n \t(match_operand:HI 1 \"move_operand\" \"M,d,r,I,U,r,*A,*r\"))]\n-  \"non_acc_reg_operand (operands[0], HImode)\n-   || non_acc_reg_operand (operands[1], HImode)\"\n+  \"xtensa_valid_move (HImode, operands)\"\n   \"@\n    movi.n\\\\t%0, %x1\n    mov.n\\\\t%0, %1\n@@ -1075,8 +1073,7 @@\n (define_insn \"movqi_internal\"\n   [(set (match_operand:QI 0 \"nonimmed_operand\" \"=D,D,a,a,a,U,*a,*A\")\n \t(match_operand:QI 1 \"move_operand\" \"M,d,r,I,U,r,*A,*r\"))]\n-  \"non_acc_reg_operand (operands[0], QImode)\n-   || non_acc_reg_operand (operands[1], QImode)\"\n+  \"xtensa_valid_move (QImode, operands)\"\n   \"@\n    movi.n\\\\t%0, %x1\n    mov.n\\\\t%0, %1"}]}