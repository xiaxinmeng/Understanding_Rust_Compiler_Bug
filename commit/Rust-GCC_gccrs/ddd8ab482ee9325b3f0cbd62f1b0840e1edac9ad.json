{"sha": "ddd8ab482ee9325b3f0cbd62f1b0840e1edac9ad", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGRkOGFiNDgyZWU5MzI1YjNmMGNiZDYyZjFiMDg0MGUxZWRhYzlhZA==", "commit": {"author": {"name": "Michael Meissner", "email": "meissner@gcc.gnu.org", "date": "1992-05-06T21:33:45Z"}, "committer": {"name": "Michael Meissner", "email": "meissner@gcc.gnu.org", "date": "1992-05-06T21:33:45Z"}, "message": "*** empty log message ***\n\nFrom-SVN: r922", "tree": {"sha": "dcc8d7e7aab6d63e80eddf2abc6ae0c92b6070b3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/dcc8d7e7aab6d63e80eddf2abc6ae0c92b6070b3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ddd8ab482ee9325b3f0cbd62f1b0840e1edac9ad", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ddd8ab482ee9325b3f0cbd62f1b0840e1edac9ad", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ddd8ab482ee9325b3f0cbd62f1b0840e1edac9ad", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ddd8ab482ee9325b3f0cbd62f1b0840e1edac9ad/comments", "author": null, "committer": null, "parents": [{"sha": "4a39264367b95457f73b01dee38aaff729cd81ee", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4a39264367b95457f73b01dee38aaff729cd81ee", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4a39264367b95457f73b01dee38aaff729cd81ee"}], "stats": {"total": 105, "additions": 74, "deletions": 31}, "files": [{"sha": "9e8faa992b615f5e6e1739ff98cdca694f2ab00c", "filename": "gcc/config/mips/mips.c", "status": "modified", "additions": 9, "deletions": 1, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ddd8ab482ee9325b3f0cbd62f1b0840e1edac9ad/gcc%2Fconfig%2Fmips%2Fmips.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ddd8ab482ee9325b3f0cbd62f1b0840e1edac9ad/gcc%2Fconfig%2Fmips%2Fmips.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fmips.c?ref=ddd8ab482ee9325b3f0cbd62f1b0840e1edac9ad", "patch": "@@ -4248,7 +4248,7 @@ function_epilogue (file, size)\n \t}\n \n       fprintf (stderr,\n-\t       \"%-20s fp=%c leaf=%c alloca=%c setjmp=%c stack=%4ld arg=%3ld reg=%2d/%d delay=%3d/%3dL %3d/%3dJ refs=%3d/%3d/%3d\\n\",\n+\t       \"%-20s fp=%c leaf=%c alloca=%c setjmp=%c stack=%4ld arg=%3ld reg=%2d/%d delay=%3d/%3dL %3d/%3dJ refs=%3d/%3d/%3d\",\n \t       current_function_name,\n \t       (frame_pointer_needed) ? 'y' : 'n',\n \t       ((current_frame_info.mask & (1 << 31)) != 0) ? 'n' : 'y',\n@@ -4260,6 +4260,14 @@ function_epilogue (file, size)\n \t       dslots_load_total, dslots_load_filled,\n \t       dslots_jump_total, dslots_jump_filled,\n \t       num_refs[0], num_refs[1], num_refs[2]);\n+\n+      if (HALF_PIC_NUMBER_PTRS)\n+\tfprintf (stderr, \" half-pic=%3d\", HALF_PIC_NUMBER_PTRS);\n+\n+      if (HALF_PIC_NUMBER_REFS)\n+\tfprintf (stderr, \" pic-ref=%3d\", HALF_PIC_NUMBER_REFS);\n+\n+      fputc ('\\n', stderr);\n     }\n \n   /* Reset state info for each function.  */"}, {"sha": "4a49fe058adaaa733f1471a64db432434ec19df8", "filename": "gcc/config/mips/mips.md", "status": "modified", "additions": 49, "deletions": 17, "changes": 66, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ddd8ab482ee9325b3f0cbd62f1b0840e1edac9ad/gcc%2Fconfig%2Fmips%2Fmips.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ddd8ab482ee9325b3f0cbd62f1b0840e1edac9ad/gcc%2Fconfig%2Fmips%2Fmips.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fmips.md?ref=ddd8ab482ee9325b3f0cbd62f1b0840e1edac9ad", "patch": "@@ -69,14 +69,19 @@\n \t\t(const_string \"yes\")\n \t\t(const_string \"no\")))\n \n+;; Attribute describing the processor.  This attribute must match exactly\n+;; with the processor_type enumeration in mips.h.\n+\n ;; Attribute describing the processor\n-(define_attr \"cpu\" \"default,r3000,r4000,r6000\"\n-  (const\n-   (cond [(eq (symbol_ref \"mips_cpu\") (symbol_ref \"PROCESSOR_DEFAULT\")) (const_string \"default\")\n-\t  (eq (symbol_ref \"mips_cpu\") (symbol_ref \"PROCESSOR_R3000\"))   (const_string \"r3000\")\n-\t  (eq (symbol_ref \"mips_cpu\") (symbol_ref \"PROCESSOR_R4000\"))   (const_string \"r4000\")\n-\t  (eq (symbol_ref \"mips_cpu\") (symbol_ref \"PROCESSOR_R6000\"))   (const_string \"r6000\")]\n-\t (const_string \"default\"))))\n+;; (define_attr \"cpu\" \"default,r3000,r6000,r4000\"\n+;;   (const\n+;;    (cond [(eq (symbol_ref \"mips_cpu\") (symbol_ref \"PROCESSOR_R3000\"))   (const_string \"r3000\")\n+;;           (eq (symbol_ref \"mips_cpu\") (symbol_ref \"PROCESSOR_R4000\"))   (const_string \"r4000\")\n+;;           (eq (symbol_ref \"mips_cpu\") (symbol_ref \"PROCESSOR_R6000\"))   (const_string \"r6000\")]\n+;;          (const_string \"default\"))))\n+\n+(define_attr \"cpu\" \"default,r3000,r6000,r4000\"\n+  (const (symbol_ref \"mips_cpu_attr\")))\n \n ;; Attribute defining whether or not we can use the branch-likely instructions\n ;; (MIPS ISA level 2)\n@@ -131,12 +136,12 @@\n   (and (eq_attr \"type\" \"load,pic\") (eq_attr \"cpu\" \"r3000\"))\n   2 0)\n \n-(define_function_unit \"memory\"\t 1 0 (eq_attr \"type\" \"store\") 1 0)\n+(define_function_unit \"memory\"   1 0 (eq_attr \"type\" \"store\") 1 0)\n \n-(define_function_unit \"fp_comp\"  1 0 (eq_attr \"type\" \"fcmp\")\t 2 0)\n+(define_function_unit \"fp_comp\"  1 0 (eq_attr \"type\" \"fcmp\") 2 0)\n \n-(define_function_unit \"transfer\" 1 0 (eq_attr \"type\" \"xfer\")\t 2 0)\n-(define_function_unit \"transfer\" 1 0 (eq_attr \"type\" \"hilo\")\t 3 0)\n+(define_function_unit \"transfer\" 1 0 (eq_attr \"type\" \"xfer\") 2 0)\n+(define_function_unit \"transfer\" 1 0 (eq_attr \"type\" \"hilo\") 3 0)\n \n (define_function_unit \"imuldiv\"  1 1\n   (and (eq_attr \"type\" \"imul\") (eq_attr \"cpu\" \"!r3000,r4000\"))\n@@ -174,11 +179,11 @@\n   (and (eq_attr \"type\" \"fadd\") (eq_attr \"cpu\" \"r6000\"))\n   3 6)\n \n-(define_function_unit \"fast\" 1 1\n+(define_function_unit \"adder\" 1 1\n   (and (eq_attr \"type\" \"fabs,fneg\") (eq_attr \"cpu\" \"!r3000\"))\n   2 4)\n \n-(define_function_unit \"fast\" 1 1\n+(define_function_unit \"adder\" 1 1\n   (and (eq_attr \"type\" \"fabs,fneg\") (eq_attr \"cpu\" \"r3000\"))\n   1 2)\n \n@@ -233,6 +238,33 @@\n (define_function_unit \"sqrt\" 1 1 (and (eq_attr \"type\" \"fsqrt\") (eq_attr \"mode\" \"SF\"))  54 108)\n (define_function_unit \"sqrt\" 1 1 (and (eq_attr \"type\" \"fsqrt\") (eq_attr \"mode\" \"DF\")) 112 224)\n \n+\f\n+;; The following functional units do not use the cpu type, and use\n+;; much less memory in genattrtab.c.\n+\n+;; (define_function_unit \"memory\"   1 0 (eq_attr \"type\" \"load,pic\")                            3   0)\n+;; (define_function_unit \"memory\"   1 0 (eq_attr \"type\" \"store\")                               1   0)\n+;;       \n+;; (define_function_unit \"fp_comp\"  1 0 (eq_attr \"type\" \"fcmp\")                                2   0)\n+;;       \n+;; (define_function_unit \"transfer\" 1 0 (eq_attr \"type\" \"xfer\")                                2   0)\n+;; (define_function_unit \"transfer\" 1 0 (eq_attr \"type\" \"hilo\")                                3   0)\n+;;   \n+;; (define_function_unit \"imuldiv\"  1 1 (eq_attr \"type\" \"imul\")                               17  34)\n+;; (define_function_unit \"imuldiv\"  1 1 (eq_attr \"type\" \"idiv\")                               38  76)\n+;;   \n+;; (define_function_unit \"adder\"    1 1 (eq_attr \"type\" \"fadd\")                                4   8)\n+;; (define_function_unit \"adder\"    1 1 (eq_attr \"type\" \"fabs,fneg\")                           2   4)\n+;;   \n+;; (define_function_unit \"mult\"     1 1 (and (eq_attr \"type\" \"fmul\") (eq_attr \"mode\" \"SF\"))    7  14)\n+;; (define_function_unit \"mult\"     1 1 (and (eq_attr \"type\" \"fmul\") (eq_attr \"mode\" \"DF\"))    8  16)\n+;;   \n+;; (define_function_unit \"divide\"   1 1 (and (eq_attr \"type\" \"fdiv\") (eq_attr \"mode\" \"SF\"))   23  46)\n+;; (define_function_unit \"divide\"   1 1 (and (eq_attr \"type\" \"fdiv\") (eq_attr \"mode\" \"DF\"))   36  72)\n+;; \n+;; (define_function_unit \"sqrt\"     1 1 (and (eq_attr \"type\" \"fsqrt\") (eq_attr \"mode\" \"SF\"))  54 108)\n+;; (define_function_unit \"sqrt\"     1 1 (and (eq_attr \"type\" \"fsqrt\") (eq_attr \"mode\" \"DF\")) 112 224)\n+\n \f\n ;;\n ;;  ....................\n@@ -1833,8 +1865,8 @@ move\\\\t%0,%z4\\\\n\\\\\n }\")\n \n (define_insn \"movsi_internal\"\n-  [(set (match_operand:SI 0 \"nonimmediate_operand\" \"=d,d,d,d,d,d,R,m,*d,*fs,*f,*f,*f,*R,*m,*x,*d\")\n-\t(match_operand:SI 1 \"general_operand\" \"d,S,IKL,Mnis,R,m,dJ,dJ,*fs,*d,*f,*R,*m,*f,*f,*d,*x\"))]\n+  [(set (match_operand:SI 0 \"nonimmediate_operand\" \"=d,d,d,d,d,d,R,m,*d,*fz,*f,*f,*f,*R,*m,*x,*d\")\n+\t(match_operand:SI 1 \"general_operand\" \"d,S,IKL,Mnis,R,m,dJ,dJ,*fz,*d,*f,*R,*m,*f,*f,*d,*x\"))]\n   \"\"\n   \"* return mips_move_1word (operands, insn, TRUE);\"\n   [(set_attr \"type\"\t\"move,pic,arith,arith,load,load,store,store,xfer,xfer,move,load,load,store,store,hilo,hilo\")\n@@ -1850,7 +1882,7 @@ move\\\\t%0,%z4\\\\n\\\\\n \n (define_insn \"movhi\"\n   [(set (match_operand:HI 0 \"nonimmediate_operand\" \"=d,d,d,d,R,m,*d,*f,*f,*x,*d\")\n-\t(match_operand:HI 1 \"general_operand\"       \"d,IK,R,m,dJ,dJ,*fs,*d,*f,*d,*x\"))]\n+\t(match_operand:HI 1 \"general_operand\"       \"d,IK,R,m,dJ,dJ,*fz,*d,*f,*d,*x\"))]\n   \"\"\n   \"* return mips_move_1word (operands, insn, TRUE);\"\n   [(set_attr \"type\"\t\"move,arith,load,load,store,store,xfer,xfer,move,hilo,hilo\")\n@@ -1866,7 +1898,7 @@ move\\\\t%0,%z4\\\\n\\\\\n \n (define_insn \"movqi\"\n   [(set (match_operand:QI 0 \"nonimmediate_operand\" \"=d,d,d,d,R,m,*d,*f,*f,*x,*d\")\n-\t(match_operand:QI 1 \"general_operand\"       \"d,IK,R,m,dJ,dJ,*fs,*d,*f,*d,*x\"))]\n+\t(match_operand:QI 1 \"general_operand\"       \"d,IK,R,m,dJ,dJ,*fz,*d,*f,*d,*x\"))]\n   \"\"\n   \"* return mips_move_1word (operands, insn, TRUE);\"\n   [(set_attr \"type\"\t\"move,arith,load,load,store,store,xfer,xfer,move,hilo,hilo\")"}, {"sha": "4857d218e07fcc4a8c017341849062cfea533767", "filename": "gcc/config/mips/osfrose.h", "status": "modified", "additions": 10, "deletions": 7, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ddd8ab482ee9325b3f0cbd62f1b0840e1edac9ad/gcc%2Fconfig%2Fmips%2Fosfrose.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ddd8ab482ee9325b3f0cbd62f1b0840e1edac9ad/gcc%2Fconfig%2Fmips%2Fosfrose.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fosfrose.h?ref=ddd8ab482ee9325b3f0cbd62f1b0840e1edac9ad", "patch": "@@ -20,7 +20,8 @@ the Free Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA.  */\n #define DECSTATION\n #define OSF_OS\n \n-#define HALF_PIC_DEBUG TARGET_DEBUG_B_MODE\n+#define HALF_PIC_DEBUG\tTARGET_DEBUG_B_MODE\n+#define HALF_PIC_PREFIX\t\"$Lp.\"\n \n #include \"halfpic.h\"\n \n@@ -48,12 +49,14 @@ the Free Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA.  */\n \t\t\t%{.s:%i} %{!.s:%g.s}}}\"\n \n #define CPP_SPEC \"\\\n-%{.S:\t-D__LANGUAGE_ASSEMBLY__ %{!ansi:-DLANGUAGE_ASSEMBLY} -DLANGUAGE_C -D__LANGUAGE_C__} \\\n-%{.cc:\t-D__LANGUAGE_C_PLUS_PLUS__} \\\n-%{.cxx:\t-D__LANGUAGE_C_PLUS_PLUS__} \\\n-%{.C:\t-D__LANGUAGE_C_PLUS_PLUS__} \\\n-%{.m:\t-D__LANGUAGE_OBJECTIVE_C__} \\\n-%{!.S:\t-D__LANGUAGE_C__ %{!ansi:-DLANGUAGE_C}}\"\n+#define CPP_SPEC \"\\\n+%{.S:\t-D__LANGUAGE_ASSEMBLY__ -D__LANGUAGE_ASSEMBLY %{!ansi:-DLANGUAGE_ASSEMBLY}\n+\t-ULANGUAGE_C -U__LANGUAGE_C__} \\\n+%{.cc:\t-D__LANGUAGE_C_PLUS_PLUS__ -D__LANGUAGE_C_PLUS_PLUS} \\\n+%{.cxx:\t-D__LANGUAGE_C_PLUS_PLUS__ -D__LANGUAGE_C_PLUS_PLUS} \\\n+%{.C:\t-D__LANGUAGE_C_PLUS_PLUS__ -D__LANGUAGE_C_PLUS_PLUS} \\\n+%{.m:\t-D__LANGUAGE_OBJECTIVE_C__ -D__LANGUAGE_OBJECTIVE_C} \\\n+%{!.S:\t-D__LANGUAGE_C__  -D__LANGUAGE_C %{!ansi:-DLANGUAGE_C}}\"\n \n #define LINK_SPEC \"\\\n %{G*} \\"}, {"sha": "40f44cdaa644f9a7f2b0a71bad1e56980f296d42", "filename": "gcc/config/mips/ultrix.h", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ddd8ab482ee9325b3f0cbd62f1b0840e1edac9ad/gcc%2Fconfig%2Fmips%2Fultrix.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ddd8ab482ee9325b3f0cbd62f1b0840e1edac9ad/gcc%2Fconfig%2Fmips%2Fultrix.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fultrix.h?ref=ddd8ab482ee9325b3f0cbd62f1b0840e1edac9ad", "patch": "@@ -34,12 +34,12 @@ the Free Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA.  */\n %{G*}\"\n \n #define CPP_SPEC \"\\\n-%{.S:\t-D__LANGUAGE_ASSEMBLY %{!ansi:-DLANGUAGE_ASSEMBLY}} \\\n-%{.cc:\t-D__LANGUAGE_C_PLUS_PLUS} \\\n-%{.cxx:\t-D__LANGUAGE_C_PLUS_PLUS} \\\n-%{.C:\t-D__LANGUAGE_C_PLUS_PLUS} \\\n-%{.m:\t-D__LANGUAGE_OBJECTIVE_C} \\\n-%{!.S:\t-D__LANGUAGE_C %{!ansi:-DLANGUAGE_C}}\"\n+%{.S:\t-D__LANGUAGE_ASSEMBLY__ -D__LANGUAGE_ASSEMBLY %{!ansi:-DLANGUAGE_ASSEMBLY}} \\\n+%{.cc:\t-D__LANGUAGE_C_PLUS_PLUS__ -D__LANGUAGE_C_PLUS_PLUS} \\\n+%{.cxx:\t-D__LANGUAGE_C_PLUS_PLUS__ -D__LANGUAGE_C_PLUS_PLUS} \\\n+%{.C:\t-D__LANGUAGE_C_PLUS_PLUS__ -D__LANGUAGE_C_PLUS_PLUS} \\\n+%{.m:\t-D__LANGUAGE_OBJECTIVE_C__ -D__LANGUAGE_OBJECTIVE_C} \\\n+%{!.S:\t-D__LANGUAGE_C__  -D__LANGUAGE_C %{!ansi:-DLANGUAGE_C}}\"\n \n #define LINK_SPEC \"\\\n %{G*} \\"}]}