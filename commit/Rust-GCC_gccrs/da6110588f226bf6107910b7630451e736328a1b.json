{"sha": "da6110588f226bf6107910b7630451e736328a1b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGE2MTEwNTg4ZjIyNmJmNjEwNzkxMGI3NjMwNDUxZTczNjMyOGExYg==", "commit": {"author": {"name": "Mark Mitchell", "email": "mark@codesourcery.com", "date": "2005-09-02T18:29:28Z"}, "committer": {"name": "Mark Mitchell", "email": "mmitchel@gcc.gnu.org", "date": "2005-09-02T18:29:28Z"}, "message": "re PR c++/21687 (ICE in GC with local class inside a template function)\n\n\tPR c++/21687\n\t* parser.c (cp_parser_class_specifier): Push/pop GC contexts\n\taround functions in local classes.\n\n\tPR c++/21687\n\t* g++.dg/other/gc3.C: New test.\n\nFrom-SVN: r103791", "tree": {"sha": "132a35a0fae0655b2618067cb6bbe178be246bb7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/132a35a0fae0655b2618067cb6bbe178be246bb7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/da6110588f226bf6107910b7630451e736328a1b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/da6110588f226bf6107910b7630451e736328a1b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/da6110588f226bf6107910b7630451e736328a1b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/da6110588f226bf6107910b7630451e736328a1b/comments", "author": null, "committer": null, "parents": [{"sha": "01be28d829b48b576564ce7d5c45570b0f42e2ee", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/01be28d829b48b576564ce7d5c45570b0f42e2ee", "html_url": "https://github.com/Rust-GCC/gccrs/commit/01be28d829b48b576564ce7d5c45570b0f42e2ee"}], "stats": {"total": 42, "additions": 36, "deletions": 6}, "files": [{"sha": "69e62c4600a14f6505a69abf7b1b0bf4fe0d1eac", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/da6110588f226bf6107910b7630451e736328a1b/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/da6110588f226bf6107910b7630451e736328a1b/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=da6110588f226bf6107910b7630451e736328a1b", "patch": "@@ -1,3 +1,9 @@\n+2005-09-02  Mark Mitchell  <mark@codesourcery.com>\n+\n+\tPR c++/21687\n+\t* parser.c (cp_parser_class_specifier): Push/pop GC contexts\n+\taround functions in local classes.\n+\n 2005-08-31  Andrew Pinski  <pinskia@physics.uc.edu>\n \n \tPR obj-c++/23640"}, {"sha": "f06640305bd41c2ff27b9bde7858560104c8e158", "filename": "gcc/cp/parser.c", "status": "modified", "additions": 17, "deletions": 6, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/da6110588f226bf6107910b7630451e736328a1b/gcc%2Fcp%2Fparser.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/da6110588f226bf6107910b7630451e736328a1b/gcc%2Fcp%2Fparser.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fparser.c?ref=da6110588f226bf6107910b7630451e736328a1b", "patch": "@@ -12673,7 +12673,10 @@ cp_parser_class_specifier (cp_parser* parser)\n       tree fn;\n       tree class_type = NULL_TREE;\n       tree pushed_scope = NULL_TREE;\n-\n+      /* True if we have called ggc_push_context, and therefore need\n+\t to make a matching call to ggc_pop_context.  */\n+      bool need_ggc_pop_context;\n+ \n       /* In a first pass, parse default arguments to the functions.\n \t Then, in a second pass, parse the bodies of the functions.\n \t This two-phased approach handles cases like:\n@@ -12709,6 +12712,7 @@ cp_parser_class_specifier (cp_parser* parser)\n \t}\n       if (pushed_scope)\n \tpop_scope (pushed_scope);\n+      need_ggc_pop_context = false;\n       /* Now parse the body of the functions.  */\n       for (TREE_VALUE (parser->unparsed_functions_queues)\n \t     = nreverse (TREE_VALUE (parser->unparsed_functions_queues));\n@@ -12718,14 +12722,21 @@ cp_parser_class_specifier (cp_parser* parser)\n \t{\n \t  /* Figure out which function we need to process.  */\n \t  fn = TREE_VALUE (queue_entry);\n-\n-\t  /* A hack to prevent garbage collection.  */\n-\t  function_depth++;\n-\n+\t  /* We call ggc_collect after processing a function body in\n+\t     order to clean up garbage generated.  If we're processing\n+\t     a local class, however, then we must not clean up stuff\n+\t     from the function containing the class, so we have to\n+\t     push a new garbage-collection context.  */\n+\t  if (function_depth && !need_ggc_pop_context)\n+\t    {\n+\t      need_ggc_pop_context = true;\n+\t      ggc_push_context ();\n+\t    }\n \t  /* Parse the function.  */\n \t  cp_parser_late_parsing_for_member (parser, fn);\n-\t  function_depth--;\n \t}\n+      if (need_ggc_pop_context)\n+\tggc_pop_context ();\n     }\n \n   /* Put back any saved access checks.  */"}, {"sha": "042a5315321293cd504842b0a9983ff6e3c94482", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/da6110588f226bf6107910b7630451e736328a1b/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/da6110588f226bf6107910b7630451e736328a1b/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=da6110588f226bf6107910b7630451e736328a1b", "patch": "@@ -1,3 +1,8 @@\n+2005-09-02  Mark Mitchell  <mark@codesourcery.com>\n+\n+\tPR c++/21687\n+\t* g++.dg/other/gc3.C: New test.\n+\n 2005-08-31  Andrew Pinski  <pinskia@physics.uc.edu>\n \n \t* gcc.dg/20030711-1.c: Include stddef.h and stdio.h."}, {"sha": "500d109e0d72f6df61b245338cf1f9a33da8625a", "filename": "gcc/testsuite/g++.dg/other/gc3.C", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/da6110588f226bf6107910b7630451e736328a1b/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fother%2Fgc3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/da6110588f226bf6107910b7630451e736328a1b/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fother%2Fgc3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fother%2Fgc3.C?ref=da6110588f226bf6107910b7630451e736328a1b", "patch": "@@ -0,0 +1,8 @@\n+// PR c++/21687\n+// { dg-options \"--param ggc-min-expand=0 --param ggc-min-heapsize=0\" }\n+\n+template <class Union>\n+void perform_test_trivial() {\n+  struct check_union {  void perform_test_trivial() {} };\n+}\n+"}]}