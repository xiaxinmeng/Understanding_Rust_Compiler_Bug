{"sha": "347561b87c32addd5a115c0181b6d41c52a4eaec", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzQ3NTYxYjg3YzMyYWRkZDVhMTE1YzAxODFiNmQ0MWM1MmE0ZWFlYw==", "commit": {"author": {"name": "James A. Morrison", "email": "phython@gcc.gnu.org", "date": "2005-02-26T14:10:11Z"}, "committer": {"name": "James A. Morrison", "email": "phython@gcc.gnu.org", "date": "2005-02-26T14:10:11Z"}, "message": "treelang.texi: Treelang does have warnings.\n\n2005-02-26  James A. Morrison  <phython@gcc.gnu.org>\n\n        * treelang.texi: Treelang does have warnings.\n        * treetree.c (tree_code_create_function_prototype): Don't set\n        TREE_USED and set TREE_PUBLIC, DECL_EXTERNAL, and TREE_STATIC\n        as few times as needed on the function declaration.\n        (tree_code_create_function_initial): Don't set TREE_USED,\n        TREE_ADDRESSABLE, but set TREE_STATIC on the function declaration.\n        (tree_code_create_variable): Don't set TREE_USED on VAR_DECL.\n        (tree_code_get_expression): Set TREE_USED for variable references\n        and function calls.\n\nFrom-SVN: r95580", "tree": {"sha": "501f74118c4c47b831cb624bb8a13a406b4b409d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/501f74118c4c47b831cb624bb8a13a406b4b409d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/347561b87c32addd5a115c0181b6d41c52a4eaec", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/347561b87c32addd5a115c0181b6d41c52a4eaec", "html_url": "https://github.com/Rust-GCC/gccrs/commit/347561b87c32addd5a115c0181b6d41c52a4eaec", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/347561b87c32addd5a115c0181b6d41c52a4eaec/comments", "author": null, "committer": null, "parents": [{"sha": "52058e0da00c541672953f07e391ebeba886a4e4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/52058e0da00c541672953f07e391ebeba886a4e4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/52058e0da00c541672953f07e391ebeba886a4e4"}], "stats": {"total": 37, "additions": 20, "deletions": 17}, "files": [{"sha": "d428afdabe403958f45c923dc01db130c3528553", "filename": "gcc/treelang/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/347561b87c32addd5a115c0181b6d41c52a4eaec/gcc%2Ftreelang%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/347561b87c32addd5a115c0181b6d41c52a4eaec/gcc%2Ftreelang%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftreelang%2FChangeLog?ref=347561b87c32addd5a115c0181b6d41c52a4eaec", "patch": "@@ -1,3 +1,15 @@\n+2005-02-26  James A. Morrison  <phython@gcc.gnu.org>\n+\n+\t* treelang.texi: Treelang does have warnings.\n+\t* treetree.c (tree_code_create_function_prototype): Don't set\n+\tTREE_USED and set TREE_PUBLIC, DECL_EXTERNAL, and TREE_STATIC\n+\tas few times as needed on the function declaration.\n+\t(tree_code_create_function_initial): Don't set TREE_USED,\n+\tTREE_ADDRESSABLE, but set TREE_STATIC on the function declaration.\n+\t(tree_code_create_variable): Don't set TREE_USED on VAR_DECL.\n+\t(tree_code_get_expression): Set TREE_USED for variable references\n+\tand function calls.\n+\n 2005-02-26  James A. Morrison  <phython@gcc.gnu.org>\n \n \t* parse.y: Do comparisons as the type of the first expression."}, {"sha": "09d93d45ba59b4d9a4dc7f727f264918ee6fad04", "filename": "gcc/treelang/treelang.texi", "status": "modified", "additions": 5, "deletions": 3, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/347561b87c32addd5a115c0181b6d41c52a4eaec/gcc%2Ftreelang%2Ftreelang.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/347561b87c32addd5a115c0181b6d41c52a4eaec/gcc%2Ftreelang%2Ftreelang.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftreelang%2Ftreelang.texi?ref=347561b87c32addd5a115c0181b6d41c52a4eaec", "patch": "@@ -710,9 +710,11 @@ the programmer's intention.)\n @cindex warnings\n @cindex questionable instructions\n @item\n-There are few warnings in treelang.  A program is either correct or in\n-error.  The only exception to this is an expression in a return statement for\n-functions that return nothing.\n+There are a few warnings in treelang.  For example an unused static function\n+generate a warnings when -Wunused-function is specified, similarily an unused\n+static variable generates a warning when -Wunused-variable are specified.\n+The only treelang specific warning is a warning when an expression is in a\n+return statement for functions that return void.\n @end itemize\n \n @cindex components of treelang"}, {"sha": "ac8c7a39494eb3e256f9650534b00a5940e6c53e", "filename": "gcc/treelang/treetree.c", "status": "modified", "additions": 3, "deletions": 14, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/347561b87c32addd5a115c0181b6d41c52a4eaec/gcc%2Ftreelang%2Ftreetree.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/347561b87c32addd5a115c0181b6d41c52a4eaec/gcc%2Ftreelang%2Ftreetree.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftreelang%2Ftreetree.c?ref=347561b87c32addd5a115c0181b6d41c52a4eaec", "patch": "@@ -352,25 +352,19 @@ tree_code_create_function_prototype (unsigned char* chars,\n   DECL_CONTEXT (fn_decl) = NULL_TREE;\n   DECL_SOURCE_LOCATION (fn_decl) = loc;\n \n-  TREE_USED (fn_decl) = 1;\n-\n   TREE_PUBLIC (fn_decl) = 0;\n   DECL_EXTERNAL (fn_decl) = 0;\n   TREE_STATIC (fn_decl) = 0;\n   switch (storage_class)\n     {\n     case STATIC_STORAGE:\n-      TREE_PUBLIC (fn_decl) = 0;\n       break;\n \n     case EXTERNAL_DEFINITION_STORAGE:\n       TREE_PUBLIC (fn_decl) = 1;\n-      TREE_STATIC (fn_decl) = 0;\n-      DECL_EXTERNAL (fn_decl) = 0;\n       break;\n \n     case EXTERNAL_REFERENCE_STORAGE:\n-      TREE_PUBLIC (fn_decl) = 0;\n       DECL_EXTERNAL (fn_decl) = 1;\n       break;\n \n@@ -457,11 +451,7 @@ tree_code_create_function_initial (tree prev_saved,\n \n   pushlevel (0);\n \n-  /* Force it to be output, else may be solely inlined.  */\n-  TREE_ADDRESSABLE (fn_decl) = 1;\n-\n-  /* Stop -O3 from deleting it.  */\n-  TREE_USED (fn_decl) = 1;\n+  TREE_STATIC (fn_decl) = 1;\n }\n \n /* Wrapup a function contained in file FILENAME, ending at line LINENO.  */\n@@ -570,9 +560,6 @@ tree_code_create_variable (unsigned int storage_class,\n       gcc_unreachable ();\n     }\n \n-  /* This should really only be set if the variable is used.  */\n-  TREE_USED (var_decl) = 1;\n-\n   TYPE_NAME (TREE_TYPE (var_decl)) = TYPE_NAME (var_type);\n   return pushdecl (copy_node (var_decl));\n }\n@@ -701,6 +688,7 @@ tree_code_get_expression (unsigned int exp_type,\n          variable type, convert it.  */\n     case EXP_REFERENCE:\n       gcc_assert (op1);\n+      TREE_USED (op1) = 1;\n       if (type == TREE_TYPE (op1))\n         ret1 = op1;\n       else\n@@ -711,6 +699,7 @@ tree_code_get_expression (unsigned int exp_type,\n       gcc_assert (op1);\n       {\n         tree fun_ptr;\n+\tTREE_USED (op1) = 1;\n         fun_ptr = fold (build1 (ADDR_EXPR,\n                                 build_pointer_type (TREE_TYPE (op1)), op1));\n         ret1 = build3 (CALL_EXPR, type, fun_ptr, nreverse (op2), NULL_TREE);"}]}