{"sha": "1ca8bef0218b120d504b18a983b6da1f37f3acbe", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWNhOGJlZjAyMThiMTIwZDUwNGIxOGE5ODNiNmRhMWYzN2YzYWNiZQ==", "commit": {"author": {"name": "Janne Blomqvist", "email": "jb@gcc.gnu.org", "date": "2012-05-27T07:09:15Z"}, "committer": {"name": "Janne Blomqvist", "email": "jb@gcc.gnu.org", "date": "2012-05-27T07:09:15Z"}, "message": "Minor timing cleanups.\n\n2012-05-27  Janne Blomqvist  <jb@gcc.gnu.org>\n\n\t* intrinsics/time_1.h (gf_cputime): Don't reevaluate HZ expression\n\tfor times fallback, clarify operation ordering for times and clock\n\tfallbacks.\n\t(gf_gettime): Fix comment typo.\n\nFrom-SVN: r187922", "tree": {"sha": "4ba076dcff35f273033f62f07fd1e6239ab3bef4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4ba076dcff35f273033f62f07fd1e6239ab3bef4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1ca8bef0218b120d504b18a983b6da1f37f3acbe", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1ca8bef0218b120d504b18a983b6da1f37f3acbe", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1ca8bef0218b120d504b18a983b6da1f37f3acbe", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1ca8bef0218b120d504b18a983b6da1f37f3acbe/comments", "author": null, "committer": null, "parents": [{"sha": "f51a04db53984de477ab8ac318f7c731aebfd513", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f51a04db53984de477ab8ac318f7c731aebfd513", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f51a04db53984de477ab8ac318f7c731aebfd513"}], "stats": {"total": 20, "additions": 14, "deletions": 6}, "files": [{"sha": "e8f296d4b2f068abd16589335d0e97f9a7415ccd", "filename": "libgfortran/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ca8bef0218b120d504b18a983b6da1f37f3acbe/libgfortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ca8bef0218b120d504b18a983b6da1f37f3acbe/libgfortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2FChangeLog?ref=1ca8bef0218b120d504b18a983b6da1f37f3acbe", "patch": "@@ -1,3 +1,10 @@\n+2012-05-27  Janne Blomqvist  <jb@gcc.gnu.org>\n+\n+\t* intrinsics/time_1.h (gf_cputime): Don't reevaluate HZ expression\n+\tfor times fallback, clarify operation ordering for times and clock\n+\tfallbacks.\n+\t(gf_gettime): Fix comment typo.\n+\n 2012-05-24  Janne Blomqvist  <jb@gcc.gnu.org>\n \n \tPR fortran/53456"}, {"sha": "98a20d2bb709bde127bf3207f5ea508d2fb65c31", "filename": "libgfortran/intrinsics/time_1.h", "status": "modified", "additions": 7, "deletions": 6, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ca8bef0218b120d504b18a983b6da1f37f3acbe/libgfortran%2Fintrinsics%2Ftime_1.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ca8bef0218b120d504b18a983b6da1f37f3acbe/libgfortran%2Fintrinsics%2Ftime_1.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fintrinsics%2Ftime_1.h?ref=1ca8bef0218b120d504b18a983b6da1f37f3acbe", "patch": "@@ -158,10 +158,11 @@ gf_cputime (long *user_sec, long *user_usec, long *system_sec, long *system_usec\n   struct tms buf;\n   clock_t err;\n   err = times (&buf);\n-  *user_sec = buf.tms_utime / HZ;\n-  *user_usec = buf.tms_utime % HZ * (1000000. / HZ);\n-  *system_sec = buf.tms_stime / HZ;\n-  *system_usec = buf.tms_stime % HZ * (1000000. / HZ);\n+  long hz = HZ;\n+  *user_sec = buf.tms_utime / hz;\n+  *user_usec = (buf.tms_utime % hz) * (1000000. / hz);\n+  *system_sec = buf.tms_stime / hz;\n+  *system_usec = (buf.tms_stime % hz) * (1000000. / hz);\n   if ((err == (clock_t) -1) && errno != 0)\n     return -1;\n   return 0;\n@@ -184,7 +185,7 @@ gf_cputime (long *user_sec, long *user_usec, long *system_sec, long *system_usec\n #else \n   clock_t c = clock ();\n   *user_sec = c / CLOCKS_PER_SEC;\n-  *user_usec = c % CLOCKS_PER_SEC * (1000000. / CLOCKS_PER_SEC);\n+  *user_usec = (c % CLOCKS_PER_SEC) * (1000000. / CLOCKS_PER_SEC);\n   *system_sec = *system_usec = 0;\n   if (c == (clock_t) -1)\n     return -1;\n@@ -204,7 +205,7 @@ gf_cputime (long *user_sec, long *user_usec, long *system_sec, long *system_usec\n    usecs    - OUTPUT, microseconds\n \n    The OUTPUT arguments shall represent the number of seconds and\n-   nanoseconds since the Epoch.\n+   microseconds since the Epoch.\n \n    Return value: 0 for success, -1 for error. In case of error, errno\n    is set."}]}