{"sha": "35e519c48459fbcd3e0e70844ef6f87a7eeb50c5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzVlNTE5YzQ4NDU5ZmJjZDNlMGU3MDg0NGVmNmY4N2E3ZWViNTBjNQ==", "commit": {"author": {"name": "Richard Sandiford", "email": "rdsandiford@googlemail.com", "date": "2014-01-30T19:44:06Z"}, "committer": {"name": "Richard Sandiford", "email": "rsandifo@gcc.gnu.org", "date": "2014-01-30T19:44:06Z"}, "message": "re PR c++/58708 (string literal operator templates broken)\n\ngcc/cp/\n\tPR c++/58708\n\t* parser.c (make_string_pack): Use double_int::from_buffer.\n\nFrom-SVN: r207320", "tree": {"sha": "d0831e1e20b8e64cc5661de4a689c8862b9e4e4b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d0831e1e20b8e64cc5661de4a689c8862b9e4e4b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/35e519c48459fbcd3e0e70844ef6f87a7eeb50c5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/35e519c48459fbcd3e0e70844ef6f87a7eeb50c5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/35e519c48459fbcd3e0e70844ef6f87a7eeb50c5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/35e519c48459fbcd3e0e70844ef6f87a7eeb50c5/comments", "author": {"login": "rsandifo", "id": 4235983, "node_id": "MDQ6VXNlcjQyMzU5ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/4235983?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rsandifo", "html_url": "https://github.com/rsandifo", "followers_url": "https://api.github.com/users/rsandifo/followers", "following_url": "https://api.github.com/users/rsandifo/following{/other_user}", "gists_url": "https://api.github.com/users/rsandifo/gists{/gist_id}", "starred_url": "https://api.github.com/users/rsandifo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rsandifo/subscriptions", "organizations_url": "https://api.github.com/users/rsandifo/orgs", "repos_url": "https://api.github.com/users/rsandifo/repos", "events_url": "https://api.github.com/users/rsandifo/events{/privacy}", "received_events_url": "https://api.github.com/users/rsandifo/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "bf53d4b89ea5119786ccbb5184083363e27cc22c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bf53d4b89ea5119786ccbb5184083363e27cc22c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bf53d4b89ea5119786ccbb5184083363e27cc22c"}], "stats": {"total": 29, "additions": 11, "deletions": 18}, "files": [{"sha": "625a880d5519eec45adb9e6d5859e2b46a127e2d", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/35e519c48459fbcd3e0e70844ef6f87a7eeb50c5/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/35e519c48459fbcd3e0e70844ef6f87a7eeb50c5/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=35e519c48459fbcd3e0e70844ef6f87a7eeb50c5", "patch": "@@ -1,3 +1,8 @@\n+2014-01-30  Richard Sandiford  <rdsandiford@googlemail.com>\n+\n+\tPR c++/58708\n+\t* parser.c (make_string_pack): Use double_int::from_buffer.\n+\n 2014-01-30  Marek Polacek  <polacek@redhat.com>\n \n \tPR c/59940"}, {"sha": "a53597d205e5bfbb4b17fbc5ec929bb85ae3e2eb", "filename": "gcc/cp/parser.c", "status": "modified", "additions": 6, "deletions": 18, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/35e519c48459fbcd3e0e70844ef6f87a7eeb50c5/gcc%2Fcp%2Fparser.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/35e519c48459fbcd3e0e70844ef6f87a7eeb50c5/gcc%2Fcp%2Fparser.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fparser.c?ref=35e519c48459fbcd3e0e70844ef6f87a7eeb50c5", "patch": "@@ -3808,7 +3808,8 @@ make_string_pack (tree value)\n {\n   tree charvec;\n   tree argpack = make_node (NONTYPE_ARGUMENT_PACK);\n-  const char *str = TREE_STRING_POINTER (value);\n+  const unsigned char *str\n+    = (const unsigned char *) TREE_STRING_POINTER (value);\n   int sz = TREE_INT_CST_LOW (TYPE_SIZE_UNIT (TREE_TYPE (TREE_TYPE (value))));\n   int len = TREE_STRING_LENGTH (value) / sz - 1;\n   tree argvec = make_tree_vec (2);\n@@ -3821,23 +3822,10 @@ make_string_pack (tree value)\n \n   /* Fill in CHARVEC with all of the parameters.  */\n   charvec = make_tree_vec (len);\n-  if (sz == 1)\n-    {\n-      for (int i = 0; i < len; ++i)\n-\tTREE_VEC_ELT (charvec, i) = build_int_cst (str_char_type_node, str[i]);\n-    }\n-  else if (sz == 2)\n-    {\n-      const uint16_t *num = (const uint16_t *)str;\n-      for (int i = 0; i < len; ++i)\n-\tTREE_VEC_ELT (charvec, i) = build_int_cst (str_char_type_node, num[i]);\n-    }\n-  else if (sz == 4)\n-    {\n-      const uint32_t *num = (const uint32_t *)str;\n-      for (int i = 0; i < len; ++i)\n-\tTREE_VEC_ELT (charvec, i) = build_int_cst (str_char_type_node, num[i]);\n-    }\n+  for (int i = 0; i < len; ++i)\n+    TREE_VEC_ELT (charvec, i)\n+      = double_int_to_tree (str_char_type_node,\n+\t\t\t    double_int::from_buffer (str + i * sz, sz));\n \n   /* Build the argument packs.  */\n   SET_ARGUMENT_PACK_ARGS (argpack, charvec);"}]}