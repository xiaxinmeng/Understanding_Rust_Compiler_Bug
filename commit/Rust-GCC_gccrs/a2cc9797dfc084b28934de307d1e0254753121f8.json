{"sha": "a2cc9797dfc084b28934de307d1e0254753121f8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTJjYzk3OTdkZmMwODRiMjg5MzRkZTMwN2QxZTAyNTQ3NTMxMjFmOA==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2014-07-29T14:02:19Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2014-07-29T14:02:19Z"}, "message": "[multiple changes]\n\n2014-07-29  Ed Schonberg  <schonberg@adacore.com>\n\n\t* exp_ch5.adb (Expand_N_Assignment_Statement): If the target type\n\tis a null-excluding access type, do not generate a constraint\n\tcheck if Suppress_Assignment_Checks is set on assignment node.\n\t* exp_ch9.adb (Build_Simple_Entry_Call): If actual is an out\n\tparameter of a null-excluding access type, there is access check\n\ton entry, so set Suppress_Assignment_Checks on generated statement\n\tthat assigns actual to parameter block.\n\t* sinfo.ads: Document additional use of Suppress_Assignment_Checks.\n\n2014-07-29  Javier Miranda  <miranda@adacore.com>\n\n\t* types.ads (Kind): Renamed as Rkind to avoid crashing ASIS.\n\t* exp_ch11.adb, tbuild.adb Update references to Types.Kind\n\n2014-07-29  Ed Schonberg  <schonberg@adacore.com>\n\n\t* par-ch3.adb (P_Type_Declaration): Create end label for\n\tlimited record declaration, previously omitted.\n\n2014-07-29  Robert Dewar  <dewar@adacore.com>\n\n\t* gnat_rm.texi: Complete list of implementation pragmas Add\n\tdummy sections for impl pragmas needing documentation.\n\nFrom-SVN: r213195", "tree": {"sha": "9723a3f297dac2fd5458dd36e7bef0a0d2bf8cdf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9723a3f297dac2fd5458dd36e7bef0a0d2bf8cdf"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a2cc9797dfc084b28934de307d1e0254753121f8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a2cc9797dfc084b28934de307d1e0254753121f8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a2cc9797dfc084b28934de307d1e0254753121f8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a2cc9797dfc084b28934de307d1e0254753121f8/comments", "author": null, "committer": null, "parents": [{"sha": "effdbb7d578ab9e8122f17b7249c107a93e685ba", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/effdbb7d578ab9e8122f17b7249c107a93e685ba", "html_url": "https://github.com/Rust-GCC/gccrs/commit/effdbb7d578ab9e8122f17b7249c107a93e685ba"}], "stats": {"total": 160, "additions": 105, "deletions": 55}, "files": [{"sha": "618eaa90495321b42963288ca61dc079f5620c93", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a2cc9797dfc084b28934de307d1e0254753121f8/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a2cc9797dfc084b28934de307d1e0254753121f8/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=a2cc9797dfc084b28934de307d1e0254753121f8", "patch": "@@ -1,3 +1,14 @@\n+2014-07-29  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* exp_ch5.adb (Expand_N_Assignment_Statement): If the target type\n+\tis a null-excluding access type, do not generate a constraint\n+\tcheck if Suppress_Assignment_Checks is set on assignment node.\n+\t* exp_ch9.adb (Build_Simple_Entry_Call): If actual is an out\n+\tparameter of a null-excluding access type, there is access check\n+\ton entry, so set Suppress_Assignment_Checks on generated statement\n+\tthat assigns actual to parameter block.\n+\t* sinfo.ads: Document additional use of Suppress_Assignment_Checks.\n+\n 2014-07-29  Robert Dewar  <dewar@adacore.com>\n \n \t* gnat_rm.texi: Change theta to @ in documentation of aspect"}, {"sha": "a464aaa735c68b7b5848aaee042bf99b46c14dea", "filename": "gcc/ada/exp_ch11.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a2cc9797dfc084b28934de307d1e0254753121f8/gcc%2Fada%2Fexp_ch11.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a2cc9797dfc084b28934de307d1e0254753121f8/gcc%2Fada%2Fexp_ch11.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch11.adb?ref=a2cc9797dfc084b28934de307d1e0254753121f8", "patch": "@@ -2068,7 +2068,7 @@ package body Exp_Ch11 is\n \n    function Get_RT_Exception_Entity (R : RT_Exception_Code) return Entity_Id is\n    begin\n-      case Kind (R) is\n+      case Rkind (R) is\n          when CE_Reason => return Standard_Constraint_Error;\n          when PE_Reason => return Standard_Program_Error;\n          when SE_Reason => return Standard_Storage_Error;"}, {"sha": "435f652de292470d0c2898274fddd18fdeec64aa", "filename": "gcc/ada/exp_ch5.adb", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a2cc9797dfc084b28934de307d1e0254753121f8/gcc%2Fada%2Fexp_ch5.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a2cc9797dfc084b28934de307d1e0254753121f8/gcc%2Fada%2Fexp_ch5.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch5.adb?ref=a2cc9797dfc084b28934de307d1e0254753121f8", "patch": "@@ -2001,6 +2001,7 @@ package body Exp_Ch5 is\n       if Is_Access_Type (Typ)\n         and then Can_Never_Be_Null (Etype (Lhs))\n         and then not Can_Never_Be_Null (Etype (Rhs))\n+        and then not Suppress_Assignment_Checks (N)\n       then\n          Apply_Constraint_Check (Rhs, Etype (Lhs));\n       end if;"}, {"sha": "2152a0a9be6e27b6e32cf6415e84a0616522c901", "filename": "gcc/ada/exp_ch9.adb", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a2cc9797dfc084b28934de307d1e0254753121f8/gcc%2Fada%2Fexp_ch9.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a2cc9797dfc084b28934de307d1e0254753121f8/gcc%2Fada%2Fexp_ch9.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch9.adb?ref=a2cc9797dfc084b28934de307d1e0254753121f8", "patch": "@@ -4755,7 +4755,8 @@ package body Exp_Ch9 is\n                   --  case of limited type. We cannot assign it unless the\n                   --  Assignment_OK flag is set first. An out formal of an\n                   --  access type must also be initialized from the actual,\n-                  --  as stated in RM 6.4.1 (13).\n+                  --  as stated in RM 6.4.1 (13), but no constraint is applied\n+                  --  before the call.\n \n                   if Ekind (Formal) /= E_Out_Parameter\n                     or else Is_Access_Type (Etype (Formal))\n@@ -4767,6 +4768,7 @@ package body Exp_Ch9 is\n                        Make_Assignment_Statement (Loc,\n                          Name => N_Var,\n                          Expression => Relocate_Node (Actual)));\n+                     Set_Suppress_Assignment_Checks (Last (Stats));\n                   end if;\n \n                   Append (N_Node, Decls);"}, {"sha": "d06361fa009e272aa4cd139f1a0cbe1a0a07e32e", "filename": "gcc/ada/gnat_rm.texi", "status": "modified", "additions": 34, "deletions": 5, "changes": 39, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a2cc9797dfc084b28934de307d1e0254753121f8/gcc%2Fada%2Fgnat_rm.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a2cc9797dfc084b28934de307d1e0254753121f8/gcc%2Fada%2Fgnat_rm.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnat_rm.texi?ref=a2cc9797dfc084b28934de307d1e0254753121f8", "patch": "@@ -112,7 +112,7 @@ Implementation Defined Pragmas\n * Pragma Assertion_Policy::\n * Pragma Assume::\n * Pragma Assume_No_Invalid_Values::\n-* Pragma Ast_Entry::\n+* Pragma AST_Entry::\n * Pragma Async_Readers::\n * Pragma Async_Writers::\n * Pragma Attribute_Definition::\n@@ -196,6 +196,7 @@ Implementation Defined Pragmas\n * Pragma Linker_Constructor::\n * Pragma Linker_Destructor::\n * Pragma Linker_Section::\n+* Pragma Lock_Free::\n * Pragma Long_Float::\n * Pragma Loop_Invariant::\n * Pragma Loop_Optimize::\n@@ -234,6 +235,7 @@ Implementation Defined Pragmas\n * Pragma Provide_Shift_Operators::\n * Pragma Psect_Object::\n * Pragma Pure_Function::\n+* Pragma Rational::\n * Pragma Ravenscar::\n * Pragma Refined_Depends::\n * Pragma Refined_Global::\n@@ -976,7 +978,7 @@ consideration, the use of these pragmas should be minimized.\n * Pragma Assertion_Policy::\n * Pragma Assume::\n * Pragma Assume_No_Invalid_Values::\n-* Pragma Ast_Entry::\n+* Pragma AST_Entry::\n * Pragma Async_Readers::\n * Pragma Async_Writers::\n * Pragma Attribute_Definition::\n@@ -1060,6 +1062,7 @@ consideration, the use of these pragmas should be minimized.\n * Pragma Linker_Constructor::\n * Pragma Linker_Destructor::\n * Pragma Linker_Section::\n+* Pragma Lock_Free::\n * Pragma Long_Float::\n * Pragma Loop_Invariant::\n * Pragma Loop_Optimize::\n@@ -1098,6 +1101,7 @@ consideration, the use of these pragmas should be minimized.\n * Pragma Provide_Shift_Operators::\n * Pragma Psect_Object::\n * Pragma Pure_Function::\n+* Pragma Rational::\n * Pragma Ravenscar::\n * Pragma Refined_Depends::\n * Pragma Refined_Global::\n@@ -1673,10 +1677,10 @@ section 7.1.2.\n For the description of this pragma, see SPARK 2014 Reference Manual,\n section 7.1.2.\n \n-@node Pragma Ast_Entry\n-@unnumberedsec Pragma Ast_Entry\n+@node Pragma AST_Entry\n+@unnumberedsec Pragma AST_Entry\n @cindex OpenVMS\n-@findex Ast_Entry\n+@findex AST_Entry\n @noindent\n Syntax:\n @smallexample @c ada\n@@ -4488,6 +4492,13 @@ package IO_Card is\n end IO_Card;\n @end smallexample\n \n+@node Pragma Lock_Free\n+@unnumberedsec Pragma Locl_Free\n+@findex Lock_Free\n+@noindent\n+Syntax:\n+PLEASE ADD DOCUMENTATION HERE???\n+\n @node Pragma Long_Float\n @unnumberedsec Pragma Long_Float\n @cindex OpenVMS\n@@ -6089,6 +6100,24 @@ function is also considered pure from an optimization point of view, but the\n unit is not a Pure unit in the categorization sense. So for example, a function\n thus marked is free to @code{with} non-pure units.\n \n+@node Pragma Rational\n+@unnumberedsec Pragma Rational\n+@findex Rational\n+@noindent\n+Syntax:\n+\n+@smallexample @c ada\n+pragma Rational;\n+@end smallexample\n+\n+@noindent\n+This pragma is considered obsolescent, but is retained for\n+compatibility purposes. It is equivalent to:\n+\n+@smallexample @c ada\n+pragma Profile (Rational);\n+@end smallexample\n+\n @node Pragma Ravenscar\n @unnumberedsec Pragma Ravenscar\n @findex Pragma Ravenscar"}, {"sha": "7e4dc8f2623c6b0d45ebcdadb118b61a1fc86441", "filename": "gcc/ada/par-ch3.adb", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a2cc9797dfc084b28934de307d1e0254753121f8/gcc%2Fada%2Fpar-ch3.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a2cc9797dfc084b28934de307d1e0254753121f8/gcc%2Fada%2Fpar-ch3.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fpar-ch3.adb?ref=a2cc9797dfc084b28934de307d1e0254753121f8", "patch": "@@ -652,6 +652,10 @@ package body Ch3 is\n \n                   Typedef_Node := P_Record_Definition;\n                   Set_Limited_Present (Typedef_Node, True);\n+                  End_Labl := Make_Identifier (Token_Ptr, Chars (Ident_Node));\n+                  Set_Comes_From_Source (End_Labl, False);\n+\n+                  Set_End_Label (Typedef_Node, End_Labl);\n \n                --  Ada 2005 (AI-251): LIMITED INTERFACE\n "}, {"sha": "0da8b6ac0e990d0276109e38e94998861952a060", "filename": "gcc/ada/sinfo.ads", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a2cc9797dfc084b28934de307d1e0254753121f8/gcc%2Fada%2Fsinfo.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a2cc9797dfc084b28934de307d1e0254753121f8/gcc%2Fada%2Fsinfo.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsinfo.ads?ref=a2cc9797dfc084b28934de307d1e0254753121f8", "patch": "@@ -2052,7 +2052,9 @@ package Sinfo is\n    --    and range checks in cases where the generated code knows that the\n    --    value being assigned is in range and satisfies any predicate. Also\n    --    can be set in N_Object_Declaration nodes, to similarly suppress any\n-   --    checks on the initializing value.\n+   --    checks on the initializing value. In assignment statements it also\n+   --    suppresses access checks in the generated code for out- and in-out\n+   --    parameters in entry calls.\n \n    --  Suppress_Loop_Warnings (Flag17-Sem)\n    --    Used in N_Loop_Statement node to indicate that warnings within the"}, {"sha": "cd535cf9ab55170c6b85d75b50b4a04fd629756c", "filename": "gcc/ada/tbuild.adb", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a2cc9797dfc084b28934de307d1e0254753121f8/gcc%2Fada%2Ftbuild.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a2cc9797dfc084b28934de307d1e0254753121f8/gcc%2Fada%2Ftbuild.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ftbuild.adb?ref=a2cc9797dfc084b28934de307d1e0254753121f8", "patch": "@@ -434,7 +434,7 @@ package body Tbuild is\n       Reason    : RT_Exception_Code) return Node_Id\n    is\n    begin\n-      pragma Assert (Kind (Reason) = CE_Reason);\n+      pragma Assert (Rkind (Reason) = CE_Reason);\n       return\n         Make_Raise_Constraint_Error (Sloc,\n           Condition => Condition,\n@@ -451,7 +451,7 @@ package body Tbuild is\n       Reason    : RT_Exception_Code) return Node_Id\n    is\n    begin\n-      pragma Assert (Kind (Reason) = PE_Reason);\n+      pragma Assert (Rkind (Reason) = PE_Reason);\n       return\n         Make_Raise_Program_Error (Sloc,\n           Condition => Condition,\n@@ -468,7 +468,7 @@ package body Tbuild is\n       Reason    : RT_Exception_Code) return Node_Id\n    is\n    begin\n-      pragma Assert (Kind (Reason) = SE_Reason);\n+      pragma Assert (Rkind (Reason) = SE_Reason);\n       return\n         Make_Raise_Storage_Error (Sloc,\n           Condition => Condition,"}, {"sha": "bc2801026620fdce1faa27d487489fae454b8223", "filename": "gcc/ada/types.ads", "status": "modified", "additions": 45, "deletions": 44, "changes": 89, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a2cc9797dfc084b28934de307d1e0254753121f8/gcc%2Fada%2Ftypes.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a2cc9797dfc084b28934de307d1e0254753121f8/gcc%2Fada%2Ftypes.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ftypes.ads?ref=a2cc9797dfc084b28934de307d1e0254753121f8", "patch": "@@ -855,17 +855,18 @@ package Types is\n       CE_Length_Check_Failed,            -- 07\n       CE_Null_Exception_Id,              -- 08\n       CE_Null_Not_Allowed,               -- 09\n+\n       CE_Overflow_Check_Failed,          -- 10\n       CE_Partition_Check_Failed,         -- 11\n       CE_Range_Check_Failed,             -- 12\n       CE_Tag_Check_Failed,               -- 13\n-\n       PE_Access_Before_Elaboration,      -- 14\n       PE_Accessibility_Check_Failed,     -- 15\n       PE_Address_Of_Intrinsic,           -- 16\n       PE_Aliased_Parameters,             -- 17\n       PE_All_Guards_Closed,              -- 18\n       PE_Bad_Predicated_Generic_Type,    -- 19\n+\n       PE_Current_Task_In_Entry_Body,     -- 20\n       PE_Duplicated_Entry_Address,       -- 21\n       PE_Explicit_Raise,                 -- 22\n@@ -876,60 +877,60 @@ package Types is\n       PE_Overlaid_Controlled_Object,     -- 27\n       PE_Potentially_Blocking_Operation, -- 28\n       PE_Stubbed_Subprogram_Called,      -- 29\n+\n       PE_Unchecked_Union_Restriction,    -- 30\n       PE_Non_Transportable_Actual,       -- 31\n-\n       SE_Empty_Storage_Pool,             -- 32\n       SE_Explicit_Raise,                 -- 33\n       SE_Infinite_Recursion,             -- 34\n       SE_Object_Too_Large,               -- 35\n-\n       PE_Stream_Operation_Not_Allowed);  -- 36\n \n    Last_Reason_Code : constant := 36;\n    --  Last reason code\n \n    type Reason_Kind is (CE_Reason, PE_Reason, SE_Reason);\n-\n-   Kind : array (RT_Exception_Code range <>) of Reason_Kind :=\n-     (CE_Access_Check_Failed            => CE_Reason,\n-      CE_Access_Parameter_Is_Null       => CE_Reason,\n-      CE_Discriminant_Check_Failed      => CE_Reason,\n-      CE_Divide_By_Zero                 => CE_Reason,\n-      CE_Explicit_Raise                 => CE_Reason,\n-      CE_Index_Check_Failed             => CE_Reason,\n-      CE_Invalid_Data                   => CE_Reason,\n-      CE_Length_Check_Failed            => CE_Reason,\n-      CE_Null_Exception_Id              => CE_Reason,\n-      CE_Null_Not_Allowed               => CE_Reason,\n-      CE_Overflow_Check_Failed          => CE_Reason,\n-      CE_Partition_Check_Failed         => CE_Reason,\n-      CE_Range_Check_Failed             => CE_Reason,\n-      CE_Tag_Check_Failed               => CE_Reason,\n-\n-      PE_Access_Before_Elaboration      => PE_Reason,\n-      PE_Accessibility_Check_Failed     => PE_Reason,\n-      PE_Address_Of_Intrinsic           => PE_Reason,\n-      PE_Aliased_Parameters             => PE_Reason,\n-      PE_All_Guards_Closed              => PE_Reason,\n-      PE_Bad_Predicated_Generic_Type    => PE_Reason,\n-      PE_Current_Task_In_Entry_Body     => PE_Reason,\n-      PE_Duplicated_Entry_Address       => PE_Reason,\n-      PE_Explicit_Raise                 => PE_Reason,\n-      PE_Finalize_Raised_Exception      => PE_Reason,\n-      PE_Implicit_Return                => PE_Reason,\n-      PE_Misaligned_Address_Value       => PE_Reason,\n-      PE_Missing_Return                 => PE_Reason,\n-      PE_Overlaid_Controlled_Object     => PE_Reason,\n-      PE_Potentially_Blocking_Operation => PE_Reason,\n-      PE_Stubbed_Subprogram_Called      => PE_Reason,\n-      PE_Unchecked_Union_Restriction    => PE_Reason,\n-      PE_Non_Transportable_Actual       => PE_Reason,\n-      PE_Stream_Operation_Not_Allowed   => PE_Reason,\n-\n-      SE_Empty_Storage_Pool             => SE_Reason,\n-      SE_Explicit_Raise                 => SE_Reason,\n-      SE_Infinite_Recursion             => SE_Reason,\n-      SE_Object_Too_Large               => SE_Reason);\n+   --  Categorization of reason codes by exception raised\n+\n+   Rkind : array (RT_Exception_Code range <>) of Reason_Kind :=\n+             (CE_Access_Check_Failed            => CE_Reason,\n+              CE_Access_Parameter_Is_Null       => CE_Reason,\n+              CE_Discriminant_Check_Failed      => CE_Reason,\n+              CE_Divide_By_Zero                 => CE_Reason,\n+              CE_Explicit_Raise                 => CE_Reason,\n+              CE_Index_Check_Failed             => CE_Reason,\n+              CE_Invalid_Data                   => CE_Reason,\n+              CE_Length_Check_Failed            => CE_Reason,\n+              CE_Null_Exception_Id              => CE_Reason,\n+              CE_Null_Not_Allowed               => CE_Reason,\n+              CE_Overflow_Check_Failed          => CE_Reason,\n+              CE_Partition_Check_Failed         => CE_Reason,\n+              CE_Range_Check_Failed             => CE_Reason,\n+              CE_Tag_Check_Failed               => CE_Reason,\n+\n+              PE_Access_Before_Elaboration      => PE_Reason,\n+              PE_Accessibility_Check_Failed     => PE_Reason,\n+              PE_Address_Of_Intrinsic           => PE_Reason,\n+              PE_Aliased_Parameters             => PE_Reason,\n+              PE_All_Guards_Closed              => PE_Reason,\n+              PE_Bad_Predicated_Generic_Type    => PE_Reason,\n+              PE_Current_Task_In_Entry_Body     => PE_Reason,\n+              PE_Duplicated_Entry_Address       => PE_Reason,\n+              PE_Explicit_Raise                 => PE_Reason,\n+              PE_Finalize_Raised_Exception      => PE_Reason,\n+              PE_Implicit_Return                => PE_Reason,\n+              PE_Misaligned_Address_Value       => PE_Reason,\n+              PE_Missing_Return                 => PE_Reason,\n+              PE_Overlaid_Controlled_Object     => PE_Reason,\n+              PE_Potentially_Blocking_Operation => PE_Reason,\n+              PE_Stubbed_Subprogram_Called      => PE_Reason,\n+              PE_Unchecked_Union_Restriction    => PE_Reason,\n+              PE_Non_Transportable_Actual       => PE_Reason,\n+              PE_Stream_Operation_Not_Allowed   => PE_Reason,\n+\n+              SE_Empty_Storage_Pool             => SE_Reason,\n+              SE_Explicit_Raise                 => SE_Reason,\n+              SE_Infinite_Recursion             => SE_Reason,\n+              SE_Object_Too_Large               => SE_Reason);\n \n end Types;"}]}