{"sha": "3041f3be0262e4f34faf464c0de531d06428aafa", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzA0MWYzYmUwMjYyZTRmMzRmYWY0NjRjMGRlNTMxZDA2NDI4YWFmYQ==", "commit": {"author": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1992-10-06T00:26:09Z"}, "committer": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1992-10-06T00:26:09Z"}, "message": "(NO_DOLLAR_IN_LABEL): Undef because gas understands dollars in labels and gdb expects them if configured for gas.\n\n(NO_DOLLAR_IN_LABEL): Undef because gas understands dollars\nin labels and gdb expects them if configured for gas.\n(STARTFILE_SPEC): Include huge.o to be compatible with native cc.\n(ASM_OUTPUT_CONSTRUCTOR, ASM_OUTPUT_DESTRUCTOR):\n(CTOR_LISTS_DEFINED_EXTERNALLY, DO_GLOBAL_DTORS_BODY):\n(STARTFILE_SPEC): Conditionally redefine for a collectless version\nof gcc if USE_COLLECT2 is not defined.\n\nFrom-SVN: r2335", "tree": {"sha": "3a090b59986d946d22ade8bbeb427854f4787796", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3a090b59986d946d22ade8bbeb427854f4787796"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3041f3be0262e4f34faf464c0de531d06428aafa", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3041f3be0262e4f34faf464c0de531d06428aafa", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3041f3be0262e4f34faf464c0de531d06428aafa", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3041f3be0262e4f34faf464c0de531d06428aafa/comments", "author": null, "committer": null, "parents": [{"sha": "eef80fde878cdfdd60a2157a6c336dfe5513a1cc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/eef80fde878cdfdd60a2157a6c336dfe5513a1cc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/eef80fde878cdfdd60a2157a6c336dfe5513a1cc"}], "stats": {"total": 45, "additions": 43, "deletions": 2}, "files": [{"sha": "5e801245660ea946697163e28374568cbdf3ea8a", "filename": "gcc/config/m68k/dpx2g.h", "status": "modified", "additions": 43, "deletions": 2, "changes": 45, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3041f3be0262e4f34faf464c0de531d06428aafa/gcc%2Fconfig%2Fm68k%2Fdpx2g.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3041f3be0262e4f34faf464c0de531d06428aafa/gcc%2Fconfig%2Fm68k%2Fdpx2g.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm68k%2Fdpx2g.h?ref=3041f3be0262e4f34faf464c0de531d06428aafa", "patch": "@@ -5,6 +5,44 @@\n #define USE_GAS\n #include \"dpx2.h\"\n \n+#ifndef USE_COLLECT2\n+/* We use set vectors for the constructors/destructors. */ \n+\n+#undef ASM_OUTPUT_CONSTRUCTOR\n+#undef ASM_OUTPUT_DESTRUCTOR\n+\n+/* Although the gas we use can create .ctor and .dtor sections from N_SETT\n+   stabs, it does not support section directives, so we need to have the loader\n+   define the lists.\n+ */\n+#define CTOR_LISTS_DEFINED_EXTERNALLY\n+\n+/* similar to default, but allows for the table defined by ld with gcc.ifile. \n+   nptrs is always 0.  So we need to instead check that __DTOR_LIST__[1] != 0.\n+   The old check is left in so that the same macro can be used if and when  \n+   a future version of gas does support section directives. */\n+\n+#define DO_GLOBAL_DTORS_BODY {int nptrs = *(int *)__DTOR_LIST__; int i; \\\n+  if (nptrs == -1 || (__DTOR_LIST__[0] == 0 && __DTOR_LIST__[1] != 0))  \\\n+    for (nptrs = 0; __DTOR_LIST__[nptrs + 1] != 0; nptrs++); \t\t\\\n+  for (i = nptrs; i >= 1; i--)\t\t\t\t\t\t\\\n+    __DTOR_LIST__[i] (); }\n+\n+#undef STARTFILE_SPEC\n+#define STARTFILE_SPEC \\\n+  \"%{!r:gcc.ifile%s}\\\n+   %{pg:gcrt0.o%s}%{!pg:%{p:mcrt0.o%s}%{!p:crt0.o%s}}\\\n+  huge.o%s\"\n+\n+#else /* !USE_COLLECT2 */\n+\n+#undef STARTFILE_SPEC\n+#define STARTFILE_SPEC \\\n+  \"%{pg:gcrt0.o%s}%{!pg:%{p:mcrt0.o%s}%{!p:crt0.o%s}}\\\n+  huge.o%s\"\n+\n+#endif /* !USE_COLLECT2 */\n+\n \n /* GAS want's DBX debugging information.  */\n #undef SDB_DEBUGGING_INFO\n@@ -17,11 +55,14 @@\n  */\n #undef EXTRA_SECTION_FUNCTIONS\n #undef EXTRA_SECTIONS\n-\n+/* Gas understands dollars in labels. */\n+#undef NO_DOLLAR_IN_LABEL\n /* GAS does not understand .ident so don't output anything for #ident.  */\n #undef ASM_OUTPUT_IDENT\n \n-/* Put const's in the text section.  */\n+/*\n+ * put const's in the text section\n+ */\n #define const_section()  text_section()\n #define fini_section() while (0)\n \t\t\t       "}]}