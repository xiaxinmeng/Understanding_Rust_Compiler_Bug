{"sha": "1f1e8172a80d323ea1b6f2843185a5fb2226e2ac", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWYxZTgxNzJhODBkMzIzZWExYjZmMjg0MzE4NWE1ZmIyMjI2ZTJhYw==", "commit": {"author": {"name": "Jim Wilson", "email": "wilson@gcc.gnu.org", "date": "1993-04-06T19:38:34Z"}, "committer": {"name": "Jim Wilson", "email": "wilson@gcc.gnu.org", "date": "1993-04-06T19:38:34Z"}, "message": "(loop_iterations): When computing comparison_value, use\nreg_set_p to identify instructions that modify it.\n\nFrom-SVN: r4036", "tree": {"sha": "b0fbf2dc41b326863269226e959e0c282703f2ad", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b0fbf2dc41b326863269226e959e0c282703f2ad"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1f1e8172a80d323ea1b6f2843185a5fb2226e2ac", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1f1e8172a80d323ea1b6f2843185a5fb2226e2ac", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1f1e8172a80d323ea1b6f2843185a5fb2226e2ac", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1f1e8172a80d323ea1b6f2843185a5fb2226e2ac/comments", "author": null, "committer": null, "parents": [{"sha": "fdd79c58a2938ccd78e94332a102e74865d2a964", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fdd79c58a2938ccd78e94332a102e74865d2a964", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fdd79c58a2938ccd78e94332a102e74865d2a964"}], "stats": {"total": 17, "additions": 11, "deletions": 6}, "files": [{"sha": "d93e3bac95a307ab7a8d5e60125f5f3ded8703fd", "filename": "gcc/unroll.c", "status": "modified", "additions": 11, "deletions": 6, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1f1e8172a80d323ea1b6f2843185a5fb2226e2ac/gcc%2Funroll.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1f1e8172a80d323ea1b6f2843185a5fb2226e2ac/gcc%2Funroll.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Funroll.c?ref=1f1e8172a80d323ea1b6f2843185a5fb2226e2ac", "patch": "@@ -3039,14 +3039,19 @@ loop_iterations (loop_start, loop_end)\n \t    break;\n \n \t  else if (GET_RTX_CLASS (GET_CODE (insn)) == 'i'\n-\t\t   && (set = single_set (insn))\n-\t\t   && (SET_DEST (set) == comparison_value))\n+\t\t   && reg_set_p (comparison_value, insn))\n \t    {\n-\t      rtx note = find_reg_note (insn, REG_EQUAL, NULL_RTX);\n-\n-\t      if (note && GET_CODE (XEXP (note, 0)) != EXPR_LIST)\n-\t\tcomparison_value = XEXP (note, 0);\n+\t      /* We found the last insn before the loop that sets the register.\n+\t\t If it sets the entire register, and has a REG_EQUAL note,\n+\t\t then use the value of the REG_EQUAL note.  */\n+\t      if ((set = single_set (insn))\n+\t\t  && (SET_DEST (set) == comparison_value))\n+\t\t{\n+\t\t  rtx note = find_reg_note (insn, REG_EQUAL, NULL_RTX);\n \n+\t\t  if (note && GET_CODE (XEXP (note, 0)) != EXPR_LIST)\n+\t\t    comparison_value = XEXP (note, 0);\n+\t\t}\n \t      break;\n \t    }\n \t}"}]}