{"sha": "d8b3b4f4b22e2986a83bce7870d9726fa725ab4d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDhiM2I0ZjRiMjJlMjk4NmE4M2JjZTc4NzBkOTcyNmZhNzI1YWI0ZA==", "commit": {"author": {"name": "Joseph Myers", "email": "joseph@codesourcery.com", "date": "2018-11-01T17:05:17Z"}, "committer": {"name": "Joseph Myers", "email": "jsm28@gcc.gnu.org", "date": "2018-11-01T17:05:17Z"}, "message": "Avoid stray [] in ia64 assembler test.\n\nNoted in <https://gcc.gnu.org/ml/gcc-patches/2018-11/msg00034.html>.\nFix by adding extra newline in test input is analogous to many such\nnewlines added in cases where argument to a newly added AC_LANG_SOURCE\nhad a preprocessor directive on its last line.\n\n\t* configure.ac (gcc_cv_as_ia64_ltoffx_ldxmov_relocs): Add newline\n\tat end of assembler input text.\n\t* configure: Regenerate.\n\nFrom-SVN: r265724", "tree": {"sha": "4fffa356a3380498f939eb31d65e4e55c30fa07f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4fffa356a3380498f939eb31d65e4e55c30fa07f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d8b3b4f4b22e2986a83bce7870d9726fa725ab4d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d8b3b4f4b22e2986a83bce7870d9726fa725ab4d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d8b3b4f4b22e2986a83bce7870d9726fa725ab4d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d8b3b4f4b22e2986a83bce7870d9726fa725ab4d/comments", "author": {"login": "jsm28", "id": 10537793, "node_id": "MDQ6VXNlcjEwNTM3Nzkz", "avatar_url": "https://avatars.githubusercontent.com/u/10537793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsm28", "html_url": "https://github.com/jsm28", "followers_url": "https://api.github.com/users/jsm28/followers", "following_url": "https://api.github.com/users/jsm28/following{/other_user}", "gists_url": "https://api.github.com/users/jsm28/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsm28/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsm28/subscriptions", "organizations_url": "https://api.github.com/users/jsm28/orgs", "repos_url": "https://api.github.com/users/jsm28/repos", "events_url": "https://api.github.com/users/jsm28/events{/privacy}", "received_events_url": "https://api.github.com/users/jsm28/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jsm28", "id": 10537793, "node_id": "MDQ6VXNlcjEwNTM3Nzkz", "avatar_url": "https://avatars.githubusercontent.com/u/10537793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsm28", "html_url": "https://github.com/jsm28", "followers_url": "https://api.github.com/users/jsm28/followers", "following_url": "https://api.github.com/users/jsm28/following{/other_user}", "gists_url": "https://api.github.com/users/jsm28/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsm28/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsm28/subscriptions", "organizations_url": "https://api.github.com/users/jsm28/orgs", "repos_url": "https://api.github.com/users/jsm28/repos", "events_url": "https://api.github.com/users/jsm28/events{/privacy}", "received_events_url": "https://api.github.com/users/jsm28/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "14408ada007349407914a59351271ce4e738bcaf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/14408ada007349407914a59351271ce4e738bcaf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/14408ada007349407914a59351271ce4e738bcaf"}], "stats": {"total": 12, "additions": 10, "deletions": 2}, "files": [{"sha": "003979b4ef13b0d43ae46edd3a6b89be9ab280ea", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8b3b4f4b22e2986a83bce7870d9726fa725ab4d/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8b3b4f4b22e2986a83bce7870d9726fa725ab4d/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=d8b3b4f4b22e2986a83bce7870d9726fa725ab4d", "patch": "@@ -1,3 +1,9 @@\n+2018-11-01  Joseph Myers  <joseph@codesourcery.com>\n+\n+\t* configure.ac (gcc_cv_as_ia64_ltoffx_ldxmov_relocs): Add newline\n+\tat end of assembler input text.\n+\t* configure: Regenerate.\n+\n 2018-11-01  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR tree-optimization/87826"}, {"sha": "7201e0b3fc224df936a64727d6f83f11291f8319", "filename": "gcc/configure", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8b3b4f4b22e2986a83bce7870d9726fa725ab4d/gcc%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8b3b4f4b22e2986a83bce7870d9726fa725ab4d/gcc%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfigure?ref=d8b3b4f4b22e2986a83bce7870d9726fa725ab4d", "patch": "@@ -26646,7 +26646,8 @@ fi\n     $as_echo '\t.text\n \taddl r15 = @ltoffx(x#), gp\n \t;;\n-\tld8.mov r16 = [r15], x#'[] > conftest.s\n+\tld8.mov r16 = [r15], x#\n+' > conftest.s\n     if { ac_try='$gcc_cv_as $gcc_cv_as_flags  -o conftest.o conftest.s >&5'\n   { { eval echo \"\\\"\\$as_me\\\":${as_lineno-$LINENO}: \\\"$ac_try\\\"\"; } >&5\n   (eval $ac_try) 2>&5"}, {"sha": "a323e0c393af6b8e36dbbe2fe9599d5f446fa9d6", "filename": "gcc/configure.ac", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8b3b4f4b22e2986a83bce7870d9726fa725ab4d/gcc%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8b3b4f4b22e2986a83bce7870d9726fa725ab4d/gcc%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfigure.ac?ref=d8b3b4f4b22e2986a83bce7870d9726fa725ab4d", "patch": "@@ -4550,7 +4550,8 @@ gd:\n [\t.text\n \taddl r15 = @ltoffx(x#), gp\n \t;;\n-\tld8.mov r16 = [[r15]], x#],,\n+\tld8.mov r16 = [[r15]], x#\n+],,\n     [AC_DEFINE(HAVE_AS_LTOFFX_LDXMOV_RELOCS, 1,\n \t  [Define if your assembler supports ltoffx and ldxmov relocations.])])\n "}]}