{"sha": "f7dceb4e658399edfbf8dd0e08ce0c686bfa2c9d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjdkY2ViNGU2NTgzOTllZGZiZjhkZDBlMDhjZTBjNjg2YmZhMmM5ZA==", "commit": {"author": {"name": "Jan Hubicka", "email": "jh@suse.cz", "date": "2020-03-19T23:42:13Z"}, "committer": {"name": "Jan Hubicka", "email": "jh@suse.cz", "date": "2020-03-19T23:42:13Z"}, "message": "Fix cgraph_node::function_symbol availability compuattion [PR94202]\n\nthis fixes ICE in inliner cache sanity check which is caused by very old\nbug in visibility calculation in cgraph_node::function_symbol and\ncgraph_node::function_or_virtual_thunk_symbol.\n\nIn the testcase there is indirect call to a thunk. At begining we correctly\nsee that its body as AVAIL_AVAILABLE but later we inline into the thunk and\nthis turns it to AVAIL_INTERPOSABLE.\n\nThis is because function_symbol incorrectly overwrites availability parameter\nby availability of the alias used in the call within thunk, which is a local\nalias.\n\ngcc/ChangeLog:\n\n2020-03-19  Jan Hubicka  <hubicka@ucw.cz>\n\n\tPR ipa/94202\n\t* cgraph.c (cgraph_node::function_symbol): Fix availability computation.\n\t(cgraph_node::function_or_virtual_thunk_symbol): Likewise.\n\ngcc/testsuite/ChangeLog:\n\n2020-03-19  Jan Hubicka  <hubicka@ucw.cz>\n\n\tPR ipa/94202\n\t* g++.dg/torture/pr94202.C: New test.", "tree": {"sha": "bd112e021c4db6ecd2cf89f3b21c152e0ee55fb9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/bd112e021c4db6ecd2cf89f3b21c152e0ee55fb9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f7dceb4e658399edfbf8dd0e08ce0c686bfa2c9d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f7dceb4e658399edfbf8dd0e08ce0c686bfa2c9d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f7dceb4e658399edfbf8dd0e08ce0c686bfa2c9d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f7dceb4e658399edfbf8dd0e08ce0c686bfa2c9d/comments", "author": null, "committer": null, "parents": [{"sha": "9def91e9f2a7051c9c146f16c1a10d1b25d33b47", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9def91e9f2a7051c9c146f16c1a10d1b25d33b47", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9def91e9f2a7051c9c146f16c1a10d1b25d33b47"}], "stats": {"total": 59, "additions": 43, "deletions": 16}, "files": [{"sha": "44e320626a318ee16ac79236d028b43e28f9084c", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f7dceb4e658399edfbf8dd0e08ce0c686bfa2c9d/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f7dceb4e658399edfbf8dd0e08ce0c686bfa2c9d/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=f7dceb4e658399edfbf8dd0e08ce0c686bfa2c9d", "patch": "@@ -1,3 +1,9 @@\n+2020-03-19  Jan Hubicka  <hubicka@ucw.cz>\n+\n+\tPR ipa/94202\n+\t* cgraph.c (cgraph_node::function_symbol): Fix availability computation.\n+\t(cgraph_node::function_or_virtual_thunk_symbol): Likewise.\n+\n 2020-03-19  Jan Hubicka  <hubicka@ucw.cz>\n \n \tPR ipa/92372"}, {"sha": "b41dea1fccabea7c869c2cfdfef44f07e511f0ea", "filename": "gcc/cgraph.c", "status": "modified", "additions": 10, "deletions": 16, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f7dceb4e658399edfbf8dd0e08ce0c686bfa2c9d/gcc%2Fcgraph.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f7dceb4e658399edfbf8dd0e08ce0c686bfa2c9d/gcc%2Fcgraph.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcgraph.c?ref=f7dceb4e658399edfbf8dd0e08ce0c686bfa2c9d", "patch": "@@ -3788,16 +3788,13 @@ cgraph_node::function_symbol (enum availability *availability,\n \n   while (node->thunk.thunk_p)\n     {\n+      enum availability a;\n+\n       ref = node;\n       node = node->callees->callee;\n-      if (availability)\n-\t{\n-\t  enum availability a;\n-\t  a = node->get_availability (ref);\n-\t  if (a < *availability)\n-\t    *availability = a;\n-\t}\n-      node = node->ultimate_alias_target (availability, ref);\n+      node = node->ultimate_alias_target (availability ? &a : NULL, ref);\n+      if (availability && a < *availability)\n+\t*availability = a;\n     }\n   return node;\n }\n@@ -3818,16 +3815,13 @@ cgraph_node::function_or_virtual_thunk_symbol\n \n   while (node->thunk.thunk_p && !node->thunk.virtual_offset_p)\n     {\n+      enum availability a;\n+\n       ref = node;\n       node = node->callees->callee;\n-      if (availability)\n-\t{\n-\t  enum availability a;\n-\t  a = node->get_availability (ref);\n-\t  if (a < *availability)\n-\t    *availability = a;\n-\t}\n-      node = node->ultimate_alias_target (availability, ref);\n+      node = node->ultimate_alias_target (availability ? &a : NULL, ref);\n+      if (availability && a < *availability)\n+\t*availability = a;\n     }\n   return node;\n }"}, {"sha": "212c6ffc06efc3b1a9c541d3951b937a07de4b00", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f7dceb4e658399edfbf8dd0e08ce0c686bfa2c9d/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f7dceb4e658399edfbf8dd0e08ce0c686bfa2c9d/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=f7dceb4e658399edfbf8dd0e08ce0c686bfa2c9d", "patch": "@@ -1,3 +1,8 @@\n+2020-03-19  Jan Hubicka  <hubicka@ucw.cz>\n+\n+\tPR ipa/94202\n+\t* g++.dg/torture/pr94202.C: New test.\n+\n 2020-03-19  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR gcov-profile/94029"}, {"sha": "5ed3dcbcd18adc21c2a1090cdef2bdce4d24cb25", "filename": "gcc/testsuite/g++.dg/torture/pr94202.C", "status": "added", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f7dceb4e658399edfbf8dd0e08ce0c686bfa2c9d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftorture%2Fpr94202.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f7dceb4e658399edfbf8dd0e08ce0c686bfa2c9d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftorture%2Fpr94202.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftorture%2Fpr94202.C?ref=f7dceb4e658399edfbf8dd0e08ce0c686bfa2c9d", "patch": "@@ -0,0 +1,22 @@\n+// { dg-additional-options \"-w\" }\n+struct S1 {\n+  virtual ~S1();\n+  virtual void v();\n+};\n+struct S2: S1 {};\n+struct S3: S1, S2 { void v(); };\n+struct S4: S3 { void v(); };\n+void S4::v() { S3::v(); }\n+struct R {\n+  S1 * m;\n+  void f(S2 * x) {\n+    static_cast<S1 *>(x)->v();\n+    x->v();\n+    m = x;\n+  }\n+};\n+void f() {\n+  R r;\n+  r.f(new S4);\n+  r.f(new S3);\n+}"}]}