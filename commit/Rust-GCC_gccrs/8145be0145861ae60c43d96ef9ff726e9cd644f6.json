{"sha": "8145be0145861ae60c43d96ef9ff726e9cd644f6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODE0NWJlMDE0NTg2MWFlNjBjNDNkOTZlZjlmZjcyNmU5Y2Q2NDRmNg==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2010-07-20T01:31:42Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2010-07-20T01:31:42Z"}, "message": "re PR c++/44996 ([C++0x] decltype produces rvalue reference type for parenthesized id-expression)\n\n\tPR c++/44996\n\t* semantics.c (finish_decltype_type): Correct decltype\n\tof parenthesized rvalue reference variable.\n\nFrom-SVN: r162323", "tree": {"sha": "247898b0a0178d1e6b93a27d23c1df0913f0786f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/247898b0a0178d1e6b93a27d23c1df0913f0786f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8145be0145861ae60c43d96ef9ff726e9cd644f6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8145be0145861ae60c43d96ef9ff726e9cd644f6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8145be0145861ae60c43d96ef9ff726e9cd644f6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8145be0145861ae60c43d96ef9ff726e9cd644f6/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "27728d816f2c0e081ab1756b43871f86bdeb2a0f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/27728d816f2c0e081ab1756b43871f86bdeb2a0f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/27728d816f2c0e081ab1756b43871f86bdeb2a0f"}], "stats": {"total": 19, "additions": 17, "deletions": 2}, "files": [{"sha": "124fbe2f191ac01c77a06c05c8e79615083d8c86", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8145be0145861ae60c43d96ef9ff726e9cd644f6/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8145be0145861ae60c43d96ef9ff726e9cd644f6/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=8145be0145861ae60c43d96ef9ff726e9cd644f6", "patch": "@@ -1,5 +1,9 @@\n 2010-07-19  Jason Merrill  <jason@redhat.com>\n \n+\tPR c++/44996\n+\t* semantics.c (finish_decltype_type): Correct decltype\n+\tof parenthesized rvalue reference variable.\n+\n \tPR c++/44969\n \t* tree.c (cp_tree_equal): Compare type of *CAST_EXPR.\n \t* pt.c (iterative_hash_template_arg): Hash type of *CAST_EXPR."}, {"sha": "949e108902a17570cc3cb5482a475ec8ca548225", "filename": "gcc/cp/semantics.c", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8145be0145861ae60c43d96ef9ff726e9cd644f6/gcc%2Fcp%2Fsemantics.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8145be0145861ae60c43d96ef9ff726e9cd644f6/gcc%2Fcp%2Fsemantics.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fsemantics.c?ref=8145be0145861ae60c43d96ef9ff726e9cd644f6", "patch": "@@ -4899,8 +4899,9 @@ finish_decltype_type (tree expr, bool id_expression_or_member_access_p)\n                 type = TYPE_MAIN_VARIANT (type);\n               else if (real_lvalue_p (expr))\n                 {\n-                  if (TREE_CODE (type) != REFERENCE_TYPE)\n-                    type = build_reference_type (type);\n+                  if (TREE_CODE (type) != REFERENCE_TYPE\n+\t\t      || TYPE_REF_IS_RVALUE (type))\n+                    type = build_reference_type (non_reference (type));\n                 }\n               else\n                 type = non_reference (type);"}, {"sha": "aa5b316305e74788907f113a6932609028807146", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8145be0145861ae60c43d96ef9ff726e9cd644f6/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8145be0145861ae60c43d96ef9ff726e9cd644f6/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=8145be0145861ae60c43d96ef9ff726e9cd644f6", "patch": "@@ -1,3 +1,8 @@\n+2010-07-19  Jason Merrill  <jason@redhat.com>\n+\n+\tPR c++/44996\n+\t* g++.dg/cpp0x/decltype23.C: New.\n+\n 2010-07-19  Paul Thomas  <pault@gcc.gnu.org>\n \n \tPR fortran/42385"}, {"sha": "78eb89d8ee2558702142ce6fb1f71bd5cc14a0b2", "filename": "gcc/testsuite/g++.dg/cpp0x/decltype23.C", "status": "added", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8145be0145861ae60c43d96ef9ff726e9cd644f6/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fdecltype23.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8145be0145861ae60c43d96ef9ff726e9cd644f6/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fdecltype23.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fdecltype23.C?ref=8145be0145861ae60c43d96ef9ff726e9cd644f6", "patch": "@@ -0,0 +1,5 @@\n+// { dg-options -std=c++0x }\n+\n+int x, &&y = static_cast<int &&>(x);\n+typedef decltype((y)) myInt;  // `y' is a parenthesized id-expression of type int that is an lvalue\n+typedef int &myInt;"}]}