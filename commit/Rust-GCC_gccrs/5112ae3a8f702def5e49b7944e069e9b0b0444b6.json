{"sha": "5112ae3a8f702def5e49b7944e069e9b0b0444b6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTExMmFlM2E4ZjcwMmRlZjVlNDliNzk0NGUwNjllOWIwYjA0NDRiNg==", "commit": {"author": {"name": "Benjamin Kosnik", "email": "bkoz@redhat.com", "date": "2002-11-01T17:30:36Z"}, "committer": {"name": "Benjamin Kosnik", "email": "bkoz@gcc.gnu.org", "date": "2002-11-01T17:30:36Z"}, "message": "re PR libstdc++/8318 (Not all wide character based prototypes are included within #ifdef _GLIBCPP_USE_WCHAR_T)\n\n\n2002-11-01  Benjamin Kosnik  <bkoz@redhat.com>\n\n\tPR libstdc++/8318\n\t* include/std/std_iostream.h: Tweak.\n\t* include/std/std_iosfwd.h: Add _GLIBCPP_USE_WCHAR_T.\n\t* include/std/std_iomanip.h: Same.\n\t* include/bits/stringfwd.h: Same.\n\t* include/bits/basic_string.tcc: Same.\n\t* include/bits/sstream.tcc: Same.\n\t* include/bits/fstream.tcc: Same.\n\t* include/bits/basic_ios.tcc: Same.\n\t* include/bits/streambuf.tcc: Same.\n\t* include/bits/locale_facets.tcc: Same.\n\nFrom-SVN: r58720", "tree": {"sha": "3b85fbd786ad6d529a86b3867a81119c182c2daa", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3b85fbd786ad6d529a86b3867a81119c182c2daa"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5112ae3a8f702def5e49b7944e069e9b0b0444b6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5112ae3a8f702def5e49b7944e069e9b0b0444b6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5112ae3a8f702def5e49b7944e069e9b0b0444b6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5112ae3a8f702def5e49b7944e069e9b0b0444b6/comments", "author": null, "committer": null, "parents": [{"sha": "c86c54e6d12b84a346c77e7101c758c78555c1f3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c86c54e6d12b84a346c77e7101c758c78555c1f3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c86c54e6d12b84a346c77e7101c758c78555c1f3"}], "stats": {"total": 228, "additions": 131, "deletions": 97}, "files": [{"sha": "b3b5fb72f0a5d5d7bf445449b17d192978870ab8", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5112ae3a8f702def5e49b7944e069e9b0b0444b6/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5112ae3a8f702def5e49b7944e069e9b0b0444b6/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=5112ae3a8f702def5e49b7944e069e9b0b0444b6", "patch": "@@ -1,3 +1,17 @@\n+2002-11-01  Benjamin Kosnik  <bkoz@redhat.com>\n+\n+\tPR libstdc++/8318\n+\t* include/std/std_iostream.h: Tweak.\n+\t* include/std/std_iosfwd.h: Add _GLIBCPP_USE_WCHAR_T.\n+\t* include/std/std_iomanip.h: Same.\n+\t* include/bits/stringfwd.h: Same.\n+\t* include/bits/basic_string.tcc: Same.\n+\t* include/bits/sstream.tcc: Same.\n+\t* include/bits/fstream.tcc: Same.\n+\t* include/bits/basic_ios.tcc: Same.\n+\t* include/bits/streambuf.tcc: Same.\n+\t* include/bits/locale_facets.tcc: Same.\n+\t\n 2002-11-01  John Carter  <john.carter@tait.co.nz>\n \n \tPR libstdc++/7961"}, {"sha": "7ee8015e29f65bdb9f0246497231e498961bf61e", "filename": "libstdc++-v3/include/bits/basic_ios.tcc", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5112ae3a8f702def5e49b7944e069e9b0b0444b6/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fbasic_ios.tcc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5112ae3a8f702def5e49b7944e069e9b0b0444b6/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fbasic_ios.tcc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fbasic_ios.tcc?ref=5112ae3a8f702def5e49b7944e069e9b0b0444b6", "patch": "@@ -187,7 +187,10 @@ namespace std\n   // which are defined via explicit instantiations elsewhere.  \n   // NB:  This syntax is a GNU extension.\n   extern template class basic_ios<char>;\n+\n+#ifdef _GLIBCPP_USE_WCHAR_T\n   extern template class basic_ios<wchar_t>;\n+#endif\n } // namespace std\n \n #endif "}, {"sha": "4a22d8967929e51cc99e44c507885962acd279cf", "filename": "libstdc++-v3/include/bits/basic_string.tcc", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5112ae3a8f702def5e49b7944e069e9b0b0444b6/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fbasic_string.tcc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5112ae3a8f702def5e49b7944e069e9b0b0444b6/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fbasic_string.tcc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fbasic_string.tcc?ref=5112ae3a8f702def5e49b7944e069e9b0b0444b6", "patch": "@@ -959,6 +959,7 @@ namespace std\n     basic_istream<char>& \n     getline(basic_istream<char>&, string&);\n \n+#ifdef _GLIBCPP_USE_WCHAR_T\n   extern template class basic_string<wchar_t>;\n   extern template \n     basic_istream<wchar_t>& \n@@ -972,6 +973,7 @@ namespace std\n   extern template \n     basic_istream<wchar_t>& \n     getline(basic_istream<wchar_t>&, wstring&);\n+#endif\n } // namespace std\n \n #endif"}, {"sha": "66cb9a1b179fbca2a7e072e88f5196a345717aa9", "filename": "libstdc++-v3/include/bits/fstream.tcc", "status": "modified", "additions": 6, "deletions": 3, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5112ae3a8f702def5e49b7944e069e9b0b0444b6/libstdc%2B%2B-v3%2Finclude%2Fbits%2Ffstream.tcc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5112ae3a8f702def5e49b7944e069e9b0b0444b6/libstdc%2B%2B-v3%2Finclude%2Fbits%2Ffstream.tcc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Ffstream.tcc?ref=5112ae3a8f702def5e49b7944e069e9b0b0444b6", "patch": "@@ -477,13 +477,16 @@ namespace std\n   // which are defined via explicit instantiations elsewhere.  \n   // NB:  This syntax is a GNU extension.\n   extern template class basic_filebuf<char>;\n-  extern template class basic_filebuf<wchar_t>;\n   extern template class basic_ifstream<char>;\n-  extern template class basic_ifstream<wchar_t>;\n   extern template class basic_ofstream<char>;\n-  extern template class basic_ofstream<wchar_t>;\n   extern template class basic_fstream<char>;\n+\n+#ifdef _GLIBCPP_USE_WCHAR_T\n+  extern template class basic_filebuf<wchar_t>;\n+  extern template class basic_ifstream<wchar_t>;\n+  extern template class basic_ofstream<wchar_t>;\n   extern template class basic_fstream<wchar_t>;\n+#endif\n } // namespace std\n \n #endif "}, {"sha": "ce6f3d7d5ffa0a34763ea1c0cfbf2e694d9bfb50", "filename": "libstdc++-v3/include/bits/locale_facets.tcc", "status": "modified", "additions": 76, "deletions": 74, "changes": 150, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5112ae3a8f702def5e49b7944e069e9b0b0444b6/libstdc%2B%2B-v3%2Finclude%2Fbits%2Flocale_facets.tcc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5112ae3a8f702def5e49b7944e069e9b0b0444b6/libstdc%2B%2B-v3%2Finclude%2Fbits%2Flocale_facets.tcc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Flocale_facets.tcc?ref=5112ae3a8f702def5e49b7944e069e9b0b0444b6", "patch": "@@ -2140,42 +2140,21 @@ namespace std\n   extern template class moneypunct_byname<char, true>;\n   extern template class money_get<char>;\n   extern template class money_put<char>;\n-  extern template class moneypunct<wchar_t, false>;\n-  extern template class moneypunct<wchar_t, true>;\n-  extern template class moneypunct_byname<wchar_t, false>;\n-  extern template class moneypunct_byname<wchar_t, true>;\n-  extern template class money_get<wchar_t>;\n-  extern template class money_put<wchar_t>;\n   extern template class numpunct<char>;\n   extern template class numpunct_byname<char>;\n   extern template class num_get<char>;\n   extern template class num_put<char>; \n-  extern template class numpunct<wchar_t>;\n-  extern template class numpunct_byname<wchar_t>;\n-  extern template class num_get<wchar_t>;\n-  extern template class num_put<wchar_t>;\n   extern template class __timepunct<char>;\n   extern template class time_put<char>;\n   extern template class time_put_byname<char>;\n   extern template class time_get<char>;\n   extern template class time_get_byname<char>;\n-  extern template class __timepunct<wchar_t>;\n-  extern template class time_put<wchar_t>;\n-  extern template class time_put_byname<wchar_t>;\n-  extern template class time_get<wchar_t>;\n-  extern template class time_get_byname<wchar_t>;\n   extern template class messages<char>;\n   extern template class messages_byname<char>;\n-  extern template class messages<wchar_t>;\n-  extern template class messages_byname<wchar_t>;\n   extern template class ctype_byname<char>;\n-  extern template class ctype_byname<wchar_t>;\n   extern template class codecvt_byname<char, char, mbstate_t>;\n-  extern template class codecvt_byname<wchar_t, char, mbstate_t>;\n   extern template class collate<char>;\n   extern template class collate_byname<char>;\n-  extern template class collate<wchar_t>;\n-  extern template class collate_byname<wchar_t>;\n \n   extern template\n     const codecvt<char, char, mbstate_t>& \n@@ -2229,59 +2208,6 @@ namespace std\n     const messages<char>& \n     use_facet<messages<char> >(const locale&);\n \n-  extern template\n-    const codecvt<wchar_t, char, mbstate_t>& \n-    use_facet<codecvt<wchar_t, char, mbstate_t> >(locale const&);\n-\n-  extern template\n-    const collate<wchar_t>& \n-    use_facet<collate<wchar_t> >(const locale&);\n-\n-  extern template\n-    const numpunct<wchar_t>& \n-    use_facet<numpunct<wchar_t> >(const locale&);\n-\n-  extern template \n-    const num_put<wchar_t>& \n-    use_facet<num_put<wchar_t> >(const locale&);\n-\n-  extern template \n-    const num_get<wchar_t>& \n-    use_facet<num_get<wchar_t> >(const locale&);\n-\n-  extern template\n-    const moneypunct<wchar_t, true>& \n-    use_facet<moneypunct<wchar_t, true> >(const locale&);\n-\n-  extern template\n-    const moneypunct<wchar_t, false>& \n-    use_facet<moneypunct<wchar_t, false> >(const locale&);\n- \n-  extern template \n-    const money_put<wchar_t>& \n-    use_facet<money_put<wchar_t> >(const locale&);\n-\n-  extern template \n-    const money_get<wchar_t>& \n-    use_facet<money_get<wchar_t> >(const locale&);\n-\n-  extern template\n-    const __timepunct<wchar_t>& \n-    use_facet<__timepunct<wchar_t> >(const locale&);\n-\n-  extern template \n-    const time_put<wchar_t>& \n-    use_facet<time_put<wchar_t> >(const locale&);\n-\n-  extern template \n-    const time_get<wchar_t>& \n-    use_facet<time_get<wchar_t> >(const locale&);\n-\n-  extern template \n-    const messages<wchar_t>& \n-    use_facet<messages<wchar_t> >(const locale&);\n-\n-\n   extern template \n     bool\n     has_facet<ctype<char> >(const locale&);\n@@ -2334,6 +2260,81 @@ namespace std\n     bool\n     has_facet<messages<char> >(const locale&);\n \n+#ifdef _GLIBCPP_USE_WCHAR_T\n+  extern template class moneypunct<wchar_t, false>;\n+  extern template class moneypunct<wchar_t, true>;\n+  extern template class moneypunct_byname<wchar_t, false>;\n+  extern template class moneypunct_byname<wchar_t, true>;\n+  extern template class money_get<wchar_t>;\n+  extern template class money_put<wchar_t>;\n+  extern template class numpunct<wchar_t>;\n+  extern template class numpunct_byname<wchar_t>;\n+  extern template class num_get<wchar_t>;\n+  extern template class num_put<wchar_t>;\n+  extern template class __timepunct<wchar_t>;\n+  extern template class time_put<wchar_t>;\n+  extern template class time_put_byname<wchar_t>;\n+  extern template class time_get<wchar_t>;\n+  extern template class time_get_byname<wchar_t>;\n+  extern template class messages<wchar_t>;\n+  extern template class messages_byname<wchar_t>;\n+  extern template class ctype_byname<wchar_t>;\n+  extern template class codecvt_byname<wchar_t, char, mbstate_t>;\n+  extern template class collate<wchar_t>;\n+  extern template class collate_byname<wchar_t>;\n+\n+  extern template\n+    const codecvt<wchar_t, char, mbstate_t>& \n+    use_facet<codecvt<wchar_t, char, mbstate_t> >(locale const&);\n+\n+  extern template\n+    const collate<wchar_t>& \n+    use_facet<collate<wchar_t> >(const locale&);\n+\n+  extern template\n+    const numpunct<wchar_t>& \n+    use_facet<numpunct<wchar_t> >(const locale&);\n+\n+  extern template \n+    const num_put<wchar_t>& \n+    use_facet<num_put<wchar_t> >(const locale&);\n+\n+  extern template \n+    const num_get<wchar_t>& \n+    use_facet<num_get<wchar_t> >(const locale&);\n+\n+  extern template\n+    const moneypunct<wchar_t, true>& \n+    use_facet<moneypunct<wchar_t, true> >(const locale&);\n+\n+  extern template\n+    const moneypunct<wchar_t, false>& \n+    use_facet<moneypunct<wchar_t, false> >(const locale&);\n+ \n+  extern template \n+    const money_put<wchar_t>& \n+    use_facet<money_put<wchar_t> >(const locale&);\n+\n+  extern template \n+    const money_get<wchar_t>& \n+    use_facet<money_get<wchar_t> >(const locale&);\n+\n+  extern template\n+    const __timepunct<wchar_t>& \n+    use_facet<__timepunct<wchar_t> >(const locale&);\n+\n+  extern template \n+    const time_put<wchar_t>& \n+    use_facet<time_put<wchar_t> >(const locale&);\n+\n+  extern template \n+    const time_get<wchar_t>& \n+    use_facet<time_get<wchar_t> >(const locale&);\n+\n+  extern template \n+    const messages<wchar_t>& \n+    use_facet<messages<wchar_t> >(const locale&);\n+\n  extern template \n     bool\n     has_facet<ctype<wchar_t> >(const locale&);\n@@ -2385,6 +2386,7 @@ namespace std\n   extern template \n     bool\n     has_facet<messages<wchar_t> >(const locale&);\n+#endif\n } // namespace std\n \n #endif"}, {"sha": "606705c02e91617e68d4e056a3d2e2393188e3bc", "filename": "libstdc++-v3/include/bits/sstream.tcc", "status": "modified", "additions": 6, "deletions": 3, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5112ae3a8f702def5e49b7944e069e9b0b0444b6/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fsstream.tcc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5112ae3a8f702def5e49b7944e069e9b0b0444b6/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fsstream.tcc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fsstream.tcc?ref=5112ae3a8f702def5e49b7944e069e9b0b0444b6", "patch": "@@ -226,13 +226,16 @@ namespace std\n   // which are defined via explicit instantiations elsewhere.  \n   // NB:  This syntax is a GNU extension.\n   extern template class basic_stringbuf<char>;\n-  extern template class basic_stringbuf<wchar_t>;\n   extern template class basic_istringstream<char>;\n-  extern template class basic_istringstream<wchar_t>;\n   extern template class basic_ostringstream<char>;\n-  extern template class basic_ostringstream<wchar_t>;\n   extern template class basic_stringstream<char>;\n+\n+#ifdef _GLIBCPP_USE_WCHAR_T\n+  extern template class basic_stringbuf<wchar_t>;\n+  extern template class basic_istringstream<wchar_t>;\n+  extern template class basic_ostringstream<wchar_t>;\n   extern template class basic_stringstream<wchar_t>;\n+#endif\n } // namespace std\n \n #endif"}, {"sha": "c8084ee68ada3c6ea95e95d1fa908c589fb9a287", "filename": "libstdc++-v3/include/bits/streambuf.tcc", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5112ae3a8f702def5e49b7944e069e9b0b0444b6/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstreambuf.tcc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5112ae3a8f702def5e49b7944e069e9b0b0444b6/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstreambuf.tcc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstreambuf.tcc?ref=5112ae3a8f702def5e49b7944e069e9b0b0444b6", "patch": "@@ -249,11 +249,13 @@ namespace std\n     __copy_streambufs(basic_ios<char>&, basic_streambuf<char>*,\n \t\t      basic_streambuf<char>*); \n \n+#ifdef _GLIBCPP_USE_WCHAR_T\n   extern template class basic_streambuf<wchar_t>;\n   extern template\n     streamsize\n     __copy_streambufs(basic_ios<wchar_t>&, basic_streambuf<wchar_t>*,\n \t\t      basic_streambuf<wchar_t>*); \n+#endif\n } // namespace std\n \n #endif "}, {"sha": "db40befdab6acae8aad56311c4714557c83a89fd", "filename": "libstdc++-v3/include/bits/stringfwd.h", "status": "modified", "additions": 10, "deletions": 10, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5112ae3a8f702def5e49b7944e069e9b0b0444b6/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstringfwd.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5112ae3a8f702def5e49b7944e069e9b0b0444b6/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstringfwd.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstringfwd.h?ref=5112ae3a8f702def5e49b7944e069e9b0b0444b6", "patch": "@@ -45,25 +45,25 @@\n \n namespace std\n {\n-  template<class _CharT>\n-    struct char_traits;\n-  \n-  template<> struct char_traits<char>;\n-#ifdef _GLIBCPP_USE_WCHAR_T\n-  template<> struct char_traits<wchar_t>;\n-#endif\n-\n   template<typename _Alloc> \n     class allocator;\n \n+  template<class _CharT>\n+    struct char_traits;\n+\n   template<typename _CharT, typename _Traits = char_traits<_CharT>, \n            typename _Alloc = allocator<_CharT> >\n     class basic_string;\n+  \n+  template<> struct char_traits<char>;\n \n-  /// 99%% of %string users only ever [need to] see the typedef.\n   typedef basic_string<char>    string;\n-  /// 99%% of %wstring users only ever [need to] see the typedef.\n+\n+#ifdef _GLIBCPP_USE_WCHAR_T\n+  template<> struct char_traits<wchar_t>;\n+\n   typedef basic_string<wchar_t> wstring;\n+#endif\n } // namespace std\n \n #endif\t// _CPP_BITS_STRINGFWD_H"}, {"sha": "23237ce210d6b28b6cb9aebb74dfa5d451e917d4", "filename": "libstdc++-v3/include/std/std_iomanip.h", "status": "modified", "additions": 9, "deletions": 7, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5112ae3a8f702def5e49b7944e069e9b0b0444b6/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fstd_iomanip.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5112ae3a8f702def5e49b7944e069e9b0b0444b6/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fstd_iomanip.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fstd_iomanip.h?ref=5112ae3a8f702def5e49b7944e069e9b0b0444b6", "patch": "@@ -225,25 +225,27 @@ namespace std\n   extern template ostream& operator<<(ostream&, _Setbase);\n   extern template ostream& operator<<(ostream&, _Setprecision);\n   extern template ostream& operator<<(ostream&, _Setw);\n-  extern template wostream& operator<<(wostream&, _Setfill<wchar_t>);\n-  extern template wostream& operator<<(wostream&, _Setiosflags);\n-  extern template wostream& operator<<(wostream&, _Resetiosflags);\n-  extern template wostream& operator<<(wostream&, _Setbase);\n-  extern template wostream& operator<<(wostream&, _Setprecision);\n-  extern template wostream& operator<<(wostream&, _Setw);\n-\n   extern template istream& operator>>(istream&, _Setfill<char>);\n   extern template istream& operator>>(istream&, _Setiosflags);\n   extern template istream& operator>>(istream&, _Resetiosflags);\n   extern template istream& operator>>(istream&, _Setbase);\n   extern template istream& operator>>(istream&, _Setprecision);\n   extern template istream& operator>>(istream&, _Setw);\n+\n+#ifdef _GLIBCPP_USE_WCHAR_T\n+  extern template wostream& operator<<(wostream&, _Setfill<wchar_t>);\n+  extern template wostream& operator<<(wostream&, _Setiosflags);\n+  extern template wostream& operator<<(wostream&, _Resetiosflags);\n+  extern template wostream& operator<<(wostream&, _Setbase);\n+  extern template wostream& operator<<(wostream&, _Setprecision);\n+  extern template wostream& operator<<(wostream&, _Setw);\n   extern template wistream& operator>>(wistream&, _Setfill<wchar_t>);\n   extern template wistream& operator>>(wistream&, _Setiosflags);\n   extern template wistream& operator>>(wistream&, _Resetiosflags);\n   extern template wistream& operator>>(wistream&, _Setbase);\n   extern template wistream& operator>>(wistream&, _Setprecision);\n   extern template wistream& operator>>(wistream&, _Setw);\n+#endif\n } // namespace std\n \n #endif\t"}, {"sha": "797f4936dc8a789ed3e8e0120116721b78f81451", "filename": "libstdc++-v3/include/std/std_iosfwd.h", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5112ae3a8f702def5e49b7944e069e9b0b0444b6/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fstd_iosfwd.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5112ae3a8f702def5e49b7944e069e9b0b0444b6/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fstd_iosfwd.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fstd_iosfwd.h?ref=5112ae3a8f702def5e49b7944e069e9b0b0444b6", "patch": "@@ -116,6 +116,7 @@ namespace std\n   typedef basic_ofstream<char> \t\tofstream;\n   typedef basic_fstream<char> \t\tfstream;\n \n+#ifdef _GLIBCPP_USE_WCHAR_T\n   typedef basic_ios<wchar_t> \t\twios;\n   typedef basic_streambuf<wchar_t> \twstreambuf;\n   typedef basic_istream<wchar_t> \twistream;\n@@ -129,6 +130,7 @@ namespace std\n   typedef basic_ifstream<wchar_t> \twifstream;\n   typedef basic_ofstream<wchar_t> \twofstream;\n   typedef basic_fstream<wchar_t> \twfstream;\n+#endif\n } // namespace std\n \n #endif"}, {"sha": "d0736b835132bd663b3d2d23abdec19acde7a397", "filename": "libstdc++-v3/include/std/std_iostream.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5112ae3a8f702def5e49b7944e069e9b0b0444b6/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fstd_iostream.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5112ae3a8f702def5e49b7944e069e9b0b0444b6/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fstd_iostream.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fstd_iostream.h?ref=5112ae3a8f702def5e49b7944e069e9b0b0444b6", "patch": "@@ -51,6 +51,7 @@ namespace std\n   extern ostream cout;\n   extern ostream cerr;\n   extern ostream clog;\n+\n #ifdef _GLIBCPP_USE_WCHAR_T\n   extern wistream wcin;\n   extern wostream wcout;"}]}