{"sha": "553fb1c20117027fd5a352987f4773736f9f3382", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTUzZmIxYzIwMTE3MDI3ZmQ1YTM1Mjk4N2Y0NzczNzM2ZjlmMzM4Mg==", "commit": {"author": {"name": "Jonathan Wakely", "email": "redi@gcc.gnu.org", "date": "2011-12-31T17:04:10Z"}, "committer": {"name": "Jonathan Wakely", "email": "redi@gcc.gnu.org", "date": "2011-12-31T17:04:10Z"}, "message": "Fix _Locale vs. _Local typos.\n\nFrom-SVN: r182756", "tree": {"sha": "23de67632d77357515b24b71d4905c3ee5d47a72", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/23de67632d77357515b24b71d4905c3ee5d47a72"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/553fb1c20117027fd5a352987f4773736f9f3382", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/553fb1c20117027fd5a352987f4773736f9f3382", "html_url": "https://github.com/Rust-GCC/gccrs/commit/553fb1c20117027fd5a352987f4773736f9f3382", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/553fb1c20117027fd5a352987f4773736f9f3382/comments", "author": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b670ab581ef42bd3e359b5f6abf4136d3ea8d061", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b670ab581ef42bd3e359b5f6abf4136d3ea8d061", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b670ab581ef42bd3e359b5f6abf4136d3ea8d061"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "6d1ab92f88c3536a119f0a341fad99c4873a851b", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/553fb1c20117027fd5a352987f4773736f9f3382/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/553fb1c20117027fd5a352987f4773736f9f3382/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=553fb1c20117027fd5a352987f4773736f9f3382", "patch": "@@ -27,7 +27,7 @@\n \t(_Hash_code_base): Use _Ebo_helper to limit memory footprint. Move\n \t_Equal functor management...\n \t(_Hashtable_base): ...here, new, use _Equal_helper.\n-\t(_Local_iterator_base<>, _Locale_iterator<>, _Locale_const_iterator<>):\n+\t(_Local_iterator_base<>, _Local_iterator<>, _Local_const_iterator<>):\n \tNew, use _Hash_code_base, implementation of...\n \t* include/bits/hashtable.h (_Hashtable<>::local_iterator,\n \t_Hashtable<>::const_local_iterator): ...those. Add static assertions"}]}