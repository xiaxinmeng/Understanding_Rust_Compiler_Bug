{"sha": "a4c6d37356fe4ba2dbbaf0dd72d0bb8c55c6baf5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTRjNmQzNzM1NmZlNGJhMmRiYmFmMGRkNzJkMGJiOGM1NWM2YmFmNQ==", "commit": {"author": {"name": "Tom Tromey", "email": "tromey@redhat.com", "date": "2001-02-07T22:46:28Z"}, "committer": {"name": "Tom Tromey", "email": "tromey@gcc.gnu.org", "date": "2001-02-07T22:46:28Z"}, "message": "re PR libgcj/1906 (difference between gcj and jdk for MessageFormat)\n\n\tFix for PR libgcj/1906:\n\t* java/text/MessageFormat.java (setLocale): Use named class\n\tliterals.\n\t(forName): Removed.\n\t(format(Object,StringBuffer,FieldPosition)): Special case if\n\targument is an Object[].\n\nFrom-SVN: r39529", "tree": {"sha": "701f9dfe64155ce6a6ecba35972722b5486402b1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/701f9dfe64155ce6a6ecba35972722b5486402b1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a4c6d37356fe4ba2dbbaf0dd72d0bb8c55c6baf5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a4c6d37356fe4ba2dbbaf0dd72d0bb8c55c6baf5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a4c6d37356fe4ba2dbbaf0dd72d0bb8c55c6baf5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a4c6d37356fe4ba2dbbaf0dd72d0bb8c55c6baf5/comments", "author": null, "committer": null, "parents": [{"sha": "1456345e538dde38ba151178ea6f0bd5cdcb53f6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1456345e538dde38ba151178ea6f0bd5cdcb53f6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1456345e538dde38ba151178ea6f0bd5cdcb53f6"}], "stats": {"total": 51, "additions": 26, "deletions": 25}, "files": [{"sha": "2378178eca26b5187cb7c5b1106998e2bfc0c5de", "filename": "libjava/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4c6d37356fe4ba2dbbaf0dd72d0bb8c55c6baf5/libjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4c6d37356fe4ba2dbbaf0dd72d0bb8c55c6baf5/libjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog?ref=a4c6d37356fe4ba2dbbaf0dd72d0bb8c55c6baf5", "patch": "@@ -1,3 +1,12 @@\n+2001-02-07  Tom Tromey  <tromey@redhat.com>\n+\n+\tFix for PR libgcj/1906:\n+\t* java/text/MessageFormat.java (setLocale): Use named class\n+\tliterals.\n+\t(forName): Removed.\n+\t(format(Object,StringBuffer,FieldPosition)): Special case if\n+\targument is an Object[].\n+\n 2001-02-07  Bryce McKinlay  <bryce@albatross.co.nz>\n \n \t* java/util/Arrays.java: Removed \"cmp\" methods."}, {"sha": "2cd6386a00cd5bf10b775d2a549ea544ef811d6a", "filename": "libjava/java/text/MessageFormat.java", "status": "modified", "additions": 17, "deletions": 25, "changes": 42, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4c6d37356fe4ba2dbbaf0dd72d0bb8c55c6baf5/libjava%2Fjava%2Ftext%2FMessageFormat.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4c6d37356fe4ba2dbbaf0dd72d0bb8c55c6baf5/libjava%2Fjava%2Ftext%2FMessageFormat.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Ftext%2FMessageFormat.java?ref=a4c6d37356fe4ba2dbbaf0dd72d0bb8c55c6baf5", "patch": "@@ -1,6 +1,6 @@\n // MessageFormat.java - Localized message formatting.\n \n-/* Copyright (C) 1999  Free Software Foundation\n+/* Copyright (C) 1999, 2001  Free Software Foundation\n \n    This file is part of libgcj.\n \n@@ -45,29 +45,14 @@\n   // Text to follow this element.\n   String trailer;\n \n-  // FIXME: shouldn't need this.\n-  Class forName (String name)\n-    {\n-      try\n-\t{\n-\t  return Class.forName (name);\n-\t}\n-      catch (ClassNotFoundException x)\n-\t{\n-\t}\n-      return null;\n-    }\n-\n   // Recompute the locale-based formatter.\n   void setLocale (Locale loc)\n     {\n       if (type == null)\n \t;\n       else if (type.equals(\"number\"))\n \t{\n-\t  // FIXME: named class literal.\n-\t  // formatClass = Number.class;\n-\t  formatClass = forName (\"java.lang.Number\");\n+\t  formatClass = java.lang.Number.class;\n \n \t  if (style == null)\n \t    format = NumberFormat.getInstance(loc);\n@@ -98,9 +83,7 @@ else if (style.equals(\"integer\"))\n \t}\n       else if (type.equals(\"time\") || type.equals(\"date\"))\n \t{\n-\t  // FIXME: named class literal.\n-\t  // formatClass = Date.class;\n-\t  formatClass = forName (\"java.util.Date\");\n+\t  formatClass = java.util.Date.class;\n \n \t  int val = DateFormat.DEFAULT;\n \t  if (style == null)\n@@ -127,9 +110,7 @@ else if (style.equals(\"full\"))\n \t}\n       else if (type.equals(\"choice\"))\n \t{\n-\t  // FIXME: named class literal.\n-\t  // formatClass = Number.class;\n-\t  formatClass = forName (\"java.lang.Number\");\n+\t  formatClass = java.lang.Number.class;\n \n \t  if (style == null)\n \t    throw new\n@@ -370,8 +351,19 @@ else if (thisArg instanceof Date)\n   public final StringBuffer format (Object singleArg, StringBuffer appendBuf,\n \t\t\t\t    FieldPosition ignore)\n     {\n-      Object[] args = new Object[1];\n-      args[0] = singleArg;\n+      Object[] args;\n+\n+      if (singleArg instanceof Object[])\n+\t{\n+\t  // This isn't specified in any manual, but it follows the\n+\t  // JDK implementation.\n+\t  args = (Object[]) singleArg;\n+\t}\n+      else\n+\t{\n+\t  args = new Object[1];\n+\t  args[0] = singleArg;\n+\t}\n       return format (args, appendBuf, ignore);\n     }\n "}]}