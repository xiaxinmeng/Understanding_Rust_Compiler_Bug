{"sha": "72baa4e2b7f8dfdb2c49950e12a397ef00d3bc16", "node_id": "C_kwDOANBUbNoAKDcyYmFhNGUyYjdmOGRmZGIyYzQ5OTUwZTEyYTM5N2VmMDBkM2JjMTY", "commit": {"author": {"name": "Piotr Trojanek", "email": "trojanek@adacore.com", "date": "2022-08-23T10:57:35Z"}, "committer": {"name": "Marc Poulhi\u00e8s", "email": "poulhies@adacore.com", "date": "2022-11-04T13:47:30Z"}, "message": "ada: Cleanup code for warnings about unset references\n\nCleanup related to new checks for unset references.\n\ngcc/ada/\n\n\t* sem_util.adb\n\t(In_Pragma_Expression): Add standard guard against searching too\n\tfar.\n\t(In_Quantified_Expression): Likewise.\n\t* sem_warn.adb\n\t(May_Need_Initialized_Actual): Remove redundant parens.\n\t(Check_References): Remove guard that duplicates a condition from\n\tthe enclosing if-statement; only assign E1T variable when\n\tnecessary.\n\t(Within_Postcondition): Fix layout.\n\t(No_Warn_On_In_Out): Balance parens in comment.", "tree": {"sha": "62d16a39657a2468227972152b990b0caea1c7cd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/62d16a39657a2468227972152b990b0caea1c7cd"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/72baa4e2b7f8dfdb2c49950e12a397ef00d3bc16", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/72baa4e2b7f8dfdb2c49950e12a397ef00d3bc16", "html_url": "https://github.com/Rust-GCC/gccrs/commit/72baa4e2b7f8dfdb2c49950e12a397ef00d3bc16", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/72baa4e2b7f8dfdb2c49950e12a397ef00d3bc16/comments", "author": {"login": "ptroja", "id": 161602, "node_id": "MDQ6VXNlcjE2MTYwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/161602?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ptroja", "html_url": "https://github.com/ptroja", "followers_url": "https://api.github.com/users/ptroja/followers", "following_url": "https://api.github.com/users/ptroja/following{/other_user}", "gists_url": "https://api.github.com/users/ptroja/gists{/gist_id}", "starred_url": "https://api.github.com/users/ptroja/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ptroja/subscriptions", "organizations_url": "https://api.github.com/users/ptroja/orgs", "repos_url": "https://api.github.com/users/ptroja/repos", "events_url": "https://api.github.com/users/ptroja/events{/privacy}", "received_events_url": "https://api.github.com/users/ptroja/received_events", "type": "User", "site_admin": false}, "committer": {"login": "dkm", "id": 87603, "node_id": "MDQ6VXNlcjg3NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/87603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dkm", "html_url": "https://github.com/dkm", "followers_url": "https://api.github.com/users/dkm/followers", "following_url": "https://api.github.com/users/dkm/following{/other_user}", "gists_url": "https://api.github.com/users/dkm/gists{/gist_id}", "starred_url": "https://api.github.com/users/dkm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dkm/subscriptions", "organizations_url": "https://api.github.com/users/dkm/orgs", "repos_url": "https://api.github.com/users/dkm/repos", "events_url": "https://api.github.com/users/dkm/events{/privacy}", "received_events_url": "https://api.github.com/users/dkm/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7e1fe87899932e2c265fd0a13b2ac552b0865e0f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7e1fe87899932e2c265fd0a13b2ac552b0865e0f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7e1fe87899932e2c265fd0a13b2ac552b0865e0f"}], "stats": {"total": 31, "additions": 19, "deletions": 12}, "files": [{"sha": "5c495761df15f6432388af3bd73cd6d8e7d45a4c", "filename": "gcc/ada/sem_util.adb", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/72baa4e2b7f8dfdb2c49950e12a397ef00d3bc16/gcc%2Fada%2Fsem_util.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/72baa4e2b7f8dfdb2c49950e12a397ef00d3bc16/gcc%2Fada%2Fsem_util.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_util.adb?ref=72baa4e2b7f8dfdb2c49950e12a397ef00d3bc16", "patch": "@@ -14794,8 +14794,15 @@ package body Sem_Util is\n       loop\n          if No (P) then\n             return False;\n+\n+         --  Prevent the search from going too far\n+\n+         elsif Is_Body_Or_Package_Declaration (P) then\n+            return False;\n+\n          elsif Nkind (P) = N_Pragma and then Pragma_Name (P) = Nam then\n             return True;\n+\n          else\n             P := Parent (P);\n          end if;\n@@ -14871,6 +14878,12 @@ package body Sem_Util is\n       loop\n          if No (P) then\n             return False;\n+\n+         --  Prevent the search from going too far\n+\n+         elsif Is_Body_Or_Package_Declaration (P) then\n+            return False;\n+\n          elsif Nkind (P) = N_Quantified_Expression then\n             return True;\n          else"}, {"sha": "423754f5df81d9062677fe0d5488795a7e2aaa8d", "filename": "gcc/ada/sem_warn.adb", "status": "modified", "additions": 6, "deletions": 12, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/72baa4e2b7f8dfdb2c49950e12a397ef00d3bc16/gcc%2Fada%2Fsem_warn.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/72baa4e2b7f8dfdb2c49950e12a397ef00d3bc16/gcc%2Fada%2Fsem_warn.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_warn.adb?ref=72baa4e2b7f8dfdb2c49950e12a397ef00d3bc16", "patch": "@@ -928,15 +928,15 @@ package body Sem_Warn is\n          if not Is_Generic_Type (T) then\n             null;\n \n-         elsif (Nkind (Par)) = N_Private_Extension_Declaration then\n+         elsif Nkind (Par) = N_Private_Extension_Declaration then\n \n             --  We only indicate the first such variable in the generic.\n \n             if No (Uninitialized_Variable (Par)) then\n                Set_Uninitialized_Variable (Par, Ent);\n             end if;\n \n-         elsif (Nkind (Par)) = N_Formal_Type_Declaration\n+         elsif Nkind (Par) = N_Formal_Type_Declaration\n            and then Nkind (Formal_Type_Definition (Par)) =\n                                          N_Formal_Private_Type_Definition\n          then\n@@ -1151,8 +1151,6 @@ package body Sem_Warn is\n \n       E1 := First_Entity (E);\n       while Present (E1) loop\n-         E1T := Etype (E1);\n-\n          --  We are only interested in source entities. We also don't issue\n          --  warnings within instances, since the proper place for such\n          --  warnings is on the template when it is compiled, and we don't\n@@ -1161,6 +1159,8 @@ package body Sem_Warn is\n          if Comes_From_Source (E1)\n            and then Instantiation_Location (Sloc (E1)) = No_Location\n          then\n+            E1T := Etype (E1);\n+\n             --  We are interested in variables and out/in-out parameters, but\n             --  we exclude protected types, too complicated to worry about.\n \n@@ -1648,11 +1648,6 @@ package body Sem_Warn is\n                                not Is_Package_Or_Generic_Package\n                                      (Cunit_Entity (Current_Sem_Unit))))\n \n-              --  Exclude instantiations, since there is no reason why every\n-              --  entity in an instantiation should be referenced.\n-\n-              and then Instantiation_Location (Sloc (E1)) = No_Location\n-\n               --  Exclude formal parameters from bodies if the corresponding\n               --  spec entity has been referenced in the case where there is\n               --  a separate spec.\n@@ -2001,8 +1996,7 @@ package body Sem_Warn is\n                               P := Parent (Nod);\n \n                               if Nkind (P) = N_Pragma\n-                                and then Pragma_Name (P) =\n-                                  Name_Test_Case\n+                                and then Pragma_Name (P) = Name_Test_Case\n                                 and then Nod = Test_Case_Arg (P, Name_Ensures)\n                               then\n                                  return True;\n@@ -3028,7 +3022,7 @@ package body Sem_Warn is\n       --  if we have seen the address of the subprogram being taken, or if the\n       --  subprogram is used as a generic actual (in the latter cases the\n       --  context may force use of IN OUT, even if the parameter is not\n-      --  modified for this particular case.\n+      --  modified for this particular case).\n \n       -----------------------\n       -- No_Warn_On_In_Out --"}]}