{"sha": "8895d9a1d2c0a0c0a18426a959081b481d9c881c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODg5NWQ5YTFkMmMwYTBjMGExODQyNmE5NTkwODFiNDgxZDljODgxYw==", "commit": {"author": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2014-07-07T15:29:01Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2014-07-07T15:29:01Z"}, "message": "class.c (check_for_override): Wrap the 'final' and 'override' keywords in %< and %>.\n\n/cp\n2014-07-07  Paolo Carlini  <paolo.carlini@oracle.com>\n\n\t* class.c (check_for_override): Wrap the 'final' and 'override'\n\tkeywords in %< and %>.\n\n/testsuite\n2014-07-07  Paolo Carlini  <paolo.carlini@oracle.com>\n\n\t* g++.dg/cpp0x/override1.C: Tweak expected error messages.\n\nFrom-SVN: r212333", "tree": {"sha": "c1adb4f486358be59c85ae5bb66895f8894c752a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c1adb4f486358be59c85ae5bb66895f8894c752a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8895d9a1d2c0a0c0a18426a959081b481d9c881c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8895d9a1d2c0a0c0a18426a959081b481d9c881c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8895d9a1d2c0a0c0a18426a959081b481d9c881c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8895d9a1d2c0a0c0a18426a959081b481d9c881c/comments", "author": null, "committer": null, "parents": [{"sha": "0f05a19962a367aaac5b6ae8f7638a2bd77e4b29", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0f05a19962a367aaac5b6ae8f7638a2bd77e4b29", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0f05a19962a367aaac5b6ae8f7638a2bd77e4b29"}], "stats": {"total": 25, "additions": 17, "deletions": 8}, "files": [{"sha": "dc56de63ab147820c3fc2c982226c24a9c91eb31", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8895d9a1d2c0a0c0a18426a959081b481d9c881c/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8895d9a1d2c0a0c0a18426a959081b481d9c881c/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=8895d9a1d2c0a0c0a18426a959081b481d9c881c", "patch": "@@ -1,3 +1,8 @@\n+2014-07-07  Paolo Carlini  <paolo.carlini@oracle.com>\n+\n+\t* class.c (check_for_override): Wrap the 'final' and 'override'\n+\tkeywords in %< and %>.\n+\n 2014-07-06  Marek Polacek  <polacek@redhat.com>\n \n \tPR c/6940"}, {"sha": "3a44dba9db175ec7383f8e2594edc276a8c4e0e1", "filename": "gcc/cp/class.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8895d9a1d2c0a0c0a18426a959081b481d9c881c/gcc%2Fcp%2Fclass.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8895d9a1d2c0a0c0a18426a959081b481d9c881c/gcc%2Fcp%2Fclass.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fclass.c?ref=8895d9a1d2c0a0c0a18426a959081b481d9c881c", "patch": "@@ -2771,9 +2771,9 @@ check_for_override (tree decl, tree ctype)\n \tTYPE_HAS_NONTRIVIAL_DESTRUCTOR (ctype) = true;\n     }\n   else if (DECL_FINAL_P (decl))\n-    error (\"%q+#D marked final, but is not virtual\", decl);\n+    error (\"%q+#D marked %<final%>, but is not virtual\", decl);\n   if (DECL_OVERRIDE_P (decl) && !overrides_found)\n-    error (\"%q+#D marked override, but does not override\", decl);\n+    error (\"%q+#D marked %<override%>, but does not override\", decl);\n }\n \n /* Warn about hidden virtual functions that are not overridden in t."}, {"sha": "bc23150d66a4e50c42e5fd6e42c35eca009cd2f9", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8895d9a1d2c0a0c0a18426a959081b481d9c881c/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8895d9a1d2c0a0c0a18426a959081b481d9c881c/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=8895d9a1d2c0a0c0a18426a959081b481d9c881c", "patch": "@@ -1,4 +1,8 @@\n-2014-06-24  Max Ostapenko  <m.ostapenko@partner.samsung.com>\n+2014-07-07  Paolo Carlini  <paolo.carlini@oracle.com>\n+\n+\t* g++.dg/cpp0x/override1.C: Tweak expected error messages.\n+\n+2014-07-07  Max Ostapenko  <m.ostapenko@partner.samsung.com>\n \n \t* c-c++-common/asan/no-redundant-instrumentation-9.c: New test.\n "}, {"sha": "f5f00ee9f51b84cd956ded6dc213d9aeaa06c4b6", "filename": "gcc/testsuite/g++.dg/cpp0x/override1.C", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8895d9a1d2c0a0c0a18426a959081b481d9c881c/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Foverride1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8895d9a1d2c0a0c0a18426a959081b481d9c881c/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Foverride1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Foverride1.C?ref=8895d9a1d2c0a0c0a18426a959081b481d9c881c", "patch": "@@ -18,7 +18,7 @@ struct D : B\n \n template <class T> struct D2 : T\n {\n-  void h() override {} // { dg-error \"marked override, but does not override\" }\n+  void h() override {} // { dg-error \"marked 'override', but does not override\" }\n };\n \n template <class T> struct D3 : T\n@@ -38,14 +38,14 @@ struct B3\n \n struct B4\n {\n-  void f() final {} // { dg-error \"marked final, but is not virtual\" }\n+  void f() final {} // { dg-error \"marked 'final', but is not virtual\" }\n };\n \n struct D5 : B\n {\n-  void ff() override {} // { dg-error \"marked override, but does not override\" }\n-  virtual void fff() override {} // { dg-error \"marked override, but does not override\" }\n-  virtual void x() override {} // { dg-error \"marked override, but does not override\" }\n+  void ff() override {} // { dg-error \"marked 'override', but does not override\" }\n+  virtual void fff() override {} // { dg-error \"marked 'override', but does not override\" }\n+  virtual void x() override {} // { dg-error \"marked 'override', but does not override\" }\n   void g() override;\n };\n "}]}