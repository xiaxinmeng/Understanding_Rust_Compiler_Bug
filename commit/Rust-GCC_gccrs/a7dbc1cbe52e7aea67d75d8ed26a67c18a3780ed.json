{"sha": "a7dbc1cbe52e7aea67d75d8ed26a67c18a3780ed", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTdkYmMxY2JlNTJlN2FlYTY3ZDc1ZDhlZDI2YTY3YzE4YTM3ODBlZA==", "commit": {"author": {"name": "Jan Hubicka", "email": "jh@suse.cz", "date": "2012-10-28T23:59:31Z"}, "committer": {"name": "Jan Hubicka", "email": "hubicka@gcc.gnu.org", "date": "2012-10-28T23:59:31Z"}, "message": "ipa-inline-analysis.c (eliminated_by_inlining_prob): Handle &this->field expressions.\n\n\n\t* ipa-inline-analysis.c (eliminated_by_inlining_prob): Handle\n\t&this->field expressions.\n\nFrom-SVN: r192899", "tree": {"sha": "5b3e66ce7c0bea0c2a3a738891cf18d64021e498", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5b3e66ce7c0bea0c2a3a738891cf18d64021e498"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a7dbc1cbe52e7aea67d75d8ed26a67c18a3780ed", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a7dbc1cbe52e7aea67d75d8ed26a67c18a3780ed", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a7dbc1cbe52e7aea67d75d8ed26a67c18a3780ed", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a7dbc1cbe52e7aea67d75d8ed26a67c18a3780ed/comments", "author": null, "committer": null, "parents": [{"sha": "1d5d667b3bbbdd78d86bbe3c7a0282d9ed5802c5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1d5d667b3bbbdd78d86bbe3c7a0282d9ed5802c5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1d5d667b3bbbdd78d86bbe3c7a0282d9ed5802c5"}], "stats": {"total": 20, "additions": 20, "deletions": 0}, "files": [{"sha": "8f4ca6c7da2399c332ebcbc44ed438deb31cf735", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a7dbc1cbe52e7aea67d75d8ed26a67c18a3780ed/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a7dbc1cbe52e7aea67d75d8ed26a67c18a3780ed/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=a7dbc1cbe52e7aea67d75d8ed26a67c18a3780ed", "patch": "@@ -1,3 +1,8 @@\n+2012-10-28  Jan Hubicka  <jh@suse.cz>\n+\n+\t* ipa-inline-analysis.c (eliminated_by_inlining_prob): Handle\n+\t&this->field expressions.\n+\n 2012-10-28  Vladimir Makarov  <vmakarov@redhat.com>\n \n \t* rtl.h (struct rtx_def): Add a comment for member unchanging."}, {"sha": "a8d16a8c8c6dcaf084df138b91d871d9759b717f", "filename": "gcc/ipa-inline-analysis.c", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a7dbc1cbe52e7aea67d75d8ed26a67c18a3780ed/gcc%2Fipa-inline-analysis.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a7dbc1cbe52e7aea67d75d8ed26a67c18a3780ed/gcc%2Fipa-inline-analysis.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fipa-inline-analysis.c?ref=a7dbc1cbe52e7aea67d75d8ed26a67c18a3780ed", "patch": "@@ -1567,6 +1567,7 @@ eliminated_by_inlining_prob (gimple stmt)\n \tif (gimple_assign_rhs_code (stmt) == CONVERT_EXPR\n \t    || gimple_assign_rhs_code (stmt) == NOP_EXPR\n \t    || gimple_assign_rhs_code (stmt) == VIEW_CONVERT_EXPR\n+\t    || gimple_assign_rhs_code (stmt) == ADDR_EXPR\n \t    || gimple_assign_rhs_class (stmt) == GIMPLE_SINGLE_RHS)\n \t  {\n \t    tree rhs = gimple_assign_rhs1 (stmt);\n@@ -1584,6 +1585,20 @@ eliminated_by_inlining_prob (gimple stmt)\n \t    /* Reads of parameter are expected to be free.  */\n \t    if (unmodified_parm (stmt, inner_rhs))\n \t      rhs_free = true;\n+\t    /* Match expressions of form &this->field. Those will most likely\n+\t       combine with something upstream after inlining.  */\n+\t    else if (TREE_CODE (inner_rhs) == ADDR_EXPR)\n+\t      {\n+\t\ttree op = get_base_address (TREE_OPERAND (inner_rhs, 0));\n+\t\tif (TREE_CODE (op) == PARM_DECL)\n+\t\t  rhs_free = true;\n+\t        else if (TREE_CODE (op) == MEM_REF)\n+\t\t  {\n+\t\t    op = get_base_address (TREE_OPERAND (op, 0));\n+\t\t    if (unmodified_parm (stmt, op))\n+\t\t      rhs_free = true;\n+\t\t  }\n+\t      }\n \n \t    /* When parameter is not SSA register because its address is taken\n \t       and it is just copied into one, the statement will be completely"}]}