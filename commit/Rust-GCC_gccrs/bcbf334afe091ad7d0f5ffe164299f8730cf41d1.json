{"sha": "bcbf334afe091ad7d0f5ffe164299f8730cf41d1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmNiZjMzNGFmZTA5MWFkN2QwZjVmZmUxNjQyOTlmODczMGNmNDFkMQ==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2020-05-01T17:53:32Z"}, "committer": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2020-05-01T17:53:32Z"}, "message": "c++: generic lambda and -fsanitize=vla-bound [PR93822]\n\nWithin the generic lambda the VLA capture proxy VAR_DECL has DECL_VALUE_EXPR\nwhich is a NOP_EXPR to the VLA type of the proxy.  The problem here was that\nwhen instantiating we were tsubsting that type twice, once for the type of\nthe DECL and once for the type of the NOP_EXPR, and getting two\ndifferent (though equivalent) types.  Then gimplify_type_sizes fixed up the\ntype of the DECL, but that didn't affect the type of the NOP_EXPR, leading\nto sadness.\n\nFixed by directly reusing the type from the DECL.\n\ngcc/cp/ChangeLog\n2020-05-01  Jason Merrill  <jason@redhat.com>\n\n\tPR c++/93822\n\t* pt.c (tsubst_decl): Make sure DECL_VALUE_EXPR continues to have\n\tthe same type as the variable.", "tree": {"sha": "5d5c1f2cf82369bb41a4ed14a2ba97fdfba27181", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5d5c1f2cf82369bb41a4ed14a2ba97fdfba27181"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/bcbf334afe091ad7d0f5ffe164299f8730cf41d1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bcbf334afe091ad7d0f5ffe164299f8730cf41d1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bcbf334afe091ad7d0f5ffe164299f8730cf41d1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bcbf334afe091ad7d0f5ffe164299f8730cf41d1/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "afb9b7108104a73e8ac7a9b8e6875870e5ca4bbb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/afb9b7108104a73e8ac7a9b8e6875870e5ca4bbb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/afb9b7108104a73e8ac7a9b8e6875870e5ca4bbb"}], "stats": {"total": 15, "additions": 15, "deletions": 0}, "files": [{"sha": "039e946f9507268d26d38ba232e9fcec489c5140", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bcbf334afe091ad7d0f5ffe164299f8730cf41d1/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bcbf334afe091ad7d0f5ffe164299f8730cf41d1/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=bcbf334afe091ad7d0f5ffe164299f8730cf41d1", "patch": "@@ -1,3 +1,9 @@\n+2020-05-01  Jason Merrill  <jason@redhat.com>\n+\n+\tPR c++/93822\n+\t* pt.c (tsubst_decl): Make sure DECL_VALUE_EXPR continues to have\n+\tthe same type as the variable.\n+\n 2020-04-30  Jason Merrill  <jason@redhat.com>\n \t    Nathan Sidwell  <nathan@acm.org>\n "}, {"sha": "9332865cf468749689c95f1977bdbf40f5a30d37", "filename": "gcc/cp/pt.c", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bcbf334afe091ad7d0f5ffe164299f8730cf41d1/gcc%2Fcp%2Fpt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bcbf334afe091ad7d0f5ffe164299f8730cf41d1/gcc%2Fcp%2Fpt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fpt.c?ref=bcbf334afe091ad7d0f5ffe164299f8730cf41d1", "patch": "@@ -14609,13 +14609,22 @@ tsubst_decl (tree t, tree args, tsubst_flags_t complain)\n \t    if (DECL_HAS_VALUE_EXPR_P (t))\n \t      {\n \t\ttree ve = DECL_VALUE_EXPR (t);\n+\t\t/* If the DECL_VALUE_EXPR is converted to the declared type,\n+\t\t   preserve the identity so that gimplify_type_sizes works.  */\n+\t\tbool nop = (TREE_CODE (ve) == NOP_EXPR);\n+\t\tif (nop)\n+\t\t  ve = TREE_OPERAND (ve, 0);\n \t\tve = tsubst_expr (ve, args, complain, in_decl,\n \t\t\t\t  /*constant_expression_p=*/false);\n \t\tif (REFERENCE_REF_P (ve))\n \t\t  {\n \t\t    gcc_assert (TYPE_REF_P (type));\n \t\t    ve = TREE_OPERAND (ve, 0);\n \t\t  }\n+\t\tif (nop)\n+\t\t  ve = build_nop (type, ve);\n+\t\telse\n+\t\t  gcc_checking_assert (TREE_TYPE (ve) == type);\n \t\tSET_DECL_VALUE_EXPR (r, ve);\n \t      }\n \t    if (CP_DECL_THREAD_LOCAL_P (r)"}]}