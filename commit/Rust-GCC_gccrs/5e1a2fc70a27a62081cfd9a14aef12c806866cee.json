{"sha": "5e1a2fc70a27a62081cfd9a14aef12c806866cee", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWUxYTJmYzcwYTI3YTYyMDgxY2ZkOWExNGFlZjEyYzgwNjg2NmNlZQ==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2000-07-25T19:35:45Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2000-07-25T19:35:45Z"}, "message": "i386.md (andsi_1+1): Allow HImode.\n\n\t* config/i386/i386.md (andsi_1+1): Allow HImode.\n\t(andsi_1+2): Require q_regs_operand.\n\t* gcc.dg/20000720-1.c: New test.\n\nFrom-SVN: r35249", "tree": {"sha": "483876d241641fe9be1ddf97d868af5b4e6677b5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/483876d241641fe9be1ddf97d868af5b4e6677b5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5e1a2fc70a27a62081cfd9a14aef12c806866cee", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5e1a2fc70a27a62081cfd9a14aef12c806866cee", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5e1a2fc70a27a62081cfd9a14aef12c806866cee", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5e1a2fc70a27a62081cfd9a14aef12c806866cee/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "9e81685aef368a10401bccb0a0adbed480be9eb1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9e81685aef368a10401bccb0a0adbed480be9eb1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9e81685aef368a10401bccb0a0adbed480be9eb1"}], "stats": {"total": 54, "additions": 51, "deletions": 3}, "files": [{"sha": "6da8a26e53866799e72a8c470e9bee13832d6b1b", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5e1a2fc70a27a62081cfd9a14aef12c806866cee/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5e1a2fc70a27a62081cfd9a14aef12c806866cee/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=5e1a2fc70a27a62081cfd9a14aef12c806866cee", "patch": "@@ -1,3 +1,8 @@\n+2000-07-25  Jakub Jelinek  <jakub@redhat.com>\n+\n+\t* config/i386/i386.md (andsi_1+1): Allow HImode.\n+\t(andsi_1+2): Require q_regs_operand.\n+\n 2000-07-25  Jakub Jelinek  <jakub@redhat.com>\n \n \t* config/i386/i386.md (call_pop): Check operands[0],"}, {"sha": "a47c6dcc6cea46f467229b7bdf987c32d4aaf867", "filename": "gcc/config/i386/i386.md", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5e1a2fc70a27a62081cfd9a14aef12c806866cee/gcc%2Fconfig%2Fi386%2Fi386.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5e1a2fc70a27a62081cfd9a14aef12c806866cee/gcc%2Fconfig%2Fi386%2Fi386.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.md?ref=5e1a2fc70a27a62081cfd9a14aef12c806866cee", "patch": "@@ -5000,8 +5000,8 @@\n   \"operands[1] = gen_lowpart (HImode, operands[0]);\")\n \n (define_split\n-  [(set (match_operand:SI 0 \"q_regs_operand\" \"\")\n-\t(and:SI (match_dup 0)\n+  [(set (match_operand 0 \"q_regs_operand\" \"\")\n+\t(and (match_dup 0)\n \t\t(const_int -256)))\n    (clobber (reg:CC 17))]\n   \"(optimize_size || !TARGET_PARTIAL_REG_STALL)\n@@ -5010,7 +5010,7 @@\n   \"operands[1] = gen_lowpart (QImode, operands[0]);\")\n \n (define_split\n-  [(set (match_operand 0 \"register_operand\" \"\")\n+  [(set (match_operand 0 \"q_regs_operand\" \"\")\n \t(and (match_dup 0)\n \t     (const_int -65281)))\n    (clobber (reg:CC 17))]"}, {"sha": "eccf57a617ab616e66d60dc1a1d0acc3b0fab48b", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5e1a2fc70a27a62081cfd9a14aef12c806866cee/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5e1a2fc70a27a62081cfd9a14aef12c806866cee/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=5e1a2fc70a27a62081cfd9a14aef12c806866cee", "patch": "@@ -1,3 +1,7 @@\n+2000-07-25  Jakub Jelinek  <jakub@redhat.com>\n+\n+\t* gcc.dg/20000720-1.c: New test.\n+\n 2000-07-25  Toon Moene  <toon@moene.indiv.nluug.nl>\n \n \t* g77.f-torture/compile/20000630-2.x: Removed.  Case fixed."}, {"sha": "92b52fb1d3b7dc1e3c4b383f5f7fe424756167d8", "filename": "gcc/testsuite/gcc.dg/20000720-1.c", "status": "added", "additions": 39, "deletions": 0, "changes": 39, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5e1a2fc70a27a62081cfd9a14aef12c806866cee/gcc%2Ftestsuite%2Fgcc.dg%2F20000720-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5e1a2fc70a27a62081cfd9a14aef12c806866cee/gcc%2Ftestsuite%2Fgcc.dg%2F20000720-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2F20000720-1.c?ref=5e1a2fc70a27a62081cfd9a14aef12c806866cee", "patch": "@@ -0,0 +1,39 @@\n+/* { dg-do compile { target i?86-*-* } } */\n+/* { dg-options \"-mpreferred-stack-boundary=2 -march=i586 -O2 -fomit-frame-pointer\" } */\n+\n+extern void *foo(void *a, const void *b, unsigned c);\n+\n+extern inline void *\n+bar(void *a, const void *b, unsigned c)\n+{\n+  int d0, d1, d2;\n+  __asm__ __volatile__(\n+    \"\" :\n+    \"=&c\" (d0), \"=&D\" (d1), \"=&S\" (d2) :\n+    \"0\" (c/4), \"q\" (c), \"1\" (a), \"2\" (b) :\n+    \"memory\");\n+  return a;\n+}\n+\n+typedef struct {\n+  unsigned char a;\n+  unsigned b : 2;\n+  unsigned c : 4;\n+  unsigned d : 2;\n+} *baz;\n+\n+static int\n+dead(unsigned short *v, char *w, unsigned char *x, int y, int z)\n+{\n+  int i = 0;\n+  unsigned short j = *v;\n+\n+  while (y > 0) {\n+    ((baz)x)->a = j;\n+    ((baz)x)->b = 0;\n+    ((baz)x)->c = 0;\n+    ((baz)x)->d = 0;\n+    __builtin_constant_p(i) ? foo(x, w, i) : bar(x, w, i);\n+  }\n+  return z - y;\n+}"}]}