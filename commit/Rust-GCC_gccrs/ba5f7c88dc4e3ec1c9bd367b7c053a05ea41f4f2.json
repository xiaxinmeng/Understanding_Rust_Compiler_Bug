{"sha": "ba5f7c88dc4e3ec1c9bd367b7c053a05ea41f4f2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmE1ZjdjODhkYzRlM2VjMWM5YmQzNjdiN2MwNTNhMDVlYTQxZjRmMg==", "commit": {"author": {"name": "Richard Sandiford", "email": "richard@codesourcery.com", "date": "2007-01-18T19:12:34Z"}, "committer": {"name": "Richard Sandiford", "email": "rsandifo@gcc.gnu.org", "date": "2007-01-18T19:12:34Z"}, "message": "200x-xx-xx Richard Sandiford <richard@codesourcery.com> Nathan Sidwell <nathan@codesourcery.com>\n\ngcc/\n200x-xx-xx  Richard Sandiford  <richard@codesourcery.com>\n\t    Nathan Sidwell  <nathan@codesourcery.com>\n\n\t* config/m68k/m68k.h (PCC_STATIC_STRUCT_RETURN): Delete.\n\t(ASM_OUTPUT_REG_PUSH, ASM_OUTPUT_REG_POP): Add MOTOROLA cases.\n\t* config/m68k/coff.h (REGISTER_PREFIX_MD): Delete.\n\t* config/m68k/m68020-elf.h (LIB_SPEC): Delete.\n\t* config/m68k/m68k-none.h (CC1_SPEC, CPP_SUBTARGET_SPEC): Delete.\n\t* config/m68k/m68kelf.h (IMMEDIATE_PREFIX, REGISTER_PREFIX_MD)\n\t(ASM_OUTPUT_REG_PUSH, ASM_OUTPUT_REG_POP): Delete.\n\t(NO_DOLLAR_IN_LABEL, PCC_STATIC_STRUCT_RETURN): Don't undefine.\n\t(BSS_ASM_OP, ASM_OUTPUT_SKIP, ASM_OUTPUT_ASCII): Delete.\n\t* config/m68k/m68kemb.h (PCC_STATIC_STRUCT_RETURN): Don't undefine.\n\t* config/m68k/linux.h (SIZE_TYPE, PTRDIFF_TYPE, WCHAR_TYPE)\n\t(WCHAR_TYPE_SIZE, TARGET_OBJFMT_CPP_BUILTINS): Delete.\n\t(TARGET_OS_CPP_BUILTINS): Don't define mc68000 and mc68020 here.\n\t(DBX_REGISTER_NUMBER): Delete.\n\t* config/m68k/netbsd-elf.h (IMMEDIATE_PREFIX): Delete.\n\t(PCC_STATIC_STRUCT_RETURN): Don't undefine.\n\t* config/m68k/openbsd.h (PCC_STATIC_STRUCT_RETURN): Define.\n\nCo-Authored-By: Nathan Sidwell <nathan@codesourcery.com>\n\nFrom-SVN: r120913", "tree": {"sha": "358f384c5ca6f85df6f37a4df3797dab0cebfacc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/358f384c5ca6f85df6f37a4df3797dab0cebfacc"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ba5f7c88dc4e3ec1c9bd367b7c053a05ea41f4f2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ba5f7c88dc4e3ec1c9bd367b7c053a05ea41f4f2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ba5f7c88dc4e3ec1c9bd367b7c053a05ea41f4f2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ba5f7c88dc4e3ec1c9bd367b7c053a05ea41f4f2/comments", "author": null, "committer": null, "parents": [{"sha": "abe92a04b69b6598609da0f1d334ac4a01f7edf5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/abe92a04b69b6598609da0f1d334ac4a01f7edf5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/abe92a04b69b6598609da0f1d334ac4a01f7edf5"}], "stats": {"total": 198, "additions": 38, "deletions": 160}, "files": [{"sha": "d8009592af1ff18ec80d56584c2da78a58edfb21", "filename": "gcc/ChangeLog", "status": "modified", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ba5f7c88dc4e3ec1c9bd367b7c053a05ea41f4f2/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ba5f7c88dc4e3ec1c9bd367b7c053a05ea41f4f2/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=ba5f7c88dc4e3ec1c9bd367b7c053a05ea41f4f2", "patch": "@@ -1,3 +1,24 @@\n+2007-01-18  Richard Sandiford  <richard@codesourcery.com>\n+\t    Nathan Sidwell  <nathan@codesourcery.com>\n+\n+\t* config/m68k/m68k.h (PCC_STATIC_STRUCT_RETURN): Delete.\n+\t(ASM_OUTPUT_REG_PUSH, ASM_OUTPUT_REG_POP): Add MOTOROLA cases.\n+\t* config/m68k/coff.h (REGISTER_PREFIX_MD): Delete.\n+\t* config/m68k/m68020-elf.h (LIB_SPEC): Delete.\n+\t* config/m68k/m68k-none.h (CC1_SPEC, CPP_SUBTARGET_SPEC): Delete.\n+\t* config/m68k/m68kelf.h (IMMEDIATE_PREFIX, REGISTER_PREFIX_MD)\n+\t(ASM_OUTPUT_REG_PUSH, ASM_OUTPUT_REG_POP): Delete.\n+\t(NO_DOLLAR_IN_LABEL, PCC_STATIC_STRUCT_RETURN): Don't undefine.\n+\t(BSS_ASM_OP, ASM_OUTPUT_SKIP, ASM_OUTPUT_ASCII): Delete.\n+\t* config/m68k/m68kemb.h (PCC_STATIC_STRUCT_RETURN): Don't undefine.\n+\t* config/m68k/linux.h (SIZE_TYPE, PTRDIFF_TYPE, WCHAR_TYPE)\n+\t(WCHAR_TYPE_SIZE, TARGET_OBJFMT_CPP_BUILTINS): Delete.\n+\t(TARGET_OS_CPP_BUILTINS): Don't define mc68000 and mc68020 here.\n+\t(DBX_REGISTER_NUMBER): Delete.\n+\t* config/m68k/netbsd-elf.h (IMMEDIATE_PREFIX): Delete.\n+\t(PCC_STATIC_STRUCT_RETURN): Don't undefine.\n+\t* config/m68k/openbsd.h (PCC_STATIC_STRUCT_RETURN): Define.\n+\n 2007-01-18  Richard Sandiford  <richard@codesourcery.com>\n \n \t* config.gcc (m68k-*-uclinux*): Add flat.h to $tm_file."}, {"sha": "14090cd5729f0bde1eebb71e02cec54114c42e26", "filename": "gcc/config/m68k/coff.h", "status": "modified", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ba5f7c88dc4e3ec1c9bd367b7c053a05ea41f4f2/gcc%2Fconfig%2Fm68k%2Fcoff.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ba5f7c88dc4e3ec1c9bd367b7c053a05ea41f4f2/gcc%2Fconfig%2Fm68k%2Fcoff.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm68k%2Fcoff.h?ref=ba5f7c88dc4e3ec1c9bd367b7c053a05ea41f4f2", "patch": "@@ -46,12 +46,6 @@ Boston, MA 02110-1301, USA.  */\n #undef REGISTER_PREFIX\n #define REGISTER_PREFIX \"%\"\n \n-/* In the machine description we can't use %R, because it will not be seen\n-   by ASM_FPRINTF.  (Isn't that a design bug?).  */\n-\n-#undef REGISTER_PREFIX_MD\n-#define REGISTER_PREFIX_MD \"%%\"\n-\n /* config/m68k.md has an explicit reference to the program counter,\n    prefix this by the register prefix.  */\n "}, {"sha": "897410f383d886bce7b351efb9d628d5f99b1d72", "filename": "gcc/config/m68k/linux.h", "status": "modified", "additions": 1, "deletions": 33, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ba5f7c88dc4e3ec1c9bd367b7c053a05ea41f4f2/gcc%2Fconfig%2Fm68k%2Flinux.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ba5f7c88dc4e3ec1c9bd367b7c053a05ea41f4f2/gcc%2Fconfig%2Fm68k%2Flinux.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm68k%2Flinux.h?ref=ba5f7c88dc4e3ec1c9bd367b7c053a05ea41f4f2", "patch": "@@ -58,34 +58,8 @@ Boston, MA 02110-1301, USA.  */\n \n #define ASM_COMMENT_START \"|\"\n \n-#undef SIZE_TYPE\n-#define SIZE_TYPE \"unsigned int\"\n-\n-#undef PTRDIFF_TYPE\n-#define PTRDIFF_TYPE \"int\"\n-\n-#undef WCHAR_TYPE\n-#define WCHAR_TYPE \"long int\"\n-\n-#undef WCHAR_TYPE_SIZE\n-#define WCHAR_TYPE_SIZE BITS_PER_WORD\n-\n /* Target OS builtins.  */\n-#define TARGET_OS_CPP_BUILTINS()\t\t\\\n-  do\t\t\t\t\t\t\\\n-    {\t\t\t\t\t\t\\\n-\tLINUX_TARGET_OS_CPP_BUILTINS();\t\t\\\n-\tbuiltin_define_std (\"mc68000\");\t\t\\\n-\tbuiltin_define_std (\"mc68020\");\t\t\\\n-   }\t\t\t\t\t\t\\\n-  while (0)\n-\n-#define TARGET_OBJFMT_CPP_BUILTINS()\t\t\\\n-  do\t\t\t\t\t\t\\\n-    {\t\t\t\t\t\t\\\n-\tbuiltin_define (\"__ELF__\");\t\t\\\n-    }\t\t\t\t\t\t\\\n-  while (0)\n+#define TARGET_OS_CPP_BUILTINS() LINUX_TARGET_OS_CPP_BUILTINS()\n \n #undef CPP_SPEC\n #define CPP_SPEC \"%{posix:-D_POSIX_SOURCE} %{pthread:-D_REENTRANT}\"\n@@ -175,12 +149,6 @@ Boston, MA 02110-1301, USA.  */\n     fprintf (FILE, \"\\tjbsr _mcount\\n\");\t\t\t\t\t\\\n }\n \n-/* How to renumber registers for dbx and gdb.\n-   On the Sun-3, the floating point registers have numbers\n-   18 to 25, not 16 to 23 as they do in the compiler.  */\n-\n-#define DBX_REGISTER_NUMBER(REGNO) ((REGNO) < 16 ? (REGNO) : (REGNO) + 2)\n-\n /* Do not break .stabs pseudos into continuations.  */\n \n #define DBX_CONTIN_LENGTH 0"}, {"sha": "7cd44eb9d61ae5646a8fa6a9503c7516f2e22ec8", "filename": "gcc/config/m68k/m68020-elf.h", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ba5f7c88dc4e3ec1c9bd367b7c053a05ea41f4f2/gcc%2Fconfig%2Fm68k%2Fm68020-elf.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ba5f7c88dc4e3ec1c9bd367b7c053a05ea41f4f2/gcc%2Fconfig%2Fm68k%2Fm68020-elf.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm68k%2Fm68020-elf.h?ref=ba5f7c88dc4e3ec1c9bd367b7c053a05ea41f4f2", "patch": "@@ -28,6 +28,4 @@ Boston, MA 02110-1301, USA.  */\n #undef\tSTARTFILE_SPEC\n #define STARTFILE_SPEC \"crtbegin.o%s\"\n \n-#define LIB_SPEC \"-lc\"\n-\n /* end of m68020-elf.h */"}, {"sha": "15ad022ce7200b7a42387d4017e017508ed1ac5a", "filename": "gcc/config/m68k/m68k-none.h", "status": "modified", "additions": 0, "deletions": 9, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ba5f7c88dc4e3ec1c9bd367b7c053a05ea41f4f2/gcc%2Fconfig%2Fm68k%2Fm68k-none.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ba5f7c88dc4e3ec1c9bd367b7c053a05ea41f4f2/gcc%2Fconfig%2Fm68k%2Fm68k-none.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm68k%2Fm68k-none.h?ref=ba5f7c88dc4e3ec1c9bd367b7c053a05ea41f4f2", "patch": "@@ -21,12 +21,3 @@ Boston, MA 02110-1301, USA.  */\n #undef ASM_SPEC\n #define ASM_SPEC \"%(asm_cpu_spec) %{fPIC:--pcrel} %{fpic:--pcrel} \\\n  %{msep-data:--pcrel} %{mid-shared-library:--pcrel}\"\n-\n-/* cc1/cc1plus always receives all the -m flags. If the specs strings above \n-   are consistent with the flags in m68k.opt, there should be no need for\n-   any further cc1/cc1plus specs.  */\n-\n-#undef CC1_SPEC\n-#define CC1_SPEC \"\"\n-\n-#define CPP_SUBTARGET_SPEC \"\""}, {"sha": "1d8b4ae48a399fed3326b45a358caff53185e461", "filename": "gcc/config/m68k/m68k.h", "status": "modified", "additions": 11, "deletions": 6, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ba5f7c88dc4e3ec1c9bd367b7c053a05ea41f4f2/gcc%2Fconfig%2Fm68k%2Fm68k.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ba5f7c88dc4e3ec1c9bd367b7c053a05ea41f4f2/gcc%2Fconfig%2Fm68k%2Fm68k.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm68k%2Fm68k.h?ref=ba5f7c88dc4e3ec1c9bd367b7c053a05ea41f4f2", "patch": "@@ -625,8 +625,6 @@ extern enum reg_class regno_reg_class[];\n    XXX This macro is m68k specific and used only for m68kemb.h.  */\n #define NEEDS_UNTYPED_CALL 0\n \n-#define PCC_STATIC_STRUCT_RETURN\n-\n /* On the m68k, all arguments are usually pushed on the stack.  */\n #define FUNCTION_ARG_REGNO_P(N) 0\n \f\n@@ -1127,10 +1125,17 @@ do { if (cc_prev_status.flags & CC_IN_68881)\t\t\t\\\n #define ASM_GENERATE_INTERNAL_LABEL(LABEL,PREFIX,NUM)\t\\\n   sprintf (LABEL, \"*%s%s%ld\", LOCAL_LABEL_PREFIX, PREFIX, (long)(NUM))\n \n-#define ASM_OUTPUT_REG_PUSH(FILE,REGNO)  \\\n-  asm_fprintf (FILE, \"\\tmovel %s,%Rsp@-\\n\", reg_names[REGNO])\n-#define ASM_OUTPUT_REG_POP(FILE,REGNO)  \\\n-  asm_fprintf (FILE, \"\\tmovel %Rsp@+,%s\\n\", reg_names[REGNO])\n+#define ASM_OUTPUT_REG_PUSH(FILE,REGNO)\t\t\t\\\n+  asm_fprintf (FILE, (MOTOROLA\t\t\t\t\\\n+\t\t      ? \"\\tmove.l %s,-(%Rsp)\\n\"\t\t\\\n+\t\t      : \"\\tmovel %s,%Rsp@-\\n\"),\t\t\\\n+\t       reg_names[REGNO])\n+\n+#define ASM_OUTPUT_REG_POP(FILE,REGNO)\t\t\t\\\n+  asm_fprintf (FILE, (MOTOROLA\t\t\t\t\\\n+\t\t      ? \"\\tmove.l (%Rsp)+,%s\\n\"\t\t\\\n+\t\t      : \"\\tmovel %Rsp@+,%s\\n\"),\t\t\\\n+\t       reg_names[REGNO])\n \n /* The m68k does not use absolute case-vectors, but we must define this macro\n    anyway.  */"}, {"sha": "ecdbd508ed01934addab53c9cfd39773b7e0438f", "filename": "gcc/config/m68k/m68kelf.h", "status": "modified", "additions": 1, "deletions": 88, "changes": 89, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ba5f7c88dc4e3ec1c9bd367b7c053a05ea41f4f2/gcc%2Fconfig%2Fm68k%2Fm68kelf.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ba5f7c88dc4e3ec1c9bd367b7c053a05ea41f4f2/gcc%2Fconfig%2Fm68k%2Fm68kelf.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm68k%2Fm68kelf.h?ref=ba5f7c88dc4e3ec1c9bd367b7c053a05ea41f4f2", "patch": "@@ -28,7 +28,7 @@ Boston, MA 02110-1301, USA.  */\n #define SWBEG_ASM_OP \"\\t.swbeg\\t\"\n #endif\n \n-/* Here are four prefixes that are used by asm_fprintf to\n+/* Here are three prefixes that are used by asm_fprintf to\n    facilitate customization for alternate assembler syntaxes.\n    Machines with no likelihood of an alternate syntax need not\n    define these and need not use asm_fprintf.  */\n@@ -51,17 +51,6 @@ Boston, MA 02110-1301, USA.  */\n #undef USER_LABEL_PREFIX\n #define USER_LABEL_PREFIX \"\"\n \n-/* The prefix for immediate operands.  */\n-\n-#undef  IMMEDIATE_PREFIX\n-#define IMMEDIATE_PREFIX \"#\"\n-\n-/* In the machine description we can't use %R, because it will not be seen\n-   by ASM_FPRINTF.  (Isn't that a design bug?).  */\n-\n-#undef REGISTER_PREFIX_MD\n-#define REGISTER_PREFIX_MD \"%%\"\n-\n /* config/m68k.md has an explicit reference to the program counter,\n    prefix this by the register prefix.  */\n \n@@ -88,39 +77,6 @@ do {\t\t\t\t\t\t\t\t\\\n     fprintf ((FILE), \"%s%u\\n\", ALIGN_ASM_OP, 1 << (LOG));\t\\\n } while (0)\n \n-/* Use proper assembler syntax for these macros.  */\n-#undef ASM_OUTPUT_REG_PUSH\n-#define ASM_OUTPUT_REG_PUSH(FILE,REGNO)  \\\n-  asm_fprintf (FILE, \"\\t%Omove.l %s,-(%Rsp)\\n\", reg_names[REGNO])\n-\n-#undef ASM_OUTPUT_REG_POP\n-#define ASM_OUTPUT_REG_POP(FILE,REGNO)  \\\n-  asm_fprintf (FILE, \"\\t%Omove.l (%Rsp)+,%s\\n\", reg_names[REGNO])\n-\n-/*  Override the definition of NO_DOLLAR_IN_LABEL in svr4.h, for special\n-    g++ assembler names.  When this is defined, g++ uses embedded '.'\n-    characters and some m68k assemblers have problems with this.  The\n-    chances are much greater that any particular assembler will permit\n-    embedded '$' characters.  */\n-\n-#undef NO_DOLLAR_IN_LABEL\n-\n-/* Define PCC_STATIC_STRUCT_RETURN if the convention on the target machine\n-   is to use the nonreentrant technique for returning structure and union\n-   values, as commonly implemented by the AT&T Portable C Compiler (PCC).\n-   When defined, the gcc option -fpcc-struct-return can be used to cause\n-   this form to be generated.  When undefined, the option does nothing.\n-   For m68k SVR4, the convention is to use a reentrant technique compatible\n-   with the gcc default, so override the definition of this macro in m68k.h */\n-\n-#undef PCC_STATIC_STRUCT_RETURN\n-\n-/* Local common symbols are declared to the assembler with \".lcomm\" rather\n-   than \".bss\", so override the definition in svr4.h */\n-\n-#undef BSS_ASM_OP\n-#define BSS_ASM_OP\t\"\\t.lcomm\\t\"\n-\n /* Register in which address to store a structure value is passed to a\n    function.  The default in m68k.h is a1.  For m68k/SVR4 it is a0.  */\n \n@@ -137,16 +93,6 @@ do {\t\t\t\t\t\t\t\t\\\n #undef DBX_REGISTER_NUMBER\n #define DBX_REGISTER_NUMBER(REGNO) (REGNO)\n \n-/* The ASM_OUTPUT_SKIP macro is first defined in m68k.h, using \".skip\".\n-   It is then overridden by m68k/sgs.h to use \".space\", and again by svr4.h\n-   to use \".zero\".  The m68k/SVR4 assembler uses \".space\", so repeat the\n-   definition from m68k/sgs.h here.  Note that ASM_NO_SKIP_IN_TEXT is\n-   defined in m68k/sgs.h, so we don't have to repeat it here.  */\n-\n-#undef ASM_OUTPUT_SKIP\n-#define ASM_OUTPUT_SKIP(FILE,SIZE)  \\\n-  fprintf (FILE, \"%s%u\\n\", SPACE_ASM_OP, (int)(SIZE))\n-\n #if 0\n /* SVR4 m68k assembler is bitching on the `comm i,1,1' which askes for \n    1 byte alignment. Don't generate alignment for COMMON seems to be\n@@ -156,39 +102,6 @@ do {\t\t\t\t\t\t\t\t\\\n #undef ASM_OUTPUT_ALIGNED_LOCAL\n #endif\n \n-/* The `string' directive on m68k svr4 does not handle string with\n-   escape char (i.e., `\\') right. Use normal way to output ASCII bytes\n-   seems to be safer.  */\n-#undef ASM_OUTPUT_ASCII\n-#define ASM_OUTPUT_ASCII(FILE,PTR,LEN)\t\t\t\t\\\n-do {\t\t\t\t\t\t\t\t\\\n-  register int sp = 0, ch;\t\t\t\t\t\\\n-  fputs (integer_asm_op (1, TRUE), (FILE));\t\t\t\\\n-  do {\t\t\t\t\t\t\t\t\\\n-    ch = (PTR)[sp];\t\t\t\t\t\t\\\n-    if (ch > ' ' && ! (ch & 0x80) && ch != '\\\\')\t\t\\\n-      {\t\t\t\t\t\t\t\t\\\n-\tfprintf ((FILE), \"'%c\", ch);\t\t\t\t\\\n-      }\t\t\t\t\t\t\t\t\\\n-    else\t\t\t\t\t\t\t\\\n-      {\t\t\t\t\t\t\t\t\\\n-\tfprintf ((FILE), \"0x%x\", ch);\t\t\t\t\\\n-      }\t\t\t\t\t\t\t\t\\\n-    if (++sp < (LEN))\t\t\t\t\t\t\\\n-      {\t\t\t\t\t\t\t\t\\\n-\tif ((sp % 10) == 0)\t\t\t\t\t\\\n-\t  {\t\t\t\t\t\t\t\\\n-\t    fprintf ((FILE), \"\\n%s\", integer_asm_op (1, TRUE));\t\\\n-\t  }\t\t\t\t\t\t\t\\\n-\telse\t\t\t\t\t\t\t\\\n-\t  {\t\t\t\t\t\t\t\\\n-\t    putc (',', (FILE));\t\t\t\t\t\\\n-\t  }\t\t\t\t\t\t\t\\\n-      }\t\t\t\t\t\t\t\t\\\n-  } while (sp < (LEN));\t\t\t\t\t\t\\\n-  putc ('\\n', (FILE));\t\t\t\t\t\t\\\n-} while (0)\n-\n #undef ASM_OUTPUT_COMMON\n #undef ASM_OUTPUT_LOCAL\n #define ASM_OUTPUT_COMMON(FILE, NAME, SIZE, ROUNDED)  \\"}, {"sha": "3ada8a96926027637c2cc09ea38711fd30e5a430", "filename": "gcc/config/m68k/m68kemb.h", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ba5f7c88dc4e3ec1c9bd367b7c053a05ea41f4f2/gcc%2Fconfig%2Fm68k%2Fm68kemb.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ba5f7c88dc4e3ec1c9bd367b7c053a05ea41f4f2/gcc%2Fconfig%2Fm68k%2Fm68kemb.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm68k%2Fm68kemb.h?ref=ba5f7c88dc4e3ec1c9bd367b7c053a05ea41f4f2", "patch": "@@ -14,10 +14,6 @@\n    so we define PCC_BITFIELD_TYPE_MATTERS.  */\n #define PCC_BITFIELD_TYPE_MATTERS 1\n \n-/* Undef PCC_STATIC_STRUCT_RETURN so that we get a re-entrant calling\n-   convention.  */\n-#undef PCC_STATIC_STRUCT_RETURN\n-\n /* Don't default to pcc-struct-return, so that we can return small structures\n    and unions in registers, which is slightly more efficient.  */\n #define DEFAULT_PCC_STRUCT_RETURN 0"}, {"sha": "234d017aa799163c2c928c88cf38a0778f05aebf", "filename": "gcc/config/m68k/netbsd-elf.h", "status": "modified", "additions": 0, "deletions": 12, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ba5f7c88dc4e3ec1c9bd367b7c053a05ea41f4f2/gcc%2Fconfig%2Fm68k%2Fnetbsd-elf.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ba5f7c88dc4e3ec1c9bd367b7c053a05ea41f4f2/gcc%2Fconfig%2Fm68k%2Fnetbsd-elf.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm68k%2Fnetbsd-elf.h?ref=ba5f7c88dc4e3ec1c9bd367b7c053a05ea41f4f2", "patch": "@@ -134,12 +134,6 @@ while (0)\n #define USER_LABEL_PREFIX \"\"\n \n \n-/* The prefix for immediate operands.  */\n-\n-#undef IMMEDIATE_PREFIX\n-#define IMMEDIATE_PREFIX \"#\"\n-\n-\n #undef ASM_COMMENT_START\n #define ASM_COMMENT_START \"|\"\n \n@@ -329,12 +323,6 @@ while (0)\n #define BIGGEST_ALIGNMENT 64\n \n \n-/* For m68k SVR4, structures are returned using the reentrant\n-   technique.  */\n-\n-#undef PCC_STATIC_STRUCT_RETURN\n-\n-\n /* The svr4 ABI for the m68k says that records and unions are returned\n    in memory.  */\n "}, {"sha": "2cedf96902477c57ef55ed263c9c18338793f2dc", "filename": "gcc/config/m68k/openbsd.h", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ba5f7c88dc4e3ec1c9bd367b7c053a05ea41f4f2/gcc%2Fconfig%2Fm68k%2Fopenbsd.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ba5f7c88dc4e3ec1c9bd367b7c053a05ea41f4f2/gcc%2Fconfig%2Fm68k%2Fopenbsd.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm68k%2Fopenbsd.h?ref=ba5f7c88dc4e3ec1c9bd367b7c053a05ea41f4f2", "patch": "@@ -73,6 +73,10 @@ Boston, MA 02110-1301, USA.  */\n \n /* Stack & calling: aggregate returns.  */\n \n+/* ??? This is traditional, but quite possibly wrong.  It appears to\n+   disagree with gdb.  */\n+#define PCC_STATIC_STRUCT_RETURN 1\n+\n /* Don't default to pcc-struct-return, because gcc is the only compiler, and\n    we want to retain compatibility with older gcc versions.  */\n #define DEFAULT_PCC_STRUCT_RETURN 0"}]}