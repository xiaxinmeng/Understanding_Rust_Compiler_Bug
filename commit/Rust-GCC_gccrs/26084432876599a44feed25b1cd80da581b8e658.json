{"sha": "26084432876599a44feed25b1cd80da581b8e658", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjYwODQ0MzI4NzY1OTlhNDRmZWVkMjViMWNkODBkYTU4MWI4ZTY1OA==", "commit": {"author": {"name": "Sriraman Tallam", "email": "tmsriram@google.com", "date": "2013-12-11T20:06:46Z"}, "committer": {"name": "Sriraman Tallam", "email": "tmsriram@gcc.gnu.org", "date": "2013-12-11T20:06:46Z"}, "message": "re PR target/59390 (presence of  __attribute__((target(\"fma\"))) declaration breaks __builtin_fma)\n\n2013-12-11  Sriraman Tallam  <tmsriram@google.com>\n\n\tPR target/59390\n\t* config/i386/i386.c (get_builtin): New function.\n\t(ix86_builtin_vectorized_function): Replace all instances of\n\tix86_builtins[...] with get_builtin(...).\n\t(ix86_builtin_reciprocal): Ditto.\n\n\tPR target/59390\n\t* gcc.target/i386/pr59390.c: New test.\n\t* gcc.target/i386/pr59390_1.c: New test.\n\t* gcc.target/i386/pr59390_2.c: New test.\n\nTested boot-strap on all languages and test parity on x86_64 and with -m32.\n\nFrom-SVN: r205904", "tree": {"sha": "877aea4df9313c01b8fd3f23076ed080798864a9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/877aea4df9313c01b8fd3f23076ed080798864a9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/26084432876599a44feed25b1cd80da581b8e658", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/26084432876599a44feed25b1cd80da581b8e658", "html_url": "https://github.com/Rust-GCC/gccrs/commit/26084432876599a44feed25b1cd80da581b8e658", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/26084432876599a44feed25b1cd80da581b8e658/comments", "author": {"login": "tmsri", "id": 38991943, "node_id": "MDQ6VXNlcjM4OTkxOTQz", "avatar_url": "https://avatars.githubusercontent.com/u/38991943?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tmsri", "html_url": "https://github.com/tmsri", "followers_url": "https://api.github.com/users/tmsri/followers", "following_url": "https://api.github.com/users/tmsri/following{/other_user}", "gists_url": "https://api.github.com/users/tmsri/gists{/gist_id}", "starred_url": "https://api.github.com/users/tmsri/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tmsri/subscriptions", "organizations_url": "https://api.github.com/users/tmsri/orgs", "repos_url": "https://api.github.com/users/tmsri/repos", "events_url": "https://api.github.com/users/tmsri/events{/privacy}", "received_events_url": "https://api.github.com/users/tmsri/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "711df88d24be13cfb2be62905db08994ffbe9a2d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/711df88d24be13cfb2be62905db08994ffbe9a2d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/711df88d24be13cfb2be62905db08994ffbe9a2d"}], "stats": {"total": 194, "additions": 142, "deletions": 52}, "files": [{"sha": "d95ce52d7bce3eb6ddf03846e898ea3438a21d62", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/26084432876599a44feed25b1cd80da581b8e658/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/26084432876599a44feed25b1cd80da581b8e658/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=26084432876599a44feed25b1cd80da581b8e658", "patch": "@@ -1,3 +1,12 @@\n+2013-12-11  Sriraman Tallam  <tmsriram@google.com>\n+\n+\tPR target/59390\n+\t* config/i386/i386.c (get_builtin): New function.\n+\t(ix86_builtin_vectorized_function): Replace all instances of\n+\tix86_builtins[...] with get_builtin(...).\n+\t(ix86_builtin_reciprocal): Ditto.\n+\n+\n 2013-12-11  Balaji V. Iyer  <balaji.v.iyer@intel.com>\n \n \t* langhooks.h (lang_hooks_for_decls): Remove lang_hooks_for_cilkplus."}, {"sha": "8f7920995b06567702c6a51349fb09d2ee9d018f", "filename": "gcc/config/i386/i386.c", "status": "modified", "additions": 77, "deletions": 52, "changes": 129, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/26084432876599a44feed25b1cd80da581b8e658/gcc%2Fconfig%2Fi386%2Fi386.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/26084432876599a44feed25b1cd80da581b8e658/gcc%2Fconfig%2Fi386%2Fi386.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.c?ref=26084432876599a44feed25b1cd80da581b8e658", "patch": "@@ -33777,6 +33777,31 @@ ix86_expand_builtin (tree exp, rtx target, rtx subtarget,\n   gcc_unreachable ();\n }\n \n+/* This returns the target-specific builtin with code CODE if\n+   current_function_decl has visibility on this builtin, which is checked\n+   using isa flags.  Returns NULL_TREE otherwise.  */\n+\n+static tree ix86_get_builtin (enum ix86_builtins code)\n+{\n+  struct cl_target_option *opts;\n+  tree target_tree = NULL_TREE;\n+\n+  /* Determine the isa flags of current_function_decl.  */\n+\n+  if (current_function_decl)\n+    target_tree = DECL_FUNCTION_SPECIFIC_TARGET (current_function_decl);\n+\n+  if (target_tree == NULL)\n+    target_tree = target_option_default_node;\n+\n+  opts = TREE_TARGET_OPTION (target_tree);\n+\n+  if (ix86_builtins_isa[(int) code].isa & opts->x_ix86_isa_flags)\n+    return ix86_builtin_decl (code, true);\n+  else\n+    return NULL_TREE;\n+}\n+\n /* Returns a function decl for a vectorized version of the builtin function\n    with builtin function code FN and the result vector type TYPE, or NULL_TREE\n    if it is not available.  */\n@@ -33805,19 +33830,19 @@ ix86_builtin_vectorized_function (tree fndecl, tree type_out,\n       if (out_mode == DFmode && in_mode == DFmode)\n \t{\n \t  if (out_n == 2 && in_n == 2)\n-\t    return ix86_builtins[IX86_BUILTIN_SQRTPD];\n+\t    return ix86_get_builtin (IX86_BUILTIN_SQRTPD);\n \t  else if (out_n == 4 && in_n == 4)\n-\t    return ix86_builtins[IX86_BUILTIN_SQRTPD256];\n+\t    return ix86_get_builtin (IX86_BUILTIN_SQRTPD256);\n \t}\n       break;\n \n     case BUILT_IN_SQRTF:\n       if (out_mode == SFmode && in_mode == SFmode)\n \t{\n \t  if (out_n == 4 && in_n == 4)\n-\t    return ix86_builtins[IX86_BUILTIN_SQRTPS_NR];\n+\t    return ix86_get_builtin (IX86_BUILTIN_SQRTPS_NR);\n \t  else if (out_n == 8 && in_n == 8)\n-\t    return ix86_builtins[IX86_BUILTIN_SQRTPS_NR256];\n+\t    return ix86_get_builtin (IX86_BUILTIN_SQRTPS_NR256);\n \t}\n       break;\n \n@@ -33831,9 +33856,9 @@ ix86_builtin_vectorized_function (tree fndecl, tree type_out,\n       if (out_mode == SImode && in_mode == DFmode)\n \t{\n \t  if (out_n == 4 && in_n == 2)\n-\t    return ix86_builtins[IX86_BUILTIN_FLOORPD_VEC_PACK_SFIX];\n+\t    return ix86_get_builtin (IX86_BUILTIN_FLOORPD_VEC_PACK_SFIX);\n \t  else if (out_n == 8 && in_n == 4)\n-\t    return ix86_builtins[IX86_BUILTIN_FLOORPD_VEC_PACK_SFIX256];\n+\t    return ix86_get_builtin (IX86_BUILTIN_FLOORPD_VEC_PACK_SFIX256);\n \t}\n       break;\n \n@@ -33847,9 +33872,9 @@ ix86_builtin_vectorized_function (tree fndecl, tree type_out,\n       if (out_mode == SImode && in_mode == SFmode)\n \t{\n \t  if (out_n == 4 && in_n == 4)\n-\t    return ix86_builtins[IX86_BUILTIN_FLOORPS_SFIX];\n+\t    return ix86_get_builtin (IX86_BUILTIN_FLOORPS_SFIX);\n \t  else if (out_n == 8 && in_n == 8)\n-\t    return ix86_builtins[IX86_BUILTIN_FLOORPS_SFIX256];\n+\t    return ix86_get_builtin (IX86_BUILTIN_FLOORPS_SFIX256);\n \t}\n       break;\n \n@@ -33863,9 +33888,9 @@ ix86_builtin_vectorized_function (tree fndecl, tree type_out,\n       if (out_mode == SImode && in_mode == DFmode)\n \t{\n \t  if (out_n == 4 && in_n == 2)\n-\t    return ix86_builtins[IX86_BUILTIN_CEILPD_VEC_PACK_SFIX];\n+\t    return ix86_get_builtin (IX86_BUILTIN_CEILPD_VEC_PACK_SFIX);\n \t  else if (out_n == 8 && in_n == 4)\n-\t    return ix86_builtins[IX86_BUILTIN_CEILPD_VEC_PACK_SFIX256];\n+\t    return ix86_get_builtin (IX86_BUILTIN_CEILPD_VEC_PACK_SFIX256);\n \t}\n       break;\n \n@@ -33879,9 +33904,9 @@ ix86_builtin_vectorized_function (tree fndecl, tree type_out,\n       if (out_mode == SImode && in_mode == SFmode)\n \t{\n \t  if (out_n == 4 && in_n == 4)\n-\t    return ix86_builtins[IX86_BUILTIN_CEILPS_SFIX];\n+\t    return ix86_get_builtin (IX86_BUILTIN_CEILPS_SFIX);\n \t  else if (out_n == 8 && in_n == 8)\n-\t    return ix86_builtins[IX86_BUILTIN_CEILPS_SFIX256];\n+\t    return ix86_get_builtin (IX86_BUILTIN_CEILPS_SFIX256);\n \t}\n       break;\n \n@@ -33891,9 +33916,9 @@ ix86_builtin_vectorized_function (tree fndecl, tree type_out,\n       if (out_mode == SImode && in_mode == DFmode)\n \t{\n \t  if (out_n == 4 && in_n == 2)\n-\t    return ix86_builtins[IX86_BUILTIN_VEC_PACK_SFIX];\n+\t    return ix86_get_builtin (IX86_BUILTIN_VEC_PACK_SFIX);\n \t  else if (out_n == 8 && in_n == 4)\n-\t    return ix86_builtins[IX86_BUILTIN_VEC_PACK_SFIX256];\n+\t    return ix86_get_builtin (IX86_BUILTIN_VEC_PACK_SFIX256);\n \t}\n       break;\n \n@@ -33903,9 +33928,9 @@ ix86_builtin_vectorized_function (tree fndecl, tree type_out,\n       if (out_mode == SImode && in_mode == SFmode)\n \t{\n \t  if (out_n == 4 && in_n == 4)\n-\t    return ix86_builtins[IX86_BUILTIN_CVTPS2DQ];\n+\t    return ix86_get_builtin (IX86_BUILTIN_CVTPS2DQ);\n \t  else if (out_n == 8 && in_n == 8)\n-\t    return ix86_builtins[IX86_BUILTIN_CVTPS2DQ256];\n+\t    return ix86_get_builtin (IX86_BUILTIN_CVTPS2DQ256);\n \t}\n       break;\n \n@@ -33919,9 +33944,9 @@ ix86_builtin_vectorized_function (tree fndecl, tree type_out,\n       if (out_mode == SImode && in_mode == DFmode)\n \t{\n \t  if (out_n == 4 && in_n == 2)\n-\t    return ix86_builtins[IX86_BUILTIN_ROUNDPD_AZ_VEC_PACK_SFIX];\n+\t    return ix86_get_builtin (IX86_BUILTIN_ROUNDPD_AZ_VEC_PACK_SFIX);\n \t  else if (out_n == 8 && in_n == 4)\n-\t    return ix86_builtins[IX86_BUILTIN_ROUNDPD_AZ_VEC_PACK_SFIX256];\n+\t    return ix86_get_builtin (IX86_BUILTIN_ROUNDPD_AZ_VEC_PACK_SFIX256);\n \t}\n       break;\n \n@@ -33935,29 +33960,29 @@ ix86_builtin_vectorized_function (tree fndecl, tree type_out,\n       if (out_mode == SImode && in_mode == SFmode)\n \t{\n \t  if (out_n == 4 && in_n == 4)\n-\t    return ix86_builtins[IX86_BUILTIN_ROUNDPS_AZ_SFIX];\n+\t    return ix86_get_builtin (IX86_BUILTIN_ROUNDPS_AZ_SFIX);\n \t  else if (out_n == 8 && in_n == 8)\n-\t    return ix86_builtins[IX86_BUILTIN_ROUNDPS_AZ_SFIX256];\n+\t    return ix86_get_builtin (IX86_BUILTIN_ROUNDPS_AZ_SFIX256);\n \t}\n       break;\n \n     case BUILT_IN_COPYSIGN:\n       if (out_mode == DFmode && in_mode == DFmode)\n \t{\n \t  if (out_n == 2 && in_n == 2)\n-\t    return ix86_builtins[IX86_BUILTIN_CPYSGNPD];\n+\t    return ix86_get_builtin (IX86_BUILTIN_CPYSGNPD);\n \t  else if (out_n == 4 && in_n == 4)\n-\t    return ix86_builtins[IX86_BUILTIN_CPYSGNPD256];\n+\t    return ix86_get_builtin (IX86_BUILTIN_CPYSGNPD256);\n \t}\n       break;\n \n     case BUILT_IN_COPYSIGNF:\n       if (out_mode == SFmode && in_mode == SFmode)\n \t{\n \t  if (out_n == 4 && in_n == 4)\n-\t    return ix86_builtins[IX86_BUILTIN_CPYSGNPS];\n+\t    return ix86_get_builtin (IX86_BUILTIN_CPYSGNPS);\n \t  else if (out_n == 8 && in_n == 8)\n-\t    return ix86_builtins[IX86_BUILTIN_CPYSGNPS256];\n+\t    return ix86_get_builtin (IX86_BUILTIN_CPYSGNPS256);\n \t}\n       break;\n \n@@ -33969,9 +33994,9 @@ ix86_builtin_vectorized_function (tree fndecl, tree type_out,\n       if (out_mode == DFmode && in_mode == DFmode)\n \t{\n \t  if (out_n == 2 && in_n == 2)\n-\t    return ix86_builtins[IX86_BUILTIN_FLOORPD];\n+\t    return ix86_get_builtin (IX86_BUILTIN_FLOORPD);\n \t  else if (out_n == 4 && in_n == 4)\n-\t    return ix86_builtins[IX86_BUILTIN_FLOORPD256];\n+\t    return ix86_get_builtin (IX86_BUILTIN_FLOORPD256);\n \t}\n       break;\n \n@@ -33983,9 +34008,9 @@ ix86_builtin_vectorized_function (tree fndecl, tree type_out,\n       if (out_mode == SFmode && in_mode == SFmode)\n \t{\n \t  if (out_n == 4 && in_n == 4)\n-\t    return ix86_builtins[IX86_BUILTIN_FLOORPS];\n+\t    return ix86_get_builtin (IX86_BUILTIN_FLOORPS);\n \t  else if (out_n == 8 && in_n == 8)\n-\t    return ix86_builtins[IX86_BUILTIN_FLOORPS256];\n+\t    return ix86_get_builtin (IX86_BUILTIN_FLOORPS256);\n \t}\n       break;\n \n@@ -33997,9 +34022,9 @@ ix86_builtin_vectorized_function (tree fndecl, tree type_out,\n       if (out_mode == DFmode && in_mode == DFmode)\n \t{\n \t  if (out_n == 2 && in_n == 2)\n-\t    return ix86_builtins[IX86_BUILTIN_CEILPD];\n+\t    return ix86_get_builtin (IX86_BUILTIN_CEILPD);\n \t  else if (out_n == 4 && in_n == 4)\n-\t    return ix86_builtins[IX86_BUILTIN_CEILPD256];\n+\t    return ix86_get_builtin (IX86_BUILTIN_CEILPD256);\n \t}\n       break;\n \n@@ -34011,9 +34036,9 @@ ix86_builtin_vectorized_function (tree fndecl, tree type_out,\n       if (out_mode == SFmode && in_mode == SFmode)\n \t{\n \t  if (out_n == 4 && in_n == 4)\n-\t    return ix86_builtins[IX86_BUILTIN_CEILPS];\n+\t    return ix86_get_builtin (IX86_BUILTIN_CEILPS);\n \t  else if (out_n == 8 && in_n == 8)\n-\t    return ix86_builtins[IX86_BUILTIN_CEILPS256];\n+\t    return ix86_get_builtin (IX86_BUILTIN_CEILPS256);\n \t}\n       break;\n \n@@ -34025,9 +34050,9 @@ ix86_builtin_vectorized_function (tree fndecl, tree type_out,\n       if (out_mode == DFmode && in_mode == DFmode)\n \t{\n \t  if (out_n == 2 && in_n == 2)\n-\t    return ix86_builtins[IX86_BUILTIN_TRUNCPD];\n+\t    return ix86_get_builtin (IX86_BUILTIN_TRUNCPD);\n \t  else if (out_n == 4 && in_n == 4)\n-\t    return ix86_builtins[IX86_BUILTIN_TRUNCPD256];\n+\t    return ix86_get_builtin (IX86_BUILTIN_TRUNCPD256);\n \t}\n       break;\n \n@@ -34039,9 +34064,9 @@ ix86_builtin_vectorized_function (tree fndecl, tree type_out,\n       if (out_mode == SFmode && in_mode == SFmode)\n \t{\n \t  if (out_n == 4 && in_n == 4)\n-\t    return ix86_builtins[IX86_BUILTIN_TRUNCPS];\n+\t    return ix86_get_builtin (IX86_BUILTIN_TRUNCPS);\n \t  else if (out_n == 8 && in_n == 8)\n-\t    return ix86_builtins[IX86_BUILTIN_TRUNCPS256];\n+\t    return ix86_get_builtin (IX86_BUILTIN_TRUNCPS256);\n \t}\n       break;\n \n@@ -34053,9 +34078,9 @@ ix86_builtin_vectorized_function (tree fndecl, tree type_out,\n       if (out_mode == DFmode && in_mode == DFmode)\n \t{\n \t  if (out_n == 2 && in_n == 2)\n-\t    return ix86_builtins[IX86_BUILTIN_RINTPD];\n+\t    return ix86_get_builtin (IX86_BUILTIN_RINTPD);\n \t  else if (out_n == 4 && in_n == 4)\n-\t    return ix86_builtins[IX86_BUILTIN_RINTPD256];\n+\t    return ix86_get_builtin (IX86_BUILTIN_RINTPD256);\n \t}\n       break;\n \n@@ -34067,9 +34092,9 @@ ix86_builtin_vectorized_function (tree fndecl, tree type_out,\n       if (out_mode == SFmode && in_mode == SFmode)\n \t{\n \t  if (out_n == 4 && in_n == 4)\n-\t    return ix86_builtins[IX86_BUILTIN_RINTPS];\n+\t    return ix86_get_builtin (IX86_BUILTIN_RINTPS);\n \t  else if (out_n == 8 && in_n == 8)\n-\t    return ix86_builtins[IX86_BUILTIN_RINTPS256];\n+\t    return ix86_get_builtin (IX86_BUILTIN_RINTPS256);\n \t}\n       break;\n \n@@ -34081,9 +34106,9 @@ ix86_builtin_vectorized_function (tree fndecl, tree type_out,\n       if (out_mode == DFmode && in_mode == DFmode)\n \t{\n \t  if (out_n == 2 && in_n == 2)\n-\t    return ix86_builtins[IX86_BUILTIN_ROUNDPD_AZ];\n+\t    return ix86_get_builtin (IX86_BUILTIN_ROUNDPD_AZ);\n \t  else if (out_n == 4 && in_n == 4)\n-\t    return ix86_builtins[IX86_BUILTIN_ROUNDPD_AZ256];\n+\t    return ix86_get_builtin (IX86_BUILTIN_ROUNDPD_AZ256);\n \t}\n       break;\n \n@@ -34095,29 +34120,29 @@ ix86_builtin_vectorized_function (tree fndecl, tree type_out,\n       if (out_mode == SFmode && in_mode == SFmode)\n \t{\n \t  if (out_n == 4 && in_n == 4)\n-\t    return ix86_builtins[IX86_BUILTIN_ROUNDPS_AZ];\n+\t    return ix86_get_builtin (IX86_BUILTIN_ROUNDPS_AZ);\n \t  else if (out_n == 8 && in_n == 8)\n-\t    return ix86_builtins[IX86_BUILTIN_ROUNDPS_AZ256];\n+\t    return ix86_get_builtin (IX86_BUILTIN_ROUNDPS_AZ256);\n \t}\n       break;\n \n     case BUILT_IN_FMA:\n       if (out_mode == DFmode && in_mode == DFmode)\n \t{\n \t  if (out_n == 2 && in_n == 2)\n-\t    return ix86_builtins[IX86_BUILTIN_VFMADDPD];\n+\t    return ix86_get_builtin (IX86_BUILTIN_VFMADDPD);\n \t  if (out_n == 4 && in_n == 4)\n-\t    return ix86_builtins[IX86_BUILTIN_VFMADDPD256];\n+\t    return ix86_get_builtin (IX86_BUILTIN_VFMADDPD256);\n \t}\n       break;\n \n     case BUILT_IN_FMAF:\n       if (out_mode == SFmode && in_mode == SFmode)\n \t{\n \t  if (out_n == 4 && in_n == 4)\n-\t    return ix86_builtins[IX86_BUILTIN_VFMADDPS];\n+\t    return ix86_get_builtin (IX86_BUILTIN_VFMADDPS);\n \t  if (out_n == 8 && in_n == 8)\n-\t    return ix86_builtins[IX86_BUILTIN_VFMADDPS256];\n+\t    return ix86_get_builtin (IX86_BUILTIN_VFMADDPS256);\n \t}\n       break;\n \n@@ -34397,7 +34422,7 @@ ix86_vectorize_builtin_gather (const_tree mem_vectype,\n       return NULL_TREE;\n     }\n \n-  return ix86_builtins[code];\n+  return ix86_get_builtin (code);\n }\n \n /* Returns a code for a target-specific builtin that implements\n@@ -34418,10 +34443,10 @@ ix86_builtin_reciprocal (unsigned int fn, bool md_fn,\n       {\n \t/* Vectorized version of sqrt to rsqrt conversion.  */\n       case IX86_BUILTIN_SQRTPS_NR:\n-\treturn ix86_builtins[IX86_BUILTIN_RSQRTPS_NR];\n+\treturn ix86_get_builtin (IX86_BUILTIN_RSQRTPS_NR);\n \n       case IX86_BUILTIN_SQRTPS_NR256:\n-\treturn ix86_builtins[IX86_BUILTIN_RSQRTPS_NR256];\n+\treturn ix86_get_builtin (IX86_BUILTIN_RSQRTPS_NR256);\n \n       default:\n \treturn NULL_TREE;\n@@ -34432,7 +34457,7 @@ ix86_builtin_reciprocal (unsigned int fn, bool md_fn,\n       {\n \t/* Sqrt to rsqrt conversion.  */\n       case BUILT_IN_SQRTF:\n-\treturn ix86_builtins[IX86_BUILTIN_RSQRTF];\n+\treturn ix86_get_builtin (IX86_BUILTIN_RSQRTF);\n \n       default:\n \treturn NULL_TREE;"}, {"sha": "248928e759c5429c697b06d2349314af3a652250", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/26084432876599a44feed25b1cd80da581b8e658/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/26084432876599a44feed25b1cd80da581b8e658/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=26084432876599a44feed25b1cd80da581b8e658", "patch": "@@ -1,3 +1,10 @@\n+2013-12-11  Sriraman Tallam  <tmsriram@google.com>\n+\n+\tPR target/59390\n+\t* gcc.target/i386/pr59390.c: New test.\n+\t* gcc.target/i386/pr59390_1.c: New test.\n+\t* gcc.target/i386/pr59390_2.c: New test.\n+\n 2013-12-11  Balaji V. Iyer  <balaji.v.iyer@intel.com>\n \n \t* g++.dg/cilk-plus/CK/catch_exc.cc: New test case."}, {"sha": "49ce02d1a21888a8fb99859b15a6202adf7d093f", "filename": "gcc/testsuite/gcc.target/i386/pr59390.c", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/26084432876599a44feed25b1cd80da581b8e658/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr59390.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/26084432876599a44feed25b1cd80da581b8e658/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr59390.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr59390.c?ref=26084432876599a44feed25b1cd80da581b8e658", "patch": "@@ -0,0 +1,16 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-std=c99 -O3\" } */\n+\n+#include \"math.h\"\n+void fun() __attribute__((target(\"fma\")));\n+\n+void \n+other_fun(double *restrict out, double * restrict a, double * restrict b, double * restrict c, int n)\n+{\n+    int i;\n+    for (i = 0; i < n; i++) {\n+        out[i] = fma(a[i], b[i], c[i]);\n+    }   \n+}\n+\n+/* { dg-final { scan-assembler-not \"vfmadd\" } } */"}, {"sha": "2bd32a4ebdbd736179912a6fa4798dcf6143f725", "filename": "gcc/testsuite/gcc.target/i386/pr59390_1.c", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/26084432876599a44feed25b1cd80da581b8e658/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr59390_1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/26084432876599a44feed25b1cd80da581b8e658/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr59390_1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr59390_1.c?ref=26084432876599a44feed25b1cd80da581b8e658", "patch": "@@ -0,0 +1,17 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-std=c99 -O3\" } */\n+\n+#include \"math.h\"\n+void fun() __attribute__((target(\"fma\")));\n+\n+__attribute__((target(\"fma\")))\n+void \n+other_fun(double *restrict out, double * restrict a, double * restrict b, double * restrict c, int n)\n+{\n+    int i;\n+    for (i = 0; i < n; i++) {\n+        out[i] = fma(a[i], b[i], c[i]);\n+    }   \n+}\n+\n+/* { dg-final { scan-assembler \"vfmadd\" } } */"}, {"sha": "55a181a8ad483a2e20e22b00b0b7d4a1e922cb90", "filename": "gcc/testsuite/gcc.target/i386/pr59390_2.c", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/26084432876599a44feed25b1cd80da581b8e658/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr59390_2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/26084432876599a44feed25b1cd80da581b8e658/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr59390_2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr59390_2.c?ref=26084432876599a44feed25b1cd80da581b8e658", "patch": "@@ -0,0 +1,16 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-std=c99 -O3 -mfma\" } */\n+\n+#include \"math.h\"\n+void fun() __attribute__((target(\"fma\")));\n+\n+void \n+other_fun(double *restrict out, double * restrict a, double * restrict b, double * restrict c, int n)\n+{\n+    int i;\n+    for (i = 0; i < n; i++) {\n+        out[i] = fma(a[i], b[i], c[i]);\n+    }   \n+}\n+\n+/* { dg-final { scan-assembler \"vfmadd\" } } */"}]}