{"sha": "d59d13c89503baf92d14b04c05708a6296916fad", "node_id": "C_kwDOANBUbNoAKGQ1OWQxM2M4OTUwM2JhZjkyZDE0YjA0YzA1NzA4YTYyOTY5MTZmYWQ", "commit": {"author": {"name": "Tom de Vries", "email": "tdevries@suse.de", "date": "2022-02-25T10:49:01Z"}, "committer": {"name": "Tom de Vries", "email": "tdevries@suse.de", "date": "2022-03-01T07:58:36Z"}, "message": "[nvptx] Add nvptx-gen.h and nvptx-gen.opt\n\nUse nvptx-sm.def to generate new files nvptx-gen.h and nvptx-gen.opt, and:\n- include nvptx-gen.h in nvptx.h, and\n- add nvptx-gen.opt to extra_options (before nvptx.opt, in case that matters).\n\nTested on nvptx.\n\ngcc/ChangeLog:\n\n2022-02-25  Tom de Vries  <tdevries@suse.de>\n\n\t* config.gcc (nvptx*-*-*): Add nvptx/nvptx-gen.opt to extra_options.\n\t* config/nvptx/gen-copyright.sh: New file.\n\t* config/nvptx/gen-h.sh: New file.\n\t* config/nvptx/gen-opt.sh: New file.\n\t* config/nvptx/nvptx.h (TARGET_SM35, TARGET_SM53, TARGET_SM70)\n\t(TARGET_SM75, TARGET_SM80): Move ...\n\t* config/nvptx/nvptx-gen.h: ... here.  New file, generate.\n\t* config/nvptx/nvptx.opt (Enum ptx_isa): Move ...\n\t* config/nvptx/nvptx-gen.opt: ... here.  New file, generate.\n\t* config/nvptx/t-nvptx ($(srcdir)/config/nvptx/nvptx-gen.h)\n\t($(srcdir)/config/nvptx/nvptx-gen.opt): New make target.", "tree": {"sha": "1fc7c4f552cca79736bb2a5ff74071248f5700af", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1fc7c4f552cca79736bb2a5ff74071248f5700af"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d59d13c89503baf92d14b04c05708a6296916fad", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d59d13c89503baf92d14b04c05708a6296916fad", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d59d13c89503baf92d14b04c05708a6296916fad", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d59d13c89503baf92d14b04c05708a6296916fad/comments", "author": {"login": "vries", "id": 4057235, "node_id": "MDQ6VXNlcjQwNTcyMzU=", "avatar_url": "https://avatars.githubusercontent.com/u/4057235?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vries", "html_url": "https://github.com/vries", "followers_url": "https://api.github.com/users/vries/followers", "following_url": "https://api.github.com/users/vries/following{/other_user}", "gists_url": "https://api.github.com/users/vries/gists{/gist_id}", "starred_url": "https://api.github.com/users/vries/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vries/subscriptions", "organizations_url": "https://api.github.com/users/vries/orgs", "repos_url": "https://api.github.com/users/vries/repos", "events_url": "https://api.github.com/users/vries/events{/privacy}", "received_events_url": "https://api.github.com/users/vries/received_events", "type": "User", "site_admin": false}, "committer": {"login": "vries", "id": 4057235, "node_id": "MDQ6VXNlcjQwNTcyMzU=", "avatar_url": "https://avatars.githubusercontent.com/u/4057235?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vries", "html_url": "https://github.com/vries", "followers_url": "https://api.github.com/users/vries/followers", "following_url": "https://api.github.com/users/vries/following{/other_user}", "gists_url": "https://api.github.com/users/vries/gists{/gist_id}", "starred_url": "https://api.github.com/users/vries/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vries/subscriptions", "organizations_url": "https://api.github.com/users/vries/orgs", "repos_url": "https://api.github.com/users/vries/repos", "events_url": "https://api.github.com/users/vries/events{/privacy}", "received_events_url": "https://api.github.com/users/vries/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "22adaa5e565a0355dc013b4c1eeefd8ff4a96d9a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/22adaa5e565a0355dc013b4c1eeefd8ff4a96d9a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/22adaa5e565a0355dc013b4c1eeefd8ff4a96d9a"}], "stats": {"total": 309, "additions": 282, "deletions": 27}, "files": [{"sha": "3833bfa16a93015b19b96289a45268cf74550448", "filename": "gcc/config.gcc", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d59d13c89503baf92d14b04c05708a6296916fad/gcc%2Fconfig.gcc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d59d13c89503baf92d14b04c05708a6296916fad/gcc%2Fconfig.gcc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig.gcc?ref=d59d13c89503baf92d14b04c05708a6296916fad", "patch": "@@ -477,6 +477,7 @@ nvptx-*-*)\n \tcpu_type=nvptx\n \tc_target_objs=\"nvptx-c.o\"\n \tcxx_target_objs=\"nvptx-c.o\"\n+\textra_options=\"${extra_options} nvptx/nvptx-gen.opt\"\n \t;;\n or1k*-*-*)\n \tcpu_type=or1k"}, {"sha": "79f48995acc051715becc7907b7e11756a09c937", "filename": "gcc/config/nvptx/gen-copyright.sh", "status": "added", "additions": 82, "deletions": 0, "changes": 82, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d59d13c89503baf92d14b04c05708a6296916fad/gcc%2Fconfig%2Fnvptx%2Fgen-copyright.sh", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d59d13c89503baf92d14b04c05708a6296916fad/gcc%2Fconfig%2Fnvptx%2Fgen-copyright.sh", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fnvptx%2Fgen-copyright.sh?ref=d59d13c89503baf92d14b04c05708a6296916fad", "patch": "@@ -0,0 +1,82 @@\n+#!/bin/sh\n+\n+# Copyright (C) 2022 Free Software Foundation, Inc.\n+#\n+# This file is part of GCC.\n+#\n+# GCC is free software; you can redistribute it and/or modify\n+# it under the terms of the GNU General Public License as published by\n+# the Free Software Foundation; either version 3, or (at your option)\n+# any later version.\n+#\n+# GCC is distributed in the hope that it will be useful,\n+# but WITHOUT ANY WARRANTY; without even the implied warranty of\n+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+# GNU General Public License for more details.\n+#\n+# You should have received a copy of the GNU General Public License\n+# along with GCC; see the file COPYING3.  If not see\n+# <http://www.gnu.org/licenses/>.\n+\n+style=\"$1\"\n+case $style in\n+    opt)\n+    ;;\n+    c)\n+\tfirst=true\n+    ;;\n+    *)\n+\techo \"Unknown style: \\\"$style\\\"\"\n+\texit 1\n+\t;;\n+esac\n+\n+( cat <<EOF\n+Copyright (C) 2022 Free Software Foundation, Inc.\n+\n+This file is part of GCC.\n+\n+GCC is free software; you can redistribute it and/or modify it under\n+the terms of the GNU General Public License as published by the Free\n+Software Foundation; either version 3, or (at your option) any later\n+version.\n+\n+GCC is distributed in the hope that it will be useful, but WITHOUT ANY\n+WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GCC; see the file COPYING3.  If not see\n+<http://www.gnu.org/licenses/>.\n+EOF\n+) | while read line; do\n+    case $style in\n+\topt)\n+\t    if [ \"$line\" = \"\" ]; then\n+\t\techo \";\"\n+\t    else\n+\t\techo \"; $line\"\n+\t    fi\n+\t    ;;\n+\tc)\n+\t    if $first; then\n+\t\techo \"/* $line\"\n+\t\tfirst=false\n+\t    else\n+\t\tif [ \"$line\" = \"\" ]; then\n+\t\t    echo\n+\t\telse\n+\t\t    echo \"   $line\"\n+\t\tfi\n+\t    fi\n+\t    ;;\n+    esac\n+done\n+\n+\n+case $style in\n+    c)\n+\techo \"*/\"\n+\t;;\n+esac"}, {"sha": "605f874055abb48a0bdc1c8aa28ef57e3b4d254e", "filename": "gcc/config/nvptx/gen-h.sh", "status": "added", "additions": 44, "deletions": 0, "changes": 44, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d59d13c89503baf92d14b04c05708a6296916fad/gcc%2Fconfig%2Fnvptx%2Fgen-h.sh", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d59d13c89503baf92d14b04c05708a6296916fad/gcc%2Fconfig%2Fnvptx%2Fgen-h.sh", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fnvptx%2Fgen-h.sh?ref=d59d13c89503baf92d14b04c05708a6296916fad", "patch": "@@ -0,0 +1,44 @@\n+#!/bin/sh\n+\n+# Copyright (C) 2022 Free Software Foundation, Inc.\n+#\n+# This file is part of GCC.\n+#\n+# GCC is free software; you can redistribute it and/or modify\n+# it under the terms of the GNU General Public License as published by\n+# the Free Software Foundation; either version 3, or (at your option)\n+# any later version.\n+#\n+# GCC is distributed in the hope that it will be useful,\n+# but WITHOUT ANY WARRANTY; without even the implied warranty of\n+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+# GNU General Public License for more details.\n+#\n+# You should have received a copy of the GNU General Public License\n+# along with GCC; see the file COPYING3.  If not see\n+# <http://www.gnu.org/licenses/>.\n+\n+nvptx_sm_def=\"$1/nvptx-sm.def\"\n+gen_copyright_sh=\"$1/gen-copyright.sh\"\n+\n+sms=$(grep ^NVPTX_SM $nvptx_sm_def | sed 's/.*(//;s/,.*//')\n+\n+cat <<EOF\n+/* -*- buffer-read-only: t -*-\n+   Generated automatically by gen-h.sh from nvptx-sm.def.\n+*/\n+EOF\n+\n+# Separator.\n+echo\n+\n+. $gen_copyright_sh c\n+\n+# Separator.\n+echo\n+\n+for sm in $sms; do\n+    cat <<EOF\n+#define TARGET_SM$sm (ptx_isa_option >= PTX_ISA_SM$sm)\n+EOF\n+done"}, {"sha": "5248ed25090cdaf8adbb3d48ea572210891e6ae1", "filename": "gcc/config/nvptx/gen-opt.sh", "status": "added", "additions": 66, "deletions": 0, "changes": 66, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d59d13c89503baf92d14b04c05708a6296916fad/gcc%2Fconfig%2Fnvptx%2Fgen-opt.sh", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d59d13c89503baf92d14b04c05708a6296916fad/gcc%2Fconfig%2Fnvptx%2Fgen-opt.sh", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fnvptx%2Fgen-opt.sh?ref=d59d13c89503baf92d14b04c05708a6296916fad", "patch": "@@ -0,0 +1,66 @@\n+#!/bin/sh\n+\n+# Copyright (C) 2022 Free Software Foundation, Inc.\n+#\n+# This file is part of GCC.\n+#\n+# GCC is free software; you can redistribute it and/or modify\n+# it under the terms of the GNU General Public License as published by\n+# the Free Software Foundation; either version 3, or (at your option)\n+# any later version.\n+#\n+# GCC is distributed in the hope that it will be useful,\n+# but WITHOUT ANY WARRANTY; without even the implied warranty of\n+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+# GNU General Public License for more details.\n+#\n+# You should have received a copy of the GNU General Public License\n+# along with GCC; see the file COPYING3.  If not see\n+# <http://www.gnu.org/licenses/>.\n+\n+nvptx_sm_def=\"$1/nvptx-sm.def\"\n+gen_copyright_sh=\"$1/gen-copyright.sh\"\n+\n+sms=$(grep ^NVPTX_SM $nvptx_sm_def | sed 's/.*(//;s/,.*//')\n+\n+last=\n+for sm in $sms; do\n+    last=\"$sm\"\n+done\n+\n+cat <<EOF\n+; -*- buffer-read-only: t -*-\n+; Generated automatically by gen-opt.sh from nvptx-sm.def.\n+EOF\n+\n+# Separator.\n+echo\n+\n+. $gen_copyright_sh opt\n+\n+# Separator.\n+echo\n+\n+cat <<EOF\n+Enum\n+Name(ptx_isa) Type(int)\n+Known PTX ISA versions (for use with the -misa= option):\n+EOF\n+\n+# Separator.\n+echo\n+\n+for sm in $sms; do\n+    cat <<EOF\n+EnumValue\n+Enum(ptx_isa) String(sm_$sm) Value(PTX_ISA_SM$sm)\n+EOF\n+\n+    if [ \"$sm\" == \"$last\" ]; then\n+\t# Don't end with trailing empty line.\n+\tcontinue\n+    fi\n+\n+    # Separator.\n+    echo\n+done"}, {"sha": "1d6f0db54c72da0fbfa75f7ed656261047fa1072", "filename": "gcc/config/nvptx/nvptx-gen.h", "status": "added", "additions": 29, "deletions": 0, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d59d13c89503baf92d14b04c05708a6296916fad/gcc%2Fconfig%2Fnvptx%2Fnvptx-gen.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d59d13c89503baf92d14b04c05708a6296916fad/gcc%2Fconfig%2Fnvptx%2Fnvptx-gen.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fnvptx%2Fnvptx-gen.h?ref=d59d13c89503baf92d14b04c05708a6296916fad", "patch": "@@ -0,0 +1,29 @@\n+/* -*- buffer-read-only: t -*-\n+   Generated automatically by gen-h.sh from nvptx-sm.def.\n+*/\n+\n+/* Copyright (C) 2022 Free Software Foundation, Inc.\n+\n+   This file is part of GCC.\n+\n+   GCC is free software; you can redistribute it and/or modify it under\n+   the terms of the GNU General Public License as published by the Free\n+   Software Foundation; either version 3, or (at your option) any later\n+   version.\n+\n+   GCC is distributed in the hope that it will be useful, but WITHOUT ANY\n+   WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+   FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+   for more details.\n+\n+   You should have received a copy of the GNU General Public License\n+   along with GCC; see the file COPYING3.  If not see\n+   <http://www.gnu.org/licenses/>.\n+*/\n+\n+#define TARGET_SM30 (ptx_isa_option >= PTX_ISA_SM30)\n+#define TARGET_SM35 (ptx_isa_option >= PTX_ISA_SM35)\n+#define TARGET_SM53 (ptx_isa_option >= PTX_ISA_SM53)\n+#define TARGET_SM70 (ptx_isa_option >= PTX_ISA_SM70)\n+#define TARGET_SM75 (ptx_isa_option >= PTX_ISA_SM75)\n+#define TARGET_SM80 (ptx_isa_option >= PTX_ISA_SM80)"}, {"sha": "b6d433e6292fb137299af086ce35afe47ae7874b", "filename": "gcc/config/nvptx/nvptx-gen.opt", "status": "added", "additions": 42, "deletions": 0, "changes": 42, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d59d13c89503baf92d14b04c05708a6296916fad/gcc%2Fconfig%2Fnvptx%2Fnvptx-gen.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d59d13c89503baf92d14b04c05708a6296916fad/gcc%2Fconfig%2Fnvptx%2Fnvptx-gen.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fnvptx%2Fnvptx-gen.opt?ref=d59d13c89503baf92d14b04c05708a6296916fad", "patch": "@@ -0,0 +1,42 @@\n+; -*- buffer-read-only: t -*-\n+; Generated automatically by gen-opt.sh from nvptx-sm.def.\n+\n+; Copyright (C) 2022 Free Software Foundation, Inc.\n+;\n+; This file is part of GCC.\n+;\n+; GCC is free software; you can redistribute it and/or modify it under\n+; the terms of the GNU General Public License as published by the Free\n+; Software Foundation; either version 3, or (at your option) any later\n+; version.\n+;\n+; GCC is distributed in the hope that it will be useful, but WITHOUT ANY\n+; WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+; FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+; for more details.\n+;\n+; You should have received a copy of the GNU General Public License\n+; along with GCC; see the file COPYING3.  If not see\n+; <http://www.gnu.org/licenses/>.\n+\n+Enum\n+Name(ptx_isa) Type(int)\n+Known PTX ISA versions (for use with the -misa= option):\n+\n+EnumValue\n+Enum(ptx_isa) String(sm_30) Value(PTX_ISA_SM30)\n+\n+EnumValue\n+Enum(ptx_isa) String(sm_35) Value(PTX_ISA_SM35)\n+\n+EnumValue\n+Enum(ptx_isa) String(sm_53) Value(PTX_ISA_SM53)\n+\n+EnumValue\n+Enum(ptx_isa) String(sm_70) Value(PTX_ISA_SM70)\n+\n+EnumValue\n+Enum(ptx_isa) String(sm_75) Value(PTX_ISA_SM75)\n+\n+EnumValue\n+Enum(ptx_isa) String(sm_80) Value(PTX_ISA_SM80)"}, {"sha": "4ab412bc7d8e5f8d5c654152bf9ef8e71deb3b43", "filename": "gcc/config/nvptx/nvptx.h", "status": "modified", "additions": 1, "deletions": 5, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d59d13c89503baf92d14b04c05708a6296916fad/gcc%2Fconfig%2Fnvptx%2Fnvptx.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d59d13c89503baf92d14b04c05708a6296916fad/gcc%2Fconfig%2Fnvptx%2Fnvptx.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fnvptx%2Fnvptx.h?ref=d59d13c89503baf92d14b04c05708a6296916fad", "patch": "@@ -86,11 +86,7 @@\n #define Pmode (TARGET_ABI64 ? DImode : SImode)\n #define STACK_SIZE_MODE Pmode\n \n-#define TARGET_SM35 (ptx_isa_option >= PTX_ISA_SM35)\n-#define TARGET_SM53 (ptx_isa_option >= PTX_ISA_SM53)\n-#define TARGET_SM70 (ptx_isa_option >= PTX_ISA_SM70)\n-#define TARGET_SM75 (ptx_isa_option >= PTX_ISA_SM75)\n-#define TARGET_SM80 (ptx_isa_option >= PTX_ISA_SM80)\n+#include \"nvptx-gen.h\"\n \n #define TARGET_PTX_6_0 (ptx_version_option >= PTX_VERSION_6_0)\n #define TARGET_PTX_6_3 (ptx_version_option >= PTX_VERSION_6_3)"}, {"sha": "c83ceb3568b163d6b4c098b1a11bf07c1f98a260", "filename": "gcc/config/nvptx/nvptx.opt", "status": "modified", "additions": 0, "deletions": 22, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d59d13c89503baf92d14b04c05708a6296916fad/gcc%2Fconfig%2Fnvptx%2Fnvptx.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d59d13c89503baf92d14b04c05708a6296916fad/gcc%2Fconfig%2Fnvptx%2Fnvptx.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fnvptx%2Fnvptx.opt?ref=d59d13c89503baf92d14b04c05708a6296916fad", "patch": "@@ -51,28 +51,6 @@ mgomp\n Target Mask(GOMP)\n Generate code for OpenMP offloading: enables -msoft-stack and -muniform-simt.\n \n-Enum\n-Name(ptx_isa) Type(int)\n-Known PTX ISA versions (for use with the -misa= option):\n-\n-EnumValue\n-Enum(ptx_isa) String(sm_30) Value(PTX_ISA_SM30)\n-\n-EnumValue\n-Enum(ptx_isa) String(sm_35) Value(PTX_ISA_SM35)\n-\n-EnumValue\n-Enum(ptx_isa) String(sm_53) Value(PTX_ISA_SM53)\n-\n-EnumValue\n-Enum(ptx_isa) String(sm_70) Value(PTX_ISA_SM70)\n-\n-EnumValue\n-Enum(ptx_isa) String(sm_75) Value(PTX_ISA_SM75)\n-\n-EnumValue\n-Enum(ptx_isa) String(sm_80) Value(PTX_ISA_SM80)\n-\n ; Default needs to be in sync with default in ASM_SPEC in nvptx.h.\n misa=\n Target RejectNegative ToLower Joined Enum(ptx_isa) Var(ptx_isa_option) Init(PTX_ISA_SM35)"}, {"sha": "f17fc9c19aac21406741cb9dae5df28b4558d367", "filename": "gcc/config/nvptx/t-nvptx", "status": "modified", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d59d13c89503baf92d14b04c05708a6296916fad/gcc%2Fconfig%2Fnvptx%2Ft-nvptx", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d59d13c89503baf92d14b04c05708a6296916fad/gcc%2Fconfig%2Fnvptx%2Ft-nvptx", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fnvptx%2Ft-nvptx?ref=d59d13c89503baf92d14b04c05708a6296916fad", "patch": "@@ -13,4 +13,21 @@ mkoffload$(exeext): mkoffload.o collect-utils.o libcommon-target.a $(LIBIBERTY)\n \t+$(LINKER) $(ALL_LINKERFLAGS) $(LDFLAGS) -o $@ \\\n \t  mkoffload.o collect-utils.o libcommon-target.a $(LIBIBERTY) $(LIBS)\n \n+$(srcdir)/config/nvptx/nvptx.h: $(srcdir)/config/nvptx/nvptx-gen.h\n+$(srcdir)/config/nvptx/nvptx-gen.h: s-nvptx-gen-h; @true\n+s-nvptx-gen-h: $(srcdir)/config/nvptx/nvptx-sm.def\n+\t$(SHELL) $(srcdir)/config/nvptx/gen-h.sh \"$(srcdir)/config/nvptx\" \\\n+\t  > tmp-nvptx-gen.h\n+\t$(SHELL) $(srcdir)/../move-if-change \\\n+\t  tmp-nvptx-gen.h $(srcdir)/config/nvptx/nvptx-gen.h\n+\t$(STAMP) s-nvptx-gen-h\n+\n+$(srcdir)/config/nvptx/nvptx-gen.opt: s-nvptx-gen-opt; @true\n+s-nvptx-gen-opt: $(srcdir)/config/nvptx/nvptx-sm.def\n+\t$(SHELL) $(srcdir)/config/nvptx/gen-opt.sh \"$(srcdir)/config/nvptx\" \\\n+\t  > tmp-nvptx-gen.opt\n+\t$(SHELL) $(srcdir)/../move-if-change \\\n+\t  tmp-nvptx-gen.opt $(srcdir)/config/nvptx/nvptx-gen.opt\n+\t$(STAMP) s-nvptx-gen-opt\n+\n MULTILIB_OPTIONS = mgomp"}]}