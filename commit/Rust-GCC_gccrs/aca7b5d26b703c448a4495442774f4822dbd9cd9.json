{"sha": "aca7b5d26b703c448a4495442774f4822dbd9cd9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWNhN2I1ZDI2YjcwM2M0NDhhNDQ5NTQ0Mjc3NGY0ODIyZGJkOWNkOQ==", "commit": {"author": {"name": "Ansh Tyagi", "email": "tyagiansh23@hotmail.com", "date": "2021-03-23T09:51:55Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-03-23T09:51:55Z"}, "message": "added to_string() for TyTy::TypeKind\n\nThis is a building block to improve debugging of the TyTy module.\r\n\r\nFixes: #284", "tree": {"sha": "06052967a392ef33753de87b1d5eb1493ff47384", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/06052967a392ef33753de87b1d5eb1493ff47384"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/aca7b5d26b703c448a4495442774f4822dbd9cd9", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJgWbo7CRBK7hj4Ov3rIwAAdHIIAIGdpfJKfOqN2PzEkLitjNgR\nxUbbuc55x7RIy6YynYzEFH1hv4vA2jhrbEnrwhySblbwwZJlRkKC1NnmscBATgEx\nSgBEAb3jfILAsfzkSeLhokCzQRs+mfZ0CE9EnFWwOANaqRnZnwfry2UqLtP7aSnH\n/cF229Se+g8fbKTmdR43oea2VhhB8awRNl1y8+K68rzhi4ZcMCQTHCgXzvGYSKwh\nHF0MeoIT1YDfOGzAqvZRaGx5kDC9lnogVIhf4w83bfCzO0SYubZUfj1EVbMJPUXq\n1qMCjazWG3Gi8yG50KuObGc4+L+2MhFYhpJwV+48ixIjczEd3YrkSampaBEaMQg=\n=R+CS\n-----END PGP SIGNATURE-----\n", "payload": "tree 06052967a392ef33753de87b1d5eb1493ff47384\nparent eaeeb78a8b45e2a193bd396349e9354b55d57fd7\nauthor Ansh Tyagi <tyagiansh23@hotmail.com> 1616493115 +0530\ncommitter GitHub <noreply@github.com> 1616493115 +0000\n\nadded to_string() for TyTy::TypeKind\n\nThis is a building block to improve debugging of the TyTy module.\r\n\r\nFixes: #284"}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/aca7b5d26b703c448a4495442774f4822dbd9cd9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/aca7b5d26b703c448a4495442774f4822dbd9cd9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/aca7b5d26b703c448a4495442774f4822dbd9cd9/comments", "author": {"login": "therealansh", "id": 57180880, "node_id": "MDQ6VXNlcjU3MTgwODgw", "avatar_url": "https://avatars.githubusercontent.com/u/57180880?v=4", "gravatar_id": "", "url": "https://api.github.com/users/therealansh", "html_url": "https://github.com/therealansh", "followers_url": "https://api.github.com/users/therealansh/followers", "following_url": "https://api.github.com/users/therealansh/following{/other_user}", "gists_url": "https://api.github.com/users/therealansh/gists{/gist_id}", "starred_url": "https://api.github.com/users/therealansh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/therealansh/subscriptions", "organizations_url": "https://api.github.com/users/therealansh/orgs", "repos_url": "https://api.github.com/users/therealansh/repos", "events_url": "https://api.github.com/users/therealansh/events{/privacy}", "received_events_url": "https://api.github.com/users/therealansh/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "eaeeb78a8b45e2a193bd396349e9354b55d57fd7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/eaeeb78a8b45e2a193bd396349e9354b55d57fd7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/eaeeb78a8b45e2a193bd396349e9354b55d57fd7"}], "stats": {"total": 70, "additions": 69, "deletions": 1}, "files": [{"sha": "76c11f61849142ae04808d5ff9038836e6919efa", "filename": "gcc/rust/typecheck/rust-tyty.h", "status": "modified", "additions": 69, "deletions": 1, "changes": 70, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aca7b5d26b703c448a4495442774f4822dbd9cd9/gcc%2Frust%2Ftypecheck%2Frust-tyty.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aca7b5d26b703c448a4495442774f4822dbd9cd9/gcc%2Frust%2Ftypecheck%2Frust-tyty.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Ftypecheck%2Frust-tyty.h?ref=aca7b5d26b703c448a4495442774f4822dbd9cd9", "patch": "@@ -1084,7 +1084,75 @@ class StrType : public BaseType\n   BaseType *clone () final override;\n };\n \n+class TypeKindFormat\n+{\n+public:\n+  static std::string to_string (TypeKind kind)\n+  {\n+    switch (kind)\n+      {\n+      case TypeKind::INFER:\n+\treturn \"Infer\";\n+\tbreak;\n+      case TypeKind::ADT:\n+\treturn \"ADT\";\n+\tbreak;\n+      case TypeKind::STR:\n+\treturn \"STR\";\n+\tbreak;\n+      case TypeKind::REF:\n+\treturn \"REF\";\n+\tbreak;\n+      case TypeKind::PARAM:\n+\treturn \"PARAM\";\n+\tbreak;\n+      case TypeKind::ARRAY:\n+\treturn \"ARRAY\";\n+\tbreak;\n+      case TypeKind::FNDEF:\n+\treturn \"FnDef\";\n+\tbreak;\n+      case TypeKind::FNPTR:\n+\treturn \"FnPtr\";\n+\tbreak;\n+      case TypeKind::TUPLE:\n+\treturn \"Tuple\";\n+\tbreak;\n+      case TypeKind::BOOL:\n+\treturn \"Boolean\";\n+\tbreak;\n+      case TypeKind::CHAR:\n+\treturn \"Character\";\n+\tbreak;\n+      case TypeKind::INT:\n+\treturn \"Integer\";\n+\tbreak;\n+      case TypeKind::UINT:\n+\treturn \"Unsigned Integer\";\n+\tbreak;\n+      case TypeKind::FLOAT:\n+\treturn \"Float\";\n+\tbreak;\n+      case TypeKind::UNIT:\n+\treturn \"Unit\";\n+\tbreak;\n+      case TypeKind::USIZE:\n+\treturn \"Usize\";\n+\tbreak;\n+      case TypeKind::ISIZE:\n+\treturn \"Isize\";\n+\tbreak;\n+      case TypeKind::ERROR:\n+\treturn \"ERROR\";\n+\tbreak;\n+      default:\n+\treturn \"None\";\n+\tbreak;\n+      }\n+  }\n+};\n+\n } // namespace TyTy\n } // namespace Rust\n \n-#endif // RUST_TYTY\n+#endif // RUST_TYTY\n\\ No newline at end of file"}]}