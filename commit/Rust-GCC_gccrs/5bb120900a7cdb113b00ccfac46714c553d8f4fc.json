{"sha": "5bb120900a7cdb113b00ccfac46714c553d8f4fc", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWJiMTIwOTAwYTdjZGIxMTNiMDBjY2ZhYzQ2NzE0YzU1M2Q4ZjRmYw==", "commit": {"author": {"name": "Ira Rosen", "email": "irar@il.ibm.com", "date": "2010-07-05T06:48:32Z"}, "committer": {"name": "Ira Rosen", "email": "irar@gcc.gnu.org", "date": "2010-07-05T06:48:32Z"}, "message": "costmodel-vect-31d.c: Remove.\n\n\n\t* gcc.dg/vect/costmodel/ppc/costmodel-vect-31d.c: Remove.\n\t* gcc.dg/vect/costmodel/ppc/costmodel-vect-76a.c: Increase loop bound.\n\t* gcc.dg/vect/costmodel/ppc/costmodel-vect-76b.c: Likewise.\n\t* gcc.dg/vect/costmodel/ppc/costmodel-vect-68d.c: Remove.\n\t* gcc.dg/vect/pr35821-altivec.c, gcc.dg/vect/pr35821-spu.c: Likewise.\n\nFrom-SVN: r161819", "tree": {"sha": "d334edfc3b563e5b13a12becfae1d072c0267cdf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d334edfc3b563e5b13a12becfae1d072c0267cdf"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5bb120900a7cdb113b00ccfac46714c553d8f4fc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5bb120900a7cdb113b00ccfac46714c553d8f4fc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5bb120900a7cdb113b00ccfac46714c553d8f4fc", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5bb120900a7cdb113b00ccfac46714c553d8f4fc/comments", "author": {"login": "irar2", "id": 16818592, "node_id": "MDQ6VXNlcjE2ODE4NTky", "avatar_url": "https://avatars.githubusercontent.com/u/16818592?v=4", "gravatar_id": "", "url": "https://api.github.com/users/irar2", "html_url": "https://github.com/irar2", "followers_url": "https://api.github.com/users/irar2/followers", "following_url": "https://api.github.com/users/irar2/following{/other_user}", "gists_url": "https://api.github.com/users/irar2/gists{/gist_id}", "starred_url": "https://api.github.com/users/irar2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/irar2/subscriptions", "organizations_url": "https://api.github.com/users/irar2/orgs", "repos_url": "https://api.github.com/users/irar2/repos", "events_url": "https://api.github.com/users/irar2/events{/privacy}", "received_events_url": "https://api.github.com/users/irar2/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "6698dd72f7b6743e1c4c44817de674ae2e31f8cb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6698dd72f7b6743e1c4c44817de674ae2e31f8cb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6698dd72f7b6743e1c4c44817de674ae2e31f8cb"}], "stats": {"total": 159, "additions": 10, "deletions": 149}, "files": [{"sha": "86f3de9e580e887f1e364ff7393a9179ecb46898", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5bb120900a7cdb113b00ccfac46714c553d8f4fc/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5bb120900a7cdb113b00ccfac46714c553d8f4fc/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=5bb120900a7cdb113b00ccfac46714c553d8f4fc", "patch": "@@ -1,3 +1,11 @@\n+2010-07-05  Ira Rosen  <irar@il.ibm.com>\n+\n+\t* gcc.dg/vect/costmodel/ppc/costmodel-vect-31d.c: Remove.\n+\t* gcc.dg/vect/costmodel/ppc/costmodel-vect-76a.c: Increase loop bound.\n+\t* gcc.dg/vect/costmodel/ppc/costmodel-vect-76b.c: Likewise.\n+\t* gcc.dg/vect/costmodel/ppc/costmodel-vect-68d.c: Remove.\n+\t* gcc.dg/vect/pr35821-altivec.c, gcc.dg/vect/pr35821-spu.c: Likewise.\n+\n 2010-07-05  Shujing Zhao  <pearly.zhao@oracle.com>\n \n \tPR c++/22138"}, {"sha": "d9ea5d12638e5f19fcacf8042e4af39d2332e8d0", "filename": "gcc/testsuite/gcc.dg/vect/costmodel/ppc/costmodel-vect-31d.c", "status": "removed", "additions": 0, "deletions": 51, "changes": 51, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6698dd72f7b6743e1c4c44817de674ae2e31f8cb/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fcostmodel%2Fppc%2Fcostmodel-vect-31d.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6698dd72f7b6743e1c4c44817de674ae2e31f8cb/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fcostmodel%2Fppc%2Fcostmodel-vect-31d.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fcostmodel%2Fppc%2Fcostmodel-vect-31d.c?ref=6698dd72f7b6743e1c4c44817de674ae2e31f8cb", "patch": "@@ -1,51 +0,0 @@\n-/* { dg-require-effective-target vect_int } */\n-\n-#include <stdarg.h>\n-#include \"../../tree-vect.h\"\n-\n-#define N 5 \n-\n-struct t{\n-  int k[N];\n-  int l; \n-};\n-  \n-struct s{\n-  char a;\t/* aligned */\n-  char b[N-1];  /* unaligned (offset 1B) */\n-  char c[N];    /* aligned (offset NB) */\n-  struct t d;   /* aligned (offset 2NB) */\n-  struct t e;   /* unaligned (offset 2N+4N+4 B) */\n-};\n-\n-int main1 ()\n-{  \n-  int i;\n-  struct s tmp;\n-\n-  /* unaligned */\n-  for (i = 0; i < N; i++)\n-    {\n-      tmp.e.k[i] = 8;\n-    }\n-\n-  /* check results:  */\n-  for (i = 0; i < N; i++)\n-    {\n-      if (tmp.e.k[i] != 8)\n-        abort ();\n-    }\n-\n-  return 0;\n-}\n-\n-int main (void)\n-{ \n-  check_vect ();\n-  \n-  return main1 ();\n-} \n-\n-/* { dg-final { scan-tree-dump-times \"vectorization not profitable\" 1 \"vect\" } } */\n-/* { dg-final { scan-tree-dump-times \"vectorized 1 loops\" 0 \"vect\" } } */\n-/* { dg-final { cleanup-tree-dump \"vect\" } } */"}, {"sha": "7fc25946587ae540315c937226d3a000ffb0fb2e", "filename": "gcc/testsuite/gcc.dg/vect/costmodel/ppc/costmodel-vect-68d.c", "status": "removed", "additions": 0, "deletions": 50, "changes": 50, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6698dd72f7b6743e1c4c44817de674ae2e31f8cb/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fcostmodel%2Fppc%2Fcostmodel-vect-68d.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6698dd72f7b6743e1c4c44817de674ae2e31f8cb/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fcostmodel%2Fppc%2Fcostmodel-vect-68d.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fcostmodel%2Fppc%2Fcostmodel-vect-68d.c?ref=6698dd72f7b6743e1c4c44817de674ae2e31f8cb", "patch": "@@ -1,50 +0,0 @@\n-/* { dg-require-effective-target vect_int } */\n-\n-#include <stdarg.h>\n-#include \"../../tree-vect.h\"\n-\n-#define N 11 \n-\n-struct s{\n-  int m;\n-  int n[N][N][N];\n-};\n-\n-struct test1{\n-  struct s a; /* array a.n is unaligned */\n-  int b;\n-  int c;\n-  struct s e; /* array e.n is aligned */\n-};\n-\n-int main1 ()\n-{  \n-  int i,j;\n-  struct test1 tmp1;\n-\n-  /* 4. unaligned */\n-  for (i = 3; i < N-3; i++)\n-    {\n-      tmp1.e.n[1][2][i] = 8;\n-    }\n- \n-  /* check results:  */\n-  for (i = 3; i <N-3; i++)\n-    {\n-      if (tmp1.e.n[1][2][i] != 8)\n-        abort ();\n-    }\n-\n-  return 0;\n-}\n-\n-int main (void)\n-{ \n-  check_vect ();\n-  \n-  return main1 ();\n-} \n-\n-/* { dg-final { scan-tree-dump-times \"vectorization not profitable\" 1 \"vect\" } } */\n-/* { dg-final { scan-tree-dump-times \"vectorized 1 loops\" 0 \"vect\" } } */\n-/* { dg-final { cleanup-tree-dump \"vect\" } } */"}, {"sha": "d11a9a2d78156cac0223748aadc377daf0c31dfe", "filename": "gcc/testsuite/gcc.dg/vect/costmodel/ppc/costmodel-vect-76a.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5bb120900a7cdb113b00ccfac46714c553d8f4fc/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fcostmodel%2Fppc%2Fcostmodel-vect-76a.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5bb120900a7cdb113b00ccfac46714c553d8f4fc/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fcostmodel%2Fppc%2Fcostmodel-vect-76a.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fcostmodel%2Fppc%2Fcostmodel-vect-76a.c?ref=5bb120900a7cdb113b00ccfac46714c553d8f4fc", "patch": "@@ -3,7 +3,7 @@\n #include <stdarg.h>\n #include \"../../tree-vect.h\"\n \n-#define N 8\n+#define N 16 \n #define OFF 4\n \n /* Check handling of accesses for which the \"initial condition\" -"}, {"sha": "d716b61394614db9e00ea0e059155b88b90de585", "filename": "gcc/testsuite/gcc.dg/vect/costmodel/ppc/costmodel-vect-76b.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5bb120900a7cdb113b00ccfac46714c553d8f4fc/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fcostmodel%2Fppc%2Fcostmodel-vect-76b.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5bb120900a7cdb113b00ccfac46714c553d8f4fc/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fcostmodel%2Fppc%2Fcostmodel-vect-76b.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fcostmodel%2Fppc%2Fcostmodel-vect-76b.c?ref=5bb120900a7cdb113b00ccfac46714c553d8f4fc", "patch": "@@ -3,7 +3,7 @@\n #include <stdarg.h>\n #include \"../../tree-vect.h\"\n \n-#define N 8\n+#define N 16 \n #define OFF 4\n \n /* Check handling of accesses for which the \"initial condition\" -"}, {"sha": "79fa926ec6791bc8df2ab045011bbb74751f0d51", "filename": "gcc/testsuite/gcc.dg/vect/pr35821-altivec.c", "status": "removed", "additions": 0, "deletions": 24, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6698dd72f7b6743e1c4c44817de674ae2e31f8cb/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fpr35821-altivec.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6698dd72f7b6743e1c4c44817de674ae2e31f8cb/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fpr35821-altivec.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fpr35821-altivec.c?ref=6698dd72f7b6743e1c4c44817de674ae2e31f8cb", "patch": "@@ -1,24 +0,0 @@\n-/* { dg-do compile { target { powerpc_altivec_ok } } } */\n-\n-#include \"altivec.h\"\n-\n-void\n-foo (float f_gain1, int n_tail, float * __restrict__ f_in_hptr,\n-     float * __restrict__ f_out_hptr)\n-{\n-  int i;\n-  vector float *v_f_in_hptr, *v_f_out_hptr;\n-\n-  f_in_hptr = ( float* )v_f_in_hptr;\n-  f_out_hptr = ( float* )v_f_out_hptr;\n-\n-  for( i = 0 ; i < n_tail ; i++ ) {\n-   f_out_hptr[0] = f_in_hptr[0] * f_gain1;\n-   f_in_hptr++;\n-   f_out_hptr++;\n-  }\n-}\n-\n-/* { dg-final { scan-tree-dump-times \"vectorized 1 loops\" 1 \"vect\" } } */\n-/* { dg-final { cleanup-tree-dump \"vect\" } } */\n-"}, {"sha": "4cc255f07ee606ca90540b106b9ccde2d713a3a5", "filename": "gcc/testsuite/gcc.dg/vect/pr35821-spu.c", "status": "removed", "additions": 0, "deletions": 22, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6698dd72f7b6743e1c4c44817de674ae2e31f8cb/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fpr35821-spu.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6698dd72f7b6743e1c4c44817de674ae2e31f8cb/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fpr35821-spu.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fpr35821-spu.c?ref=6698dd72f7b6743e1c4c44817de674ae2e31f8cb", "patch": "@@ -1,22 +0,0 @@\n-/* { dg-do compile { target { spu-*-* } } } */\n-\n-void\n-foo (float f_gain1, int n_tail, float * __restrict__ f_in_hptr,\n-     float * __restrict__ f_out_hptr)\n-{\n-  int i;\n-  __attribute__((__spu_vector__)) float *v_f_in_hptr, *v_f_out_hptr;\n-\n-  f_in_hptr = ( float* )v_f_in_hptr;\n-  f_out_hptr = ( float* )v_f_out_hptr;\n-\n-  for( i = 0 ; i < n_tail ; i++ ) {\n-   f_out_hptr[0] = f_in_hptr[0] * f_gain1;\n-   f_in_hptr++;\n-   f_out_hptr++;\n-  }\n-}\n-\n-/* { dg-final { scan-tree-dump-times \"vectorized 1 loops\" 1 \"vect\" } } */\n-/* { dg-final { cleanup-tree-dump \"vect\" } } */\n-"}]}