{"sha": "85ff6f624e23ae016b859f4829dd6f177b24c8b7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODVmZjZmNjI0ZTIzYWUwMTZiODU5ZjQ4MjlkZDZmMTc3YjI0YzhiNw==", "commit": {"author": {"name": "Mark Wielaard", "email": "mark@gcc.gnu.org", "date": "2004-05-15T20:39:10Z"}, "committer": {"name": "Mark Wielaard", "email": "mark@gcc.gnu.org", "date": "2004-05-15T20:39:10Z"}, "message": "[multiple changes]\n\n2004-05-15  Mark Wielaard  <mark@klomp.org>\n\n       * Makefile.am (ordinary_java_source_files): Add new javax.print\n       classes.\n       * Makefile.in: Regenerated.\n\n2004-05-15  Michael Koch  <konqueror@gmx.de>\n\n       * javax/print/attribute/standard/DateTimeAtCompleted.java,\n       javax/print/attribute/standard/DateTimeAtCreation.java,\n       javax/print/attribute/standard/DateTimeAtProcessing.java,\n       javax/print/attribute/standard/DocumentName.java,\n       javax/print/attribute/standard/JobHoldUntil.java,\n       javax/print/attribute/standard/JobImpressionsCompleted.java,\n       javax/print/attribute/standard/JobMessageFromOperator.java,\n       javax/print/attribute/standard/JobName.java,\n       javax/print/attribute/standard/JobOriginatingUserName.java,\n       javax/print/attribute/standard/JobPriority.java,\n       javax/print/attribute/standard/JobPrioritySupported.java,\n       javax/print/attribute/standard/NumberOfInterveningJobs.java,\n       javax/print/attribute/standard/OutputDeviceAssigned.java,\n       javax/print/attribute/standard/PrinterInfo.java,\n       javax/print/attribute/standard/PrinterLocation.java,\n       javax/print/attribute/standard/PrinterMakeAndModel.java,\n       javax/print/attribute/standard/PrinterMessageFromOperator.java,\n       javax/print/attribute/standard/PrinterName.java,\n       javax/print/attribute/standard/QueuedJobCount.java,\n       javax/print/attribute/standard/RequestingUserName.java:\n       Fixed javadocs all over.\n\n2004-05-15  Michael Koch  <konqueror@gmx.de>\n\n       * javax/print/DocFlavor.java,\n       javax/print/attribute/standard/ColorSupported.java,\n       javax/print/attribute/standard/Compression.java,\n       javax/print/attribute/standard/CopiesSupported.java,\n       javax/print/attribute/standard/Fidelity.java,\n       javax/print/attribute/standard/Finishings.java,\n       javax/print/attribute/standard/JobImpressionsSupported.java,\n       javax/print/attribute/standard/JobKOctetsSupported.java,\n       javax/print/attribute/standard/JobMediaSheetsSupported.java,\n       javax/print/attribute/standard/JobSheets.java,\n       javax/print/attribute/standard/JobState.java,\n       javax/print/attribute/standard/JobStateReason.java,\n       javax/print/attribute/standard/JobStateReasons.java,\n       javax/print/attribute/standard/Media.java,\n       javax/print/attribute/standard/MediaSizeName.java,\n       javax/print/attribute/standard/MultipleDocumentHandling.java,\n       javax/print/attribute/standard/NumberUpSupported.java,\n       javax/print/attribute/standard/OrientationRequested.java,\n       javax/print/attribute/standard/PDLOverrideSupported.java,\n       javax/print/attribute/standard/PageRanges.java,\n       javax/print/attribute/standard/PresentationDirection.java,\n       javax/print/attribute/standard/PrintQuality.java,\n       javax/print/attribute/standard/PrinterIsAcceptingJobs.java,\n       javax/print/attribute/standard/PrinterMoreInfo.java,\n       javax/print/attribute/standard/PrinterMoreInfoManufacturer.java,\n       javax/print/attribute/standard/PrinterResolution.java,\n       javax/print/attribute/standard/PrinterState.java,\n       javax/print/attribute/standard/PrinterStateReason.java,\n       javax/print/attribute/standard/PrinterStateReasons.java,\n       javax/print/attribute/standard/PrinterURI.java,\n       javax/print/attribute/standard/ReferenceUriSchemesSupported.java,\n       javax/print/attribute/standard/Severity.java,\n       javax/print/attribute/standard/SheetCollate.java,\n       javax/print/attribute/standard/Sides.java:\n       Added serialVersionUID and removed final keyword where it doenst\n       belong.\n\n2004-05-15  Michael Koch  <konqueror@gmx.de>\n\n       * javax/print/PrintServiceLookup.java: New file.\n\n2004-05-15  Michael Koch  <konqueror@gmx.de>\n\n       * javax/print/DocFlavor.java:\n       Implemented all flavor classes.\n\n2004-05-15  Michael Koch  <konqueror@gmx.de>\n\n       * javax/print/attribute/standard/ColorSupported.java,\n       javax/print/attribute/standard/Compression.java,\n       javax/print/attribute/standard/CopiesSupported.java,\n       javax/print/attribute/standard/Fidelity.java,\n       javax/print/attribute/standard/Finishings.java,\n       javax/print/attribute/standard/JobImpressionsSupported.java,\n       javax/print/attribute/standard/JobKOctetsSupported.java,\n       javax/print/attribute/standard/JobMediaSheetsSupported.java,\n       javax/print/attribute/standard/JobSheets.java,\n       javax/print/attribute/standard/JobState.java,\n       javax/print/attribute/standard/JobStateReason.java,\n       javax/print/attribute/standard/JobStateReasons.java,\n       javax/print/attribute/standard/Media.java,\n       javax/print/attribute/standard/MediaSizeName.java,\n       javax/print/attribute/standard/MultipleDocumentHandling.java,\n       javax/print/attribute/standard/NumberUpSupported.java,\n       javax/print/attribute/standard/OrientationRequested.java,\n       javax/print/attribute/standard/PDLOverrideSupported.java,\n       javax/print/attribute/standard/PageRanges.java,\n       javax/print/attribute/standard/PresentationDirection.java,\n       javax/print/attribute/standard/PrintQuality.java,\n       javax/print/attribute/standard/PrinterIsAcceptingJobs.java,\n       javax/print/attribute/standard/PrinterMoreInfo.java,\n       javax/print/attribute/standard/PrinterMoreInfoManufacturer.java,\n       javax/print/attribute/standard/PrinterResolution.java,\n       javax/print/attribute/standard/PrinterState.java,\n       javax/print/attribute/standard/PrinterStateReason.java,\n       javax/print/attribute/standard/PrinterStateReasons.java,\n       javax/print/attribute/standard/PrinterURI.java,\n       javax/print/attribute/standard/ReferenceUriSchemesSupported.java,\n       javax/print/attribute/standard/Severity.java,\n       javax/print/attribute/standard/SheetCollate.java,\n       javax/print/attribute/standard/Sides.java: New files.\n\n2004-05-15  Michael Koch  <konqueror@gmx.de>\n\n       * javax/print/Doc.java\n       (getPrintData): Throws IOException.\n       (getReaderForText): Likewise.\n       (getStreamForBytes): Likewise.\n       * javax/print/DocFlavor.java:\n       Fixed filename in copyright.\n       (serialVersionUID): New field.\n       * javax/print/ServiceUIFactory.java:\n       Made all constants final.\n       * javax/print/AttributeException.java\n       javax/print/MultiDoc.java\n       javax/print/MultiDocPrintJob.java\n       javax/print/MultiDocPrintService.java\n       javax/print/StreamPrintService.java\n       javax/print/URIException.java: New files.\n       * javax/print/Makefile.am\n       (EXTRA_DIST): Added all new files.\n\n2004-05-15  Michael Koch  <konqueror@gmx.de>\n\n       * javax/print/attribute/standard/Copies.java,\n       javax/print/attribute/standard/DateTimeAtCompleted.java,\n       javax/print/attribute/standard/DateTimeAtCreation.java,\n       javax/print/attribute/standard/DateTimeAtProcessing.java,\n       javax/print/attribute/standard/DocumentName.java,\n       javax/print/attribute/standard/JobHoldUntil.java,\n       javax/print/attribute/standard/JobImpressions.java,\n       javax/print/attribute/standard/JobImpressionsCompleted.java,\n       javax/print/attribute/standard/JobKOctets.java,\n       javax/print/attribute/standard/JobKOctetsProcessed.java,\n       javax/print/attribute/standard/JobMediaSheets.java,\n       javax/print/attribute/standard/JobMediaSheetsCompleted.java,\n       javax/print/attribute/standard/JobMessageFromOperator.java,\n       javax/print/attribute/standard/JobName.java,\n       javax/print/attribute/standard/JobOriginatingUserName.java,\n       javax/print/attribute/standard/JobPriority.java,\n       javax/print/attribute/standard/JobPrioritySupported.java,\n       javax/print/attribute/standard/NumberOfDocuments.java,\n       javax/print/attribute/standard/NumberOfInterveningJobs.java,\n       javax/print/attribute/standard/NumberUp.java,\n       javax/print/attribute/standard/OutputDeviceAssigned.java,\n       javax/print/attribute/standard/PagesPerMinute.java,\n       javax/print/attribute/standard/PagesPerMinuteColor.java:\n       Fixed @return tag all over.\n\n2004-05-15  Michael Koch  <konqueror@gmx.de>\n\n       * javax/print/attribute/AttributeSetUtilities.java\n       (verifyCategoryForValue): Fixed typo in javadoc.\n       * javax/print/attribute/HashAttributeSet.java\n       (containsKey): Fixed @return tag.\n       (comtainsValue): Likewise.\n       (equals): Likewise.\n       * javax/print/attribute/IntegerSyntax.java\n       (equals): Likewise.\n       * javax/print/attribute/ResolutionSyntax.java\n       (equals): Likewise.\n       (getCrossFeedResolution): Removed unused code.\n       (getFeedResolution): Likewise.\n       * javax/print/attribute/SetOfIntegerSyntax.java\n       (SetOfIntegerSyntax): Fixed HTML entities in javadoc.\n       (equals): Fixed @return tag.\n       * javax/print/attribute/TextSyntax.java\n       (TextSyntax): Take locale into account.\n       (hashCode): Better implementation.\n\n2004-05-15  Michael Koch  <konqueror@gmx.de>\n\n       * javax/print/CancelablePrintJob.java,\n       javax/print/Doc.java,\n       javax/print/DocFlavor.java,\n       javax/print/DocPrintJob.java,\n       javax/print/FlavorException.java,\n       javax/print/PrintException.java,\n       javax/print/PrintService.java,\n       javax/print/ServiceUIFactory.java: New files.\n\nFrom-SVN: r81901", "tree": {"sha": "73cba0b7256346db3e226b255a113c6de89e2c8f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/73cba0b7256346db3e226b255a113c6de89e2c8f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/85ff6f624e23ae016b859f4829dd6f177b24c8b7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/85ff6f624e23ae016b859f4829dd6f177b24c8b7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/85ff6f624e23ae016b859f4829dd6f177b24c8b7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/85ff6f624e23ae016b859f4829dd6f177b24c8b7/comments", "author": null, "committer": null, "parents": [{"sha": "7cd9b02827c8e773dc0c484a24dda26cfb2c8f1f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7cd9b02827c8e773dc0c484a24dda26cfb2c8f1f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7cd9b02827c8e773dc0c484a24dda26cfb2c8f1f"}], "stats": {"total": 5567, "additions": 5497, "deletions": 70}, "files": [{"sha": "803bcb80e080a36f13ca7898cb6428fc96d1c982", "filename": "libjava/ChangeLog", "status": "modified", "additions": 193, "deletions": 0, "changes": 193, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/85ff6f624e23ae016b859f4829dd6f177b24c8b7/libjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/85ff6f624e23ae016b859f4829dd6f177b24c8b7/libjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog?ref=85ff6f624e23ae016b859f4829dd6f177b24c8b7", "patch": "@@ -1,3 +1,196 @@\n+2004-05-15  Mark Wielaard  <mark@klomp.org>\n+\n+\t* Makefile.am (ordinary_java_source_files): Add new javax.print\n+\tclasses.\n+\t* Makefile.in: Regenerated.\n+\n+2004-05-15  Michael Koch  <konqueror@gmx.de>\n+\n+\t* javax/print/attribute/standard/DateTimeAtCompleted.java,\n+\tjavax/print/attribute/standard/DateTimeAtCreation.java,\n+\tjavax/print/attribute/standard/DateTimeAtProcessing.java,\n+\tjavax/print/attribute/standard/DocumentName.java,\n+\tjavax/print/attribute/standard/JobHoldUntil.java,\n+\tjavax/print/attribute/standard/JobImpressionsCompleted.java,\n+\tjavax/print/attribute/standard/JobMessageFromOperator.java,\n+\tjavax/print/attribute/standard/JobName.java,\n+\tjavax/print/attribute/standard/JobOriginatingUserName.java,\n+\tjavax/print/attribute/standard/JobPriority.java,\n+\tjavax/print/attribute/standard/JobPrioritySupported.java,\n+\tjavax/print/attribute/standard/NumberOfInterveningJobs.java,\n+\tjavax/print/attribute/standard/OutputDeviceAssigned.java,\n+\tjavax/print/attribute/standard/PrinterInfo.java,\n+\tjavax/print/attribute/standard/PrinterLocation.java,\n+\tjavax/print/attribute/standard/PrinterMakeAndModel.java,\n+\tjavax/print/attribute/standard/PrinterMessageFromOperator.java,\n+\tjavax/print/attribute/standard/PrinterName.java,\n+\tjavax/print/attribute/standard/QueuedJobCount.java,\n+\tjavax/print/attribute/standard/RequestingUserName.java:\n+\tFixed javadocs all over.\n+\n+2004-05-15  Michael Koch  <konqueror@gmx.de>\n+\n+\t* javax/print/DocFlavor.java,\n+\tjavax/print/attribute/standard/ColorSupported.java,\n+\tjavax/print/attribute/standard/Compression.java,\n+\tjavax/print/attribute/standard/CopiesSupported.java,\n+\tjavax/print/attribute/standard/Fidelity.java,\n+\tjavax/print/attribute/standard/Finishings.java,\n+\tjavax/print/attribute/standard/JobImpressionsSupported.java,\n+\tjavax/print/attribute/standard/JobKOctetsSupported.java,\n+\tjavax/print/attribute/standard/JobMediaSheetsSupported.java,\n+\tjavax/print/attribute/standard/JobSheets.java,\n+\tjavax/print/attribute/standard/JobState.java,\n+\tjavax/print/attribute/standard/JobStateReason.java,\n+\tjavax/print/attribute/standard/JobStateReasons.java,\n+\tjavax/print/attribute/standard/Media.java,\n+\tjavax/print/attribute/standard/MediaSizeName.java,\n+\tjavax/print/attribute/standard/MultipleDocumentHandling.java,\n+\tjavax/print/attribute/standard/NumberUpSupported.java,\n+\tjavax/print/attribute/standard/OrientationRequested.java,\n+\tjavax/print/attribute/standard/PDLOverrideSupported.java,\n+\tjavax/print/attribute/standard/PageRanges.java,\n+\tjavax/print/attribute/standard/PresentationDirection.java,\n+\tjavax/print/attribute/standard/PrintQuality.java,\n+\tjavax/print/attribute/standard/PrinterIsAcceptingJobs.java,\n+\tjavax/print/attribute/standard/PrinterMoreInfo.java,\n+\tjavax/print/attribute/standard/PrinterMoreInfoManufacturer.java,\n+\tjavax/print/attribute/standard/PrinterResolution.java,\n+\tjavax/print/attribute/standard/PrinterState.java,\n+\tjavax/print/attribute/standard/PrinterStateReason.java,\n+\tjavax/print/attribute/standard/PrinterStateReasons.java,\n+\tjavax/print/attribute/standard/PrinterURI.java,\n+\tjavax/print/attribute/standard/ReferenceUriSchemesSupported.java,\n+\tjavax/print/attribute/standard/Severity.java,\n+\tjavax/print/attribute/standard/SheetCollate.java,\n+\tjavax/print/attribute/standard/Sides.java:\n+\tAdded serialVersionUID and removed final keyword where it doenst\n+\tbelong.\n+\n+2004-05-15  Michael Koch  <konqueror@gmx.de>\n+\n+\t* javax/print/PrintServiceLookup.java: New file.\n+\n+2004-05-15  Michael Koch  <konqueror@gmx.de>\n+\n+\t* javax/print/DocFlavor.java:\n+\tImplemented all flavor classes.\n+\n+2004-05-15  Michael Koch  <konqueror@gmx.de>\n+\n+\t* javax/print/attribute/standard/ColorSupported.java,\n+\tjavax/print/attribute/standard/Compression.java,\n+\tjavax/print/attribute/standard/CopiesSupported.java,\n+\tjavax/print/attribute/standard/Fidelity.java,\n+\tjavax/print/attribute/standard/Finishings.java,\n+\tjavax/print/attribute/standard/JobImpressionsSupported.java,\n+\tjavax/print/attribute/standard/JobKOctetsSupported.java,\n+\tjavax/print/attribute/standard/JobMediaSheetsSupported.java,\n+\tjavax/print/attribute/standard/JobSheets.java,\n+\tjavax/print/attribute/standard/JobState.java,\n+\tjavax/print/attribute/standard/JobStateReason.java,\n+\tjavax/print/attribute/standard/JobStateReasons.java,\n+\tjavax/print/attribute/standard/Media.java,\n+\tjavax/print/attribute/standard/MediaSizeName.java,\n+\tjavax/print/attribute/standard/MultipleDocumentHandling.java,\n+\tjavax/print/attribute/standard/NumberUpSupported.java,\n+\tjavax/print/attribute/standard/OrientationRequested.java,\n+\tjavax/print/attribute/standard/PDLOverrideSupported.java,\n+\tjavax/print/attribute/standard/PageRanges.java,\n+\tjavax/print/attribute/standard/PresentationDirection.java,\n+\tjavax/print/attribute/standard/PrintQuality.java,\n+\tjavax/print/attribute/standard/PrinterIsAcceptingJobs.java,\n+\tjavax/print/attribute/standard/PrinterMoreInfo.java,\n+\tjavax/print/attribute/standard/PrinterMoreInfoManufacturer.java,\n+\tjavax/print/attribute/standard/PrinterResolution.java,\n+\tjavax/print/attribute/standard/PrinterState.java,\n+\tjavax/print/attribute/standard/PrinterStateReason.java,\n+\tjavax/print/attribute/standard/PrinterStateReasons.java,\n+\tjavax/print/attribute/standard/PrinterURI.java,\n+\tjavax/print/attribute/standard/ReferenceUriSchemesSupported.java,\n+\tjavax/print/attribute/standard/Severity.java,\n+\tjavax/print/attribute/standard/SheetCollate.java,\n+\tjavax/print/attribute/standard/Sides.java: New files.\n+\n+2004-05-15  Michael Koch  <konqueror@gmx.de>\n+\n+\t* javax/print/Doc.java\n+\t(getPrintData): Throws IOException.\n+\t(getReaderForText): Likewise.\n+\t(getStreamForBytes): Likewise.\n+\t* javax/print/DocFlavor.java:\n+\tFixed filename in copyright.\n+\t(serialVersionUID): New field.\n+\t* javax/print/ServiceUIFactory.java:\n+\tMade all constants final.\n+\t* javax/print/AttributeException.java\n+\tjavax/print/MultiDoc.java\n+\tjavax/print/MultiDocPrintJob.java\n+\tjavax/print/MultiDocPrintService.java\n+\tjavax/print/StreamPrintService.java\n+\tjavax/print/URIException.java: New files.\n+\t* javax/print/Makefile.am\n+\t(EXTRA_DIST): Added all new files.\n+\n+2004-05-15  Michael Koch  <konqueror@gmx.de>\n+\n+\t* javax/print/attribute/standard/Copies.java,\n+\tjavax/print/attribute/standard/DateTimeAtCompleted.java,\n+\tjavax/print/attribute/standard/DateTimeAtCreation.java,\n+\tjavax/print/attribute/standard/DateTimeAtProcessing.java,\n+\tjavax/print/attribute/standard/DocumentName.java,\n+\tjavax/print/attribute/standard/JobHoldUntil.java,\n+\tjavax/print/attribute/standard/JobImpressions.java,\n+\tjavax/print/attribute/standard/JobImpressionsCompleted.java,\n+\tjavax/print/attribute/standard/JobKOctets.java,\n+\tjavax/print/attribute/standard/JobKOctetsProcessed.java,\n+\tjavax/print/attribute/standard/JobMediaSheets.java,\n+\tjavax/print/attribute/standard/JobMediaSheetsCompleted.java,\n+\tjavax/print/attribute/standard/JobMessageFromOperator.java,\n+\tjavax/print/attribute/standard/JobName.java,\n+\tjavax/print/attribute/standard/JobOriginatingUserName.java,\n+\tjavax/print/attribute/standard/JobPriority.java,\n+\tjavax/print/attribute/standard/JobPrioritySupported.java,\n+\tjavax/print/attribute/standard/NumberOfDocuments.java,\n+\tjavax/print/attribute/standard/NumberOfInterveningJobs.java,\n+\tjavax/print/attribute/standard/NumberUp.java,\n+\tjavax/print/attribute/standard/OutputDeviceAssigned.java,\n+\tjavax/print/attribute/standard/PagesPerMinute.java,\n+\tjavax/print/attribute/standard/PagesPerMinuteColor.java:\n+\tFixed @return tag all over.\n+\n+2004-05-15  Michael Koch  <konqueror@gmx.de>\n+\n+\t* javax/print/attribute/AttributeSetUtilities.java\n+\t(verifyCategoryForValue): Fixed typo in javadoc.\n+\t* javax/print/attribute/HashAttributeSet.java\n+\t(containsKey): Fixed @return tag.\n+\t(comtainsValue): Likewise.\n+\t(equals): Likewise.\n+\t* javax/print/attribute/IntegerSyntax.java\n+\t(equals): Likewise.\n+\t* javax/print/attribute/ResolutionSyntax.java\n+\t(equals): Likewise.\n+\t(getCrossFeedResolution): Removed unused code.\n+\t(getFeedResolution): Likewise.\n+\t* javax/print/attribute/SetOfIntegerSyntax.java\n+\t(SetOfIntegerSyntax): Fixed HTML entities in javadoc.\n+\t(equals): Fixed @return tag.\n+\t* javax/print/attribute/TextSyntax.java\n+\t(TextSyntax): Take locale into account.\n+\t(hashCode): Better implementation.\n+\n+2004-05-15  Michael Koch  <konqueror@gmx.de>\n+\n+\t* javax/print/CancelablePrintJob.java,\n+\tjavax/print/Doc.java,\n+\tjavax/print/DocFlavor.java,\n+\tjavax/print/DocPrintJob.java,\n+\tjavax/print/FlavorException.java,\n+\tjavax/print/PrintException.java,\n+\tjavax/print/PrintService.java,\n+\tjavax/print/ServiceUIFactory.java: New files.\n+\n 2004-05-15  Mark Wielaard  <mark@klomp.org>\n \n \t* gnu/regexp/CharIndexedReader.java: Removed."}, {"sha": "b79d68bf59479d5296cbcd9c25abb7fdc0c9930e", "filename": "libjava/Makefile.am", "status": "modified", "additions": 56, "deletions": 0, "changes": 56, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/85ff6f624e23ae016b859f4829dd6f177b24c8b7/libjava%2FMakefile.am", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/85ff6f624e23ae016b859f4829dd6f177b24c8b7/libjava%2FMakefile.am", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FMakefile.am?ref=85ff6f624e23ae016b859f4829dd6f177b24c8b7", "patch": "@@ -1856,6 +1856,21 @@ javax/naming/ldap/UnsolicitedNotification.java \\\n javax/naming/ldap/UnsolicitedNotificationEvent.java \\\n javax/naming/ldap/UnsolicitedNotificationListener.java \\\n javax/naming/OperationNotSupportedException.java \\\n+javax/print/AttributeException.java \\\n+javax/print/CancelablePrintJob.java \\\n+javax/print/Doc.java \\\n+javax/print/DocFlavor.java \\\n+javax/print/DocPrintJob.java \\\n+javax/print/FlavorException.java \\\n+javax/print/MultiDoc.java \\\n+javax/print/MultiDocPrintJob.java \\\n+javax/print/MultiDocPrintService.java \\\n+javax/print/PrintException.java \\\n+javax/print/PrintService.java \\\n+javax/print/PrintServiceLookup.java \\\n+javax/print/ServiceUIFactory.java \\\n+javax/print/StreamPrintService.java \\\n+javax/print/URIException.java \\\n javax/print/attribute/Attribute.java \\\n javax/print/attribute/AttributeSet.java \\\n javax/print/attribute/AttributeSetUtilities.java \\\n@@ -1882,36 +1897,77 @@ javax/print/attribute/SupportedValuesAttribute.java \\\n javax/print/attribute/TextSyntax.java \\\n javax/print/attribute/UnmodifiableSetException.java \\\n javax/print/attribute/URISyntax.java \\\n+javax/print/attribute/standard/ColorSupported.java \\\n+javax/print/attribute/standard/Compression.java \\\n javax/print/attribute/standard/Copies.java \\\n+javax/print/attribute/standard/CopiesSupported.java \\\n javax/print/attribute/standard/DateTimeAtCompleted.java \\\n javax/print/attribute/standard/DateTimeAtCreation.java \\\n javax/print/attribute/standard/DateTimeAtProcessing.java \\\n javax/print/attribute/standard/DocumentName.java \\\n+javax/print/attribute/standard/Fidelity.java \\\n+javax/print/attribute/standard/Finishings.java \\\n javax/print/attribute/standard/JobHoldUntil.java \\\n javax/print/attribute/standard/JobImpressions.java \\\n javax/print/attribute/standard/JobImpressionsCompleted.java \\\n+javax/print/attribute/standard/JobImpressionsSupported.java \\\n javax/print/attribute/standard/JobKOctets.java \\\n javax/print/attribute/standard/JobKOctetsProcessed.java \\\n+javax/print/attribute/standard/JobKOctetsSupported.java \\\n javax/print/attribute/standard/JobMediaSheets.java \\\n javax/print/attribute/standard/JobMediaSheetsCompleted.java \\\n+javax/print/attribute/standard/JobMediaSheetsSupported.java \\\n javax/print/attribute/standard/JobMessageFromOperator.java \\\n javax/print/attribute/standard/JobName.java \\\n javax/print/attribute/standard/JobOriginatingUserName.java \\\n javax/print/attribute/standard/JobPriority.java \\\n javax/print/attribute/standard/JobPrioritySupported.java \\\n+javax/print/attribute/standard/JobSheets.java \\\n+javax/print/attribute/standard/JobState.java \\\n+javax/print/attribute/standard/JobStateReason.java \\\n+javax/print/attribute/standard/JobStateReasons.java \\\n+javax/print/attribute/standard/Media.java \\\n+javax/print/attribute/standard/MediaSizeName.java \\\n+javax/print/attribute/standard/MultipleDocumentHandling.java \\\n javax/print/attribute/standard/NumberOfDocuments.java \\\n javax/print/attribute/standard/NumberOfInterveningJobs.java \\\n javax/print/attribute/standard/NumberUp.java \\\n+javax/print/attribute/standard/NumberUpSupported.java \\\n+javax/print/attribute/standard/OrientationRequested.java \\\n javax/print/attribute/standard/OutputDeviceAssigned.java \\\n+javax/print/attribute/standard/PDLOverrideSupported.java \\\n+javax/print/attribute/standard/PageRanges.java \\\n javax/print/attribute/standard/PagesPerMinute.java \\\n javax/print/attribute/standard/PagesPerMinuteColor.java \\\n+javax/print/attribute/standard/PresentationDirection.java \\\n+javax/print/attribute/standard/PrintQuality.java \\\n javax/print/attribute/standard/PrinterInfo.java \\\n+javax/print/attribute/standard/PrinterIsAcceptingJobs.java \\\n javax/print/attribute/standard/PrinterLocation.java \\\n javax/print/attribute/standard/PrinterMakeAndModel.java \\\n javax/print/attribute/standard/PrinterMessageFromOperator.java \\\n+javax/print/attribute/standard/PrinterMoreInfo.java \\\n+javax/print/attribute/standard/PrinterMoreInfoManufacturer.java \\\n javax/print/attribute/standard/PrinterName.java \\\n+javax/print/attribute/standard/PrinterResolution.java \\\n+javax/print/attribute/standard/PrinterState.java \\\n+javax/print/attribute/standard/PrinterStateReason.java \\\n+javax/print/attribute/standard/PrinterStateReasons.java \\\n+javax/print/attribute/standard/PrinterURI.java \\\n javax/print/attribute/standard/QueuedJobCount.java \\\n+javax/print/attribute/standard/ReferenceUriSchemesSupported.java \\\n javax/print/attribute/standard/RequestingUserName.java \\\n+javax/print/attribute/standard/Severity.java \\\n+javax/print/attribute/standard/SheetCollate.java \\\n+javax/print/attribute/standard/Sides.java \\\n+javax/print/event/PrintEvent.java \\\n+javax/print/event/PrintJobAdapter.java \\\n+javax/print/event/PrintJobAttributeEvent.java \\\n+javax/print/event/PrintJobAttributeListener.java \\\n+javax/print/event/PrintJobEvent.java \\\n+javax/print/event/PrintJobListener.java \\\n+javax/print/event/PrintServiceAttributeEvent.java \\\n+javax/print/event/PrintServiceAttributeListener.java \\\n javax/security/auth/x500/X500Principal.java \\\n javax/sql/ConnectionEvent.java \\\n javax/sql/ConnectionEventListener.java \\"}, {"sha": "cf236f01a559e1a2f9df5346dac763dfaefc93e9", "filename": "libjava/Makefile.in", "status": "modified", "additions": 107, "deletions": 0, "changes": 107, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/85ff6f624e23ae016b859f4829dd6f177b24c8b7/libjava%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/85ff6f624e23ae016b859f4829dd6f177b24c8b7/libjava%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FMakefile.in?ref=85ff6f624e23ae016b859f4829dd6f177b24c8b7", "patch": "@@ -1537,6 +1537,21 @@ javax/naming/ldap/UnsolicitedNotification.java \\\n javax/naming/ldap/UnsolicitedNotificationEvent.java \\\n javax/naming/ldap/UnsolicitedNotificationListener.java \\\n javax/naming/OperationNotSupportedException.java \\\n+javax/print/AttributeException.java \\\n+javax/print/CancelablePrintJob.java \\\n+javax/print/Doc.java \\\n+javax/print/DocFlavor.java \\\n+javax/print/DocPrintJob.java \\\n+javax/print/FlavorException.java \\\n+javax/print/MultiDoc.java \\\n+javax/print/MultiDocPrintJob.java \\\n+javax/print/MultiDocPrintService.java \\\n+javax/print/PrintException.java \\\n+javax/print/PrintService.java \\\n+javax/print/PrintServiceLookup.java \\\n+javax/print/ServiceUIFactory.java \\\n+javax/print/StreamPrintService.java \\\n+javax/print/URIException.java \\\n javax/print/attribute/Attribute.java \\\n javax/print/attribute/AttributeSet.java \\\n javax/print/attribute/AttributeSetUtilities.java \\\n@@ -1563,36 +1578,77 @@ javax/print/attribute/SupportedValuesAttribute.java \\\n javax/print/attribute/TextSyntax.java \\\n javax/print/attribute/UnmodifiableSetException.java \\\n javax/print/attribute/URISyntax.java \\\n+javax/print/attribute/standard/ColorSupported.java \\\n+javax/print/attribute/standard/Compression.java \\\n javax/print/attribute/standard/Copies.java \\\n+javax/print/attribute/standard/CopiesSupported.java \\\n javax/print/attribute/standard/DateTimeAtCompleted.java \\\n javax/print/attribute/standard/DateTimeAtCreation.java \\\n javax/print/attribute/standard/DateTimeAtProcessing.java \\\n javax/print/attribute/standard/DocumentName.java \\\n+javax/print/attribute/standard/Fidelity.java \\\n+javax/print/attribute/standard/Finishings.java \\\n javax/print/attribute/standard/JobHoldUntil.java \\\n javax/print/attribute/standard/JobImpressions.java \\\n javax/print/attribute/standard/JobImpressionsCompleted.java \\\n+javax/print/attribute/standard/JobImpressionsSupported.java \\\n javax/print/attribute/standard/JobKOctets.java \\\n javax/print/attribute/standard/JobKOctetsProcessed.java \\\n+javax/print/attribute/standard/JobKOctetsSupported.java \\\n javax/print/attribute/standard/JobMediaSheets.java \\\n javax/print/attribute/standard/JobMediaSheetsCompleted.java \\\n+javax/print/attribute/standard/JobMediaSheetsSupported.java \\\n javax/print/attribute/standard/JobMessageFromOperator.java \\\n javax/print/attribute/standard/JobName.java \\\n javax/print/attribute/standard/JobOriginatingUserName.java \\\n javax/print/attribute/standard/JobPriority.java \\\n javax/print/attribute/standard/JobPrioritySupported.java \\\n+javax/print/attribute/standard/JobSheets.java \\\n+javax/print/attribute/standard/JobState.java \\\n+javax/print/attribute/standard/JobStateReason.java \\\n+javax/print/attribute/standard/JobStateReasons.java \\\n+javax/print/attribute/standard/Media.java \\\n+javax/print/attribute/standard/MediaSizeName.java \\\n+javax/print/attribute/standard/MultipleDocumentHandling.java \\\n javax/print/attribute/standard/NumberOfDocuments.java \\\n javax/print/attribute/standard/NumberOfInterveningJobs.java \\\n javax/print/attribute/standard/NumberUp.java \\\n+javax/print/attribute/standard/NumberUpSupported.java \\\n+javax/print/attribute/standard/OrientationRequested.java \\\n javax/print/attribute/standard/OutputDeviceAssigned.java \\\n+javax/print/attribute/standard/PDLOverrideSupported.java \\\n+javax/print/attribute/standard/PageRanges.java \\\n javax/print/attribute/standard/PagesPerMinute.java \\\n javax/print/attribute/standard/PagesPerMinuteColor.java \\\n+javax/print/attribute/standard/PresentationDirection.java \\\n+javax/print/attribute/standard/PrintQuality.java \\\n javax/print/attribute/standard/PrinterInfo.java \\\n+javax/print/attribute/standard/PrinterIsAcceptingJobs.java \\\n javax/print/attribute/standard/PrinterLocation.java \\\n javax/print/attribute/standard/PrinterMakeAndModel.java \\\n javax/print/attribute/standard/PrinterMessageFromOperator.java \\\n+javax/print/attribute/standard/PrinterMoreInfo.java \\\n+javax/print/attribute/standard/PrinterMoreInfoManufacturer.java \\\n javax/print/attribute/standard/PrinterName.java \\\n+javax/print/attribute/standard/PrinterResolution.java \\\n+javax/print/attribute/standard/PrinterState.java \\\n+javax/print/attribute/standard/PrinterStateReason.java \\\n+javax/print/attribute/standard/PrinterStateReasons.java \\\n+javax/print/attribute/standard/PrinterURI.java \\\n javax/print/attribute/standard/QueuedJobCount.java \\\n+javax/print/attribute/standard/ReferenceUriSchemesSupported.java \\\n javax/print/attribute/standard/RequestingUserName.java \\\n+javax/print/attribute/standard/Severity.java \\\n+javax/print/attribute/standard/SheetCollate.java \\\n+javax/print/attribute/standard/Sides.java \\\n+javax/print/event/PrintEvent.java \\\n+javax/print/event/PrintJobAdapter.java \\\n+javax/print/event/PrintJobAttributeEvent.java \\\n+javax/print/event/PrintJobAttributeListener.java \\\n+javax/print/event/PrintJobEvent.java \\\n+javax/print/event/PrintJobListener.java \\\n+javax/print/event/PrintServiceAttributeEvent.java \\\n+javax/print/event/PrintServiceAttributeListener.java \\\n javax/security/auth/x500/X500Principal.java \\\n javax/sql/ConnectionEvent.java \\\n javax/sql/ConnectionEventListener.java \\\n@@ -4351,6 +4407,16 @@ DEP_FILES =  .deps/$(srcdir)/$(CONVERT_DIR)/gen-from-JIS.P \\\n .deps/javax/naming/spi/ObjectFactoryBuilder.P \\\n .deps/javax/naming/spi/ResolveResult.P \\\n .deps/javax/naming/spi/Resolver.P .deps/javax/naming/spi/StateFactory.P \\\n+.deps/javax/print/AttributeException.P \\\n+.deps/javax/print/CancelablePrintJob.P .deps/javax/print/Doc.P \\\n+.deps/javax/print/DocFlavor.P .deps/javax/print/DocPrintJob.P \\\n+.deps/javax/print/FlavorException.P .deps/javax/print/MultiDoc.P \\\n+.deps/javax/print/MultiDocPrintJob.P \\\n+.deps/javax/print/MultiDocPrintService.P \\\n+.deps/javax/print/PrintException.P .deps/javax/print/PrintService.P \\\n+.deps/javax/print/PrintServiceLookup.P \\\n+.deps/javax/print/ServiceUIFactory.P \\\n+.deps/javax/print/StreamPrintService.P .deps/javax/print/URIException.P \\\n .deps/javax/print/attribute/Attribute.P \\\n .deps/javax/print/attribute/AttributeSet.P \\\n .deps/javax/print/attribute/AttributeSetUtilities.P \\\n@@ -4377,36 +4443,77 @@ DEP_FILES =  .deps/$(srcdir)/$(CONVERT_DIR)/gen-from-JIS.P \\\n .deps/javax/print/attribute/TextSyntax.P \\\n .deps/javax/print/attribute/URISyntax.P \\\n .deps/javax/print/attribute/UnmodifiableSetException.P \\\n+.deps/javax/print/attribute/standard/ColorSupported.P \\\n+.deps/javax/print/attribute/standard/Compression.P \\\n .deps/javax/print/attribute/standard/Copies.P \\\n+.deps/javax/print/attribute/standard/CopiesSupported.P \\\n .deps/javax/print/attribute/standard/DateTimeAtCompleted.P \\\n .deps/javax/print/attribute/standard/DateTimeAtCreation.P \\\n .deps/javax/print/attribute/standard/DateTimeAtProcessing.P \\\n .deps/javax/print/attribute/standard/DocumentName.P \\\n+.deps/javax/print/attribute/standard/Fidelity.P \\\n+.deps/javax/print/attribute/standard/Finishings.P \\\n .deps/javax/print/attribute/standard/JobHoldUntil.P \\\n .deps/javax/print/attribute/standard/JobImpressions.P \\\n .deps/javax/print/attribute/standard/JobImpressionsCompleted.P \\\n+.deps/javax/print/attribute/standard/JobImpressionsSupported.P \\\n .deps/javax/print/attribute/standard/JobKOctets.P \\\n .deps/javax/print/attribute/standard/JobKOctetsProcessed.P \\\n+.deps/javax/print/attribute/standard/JobKOctetsSupported.P \\\n .deps/javax/print/attribute/standard/JobMediaSheets.P \\\n .deps/javax/print/attribute/standard/JobMediaSheetsCompleted.P \\\n+.deps/javax/print/attribute/standard/JobMediaSheetsSupported.P \\\n .deps/javax/print/attribute/standard/JobMessageFromOperator.P \\\n .deps/javax/print/attribute/standard/JobName.P \\\n .deps/javax/print/attribute/standard/JobOriginatingUserName.P \\\n .deps/javax/print/attribute/standard/JobPriority.P \\\n .deps/javax/print/attribute/standard/JobPrioritySupported.P \\\n+.deps/javax/print/attribute/standard/JobSheets.P \\\n+.deps/javax/print/attribute/standard/JobState.P \\\n+.deps/javax/print/attribute/standard/JobStateReason.P \\\n+.deps/javax/print/attribute/standard/JobStateReasons.P \\\n+.deps/javax/print/attribute/standard/Media.P \\\n+.deps/javax/print/attribute/standard/MediaSizeName.P \\\n+.deps/javax/print/attribute/standard/MultipleDocumentHandling.P \\\n .deps/javax/print/attribute/standard/NumberOfDocuments.P \\\n .deps/javax/print/attribute/standard/NumberOfInterveningJobs.P \\\n .deps/javax/print/attribute/standard/NumberUp.P \\\n+.deps/javax/print/attribute/standard/NumberUpSupported.P \\\n+.deps/javax/print/attribute/standard/OrientationRequested.P \\\n .deps/javax/print/attribute/standard/OutputDeviceAssigned.P \\\n+.deps/javax/print/attribute/standard/PDLOverrideSupported.P \\\n+.deps/javax/print/attribute/standard/PageRanges.P \\\n .deps/javax/print/attribute/standard/PagesPerMinute.P \\\n .deps/javax/print/attribute/standard/PagesPerMinuteColor.P \\\n+.deps/javax/print/attribute/standard/PresentationDirection.P \\\n+.deps/javax/print/attribute/standard/PrintQuality.P \\\n .deps/javax/print/attribute/standard/PrinterInfo.P \\\n+.deps/javax/print/attribute/standard/PrinterIsAcceptingJobs.P \\\n .deps/javax/print/attribute/standard/PrinterLocation.P \\\n .deps/javax/print/attribute/standard/PrinterMakeAndModel.P \\\n .deps/javax/print/attribute/standard/PrinterMessageFromOperator.P \\\n+.deps/javax/print/attribute/standard/PrinterMoreInfo.P \\\n+.deps/javax/print/attribute/standard/PrinterMoreInfoManufacturer.P \\\n .deps/javax/print/attribute/standard/PrinterName.P \\\n+.deps/javax/print/attribute/standard/PrinterResolution.P \\\n+.deps/javax/print/attribute/standard/PrinterState.P \\\n+.deps/javax/print/attribute/standard/PrinterStateReason.P \\\n+.deps/javax/print/attribute/standard/PrinterStateReasons.P \\\n+.deps/javax/print/attribute/standard/PrinterURI.P \\\n .deps/javax/print/attribute/standard/QueuedJobCount.P \\\n+.deps/javax/print/attribute/standard/ReferenceUriSchemesSupported.P \\\n .deps/javax/print/attribute/standard/RequestingUserName.P \\\n+.deps/javax/print/attribute/standard/Severity.P \\\n+.deps/javax/print/attribute/standard/SheetCollate.P \\\n+.deps/javax/print/attribute/standard/Sides.P \\\n+.deps/javax/print/event/PrintEvent.P \\\n+.deps/javax/print/event/PrintJobAdapter.P \\\n+.deps/javax/print/event/PrintJobAttributeEvent.P \\\n+.deps/javax/print/event/PrintJobAttributeListener.P \\\n+.deps/javax/print/event/PrintJobEvent.P \\\n+.deps/javax/print/event/PrintJobListener.P \\\n+.deps/javax/print/event/PrintServiceAttributeEvent.P \\\n+.deps/javax/print/event/PrintServiceAttributeListener.P \\\n .deps/javax/rmi/BAD_OPERATION.P .deps/javax/rmi/CORBA/ClassDesc.P \\\n .deps/javax/rmi/CORBA/ObjectImpl.P \\\n .deps/javax/rmi/CORBA/PortableRemoteObjectDelegate.P \\"}, {"sha": "780850ff6b36c734ec5e43ae37029ea5127b2926", "filename": "libjava/javax/print/AttributeException.java", "status": "added", "additions": 63, "deletions": 0, "changes": 63, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/85ff6f624e23ae016b859f4829dd6f177b24c8b7/libjava%2Fjavax%2Fprint%2FAttributeException.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/85ff6f624e23ae016b859f4829dd6f177b24c8b7/libjava%2Fjavax%2Fprint%2FAttributeException.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fprint%2FAttributeException.java?ref=85ff6f624e23ae016b859f4829dd6f177b24c8b7", "patch": "@@ -0,0 +1,63 @@\n+/* CancelablePrintJob.java --\n+   Copyright (C) 2004 Free Software Foundation, Inc.\n+\n+This file is part of GNU Classpath.\n+\n+GNU Classpath is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2, or (at your option)\n+any later version.\n+\n+GNU Classpath is distributed in the hope that it will be useful, but\n+WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GNU Classpath; see the file COPYING.  If not, write to the\n+Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA\n+02111-1307 USA.\n+\n+Linking this library statically or dynamically with other modules is\n+making a combined work based on this library.  Thus, the terms and\n+conditions of the GNU General Public License cover the whole\n+combination.\n+\n+As a special exception, the copyright holders of this library give you\n+permission to link this library with independent modules to produce an\n+executable, regardless of the license terms of these independent\n+modules, and to copy and distribute the resulting executable under\n+terms of your choice, provided that you also meet, for each linked\n+independent module, the terms and conditions of the license of that\n+module.  An independent module is a module which is not derived from\n+or based on this library.  If you modify this library, you may extend\n+this exception to your version of the library, but you are not\n+obligated to do so.  If you do not wish to do so, delete this\n+exception statement from your version. */\n+\n+\n+package javax.print;\n+\n+import javax.print.attribute.Attribute;\n+\n+/**\n+ * @author Michael Koch (konqueror@gmx.de)\n+ */\n+public interface AttributeException\n+{\n+  /**\n+   * Returns the unsupported printing attribute classes for a print service\n+   * that does not support them.\n+   * \n+   * @return array of unsupported attribute classes, or null\n+   */\n+  Class[] getUnsupportedAttributes();\n+  \n+  /**\n+   * Returns the unsupported values of printing attributes for a print service\n+   * that does not support them.\n+   *   \n+   * @return array of unsupperted attribute values, or null\n+   */\n+  Attribute[] getUnsupportedValues();\n+}"}, {"sha": "329103e47740accaffe13fe814a87603b29786f3", "filename": "libjava/javax/print/CancelablePrintJob.java", "status": "added", "additions": 52, "deletions": 0, "changes": 52, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/85ff6f624e23ae016b859f4829dd6f177b24c8b7/libjava%2Fjavax%2Fprint%2FCancelablePrintJob.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/85ff6f624e23ae016b859f4829dd6f177b24c8b7/libjava%2Fjavax%2Fprint%2FCancelablePrintJob.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fprint%2FCancelablePrintJob.java?ref=85ff6f624e23ae016b859f4829dd6f177b24c8b7", "patch": "@@ -0,0 +1,52 @@\n+/* CancelablePrintJob.java --\n+   Copyright (C) 2004 Free Software Foundation, Inc.\n+\n+This file is part of GNU Classpath.\n+\n+GNU Classpath is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2, or (at your option)\n+any later version.\n+\n+GNU Classpath is distributed in the hope that it will be useful, but\n+WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GNU Classpath; see the file COPYING.  If not, write to the\n+Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA\n+02111-1307 USA.\n+\n+Linking this library statically or dynamically with other modules is\n+making a combined work based on this library.  Thus, the terms and\n+conditions of the GNU General Public License cover the whole\n+combination.\n+\n+As a special exception, the copyright holders of this library give you\n+permission to link this library with independent modules to produce an\n+executable, regardless of the license terms of these independent\n+modules, and to copy and distribute the resulting executable under\n+terms of your choice, provided that you also meet, for each linked\n+independent module, the terms and conditions of the license of that\n+module.  An independent module is a module which is not derived from\n+or based on this library.  If you modify this library, you may extend\n+this exception to your version of the library, but you are not\n+obligated to do so.  If you do not wish to do so, delete this\n+exception statement from your version. */\n+\n+\n+package javax.print;\n+\n+/**\n+ * @author Michael Koch (konqueror@gmx.de)\n+ */\n+public interface CancelablePrintJob extends DocPrintJob\n+{\n+  /**\n+   * Cancel print job.\n+   *\n+   * @exception PrintException if an error occured\n+   */\n+  void cancel() throws PrintException;\n+}"}, {"sha": "527038f6c82173a62f92eb484a434da2a37b5d1a", "filename": "libjava/javax/print/Doc.java", "status": "added", "additions": 95, "deletions": 0, "changes": 95, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/85ff6f624e23ae016b859f4829dd6f177b24c8b7/libjava%2Fjavax%2Fprint%2FDoc.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/85ff6f624e23ae016b859f4829dd6f177b24c8b7/libjava%2Fjavax%2Fprint%2FDoc.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fprint%2FDoc.java?ref=85ff6f624e23ae016b859f4829dd6f177b24c8b7", "patch": "@@ -0,0 +1,95 @@\n+/* Doc.java --\n+   Copyright (C) 2004 Free Software Foundation, Inc.\n+\n+This file is part of GNU Classpath.\n+\n+GNU Classpath is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2, or (at your option)\n+any later version.\n+\n+GNU Classpath is distributed in the hope that it will be useful, but\n+WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GNU Classpath; see the file COPYING.  If not, write to the\n+Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA\n+02111-1307 USA.\n+\n+Linking this library statically or dynamically with other modules is\n+making a combined work based on this library.  Thus, the terms and\n+conditions of the GNU General Public License cover the whole\n+combination.\n+\n+As a special exception, the copyright holders of this library give you\n+permission to link this library with independent modules to produce an\n+executable, regardless of the license terms of these independent\n+modules, and to copy and distribute the resulting executable under\n+terms of your choice, provided that you also meet, for each linked\n+independent module, the terms and conditions of the license of that\n+module.  An independent module is a module which is not derived from\n+or based on this library.  If you modify this library, you may extend\n+this exception to your version of the library, but you are not\n+obligated to do so.  If you do not wish to do so, delete this\n+exception statement from your version. */\n+\n+\n+package javax.print;\n+\n+import java.io.IOException;\n+import java.io.InputStream;\n+import java.io.Reader;\n+\n+import javax.print.attribute.DocAttributeSet;\n+\n+/**\n+ * @author Michael Koch (konqueror@gmx.de)\n+ */\n+public interface Doc\n+{\n+  /**\n+   * Returns a set of attributes applying to this document.\n+   * \n+   * @return the attributes\n+   */\n+  DocAttributeSet getAttributes();\n+\n+  /**\n+   * Returns the flavor in which this document will provide its print data.\n+   *  \n+   * @return the document flavor for printing\n+   */\n+  DocFlavor getDocFlavor();\n+\n+  /**\n+   * Returns the print data of this document represented in a format that supports\n+   * the document flavor.\n+   * \n+   * @return the print data\n+   * \n+   * @throws IOException if an error occurs\n+   */\n+  Object getPrintData() throws IOException;\n+\n+  /**\n+   * Returns a <code>Reader</code> object for extracting character print data\n+   * from this document.\n+   * \n+   * @return the <code>Reader</code> object\n+   * \n+   * @throws IOException if an error occurs\n+   */\n+  Reader getReaderForText() throws IOException;\n+\n+  /**\n+   * Returns an <code>InputStream</code> object for extracting byte print data\n+   * from this document.\n+   * \n+   * @return the <code>InputStream</code> object\n+   * \n+   * @throws IOException if an error occurs\n+   */\n+  InputStream getStreamForBytes() throws IOException;\n+}\n\\ No newline at end of file"}, {"sha": "96e9842c6c986e386093757706c0e67298e0de66", "filename": "libjava/javax/print/DocFlavor.java", "status": "added", "additions": 287, "deletions": 0, "changes": 287, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/85ff6f624e23ae016b859f4829dd6f177b24c8b7/libjava%2Fjavax%2Fprint%2FDocFlavor.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/85ff6f624e23ae016b859f4829dd6f177b24c8b7/libjava%2Fjavax%2Fprint%2FDocFlavor.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fprint%2FDocFlavor.java?ref=85ff6f624e23ae016b859f4829dd6f177b24c8b7", "patch": "@@ -0,0 +1,287 @@\n+/* DocFlavor.java --\n+   Copyright (C) 2004 Free Software Foundation, Inc.\n+\n+This file is part of GNU Classpath.\n+\n+GNU Classpath is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2, or (at your option)\n+any later version.\n+\n+GNU Classpath is distributed in the hope that it will be useful, but\n+WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GNU Classpath; see the file COPYING.  If not, write to the\n+Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA\n+02111-1307 USA.\n+\n+Linking this library statically or dynamically with other modules is\n+making a combined work based on this library.  Thus, the terms and\n+conditions of the GNU General Public License cover the whole\n+combination.\n+\n+As a special exception, the copyright holders of this library give you\n+permission to link this library with independent modules to produce an\n+executable, regardless of the license terms of these independent\n+modules, and to copy and distribute the resulting executable under\n+terms of your choice, provided that you also meet, for each linked\n+independent module, the terms and conditions of the license of that\n+module.  An independent module is a module which is not derived from\n+or based on this library.  If you modify this library, you may extend\n+this exception to your version of the library, but you are not\n+obligated to do so.  If you do not wish to do so, delete this\n+exception statement from your version. */\n+\n+\n+package javax.print;\n+\n+import java.io.Serializable;\n+import java.util.HashMap;\n+import java.util.Iterator;\n+import java.util.Map;\n+\n+/**\n+ * @author Michael Koch (konqueror@gmx.de)\n+ */\n+public class DocFlavor implements Cloneable, Serializable\n+{\n+  /**\n+   * @author Michael Koch (konqueror@gmx.de)\n+   */\n+  public static class BYTE_ARRAY\n+    extends DocFlavor\n+  {\n+    public static final BYTE_ARRAY AUTOSENSE = new BYTE_ARRAY(\"application/octet-stream\");\n+    public static final BYTE_ARRAY GIF = new BYTE_ARRAY(\"image/gif\");\n+    public static final BYTE_ARRAY JPEG = new BYTE_ARRAY(\"image/jpeg\");\n+    public static final BYTE_ARRAY PCL = new BYTE_ARRAY(\"application/vnd.hp-PCL\");\n+    public static final BYTE_ARRAY PDF = new BYTE_ARRAY(\"application/pdf\");\n+    public static final BYTE_ARRAY PNG = new BYTE_ARRAY(\"image/png\");\n+    public static final BYTE_ARRAY POSTSCRIPT = new BYTE_ARRAY(\"application/postscript\");\n+    public static final BYTE_ARRAY TEXT_HTML_HOST = new BYTE_ARRAY(\"text/html\");\n+    public static final BYTE_ARRAY TEXT_HTML_US_ASCII = new BYTE_ARRAY(\"text/html; charset=us-ascii\");\n+    public static final BYTE_ARRAY TEXT_HTML_UTF_16 = new BYTE_ARRAY(\"text/html; charset=utf-16\");\n+    public static final BYTE_ARRAY TEXT_HTML_UTF_16BE = new BYTE_ARRAY(\"text/html; charset=utf-16be\");\n+    public static final BYTE_ARRAY TEXT_HTML_UTF_16LE = new BYTE_ARRAY(\"text/html; charset=utf-16le\");\n+    public static final BYTE_ARRAY TEXT_HTML_UTF_8 = new BYTE_ARRAY(\"text/html; charset=utf-8\");\n+    public static final BYTE_ARRAY TEXT_PLAIN_HOST = new BYTE_ARRAY(\"text/plain\");\n+    public static final BYTE_ARRAY TEXT_PLAIN_US_ASCII = new BYTE_ARRAY(\"text/plain; charset=us-ascii\");\n+    public static final BYTE_ARRAY TEXT_PLAIN_UTF_16 = new BYTE_ARRAY(\"text/plain; charset=utf-16\");\n+    public static final BYTE_ARRAY TEXT_PLAIN_UTF_16BE = new BYTE_ARRAY(\"text/plain; charset=utf-16be\");\n+    public static final BYTE_ARRAY TEXT_PLAIN_UTF_16LE = new BYTE_ARRAY(\"text/plain; charset=utf-16le\");\n+    public static final BYTE_ARRAY TEXT_PLAIN_UTF_8 = new BYTE_ARRAY(\"text/plain; charset=utf-8\");\n+    \n+    public BYTE_ARRAY(String mimeType)\n+    {\n+      super(mimeType, \"[B\");\n+    }\n+  }\n+  \n+  /**\n+   * @author Michael Koch (konqueror@gmx.de)\n+   */\n+  public static class CHAR_ARRAY\n+    extends DocFlavor\n+  {\n+    private static final long serialVersionUID = -8720590903724405128L;\n+    \n+    public CHAR_ARRAY(String mimeType)\n+    {\n+      super(mimeType, \"[C\");\n+    }\n+  }\n+  \n+  /**\n+   * @author Michael Koch (konqueror@gmx.de)\n+   */\n+  public static class INPUT_STREAM\n+    extends DocFlavor\n+  {\n+    public static final INPUT_STREAM AUTOSENSE = new INPUT_STREAM(\"application/octet-stream\");\n+    public static final INPUT_STREAM GIF = new INPUT_STREAM(\"image/gif\");\n+    public static final INPUT_STREAM JPEG = new INPUT_STREAM(\"image/jpeg\");\n+    public static final INPUT_STREAM PCL = new INPUT_STREAM(\"application/vnd.hp-PCL\");\n+    public static final INPUT_STREAM PDF = new INPUT_STREAM(\"application/pdf\");\n+    public static final INPUT_STREAM PNG = new INPUT_STREAM(\"image/png\");\n+    public static final INPUT_STREAM POSTSCRIPT = new INPUT_STREAM(\"application/postscript\");\n+    public static final INPUT_STREAM TEXT_HTML_HOST = new INPUT_STREAM(\"text/html\");\n+    public static final INPUT_STREAM TEXT_HTML_US_ASCII = new INPUT_STREAM(\"text/html; charset=us-ascii\");\n+    public static final INPUT_STREAM TEXT_HTML_UTF_16 = new INPUT_STREAM(\"text/html; charset=utf-16\");\n+    public static final INPUT_STREAM TEXT_HTML_UTF_16BE = new INPUT_STREAM(\"text/html; charset=utf-16be\");\n+    public static final INPUT_STREAM TEXT_HTML_UTF_16LE = new INPUT_STREAM(\"text/html; charset=utf-16le\");\n+    public static final INPUT_STREAM TEXT_HTML_UTF_8 = new INPUT_STREAM(\"text/html; charset=utf-8\");\n+    public static final INPUT_STREAM TEXT_PLAIN_HOST = new INPUT_STREAM(\"text/plain\");\n+    public static final INPUT_STREAM TEXT_PLAIN_US_ASCII = new INPUT_STREAM(\"text/plain; charset=us-ascii\");\n+    public static final INPUT_STREAM TEXT_PLAIN_UTF_16 = new INPUT_STREAM(\"text/plain; charset=utf-16\");\n+    public static final INPUT_STREAM TEXT_PLAIN_UTF_16BE = new INPUT_STREAM(\"text/plain; charset=utf-16be\");\n+    public static final INPUT_STREAM TEXT_PLAIN_UTF_16LE = new INPUT_STREAM(\"text/plain; charset=utf-16le\");\n+    public static final INPUT_STREAM TEXT_PLAIN_UTF_8 = new INPUT_STREAM(\"text/plain; charset=utf-8\");\n+    \n+    public INPUT_STREAM(String mimeType)\n+    {\n+      super(mimeType, \"java.io.InputStream\");\n+    }\n+  }\n+  \n+  /**\n+   * @author Michael Koch (konqueror@gmx.de)\n+   */\n+  public static class READER\n+    extends DocFlavor\n+  {\n+    private static final long serialVersionUID = 7100295812579351567L;\n+    \n+    public READER(String mimeType)\n+    {\n+      super(mimeType, \"java.io.Reader\");\n+    }\n+  }\n+  \n+  /**\n+   * @author Michael Koch (konqueror@gmx.de)\n+   */\n+  public static class SERVICE_FORMATTED\n+    extends DocFlavor\n+  {\n+    private static final long serialVersionUID = 6181337766266637256L;\n+    \n+    public SERVICE_FORMATTED(String className)\n+    {\n+      super(\"application/x-java-jvm-local-objectref\", className);\n+    }\n+  }\n+  \n+  /**\n+   * @author Michael Koch (konqueror@gmx.de)\n+   */\n+  public static class STRING\n+    extends DocFlavor\n+  {\n+    private static final long serialVersionUID = 4414407504887034035L;\n+    \n+    public STRING(String mimeType)\n+    {\n+      super(mimeType, \"java.lang.String\");\n+    }\n+  }\n+  \n+  /**\n+   * @author Michael Koch (konqueror@gmx.de)\n+   */\n+  public static class URL\n+    extends DocFlavor\n+  {\n+    private static final long serialVersionUID = 2936725788144902062L;\n+    \n+    public URL(String mimeType)\n+    {\n+      super(mimeType, \"java.net.URL\");\n+    }\n+  }\n+  \n+  private static final long serialVersionUID = -4512080796965449721L;\n+  \n+  public static final String hostEncoding = \"US-ASCII\";\n+\n+  private String mediaSubtype;\n+  private String mediaType;\n+  private String className;\n+  private HashMap params = new HashMap();\n+  \n+  public DocFlavor(String mimeType, String className)\n+  {\n+    if (mimeType == null || className == null)\n+      throw new NullPointerException();\n+\n+    parseMimeType(mimeType);\n+    this.className = className;\n+  }\n+\n+  private void parseMimeType(String mimeType)\n+  {\n+    // FIXME: This method is know to be not completely correct, but it works for now.\n+    \n+    int pos = mimeType.indexOf(';');\n+\n+    if (pos != -1)\n+      {\n+\tString tmp = mimeType.substring(pos + 2);\n+\tmimeType = mimeType.substring(0, pos);\n+\tpos = tmp.indexOf('=');\n+\tparams.put(tmp.substring(0, pos), tmp.substring(pos + 1));\n+      }\n+\n+    pos = mimeType.indexOf('/');\n+\n+    if (pos == -1)\n+      throw new IllegalArgumentException();\n+\n+    mediaType = mimeType.substring(0, pos);\n+    mediaSubtype = mimeType.substring(pos + 1);\n+  }\n+  \n+  public boolean equals(Object obj)\n+  {\n+    if (! (obj instanceof DocFlavor))\n+      return false;\n+\n+    DocFlavor tmp = (DocFlavor) obj;\n+\n+    return (getMimeType().equals(tmp.getMimeType())\n+\t    && getRepresentationClassName().equals(tmp.getRepresentationClassName()));\n+  }\n+\n+  public String getMediaSubtype()\n+  {\n+    return mediaSubtype;\n+  }\n+\n+  public String getMediaType()\n+  {\n+    return mediaType;\n+  }\n+\n+  public String getMimeType()\n+  {\n+    // FIXME: Check if this algorithm is correct.\n+    \n+    String mimeType = getMediaType() + \"/\" + getMediaSubtype();\n+    Iterator it = params.entrySet().iterator();\n+\n+    while (it.hasNext())\n+      {\n+\tMap.Entry entry = (Map.Entry) it.next();\n+\tmimeType += \"; \" + entry.getKey() + \"=\\\"\" + entry.getValue() + \"\\\"\";\n+      }\n+\n+    return mimeType;\n+  }\n+\n+  public String getParameter(String paramName)\n+  {\n+    if (paramName == null)\n+      throw new NullPointerException();\n+    \n+    return (String) params.get(paramName); \n+  }\n+\n+  public String getRepresentationClassName()\n+  {\n+    return className;\n+  }\n+\n+  public int hashCode()\n+  {\n+    return ((mediaType.hashCode()\n+\t     * mediaSubtype.hashCode()\n+\t     * className.hashCode()) ^ params.hashCode());\n+  }\n+\n+  public String toString()\n+  {\n+    return getMimeType();\n+  }\n+}"}, {"sha": "db4ba84476da403160c3cfbede7919a0139da22b", "filename": "libjava/javax/print/DocPrintJob.java", "status": "added", "additions": 104, "deletions": 0, "changes": 104, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/85ff6f624e23ae016b859f4829dd6f177b24c8b7/libjava%2Fjavax%2Fprint%2FDocPrintJob.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/85ff6f624e23ae016b859f4829dd6f177b24c8b7/libjava%2Fjavax%2Fprint%2FDocPrintJob.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fprint%2FDocPrintJob.java?ref=85ff6f624e23ae016b859f4829dd6f177b24c8b7", "patch": "@@ -0,0 +1,104 @@\n+/* DocPrintJob.java --\n+   Copyright (C) 2004 Free Software Foundation, Inc.\n+\n+This file is part of GNU Classpath.\n+\n+GNU Classpath is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2, or (at your option)\n+any later version.\n+\n+GNU Classpath is distributed in the hope that it will be useful, but\n+WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GNU Classpath; see the file COPYING.  If not, write to the\n+Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA\n+02111-1307 USA.\n+\n+Linking this library statically or dynamically with other modules is\n+making a combined work based on this library.  Thus, the terms and\n+conditions of the GNU General Public License cover the whole\n+combination.\n+\n+As a special exception, the copyright holders of this library give you\n+permission to link this library with independent modules to produce an\n+executable, regardless of the license terms of these independent\n+modules, and to copy and distribute the resulting executable under\n+terms of your choice, provided that you also meet, for each linked\n+independent module, the terms and conditions of the license of that\n+module.  An independent module is a module which is not derived from\n+or based on this library.  If you modify this library, you may extend\n+this exception to your version of the library, but you are not\n+obligated to do so.  If you do not wish to do so, delete this\n+exception statement from your version. */\n+\n+\n+package javax.print;\n+\n+import javax.print.attribute.PrintJobAttributeSet;\n+import javax.print.attribute.PrintRequestAttributeSet;\n+import javax.print.event.PrintJobAttributeListener;\n+import javax.print.event.PrintJobListener;\n+\n+/**\n+ * @author Michael Koch (konqueror@gmx.de)\n+ */\n+public interface DocPrintJob\n+{\n+  /**\n+   * Registers a listener for changes in the specified attributes.\n+   * \n+   * @param listener the listener to add\n+   * @param attributes the attributes to observe\n+   */\n+  void addPrintJobAttributeListener(PrintJobAttributeListener listener,\n+\t\t\t\t    PrintJobAttributeSet attributes);\n+\n+  /**\n+   * Registers a listener for events occuring during this print job.\n+   * \n+   * @param listener the listener to add\n+   */\n+  void addPrintJobListener(PrintJobListener listener);\n+\n+  /**\n+   * Returns the print job's attributes.\n+   * \n+   * @return the attributes of this print job\n+   */\n+  PrintJobAttributeSet getAttributes();\n+\n+  /**\n+   * Returns the <code>PrintService</code> object this print job is bound to.\n+   * \n+   * @return the print service\n+   */\n+  PrintService getPrintService();\n+\n+  /**\n+   * Prints a document with the specified print job attributes.\n+   * \n+   * @param doc the document to print\n+   * @param attributes the attributes to use\n+   * \n+   * @throws PrintException if an error occurs\n+   */\n+  void print(Doc doc, PrintRequestAttributeSet attributes) throws PrintException;\n+\n+  /**\n+   * De-registers an attribute listener.\n+   * \n+   * @param listener the listener to remove\n+   */\n+  void removePrintJobAttributeListener(PrintJobAttributeListener listener);\n+\n+  /**\n+   * De-registers a print job listener.\n+   * \n+   * @param listener the listener to remove\n+   */\n+  void removePrintJobListener(PrintJobListener listener);\n+}\n\\ No newline at end of file"}, {"sha": "b60f1c4ecb7d4bfe84f3acf40a4e701aed057466", "filename": "libjava/javax/print/FlavorException.java", "status": "added", "additions": 52, "deletions": 0, "changes": 52, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/85ff6f624e23ae016b859f4829dd6f177b24c8b7/libjava%2Fjavax%2Fprint%2FFlavorException.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/85ff6f624e23ae016b859f4829dd6f177b24c8b7/libjava%2Fjavax%2Fprint%2FFlavorException.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fprint%2FFlavorException.java?ref=85ff6f624e23ae016b859f4829dd6f177b24c8b7", "patch": "@@ -0,0 +1,52 @@\n+/* FlavorException.java --\n+   Copyright (C) 2004 Free Software Foundation, Inc.\n+\n+This file is part of GNU Classpath.\n+\n+GNU Classpath is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2, or (at your option)\n+any later version.\n+\n+GNU Classpath is distributed in the hope that it will be useful, but\n+WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GNU Classpath; see the file COPYING.  If not, write to the\n+Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA\n+02111-1307 USA.\n+\n+Linking this library statically or dynamically with other modules is\n+making a combined work based on this library.  Thus, the terms and\n+conditions of the GNU General Public License cover the whole\n+combination.\n+\n+As a special exception, the copyright holders of this library give you\n+permission to link this library with independent modules to produce an\n+executable, regardless of the license terms of these independent\n+modules, and to copy and distribute the resulting executable under\n+terms of your choice, provided that you also meet, for each linked\n+independent module, the terms and conditions of the license of that\n+module.  An independent module is a module which is not derived from\n+or based on this library.  If you modify this library, you may extend\n+this exception to your version of the library, but you are not\n+obligated to do so.  If you do not wish to do so, delete this\n+exception statement from your version. */\n+\n+\n+package javax.print;\n+\n+/**\n+ * @author Michael Koch (konqueror@gmx.de)\n+ */\n+public interface FlavorException\n+{\n+  /**\n+   * Returns the unsupported document flavors.\n+   * \n+   * @return the unsupported document flavors\n+   */\n+  DocFlavor[] getUnsupportedFlavors();\n+}\n\\ No newline at end of file"}, {"sha": "401a7066a8ebc7ed7c52fde11f65c17270400010", "filename": "libjava/javax/print/MultiDoc.java", "status": "added", "additions": 66, "deletions": 0, "changes": 66, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/85ff6f624e23ae016b859f4829dd6f177b24c8b7/libjava%2Fjavax%2Fprint%2FMultiDoc.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/85ff6f624e23ae016b859f4829dd6f177b24c8b7/libjava%2Fjavax%2Fprint%2FMultiDoc.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fprint%2FMultiDoc.java?ref=85ff6f624e23ae016b859f4829dd6f177b24c8b7", "patch": "@@ -0,0 +1,66 @@\n+/* MultiDoc.java --\n+   Copyright (C) 2004 Free Software Foundation, Inc.\n+\n+This file is part of GNU Classpath.\n+\n+GNU Classpath is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2, or (at your option)\n+any later version.\n+\n+GNU Classpath is distributed in the hope that it will be useful, but\n+WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GNU Classpath; see the file COPYING.  If not, write to the\n+Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA\n+02111-1307 USA.\n+\n+Linking this library statically or dynamically with other modules is\n+making a combined work based on this library.  Thus, the terms and\n+conditions of the GNU General Public License cover the whole\n+combination.\n+\n+As a special exception, the copyright holders of this library give you\n+permission to link this library with independent modules to produce an\n+executable, regardless of the license terms of these independent\n+modules, and to copy and distribute the resulting executable under\n+terms of your choice, provided that you also meet, for each linked\n+independent module, the terms and conditions of the license of that\n+module.  An independent module is a module which is not derived from\n+or based on this library.  If you modify this library, you may extend\n+this exception to your version of the library, but you are not\n+obligated to do so.  If you do not wish to do so, delete this\n+exception statement from your version. */\n+\n+\n+package javax.print;\n+\n+import java.io.IOException;\n+\n+\n+/**\n+ * @author Michael Koch (konqueror@gmx.de)\n+ */\n+public interface MultiDoc\n+{\n+  /**\n+   * Returns the current document.\n+   * \n+   * @return the current document\n+   * \n+   * @throws IOException if an error occurs\n+   */\n+  Doc getDoc() throws IOException;\n+\n+  /**\n+   * Returns the next <code>MultiDoc</code> object.\n+   * \n+   * @return the next <code>MultiDoc</code> object\n+   * \n+   * @throws IOException if an error occurs\n+   */\n+  MultiDoc next() throws IOException;\n+}\n\\ No newline at end of file"}, {"sha": "e961d189cca689e07e5d05fdb6d32463d1f77b54", "filename": "libjava/javax/print/MultiDocPrintJob.java", "status": "added", "additions": 60, "deletions": 0, "changes": 60, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/85ff6f624e23ae016b859f4829dd6f177b24c8b7/libjava%2Fjavax%2Fprint%2FMultiDocPrintJob.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/85ff6f624e23ae016b859f4829dd6f177b24c8b7/libjava%2Fjavax%2Fprint%2FMultiDocPrintJob.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fprint%2FMultiDocPrintJob.java?ref=85ff6f624e23ae016b859f4829dd6f177b24c8b7", "patch": "@@ -0,0 +1,60 @@\n+/* MultiDocPrintJob.java --\n+   Copyright (C) 2004 Free Software Foundation, Inc.\n+\n+This file is part of GNU Classpath.\n+\n+GNU Classpath is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2, or (at your option)\n+any later version.\n+\n+GNU Classpath is distributed in the hope that it will be useful, but\n+WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GNU Classpath; see the file COPYING.  If not, write to the\n+Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA\n+02111-1307 USA.\n+\n+Linking this library statically or dynamically with other modules is\n+making a combined work based on this library.  Thus, the terms and\n+conditions of the GNU General Public License cover the whole\n+combination.\n+\n+As a special exception, the copyright holders of this library give you\n+permission to link this library with independent modules to produce an\n+executable, regardless of the license terms of these independent\n+modules, and to copy and distribute the resulting executable under\n+terms of your choice, provided that you also meet, for each linked\n+independent module, the terms and conditions of the license of that\n+module.  An independent module is a module which is not derived from\n+or based on this library.  If you modify this library, you may extend\n+this exception to your version of the library, but you are not\n+obligated to do so.  If you do not wish to do so, delete this\n+exception statement from your version. */\n+\n+\n+package javax.print;\n+\n+import javax.print.attribute.PrintRequestAttributeSet;\n+\n+\n+/**\n+ * @author Michael Koch (konqueror@gmx.de)\n+ */\n+public interface MultiDocPrintJob extends DocPrintJob\n+{\n+  /**\n+   * Request a print of a <code>MultiDoc</code> object.\n+   * \n+   * @param multiDoc the document to print\n+   * @param attributes the printing attributes to apply\n+   * \n+   * @throws PrintExeption if an error occurs\n+   */\n+  void print(MultiDoc multiDoc, PrintRequestAttributeSet attributes)\n+    throws PrintException;\n+}\n+ \n\\ No newline at end of file"}, {"sha": "bf68cc7028a8ee254796d4c05d9294b2f6900fc4", "filename": "libjava/javax/print/MultiDocPrintService.java", "status": "added", "additions": 53, "deletions": 0, "changes": 53, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/85ff6f624e23ae016b859f4829dd6f177b24c8b7/libjava%2Fjavax%2Fprint%2FMultiDocPrintService.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/85ff6f624e23ae016b859f4829dd6f177b24c8b7/libjava%2Fjavax%2Fprint%2FMultiDocPrintService.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fprint%2FMultiDocPrintService.java?ref=85ff6f624e23ae016b859f4829dd6f177b24c8b7", "patch": "@@ -0,0 +1,53 @@\n+/* MultiDocPrintService.java --\n+   Copyright (C) 2004 Free Software Foundation, Inc.\n+\n+This file is part of GNU Classpath.\n+\n+GNU Classpath is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2, or (at your option)\n+any later version.\n+\n+GNU Classpath is distributed in the hope that it will be useful, but\n+WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GNU Classpath; see the file COPYING.  If not, write to the\n+Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA\n+02111-1307 USA.\n+\n+Linking this library statically or dynamically with other modules is\n+making a combined work based on this library.  Thus, the terms and\n+conditions of the GNU General Public License cover the whole\n+combination.\n+\n+As a special exception, the copyright holders of this library give you\n+permission to link this library with independent modules to produce an\n+executable, regardless of the license terms of these independent\n+modules, and to copy and distribute the resulting executable under\n+terms of your choice, provided that you also meet, for each linked\n+independent module, the terms and conditions of the license of that\n+module.  An independent module is a module which is not derived from\n+or based on this library.  If you modify this library, you may extend\n+this exception to your version of the library, but you are not\n+obligated to do so.  If you do not wish to do so, delete this\n+exception statement from your version. */\n+\n+\n+package javax.print;\n+\n+\n+/**\n+ * @author Michael Koch (konqueror@gmx.de)\n+ */\n+public interface MultiDocPrintService extends PrintService\n+{\n+  /**\n+   * Create a job that can print a <code>MultiDoc</code> object.\n+   * \n+   * @return the new print job\n+   */\n+  MultiDocPrintJob createMultiDocPrintJob();\n+}\n\\ No newline at end of file"}, {"sha": "e4626379de0c10e3f264fba198d4788f213ffae6", "filename": "libjava/javax/print/PrintException.java", "status": "added", "additions": 84, "deletions": 0, "changes": 84, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/85ff6f624e23ae016b859f4829dd6f177b24c8b7/libjava%2Fjavax%2Fprint%2FPrintException.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/85ff6f624e23ae016b859f4829dd6f177b24c8b7/libjava%2Fjavax%2Fprint%2FPrintException.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fprint%2FPrintException.java?ref=85ff6f624e23ae016b859f4829dd6f177b24c8b7", "patch": "@@ -0,0 +1,84 @@\n+/* PrintException.java --\n+   Copyright (C) 2004 Free Software Foundation, Inc.\n+\n+This file is part of GNU Classpath.\n+\n+GNU Classpath is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2, or (at your option)\n+any later version.\n+\n+GNU Classpath is distributed in the hope that it will be useful, but\n+WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GNU Classpath; see the file COPYING.  If not, write to the\n+Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA\n+02111-1307 USA.\n+\n+Linking this library statically or dynamically with other modules is\n+making a combined work based on this library.  Thus, the terms and\n+conditions of the GNU General Public License cover the whole\n+combination.\n+\n+As a special exception, the copyright holders of this library give you\n+permission to link this library with independent modules to produce an\n+executable, regardless of the license terms of these independent\n+modules, and to copy and distribute the resulting executable under\n+terms of your choice, provided that you also meet, for each linked\n+independent module, the terms and conditions of the license of that\n+module.  An independent module is a module which is not derived from\n+or based on this library.  If you modify this library, you may extend\n+this exception to your version of the library, but you are not\n+obligated to do so.  If you do not wish to do so, delete this\n+exception statement from your version. */\n+\n+\n+package javax.print;\n+\n+/**\n+ * @author Michael Koch (konqueror@gmx.de)\n+ */\n+public class PrintException extends Exception\n+{\n+  /**\n+   * Construct a print exception.\n+   */\n+  public PrintException()\n+  {\n+    super();\n+  }\n+\n+  /**\n+   * Construct a print exception.\n+   * \n+   * @param e chained exception\n+   */\n+  public PrintException(Exception e)\n+  {\n+    super(e);\n+  }\n+\n+  /**\n+   * Construct a print exception.\n+   * \n+   * @param s detailed message, or null for no message\n+   */\n+  public PrintException(String s)\n+  {\n+    super(s);\n+  }\n+\n+  /**\n+   * Construct a print exception.\n+   * \n+   * @param s detailed message, or null for no message\n+   * @param e chained exception\n+   */\n+  public PrintException(String s, Exception e)\n+  {\n+    super(s, e);\n+  }\n+}\n\\ No newline at end of file"}, {"sha": "de113681b5ee5532ab6facfdd19c870e46b928b3", "filename": "libjava/javax/print/PrintService.java", "status": "added", "additions": 226, "deletions": 0, "changes": 226, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/85ff6f624e23ae016b859f4829dd6f177b24c8b7/libjava%2Fjavax%2Fprint%2FPrintService.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/85ff6f624e23ae016b859f4829dd6f177b24c8b7/libjava%2Fjavax%2Fprint%2FPrintService.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fprint%2FPrintService.java?ref=85ff6f624e23ae016b859f4829dd6f177b24c8b7", "patch": "@@ -0,0 +1,226 @@\n+/* PrintService.java --\n+   Copyright (C) 2004 Free Software Foundation, Inc.\n+\n+This file is part of GNU Classpath.\n+\n+GNU Classpath is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2, or (at your option)\n+any later version.\n+\n+GNU Classpath is distributed in the hope that it will be useful, but\n+WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GNU Classpath; see the file COPYING.  If not, write to the\n+Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA\n+02111-1307 USA.\n+\n+Linking this library statically or dynamically with other modules is\n+making a combined work based on this library.  Thus, the terms and\n+conditions of the GNU General Public License cover the whole\n+combination.\n+\n+As a special exception, the copyright holders of this library give you\n+permission to link this library with independent modules to produce an\n+executable, regardless of the license terms of these independent\n+modules, and to copy and distribute the resulting executable under\n+terms of your choice, provided that you also meet, for each linked\n+independent module, the terms and conditions of the license of that\n+module.  An independent module is a module which is not derived from\n+or based on this library.  If you modify this library, you may extend\n+this exception to your version of the library, but you are not\n+obligated to do so.  If you do not wish to do so, delete this\n+exception statement from your version. */\n+\n+\n+package javax.print;\n+\n+import javax.print.attribute.Attribute;\n+import javax.print.attribute.AttributeSet;\n+import javax.print.attribute.PrintServiceAttribute;\n+import javax.print.attribute.PrintServiceAttributeSet;\n+import javax.print.event.PrintServiceAttributeListener;\n+\n+/**\n+ * @author Michael Koch (konqueror@gmx.de)\n+ */\n+public interface PrintService\n+{\n+  /**\n+   * Returns a new print job capable to handle all supported document flavors.\n+   * \n+   * @return the new print job\n+   */\n+  DocPrintJob createPrintJob();\n+  \n+  /**\n+   * Determines if two services refer to the same underlying service.\n+   * \n+   * @param obj the service to check against\n+   * \n+   * @return <code>true</code> if both services refer to the sam underlying\n+   * service, <code>false</code> otherwise\n+   */\n+  boolean equals(Object obj);\n+  \n+  /**\n+   * Returns the value of a single specified attribute.\n+   * \n+   * @param category the category of a <code>PrintServiceAttribute</code>\n+   * \n+   * @return the value of the attribute\n+   * \n+   * @throws NullPointerException if category is null\n+   * @throws IllegalArgumentException if category is not a class that\n+   * implements <code>PrintServiceAttribute</code>\n+   */\n+  PrintServiceAttribute getAttribute(Class category);\n+  \n+  /**\n+   * Returns all attributes of this printer service\n+   * \n+   * @return all attributes of this print service\n+   */\n+  PrintServiceAttributeSet getAttributes();\n+\n+  /**\n+   * Returns the service's default value for a given attribute.\n+   * \n+   * @param category the category of the attribute\n+   * \n+   * @return the default value\n+   * \n+   * @throws NullPointerException if <code>category</code> is null\n+   * @throws IllegalArgumentException if <code>category</code> is a class\n+   * not implementing <code>Attribute</code> \n+   */\n+  Object getDefaultAttributeValue(Class category);\n+  \n+  /**\n+   * Returns the name of this print service.\n+   * \n+   * @return the name\n+   */\n+  String getName();\n+  \n+  /**\n+   * Returns a factory for UI components.\n+   * \n+   * @return the factory\n+   */\n+  ServiceUIFactory getServiceUIFactory();\n+  \n+  /**\n+   * Returns all supported attribute categories.\n+   * \n+   * @return an array of all supported attribute categories\n+   */\n+  Class[] getSupportedAttributeCategories();\n+  \n+  /**\n+   * Returns all supported attribute values a client can use when setting up\n+   * a print job with this service.\n+   * \n+   * @param category the attribute category to test\n+   * @param flavor the document flavor to use, or null\n+   * @param attributes set of printing attributes for a supposed job, or null\n+   * \n+   * @return object indicating supported values for <code>category</code>,\n+   * or null if this print service doesnt support specifying doc-level or\n+   * job-level attribute in a print request.\n+   * \n+   * @throws NullPointerException if <code>category</code> is null\n+   * @throws IllegalArgumentException if <code>category</code> is a class not\n+   * implementing <code>Attribute</code>, or if <code>flavor</code> is not\n+   * supported\n+   */\n+  Object getSupportedAttributeValues(Class category, DocFlavor flavor, AttributeSet attributes);\n+  \n+  /**\n+   * Returns an array of all supproted document flavors.\n+   * \n+   * @return the supported document flavors\n+   */\n+  DocFlavor[] getSupportedDocFlavors();\n+  \n+  /**\n+   * Returns all attributes that are unsupported for a print request in the\n+   * context of a particular document flavor.\n+   * \n+   * @param flavor document flavor to test, or null\n+   * @param attributes set of printing attributes for a supposed job\n+   * \n+   * @return null if this <code>PrintService</code> supports the print request\n+   * specification, else the unsupported attributes\n+   * \n+   * @throws IllegalArgumentException if <code>flavor</code> is unsupported\n+   */\n+  AttributeSet getUnsupportedAttributes(DocFlavor flavor, AttributeSet attributes);\n+  \n+  /**\n+   * Returns a hashcode for this printer service.\n+   * \n+   * @return the hashcode\n+   */\n+  int hashCode();\n+  \n+  /**\n+   * Determines a given attribute category is supported or not.\n+   * \n+   * @param category the category to check\n+   * \n+   * @return <code>true</code> if <code>category</code> is supported,\n+   * <code>false</code> otherwise\n+   * \n+   * @throws NullPointerException if <code>category</code> is null\n+   * @throws IllegalArgumentException if <code>category</code> is a class not\n+   * implementing <code>Attribute</code>.\n+   */\n+  boolean isAttributeCategorySupported(Class category);\n+  \n+  /**\n+   * Determines a given attribute value is supported when creating a print job\n+   * for this print service.\n+   * \n+   * @param attrval the attribute value to check\n+   * @param flavor the document flavor to use, or null\n+   * @param attributes set of printing attributes to use, or null\n+   * \n+   * @return <code>true</code> if the attribute value is supported,\n+   * <code>false</code> otherwise\n+   * \n+   * @throws NullPointerException if <code>attrval</code> is null\n+   * @throws IllegalArgumentException if <code>flavor</code> is not supported\n+   * by this print service\n+   */\n+  boolean isAttributeValueSupported(Attribute attrval, DocFlavor flavor, AttributeSet attributes);\n+  \n+  /**\n+   * Determines a given document flavor is supported or not.\n+   * \n+   * @param flavor the document flavor to check\n+   * \n+   * @return <code>true</code> if <code>flavor</code> is supported,\n+   * <code>false</code> otherwise\n+   * \n+   * @throws NullPointerException if <code>flavor</code> is null\n+   */\n+  boolean isDocFlavorSupported(DocFlavor flavor);\n+  \n+  /**\n+   * Registers a print service attribute listener to this print service.\n+   * \n+   * @param listener the listener to add\n+   */\n+  void addPrintServiceAttributeListener(PrintServiceAttributeListener listener);\n+  \n+  /**\n+   * De-registers a print service attribute listener from this print service.\n+   * \n+   * @param listener the listener to remove\n+   */\n+  void removePrintServiceAttributeListener(PrintServiceAttributeListener listener);\n+}"}, {"sha": "aa46bec616c74a6225ef7b660d3a7fd223954134", "filename": "libjava/javax/print/PrintServiceLookup.java", "status": "added", "additions": 76, "deletions": 0, "changes": 76, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/85ff6f624e23ae016b859f4829dd6f177b24c8b7/libjava%2Fjavax%2Fprint%2FPrintServiceLookup.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/85ff6f624e23ae016b859f4829dd6f177b24c8b7/libjava%2Fjavax%2Fprint%2FPrintServiceLookup.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fprint%2FPrintServiceLookup.java?ref=85ff6f624e23ae016b859f4829dd6f177b24c8b7", "patch": "@@ -0,0 +1,76 @@\n+/* PrintServiceLookup.java --\n+   Copyright (C) 2004 Free Software Foundation, Inc.\n+\n+This file is part of GNU Classpath.\n+\n+GNU Classpath is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2, or (at your option)\n+any later version.\n+\n+GNU Classpath is distributed in the hope that it will be useful, but\n+WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GNU Classpath; see the file COPYING.  If not, write to the\n+Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA\n+02111-1307 USA.\n+\n+Linking this library statically or dynamically with other modules is\n+making a combined work based on this library.  Thus, the terms and\n+conditions of the GNU General Public License cover the whole\n+combination.\n+\n+As a special exception, the copyright holders of this library give you\n+permission to link this library with independent modules to produce an\n+executable, regardless of the license terms of these independent\n+modules, and to copy and distribute the resulting executable under\n+terms of your choice, provided that you also meet, for each linked\n+independent module, the terms and conditions of the license of that\n+module.  An independent module is a module which is not derived from\n+or based on this library.  If you modify this library, you may extend\n+this exception to your version of the library, but you are not\n+obligated to do so.  If you do not wish to do so, delete this\n+exception statement from your version. */\n+\n+\n+package javax.print;\n+\n+import javax.print.attribute.AttributeSet;\n+\n+\n+/**\n+ * @author Michael Koch (konqueror@gmx.de)\n+ */\n+public abstract class PrintServiceLookup\n+{\n+  /**\n+   * Constructs a <code>PrintServiceLookup</code> object.\n+   */\n+  public PrintServiceLookup()\n+  {\n+  \t// Do nothing here\n+  }\n+  \n+  /**\n+   * Not called direclty by applications.\n+   */\n+  public abstract PrintService getDefaultPrintService();\n+\n+  /**\n+   * Not called direclty by applications.\n+   */\n+  public abstract MultiDocPrintService[] getMultiDocPrintServices(DocFlavor[] flavors, AttributeSet attributes);\n+\n+  /**\n+   * Not called direclty by applications.\n+   */\n+  public abstract PrintService[] getPrintServices();\n+\n+  /**\n+   * Not called direclty by applications.\n+   */\n+  public abstract PrintService[] getPrintServices(DocFlavor flavor, AttributeSet attributes);\n+}"}, {"sha": "7c9ead8b6a46518e3de5748ece9d263fbe02f2a6", "filename": "libjava/javax/print/ServiceUIFactory.java", "status": "added", "additions": 89, "deletions": 0, "changes": 89, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/85ff6f624e23ae016b859f4829dd6f177b24c8b7/libjava%2Fjavax%2Fprint%2FServiceUIFactory.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/85ff6f624e23ae016b859f4829dd6f177b24c8b7/libjava%2Fjavax%2Fprint%2FServiceUIFactory.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fprint%2FServiceUIFactory.java?ref=85ff6f624e23ae016b859f4829dd6f177b24c8b7", "patch": "@@ -0,0 +1,89 @@\n+/* ServiceUIFactory.java --\n+   Copyright (C) 2004 Free Software Foundation, Inc.\n+\n+This file is part of GNU Classpath.\n+\n+GNU Classpath is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2, or (at your option)\n+any later version.\n+\n+GNU Classpath is distributed in the hope that it will be useful, but\n+WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GNU Classpath; see the file COPYING.  If not, write to the\n+Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA\n+02111-1307 USA.\n+\n+Linking this library statically or dynamically with other modules is\n+making a combined work based on this library.  Thus, the terms and\n+conditions of the GNU General Public License cover the whole\n+combination.\n+\n+As a special exception, the copyright holders of this library give you\n+permission to link this library with independent modules to produce an\n+executable, regardless of the license terms of these independent\n+modules, and to copy and distribute the resulting executable under\n+terms of your choice, provided that you also meet, for each linked\n+independent module, the terms and conditions of the license of that\n+module.  An independent module is a module which is not derived from\n+or based on this library.  If you modify this library, you may extend\n+this exception to your version of the library, but you are not\n+obligated to do so.  If you do not wish to do so, delete this\n+exception statement from your version. */\n+\n+\n+package javax.print;\n+\n+/**\n+ * @author Michael Koch\n+ */\n+public abstract class ServiceUIFactory\n+{\n+  public static final int ABOUT_UIROLE = 1;\n+  public static final int ADMIN_UIROLE = 2;\n+  public static final int MAIN_UIROLE = 3;\n+  public static final int RESERVED_UIROLE = 99;\n+\n+  public static final String DIALOG_UI = \"java.awt.Dialog\";\n+  public static final String JCOMPONENT_UI = \"javax.swing.JComponent\";\n+  public static final String JDIALOG_UI = \"javax.swing.JDialog\";\n+  public static final String PANEL_UI = \"java.awt.Panel\";\n+\n+  /**\n+   * Constructs a <code>ServiceUIFactory</code> object.\n+   */\n+  public ServiceUIFactory()\n+  {\n+  \t// Do nothing here.\n+  }\n+\n+  /**\n+   * Returns an UI object which may be cast to the requested UI type.\n+   * \n+   * @param role the role requested. Must be one of the standard roles\n+   * or a private role supported by this factory\n+   * @param ui type in which the role is requested\n+   * \n+   * @return the UI role or null of this role is not supported by this factory\n+   * \n+   * @throws IllegalArgumentException if <code>role</code> is neither one of\n+   * the standard ones nor a private one supported by this factory\n+   */\n+  public abstract Object getUI(int role, String ui);\n+\n+  /**\n+   * Returns the UI types supported by this factory for an UI role.\n+   * \n+   * @param role the role to be looked up\n+   * \n+   * @return an array of UI types\n+   * \n+   * @throws IllegalArgumentException if <code>role</code> is neither one of\n+   * the standard ones nor a private one supported by this factory\n+   */\n+  public abstract String[] getUIClassNamesForRole(int role);\n+}\n\\ No newline at end of file"}, {"sha": "83f936afc327e69c29e6e0761b899a49227b55c4", "filename": "libjava/javax/print/StreamPrintService.java", "status": "added", "additions": 97, "deletions": 0, "changes": 97, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/85ff6f624e23ae016b859f4829dd6f177b24c8b7/libjava%2Fjavax%2Fprint%2FStreamPrintService.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/85ff6f624e23ae016b859f4829dd6f177b24c8b7/libjava%2Fjavax%2Fprint%2FStreamPrintService.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fprint%2FStreamPrintService.java?ref=85ff6f624e23ae016b859f4829dd6f177b24c8b7", "patch": "@@ -0,0 +1,97 @@\n+/* StreamPrintService.java --\n+   Copyright (C) 2004 Free Software Foundation, Inc.\n+\n+This file is part of GNU Classpath.\n+\n+GNU Classpath is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2, or (at your option)\n+any later version.\n+\n+GNU Classpath is distributed in the hope that it will be useful, but\n+WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GNU Classpath; see the file COPYING.  If not, write to the\n+Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA\n+02111-1307 USA.\n+\n+Linking this library statically or dynamically with other modules is\n+making a combined work based on this library.  Thus, the terms and\n+conditions of the GNU General Public License cover the whole\n+combination.\n+\n+As a special exception, the copyright holders of this library give you\n+permission to link this library with independent modules to produce an\n+executable, regardless of the license terms of these independent\n+modules, and to copy and distribute the resulting executable under\n+terms of your choice, provided that you also meet, for each linked\n+independent module, the terms and conditions of the license of that\n+module.  An independent module is a module which is not derived from\n+or based on this library.  If you modify this library, you may extend\n+this exception to your version of the library, but you are not\n+obligated to do so.  If you do not wish to do so, delete this\n+exception statement from your version. */\n+\n+\n+package javax.print;\n+\n+import java.io.OutputStream;\n+\n+\n+/**\n+ * @author Michael Koch (konqueror@gmx.de)\n+ */\n+public abstract class StreamPrintService implements PrintService\n+{\n+  private boolean disposed;\n+  private OutputStream out;\n+  \n+  /**\n+   * Constructs a <code>StreamPrintService</code> object.\n+   * \n+   * @param out the <code>OutputStream</code> to use\n+   */\n+  protected StreamPrintService(OutputStream out)\n+  {\n+    this.out = out;\n+  }\n+\n+  /**\n+   * Dispose this <code>StreamPrintService</code> object.\n+   */\n+  public void dispose()\n+  {\n+    disposed = true;\n+  }\n+\n+  /**\n+   * Returns the document format emited by this print service.\n+   * \n+   * @return the document format\n+   */\n+  public abstract String getOutputFormat();\n+\n+  /**\n+   * Returns the <code>OutputStream</code> of this object.\n+   * \n+   * @return the <code>OutputStream</code>\n+   */\n+  public OutputStream getOutputStream()\n+  {\n+    return out;\n+  }\n+\n+  /**\n+   * Determines if this <code>StreamPrintService</code> object is disposed.\n+   * \n+   * @return <code>true</code> if disposed already,\n+   * otherwise <code>false</code>\n+   */\n+  public boolean isDisposed()\n+  {\n+    return disposed;\n+  }\n+}\n\\ No newline at end of file"}, {"sha": "b29c8831cedd2452354c091d9c37f99f41adb0b5", "filename": "libjava/javax/print/URIException.java", "status": "added", "additions": 65, "deletions": 0, "changes": 65, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/85ff6f624e23ae016b859f4829dd6f177b24c8b7/libjava%2Fjavax%2Fprint%2FURIException.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/85ff6f624e23ae016b859f4829dd6f177b24c8b7/libjava%2Fjavax%2Fprint%2FURIException.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fprint%2FURIException.java?ref=85ff6f624e23ae016b859f4829dd6f177b24c8b7", "patch": "@@ -0,0 +1,65 @@\n+/* URIException.java --\n+   Copyright (C) 2004 Free Software Foundation, Inc.\n+\n+This file is part of GNU Classpath.\n+\n+GNU Classpath is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2, or (at your option)\n+any later version.\n+\n+GNU Classpath is distributed in the hope that it will be useful, but\n+WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GNU Classpath; see the file COPYING.  If not, write to the\n+Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA\n+02111-1307 USA.\n+\n+Linking this library statically or dynamically with other modules is\n+making a combined work based on this library.  Thus, the terms and\n+conditions of the GNU General Public License cover the whole\n+combination.\n+\n+As a special exception, the copyright holders of this library give you\n+permission to link this library with independent modules to produce an\n+executable, regardless of the license terms of these independent\n+modules, and to copy and distribute the resulting executable under\n+terms of your choice, provided that you also meet, for each linked\n+independent module, the terms and conditions of the license of that\n+module.  An independent module is a module which is not derived from\n+or based on this library.  If you modify this library, you may extend\n+this exception to your version of the library, but you are not\n+obligated to do so.  If you do not wish to do so, delete this\n+exception statement from your version. */\n+\n+\n+package javax.print;\n+\n+import java.net.URI;\n+\n+/**\n+ * @author Michael Koch (konqueror@gmx.de)\n+ */\n+public interface URIException\n+{\n+  int URIInaccessible = 1;\n+  int URIOtherProblem = -1;\n+  int URISchemeNotSupported = 2;\n+  \n+  /**\n+   * Returns the reason for this exception.\n+   * \n+   * @return the reason\n+   */\n+  int getReason();\n+  \n+  /**\n+   * Returns the unsupported <code>URI</code> for this exception.\n+   * \n+   * @return the unsupported <code>URI</code>.\n+   */\n+  URI getUnsupportedURI();\n+}"}, {"sha": "3c72480c057193f5c1b5127da571a9d8fa456078", "filename": "libjava/javax/print/attribute/AttributeSetUtilities.java", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/85ff6f624e23ae016b859f4829dd6f177b24c8b7/libjava%2Fjavax%2Fprint%2Fattribute%2FAttributeSetUtilities.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/85ff6f624e23ae016b859f4829dd6f177b24c8b7/libjava%2Fjavax%2Fprint%2Fattribute%2FAttributeSetUtilities.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fprint%2Fattribute%2FAttributeSetUtilities.java?ref=85ff6f624e23ae016b859f4829dd6f177b24c8b7", "patch": "@@ -1,5 +1,5 @@\n /* AttributeSetUtilities.java -- \n-   Copyright (C) 2003 Free Software Foundation, Inc.\n+   Copyright (C) 2003, 2004  Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -427,7 +427,7 @@ public static Attribute verifyAttributeValue(Object object,\n    * Verifies that the category of attribute is equals to category.\n    *\n    * @param category the category the atteribute should be\n-   * @param attribtue the attribute to verify\n+   * @param attribute the attribute to verify\n    *\n    * @exception IllegalArgumentException if the categories are not equal\n    * @exception NullPointerException if category is null"}, {"sha": "fc3c67ac0beaf1b6240303da09de5f03825bd7e2", "filename": "libjava/javax/print/attribute/HashAttributeSet.java", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/85ff6f624e23ae016b859f4829dd6f177b24c8b7/libjava%2Fjavax%2Fprint%2Fattribute%2FHashAttributeSet.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/85ff6f624e23ae016b859f4829dd6f177b24c8b7/libjava%2Fjavax%2Fprint%2Fattribute%2FHashAttributeSet.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fprint%2Fattribute%2FHashAttributeSet.java?ref=85ff6f624e23ae016b859f4829dd6f177b24c8b7", "patch": "@@ -1,5 +1,5 @@\n /* HashAttributeSet.java -- \n-   Copyright (C) 2003 Free Software Foundation, Inc.\n+   Copyright (C) 2003, 2004  Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -232,7 +232,7 @@ public void clear()\n    *\n    * @param category the category to test for\n    *\n-   * @result true if the category exists in this attribute set, false otherwise.\n+   * @return true if the category exists in this attribute set, false otherwise.\n    */\n   public boolean containsKey(Class category)\n   {\n@@ -244,7 +244,7 @@ public boolean containsKey(Class category)\n    *\n    * @param attribute the attribute to test for\n    *\n-   * @result true if the attribute exists in this attribute set,\n+   * @return true if the attribute exists in this attribute set,\n    * false otherwise.\n    */\n   public boolean containsValue(Attribute attribute)\n@@ -257,7 +257,7 @@ public boolean containsValue(Attribute attribute)\n    *\n    * @param obj the object to test\n    *\n-   * @returns true if both objects are equal, false otherwise.\n+   * @return true if both objects are equal, false otherwise.\n    */\n   public boolean equals(Object obj)\n   {"}, {"sha": "6e3c455c4511d10c13b1b7adfbeaf78a9fc1acc2", "filename": "libjava/javax/print/attribute/IntegerSyntax.java", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/85ff6f624e23ae016b859f4829dd6f177b24c8b7/libjava%2Fjavax%2Fprint%2Fattribute%2FIntegerSyntax.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/85ff6f624e23ae016b859f4829dd6f177b24c8b7/libjava%2Fjavax%2Fprint%2Fattribute%2FIntegerSyntax.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fprint%2Fattribute%2FIntegerSyntax.java?ref=85ff6f624e23ae016b859f4829dd6f177b24c8b7", "patch": "@@ -1,5 +1,5 @@\n /* IntegerSyntax.java -- \n-   Copyright (C) 2003 Free Software Foundation, Inc.\n+   Copyright (C) 2003, 2004  Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -90,7 +90,7 @@ public int getValue()\n    *\n    * @param obj the object to test\n    *\n-   * @returns true if both objects are equal, false otherwise.\n+   * @return true if both objects are equal, false otherwise.\n    */\n   public boolean equals(Object obj)\n   {"}, {"sha": "678b373a1dcfd90bf4b34ecd37aa4d81d4a4868d", "filename": "libjava/javax/print/attribute/ResolutionSyntax.java", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/85ff6f624e23ae016b859f4829dd6f177b24c8b7/libjava%2Fjavax%2Fprint%2Fattribute%2FResolutionSyntax.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/85ff6f624e23ae016b859f4829dd6f177b24c8b7/libjava%2Fjavax%2Fprint%2Fattribute%2FResolutionSyntax.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fprint%2Fattribute%2FResolutionSyntax.java?ref=85ff6f624e23ae016b859f4829dd6f177b24c8b7", "patch": "@@ -1,5 +1,5 @@\n /* ResolutionSyntax.java -- \n-   Copyright (C) 2003 Free Software Foundation, Inc.\n+   Copyright (C) 2003, 2004  Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -86,7 +86,7 @@ public ResolutionSyntax(int crossFeedResolution, int feedResolution,\n    *\n    * @param obj the object to test\n    *\n-   * @returns true if both objects are equal, false otherwise.\n+   * @return true if both objects are equal, false otherwise.\n    */\n   public boolean equals(Object obj)\n   {\n@@ -111,7 +111,6 @@ public int getCrossFeedResolution(int units)\n     if (units < 1)\n       throw new IllegalArgumentException(\"units may not be less then 1\");\n \n-    int rount = units / 2;\n     return (crossFeedResolution + units) / units;\n   }\n \n@@ -137,7 +136,6 @@ public int getFeedResolution(int units)\n     if (units < 1)\n       throw new IllegalArgumentException(\"units may not be less then 1\");\n \n-    int rount = units / 2;\n     return (crossFeedResolution + units) / units;\n   }\n "}, {"sha": "adea9199df9254bb496a0971b5dbb4e1aab45ca7", "filename": "libjava/javax/print/attribute/SetOfIntegerSyntax.java", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/85ff6f624e23ae016b859f4829dd6f177b24c8b7/libjava%2Fjavax%2Fprint%2Fattribute%2FSetOfIntegerSyntax.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/85ff6f624e23ae016b859f4829dd6f177b24c8b7/libjava%2Fjavax%2Fprint%2Fattribute%2FSetOfIntegerSyntax.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fprint%2Fattribute%2FSetOfIntegerSyntax.java?ref=85ff6f624e23ae016b859f4829dd6f177b24c8b7", "patch": "@@ -1,5 +1,5 @@\n /* SetOfIntegerSyntax.java -- \n-   Copyright (C) 2003 Free Software Foundation, Inc.\n+   Copyright (C) 2003, 2004  Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -199,7 +199,7 @@ public boolean contains(IntegerSyntax value)\n    *\n    * @param obj the object to test\n    *\n-   * @returns true if both objects are equal, false otherwise.\n+   * @return true if both objects are equal, false otherwise.\n    */\n   public boolean equals(Object obj)\n   {"}, {"sha": "dda5cf5d44ce042cef6a8df2e2cbe94712ac03c8", "filename": "libjava/javax/print/attribute/TextSyntax.java", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/85ff6f624e23ae016b859f4829dd6f177b24c8b7/libjava%2Fjavax%2Fprint%2Fattribute%2FTextSyntax.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/85ff6f624e23ae016b859f4829dd6f177b24c8b7/libjava%2Fjavax%2Fprint%2Fattribute%2FTextSyntax.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fprint%2Fattribute%2FTextSyntax.java?ref=85ff6f624e23ae016b859f4829dd6f177b24c8b7", "patch": "@@ -121,6 +121,6 @@ public boolean equals(Object obj)\n    */\n   public String toString()\n   {\n-    return value;\n+    return getValue();\n   }\n }"}, {"sha": "2d732aaea53d3d96e8475fdfe9ec5e766e91db4f", "filename": "libjava/javax/print/attribute/standard/ColorSupported.java", "status": "added", "additions": 84, "deletions": 0, "changes": 84, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/85ff6f624e23ae016b859f4829dd6f177b24c8b7/libjava%2Fjavax%2Fprint%2Fattribute%2Fstandard%2FColorSupported.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/85ff6f624e23ae016b859f4829dd6f177b24c8b7/libjava%2Fjavax%2Fprint%2Fattribute%2Fstandard%2FColorSupported.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fprint%2Fattribute%2Fstandard%2FColorSupported.java?ref=85ff6f624e23ae016b859f4829dd6f177b24c8b7", "patch": "@@ -0,0 +1,84 @@\n+/* ColorSupported.java --\n+   Copyright (C) 2004 Free Software Foundation, Inc.\n+\n+This file is part of GNU Classpath.\n+\n+GNU Classpath is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2, or (at your option)\n+any later version.\n+\n+GNU Classpath is distributed in the hope that it will be useful, but\n+WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GNU Classpath; see the file COPYING.  If not, write to the\n+Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA\n+02111-1307 USA.\n+\n+Linking this library statically or dynamically with other modules is\n+making a combined work based on this library.  Thus, the terms and\n+conditions of the GNU General Public License cover the whole\n+combination.\n+\n+As a special exception, the copyright holders of this library give you\n+permission to link this library with independent modules to produce an\n+executable, regardless of the license terms of these independent\n+modules, and to copy and distribute the resulting executable under\n+terms of your choice, provided that you also meet, for each linked\n+independent module, the terms and conditions of the license of that\n+module.  An independent module is a module which is not derived from\n+or based on this library.  If you modify this library, you may extend\n+this exception to your version of the library, but you are not\n+obligated to do so.  If you do not wish to do so, delete this\n+exception statement from your version. */\n+\n+package javax.print.attribute.standard;\n+\n+import javax.print.attribute.EnumSyntax;\n+import javax.print.attribute.PrintServiceAttribute;\n+\n+\n+/**\n+ * @author Michael Koch (konqueror@gmx.de)\n+ */\n+public final class ColorSupported extends EnumSyntax\n+  implements PrintServiceAttribute\n+{\n+  private static final long serialVersionUID = -2700555589688535545L;\n+\n+  public static final ColorSupported NOT_SUPPORTED = new ColorSupported(0);\n+  public static final ColorSupported SUPPORTED = new ColorSupported(1);\n+\n+  /**\n+   * Constructs a <code>ColorSupported</code> object.\n+   * \n+   * @param value the value\n+   */\n+  protected ColorSupported(int value)\n+  {\n+    super(value);\n+  }\n+\n+  /**\n+   * Returns category of this class.\n+   *\n+   * @return the class <code>ColorSupported</code> itself\n+   */\n+  public final Class getCategory()\n+  {\n+    return ColorSupported.class;\n+  }\n+\n+  /**\n+   * Returns the name of this attribute.\n+   *\n+   * @return the name\n+   */\n+  public final String getName()\n+  {\n+    return \"color-supported\";\n+  }\n+}"}, {"sha": "a034b929095ae3f075947ac73bdaf10b0d8e1781", "filename": "libjava/javax/print/attribute/standard/Compression.java", "status": "added", "additions": 86, "deletions": 0, "changes": 86, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/85ff6f624e23ae016b859f4829dd6f177b24c8b7/libjava%2Fjavax%2Fprint%2Fattribute%2Fstandard%2FCompression.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/85ff6f624e23ae016b859f4829dd6f177b24c8b7/libjava%2Fjavax%2Fprint%2Fattribute%2Fstandard%2FCompression.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fprint%2Fattribute%2Fstandard%2FCompression.java?ref=85ff6f624e23ae016b859f4829dd6f177b24c8b7", "patch": "@@ -0,0 +1,86 @@\n+/* Compression.java --\n+   Copyright (C) 2004 Free Software Foundation, Inc.\n+\n+This file is part of GNU Classpath.\n+\n+GNU Classpath is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2, or (at your option)\n+any later version.\n+\n+GNU Classpath is distributed in the hope that it will be useful, but\n+WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GNU Classpath; see the file COPYING.  If not, write to the\n+Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA\n+02111-1307 USA.\n+\n+Linking this library statically or dynamically with other modules is\n+making a combined work based on this library.  Thus, the terms and\n+conditions of the GNU General Public License cover the whole\n+combination.\n+\n+As a special exception, the copyright holders of this library give you\n+permission to link this library with independent modules to produce an\n+executable, regardless of the license terms of these independent\n+modules, and to copy and distribute the resulting executable under\n+terms of your choice, provided that you also meet, for each linked\n+independent module, the terms and conditions of the license of that\n+module.  An independent module is a module which is not derived from\n+or based on this library.  If you modify this library, you may extend\n+this exception to your version of the library, but you are not\n+obligated to do so.  If you do not wish to do so, delete this\n+exception statement from your version. */\n+\n+package javax.print.attribute.standard;\n+\n+import javax.print.attribute.DocAttribute;\n+import javax.print.attribute.EnumSyntax;\n+\n+\n+/**\n+ * @author Michael Koch (konqueror@gmx.de)\n+ */\n+public class Compression extends EnumSyntax\n+  implements DocAttribute\n+{\n+  private static final long serialVersionUID = -5716748913324997674L;\n+\n+  public static final Compression NONE = new Compression(0);\n+  public static final Compression DEFLATE = new Compression(1);\n+  public static final Compression GZIP = new Compression(2);\n+  public static final Compression COMPRESS = new Compression(3);\n+\n+  /**\n+   * Constructs a <code>Compression</code> object.\n+   * \n+   * @param value that value\n+   */\n+  protected Compression(int value)\n+  {\n+    super(value);\n+  }\n+\n+  /**\n+   * Returns category of this class.\n+   *\n+   * @return the class <code>Compression</code> itself\n+   */\n+  public final Class getCategory()\n+  {\n+    return Compression.class;\n+  }\n+\n+  /**\n+   * Returns the name of this attribute.\n+   *\n+   * @return the name\n+   */\n+  public final String getName()\n+  {\n+    return \"compression\";\n+  }\n+}"}, {"sha": "329049d831f8c5217ee0dac61e1456d89a034214", "filename": "libjava/javax/print/attribute/standard/Copies.java", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/85ff6f624e23ae016b859f4829dd6f177b24c8b7/libjava%2Fjavax%2Fprint%2Fattribute%2Fstandard%2FCopies.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/85ff6f624e23ae016b859f4829dd6f177b24c8b7/libjava%2Fjavax%2Fprint%2Fattribute%2Fstandard%2FCopies.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fprint%2Fattribute%2Fstandard%2FCopies.java?ref=85ff6f624e23ae016b859f4829dd6f177b24c8b7", "patch": "@@ -69,7 +69,7 @@ public Copies(int value)\n    *\n    * @param obj the object to test\n    *\n-   * @returns true if both objects are equal, false otherwise.\n+   * @return true if both objects are equal, false otherwise.\n    */\n   public boolean equals(Object obj)\n   {"}, {"sha": "d44b385b903e7e820fcc185aac0568533893ebc0", "filename": "libjava/javax/print/attribute/standard/CopiesSupported.java", "status": "added", "additions": 87, "deletions": 0, "changes": 87, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/85ff6f624e23ae016b859f4829dd6f177b24c8b7/libjava%2Fjavax%2Fprint%2Fattribute%2Fstandard%2FCopiesSupported.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/85ff6f624e23ae016b859f4829dd6f177b24c8b7/libjava%2Fjavax%2Fprint%2Fattribute%2Fstandard%2FCopiesSupported.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fprint%2Fattribute%2Fstandard%2FCopiesSupported.java?ref=85ff6f624e23ae016b859f4829dd6f177b24c8b7", "patch": "@@ -0,0 +1,87 @@\n+/* CopiesSupported.java --\n+   Copyright (C) 2004 Free Software Foundation, Inc.\n+\n+This file is part of GNU Classpath.\n+\n+GNU Classpath is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2, or (at your option)\n+any later version.\n+\n+GNU Classpath is distributed in the hope that it will be useful, but\n+WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GNU Classpath; see the file COPYING.  If not, write to the\n+Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA\n+02111-1307 USA.\n+\n+Linking this library statically or dynamically with other modules is\n+making a combined work based on this library.  Thus, the terms and\n+conditions of the GNU General Public License cover the whole\n+combination.\n+\n+As a special exception, the copyright holders of this library give you\n+permission to link this library with independent modules to produce an\n+executable, regardless of the license terms of these independent\n+modules, and to copy and distribute the resulting executable under\n+terms of your choice, provided that you also meet, for each linked\n+independent module, the terms and conditions of the license of that\n+module.  An independent module is a module which is not derived from\n+or based on this library.  If you modify this library, you may extend\n+this exception to your version of the library, but you are not\n+obligated to do so.  If you do not wish to do so, delete this\n+exception statement from your version. */\n+\n+package javax.print.attribute.standard;\n+\n+import javax.print.attribute.SetOfIntegerSyntax;\n+import javax.print.attribute.SupportedValuesAttribute;\n+\n+\n+/**\n+ * @author Michael Koch (konqueror@gmx.de)\n+ */\n+public final class CopiesSupported extends SetOfIntegerSyntax\n+  implements SupportedValuesAttribute\n+{\n+  private static final long serialVersionUID = 6927711687034846001L;\n+\n+  /**\n+   * Constructs a <code>CopiesSupported</code> object.\n+   */\n+  public CopiesSupported(int member)\n+  {\n+    super(member);\n+  }\n+\n+  /**\n+   * Constructs a <code>CopiesSupported</code> object.\n+   */\n+  public CopiesSupported(int lowerBound, int upperBound)\n+  {\n+    super(lowerBound, upperBound);\n+  }\n+\n+  /**\n+   * Returns category of this class.\n+   *\n+   * @return the class <code>CopiesSupported</code> itself\n+   */\n+  public final Class getCategory()\n+  {\n+    return CopiesSupported.class;\n+  }\n+\n+  /**\n+   * Returns the name of this attribute.\n+   *\n+   * @return the name\n+   */\n+  public final String getName()\n+  {\n+    return \"copies-supported\";\n+  }\n+}"}, {"sha": "a81b8f0de2ae5c6322ff2469f396f12ef60a8019", "filename": "libjava/javax/print/attribute/standard/DateTimeAtCompleted.java", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/85ff6f624e23ae016b859f4829dd6f177b24c8b7/libjava%2Fjavax%2Fprint%2Fattribute%2Fstandard%2FDateTimeAtCompleted.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/85ff6f624e23ae016b859f4829dd6f177b24c8b7/libjava%2Fjavax%2Fprint%2Fattribute%2Fstandard%2FDateTimeAtCompleted.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fprint%2Fattribute%2Fstandard%2FDateTimeAtCompleted.java?ref=85ff6f624e23ae016b859f4829dd6f177b24c8b7", "patch": "@@ -1,5 +1,5 @@\n /* DateTimeAtCompleted.java -- \n-   Copyright (C) 2003 Free Software Foundation, Inc.\n+   Copyright (C) 2003, 2004  Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -41,6 +41,10 @@\n import javax.print.attribute.DateTimeSyntax;\n import javax.print.attribute.PrintJobAttribute;\n \n+\n+/**\n+ * @author Michael Koch (konqueror@gmx.de)\n+ */\n public final class DateTimeAtCompleted extends DateTimeSyntax\n   implements PrintJobAttribute\n {\n@@ -63,7 +67,7 @@ public DateTimeAtCompleted(Date value)\n    *\n    * @param obj the object to test\n    *\n-   * @returns true if both objects are equal, false otherwise.\n+   * @return true if both objects are equal, false otherwise.\n    */\n   public boolean equals(Object obj)\n   {"}, {"sha": "3e94c675a6aed82eeaa90e38df56e9f8e7b74c2c", "filename": "libjava/javax/print/attribute/standard/DateTimeAtCreation.java", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/85ff6f624e23ae016b859f4829dd6f177b24c8b7/libjava%2Fjavax%2Fprint%2Fattribute%2Fstandard%2FDateTimeAtCreation.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/85ff6f624e23ae016b859f4829dd6f177b24c8b7/libjava%2Fjavax%2Fprint%2Fattribute%2Fstandard%2FDateTimeAtCreation.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fprint%2Fattribute%2Fstandard%2FDateTimeAtCreation.java?ref=85ff6f624e23ae016b859f4829dd6f177b24c8b7", "patch": "@@ -1,5 +1,5 @@\n /* DateTimeAtCreation.java -- \n-   Copyright (C) 2003 Free Software Foundation, Inc.\n+   Copyright (C) 2003, 2004  Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -41,6 +41,10 @@\n import javax.print.attribute.DateTimeSyntax;\n import javax.print.attribute.PrintJobAttribute;\n \n+\n+/**\n+ * @author Michael Koch (konqueror@gmx.de)\n+ */\n public final class DateTimeAtCreation extends DateTimeSyntax\n   implements PrintJobAttribute\n {\n@@ -63,7 +67,7 @@ public DateTimeAtCreation(Date value)\n    *\n    * @param obj the object to test\n    *\n-   * @returns true if both objects are equal, false otherwise.\n+   * @return true if both objects are equal, false otherwise.\n    */\n   public boolean equals(Object obj)\n   {"}, {"sha": "0cdeb935b29879721e7cc4b767e93c7c7c53e1bf", "filename": "libjava/javax/print/attribute/standard/DateTimeAtProcessing.java", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/85ff6f624e23ae016b859f4829dd6f177b24c8b7/libjava%2Fjavax%2Fprint%2Fattribute%2Fstandard%2FDateTimeAtProcessing.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/85ff6f624e23ae016b859f4829dd6f177b24c8b7/libjava%2Fjavax%2Fprint%2Fattribute%2Fstandard%2FDateTimeAtProcessing.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fprint%2Fattribute%2Fstandard%2FDateTimeAtProcessing.java?ref=85ff6f624e23ae016b859f4829dd6f177b24c8b7", "patch": "@@ -1,5 +1,5 @@\n /* DateTimeAtProcessing.java -- \n-   Copyright (C) 2003 Free Software Foundation, Inc.\n+   Copyright (C) 2003, 2004  Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -41,6 +41,10 @@\n import javax.print.attribute.DateTimeSyntax;\n import javax.print.attribute.PrintJobAttribute;\n \n+\n+/**\n+ * @author Michael Koch (konqueror@gmx.de)\n+ */\n public final class DateTimeAtProcessing extends DateTimeSyntax\n   implements PrintJobAttribute\n {\n@@ -63,7 +67,7 @@ public DateTimeAtProcessing(Date value)\n    *\n    * @param obj the object to test\n    *\n-   * @returns true if both objects are equal, false otherwise.\n+   * @return true if both objects are equal, false otherwise.\n    */\n   public boolean equals(Object obj)\n   {"}, {"sha": "7ca040267864686b3a4971d7f73d5dbbc1e5de3a", "filename": "libjava/javax/print/attribute/standard/DocumentName.java", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/85ff6f624e23ae016b859f4829dd6f177b24c8b7/libjava%2Fjavax%2Fprint%2Fattribute%2Fstandard%2FDocumentName.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/85ff6f624e23ae016b859f4829dd6f177b24c8b7/libjava%2Fjavax%2Fprint%2Fattribute%2Fstandard%2FDocumentName.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fprint%2Fattribute%2Fstandard%2FDocumentName.java?ref=85ff6f624e23ae016b859f4829dd6f177b24c8b7", "patch": "@@ -41,6 +41,10 @@\n import javax.print.attribute.DocAttribute;\n import javax.print.attribute.TextSyntax;\n \n+\n+/**\n+ * @author Michael Koch (konqueror@gmx.de)\n+ */\n public final class DocumentName extends TextSyntax\n   implements DocAttribute\n {\n@@ -63,7 +67,7 @@ public DocumentName(String documentName, Locale locale)\n    *\n    * @param obj the object to test\n    *\n-   * @returns true if both objects are equal, false otherwise.\n+   * @return true if both objects are equal, false otherwise.\n    */\n   public boolean equals(Object obj)\n   {"}, {"sha": "b0aa0eec044906091dacd09fce7712db655cd9b3", "filename": "libjava/javax/print/attribute/standard/Fidelity.java", "status": "added", "additions": 85, "deletions": 0, "changes": 85, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/85ff6f624e23ae016b859f4829dd6f177b24c8b7/libjava%2Fjavax%2Fprint%2Fattribute%2Fstandard%2FFidelity.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/85ff6f624e23ae016b859f4829dd6f177b24c8b7/libjava%2Fjavax%2Fprint%2Fattribute%2Fstandard%2FFidelity.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fprint%2Fattribute%2Fstandard%2FFidelity.java?ref=85ff6f624e23ae016b859f4829dd6f177b24c8b7", "patch": "@@ -0,0 +1,85 @@\n+/* Fidelity.java --\n+   Copyright (C) 2004 Free Software Foundation, Inc.\n+\n+This file is part of GNU Classpath.\n+\n+GNU Classpath is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2, or (at your option)\n+any later version.\n+\n+GNU Classpath is distributed in the hope that it will be useful, but\n+WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GNU Classpath; see the file COPYING.  If not, write to the\n+Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA\n+02111-1307 USA.\n+\n+Linking this library statically or dynamically with other modules is\n+making a combined work based on this library.  Thus, the terms and\n+conditions of the GNU General Public License cover the whole\n+combination.\n+\n+As a special exception, the copyright holders of this library give you\n+permission to link this library with independent modules to produce an\n+executable, regardless of the license terms of these independent\n+modules, and to copy and distribute the resulting executable under\n+terms of your choice, provided that you also meet, for each linked\n+independent module, the terms and conditions of the license of that\n+module.  An independent module is a module which is not derived from\n+or based on this library.  If you modify this library, you may extend\n+this exception to your version of the library, but you are not\n+obligated to do so.  If you do not wish to do so, delete this\n+exception statement from your version. */\n+\n+package javax.print.attribute.standard;\n+\n+import javax.print.attribute.EnumSyntax;\n+import javax.print.attribute.PrintJobAttribute;\n+import javax.print.attribute.PrintRequestAttribute;\n+\n+\n+/**\n+ * @author Michael Koch (konqueror@gmx.de)\n+ */\n+public final class Fidelity extends EnumSyntax\n+  implements PrintJobAttribute, PrintRequestAttribute\n+{\n+  private static final long serialVersionUID = 6320827847329172308L;\n+\n+  public static final Fidelity FIDELITY_TRUE = new Fidelity(0);\n+  public static final Fidelity FIDELITY_FALSE = new Fidelity(1);\n+\n+  /**\n+   * Constructs a <code>Fidelity</code> object.\n+   * \n+   * @param value the value\n+   */\n+  protected Fidelity(int value)\n+  {\n+    super(value);\n+  }\n+\n+  /**\n+   * Returns category of this class.\n+   *\n+   * @return the class <code>Fidelity</code> itself\n+   */\n+  public final Class getCategory()\n+  {\n+    return Fidelity.class;\n+  }\n+\n+  /**\n+   * Returns the name of this attribute.\n+   *\n+   * @return the name\n+   */\n+  public final String getName()\n+  {\n+    return \"fidelity\";\n+  }\n+}"}, {"sha": "1704fc51da1a8e8fa3fba233c4629dfe854fc173", "filename": "libjava/javax/print/attribute/standard/Finishings.java", "status": "added", "additions": 102, "deletions": 0, "changes": 102, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/85ff6f624e23ae016b859f4829dd6f177b24c8b7/libjava%2Fjavax%2Fprint%2Fattribute%2Fstandard%2FFinishings.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/85ff6f624e23ae016b859f4829dd6f177b24c8b7/libjava%2Fjavax%2Fprint%2Fattribute%2Fstandard%2FFinishings.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fprint%2Fattribute%2Fstandard%2FFinishings.java?ref=85ff6f624e23ae016b859f4829dd6f177b24c8b7", "patch": "@@ -0,0 +1,102 @@\n+/* Finishings.java --\n+   Copyright (C) 2004 Free Software Foundation, Inc.\n+\n+This file is part of GNU Classpath.\n+\n+GNU Classpath is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2, or (at your option)\n+any later version.\n+\n+GNU Classpath is distributed in the hope that it will be useful, but\n+WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GNU Classpath; see the file COPYING.  If not, write to the\n+Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA\n+02111-1307 USA.\n+\n+Linking this library statically or dynamically with other modules is\n+making a combined work based on this library.  Thus, the terms and\n+conditions of the GNU General Public License cover the whole\n+combination.\n+\n+As a special exception, the copyright holders of this library give you\n+permission to link this library with independent modules to produce an\n+executable, regardless of the license terms of these independent\n+modules, and to copy and distribute the resulting executable under\n+terms of your choice, provided that you also meet, for each linked\n+independent module, the terms and conditions of the license of that\n+module.  An independent module is a module which is not derived from\n+or based on this library.  If you modify this library, you may extend\n+this exception to your version of the library, but you are not\n+obligated to do so.  If you do not wish to do so, delete this\n+exception statement from your version. */\n+\n+package javax.print.attribute.standard;\n+\n+import javax.print.attribute.DocAttribute;\n+import javax.print.attribute.EnumSyntax;\n+import javax.print.attribute.PrintJobAttribute;\n+import javax.print.attribute.PrintRequestAttribute;\n+\n+\n+/**\n+ * @author Michael Koch (konqueror@gmx.de)\n+ */\n+public class Finishings extends EnumSyntax\n+  implements DocAttribute, PrintJobAttribute, PrintRequestAttribute\n+{\n+  private static final long serialVersionUID = -627840419548391754L;\n+\n+  public static final Finishings NONE = new Finishings(0);\n+  public static final Finishings STAPLE = new Finishings(1);\n+  public static final Finishings COVER = new Finishings(2);\n+  public static final Finishings BIND = new Finishings(3);\n+  public static final Finishings SADDLE_STITCH = new Finishings(4);\n+  public static final Finishings EDGE_STITCH = new Finishings(5);\n+  public static final Finishings STAPLE_TOP_LEFT = new Finishings(6);\n+  public static final Finishings STAPLE_BOTTOM_LEFT = new Finishings(7);\n+  public static final Finishings STAPLE_TOP_RIGHT = new Finishings(8);\n+  public static final Finishings STAPLE_BOTTOM_RIGHT = new Finishings(9);\n+  public static final Finishings EDGE_STITCH_LEFT = new Finishings(10);\n+  public static final Finishings EDGE_STITCH_TOP = new Finishings(11);\n+  public static final Finishings EDGE_STITCH_RIGHT = new Finishings(12);\n+  public static final Finishings EDGE_STITCH_BOTTOM = new Finishings(13);\n+  public static final Finishings STAPLE_DUAL_LEFT = new Finishings(14);\n+  public static final Finishings STAPLE_DUAL_TOP = new Finishings(15);\n+  public static final Finishings STAPLE_DUAL_RIGHT = new Finishings(16);\n+  public static final Finishings STAPLE_DUAL_BOTTOM = new Finishings(17);\n+\n+  /**\n+   * Constructs a <code>Finishings</code> object.\n+   * \n+   * @param value the value\n+   */\n+  protected Finishings(int value)\n+  {\n+    super(value);\n+  }\n+\n+  /**\n+   * Returns category of this class.\n+   *\n+   * @return the class <code>Finishings</code> itself\n+   */\n+  public final Class getCategory()\n+  {\n+    return Finishings.class;\n+  }\n+\n+  /**\n+   * Returns the name of this attribute.\n+   *\n+   * @return the name\n+   */\n+  public final String getName()\n+  {\n+    return \"finishings\";\n+  }\n+}"}, {"sha": "c285dc785affb896c4131aac4508964bd9dc9a43", "filename": "libjava/javax/print/attribute/standard/JobHoldUntil.java", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/85ff6f624e23ae016b859f4829dd6f177b24c8b7/libjava%2Fjavax%2Fprint%2Fattribute%2Fstandard%2FJobHoldUntil.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/85ff6f624e23ae016b859f4829dd6f177b24c8b7/libjava%2Fjavax%2Fprint%2Fattribute%2Fstandard%2FJobHoldUntil.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fprint%2Fattribute%2Fstandard%2FJobHoldUntil.java?ref=85ff6f624e23ae016b859f4829dd6f177b24c8b7", "patch": "@@ -42,6 +42,9 @@\n import javax.print.attribute.PrintJobAttribute;\n import javax.print.attribute.PrintRequestAttribute;\n \n+/**\n+ * @author Michael Koch (konqueror@gmx.de)\n+ */\n public final class JobHoldUntil extends DateTimeSyntax\n   implements PrintJobAttribute, PrintRequestAttribute\n {\n@@ -64,7 +67,7 @@ public JobHoldUntil(Date value)\n    *\n    * @param obj the object to test\n    *\n-   * @returns true if both objects are equal, false otherwise.\n+   * @return true if both objects are equal, false otherwise.\n    */\n   public boolean equals(Object obj)\n   {"}, {"sha": "0a02be9482fc84bec5fdae7ff8196d268407e05a", "filename": "libjava/javax/print/attribute/standard/JobImpressions.java", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/85ff6f624e23ae016b859f4829dd6f177b24c8b7/libjava%2Fjavax%2Fprint%2Fattribute%2Fstandard%2FJobImpressions.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/85ff6f624e23ae016b859f4829dd6f177b24c8b7/libjava%2Fjavax%2Fprint%2Fattribute%2Fstandard%2FJobImpressions.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fprint%2Fattribute%2Fstandard%2FJobImpressions.java?ref=85ff6f624e23ae016b859f4829dd6f177b24c8b7", "patch": "@@ -69,7 +69,7 @@ public JobImpressions(int value)\n    *\n    * @param obj the object to test\n    *\n-   * @returns true if both objects are equal, false otherwise.\n+   * @return true if both objects are equal, false otherwise.\n    */\n   public boolean equals(Object obj)\n   {"}, {"sha": "a494a27f2ee30e936fcbe52fc04b51ca484fbff5", "filename": "libjava/javax/print/attribute/standard/JobImpressionsCompleted.java", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/85ff6f624e23ae016b859f4829dd6f177b24c8b7/libjava%2Fjavax%2Fprint%2Fattribute%2Fstandard%2FJobImpressionsCompleted.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/85ff6f624e23ae016b859f4829dd6f177b24c8b7/libjava%2Fjavax%2Fprint%2Fattribute%2Fstandard%2FJobImpressionsCompleted.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fprint%2Fattribute%2Fstandard%2FJobImpressionsCompleted.java?ref=85ff6f624e23ae016b859f4829dd6f177b24c8b7", "patch": "@@ -1,5 +1,5 @@\n /* JobImpressionsCompleted.java -- \n-   Copyright (C) 2003 Free Software Foundation, Inc.\n+   Copyright (C) 2003, 2004  Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -41,7 +41,7 @@\n import javax.print.attribute.PrintJobAttribute;\n \n /**\n- * @author Michael Koch\n+ * @author Michael Koch (konqueror@gmx.de)\n  */\n public final class JobImpressionsCompleted extends IntegerSyntax\n   implements PrintJobAttribute\n@@ -68,7 +68,7 @@ public JobImpressionsCompleted(int value)\n    *\n    * @param obj the object to test\n    *\n-   * @returns true if both objects are equal, false otherwise.\n+   * @return true if both objects are equal, false otherwise.\n    */\n   public boolean equals(Object obj)\n   {"}, {"sha": "6dce380701f5d107bdd1abb8f348dec3c675f393", "filename": "libjava/javax/print/attribute/standard/JobImpressionsSupported.java", "status": "added", "additions": 79, "deletions": 0, "changes": 79, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/85ff6f624e23ae016b859f4829dd6f177b24c8b7/libjava%2Fjavax%2Fprint%2Fattribute%2Fstandard%2FJobImpressionsSupported.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/85ff6f624e23ae016b859f4829dd6f177b24c8b7/libjava%2Fjavax%2Fprint%2Fattribute%2Fstandard%2FJobImpressionsSupported.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fprint%2Fattribute%2Fstandard%2FJobImpressionsSupported.java?ref=85ff6f624e23ae016b859f4829dd6f177b24c8b7", "patch": "@@ -0,0 +1,79 @@\n+/* JobImpressionsSupported.java --\n+   Copyright (C) 2004 Free Software Foundation, Inc.\n+\n+This file is part of GNU Classpath.\n+\n+GNU Classpath is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2, or (at your option)\n+any later version.\n+\n+GNU Classpath is distributed in the hope that it will be useful, but\n+WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GNU Classpath; see the file COPYING.  If not, write to the\n+Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA\n+02111-1307 USA.\n+\n+Linking this library statically or dynamically with other modules is\n+making a combined work based on this library.  Thus, the terms and\n+conditions of the GNU General Public License cover the whole\n+combination.\n+\n+As a special exception, the copyright holders of this library give you\n+permission to link this library with independent modules to produce an\n+executable, regardless of the license terms of these independent\n+modules, and to copy and distribute the resulting executable under\n+terms of your choice, provided that you also meet, for each linked\n+independent module, the terms and conditions of the license of that\n+module.  An independent module is a module which is not derived from\n+or based on this library.  If you modify this library, you may extend\n+this exception to your version of the library, but you are not\n+obligated to do so.  If you do not wish to do so, delete this\n+exception statement from your version. */\n+\n+package javax.print.attribute.standard;\n+\n+import javax.print.attribute.SetOfIntegerSyntax;\n+import javax.print.attribute.SupportedValuesAttribute;\n+\n+\n+/**\n+ * @author Michael Koch (konqueror@gmx.de)\n+ */\n+public final class JobImpressionsSupported extends SetOfIntegerSyntax\n+  implements SupportedValuesAttribute\n+{\n+  private static final long serialVersionUID = -4887354803843173692L;\n+\n+  /**\n+   * Constructs a <code>JobImpressionsSupported</code> object.\n+   */\n+  public JobImpressionsSupported(int lowerBound, int upperBound)\n+  {\n+    super(lowerBound, upperBound);\n+  }\n+\n+  /**\n+   * Returns category of this class.\n+   *\n+   * @return the class <code>JobImpressionsSupported</code> itself\n+   */\n+  public final Class getCategory()\n+  {\n+    return JobImpressionsSupported.class;\n+  }\n+\n+  /**\n+   * Returns the name of this attribute.\n+   *\n+   * @return the name\n+   */\n+  public final String getName()\n+  {\n+    return \"job-impressions-supported\";\n+  }\n+}"}, {"sha": "fb6279f8dd2f36584d45d42001762c04a5b49c51", "filename": "libjava/javax/print/attribute/standard/JobKOctets.java", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/85ff6f624e23ae016b859f4829dd6f177b24c8b7/libjava%2Fjavax%2Fprint%2Fattribute%2Fstandard%2FJobKOctets.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/85ff6f624e23ae016b859f4829dd6f177b24c8b7/libjava%2Fjavax%2Fprint%2Fattribute%2Fstandard%2FJobKOctets.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fprint%2Fattribute%2Fstandard%2FJobKOctets.java?ref=85ff6f624e23ae016b859f4829dd6f177b24c8b7", "patch": "@@ -69,7 +69,7 @@ public JobKOctets(int value)\n    *\n    * @param obj the object to test\n    *\n-   * @returns true if both objects are equal, false otherwise.\n+   * @return true if both objects are equal, false otherwise.\n    */\n   public boolean equals(Object obj)\n   {"}, {"sha": "90ed2de5107c7e5b6cc3c4d291790dcdde2e0ef4", "filename": "libjava/javax/print/attribute/standard/JobKOctetsProcessed.java", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/85ff6f624e23ae016b859f4829dd6f177b24c8b7/libjava%2Fjavax%2Fprint%2Fattribute%2Fstandard%2FJobKOctetsProcessed.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/85ff6f624e23ae016b859f4829dd6f177b24c8b7/libjava%2Fjavax%2Fprint%2Fattribute%2Fstandard%2FJobKOctetsProcessed.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fprint%2Fattribute%2Fstandard%2FJobKOctetsProcessed.java?ref=85ff6f624e23ae016b859f4829dd6f177b24c8b7", "patch": "@@ -68,7 +68,7 @@ public JobKOctetsProcessed(int value)\n    *\n    * @param obj the object to test\n    *\n-   * @returns true if both objects are equal, false otherwise.\n+   * @return true if both objects are equal, false otherwise.\n    */\n   public boolean equals(Object obj)\n   {"}, {"sha": "3a40dfda97d9ff62edabe7ca2e78cdbb801a1da4", "filename": "libjava/javax/print/attribute/standard/JobKOctetsSupported.java", "status": "added", "additions": 79, "deletions": 0, "changes": 79, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/85ff6f624e23ae016b859f4829dd6f177b24c8b7/libjava%2Fjavax%2Fprint%2Fattribute%2Fstandard%2FJobKOctetsSupported.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/85ff6f624e23ae016b859f4829dd6f177b24c8b7/libjava%2Fjavax%2Fprint%2Fattribute%2Fstandard%2FJobKOctetsSupported.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fprint%2Fattribute%2Fstandard%2FJobKOctetsSupported.java?ref=85ff6f624e23ae016b859f4829dd6f177b24c8b7", "patch": "@@ -0,0 +1,79 @@\n+/* JobKOctetsSupported.java --\n+   Copyright (C) 2004 Free Software Foundation, Inc.\n+\n+This file is part of GNU Classpath.\n+\n+GNU Classpath is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2, or (at your option)\n+any later version.\n+\n+GNU Classpath is distributed in the hope that it will be useful, but\n+WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GNU Classpath; see the file COPYING.  If not, write to the\n+Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA\n+02111-1307 USA.\n+\n+Linking this library statically or dynamically with other modules is\n+making a combined work based on this library.  Thus, the terms and\n+conditions of the GNU General Public License cover the whole\n+combination.\n+\n+As a special exception, the copyright holders of this library give you\n+permission to link this library with independent modules to produce an\n+executable, regardless of the license terms of these independent\n+modules, and to copy and distribute the resulting executable under\n+terms of your choice, provided that you also meet, for each linked\n+independent module, the terms and conditions of the license of that\n+module.  An independent module is a module which is not derived from\n+or based on this library.  If you modify this library, you may extend\n+this exception to your version of the library, but you are not\n+obligated to do so.  If you do not wish to do so, delete this\n+exception statement from your version. */\n+\n+package javax.print.attribute.standard;\n+\n+import javax.print.attribute.SetOfIntegerSyntax;\n+import javax.print.attribute.SupportedValuesAttribute;\n+\n+\n+/**\n+ * @author Michael Koch (konqueror@gmx.de)\n+ */\n+public final class JobKOctetsSupported extends SetOfIntegerSyntax\n+  implements SupportedValuesAttribute\n+{\n+  private static final long serialVersionUID = -2867871140549897443L;\n+\n+  /**\n+   * Constructs a <code>JobKOctetsSupported</code> object.\n+   */\n+  public JobKOctetsSupported(int lowerBound, int upperBound)\n+  {\n+    super(lowerBound, upperBound);\n+  }\n+\n+  /**\n+   * Returns category of this class.\n+   *\n+   * @return the class <code>ColorSupported</code> itself\n+   */\n+  public final Class getCategory()\n+  {\n+    return JobKOctetsSupported.class;\n+  }\n+\n+  /**\n+   * Returns the name of this attribute.\n+   *\n+   * @return the name\n+   */\n+  public final String getName()\n+  {\n+    return \"job-k-octets-supported\";\n+  }\n+}"}, {"sha": "814fef67cf611362e9ed091f6da8c2cba4a4d189", "filename": "libjava/javax/print/attribute/standard/JobMediaSheets.java", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/85ff6f624e23ae016b859f4829dd6f177b24c8b7/libjava%2Fjavax%2Fprint%2Fattribute%2Fstandard%2FJobMediaSheets.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/85ff6f624e23ae016b859f4829dd6f177b24c8b7/libjava%2Fjavax%2Fprint%2Fattribute%2Fstandard%2FJobMediaSheets.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fprint%2Fattribute%2Fstandard%2FJobMediaSheets.java?ref=85ff6f624e23ae016b859f4829dd6f177b24c8b7", "patch": "@@ -69,7 +69,7 @@ public JobMediaSheets(int value)\n    *\n    * @param obj the object to test\n    *\n-   * @returns true if both objects are equal, false otherwise.\n+   * @return true if both objects are equal, false otherwise.\n    */\n   public boolean equals(Object obj)\n   {"}, {"sha": "bc02b5fba171bf265b17f0aabc6c404e7e215b3d", "filename": "libjava/javax/print/attribute/standard/JobMediaSheetsCompleted.java", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/85ff6f624e23ae016b859f4829dd6f177b24c8b7/libjava%2Fjavax%2Fprint%2Fattribute%2Fstandard%2FJobMediaSheetsCompleted.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/85ff6f624e23ae016b859f4829dd6f177b24c8b7/libjava%2Fjavax%2Fprint%2Fattribute%2Fstandard%2FJobMediaSheetsCompleted.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fprint%2Fattribute%2Fstandard%2FJobMediaSheetsCompleted.java?ref=85ff6f624e23ae016b859f4829dd6f177b24c8b7", "patch": "@@ -68,7 +68,7 @@ public JobMediaSheetsCompleted(int value)\n    *\n    * @param obj the object to test\n    *\n-   * @returns true if both objects are equal, false otherwise.\n+   * @return true if both objects are equal, false otherwise.\n    */\n   public boolean equals(Object obj)\n   {"}, {"sha": "00f3b61fee1f34eca3a564116d1c5c88451ea55a", "filename": "libjava/javax/print/attribute/standard/JobMediaSheetsSupported.java", "status": "added", "additions": 79, "deletions": 0, "changes": 79, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/85ff6f624e23ae016b859f4829dd6f177b24c8b7/libjava%2Fjavax%2Fprint%2Fattribute%2Fstandard%2FJobMediaSheetsSupported.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/85ff6f624e23ae016b859f4829dd6f177b24c8b7/libjava%2Fjavax%2Fprint%2Fattribute%2Fstandard%2FJobMediaSheetsSupported.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fprint%2Fattribute%2Fstandard%2FJobMediaSheetsSupported.java?ref=85ff6f624e23ae016b859f4829dd6f177b24c8b7", "patch": "@@ -0,0 +1,79 @@\n+/* JobMediaSheetsSupported.java --\n+   Copyright (C) 2004 Free Software Foundation, Inc.\n+\n+This file is part of GNU Classpath.\n+\n+GNU Classpath is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2, or (at your option)\n+any later version.\n+\n+GNU Classpath is distributed in the hope that it will be useful, but\n+WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GNU Classpath; see the file COPYING.  If not, write to the\n+Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA\n+02111-1307 USA.\n+\n+Linking this library statically or dynamically with other modules is\n+making a combined work based on this library.  Thus, the terms and\n+conditions of the GNU General Public License cover the whole\n+combination.\n+\n+As a special exception, the copyright holders of this library give you\n+permission to link this library with independent modules to produce an\n+executable, regardless of the license terms of these independent\n+modules, and to copy and distribute the resulting executable under\n+terms of your choice, provided that you also meet, for each linked\n+independent module, the terms and conditions of the license of that\n+module.  An independent module is a module which is not derived from\n+or based on this library.  If you modify this library, you may extend\n+this exception to your version of the library, but you are not\n+obligated to do so.  If you do not wish to do so, delete this\n+exception statement from your version. */\n+\n+package javax.print.attribute.standard;\n+\n+import javax.print.attribute.SetOfIntegerSyntax;\n+import javax.print.attribute.SupportedValuesAttribute;\n+\n+\n+/**\n+ * @author Michael Koch (konqueror@gmx.de)\n+ */\n+public final class JobMediaSheetsSupported extends SetOfIntegerSyntax\n+  implements SupportedValuesAttribute\n+{\n+  private static final long serialVersionUID = 2953685470388672940L;\n+\n+  /**\n+   * Constructs a <code>JobMediaSheetsSupported</code> object.\n+   */\n+  public JobMediaSheetsSupported(int lowerBound, int upperBound)\n+  {\n+    super(lowerBound, upperBound);\n+  }\n+\n+  /**\n+   * Returns category of this class.\n+   *\n+   * @return the class <code>JobMediaSheetsSupported</code> itself\n+   */\n+  public final Class getCategory()\n+  {\n+    return JobMediaSheetsSupported.class;\n+  }\n+\n+  /**\n+   * Returns the name of this attribute.\n+   *\n+   * @return the name\n+   */\n+  public final String getName()\n+  {\n+    return \"job-media-sheets-supported\";\n+  }\n+}"}, {"sha": "b99cce1eeb2185ceec403c9c512a88c15bdd3f15", "filename": "libjava/javax/print/attribute/standard/JobMessageFromOperator.java", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/85ff6f624e23ae016b859f4829dd6f177b24c8b7/libjava%2Fjavax%2Fprint%2Fattribute%2Fstandard%2FJobMessageFromOperator.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/85ff6f624e23ae016b859f4829dd6f177b24c8b7/libjava%2Fjavax%2Fprint%2Fattribute%2Fstandard%2FJobMessageFromOperator.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fprint%2Fattribute%2Fstandard%2FJobMessageFromOperator.java?ref=85ff6f624e23ae016b859f4829dd6f177b24c8b7", "patch": "@@ -41,6 +41,10 @@\n import javax.print.attribute.PrintJobAttribute;\n import javax.print.attribute.TextSyntax;\n \n+\n+/**\n+ * @author Michael Koch (konqueror@gmx.de)\n+ */\n public final class JobMessageFromOperator extends TextSyntax\n   implements PrintJobAttribute\n {\n@@ -63,7 +67,7 @@ public JobMessageFromOperator(String message, Locale locale)\n    *\n    * @param obj the object to test\n    *\n-   * @returns true if both objects are equal, false otherwise.\n+   * @return true if both objects are equal, false otherwise.\n    */\n   public boolean equals(Object obj)\n   {"}, {"sha": "ba751b15f49dedca4f383e6a638e8c99a57425f7", "filename": "libjava/javax/print/attribute/standard/JobName.java", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/85ff6f624e23ae016b859f4829dd6f177b24c8b7/libjava%2Fjavax%2Fprint%2Fattribute%2Fstandard%2FJobName.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/85ff6f624e23ae016b859f4829dd6f177b24c8b7/libjava%2Fjavax%2Fprint%2Fattribute%2Fstandard%2FJobName.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fprint%2Fattribute%2Fstandard%2FJobName.java?ref=85ff6f624e23ae016b859f4829dd6f177b24c8b7", "patch": "@@ -42,6 +42,10 @@\n import javax.print.attribute.PrintRequestAttribute;\n import javax.print.attribute.TextSyntax;\n \n+\n+/**\n+ * @author Michael Koch (konqueror@gmx.de)\n+ */\n public final class JobName extends TextSyntax\n   implements PrintJobAttribute, PrintRequestAttribute\n {\n@@ -64,7 +68,7 @@ public JobName(String jobName, Locale locale)\n    *\n    * @param obj the object to test\n    *\n-   * @returns true if both objects are equal, false otherwise.\n+   * @return true if both objects are equal, false otherwise.\n    */\n   public boolean equals(Object obj)\n   {"}, {"sha": "e0f404552a62ab9fcb12435bb2e5f345b97e3dc5", "filename": "libjava/javax/print/attribute/standard/JobOriginatingUserName.java", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/85ff6f624e23ae016b859f4829dd6f177b24c8b7/libjava%2Fjavax%2Fprint%2Fattribute%2Fstandard%2FJobOriginatingUserName.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/85ff6f624e23ae016b859f4829dd6f177b24c8b7/libjava%2Fjavax%2Fprint%2Fattribute%2Fstandard%2FJobOriginatingUserName.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fprint%2Fattribute%2Fstandard%2FJobOriginatingUserName.java?ref=85ff6f624e23ae016b859f4829dd6f177b24c8b7", "patch": "@@ -41,6 +41,10 @@\n import javax.print.attribute.PrintJobAttribute;\n import javax.print.attribute.TextSyntax;\n \n+\n+/**\n+ * @author Michael Koch (konqueror@gmx.de)\n+ */\n public final class JobOriginatingUserName extends TextSyntax\n   implements PrintJobAttribute\n {\n@@ -63,7 +67,7 @@ public JobOriginatingUserName(String userName, Locale locale)\n    *\n    * @param obj the object to test\n    *\n-   * @returns true if both objects are equal, false otherwise.\n+   * @return true if both objects are equal, false otherwise.\n    */\n   public boolean equals(Object obj)\n   {"}, {"sha": "5f539c9315e00ec456d0576f73daa15cc4154875", "filename": "libjava/javax/print/attribute/standard/JobPriority.java", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/85ff6f624e23ae016b859f4829dd6f177b24c8b7/libjava%2Fjavax%2Fprint%2Fattribute%2Fstandard%2FJobPriority.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/85ff6f624e23ae016b859f4829dd6f177b24c8b7/libjava%2Fjavax%2Fprint%2Fattribute%2Fstandard%2FJobPriority.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fprint%2Fattribute%2Fstandard%2FJobPriority.java?ref=85ff6f624e23ae016b859f4829dd6f177b24c8b7", "patch": "@@ -1,5 +1,5 @@\n /* JobPriority.java -- \n-   Copyright (C) 2003 Free Software Foundation, Inc.\n+   Copyright (C) 2003, 2004  Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -41,6 +41,10 @@\n import javax.print.attribute.PrintJobAttribute;\n import javax.print.attribute.PrintRequestAttribute;\n \n+\n+/**\n+ * @author Michael Koch (konqueror@gmx.de)\n+ */\n public final class JobPriority extends IntegerSyntax\n   implements PrintJobAttribute, PrintRequestAttribute\n {\n@@ -66,7 +70,7 @@ public JobPriority(int value)\n    *\n    * @param obj the object to test\n    *\n-   * @returns true if both objects are equal, false otherwise.\n+   * @return true if both objects are equal, false otherwise.\n    */\n   public boolean equals(Object obj)\n   {"}, {"sha": "1b08030639765688d278100d15a7227fb3d62693", "filename": "libjava/javax/print/attribute/standard/JobPrioritySupported.java", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/85ff6f624e23ae016b859f4829dd6f177b24c8b7/libjava%2Fjavax%2Fprint%2Fattribute%2Fstandard%2FJobPrioritySupported.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/85ff6f624e23ae016b859f4829dd6f177b24c8b7/libjava%2Fjavax%2Fprint%2Fattribute%2Fstandard%2FJobPrioritySupported.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fprint%2Fattribute%2Fstandard%2FJobPrioritySupported.java?ref=85ff6f624e23ae016b859f4829dd6f177b24c8b7", "patch": "@@ -1,5 +1,5 @@\n /* JobPrioritySupported.java -- \n-   Copyright (C) 2003 Free Software Foundation, Inc.\n+   Copyright (C) 2003, 2004  Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -40,6 +40,10 @@\n import javax.print.attribute.IntegerSyntax;\n import javax.print.attribute.SupportedValuesAttribute;\n \n+\n+/**\n+ * @author Michael Koch (konqueror@gmx.de)\n+ */\n public final class JobPrioritySupported extends IntegerSyntax\n   implements SupportedValuesAttribute\n {\n@@ -65,7 +69,7 @@ public JobPrioritySupported(int value)\n    *\n    * @param obj the object to test\n    *\n-   * @returns true if both objects are equal, false otherwise.\n+   * @return true if both objects are equal, false otherwise.\n    */\n   public boolean equals(Object obj)\n   {"}, {"sha": "db47b7ee6d76b967dd6db2ac67db2cec1ae62ea1", "filename": "libjava/javax/print/attribute/standard/JobSheets.java", "status": "added", "additions": 83, "deletions": 0, "changes": 83, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/85ff6f624e23ae016b859f4829dd6f177b24c8b7/libjava%2Fjavax%2Fprint%2Fattribute%2Fstandard%2FJobSheets.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/85ff6f624e23ae016b859f4829dd6f177b24c8b7/libjava%2Fjavax%2Fprint%2Fattribute%2Fstandard%2FJobSheets.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fprint%2Fattribute%2Fstandard%2FJobSheets.java?ref=85ff6f624e23ae016b859f4829dd6f177b24c8b7", "patch": "@@ -0,0 +1,83 @@\n+/* JobSheets.java --\n+   Copyright (C) 2004 Free Software Foundation, Inc.\n+\n+This file is part of GNU Classpath.\n+\n+GNU Classpath is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2, or (at your option)\n+any later version.\n+\n+GNU Classpath is distributed in the hope that it will be useful, but\n+WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GNU Classpath; see the file COPYING.  If not, write to the\n+Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA\n+02111-1307 USA.\n+\n+Linking this library statically or dynamically with other modules is\n+making a combined work based on this library.  Thus, the terms and\n+conditions of the GNU General Public License cover the whole\n+combination.\n+\n+As a special exception, the copyright holders of this library give you\n+permission to link this library with independent modules to produce an\n+executable, regardless of the license terms of these independent\n+modules, and to copy and distribute the resulting executable under\n+terms of your choice, provided that you also meet, for each linked\n+independent module, the terms and conditions of the license of that\n+module.  An independent module is a module which is not derived from\n+or based on this library.  If you modify this library, you may extend\n+this exception to your version of the library, but you are not\n+obligated to do so.  If you do not wish to do so, delete this\n+exception statement from your version. */\n+\n+package javax.print.attribute.standard;\n+\n+import javax.print.attribute.EnumSyntax;\n+import javax.print.attribute.PrintJobAttribute;\n+import javax.print.attribute.PrintRequestAttribute;\n+\n+\n+/**\n+ * @author Michael Koch (konqueror@gmx.de)\n+ */\n+public class JobSheets extends EnumSyntax\n+  implements PrintJobAttribute, PrintRequestAttribute\n+{\n+  private static final long serialVersionUID = -4735258056132519759L;\n+\n+  public static final JobSheets NONE = new JobSheets(0);\n+  public static final JobSheets STANDARD = new JobSheets(1);\n+\n+  /**\n+   * Constructs a <code>JobSheets</code> object.\n+   */\n+  protected JobSheets(int value)\n+  {\n+    super(value);\n+  }\n+\n+  /**\n+   * Returns category of this class.\n+   *\n+   * @return the class <code>JobSheets</code> itself\n+   */\n+  public final Class getCategory()\n+  {\n+    return JobSheets.class;\n+  }\n+\n+  /**\n+   * Returns the name of this attribute.\n+   *\n+   * @return the name\n+   */\n+  public final String getName()\n+  {\n+    return \"job-sheets\";\n+  }\n+}"}, {"sha": "f8eb15c34844e8dae7ab89a0d4af84eb0ee17bb2", "filename": "libjava/javax/print/attribute/standard/JobState.java", "status": "added", "additions": 88, "deletions": 0, "changes": 88, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/85ff6f624e23ae016b859f4829dd6f177b24c8b7/libjava%2Fjavax%2Fprint%2Fattribute%2Fstandard%2FJobState.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/85ff6f624e23ae016b859f4829dd6f177b24c8b7/libjava%2Fjavax%2Fprint%2Fattribute%2Fstandard%2FJobState.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fprint%2Fattribute%2Fstandard%2FJobState.java?ref=85ff6f624e23ae016b859f4829dd6f177b24c8b7", "patch": "@@ -0,0 +1,88 @@\n+/* JobState.java --\n+   Copyright (C) 2004 Free Software Foundation, Inc.\n+\n+This file is part of GNU Classpath.\n+\n+GNU Classpath is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2, or (at your option)\n+any later version.\n+\n+GNU Classpath is distributed in the hope that it will be useful, but\n+WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GNU Classpath; see the file COPYING.  If not, write to the\n+Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA\n+02111-1307 USA.\n+\n+Linking this library statically or dynamically with other modules is\n+making a combined work based on this library.  Thus, the terms and\n+conditions of the GNU General Public License cover the whole\n+combination.\n+\n+As a special exception, the copyright holders of this library give you\n+permission to link this library with independent modules to produce an\n+executable, regardless of the license terms of these independent\n+modules, and to copy and distribute the resulting executable under\n+terms of your choice, provided that you also meet, for each linked\n+independent module, the terms and conditions of the license of that\n+module.  An independent module is a module which is not derived from\n+or based on this library.  If you modify this library, you may extend\n+this exception to your version of the library, but you are not\n+obligated to do so.  If you do not wish to do so, delete this\n+exception statement from your version. */\n+\n+package javax.print.attribute.standard;\n+\n+import javax.print.attribute.EnumSyntax;\n+import javax.print.attribute.PrintJobAttribute;\n+\n+\n+/**\n+ * @author Michael Koch (konqueror@gmx.de)\n+ */\n+public class JobState extends EnumSyntax\n+  implements PrintJobAttribute\n+{\n+  private static final long serialVersionUID = 400465010094018920L;\n+\n+  public static final JobState UNKNOWN = new JobState(0);\n+  public static final JobState PENDING = new JobState(1);\n+  public static final JobState PENDING_HELD = new JobState(2);\n+  public static final JobState PROCESSING = new JobState(3);\n+  public static final JobState PROCESSING_STOPPED = new JobState(4);\n+  public static final JobState CANCELED = new JobState(5);\n+  public static final JobState ABORTED = new JobState(6);\n+  public static final JobState COMPLETED = new JobState(7);\n+\n+  /**\n+   * Constructs a <code>JobState</code> object.\n+   */\n+  protected JobState(int value)\n+  {\n+    super(value);\n+  }\n+\n+  /**\n+   * Returns category of this class.\n+   *\n+   * @return the class <code>JobState</code> itself\n+   */\n+  public final Class getCategory()\n+  {\n+    return JobState.class;\n+  }\n+\n+  /**\n+   * Returns the name of this attribute.\n+   *\n+   * @return the name\n+   */\n+  public final String getName()\n+  {\n+    return \"job-state\";\n+  }\n+}"}, {"sha": "aa2fd098cd5860251d39a53b074f4918b5924a6f", "filename": "libjava/javax/print/attribute/standard/JobStateReason.java", "status": "added", "additions": 81, "deletions": 0, "changes": 81, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/85ff6f624e23ae016b859f4829dd6f177b24c8b7/libjava%2Fjavax%2Fprint%2Fattribute%2Fstandard%2FJobStateReason.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/85ff6f624e23ae016b859f4829dd6f177b24c8b7/libjava%2Fjavax%2Fprint%2Fattribute%2Fstandard%2FJobStateReason.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fprint%2Fattribute%2Fstandard%2FJobStateReason.java?ref=85ff6f624e23ae016b859f4829dd6f177b24c8b7", "patch": "@@ -0,0 +1,81 @@\n+/* JobStateReason.java --\n+   Copyright (C) 2004 Free Software Foundation, Inc.\n+\n+This file is part of GNU Classpath.\n+\n+GNU Classpath is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2, or (at your option)\n+any later version.\n+\n+GNU Classpath is distributed in the hope that it will be useful, but\n+WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GNU Classpath; see the file COPYING.  If not, write to the\n+Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA\n+02111-1307 USA.\n+\n+Linking this library statically or dynamically with other modules is\n+making a combined work based on this library.  Thus, the terms and\n+conditions of the GNU General Public License cover the whole\n+combination.\n+\n+As a special exception, the copyright holders of this library give you\n+permission to link this library with independent modules to produce an\n+executable, regardless of the license terms of these independent\n+modules, and to copy and distribute the resulting executable under\n+terms of your choice, provided that you also meet, for each linked\n+independent module, the terms and conditions of the license of that\n+module.  An independent module is a module which is not derived from\n+or based on this library.  If you modify this library, you may extend\n+this exception to your version of the library, but you are not\n+obligated to do so.  If you do not wish to do so, delete this\n+exception statement from your version. */\n+\n+package javax.print.attribute.standard;\n+\n+import javax.print.attribute.Attribute;\n+import javax.print.attribute.EnumSyntax;\n+\n+\n+/**\n+ * @author Michael Koch (konqueror@gmx.de)\n+ */\n+public class JobStateReason extends EnumSyntax\n+  implements Attribute\n+{\n+  private static final long serialVersionUID = -8765894420449009168L;\n+\n+  public static final JobStateReason ABORTED_BY_SYSTEM = new JobStateReason(1);\n+\n+  /**\n+   * Constructs a <code>JobStateReason</code> object.\n+   */\n+  protected JobStateReason(int value)\n+  {\n+    super(value);\n+  }\n+\n+  /**\n+   * Returns category of this class.\n+   *\n+   * @return the class <code>JobStateReason</code> itself\n+   */\n+  public final Class getCategory()\n+  {\n+    return JobStateReason.class;\n+  }\n+\n+  /**\n+   * Returns the name of this attribute.\n+   *\n+   * @return the name\n+   */\n+  public final String getName()\n+  {\n+    return \"job-state-reason\";\n+  }\n+}"}, {"sha": "fcfaff516ac7c5ccd5bdd3eca2e8d56bb7ca3a8a", "filename": "libjava/javax/print/attribute/standard/JobStateReasons.java", "status": "added", "additions": 71, "deletions": 0, "changes": 71, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/85ff6f624e23ae016b859f4829dd6f177b24c8b7/libjava%2Fjavax%2Fprint%2Fattribute%2Fstandard%2FJobStateReasons.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/85ff6f624e23ae016b859f4829dd6f177b24c8b7/libjava%2Fjavax%2Fprint%2Fattribute%2Fstandard%2FJobStateReasons.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fprint%2Fattribute%2Fstandard%2FJobStateReasons.java?ref=85ff6f624e23ae016b859f4829dd6f177b24c8b7", "patch": "@@ -0,0 +1,71 @@\n+/* JobStateReasons.java --\n+   Copyright (C) 2004 Free Software Foundation, Inc.\n+\n+This file is part of GNU Classpath.\n+\n+GNU Classpath is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2, or (at your option)\n+any later version.\n+\n+GNU Classpath is distributed in the hope that it will be useful, but\n+WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GNU Classpath; see the file COPYING.  If not, write to the\n+Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA\n+02111-1307 USA.\n+\n+Linking this library statically or dynamically with other modules is\n+making a combined work based on this library.  Thus, the terms and\n+conditions of the GNU General Public License cover the whole\n+combination.\n+\n+As a special exception, the copyright holders of this library give you\n+permission to link this library with independent modules to produce an\n+executable, regardless of the license terms of these independent\n+modules, and to copy and distribute the resulting executable under\n+terms of your choice, provided that you also meet, for each linked\n+independent module, the terms and conditions of the license of that\n+module.  An independent module is a module which is not derived from\n+or based on this library.  If you modify this library, you may extend\n+this exception to your version of the library, but you are not\n+obligated to do so.  If you do not wish to do so, delete this\n+exception statement from your version. */\n+\n+package javax.print.attribute.standard;\n+\n+import java.util.HashSet;\n+import javax.print.attribute.PrintJobAttribute;\n+\n+\n+/**\n+ * @author Michael Koch (konqueror@gmx.de)\n+ */\n+public final class JobStateReasons extends HashSet\n+  implements PrintJobAttribute\n+{\n+  private static final long serialVersionUID = 8849088261264331812L;\n+\n+  /**\n+   * Returns category of this class.\n+   *\n+   * @return the class <code>ColorSupported</code> itself\n+   */\n+  public final Class getCategory()\n+  {\n+    return JobStateReasons.class;\n+  }\n+\n+  /**\n+   * Returns the name of this attribute.\n+   *\n+   * @return the name\n+   */\n+  public final String getName()\n+  {\n+    return \"job-state-reasons\";\n+  }\n+}"}, {"sha": "c9604570b8b8bbcaacc552ca368b27cf11cb8f36", "filename": "libjava/javax/print/attribute/standard/Media.java", "status": "added", "additions": 81, "deletions": 0, "changes": 81, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/85ff6f624e23ae016b859f4829dd6f177b24c8b7/libjava%2Fjavax%2Fprint%2Fattribute%2Fstandard%2FMedia.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/85ff6f624e23ae016b859f4829dd6f177b24c8b7/libjava%2Fjavax%2Fprint%2Fattribute%2Fstandard%2FMedia.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fprint%2Fattribute%2Fstandard%2FMedia.java?ref=85ff6f624e23ae016b859f4829dd6f177b24c8b7", "patch": "@@ -0,0 +1,81 @@\n+/* Media.java --\n+   Copyright (C) 2004 Free Software Foundation, Inc.\n+\n+This file is part of GNU Classpath.\n+\n+GNU Classpath is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2, or (at your option)\n+any later version.\n+\n+GNU Classpath is distributed in the hope that it will be useful, but\n+WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GNU Classpath; see the file COPYING.  If not, write to the\n+Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA\n+02111-1307 USA.\n+\n+Linking this library statically or dynamically with other modules is\n+making a combined work based on this library.  Thus, the terms and\n+conditions of the GNU General Public License cover the whole\n+combination.\n+\n+As a special exception, the copyright holders of this library give you\n+permission to link this library with independent modules to produce an\n+executable, regardless of the license terms of these independent\n+modules, and to copy and distribute the resulting executable under\n+terms of your choice, provided that you also meet, for each linked\n+independent module, the terms and conditions of the license of that\n+module.  An independent module is a module which is not derived from\n+or based on this library.  If you modify this library, you may extend\n+this exception to your version of the library, but you are not\n+obligated to do so.  If you do not wish to do so, delete this\n+exception statement from your version. */\n+\n+package javax.print.attribute.standard;\n+\n+import javax.print.attribute.DocAttribute;\n+import javax.print.attribute.EnumSyntax;\n+import javax.print.attribute.PrintJobAttribute;\n+import javax.print.attribute.PrintRequestAttribute;\n+\n+\n+/**\n+ * @author Michael Koch (konqueror@gmx.de)\n+ */\n+public abstract class Media extends EnumSyntax\n+  implements DocAttribute, PrintRequestAttribute, PrintJobAttribute\n+{\n+  private static final long serialVersionUID = -2823970704630722439L;\n+\n+  /**\n+   * Constructs a <code>Media</code> object.\n+   */\n+  protected Media(int value)\n+  {\n+    super(value);\n+  }\n+\n+  /**\n+   * Returns category of this class.\n+   *\n+   * @return the class <code>Media</code> itself\n+   */\n+  public final Class getCategory()\n+  {\n+    return Media.class;\n+  }\n+\n+  /**\n+   * Returns the name of this attribute.\n+   *\n+   * @return the name\n+   */\n+  public final String getName()\n+  {\n+    return \"media\";\n+  }\n+}"}, {"sha": "1d746901961b4322a0b802c7f82341700cd7d0d5", "filename": "libjava/javax/print/attribute/standard/MediaSizeName.java", "status": "added", "additions": 135, "deletions": 0, "changes": 135, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/85ff6f624e23ae016b859f4829dd6f177b24c8b7/libjava%2Fjavax%2Fprint%2Fattribute%2Fstandard%2FMediaSizeName.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/85ff6f624e23ae016b859f4829dd6f177b24c8b7/libjava%2Fjavax%2Fprint%2Fattribute%2Fstandard%2FMediaSizeName.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fprint%2Fattribute%2Fstandard%2FMediaSizeName.java?ref=85ff6f624e23ae016b859f4829dd6f177b24c8b7", "patch": "@@ -0,0 +1,135 @@\n+/* MediaSizeName.java --\n+   Copyright (C) 2004 Free Software Foundation, Inc.\n+\n+This file is part of GNU Classpath.\n+\n+GNU Classpath is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2, or (at your option)\n+any later version.\n+\n+GNU Classpath is distributed in the hope that it will be useful, but\n+WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GNU Classpath; see the file COPYING.  If not, write to the\n+Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA\n+02111-1307 USA.\n+\n+Linking this library statically or dynamically with other modules is\n+making a combined work based on this library.  Thus, the terms and\n+conditions of the GNU General Public License cover the whole\n+combination.\n+\n+As a special exception, the copyright holders of this library give you\n+permission to link this library with independent modules to produce an\n+executable, regardless of the license terms of these independent\n+modules, and to copy and distribute the resulting executable under\n+terms of your choice, provided that you also meet, for each linked\n+independent module, the terms and conditions of the license of that\n+module.  An independent module is a module which is not derived from\n+or based on this library.  If you modify this library, you may extend\n+this exception to your version of the library, but you are not\n+obligated to do so.  If you do not wish to do so, delete this\n+exception statement from your version. */\n+\n+package javax.print.attribute.standard;\n+\n+/**\n+ * @author Michael Koch (konqueror@gmx.de)\n+ */\n+public class MediaSizeName extends Media\n+{\n+  private static final long serialVersionUID = 2778798329756942747L;\n+\n+  public static final MediaSizeName ISO_A0 = new MediaSizeName(0);\n+  public static final MediaSizeName ISO_A1 = new MediaSizeName(1);\n+  public static final MediaSizeName ISO_A2 = new MediaSizeName(2);\n+  public static final MediaSizeName ISO_A3 = new MediaSizeName(3);\n+  public static final MediaSizeName ISO_A4 = new MediaSizeName(4);\n+  public static final MediaSizeName ISO_A5 = new MediaSizeName(5);\n+  public static final MediaSizeName ISO_A6 = new MediaSizeName(6);\n+  public static final MediaSizeName ISO_A7 = new MediaSizeName(7);\n+  public static final MediaSizeName ISO_A8 = new MediaSizeName(8);\n+  public static final MediaSizeName ISO_A9 = new MediaSizeName(9);\n+  public static final MediaSizeName ISO_A10 = new MediaSizeName(10);\n+  public static final MediaSizeName ISO_B0 = new MediaSizeName(11);\n+  public static final MediaSizeName ISO_B1 = new MediaSizeName(12);\n+  public static final MediaSizeName ISO_B2 = new MediaSizeName(13);\n+  public static final MediaSizeName ISO_B3 = new MediaSizeName(14);\n+  public static final MediaSizeName ISO_B4 = new MediaSizeName(15);\n+  public static final MediaSizeName ISO_B5 = new MediaSizeName(16);\n+  public static final MediaSizeName ISO_B6 = new MediaSizeName(17);\n+  public static final MediaSizeName ISO_B7 = new MediaSizeName(18);\n+  public static final MediaSizeName ISO_B8 = new MediaSizeName(19);\n+  public static final MediaSizeName ISO_B9 = new MediaSizeName(20);\n+  public static final MediaSizeName ISO_B10 = new MediaSizeName(21);\n+  public static final MediaSizeName JIS_B0 = new MediaSizeName(22);\n+  public static final MediaSizeName JIS_B1 = new MediaSizeName(23);\n+  public static final MediaSizeName JIS_B2 = new MediaSizeName(24);\n+  public static final MediaSizeName JIS_B3 = new MediaSizeName(25);\n+  public static final MediaSizeName JIS_B4 = new MediaSizeName(26);\n+  public static final MediaSizeName JIS_B5 = new MediaSizeName(27);\n+  public static final MediaSizeName JIS_B6 = new MediaSizeName(28);\n+  public static final MediaSizeName JIS_B7 = new MediaSizeName(29);\n+  public static final MediaSizeName JIS_B8 = new MediaSizeName(30);\n+  public static final MediaSizeName JIS_B9 = new MediaSizeName(31);\n+  public static final MediaSizeName JIS_B10 = new MediaSizeName(32);\n+  public static final MediaSizeName ISO_C0 = new MediaSizeName(33);\n+  public static final MediaSizeName ISO_C1 = new MediaSizeName(34);\n+  public static final MediaSizeName ISO_C2 = new MediaSizeName(35);\n+  public static final MediaSizeName ISO_C3 = new MediaSizeName(36);\n+  public static final MediaSizeName ISO_C4 = new MediaSizeName(37);\n+  public static final MediaSizeName ISO_C5 = new MediaSizeName(38);\n+  public static final MediaSizeName ISO_C6 = new MediaSizeName(39);\n+  public static final MediaSizeName NA_LETTER = new MediaSizeName(40);\n+  public static final MediaSizeName NA_LEGAL = new MediaSizeName(41);\n+  public static final MediaSizeName EXECUTIVE = new MediaSizeName(42);\n+  public static final MediaSizeName LEDGER = new MediaSizeName(43);\n+  public static final MediaSizeName TABLOID = new MediaSizeName(44);\n+  public static final MediaSizeName INVOICE = new MediaSizeName(45);\n+  public static final MediaSizeName FOLIO = new MediaSizeName(46);\n+  public static final MediaSizeName QUARTO = new MediaSizeName(47);\n+  public static final MediaSizeName JAPANESE_POSTCARD = new MediaSizeName(48);\n+  public static final MediaSizeName JAPANESE_DOUBLE_POSTCARD =\n+    new MediaSizeName(49);\n+  public static final MediaSizeName A = new MediaSizeName(50);\n+  public static final MediaSizeName B = new MediaSizeName(51);\n+  public static final MediaSizeName C = new MediaSizeName(52);\n+  public static final MediaSizeName D = new MediaSizeName(53);\n+  public static final MediaSizeName E = new MediaSizeName(54);\n+  public static final MediaSizeName ISO_DESIGNATED_LONG =\n+    new MediaSizeName(55);\n+  public static final MediaSizeName ITALY_ENVELOPE = new MediaSizeName(56);\n+  public static final MediaSizeName MONARCH_ENVELOPE = new MediaSizeName(57);\n+  public static final MediaSizeName PERSONAL_ENVELOPE = new MediaSizeName(58);\n+  public static final MediaSizeName NA_NUMBER_9_ENVELOPE =\n+    new MediaSizeName(59);\n+  public static final MediaSizeName NA_NUMBER_10_ENVELOPE =\n+    new MediaSizeName(60);\n+  public static final MediaSizeName NA_NUMBER_11_ENVELOPE =\n+    new MediaSizeName(61);\n+  public static final MediaSizeName NA_NUMBER_12_ENVELOPE =\n+    new MediaSizeName(62);\n+  public static final MediaSizeName NA_NUMBER_14_ENVELOPE =\n+    new MediaSizeName(63);\n+  public static final MediaSizeName NA_6X9_ENVELOPE = new MediaSizeName(64);\n+  public static final MediaSizeName NA_7X9_ENVELOPE = new MediaSizeName(65);\n+  public static final MediaSizeName NA_9X11_ENVELOPE = new MediaSizeName(66);\n+  public static final MediaSizeName NA_9X12_ENVELOPE = new MediaSizeName(67);\n+  public static final MediaSizeName NA_10X13_ENVELOPE = new MediaSizeName(68);\n+  public static final MediaSizeName NA_10X14_ENVELOPE = new MediaSizeName(69);\n+  public static final MediaSizeName NA_10X15_ENVELOPE = new MediaSizeName(70);\n+  public static final MediaSizeName NA_5X7 = new MediaSizeName(71);\n+  public static final MediaSizeName NA_8X10 = new MediaSizeName(72);\n+\n+  /**\n+   * Constructs a <code>MediaSizeName</code> object.\n+   */\n+  protected MediaSizeName(int value)\n+  {\n+    super(value);\n+  }\n+}"}, {"sha": "a064b214ae1304cd0ed8d50dc097fd15216982ae", "filename": "libjava/javax/print/attribute/standard/MultipleDocumentHandling.java", "status": "added", "additions": 83, "deletions": 0, "changes": 83, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/85ff6f624e23ae016b859f4829dd6f177b24c8b7/libjava%2Fjavax%2Fprint%2Fattribute%2Fstandard%2FMultipleDocumentHandling.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/85ff6f624e23ae016b859f4829dd6f177b24c8b7/libjava%2Fjavax%2Fprint%2Fattribute%2Fstandard%2FMultipleDocumentHandling.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fprint%2Fattribute%2Fstandard%2FMultipleDocumentHandling.java?ref=85ff6f624e23ae016b859f4829dd6f177b24c8b7", "patch": "@@ -0,0 +1,83 @@\n+/* MultipleDocumentHandling.java --\n+   Copyright (C) 2004 Free Software Foundation, Inc.\n+\n+This file is part of GNU Classpath.\n+\n+GNU Classpath is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2, or (at your option)\n+any later version.\n+\n+GNU Classpath is distributed in the hope that it will be useful, but\n+WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GNU Classpath; see the file COPYING.  If not, write to the\n+Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA\n+02111-1307 USA.\n+\n+Linking this library statically or dynamically with other modules is\n+making a combined work based on this library.  Thus, the terms and\n+conditions of the GNU General Public License cover the whole\n+combination.\n+\n+As a special exception, the copyright holders of this library give you\n+permission to link this library with independent modules to produce an\n+executable, regardless of the license terms of these independent\n+modules, and to copy and distribute the resulting executable under\n+terms of your choice, provided that you also meet, for each linked\n+independent module, the terms and conditions of the license of that\n+module.  An independent module is a module which is not derived from\n+or based on this library.  If you modify this library, you may extend\n+this exception to your version of the library, but you are not\n+obligated to do so.  If you do not wish to do so, delete this\n+exception statement from your version. */\n+\n+package javax.print.attribute.standard;\n+\n+import javax.print.attribute.EnumSyntax;\n+import javax.print.attribute.PrintJobAttribute;\n+import javax.print.attribute.PrintRequestAttribute;\n+\n+\n+/**\n+ * @author Michael Koch (konqueror@gmx.de)\n+ */\n+public class MultipleDocumentHandling extends EnumSyntax\n+  implements PrintJobAttribute, PrintRequestAttribute\n+{\n+  private static final long serialVersionUID = 8098326460746413466L;\n+\n+  public static final MultipleDocumentHandling SEPARATE_DOCUMENTS_COLLATED_COPIES =\n+    new MultipleDocumentHandling(2);\n+\n+    /**\n+     * Constructs a <code>MultipleDocumentHandling</code> object.\n+     */\n+  protected MultipleDocumentHandling(int value)\n+  {\n+    super(value);\n+  }\n+\n+  /**\n+   * Returns category of this class.\n+   *\n+   * @return the class <code>MultipleDocumentHandling</code> itself\n+   */\n+  public final Class getCategory()\n+  {\n+    return MultipleDocumentHandling.class;\n+  }\n+\n+  /**\n+   * Returns the name of this attribute.\n+   *\n+   * @return the name\n+   */\n+  public final String getName()\n+  {\n+    return \"multiple-document-handling\";\n+  }\n+}"}, {"sha": "22b15aba50fb452fbc5f7a78f24dbb618c01cedf", "filename": "libjava/javax/print/attribute/standard/NumberOfDocuments.java", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/85ff6f624e23ae016b859f4829dd6f177b24c8b7/libjava%2Fjavax%2Fprint%2Fattribute%2Fstandard%2FNumberOfDocuments.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/85ff6f624e23ae016b859f4829dd6f177b24c8b7/libjava%2Fjavax%2Fprint%2Fattribute%2Fstandard%2FNumberOfDocuments.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fprint%2Fattribute%2Fstandard%2FNumberOfDocuments.java?ref=85ff6f624e23ae016b859f4829dd6f177b24c8b7", "patch": "@@ -68,7 +68,7 @@ public NumberOfDocuments(int value)\n    *\n    * @param obj the object to test\n    *\n-   * @returns true if both objects are equal, false otherwise.\n+   * @return true if both objects are equal, false otherwise.\n    */\n   public boolean equals(Object obj)\n   {"}, {"sha": "b54089a71e1bbc64b5b34a2c749b06b4d8fd55cd", "filename": "libjava/javax/print/attribute/standard/NumberOfInterveningJobs.java", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/85ff6f624e23ae016b859f4829dd6f177b24c8b7/libjava%2Fjavax%2Fprint%2Fattribute%2Fstandard%2FNumberOfInterveningJobs.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/85ff6f624e23ae016b859f4829dd6f177b24c8b7/libjava%2Fjavax%2Fprint%2Fattribute%2Fstandard%2FNumberOfInterveningJobs.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fprint%2Fattribute%2Fstandard%2FNumberOfInterveningJobs.java?ref=85ff6f624e23ae016b859f4829dd6f177b24c8b7", "patch": "@@ -1,5 +1,5 @@\n /* NumberOfInterveningJobs.java -- \n-   Copyright (C) 2003 Free Software Foundation, Inc.\n+   Copyright (C) 2003, 2004  Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -49,7 +49,7 @@ public final class NumberOfInterveningJobs extends IntegerSyntax\n   private static final long serialVersionUID = 2568141124844982746L;\n   \n   /**\n-   * Creates a <code>QueuedJobCount</code> object.\n+   * Creates a <code>NumberOfInterveningJobs</code> object.\n    *\n    * @param value the number of intervening jobs\n    *\n@@ -68,7 +68,7 @@ public NumberOfInterveningJobs(int value)\n    *\n    * @param obj the object to test\n    *\n-   * @returns true if both objects are equal, false otherwise.\n+   * @return true if both objects are equal, false otherwise.\n    */\n   public boolean equals(Object obj)\n   {"}, {"sha": "681207bd9cc05fc2f5b7e50b365dc0c943eefe72", "filename": "libjava/javax/print/attribute/standard/NumberUp.java", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/85ff6f624e23ae016b859f4829dd6f177b24c8b7/libjava%2Fjavax%2Fprint%2Fattribute%2Fstandard%2FNumberUp.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/85ff6f624e23ae016b859f4829dd6f177b24c8b7/libjava%2Fjavax%2Fprint%2Fattribute%2Fstandard%2FNumberUp.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fprint%2Fattribute%2Fstandard%2FNumberUp.java?ref=85ff6f624e23ae016b859f4829dd6f177b24c8b7", "patch": "@@ -68,7 +68,7 @@ public NumberUp(int value)\n    *\n    * @param obj the object to test\n    *\n-   * @returns true if both objects are equal, false otherwise.\n+   * @return true if both objects are equal, false otherwise.\n    */\n   public boolean equals(Object obj)\n   {"}, {"sha": "8418325e7141030c58689e6ba7de91a084048d4b", "filename": "libjava/javax/print/attribute/standard/NumberUpSupported.java", "status": "added", "additions": 95, "deletions": 0, "changes": 95, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/85ff6f624e23ae016b859f4829dd6f177b24c8b7/libjava%2Fjavax%2Fprint%2Fattribute%2Fstandard%2FNumberUpSupported.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/85ff6f624e23ae016b859f4829dd6f177b24c8b7/libjava%2Fjavax%2Fprint%2Fattribute%2Fstandard%2FNumberUpSupported.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fprint%2Fattribute%2Fstandard%2FNumberUpSupported.java?ref=85ff6f624e23ae016b859f4829dd6f177b24c8b7", "patch": "@@ -0,0 +1,95 @@\n+/* NumberUpSupported.java --\n+   Copyright (C) 2004 Free Software Foundation, Inc.\n+\n+This file is part of GNU Classpath.\n+\n+GNU Classpath is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2, or (at your option)\n+any later version.\n+\n+GNU Classpath is distributed in the hope that it will be useful, but\n+WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GNU Classpath; see the file COPYING.  If not, write to the\n+Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA\n+02111-1307 USA.\n+\n+Linking this library statically or dynamically with other modules is\n+making a combined work based on this library.  Thus, the terms and\n+conditions of the GNU General Public License cover the whole\n+combination.\n+\n+As a special exception, the copyright holders of this library give you\n+permission to link this library with independent modules to produce an\n+executable, regardless of the license terms of these independent\n+modules, and to copy and distribute the resulting executable under\n+terms of your choice, provided that you also meet, for each linked\n+independent module, the terms and conditions of the license of that\n+module.  An independent module is a module which is not derived from\n+or based on this library.  If you modify this library, you may extend\n+this exception to your version of the library, but you are not\n+obligated to do so.  If you do not wish to do so, delete this\n+exception statement from your version. */\n+\n+package javax.print.attribute.standard;\n+\n+import javax.print.attribute.SetOfIntegerSyntax;\n+import javax.print.attribute.SupportedValuesAttribute;\n+\n+\n+/**\n+ * @author Michael Koch (konqueror@gmx.de)\n+ */\n+public final class NumberUpSupported extends SetOfIntegerSyntax\n+  implements SupportedValuesAttribute\n+{\n+  private static final long serialVersionUID = -1041573395759141805L;\n+\n+  /**\n+   * Constructs a <code>NumberUp</code> object.\n+   */\n+  public NumberUpSupported(int member)\n+  {\n+    super(member);\n+  }\n+\n+  /**\n+   * Constructs a <code>NumberUp</code> object.\n+   */\n+  public NumberUpSupported(int[][] members)\n+  {\n+    super(members);\n+  }\n+\n+  /**\n+   * Constructs a <code>NumberUp</code> object.\n+   */\n+  public NumberUpSupported(int lowerBound, int upperBound)\n+  {\n+    super(lowerBound, upperBound);\n+  }\n+\n+  /**\n+   * Returns category of this class.\n+   *\n+   * @return the class <code>NumberUpSupported</code> itself\n+   */\n+  public final Class getCategory()\n+  {\n+    return NumberUpSupported.class;\n+  }\n+\n+  /**\n+   * Returns the name of this attribute.\n+   *\n+   * @return the name\n+   */\n+  public final String getName()\n+  {\n+    return \"number-up-supported\";\n+  }\n+}"}, {"sha": "76aef1d066eff8c3ac649d51522fd86d76b46d11", "filename": "libjava/javax/print/attribute/standard/OrientationRequested.java", "status": "added", "additions": 90, "deletions": 0, "changes": 90, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/85ff6f624e23ae016b859f4829dd6f177b24c8b7/libjava%2Fjavax%2Fprint%2Fattribute%2Fstandard%2FOrientationRequested.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/85ff6f624e23ae016b859f4829dd6f177b24c8b7/libjava%2Fjavax%2Fprint%2Fattribute%2Fstandard%2FOrientationRequested.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fprint%2Fattribute%2Fstandard%2FOrientationRequested.java?ref=85ff6f624e23ae016b859f4829dd6f177b24c8b7", "patch": "@@ -0,0 +1,90 @@\n+/* OrientationRequested.java --\n+   Copyright (C) 2004 Free Software Foundation, Inc.\n+\n+This file is part of GNU Classpath.\n+\n+GNU Classpath is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2, or (at your option)\n+any later version.\n+\n+GNU Classpath is distributed in the hope that it will be useful, but\n+WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GNU Classpath; see the file COPYING.  If not, write to the\n+Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA\n+02111-1307 USA.\n+\n+Linking this library statically or dynamically with other modules is\n+making a combined work based on this library.  Thus, the terms and\n+conditions of the GNU General Public License cover the whole\n+combination.\n+\n+As a special exception, the copyright holders of this library give you\n+permission to link this library with independent modules to produce an\n+executable, regardless of the license terms of these independent\n+modules, and to copy and distribute the resulting executable under\n+terms of your choice, provided that you also meet, for each linked\n+independent module, the terms and conditions of the license of that\n+module.  An independent module is a module which is not derived from\n+or based on this library.  If you modify this library, you may extend\n+this exception to your version of the library, but you are not\n+obligated to do so.  If you do not wish to do so, delete this\n+exception statement from your version. */\n+\n+package javax.print.attribute.standard;\n+\n+import javax.print.attribute.DocAttribute;\n+import javax.print.attribute.EnumSyntax;\n+import javax.print.attribute.PrintJobAttribute;\n+import javax.print.attribute.PrintRequestAttribute;\n+\n+\n+/**\n+ * @author Michael Koch (konqueror@gmx.de)\n+ */\n+public final class OrientationRequested extends EnumSyntax\n+  implements DocAttribute, PrintRequestAttribute, PrintJobAttribute\n+{\n+  private static final long serialVersionUID = -4447437289862822276L;\n+\n+  public static final OrientationRequested PORTRAIT =\n+    new OrientationRequested(0);\n+  public static final OrientationRequested LANDSCAPE =\n+    new OrientationRequested(1);\n+  public static final OrientationRequested REVERSE_LANDSCAPE =\n+    new OrientationRequested(2);\n+  public static final OrientationRequested REVERSE_PORTRAIT =\n+    new OrientationRequested(3);\n+\n+    /**\n+     * Constructs a <code>OrientationRequested</code> object.\n+     */\n+  protected OrientationRequested(int value)\n+  {\n+    super(value);\n+  }\n+\n+  /**\n+   * Returns category of this class.\n+   *\n+   * @return the class <code>OrientationRequested</code> itself\n+   */\n+  public final Class getCategory()\n+  {\n+    return OrientationRequested.class;\n+  }\n+\n+  /**\n+   * Returns the name of this attribute.\n+   *\n+   * @return the name\n+   */\n+  public final String getName()\n+  {\n+    return \"orientation-requested\";\n+  }\n+}"}, {"sha": "f41b36646faf999b3bbb423618834b9448cef923", "filename": "libjava/javax/print/attribute/standard/OutputDeviceAssigned.java", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/85ff6f624e23ae016b859f4829dd6f177b24c8b7/libjava%2Fjavax%2Fprint%2Fattribute%2Fstandard%2FOutputDeviceAssigned.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/85ff6f624e23ae016b859f4829dd6f177b24c8b7/libjava%2Fjavax%2Fprint%2Fattribute%2Fstandard%2FOutputDeviceAssigned.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fprint%2Fattribute%2Fstandard%2FOutputDeviceAssigned.java?ref=85ff6f624e23ae016b859f4829dd6f177b24c8b7", "patch": "@@ -41,6 +41,9 @@\n import javax.print.attribute.PrintJobAttribute;\n import javax.print.attribute.TextSyntax;\n \n+/**\n+ * @author Michael Koch (konqueror@gmx.de)\n+ */\n public final class OutputDeviceAssigned extends TextSyntax\n   implements PrintJobAttribute\n {\n@@ -63,7 +66,7 @@ public OutputDeviceAssigned(String deviceName, Locale locale)\n    *\n    * @param obj the object to test\n    *\n-   * @returns true if both objects are equal, false otherwise.\n+   * @return true if both objects are equal, false otherwise.\n    */\n   public boolean equals(Object obj)\n   {"}, {"sha": "64bc05844666f638b0c4d5b9778977a19662971c", "filename": "libjava/javax/print/attribute/standard/PDLOverrideSupported.java", "status": "added", "additions": 84, "deletions": 0, "changes": 84, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/85ff6f624e23ae016b859f4829dd6f177b24c8b7/libjava%2Fjavax%2Fprint%2Fattribute%2Fstandard%2FPDLOverrideSupported.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/85ff6f624e23ae016b859f4829dd6f177b24c8b7/libjava%2Fjavax%2Fprint%2Fattribute%2Fstandard%2FPDLOverrideSupported.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fprint%2Fattribute%2Fstandard%2FPDLOverrideSupported.java?ref=85ff6f624e23ae016b859f4829dd6f177b24c8b7", "patch": "@@ -0,0 +1,84 @@\n+/* PDLOverrideSupported.java --\n+   Copyright (C) 2004 Free Software Foundation, Inc.\n+\n+This file is part of GNU Classpath.\n+\n+GNU Classpath is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2, or (at your option)\n+any later version.\n+\n+GNU Classpath is distributed in the hope that it will be useful, but\n+WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GNU Classpath; see the file COPYING.  If not, write to the\n+Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA\n+02111-1307 USA.\n+\n+Linking this library statically or dynamically with other modules is\n+making a combined work based on this library.  Thus, the terms and\n+conditions of the GNU General Public License cover the whole\n+combination.\n+\n+As a special exception, the copyright holders of this library give you\n+permission to link this library with independent modules to produce an\n+executable, regardless of the license terms of these independent\n+modules, and to copy and distribute the resulting executable under\n+terms of your choice, provided that you also meet, for each linked\n+independent module, the terms and conditions of the license of that\n+module.  An independent module is a module which is not derived from\n+or based on this library.  If you modify this library, you may extend\n+this exception to your version of the library, but you are not\n+obligated to do so.  If you do not wish to do so, delete this\n+exception statement from your version. */\n+\n+package javax.print.attribute.standard;\n+\n+import javax.print.attribute.EnumSyntax;\n+import javax.print.attribute.PrintServiceAttribute;\n+\n+\n+/**\n+ * @author Michael Koch (konqueror@gmx.de)\n+ */\n+public class PDLOverrideSupported extends EnumSyntax\n+  implements PrintServiceAttribute\n+{\n+  private static final long serialVersionUID = -4393264467928463934L;\n+\n+  public static final PDLOverrideSupported NOT_ATTEMPTED =\n+    new PDLOverrideSupported(0);\n+  public static final PDLOverrideSupported ATTEMPTED =\n+    new PDLOverrideSupported(0);\n+\n+  /**\n+   * Constructs a <code>PDLOverrideSupported</code> object.\n+   */\n+  protected PDLOverrideSupported(int value)\n+  {\n+    super(value);\n+  }\n+\n+  /**\n+   * Returns category of this class.\n+   *\n+   * @return the class <code>PDLOverrideSupported</code> itself\n+   */\n+  public final Class getCategory()\n+  {\n+    return PDLOverrideSupported.class;\n+  }\n+\n+  /**\n+   * Returns the name of this attribute.\n+   *\n+   * @return the name\n+   */\n+  public final String getName()\n+  {\n+    return \"pdl-override-supported\";\n+  }\n+}"}, {"sha": "e981fe261bfe770c81f3fd8215046ed0c40d3ab2", "filename": "libjava/javax/print/attribute/standard/PageRanges.java", "status": "added", "additions": 97, "deletions": 0, "changes": 97, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/85ff6f624e23ae016b859f4829dd6f177b24c8b7/libjava%2Fjavax%2Fprint%2Fattribute%2Fstandard%2FPageRanges.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/85ff6f624e23ae016b859f4829dd6f177b24c8b7/libjava%2Fjavax%2Fprint%2Fattribute%2Fstandard%2FPageRanges.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fprint%2Fattribute%2Fstandard%2FPageRanges.java?ref=85ff6f624e23ae016b859f4829dd6f177b24c8b7", "patch": "@@ -0,0 +1,97 @@\n+/* PageRanges.java --\n+   Copyright (C) 2004 Free Software Foundation, Inc.\n+\n+This file is part of GNU Classpath.\n+\n+GNU Classpath is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2, or (at your option)\n+any later version.\n+\n+GNU Classpath is distributed in the hope that it will be useful, but\n+WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GNU Classpath; see the file COPYING.  If not, write to the\n+Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA\n+02111-1307 USA.\n+\n+Linking this library statically or dynamically with other modules is\n+making a combined work based on this library.  Thus, the terms and\n+conditions of the GNU General Public License cover the whole\n+combination.\n+\n+As a special exception, the copyright holders of this library give you\n+permission to link this library with independent modules to produce an\n+executable, regardless of the license terms of these independent\n+modules, and to copy and distribute the resulting executable under\n+terms of your choice, provided that you also meet, for each linked\n+independent module, the terms and conditions of the license of that\n+module.  An independent module is a module which is not derived from\n+or based on this library.  If you modify this library, you may extend\n+this exception to your version of the library, but you are not\n+obligated to do so.  If you do not wish to do so, delete this\n+exception statement from your version. */\n+\n+\n+package javax.print.attribute.standard;\n+\n+import javax.print.attribute.DocAttribute;\n+import javax.print.attribute.PrintJobAttribute;\n+import javax.print.attribute.PrintRequestAttribute;\n+import javax.print.attribute.SetOfIntegerSyntax;\n+\n+/**\n+ * @author Michael Koch (konqueror@gmx.de)\n+ */\n+public final class PageRanges extends SetOfIntegerSyntax\n+  implements DocAttribute, PrintRequestAttribute, PrintJobAttribute\n+{\n+  private static final long serialVersionUID = 8639895197656148392L;\n+\n+  /**\n+   * Constructs a <code>PageRanges</code> object.\n+   */\n+  public PageRanges(int member)\n+  {\n+    super(member);\n+  }\n+\n+  /**\n+   * Constructs a <code>PageRanges</code> object.\n+   */\n+  public PageRanges(int[][] members)\n+  {\n+    super(members);\n+  }\n+\n+  /**\n+   * Constructs a <code>PageRanges</code> object.\n+   */\n+  public PageRanges(int lowerBound, int upperBound)\n+  {\n+    super(lowerBound, upperBound);\n+  }\n+\n+  /**\n+   * Returns category of this class.\n+   *\n+   * @return the class <code>PageRanges</code> itself\n+   */\n+  public final Class getCategory()\n+  {\n+    return PageRanges.class;\n+  }\n+\n+  /**\n+   * Returns the name of this attribute.\n+   *\n+   * @return the name\n+   */\n+  public final String getName()\n+  {\n+    return \"page-ranges\";\n+  }\n+}"}, {"sha": "9bb3b5fd7e53836b30cd83a7ea0af093862d9a2d", "filename": "libjava/javax/print/attribute/standard/PagesPerMinute.java", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/85ff6f624e23ae016b859f4829dd6f177b24c8b7/libjava%2Fjavax%2Fprint%2Fattribute%2Fstandard%2FPagesPerMinute.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/85ff6f624e23ae016b859f4829dd6f177b24c8b7/libjava%2Fjavax%2Fprint%2Fattribute%2Fstandard%2FPagesPerMinute.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fprint%2Fattribute%2Fstandard%2FPagesPerMinute.java?ref=85ff6f624e23ae016b859f4829dd6f177b24c8b7", "patch": "@@ -68,7 +68,7 @@ public PagesPerMinute(int value)\n    *\n    * @param obj the object to test\n    *\n-   * @returns true if both objects are equal, false otherwise.\n+   * @return true if both objects are equal, false otherwise.\n    */\n   public boolean equals(Object obj)\n   {"}, {"sha": "b85262abb15ba4e549380ccb35798dd600f40984", "filename": "libjava/javax/print/attribute/standard/PagesPerMinuteColor.java", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/85ff6f624e23ae016b859f4829dd6f177b24c8b7/libjava%2Fjavax%2Fprint%2Fattribute%2Fstandard%2FPagesPerMinuteColor.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/85ff6f624e23ae016b859f4829dd6f177b24c8b7/libjava%2Fjavax%2Fprint%2Fattribute%2Fstandard%2FPagesPerMinuteColor.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fprint%2Fattribute%2Fstandard%2FPagesPerMinuteColor.java?ref=85ff6f624e23ae016b859f4829dd6f177b24c8b7", "patch": "@@ -68,7 +68,7 @@ public PagesPerMinuteColor(int value)\n    *\n    * @param obj the object to test\n    *\n-   * @returns true if both objects are equal, false otherwise.\n+   * @return true if both objects are equal, false otherwise.\n    */\n   public boolean equals(Object obj)\n   {"}, {"sha": "0a13288bdf834b6b52ba5e79abfed4be31941270", "filename": "libjava/javax/print/attribute/standard/PresentationDirection.java", "status": "added", "additions": 97, "deletions": 0, "changes": 97, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/85ff6f624e23ae016b859f4829dd6f177b24c8b7/libjava%2Fjavax%2Fprint%2Fattribute%2Fstandard%2FPresentationDirection.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/85ff6f624e23ae016b859f4829dd6f177b24c8b7/libjava%2Fjavax%2Fprint%2Fattribute%2Fstandard%2FPresentationDirection.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fprint%2Fattribute%2Fstandard%2FPresentationDirection.java?ref=85ff6f624e23ae016b859f4829dd6f177b24c8b7", "patch": "@@ -0,0 +1,97 @@\n+/* PresentationDirection.java --\n+   Copyright (C) 2004 Free Software Foundation, Inc.\n+\n+This file is part of GNU Classpath.\n+\n+GNU Classpath is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2, or (at your option)\n+any later version.\n+\n+GNU Classpath is distributed in the hope that it will be useful, but\n+WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GNU Classpath; see the file COPYING.  If not, write to the\n+Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA\n+02111-1307 USA.\n+\n+Linking this library statically or dynamically with other modules is\n+making a combined work based on this library.  Thus, the terms and\n+conditions of the GNU General Public License cover the whole\n+combination.\n+\n+As a special exception, the copyright holders of this library give you\n+permission to link this library with independent modules to produce an\n+executable, regardless of the license terms of these independent\n+modules, and to copy and distribute the resulting executable under\n+terms of your choice, provided that you also meet, for each linked\n+independent module, the terms and conditions of the license of that\n+module.  An independent module is a module which is not derived from\n+or based on this library.  If you modify this library, you may extend\n+this exception to your version of the library, but you are not\n+obligated to do so.  If you do not wish to do so, delete this\n+exception statement from your version. */\n+\n+package javax.print.attribute.standard;\n+\n+import javax.print.attribute.EnumSyntax;\n+import javax.print.attribute.PrintJobAttribute;\n+import javax.print.attribute.PrintRequestAttribute;\n+\n+\n+/**\n+ * @author Michael Koch (konqueror@gmx.de)\n+ */\n+public final class PresentationDirection extends EnumSyntax\n+  implements PrintRequestAttribute, PrintJobAttribute\n+{\n+  private static final long serialVersionUID = 8294728067230931780L;\n+\n+  public static final PresentationDirection TOBOTTOM_TORIGHT =\n+    new PresentationDirection(0);\n+  public static final PresentationDirection TOBOTTOM_TOLEFT =\n+    new PresentationDirection(1);\n+  public static final PresentationDirection TOTOP_TORIGHT =\n+    new PresentationDirection(2);\n+  public static final PresentationDirection TOTOP_TOLEFT =\n+    new PresentationDirection(3);\n+  public static final PresentationDirection TORIGHT_TOBOTTOM =\n+    new PresentationDirection(4);\n+  public static final PresentationDirection TORIGHT_TOTOP =\n+    new PresentationDirection(5);\n+  public static final PresentationDirection TOLEFT_TOBOTTOM =\n+    new PresentationDirection(6);\n+  public static final PresentationDirection TOLEFT_TOTOP =\n+    new PresentationDirection(7);\n+\n+  /**\n+   * Constructs a <code>PresentationDirection</code> object.\n+   */\n+  private PresentationDirection(int value)\n+  {\n+    super(value);\n+  }\n+\n+  /**\n+   * Returns category of this class.\n+   *\n+   * @return the class <code>PresentationDirection</code> itself\n+   */\n+  public Class getCategory()\n+  {\n+    return PresentationDirection.class;\n+  }\n+\n+  /**\n+   * Returns the name of this attribute.\n+   *\n+   * @return the name\n+   */\n+  public String getName()\n+  {\n+    return \"presentation-direction\";\n+  }\n+}"}, {"sha": "e25329300bd8abe276fe92295306e13f6e6b6d05", "filename": "libjava/javax/print/attribute/standard/PrintQuality.java", "status": "added", "additions": 85, "deletions": 0, "changes": 85, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/85ff6f624e23ae016b859f4829dd6f177b24c8b7/libjava%2Fjavax%2Fprint%2Fattribute%2Fstandard%2FPrintQuality.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/85ff6f624e23ae016b859f4829dd6f177b24c8b7/libjava%2Fjavax%2Fprint%2Fattribute%2Fstandard%2FPrintQuality.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fprint%2Fattribute%2Fstandard%2FPrintQuality.java?ref=85ff6f624e23ae016b859f4829dd6f177b24c8b7", "patch": "@@ -0,0 +1,85 @@\n+/* PrintQuality.java --\n+   Copyright (C) 2004 Free Software Foundation, Inc.\n+\n+This file is part of GNU Classpath.\n+\n+GNU Classpath is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2, or (at your option)\n+any later version.\n+\n+GNU Classpath is distributed in the hope that it will be useful, but\n+WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GNU Classpath; see the file COPYING.  If not, write to the\n+Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA\n+02111-1307 USA.\n+\n+Linking this library statically or dynamically with other modules is\n+making a combined work based on this library.  Thus, the terms and\n+conditions of the GNU General Public License cover the whole\n+combination.\n+\n+As a special exception, the copyright holders of this library give you\n+permission to link this library with independent modules to produce an\n+executable, regardless of the license terms of these independent\n+modules, and to copy and distribute the resulting executable under\n+terms of your choice, provided that you also meet, for each linked\n+independent module, the terms and conditions of the license of that\n+module.  An independent module is a module which is not derived from\n+or based on this library.  If you modify this library, you may extend\n+this exception to your version of the library, but you are not\n+obligated to do so.  If you do not wish to do so, delete this\n+exception statement from your version. */\n+\n+package javax.print.attribute.standard;\n+\n+import javax.print.attribute.DocAttribute;\n+import javax.print.attribute.EnumSyntax;\n+import javax.print.attribute.PrintJobAttribute;\n+import javax.print.attribute.PrintRequestAttribute;\n+\n+\n+/**\n+ * @author Michael Koch (konqueror@gmx.de)\n+ */\n+public class PrintQuality extends EnumSyntax\n+  implements DocAttribute, PrintJobAttribute, PrintRequestAttribute\n+{\n+  private static final long serialVersionUID = -3072341285225858365L;\n+\n+  public static final PrintQuality DRAFT = new PrintQuality(0);\n+  public static final PrintQuality NORMAL = new PrintQuality(1);\n+  public static final PrintQuality HIGH = new PrintQuality(2);\n+\n+  /**\n+   * Constructs a <code>PrintQuality</code> object.\n+   */\n+  protected PrintQuality(int value)\n+  {\n+    super(value);\n+  }\n+\n+  /**\n+   * Returns category of this class.\n+   *\n+   * @return the class <code>PrintQuality</code> itself\n+   */\n+  public final Class getCategory()\n+  {\n+    return PrintQuality.class;\n+  }\n+\n+  /**\n+   * Returns name of this class.\n+   *\n+   * @return the string \"print-quality\"\n+   */\n+  public final String getName()\n+  {\n+    return \"print-quality\";\n+  }\n+}"}, {"sha": "c61d118c7c6e982fd9d14cc4e369d1bce1332fc9", "filename": "libjava/javax/print/attribute/standard/PrinterInfo.java", "status": "modified", "additions": 8, "deletions": 3, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/85ff6f624e23ae016b859f4829dd6f177b24c8b7/libjava%2Fjavax%2Fprint%2Fattribute%2Fstandard%2FPrinterInfo.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/85ff6f624e23ae016b859f4829dd6f177b24c8b7/libjava%2Fjavax%2Fprint%2Fattribute%2Fstandard%2FPrinterInfo.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fprint%2Fattribute%2Fstandard%2FPrinterInfo.java?ref=85ff6f624e23ae016b859f4829dd6f177b24c8b7", "patch": "@@ -41,6 +41,10 @@\n import javax.print.attribute.PrintServiceAttribute;\n import javax.print.attribute.TextSyntax;\n \n+\n+/**\n+ * @author Michael Koch (konqueror@gmx.de)\n+ */\n public final class PrinterInfo extends TextSyntax\n   implements PrintServiceAttribute\n {\n@@ -50,6 +54,7 @@ public final class PrinterInfo extends TextSyntax\n    * Creates a <code>PrinterInfo</code> object.\n    *\n    * @param printerInfo the printer info\n+   * @param locale the locale of the info, null means default locale\n    *\n    * @exception NullPointerException if printerInfo is null\n    */\n@@ -63,7 +68,7 @@ public PrinterInfo(String printerInfo, Locale locale)\n    *\n    * @param obj the object to test\n    *\n-   * @returns true if both objects are equal, false otherwise.\n+   * @return true if both objects are equal, false otherwise.\n    */\n   public boolean equals(Object obj)\n   {\n@@ -78,7 +83,7 @@ public boolean equals(Object obj)\n    *\n    * @return the class <code>PrinterInfo</code> itself\n    */\n-  public final Class getCategory()\n+  public Class getCategory()\n   {\n     return PrinterInfo.class;\n   }\n@@ -88,7 +93,7 @@ public final Class getCategory()\n    *\n    * @return the string \"printer-info\"\n    */\n-  public final String getName()\n+  public String getName()\n   {\n     return \"printer-info\";\n   }"}, {"sha": "eafc643d9b83b69e1a639c5e91443266dce5d0e0", "filename": "libjava/javax/print/attribute/standard/PrinterIsAcceptingJobs.java", "status": "added", "additions": 84, "deletions": 0, "changes": 84, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/85ff6f624e23ae016b859f4829dd6f177b24c8b7/libjava%2Fjavax%2Fprint%2Fattribute%2Fstandard%2FPrinterIsAcceptingJobs.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/85ff6f624e23ae016b859f4829dd6f177b24c8b7/libjava%2Fjavax%2Fprint%2Fattribute%2Fstandard%2FPrinterIsAcceptingJobs.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fprint%2Fattribute%2Fstandard%2FPrinterIsAcceptingJobs.java?ref=85ff6f624e23ae016b859f4829dd6f177b24c8b7", "patch": "@@ -0,0 +1,84 @@\n+/* PrinterIsAcceptingJobs.java --\n+   Copyright (C) 2004 Free Software Foundation, Inc.\n+\n+This file is part of GNU Classpath.\n+\n+GNU Classpath is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2, or (at your option)\n+any later version.\n+\n+GNU Classpath is distributed in the hope that it will be useful, but\n+WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GNU Classpath; see the file COPYING.  If not, write to the\n+Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA\n+02111-1307 USA.\n+\n+Linking this library statically or dynamically with other modules is\n+making a combined work based on this library.  Thus, the terms and\n+conditions of the GNU General Public License cover the whole\n+combination.\n+\n+As a special exception, the copyright holders of this library give you\n+permission to link this library with independent modules to produce an\n+executable, regardless of the license terms of these independent\n+modules, and to copy and distribute the resulting executable under\n+terms of your choice, provided that you also meet, for each linked\n+independent module, the terms and conditions of the license of that\n+module.  An independent module is a module which is not derived from\n+or based on this library.  If you modify this library, you may extend\n+this exception to your version of the library, but you are not\n+obligated to do so.  If you do not wish to do so, delete this\n+exception statement from your version. */\n+\n+package javax.print.attribute.standard;\n+\n+import javax.print.attribute.EnumSyntax;\n+import javax.print.attribute.PrintServiceAttribute;\n+\n+\n+/**\n+ * @author Michael Koch (konqueror@gmx.de)\n+ */\n+public class PrinterIsAcceptingJobs extends EnumSyntax\n+  implements PrintServiceAttribute\n+{\n+  private static final long serialVersionUID = -5052010680537678061L;\n+\n+  public static final PrinterIsAcceptingJobs NOT_ACCEPTING_JOBS =\n+    new PrinterIsAcceptingJobs(0);\n+  public static final PrinterIsAcceptingJobs ACCEPTING_JOBS =\n+    new PrinterIsAcceptingJobs(1);\n+\n+  /**\n+   * Constructs a <code>PrinterIsAcceptingJobs</code> object.\n+   */\n+  protected PrinterIsAcceptingJobs(int value)\n+  {\n+    super(value);\n+  }\n+\n+  /**\n+   * Returns category of this class.\n+   *\n+   * @return the class <code>PrinterIsAcceptingJobs</code> itself\n+   */\n+  public final Class getCategory()\n+  {\n+    return PrinterIsAcceptingJobs.class;\n+  }\n+\n+  /**\n+   * Returns the name of this attribute.\n+   *\n+   * @return the name\n+   */\n+  public final String getName()\n+  {\n+    return \"printer-is-accepting-jobs\";\n+  }\n+}"}, {"sha": "4f6976bc0d5a09062d5eadc0c7f7da31ff904904", "filename": "libjava/javax/print/attribute/standard/PrinterLocation.java", "status": "modified", "additions": 7, "deletions": 3, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/85ff6f624e23ae016b859f4829dd6f177b24c8b7/libjava%2Fjavax%2Fprint%2Fattribute%2Fstandard%2FPrinterLocation.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/85ff6f624e23ae016b859f4829dd6f177b24c8b7/libjava%2Fjavax%2Fprint%2Fattribute%2Fstandard%2FPrinterLocation.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fprint%2Fattribute%2Fstandard%2FPrinterLocation.java?ref=85ff6f624e23ae016b859f4829dd6f177b24c8b7", "patch": "@@ -41,6 +41,9 @@\n import javax.print.attribute.PrintServiceAttribute;\n import javax.print.attribute.TextSyntax;\n \n+/**\n+ * @author Michael Koch (konqueror@gmx.de)\n+ */\n public final class PrinterLocation extends TextSyntax\n   implements PrintServiceAttribute\n {\n@@ -50,6 +53,7 @@ public final class PrinterLocation extends TextSyntax\n    * Creates a <code>PrinterLocation</code> object.\n    *\n    * @param printerLocation the printer location\n+   * @param locale the locale of the location, null means default locale\n    *\n    * @exception NullPointerException if printerLocation is null\n    */\n@@ -63,7 +67,7 @@ public PrinterLocation(String printerLocation, Locale locale)\n    *\n    * @param obj the object to test\n    *\n-   * @returns true if both objects are equal, false otherwise.\n+   * @return true if both objects are equal, false otherwise.\n    */\n   public boolean equals(Object obj)\n   {\n@@ -78,7 +82,7 @@ public boolean equals(Object obj)\n    *\n    * @return the class <code>PrinterLocation</code> itself\n    */\n-  public final Class getCategory()\n+  public Class getCategory()\n   {\n     return PrinterLocation.class;\n   }\n@@ -88,7 +92,7 @@ public final Class getCategory()\n    *\n    * @return the string \"printer-location\"\n    */\n-  public final String getName()\n+  public String getName()\n   {\n     return \"printer-location\";\n   }"}, {"sha": "8c8eea8bf567ab588f15597f758c2b93248800ca", "filename": "libjava/javax/print/attribute/standard/PrinterMakeAndModel.java", "status": "modified", "additions": 7, "deletions": 3, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/85ff6f624e23ae016b859f4829dd6f177b24c8b7/libjava%2Fjavax%2Fprint%2Fattribute%2Fstandard%2FPrinterMakeAndModel.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/85ff6f624e23ae016b859f4829dd6f177b24c8b7/libjava%2Fjavax%2Fprint%2Fattribute%2Fstandard%2FPrinterMakeAndModel.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fprint%2Fattribute%2Fstandard%2FPrinterMakeAndModel.java?ref=85ff6f624e23ae016b859f4829dd6f177b24c8b7", "patch": "@@ -41,6 +41,9 @@\n import javax.print.attribute.PrintServiceAttribute;\n import javax.print.attribute.TextSyntax;\n \n+/**\n+ * @author Michael Koch (konqueror@gmx.de)\n+ */\n public final class PrinterMakeAndModel extends TextSyntax\n   implements PrintServiceAttribute\n {\n@@ -50,6 +53,7 @@ public final class PrinterMakeAndModel extends TextSyntax\n    * Creates a <code>PrinterMakeAndModel</code> object.\n    *\n    * @param makeAndModel the make and model string\n+   * @param locale the locale of the make and model, null means default locale\n    *\n    * @exception NullPointerException if makeAndModel is null\n    */\n@@ -63,7 +67,7 @@ public PrinterMakeAndModel(String makeAndModel, Locale locale)\n    *\n    * @param obj the object to test\n    *\n-   * @returns true if both objects are equal, false otherwise.\n+   * @return true if both objects are equal, false otherwise.\n    */\n   public boolean equals(Object obj)\n   {\n@@ -78,7 +82,7 @@ public boolean equals(Object obj)\n    *\n    * @return the class <code>PrinterMakeAndModel</code> itself\n    */\n-  public final Class getCategory()\n+  public Class getCategory()\n   {\n     return PrinterMakeAndModel.class;\n   }\n@@ -88,7 +92,7 @@ public final Class getCategory()\n    *\n    * @return the string \"printer-make-and-model\"\n    */\n-  public final String getName()\n+  public String getName()\n   {\n     return \"printer-make-and-model\";\n   }"}, {"sha": "92599a8c150083dcd002b623974faa217ab1f375", "filename": "libjava/javax/print/attribute/standard/PrinterMessageFromOperator.java", "status": "modified", "additions": 8, "deletions": 3, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/85ff6f624e23ae016b859f4829dd6f177b24c8b7/libjava%2Fjavax%2Fprint%2Fattribute%2Fstandard%2FPrinterMessageFromOperator.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/85ff6f624e23ae016b859f4829dd6f177b24c8b7/libjava%2Fjavax%2Fprint%2Fattribute%2Fstandard%2FPrinterMessageFromOperator.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fprint%2Fattribute%2Fstandard%2FPrinterMessageFromOperator.java?ref=85ff6f624e23ae016b859f4829dd6f177b24c8b7", "patch": "@@ -41,6 +41,10 @@\n import javax.print.attribute.PrintServiceAttribute;\n import javax.print.attribute.TextSyntax;\n \n+\n+/**\n+ * @author Michael Koch (konqueror@gmx.de)\n+ */\n public final class PrinterMessageFromOperator extends TextSyntax\n   implements PrintServiceAttribute\n {\n@@ -50,6 +54,7 @@ public final class PrinterMessageFromOperator extends TextSyntax\n    * Creates a <code>PrinterMessageFromOperator</code> object.\n    *\n    * @param message the message\n+   * @param locale the locale of the message, null means default locale\n    *\n    * @exception NullPointerException if message is null\n    */\n@@ -63,7 +68,7 @@ public PrinterMessageFromOperator(String message, Locale locale)\n    *\n    * @param obj the object to test\n    *\n-   * @returns true if both objects are equal, false otherwise.\n+   * @return true if both objects are equal, false otherwise.\n    */\n   public boolean equals(Object obj)\n   {\n@@ -78,7 +83,7 @@ public boolean equals(Object obj)\n    *\n    * @return the class <code>PrinterMessageFromOperator</code> itself\n    */\n-  public final Class getCategory()\n+  public Class getCategory()\n   {\n     return PrinterMessageFromOperator.class;\n   }\n@@ -88,7 +93,7 @@ public final Class getCategory()\n    *\n    * @return the string \"printer-message-from-operator\"\n    */\n-  public final String getName()\n+  public String getName()\n   {\n     return \"printer-message-from-operator\";\n   }"}, {"sha": "06b128744e82e1c678df4165c708bd107c953070", "filename": "libjava/javax/print/attribute/standard/PrinterMoreInfo.java", "status": "added", "additions": 80, "deletions": 0, "changes": 80, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/85ff6f624e23ae016b859f4829dd6f177b24c8b7/libjava%2Fjavax%2Fprint%2Fattribute%2Fstandard%2FPrinterMoreInfo.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/85ff6f624e23ae016b859f4829dd6f177b24c8b7/libjava%2Fjavax%2Fprint%2Fattribute%2Fstandard%2FPrinterMoreInfo.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fprint%2Fattribute%2Fstandard%2FPrinterMoreInfo.java?ref=85ff6f624e23ae016b859f4829dd6f177b24c8b7", "patch": "@@ -0,0 +1,80 @@\n+/* PrinterMoreInfo.java --\n+   Copyright (C) 2004 Free Software Foundation, Inc.\n+\n+This file is part of GNU Classpath.\n+\n+GNU Classpath is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2, or (at your option)\n+any later version.\n+\n+GNU Classpath is distributed in the hope that it will be useful, but\n+WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GNU Classpath; see the file COPYING.  If not, write to the\n+Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA\n+02111-1307 USA.\n+\n+Linking this library statically or dynamically with other modules is\n+making a combined work based on this library.  Thus, the terms and\n+conditions of the GNU General Public License cover the whole\n+combination.\n+\n+As a special exception, the copyright holders of this library give you\n+permission to link this library with independent modules to produce an\n+executable, regardless of the license terms of these independent\n+modules, and to copy and distribute the resulting executable under\n+terms of your choice, provided that you also meet, for each linked\n+independent module, the terms and conditions of the license of that\n+module.  An independent module is a module which is not derived from\n+or based on this library.  If you modify this library, you may extend\n+this exception to your version of the library, but you are not\n+obligated to do so.  If you do not wish to do so, delete this\n+exception statement from your version. */\n+\n+package javax.print.attribute.standard;\n+\n+import java.net.URI;\n+import javax.print.attribute.PrintServiceAttribute;\n+import javax.print.attribute.URISyntax;\n+\n+\n+/**\n+ * @author Michael Koch (konqueror@gmx.de)\n+ */\n+public final class PrinterMoreInfo extends URISyntax\n+  implements PrintServiceAttribute\n+{\n+  private static final long serialVersionUID = 4555850007675338574L;\n+\n+  /**\n+   * Constructs a <code>PrinterMoreInfo</code> object.\n+   */\n+  public PrinterMoreInfo(URI uri)\n+  {\n+    super(uri);\n+  }\n+\n+  /**\n+   * Returns category of this class.\n+   *\n+   * @return the class <code>PrinterMoreInfo</code> itself\n+   */\n+  public Class getCategory()\n+  {\n+    return PrinterMoreInfo.class;\n+  }\n+\n+  /**\n+   * Returns the name of this attribute.\n+   *\n+   * @return the name\n+   */\n+  public String getName()\n+  {\n+    return \"printer-more-info\";\n+  }\n+}"}, {"sha": "1a6508779c459611a680c406d83fce065cf5fa67", "filename": "libjava/javax/print/attribute/standard/PrinterMoreInfoManufacturer.java", "status": "added", "additions": 80, "deletions": 0, "changes": 80, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/85ff6f624e23ae016b859f4829dd6f177b24c8b7/libjava%2Fjavax%2Fprint%2Fattribute%2Fstandard%2FPrinterMoreInfoManufacturer.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/85ff6f624e23ae016b859f4829dd6f177b24c8b7/libjava%2Fjavax%2Fprint%2Fattribute%2Fstandard%2FPrinterMoreInfoManufacturer.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fprint%2Fattribute%2Fstandard%2FPrinterMoreInfoManufacturer.java?ref=85ff6f624e23ae016b859f4829dd6f177b24c8b7", "patch": "@@ -0,0 +1,80 @@\n+/* PrinterMoreInfoManufacturer.java --\n+   Copyright (C) 2004 Free Software Foundation, Inc.\n+\n+This file is part of GNU Classpath.\n+\n+GNU Classpath is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2, or (at your option)\n+any later version.\n+\n+GNU Classpath is distributed in the hope that it will be useful, but\n+WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GNU Classpath; see the file COPYING.  If not, write to the\n+Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA\n+02111-1307 USA.\n+\n+Linking this library statically or dynamically with other modules is\n+making a combined work based on this library.  Thus, the terms and\n+conditions of the GNU General Public License cover the whole\n+combination.\n+\n+As a special exception, the copyright holders of this library give you\n+permission to link this library with independent modules to produce an\n+executable, regardless of the license terms of these independent\n+modules, and to copy and distribute the resulting executable under\n+terms of your choice, provided that you also meet, for each linked\n+independent module, the terms and conditions of the license of that\n+module.  An independent module is a module which is not derived from\n+or based on this library.  If you modify this library, you may extend\n+this exception to your version of the library, but you are not\n+obligated to do so.  If you do not wish to do so, delete this\n+exception statement from your version. */\n+\n+package javax.print.attribute.standard;\n+\n+import java.net.URI;\n+import javax.print.attribute.PrintServiceAttribute;\n+import javax.print.attribute.URISyntax;\n+\n+\n+/**\n+ * @author Michael Koch (konqueror@gmx.de)\n+ */\n+public final class PrinterMoreInfoManufacturer extends URISyntax\n+  implements PrintServiceAttribute\n+{\n+  private static final long serialVersionUID = 3323271346485076608L;\n+\n+  /**\n+   * Constructs a <code>PrinterMoreInfoManufacturer</code> object.\n+   */\n+  public PrinterMoreInfoManufacturer(URI uri)\n+  {\n+    super(uri);\n+  }\n+\n+  /**\n+   * Returns category of this class.\n+   *\n+   * @return the class <code>PrinterMoreInfoManufacturer</code> itself\n+   */\n+  public Class getCategory()\n+  {\n+    return PrinterMoreInfoManufacturer.class;\n+  }\n+\n+  /**\n+   * Returns the name of this attribute.\n+   *\n+   * @return the name\n+   */\n+  public String getName()\n+  {\n+    return \"printer-more-info-manufacturer\";\n+  }\n+}"}, {"sha": "c502fbe9a7cbcd4eb97969a491f1cc0824def23c", "filename": "libjava/javax/print/attribute/standard/PrinterName.java", "status": "modified", "additions": 8, "deletions": 3, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/85ff6f624e23ae016b859f4829dd6f177b24c8b7/libjava%2Fjavax%2Fprint%2Fattribute%2Fstandard%2FPrinterName.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/85ff6f624e23ae016b859f4829dd6f177b24c8b7/libjava%2Fjavax%2Fprint%2Fattribute%2Fstandard%2FPrinterName.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fprint%2Fattribute%2Fstandard%2FPrinterName.java?ref=85ff6f624e23ae016b859f4829dd6f177b24c8b7", "patch": "@@ -41,6 +41,10 @@\n import javax.print.attribute.PrintServiceAttribute;\n import javax.print.attribute.TextSyntax;\n \n+\n+/**\n+ * @author Michael Koch (konqueror@gmx.de)\n+ */\n public final class PrinterName extends TextSyntax\n   implements PrintServiceAttribute\n {\n@@ -50,6 +54,7 @@ public final class PrinterName extends TextSyntax\n    * Creates a <code>PrinterName</code> object.\n    *\n    * @param printerName the printer name\n+   * @param locale the locale of the name, null means default locale\n    *\n    * @exception NullPointerException if printerName is null\n    */\n@@ -63,7 +68,7 @@ public PrinterName(String printerName, Locale locale)\n    *\n    * @param obj the object to test\n    *\n-   * @returns true if both objects are equal, false otherwise.\n+   * @return true if both objects are equal, false otherwise.\n    */\n   public boolean equals(Object obj)\n   {\n@@ -78,7 +83,7 @@ public boolean equals(Object obj)\n    *\n    * @return the class <code>PrinterName</code> itself\n    */\n-  public final Class getCategory()\n+  public Class getCategory()\n   {\n     return PrinterName.class;\n   }\n@@ -88,7 +93,7 @@ public final Class getCategory()\n    *\n    * @return the string \"printer-name\"\n    */\n-  public final String getName()\n+  public String getName()\n   {\n     return \"printer-name\";\n   }"}, {"sha": "10a20d9a9f5132469be93197ae09e2f80bb34838", "filename": "libjava/javax/print/attribute/standard/PrinterResolution.java", "status": "added", "additions": 82, "deletions": 0, "changes": 82, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/85ff6f624e23ae016b859f4829dd6f177b24c8b7/libjava%2Fjavax%2Fprint%2Fattribute%2Fstandard%2FPrinterResolution.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/85ff6f624e23ae016b859f4829dd6f177b24c8b7/libjava%2Fjavax%2Fprint%2Fattribute%2Fstandard%2FPrinterResolution.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fprint%2Fattribute%2Fstandard%2FPrinterResolution.java?ref=85ff6f624e23ae016b859f4829dd6f177b24c8b7", "patch": "@@ -0,0 +1,82 @@\n+/* PrinterMoreInfoManufacturer.java --\n+   Copyright (C) 2004 Free Software Foundation, Inc.\n+\n+This file is part of GNU Classpath.\n+\n+GNU Classpath is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2, or (at your option)\n+any later version.\n+\n+GNU Classpath is distributed in the hope that it will be useful, but\n+WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GNU Classpath; see the file COPYING.  If not, write to the\n+Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA\n+02111-1307 USA.\n+\n+Linking this library statically or dynamically with other modules is\n+making a combined work based on this library.  Thus, the terms and\n+conditions of the GNU General Public License cover the whole\n+combination.\n+\n+As a special exception, the copyright holders of this library give you\n+permission to link this library with independent modules to produce an\n+executable, regardless of the license terms of these independent\n+modules, and to copy and distribute the resulting executable under\n+terms of your choice, provided that you also meet, for each linked\n+independent module, the terms and conditions of the license of that\n+module.  An independent module is a module which is not derived from\n+or based on this library.  If you modify this library, you may extend\n+this exception to your version of the library, but you are not\n+obligated to do so.  If you do not wish to do so, delete this\n+exception statement from your version. */\n+\n+package javax.print.attribute.standard;\n+\n+import javax.print.attribute.DocAttribute;\n+import javax.print.attribute.PrintJobAttribute;\n+import javax.print.attribute.PrintRequestAttribute;\n+import javax.print.attribute.ResolutionSyntax;\n+\n+\n+/**\n+ * @author Michael Koch (konqueror@gmx.de)\n+ */\n+public final class PrinterResolution extends ResolutionSyntax\n+  implements DocAttribute, PrintJobAttribute, PrintRequestAttribute\n+{\n+  private static final long serialVersionUID = 13090306561090558L;\n+\n+  /**\n+   * Constructs a <code>PrinterResolution</code> object.\n+   */\n+  public PrinterResolution(int crossFeedResolution, int feedResolution,\n+                           int units)\n+  {\n+    super(crossFeedResolution, feedResolution, units);\n+  }\n+\n+  /**\n+   * Returns category of this class.\n+   *\n+   * @return the class <code>PrinterResolution</code> itself\n+   */\n+  public Class getCategory()\n+  {\n+    return PrinterResolution.class;\n+  }\n+\n+  /**\n+   * Returns the name of this attribute.\n+   *\n+   * @return the name\n+   */\n+  public String getName()\n+  {\n+    return \"printer-resolution\";\n+  }\n+}"}, {"sha": "3d3e7bef6ee94fbc9920f5a21a431d6ba30b2033", "filename": "libjava/javax/print/attribute/standard/PrinterState.java", "status": "added", "additions": 84, "deletions": 0, "changes": 84, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/85ff6f624e23ae016b859f4829dd6f177b24c8b7/libjava%2Fjavax%2Fprint%2Fattribute%2Fstandard%2FPrinterState.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/85ff6f624e23ae016b859f4829dd6f177b24c8b7/libjava%2Fjavax%2Fprint%2Fattribute%2Fstandard%2FPrinterState.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fprint%2Fattribute%2Fstandard%2FPrinterState.java?ref=85ff6f624e23ae016b859f4829dd6f177b24c8b7", "patch": "@@ -0,0 +1,84 @@\n+/* PrinterState.java --\n+   Copyright (C) 2004 Free Software Foundation, Inc.\n+\n+This file is part of GNU Classpath.\n+\n+GNU Classpath is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2, or (at your option)\n+any later version.\n+\n+GNU Classpath is distributed in the hope that it will be useful, but\n+WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GNU Classpath; see the file COPYING.  If not, write to the\n+Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA\n+02111-1307 USA.\n+\n+Linking this library statically or dynamically with other modules is\n+making a combined work based on this library.  Thus, the terms and\n+conditions of the GNU General Public License cover the whole\n+combination.\n+\n+As a special exception, the copyright holders of this library give you\n+permission to link this library with independent modules to produce an\n+executable, regardless of the license terms of these independent\n+modules, and to copy and distribute the resulting executable under\n+terms of your choice, provided that you also meet, for each linked\n+independent module, the terms and conditions of the license of that\n+module.  An independent module is a module which is not derived from\n+or based on this library.  If you modify this library, you may extend\n+this exception to your version of the library, but you are not\n+obligated to do so.  If you do not wish to do so, delete this\n+exception statement from your version. */\n+\n+package javax.print.attribute.standard;\n+\n+import javax.print.attribute.EnumSyntax;\n+import javax.print.attribute.PrintServiceAttribute;\n+\n+\n+/**\n+ * @author Michael Koch (konqueror@gmx.de)\n+ */\n+public final class PrinterState extends EnumSyntax\n+  implements PrintServiceAttribute\n+{\n+  private static final long serialVersionUID = -649578618346507718L;\n+\n+  public static final PrinterState UNKNOWN = new PrinterState(0);\n+  public static final PrinterState IDLE = new PrinterState(1);\n+  public static final PrinterState PROCESSING = new PrinterState(2);\n+  public static final PrinterState STOPPED = new PrinterState(3);\n+\n+  /**\n+   * Constructs a <code>PrinterState</code> object.\n+   */\n+  protected PrinterState(int value)\n+  {\n+    super(value);\n+  }\n+\n+  /**\n+   * Returns category of this class.\n+   *\n+   * @return the class <code>PrinterState</code> itself\n+   */\n+  public Class getCategory()\n+  {\n+    return PrinterState.class;\n+  }\n+\n+  /**\n+   * Returns the name of this attribute.\n+   *\n+   * @return the name\n+   */\n+  public String getName()\n+  {\n+    return \"printer-state\";\n+  }\n+}"}, {"sha": "f144f73279b10f585be640917841a7a6d29f80a2", "filename": "libjava/javax/print/attribute/standard/PrinterStateReason.java", "status": "added", "additions": 140, "deletions": 0, "changes": 140, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/85ff6f624e23ae016b859f4829dd6f177b24c8b7/libjava%2Fjavax%2Fprint%2Fattribute%2Fstandard%2FPrinterStateReason.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/85ff6f624e23ae016b859f4829dd6f177b24c8b7/libjava%2Fjavax%2Fprint%2Fattribute%2Fstandard%2FPrinterStateReason.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fprint%2Fattribute%2Fstandard%2FPrinterStateReason.java?ref=85ff6f624e23ae016b859f4829dd6f177b24c8b7", "patch": "@@ -0,0 +1,140 @@\n+/* PrinterStateReason.java --\n+   Copyright (C) 2004 Free Software Foundation, Inc.\n+\n+This file is part of GNU Classpath.\n+\n+GNU Classpath is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2, or (at your option)\n+any later version.\n+\n+GNU Classpath is distributed in the hope that it will be useful, but\n+WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GNU Classpath; see the file COPYING.  If not, write to the\n+Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA\n+02111-1307 USA.\n+\n+Linking this library statically or dynamically with other modules is\n+making a combined work based on this library.  Thus, the terms and\n+conditions of the GNU General Public License cover the whole\n+combination.\n+\n+As a special exception, the copyright holders of this library give you\n+permission to link this library with independent modules to produce an\n+executable, regardless of the license terms of these independent\n+modules, and to copy and distribute the resulting executable under\n+terms of your choice, provided that you also meet, for each linked\n+independent module, the terms and conditions of the license of that\n+module.  An independent module is a module which is not derived from\n+or based on this library.  If you modify this library, you may extend\n+this exception to your version of the library, but you are not\n+obligated to do so.  If you do not wish to do so, delete this\n+exception statement from your version. */\n+\n+package javax.print.attribute.standard;\n+\n+import javax.print.attribute.Attribute;\n+import javax.print.attribute.EnumSyntax;\n+\n+\n+/**\n+ * @author Michael Koch (konqueror@gmx.de)\n+ */\n+public class PrinterStateReason extends EnumSyntax\n+  implements Attribute\n+{\n+  private static final long serialVersionUID = -1623720656201472593L;\n+\n+  public static final PrinterStateReason OTHER = new PrinterStateReason(0);\n+  public static final PrinterStateReason MEDIA_NEEDED =\n+    new PrinterStateReason(1);\n+  public static final PrinterStateReason MEDIA_JAM = new PrinterStateReason(2);\n+  public static final PrinterStateReason MOVING_TO_PAUSED =\n+    new PrinterStateReason(3);\n+  public static final PrinterStateReason PAUSED = new PrinterStateReason(4);\n+  public static final PrinterStateReason SHUTDOWN = new PrinterStateReason(5);\n+  public static final PrinterStateReason CONNECTING_TO_DEVICE =\n+    new PrinterStateReason(6);\n+  public static final PrinterStateReason TIMED_OUT = new PrinterStateReason(7);\n+  public static final PrinterStateReason STOPPING = new PrinterStateReason(8);\n+  public static final PrinterStateReason STOPPED_PARTLY =\n+    new PrinterStateReason(9);\n+  public static final PrinterStateReason TONER_LOW =\n+    new PrinterStateReason(10);\n+  public static final PrinterStateReason TONER_EMPTY =\n+    new PrinterStateReason(11);\n+  public static final PrinterStateReason SPOOL_AREA_FULL =\n+    new PrinterStateReason(12);\n+  public static final PrinterStateReason COVER_OPEN =\n+    new PrinterStateReason(13);\n+  public static final PrinterStateReason INTERLOCK_OPEN =\n+    new PrinterStateReason(14);\n+  public static final PrinterStateReason DOOR_OPEN =\n+    new PrinterStateReason(15);\n+  public static final PrinterStateReason INPUT_TRAY_MISSING =\n+    new PrinterStateReason(16);\n+  public static final PrinterStateReason MEDIA_LOW =\n+    new PrinterStateReason(17);\n+  public static final PrinterStateReason MEDIA_EMPTY =\n+    new PrinterStateReason(18);\n+  public static final PrinterStateReason OUTPUT_TRAY_MISSING =\n+    new PrinterStateReason(19);\n+  public static final PrinterStateReason OUTPUT_AREA_ALMOST_FULL =\n+    new PrinterStateReason(20);\n+  public static final PrinterStateReason OUTPUT_AREA_FULL =\n+    new PrinterStateReason(21);\n+  public static final PrinterStateReason MARKER_SUPPLY_LOW =\n+    new PrinterStateReason(22);\n+  public static final PrinterStateReason MARKER_SUPPLY_EMPTY =\n+    new PrinterStateReason(23);\n+  public static final PrinterStateReason MARKER_WASTE_ALMOST_FULL =\n+    new PrinterStateReason(24);\n+  public static final PrinterStateReason MARKER_WASTE_FULL =\n+    new PrinterStateReason(25);\n+  public static final PrinterStateReason FUSER_OVER_TEMP =\n+    new PrinterStateReason(26);\n+  public static final PrinterStateReason FUSER_UNDER_TEMP =\n+    new PrinterStateReason(27);\n+  public static final PrinterStateReason OPC_NEAR_EOL =\n+    new PrinterStateReason(28);\n+  public static final PrinterStateReason OPC_LIFE_OVER =\n+    new PrinterStateReason(29);\n+  public static final PrinterStateReason DEVELOPER_LOW =\n+    new PrinterStateReason(30);\n+  public static final PrinterStateReason DEVELOPER_EMPTY =\n+    new PrinterStateReason(31);\n+  public static final PrinterStateReason INTERPRETER_RESOURCE_UNAVAILABLE =\n+    new PrinterStateReason(32);\n+\n+  /**\n+   * Constructs a <code>PrinterStateReason</code> object.\n+   */\n+  protected PrinterStateReason(int value)\n+  {\n+    super(value);\n+  }\n+\n+  /**\n+   * Returns category of this class.\n+   *\n+   * @return the class <code>PrintStateReason</code> itself\n+   */\n+  public final Class getCategory()\n+  {\n+    return PrinterStateReason.class;\n+  }\n+\n+  /**\n+   * Returns name of this class.\n+   *\n+   * @return the string \"printer-state-reason\"\n+   */\n+  public final String getName()\n+  {\n+    return \"printer-state-reason\";\n+  }\n+}"}, {"sha": "88124b86a1b7bac11c980bbdca2a004c37214ded", "filename": "libjava/javax/print/attribute/standard/PrinterStateReasons.java", "status": "added", "additions": 71, "deletions": 0, "changes": 71, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/85ff6f624e23ae016b859f4829dd6f177b24c8b7/libjava%2Fjavax%2Fprint%2Fattribute%2Fstandard%2FPrinterStateReasons.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/85ff6f624e23ae016b859f4829dd6f177b24c8b7/libjava%2Fjavax%2Fprint%2Fattribute%2Fstandard%2FPrinterStateReasons.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fprint%2Fattribute%2Fstandard%2FPrinterStateReasons.java?ref=85ff6f624e23ae016b859f4829dd6f177b24c8b7", "patch": "@@ -0,0 +1,71 @@\n+/* PrinterStateReasons.java --\n+   Copyright (C) 2004 Free Software Foundation, Inc.\n+\n+This file is part of GNU Classpath.\n+\n+GNU Classpath is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2, or (at your option)\n+any later version.\n+\n+GNU Classpath is distributed in the hope that it will be useful, but\n+WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GNU Classpath; see the file COPYING.  If not, write to the\n+Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA\n+02111-1307 USA.\n+\n+Linking this library statically or dynamically with other modules is\n+making a combined work based on this library.  Thus, the terms and\n+conditions of the GNU General Public License cover the whole\n+combination.\n+\n+As a special exception, the copyright holders of this library give you\n+permission to link this library with independent modules to produce an\n+executable, regardless of the license terms of these independent\n+modules, and to copy and distribute the resulting executable under\n+terms of your choice, provided that you also meet, for each linked\n+independent module, the terms and conditions of the license of that\n+module.  An independent module is a module which is not derived from\n+or based on this library.  If you modify this library, you may extend\n+this exception to your version of the library, but you are not\n+obligated to do so.  If you do not wish to do so, delete this\n+exception statement from your version. */\n+\n+package javax.print.attribute.standard;\n+\n+import java.util.HashMap;\n+import javax.print.attribute.PrintServiceAttribute;\n+\n+\n+/**\n+ * @author Michael Koch (konqueror@gmx.de)\n+ */\n+public final class PrinterStateReasons extends HashMap\n+  implements PrintServiceAttribute\n+{\n+  private static final long serialVersionUID = -3731791085163619457L;\n+\n+  /**\n+   * Returns category of this class.\n+   *\n+   * @return the class <code>PrintStateReasons</code> itself\n+   */\n+  public Class getCategory()\n+  {\n+    return PrinterStateReasons.class;\n+  }\n+\n+  /**\n+   * Returns name of this class.\n+   *\n+   * @return the string \"printer-state-reasons\"\n+   */\n+  public String getName()\n+  {\n+    return \"printer-state-reasons\";\n+  }\n+}"}, {"sha": "ff55123b39aa2ae0ee2e90f6b02b03191601251a", "filename": "libjava/javax/print/attribute/standard/PrinterURI.java", "status": "added", "additions": 80, "deletions": 0, "changes": 80, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/85ff6f624e23ae016b859f4829dd6f177b24c8b7/libjava%2Fjavax%2Fprint%2Fattribute%2Fstandard%2FPrinterURI.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/85ff6f624e23ae016b859f4829dd6f177b24c8b7/libjava%2Fjavax%2Fprint%2Fattribute%2Fstandard%2FPrinterURI.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fprint%2Fattribute%2Fstandard%2FPrinterURI.java?ref=85ff6f624e23ae016b859f4829dd6f177b24c8b7", "patch": "@@ -0,0 +1,80 @@\n+/* PrinterURI.java --\n+   Copyright (C) 2004 Free Software Foundation, Inc.\n+\n+This file is part of GNU Classpath.\n+\n+GNU Classpath is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2, or (at your option)\n+any later version.\n+\n+GNU Classpath is distributed in the hope that it will be useful, but\n+WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GNU Classpath; see the file COPYING.  If not, write to the\n+Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA\n+02111-1307 USA.\n+\n+Linking this library statically or dynamically with other modules is\n+making a combined work based on this library.  Thus, the terms and\n+conditions of the GNU General Public License cover the whole\n+combination.\n+\n+As a special exception, the copyright holders of this library give you\n+permission to link this library with independent modules to produce an\n+executable, regardless of the license terms of these independent\n+modules, and to copy and distribute the resulting executable under\n+terms of your choice, provided that you also meet, for each linked\n+independent module, the terms and conditions of the license of that\n+module.  An independent module is a module which is not derived from\n+or based on this library.  If you modify this library, you may extend\n+this exception to your version of the library, but you are not\n+obligated to do so.  If you do not wish to do so, delete this\n+exception statement from your version. */\n+\n+package javax.print.attribute.standard;\n+\n+import java.net.URI;\n+import javax.print.attribute.PrintServiceAttribute;\n+import javax.print.attribute.URISyntax;\n+\n+\n+/**\n+ * @author Michael Koch (konqueror@gmx.de)\n+ */\n+public final class PrinterURI extends URISyntax\n+  implements PrintServiceAttribute\n+{\n+  private static final long serialVersionUID = 7923912792485606497L;\n+\n+  /**\n+   * Constructs a <code>PrinterURI</code> object.\n+   */\n+  public PrinterURI(URI uri)\n+  {\n+    super(uri);\n+  }\n+\n+  /**\n+   * Returns category of this class.\n+   *\n+   * @return the class <code>PrinterURI</code> itself\n+   */\n+  public Class getCategory()\n+  {\n+    return PrinterURI.class;\n+  }\n+\n+  /**\n+   * Returns name of this class.\n+   *\n+   * @return the string \"printer-uri\"\n+   */\n+  public String getName()\n+  {\n+    return \"printer-uri\";\n+  }\n+}"}, {"sha": "3a0fd8781f77cf0a45d5fc1ef90fc9e3ba4ec3b9", "filename": "libjava/javax/print/attribute/standard/QueuedJobCount.java", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/85ff6f624e23ae016b859f4829dd6f177b24c8b7/libjava%2Fjavax%2Fprint%2Fattribute%2Fstandard%2FQueuedJobCount.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/85ff6f624e23ae016b859f4829dd6f177b24c8b7/libjava%2Fjavax%2Fprint%2Fattribute%2Fstandard%2FQueuedJobCount.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fprint%2Fattribute%2Fstandard%2FQueuedJobCount.java?ref=85ff6f624e23ae016b859f4829dd6f177b24c8b7", "patch": "@@ -68,7 +68,7 @@ public QueuedJobCount(int value)\n    *\n    * @param obj the object to test\n    *\n-   * @returns true if both objects are equal, false otherwise.\n+   * @return true if both objects are equal, false otherwise.\n    */\n   public boolean equals(Object obj)\n   {\n@@ -83,7 +83,7 @@ public boolean equals(Object obj)\n    *\n    * @return the class <code>QueuedJobCount</code> itself\n    */\n-  public final Class getCategory()\n+  public Class getCategory()\n   {\n     return QueuedJobCount.class;\n   }\n@@ -93,7 +93,7 @@ public final Class getCategory()\n    *\n    * @return the string \"queued-job-count\"\n    */\n-  public final String getName()\n+  public String getName()\n   {\n     return \"queued-job-count\";\n   }"}, {"sha": "0b10cdd3a60eb0582346cd2968313d36d2f089f1", "filename": "libjava/javax/print/attribute/standard/ReferenceUriSchemesSupported.java", "status": "added", "additions": 96, "deletions": 0, "changes": 96, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/85ff6f624e23ae016b859f4829dd6f177b24c8b7/libjava%2Fjavax%2Fprint%2Fattribute%2Fstandard%2FReferenceUriSchemesSupported.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/85ff6f624e23ae016b859f4829dd6f177b24c8b7/libjava%2Fjavax%2Fprint%2Fattribute%2Fstandard%2FReferenceUriSchemesSupported.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fprint%2Fattribute%2Fstandard%2FReferenceUriSchemesSupported.java?ref=85ff6f624e23ae016b859f4829dd6f177b24c8b7", "patch": "@@ -0,0 +1,96 @@\n+/* ReferenceUriSchemesSupported.java --\n+   Copyright (C) 2004 Free Software Foundation, Inc.\n+\n+This file is part of GNU Classpath.\n+\n+GNU Classpath is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2, or (at your option)\n+any later version.\n+\n+GNU Classpath is distributed in the hope that it will be useful, but\n+WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GNU Classpath; see the file COPYING.  If not, write to the\n+Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA\n+02111-1307 USA.\n+\n+Linking this library statically or dynamically with other modules is\n+making a combined work based on this library.  Thus, the terms and\n+conditions of the GNU General Public License cover the whole\n+combination.\n+\n+As a special exception, the copyright holders of this library give you\n+permission to link this library with independent modules to produce an\n+executable, regardless of the license terms of these independent\n+modules, and to copy and distribute the resulting executable under\n+terms of your choice, provided that you also meet, for each linked\n+independent module, the terms and conditions of the license of that\n+module.  An independent module is a module which is not derived from\n+or based on this library.  If you modify this library, you may extend\n+this exception to your version of the library, but you are not\n+obligated to do so.  If you do not wish to do so, delete this\n+exception statement from your version. */\n+\n+package javax.print.attribute.standard;\n+\n+import javax.print.attribute.Attribute;\n+import javax.print.attribute.EnumSyntax;\n+\n+\n+/**\n+ * @author Michael Koch (konqueror@gmx.de)\n+ */\n+public class ReferenceUriSchemesSupported extends EnumSyntax\n+  implements Attribute\n+{\n+  private static final long serialVersionUID = -8989076942813442805L;\n+\n+  public static final ReferenceUriSchemesSupported FTP =\n+    new ReferenceUriSchemesSupported(0);\n+  public static final ReferenceUriSchemesSupported HTTP =\n+    new ReferenceUriSchemesSupported(1);\n+  public static final ReferenceUriSchemesSupported HTTPS =\n+    new ReferenceUriSchemesSupported(2);\n+  public static final ReferenceUriSchemesSupported GOPHER =\n+    new ReferenceUriSchemesSupported(3);\n+  public static final ReferenceUriSchemesSupported NEWS =\n+    new ReferenceUriSchemesSupported(4);\n+  public static final ReferenceUriSchemesSupported NNTP =\n+    new ReferenceUriSchemesSupported(5);\n+  public static final ReferenceUriSchemesSupported WAIS =\n+    new ReferenceUriSchemesSupported(6);\n+  public static final ReferenceUriSchemesSupported FILE =\n+    new ReferenceUriSchemesSupported(7);\n+\n+    /**\n+     * Constructs a <code>ReferenceUriSchemeSupported</code> object.\n+     */\n+  protected ReferenceUriSchemesSupported(int value)\n+  {\n+    super(value);\n+  }\n+\n+  /**\n+   * Returns category of this class.\n+   *\n+   * @return the class <code>ReferenceUriSchemesSupported</code> itself\n+   */\n+  public final Class getCategory()\n+  {\n+    return ReferenceUriSchemesSupported.class;\n+  }\n+\n+  /**\n+   * Returns name of this class.\n+   *\n+   * @return the string \"reference-uri-schemes-supported\"\n+   */\n+  public final String getName()\n+  {\n+    return \"reference-uri-schemes-supported\";\n+  }\n+}"}, {"sha": "cc0bee8f7c9df8d18230af5fc6e1d86e9bd11f30", "filename": "libjava/javax/print/attribute/standard/RequestingUserName.java", "status": "modified", "additions": 10, "deletions": 5, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/85ff6f624e23ae016b859f4829dd6f177b24c8b7/libjava%2Fjavax%2Fprint%2Fattribute%2Fstandard%2FRequestingUserName.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/85ff6f624e23ae016b859f4829dd6f177b24c8b7/libjava%2Fjavax%2Fprint%2Fattribute%2Fstandard%2FRequestingUserName.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fprint%2Fattribute%2Fstandard%2FRequestingUserName.java?ref=85ff6f624e23ae016b859f4829dd6f177b24c8b7", "patch": "@@ -41,6 +41,10 @@\n import javax.print.attribute.PrintRequestAttribute;\n import javax.print.attribute.TextSyntax;\n \n+\n+/**\n+ * @author Michael Koch (konqueror@gmx.de)\n+ */\n public final class RequestingUserName extends TextSyntax\n   implements PrintRequestAttribute\n {\n@@ -50,6 +54,7 @@ public final class RequestingUserName extends TextSyntax\n    * Creates a <code>RequestingUserName</code> object.\n    *\n    * @param userName the job name\n+   * @param locale the locale of the user, null means default locale\n    *\n    * @exception NullPointerException if userName is null\n    */\n@@ -63,7 +68,7 @@ public RequestingUserName(String userName, Locale locale)\n    *\n    * @param obj the object to test\n    *\n-   * @returns true if both objects are equal, false otherwise.\n+   * @return true if both objects are equal, false otherwise.\n    */\n   public boolean equals(Object obj)\n   {\n@@ -74,21 +79,21 @@ public boolean equals(Object obj)\n   }\n \n   /**\n-   * Returns category of this class.\n+   * Returns category of this attribute.\n    *\n    * @return the class <code>RequestingUserName</code> itself\n    */\n-  public final Class getCategory()\n+  public Class getCategory()\n   {\n     return RequestingUserName.class;\n   }\n \n   /**\n-   * Returns name of this class.\n+   * Returns name of this attribute.\n    *\n    * @return the string \"requesting-user-name\"\n    */\n-  public final String getName()\n+  public String getName()\n   {\n     return \"requesting-user-name\";\n   }"}, {"sha": "994977374d903a38eb25de944b37d49a9a1e8bfb", "filename": "libjava/javax/print/attribute/standard/Severity.java", "status": "added", "additions": 83, "deletions": 0, "changes": 83, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/85ff6f624e23ae016b859f4829dd6f177b24c8b7/libjava%2Fjavax%2Fprint%2Fattribute%2Fstandard%2FSeverity.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/85ff6f624e23ae016b859f4829dd6f177b24c8b7/libjava%2Fjavax%2Fprint%2Fattribute%2Fstandard%2FSeverity.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fprint%2Fattribute%2Fstandard%2FSeverity.java?ref=85ff6f624e23ae016b859f4829dd6f177b24c8b7", "patch": "@@ -0,0 +1,83 @@\n+/* Severity.java --\n+   Copyright (C) 2004 Free Software Foundation, Inc.\n+\n+This file is part of GNU Classpath.\n+\n+GNU Classpath is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2, or (at your option)\n+any later version.\n+\n+GNU Classpath is distributed in the hope that it will be useful, but\n+WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GNU Classpath; see the file COPYING.  If not, write to the\n+Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA\n+02111-1307 USA.\n+\n+Linking this library statically or dynamically with other modules is\n+making a combined work based on this library.  Thus, the terms and\n+conditions of the GNU General Public License cover the whole\n+combination.\n+\n+As a special exception, the copyright holders of this library give you\n+permission to link this library with independent modules to produce an\n+executable, regardless of the license terms of these independent\n+modules, and to copy and distribute the resulting executable under\n+terms of your choice, provided that you also meet, for each linked\n+independent module, the terms and conditions of the license of that\n+module.  An independent module is a module which is not derived from\n+or based on this library.  If you modify this library, you may extend\n+this exception to your version of the library, but you are not\n+obligated to do so.  If you do not wish to do so, delete this\n+exception statement from your version. */\n+\n+package javax.print.attribute.standard;\n+\n+import javax.print.attribute.Attribute;\n+import javax.print.attribute.EnumSyntax;\n+\n+\n+/**\n+ * @author Michael Koch (konqueror@gmx.de)\n+ */\n+public final class Severity extends EnumSyntax\n+  implements Attribute\n+{\n+  private static final long serialVersionUID = 8781881462717925380L;\n+\n+  public static final Severity REPORT = new Severity(0);\n+  public static final Severity WARNING = new Severity(1);\n+  public static final Severity ERROR = new Severity(2);\n+\n+  /**\n+   * Constructs a <code>Severity</code> object.\n+   */\n+  protected Severity(int value)\n+  {\n+    super(value);\n+  }\n+\n+  /**\n+   * Returns category of this class.\n+   *\n+   * @return the class <code>Severity</code> itself\n+   */\n+  public Class getCategory()\n+  {\n+    return Severity.class;\n+  }\n+\n+  /**\n+   * Returns name of this class.\n+   *\n+   * @return the string \"severity\"\n+   */\n+  public String getName()\n+  {\n+    return \"severity\";\n+  }\n+}"}, {"sha": "1f14cdb673c39007d8d46741a072b5ae34a16471", "filename": "libjava/javax/print/attribute/standard/SheetCollate.java", "status": "added", "additions": 81, "deletions": 0, "changes": 81, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/85ff6f624e23ae016b859f4829dd6f177b24c8b7/libjava%2Fjavax%2Fprint%2Fattribute%2Fstandard%2FSheetCollate.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/85ff6f624e23ae016b859f4829dd6f177b24c8b7/libjava%2Fjavax%2Fprint%2Fattribute%2Fstandard%2FSheetCollate.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fprint%2Fattribute%2Fstandard%2FSheetCollate.java?ref=85ff6f624e23ae016b859f4829dd6f177b24c8b7", "patch": "@@ -0,0 +1,81 @@\n+/* SheetCollate.java --\n+   Copyright (C) 2004 Free Software Foundation, Inc.\n+\n+This file is part of GNU Classpath.\n+\n+GNU Classpath is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2, or (at your option)\n+any later version.\n+\n+GNU Classpath is distributed in the hope that it will be useful, but\n+WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GNU Classpath; see the file COPYING.  If not, write to the\n+Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA\n+02111-1307 USA.\n+\n+Linking this library statically or dynamically with other modules is\n+making a combined work based on this library.  Thus, the terms and\n+conditions of the GNU General Public License cover the whole\n+combination.\n+\n+As a special exception, the copyright holders of this library give you\n+permission to link this library with independent modules to produce an\n+executable, regardless of the license terms of these independent\n+modules, and to copy and distribute the resulting executable under\n+terms of your choice, provided that you also meet, for each linked\n+independent module, the terms and conditions of the license of that\n+module.  An independent module is a module which is not derived from\n+or based on this library.  If you modify this library, you may extend\n+this exception to your version of the library, but you are not\n+obligated to do so.  If you do not wish to do so, delete this\n+exception statement from your version. */\n+\n+package javax.print.attribute.standard;\n+\n+import javax.print.attribute.DocAttribute;\n+import javax.print.attribute.EnumSyntax;\n+import javax.print.attribute.PrintJobAttribute;\n+import javax.print.attribute.PrintRequestAttribute;\n+\n+\n+/**\n+ * @author Michael Koch (konqueror@gmx.de)\n+ */\n+public final class SheetCollate extends EnumSyntax\n+  implements DocAttribute, PrintRequestAttribute, PrintJobAttribute\n+{\n+  private static final long serialVersionUID = 7080587914259873003L;\n+\n+  public static final SheetCollate UNCOLLATED = new SheetCollate(0);\n+  public static final SheetCollate COLLATED = new SheetCollate(1);\n+\n+  protected SheetCollate(int value)\n+  {\n+    super(value);\n+  }\n+\n+  /**\n+   * Returns category of this class.\n+   *\n+   * @return the class <code>SheetCollate</code> itself\n+   */\n+  public Class getCategory()\n+  {\n+    return SheetCollate.class;\n+  }\n+\n+  /**\n+   * Returns name of this class.\n+   *\n+   * @return the string \"sheet-collate\"\n+   */\n+  public String getName()\n+  {\n+    return \"sheet-collate\";\n+  }\n+}"}, {"sha": "6543f5d113e2d1b6bcaa9ce4944dcbccaecb4030", "filename": "libjava/javax/print/attribute/standard/Sides.java", "status": "added", "additions": 89, "deletions": 0, "changes": 89, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/85ff6f624e23ae016b859f4829dd6f177b24c8b7/libjava%2Fjavax%2Fprint%2Fattribute%2Fstandard%2FSides.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/85ff6f624e23ae016b859f4829dd6f177b24c8b7/libjava%2Fjavax%2Fprint%2Fattribute%2Fstandard%2FSides.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fprint%2Fattribute%2Fstandard%2FSides.java?ref=85ff6f624e23ae016b859f4829dd6f177b24c8b7", "patch": "@@ -0,0 +1,89 @@\n+/* Sides.java --\n+   Copyright (C) 2004 Free Software Foundation, Inc.\n+\n+This file is part of GNU Classpath.\n+\n+GNU Classpath is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2, or (at your option)\n+any later version.\n+\n+GNU Classpath is distributed in the hope that it will be useful, but\n+WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GNU Classpath; see the file COPYING.  If not, write to the\n+Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA\n+02111-1307 USA.\n+\n+Linking this library statically or dynamically with other modules is\n+making a combined work based on this library.  Thus, the terms and\n+conditions of the GNU General Public License cover the whole\n+combination.\n+\n+As a special exception, the copyright holders of this library give you\n+permission to link this library with independent modules to produce an\n+executable, regardless of the license terms of these independent\n+modules, and to copy and distribute the resulting executable under\n+terms of your choice, provided that you also meet, for each linked\n+independent module, the terms and conditions of the license of that\n+module.  An independent module is a module which is not derived from\n+or based on this library.  If you modify this library, you may extend\n+this exception to your version of the library, but you are not\n+obligated to do so.  If you do not wish to do so, delete this\n+exception statement from your version. */\n+\n+package javax.print.attribute.standard;\n+\n+import javax.print.attribute.DocAttribute;\n+import javax.print.attribute.EnumSyntax;\n+import javax.print.attribute.PrintJobAttribute;\n+import javax.print.attribute.PrintRequestAttribute;\n+\n+\n+/**\n+ * @author Michael Koch (konqueror@gmx.de)\n+ */\n+public final class Sides extends EnumSyntax\n+  implements DocAttribute, PrintRequestAttribute, PrintJobAttribute\n+{\n+  private static final long serialVersionUID = -6890309414893262822L;\n+\n+  public static final Sides ONE_SIDED = new Sides(0);\n+  public static final Sides TWO_SIDED_LONG_EDGE = new Sides(1);\n+  public static final Sides TWO_SIDED_SHORT_EDGE = new Sides(2);\n+  public static final Sides DUPLEX = new Sides(3);\n+  public static final Sides TUMBLE = new Sides(4);\n+\n+  /**\n+   * Creates a <code>Sides</code> object.\n+   *\n+   * @param value the number of sides\n+   */\n+  protected Sides(int value)\n+  {\n+    super(value);\n+  }\n+\n+  /**\n+   * Returns category of this class.\n+   *\n+   * @return the class <code>Sides</code> itself\n+   */\n+  public Class getCategory()\n+  {\n+    return Sides.class;\n+  }\n+\n+  /**\n+   * Returns the name of this attribute.\n+   *\n+   * @return the name\n+   */\n+  public String getName()\n+  {\n+    return \"sides\";\n+  }\n+}"}, {"sha": "3fff4e5795c64d4116df64b50fc837cd38e643c5", "filename": "libjava/javax/print/event/PrintEvent.java", "status": "added", "additions": 67, "deletions": 0, "changes": 67, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/85ff6f624e23ae016b859f4829dd6f177b24c8b7/libjava%2Fjavax%2Fprint%2Fevent%2FPrintEvent.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/85ff6f624e23ae016b859f4829dd6f177b24c8b7/libjava%2Fjavax%2Fprint%2Fevent%2FPrintEvent.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fprint%2Fevent%2FPrintEvent.java?ref=85ff6f624e23ae016b859f4829dd6f177b24c8b7", "patch": "@@ -0,0 +1,67 @@\n+/* PrintEvent.java -- \n+   Copyright (C) 2004  Free Software Foundation, Inc.\n+\n+This file is part of GNU Classpath.\n+\n+GNU Classpath is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2, or (at your option)\n+any later version.\n+\n+GNU Classpath is distributed in the hope that it will be useful, but\n+WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GNU Classpath; see the file COPYING.  If not, write to the\n+Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA\n+02111-1307 USA.\n+\n+Linking this library statically or dynamically with other modules is\n+making a combined work based on this library.  Thus, the terms and\n+conditions of the GNU General Public License cover the whole\n+combination.\n+\n+As a special exception, the copyright holders of this library give you\n+permission to link this library with independent modules to produce an\n+executable, regardless of the license terms of these independent\n+modules, and to copy and distribute the resulting executable under\n+terms of your choice, provided that you also meet, for each linked\n+independent module, the terms and conditions of the license of that\n+module.  An independent module is a module which is not derived from\n+or based on this library.  If you modify this library, you may extend\n+this exception to your version of the library, but you are not\n+obligated to do so.  If you do not wish to do so, delete this\n+exception statement from your version. */\n+\n+package javax.print.event;\n+\n+import java.util.EventObject;\n+\n+\n+/**\n+ * @author Michael Koch (konqueror@gmx.de)\n+ */\n+public class PrintEvent extends EventObject\n+{\n+  /**\n+   * Constructs a <code>PrintEvent</code> object.\n+   * \n+   * @param source the source of this event\n+   */\n+  public PrintEvent(Object source)\n+  {\n+    super(source);\n+  }\n+\n+  /**\n+   * Returns a string representation of this object.\n+   * \n+   * @return the string representation\n+   */\n+  public String toString()\n+  {\n+    return \"PrintEvent on \" + getSource().toString();\n+  }\n+}"}, {"sha": "603b175081abb604b1d75d2f9ef5fdc131df3463", "filename": "libjava/javax/print/event/PrintJobAdapter.java", "status": "added", "additions": 117, "deletions": 0, "changes": 117, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/85ff6f624e23ae016b859f4829dd6f177b24c8b7/libjava%2Fjavax%2Fprint%2Fevent%2FPrintJobAdapter.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/85ff6f624e23ae016b859f4829dd6f177b24c8b7/libjava%2Fjavax%2Fprint%2Fevent%2FPrintJobAdapter.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fprint%2Fevent%2FPrintJobAdapter.java?ref=85ff6f624e23ae016b859f4829dd6f177b24c8b7", "patch": "@@ -0,0 +1,117 @@\n+/* PrintJobAdapter.java -- \n+   Copyright (C) 2004  Free Software Foundation, Inc.\n+\n+This file is part of GNU Classpath.\n+\n+GNU Classpath is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2, or (at your option)\n+any later version.\n+\n+GNU Classpath is distributed in the hope that it will be useful, but\n+WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GNU Classpath; see the file COPYING.  If not, write to the\n+Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA\n+02111-1307 USA.\n+\n+Linking this library statically or dynamically with other modules is\n+making a combined work based on this library.  Thus, the terms and\n+conditions of the GNU General Public License cover the whole\n+combination.\n+\n+As a special exception, the copyright holders of this library give you\n+permission to link this library with independent modules to produce an\n+executable, regardless of the license terms of these independent\n+modules, and to copy and distribute the resulting executable under\n+terms of your choice, provided that you also meet, for each linked\n+independent module, the terms and conditions of the license of that\n+module.  An independent module is a module which is not derived from\n+or based on this library.  If you modify this library, you may extend\n+this exception to your version of the library, but you are not\n+obligated to do so.  If you do not wish to do so, delete this\n+exception statement from your version. */\n+\n+package javax.print.event;\n+\n+\n+/**\n+ * @author Michael Koch (konqueror@gmx.de)\n+ */\n+public abstract class PrintJobAdapter\n+  implements PrintJobListener\n+{\n+  /**\n+   * Constructs a <code>PrintJobAdapter</code> object.\n+   */\n+  public PrintJobAdapter()\n+  {\n+    // Do nothing here.\n+  }\n+  \n+  /**\n+   * Called to notify the client that all data has bin successfully transferred\n+   * to the print service.\n+   * \n+   * <p>The default implementation does nothing</p>\n+   */\n+  public void printDataTransferCompleted(PrintJobEvent event)\n+  {\n+    // Do nothing here.\n+  }\n+\n+  /**\n+   * Called to notify the client that a print job was canceled.\n+   * \n+   * <p>The default implementation does nothing</p>\n+   */\n+  public void printJobCanceled(PrintJobEvent event)\n+  {\n+    // Do nothing here.\n+  }\n+\n+  /**\n+   * Called to notify the client that a print job was successfully completed.\n+   * \n+   * <p>The default implementation does nothing</p>\n+   */\n+  public void printJobCompleted(PrintJobEvent event)\n+  {\n+    // Do nothing here.\n+  }\n+\n+  /**\n+   * Called to notify the client that a print job failed to complete\n+   * successfully.\n+   * \n+   * <p>The default implementation does nothing</p>\n+   */\n+  public void printJobFailed(PrintJobEvent event)\n+  {\n+    // Do nothing here.\n+  }\n+\n+  /**\n+   * Called to notify the client that no more job events will be send.\n+   * \n+   * <p>The default implementation does nothing</p>\n+   */\n+  public void printJobNoMoreEvents(PrintJobEvent event)\n+  {\n+    // Do nothing here.\n+  }\n+\n+  /**\n+   * Called to notify the client that a problem occured during printing\n+   * but the user may be able to fix it.\n+   * \n+   * <p>The default implementation does nothing</p>\n+   */\n+  public void printJobRequiresAttention(PrintJobEvent event)\n+  {\n+    // Do nothing here.\n+  }\n+}"}, {"sha": "246c691a6ea26c98d1bf32675729a922d254527e", "filename": "libjava/javax/print/event/PrintJobAttributeEvent.java", "status": "added", "additions": 85, "deletions": 0, "changes": 85, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/85ff6f624e23ae016b859f4829dd6f177b24c8b7/libjava%2Fjavax%2Fprint%2Fevent%2FPrintJobAttributeEvent.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/85ff6f624e23ae016b859f4829dd6f177b24c8b7/libjava%2Fjavax%2Fprint%2Fevent%2FPrintJobAttributeEvent.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fprint%2Fevent%2FPrintJobAttributeEvent.java?ref=85ff6f624e23ae016b859f4829dd6f177b24c8b7", "patch": "@@ -0,0 +1,85 @@\n+/* PrintJobAttributeEvent.java -- \n+   Copyright (C) 2004  Free Software Foundation, Inc.\n+\n+This file is part of GNU Classpath.\n+\n+GNU Classpath is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2, or (at your option)\n+any later version.\n+\n+GNU Classpath is distributed in the hope that it will be useful, but\n+WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GNU Classpath; see the file COPYING.  If not, write to the\n+Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA\n+02111-1307 USA.\n+\n+Linking this library statically or dynamically with other modules is\n+making a combined work based on this library.  Thus, the terms and\n+conditions of the GNU General Public License cover the whole\n+combination.\n+\n+As a special exception, the copyright holders of this library give you\n+permission to link this library with independent modules to produce an\n+executable, regardless of the license terms of these independent\n+modules, and to copy and distribute the resulting executable under\n+terms of your choice, provided that you also meet, for each linked\n+independent module, the terms and conditions of the license of that\n+module.  An independent module is a module which is not derived from\n+or based on this library.  If you modify this library, you may extend\n+this exception to your version of the library, but you are not\n+obligated to do so.  If you do not wish to do so, delete this\n+exception statement from your version. */\n+\n+package javax.print.event;\n+\n+import javax.print.DocPrintJob;\n+import javax.print.attribute.PrintJobAttributeSet;\n+\n+\n+/**\n+ * @author Michael Koch (konqueror@gmx.de)\n+ */\n+public class PrintJobAttributeEvent extends PrintEvent\n+{\n+  private static final long serialVersionUID = -6534469883874742101L;\n+  \n+  private PrintJobAttributeSet attributes;\n+  \n+  /**\n+   * Constructs a <code>PrintJobAttributeEvent</code> object.\n+   * \n+   * @param source the source of this event\n+   * @param attributes the attribute changes being reported\n+   */\n+  public PrintJobAttributeEvent(DocPrintJob source,\n+                                PrintJobAttributeSet attributes)\n+  {\n+    super(source);\n+    this.attributes = attributes;\n+  }\n+\n+  /**\n+   * Returns the print job generating this event.\n+   * \n+   * @return the print job\n+   */\n+  public DocPrintJob getPrintJob()\n+  {\n+    return (DocPrintJob) getSource();\n+  }\n+\n+  /**\n+   * Returns the attributes that changed and their new values.\n+   * \n+   * @return the changes attributes\n+   */\n+  public PrintJobAttributeSet getAttributes()\n+  {\n+    return attributes;\n+  }\n+}"}, {"sha": "7dfcc5d5013e0d4e3a0bce6cfb971bb1b4fc6a0a", "filename": "libjava/javax/print/event/PrintJobAttributeListener.java", "status": "added", "additions": 52, "deletions": 0, "changes": 52, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/85ff6f624e23ae016b859f4829dd6f177b24c8b7/libjava%2Fjavax%2Fprint%2Fevent%2FPrintJobAttributeListener.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/85ff6f624e23ae016b859f4829dd6f177b24c8b7/libjava%2Fjavax%2Fprint%2Fevent%2FPrintJobAttributeListener.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fprint%2Fevent%2FPrintJobAttributeListener.java?ref=85ff6f624e23ae016b859f4829dd6f177b24c8b7", "patch": "@@ -0,0 +1,52 @@\n+/* PrintJobAttributeListener.java -- \n+   Copyright (C) 2004  Free Software Foundation, Inc.\n+\n+This file is part of GNU Classpath.\n+\n+GNU Classpath is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2, or (at your option)\n+any later version.\n+\n+GNU Classpath is distributed in the hope that it will be useful, but\n+WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GNU Classpath; see the file COPYING.  If not, write to the\n+Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA\n+02111-1307 USA.\n+\n+Linking this library statically or dynamically with other modules is\n+making a combined work based on this library.  Thus, the terms and\n+conditions of the GNU General Public License cover the whole\n+combination.\n+\n+As a special exception, the copyright holders of this library give you\n+permission to link this library with independent modules to produce an\n+executable, regardless of the license terms of these independent\n+modules, and to copy and distribute the resulting executable under\n+terms of your choice, provided that you also meet, for each linked\n+independent module, the terms and conditions of the license of that\n+module.  An independent module is a module which is not derived from\n+or based on this library.  If you modify this library, you may extend\n+this exception to your version of the library, but you are not\n+obligated to do so.  If you do not wish to do so, delete this\n+exception statement from your version. */\n+\n+package javax.print.event;\n+\n+\n+/**\n+ * @author Michael Koch (konqueror@gmx.de)\n+ */\n+public interface PrintJobAttributeListener\n+{\n+  /**\n+   * Notifies the listener of an attribute change.\n+   * \n+   * @param event the event\n+   */\n+  void attributeUpdate(PrintJobAttributeEvent event);\n+}"}, {"sha": "467bfa090eb0894a1e06c3be7a73c0408f523cbb", "filename": "libjava/javax/print/event/PrintJobEvent.java", "status": "added", "additions": 90, "deletions": 0, "changes": 90, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/85ff6f624e23ae016b859f4829dd6f177b24c8b7/libjava%2Fjavax%2Fprint%2Fevent%2FPrintJobEvent.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/85ff6f624e23ae016b859f4829dd6f177b24c8b7/libjava%2Fjavax%2Fprint%2Fevent%2FPrintJobEvent.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fprint%2Fevent%2FPrintJobEvent.java?ref=85ff6f624e23ae016b859f4829dd6f177b24c8b7", "patch": "@@ -0,0 +1,90 @@\n+/* PrintEvent.java -- \n+   Copyright (C) 2004  Free Software Foundation, Inc.\n+\n+This file is part of GNU Classpath.\n+\n+GNU Classpath is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2, or (at your option)\n+any later version.\n+\n+GNU Classpath is distributed in the hope that it will be useful, but\n+WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GNU Classpath; see the file COPYING.  If not, write to the\n+Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA\n+02111-1307 USA.\n+\n+Linking this library statically or dynamically with other modules is\n+making a combined work based on this library.  Thus, the terms and\n+conditions of the GNU General Public License cover the whole\n+combination.\n+\n+As a special exception, the copyright holders of this library give you\n+permission to link this library with independent modules to produce an\n+executable, regardless of the license terms of these independent\n+modules, and to copy and distribute the resulting executable under\n+terms of your choice, provided that you also meet, for each linked\n+independent module, the terms and conditions of the license of that\n+module.  An independent module is a module which is not derived from\n+or based on this library.  If you modify this library, you may extend\n+this exception to your version of the library, but you are not\n+obligated to do so.  If you do not wish to do so, delete this\n+exception statement from your version. */\n+\n+package javax.print.event;\n+\n+import javax.print.DocPrintJob;\n+\n+\n+/**\n+ * @author Michael Koch (konqueror@gmx.de)\n+ */\n+public class PrintJobEvent extends PrintEvent\n+{\n+  private static final long serialVersionUID = -1711656903622072997L;\n+\n+  public static final int DATA_TRANSFER_COMPLETE = 106;\n+  public static final int JOB_CANCELED = 101;\n+  public static final int JOB_COMPLETE = 102;\n+  public static final int JOB_FAILED = 103;\n+  public static final int NO_MORE_EVENTS = 105;\n+  public static final int REQUIRES_ATTENTION = 104;\n+  \n+  private int reason;\n+  \n+  /**\n+   * Constructs a <code>PrintJobEvent</code> object.\n+   * \n+   * @param source the source generating this event\n+   * @param reason the reason for this event\n+   */\n+  public PrintJobEvent(DocPrintJob source, int reason)\n+  {\n+    super(source);\n+    this.reason = reason;\n+  }\n+\n+  /**\n+   * Returns the reason for this event.\n+   * \n+   * @return the reason\n+   */\n+  public int getPrintEventType()\n+  {\n+    return reason;\n+  }\n+\n+  /**\n+   * Returns the print job that generated this event.\n+   * \n+   * @return the print job\n+   */ \n+  public DocPrintJob getPrintJob()\n+  {\n+    return (DocPrintJob) getSource();\n+  }\n+}"}, {"sha": "1aad0687950803f05ea5b748058e789073acbcc9", "filename": "libjava/javax/print/event/PrintJobListener.java", "status": "added", "additions": 87, "deletions": 0, "changes": 87, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/85ff6f624e23ae016b859f4829dd6f177b24c8b7/libjava%2Fjavax%2Fprint%2Fevent%2FPrintJobListener.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/85ff6f624e23ae016b859f4829dd6f177b24c8b7/libjava%2Fjavax%2Fprint%2Fevent%2FPrintJobListener.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fprint%2Fevent%2FPrintJobListener.java?ref=85ff6f624e23ae016b859f4829dd6f177b24c8b7", "patch": "@@ -0,0 +1,87 @@\n+/* PrintJobListener.java -- \n+   Copyright (C) 2004  Free Software Foundation, Inc.\n+\n+This file is part of GNU Classpath.\n+\n+GNU Classpath is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2, or (at your option)\n+any later version.\n+\n+GNU Classpath is distributed in the hope that it will be useful, but\n+WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GNU Classpath; see the file COPYING.  If not, write to the\n+Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA\n+02111-1307 USA.\n+\n+Linking this library statically or dynamically with other modules is\n+making a combined work based on this library.  Thus, the terms and\n+conditions of the GNU General Public License cover the whole\n+combination.\n+\n+As a special exception, the copyright holders of this library give you\n+permission to link this library with independent modules to produce an\n+executable, regardless of the license terms of these independent\n+modules, and to copy and distribute the resulting executable under\n+terms of your choice, provided that you also meet, for each linked\n+independent module, the terms and conditions of the license of that\n+module.  An independent module is a module which is not derived from\n+or based on this library.  If you modify this library, you may extend\n+this exception to your version of the library, but you are not\n+obligated to do so.  If you do not wish to do so, delete this\n+exception statement from your version. */\n+\n+package javax.print.event;\n+\n+\n+/**\n+ * @author Michael Koch (konqueror@gmx.de) */\n+public interface PrintJobListener\n+{\n+  /**\n+   * Notifies the listener that all data has been successfully transferred\n+   * to the print service.\n+   * \n+   * @param event the event\n+   */\n+  void printDataTransferCompleted(PrintJobEvent event);\n+  \n+  /**\n+   * Notifies the listener that a print job got canceled.\n+   * \n+   * @param event the event\n+   */\n+  void printJobCanceled(PrintJobEvent event);\n+  \n+  /**\n+   * Notifies the listener that a print job has completed.\n+   * \n+   * @param event the event\n+   */\n+  void printJobCompleted(PrintJobEvent event);\n+  \n+  /**\n+   * Notifies the listener that a print job has failed to complete.\n+   * \n+   * @param event the event.\n+   */\n+  void printJobFailed(PrintJobEvent event);\n+  \n+  /**\n+   * Notifies the listener that no more events will be delivered.\n+   * \n+   * @param event the event\n+   */\n+  void printJobNoMoreEvents(PrintJobEvent event);\n+  \n+  /**\n+   * Notifies the listener that an error occured and the user might be able to fix it.\n+   * \n+   * @param event the event\n+   */\n+  void printJobRequiresAttention(PrintJobEvent event);\n+}"}, {"sha": "a9162c89fbc13c742c94500e41bf83ac8bf2ddc4", "filename": "libjava/javax/print/event/PrintServiceAttributeEvent.java", "status": "added", "additions": 83, "deletions": 0, "changes": 83, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/85ff6f624e23ae016b859f4829dd6f177b24c8b7/libjava%2Fjavax%2Fprint%2Fevent%2FPrintServiceAttributeEvent.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/85ff6f624e23ae016b859f4829dd6f177b24c8b7/libjava%2Fjavax%2Fprint%2Fevent%2FPrintServiceAttributeEvent.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fprint%2Fevent%2FPrintServiceAttributeEvent.java?ref=85ff6f624e23ae016b859f4829dd6f177b24c8b7", "patch": "@@ -0,0 +1,83 @@\n+/* PrintServiceAttributeEvent.java -- \n+   Copyright (C) 2004  Free Software Foundation, Inc.\n+\n+This file is part of GNU Classpath.\n+\n+GNU Classpath is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2, or (at your option)\n+any later version.\n+\n+GNU Classpath is distributed in the hope that it will be useful, but\n+WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GNU Classpath; see the file COPYING.  If not, write to the\n+Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA\n+02111-1307 USA.\n+\n+Linking this library statically or dynamically with other modules is\n+making a combined work based on this library.  Thus, the terms and\n+conditions of the GNU General Public License cover the whole\n+combination.\n+\n+As a special exception, the copyright holders of this library give you\n+permission to link this library with independent modules to produce an\n+executable, regardless of the license terms of these independent\n+modules, and to copy and distribute the resulting executable under\n+terms of your choice, provided that you also meet, for each linked\n+independent module, the terms and conditions of the license of that\n+module.  An independent module is a module which is not derived from\n+or based on this library.  If you modify this library, you may extend\n+this exception to your version of the library, but you are not\n+obligated to do so.  If you do not wish to do so, delete this\n+exception statement from your version. */\n+\n+package javax.print.event;\n+\n+import javax.print.PrintService;\n+import javax.print.attribute.PrintServiceAttributeSet;\n+\n+\n+/**\n+ * @author Michael Koch (konqueror@gmx.de)\n+ */\n+public class PrintServiceAttributeEvent extends PrintEvent\n+{\n+  private PrintServiceAttributeSet attributes;\n+  \n+  /**\n+   * Constructs a <code>PrintServiceAttributeEvent</code> object.\n+   * \n+   * @param source the source of this event\n+   * @param attributes the attribute changes being reported\n+   */\n+  public PrintServiceAttributeEvent(PrintService source,\n+                                    PrintServiceAttributeSet attributes)\n+  {\n+    super(source);\n+    this.attributes = attributes;\n+  }\n+\n+  /**\n+   * Returns the print service that generated this event.\n+   * \n+   * @return the print service\n+   */\n+  public PrintService getPrintService()\n+  {\n+    return (PrintService) getSource();\n+  }\n+\n+  /**\n+   * Returns the changed attributes this event reports.\n+   * \n+   * @return the changed attributes\n+   */\n+  public PrintServiceAttributeSet getAttributes()\n+  {\n+    return attributes;\n+  }\n+}"}, {"sha": "d066019ec391bdb755ddedbb7d9f68401e4f7328", "filename": "libjava/javax/print/event/PrintServiceAttributeListener.java", "status": "added", "additions": 52, "deletions": 0, "changes": 52, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/85ff6f624e23ae016b859f4829dd6f177b24c8b7/libjava%2Fjavax%2Fprint%2Fevent%2FPrintServiceAttributeListener.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/85ff6f624e23ae016b859f4829dd6f177b24c8b7/libjava%2Fjavax%2Fprint%2Fevent%2FPrintServiceAttributeListener.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fprint%2Fevent%2FPrintServiceAttributeListener.java?ref=85ff6f624e23ae016b859f4829dd6f177b24c8b7", "patch": "@@ -0,0 +1,52 @@\n+/* PrintServiceAttributeListener.java -- \n+   Copyright (C) 2004  Free Software Foundation, Inc.\n+\n+This file is part of GNU Classpath.\n+\n+GNU Classpath is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2, or (at your option)\n+any later version.\n+\n+GNU Classpath is distributed in the hope that it will be useful, but\n+WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GNU Classpath; see the file COPYING.  If not, write to the\n+Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA\n+02111-1307 USA.\n+\n+Linking this library statically or dynamically with other modules is\n+making a combined work based on this library.  Thus, the terms and\n+conditions of the GNU General Public License cover the whole\n+combination.\n+\n+As a special exception, the copyright holders of this library give you\n+permission to link this library with independent modules to produce an\n+executable, regardless of the license terms of these independent\n+modules, and to copy and distribute the resulting executable under\n+terms of your choice, provided that you also meet, for each linked\n+independent module, the terms and conditions of the license of that\n+module.  An independent module is a module which is not derived from\n+or based on this library.  If you modify this library, you may extend\n+this exception to your version of the library, but you are not\n+obligated to do so.  If you do not wish to do so, delete this\n+exception statement from your version. */\n+\n+package javax.print.event;\n+\n+\n+/**\n+ * @author Michael Koch (konqueror@gmx.de)\n+ */\n+public interface PrintServiceAttributeListener\n+{\n+  /**\n+   * Notifies the listener that some attributes have changed.\n+   * \n+   * @param event the event\n+   */\n+  void attributeUpdate(PrintServiceAttributeEvent event);\n+}"}]}