{"sha": "1b5572edb8caaed2f31a7235b8c58628da6bdb8f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWI1NTcyZWRiOGNhYWVkMmYzMWE3MjM1YjhjNTg2MjhkYTZiZGI4Zg==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2021-02-03T08:04:26Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2021-02-03T08:10:28Z"}, "message": "i386: Remove V1DImode shift expanders [PR98287]\n\nOn Tue, Feb 02, 2021 at 02:23:55PM +0100, Richard Biener wrote:\n> All I say is that the x86 target\n> should either not advertise V1DF shifts or advertise the basic\n> ops that reasonable simplification would expect to exist.\n\nThe backend has several V1?Imode shifts, but optab only for those V1DImode\nones:\n\ngrep '[la]sh[lr]v1[qhsdtox]' tmp-mddump.md\n(define_insn (\"mmx_ashlv1di3\")\n(define_insn (\"mmx_lshrv1di3\")\n(define_insn (\"avx512bw_ashlv1ti3\")\n(define_insn (\"avx512bw_lshrv1ti3\")\n(define_insn (\"sse2_ashlv1ti3\")\n(define_insn (\"sse2_lshrv1ti3\")\n(define_expand (\"ashlv1di3\")\n(define_expand (\"lshrv1di3\")\n  emit_insn (gen_sse2_lshrv1ti3 (tmp, gen_lowpart (V1TImode, operands[1]),\n\nI think it has been introduced with\nhttps://gcc.gnu.org/bugzilla/show_bug.cgi?id=89021#c13\n\nBefore we didn't have any V1DImode expanders (except mov/movmisalign, but\nthose are needed and are supplied for other V1??mode modes too).\n\nThis patch just removes the two V1DImode shift expanders with standard names.\n\n2021-02-03  Jakub Jelinek  <jakub@redhat.com>\n\n\tPR tree-optimization/98287\n\t* config/i386/mmx.md (<insn><mode>3): For shifts don't enable expander\n\tfor V1DImode.\n\n\t* gcc.dg/pr98287.c: New test.", "tree": {"sha": "5988a7c0591e2730baa3069cf6d0b8f305547336", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5988a7c0591e2730baa3069cf6d0b8f305547336"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1b5572edb8caaed2f31a7235b8c58628da6bdb8f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1b5572edb8caaed2f31a7235b8c58628da6bdb8f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1b5572edb8caaed2f31a7235b8c58628da6bdb8f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1b5572edb8caaed2f31a7235b8c58628da6bdb8f/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5e606ed90a1bed878071b6b5a3ef9b97b3d99838", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5e606ed90a1bed878071b6b5a3ef9b97b3d99838", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5e606ed90a1bed878071b6b5a3ef9b97b3d99838"}], "stats": {"total": 25, "additions": 22, "deletions": 3}, "files": [{"sha": "9e5a4d1f2834b969929049967d1b6b139e0138fd", "filename": "gcc/config/i386/mmx.md", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1b5572edb8caaed2f31a7235b8c58628da6bdb8f/gcc%2Fconfig%2Fi386%2Fmmx.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1b5572edb8caaed2f31a7235b8c58628da6bdb8f/gcc%2Fconfig%2Fi386%2Fmmx.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fmmx.md?ref=1b5572edb8caaed2f31a7235b8c58628da6bdb8f", "patch": "@@ -1528,9 +1528,9 @@\n    (set_attr \"mode\" \"DI,TI,TI\")])\n \n (define_expand \"<insn><mode>3\"\n-  [(set (match_operand:MMXMODE248 0 \"register_operand\")\n-        (any_lshift:MMXMODE248\n-\t  (match_operand:MMXMODE248 1 \"register_operand\")\n+  [(set (match_operand:MMXMODE24 0 \"register_operand\")\n+        (any_lshift:MMXMODE24\n+\t  (match_operand:MMXMODE24 1 \"register_operand\")\n \t  (match_operand:DI 2 \"nonmemory_operand\")))]\n   \"TARGET_MMX_WITH_SSE\")\n "}, {"sha": "031442850c6cdd4b78ef6ec5568edd574fb29878", "filename": "gcc/testsuite/gcc.dg/pr98287.c", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1b5572edb8caaed2f31a7235b8c58628da6bdb8f/gcc%2Ftestsuite%2Fgcc.dg%2Fpr98287.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1b5572edb8caaed2f31a7235b8c58628da6bdb8f/gcc%2Ftestsuite%2Fgcc.dg%2Fpr98287.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr98287.c?ref=1b5572edb8caaed2f31a7235b8c58628da6bdb8f", "patch": "@@ -0,0 +1,19 @@\n+/* PR tree-optimization/98287 */\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -fno-tree-ccp -fno-tree-forwprop -Wno-psabi -w\" } */\n+\n+typedef unsigned long __attribute__((__vector_size__ (8))) V;\n+V v;\n+\n+static __attribute__((noinline, noclone)) V\n+bar (unsigned short s)\n+{\n+  return v >> s << s | v >> s >> 63;\n+}\n+\n+unsigned long\n+foo (void)\n+{\n+  V x = bar (1);\n+  return x[0];\n+}"}]}