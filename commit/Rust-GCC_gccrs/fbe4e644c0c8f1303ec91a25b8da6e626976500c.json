{"sha": "fbe4e644c0c8f1303ec91a25b8da6e626976500c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZmJlNGU2NDRjMGM4ZjEzMDNlYzkxYTI1YjhkYTZlNjI2OTc2NTAwYw==", "commit": {"author": {"name": "Cherry Zhang", "email": "cherryyz@google.com", "date": "2019-05-08T17:40:45Z"}, "committer": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2019-05-08T17:40:45Z"}, "message": "runtime: use builtin memmove directly\n    \n    We can use the intrinsic memmove directly, without going through\n    C.\n    \n    Reviewed-on: https://go-review.googlesource.com/c/gofrontend/+/170004\n\n\t* go-gcc.cc (Gcc_backend::Gcc_backend): Define memmove builtin.\n\nFrom-SVN: r271016", "tree": {"sha": "87a1cfc98677c590f437af9209a3c78b34b5e9ef", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/87a1cfc98677c590f437af9209a3c78b34b5e9ef"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/fbe4e644c0c8f1303ec91a25b8da6e626976500c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fbe4e644c0c8f1303ec91a25b8da6e626976500c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fbe4e644c0c8f1303ec91a25b8da6e626976500c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fbe4e644c0c8f1303ec91a25b8da6e626976500c/comments", "author": {"login": "cherrymui", "id": 14119929, "node_id": "MDQ6VXNlcjE0MTE5OTI5", "avatar_url": "https://avatars.githubusercontent.com/u/14119929?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cherrymui", "html_url": "https://github.com/cherrymui", "followers_url": "https://api.github.com/users/cherrymui/followers", "following_url": "https://api.github.com/users/cherrymui/following{/other_user}", "gists_url": "https://api.github.com/users/cherrymui/gists{/gist_id}", "starred_url": "https://api.github.com/users/cherrymui/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cherrymui/subscriptions", "organizations_url": "https://api.github.com/users/cherrymui/orgs", "repos_url": "https://api.github.com/users/cherrymui/repos", "events_url": "https://api.github.com/users/cherrymui/events{/privacy}", "received_events_url": "https://api.github.com/users/cherrymui/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "5345ac5a110a5fcafaa9bdf3116b8252de2d96c6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5345ac5a110a5fcafaa9bdf3116b8252de2d96c6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5345ac5a110a5fcafaa9bdf3116b8252de2d96c6"}], "stats": {"total": 56, "additions": 24, "deletions": 32}, "files": [{"sha": "10c2b6959f6ddf8ccc186d81ce66186a79049fa6", "filename": "gcc/go/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fbe4e644c0c8f1303ec91a25b8da6e626976500c/gcc%2Fgo%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fbe4e644c0c8f1303ec91a25b8da6e626976500c/gcc%2Fgo%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgo%2FChangeLog?ref=fbe4e644c0c8f1303ec91a25b8da6e626976500c", "patch": "@@ -1,3 +1,7 @@\n+2019-05-08  Cherry Zhang  <cherryyz@google.com>\n+\n+\t* go-gcc.cc (Gcc_backend::Gcc_backend): Define memmove builtin.\n+\n 2019-05-07  Cherry Zhang  <cherryyz@google.com>\n \n \t* lang.opt (-fgo-debug-optimization): New option."}, {"sha": "e0e4333602c12224a5c818038f0c4205f2edc7c9", "filename": "gcc/go/go-gcc.cc", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fbe4e644c0c8f1303ec91a25b8da6e626976500c/gcc%2Fgo%2Fgo-gcc.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fbe4e644c0c8f1303ec91a25b8da6e626976500c/gcc%2Fgo%2Fgo-gcc.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgo%2Fgo-gcc.cc?ref=fbe4e644c0c8f1303ec91a25b8da6e626976500c", "patch": "@@ -604,6 +604,15 @@ Gcc_backend::Gcc_backend()\n \t\t\t\t\t\tNULL_TREE),\n \t\t       false, false);\n \n+  // We use __builtin_memmove for copying data.\n+  this->define_builtin(BUILT_IN_MEMMOVE, \"__builtin_memmove\", \"memmove\",\n+\t\t       build_function_type_list(void_type_node,\n+\t\t\t\t\t\tptr_type_node,\n+\t\t\t\t\t\tconst_ptr_type_node,\n+\t\t\t\t\t\tsize_type_node,\n+\t\t\t\t\t\tNULL_TREE),\n+\t\t       false, false);\n+\n   // Used by runtime/internal/sys.\n   this->define_builtin(BUILT_IN_CTZ, \"__builtin_ctz\", \"ctz\",\n \t\t       build_function_type_list(integer_type_node,"}, {"sha": "c7caf1eb4a995545b1011974aa8fd170e2ce028e", "filename": "gcc/go/gofrontend/MERGE", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fbe4e644c0c8f1303ec91a25b8da6e626976500c/gcc%2Fgo%2Fgofrontend%2FMERGE", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fbe4e644c0c8f1303ec91a25b8da6e626976500c/gcc%2Fgo%2Fgofrontend%2FMERGE", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgo%2Fgofrontend%2FMERGE?ref=fbe4e644c0c8f1303ec91a25b8da6e626976500c", "patch": "@@ -1,4 +1,4 @@\n-0b4cf8ded107ccbfbd4af7f4e056f23f941d0f86\n+3a9bccfbf4af1c756978c40967838d9f6a4e7a62\n \n The first line of this file holds the git revision number of the last\n merge done from the gofrontend repository."}, {"sha": "ebbdee81b228fe6f39c4bbc0976ea6a12fa4f907", "filename": "libgo/Makefile.am", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fbe4e644c0c8f1303ec91a25b8da6e626976500c/libgo%2FMakefile.am", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fbe4e644c0c8f1303ec91a25b8da6e626976500c/libgo%2FMakefile.am", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2FMakefile.am?ref=fbe4e644c0c8f1303ec91a25b8da6e626976500c", "patch": "@@ -461,7 +461,6 @@ runtime_files = \\\n \truntime/go-memclr.c \\\n \truntime/go-memcmp.c \\\n \truntime/go-memequal.c \\\n-\truntime/go-memmove.c \\\n \truntime/go-nanotime.c \\\n \truntime/go-now.c \\\n \truntime/go-nosys.c \\"}, {"sha": "737b01e90d8c013b4aeb44aa6f3462bfaf169083", "filename": "libgo/Makefile.in", "status": "modified", "additions": 9, "deletions": 14, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fbe4e644c0c8f1303ec91a25b8da6e626976500c/libgo%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fbe4e644c0c8f1303ec91a25b8da6e626976500c/libgo%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2FMakefile.in?ref=fbe4e644c0c8f1303ec91a25b8da6e626976500c", "patch": "@@ -245,16 +245,15 @@ am__objects_3 = runtime/aeshash.lo runtime/go-assert.lo \\\n \truntime/go-ffi.lo runtime/go-fieldtrack.lo \\\n \truntime/go-matherr.lo runtime/go-memclr.lo \\\n \truntime/go-memcmp.lo runtime/go-memequal.lo \\\n-\truntime/go-memmove.lo runtime/go-nanotime.lo runtime/go-now.lo \\\n-\truntime/go-nosys.lo runtime/go-reflect-call.lo \\\n-\truntime/go-runtime-error.lo runtime/go-setenv.lo \\\n-\truntime/go-signal.lo runtime/go-strslice.lo \\\n-\truntime/go-typedesc-equal.lo runtime/go-unsafe-pointer.lo \\\n-\truntime/go-unsetenv.lo runtime/go-unwind.lo \\\n-\truntime/go-varargs.lo runtime/env_posix.lo runtime/panic.lo \\\n-\truntime/print.lo runtime/proc.lo runtime/runtime_c.lo \\\n-\truntime/stack.lo runtime/yield.lo $(am__objects_1) \\\n-\t$(am__objects_2)\n+\truntime/go-nanotime.lo runtime/go-now.lo runtime/go-nosys.lo \\\n+\truntime/go-reflect-call.lo runtime/go-runtime-error.lo \\\n+\truntime/go-setenv.lo runtime/go-signal.lo \\\n+\truntime/go-strslice.lo runtime/go-typedesc-equal.lo \\\n+\truntime/go-unsafe-pointer.lo runtime/go-unsetenv.lo \\\n+\truntime/go-unwind.lo runtime/go-varargs.lo \\\n+\truntime/env_posix.lo runtime/panic.lo runtime/print.lo \\\n+\truntime/proc.lo runtime/runtime_c.lo runtime/stack.lo \\\n+\truntime/yield.lo $(am__objects_1) $(am__objects_2)\n am_libgo_llgo_la_OBJECTS = $(am__objects_3)\n libgo_llgo_la_OBJECTS = $(am_libgo_llgo_la_OBJECTS)\n AM_V_lt = $(am__v_lt_@AM_V@)\n@@ -882,7 +881,6 @@ runtime_files = \\\n \truntime/go-memclr.c \\\n \truntime/go-memcmp.c \\\n \truntime/go-memequal.c \\\n-\truntime/go-memmove.c \\\n \truntime/go-nanotime.c \\\n \truntime/go-now.c \\\n \truntime/go-nosys.c \\\n@@ -1337,8 +1335,6 @@ runtime/go-memcmp.lo: runtime/$(am__dirstamp) \\\n \truntime/$(DEPDIR)/$(am__dirstamp)\n runtime/go-memequal.lo: runtime/$(am__dirstamp) \\\n \truntime/$(DEPDIR)/$(am__dirstamp)\n-runtime/go-memmove.lo: runtime/$(am__dirstamp) \\\n-\truntime/$(DEPDIR)/$(am__dirstamp)\n runtime/go-nanotime.lo: runtime/$(am__dirstamp) \\\n \truntime/$(DEPDIR)/$(am__dirstamp)\n runtime/go-now.lo: runtime/$(am__dirstamp) \\\n@@ -1431,7 +1427,6 @@ distclean-compile:\n @AMDEP_TRUE@@am__include@ @am__quote@runtime/$(DEPDIR)/go-memclr.Plo@am__quote@\n @AMDEP_TRUE@@am__include@ @am__quote@runtime/$(DEPDIR)/go-memcmp.Plo@am__quote@\n @AMDEP_TRUE@@am__include@ @am__quote@runtime/$(DEPDIR)/go-memequal.Plo@am__quote@\n-@AMDEP_TRUE@@am__include@ @am__quote@runtime/$(DEPDIR)/go-memmove.Plo@am__quote@\n @AMDEP_TRUE@@am__include@ @am__quote@runtime/$(DEPDIR)/go-nanotime.Plo@am__quote@\n @AMDEP_TRUE@@am__include@ @am__quote@runtime/$(DEPDIR)/go-nosys.Plo@am__quote@\n @AMDEP_TRUE@@am__include@ @am__quote@runtime/$(DEPDIR)/go-now.Plo@am__quote@"}, {"sha": "435cdf7ce9249d372cb2bf68459cc612d887269d", "filename": "libgo/go/runtime/stubs.go", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fbe4e644c0c8f1303ec91a25b8da6e626976500c/libgo%2Fgo%2Fruntime%2Fstubs.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fbe4e644c0c8f1303ec91a25b8da6e626976500c/libgo%2Fgo%2Fruntime%2Fstubs.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fruntime%2Fstubs.go?ref=fbe4e644c0c8f1303ec91a25b8da6e626976500c", "patch": "@@ -100,6 +100,7 @@ func reflect_memclrNoHeapPointers(ptr unsafe.Pointer, n uintptr) {\n \n // memmove copies n bytes from \"from\" to \"to\".\n //go:noescape\n+//extern __builtin_memmove\n func memmove(to, from unsafe.Pointer, n uintptr)\n \n //go:linkname reflect_memmove reflect.memmove"}, {"sha": "a6fda08c47def2d5dde9c4686e4a4df6f2ab84f6", "filename": "libgo/runtime/go-memmove.c", "status": "removed", "additions": 0, "deletions": 16, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5345ac5a110a5fcafaa9bdf3116b8252de2d96c6/libgo%2Fruntime%2Fgo-memmove.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5345ac5a110a5fcafaa9bdf3116b8252de2d96c6/libgo%2Fruntime%2Fgo-memmove.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fruntime%2Fgo-memmove.c?ref=5345ac5a110a5fcafaa9bdf3116b8252de2d96c6", "patch": "@@ -1,16 +0,0 @@\n-/* go-memmove.c -- move one memory buffer to another\n-\n-   Copyright 2016 The Go Authors. All rights reserved.\n-   Use of this source code is governed by a BSD-style\n-   license that can be found in the LICENSE file.  */\n-\n-#include \"runtime.h\"\n-\n-void move(void *, void *, uintptr)\n-  __asm__ (GOSYM_PREFIX \"runtime.memmove\");\n-\n-void\n-move (void *p1, void *p2, uintptr len)\n-{\n-  __builtin_memmove (p1, p2, len);\n-}"}]}