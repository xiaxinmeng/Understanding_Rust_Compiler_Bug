{"sha": "4e14f1f90fe38d7e5e25aa23fbb8e57fafd72a3e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGUxNGYxZjkwZmUzOGQ3ZTVlMjVhYTIzZmJiOGU1N2ZhZmQ3MmEzZQ==", "commit": {"author": {"name": "Richard Henderson", "email": "rth@redhat.com", "date": "2003-06-26T20:51:54Z"}, "committer": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "2003-06-26T20:51:54Z"}, "message": "ia64.c (ia64_expand_call): Don't add ar.pfs for sibcalls.\n\n        * config/ia64/ia64.c (ia64_expand_call): Don't add ar.pfs for sibcalls.\n        (ia64_split_call): Only load descriptor for GP register inputs.\n        (ia64_expand_epilogue): Check current_frame_info.mask not\n        current_function_is_leaf to restore ar.pfs.\n\nFrom-SVN: r68549", "tree": {"sha": "1c2fefd494d1513938f7f0318e8f9f4c2f6eacd4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1c2fefd494d1513938f7f0318e8f9f4c2f6eacd4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4e14f1f90fe38d7e5e25aa23fbb8e57fafd72a3e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4e14f1f90fe38d7e5e25aa23fbb8e57fafd72a3e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4e14f1f90fe38d7e5e25aa23fbb8e57fafd72a3e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4e14f1f90fe38d7e5e25aa23fbb8e57fafd72a3e/comments", "author": null, "committer": null, "parents": [{"sha": "49b83932ae442ba5c4f03377454c94ebf8786a6f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/49b83932ae442ba5c4f03377454c94ebf8786a6f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/49b83932ae442ba5c4f03377454c94ebf8786a6f"}], "stats": {"total": 17, "additions": 10, "deletions": 7}, "files": [{"sha": "90789f4935963b1d56aac12b5381b8f28ccfc1a7", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4e14f1f90fe38d7e5e25aa23fbb8e57fafd72a3e/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4e14f1f90fe38d7e5e25aa23fbb8e57fafd72a3e/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=4e14f1f90fe38d7e5e25aa23fbb8e57fafd72a3e", "patch": "@@ -2,6 +2,13 @@\n \n \t* config/ia64/ia64.h (REGISTER_NAMES): R0 is really AP.\n \n+2003-06-26  Richard Henderson  <rth@redhat.com>\n+\n+\t* config/ia64/ia64.c (ia64_expand_call): Don't add ar.pfs for sibcalls.\n+\t(ia64_split_call): Only load descriptor for GP register inputs.\n+\t(ia64_expand_epilogue): Check current_frame_info.mask not\n+\tcurrent_function_is_leaf to restore ar.pfs.\n+\n 2003-06-26  Richard Henderson  <rth@redhat.com>\n \t\n \t* emit-rtl.c (try_split): Append to new CALL_INSN_FUNCTION_USAGE"}, {"sha": "3803033a4b85b9c6163236b30acd29c84f54b7aa", "filename": "gcc/config/ia64/ia64.c", "status": "modified", "additions": 3, "deletions": 7, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4e14f1f90fe38d7e5e25aa23fbb8e57fafd72a3e/gcc%2Fconfig%2Fia64%2Fia64.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4e14f1f90fe38d7e5e25aa23fbb8e57fafd72a3e/gcc%2Fconfig%2Fia64%2Fia64.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fia64%2Fia64.c?ref=4e14f1f90fe38d7e5e25aa23fbb8e57fafd72a3e", "patch": "@@ -1499,11 +1499,7 @@ ia64_expand_call (retval, addr, nextarg, sibcall_p)\n     }\n \n   if (sibcall_p)\n-    {\n-      use_reg (&CALL_INSN_FUNCTION_USAGE (insn), b0);\n-      use_reg (&CALL_INSN_FUNCTION_USAGE (insn),\n-\t       gen_rtx_REG (DImode, AR_PFS_REGNUM));\n-    }\n+    use_reg (&CALL_INSN_FUNCTION_USAGE (insn), b0);\n }\n \n void\n@@ -1557,7 +1553,7 @@ ia64_split_call (retval, addr, retaddr, scratch_r, scratch_b,\n \n   /* If we find we're calling through a register, then we're actually\n      calling through a descriptor, so load up the values.  */\n-  if (REG_P (addr))\n+  if (REG_P (addr) && GR_REGNO_P (REGNO (addr)))\n     {\n       rtx tmp;\n       bool addr_dead_p;\n@@ -2785,7 +2781,7 @@ ia64_expand_epilogue (sibcall_p)\n       reg = gen_rtx_REG (DImode, AR_PFS_REGNUM);\n       emit_move_insn (reg, alt_reg);\n     }\n-  else if (! current_function_is_leaf)\n+  else if (TEST_HARD_REG_BIT (current_frame_info.mask, AR_PFS_REGNUM))\n     {\n       alt_regno = next_scratch_gr_reg ();\n       alt_reg = gen_rtx_REG (DImode, alt_regno);"}]}