{"sha": "91d2c04ced3420fdbfb5277336b6f4e164ca9f06", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTFkMmMwNGNlZDM0MjBmZGJmYjUyNzczMzZiNmY0ZTE2NGNhOWYwNg==", "commit": {"author": {"name": "Paul Thomas", "email": "pault@gcc.gnu.org", "date": "2017-03-18T12:38:02Z"}, "committer": {"name": "Paul Thomas", "email": "pault@gcc.gnu.org", "date": "2017-03-18T12:38:02Z"}, "message": "re PR fortran/79676 ([submodules] Compilation/linking error when module procedures PRIVATE)\n\n2017-03-18  Paul Thomas  <pault@gcc.gnu.org>\n\n\tPR fortran/79676\n\t* module.c (mio_symbol_attribute): Remove reset of the flag\n\t'no_module_procedures'.\n\t(check_for_module_procedures): New function. Move declaration\n\tof 'no_module_procedures' to above it.\n\t(gfc_dump_module): Traverse namespace calling new function.\n\n2017-03-18  Paul Thomas  <pault@gcc.gnu.org>\n\n\tPR fortran/79676\n\t* gfortran.dg/submodule_28.f08 : New test.\n\nFrom-SVN: r246256", "tree": {"sha": "03b723c0931642c3551a0ea6b0b5a91a10b888cc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/03b723c0931642c3551a0ea6b0b5a91a10b888cc"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/91d2c04ced3420fdbfb5277336b6f4e164ca9f06", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/91d2c04ced3420fdbfb5277336b6f4e164ca9f06", "html_url": "https://github.com/Rust-GCC/gccrs/commit/91d2c04ced3420fdbfb5277336b6f4e164ca9f06", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/91d2c04ced3420fdbfb5277336b6f4e164ca9f06/comments", "author": null, "committer": null, "parents": [{"sha": "c7e4107b537c31cbbd22720935073bb4787e9773", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c7e4107b537c31cbbd22720935073bb4787e9773", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c7e4107b537c31cbbd22720935073bb4787e9773"}], "stats": {"total": 87, "additions": 80, "deletions": 7}, "files": [{"sha": "5c99e1fb24ade5a8343a654f5546536d71e41c91", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/91d2c04ced3420fdbfb5277336b6f4e164ca9f06/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/91d2c04ced3420fdbfb5277336b6f4e164ca9f06/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=91d2c04ced3420fdbfb5277336b6f4e164ca9f06", "patch": "@@ -1,3 +1,12 @@\n+2017-03-18  Paul Thomas  <pault@gcc.gnu.org>\n+\n+\tPR fortran/79676\n+\t* module.c (mio_symbol_attribute): Remove reset of the flag\n+\t'no_module_procedures'.\n+\t(check_for_module_procedures): New function. Move declaration\n+\tof 'no_module_procedures' to above it.\n+\t(gfc_dump_module): Traverse namespace calling new function.\n+\n 2017-03-18  Paul Thomas  <pault@gcc.gnu.org>\n \n \tPR fortran/71838"}, {"sha": "80a65244600ad8aec35b9eb9459bcee7a25c22f7", "filename": "gcc/fortran/module.c", "status": "modified", "additions": 14, "deletions": 7, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/91d2c04ced3420fdbfb5277336b6f4e164ca9f06/gcc%2Ffortran%2Fmodule.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/91d2c04ced3420fdbfb5277336b6f4e164ca9f06/gcc%2Ffortran%2Fmodule.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fmodule.c?ref=91d2c04ced3420fdbfb5277336b6f4e164ca9f06", "patch": "@@ -193,10 +193,6 @@ static const char *module_name;\n /* The name of the .smod file that the submodule will write to.  */\n static const char *submodule_name;\n \n-/* Suppress the output of a .smod file by module, if no module\n-   procedures have been seen.  */\n-static bool no_module_procedures;\n-\n static gfc_use_list *module_list;\n \n /* If we're reading an intrinsic module, this is its ID.  */\n@@ -2243,10 +2239,7 @@ mio_symbol_attribute (symbol_attribute *attr)\n       if (attr->array_outer_dependency)\n \tMIO_NAME (ab_attribute) (AB_ARRAY_OUTER_DEPENDENCY, attr_bits);\n       if (attr->module_procedure)\n-\t{\n \tMIO_NAME (ab_attribute) (AB_MODULE_PROCEDURE, attr_bits);\n-\t  no_module_procedures = false;\n-\t}\n       if (attr->oacc_declare_create)\n \tMIO_NAME (ab_attribute) (AB_OACC_DECLARE_CREATE, attr_bits);\n       if (attr->oacc_declare_copyin)\n@@ -6139,6 +6132,18 @@ dump_module (const char *name, int dump_flag)\n }\n \n \n+/* Suppress the output of a .smod file by module, if no module\n+   procedures have been seen.  */\n+static bool no_module_procedures;\n+\n+static void\n+check_for_module_procedures (gfc_symbol *sym)\n+{\n+  if (sym && sym->attr.module_procedure)\n+    no_module_procedures = false;\n+}\n+\n+\n void\n gfc_dump_module (const char *name, int dump_flag)\n {\n@@ -6148,6 +6153,8 @@ gfc_dump_module (const char *name, int dump_flag)\n     dump_smod =false;\n \n   no_module_procedures = true;\n+  gfc_traverse_ns (gfc_current_ns, check_for_module_procedures);\n+\n   dump_module (name, dump_flag);\n \n   if (no_module_procedures || dump_smod)"}, {"sha": "7a8dbc0aef087ef7d6323d716607e541491d60b9", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/91d2c04ced3420fdbfb5277336b6f4e164ca9f06/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/91d2c04ced3420fdbfb5277336b6f4e164ca9f06/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=91d2c04ced3420fdbfb5277336b6f4e164ca9f06", "patch": "@@ -1,3 +1,8 @@\n+2017-03-18  Paul Thomas  <pault@gcc.gnu.org>\n+\n+\tPR fortran/79676\n+\t* gfortran.dg/submodule_28.f08 : New test.\n+\n 2017-03-18  Paul Thomas  <pault@gcc.gnu.org>\n \n \tPR fortran/71838"}, {"sha": "f7b10a6ed83b90a9f25336a05d424e71d8fb29bc", "filename": "gcc/testsuite/gfortran.dg/submodule_28.f08", "status": "added", "additions": 52, "deletions": 0, "changes": 52, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/91d2c04ced3420fdbfb5277336b6f4e164ca9f06/gcc%2Ftestsuite%2Fgfortran.dg%2Fsubmodule_28.f08", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/91d2c04ced3420fdbfb5277336b6f4e164ca9f06/gcc%2Ftestsuite%2Fgfortran.dg%2Fsubmodule_28.f08", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fsubmodule_28.f08?ref=91d2c04ced3420fdbfb5277336b6f4e164ca9f06", "patch": "@@ -0,0 +1,52 @@\n+! { dg-do run }\n+!\n+! Tests the fix for PR79676 in which submod_test was private even to the\n+! submodule 'my_submod'.\n+!\n+! Contributed by Adam Hirst  <adam@aphirst.karoo.co.uk>\n+!\n+module my_mod\n+  private           ! This hid 'submod_test'.\n+  interface\n+    module subroutine submod_test(x)\n+      integer :: x\n+    end subroutine\n+  end interface\n+  integer answer\n+  public routine1, print_two, answer\n+contains\n+  subroutine routine1(x)\n+    integer :: x\n+    call submod_test(x)\n+  end subroutine\n+  subroutine print_two()\n+    integer, parameter :: two = 2\n+    answer = answer * two\n+  end subroutine\n+end module\n+\n+module my_mod_2\n+  use my_mod\n+contains\n+  subroutine circular_dependency()\n+    call print_two()\n+  end subroutine\n+end module\n+\n+submodule (my_mod) my_submod\n+  use my_mod_2\n+contains\n+module subroutine submod_test(x)\n+  integer :: x\n+  answer = x\n+  call circular_dependency()\n+end subroutine\n+\n+end submodule\n+\n+program hello\n+  use my_mod\n+  implicit none\n+  call routine1(2)\n+  if (answer .ne. 4) call abort\n+end program"}]}