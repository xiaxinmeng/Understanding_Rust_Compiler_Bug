{"sha": "0217ac04cbcb977d8fe52873728d5fee98b7bc14", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDIxN2FjMDRjYmNiOTc3ZDhmZTUyODczNzI4ZDVmZWU5OGI3YmMxNA==", "commit": {"author": {"name": "Paolo Carlini", "email": "paolo.carlini@oracle.com", "date": "2011-09-02T13:30:32Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2011-09-02T13:30:32Z"}, "message": "bitset (_Base_bitset<>::_M_are_all_aux): Remove.\n\n2011-09-02  Paolo Carlini  <paolo.carlini@oracle.com>\n\t    Marc Glisse  <marc.glisse@normalesup.org>\n\n\t* include/std/bitset (_Base_bitset<>::_M_are_all_aux): Remove.\n\t(_Base_bitset<>::_M_are_all): Add.\n\t(bitset<>::all): Use the latter, improve implementation.\n\nCo-Authored-By: Marc Glisse <marc.glisse@normalesup.org>\n\nFrom-SVN: r178473", "tree": {"sha": "739b886e4ff9d7307b764a66396008b4a90f35dd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/739b886e4ff9d7307b764a66396008b4a90f35dd"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0217ac04cbcb977d8fe52873728d5fee98b7bc14", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0217ac04cbcb977d8fe52873728d5fee98b7bc14", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0217ac04cbcb977d8fe52873728d5fee98b7bc14", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0217ac04cbcb977d8fe52873728d5fee98b7bc14/comments", "author": null, "committer": null, "parents": [{"sha": "81fa35bd5991d39abb342bd655fbe8fc7b9b4026", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/81fa35bd5991d39abb342bd655fbe8fc7b9b4026", "html_url": "https://github.com/Rust-GCC/gccrs/commit/81fa35bd5991d39abb342bd655fbe8fc7b9b4026"}], "stats": {"total": 44, "additions": 28, "deletions": 16}, "files": [{"sha": "cb8361a3347cc351d6e45ca96beecef11c78ecd1", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0217ac04cbcb977d8fe52873728d5fee98b7bc14/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0217ac04cbcb977d8fe52873728d5fee98b7bc14/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=0217ac04cbcb977d8fe52873728d5fee98b7bc14", "patch": "@@ -1,3 +1,10 @@\n+2011-09-02  Paolo Carlini  <paolo.carlini@oracle.com>\n+\t    Marc Glisse  <marc.glisse@normalesup.org>\n+\n+\t* include/std/bitset (_Base_bitset<>::_M_are_all_aux): Remove.\n+\t(_Base_bitset<>::_M_are_all): Add.\n+\t(bitset<>::all): Use the latter, improve implementation.\n+\n 2011-09-02  Paolo Carlini  <paolo.carlini@oracle.com>\n \t    Marc Glisse  <marc.glisse@normalesup.org>\n "}, {"sha": "f771bfc0e016e8171974be1b7862a5e0791ba763", "filename": "libstdc++-v3/include/std/bitset", "status": "modified", "additions": 21, "deletions": 16, "changes": 37, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0217ac04cbcb977d8fe52873728d5fee98b7bc14/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fbitset", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0217ac04cbcb977d8fe52873728d5fee98b7bc14/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fbitset", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fbitset?ref=0217ac04cbcb977d8fe52873728d5fee98b7bc14", "patch": "@@ -185,15 +185,17 @@ _GLIBCXX_BEGIN_NAMESPACE_CONTAINER\n \treturn true;\n       }\n \n-      size_t\n-      _M_are_all_aux() const _GLIBCXX_NOEXCEPT\n-      {\n-\tfor (size_t __i = 0; __i < _Nw - 1; __i++)\n-\t  if (_M_w[__i] != ~static_cast<_WordT>(0))\n-\t    return 0;\n-\treturn ((_Nw - 1) * _GLIBCXX_BITSET_BITS_PER_WORD\n-\t\t+ __builtin_popcountl(_M_hiword()));\n-      }\n+      template<size_t _Nb>\n+        bool\n+        _M_are_all() const _GLIBCXX_NOEXCEPT\n+        {\n+\t  for (size_t __i = 0; __i < _Nw - 1; __i++)\n+\t    if (_M_w[__i] != ~static_cast<_WordT>(0))\n+\t      return false;\n+\t  return _M_hiword() == (~static_cast<_WordT>(0)\n+\t\t\t\t >> (_Nw * _GLIBCXX_BITSET_BITS_PER_WORD\n+\t\t\t\t     - _Nb));\n+\t}\n \n       bool\n       _M_is_any() const _GLIBCXX_NOEXCEPT\n@@ -460,9 +462,11 @@ _GLIBCXX_BEGIN_NAMESPACE_CONTAINER\n       _M_is_equal(const _Base_bitset<1>& __x) const _GLIBCXX_NOEXCEPT\n       { return _M_w == __x._M_w; }\n \n-      size_t\n-      _M_are_all_aux() const _GLIBCXX_NOEXCEPT\n-      { return __builtin_popcountl(_M_w); }\n+      template<size_t _Nb>\n+        bool\n+        _M_are_all() const _GLIBCXX_NOEXCEPT\n+        { return _M_w == (~static_cast<_WordT>(0)\n+\t\t\t  >> (_GLIBCXX_BITSET_BITS_PER_WORD - _Nb)); }\n \n       bool\n       _M_is_any() const _GLIBCXX_NOEXCEPT\n@@ -605,9 +609,10 @@ _GLIBCXX_BEGIN_NAMESPACE_CONTAINER\n       _M_is_equal(const _Base_bitset<0>&) const _GLIBCXX_NOEXCEPT\n       { return true; }\n \n-      size_t\n-      _M_are_all_aux() const _GLIBCXX_NOEXCEPT\n-      { return 0; }\n+      template<size_t _Nb>\n+        bool\n+        _M_are_all() const _GLIBCXX_NOEXCEPT\n+        { return true; }\n \n       bool\n       _M_is_any() const _GLIBCXX_NOEXCEPT\n@@ -1312,7 +1317,7 @@ _GLIBCXX_BEGIN_NAMESPACE_CONTAINER\n        */\n       bool\n       all() const _GLIBCXX_NOEXCEPT\n-      { return this->_M_are_all_aux() == _Nb; }\n+      { return this->template _M_are_all<_Nb>(); }\n \n       /**\n        *  @brief Tests whether any of the bits are on."}]}