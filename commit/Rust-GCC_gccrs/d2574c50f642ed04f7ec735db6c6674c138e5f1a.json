{"sha": "d2574c50f642ed04f7ec735db6c6674c138e5f1a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDI1NzRjNTBmNjQyZWQwNGY3ZWM3MzVkYjZjNjY3NGMxMzhlNWYxYQ==", "commit": {"author": {"name": "David Edelsohn", "email": "edelsohn@gnu.org", "date": "2001-10-28T21:45:46Z"}, "committer": {"name": "David Edelsohn", "email": "dje@gcc.gnu.org", "date": "2001-10-28T21:45:46Z"}, "message": "aix31.h (ASM_OUTPUT_EXTERNAL): Use assemble_name.\n\n        * config/rs6000/aix31.h (ASM_OUTPUT_EXTERNAL): Use assemble_name.\n        * config/rs6000/darwin.h (RS6000_OUTPUT_BASENAME): Delete.\n        (ASM_GLOBALIZE_LABEL): Use assemble_name.\n        (ASM_OUTPUT_COMMON): Likewise.\n        * config/rs6000/rs6000.c (print_operand): Use assemble_name.\n        (rs6000_output_function_epilogue): Likewise.\n        (output_mi_thunk): Fix typo.\n        (rs6000_output_symbol_ref): Use assemble_name.\n        (output_toc): Likewise.\n        * config/rs6000/sysv4.h (RS6000_OUTPUT_BASENAME): Delete.\n        * config/rs6000/xcoff.h (RS6000_OUTPUT_BASENAME): Delete;\n        assemble_name calls STRIP_NAME_ENCODING.\n        (ASM_OUTPUT_LABEL): Use assemble_name.\n        (ASM_GLOBALIZE_LABEL): Likewise.\n        (ASM_DECLARE_FUNCTION_NAME): Likewise.\n        (ASM_OUTPUT_ALIGNED_COMMON): Indent pseudo-op.  Use assemble_name.\n        (ASM_OUTPUT_LOCAL): Likewise.\n\nFrom-SVN: r46600", "tree": {"sha": "5ee1d0f5fffc457444e95b5bd7b13612b864f442", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5ee1d0f5fffc457444e95b5bd7b13612b864f442"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d2574c50f642ed04f7ec735db6c6674c138e5f1a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d2574c50f642ed04f7ec735db6c6674c138e5f1a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d2574c50f642ed04f7ec735db6c6674c138e5f1a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d2574c50f642ed04f7ec735db6c6674c138e5f1a/comments", "author": null, "committer": null, "parents": [{"sha": "ce2d32cd37c98b11b3f022695f9cfba0faf9151b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ce2d32cd37c98b11b3f022695f9cfba0faf9151b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ce2d32cd37c98b11b3f022695f9cfba0faf9151b"}], "stats": {"total": 95, "additions": 38, "deletions": 57}, "files": [{"sha": "a97d1d25233b249904000315f1707c5c05fc0e14", "filename": "gcc/ChangeLog", "status": "modified", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d2574c50f642ed04f7ec735db6c6674c138e5f1a/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d2574c50f642ed04f7ec735db6c6674c138e5f1a/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=d2574c50f642ed04f7ec735db6c6674c138e5f1a", "patch": "@@ -1,3 +1,23 @@\n+2001-10-28  David Edelsohn  <edelsohn@gnu.org>\n+\n+\t* config/rs6000/aix31.h (ASM_OUTPUT_EXTERNAL): Use assemble_name.\n+\t* config/rs6000/darwin.h (RS6000_OUTPUT_BASENAME): Delete.\n+\t(ASM_GLOBALIZE_LABEL): Use assemble_name.\n+\t(ASM_OUTPUT_COMMON): Likewise.\n+\t* config/rs6000/rs6000.c (print_operand): Use assemble_name.\n+\t(rs6000_output_function_epilogue): Likewise.\n+\t(output_mi_thunk): Fix typo.\n+\t(rs6000_output_symbol_ref): Use assemble_name.\n+\t(output_toc): Likewise.\n+\t* config/rs6000/sysv4.h (RS6000_OUTPUT_BASENAME): Delete.\n+\t* config/rs6000/xcoff.h (RS6000_OUTPUT_BASENAME): Delete;\n+\tassemble_name calls STRIP_NAME_ENCODING.\n+\t(ASM_OUTPUT_LABEL): Use assemble_name.\n+\t(ASM_GLOBALIZE_LABEL): Likewise.\n+\t(ASM_DECLARE_FUNCTION_NAME): Likewise.\n+\t(ASM_OUTPUT_ALIGNED_COMMON): Indent pseudo-op.  Use assemble_name.\n+\t(ASM_OUTPUT_LOCAL): Likewise.\n+\n Sun Oct 28 15:45:16 2001  Richard Kenner  <kenner@vlsi1.ultra.nyu.edu>\n \n \t* builtins.c (get_memory_rtx): Handle POINTERS_EXTEND_UNSIGNED case."}, {"sha": "8915292f40fb4d46eabebeca696a9dbd526c25b9", "filename": "gcc/config/rs6000/aix31.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d2574c50f642ed04f7ec735db6c6674c138e5f1a/gcc%2Fconfig%2Frs6000%2Faix31.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d2574c50f642ed04f7ec735db6c6674c138e5f1a/gcc%2Fconfig%2Frs6000%2Faix31.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Faix31.h?ref=d2574c50f642ed04f7ec735db6c6674c138e5f1a", "patch": "@@ -45,7 +45,7 @@ Boston, MA 02111-1307, USA.  */\n   if (TREE_CODE (DECL) == FUNCTION_DECL)\t\\\n     {\t\t\t\t\t\t\\\n       fputs (\"\\n\\t.extern .\", FILE);\t\t\\\n-      RS6000_OUTPUT_BASENAME (FILE, XSTR (_symref, 0));\t\\\n+      assemble_name (FILE, XSTR (_symref, 0));\t\\\n     }\t\t\t\t\t\t\\\n   putc ('\\n', FILE);\t\t\t\t\\\n }"}, {"sha": "fe192b58d70b8fb495083e9562e76f63a9d96e3e", "filename": "gcc/config/rs6000/darwin.h", "status": "modified", "additions": 2, "deletions": 8, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d2574c50f642ed04f7ec735db6c6674c138e5f1a/gcc%2Fconfig%2Frs6000%2Fdarwin.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d2574c50f642ed04f7ec735db6c6674c138e5f1a/gcc%2Fconfig%2Frs6000%2Fdarwin.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Fdarwin.h?ref=d2574c50f642ed04f7ec735db6c6674c138e5f1a", "patch": "@@ -79,12 +79,6 @@ Boston, MA 02111-1307, USA.  */\n #undef REGISTER_NAMES\n #define REGISTER_NAMES DEBUG_REGISTER_NAMES\n \n-/* This outputs NAME to FILE.  */\n-\n-#undef  RS6000_OUTPUT_BASENAME\n-#define RS6000_OUTPUT_BASENAME(FILE, NAME)\t\\\n-    assemble_name (FILE, NAME);\n-\n /* Output before instructions.  */\n /* This is how to output the definition of a user-level label named NAME,\n    such as the label on a static function or variable NAME.  */\n@@ -98,7 +92,7 @@ Boston, MA 02111-1307, USA.  */\n #undef ASM_GLOBALIZE_LABEL\n #define ASM_GLOBALIZE_LABEL(FILE,NAME)\t\\\n   do { fputs (\"\\t.globl \", FILE);\t\\\n-       RS6000_OUTPUT_BASENAME (FILE, NAME); putc ('\\n', FILE);} while (0)\n+       assemble_name (FILE, NAME); putc ('\\n', FILE);} while (0)\n \n /* This is how to output an internal label prefix.  rs6000.c uses this\n    when generating traceback tables.  */\n@@ -122,7 +116,7 @@ Boston, MA 02111-1307, USA.  */\n #undef  ASM_OUTPUT_ALIGNED_COMMON\n #define ASM_OUTPUT_COMMON(FILE, NAME, SIZE, ROUNDED)\t\\\n   do { fputs (\".comm \", (FILE));\t\t\t\\\n-       RS6000_OUTPUT_BASENAME ((FILE), (NAME));\t\t\\\n+       assemble_name ((FILE), (NAME));\t\t\\\n        fprintf ((FILE), \",%d\\n\", (SIZE)); } while (0)\n \n #define ASM_OUTPUT_SKIP(FILE,SIZE)  \\"}, {"sha": "b699edac8d94ca7875afaf7ef76698aa4a4d2e72", "filename": "gcc/config/rs6000/rs6000.c", "status": "modified", "additions": 3, "deletions": 21, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d2574c50f642ed04f7ec735db6c6674c138e5f1a/gcc%2Fconfig%2Frs6000%2Frs6000.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d2574c50f642ed04f7ec735db6c6674c138e5f1a/gcc%2Fconfig%2Frs6000%2Frs6000.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.c?ref=d2574c50f642ed04f7ec735db6c6674c138e5f1a", "patch": "@@ -4691,11 +4691,7 @@ print_operand (file, x, code)\n \t      break;\n \t    }\n \t}\n-#if TARGET_AIX\n-      RS6000_OUTPUT_BASENAME (file, XSTR (x, 0));\n-#else\n       assemble_name (file, XSTR (x, 0));\n-#endif\n       return;\n \n     case 'Z':\n@@ -7049,17 +7045,9 @@ rs6000_output_function_epilogue (file, size)\n       /* Offset from start of code to tb table.  */\n       fputs (\"\\t.long \", file);\n       ASM_OUTPUT_INTERNAL_LABEL_PREFIX (file, \"LT\");\n-#if TARGET_AIX\n-      RS6000_OUTPUT_BASENAME (file, fname);\n-#else\n       assemble_name (file, fname);\n-#endif\n       fputs (\"-.\", file);\n-#if TARGET_AIX\n-      RS6000_OUTPUT_BASENAME (file, fname);\n-#else\n       assemble_name (file, fname);\n-#endif\n       putc ('\\n', file);\n \n       /* Interrupt handler mask.  */\n@@ -7230,7 +7218,7 @@ output_mi_thunk (file, thunk_fndecl, delta, function)\n \t  assemble_name (file, buf);\n \t  putc ('\\n', file);\n \t  text_section ();\n-\t  asm_fprintf (file, (TARGET_32BIT) ? \"\\t{l|lwz} %s,\" : \"\\tld %s\", r12);\n+\t  asm_fprintf (file, (TARGET_32BIT) ? \"\\t{l|lwz} %s,\" : \"\\tld %s,\", r12);\n \t  assemble_name (file, buf);\n \t  asm_fprintf (file, \"(%s)\\n\", reg_names[2]);\n \t  asm_fprintf (file,\n@@ -7476,13 +7464,7 @@ rs6000_output_symbol_ref (file, x)\n      we emit the TOC reference to reference the symbol and not the\n      section.  */\n   const char *name = XSTR (x, 0);\n-\n-  if (VTABLE_NAME_P (name)) \n-    {\n-      RS6000_OUTPUT_BASENAME (file, name);\n-    }\n-  else\n-    assemble_name (file, name);\n+  assemble_name (file, name);\n }\n \n /* Output a TOC entry.  We derive the entry name from what is being\n@@ -7715,7 +7697,7 @@ output_toc (file, x, labelno, mode)\n      section.  */\n   if (VTABLE_NAME_P (name))\n     {\n-      RS6000_OUTPUT_BASENAME (file, name);\n+      assemble_name (file, name);\n       if (offset < 0)\n \tfprintf (file, \"%d\", offset);\n       else if (offset > 0)"}, {"sha": "f319fb43d82c8cab0580d5445eec930b85a25077", "filename": "gcc/config/rs6000/sysv4.h", "status": "modified", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d2574c50f642ed04f7ec735db6c6674c138e5f1a/gcc%2Fconfig%2Frs6000%2Fsysv4.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d2574c50f642ed04f7ec735db6c6674c138e5f1a/gcc%2Fconfig%2Frs6000%2Fsysv4.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Fsysv4.h?ref=d2574c50f642ed04f7ec735db6c6674c138e5f1a", "patch": "@@ -886,11 +886,6 @@ do {\t\t\t\t\t\t\t\t\t\\\n #undef\tENCODE_SECTION_INFO\n #define\tENCODE_SECTION_INFO(DECL) rs6000_encode_section_info (DECL)\n \n-/* The ELF version doesn't encode [DS] or whatever at the end of symbols.  */\n-\n-#define\tRS6000_OUTPUT_BASENAME(FILE, NAME)\t\\\n-    assemble_name (FILE, NAME)\n-\n /* This macro gets just the user-specified name\n    out of the string in a SYMBOL_REF.  Discard\n    a leading * or @.  */"}, {"sha": "d2e58c53b3b39c71cc02ef82709a38452f47f915", "filename": "gcc/config/rs6000/xcoff.h", "status": "modified", "additions": 12, "deletions": 22, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d2574c50f642ed04f7ec735db6c6674c138e5f1a/gcc%2Fconfig%2Frs6000%2Fxcoff.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d2574c50f642ed04f7ec735db6c6674c138e5f1a/gcc%2Fconfig%2Frs6000%2Fxcoff.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Fxcoff.h?ref=d2574c50f642ed04f7ec735db6c6674c138e5f1a", "patch": "@@ -231,28 +231,18 @@ toc_section ()\t\t\t\t\t\t\\\n #define RS6000_ITRUNC \"__itrunc\"\n #define RS6000_UITRUNC \"__uitrunc\"\n \n-/* This outputs NAME to FILE up to the first null or '['.  */\n-\n-#define RS6000_OUTPUT_BASENAME(FILE, NAME)\t\\\n-  {\t\t\t\t\t\t\\\n-    const char *_p;\t\t\t\t\\\n-\t\t\t\t\t\t\\\n-    STRIP_NAME_ENCODING (_p, (NAME));\t\t\\\n-    assemble_name ((FILE), _p);\t\t\t\\\n-  }\n-\n /* This is how to output the definition of a user-level label named NAME,\n    such as the label on a static function or variable NAME.  */\n \n #define ASM_OUTPUT_LABEL(FILE,NAME)\t\\\n-  do { RS6000_OUTPUT_BASENAME (FILE, NAME); fputs (\":\\n\", FILE); } while (0)\n+  do { assemble_name (FILE, NAME); fputs (\":\\n\", FILE); } while (0)\n \n /* This is how to output a command to make the user-level label named NAME\n    defined for reference from other files.  */\n \n #define ASM_GLOBALIZE_LABEL(FILE,NAME)\t\\\n   do { fputs (\"\\t.globl \", FILE);\t\\\n-       RS6000_OUTPUT_BASENAME (FILE, NAME); putc ('\\n', FILE);} while (0)\n+       assemble_name (FILE, NAME); putc ('\\n', FILE);} while (0)\n \n /* Remove any trailing [DS] or the like from the symbol name.  */\n \n@@ -343,27 +333,27 @@ toc_section ()\t\t\t\t\t\t\\\n   if (TREE_PUBLIC (DECL))\t\t\t\t\t\\\n     {\t\t\t\t\t\t\t\t\\\n       fputs (\"\\t.globl .\", FILE);\t\t\t\t\\\n-      RS6000_OUTPUT_BASENAME (FILE, NAME);\t\t\t\\\n+      assemble_name (FILE, NAME);\t\t\t\t\\\n       putc ('\\n', FILE);\t\t\t\t\t\\\n     }\t\t\t\t\t\t\t\t\\\n   else\t\t\t\t\t\t\t\t\\\n     {\t\t\t\t\t\t\t\t\\\n       fputs (\"\\t.lglobl .\", FILE);\t\t\t\t\\\n-      RS6000_OUTPUT_BASENAME (FILE, NAME);\t\t\t\\\n+      assemble_name (FILE, NAME);\t\t\t\t\\\n       putc ('\\n', FILE);\t\t\t\t\t\\\n     }\t\t\t\t\t\t\t\t\\\n   fputs (\"\\t.csect \", FILE);\t\t\t\t\t\\\n-  RS6000_OUTPUT_BASENAME (FILE, NAME);\t\t\t\t\\\n+  assemble_name (FILE, NAME);\t\t\t\t\t\\\n   fputs (TARGET_32BIT ? \"[DS]\\n\" : \"[DS],3\\n\", FILE);\t\t\\\n-  RS6000_OUTPUT_BASENAME (FILE, NAME);\t\t\t\t\\\n+  assemble_name (FILE, NAME);\t\t\t\t\t\\\n   fputs (\":\\n\", FILE);\t\t\t\t\t\t\\\n   fputs (TARGET_32BIT ? \"\\t.long .\" : \"\\t.llong .\", FILE);\t\\\n-  RS6000_OUTPUT_BASENAME (FILE, NAME);\t\t\t\t\\\n+  assemble_name (FILE, NAME);\t\t\t\t\t\\\n   fputs (\", TOC[tc0], 0\\n\", FILE);\t\t\t\t\\\n   in_section = no_section;\t\t\t\t\t\\\n   function_section(DECL);\t\t\t\t\t\\\n   putc ('.', FILE);\t\t\t\t\t\t\\\n-  RS6000_OUTPUT_BASENAME (FILE, NAME);\t\t\t\t\\\n+  assemble_name (FILE, NAME);\t\t\t\t\t\\\n   fputs (\":\\n\", FILE);\t\t\t\t\t\t\\\n   if (write_symbols == XCOFF_DEBUG)\t\t\t\t\\\n     xcoffout_declare_function (FILE, DECL, NAME);\t\t\\\n@@ -430,8 +420,8 @@ toc_section ()\t\t\t\t\t\t\\\n    to define a global common symbol.  */\n \n #define ASM_OUTPUT_ALIGNED_COMMON(FILE, NAME, SIZE, ALIGNMENT)\t\\\n-  do { fputs (\".comm \", (FILE));\t\t\t\\\n-       RS6000_OUTPUT_BASENAME ((FILE), (NAME));\t\t\\\n+  do { fputs (\"\\t.comm \", (FILE));\t\t\t\\\n+       assemble_name ((FILE), (NAME));\t\t\t\\\n        if ( (SIZE) > 4)\t\t\t\t\t\\\n          fprintf ((FILE), \",%d,3\\n\", (SIZE));\t\t\\\n        else\t\t\t\t\t\t\\\n@@ -448,8 +438,8 @@ toc_section ()\t\t\t\t\t\t\\\n    for 64-bit mode.  */\n \n #define ASM_OUTPUT_LOCAL(FILE, NAME, SIZE, ROUNDED)\t\\\n-  do { fputs (\".lcomm \", (FILE));\t\t\t\\\n-       RS6000_OUTPUT_BASENAME ((FILE), (NAME));\t\t\\\n+  do { fputs (\"\\t.lcomm \", (FILE));\t\t\t\\\n+       assemble_name ((FILE), (NAME));\t\t\t\\\n        fprintf ((FILE), \",%d,%s\\n\", (TARGET_32BIT ? (SIZE) : (ROUNDED)), \\\n \t\txcoff_bss_section_name);\t\t\\\n      } while (0)"}]}