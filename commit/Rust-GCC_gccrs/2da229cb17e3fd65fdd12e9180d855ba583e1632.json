{"sha": "2da229cb17e3fd65fdd12e9180d855ba583e1632", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmRhMjI5Y2IxN2UzZmQ2NWZkZDEyZTkxODBkODU1YmE1ODNlMTYzMg==", "commit": {"author": {"name": "Jerry DeLisle", "email": "jvdelisle@gcc.gnu.org", "date": "2015-01-15T03:51:16Z"}, "committer": {"name": "Jerry DeLisle", "email": "jvdelisle@gcc.gnu.org", "date": "2015-01-15T03:51:16Z"}, "message": "re PR fortran/61933 (Inquire on internal units)\n\n2015-01-14  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n\n\tPR fortran/61933\n\t* io.c (gfc_match_inquire): Generate error if unit number in\n\tinquire statement is a constant -1.  All other values allowed.\n\t* trans-io.c (gfc_trans_inquire): Delete dummy iostat variable.\n\t(create_dummy_iostat): Delete function no longer used.\n\nFrom-SVN: r219630", "tree": {"sha": "848d6c46ac6746acb9d5369094fbeadb60b38c9e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/848d6c46ac6746acb9d5369094fbeadb60b38c9e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2da229cb17e3fd65fdd12e9180d855ba583e1632", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2da229cb17e3fd65fdd12e9180d855ba583e1632", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2da229cb17e3fd65fdd12e9180d855ba583e1632", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2da229cb17e3fd65fdd12e9180d855ba583e1632/comments", "author": null, "committer": null, "parents": [{"sha": "d5d9c650a27e31b6b2235c8b82b4430f8babfa25", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d5d9c650a27e31b6b2235c8b82b4430f8babfa25", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d5d9c650a27e31b6b2235c8b82b4430f8babfa25"}], "stats": {"total": 50, "additions": 16, "deletions": 34}, "files": [{"sha": "c7080b903434606f6d88c84c8450ff22a489d5d9", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2da229cb17e3fd65fdd12e9180d855ba583e1632/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2da229cb17e3fd65fdd12e9180d855ba583e1632/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=2da229cb17e3fd65fdd12e9180d855ba583e1632", "patch": "@@ -1,3 +1,11 @@\n+2015-01-14  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n+\n+\tPR fortran/61933\n+\t* io.c (gfc_match_inquire): Generate error if unit number in\n+\tinquire statement is a constant -1.  All other values allowed.\n+\t* trans-io.c (gfc_trans_inquire): Delete dummy iostat variable.\n+\t(create_dummy_iostat): Delete function no longer used.\n+\n 2015-01-13  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR fortran/64528"}, {"sha": "a03984ca60747a999bb35c4a5c5a1851f4a16444", "filename": "gcc/fortran/io.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2da229cb17e3fd65fdd12e9180d855ba583e1632/gcc%2Ffortran%2Fio.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2da229cb17e3fd65fdd12e9180d855ba583e1632/gcc%2Ffortran%2Fio.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fio.c?ref=2da229cb17e3fd65fdd12e9180d855ba583e1632", "patch": "@@ -3998,6 +3998,14 @@ gfc_match_inquire (void)\n       goto cleanup;\n     }\n \n+  if (inquire->unit != NULL && inquire->unit->expr_type == EXPR_CONSTANT\n+      && inquire->unit->ts.type == BT_INTEGER\n+      && mpz_get_si (inquire->unit->value.integer) == -1)\n+    {\n+      gfc_error (\"UNIT number in INQUIRE statement at %L can not be -1\", &loc);\n+      goto cleanup;\n+    }\n+\n   if (gfc_pure (NULL))\n     {\n       gfc_error (\"INQUIRE statement not allowed in PURE procedure at %C\");"}, {"sha": "e619acb5acee37fe37aa28d1b1c58d4903593e19", "filename": "gcc/fortran/trans-io.c", "status": "modified", "additions": 0, "deletions": 34, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2da229cb17e3fd65fdd12e9180d855ba583e1632/gcc%2Ffortran%2Ftrans-io.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2da229cb17e3fd65fdd12e9180d855ba583e1632/gcc%2Ffortran%2Ftrans-io.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ftrans-io.c?ref=2da229cb17e3fd65fdd12e9180d855ba583e1632", "patch": "@@ -1186,33 +1186,6 @@ gfc_trans_flush (gfc_code * code)\n }\n \n \n-/* Create a dummy iostat variable to catch any error due to bad unit.  */\n-\n-static gfc_expr *\n-create_dummy_iostat (void)\n-{\n-  gfc_symtree *st;\n-  gfc_expr *e;\n-\n-  gfc_get_ha_sym_tree (\"@iostat\", &st);\n-  st->n.sym->ts.type = BT_INTEGER;\n-  st->n.sym->ts.kind = gfc_default_integer_kind;\n-  gfc_set_sym_referenced (st->n.sym);\n-  gfc_commit_symbol (st->n.sym);\n-  st->n.sym->backend_decl\n-\t= gfc_create_var (gfc_get_int_type (st->n.sym->ts.kind),\n-\t\t\t  st->n.sym->name);\n-\n-  e = gfc_get_expr ();\n-  e->expr_type = EXPR_VARIABLE;\n-  e->symtree = st;\n-  e->ts.type = BT_INTEGER;\n-  e->ts.kind = st->n.sym->ts.kind;\n-\n-  return e;\n-}\n-\n-\n /* Translate the non-IOLENGTH form of an INQUIRE statement.  */\n \n tree\n@@ -1255,13 +1228,6 @@ gfc_trans_inquire (gfc_code * code)\n     {\n       mask |= set_parameter_ref (&block, &post_block, var, IOPARM_inquire_exist,\n \t\t\t\t p->exist);\n-\n-      if (p->unit && !p->iostat)\n-\t{\n-\t  p->iostat = create_dummy_iostat ();\n-\t  mask |= set_parameter_ref (&block, &post_block, var,\n-\t\t\t\t     IOPARM_common_iostat, p->iostat);\n-\t}\n     }\n \n   if (p->opened)"}]}