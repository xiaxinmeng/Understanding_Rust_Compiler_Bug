{"sha": "19fb36e3238d30da0e1c982e848ade71c378ed76", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTlmYjM2ZTMyMzhkMzBkYTBlMWM5ODJlODQ4YWRlNzFjMzc4ZWQ3Ng==", "commit": {"author": {"name": "Alan Modra", "email": "amodra@bigpond.net.au", "date": "2004-05-07T02:01:13Z"}, "committer": {"name": "Alan Modra", "email": "amodra@gcc.gnu.org", "date": "2004-05-07T02:01:13Z"}, "message": "rs6000.h (STACK_BOUNDARY): Use 128 bit for either TARGET_ALTIVEC or TARGET_ALTIVEC_ABI.\n\n\t* config/rs6000/rs6000.h (STACK_BOUNDARY): Use 128 bit for either\n\tTARGET_ALTIVEC or TARGET_ALTIVEC_ABI.\n\t* config/rs6000/sysv4.h (ABI_STACK_BOUNDARY): Likewise.\n\t(STACK_BOUNDARY): Delete.\n\nFrom-SVN: r81597", "tree": {"sha": "21063688bb45f62cbd55f102039cf2a66623db9a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/21063688bb45f62cbd55f102039cf2a66623db9a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/19fb36e3238d30da0e1c982e848ade71c378ed76", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/19fb36e3238d30da0e1c982e848ade71c378ed76", "html_url": "https://github.com/Rust-GCC/gccrs/commit/19fb36e3238d30da0e1c982e848ade71c378ed76", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/19fb36e3238d30da0e1c982e848ade71c378ed76/comments", "author": null, "committer": null, "parents": [{"sha": "087392033bce40c5e2cd8c1dbf58629bbf9391ec", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/087392033bce40c5e2cd8c1dbf58629bbf9391ec", "html_url": "https://github.com/Rust-GCC/gccrs/commit/087392033bce40c5e2cd8c1dbf58629bbf9391ec"}], "stats": {"total": 21, "additions": 12, "deletions": 9}, "files": [{"sha": "b152eda55f985533c1bfc0e3b9c14f99c12cfe59", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 1, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/19fb36e3238d30da0e1c982e848ade71c378ed76/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/19fb36e3238d30da0e1c982e848ade71c378ed76/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=19fb36e3238d30da0e1c982e848ade71c378ed76", "patch": "@@ -1,7 +1,14 @@\n+2004-05-07  Alan Modra  <amodra@bigpond.net.au>\n+\n+\t* config/rs6000/rs6000.h (STACK_BOUNDARY): Use 128 bit for either\n+\tTARGET_ALTIVEC or TARGET_ALTIVEC_ABI.\n+\t* config/rs6000/sysv4.h (ABI_STACK_BOUNDARY): Likewise.\n+\t(STACK_BOUNDARY): Delete.\n+\n 2004-05-06  Stuart Hastings  <stuart@apple.com>\n \t* gcc/doc/invoke.texi: Restore -fgcse-after-reload doc from 1.421,\n \tmistakenly clobbered by 1.423.\n-\t\n+\n 2004-05-06  Richard Sandiford  <rsandifo@redhat.com>\n \n \t* doc/invoke.texi: Document -mvr4130-align."}, {"sha": "2f256bebd6b7641c47351e01c2e8ad511e60154e", "filename": "gcc/config/rs6000/rs6000.h", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/19fb36e3238d30da0e1c982e848ade71c378ed76/gcc%2Fconfig%2Frs6000%2Frs6000.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/19fb36e3238d30da0e1c982e848ade71c378ed76/gcc%2Fconfig%2Frs6000%2Frs6000.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.h?ref=19fb36e3238d30da0e1c982e848ade71c378ed76", "patch": "@@ -718,7 +718,8 @@ extern const char *rs6000_warn_altivec_long_switch;\n #define PARM_BOUNDARY (TARGET_32BIT ? 32 : 64)\n \n /* Boundary (in *bits*) on which stack pointer should be aligned.  */\n-#define STACK_BOUNDARY ((TARGET_32BIT && !TARGET_ALTIVEC_ABI) ? 64 : 128)\n+#define STACK_BOUNDARY \\\n+  ((TARGET_32BIT && !TARGET_ALTIVEC && !TARGET_ALTIVEC_ABI) ? 64 : 128)\n \n /* Allocation boundary (in *bits*) for the code of a function.  */\n #define FUNCTION_BOUNDARY 32"}, {"sha": "ea149f01a3232e4cebd2c61724514fdc80f8f3fa", "filename": "gcc/config/rs6000/sysv4.h", "status": "modified", "additions": 2, "deletions": 7, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/19fb36e3238d30da0e1c982e848ade71c378ed76/gcc%2Fconfig%2Frs6000%2Fsysv4.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/19fb36e3238d30da0e1c982e848ade71c378ed76/gcc%2Fconfig%2Frs6000%2Fsysv4.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Fsysv4.h?ref=19fb36e3238d30da0e1c982e848ade71c378ed76", "patch": "@@ -385,12 +385,6 @@ do {\t\t\t\t\t\t\t\t\t\\\n #undef\tSTRICT_ALIGNMENT\n #define\tSTRICT_ALIGNMENT (TARGET_STRICT_ALIGN)\n \n-/* Alignment in bits of the stack boundary.  Note, in order to allow building\n-   one set of libraries with -mno-eabi instead of eabi libraries and non-eabi\n-   versions, just use 64 as the stack boundary.  */\n-#undef\tSTACK_BOUNDARY\n-#define\tSTACK_BOUNDARY\t(TARGET_ALTIVEC_ABI ? 128 : 64)\n-\n /* Define this macro if you wish to preserve a certain alignment for\n    the stack pointer, greater than what the hardware enforces.  The\n    definition is a C expression for the desired alignment (measured\n@@ -407,7 +401,8 @@ do {\t\t\t\t\t\t\t\t\t\\\n #define PREFERRED_STACK_BOUNDARY 128\n \n /* Real stack boundary as mandated by the appropriate ABI.  */\n-#define ABI_STACK_BOUNDARY ((TARGET_EABI && !TARGET_ALTIVEC_ABI) ? 64 : 128)\n+#define ABI_STACK_BOUNDARY \\\n+  ((TARGET_EABI && !TARGET_ALTIVEC && !TARGET_ALTIVEC_ABI) ? 64 : 128)\n \n /* An expression for the alignment of a structure field FIELD if the\n    alignment computed in the usual way is COMPUTED.  */"}]}