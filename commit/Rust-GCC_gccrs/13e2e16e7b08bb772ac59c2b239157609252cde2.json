{"sha": "13e2e16e7b08bb772ac59c2b239157609252cde2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTNlMmUxNmU3YjA4YmI3NzJhYzU5YzJiMjM5MTU3NjA5MjUyY2RlMg==", "commit": {"author": {"name": "David Edelsohn", "email": "edelsohn@gnu.org", "date": "2005-09-02T01:52:37Z"}, "committer": {"name": "David Edelsohn", "email": "dje@gcc.gnu.org", "date": "2005-09-02T01:52:37Z"}, "message": "rs6000.c (setup_incoming_varargs): Set MEM_NOTRAP_P.\n\n        * config/rs6000/rs6000.c (setup_incoming_varargs): Set MEM_NOTRAP_P.\n        (rs6000_split_multireg_move): Use replace_equiv_address instead of\n        gen_rtx_MEM.\n\nFrom-SVN: r103760", "tree": {"sha": "750606cc1454a90a0200395299b334042b7c2f55", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/750606cc1454a90a0200395299b334042b7c2f55"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/13e2e16e7b08bb772ac59c2b239157609252cde2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/13e2e16e7b08bb772ac59c2b239157609252cde2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/13e2e16e7b08bb772ac59c2b239157609252cde2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/13e2e16e7b08bb772ac59c2b239157609252cde2/comments", "author": null, "committer": null, "parents": [{"sha": "bef7d862e2c46d1ada78db24c97b2b7badd416f7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bef7d862e2c46d1ada78db24c97b2b7badd416f7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bef7d862e2c46d1ada78db24c97b2b7badd416f7"}], "stats": {"total": 20, "additions": 13, "deletions": 7}, "files": [{"sha": "bf777a4befecb7affd64ee119be5b5d75864c720", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/13e2e16e7b08bb772ac59c2b239157609252cde2/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/13e2e16e7b08bb772ac59c2b239157609252cde2/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=13e2e16e7b08bb772ac59c2b239157609252cde2", "patch": "@@ -1,3 +1,9 @@\n+2005-09-01  David Edelsohn  <edelsohn@gnu.org>\n+\n+\t* config/rs6000/rs6000.c (setup_incoming_varargs): Set MEM_NOTRAP_P.\n+\t(rs6000_split_multireg_move): Use replace_equiv_address instead of\n+\tgen_rtx_MEM.\n+\n 2005-09-01  Craig Rodrigues  <rodrigc@gcc.gnu.org>\n \n \t* c-decl.c (diagnose_mismatched_decls):  With -Wredundant-decls,"}, {"sha": "43c053288a52cb6c8977e59696acaf0462988362", "filename": "gcc/config/rs6000/rs6000.c", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/13e2e16e7b08bb772ac59c2b239157609252cde2/gcc%2Fconfig%2Frs6000%2Frs6000.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/13e2e16e7b08bb772ac59c2b239157609252cde2/gcc%2Fconfig%2Frs6000%2Frs6000.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.c?ref=13e2e16e7b08bb772ac59c2b239157609252cde2", "patch": "@@ -5459,7 +5459,8 @@ setup_incoming_varargs (CUMULATIVE_ARGS *cum, enum machine_mode mode,\n \n       mem = gen_rtx_MEM (BLKmode,\n \t\t\t plus_constant (save_area,\n-\t\t\t\t\tfirst_reg_offset * reg_size)),\n+\t\t\t\t\tfirst_reg_offset * reg_size));\n+      MEM_NOTRAP_P (mem) = 1;\n       set_mem_alias_set (mem, set);\n       set_mem_align (mem, BITS_PER_WORD);\n \n@@ -5494,6 +5495,7 @@ setup_incoming_varargs (CUMULATIVE_ARGS *cum, enum machine_mode mode,\n \t   fregno++, off += UNITS_PER_FP_WORD, nregs++)\n \t{\n \t  mem = gen_rtx_MEM (DFmode, plus_constant (save_area, off));\n+\t  MEM_NOTRAP_P (mem) = 1;\n \t  set_mem_alias_set (mem, set);\n \t  set_mem_align (mem, GET_MODE_ALIGNMENT (DFmode));\n \t  emit_move_insn (mem, gen_rtx_REG (DFmode, fregno));\n@@ -12249,16 +12251,14 @@ rs6000_split_multireg_move (rtx dst, rtx src)\n \t      emit_insn (TARGET_32BIT\n \t\t\t ? gen_addsi3 (breg, breg, delta_rtx)\n \t\t\t : gen_adddi3 (breg, breg, delta_rtx));\n-\t      src = gen_rtx_MEM (mode, breg);\n+\t      src = replace_equiv_address (src, breg);\n \t    }\n \t  else if (! offsettable_memref_p (src))\n \t    {\n-\t      rtx newsrc, basereg;\n+\t      rtx basereg;\n \t      basereg = gen_rtx_REG (Pmode, reg);\n \t      emit_insn (gen_rtx_SET (VOIDmode, basereg, XEXP (src, 0)));\n-\t      newsrc = gen_rtx_MEM (GET_MODE (src), basereg);\n-\t      MEM_COPY_ATTRIBUTES (newsrc, src);\n-\t      src = newsrc;\n+\t      src = replace_equiv_address (src, basereg);\n \t    }\n \n \t  breg = XEXP (src, 0);\n@@ -12303,7 +12303,7 @@ rs6000_split_multireg_move (rtx dst, rtx src)\n \t\temit_insn (TARGET_32BIT\n \t\t\t   ? gen_addsi3 (breg, breg, delta_rtx)\n \t\t\t   : gen_adddi3 (breg, breg, delta_rtx));\n-\t      dst = gen_rtx_MEM (mode, breg);\n+\t      dst = replace_equiv_address (dst, breg);\n \t    }\n \t  else\n \t    gcc_assert (offsettable_memref_p (dst));"}]}