{"sha": "2bd8e92c33aabe2b9a8fbda04c5f15ba8ae21aec", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmJkOGU5MmMzM2FhYmUyYjlhOGZiZGEwNGM1ZjE1YmE4YWUyMWFlYw==", "commit": {"author": {"name": "Chris Jefferson", "email": "chris@bubblescope.net", "date": "2005-09-29T17:42:42Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2005-09-29T17:42:42Z"}, "message": "re PR libstdc++/23978 (tr1::tie doesn't work with std::pair)\n\n2005-09-29  Chris Jefferson <chris@bubblescope.net>\n\n\tPR libstdc++/23978\n\t* include/tr1/functional (ref, cref): Make inline.\n\t* include/tr1/tuple_iterate.h (tuple): Add operator=(std::pair).\n\t(tie): Correct formatting.\n\t(make_tuple): Make inline.\n\t* testsuite/tr1/6_containers/tuple/creation_functions/23978.cc: New.\n\nFrom-SVN: r104784", "tree": {"sha": "55dc26dc919328882e2de09ee91581205e178a6b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/55dc26dc919328882e2de09ee91581205e178a6b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2bd8e92c33aabe2b9a8fbda04c5f15ba8ae21aec", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2bd8e92c33aabe2b9a8fbda04c5f15ba8ae21aec", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2bd8e92c33aabe2b9a8fbda04c5f15ba8ae21aec", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2bd8e92c33aabe2b9a8fbda04c5f15ba8ae21aec/comments", "author": {"login": "ChrisJefferson", "id": 811527, "node_id": "MDQ6VXNlcjgxMTUyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/811527?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ChrisJefferson", "html_url": "https://github.com/ChrisJefferson", "followers_url": "https://api.github.com/users/ChrisJefferson/followers", "following_url": "https://api.github.com/users/ChrisJefferson/following{/other_user}", "gists_url": "https://api.github.com/users/ChrisJefferson/gists{/gist_id}", "starred_url": "https://api.github.com/users/ChrisJefferson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ChrisJefferson/subscriptions", "organizations_url": "https://api.github.com/users/ChrisJefferson/orgs", "repos_url": "https://api.github.com/users/ChrisJefferson/repos", "events_url": "https://api.github.com/users/ChrisJefferson/events{/privacy}", "received_events_url": "https://api.github.com/users/ChrisJefferson/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "2cff1b3e09c146bd185b297f7611f0b8b3d30809", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2cff1b3e09c146bd185b297f7611f0b8b3d30809", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2cff1b3e09c146bd185b297f7611f0b8b3d30809"}], "stats": {"total": 89, "additions": 77, "deletions": 12}, "files": [{"sha": "dc5da153bd588c88faecb35f481f07b2ddd230e9", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2bd8e92c33aabe2b9a8fbda04c5f15ba8ae21aec/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2bd8e92c33aabe2b9a8fbda04c5f15ba8ae21aec/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=2bd8e92c33aabe2b9a8fbda04c5f15ba8ae21aec", "patch": "@@ -1,3 +1,12 @@\n+2005-09-29  Chris Jefferson <chris@bubblescope.net>\n+\n+\tPR libstdc++/23978\n+\t* include/tr1/functional (ref, cref): Make inline.\n+\t* include/tr1/tuple_iterate.h (tuple): Add operator=(std::pair).\n+\t(tie): Correct formatting.\n+\t(make_tuple): Make inline.\n+\t* testsuite/tr1/6_containers/tuple/creation_functions/23978.cc: New.\n+\n 2005-09-25  Benjamin Kosnik  <bkoz@redhat.com>\n \t    Eric Botcazou  <ebotcazou@libertysurf.fr>\n "}, {"sha": "76eb87a0bb5477dd46085c8d596ec26a0cd1fb0f", "filename": "libstdc++-v3/include/tr1/functional", "status": "modified", "additions": 6, "deletions": 4, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2bd8e92c33aabe2b9a8fbda04c5f15ba8ae21aec/libstdc%2B%2B-v3%2Finclude%2Ftr1%2Ffunctional", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2bd8e92c33aabe2b9a8fbda04c5f15ba8ae21aec/libstdc%2B%2B-v3%2Finclude%2Ftr1%2Ffunctional", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Ftr1%2Ffunctional?ref=2bd8e92c33aabe2b9a8fbda04c5f15ba8ae21aec", "patch": "@@ -372,22 +372,24 @@ namespace tr1\n \n   // Denotes a reference should be taken to a variable.\n   template<typename _Tp>\n-    reference_wrapper<_Tp>\n+    inline reference_wrapper<_Tp>\n     ref(_Tp& __t)\n     { return reference_wrapper<_Tp>(__t); }\n \n   // Denotes a const reference should be taken to a variable.\n   template<typename _Tp>\n-    reference_wrapper<const _Tp>\n+    inline reference_wrapper<const _Tp>\n     cref(const _Tp& __t)\n     { return reference_wrapper<const _Tp>(__t); }\n \n   template<typename _Tp>\n-    reference_wrapper<_Tp> ref(reference_wrapper<_Tp> __t)\n+    inline reference_wrapper<_Tp>\n+    ref(reference_wrapper<_Tp> __t)\n     { return ref(__t.get()); }\n \n   template<typename _Tp>\n-    reference_wrapper<const _Tp> cref(reference_wrapper<_Tp> __t)\n+    inline reference_wrapper<const _Tp>\n+    cref(reference_wrapper<_Tp> __t)\n     { return cref(__t.get()); }\n \n    template<typename _Tp, bool>"}, {"sha": "2bf7d3e22d58cae9ab14fad42c9ed1d2f4004ba4", "filename": "libstdc++-v3/include/tr1/tuple_iterate.h", "status": "modified", "additions": 15, "deletions": 8, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2bd8e92c33aabe2b9a8fbda04c5f15ba8ae21aec/libstdc%2B%2B-v3%2Finclude%2Ftr1%2Ftuple_iterate.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2bd8e92c33aabe2b9a8fbda04c5f15ba8ae21aec/libstdc%2B%2B-v3%2Finclude%2Ftr1%2Ftuple_iterate.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Ftr1%2Ftuple_iterate.h?ref=2bd8e92c33aabe2b9a8fbda04c5f15ba8ae21aec", "patch": "@@ -53,11 +53,18 @@ template<_GLIBCXX_TEMPLATE_PARAMS>\n     { }\n \n #if _GLIBCXX_NUM_ARGS == 2\n-template<class _U1, class _U2>\n-        tuple(const std::pair<_U1, _U2>& __u):\n-           _M_arg1(__u.first), _M_arg2(__u.second)\n-        { }\n+    template<typename _U1, typename _U2>\n+      tuple(const std::pair<_U1, _U2>& __u) :\n+      _M_arg1(__u.first), _M_arg2(__u.second)\n+      { }\n \n+    template<typename _U1, typename _U2>\n+      tuple&\n+      operator=(const std::pair<_U1, _U2>& __u)\n+      { \n+\t_M_arg1 = __u.first;\n+\t_M_arg2 = __u.second;\n+      }\n #endif\n \n #if _GLIBCXX_NUM_ARGS > 0\n@@ -137,22 +144,22 @@ tuple<>\n inline make_tuple()\n { return tuple<>(); }\n \n-inline tuple<>\n-tie()\n+tuple<>\n+inline tie()\n { return tuple<>(); }\n #else\n \n template<_GLIBCXX_TEMPLATE_PARAMS>\n   typename __stripped_tuple_type<_GLIBCXX_TEMPLATE_ARGS>::__type\n-  make_tuple(_GLIBCXX_PARAMS)\n+  inline make_tuple(_GLIBCXX_PARAMS)\n   {\n     return typename __stripped_tuple_type<_GLIBCXX_TEMPLATE_ARGS>::\n       __type(_GLIBCXX_ARGS);\n   }\n \n template<_GLIBCXX_TEMPLATE_PARAMS>\n   tuple<_GLIBCXX_REF_TEMPLATE_ARGS>\n-  tie(_GLIBCXX_REF_PARAMS)\n+  inline tie(_GLIBCXX_REF_PARAMS)\n   { return make_tuple(_GLIBCXX_REF_WRAP_PARAMS); }\n #endif\n "}, {"sha": "2c94f3314dd72768e7c4bb637dab147891799f38", "filename": "libstdc++-v3/testsuite/tr1/6_containers/tuple/creation_functions/23978.cc", "status": "added", "additions": 47, "deletions": 0, "changes": 47, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2bd8e92c33aabe2b9a8fbda04c5f15ba8ae21aec/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F6_containers%2Ftuple%2Fcreation_functions%2F23978.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2bd8e92c33aabe2b9a8fbda04c5f15ba8ae21aec/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F6_containers%2Ftuple%2Fcreation_functions%2F23978.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F6_containers%2Ftuple%2Fcreation_functions%2F23978.cc?ref=2bd8e92c33aabe2b9a8fbda04c5f15ba8ae21aec", "patch": "@@ -0,0 +1,47 @@\n+// 2005-09-29  Chris Jefferson  <chris@bubblescope.net>\n+//\n+// Copyright (C) 2005 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301,\n+// USA.\n+\n+// Tuple\n+\n+#include <tr1/tuple>\n+#include <tr1/utility>\n+#include <testsuite_hooks.h>\n+\n+using namespace std;\n+using namespace tr1;\n+\n+// libstdc++/23978\n+void test01()\n+{\n+  bool test __attribute__((unused)) = true;\n+\n+  pair<int, int> p(1, 2);\n+  int x = 0;\n+  int y = 0;\n+  tie(x, y) = p;\n+  VERIFY( x == 1 && y == 2 );\n+}\n+\n+int\n+main()\n+{\n+  test01();\n+  return 0;\n+}"}]}