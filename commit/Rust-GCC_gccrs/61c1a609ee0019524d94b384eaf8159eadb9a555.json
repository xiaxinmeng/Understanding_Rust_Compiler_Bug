{"sha": "61c1a609ee0019524d94b384eaf8159eadb9a555", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjFjMWE2MDllZTAwMTk1MjRkOTRiMzg0ZWFmODE1OWVhZGI5YTU1NQ==", "commit": {"author": {"name": "Marek Polacek", "email": "polacek@redhat.com", "date": "2013-08-14T04:44:37Z"}, "committer": {"name": "Marek Polacek", "email": "mpolacek@gcc.gnu.org", "date": "2013-08-14T04:44:37Z"}, "message": "ipa-inline-analysis.c (add_clause): Avoid shifting integer NUM_CONDITIONS bit positions.\n\n* ipa-inline-analysis.c (add_clause): Avoid shifting integer\nNUM_CONDITIONS bit positions.\n\nFrom-SVN: r201719", "tree": {"sha": "b54f442d9ed85f8d47f8eb3b7e7d5919e5e7771a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b54f442d9ed85f8d47f8eb3b7e7d5919e5e7771a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/61c1a609ee0019524d94b384eaf8159eadb9a555", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/61c1a609ee0019524d94b384eaf8159eadb9a555", "html_url": "https://github.com/Rust-GCC/gccrs/commit/61c1a609ee0019524d94b384eaf8159eadb9a555", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/61c1a609ee0019524d94b384eaf8159eadb9a555/comments", "author": {"login": "mpolacek", "id": 10496300, "node_id": "MDQ6VXNlcjEwNDk2MzAw", "avatar_url": "https://avatars.githubusercontent.com/u/10496300?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mpolacek", "html_url": "https://github.com/mpolacek", "followers_url": "https://api.github.com/users/mpolacek/followers", "following_url": "https://api.github.com/users/mpolacek/following{/other_user}", "gists_url": "https://api.github.com/users/mpolacek/gists{/gist_id}", "starred_url": "https://api.github.com/users/mpolacek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mpolacek/subscriptions", "organizations_url": "https://api.github.com/users/mpolacek/orgs", "repos_url": "https://api.github.com/users/mpolacek/repos", "events_url": "https://api.github.com/users/mpolacek/events{/privacy}", "received_events_url": "https://api.github.com/users/mpolacek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "d753b1363d6c452a8c30e8ebab7e6fb884b1d300", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d753b1363d6c452a8c30e8ebab7e6fb884b1d300", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d753b1363d6c452a8c30e8ebab7e6fb884b1d300"}], "stats": {"total": 7, "additions": 6, "deletions": 1}, "files": [{"sha": "8dc071d796109076a137794bbc28c32836485a2f", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/61c1a609ee0019524d94b384eaf8159eadb9a555/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/61c1a609ee0019524d94b384eaf8159eadb9a555/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=61c1a609ee0019524d94b384eaf8159eadb9a555", "patch": "@@ -1,3 +1,8 @@\n+2013-08-14  Marek Polacek  <polacek@redhat.com>\n+\n+\t* ipa-inline-analysis.c (add_clause): Avoid shifting integer\n+\tNUM_CONDITIONS bit positions.\n+\n 2013-08-13  Cary Coutant  <ccoutant@google.com>\n \n \t* dwarf2out.c (CHECKSUM_BLOCK): New macro."}, {"sha": "806b219c2288ce6ba28c192c2f08ef591b945391", "filename": "gcc/ipa-inline-analysis.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/61c1a609ee0019524d94b384eaf8159eadb9a555/gcc%2Fipa-inline-analysis.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/61c1a609ee0019524d94b384eaf8159eadb9a555/gcc%2Fipa-inline-analysis.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fipa-inline-analysis.c?ref=61c1a609ee0019524d94b384eaf8159eadb9a555", "patch": "@@ -337,7 +337,7 @@ add_clause (conditions conditions, struct predicate *p, clause_t clause)\n          and thus there is no point for looking for them.  */\n       if (cc1->code == CHANGED || cc1->code == IS_NOT_CONSTANT)\n \tcontinue;\n-      for (c2 = c1 + 1; c2 <= NUM_CONDITIONS; c2++)\n+      for (c2 = c1 + 1; c2 < NUM_CONDITIONS; c2++)\n \tif (clause & (1 << c2))\n \t  {\n \t    condition *cc1 ="}]}