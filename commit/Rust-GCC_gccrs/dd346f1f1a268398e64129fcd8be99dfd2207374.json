{"sha": "dd346f1f1a268398e64129fcd8be99dfd2207374", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGQzNDZmMWYxYTI2ODM5OGU2NDEyOWZjZDhiZTk5ZGZkMjIwNzM3NA==", "commit": {"author": {"name": "Bill Schmidt", "email": "wschmidt@linux.vnet.ibm.com", "date": "2013-10-20T13:55:54Z"}, "committer": {"name": "William Schmidt", "email": "wschmidt@gcc.gnu.org", "date": "2013-10-20T13:55:54Z"}, "message": "altivec.md (vec_unpacku_hi_v16qi): Adjust for little endian.\n\n2013-10-20  Bill Schmidt  <wschmidt@linux.vnet.ibm.com>\n\n\t* config/rs6000/altivec.md (vec_unpacku_hi_v16qi): Adjust for\n\tlittle endian.\n\t(vec_unpacku_hi_v8hi): Likewise.\n\t(vec_unpacku_lo_v16qi): Likewise.\n\t(vec_unpacku_lo_v8hi): Likewise.\n\nFrom-SVN: r203877", "tree": {"sha": "872b1cbf990d56f9f41470007c0ceafac34dd2a9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/872b1cbf990d56f9f41470007c0ceafac34dd2a9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/dd346f1f1a268398e64129fcd8be99dfd2207374", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dd346f1f1a268398e64129fcd8be99dfd2207374", "html_url": "https://github.com/Rust-GCC/gccrs/commit/dd346f1f1a268398e64129fcd8be99dfd2207374", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dd346f1f1a268398e64129fcd8be99dfd2207374/comments", "author": {"login": "wschmidt-ibm", "id": 5520937, "node_id": "MDQ6VXNlcjU1MjA5Mzc=", "avatar_url": "https://avatars.githubusercontent.com/u/5520937?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wschmidt-ibm", "html_url": "https://github.com/wschmidt-ibm", "followers_url": "https://api.github.com/users/wschmidt-ibm/followers", "following_url": "https://api.github.com/users/wschmidt-ibm/following{/other_user}", "gists_url": "https://api.github.com/users/wschmidt-ibm/gists{/gist_id}", "starred_url": "https://api.github.com/users/wschmidt-ibm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wschmidt-ibm/subscriptions", "organizations_url": "https://api.github.com/users/wschmidt-ibm/orgs", "repos_url": "https://api.github.com/users/wschmidt-ibm/repos", "events_url": "https://api.github.com/users/wschmidt-ibm/events{/privacy}", "received_events_url": "https://api.github.com/users/wschmidt-ibm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "915e8e6eec05fb595d445cb738e4875d607ce126", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/915e8e6eec05fb595d445cb738e4875d607ce126", "html_url": "https://github.com/Rust-GCC/gccrs/commit/915e8e6eec05fb595d445cb738e4875d607ce126"}], "stats": {"total": 140, "additions": 76, "deletions": 64}, "files": [{"sha": "65fb879ea6abae029b5b28cc3932481241b39612", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dd346f1f1a268398e64129fcd8be99dfd2207374/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dd346f1f1a268398e64129fcd8be99dfd2207374/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=dd346f1f1a268398e64129fcd8be99dfd2207374", "patch": "@@ -1,3 +1,11 @@\n+2013-10-20  Bill Schmidt  <wschmidt@linux.vnet.ibm.com>\n+\n+\t* config/rs6000/altivec.md (vec_unpacku_hi_v16qi): Adjust for\n+\tlittle endian.\n+\t(vec_unpacku_hi_v8hi): Likewise.\n+\t(vec_unpacku_lo_v16qi): Likewise.\n+\t(vec_unpacku_lo_v8hi): Likewise.\n+\n 2013-10-20  Jan Hubicka  <jh@suse.cz>\n \n \t* config/i386/x86-tune.def (X86_TUNE_SLOW_IMUL_IMM32_MEM,"}, {"sha": "93aaa12076b764cf44a24fc75dc273fc9395dbfb", "filename": "gcc/config/rs6000/altivec.md", "status": "modified", "additions": 68, "deletions": 64, "changes": 132, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dd346f1f1a268398e64129fcd8be99dfd2207374/gcc%2Fconfig%2Frs6000%2Faltivec.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dd346f1f1a268398e64129fcd8be99dfd2207374/gcc%2Fconfig%2Frs6000%2Faltivec.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Faltivec.md?ref=dd346f1f1a268398e64129fcd8be99dfd2207374", "patch": "@@ -2035,25 +2035,26 @@\n   rtx vzero = gen_reg_rtx (V8HImode);\n   rtx mask = gen_reg_rtx (V16QImode);\n   rtvec v = rtvec_alloc (16);\n+  bool be = BYTES_BIG_ENDIAN;\n    \n   emit_insn (gen_altivec_vspltish (vzero, const0_rtx));\n    \n-  RTVEC_ELT (v, 0) = gen_rtx_CONST_INT (QImode, 16);\n-  RTVEC_ELT (v, 1) = gen_rtx_CONST_INT (QImode, 0);\n-  RTVEC_ELT (v, 2) = gen_rtx_CONST_INT (QImode, 16);\n-  RTVEC_ELT (v, 3) = gen_rtx_CONST_INT (QImode, 1);\n-  RTVEC_ELT (v, 4) = gen_rtx_CONST_INT (QImode, 16);\n-  RTVEC_ELT (v, 5) = gen_rtx_CONST_INT (QImode, 2);\n-  RTVEC_ELT (v, 6) = gen_rtx_CONST_INT (QImode, 16);\n-  RTVEC_ELT (v, 7) = gen_rtx_CONST_INT (QImode, 3);\n-  RTVEC_ELT (v, 8) = gen_rtx_CONST_INT (QImode, 16);\n-  RTVEC_ELT (v, 9) = gen_rtx_CONST_INT (QImode, 4);\n-  RTVEC_ELT (v, 10) = gen_rtx_CONST_INT (QImode, 16);\n-  RTVEC_ELT (v, 11) = gen_rtx_CONST_INT (QImode, 5);\n-  RTVEC_ELT (v, 12) = gen_rtx_CONST_INT (QImode, 16);\n-  RTVEC_ELT (v, 13) = gen_rtx_CONST_INT (QImode, 6);\n-  RTVEC_ELT (v, 14) = gen_rtx_CONST_INT (QImode, 16);\n-  RTVEC_ELT (v, 15) = gen_rtx_CONST_INT (QImode, 7);\n+  RTVEC_ELT (v,  0) = gen_rtx_CONST_INT (QImode, be ? 16 :  7);\n+  RTVEC_ELT (v,  1) = gen_rtx_CONST_INT (QImode, be ?  0 : 16);\n+  RTVEC_ELT (v,  2) = gen_rtx_CONST_INT (QImode, be ? 16 :  6);\n+  RTVEC_ELT (v,  3) = gen_rtx_CONST_INT (QImode, be ?  1 : 16);\n+  RTVEC_ELT (v,  4) = gen_rtx_CONST_INT (QImode, be ? 16 :  5);\n+  RTVEC_ELT (v,  5) = gen_rtx_CONST_INT (QImode, be ?  2 : 16);\n+  RTVEC_ELT (v,  6) = gen_rtx_CONST_INT (QImode, be ? 16 :  4);\n+  RTVEC_ELT (v,  7) = gen_rtx_CONST_INT (QImode, be ?  3 : 16);\n+  RTVEC_ELT (v,  8) = gen_rtx_CONST_INT (QImode, be ? 16 :  3);\n+  RTVEC_ELT (v,  9) = gen_rtx_CONST_INT (QImode, be ?  4 : 16);\n+  RTVEC_ELT (v, 10) = gen_rtx_CONST_INT (QImode, be ? 16 :  2);\n+  RTVEC_ELT (v, 11) = gen_rtx_CONST_INT (QImode, be ?  5 : 16);\n+  RTVEC_ELT (v, 12) = gen_rtx_CONST_INT (QImode, be ? 16 :  1);\n+  RTVEC_ELT (v, 13) = gen_rtx_CONST_INT (QImode, be ?  6 : 16);\n+  RTVEC_ELT (v, 14) = gen_rtx_CONST_INT (QImode, be ? 16 :  0);\n+  RTVEC_ELT (v, 15) = gen_rtx_CONST_INT (QImode, be ?  7 : 16);\n \n   emit_insn (gen_vec_initv16qi (mask, gen_rtx_PARALLEL (V16QImode, v)));\n   emit_insn (gen_vperm_v16qiv8hi (operands[0], operands[1], vzero, mask));\n@@ -2070,25 +2071,26 @@\n   rtx vzero = gen_reg_rtx (V4SImode);\n   rtx mask = gen_reg_rtx (V16QImode);\n   rtvec v = rtvec_alloc (16);\n+  bool be = BYTES_BIG_ENDIAN;\n \n   emit_insn (gen_altivec_vspltisw (vzero, const0_rtx));\n  \n-  RTVEC_ELT (v, 0) = gen_rtx_CONST_INT (QImode, 16);\n-  RTVEC_ELT (v, 1) = gen_rtx_CONST_INT (QImode, 17);\n-  RTVEC_ELT (v, 2) = gen_rtx_CONST_INT (QImode, 0);\n-  RTVEC_ELT (v, 3) = gen_rtx_CONST_INT (QImode, 1);\n-  RTVEC_ELT (v, 4) = gen_rtx_CONST_INT (QImode, 16);\n-  RTVEC_ELT (v, 5) = gen_rtx_CONST_INT (QImode, 17);\n-  RTVEC_ELT (v, 6) = gen_rtx_CONST_INT (QImode, 2);\n-  RTVEC_ELT (v, 7) = gen_rtx_CONST_INT (QImode, 3);\n-  RTVEC_ELT (v, 8) = gen_rtx_CONST_INT (QImode, 16);\n-  RTVEC_ELT (v, 9) = gen_rtx_CONST_INT (QImode, 17);\n-  RTVEC_ELT (v, 10) = gen_rtx_CONST_INT (QImode, 4);\n-  RTVEC_ELT (v, 11) = gen_rtx_CONST_INT (QImode, 5);\n-  RTVEC_ELT (v, 12) = gen_rtx_CONST_INT (QImode, 16);\n-  RTVEC_ELT (v, 13) = gen_rtx_CONST_INT (QImode, 17);\n-  RTVEC_ELT (v, 14) = gen_rtx_CONST_INT (QImode, 6);\n-  RTVEC_ELT (v, 15) = gen_rtx_CONST_INT (QImode, 7);\n+  RTVEC_ELT (v,  0) = gen_rtx_CONST_INT (QImode, be ? 16 :  7);\n+  RTVEC_ELT (v,  1) = gen_rtx_CONST_INT (QImode, be ? 17 :  6);\n+  RTVEC_ELT (v,  2) = gen_rtx_CONST_INT (QImode, be ?  0 : 17);\n+  RTVEC_ELT (v,  3) = gen_rtx_CONST_INT (QImode, be ?  1 : 16);\n+  RTVEC_ELT (v,  4) = gen_rtx_CONST_INT (QImode, be ? 16 :  5);\n+  RTVEC_ELT (v,  5) = gen_rtx_CONST_INT (QImode, be ? 17 :  4);\n+  RTVEC_ELT (v,  6) = gen_rtx_CONST_INT (QImode, be ?  2 : 17);\n+  RTVEC_ELT (v,  7) = gen_rtx_CONST_INT (QImode, be ?  3 : 16);\n+  RTVEC_ELT (v,  8) = gen_rtx_CONST_INT (QImode, be ? 16 :  3);\n+  RTVEC_ELT (v,  9) = gen_rtx_CONST_INT (QImode, be ? 17 :  2);\n+  RTVEC_ELT (v, 10) = gen_rtx_CONST_INT (QImode, be ?  4 : 17);\n+  RTVEC_ELT (v, 11) = gen_rtx_CONST_INT (QImode, be ?  5 : 16);\n+  RTVEC_ELT (v, 12) = gen_rtx_CONST_INT (QImode, be ? 16 :  1);\n+  RTVEC_ELT (v, 13) = gen_rtx_CONST_INT (QImode, be ? 17 :  0);\n+  RTVEC_ELT (v, 14) = gen_rtx_CONST_INT (QImode, be ?  6 : 17);\n+  RTVEC_ELT (v, 15) = gen_rtx_CONST_INT (QImode, be ?  7 : 16);\n \n   emit_insn (gen_vec_initv16qi (mask, gen_rtx_PARALLEL (V16QImode, v)));\n   emit_insn (gen_vperm_v8hiv4si (operands[0], operands[1], vzero, mask));\n@@ -2105,25 +2107,26 @@\n   rtx vzero = gen_reg_rtx (V8HImode);\n   rtx mask = gen_reg_rtx (V16QImode);\n   rtvec v = rtvec_alloc (16);\n+  bool be = BYTES_BIG_ENDIAN;\n \n   emit_insn (gen_altivec_vspltish (vzero, const0_rtx));\n \n-  RTVEC_ELT (v, 0) = gen_rtx_CONST_INT (QImode, 16);\n-  RTVEC_ELT (v, 1) = gen_rtx_CONST_INT (QImode, 8);\n-  RTVEC_ELT (v, 2) = gen_rtx_CONST_INT (QImode, 16);\n-  RTVEC_ELT (v, 3) = gen_rtx_CONST_INT (QImode, 9);\n-  RTVEC_ELT (v, 4) = gen_rtx_CONST_INT (QImode, 16);\n-  RTVEC_ELT (v, 5) = gen_rtx_CONST_INT (QImode, 10);\n-  RTVEC_ELT (v, 6) = gen_rtx_CONST_INT (QImode, 16);\n-  RTVEC_ELT (v, 7) = gen_rtx_CONST_INT (QImode, 11);\n-  RTVEC_ELT (v, 8) = gen_rtx_CONST_INT (QImode, 16);\n-  RTVEC_ELT (v, 9) = gen_rtx_CONST_INT (QImode, 12);\n-  RTVEC_ELT (v, 10) = gen_rtx_CONST_INT (QImode, 16);\n-  RTVEC_ELT (v, 11) = gen_rtx_CONST_INT (QImode, 13);\n-  RTVEC_ELT (v, 12) = gen_rtx_CONST_INT (QImode, 16);\n-  RTVEC_ELT (v, 13) = gen_rtx_CONST_INT (QImode, 14);\n-  RTVEC_ELT (v, 14) = gen_rtx_CONST_INT (QImode, 16);\n-  RTVEC_ELT (v, 15) = gen_rtx_CONST_INT (QImode, 15);\n+  RTVEC_ELT (v,  0) = gen_rtx_CONST_INT (QImode, be ? 16 : 15);\n+  RTVEC_ELT (v,  1) = gen_rtx_CONST_INT (QImode, be ?  8 : 16);\n+  RTVEC_ELT (v,  2) = gen_rtx_CONST_INT (QImode, be ? 16 : 14);\n+  RTVEC_ELT (v,  3) = gen_rtx_CONST_INT (QImode, be ?  9 : 16);\n+  RTVEC_ELT (v,  4) = gen_rtx_CONST_INT (QImode, be ? 16 : 13);\n+  RTVEC_ELT (v,  5) = gen_rtx_CONST_INT (QImode, be ? 10 : 16);\n+  RTVEC_ELT (v,  6) = gen_rtx_CONST_INT (QImode, be ? 16 : 12);\n+  RTVEC_ELT (v,  7) = gen_rtx_CONST_INT (QImode, be ? 11 : 16);\n+  RTVEC_ELT (v,  8) = gen_rtx_CONST_INT (QImode, be ? 16 : 11);\n+  RTVEC_ELT (v,  9) = gen_rtx_CONST_INT (QImode, be ? 12 : 16);\n+  RTVEC_ELT (v, 10) = gen_rtx_CONST_INT (QImode, be ? 16 : 10);\n+  RTVEC_ELT (v, 11) = gen_rtx_CONST_INT (QImode, be ? 13 : 16);\n+  RTVEC_ELT (v, 12) = gen_rtx_CONST_INT (QImode, be ? 16 :  9);\n+  RTVEC_ELT (v, 13) = gen_rtx_CONST_INT (QImode, be ? 14 : 16);\n+  RTVEC_ELT (v, 14) = gen_rtx_CONST_INT (QImode, be ? 16 :  8);\n+  RTVEC_ELT (v, 15) = gen_rtx_CONST_INT (QImode, be ? 15 : 16);\n \n   emit_insn (gen_vec_initv16qi (mask, gen_rtx_PARALLEL (V16QImode, v)));\n   emit_insn (gen_vperm_v16qiv8hi (operands[0], operands[1], vzero, mask));\n@@ -2140,25 +2143,26 @@\n   rtx vzero = gen_reg_rtx (V4SImode);\n   rtx mask = gen_reg_rtx (V16QImode);\n   rtvec v = rtvec_alloc (16);\n+  bool be = BYTES_BIG_ENDIAN;\n \n   emit_insn (gen_altivec_vspltisw (vzero, const0_rtx));\n  \n-  RTVEC_ELT (v, 0) = gen_rtx_CONST_INT (QImode, 16);\n-  RTVEC_ELT (v, 1) = gen_rtx_CONST_INT (QImode, 17);\n-  RTVEC_ELT (v, 2) = gen_rtx_CONST_INT (QImode, 8);\n-  RTVEC_ELT (v, 3) = gen_rtx_CONST_INT (QImode, 9);\n-  RTVEC_ELT (v, 4) = gen_rtx_CONST_INT (QImode, 16);\n-  RTVEC_ELT (v, 5) = gen_rtx_CONST_INT (QImode, 17);\n-  RTVEC_ELT (v, 6) = gen_rtx_CONST_INT (QImode, 10);\n-  RTVEC_ELT (v, 7) = gen_rtx_CONST_INT (QImode, 11);\n-  RTVEC_ELT (v, 8) = gen_rtx_CONST_INT (QImode, 16);\n-  RTVEC_ELT (v, 9) = gen_rtx_CONST_INT (QImode, 17);\n-  RTVEC_ELT (v, 10) = gen_rtx_CONST_INT (QImode, 12);\n-  RTVEC_ELT (v, 11) = gen_rtx_CONST_INT (QImode, 13);\n-  RTVEC_ELT (v, 12) = gen_rtx_CONST_INT (QImode, 16);\n-  RTVEC_ELT (v, 13) = gen_rtx_CONST_INT (QImode, 17);\n-  RTVEC_ELT (v, 14) = gen_rtx_CONST_INT (QImode, 14);\n-  RTVEC_ELT (v, 15) = gen_rtx_CONST_INT (QImode, 15);\n+  RTVEC_ELT (v,  0) = gen_rtx_CONST_INT (QImode, be ? 16 : 15);\n+  RTVEC_ELT (v,  1) = gen_rtx_CONST_INT (QImode, be ? 17 : 14);\n+  RTVEC_ELT (v,  2) = gen_rtx_CONST_INT (QImode, be ?  8 : 17);\n+  RTVEC_ELT (v,  3) = gen_rtx_CONST_INT (QImode, be ?  9 : 16);\n+  RTVEC_ELT (v,  4) = gen_rtx_CONST_INT (QImode, be ? 16 : 13);\n+  RTVEC_ELT (v,  5) = gen_rtx_CONST_INT (QImode, be ? 17 : 12);\n+  RTVEC_ELT (v,  6) = gen_rtx_CONST_INT (QImode, be ? 10 : 17);\n+  RTVEC_ELT (v,  7) = gen_rtx_CONST_INT (QImode, be ? 11 : 16);\n+  RTVEC_ELT (v,  8) = gen_rtx_CONST_INT (QImode, be ? 16 : 11);\n+  RTVEC_ELT (v,  9) = gen_rtx_CONST_INT (QImode, be ? 17 : 10);\n+  RTVEC_ELT (v, 10) = gen_rtx_CONST_INT (QImode, be ? 12 : 17);\n+  RTVEC_ELT (v, 11) = gen_rtx_CONST_INT (QImode, be ? 13 : 16);\n+  RTVEC_ELT (v, 12) = gen_rtx_CONST_INT (QImode, be ? 16 :  9);\n+  RTVEC_ELT (v, 13) = gen_rtx_CONST_INT (QImode, be ? 17 :  8);\n+  RTVEC_ELT (v, 14) = gen_rtx_CONST_INT (QImode, be ? 14 : 17);\n+  RTVEC_ELT (v, 15) = gen_rtx_CONST_INT (QImode, be ? 15 : 16);\n \n   emit_insn (gen_vec_initv16qi (mask, gen_rtx_PARALLEL (V16QImode, v)));\n   emit_insn (gen_vperm_v8hiv4si (operands[0], operands[1], vzero, mask));"}]}