{"sha": "90e9a6bef63cb79b87f6c7e58133f7e4cc9de52c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTBlOWE2YmVmNjNjYjc5Yjg3ZjZjN2U1ODEzM2Y3ZTRjYzlkZTUyYw==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2009-11-30T14:24:04Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2009-11-30T14:24:04Z"}, "message": "[multiple changes]\n\n2009-11-30  Javier Miranda  <miranda@adacore.com>\n\n\t* exp_ch6.adb, sem_scil.adb (Adjust_SCIL_Node): Add missing management\n\tof N_Unchecked_Type_Conversion nodes when searching for SCIL nodes.\n\t(Expand_Call): Adjust decoration of SCIL node associated with relocated\n\tfunction call.\n\n2009-11-30  Emmanuel Briot  <briot@adacore.com>\n\n\t* prj-env.adb (Add_To_Source_Path): Preserve casing of directories\n\n2009-11-30  Vincent Celier  <celier@adacore.com>\n\n\t* opt.ads (No_Split_Units): New flag initialized to False\n\n2009-11-30  Jerome Lambourg  <lambourg@adacore.com>\n\n\t* exp_ch7.adb (Needs_Finalization): Add comments.\n\t* exp_ch3.adb (Make_Predefined_Primitive_Specs): Improve handling of\n\tCIL Value types.\n\nFrom-SVN: r154809", "tree": {"sha": "10d56ada1996a161049dab7dc4e5c8971e58a022", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/10d56ada1996a161049dab7dc4e5c8971e58a022"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/90e9a6bef63cb79b87f6c7e58133f7e4cc9de52c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/90e9a6bef63cb79b87f6c7e58133f7e4cc9de52c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/90e9a6bef63cb79b87f6c7e58133f7e4cc9de52c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/90e9a6bef63cb79b87f6c7e58133f7e4cc9de52c/comments", "author": null, "committer": null, "parents": [{"sha": "637da456be0b398ca1ffa7393514973e49f2f32d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/637da456be0b398ca1ffa7393514973e49f2f32d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/637da456be0b398ca1ffa7393514973e49f2f32d"}], "stats": {"total": 82, "additions": 69, "deletions": 13}, "files": [{"sha": "6477c1e540f393037caa6e76b5d2815c1bc89ff7", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/90e9a6bef63cb79b87f6c7e58133f7e4cc9de52c/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/90e9a6bef63cb79b87f6c7e58133f7e4cc9de52c/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=90e9a6bef63cb79b87f6c7e58133f7e4cc9de52c", "patch": "@@ -1,3 +1,24 @@\n+2009-11-30  Javier Miranda  <miranda@adacore.com>\n+\n+\t* exp_ch6.adb, sem_scil.adb (Adjust_SCIL_Node): Add missing management\n+\tof N_Unchecked_Type_Conversion nodes when searching for SCIL nodes.\n+\t(Expand_Call): Adjust decoration of SCIL node associated with relocated\n+\tfunction call.\n+\n+2009-11-30  Emmanuel Briot  <briot@adacore.com>\n+\n+\t* prj-env.adb (Add_To_Source_Path): Preserve casing of directories\n+\n+2009-11-30  Vincent Celier  <celier@adacore.com>\n+\n+\t* opt.ads (No_Split_Units): New flag initialized to False\n+\n+2009-11-30  Jerome Lambourg  <lambourg@adacore.com>\n+\n+\t* exp_ch7.adb (Needs_Finalization): Add comments.\n+\t* exp_ch3.adb (Make_Predefined_Primitive_Specs): Improve handling of\n+\tCIL Value types.\n+\n 2009-11-30  Robert Dewar  <dewar@adacore.com>\n \n \t* osint.adb, a-rttiev.adb: Minor reformatting."}, {"sha": "13454c71858739cb42e3e8e9cb42fdd9180ae8a2", "filename": "gcc/ada/exp_ch3.adb", "status": "modified", "additions": 6, "deletions": 3, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/90e9a6bef63cb79b87f6c7e58133f7e4cc9de52c/gcc%2Fada%2Fexp_ch3.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/90e9a6bef63cb79b87f6c7e58133f7e4cc9de52c/gcc%2Fada%2Fexp_ch3.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch3.adb?ref=90e9a6bef63cb79b87f6c7e58133f7e4cc9de52c", "patch": "@@ -8104,6 +8104,11 @@ package body Exp_Ch3 is\n       elsif Restriction_Active (No_Finalization) then\n          null;\n \n+      --  We skip these for CIL Value types (why???)\n+\n+      elsif Is_Value_Type (Tag_Typ) then\n+         null;\n+\n       elsif Etype (Tag_Typ) = Tag_Typ\n         or else Needs_Finalization (Tag_Typ)\n \n@@ -8121,9 +8126,7 @@ package body Exp_Ch3 is\n                   and then not Is_Limited_Interface (Tag_Typ)\n                   and then Is_Limited_Interface (Etype (Tag_Typ)))\n       then\n-         if not Is_Limited_Type (Tag_Typ)\n-           and then not Is_Value_Type (Tag_Typ)\n-         then\n+         if not Is_Limited_Type (Tag_Typ) then\n             Append_To (Res,\n               Predef_Deep_Spec (Loc, Tag_Typ, TSS_Deep_Adjust));\n          end if;"}, {"sha": "1e4ea01141dc13b3c7226680a9d393f6112f89ec", "filename": "gcc/ada/exp_ch6.adb", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/90e9a6bef63cb79b87f6c7e58133f7e4cc9de52c/gcc%2Fada%2Fexp_ch6.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/90e9a6bef63cb79b87f6c7e58133f7e4cc9de52c/gcc%2Fada%2Fexp_ch6.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch6.adb?ref=90e9a6bef63cb79b87f6c7e58133f7e4cc9de52c", "patch": "@@ -2779,6 +2779,19 @@ package body Exp_Ch6 is\n                           Unchecked_Convert_To (Parent_Typ,\n                             Relocate_Node (Actual)));\n \n+                        --  If the relocated node is a function call then it\n+                        --  can be part of the expansion of the predefined\n+                        --  equality operator of a tagged type and we may\n+                        --  need to adjust its SCIL dispatching node.\n+\n+                        if Generate_SCIL\n+                          and then Nkind (Actual) /= N_Null\n+                          and then Nkind (Expression (Actual))\n+                                     = N_Function_Call\n+                        then\n+                           Adjust_SCIL_Node (Actual, Expression (Actual));\n+                        end if;\n+\n                         Analyze (Actual);\n                         Resolve (Actual, Parent_Typ);\n                      end if;"}, {"sha": "880ae4e4cb9e6cd304d343c2dd9f5659395aab64", "filename": "gcc/ada/exp_ch7.adb", "status": "modified", "additions": 19, "deletions": 8, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/90e9a6bef63cb79b87f6c7e58133f7e4cc9de52c/gcc%2Fada%2Fexp_ch7.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/90e9a6bef63cb79b87f6c7e58133f7e4cc9de52c/gcc%2Fada%2Fexp_ch7.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch7.adb?ref=90e9a6bef63cb79b87f6c7e58133f7e4cc9de52c", "patch": "@@ -3287,18 +3287,29 @@ package body Exp_Ch7 is\n    --  Start of processing for Needs_Finalization\n \n    begin\n-      --  Class-wide types must be treated as controlled because they may\n-      --  contain an extension that has controlled components.\n+      return\n+\n+        --  Class-wide types must be treated as controlled and therefore\n+        --  requiring finalization (because they may be extended with an\n+        --  extension that has controlled components.\n+\n+        (Is_Class_Wide_Type (T)\n+\n+          --  However, avoid treating class-wide types as controlled if\n+          --  finalization is not available and in particular CIL value\n+          --  types never have finalization).\n \n-      --  We can skip this if finalization is not available.\n-      --  or if it is a value type (because ???)\n+          and then not In_Finalization_Root (T)\n+          and then not Restriction_Active (No_Finalization)\n+          and then not Is_Value_Type (Etype (T)))\n+\n+        --  Controlled types always need finalization\n \n-      return (Is_Class_Wide_Type (T)\n-                and then not In_Finalization_Root (T)\n-                and then not Restriction_Active (No_Finalization)\n-                and then not Is_Value_Type (Etype (T)))\n         or else Is_Controlled (T)\n         or else Has_Some_Controlled_Component (T)\n+\n+        --  For concurrent types, test the corresponding record type\n+\n         or else (Is_Concurrent_Type (T)\n                   and then Present (Corresponding_Record_Type (T))\n                   and then Needs_Finalization (Corresponding_Record_Type (T)));"}, {"sha": "9013d7d3dcd5e58077286b6aad3ef99700a1c0a2", "filename": "gcc/ada/opt.ads", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/90e9a6bef63cb79b87f6c7e58133f7e4cc9de52c/gcc%2Fada%2Fopt.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/90e9a6bef63cb79b87f6c7e58133f7e4cc9de52c/gcc%2Fada%2Fopt.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fopt.ads?ref=90e9a6bef63cb79b87f6c7e58133f7e4cc9de52c", "patch": "@@ -861,6 +861,12 @@ package Opt is\n    --  This flag is set True if a No_Run_Time pragma is encountered. See\n    --  spec of Rtsfind for a full description of handling of this pragma.\n \n+   No_Split_Units : Boolean := False;\n+   --  GPRBUILD\n+   --  Set to True with switch --no-split-units. When True, unit sources, spec,\n+   --  body and subunits, must all be in the same project.This is checked after\n+   --  each compilation.\n+\n    No_Stdinc : Boolean := False;\n    --  GNAT, GNATBIND, GNATMAKE, GNATFIND, GNATXREF\n    --  Set to True if no default source search dirs added to search list"}, {"sha": "f7fc668dd8f76b4c46383876956090e30f6c0e16", "filename": "gcc/ada/prj-env.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/90e9a6bef63cb79b87f6c7e58133f7e4cc9de52c/gcc%2Fada%2Fprj-env.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/90e9a6bef63cb79b87f6c7e58133f7e4cc9de52c/gcc%2Fada%2Fprj-env.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-env.adb?ref=90e9a6bef63cb79b87f6c7e58133f7e4cc9de52c", "patch": "@@ -410,7 +410,7 @@ package body Prj.Env is\n          end loop;\n \n          if Add_It then\n-            Source_Path_Table.Append (Source_Paths, Source_Dir.Value);\n+            Source_Path_Table.Append (Source_Paths, Source_Dir.Display_Value);\n          end if;\n \n          --  Next source directory"}, {"sha": "5adf803fc703e61c231697d29a2f66abce32502a", "filename": "gcc/ada/sem_scil.adb", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/90e9a6bef63cb79b87f6c7e58133f7e4cc9de52c/gcc%2Fada%2Fsem_scil.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/90e9a6bef63cb79b87f6c7e58133f7e4cc9de52c/gcc%2Fada%2Fsem_scil.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_scil.adb?ref=90e9a6bef63cb79b87f6c7e58133f7e4cc9de52c", "patch": "@@ -74,7 +74,9 @@ package body Sem_SCIL is\n       --  Type conversions may involve dispatching calls to functions whose\n       --  associated SCIL dispatching node needs adjustment.\n \n-      elsif Nkind (Old_Node) = N_Type_Conversion then\n+      elsif Nkind_In (Old_Node, N_Type_Conversion,\n+                                N_Unchecked_Type_Conversion)\n+      then\n          null;\n \n       --  Relocated subprogram call"}]}