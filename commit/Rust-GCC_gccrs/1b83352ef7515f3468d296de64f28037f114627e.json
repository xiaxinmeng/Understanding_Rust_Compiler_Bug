{"sha": "1b83352ef7515f3468d296de64f28037f114627e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWI4MzM1MmVmNzUxNWYzNDY4ZDI5NmRlNjRmMjgwMzdmMTE0NjI3ZQ==", "commit": {"author": {"name": "Neil Booth", "email": "neilb@earthling.net", "date": "2000-12-02T15:28:08Z"}, "committer": {"name": "Neil Booth", "email": "neil@gcc.gnu.org", "date": "2000-12-02T15:28:08Z"}, "message": "* g++.old-deja/g++.other/instan2.C\n        * g++.old-deja/g++.other/instan3.C: New test.\n\nFrom-SVN: r37952", "tree": {"sha": "1e0e526fea00b866ab5e6c294ae7aab4ee9890e0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1e0e526fea00b866ab5e6c294ae7aab4ee9890e0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1b83352ef7515f3468d296de64f28037f114627e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1b83352ef7515f3468d296de64f28037f114627e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1b83352ef7515f3468d296de64f28037f114627e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1b83352ef7515f3468d296de64f28037f114627e/comments", "author": null, "committer": null, "parents": [{"sha": "84e6f1ba3886819ea3f98b38efae2e0b7309e0c6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/84e6f1ba3886819ea3f98b38efae2e0b7309e0c6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/84e6f1ba3886819ea3f98b38efae2e0b7309e0c6"}], "stats": {"total": 85, "additions": 85, "deletions": 0}, "files": [{"sha": "716abf44f2f325c20b2d3974eef1120e0e0c2a89", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1b83352ef7515f3468d296de64f28037f114627e/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1b83352ef7515f3468d296de64f28037f114627e/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=1b83352ef7515f3468d296de64f28037f114627e", "patch": "@@ -1,3 +1,8 @@\n+2000-12-02  Neil Booth  <neilb@earthling.net>\n+\n+        * g++.old-deja/g++.other/instan2.C\n+        * g++.old-deja/g++.other/instan3.C: New test.\n+\n 2000-12-02  Neil Booth  <neilb@earthling.net>\n \n         * gcc.dg/cpp/c++98.c,c++98-pedantic.c,c89.c,c89-pedantic.c,"}, {"sha": "822de9e7946fb58d2a0e3169b031d0d461aa2c7d", "filename": "gcc/testsuite/g++.old-deja/g++.other/instan2.C", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1b83352ef7515f3468d296de64f28037f114627e/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Finstan2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1b83352ef7515f3468d296de64f28037f114627e/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Finstan2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Finstan2.C?ref=1b83352ef7515f3468d296de64f28037f114627e", "patch": "@@ -0,0 +1,15 @@\n+// Build don't link:\n+// Origin: Neil Booth, from bug report #44\n+\n+#include <iterator>\n+\n+template<class T>\n+struct X\n+{\n+};\n+\n+template<class T>\n+X<T> operator+(const X<T>&, const X<T>&);\n+\n+template<>\n+X<int> operator+<int>(const X<int>&, const X<int>&);"}, {"sha": "ae53224e9c846bb4bbba1bebf61828d3ff2b55f2", "filename": "gcc/testsuite/g++.old-deja/g++.other/instan3.C", "status": "added", "additions": 65, "deletions": 0, "changes": 65, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1b83352ef7515f3468d296de64f28037f114627e/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Finstan3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1b83352ef7515f3468d296de64f28037f114627e/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Finstan3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Finstan3.C?ref=1b83352ef7515f3468d296de64f28037f114627e", "patch": "@@ -0,0 +1,65 @@\n+// Build don't link:\n+// Origin: Neil Booth, from bug report #36\n+\n+template <typename t> class vect;\n+template <typename t> vect<t> operator-( const vect<t>&, const vect<t>& );\n+\n+template <typename t>\n+class vect\n+{\n+public:\n+  vect( t a );\n+\n+  vect( const vect<t>& v );\n+  ~vect();\n+\n+  vect<t>& operator=( const vect<t>& v );\n+  vect<t>  operator-( void ) const;\n+  friend vect<t> operator- <>( const vect<t>&, const vect<t>& );\n+\n+private:\n+  t a_;\n+};\n+\n+template <typename t> inline\n+vect<t>::vect( t a )\n+: a_(a)\n+{\n+}\n+\n+template <typename t> inline\n+vect<t>::vect( const vect<t>& v )\n+: a_(v.a_)\n+{\n+}\n+\n+template <typename t> inline\n+vect<t>::~vect()\n+{\n+}\n+\n+template <typename t> inline vect<t>& \n+vect<t>::operator=( const vect<t>& v )\n+{\n+   a_ = v.a_;\n+   return *this;\n+}\n+\n+template <typename t> inline vect<t>\n+vect<t>::operator-( void ) const\n+{\n+  return vect<t>( -a_ );\n+}\n+\n+template <typename t> inline vect<t>\n+operator-( const vect<t>& u, const vect<t>& v )\n+{\n+  return vect<t>( u.a_ - v.a_ );\n+}\n+\n+int\n+main( void )\n+{\n+  vect<double> a( 1.0 ), b( 0.0 );\n+  b = -a;\n+}"}]}