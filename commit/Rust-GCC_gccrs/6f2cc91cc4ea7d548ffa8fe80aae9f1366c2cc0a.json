{"sha": "6f2cc91cc4ea7d548ffa8fe80aae9f1366c2cc0a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmYyY2M5MWNjNGVhN2Q1NDhmZmE4ZmU4MGFhZTlmMTM2NmMyY2MwYQ==", "commit": {"author": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2011-11-07T10:23:56Z"}, "committer": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2011-11-07T10:23:56Z"}, "message": "f16cintrin: Remove extra _X86INTRIN_H_INCLUDED check.\n\n\t* config/i386/f16cintrin: Remove extra _X86INTRIN_H_INCLUDED check.\n\nFrom-SVN: r181080", "tree": {"sha": "7dfd0a7e349bb17466afc4e2458e2adfd839c666", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7dfd0a7e349bb17466afc4e2458e2adfd839c666"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6f2cc91cc4ea7d548ffa8fe80aae9f1366c2cc0a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6f2cc91cc4ea7d548ffa8fe80aae9f1366c2cc0a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6f2cc91cc4ea7d548ffa8fe80aae9f1366c2cc0a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6f2cc91cc4ea7d548ffa8fe80aae9f1366c2cc0a/comments", "author": null, "committer": null, "parents": [{"sha": "c750e76857add05d481a68df00bf75d5f5afc419", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c750e76857add05d481a68df00bf75d5f5afc419", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c750e76857add05d481a68df00bf75d5f5afc419"}], "stats": {"total": 22, "additions": 11, "deletions": 11}, "files": [{"sha": "f6ea86473a2638816ca58754ae498c85635c687e", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 6, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f2cc91cc4ea7d548ffa8fe80aae9f1366c2cc0a/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f2cc91cc4ea7d548ffa8fe80aae9f1366c2cc0a/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=6f2cc91cc4ea7d548ffa8fe80aae9f1366c2cc0a", "patch": "@@ -1,3 +1,7 @@\n+2011-11-07  Uros Bizjak  <ubizjak@gmail.com>\n+\n+\t* config/i386/f16cintrin: Remove extra _X86INTRIN_H_INCLUDED check.\n+\n 2011-11-07  Tristan Gingold  <gingold@adacore.com>\n \n \t* config.gcc (*-*-*vms*): Set c_target_objs, cxx_target_objs.\n@@ -26,8 +30,7 @@\n  2011-11-07  Sergey Ostanevich  <sergos.gnu@gmail.com>\n \n \tPR rtl-optimization/47698\n-\t* ifconv.c (noce_operand_ok): prevent CMOV generation\n-\tfor volatile mem.\n+\t* ifconv.c (noce_operand_ok): prevent CMOV generation for volatile mem.\n \n 2011-11-07  Tristan Gingold  <gingold@adacore.com>\n \n@@ -42,7 +45,7 @@\n \n \tFix r180999, update ChangeLog\n \t* config.gcc: Add f16cintrin.h.\n-\t* f16cintrin.h: Add missing endif.\n+\t* config/i386/f16cintrin.h: Add missing endif.\n \n 2011-11-06  Sebastian Huber  <sebastian.huber@embedded-brains.de>\n \n@@ -114,8 +117,7 @@\n \t(c_parser_alignas_specifier): New.\n \t(c_parser_alignof_expression): Diagnose alignof use for non-C1X.\n \tDiagnose _Alignof (expression).\n-\t* c-tree.h (struct c_declspecs): Add align_log and alignas_p\n-\tfields.\n+\t* c-tree.h (struct c_declspecs): Add align_log and alignas_p fields.\n \t(declspecs_add_alignas): Declare.\n \t* ginclude/stddef.h (max_align_t): Define for C1X and C++11.\n \t* ginclude/stdalign.h: New.\n@@ -129,7 +131,7 @@\n \t(struct insn_info): Add member fixed_regs_live.\n \t(note_add_store_info): New typedef.\n \t(note_add_store): New function.\n-\t(emit_inc_dec_insn_before): Expect arg to be of type insn_info_t .\n+\t(emit_inc_dec_insn_before): Expect arg to be of type insn_info_t.\n \tUse gen_add3_insn / gen_move_insn.\n \tCheck new insn for unwanted clobbers before emitting it.\n \t(check_for_inc_dec): Rename to..."}, {"sha": "ac827ca0e1280c9b472b69894b4f74eb165a348d", "filename": "gcc/config/i386/f16cintrin.h", "status": "modified", "additions": 3, "deletions": 5, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f2cc91cc4ea7d548ffa8fe80aae9f1366c2cc0a/gcc%2Fconfig%2Fi386%2Ff16cintrin.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f2cc91cc4ea7d548ffa8fe80aae9f1366c2cc0a/gcc%2Fconfig%2Fi386%2Ff16cintrin.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Ff16cintrin.h?ref=6f2cc91cc4ea7d548ffa8fe80aae9f1366c2cc0a", "patch": "@@ -1,5 +1,4 @@\n-/* Copyright (C) 2011\n-   Free Software Foundation, Inc.\n+/* Copyright (C) 2011 Free Software Foundation, Inc.\n \n    This file is part of GCC.\n \n@@ -22,8 +21,7 @@\n    see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n    <http://www.gnu.org/licenses/>.  */\n \n-#ifndef _X86INTRIN_H_INCLUDED\n-#if (!defined(_X86INTRIN_H_INCLUDED) && !defined(_IMMINTRIN_H_INCLUDED))\n+#if !defined _X86INTRIN_H_INCLUDED && !defined _IMMINTRIN_H_INCLUDED\n # error \"Never use <f16intrin.h> directly; include <x86intrin.h> or <immintrin.h> instead.\"\n #endif\n \n@@ -89,6 +87,6 @@ _mm256_cvtps_ph (__m256 __A, const int __I)\n #define _mm256_cvtps_ph(A, I) \\\n   ((__m128i) __builtin_ia32_vcvtps2ph256 ((__v8sf)(__m256) A, (int) (I)))\n #endif /* __OPTIMIZE */\n+\n #endif /* _F16CINTRIN_H_INCLUDED */\n #endif /* __F16C__ */\n-#endif /* _X86INTRIN_H_INCLUDED */"}]}