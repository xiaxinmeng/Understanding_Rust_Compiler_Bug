{"sha": "2f7026a014b970b927a12661ee9debe5ddb9458f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmY3MDI2YTAxNGI5NzBiOTI3YTEyNjYxZWU5ZGViZTVkZGI5NDU4Zg==", "commit": {"author": {"name": "Joseph Myers", "email": "jsm28@cam.ac.uk", "date": "2000-10-12T07:26:20Z"}, "committer": {"name": "Joseph Myers", "email": "jsm28@gcc.gnu.org", "date": "2000-10-12T07:26:20Z"}, "message": "c-common.c (print_char_table): Use the unpromoted type for lengths \"h\" and \"hh\" with conversions dioxXu.\n\n\t* c-common.c (print_char_table): Use the unpromoted type for\n\tlengths \"h\" and \"hh\" with conversions dioxXu.\n\t(check_format_types): Apply the default argument promotions where\n\tthe wanted type is not a pointer target.\n\nFrom-SVN: r36841", "tree": {"sha": "360a3d12bd9ac5b6b7248be74f575941f4d0a923", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/360a3d12bd9ac5b6b7248be74f575941f4d0a923"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2f7026a014b970b927a12661ee9debe5ddb9458f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2f7026a014b970b927a12661ee9debe5ddb9458f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2f7026a014b970b927a12661ee9debe5ddb9458f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2f7026a014b970b927a12661ee9debe5ddb9458f/comments", "author": {"login": "jsm28", "id": 10537793, "node_id": "MDQ6VXNlcjEwNTM3Nzkz", "avatar_url": "https://avatars.githubusercontent.com/u/10537793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsm28", "html_url": "https://github.com/jsm28", "followers_url": "https://api.github.com/users/jsm28/followers", "following_url": "https://api.github.com/users/jsm28/following{/other_user}", "gists_url": "https://api.github.com/users/jsm28/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsm28/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsm28/subscriptions", "organizations_url": "https://api.github.com/users/jsm28/orgs", "repos_url": "https://api.github.com/users/jsm28/repos", "events_url": "https://api.github.com/users/jsm28/events{/privacy}", "received_events_url": "https://api.github.com/users/jsm28/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jsm28", "id": 10537793, "node_id": "MDQ6VXNlcjEwNTM3Nzkz", "avatar_url": "https://avatars.githubusercontent.com/u/10537793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsm28", "html_url": "https://github.com/jsm28", "followers_url": "https://api.github.com/users/jsm28/followers", "following_url": "https://api.github.com/users/jsm28/following{/other_user}", "gists_url": "https://api.github.com/users/jsm28/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsm28/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsm28/subscriptions", "organizations_url": "https://api.github.com/users/jsm28/orgs", "repos_url": "https://api.github.com/users/jsm28/repos", "events_url": "https://api.github.com/users/jsm28/events{/privacy}", "received_events_url": "https://api.github.com/users/jsm28/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "bb58bec5cf51bf1cadf8e2462a61e965806f5c6e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bb58bec5cf51bf1cadf8e2462a61e965806f5c6e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bb58bec5cf51bf1cadf8e2462a61e965806f5c6e"}], "stats": {"total": 21, "additions": 18, "deletions": 3}, "files": [{"sha": "9f7f5a005b487ff9cefc827f5dc4f77ae0306b8a", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2f7026a014b970b927a12661ee9debe5ddb9458f/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2f7026a014b970b927a12661ee9debe5ddb9458f/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=2f7026a014b970b927a12661ee9debe5ddb9458f", "patch": "@@ -1,3 +1,10 @@\n+2000-10-12  Joseph S. Myers  <jsm28@cam.ac.uk>\n+\n+\t* c-common.c (print_char_table): Use the unpromoted type for\n+\tlengths \"h\" and \"hh\" with conversions dioxXu.\n+\t(check_format_types): Apply the default argument promotions where\n+\tthe wanted type is not a pointer target.\n+\n 2000-10-11  Michael Meeks  <mmeeks@gnu.org>\n             Joseph S. Myers  <jsm28@cam.ac.uk>\n "}, {"sha": "0e77cdd4e9f5e71da6f22248a207c907a4b1e096", "filename": "gcc/c-common.c", "status": "modified", "additions": 11, "deletions": 3, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2f7026a014b970b927a12661ee9debe5ddb9458f/gcc%2Fc-common.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2f7026a014b970b927a12661ee9debe5ddb9458f/gcc%2Fc-common.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-common.c?ref=2f7026a014b970b927a12661ee9debe5ddb9458f", "patch": "@@ -1603,9 +1603,9 @@ static const format_flag_pair strftime_flag_pairs[] =\n static const format_char_info print_char_table[] =\n {\n   /* C89 conversion specifiers.  */\n-  { \"di\",  0, STD_C89, { T89_I,   T99_I,   T89_I,   T89_L,   T99_LL,  TEX_LL,  T99_SST, T99_PD,  T99_IM  }, \"-wp0 +'I\", \"i\" },\n-  { \"oxX\", 0, STD_C89, { T89_UI,  T99_UI,  T89_UI,  T89_UL,  T99_ULL, TEX_ULL, T99_ST,  T99_UPD, T99_UIM }, \"-wp0#\",    \"i\" },\n-  { \"u\",   0, STD_C89, { T89_UI,  T99_UI,  T89_UI,  T89_UL,  T99_ULL, TEX_ULL, T99_ST,  T99_UPD, T99_UIM }, \"-wp0'I\",   \"i\" },\n+  { \"di\",  0, STD_C89, { T89_I,   T99_SC,  T89_S,   T89_L,   T99_LL,  TEX_LL,  T99_SST, T99_PD,  T99_IM  }, \"-wp0 +'I\", \"i\" },\n+  { \"oxX\", 0, STD_C89, { T89_UI,  T99_UC,  T89_US,  T89_UL,  T99_ULL, TEX_ULL, T99_ST,  T99_UPD, T99_UIM }, \"-wp0#\",    \"i\" },\n+  { \"u\",   0, STD_C89, { T89_UI,  T99_UC,  T89_US,  T89_UL,  T99_ULL, TEX_ULL, T99_ST,  T99_UPD, T99_UIM }, \"-wp0'I\",   \"i\" },\n   { \"fgG\", 0, STD_C89, { T89_D,   BADLEN,  BADLEN,  T99_D,   BADLEN,  T89_LD,  BADLEN,  BADLEN,  BADLEN  }, \"-wp0 +#'\", \"\"  },\n   { \"eE\",  0, STD_C89, { T89_D,   BADLEN,  BADLEN,  T99_D,   BADLEN,  T89_LD,  BADLEN,  BADLEN,  BADLEN  }, \"-wp0 +#\",  \"\"  },\n   { \"c\",   0, STD_C89, { T89_I,   BADLEN,  BADLEN,  T94_WI,  BADLEN,  BADLEN,  BADLEN,  BADLEN,  BADLEN  }, \"-w\",       \"\"  },\n@@ -2864,6 +2864,7 @@ check_format_types (status, types)\n       tree cur_type;\n       tree orig_cur_type;\n       tree wanted_type;\n+      tree promoted_type;\n       int arg_num;\n       int i;\n       int char_type_flag;\n@@ -2881,6 +2882,13 @@ check_format_types (status, types)\n       if (wanted_type == void_type_node && types->pointer_count == 0)\n \tabort ();\n \n+      if (types->pointer_count == 0)\n+\t{\n+\t  promoted_type = simple_type_promotes_to (wanted_type);\n+\t  if (promoted_type != NULL_TREE)\n+\t    wanted_type = promoted_type;\n+\t}\n+\n       STRIP_NOPS (cur_param);\n \n       /* Check the types of any additional pointer arguments"}]}