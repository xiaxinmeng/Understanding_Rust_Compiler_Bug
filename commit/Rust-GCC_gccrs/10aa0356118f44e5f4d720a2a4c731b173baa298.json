{"sha": "10aa0356118f44e5f4d720a2a4c731b173baa298", "node_id": "C_kwDOANBUbNoAKDEwYWEwMzU2MTE4ZjQ0ZTVmNGQ3MjBhMmE0YzczMWIxNzNiYWEyOTg", "commit": {"author": {"name": "Andrew Stubbs", "email": "ams@codesourcery.com", "date": "2022-10-28T12:09:20Z"}, "committer": {"name": "Andrew Stubbs", "email": "ams@codesourcery.com", "date": "2022-10-31T12:20:53Z"}, "message": "amdgcn: add fmin/fmax patterns\n\nAdd fmin/fmax for scalar, vector, and reductions.  The smin/smax patterns are\nalready using the IEEE compliant hardware instructions anyway, so we can just\nexpand to use those insns.\n\ngcc/ChangeLog:\n\n\t* config/gcn/gcn-valu.md (fminmaxop): New iterator.\n\t(<fexpander><mode>3): New define_expand.\n\t(<fexpander><mode>3<exec>): Likewise.\n\t(reduc_<fexpander>_scal_<mode>): Likewise.\n\t* config/gcn/gcn.md (fexpander): New attribute.", "tree": {"sha": "9a8b2cf6fb04ddeb95e943bff6ef4f77501d91df", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9a8b2cf6fb04ddeb95e943bff6ef4f77501d91df"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/10aa0356118f44e5f4d720a2a4c731b173baa298", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/10aa0356118f44e5f4d720a2a4c731b173baa298", "html_url": "https://github.com/Rust-GCC/gccrs/commit/10aa0356118f44e5f4d720a2a4c731b173baa298", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/10aa0356118f44e5f4d720a2a4c731b173baa298/comments", "author": {"login": "ams-cs", "id": 2235130, "node_id": "MDQ6VXNlcjIyMzUxMzA=", "avatar_url": "https://avatars.githubusercontent.com/u/2235130?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ams-cs", "html_url": "https://github.com/ams-cs", "followers_url": "https://api.github.com/users/ams-cs/followers", "following_url": "https://api.github.com/users/ams-cs/following{/other_user}", "gists_url": "https://api.github.com/users/ams-cs/gists{/gist_id}", "starred_url": "https://api.github.com/users/ams-cs/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ams-cs/subscriptions", "organizations_url": "https://api.github.com/users/ams-cs/orgs", "repos_url": "https://api.github.com/users/ams-cs/repos", "events_url": "https://api.github.com/users/ams-cs/events{/privacy}", "received_events_url": "https://api.github.com/users/ams-cs/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ams-cs", "id": 2235130, "node_id": "MDQ6VXNlcjIyMzUxMzA=", "avatar_url": "https://avatars.githubusercontent.com/u/2235130?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ams-cs", "html_url": "https://github.com/ams-cs", "followers_url": "https://api.github.com/users/ams-cs/followers", "following_url": "https://api.github.com/users/ams-cs/following{/other_user}", "gists_url": "https://api.github.com/users/ams-cs/gists{/gist_id}", "starred_url": "https://api.github.com/users/ams-cs/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ams-cs/subscriptions", "organizations_url": "https://api.github.com/users/ams-cs/orgs", "repos_url": "https://api.github.com/users/ams-cs/repos", "events_url": "https://api.github.com/users/ams-cs/events{/privacy}", "received_events_url": "https://api.github.com/users/ams-cs/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f539029c1ce6fb9163422d1a8b6ac12a2554eaa2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f539029c1ce6fb9163422d1a8b6ac12a2554eaa2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f539029c1ce6fb9163422d1a8b6ac12a2554eaa2"}], "stats": {"total": 32, "additions": 32, "deletions": 0}, "files": [{"sha": "3b619512e13fbbb078795c6467ee002bf9f3b4b8", "filename": "gcc/config/gcn/gcn-valu.md", "status": "modified", "additions": 28, "deletions": 0, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/10aa0356118f44e5f4d720a2a4c731b173baa298/gcc%2Fconfig%2Fgcn%2Fgcn-valu.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/10aa0356118f44e5f4d720a2a4c731b173baa298/gcc%2Fconfig%2Fgcn%2Fgcn-valu.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fgcn%2Fgcn-valu.md?ref=10aa0356118f44e5f4d720a2a4c731b173baa298", "patch": "@@ -2466,6 +2466,23 @@\n   [(set_attr \"type\" \"vop2\")\n    (set_attr \"length\" \"8,8\")])\n \n+(define_code_iterator fminmaxop [smin smax])\n+(define_expand \"<fexpander><mode>3\"\n+  [(set (match_operand:FP 0 \"gcn_valu_dst_operand\")\n+\t(fminmaxop:FP\n+\t  (match_operand:FP 1 \"gcn_valu_src0_operand\")\n+\t  (match_operand:FP 2 \"gcn_valu_src1_operand\")))]\n+  \"\"\n+  {})\n+\n+(define_expand \"<fexpander><mode>3<exec>\"\n+  [(set (match_operand:V_FP 0 \"gcn_valu_dst_operand\")\n+\t(fminmaxop:V_FP\n+\t  (match_operand:V_FP 1 \"gcn_valu_src0_operand\")\n+\t  (match_operand:V_FP 2 \"gcn_valu_src1_operand\")))]\n+  \"\"\n+  {})\n+\n ;; }}}\n ;; {{{ FP unops\n \n@@ -3522,6 +3539,17 @@\n     DONE;\n   })\n \n+(define_expand \"reduc_<fexpander>_scal_<mode>\"\n+  [(match_operand:<SCALAR_MODE> 0 \"register_operand\")\n+   (fminmaxop:V_FP\n+     (match_operand:V_FP 1 \"register_operand\"))]\n+  \"\"\n+  {\n+    /* fmin/fmax are identical to smin/smax.  */\n+    emit_insn (gen_reduc_<expander>_scal_<mode> (operands[0], operands[1]));\n+    DONE;\n+  })\n+\n ;; Warning: This \"-ffast-math\" implementation converts in-order reductions\n ;;          into associative reductions. It's also used where OpenMP or\n ;;          OpenACC paralellization has already broken the in-order semantics."}, {"sha": "987b76396cc110fe1cbe8a695fdc1f84ef5216c7", "filename": "gcc/config/gcn/gcn.md", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/10aa0356118f44e5f4d720a2a4c731b173baa298/gcc%2Fconfig%2Fgcn%2Fgcn.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/10aa0356118f44e5f4d720a2a4c731b173baa298/gcc%2Fconfig%2Fgcn%2Fgcn.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fgcn%2Fgcn.md?ref=10aa0356118f44e5f4d720a2a4c731b173baa298", "patch": "@@ -372,6 +372,10 @@\n    (sign_extend \"extend\")\n    (zero_extend \"zero_extend\")])\n \n+(define_code_attr fexpander\n+  [(smin \"fmin\")\n+   (smax \"fmax\")])\n+\n ;; }}}\n ;; {{{ Miscellaneous instructions\n "}]}