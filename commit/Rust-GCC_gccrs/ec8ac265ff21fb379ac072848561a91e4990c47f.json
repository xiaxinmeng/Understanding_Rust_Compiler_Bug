{"sha": "ec8ac265ff21fb379ac072848561a91e4990c47f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWM4YWMyNjVmZjIxZmIzNzlhYzA3Mjg0ODU2MWE5MWU0OTkwYzQ3Zg==", "commit": {"author": {"name": "Richard Sandiford", "email": "richard.sandiford@arm.com", "date": "2019-07-29T08:46:54Z"}, "committer": {"name": "Richard Sandiford", "email": "rsandifo@gcc.gnu.org", "date": "2019-07-29T08:46:54Z"}, "message": "Prevent -Og from deleting stores to write-only variables\n\nThis patch prevents -Og from deleting stores to write-only variables,\nso that the values are still available when debugging.  This seems\nmore convenient than forcing users to use __attribute__((used))\n(probably conditionally, if it's not something they want in release\nbuilds).\n\n2019-07-29  Richard Sandiford  <richard.sandiford@arm.com>\n\ngcc/\n\t* tree-cfg.c (execute_fixup_cfg): Don't delete stores to write-only\n\tvariables for -Og.\n\ngcc/testsuite/\n\t* c-c++-common/guality/Og-static-wo-1.c: New test.\n\t* g++.dg/guality/guality.exp: Separate the c-c++-common tests into\n\t\"Og\" and \"general\" tests.  Run the latter at -O0 and -Og only.\n\t* gcc.dg/guality/guality.exp: Likewise.\n\nFrom-SVN: r273870", "tree": {"sha": "05590c079f7410c30e47e42b0b61d229124c5895", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/05590c079f7410c30e47e42b0b61d229124c5895"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ec8ac265ff21fb379ac072848561a91e4990c47f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ec8ac265ff21fb379ac072848561a91e4990c47f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ec8ac265ff21fb379ac072848561a91e4990c47f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ec8ac265ff21fb379ac072848561a91e4990c47f/comments", "author": {"login": "rsandifo-arm", "id": 28043039, "node_id": "MDQ6VXNlcjI4MDQzMDM5", "avatar_url": "https://avatars.githubusercontent.com/u/28043039?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rsandifo-arm", "html_url": "https://github.com/rsandifo-arm", "followers_url": "https://api.github.com/users/rsandifo-arm/followers", "following_url": "https://api.github.com/users/rsandifo-arm/following{/other_user}", "gists_url": "https://api.github.com/users/rsandifo-arm/gists{/gist_id}", "starred_url": "https://api.github.com/users/rsandifo-arm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rsandifo-arm/subscriptions", "organizations_url": "https://api.github.com/users/rsandifo-arm/orgs", "repos_url": "https://api.github.com/users/rsandifo-arm/repos", "events_url": "https://api.github.com/users/rsandifo-arm/events{/privacy}", "received_events_url": "https://api.github.com/users/rsandifo-arm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "4d706ff86ea86868615558e92407674a4f4b4af9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4d706ff86ea86868615558e92407674a4f4b4af9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4d706ff86ea86868615558e92407674a4f4b4af9"}], "stats": {"total": 66, "additions": 61, "deletions": 5}, "files": [{"sha": "3eb52020e68295c91ab2effa8c1966c456e61405", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ec8ac265ff21fb379ac072848561a91e4990c47f/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ec8ac265ff21fb379ac072848561a91e4990c47f/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=ec8ac265ff21fb379ac072848561a91e4990c47f", "patch": "@@ -1,3 +1,8 @@\n+2019-07-29  Richard Sandiford  <richard.sandiford@arm.com>\n+\n+\t* tree-cfg.c (execute_fixup_cfg): Don't delete stores to write-only\n+\tvariables for -Og.\n+\n 2019-07-29  Richard Sandiford  <richard.sandiford@arm.com>\n \n \t* doc/sourcebuild.texi (check-function-bodies): Document."}, {"sha": "1dd2819e9e842925c361feca09fad892a2fe5f1b", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ec8ac265ff21fb379ac072848561a91e4990c47f/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ec8ac265ff21fb379ac072848561a91e4990c47f/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=ec8ac265ff21fb379ac072848561a91e4990c47f", "patch": "@@ -1,3 +1,10 @@\n+2019-07-29  Richard Sandiford  <richard.sandiford@arm.com>\n+\n+\t* c-c++-common/guality/Og-static-wo-1.c: New test.\n+\t* g++.dg/guality/guality.exp: Separate the c-c++-common tests into\n+\t\"Og\" and \"general\" tests.  Run the latter at -O0 and -Og only.\n+\t* gcc.dg/guality/guality.exp: Likewise.\n+\n 2019-07-29  Richard Sandiford  <richard.sandiford@arm.com>\n \n \t* lib/scanasm.exp (parse_function_bodies, check_function_body)"}, {"sha": "a4c7f30671defa2ea30c9b5e38e91db55b5a30eb", "filename": "gcc/testsuite/c-c++-common/guality/Og-static-wo-1.c", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ec8ac265ff21fb379ac072848561a91e4990c47f/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fguality%2FOg-static-wo-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ec8ac265ff21fb379ac072848561a91e4990c47f/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fguality%2FOg-static-wo-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fguality%2FOg-static-wo-1.c?ref=ec8ac265ff21fb379ac072848561a91e4990c47f", "patch": "@@ -0,0 +1,15 @@\n+/* { dg-do run } */\n+/* { dg-options \"-g\" } */\n+\n+#include \"../../gcc.dg/nop.h\"\n+\n+static int x = 0;\n+\n+int\n+main (void)\n+{\n+  asm volatile (NOP);\t\t/* { dg-final { gdb-test . \"x\" \"0\" } } */\n+  x = 1;\n+  asm volatile (NOP);\t\t/* { dg-final { gdb-test . \"x\" \"1\" } } */\n+  return 0;\n+}"}, {"sha": "33571f1f28fec92a421fd93550fbebecf18f6774", "filename": "gcc/testsuite/g++.dg/guality/guality.exp", "status": "modified", "additions": 16, "deletions": 2, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ec8ac265ff21fb379ac072848561a91e4990c47f/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fguality%2Fguality.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ec8ac265ff21fb379ac072848561a91e4990c47f/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fguality%2Fguality.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fguality%2Fguality.exp?ref=ec8ac265ff21fb379ac072848561a91e4990c47f", "patch": "@@ -65,8 +65,22 @@ if {[check_guality \"\n     return 0;\n   }\n \"]} {\n-  gcc-dg-runtest [lsort [glob $srcdir/$subdir/*.C]] \"\" \"\"\n-  gcc-dg-runtest [lsort [glob $srcdir/c-c++-common/guality/*.c]] \"\" \"\"\n+    set general [list]\n+    set Og [list]\n+    foreach file [lsort [glob $srcdir/c-c++-common/guality/*.c]] {\n+\tswitch -glob -- [file tail $file] {\n+\t    Og-* { lappend Og $file }\n+\t    * { lappend general $file }\n+\t}\n+    }\n+\n+    gcc-dg-runtest [lsort [glob $srcdir/$subdir/*.C]] \"\" \"\"\n+    gcc-dg-runtest $general \"\" \"\"\n+    set-torture-options \\\n+\t[list \"-O0\" \"-Og\"] \\\n+\t[list {}] \\\n+\t[list \"-Og -flto\"]\n+    gcc-dg-runtest $Og \"\" \"\"\n }\n \n if [info exists guality_gdb_name] {"}, {"sha": "89cd896d05c3457fa8cca7f9be490bf96a8f1a07", "filename": "gcc/testsuite/gcc.dg/guality/guality.exp", "status": "modified", "additions": 16, "deletions": 2, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ec8ac265ff21fb379ac072848561a91e4990c47f/gcc%2Ftestsuite%2Fgcc.dg%2Fguality%2Fguality.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ec8ac265ff21fb379ac072848561a91e4990c47f/gcc%2Ftestsuite%2Fgcc.dg%2Fguality%2Fguality.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fguality%2Fguality.exp?ref=ec8ac265ff21fb379ac072848561a91e4990c47f", "patch": "@@ -80,8 +80,22 @@ if {[check_guality \"\n     return 0;\n   }\n \"]} {\n-  gcc-dg-runtest [lsort [glob $srcdir/$subdir/*.c]] \"\" \"\"\n-  gcc-dg-runtest [lsort [glob $srcdir/c-c++-common/guality/*.c]] \"\" \"-Wc++-compat\"\n+    set general [list]\n+    set Og [list]\n+    foreach file [lsort [glob $srcdir/c-c++-common/guality/*.c]] {\n+\tswitch -glob -- [file tail $file] {\n+\t    Og-* { lappend Og $file }\n+\t    * { lappend general $file }\n+\t}\n+    }\n+\n+    gcc-dg-runtest [lsort [glob $srcdir/$subdir/*.c]] \"\" \"\"\n+    gcc-dg-runtest $general \"\" \"-Wc++-compat\"\n+    set-torture-options \\\n+\t[list \"-O0\" \"-Og\"] \\\n+\t[list {}] \\\n+\t[list \"-Og -flto\"]\n+    gcc-dg-runtest $Og \"\" \"-Wc++-compat\"\n }\n \n if [info exists guality_gdb_name] {"}, {"sha": "2648663204b8b4cbeb339c22816b07b17b7acf82", "filename": "gcc/tree-cfg.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ec8ac265ff21fb379ac072848561a91e4990c47f/gcc%2Ftree-cfg.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ec8ac265ff21fb379ac072848561a91e4990c47f/gcc%2Ftree-cfg.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-cfg.c?ref=ec8ac265ff21fb379ac072848561a91e4990c47f", "patch": "@@ -9579,7 +9579,8 @@ execute_fixup_cfg (void)\n \t     Keep access when store has side effect, i.e. in case when source\n \t     is volatile.  */\n \t  if (gimple_store_p (stmt)\n-\t      && !gimple_has_side_effects (stmt))\n+\t      && !gimple_has_side_effects (stmt)\n+\t      && !optimize_debug)\n \t    {\n \t      tree lhs = get_base_address (gimple_get_lhs (stmt));\n "}]}