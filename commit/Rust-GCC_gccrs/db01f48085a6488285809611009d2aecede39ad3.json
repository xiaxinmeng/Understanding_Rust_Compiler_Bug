{"sha": "db01f48085a6488285809611009d2aecede39ad3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGIwMWY0ODA4NWE2NDg4Mjg1ODA5NjExMDA5ZDJhZWNlZGUzOWFkMw==", "commit": {"author": {"name": "Jan Hubicka", "email": "jh@suse.cz", "date": "2002-08-11T12:44:21Z"}, "committer": {"name": "Jan Hubicka", "email": "hubicka@gcc.gnu.org", "date": "2002-08-11T12:44:21Z"}, "message": "* i386.c (classify_argument): Fix computing of field's offsets.\n\nFrom-SVN: r56204", "tree": {"sha": "204c72733d9f9f3e3c82f12d5e9b62539eb865e7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/204c72733d9f9f3e3c82f12d5e9b62539eb865e7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/db01f48085a6488285809611009d2aecede39ad3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/db01f48085a6488285809611009d2aecede39ad3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/db01f48085a6488285809611009d2aecede39ad3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/db01f48085a6488285809611009d2aecede39ad3/comments", "author": null, "committer": null, "parents": [{"sha": "caad61a13c6013ae6d45fd7b04ebb7a0e97cd8b4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/caad61a13c6013ae6d45fd7b04ebb7a0e97cd8b4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/caad61a13c6013ae6d45fd7b04ebb7a0e97cd8b4"}], "stats": {"total": 15, "additions": 12, "deletions": 3}, "files": [{"sha": "ff97998112ad4c0a743c109b26ea8befef1a7512", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/db01f48085a6488285809611009d2aecede39ad3/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/db01f48085a6488285809611009d2aecede39ad3/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=db01f48085a6488285809611009d2aecede39ad3", "patch": "@@ -1,3 +1,7 @@\n+Sun Aug 11 14:43:17 CEST 2002  Jan Hubicka  <jh@suse.cz>\n+\n+\t* i386.c (classify_argument): Fix computing of field's offsets.\n+\n 2002-08-11  Andreas Jaeger  <aj@suse.de>\n \n \tPR target/7531:"}, {"sha": "1010bb81948185e6aaa9d0cb4731be162ccf74da", "filename": "gcc/config/i386/i386.c", "status": "modified", "additions": 8, "deletions": 3, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/db01f48085a6488285809611009d2aecede39ad3/gcc%2Fconfig%2Fi386%2Fi386.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/db01f48085a6488285809611009d2aecede39ad3/gcc%2Fconfig%2Fi386%2Fi386.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.c?ref=db01f48085a6488285809611009d2aecede39ad3", "patch": "@@ -1146,6 +1146,9 @@ override_options ()\n \t       ix86_tls_dialect_string);\n     }\n \n+  if (profile_flag)\n+    target_flags &= ~MASK_OMIT_LEAF_FRAME_POINTER;\n+\n   /* Keep nonleaf frame pointers.  */\n   if (TARGET_OMIT_LEAF_FRAME_POINTER)\n     flag_omit_frame_pointer = 1;\n@@ -1257,6 +1260,8 @@ optimization_options (level, size)\n       flag_pcc_struct_return = 0;\n       flag_asynchronous_unwind_tables = 1;\n     }\n+  if (profile_flag)\n+    flag_omit_frame_pointer = 0;\n }\n \f\n /* Table of valid machine attributes.  */\n@@ -1634,7 +1639,7 @@ classify_argument (mode, type, classes, bit_offset)\n \t\t     return 0;\n \t\t   for (i = 0; i < num; i++)\n \t\t     {\n-\t\t       int pos = (offset + bit_offset) / 8 / 8;\n+\t\t       int pos = (offset + (bit_offset % 64)) / 8 / 8;\n \t\t       classes[i + pos] =\n \t\t\t merge_classes (subclasses[i], classes[i + pos]);\n \t\t     }\n@@ -1671,7 +1676,7 @@ classify_argument (mode, type, classes, bit_offset)\n \t\t      for (i = 0; i < num; i++)\n \t\t\t{\n \t\t\t  int pos =\n-\t\t\t    (int_bit_position (field) + bit_offset) / 8 / 8;\n+\t\t\t    (int_bit_position (field) + (bit_offset % 64)) / 8 / 8;\n \t\t\t  classes[i + pos] =\n \t\t\t    merge_classes (subclasses[i], classes[i + pos]);\n \t\t\t}\n@@ -1717,7 +1722,7 @@ classify_argument (mode, type, classes, bit_offset)\n \n \t\t   num = classify_argument (TYPE_MODE (type),\n \t\t\t\t\t    type, subclasses,\n-\t\t\t\t\t    (offset + bit_offset) % 256);\n+\t\t\t\t\t    (offset + (bit_offset % 64)) % 256);\n \t\t   if (!num)\n \t\t     return 0;\n \t\t   for (i = 0; i < num; i++)"}]}