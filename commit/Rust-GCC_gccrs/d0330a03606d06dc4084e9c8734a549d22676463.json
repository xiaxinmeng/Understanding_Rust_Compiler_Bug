{"sha": "d0330a03606d06dc4084e9c8734a549d22676463", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDAzMzBhMDM2MDZkMDZkYzQwODRlOWM4NzM0YTU0OWQyMjY3NjQ2Mw==", "commit": {"author": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2020-04-28T22:31:04Z"}, "committer": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2020-04-28T22:40:18Z"}, "message": "libstdc++: Fixes for feature test macros (PR 91480)\n\nRemove the non-standard __cpp_lib_allocator_is_always_equal macro and\nadd the missing macros for P1032R1.\n\n\tPR libstdc++/91480\n\t* include/bits/allocator.h (__cpp_lib_allocator_is_always_equal):\n\tRemove non-standard macro.\n\t* include/bits/stl_iterator.h (__cpp_lib_constexpr_iterator): Define\n\tto indicate P1032R1 support.\n\t* include/bits/stl_pair.h (__cpp_lib_constexpr_utility): Likewise.\n\t* include/std/string_view (__cpp_lib_constexpr_string_view): Likewise.\n\t* include/std/tuple (__cpp_lib_constexpr_tuple): Likewise.\n\t* include/std/version (__cpp_lib_allocator_is_always_equal): Remove.\n\t(__cpp_lib_constexpr_iterator, __cpp_lib_constexpr_string_view)\n\t(__cpp_lib_constexpr_tuple, __cpp_lib_constexpr_utility): Define.\n\t* testsuite/20_util/function_objects/constexpr_searcher.cc: Check\n\tfeature test macro.\n\t* testsuite/20_util/tuple/cons/constexpr_allocator_arg_t.cc: Likewise.\n\t* testsuite/21_strings/basic_string_view/operations/copy/char/\n\tconstexpr.cc: Likewise.\n\t* testsuite/24_iterators/insert_iterator/constexpr.cc: Likewise.", "tree": {"sha": "427f857bee627a4c7d6dcf3cef354afbf1e281b5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/427f857bee627a4c7d6dcf3cef354afbf1e281b5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d0330a03606d06dc4084e9c8734a549d22676463", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d0330a03606d06dc4084e9c8734a549d22676463", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d0330a03606d06dc4084e9c8734a549d22676463", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d0330a03606d06dc4084e9c8734a549d22676463/comments", "author": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "162c40a4c127cc55d701bb8760e17708d0ca2fe0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/162c40a4c127cc55d701bb8760e17708d0ca2fe0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/162c40a4c127cc55d701bb8760e17708d0ca2fe0"}], "stats": {"total": 64, "additions": 57, "deletions": 7}, "files": [{"sha": "f8cf71e057f19043958063a090b114fd4d971779", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d0330a03606d06dc4084e9c8734a549d22676463/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d0330a03606d06dc4084e9c8734a549d22676463/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=d0330a03606d06dc4084e9c8734a549d22676463", "patch": "@@ -1,5 +1,23 @@\n 2020-04-28  Jonathan Wakely  <jwakely@redhat.com>\n \n+\tPR libstdc++/91480\n+\t* include/bits/allocator.h (__cpp_lib_allocator_is_always_equal):\n+\tRemove non-standard macro.\n+\t* include/bits/stl_iterator.h (__cpp_lib_constexpr_iterator): Define\n+\tto indicate P1032R1 support.\n+\t* include/bits/stl_pair.h (__cpp_lib_constexpr_utility): Likewise.\n+\t* include/std/string_view (__cpp_lib_constexpr_string_view): Likewise.\n+\t* include/std/tuple (__cpp_lib_constexpr_tuple): Likewise.\n+\t* include/std/version (__cpp_lib_allocator_is_always_equal): Remove.\n+\t(__cpp_lib_constexpr_iterator, __cpp_lib_constexpr_string_view)\n+\t(__cpp_lib_constexpr_tuple, __cpp_lib_constexpr_utility): Define.\n+\t* testsuite/20_util/function_objects/constexpr_searcher.cc: Check\n+\tfeature test macro.\n+\t* testsuite/20_util/tuple/cons/constexpr_allocator_arg_t.cc: Likewise.\n+\t* testsuite/21_strings/basic_string_view/operations/copy/char/\n+\tconstexpr.cc: Likewise.\n+\t* testsuite/24_iterators/insert_iterator/constexpr.cc: Likewise.\n+\n \tPR libstdc++/94831\n \t* include/bits/alloc_traits.h (_S_construct): Restore placement\n \tnew-expression for C++11/14/17 and call std::construct_at directly"}, {"sha": "dcca769938c40ee83dfae8dc92372329e34c55b6", "filename": "libstdc++-v3/include/bits/allocator.h", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d0330a03606d06dc4084e9c8734a549d22676463/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fallocator.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d0330a03606d06dc4084e9c8734a549d22676463/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fallocator.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fallocator.h?ref=d0330a03606d06dc4084e9c8734a549d22676463", "patch": "@@ -50,9 +50,6 @@\n #endif\n \n #define __cpp_lib_incomplete_container_elements 201505\n-#if __cplusplus >= 201103L\n-# define __cpp_lib_allocator_is_always_equal 201411\n-#endif\n \n namespace std _GLIBCXX_VISIBILITY(default)\n {"}, {"sha": "fdb1121f8235e764dd76e88e9d90cca6b6551b43", "filename": "libstdc++-v3/include/bits/stl_iterator.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d0330a03606d06dc4084e9c8734a549d22676463/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_iterator.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d0330a03606d06dc4084e9c8734a549d22676463/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_iterator.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_iterator.h?ref=d0330a03606d06dc4084e9c8734a549d22676463", "patch": "@@ -71,6 +71,7 @@\n \n #if __cplusplus > 201703L\n # define __cpp_lib_array_constexpr 201811L\n+# define __cpp_lib_constexpr_iterator 201811L\n #elif __cplusplus == 201703L\n # define __cpp_lib_array_constexpr 201803L\n #endif"}, {"sha": "491c599076e75ebe163cead9bf1a0aad8596a18e", "filename": "libstdc++-v3/include/bits/stl_pair.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d0330a03606d06dc4084e9c8734a549d22676463/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_pair.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d0330a03606d06dc4084e9c8734a549d22676463/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_pair.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_pair.h?ref=d0330a03606d06dc4084e9c8734a549d22676463", "patch": "@@ -63,6 +63,7 @@\n #endif\n #if __cplusplus > 201703L\n # include <compare>\n+# define __cpp_lib_constexpr_utility 201811L\n #endif\n \n namespace std _GLIBCXX_VISIBILITY(default)"}, {"sha": "7c7c1b3b5dd7e9a6d4cb26e978619511f413bead", "filename": "libstdc++-v3/include/std/string_view", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d0330a03606d06dc4084e9c8734a549d22676463/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fstring_view", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d0330a03606d06dc4084e9c8734a549d22676463/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fstring_view", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fstring_view?ref=d0330a03606d06dc4084e9c8734a549d22676463", "patch": "@@ -48,7 +48,10 @@ namespace std _GLIBCXX_VISIBILITY(default)\n {\n _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \n-#define __cpp_lib_string_view 201803\n+# define __cpp_lib_string_view 201803L\n+#if __cplusplus > 201703L\n+# define __cpp_lib_constexpr_string_view 201811L\n+#endif\n \n   // Helper for basic_string and basic_string_view members.\n   constexpr size_t"}, {"sha": "db4872d3a527dcd4836d471b57fb8f74f82216c0", "filename": "libstdc++-v3/include/std/tuple", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d0330a03606d06dc4084e9c8734a549d22676463/libstdc%2B%2B-v3%2Finclude%2Fstd%2Ftuple", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d0330a03606d06dc4084e9c8734a549d22676463/libstdc%2B%2B-v3%2Finclude%2Fstd%2Ftuple", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Ftuple?ref=d0330a03606d06dc4084e9c8734a549d22676463", "patch": "@@ -41,6 +41,7 @@\n #include <bits/invoke.h>\n #if __cplusplus > 201703L\n # include <compare>\n+# define __cpp_lib_constexpr_tuple 201811L\n #endif\n \n namespace std _GLIBCXX_VISIBILITY(default)"}, {"sha": "c3a5bd26e636b1fb12aacc3a7334ba6ac3d245cc", "filename": "libstdc++-v3/include/std/version", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d0330a03606d06dc4084e9c8734a549d22676463/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fversion", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d0330a03606d06dc4084e9c8734a549d22676463/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fversion", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fversion?ref=d0330a03606d06dc4084e9c8734a549d22676463", "patch": "@@ -50,7 +50,6 @@\n #define __cpp_lib_result_of_sfinae 201210\n \n #if _GLIBCXX_HOSTED\n-# define __cpp_lib_allocator_is_always_equal 201411\n # define __cpp_lib_allocator_traits_is_always_equal 201411\n # define __cpp_lib_shared_ptr_arrays 201611L\n #endif\n@@ -157,7 +156,7 @@\n # define __cpp_lib_shared_mutex 201505\n #endif\n #define __cpp_lib_shared_ptr_weak_type 201606\n-#define __cpp_lib_string_view 201803\n+#define __cpp_lib_string_view 201803L\n // #define __cpp_lib_to_chars 201611L\n #define __cpp_lib_unordered_map_try_emplace 201411\n #define __cpp_lib_variant 201606L\n@@ -201,8 +200,12 @@\n #define __cpp_lib_constexpr_complex 201711L\n #define __cpp_lib_constexpr_dynamic_alloc 201907L\n #define __cpp_lib_constexpr_functional 201907L\n+# define __cpp_lib_constexpr_iterator 201811L\n #define __cpp_lib_constexpr_memory 201811L\n #define __cpp_lib_constexpr_numeric 201911L\n+#define __cpp_lib_constexpr_string_view 201811L\n+#define __cpp_lib_constexpr_tuple 201811L\n+#define __cpp_lib_constexpr_utility 201811L\n #define __cpp_lib_erase_if 202002L\n #define __cpp_lib_interpolate 201902L\n #ifdef _GLIBCXX_HAS_GTHREADS"}, {"sha": "f9ecbb365a44968773f10fe1e4e12708e4c71c5b", "filename": "libstdc++-v3/testsuite/20_util/function_objects/constexpr_searcher.cc", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d0330a03606d06dc4084e9c8734a549d22676463/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Ffunction_objects%2Fconstexpr_searcher.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d0330a03606d06dc4084e9c8734a549d22676463/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Ffunction_objects%2Fconstexpr_searcher.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Ffunction_objects%2Fconstexpr_searcher.cc?ref=d0330a03606d06dc4084e9c8734a549d22676463", "patch": "@@ -19,6 +19,13 @@\n // { dg-do compile { target c++2a } }\n \n #include <functional>\n+\n+#ifndef __cpp_lib_constexpr_functional\n+# error \"Feature test macro for constexpr searcher is missing in <functional>\"\n+#elif __cpp_lib_constexpr_functional < 201811L\n+# error \"Feature test macro for constexpr searcher has wrong value in <functional>\"\n+#endif\n+\n #include <string_view>\n \n const std::string_view"}, {"sha": "8821932ca97dd0978199d17c7185adb9030c4486", "filename": "libstdc++-v3/testsuite/20_util/tuple/cons/constexpr_allocator_arg_t.cc", "status": "modified", "additions": 8, "deletions": 1, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d0330a03606d06dc4084e9c8734a549d22676463/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Ftuple%2Fcons%2Fconstexpr_allocator_arg_t.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d0330a03606d06dc4084e9c8734a549d22676463/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Ftuple%2Fcons%2Fconstexpr_allocator_arg_t.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Ftuple%2Fcons%2Fconstexpr_allocator_arg_t.cc?ref=d0330a03606d06dc4084e9c8734a549d22676463", "patch": "@@ -18,9 +18,16 @@\n // with this library; see the file COPYING3.  If not see\n // <http://www.gnu.org/licenses/>.\n \n-#include <memory>\n #include <tuple>\n \n+#ifndef __cpp_lib_constexpr_tuple\n+# error \"Feature test macro for constexpr allocator constructors is missing in <tuple>\"\n+#elif __cpp_lib_constexpr_tuple < 201811L\n+# error \"Feature test macro for constexpr allocator constructors has wrong value in <tuple>\"\n+#endif\n+\n+#include <memory>\n+\n const std::allocator<int> alloc{};\n \n constexpr bool"}, {"sha": "64a0766281dad699aec02f508dfb46fecbc96bc6", "filename": "libstdc++-v3/testsuite/21_strings/basic_string_view/operations/copy/char/constexpr.cc", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d0330a03606d06dc4084e9c8734a549d22676463/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string_view%2Foperations%2Fcopy%2Fchar%2Fconstexpr.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d0330a03606d06dc4084e9c8734a549d22676463/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string_view%2Foperations%2Fcopy%2Fchar%2Fconstexpr.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string_view%2Foperations%2Fcopy%2Fchar%2Fconstexpr.cc?ref=d0330a03606d06dc4084e9c8734a549d22676463", "patch": "@@ -20,6 +20,12 @@\n \n #include <string_view>\n \n+#ifndef __cpp_lib_constexpr_string_view\n+# error \"Feature test macro for constexpr copy is missing in <string_view>\"\n+#elif __cpp_lib_constexpr_iterator < 201811L\n+# error \"Feature test macro for constexpr copy has wrong value in <string_view>\"\n+#endif\n+\n constexpr bool\n test01()\n {"}, {"sha": "b061bc968487b5e9159c0565ecb6ac2f2ffdb512", "filename": "libstdc++-v3/testsuite/24_iterators/insert_iterator/constexpr.cc", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d0330a03606d06dc4084e9c8734a549d22676463/libstdc%2B%2B-v3%2Ftestsuite%2F24_iterators%2Finsert_iterator%2Fconstexpr.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d0330a03606d06dc4084e9c8734a549d22676463/libstdc%2B%2B-v3%2Ftestsuite%2F24_iterators%2Finsert_iterator%2Fconstexpr.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F24_iterators%2Finsert_iterator%2Fconstexpr.cc?ref=d0330a03606d06dc4084e9c8734a549d22676463", "patch": "@@ -20,6 +20,12 @@\n \n #include <iterator>\n \n+#ifndef __cpp_lib_constexpr_iterator\n+# error \"Feature test macro for constexpr insert iterators is missing in <iterator>\"\n+#elif __cpp_lib_constexpr_iterator < 201811L\n+# error \"Feature test macro for constexpr insert iterators has wrong value in <iterator>\"\n+#endif\n+\n struct container\n {\n   using value_type = int;"}]}