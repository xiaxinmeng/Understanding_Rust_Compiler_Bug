{"sha": "b25f84d0ff01aa4014428402029c46cda4c4a2a0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjI1Zjg0ZDBmZjAxYWE0MDE0NDI4NDAyMDI5YzQ2Y2RhNGM0YTJhMA==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2018-01-09T08:55:26Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2018-01-09T08:55:26Z"}, "message": "re PR tree-optimization/83572 ([graphite] ICE in verify_dominators, at dominance.c:1184 (error: dominator of 7 should be 15, not 13))\n\n2018-01-09  Richard Biener  <rguenther@suse.de>\n\n\tPR tree-optimization/83572\n\t* graphite.c: Include cfganal.h.\n\t(graphite_transform_loops): Connect infinite loops to exit\n\tand remove fake edges at the end.\n\n\t* gcc.dg/graphite/pr83572.c: New testcase.\n\nFrom-SVN: r256372", "tree": {"sha": "bdd81daf338c54767124a569dcd2789565d712a5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/bdd81daf338c54767124a569dcd2789565d712a5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b25f84d0ff01aa4014428402029c46cda4c4a2a0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b25f84d0ff01aa4014428402029c46cda4c4a2a0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b25f84d0ff01aa4014428402029c46cda4c4a2a0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b25f84d0ff01aa4014428402029c46cda4c4a2a0/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "b1a0199b64e680d0eb206eaeff4893bb441d9feb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b1a0199b64e680d0eb206eaeff4893bb441d9feb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b1a0199b64e680d0eb206eaeff4893bb441d9feb"}], "stats": {"total": 44, "additions": 43, "deletions": 1}, "files": [{"sha": "813dca6472dbfad5836f1898496a6a90fc49f0dd", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b25f84d0ff01aa4014428402029c46cda4c4a2a0/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b25f84d0ff01aa4014428402029c46cda4c4a2a0/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=b25f84d0ff01aa4014428402029c46cda4c4a2a0", "patch": "@@ -1,3 +1,10 @@\n+2018-01-09  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/83572\n+\t* graphite.c: Include cfganal.h.\n+\t(graphite_transform_loops): Connect infinite loops to exit\n+\tand remove fake edges at the end.\n+\n 2018-01-09  Jan Hubicka  <hubicka@ucw.cz>\n \n \t* ipa-inline.c (edge_badness): Revert accidental checkin."}, {"sha": "e5f318d44fd256b1f70b68a663b773c3b66f365d", "filename": "gcc/graphite.c", "status": "modified", "additions": 9, "deletions": 1, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b25f84d0ff01aa4014428402029c46cda4c4a2a0/gcc%2Fgraphite.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b25f84d0ff01aa4014428402029c46cda4c4a2a0/gcc%2Fgraphite.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgraphite.c?ref=b25f84d0ff01aa4014428402029c46cda4c4a2a0", "patch": "@@ -38,6 +38,7 @@ along with GCC; see the file COPYING3.  If not see\n #include \"tree-pass.h\"\n #include \"params.h\"\n #include \"pretty-print.h\"\n+#include \"cfganal.h\"\n \n #ifdef HAVE_isl\n #include \"cfghooks.h\"\n@@ -350,6 +351,10 @@ graphite_transform_loops (void)\n \n   calculate_dominance_info (CDI_DOMINATORS);\n \n+  /* We rely on post-dominators during merging of SESE regions so those\n+     have to be meaningful.  */\n+  connect_infinite_loops_to_exit ();\n+\n   ctx = isl_ctx_alloc ();\n   isl_options_set_on_error (ctx, ISL_ON_ERROR_ABORT);\n   the_isl_ctx = ctx;\n@@ -368,6 +373,10 @@ graphite_transform_loops (void)\n   build_scops (&scops);\n   free_dominance_info (CDI_POST_DOMINATORS);\n \n+  /* Remove the fake exits before transform given they are not reflected\n+     in loop structures we end up verifying.  */\n+  remove_fake_exit_edges ();\n+\n   if (dump_file && (dump_flags & TDF_DETAILS))\n     {\n       print_graphite_statistics (dump_file, scops);\n@@ -428,7 +437,6 @@ graphite_transform_loops (void)\n       release_recorded_exits (cfun);\n       tree_estimate_probability (false);\n     }\n-\n }\n \n #else /* If isl is not available: #ifndef HAVE_isl.  */"}, {"sha": "ffade44558cdc52c48bcc422deb7163389f20dbd", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b25f84d0ff01aa4014428402029c46cda4c4a2a0/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b25f84d0ff01aa4014428402029c46cda4c4a2a0/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=b25f84d0ff01aa4014428402029c46cda4c4a2a0", "patch": "@@ -1,3 +1,8 @@\n+2018-01-09  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/83572\n+\t* gcc.dg/graphite/pr83572.c: New testcase.\n+\n 2018-01-09  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR target/83507"}, {"sha": "1f65dc34fd14dc0a7a1bc4f8c935ddc56da4629e", "filename": "gcc/testsuite/gcc.dg/graphite/pr83572.c", "status": "added", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b25f84d0ff01aa4014428402029c46cda4c4a2a0/gcc%2Ftestsuite%2Fgcc.dg%2Fgraphite%2Fpr83572.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b25f84d0ff01aa4014428402029c46cda4c4a2a0/gcc%2Ftestsuite%2Fgcc.dg%2Fgraphite%2Fpr83572.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fgraphite%2Fpr83572.c?ref=b25f84d0ff01aa4014428402029c46cda4c4a2a0", "patch": "@@ -0,0 +1,22 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O -floop-nest-optimize -fno-tree-loop-im\" } */\n+\n+int u0, l1;\n+\n+void\n+u3 (int s1)\n+{\n+  for (;;)\n+    {\n+      for (u0 = 0; u0 < 2; ++u0)\n+\t{\n+\t}\n+\n+      if (s1 != 0)\n+\tfor (l1 = 0; l1 < 2; ++l1)\n+\t  {\n+\t  }\n+\n+      l1 = 0;\n+    }\n+}"}]}