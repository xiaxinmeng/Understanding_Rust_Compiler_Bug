{"sha": "124cb0bf5244d356b8176fe7e12489b8c37b343e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTI0Y2IwYmY1MjQ0ZDM1NmI4MTc2ZmU3ZTEyNDg5YjhjMzdiMzQzZQ==", "commit": {"author": {"name": "Nick Clifton", "email": "nickc@cygnus.com", "date": "1998-07-13T17:22:27Z"}, "committer": {"name": "Nick Clifton", "email": "nickc@gcc.gnu.org", "date": "1998-07-13T17:22:27Z"}, "message": "--help support added\n\nFrom-SVN: r21110", "tree": {"sha": "2d4e34de455922a8e8f6b25bdfcac75521bc5003", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2d4e34de455922a8e8f6b25bdfcac75521bc5003"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/124cb0bf5244d356b8176fe7e12489b8c37b343e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/124cb0bf5244d356b8176fe7e12489b8c37b343e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/124cb0bf5244d356b8176fe7e12489b8c37b343e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/124cb0bf5244d356b8176fe7e12489b8c37b343e/comments", "author": null, "committer": null, "parents": [{"sha": "b8468bc70accc102d7e1ba002704054393af5ff9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b8468bc70accc102d7e1ba002704054393af5ff9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b8468bc70accc102d7e1ba002704054393af5ff9"}], "stats": {"total": 201, "additions": 104, "deletions": 97}, "files": [{"sha": "199f090024935668c4678aa0b9a0eac337b77beb", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/124cb0bf5244d356b8176fe7e12489b8c37b343e/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/124cb0bf5244d356b8176fe7e12489b8c37b343e/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=124cb0bf5244d356b8176fe7e12489b8c37b343e", "patch": "@@ -1,3 +1,8 @@\n+Mon Jul 13 17:21:01 1998  Nick Clifton  <nickc@cygnus.com>\n+\n+\t* lang-options.h: Format changed to work with new --help support\n+\tin gcc/toplev.c\n+\t\n 1998-07-12  Martin von L\ufffdwis  <loewis@informatik.hu-berlin.de>\n \n \t* decl2.c (build_expr_from_tree): Change calls of do_identifier."}, {"sha": "5c5033247b5a9169c218da1b6d4777a68d457cf9", "filename": "gcc/cp/lang-options.h", "status": "modified", "additions": 99, "deletions": 97, "changes": 196, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/124cb0bf5244d356b8176fe7e12489b8c37b343e/gcc%2Fcp%2Flang-options.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/124cb0bf5244d356b8176fe7e12489b8c37b343e/gcc%2Fcp%2Flang-options.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Flang-options.h?ref=124cb0bf5244d356b8176fe7e12489b8c37b343e", "patch": "@@ -18,104 +18,106 @@ along with GNU CC; see the file COPYING.  If not, write to\n the Free Software Foundation, 59 Temple Place - Suite 330,\n Boston, MA 02111-1307, USA.  */\n \n+DEFINE_LANG_NAME (\"C++\")\n+     \n /* This is the contribution to the `lang_options' array in gcc.c for\n    g++.  */\n \n-  \"-+e0\",\t\t\t/* gcc.c tacks the `-' on the front.  */\n-  \"-+e1\",\n-  \"-+e2\",\n-  \"-faccess-control\",\n-  \"-fno-access-control\",\n-  \"-fall-virtual\",\n-  \"-fno-all-virtual\",\n-  \"-falt-external-templates\",\n-  \"-fno-alt-external-templates\",\n-  \"-fansi-overloading\",\n-  \"-fno-ansi-overloading\",\n-  \"-fcheck-new\",\n-  \"-fno-check-new\",\n-  \"-fconserve-space\",\n-  \"-fno-conserve-space\",\n-  \"-fdefault-inline\",\n-  \"-fno-default-inline\",\n-  \"-frtti\",\n-  \"-fno-rtti\",\n-  \"-felide-constructors\",\n-  \"-fno-elide-constructors\",\n-  \"-fenum-int-equiv\",\n-  \"-fno-enum-int-equiv\",\n-  \"-fexternal-templates\",\n-  \"-fno-external-templates\",\n-  \"-ffor-scope\",\n-  \"-fno-for-scope\",\n-  \"-fguiding-decls\",\n-  \"-fno-guiding-decls\",\n-  \"-fgnu-keywords\",\n-  \"-fno-gnu-keywords\",\n-  \"-fhandle-exceptions\",\n-  \"-fno-handle-exceptions\",\n-  \"-fhandle-signatures\",\n-  \"-fno-handle-signatures\",\n-  \"-fhonor-std\",\n-  \"-fno-honor-std\",\n-  \"-fhuge-objects\",\n-  \"-fno-huge-objects\",\n-  \"-fimplement-inlines\",\n-  \"-fno-implement-inlines\",\n-  \"-fimplicit-templates\",\n-  \"-fno-implicit-templates\",\n-  \"-flabels-ok\",\n-  \"-fno-labels-ok\",\n-  \"-fmemoize-lookups\",\n-  \"-fno-memoize-lookups\",\n-  \"-fname-mangling-version-\",\n-  \"-fnew-abi\",\n-  \"-fno-new-abi\",\n-  \"-fnonnull-objects\",\n-  \"-fno-nonnull-objects\",\n-  \"-foperator-names\",\n-  \"-fno-operator-names\",\n-  \"-foptional-diags\",\n-  \"-fno-optional-diags\",\n-  \"-frepo\",\n-  \"-fno-repo\",\n-  \"-fsave-memoized\",\n-  \"-fno-save-memoized\",\n-  \"-fsquangle\",\n-  \"-fno-squangle\",\n-  \"-fstats\",\n-  \"-fno-stats\",\n-  \"-fstrict-prototype\",\n-  \"-fno-strict-prototype\",\n-  \"-ftemplate-depth-\",\n-  \"-fthis-is-variable\",\n-  \"-fno-this-is-variable\",\n-  \"-fvtable-thunks\",\n-  \"-fno-vtable-thunks\",\n-  \"-fweak\",\n-  \"-fno-weak\",\n-  \"-fxref\",\n-  \"-fno-xref\",\n+  { \"-+e0\", \"\" },\t\t/* gcc.c tacks the `-' on the front.  */\n+  { \"-+e1\", \"\" },\n+  { \"-+e2\", \"\" },\n+  { \"-faccess-control\", \"\" },\n+  { \"-fno-access-control\", \"Do not obey access control semantics\" },\n+  { \"-fall-virtual\", \"Make all member functions virtual\" },\n+  { \"-fno-all-virtual\", \"\" },\n+  { \"-falt-external-templates\", \"Change when template instances are emitted\" },\n+  { \"-fno-alt-external-templates\", \"\" },\n+  { \"-fansi-overloading\", \"\" },\n+  { \"-fno-ansi-overloading\", \"\" },\n+  { \"-fcheck-new\", \"Check the return value of new\" },\n+  { \"-fno-check-new\", \"\" },\n+  { \"-fconserve-space\", \"Reduce size of object files\" },\n+  { \"-fno-conserve-space\", \"\" },\n+  { \"-fdefault-inline\", \"\" },\n+  { \"-fno-default-inline\", \"Do not inline mmeber functions be default\"},\n+  { \"-frtti\", \"\" },\n+  { \"-fno-rtti\", \"Do not generate run time type descriptor information\" },\n+  { \"-felide-constructors\", \"\" },\n+  { \"-fno-elide-constructors\", \"\" },\n+  { \"-fenum-int-equiv\", \"\" },\n+  { \"-fno-enum-int-equiv\", \"\" },\n+  { \"-fexternal-templates\", \"\" },\n+  { \"-fno-external-templates\", \"\" },\n+  { \"-ffor-scope\", \"\" },\n+  { \"-fno-for-scope\", \"Scope of for-init-statement vars extends outside\" },\n+  { \"-fguiding-decls\", \"Implement guiding declarations\" },\n+  { \"-fno-guiding-decls\", \"\" },\n+  { \"-fgnu-keywords\", \"\" },\n+  { \"-fno-gnu-keywords\", \"Do not recognise GNU defined keywords\" },\n+  { \"-fhandle-exceptions\", \"Enable exception handling\" },\n+  { \"-fno-handle-exceptions\", \"\" },\n+  { \"-fhandle-signatures\", \"Handle signature language constructs\" },\n+  { \"-fno-handle-signatures\", \"\" },\n+  { \"-fhonor-std\", \"Do not ignore the namespace standard\" },\n+  { \"-fno-honor-std\", \"\" },\n+  { \"-fhuge-objects\", \"Enable support for huge objects\" },\n+  { \"-fno-huge-objects\", \"\" },\n+  { \"-fimplement-inlines\", \"\" },\n+  { \"-fno-implement-inlines\", \"Export functions even if they can be inlined\" },\n+  { \"-fimplicit-templates\", \"Emit implicit instatiations if needed\" },\n+  { \"-fno-implicit-templates\", \"\" },\n+  { \"-flabels-ok\", \"Labels can be used as first class objects\" },\n+  { \"-fno-labels-ok\", \"\" },\n+  { \"-fmemoize-lookups\", \"Enable caching of member function resolutions\" },\n+  { \"-fno-memoize-lookups\", \"\" },\n+  { \"-fname-mangling-version-\", \"Set the version of name mangling to use\" },\n+  { \"-fnew-abi\", \"Enable experimental ABI changes\" },\n+  { \"-fno-new-abi\", \"\" },\n+  { \"-fnonnull-objects\", \"\" },\n+  { \"-fno-nonnull-objects\", \"Do not assume that a reference is always valid\" },\n+  { \"-foperator-names\", \"Recognise and/bitand/bitor/compl/not/or/xor\" },\n+  { \"-fno-operator-names\", \"\" },\n+  { \"-foptional-diags\", \"\" },\n+  { \"-fno-optional-diags\", \"Disable optional diagnostics\" },\n+  { \"-frepo\", \"Enable automatic template instantiation\" },\n+  { \"-fno-repo\", \"\" },\n+  { \"-fsave-memoized\", \"Save cache of member function resolutions\" },\n+  { \"-fno-save-memoized\", \"\" },\n+  { \"-fsquangle\", \"Enable squashed name mangling\" },\n+  { \"-fno-squangle\", \"\" },\n+  { \"-fstats\", \"Display statistics accumulated during compilation\" },\n+  { \"-fno-stats\", \"\" },\n+  { \"-fstrict-prototype\", \"\" },\n+  { \"-fno-strict-prototype\", \"Do not assume that empty prototype means no args\" },\n+  { \"-ftemplate-depth-\", \"Specify maximum template instantiation depth\"},\n+  { \"-fthis-is-variable\", \"Make 'this' not be type '* const'\"  },\n+  { \"-fno-this-is-variable\", \"\" },\n+  { \"-fvtable-thunks\", \"Implement vtables using thunks\" },\n+  { \"-fno-vtable-thunks\", \"\" },\n+  { \"-fweak\", \"Emit common-like symbols as weak symbols\" },\n+  { \"-fno-weak\", \"\" },\n+  { \"-fxref\", \"Emit cross referencing information\" },\n+  { \"-fno-xref\", \"\" },\n \n-  \"-Wreturn-type\",\n-  \"-Wno-return-type\",\n-  \"-Woverloaded-virtual\",\n-  \"-Wno-overloaded-virtual\",\n-  \"-Wctor-dtor-privacy\",\n-  \"-Wno-ctor-dtor-privacy\",\n-  \"-Wnon-virtual-dtor\",\n-  \"-Wno-non-virtual-dtor\",\n-  \"-Wextern-inline\",\n-  \"-Wno-extern-inline\",\n-  \"-Wreorder\",\n-  \"-Wno-reorder\",\n-  \"-Wsynth\",\n-  \"-Wno-synth\",\n-  \"-Wpmf-conversions\",\n-  \"-Wno-pmf-conversions\",\n-  \"-Weffc++\",\n-  \"-Wno-effc++\",\n-  \"-Wsign-promo\",\n-  \"-Wno-sign-promo\",\n-  \"-Wold-style-cast\",\n-  \"-Wno-old-style-cast\",\n+  { \"-Wreturn-type\", \"Warn about inconsistent return types\" },\n+  { \"-Wno-return-type\", \"\" },\n+  { \"-Woverloaded-virtual\", \"Warn about overloaded virtual function names\" },\n+  { \"-Wno-overloaded-virtual\", \"\" },\n+  { \"-Wctor-dtor-privacy\", \"Warn when all ctors/dtors are private\" },\n+  { \"-Wno-ctor-dtor-privacy\", \"\" },\n+  { \"-Wnon-virtual-dtor\", \"Warn about non virtual destructors\" },\n+  { \"-Wno-non-virtual-dtor\", \"\" },\n+  { \"-Wextern-inline\", \"Warn when a function is declared extern, then inline\" },\n+  { \"-Wno-extern-inline\", \"\" },\n+  { \"-Wreorder\", \"Warn when the compiler reorders code\" },\n+  { \"-Wno-reorder\", \"\" },\n+  { \"-Wsynth\", \"Warn when synthesis behaviour differs from Cfront\" },\n+  { \"-Wno-synth\", \"\" },\n+  { \"-Wpmf-conversions\", \"Warn when type converting pointers to member functions\" },\n+  { \"-Wno-pmf-conversions\", \"\" },\n+  { \"-Weffc++\", \"Warn about violations of Effective C++ style rules\" },\n+  { \"-Wno-effc++\", \"\" },\n+  { \"-Wsign-promo\", \"Warn when overload promotes from unsigned to signed\" },\n+  { \"-Wno-sign-promo\", \"\" },\n+  { \"-Wold-style-cast\", \"Warn if a C style cast is used in a program\" },\n+  { \"-Wno-old-style-cast\", \"\" },"}]}