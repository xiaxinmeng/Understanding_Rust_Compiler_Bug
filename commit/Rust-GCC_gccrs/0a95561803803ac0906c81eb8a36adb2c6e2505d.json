{"sha": "0a95561803803ac0906c81eb8a36adb2c6e2505d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MGE5NTU2MTgwMzgwM2FjMDkwNmM4MWViOGEzNmFkYjJjNmUyNTA1ZA==", "commit": {"author": {"name": "Alexandre Oliva", "email": "oliva@dcc.unicamp.br", "date": "1998-11-25T12:59:24Z"}, "committer": {"name": "Alexandre Oliva", "email": "oliva@gcc.gnu.org", "date": "1998-11-25T12:59:24Z"}, "message": "test_summary (-p, [...]): add these before the summary\n\n\t* test_summary (-p, prepend_logs): add these before the summary\n\t(Compiler, Platform): print these just before configflags\n\nFrom-SVN: r23864", "tree": {"sha": "33ff435fdf3fae5b6dd989b2f221bec2fa0a41d9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/33ff435fdf3fae5b6dd989b2f221bec2fa0a41d9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0a95561803803ac0906c81eb8a36adb2c6e2505d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0a95561803803ac0906c81eb8a36adb2c6e2505d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0a95561803803ac0906c81eb8a36adb2c6e2505d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0a95561803803ac0906c81eb8a36adb2c6e2505d/comments", "author": null, "committer": null, "parents": [{"sha": "910bc42d0db5bab44a65433f065d817b71cb81c7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/910bc42d0db5bab44a65433f065d817b71cb81c7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/910bc42d0db5bab44a65433f065d817b71cb81c7"}], "stats": {"total": 16, "additions": 13, "deletions": 3}, "files": [{"sha": "6de9948972bf9170a97748a5c648e6283d291215", "filename": "contrib/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0a95561803803ac0906c81eb8a36adb2c6e2505d/contrib%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0a95561803803ac0906c81eb8a36adb2c6e2505d/contrib%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/contrib%2FChangeLog?ref=0a95561803803ac0906c81eb8a36adb2c6e2505d", "patch": "@@ -1,3 +1,8 @@\n+1998-11-25  Alexandre Oliva  <oliva@dcc.unicamp.br>\n+\n+\t* test_summary (-p, prepend_logs): add these before the summary\n+\t(Compiler, Platform): print these just before configflags\n+\n Sat Oct 31 10:53:40 1998  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n \n \t* warn_summary (longLineFilter): New shell function to encapsulate"}, {"sha": "3280b3b40485d6febcb186aff4f8e4639359da6a", "filename": "contrib/test_summary", "status": "modified", "additions": 8, "deletions": 3, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0a95561803803ac0906c81eb8a36adb2c6e2505d/contrib%2Ftest_summary", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0a95561803803ac0906c81eb8a36adb2c6e2505d/contrib%2Ftest_summary", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/contrib%2Ftest_summary?ref=0a95561803803ac0906c81eb8a36adb2c6e2505d", "patch": "@@ -30,6 +30,7 @@\n # It accepts a few command line arguments.  For example:\n # -o: re-reads logs that have been mailed already (.sum.sent)\n # -t: prevents logs from being renamed\n+# -p: prepend specified file (or list of files: -p \"a b\") to the report\n # -i: append specified file (or list of files: -i \"a b\") to the report\n # -m: specify the e-mail address to send notes to.  An appropriate default\n #     should be selected from the log files.\n@@ -54,6 +55,7 @@ while true; do\n     case \"$1\" in \n       -o) filesuffix=.sent; move=false; : ${mailto=nobody}; shift;;\n       -t) move=false; shift;;\n+      -p) prepend_logs=${prepend_logs+\"$prepend_logs \"}\"$2\"; shift 2;;\n       -i) append_logs=${append_logs+\"$append_logs \"}\"$2\"; shift 2;;\n       -m) mailto=$2; forcemail=true; shift 2;;\n       -f) unset mailto; forcemail=true; shift;;\n@@ -83,7 +85,8 @@ if $forcemail || $anychange; then :; else mailto=nobody; fi &&\n $AWK '\n BEGIN {\n   lang=\"\";\n-  print \"cat <<EOF |\";\n+  print \"cat <<\\\\EOF |\";\n+'${prepend_logs+\"  system(\\\"cat $prepend_logs\\\"); \"}'\n }\n $1 ~ /\\/configure$/ { $1 = \"configure flags:\"; configflags = $0 }\n /^Running target / { print \"\"; print; }\n@@ -93,13 +96,13 @@ $1 ~ /\\/configure$/ { $1 = \"configure flags:\"; configflags = $0 }\n   if (lang == \"\") lang = \" \"$2\" \"; else lang = \" \";\n }\n /\\/ss(\\/|c? )/ {\n-  program=\"ss\"; comment=\"\";\n+  program=\"ss\";\n   if (lang == \" \") address=\"nobody\";\n   else if (lang == \" gcc \") address=\"gcc2@cygnus.com\";\n   else address=\"g++@cygnus.com\";\n }\n /\\/egcsh?((-[^ ]*)?\\/|c?[ -])/ {\n-  address=\"egcs@cygnus.com\";\n+  address=\"egcs@cygnus.com\"; # testsuite-results@gcc.ml.org\";\n   if (version == 0) version=\"egcs\";\n }\n /--disable-haifa/ { prefix=\"haifa-disabled \"; }\n@@ -114,6 +117,8 @@ $2 == \"version\" { save = $0; $1 = \"\"; $2 = \"\"; version = $0; gsub(/^ */, \"\", ver\n /^$/ && blanks>0 { print; --blanks; }\n END { if (lang != \"\") {\n   print \"\";\n+  print \"Compiler version: \" prefix version lang;\n+  print \"Platform: \" host;\n   print configflags;\n   '${BOOT_CFLAGS+'print \"BOOT_CFLAGS='\"${BOOT_CFLAGS}\"'\";'}'\n   if (boot_cflags != 0) print boot_cflags;"}]}