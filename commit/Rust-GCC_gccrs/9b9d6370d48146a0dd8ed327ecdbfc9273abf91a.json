{"sha": "9b9d6370d48146a0dd8ed327ecdbfc9273abf91a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OWI5ZDYzNzBkNDgxNDZhMGRkOGVkMzI3ZWNkYmZjOTI3M2FiZjkxYQ==", "commit": {"author": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2017-04-28T12:50:47Z"}, "committer": {"name": "Martin Liska", "email": "marxin@gcc.gnu.org", "date": "2017-04-28T12:50:47Z"}, "message": "Introduce new option -w which shows verbose informations.\n\n2017-04-28  Martin Liska  <mliska@suse.cz>\n\n\t* gcov.c (process_args): Handle new argument 'w'.\n\t(read_graph_file): Assign ID to BBs.\n\t(output_branch_count): Display BB # if verbose flag is set.\n\t(output_lines): Likewise for arcs.\n\t(print_usage): Add '--verbose' option help.\n\t* doc/gcov.texi: Document --verbose (-w) option.\n\nFrom-SVN: r247373", "tree": {"sha": "edd820da9b9eda43ecbf35660da62b66ab4720f2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/edd820da9b9eda43ecbf35660da62b66ab4720f2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9b9d6370d48146a0dd8ed327ecdbfc9273abf91a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9b9d6370d48146a0dd8ed327ecdbfc9273abf91a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9b9d6370d48146a0dd8ed327ecdbfc9273abf91a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9b9d6370d48146a0dd8ed327ecdbfc9273abf91a/comments", "author": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "0790260e7ce01b4fb1f2f51da17d6769b289a003", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0790260e7ce01b4fb1f2f51da17d6769b289a003", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0790260e7ce01b4fb1f2f51da17d6769b289a003"}], "stats": {"total": 51, "additions": 43, "deletions": 8}, "files": [{"sha": "86e70e7814bc3e81e2d125bea40c58809164e704", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9b9d6370d48146a0dd8ed327ecdbfc9273abf91a/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9b9d6370d48146a0dd8ed327ecdbfc9273abf91a/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=9b9d6370d48146a0dd8ed327ecdbfc9273abf91a", "patch": "@@ -1,3 +1,12 @@\n+2017-04-28  Martin Liska  <mliska@suse.cz>\n+\n+\t* gcov.c (process_args): Handle new argument 'w'.\n+\t(read_graph_file): Assign ID to BBs.\n+\t(output_branch_count): Display BB # if verbose flag is set.\n+\t(output_lines): Likewise for arcs.\n+\t(print_usage): Add '--verbose' option help.\n+\t* doc/gcov.texi: Document --verbose (-w) option.\n+\n 2017-04-28  Martin Liska  <mliska@suse.cz>\n \n \t* gcov.c (struct block_location_info): New struct."}, {"sha": "2b4101018a23ea6c2510a25b4cd3aa3012bac229", "filename": "gcc/doc/gcov.texi", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9b9d6370d48146a0dd8ed327ecdbfc9273abf91a/gcc%2Fdoc%2Fgcov.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9b9d6370d48146a0dd8ed327ecdbfc9273abf91a/gcc%2Fdoc%2Fgcov.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Fgcov.texi?ref=9b9d6370d48146a0dd8ed327ecdbfc9273abf91a", "patch": "@@ -289,6 +289,10 @@ where the @var{source-file} component is the final filename part and\n the @var{md5} component is calculated from the full mangled name that\n would have been used otherwise.\n \n+@item -w\n+@itemx --verbose\n+Print verbose informations related to basic blocks and arcs.\n+\n @end table\n \n @command{gcov} should be run with the current directory the same as that"}, {"sha": "c8a26b988e3144260a5c5444f2a2baaf5495b411", "filename": "gcc/gcov.c", "status": "modified", "additions": 30, "deletions": 8, "changes": 38, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9b9d6370d48146a0dd8ed327ecdbfc9273abf91a/gcc%2Fgcov.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9b9d6370d48146a0dd8ed327ecdbfc9273abf91a/gcc%2Fgcov.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgcov.c?ref=9b9d6370d48146a0dd8ed327ecdbfc9273abf91a", "patch": "@@ -140,6 +140,8 @@ typedef struct block_info\n   gcov_type num_succ;\n   gcov_type num_pred;\n \n+  unsigned id;\n+\n   /* Block execution count.  */\n   gcov_type count;\n   unsigned count_valid : 1;\n@@ -369,6 +371,10 @@ static int flag_long_names = 0;\n \n static int flag_hash_filenames = 0;\n \n+/* Print verbose informations.  */\n+\n+static int flag_verbose = 0;\n+\n /* Output count information for every basic block, not merely those\n    that contain line number information.  */\n \n@@ -700,6 +706,7 @@ print_usage (int error_p)\n   fnotice (file, \"  -s, --source-prefix DIR         Source prefix to elide\\n\");\n   fnotice (file, \"  -u, --unconditional-branches    Show unconditional branch counts too\\n\");\n   fnotice (file, \"  -v, --version                   Print version number, then exit\\n\");\n+  fnotice (file, \"  -w, --verbose                   Print verbose informations\\n\");\n   fnotice (file, \"  -x, --hash-filenames            Hash long pathnames\\n\");\n   fnotice (file, \"\\nFor bug reporting instructions, please see:\\n%s.\\n\",\n \t   bug_report_url);\n@@ -725,6 +732,7 @@ static const struct option options[] =\n {\n   { \"help\",                 no_argument,       NULL, 'h' },\n   { \"version\",              no_argument,       NULL, 'v' },\n+  { \"verbose\",              no_argument,       NULL, 'w' },\n   { \"all-blocks\",           no_argument,       NULL, 'a' },\n   { \"branch-probabilities\", no_argument,       NULL, 'b' },\n   { \"branch-counts\",        no_argument,       NULL, 'c' },\n@@ -751,7 +759,7 @@ process_args (int argc, char **argv)\n {\n   int opt;\n \n-  const char *opts = \"abcdfhilmno:prs:uvx\";\n+  const char *opts = \"abcdfhilmno:prs:uvwx\";\n   while ((opt = getopt_long (argc, argv, opts, options, NULL)) != -1)\n     {\n       switch (opt)\n@@ -806,6 +814,9 @@ process_args (int argc, char **argv)\n \tcase 'x':\n \t  flag_hash_filenames = 1;\n \t  break;\n+\tcase 'w':\n+\t  flag_verbose = 1;\n+\t  break;\n \tcase 'v':\n \t  print_version ();\n \t  /* print_version will exit.  */\n@@ -1375,6 +1386,7 @@ read_graph_file (void)\n       else if (fn && tag == GCOV_TAG_ARCS)\n \t{\n \t  unsigned src = gcov_read_unsigned ();\n+\t  fn->blocks[src].id = src;\n \t  unsigned num_dests = GCOV_TAG_ARCS_NUM (length);\n \t  block_t *src_blk = &fn->blocks[src];\n \t  unsigned mark_catches = 0;\n@@ -2399,12 +2411,17 @@ output_branch_count (FILE *gcov_file, int ix, const arc_t *arc)\n   else if (!arc->is_unconditional)\n     {\n       if (arc->src->count)\n-\tfnotice (gcov_file, \"branch %2d taken %s%s\\n\", ix,\n+\tfnotice (gcov_file, \"branch %2d taken %s%s\", ix,\n \t\t format_gcov (arc->count, arc->src->count, -flag_counts),\n \t\t arc->fall_through ? \" (fallthrough)\"\n \t\t : arc->is_throw ? \" (throw)\" : \"\");\n       else\n-\tfnotice (gcov_file, \"branch %2d never executed\\n\", ix);\n+\tfnotice (gcov_file, \"branch %2d never executed\", ix);\n+\n+      if (flag_verbose)\n+\tfnotice (gcov_file, \" (BB %d)\", arc->dst->id);\n+\n+      fnotice (gcov_file, \"\\n\");\n     }\n   else if (flag_unconditional && !arc->dst->is_call_return)\n     {\n@@ -2541,11 +2558,16 @@ output_lines (FILE *gcov_file, const source_t *src)\n \t       block = block->chain)\n \t    {\n \t      if (!block->is_call_return)\n-\t\tfprintf (gcov_file, \"%9s:%5u-block %2d\\n\",\n-\t\t\t !line->exists ? \"-\" : block->count\n-\t\t\t ? format_gcov (block->count, 0, -1)\n-\t\t\t : block->exceptional ? \"%%%%%\" : \"$$$$$\",\n-\t\t\t line_num, ix++);\n+\t\t{\n+\t\t  fprintf (gcov_file, \"%9s:%5u-block %2d\",\n+\t\t\t   !line->exists ? \"-\" : block->count\n+\t\t\t   ? format_gcov (block->count, 0, -1)\n+\t\t\t   : block->exceptional ? \"%%%%%\" : \"$$$$$\",\n+\t\t\t   line_num, ix++);\n+\t\t  if (flag_verbose)\n+\t\t    fprintf (gcov_file, \" (BB %u)\", block->id);\n+\t\t  fprintf (gcov_file, \"\\n\");\n+\t\t}\n \t      if (flag_branches)\n \t\tfor (arc = block->succ; arc; arc = arc->succ_next)\n \t\t  jx += output_branch_count (gcov_file, jx, arc);"}]}