{"sha": "68328cdaefaee1b9e218e08ff2955806ddd20403", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjgzMjhjZGFlZmFlZTFiOWUyMThlMDhmZjI5NTU4MDZkZGQyMDQwMw==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@adacore.com", "date": "2005-11-16T17:15:23Z"}, "committer": {"name": "Eric Botcazou", "email": "ebotcazou@gcc.gnu.org", "date": "2005-11-16T17:15:23Z"}, "message": "fold-const.c (const_binop): Don't constant fold the operation if the result has overflowed and...\n\n\t* fold-const.c (const_binop): Don't constant fold the operation\n\tif the result has overflowed and flag_trapping_math.\n\t* simplify-rtx.c (simplify_const_binary_operation): Likewise.\n\nFrom-SVN: r107092", "tree": {"sha": "6894347795260dbf98ccdad4e02632f18f90f9e7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6894347795260dbf98ccdad4e02632f18f90f9e7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/68328cdaefaee1b9e218e08ff2955806ddd20403", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/68328cdaefaee1b9e218e08ff2955806ddd20403", "html_url": "https://github.com/Rust-GCC/gccrs/commit/68328cdaefaee1b9e218e08ff2955806ddd20403", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/68328cdaefaee1b9e218e08ff2955806ddd20403/comments", "author": null, "committer": null, "parents": [{"sha": "74d9c39f6aeaec9ed8a99167890283f4519219dd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/74d9c39f6aeaec9ed8a99167890283f4519219dd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/74d9c39f6aeaec9ed8a99167890283f4519219dd"}], "stats": {"total": 49, "additions": 49, "deletions": 0}, "files": [{"sha": "8fb3e38e8be770ed509dd2e1d25a9b70ce3b7867", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/68328cdaefaee1b9e218e08ff2955806ddd20403/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/68328cdaefaee1b9e218e08ff2955806ddd20403/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=68328cdaefaee1b9e218e08ff2955806ddd20403", "patch": "@@ -1,3 +1,9 @@\n+2005-11-16  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* fold-const.c (const_binop): Don't constant fold the operation\n+\tif the result has overflowed and flag_trapping_math.\n+\t* simplify-rtx.c (simplify_const_binary_operation): Likewise.\n+\n 2005-11-16  Daniel Jacobowitz  <dan@codesourcery.com>\n \n \t* config/arm/unwind-arm.c (abort): Add prototype here."}, {"sha": "0e74391fe511a9b1c36a1f5c43b46c17211d79f6", "filename": "gcc/fold-const.c", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/68328cdaefaee1b9e218e08ff2955806ddd20403/gcc%2Ffold-const.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/68328cdaefaee1b9e218e08ff2955806ddd20403/gcc%2Ffold-const.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffold-const.c?ref=68328cdaefaee1b9e218e08ff2955806ddd20403", "patch": "@@ -1537,6 +1537,16 @@ const_binop (enum tree_code code, tree arg1, tree arg2, int notrunc)\n       inexact = real_arithmetic (&value, code, &d1, &d2);\n       real_convert (&result, mode, &value);\n \n+      /* Don't constant fold this floating point operation if\n+\t the result has overflowed and flag_trapping_math.  */\n+\n+      if (flag_trapping_math\n+\t  && MODE_HAS_INFINITIES (mode)\n+\t  && REAL_VALUE_ISINF (result)\n+\t  && !REAL_VALUE_ISINF (d1)\n+\t  && !REAL_VALUE_ISINF (d2))\n+\treturn NULL_TREE;\n+\n       /* Don't constant fold this floating point operation if the\n \t result may dependent upon the run-time rounding mode and\n \t flag_rounding_math is set, or if GCC's software emulation"}, {"sha": "657b2b59c23f7df0c842c23d1d308b583ba030f9", "filename": "gcc/simplify-rtx.c", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/68328cdaefaee1b9e218e08ff2955806ddd20403/gcc%2Fsimplify-rtx.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/68328cdaefaee1b9e218e08ff2955806ddd20403/gcc%2Fsimplify-rtx.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fsimplify-rtx.c?ref=68328cdaefaee1b9e218e08ff2955806ddd20403", "patch": "@@ -2242,6 +2242,17 @@ simplify_const_binary_operation (enum rtx_code code, enum machine_mode mode,\n \t\t\t\t     &f0, &f1);\n \t  real_convert (&result, mode, &value);\n \n+\t  /* Don't constant fold this floating point operation if\n+\t     the result has overflowed and flag_trapping_math.  */\n+\n+\t  if (flag_trapping_math\n+\t      && MODE_HAS_INFINITIES (mode)\n+\t      && REAL_VALUE_ISINF (result)\n+\t      && !REAL_VALUE_ISINF (f0)\n+\t      && !REAL_VALUE_ISINF (f1))\n+\t    /* Overflow plus exception.  */\n+\t    return 0;\n+\n \t  /* Don't constant fold this floating point operation if the\n \t     result may dependent upon the run-time rounding mode and\n \t     flag_rounding_math is set, or if GCC's software emulation"}, {"sha": "9c3f333ddd77338548feeacc455c799ab2731d02", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/68328cdaefaee1b9e218e08ff2955806ddd20403/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/68328cdaefaee1b9e218e08ff2955806ddd20403/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=68328cdaefaee1b9e218e08ff2955806ddd20403", "patch": "@@ -1,3 +1,7 @@\n+2005-11-16  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* gcc.dg/fold-overflow-1.c: New test.\n+\n 2005-11-16  Daniel Jacobowitz  <dan@codesourcery.com>\n \n \t* gcc.dg/cleanup-5.c, gcc.dg/cleanup-8.c, gcc.dg/cleanup-9.c,"}, {"sha": "2dd2188f8703cca24b58fcde6c206b829ed3983c", "filename": "gcc/testsuite/gcc.dg/fold-overflow-1.c", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/68328cdaefaee1b9e218e08ff2955806ddd20403/gcc%2Ftestsuite%2Fgcc.dg%2Ffold-overflow-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/68328cdaefaee1b9e218e08ff2955806ddd20403/gcc%2Ftestsuite%2Fgcc.dg%2Ffold-overflow-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ffold-overflow-1.c?ref=68328cdaefaee1b9e218e08ff2955806ddd20403", "patch": "@@ -0,0 +1,18 @@\n+/* { dg-compile } */\n+/* { dg-options \"-O -ftrapping-math\" } */\n+\n+float f1 =  __FLT_MAX__ + __FLT_MAX__;\n+\n+float foo1(void)\n+{\n+  return  __FLT_MAX__ + __FLT_MAX__;\n+}\n+\n+float f2 = 1.0f/0.0f;\n+\n+float foo2(void)\n+{\n+  return 1.0f/0.0f;\n+}\n+\n+/* { dg-final { scan-assembler-times \"2139095040\" 2 } } */"}]}