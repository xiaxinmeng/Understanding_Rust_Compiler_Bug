{"sha": "3b4598a761a9eb685e5a5013416f6c4f790ec6aa", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2I0NTk4YTc2MWE5ZWI2ODVlNWE1MDEzNDE2ZjZjNGY3OTBlYzZhYQ==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2014-01-20T15:37:46Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2014-01-20T15:37:46Z"}, "message": "[multiple changes]\n\n2014-01-20  Bob Duff  <duff@adacore.com>\n\n\t* exp_intr.adb (Expand_Unc_Deallocation): Remove warning on abort\n\tfollowed by free.\n\n2014-01-20  Ed Schonberg  <schonberg@adacore.com>\n\n\t* checks.adb (Apply_Address_Clause_Check): If there is an\n\talignment check on the expression in an address clause, and there\n\tis no local exception propagation, add an additional explanatory\n\tmessage to clarify the cause of previous warning.\n\nFrom-SVN: r206828", "tree": {"sha": "6536e9de95740742ea7e8b279bffc642dfa6e0fc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6536e9de95740742ea7e8b279bffc642dfa6e0fc"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3b4598a761a9eb685e5a5013416f6c4f790ec6aa", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3b4598a761a9eb685e5a5013416f6c4f790ec6aa", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3b4598a761a9eb685e5a5013416f6c4f790ec6aa", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3b4598a761a9eb685e5a5013416f6c4f790ec6aa/comments", "author": null, "committer": null, "parents": [{"sha": "4058ddccde8eaf26b69891ae873016972c87a24b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4058ddccde8eaf26b69891ae873016972c87a24b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4058ddccde8eaf26b69891ae873016972c87a24b"}], "stats": {"total": 63, "additions": 29, "deletions": 34}, "files": [{"sha": "c309e5785d4af365725e925707f509788b46ac5a", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3b4598a761a9eb685e5a5013416f6c4f790ec6aa/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3b4598a761a9eb685e5a5013416f6c4f790ec6aa/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=3b4598a761a9eb685e5a5013416f6c4f790ec6aa", "patch": "@@ -1,3 +1,15 @@\n+2014-01-20  Bob Duff  <duff@adacore.com>\n+\n+\t* exp_intr.adb (Expand_Unc_Deallocation): Remove warning on abort\n+\tfollowed by free.\n+\n+2014-01-20  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* checks.adb (Apply_Address_Clause_Check): If there is an\n+\talignment check on the expression in an address clause, and there\n+\tis no local exception propagation, add an additional explanatory\n+\tmessage to clarify the cause of previous warning.\n+\n 2014-01-20  Robert Dewar  <dewar@adacore.com>\n \n \t* exp_ch7.adb: Minor reformatting."}, {"sha": "58b8422ccdd2df0232b35e5c2b1ec58450e6cb9d", "filename": "gcc/ada/checks.adb", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3b4598a761a9eb685e5a5013416f6c4f790ec6aa/gcc%2Fada%2Fchecks.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3b4598a761a9eb685e5a5013416f6c4f790ec6aa/gcc%2Fada%2Fchecks.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fchecks.adb?ref=3b4598a761a9eb685e5a5013416f6c4f790ec6aa", "patch": "@@ -758,6 +758,18 @@ package body Checks is\n                  Right_Opnd => Make_Integer_Literal (Loc, Uint_0)),\n              Reason => PE_Misaligned_Address_Value));\n          Analyze (First (Actions (N)), Suppress => All_Checks);\n+\n+         --  If the address clause generates an alignment check and we are\n+         --  in ZPF or some restricted run-time, add a warning to explain\n+         --  the propagation warning that is generated by the check.\n+\n+         if Nkind (First (Actions (N))) = N_Raise_Program_Error\n+           and then not Warnings_Off (E)\n+           and then Restriction_Active (No_Exception_Propagation)\n+         then\n+            Error_Msg_N (\"address value may be incompatible with \" &\n+                           \"alignment of object?\", N);\n+         end if;\n          return;\n       end if;\n "}, {"sha": "058b8274e0433f6afe26a2d9cca01440cfb7215f", "filename": "gcc/ada/exp_intr.adb", "status": "modified", "additions": 5, "deletions": 34, "changes": 39, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3b4598a761a9eb685e5a5013416f6c4f790ec6aa/gcc%2Fada%2Fexp_intr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3b4598a761a9eb685e5a5013416f6c4f790ec6aa/gcc%2Fada%2Fexp_intr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_intr.adb?ref=3b4598a761a9eb685e5a5013416f6c4f790ec6aa", "patch": "@@ -27,7 +27,6 @@ with Atree;    use Atree;\n with Checks;   use Checks;\n with Einfo;    use Einfo;\n with Elists;   use Elists;\n-with Errout;   use Errout;\n with Exp_Atag; use Exp_Atag;\n with Exp_Ch4;  use Exp_Ch4;\n with Exp_Ch7;  use Exp_Ch7;\n@@ -1019,39 +1018,11 @@ package body Exp_Intr is\n       --  For a task type, call Free_Task before freeing the ATCB\n \n       if Is_Task_Type (Desig_T) then\n-         declare\n-            Stat : Node_Id := Prev (N);\n-            Nam1 : Node_Id;\n-            Nam2 : Node_Id;\n-\n-         begin\n-            --  An Abort followed by a Free will not do what the user expects,\n-            --  because the abort is not immediate. This is worth a warning.\n-\n-            while Present (Stat)\n-              and then not Comes_From_Source (Original_Node (Stat))\n-            loop\n-               Prev (Stat);\n-            end loop;\n-\n-            if Present (Stat)\n-              and then Nkind (Original_Node (Stat)) = N_Abort_Statement\n-            then\n-               Stat := Original_Node (Stat);\n-               Nam1 := First (Names (Stat));\n-               Nam2 := Original_Node (First (Parameter_Associations (N)));\n-\n-               if Nkind (Nam1) = N_Explicit_Dereference\n-                 and then Is_Entity_Name (Prefix (Nam1))\n-                 and then Is_Entity_Name (Nam2)\n-                 and then Entity (Prefix (Nam1)) = Entity (Nam2)\n-               then\n-                  Error_Msg_N (\"abort may take time to complete??\", N);\n-                  Error_Msg_N (\"\\deallocation might have no effect??\", N);\n-                  Error_Msg_N (\"\\safer to wait for termination??\", N);\n-               end if;\n-            end if;\n-         end;\n+         --  We used to detect the case of Abort followed by a Free here,\n+         --  because the Free wouldn't actually free if it happens before the\n+         --  aborted task actually terminates. The warning is removed, because\n+         --  Free now works properly (the task will be freed once it\n+         --  terminates).\n \n          Append_To\n            (Stmts, Cleanup_Task (N, Duplicate_Subexpr_No_Checks (Arg)));"}]}