{"sha": "8b0a63e47cd83f4e8534d0d201739bdd10f321a2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGIwYTYzZTQ3Y2Q4M2Y0ZTg1MzRkMGQyMDE3MzliZGQxMGYzMjFhMg==", "commit": {"author": {"name": "Tobias Burnus", "email": "tobias@codesourcery.com", "date": "2020-09-30T12:59:27Z"}, "committer": {"name": "Tobias Burnus", "email": "tobias@codesourcery.com", "date": "2020-09-30T12:59:27Z"}, "message": "OpenMP: Add implicit declare target for nested procedures\n\ngcc/ChangeLog:\n\n\t* omp-offload.c (omp_discover_implicit_declare_target): Also\n\thandled nested functions.\n\nlibgomp/ChangeLog:\n\n\t* testsuite/libgomp.fortran/declare-target-3.f90: New test.", "tree": {"sha": "9331e8dd74b5c1ff5758a9de0a08daa18cd3ad16", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9331e8dd74b5c1ff5758a9de0a08daa18cd3ad16"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8b0a63e47cd83f4e8534d0d201739bdd10f321a2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8b0a63e47cd83f4e8534d0d201739bdd10f321a2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8b0a63e47cd83f4e8534d0d201739bdd10f321a2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8b0a63e47cd83f4e8534d0d201739bdd10f321a2/comments", "author": {"login": "tob2", "id": 264461, "node_id": "MDQ6VXNlcjI2NDQ2MQ==", "avatar_url": "https://avatars.githubusercontent.com/u/264461?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tob2", "html_url": "https://github.com/tob2", "followers_url": "https://api.github.com/users/tob2/followers", "following_url": "https://api.github.com/users/tob2/following{/other_user}", "gists_url": "https://api.github.com/users/tob2/gists{/gist_id}", "starred_url": "https://api.github.com/users/tob2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tob2/subscriptions", "organizations_url": "https://api.github.com/users/tob2/orgs", "repos_url": "https://api.github.com/users/tob2/repos", "events_url": "https://api.github.com/users/tob2/events{/privacy}", "received_events_url": "https://api.github.com/users/tob2/received_events", "type": "User", "site_admin": false}, "committer": {"login": "tob2", "id": 264461, "node_id": "MDQ6VXNlcjI2NDQ2MQ==", "avatar_url": "https://avatars.githubusercontent.com/u/264461?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tob2", "html_url": "https://github.com/tob2", "followers_url": "https://api.github.com/users/tob2/followers", "following_url": "https://api.github.com/users/tob2/following{/other_user}", "gists_url": "https://api.github.com/users/tob2/gists{/gist_id}", "starred_url": "https://api.github.com/users/tob2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tob2/subscriptions", "organizations_url": "https://api.github.com/users/tob2/orgs", "repos_url": "https://api.github.com/users/tob2/repos", "events_url": "https://api.github.com/users/tob2/events{/privacy}", "received_events_url": "https://api.github.com/users/tob2/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "fcc4891d7f3bff1a3f7428f12830bc942989306c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fcc4891d7f3bff1a3f7428f12830bc942989306c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fcc4891d7f3bff1a3f7428f12830bc942989306c"}], "stats": {"total": 52, "additions": 52, "deletions": 0}, "files": [{"sha": "7fb3a72ec55858a49789d21bd36867b11aaa693d", "filename": "gcc/omp-offload.c", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8b0a63e47cd83f4e8534d0d201739bdd10f321a2/gcc%2Fomp-offload.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8b0a63e47cd83f4e8534d0d201739bdd10f321a2/gcc%2Fomp-offload.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fomp-offload.c?ref=8b0a63e47cd83f4e8534d0d201739bdd10f321a2", "patch": "@@ -327,11 +327,18 @@ omp_discover_implicit_declare_target (void)\n   FOR_EACH_DEFINED_FUNCTION (node)\n     if (DECL_SAVED_TREE (node->decl))\n       {\n+\tstruct cgraph_node *cgn;\n         if (omp_declare_target_fn_p (node->decl))\n \t  worklist.safe_push (node->decl);\n \telse if (DECL_STRUCT_FUNCTION (node->decl)\n \t\t && DECL_STRUCT_FUNCTION (node->decl)->has_omp_target)\n \t  worklist.safe_push (node->decl);\n+\tfor (cgn = node->nested; cgn; cgn = cgn->next_nested)\n+\t  if (omp_declare_target_fn_p (cgn->decl))\n+\t    worklist.safe_push (cgn->decl);\n+\t  else if (DECL_STRUCT_FUNCTION (cgn->decl)\n+\t\t   && DECL_STRUCT_FUNCTION (cgn->decl)->has_omp_target)\n+\t    worklist.safe_push (cgn->decl);\n       }\n   FOR_EACH_STATIC_INITIALIZER (vnode)\n     if (omp_declare_target_var_p (vnode->decl))"}, {"sha": "6e5301de0a985ab49aa29480bf4a711f905661f2", "filename": "libgomp/testsuite/libgomp.fortran/declare-target-3.f90", "status": "added", "additions": 45, "deletions": 0, "changes": 45, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8b0a63e47cd83f4e8534d0d201739bdd10f321a2/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fdeclare-target-3.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8b0a63e47cd83f4e8534d0d201739bdd10f321a2/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fdeclare-target-3.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fdeclare-target-3.f90?ref=8b0a63e47cd83f4e8534d0d201739bdd10f321a2", "patch": "@@ -0,0 +1,45 @@\n+! { dg-additional-options \"-fdump-tree-omplower\" }\n+\n+module m\n+  implicit none (type, external)\n+contains\n+  subroutine mod_proc(x)\n+    integer :: x(2)\n+      x = x + 5\n+    end subroutine\n+end module m\n+\n+program main\n+  use m\n+  implicit none (type, external)\n+  if (any (foo() /= [48, 49])) stop 1\n+contains\n+  integer function fourty_two(y)\n+    integer :: y\n+    fourty_two = y + 42\n+  end function\n+\n+  integer function wrapper (x, y)\n+    integer :: x, y(2)\n+    call mod_proc(y)\n+    wrapper = fourty_two(x) + 1\n+  end function\n+\n+  function foo()\n+    integer :: foo(2)\n+    integer :: a(2)\n+    integer :: b, summed(2)\n+    a = [1, 2]\n+    b = -1\n+    !$omp target map (tofrom: a, b, summed)\n+      summed = wrapper (b, a)\n+    !$omp end target\n+    if (b /= -1) stop 2            ! unchanged\n+    if (any (summed /= 42)) stop 3 ! b + 42 + 1 = 42\n+    if (any (a /= [6, 7])) stop 4  ! [1, 2] + 5\n+    foo = summed + a               ! [48, 49]\n+  end function\n+end\n+\n+! 3 times: mod_proc, fourty_two and wrapper:\n+! { dg-final { scan-tree-dump-times \"__attribute__..omp declare target\" 3 \"omplower\" } }"}]}