{"sha": "9defc9b7ac96fd51c70aff0e452c753d1f6159b3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OWRlZmM5YjdhYzk2ZmQ1MWM3MGFmZjBlNDUyYzc1M2QxZjYxNTliMw==", "commit": {"author": {"name": "Richard Henderson", "email": "rth@redhat.com", "date": "2001-09-21T20:26:44Z"}, "committer": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "2001-09-21T20:26:44Z"}, "message": "rtl.h (LCT_RETURNS_TWICE): New.\n\n        * rtl.h (LCT_RETURNS_TWICE): New.\n        * calls.c (emit_call_1): Set current_function_calls_setjmp for\n        ECF_RETURNS_TWICE.\n        (emit_library_call_value_1): Map LCT_RETURNS_TWICE\n        to ECF_RETURNS_TWICE.\n        * except.c (sjlj_emit_function_enter): Use LCT_RETURNS_TWICE for\n        call to setjmp.\n\n        * unwind-sjlj.c: Invent the setjmp.h declarations if inhibit_libc.\n\n        * config/stormy16/stormy16.h (DONT_USE_BUILTIN_SETJMP): New.\n        (JMP_BUF_SIZE): New.\n\nFrom-SVN: r45736", "tree": {"sha": "5e65f35e37a55bf10f429b4ed3add9916578e469", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5e65f35e37a55bf10f429b4ed3add9916578e469"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9defc9b7ac96fd51c70aff0e452c753d1f6159b3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9defc9b7ac96fd51c70aff0e452c753d1f6159b3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9defc9b7ac96fd51c70aff0e452c753d1f6159b3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9defc9b7ac96fd51c70aff0e452c753d1f6159b3/comments", "author": null, "committer": null, "parents": [{"sha": "1853547e03a18cc73a2ba3e204408919e326831a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1853547e03a18cc73a2ba3e204408919e326831a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1853547e03a18cc73a2ba3e204408919e326831a"}], "stats": {"total": 39, "additions": 35, "deletions": 4}, "files": [{"sha": "414effb1ef63789c8af999296f907375be18e8d1", "filename": "gcc/ChangeLog", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9defc9b7ac96fd51c70aff0e452c753d1f6159b3/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9defc9b7ac96fd51c70aff0e452c753d1f6159b3/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=9defc9b7ac96fd51c70aff0e452c753d1f6159b3", "patch": "@@ -1,3 +1,18 @@\n+2001-09-21  Richard Henderson  <rth@redhat.com>\n+\n+\t* rtl.h (LCT_RETURNS_TWICE): New.\n+\t* calls.c (emit_call_1): Set current_function_calls_setjmp for\n+\tECF_RETURNS_TWICE.\n+\t(emit_library_call_value_1): Map LCT_RETURNS_TWICE\n+\tto ECF_RETURNS_TWICE.\n+\t* except.c (sjlj_emit_function_enter): Use LCT_RETURNS_TWICE for\n+\tcall to setjmp.\n+\n+\t* unwind-sjlj.c: Invent the setjmp.h declarations if inhibit_libc.\n+\n+\t* config/stormy16/stormy16.h (DONT_USE_BUILTIN_SETJMP): New.\n+\t(JMP_BUF_SIZE): New.\n+\n 2001-09-21  Richard Henderson  <rth@redhat.com>\n \n \t* config/stormy16/stormy16.h (REG_CLASS_FROM_LETTER): Map 'd'"}, {"sha": "f2b1bdb8a45502f1d3fb9d6fe8f553e926ba5986", "filename": "gcc/calls.c", "status": "modified", "additions": 8, "deletions": 2, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9defc9b7ac96fd51c70aff0e452c753d1f6159b3/gcc%2Fcalls.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9defc9b7ac96fd51c70aff0e452c753d1f6159b3/gcc%2Fcalls.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcalls.c?ref=9defc9b7ac96fd51c70aff0e452c753d1f6159b3", "patch": "@@ -613,8 +613,11 @@ emit_call_1 (funexp, fndecl, funtype, stack_size, rounded_stack_size,\n \t\t\t\t\t       REG_NOTES (call_insn));\n \n   if (ecf_flags & ECF_RETURNS_TWICE)\n-    REG_NOTES (call_insn) = gen_rtx_EXPR_LIST (REG_SETJMP, const0_rtx,\n-\t\t\t\t\t       REG_NOTES (call_insn));\n+    {\n+      REG_NOTES (call_insn) = gen_rtx_EXPR_LIST (REG_SETJMP, const0_rtx,\n+\t\t\t\t\t         REG_NOTES (call_insn));\n+      current_function_calls_setjmp = 1;\n+    }\n \n   SIBLING_CALL_P (call_insn) = ((ecf_flags & ECF_SIBCALL) != 0);\n \n@@ -3531,6 +3534,9 @@ emit_library_call_value_1 (retval, orgfun, value, fn_type, outmode, nargs, p)\n     case LCT_ALWAYS_RETURN:\n       flags = ECF_ALWAYS_RETURN;\n       break;\n+    case LCT_RETURNS_TWICE:\n+      flags = ECF_RETURNS_TWICE;\n+      break;\n     }\n   fun = orgfun;\n "}, {"sha": "b2e85fa321a1d4ba3c3009f6977fcca747ce5ea2", "filename": "gcc/config/stormy16/stormy16.h", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9defc9b7ac96fd51c70aff0e452c753d1f6159b3/gcc%2Fconfig%2Fstormy16%2Fstormy16.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9defc9b7ac96fd51c70aff0e452c753d1f6159b3/gcc%2Fconfig%2Fstormy16%2Fstormy16.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fstormy16%2Fstormy16.h?ref=9defc9b7ac96fd51c70aff0e452c753d1f6159b3", "patch": "@@ -4537,6 +4537,10 @@ do {\t\t\t\t\t\t\t\t\t\\\n    instead of inline unwinders and __unwind_function in the non-setjmp case.  */\n #define DWARF2_UNWIND_INFO 0\n \n+/* Don't use __builtin_setjmp for unwinding, since it's tricky to get\n+   at the high 16 bits of an address.  */\n+#define DONT_USE_BUILTIN_SETJMP\n+#define JMP_BUF_SIZE  8\n \f\n /* Assembler Commands for Alignment.  */\n "}, {"sha": "4448610757a15b26a7f19995572a86e44466b6bf", "filename": "gcc/except.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9defc9b7ac96fd51c70aff0e452c753d1f6159b3/gcc%2Fexcept.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9defc9b7ac96fd51c70aff0e452c753d1f6159b3/gcc%2Fexcept.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fexcept.c?ref=9defc9b7ac96fd51c70aff0e452c753d1f6159b3", "patch": "@@ -2144,7 +2144,7 @@ sjlj_emit_function_enter (dispatch_label)\n #ifdef DONT_USE_BUILTIN_SETJMP\n   {\n     rtx x, note;\n-    x = emit_library_call_value (setjmp_libfunc, NULL_RTX, LCT_NORMAL,\n+    x = emit_library_call_value (setjmp_libfunc, NULL_RTX, LCT_RETURNS_TWICE,\n \t\t\t\t TYPE_MODE (integer_type_node), 1,\n \t\t\t\t plus_constant (XEXP (fc, 0),\n \t\t\t\t\t\tsjlj_fc_jbuf_ofs), Pmode);"}, {"sha": "d9b9294f33c492d384824f61d834a9945cb95f57", "filename": "gcc/rtl.h", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9defc9b7ac96fd51c70aff0e452c753d1f6159b3/gcc%2Frtl.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9defc9b7ac96fd51c70aff0e452c753d1f6159b3/gcc%2Frtl.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frtl.h?ref=9defc9b7ac96fd51c70aff0e452c753d1f6159b3", "patch": "@@ -1952,7 +1952,8 @@ enum libcall_type\n   LCT_PURE_MAKE_BLOCK = 4,\n   LCT_NORETURN = 5,\n   LCT_THROW = 6,\n-  LCT_ALWAYS_RETURN = 7\n+  LCT_ALWAYS_RETURN = 7,\n+  LCT_RETURNS_TWICE = 8\n };\n \n extern void emit_library_call\t\tPARAMS ((rtx, enum libcall_type,"}, {"sha": "46f30ae1d8f46a2e6fd82e2662399dc525803378", "filename": "gcc/unwind-sjlj.c", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9defc9b7ac96fd51c70aff0e452c753d1f6159b3/gcc%2Funwind-sjlj.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9defc9b7ac96fd51c70aff0e452c753d1f6159b3/gcc%2Funwind-sjlj.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Funwind-sjlj.c?ref=9defc9b7ac96fd51c70aff0e452c753d1f6159b3", "patch": "@@ -26,8 +26,13 @@\n #if USING_SJLJ_EXCEPTIONS\n \n #ifdef DONT_USE_BUILTIN_SETJMP\n+#ifndef inhibit_libc\n #include <setjmp.h>\n #else\n+typedef void *jmp_buf[JMP_BUF_SIZE];\n+extern void longjmp(jmp_buf, int) __attribute__((noreturn));\n+#endif\n+#else\n #define setjmp __builtin_setjmp\n #define longjmp __builtin_longjmp\n #endif"}]}