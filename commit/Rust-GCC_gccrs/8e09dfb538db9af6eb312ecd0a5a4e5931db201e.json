{"sha": "8e09dfb538db9af6eb312ecd0a5a4e5931db201e", "node_id": "C_kwDOANBUbNoAKDhlMDlkZmI1MzhkYjlhZjZlYjMxMmVjZDBhNWE0ZTU5MzFkYjIwMWU", "commit": {"author": {"name": "Philip Herron", "email": "philip.herron@embecosm.com", "date": "2022-10-20T16:59:03Z"}, "committer": {"name": "Philip Herron", "email": "philip.herron@embecosm.com", "date": "2022-10-20T16:59:03Z"}, "message": "Add missing name resolution to Function type-path segments", "tree": {"sha": "38a165cc2e9bf9a3214a6cd88c8ca1603bda9d21", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/38a165cc2e9bf9a3214a6cd88c8ca1603bda9d21"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8e09dfb538db9af6eb312ecd0a5a4e5931db201e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8e09dfb538db9af6eb312ecd0a5a4e5931db201e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8e09dfb538db9af6eb312ecd0a5a4e5931db201e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8e09dfb538db9af6eb312ecd0a5a4e5931db201e/comments", "author": {"login": "philberty", "id": 84585, "node_id": "MDQ6VXNlcjg0NTg1", "avatar_url": "https://avatars.githubusercontent.com/u/84585?v=4", "gravatar_id": "", "url": "https://api.github.com/users/philberty", "html_url": "https://github.com/philberty", "followers_url": "https://api.github.com/users/philberty/followers", "following_url": "https://api.github.com/users/philberty/following{/other_user}", "gists_url": "https://api.github.com/users/philberty/gists{/gist_id}", "starred_url": "https://api.github.com/users/philberty/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/philberty/subscriptions", "organizations_url": "https://api.github.com/users/philberty/orgs", "repos_url": "https://api.github.com/users/philberty/repos", "events_url": "https://api.github.com/users/philberty/events{/privacy}", "received_events_url": "https://api.github.com/users/philberty/received_events", "type": "User", "site_admin": false}, "committer": {"login": "philberty", "id": 84585, "node_id": "MDQ6VXNlcjg0NTg1", "avatar_url": "https://avatars.githubusercontent.com/u/84585?v=4", "gravatar_id": "", "url": "https://api.github.com/users/philberty", "html_url": "https://github.com/philberty", "followers_url": "https://api.github.com/users/philberty/followers", "following_url": "https://api.github.com/users/philberty/following{/other_user}", "gists_url": "https://api.github.com/users/philberty/gists{/gist_id}", "starred_url": "https://api.github.com/users/philberty/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/philberty/subscriptions", "organizations_url": "https://api.github.com/users/philberty/orgs", "repos_url": "https://api.github.com/users/philberty/repos", "events_url": "https://api.github.com/users/philberty/events{/privacy}", "received_events_url": "https://api.github.com/users/philberty/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "678bf852435aca6de25704ca417fab257fe03da9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/678bf852435aca6de25704ca417fab257fe03da9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/678bf852435aca6de25704ca417fab257fe03da9"}], "stats": {"total": 15, "additions": 14, "deletions": 1}, "files": [{"sha": "e42bab68234a5cbfe2cebb5e81c9df80ab444613", "filename": "gcc/rust/resolve/rust-ast-resolve-type.cc", "status": "modified", "additions": 14, "deletions": 1, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8e09dfb538db9af6eb312ecd0a5a4e5931db201e/gcc%2Frust%2Fresolve%2Frust-ast-resolve-type.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8e09dfb538db9af6eb312ecd0a5a4e5931db201e/gcc%2Frust%2Fresolve%2Frust-ast-resolve-type.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Fresolve%2Frust-ast-resolve-type.cc?ref=8e09dfb538db9af6eb312ecd0a5a4e5931db201e", "patch": "@@ -149,7 +149,20 @@ ResolveRelativeTypePath::go (AST::TypePath &path, NodeId &resolved_node_id)\n \t  break;\n \n \tcase AST::TypePathSegment::SegmentType::FUNCTION:\n-\t  gcc_unreachable ();\n+\t  AST::TypePathSegmentFunction *fnseg\n+\t    = static_cast<AST::TypePathSegmentFunction *> (segment.get ());\n+\n+\t  AST::TypePathFunction &fn = fnseg->get_type_path_function ();\n+\t  for (auto &param : fn.get_params ())\n+\t    {\n+\t      ResolveType::go (param.get ());\n+\t    }\n+\n+\t  if (fn.has_return_type ())\n+\t    {\n+\t      ResolveType::go (fn.get_return_type ().get ());\n+\t    }\n+\n \t  break;\n \t}\n "}]}