{"sha": "fe75f73248425f0f4c0d2196811ce1d7afb9c09f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZmU3NWY3MzI0ODQyNWYwZjRjMGQyMTk2ODExY2UxZDdhZmI5YzA5Zg==", "commit": {"author": {"name": "Prathamesh Kulkarni", "email": "prathamesh.kulkarni@linaro.org", "date": "2017-04-29T10:05:13Z"}, "committer": {"name": "Prathamesh Kulkarni", "email": "prathamesh3492@gcc.gnu.org", "date": "2017-04-29T10:05:13Z"}, "message": "re PR tree-optimization/79697 (unused realloc(0, n) not eliminated)\n\n2017-04-29  Prathamesh Kulkarni  <prathamesh.kulkarni@linaro.org>\n\n\tPR tree-optimization/79697\n\t* tree-ssa-dce.c (mark_stmt_if_obviously_necessary): Check if callee\n\tis BUILT_IN_STRDUP, BUILT_IN_STRNDUP, BUILT_IN_REALLOC.\n\t(propagate_necessity): Check if def_callee is BUILT_IN_STRDUP or\n\tBUILT_IN_STRNDUP.\n\t* gimple-fold.c (gimple_fold_builtin_realloc): New function.\n\t(gimple_fold_builtin): Call gimple_fold_builtin_realloc.\n\ntestsuite/\n\t* gcc.dg/tree-ssa/pr79697.c: New test.\n\nFrom-SVN: r247407", "tree": {"sha": "9e0c2d1d28b1e5baecc44a4c7b78ad81f0e1bef3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9e0c2d1d28b1e5baecc44a4c7b78ad81f0e1bef3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/fe75f73248425f0f4c0d2196811ce1d7afb9c09f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fe75f73248425f0f4c0d2196811ce1d7afb9c09f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fe75f73248425f0f4c0d2196811ce1d7afb9c09f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fe75f73248425f0f4c0d2196811ce1d7afb9c09f/comments", "author": null, "committer": null, "parents": [{"sha": "6bcd876838b433fd2730a6a15740ddcecbefd9ea", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6bcd876838b433fd2730a6a15740ddcecbefd9ea", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6bcd876838b433fd2730a6a15740ddcecbefd9ea"}], "stats": {"total": 79, "additions": 78, "deletions": 1}, "files": [{"sha": "a2082928881091ebab4b243dc50fb398f2f88287", "filename": "gcc/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fe75f73248425f0f4c0d2196811ce1d7afb9c09f/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fe75f73248425f0f4c0d2196811ce1d7afb9c09f/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=fe75f73248425f0f4c0d2196811ce1d7afb9c09f", "patch": "@@ -1,3 +1,13 @@\n+2017-04-29  Prathamesh Kulkarni  <prathamesh.kulkarni@linaro.org>\n+\n+\tPR tree-optimization/79697\n+\t* tree-ssa-dce.c (mark_stmt_if_obviously_necessary): Check if callee\n+\tis BUILT_IN_STRDUP, BUILT_IN_STRNDUP, BUILT_IN_REALLOC.\n+\t(propagate_necessity): Check if def_callee is BUILT_IN_STRDUP or\n+\tBUILT_IN_STRNDUP.\n+\t* gimple-fold.c (gimple_fold_builtin_realloc): New function.\n+\t(gimple_fold_builtin): Call gimple_fold_builtin_realloc.\n+\n 2017-04-28  Martin Sebor  <msebor@redhat.com>\n \n \tPR tree-optimization/80523"}, {"sha": "5ebdcdfd796f983255d13f939628253ff689d9d3", "filename": "gcc/gimple-fold.c", "status": "modified", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fe75f73248425f0f4c0d2196811ce1d7afb9c09f/gcc%2Fgimple-fold.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fe75f73248425f0f4c0d2196811ce1d7afb9c09f/gcc%2Fgimple-fold.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgimple-fold.c?ref=fe75f73248425f0f4c0d2196811ce1d7afb9c09f", "patch": "@@ -3251,6 +3251,28 @@ gimple_fold_builtin_acc_on_device (gimple_stmt_iterator *gsi, tree arg0)\n   return true;\n }\n \n+/* Fold realloc (0, n) -> malloc (n).  */\n+\n+static bool\n+gimple_fold_builtin_realloc (gimple_stmt_iterator *gsi)\n+{\n+  gimple *stmt = gsi_stmt (*gsi);\n+  tree arg = gimple_call_arg (stmt, 0);\n+  tree size = gimple_call_arg (stmt, 1);\n+\n+  if (operand_equal_p (arg, null_pointer_node, 0))\n+    {\n+      tree fn_malloc = builtin_decl_implicit (BUILT_IN_MALLOC);\n+      if (fn_malloc)\n+\t{\n+\t  gcall *repl = gimple_build_call (fn_malloc, 1, size);\n+\t  replace_call_with_call_and_fold (gsi, repl);\n+\t  return true;\n+\t}\n+    }\n+  return false;\n+}\n+\n /* Fold the non-target builtin at *GSI and return whether any simplification\n    was made.  */\n \n@@ -3409,6 +3431,9 @@ gimple_fold_builtin (gimple_stmt_iterator *gsi)\n     case BUILT_IN_ACC_ON_DEVICE:\n       return gimple_fold_builtin_acc_on_device (gsi,\n \t\t\t\t\t\tgimple_call_arg (stmt, 0));\n+    case BUILT_IN_REALLOC:\n+      return gimple_fold_builtin_realloc (gsi);\n+\n     default:;\n     }\n "}, {"sha": "59f1a31bfd77bf37f01e388ff977e82214207842", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fe75f73248425f0f4c0d2196811ce1d7afb9c09f/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fe75f73248425f0f4c0d2196811ce1d7afb9c09f/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=fe75f73248425f0f4c0d2196811ce1d7afb9c09f", "patch": "@@ -1,3 +1,8 @@\n+2017-04-29  Prathamesh Kulkarni  <prathamesh.kulkarni@linaro.org>\n+\n+\tPR tree-optimization/79697\n+\t* gcc.dg/tree-ssa/pr79697.c: New test.\n+\n 2017-04-29  Tom de Vries  <tom@codesourcery.com>\n \n \t* gcc.dg/tree-prof/pr66295.c: Require effective target avx512f."}, {"sha": "d4f647397876d86a9389124dadcd1678ca8602a2", "filename": "gcc/testsuite/gcc.dg/tree-ssa/pr79697.c", "status": "added", "additions": 33, "deletions": 0, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fe75f73248425f0f4c0d2196811ce1d7afb9c09f/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr79697.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fe75f73248425f0f4c0d2196811ce1d7afb9c09f/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr79697.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr79697.c?ref=fe75f73248425f0f4c0d2196811ce1d7afb9c09f", "patch": "@@ -0,0 +1,33 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -fdump-tree-gimple -fdump-tree-cddce-details -fdump-tree-optimized\" } */\n+\n+void f(void)\n+{\n+  __builtin_strdup (\"abc\");\n+}\n+\n+void g(void)\n+{\n+  __builtin_strndup (\"abc\", 3);\n+}\n+\n+void h(void)\n+{\n+  __builtin_realloc (0, 10);\n+}\n+\n+void k(void)\n+{\n+  char *p = __builtin_strdup (\"abc\");\n+  __builtin_free (p);\n+\n+  char *q = __builtin_strndup (\"abc\", 3);\n+  __builtin_free (q);\n+}\n+\n+/* { dg-final { scan-tree-dump \"Deleting : __builtin_strdup\" \"cddce1\" } } */\n+/* { dg-final { scan-tree-dump \"Deleting : __builtin_strndup\" \"cddce1\" } } */\n+/* { dg-final { scan-tree-dump \"__builtin_malloc\" \"gimple\" } } */\n+/* { dg-final { scan-tree-dump-not \"__builtin_strdup\" \"optimized\" } } */\n+/* { dg-final { scan-tree-dump-not \"__builtin_strndup\" \"optimized\" } } */\n+/* { dg-final { scan-tree-dump-not \"__builtin_free\" \"optimized\" } } */"}, {"sha": "e17659df91fcee0f34a91b0c2953f75db3ad3762", "filename": "gcc/tree-ssa-dce.c", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fe75f73248425f0f4c0d2196811ce1d7afb9c09f/gcc%2Ftree-ssa-dce.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fe75f73248425f0f4c0d2196811ce1d7afb9c09f/gcc%2Ftree-ssa-dce.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-dce.c?ref=fe75f73248425f0f4c0d2196811ce1d7afb9c09f", "patch": "@@ -233,6 +233,8 @@ mark_stmt_if_obviously_necessary (gimple *stmt, bool aggressive)\n \t    case BUILT_IN_CALLOC:\n \t    case BUILT_IN_ALLOCA:\n \t    case BUILT_IN_ALLOCA_WITH_ALIGN:\n+\t    case BUILT_IN_STRDUP:\n+\t    case BUILT_IN_STRNDUP:\n \t      return;\n \n \t    default:;\n@@ -780,7 +782,9 @@ propagate_necessity (bool aggressive)\n \t\t  && DECL_BUILT_IN_CLASS (def_callee) == BUILT_IN_NORMAL\n \t\t  && (DECL_FUNCTION_CODE (def_callee) == BUILT_IN_ALIGNED_ALLOC\n \t\t      || DECL_FUNCTION_CODE (def_callee) == BUILT_IN_MALLOC\n-\t\t      || DECL_FUNCTION_CODE (def_callee) == BUILT_IN_CALLOC))\n+\t\t      || DECL_FUNCTION_CODE (def_callee) == BUILT_IN_CALLOC\n+\t\t      || DECL_FUNCTION_CODE (def_callee) == BUILT_IN_STRDUP\n+\t\t      || DECL_FUNCTION_CODE (def_callee) == BUILT_IN_STRNDUP))\n \t\t{\n \t\t  gimple *bounds_def_stmt;\n \t\t  tree bounds;"}]}