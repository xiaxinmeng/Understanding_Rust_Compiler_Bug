{"sha": "78681dbdee7e724104d79eca9fc0e2eaeaf8eae2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Nzg2ODFkYmRlZTdlNzI0MTA0ZDc5ZWNhOWZjMGUyZWFlYWY4ZWFlMg==", "commit": {"author": {"name": "Roger Sayle", "email": "roger@eyesopen.com", "date": "2007-01-21T03:54:41Z"}, "committer": {"name": "Roger Sayle", "email": "sayle@gcc.gnu.org", "date": "2007-01-21T03:54:41Z"}, "message": "invoke.texi (-fdump-rtl-combine): Fix under/overfull hbox.\n\n\n\t* doc/invoke.texi (-fdump-rtl-combine): Fix under/overfull hbox.\n\t(-fdump-rtl-stack): Likewise.\n\t(-fno-signed-zeros): Use @minus{} for a minus sign.  Correct typo.\n\t(-mcheck-zero-division, -mcpu): Fix under/overfull hbox.\n\t(-mpt-fixed): Use @minus{} for minus sign.\n\t(Using Precompiled Headers): Fix under/overfull hbox.\n\n\nCo-Authored-By: Joseph Myers <joseph@codesourcery.com>\n\nFrom-SVN: r121023", "tree": {"sha": "c698a51527753af5e7d4defad05c96401cbe81b6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c698a51527753af5e7d4defad05c96401cbe81b6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/78681dbdee7e724104d79eca9fc0e2eaeaf8eae2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/78681dbdee7e724104d79eca9fc0e2eaeaf8eae2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/78681dbdee7e724104d79eca9fc0e2eaeaf8eae2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/78681dbdee7e724104d79eca9fc0e2eaeaf8eae2/comments", "author": null, "committer": null, "parents": [{"sha": "d48a05c3c4e78776080394b4bcd832b540aa56b4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d48a05c3c4e78776080394b4bcd832b540aa56b4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d48a05c3c4e78776080394b4bcd832b540aa56b4"}], "stats": {"total": 49, "additions": 31, "deletions": 18}, "files": [{"sha": "62680caf70443fc250017aee4ac9103e83e713ac", "filename": "gcc/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/78681dbdee7e724104d79eca9fc0e2eaeaf8eae2/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/78681dbdee7e724104d79eca9fc0e2eaeaf8eae2/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=78681dbdee7e724104d79eca9fc0e2eaeaf8eae2", "patch": "@@ -1,3 +1,13 @@\n+2007-01-20  Roger Sayle  <roger@eyesopen.com>\n+\t    Joseph Myers  <joseph@codesourcery.com>\n+\n+\t* doc/invoke.texi (-fdump-rtl-combine): Fix under/overfull hbox.\n+\t(-fdump-rtl-stack): Likewise.\n+\t(-fno-signed-zeros): Use @minus{} for a minus sign.  Correct typo.\n+\t(-mcheck-zero-division, -mcpu): Fix under/overfull hbox.\n+\t(-mpt-fixed): Use @minus{} for minus sign.\n+\t(Using Precompiled Headers): Fix under/overfull hbox.\n+\n 2007-01-20  Jan Hubicka  <jh@suse.cz>\n \n \t* tree-flow.h (struct stmt_ann_d): Move references_memory to proper"}, {"sha": "ab7342d36ac5d11da00789534ef372770f80a55b", "filename": "gcc/doc/invoke.texi", "status": "modified", "additions": 21, "deletions": 18, "changes": 39, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/78681dbdee7e724104d79eca9fc0e2eaeaf8eae2/gcc%2Fdoc%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/78681dbdee7e724104d79eca9fc0e2eaeaf8eae2/gcc%2Fdoc%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finvoke.texi?ref=78681dbdee7e724104d79eca9fc0e2eaeaf8eae2", "patch": "@@ -3876,7 +3876,8 @@ Dump after block reordering, to @file{@var{file}.148r.bbro}.\n @itemx -fdump-rtl-combine\n @opindex dc\n @opindex fdump-rtl-combine\n-Dump after instruction combination, to the file @file{@var{file}.129r.combine}.\n+Dump after the RTL instruction combination pass, to the file\n+@file{@var{file}.129r.combine}.\n \n @item -dC\n @itemx -fdump-rtl-ce1\n@@ -3961,7 +3962,8 @@ Dump after the first jump optimization, to @file{@var{file}.112r.jump}.\n @itemx -fdump-rtl-stack\n @opindex dk\n @opindex fdump-rtl-stack\n-Dump after conversion from registers to stack, to @file{@var{file}.152r.stack}.\n+Dump after conversion from GCC's \"flat register file\" registers to the\n+x87's stack-like registers, to @file{@var{file}.152r.stack}.\n \n @item -dl\n @itemx -fdump-rtl-lreg\n@@ -5690,8 +5692,8 @@ The default is @option{-fno-finite-math-only}.\n @opindex fno-signed-zeros\n Allow optimizations for floating point arithmetic that ignore the\n signedness of zero.  IEEE arithmetic specifies the behavior of\n-distinct +0.0 and -0.0 values, which then prohibits simplification\n-of expressions such as x+0.0 or 0.0*x (even with @option{-ffinte-math-only}).\n+distinct +0.0 and @minus{}0.0 values, which then prohibits simplification\n+of expressions such as x+0.0 or 0.0*x (even with @option{-ffinite-math-only}).\n This option implies that the sign of a zero result isn't significant.\n \n The default is @option{-fsigned-zeros}.\n@@ -11098,8 +11100,9 @@ to use an assembler that supports relocation operators.\n @itemx -mno-check-zero-division\n @opindex mcheck-zero-division\n @opindex mno-check-zero-division\n-Trap (do not trap) on integer division by zero.  The default is\n-@option{-mcheck-zero-division}.\n+Trap (do not trap) on integer division by zero.\n+\n+The default is @option{-mcheck-zero-division}.\n \n @item -mdivide-traps\n @itemx -mdivide-breaks\n@@ -11709,12 +11712,12 @@ those options will run best on that processor, and may not run at all on\n others.\n \n The @option{-mcpu} options automatically enable or disable the\n-following options: @option{-maltivec}, @option{-mfprnd},\n-@option{-mhard-float}, @option{-mmfcrf}, @option{-mmultiple},\n-@option{-mnew-mnemonics}, @option{-mpopcntb}, @option{-mpower},\n-@option{-mpower2}, @option{-mpowerpc64}, @option{-mpowerpc-gpopt},\n-@option{-mpowerpc-gfxopt}, @option{-mstring}, @option{-mmulhw},\n-@option{-mdlmzb}, @option{-mmfpgpr}.\n+following options:\n+\n+@gccoptlist{-maltivec  -mfprnd  -mhard-float  -mmfcrf  -mmultiple @gol\n+-mnew-mnemonics  -mpopcntb  -mpower  -mpower2  -mpowerpc64 @gol\n+-mpowerpc-gpopt  -mpowerpc-gfxopt  -mstring  -mmulhw  -mdlmzb  -mmfpgpr}\n+\n The particular options set for any particular CPU will vary between\n compiler versions, depending on what setting seems to produce optimal\n code for that CPU; it doesn't necessarily reflect the actual hardware's\n@@ -12786,11 +12789,11 @@ definition says that ptabs and ptrel trap when the target anded with 3 is 3.\n This has the unintentional effect of making it unsafe to schedule ptabs /\n ptrel before a branch, or hoist it out of a loop.  For example,\n __do_global_ctors, a part of libgcc that runs constructors at program\n-startup, calls functions in a list which is delimited by -1.  With the\n--mpt-fixed option, the ptabs will be done before testing against -1.\n+startup, calls functions in a list which is delimited by @minus{}1.  With the\n+-mpt-fixed option, the ptabs will be done before testing against @minus{}1.\n That means that all the constructors will be run a bit quicker, but when\n the loop comes to the end of the list, the program crashes because ptabs\n-loads -1 into a target register.  Since this option is unsafe for any\n+loads @minus{}1 into a target register.  Since this option is unsafe for any\n hardware implementing the current architecture specification, the default\n is -mno-pt-fixed.  Unless the user specifies a specific cost with\n @option{-mgettrcost}, -mno-pt-fixed also implies @option{-mgettrcost=100};\n@@ -14305,9 +14308,9 @@ which options are safe to change and which are not; the safest choice\n is to use exactly the same options when generating and using the\n precompiled header.  The following are known to be safe:\n \n-@gccoptlist{-fmessage-length= -fpreprocessed\n--fsched-interblock -fsched-spec -fsched-spec-load -fsched-spec-load-dangerous\n--fsched-verbose=<number> -fschedule-insns -fvisibility=\n+@gccoptlist{-fmessage-length=  -fpreprocessed  -fsched-interblock @gol\n+-fsched-spec  -fsched-spec-load  -fsched-spec-load-dangerous @gol\n+-fsched-verbose=<number>  -fschedule-insns  -fvisibility= @gol\n -pedantic-errors}\n \n @end itemize"}]}