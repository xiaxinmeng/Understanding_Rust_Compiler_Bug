{"sha": "9df6385a0c162f4acf1b932944d7f5cb86a8b209", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OWRmNjM4NWEwYzE2MmY0YWNmMWI5MzI5NDRkN2Y1Y2I4NmE4YjIwOQ==", "commit": {"author": {"name": "Vincent Celier", "email": "celier@adacore.com", "date": "2008-04-08T06:44:24Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2008-04-08T06:44:24Z"}, "message": "mlib-tgt-aix.adb, [...]: Renamed into...\n\n2008-04-08  Vincent Celier  <celier@adacore.com>\n\t    Arnaud Charlet  <charlet@adacore.com>\n\n\t* mlib-tgt-aix.adb, mlib-tgt-darwin.adb, mlib-tgt-hpux.adb,\n\tmlib-tgt-irix.adb, mlib-tgt-linux.adb, mlib-tgt-lynxos.adb,\n\tmlib-tgt-solaris.adb, mlib-tgt-tru64.adb, mlib-tgt-vms.adb,\n\tmlib-tgt-vms.ads, mlib-tgt-vms-alpha.adb, mlib-tgt-vms-ia64.adb,\n\tmlib-tgt-vxworks.adb, mlib-tgt-mingw.adb: Renamed into...\n\n\t* mlib-tgt-specific-aix.adb, mlib-tgt-specific-darwin.adb,\n\tmlib-tgt-specific-hpux.adb, mlib-tgt-specific-irix.adb,\n\tmlib-tgt-specific-linux.adb, mlib-tgt-specific-lynxos.adb,\n\tmlib-tgt-specific-solaris.adb, mlib-tgt-specific-tru64.adb,\n\tmlib-tgt-vms_common.adb, mlib-tgt-vms_common.ads,\n\tmlib-tgt-specific-vms-alpha.adb, mlib-tgt-specific-vms-ia64.adb,\n\tmlib-tgt-specific-vxworks.adb, mlib-tgt-specific-xi.adb,\n\tmlib-tgt-specific-mingw.adb: New names.\n\n\t* Makefile.in: \n\tOn VxWorks platforms use s-stchop-limit.ads for s-stchop.ads\n\tGet rid of gnatbl.\n\t(EXTRA_GNATRTL_NONTASKING_OBJS): Add s-win32.o\n\tFiles mlib-tgt-*.adb have been renamed mlib-tgt-specific-*.adb\n\tMinor updates for VMS\n\nFrom-SVN: r134007", "tree": {"sha": "c82af39473d7a121c2b8a734aaa29822ded4aec0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c82af39473d7a121c2b8a734aaa29822ded4aec0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9df6385a0c162f4acf1b932944d7f5cb86a8b209", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9df6385a0c162f4acf1b932944d7f5cb86a8b209", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9df6385a0c162f4acf1b932944d7f5cb86a8b209", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9df6385a0c162f4acf1b932944d7f5cb86a8b209/comments", "author": {"login": "vcelier", "id": 8888056, "node_id": "MDQ6VXNlcjg4ODgwNTY=", "avatar_url": "https://avatars.githubusercontent.com/u/8888056?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vcelier", "html_url": "https://github.com/vcelier", "followers_url": "https://api.github.com/users/vcelier/followers", "following_url": "https://api.github.com/users/vcelier/following{/other_user}", "gists_url": "https://api.github.com/users/vcelier/gists{/gist_id}", "starred_url": "https://api.github.com/users/vcelier/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vcelier/subscriptions", "organizations_url": "https://api.github.com/users/vcelier/orgs", "repos_url": "https://api.github.com/users/vcelier/repos", "events_url": "https://api.github.com/users/vcelier/events{/privacy}", "received_events_url": "https://api.github.com/users/vcelier/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "3824d9af3e3d65e0a3e4aeca16b2b16b37c464ea", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3824d9af3e3d65e0a3e4aeca16b2b16b37c464ea", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3824d9af3e3d65e0a3e4aeca16b2b16b37c464ea"}], "stats": {"total": 423, "additions": 337, "deletions": 86}, "files": [{"sha": "f03776d56811406c3b4ef02930c8dad74b24c13a", "filename": "gcc/ada/Makefile.in", "status": "modified", "additions": 87, "deletions": 60, "changes": 147, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9df6385a0c162f4acf1b932944d7f5cb86a8b209/gcc%2Fada%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9df6385a0c162f4acf1b932944d7f5cb86a8b209/gcc%2Fada%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FMakefile.in?ref=9df6385a0c162f4acf1b932944d7f5cb86a8b209", "patch": "@@ -400,6 +400,7 @@ ifeq ($(strip $(filter-out m68k% wrs vx%,$(targ))),)\n   s-osprim.adb<s-osprim-vxworks.adb \\\n   s-parame.ads<s-parame-vxworks.ads \\\n   s-parame.adb<s-parame-vxworks.adb \\\n+  s-stchop.ads<s-stchop-limit.ads \\\n   s-stchop.adb<s-stchop-vxworks.adb \\\n   s-taprop.adb<s-taprop-vxworks.adb \\\n   s-taspri.ads<s-taspri-vxworks.ads \\\n@@ -413,7 +414,7 @@ ifeq ($(strip $(filter-out m68k% wrs vx%,$(targ))),)\n   g-sttsne.ads<g-sttsne-locking.ads \\\n   system.ads<system-vxworks-m68k.ads\n \n-  TOOLS_TARGET_PAIRS=mlib-tgt-specific.adb<mlib-tgt-vxworks.adb\n+  TOOLS_TARGET_PAIRS=mlib-tgt-specific.adb<mlib-tgt-specific-vxworks.adb\n \n   EXTRA_GNATRTL_NONTASKING_OBJS=i-vxwork.o i-vxwoio.o\n   EXTRA_GNATRTL_TASKING_OBJS=s-vxwork.o\n@@ -441,6 +442,7 @@ ifeq ($(strip $(filter-out powerpc% wrs vxworks,$(targ))),)\n   s-osprim.adb<s-osprim-vxworks.adb \\\n   s-parame.ads<s-parame-vxworks.ads \\\n   s-parame.adb<s-parame-vxworks.adb \\\n+  s-stchop.ads<s-stchop-limit.ads \\\n   s-stchop.adb<s-stchop-vxworks.adb \\\n   s-taprop.adb<s-taprop-vxworks.adb \\\n   s-taspri.ads<s-taspri-vxworks.ads \\\n@@ -452,7 +454,7 @@ ifeq ($(strip $(filter-out powerpc% wrs vxworks,$(targ))),)\n   g-sttsne.adb<g-sttsne-vxworks.adb \\\n   g-sttsne.ads<g-sttsne-locking.ads\n \n-  TOOLS_TARGET_PAIRS=mlib-tgt-specific.adb<mlib-tgt-vxworks.adb\n+  TOOLS_TARGET_PAIRS=mlib-tgt-specific.adb<mlib-tgt-specific-vxworks.adb\n \n   ifeq ($(strip $(filter-out yes,$(TRACE))),)\n     LIBGNAT_TARGET_PAIRS += \\\n@@ -526,7 +528,7 @@ ifeq ($(strip $(filter-out powerpc% wrs vxworksae,$(targ))),)\n   g-sttsne.ads<g-sttsne-locking.ads \\\n   system.ads<system-vxworks-ppc-vthread.ads\n \n-  TOOLS_TARGET_PAIRS=mlib-tgt-specific.adb<mlib-tgt-vxworks.adb\n+  TOOLS_TARGET_PAIRS=mlib-tgt-specific.adb<mlib-tgt-specific-vxworks.adb\n \n   EXTRA_GNATRTL_NONTASKING_OBJS=i-vxwork.o i-vxwoio.o s-vxwexc.o\n   EXTRA_GNATRTL_TASKING_OBJS=s-vxwork.o\n@@ -561,6 +563,7 @@ ifeq ($(strip $(filter-out sparc% wrs vx%,$(targ))),)\n   s-osprim.adb<s-osprim-vxworks.adb \\\n   s-parame.ads<s-parame-vxworks.ads \\\n   s-parame.adb<s-parame-vxworks.adb \\\n+  s-stchop.ads<s-stchop-limit.ads \\\n   s-stchop.adb<s-stchop-vxworks.adb \\\n   s-taprop.adb<s-taprop-vxworks.adb \\\n   s-taspri.ads<s-taspri-vxworks.ads \\\n@@ -574,7 +577,7 @@ ifeq ($(strip $(filter-out sparc% wrs vx%,$(targ))),)\n   g-sttsne.ads<g-sttsne-locking.ads \\\n   system.ads<system-vxworks-sparcv9.ads   \\\n \n-  TOOLS_TARGET_PAIRS=mlib-tgt-specific.adb<mlib-tgt-vxworks.adb\n+  TOOLS_TARGET_PAIRS=mlib-tgt-specific.adb<mlib-tgt-specific-vxworks.adb\n \n   EXTRA_GNATRTL_NONTASKING_OBJS=i-vxwork.o i-vxwoio.o\n   EXTRA_GNATRTL_TASKING_OBJS=s-vxwork.o\n@@ -595,6 +598,7 @@ ifeq ($(strip $(filter-out %86 wrs vxworks,$(targ))),)\n   s-osprim.adb<s-osprim-vxworks.adb \\\n   s-parame.ads<s-parame-vxworks.ads \\\n   s-parame.adb<s-parame-vxworks.adb \\\n+  s-stchop.ads<s-stchop-limit.ads \\\n   s-stchop.adb<s-stchop-vxworks.adb \\\n   s-taprop.adb<s-taprop-vxworks.adb \\\n   s-taspri.ads<s-taspri-vxworks.ads \\\n@@ -607,7 +611,7 @@ ifeq ($(strip $(filter-out %86 wrs vxworks,$(targ))),)\n   g-sttsne.adb<g-sttsne-vxworks.adb \\\n   g-sttsne.ads<g-sttsne-locking.ads\n \n-  TOOLS_TARGET_PAIRS=mlib-tgt-specific.adb<mlib-tgt-vxworks.adb\n+  TOOLS_TARGET_PAIRS=mlib-tgt-specific.adb<mlib-tgt-specific-vxworks.adb\n \n   ifeq ($(strip $(filter-out yes,$(TRACE))),)\n     LIBGNAT_TARGET_PAIRS += \\\n@@ -664,6 +668,7 @@ ifeq ($(strip $(filter-out arm% coff wrs vx%,$(targ))),)\n   s-osprim.adb<s-osprim-vxworks.adb \\\n   s-parame.ads<s-parame-vxworks.ads \\\n   s-parame.adb<s-parame-vxworks.adb \\\n+  s-stchop.ads<s-stchop-limit.ads \\\n   s-stchop.adb<s-stchop-vxworks.adb \\\n   s-taprop.adb<s-taprop-vxworks.adb \\\n   s-taspri.ads<s-taspri-vxworks.ads \\\n@@ -677,7 +682,7 @@ ifeq ($(strip $(filter-out arm% coff wrs vx%,$(targ))),)\n   g-sttsne.ads<g-sttsne-locking.ads \\\n   system.ads<system-vxworks-arm.ads\n \n-  TOOLS_TARGET_PAIRS=mlib-tgt-specific.adb<mlib-tgt-vxworks.adb\n+  TOOLS_TARGET_PAIRS=mlib-tgt-specific.adb<mlib-tgt-specific-vxworks.adb\n \n   EXTRA_GNATRTL_NONTASKING_OBJS=i-vxwork.o i-vxwoio.o\n   EXTRA_GNATRTL_TASKING_OBJS=s-vxwork.o\n@@ -699,6 +704,7 @@ ifeq ($(strip $(filter-out mips% wrs vx%,$(targ))),)\n   s-osprim.adb<s-osprim-vxworks.adb \\\n   s-parame.ads<s-parame-vxworks.ads \\\n   s-parame.adb<s-parame-vxworks.adb \\\n+  s-stchop.ads<s-stchop-limit.ads \\\n   s-stchop.adb<s-stchop-vxworks.adb \\\n   s-taprop.adb<s-taprop-vxworks.adb \\\n   s-taspri.ads<s-taspri-vxworks.ads \\\n@@ -712,7 +718,7 @@ ifeq ($(strip $(filter-out mips% wrs vx%,$(targ))),)\n   g-sttsne.ads<g-sttsne-locking.ads \\\n   system.ads<system-vxworks-mips.ads\n \n-  TOOLS_TARGET_PAIRS=mlib-tgt-specific.adb<mlib-tgt-vxworks.adb\n+  TOOLS_TARGET_PAIRS=mlib-tgt-specific.adb<mlib-tgt-specific-vxworks.adb\n \n   EXTRA_GNATRTL_NONTASKING_OBJS=i-vxwork.o i-vxwoio.o\n   EXTRA_GNATRTL_TASKING_OBJS=s-vxwork.o\n@@ -760,7 +766,7 @@ ifeq ($(strip $(filter-out sparc% sun solaris%,$(targ))),)\n     LIBGNAT_TARGET_PAIRS = $(LIBGNAT_TARGET_PAIRS_64)\n   endif\n   \n-  TOOLS_TARGET_PAIRS=mlib-tgt-specific.adb<mlib-tgt-solaris.adb\n+  TOOLS_TARGET_PAIRS=mlib-tgt-specific.adb<mlib-tgt-specific-solaris.adb\n \n   EH_MECHANISM=-gcc\n   THREADSLIB = -lposix4 -lthread\n@@ -814,7 +820,7 @@ ifeq ($(strip $(filter-out %86 solaris2%,$(arch) $(osys))),)\n   g-soliop.ads<g-soliop-solaris.ads \\\n   system.ads<system-solaris-x86.ads\n \n-  TOOLS_TARGET_PAIRS=mlib-tgt-specific.adb<mlib-tgt-solaris.adb\n+  TOOLS_TARGET_PAIRS=mlib-tgt-specific.adb<mlib-tgt-specific-solaris.adb\n \n   EH_MECHANISM=-gcc\n   THREADSLIB = -lposix4 -lthread\n@@ -860,6 +866,7 @@ ifeq ($(strip $(filter-out %86 linux%,$(arch) $(osys))),)\n   else\n     LIBGNAT_TARGET_PAIRS += \\\n     g-soccon.ads<g-soccon-linux-x86.ads \\\n+    s-linux.ads<s-linux.ads \\\n     s-osinte.adb<s-osinte-posix.adb \\\n     s-osinte.ads<s-osinte-linux.ads \\\n     s-tasinf.ads<s-tasinf-linux.ads \\\n@@ -868,10 +875,11 @@ ifeq ($(strip $(filter-out %86 linux%,$(arch) $(osys))),)\n \n     EH_MECHANISM=-gcc\n     THREADSLIB = -lpthread\n+    EXTRA_GNATRTL_TASKING_OBJS=s-linux.o\n   endif\n \n   TOOLS_TARGET_PAIRS =  \\\n-    mlib-tgt-specific.adb<mlib-tgt-linux.adb \\\n+    mlib-tgt-specific.adb<mlib-tgt-specific-linux.adb \\\n     indepsw.adb<indepsw-gnu.adb\n \n   GNATLIB_SHARED = gnatlib-shared-dual\n@@ -928,7 +936,7 @@ ifeq ($(strip $(filter-out %86 freebsd%,$(arch) $(osys))),)\n   system.ads<system-freebsd-x86.ads\n \n   TOOLS_TARGET_PAIRS = \\\n-  mlib-tgt-specific.adb<mlib-tgt-linux.adb\n+  mlib-tgt-specific.adb<mlib-tgt-specific-linux.adb\n   GNATLIB_SHARED = gnatlib-shared-dual\n \n   EH_MECHANISM=-gcc\n@@ -944,34 +952,37 @@ ifeq ($(strip $(filter-out s390% linux%,$(arch) $(osys))),)\n     a-intnam.ads<a-intnam-linux.ads \\\n     s-inmaop.adb<s-inmaop-posix.adb \\\n     s-intman.adb<s-intman-posix.adb \\\n+    s-linux.ads<s-linux.ads \\\n     s-osinte.adb<s-osinte-posix.adb \\\n     s-osinte.ads<s-osinte-linux.ads \\\n     s-osprim.adb<s-osprim-posix.adb \\\n     s-taprop.adb<s-taprop-linux.adb \\\n     s-tasinf.ads<s-tasinf-linux.ads \\\n     s-tasinf.adb<s-tasinf-linux.adb \\\n-    s-taspri.ads<s-taspri-posix.ads \\\n+    s-taspri.ads<s-taspri-posix-noaltstack.ads \\\n     s-tpopsp.adb<s-tpopsp-posix-foreign.adb \\\n     system.ads<system-linux-s390x.ads\n   else\n     LIBGNAT_TARGET_PAIRS = \\\n     a-intnam.ads<a-intnam-linux.ads \\\n     s-inmaop.adb<s-inmaop-posix.adb \\\n     s-intman.adb<s-intman-posix.adb \\\n+    s-linux.ads<s-linux.ads \\\n     s-osinte.adb<s-osinte-posix.adb \\\n     s-osinte.ads<s-osinte-linux.ads \\\n     s-osprim.adb<s-osprim-posix.adb \\\n     s-taprop.adb<s-taprop-linux.adb \\\n     s-tasinf.ads<s-tasinf-linux.ads \\\n     s-tasinf.adb<s-tasinf-linux.adb \\\n-    s-taspri.ads<s-taspri-posix.ads \\\n+    s-taspri.ads<s-taspri-posix-noaltstack.ads \\\n     s-tpopsp.adb<s-tpopsp-posix-foreign.adb \\\n     system.ads<system-linux-s390.ads\n   endif\n \n   TOOLS_TARGET_PAIRS =  \\\n-    mlib-tgt-specific.adb<mlib-tgt-linux.adb\n+    mlib-tgt-specific.adb<mlib-tgt-specific-linux.adb\n \n+  EXTRA_GNATRTL_TASKING_OBJS=s-linux.o\n   EH_MECHANISM=-gcc\n   THREADSLIB = -lpthread\n   GNATLIB_SHARED = gnatlib-shared-dual\n@@ -1012,7 +1023,7 @@ ifeq ($(strip $(filter-out mips sgi irix%,$(targ))),)\n   endif\n \n   EH_MECHANISM=-gcc\n-  TOOLS_TARGET_PAIRS = mlib-tgt-specific.adb<mlib-tgt-irix.adb\n+  TOOLS_TARGET_PAIRS = mlib-tgt-specific.adb<mlib-tgt-specific-irix.adb\n   TGT_LIB = -lexc\n   MISCLIB = -lexc\n   PREFIX_OBJS = $(PREFIX_REAL_OBJS)\n@@ -1057,7 +1068,7 @@ ifeq ($(strip $(filter-out hppa% hp hpux11%,$(targ))),)\n   g-soccon.ads<g-soccon-hpux.ads \\\n   system.ads<system-hpux.ads\n \n-  TOOLS_TARGET_PAIRS = mlib-tgt-specific.adb<mlib-tgt-hpux.adb\n+  TOOLS_TARGET_PAIRS = mlib-tgt-specific.adb<mlib-tgt-specific-hpux.adb\n   EH_MECHANISM=-gcc\n   TGT_LIB = /usr/lib/libcl.a\n   THREADSLIB = -lpthread\n@@ -1087,15 +1098,15 @@ ifeq ($(strip $(filter-out ibm aix%,$(manu) $(osys))),)\n   PREFIX_OBJS=$(PREFIX_REAL_OBJS)\n \n   TOOLS_TARGET_PAIRS = \\\n-  mlib-tgt-specific.adb<mlib-tgt-aix.adb \\\n+  mlib-tgt-specific.adb<mlib-tgt-specific-aix.adb \\\n   indepsw.adb<indepsw-aix.adb\n \n   GMEM_LIB = gmemlib\n endif\n \n ifeq ($(strip $(filter-out lynxos,$(osys))),)\n   TOOLS_TARGET_PAIRS = \\\n-  mlib-tgt-specific.adb<mlib-tgt-lynxos.adb \\\n+  mlib-tgt-specific.adb<mlib-tgt-specific-lynxos.adb \\\n   indepsw.adb<indepsw-gnu.adb\n \n   ifeq ($(strip $(filter-out %86 lynxos,$(arch) $(osys))),)\n@@ -1171,7 +1182,7 @@ ifeq ($(strip $(filter-out alpha% dec osf%,$(targ))),)\n   g-soccon.ads<g-soccon-tru64.ads \\\n   system.ads<system-tru64.ads\n \n-  TOOLS_TARGET_PAIRS=mlib-tgt-specific.adb<mlib-tgt-tru64.adb\n+  TOOLS_TARGET_PAIRS=mlib-tgt-specific.adb<mlib-tgt-specific-tru64.adb\n \n   EH_MECHANISM=-gcc\n   GMEM_LIB=gmemlib\n@@ -1199,7 +1210,7 @@ ifeq ($(strip $(filter-out ia64 hp vms% openvms%,$(targ))),)\n   LIBGNAT_TARGET_PAIRS_AUX1 = \\\n   g-enblsp.adb<g-enblsp-vms-ia64.adb \\\n   g-trasym.adb<g-trasym-vms-ia64.adb \\\n-  s-auxdec.ads<s-auxdec-vms_64.ads \\\n+  s-asthan.adb<s-asthan-vms-ia64.adb \\\n   s-osinte.adb<s-osinte-vms-ia64.adb \\\n   s-osinte.ads<s-osinte-vms-ia64.ads \\\n   s-vaflop.adb<s-vaflop-vms-ia64.adb \\\n@@ -1212,8 +1223,9 @@ ifeq ($(strip $(filter-out alpha64 dec vms% openvms% alphavms%,$(targ))),)\n   LIBGNAT_TARGET_PAIRS_AUX1 = \\\n   g-enblsp.adb<g-enblsp-vms-alpha.adb \\\n   g-trasym.adb<g-trasym-vms-alpha.adb \\\n+  s-traent.adb<s-traent-vms.adb \\\n+  s-traent.ads<s-traent-vms.ads \\\n   s-asthan.adb<s-asthan-vms-alpha.adb \\\n-  s-auxdec.ads<s-auxdec-vms_64.ads \\\n   s-osinte.adb<s-osinte-vms.adb \\\n   s-osinte.ads<s-osinte-vms.ads \\\n   s-vaflop.adb<s-vaflop-vms-alpha.adb \\\n@@ -1250,36 +1262,41 @@ endif\n   i-cpoint.ads<i-cpoint-vms_64.ads \\\n   i-cpoint.adb<i-cpoint-vms_64.adb \\\n   i-cstrea.adb<i-cstrea-vms.adb \\\n+  memtrack.adb<memtrack-vms_64.adb \\\n+  s-auxdec.ads<s-auxdec-vms_64.ads \\\n+  s-crtl.ads<s-crtl-vms_64.ads \\\n   s-inmaop.adb<s-inmaop-vms.adb \\\n   s-interr.adb<s-interr-vms.adb \\\n   s-intman.adb<s-intman-vms.adb \\\n   s-intman.ads<s-intman-vms.ads \\\n+  s-memory.adb<s-memory-vms_64.adb \\\n+  s-memory.ads<s-memory-vms_64.ads \\\n   s-osprim.adb<s-osprim-vms.adb \\\n   s-osprim.ads<s-osprim-vms.ads \\\n   s-taprop.adb<s-taprop-vms.adb \\\n   s-taspri.ads<s-taspri-vms.ads \\\n   s-tpopsp.adb<s-tpopsp-posix-foreign.adb \\\n   s-tpopde.adb<s-tpopde-vms.adb \\\n   s-tpopde.ads<s-tpopde-vms.ads \\\n-  s-traent.adb<s-traent-vms.adb \\\n-  s-traent.ads<s-traent-vms.ads \\\n   $(LIBGNAT_TARGET_PAIRS_AUX1) \\\n   $(LIBGNAT_TARGET_PAIRS_AUX2)\n \n ifeq ($(strip $(filter-out ia64 hp vms% openvms%,$(targ))),)\n   TOOLS_TARGET_PAIRS= \\\n-  mlib-tgt-specific.adb<mlib-tgt-vms-ia64.adb \\\n+  mlib-tgt-specific.adb<mlib-tgt-specific-vms-ia64.adb \\\n   symbols.adb<symbols-vms.adb \\\n   symbols-processing.adb<symbols-processing-vms-ia64.adb\n else\n   TOOLS_TARGET_PAIRS= \\\n-  mlib-tgt-specific.adb<mlib-tgt-vms-alpha.adb \\\n+  mlib-tgt-specific.adb<mlib-tgt-specific-vms-alpha.adb \\\n   symbols.adb<symbols-vms.adb \\\n   symbols-processing.adb<symbols-processing-vms-alpha.adb\n endif\n \n+adamsg.o: adamsg.msg\n+\t-$(DECC) --cc=message adamsg.msg -o adamsg.o\n \n-  EXTRA_GNATMAKE_OBJS = mlib-tgt-vms.o\n+  EXTRA_GNATMAKE_OBJS = mlib-tgt-vms_common.o\n \n   GMEM_LIB = gmemlib\n   EH_MECHANISM=-gcc\n@@ -1288,14 +1305,16 @@ ifeq ($(strip $(filter-out alpha64 dec vms% openvms% alphavms%,$(targ))),)\n   EXTRA_LIBGNAT_SRCS=vmshandler.asm\n   EXTRA_LIBGNAT_OBJS=vmshandler.o\n endif\n+  EXTRA_LIBGNAT_SRCS+=adamsg.msg\n+  EXTRA_LIBGNAT_OBJS+=adamsg.o\n   EXTRA_GNATRTL_TASKING_OBJS=s-tpopde.o\n   EXTRA_GNATTOOLS = \\\n      ../../gnatlbr$(exeext)  \\\n      ../../gnatsym$(exeext)  \\\n      ../../vms_help$(exeext) \\\n      ../../gnat.hlp\n   # This command transforms (YYYYMMDD) into YY,MMDD\n-  GSMATCH_VERSION := $(shell grep \"^ *Gnat_Static_Version_String\" $(fsrcpfx)gnatvsn.ads | sed -e 's/.*(\\(.*\\)).*/\\1/' -e 's/\\(..\\)\\(..\\)\\(....\\)/\\2,\\3/')\n+  GSMATCH_VERSION := $(shell grep \"^ *Gnat_Static_Version_String\" $(fsrcpfx)gnatvsn.ads | sed -e 's/.*(\\(.*\\)).*/\\1/' -e 's/\\(..\\)\\(..\\)\\(....\\).*/\\2,\\3/')\n   TOOLS_LIBS_LO := --for-linker=sys\\\\$$\\$$library:trace.exe\n   LIBRARY_VERSION := $(subst .,_,$(LIB_VERSION))\n endif\n@@ -1317,8 +1336,7 @@ ifeq ($(strip $(filter-out cygwin32% mingw32% pe,$(osys))),)\n   g-socthi.adb<g-socthi-mingw.adb \\\n   g-stsifd.adb<g-stsifd-sockets.adb \\\n   g-soccon.ads<g-soccon-mingw.ads \\\n-  g-soliop.ads<g-soliop-mingw.ads \\\n-  g-sercom.adb<g-sercom-mingw.adb\n+  g-soliop.ads<g-soliop-mingw.ads\n \n   ifeq ($(strip $(filter-out rtx_w32 rtx_rtss,$(THREAD_KIND))),)\n     LIBGNAT_TARGET_PAIRS += \\\n@@ -1328,22 +1346,25 @@ ifeq ($(strip $(filter-out cygwin32% mingw32% pe,$(osys))),)\n     s-taprop.adb<s-taprop-rtx.adb \\\n     system.ads<system-rtx.ads\n \n+    EXTRA_GNATRTL_NONTASKING_OBJS = s-win32.o\n+\n     MISCLIB = -lwsock32 -lrtapi_w32\n     THREADSLIB=-lrtapi_w32\n   else\n     LIBGNAT_TARGET_PAIRS += \\\n     a-exetim.adb<a-exetim-mingw.adb \\\n     a-exetim.ads<a-exetim-mingw.ads \\\n     a-intnam.ads<a-intnam-mingw.ads \\\n+    g-sercom.adb<g-sercom-mingw.adb \\\n     s-interr.adb<s-interr-sigaction.adb \\\n     s-intman.adb<s-intman-mingw.adb \\\n     s-osinte.ads<s-osinte-mingw.ads \\\n     s-osprim.adb<s-osprim-mingw.adb \\\n     s-taprop.adb<s-taprop-mingw.adb \\\n     system.ads<system-mingw.ads\n \n-    EXTRA_GNATRTL_NONTASKING_OBJS = g-regist.o\n-    EXTRA_GNATRTL_TASKING_OBJS=a-exetim.o\n+    EXTRA_GNATRTL_NONTASKING_OBJS = s-win32.o s-win32.o g-regist.o\n+    EXTRA_GNATRTL_TASKING_OBJS = a-exetim.o\n \n     MISCLIB = -lwsock32\n \n@@ -1353,7 +1374,7 @@ ifeq ($(strip $(filter-out cygwin32% mingw32% pe,$(osys))),)\n   endif\n \n   TOOLS_TARGET_PAIRS= \\\n-  mlib-tgt-specific.adb<mlib-tgt-mingw.adb \\\n+  mlib-tgt-specific.adb<mlib-tgt-specific-mingw.adb \\\n   indepsw.adb<indepsw-mingw.adb\n \n   EH_MECHANISM=-gcc\n@@ -1371,6 +1392,7 @@ ifeq ($(strip $(filter-out mips linux%,$(arch) $(osys))),)\n   g-soccon.ads<g-soccon-linux-mips.ads \\\n   s-inmaop.adb<s-inmaop-posix.adb \\\n   s-intman.adb<s-intman-posix.adb \\\n+  s-linux.ads<s-linux.ads \\\n   s-osinte.adb<s-osinte-posix.adb \\\n   s-osinte.ads<s-osinte-linux.ads \\\n   s-osprim.adb<s-osprim-posix.adb \\\n@@ -1395,6 +1417,7 @@ ifeq ($(strip $(filter-out mipsel linux%,$(arch) $(osys))),)\n   g-soccon.ads<g-soccon-linux-mips.ads \\\n   s-inmaop.adb<s-inmaop-posix.adb \\\n   s-intman.adb<s-intman-posix.adb \\\n+  s-linux.ads<s-linux.ads \\\n   s-osinte.adb<s-osinte-posix.adb \\\n   s-osinte.ads<s-osinte-linux.ads \\\n   s-osprim.adb<s-osprim-posix.adb \\\n@@ -1419,21 +1442,23 @@ ifeq ($(strip $(filter-out powerpc% linux%,$(arch) $(osys))),)\n   g-soccon.ads<g-soccon-linux-ppc.ads \\\n   s-inmaop.adb<s-inmaop-posix.adb \\\n   s-intman.adb<s-intman-posix.adb \\\n+  s-linux.ads<s-linux.ads \\\n   s-osinte.adb<s-osinte-posix.adb \\\n   s-osinte.ads<s-osinte-linux.ads \\\n   s-osprim.adb<s-osprim-posix.adb \\\n   s-taprop.adb<s-taprop-linux.adb \\\n   s-tasinf.ads<s-tasinf-linux.ads \\\n   s-tasinf.adb<s-tasinf-linux.adb \\\n-  s-taspri.ads<s-taspri-posix.ads \\\n+  s-taspri.ads<s-taspri-posix-noaltstack.ads \\\n   s-tpopsp.adb<s-tpopsp-posix-foreign.adb \\\n   g-sercom.adb<g-sercom-linux.adb \\\n   system.ads<system-linux-ppc.ads\n \n   TOOLS_TARGET_PAIRS =  \\\n-    mlib-tgt-specific.adb<mlib-tgt-linux.adb \\\n+    mlib-tgt-specific.adb<mlib-tgt-specific-linux.adb \\\n     indepsw.adb<indepsw-gnu.adb\n \n+  EXTRA_GNATRTL_TASKING_OBJS=s-linux.o\n   EH_MECHANISM=-gcc\n   THREADSLIB = -lpthread\n   GNATLIB_SHARED = gnatlib-shared-dual\n@@ -1447,20 +1472,22 @@ ifeq ($(strip $(filter-out sparc% linux%,$(arch) $(osys))),)\n   a-intnam.ads<a-intnam-linux.ads \\\n   s-inmaop.adb<s-inmaop-posix.adb \\\n   s-intman.adb<s-intman-posix.adb \\\n+  s-linux.ads<s-linux.ads \\\n   s-osinte.adb<s-osinte-posix.adb \\\n   s-osinte.ads<s-osinte-linux.ads \\\n   s-osprim.adb<s-osprim-posix.adb \\\n   s-taprop.adb<s-taprop-linux.adb \\\n   s-tasinf.ads<s-tasinf-linux.ads \\\n   s-tasinf.adb<s-tasinf-linux.adb \\\n-  s-taspri.ads<s-taspri-posix.ads \\\n+  s-taspri.ads<s-taspri-posix-noaltstack.ads \\\n   s-tpopsp.adb<s-tpopsp-posix-foreign.adb \\\n   system.ads<system-linux-sparc.ads\n \n   TOOLS_TARGET_PAIRS =  \\\n-    mlib-tgt-specific.adb<mlib-tgt-linux.adb \\\n+    mlib-tgt-specific.adb<mlib-tgt-specific-linux.adb \\\n     indepsw.adb<indepsw-gnu.adb\n \n+  EXTRA_GNATRTL_TASKING_OBJS=s-linux.o\n   EH_MECHANISM=-gcc\n   THREADSLIB = -lpthread\n   GNATLIB_SHARED = gnatlib-shared-dual\n@@ -1474,20 +1501,22 @@ ifeq ($(strip $(filter-out hppa% linux%,$(arch) $(osys))),)\n   a-intnam.ads<a-intnam-linux.ads \\\n   s-inmaop.adb<s-inmaop-posix.adb \\\n   s-intman.adb<s-intman-posix.adb \\\n+  s-linux.ads<s-linux-hppa.ads \\\n   s-osinte.adb<s-osinte-posix.adb \\\n-  s-osinte.ads<s-osinte-linux-hppa.ads \\\n+  s-osinte.ads<s-osinte-linux.ads \\\n   s-osprim.adb<s-osprim-posix.adb \\\n   s-taprop.adb<s-taprop-linux.adb \\\n   s-tasinf.ads<s-tasinf-linux.ads \\\n   s-tasinf.adb<s-tasinf-linux.adb \\\n-  s-taspri.ads<s-taspri-posix.ads \\\n+  s-taspri.ads<s-taspri-posix-noaltstack.ads \\\n   s-tpopsp.adb<s-tpopsp-posix-foreign.adb \\\n   system.ads<system-linux-hppa.ads\n \n   TOOLS_TARGET_PAIRS =  \\\n-    mlib-tgt-specific.adb<mlib-tgt-linux.adb \\\n+    mlib-tgt-specific.adb<mlib-tgt-specific-linux.adb \\\n     indepsw.adb<indepsw-gnu.adb\n \n+  EXTRA_GNATRTL_TASKING_OBJS=s-linux.o\n   EH_MECHANISM=-gcc\n   THREADSLIB = -lpthread\n   GNATLIB_SHARED = gnatlib-shared-dual\n@@ -1531,21 +1560,23 @@ ifeq ($(strip $(filter-out %ia64 linux%,$(arch) $(osys))),)\n   g-soccon.ads<g-soccon-linux-64.ads \\\n   s-inmaop.adb<s-inmaop-posix.adb \\\n   s-intman.adb<s-intman-posix.adb \\\n+  s-linux.ads<s-linux.ads \\\n   s-osinte.ads<s-osinte-linux.ads \\\n   s-osinte.adb<s-osinte-posix.adb \\\n   s-osprim.adb<s-osprim-posix.adb \\\n   s-taprop.adb<s-taprop-linux.adb \\\n   s-tasinf.ads<s-tasinf-linux.ads \\\n   s-tasinf.adb<s-tasinf-linux.adb \\\n   s-tpopsp.adb<s-tpopsp-posix-foreign.adb \\\n-  s-taspri.ads<s-taspri-posix.ads \\\n+  s-taspri.ads<s-taspri-posix-noaltstack.ads \\\n   g-sercom.adb<g-sercom-linux.adb \\\n   system.ads<system-linux-ia64.ads\n \n   TOOLS_TARGET_PAIRS =  \\\n-    mlib-tgt-specific.adb<mlib-tgt-linux.adb \\\n+    mlib-tgt-specific.adb<mlib-tgt-specific-linux.adb \\\n     indepsw.adb<indepsw-gnu.adb\n \n+  EXTRA_GNATRTL_TASKING_OBJS=s-linux.o\n   EH_MECHANISM=-gcc\n   MISCLIB=\n   THREADSLIB=-lpthread\n@@ -1560,20 +1591,22 @@ ifeq ($(strip $(filter-out alpha% linux%,$(arch) $(osys))),)\n   a-intnam.ads<a-intnam-linux.ads \\\n   s-inmaop.adb<s-inmaop-posix.adb \\\n   s-intman.adb<s-intman-posix.adb \\\n-  s-osinte.ads<s-osinte-linux-alpha.ads \\\n+  s-linux.ads<s-linux-alpha.ads \\\n+  s-osinte.ads<s-osinte-linux.ads \\\n   s-osinte.adb<s-osinte-posix.adb \\\n   s-osprim.adb<s-osprim-posix.adb \\\n   s-taprop.adb<s-taprop-linux.adb \\\n   s-tasinf.ads<s-tasinf-linux.ads \\\n   s-tasinf.adb<s-tasinf-linux.adb \\\n   s-tpopsp.adb<s-tpopsp-posix-foreign.adb \\\n-  s-taspri.ads<s-taspri-posix.ads \\\n+  s-taspri.ads<s-taspri-posix-noaltstack.ads \\\n   system.ads<system-linux-alpha.ads\n \n   TOOLS_TARGET_PAIRS =  \\\n-    mlib-tgt-specific.adb<mlib-tgt-linux.adb \\\n+    mlib-tgt-specific.adb<mlib-tgt-specific-linux.adb \\\n     indepsw.adb<indepsw-gnu.adb\n \n+  EXTRA_GNATRTL_TASKING_OBJS=s-linux.o\n   EH_MECHANISM=-gcc\n   MISCLIB=\n   THREADSLIB=-lpthread\n@@ -1590,6 +1623,7 @@ ifeq ($(strip $(filter-out %x86_64 linux%,$(arch) $(osys))),)\n   g-soccon.ads<g-soccon-linux-64.ads \\\n   s-inmaop.adb<s-inmaop-posix.adb \\\n   s-intman.adb<s-intman-posix.adb \\\n+  s-linux.ads<s-linux.ads \\\n   s-osinte.ads<s-osinte-linux.ads \\\n   s-osinte.adb<s-osinte-posix.adb \\\n   s-osprim.adb<s-osprim-posix.adb \\\n@@ -1602,9 +1636,10 @@ ifeq ($(strip $(filter-out %x86_64 linux%,$(arch) $(osys))),)\n   system.ads<system-linux-x86_64.ads\n \n   TOOLS_TARGET_PAIRS =  \\\n-    mlib-tgt-specific.adb<mlib-tgt-linux.adb \\\n+    mlib-tgt-specific.adb<mlib-tgt-specific-linux.adb \\\n     indepsw.adb<indepsw-gnu.adb\n \n+  EXTRA_GNATRTL_TASKING_OBJS=s-linux.o\n   EH_MECHANISM=-gcc\n   THREADSLIB=-lpthread\n   GNATLIB_SHARED=gnatlib-shared-dual\n@@ -1647,7 +1682,7 @@ ifeq ($(strip $(filter-out darwin%,$(osys))),)\n   endif\n \n   TOOLS_TARGET_PAIRS =  \\\n-    mlib-tgt-specific.adb<mlib-tgt-darwin.adb\n+    mlib-tgt-specific.adb<mlib-tgt-specific-darwin.adb\n \n   EH_MECHANISM=-gcc\n   GNATLIB_SHARED = gnatlib-shared-darwin\n@@ -1837,12 +1872,6 @@ gnatlink-re:  link.o targext.o\n \t$(GCC_LINK) $(ALL_CFLAGS) $(LDFLAGS) -o $@ b_gnatl.o $(GNATLINK_OBJS) \\\n \t\t    $(TOOLS_LIBS)\n \n-../../gnatbl$(exeext): gnatbl.o\n-\t$(GCC_LINK) -o $@ $(ALL_CFLAGS) $(LDFLAGS) gnatbl.o $(TOOLS_LIBS)\n-\n-gnatbl.o: gnatbl.c adaint.h\n-\t$(CC) $(ALL_CFLAGS) $(INCLUDES) -c $< $(OUTPUT_OPTION)\n-\n ../stamp-gnatlib:\n \t@if [ ! -f stamp-gnatlib ] ; \\\n \tthen \\\n@@ -2089,20 +2118,18 @@ gnatlib-shared-vms:\n \t     THREAD_KIND=\"$(THREAD_KIND)\" \\\n              gnatlib\n \t$(RM) rts/libgna*$(soext)\n-\tcd rts && echo \"case_sensitive=yes\" > SYMVEC_$$$$.opt && \\\n-\tobjdump --syms $(LIBGNAT_OBJS) $(GNATRTL_NONTASKING_OBJS) | \\\n-\t$(SHLIB_SYMVEC) >> SYMVEC_$$$$.opt && \\\n-\techo \"case_sensitive=NO\" >> SYMVEC_$$$$.opt && \\\n+\tcd rts && \\\n+\t../../gnatsym -s SYMVEC_$$$$.opt \\\n+\t$(LIBGNAT_OBJS) $(GNATRTL_NONTASKING_OBJS) && \\\n \t../../xgcc -g -B../../ -shared -shared-libgcc \\\n \t   -o libgnat$(hyphen)$(LIBRARY_VERSION)$(soext) libgnat.a \\\n \t   sys\\$$library:trace.exe \\\n \t   --for-linker=/noinform \\\n \t   --for-linker=SYMVEC_$$$$.opt \\\n \t   --for-linker=gsmatch=equal,$(GSMATCH_VERSION)\n-\tcd rts && echo \"case_sensitive=yes\" > SYMVEC_$$$$.opt && \\\n-\tobjdump --syms $(GNATRTL_TASKING_OBJS) | \\\n-\t$(SHLIB_SYMVEC) >> SYMVEC_$$$$.opt && \\\n-\techo \"case_sensitive=NO\" >> SYMVEC_$$$$.opt && \\\n+\tcd rts && \\\n+\t../../gnatsym -s SYMVEC_$$$$.opt \\\n+\t$(GNATRTL_TASKING_OBJS) && \\\n \t../../xgcc -g -B../../ -shared -shared-libgcc \\\n \t   -o libgnarl$(hyphen)$(LIBRARY_VERSION)$(soext) \\\n \t   libgnarl.a libgnat$(hyphen)$(LIBRARY_VERSION)$(soext) \\"}, {"sha": "9fb8b1593f92f9ce8e96f7be10496633aa269790", "filename": "gcc/ada/mlib-tgt-specific-aix.adb", "status": "renamed", "additions": 16, "deletions": 2, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9df6385a0c162f4acf1b932944d7f5cb86a8b209/gcc%2Fada%2Fmlib-tgt-specific-aix.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9df6385a0c162f4acf1b932944d7f5cb86a8b209/gcc%2Fada%2Fmlib-tgt-specific-aix.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fmlib-tgt-specific-aix.adb?ref=9df6385a0c162f4acf1b932944d7f5cb86a8b209", "patch": "@@ -7,7 +7,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---                     Copyright (C) 2003-2007, AdaCore                     --\n+--                     Copyright (C) 2003-2008, AdaCore                     --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -37,7 +37,11 @@ with Prj.Util; use Prj.Util;\n \n package body MLib.Tgt.Specific is\n \n-   --  Non default subprograms\n+   --  Local subprograms\n+   --  These *ALL* require comments ???\n+\n+   function Archive_Indexer return String;\n+   --  What is this???\n \n    procedure Build_Dynamic_Library\n      (Ofiles       : Argument_List;\n@@ -82,6 +86,15 @@ package body MLib.Tgt.Specific is\n    --  libgnarl. Depends on the thread library (Native or FSU). Resolved for\n    --  the first library linked against libgnarl.\n \n+   ---------------------\n+   -- Archive_Indexer --\n+   ---------------------\n+\n+   function Archive_Indexer return String is\n+   begin\n+      return \"\";\n+   end Archive_Indexer;\n+\n    ---------------------------\n    -- Build_Dynamic_Library --\n    ---------------------------\n@@ -202,6 +215,7 @@ package body MLib.Tgt.Specific is\n    end Support_For_Libraries;\n \n begin\n+   Archive_Indexer_Ptr := Archive_Indexer'Access;\n    Build_Dynamic_Library_Ptr := Build_Dynamic_Library'Access;\n    DLL_Ext_Ptr := DLL_Ext'Access;\n    Library_Major_Minor_Id_Supported_Ptr :=", "previous_filename": "gcc/ada/mlib-tgt-aix.adb"}, {"sha": "5bab21df7979c4a06afa4e711e7d5951b85480db", "filename": "gcc/ada/mlib-tgt-specific-darwin.adb", "status": "renamed", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9df6385a0c162f4acf1b932944d7f5cb86a8b209/gcc%2Fada%2Fmlib-tgt-specific-darwin.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9df6385a0c162f4acf1b932944d7f5cb86a8b209/gcc%2Fada%2Fmlib-tgt-specific-darwin.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fmlib-tgt-specific-darwin.adb?ref=9df6385a0c162f4acf1b932944d7f5cb86a8b209", "patch": "@@ -7,7 +7,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 2001-2007, Free Software Foundation, Inc.         --\n+--          Copyright (C) 2001-2008, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -113,7 +113,7 @@ package body MLib.Tgt.Specific is\n \n       if Lib_Version = \"\" then\n          Utl.Gcc\n-           (Output_File => Lib_File,\n+           (Output_File => Lib_Path,\n             Objects     => Ofiles,\n             Options     => Options & Shared_Options,\n             Driver_Name => Driver_Name,\n@@ -131,7 +131,7 @@ package body MLib.Tgt.Specific is\n                   Options     => Options & Shared_Options,\n                   Driver_Name => Driver_Name,\n                   Options_2   => No_Argument_List);\n-               Symbolic_Link_Needed := Lib_Version /= Lib_File;\n+               Symbolic_Link_Needed := Lib_Version /= Lib_Path;\n \n             else\n                Utl.Gcc\n@@ -141,7 +141,7 @@ package body MLib.Tgt.Specific is\n                   Driver_Name => Driver_Name,\n                   Options_2   => No_Argument_List);\n                Symbolic_Link_Needed :=\n-                 Lib_Dir & Directory_Separator & Lib_Version /= Lib_File;\n+                 Lib_Dir & Directory_Separator & Lib_Version /= Lib_Path;\n             end if;\n \n             if Symbolic_Link_Needed then", "previous_filename": "gcc/ada/mlib-tgt-darwin.adb"}, {"sha": "720b0860adf807574c28bd5ec76d79c75912f5cd", "filename": "gcc/ada/mlib-tgt-specific-hpux.adb", "status": "renamed", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9df6385a0c162f4acf1b932944d7f5cb86a8b209/gcc%2Fada%2Fmlib-tgt-specific-hpux.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9df6385a0c162f4acf1b932944d7f5cb86a8b209/gcc%2Fada%2Fmlib-tgt-specific-hpux.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fmlib-tgt-specific-hpux.adb?ref=9df6385a0c162f4acf1b932944d7f5cb86a8b209", "patch": "@@ -7,7 +7,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---                     Copyright (C) 2003-2007, AdaCore                     --\n+--                     Copyright (C) 2003-2008, AdaCore                     --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --", "previous_filename": "gcc/ada/mlib-tgt-hpux.adb"}, {"sha": "efdb5f7d73185e4c2d40c96489cae442d8228b55", "filename": "gcc/ada/mlib-tgt-specific-irix.adb", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9df6385a0c162f4acf1b932944d7f5cb86a8b209/gcc%2Fada%2Fmlib-tgt-specific-irix.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9df6385a0c162f4acf1b932944d7f5cb86a8b209/gcc%2Fada%2Fmlib-tgt-specific-irix.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fmlib-tgt-specific-irix.adb?ref=9df6385a0c162f4acf1b932944d7f5cb86a8b209", "previous_filename": "gcc/ada/mlib-tgt-irix.adb"}, {"sha": "60557fdf579fbd6cf15b170e9a12e3aee489abef", "filename": "gcc/ada/mlib-tgt-specific-linux.adb", "status": "renamed", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9df6385a0c162f4acf1b932944d7f5cb86a8b209/gcc%2Fada%2Fmlib-tgt-specific-linux.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9df6385a0c162f4acf1b932944d7f5cb86a8b209/gcc%2Fada%2Fmlib-tgt-specific-linux.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fmlib-tgt-specific-linux.adb?ref=9df6385a0c162f4acf1b932944d7f5cb86a8b209", "patch": "@@ -68,7 +68,7 @@ package body MLib.Tgt.Specific is\n       pragma Unreferenced (Interfaces);\n       pragma Unreferenced (Symbol_Data);\n       pragma Unreferenced (Auto_Init);\n-      --  Initialization is done through the constructor mechanism\n+      --  Initialization is done through the contructor mechanism\n \n       Lib_File : constant String :=\n                    \"lib\" & Fil.Append_To (Lib_Filename, DLL_Ext);", "previous_filename": "gcc/ada/mlib-tgt-linux.adb"}, {"sha": "83ca4192e16f3a00d578139a050299ac51ba0552", "filename": "gcc/ada/mlib-tgt-specific-lynxos.adb", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9df6385a0c162f4acf1b932944d7f5cb86a8b209/gcc%2Fada%2Fmlib-tgt-specific-lynxos.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9df6385a0c162f4acf1b932944d7f5cb86a8b209/gcc%2Fada%2Fmlib-tgt-specific-lynxos.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fmlib-tgt-specific-lynxos.adb?ref=9df6385a0c162f4acf1b932944d7f5cb86a8b209", "previous_filename": "gcc/ada/mlib-tgt-lynxos.adb"}, {"sha": "78b1a8322f92cf4b95125d3a8b70179eddcfed32", "filename": "gcc/ada/mlib-tgt-specific-mingw.adb", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9df6385a0c162f4acf1b932944d7f5cb86a8b209/gcc%2Fada%2Fmlib-tgt-specific-mingw.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9df6385a0c162f4acf1b932944d7f5cb86a8b209/gcc%2Fada%2Fmlib-tgt-specific-mingw.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fmlib-tgt-specific-mingw.adb?ref=9df6385a0c162f4acf1b932944d7f5cb86a8b209", "previous_filename": "gcc/ada/mlib-tgt-mingw.adb"}, {"sha": "3b0e49a5e8d3a6a64ea5ff6b26777d2bf3ff1b7e", "filename": "gcc/ada/mlib-tgt-specific-solaris.adb", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9df6385a0c162f4acf1b932944d7f5cb86a8b209/gcc%2Fada%2Fmlib-tgt-specific-solaris.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9df6385a0c162f4acf1b932944d7f5cb86a8b209/gcc%2Fada%2Fmlib-tgt-specific-solaris.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fmlib-tgt-specific-solaris.adb?ref=9df6385a0c162f4acf1b932944d7f5cb86a8b209", "previous_filename": "gcc/ada/mlib-tgt-solaris.adb"}, {"sha": "7e6bcc20605911c964637ace7ae1822ccfc03364", "filename": "gcc/ada/mlib-tgt-specific-tru64.adb", "status": "renamed", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9df6385a0c162f4acf1b932944d7f5cb86a8b209/gcc%2Fada%2Fmlib-tgt-specific-tru64.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9df6385a0c162f4acf1b932944d7f5cb86a8b209/gcc%2Fada%2Fmlib-tgt-specific-tru64.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fmlib-tgt-specific-tru64.adb?ref=9df6385a0c162f4acf1b932944d7f5cb86a8b209", "patch": "@@ -7,7 +7,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 2002-2007, Free Software Foundation, Inc.         --\n+--          Copyright (C) 2002-2008, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -24,7 +24,7 @@\n --                                                                          --\n ------------------------------------------------------------------------------\n \n---  This is the Tru64 version of the body\n+--  This is the True64 version of the body\n \n with MLib.Fil;\n with MLib.Utl;", "previous_filename": "gcc/ada/mlib-tgt-tru64.adb"}, {"sha": "291293607f9cd79023e1eed49b25a673117532e2", "filename": "gcc/ada/mlib-tgt-specific-vms-alpha.adb", "status": "renamed", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9df6385a0c162f4acf1b932944d7f5cb86a8b209/gcc%2Fada%2Fmlib-tgt-specific-vms-alpha.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9df6385a0c162f4acf1b932944d7f5cb86a8b209/gcc%2Fada%2Fmlib-tgt-specific-vms-alpha.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fmlib-tgt-specific-vms-alpha.adb?ref=9df6385a0c162f4acf1b932944d7f5cb86a8b209", "patch": "@@ -7,7 +7,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 2003-2007, Free Software Foundation, Inc.         --\n+--          Copyright (C) 2003-2008, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -31,9 +31,9 @@ with Ada.Characters.Handling; use Ada.Characters.Handling;\n with MLib.Fil;\n with MLib.Utl;\n \n-with MLib.Tgt.VMS;\n-pragma Warnings (Off, MLib.Tgt.VMS);\n---  MLib.Tgt.VMS is with'ed only for elaboration purposes\n+with MLib.Tgt.VMS_Common;\n+pragma Warnings (Off, MLib.Tgt.VMS_Common);\n+--  MLib.Tgt.VMS_Common is with'ed only for elaboration purposes\n \n with Opt;      use Opt;\n with Output;   use Output;", "previous_filename": "gcc/ada/mlib-tgt-vms-alpha.adb"}, {"sha": "baa8ce213f1d5c1982c77707db71d52752c2b73c", "filename": "gcc/ada/mlib-tgt-specific-vms-ia64.adb", "status": "renamed", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9df6385a0c162f4acf1b932944d7f5cb86a8b209/gcc%2Fada%2Fmlib-tgt-specific-vms-ia64.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9df6385a0c162f4acf1b932944d7f5cb86a8b209/gcc%2Fada%2Fmlib-tgt-specific-vms-ia64.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fmlib-tgt-specific-vms-ia64.adb?ref=9df6385a0c162f4acf1b932944d7f5cb86a8b209", "patch": "@@ -7,7 +7,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 2004-2007, Free Software Foundation, Inc.         --\n+--          Copyright (C) 2004-2008, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -31,9 +31,9 @@ with Ada.Characters.Handling; use Ada.Characters.Handling;\n with MLib.Fil;\n with MLib.Utl;\n \n-with MLib.Tgt.VMS;\n-pragma Warnings (Off, MLib.Tgt.VMS);\n---  MLib.Tgt.VMS is with'ed only for elaboration purposes\n+with MLib.Tgt.VMS_Common;\n+pragma Warnings (Off, MLib.Tgt.VMS_Common);\n+--  MLib.Tgt.VMS_Common is with'ed only for elaboration purposes\n \n with Opt;      use Opt;\n with Output;   use Output;", "previous_filename": "gcc/ada/mlib-tgt-vms-ia64.adb"}, {"sha": "54967b8bd43f37e171b6b10ca64dd1c6f2350575", "filename": "gcc/ada/mlib-tgt-specific-vxworks.adb", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9df6385a0c162f4acf1b932944d7f5cb86a8b209/gcc%2Fada%2Fmlib-tgt-specific-vxworks.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9df6385a0c162f4acf1b932944d7f5cb86a8b209/gcc%2Fada%2Fmlib-tgt-specific-vxworks.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fmlib-tgt-specific-vxworks.adb?ref=9df6385a0c162f4acf1b932944d7f5cb86a8b209", "previous_filename": "gcc/ada/mlib-tgt-vxworks.adb"}, {"sha": "9d179ff0e6b65e37f2e482bb4e2c3d49c9e24fe9", "filename": "gcc/ada/mlib-tgt-specific-xi.adb", "status": "added", "additions": 210, "deletions": 0, "changes": 210, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9df6385a0c162f4acf1b932944d7f5cb86a8b209/gcc%2Fada%2Fmlib-tgt-specific-xi.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9df6385a0c162f4acf1b932944d7f5cb86a8b209/gcc%2Fada%2Fmlib-tgt-specific-xi.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fmlib-tgt-specific-xi.adb?ref=9df6385a0c162f4acf1b932944d7f5cb86a8b209", "patch": "@@ -0,0 +1,210 @@\n+------------------------------------------------------------------------------\n+--                                                                          --\n+--                         GNAT COMPILER COMPONENTS                         --\n+--                                                                          --\n+--                     M L I B . T G T. S P E C I F I C                     --\n+--                           (Bare Board Version)                           --\n+--                                                                          --\n+--                                 B o d y                                  --\n+--                                                                          --\n+--          Copyright (C) 2003-2007, Free Software Foundation, Inc.         --\n+--                                                                          --\n+-- GNAT is free software;  you can  redistribute it  and/or modify it under --\n+-- terms of the  GNU General Public License as published  by the Free Soft- --\n+-- ware  Foundation;  either version 3,  or (at your option) any later ver- --\n+-- sion.  GNAT is distributed in the hope that it will be useful, but WITH- --\n+-- OUT ANY WARRANTY;  without even the  implied warranty of MERCHANTABILITY --\n+-- or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License --\n+-- for  more details.  You should have  received  a copy of the GNU General --\n+-- Public License  distributed with GNAT; see file COPYING3.  If not, go to --\n+-- http://www.gnu.org/licenses for a complete copy of the license.          --\n+--                                                                          --\n+-- GNAT was originally developed  by the GNAT team at  New York University. --\n+-- Extensive contributions were provided by Ada Core Technologies Inc.      --\n+--                                                                          --\n+------------------------------------------------------------------------------\n+\n+--  This is the bare board version of the body\n+\n+with Sdefault;\n+with Types; use Types;\n+\n+package body MLib.Tgt.Specific is\n+\n+   -----------------------\n+   -- Local Subprograms --\n+   -----------------------\n+\n+   function Get_Target_Prefix return String;\n+   --  Returns the required prefix for some utilities\n+   --  (such as ar and ranlib) that depend on the real target.\n+\n+   --  Non default subprograms\n+\n+   function Archive_Builder return String;\n+\n+   function Archive_Indexer return String;\n+\n+   procedure Build_Dynamic_Library\n+     (Ofiles       : Argument_List;\n+      Options      : Argument_List;\n+      Interfaces   : Argument_List;\n+      Lib_Filename : String;\n+      Lib_Dir      : String;\n+      Symbol_Data  : Symbol_Record;\n+      Driver_Name  : Name_Id := No_Name;\n+      Lib_Version  : String  := \"\";\n+      Auto_Init    : Boolean := False);\n+\n+   function DLL_Ext return String;\n+\n+   function Dynamic_Option return String;\n+\n+   function Library_Major_Minor_Id_Supported return Boolean;\n+\n+   function PIC_Option return String;\n+\n+   function Standalone_Library_Auto_Init_Is_Supported return Boolean;\n+\n+   function Support_For_Libraries return Library_Support;\n+\n+   ---------------------\n+   -- Archive_Builder --\n+   ---------------------\n+\n+   function Archive_Builder return String is\n+   begin\n+      return Get_Target_Prefix & \"ar\";\n+   end Archive_Builder;\n+\n+   ---------------------\n+   -- Archive_Indexer --\n+   ---------------------\n+\n+   function Archive_Indexer return String is\n+   begin\n+      return Get_Target_Prefix & \"ranlib\";\n+   end Archive_Indexer;\n+\n+   ---------------------------\n+   -- Build_Dynamic_Library --\n+   ---------------------------\n+\n+   procedure Build_Dynamic_Library\n+     (Ofiles       : Argument_List;\n+      Options      : Argument_List;\n+      Interfaces   : Argument_List;\n+      Lib_Filename : String;\n+      Lib_Dir      : String;\n+      Symbol_Data  : Symbol_Record;\n+      Driver_Name  : Name_Id := No_Name;\n+      Lib_Version  : String  := \"\";\n+      Auto_Init    : Boolean := False)\n+   is\n+      pragma Unreferenced (Ofiles);\n+      pragma Unreferenced (Options);\n+      pragma Unreferenced (Interfaces);\n+      pragma Unreferenced (Lib_Filename);\n+      pragma Unreferenced (Lib_Dir);\n+      pragma Unreferenced (Symbol_Data);\n+      pragma Unreferenced (Driver_Name);\n+      pragma Unreferenced (Lib_Version);\n+      pragma Unreferenced (Auto_Init);\n+\n+   begin\n+      null;\n+   end Build_Dynamic_Library;\n+\n+   -------------\n+   -- DLL_Ext --\n+   -------------\n+\n+   function DLL_Ext return String is\n+   begin\n+      return \"\";\n+   end DLL_Ext;\n+\n+   --------------------\n+   -- Dynamic_Option --\n+   --------------------\n+\n+   function Dynamic_Option return String is\n+   begin\n+      return \"\";\n+   end Dynamic_Option;\n+\n+   -----------------------\n+   -- Get_Target_Prefix --\n+   -----------------------\n+\n+   function Get_Target_Prefix return String is\n+      Target_Name : constant String_Ptr := Sdefault.Target_Name;\n+      Index       : Positive            := Target_Name'First;\n+\n+   begin\n+      while Index < Target_Name'Last\n+        and then Target_Name (Index + 1) /= '-'\n+      loop\n+         Index := Index + 1;\n+      end loop;\n+\n+      if Target_Name (Target_Name'First .. Index) = \"erc32\" then\n+         return \"erc32-elf-\";\n+      elsif Target_Name (Target_Name'First .. Index) = \"leon\" then\n+         return \"leon-elf-\";\n+      elsif Target_Name (Target_Name'First .. Index) = \"powerpc\" then\n+         return \"powerpc-elf-\";\n+      else\n+         return \"\";\n+      end if;\n+   end Get_Target_Prefix;\n+\n+   --------------------------------------\n+   -- Library_Major_Minor_Id_Supported --\n+   --------------------------------------\n+\n+   function Library_Major_Minor_Id_Supported return Boolean is\n+   begin\n+      return False;\n+   end Library_Major_Minor_Id_Supported;\n+\n+   ----------------\n+   -- PIC_Option --\n+   ----------------\n+\n+   function PIC_Option return String is\n+   begin\n+      return \"\";\n+   end PIC_Option;\n+\n+   -----------------------------------------------\n+   -- Standalone_Library_Auto_Init_Is_Supported --\n+   -----------------------------------------------\n+\n+   function Standalone_Library_Auto_Init_Is_Supported return Boolean is\n+   begin\n+      return False;\n+   end Standalone_Library_Auto_Init_Is_Supported;\n+\n+   ---------------------------\n+   -- Support_For_Libraries --\n+   ---------------------------\n+\n+   function Support_For_Libraries return Library_Support is\n+   begin\n+      return Static_Only;\n+   end Support_For_Libraries;\n+\n+begin\n+   Archive_Builder_Ptr := Archive_Builder'Access;\n+   Archive_Indexer_Ptr := Archive_Indexer'Access;\n+   Build_Dynamic_Library_Ptr := Build_Dynamic_Library'Access;\n+   DLL_Ext_Ptr := DLL_Ext'Access;\n+   Dynamic_Option_Ptr := Dynamic_Option'Access;\n+   Library_Major_Minor_Id_Supported_Ptr :=\n+                                Library_Major_Minor_Id_Supported'Access;\n+   PIC_Option_Ptr := PIC_Option'Access;\n+   Standalone_Library_Auto_Init_Is_Supported_Ptr :=\n+     Standalone_Library_Auto_Init_Is_Supported'Access;\n+   Support_For_Libraries_Ptr := Support_For_Libraries'Access;\n+end MLib.Tgt.Specific;"}, {"sha": "6d79cd7e947957bd4105cf489058b9690183dcdc", "filename": "gcc/ada/mlib-tgt-vms_common.adb", "status": "renamed", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9df6385a0c162f4acf1b932944d7f5cb86a8b209/gcc%2Fada%2Fmlib-tgt-vms_common.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9df6385a0c162f4acf1b932944d7f5cb86a8b209/gcc%2Fada%2Fmlib-tgt-vms_common.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fmlib-tgt-vms_common.adb?ref=9df6385a0c162f4acf1b932944d7f5cb86a8b209", "patch": "@@ -2,11 +2,11 @@\n --                                                                          --\n --                         GNAT COMPILER COMPONENTS                         --\n --                                                                          --\n---                         M L I B . T G T . V M S                          --\n+--                  M L I B . T G T . V M S _ C O M M O N                   --\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 2003-2007, Free Software Foundation, Inc.         --\n+--          Copyright (C) 2003-2008, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -25,7 +25,7 @@\n \n --  This is the part of MLib.Tgt.Specific common to both VMS versions\n \n-package body MLib.Tgt.VMS is\n+package body MLib.Tgt.VMS_Common is\n \n    --  Non default subprograms. See comments in mlib-tgt.ads\n \n@@ -152,4 +152,4 @@ begin\n    Library_Major_Minor_Id_Supported_Ptr :=\n                                    Library_Major_Minor_Id_Supported'Access;\n \n-end MLib.Tgt.VMS;\n+end MLib.Tgt.VMS_Common;", "previous_filename": "gcc/ada/mlib-tgt-vms.adb"}, {"sha": "8429b7731231c42a334fbf515366d5f9ebc2a260", "filename": "gcc/ada/mlib-tgt-vms_common.ads", "status": "renamed", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9df6385a0c162f4acf1b932944d7f5cb86a8b209/gcc%2Fada%2Fmlib-tgt-vms_common.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9df6385a0c162f4acf1b932944d7f5cb86a8b209/gcc%2Fada%2Fmlib-tgt-vms_common.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fmlib-tgt-vms_common.ads?ref=9df6385a0c162f4acf1b932944d7f5cb86a8b209", "patch": "@@ -2,11 +2,11 @@\n --                                                                          --\n --                         GNAT COMPILER COMPONENTS                         --\n --                                                                          --\n---                         M L I B . T G T . V M S                          --\n+--                  M L I B . T G T . V M S _ C O M M O N                   --\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---             Copyright (C) 2007, Free Software Foundation, Inc.           --\n+--        Copyright (C) 2007-2008, Free Software Foundation, Inc.           --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -25,6 +25,6 @@\n \n --  This is the part of MLib.Tgt.Specific common to both VMS versions\n \n-package MLib.Tgt.VMS is\n+package MLib.Tgt.VMS_Common is\n    pragma Elaborate_Body;\n-end MLib.Tgt.VMS;\n+end MLib.Tgt.VMS_Common;", "previous_filename": "gcc/ada/mlib-tgt-vms.ads"}]}