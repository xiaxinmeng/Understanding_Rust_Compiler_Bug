{"sha": "5980cb5b8bf5a336328061df24b81ea5845e36b0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTk4MGNiNWI4YmY1YTMzNjMyODA2MWRmMjRiODFlYTU4NDVlMzZiMA==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@adacore.com", "date": "2017-09-12T20:24:35Z"}, "committer": {"name": "Eric Botcazou", "email": "ebotcazou@gcc.gnu.org", "date": "2017-09-12T20:24:35Z"}, "message": "sparc.c (output_return): Output the source location of the insn in the delay slot, if any.\n\n\t* config/sparc/sparc.c (output_return): Output the source location of\n\tthe insn in the delay slot, if any.\n\t(output_sibcall): Likewise.\n\nFrom-SVN: r252041", "tree": {"sha": "85097f9a6832b8a837e52fd27343fe18ca2ca9ba", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/85097f9a6832b8a837e52fd27343fe18ca2ca9ba"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5980cb5b8bf5a336328061df24b81ea5845e36b0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5980cb5b8bf5a336328061df24b81ea5845e36b0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5980cb5b8bf5a336328061df24b81ea5845e36b0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5980cb5b8bf5a336328061df24b81ea5845e36b0/comments", "author": null, "committer": null, "parents": [{"sha": "741bbaabaffa7db912a775077897ad72611471f3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/741bbaabaffa7db912a775077897ad72611471f3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/741bbaabaffa7db912a775077897ad72611471f3"}], "stats": {"total": 32, "additions": 28, "deletions": 4}, "files": [{"sha": "aaf639461c04f420660867415e651e1129ec55f6", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5980cb5b8bf5a336328061df24b81ea5845e36b0/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5980cb5b8bf5a336328061df24b81ea5845e36b0/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=5980cb5b8bf5a336328061df24b81ea5845e36b0", "patch": "@@ -1,3 +1,9 @@\n+2017-09-12  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* config/sparc/sparc.c (output_return): Output the source location of\n+\tthe insn in the delay slot, if any.\n+\t(output_sibcall): Likewise.\n+\n 2017-09-12  H.J. Lu  <hongjiu.lu@intel.com>\n \n \tPR driver/81498"}, {"sha": "9a7e46794b289e4c0d01415f35435c9fe48616fe", "filename": "gcc/config/sparc/sparc.c", "status": "modified", "additions": 22, "deletions": 4, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5980cb5b8bf5a336328061df24b81ea5845e36b0/gcc%2Fconfig%2Fsparc%2Fsparc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5980cb5b8bf5a336328061df24b81ea5845e36b0/gcc%2Fconfig%2Fsparc%2Fsparc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsparc%2Fsparc.c?ref=5980cb5b8bf5a336328061df24b81ea5845e36b0", "patch": "@@ -6182,7 +6182,9 @@ output_return (rtx_insn *insn)\n \n       if (final_sequence)\n \t{\n-\t  rtx delay, pat;\n+\t  rtx_insn *delay;\n+\t  rtx pat;\n+\t  int seen;\n \n \t  delay = NEXT_INSN (insn);\n \t  gcc_assert (delay);\n@@ -6197,9 +6199,15 @@ output_return (rtx_insn *insn)\n \t  else\n \t    {\n \t      output_asm_insn (\"jmp\\t%%i7+%)\", NULL);\n-\t      output_restore (pat);\n+\n+\t      /* We're going to output the insn in the delay slot manually.\n+\t\t Make sure to output its source location first.  */\n \t      PATTERN (delay) = gen_blockage ();\n \t      INSN_CODE (delay) = -1;\n+\t      final_scan_insn (delay, asm_out_file, optimize, 0, &seen);\n+\t      INSN_LOCATION (delay) = UNKNOWN_LOCATION;\n+\n+\t      output_restore (pat);\n \t    }\n \t}\n       else\n@@ -6255,13 +6263,23 @@ output_sibcall (rtx_insn *insn, rtx call_operand)\n \n       if (final_sequence)\n \t{\n-\t  rtx_insn *delay = NEXT_INSN (insn);\n+\t  rtx_insn *delay;\n+\t  rtx pat;\n+\t  int seen;\n+\n+\t  delay = NEXT_INSN (insn);\n \t  gcc_assert (delay);\n \n-\t  output_restore (PATTERN (delay));\n+\t  pat = PATTERN (delay);\n \n+\t  /* We're going to output the insn in the delay slot manually.\n+\t     Make sure to output its source location first.  */\n \t  PATTERN (delay) = gen_blockage ();\n \t  INSN_CODE (delay) = -1;\n+\t  final_scan_insn (delay, asm_out_file, optimize, 0, &seen);\n+\t  INSN_LOCATION (delay) = UNKNOWN_LOCATION;\n+\n+\t  output_restore (pat);\n \t}\n       else\n \toutput_restore (NULL_RTX);"}]}