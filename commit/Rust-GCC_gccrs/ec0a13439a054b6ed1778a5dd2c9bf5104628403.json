{"sha": "ec0a13439a054b6ed1778a5dd2c9bf5104628403", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWMwYTEzNDM5YTA1NGI2ZWQxNzc4YTVkZDJjOWJmNTEwNDYyODQwMw==", "commit": {"author": {"name": "Julian Brown", "email": "julian@codesourcery.com", "date": "2009-05-27T18:47:26Z"}, "committer": {"name": "Julian Brown", "email": "jules@gcc.gnu.org", "date": "2009-05-27T18:47:26Z"}, "message": "gcse.c (target.h): Include.\n\n\tgcc/\n\t* gcse.c (target.h): Include.\n\t(can_assign_to_reg_without_clobbers_p): Check that the target allows\n\tcopy of argument to a pseudo register.\n\nFrom-SVN: r147925", "tree": {"sha": "b67702a73e94b388e99f21be4d50c6025cdbb9d2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b67702a73e94b388e99f21be4d50c6025cdbb9d2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ec0a13439a054b6ed1778a5dd2c9bf5104628403", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ec0a13439a054b6ed1778a5dd2c9bf5104628403", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ec0a13439a054b6ed1778a5dd2c9bf5104628403", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ec0a13439a054b6ed1778a5dd2c9bf5104628403/comments", "author": {"login": "jtb20", "id": 6094880, "node_id": "MDQ6VXNlcjYwOTQ4ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/6094880?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jtb20", "html_url": "https://github.com/jtb20", "followers_url": "https://api.github.com/users/jtb20/followers", "following_url": "https://api.github.com/users/jtb20/following{/other_user}", "gists_url": "https://api.github.com/users/jtb20/gists{/gist_id}", "starred_url": "https://api.github.com/users/jtb20/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jtb20/subscriptions", "organizations_url": "https://api.github.com/users/jtb20/orgs", "repos_url": "https://api.github.com/users/jtb20/repos", "events_url": "https://api.github.com/users/jtb20/events{/privacy}", "received_events_url": "https://api.github.com/users/jtb20/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "ac80ba07e96194ec205fc76bb283854772794d6a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ac80ba07e96194ec205fc76bb283854772794d6a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ac80ba07e96194ec205fc76bb283854772794d6a"}], "stats": {"total": 26, "additions": 24, "deletions": 2}, "files": [{"sha": "8068f0edb69285dbe38aea41a0e0384f85931611", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ec0a13439a054b6ed1778a5dd2c9bf5104628403/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ec0a13439a054b6ed1778a5dd2c9bf5104628403/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=ec0a13439a054b6ed1778a5dd2c9bf5104628403", "patch": "@@ -1,3 +1,9 @@\n+2009-05-27  Julian Brown  <julian@codesourcery.com>\n+\n+\t* gcse.c (target.h): Include.\n+\t(can_assign_to_reg_without_clobbers_p): Check that the target allows\n+\tcopy of argument to a pseudo register.\n+\n 2009-05-27  Diego Novillo  <dnovillo@google.com>\n \n \t* tree-ssa-live.c (dump_scope_block): Document arguments."}, {"sha": "3ff47fafc9d9bea01d0c8d77630e664cd8569ed4", "filename": "gcc/gcse.c", "status": "modified", "additions": 18, "deletions": 2, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ec0a13439a054b6ed1778a5dd2c9bf5104628403/gcc%2Fgcse.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ec0a13439a054b6ed1778a5dd2c9bf5104628403/gcc%2Fgcse.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgcse.c?ref=ec0a13439a054b6ed1778a5dd2c9bf5104628403", "patch": "@@ -169,6 +169,7 @@ along with GCC; see the file COPYING3.  If not see\n #include \"hashtab.h\"\n #include \"df.h\"\n #include \"dbgcnt.h\"\n+#include \"target.h\"\n \n /* Propagate flow information through back edges and thus enable PRE's\n    moving loop invariant calculations out of loops.\n@@ -805,6 +806,11 @@ static GTY(()) rtx test_insn;\n /* Return true if we can assign X to a pseudo register such that the\n    resulting insn does not result in clobbering a hard register as a\n    side-effect.\n+\n+   Additionally, if the target requires it, check that the resulting insn\n+   can be copied.  If it cannot, this means that X is special and probably\n+   has hidden side-effects we don't want to mess with.\n+\n    This function is typically used by code motion passes, to verify\n    that it is safe to insert an insn without worrying about clobbering\n    maybe live hard regs.  */\n@@ -837,8 +843,18 @@ can_assign_to_reg_without_clobbers_p (rtx x)\n      valid.  */\n   PUT_MODE (SET_DEST (PATTERN (test_insn)), GET_MODE (x));\n   SET_SRC (PATTERN (test_insn)) = x;\n-  return ((icode = recog (PATTERN (test_insn), test_insn, &num_clobbers)) >= 0\n-\t  && (num_clobbers == 0 || ! added_clobbers_hard_reg_p (icode)));\n+  \n+  icode = recog (PATTERN (test_insn), test_insn, &num_clobbers);\n+  if (icode < 0)\n+    return false;\n+  \n+  if (num_clobbers > 0 && added_clobbers_hard_reg_p (icode))\n+    return false;\n+  \n+  if (targetm.cannot_copy_insn_p && targetm.cannot_copy_insn_p (test_insn))\n+    return false;\n+  \n+  return true;\n }\n \n /* Return nonzero if the operands of expression X are unchanged from the"}]}