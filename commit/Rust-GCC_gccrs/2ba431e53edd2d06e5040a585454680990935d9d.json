{"sha": "2ba431e53edd2d06e5040a585454680990935d9d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmJhNDMxZTUzZWRkMmQwNmU1MDQwYTU4NTQ1NDY4MDk5MDkzNWQ5ZA==", "commit": {"author": {"name": "Yannick Moy", "email": "moy@adacore.com", "date": "2011-08-02T15:10:17Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2011-08-02T15:10:17Z"}, "message": "sem_aggr.adb, [...]: cleanup of SPARK mode\n\n2011-08-02  Yannick Moy  <moy@adacore.com>\n\n\t* sem_aggr.adb, err_vars.ads, sem_ch3.adb, sem_ch5.adb, sem_ch9.adb,\n\tdebug.adb, sem_util.adb, sem_res.adb, sem_attr.adb, gnat1drv.adb,\n\terrout.adb, errout.ads, exp_ch6.adb, sem_ch4.adb, restrict.adb,\n\trestrict.ads, sem_ch6.adb, sem_ch8.adb, sem_ch11.adb,\n\topt.ads: cleanup of SPARK mode\n\nFrom-SVN: r177175", "tree": {"sha": "17782362e9211837a9f24856f0f7c0d5c803a897", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/17782362e9211837a9f24856f0f7c0d5c803a897"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2ba431e53edd2d06e5040a585454680990935d9d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2ba431e53edd2d06e5040a585454680990935d9d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2ba431e53edd2d06e5040a585454680990935d9d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2ba431e53edd2d06e5040a585454680990935d9d/comments", "author": {"login": "yannickmoy", "id": 859440, "node_id": "MDQ6VXNlcjg1OTQ0MA==", "avatar_url": "https://avatars.githubusercontent.com/u/859440?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yannickmoy", "html_url": "https://github.com/yannickmoy", "followers_url": "https://api.github.com/users/yannickmoy/followers", "following_url": "https://api.github.com/users/yannickmoy/following{/other_user}", "gists_url": "https://api.github.com/users/yannickmoy/gists{/gist_id}", "starred_url": "https://api.github.com/users/yannickmoy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yannickmoy/subscriptions", "organizations_url": "https://api.github.com/users/yannickmoy/orgs", "repos_url": "https://api.github.com/users/yannickmoy/repos", "events_url": "https://api.github.com/users/yannickmoy/events{/privacy}", "received_events_url": "https://api.github.com/users/yannickmoy/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "0f85303509461f48131fcd3c34d1c159b6771dd1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0f85303509461f48131fcd3c34d1c159b6771dd1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0f85303509461f48131fcd3c34d1c159b6771dd1"}], "stats": {"total": 500, "additions": 218, "deletions": 282}, "files": [{"sha": "7330a205aafe744822164118d525b2187161a277", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2ba431e53edd2d06e5040a585454680990935d9d/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2ba431e53edd2d06e5040a585454680990935d9d/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=2ba431e53edd2d06e5040a585454680990935d9d", "patch": "@@ -1,3 +1,11 @@\n+2011-08-02  Yannick Moy  <moy@adacore.com>\n+\n+\t* sem_aggr.adb, err_vars.ads, sem_ch3.adb, sem_ch5.adb, sem_ch9.adb,\n+\tdebug.adb, sem_util.adb, sem_res.adb, sem_attr.adb, gnat1drv.adb,\n+\terrout.adb, errout.ads, exp_ch6.adb, sem_ch4.adb, restrict.adb,\n+\trestrict.ads, sem_ch6.adb, sem_ch8.adb, sem_ch11.adb,\n+\topt.ads: cleanup of SPARK mode\n+\n 2011-08-02  Yannick Moy  <moy@adacore.com>\n \n \t* cstand.adb (Create_Standard): sets Is_In_ALFA component of standard"}, {"sha": "8f3860939570b44bdf27adfc74a6cf9a34e89b27", "filename": "gcc/ada/debug.adb", "status": "modified", "additions": 2, "deletions": 9, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2ba431e53edd2d06e5040a585454680990935d9d/gcc%2Fada%2Fdebug.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2ba431e53edd2d06e5040a585454680990935d9d/gcc%2Fada%2Fdebug.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fdebug.adb?ref=2ba431e53edd2d06e5040a585454680990935d9d", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2010, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2011, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -121,7 +121,7 @@ package body Debug is\n    --  d.A  Read/write Aspect_Specifications hash table to tree\n    --  d.B\n    --  d.C  Generate concatenation call, do not generate inline code\n-   --  d.D  Accept only the SPARK subset of Ada\n+   --  d.D\n    --  d.E  SPARK generation mode\n    --  d.F  Why generation mode\n    --  d.G\n@@ -574,13 +574,6 @@ package body Debug is\n    --  d.C  Generate call to System.Concat_n.Str_Concat_n routines in cases\n    --       where we would normally generate inline concatenation code.\n \n-   --  d.D  Issue compiler errors on Ada input outside the SPARK subset of\n-   --       Ada. This only deals currently with the Ada code, not SPARK\n-   --       annotations, so it may well be the case that code which passes\n-   --       the compiler with this flag is rejected by the SPARK Examiner,\n-   --       e.g. due to the different visibility rules of the Examiner based\n-   --       on 'inherit' SPARK annotations.\n-\n    --  d.E  SPARK generation mode. Generate intermediate code for the sake of\n    --       formal verification through SPARK and the SPARK toolset.\n "}, {"sha": "10a0262bb62f860c28f841d36d43b99d5d989fde", "filename": "gcc/ada/err_vars.ads", "status": "modified", "additions": 1, "deletions": 6, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2ba431e53edd2d06e5040a585454680990935d9d/gcc%2Fada%2Ferr_vars.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2ba431e53edd2d06e5040a585454680990935d9d/gcc%2Fada%2Ferr_vars.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ferr_vars.ads?ref=2ba431e53edd2d06e5040a585454680990935d9d", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1992-2010, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2011, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -150,9 +150,4 @@ package Err_Vars is\n    --  Used if current message contains a ~ insertion character to indicate\n    --  insertion of the string Error_Msg_String (1 .. Error_Msg_Strlen).\n \n-   Error_Msg_Lang : String (1 .. 16);\n-   Error_Msg_Langlen : Natural;\n-   --  Used if current message contains a ~~ insertion character to indicate\n-   --  insertion of the string Error_Msg_Lang (1 .. Error_Msg_Langlen).\n-\n end Err_Vars;"}, {"sha": "e7940579cde6b71022de0712d9e3f9349e71860d", "filename": "gcc/ada/errout.adb", "status": "modified", "additions": 2, "deletions": 20, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2ba431e53edd2d06e5040a585454680990935d9d/gcc%2Fada%2Ferrout.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2ba431e53edd2d06e5040a585454680990935d9d/gcc%2Fada%2Ferrout.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ferrout.adb?ref=2ba431e53edd2d06e5040a585454680990935d9d", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2010, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2011, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -2185,19 +2185,6 @@ package body Errout is\n       Set_Casing (Desired_Case);\n    end Set_Identifier_Casing;\n \n-   ------------------------\n-   -- Set_Error_Msg_Lang --\n-   ------------------------\n-\n-   procedure Set_Error_Msg_Lang (To : String) is\n-   begin\n-      Error_Msg_Lang (1) := '(';\n-      Error_Msg_Lang (2 .. To'Length + 1) := To;\n-      Error_Msg_Lang (To'Length + 2) := ')';\n-      Error_Msg_Lang (To'Length + 3) := ' ';\n-      Error_Msg_Langlen := To'Length + 3;\n-   end Set_Error_Msg_Lang;\n-\n    -----------------------\n    -- Set_Ignore_Errors --\n    -----------------------\n@@ -2716,12 +2703,7 @@ package body Errout is\n                P := P + 1;\n \n             when '~' =>\n-               if P <= Text'Last and then Text (P) = '~' then\n-                  P := P + 1;\n-                  Set_Msg_Str (Error_Msg_Lang (1 .. Error_Msg_Langlen));\n-               else\n-                  Set_Msg_Str (Error_Msg_String (1 .. Error_Msg_Strlen));\n-               end if;\n+               Set_Msg_Str (Error_Msg_String (1 .. Error_Msg_Strlen));\n \n             --  Upper case letter\n "}, {"sha": "2e850f88cdf718aa3dfce5af8953b7f8e3fde809", "filename": "gcc/ada/errout.ads", "status": "modified", "additions": 1, "deletions": 21, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2ba431e53edd2d06e5040a585454680990935d9d/gcc%2Fada%2Ferrout.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2ba431e53edd2d06e5040a585454680990935d9d/gcc%2Fada%2Ferrout.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ferrout.ads?ref=2ba431e53edd2d06e5040a585454680990935d9d", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1992-2010, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2011, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -346,16 +346,6 @@ package Errout is\n    --      inserted to replace the ~ character. The string is inserted in the\n    --      literal form it appears, without any action on special characters.\n \n-   --    Insertion character ~~ (Two tildes: insert language string)\n-   --      Indicates that Error_Msg_Lang (1 .. Error_Msg_Langlen) is to be\n-   --      inserted to replace the ~~ character. Typically the language string\n-   --      will be inserted in parentheses as a prefix of the error message, as\n-   --      in \"(spark) error msg\". The string is inserted in the literal form\n-   --      it appears, without any action on special characters. Error_Msg_Lang\n-   --      and Error_Msg_Langlen are expected to be set only once before\n-   --      parsing starts, so that the caller to an error procedure does not\n-   --      need to set them repeatedly.\n-\n    ----------------------------------------\n    -- Specialization of Messages for VMS --\n    ----------------------------------------\n@@ -469,11 +459,6 @@ package Errout is\n    --  Used if current message contains a ~ insertion character to indicate\n    --  insertion of the string Error_Msg_String (1 .. Error_Msg_Strlen).\n \n-   Error_Msg_Lang : String  renames Err_Vars.Error_Msg_Lang;\n-   Error_Msg_Langlen : Natural renames Err_Vars.Error_Msg_Langlen;\n-   --  Used if current message contains a ~~ insertion character to indicate\n-   --  insertion of the string Error_Msg_Lang (1 .. Error_Msg_Langlen).\n-\n    -----------------------------------------------------\n    -- Format of Messages and Manual Quotation Control --\n    -----------------------------------------------------\n@@ -765,11 +750,6 @@ package Errout is\n    --  Remove warnings on all elements of a list (Calls Remove_Warning_Messages\n    --  on each element of the list, see above).\n \n-   procedure Set_Error_Msg_Lang (To : String);\n-   --  Set Error_Msg_Lang/Error_Msg_Langlen used for insertion character ~~.\n-   --  The argument is just the language name, e.g. \"spark\". The stored string\n-   --  is of the form \"(langname) \".\n-\n    procedure Set_Ignore_Errors (To : Boolean);\n    --  Following a call to this procedure with To=True, all error calls are\n    --  ignored. A call with To=False restores the default treatment in which"}, {"sha": "bf7b44ec68d9abdf0ba79d4d47577618deac35c3", "filename": "gcc/ada/exp_ch6.adb", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2ba431e53edd2d06e5040a585454680990935d9d/gcc%2Fada%2Fexp_ch6.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2ba431e53edd2d06e5040a585454680990935d9d/gcc%2Fada%2Fexp_ch6.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch6.adb?ref=2ba431e53edd2d06e5040a585454680990935d9d", "patch": "@@ -5449,26 +5449,26 @@ package body Exp_Ch6 is\n       Prot_Id   : Entity_Id;\n \n    begin\n-      --  In SPARK or ALFA, subprogram declarations are only allowed in\n-      --  package specifications.\n+      --  In SPARK, subprogram declarations are only allowed in package\n+      --  specifications.\n \n       if Nkind (Parent (N)) /= N_Package_Specification then\n          if Nkind (Parent (N)) = N_Compilation_Unit then\n-            Check_Formal_Restriction\n+            Check_SPARK_Restriction\n               (\"subprogram declaration is not a library item\", N);\n \n          elsif Present (Next (N))\n            and then Nkind (Next (N)) = N_Pragma\n            and then Get_Pragma_Id (Pragma_Name (Next (N))) = Pragma_Import\n          then\n-            --  In SPARK or ALFA, subprogram declarations are also permitted in\n+            --  In SPARK, subprogram declarations are also permitted in\n             --  declarative parts when immediately followed by a corresponding\n             --  pragma Import. We only check here that there is some pragma\n             --  Import.\n \n             null;\n          else\n-            Check_Formal_Restriction\n+            Check_SPARK_Restriction\n               (\"subprogram declaration is not allowed here\", N);\n          end if;\n       end if;"}, {"sha": "43362771496a5a098169f85f3470c9b3be89f970", "filename": "gcc/ada/gnat1drv.adb", "status": "modified", "additions": 1, "deletions": 13, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2ba431e53edd2d06e5040a585454680990935d9d/gcc%2Fada%2Fgnat1drv.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2ba431e53edd2d06e5040a585454680990935d9d/gcc%2Fada%2Fgnat1drv.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnat1drv.adb?ref=2ba431e53edd2d06e5040a585454680990935d9d", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2010, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2011, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -392,10 +392,6 @@ procedure Gnat1drv is\n \n       --  Set switches for formal verification modes\n \n-      if Debug_Flag_Dot_DD then\n-         SPARK_Mode := True;\n-      end if;\n-\n       if Debug_Flag_Dot_EE then\n          ALFA_Through_SPARK_Mode := True;\n       end if;\n@@ -405,14 +401,6 @@ procedure Gnat1drv is\n       end if;\n \n       ALFA_Mode := ALFA_Through_SPARK_Mode or ALFA_Through_Why_Mode;\n-\n-      if ALFA_Mode then\n-         Set_Error_Msg_Lang (\"alfa\");\n-         Formal_Verification_Mode := True;\n-      elsif SPARK_Mode then\n-         Set_Error_Msg_Lang (\"spark\");\n-         Formal_Verification_Mode := True;\n-      end if;\n    end Adjust_Global_Switches;\n \n    --------------------"}, {"sha": "e611c047301f8cffb894b5b6fc908429a756a835", "filename": "gcc/ada/opt.ads", "status": "modified", "additions": 1, "deletions": 4, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2ba431e53edd2d06e5040a585454680990935d9d/gcc%2Fada%2Fopt.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2ba431e53edd2d06e5040a585454680990935d9d/gcc%2Fada%2Fopt.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fopt.ads?ref=2ba431e53edd2d06e5040a585454680990935d9d", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1992-2010, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2011, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -1870,9 +1870,6 @@ package Opt is\n \n    --  These modes are currently defined through debug flags\n \n-   Formal_Verification_Mode : Boolean := False;\n-   --  Set True if ALFA_Mode or SPARK_Mode\n-\n    ALFA_Mode : Boolean := False;\n    --  Set True if ALFA_Through_SPARK_Mode or else ALFA_Through_Why_Mode\n "}, {"sha": "c68475bb907c4673c9ac7a45a44f9a17fddeae99", "filename": "gcc/ada/restrict.adb", "status": "modified", "additions": 4, "deletions": 9, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2ba431e53edd2d06e5040a585454680990935d9d/gcc%2Fada%2Frestrict.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2ba431e53edd2d06e5040a585454680990935d9d/gcc%2Fada%2Frestrict.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Frestrict.adb?ref=2ba431e53edd2d06e5040a585454680990935d9d", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2010, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2011, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -109,7 +109,7 @@ package body Restrict is\n    -- Check_Formal_Restriction --\n    ------------------------------\n \n-   procedure Check_Formal_Restriction\n+   procedure Check_SPARK_Restriction\n      (Msg   : String;\n       N     : Node_Id;\n       Force : Boolean := False)\n@@ -129,11 +129,9 @@ package body Restrict is\n \n          if Msg_Issued then\n             Error_Msg_F (\"\\\\| \" & Msg, N);\n-         elsif SPARK_Mode then\n-            Error_Msg_F (\"|~~\" & Msg, N);\n          end if;\n       end if;\n-   end Check_Formal_Restriction;\n+   end Check_SPARK_Restriction;\n \n    procedure Check_Formal_Restriction (Msg1, Msg2 : String; N : Node_Id) is\n       Msg_Issued          : Boolean;\n@@ -154,9 +152,6 @@ package body Restrict is\n          if Msg_Issued then\n             Error_Msg_F (\"\\\\| \" & Msg1, N);\n             Error_Msg_F (Msg2, N);\n-         elsif SPARK_Mode then\n-            Error_Msg_F (\"|~~\" & Msg1, N);\n-            Error_Msg_F (Msg2, N);\n          end if;\n       end if;\n    end Check_Formal_Restriction;\n@@ -380,7 +375,7 @@ package body Restrict is\n       --  No_Dispatch restriction is not set.\n \n       if R = No_Dispatch then\n-         Check_Formal_Restriction (\"class-wide is not allowed\", N);\n+         Check_SPARK_Restriction (\"class-wide is not allowed\", N);\n       end if;\n \n       if UI_Is_In_Int_Range (V) then"}, {"sha": "46626c96fae406239f9ad2dd0b785c5999230372", "filename": "gcc/ada/restrict.ads", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2ba431e53edd2d06e5040a585454680990935d9d/gcc%2Fada%2Frestrict.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2ba431e53edd2d06e5040a585454680990935d9d/gcc%2Fada%2Frestrict.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Frestrict.ads?ref=2ba431e53edd2d06e5040a585454680990935d9d", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1992-2010, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2011, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -228,7 +228,7 @@ package Restrict is\n    --  an elaboration routine. If elaboration code is not allowed, an error\n    --  message is posted on the node given as argument.\n \n-   procedure Check_Formal_Restriction\n+   procedure Check_SPARK_Restriction\n      (Msg   : String;\n       N     : Node_Id;\n       Force : Boolean := False);"}, {"sha": "e70458666f71566df7032bac36ff2af02b114d8e", "filename": "gcc/ada/sem_aggr.adb", "status": "modified", "additions": 13, "deletions": 13, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2ba431e53edd2d06e5040a585454680990935d9d/gcc%2Fada%2Fsem_aggr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2ba431e53edd2d06e5040a585454680990935d9d/gcc%2Fada%2Fsem_aggr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_aggr.adb?ref=2ba431e53edd2d06e5040a585454680990935d9d", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2010, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2011, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -809,7 +809,7 @@ package body Sem_Aggr is\n    begin\n       if Level = 0 then\n          if Nkind (Parent (Expr)) /= N_Qualified_Expression then\n-            Check_Formal_Restriction (\"aggregate should be qualified\", Expr);\n+            Check_SPARK_Restriction (\"aggregate should be qualified\", Expr);\n          end if;\n \n       else\n@@ -978,7 +978,7 @@ package body Sem_Aggr is\n          return;\n       end if;\n \n-      --  An unqualified aggregate is restricted in SPARK or ALFA to:\n+      --  An unqualified aggregate is restricted in SPARK to:\n \n       --    An aggregate item inside an aggregate for a multi-dimensional array\n \n@@ -997,12 +997,12 @@ package body Sem_Aggr is\n            and then not Is_Constrained (Etype (Name (Parent (N))))\n          then\n             if not Is_Others_Aggregate (N) then\n-               Check_Formal_Restriction\n+               Check_SPARK_Restriction\n                  (\"array aggregate should have only OTHERS\", N);\n             end if;\n \n          elsif Is_Top_Level_Aggregate (N) then\n-            Check_Formal_Restriction (\"aggregate should be qualified\", N);\n+            Check_SPARK_Restriction (\"aggregate should be qualified\", N);\n \n          --  The legality of this unqualified aggregate is checked by calling\n          --  Check_Qualified_Aggregate from one of its enclosing aggregate,\n@@ -1873,13 +1873,13 @@ package body Sem_Aggr is\n \n                      Set_Do_Range_Check (Choice, False);\n \n-                     --  In SPARK or ALFA, the choice must be static\n+                     --  In SPARK, the choice must be static\n \n                      if not (Is_Static_Expression (Choice)\n                               or else (Nkind (Choice) = N_Range\n                                         and then Is_Static_Range (Choice)))\n                      then\n-                        Check_Formal_Restriction\n+                        Check_SPARK_Restriction\n                           (\"choice should be static\", Choice);\n                      end if;\n                   end if;\n@@ -2523,12 +2523,12 @@ package body Sem_Aggr is\n       Analyze (A);\n       Check_Parameterless_Call (A);\n \n-      --  In SPARK or ALFA, the ancestor part cannot be a type mark\n+      --  In SPARK, the ancestor part cannot be a type mark\n \n       if Is_Entity_Name (A)\n         and then Is_Type (Entity (A))\n       then\n-         Check_Formal_Restriction (\"ancestor part cannot be a type mark\", A);\n+         Check_SPARK_Restriction (\"ancestor part cannot be a type mark\", A);\n       end if;\n \n       if not Is_Tagged_Type (Typ) then\n@@ -3212,7 +3212,7 @@ package body Sem_Aggr is\n    --  Start of processing for Resolve_Record_Aggregate\n \n    begin\n-      --  A record aggregate is restricted in SPARK or ALFA:\n+      --  A record aggregate is restricted in SPARK:\n       --    Each named association can have only a single choice.\n       --    OTHERS cannot be used.\n       --    Positional and named associations cannot be mixed.\n@@ -3222,7 +3222,7 @@ package body Sem_Aggr is\n       then\n \n          if Present (Expressions (N)) then\n-            Check_Formal_Restriction\n+            Check_SPARK_Restriction\n               (\"named association cannot follow positional one\",\n                First (Choices (First (Component_Associations (N)))));\n          end if;\n@@ -3234,13 +3234,13 @@ package body Sem_Aggr is\n             Assoc := First (Component_Associations (N));\n             while Present (Assoc) loop\n                if List_Length (Choices (Assoc)) > 1 then\n-                  Check_Formal_Restriction\n+                  Check_SPARK_Restriction\n                     (\"component association in record aggregate must \"\n                      & \"contain a single choice\", Assoc);\n                end if;\n \n                if Nkind (First (Choices (Assoc))) = N_Others_Choice then\n-                  Check_Formal_Restriction\n+                  Check_SPARK_Restriction\n                     (\"record aggregate cannot contain OTHERS\", Assoc);\n                end if;\n "}, {"sha": "01a9befc1a93296bad0008e0af127dadc39e7c79", "filename": "gcc/ada/sem_attr.adb", "status": "modified", "additions": 10, "deletions": 10, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2ba431e53edd2d06e5040a585454680990935d9d/gcc%2Fada%2Fsem_attr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2ba431e53edd2d06e5040a585454680990935d9d/gcc%2Fada%2Fsem_attr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_attr.adb?ref=2ba431e53edd2d06e5040a585454680990935d9d", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2010, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2011, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -1296,7 +1296,7 @@ package body Sem_Attr is\n       procedure Check_Formal_Restriction_On_Attribute is\n       begin\n          Error_Msg_Name_1 := Aname;\n-         Check_Formal_Restriction (\"attribute % is not allowed\", P);\n+         Check_SPARK_Restriction (\"attribute % is not allowed\", P);\n       end Check_Formal_Restriction_On_Attribute;\n \n       ------------------------\n@@ -2068,8 +2068,8 @@ package body Sem_Attr is\n          end if;\n       end if;\n \n-      --  In SPARK or ALFA, attributes of private types are only allowed if\n-      --  the full type declaration is visible.\n+      --  In SPARK, attributes of private types are only allowed if the full\n+      --  type declaration is visible.\n \n       if Is_Entity_Name (P)\n         and then Present (Entity (P))  --  needed in some cases\n@@ -2079,7 +2079,7 @@ package body Sem_Attr is\n         and then not In_Spec_Expression\n       then\n          Error_Msg_Node_1 := First_Subtype (P_Type);\n-         Check_Formal_Restriction (\"invisible attribute of}\", N);\n+         Check_SPARK_Restriction (\"invisible attribute of}\", N);\n       end if;\n \n       --  Remaining processing depends on attribute\n@@ -2460,7 +2460,7 @@ package body Sem_Attr is\n \n          if Nkind (Parent (N)) /= N_Attribute_Reference then\n             Error_Msg_Name_1 := Aname;\n-            Check_Formal_Restriction\n+            Check_SPARK_Restriction\n               (\"attribute% is only allowed as prefix of another attribute\", P);\n          end if;\n \n@@ -3877,7 +3877,7 @@ package body Sem_Attr is\n          if Is_Boolean_Type (P_Type) then\n             Error_Msg_Name_1 := Aname;\n             Error_Msg_Name_2 := Chars (P_Type);\n-            Check_Formal_Restriction\n+            Check_SPARK_Restriction\n               (\"attribute% is not allowed for type%\", P);\n          end if;\n \n@@ -3903,7 +3903,7 @@ package body Sem_Attr is\n          if Is_Real_Type (P_Type) or else Is_Boolean_Type (P_Type) then\n             Error_Msg_Name_1 := Aname;\n             Error_Msg_Name_2 := Chars (P_Type);\n-            Check_Formal_Restriction\n+            Check_SPARK_Restriction\n               (\"attribute% is not allowed for type%\", P);\n          end if;\n \n@@ -4461,7 +4461,7 @@ package body Sem_Attr is\n          if Is_Real_Type (P_Type) or else Is_Boolean_Type (P_Type) then\n             Error_Msg_Name_1 := Aname;\n             Error_Msg_Name_2 := Chars (P_Type);\n-            Check_Formal_Restriction\n+            Check_SPARK_Restriction\n               (\"attribute% is not allowed for type%\", P);\n          end if;\n \n@@ -4786,7 +4786,7 @@ package body Sem_Attr is\n          if Is_Boolean_Type (P_Type) then\n             Error_Msg_Name_1 := Aname;\n             Error_Msg_Name_2 := Chars (P_Type);\n-            Check_Formal_Restriction\n+            Check_SPARK_Restriction\n               (\"attribute% is not allowed for type%\", P);\n          end if;\n "}, {"sha": "357b3f1046aa8b87fc3b4bba0043447d24b26757", "filename": "gcc/ada/sem_ch11.adb", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2ba431e53edd2d06e5040a585454680990935d9d/gcc%2Fada%2Fsem_ch11.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2ba431e53edd2d06e5040a585454680990935d9d/gcc%2Fada%2Fsem_ch11.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch11.adb?ref=2ba431e53edd2d06e5040a585454680990935d9d", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2010, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2011, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -443,7 +443,7 @@ package body Sem_Ch11 is\n       P              : Node_Id;\n \n    begin\n-      Check_Formal_Restriction (\"raise statement is not allowed\", N);\n+      Check_SPARK_Restriction (\"raise statement is not allowed\", N);\n       Check_Unreachable_Code (N);\n \n       --  Check exception restrictions on the original source\n@@ -610,7 +610,7 @@ package body Sem_Ch11 is\n    --  Start of processing for Analyze_Raise_xxx_Error\n \n    begin\n-      Check_Formal_Restriction (\"raise statement is not allowed\", N);\n+      Check_SPARK_Restriction (\"raise statement is not allowed\", N);\n \n       if No (Etype (N)) then\n          Set_Etype (N, Standard_Void_Type);"}, {"sha": "55d4c3b3583207b78b762f47950ebbe7b0955c88", "filename": "gcc/ada/sem_ch3.adb", "status": "modified", "additions": 54, "deletions": 56, "changes": 110, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2ba431e53edd2d06e5040a585454680990935d9d/gcc%2Fada%2Fsem_ch3.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2ba431e53edd2d06e5040a585454680990935d9d/gcc%2Fada%2Fsem_ch3.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch3.adb?ref=2ba431e53edd2d06e5040a585454680990935d9d", "patch": "@@ -714,7 +714,7 @@ package body Sem_Ch3 is\n       Enclosing_Prot_Type : Entity_Id := Empty;\n \n    begin\n-      Check_Formal_Restriction (\"access type is not allowed\", N);\n+      Check_SPARK_Restriction (\"access type is not allowed\", N);\n \n       if Is_Entry (Current_Scope)\n         and then Is_Task_Type (Etype (Scope (Current_Scope)))\n@@ -1028,7 +1028,7 @@ package body Sem_Ch3 is\n    --  Start of processing for Access_Subprogram_Declaration\n \n    begin\n-      Check_Formal_Restriction (\"access type is not allowed\", T_Def);\n+      Check_SPARK_Restriction (\"access type is not allowed\", T_Def);\n \n       --  Associate the Itype node with the inner full-type declaration or\n       --  subprogram spec or entry body. This is required to handle nested\n@@ -1282,7 +1282,7 @@ package body Sem_Ch3 is\n       S : constant Node_Id := Subtype_Indication (Def);\n       P : constant Node_Id := Parent (Def);\n    begin\n-      Check_Formal_Restriction (\"access type is not allowed\", Def);\n+      Check_SPARK_Restriction (\"access type is not allowed\", Def);\n \n       --  Check for permissible use of incomplete type\n \n@@ -1786,7 +1786,7 @@ package body Sem_Ch3 is\n                 (Subtype_Indication (Component_Definition (N)), N);\n \n          if not Nkind_In (Typ, N_Identifier, N_Expanded_Name) then\n-            Check_Formal_Restriction (\"subtype mark required\", Typ);\n+            Check_SPARK_Restriction (\"subtype mark required\", Typ);\n          end if;\n \n       --  Ada 2005 (AI-230): Access Definition case\n@@ -1839,7 +1839,7 @@ package body Sem_Ch3 is\n       --  package Sem).\n \n       if Present (E) then\n-         Check_Formal_Restriction (\"default expression is not allowed\", E);\n+         Check_SPARK_Restriction (\"default expression is not allowed\", E);\n          Preanalyze_Spec_Expression (E, T);\n          Check_Initialization (T, E);\n \n@@ -2046,12 +2046,12 @@ package body Sem_Ch3 is\n       while Present (D) loop\n \n          --  Package specification cannot contain a package declaration in\n-         --  SPARK or ALFA.\n+         --  SPARK.\n \n          if Nkind (D) = N_Package_Declaration\n            and then Nkind (Parent (L)) = N_Package_Specification\n          then\n-            Check_Formal_Restriction (\"package specification cannot contain \"\n+            Check_SPARK_Restriction (\"package specification cannot contain \"\n                                       & \"a package declaration\", D);\n          end if;\n \n@@ -2273,11 +2273,11 @@ package body Sem_Ch3 is\n             null;\n \n          --  For record types, discriminants are allowed, unless we are in\n-         --  SPARK or ALFA.\n+         --  SPARK.\n \n          when N_Record_Definition =>\n             if Present (Discriminant_Specifications (N)) then\n-               Check_Formal_Restriction\n+               Check_SPARK_Restriction\n                  (\"discriminant type is not allowed\",\n                   Defining_Identifier\n                     (First (Discriminant_Specifications (N))));\n@@ -2383,10 +2383,10 @@ package body Sem_Ch3 is\n          return;\n       end if;\n \n-      --  Controlled type is not allowed in SPARK and ALFA\n+      --  Controlled type is not allowed in SPARK\n \n       if Is_Visibly_Controlled (T) then\n-         Check_Formal_Restriction (\"controlled type is not allowed\", N);\n+         Check_SPARK_Restriction (\"controlled type is not allowed\", N);\n       end if;\n \n       --  Some common processing for all types\n@@ -2495,7 +2495,7 @@ package body Sem_Ch3 is\n       T : Entity_Id;\n \n    begin\n-      Check_Formal_Restriction (\"incomplete type is not allowed\", N);\n+      Check_SPARK_Restriction (\"incomplete type is not allowed\", N);\n \n       Generate_Definition (Defining_Identifier (N));\n \n@@ -3040,29 +3040,29 @@ package body Sem_Ch3 is\n       --  is considered, so that the Object_Definition node is still the same\n       --  as in source code.\n \n-      --  In SPARK or ALFA, the nominal subtype shall be given by a subtype\n-      --  mark and shall not be unconstrained. (The only exception to this\n-      --  is the admission of declarations of constants of type String.)\n+      --  In SPARK, the nominal subtype shall be given by a subtype mark and\n+      --  shall not be unconstrained. (The only exception to this is the\n+      --  admission of declarations of constants of type String.)\n \n       if not\n         Nkind_In (Object_Definition (N), N_Identifier, N_Expanded_Name)\n       then\n-         Check_Formal_Restriction\n+         Check_SPARK_Restriction\n            (\"subtype mark required\", Object_Definition (N));\n \n       elsif Is_Array_Type (T)\n         and then not Is_Constrained (T)\n         and then T /= Standard_String\n       then\n-         Check_Formal_Restriction\n+         Check_SPARK_Restriction\n            (\"subtype mark of constrained type expected\",\n             Object_Definition (N));\n       end if;\n \n-      --  There are no aliased objects in SPARK or ALFA\n+      --  There are no aliased objects in SPARK\n \n       if Aliased_Present (N) then\n-         Check_Formal_Restriction (\"aliased object is not allowed\", N);\n+         Check_SPARK_Restriction (\"aliased object is not allowed\", N);\n       end if;\n \n       --  Process initialization expression if present and not in error\n@@ -3186,11 +3186,10 @@ package body Sem_Ch3 is\n \n            --  Only call test if needed\n \n-           and then (Formal_Verification_Mode\n-                      or else Restriction_Check_Required (SPARK))\n+           and then Restriction_Check_Required (SPARK)\n            and then not Is_SPARK_Initialization_Expr (E)\n          then\n-            Check_Formal_Restriction\n+            Check_SPARK_Restriction\n               (\"initialization expression is not appropriate\", E);\n          end if;\n       end if;\n@@ -4029,12 +4028,12 @@ package body Sem_Ch3 is\n          Set_Has_Delayed_Freeze (Id);\n       end if;\n \n-      --  Subtype of Boolean cannot have a constraint in SPARK or ALFA\n+      --  Subtype of Boolean cannot have a constraint in SPARK\n \n       if Is_Boolean_Type (T)\n         and then Nkind (Subtype_Indication (N)) = N_Subtype_Indication\n       then\n-         Check_Formal_Restriction\n+         Check_SPARK_Restriction\n            (\"subtype of Boolean cannot have constraint\", N);\n       end if;\n \n@@ -4050,13 +4049,13 @@ package body Sem_Ch3 is\n                One_Cstr := First (Constraints (Cstr));\n                while Present (One_Cstr) loop\n \n-                  --  Index or discriminant constraint in SPARK or ALFA must be\n-                  --  a subtype mark.\n+                  --  Index or discriminant constraint in SPARK must be a\n+                  --  subtype mark.\n \n                   if not\n                     Nkind_In (One_Cstr, N_Identifier, N_Expanded_Name)\n                   then\n-                     Check_Formal_Restriction\n+                     Check_SPARK_Restriction\n                        (\"subtype mark required\", One_Cstr);\n \n                   --  String subtype must have a lower bound of 1 in SPARK.\n@@ -4070,7 +4069,7 @@ package body Sem_Ch3 is\n                      if Is_OK_Static_Expression (Low)\n                        and then Expr_Value (Low) /= 1\n                      then\n-                        Check_Formal_Restriction\n+                        Check_SPARK_Restriction\n                           (\"String subtype must have lower bound of 1\", N);\n                      end if;\n                   end if;\n@@ -4089,12 +4088,12 @@ package body Sem_Ch3 is\n          Set_Etype (Id, Base_Type (T));\n \n          --  Subtype of unconstrained array without constraint is not allowed\n-         --  in SPARK or ALFA.\n+         --  in SPARK.\n \n          if Is_Array_Type (T)\n            and then not Is_Constrained (T)\n          then\n-            Check_Formal_Restriction\n+            Check_SPARK_Restriction\n               (\"subtype of unconstrained array must have constraint\", N);\n          end if;\n \n@@ -4617,7 +4616,7 @@ package body Sem_Ch3 is\n          Analyze (Index);\n \n          if not Nkind_In (Index, N_Identifier, N_Expanded_Name) then\n-            Check_Formal_Restriction (\"subtype mark required\", Index);\n+            Check_SPARK_Restriction (\"subtype mark required\", Index);\n          end if;\n \n          --  Add a subtype declaration for each index of private array type\n@@ -4692,7 +4691,7 @@ package body Sem_Ch3 is\n          Element_Type := Process_Subtype (Component_Typ, P, Related_Id, 'C');\n \n          if not Nkind_In (Component_Typ, N_Identifier, N_Expanded_Name) then\n-            Check_Formal_Restriction (\"subtype mark required\", Component_Typ);\n+            Check_SPARK_Restriction (\"subtype mark required\", Component_Typ);\n          end if;\n \n       --  Ada 2005 (AI-230): Access Definition case\n@@ -4801,7 +4800,7 @@ package body Sem_Ch3 is\n       Set_Packed_Array_Type (T, Empty);\n \n       if Aliased_Present (Component_Definition (Def)) then\n-         Check_Formal_Restriction\n+         Check_SPARK_Restriction\n            (\"aliased is not allowed\", Component_Definition (Def));\n          Set_Has_Aliased_Components (Etype (T));\n       end if;\n@@ -11312,7 +11311,7 @@ package body Sem_Ch3 is\n       else\n          pragma Assert (Nkind (C) = N_Digits_Constraint);\n \n-         Check_Formal_Restriction (\"digits constraint is not allowed\", S);\n+         Check_SPARK_Restriction (\"digits constraint is not allowed\", S);\n \n          Digits_Expr := Digits_Expression (C);\n          Analyze_And_Resolve (Digits_Expr, Any_Integer);\n@@ -11551,7 +11550,7 @@ package body Sem_Ch3 is\n \n       if Nkind (C) = N_Digits_Constraint then\n \n-         Check_Formal_Restriction (\"digits constraint is not allowed\", S);\n+         Check_SPARK_Restriction (\"digits constraint is not allowed\", S);\n          Check_Restriction (No_Obsolescent_Features, C);\n \n          if Warn_On_Obsolescent_Feature then\n@@ -11783,7 +11782,7 @@ package body Sem_Ch3 is\n \n       if Nkind (C) = N_Delta_Constraint then\n \n-         Check_Formal_Restriction (\"delta constraint is not allowed\", S);\n+         Check_SPARK_Restriction (\"delta constraint is not allowed\", S);\n          Check_Restriction (No_Obsolescent_Features, C);\n \n          if Warn_On_Obsolescent_Feature then\n@@ -12440,7 +12439,7 @@ package body Sem_Ch3 is\n       Bound_Val     : Ureal;\n \n    begin\n-      Check_Formal_Restriction\n+      Check_SPARK_Restriction\n         (\"decimal fixed point type is not allowed\", Def);\n       Check_Restriction (No_Fixed_Point, Def);\n \n@@ -13946,7 +13945,7 @@ package body Sem_Ch3 is\n       --  parent is also an interface.\n \n       if Interface_Present (Def) then\n-         Check_Formal_Restriction (\"interface is not allowed\", Def);\n+         Check_SPARK_Restriction (\"interface is not allowed\", Def);\n \n          if not Is_Interface (Parent_Type) then\n             Diagnose_Interface (Indic, Parent_Type);\n@@ -14188,8 +14187,7 @@ package body Sem_Ch3 is\n       end if;\n \n       --  Only composite types other than array types are allowed to have\n-      --  discriminants. In SPARK and in ALFA, no types are allowed to have\n-      --  discriminants.\n+      --  discriminants. In SPARK, no types are allowed to have discriminants.\n \n       if Present (Discriminant_Specifications (N)) then\n          if (Is_Elementary_Type (Parent_Type)\n@@ -14201,7 +14199,7 @@ package body Sem_Ch3 is\n                Defining_Identifier (First (Discriminant_Specifications (N))));\n             Set_Has_Discriminants (T, False);\n          else\n-            Check_Formal_Restriction (\"discriminant type is not allowed\", N);\n+            Check_SPARK_Restriction (\"discriminant type is not allowed\", N);\n          end if;\n       end if;\n \n@@ -14388,11 +14386,11 @@ package body Sem_Ch3 is\n          end if;\n       end if;\n \n-      --  In SPARK or ALFA, there are no derived type definitions other than\n-      --  type extensions of tagged record types.\n+      --  In SPARK, there are no derived type definitions other than type\n+      --  extensions of tagged record types.\n \n       if No (Extension) then\n-         Check_Formal_Restriction (\"derived type is not allowed\", N);\n+         Check_SPARK_Restriction (\"derived type is not allowed\", N);\n       end if;\n    end Derived_Type_Declaration;\n \n@@ -16543,7 +16541,7 @@ package body Sem_Ch3 is\n          --  Non-binary case\n \n          elsif M_Val < 2 ** Bits then\n-            Check_Formal_Restriction (\"modulus should be a power of 2\", T);\n+            Check_SPARK_Restriction (\"modulus should be a power of 2\", T);\n             Set_Non_Binary_Modulus (T);\n \n             if Bits > System_Max_Nonbinary_Modulus_Power then\n@@ -17402,7 +17400,7 @@ package body Sem_Ch3 is\n \n             if Priv_Parent /= Full_Parent then\n                Error_Msg_Name_1 := Chars (Priv_Parent);\n-               Check_Formal_Restriction (\"% expected\", Full_Indic);\n+               Check_SPARK_Restriction (\"% expected\", Full_Indic);\n             end if;\n \n             --  Check the rules of 7.3(10): if the private extension inherits\n@@ -17967,7 +17965,7 @@ package body Sem_Ch3 is\n          if not In_Iter_Schm\n            and then not Is_Static_Range (R)\n          then\n-            Check_Formal_Restriction (\"range should be static\", R);\n+            Check_SPARK_Restriction (\"range should be static\", R);\n          end if;\n \n          Lo := Low_Bound (R);\n@@ -18986,11 +18984,11 @@ package body Sem_Ch3 is\n         or else not Interface_Present (Def)\n       then\n          if Limited_Present (Def) then\n-            Check_Formal_Restriction (\"limited is not allowed\", N);\n+            Check_SPARK_Restriction (\"limited is not allowed\", N);\n          end if;\n \n          if Abstract_Present (Def) then\n-            Check_Formal_Restriction (\"abstract is not allowed\", N);\n+            Check_SPARK_Restriction (\"abstract is not allowed\", N);\n          end if;\n \n          --  The flag Is_Tagged_Type might have already been set by\n@@ -19012,7 +19010,7 @@ package body Sem_Ch3 is\n                                       or else Abstract_Present (Def));\n \n       else\n-         Check_Formal_Restriction (\"interface is not allowed\", N);\n+         Check_SPARK_Restriction (\"interface is not allowed\", N);\n \n          Is_Tagged := True;\n          Analyze_Interface_Declaration (T, Def);\n@@ -19152,8 +19150,8 @@ package body Sem_Ch3 is\n          T := Prev_T;\n       end if;\n \n-      --  In SPARK or ALFA, tagged types and type extensions may only be\n-      --  declared in the specification of library unit packages.\n+      --  In SPARK, tagged types and type extensions may only be declared in\n+      --  the specification of library unit packages.\n \n       if Present (Def) and then Is_Tagged_Type (T) then\n          declare\n@@ -19174,13 +19172,13 @@ package body Sem_Ch3 is\n             if Nkind (Ctxt) = N_Package_Body\n               and then Nkind (Parent (Ctxt)) = N_Compilation_Unit\n             then\n-               Check_Formal_Restriction\n+               Check_SPARK_Restriction\n                  (\"type should be defined in package specification\", Typ);\n \n             elsif Nkind (Ctxt) /= N_Package_Specification\n               or else Nkind (Parent (Parent (Ctxt))) /= N_Compilation_Unit\n             then\n-               Check_Formal_Restriction\n+               Check_SPARK_Restriction\n                  (\"type should be defined in library unit package\", Typ);\n             end if;\n          end;\n@@ -19209,14 +19207,14 @@ package body Sem_Ch3 is\n         or else Null_Present (Component_List (Def))\n       then\n          if not Is_Tagged_Type (T) then\n-            Check_Formal_Restriction (\"non-tagged record cannot be null\", Def);\n+            Check_SPARK_Restriction (\"non-tagged record cannot be null\", Def);\n          end if;\n \n       else\n          Analyze_Declarations (Component_Items (Component_List (Def)));\n \n          if Present (Variant_Part (Component_List (Def))) then\n-            Check_Formal_Restriction (\"variant part is not allowed\", Def);\n+            Check_SPARK_Restriction (\"variant part is not allowed\", Def);\n             Analyze (Variant_Part (Component_List (Def)));\n          end if;\n       end if;"}, {"sha": "ae169c2b5be4366edc24c5d49d487028f324e649", "filename": "gcc/ada/sem_ch4.adb", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2ba431e53edd2d06e5040a585454680990935d9d/gcc%2Fada%2Fsem_ch4.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2ba431e53edd2d06e5040a585454680990935d9d/gcc%2Fada%2Fsem_ch4.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch4.adb?ref=2ba431e53edd2d06e5040a585454680990935d9d", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2010, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2011, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -369,7 +369,7 @@ package body Sem_Ch4 is\n       C        : Node_Id;\n \n    begin\n-      Check_Formal_Restriction (\"allocator is not allowed\", N);\n+      Check_SPARK_Restriction (\"allocator is not allowed\", N);\n \n       --  Deal with allocator restrictions\n \n@@ -818,7 +818,7 @@ package body Sem_Ch4 is\n             case Nkind (Actual) is\n                when N_Parameter_Association =>\n                   if Named_Seen then\n-                     Check_Formal_Restriction\n+                     Check_SPARK_Restriction\n                        (\"named association cannot follow positional one\",\n                         Actual);\n                      exit;\n@@ -1506,7 +1506,7 @@ package body Sem_Ch4 is\n          return;\n       end if;\n \n-      Check_Formal_Restriction (\"conditional expression is not allowed\", N);\n+      Check_SPARK_Restriction (\"conditional expression is not allowed\", N);\n \n       Else_Expr := Next (Then_Expr);\n \n@@ -1706,7 +1706,7 @@ package body Sem_Ch4 is\n    --  Start of processing for Analyze_Explicit_Dereference\n \n    begin\n-      Check_Formal_Restriction (\"explicit dereference is not allowed\", N);\n+      Check_SPARK_Restriction (\"explicit dereference is not allowed\", N);\n \n       Analyze (P);\n       Set_Etype (N, Any_Type);\n@@ -2588,7 +2588,7 @@ package body Sem_Ch4 is\n \n    procedure Analyze_Null (N : Node_Id) is\n    begin\n-      Check_Formal_Restriction (\"null is not allowed\", N);\n+      Check_SPARK_Restriction (\"null is not allowed\", N);\n \n       Set_Etype (N, Any_Access);\n    end Analyze_Null;\n@@ -3274,7 +3274,7 @@ package body Sem_Ch4 is\n       Iterator : Node_Id;\n \n    begin\n-      Check_Formal_Restriction (\"quantified expression is not allowed\", N);\n+      Check_SPARK_Restriction (\"quantified expression is not allowed\", N);\n \n       Set_Etype  (Ent,  Standard_Void_Type);\n       Set_Parent (Ent, N);\n@@ -4302,7 +4302,7 @@ package body Sem_Ch4 is\n    --  Start of processing for Analyze_Slice\n \n    begin\n-      Check_Formal_Restriction (\"slice is not allowed\", N);\n+      Check_SPARK_Restriction (\"slice is not allowed\", N);\n \n       Analyze (P);\n       Analyze (D);"}, {"sha": "bfd41d0619bb092c36e3cbe157a95342c6d7b55f", "filename": "gcc/ada/sem_ch5.adb", "status": "modified", "additions": 16, "deletions": 17, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2ba431e53edd2d06e5040a585454680990935d9d/gcc%2Fada%2Fsem_ch5.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2ba431e53edd2d06e5040a585454680990935d9d/gcc%2Fada%2Fsem_ch5.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch5.adb?ref=2ba431e53edd2d06e5040a585454680990935d9d", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2010, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2011, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -819,7 +819,7 @@ package body Sem_Ch5 is\n       --  block statements generated by the expander is fine.\n \n       if Nkind (Original_Node (N)) = N_Block_Statement then\n-         Check_Formal_Restriction (\"block statement is not allowed\", N);\n+         Check_SPARK_Restriction (\"block statement is not allowed\", N);\n       end if;\n \n       --  If no handled statement sequence is present, things are really messed\n@@ -1108,12 +1108,12 @@ package body Sem_Ch5 is\n       Analyze_Choices (N, Exp_Type, Dont_Care, Others_Present);\n \n       --  A case statement with a single OTHERS alternative is not allowed\n-      --  in SPARK or ALFA.\n+      --  in SPARK.\n \n       if Others_Present\n         and then List_Length (Alternatives (N)) = 1\n       then\n-         Check_Formal_Restriction\n+         Check_SPARK_Restriction\n            (\"OTHERS as unique case alternative is not allowed\", N);\n       end if;\n \n@@ -1194,7 +1194,7 @@ package body Sem_Ch5 is\n \n          else\n             if Has_Loop_In_Inner_Open_Scopes (U_Name) then\n-               Check_Formal_Restriction\n+               Check_SPARK_Restriction\n                  (\"exit label must name the closest enclosing loop\", N);\n             end if;\n \n@@ -1240,34 +1240,34 @@ package body Sem_Ch5 is\n \n       if Present (Cond) then\n          if Nkind (Parent (N)) /= N_Loop_Statement then\n-            Check_Formal_Restriction\n+            Check_SPARK_Restriction\n               (\"exit with when clause must be directly in loop\", N);\n          end if;\n \n       else\n          if Nkind (Parent (N)) /= N_If_Statement then\n             if Nkind (Parent (N)) = N_Elsif_Part then\n-               Check_Formal_Restriction\n+               Check_SPARK_Restriction\n                  (\"exit must be in IF without ELSIF\", N);\n             else\n-               Check_Formal_Restriction (\"exit must be directly in IF\", N);\n+               Check_SPARK_Restriction (\"exit must be directly in IF\", N);\n             end if;\n \n          elsif Nkind (Parent (Parent (N))) /= N_Loop_Statement then\n-            Check_Formal_Restriction\n+            Check_SPARK_Restriction\n               (\"exit must be in IF directly in loop\", N);\n \n             --  First test the presence of ELSE, so that an exit in an ELSE\n             --  leads to an error mentioning the ELSE.\n \n          elsif Present (Else_Statements (Parent (N))) then\n-            Check_Formal_Restriction (\"exit must be in IF without ELSE\", N);\n+            Check_SPARK_Restriction (\"exit must be in IF without ELSE\", N);\n \n             --  An exit in an ELSIF does not reach here, as it would have been\n             --  detected in the case (Nkind (Parent (N)) /= N_If_Statement).\n \n          elsif Present (Elsif_Parts (Parent (N))) then\n-            Check_Formal_Restriction (\"exit must be in IF without ELSIF\", N);\n+            Check_SPARK_Restriction (\"exit must be in IF without ELSIF\", N);\n          end if;\n       end if;\n \n@@ -1295,7 +1295,7 @@ package body Sem_Ch5 is\n       Label_Ent   : Entity_Id;\n \n    begin\n-      Check_Formal_Restriction (\"goto statement is not allowed\", N);\n+      Check_SPARK_Restriction (\"goto statement is not allowed\", N);\n \n       --  Actual semantic checks\n \n@@ -1963,10 +1963,10 @@ package body Sem_Ch5 is\n                end;\n \n                --  Loop parameter specification must include subtype mark in\n-               --  SPARK or ALFA.\n+               --  SPARK.\n \n                if Nkind (DS) = N_Range then\n-                  Check_Formal_Restriction\n+                  Check_SPARK_Restriction\n                     (\"loop parameter specification must include subtype mark\",\n                      N);\n                end if;\n@@ -2546,8 +2546,7 @@ package body Sem_Ch5 is\n             --  we are in formal mode where goto statements are not allowed.\n \n             if Nkind (Nxt) = N_Label\n-              and then not (Formal_Verification_Mode\n-                             or else Restriction_Check_Required (SPARK))\n+              and then not Restriction_Check_Required (SPARK)\n             then\n                return;\n \n@@ -2605,7 +2604,7 @@ package body Sem_Ch5 is\n                   --  Now issue the warning (or error in formal mode)\n \n                   if SPARK_Mode or else Restriction_Check_Required (SPARK) then\n-                     Check_Formal_Restriction\n+                     Check_SPARK_Restriction\n                        (\"unreachable code is not allowed\", Error_Node);\n                   else\n                      Error_Msg (\"?unreachable code!\", Sloc (Error_Node));"}, {"sha": "3c8f02e18afa480e4c019e3f1a5a56bc02b8e10b", "filename": "gcc/ada/sem_ch6.adb", "status": "modified", "additions": 17, "deletions": 18, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2ba431e53edd2d06e5040a585454680990935d9d/gcc%2Fada%2Fsem_ch6.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2ba431e53edd2d06e5040a585454680990935d9d/gcc%2Fada%2Fsem_ch6.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch6.adb?ref=2ba431e53edd2d06e5040a585454680990935d9d", "patch": "@@ -227,7 +227,7 @@ package body Sem_Ch6 is\n       Scop       : constant Entity_Id := Current_Scope;\n \n    begin\n-      Check_Formal_Restriction (\"abstract subprogram is not allowed\", N);\n+      Check_SPARK_Restriction (\"abstract subprogram is not allowed\", N);\n \n       Generate_Definition (Designator);\n       Set_Is_Abstract_Subprogram (Designator);\n@@ -631,20 +631,20 @@ package body Sem_Ch6 is\n          Analyze_And_Resolve (Expr, R_Type);\n          Check_Limited_Return (Expr);\n \n-         --  The only RETURN allowed in SPARK or ALFA is as the last statement\n-         --  of the function.\n+         --  The only RETURN allowed in SPARK is as the last statement of the\n+         --  function.\n \n          if Nkind (Parent (N)) /= N_Handled_Sequence_Of_Statements\n            and then\n              (Nkind (Parent (Parent (N))) /= N_Subprogram_Body\n                or else Present (Next (N)))\n          then\n-            Check_Formal_Restriction\n+            Check_SPARK_Restriction\n               (\"RETURN should be the last statement in function\", N);\n          end if;\n \n       else\n-         Check_Formal_Restriction (\"extended RETURN is not allowed\", N);\n+         Check_SPARK_Restriction (\"extended RETURN is not allowed\", N);\n \n          --  Analyze parts specific to extended_return_statement:\n \n@@ -1425,7 +1425,7 @@ package body Sem_Ch6 is\n \n       if Result_Definition (N) /= Error then\n          if Nkind (Result_Definition (N)) = N_Access_Definition then\n-            Check_Formal_Restriction\n+            Check_SPARK_Restriction\n               (\"access result is not allowed\", Result_Definition (N));\n \n             --  Ada 2005 (AI-254): Handle anonymous access to subprograms\n@@ -1463,12 +1463,12 @@ package body Sem_Ch6 is\n                Set_Is_In_ALFA (Designator, False);\n             end if;\n \n-            --  Unconstrained array as result is not allowed in SPARK or ALFA\n+            --  Unconstrained array as result is not allowed in SPARK\n \n             if Is_Array_Type (Typ)\n               and then not Is_Constrained (Typ)\n             then\n-               Check_Formal_Restriction\n+               Check_SPARK_Restriction\n                  (\"returning an unconstrained array is not allowed\",\n                   Result_Definition (N));\n             end if;\n@@ -1910,7 +1910,7 @@ package body Sem_Ch6 is\n                  and then not Nkind_In (Stat, N_Simple_Return_Statement,\n                                               N_Extended_Return_Statement)\n                then\n-                  Check_Formal_Restriction\n+                  Check_SPARK_Restriction\n                     (\"last statement in function should be RETURN\", Stat);\n                end if;\n             end;\n@@ -1928,7 +1928,7 @@ package body Sem_Ch6 is\n             --  borrow the Check_Returns procedure here ???\n \n             if Return_Present (Id) then\n-               Check_Formal_Restriction\n+               Check_SPARK_Restriction\n                  (\"procedure should not have RETURN\", N);\n             end if;\n          end if;\n@@ -2866,12 +2866,12 @@ package body Sem_Ch6 is\n    --  Start of processing for Analyze_Subprogram_Declaration\n \n    begin\n-      --  Null procedures are not allowed in SPARK or ALFA\n+      --  Null procedures are not allowed in SPARK\n \n       if Nkind (Specification (N)) = N_Procedure_Specification\n         and then Null_Present (Specification (N))\n       then\n-         Check_Formal_Restriction (\"null procedure is not allowed\", N);\n+         Check_SPARK_Restriction (\"null procedure is not allowed\", N);\n       end if;\n \n       --  For a null procedure, capture the profile before analysis, for\n@@ -3118,13 +3118,12 @@ package body Sem_Ch6 is\n \n       Set_Is_In_ALFA (Designator);\n \n-      --  User-defined operator is not allowed in SPARK or ALFA, except as\n-      --  a renaming.\n+      --  User-defined operator is not allowed in SPARK, except as a renaming\n \n       if Nkind (Defining_Unit_Name (N)) = N_Defining_Operator_Symbol\n         and then Nkind (Parent (N)) /= N_Subprogram_Renaming_Declaration\n       then\n-         Check_Formal_Restriction (\"user-defined operator is not allowed\", N);\n+         Check_SPARK_Restriction (\"user-defined operator is not allowed\", N);\n       end if;\n \n       --  Proceed with analysis\n@@ -8572,10 +8571,10 @@ package body Sem_Ch6 is\n          Check_Overriding_Indicator\n            (S, Overridden_Subp, Is_Primitive => Is_Primitive_Subp);\n \n-         --  Overloading is not allowed in SPARK or ALFA\n+         --  Overloading is not allowed in SPARK\n \n          Error_Msg_Sloc := Sloc (Homonym (S));\n-         Check_Formal_Restriction (\"overloading not allowed with entity#\", S);\n+         Check_SPARK_Restriction (\"overloading not allowed with entity#\", S);\n \n          --  If S is a derived operation for an untagged type then by\n          --  definition it's not a dispatching operation (even if the parent\n@@ -8853,7 +8852,7 @@ package body Sem_Ch6 is\n          Default := Expression (Param_Spec);\n \n          if Present (Default) then\n-            Check_Formal_Restriction\n+            Check_SPARK_Restriction\n               (\"default expression is not allowed\", Default);\n \n             if Out_Present (Param_Spec) then"}, {"sha": "20b64a7cf7fb120fc3518ee94c60f80281ccf85f", "filename": "gcc/ada/sem_ch8.adb", "status": "modified", "additions": 19, "deletions": 16, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2ba431e53edd2d06e5040a585454680990935d9d/gcc%2Fada%2Fsem_ch8.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2ba431e53edd2d06e5040a585454680990935d9d/gcc%2Fada%2Fsem_ch8.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch8.adb?ref=2ba431e53edd2d06e5040a585454680990935d9d", "patch": "@@ -529,7 +529,7 @@ package body Sem_Ch8 is\n       Nam : constant Node_Id := Name (N);\n \n    begin\n-      Check_Formal_Restriction (\"exception renaming is not allowed\", N);\n+      Check_SPARK_Restriction (\"exception renaming is not allowed\", N);\n \n       Enter_Name (Id);\n       Analyze (Nam);\n@@ -626,7 +626,7 @@ package body Sem_Ch8 is\n          return;\n       end if;\n \n-      Check_Formal_Restriction (\"generic renaming is not allowed\", N);\n+      Check_SPARK_Restriction (\"generic renaming is not allowed\", N);\n \n       Generate_Definition (New_P);\n \n@@ -718,7 +718,7 @@ package body Sem_Ch8 is\n          return;\n       end if;\n \n-      Check_Formal_Restriction (\"object renaming is not allowed\", N);\n+      Check_SPARK_Restriction (\"object renaming is not allowed\", N);\n \n       Set_Is_Pure (Id, Is_Pure (Current_Scope));\n       Enter_Name (Id);\n@@ -1582,6 +1582,11 @@ package body Sem_Ch8 is\n    procedure Analyze_Subprogram_Renaming (N : Node_Id) is\n       Formal_Spec : constant Node_Id          := Corresponding_Formal_Spec (N);\n       Is_Actual   : constant Boolean          := Present (Formal_Spec);\n+\n+      CW_Actual   : Boolean                   := False;\n+      --  True if the renaming is for a defaulted formal subprogram when the\n+      --  actual for a related formal type is class-wide. For AI05-0071.\n+\n       Inst_Node   : Node_Id                   := Empty;\n       Nam         : constant Node_Id          := Name (N);\n       New_S       : Entity_Id;\n@@ -1734,6 +1739,7 @@ package body Sem_Ch8 is\n          end loop;\n \n          if Present (Formal_Type) then\n+            CW_Actual := True;\n \n             --  Create declaration and body for class-wide operation\n \n@@ -2430,14 +2436,11 @@ package body Sem_Ch8 is\n \n          elsif Ekind (Old_S) /= E_Operator then\n \n-            --  If this is a default subprogram, it may be for a class-wide\n-            --  actual, in which case there is no check for mode conformance,\n-            --  given that the signatures do not match (the source mentions T,\n-            --  but the actual mentions T'Class).\n+            --  If this a defaulted subprogram for a class-wide actual there is\n+            --  no check for mode conformance,  given that the signatures don't\n+            --  match (the source mentions T but the actual mentions T'class).\n \n-            if  Is_Actual\n-              and then From_Default (N)\n-            then\n+            if  CW_Actual then\n                null;\n \n             else\n@@ -2745,7 +2748,7 @@ package body Sem_Ch8 is\n    --  Start of processing for Analyze_Use_Package\n \n    begin\n-      Check_Formal_Restriction (\"use clause is not allowed\", N);\n+      Check_SPARK_Restriction (\"use clause is not allowed\", N);\n \n       Set_Hidden_By_Use_Clause (N, No_Elist);\n \n@@ -5551,12 +5554,12 @@ package body Sem_Ch8 is\n \n       if SPARK_Mode or else Restriction_Check_Required (SPARK) then\n          if Nkind (Selector_Name (N)) = N_Character_Literal then\n-            Check_Formal_Restriction\n+            Check_SPARK_Restriction\n               (\"character literal cannot be prefixed\", N);\n          elsif Nkind (Selector_Name (N)) = N_Operator_Symbol\n            and then Nkind (Parent (N)) /= N_Subprogram_Renaming_Declaration\n          then\n-            Check_Formal_Restriction (\"operator symbol cannot be prefixed\", N);\n+            Check_SPARK_Restriction (\"operator symbol cannot be prefixed\", N);\n          end if;\n       end if;\n \n@@ -5888,10 +5891,10 @@ package body Sem_Ch8 is\n            and then (SPARK_Mode or else Restriction_Check_Required (SPARK))\n          then\n             if Is_Subprogram (P_Name) then\n-               Check_Formal_Restriction\n+               Check_SPARK_Restriction\n                  (\"prefix of expanded name cannot be a subprogram\", P);\n             elsif Ekind (P_Name) = E_Loop then\n-               Check_Formal_Restriction\n+               Check_SPARK_Restriction\n                  (\"prefix of expanded name cannot be a loop statement\", P);\n             end if;\n          end if;\n@@ -6044,7 +6047,7 @@ package body Sem_Ch8 is\n \n          elsif Attribute_Name (N) = Name_Base then\n             Error_Msg_Name_1 := Name_Base;\n-            Check_Formal_Restriction\n+            Check_SPARK_Restriction\n               (\"attribute% is only allowed as prefix of another attribute\", N);\n \n             if Ada_Version = Ada_83 and then Comes_From_Source (N) then"}, {"sha": "399d36e8771ca9603301f24dccaab92cd7057b71", "filename": "gcc/ada/sem_ch9.adb", "status": "modified", "additions": 13, "deletions": 13, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2ba431e53edd2d06e5040a585454680990935d9d/gcc%2Fada%2Fsem_ch9.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2ba431e53edd2d06e5040a585454680990935d9d/gcc%2Fada%2Fsem_ch9.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch9.adb?ref=2ba431e53edd2d06e5040a585454680990935d9d", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2010, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2011, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -101,7 +101,7 @@ package body Sem_Ch9 is\n \n    begin\n       Tasking_Used := True;\n-      Check_Formal_Restriction (\"abort statement is not allowed\", N);\n+      Check_SPARK_Restriction (\"abort statement is not allowed\", N);\n \n       T_Name := First (Names (N));\n       while Present (T_Name) loop\n@@ -172,7 +172,7 @@ package body Sem_Ch9 is\n \n    begin\n       Tasking_Used := True;\n-      Check_Formal_Restriction (\"accept statement is not allowed\", N);\n+      Check_SPARK_Restriction (\"accept statement is not allowed\", N);\n \n       --  Entry name is initialized to Any_Id. It should get reset to the\n       --  matching entry entity. An error is signalled if it is not reset.\n@@ -403,7 +403,7 @@ package body Sem_Ch9 is\n \n    begin\n       Tasking_Used := True;\n-      Check_Formal_Restriction (\"select statement is not allowed\", N);\n+      Check_SPARK_Restriction (\"select statement is not allowed\", N);\n       Check_Restriction (Max_Asynchronous_Select_Nesting, N);\n       Check_Restriction (No_Select_Statements, N);\n \n@@ -449,7 +449,7 @@ package body Sem_Ch9 is\n \n    begin\n       Tasking_Used := True;\n-      Check_Formal_Restriction (\"select statement is not allowed\", N);\n+      Check_SPARK_Restriction (\"select statement is not allowed\", N);\n       Check_Restriction (No_Select_Statements, N);\n \n       --  Ada 2005 (AI-345): The trigger may be a dispatching call\n@@ -546,7 +546,7 @@ package body Sem_Ch9 is\n       E : constant Node_Id := Expression (N);\n    begin\n       Tasking_Used := True;\n-      Check_Formal_Restriction (\"delay statement is not allowed\", N);\n+      Check_SPARK_Restriction (\"delay statement is not allowed\", N);\n       Check_Restriction (No_Relative_Delay, N);\n       Check_Restriction (No_Delay, N);\n       Check_Potentially_Blocking_Operation (N);\n@@ -564,7 +564,7 @@ package body Sem_Ch9 is\n \n    begin\n       Tasking_Used := True;\n-      Check_Formal_Restriction (\"delay statement is not allowed\", N);\n+      Check_SPARK_Restriction (\"delay statement is not allowed\", N);\n       Check_Restriction (No_Delay, N);\n       Check_Potentially_Blocking_Operation (N);\n       Analyze (E);\n@@ -851,7 +851,7 @@ package body Sem_Ch9 is\n \n    begin\n       Tasking_Used := True;\n-      Check_Formal_Restriction (\"entry call is not allowed\", N);\n+      Check_SPARK_Restriction (\"entry call is not allowed\", N);\n \n       if Present (Pragmas_Before (N)) then\n          Analyze_List (Pragmas_Before (N));\n@@ -1114,7 +1114,7 @@ package body Sem_Ch9 is\n \n    begin\n       Tasking_Used := True;\n-      Check_Formal_Restriction (\"protected definition is not allowed\", N);\n+      Check_SPARK_Restriction (\"protected definition is not allowed\", N);\n       Analyze_Declarations (Visible_Declarations (N));\n \n       if Present (Private_Declarations (N))\n@@ -1308,7 +1308,7 @@ package body Sem_Ch9 is\n \n    begin\n       Tasking_Used := True;\n-      Check_Formal_Restriction (\"requeue statement is not allowed\", N);\n+      Check_SPARK_Restriction (\"requeue statement is not allowed\", N);\n       Check_Restriction (No_Requeue_Statements, N);\n       Check_Unreachable_Code (N);\n \n@@ -1582,7 +1582,7 @@ package body Sem_Ch9 is\n \n    begin\n       Tasking_Used := True;\n-      Check_Formal_Restriction (\"select statement is not allowed\", N);\n+      Check_SPARK_Restriction (\"select statement is not allowed\", N);\n       Check_Restriction (No_Select_Statements, N);\n \n       --  Loop to analyze alternatives\n@@ -1960,7 +1960,7 @@ package body Sem_Ch9 is\n \n    begin\n       Tasking_Used := True;\n-      Check_Formal_Restriction (\"task definition is not allowed\", N);\n+      Check_SPARK_Restriction (\"task definition is not allowed\", N);\n \n       if Present (Visible_Declarations (N)) then\n          Analyze_Declarations (Visible_Declarations (N));\n@@ -2120,7 +2120,7 @@ package body Sem_Ch9 is\n \n    begin\n       Tasking_Used := True;\n-      Check_Formal_Restriction (\"select statement is not allowed\", N);\n+      Check_SPARK_Restriction (\"select statement is not allowed\", N);\n       Check_Restriction (No_Select_Statements, N);\n \n       --  Ada 2005 (AI-345): The trigger may be a dispatching call"}, {"sha": "1f0cc13f5f6ad20929bfd221076d3615c9d88b8a", "filename": "gcc/ada/sem_res.adb", "status": "modified", "additions": 33, "deletions": 33, "changes": 66, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2ba431e53edd2d06e5040a585454680990935d9d/gcc%2Fada%2Fsem_res.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2ba431e53edd2d06e5040a585454680990935d9d/gcc%2Fada%2Fsem_res.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_res.adb?ref=2ba431e53edd2d06e5040a585454680990935d9d", "patch": "@@ -3605,7 +3605,7 @@ package body Sem_Res is\n \n                      begin\n                         if not Is_SPARK_Object_Reference (Operand) then\n-                           Check_Formal_Restriction\n+                           Check_SPARK_Restriction\n                              (\"object required\", Operand);\n \n                         --  In formal mode, the only view conversions are those\n@@ -3621,11 +3621,11 @@ package body Sem_Res is\n                            if Ekind_In\n                              (F, E_Out_Parameter, E_In_Out_Parameter)\n                            then\n-                              Check_Formal_Restriction\n+                              Check_SPARK_Restriction\n                                 (\"ancestor conversion is the only permitted \"\n                                  & \"view conversion\", A);\n                            else\n-                              Check_Formal_Restriction\n+                              Check_SPARK_Restriction\n                                 (\"ancestor conversion required\", A);\n                            end if;\n \n@@ -3635,7 +3635,7 @@ package body Sem_Res is\n                      end;\n \n                   else\n-                     Check_Formal_Restriction (\"object required\", A);\n+                     Check_SPARK_Restriction (\"object required\", A);\n                   end if;\n \n                --  In formal mode, the only view conversions are those\n@@ -3644,7 +3644,7 @@ package body Sem_Res is\n                elsif Nkind (A) = N_Type_Conversion\n                  and then Ekind_In (F, E_Out_Parameter, E_In_Out_Parameter)\n                then\n-                  Check_Formal_Restriction\n+                  Check_SPARK_Restriction\n                     (\"ancestor conversion is the only permitted view \"\n                      & \"conversion\", A);\n                end if;\n@@ -4887,17 +4887,17 @@ package body Sem_Res is\n       Generate_Operator_Reference (N, Typ);\n       Eval_Arithmetic_Op (N);\n \n-      --  In SPARK and ALFA, a multiplication or division with operands of\n-      --  fixed point types shall be qualified or explicitly converted to\n-      --  identify the result type.\n+      --  In SPARK, a multiplication or division with operands of fixed point\n+      --  types shall be qualified or explicitly converted to identify the\n+      --  result type.\n \n       if (Is_Fixed_Point_Type (Etype (L))\n            or else Is_Fixed_Point_Type (Etype (R)))\n         and then Nkind_In (N, N_Op_Multiply, N_Op_Divide)\n         and then\n           not Nkind_In (Parent (N), N_Qualified_Expression, N_Type_Conversion)\n       then\n-         Check_Formal_Restriction\n+         Check_SPARK_Restriction\n            (\"operation should be qualified or explicitly converted\", N);\n       end if;\n \n@@ -5960,16 +5960,16 @@ package body Sem_Res is\n       Generate_Operator_Reference (N, T);\n       Check_Low_Bound_Tested (N);\n \n-      --  In SPARK or ALFA, ordering operators <, <=, >, >= are not defined\n-      --  for Boolean types or array types except String.\n+      --  In SPARK, ordering operators <, <=, >, >= are not defined for Boolean\n+      --  types or array types except String.\n \n       if Is_Boolean_Type (T) then\n-         Check_Formal_Restriction\n+         Check_SPARK_Restriction\n            (\"comparison is not defined on Boolean type\", N);\n       elsif Is_Array_Type (T)\n         and then Base_Type (T) /= Standard_String\n       then\n-         Check_Formal_Restriction\n+         Check_SPARK_Restriction\n            (\"comparison is not defined on array types other than String\", N);\n       else\n          null;\n@@ -6817,9 +6817,9 @@ package body Sem_Res is\n          Resolve (L, T);\n          Resolve (R, T);\n \n-         --  In SPARK or ALFA, equality operators = and /= for array types\n-         --  other than String are only defined when, for each index position,\n-         --  the operands have equal static bounds.\n+         --  In SPARK, equality operators = and /= for array types other than\n+         --  String are only defined when, for each index position, the\n+         --  operands have equal static bounds.\n \n          if Is_Array_Type (T)\n            and then Base_Type (T) /= Standard_String\n@@ -6828,7 +6828,7 @@ package body Sem_Res is\n            and then Etype (R) /= Any_Composite  --  or else R in error\n            and then not Matching_Static_Array_Bounds (Etype (L), Etype (R))\n          then\n-            Check_Formal_Restriction\n+            Check_SPARK_Restriction\n               (\"array types should have matching static bounds\", N);\n          end if;\n \n@@ -7357,10 +7357,10 @@ package body Sem_Res is\n       Generate_Operator_Reference (N, B_Typ);\n       Eval_Logical_Op (N);\n \n-      --  In SPARK or ALFA, logical operations AND, OR and XOR for arrays are\n-      --  defined only when both operands have same static lower and higher\n-      --  bounds. Of course the types have to match, so only check if operands\n-      --  are compatible and the node itself has no errors.\n+      --  In SPARK, logical operations AND, OR and XOR for arrays are defined\n+      --  only when both operands have same static lower and higher bounds. Of\n+      --  course the types have to match, so only check if operands are\n+      --  compatible and the node itself has no errors.\n \n       if Is_Array_Type (B_Typ)\n         and then Nkind (N) in N_Binary_Op\n@@ -7374,7 +7374,7 @@ package body Sem_Res is\n               and then Right_Typ /= Any_Composite  --  or Right_Opnd in error\n               and then not Matching_Static_Array_Bounds (Left_Typ, Right_Typ)\n             then\n-               Check_Formal_Restriction\n+               Check_SPARK_Restriction\n                  (\"array types should have matching static bounds\", N);\n             end if;\n          end;\n@@ -7627,7 +7627,7 @@ package body Sem_Res is\n       end loop;\n \n       if Base_Type (Etype (N)) /= Standard_String then\n-         Check_Formal_Restriction\n+         Check_SPARK_Restriction\n            (\"result of concatenation should have type String\", N);\n       end if;\n    end Resolve_Op_Concat;\n@@ -7734,21 +7734,21 @@ package body Sem_Res is\n          Resolve (Arg, Btyp);\n       end if;\n \n-      --  Concatenation is restricted in SPARK or ALFA: each operand must be\n-      --  either a string literal, a static character expression, or another\n+      --  Concatenation is restricted in SPARK: each operand must be either a\n+      --  string literal, a static character expression, or another\n       --  concatenation. Arg cannot be a concatenation here as callers of\n       --  Resolve_Op_Concat_Arg call it separately on each final operand, past\n       --  concatenation operations.\n \n       if Is_Character_Type (Etype (Arg)) then\n          if not Is_Static_Expression (Arg) then\n-            Check_Formal_Restriction\n+            Check_SPARK_Restriction\n               (\"character operand for concatenation should be static\", N);\n          end if;\n \n       elsif Is_String_Type (Etype (Arg)) then\n          if not Is_Static_Expression (Arg) then\n-            Check_Formal_Restriction\n+            Check_SPARK_Restriction\n               (\"string operand for concatenation should be static\", N);\n          end if;\n \n@@ -8032,7 +8032,7 @@ package body Sem_Res is\n         and then Etype (Expr) /= Any_Composite  --  or else Expr in error\n         and then not Matching_Static_Array_Bounds (Target_Typ, Etype (Expr))\n       then\n-         Check_Formal_Restriction\n+         Check_SPARK_Restriction\n            (\"array types should have matching static bounds\", N);\n       end if;\n \n@@ -9150,15 +9150,15 @@ package body Sem_Res is\n \n       Resolve (Operand);\n \n-      --  In SPARK or ALFA, a type conversion between array types should be\n-      --  restricted to types which have matching static bounds.\n+      --  In SPARK, a type conversion between array types should be restricted\n+      --  to types which have matching static bounds.\n \n       if Is_Array_Type (Target_Typ)\n         and then Is_Array_Type (Operand_Typ)\n         and then Operand_Typ /= Any_Composite  --  or else Operand in error\n         and then not Matching_Static_Array_Bounds (Target_Typ, Operand_Typ)\n       then\n-         Check_Formal_Restriction\n+         Check_SPARK_Restriction\n            (\"array types should have matching static bounds\", N);\n       end if;\n \n@@ -9172,7 +9172,7 @@ package body Sem_Res is\n         and then Is_Ancestor (Target_Typ, Operand_Typ)\n         and then not Is_SPARK_Object_Reference (Operand)\n       then\n-         Check_Formal_Restriction (\"object required\", Operand);\n+         Check_SPARK_Restriction (\"object required\", Operand);\n       end if;\n \n       --  Note: we do the Eval_Type_Conversion call before applying the\n@@ -9414,7 +9414,7 @@ package body Sem_Res is\n    begin\n       if Is_Modular_Integer_Type (Typ) and then Nkind (N) /= N_Op_Not then\n          Error_Msg_Name_1 := Chars (Typ);\n-         Check_Formal_Restriction\n+         Check_SPARK_Restriction\n            (\"unary operator not defined for modular type%\", N);\n       end if;\n "}, {"sha": "b69badad644f655129e5e0c91d9dd39a26ce297a", "filename": "gcc/ada/sem_util.adb", "status": "modified", "additions": 5, "deletions": 6, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2ba431e53edd2d06e5040a585454680990935d9d/gcc%2Fada%2Fsem_util.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2ba431e53edd2d06e5040a585454680990935d9d/gcc%2Fada%2Fsem_util.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_util.adb?ref=2ba431e53edd2d06e5040a585454680990935d9d", "patch": "@@ -1179,7 +1179,7 @@ package body Sem_Util is\n                      end if;\n                   else\n                      Error_Msg_Sloc := Body_Sloc;\n-                     Check_Formal_Restriction\n+                     Check_SPARK_Restriction\n                        (\"decl cannot appear after body#\", Decl);\n                   end if;\n                end if;\n@@ -3315,11 +3315,10 @@ package body Sem_Util is\n       Append_Entity     (Def_Id, S);\n       Set_Public_Status (Def_Id);\n \n-      --  Declaring a homonym is not allowed in SPARK or ALFA ...\n+      --  Declaring a homonym is not allowed in SPARK ...\n \n       if Present (C)\n-        and then (Restriction_Check_Required (SPARK)\n-                   or else Formal_Verification_Mode)\n+        and then Restriction_Check_Required (SPARK)\n       then\n \n          declare\n@@ -3359,7 +3358,7 @@ package body Sem_Util is\n               and then Comes_From_Source (C)\n             then\n                Error_Msg_Sloc := Sloc (C);\n-               Check_Formal_Restriction\n+               Check_SPARK_Restriction\n                  (\"redeclaration of identifier &#\", Def_Id);\n             end if;\n          end;\n@@ -10789,7 +10788,7 @@ package body Sem_Util is\n            and then (Typ = 't' or else Ekind (Ent) = E_Package)\n          then\n             Error_Msg_Node_1 := Endl;\n-            Check_Formal_Restriction (\"`END &` required\", Endl, Force => True);\n+            Check_SPARK_Restriction (\"`END &` required\", Endl, Force => True);\n          end if;\n       end if;\n "}]}