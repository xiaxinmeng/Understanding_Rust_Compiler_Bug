{"sha": "56d78c58c233a358c780571ad6fecbabdcff2407", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTZkNzhjNThjMjMzYTM1OGM3ODA1NzFhZDZmZWNiYWJkY2ZmMjQwNw==", "commit": {"author": {"name": "Xionghu Luo", "email": "luoxhu@linux.ibm.com", "date": "2020-07-13T01:22:56Z"}, "committer": {"name": "Xionghu Luo", "email": "luoxhu@linux.ibm.com", "date": "2020-07-13T01:22:56Z"}, "message": "rs6000: Define define_insn_and_split to split unspec sldi+or to rldimi\n\nCombine pass could recognize the pattern defined and split it in split1,\nthis patch could optimize:\n\n21: r130:DI=r133:DI<<0x20\n11: {r129:DI=zero_extend(unspec[[r145:DI]] 87);clobber scratch;}\n22: r134:DI=r130:DI|r129:DI\n\nto\n\n21: {r149:DI=zero_extend(unspec[[r145:DI]] 87);clobber scratch;}\n22: r134:DI=r149:DI&0xffffffff|r133:DI<<0x20\n\nrldimi is generated instead of sldi+or.\n\ngcc/ChangeLog:\n\n2020-07-13  Xionghu Luo  <luoxhu@linux.ibm.com>\n\n\t* config/rs6000/rs6000.md (rotl_unspec): New\n\tdefine_insn_and_split.\n\ngcc/testsuite/ChangeLog:\n\n2020-07-13  Xionghu Luo  <luoxhu@linux.ibm.com>\n\n\t* gcc.target/powerpc/vector_float.c: New test.", "tree": {"sha": "fd0a9f62e59f360a0385d50104235e997814a3b7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/fd0a9f62e59f360a0385d50104235e997814a3b7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/56d78c58c233a358c780571ad6fecbabdcff2407", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/56d78c58c233a358c780571ad6fecbabdcff2407", "html_url": "https://github.com/Rust-GCC/gccrs/commit/56d78c58c233a358c780571ad6fecbabdcff2407", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/56d78c58c233a358c780571ad6fecbabdcff2407/comments", "author": {"login": "xionghul", "id": 4607154, "node_id": "MDQ6VXNlcjQ2MDcxNTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/4607154?v=4", "gravatar_id": "", "url": "https://api.github.com/users/xionghul", "html_url": "https://github.com/xionghul", "followers_url": "https://api.github.com/users/xionghul/followers", "following_url": "https://api.github.com/users/xionghul/following{/other_user}", "gists_url": "https://api.github.com/users/xionghul/gists{/gist_id}", "starred_url": "https://api.github.com/users/xionghul/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/xionghul/subscriptions", "organizations_url": "https://api.github.com/users/xionghul/orgs", "repos_url": "https://api.github.com/users/xionghul/repos", "events_url": "https://api.github.com/users/xionghul/events{/privacy}", "received_events_url": "https://api.github.com/users/xionghul/received_events", "type": "User", "site_admin": false}, "committer": {"login": "xionghul", "id": 4607154, "node_id": "MDQ6VXNlcjQ2MDcxNTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/4607154?v=4", "gravatar_id": "", "url": "https://api.github.com/users/xionghul", "html_url": "https://github.com/xionghul", "followers_url": "https://api.github.com/users/xionghul/followers", "following_url": "https://api.github.com/users/xionghul/following{/other_user}", "gists_url": "https://api.github.com/users/xionghul/gists{/gist_id}", "starred_url": "https://api.github.com/users/xionghul/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/xionghul/subscriptions", "organizations_url": "https://api.github.com/users/xionghul/orgs", "repos_url": "https://api.github.com/users/xionghul/repos", "events_url": "https://api.github.com/users/xionghul/events{/privacy}", "received_events_url": "https://api.github.com/users/xionghul/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "466dd1629c699599050f68d2bfee58be9db40aab", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/466dd1629c699599050f68d2bfee58be9db40aab", "html_url": "https://github.com/Rust-GCC/gccrs/commit/466dd1629c699599050f68d2bfee58be9db40aab"}], "stats": {"total": 41, "additions": 41, "deletions": 0}, "files": [{"sha": "e608a17156ca290ae108d0d0000fea7b8dd539c0", "filename": "gcc/config/rs6000/rs6000.md", "status": "modified", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/56d78c58c233a358c780571ad6fecbabdcff2407/gcc%2Fconfig%2Frs6000%2Frs6000.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/56d78c58c233a358c780571ad6fecbabdcff2407/gcc%2Fconfig%2Frs6000%2Frs6000.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.md?ref=56d78c58c233a358c780571ad6fecbabdcff2407", "patch": "@@ -4240,6 +4240,32 @@\n   operands[5] = GEN_INT ((HOST_WIDE_INT_1U << <bits>) - 1);\n })\n \n+; rldimi with UNSPEC_SI_FROM_SF.\n+(define_insn_and_split \"*rotldi3_insert_sf\"\n+  [(set (match_operand:DI 0 \"gpc_reg_operand\")\n+\t(ior:DI\n+\t (ashift:DI (match_operand:DI 1 \"gpc_reg_operand\")\n+\t  (match_operand:SI 2 \"const_int_operand\"))\n+\t (zero_extend:DI\n+\t  (unspec:QHSI\n+\t   [(match_operand:SF 3 \"memory_operand\")]\n+\t   UNSPEC_SI_FROM_SF))))\n+  (clobber (match_scratch:V4SF 4))]\n+  \"INTVAL (operands[2]) == <bits>\"\n+  \"#\"\n+  \"\"\n+  [(parallel [(set (match_dup 5)\n+      (zero_extend:DI (unspec:QHSI [(match_dup 3)] UNSPEC_SI_FROM_SF)))\n+    (clobber (match_dup 4))])\n+  (set (match_dup 0)\n+   (ior:DI\n+    (and:DI (match_dup 5) (match_dup 6))\n+    (ashift:DI (match_dup 1) (match_dup 2))))]\n+{\n+  operands[5] = gen_reg_rtx (DImode);\n+  operands[6] = GEN_INT ((HOST_WIDE_INT_1U << <bits>) - 1);\n+})\n+\n ; rlwimi, too.\n (define_split\n   [(set (match_operand:SI 0 \"gpc_reg_operand\")"}, {"sha": "e6946da2b931739b78934a8440aaef4c5024f3d2", "filename": "gcc/testsuite/gcc.target/powerpc/vector_float.c", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/56d78c58c233a358c780571ad6fecbabdcff2407/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fvector_float.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/56d78c58c233a358c780571ad6fecbabdcff2407/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fvector_float.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fvector_float.c?ref=56d78c58c233a358c780571ad6fecbabdcff2407", "patch": "@@ -0,0 +1,15 @@\n+/* { dg-do compile } */\n+/* { dg-require-effective-target powerpc_p9vector_ok } */\n+/* { dg-options \"-O2 -mdejagnu-cpu=power9\" } */\n+\n+vector float\n+test (float *a, float *b, float *c, float *d)\n+{\n+  return (vector float){*a, *b, *c, *d};\n+}\n+\n+/* { dg-final { scan-assembler-not {\\mlxssp} } } */\n+/* { dg-final { scan-assembler-not {\\mlfs} } } */\n+/* { dg-final { scan-assembler-times {\\mlwz\\M} 4 } } */\n+/* { dg-final { scan-assembler-times {\\mrldimi\\M} 2 } } */\n+/* { dg-final { scan-assembler-times {\\mmtvsrdd\\M} 1 } } */"}]}