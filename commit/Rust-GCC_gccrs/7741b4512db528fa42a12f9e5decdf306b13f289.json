{"sha": "7741b4512db528fa42a12f9e5decdf306b13f289", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Nzc0MWI0NTEyZGI1MjhmYTQyYTEyZjllNWRlY2RmMzA2YjEzZjI4OQ==", "commit": {"author": {"name": "Maciej W. Rozycki", "email": "macro@linux-mips.org", "date": "2005-08-15T16:15:16Z"}, "committer": {"name": "Maciej W. Rozycki", "email": "macro@gcc.gnu.org", "date": "2005-08-15T16:15:16Z"}, "message": "configure.ac: Test for the name of the symbol used for the entry point...\n\n* configure.ac: Test for the name of the symbol used for the entry\npoint; define ENTRY_POINT to the result.\n* configure: Regenerate.\n* config.h.in: Regenerate.\n* mf-heuristics.c: Replace _start with ENTRY_POINT throughout.\n\nFrom-SVN: r103113", "tree": {"sha": "9deba4f5d6424162c80507c90160849056f70c08", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9deba4f5d6424162c80507c90160849056f70c08"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7741b4512db528fa42a12f9e5decdf306b13f289", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7741b4512db528fa42a12f9e5decdf306b13f289", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7741b4512db528fa42a12f9e5decdf306b13f289", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7741b4512db528fa42a12f9e5decdf306b13f289/comments", "author": null, "committer": null, "parents": [{"sha": "a73035ae3b9f2bd4f037a056aa8e66749954e6ee", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a73035ae3b9f2bd4f037a056aa8e66749954e6ee", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a73035ae3b9f2bd4f037a056aa8e66749954e6ee"}], "stats": {"total": 105, "additions": 101, "deletions": 4}, "files": [{"sha": "c42fa25360034306960a73e200a649c8554e9dd8", "filename": "libmudflap/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7741b4512db528fa42a12f9e5decdf306b13f289/libmudflap%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7741b4512db528fa42a12f9e5decdf306b13f289/libmudflap%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libmudflap%2FChangeLog?ref=7741b4512db528fa42a12f9e5decdf306b13f289", "patch": "@@ -1,3 +1,11 @@\n+2005-08-15  Maciej W. Rozycki  <macro@linux-mips.org>\n+\n+\t* configure.ac: Test for the name of the symbol used for the entry\n+\tpoint; define ENTRY_POINT to the result.\n+\t* configure: Regenerate.\n+\t* config.h.in: Regenerate.\n+\t* mf-heuristics.c: Replace _start with ENTRY_POINT throughout.\n+\n 2005-08-14  Ulrich Weigand  <weigand@informatik.uni-erlangen.de>\n \n \t* mf-runtime.c (__mf_state_1): Initialize to reentrant."}, {"sha": "98c3f61946232ffbb7eada1e112277c8fd4a47aa", "filename": "libmudflap/config.h.in", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7741b4512db528fa42a12f9e5decdf306b13f289/libmudflap%2Fconfig.h.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7741b4512db528fa42a12f9e5decdf306b13f289/libmudflap%2Fconfig.h.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libmudflap%2Fconfig.h.in?ref=7741b4512db528fa42a12f9e5decdf306b13f289", "patch": "@@ -1,5 +1,8 @@\n /* config.h.in.  Generated from configure.ac by autoheader.  */\n \n+/* Define to the name of the symbol used for the entry point. */\n+#undef ENTRY_POINT\n+\n /* Define to 1 if you have the `addmntent' function. */\n #undef HAVE_ADDMNTENT\n "}, {"sha": "3fe9a1a184150ba97ad41901725264bc0517829b", "filename": "libmudflap/configure", "status": "modified", "additions": 70, "deletions": 0, "changes": 70, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7741b4512db528fa42a12f9e5decdf306b13f289/libmudflap%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7741b4512db528fa42a12f9e5decdf306b13f289/libmudflap%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libmudflap%2Fconfigure?ref=7741b4512db528fa42a12f9e5decdf306b13f289", "patch": "@@ -6894,6 +6894,76 @@ echo \"${ECHO_T}$ac_fdsections\" >&6\n \n \n \n+# Check for the name of the symbol used for the entry point.\n+echo \"$as_me:$LINENO: checking for the name of the symbol used for the entry point\" >&5\n+echo $ECHO_N \"checking for the name of the symbol used for the entry point... $ECHO_C\" >&6\n+if test \"${mudflap_cv_entry_point+set}\" = set; then\n+  echo $ECHO_N \"(cached) $ECHO_C\" >&6\n+else\n+\n+for name in _start __start unknown; do\n+  cat >conftest.$ac_ext <<_ACEOF\n+/* confdefs.h.  */\n+_ACEOF\n+cat confdefs.h >>conftest.$ac_ext\n+cat >>conftest.$ac_ext <<_ACEOF\n+/* end confdefs.h.  */\n+extern char $name;\n+int\n+main ()\n+{\n+$name = 0;\n+  ;\n+  return 0;\n+}\n+_ACEOF\n+rm -f conftest.$ac_objext conftest$ac_exeext\n+if { (eval echo \"$as_me:$LINENO: \\\"$ac_link\\\"\") >&5\n+  (eval $ac_link) 2>conftest.er1\n+  ac_status=$?\n+  grep -v '^ *+' conftest.er1 >conftest.err\n+  rm -f conftest.er1\n+  cat conftest.err >&5\n+  echo \"$as_me:$LINENO: \\$? = $ac_status\" >&5\n+  (exit $ac_status); } &&\n+\t { ac_try='test -z \"$ac_c_werror_flag\"\n+\t\t\t || test ! -s conftest.err'\n+  { (eval echo \"$as_me:$LINENO: \\\"$ac_try\\\"\") >&5\n+  (eval $ac_try) 2>&5\n+  ac_status=$?\n+  echo \"$as_me:$LINENO: \\$? = $ac_status\" >&5\n+  (exit $ac_status); }; } &&\n+\t { ac_try='test -s conftest$ac_exeext'\n+  { (eval echo \"$as_me:$LINENO: \\\"$ac_try\\\"\") >&5\n+  (eval $ac_try) 2>&5\n+  ac_status=$?\n+  echo \"$as_me:$LINENO: \\$? = $ac_status\" >&5\n+  (exit $ac_status); }; }; then\n+  break\n+else\n+  echo \"$as_me: failed program was:\" >&5\n+sed 's/^/| /' conftest.$ac_ext >&5\n+\n+fi\n+rm -f conftest.err conftest.$ac_objext \\\n+      conftest$ac_exeext conftest.$ac_ext\n+done\n+mudflap_cv_entry_point=\"$name\"\n+fi\n+echo \"$as_me:$LINENO: result: $mudflap_cv_entry_point\" >&5\n+echo \"${ECHO_T}$mudflap_cv_entry_point\" >&6\n+if test \"$mudflap_cv_entry_point\" = unknown; then\n+  { { echo \"$as_me:$LINENO: error: none of the known symbol names works\" >&5\n+echo \"$as_me: error: none of the known symbol names works\" >&2;}\n+   { (exit 1); exit 1; }; }\n+fi\n+\n+cat >>confdefs.h <<_ACEOF\n+#define ENTRY_POINT $mudflap_cv_entry_point\n+_ACEOF\n+\n+\n+\n if test ${multilib} = yes; then\n   multilib_arg=\"--enable-multilib\"\n else"}, {"sha": "4d0ff1311faad3821fb7674c4008d9ac595eea55", "filename": "libmudflap/configure.ac", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7741b4512db528fa42a12f9e5decdf306b13f289/libmudflap%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7741b4512db528fa42a12f9e5decdf306b13f289/libmudflap%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libmudflap%2Fconfigure.ac?ref=7741b4512db528fa42a12f9e5decdf306b13f289", "patch": "@@ -223,6 +223,21 @@ AC_MSG_RESULT($ac_fdsections)\n AC_SUBST(SECTION_FLAGS)\n \n \n+# Check for the name of the symbol used for the entry point.\n+AC_CACHE_CHECK([for the name of the symbol used for the entry point],\n+  [mudflap_cv_entry_point], [\n+for name in _start __start unknown; do\n+  AC_LINK_IFELSE([AC_LANG_PROGRAM([extern char $name;], [$name = 0;])],\n+\t\t [break])\n+done\n+mudflap_cv_entry_point=\"$name\"])\n+if test \"$mudflap_cv_entry_point\" = unknown; then\n+  AC_MSG_ERROR([none of the known symbol names works])\n+fi\n+AC_DEFINE_UNQUOTED([ENTRY_POINT], [$mudflap_cv_entry_point],\n+  [Define to the name of the symbol used for the entry point.])\n+\n+\n if test ${multilib} = yes; then\n   multilib_arg=\"--enable-multilib\"\n else"}, {"sha": "9118bc6e61b8557b2d993a19ee9a862944276733", "filename": "libmudflap/mf-heuristics.c", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7741b4512db528fa42a12f9e5decdf306b13f289/libmudflap%2Fmf-heuristics.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7741b4512db528fa42a12f9e5decdf306b13f289/libmudflap%2Fmf-heuristics.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libmudflap%2Fmf-heuristics.c?ref=7741b4512db528fa42a12f9e5decdf306b13f289", "patch": "@@ -43,7 +43,7 @@ Software Foundation, 59 Temple Place - Suite 330, Boston, MA\n \n \n extern char _end;\n-extern char _start;\n+extern char ENTRY_POINT;\n \n \n /* Run some quick validation of the given region.\n@@ -164,10 +164,11 @@ __mf_heuristic_check (uintptr_t ptr, uintptr_t ptr_high)\n     }\n \n \n-  /* The third heuristic is to approve all accesses between _start and _end,\n-     which should include all text and initialized data.  */\n+  /* The third heuristic is to approve all accesses between _start (or its\n+     equivalent for the given target) and _end, which should include all\n+     text and initialized data.  */\n   if (__mf_opts.heur_start_end)\n-    if (ptr >= (uintptr_t) & _start && ptr_high <= (uintptr_t) & _end)\n+    if (ptr >= (uintptr_t) & ENTRY_POINT && ptr_high <= (uintptr_t) & _end)\n       return 1; /* uncacheable */\n \n   return 0; /* unknown */"}]}