{"sha": "228692e24fc8aa6aa3dbf470f4bc25b93e031dde", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjI4NjkyZTI0ZmM4YWE2YWEzZGJmNDcwZjRiYzI1YjkzZTAzMWRkZQ==", "commit": {"author": {"name": "Richard Earnshaw", "email": "rearnsha@arm.com", "date": "2003-03-20T22:04:56Z"}, "committer": {"name": "Richard Earnshaw", "email": "rearnsha@gcc.gnu.org", "date": "2003-03-20T22:04:56Z"}, "message": "re PR target/10066 ([arm-linux] libjava build error on arm-linux)\n\nPR 10066\n* arm.md (UNSPEC_PIC_BASE): New constant.\n(pic_add_dot_plus_four): Wrap with unspec.\n(pic_add_dot_plus_eight): Likewise.\n\nFrom-SVN: r64626", "tree": {"sha": "3802129a0f15fe0c9e8aa4d81b93e8e305869851", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3802129a0f15fe0c9e8aa4d81b93e8e305869851"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/228692e24fc8aa6aa3dbf470f4bc25b93e031dde", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/228692e24fc8aa6aa3dbf470f4bc25b93e031dde", "html_url": "https://github.com/Rust-GCC/gccrs/commit/228692e24fc8aa6aa3dbf470f4bc25b93e031dde", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/228692e24fc8aa6aa3dbf470f4bc25b93e031dde/comments", "author": null, "committer": null, "parents": [{"sha": "a260bce67642765094ec0bbfa3687876c7a2f51c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a260bce67642765094ec0bbfa3687876c7a2f51c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a260bce67642765094ec0bbfa3687876c7a2f51c"}], "stats": {"total": 21, "additions": 18, "deletions": 3}, "files": [{"sha": "9ad15c8f8a90eb2c5b5280635cfcaa64a0eb77f8", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/228692e24fc8aa6aa3dbf470f4bc25b93e031dde/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/228692e24fc8aa6aa3dbf470f4bc25b93e031dde/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=228692e24fc8aa6aa3dbf470f4bc25b93e031dde", "patch": "@@ -1,3 +1,10 @@\n+2003-03-20  Richard Earnshaw  <rearnsha@arm.com>\n+\n+\tPR 10066\n+\t* arm.md (UNSPEC_PIC_BASE): New constant.\n+\t(pic_add_dot_plus_four): Wrap with unspec.\n+\t(pic_add_dot_plus_eight): Likewise.\n+\n 2003-03-20  Kazu Hirata  <kazu@cs.umass.edu>\n \n \t* config/h8300/h8300.md (*insv_si_1_n): New."}, {"sha": "4e111289a38b3573e266b30bcb28310c0f369fe7", "filename": "gcc/config/arm/arm.md", "status": "modified", "additions": 11, "deletions": 3, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/228692e24fc8aa6aa3dbf470f4bc25b93e031dde/gcc%2Fconfig%2Farm%2Farm.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/228692e24fc8aa6aa3dbf470f4bc25b93e031dde/gcc%2Fconfig%2Farm%2Farm.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm.md?ref=228692e24fc8aa6aa3dbf470f4bc25b93e031dde", "patch": "@@ -56,7 +56,11 @@\n    (UNSPEC_PIC_SYM   3) ; A symbol that has been treated properly for pic\n \t\t\t;   usage, that is, we will add the pic_register\n \t\t\t;   value to it before trying to dereference it.\n-   (UNSPEC_PRLG_STK  4) ; A special barrier that prevents frame accesses \n+   (UNSPEC_PIC_BASE  4)\t; Adding the PC value to the offset to the\n+\t\t\t;   GLOBAL_OFFSET_TABLE.  The operation is fully\n+\t\t\t;   described by the RTL but must be wrapped to\n+\t\t\t;   prevent combine from trying to rip it apart.\n+   (UNSPEC_PRLG_STK  5) ; A special barrier that prevents frame accesses \n \t\t\t;   being scheduled before the stack adjustment insn.\n    (UNSPEC_PROLOGUE_USE 6) ; As USE insns are not meaningful after reload,\n    \t\t\t; this unspec is used to prevent the deletion of\n@@ -3825,7 +3829,9 @@\n \n (define_insn \"pic_add_dot_plus_four\"\n   [(set (match_operand:SI 0 \"register_operand\" \"+r\")\n-\t(plus:SI (match_dup 0) (const (plus:SI (pc) (const_int 4)))))\n+\t(unspec:SI [(plus:SI (match_dup 0)\n+\t\t\t     (const (plus:SI (pc) (const_int 4))))]\n+\t\t   UNSPEC_PIC_BASE))\n    (use (label_ref (match_operand 1 \"\" \"\")))]\n   \"TARGET_THUMB && flag_pic\"\n   \"*\n@@ -3838,7 +3844,9 @@\n \n (define_insn \"pic_add_dot_plus_eight\"\n   [(set (match_operand:SI 0 \"register_operand\" \"+r\")\n-\t(plus:SI (match_dup 0) (const (plus:SI (pc) (const_int 8)))))\n+\t(unspec:SI [(plus:SI (match_dup 0)\n+\t\t\t     (const (plus:SI (pc) (const_int 8))))]\n+\t\t   UNSPEC_PIC_BASE))\n    (use (label_ref (match_operand 1 \"\" \"\")))]\n   \"TARGET_ARM && flag_pic\"\n   \"*"}]}