{"sha": "24377ae42f5715c9e6857645a7476644244032e3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjQzNzdhZTQyZjU3MTVjOWU2ODU3NjQ1YTc0NzY2NDQyNDQwMzJlMw==", "commit": {"author": {"name": "Robert Dewar", "email": "dewar@gnat.com", "date": "2001-10-26T01:41:17Z"}, "committer": {"name": "Geert Bosch", "email": "bosch@gcc.gnu.org", "date": "2001-10-26T01:41:17Z"}, "message": "s-atacco.ads: Add pragma Inline_Always for functions.\n\n\t* s-atacco.ads: Add pragma Inline_Always for functions.\n\tFix header format. Add copyright 2001\n\nFrom-SVN: r46518", "tree": {"sha": "3f0087a351e27c0d9ea29709022a85395a3b7602", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3f0087a351e27c0d9ea29709022a85395a3b7602"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/24377ae42f5715c9e6857645a7476644244032e3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/24377ae42f5715c9e6857645a7476644244032e3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/24377ae42f5715c9e6857645a7476644244032e3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/24377ae42f5715c9e6857645a7476644244032e3/comments", "author": null, "committer": null, "parents": [{"sha": "fef3204ec6f690b5b3eea1fbb782556202804af8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fef3204ec6f690b5b3eea1fbb782556202804af8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fef3204ec6f690b5b3eea1fbb782556202804af8"}], "stats": {"total": 41, "additions": 36, "deletions": 5}, "files": [{"sha": "763f74164523950c7aca123c9dbae560f5834a88", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/24377ae42f5715c9e6857645a7476644244032e3/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/24377ae42f5715c9e6857645a7476644244032e3/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=24377ae42f5715c9e6857645a7476644244032e3", "patch": "@@ -1,3 +1,8 @@\n+2001-10-25  Robert Dewar <dewar@gnat.com>\n+\n+\t* s-atacco.ads: Add pragma Inline_Always for functions.\n+\tFix header format. Add copyright 2001\n+\n 2001-10-25  Ed Schonberg <schonber@gnat.com>\n \n \t* par-ch3.adb (P_Subtype_Mark_Resync): for an anonymous array "}, {"sha": "3f44bc38f2832ba5e711ef504119ea04a2c44426", "filename": "gcc/ada/s-atacco.ads", "status": "modified", "additions": 31, "deletions": 5, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/24377ae42f5715c9e6857645a7476644244032e3/gcc%2Fada%2Fs-atacco.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/24377ae42f5715c9e6857645a7476644244032e3/gcc%2Fada%2Fs-atacco.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-atacco.ads?ref=24377ae42f5715c9e6857645a7476644244032e3", "patch": "@@ -6,12 +6,34 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---                            $Revision: 1.3 $                              --\n+--                            $Revision$\n --                                                                          --\n--- This specification is adapted from the Ada Reference Manual for use with --\n--- GNAT.  In accordance with the copyright of that document, you can freely --\n--- copy and modify this specification,  provided that if you redistribute a --\n--- modified version,  any changes that you have made are clearly indicated. --\n+--              Copyright (C) 2001 Ada Core Technologies, Inc.              --\n+--                                                                          --\n+-- This specification is derived from the Ada Reference Manual for use with --\n+-- GNAT. The copyright notice above, and the license provisions that follow --\n+-- apply solely to the  contents of the part following the private keyword. --\n+--                                                                          --\n+-- GNAT is free software;  you can  redistribute it  and/or modify it under --\n+-- terms of the  GNU General Public License as published  by the Free Soft- --\n+-- ware  Foundation;  either version 2,  or (at your option) any later ver- --\n+-- sion.  GNAT is distributed in the hope that it will be useful, but WITH- --\n+-- OUT ANY WARRANTY;  without even the  implied warranty of MERCHANTABILITY --\n+-- or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License --\n+-- for  more details.  You should have  received  a copy of the GNU General --\n+-- Public License  distributed with GNAT;  see file COPYING.  If not, write --\n+-- to  the Free Software Foundation,  59 Temple Place - Suite 330,  Boston, --\n+-- MA 02111-1307, USA.                                                      --\n+--                                                                          --\n+-- As a special exception,  if other files  instantiate  generics from this --\n+-- unit, or you link  this unit with other files  to produce an executable, --\n+-- this  unit  does not  by itself cause  the resulting  executable  to  be --\n+-- covered  by the  GNU  General  Public  License.  This exception does not --\n+-- however invalidate  any other reasons why  the executable file  might be --\n+-- covered by the  GNU Public License.                                      --\n+--                                                                          --\n+-- GNAT was originally developed  by the GNAT team at  New York University. --\n+-- It is now maintained by Ada Core Technologies Inc (http://www.gnat.com). --\n --                                                                          --\n ------------------------------------------------------------------------------\n \n@@ -30,4 +52,8 @@ pragma Preelaborate (Address_To_Access_Conversions);\n    pragma Convention (Intrinsic, To_Pointer);\n    pragma Convention (Intrinsic, To_Address);\n \n+private\n+   pragma Inline_Always (To_Pointer);\n+   pragma Inline_Always (To_Address);\n+\n end System.Address_To_Access_Conversions;"}]}