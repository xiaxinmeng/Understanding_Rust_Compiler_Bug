{"sha": "12ea1b952d7f98224446c2ae2d9f6648126a2959", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTJlYTFiOTUyZDdmOTgyMjQ0NDZjMmFlMmQ5ZjY2NDgxMjZhMjk1OQ==", "commit": {"author": {"name": "David Malcolm", "email": "dmalcolm@redhat.com", "date": "2014-08-26T20:45:09Z"}, "committer": {"name": "David Malcolm", "email": "dmalcolm@gcc.gnu.org", "date": "2014-08-26T20:45:09Z"}, "message": "cselib (also touches sched-deps.c)\n\ngcc/\n2014-08-26  David Malcolm  <dmalcolm@redhat.com>\n\n\t* cselib.h (struct elt_loc_list): Strengthen field \"setting_insn\"\n\tfrom rtx to rtx_insn *.\n\t(cselib_lookup_from_insn): Likewise for final param.\n\t(cselib_subst_to_values_from_insn): Likewise.\n\t(cselib_add_permanent_equiv): Likewise.\n\n\t* cselib.c (cselib_current_insn): Likewise for this variable.\n\t(cselib_subst_to_values_from_insn): Likewise for param \"insn\".\n\t(cselib_lookup_from_insn): Likewise.\n\t(cselib_add_permanent_equiv): Likewise for param \"insn\" and local\n\t\"save_cselib_current_insn\".\n\t(cselib_process_insn): Replace use of NULL_RTX with NULL.\n\n\t* sched-deps.c (add_insn_mem_dependence): Strengthen param \"insn\"\n\tfrom rtx to rtx_insn *.\n\nFrom-SVN: r214550", "tree": {"sha": "154dbee33a6cd44634a89f47d194bea012ce3e02", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/154dbee33a6cd44634a89f47d194bea012ce3e02"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/12ea1b952d7f98224446c2ae2d9f6648126a2959", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/12ea1b952d7f98224446c2ae2d9f6648126a2959", "html_url": "https://github.com/Rust-GCC/gccrs/commit/12ea1b952d7f98224446c2ae2d9f6648126a2959", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/12ea1b952d7f98224446c2ae2d9f6648126a2959/comments", "author": {"login": "davidmalcolm", "id": 1553248, "node_id": "MDQ6VXNlcjE1NTMyNDg=", "avatar_url": "https://avatars.githubusercontent.com/u/1553248?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidmalcolm", "html_url": "https://github.com/davidmalcolm", "followers_url": "https://api.github.com/users/davidmalcolm/followers", "following_url": "https://api.github.com/users/davidmalcolm/following{/other_user}", "gists_url": "https://api.github.com/users/davidmalcolm/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidmalcolm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidmalcolm/subscriptions", "organizations_url": "https://api.github.com/users/davidmalcolm/orgs", "repos_url": "https://api.github.com/users/davidmalcolm/repos", "events_url": "https://api.github.com/users/davidmalcolm/events{/privacy}", "received_events_url": "https://api.github.com/users/davidmalcolm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "eb92d49a916d4484bb8eb0fd6be6e36328e29896", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/eb92d49a916d4484bb8eb0fd6be6e36328e29896", "html_url": "https://github.com/Rust-GCC/gccrs/commit/eb92d49a916d4484bb8eb0fd6be6e36328e29896"}], "stats": {"total": 44, "additions": 31, "deletions": 13}, "files": [{"sha": "4e3dd60235bdd65efba953fcd846b772c2016acb", "filename": "gcc/ChangeLog", "status": "modified", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/12ea1b952d7f98224446c2ae2d9f6648126a2959/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/12ea1b952d7f98224446c2ae2d9f6648126a2959/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=12ea1b952d7f98224446c2ae2d9f6648126a2959", "patch": "@@ -1,3 +1,21 @@\n+2014-08-26  David Malcolm  <dmalcolm@redhat.com>\n+\n+\t* cselib.h (struct elt_loc_list): Strengthen field \"setting_insn\"\n+\tfrom rtx to rtx_insn *.\n+\t(cselib_lookup_from_insn): Likewise for final param.\n+\t(cselib_subst_to_values_from_insn): Likewise.\n+\t(cselib_add_permanent_equiv): Likewise.\n+\n+\t* cselib.c (cselib_current_insn): Likewise for this variable.\n+\t(cselib_subst_to_values_from_insn): Likewise for param \"insn\".\n+\t(cselib_lookup_from_insn): Likewise.\n+\t(cselib_add_permanent_equiv): Likewise for param \"insn\" and local\n+\t\"save_cselib_current_insn\".\n+\t(cselib_process_insn): Replace use of NULL_RTX with NULL.\n+\n+\t* sched-deps.c (add_insn_mem_dependence): Strengthen param \"insn\"\n+\tfrom rtx to rtx_insn *.\n+\n 2014-08-26  David Malcolm  <dmalcolm@redhat.com>\n \n \t* dse.c (dse_step6): Strengthen local \"rinsn\" from rtx to"}, {"sha": "48ec937f975c0ea95dcb3a57eedb2189c521c4e3", "filename": "gcc/cselib.c", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/12ea1b952d7f98224446c2ae2d9f6648126a2959/gcc%2Fcselib.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/12ea1b952d7f98224446c2ae2d9f6648126a2959/gcc%2Fcselib.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcselib.c?ref=12ea1b952d7f98224446c2ae2d9f6648126a2959", "patch": "@@ -152,7 +152,7 @@ static hash_table<cselib_hasher> *cselib_preserved_hash_table;\n \n /* This is a global so we don't have to pass this through every function.\n    It is used in new_elt_loc_list to set SETTING_INSN.  */\n-static rtx cselib_current_insn;\n+static rtx_insn *cselib_current_insn;\n \n /* The unique id that the next create value will take.  */\n static unsigned int next_uid;\n@@ -1948,7 +1948,7 @@ cselib_subst_to_values (rtx x, enum machine_mode memmode)\n /* Wrapper for cselib_subst_to_values, that indicates X is in INSN.  */\n \n rtx\n-cselib_subst_to_values_from_insn (rtx x, enum machine_mode memmode, rtx insn)\n+cselib_subst_to_values_from_insn (rtx x, enum machine_mode memmode, rtx_insn *insn)\n {\n   rtx ret;\n   gcc_assert (!cselib_current_insn);\n@@ -2089,7 +2089,7 @@ cselib_lookup_1 (rtx x, enum machine_mode mode,\n \n cselib_val *\n cselib_lookup_from_insn (rtx x, enum machine_mode mode,\n-\t\t\t int create, enum machine_mode memmode, rtx insn)\n+\t\t\t int create, enum machine_mode memmode, rtx_insn *insn)\n {\n   cselib_val *ret;\n \n@@ -2401,10 +2401,10 @@ cselib_record_set (rtx dest, cselib_val *src_elt, cselib_val *dest_addr_elt)\n /* Make ELT and X's VALUE equivalent to each other at INSN.  */\n \n void\n-cselib_add_permanent_equiv (cselib_val *elt, rtx x, rtx insn)\n+cselib_add_permanent_equiv (cselib_val *elt, rtx x, rtx_insn *insn)\n {\n   cselib_val *nelt;\n-  rtx save_cselib_current_insn = cselib_current_insn;\n+  rtx_insn *save_cselib_current_insn = cselib_current_insn;\n \n   gcc_checking_assert (elt);\n   gcc_checking_assert (PRESERVED_VALUE_P (elt->val_rtx));\n@@ -2641,13 +2641,13 @@ cselib_process_insn (rtx_insn *insn)\n       && !cselib_preserve_constants)\n     {\n       cselib_reset_table (next_uid);\n-      cselib_current_insn = NULL_RTX;\n+      cselib_current_insn = NULL;\n       return;\n     }\n \n   if (! INSN_P (insn))\n     {\n-      cselib_current_insn = NULL_RTX;\n+      cselib_current_insn = NULL;\n       return;\n     }\n \n@@ -2697,7 +2697,7 @@ cselib_process_insn (rtx_insn *insn)\n       && fp_setter_insn (insn))\n     cselib_invalidate_rtx (stack_pointer_rtx);\n \n-  cselib_current_insn = NULL_RTX;\n+  cselib_current_insn = NULL;\n \n   if (n_useless_values > MAX_USELESS_VALUES\n       /* remove_useless_values is linear in the hash table size.  Avoid"}, {"sha": "ecf53e1ad1be2bb66bc0a4cd03e0431e3109a09c", "filename": "gcc/cselib.h", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/12ea1b952d7f98224446c2ae2d9f6648126a2959/gcc%2Fcselib.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/12ea1b952d7f98224446c2ae2d9f6648126a2959/gcc%2Fcselib.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcselib.h?ref=12ea1b952d7f98224446c2ae2d9f6648126a2959", "patch": "@@ -46,7 +46,7 @@ struct elt_loc_list {\n   /* An rtl expression that holds the value.  */\n   rtx loc;\n   /* The insn that made the equivalence.  */\n-  rtx setting_insn;\n+  rtx_insn *setting_insn;\n };\n \n /* Describe a single set that is part of an insn.  */\n@@ -71,7 +71,7 @@ extern void (*cselib_record_sets_hook) (rtx_insn *insn, struct cselib_set *sets,\n extern cselib_val *cselib_lookup (rtx, enum machine_mode,\n \t\t\t\t  int, enum machine_mode);\n extern cselib_val *cselib_lookup_from_insn (rtx, enum machine_mode,\n-\t\t\t\t\t    int, enum machine_mode, rtx);\n+\t\t\t\t\t    int, enum machine_mode, rtx_insn *);\n extern void cselib_init (int);\n extern void cselib_clear_table (void);\n extern void cselib_finish (void);\n@@ -87,7 +87,7 @@ extern rtx cselib_expand_value_rtx_cb (rtx, bitmap, int,\n extern bool cselib_dummy_expand_value_rtx_cb (rtx, bitmap, int,\n \t\t\t\t\t      cselib_expand_callback, void *);\n extern rtx cselib_subst_to_values (rtx, enum machine_mode);\n-extern rtx cselib_subst_to_values_from_insn (rtx, enum machine_mode, rtx);\n+extern rtx cselib_subst_to_values_from_insn (rtx, enum machine_mode, rtx_insn *);\n extern void cselib_invalidate_rtx (rtx);\n \n extern void cselib_reset_table (unsigned int);\n@@ -96,7 +96,7 @@ extern void cselib_preserve_value (cselib_val *);\n extern bool cselib_preserved_value_p (cselib_val *);\n extern void cselib_preserve_only_values (void);\n extern void cselib_preserve_cfa_base_value (cselib_val *, unsigned int);\n-extern void cselib_add_permanent_equiv (cselib_val *, rtx, rtx);\n+extern void cselib_add_permanent_equiv (cselib_val *, rtx, rtx_insn *);\n extern bool cselib_have_permanent_equivalences (void);\n extern void cselib_set_value_sp_based (cselib_val *);\n extern bool cselib_sp_based_value_p (cselib_val *);"}, {"sha": "84b1b17f1d780fecbcf1a74065ec6e3315defa23", "filename": "gcc/sched-deps.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/12ea1b952d7f98224446c2ae2d9f6648126a2959/gcc%2Fsched-deps.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/12ea1b952d7f98224446c2ae2d9f6648126a2959/gcc%2Fsched-deps.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fsched-deps.c?ref=12ea1b952d7f98224446c2ae2d9f6648126a2959", "patch": "@@ -1710,7 +1710,7 @@ chain_to_prev_insn (rtx_insn *insn)\n \n static void\n add_insn_mem_dependence (struct deps_desc *deps, bool read_p,\n-\t\t\t rtx insn, rtx mem)\n+\t\t\t rtx_insn *insn, rtx mem)\n {\n   rtx *insn_list;\n   rtx *mem_list;"}]}