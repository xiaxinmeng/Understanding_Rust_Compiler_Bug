{"sha": "0d459eaed8636dd6358b66eaa0fd2d8d4902b3c0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MGQ0NTllYWVkODYzNmRkNjM1OGI2NmVhYTBmZDJkOGQ0OTAyYjNjMA==", "commit": {"author": {"name": "Uros Bizjak", "email": "ubizjak@gmail.com", "date": "2011-10-23T19:48:41Z"}, "committer": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2011-10-23T19:48:41Z"}, "message": "sse.md (avx2_lshl<mode>3): Remove insn pattern.\n\n\t* config/i386/sse.md (avx2_lshl<mode>3): Remove insn pattern.\n\t(VI248_256): Remove mode iterator.\n\t* config/i386/i386.c (ix86_expand_vec_perm): Use gen_ashlv4di3\n\tinstead of gen_avx2_lshlv4di3.\n\t(bdesc_args): Use CODE_FOR_ashl{v16hi,v8si,v4di}3 instead of\n\tCODE_FOR_avx2_lshl{v16hi,v8si,v4di}3.\n\nFrom-SVN: r180346", "tree": {"sha": "bed429e787ba2bf0bed40969789c013aaf7d5585", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/bed429e787ba2bf0bed40969789c013aaf7d5585"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0d459eaed8636dd6358b66eaa0fd2d8d4902b3c0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0d459eaed8636dd6358b66eaa0fd2d8d4902b3c0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0d459eaed8636dd6358b66eaa0fd2d8d4902b3c0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0d459eaed8636dd6358b66eaa0fd2d8d4902b3c0/comments", "author": {"login": "ubizjak", "id": 55479990, "node_id": "MDQ6VXNlcjU1NDc5OTkw", "avatar_url": "https://avatars.githubusercontent.com/u/55479990?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ubizjak", "html_url": "https://github.com/ubizjak", "followers_url": "https://api.github.com/users/ubizjak/followers", "following_url": "https://api.github.com/users/ubizjak/following{/other_user}", "gists_url": "https://api.github.com/users/ubizjak/gists{/gist_id}", "starred_url": "https://api.github.com/users/ubizjak/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ubizjak/subscriptions", "organizations_url": "https://api.github.com/users/ubizjak/orgs", "repos_url": "https://api.github.com/users/ubizjak/repos", "events_url": "https://api.github.com/users/ubizjak/events{/privacy}", "received_events_url": "https://api.github.com/users/ubizjak/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "de27caacfb3da386f499e0f1c65a3246675824bc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/de27caacfb3da386f499e0f1c65a3246675824bc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/de27caacfb3da386f499e0f1c65a3246675824bc"}], "stats": {"total": 43, "additions": 18, "deletions": 25}, "files": [{"sha": "13d5fe4a50d8d104c8f7ab0b3263a850bc35e68b", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0d459eaed8636dd6358b66eaa0fd2d8d4902b3c0/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0d459eaed8636dd6358b66eaa0fd2d8d4902b3c0/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=0d459eaed8636dd6358b66eaa0fd2d8d4902b3c0", "patch": "@@ -1,3 +1,12 @@\n+2011-10-23  Uros Bizjak  <ubizjak@gmail.com>\n+\n+\t* config/i386/sse.md (avx2_lshl<mode>3): Remove insn pattern.\n+\t(VI248_256): Remove mode iterator.\n+\t* config/i386/i386.c (ix86_expand_vec_perm): Use gen_ashlv4di3\n+\tinstead of gen_avx2_lshlv4di3.\n+\t(bdesc_args): Use CODE_FOR_ashl{v16hi,v8si,v4di}3 instead of\n+\tCODE_FOR_avx2_lshl{v16hi,v8si,v4di}3.\n+\n 2011-10-23  Uros Bizjak  <ubizjak@gmail.com>\n \n \t* config/i386/sse.md (sseintprefix): Rename from gthrfirstp."}, {"sha": "ef1bbd317ce42351712b1425ed2fc08610ad0c51", "filename": "gcc/config/i386/i386.c", "status": "modified", "additions": 9, "deletions": 9, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0d459eaed8636dd6358b66eaa0fd2d8d4902b3c0/gcc%2Fconfig%2Fi386%2Fi386.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0d459eaed8636dd6358b66eaa0fd2d8d4902b3c0/gcc%2Fconfig%2Fi386%2Fi386.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.c?ref=0d459eaed8636dd6358b66eaa0fd2d8d4902b3c0", "patch": "@@ -19490,9 +19490,9 @@ ix86_expand_vec_perm (rtx operands[])\n \t     stands for other 12 bytes.  */\n \t  /* The bit whether element is from the same lane or the other\n \t     lane is bit 4, so shift it up by 3 to the MSB position.  */\n-\t  emit_insn (gen_avx2_lshlv4di3 (gen_lowpart (V4DImode, t1),\n-\t\t\t\t\t gen_lowpart (V4DImode, mask),\n-\t\t\t\t\t GEN_INT (3)));\n+\t  emit_insn (gen_ashlv4di3 (gen_lowpart (V4DImode, t1),\n+\t\t\t\t    gen_lowpart (V4DImode, mask),\n+\t\t\t\t    GEN_INT (3)));\n \t  /* Clear MSB bits from the mask just in case it had them set.  */\n \t  emit_insn (gen_avx2_andnotv32qi3 (t2, vt, mask));\n \t  /* After this t1 will have MSB set for elements from other lane.  */\n@@ -26289,12 +26289,12 @@ static const struct builtin_description bdesc_args[] =\n   { OPTION_MASK_ISA_AVX2, CODE_FOR_avx2_psignv16hi3, \"__builtin_ia32_psignw256\", IX86_BUILTIN_PSIGNW256, UNKNOWN, (int) V16HI_FTYPE_V16HI_V16HI },\n   { OPTION_MASK_ISA_AVX2, CODE_FOR_avx2_psignv8si3 , \"__builtin_ia32_psignd256\", IX86_BUILTIN_PSIGND256, UNKNOWN, (int) V8SI_FTYPE_V8SI_V8SI },\n   { OPTION_MASK_ISA_AVX2, CODE_FOR_avx2_ashlv2ti3, \"__builtin_ia32_pslldqi256\", IX86_BUILTIN_PSLLDQI256, UNKNOWN, (int) V4DI_FTYPE_V4DI_INT_CONVERT },\n-  { OPTION_MASK_ISA_AVX2, CODE_FOR_avx2_lshlv16hi3, \"__builtin_ia32_psllwi256\", IX86_BUILTIN_PSLLWI256 , UNKNOWN, (int) V16HI_FTYPE_V16HI_SI_COUNT },\n-  { OPTION_MASK_ISA_AVX2, CODE_FOR_avx2_lshlv16hi3, \"__builtin_ia32_psllw256\", IX86_BUILTIN_PSLLW256, UNKNOWN, (int) V16HI_FTYPE_V16HI_V8HI_COUNT },\n-  { OPTION_MASK_ISA_AVX2, CODE_FOR_avx2_lshlv8si3, \"__builtin_ia32_pslldi256\", IX86_BUILTIN_PSLLDI256, UNKNOWN, (int) V8SI_FTYPE_V8SI_SI_COUNT },\n-  { OPTION_MASK_ISA_AVX2, CODE_FOR_avx2_lshlv8si3, \"__builtin_ia32_pslld256\", IX86_BUILTIN_PSLLD256, UNKNOWN, (int) V8SI_FTYPE_V8SI_V4SI_COUNT },\n-  { OPTION_MASK_ISA_AVX2, CODE_FOR_avx2_lshlv4di3, \"__builtin_ia32_psllqi256\", IX86_BUILTIN_PSLLQI256, UNKNOWN, (int) V4DI_FTYPE_V4DI_INT_COUNT },\n-  { OPTION_MASK_ISA_AVX2, CODE_FOR_avx2_lshlv4di3, \"__builtin_ia32_psllq256\", IX86_BUILTIN_PSLLQ256, UNKNOWN, (int) V4DI_FTYPE_V4DI_V2DI_COUNT },\n+  { OPTION_MASK_ISA_AVX2, CODE_FOR_ashlv16hi3, \"__builtin_ia32_psllwi256\", IX86_BUILTIN_PSLLWI256 , UNKNOWN, (int) V16HI_FTYPE_V16HI_SI_COUNT },\n+  { OPTION_MASK_ISA_AVX2, CODE_FOR_ashlv16hi3, \"__builtin_ia32_psllw256\", IX86_BUILTIN_PSLLW256, UNKNOWN, (int) V16HI_FTYPE_V16HI_V8HI_COUNT },\n+  { OPTION_MASK_ISA_AVX2, CODE_FOR_ashlv8si3, \"__builtin_ia32_pslldi256\", IX86_BUILTIN_PSLLDI256, UNKNOWN, (int) V8SI_FTYPE_V8SI_SI_COUNT },\n+  { OPTION_MASK_ISA_AVX2, CODE_FOR_ashlv8si3, \"__builtin_ia32_pslld256\", IX86_BUILTIN_PSLLD256, UNKNOWN, (int) V8SI_FTYPE_V8SI_V4SI_COUNT },\n+  { OPTION_MASK_ISA_AVX2, CODE_FOR_ashlv4di3, \"__builtin_ia32_psllqi256\", IX86_BUILTIN_PSLLQI256, UNKNOWN, (int) V4DI_FTYPE_V4DI_INT_COUNT },\n+  { OPTION_MASK_ISA_AVX2, CODE_FOR_ashlv4di3, \"__builtin_ia32_psllq256\", IX86_BUILTIN_PSLLQ256, UNKNOWN, (int) V4DI_FTYPE_V4DI_V2DI_COUNT },\n   { OPTION_MASK_ISA_AVX2, CODE_FOR_ashrv16hi3, \"__builtin_ia32_psrawi256\", IX86_BUILTIN_PSRAWI256, UNKNOWN, (int) V16HI_FTYPE_V16HI_SI_COUNT },\n   { OPTION_MASK_ISA_AVX2, CODE_FOR_ashrv16hi3, \"__builtin_ia32_psraw256\", IX86_BUILTIN_PSRAW256, UNKNOWN, (int) V16HI_FTYPE_V16HI_V8HI_COUNT },\n   { OPTION_MASK_ISA_AVX2, CODE_FOR_ashrv8si3, \"__builtin_ia32_psradi256\", IX86_BUILTIN_PSRADI256, UNKNOWN, (int) V8SI_FTYPE_V8SI_SI_COUNT },"}, {"sha": "ee3af035e0239a1d01add4a98f538b1e22e8476a", "filename": "gcc/config/i386/sse.md", "status": "modified", "additions": 0, "deletions": 16, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0d459eaed8636dd6358b66eaa0fd2d8d4902b3c0/gcc%2Fconfig%2Fi386%2Fsse.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0d459eaed8636dd6358b66eaa0fd2d8d4902b3c0/gcc%2Fconfig%2Fi386%2Fsse.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fsse.md?ref=0d459eaed8636dd6358b66eaa0fd2d8d4902b3c0", "patch": "@@ -196,7 +196,6 @@\n \n ;; Random 256bit vector integer mode combinations\n (define_mode_iterator VI124_256 [V32QI V16HI V8SI])\n-(define_mode_iterator VI248_256 [V16HI V8SI V4DI])\n \n ;; Int-float size matches\n (define_mode_iterator VI4F_128 [V4SI V4SF])\n@@ -5804,21 +5803,6 @@\n    (set_attr \"prefix\" \"orig,vex\")\n    (set_attr \"mode\" \"<sseinsnmode>\")])\n \n-(define_insn \"avx2_lshl<mode>3\"\n-  [(set (match_operand:VI248_256 0 \"register_operand\" \"=x\")\n-\t(ashift:VI248_256\n-\t  (match_operand:VI248_256 1 \"register_operand\" \"x\")\n-\t  (match_operand:SI 2 \"nonmemory_operand\" \"xN\")))]\n-  \"TARGET_AVX2\"\n-  \"vpsll<ssemodesuffix>\\t{%2, %1, %0|%0, %1, %2}\"\n-  [(set_attr \"type\" \"sseishft\")\n-   (set_attr \"prefix\" \"vex\")\n-   (set (attr \"length_immediate\")\n-     (if_then_else (match_operand 2 \"const_int_operand\" \"\")\n-       (const_string \"1\")\n-       (const_string \"0\")))\n-   (set_attr \"mode\" \"OI\")])\n-\n (define_insn \"ashl<mode>3\"\n   [(set (match_operand:VI248_AVX2 0 \"register_operand\" \"=x,x\")\n \t(ashift:VI248_AVX2"}]}