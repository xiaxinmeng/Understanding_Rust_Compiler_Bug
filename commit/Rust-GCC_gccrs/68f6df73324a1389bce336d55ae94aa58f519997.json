{"sha": "68f6df73324a1389bce336d55ae94aa58f519997", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjhmNmRmNzMzMjRhMTM4OWJjZTMzNmQ1NWFlOTRhYTU4ZjUxOTk5Nw==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2014-06-18T08:33:44Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2014-06-18T08:33:44Z"}, "message": "common.opt (fssa-phiopt): New option.\n\n2014-06-18  Richard Biener  <rguenther@suse.de>\n\n\t* common.opt (fssa-phiopt): New option.\n\t* opts.c (default_options_table): Enable -fssa-phiopt with -O1+\n\tbut not with -Og.\n\t* tree-ssa-phiopt.c (pass_phiopt): Add gate method.\n\t* doc/invoke.texi (-fssa-phiopt): Document.\n\nFrom-SVN: r211772", "tree": {"sha": "cea22e859af7a194868852aa25abe1653a1d9ea2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/cea22e859af7a194868852aa25abe1653a1d9ea2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/68f6df73324a1389bce336d55ae94aa58f519997", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/68f6df73324a1389bce336d55ae94aa58f519997", "html_url": "https://github.com/Rust-GCC/gccrs/commit/68f6df73324a1389bce336d55ae94aa58f519997", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/68f6df73324a1389bce336d55ae94aa58f519997/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "419d45db8e25741704b8ccd06699e4d4cfcfbc4e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/419d45db8e25741704b8ccd06699e4d4cfcfbc4e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/419d45db8e25741704b8ccd06699e4d4cfcfbc4e"}], "stats": {"total": 22, "additions": 21, "deletions": 1}, "files": [{"sha": "39fa9c24ff6cd6169325dcafcba893bd9086030e", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/68f6df73324a1389bce336d55ae94aa58f519997/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/68f6df73324a1389bce336d55ae94aa58f519997/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=68f6df73324a1389bce336d55ae94aa58f519997", "patch": "@@ -1,3 +1,11 @@\n+2014-06-18  Richard Biener  <rguenther@suse.de>\n+\n+\t* common.opt (fssa-phiopt): New option.\n+\t* opts.c (default_options_table): Enable -fssa-phiopt with -O1+\n+\tbut not with -Og.\n+\t* tree-ssa-phiopt.c (pass_phiopt): Add gate method.\n+\t* doc/invoke.texi (-fssa-phiopt): Document.\n+\n 2014-06-18  Kyrylo Tkachov  <kyrylo.tkachov@arm.com>\n \n \t* genattrtab.c (n_bypassed): New variable."}, {"sha": "de13e01755cc221f95e1605af8d4874fa593eb49", "filename": "gcc/common.opt", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/68f6df73324a1389bce336d55ae94aa58f519997/gcc%2Fcommon.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/68f6df73324a1389bce336d55ae94aa58f519997/gcc%2Fcommon.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcommon.opt?ref=68f6df73324a1389bce336d55ae94aa58f519997", "patch": "@@ -1950,6 +1950,10 @@ fsplit-wide-types\n Common Report Var(flag_split_wide_types) Optimization\n Split wide types into independent registers\n \n+fssa-phiopt\n+Common Report Var(flag_ssa_phiopt) Optimization\n+Optimize conditional patterns using SSA PHI nodes\n+\n fvariable-expansion-in-unroller\n Common Report Var(flag_variable_expansion_in_unroller) Optimization\n Apply variable expansion when loops are unrolled"}, {"sha": "f7a54facdae19b35a060f1504873ea03877e2383", "filename": "gcc/doc/invoke.texi", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/68f6df73324a1389bce336d55ae94aa58f519997/gcc%2Fdoc%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/68f6df73324a1389bce336d55ae94aa58f519997/gcc%2Fdoc%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finvoke.texi?ref=68f6df73324a1389bce336d55ae94aa58f519997", "patch": "@@ -412,7 +412,7 @@ Objective-C and Objective-C++ Dialects}.\n -fselective-scheduling -fselective-scheduling2 @gol\n -fsel-sched-pipelining -fsel-sched-pipelining-outer-loops @gol\n -fshrink-wrap -fsignaling-nans -fsingle-precision-constant @gol\n--fsplit-ivs-in-unroller -fsplit-wide-types -fstack-protector @gol\n+-fsplit-ivs-in-unroller -fsplit-wide-types -fssa-phiopt -fstack-protector @gol\n -fstack-protector-all -fstack-protector-strong -fstrict-aliasing @gol\n -fstrict-overflow -fthread-jumps -ftracer -ftree-bit-ccp @gol\n -ftree-builtin-call-dce -ftree-ccp -ftree-ch @gol\n@@ -6907,6 +6907,7 @@ compilation time.\n -ftree-bit-ccp @gol\n -ftree-builtin-call-dce @gol\n -ftree-ccp @gol\n+-fssa-phiopt @gol\n -ftree-ch @gol\n -ftree-copyrename @gol\n -ftree-dce @gol\n@@ -7892,6 +7893,11 @@ Perform sparse conditional constant propagation (CCP) on trees.  This\n pass only operates on local scalar variables and is enabled by default\n at @option{-O} and higher.\n \n+@item -fssa-phiopt\n+@opindex fssa-phiopt\n+Perform pattern matching on SSA PHI nodes to optimize conditional\n+code.  This pass is enabled by default at @option{-O} and higher.\n+\n @item -ftree-switch-conversion\n Perform conversion of simple initializations in a switch to\n initializations from a scalar array.  This flag is enabled by default"}, {"sha": "324d54512ad2e3efb8e6ddc750206fa8efe52c34", "filename": "gcc/opts.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/68f6df73324a1389bce336d55ae94aa58f519997/gcc%2Fopts.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/68f6df73324a1389bce336d55ae94aa58f519997/gcc%2Fopts.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fopts.c?ref=68f6df73324a1389bce336d55ae94aa58f519997", "patch": "@@ -457,6 +457,7 @@ static const struct default_options default_options_table[] =\n     { OPT_LEVELS_1_PLUS_NOT_DEBUG, OPT_fbranch_count_reg, NULL, 1 },\n     { OPT_LEVELS_1_PLUS_NOT_DEBUG, OPT_fmove_loop_invariants, NULL, 1 },\n     { OPT_LEVELS_1_PLUS_NOT_DEBUG, OPT_ftree_pta, NULL, 1 },\n+    { OPT_LEVELS_1_PLUS_NOT_DEBUG, OPT_fssa_phiopt, NULL, 1 },\n \n     /* -O2 optimizations.  */\n     { OPT_LEVELS_2_PLUS, OPT_finline_small_functions, NULL, 1 },"}, {"sha": "54002996cc48ffeaf9364aa1f035001c3fadae78", "filename": "gcc/tree-ssa-phiopt.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/68f6df73324a1389bce336d55ae94aa58f519997/gcc%2Ftree-ssa-phiopt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/68f6df73324a1389bce336d55ae94aa58f519997/gcc%2Ftree-ssa-phiopt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-phiopt.c?ref=68f6df73324a1389bce336d55ae94aa58f519997", "patch": "@@ -2332,6 +2332,7 @@ class pass_phiopt : public gimple_opt_pass\n \n   /* opt_pass methods: */\n   opt_pass * clone () { return new pass_phiopt (m_ctxt); }\n+  virtual bool gate (function *) { return flag_ssa_phiopt; }\n   virtual unsigned int execute (function *)\n     {\n       return tree_ssa_phiopt_worker (false, gate_hoist_loads ());"}]}