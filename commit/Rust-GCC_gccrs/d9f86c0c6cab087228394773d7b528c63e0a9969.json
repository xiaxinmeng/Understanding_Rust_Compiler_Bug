{"sha": "d9f86c0c6cab087228394773d7b528c63e0a9969", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDlmODZjMGM2Y2FiMDg3MjI4Mzk0NzczZDdiNTI4YzYzZTBhOTk2OQ==", "commit": {"author": {"name": "Robert Dewar", "email": "dewar@adacore.com", "date": "2008-03-26T07:42:03Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2008-03-26T07:42:03Z"}, "message": "sem_ch11.adb: Fix No_Exception_Restriction violation for SJLJ\n\n2008-03-26  Robert Dewar  <dewar@adacore.com>\n\n\t* sem_ch11.adb: Fix No_Exception_Restriction violation for SJLJ\n\t* sinfo.ads, sinfo.adb (From_At_End): New flag\n\nFrom-SVN: r133576", "tree": {"sha": "49ed46af481edd7d719287b170dade2b946c4501", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/49ed46af481edd7d719287b170dade2b946c4501"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d9f86c0c6cab087228394773d7b528c63e0a9969", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d9f86c0c6cab087228394773d7b528c63e0a9969", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d9f86c0c6cab087228394773d7b528c63e0a9969", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d9f86c0c6cab087228394773d7b528c63e0a9969/comments", "author": null, "committer": null, "parents": [{"sha": "9b91e15091b8d490e742ec04d8f1813c27f9cc13", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9b91e15091b8d490e742ec04d8f1813c27f9cc13", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9b91e15091b8d490e742ec04d8f1813c27f9cc13"}], "stats": {"total": 96, "additions": 71, "deletions": 25}, "files": [{"sha": "2be74709f093ec0ad545d4f72843b0b7d624f473", "filename": "gcc/ada/sem_ch11.adb", "status": "modified", "additions": 14, "deletions": 10, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d9f86c0c6cab087228394773d7b528c63e0a9969/gcc%2Fada%2Fsem_ch11.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d9f86c0c6cab087228394773d7b528c63e0a9969/gcc%2Fada%2Fsem_ch11.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch11.adb?ref=d9f86c0c6cab087228394773d7b528c63e0a9969", "patch": "@@ -437,7 +437,6 @@ package body Sem_Ch11 is\n       Exception_Id   : constant Node_Id := Name (N);\n       Exception_Name : Entity_Id        := Empty;\n       P              : Node_Id;\n-      Nkind_P        : Node_Kind;\n \n    begin\n       Check_Unreachable_Code (N);\n@@ -484,16 +483,13 @@ package body Sem_Ch11 is\n \n       if No (Exception_Id) then\n          P := Parent (N);\n-         Nkind_P := Nkind (P);\n-\n-         while Nkind_P /= N_Exception_Handler\n-           and then Nkind_P /= N_Subprogram_Body\n-           and then Nkind_P /= N_Package_Body\n-           and then Nkind_P /= N_Task_Body\n-           and then Nkind_P /= N_Entry_Body\n+         while not Nkind_In (P, N_Exception_Handler,\n+                                N_Subprogram_Body,\n+                                N_Package_Body,\n+                                N_Task_Body,\n+                                N_Entry_Body)\n          loop\n             P := Parent (P);\n-            Nkind_P := Nkind (P);\n          end loop;\n \n          if Nkind (P) /= N_Exception_Handler then\n@@ -506,7 +502,15 @@ package body Sem_Ch11 is\n \n          else\n             Set_Local_Raise_Not_OK (P);\n-            Check_Restriction (No_Exception_Propagation, N);\n+\n+            --  Do not check the restriction if the reraise statement is part\n+            --  of the code generated for an AT-END handler. That's because\n+            --  if the restriction is actually active, we never generate this\n+            --  raise anyway, so the apparent violation is bogus.\n+\n+            if not From_At_End (N) then\n+               Check_Restriction (No_Exception_Propagation, N);\n+            end if;\n          end if;\n \n       --  Normal case with exception id present"}, {"sha": "528d7f43a40fa69d00e1360b43f1b922e711b645", "filename": "gcc/ada/sinfo.adb", "status": "modified", "additions": 29, "deletions": 4, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d9f86c0c6cab087228394773d7b528c63e0a9969/gcc%2Fada%2Fsinfo.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d9f86c0c6cab087228394773d7b528c63e0a9969/gcc%2Fada%2Fsinfo.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsinfo.adb?ref=d9f86c0c6cab087228394773d7b528c63e0a9969", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2007, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2008, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -1264,6 +1264,14 @@ package body Sinfo is\n       return Flag5 (N);\n    end Forwards_OK;\n \n+   function From_At_End\n+      (N : Node_Id) return Boolean is\n+   begin\n+      pragma Assert (False\n+        or else NT (N).Nkind = N_Raise_Statement);\n+      return Flag4 (N);\n+   end From_At_End;\n+\n    function From_At_Mod\n       (N : Node_Id) return Boolean is\n    begin\n@@ -3995,6 +4003,14 @@ package body Sinfo is\n       Set_Flag5 (N, Val);\n    end Set_Forwards_OK;\n \n+   procedure Set_From_At_End\n+      (N : Node_Id; Val : Boolean := True) is\n+   begin\n+      pragma Assert (False\n+        or else NT (N).Nkind = N_Raise_Statement);\n+      Set_Flag4 (N, Val);\n+   end Set_From_At_End;\n+\n    procedure Set_From_At_Mod\n       (N : Node_Id; Val : Boolean := True) is\n    begin\n@@ -5574,9 +5590,9 @@ package body Sinfo is\n         UI_From_Int (Int (S) - Int (Sloc (N))));\n    end Set_End_Location;\n \n-   --------------------------------\n-   -- Node_Kind Membership Tests --\n-   --------------------------------\n+   --------------\n+   -- Nkind_In --\n+   --------------\n \n    function Nkind_In\n      (T  : Node_Kind;\n@@ -5690,4 +5706,13 @@ package body Sinfo is\n              T = V8;\n    end Nkind_In;\n \n+   -----------------\n+   -- Pragma_Name --\n+   -----------------\n+\n+   function Pragma_Name (N : Node_Id) return Name_Id is\n+   begin\n+      return Chars (Pragma_Identifier (N));\n+   end Pragma_Name;\n+\n end Sinfo;"}, {"sha": "5c131465a92cec5a874c2f51658df388b15a4af5", "filename": "gcc/ada/sinfo.ads", "status": "modified", "additions": 28, "deletions": 11, "changes": 39, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d9f86c0c6cab087228394773d7b528c63e0a9969/gcc%2Fada%2Fsinfo.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d9f86c0c6cab087228394773d7b528c63e0a9969/gcc%2Fada%2Fsinfo.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsinfo.ads?ref=d9f86c0c6cab087228394773d7b528c63e0a9969", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1992-2007, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2008, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -1032,6 +1032,13 @@ package Sinfo is\n    --    could not determine that either direction is definitely safe, and a\n    --    runtime check is required.\n \n+   --  From_At_End (Flag4-Sem)\n+   --    This flag is set on an N_Raise_Statement node if it corresponds to\n+   --    the reraise statement generated as the last statement of an AT END\n+   --    handler when SJLJ exception handling is active. It is used to stop\n+   --    a bogus violation of restriction (No_Exception_Propagation), bogus\n+   --    because if the restriction is set, the reraise is not generated.\n+\n    --  From_At_Mod (Flag4-Sem)\n    --    This flag is set on the attribute definition clause node that is\n    --    generated by a transformation of an at mod phrase in a record\n@@ -1876,7 +1883,6 @@ package Sinfo is\n \n       --  N_Pragma\n       --  Sloc points to pragma identifier\n-      --  Chars (Name1) identifier name from pragma identifier\n       --  Pragma_Argument_Associations (List2) (set to No_List if none)\n       --  Debug_Statement (Node3) (set to Empty if not Debug, Assert)\n       --  Pragma_Identifier (Node4)\n@@ -1887,12 +1893,8 @@ package Sinfo is\n       --  Psect_Object is always converted to Common_Object, but there are\n       --  undoubtedly many other similar notes required ???\n \n-      --  Note: we don't really need the Chars field, since it can trivially\n-      --  be obtained as Chars (Pragma_Identifier (Node)). However, it is\n-      --  convenient to have this directly available, and historically the\n-      --  Chars field has been around for ever, whereas the Pragma_Identifier\n-      --  field was added much later (when we found the need to be able to get\n-      --  the Sloc of the pragma identifier).\n+      --  Note: a utility function Pragma_Name may be applied to pragma nodes\n+      --  to conveniently obtain the Chars field of the Pragma_Identifier.\n \n       --------------------------------------\n       -- 2.8  Pragma Argument Association --\n@@ -5660,6 +5662,7 @@ package Sinfo is\n       --  Sloc points to RAISE\n       --  Name (Node2) (set to Empty if no exception name present)\n       --  Expression (Node3) (set to Empty if no expression present)\n+      --  From_At_End (Flag4-Sem)\n \n       -------------------------------\n       -- 12.1  Generic Declaration --\n@@ -6886,7 +6889,6 @@ package Sinfo is\n       --  N_Has_Chars\n \n       N_Empty,\n-      N_Pragma,\n       N_Pragma_Argument_Association,\n \n       --  N_Has_Etype\n@@ -6983,10 +6985,8 @@ package Sinfo is\n       N_Conditional_Expression,\n       N_Explicit_Dereference,\n       N_Function_Call,\n-\n       N_Indexed_Component,\n       N_Integer_Literal,\n-\n       N_Null,\n       N_Or_Else,\n       N_Procedure_Call_Statement,\n@@ -7215,6 +7215,7 @@ package Sinfo is\n       N_Package_Specification,\n       N_Parameter_Association,\n       N_Parameter_Specification,\n+      N_Pragma,\n       N_Protected_Definition,\n       N_Range_Constraint,\n       N_Real_Range_Specification,\n@@ -7796,6 +7797,9 @@ package Sinfo is\n    function Forwards_OK\n      (N : Node_Id) return Boolean;    -- Flag5\n \n+   function From_At_End\n+     (N : Node_Id) return Boolean;    -- Flag4\n+\n    function From_At_Mod\n      (N : Node_Id) return Boolean;    -- Flag4\n \n@@ -8666,6 +8670,9 @@ package Sinfo is\n    procedure Set_From_At_Mod\n      (N : Node_Id; Val : Boolean := True);    -- Flag4\n \n+   procedure Set_From_At_End\n+     (N : Node_Id; Val : Boolean := True);    -- Flag4\n+\n    procedure Set_From_Default\n      (N : Node_Id; Val : Boolean := True);    -- Flag6\n \n@@ -9238,6 +9245,14 @@ package Sinfo is\n    pragma Inline (Nkind_In);\n    --  Inline all above functions\n \n+   -----------------------\n+   -- Utility Functions --\n+   -----------------------\n+\n+   function Pragma_Name (N : Node_Id) return Name_Id;\n+   pragma Inline (Pragma_Name);\n+   --  Convenient function to obtain Chars field of Pragma_Identifier\n+\n    -----------------------------\n    -- Syntactic Parent Tables --\n    -----------------------------\n@@ -10908,6 +10923,7 @@ package Sinfo is\n    pragma Inline (Float_Truncate);\n    pragma Inline (Formal_Type_Definition);\n    pragma Inline (Forwards_OK);\n+   pragma Inline (From_At_End);\n    pragma Inline (From_At_Mod);\n    pragma Inline (From_Default);\n    pragma Inline (Generic_Associations);\n@@ -11194,6 +11210,7 @@ package Sinfo is\n    pragma Inline (Set_Float_Truncate);\n    pragma Inline (Set_Formal_Type_Definition);\n    pragma Inline (Set_Forwards_OK);\n+   pragma Inline (Set_From_At_End);\n    pragma Inline (Set_From_At_Mod);\n    pragma Inline (Set_From_Default);\n    pragma Inline (Set_Generic_Associations);"}]}