{"sha": "a0ce797889cd14d04b87cdacb089fcee6f73415e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTBjZTc5Nzg4OWNkMTRkMDRiODdjZGFjYjA4OWZjZWU2ZjczNDE1ZQ==", "commit": {"author": {"name": "Kazu Hirata", "email": "kazu@cs.umass.edu", "date": "2005-04-14T13:34:57Z"}, "committer": {"name": "Kazu Hirata", "email": "kazu@gcc.gnu.org", "date": "2005-04-14T13:34:57Z"}, "message": "re PR tree-optimization/20657 ([tcb] VRP does not get rid of a redundant \"if\" statement.)\n\ngcc/\n\tPR tree-optimization/20657\n\t* tree-vrp.c (extract_range_from_expr): Notice INTEGER_CST to\n\tcreate an appropriate range from it.\n\ntestsuite/\n\tPR tree-optimization/20657\n\t* gcc.dg/tree-ssa/pr20657.c: New.\n\nFrom-SVN: r98134", "tree": {"sha": "970b0e0064b90ed58896a85a06254562b80eb47c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/970b0e0064b90ed58896a85a06254562b80eb47c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a0ce797889cd14d04b87cdacb089fcee6f73415e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a0ce797889cd14d04b87cdacb089fcee6f73415e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a0ce797889cd14d04b87cdacb089fcee6f73415e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a0ce797889cd14d04b87cdacb089fcee6f73415e/comments", "author": null, "committer": null, "parents": [{"sha": "c44001c64356db774cbdc4c47d6ce7120b683f6c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c44001c64356db774cbdc4c47d6ce7120b683f6c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c44001c64356db774cbdc4c47d6ce7120b683f6c"}], "stats": {"total": 30, "additions": 30, "deletions": 0}, "files": [{"sha": "3a5d50a735c8df4bbeaed1730dffa90fa4990c2c", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a0ce797889cd14d04b87cdacb089fcee6f73415e/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a0ce797889cd14d04b87cdacb089fcee6f73415e/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=a0ce797889cd14d04b87cdacb089fcee6f73415e", "patch": "@@ -1,3 +1,9 @@\n+2005-04-14  Kazu Hirata  <kazu@cs.umass.edu>\n+\n+\tPR tree-optimization/20657\n+\t* tree-vrp.c (extract_range_from_expr): Notice INTEGER_CST to\n+\tcreate an appropriate range from it.\n+\n 2005-04-14  Uros Bizjak  <uros@kss-loka.si>\n \n \t* reg-stack.c (subst_stack_regs_pat): Handle <UNSPEC_FIST_FLOOR> and"}, {"sha": "83d08f52ed21cac46689c7cdc83d0cc3dffc650b", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a0ce797889cd14d04b87cdacb089fcee6f73415e/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a0ce797889cd14d04b87cdacb089fcee6f73415e/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=a0ce797889cd14d04b87cdacb089fcee6f73415e", "patch": "@@ -1,3 +1,8 @@\n+2005-04-14  Kazu Hirata  <kazu@cs.umass.edu>\n+\n+\tPR tree-optimization/20657\n+\t* gcc.dg/tree-ssa/pr20657.c: New.\n+\n 2005-04-14  Uros Bizjak  <uros@kss-loka.si>\n \n \t* gcc.dg/builtins-53.c: Also check (int)trunc* and"}, {"sha": "ac89847901a22cff62d95f4ffc4f558e94016ee8", "filename": "gcc/testsuite/gcc.dg/tree-ssa/pr20657.c", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a0ce797889cd14d04b87cdacb089fcee6f73415e/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr20657.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a0ce797889cd14d04b87cdacb089fcee6f73415e/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr20657.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr20657.c?ref=a0ce797889cd14d04b87cdacb089fcee6f73415e", "patch": "@@ -0,0 +1,17 @@\n+/* PR tree-optimization/20657\n+   VRP did not pick up a conditional equivalence from the first \"if\"\n+   statement, which was needed to eliminate the second \"if\" statement.  */\n+\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -fno-tree-dominator-opts -fdump-tree-vrp-details\" } */\n+\n+int\n+foo (int a)\n+{\n+  if (a == 0)\n+    if (a == 0)\n+      return 1;\n+  return 0;\n+}\n+\n+/* { dg-final { scan-tree-dump-times \"Folding predicate\" 1 \"vrp\"} } */"}, {"sha": "014f1956926ea4457163b72eb449bb8376c1ee0a", "filename": "gcc/tree-vrp.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a0ce797889cd14d04b87cdacb089fcee6f73415e/gcc%2Ftree-vrp.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a0ce797889cd14d04b87cdacb089fcee6f73415e/gcc%2Ftree-vrp.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vrp.c?ref=a0ce797889cd14d04b87cdacb089fcee6f73415e", "patch": "@@ -830,6 +830,8 @@ extract_range_from_expr (value_range *vr, tree expr)\n     extract_range_from_unary_expr (vr, expr);\n   else if (expr_computes_nonzero (expr))\n     set_value_range_to_nonnull (vr, TREE_TYPE (expr));\n+  else if (TREE_CODE (expr) == INTEGER_CST)\n+    set_value_range (vr, VR_RANGE, expr, expr);\n   else\n     set_value_range (vr, VR_VARYING, NULL_TREE, NULL_TREE);\n }"}]}