{"sha": "05842ff57c6eb899ffb7bfd6624634f5aa4df878", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDU4NDJmZjU3YzZlYjg5OWZmYjdiZmQ2NjI0NjM0ZjVhYTRkZjg3OA==", "commit": {"author": {"name": "Martin Jambor", "email": "mjambor@suse.cz", "date": "2011-01-14T23:19:08Z"}, "committer": {"name": "Martin Jambor", "email": "jamborm@gcc.gnu.org", "date": "2011-01-14T23:19:08Z"}, "message": "common.opt (fdevirtualize): New flag.\n\n2011-01-15  Martin Jambor  <mjambor@suse.cz>\n\n\t* common.opt (fdevirtualize): New flag.\n\t* doc/invoke.texi (Option Summary): Document it.\n\t* opts.c (default_options_table): Add devirtualize flag.\n\t* ipa-prop.c (detect_type_change): Return immediately if\n\tdevirtualize flag is not set.\n\t(detect_type_change_ssa): Likewise.\n\t(compute_known_type_jump_func): Likewise.\n\t(ipa_analyze_virtual_call_uses): Likewise.\n\nFrom-SVN: r168826", "tree": {"sha": "59421812ee885d513e8c87c7fb099f042a10672d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/59421812ee885d513e8c87c7fb099f042a10672d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/05842ff57c6eb899ffb7bfd6624634f5aa4df878", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/05842ff57c6eb899ffb7bfd6624634f5aa4df878", "html_url": "https://github.com/Rust-GCC/gccrs/commit/05842ff57c6eb899ffb7bfd6624634f5aa4df878", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/05842ff57c6eb899ffb7bfd6624634f5aa4df878/comments", "author": {"login": "jamborm", "id": 2180070, "node_id": "MDQ6VXNlcjIxODAwNzA=", "avatar_url": "https://avatars.githubusercontent.com/u/2180070?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jamborm", "html_url": "https://github.com/jamborm", "followers_url": "https://api.github.com/users/jamborm/followers", "following_url": "https://api.github.com/users/jamborm/following{/other_user}", "gists_url": "https://api.github.com/users/jamborm/gists{/gist_id}", "starred_url": "https://api.github.com/users/jamborm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jamborm/subscriptions", "organizations_url": "https://api.github.com/users/jamborm/orgs", "repos_url": "https://api.github.com/users/jamborm/repos", "events_url": "https://api.github.com/users/jamborm/events{/privacy}", "received_events_url": "https://api.github.com/users/jamborm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "f65cf2b706151e0310518eef48bab95cf8155c3c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f65cf2b706151e0310518eef48bab95cf8155c3c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f65cf2b706151e0310518eef48bab95cf8155c3c"}], "stats": {"total": 40, "additions": 35, "deletions": 5}, "files": [{"sha": "f9e9b359aeceda6ca95a04002d8d90c8dd5e5d62", "filename": "gcc/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/05842ff57c6eb899ffb7bfd6624634f5aa4df878/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/05842ff57c6eb899ffb7bfd6624634f5aa4df878/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=05842ff57c6eb899ffb7bfd6624634f5aa4df878", "patch": "@@ -1,3 +1,14 @@\n+2011-01-15  Martin Jambor  <mjambor@suse.cz>\n+\n+\t* common.opt (fdevirtualize): New flag.\n+\t* doc/invoke.texi (Option Summary): Document it.\n+\t* opts.c (default_options_table): Add devirtualize flag.\n+\t* ipa-prop.c (detect_type_change): Return immediately if\n+\tdevirtualize flag is not set.\n+\t(detect_type_change_ssa): Likewise.\n+\t(compute_known_type_jump_func): Likewise.\n+\t(ipa_analyze_virtual_call_uses): Likewise.\n+\n 2011-01-14  Martin Jambor  <mjambor@suse.cz>\n \n \tPR tree-optimization/45934"}, {"sha": "7c93c8339accefb27c37db2e2c81f431d915f651", "filename": "gcc/common.opt", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/05842ff57c6eb899ffb7bfd6624634f5aa4df878/gcc%2Fcommon.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/05842ff57c6eb899ffb7bfd6624634f5aa4df878/gcc%2Fcommon.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcommon.opt?ref=05842ff57c6eb899ffb7bfd6624634f5aa4df878", "patch": "@@ -911,6 +911,10 @@ fdelete-null-pointer-checks\n Common Report Var(flag_delete_null_pointer_checks) Init(1) Optimization\n Delete useless null pointer checks\n \n+fdevirtualize\n+Common Report Var(flag_devirtualize) Optimization\n+Try to convert virtual calls to direct ones.\n+\n fdiagnostics-show-location=\n Common Joined RejectNegative Enum(diagnostic_prefixing_rule)\n -fdiagnostics-show-location=[once|every-line]\tHow often to emit source location at the beginning of line-wrapped diagnostics"}, {"sha": "c7187f2c42dbefa38234a1d6526edda24c77e574", "filename": "gcc/doc/invoke.texi", "status": "modified", "additions": 11, "deletions": 2, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/05842ff57c6eb899ffb7bfd6624634f5aa4df878/gcc%2Fdoc%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/05842ff57c6eb899ffb7bfd6624634f5aa4df878/gcc%2Fdoc%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finvoke.texi?ref=05842ff57c6eb899ffb7bfd6624634f5aa4df878", "patch": "@@ -340,8 +340,8 @@ Objective-C and Objective-C++ Dialects}.\n -fcprop-registers -fcrossjumping @gol\n -fcse-follow-jumps -fcse-skip-blocks -fcx-fortran-rules @gol\n -fcx-limited-range @gol\n--fdata-sections -fdce -fdce @gol\n--fdelayed-branch -fdelete-null-pointer-checks -fdse -fdse @gol\n+-fdata-sections -fdce -fdce -fdelayed-branch @gol\n+-fdelete-null-pointer-checks -fdse -fdevirtualize -fdse @gol\n -fearly-inlining -fipa-sra -fexpensive-optimizations -ffast-math @gol\n -ffinite-math-only -ffloat-store -fexcess-precision=@var{style} @gol\n -fforward-propagate -ffp-contract=@var{style} -ffunction-sections @gol\n@@ -5918,6 +5918,7 @@ also turns on the following optimization flags:\n -fcrossjumping @gol\n -fcse-follow-jumps  -fcse-skip-blocks @gol\n -fdelete-null-pointer-checks @gol\n+-fdevirtualize @gol\n -fexpensive-optimizations @gol\n -fgcse  -fgcse-lm  @gol\n -finline-small-functions @gol\n@@ -6421,6 +6422,14 @@ Otherwise it is enabled at all levels: @option{-O0}, @option{-O1},\n @option{-O2}, @option{-O3}, @option{-Os}.  Passes that use the information\n are enabled independently at different optimization levels.\n \n+@item -fdevirtualize\n+@opindex fdevirtualize\n+Attempt to convert calls to virtual functions to direct calls.  This\n+is done both within a procedure and interprocedurally as part of\n+indirect inlining (@code{-findirect-inlining}) and interprocedural constant\n+propagation (@option{-fipa-cp}).\n+Enabled at levels @option{-O2}, @option{-O3}, @option{-Os}.\n+\n @item -fexpensive-optimizations\n @opindex fexpensive-optimizations\n Perform a number of minor optimizations that are relatively expensive."}, {"sha": "1970881c6865e2a3db891cc59fcbe2ec778ed8b8", "filename": "gcc/ipa-prop.c", "status": "modified", "additions": 8, "deletions": 3, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/05842ff57c6eb899ffb7bfd6624634f5aa4df878/gcc%2Fipa-prop.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/05842ff57c6eb899ffb7bfd6624634f5aa4df878/gcc%2Fipa-prop.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fipa-prop.c?ref=05842ff57c6eb899ffb7bfd6624634f5aa4df878", "patch": "@@ -456,7 +456,7 @@ detect_type_change (tree arg, tree base, gimple call,\n \t\t       || handled_component_p (arg));\n   /* Const calls cannot call virtual methods through VMT and so type changes do\n      not matter.  */\n-  if (!gimple_vuse (call))\n+  if (!flag_devirtualize || !gimple_vuse (call))\n     return false;\n \n   tci.type_maybe_changed = false;\n@@ -486,7 +486,8 @@ static bool\n detect_type_change_ssa (tree arg, gimple call, struct ipa_jump_func *jfunc)\n {\n   gcc_checking_assert (TREE_CODE (arg) == SSA_NAME);\n-  if (!POINTER_TYPE_P (TREE_TYPE (arg))\n+  if (!flag_devirtualize\n+      || !POINTER_TYPE_P (TREE_TYPE (arg))\n       || TREE_CODE (TREE_TYPE (TREE_TYPE (arg))) != RECORD_TYPE)\n     return false;\n \n@@ -689,7 +690,8 @@ compute_known_type_jump_func (tree op, struct ipa_jump_func *jfunc,\n   HOST_WIDE_INT offset, size, max_size;\n   tree base, binfo;\n \n-  if (TREE_CODE (op) != ADDR_EXPR\n+  if (!flag_devirtualize\n+      || TREE_CODE (op) != ADDR_EXPR\n       || TREE_CODE (TREE_TYPE (TREE_TYPE (op))) != RECORD_TYPE)\n     return;\n \n@@ -1378,6 +1380,9 @@ ipa_analyze_virtual_call_uses (struct cgraph_node *node,\n   tree var;\n   int index;\n \n+  if (!flag_devirtualize)\n+    return;\n+\n   if (TREE_CODE (obj) == ADDR_EXPR)\n     {\n       do"}, {"sha": "67fb6dac2da3251cf5ef3c5ce9b346ee38c8c009", "filename": "gcc/opts.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/05842ff57c6eb899ffb7bfd6624634f5aa4df878/gcc%2Fopts.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/05842ff57c6eb899ffb7bfd6624634f5aa4df878/gcc%2Fopts.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fopts.c?ref=05842ff57c6eb899ffb7bfd6624634f5aa4df878", "patch": "@@ -485,6 +485,7 @@ static const struct default_options default_options_table[] =\n     { OPT_LEVELS_2_PLUS, OPT_ftree_pre, NULL, 1 },\n     { OPT_LEVELS_2_PLUS, OPT_ftree_switch_conversion, NULL, 1 },\n     { OPT_LEVELS_2_PLUS, OPT_fipa_cp, NULL, 1 },\n+    { OPT_LEVELS_2_PLUS, OPT_fdevirtualize, NULL, 1 },\n     { OPT_LEVELS_2_PLUS, OPT_fipa_sra, NULL, 1 },\n     { OPT_LEVELS_2_PLUS, OPT_falign_loops, NULL, 1 },\n     { OPT_LEVELS_2_PLUS, OPT_falign_jumps, NULL, 1 },"}]}