{"sha": "cd7f7c54a43c435152b2ac76b6e74ae6a3430472", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2Q3ZjdjNTRhNDNjNDM1MTUyYjJhYzc2YjZlNzRhZTZhMzQzMDQ3Mg==", "commit": {"author": {"name": "Richard Sandiford", "email": "richard.sandiford@arm.com", "date": "2019-04-18T12:29:56Z"}, "committer": {"name": "Richard Sandiford", "email": "rsandifo@gcc.gnu.org", "date": "2019-04-18T12:29:56Z"}, "message": "Fix two ubsan failures (PR85164)\n\nTwo fixes for UB when handling very large offsets.  The calculation in\nforce_int_to_mode would have been correct if signed integers used modulo\narithmetic, so just switch to unsigned types.  The calculation in\nrtx_addr_can_trap_p_1 didn't handle overflow properly, so switch to\nknown_subrange_p instead (which is supposed to handle all cases).\n\n2019-04-18  Richard Sandiford  <richard.sandiford@arm.com>\n\ngcc/\n\tPR middle-end/85164\n\t* combine.c (force_int_to_mode): Cast the argument rather than\n\tthe result of known_alignment.\n\t* rtlanal.c (rtx_addr_can_trap_p_1): Use known_subrange_p.\n\ngcc/testsuite/\n\tPR middle-end/85164\n\t* gcc.dg/pr85164-1.c, gcc.dg/pr85164-2.c: New tests.\n\nFrom-SVN: r270442", "tree": {"sha": "d7ec130591e850d27f196e742e40bfba9f1d7602", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d7ec130591e850d27f196e742e40bfba9f1d7602"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/cd7f7c54a43c435152b2ac76b6e74ae6a3430472", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cd7f7c54a43c435152b2ac76b6e74ae6a3430472", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cd7f7c54a43c435152b2ac76b6e74ae6a3430472", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cd7f7c54a43c435152b2ac76b6e74ae6a3430472/comments", "author": {"login": "rsandifo-arm", "id": 28043039, "node_id": "MDQ6VXNlcjI4MDQzMDM5", "avatar_url": "https://avatars.githubusercontent.com/u/28043039?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rsandifo-arm", "html_url": "https://github.com/rsandifo-arm", "followers_url": "https://api.github.com/users/rsandifo-arm/followers", "following_url": "https://api.github.com/users/rsandifo-arm/following{/other_user}", "gists_url": "https://api.github.com/users/rsandifo-arm/gists{/gist_id}", "starred_url": "https://api.github.com/users/rsandifo-arm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rsandifo-arm/subscriptions", "organizations_url": "https://api.github.com/users/rsandifo-arm/orgs", "repos_url": "https://api.github.com/users/rsandifo-arm/repos", "events_url": "https://api.github.com/users/rsandifo-arm/events{/privacy}", "received_events_url": "https://api.github.com/users/rsandifo-arm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "e62817edaecb4c8cb5a4f3c608f0ea52276449a1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e62817edaecb4c8cb5a4f3c608f0ea52276449a1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e62817edaecb4c8cb5a4f3c608f0ea52276449a1"}], "stats": {"total": 27, "additions": 25, "deletions": 2}, "files": [{"sha": "8dba1ed7bf3841af3132df8aa0f5957c877bc9b4", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd7f7c54a43c435152b2ac76b6e74ae6a3430472/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd7f7c54a43c435152b2ac76b6e74ae6a3430472/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=cd7f7c54a43c435152b2ac76b6e74ae6a3430472", "patch": "@@ -1,3 +1,10 @@\n+2019-04-18  Richard Sandiford  <richard.sandiford@arm.com>\n+\n+\tPR middle-end/85164\n+\t* combine.c (force_int_to_mode): Cast the argument rather than\n+\tthe result of known_alignment.\n+\t* rtlanal.c (rtx_addr_can_trap_p_1): Use known_subrange_p.\n+\n 2019-04-18  Richard Biener  <rguenther@suse.de>\n \n \tPR debug/90131"}, {"sha": "4de759a8e6bf7cb5b13af592fbb3fcd1b9644929", "filename": "gcc/combine.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd7f7c54a43c435152b2ac76b6e74ae6a3430472/gcc%2Fcombine.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd7f7c54a43c435152b2ac76b6e74ae6a3430472/gcc%2Fcombine.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcombine.c?ref=cd7f7c54a43c435152b2ac76b6e74ae6a3430472", "patch": "@@ -8946,7 +8946,7 @@ force_int_to_mode (rtx x, scalar_int_mode mode, scalar_int_mode xmode,\n       /* If X is (minus C Y) where C's least set bit is larger than any bit\n \t in the mask, then we may replace with (neg Y).  */\n       if (poly_int_rtx_p (XEXP (x, 0), &const_op0)\n-\t  && (unsigned HOST_WIDE_INT) known_alignment (const_op0) > mask)\n+\t  && known_alignment (poly_uint64 (const_op0)) > mask)\n \t{\n \t  x = simplify_gen_unary (NEG, xmode, XEXP (x, 1), xmode);\n \t  return force_to_mode (x, mode, mask, next_select);"}, {"sha": "268a38799d63c8c5a193b49d7fe7738e50894d41", "filename": "gcc/rtlanal.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd7f7c54a43c435152b2ac76b6e74ae6a3430472/gcc%2Frtlanal.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd7f7c54a43c435152b2ac76b6e74ae6a3430472/gcc%2Frtlanal.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frtlanal.c?ref=cd7f7c54a43c435152b2ac76b6e74ae6a3430472", "patch": "@@ -521,7 +521,7 @@ rtx_addr_can_trap_p_1 (const_rtx x, poly_int64 offset, poly_int64 size,\n \n \t  return (!known_size_p (decl_size) || known_eq (decl_size, 0)\n \t\t  ? maybe_ne (offset, 0)\n-\t\t  : maybe_gt (offset + size, decl_size));\n+\t\t  : !known_subrange_p (offset, size, 0, decl_size));\n         }\n \n       return 0;"}, {"sha": "451f190b19509b43e7e7e1a6cc2f4b6ce17d5b00", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd7f7c54a43c435152b2ac76b6e74ae6a3430472/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd7f7c54a43c435152b2ac76b6e74ae6a3430472/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=cd7f7c54a43c435152b2ac76b6e74ae6a3430472", "patch": "@@ -1,3 +1,8 @@\n+2019-04-18  Richard Sandiford  <richard.sandiford@arm.com>\n+\n+\tPR middle-end/85164\n+\t* gcc.dg/pr85164-1.c, gcc.dg/pr85164-2.c: New tests.\n+\n 2019-04-18  Richard Biener  <rguenther@suse.de>\n \n \tPR debug/90131"}, {"sha": "4c5995e88756a7b90eec96b8c9d463b007fb10e4", "filename": "gcc/testsuite/gcc.dg/pr85164-1.c", "status": "added", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd7f7c54a43c435152b2ac76b6e74ae6a3430472/gcc%2Ftestsuite%2Fgcc.dg%2Fpr85164-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd7f7c54a43c435152b2ac76b6e74ae6a3430472/gcc%2Ftestsuite%2Fgcc.dg%2Fpr85164-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr85164-1.c?ref=cd7f7c54a43c435152b2ac76b6e74ae6a3430472", "patch": "@@ -0,0 +1,7 @@\n+/* { dg-options \"-O2 -w\" } */\n+a[];\n+b;\n+c() {\n+  unsigned long d;\n+  b = a[d - 1 >> 3];\n+}"}, {"sha": "9e9a7db2bf25891c5ef2735f1c6e6175bf5fcaca", "filename": "gcc/testsuite/gcc.dg/pr85164-2.c", "status": "added", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd7f7c54a43c435152b2ac76b6e74ae6a3430472/gcc%2Ftestsuite%2Fgcc.dg%2Fpr85164-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd7f7c54a43c435152b2ac76b6e74ae6a3430472/gcc%2Ftestsuite%2Fgcc.dg%2Fpr85164-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr85164-2.c?ref=cd7f7c54a43c435152b2ac76b6e74ae6a3430472", "patch": "@@ -0,0 +1,4 @@\n+/* { dg-options \"-O2 -w\" } */\n+int a;\n+long b;\n+void c() { b = -9223372036854775807L - 1 - a; }"}]}