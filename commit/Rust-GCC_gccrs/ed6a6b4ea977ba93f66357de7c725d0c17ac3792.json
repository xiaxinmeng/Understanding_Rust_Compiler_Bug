{"sha": "ed6a6b4ea977ba93f66357de7c725d0c17ac3792", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWQ2YTZiNGVhOTc3YmE5M2Y2NjM1N2RlN2M3MjVkMGMxN2FjMzc5Mg==", "commit": {"author": {"name": "Gary Dismukes", "email": "dismukes@adacore.com", "date": "2018-06-11T09:19:35Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "pmderodat@gcc.gnu.org", "date": "2018-06-11T09:19:35Z"}, "message": "[Ada] Typo fixes and minor reformatting\n\n2018-06-11  Gary Dismukes  <dismukes@adacore.com>\n\ngcc/ada/\n\n\t* exp_unst.ads, exp_unst.adb: Typo fixes and minor reformatting.\n\nFrom-SVN: r261428", "tree": {"sha": "cb29f624342e87a47c9cbbb28eee59b2f4f21fce", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/cb29f624342e87a47c9cbbb28eee59b2f4f21fce"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ed6a6b4ea977ba93f66357de7c725d0c17ac3792", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ed6a6b4ea977ba93f66357de7c725d0c17ac3792", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ed6a6b4ea977ba93f66357de7c725d0c17ac3792", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ed6a6b4ea977ba93f66357de7c725d0c17ac3792/comments", "author": {"login": "dismukes", "id": 50880541, "node_id": "MDQ6VXNlcjUwODgwNTQx", "avatar_url": "https://avatars.githubusercontent.com/u/50880541?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dismukes", "html_url": "https://github.com/dismukes", "followers_url": "https://api.github.com/users/dismukes/followers", "following_url": "https://api.github.com/users/dismukes/following{/other_user}", "gists_url": "https://api.github.com/users/dismukes/gists{/gist_id}", "starred_url": "https://api.github.com/users/dismukes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dismukes/subscriptions", "organizations_url": "https://api.github.com/users/dismukes/orgs", "repos_url": "https://api.github.com/users/dismukes/repos", "events_url": "https://api.github.com/users/dismukes/events{/privacy}", "received_events_url": "https://api.github.com/users/dismukes/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "7d1d3a546409ce9e4aedb3b8d537cc770beabd62", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7d1d3a546409ce9e4aedb3b8d537cc770beabd62", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7d1d3a546409ce9e4aedb3b8d537cc770beabd62"}], "stats": {"total": 29, "additions": 16, "deletions": 13}, "files": [{"sha": "1edc46228f28c29d7ea007f26bea602970104ce8", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ed6a6b4ea977ba93f66357de7c725d0c17ac3792/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ed6a6b4ea977ba93f66357de7c725d0c17ac3792/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=ed6a6b4ea977ba93f66357de7c725d0c17ac3792", "patch": "@@ -1,3 +1,7 @@\n+2018-06-11  Gary Dismukes  <dismukes@adacore.com>\n+\n+\t* exp_unst.ads, exp_unst.adb: Typo fixes and minor reformatting.\n+\n 2018-06-11  Hristian Kirtchev  <kirtchev@adacore.com>\n \n \t* exp_ch6.adb (Add_Unconstrained_Actuals_To_Build_In_Place_Call): Do"}, {"sha": "b38acadd563df7cffb8d82ced6537653bef5ce4c", "filename": "gcc/ada/exp_unst.adb", "status": "modified", "additions": 8, "deletions": 9, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ed6a6b4ea977ba93f66357de7c725d0c17ac3792/gcc%2Fada%2Fexp_unst.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ed6a6b4ea977ba93f66357de7c725d0c17ac3792/gcc%2Fada%2Fexp_unst.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_unst.adb?ref=ed6a6b4ea977ba93f66357de7c725d0c17ac3792", "patch": "@@ -810,9 +810,9 @@ package body Exp_Unst is\n                      end if;\n                   end;\n \n-                  --  For an allocator with a qualified expression, check\n-                  --  type of expression being qualified. The explicit type\n-                  --  name is handled as an entity reference..\n+                  --  For an allocator with a qualified expression, check type\n+                  --  of expression being qualified. The explicit type name is\n+                  --  handled as an entity reference.\n \n                   if Nkind (N) = N_Allocator\n                      and then Nkind (Expression (N)) = N_Qualified_Expression\n@@ -1074,8 +1074,8 @@ package body Exp_Unst is\n                         Callee := Enclosing_Subprogram (Ent);\n \n                         if Callee /= Caller\n-                           and then (not Is_Static_Type (Ent)\n-                                      or else Needs_Fat_Pointer (Ent))\n+                          and then (not Is_Static_Type (Ent)\n+                                     or else Needs_Fat_Pointer (Ent))\n                         then\n                            Note_Uplevel_Ref (Ent, N, Caller, Callee);\n \n@@ -1990,10 +1990,9 @@ package body Exp_Unst is\n                Comp := Activation_Record_Component (UPJ.Ent);\n                pragma Assert (Present (Comp));\n \n-               --  Do the replacement. If the component type is an\n-               --  access type, this is an uplevel reference for an\n-               --  entity that requires a fat pointer, so dereference\n-               --  the component.\n+               --  Do the replacement. If the component type is an access type,\n+               --  this is an uplevel reference for an entity that requires a\n+               --  fat pointer, so dereference the component.\n \n                if Is_Access_Type (Etype (Comp)) then\n                   Rewrite (UPJ.Ref,"}, {"sha": "3b67a0ddd35456823ed422be532c99bc9b021858", "filename": "gcc/ada/exp_unst.ads", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ed6a6b4ea977ba93f66357de7c725d0c17ac3792/gcc%2Fada%2Fexp_unst.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ed6a6b4ea977ba93f66357de7c725d0c17ac3792/gcc%2Fada%2Fexp_unst.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_unst.ads?ref=ed6a6b4ea977ba93f66357de7c725d0c17ac3792", "patch": "@@ -568,20 +568,20 @@ package Exp_Unst is\n \n    --  Objects whose nominal subtype is an unconstrained array type present\n    --  additional complications for translation into LLVM. The address\n-   --  attributes of such objects points to the first component of the\n+   --  attribute of such objects points to the first component of the\n    --  array, and the bounds are found elsewhere, typically ahead of the\n    --  components. In many cases the bounds of an object are stored ahead\n    --  of the components and can be retrieved from it. However, if the\n-   --  object is an expression (.e.g a slice) the bounds are not adjacent\n+   --  object is an expression (e.g. a slice) the bounds are not adjacent\n    --  and thus must be conveyed explicitly by means of a so-called\n    --  fat pointer. This leads to the following enhancements to the\n    --  handling of uplevel references described so far. This applies only\n    --  to uplevel references to unconstrained formals of enclosing\n    --  subprograms:\n    --\n    --  a) Uplevel references are detected as before during the tree traversal\n-   --  in Visit_Node. For referenes to uplevel formals, we include those with\n-   --  an unconstrained array type (e.g. String) even if suvh a type has\n+   --  in Visit_Node. For reference to uplevel formals, we include those with\n+   --  an unconstrained array type (e.g. String) even if such a type has\n    --  static bounds.\n    --\n    --  b) references to unconstrained formals are recognized in the Subp"}]}