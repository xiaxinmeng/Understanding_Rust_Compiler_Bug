{"sha": "9f7f04998964451ff487b546d77ea48d0ce01451", "node_id": "C_kwDOANBUbNoAKDlmN2YwNDk5ODk2NDQ1MWZmNDg3YjU0NmQ3N2VhNDhkMGNlMDE0NTE", "commit": {"author": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2022-07-14T09:32:36Z"}, "committer": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2022-07-14T09:34:02Z"}, "message": "libiberty: fix docs typo\n\nlibiberty/ChangeLog:\n\n\t* functions.texi: Replace strtoul with strtoull.", "tree": {"sha": "a7bcb7d3ec4d7173e52bb3f0c1b8a0ebb7323d46", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a7bcb7d3ec4d7173e52bb3f0c1b8a0ebb7323d46"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9f7f04998964451ff487b546d77ea48d0ce01451", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9f7f04998964451ff487b546d77ea48d0ce01451", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9f7f04998964451ff487b546d77ea48d0ce01451", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9f7f04998964451ff487b546d77ea48d0ce01451/comments", "author": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "committer": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "fd782def3193d0cd315b5dc9d9c90f469771b7a3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fd782def3193d0cd315b5dc9d9c90f469771b7a3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fd782def3193d0cd315b5dc9d9c90f469771b7a3"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "b56b02e06862a5204fd5763a46223df94bfe2680", "filename": "libiberty/functions.texi", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9f7f04998964451ff487b546d77ea48d0ce01451/libiberty%2Ffunctions.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9f7f04998964451ff487b546d77ea48d0ce01451/libiberty%2Ffunctions.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libiberty%2Ffunctions.texi?ref=9f7f04998964451ff487b546d77ea48d0ce01451", "patch": "@@ -1747,7 +1747,7 @@ that the converted value is unsigned.\n @c strtoll.c:33\n @deftypefn Supplemental {long long int} strtoll (const char *@var{string}, @\n   char **@var{endptr}, int @var{base})\n-@deftypefnx Supplemental {unsigned long long int} strtoul (@\n+@deftypefnx Supplemental {unsigned long long int} strtoull (@\n   const char *@var{string}, char **@var{endptr}, int @var{base})\n \n The @code{strtoll} function converts the string in @var{string} to a"}]}