{"sha": "8da1c70b570bc423fd2ea011398a69714ecd8b7a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGRhMWM3MGI1NzBiYzQyM2ZkMmVhMDExMzk4YTY5NzE0ZWNkOGI3YQ==", "commit": {"author": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2011-05-11T19:56:39Z"}, "committer": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2011-05-11T19:56:39Z"}, "message": "Permit new of a function type.\n\nFrom-SVN: r173672", "tree": {"sha": "34efcb6c70d4c1c9ecc1c48520a7034304ae917e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/34efcb6c70d4c1c9ecc1c48520a7034304ae917e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8da1c70b570bc423fd2ea011398a69714ecd8b7a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8da1c70b570bc423fd2ea011398a69714ecd8b7a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8da1c70b570bc423fd2ea011398a69714ecd8b7a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8da1c70b570bc423fd2ea011398a69714ecd8b7a/comments", "author": null, "committer": null, "parents": [{"sha": "2d8f63a164c48a7e287987040927e40df7a97cab", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2d8f63a164c48a7e287987040927e40df7a97cab", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2d8f63a164c48a7e287987040927e40df7a97cab"}], "stats": {"total": 12, "additions": 0, "deletions": 12}, "files": [{"sha": "c7b8ca0d41104742f46baafb410081be9e5b3f3d", "filename": "gcc/go/gofrontend/expressions.cc", "status": "modified", "additions": 0, "deletions": 12, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8da1c70b570bc423fd2ea011398a69714ecd8b7a/gcc%2Fgo%2Fgofrontend%2Fexpressions.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8da1c70b570bc423fd2ea011398a69714ecd8b7a/gcc%2Fgo%2Fgofrontend%2Fexpressions.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgo%2Fgofrontend%2Fexpressions.cc?ref=8da1c70b570bc423fd2ea011398a69714ecd8b7a", "patch": "@@ -10624,9 +10624,6 @@ class Allocation_expression : public Expression\n   do_determine_type(const Type_context*)\n   { }\n \n-  void\n-  do_check_types(Gogo*);\n-\n   Expression*\n   do_copy()\n   { return new Allocation_expression(this->type_, this->location()); }\n@@ -10639,15 +10636,6 @@ class Allocation_expression : public Expression\n   Type* type_;\n };\n \n-// Check the type of an allocation expression.\n-\n-void\n-Allocation_expression::do_check_types(Gogo*)\n-{\n-  if (this->type_->function_type() != NULL)\n-    this->report_error(_(\"invalid new of function type\"));\n-}\n-\n // Return a tree for an allocation expression.\n \n tree"}]}