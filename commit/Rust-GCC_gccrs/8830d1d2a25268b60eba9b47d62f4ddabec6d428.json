{"sha": "8830d1d2a25268b60eba9b47d62f4ddabec6d428", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODgzMGQxZDJhMjUyNjhiNjBlYmE5YjQ3ZDYyZjRkZGFiZWM2ZDQyOA==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2011-08-02T08:19:12Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2011-08-02T08:19:12Z"}, "message": "[multiple changes]\n\n2011-08-02  Robert Dewar  <dewar@adacore.com>\n\n\t* sem_ch8.adb, aspects.ads: Minor reformatting.\n\n2011-08-02  Eric Botcazou  <ebotcazou@adacore.com>\n\n\t* sem_ch13.ads (Analyze_Aspect_Specification): Add pragma Inline.\n\t* sem_ch13.adb (Analyze_Non_Null_Aspect_Specifications): New procedure\n\textracted from...\n\t(Analyze_Aspect_Specifications): ...here.  Call above procedure.\n\nFrom-SVN: r177094", "tree": {"sha": "5ec4ad08a684c346266510b4329c35436cd34b03", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5ec4ad08a684c346266510b4329c35436cd34b03"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8830d1d2a25268b60eba9b47d62f4ddabec6d428", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8830d1d2a25268b60eba9b47d62f4ddabec6d428", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8830d1d2a25268b60eba9b47d62f4ddabec6d428", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8830d1d2a25268b60eba9b47d62f4ddabec6d428/comments", "author": null, "committer": null, "parents": [{"sha": "7ff2d2343921f5baeba0b47983202a84852e2957", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7ff2d2343921f5baeba0b47983202a84852e2957", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7ff2d2343921f5baeba0b47983202a84852e2957"}], "stats": {"total": 58, "additions": 47, "deletions": 11}, "files": [{"sha": "886bad566de3822b67d9867aa28886d728bc7569", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8830d1d2a25268b60eba9b47d62f4ddabec6d428/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8830d1d2a25268b60eba9b47d62f4ddabec6d428/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=8830d1d2a25268b60eba9b47d62f4ddabec6d428", "patch": "@@ -1,3 +1,14 @@\n+2011-08-02  Robert Dewar  <dewar@adacore.com>\n+\n+\t* sem_ch8.adb, aspects.ads: Minor reformatting.\n+\n+2011-08-02  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* sem_ch13.ads (Analyze_Aspect_Specification): Add pragma Inline.\n+\t* sem_ch13.adb (Analyze_Non_Null_Aspect_Specifications): New procedure\n+\textracted from...\n+\t(Analyze_Aspect_Specifications): ...here.  Call above procedure.\n+\n 2011-08-02  Yannick Moy  <moy@adacore.com>\n \n \t* exp_ch6.adb (Expand_N_Subprogram_Declaration): issue error in formal"}, {"sha": "773bf493cfae9c08673c38f5f4d60ca39dad6c46", "filename": "gcc/ada/aspects.ads", "status": "modified", "additions": 5, "deletions": 3, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8830d1d2a25268b60eba9b47d62f4ddabec6d428/gcc%2Fada%2Faspects.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8830d1d2a25268b60eba9b47d62f4ddabec6d428/gcc%2Fada%2Faspects.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Faspects.ads?ref=8830d1d2a25268b60eba9b47d62f4ddabec6d428", "patch": "@@ -88,9 +88,11 @@ package Aspects is\n       Aspect_Universal_Data,                -- GNAT\n \n       --  Remaining aspects have a static boolean value that turns the aspect\n-      --  on or off. They all correspond to pragmas, and the flag Aspect_Cancel\n-      --  is set on the pragma if the corresponding aspect is False. These are\n-      --  also Boolean aspects as defined below.\n+      --  on or off. They all correspond to pragmas, but are only converted to\n+      --  the pragmas where the value is True. A value of False normally means\n+      --  that the aspect is ignored, except in the case of derived types where\n+      --  the aspect value is inherited from the parent, in which case, we do\n+      --  not allow False if we inherit a True value from the parent.\n \n       Aspect_Ada_2005,                      -- GNAT\n       Aspect_Ada_2012,                      -- GNAT"}, {"sha": "ac03bd91ab737feaca0e34cab7abb72bf30f6073", "filename": "gcc/ada/sem_ch13.adb", "status": "modified", "additions": 30, "deletions": 7, "changes": 37, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8830d1d2a25268b60eba9b47d62f4ddabec6d428/gcc%2Fada%2Fsem_ch13.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8830d1d2a25268b60eba9b47d62f4ddabec6d428/gcc%2Fada%2Fsem_ch13.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch13.adb?ref=8830d1d2a25268b60eba9b47d62f4ddabec6d428", "patch": "@@ -78,6 +78,16 @@ package body Sem_Ch13 is\n    --  inherited from a derived type that is no longer appropriate for the\n    --  new Esize value. In this case, we reset the Alignment to unknown.\n \n+   procedure Analyze_Non_Null_Aspect_Specifications\n+     (N : Node_Id;\n+      E : Entity_Id;\n+      L : List_Id);\n+   --  This procedure is called to analyze aspect specifications for node N.\n+   --  E is the corresponding entity declared by the declaration node N, and\n+   --  L is the list of aspect specifications for this node. This procedure\n+   --  does the real work, as opposed to Analyze_Aspect_Specifications which\n+   --  is inlined to fast-track the common case.\n+\n    procedure Build_Predicate_Function (Typ : Entity_Id; N : Node_Id);\n    --  If Typ has predicates (indicated by Has_Predicates being set for Typ,\n    --  then either there are pragma Invariant entries on the rep chain for the\n@@ -687,6 +697,25 @@ package body Sem_Ch13 is\n      (N : Node_Id;\n       E : Entity_Id;\n       L : List_Id)\n+   is\n+   begin\n+      --  Return if no aspects\n+\n+      if L = No_List then\n+         return;\n+      end if;\n+\n+      Analyze_Non_Null_Aspect_Specifications (N, E, L);\n+   end Analyze_Aspect_Specifications;\n+\n+   --------------------------------------------\n+   -- Analyze_Non_Null_Aspect_Specifications --\n+   --------------------------------------------\n+\n+   procedure Analyze_Non_Null_Aspect_Specifications\n+     (N : Node_Id;\n+      E : Entity_Id;\n+      L : List_Id)\n    is\n       Aspect : Node_Id;\n       Aitem  : Node_Id;\n@@ -715,12 +744,6 @@ package body Sem_Ch13 is\n       --  Set True if delay is required\n \n    begin\n-      --  Return if no aspects\n-\n-      if L = No_List then\n-         return;\n-      end if;\n-\n       --  Loop through aspects\n \n       Aspect := First (L);\n@@ -1198,7 +1221,7 @@ package body Sem_Ch13 is\n          <<Continue>>\n             Next (Aspect);\n       end loop;\n-   end Analyze_Aspect_Specifications;\n+   end Analyze_Non_Null_Aspect_Specifications;\n \n    -----------------------\n    -- Analyze_At_Clause --"}, {"sha": "a2726fd44ac78d06be2a2eda5f09beed3fcc89df", "filename": "gcc/ada/sem_ch13.ads", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8830d1d2a25268b60eba9b47d62f4ddabec6d428/gcc%2Fada%2Fsem_ch13.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8830d1d2a25268b60eba9b47d62f4ddabec6d428/gcc%2Fada%2Fsem_ch13.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch13.ads?ref=8830d1d2a25268b60eba9b47d62f4ddabec6d428", "patch": "@@ -46,6 +46,7 @@ package Sem_Ch13 is\n    --  the call is ignored. Note that we can't use a simpler interface of just\n    --  passing the node N, since the analysis of the node may cause it to be\n    --  rewritten to a node not permitting aspect specifications.\n+   pragma Inline (Analyze_Aspect_Specifications);\n \n    procedure Adjust_Record_For_Reverse_Bit_Order (R : Entity_Id);\n    --  Called from Freeze where R is a record entity for which reverse bit"}, {"sha": "a883c4d19f63ace550dee950d11f459ddb782211", "filename": "gcc/ada/sem_ch8.adb", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8830d1d2a25268b60eba9b47d62f4ddabec6d428/gcc%2Fada%2Fsem_ch8.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8830d1d2a25268b60eba9b47d62f4ddabec6d428/gcc%2Fada%2Fsem_ch8.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch8.adb?ref=8830d1d2a25268b60eba9b47d62f4ddabec6d428", "patch": "@@ -2697,7 +2697,6 @@ package body Sem_Ch8 is\n             Mark := First (Subtype_Marks (N));\n             while Present (Mark) loop\n                Use_One_Type (Mark, Installed => True);\n-\n                Next (Mark);\n             end loop;\n "}]}