{"sha": "dddc273f0e57bd46b15620b7b2129980a70b2e43", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGRkYzI3M2YwZTU3YmQ0NmIxNTYyMGI3YjIxMjk5ODBhNzBiMmU0Mw==", "commit": {"author": {"name": "Georg-Johann Lay", "email": "avr@gjlay.de", "date": "2017-04-18T13:15:47Z"}, "committer": {"name": "Georg-Johann Lay", "email": "gjl@gcc.gnu.org", "date": "2017-04-18T13:15:47Z"}, "message": "re PR c++/79435 (ICE on invalid C++ code (with member access into an incomplete type) on x86_64-linux-gnu: Segmentation fault)\n\ngcc/\n\tPR target/79435\n\t* config/avr/avr.c (intl.h): Include it.\n\t(avr_pgm_check_var_decl) [reason]: Wrap\tdiagnostic snippets into _().\n\nFrom-SVN: r246966", "tree": {"sha": "b560385fc1ea896cd01d4e10d91b26bfa412b524", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b560385fc1ea896cd01d4e10d91b26bfa412b524"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/dddc273f0e57bd46b15620b7b2129980a70b2e43", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dddc273f0e57bd46b15620b7b2129980a70b2e43", "html_url": "https://github.com/Rust-GCC/gccrs/commit/dddc273f0e57bd46b15620b7b2129980a70b2e43", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dddc273f0e57bd46b15620b7b2129980a70b2e43/comments", "author": null, "committer": {"login": "sprintersb", "id": 8905355, "node_id": "MDQ6VXNlcjg5MDUzNTU=", "avatar_url": "https://avatars.githubusercontent.com/u/8905355?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sprintersb", "html_url": "https://github.com/sprintersb", "followers_url": "https://api.github.com/users/sprintersb/followers", "following_url": "https://api.github.com/users/sprintersb/following{/other_user}", "gists_url": "https://api.github.com/users/sprintersb/gists{/gist_id}", "starred_url": "https://api.github.com/users/sprintersb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sprintersb/subscriptions", "organizations_url": "https://api.github.com/users/sprintersb/orgs", "repos_url": "https://api.github.com/users/sprintersb/repos", "events_url": "https://api.github.com/users/sprintersb/events{/privacy}", "received_events_url": "https://api.github.com/users/sprintersb/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8487c9a550dea622f89a146178e666660c1b2962", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8487c9a550dea622f89a146178e666660c1b2962", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8487c9a550dea622f89a146178e666660c1b2962"}], "stats": {"total": 17, "additions": 12, "deletions": 5}, "files": [{"sha": "922af0d47ece512f90a2902b354f883d337a029f", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dddc273f0e57bd46b15620b7b2129980a70b2e43/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dddc273f0e57bd46b15620b7b2129980a70b2e43/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=dddc273f0e57bd46b15620b7b2129980a70b2e43", "patch": "@@ -1,3 +1,9 @@\n+2017-04-18  Georg-Johann Lay  <avr@gjlay.de>\n+\n+\tPR target/79435\n+\t* config/avr/avr.c (intl.h): Include it.\n+\t(avr_pgm_check_var_decl) [reason]: Wrap\tdiagnostic snippets into _().\n+\n 2017-04-18  Martin Liska  <mliska@suse.cz>\n \n \tPR gcov-profile/78783"}, {"sha": "dde712c49c7f149112b742eb3b112ee2fd929301", "filename": "gcc/config/avr/avr.c", "status": "modified", "additions": 6, "deletions": 5, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dddc273f0e57bd46b15620b7b2129980a70b2e43/gcc%2Fconfig%2Favr%2Favr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dddc273f0e57bd46b15620b7b2129980a70b2e43/gcc%2Fconfig%2Favr%2Favr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Favr%2Favr.c?ref=dddc273f0e57bd46b15620b7b2129980a70b2e43", "patch": "@@ -20,6 +20,7 @@\n \n #include \"config.h\"\n #include \"system.h\"\n+#include \"intl.h\"\n #include \"coretypes.h\"\n #include \"backend.h\"\n #include \"target.h\"\n@@ -9797,28 +9798,28 @@ avr_pgm_check_var_decl (tree node)\n \n     case VAR_DECL:\n       if (as = avr_nonconst_pointer_addrspace (TREE_TYPE (node)), as)\n-        reason = \"variable\";\n+        reason = _(\"variable\");\n       break;\n \n     case PARM_DECL:\n       if (as = avr_nonconst_pointer_addrspace (TREE_TYPE (node)), as)\n-        reason = \"function parameter\";\n+        reason = _(\"function parameter\");\n       break;\n \n     case FIELD_DECL:\n       if (as = avr_nonconst_pointer_addrspace (TREE_TYPE (node)), as)\n-        reason = \"structure field\";\n+        reason = _(\"structure field\");\n       break;\n \n     case FUNCTION_DECL:\n       if (as = avr_nonconst_pointer_addrspace (TREE_TYPE (TREE_TYPE (node))),\n           as)\n-        reason = \"return type of function\";\n+        reason = _(\"return type of function\");\n       break;\n \n     case POINTER_TYPE:\n       if (as = avr_nonconst_pointer_addrspace (node), as)\n-        reason = \"pointer\";\n+        reason = _(\"pointer\");\n       break;\n     }\n "}]}