{"sha": "6e5f8f76cbe47880ceae1bcf0bf7f07f601517ec", "node_id": "C_kwDOANBUbNoAKDZlNWY4Zjc2Y2JlNDc4ODBjZWFlMWJjZjBiZjdmMDdmNjAxNTE3ZWM", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2022-01-31T15:26:53Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-01-31T15:26:53Z"}, "message": "Merge #900\n\n900: Fixup logic in canonical-path for impl-blocks r=philberty a=philberty\n\nImpl blocks canonical prefix when the size is one will only contain the\r\nrespective crate name but impl blocks canonical path will be of the Self\r\ntype which has its own respective crate and path so this will become the\r\ncanonical path of this. If the segment size greater than one this means it\r\nis likely inside a mod block or other item so this means we should just\r\nappend as usual.\r\n\n\nCo-authored-by: Philip Herron <philip.herron@embecosm.com>", "tree": {"sha": "5fda817832faec93924e017371321bb110ffdb48", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5fda817832faec93924e017371321bb110ffdb48"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6e5f8f76cbe47880ceae1bcf0bf7f07f601517ec", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJh9/+9CRBK7hj4Ov3rIwAAUOgIAKFFy/RpXdlefjo7Nd88jwY5\nvt6DG8Ej6VmvDGxzFtR22Tl3cx/gMTragwJKrsEHC6ZJOwt1KPfmg7tVRC7FI59E\nxQscXj4yaoNW1DHJHUQgEfMJWHSj3Inr8BlE+oefteA7B/RdBvu4hjx6VHkgrXK9\niw9rFiWYS4189kIAY5i3OCrvOrAf42rcpUnFF8RgjxZVh27Z4YqVDWpSPXPfOOpN\ncC+NL6HJ6FrKuJSzU07UmrOHwy2x0k025XqI34vZXB6M0kkNY40jg+oWPLUlKT0T\nrMVMSwGxbnJU+xOOckBO4K8Gyas6r71BhyK1vn2dwS6UFBE3cAuPZZJsWoVzFKU=\n=/wMV\n-----END PGP SIGNATURE-----\n", "payload": "tree 5fda817832faec93924e017371321bb110ffdb48\nparent 631f7ae7b9dbb55ed3adce942952f93b48983a53\nparent 4c36c7c8d31e92d780f925b3bb62eec7db052442\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1643642813 +0000\ncommitter GitHub <noreply@github.com> 1643642813 +0000\n\nMerge #900\n\n900: Fixup logic in canonical-path for impl-blocks r=philberty a=philberty\n\nImpl blocks canonical prefix when the size is one will only contain the\r\nrespective crate name but impl blocks canonical path will be of the Self\r\ntype which has its own respective crate and path so this will become the\r\ncanonical path of this. If the segment size greater than one this means it\r\nis likely inside a mod block or other item so this means we should just\r\nappend as usual.\r\n\n\nCo-authored-by: Philip Herron <philip.herron@embecosm.com>\n"}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6e5f8f76cbe47880ceae1bcf0bf7f07f601517ec", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6e5f8f76cbe47880ceae1bcf0bf7f07f601517ec", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6e5f8f76cbe47880ceae1bcf0bf7f07f601517ec/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "631f7ae7b9dbb55ed3adce942952f93b48983a53", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/631f7ae7b9dbb55ed3adce942952f93b48983a53", "html_url": "https://github.com/Rust-GCC/gccrs/commit/631f7ae7b9dbb55ed3adce942952f93b48983a53"}, {"sha": "4c36c7c8d31e92d780f925b3bb62eec7db052442", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4c36c7c8d31e92d780f925b3bb62eec7db052442", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4c36c7c8d31e92d780f925b3bb62eec7db052442"}], "stats": {"total": 21, "additions": 11, "deletions": 10}, "files": [{"sha": "234d865b6d4222baa255dcc091f0a4660c2f71d2", "filename": "gcc/rust/resolve/rust-ast-resolve-item.h", "status": "modified", "additions": 11, "deletions": 10, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6e5f8f76cbe47880ceae1bcf0bf7f07f601517ec/gcc%2Frust%2Fresolve%2Frust-ast-resolve-item.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6e5f8f76cbe47880ceae1bcf0bf7f07f601517ec/gcc%2Frust%2Fresolve%2Frust-ast-resolve-item.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Fresolve%2Frust-ast-resolve-item.h?ref=6e5f8f76cbe47880ceae1bcf0bf7f07f601517ec", "patch": "@@ -579,17 +579,17 @@ class ResolveItem : public ResolverBase\n \n     // see https://godbolt.org/z/a3vMbsT6W\n     CanonicalPath cpath = CanonicalPath::create_empty ();\n-    if (canonical_prefix.size () > 1)\n+    if (canonical_prefix.size () <= 1)\n+      {\n+\tcpath = self_cpath;\n+      }\n+    else\n       {\n \tstd::string seg_buf = \"<impl \" + self_cpath.get () + \">\";\n \tCanonicalPath seg\n \t  = CanonicalPath::new_seg (impl_block.get_node_id (), seg_buf);\n \tcpath = canonical_prefix.append (seg);\n       }\n-    else\n-      {\n-\tcpath = canonical_prefix.append (self_cpath);\n-      }\n     // done setup paths\n \n     auto Self\n@@ -757,7 +757,11 @@ class ResolveItem : public ResolverBase\n \t\t\t\t      canonical_trait_type,\n \t\t\t\t      canonical_impl_type);\n     CanonicalPath cpath = CanonicalPath::create_empty ();\n-    if (canonical_prefix.size () > 1)\n+    if (canonical_prefix.size () <= 1)\n+      {\n+\tcpath = canonical_projection;\n+      }\n+    else\n       {\n \tstd::string projection_str = canonical_projection.get ();\n \tstd::string seg_buf\n@@ -767,10 +771,7 @@ class ResolveItem : public ResolverBase\n \t  = CanonicalPath::new_seg (impl_block.get_node_id (), seg_buf);\n \tcpath = canonical_prefix.append (seg);\n       }\n-    else\n-      {\n-\tcpath = canonical_prefix.append (canonical_projection);\n-      }\n+\n     // DONE setup canonical-path\n \n     auto Self"}]}