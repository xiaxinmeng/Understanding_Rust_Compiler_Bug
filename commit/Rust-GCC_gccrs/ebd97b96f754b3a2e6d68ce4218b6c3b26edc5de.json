{"sha": "ebd97b96f754b3a2e6d68ce4218b6c3b26edc5de", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWJkOTdiOTZmNzU0YjNhMmU2ZDY4Y2U0MjE4YjZjM2IyNmVkYzVkZQ==", "commit": {"author": {"name": "David Edelsohn", "email": "edelsohn@gnu.org", "date": "2001-12-15T02:16:37Z"}, "committer": {"name": "David Edelsohn", "email": "dje@gcc.gnu.org", "date": "2001-12-15T02:16:37Z"}, "message": "rs6000.h (ASM_OUTPUT_DEF_FROM_DECLS): Handle DECL_WEAK for function descriptors.\n\n        * config/rs6000/rs6000.h (ASM_OUTPUT_DEF_FROM_DECLS): Handle\n        DECL_WEAK for function descriptors.\n        * config/rs6000/xcoff.h (HANDLE_PRAGMA_WEAK): Define if assembler\n        weak support present.\n        (ASM_WEAKEN_LABEL): Same.\n\nFrom-SVN: r48027", "tree": {"sha": "5ee17dfe93c6ab0ab66d11c128b044ba4074ffc9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5ee17dfe93c6ab0ab66d11c128b044ba4074ffc9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ebd97b96f754b3a2e6d68ce4218b6c3b26edc5de", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ebd97b96f754b3a2e6d68ce4218b6c3b26edc5de", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ebd97b96f754b3a2e6d68ce4218b6c3b26edc5de", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ebd97b96f754b3a2e6d68ce4218b6c3b26edc5de/comments", "author": null, "committer": null, "parents": [{"sha": "103c41c190a8fd22564b17aaa484a8e412a8a217", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/103c41c190a8fd22564b17aaa484a8e412a8a217", "html_url": "https://github.com/Rust-GCC/gccrs/commit/103c41c190a8fd22564b17aaa484a8e412a8a217"}], "stats": {"total": 51, "additions": 43, "deletions": 8}, "files": [{"sha": "cfa921d1c286111a6a02d0e5d0e00036d9dde1c2", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ebd97b96f754b3a2e6d68ce4218b6c3b26edc5de/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ebd97b96f754b3a2e6d68ce4218b6c3b26edc5de/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=ebd97b96f754b3a2e6d68ce4218b6c3b26edc5de", "patch": "@@ -1,3 +1,11 @@\n+2001-12-14  David Edelsohn  <edelsohn@gnu.org>\n+\n+\t* config/rs6000/rs6000.h (ASM_OUTPUT_DEF_FROM_DECLS): Handle\n+\tDECL_WEAK for function descriptors.\n+\t* config/rs6000/xcoff.h (HANDLE_PRAGMA_WEAK): Define if assembler\n+\tweak support present.\n+\t(ASM_WEAKEN_LABEL): Same.\n+\n 2001-12-14  Kazu Hirata  <kazu@hxi.com>\n \n \t* config/h8300/h8300.md (anonymous pattern): Add a missing"}, {"sha": "b809d6b0baaf89d7f1171ee1a04b938663ae15c0", "filename": "gcc/config/rs6000/rs6000.h", "status": "modified", "additions": 18, "deletions": 4, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ebd97b96f754b3a2e6d68ce4218b6c3b26edc5de/gcc%2Fconfig%2Frs6000%2Frs6000.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ebd97b96f754b3a2e6d68ce4218b6c3b26edc5de/gcc%2Fconfig%2Frs6000%2Frs6000.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.h?ref=ebd97b96f754b3a2e6d68ce4218b6c3b26edc5de", "patch": "@@ -2469,8 +2469,13 @@ extern int toc_initialized;\n     }\t\t\t\t\t\t\t\t\t  \\\n }\n \n-/* This implementes the `alias' attribute.  */\n+#ifdef HAVE_GAS_WEAK\n+#define RS6000_WEAK 1\n+#else\n+#define RS6000_WEAK 0\n+#endif\n \n+/* This implementes the `alias' attribute.  */\n #define ASM_OUTPUT_DEF_FROM_DECLS(FILE,decl,target)\t\\\n do {\t\t\t\t\t\t\t\\\n   const char * alias = XSTR (XEXP (DECL_RTL (decl), 0), 0); \\\n@@ -2480,9 +2485,18 @@ do {\t\t\t\t\t\t\t\\\n     {\t\t\t\t\t\t\t\\\n       if (TREE_PUBLIC (decl))\t\t\t\t\\\n \t{\t\t\t\t\t\t\\\n-\t  fputs (\"\\t.globl .\", FILE);\t\t\t\\\n-\t  assemble_name (FILE, alias);\t\t\t\\\n-\t  putc ('\\n', FILE);\t\t\t\t\\\n+\t  if (RS6000_WEAK && DECL_WEAK (decl))\t\t\\\n+\t    {\t\t\t\t\t\t\\\n+\t      fputs (\"\\t.weak .\", FILE);\t\t\\\n+\t      assemble_name (FILE, alias);\t\t\\\n+\t      putc ('\\n', FILE);\t\t\t\\\n+\t    }\t\t\t\t\t\t\\\n+\t  else\t\t\t\t\t\t\\\n+\t    {\t\t\t\t\t\t\\\n+\t      fputs (\"\\t.globl .\", FILE);\t\t\\\n+\t      assemble_name (FILE, alias);\t\t\\\n+\t      putc ('\\n', FILE);\t\t\t\\\n+\t    }\t\t\t\t\t\t\\\n \t}\t\t\t\t\t\t\\\n       else\t\t\t\t\t\t\\\n \t{\t\t\t\t\t\t\\"}, {"sha": "890ec4aee305f7e41a9ee7a85bc0b6a66a31e780", "filename": "gcc/config/rs6000/xcoff.h", "status": "modified", "additions": 17, "deletions": 4, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ebd97b96f754b3a2e6d68ce4218b6c3b26edc5de/gcc%2Fconfig%2Frs6000%2Fxcoff.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ebd97b96f754b3a2e6d68ce4218b6c3b26edc5de/gcc%2Fconfig%2Frs6000%2Fxcoff.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Fxcoff.h?ref=ebd97b96f754b3a2e6d68ce4218b6c3b26edc5de", "patch": "@@ -438,9 +438,6 @@ toc_section ()\t\t\t\t\t\t\\\n \t fprintf ((FILE), \",%d\\n\", (SIZE));\t\t\\\n   } while (0)\n \n-/* Used by definition of ASM_OUTPUT_DOUBLE_INT */\n-#define DOUBLE_INT_ASM_OP \"\\t.llong \"\n-\n /* This says how to output an assembler line\n    to define a local common symbol.\n    Alignment cannot be specified, but we can try to maintain\n@@ -454,9 +451,25 @@ toc_section ()\t\t\t\t\t\t\\\n \t\txcoff_bss_section_name);\t\t\\\n      } while (0)\n \n+/* Output a weak symbol, if weak support present.  */\n+#ifdef HAVE_GAS_WEAK\n+#define HANDLE_PRAGMA_WEAK 1\n+\n+#define ASM_WEAKEN_LABEL(FILE, NAME)\t\\\n+  do\t\t\t\t\t\\\n+    {\t\t\t\t\t\\\n+      fputs (\"\\t.weak \", (FILE));\t\\\n+      assemble_name ((FILE), (NAME));\t\\\n+      fputc ('\\n', (FILE));\t\t\\\n+    }\t\t\t\t\t\\\n+  while (0)\n+#endif /* HAVE_GAS_WEAK */\n+\n /* This is how we tell the assembler that two symbols have the same value.  */\n+#define SET_ASM_OP \"\\t.set \"\n \n-#define SET_ASM_OP \"\\t.set\\t\"\n+/* Used by definition of ASM_OUTPUT_DOUBLE_INT */\n+#define DOUBLE_INT_ASM_OP \"\\t.llong \"\n \n /* These are various definitions for DWARF output.  They could just\n    use '.long' or '.word', but that aligns to a 4-byte boundary which"}]}