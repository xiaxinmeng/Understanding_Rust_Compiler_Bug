{"sha": "bc53dee0baa3f3e06c89081ef01f506037acd1ff", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmM1M2RlZTBiYWEzZjNlMDZjODkwODFlZjAxZjUwNjAzN2FjZDFmZg==", "commit": {"author": {"name": "Qing Zhao", "email": "qing.zhao@oracle.com", "date": "2019-04-03T19:00:25Z"}, "committer": {"name": "Qing Zhao", "email": "qinzhao@gcc.gnu.org", "date": "2019-04-03T19:00:25Z"}, "message": "re PR tree-optimization/89730 (-flive-patching=inline-only-static should grant always_inline attribute for extern function)\n\n2019-04-03  qing zhao  <qing.zhao@oracle.com>\n\n\tPR tree-optimization/89730\n\t* ipa-inline.c (can_inline_edge_p): Delete the checking for\n\t-flive-patching=inline-only-static.\n\t(can_inline_edge_by_limits_p): Add the checking for \n\t-flive-patching=inline-only-static and grant always_inline\n\teven when -flive-patching=inline-only-static is specified. \n\n\t* gcc.dg/live-patching-4.c: New test.\n\nFrom-SVN: r270134", "tree": {"sha": "1359705dd1bd4a15b210b350955d780748b788f8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1359705dd1bd4a15b210b350955d780748b788f8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/bc53dee0baa3f3e06c89081ef01f506037acd1ff", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bc53dee0baa3f3e06c89081ef01f506037acd1ff", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bc53dee0baa3f3e06c89081ef01f506037acd1ff", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bc53dee0baa3f3e06c89081ef01f506037acd1ff/comments", "author": {"login": "qingzhao69", "id": 89154636, "node_id": "MDQ6VXNlcjg5MTU0NjM2", "avatar_url": "https://avatars.githubusercontent.com/u/89154636?v=4", "gravatar_id": "", "url": "https://api.github.com/users/qingzhao69", "html_url": "https://github.com/qingzhao69", "followers_url": "https://api.github.com/users/qingzhao69/followers", "following_url": "https://api.github.com/users/qingzhao69/following{/other_user}", "gists_url": "https://api.github.com/users/qingzhao69/gists{/gist_id}", "starred_url": "https://api.github.com/users/qingzhao69/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/qingzhao69/subscriptions", "organizations_url": "https://api.github.com/users/qingzhao69/orgs", "repos_url": "https://api.github.com/users/qingzhao69/repos", "events_url": "https://api.github.com/users/qingzhao69/events{/privacy}", "received_events_url": "https://api.github.com/users/qingzhao69/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "c1d9a8f5904a22f2e1e8ec8f52a9dde30c560809", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c1d9a8f5904a22f2e1e8ec8f52a9dde30c560809", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c1d9a8f5904a22f2e1e8ec8f52a9dde30c560809"}], "stats": {"total": 50, "additions": 44, "deletions": 6}, "files": [{"sha": "4099ce66307fed29aa28b3d94201e9d90f02d24a", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bc53dee0baa3f3e06c89081ef01f506037acd1ff/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bc53dee0baa3f3e06c89081ef01f506037acd1ff/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=bc53dee0baa3f3e06c89081ef01f506037acd1ff", "patch": "@@ -1,3 +1,12 @@\n+2019-04-03  qing zhao  <qing.zhao@oracle.com>\n+\n+\tPR tree-optimization/89730\n+\t* ipa-inline.c (can_inline_edge_p): Delete the checking for\n+\t-flive-patching=inline-only-static.\n+\t(can_inline_edge_by_limits_p): Add the checking for \n+\t-flive-patching=inline-only-static and grant always_inline\n+\teven when -flive-patching=inline-only-static is specified. \n+\n 2019-04-03  Jeff Law  <law@redhat.com>\n \n \tPR rtl-optimization/81025"}, {"sha": "f37cd9da26d85d610584a97632e9d0460652c08b", "filename": "gcc/ipa-inline.c", "status": "modified", "additions": 7, "deletions": 6, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bc53dee0baa3f3e06c89081ef01f506037acd1ff/gcc%2Fipa-inline.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bc53dee0baa3f3e06c89081ef01f506037acd1ff/gcc%2Fipa-inline.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fipa-inline.c?ref=bc53dee0baa3f3e06c89081ef01f506037acd1ff", "patch": "@@ -385,12 +385,6 @@ can_inline_edge_p (struct cgraph_edge *e, bool report,\n       e->inline_failed = CIF_ATTRIBUTE_MISMATCH;\n       inlinable = false;\n     }\n-  else if (callee->externally_visible\n-\t   && flag_live_patching == LIVE_PATCHING_INLINE_ONLY_STATIC)\n-    {\n-      e->inline_failed = CIF_EXTERN_LIVE_ONLY_STATIC;\n-      inlinable = false;\n-    }\n   if (!inlinable && report)\n     report_inline_failed_reason (e);\n   return inlinable;\n@@ -433,6 +427,13 @@ can_inline_edge_by_limits_p (struct cgraph_edge *e, bool report,\n      \t\t DECL_ATTRIBUTES (caller->decl))\n       && !caller_growth_limits (e))\n     inlinable = false;\n+  else if (callee->externally_visible\n+\t   && !DECL_DISREGARD_INLINE_LIMITS (callee->decl)\n+\t   && flag_live_patching == LIVE_PATCHING_INLINE_ONLY_STATIC)\n+    {\n+      e->inline_failed = CIF_EXTERN_LIVE_ONLY_STATIC;\n+      inlinable = false;\n+    }\n   /* Don't inline a function with a higher optimization level than the\n      caller.  FIXME: this is really just tip of iceberg of handling\n      optimization attribute.  */"}, {"sha": "fd16b9204eb86c06183d2c91f00926f503c97c98", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bc53dee0baa3f3e06c89081ef01f506037acd1ff/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bc53dee0baa3f3e06c89081ef01f506037acd1ff/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=bc53dee0baa3f3e06c89081ef01f506037acd1ff", "patch": "@@ -1,3 +1,8 @@\n+2019-04-03  qing zhao  <qing.zhao@oracle.com>\n+\n+\tPR tree-optimization/89730\n+\t* gcc.dg/live-patching-4.c: New test.\n+\n 2019-04-03  Cl\u00e9ment Chigot  <clement.chigot@atos.net>\n \n \t* lib/go-torture.exp: Only add lto to TORTURE_OPTIONS if it is"}, {"sha": "ffea8f4cc1c66e8892758da77fe521de9e1ffaec", "filename": "gcc/testsuite/gcc.dg/live-patching-4.c", "status": "added", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bc53dee0baa3f3e06c89081ef01f506037acd1ff/gcc%2Ftestsuite%2Fgcc.dg%2Flive-patching-4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bc53dee0baa3f3e06c89081ef01f506037acd1ff/gcc%2Ftestsuite%2Fgcc.dg%2Flive-patching-4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Flive-patching-4.c?ref=bc53dee0baa3f3e06c89081ef01f506037acd1ff", "patch": "@@ -0,0 +1,23 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -flive-patching=inline-only-static -fdump-tree-einline-optimized\" } */\n+\n+extern int sum, n, m;\n+\n+extern inline __attribute__((always_inline)) int foo (int a);\n+inline __attribute__((always_inline)) int foo (int a)\n+{\n+  return a + n;\n+}\n+\n+static int bar (int b)\n+{\n+  return b * m;\n+}\n+\n+int main()\n+{\n+  sum = foo (m) + bar (n); \n+  return 0;\n+}\n+\n+/* { dg-final { scan-tree-dump \"Inlining foo/0 into main/2\"  \"einline\" } } */"}]}