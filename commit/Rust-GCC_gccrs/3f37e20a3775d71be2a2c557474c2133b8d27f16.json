{"sha": "3f37e20a3775d71be2a2c557474c2133b8d27f16", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2YzN2UyMGEzNzc1ZDcxYmUyYTJjNTU3NDc0YzIxMzNiOGQyN2YxNg==", "commit": {"author": {"name": "Nala Ginrut", "email": "mulei@gnu.org", "date": "2020-05-05T10:37:19Z"}, "committer": {"name": "Philip Herron", "email": "philip.herron@embecosm.com", "date": "2020-11-28T19:10:47Z"}, "message": "Fix params printing in DelimTokenTree", "tree": {"sha": "5197a05cd0a059f5ca21276ee378e631e07f1efc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5197a05cd0a059f5ca21276ee378e631e07f1efc"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3f37e20a3775d71be2a2c557474c2133b8d27f16", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3f37e20a3775d71be2a2c557474c2133b8d27f16", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3f37e20a3775d71be2a2c557474c2133b8d27f16", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3f37e20a3775d71be2a2c557474c2133b8d27f16/comments", "author": {"login": "NalaGinrut", "id": 19734, "node_id": "MDQ6VXNlcjE5NzM0", "avatar_url": "https://avatars.githubusercontent.com/u/19734?v=4", "gravatar_id": "", "url": "https://api.github.com/users/NalaGinrut", "html_url": "https://github.com/NalaGinrut", "followers_url": "https://api.github.com/users/NalaGinrut/followers", "following_url": "https://api.github.com/users/NalaGinrut/following{/other_user}", "gists_url": "https://api.github.com/users/NalaGinrut/gists{/gist_id}", "starred_url": "https://api.github.com/users/NalaGinrut/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/NalaGinrut/subscriptions", "organizations_url": "https://api.github.com/users/NalaGinrut/orgs", "repos_url": "https://api.github.com/users/NalaGinrut/repos", "events_url": "https://api.github.com/users/NalaGinrut/events{/privacy}", "received_events_url": "https://api.github.com/users/NalaGinrut/received_events", "type": "User", "site_admin": false}, "committer": {"login": "philberty", "id": 84585, "node_id": "MDQ6VXNlcjg0NTg1", "avatar_url": "https://avatars.githubusercontent.com/u/84585?v=4", "gravatar_id": "", "url": "https://api.github.com/users/philberty", "html_url": "https://github.com/philberty", "followers_url": "https://api.github.com/users/philberty/followers", "following_url": "https://api.github.com/users/philberty/following{/other_user}", "gists_url": "https://api.github.com/users/philberty/gists{/gist_id}", "starred_url": "https://api.github.com/users/philberty/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/philberty/subscriptions", "organizations_url": "https://api.github.com/users/philberty/orgs", "repos_url": "https://api.github.com/users/philberty/repos", "events_url": "https://api.github.com/users/philberty/events{/privacy}", "received_events_url": "https://api.github.com/users/philberty/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a4c6b7b751429b3cd7ed0804c2cab210bc9f00e9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a4c6b7b751429b3cd7ed0804c2cab210bc9f00e9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a4c6b7b751429b3cd7ed0804c2cab210bc9f00e9"}], "stats": {"total": 40, "additions": 17, "deletions": 23}, "files": [{"sha": "550b7e0de0e6a35c2605a3aeff240fa0421d2e69", "filename": "gcc/rust/ast/rust-ast-full-test.cc", "status": "modified", "additions": 17, "deletions": 23, "changes": 40, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3f37e20a3775d71be2a2c557474c2133b8d27f16/gcc%2Frust%2Fast%2Frust-ast-full-test.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3f37e20a3775d71be2a2c557474c2133b8d27f16/gcc%2Frust%2Fast%2Frust-ast-full-test.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Fast%2Frust-ast-full-test.cc?ref=3f37e20a3775d71be2a2c557474c2133b8d27f16", "patch": "@@ -200,33 +200,26 @@ DelimTokenTree::as_string () const\n       end_delim = \"}\";\n       break;\n     default:\n-      // error\n-      return \"\";\n+      fprintf (stderr, \"Invalid delimiter type, \"\n+\t\t       \"Should be PARENS, SQUARE, or CURLY.\");\n+      return \"Invalid delimiter type\";\n     }\n   ::std::string str = start_delim;\n-  if (token_trees.empty ())\n+  if (!token_trees.empty ())\n     {\n-      str += \"none\";\n-    }\n-  else\n-    {\n-      auto i = token_trees.begin ();\n-      auto e = token_trees.end ();\n-\n-      // DEBUG: null pointer check\n-      if (*i == NULL)\n+      for (const auto &tree : token_trees)\n \t{\n-\t  fprintf (stderr,\n-\t\t   \"something really terrible has gone wrong - null pointer \"\n-\t\t   \"token tree in delim token tree.\");\n-\t  return \"NULL_POINTER_MARK\";\n-\t}\n+\t  // DEBUG: null pointer check\n+\t  if (tree == NULL)\n+\t    {\n+\t      fprintf (\n+\t\tstderr,\n+\t\t\"something really terrible has gone wrong - null pointer \"\n+\t\t\"token tree in delim token tree.\");\n+\t      return \"NULL_POINTER_MARK\";\n+\t    }\n \n-      for (; i != e; i++)\n-\t{\n-\t  str += (*i)->as_string ();\n-\t  if (e != i + 1)\n-\t    str += \", \";\n+\t  str += tree->as_string ();\n \t}\n     }\n   str += end_delim;\n@@ -1529,7 +1522,8 @@ MacroRulesDefinition::as_string () const\n ::std::string\n MacroInvocation::as_string () const\n {\n-  return path.as_string () + \"!\" + token_tree.as_string ();\n+  return \"MacroInvocation: \" + path.as_string () + \"!\"\n+\t + token_tree.as_string ();\n }\n \n ::std::string"}]}