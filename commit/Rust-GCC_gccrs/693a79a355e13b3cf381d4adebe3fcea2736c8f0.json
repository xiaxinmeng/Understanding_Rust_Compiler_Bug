{"sha": "693a79a355e13b3cf381d4adebe3fcea2736c8f0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjkzYTc5YTM1NWUxM2IzY2YzODFkNGFkZWJlM2ZjZWEyNzM2YzhmMA==", "commit": {"author": {"name": "Alan Modra", "email": "amodra@gmail.com", "date": "2020-11-11T05:07:25Z"}, "committer": {"name": "Alan Modra", "email": "amodra@gmail.com", "date": "2020-11-11T05:09:08Z"}, "message": "Re: Refactor copying decl section names\n\n\t* go-gcc.cc (Gcc_backend::global_variable_set_init): Cast NULL to\n\tavoid ambiguous overloaded call.", "tree": {"sha": "31d10c907d3c542a1a6768efb57020d1b766d65b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/31d10c907d3c542a1a6768efb57020d1b766d65b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/693a79a355e13b3cf381d4adebe3fcea2736c8f0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/693a79a355e13b3cf381d4adebe3fcea2736c8f0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/693a79a355e13b3cf381d4adebe3fcea2736c8f0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/693a79a355e13b3cf381d4adebe3fcea2736c8f0/comments", "author": {"login": "amodra", "id": 6006325, "node_id": "MDQ6VXNlcjYwMDYzMjU=", "avatar_url": "https://avatars.githubusercontent.com/u/6006325?v=4", "gravatar_id": "", "url": "https://api.github.com/users/amodra", "html_url": "https://github.com/amodra", "followers_url": "https://api.github.com/users/amodra/followers", "following_url": "https://api.github.com/users/amodra/following{/other_user}", "gists_url": "https://api.github.com/users/amodra/gists{/gist_id}", "starred_url": "https://api.github.com/users/amodra/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/amodra/subscriptions", "organizations_url": "https://api.github.com/users/amodra/orgs", "repos_url": "https://api.github.com/users/amodra/repos", "events_url": "https://api.github.com/users/amodra/events{/privacy}", "received_events_url": "https://api.github.com/users/amodra/received_events", "type": "User", "site_admin": false}, "committer": {"login": "amodra", "id": 6006325, "node_id": "MDQ6VXNlcjYwMDYzMjU=", "avatar_url": "https://avatars.githubusercontent.com/u/6006325?v=4", "gravatar_id": "", "url": "https://api.github.com/users/amodra", "html_url": "https://github.com/amodra", "followers_url": "https://api.github.com/users/amodra/followers", "following_url": "https://api.github.com/users/amodra/following{/other_user}", "gists_url": "https://api.github.com/users/amodra/gists{/gist_id}", "starred_url": "https://api.github.com/users/amodra/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/amodra/subscriptions", "organizations_url": "https://api.github.com/users/amodra/orgs", "repos_url": "https://api.github.com/users/amodra/repos", "events_url": "https://api.github.com/users/amodra/events{/privacy}", "received_events_url": "https://api.github.com/users/amodra/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4656461585bfd0b925553995a9d114645f1287d0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4656461585bfd0b925553995a9d114645f1287d0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4656461585bfd0b925553995a9d114645f1287d0"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "d8d9c3f27c0ef7ef7c0aabd1a76b079b812bd441", "filename": "gcc/go/go-gcc.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/693a79a355e13b3cf381d4adebe3fcea2736c8f0/gcc%2Fgo%2Fgo-gcc.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/693a79a355e13b3cf381d4adebe3fcea2736c8f0/gcc%2Fgo%2Fgo-gcc.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgo%2Fgo-gcc.cc?ref=693a79a355e13b3cf381d4adebe3fcea2736c8f0", "patch": "@@ -2756,7 +2756,7 @@ Gcc_backend::global_variable_set_init(Bvariable* var, Bexpression* expr)\n   if (symtab_node::get(var_decl)\n       && symtab_node::get(var_decl)->implicit_section)\n     {\n-      set_decl_section_name (var_decl, NULL);\n+      set_decl_section_name (var_decl, (const char *) NULL);\n       resolve_unique_section (var_decl,\n \t\t\t      compute_reloc_for_constant (expr_tree),\n \t\t\t      1);"}]}