{"sha": "0639444ffba6b0defc610d2f8c1c19d61269ba07", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDYzOTQ0NGZmYmE2YjBkZWZjNjEwZDJmOGMxYzE5ZDYxMjY5YmEwNw==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1995-04-10T11:17:17Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1995-04-10T11:17:17Z"}, "message": "(reload_as_needed): Call forget_old_reloads_1 on pattern before reg\nelimination.\n\nFrom-SVN: r9345", "tree": {"sha": "7397cdc12ce0c70090566405cf4f178adfd53488", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7397cdc12ce0c70090566405cf4f178adfd53488"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0639444ffba6b0defc610d2f8c1c19d61269ba07", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0639444ffba6b0defc610d2f8c1c19d61269ba07", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0639444ffba6b0defc610d2f8c1c19d61269ba07", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0639444ffba6b0defc610d2f8c1c19d61269ba07/comments", "author": null, "committer": null, "parents": [{"sha": "9fac9680c02a2df6fdf9981585b533b26598da8f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9fac9680c02a2df6fdf9981585b533b26598da8f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9fac9680c02a2df6fdf9981585b533b26598da8f"}], "stats": {"total": 3, "additions": 2, "deletions": 1}, "files": [{"sha": "bc855789489f9f42d45bc17b66544368ec3f9382", "filename": "gcc/reload1.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0639444ffba6b0defc610d2f8c1c19d61269ba07/gcc%2Freload1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0639444ffba6b0defc610d2f8c1c19d61269ba07/gcc%2Freload1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Freload1.c?ref=0639444ffba6b0defc610d2f8c1c19d61269ba07", "patch": "@@ -3807,6 +3807,7 @@ reload_as_needed (first, live_known)\n       else if (GET_RTX_CLASS (GET_CODE (insn)) == 'i')\n \t{\n \t  rtx avoid_return_reg = 0;\n+\t  rtx oldpat = PATTERN (insn);\n \n #ifdef SMALL_REGISTER_CLASSES\n \t  /* Set avoid_return_reg if this is an insn\n@@ -3936,7 +3937,7 @@ reload_as_needed (first, live_known)\n \t     for this insn in order to be stored in\n \t     (obeying register constraints).  That is correct; such reload\n \t     registers ARE still valid.  */\n-\t  note_stores (PATTERN (insn), forget_old_reloads_1);\n+\t  note_stores (oldpat, forget_old_reloads_1);\n \n \t  /* There may have been CLOBBER insns placed after INSN.  So scan\n \t     between INSN and NEXT and use them to forget old reloads.  */"}]}