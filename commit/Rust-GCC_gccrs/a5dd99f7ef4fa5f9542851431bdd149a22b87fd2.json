{"sha": "a5dd99f7ef4fa5f9542851431bdd149a22b87fd2", "node_id": "C_kwDOANBUbNoAKGE1ZGQ5OWY3ZWY0ZmE1Zjk1NDI4NTE0MzFiZGQxNDlhMjJiODdmZDI", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@adacore.com", "date": "2023-02-15T22:32:12Z"}, "committer": {"name": "Eric Botcazou", "email": "ebotcazou@adacore.com", "date": "2023-02-15T22:33:28Z"}, "message": "Fix PR target/90458\n\nThis is the incompatibility of -fstack-clash-protection with Windows SEH.\nNow the Windows ports always enable TARGET_STACK_PROBE, which means that\nthe stack is always probed (out of line) so -fstack-clash-protection does\nnothing more.\n\ngcc/\n\tPR target/90458\n\t* config/i386/i386.cc (ix86_compute_frame_layout): Disable the\n\teffects of -fstack-clash-protection for TARGET_STACK_PROBE.\n\t(ix86_expand_prologue): Likewise.", "tree": {"sha": "dc6d7ba52d126ffb6d0fb7d21f589e1962db6695", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/dc6d7ba52d126ffb6d0fb7d21f589e1962db6695"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a5dd99f7ef4fa5f9542851431bdd149a22b87fd2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a5dd99f7ef4fa5f9542851431bdd149a22b87fd2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a5dd99f7ef4fa5f9542851431bdd149a22b87fd2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a5dd99f7ef4fa5f9542851431bdd149a22b87fd2/comments", "author": null, "committer": null, "parents": [{"sha": "d6d3de7170670f55825a28e84a9a89a17381a19f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d6d3de7170670f55825a28e84a9a89a17381a19f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d6d3de7170670f55825a28e84a9a89a17381a19f"}], "stats": {"total": 11, "additions": 8, "deletions": 3}, "files": [{"sha": "22f444be23c8d3a35f0bbe5d80fbb953ffe4116a", "filename": "gcc/config/i386/i386.cc", "status": "modified", "additions": 8, "deletions": 3, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a5dd99f7ef4fa5f9542851431bdd149a22b87fd2/gcc%2Fconfig%2Fi386%2Fi386.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a5dd99f7ef4fa5f9542851431bdd149a22b87fd2/gcc%2Fconfig%2Fi386%2Fi386.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.cc?ref=a5dd99f7ef4fa5f9542851431bdd149a22b87fd2", "patch": "@@ -6876,7 +6876,9 @@ ix86_compute_frame_layout (void)\n \t stack clash protections are enabled and the allocated frame is\n \t larger than the probe interval, then use pushes to save\n \t callee saved registers.  */\n-      || (flag_stack_clash_protection && to_allocate > get_probe_interval ()))\n+      || (flag_stack_clash_protection\n+\t  && !ix86_target_stack_probe ()\n+\t  && to_allocate > get_probe_interval ()))\n     frame->save_regs_using_mov = false;\n \n   if (ix86_using_red_zone ()\n@@ -8761,8 +8763,11 @@ ix86_expand_prologue (void)\n       sse_registers_saved = true;\n     }\n \n-  /* If stack clash protection is requested, then probe the stack.  */\n-  if (allocate >= 0 && flag_stack_clash_protection)\n+  /* If stack clash protection is requested, then probe the stack, unless it\n+     is already probed on the target.  */\n+  if (allocate >= 0\n+      && flag_stack_clash_protection\n+      && !ix86_target_stack_probe ())\n     {\n       ix86_adjust_stack_and_probe (allocate, int_registers_saved, false);\n       allocate = 0;"}]}