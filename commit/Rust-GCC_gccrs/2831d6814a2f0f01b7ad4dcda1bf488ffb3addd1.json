{"sha": "2831d6814a2f0f01b7ad4dcda1bf488ffb3addd1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjgzMWQ2ODE0YTJmMGYwMWI3YWQ0ZGNkYTFiZjQ4OGZmYjNhZGRkMQ==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2018-07-03T14:13:02Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2018-07-03T14:13:02Z"}, "message": "PR c++/86378 - functional cast in noexcept-specifier.\n\n\t* tree.c (strip_typedefs_expr) [TREE_LIST]: Fix iteration.\n\nFrom-SVN: r262343", "tree": {"sha": "30219e1aa7265ea912f1f774f426a328368bab2e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/30219e1aa7265ea912f1f774f426a328368bab2e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2831d6814a2f0f01b7ad4dcda1bf488ffb3addd1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2831d6814a2f0f01b7ad4dcda1bf488ffb3addd1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2831d6814a2f0f01b7ad4dcda1bf488ffb3addd1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2831d6814a2f0f01b7ad4dcda1bf488ffb3addd1/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "a6bac46b65ce7c070f770499bed007a7b466ead6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a6bac46b65ce7c070f770499bed007a7b466ead6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a6bac46b65ce7c070f770499bed007a7b466ead6"}], "stats": {"total": 37, "additions": 35, "deletions": 2}, "files": [{"sha": "de313ae2ff578fe37ced5cde4c6ada778b79c888", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2831d6814a2f0f01b7ad4dcda1bf488ffb3addd1/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2831d6814a2f0f01b7ad4dcda1bf488ffb3addd1/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=2831d6814a2f0f01b7ad4dcda1bf488ffb3addd1", "patch": "@@ -1,3 +1,8 @@\n+2018-07-03  Jason Merrill  <jason@redhat.com>\n+\n+\tPR c++/86378 - functional cast in noexcept-specifier.\n+\t* tree.c (strip_typedefs_expr) [TREE_LIST]: Fix iteration.\n+\n 2018-07-02  Paolo Carlini  <paolo.carlini@oracle.com>\n \n \t* parser.c (set_and_check_decl_spec_loc): Use rich_location::add_range"}, {"sha": "b1333f55e394aa854545680d8decc5bbb713fb11", "filename": "gcc/cp/tree.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2831d6814a2f0f01b7ad4dcda1bf488ffb3addd1/gcc%2Fcp%2Ftree.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2831d6814a2f0f01b7ad4dcda1bf488ffb3addd1/gcc%2Fcp%2Ftree.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Ftree.c?ref=2831d6814a2f0f01b7ad4dcda1bf488ffb3addd1", "patch": "@@ -1735,9 +1735,9 @@ strip_typedefs_expr (tree t, bool *remove_attributes)\n \ttree it;\n \tfor (it = t; it; it = TREE_CHAIN (it))\n \t  {\n-\t    tree val = strip_typedefs_expr (TREE_VALUE (t), remove_attributes);\n+\t    tree val = strip_typedefs_expr (TREE_VALUE (it), remove_attributes);\n \t    vec_safe_push (vec, val);\n-\t    if (val != TREE_VALUE (t))\n+\t    if (val != TREE_VALUE (it))\n \t      changed = true;\n \t    gcc_assert (TREE_PURPOSE (it) == NULL_TREE);\n \t  }"}, {"sha": "c5a03de38dd1984c1bafbbe52a9b2f33968b50c8", "filename": "gcc/testsuite/g++.dg/cpp0x/noexcept33.C", "status": "added", "additions": 28, "deletions": 0, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2831d6814a2f0f01b7ad4dcda1bf488ffb3addd1/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fnoexcept33.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2831d6814a2f0f01b7ad4dcda1bf488ffb3addd1/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fnoexcept33.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fnoexcept33.C?ref=2831d6814a2f0f01b7ad4dcda1bf488ffb3addd1", "patch": "@@ -0,0 +1,28 @@\n+// PR c++/86378\n+// { dg-do compile { target c++11 } }\n+\n+struct Pepper {};\n+struct Apple { Apple(int) {} };\n+\n+struct Combination : Apple, Pepper\n+{\n+  Combination(Pepper p, Apple a)\n+    : Apple(a), Pepper(p)\n+  {}\n+};\n+\n+struct MyCombination\n+{\n+  using Spice = Pepper;\n+  using Fruit = Apple;\n+\n+  Combination combination;\n+\n+  template<typename T>\n+  constexpr MyCombination(T&& t)\n+  noexcept(noexcept(Combination(Spice(), Fruit(t))))\n+    : combination(Spice(), Fruit(t))\n+  {}\n+};\n+\n+MyCombination obj(Apple(4));"}]}