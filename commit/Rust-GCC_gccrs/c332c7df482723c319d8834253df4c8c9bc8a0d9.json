{"sha": "c332c7df482723c319d8834253df4c8c9bc8a0d9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzMzMmM3ZGY0ODI3MjNjMzE5ZDg4MzQyNTNkZjRjOGM5YmM4YTBkOQ==", "commit": {"author": {"name": "David Holsgrove", "email": "david.holsgrove@xilinx.com", "date": "2014-02-23T18:44:27Z"}, "committer": {"name": "Michael Eager", "email": "eager@gcc.gnu.org", "date": "2014-02-23T18:44:27Z"}, "message": "microblaze.c: Add microblaze_asm_output_mi_thunk and define TARGET_ASM_OUTPUT_MI_THUNK and...\n\n2014-02-23  David Holsgrove <david.holsgrove@xilinx.com>\n\n\t* /config/microblaze/microblaze.c: Add microblaze_asm_output_mi_thunk\n\tand define TARGET_ASM_OUTPUT_MI_THUNK and\n\tTARGET_ASM_CAN_OUTPUT_MI_THUNK.\n\nFrom-SVN: r208057", "tree": {"sha": "b184bf570c249487b8c17689ec0320a7b11ceba4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b184bf570c249487b8c17689ec0320a7b11ceba4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c332c7df482723c319d8834253df4c8c9bc8a0d9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c332c7df482723c319d8834253df4c8c9bc8a0d9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c332c7df482723c319d8834253df4c8c9bc8a0d9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c332c7df482723c319d8834253df4c8c9bc8a0d9/comments", "author": {"login": "davidholsgrove", "id": 4031547, "node_id": "MDQ6VXNlcjQwMzE1NDc=", "avatar_url": "https://avatars.githubusercontent.com/u/4031547?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidholsgrove", "html_url": "https://github.com/davidholsgrove", "followers_url": "https://api.github.com/users/davidholsgrove/followers", "following_url": "https://api.github.com/users/davidholsgrove/following{/other_user}", "gists_url": "https://api.github.com/users/davidholsgrove/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidholsgrove/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidholsgrove/subscriptions", "organizations_url": "https://api.github.com/users/davidholsgrove/orgs", "repos_url": "https://api.github.com/users/davidholsgrove/repos", "events_url": "https://api.github.com/users/davidholsgrove/events{/privacy}", "received_events_url": "https://api.github.com/users/davidholsgrove/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "d5a19af1beb13732288d09f21c9d28af55137b1d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d5a19af1beb13732288d09f21c9d28af55137b1d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d5a19af1beb13732288d09f21c9d28af55137b1d"}], "stats": {"total": 79, "additions": 79, "deletions": 0}, "files": [{"sha": "e204e434aaf3ec553475bd53b0be48abe7aafad9", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c332c7df482723c319d8834253df4c8c9bc8a0d9/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c332c7df482723c319d8834253df4c8c9bc8a0d9/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=c332c7df482723c319d8834253df4c8c9bc8a0d9", "patch": "@@ -1,3 +1,9 @@\n+2014-02-23  David Holsgrove <david.holsgrove@xilinx.com>\n+\n+\t* /config/microblaze/microblaze.c: Add microblaze_asm_output_mi_thunk\n+\tand define TARGET_ASM_OUTPUT_MI_THUNK and\n+\tTARGET_ASM_CAN_OUTPUT_MI_THUNK.\n+\n 2014-02-23  David Holsgrove <david.holsgrove@xilinx.com>\n \n \t* config/microblaze/predicates.md: Add cmp_op predicate."}, {"sha": "ba8109bc123a7997b2bce5ea9d8a2d8367f680a5", "filename": "gcc/config/microblaze/microblaze.c", "status": "modified", "additions": 73, "deletions": 0, "changes": 73, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c332c7df482723c319d8834253df4c8c9bc8a0d9/gcc%2Fconfig%2Fmicroblaze%2Fmicroblaze.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c332c7df482723c319d8834253df4c8c9bc8a0d9/gcc%2Fconfig%2Fmicroblaze%2Fmicroblaze.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmicroblaze%2Fmicroblaze.c?ref=c332c7df482723c319d8834253df4c8c9bc8a0d9", "patch": "@@ -3087,6 +3087,73 @@ expand_pic_symbol_ref (enum machine_mode mode ATTRIBUTE_UNUSED, rtx op)\n   return result;\n }\n \n+static void\n+microblaze_asm_output_mi_thunk (FILE *file, tree thunk_fndecl ATTRIBUTE_UNUSED,\n+        HOST_WIDE_INT delta, HOST_WIDE_INT vcall_offset,\n+        tree function)\n+{\n+  rtx this_rtx, insn, funexp;\n+\n+  reload_completed = 1;\n+  epilogue_completed = 1;\n+\n+  /* Mark the end of the (empty) prologue.  */\n+  emit_note (NOTE_INSN_PROLOGUE_END);\n+\n+  /* Find the \"this\" pointer.  If the function returns a structure,\n+     the structure return pointer is in MB_ABI_FIRST_ARG_REGNUM.  */\n+  if (aggregate_value_p (TREE_TYPE (TREE_TYPE (function)), function))\n+    this_rtx = gen_rtx_REG (Pmode, (MB_ABI_FIRST_ARG_REGNUM + 1));\n+  else\n+    this_rtx = gen_rtx_REG (Pmode, MB_ABI_FIRST_ARG_REGNUM);\n+\n+  /* Apply the constant offset, if required.  */\n+  if (delta)\n+    emit_insn (gen_addsi3 (this_rtx, this_rtx, GEN_INT (delta)));\n+\n+  /* Apply the offset from the vtable, if required.  */\n+  if (vcall_offset)\n+  {\n+    rtx vcall_offset_rtx = GEN_INT (vcall_offset);\n+    rtx temp1 = gen_rtx_REG (Pmode, MB_ABI_TEMP1_REGNUM);\n+\n+    emit_move_insn (temp1, gen_rtx_MEM (Pmode, this_rtx));\n+\n+    rtx loc = gen_rtx_PLUS (Pmode, temp1, vcall_offset_rtx);\n+    emit_move_insn (temp1, gen_rtx_MEM (Pmode, loc));\n+\n+    emit_insn (gen_addsi3 (this_rtx, this_rtx, temp1));\n+  }\n+\n+  /* Generate a tail call to the target function.  */\n+  if (!TREE_USED (function))\n+  {\n+    assemble_external (function);\n+    TREE_USED (function) = 1;\n+  }\n+\n+  funexp = XEXP (DECL_RTL (function), 0);\n+  rtx temp2 = gen_rtx_REG (Pmode, MB_ABI_TEMP2_REGNUM);\n+\n+  if (flag_pic)\n+    emit_move_insn (temp2, expand_pic_symbol_ref (Pmode, funexp));\n+  else\n+    emit_move_insn (temp2, funexp);\n+\n+  emit_insn (gen_indirect_jump (temp2));\n+\n+  /* Run just enough of rest_of_compilation.  This sequence was\n+     \"borrowed\" from rs6000.c.  */\n+  insn = get_insns ();\n+  shorten_branches (insn);\n+  final_start_function (insn, file, 1);\n+  final (insn, file, 1);\n+  final_end_function ();\n+\n+  reload_completed = 0;\n+  epilogue_completed = 0;\n+}\n+\n bool\n microblaze_expand_move (enum machine_mode mode, rtx operands[])\n {\n@@ -3504,6 +3571,12 @@ microblaze_legitimate_constant_p (enum machine_mode mode ATTRIBUTE_UNUSED, rtx x\n #undef TARGET_SECONDARY_RELOAD\n #define TARGET_SECONDARY_RELOAD\t\tmicroblaze_secondary_reload\n \n+#undef  TARGET_ASM_OUTPUT_MI_THUNK\n+#define TARGET_ASM_OUTPUT_MI_THUNK      microblaze_asm_output_mi_thunk\n+\n+#undef  TARGET_ASM_CAN_OUTPUT_MI_THUNK\n+#define TARGET_ASM_CAN_OUTPUT_MI_THUNK  hook_bool_const_tree_hwi_hwi_const_tree_true\n+\n #undef TARGET_SCHED_ADJUST_COST\n #define TARGET_SCHED_ADJUST_COST\tmicroblaze_adjust_cost\n "}]}