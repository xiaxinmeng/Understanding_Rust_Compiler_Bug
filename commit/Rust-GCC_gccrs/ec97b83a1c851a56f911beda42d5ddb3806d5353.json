{"sha": "ec97b83a1c851a56f911beda42d5ddb3806d5353", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWM5N2I4M2ExYzg1MWE1NmY5MTFiZWRhNDJkNWRkYjM4MDZkNTM1Mw==", "commit": {"author": {"name": "Kaveh R. Ghazi", "email": "ghazi@caip.rutgers.edu", "date": "1999-10-21T16:26:42Z"}, "committer": {"name": "Kaveh Ghazi", "email": "ghazi@gcc.gnu.org", "date": "1999-10-21T16:26:42Z"}, "message": "function.c (record_insns, contains): Always declare and define.\n\n       * function.c (record_insns, contains): Always declare and define.\n       (record_insns): Mark with ATTRIBUTE_UNUSED.\n\nFrom-SVN: r30121", "tree": {"sha": "3fddfaa0efb9ac257d1b6bce54722adc4f7519ce", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3fddfaa0efb9ac257d1b6bce54722adc4f7519ce"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ec97b83a1c851a56f911beda42d5ddb3806d5353", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ec97b83a1c851a56f911beda42d5ddb3806d5353", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ec97b83a1c851a56f911beda42d5ddb3806d5353", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ec97b83a1c851a56f911beda42d5ddb3806d5353/comments", "author": null, "committer": null, "parents": [{"sha": "ec8aac6f55cd0f5e73e57d58f373fc3a0385bcac", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ec8aac6f55cd0f5e73e57d58f373fc3a0385bcac", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ec8aac6f55cd0f5e73e57d58f373fc3a0385bcac"}], "stats": {"total": 13, "additions": 8, "deletions": 5}, "files": [{"sha": "4d633ed144ca4b15f4e141c388acc925b02de66c", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ec97b83a1c851a56f911beda42d5ddb3806d5353/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ec97b83a1c851a56f911beda42d5ddb3806d5353/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=ec97b83a1c851a56f911beda42d5ddb3806d5353", "patch": "@@ -1,3 +1,8 @@\n+Thu Oct 21 12:23:40 1999  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n+\n+\t* function.c (record_insns, contains): Always declare and define.\n+\t(record_insns): Mark with ATTRIBUTE_UNUSED.\n+\n Thu Oct 21 13:03:49 1999  Jonathan Larmour  <jlarmour@cygnus.co.uk>\n \n \t* config/arm/telf.h (ASM_OUTPUT_SECTION_NAME): Add %nobits option"}, {"sha": "93ed0641dbfd5b2d7d2894aabd7745894a1fcc98", "filename": "gcc/function.c", "status": "modified", "additions": 3, "deletions": 5, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ec97b83a1c851a56f911beda42d5ddb3806d5353/gcc%2Ffunction.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ec97b83a1c851a56f911beda42d5ddb3806d5353/gcc%2Ffunction.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffunction.c?ref=ec97b83a1c851a56f911beda42d5ddb3806d5353", "patch": "@@ -263,10 +263,10 @@ static tree round_down\t\tPROTO((tree, int));\n static rtx round_trampoline_addr PROTO((rtx));\n static tree blocks_nreverse\tPROTO((tree));\n static int all_blocks\t\tPROTO((tree, tree *));\n-#if defined (HAVE_prologue) || defined (HAVE_epilogue)\n-static int *record_insns\tPROTO((rtx));\n+/* We always define `record_insns' even if its not used so that we\n+   can always export `prologue_epilogue_contains'.  */\n+static int *record_insns\tPROTO((rtx)) ATTRIBUTE_UNUSED;\n static int contains\t\tPROTO((rtx, int *));\n-#endif /* HAVE_prologue || HAVE_epilogue */\n static void put_addressof_into_stack PROTO((rtx, struct hash_table *));\n static void purge_addressof_1\tPROTO((rtx *, rtx, int, int, \n \t\t\t\t       struct hash_table *));\n@@ -6424,7 +6424,6 @@ expand_function_end (filename, line, end_bindings)\n /* Create an array that records the INSN_UIDs of INSNS (either a sequence\n    or a single insn).  */\n \n-#if defined (HAVE_prologue) || defined (HAVE_epilogue)\n static int *\n record_insns (insns)\n      rtx insns;\n@@ -6486,7 +6485,6 @@ prologue_epilogue_contains (insn)\n     return 1;\n   return 0;\n }\n-#endif /* HAVE_prologue || HAVE_epilogue */\n \n /* Generate the prologue and epilogue RTL if the machine supports it.  Thread\n    this into place with notes indicating where the prologue ends and where"}]}