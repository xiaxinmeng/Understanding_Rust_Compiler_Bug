{"sha": "92a87cb7ff2c62403af3fe5d229d51af660c6c73", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTJhODdjYjdmZjJjNjI0MDNhZjNmZTVkMjI5ZDUxYWY2NjBjNmM3Mw==", "commit": {"author": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2014-05-05T17:55:03Z"}, "committer": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2014-05-05T17:55:03Z"}, "message": "compiler: Use backend interface for struct field offsets.\n\nFrom-SVN: r210074", "tree": {"sha": "b9abd51249fcb5a938371b969f4811570e2ddbb6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b9abd51249fcb5a938371b969f4811570e2ddbb6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/92a87cb7ff2c62403af3fe5d229d51af660c6c73", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/92a87cb7ff2c62403af3fe5d229d51af660c6c73", "html_url": "https://github.com/Rust-GCC/gccrs/commit/92a87cb7ff2c62403af3fe5d229d51af660c6c73", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/92a87cb7ff2c62403af3fe5d229d51af660c6c73/comments", "author": null, "committer": null, "parents": [{"sha": "0db7457704f3c609c2c01c8f0f4ee3fecac29a74", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0db7457704f3c609c2c01c8f0f4ee3fecac29a74", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0db7457704f3c609c2c01c8f0f4ee3fecac29a74"}], "stats": {"total": 31, "additions": 15, "deletions": 16}, "files": [{"sha": "3d44a2b289300c5d6309d650463fb4118b3cc64a", "filename": "gcc/go/gofrontend/expressions.cc", "status": "modified", "additions": 15, "deletions": 16, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/92a87cb7ff2c62403af3fe5d229d51af660c6c73/gcc%2Fgo%2Fgofrontend%2Fexpressions.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/92a87cb7ff2c62403af3fe5d229d51af660c6c73/gcc%2Fgo%2Fgofrontend%2Fexpressions.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgo%2Fgofrontend%2Fexpressions.cc?ref=92a87cb7ff2c62403af3fe5d229d51af660c6c73", "patch": "@@ -14815,28 +14815,27 @@ class Struct_field_offset_expression : public Expression\n tree\n Struct_field_offset_expression::do_get_tree(Translate_context* context)\n {\n-  tree type_tree = type_to_tree(this->type_->get_backend(context->gogo()));\n-  if (type_tree == error_mark_node)\n-    return error_mark_node;\n-\n-  tree val_type_tree = type_to_tree(this->type()->get_backend(context->gogo()));\n-  go_assert(val_type_tree != error_mark_node);\n-\n   const Struct_field_list* fields = this->type_->fields();\n-  tree struct_field_tree = TYPE_FIELDS(type_tree);\n   Struct_field_list::const_iterator p;\n+  unsigned i = 0;\n   for (p = fields->begin();\n        p != fields->end();\n-       ++p, struct_field_tree = DECL_CHAIN(struct_field_tree))\n-    {\n-      go_assert(struct_field_tree != NULL_TREE);\n-      if (&*p == this->field_)\n-\tbreak;\n-    }\n+       ++p, ++i)\n+    if (&*p == this->field_)\n+      break;\n   go_assert(&*p == this->field_);\n \n-  return fold_convert_loc(BUILTINS_LOCATION, val_type_tree,\n-\t\t\t  byte_position(struct_field_tree));\n+  Gogo* gogo = context->gogo();\n+  Btype* btype = this->type_->get_backend(gogo);\n+\n+  size_t offset = gogo->backend()->type_field_offset(btype, i);\n+  mpz_t offsetval;\n+  mpz_init_set_ui(offsetval, offset);\n+  Type* uptr_type = Type::lookup_integer_type(\"uintptr\");\n+  Expression* ret = Expression::make_integer(&offsetval, uptr_type,\n+\t\t\t\t\t     Linemap::predeclared_location());\n+  mpz_clear(offsetval);\n+  return ret->get_tree(context);\n }\n \n // Dump ast representation for a struct field offset expression."}]}