{"sha": "33a79dfafb5dae4c5146df3f082f1b1ee703c613", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzNhNzlkZmFmYjVkYWU0YzUxNDZkZjNmMDgyZjFiMWVlNzAzYzYxMw==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1995-04-25T22:39:11Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1995-04-25T22:39:11Z"}, "message": "(chain_member_purpose): Make similar to chain_member_value.\n\nFrom-SVN: r9454", "tree": {"sha": "499f5326a5f304fdb81b16088aa677b155a1cbf0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/499f5326a5f304fdb81b16088aa677b155a1cbf0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/33a79dfafb5dae4c5146df3f082f1b1ee703c613", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/33a79dfafb5dae4c5146df3f082f1b1ee703c613", "html_url": "https://github.com/Rust-GCC/gccrs/commit/33a79dfafb5dae4c5146df3f082f1b1ee703c613", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/33a79dfafb5dae4c5146df3f082f1b1ee703c613/comments", "author": null, "committer": null, "parents": [{"sha": "713ff25294f13f8319ae845973c0b85f0a054392", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/713ff25294f13f8319ae845973c0b85f0a054392", "html_url": "https://github.com/Rust-GCC/gccrs/commit/713ff25294f13f8319ae845973c0b85f0a054392"}], "stats": {"total": 4, "additions": 2, "deletions": 2}, "files": [{"sha": "2d0d9af3f58383204359b58f0cedf5bc42637be3", "filename": "gcc/tree.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/33a79dfafb5dae4c5146df3f082f1b1ee703c613/gcc%2Ftree.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/33a79dfafb5dae4c5146df3f082f1b1ee703c613/gcc%2Ftree.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree.c?ref=33a79dfafb5dae4c5146df3f082f1b1ee703c613", "patch": "@@ -1725,7 +1725,7 @@ chain_member_value (elem, chain)\n   return 0;\n }\n \n-/* Return nonzero if ELEM is equal to TREE_PURPOSE (TREE_VALUE (CHAIN)) \n+/* Return nonzero if ELEM is equal to TREE_PURPOSE (CHAIN)\n    for any piece of chain CHAIN. */\n \n int\n@@ -1735,7 +1735,7 @@ chain_member_purpose (elem, chain)\n \n   while (chain)\n     {\n-      if (elem == TREE_PURPOSE (TREE_VALUE (chain)))\n+      if (elem == TREE_PURPOSE (chain))\n \treturn 1;\n       chain = TREE_CHAIN (chain);\n     }"}]}