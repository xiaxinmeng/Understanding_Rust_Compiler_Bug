{"sha": "b295c471c2c534ed75ecb18a9b8ca4d319a9aee1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjI5NWM0NzFjMmM1MzRlZDc1ZWNiMThhOWI4Y2E0ZDMxOWE5YWVlMQ==", "commit": {"author": {"name": "Andreas Tobler", "email": "a.tobler@schweiz.ch", "date": "2006-02-28T23:18:01Z"}, "committer": {"name": "Andreas Tobler", "email": "andreast@gcc.gnu.org", "date": "2006-02-28T23:18:01Z"}, "message": "unwindtest.cc (closure_test_fn): Mark cif, args and userdata unused.\n\n2006-03-01  Andreas Tobler  <a.tobler@schweiz.ch>\n\n\t* testsuite/libffi.special/unwindtest.cc (closure_test_fn): Mark cif,\n\targs and userdata unused.\n\t(closure_test_fn1): Mark cif and userdata unused.\n\t(main): Remove unused res.\n\nFrom-SVN: r111583", "tree": {"sha": "3cbada4b93f6cc94bbce0515bb0fcd9cb98bc53b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3cbada4b93f6cc94bbce0515bb0fcd9cb98bc53b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b295c471c2c534ed75ecb18a9b8ca4d319a9aee1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b295c471c2c534ed75ecb18a9b8ca4d319a9aee1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b295c471c2c534ed75ecb18a9b8ca4d319a9aee1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b295c471c2c534ed75ecb18a9b8ca4d319a9aee1/comments", "author": null, "committer": null, "parents": [{"sha": "9fdeb13b0e7caf30992b9af07f6a2d1cd59c4669", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9fdeb13b0e7caf30992b9af07f6a2d1cd59c4669", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9fdeb13b0e7caf30992b9af07f6a2d1cd59c4669"}], "stats": {"total": 41, "additions": 30, "deletions": 11}, "files": [{"sha": "f017dacda73312df31006ffb70bec943ef0d561e", "filename": "libffi/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b295c471c2c534ed75ecb18a9b8ca4d319a9aee1/libffi%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b295c471c2c534ed75ecb18a9b8ca4d319a9aee1/libffi%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2FChangeLog?ref=b295c471c2c534ed75ecb18a9b8ca4d319a9aee1", "patch": "@@ -1,3 +1,10 @@\n+2006-03-01  Andreas Tobler  <a.tobler@schweiz.ch>\n+\n+\t* testsuite/libffi.special/unwindtest.cc (closure_test_fn): Mark cif,\n+\targs and userdata unused.\n+\t(closure_test_fn1): Mark cif and userdata unused.\n+\t(main): Remove unused res.\n+\n 2006-02-28  Andreas Tobler  <a.tobler@schweiz.ch>\n \n \t* testsuite/libffi.call/call.exp: Adjust FSF address. Add test runs for"}, {"sha": "28b3a1596829d0a98620a36e14c8543ebbb67b32", "filename": "libffi/testsuite/libffi.call/cls_align_uint64.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b295c471c2c534ed75ecb18a9b8ca4d319a9aee1/libffi%2Ftestsuite%2Flibffi.call%2Fcls_align_uint64.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b295c471c2c534ed75ecb18a9b8ca4d319a9aee1/libffi%2Ftestsuite%2Flibffi.call%2Fcls_align_uint64.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2Ftestsuite%2Flibffi.call%2Fcls_align_uint64.c?ref=b295c471c2c534ed75ecb18a9b8ca4d319a9aee1", "patch": "@@ -28,7 +28,8 @@ cls_struct_align cls_struct_align_fn(struct cls_struct_align a1,\n }\n \n static void\n-cls_struct_align_gn(ffi_cif* cif, void* resp, void** args, void* userdata)\n+cls_struct_align_gn(ffi_cif* cif __UNUSED__, void* resp, void** args,\n+\t\t    void* userdata __UNUSED__)\n {\n \n   struct cls_struct_align a1, a2;"}, {"sha": "b9f0d48761f3656cb9e8da2e7b3d13ddc76797a2", "filename": "libffi/testsuite/libffi.special/ffitestcxx.h", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b295c471c2c534ed75ecb18a9b8ca4d319a9aee1/libffi%2Ftestsuite%2Flibffi.special%2Fffitestcxx.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b295c471c2c534ed75ecb18a9b8ca4d319a9aee1/libffi%2Ftestsuite%2Flibffi.special%2Fffitestcxx.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2Ftestsuite%2Flibffi.special%2Fffitestcxx.h?ref=b295c471c2c534ed75ecb18a9b8ca4d319a9aee1", "patch": "@@ -6,6 +6,15 @@\n \n #define MAX_ARGS 256\n \n+\n+/* Define __UNUSED__ that also other compilers than gcc can run the tests.  */\n+#undef __UNUSED__\n+#if defined(__GNUC__)\n+#define __UNUSED__ __attribute__((__unused__))\n+#else\n+#define __UNUSED__\n+#endif\n+\n #define CHECK(x) (!(x) ? abort() : (void)0)\n \n /* Prefer MAP_ANON(YMOUS) to /dev/zero, since we don't need to keep a"}, {"sha": "b7d31dab6c3b7d8e23e285372ffc965242d8bf56", "filename": "libffi/testsuite/libffi.special/special.exp", "status": "modified", "additions": 8, "deletions": 6, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b295c471c2c534ed75ecb18a9b8ca4d319a9aee1/libffi%2Ftestsuite%2Flibffi.special%2Fspecial.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b295c471c2c534ed75ecb18a9b8ca4d319a9aee1/libffi%2Ftestsuite%2Flibffi.special%2Fspecial.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2Ftestsuite%2Flibffi.special%2Fspecial.exp?ref=b295c471c2c534ed75ecb18a9b8ca4d319a9aee1", "patch": "@@ -1,19 +1,18 @@\n-#   Copyright (C) 2003 Free Software Foundation, Inc.\n+# Copyright (C) 2003, 2006 Free Software Foundation, Inc.\n \n # This program is free software; you can redistribute it and/or modify\n # it under the terms of the GNU General Public License as published by\n # the Free Software Foundation; either version 2 of the License, or\n # (at your option) any later version.\n-# \n+#\n # This program is distributed in the hope that it will be useful,\n # but WITHOUT ANY WARRANTY; without even the implied warranty of\n # MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n # GNU General Public License for more details.\n-# \n+#\n # You should have received a copy of the GNU General Public License\n # along with this program; if not, write to the Free Software\n-# Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.  \n-\n+# Foundation, 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA.\n # libffi testsuite that uses the 'dg.exp' driver.\n \n load_lib libffi-dg.exp\n@@ -27,7 +26,10 @@ global cxx_options\n \n set cxx_options \" -shared-libgcc -lstdc++\"\n \n-dg-runtest [lsort [glob -nocomplain $srcdir/$subdir/*.cc]] $cxx_options \"\"\n+dg-runtest [lsort [glob -nocomplain $srcdir/$subdir/*.cc]] $cxx_options \"-O0 -W -Wall\"\n+dg-runtest [lsort [glob -nocomplain $srcdir/$subdir/*.cc]] $cxx_options \"-O2\"\n+dg-runtest [lsort [glob -nocomplain $srcdir/$subdir/*.cc]] $cxx_options \"-O3\"\n+dg-runtest [lsort [glob -nocomplain $srcdir/$subdir/*.cc]] $cxx_options \"-Os\"\n \n dg-finish\n "}, {"sha": "b3f7cb356b7f211483aa078be97ad4fed51a6840", "filename": "libffi/testsuite/libffi.special/unwindtest.cc", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b295c471c2c534ed75ecb18a9b8ca4d319a9aee1/libffi%2Ftestsuite%2Flibffi.special%2Funwindtest.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b295c471c2c534ed75ecb18a9b8ca4d319a9aee1/libffi%2Ftestsuite%2Flibffi.special%2Funwindtest.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2Ftestsuite%2Flibffi.special%2Funwindtest.cc?ref=b295c471c2c534ed75ecb18a9b8ca4d319a9aee1", "patch": "@@ -8,15 +8,16 @@\n #include \"ffitestcxx.h\"\n \n void\n-closure_test_fn(ffi_cif* cif, void* resp, void** args, void* userdata)\n+closure_test_fn(ffi_cif* cif __UNUSED__, void* resp __UNUSED__,\n+\t\tvoid** args __UNUSED__, void* userdata __UNUSED__)\n {\n   throw 9;\n }\n \n typedef void (*closure_test_type)();\n \n-void closure_test_fn1(ffi_cif* cif,void* resp,void** args,\n-\t\t\t     void* userdata)\n+void closure_test_fn1(ffi_cif* cif __UNUSED__, void* resp,\n+\t\t      void** args, void* userdata __UNUSED__)\n  {\n     *(ffi_arg*)resp =\n       (int)*(float *)args[0] +(int)(*(float *)args[1]) +\n@@ -54,7 +55,6 @@ int main (void)\n #endif\n   ffi_closure *pcl;\n   ffi_type * cl_arg_types[17];\n-  int res;\n #ifdef USING_MMAP\n   pcl = (ffi_closure *) allocate_mmap (sizeof(ffi_closure));\n #else"}]}