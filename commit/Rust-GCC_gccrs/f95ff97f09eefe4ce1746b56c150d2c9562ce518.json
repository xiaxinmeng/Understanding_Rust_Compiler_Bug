{"sha": "f95ff97f09eefe4ce1746b56c150d2c9562ce518", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Zjk1ZmY5N2YwOWVlZmU0Y2UxNzQ2YjU2YzE1MGQyYzk1NjJjZTUxOA==", "commit": {"author": {"name": "Nathan Sidwell", "email": "nathan@acm.org", "date": "2015-12-16T21:05:39Z"}, "committer": {"name": "Nathan Sidwell", "email": "nathan@gcc.gnu.org", "date": "2015-12-16T21:05:39Z"}, "message": "ipa-visibility.c (can_replace_by_local_alias): Make static, check ASM_OUTPUT_DEF.\n\n\t* ipa-visibility.c (can_replace_by_local_alias): Make static,\n\tcheck ASM_OUTPUT_DEF.\n\t(can_replace_by_local_alias_in_vtable): Make static.\n\t(function_and_variable_visibility): Reformat overlong comment.\n\nFrom-SVN: r231721", "tree": {"sha": "6295e912a24f2f4ac3f5d8cee014b550e096a38d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6295e912a24f2f4ac3f5d8cee014b550e096a38d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f95ff97f09eefe4ce1746b56c150d2c9562ce518", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f95ff97f09eefe4ce1746b56c150d2c9562ce518", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f95ff97f09eefe4ce1746b56c150d2c9562ce518", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f95ff97f09eefe4ce1746b56c150d2c9562ce518/comments", "author": {"login": "urnathan", "id": 13103001, "node_id": "MDQ6VXNlcjEzMTAzMDAx", "avatar_url": "https://avatars.githubusercontent.com/u/13103001?v=4", "gravatar_id": "", "url": "https://api.github.com/users/urnathan", "html_url": "https://github.com/urnathan", "followers_url": "https://api.github.com/users/urnathan/followers", "following_url": "https://api.github.com/users/urnathan/following{/other_user}", "gists_url": "https://api.github.com/users/urnathan/gists{/gist_id}", "starred_url": "https://api.github.com/users/urnathan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/urnathan/subscriptions", "organizations_url": "https://api.github.com/users/urnathan/orgs", "repos_url": "https://api.github.com/users/urnathan/repos", "events_url": "https://api.github.com/users/urnathan/events{/privacy}", "received_events_url": "https://api.github.com/users/urnathan/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "60b5526fd649800826098a35cc33fbd530622592", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/60b5526fd649800826098a35cc33fbd530622592", "html_url": "https://github.com/Rust-GCC/gccrs/commit/60b5526fd649800826098a35cc33fbd530622592"}], "stats": {"total": 26, "additions": 19, "deletions": 7}, "files": [{"sha": "95e96561c2d8e74952a0cbf4f6c007834e5ca495", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f95ff97f09eefe4ce1746b56c150d2c9562ce518/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f95ff97f09eefe4ce1746b56c150d2c9562ce518/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=f95ff97f09eefe4ce1746b56c150d2c9562ce518", "patch": "@@ -1,3 +1,10 @@\n+2015-12-16  Nathan Sidwell  <nathan@acm.org>\n+\n+\t* ipa-visibility.c (can_replace_by_local_alias): Make static,\n+\tcheck ASM_OUTPUT_DEF.\n+\t(can_replace_by_local_alias_in_vtable): Make static.\n+\t(function_and_variable_visibility): Reformat overlong comment.\n+\n 2015-12-16  Jeff Law  <law@redhat.com>\n \n \t* ree.c (add_removable_extension): Use reg_overlap_mentioned_p"}, {"sha": "4b48d6e5b8b2371be8796b2130f7a2ee71d34186", "filename": "gcc/ipa-visibility.c", "status": "modified", "additions": 12, "deletions": 7, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f95ff97f09eefe4ce1746b56c150d2c9562ce518/gcc%2Fipa-visibility.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f95ff97f09eefe4ce1746b56c150d2c9562ce518/gcc%2Fipa-visibility.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fipa-visibility.c?ref=f95ff97f09eefe4ce1746b56c150d2c9562ce518", "patch": "@@ -329,9 +329,13 @@ varpool_node::externally_visible_p (void)\n    Local aliases save dynamic linking overhead and enable more optimizations.\n  */\n \n-bool\n+static bool\n can_replace_by_local_alias (symtab_node *node)\n {\n+#ifndef ASM_OUTPUT_DEF\n+  /* If aliases aren't supported, we can't do replacement.  */\n+  return false;\n+#endif\n   /* Weakrefs have a reason to be non-local.  Be sure we do not replace\n      them.  */\n   while (node->transparent_alias && node->definition && !node->weakref)\n@@ -344,11 +348,11 @@ can_replace_by_local_alias (symtab_node *node)\n \t  && !node->can_be_discarded_p ());\n }\n \n-/* Return true if we can replace refernece to NODE by local alias\n+/* Return true if we can replace reference to NODE by local alias\n    within a virtual table.  Generally we can replace function pointers\n    and virtual table pointers.  */\n \n-bool\n+static bool\n can_replace_by_local_alias_in_vtable (symtab_node *node)\n {\n   if (is_a <varpool_node *> (node)\n@@ -592,10 +596,11 @@ function_and_variable_visibility (bool whole_program)\n       if (!node->local.local)\n         node->local.local |= node->local_p ();\n \n-      /* If we know that function can not be overwritten by a different semantics\n-\t and moreover its section can not be discarded, replace all direct calls\n-\t by calls to an noninterposable alias.  This make dynamic linking\n-\t cheaper and enable more optimization.\n+      /* If we know that function can not be overwritten by a\n+\t different semantics and moreover its section can not be\n+\t discarded, replace all direct calls by calls to an\n+\t noninterposable alias.  This make dynamic linking cheaper and\n+\t enable more optimization.\n \n \t TODO: We can also update virtual tables.  */\n       if (node->callers "}]}