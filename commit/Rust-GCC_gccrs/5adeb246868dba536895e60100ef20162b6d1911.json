{"sha": "5adeb246868dba536895e60100ef20162b6d1911", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWFkZWIyNDY4NjhkYmE1MzY4OTVlNjAxMDBlZjIwMTYyYjZkMTkxMQ==", "commit": {"author": {"name": "Richard Sandiford", "email": "rdsandiford@googlemail.com", "date": "2012-02-19T16:44:54Z"}, "committer": {"name": "Richard Sandiford", "email": "rsandifo@gcc.gnu.org", "date": "2012-02-19T16:44:54Z"}, "message": "mips.c (mips16_build_call_stub): Add CFI information to stubs with non-sibling calls.\n\ngcc/\n\t* config/mips/mips.c (mips16_build_call_stub): Add CFI information\n\tto stubs with non-sibling calls.\n\nlibgcc/\n\t* config/mips/mips16.S (CALL_STUB_RET): Add CFI information.\n\nFrom-SVN: r184379", "tree": {"sha": "ad8b1e20eb94789217582fe66f9f9acb4948492a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ad8b1e20eb94789217582fe66f9f9acb4948492a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5adeb246868dba536895e60100ef20162b6d1911", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5adeb246868dba536895e60100ef20162b6d1911", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5adeb246868dba536895e60100ef20162b6d1911", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5adeb246868dba536895e60100ef20162b6d1911/comments", "author": {"login": "rsandifo", "id": 4235983, "node_id": "MDQ6VXNlcjQyMzU5ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/4235983?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rsandifo", "html_url": "https://github.com/rsandifo", "followers_url": "https://api.github.com/users/rsandifo/followers", "following_url": "https://api.github.com/users/rsandifo/following{/other_user}", "gists_url": "https://api.github.com/users/rsandifo/gists{/gist_id}", "starred_url": "https://api.github.com/users/rsandifo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rsandifo/subscriptions", "organizations_url": "https://api.github.com/users/rsandifo/orgs", "repos_url": "https://api.github.com/users/rsandifo/repos", "events_url": "https://api.github.com/users/rsandifo/events{/privacy}", "received_events_url": "https://api.github.com/users/rsandifo/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "3e95c6caec8cdb2683a2b57d6b2bf68be15a1769", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3e95c6caec8cdb2683a2b57d6b2bf68be15a1769", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3e95c6caec8cdb2683a2b57d6b2bf68be15a1769"}], "stats": {"total": 64, "additions": 48, "deletions": 16}, "files": [{"sha": "e052b4e38ec8849c5264e40fba2113711c3d0c04", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5adeb246868dba536895e60100ef20162b6d1911/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5adeb246868dba536895e60100ef20162b6d1911/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=5adeb246868dba536895e60100ef20162b6d1911", "patch": "@@ -1,3 +1,8 @@\n+2012-02-19  Richard Sandiford  <rdsandiford@googlemail.com>\n+\n+\t* config/mips/mips.c (mips16_build_call_stub): Add CFI information\n+\tto stubs with non-sibling calls.\n+\n 2012-02-18  Sandra Loosemore  <sandra@codesourcery.com>\n \n \t* doc/invoke.texi (-fira-* options): Copy-edit."}, {"sha": "2dfbb4bdbb97ac5d2eb725760002444ab72d5451", "filename": "gcc/config/mips/mips.c", "status": "modified", "additions": 22, "deletions": 7, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5adeb246868dba536895e60100ef20162b6d1911/gcc%2Fconfig%2Fmips%2Fmips.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5adeb246868dba536895e60100ef20162b6d1911/gcc%2Fconfig%2Fmips%2Fmips.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fmips.c?ref=5adeb246868dba536895e60100ef20162b6d1911", "patch": "@@ -6387,7 +6387,20 @@ mips16_build_call_stub (rtx retval, rtx *fn_ptr, rtx args_size, int fp_code)\n       assemble_start_function (stubdecl, stubname);\n       mips_start_function_definition (stubname, false);\n \n-      if (!fp_ret_p)\n+      if (fp_ret_p)\n+\t{\n+\t  fprintf (asm_out_file, \"\\t.cfi_startproc\\n\");\n+\n+\t  /* Create a fake CFA 4 bytes below the stack pointer.\n+\t     This works around unwinders (like libgcc's) that expect\n+\t     the CFA for non-signal frames to be unique.  */\n+\t  fprintf (asm_out_file, \"\\t.cfi_def_cfa 29,-4\\n\");\n+\n+\t  /* \"Save\" $sp in itself so we don't use the fake CFA.\n+\t     This is: DW_CFA_val_expression r29, { DW_OP_reg29 }.  */\n+\t  fprintf (asm_out_file, \"\\t.cfi_escape 0x16,29,1,0x6d\\n\");\n+\t}\n+      else\n \t{\n \t  /* Load the address of the MIPS16 function into $25.  Do this\n \t     first so that targets with coprocessor interlocks can use\n@@ -6405,19 +6418,15 @@ mips16_build_call_stub (rtx retval, rtx *fn_ptr, rtx args_size, int fp_code)\n \t registers.  */\n       mips_output_args_xfer (fp_code, 't');\n \n-      if (!fp_ret_p)\n-\t{\n-\t  /* Jump to the previously-loaded address.  */\n-\t  output_asm_insn (\"jr\\t%^\", NULL);\n-\t}\n-      else\n+      if (fp_ret_p)\n \t{\n \t  /* Save the return address in $18 and call the non-MIPS16 function.\n \t     The stub's caller knows that $18 might be clobbered, even though\n \t     $18 is usually a call-saved register.  */\n \t  fprintf (asm_out_file, \"\\tmove\\t%s,%s\\n\",\n \t\t   reg_names[GP_REG_FIRST + 18], reg_names[RETURN_ADDR_REGNUM]);\n \t  output_asm_insn (MIPS_CALL (\"jal\", &fn, 0, -1), &fn);\n+\t  fprintf (asm_out_file, \"\\t.cfi_register 31,18\\n\");\n \n \t  /* Move the result from floating-point registers to\n \t     general registers.  */\n@@ -6470,6 +6479,12 @@ mips16_build_call_stub (rtx retval, rtx *fn_ptr, rtx args_size, int fp_code)\n \t      gcc_unreachable ();\n \t    }\n \t  fprintf (asm_out_file, \"\\tjr\\t%s\\n\", reg_names[GP_REG_FIRST + 18]);\n+\t  fprintf (asm_out_file, \"\\t.cfi_endproc\\n\");\n+\t}\n+      else\n+\t{\n+\t  /* Jump to the previously-loaded address.  */\n+\t  output_asm_insn (\"jr\\t%^\", NULL);\n \t}\n \n #ifdef ASM_DECLARE_FUNCTION_SIZE"}, {"sha": "15d9b08824e8fee316e75b6d841b68655eb8657c", "filename": "libgcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5adeb246868dba536895e60100ef20162b6d1911/libgcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5adeb246868dba536895e60100ef20162b6d1911/libgcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2FChangeLog?ref=5adeb246868dba536895e60100ef20162b6d1911", "patch": "@@ -1,3 +1,7 @@\n+2012-02-19  Richard Sandiford  <rdsandiford@googlemail.com>\n+\n+\t* config/mips/mips16.S (CALL_STUB_RET): Add CFI information.\n+\n 2012-02-15  Iain Sandoe  <iains@gcc.gnu.org>\n \n \tPR libitm/52220"}, {"sha": "1899ab2ede9aec36f418a469e8ec43da5276f89d", "filename": "libgcc/config/mips/mips16.S", "status": "modified", "additions": 17, "deletions": 9, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5adeb246868dba536895e60100ef20162b6d1911/libgcc%2Fconfig%2Fmips%2Fmips16.S", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5adeb246868dba536895e60100ef20162b6d1911/libgcc%2Fconfig%2Fmips%2Fmips16.S", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fmips%2Fmips16.S?ref=5adeb246868dba536895e60100ef20162b6d1911", "patch": "@@ -566,15 +566,23 @@ CALL_STUB_NO_RET (__mips16_call_stub_10, 10)\n    being called is 16 bits, in which case the copy is unnecessary;\n    however, it's faster to always do the copy.  */\n \n-#define CALL_STUB_RET(NAME, CODE, MODE)\t\\\n-STARTFN (NAME);\t\t\t\t\\\n-\tmove\t$18,$31;\t\t\\\n-\tSTUB_ARGS_##CODE;\t\t\\\n-\t.set\tnoreorder;\t\t\\\n-\tjalr\t$2;\t\t\t\\\n-\tmove\t$25,$2;\t\t\t\\\n-\t.set\treorder;\t\t\\\n-\tMOVE_##MODE##_RET (f, $18);\t\\\n+#define CALL_STUB_RET(NAME, CODE, MODE)\t\t\t\t\t\\\n+STARTFN (NAME);\t\t\t\t\t\t\t\t\\\n+\t.cfi_startproc;\t\t\t\t\t\t\t\\\n+\t/* Create a fake CFA 4 bytes below the stack pointer.  */\t\\\n+\t.cfi_def_cfa 29,-4;\t\t\t\t\t\t\\\n+\t/* \"Save\" $sp in itself so we don't use the fake CFA.\t\t\\\n+\t   This is: DW_CFA_val_expression r29, { DW_OP_reg29 }.  */\t\\\n+\t.cfi_escape 0x16,29,1,0x6d;\t\t\t\t\t\\\n+\tmove\t$18,$31;\t\t\t\t\t\t\\\n+\t.cfi_register 31,18;\t\t\t\t\t\t\\\n+\tSTUB_ARGS_##CODE;\t\t\t\t\t\t\\\n+\t.set\tnoreorder;\t\t\t\t\t\t\\\n+\tjalr\t$2;\t\t\t\t\t\t\t\\\n+\tmove\t$25,$2;\t\t\t\t\t\t\t\\\n+\t.set\treorder;\t\t\t\t\t\t\\\n+\tMOVE_##MODE##_RET (f, $18);\t\t\t\t\t\\\n+\t.cfi_endproc;\t\t\t\t\t\t\t\\\n \tENDFN (NAME)\n \n /* First, instantiate the single-float set.  */"}]}