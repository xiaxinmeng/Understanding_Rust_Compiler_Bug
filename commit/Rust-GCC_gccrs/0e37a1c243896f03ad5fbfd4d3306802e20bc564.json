{"sha": "0e37a1c243896f03ad5fbfd4d3306802e20bc564", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MGUzN2ExYzI0Mzg5NmYwM2FkNWZiZmQ0ZDMzMDY4MDJlMjBiYzU2NA==", "commit": {"author": {"name": "Ira Rosen", "email": "irar@il.ibm.com", "date": "2008-04-24T09:21:55Z"}, "committer": {"name": "Ira Rosen", "email": "irar@gcc.gnu.org", "date": "2008-04-24T09:21:55Z"}, "message": "re PR target/35982 (ICE while building mplayer on ppc with -O3 -ffast-math -mcpu=970)\n\n\tPR tree-optimization/35982\n\t* tree-vect-analyze.c (vect_check_interleaving): Check that the\n\tinterleaved data-refs are of the same type.\n\nFrom-SVN: r134624", "tree": {"sha": "6da8818892868ea6e31da744a2b72643dcd5eb34", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6da8818892868ea6e31da744a2b72643dcd5eb34"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0e37a1c243896f03ad5fbfd4d3306802e20bc564", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0e37a1c243896f03ad5fbfd4d3306802e20bc564", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0e37a1c243896f03ad5fbfd4d3306802e20bc564", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0e37a1c243896f03ad5fbfd4d3306802e20bc564/comments", "author": {"login": "irar2", "id": 16818592, "node_id": "MDQ6VXNlcjE2ODE4NTky", "avatar_url": "https://avatars.githubusercontent.com/u/16818592?v=4", "gravatar_id": "", "url": "https://api.github.com/users/irar2", "html_url": "https://github.com/irar2", "followers_url": "https://api.github.com/users/irar2/followers", "following_url": "https://api.github.com/users/irar2/following{/other_user}", "gists_url": "https://api.github.com/users/irar2/gists{/gist_id}", "starred_url": "https://api.github.com/users/irar2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/irar2/subscriptions", "organizations_url": "https://api.github.com/users/irar2/orgs", "repos_url": "https://api.github.com/users/irar2/repos", "events_url": "https://api.github.com/users/irar2/events{/privacy}", "received_events_url": "https://api.github.com/users/irar2/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "f9f9640f8464328726ca641a942366145504a7bd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f9f9640f8464328726ca641a942366145504a7bd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f9f9640f8464328726ca641a942366145504a7bd"}], "stats": {"total": 40, "additions": 39, "deletions": 1}, "files": [{"sha": "b567b495cdc68abb6b4cb9be087f558f29fb13b2", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0e37a1c243896f03ad5fbfd4d3306802e20bc564/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0e37a1c243896f03ad5fbfd4d3306802e20bc564/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=0e37a1c243896f03ad5fbfd4d3306802e20bc564", "patch": "@@ -1,3 +1,9 @@\n+2008-04-24  Ira Rosen  <irar@il.ibm.com>\n+\n+\tPR tree-optimization/35982\n+\t* tree-vect-analyze.c (vect_check_interleaving): Check that the\n+\tinterleaved data-refs are of the same type.\n+\n 2008-04-24  Danny Smith  <dannysmith@users.net>\n \n \t* c-format.c (check_format_info_main): Use strncmp rather than a magic prefix"}, {"sha": "187c8a9120241d260c21632a45a7af6638a0d2ff", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0e37a1c243896f03ad5fbfd4d3306802e20bc564/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0e37a1c243896f03ad5fbfd4d3306802e20bc564/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=0e37a1c243896f03ad5fbfd4d3306802e20bc564", "patch": "@@ -1,3 +1,8 @@\n+2008-04-24  Ira Rosen  <irar@il.ibm.com>\n+\n+\tPR tree-optimization/35982\n+\t* gcc.dg/vect/fast-math-pr35982.c: New.\n+\n 2008-04-24  Danny Smith  <dannysmith@users.net>\n \n \t* gcc.dg/format/ms-warnI64-1.c: New file."}, {"sha": "d21c61dd93409a20c1f2b5049a6b3bcfccc03616", "filename": "gcc/testsuite/gcc.dg/vect/fast-math-pr35982.c", "status": "added", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0e37a1c243896f03ad5fbfd4d3306802e20bc564/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Ffast-math-pr35982.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0e37a1c243896f03ad5fbfd4d3306802e20bc564/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Ffast-math-pr35982.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Ffast-math-pr35982.c?ref=0e37a1c243896f03ad5fbfd4d3306802e20bc564", "patch": "@@ -0,0 +1,25 @@\n+/* { dg-do compile } */\n+/* { dg-require-effective-target vect_float } */\n+/* { dg-require-effective-target vect_int } */\n+\n+struct mem \n+{\n+  float avg;\n+  int len;\n+};\n+\n+float method2_int16 (struct mem *mem)\n+{\n+  int i;\n+  float avg;\n+\n+  for (i = 0; i < 100; ++i)\n+     avg += mem[i].avg * (float) mem[i].len;\n+\n+  return avg;\n+}\n+\n+/* { dg-final { scan-tree-dump-times \"vectorized 1 loops\" 1 \"vect\" { target vect_extract_even_odd  } } } */\n+/* { dg-final { scan-tree-dump-times \"vectorized 0 loops\" 1 \"vect\" { xfail vect_extract_even_odd  } } } */\n+/* { dg-final { cleanup-tree-dump \"vect\" } } */\n+"}, {"sha": "26d8799198d206df9222646364adaf6a6dd01a02", "filename": "gcc/tree-vect-analyze.c", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0e37a1c243896f03ad5fbfd4d3306802e20bc564/gcc%2Ftree-vect-analyze.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0e37a1c243896f03ad5fbfd4d3306802e20bc564/gcc%2Ftree-vect-analyze.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vect-analyze.c?ref=0e37a1c243896f03ad5fbfd4d3306802e20bc564", "patch": "@@ -1060,7 +1060,9 @@ vect_check_interleaving (struct data_reference *dra,\n   type_size_b = TREE_INT_CST_LOW (TYPE_SIZE_UNIT (TREE_TYPE (DR_REF (drb))));\n \n   if (type_size_a != type_size_b\n-      || tree_int_cst_compare (DR_STEP (dra), DR_STEP (drb)))\n+      || tree_int_cst_compare (DR_STEP (dra), DR_STEP (drb))\n+      || !types_compatible_p (TREE_TYPE (DR_REF (dra)), \n+                              TREE_TYPE (DR_REF (drb))))\n     return;\n \n   init_a = TREE_INT_CST_LOW (DR_INIT (dra));"}]}