{"sha": "76896993c25ad2143fbb0a1d7fbfcbdea30e41f0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzY4OTY5OTNjMjVhZDIxNDNmYmIwYTFkN2ZiZmNiZGVhMzBlNDFmMA==", "commit": {"author": {"name": "Thomas Koenig", "email": "tkoenig@gcc.gnu.org", "date": "2007-09-13T19:02:31Z"}, "committer": {"name": "Thomas Koenig", "email": "tkoenig@gcc.gnu.org", "date": "2007-09-13T19:02:31Z"}, "message": "iresolve.c (resolve_mask_arg): If a mask is an array expression, convert it to kind=1.\n\n2007-09-13  Thomas Koenig  <tkoenig@gcc.gnu.org>\n\n\t* iresolve.c (resolve_mask_arg): If a mask is an array\n\texpression, convert it to kind=1.\n\nFrom-SVN: r128477", "tree": {"sha": "47a7bb8af7e96a7c7a67312e8a96d2f04d8ce3b7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/47a7bb8af7e96a7c7a67312e8a96d2f04d8ce3b7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/76896993c25ad2143fbb0a1d7fbfcbdea30e41f0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/76896993c25ad2143fbb0a1d7fbfcbdea30e41f0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/76896993c25ad2143fbb0a1d7fbfcbdea30e41f0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/76896993c25ad2143fbb0a1d7fbfcbdea30e41f0/comments", "author": null, "committer": null, "parents": [{"sha": "1d7d5ac4e8c62c26923e0a747afe5df3f5d13011", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1d7d5ac4e8c62c26923e0a747afe5df3f5d13011", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1d7d5ac4e8c62c26923e0a747afe5df3f5d13011"}], "stats": {"total": 37, "additions": 28, "deletions": 9}, "files": [{"sha": "8760abea78a4767c1820610b0e248ca653dce6dd", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/76896993c25ad2143fbb0a1d7fbfcbdea30e41f0/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/76896993c25ad2143fbb0a1d7fbfcbdea30e41f0/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=76896993c25ad2143fbb0a1d7fbfcbdea30e41f0", "patch": "@@ -1,3 +1,8 @@\n+2007-09-13  Thomas Koenig  <tkoenig@gcc.gnu.org>\n+\n+\t* iresolve.c (resolve_mask_arg): If a mask is an array\n+\texpression, convert it to kind=1.\n+\n 2007-09-13  Tobias Burnus  <burnus@net-b.de>\n \n \tPR fortran/33343"}, {"sha": "3205bebccab62ac60de7e7812742e8e71054f757", "filename": "gcc/fortran/iresolve.c", "status": "modified", "additions": 23, "deletions": 9, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/76896993c25ad2143fbb0a1d7fbfcbdea30e41f0/gcc%2Ffortran%2Firesolve.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/76896993c25ad2143fbb0a1d7fbfcbdea30e41f0/gcc%2Ffortran%2Firesolve.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Firesolve.c?ref=76896993c25ad2143fbb0a1d7fbfcbdea30e41f0", "patch": "@@ -78,18 +78,32 @@ static void\n resolve_mask_arg (gfc_expr *mask)\n {\n \n-  /* The mask can be any kind for an array.\n-     For the scalar case, coerce it to kind=4 unconditionally\n-     (because this is the only kind we have a library function\n-     for).  */\n+  gfc_typespec ts;\n \n-  if (mask->rank == 0 && mask->ts.kind != 4)\n+  if (mask->rank == 0)\n     {\n-      gfc_typespec ts;\n+      /* For the scalar case, coerce the mask to kind=4 unconditionally\n+\t (because this is the only kind we have a library function\n+\t for).  */\n \n-      ts.type = BT_LOGICAL;\n-      ts.kind = 4;\n-      gfc_convert_type (mask, &ts, 2);\n+      if (mask->ts.kind != 4)\n+\t{\n+\t  ts.type = BT_LOGICAL;\n+\t  ts.kind = 4;\n+\t  gfc_convert_type (mask, &ts, 2);\n+\t}\n+    }\n+  else\n+    {\n+      /* In the library, we access the mask with a GFC_LOGICAL_1\n+\t argument.  No need to waste memory if we are about to create\n+\t a temporary array.  */\n+      if (mask->expr_type == EXPR_OP)\n+\t{\n+\t  ts.type = BT_LOGICAL;\n+\t  ts.kind = 1;\n+\t  gfc_convert_type (mask, &ts, 2);\n+\t}\n     }\n }\n "}]}