{"sha": "43b9f499103ccebb9ce00e7c62e11da54334e63a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDNiOWY0OTkxMDNjY2ViYjljZTAwZTdjNjJlMTFkYTU0MzM0ZTYzYQ==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2016-04-04T09:30:16Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2016-04-04T09:30:16Z"}, "message": "re PR rtl-optimization/70484 (Wrong optimization with aliasing and access via char)\n\n2016-04-04  Richard Biener  <rguenther@suse.de>\n\n\tPR rtl-optimization/70484\n\t* rtl.h (canon_output_dependence): Declare.\n\t* alias.c (canon_output_dependence): New function.\n\t* dse.c (record_store): Use canon_output_dependence rather\n\tthan canon_true_dependence.\n\n\t* gcc.dg/torture/pr70484.c: New testcase.\n\nFrom-SVN: r234709", "tree": {"sha": "6684fdba1e474d2726d62599732082794132c876", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6684fdba1e474d2726d62599732082794132c876"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/43b9f499103ccebb9ce00e7c62e11da54334e63a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/43b9f499103ccebb9ce00e7c62e11da54334e63a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/43b9f499103ccebb9ce00e7c62e11da54334e63a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/43b9f499103ccebb9ce00e7c62e11da54334e63a/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "ed2a53e7ca7aafa5fea5316c7fdebdc77fb8f327", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ed2a53e7ca7aafa5fea5316c7fdebdc77fb8f327", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ed2a53e7ca7aafa5fea5316c7fdebdc77fb8f327"}], "stats": {"total": 55, "additions": 51, "deletions": 4}, "files": [{"sha": "83f3454a0eec1c5d5203378ca33da56aae82c125", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/43b9f499103ccebb9ce00e7c62e11da54334e63a/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/43b9f499103ccebb9ce00e7c62e11da54334e63a/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=43b9f499103ccebb9ce00e7c62e11da54334e63a", "patch": "@@ -1,3 +1,11 @@\n+2016-04-04  Richard Biener  <rguenther@suse.de>\n+\n+\tPR rtl-optimization/70484\n+\t* rtl.h (canon_output_dependence): Declare.\n+\t* alias.c (canon_output_dependence): New function.\n+\t* dse.c (record_store): Use canon_output_dependence rather\n+\tthan canon_true_dependence.\n+\n 2016-03-30  Jan Hubicka  <hubicka@ucw.cz>\n \n \tPR ipa/68881"}, {"sha": "a0e25dcce06c4f64fa69ff030a42e319b5270890", "filename": "gcc/alias.c", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/43b9f499103ccebb9ce00e7c62e11da54334e63a/gcc%2Falias.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/43b9f499103ccebb9ce00e7c62e11da54334e63a/gcc%2Falias.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Falias.c?ref=43b9f499103ccebb9ce00e7c62e11da54334e63a", "patch": "@@ -3057,6 +3057,20 @@ output_dependence (const_rtx mem, const_rtx x)\n \t\t\t     /*mem_canonicalized=*/false,\n \t\t\t     /*x_canonicalized*/false, /*writep=*/true);\n }\n+\n+/* Likewise, but we already have a canonicalized MEM, and X_ADDR for X.\n+   Also, consider X in X_MODE (which might be from an enclosing\n+   STRICT_LOW_PART / ZERO_EXTRACT).\n+   If MEM_CANONICALIZED is true, MEM is canonicalized.  */\n+\n+int\n+canon_output_dependence (const_rtx mem, bool mem_canonicalized,\n+\t\t\t const_rtx x, machine_mode x_mode, rtx x_addr)\n+{\n+  return write_dependence_p (mem, x, x_mode, x_addr,\n+\t\t\t     mem_canonicalized, /*x_canonicalized=*/true,\n+\t\t\t     /*writep=*/true);\n+}\n \f\n \n "}, {"sha": "b8da9268d34dfd05bc4f4927394ad90167124c26", "filename": "gcc/dse.c", "status": "modified", "additions": 3, "deletions": 4, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/43b9f499103ccebb9ce00e7c62e11da54334e63a/gcc%2Fdse.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/43b9f499103ccebb9ce00e7c62e11da54334e63a/gcc%2Fdse.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdse.c?ref=43b9f499103ccebb9ce00e7c62e11da54334e63a", "patch": "@@ -1609,10 +1609,9 @@ record_store (rtx body, bb_info_t bb_info)\n \t   the value of store_info.  If it is, set the rhs to NULL to\n \t   keep it from being used to remove a load.  */\n \t{\n-\t  if (canon_true_dependence (s_info->mem,\n-\t\t\t\t     GET_MODE (s_info->mem),\n-\t\t\t\t     s_info->mem_addr,\n-\t\t\t\t     mem, mem_addr))\n+\t  if (canon_output_dependence (s_info->mem, true,\n+\t\t\t\t       mem, GET_MODE (mem),\n+\t\t\t\t       mem_addr))\n \t    {\n \t      s_info->rhs = NULL;\n \t      s_info->const_rhs = NULL;"}, {"sha": "79916ad844a2e9b3a0563d14f7447ceec62b7c51", "filename": "gcc/rtl.h", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/43b9f499103ccebb9ce00e7c62e11da54334e63a/gcc%2Frtl.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/43b9f499103ccebb9ce00e7c62e11da54334e63a/gcc%2Frtl.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frtl.h?ref=43b9f499103ccebb9ce00e7c62e11da54334e63a", "patch": "@@ -3652,6 +3652,8 @@ extern int anti_dependence (const_rtx, const_rtx);\n extern int canon_anti_dependence (const_rtx, bool,\n \t\t\t\t  const_rtx, machine_mode, rtx);\n extern int output_dependence (const_rtx, const_rtx);\n+extern int canon_output_dependence (const_rtx, bool,\n+\t\t\t\t    const_rtx, machine_mode, rtx);\n extern int may_alias_p (const_rtx, const_rtx);\n extern void init_alias_target (void);\n extern void init_alias_analysis (void);"}, {"sha": "43bad0faaa21337d82cd75e044e6f8fdfcad8eec", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/43b9f499103ccebb9ce00e7c62e11da54334e63a/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/43b9f499103ccebb9ce00e7c62e11da54334e63a/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=43b9f499103ccebb9ce00e7c62e11da54334e63a", "patch": "@@ -1,3 +1,8 @@\n+2016-04-04  Richard Biener  <rguenther@suse.de>\n+\n+\tPR rtl-optimization/70484\n+\t* gcc.dg/torture/pr70484.c: New testcase.\n+\n 2016-04-04  Marek Polacek  <polacek@redhat.com>\n \n \tPR c/70307"}, {"sha": "7604c654fbe57fbd74728fc7f172278628f679b7", "filename": "gcc/testsuite/gcc.dg/torture/pr70484.c", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/43b9f499103ccebb9ce00e7c62e11da54334e63a/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr70484.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/43b9f499103ccebb9ce00e7c62e11da54334e63a/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr70484.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr70484.c?ref=43b9f499103ccebb9ce00e7c62e11da54334e63a", "patch": "@@ -0,0 +1,19 @@\n+/* { dg-do run } */\n+\n+extern void abort (void);\n+\n+int __attribute__((noinline,noclone))\n+f(int *pi, long *pl)\n+{\n+  *pi = 1;\n+  *pl = 0;\n+  return *(char *)pi;\n+}\n+\n+int main()\n+{\n+  union { long l; int i; } a;\n+  if (f (&a.i, &a.l) != 0)\n+    abort ();\n+  return 0;\n+}"}]}