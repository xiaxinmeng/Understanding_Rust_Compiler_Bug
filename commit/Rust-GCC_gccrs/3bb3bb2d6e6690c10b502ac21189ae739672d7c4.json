{"sha": "3bb3bb2d6e6690c10b502ac21189ae739672d7c4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2JiM2JiMmQ2ZTY2OTBjMTBiNTAyYWMyMTE4OWFlNzM5NjcyZDdjNA==", "commit": {"author": {"name": "Richard Guenther", "email": "rguenther@suse.de", "date": "2008-04-15T15:54:26Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2008-04-15T15:54:26Z"}, "message": "tree-ssa-propagate.c (substitute_and_fold): Substitute statements in a basic-block with a backward walk.\n\n2008-04-15  Richard Guenther  <rguenther@suse.de>\n\n\t* tree-ssa-propagate.c (substitute_and_fold): Substitute\n\tstatements in a basic-block with a backward walk.  Do not\n\tsubstitute into dead statements but instead remove those.\n\n\t* gcc.dg/fold-compare-2.c: Adjust testcase.\n\t* gcc.dg/tree-ssa/pr21086.c: Likewise.\n\nFrom-SVN: r134322", "tree": {"sha": "d139306143b692bac93d3adfef5d5c0c64748535", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d139306143b692bac93d3adfef5d5c0c64748535"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3bb3bb2d6e6690c10b502ac21189ae739672d7c4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3bb3bb2d6e6690c10b502ac21189ae739672d7c4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3bb3bb2d6e6690c10b502ac21189ae739672d7c4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3bb3bb2d6e6690c10b502ac21189ae739672d7c4/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "d9338cf00c16a6fe2e9fdc702ab5f0fcfd1b6abf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d9338cf00c16a6fe2e9fdc702ab5f0fcfd1b6abf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d9338cf00c16a6fe2e9fdc702ab5f0fcfd1b6abf"}], "stats": {"total": 52, "additions": 47, "deletions": 5}, "files": [{"sha": "9733411e8431eb854607a9db1c70cc011f0d60f1", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3bb3bb2d6e6690c10b502ac21189ae739672d7c4/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3bb3bb2d6e6690c10b502ac21189ae739672d7c4/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=3bb3bb2d6e6690c10b502ac21189ae739672d7c4", "patch": "@@ -1,3 +1,9 @@\n+2008-04-15  Richard Guenther  <rguenther@suse.de>\n+\n+\t* tree-ssa-propagate.c (substitute_and_fold): Substitute\n+\tstatements in a basic-block with a backward walk.  Do not\n+\tsubstitute into dead statements but instead remove those.\n+\n 2008-04-15  Richard Guenther  <rguenther@suse.de>\n \n \t* params.def (PARAM_MAX_FIELDS_FOR_FIELD_SENSITIVE): Set default"}, {"sha": "64e45319fc2d59b50f3f3db7d68074bcd6fc8484", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3bb3bb2d6e6690c10b502ac21189ae739672d7c4/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3bb3bb2d6e6690c10b502ac21189ae739672d7c4/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=3bb3bb2d6e6690c10b502ac21189ae739672d7c4", "patch": "@@ -1,3 +1,8 @@\n+2008-04-15  Richard Guenther  <rguenther@suse.de>\n+\n+\t* gcc.dg/fold-compare-2.c: Adjust testcase.\n+\t* gcc.dg/tree-ssa/pr21086.c: Likewise.\n+\n 2008-04-15  Richard Guenther  <rguenther@suse.de>\n \n \t* gcc.dg/tree-ssa/salias-1.c: Remove."}, {"sha": "6674c4dad6e32b9add31076854c8b18214f70eb4", "filename": "gcc/testsuite/gcc.dg/fold-compare-2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3bb3bb2d6e6690c10b502ac21189ae739672d7c4/gcc%2Ftestsuite%2Fgcc.dg%2Ffold-compare-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3bb3bb2d6e6690c10b502ac21189ae739672d7c4/gcc%2Ftestsuite%2Fgcc.dg%2Ffold-compare-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ffold-compare-2.c?ref=3bb3bb2d6e6690c10b502ac21189ae739672d7c4", "patch": "@@ -15,6 +15,6 @@ main(void)\n   return 0;\n }\n \n-/* { dg-final { scan-tree-dump-times \"Removing basic block\" 1 \"vrp1\" } } */\n+/* { dg-final { scan-tree-dump-times \"Removing basic block\" 2 \"vrp1\" } } */\n /* { dg-final { cleanup-tree-dump \"vrp\\[1-2\\]\" } } */\n "}, {"sha": "ffaccefe94c88c0136a36159a85eb8e0d956f278", "filename": "gcc/testsuite/gcc.dg/tree-ssa/pr21086.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3bb3bb2d6e6690c10b502ac21189ae739672d7c4/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr21086.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3bb3bb2d6e6690c10b502ac21189ae739672d7c4/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr21086.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr21086.c?ref=3bb3bb2d6e6690c10b502ac21189ae739672d7c4", "patch": "@@ -15,5 +15,6 @@ foo (int *p)\n     return 0;\n }\n \n-/* { dg-final { scan-tree-dump-times \"Folding predicate \" 2 \"vrp1\" } } */\n+/* { dg-final { scan-tree-dump-times \"Folding predicate \" 1 \"vrp1\" } } */\n+/* { dg-final { scan-tree-dump-not \"b_. =\" \"vrp1\" } } */\n /* { dg-final { cleanup-tree-dump \"vrp1\" } } */"}, {"sha": "c37cfa53545b07a2523c9c5ff2f8f4a6c29d8c5b", "filename": "gcc/tree-ssa-propagate.c", "status": "modified", "additions": 33, "deletions": 3, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3bb3bb2d6e6690c10b502ac21189ae739672d7c4/gcc%2Ftree-ssa-propagate.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3bb3bb2d6e6690c10b502ac21189ae739672d7c4/gcc%2Ftree-ssa-propagate.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-propagate.c?ref=3bb3bb2d6e6690c10b502ac21189ae739672d7c4", "patch": "@@ -1211,18 +1211,46 @@ substitute_and_fold (prop_value_t *prop_value, bool use_ranges_p)\n \tfor (phi = phi_nodes (bb); phi; phi = PHI_CHAIN (phi))\n \t  replace_phi_args_in (phi, prop_value);\n \n-      for (i = bsi_start (bb); !bsi_end_p (i); bsi_next (&i))\n+      /* Propagate known values into stmts.  Do a backward walk to expose\n+\t more trivially deletable stmts.  */\n+      for (i = bsi_last (bb); !bsi_end_p (i);)\n \t{\n           bool replaced_address, did_replace;\n-\t  tree prev_stmt = NULL;\n+\t  tree call, prev_stmt = NULL;\n \t  tree stmt = bsi_stmt (i);\n \n \t  /* Ignore ASSERT_EXPRs.  They are used by VRP to generate\n \t     range information for names and they are discarded\n \t     afterwards.  */\n \t  if (TREE_CODE (stmt) == GIMPLE_MODIFY_STMT\n \t      && TREE_CODE (GIMPLE_STMT_OPERAND (stmt, 1)) == ASSERT_EXPR)\n-\t    continue;\n+\t    {\n+\t      bsi_prev (&i);\n+\t      continue;\n+\t    }\n+\n+\t  /* No point propagating into a stmt whose result is not used,\n+\t     but instead we might be able to remove a trivially dead stmt.  */\n+\t  if (TREE_CODE (stmt) == GIMPLE_MODIFY_STMT\n+\t      && TREE_CODE (GIMPLE_STMT_OPERAND (stmt, 0)) == SSA_NAME\n+\t      && !stmt_ann (stmt)->has_volatile_ops\n+\t      && has_zero_uses (GIMPLE_STMT_OPERAND (stmt, 0))\n+\t      && !tree_could_throw_p (stmt)\n+\t      && (!(call = get_call_expr_in (stmt))\n+\t\t  || !TREE_SIDE_EFFECTS (call)))\n+\t    {\n+\t      if (dump_file && dump_flags & TDF_DETAILS)\n+\t\t{\n+\t\t  fprintf (dump_file, \"Removing dead stmt \");\n+\t\t  print_generic_expr (dump_file, stmt, 0);\n+\t\t  fprintf (dump_file, \"\\n\");\n+\t\t}\n+\t      bsi_remove (&i, true);\n+\t      release_defs (stmt);\n+\t      if (!bsi_end_p (i))\n+\t        bsi_prev (&i);\n+\t      continue;\n+\t    }\n \n \t  /* Record the state of the statement before replacements.  */\n \t  push_stmt_changes (bsi_stmt_ptr (i));\n@@ -1298,6 +1326,8 @@ substitute_and_fold (prop_value_t *prop_value, bool use_ranges_p)\n \t     statement.  */\n \t  if (use_ranges_p)\n \t    simplify_stmt_using_ranges (stmt);\n+\n+\t  bsi_prev (&i);\n \t}\n     }\n "}]}