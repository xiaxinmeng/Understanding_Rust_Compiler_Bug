{"sha": "6f6fafc9eff46ac56d9279e86676693f28c088b0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmY2ZmFmYzllZmY0NmFjNTZkOTI3OWU4NjY3NjY5M2YyOGMwODhiMA==", "commit": {"author": {"name": "Tilo Schwarz", "email": "tilo@tilo-schwarz.de", "date": "2013-03-25T20:11:20Z"}, "committer": {"name": "Tilo Schwarz", "email": "tiloschwarz@gcc.gnu.org", "date": "2013-03-25T20:11:20Z"}, "message": "re PR fortran/52512 (Cannot match namelist object name)\n\n2013-03-25  Tilo Schwarz  <tilo@tilo-schwarz.de>\n\n        PR libfortran/52512\n        * io/list_read.c (nml_parse_qualifier): To check for a derived type\n        don't use the namelist head element type but the current element type.\n        (nml_get_obj_data): Add current namelist element type to\n        nml_parse_qualifier call.\n\n2013-03-25  Tilo Schwarz  <tilo@tilo-schwarz.de>\n\n        PR libfortran/52512\n        * gfortran.dg/namelist_79.f90: New.\n\nFrom-SVN: r197061", "tree": {"sha": "bad93b9648ef2b28d85f31cf7a6dd10c53a76fe9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/bad93b9648ef2b28d85f31cf7a6dd10c53a76fe9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6f6fafc9eff46ac56d9279e86676693f28c088b0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6f6fafc9eff46ac56d9279e86676693f28c088b0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6f6fafc9eff46ac56d9279e86676693f28c088b0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6f6fafc9eff46ac56d9279e86676693f28c088b0/comments", "author": {"login": "tischwa", "id": 2934304, "node_id": "MDQ6VXNlcjI5MzQzMDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/2934304?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tischwa", "html_url": "https://github.com/tischwa", "followers_url": "https://api.github.com/users/tischwa/followers", "following_url": "https://api.github.com/users/tischwa/following{/other_user}", "gists_url": "https://api.github.com/users/tischwa/gists{/gist_id}", "starred_url": "https://api.github.com/users/tischwa/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tischwa/subscriptions", "organizations_url": "https://api.github.com/users/tischwa/orgs", "repos_url": "https://api.github.com/users/tischwa/repos", "events_url": "https://api.github.com/users/tischwa/events{/privacy}", "received_events_url": "https://api.github.com/users/tischwa/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "39e45653572c760e4d12d08d859615a1da9b1d81", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/39e45653572c760e4d12d08d859615a1da9b1d81", "html_url": "https://github.com/Rust-GCC/gccrs/commit/39e45653572c760e4d12d08d859615a1da9b1d81"}], "stats": {"total": 68, "additions": 62, "deletions": 6}, "files": [{"sha": "aa2274fc701dbffcf9b100298abad291516cb649", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f6fafc9eff46ac56d9279e86676693f28c088b0/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f6fafc9eff46ac56d9279e86676693f28c088b0/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=6f6fafc9eff46ac56d9279e86676693f28c088b0", "patch": "@@ -1,3 +1,8 @@\n+2013-03-25  Tilo Schwarz  <tilo@tilo-schwarz.de>\n+\n+\tPR libfortran/52512\n+\t* gfortran.dg/namelist_79.f90: New.\n+\n 2013-03-25  Martin Jambor  <mjambor@suse.cz>\n \n \t* gcc.dg/ipa/ipcp-agg-9.c: New test."}, {"sha": "2b2ef310d093763f8c7ad8e854cb620f6292073e", "filename": "gcc/testsuite/gfortran.dg/namelist_79.f90", "status": "added", "additions": 43, "deletions": 0, "changes": 43, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f6fafc9eff46ac56d9279e86676693f28c088b0/gcc%2Ftestsuite%2Fgfortran.dg%2Fnamelist_79.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f6fafc9eff46ac56d9279e86676693f28c088b0/gcc%2Ftestsuite%2Fgfortran.dg%2Fnamelist_79.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fnamelist_79.f90?ref=6f6fafc9eff46ac56d9279e86676693f28c088b0", "patch": "@@ -0,0 +1,43 @@\n+! { dg-do run }\n+! PR libfortran/52512 - Cannot match namelist object name\n+! Test case derived from PR.\n+\n+program testje\n+\n+    implicit none\n+\n+    integer :: getal, jn\n+    type ptracer\n+        character(len = 8)  :: sname  !: short name\n+        logical             :: lini   !: read in a file or not\n+    end type ptracer\n+    type(ptracer) , dimension(3) :: tracer\n+    namelist/namtoptrc/  getal,tracer\n+\n+    ! standard values\n+    getal = 9999\n+    do jn = 1, 3\n+        tracer(jn)%sname = 'default_name'\n+        tracer(jn)%lini = .false.\n+    end do\n+\n+    open (10, status='scratch')\n+    write (10, '(a)') \"&namtoptrc\"\n+    write (10, '(a)') \"   getal = 7\"\n+    write (10, '(a)') \"   tracer(1) = 'DIC     ', .true.\"\n+    write (10, '(a)') \"   tracer(2) = 'Alkalini', .true.\"\n+    write (10, '(a)') \"   tracer(3) = 'O2      ', .true.\"\n+    write (10, '(a)') \"/\"\n+    rewind(10)\n+    read(10, nml=namtoptrc)\n+    close (10)\n+\n+    if (getal /= 7) call abort\n+    if (tracer(1)%sname /= 'DIC     ') call abort\n+    if (tracer(2)%sname /= 'Alkalini') call abort\n+    if (tracer(3)%sname /= 'O2      ') call abort\n+    if (.not. tracer(1)%lini) call abort\n+    if (.not. tracer(2)%lini) call abort\n+    if (.not. tracer(3)%lini) call abort\n+\n+end program testje"}, {"sha": "61c9fd10c636d3ab4732710d18b86c8347e73dfd", "filename": "libgfortran/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f6fafc9eff46ac56d9279e86676693f28c088b0/libgfortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f6fafc9eff46ac56d9279e86676693f28c088b0/libgfortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2FChangeLog?ref=6f6fafc9eff46ac56d9279e86676693f28c088b0", "patch": "@@ -1,3 +1,11 @@\n+2013-03-25  Tilo Schwarz  <tilo@tilo-schwarz.de>\n+\n+\tPR libfortran/52512\n+\t* io/list_read.c (nml_parse_qualifier): To check for a derived type\n+\tdon't use the namelist head element type but the current element type.\n+\t(nml_get_obj_data): Add current namelist element type to\n+\tnml_parse_qualifier call.\n+\n 2013-03-24  Tobias Burnus  <burnus@net-b.de>\n \n \tPR fortran/56696"}, {"sha": "ec4557002687607ab3a5568db55b342854118fee", "filename": "libgfortran/io/list_read.c", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f6fafc9eff46ac56d9279e86676693f28c088b0/libgfortran%2Fio%2Flist_read.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f6fafc9eff46ac56d9279e86676693f28c088b0/libgfortran%2Fio%2Flist_read.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fio%2Flist_read.c?ref=6f6fafc9eff46ac56d9279e86676693f28c088b0", "patch": "@@ -2053,8 +2053,8 @@ void namelist_read (st_parameter_dt *dtp)\n \n static bool\n nml_parse_qualifier (st_parameter_dt *dtp, descriptor_dimension *ad,\n-\t\t     array_loop_spec *ls, int rank, char *parse_err_msg,\n-\t\t     size_t parse_err_msg_size,\n+\t\t     array_loop_spec *ls, int rank, bt nml_elem_type,\n+\t\t     char *parse_err_msg, size_t parse_err_msg_size,\n \t\t     int *parsed_rank)\n {\n   int dim;\n@@ -2229,7 +2229,7 @@ nml_parse_qualifier (st_parameter_dt *dtp, descriptor_dimension *ad,\n \t\t      do not allow excess data to be processed.  */\n \t\t  if (is_array_section == 1\n \t\t      || !(compile_options.allow_std & GFC_STD_GNU)\n-\t\t      || dtp->u.p.ionml->type == BT_DERIVED)\n+\t\t      || nml_elem_type == BT_DERIVED)\n \t\t    ls[dim].end = ls[dim].start;\n \t\t  else\n \t\t    dtp->u.p.expanded_read = 1;\n@@ -2866,7 +2866,7 @@ nml_get_obj_data (st_parameter_dt *dtp, namelist_info **pprev_nl,\n     {\n       parsed_rank = 0;\n       if (!nml_parse_qualifier (dtp, nl->dim, nl->ls, nl->var_rank,\n-\t\t\t       nml_err_msg, nml_err_msg_size, \n+\t\t\t       nl->type, nml_err_msg, nml_err_msg_size,\n \t\t\t       &parsed_rank))\n \t{\n \t  char *nml_err_msg_end = strchr (nml_err_msg, '\\0');\n@@ -2923,8 +2923,8 @@ nml_get_obj_data (st_parameter_dt *dtp, namelist_info **pprev_nl,\n       descriptor_dimension chd[1] = { {1, clow, nl->string_length} };\n       array_loop_spec ind[1] = { {1, clow, nl->string_length, 1} };\n \n-      if (!nml_parse_qualifier (dtp, chd, ind, -1, nml_err_msg, \n-\t\t\t\tnml_err_msg_size, &parsed_rank))\n+      if (!nml_parse_qualifier (dtp, chd, ind, -1, nl->type,\n+\t\t\t\tnml_err_msg, nml_err_msg_size, &parsed_rank))\n \t{\n \t  char *nml_err_msg_end = strchr (nml_err_msg, '\\0');\n \t  snprintf (nml_err_msg_end,"}]}