{"sha": "c7e2dba59a4b35a09c955a21194a6bcd996990a5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzdlMmRiYTU5YTRiMzVhMDljOTU1YTIxMTk0YTZiY2Q5OTY5OTBhNQ==", "commit": {"author": {"name": "Benjamin Kosnik", "email": "bkoz@redhat.com", "date": "2001-10-31T20:05:33Z"}, "committer": {"name": "Benjamin Kosnik", "email": "bkoz@gcc.gnu.org", "date": "2001-10-31T20:05:33Z"}, "message": "codecvt.h: Add virtual member function declarations.\n\n\n2001-10-31  Benjamin Kosnik  <bkoz@redhat.com>\n\n\tlibstdc++/4749\n\t* include/bits/codecvt.h: Add virtual member function declarations.\n\t* src/codecvt.cc: Tweaks.\n\t* testsuite/22_locale/codecvt.cc: Test compilation only,\n\tnon-required facets not required to have linkage.\n\nFrom-SVN: r46685", "tree": {"sha": "b2fd33128877b396f1f31a64a235059dd6fe7664", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b2fd33128877b396f1f31a64a235059dd6fe7664"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c7e2dba59a4b35a09c955a21194a6bcd996990a5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c7e2dba59a4b35a09c955a21194a6bcd996990a5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c7e2dba59a4b35a09c955a21194a6bcd996990a5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c7e2dba59a4b35a09c955a21194a6bcd996990a5/comments", "author": null, "committer": null, "parents": [{"sha": "78b14aa62cc8ad119ef9116300b1337d47d41774", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/78b14aa62cc8ad119ef9116300b1337d47d41774", "html_url": "https://github.com/Rust-GCC/gccrs/commit/78b14aa62cc8ad119ef9116300b1337d47d41774"}], "stats": {"total": 61, "additions": 47, "deletions": 14}, "files": [{"sha": "bf6780e8de227fcf5a52bed40a8cca237950162b", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c7e2dba59a4b35a09c955a21194a6bcd996990a5/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c7e2dba59a4b35a09c955a21194a6bcd996990a5/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=c7e2dba59a4b35a09c955a21194a6bcd996990a5", "patch": "@@ -1,3 +1,11 @@\n+2001-10-31  Benjamin Kosnik  <bkoz@redhat.com>\n+\n+\tlibstdc++/4749\n+\t* include/bits/codecvt.h: Add virtual member function declarations.\n+\t* src/codecvt.cc: Tweaks.\n+\t* testsuite/22_locale/codecvt.cc: Test compilation only,\n+\tnon-required facets not required to have linkage.\n+\t\n 2001-10-31  Edward E. Meyer  <edward.e.meyer@boeing.com>\n \n \tlibstdc++/4622"}, {"sha": "441f40c9fe38b0698560dc494769c76a95049512", "filename": "libstdc++-v3/include/bits/codecvt.h", "status": "modified", "additions": 29, "deletions": 4, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c7e2dba59a4b35a09c955a21194a6bcd996990a5/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fcodecvt.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c7e2dba59a4b35a09c955a21194a6bcd996990a5/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fcodecvt.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fcodecvt.h?ref=c7e2dba59a4b35a09c955a21194a6bcd996990a5", "patch": "@@ -171,6 +171,35 @@\n     protected:\n       virtual \n       ~codecvt() { }\n+\n+      virtual result\n+      do_out(state_type& __state, const intern_type* __from, \n+\t     const intern_type* __from_end, const intern_type*& __from_next,\n+\t     extern_type* __to, extern_type* __to_end,\n+\t     extern_type*& __to_next) const;\n+\n+      virtual result\n+      do_unshift(state_type& __state, extern_type* __to, \n+\t\t extern_type* __to_end, extern_type*& __to_next) const;\n+      \n+      virtual result\n+      do_in(state_type& __state, const extern_type* __from, \n+\t    const extern_type* __from_end, const extern_type*& __from_next, \n+\t    intern_type* __to, intern_type* __to_end, \n+\t    intern_type*& __to_next) const;\n+      \n+      virtual int \n+      do_encoding() const throw();\n+\n+      virtual bool \n+      do_always_noconv() const throw();\n+\n+      virtual int \n+      do_length(const state_type&, const extern_type* __from, \n+\t\tconst extern_type* __end, size_t __max) const;\n+\n+      virtual int \n+      do_max_length() const throw();\n     };\n \n   template<typename _InternT, typename _ExternT, typename _StateT>\n@@ -302,7 +331,3 @@\n #endif\n \n #endif // _CPP_BITS_CODECVT_H\n-\n-\n-\n-"}, {"sha": "5e7cdb69bdbcb35e725201ef52ed72a6841f8d0d", "filename": "libstdc++-v3/src/codecvt.cc", "status": "modified", "additions": 8, "deletions": 10, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c7e2dba59a4b35a09c955a21194a6bcd996990a5/libstdc%2B%2B-v3%2Fsrc%2Fcodecvt.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c7e2dba59a4b35a09c955a21194a6bcd996990a5/libstdc%2B%2B-v3%2Fsrc%2Fcodecvt.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fsrc%2Fcodecvt.cc?ref=c7e2dba59a4b35a09c955a21194a6bcd996990a5", "patch": "@@ -46,7 +46,7 @@ namespace std\n   \n   codecvt_base::result\n   codecvt<char, char, mbstate_t>::\n-  do_out(state_type& /*__state*/, const intern_type* __from, \n+  do_out(state_type&, const intern_type* __from, \n \t const intern_type* __from_end, const intern_type*& __from_next,\n \t extern_type* __to, extern_type* __to_end, \n \t extern_type*& __to_next) const\n@@ -60,16 +60,16 @@ namespace std\n   \n   codecvt_base::result\n   codecvt<char, char, mbstate_t>::\n-  do_unshift(state_type& /*__state*/, extern_type* __to,\n-             extern_type* /*__to_end*/, extern_type*& __to_next) const\n+  do_unshift(state_type&, extern_type* __to,\n+             extern_type*, extern_type*& __to_next) const\n   { \n     __to_next = __to; \n     return noconv; \n   }\n   \n   codecvt_base::result\n   codecvt<char, char, mbstate_t>::\n-  do_in(state_type& /*__state*/, const extern_type* __from, \n+  do_in(state_type&, const extern_type* __from, \n \tconst extern_type* __from_end, const extern_type*& __from_next,\n \tintern_type* __to, intern_type* __to_end, \n \tintern_type*& __to_next) const\n@@ -93,7 +93,7 @@ namespace std\n   \n   int \n   codecvt<char, char, mbstate_t>::\n-  do_length (const state_type& /*__state*/, const extern_type* __from,\n+  do_length (const state_type&, const extern_type* __from,\n \t     const extern_type* __end, size_t __max) const\n   { return min(__max, static_cast<size_t>(__end - __from)); }\n   \n@@ -142,8 +142,8 @@ namespace std\n   \n   codecvt_base::result\n   codecvt<wchar_t, char, mbstate_t>::\n-  do_unshift(state_type& /*__state*/, extern_type* __to,\n-\t     extern_type* /*__to_end*/, extern_type*& __to_next) const\n+  do_unshift(state_type&, extern_type* __to,\n+\t     extern_type*, extern_type*& __to_next) const\n   {\n     __to_next = __to;\n     return noconv;\n@@ -190,7 +190,7 @@ namespace std\n   \n   int \n   codecvt<wchar_t, char, mbstate_t>::\n-  do_length(const state_type& /*__state*/, const extern_type* __from,\n+  do_length(const state_type&, const extern_type* __from,\n \t    const extern_type* __end, size_t __max) const\n   { return min(__max, static_cast<size_t>(__end - __from)); }\n \n@@ -200,5 +200,3 @@ namespace std\n   { return 1; }\n #endif //  _GLIBCPP_USE_WCHAR_T\n } // namespace std\n-\n-"}, {"sha": "a4670b7c9b57d506d2cee1377abf0499189cf811", "filename": "libstdc++-v3/testsuite/22_locale/codecvt.cc", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c7e2dba59a4b35a09c955a21194a6bcd996990a5/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Fcodecvt.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c7e2dba59a4b35a09c955a21194a6bcd996990a5/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Fcodecvt.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Fcodecvt.cc?ref=c7e2dba59a4b35a09c955a21194a6bcd996990a5", "patch": "@@ -20,6 +20,8 @@\n \n // 22.2.1.5  Template class codecvt\n \n+// { dg-do compile }\n+\n #include <locale>\n \n void test01()"}]}