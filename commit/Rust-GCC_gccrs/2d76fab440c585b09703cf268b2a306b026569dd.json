{"sha": "2d76fab440c585b09703cf268b2a306b026569dd", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmQ3NmZhYjQ0MGM1ODViMDk3MDNjZjI2OGIyYTMwNmIwMjY1NjlkZA==", "commit": {"author": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2018-05-18T16:14:04Z"}, "committer": {"name": "Jonathan Wakely", "email": "redi@gcc.gnu.org", "date": "2018-05-18T16:14:04Z"}, "message": "PR libstdc++/85098 add missing definitions for static constants\n\nIn C++11 and C++14 any odr-use of these constants requires a definition\nat namespace-scope.  In C++17 they are implicitly inline and so the\nnamespace-scope redeclarations are redundant (and allowing them is\ndeprecated).\n\n\tPR libstdc++/85098\n\t* include/bits/regex.h [__cplusplus < 201703L] (basic_regex::icase)\n\t(basic_regex::nosubs, basic_regex::optimize, basic_regex::collate)\n\t(basic_regex::ECMAScript, basic_regex::basic, basic_regex::extended)\n\t(basic_regex::awk, basic_regex::grep, basic_regex::egrep): Add\n\tdefinitions.\n\t* include/bits/regex_automaton.h (_NFA::_M_insert_state): Adjust\n\twhitespace.\n\t* include/bits/regex_compiler.tcc (__INSERT_REGEX_MATCHER): Add\n\tbraces around body of do-while.\n\t* testsuite/28_regex/basic_regex/85098.cc: New\n\nFrom-SVN: r260371", "tree": {"sha": "e1c608aac6f8dc8cacfc096e24d716f96512af87", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e1c608aac6f8dc8cacfc096e24d716f96512af87"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2d76fab440c585b09703cf268b2a306b026569dd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2d76fab440c585b09703cf268b2a306b026569dd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2d76fab440c585b09703cf268b2a306b026569dd", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2d76fab440c585b09703cf268b2a306b026569dd/comments", "author": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "950ad0bafece295e34e5d3912da0d0314cd0dad1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/950ad0bafece295e34e5d3912da0d0314cd0dad1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/950ad0bafece295e34e5d3912da0d0314cd0dad1"}], "stats": {"total": 107, "additions": 104, "deletions": 3}, "files": [{"sha": "2ccf585dddc8e0a0b38a50e3c9b47d6b08d55861", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2d76fab440c585b09703cf268b2a306b026569dd/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2d76fab440c585b09703cf268b2a306b026569dd/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=2d76fab440c585b09703cf268b2a306b026569dd", "patch": "@@ -1,3 +1,17 @@\n+2018-05-18  Jonathan Wakely  <jwakely@redhat.com>\n+\n+\tPR libstdc++/85098\n+\t* include/bits/regex.h [__cplusplus < 201703L] (basic_regex::icase)\n+\t(basic_regex::nosubs, basic_regex::optimize, basic_regex::collate)\n+\t(basic_regex::ECMAScript, basic_regex::basic, basic_regex::extended)\n+\t(basic_regex::awk, basic_regex::grep, basic_regex::egrep): Add\n+\tdefinitions.\n+\t* include/bits/regex_automaton.h (_NFA::_M_insert_state): Adjust\n+\twhitespace.\n+\t* include/bits/regex_compiler.tcc (__INSERT_REGEX_MATCHER): Add\n+\tbraces around body of do-while.\n+\t* testsuite/28_regex/basic_regex/85098.cc: New\n+\n 2018-05-17  Jonathan Wakely  <jwakely@redhat.com>\n \n \tPR libstdc++/85818"}, {"sha": "12e830b2c687c6f57ed99a918348ae205e987194", "filename": "libstdc++-v3/include/bits/regex.h", "status": "modified", "additions": 42, "deletions": 0, "changes": 42, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2d76fab440c585b09703cf268b2a306b026569dd/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fregex.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2d76fab440c585b09703cf268b2a306b026569dd/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fregex.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fregex.h?ref=2d76fab440c585b09703cf268b2a306b026569dd", "patch": "@@ -776,6 +776,48 @@ _GLIBCXX_BEGIN_NAMESPACE_CXX11\n       _AutomatonPtr\t_M_automaton;\n     };\n \n+#if __cplusplus < 201703L\n+  template<typename _Ch, typename _Tr>\n+    constexpr regex_constants::syntax_option_type\n+    basic_regex<_Ch, _Tr>::icase;\n+\n+  template<typename _Ch, typename _Tr>\n+    constexpr regex_constants::syntax_option_type\n+    basic_regex<_Ch, _Tr>::nosubs;\n+\n+  template<typename _Ch, typename _Tr>\n+    constexpr regex_constants::syntax_option_type\n+    basic_regex<_Ch, _Tr>::optimize;\n+\n+  template<typename _Ch, typename _Tr>\n+    constexpr regex_constants::syntax_option_type\n+    basic_regex<_Ch, _Tr>::collate;\n+\n+  template<typename _Ch, typename _Tr>\n+    constexpr regex_constants::syntax_option_type\n+    basic_regex<_Ch, _Tr>::ECMAScript;\n+\n+  template<typename _Ch, typename _Tr>\n+    constexpr regex_constants::syntax_option_type\n+    basic_regex<_Ch, _Tr>::basic;\n+\n+  template<typename _Ch, typename _Tr>\n+    constexpr regex_constants::syntax_option_type\n+    basic_regex<_Ch, _Tr>::extended;\n+\n+  template<typename _Ch, typename _Tr>\n+    constexpr regex_constants::syntax_option_type\n+    basic_regex<_Ch, _Tr>::awk;\n+\n+  template<typename _Ch, typename _Tr>\n+    constexpr regex_constants::syntax_option_type\n+    basic_regex<_Ch, _Tr>::grep;\n+\n+  template<typename _Ch, typename _Tr>\n+    constexpr regex_constants::syntax_option_type\n+    basic_regex<_Ch, _Tr>::egrep;\n+#endif // ! C++17\n+\n #if __cpp_deduction_guides >= 201606\n   template<typename _ForwardIterator>\n     basic_regex(_ForwardIterator, _ForwardIterator,"}, {"sha": "11a31acbefedc495e20bbbd4d91bebc3a219dd57", "filename": "libstdc++-v3/include/bits/regex_automaton.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2d76fab440c585b09703cf268b2a306b026569dd/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fregex_automaton.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2d76fab440c585b09703cf268b2a306b026569dd/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fregex_automaton.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fregex_automaton.h?ref=2d76fab440c585b09703cf268b2a306b026569dd", "patch": "@@ -333,7 +333,7 @@ namespace __detail\n \t    \"Number of NFA states exceeds limit. Please use shorter regex \"\n \t    \"string, or use smaller brace expression, or make \"\n \t    \"_GLIBCXX_REGEX_STATE_LIMIT larger.\");\n-\treturn this->size()-1;\n+\treturn this->size() - 1;\n       }\n \n       // Eliminate dummy node in this NFA to make it compact."}, {"sha": "8af920e5fe95f838b76a4eff655fd1cb09167ac2", "filename": "libstdc++-v3/include/bits/regex_compiler.tcc", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2d76fab440c585b09703cf268b2a306b026569dd/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fregex_compiler.tcc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2d76fab440c585b09703cf268b2a306b026569dd/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fregex_compiler.tcc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fregex_compiler.tcc?ref=2d76fab440c585b09703cf268b2a306b026569dd", "patch": "@@ -295,7 +295,7 @@ namespace __detail\n     }\n \n #define __INSERT_REGEX_MATCHER(__func, ...)\\\n-\tdo\\\n+\tdo {\\\n \t  if (!(_M_flags & regex_constants::icase))\\\n \t    if (!(_M_flags & regex_constants::collate))\\\n \t      __func<false, false>(__VA_ARGS__);\\\n@@ -306,7 +306,7 @@ namespace __detail\n \t      __func<true, false>(__VA_ARGS__);\\\n \t    else\\\n \t      __func<true, true>(__VA_ARGS__);\\\n-\twhile (false)\n+\t} while (false)\n \n   template<typename _TraitsT>\n     bool"}, {"sha": "173b1901a7cddf3abf27db2e1173cca63243c747", "filename": "libstdc++-v3/testsuite/28_regex/basic_regex/85098.cc", "status": "added", "additions": 45, "deletions": 0, "changes": 45, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2d76fab440c585b09703cf268b2a306b026569dd/libstdc%2B%2B-v3%2Ftestsuite%2F28_regex%2Fbasic_regex%2F85098.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2d76fab440c585b09703cf268b2a306b026569dd/libstdc%2B%2B-v3%2Ftestsuite%2F28_regex%2Fbasic_regex%2F85098.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F28_regex%2Fbasic_regex%2F85098.cc?ref=2d76fab440c585b09703cf268b2a306b026569dd", "patch": "@@ -0,0 +1,45 @@\n+// Copyright (C) 2018 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+// { dg-options \"-O0\" }\n+// { dg-do link { target c++11 } }\n+\n+#include <regex>\n+\n+void f(const std::regex_constants::syntax_option_type&) { }\n+\n+void\n+test01()\n+{\n+  f(std::regex::icase);\n+  f(std::regex::nosubs);\n+  f(std::regex::optimize);\n+  f(std::regex::collate);\n+  f(std::regex::ECMAScript);\n+  f(std::regex::basic);\n+  f(std::regex::extended);\n+  f(std::regex::awk);\n+  f(std::regex::grep);\n+  f(std::regex::egrep);\n+  // f(std::regex::multiline);\n+}\n+\n+int\n+main()\n+{\n+  test01();\n+}"}]}