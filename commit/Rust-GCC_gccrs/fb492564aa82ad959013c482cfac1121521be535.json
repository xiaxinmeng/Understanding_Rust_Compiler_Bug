{"sha": "fb492564aa82ad959013c482cfac1121521be535", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZmI0OTI1NjRhYTgyYWQ5NTkwMTNjNDgyY2ZhYzExMjE1MjFiZTUzNQ==", "commit": {"author": {"name": "Andreas Krebbel", "email": "krebbel1@de.ibm.com", "date": "2008-05-27T11:49:40Z"}, "committer": {"name": "Andreas Krebbel", "email": "krebbel@gcc.gnu.org", "date": "2008-05-27T11:49:40Z"}, "message": "s390.md: Replace all occurences of the 'm' constraint with 'RT'.\n\n2008-05-27  Andreas Krebbel  <krebbel1@de.ibm.com>\n\n\t* config/s390/s390.md: Replace all occurences of the 'm'\n\tconstraint with 'RT'.\n\nFrom-SVN: r136014", "tree": {"sha": "6b59eb4906ac7f0937eabb31b79b50fe1a94407e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6b59eb4906ac7f0937eabb31b79b50fe1a94407e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/fb492564aa82ad959013c482cfac1121521be535", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fb492564aa82ad959013c482cfac1121521be535", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fb492564aa82ad959013c482cfac1121521be535", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fb492564aa82ad959013c482cfac1121521be535/comments", "author": null, "committer": null, "parents": [{"sha": "3af8e996ef185f4282b99951a03fe99e8cc48848", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3af8e996ef185f4282b99951a03fe99e8cc48848", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3af8e996ef185f4282b99951a03fe99e8cc48848"}], "stats": {"total": 133, "additions": 69, "deletions": 64}, "files": [{"sha": "a6d1e210d1e0691c0f0cfc1174180f219a6be407", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fb492564aa82ad959013c482cfac1121521be535/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fb492564aa82ad959013c482cfac1121521be535/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=fb492564aa82ad959013c482cfac1121521be535", "patch": "@@ -1,3 +1,8 @@\n+2008-05-27  Andreas Krebbel  <krebbel1@de.ibm.com>\n+\n+\t* config/s390/s390.md: Replace all occurences of the 'm'\n+\tconstraint with 'RT'.\n+\n 2008-05-27  Andreas Krebbel  <krebbel1@de.ibm.com>\n \n \t* config/s390/s390.md (\"cpu_facility\", \"enabled\"): Attribute"}, {"sha": "03ebfcde5b8fbc5565ba1eb97d11d00c4bc46ceb", "filename": "gcc/config/s390/s390.md", "status": "modified", "additions": 64, "deletions": 64, "changes": 128, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fb492564aa82ad959013c482cfac1121521be535/gcc%2Fconfig%2Fs390%2Fs390.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fb492564aa82ad959013c482cfac1121521be535/gcc%2Fconfig%2Fs390%2Fs390.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fs390%2Fs390.md?ref=fb492564aa82ad959013c482cfac1121521be535", "patch": "@@ -551,7 +551,7 @@\n ; ltr, lt, ltgr, ltg\n (define_insn \"*tst<mode>_extimm\"\n   [(set (reg CC_REGNUM)\n-        (compare (match_operand:GPR 0 \"nonimmediate_operand\" \"d,m\")\n+        (compare (match_operand:GPR 0 \"nonimmediate_operand\" \"d,RT\")\n                  (match_operand:GPR 1 \"const0_operand\" \"\")))\n    (set (match_operand:GPR 2 \"register_operand\" \"=d,d\")\n         (match_dup 0))]\n@@ -564,7 +564,7 @@\n ; ltr, lt, ltgr, ltg\n (define_insn \"*tst<mode>_cconly_extimm\"\n   [(set (reg CC_REGNUM)\n-        (compare (match_operand:GPR 0 \"nonimmediate_operand\" \"d,m\")\n+        (compare (match_operand:GPR 0 \"nonimmediate_operand\" \"d,RT\")\n                  (match_operand:GPR 1 \"const0_operand\" \"\")))\n    (clobber (match_scratch:GPR 2 \"=X,d\"))]\n   \"s390_match_ccmode(insn, CCSmode) && TARGET_EXTIMM\"\n@@ -693,7 +693,7 @@\n (define_insn \"*cmpdi_cct\"\n   [(set (reg CC_REGNUM)\n         (compare (match_operand:DI 0 \"nonimmediate_operand\" \"%d,d,d,d,Q\")\n-                 (match_operand:DI 1 \"general_operand\" \"d,K,Os,m,BQ\")))]\n+                 (match_operand:DI 1 \"general_operand\" \"d,K,Os,RT,BQ\")))]\n   \"s390_match_ccmode (insn, CCTmode) && TARGET_64BIT\"\n   \"@\n    cgr\\t%0,%1\n@@ -722,7 +722,7 @@\n \n (define_insn \"*cmpdi_ccs_sign\"\n   [(set (reg CC_REGNUM)\n-        (compare (sign_extend:DI (match_operand:SI 1 \"nonimmediate_operand\" \"d,m\"))\n+        (compare (sign_extend:DI (match_operand:SI 1 \"nonimmediate_operand\" \"d,RT\"))\n                  (match_operand:DI 0 \"register_operand\" \"d,d\")))]\n   \"s390_match_ccmode(insn, CCSRmode) && TARGET_64BIT\"\n   \"@\n@@ -759,7 +759,7 @@\n \n (define_insn \"*cmpdi_ccu_zero\"\n   [(set (reg CC_REGNUM)\n-        (compare (zero_extend:DI (match_operand:SI 1 \"nonimmediate_operand\" \"d,m\"))\n+        (compare (zero_extend:DI (match_operand:SI 1 \"nonimmediate_operand\" \"d,RT\"))\n                  (match_operand:DI 0 \"register_operand\" \"d,d\")))]\n   \"s390_match_ccmode (insn, CCURmode) && TARGET_64BIT\"\n   \"@\n@@ -770,7 +770,7 @@\n (define_insn \"*cmpdi_ccu\"\n   [(set (reg CC_REGNUM)\n         (compare (match_operand:DI 0 \"nonimmediate_operand\" \"d,d,d,Q,BQ\")\n-                 (match_operand:DI 1 \"general_operand\" \"d,Op,m,BQ,Q\")))]\n+                 (match_operand:DI 1 \"general_operand\" \"d,Op,RT,BQ,Q\")))]\n   \"s390_match_ccmode (insn, CCUmode) && TARGET_64BIT\"\n   \"@\n    clgr\\t%0,%1\n@@ -891,7 +891,7 @@\n \n (define_insn \"movti\"\n   [(set (match_operand:TI 0 \"nonimmediate_operand\" \"=d,QS,d,o,Q\")\n-        (match_operand:TI 1 \"general_operand\" \"QS,d,dPm,d,Q\"))]\n+        (match_operand:TI 1 \"general_operand\" \"QS,d,dPRT,d,Q\"))]\n   \"TARGET_64BIT\"\n   \"@\n    lmg\\t%0,%N0,%S1\n@@ -1017,9 +1017,9 @@\n (define_insn \"*movdi_64\"\n   [(set (match_operand:DI 0 \"nonimmediate_operand\"\n                             \"=d,d,d,d,d,d,d,d,f,d,d,d,d,\n-                             m,!*f,!*f,!*f,!R,!T,d,t,Q,t,?Q\")\n+                             RT,!*f,!*f,!*f,!R,!T,d,t,Q,t,?Q\")\n         (match_operand:DI 1 \"general_operand\"\n-                            \"K,N0HD0,N1HD0,N2HD0,N3HD0,Os,N0SD0,N1SD0,d,f,L,d,m,\n+                            \"K,N0HD0,N1HD0,N2HD0,N3HD0,Os,N0SD0,N1SD0,d,f,L,d,RT,\n                              d,*f,R,T,*f,*f,t,d,t,Q,?Q\"))]\n   \"TARGET_64BIT\"\n   \"@\n@@ -1089,7 +1089,7 @@\n \n (define_insn \"*movdi_31\"\n   [(set (match_operand:DI 0 \"nonimmediate_operand\" \"=d,d,Q,S,d,o,!*f,!*f,!*f,!R,!T,Q\")\n-        (match_operand:DI 1 \"general_operand\" \"Q,S,d,d,dPm,d,*f,R,T,*f,*f,Q\"))]\n+        (match_operand:DI 1 \"general_operand\" \"Q,S,d,d,dPRT,d,*f,R,T,*f,*f,Q\"))]\n   \"!TARGET_64BIT\"\n   \"@\n    lm\\t%0,%N0,%S1\n@@ -1505,7 +1505,7 @@\n \n (define_insn \"*mov<mode>_64\"\n   [(set (match_operand:TD_TF 0 \"nonimmediate_operand\" \"=f,f,f,o, d,QS, d,o,Q\")\n-        (match_operand:TD_TF 1 \"general_operand\"      \" G,f,o,f,QS, d,dm,d,Q\"))]\n+        (match_operand:TD_TF 1 \"general_operand\"      \" G,f,o,f,QS, d,dRT,d,Q\"))]\n   \"TARGET_64BIT\"\n   \"@\n    lzxr\\t%0\n@@ -1622,9 +1622,9 @@\n \n (define_insn \"*mov<mode>_64dfp\"\n   [(set (match_operand:DD_DF 0 \"nonimmediate_operand\"\n-\t\t\t       \"=f,f,f,d,f,f,R,T,d,d,m,?Q\")\n+\t\t\t       \"=f,f,f,d,f,f,R,T,d,d,RT,?Q\")\n         (match_operand:DD_DF 1 \"general_operand\"\n-\t\t\t       \"G,f,d,f,R,T,f,f,d,m,d,?Q\"))]\n+\t\t\t       \"G,f,d,f,R,T,f,f,d,RT,d,?Q\"))]\n   \"TARGET_64BIT && TARGET_DFP\"\n   \"@\n    lzdr\\t%0\n@@ -1644,8 +1644,8 @@\n                      fstoredf,fstoredf,lr,load,store,*\")])\n \n (define_insn \"*mov<mode>_64\"\n-  [(set (match_operand:DD_DF 0 \"nonimmediate_operand\" \"=f,f,f,f,R,T,d,d,m,?Q\")\n-        (match_operand:DD_DF 1 \"general_operand\"       \"G,f,R,T,f,f,d,m,d,?Q\"))]\n+  [(set (match_operand:DD_DF 0 \"nonimmediate_operand\" \"=f,f,f,f,R,T,d, d,RT,?Q\")\n+        (match_operand:DD_DF 1 \"general_operand\"       \"G,f,R,T,f,f,d,RT, d,?Q\"))]\n   \"TARGET_64BIT\"\n   \"@\n    lzdr\\t%0\n@@ -1664,9 +1664,9 @@\n \n (define_insn \"*mov<mode>_31\"\n   [(set (match_operand:DD_DF 0 \"nonimmediate_operand\"\n-                               \"=f,f,f,f,R,T,d,d,Q,S,  d,o,Q\")\n+                               \"=f,f,f,f,R,T,d,d,Q,S,   d,o,Q\")\n         (match_operand:DD_DF 1 \"general_operand\"\n-                               \" G,f,R,T,f,f,Q,S,d,d,dPm,d,Q\"))]\n+                               \" G,f,R,T,f,f,Q,S,d,d,dPRT,d,Q\"))]\n   \"!TARGET_64BIT\"\n   \"@\n    lzdr\\t%0\n@@ -2868,7 +2868,7 @@\n \n (define_insn \"*extendsidi2\"\n   [(set (match_operand:DI 0 \"register_operand\" \"=d,d\")\n-        (sign_extend:DI (match_operand:SI 1 \"nonimmediate_operand\" \"d,m\")))]\n+        (sign_extend:DI (match_operand:SI 1 \"nonimmediate_operand\" \"d,RT\")))]\n   \"TARGET_64BIT\"\n   \"@\n    lgfr\\t%0,%1\n@@ -2909,7 +2909,7 @@\n \n (define_insn \"*extendhidi2_extimm\"\n   [(set (match_operand:DI 0 \"register_operand\" \"=d,d\")\n-        (sign_extend:DI (match_operand:HI 1 \"nonimmediate_operand\" \"d,m\")))]\n+        (sign_extend:DI (match_operand:HI 1 \"nonimmediate_operand\" \"d,RT\")))]\n   \"TARGET_64BIT && TARGET_EXTIMM\"\n   \"@\n    lghr\\t%0,%1\n@@ -2918,7 +2918,7 @@\n \n (define_insn \"*extendhidi2\"\n   [(set (match_operand:DI 0 \"register_operand\" \"=d\")\n-        (sign_extend:DI (match_operand:HI 1 \"memory_operand\" \"m\")))]\n+        (sign_extend:DI (match_operand:HI 1 \"memory_operand\" \"RT\")))]\n   \"TARGET_64BIT\"\n   \"lgh\\t%0,%1\"\n   [(set_attr \"op_type\" \"RXY\")])\n@@ -2953,7 +2953,7 @@\n ; lbr, lgbr, lb, lgb\n (define_insn \"*extendqi<mode>2_extimm\"\n   [(set (match_operand:GPR 0 \"register_operand\" \"=d,d\")\n-        (sign_extend:GPR (match_operand:QI 1 \"nonimmediate_operand\" \"d,m\")))]\n+        (sign_extend:GPR (match_operand:QI 1 \"nonimmediate_operand\" \"d,RT\")))]\n   \"TARGET_EXTIMM\"\n   \"@\n    l<g>br\\t%0,%1\n@@ -2963,7 +2963,7 @@\n ; lb, lgb\n (define_insn \"*extendqi<mode>2\"\n   [(set (match_operand:GPR 0 \"register_operand\" \"=d\")\n-        (sign_extend:GPR (match_operand:QI 1 \"memory_operand\" \"m\")))]\n+        (sign_extend:GPR (match_operand:QI 1 \"memory_operand\" \"RT\")))]\n   \"!TARGET_EXTIMM && TARGET_LONG_DISPLACEMENT\"\n   \"l<g>b\\t%0,%1\"\n   [(set_attr \"op_type\" \"RXY\")])\n@@ -3008,7 +3008,7 @@\n \n (define_insn \"*zero_extendsidi2\"\n   [(set (match_operand:DI 0 \"register_operand\" \"=d,d\")\n-        (zero_extend:DI (match_operand:SI 1 \"nonimmediate_operand\" \"d,m\")))]\n+        (zero_extend:DI (match_operand:SI 1 \"nonimmediate_operand\" \"d,RT\")))]\n   \"TARGET_64BIT\"\n   \"@\n    llgfr\\t%0,%1\n@@ -3021,15 +3021,15 @@\n \n (define_insn \"*llgt_sidi\"\n   [(set (match_operand:DI 0 \"register_operand\" \"=d\")\n-        (and:DI (subreg:DI (match_operand:SI 1 \"memory_operand\" \"m\") 0)\n+        (and:DI (subreg:DI (match_operand:SI 1 \"memory_operand\" \"RT\") 0)\n \t\t(const_int 2147483647)))]\n   \"TARGET_64BIT\"\n   \"llgt\\t%0,%1\"\n   [(set_attr \"op_type\"  \"RXE\")])\n \n (define_insn_and_split \"*llgt_sidi_split\"\n   [(set (match_operand:DI 0 \"register_operand\" \"=d\")\n-        (and:DI (subreg:DI (match_operand:SI 1 \"memory_operand\" \"m\") 0)\n+        (and:DI (subreg:DI (match_operand:SI 1 \"memory_operand\" \"RT\") 0)\n \t\t(const_int 2147483647)))\n    (clobber (reg:CC CC_REGNUM))]\n   \"TARGET_64BIT\"\n@@ -3042,7 +3042,7 @@\n \n (define_insn \"*llgt_sisi\"\n   [(set (match_operand:SI 0 \"register_operand\" \"=d,d\")\n-        (and:SI (match_operand:SI 1 \"nonimmediate_operand\" \"d,m\")\n+        (and:SI (match_operand:SI 1 \"nonimmediate_operand\" \"d,RT\")\n \t\t(const_int 2147483647)))]\n   \"TARGET_ZARCH\"\n   \"@\n@@ -3115,7 +3115,7 @@\n ; llhr, llcr, llghr, llgcr, llh, llc, llgh, llgc\n (define_insn \"*zero_extend<HQI:mode><GPR:mode>2_extimm\"\n   [(set (match_operand:GPR 0 \"register_operand\" \"=d,d\")\n-        (zero_extend:GPR (match_operand:HQI 1 \"nonimmediate_operand\" \"d,m\")))]\n+        (zero_extend:GPR (match_operand:HQI 1 \"nonimmediate_operand\" \"d,RT\")))]\n   \"TARGET_EXTIMM\"\n   \"@\n    ll<g><hc>r\\t%0,%1\n@@ -3125,7 +3125,7 @@\n ; llgh, llgc\n (define_insn \"*zero_extend<HQI:mode><GPR:mode>2\"\n   [(set (match_operand:GPR 0 \"register_operand\" \"=d\")\n-        (zero_extend:GPR (match_operand:HQI 1 \"memory_operand\" \"m\")))]\n+        (zero_extend:GPR (match_operand:HQI 1 \"memory_operand\" \"RT\")))]\n   \"TARGET_ZARCH && !TARGET_EXTIMM\"\n   \"llg<hc>\\t%0,%1\"\n   [(set_attr \"op_type\" \"RXY\")])\n@@ -3145,7 +3145,7 @@\n \n (define_insn_and_split \"*zero_extendqisi2_31\"\n   [(set (match_operand:SI 0 \"register_operand\" \"=&d\")\n-        (zero_extend:SI (match_operand:QI 1 \"memory_operand\" \"m\")))]\n+        (zero_extend:SI (match_operand:QI 1 \"memory_operand\" \"RT\")))]\n   \"!TARGET_ZARCH\"\n   \"#\"\n   \"&& reload_completed\"\n@@ -3169,14 +3169,14 @@\n \n (define_insn \"*zero_extendqihi2_64\"\n   [(set (match_operand:HI 0 \"register_operand\" \"=d\")\n-        (zero_extend:HI (match_operand:QI 1 \"memory_operand\" \"m\")))]\n+        (zero_extend:HI (match_operand:QI 1 \"memory_operand\" \"RT\")))]\n   \"TARGET_ZARCH && !TARGET_EXTIMM\"\n   \"llgc\\t%0,%1\"\n   [(set_attr \"op_type\" \"RXY\")])\n \n (define_insn_and_split \"*zero_extendqihi2_31\"\n   [(set (match_operand:HI 0 \"register_operand\" \"=&d\")\n-        (zero_extend:HI (match_operand:QI 1 \"memory_operand\" \"m\")))]\n+        (zero_extend:HI (match_operand:QI 1 \"memory_operand\" \"RT\")))]\n   \"!TARGET_ZARCH\"\n   \"#\"\n   \"&& reload_completed\"\n@@ -3633,7 +3633,7 @@\n \n (define_insn \"*adddi3_sign\"\n   [(set (match_operand:DI 0 \"register_operand\" \"=d,d\")\n-        (plus:DI (sign_extend:DI (match_operand:SI 2 \"general_operand\" \"d,m\"))\n+        (plus:DI (sign_extend:DI (match_operand:SI 2 \"general_operand\" \"d,RT\"))\n                  (match_operand:DI 1 \"register_operand\" \"0,0\")))\n    (clobber (reg:CC CC_REGNUM))]\n   \"TARGET_64BIT\"\n@@ -3644,7 +3644,7 @@\n \n (define_insn \"*adddi3_zero_cc\"\n   [(set (reg CC_REGNUM)\n-        (compare (plus:DI (zero_extend:DI (match_operand:SI 2 \"general_operand\" \"d,m\"))\n+        (compare (plus:DI (zero_extend:DI (match_operand:SI 2 \"general_operand\" \"d,RT\"))\n                           (match_operand:DI 1 \"register_operand\" \"0,0\"))\n                  (const_int 0)))\n    (set (match_operand:DI 0 \"register_operand\" \"=d,d\")\n@@ -3657,7 +3657,7 @@\n \n (define_insn \"*adddi3_zero_cconly\"\n   [(set (reg CC_REGNUM)\n-        (compare (plus:DI (zero_extend:DI (match_operand:SI 2 \"general_operand\" \"d,m\"))\n+        (compare (plus:DI (zero_extend:DI (match_operand:SI 2 \"general_operand\" \"d,RT\"))\n                           (match_operand:DI 1 \"register_operand\" \"0,0\"))\n                  (const_int 0)))\n    (clobber (match_scratch:DI 0 \"=d,d\"))]\n@@ -3669,7 +3669,7 @@\n \n (define_insn \"*adddi3_zero\"\n   [(set (match_operand:DI 0 \"register_operand\" \"=d,d\")\n-        (plus:DI (zero_extend:DI (match_operand:SI 2 \"general_operand\" \"d,m\"))\n+        (plus:DI (zero_extend:DI (match_operand:SI 2 \"general_operand\" \"d,RT\"))\n                  (match_operand:DI 1 \"register_operand\" \"0,0\")))\n    (clobber (reg:CC CC_REGNUM))]\n   \"TARGET_64BIT\"\n@@ -3997,7 +3997,7 @@\n (define_insn \"*subdi3_sign\"\n   [(set (match_operand:DI 0 \"register_operand\" \"=d,d\")\n         (minus:DI (match_operand:DI 1 \"register_operand\" \"0,0\")\n-                  (sign_extend:DI (match_operand:SI 2 \"general_operand\" \"d,m\"))))\n+                  (sign_extend:DI (match_operand:SI 2 \"general_operand\" \"d,RT\"))))\n    (clobber (reg:CC CC_REGNUM))]\n   \"TARGET_64BIT\"\n   \"@\n@@ -4008,7 +4008,7 @@\n (define_insn \"*subdi3_zero_cc\"\n   [(set (reg CC_REGNUM)\n         (compare (minus:DI (match_operand:DI 1 \"register_operand\" \"0,0\")\n-                           (zero_extend:DI (match_operand:SI 2 \"general_operand\" \"d,m\")))\n+                           (zero_extend:DI (match_operand:SI 2 \"general_operand\" \"d,RT\")))\n                  (const_int 0)))\n    (set (match_operand:DI 0 \"register_operand\" \"=d,d\")\n         (minus:DI (match_dup 1) (zero_extend:DI (match_dup 2))))]\n@@ -4021,7 +4021,7 @@\n (define_insn \"*subdi3_zero_cconly\"\n   [(set (reg CC_REGNUM)\n         (compare (minus:DI (match_operand:DI 1 \"register_operand\" \"0,0\")\n-                           (zero_extend:DI (match_operand:SI 2 \"general_operand\" \"d,m\")))\n+                           (zero_extend:DI (match_operand:SI 2 \"general_operand\" \"d,RT\")))\n                  (const_int 0)))\n    (clobber (match_scratch:DI 0 \"=d,d\"))]\n   \"s390_match_ccmode (insn, CCLmode) && TARGET_64BIT\"\n@@ -4033,7 +4033,7 @@\n (define_insn \"*subdi3_zero\"\n   [(set (match_operand:DI 0 \"register_operand\" \"=d,d\")\n         (minus:DI (match_operand:DI 1 \"register_operand\" \"0,0\")\n-                  (zero_extend:DI (match_operand:SI 2 \"general_operand\" \"d,m\"))))\n+                  (zero_extend:DI (match_operand:SI 2 \"general_operand\" \"d,RT\"))))\n    (clobber (reg:CC CC_REGNUM))]\n   \"TARGET_64BIT\"\n   \"@\n@@ -4289,7 +4289,7 @@\n         (compare\n           (plus:GPR (plus:GPR (match_operand:GPR 3 \"s390_alc_comparison\" \"\")\n                               (match_operand:GPR 1 \"nonimmediate_operand\" \"%0,0\"))\n-                    (match_operand:GPR 2 \"general_operand\" \"d,m\"))\n+                    (match_operand:GPR 2 \"general_operand\" \"d,RT\"))\n           (match_dup 1)))\n    (set (match_operand:GPR 0 \"register_operand\" \"=d,d\")\n         (plus:GPR (plus:GPR (match_dup 3) (match_dup 1)) (match_dup 2)))]\n@@ -4305,7 +4305,7 @@\n         (compare\n           (plus:GPR (plus:GPR (match_operand:GPR 3 \"s390_alc_comparison\" \"\")\n                               (match_operand:GPR 1 \"nonimmediate_operand\" \"%0,0\"))\n-                    (match_operand:GPR 2 \"general_operand\" \"d,m\"))\n+                    (match_operand:GPR 2 \"general_operand\" \"d,RT\"))\n           (match_dup 1)))\n    (clobber (match_scratch:GPR 0 \"=d,d\"))]\n   \"s390_match_ccmode (insn, CCL1mode) && TARGET_CPU_ZARCH\"\n@@ -4322,7 +4322,7 @@\n         (compare\n           (plus:GPR (plus:GPR (match_operand:GPR 3 \"s390_alc_comparison\" \"\")\n                               (match_operand:GPR 1 \"nonimmediate_operand\" \"%0,0\"))\n-                    (match_operand:GPR 2 \"general_operand\" \"d,m\"))\n+                    (match_operand:GPR 2 \"general_operand\" \"d,RT\"))\n           (match_dup 2)))\n    (set (match_operand:GPR 0 \"register_operand\" \"=d,d\")\n         (plus:GPR (plus:GPR (match_dup 3) (match_dup 1)) (match_dup 2)))]\n@@ -4338,7 +4338,7 @@\n         (compare\n           (plus:GPR (plus:GPR (match_operand:GPR 3 \"s390_alc_comparison\" \"\")\n                               (match_operand:GPR 1 \"nonimmediate_operand\" \"%0,0\"))\n-                    (match_operand:GPR 2 \"general_operand\" \"d,m\"))\n+                    (match_operand:GPR 2 \"general_operand\" \"d,RT\"))\n           (match_dup 2)))\n    (clobber (match_scratch:GPR 0 \"=d,d\"))]\n   \"s390_match_ccmode (insn, CCL1mode) && TARGET_CPU_ZARCH\"\n@@ -4353,7 +4353,7 @@\n         (compare\n           (plus:GPR (plus:GPR (match_operand:GPR 3 \"s390_alc_comparison\" \"\")\n                               (match_operand:GPR 1 \"nonimmediate_operand\" \"%0,0\"))\n-                    (match_operand:GPR 2 \"general_operand\" \"d,m\"))\n+                    (match_operand:GPR 2 \"general_operand\" \"d,RT\"))\n           (const_int 0)))\n    (set (match_operand:GPR 0 \"register_operand\" \"=d,d\")\n         (plus:GPR (plus:GPR (match_dup 3) (match_dup 1)) (match_dup 2)))]\n@@ -4368,7 +4368,7 @@\n   [(set (match_operand:GPR 0 \"register_operand\" \"=d,d\")\n         (plus:GPR (plus:GPR (match_operand:GPR 3 \"s390_alc_comparison\" \"\")\n                             (match_operand:GPR 1 \"nonimmediate_operand\" \"%0,0\"))\n-                  (match_operand:GPR 2 \"general_operand\" \"d,m\")))\n+                  (match_operand:GPR 2 \"general_operand\" \"d,RT\")))\n    (clobber (reg:CC CC_REGNUM))]\n   \"TARGET_CPU_ZARCH\"\n   \"@\n@@ -4381,7 +4381,7 @@\n   [(set (reg CC_REGNUM)\n         (compare\n           (minus:GPR (minus:GPR (match_operand:GPR 1 \"nonimmediate_operand\" \"0,0\")\n-                                (match_operand:GPR 2 \"general_operand\" \"d,m\"))\n+                                (match_operand:GPR 2 \"general_operand\" \"d,RT\"))\n                      (match_operand:GPR 3 \"s390_slb_comparison\" \"\"))\n           (const_int 0)))\n    (set (match_operand:GPR 0 \"register_operand\" \"=d,d\")\n@@ -4396,7 +4396,7 @@\n (define_insn \"*sub<mode>3_slb\"\n   [(set (match_operand:GPR 0 \"register_operand\" \"=d,d\")\n         (minus:GPR (minus:GPR (match_operand:GPR 1 \"nonimmediate_operand\" \"0,0\")\n-                              (match_operand:GPR 2 \"general_operand\" \"d,m\"))\n+                              (match_operand:GPR 2 \"general_operand\" \"d,RT\"))\n                    (match_operand:GPR 3 \"s390_slb_comparison\" \"\")))\n    (clobber (reg:CC CC_REGNUM))]\n   \"TARGET_CPU_ZARCH\"\n@@ -4499,7 +4499,7 @@\n \n (define_insn \"*muldi3_sign\"\n   [(set (match_operand:DI 0 \"register_operand\" \"=d,d\")\n-        (mult:DI (sign_extend:DI (match_operand:SI 2 \"nonimmediate_operand\" \"d,m\"))\n+        (mult:DI (sign_extend:DI (match_operand:SI 2 \"nonimmediate_operand\" \"d,RT\"))\n                  (match_operand:DI 1 \"register_operand\" \"0,0\")))]\n   \"TARGET_64BIT\"\n   \"@\n@@ -4511,7 +4511,7 @@\n (define_insn \"muldi3\"\n   [(set (match_operand:DI 0 \"register_operand\" \"=d,d,d\")\n         (mult:DI (match_operand:DI 1 \"nonimmediate_operand\" \"%0,0,0\")\n-                 (match_operand:DI 2 \"general_operand\" \"d,K,m\")))]\n+                 (match_operand:DI 2 \"general_operand\" \"d,K,RT\")))]\n   \"TARGET_64BIT\"\n   \"@\n    msgr\\t%0,%2\n@@ -4572,7 +4572,7 @@\n         (mult:DI (zero_extend:DI\n \t           (match_operand:SI 1 \"register_operand\" \"%0,0\"))\n                  (zero_extend:DI\n-\t           (match_operand:SI 2 \"nonimmediate_operand\" \"d,m\"))))]\n+\t           (match_operand:SI 2 \"nonimmediate_operand\" \"d,RT\"))))]\n   \"!TARGET_64BIT && TARGET_CPU_ZARCH\"\n   \"@\n    mlr\\t%0,%2\n@@ -4662,7 +4662,7 @@\n           (ashift:TI\n             (zero_extend:TI\n               (mod:DI (match_operand:DI 1 \"register_operand\" \"0,0\")\n-                      (match_operand:DI 2 \"general_operand\" \"d,m\")))\n+                      (match_operand:DI 2 \"general_operand\" \"d,RT\")))\n             (const_int 64))\n           (zero_extend:TI (div:DI (match_dup 1) (match_dup 2)))))]\n   \"TARGET_64BIT\"\n@@ -4679,7 +4679,7 @@\n             (zero_extend:TI\n               (mod:DI (match_operand:DI 1 \"register_operand\" \"0,0\")\n                       (sign_extend:DI\n-                        (match_operand:SI 2 \"nonimmediate_operand\" \"d,m\"))))\n+                        (match_operand:SI 2 \"nonimmediate_operand\" \"d,RT\"))))\n             (const_int 64))\n           (zero_extend:TI\n             (div:DI (match_dup 1) (sign_extend:DI (match_dup 2))))))]\n@@ -4738,7 +4738,7 @@\n               (truncate:DI\n                 (umod:TI (match_operand:TI 1 \"register_operand\" \"0,0\")\n                          (zero_extend:TI\n-                           (match_operand:DI 2 \"nonimmediate_operand\" \"d,m\")))))\n+                           (match_operand:DI 2 \"nonimmediate_operand\" \"d,RT\")))))\n             (const_int 64))\n           (zero_extend:TI\n             (truncate:DI\n@@ -4856,7 +4856,7 @@\n               (truncate:SI\n                 (umod:DI (match_operand:DI 1 \"register_operand\" \"0,0\")\n                          (zero_extend:DI\n-                           (match_operand:SI 2 \"nonimmediate_operand\" \"d,m\")))))\n+                           (match_operand:SI 2 \"nonimmediate_operand\" \"d,RT\")))))\n             (const_int 32))\n           (zero_extend:DI\n             (truncate:SI\n@@ -5076,7 +5076,7 @@\n (define_insn \"*anddi3_cc\"\n   [(set (reg CC_REGNUM)\n         (compare (and:DI (match_operand:DI 1 \"nonimmediate_operand\" \"%0,0\")\n-                         (match_operand:DI 2 \"general_operand\" \"d,m\"))\n+                         (match_operand:DI 2 \"general_operand\" \"d,RT\"))\n                  (const_int 0)))\n    (set (match_operand:DI 0 \"register_operand\" \"=d,d\")\n         (and:DI (match_dup 1) (match_dup 2)))]\n@@ -5089,7 +5089,7 @@\n (define_insn \"*anddi3_cconly\"\n   [(set (reg CC_REGNUM)\n         (compare (and:DI (match_operand:DI 1 \"nonimmediate_operand\" \"%0,0\")\n-                         (match_operand:DI 2 \"general_operand\" \"d,m\"))\n+                         (match_operand:DI 2 \"general_operand\" \"d,RT\"))\n                  (const_int 0)))\n    (clobber (match_scratch:DI 0 \"=d,d\"))]\n   \"s390_match_ccmode(insn, CCTmode) && TARGET_64BIT\n@@ -5105,7 +5105,7 @@\n         (and:DI (match_operand:DI 1 \"nonimmediate_operand\"\n                                     \"%d,o,0,0,0,0,0,0,0,0,0,0\")\n                 (match_operand:DI 2 \"general_operand\"\n-                                    \"M,M,N0HDF,N1HDF,N2HDF,N3HDF,N0SDF,N1SDF,d,m,NxQDF,Q\")))\n+                                    \"M,M,N0HDF,N1HDF,N2HDF,N3HDF,N0SDF,N1SDF,d,RT,NxQDF,Q\")))\n    (clobber (reg:CC CC_REGNUM))]\n   \"TARGET_64BIT && s390_logical_operator_ok_p (operands)\"\n   \"@\n@@ -5361,7 +5361,7 @@\n (define_insn \"*iordi3_cc\"\n   [(set (reg CC_REGNUM)\n         (compare (ior:DI (match_operand:DI 1 \"nonimmediate_operand\" \"%0,0\")\n-                         (match_operand:DI 2 \"general_operand\" \"d,m\"))\n+                         (match_operand:DI 2 \"general_operand\" \"d,RT\"))\n                  (const_int 0)))\n    (set (match_operand:DI 0 \"register_operand\" \"=d,d\")\n         (ior:DI (match_dup 1) (match_dup 2)))]\n@@ -5374,7 +5374,7 @@\n (define_insn \"*iordi3_cconly\"\n   [(set (reg CC_REGNUM)\n         (compare (ior:DI (match_operand:DI 1 \"nonimmediate_operand\" \"%0,0\")\n-                         (match_operand:DI 2 \"general_operand\" \"d,m\"))\n+                         (match_operand:DI 2 \"general_operand\" \"d,RT\"))\n                  (const_int 0)))\n    (clobber (match_scratch:DI 0 \"=d,d\"))]\n   \"s390_match_ccmode(insn, CCTmode) && TARGET_64BIT\"\n@@ -5387,7 +5387,7 @@\n   [(set (match_operand:DI 0 \"nonimmediate_operand\" \"=d,d,d,d,d,d,d,d,AQ,Q\")\n         (ior:DI (match_operand:DI 1 \"nonimmediate_operand\" \"%0,0,0,0,0,0,0,0,0,0\")\n                 (match_operand:DI 2 \"general_operand\"\n-                                    \"N0HD0,N1HD0,N2HD0,N3HD0,N0SD0,N1SD0,d,m,NxQD0,Q\")))\n+                                    \"N0HD0,N1HD0,N2HD0,N3HD0,N0SD0,N1SD0,d,RT,NxQD0,Q\")))\n    (clobber (reg:CC CC_REGNUM))]\n   \"TARGET_64BIT && s390_logical_operator_ok_p (operands)\"\n   \"@\n@@ -5634,7 +5634,7 @@\n (define_insn \"*xordi3_cc\"\n   [(set (reg CC_REGNUM)\n         (compare (xor:DI (match_operand:DI 1 \"nonimmediate_operand\" \"%0,0\")\n-                         (match_operand:DI 2 \"general_operand\" \"d,m\"))\n+                         (match_operand:DI 2 \"general_operand\" \"d,RT\"))\n                  (const_int 0)))\n    (set (match_operand:DI 0 \"register_operand\" \"=d,d\")\n         (xor:DI (match_dup 1) (match_dup 2)))]\n@@ -5647,7 +5647,7 @@\n (define_insn \"*xordi3_cconly\"\n   [(set (reg CC_REGNUM)\n         (compare (xor:DI (match_operand:DI 1 \"nonimmediate_operand\" \"%0,0\")\n-                         (match_operand:DI 2 \"general_operand\" \"d,m\"))\n+                         (match_operand:DI 2 \"general_operand\" \"d,RT\"))\n                  (const_int 0)))\n    (clobber (match_scratch:DI 0 \"=d,d\"))]\n   \"s390_match_ccmode(insn, CCTmode) && TARGET_64BIT\"\n@@ -5659,7 +5659,7 @@\n (define_insn \"*xordi3\"\n   [(set (match_operand:DI 0 \"nonimmediate_operand\" \"=d,d,d,d,AQ,Q\")\n         (xor:DI (match_operand:DI 1 \"nonimmediate_operand\" \"%0,0,0,0,0,0\")\n-                (match_operand:DI 2 \"general_operand\" \"N0SD0,N1SD0,d,m,NxQD0,Q\")))\n+                (match_operand:DI 2 \"general_operand\" \"N0SD0,N1SD0,d,RT,NxQD0,Q\")))\n    (clobber (reg:CC CC_REGNUM))]\n   \"TARGET_64BIT && s390_logical_operator_ok_p (operands)\"\n   \"@\n@@ -7327,7 +7327,7 @@\n \n (define_insn \"*tls_load_64\"\n   [(set (match_operand:DI 0 \"register_operand\" \"=d\")\n-        (unspec:DI [(match_operand:DI 1 \"memory_operand\" \"m\")\n+        (unspec:DI [(match_operand:DI 1 \"memory_operand\" \"RT\")\n                     (match_operand:DI 2 \"\" \"\")]\n \t\t   UNSPEC_TLS_LOAD))]\n   \"TARGET_64BIT\""}]}