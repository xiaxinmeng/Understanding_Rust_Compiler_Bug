{"sha": "cb110f3d8e3157cc18b48bb76abfcbd17dc4a560", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2IxMTBmM2Q4ZTMxNTdjYzE4YjQ4YmI3NmFiZmNiZDE3ZGM0YTU2MA==", "commit": {"author": {"name": "Alan Modra", "email": "amodra@bigpond.net.au", "date": "2005-11-16T00:22:15Z"}, "committer": {"name": "Alan Modra", "email": "amodra@gcc.gnu.org", "date": "2005-11-16T00:22:15Z"}, "message": "re PR rtl-optimization/23392 (foward-1.m fails with -funroll-loops -O3 -fgnu-runtime)\n\n\tPR rtl-optimization/23392\n\t* regrename.c (enum scan_actions) Add mark_access.\n\t(scan_actions_name): Ditto.\n\t(scan_rtx_reg): Handle mark_access.\n\t(scan_rtx_address): Do nothing for mark_access.\n\t(build_def_use): Mark source registers in REG_FRAME_RELATED_EXPR\n\tand regs in REG_INC notes before closing chains for dead regs.\n\tMark destination regs in REG_FRAME_RELATED_EXPR notes after\n\topening chains for new writes.\n\nFrom-SVN: r107059", "tree": {"sha": "67ad2da461915ce3ea4c19f23a3ed248267c7c22", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/67ad2da461915ce3ea4c19f23a3ed248267c7c22"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/cb110f3d8e3157cc18b48bb76abfcbd17dc4a560", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cb110f3d8e3157cc18b48bb76abfcbd17dc4a560", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cb110f3d8e3157cc18b48bb76abfcbd17dc4a560", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cb110f3d8e3157cc18b48bb76abfcbd17dc4a560/comments", "author": null, "committer": null, "parents": [{"sha": "a6de51d44c7801e3bf5a928c81e19d813bc376c4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a6de51d44c7801e3bf5a928c81e19d813bc376c4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a6de51d44c7801e3bf5a928c81e19d813bc376c4"}], "stats": {"total": 57, "additions": 41, "deletions": 16}, "files": [{"sha": "1ffb83f1d8ca96765afc0d37634069e1b473daaf", "filename": "gcc/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cb110f3d8e3157cc18b48bb76abfcbd17dc4a560/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cb110f3d8e3157cc18b48bb76abfcbd17dc4a560/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=cb110f3d8e3157cc18b48bb76abfcbd17dc4a560", "patch": "@@ -1,3 +1,15 @@\n+2005-11-16  Alan Modra  <amodra@bigpond.net.au>\n+\n+\tPR rtl-optimization/23392\n+\t* regrename.c (enum scan_actions) Add mark_access.\n+\t(scan_actions_name): Ditto.\n+\t(scan_rtx_reg): Handle mark_access.\n+\t(scan_rtx_address): Do nothing for mark_access.\n+\t(build_def_use): Mark source registers in REG_FRAME_RELATED_EXPR\n+\tand regs in REG_INC notes before closing chains for dead regs.\n+\tMark destination regs in REG_FRAME_RELATED_EXPR notes after\n+\topening chains for new writes.\n+\n 2005-11-15  David Edelsohn  <edelsohn@gnu.org>\n \n \t* c.opt (ffixed-line-length-none): New."}, {"sha": "06b1c5b748055586da9a6f2dcbbb66d8b3058db3", "filename": "gcc/regrename.c", "status": "modified", "additions": 29, "deletions": 16, "changes": 45, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cb110f3d8e3157cc18b48bb76abfcbd17dc4a560/gcc%2Fregrename.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cb110f3d8e3157cc18b48bb76abfcbd17dc4a560/gcc%2Fregrename.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fregrename.c?ref=cb110f3d8e3157cc18b48bb76abfcbd17dc4a560", "patch": "@@ -58,7 +58,11 @@ enum scan_actions\n   terminate_write,\n   terminate_dead,\n   mark_read,\n-  mark_write\n+  mark_write,\n+  /* mark_access is for marking the destination regs in\n+     REG_FRAME_RELATED_EXPR notes (as if they were read) so that the\n+     note is updated properly.  */\n+  mark_access\n };\n \n static const char * const scan_actions_name[] =\n@@ -68,7 +72,8 @@ static const char * const scan_actions_name[] =\n   \"terminate_write\",\n   \"terminate_dead\",\n   \"mark_read\",\n-  \"mark_write\"\n+  \"mark_write\",\n+  \"mark_access\"\n };\n \n static struct obstack rename_obstack;\n@@ -408,8 +413,7 @@ scan_rtx_reg (rtx insn, rtx *loc, enum reg_class cl,\n       return;\n     }\n \n-  if ((type == OP_OUT && action != terminate_write)\n-      || (type != OP_OUT && action == terminate_write))\n+  if ((type == OP_OUT) != (action == terminate_write || action == mark_access))\n     return;\n \n   for (p = &open_chains; *p;)\n@@ -438,7 +442,7 @@ scan_rtx_reg (rtx insn, rtx *loc, enum reg_class cl,\n \t      continue;\n \t    }\n \n-\t  if (action == mark_read)\n+\t  if (action == mark_read || action == mark_access)\n \t    {\n \t      gcc_assert (exact_match);\n \n@@ -509,7 +513,7 @@ scan_rtx_address (rtx insn, rtx *loc, enum reg_class cl,\n   const char *fmt;\n   int i, j;\n \n-  if (action == mark_write)\n+  if (action == mark_write || action == mark_access)\n     return;\n \n   switch (code)\n@@ -866,17 +870,19 @@ build_def_use (basic_block bb)\n \t\tscan_rtx (insn, loc, cl, mark_read, type, 0);\n \t    }\n \n-\t  /* Step 4: Close chains for registers that die here.\n-\t     Also record updates for REG_INC notes.  */\n+\t  /* Step 3B: Record updates for regs in REG_INC notes, and\n+\t     source regs in REG_FRAME_RELATED_EXPR notes.  */\n \t  for (note = REG_NOTES (insn); note; note = XEXP (note, 1))\n-\t    {\n-\t      if (REG_NOTE_KIND (note) == REG_DEAD)\n-\t\tscan_rtx (insn, &XEXP (note, 0), NO_REGS, terminate_dead,\n-\t\t\t  OP_IN, 0);\n-\t      else if (REG_NOTE_KIND (note) == REG_INC)\n-\t\tscan_rtx (insn, &XEXP (note, 0), ALL_REGS, mark_read,\n-\t\t\t  OP_INOUT, 0);\n-\t    }\n+\t    if (REG_NOTE_KIND (note) == REG_INC\n+\t\t|| REG_NOTE_KIND (note) == REG_FRAME_RELATED_EXPR)\n+\t      scan_rtx (insn, &XEXP (note, 0), ALL_REGS, mark_read,\n+\t\t\tOP_INOUT, 0);\n+\n+\t  /* Step 4: Close chains for registers that die here.  */\n+\t  for (note = REG_NOTES (insn); note; note = XEXP (note, 1))\n+\t    if (REG_NOTE_KIND (note) == REG_DEAD)\n+\t      scan_rtx (insn, &XEXP (note, 0), NO_REGS, terminate_dead,\n+\t\t\tOP_IN, 0);\n \n \t  /* Step 4B: If this is a call, any chain live at this point\n \t     requires a caller-saved reg.  */\n@@ -949,6 +955,13 @@ build_def_use (basic_block bb)\n \t\t\t    recog_op_alt[opn][alt].earlyclobber);\n \t      }\n \n+\t  /* Step 6B: Record destination regs in REG_FRAME_RELATED_EXPR\n+\t     notes for update.  */\n+\t  for (note = REG_NOTES (insn); note; note = XEXP (note, 1))\n+\t    if (REG_NOTE_KIND (note) == REG_FRAME_RELATED_EXPR)\n+\t      scan_rtx (insn, &XEXP (note, 0), ALL_REGS, mark_access,\n+\t\t\tOP_INOUT, 0);\n+\n \t  /* Step 7: Close chains for registers that were never\n \t     really used here.  */\n \t  for (note = REG_NOTES (insn); note; note = XEXP (note, 1))"}]}