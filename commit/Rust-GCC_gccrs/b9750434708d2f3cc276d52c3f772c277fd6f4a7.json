{"sha": "b9750434708d2f3cc276d52c3f772c277fd6f4a7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Yjk3NTA0MzQ3MDhkMmYzY2MyNzZkNTJjM2Y3NzJjMjc3ZmQ2ZjRhNw==", "commit": {"author": {"name": "Roger Sayle", "email": "roger@eyesopen.com", "date": "2005-01-23T15:43:56Z"}, "committer": {"name": "Roger Sayle", "email": "sayle@gcc.gnu.org", "date": "2005-01-23T15:43:56Z"}, "message": "combine.c (simplify_logical): Only simplify logical expressions of the form ior(and(x,y),z) by the inverse...\n\n\n\t* combine.c (simplify_logical): Only simplify logical expressions\n\tof the form ior(and(x,y),z) by the inverse distributive law if the\n\tresult is cheaper than the original.\n\nCo-Authored-By: Eric Botcazou <ebotcazou@libertysurf.fr>\n\nFrom-SVN: r94114", "tree": {"sha": "bcf4c83c4d6cd68bd4c7ba659abafda685abfe03", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/bcf4c83c4d6cd68bd4c7ba659abafda685abfe03"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b9750434708d2f3cc276d52c3f772c277fd6f4a7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b9750434708d2f3cc276d52c3f772c277fd6f4a7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b9750434708d2f3cc276d52c3f772c277fd6f4a7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b9750434708d2f3cc276d52c3f772c277fd6f4a7/comments", "author": null, "committer": null, "parents": [{"sha": "6ccf2f7d07a74e74fbf37eb38c7de079a2278ed5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6ccf2f7d07a74e74fbf37eb38c7de079a2278ed5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6ccf2f7d07a74e74fbf37eb38c7de079a2278ed5"}], "stats": {"total": 21, "additions": 15, "deletions": 6}, "files": [{"sha": "68bc9493ac36854610da03e27082de38901e1f20", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b9750434708d2f3cc276d52c3f772c277fd6f4a7/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b9750434708d2f3cc276d52c3f772c277fd6f4a7/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=b9750434708d2f3cc276d52c3f772c277fd6f4a7", "patch": "@@ -1,3 +1,10 @@\n+2005-01-23  Roger Sayle  <roger@eyesopen.com>\n+\t    Eric Botcazou  <ebotcazou@libertysurf.fr>\n+\n+\t* combine.c (simplify_logical): Only simplify logical expressions\n+\tof the form ior(and(x,y),z) by the inverse distributive law if the\n+\tresult is cheaper than the original.\n+\n 2005-01-23  Kazu Hirata  <kazu@cs.umass.edu>\n \n \t* alias.c, c-common.h, c-incpath.c, c-incpath.h, expr.c,"}, {"sha": "0baeb981500e2319af4ab886efc2a47991726451", "filename": "gcc/combine.c", "status": "modified", "additions": 8, "deletions": 6, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b9750434708d2f3cc276d52c3f772c277fd6f4a7/gcc%2Fcombine.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b9750434708d2f3cc276d52c3f772c277fd6f4a7/gcc%2Fcombine.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcombine.c?ref=b9750434708d2f3cc276d52c3f772c277fd6f4a7", "patch": "@@ -5574,26 +5574,28 @@ simplify_logical (rtx x)\n \n       if (GET_CODE (op0) == AND)\n \t{\n-\t  x = apply_distributive_law\n+\t  rtx tmp = apply_distributive_law\n \t    (gen_binary (AND, mode,\n \t\t\t gen_binary (IOR, mode, XEXP (op0, 0), op1),\n \t\t\t gen_binary (IOR, mode, XEXP (op0, 1),\n \t\t\t\t     copy_rtx (op1))));\n \n-\t  if (GET_CODE (x) != IOR)\n-\t    return x;\n+\t  if (GET_CODE (tmp) != IOR\n+\t      && rtx_cost (tmp, SET) < rtx_cost (x, SET))\n+\t    return tmp;\n \t}\n \n       if (GET_CODE (op1) == AND)\n \t{\n-\t  x = apply_distributive_law\n+\t  rtx tmp = apply_distributive_law\n \t    (gen_binary (AND, mode,\n \t\t\t gen_binary (IOR, mode, XEXP (op1, 0), op0),\n \t\t\t gen_binary (IOR, mode, XEXP (op1, 1),\n \t\t\t\t     copy_rtx (op0))));\n \n-\t  if (GET_CODE (x) != IOR)\n-\t    return x;\n+\t  if (GET_CODE (tmp) != IOR\n+\t      && rtx_cost (tmp, SET) < rtx_cost (x, SET))\n+\t    return tmp;\n \t}\n \n       /* Convert (ior (ashift A CX) (lshiftrt A CY)) where CX+CY equals the"}]}