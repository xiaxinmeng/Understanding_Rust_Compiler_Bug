{"sha": "1c4ae4e58752c06aaa99bae702aa0ae2e2123548", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWM0YWU0ZTU4NzUyYzA2YWFhOTliYWU3MDJhYTBhZTJlMjEyMzU0OA==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@adacore.com", "date": "2012-02-15T08:50:11Z"}, "committer": {"name": "Eric Botcazou", "email": "ebotcazou@gcc.gnu.org", "date": "2012-02-15T08:50:11Z"}, "message": "trans.c (Identifier_to_gnu): Move block retrieving the type of the result to the end and execute it for a...\n\n\t* gcc-interface/trans.c (Identifier_to_gnu): Move block retrieving the\n\ttype of the result to the end and execute it for a deferred constant of\n\ta discriminated type whose full view can be elaborated statically.\n\nFrom-SVN: r184259", "tree": {"sha": "0a90fcccf5d321336565980b384bb91857c388f5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0a90fcccf5d321336565980b384bb91857c388f5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1c4ae4e58752c06aaa99bae702aa0ae2e2123548", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1c4ae4e58752c06aaa99bae702aa0ae2e2123548", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1c4ae4e58752c06aaa99bae702aa0ae2e2123548", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1c4ae4e58752c06aaa99bae702aa0ae2e2123548/comments", "author": null, "committer": null, "parents": [{"sha": "0029bafd89b2bd403d96a053acefc2d341b85788", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0029bafd89b2bd403d96a053acefc2d341b85788", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0029bafd89b2bd403d96a053acefc2d341b85788"}], "stats": {"total": 83, "additions": 71, "deletions": 12}, "files": [{"sha": "7c57446c60bede5ec7d49dcf0cbfe44bebdae3fc", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1c4ae4e58752c06aaa99bae702aa0ae2e2123548/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1c4ae4e58752c06aaa99bae702aa0ae2e2123548/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=1c4ae4e58752c06aaa99bae702aa0ae2e2123548", "patch": "@@ -1,3 +1,9 @@\n+2012-02-15  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* gcc-interface/trans.c (Identifier_to_gnu): Move block retrieving the\n+\ttype of the result to the end and execute it for a deferred constant of\n+\ta discriminated type whose full view can be elaborated statically.\n+\n 2012-02-15  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* gcc-interface/trans.c (gnat_to_gnu) <N_Qualified_Expression>: If the"}, {"sha": "52a5ea991731cc12c199baef74c51131a56e6664", "filename": "gcc/ada/gcc-interface/trans.c", "status": "modified", "additions": 18, "deletions": 11, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1c4ae4e58752c06aaa99bae702aa0ae2e2123548/gcc%2Fada%2Fgcc-interface%2Ftrans.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1c4ae4e58752c06aaa99bae702aa0ae2e2123548/gcc%2Fada%2Fgcc-interface%2Ftrans.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgcc-interface%2Ftrans.c?ref=1c4ae4e58752c06aaa99bae702aa0ae2e2123548", "patch": "@@ -1077,17 +1077,6 @@ Identifier_to_gnu (Node_Id gnat_node, tree *gnu_result_type_p)\n \t}\n     }\n \n-  /* The GNAT tree has the type of a function as the type of its result.  Also\n-     use the type of the result if the Etype is a subtype which is nominally\n-     unconstrained.  But remove any padding from the resulting type.  */\n-  if (TREE_CODE (TREE_TYPE (gnu_result)) == FUNCTION_TYPE\n-      || Is_Constr_Subt_For_UN_Aliased (gnat_temp_type))\n-    {\n-      gnu_result_type = TREE_TYPE (gnu_result);\n-      if (TYPE_IS_PADDING_P (gnu_result_type))\n-\tgnu_result_type = TREE_TYPE (TYPE_FIELDS (gnu_result_type));\n-    }\n-\n   /* If we have a constant declaration and its initializer, try to return the\n      latter to avoid the need to call fold in lots of places and the need for\n      elaboration code if this identifier is used as an initializer itself.\n@@ -1120,6 +1109,24 @@ Identifier_to_gnu (Node_Id gnat_node, tree *gnu_result_type_p)\n \tgnu_result = unshare_expr (DECL_INITIAL (gnu_result));\n     }\n \n+  /* The GNAT tree has the type of a function set to its result type, so we\n+     adjust here.  Also use the type of the result if the Etype is a subtype\n+     that is nominally unconstrained.  Likewise if this is a deferred constant\n+     of a discriminated type whose full view can be elaborated statically, to\n+     avoid problematic conversions to the nominal subtype.  But remove any\n+     padding from the resulting type.  */\n+  if (TREE_CODE (TREE_TYPE (gnu_result)) == FUNCTION_TYPE\n+      || Is_Constr_Subt_For_UN_Aliased (gnat_temp_type)\n+      || (Ekind (gnat_temp) == E_Constant\n+\t  && Present (Full_View (gnat_temp))\n+\t  && Has_Discriminants (gnat_temp_type)\n+\t  && TREE_CODE (gnu_result) == CONSTRUCTOR))\n+    {\n+      gnu_result_type = TREE_TYPE (gnu_result);\n+      if (TYPE_IS_PADDING_P (gnu_result_type))\n+\tgnu_result_type = TREE_TYPE (TYPE_FIELDS (gnu_result_type));\n+    }\n+\n   *gnu_result_type_p = gnu_result_type;\n \n   return gnu_result;"}, {"sha": "6f53a287eb5860d140af1dfbdad049995d0db783", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1c4ae4e58752c06aaa99bae702aa0ae2e2123548/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1c4ae4e58752c06aaa99bae702aa0ae2e2123548/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=1c4ae4e58752c06aaa99bae702aa0ae2e2123548", "patch": "@@ -1,6 +1,10 @@\n 2012-02-15  Eric Botcazou  <ebotcazou@adacore.com>\n \n-\t* gnat.dg/volatile10.adb: New case.\n+\t* gnat.dg/discr35.ad[sb]: New test.\n+\n+2012-02-15  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* gnat.dg/volatile10.adb: New test.\n \t* gnat.dg/volatile10_pkg.ads: New helper.\n \n 2012-02-14  Jason Merrill  <jason@redhat.com>"}, {"sha": "8b73773bac0de0532e4408a7f349e2546ff7cbd8", "filename": "gcc/testsuite/gnat.dg/discr35.adb", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1c4ae4e58752c06aaa99bae702aa0ae2e2123548/gcc%2Ftestsuite%2Fgnat.dg%2Fdiscr35.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1c4ae4e58752c06aaa99bae702aa0ae2e2123548/gcc%2Ftestsuite%2Fgnat.dg%2Fdiscr35.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Fdiscr35.adb?ref=1c4ae4e58752c06aaa99bae702aa0ae2e2123548", "patch": "@@ -0,0 +1,17 @@\n+-- { dg-do compile }\r\n+\r\n+package body Discr35 is\r\n+\r\n+   procedure Proc1 is\r\n+     R : Rec2 := Null_Rec2;\r\n+   begin\r\n+     null;\r\n+   end;\r\n+\r\n+   procedure Proc2 is\r\n+     R : Rec2;\r\n+   begin\r\n+     R := Null_Rec2;\r\n+   end;\r\n+\r\n+end Discr35;\r"}, {"sha": "beb2c40fd9ca49da5f79dfe3b015a8b90f967f81", "filename": "gcc/testsuite/gnat.dg/discr35.ads", "status": "added", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1c4ae4e58752c06aaa99bae702aa0ae2e2123548/gcc%2Ftestsuite%2Fgnat.dg%2Fdiscr35.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1c4ae4e58752c06aaa99bae702aa0ae2e2123548/gcc%2Ftestsuite%2Fgnat.dg%2Fdiscr35.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Fdiscr35.ads?ref=1c4ae4e58752c06aaa99bae702aa0ae2e2123548", "patch": "@@ -0,0 +1,25 @@\n+package Discr35 is\r\n+\r\n+  type Rec1 is tagged null record;\r\n+\r\n+  type Enum is (One, Two);\r\n+\r\n+  type Rec2 (D : Enum := One) is\r\n+  record\r\n+    case D is\r\n+      when One => null;\r\n+      when Two => R : Rec1;\r\n+    end case;\r\n+  end record;\r\n+\r\n+   Null_Rec2 : Constant Rec2;\r\n+\r\n+   procedure Proc1;\r\n+\r\n+   procedure Proc2;\r\n+\r\n+private\r\n+\r\n+   Null_Rec2 : Constant Rec2 := (D => One);\r\n+\r\n+end Discr35;\r"}]}