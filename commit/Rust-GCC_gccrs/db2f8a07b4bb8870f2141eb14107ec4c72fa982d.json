{"sha": "db2f8a07b4bb8870f2141eb14107ec4c72fa982d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGIyZjhhMDdiNGJiODg3MGYyMTQxZWIxNDEwN2VjNGM3MmZhOTgyZA==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1995-06-14T20:37:00Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1995-06-14T20:37:00Z"}, "message": "(emit_store_flag): Always set LAST.\n\nFrom-SVN: r9947", "tree": {"sha": "f239868d3637abb17b4f8f294e08c29e5c38feff", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f239868d3637abb17b4f8f294e08c29e5c38feff"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/db2f8a07b4bb8870f2141eb14107ec4c72fa982d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/db2f8a07b4bb8870f2141eb14107ec4c72fa982d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/db2f8a07b4bb8870f2141eb14107ec4c72fa982d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/db2f8a07b4bb8870f2141eb14107ec4c72fa982d/comments", "author": null, "committer": null, "parents": [{"sha": "9fe9dd86e65d79ffa7b4a7d763803e4f71bdaee6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9fe9dd86e65d79ffa7b4a7d763803e4f71bdaee6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9fe9dd86e65d79ffa7b4a7d763803e4f71bdaee6"}], "stats": {"total": 5, "additions": 2, "deletions": 3}, "files": [{"sha": "fc0f4834d44b43813ef96f35f0fb2799ffca42ff", "filename": "gcc/expmed.c", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/db2f8a07b4bb8870f2141eb14107ec4c72fa982d/gcc%2Fexpmed.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/db2f8a07b4bb8870f2141eb14107ec4c72fa982d/gcc%2Fexpmed.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fexpmed.c?ref=db2f8a07b4bb8870f2141eb14107ec4c72fa982d", "patch": "@@ -3851,7 +3851,7 @@ emit_store_flag (target, code, op0, op1, mode, unsignedp, normalizep)\n   enum machine_mode compare_mode;\n   enum machine_mode target_mode = GET_MODE (target);\n   rtx tem;\n-  rtx last = 0;\n+  rtx last = get_last_insn ();\n   rtx pattern, comparison;\n \n   /* If one operand is constant, make it the second one.  Only do this\n@@ -4049,8 +4049,7 @@ emit_store_flag (target, code, op0, op1, mode, unsignedp, normalizep)\n \t}\n     }\n \n-  if (last)\n-    delete_insns_since (last);\n+  delete_insns_since (last);\n \n   /* If expensive optimizations, use different pseudo registers for each\n      insn, instead of reusing the same pseudo.  This leads to better CSE,"}]}