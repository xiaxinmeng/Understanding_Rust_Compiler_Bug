{"sha": "973004cbce925b39f2f6953e36afd2202b9868dc", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTczMDA0Y2JjZTkyNWIzOWYyZjY5NTNlMzZhZmQyMjAyYjk4NjhkYw==", "commit": {"author": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2015-06-01T12:45:14Z"}, "committer": {"name": "Martin Liska", "email": "marxin@gcc.gnu.org", "date": "2015-06-01T12:45:14Z"}, "message": "Change use to type-based pool allocator in\n\n\t* sched-deps.c (create_dep_node): Use new type-based pool allocator.\n\t(delete_dep_node): Likewise.\n\t(create_deps_list): Likewise.\n\t(free_deps_list): Likewise.\n\t(sched_deps_init): Likewise.\n\t(sched_deps_finish): Likewise.\n\nFrom-SVN: r223962", "tree": {"sha": "c2d08a3bf8829ed9c5c57d927ed592cd4c88c6cf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c2d08a3bf8829ed9c5c57d927ed592cd4c88c6cf"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/973004cbce925b39f2f6953e36afd2202b9868dc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/973004cbce925b39f2f6953e36afd2202b9868dc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/973004cbce925b39f2f6953e36afd2202b9868dc", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/973004cbce925b39f2f6953e36afd2202b9868dc/comments", "author": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "5c7337c58f152e35a823cc51228efa4b06c06618", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5c7337c58f152e35a823cc51228efa4b06c06618", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5c7337c58f152e35a823cc51228efa4b06c06618"}], "stats": {"total": 32, "additions": 21, "deletions": 11}, "files": [{"sha": "4dbe44c293ecd94c85d24ae870e403b4b387ca31", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/973004cbce925b39f2f6953e36afd2202b9868dc/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/973004cbce925b39f2f6953e36afd2202b9868dc/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=973004cbce925b39f2f6953e36afd2202b9868dc", "patch": "@@ -1,3 +1,12 @@\n+2015-06-01  Martin Liska  <mliska@suse.cz>\n+\n+\t* sched-deps.c (create_dep_node): Use new type-based pool allocator.\n+\t(delete_dep_node): Likewise.\n+\t(create_deps_list): Likewise.\n+\t(free_deps_list): Likewise.\n+\t(sched_deps_init): Likewise.\n+\t(sched_deps_finish): Likewise.\n+\n 2015-06-01  Martin Liska  <mliska@suse.cz>\n \n \t* regcprop.c (free_debug_insn_changes): Use new type-based pool allocator."}, {"sha": "f65431116f16594f6717f64d973390ea77e5bb12", "filename": "gcc/sched-deps.c", "status": "modified", "additions": 12, "deletions": 11, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/973004cbce925b39f2f6953e36afd2202b9868dc/gcc%2Fsched-deps.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/973004cbce925b39f2f6953e36afd2202b9868dc/gcc%2Fsched-deps.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fsched-deps.c?ref=973004cbce925b39f2f6953e36afd2202b9868dc", "patch": "@@ -334,7 +334,7 @@ dep_link_is_detached_p (dep_link_t link)\n }\n \n /* Pool to hold all dependency nodes (dep_node_t).  */\n-static alloc_pool dn_pool;\n+static pool_allocator<_dep_node> *dn_pool;\n \n /* Number of dep_nodes out there.  */\n static int dn_pool_diff = 0;\n@@ -343,7 +343,7 @@ static int dn_pool_diff = 0;\n static dep_node_t\n create_dep_node (void)\n {\n-  dep_node_t n = (dep_node_t) pool_alloc (dn_pool);\n+  dep_node_t n = dn_pool->allocate ();\n   dep_link_t back = DEP_NODE_BACK (n);\n   dep_link_t forw = DEP_NODE_FORW (n);\n \n@@ -371,11 +371,11 @@ delete_dep_node (dep_node_t n)\n \n   --dn_pool_diff;\n \n-  pool_free (dn_pool, n);\n+  dn_pool->remove (n);\n }\n \n /* Pool to hold dependencies lists (deps_list_t).  */\n-static alloc_pool dl_pool;\n+static pool_allocator<_deps_list> *dl_pool;\n \n /* Number of deps_lists out there.  */\n static int dl_pool_diff = 0;\n@@ -393,7 +393,7 @@ deps_list_empty_p (deps_list_t l)\n static deps_list_t\n create_deps_list (void)\n {\n-  deps_list_t l = (deps_list_t) pool_alloc (dl_pool);\n+  deps_list_t l = dl_pool->allocate ();\n \n   DEPS_LIST_FIRST (l) = NULL;\n   DEPS_LIST_N_LINKS (l) = 0;\n@@ -410,7 +410,7 @@ free_deps_list (deps_list_t l)\n \n   --dl_pool_diff;\n \n-  pool_free (dl_pool, l);\n+  dl_pool->remove (l);\n }\n \n /* Return true if there is no dep_nodes and deps_lists out there.\n@@ -4075,10 +4075,10 @@ sched_deps_init (bool global_p)\n \n   if (global_p)\n     {\n-      dl_pool = create_alloc_pool (\"deps_list\", sizeof (struct _deps_list),\n+      dl_pool = new pool_allocator<_deps_list> (\"deps_list\",\n                                    /* Allocate lists for one block at a time.  */\n                                    insns_in_block);\n-      dn_pool = create_alloc_pool (\"dep_node\", sizeof (struct _dep_node),\n+      dn_pool = new pool_allocator<_dep_node> (\"dep_node\",\n                                    /* Allocate nodes for one block at a time.\n                                       We assume that average insn has\n                                       5 producers.  */\n@@ -4128,9 +4128,10 @@ void\n sched_deps_finish (void)\n {\n   gcc_assert (deps_pools_are_empty_p ());\n-  free_alloc_pool_if_empty (&dn_pool);\n-  free_alloc_pool_if_empty (&dl_pool);\n-  gcc_assert (dn_pool == NULL && dl_pool == NULL);\n+  dn_pool->release_if_empty ();\n+  dn_pool = NULL;\n+  dl_pool->release_if_empty ();\n+  dl_pool = NULL;\n \n   h_d_i_d.release ();\n   cache_size = 0;"}]}