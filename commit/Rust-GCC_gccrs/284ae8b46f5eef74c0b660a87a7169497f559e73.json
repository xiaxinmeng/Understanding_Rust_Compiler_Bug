{"sha": "284ae8b46f5eef74c0b660a87a7169497f559e73", "node_id": "C_kwDOANBUbNoAKDI4NGFlOGI0NmY1ZWVmNzRjMGI2NjBhODdhNzE2OTQ5N2Y1NTllNzM", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2022-06-03T16:35:12Z"}, "committer": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2022-06-03T17:44:44Z"}, "message": "c++: redeclared hidden friend [PR105761]\n\nHere, when we see the second declaration of f we match it with the first\none, copy over DECL_TEMPLATE_INFO, and then try to use it when parsing the\ndefinition, leading to confusion.\n\n\tPR c++/105761\n\ngcc/cp/ChangeLog:\n\n\t* decl.cc (duplicate_decls): Don't copy DECL_TEMPLATE_INFO\n\tfrom a hidden friend.\n\ngcc/testsuite/ChangeLog:\n\n\t* g++.dg/cpp1y/auto-fn64.C: New test.", "tree": {"sha": "7360cdd27f31c55d3015b8b8591880ddc25c508b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7360cdd27f31c55d3015b8b8591880ddc25c508b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/284ae8b46f5eef74c0b660a87a7169497f559e73", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/284ae8b46f5eef74c0b660a87a7169497f559e73", "html_url": "https://github.com/Rust-GCC/gccrs/commit/284ae8b46f5eef74c0b660a87a7169497f559e73", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/284ae8b46f5eef74c0b660a87a7169497f559e73/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "44a5bd6d933d86ed988fc4695aa00f122cf83eb4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/44a5bd6d933d86ed988fc4695aa00f122cf83eb4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/44a5bd6d933d86ed988fc4695aa00f122cf83eb4"}], "stats": {"total": 24, "additions": 22, "deletions": 2}, "files": [{"sha": "90b12d69414c851966bce0988f9ddeaa1a0bcde9", "filename": "gcc/cp/decl.cc", "status": "modified", "additions": 10, "deletions": 2, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/284ae8b46f5eef74c0b660a87a7169497f559e73/gcc%2Fcp%2Fdecl.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/284ae8b46f5eef74c0b660a87a7169497f559e73/gcc%2Fcp%2Fdecl.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fdecl.cc?ref=284ae8b46f5eef74c0b660a87a7169497f559e73", "patch": "@@ -2654,16 +2654,24 @@ duplicate_decls (tree newdecl, tree olddecl, bool hiding, bool was_hidden)\n       if (LANG_DECL_HAS_MIN (newdecl))\n \t{\n \t  DECL_ACCESS (newdecl) = DECL_ACCESS (olddecl);\n-\t  if (DECL_TEMPLATE_INFO (newdecl))\n+\t  if (new_defines_function\n+\t      && DECL_TEMPLATE_INFO (olddecl)\n+\t      && DECL_UNIQUE_FRIEND_P (DECL_TEMPLATE_RESULT\n+\t\t\t\t       (DECL_TI_TEMPLATE (olddecl))))\n+\t    /* Don't copy template info from a non-template friend declaration\n+\t       in a class template (PR105761).  */;\n+\t  else if (DECL_TEMPLATE_INFO (newdecl))\n \t    {\n \t      new_template_info = DECL_TEMPLATE_INFO (newdecl);\n \t      if (DECL_TEMPLATE_INSTANTIATION (olddecl)\n \t\t  && DECL_TEMPLATE_SPECIALIZATION (newdecl))\n \t\t/* Remember the presence of explicit specialization args.  */\n \t\tTINFO_USED_TEMPLATE_ID (DECL_TEMPLATE_INFO (olddecl))\n \t\t  = TINFO_USED_TEMPLATE_ID (new_template_info);\n+\t      DECL_TEMPLATE_INFO (newdecl) = DECL_TEMPLATE_INFO (olddecl);\n \t    }\n-\t  DECL_TEMPLATE_INFO (newdecl) = DECL_TEMPLATE_INFO (olddecl);\n+\t  else\n+\t    DECL_TEMPLATE_INFO (newdecl) = DECL_TEMPLATE_INFO (olddecl);\n \t}\n \n       if (DECL_DECLARES_FUNCTION_P (newdecl))"}, {"sha": "13f3175da45bcb96d98ae44949ccba858f6a2477", "filename": "gcc/testsuite/g++.dg/cpp1y/auto-fn64.C", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/284ae8b46f5eef74c0b660a87a7169497f559e73/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1y%2Fauto-fn64.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/284ae8b46f5eef74c0b660a87a7169497f559e73/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1y%2Fauto-fn64.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1y%2Fauto-fn64.C?ref=284ae8b46f5eef74c0b660a87a7169497f559e73", "patch": "@@ -0,0 +1,12 @@\n+// PR c++/105761\n+// { dg-do compile { target c++14 } }\n+// { dg-additional-options -Wno-non-template-friend }\n+\n+template <class T>\n+class X {\n+  friend auto f(X);\n+};\n+\n+struct Y : X<long> {\n+  friend auto f(X) { return 0L; }\n+};"}]}