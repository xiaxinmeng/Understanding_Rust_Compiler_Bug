{"sha": "c01d9cfe840a1b9c5e6fa68f5af4fe321263bc7f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzAxZDljZmU4NDBhMWI5YzVlNmZhNjhmNWFmNGZlMzIxMjYzYmM3Zg==", "commit": {"author": {"name": "Jozef Lawrynowicz", "email": "jozef.l@mittosystems.com", "date": "2019-10-21T20:44:16Z"}, "committer": {"name": "Jozef Lawrynowicz", "email": "jozefl@gcc.gnu.org", "date": "2019-10-21T20:44:16Z"}, "message": "expr.c (expand_expr_real_2): Don't widen constant op1 when expanding widening multiplication.\n\n2019-10-21  Jozef Lawrynowicz  <jozef.l@mittosystems.com>\n\n\t* expr.c (expand_expr_real_2): Don't widen constant op1 when expanding\n\twidening multiplication.\n\nFrom-SVN: r277271", "tree": {"sha": "67258b14e427fcd02c3fd20a5555a32becd85329", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/67258b14e427fcd02c3fd20a5555a32becd85329"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c01d9cfe840a1b9c5e6fa68f5af4fe321263bc7f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c01d9cfe840a1b9c5e6fa68f5af4fe321263bc7f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c01d9cfe840a1b9c5e6fa68f5af4fe321263bc7f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c01d9cfe840a1b9c5e6fa68f5af4fe321263bc7f/comments", "author": {"login": "jozefl-mitto", "id": 36524004, "node_id": "MDQ6VXNlcjM2NTI0MDA0", "avatar_url": "https://avatars.githubusercontent.com/u/36524004?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jozefl-mitto", "html_url": "https://github.com/jozefl-mitto", "followers_url": "https://api.github.com/users/jozefl-mitto/followers", "following_url": "https://api.github.com/users/jozefl-mitto/following{/other_user}", "gists_url": "https://api.github.com/users/jozefl-mitto/gists{/gist_id}", "starred_url": "https://api.github.com/users/jozefl-mitto/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jozefl-mitto/subscriptions", "organizations_url": "https://api.github.com/users/jozefl-mitto/orgs", "repos_url": "https://api.github.com/users/jozefl-mitto/repos", "events_url": "https://api.github.com/users/jozefl-mitto/events{/privacy}", "received_events_url": "https://api.github.com/users/jozefl-mitto/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "debf1662d1f0cbe54198119f1a74baf46ad6a41a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/debf1662d1f0cbe54198119f1a74baf46ad6a41a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/debf1662d1f0cbe54198119f1a74baf46ad6a41a"}], "stats": {"total": 8, "additions": 5, "deletions": 3}, "files": [{"sha": "2aa5536cf329fca1129c3c690cd584049ad1abee", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c01d9cfe840a1b9c5e6fa68f5af4fe321263bc7f/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c01d9cfe840a1b9c5e6fa68f5af4fe321263bc7f/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=c01d9cfe840a1b9c5e6fa68f5af4fe321263bc7f", "patch": "@@ -1,3 +1,8 @@\n+2019-10-21  Jozef Lawrynowicz  <jozef.l@mittosystems.com>\n+\n+\t* expr.c (expand_expr_real_2): Don't widen constant op1 when expanding\n+\twidening multiplication.\n+\n 2019-10-21  Richard Earnshaw  <rearnsha@arm.com>\n \n \t* config/arm/iterators.md (t2_binop0): Fix typo in comment."}, {"sha": "476c6865f20828fc68f455e70d4874eaabd9d08d", "filename": "gcc/expr.c", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c01d9cfe840a1b9c5e6fa68f5af4fe321263bc7f/gcc%2Fexpr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c01d9cfe840a1b9c5e6fa68f5af4fe321263bc7f/gcc%2Fexpr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fexpr.c?ref=c01d9cfe840a1b9c5e6fa68f5af4fe321263bc7f", "patch": "@@ -8954,9 +8954,6 @@ expand_expr_real_2 (sepops ops, rtx target, machine_mode tmode,\n \t\t     != INTEGER_CST check.  Handle it.  */\n \t\t  if (GET_MODE (op0) == VOIDmode && GET_MODE (op1) == VOIDmode)\n \t\t    goto widen_mult_const;\n-\t\t  if (TREE_CODE (treeop1) == INTEGER_CST)\n-\t\t    op1 = convert_modes (mode, word_mode, op1,\n-\t\t\t\t\t TYPE_UNSIGNED (TREE_TYPE (treeop1)));\n \t\t  temp = expand_binop (mode, other_optab, op0, op1, target,\n \t\t\t\t       unsignedp, OPTAB_LIB_WIDEN);\n \t\t  hipart = gen_highpart (word_mode, temp);"}]}