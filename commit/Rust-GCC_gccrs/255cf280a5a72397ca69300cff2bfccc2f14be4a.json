{"sha": "255cf280a5a72397ca69300cff2bfccc2f14be4a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjU1Y2YyODBhNWE3MjM5N2NhNjkzMDBjZmYyYmZjY2MyZjE0YmU0YQ==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1994-03-31T01:36:58Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1994-03-31T01:36:58Z"}, "message": "(reload): Fix typo in previous change.\n\nFrom-SVN: r6929", "tree": {"sha": "2db47bb42757501c0829baaccf1bd631f757a4ab", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2db47bb42757501c0829baaccf1bd631f757a4ab"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/255cf280a5a72397ca69300cff2bfccc2f14be4a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/255cf280a5a72397ca69300cff2bfccc2f14be4a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/255cf280a5a72397ca69300cff2bfccc2f14be4a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/255cf280a5a72397ca69300cff2bfccc2f14be4a/comments", "author": null, "committer": null, "parents": [{"sha": "a5d54cc5702bdd36426469f3aa2e4fbfc3f223b7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a5d54cc5702bdd36426469f3aa2e4fbfc3f223b7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a5d54cc5702bdd36426469f3aa2e4fbfc3f223b7"}], "stats": {"total": 8, "additions": 4, "deletions": 4}, "files": [{"sha": "85960c493ff4bda29d758d1add196bb2a0e45f95", "filename": "gcc/reload1.c", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/255cf280a5a72397ca69300cff2bfccc2f14be4a/gcc%2Freload1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/255cf280a5a72397ca69300cff2bfccc2f14be4a/gcc%2Freload1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Freload1.c?ref=255cf280a5a72397ca69300cff2bfccc2f14be4a", "patch": "@@ -1158,10 +1158,10 @@ reload (first, global, dumpfile)\n \t\t  if (size == 1)\n \t\t    for (j = 0; j < n_reloads; j++)\n \t\t      if ((CLASS_MAX_NREGS (reload_reg_class[j],\n-\t\t\t\t\t    (GET_MODE_SIZE (reload_outmode[i])\n-\t\t\t\t\t     > GET_MODE_SIZE (reload_inmode[i]))\n-\t\t\t\t\t    ? reload_outmode[i]\n-\t\t\t\t\t    : reload_inmode[i])\n+\t\t\t\t\t    (GET_MODE_SIZE (reload_outmode[j])\n+\t\t\t\t\t     > GET_MODE_SIZE (reload_inmode[j]))\n+\t\t\t\t\t    ? reload_outmode[j]\n+\t\t\t\t\t    : reload_inmode[j])\n \t\t\t   > 1)\n \t\t\t  && reloads_conflict (i, j)\n \t\t\t  && reg_classes_intersect_p (class,"}]}