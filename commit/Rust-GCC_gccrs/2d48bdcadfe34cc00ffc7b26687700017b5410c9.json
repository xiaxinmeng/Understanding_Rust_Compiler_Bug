{"sha": "2d48bdcadfe34cc00ffc7b26687700017b5410c9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmQ0OGJkY2FkZmUzNGNjMDBmZmM3YjI2Njg3NzAwMDE3YjU0MTBjOQ==", "commit": {"author": {"name": "Dodji Seketeli", "email": "dodji@redhat.com", "date": "2012-04-30T11:42:25Z"}, "committer": {"name": "Dodji Seketeli", "email": "dodji@gcc.gnu.org", "date": "2012-04-30T11:42:25Z"}, "message": "Fix -Wuninitialized for -ftrack-macro-expansion\n\nBesides the warning emitted by warn_uninit, this function wants\nto hint the user at where the uninitialized variable was declared, for\ncases where the declaration location is outside the current function.\n\nNow that expand_location expands to the location that is in the main\nsource file (even for -ftrack-macro-expansion) the hinting part was\nnot working well for cases where the variable is declared in a macro\n(outside the function), which is then expanded in the function.\n\nSo I had to adjust warn_uninit a little bit to make it consider the\nspelling location of the variable declaration.\n\nI have fixed the test gcc.dg/cpp/pragma-diagnostic-2.c on which I\nbelieve gcc shouldn't emit any error.\n\nHere is the new output on that test:\n\n=~=\ngcc.dg/cpp/pragma-diagnostic-2.c: In function 'g':\ngcc.dg/cpp/pragma-diagnostic-2.c:10:5: warning: 'a' is used uninitialized in this function [-Wuninitialized]\ngcc.dg/cpp/pragma-diagnostic-2.c:9:7: note: 'a' was declared here\ngcc.dg/cpp/pragma-diagnostic-2.c:9:7: note: in expansion of macro 'CODE_WITH_WARNING'\ngcc.dg/cpp/pragma-diagnostic-2.c:17:3: note: expanded from here\ngcc.dg/cpp/pragma-diagnostic-2.c: In function 'h':\ngcc.dg/cpp/pragma-diagnostic-2.c:10:5: warning: 'a' is used uninitialized in this function [-Wuninitialized]\ngcc.dg/cpp/pragma-diagnostic-2.c:9:7: note: 'a' was declared here\ngcc.dg/cpp/pragma-diagnostic-2.c:9:7: note: in expansion of macro 'CODE_WITH_WARNING'\ngcc.dg/cpp/pragma-diagnostic-2.c:27:3: note: expanded from here\n=~=\n\nTested and bootstrapped on x86_64-unknown-linux-gnu against trunk.\n\nNote that the bootstrap with -ftrack-macro-expansion turned on\nexhibits other separate issues that are addressed in subsequent\npatches.  This patch just fixes one class of problems.\n\nThe patch does pass bootstrap with -ftrack-macro-expansion turned off,\nthough.\n\ngcc/\n\t* tree-ssa.c (warn_uninit): Use the spelling location of the\n\tvariable declaration.  Use linemap_location_before_p for source\n\tlocations.\n\ngcc/testsuite/\n\n\t* gcc.dg/cpp/pragma-diagnostic-2.c:  Fix this.\n\nFrom-SVN: r186971", "tree": {"sha": "cf4e13328cba84e16a72f7c69d9cbeae7e7b0b42", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/cf4e13328cba84e16a72f7c69d9cbeae7e7b0b42"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2d48bdcadfe34cc00ffc7b26687700017b5410c9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2d48bdcadfe34cc00ffc7b26687700017b5410c9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2d48bdcadfe34cc00ffc7b26687700017b5410c9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2d48bdcadfe34cc00ffc7b26687700017b5410c9/comments", "author": null, "committer": null, "parents": [{"sha": "c4ca1a09618ff751220fd01d81b0ca62e6cdb735", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c4ca1a09618ff751220fd01d81b0ca62e6cdb735", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c4ca1a09618ff751220fd01d81b0ca62e6cdb735"}], "stats": {"total": 33, "additions": 21, "deletions": 12}, "files": [{"sha": "470a1a5f29e76a8fb790c45caacd5d1498bc7a0d", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2d48bdcadfe34cc00ffc7b26687700017b5410c9/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2d48bdcadfe34cc00ffc7b26687700017b5410c9/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=2d48bdcadfe34cc00ffc7b26687700017b5410c9", "patch": "@@ -1,5 +1,10 @@\n 2012-04-30  Dodji Seketeli  <dodji@redhat.com>\n \n+\tFix -Wuninitialized for -ftrack-macro-expansion\n+\t* tree-ssa.c (warn_uninit): Use the spelling location of the\n+\tvariable declaration.  Use linemap_location_before_p for source\n+\tlocations.\n+\n \tStrip \"<built-in>\" loc from displayed expansion context\n \t* input.c (expand_location_1): When expanding to spelling location\n \tin a context of a macro expansion, skip reserved system header"}, {"sha": "0b03515f96e518b489ad5a87c2806ef454260644", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2d48bdcadfe34cc00ffc7b26687700017b5410c9/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2d48bdcadfe34cc00ffc7b26687700017b5410c9/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=2d48bdcadfe34cc00ffc7b26687700017b5410c9", "patch": "@@ -1,5 +1,8 @@\n 2012-04-30  Dodji Seketeli  <dodji@redhat.com>\n \n+\tFix -Wuninitialized for -ftrack-macro-expansion\n+\t* gcc.dg/cpp/pragma-diagnostic-2.c: Fix this.\n+\n \tStrip \"<built-in>\" loc from displayed expansion context\n \t* g++.dg/warn/Wconversion-real-integer2.C: New test.\n \t* g++.dg/warn/Wconversion-real-integer-3.C: Likewise."}, {"sha": "57f3f01939ad66f622fc7543c8c52616134b2e82", "filename": "gcc/testsuite/gcc.dg/cpp/pragma-diagnostic-2.c", "status": "modified", "additions": 2, "deletions": 8, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2d48bdcadfe34cc00ffc7b26687700017b5410c9/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Fpragma-diagnostic-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2d48bdcadfe34cc00ffc7b26687700017b5410c9/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Fpragma-diagnostic-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Fpragma-diagnostic-2.c?ref=2d48bdcadfe34cc00ffc7b26687700017b5410c9", "patch": "@@ -6,8 +6,8 @@\n void f (unsigned);\n \n #define CODE_WITH_WARNING \\\n-  int a; /* { dg-message \"expansion|declared here\" } */  \\\n-  f (a)\t /* { dg-message \"expansion\" } */\n+  int a; /* { dg-message \"was declared here\" } */\t \\\n+  f (a)\t /* { dg-warning \"used uninitialized\" } */\n \n #pragma GCC diagnostic ignored \"-Wuninitialized\"\n \n@@ -26,9 +26,3 @@ h (void)\n {\n   CODE_WITH_WARNING;\t\t/* { dg-message \"expanded\" } */\n }\n-\n-/*\n-  { dg-message \"some warnings being treated as errors\" \"\" {target *-*-*} 0 }\n-*/\n-\n-/* { dg-error \"uninitialized\" \"\" { target *-*-* } { 10 } } */"}, {"sha": "32a01fb1eeff1cc14eef5e9e61e57c8e912f9681", "filename": "gcc/tree-ssa.c", "status": "modified", "additions": 11, "deletions": 4, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2d48bdcadfe34cc00ffc7b26687700017b5410c9/gcc%2Ftree-ssa.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2d48bdcadfe34cc00ffc7b26687700017b5410c9/gcc%2Ftree-ssa.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa.c?ref=2d48bdcadfe34cc00ffc7b26687700017b5410c9", "patch": "@@ -1613,7 +1613,7 @@ warn_uninit (enum opt_code wc, tree t,\n \t     tree expr, tree var, const char *gmsgid, void *data)\n {\n   gimple context = (gimple) data;\n-  location_t location;\n+  location_t location, cfun_loc;\n   expanded_location xloc, floc;\n \n   if (!ssa_undefined_value_p (t))\n@@ -1631,17 +1631,24 @@ warn_uninit (enum opt_code wc, tree t,\n   location = (context != NULL && gimple_has_location (context))\n \t     ? gimple_location (context)\n \t     : DECL_SOURCE_LOCATION (var);\n+  location = linemap_resolve_location (line_table, location,\n+\t\t\t\t       LRK_SPELLING_LOCATION,\n+\t\t\t\t       NULL);\n+  cfun_loc = DECL_SOURCE_LOCATION (cfun->decl);\n   xloc = expand_location (location);\n-  floc = expand_location (DECL_SOURCE_LOCATION (cfun->decl));\n+  floc = expand_location (cfun_loc);\n   if (warning_at (location, wc, gmsgid, expr))\n     {\n       TREE_NO_WARNING (expr) = 1;\n \n       if (location == DECL_SOURCE_LOCATION (var))\n \treturn;\n       if (xloc.file != floc.file\n-\t  || xloc.line < floc.line\n-\t  || xloc.line > LOCATION_LINE (cfun->function_end_locus))\n+\t  || linemap_location_before_p (line_table,\n+\t\t\t\t\tlocation, cfun_loc)\n+\t  || linemap_location_before_p (line_table,\n+\t\t\t\t\tcfun->function_end_locus,\n+\t\t\t\t\tlocation))\n \tinform (DECL_SOURCE_LOCATION (var), \"%qD was declared here\", var);\n     }\n }"}]}