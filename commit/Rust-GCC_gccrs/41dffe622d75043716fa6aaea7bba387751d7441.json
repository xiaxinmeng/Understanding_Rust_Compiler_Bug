{"sha": "41dffe622d75043716fa6aaea7bba387751d7441", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDFkZmZlNjIyZDc1MDQzNzE2ZmE2YWFlYTdiYmEzODc3NTFkNzQ0MQ==", "commit": {"author": {"name": "Mark Mitchell", "email": "mark@codesourcery.com", "date": "2004-02-13T20:11:35Z"}, "committer": {"name": "Mark Mitchell", "email": "mmitchel@gcc.gnu.org", "date": "2004-02-13T20:11:35Z"}, "message": "re PR c++/14083 (ICE in conditional expression operator with throw)\n\n\tPR c++/14083\n\t* call.c (build_conditional_expr): Call force_rvalue on the\n\tnon-void operand in the case that one result is a throw-expression\n\tand the other is not.\n\n\tPR c++/14083\n\t* g++.dg/eh/cond2.C: New test.\n\nFrom-SVN: r77768", "tree": {"sha": "0203969aadadf5624994ab772a5d5415a8c1d75f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0203969aadadf5624994ab772a5d5415a8c1d75f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/41dffe622d75043716fa6aaea7bba387751d7441", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/41dffe622d75043716fa6aaea7bba387751d7441", "html_url": "https://github.com/Rust-GCC/gccrs/commit/41dffe622d75043716fa6aaea7bba387751d7441", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/41dffe622d75043716fa6aaea7bba387751d7441/comments", "author": null, "committer": null, "parents": [{"sha": "1daa84b6e2fee1548afaabb0d99fc797f1aa0f1c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1daa84b6e2fee1548afaabb0d99fc797f1aa0f1c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1daa84b6e2fee1548afaabb0d99fc797f1aa0f1c"}], "stats": {"total": 49, "additions": 45, "deletions": 4}, "files": [{"sha": "89d8edc8d8183424d538a6644e0217f8c9d2738c", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/41dffe622d75043716fa6aaea7bba387751d7441/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/41dffe622d75043716fa6aaea7bba387751d7441/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=41dffe622d75043716fa6aaea7bba387751d7441", "patch": "@@ -1,3 +1,10 @@\n+2004-02-13  Mark Mitchell  <mark@codesourcery.com>\n+\n+\tPR c++/14083\n+\t* call.c (build_conditional_expr): Call force_rvalue on the\n+\tnon-void operand in the case that one result is a throw-expression\n+\tand the other is not.\n+\n 2004-02-13  Ian Lance Taylor  <ian@wasabisystems.com>\n \n \tPR c++/9851"}, {"sha": "ba3b2287f85c3bec4a2c73555e50fb250ea27d52", "filename": "gcc/cp/call.c", "status": "modified", "additions": 14, "deletions": 4, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/41dffe622d75043716fa6aaea7bba387751d7441/gcc%2Fcp%2Fcall.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/41dffe622d75043716fa6aaea7bba387751d7441/gcc%2Fcp%2Fcall.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcall.c?ref=41dffe622d75043716fa6aaea7bba387751d7441", "patch": "@@ -3179,10 +3179,20 @@ build_conditional_expr (tree arg1, tree arg2, tree arg3)\n \n \t --Both the second and the third operands have type void; the\n \t   result is of type void and is an rvalue.  */\n-      if ((TREE_CODE (arg2) == THROW_EXPR)\n-\t  ^ (TREE_CODE (arg3) == THROW_EXPR))\n-\tresult_type = ((TREE_CODE (arg2) == THROW_EXPR) \n-\t\t       ? arg3_type : arg2_type);\n+      if (TREE_CODE (arg2) == THROW_EXPR \n+\t  && TREE_CODE (arg3) != THROW_EXPR)\n+\t{\n+\t  arg3 = force_rvalue (arg3);\n+\t  arg3_type = TREE_TYPE (arg3);\n+\t  result_type = arg3_type;\n+\t}\n+      else if (TREE_CODE (arg2) != THROW_EXPR \n+\t       && TREE_CODE (arg3) == THROW_EXPR)\n+\t{\n+\t  arg2 = force_rvalue (arg2);\n+\t  arg2_type = TREE_TYPE (arg2);\n+\t  result_type = arg2_type;\n+\t}\n       else if (VOID_TYPE_P (arg2_type) && VOID_TYPE_P (arg3_type))\n \tresult_type = void_type_node;\n       else"}, {"sha": "dd136645c6d507cb25a1691414da51d7b1af4880", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/41dffe622d75043716fa6aaea7bba387751d7441/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/41dffe622d75043716fa6aaea7bba387751d7441/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=41dffe622d75043716fa6aaea7bba387751d7441", "patch": "@@ -1,3 +1,8 @@\n+2004-02-13  Mark Mitchell  <mark@codesourcery.com>\n+\n+\tPR c++/14083\n+\t* g++.dg/eh/cond2.C: New test.\n+\n 2004-02-12  Alan Modra  <amodra@bigpond.net.au>\n \n \t* gcc.dg/debug/20020327-1.c: Disable for powerpc64."}, {"sha": "e4b45f7a46f8289c1e70e3ea78770f472534466d", "filename": "gcc/testsuite/g++.dg/eh/cond2.C", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/41dffe622d75043716fa6aaea7bba387751d7441/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Feh%2Fcond2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/41dffe622d75043716fa6aaea7bba387751d7441/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Feh%2Fcond2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Feh%2Fcond2.C?ref=41dffe622d75043716fa6aaea7bba387751d7441", "patch": "@@ -0,0 +1,19 @@\n+// PR c++/14083\n+\n+struct A { \n+  A() throw() { } \n+  A(const A&) throw() { } \n+}; \n+ \n+struct X { \n+  A a; \n+  X(); \n+  X& operator=(const X& __str); \n+}; \n+ \n+bool operator==(const X& __lhs, const char* __rhs); \n+        \n+int main() { \n+  X x; \n+  x==\"\" ? x : throw 1; \n+}"}]}