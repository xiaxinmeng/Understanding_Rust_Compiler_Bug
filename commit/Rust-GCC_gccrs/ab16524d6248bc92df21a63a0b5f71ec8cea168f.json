{"sha": "ab16524d6248bc92df21a63a0b5f71ec8cea168f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWIxNjUyNGQ2MjQ4YmM5MmRmMjFhNjNhMGI1ZjcxZWM4Y2VhMTY4Zg==", "commit": {"author": {"name": "Per Bothner", "email": "per@bothner.com", "date": "2004-03-20T06:06:12Z"}, "committer": {"name": "Per Bothner", "email": "bothner@gcc.gnu.org", "date": "2004-03-20T06:06:12Z"}, "message": "configure.in: FILE variable overrides FLATFORM when linking natFileChannelXXX.cc.\n\n\n\t* configure.in: FILE variable  overrides FLATFORM when linking\n\tnatFileChannelXXX.cc.\n\n\t* gnu/java/nio/channels/natFileChannelEcos.cc (diag_write):  Restored.\n\t(write):  Call diag_write, as in old natFileDescriptorEcos.cc.\n\nFrom-SVN: r79731", "tree": {"sha": "b492db8b5d3c0209d315e66e056abc85685e5041", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b492db8b5d3c0209d315e66e056abc85685e5041"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ab16524d6248bc92df21a63a0b5f71ec8cea168f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ab16524d6248bc92df21a63a0b5f71ec8cea168f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ab16524d6248bc92df21a63a0b5f71ec8cea168f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ab16524d6248bc92df21a63a0b5f71ec8cea168f/comments", "author": {"login": "PerBothner", "id": 10293361, "node_id": "MDQ6VXNlcjEwMjkzMzYx", "avatar_url": "https://avatars.githubusercontent.com/u/10293361?v=4", "gravatar_id": "", "url": "https://api.github.com/users/PerBothner", "html_url": "https://github.com/PerBothner", "followers_url": "https://api.github.com/users/PerBothner/followers", "following_url": "https://api.github.com/users/PerBothner/following{/other_user}", "gists_url": "https://api.github.com/users/PerBothner/gists{/gist_id}", "starred_url": "https://api.github.com/users/PerBothner/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/PerBothner/subscriptions", "organizations_url": "https://api.github.com/users/PerBothner/orgs", "repos_url": "https://api.github.com/users/PerBothner/repos", "events_url": "https://api.github.com/users/PerBothner/events{/privacy}", "received_events_url": "https://api.github.com/users/PerBothner/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "d1a6adeb6743311f37affcce0a15df6f77a325a5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d1a6adeb6743311f37affcce0a15df6f77a325a5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d1a6adeb6743311f37affcce0a15df6f77a325a5"}], "stats": {"total": 34, "additions": 29, "deletions": 5}, "files": [{"sha": "0dee9bef5ade54756b66adbd5b8ec41e17977bae", "filename": "libjava/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab16524d6248bc92df21a63a0b5f71ec8cea168f/libjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab16524d6248bc92df21a63a0b5f71ec8cea168f/libjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog?ref=ab16524d6248bc92df21a63a0b5f71ec8cea168f", "patch": "@@ -1,3 +1,11 @@\n+2004-03-19  Per Bothner  <per@bothner.com>\n+\n+\t* configure.in: FILE variable  overrides FLATFORM when linking\n+\tnatFileChannelXXX.cc.\n+\n+\t* gnu/java/nio/channels/natFileChannelEcos.cc (diag_write):  Restored.\n+\t(write):  Call diag_write, as in old natFileDescriptorEcos.cc.\n+\n 2004-03-19  Per Bothner  <per@bothner.com>\n \n \t* gnu/gcj/convert/Input_UnicodeBig.java:  New class.."}, {"sha": "94ce96a5cf47c63d45c11b4d5c7c0138179e8ebf", "filename": "libjava/configure", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab16524d6248bc92df21a63a0b5f71ec8cea168f/libjava%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab16524d6248bc92df21a63a0b5f71ec8cea168f/libjava%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fconfigure?ref=ab16524d6248bc92df21a63a0b5f71ec8cea168f", "patch": "@@ -1630,7 +1630,7 @@ else\n   if { (eval echo configure:1631: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; }; then\n     for file in conftest.*; do\n       case $file in\n-      *.$ac_ext | *.c | *.o | *.obj) ;;\n+      *.c | *.o | *.obj) ;;\n       *) ac_cv_exeext=`echo $file | sed -e s/conftest//` ;;\n       esac\n     done\n@@ -9038,7 +9038,7 @@ fi; done\n EOF\n \n cat >> $CONFIG_STATUS <<EOF\n-ac_sources=\"include/$PLATFORMH java/io/natFile${FILE-${PLATFORM}}.cc java/lang/${PLATFORM}Process.java java/lang/nat${PLATFORM}Process.cc java/net/natInetAddress${PLATFORMNET}.cc java/net/natNetworkInterface${PLATFORMNET}.cc gnu/java/net/natPlainSocketImpl${PLATFORMNET}.cc gnu/java/net/natPlainDatagramSocketImpl${PLATFORMNET}.cc gnu/java/nio/natPipeImpl${PLATFORM}.cc gnu/java/nio/natSelectorImpl${PLATFORM}.cc gnu/java/nio/channels/natFileChannel${PLATFORM}.cc include/$GCHDR include/$THREADH sysdep/$sysdeps_dir/locks.h $SIGNAL_HANDLER $SIGNAL_HANDLER_AUX\"\n+ac_sources=\"include/$PLATFORMH java/io/natFile${FILE-${PLATFORM}}.cc java/lang/${PLATFORM}Process.java java/lang/nat${PLATFORM}Process.cc java/net/natInetAddress${PLATFORMNET}.cc java/net/natNetworkInterface${PLATFORMNET}.cc gnu/java/net/natPlainSocketImpl${PLATFORMNET}.cc gnu/java/net/natPlainDatagramSocketImpl${PLATFORMNET}.cc gnu/java/nio/natPipeImpl${PLATFORM}.cc gnu/java/nio/natSelectorImpl${PLATFORM}.cc gnu/java/nio/channels/natFileChannel${FILE-${PLATFORM}}.cc include/$GCHDR include/$THREADH sysdep/$sysdeps_dir/locks.h $SIGNAL_HANDLER $SIGNAL_HANDLER_AUX\"\n ac_dests=\"include/platform.h java/io/natFile.cc java/lang/ConcreteProcess.java java/lang/natConcreteProcess.cc java/net/natInetAddress.cc java/net/natNetworkInterface.cc gnu/java/net/natPlainSocketImpl.cc gnu/java/net/natPlainDatagramSocketImpl.cc gnu/java/nio/natPipeImpl.cc gnu/java/nio/natSelectorImpl.cc gnu/java/nio/channels/natFileChannelImpl.cc include/java-gc.h include/java-threads.h sysdep/locks.h include/java-signal.h include/java-signal-aux.h\"\n EOF\n "}, {"sha": "d94eecf4f01b9b3ee123f5226df5f0939aa3e580", "filename": "libjava/configure.in", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab16524d6248bc92df21a63a0b5f71ec8cea168f/libjava%2Fconfigure.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab16524d6248bc92df21a63a0b5f71ec8cea168f/libjava%2Fconfigure.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fconfigure.in?ref=ab16524d6248bc92df21a63a0b5f71ec8cea168f", "patch": "@@ -330,7 +330,7 @@ test -d gnu/java/nio || mkdir gnu/java/nio\n AC_LINK_FILES(gnu/java/nio/natPipeImpl${PLATFORM}.cc, gnu/java/nio/natPipeImpl.cc)\n AC_LINK_FILES(gnu/java/nio/natSelectorImpl${PLATFORM}.cc, gnu/java/nio/natSelectorImpl.cc)\n test -d gnu/java/nio/channels || mkdir gnu/java/nio/channels\n-AC_LINK_FILES(gnu/java/nio/channels/natFileChannel${PLATFORM}.cc, gnu/java/nio/channels/natFileChannelImpl.cc)\n+AC_LINK_FILES(gnu/java/nio/channels/natFileChannel${FILE-${PLATFORM}}.cc, gnu/java/nio/channels/natFileChannelImpl.cc)\n \n case \"${host}\" in\n     *mingw*)"}, {"sha": "78575e7e66a791241048f378d39f68ecc91b1819", "filename": "libjava/gnu/java/nio/channels/natFileChannelEcos.cc", "status": "modified", "additions": 18, "deletions": 2, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab16524d6248bc92df21a63a0b5f71ec8cea168f/libjava%2Fgnu%2Fjava%2Fnio%2Fchannels%2FnatFileChannelEcos.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab16524d6248bc92df21a63a0b5f71ec8cea168f/libjava%2Fgnu%2Fjava%2Fnio%2Fchannels%2FnatFileChannelEcos.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fjava%2Fnio%2Fchannels%2FnatFileChannelEcos.cc?ref=ab16524d6248bc92df21a63a0b5f71ec8cea168f", "patch": "@@ -26,20 +26,32 @@ details.  */\n #include <java/lang/NullPointerException.h>\n #include <java/lang/String.h>\n #include <java/io/FileNotFoundException.h>\n-#include <java/nio/MappedByteBufferImpl.h>\n+#include <gnu/java/nio/MappedByteBufferImpl.h>\n #include <java/nio/channels/FileChannel.h>\n #include <java/nio/channels/FileLock.h>\n #include <gnu/java/nio/channels/FileChannelImpl.h>\n \n using gnu::gcj::RawData;\n using java::io::IOException;\n-using java::nio::MappedByteBufferImpl;\n+using gnu::java::nio::MappedByteBufferImpl;\n using java::io::InterruptedIOException;\n using java::io::FileNotFoundException;\n using java::lang::ArrayIndexOutOfBoundsException;\n using java::lang::NullPointerException;\n using gnu::java::nio::channels::FileChannelImpl;\n \n+extern \"C\" void diag_write_char (char c);\n+\n+static void \n+diag_write (char *data, int len)\n+{\n+  while (len > 0)\n+    {\n+      diag_write_char (*data++);\n+      len--;\n+    }\n+}\n+\n #define NO_FSYNC_MESSAGE \"sync unsupported\"\n \n void\n@@ -78,6 +90,8 @@ FileChannelImpl::open (jstring, jint)\n void\n FileChannelImpl::write (jint)\n {\n+  char d = (char) b;\n+  ::diag_write (&d, 1);\n }\n \n void\n@@ -87,6 +101,8 @@ FileChannelImpl::write (jbyteArray b, jint offset, jint len)\n     throw new NullPointerException;\n   if (offset < 0 || len < 0 || offset + len > JvGetArrayLength (b))\n     throw new ArrayIndexOutOfBoundsException;\n+  char *bytes = (char *)elements (b) + offset;\n+  ::diag_write (bytes, len);\n }\n \n void"}]}