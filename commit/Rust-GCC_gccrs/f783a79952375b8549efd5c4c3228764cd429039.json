{"sha": "f783a79952375b8549efd5c4c3228764cd429039", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Zjc4M2E3OTk1MjM3NWI4NTQ5ZWZkNWM0YzMyMjg3NjRjZDQyOTAzOQ==", "commit": {"author": {"name": "David Edelsohn", "email": "dje.gcc@gmail.com", "date": "2012-09-14T23:41:36Z"}, "committer": {"name": "David Edelsohn", "email": "dje@gcc.gnu.org", "date": "2012-09-14T23:41:36Z"}, "message": "* configure: Regenerated.\n\nFrom-SVN: r191330", "tree": {"sha": "d18c41e388a4a11ef61319e07502efd0f7d98342", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d18c41e388a4a11ef61319e07502efd0f7d98342"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f783a79952375b8549efd5c4c3228764cd429039", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f783a79952375b8549efd5c4c3228764cd429039", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f783a79952375b8549efd5c4c3228764cd429039", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f783a79952375b8549efd5c4c3228764cd429039/comments", "author": {"login": "edelsohn", "id": 667700, "node_id": "MDQ6VXNlcjY2NzcwMA==", "avatar_url": "https://avatars.githubusercontent.com/u/667700?v=4", "gravatar_id": "", "url": "https://api.github.com/users/edelsohn", "html_url": "https://github.com/edelsohn", "followers_url": "https://api.github.com/users/edelsohn/followers", "following_url": "https://api.github.com/users/edelsohn/following{/other_user}", "gists_url": "https://api.github.com/users/edelsohn/gists{/gist_id}", "starred_url": "https://api.github.com/users/edelsohn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/edelsohn/subscriptions", "organizations_url": "https://api.github.com/users/edelsohn/orgs", "repos_url": "https://api.github.com/users/edelsohn/repos", "events_url": "https://api.github.com/users/edelsohn/events{/privacy}", "received_events_url": "https://api.github.com/users/edelsohn/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "4a3b8aa305572e5de10ea53d959d30eb76c59550", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4a3b8aa305572e5de10ea53d959d30eb76c59550", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4a3b8aa305572e5de10ea53d959d30eb76c59550"}], "stats": {"total": 26, "additions": 16, "deletions": 10}, "files": [{"sha": "0a405375e650249fc331a45c2f179a56d512aa1a", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f783a79952375b8549efd5c4c3228764cd429039/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f783a79952375b8549efd5c4c3228764cd429039/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=f783a79952375b8549efd5c4c3228764cd429039", "patch": "@@ -1,3 +1,7 @@\n+2012-09-14  David Edelsohn  <dje.gcc@gmail.com>\n+\n+\t* configure: Regenerated.\n+\n 2012-09-14  Jonathan Wakely  <jwakely.gcc@gmail.com>\n \t    H.J. Lu  <hongjiu.lu@intel.com>\n "}, {"sha": "8c053ad00b87b7e971208195d334aa383e6a5ea0", "filename": "libstdc++-v3/configure", "status": "modified", "additions": 12, "deletions": 10, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f783a79952375b8549efd5c4c3228764cd429039/libstdc%2B%2B-v3%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f783a79952375b8549efd5c4c3228764cd429039/libstdc%2B%2B-v3%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfigure?ref=f783a79952375b8549efd5c4c3228764cd429039", "patch": "@@ -8535,6 +8535,7 @@ $as_echo_n \"checking for $compiler option to produce PIC... \" >&6; }\n \t# AIX 5 now supports IA64 processor\n \tlt_prog_compiler_static='-Bstatic'\n       fi\n+      lt_prog_compiler_pic='-fPIC'\n       ;;\n \n     amigaos*)\n@@ -11508,7 +11509,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 11511 \"configure\"\n+#line 11512 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -11614,7 +11615,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 11617 \"configure\"\n+#line 11618 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -13417,6 +13418,7 @@ $as_echo_n \"checking for $compiler option to produce PIC... \" >&6; }\n \t# AIX 5 now supports IA64 processor\n \tlt_prog_compiler_static_CXX='-Bstatic'\n       fi\n+      lt_prog_compiler_pic_CXX='-fPIC'\n       ;;\n \n     amigaos*)\n@@ -14995,7 +14997,7 @@ fi\n     #\n     # Fake what AC_TRY_COMPILE does.  XXX Look at redoing this new-style.\n     cat > conftest.$ac_ext << EOF\n-#line 14998 \"configure\"\n+#line 15000 \"configure\"\n struct S { ~S(); };\n void bar();\n void foo()\n@@ -15330,7 +15332,7 @@ $as_echo \"$glibcxx_cv_atomic_long_long\" >&6; }\n   # Fake what AC_TRY_COMPILE does.\n \n     cat > conftest.$ac_ext << EOF\n-#line 15333 \"configure\"\n+#line 15335 \"configure\"\n int main()\n {\n   typedef bool atomic_type;\n@@ -15365,7 +15367,7 @@ $as_echo \"$glibcxx_cv_atomic_bool\" >&6; }\n     rm -f conftest*\n \n     cat > conftest.$ac_ext << EOF\n-#line 15368 \"configure\"\n+#line 15370 \"configure\"\n int main()\n {\n   typedef short atomic_type;\n@@ -15400,7 +15402,7 @@ $as_echo \"$glibcxx_cv_atomic_short\" >&6; }\n     rm -f conftest*\n \n     cat > conftest.$ac_ext << EOF\n-#line 15403 \"configure\"\n+#line 15405 \"configure\"\n int main()\n {\n   // NB: _Atomic_word not necessarily int.\n@@ -15436,7 +15438,7 @@ $as_echo \"$glibcxx_cv_atomic_int\" >&6; }\n     rm -f conftest*\n \n     cat > conftest.$ac_ext << EOF\n-#line 15439 \"configure\"\n+#line 15441 \"configure\"\n int main()\n {\n   typedef long long atomic_type;\n@@ -15515,7 +15517,7 @@ $as_echo \"$as_me: WARNING: Performance of certain classes will degrade as a resu\n   # unnecessary for this test.\n \n     cat > conftest.$ac_ext << EOF\n-#line 15518 \"configure\"\n+#line 15520 \"configure\"\n int main()\n {\n   _Decimal32 d1;\n@@ -15557,7 +15559,7 @@ ac_compiler_gnu=$ac_cv_cxx_compiler_gnu\n   # unnecessary for this test.\n \n     cat > conftest.$ac_ext << EOF\n-#line 15560 \"configure\"\n+#line 15562 \"configure\"\n template<typename T1, typename T2>\n   struct same\n   { typedef T2 type; };\n@@ -15591,7 +15593,7 @@ $as_echo \"$enable_int128\" >&6; }\n     rm -f conftest*\n \n     cat > conftest.$ac_ext << EOF\n-#line 15594 \"configure\"\n+#line 15596 \"configure\"\n template<typename T1, typename T2>\n   struct same\n   { typedef T2 type; };"}]}