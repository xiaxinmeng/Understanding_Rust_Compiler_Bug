{"sha": "ae71d81b18382d0967983de64a6bcd5c08bac6ca", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWU3MWQ4MWIxODM4MmQwOTY3OTgzZGU2NGE2YmNkNWMwOGJhYzZjYQ==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@adacore.com", "date": "2018-07-31T09:56:59Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "pmderodat@gcc.gnu.org", "date": "2018-07-31T09:56:59Z"}, "message": "[Ada] Various code clean-ups from CodePeer messages\n\n2018-07-31  Arnaud Charlet  <charlet@adacore.com>\n\ngcc/ada/\n\n\t* clean.adb, gnatchop.adb, gnatfind.adb, gnatls.adb,\n\tgnatmake.ads, gnatxref.adb, make.adb, make.ads, make_util.ads,\n\tsfn_scan.adb, vxaddr2line.adb, xeinfo.adb, xoscons.adb,\n\txr_tabls.adb, xref_lib.adb: Address CodePeer messages.\n\nFrom-SVN: r263108", "tree": {"sha": "a58cd9d576931f0638926d4c571e9166c729649d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a58cd9d576931f0638926d4c571e9166c729649d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ae71d81b18382d0967983de64a6bcd5c08bac6ca", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ae71d81b18382d0967983de64a6bcd5c08bac6ca", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ae71d81b18382d0967983de64a6bcd5c08bac6ca", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ae71d81b18382d0967983de64a6bcd5c08bac6ca/comments", "author": {"login": "ArnaudCharlet", "id": 30291825, "node_id": "MDQ6VXNlcjMwMjkxODI1", "avatar_url": "https://avatars.githubusercontent.com/u/30291825?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ArnaudCharlet", "html_url": "https://github.com/ArnaudCharlet", "followers_url": "https://api.github.com/users/ArnaudCharlet/followers", "following_url": "https://api.github.com/users/ArnaudCharlet/following{/other_user}", "gists_url": "https://api.github.com/users/ArnaudCharlet/gists{/gist_id}", "starred_url": "https://api.github.com/users/ArnaudCharlet/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ArnaudCharlet/subscriptions", "organizations_url": "https://api.github.com/users/ArnaudCharlet/orgs", "repos_url": "https://api.github.com/users/ArnaudCharlet/repos", "events_url": "https://api.github.com/users/ArnaudCharlet/events{/privacy}", "received_events_url": "https://api.github.com/users/ArnaudCharlet/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "1c0b35aac933587f8ed9886b2f8435016cb391ea", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1c0b35aac933587f8ed9886b2f8435016cb391ea", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1c0b35aac933587f8ed9886b2f8435016cb391ea"}], "stats": {"total": 105, "additions": 64, "deletions": 41}, "files": [{"sha": "c6f1911684de1ad0bd37ffbca5e94fb541f098aa", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ae71d81b18382d0967983de64a6bcd5c08bac6ca/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ae71d81b18382d0967983de64a6bcd5c08bac6ca/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=ae71d81b18382d0967983de64a6bcd5c08bac6ca", "patch": "@@ -1,3 +1,10 @@\n+2018-07-31  Arnaud Charlet  <charlet@adacore.com>\n+\n+\t* clean.adb, gnatchop.adb, gnatfind.adb, gnatls.adb,\n+\tgnatmake.ads, gnatxref.adb, make.adb, make.ads, make_util.ads,\n+\tsfn_scan.adb, vxaddr2line.adb, xeinfo.adb, xoscons.adb,\n+\txr_tabls.adb, xref_lib.adb: Address CodePeer messages.\n+\n 2018-07-31  Arnaud Charlet  <charlet@adacore.com>\n \n \t* gnatlink.adb: Fix potential Constraint_Error if"}, {"sha": "387083c41ee0a3ab5b5d871d168fdf9732b8293f", "filename": "gcc/ada/clean.adb", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ae71d81b18382d0967983de64a6bcd5c08bac6ca/gcc%2Fada%2Fclean.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ae71d81b18382d0967983de64a6bcd5c08bac6ca/gcc%2Fada%2Fclean.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fclean.adb?ref=ae71d81b18382d0967983de64a6bcd5c08bac6ca", "patch": "@@ -694,6 +694,7 @@ package body Clean is\n             Arg : constant String := Argument (Index);\n \n             procedure Bad_Argument;\n+            pragma No_Return (Bad_Argument);\n             --  Signal bad argument\n \n             ------------------"}, {"sha": "96a5236bc28277290ec52579de4786cb7e732e4a", "filename": "gcc/ada/gnatchop.adb", "status": "modified", "additions": 5, "deletions": 3, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ae71d81b18382d0967983de64a6bcd5c08bac6ca/gcc%2Fada%2Fgnatchop.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ae71d81b18382d0967983de64a6bcd5c08bac6ca/gcc%2Fada%2Fgnatchop.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnatchop.adb?ref=ae71d81b18382d0967983de64a6bcd5c08bac6ca", "patch": "@@ -599,7 +599,7 @@ procedure Gnatchop is\n       Chop_Name   : constant String_Access   := File.Table (Num).Name;\n       Save_Stdout : constant File_Descriptor := dup (Standout);\n       Offset_Name : Temp_File_Name;\n-      Offset_FD   : File_Descriptor;\n+      Offset_FD   : File_Descriptor := Invalid_FD;\n       Buffer      : String_Access;\n       Success     : Boolean;\n       Failure     : exception;\n@@ -685,10 +685,12 @@ procedure Gnatchop is\n \n    exception\n       when Failure | Types.Terminate_Program =>\n-         Close (Offset_FD);\n+         if Offset_FD /= Invalid_FD then\n+            Close (Offset_FD);\n+         end if;\n+\n          Delete_File (Offset_Name'Address, Success);\n          return False;\n-\n    end Parse_File;\n \n    -----------------------"}, {"sha": "dd2e0f649a528c99fe7667a2df6c47ca521c46bf", "filename": "gcc/ada/gnatfind.adb", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ae71d81b18382d0967983de64a6bcd5c08bac6ca/gcc%2Fada%2Fgnatfind.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ae71d81b18382d0967983de64a6bcd5c08bac6ca/gcc%2Fada%2Fgnatfind.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnatfind.adb?ref=ae71d81b18382d0967983de64a6bcd5c08bac6ca", "patch": "@@ -75,6 +75,7 @@ procedure Gnatfind is\n    --  Display the usage\n \n    procedure Write_Usage;\n+   pragma No_Return (Write_Usage);\n    --  Print a small help page for program usage and exit program\n \n    --------------------"}, {"sha": "a05b044e290ee8f8c4018ce57a7cfb634ffd03c2", "filename": "gcc/ada/gnatls.adb", "status": "modified", "additions": 25, "deletions": 26, "changes": 51, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ae71d81b18382d0967983de64a6bcd5c08bac6ca/gcc%2Fada%2Fgnatls.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ae71d81b18382d0967983de64a6bcd5c08bac6ca/gcc%2Fada%2Fgnatls.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnatls.adb?ref=ae71d81b18382d0967983de64a6bcd5c08bac6ca", "patch": "@@ -187,6 +187,7 @@ procedure Gnatls is\n    --  Print usage message\n \n    procedure Output_License_Information;\n+   pragma No_Return (Output_License_Information);\n    --  Output license statement, and if not found, output reference to COPYING\n \n    function Image (Restriction : Restriction_Id) return String;\n@@ -694,40 +695,38 @@ procedure Gnatls is\n \n       procedure Output_Token (T : Token_Type) is\n       begin\n-         if T in T_No_ALI .. T_Flags then\n-            for J in 1 .. N_Indents loop\n-               Write_Str (\"   \");\n-            end loop;\n+         case T is\n+            when T_No_ALI .. T_Flags =>\n+               for J in 1 .. N_Indents loop\n+                  Write_Str (\"   \");\n+               end loop;\n \n-            Write_Str (Image (T).all);\n+               Write_Str (Image (T).all);\n \n-            for J in Image (T)'Length .. 12 loop\n-               Write_Char (' ');\n-            end loop;\n+               for J in Image (T)'Length .. 12 loop\n+                  Write_Char (' ');\n+               end loop;\n \n-            Write_Str (\"=>\");\n+               Write_Str (\"=>\");\n \n-            if T in T_No_ALI .. T_With then\n-               Write_Eol;\n-            elsif T in T_Source .. T_Name then\n-               Write_Char (' ');\n-            end if;\n-\n-         elsif T in T_Preelaborated .. T_Body then\n-            if T in T_Preelaborated .. T_Is_Generic then\n-               if N_Flags = 0 then\n-                  Output_Token (T_Flags);\n+               if T in T_No_ALI .. T_With then\n+                  Write_Eol;\n+               elsif T in T_Source .. T_Name then\n+                  Write_Char (' ');\n                end if;\n \n-               N_Flags := N_Flags + 1;\n-            end if;\n+            when T_Preelaborated .. T_Body =>\n+               if T in T_Preelaborated .. T_Is_Generic then\n+                  if N_Flags = 0 then\n+                     Output_Token (T_Flags);\n+                  end if;\n \n-            Write_Char (' ');\n-            Write_Str  (Image (T).all);\n+                  N_Flags := N_Flags + 1;\n+               end if;\n \n-         else\n-            Write_Str  (Image (T).all);\n-         end if;\n+               Write_Char (' ');\n+               Write_Str  (Image (T).all);\n+         end case;\n       end Output_Token;\n \n       -----------------"}, {"sha": "d98e717081fcddd7dc0fa7f0b8567ab7bc86ea09", "filename": "gcc/ada/gnatmake.ads", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ae71d81b18382d0967983de64a6bcd5c08bac6ca/gcc%2Fada%2Fgnatmake.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ae71d81b18382d0967983de64a6bcd5c08bac6ca/gcc%2Fada%2Fgnatmake.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnatmake.ads?ref=ae71d81b18382d0967983de64a6bcd5c08bac6ca", "patch": "@@ -24,6 +24,7 @@\n ------------------------------------------------------------------------------\n \n procedure Gnatmake;\n+pragma No_Return (Gnatmake);\n --  The driver for the gnatmake tool. This utility can be used to automatically\n --  (re)compile a set of ada sources by giving the name of the root compilation\n --  unit or the source file containing it. For more information on gnatmake"}, {"sha": "3714ffff0992471e0eea135d6c2f162c065f8ac0", "filename": "gcc/ada/gnatxref.adb", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ae71d81b18382d0967983de64a6bcd5c08bac6ca/gcc%2Fada%2Fgnatxref.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ae71d81b18382d0967983de64a6bcd5c08bac6ca/gcc%2Fada%2Fgnatxref.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnatxref.adb?ref=ae71d81b18382d0967983de64a6bcd5c08bac6ca", "patch": "@@ -63,6 +63,7 @@ procedure Gnatxref is\n    --  Display the usage\n \n    procedure Write_Usage;\n+   pragma No_Return (Write_Usage);\n    --  Print a small help page for program usage\n \n    --------------------"}, {"sha": "953db4272ef92e91d4f94702d3998f9b543f1f4d", "filename": "gcc/ada/make.adb", "status": "modified", "additions": 10, "deletions": 8, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ae71d81b18382d0967983de64a6bcd5c08bac6ca/gcc%2Fada%2Fmake.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ae71d81b18382d0967983de64a6bcd5c08bac6ca/gcc%2Fada%2Fmake.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fmake.adb?ref=ae71d81b18382d0967983de64a6bcd5c08bac6ca", "patch": "@@ -85,6 +85,7 @@ package body Make is\n \n    procedure Sigint_Intercepted;\n    pragma Convention (C, Sigint_Intercepted);\n+   pragma No_Return (Sigint_Intercepted);\n    --  Called when the program is interrupted by Ctrl-C to delete the\n    --  temporary mapping files and configuration pragmas files.\n \n@@ -254,6 +255,7 @@ package body Make is\n                                No_Shared_Libgcc_Switch'Access;\n \n    procedure Make_Failed (S : String);\n+   pragma No_Return (Make_Failed);\n    --  Delete all temp files created by Gnatmake and call Osint.Fail, with the\n    --  parameter S (see osint.ads).\n \n@@ -545,6 +547,7 @@ package body Make is\n    --  Display_Executed_Programs is set. The lower bound of Args must be 1.\n \n    procedure Report_Compilation_Failed;\n+   pragma No_Return (Report_Compilation_Failed);\n    --  Delete all temporary files and fail graciously\n \n    -----------------\n@@ -580,7 +583,7 @@ package body Make is\n    Gnatmake_Mapping_File : String_Access := null;\n    --  The path name of a mapping file specified by switch -C=\n \n-   procedure Init_Mapping_File (File_Index : in out Natural);\n+   procedure Init_Mapping_File (File_Index : out Natural);\n    --  Create a new mapping file or reuse one already created.\n \n    package Temp_File_Paths is new Table.Table\n@@ -2347,10 +2350,10 @@ package body Make is\n          Full_Lib_File : File_Name_Type := No_File;\n          Lib_File_Attr : aliased File_Attributes;\n          Read_Only     : Boolean := False;\n-         ALI           : ALI_Id;\n+         ALI           : ALI_Id := No_ALI_Id;\n          --  The ALI file and its attributes (size, stamp, ...)\n \n-         Obj_File  : File_Name_Type;\n+         Obj_File  : File_Name_Type := No_File;\n          Obj_Stamp : Time_Stamp_Type;\n          --  The object file\n \n@@ -3614,7 +3617,7 @@ package body Make is\n    -- Init_Mapping_File --\n    -----------------------\n \n-   procedure Init_Mapping_File (File_Index : in out Natural) is\n+   procedure Init_Mapping_File (File_Index : out Natural) is\n       FD     : File_Descriptor;\n       Status : Boolean;\n       --  For call to Close\n@@ -4378,9 +4381,7 @@ package body Make is\n                Look_In_Primary_Dir := False;\n \n             elsif Program_Args = Compiler then\n-               if Argv (3 .. Argv'Last) /= \"-\" then\n-                  Add_Source_Search_Dir (Argv (3 .. Argv'Last));\n-               end if;\n+               Add_Source_Search_Dir (Argv (3 .. Argv'Last));\n \n             elsif Program_Args = Binder then\n                Add_Library_Search_Dir (Argv (3 .. Argv'Last));\n@@ -4690,7 +4691,8 @@ package body Make is\n \n          --  -m\n \n-         elsif Argv (2) = 'm' and then Argv'Last = 2 then\n+         elsif Argv (2) = 'm' then\n+            pragma Assert (Argv'Last = 2);\n             Minimal_Recompilation := True;\n \n          --  -u"}, {"sha": "4cd346acafb189cdf8ab91080fb986148b105928", "filename": "gcc/ada/make.ads", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ae71d81b18382d0967983de64a6bcd5c08bac6ca/gcc%2Fada%2Fmake.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ae71d81b18382d0967983de64a6bcd5c08bac6ca/gcc%2Fada%2Fmake.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fmake.ads?ref=ae71d81b18382d0967983de64a6bcd5c08bac6ca", "patch": "@@ -29,6 +29,7 @@\n package Make is\n \n    procedure Gnatmake;\n+   pragma No_Return (Gnatmake);\n    --  The driver of gnatmake. For more information on gnatmake and its\n    --  precise usage please refer to the gnat documentation.\n "}, {"sha": "9c7bb4dc33658055c0568262d039ab6f3ebe0b08", "filename": "gcc/ada/make_util.ads", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ae71d81b18382d0967983de64a6bcd5c08bac6ca/gcc%2Fada%2Fmake_util.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ae71d81b18382d0967983de64a6bcd5c08bac6ca/gcc%2Fada%2Fmake_util.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fmake_util.ads?ref=ae71d81b18382d0967983de64a6bcd5c08bac6ca", "patch": "@@ -184,11 +184,13 @@ package Make_Util is\n    procedure Fail_Program\n      (S              : String;\n       Flush_Messages : Boolean := True);\n+   pragma No_Return (Fail_Program);\n    --  Terminate program with a message and a fatal status code\n \n    procedure Finish_Program\n      (Exit_Code    : Osint.Exit_Code_Type := Osint.E_Success;\n       S            : String := \"\");\n+   pragma No_Return (Finish_Program);\n    --  Terminate program, with or without a message, setting the status code\n    --  according to Fatal. This properly removes all temporary files.\n "}, {"sha": "e37906d3f4532f61f393cd08bcc2d4dc911b48d8", "filename": "gcc/ada/sfn_scan.adb", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ae71d81b18382d0967983de64a6bcd5c08bac6ca/gcc%2Fada%2Fsfn_scan.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ae71d81b18382d0967983de64a6bcd5c08bac6ca/gcc%2Fada%2Fsfn_scan.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsfn_scan.adb?ref=ae71d81b18382d0967983de64a6bcd5c08bac6ca", "patch": "@@ -106,6 +106,7 @@ package body SFN_Scan is\n    --  ('a' .. 'z').\n \n    procedure Error (Err : String);\n+   pragma No_Return (Error);\n    --  Called if an error is detected. Raises Syntax_Error_In_GNAT_ADC\n    --  with a message of the form gnat.adc:line:col: xxx, where xxx is\n    --  the string Err passed as a parameter."}, {"sha": "e893aa4f65869b5b89e3858cd9907cda18d3c0d6", "filename": "gcc/ada/vxaddr2line.adb", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ae71d81b18382d0967983de64a6bcd5c08bac6ca/gcc%2Fada%2Fvxaddr2line.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ae71d81b18382d0967983de64a6bcd5c08bac6ca/gcc%2Fada%2Fvxaddr2line.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fvxaddr2line.adb?ref=ae71d81b18382d0967983de64a6bcd5c08bac6ca", "patch": "@@ -209,6 +209,7 @@ procedure VxAddr2Line is\n    --  Prints the message and then terminates the program\n \n    procedure Usage;\n+   pragma No_Return (Usage);\n    --  Displays the short help message and then terminates the program\n \n    function Get_Reference_Offset return Unsigned_64;\n@@ -319,7 +320,7 @@ procedure VxAddr2Line is\n       declare\n          Match_String : constant String := Expect_Out_Match (Pd);\n          Matches      : Match_Array (0 .. 1);\n-         Value        : Unsigned_64;\n+         Value        : Unsigned_64 := 0;\n \n       begin\n          Match (Reference, Match_String, Matches);"}, {"sha": "5131907eed43e12b113bdbb07fbec10828200417", "filename": "gcc/ada/xeinfo.adb", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ae71d81b18382d0967983de64a6bcd5c08bac6ca/gcc%2Fada%2Fxeinfo.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ae71d81b18382d0967983de64a6bcd5c08bac6ca/gcc%2Fada%2Fxeinfo.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fxeinfo.adb?ref=ae71d81b18382d0967983de64a6bcd5c08bac6ca", "patch": "@@ -151,6 +151,7 @@ procedure XEinfo is\n    Lastinlined : Boolean;\n \n    procedure Badfunc;\n+   pragma No_Return (Badfunc);\n    --  Signal bad function in body\n \n    function Getlin return VString;"}, {"sha": "ca4121fe44e475546a3bcf8065afdf7c719a7482", "filename": "gcc/ada/xoscons.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ae71d81b18382d0967983de64a6bcd5c08bac6ca/gcc%2Fada%2Fxoscons.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ae71d81b18382d0967983de64a6bcd5c08bac6ca/gcc%2Fada%2Fxoscons.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fxoscons.adb?ref=ae71d81b18382d0967983de64a6bcd5c08bac6ca", "patch": "@@ -166,7 +166,7 @@ procedure XOSCons is\n       A2 : Long_Unsigned renames V2.Abs_Value;\n    begin\n       return (P1 and then not P2)\n-        or else (P1 and then P2 and then A1 > A2)\n+        or else (P1 and then A1 > A2)\n         or else (not P1 and then not P2 and then A1 < A2);\n    end \">\";\n "}, {"sha": "1831d69fef474b5137842d496287e764b77215a9", "filename": "gcc/ada/xr_tabls.adb", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ae71d81b18382d0967983de64a6bcd5c08bac6ca/gcc%2Fada%2Fxr_tabls.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ae71d81b18382d0967983de64a6bcd5c08bac6ca/gcc%2Fada%2Fxr_tabls.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fxr_tabls.adb?ref=ae71d81b18382d0967983de64a6bcd5c08bac6ca", "patch": "@@ -761,6 +761,9 @@ package body Xr_Tabls is\n       With_Dir : Boolean := False;\n       Strip    : Natural    := 0) return String\n    is\n+      pragma Annotate (CodePeer, Skip_Analysis);\n+      --  ??? To disable false positives currently generated\n+\n       Tmp : GNAT.OS_Lib.String_Access;\n \n       function Internal_Strip (Full_Name : String) return String;"}, {"sha": "d211a28036c25a9079ea4490b19cc1c40648ea04", "filename": "gcc/ada/xref_lib.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ae71d81b18382d0967983de64a6bcd5c08bac6ca/gcc%2Fada%2Fxref_lib.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ae71d81b18382d0967983de64a6bcd5c08bac6ca/gcc%2Fada%2Fxref_lib.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fxref_lib.adb?ref=ae71d81b18382d0967983de64a6bcd5c08bac6ca", "patch": "@@ -75,7 +75,7 @@ package body Xref_Lib is\n \n    procedure Open\n      (Name         : String;\n-      File         : out ALI_File;\n+      File         : in out ALI_File;\n       Dependencies : Boolean := False);\n    --  Open a new ALI file. If Dependencies is True, the insert every library\n    --  file 'with'ed in the files database (used for gnatxref)\n@@ -688,7 +688,7 @@ package body Xref_Lib is\n \n    procedure Open\n      (Name         : String;\n-      File         : out ALI_File;\n+      File         : in out ALI_File;\n       Dependencies : Boolean := False)\n    is\n       Ali : String_Access renames File.Buffer;"}]}