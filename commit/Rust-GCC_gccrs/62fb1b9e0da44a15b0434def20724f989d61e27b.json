{"sha": "62fb1b9e0da44a15b0434def20724f989d61e27b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjJmYjFiOWUwZGE0NGExNWIwNDM0ZGVmMjA3MjRmOTg5ZDYxZTI3Yg==", "commit": {"author": {"name": "Nathan Sidwell", "email": "nathan@acm.org", "date": "2020-12-03T15:42:09Z"}, "committer": {"name": "Nathan Sidwell", "email": "nathan@acm.org", "date": "2020-12-03T15:56:23Z"}, "message": "c++: Fix array type dependency [PR 98107]\n\nI'd missed some paths through build_cplus_array_type, plus, some\narrays come via the C-type builder.  This propagates dependency in\nmore places and asserts that in the cases where TYPE_DEPENDENT_P_VALID\nis unset, the type is non-dependent.\n\n\tPR c++/98107\n\tgcc/cp/\n\t* tree.c (build_cplus_array_type): Mark dependency of new variant.\n\t(cp_build_qualified_type_real, strip_typedefs): Assert\n\tTYPE_DEPENDENT_P_VALID, or not a dependent type.", "tree": {"sha": "a5fc3e51c9a2d09efcfa3d28b073b595d8df8e7f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a5fc3e51c9a2d09efcfa3d28b073b595d8df8e7f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/62fb1b9e0da44a15b0434def20724f989d61e27b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/62fb1b9e0da44a15b0434def20724f989d61e27b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/62fb1b9e0da44a15b0434def20724f989d61e27b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/62fb1b9e0da44a15b0434def20724f989d61e27b/comments", "author": {"login": "urnathan", "id": 13103001, "node_id": "MDQ6VXNlcjEzMTAzMDAx", "avatar_url": "https://avatars.githubusercontent.com/u/13103001?v=4", "gravatar_id": "", "url": "https://api.github.com/users/urnathan", "html_url": "https://github.com/urnathan", "followers_url": "https://api.github.com/users/urnathan/followers", "following_url": "https://api.github.com/users/urnathan/following{/other_user}", "gists_url": "https://api.github.com/users/urnathan/gists{/gist_id}", "starred_url": "https://api.github.com/users/urnathan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/urnathan/subscriptions", "organizations_url": "https://api.github.com/users/urnathan/orgs", "repos_url": "https://api.github.com/users/urnathan/repos", "events_url": "https://api.github.com/users/urnathan/events{/privacy}", "received_events_url": "https://api.github.com/users/urnathan/received_events", "type": "User", "site_admin": false}, "committer": {"login": "urnathan", "id": 13103001, "node_id": "MDQ6VXNlcjEzMTAzMDAx", "avatar_url": "https://avatars.githubusercontent.com/u/13103001?v=4", "gravatar_id": "", "url": "https://api.github.com/users/urnathan", "html_url": "https://github.com/urnathan", "followers_url": "https://api.github.com/users/urnathan/followers", "following_url": "https://api.github.com/users/urnathan/following{/other_user}", "gists_url": "https://api.github.com/users/urnathan/gists{/gist_id}", "starred_url": "https://api.github.com/users/urnathan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/urnathan/subscriptions", "organizations_url": "https://api.github.com/users/urnathan/orgs", "repos_url": "https://api.github.com/users/urnathan/repos", "events_url": "https://api.github.com/users/urnathan/events{/privacy}", "received_events_url": "https://api.github.com/users/urnathan/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9c6813437611a877eaffc255a0a1a2cbffa6466d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9c6813437611a877eaffc255a0a1a2cbffa6466d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9c6813437611a877eaffc255a0a1a2cbffa6466d"}], "stats": {"total": 10, "additions": 10, "deletions": 0}, "files": [{"sha": "8d7df60f963d275b017eeafd08705f538315c309", "filename": "gcc/cp/tree.c", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/62fb1b9e0da44a15b0434def20724f989d61e27b/gcc%2Fcp%2Ftree.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/62fb1b9e0da44a15b0434def20724f989d61e27b/gcc%2Fcp%2Ftree.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Ftree.c?ref=62fb1b9e0da44a15b0434def20724f989d61e27b", "patch": "@@ -1076,6 +1076,9 @@ build_cplus_array_type (tree elt_type, tree index_type, int dependent)\n     {\n       bool typeless_storage = is_byte_access_type (elt_type);\n       t = build_array_type (elt_type, index_type, typeless_storage);\n+\n+      /* Mark as non-dependenty now, this will save time later.  */\n+      TYPE_DEPENDENT_P_VALID (t) = true;\n     }\n \n   /* Now check whether we already have this array variant.  */\n@@ -1090,6 +1093,9 @@ build_cplus_array_type (tree elt_type, tree index_type, int dependent)\n       if (!t)\n \t{\n \t  t = build_min_array_type (elt_type, index_type);\n+\t  /* Mark dependency now, this saves time later.  */\n+\t  TYPE_DEPENDENT_P_VALID (t) = true;\n+\t  TYPE_DEPENDENT_P (t) = dependent;\n \t  set_array_type_canon (t, elt_type, index_type, dependent);\n \t  if (!dependent)\n \t    {\n@@ -1326,6 +1332,8 @@ cp_build_qualified_type_real (tree type,\n \n       if (!t)\n \t{\n+\t  gcc_checking_assert (TYPE_DEPENDENT_P_VALID (type)\n+\t\t\t       || !dependent_type_p (type));\n \t  t = build_cplus_array_type (element_type, TYPE_DOMAIN (type),\n \t\t\t\t      TYPE_DEPENDENT_P (type));\n \n@@ -1563,6 +1571,8 @@ strip_typedefs (tree t, bool *remove_attributes, unsigned int flags)\n     case ARRAY_TYPE:\n       type = strip_typedefs (TREE_TYPE (t), remove_attributes, flags);\n       t0  = strip_typedefs (TYPE_DOMAIN (t), remove_attributes, flags);\n+      gcc_checking_assert (TYPE_DEPENDENT_P_VALID (t)\n+\t\t\t   || !dependent_type_p (t));\n       result = build_cplus_array_type (type, t0, TYPE_DEPENDENT_P (t));\n       break;\n     case FUNCTION_TYPE:"}]}