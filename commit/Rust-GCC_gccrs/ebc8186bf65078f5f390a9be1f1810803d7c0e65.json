{"sha": "ebc8186bf65078f5f390a9be1f1810803d7c0e65", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWJjODE4NmJmNjUwNzhmNWYzOTBhOWJlMWYxODEwODAzZDdjMGU2NQ==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1996-10-23T14:20:24Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1996-10-23T14:20:24Z"}, "message": "(exact_real_inverse): Declare.\n\nFrom-SVN: r13003", "tree": {"sha": "bcbe2af1010cbbd2c27496d54897215f3db84b24", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/bcbe2af1010cbbd2c27496d54897215f3db84b24"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ebc8186bf65078f5f390a9be1f1810803d7c0e65", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ebc8186bf65078f5f390a9be1f1810803d7c0e65", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ebc8186bf65078f5f390a9be1f1810803d7c0e65", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ebc8186bf65078f5f390a9be1f1810803d7c0e65/comments", "author": null, "committer": null, "parents": [{"sha": "cccc8091bcbcd90b15cc67c86a2817ad13e4719a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cccc8091bcbcd90b15cc67c86a2817ad13e4719a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cccc8091bcbcd90b15cc67c86a2817ad13e4719a"}], "stats": {"total": 3, "additions": 3, "deletions": 0}, "files": [{"sha": "c57ccc1cff3383de2bd9a726cc5b7314dbdcc295", "filename": "gcc/real.h", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ebc8186bf65078f5f390a9be1f1810803d7c0e65/gcc%2Freal.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ebc8186bf65078f5f390a9be1f1810803d7c0e65/gcc%2Freal.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Freal.h?ref=ebc8186bf65078f5f390a9be1f1810803d7c0e65", "patch": "@@ -438,4 +438,7 @@ extern struct rtx_def *immed_real_const_1\tPROTO((REAL_VALUE_TYPE,\n #define REAL_VALUE_TO_DECIMAL(r, fmt, s) (sprintf (s, fmt, r))\n #endif\n \n+/* Replace R by 1/R in the given machine mode, if the result is exact.  */\n+extern int exact_real_inverse PROTO((enum machine_mode, REAL_VALUE_TYPE *));\n+\n #endif /* Not REAL_H_INCLUDED */"}]}