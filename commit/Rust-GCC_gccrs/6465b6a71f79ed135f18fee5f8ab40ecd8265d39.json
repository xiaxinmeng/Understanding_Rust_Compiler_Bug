{"sha": "6465b6a71f79ed135f18fee5f8ab40ecd8265d39", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjQ2NWI2YTcxZjc5ZWQxMzVmMThmZWU1ZjhhYjQwZWNkODI2NWQzOQ==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2009-09-18T14:01:37Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2009-09-18T14:01:37Z"}, "message": "[multiple changes]\n\n2009-09-18  Pascal Obry  <obry@adacore.com>\n\n\t* mingw32.h: Activate Unicode support for x86-64 Windows platform.\n\n2009-09-18  Vadim Godunko  <godunko@adacore.com>\n\n\t* s-oscons-tmplt.c: Add circuit for handling IOV_MAX macro on IRIX.\n\n2009-09-18  Javier Miranda  <miranda@adacore.com>\n\n\t* exp_aggr.adb (Backend_Processing_Possible): Disable backend\n\tprocessing for array aggregates in the VM backend if the array has\n\taliased components.\n\n2009-09-18  Ed Schonberg  <schonberg@adacore.com>\n\n\t* sem_ch4.adb (Analyze_Indexed_Component): Emit error if the type of\n\tthe prefix indicates a previous semantic error, and this is the first\n\terror in the program.\n\n2009-09-18  Bob Duff  <duff@adacore.com>\n\n\t* gnat_ugn.texi: Minor editing.\n\nFrom-SVN: r151844", "tree": {"sha": "06dad70a3d428e576ef513e7963e1de582ca8611", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/06dad70a3d428e576ef513e7963e1de582ca8611"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6465b6a71f79ed135f18fee5f8ab40ecd8265d39", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6465b6a71f79ed135f18fee5f8ab40ecd8265d39", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6465b6a71f79ed135f18fee5f8ab40ecd8265d39", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6465b6a71f79ed135f18fee5f8ab40ecd8265d39/comments", "author": null, "committer": null, "parents": [{"sha": "0816e70ccfa8b42ac5b25fa8ab9c5da2cfea7d58", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0816e70ccfa8b42ac5b25fa8ab9c5da2cfea7d58", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0816e70ccfa8b42ac5b25fa8ab9c5da2cfea7d58"}], "stats": {"total": 118, "additions": 91, "deletions": 27}, "files": [{"sha": "41711f429d8dbce997793dbe3cfb0bf2e41b6abf", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6465b6a71f79ed135f18fee5f8ab40ecd8265d39/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6465b6a71f79ed135f18fee5f8ab40ecd8265d39/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=6465b6a71f79ed135f18fee5f8ab40ecd8265d39", "patch": "@@ -1,3 +1,27 @@\n+2009-09-18  Pascal Obry  <obry@adacore.com>\n+\n+\t* mingw32.h: Activate Unicode support for x86-64 Windows platform.\n+\n+2009-09-18  Vadim Godunko  <godunko@adacore.com>\n+\n+\t* s-oscons-tmplt.c: Add circuit for handling IOV_MAX macro on IRIX.\n+\n+2009-09-18  Javier Miranda  <miranda@adacore.com>\n+\n+\t* exp_aggr.adb (Backend_Processing_Possible): Disable backend\n+\tprocessing for array aggregates in the VM backend if the array has\n+\taliased components.\n+\n+2009-09-18  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* sem_ch4.adb (Analyze_Indexed_Component): Emit error if the type of\n+\tthe prefix indicates a previous semantic error, and this is the first\n+\terror in the program.\n+\n+2009-09-18  Bob Duff  <duff@adacore.com>\n+\n+\t* gnat_ugn.texi: Minor editing.\n+\n 2009-09-18  Vincent Celier  <celier@adacore.com>\n \n \t* prj.ads, prj.adb (Project_Data): New component"}, {"sha": "913e46df3747feab2f360b6287c36f41205fd8c3", "filename": "gcc/ada/exp_aggr.adb", "status": "modified", "additions": 15, "deletions": 1, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6465b6a71f79ed135f18fee5f8ab40ecd8265d39/gcc%2Fada%2Fexp_aggr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6465b6a71f79ed135f18fee5f8ab40ecd8265d39/gcc%2Fada%2Fexp_aggr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_aggr.adb?ref=6465b6a71f79ed135f18fee5f8ab40ecd8265d39", "patch": "@@ -56,6 +56,7 @@ with Sem_Util; use Sem_Util;\n with Sinfo;    use Sinfo;\n with Snames;   use Snames;\n with Stand;    use Stand;\n+with Targparm; use Targparm;\n with Tbuild;   use Tbuild;\n with Uintp;    use Uintp;\n \n@@ -216,7 +217,7 @@ package body Exp_Aggr is\n \n    function Backend_Processing_Possible (N : Node_Id) return Boolean;\n    --  This function checks if array aggregate N can be processed directly\n-   --  by Gigi. If this is the case True is returned.\n+   --  by the backend. If this is the case True is returned.\n \n    function Build_Array_Aggr_Code\n      (N           : Node_Id;\n@@ -508,6 +509,8 @@ package body Exp_Aggr is\n \n    --   10. No controlled actions need to be generated for components\n \n+   --   11. The backend is a No_VM backend and the array has aliased components\n+\n    function Backend_Processing_Possible (N : Node_Id) return Boolean is\n       Typ : constant Entity_Id := Etype (N);\n       --  Typ is the correct constrained array subtype of the aggregate\n@@ -634,6 +637,16 @@ package body Exp_Aggr is\n          return False;\n       end if;\n \n+      --  Checks 11: Array aggregates with aliased components are currently\n+      --  not well supported by the VM backend; disable temporarily this\n+      --  backend processing until it is definitely supported.\n+\n+      if VM_Target /= No_VM\n+        and then Has_Aliased_Components (Base_Type (Typ))\n+      then\n+         return False;\n+      end if;\n+\n       --  Backend processing is possible\n \n       Set_Size_Known_At_Compile_Time (Etype (N), True);\n@@ -4622,6 +4635,7 @@ package body Exp_Aggr is\n             end if;\n \n             Aggr_In := First_Index (Etype (N));\n+\n             if Nkind (Parent (N)) = N_Assignment_Statement then\n                Obj_In  := First_Index (Etype (Name (Parent (N))));\n "}, {"sha": "d777f6dd09922a3f3d548485441e2a9c825996eb", "filename": "gcc/ada/gnat_ugn.texi", "status": "modified", "additions": 26, "deletions": 24, "changes": 50, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6465b6a71f79ed135f18fee5f8ab40ecd8265d39/gcc%2Fada%2Fgnat_ugn.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6465b6a71f79ed135f18fee5f8ab40ecd8265d39/gcc%2Fada%2Fgnat_ugn.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnat_ugn.texi?ref=6465b6a71f79ed135f18fee5f8ab40ecd8265d39", "patch": "@@ -7389,7 +7389,7 @@ through the compilation and binding steps.\n \n @table @option\n \n-@item -gnatem^^=^@var{path}\n+@item -gnatem=@var{path}\n @cindex @option{-gnatem} (@command{gcc})\n A mapping file is a way to communicate to the compiler two mappings:\n from unit names to file names (without any directory information) and from\n@@ -7401,15 +7401,14 @@ compiler, but mapping files can improve efficiency, particularly when\n sources are read over a slow network connection. In normal operation,\n you need not be concerned with the format or use of mapping files,\n and the @option{-gnatem} switch is not a switch that you would use\n-explicitly. it is intended only for use by automatic tools such as\n+explicitly. It is intended primarily for use by automatic tools such as\n @command{gnatmake} running under the project file facility. The\n description here of the format of mapping files is provided\n for completeness and for possible use by other tools.\n \n-A mapping file is a sequence of sets of three lines. In each set,\n-the first line is the unit name, in lower case, with ``@code{%s}''\n-appended for\n-specs and ``@code{%b}'' appended for bodies; the second line is the\n+A mapping file is a sequence of sets of three lines. In each set, the\n+first line is the unit name, in lower case, with @code{%s} appended\n+for specs and @code{%b} appended for bodies; the second line is the\n file name; and the third line is the path name.\n \n Example:\n@@ -7419,16 +7418,16 @@ Example:\n    /gnat/project1/sources/main.2.ada\n @end smallexample\n \n-When the switch @option{-gnatem} is specified, the compiler will create\n-in memory the two mappings from the specified file. If there is any problem\n-(nonexistent file, truncated file or duplicate entries), no mapping will\n-be created.\n+When the switch @option{-gnatem} is specified, the compiler will\n+create in memory the two mappings from the specified file. If there is\n+any problem (nonexistent file, truncated file or duplicate entries),\n+no mapping will be created.\n \n-Several @option{-gnatem} switches may be specified; however, only the last\n-one on the command line will be taken into account.\n+Several @option{-gnatem} switches may be specified; however, only the\n+last one on the command line will be taken into account.\n \n-When using a project file, @command{gnatmake} create a temporary mapping file\n-and communicates it to the compiler using this switch.\n+When using a project file, @command{gnatmake} creates a temporary\n+mapping file and communicates it to the compiler using this switch.\n \n @end table\n \n@@ -9267,16 +9266,19 @@ the objects.\n \n @item ^-C^/MAPPING^\n @cindex @option{^-C^/MAPPING^} (@command{gnatmake})\n-Use a temporary mapping file. A mapping file is a way to communicate to the\n-compiler two mappings: from unit names to file names (without any directory\n-information) and from file names to path names (with full directory\n-information). These mappings are used by the compiler to short-circuit the path\n-search. When @command{gnatmake} is invoked with this switch, it will create\n-a temporary mapping file, initially populated by the project manager,\n-if @option{^-P^/PROJECT_FILE^} is used, otherwise initially empty.\n-Each invocation of the compiler will add the newly accessed sources to the\n-mapping file. This will improve the source search during the next invocation\n-of the compiler.\n+Use a temporary mapping file. A mapping file is a way to communicate\n+to the compiler two mappings: from unit names to file names (without\n+any directory information) and from file names to path names (with\n+full directory information). A mapping file can make the compiler's\n+file searches faster, especially if there are many source directories,\n+or the sources are read over a slow network connection. If\n+@option{^-P^/PROJECT_FILE^} is used, a mapping file is always used, so\n+@option{^-C^/MAPPING^} is unnecessary; in this case the mapping file\n+is initially populated based on the project file. If\n+@option{^-C^/MAPPING^} is used without\n+@option{^-P^/PROJECT_FILE^},\n+the mapping file is initially empty. Each invocation of the compiler\n+will add any newly accessed sources to the mapping file.\n \n @item ^-C=^/USE_MAPPING_FILE=^@var{file}\n @cindex @option{^-C=^/USE_MAPPING^} (@command{gnatmake})"}, {"sha": "f11572e7c2ad11c901637d060dcacaccf5ccac77", "filename": "gcc/ada/mingw32.h", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6465b6a71f79ed135f18fee5f8ab40ecd8265d39/gcc%2Fada%2Fmingw32.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6465b6a71f79ed135f18fee5f8ab40ecd8265d39/gcc%2Fada%2Fmingw32.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fmingw32.h?ref=6465b6a71f79ed135f18fee5f8ab40ecd8265d39", "patch": "@@ -44,7 +44,8 @@\n \n #if (((__MINGW32_MAJOR_VERSION == 3 \\\n \t\t   && __MINGW32_MINOR_VERSION >= 9) \\\n-     || (__MINGW32_MAJOR_VERSION >= 4)) \\\n+     || (__MINGW32_MAJOR_VERSION >= 4) \\\n+     || defined (__MINGW64))\t       \\\n      && !defined (RTX))\n #define GNAT_UNICODE_SUPPORT\n "}, {"sha": "48938d9d9d15a32269c417cd97fbb2f844a448e7", "filename": "gcc/ada/s-oscons-tmplt.c", "status": "modified", "additions": 9, "deletions": 1, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6465b6a71f79ed135f18fee5f8ab40ecd8265d39/gcc%2Fada%2Fs-oscons-tmplt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6465b6a71f79ed135f18fee5f8ab40ecd8265d39/gcc%2Fada%2Fs-oscons-tmplt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-oscons-tmplt.c?ref=6465b6a71f79ed135f18fee5f8ab40ecd8265d39", "patch": "@@ -79,8 +79,16 @@ pragma Style_Checks (\"M32766\");\n  **/\n \n #if defined (__linux__) && !defined (_XOPEN_SOURCE)\n-/* For Linux _XOPEN_SOURCE must be defined, otherwise IOV_MAX is not defined */\n+/** For Linux _XOPEN_SOURCE must be defined, otherwise IOV_MAX is not defined\n+ **/\n #define _XOPEN_SOURCE 500\n+\n+#elif defined (__mips) && defined (__sgi)\n+/** For IRIX _XOPEN5 must be defined and _XOPEN_IOV_MAX must be used as IOV_MAX,\n+ ** otherwise IOV_MAX is not defined.\n+ **/\n+#define _XOPEN5\n+#define IOV_MAX _XOPEN_IOV_MAX\n #endif\n \n #include <stdlib.h>"}, {"sha": "99c24a12a2e8573adbc32def89847862769a31db", "filename": "gcc/ada/sem_ch4.adb", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6465b6a71f79ed135f18fee5f8ab40ecd8265d39/gcc%2Fada%2Fsem_ch4.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6465b6a71f79ed135f18fee5f8ab40ecd8265d39/gcc%2Fada%2Fsem_ch4.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch4.adb?ref=6465b6a71f79ed135f18fee5f8ab40ecd8265d39", "patch": "@@ -1712,6 +1712,20 @@ package body Sem_Ch4 is\n \n             elsif Array_Type = Any_Type then\n                Set_Etype (N, Any_Type);\n+\n+               --  In most cases the analysis of the prefix will have emitted\n+               --  an error already, but if the prefix may be interpreted as a\n+               --  call in prefixed notation, the report is left to the caller.\n+               --  To prevent cascaded errors, report only if no previous ones.\n+\n+               if Serious_Errors_Detected = 0 then\n+                  Error_Msg_N (\"invalid prefix in indexed component\", P);\n+\n+                  if Nkind (P) = N_Expanded_Name then\n+                     Error_Msg_NE (\"\\& is not visible\", P, Selector_Name (P));\n+                  end if;\n+               end if;\n+\n                return;\n \n             --  Here we definitely have a bad indexing\n@@ -6689,6 +6703,7 @@ package body Sem_Ch4 is\n \n          begin\n             return Present (Visible_Op)\n+              and then Scope (Op) = Scope (Visible_Op)\n               and then not Comes_From_Source (Visible_Op)\n               and then Alias (Visible_Op) = Op\n               and then not Is_Hidden (Visible_Op);"}]}