{"sha": "cca5ded0939249809c40e5365016757575b12a1e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2NhNWRlZDA5MzkyNDk4MDljNDBlNTM2NTAxNjc1NzU3NWIxMmExZQ==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2009-11-30T14:15:51Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2009-11-30T14:15:51Z"}, "message": "[multiple changes]\n\n2009-11-30  Robert Dewar  <dewar@adacore.com>\n\n\t* gnat_rm.texi: Remove list of warning letters, and refer instead to\n\tusing gnatmake to get a brief list.\n\n\t* debug.adb: Document -gnatd.i to disable pragma Warnings\n\t* par-prag.adb, sem_prag.adb: Recognize -gnatd.i to disable Warnings\n\tpragma.\n\t* vms_data.ads: Add /NOWARNINGS_PRAGMS for -gnatd.i\n\t\n2009-11-30  Geert Bosch  <bosch@adacore.com>\n\n\t* a-ngelfu.adb (Sin): Correct spelling of sine in comment.\n\n2009-11-30  Vincent Celier  <celier@adacore.com>\n\n\t* gnatls.adb: Do not call Get_Target_Parameters in Verbose_Mode, as it\n\tis not needed and gnatls fails when called with -v -nostdinc.\n\n2009-11-30  Emmanuel Briot  <briot@adacore.com>\n\n\t* osint.adb, osint.ads (File_Time_Stamp): new subprogram.\n\nFrom-SVN: r154807", "tree": {"sha": "58392f634fbd738dab8482428c64bf74d1f7c955", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/58392f634fbd738dab8482428c64bf74d1f7c955"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/cca5ded0939249809c40e5365016757575b12a1e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cca5ded0939249809c40e5365016757575b12a1e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cca5ded0939249809c40e5365016757575b12a1e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cca5ded0939249809c40e5365016757575b12a1e/comments", "author": null, "committer": null, "parents": [{"sha": "509f7fdc0e4ae68b9be0d526fe3ca1a04edfcf39", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/509f7fdc0e4ae68b9be0d526fe3ca1a04edfcf39", "html_url": "https://github.com/Rust-GCC/gccrs/commit/509f7fdc0e4ae68b9be0d526fe3ca1a04edfcf39"}], "stats": {"total": 151, "additions": 73, "deletions": 78}, "files": [{"sha": "fb729dcd9f036401b4fba7e528bf1a0478ceca45", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cca5ded0939249809c40e5365016757575b12a1e/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cca5ded0939249809c40e5365016757575b12a1e/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=cca5ded0939249809c40e5365016757575b12a1e", "patch": "@@ -1,3 +1,26 @@\n+2009-11-30  Robert Dewar  <dewar@adacore.com>\n+\n+\t* gnat_rm.texi: Remove list of warning letters, and refer instead to\n+\tusing gnatmake to get a brief list.\n+\n+\t* debug.adb: Document -gnatd.i to disable pragma Warnings\n+\t* par-prag.adb, sem_prag.adb: Recognize -gnatd.i to disable Warnings\n+\tpragma.\n+\t* vms_data.ads: Add /NOWARNINGS_PRAGMS for -gnatd.i\n+\t\n+2009-11-30  Geert Bosch  <bosch@adacore.com>\n+\n+\t* a-ngelfu.adb (Sin): Correct spelling of sine in comment.\n+\n+2009-11-30  Vincent Celier  <celier@adacore.com>\n+\n+\t* gnatls.adb: Do not call Get_Target_Parameters in Verbose_Mode, as it\n+\tis not needed and gnatls fails when called with -v -nostdinc.\n+\n+2009-11-30  Emmanuel Briot  <briot@adacore.com>\n+\n+\t* osint.adb, osint.ads (File_Time_Stamp): new subprogram.\n+\n 2009-11-30  Ed Schonberg  <schonberg@adacore.com>\n \n \t* gnat_rm.texi, gnat_ugn.texi: Document new syntax for pragma Annotate"}, {"sha": "b615f9da9575aa1bb18fb09355faf3cec3b5723b", "filename": "gcc/ada/a-ngelfu.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cca5ded0939249809c40e5365016757575b12a1e/gcc%2Fada%2Fa-ngelfu.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cca5ded0939249809c40e5365016757575b12a1e/gcc%2Fada%2Fa-ngelfu.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-ngelfu.adb?ref=cca5ded0939249809c40e5365016757575b12a1e", "patch": "@@ -807,7 +807,7 @@ package body Ada.Numerics.Generic_Elementary_Functions is\n \n       --  The following two reductions reduce the argument to the interval\n       --  [-0.25 * Cycle, 0.25 * Cycle]. This reduction is exact and is needed\n-      --  to prevent inaccuracy that may result if the sinus function uses a\n+      --  to prevent inaccuracy that may result if the sine function uses a\n       --  different (more accurate) value of Pi in its reduction than is used\n       --  in the multiplication with Two_Pi.\n "}, {"sha": "ca207b2e4d8b5f6a80aabebc7d6a975df16351ad", "filename": "gcc/ada/debug.adb", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cca5ded0939249809c40e5365016757575b12a1e/gcc%2Fada%2Fdebug.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cca5ded0939249809c40e5365016757575b12a1e/gcc%2Fada%2Fdebug.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fdebug.adb?ref=cca5ded0939249809c40e5365016757575b12a1e", "patch": "@@ -99,7 +99,7 @@ package body Debug is\n    --  d.f  Inhibit folding of static expressions\n    --  d.g  Enable conversion of raise into goto\n    --  d.h\n-   --  d.i\n+   --  d.i  Ignore Warnings pragmas\n    --  d.j\n    --  d.k\n    --  d.l  Use Ada 95 semantics for limited function returns\n@@ -513,6 +513,10 @@ package body Debug is\n    --       this if this debug flag is set. Later we will enable this more\n    --       generally by default.\n \n+   --  d.i  Ignore all occurrences of pragma Warnings in the sources. This can\n+   --       be used in particular to disable Warnings (Off) to check if any of\n+   --       these statements are inappropriate.\n+\n    --  d.l  Use Ada 95 semantics for limited function returns. This may be\n    --       used to work around the incompatibility introduced by AI-318-2.\n    --       It is useful only in -gnat05 mode."}, {"sha": "2f09ddcc7ae50c47a642192db8200bdecac5703c", "filename": "gcc/ada/gnat_rm.texi", "status": "modified", "additions": 8, "deletions": 71, "changes": 79, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cca5ded0939249809c40e5365016757575b12a1e/gcc%2Fada%2Fgnat_rm.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cca5ded0939249809c40e5365016757575b12a1e/gcc%2Fada%2Fgnat_rm.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnat_rm.texi?ref=cca5ded0939249809c40e5365016757575b12a1e", "patch": "@@ -5197,80 +5197,12 @@ The form with a single static_string_EXPRESSION argument provides more precise\n control over which warnings are active. The string is a list of letters\n specifying which warnings are to be activated and which deactivated. The\n code for these letters is the same as the string used in the command\n-line switch controlling warnings. The following is a brief summary. For\n+line switch controlling warnings. For a brief summary, use the gnatmake\n+command with no arguments, which will generate usage information containing\n+the list of warnings switches supported. For\n full details see @ref{Warning Message Control,,, gnat_ugn, @value{EDITION}\n User's Guide}.\n \n-@smallexample\n-a    turn on all optional warnings (except d h l .o)\n-A    turn off all optional warnings\n-.a*  turn on warnings for failing assertions\n-.A   turn off warnings for failing assertions\n-b    turn on warnings for bad fixed value (not multiple of small)\n-B*   turn off warnings for bad fixed value (not multiple of small)\n-.b*  turn on warnings for biased representation\n-.B   turn off warnings for biased representation\n-c    turn on warnings for constant conditional\n-C*   turn off warnings for constant conditional\n-.c   turn on warnings for unrepped components\n-.C*  turn off warnings for unrepped components\n-d    turn on warnings for implicit dereference\n-D*   turn off warnings for implicit dereference\n-e    treat all warnings as errors\n-.e   turn on every optional warning\n-f    turn on warnings for unreferenced formal\n-F*   turn off warnings for unreferenced formal\n-g*   turn on warnings for unrecognized pragma\n-G    turn off warnings for unrecognized pragma\n-h    turn on warnings for hiding variable\n-H*   turn off warnings for hiding variable\n-i*   turn on warnings for implementation unit\n-I    turn off warnings for implementation unit\n-j    turn on warnings for obsolescent (annex J) feature\n-J*   turn off warnings for obsolescent (annex J) feature\n-k    turn on warnings on constant variable\n-K*   turn off warnings on constant variable\n-l    turn on warnings for missing elaboration pragma\n-L*   turn off warnings for missing elaboration pragma\n-m    turn on warnings for variable assigned but not read\n-M*   turn off warnings for variable assigned but not read\n-n*   normal warning mode (cancels -gnatws/-gnatwe)\n-o*   turn on warnings for address clause overlay\n-O    turn off warnings for address clause overlay\n-.o   turn on warnings for out parameters assigned but not read\n-.O*  turn off warnings for out parameters assigned but not read\n-p    turn on warnings for ineffective pragma Inline in frontend\n-P*   turn off warnings for ineffective pragma Inline in frontend\n-.p   turn on warnings for parameter ordering\n-.P*  turn off warnings for parameter ordering\n-q*   turn on warnings for questionable missing parentheses\n-Q    turn off warnings for questionable missing parentheses\n-r    turn on warnings for redundant construct\n-R*   turn off warnings for redundant construct\n-.r   turn on warnings for object renaming function\n-.R*  turn off warnings for object renaming function\n-s    suppress all warnings\n-t    turn on warnings for tracking deleted code\n-T*   turn off warnings for tracking deleted code\n-u    turn on warnings for unused entity\n-U*   turn off warnings for unused entity\n-v*   turn on warnings for unassigned variable\n-V    turn off warnings for unassigned variable\n-w*   turn on warnings for wrong low bound assumption\n-W    turn off warnings for wrong low bound assumption\n-.w   turn on warnings for unnecessary Warnings Off pragmas\n-.W*  turn off warnings for unnecessary Warnings Off pragmas\n-x*   turn on warnings for export/import\n-X    turn off warnings for export/import\n-.x   turn on warnings for non-local exceptions\n-.X*  turn off warnings for non-local exceptions\n-y*   turn on warnings for Ada 2005 incompatibility\n-Y    turn off warnings for Ada 2005 incompatibility\n-z*   turn on convention/size/align warnings for unchecked conversion\n-Z    turn off convention/size/align warnings for unchecked conversion\n-*    indicates default in above list\n-@end smallexample\n-\n @noindent\n The specified warnings will be in effect until the end of the program\n or another pragma Warnings is encountered. The effect of the pragma is\n@@ -5308,6 +5240,11 @@ pragma Warnings (On, Pattern);\n In this usage, the pattern string must match in the Off and On pragmas,\n and at least one matching warning must be suppressed.\n \n+Note: the debug flag -gnatd.i (@code{/NOWARNINGS_PRAGMAS} in VMS) can be\n+used to cause the compiler to entirely ignore all WARNINGS pragmas. This can\n+be useful in checking whether obsolete pragmas in existing programs are hiding\n+real problems.\n+\n @node Pragma Weak_External\n @unnumberedsec Pragma Weak_External\n @findex Weak_External"}, {"sha": "b5a3f49df16fcaf1529e0bed53e5f061574195d9", "filename": "gcc/ada/gnatls.adb", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cca5ded0939249809c40e5365016757575b12a1e/gcc%2Fada%2Fgnatls.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cca5ded0939249809c40e5365016757575b12a1e/gcc%2Fada%2Fgnatls.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnatls.adb?ref=cca5ded0939249809c40e5365016757575b12a1e", "patch": "@@ -40,7 +40,6 @@ with Rident;      use Rident;\n with Sdefault;\n with Snames;\n with Switch;      use Switch;\n-with Targparm;    use Targparm;\n with Types;       use Types;\n \n with GNAT.Case_Util; use GNAT.Case_Util;\n@@ -1574,8 +1573,6 @@ begin\n    Osint.Add_Default_Search_Dirs;\n \n    if Verbose_Mode then\n-      Targparm.Get_Target_Parameters;\n-\n       Write_Eol;\n       Display_Version (\"GNATLS\", \"1997\");\n       Write_Eol;"}, {"sha": "510e1e94ed1d078068f78c5c5672d81548203680", "filename": "gcc/ada/osint.adb", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cca5ded0939249809c40e5365016757575b12a1e/gcc%2Fada%2Fosint.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cca5ded0939249809c40e5365016757575b12a1e/gcc%2Fada%2Fosint.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fosint.adb?ref=cca5ded0939249809c40e5365016757575b12a1e", "patch": "@@ -1079,6 +1079,20 @@ package body Osint is\n       return Internal (Name, Attr.all'Address);\n    end File_Time_Stamp;\n \n+   function File_Time_Stamp\n+     (Name : Path_Name_Type;\n+      Attr : access File_Attributes) return Time_Stamp_Type is\n+   begin\n+      if Name = No_Path then\n+         return Empty_Time_Stamp;\n+      end if;\n+\n+      Get_Name_String (Name);\n+      Name_Buffer (Name_Len + 1) := ASCII.NUL;\n+      return OS_Time_To_GNAT_Time\n+        (File_Time_Stamp (Name_Buffer'Address, Attr));\n+   end File_Time_Stamp;\n+\n    ----------------\n    -- File_Stamp --\n    ----------------"}, {"sha": "faeaf109806d6df94fbc21f9a839163798b5bc07", "filename": "gcc/ada/osint.ads", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cca5ded0939249809c40e5365016757575b12a1e/gcc%2Fada%2Fosint.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cca5ded0939249809c40e5365016757575b12a1e/gcc%2Fada%2Fosint.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fosint.ads?ref=cca5ded0939249809c40e5365016757575b12a1e", "patch": "@@ -273,6 +273,9 @@ package Osint is\n    function File_Time_Stamp\n      (Name : C_File_Name;\n       Attr : access File_Attributes) return OS_Time;\n+   function File_Time_Stamp\n+     (Name : Path_Name_Type;\n+      Attr : access File_Attributes) return Time_Stamp_Type;\n    --  Return the time stamp of the file\n \n    function Is_Readable_File"}, {"sha": "8d823cedd6180709e999e5eeef0246ddc0f81947", "filename": "gcc/ada/par-prag.adb", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cca5ded0939249809c40e5365016757575b12a1e/gcc%2Fada%2Fpar-prag.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cca5ded0939249809c40e5365016757575b12a1e/gcc%2Fada%2Fpar-prag.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fpar-prag.adb?ref=cca5ded0939249809c40e5365016757575b12a1e", "patch": "@@ -974,10 +974,11 @@ begin\n       --  The one argument ON/OFF case is processed by the parser, since it may\n       --  control parser warnings as well as semantic warnings, and in any case\n       --  we want to be absolutely sure that the range in the warnings table is\n-      --  set well before any semantic analysis is performed.\n+      --  set well before any semantic analysis is performed. Note that we\n+      --  ignore this pragma if debug flag -gnatd.i is set.\n \n       when Pragma_Warnings =>\n-         if Arg_Count = 1 then\n+         if Arg_Count = 1 and then not Debug_Flag_Dot_I then\n             Check_No_Identifier (Arg1);\n \n             declare"}, {"sha": "7343986d4d1df2c7280746398cec1c560bb13a36", "filename": "gcc/ada/sem_prag.adb", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cca5ded0939249809c40e5365016757575b12a1e/gcc%2Fada%2Fsem_prag.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cca5ded0939249809c40e5365016757575b12a1e/gcc%2Fada%2Fsem_prag.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_prag.adb?ref=cca5ded0939249809c40e5365016757575b12a1e", "patch": "@@ -12006,6 +12006,14 @@ package body Sem_Prag is\n             Check_At_Least_N_Arguments (1);\n             Check_No_Identifiers;\n \n+            --  If debug flag -gnatd.i is set, pragma is ignored\n+\n+            if Debug_Flag_Dot_I then\n+               return;\n+            end if;\n+\n+            --  Process various forms of the pragma\n+\n             declare\n                Argx : constant Node_Id := Get_Pragma_Arg (Arg1);\n "}, {"sha": "5b3fa7773db6e252b654a20bdb93b020668fa6d1", "filename": "gcc/ada/vms_data.ads", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cca5ded0939249809c40e5365016757575b12a1e/gcc%2Fada%2Fvms_data.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cca5ded0939249809c40e5365016757575b12a1e/gcc%2Fada%2Fvms_data.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fvms_data.ads?ref=cca5ded0939249809c40e5365016757575b12a1e", "patch": "@@ -1933,6 +1933,13 @@ package VMS_Data is\n    --\n    --    Do not look for library files in the system default directory.\n \n+   S_GCC_NoWarnP  : aliased constant S := \"/NOWARNING_PRAGMAS \"            &\n+                                             \"-gnatd.i\";\n+   --        /NOWARNING_PRAGMAS\n+   --\n+   --   Causes all Warnings pragmas to be ignored. Useful to check if the\n+   --   program has obsolete warnings pragmas that are hiding problems.\n+\n    S_GCC_Opt     : aliased constant S := \"/OPTIMIZE=\"                      &\n                                             \"ALL \"                         &\n                                                \"-O2,!-O0,!-O1,!-O3 \"       &\n@@ -3473,6 +3480,7 @@ package VMS_Data is\n                      S_GCC_Noload  'Access,\n                      S_GCC_Nostinc 'Access,\n                      S_GCC_Nostlib 'Access,\n+                     S_GCC_NoWarnP 'Access,\n                      S_GCC_Opt     'Access,\n                      S_GCC_OptX    'Access,\n                      S_GCC_Pointer 'Access,"}]}