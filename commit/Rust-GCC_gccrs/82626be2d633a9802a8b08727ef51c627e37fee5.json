{"sha": "82626be2d633a9802a8b08727ef51c627e37fee5", "node_id": "C_kwDOANBUbNoAKDgyNjI2YmUyZDYzM2E5ODAyYThiMDg3MjdlZjUxYzYyN2UzN2ZlZTU", "commit": {"author": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2021-09-28T14:26:46Z"}, "committer": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2021-09-28T19:22:50Z"}, "message": "libstdc++: Specialize std::pointer_traits<__normal_iterator<I,C>>\n\nThis allows std::__to_address to be used with __normal_iterator in\nC++11/14/17 modes. Without the partial specialization the deduced\npointer_traits::element_type is incorrect, and so the return type of\n__to_address is wrong.\n\nA similar partial specialization is probably needed for\n__gnu_debug::_Safe_iterator.\n\nSigned-off-by: Jonathan Wakely <jwakely@redhat.com>\n\nlibstdc++-v3/ChangeLog:\n\n\t* include/bits/stl_iterator.h (pointer_traits): Define partial\n\tspecialization for __normal_iterator.\n\t* testsuite/24_iterators/normal_iterator/to_address.cc: New test.", "tree": {"sha": "42611665bfec6c2fee6ef6035b7ac92038171fd4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/42611665bfec6c2fee6ef6035b7ac92038171fd4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/82626be2d633a9802a8b08727ef51c627e37fee5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/82626be2d633a9802a8b08727ef51c627e37fee5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/82626be2d633a9802a8b08727ef51c627e37fee5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/82626be2d633a9802a8b08727ef51c627e37fee5/comments", "author": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b12d6e79899fd27833c53ffc3c973538244f62e1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b12d6e79899fd27833c53ffc3c973538244f62e1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b12d6e79899fd27833c53ffc3c973538244f62e1"}], "stats": {"total": 34, "additions": 34, "deletions": 0}, "files": [{"sha": "004d767224d300703d9bde9bd02480552db22311", "filename": "libstdc++-v3/include/bits/stl_iterator.h", "status": "modified", "additions": 28, "deletions": 0, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/82626be2d633a9802a8b08727ef51c627e37fee5/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_iterator.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/82626be2d633a9802a8b08727ef51c627e37fee5/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_iterator.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_iterator.h?ref=82626be2d633a9802a8b08727ef51c627e37fee5", "patch": "@@ -1285,6 +1285,34 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n     { return __it.base(); }\n \n #if __cplusplus >= 201103L\n+\n+  // Need to specialize pointer_traits because the primary template will\n+  // deduce element_type of __normal_iterator<T*, C> as T* rather than T.\n+  template<typename _Iterator, typename _Container>\n+    struct pointer_traits<__gnu_cxx::__normal_iterator<_Iterator, _Container>>\n+    {\n+    private:\n+      using _Base = pointer_traits<_Iterator>;\n+\n+    public:\n+      using element_type = typename _Base::element_type;\n+      using pointer = __gnu_cxx::__normal_iterator<_Iterator, _Container>;\n+      using difference_type = typename _Base::difference_type;\n+\n+      template<typename _Tp>\n+\tusing rebind = __gnu_cxx::__normal_iterator<_Tp, _Container>;\n+\n+      static pointer\n+      pointer_to(element_type& __e) noexcept\n+      { return pointer(_Base::pointer_to(__e)); }\n+\n+#if __cplusplus >= 202002L\n+      static element_type*\n+      to_address(pointer __p) noexcept\n+      { return __p.base(); }\n+#endif\n+    };\n+\n   /**\n    * @addtogroup iterators\n    * @{"}, {"sha": "510d627435fae0e4a847ab7dd3bea3b8faeb6891", "filename": "libstdc++-v3/testsuite/24_iterators/normal_iterator/to_address.cc", "status": "added", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/82626be2d633a9802a8b08727ef51c627e37fee5/libstdc%2B%2B-v3%2Ftestsuite%2F24_iterators%2Fnormal_iterator%2Fto_address.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/82626be2d633a9802a8b08727ef51c627e37fee5/libstdc%2B%2B-v3%2Ftestsuite%2F24_iterators%2Fnormal_iterator%2Fto_address.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F24_iterators%2Fnormal_iterator%2Fto_address.cc?ref=82626be2d633a9802a8b08727ef51c627e37fee5", "patch": "@@ -0,0 +1,6 @@\n+// { dg-do compile { target { c++11 } } }\n+#include <string>\n+#include <memory>\n+\n+char* p = std::__to_address(std::string(\"1\").begin());\n+const char* q = std::__to_address(std::string(\"2\").cbegin());"}]}