{"sha": "2c060879af5a92b49c11e70004fcd377f6a5a3ea", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmMwNjA4NzlhZjVhOTJiNDljMTFlNzAwMDRmY2QzNzdmNmE1YTNlYQ==", "commit": {"author": {"name": "Tobias Burnus", "email": "burnus@net-b.de", "date": "2014-04-30T19:08:19Z"}, "committer": {"name": "Tobias Burnus", "email": "burnus@gcc.gnu.org", "date": "2014-04-30T19:08:19Z"}, "message": "resolve.c (resolve_function): Don't do assumed-size check for lcobound/ucobound.\n\n2014-04-30  Tobias Burnus  <burnus@net-b.de>\n\n        * resolve.c (resolve_function): Don't do\n        assumed-size check for lcobound/ucobound.\n        * trans-types.c (gfc_build_array_type): Only build an array\n        descriptor with codimensions for allocatable coarrays.\n\n2014-04-30  Tobias Burnus  <burnus@net-b.de>\n\n        * gfortran.dg/coarray_lib_this_image_2.f90: Update dump.\n        * gfortran.dg/coarray_lib_token_4.f90: Ditto.\n        * gfortran.dg/coarray/codimension.f90: New.\n\nFrom-SVN: r209952", "tree": {"sha": "1cfe03d3d0de012ae2a9dd9f1dde82089539a137", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1cfe03d3d0de012ae2a9dd9f1dde82089539a137"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2c060879af5a92b49c11e70004fcd377f6a5a3ea", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2c060879af5a92b49c11e70004fcd377f6a5a3ea", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2c060879af5a92b49c11e70004fcd377f6a5a3ea", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2c060879af5a92b49c11e70004fcd377f6a5a3ea/comments", "author": {"login": "tob2", "id": 264461, "node_id": "MDQ6VXNlcjI2NDQ2MQ==", "avatar_url": "https://avatars.githubusercontent.com/u/264461?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tob2", "html_url": "https://github.com/tob2", "followers_url": "https://api.github.com/users/tob2/followers", "following_url": "https://api.github.com/users/tob2/following{/other_user}", "gists_url": "https://api.github.com/users/tob2/gists{/gist_id}", "starred_url": "https://api.github.com/users/tob2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tob2/subscriptions", "organizations_url": "https://api.github.com/users/tob2/orgs", "repos_url": "https://api.github.com/users/tob2/repos", "events_url": "https://api.github.com/users/tob2/events{/privacy}", "received_events_url": "https://api.github.com/users/tob2/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "a8a5f4a9721cba832bf734c4be40d4a3f523d031", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a8a5f4a9721cba832bf734c4be40d4a3f523d031", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a8a5f4a9721cba832bf734c4be40d4a3f523d031"}], "stats": {"total": 70, "additions": 67, "deletions": 3}, "files": [{"sha": "1dcde5db695c3ccf06aadc135ac0bcf0c7e7276c", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2c060879af5a92b49c11e70004fcd377f6a5a3ea/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2c060879af5a92b49c11e70004fcd377f6a5a3ea/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=2c060879af5a92b49c11e70004fcd377f6a5a3ea", "patch": "@@ -1,3 +1,10 @@\n+2014-04-30  Tobias Burnus  <burnus@net-b.de>\n+\n+\t* resolve.c (resolve_function): Don't do\n+\tassumed-size check for lcobound/ucobound.\n+\t* trans-types.c (gfc_build_array_type): Only build an array\n+\tdescriptor with codimensions for allocatable coarrays.\n+\n 2014-04-30  Tobias Burnus  <burnus@net-b.de>\n \n \t* gfortran.h (gfc_init_coarray_decl): Remove."}, {"sha": "15c94635f49acb0d6eb186ae73fa53062d7c6f88", "filename": "gcc/fortran/resolve.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2c060879af5a92b49c11e70004fcd377f6a5a3ea/gcc%2Ffortran%2Fresolve.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2c060879af5a92b49c11e70004fcd377f6a5a3ea/gcc%2Ffortran%2Fresolve.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fresolve.c?ref=2c060879af5a92b49c11e70004fcd377f6a5a3ea", "patch": "@@ -2942,6 +2942,8 @@ resolve_function (gfc_expr *expr)\n   else if (expr->value.function.actual != NULL\n \t   && expr->value.function.isym != NULL\n \t   && GENERIC_ID != GFC_ISYM_LBOUND\n+\t   && GENERIC_ID != GFC_ISYM_LCOBOUND\n+\t   && GENERIC_ID != GFC_ISYM_UCOBOUND\n \t   && GENERIC_ID != GFC_ISYM_LEN\n \t   && GENERIC_ID != GFC_ISYM_LOC\n \t   && GENERIC_ID != GFC_ISYM_C_LOC"}, {"sha": "862f133d8789ad0556ec5e1aa5e720208c1ccc17", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2c060879af5a92b49c11e70004fcd377f6a5a3ea/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2c060879af5a92b49c11e70004fcd377f6a5a3ea/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=2c060879af5a92b49c11e70004fcd377f6a5a3ea", "patch": "@@ -1,3 +1,9 @@\n+2014-04-30  Tobias Burnus  <burnus@net-b.de>\n+\n+\t* gfortran.dg/coarray_lib_this_image_2.f90: Update dump.\n+\t* gfortran.dg/coarray_lib_token_4.f90: Ditto.\n+\t* gfortran.dg/coarray/codimension.f90: New.\n+\n 2014-04-30  Tobias Burnus  <burnus@net-b.de>\n \n \t* gfortran.dg/coarray_lib_this_image_1.f90: New."}, {"sha": "706048f33efdc20cd46cf1e8eef3c4c676e63a77", "filename": "gcc/testsuite/gfortran.dg/coarray/codimension.f90", "status": "added", "additions": 49, "deletions": 0, "changes": 49, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2c060879af5a92b49c11e70004fcd377f6a5a3ea/gcc%2Ftestsuite%2Fgfortran.dg%2Fcoarray%2Fcodimension.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2c060879af5a92b49c11e70004fcd377f6a5a3ea/gcc%2Ftestsuite%2Fgfortran.dg%2Fcoarray%2Fcodimension.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fcoarray%2Fcodimension.f90?ref=2c060879af5a92b49c11e70004fcd377f6a5a3ea", "patch": "@@ -0,0 +1,49 @@\n+! { dg-do run }\n+!\n+! Based on coarray_lib_token_4.f90 but checking whether the bounds\n+! are correctly handled.\n+!\n+program test_caf\n+  implicit none\n+  integer, allocatable :: A(:)[:]\n+  integer, save :: B(3)[*]\n+  integer :: i\n+\n+  allocate (A(3)[*])\n+  A = [1, 2, 3 ] \n+  B = [9, 7, 4 ]\n+  call foo (A, A, test=1)\n+  call foo (A(2:3), B, test=2)\n+  call foo (B, A, test=3)\n+contains\n+  subroutine foo(x, y, test)\n+    integer :: x(:)[*]\n+    integer, contiguous :: y(:)[*]\n+    integer :: test\n+    integer :: i, j\n+    call bar (x)\n+    call expl (y)\n+    i = lcobound(x, dim=1)\n+    j = ucobound(x, dim=1)\n+    if (i /= 1 .or. j /= num_images()) call abort()\n+    i = lcobound(y, dim=1)\n+    j = ucobound(y, dim=1)\n+    if (i /= 1 .or. j /= num_images()) call abort()\n+  end subroutine foo\n+\n+  subroutine bar(y)\n+    integer :: y(:)[*]\n+    integer :: i, j\n+    i = lcobound(y, dim=1)\n+    j = ucobound(y, dim=1)\n+    if (i /= 1 .or. j /= num_images()) call abort()\n+  end subroutine bar\n+\n+  subroutine expl(z)\n+    integer :: z(*)[*]\n+    integer :: i, j\n+    i = lcobound(z, dim=1)\n+    j = ucobound(z, dim=1)\n+    if (i /= 1 .or. j /= num_images()) call abort()\n+  end subroutine expl\n+end program test_caf"}, {"sha": "afa1a7ea4d7fcaee0d88467df426d26563b325dd", "filename": "gcc/testsuite/gfortran.dg/coarray_lib_this_image_2.f90", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2c060879af5a92b49c11e70004fcd377f6a5a3ea/gcc%2Ftestsuite%2Fgfortran.dg%2Fcoarray_lib_this_image_2.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2c060879af5a92b49c11e70004fcd377f6a5a3ea/gcc%2Ftestsuite%2Fgfortran.dg%2Fcoarray_lib_this_image_2.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fcoarray_lib_this_image_2.f90?ref=2c060879af5a92b49c11e70004fcd377f6a5a3ea", "patch": "@@ -16,7 +16,7 @@ subroutine bar(x)\n   end subroutine bar\n end\n \n-! { dg-final { scan-tree-dump-times \"bar \\\\(struct array2_real\\\\(kind=4\\\\) & restrict x, void \\\\* restrict caf_token.., integer\\\\(kind=8\\\\) caf_offset..\\\\)\" 1 \"original\" } }\n+! { dg-final { scan-tree-dump-times \"bar \\\\(struct array1_real\\\\(kind=4\\\\) & restrict x, void \\\\* restrict caf_token.., integer\\\\(kind=8\\\\) caf_offset..\\\\)\" 1 \"original\" } }\n ! { dg-final { scan-tree-dump-times \"mylcobound = 5;\" 1 \"original\" } }\n ! { dg-final { scan-tree-dump-times \"parm...dim\\\\\\[1\\\\\\].lbound = 5;\" 1 \"original\" } }\n ! { dg-final { scan-tree-dump-times \"myucobound = \\\\(integer\\\\(kind=4\\\\)\\\\) \\\\(\\\\(\\\\(unsigned int\\\\) parm...dim\\\\\\[1\\\\\\].lbound \\\\+ \\\\(unsigned int\\\\) _gfortran_caf_num_images \\\\(0, -1\\\\)\\\\) \\\\+ 4294967295\\\\);\" 1 \"original\" } }"}, {"sha": "9e445f4a0dea05182a34cc5451af425bb5006e7b", "filename": "gcc/testsuite/gfortran.dg/coarray_lib_token_4.f90", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2c060879af5a92b49c11e70004fcd377f6a5a3ea/gcc%2Ftestsuite%2Fgfortran.dg%2Fcoarray_lib_token_4.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2c060879af5a92b49c11e70004fcd377f6a5a3ea/gcc%2Ftestsuite%2Fgfortran.dg%2Fcoarray_lib_token_4.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fcoarray_lib_token_4.f90?ref=2c060879af5a92b49c11e70004fcd377f6a5a3ea", "patch": "@@ -35,9 +35,9 @@ end program test_caf\n \n ! { dg-final { scan-tree-dump-times \"expl \\\\(integer\\\\(kind=4\\\\).0:. . restrict z, void . restrict caf_token.\\[0-9\\]+, integer\\\\(kind=.\\\\) caf_offset.\\[0-9\\]+\\\\)\" 1 \"original\" } }\n !\n-! { dg-final { scan-tree-dump-times \"bar \\\\(struct array2_integer\\\\(kind=4\\\\) & restrict y, void . restrict caf_token.\\[0-9\\]+, integer\\\\(kind=.\\\\) caf_offset.\\[0-9\\]+\\\\)\" 1 \"original\" } }\n+! { dg-final { scan-tree-dump-times \"bar \\\\(struct array1_integer\\\\(kind=4\\\\) & restrict y, void . restrict caf_token.\\[0-9\\]+, integer\\\\(kind=.\\\\) caf_offset.\\[0-9\\]+\\\\)\" 1 \"original\" } }\n !\n-! { dg-final { scan-tree-dump-times \"foo \\\\(struct array2_integer\\\\(kind=4\\\\) & restrict x, struct array2_integer\\\\(kind=4\\\\) & restrict y, integer\\\\(kind=4\\\\) & restrict test, void . restrict caf_token.\\[0-9\\]+, integer\\\\(kind=.\\\\) caf_offset.\\[0-9\\]+, void . restrict caf_token.\\[0-9\\]+, integer\\\\(kind=.\\\\) caf_offset.\\[0-9\\]+\\\\)\" 1 \"original\" } }\n+! { dg-final { scan-tree-dump-times \"foo \\\\(struct array1_integer\\\\(kind=4\\\\) & restrict x, struct array1_integer\\\\(kind=4\\\\) & restrict y, integer\\\\(kind=4\\\\) & restrict test, void . restrict caf_token.\\[0-9\\]+, integer\\\\(kind=.\\\\) caf_offset.\\[0-9\\]+, void . restrict caf_token.\\[0-9\\]+, integer\\\\(kind=.\\\\) caf_offset.\\[0-9\\]+\\\\)\" 1 \"original\" } }\n !\n ! { dg-final { scan-tree-dump-times \"bar \\\\(&parm.\\[0-9\\]+, caf_token.\\[0-9\\]+, \\\\(\\\\(integer\\\\(kind=.\\\\)\\\\) parm.\\[0-9\\]+.data - \\\\(integer\\\\(kind=.\\\\)\\\\) x.\\[0-9\\]+\\\\) \\\\+ caf_offset.\\[0-9\\]+\\\\);\" 1 \"original\" } }\n !"}]}