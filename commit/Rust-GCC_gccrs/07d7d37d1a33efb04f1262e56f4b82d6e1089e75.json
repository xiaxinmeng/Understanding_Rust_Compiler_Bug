{"sha": "07d7d37d1a33efb04f1262e56f4b82d6e1089e75", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDdkN2QzN2QxYTMzZWZiMDRmMTI2MmU1NmY0YjgyZDZlMTA4OWU3NQ==", "commit": {"author": {"name": "Andrew Stubbs", "email": "ams@codesourcery.com", "date": "2021-05-07T14:31:05Z"}, "committer": {"name": "Andrew Stubbs", "email": "ams@codesourcery.com", "date": "2021-05-07T22:47:38Z"}, "message": "Ensure emit_move_insn operands are valid\n\nSome architectures are fine with PLUS in move instructions, but others\nare not (amdgcn is the motivating example).\n\n2021-05-07  Jakub Jelinek  <jakub@redhat.com>\n\t    Andrew Stubbs  <amd@codesourcery.com>\n\ngcc/ChangeLog:\n\n\tPR target/100418\n\t* builtins.c (try_store_by_multiple_pieces): Use force_operand for\n\temit_move_insn operands.", "tree": {"sha": "9265b0ef8ef7bae044a42c212f73acf1a7b2911d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9265b0ef8ef7bae044a42c212f73acf1a7b2911d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/07d7d37d1a33efb04f1262e56f4b82d6e1089e75", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/07d7d37d1a33efb04f1262e56f4b82d6e1089e75", "html_url": "https://github.com/Rust-GCC/gccrs/commit/07d7d37d1a33efb04f1262e56f4b82d6e1089e75", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/07d7d37d1a33efb04f1262e56f4b82d6e1089e75/comments", "author": {"login": "ams-cs", "id": 2235130, "node_id": "MDQ6VXNlcjIyMzUxMzA=", "avatar_url": "https://avatars.githubusercontent.com/u/2235130?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ams-cs", "html_url": "https://github.com/ams-cs", "followers_url": "https://api.github.com/users/ams-cs/followers", "following_url": "https://api.github.com/users/ams-cs/following{/other_user}", "gists_url": "https://api.github.com/users/ams-cs/gists{/gist_id}", "starred_url": "https://api.github.com/users/ams-cs/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ams-cs/subscriptions", "organizations_url": "https://api.github.com/users/ams-cs/orgs", "repos_url": "https://api.github.com/users/ams-cs/repos", "events_url": "https://api.github.com/users/ams-cs/events{/privacy}", "received_events_url": "https://api.github.com/users/ams-cs/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ams-cs", "id": 2235130, "node_id": "MDQ6VXNlcjIyMzUxMzA=", "avatar_url": "https://avatars.githubusercontent.com/u/2235130?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ams-cs", "html_url": "https://github.com/ams-cs", "followers_url": "https://api.github.com/users/ams-cs/followers", "following_url": "https://api.github.com/users/ams-cs/following{/other_user}", "gists_url": "https://api.github.com/users/ams-cs/gists{/gist_id}", "starred_url": "https://api.github.com/users/ams-cs/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ams-cs/subscriptions", "organizations_url": "https://api.github.com/users/ams-cs/orgs", "repos_url": "https://api.github.com/users/ams-cs/repos", "events_url": "https://api.github.com/users/ams-cs/events{/privacy}", "received_events_url": "https://api.github.com/users/ams-cs/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a87ceadf17b4a899f3e74e2da8b6b209461d2742", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a87ceadf17b4a899f3e74e2da8b6b209461d2742", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a87ceadf17b4a899f3e74e2da8b6b209461d2742"}], "stats": {"total": 10, "additions": 6, "deletions": 4}, "files": [{"sha": "bc40bad54e763187fcb9a4e428faf648415e5cd2", "filename": "gcc/builtins.c", "status": "modified", "additions": 6, "deletions": 4, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/07d7d37d1a33efb04f1262e56f4b82d6e1089e75/gcc%2Fbuiltins.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/07d7d37d1a33efb04f1262e56f4b82d6e1089e75/gcc%2Fbuiltins.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fbuiltins.c?ref=07d7d37d1a33efb04f1262e56f4b82d6e1089e75", "patch": "@@ -6775,9 +6775,10 @@ try_store_by_multiple_pieces (rtx to, rtx len, unsigned int ctz_len,\n \n       /* Adjust PTR, TO and REM.  Since TO's address is likely\n \t PTR+offset, we have to replace it.  */\n-      emit_move_insn (ptr, XEXP (to, 0));\n+      emit_move_insn (ptr, force_operand (XEXP (to, 0), NULL_RTX));\n       to = replace_equiv_address (to, ptr);\n-      emit_move_insn (rem, plus_constant (ptr_mode, rem, -blksize));\n+      rtx rem_minus_blksize = plus_constant (ptr_mode, rem, -blksize);\n+      emit_move_insn (rem, force_operand (rem_minus_blksize, NULL_RTX));\n     }\n \n   /* Iterate over power-of-two block sizes from the maximum length to\n@@ -6811,9 +6812,10 @@ try_store_by_multiple_pieces (rtx to, rtx len, unsigned int ctz_len,\n       /* Adjust REM and PTR, unless this is the last iteration.  */\n       if (i != sctz_len)\n \t{\n-\t  emit_move_insn (ptr, XEXP (to, 0));\n+\t  emit_move_insn (ptr, force_operand (XEXP (to, 0), NULL_RTX));\n \t  to = replace_equiv_address (to, ptr);\n-\t  emit_move_insn (rem, plus_constant (ptr_mode, rem, -blksize));\n+\t  rtx rem_minus_blksize = plus_constant (ptr_mode, rem, -blksize);\n+\t  emit_move_insn (rem, force_operand (rem_minus_blksize, NULL_RTX));\n \t}\n \n       if (label)"}]}