{"sha": "c62f4cd9cf70644b7708f5f4eedbfff4c5aa48e2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzYyZjRjZDljZjcwNjQ0Yjc3MDhmNWY0ZWVkYmZmZjRjNWFhNDhlMg==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2011-02-21T05:25:56Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2011-02-21T05:25:56Z"}, "message": "re PR c++/47199 ([C++0x] ICE: expected class 'type', have 'declaration' (function_decl) in same_type_ignoring_top_level_qualifiers_p, at cp/typeck.c:1407 with -fno-elide-constructors)\n\n\tPR c++/47199\n\t* semantics.c (cxx_eval_call_expression): Call\n\tcxx_eval_constant_expression in trivial shortcut.\n\nFrom-SVN: r170356", "tree": {"sha": "e7448591e02fe6326bc0006c86df5145e9c00882", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e7448591e02fe6326bc0006c86df5145e9c00882"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c62f4cd9cf70644b7708f5f4eedbfff4c5aa48e2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c62f4cd9cf70644b7708f5f4eedbfff4c5aa48e2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c62f4cd9cf70644b7708f5f4eedbfff4c5aa48e2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c62f4cd9cf70644b7708f5f4eedbfff4c5aa48e2/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "a3dbf764ae79f617b1710dbffd7698057d98c5f9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a3dbf764ae79f617b1710dbffd7698057d98c5f9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a3dbf764ae79f617b1710dbffd7698057d98c5f9"}], "stats": {"total": 29, "additions": 28, "deletions": 1}, "files": [{"sha": "9fde00c2bfe0c4abd207bc4b1fb3f6863e884d5b", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c62f4cd9cf70644b7708f5f4eedbfff4c5aa48e2/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c62f4cd9cf70644b7708f5f4eedbfff4c5aa48e2/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=c62f4cd9cf70644b7708f5f4eedbfff4c5aa48e2", "patch": "@@ -1,5 +1,9 @@\n 2011-02-20  Jason Merrill  <jason@redhat.com>\n \n+\tPR c++/47199\n+\t* semantics.c (cxx_eval_call_expression): Call\n+\tcxx_eval_constant_expression in trivial shortcut.\n+\n \tPR c++/46831\n \t* call.c (convert_class_to_reference): Don't try to set up a\n \tsecond conv sequence for non-viable candidates."}, {"sha": "b7ed5250e0aa9cb9be196a442b4024e77d54ee28", "filename": "gcc/cp/semantics.c", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c62f4cd9cf70644b7708f5f4eedbfff4c5aa48e2/gcc%2Fcp%2Fsemantics.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c62f4cd9cf70644b7708f5f4eedbfff4c5aa48e2/gcc%2Fcp%2Fsemantics.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fsemantics.c?ref=c62f4cd9cf70644b7708f5f4eedbfff4c5aa48e2", "patch": "@@ -6021,7 +6021,11 @@ cxx_eval_call_expression (const constexpr_call *old_call, tree t,\n \n   /* Shortcut trivial copy constructor/op=.  */\n   if (call_expr_nargs (t) == 2 && trivial_fn_p (fun))\n-    return convert_from_reference (get_nth_callarg (t, 1));\n+    {\n+      tree arg = convert_from_reference (get_nth_callarg (t, 1));\n+      return cxx_eval_constant_expression (old_call, arg, allow_non_constant,\n+\t\t\t\t\t   addr, non_constant_p);\n+    }\n \n   /* If in direct recursive call, optimize definition search.  */\n   if (old_call != NULL && old_call->fundef->decl == fun)"}, {"sha": "77b0bef5ef38cbc0651e9f9d55b32dfa1eaa8a84", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c62f4cd9cf70644b7708f5f4eedbfff4c5aa48e2/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c62f4cd9cf70644b7708f5f4eedbfff4c5aa48e2/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=c62f4cd9cf70644b7708f5f4eedbfff4c5aa48e2", "patch": "@@ -1,5 +1,7 @@\n 2011-02-20  Jason Merrill  <jason@redhat.com>\n \n+\t* g++.dg/cpp0x/constexpr-ctor7.C: New.\n+\n \t* g++.dg/cpp0x/fntmpdefarg2.C: New.\n \n \t* g++.dg/overload/conv-op1.C: New."}, {"sha": "8338bf1f7ec445dc954f21d592098ba002e9800e", "filename": "gcc/testsuite/g++.dg/cpp0x/constexpr-ctor7.C", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c62f4cd9cf70644b7708f5f4eedbfff4c5aa48e2/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-ctor7.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c62f4cd9cf70644b7708f5f4eedbfff4c5aa48e2/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-ctor7.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-ctor7.C?ref=c62f4cd9cf70644b7708f5f4eedbfff4c5aa48e2", "patch": "@@ -0,0 +1,17 @@\n+// PR c++/47199\n+// { dg-options \"-std=c++0x -fno-elide-constructors\" }\n+\n+template < int > struct S\n+{\n+  constexpr S (int r):rr (r)\n+  {\n+  }\n+  S (const S &) = default;\n+  static constexpr S s ()\n+  {\n+    return -1;\n+  }\n+  int rr;\n+};\n+\n+static const int d = S < 0 >::s ().rr;"}]}