{"sha": "68017cb410dc476560ef648be47189825fef365a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjgwMTdjYjQxMGRjNDc2NTYwZWY2NDhiZTQ3MTg5ODI1ZmVmMzY1YQ==", "commit": {"author": {"name": "H.J. Lu", "email": "hongjiu.lu@intel.com", "date": "2009-02-19T15:22:28Z"}, "committer": {"name": "H.J. Lu", "email": "hjl@gcc.gnu.org", "date": "2009-02-19T15:22:28Z"}, "message": "re PR c++/39188 (G++ doesn't handle static anonymous union right)\n\ngcc/\n\n2009-02-19  H.J. Lu  <hongjiu.lu@intel.com>\n\n\tPR c++/39188\n\t* varasm.c (assemble_variable): Don't check DECL_NAME when\n\tglobalizing a variable.\n\ngcc/cp/\n\n2009-02-19  H.J. Lu  <hongjiu.lu@intel.com>\n\n\tPR c++/39188\n\t* cp-tree.h (maybe_commonize_var): New.\n\n\t* decl.c (maybe_commonize_var): Make it extern.\n\n\t* decl2.c (finish_anon_union): Call maybe_commonize_var.\n\ngcc/testsuite/\n\n2009-02-19  H.J. Lu  <hongjiu.lu@intel.com>\n\n\tPR c++/39188\n\t* g++.dg/abi/pr39188-1a.C: New.\n\t* g++.dg/abi/pr39188-1b.C: Likewise.\n\t* g++.dg/abi/pr39188-1.h: Likewise.\n\t* g++.dg/abi/pr39188-2a.C: Likewise.\n\t* g++.dg/abi/pr39188-2b.C: Likewise.\n\t* g++.dg/abi/pr39188-2.h: Likewise.\n\t* g++.dg/abi/pr39188-3a.C: Likewise.\n\t* g++.dg/abi/pr39188-3b.C: Likewise.\n\t* g++.dg/abi/pr39188-3.h: Likewise.\n\nFrom-SVN: r144297", "tree": {"sha": "8c6c796708593865d482060ea12cf6acb211e49f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8c6c796708593865d482060ea12cf6acb211e49f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/68017cb410dc476560ef648be47189825fef365a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/68017cb410dc476560ef648be47189825fef365a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/68017cb410dc476560ef648be47189825fef365a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/68017cb410dc476560ef648be47189825fef365a/comments", "author": {"login": "hjl-tools", "id": 1072356, "node_id": "MDQ6VXNlcjEwNzIzNTY=", "avatar_url": "https://avatars.githubusercontent.com/u/1072356?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hjl-tools", "html_url": "https://github.com/hjl-tools", "followers_url": "https://api.github.com/users/hjl-tools/followers", "following_url": "https://api.github.com/users/hjl-tools/following{/other_user}", "gists_url": "https://api.github.com/users/hjl-tools/gists{/gist_id}", "starred_url": "https://api.github.com/users/hjl-tools/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hjl-tools/subscriptions", "organizations_url": "https://api.github.com/users/hjl-tools/orgs", "repos_url": "https://api.github.com/users/hjl-tools/repos", "events_url": "https://api.github.com/users/hjl-tools/events{/privacy}", "received_events_url": "https://api.github.com/users/hjl-tools/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "ab4194daa89047e2eacb66ef8d5d702418905bb0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ab4194daa89047e2eacb66ef8d5d702418905bb0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ab4194daa89047e2eacb66ef8d5d702418905bb0"}], "stats": {"total": 149, "additions": 146, "deletions": 3}, "files": [{"sha": "84315ee084f318813d9fef48caa686bd7057681f", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/68017cb410dc476560ef648be47189825fef365a/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/68017cb410dc476560ef648be47189825fef365a/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=68017cb410dc476560ef648be47189825fef365a", "patch": "@@ -1,3 +1,9 @@\n+2009-02-19  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\tPR c++/39188\n+\t* varasm.c (assemble_variable): Don't check DECL_NAME when\n+\tglobalizing a variable.\n+\n 2009-02-19  Joseph Myers  <joseph@codesourcery.com>\n \n \tPR c/38483"}, {"sha": "c766c7f8057b8b358106b13d247f9b934ae232c2", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/68017cb410dc476560ef648be47189825fef365a/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/68017cb410dc476560ef648be47189825fef365a/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=68017cb410dc476560ef648be47189825fef365a", "patch": "@@ -1,3 +1,12 @@\n+2009-02-19  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\tPR c++/39188\n+\t* cp-tree.h (maybe_commonize_var): New.\n+\n+\t* decl.c (maybe_commonize_var): Make it extern.\n+\n+\t* decl2.c (finish_anon_union): Call maybe_commonize_var.\n+\n 2009-02-18  H.J. Lu  <hongjiu.lu@intel.com>\n \n \tPR c++/39219"}, {"sha": "fa4017d4d049324b549e4a52cdbf4283cab8a1d2", "filename": "gcc/cp/cp-tree.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/68017cb410dc476560ef648be47189825fef365a/gcc%2Fcp%2Fcp-tree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/68017cb410dc476560ef648be47189825fef365a/gcc%2Fcp%2Fcp-tree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcp-tree.h?ref=68017cb410dc476560ef648be47189825fef365a", "patch": "@@ -4360,6 +4360,7 @@ extern tree finish_function\t\t\t(int);\n extern tree start_method\t\t\t(cp_decl_specifier_seq *, const cp_declarator *, tree);\n extern tree finish_method\t\t\t(tree);\n extern void maybe_register_incomplete_var\t(tree);\n+extern void maybe_commonize_var\t\t\t(tree);\n extern void complete_vars\t\t\t(tree);\n extern void finish_stmt\t\t\t\t(void);\n extern void print_other_binding_stack\t\t(struct cp_binding_level *);"}, {"sha": "930f944e8a11364a4f5ef8b9e4068d35acca9093", "filename": "gcc/cp/decl.c", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/68017cb410dc476560ef648be47189825fef365a/gcc%2Fcp%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/68017cb410dc476560ef648be47189825fef365a/gcc%2Fcp%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fdecl.c?ref=68017cb410dc476560ef648be47189825fef365a", "patch": "@@ -81,7 +81,6 @@ static tree lookup_and_check_tag (enum tag_types, tree, tag_scope, bool);\n static int walk_namespaces_r (tree, walk_namespaces_fn, void *);\n static void maybe_deduce_size_from_array_init (tree, tree);\n static void layout_var_decl (tree);\n-static void maybe_commonize_var (tree);\n static tree check_initializer (tree, tree, int, tree *);\n static void make_rtl_for_nonlocal_decl (tree, tree, const char *);\n static void save_function_data (tree);\n@@ -4536,7 +4535,7 @@ layout_var_decl (tree decl)\n    we have a weak definition, we must endeavor to create only one\n    instance of the variable at link-time.  */\n \n-static void\n+void\n maybe_commonize_var (tree decl)\n {\n   /* Static data in a function with comdat linkage also has comdat"}, {"sha": "9d33bbf8bfd9b0fa0b99079d5c335e81f5781a8c", "filename": "gcc/cp/decl2.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/68017cb410dc476560ef648be47189825fef365a/gcc%2Fcp%2Fdecl2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/68017cb410dc476560ef648be47189825fef365a/gcc%2Fcp%2Fdecl2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fdecl2.c?ref=68017cb410dc476560ef648be47189825fef365a", "patch": "@@ -1364,6 +1364,7 @@ finish_anon_union (tree anon_union_decl)\n     {\n       /* Use main_decl to set the mangled name.  */\n       DECL_NAME (anon_union_decl) = DECL_NAME (main_decl);\n+      maybe_commonize_var (anon_union_decl);\n       mangle_decl (anon_union_decl);\n       DECL_NAME (anon_union_decl) = NULL_TREE;\n     }"}, {"sha": "a84d1f667017da13e8d99970473050160830e9ba", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/68017cb410dc476560ef648be47189825fef365a/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/68017cb410dc476560ef648be47189825fef365a/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=68017cb410dc476560ef648be47189825fef365a", "patch": "@@ -1,3 +1,16 @@\n+2009-02-19  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\tPR c++/39188\n+\t* g++.dg/abi/pr39188-1a.C: New.\n+\t* g++.dg/abi/pr39188-1b.C: Likewise.\n+\t* g++.dg/abi/pr39188-1.h: Likewise.\n+\t* g++.dg/abi/pr39188-2a.C: Likewise.\n+\t* g++.dg/abi/pr39188-2b.C: Likewise.\n+\t* g++.dg/abi/pr39188-2.h: Likewise.\n+\t* g++.dg/abi/pr39188-3a.C: Likewise.\n+\t* g++.dg/abi/pr39188-3b.C: Likewise.\n+\t* g++.dg/abi/pr39188-3.h: Likewise.\n+\n 2009-02-19  Joseph Myers  <joseph@codesourcery.com>\n \n \tPR c/38483"}, {"sha": "ece67daae1e7728fa0cbaa4b6d048a294d466258", "filename": "gcc/testsuite/g++.dg/abi/pr39188-1.h", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/68017cb410dc476560ef648be47189825fef365a/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fabi%2Fpr39188-1.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/68017cb410dc476560ef648be47189825fef365a/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fabi%2Fpr39188-1.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fabi%2Fpr39188-1.h?ref=68017cb410dc476560ef648be47189825fef365a", "patch": "@@ -0,0 +1,11 @@\n+inline int\n+f (int x)\n+{\n+  static union \n+    {\n+      int i;\n+    };\n+  int j = i;\n+  i = x;\n+  return j;\n+}"}, {"sha": "eb646696def9afc691983d67511e75e0d2651af8", "filename": "gcc/testsuite/g++.dg/abi/pr39188-1a.C", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/68017cb410dc476560ef648be47189825fef365a/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fabi%2Fpr39188-1a.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/68017cb410dc476560ef648be47189825fef365a/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fabi%2Fpr39188-1a.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fabi%2Fpr39188-1a.C?ref=68017cb410dc476560ef648be47189825fef365a", "patch": "@@ -0,0 +1,12 @@\n+// PR c++/39188\n+// { dg-do run }\n+// { dg-options \"-O2\" }\n+// { dg-additional-sources \"pr39188-1b.C\" }\n+\n+#include \"pr39188-1.h\"\n+\n+int\n+x (int i)\n+{\n+  return f (i);\n+}"}, {"sha": "71c99263787639c219e64d32a84fbc2f70b5c060", "filename": "gcc/testsuite/g++.dg/abi/pr39188-1b.C", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/68017cb410dc476560ef648be47189825fef365a/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fabi%2Fpr39188-1b.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/68017cb410dc476560ef648be47189825fef365a/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fabi%2Fpr39188-1b.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fabi%2Fpr39188-1b.C?ref=68017cb410dc476560ef648be47189825fef365a", "patch": "@@ -0,0 +1,15 @@\n+#include \"pr39188-1.h\"\n+\n+extern \"C\" void abort ();\n+\n+extern int x (int);\n+\n+int\n+main (void)\n+{\n+  if (x (1) != 0)\n+    abort ();\n+  if (f (1) != 1)\n+    abort ();\n+  return 0;\n+}"}, {"sha": "6ff5f49dbf3694b5346c5c6ee781fac894718e24", "filename": "gcc/testsuite/g++.dg/abi/pr39188-2.h", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/68017cb410dc476560ef648be47189825fef365a/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fabi%2Fpr39188-2.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/68017cb410dc476560ef648be47189825fef365a/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fabi%2Fpr39188-2.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fabi%2Fpr39188-2.h?ref=68017cb410dc476560ef648be47189825fef365a", "patch": "@@ -0,0 +1,12 @@\n+template<typename T>\n+T\n+f (T x)\n+{\n+  static union \n+    {\n+      T i;\n+    };\n+  T j = i;\n+  i = x;\n+  return j;\n+}"}, {"sha": "071b585f4c049e09e12520cf1eae5cffa8af9eb6", "filename": "gcc/testsuite/g++.dg/abi/pr39188-2a.C", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/68017cb410dc476560ef648be47189825fef365a/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fabi%2Fpr39188-2a.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/68017cb410dc476560ef648be47189825fef365a/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fabi%2Fpr39188-2a.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fabi%2Fpr39188-2a.C?ref=68017cb410dc476560ef648be47189825fef365a", "patch": "@@ -0,0 +1,12 @@\n+// PR c++/39188\n+// { dg-do run }\n+// { dg-options \"-O2\" }\n+// { dg-additional-sources \"pr39188-2b.C\" }\n+\n+#include \"pr39188-2.h\"\n+\n+int\n+x (int i)\n+{\n+  return f<int> (i);\n+}"}, {"sha": "f91367ba29d1ecbd609342248ac07176dafa6561", "filename": "gcc/testsuite/g++.dg/abi/pr39188-2b.C", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/68017cb410dc476560ef648be47189825fef365a/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fabi%2Fpr39188-2b.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/68017cb410dc476560ef648be47189825fef365a/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fabi%2Fpr39188-2b.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fabi%2Fpr39188-2b.C?ref=68017cb410dc476560ef648be47189825fef365a", "patch": "@@ -0,0 +1,15 @@\n+#include \"pr39188-2.h\"\n+\n+extern \"C\" void abort ();\n+\n+extern int x (int);\n+\n+int\n+main (void)\n+{\n+  if (x (1) != 0)\n+    abort ();\n+  if (f<int> (1) != 1)\n+    abort ();\n+  return 0;\n+}"}, {"sha": "e0c9f619c2ed6bd0aa9cfc83dc3a417dd412dd87", "filename": "gcc/testsuite/g++.dg/abi/pr39188-3.h", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/68017cb410dc476560ef648be47189825fef365a/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fabi%2Fpr39188-3.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/68017cb410dc476560ef648be47189825fef365a/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fabi%2Fpr39188-3.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fabi%2Fpr39188-3.h?ref=68017cb410dc476560ef648be47189825fef365a", "patch": "@@ -0,0 +1,11 @@\n+static int\n+f (int x)\n+{\n+  static union \n+    {\n+      int i;\n+    };\n+  int j = i;\n+  i = x;\n+  return j;\n+}"}, {"sha": "5596d12419e0a538109aef3ad6f150a3ffe51b27", "filename": "gcc/testsuite/g++.dg/abi/pr39188-3a.C", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/68017cb410dc476560ef648be47189825fef365a/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fabi%2Fpr39188-3a.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/68017cb410dc476560ef648be47189825fef365a/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fabi%2Fpr39188-3a.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fabi%2Fpr39188-3a.C?ref=68017cb410dc476560ef648be47189825fef365a", "patch": "@@ -0,0 +1,12 @@\n+// PR c++/39188\n+// { dg-do run }\n+// { dg-options \"-O2\" }\n+// { dg-additional-sources \"pr39188-3b.C\" }\n+\n+#include \"pr39188-3.h\"\n+\n+int\n+x (int i)\n+{\n+  return f (i);\n+}"}, {"sha": "84db157a71ab6cd52b1c9914cba89dbdf83ce854", "filename": "gcc/testsuite/g++.dg/abi/pr39188-3b.C", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/68017cb410dc476560ef648be47189825fef365a/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fabi%2Fpr39188-3b.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/68017cb410dc476560ef648be47189825fef365a/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fabi%2Fpr39188-3b.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fabi%2Fpr39188-3b.C?ref=68017cb410dc476560ef648be47189825fef365a", "patch": "@@ -0,0 +1,15 @@\n+#include \"pr39188-3.h\"\n+\n+extern \"C\" void abort ();\n+\n+extern int x (int);\n+\n+int\n+main (void)\n+{\n+  if (x (1) != 0)\n+    abort ();\n+  if (f (1) != 0)\n+    abort ();\n+  return 0;\n+}"}, {"sha": "49bbe06f85178d1152d60368f757caa504126ffd", "filename": "gcc/varasm.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/68017cb410dc476560ef648be47189825fef365a/gcc%2Fvarasm.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/68017cb410dc476560ef648be47189825fef365a/gcc%2Fvarasm.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fvarasm.c?ref=68017cb410dc476560ef648be47189825fef365a", "patch": "@@ -2161,7 +2161,6 @@ assemble_variable (tree decl, int top_level ATTRIBUTE_UNUSED,\n   /* First make the assembler name(s) global if appropriate.  */\n   sect = get_variable_section (decl, false);\n   if (TREE_PUBLIC (decl)\n-      && DECL_NAME (decl)\n       && (sect->common.flags & SECTION_COMMON) == 0)\n     globalize_decl (decl);\n "}]}