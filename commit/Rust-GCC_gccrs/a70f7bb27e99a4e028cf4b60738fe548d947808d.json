{"sha": "a70f7bb27e99a4e028cf4b60738fe548d947808d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTcwZjdiYjI3ZTk5YTRlMDI4Y2Y0YjYwNzM4ZmU1NDhkOTQ3ODA4ZA==", "commit": {"author": {"name": "Jim Wilson", "email": "wilson@gcc.gnu.org", "date": "1993-05-14T17:21:54Z"}, "committer": {"name": "Jim Wilson", "email": "wilson@gcc.gnu.org", "date": "1993-05-14T17:21:54Z"}, "message": "(expand_inline_function): Set map->integrating.\n\n(copy_rtx_and_substitute, case MEM): Don't copy RTX_UNCHANGING_P\nwhen doing function inlining.\n\nFrom-SVN: r4453", "tree": {"sha": "8c775ffd1410d30839ff5822787252b925ee563f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8c775ffd1410d30839ff5822787252b925ee563f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a70f7bb27e99a4e028cf4b60738fe548d947808d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a70f7bb27e99a4e028cf4b60738fe548d947808d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a70f7bb27e99a4e028cf4b60738fe548d947808d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a70f7bb27e99a4e028cf4b60738fe548d947808d/comments", "author": null, "committer": null, "parents": [{"sha": "ec193993f9d1ac17f5489056059c37a7cfb2788e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ec193993f9d1ac17f5489056059c37a7cfb2788e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ec193993f9d1ac17f5489056059c37a7cfb2788e"}], "stats": {"total": 12, "additions": 11, "deletions": 1}, "files": [{"sha": "6ad951e8044b136feae269fb9be83f0c95220c20", "filename": "gcc/integrate.c", "status": "modified", "additions": 11, "deletions": 1, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a70f7bb27e99a4e028cf4b60738fe548d947808d/gcc%2Fintegrate.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a70f7bb27e99a4e028cf4b60738fe548d947808d/gcc%2Fintegrate.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fintegrate.c?ref=a70f7bb27e99a4e028cf4b60738fe548d947808d", "patch": "@@ -1289,6 +1289,8 @@ expand_inline_function (fndecl, parms, target, ignore, type, structure_value_add\n   map->min_insnno = 0;\n   map->max_insnno = INSN_UID (header);\n \n+  map->integrating = 1;\n+\n   /* const_equiv_map maps pseudos in our routine to constants, so it needs to\n      be large enough for all our pseudos.  This is the number we are currently\n      using plus the number in the called routine, plus 15 for each arg,\n@@ -2157,7 +2159,15 @@ copy_rtx_and_substitute (orig, map)\n       XEXP (copy, 0) = copy_rtx_and_substitute (XEXP (orig, 0), map);\n       MEM_IN_STRUCT_P (copy) = MEM_IN_STRUCT_P (orig);\n       MEM_VOLATILE_P (copy) = MEM_VOLATILE_P (orig);\n-      RTX_UNCHANGING_P (copy) = RTX_UNCHANGING_P (orig);\n+\n+      /* If doing function inlining, this MEM might not be const in the\n+\t function that it is being inlined into, and thus may not be\n+\t unchanging after function inlining.  Constant pool references are\n+\t handled elsewhere, so this doesn't lose RTX_UNCHANGING_P bits\n+\t for them.  */\n+      if (! map->integrating)\n+\tRTX_UNCHANGING_P (copy) = RTX_UNCHANGING_P (orig);\n+\n       return copy;\n     }\n "}]}