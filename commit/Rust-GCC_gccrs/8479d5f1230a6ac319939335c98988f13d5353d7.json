{"sha": "8479d5f1230a6ac319939335c98988f13d5353d7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODQ3OWQ1ZjEyMzBhNmFjMzE5OTM5MzM1Yzk4OTg4ZjEzZDUzNTNkNw==", "commit": {"author": {"name": "Tom Tromey", "email": "tromey@gcc.gnu.org", "date": "2006-01-06T18:57:36Z"}, "committer": {"name": "Tom Tromey", "email": "tromey@gcc.gnu.org", "date": "2006-01-06T18:57:36Z"}, "message": "[multiple changes]\n\n2005-12-26  Anthony Green  <green@redhat.com>\n\n\t* gnu/java/nio/SocketChannelImpl.java (read): Compute the right amount\n\tof data to read (dst.remaining()).\n\t* gnu/java/nio/DatagramChannelImpl.java (receive): Ditto.\n\n2005-11-11  Mark Wielaard  <mark@klomp.org>\n\n\tReported by john.zigman@anu.edu.au as bug #24608.\n\t* gnu/java/nio/SocketChannelImpl.java (read): Put readBytes in\n\tdestination ByteBuffer when it doesn't have an array instead of len\n\tbytes.\n\nFrom-SVN: r109422", "tree": {"sha": "87fd654a61c05e7ac40de3f4c158485f9e106652", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/87fd654a61c05e7ac40de3f4c158485f9e106652"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8479d5f1230a6ac319939335c98988f13d5353d7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8479d5f1230a6ac319939335c98988f13d5353d7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8479d5f1230a6ac319939335c98988f13d5353d7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8479d5f1230a6ac319939335c98988f13d5353d7/comments", "author": null, "committer": null, "parents": [{"sha": "736432eedbab9ede68c755437ae8228a95e89871", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/736432eedbab9ede68c755437ae8228a95e89871", "html_url": "https://github.com/Rust-GCC/gccrs/commit/736432eedbab9ede68c755437ae8228a95e89871"}], "stats": {"total": 23, "additions": 18, "deletions": 5}, "files": [{"sha": "76142c5c543192027f523fb36725bc989f110938", "filename": "libjava/ChangeLog", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8479d5f1230a6ac319939335c98988f13d5353d7/libjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8479d5f1230a6ac319939335c98988f13d5353d7/libjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog?ref=8479d5f1230a6ac319939335c98988f13d5353d7", "patch": "@@ -1,3 +1,16 @@\n+2005-12-26  Anthony Green  <green@redhat.com>\n+\n+\t* gnu/java/nio/SocketChannelImpl.java (read): Compute the right amount\n+\tof data to read (dst.remaining()).\n+\t* gnu/java/nio/DatagramChannelImpl.java (receive): Ditto.\n+\n+2005-11-11  Mark Wielaard  <mark@klomp.org>\n+\n+\tReported by john.zigman@anu.edu.au as bug #24608.\n+\t* gnu/java/nio/SocketChannelImpl.java (read): Put readBytes in\n+\tdestination ByteBuffer when it doesn't have an array instead of len\n+\tbytes.\n+\n 2006-01-05  Tom Tromey  <tromey@redhat.com>\n \n \t* java/lang/natThread.cc (finish_): Don't clear 'group'."}, {"sha": "de1d2e6a341cc2c1c6bf6232b22eec6ba5b45b66", "filename": "libjava/gnu/java/nio/DatagramChannelImpl.java", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8479d5f1230a6ac319939335c98988f13d5353d7/libjava%2Fgnu%2Fjava%2Fnio%2FDatagramChannelImpl.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8479d5f1230a6ac319939335c98988f13d5353d7/libjava%2Fgnu%2Fjava%2Fnio%2FDatagramChannelImpl.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fjava%2Fnio%2FDatagramChannelImpl.java?ref=8479d5f1230a6ac319939335c98988f13d5353d7", "patch": "@@ -1,5 +1,5 @@\n /* DatagramChannelImpl.java -- \n-   Copyright (C) 2002, 2003, 2004  Free Software Foundation, Inc.\n+   Copyright (C) 2002, 2003, 2004, 2006  Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -206,7 +206,7 @@ public SocketAddress receive (ByteBuffer dst)\n     try\n       {\n         DatagramPacket packet;\n-        int len = dst.capacity() - dst.position();\n+        int len = dst.remaining();\n         \n         if (dst.hasArray())\n           {"}, {"sha": "cda86e80723310d7a574ebf7e04433d595deafb3", "filename": "libjava/gnu/java/nio/SocketChannelImpl.java", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8479d5f1230a6ac319939335c98988f13d5353d7/libjava%2Fgnu%2Fjava%2Fnio%2FSocketChannelImpl.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8479d5f1230a6ac319939335c98988f13d5353d7/libjava%2Fgnu%2Fjava%2Fnio%2FSocketChannelImpl.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fjava%2Fnio%2FSocketChannelImpl.java?ref=8479d5f1230a6ac319939335c98988f13d5353d7", "patch": "@@ -1,5 +1,5 @@\n /* SocketChannelImpl.java -- \n-   Copyright (C) 2002, 2003, 2004 Free Software Foundation, Inc.\n+   Copyright (C) 2002, 2003, 2004, 2006 Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -225,7 +225,7 @@ public int read(ByteBuffer dst) throws IOException\n     int offset = 0;\n     InputStream input = socket.getInputStream();\n     int available = input.available();\n-    int len = dst.capacity() - dst.position();\n+    int len = dst.remaining();\n \t\n     if ((! isBlocking()) && available == 0)\n       return 0;\n@@ -263,7 +263,7 @@ public int read(ByteBuffer dst) throws IOException\n \t}\n       else\n         {\n-          dst.put (data, offset, len);\n+          dst.put (data, offset, readBytes);\n         }\n \n     return readBytes;"}]}