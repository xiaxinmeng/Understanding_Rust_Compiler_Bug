{"sha": "acf190b208ae6883e94bcaa13adf9e3439bee63d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWNmMTkwYjIwOGFlNjg4M2U5NGJjYWExM2FkZjllMzQzOWJlZTYzZA==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@adacore.com", "date": "2020-12-05T09:44:48Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "derodat@adacore.com", "date": "2020-12-17T10:49:25Z"}, "message": "[Ada] Remove unused files\n\ngcc/ada/\n\n\t* symbols.ads, symbols.adb: Removed no longer used.", "tree": {"sha": "230a22f70226dfc1d3b018ec5c06970185b4f4b8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/230a22f70226dfc1d3b018ec5c06970185b4f4b8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/acf190b208ae6883e94bcaa13adf9e3439bee63d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/acf190b208ae6883e94bcaa13adf9e3439bee63d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/acf190b208ae6883e94bcaa13adf9e3439bee63d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/acf190b208ae6883e94bcaa13adf9e3439bee63d/comments", "author": {"login": "ArnaudCharlet", "id": 30291825, "node_id": "MDQ6VXNlcjMwMjkxODI1", "avatar_url": "https://avatars.githubusercontent.com/u/30291825?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ArnaudCharlet", "html_url": "https://github.com/ArnaudCharlet", "followers_url": "https://api.github.com/users/ArnaudCharlet/followers", "following_url": "https://api.github.com/users/ArnaudCharlet/following{/other_user}", "gists_url": "https://api.github.com/users/ArnaudCharlet/gists{/gist_id}", "starred_url": "https://api.github.com/users/ArnaudCharlet/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ArnaudCharlet/subscriptions", "organizations_url": "https://api.github.com/users/ArnaudCharlet/orgs", "repos_url": "https://api.github.com/users/ArnaudCharlet/repos", "events_url": "https://api.github.com/users/ArnaudCharlet/events{/privacy}", "received_events_url": "https://api.github.com/users/ArnaudCharlet/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pmderodat", "id": 758452, "node_id": "MDQ6VXNlcjc1ODQ1Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/758452?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pmderodat", "html_url": "https://github.com/pmderodat", "followers_url": "https://api.github.com/users/pmderodat/followers", "following_url": "https://api.github.com/users/pmderodat/following{/other_user}", "gists_url": "https://api.github.com/users/pmderodat/gists{/gist_id}", "starred_url": "https://api.github.com/users/pmderodat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pmderodat/subscriptions", "organizations_url": "https://api.github.com/users/pmderodat/orgs", "repos_url": "https://api.github.com/users/pmderodat/repos", "events_url": "https://api.github.com/users/pmderodat/events{/privacy}", "received_events_url": "https://api.github.com/users/pmderodat/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "98032cd46ffc18adfdbf6fb7b585998283ada9f5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/98032cd46ffc18adfdbf6fb7b585998283ada9f5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/98032cd46ffc18adfdbf6fb7b585998283ada9f5"}], "stats": {"total": 205, "additions": 0, "deletions": 205}, "files": [{"sha": "133d8006336328958d0eea9b944557e7099a23b6", "filename": "gcc/ada/symbols.adb", "status": "removed", "additions": 0, "deletions": 90, "changes": 90, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/98032cd46ffc18adfdbf6fb7b585998283ada9f5/gcc%2Fada%2Fsymbols.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/98032cd46ffc18adfdbf6fb7b585998283ada9f5/gcc%2Fada%2Fsymbols.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsymbols.adb?ref=98032cd46ffc18adfdbf6fb7b585998283ada9f5", "patch": "@@ -1,90 +0,0 @@\n-------------------------------------------------------------------------------\n---                                                                          --\n---                         GNAT COMPILER COMPONENTS                         --\n---                                                                          --\n---                              S Y M B O L S                               --\n---                                                                          --\n---                                 B o d y                                  --\n---                                                                          --\n---          Copyright (C) 2003-2020, Free Software Foundation, Inc.         --\n---                                                                          --\n--- GNAT is free software;  you can  redistribute it  and/or modify it under --\n--- terms of the  GNU General Public License as published  by the Free Soft- --\n--- ware  Foundation;  either version 3,  or (at your option) any later ver- --\n--- sion.  GNAT is distributed in the hope that it will be useful, but WITH- --\n--- OUT ANY WARRANTY;  without even the  implied warranty of MERCHANTABILITY --\n--- or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License --\n--- for  more details.  You should have  received  a copy of the GNU General --\n--- Public License  distributed with GNAT; see file COPYING3.  If not, go to --\n--- http://www.gnu.org/licenses for a complete copy of the license.          --\n---                                                                          --\n--- GNAT was originally developed  by the GNAT team at  New York University. --\n--- Extensive contributions were provided by Ada Core Technologies Inc.      --\n---                                                                          --\n-------------------------------------------------------------------------------\n-\n---  This is the default version of this package, used when the creation\n---  of symbol files is not supported.\n-\n-with Ada.Text_IO; use Ada.Text_IO;\n-\n-package body Symbols is\n-\n-   ----------------\n-   -- Initialize --\n-   ----------------\n-\n-   procedure Initialize\n-     (Symbol_File   : String;\n-      Reference     : String;\n-      Symbol_Policy : Policy;\n-      Quiet         : Boolean;\n-      Version       : String;\n-      Success       : out Boolean)\n-   is\n-      pragma Unreferenced (Symbol_File);\n-      pragma Unreferenced (Reference);\n-      pragma Unreferenced (Symbol_Policy);\n-      pragma Unreferenced (Quiet);\n-      pragma Unreferenced (Version);\n-   begin\n-      Put_Line\n-        (\"creation of symbol files is not supported on this platform\");\n-      Success := False;\n-   end Initialize;\n-\n-   ----------------\n-   -- Processing --\n-   ----------------\n-\n-   package body Processing is\n-\n-      -------------\n-      -- Process --\n-      -------------\n-\n-      procedure Process\n-        (Object_File : String;\n-         Success     : out Boolean)\n-      is\n-         pragma Unreferenced (Object_File);\n-      begin\n-         Success := False;\n-      end Process;\n-\n-   end Processing;\n-\n-   --------------\n-   -- Finalize --\n-   --------------\n-\n-   procedure Finalize\n-     (Quiet   : Boolean;\n-      Success : out Boolean)\n-   is\n-      pragma Unreferenced (Quiet);\n-   begin\n-      Success := False;\n-   end Finalize;\n-\n-end Symbols;"}, {"sha": "0193830a462b24c6c649e7c13df16865b8ac11d4", "filename": "gcc/ada/symbols.ads", "status": "removed", "additions": 0, "deletions": 115, "changes": 115, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/98032cd46ffc18adfdbf6fb7b585998283ada9f5/gcc%2Fada%2Fsymbols.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/98032cd46ffc18adfdbf6fb7b585998283ada9f5/gcc%2Fada%2Fsymbols.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsymbols.ads?ref=98032cd46ffc18adfdbf6fb7b585998283ada9f5", "patch": "@@ -1,115 +0,0 @@\n-------------------------------------------------------------------------------\n---                                                                          --\n---                         GNAT COMPILER COMPONENTS                         --\n---                                                                          --\n---                              S Y M B O L S                               --\n---                                                                          --\n---                                 S p e c                                  --\n---                                                                          --\n---          Copyright (C) 2003-2020, Free Software Foundation, Inc.         --\n---                                                                          --\n--- GNAT is free software;  you can  redistribute it  and/or modify it under --\n--- terms of the  GNU General Public License as published  by the Free Soft- --\n--- ware  Foundation;  either version 3,  or (at your option) any later ver- --\n--- sion.  GNAT is distributed in the hope that it will be useful, but WITH- --\n--- OUT ANY WARRANTY;  without even the  implied warranty of MERCHANTABILITY --\n--- or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License --\n--- for  more details.  You should have  received  a copy of the GNU General --\n--- Public License  distributed with GNAT; see file COPYING3.  If not, go to --\n--- http://www.gnu.org/licenses for a complete copy of the license.          --\n---                                                                          --\n--- GNAT was originally developed  by the GNAT team at  New York University. --\n--- Extensive contributions were provided by Ada Core Technologies Inc.      --\n---                                                                          --\n-------------------------------------------------------------------------------\n-\n---  This package allows the creation of symbol files to be used for linking\n---  libraries. The format of symbol files depends on the platform, so there is\n---  several implementations of the body.\n-\n-with GNAT.Dynamic_Tables;\n-\n-with System.OS_Lib; use System.OS_Lib;\n-\n-package Symbols is\n-\n-   type Policy is\n-   --  Symbol policy\n-\n-     (Autonomous,\n-      --  Create a symbol file without considering any reference\n-\n-      Compliant,\n-      --  Either create a symbol file with the same major and minor IDs if\n-      --  all symbols are already found in the reference file or with an\n-      --  incremented minor ID, if not.\n-\n-      Controlled,\n-      --  Fail if symbols are not the same as those in the reference file\n-\n-      Restricted,\n-      --  Restrict the symbols to those in the symbol file. Fail if some\n-      --  symbols in the symbol file are not exported from the object files.\n-\n-      Direct);\n-      --  The reference symbol file is copied to the symbol file\n-\n-   type Symbol_Kind is (Data, Proc);\n-   --  To distinguish between the different kinds of symbols\n-\n-   type Symbol_Data is record\n-      Name    : String_Access;\n-      Kind    : Symbol_Kind := Data;\n-      Present : Boolean := True;\n-   end record;\n-   --  Data (name and kind) for each of the symbols\n-\n-   package Symbol_Table is new GNAT.Dynamic_Tables\n-     (Table_Component_Type => Symbol_Data,\n-      Table_Index_Type     => Natural,\n-      Table_Low_Bound      => 0,\n-      Table_Initial        => 100,\n-      Table_Increment      => 100);\n-   --  The symbol tables\n-\n-   Original_Symbols : Symbol_Table.Instance;\n-   --  The symbols, if any, found in the reference symbol table\n-\n-   Complete_Symbols : Symbol_Table.Instance;\n-   --  The symbols, if any, found in the objects files\n-\n-   procedure Initialize\n-     (Symbol_File   : String;\n-      Reference     : String;\n-      Symbol_Policy : Policy;\n-      Quiet         : Boolean;\n-      Version       : String;\n-      Success       : out Boolean);\n-   --  Initialize a symbol file. This procedure must be called before\n-   --  Processing any object file. Depending on the platforms and the\n-   --  circumstances, additional messages may be issued if Quiet is False.\n-\n-   package Processing is\n-\n-   --  This package, containing a single visible procedure Process, exists\n-   --  so that it can be a subunits, for some platforms, the body of package\n-   --  Symbols is common, while the subunit Processing is not.\n-\n-      procedure Process\n-        (Object_File : String;\n-         Success     : out Boolean);\n-      --  Get the symbols from an object file. Success is set to True if the\n-      --  object file exists and has the expected format.\n-\n-   end Processing;\n-\n-   procedure Finalize\n-     (Quiet   : Boolean;\n-      Success : out Boolean);\n-   --  Finalize the symbol file. This procedure should be called after\n-   --  Initialize (once) and Process (one or more times). If Success is\n-   --  True, the symbol file is written and closed, ready to be used for\n-   --  linking the library. Depending on the platforms and the circumstances,\n-   --  additional messages may be issued if Quiet is False.\n-\n-end Symbols;"}]}