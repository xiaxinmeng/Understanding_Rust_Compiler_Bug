{"sha": "94b9215c8747c5ed141c4f52949892f73342ab82", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTRiOTIxNWM4NzQ3YzVlZDE0MWM0ZjUyOTQ5ODkyZjczMzQyYWI4Mg==", "commit": {"author": {"name": "Christophe Lyon", "email": "christophe.lyon@linaro.org", "date": "2015-01-21T11:23:31Z"}, "committer": {"name": "Christophe Lyon", "email": "clyon@gcc.gnu.org", "date": "2015-01-21T11:23:31Z"}, "message": "[ARM/AArch64][testsuite] Add vmull_n tests.\n\n2015-01-21  Christophe Lyon  <christophe.lyon@linaro.org>\n\n\t* gcc.target/aarch64/advsimd-intrinsics/vmull_n.c: New file.\n\nFrom-SVN: r219944", "tree": {"sha": "492f5a4fd4bca7e20eb60d8bf732ecedf3ba5ea9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/492f5a4fd4bca7e20eb60d8bf732ecedf3ba5ea9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/94b9215c8747c5ed141c4f52949892f73342ab82", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/94b9215c8747c5ed141c4f52949892f73342ab82", "html_url": "https://github.com/Rust-GCC/gccrs/commit/94b9215c8747c5ed141c4f52949892f73342ab82", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/94b9215c8747c5ed141c4f52949892f73342ab82/comments", "author": null, "committer": null, "parents": [{"sha": "43da1074f8e07484aaee6eb61265c9288d811a58", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/43da1074f8e07484aaee6eb61265c9288d811a58", "html_url": "https://github.com/Rust-GCC/gccrs/commit/43da1074f8e07484aaee6eb61265c9288d811a58"}], "stats": {"total": 65, "additions": 65, "deletions": 0}, "files": [{"sha": "9ea28ea210338a15a04d1a0a4a650648a301d82c", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/94b9215c8747c5ed141c4f52949892f73342ab82/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/94b9215c8747c5ed141c4f52949892f73342ab82/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=94b9215c8747c5ed141c4f52949892f73342ab82", "patch": "@@ -1,3 +1,7 @@\n+2015-01-21  Christophe Lyon  <christophe.lyon@linaro.org>\n+\n+\t* gcc.target/aarch64/advsimd-intrinsics/vmull_n.c: New file.\n+\n 2015-01-21  Christophe Lyon  <christophe.lyon@linaro.org>\n \n \t* gcc.target/aarch64/advsimd-intrinsics/vmull_lane.c: New file."}, {"sha": "df28a943eed0c2e3c317320d1d31122ff867325b", "filename": "gcc/testsuite/gcc.target/aarch64/advsimd-intrinsics/vmull_n.c", "status": "added", "additions": 61, "deletions": 0, "changes": 61, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/94b9215c8747c5ed141c4f52949892f73342ab82/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvmull_n.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/94b9215c8747c5ed141c4f52949892f73342ab82/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvmull_n.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvmull_n.c?ref=94b9215c8747c5ed141c4f52949892f73342ab82", "patch": "@@ -0,0 +1,61 @@\n+#include <arm_neon.h>\n+#include \"arm-neon-ref.h\"\n+#include \"compute-ref-data.h\"\n+\n+/* Expected results.  */\n+VECT_VAR_DECL(expected,int,32,4) [] = { 0x11000, 0x11000, 0x11000, 0x11000 };\n+VECT_VAR_DECL(expected,int,64,2) [] = { 0x22000, 0x22000 };\n+VECT_VAR_DECL(expected,uint,32,4) [] = { 0x33000, 0x33000, 0x33000, 0x33000 };\n+VECT_VAR_DECL(expected,uint,64,2) [] = { 0x44000, 0x44000 };\n+\n+#define INSN_NAME vmull\n+#define TEST_MSG \"VMULL_N\"\n+void exec_vmull_n (void)\n+{\n+  int i;\n+\n+  /* vector_res = vmull_n(vector,val), then store the result.  */\n+#define TEST_VMULL_N1(INSN, T1, T2, W, W2, N, L)\t\t\t\\\n+  VECT_VAR(vector_res, T1, W2, N) =\t\t\t\t\t\\\n+    INSN##_n_##T2##W(VECT_VAR(vector, T1, W, N),\t\t\t\\\n+\t\t     L);\t\t\t\t\t\t\\\n+  vst1q_##T2##W2(VECT_VAR(result, T1, W2, N), VECT_VAR(vector_res, T1, W2, N))\n+\n+#define TEST_VMULL_N(INSN, T1, T2, W, W2, N, L)\t\\\n+  TEST_VMULL_N1(INSN, T1, T2, W, W2, N, L)\n+\n+  DECL_VARIABLE(vector, int, 16, 4);\n+  DECL_VARIABLE(vector, int, 32, 2);\n+  DECL_VARIABLE(vector, uint, 16, 4);\n+  DECL_VARIABLE(vector, uint, 32, 2);\n+\n+  DECL_VARIABLE(vector_res, int, 32, 4);\n+  DECL_VARIABLE(vector_res, int, 64, 2);\n+  DECL_VARIABLE(vector_res, uint, 32, 4);\n+  DECL_VARIABLE(vector_res, uint, 64, 2);\n+\n+  clean_results ();\n+\n+  /* Initialize vector.  */\n+  VDUP(vector, , int, s, 16, 4, 0x1000);\n+  VDUP(vector, , int, s, 32, 2, 0x1000);\n+  VDUP(vector, , uint, u, 16, 4, 0x1000);\n+  VDUP(vector, , uint, u, 32, 2, 0x1000);\n+\n+  /* Choose multiplier arbitrarily.  */\n+  TEST_VMULL_N(INSN_NAME, int, s, 16, 32, 4, 0x11);\n+  TEST_VMULL_N(INSN_NAME, int, s, 32, 64, 2, 0x22);\n+  TEST_VMULL_N(INSN_NAME, uint, u, 16, 32, 4, 0x33);\n+  TEST_VMULL_N(INSN_NAME, uint, u, 32, 64, 2, 0x44);\n+\n+  CHECK(TEST_MSG, int, 32, 4, PRIx32, expected, \"\");\n+  CHECK(TEST_MSG, int, 64, 2, PRIx64, expected, \"\");\n+  CHECK(TEST_MSG, uint, 32, 4, PRIx32, expected, \"\");\n+  CHECK(TEST_MSG, uint, 64, 2, PRIx64, expected, \"\");\n+}\n+\n+int main (void)\n+{\n+  exec_vmull_n ();\n+  return 0;\n+}"}]}