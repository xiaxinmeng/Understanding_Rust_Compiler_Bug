{"sha": "ebaacb57d2ed512efa68687b4a1c58bbbe536313", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWJhYWNiNTdkMmVkNTEyZWZhNjg2ODdiNGExYzU4YmJiZTUzNjMxMw==", "commit": {"author": {"name": "Nathan Sidwell", "email": "nathan@acm.org", "date": "1999-09-20T16:19:26Z"}, "committer": {"name": "Nathan Sidwell", "email": "nathan@gcc.gnu.org", "date": "1999-09-20T16:19:26Z"}, "message": "* parse.y (primary): Use build_functional_cast for CV_QUALIFIER.\n\nFrom-SVN: r29524", "tree": {"sha": "7d9a54d8348ef39d4653815fb1ac874e2029a245", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7d9a54d8348ef39d4653815fb1ac874e2029a245"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ebaacb57d2ed512efa68687b4a1c58bbbe536313", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ebaacb57d2ed512efa68687b4a1c58bbbe536313", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ebaacb57d2ed512efa68687b4a1c58bbbe536313", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ebaacb57d2ed512efa68687b4a1c58bbbe536313/comments", "author": {"login": "urnathan", "id": 13103001, "node_id": "MDQ6VXNlcjEzMTAzMDAx", "avatar_url": "https://avatars.githubusercontent.com/u/13103001?v=4", "gravatar_id": "", "url": "https://api.github.com/users/urnathan", "html_url": "https://github.com/urnathan", "followers_url": "https://api.github.com/users/urnathan/followers", "following_url": "https://api.github.com/users/urnathan/following{/other_user}", "gists_url": "https://api.github.com/users/urnathan/gists{/gist_id}", "starred_url": "https://api.github.com/users/urnathan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/urnathan/subscriptions", "organizations_url": "https://api.github.com/users/urnathan/orgs", "repos_url": "https://api.github.com/users/urnathan/repos", "events_url": "https://api.github.com/users/urnathan/events{/privacy}", "received_events_url": "https://api.github.com/users/urnathan/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "bb457bd90107d2cae48e2f1a19077bd859c47b70", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bb457bd90107d2cae48e2f1a19077bd859c47b70", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bb457bd90107d2cae48e2f1a19077bd859c47b70"}], "stats": {"total": 16, "additions": 7, "deletions": 9}, "files": [{"sha": "f26a659df8e62f7b47ef363823f712626fe0352d", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ebaacb57d2ed512efa68687b4a1c58bbbe536313/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ebaacb57d2ed512efa68687b4a1c58bbbe536313/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=ebaacb57d2ed512efa68687b4a1c58bbbe536313", "patch": "@@ -1,3 +1,7 @@\n+1999-09-20  Nathan Sidwell  <nathan@acm.org>\n+\n+\t* parse.y (primary): Use build_functional_cast for CV_QUALIFIER.\n+\n 1999-09-20  Nick Clifton  <nickc@cygnus.com>\n \n \t* decl2.c (lang_decode_option): Extend comment."}, {"sha": "ce697d44a137b6a4fa3fd04be3b4dd1537674868", "filename": "gcc/cp/parse.y", "status": "modified", "additions": 3, "deletions": 9, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ebaacb57d2ed512efa68687b4a1c58bbbe536313/gcc%2Fcp%2Fparse.y", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ebaacb57d2ed512efa68687b4a1c58bbbe536313/gcc%2Fcp%2Fparse.y", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fparse.y?ref=ebaacb57d2ed512efa68687b4a1c58bbbe536313", "patch": "@@ -1474,15 +1474,9 @@ primary:\n \t\t     `const (3)' is equivalent to `const int (3)'.  */\n \t\t  tree type;\n \n-\t\t  if ($3 == error_mark_node)\n-\t\t    {\n-\t\t      $$ = error_mark_node;\n-\t\t      break;\n-\t\t    }\n-\n-\t\t  type = cp_build_qualified_type (integer_type_node,\n-\t\t\t\t\t\t  cp_type_qual_from_rid ($1));\n-\t\t  $$ = build_c_cast (type, build_compound_expr ($3));\n+\t\t  type = hash_tree_cons (NULL_TREE, $1, NULL_TREE);\n+\t\t  type = groktypename (build_decl_list (type, NULL_TREE));\n+\t\t  $$ = build_functional_cast (type, $3);\n \t\t}\n \t| functional_cast\n \t| DYNAMIC_CAST '<' type_id '>' '(' expr ')'"}]}