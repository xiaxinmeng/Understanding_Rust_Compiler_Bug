{"sha": "cd2f1c7a623809b0b7e2b224e1240fb74f5f0767", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2QyZjFjN2E2MjM4MDliMGI3ZTJiMjI0ZTEyNDBmYjc0ZjVmMDc2Nw==", "commit": {"author": {"name": "Roger Sayle", "email": "roger@eyesopen.com", "date": "2004-03-07T20:13:50Z"}, "committer": {"name": "Roger Sayle", "email": "sayle@gcc.gnu.org", "date": "2004-03-07T20:13:50Z"}, "message": "fold-const.c (fold): Fold x | x as x.\n\n\n\t* fold-const.c (fold) <IOR_EXPR>: Fold x | x as x.\n\t<XOR_EXPR>: Fold x ^ x as zero.\n\t<AND_EXPR>: Fold x & x as x.\n\nFrom-SVN: r79065", "tree": {"sha": "92143fa659d22e48620905f9ea1ee62d1875d469", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/92143fa659d22e48620905f9ea1ee62d1875d469"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/cd2f1c7a623809b0b7e2b224e1240fb74f5f0767", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cd2f1c7a623809b0b7e2b224e1240fb74f5f0767", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cd2f1c7a623809b0b7e2b224e1240fb74f5f0767", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cd2f1c7a623809b0b7e2b224e1240fb74f5f0767/comments", "author": null, "committer": null, "parents": [{"sha": "350f4ea897ebddd78030dbb18e4876deac235490", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/350f4ea897ebddd78030dbb18e4876deac235490", "html_url": "https://github.com/Rust-GCC/gccrs/commit/350f4ea897ebddd78030dbb18e4876deac235490"}], "stats": {"total": 12, "additions": 12, "deletions": 0}, "files": [{"sha": "b0c115eb8a9d67a222a4b9d87fc8ad566108a504", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd2f1c7a623809b0b7e2b224e1240fb74f5f0767/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd2f1c7a623809b0b7e2b224e1240fb74f5f0767/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=cd2f1c7a623809b0b7e2b224e1240fb74f5f0767", "patch": "@@ -1,3 +1,9 @@\n+2004-03-07  Roger Sayle  <roger@eyesopen.com>\n+\n+\t* fold-const.c (fold) <IOR_EXPR>: Fold x | x as x.\n+\t<XOR_EXPR>: Fold x ^ x as zero.\n+\t<AND_EXPR>: Fold x & x as x.\n+\n 2004-03-07  Roger Sayle  <roger@eyesopen.com>\n \n \t* fold-const.c (fold) <EQ_EXPR>: Rewrite optimization to transform"}, {"sha": "bbef4e6bc7715268d8d092323c9b2d9c62c81754", "filename": "gcc/fold-const.c", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd2f1c7a623809b0b7e2b224e1240fb74f5f0767/gcc%2Ffold-const.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd2f1c7a623809b0b7e2b224e1240fb74f5f0767/gcc%2Ffold-const.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffold-const.c?ref=cd2f1c7a623809b0b7e2b224e1240fb74f5f0767", "patch": "@@ -6605,6 +6605,8 @@ fold (tree expr)\n \treturn omit_one_operand (type, arg1, arg0);\n       if (integer_zerop (arg1))\n \treturn non_lvalue (fold_convert (type, arg0));\n+      if (operand_equal_p (arg0, arg1, 0))\n+\treturn non_lvalue (fold_convert (type, arg0));\n       t1 = distribute_bit_expr (code, type, arg0, arg1);\n       if (t1 != NULL_TREE)\n \treturn t1;\n@@ -6633,6 +6635,8 @@ fold (tree expr)\n \treturn non_lvalue (fold_convert (type, arg0));\n       if (integer_all_onesp (arg1))\n \treturn fold (build1 (BIT_NOT_EXPR, type, arg0));\n+      if (operand_equal_p (arg0, arg1, 0))\n+\treturn omit_one_operand (type, integer_zero_node, arg0);\n \n       /* If we are XORing two BIT_AND_EXPR's, both of which are and'ing\n          with a constant, and the two constants have no bits in common,\n@@ -6659,6 +6663,8 @@ fold (tree expr)\n \treturn non_lvalue (fold_convert (type, arg0));\n       if (integer_zerop (arg1))\n \treturn omit_one_operand (type, arg1, arg0);\n+      if (operand_equal_p (arg0, arg1, 0))\n+\treturn non_lvalue (fold_convert (type, arg0));\n       t1 = distribute_bit_expr (code, type, arg0, arg1);\n       if (t1 != NULL_TREE)\n \treturn t1;"}]}