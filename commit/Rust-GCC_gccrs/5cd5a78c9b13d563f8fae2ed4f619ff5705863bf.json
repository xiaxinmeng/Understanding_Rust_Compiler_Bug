{"sha": "5cd5a78c9b13d563f8fae2ed4f619ff5705863bf", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWNkNWE3OGM5YjEzZDU2M2Y4ZmFlMmVkNGY2MTlmZjU3MDU4NjNiZg==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2012-12-06T20:21:08Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2012-12-06T20:21:08Z"}, "message": "re PR c++/54744 (internal compiler error: Segmentation fault, by dependent base, member typedef and ctor-initializer)\n\n\tPR c++/54744\n\t* pt.c (resolve_typename_type): Check TYPENAME_IS_RESOLVING_P on scope.\n\t* init.c (expand_member_init): Check for being in a template first.\n\t* parser.c (cp_parser_mem_initializer_list): Only check class types\n\tfor equivalence to the current class.\n\nFrom-SVN: r194267", "tree": {"sha": "a29426df85df5c1f3893e6c6b00b12bea934c634", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a29426df85df5c1f3893e6c6b00b12bea934c634"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5cd5a78c9b13d563f8fae2ed4f619ff5705863bf", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5cd5a78c9b13d563f8fae2ed4f619ff5705863bf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5cd5a78c9b13d563f8fae2ed4f619ff5705863bf", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5cd5a78c9b13d563f8fae2ed4f619ff5705863bf/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "1e8671f733a879525232e2e2f7b77d00362032d7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1e8671f733a879525232e2e2f7b77d00362032d7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1e8671f733a879525232e2e2f7b77d00362032d7"}], "stats": {"total": 35, "additions": 31, "deletions": 4}, "files": [{"sha": "bcad0c24636bf2678113cae9f1557ea2890a746f", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5cd5a78c9b13d563f8fae2ed4f619ff5705863bf/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5cd5a78c9b13d563f8fae2ed4f619ff5705863bf/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=5cd5a78c9b13d563f8fae2ed4f619ff5705863bf", "patch": "@@ -1,5 +1,11 @@\n 2012-12-06  Jason Merrill  <jason@redhat.com>\n \n+\tPR c++/54744\n+\t* pt.c (resolve_typename_type): Check TYPENAME_IS_RESOLVING_P on scope.\n+\t* init.c (expand_member_init): Check for being in a template first.\n+\t* parser.c (cp_parser_mem_initializer_list): Only check class types\n+\tfor equivalence to the current class.\n+\n \tPR c++/54913\n \t* semantics.c (finish_qualified_id_expr): convert_from_reference\n \tafter building a SCOPE_REF."}, {"sha": "2206c169bec214974c9e51510beee87599f6de98", "filename": "gcc/cp/init.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5cd5a78c9b13d563f8fae2ed4f619ff5705863bf/gcc%2Fcp%2Finit.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5cd5a78c9b13d563f8fae2ed4f619ff5705863bf/gcc%2Fcp%2Finit.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Finit.c?ref=5cd5a78c9b13d563f8fae2ed4f619ff5705863bf", "patch": "@@ -1370,8 +1370,8 @@ expand_member_init (tree name)\n       tree virtual_binfo;\n       int i;\n \n-      if (same_type_p (basetype, current_class_type)\n-\t  || current_template_parms)\n+      if (current_template_parms\n+\t  || same_type_p (basetype, current_class_type))\n \t  return basetype;\n \n       class_binfo = TYPE_BINFO (current_class_type);"}, {"sha": "3566d741f14c7b3a2f294f6c6b57eebc4e35170f", "filename": "gcc/cp/parser.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5cd5a78c9b13d563f8fae2ed4f619ff5705863bf/gcc%2Fcp%2Fparser.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5cd5a78c9b13d563f8fae2ed4f619ff5705863bf/gcc%2Fcp%2Fparser.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fparser.c?ref=5cd5a78c9b13d563f8fae2ed4f619ff5705863bf", "patch": "@@ -11592,7 +11592,7 @@ cp_parser_mem_initializer_list (cp_parser* parser)\n \t}\n       /* Look for a target constructor. */\n       if (mem_initializer != error_mark_node\n-\t  && TYPE_P (TREE_PURPOSE (mem_initializer))\n+\t  && CLASS_TYPE_P (TREE_PURPOSE (mem_initializer))\n \t  && same_type_p (TREE_PURPOSE (mem_initializer), current_class_type))\n \t{\n \t  maybe_warn_cpp0x (CPP0X_DELEGATING_CTORS);"}, {"sha": "87cd33760c251bfa483918c9c6ce559cf97a4e20", "filename": "gcc/cp/pt.c", "status": "modified", "additions": 10, "deletions": 1, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5cd5a78c9b13d563f8fae2ed4f619ff5705863bf/gcc%2Fcp%2Fpt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5cd5a78c9b13d563f8fae2ed4f619ff5705863bf/gcc%2Fcp%2Fpt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fpt.c?ref=5cd5a78c9b13d563f8fae2ed4f619ff5705863bf", "patch": "@@ -20079,7 +20079,16 @@ resolve_typename_type (tree type, bool only_current_p)\n   /* If the SCOPE is itself a TYPENAME_TYPE, then we need to resolve\n      it first before we can figure out what NAME refers to.  */\n   if (TREE_CODE (scope) == TYPENAME_TYPE)\n-    scope = resolve_typename_type (scope, only_current_p);\n+    {\n+      if (TYPENAME_IS_RESOLVING_P (scope))\n+\t/* Given a class template A with a dependent base with nested type C,\n+\t   typedef typename A::C::C C will land us here, as trying to resolve\n+\t   the initial A::C leads to the local C typedef, which leads back to\n+\t   A::C::C.  So we break the recursion now.  */\n+\treturn type;\n+      else\n+\tscope = resolve_typename_type (scope, only_current_p);\n+    }\n   /* If we don't know what SCOPE refers to, then we cannot resolve the\n      TYPENAME_TYPE.  */\n   if (TREE_CODE (scope) == TYPENAME_TYPE)"}, {"sha": "b6824491f37e4ae373adb7184e74498132c5106f", "filename": "gcc/testsuite/g++.dg/template/meminit3.C", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5cd5a78c9b13d563f8fae2ed4f619ff5705863bf/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fmeminit3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5cd5a78c9b13d563f8fae2ed4f619ff5705863bf/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fmeminit3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fmeminit3.C?ref=5cd5a78c9b13d563f8fae2ed4f619ff5705863bf", "patch": "@@ -0,0 +1,12 @@\n+// PR c++/54744\n+\n+template <typename T>\n+struct base {\n+  typedef base base_type;\n+};\n+\n+template <typename T>\n+struct derived : base<T> {\n+  typedef typename derived::base_type::base_type base_type;\n+  derived() : base_type() {}\n+};"}]}