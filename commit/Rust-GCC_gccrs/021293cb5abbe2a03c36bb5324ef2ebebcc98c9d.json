{"sha": "021293cb5abbe2a03c36bb5324ef2ebebcc98c9d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDIxMjkzY2I1YWJiZTJhMDNjMzZiYjUzMjRlZjJlYmViY2M5OGM5ZA==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2014-02-01T08:40:31Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2014-02-01T08:40:31Z"}, "message": "re PR tree-optimization/60003 (wrong code with __builtin_setjmp/__builtin_longjmp and inlining)\n\n\tPR tree-optimization/60003\n\t* gimple-low.c (lower_builtin_setjmp): Set cfun->has_nonlocal_label.\n\t* profile.c (branch_prob): Use gimple_call_builtin_p\n\tto check for BUILT_IN_SETJMP_RECEIVER.\n\t* tree-inline.c (copy_bb): Call notice_special_calls.\n\n\t* gcc.c-torture/execute/pr60003.c: New test.\n\nFrom-SVN: r207382", "tree": {"sha": "22ced0be1f1d48fca4a1b793689fd1f9bffc18f7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/22ced0be1f1d48fca4a1b793689fd1f9bffc18f7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/021293cb5abbe2a03c36bb5324ef2ebebcc98c9d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/021293cb5abbe2a03c36bb5324ef2ebebcc98c9d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/021293cb5abbe2a03c36bb5324ef2ebebcc98c9d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/021293cb5abbe2a03c36bb5324ef2ebebcc98c9d/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "b49e41743c3343f32642a4fbb2dd3c2bc4ccb838", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b49e41743c3343f32642a4fbb2dd3c2bc4ccb838", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b49e41743c3343f32642a4fbb2dd3c2bc4ccb838"}], "stats": {"total": 80, "additions": 69, "deletions": 11}, "files": [{"sha": "6b6add62651bafca7377cb7a6c18bc4424890b87", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/021293cb5abbe2a03c36bb5324ef2ebebcc98c9d/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/021293cb5abbe2a03c36bb5324ef2ebebcc98c9d/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=021293cb5abbe2a03c36bb5324ef2ebebcc98c9d", "patch": "@@ -1,3 +1,11 @@\n+2014-02-01  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR tree-optimization/60003\n+\t* gimple-low.c (lower_builtin_setjmp): Set cfun->has_nonlocal_label.\n+\t* profile.c (branch_prob): Use gimple_call_builtin_p\n+\tto check for BUILT_IN_SETJMP_RECEIVER.\n+\t* tree-inline.c (copy_bb): Call notice_special_calls.\n+\n 2014-01-31  Vladimir Makarov  <vmakarov@redhat.com>\n \n \tPR bootstrap/59985"}, {"sha": "5fbcf3f34ac3cf51c998cbee95e5f706ea0f81de", "filename": "gcc/gimple-low.c", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/021293cb5abbe2a03c36bb5324ef2ebebcc98c9d/gcc%2Fgimple-low.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/021293cb5abbe2a03c36bb5324ef2ebebcc98c9d/gcc%2Fgimple-low.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgimple-low.c?ref=021293cb5abbe2a03c36bb5324ef2ebebcc98c9d", "patch": "@@ -709,6 +709,12 @@ lower_builtin_setjmp (gimple_stmt_iterator *gsi)\n   tree dest, t, arg;\n   gimple g;\n \n+  /* __builtin_setjmp_{setup,receiver} aren't ECF_RETURNS_TWICE and for RTL\n+     these builtins are modelled as non-local label jumps to the label\n+     that is passed to these two builtins, so pretend we have a non-local\n+     label during GIMPLE passes too.  See PR60003.  */ \n+  cfun->has_nonlocal_label = true;\n+\n   /* NEXT_LABEL is the label __builtin_longjmp will jump to.  Its address is\n      passed to both __builtin_setjmp_setup and __builtin_setjmp_receiver.  */\n   FORCED_LABEL (next_label) = 1;"}, {"sha": "83cbc07967b44cb152128a7b669726173e29df32", "filename": "gcc/profile.c", "status": "modified", "additions": 1, "deletions": 5, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/021293cb5abbe2a03c36bb5324ef2ebebcc98c9d/gcc%2Fprofile.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/021293cb5abbe2a03c36bb5324ef2ebebcc98c9d/gcc%2Fprofile.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fprofile.c?ref=021293cb5abbe2a03c36bb5324ef2ebebcc98c9d", "patch": "@@ -1104,7 +1104,6 @@ branch_prob (void)\n \t    {\n \t      gimple_stmt_iterator gsi;\n \t      gimple first;\n-\t      tree fndecl;\n \n \t      gsi = gsi_start_nondebug_after_labels_bb (bb);\n \t      gcc_checking_assert (!gsi_end_p (gsi));\n@@ -1114,10 +1113,7 @@ branch_prob (void)\n \t\t special and don't expect anything to be inserted before\n \t\t them.  */\n \t      if (is_gimple_call (first)\n-\t\t  && (((fndecl = gimple_call_fndecl (first)) != NULL\n-\t\t       && DECL_BUILT_IN_CLASS (fndecl) == BUILT_IN_NORMAL\n-\t\t       && (DECL_FUNCTION_CODE (fndecl)\n-\t\t\t   == BUILT_IN_SETJMP_RECEIVER))\n+\t\t  && (gimple_call_builtin_p (first, BUILT_IN_SETJMP_RECEIVER)\n \t\t      || (gimple_call_flags (first) & ECF_RETURNS_TWICE)\n \t\t      || (gimple_call_internal_p (first)\n \t\t\t  && (gimple_call_internal_fn (first)"}, {"sha": "302425935df9e0372ecf228b39df4454b0cd1b92", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/021293cb5abbe2a03c36bb5324ef2ebebcc98c9d/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/021293cb5abbe2a03c36bb5324ef2ebebcc98c9d/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=021293cb5abbe2a03c36bb5324ef2ebebcc98c9d", "patch": "@@ -1,3 +1,8 @@\n+2014-02-01  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR tree-optimization/60003\n+\t* gcc.c-torture/execute/pr60003.c: New test.\n+\n 2014-01-31  Vladimir Makarov  <vmakarov@redhat.com>\n \n \tPR bootstrap/59985"}, {"sha": "94d9cf886985ad7fba50987bfe34d862fe287b02", "filename": "gcc/testsuite/gcc.c-torture/execute/pr60003.c", "status": "added", "additions": 48, "deletions": 0, "changes": 48, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/021293cb5abbe2a03c36bb5324ef2ebebcc98c9d/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr60003.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/021293cb5abbe2a03c36bb5324ef2ebebcc98c9d/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr60003.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr60003.c?ref=021293cb5abbe2a03c36bb5324ef2ebebcc98c9d", "patch": "@@ -0,0 +1,48 @@\n+/* PR tree-optimization/60003 */\n+\n+extern void abort (void);\n+\n+unsigned long long jmp_buf[5];\n+\n+__attribute__((noinline, noclone)) void\n+baz (void)\n+{\n+  __builtin_longjmp (&jmp_buf, 1);\n+}\n+\n+void\n+bar (void)\n+{\n+  baz ();\n+}\n+\n+__attribute__((noinline, noclone)) int\n+foo (int x)\n+{\n+  int a = 0;\n+\n+  if (__builtin_setjmp (&jmp_buf) == 0)\n+    {\n+      while (1)\n+\t{\n+\t  a = 1;\n+\t  bar ();  /* OK if baz () instead */\n+\t}\n+    }\n+  else\n+    {\n+      if (a == 0)\n+\treturn 0;\n+      else\n+\treturn x;\n+    }\n+}\n+\n+int\n+main ()\n+{\n+  if (foo (1) == 0)\n+    abort ();\n+\n+  return 0;\n+}"}, {"sha": "439ef4c2933a793e76fe387379a081515441e458", "filename": "gcc/tree-inline.c", "status": "modified", "additions": 1, "deletions": 6, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/021293cb5abbe2a03c36bb5324ef2ebebcc98c9d/gcc%2Ftree-inline.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/021293cb5abbe2a03c36bb5324ef2ebebcc98c9d/gcc%2Ftree-inline.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-inline.c?ref=021293cb5abbe2a03c36bb5324ef2ebebcc98c9d", "patch": "@@ -1745,7 +1745,6 @@ copy_bb (copy_body_data *id, basic_block bb, int frequency_scale,\n \t  if (is_gimple_call (stmt))\n \t    {\n \t      struct cgraph_edge *edge;\n-\t      int flags;\n \n \t      switch (id->transform_call_graph_edges)\n \t\t{\n@@ -1868,11 +1867,7 @@ copy_bb (copy_body_data *id, basic_block bb, int frequency_scale,\n \t\t    }\n \t\t}\n \n-\t      flags = gimple_call_flags (stmt);\n-\t      if (flags & ECF_MAY_BE_ALLOCA)\n-\t\tcfun->calls_alloca = true;\n-\t      if (flags & ECF_RETURNS_TWICE)\n-\t\tcfun->calls_setjmp = true;\n+\t      notice_special_calls (stmt);\n \t    }\n \n \t  maybe_duplicate_eh_stmt_fn (cfun, stmt, id->src_cfun, orig_stmt,"}]}