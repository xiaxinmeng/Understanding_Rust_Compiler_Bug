{"sha": "aa4db31dd2a99b4c902f2a3ac6ef4397f84dd888", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWE0ZGIzMWRkMmE5OWI0YzkwMmYyYTNhYzZlZjQzOTdmODRkZDg4OA==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2021-01-07T22:00:28Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2021-01-07T22:00:28Z"}, "message": "c++: Fix up tsubst of BIT_CAST_EXPR [PR98329]\n\nAs the testcase shows, calling cp_build_bit_cast in tsubst_copy doesn't seem\nto be a good idea, because tsubst_copy might not really make the operand\nnon-dependent, but as processing_template_decl can be 0,\ntype_dependent_expression_p will return false and then cp_build_bit_cast\nassumes the type is non-NULL and non-dependent.\nSo, this patch just follows what is done e.g. for NOP_EXPR etc. and just\nbuilds some tree in tsubst_copy, and only calls the semantics.c function\nfrom tsubst_copy_and_build.\n\n2021-01-07  Jakub Jelinek  <jakub@redhat.com>\n\n\tPR c++/98329\n\t* pt.c (tsubst_copy) <case BIT_CAST_EXPR>: Don't call\n\tcp_build_bit_cast here, instead just build_min a BIT_CAST_EXPR and set\n\tits location.\n\t(tsubst_copy_and_build): Handle BIT_CAST_EXPR.\n\n\t* g++.dg/cpp2a/bit-cast10.C: New test.", "tree": {"sha": "450bf667833ec15b6010796669c34dbb069cedf2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/450bf667833ec15b6010796669c34dbb069cedf2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/aa4db31dd2a99b4c902f2a3ac6ef4397f84dd888", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/aa4db31dd2a99b4c902f2a3ac6ef4397f84dd888", "html_url": "https://github.com/Rust-GCC/gccrs/commit/aa4db31dd2a99b4c902f2a3ac6ef4397f84dd888", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/aa4db31dd2a99b4c902f2a3ac6ef4397f84dd888/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "178f0afce3611282170de380fcea9db9d6e3ff0c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/178f0afce3611282170de380fcea9db9d6e3ff0c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/178f0afce3611282170de380fcea9db9d6e3ff0c"}], "stats": {"total": 53, "additions": 52, "deletions": 1}, "files": [{"sha": "100c35f053c1a1646598d1a5a6127035c33fcfd1", "filename": "gcc/cp/pt.c", "status": "modified", "additions": 10, "deletions": 1, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aa4db31dd2a99b4c902f2a3ac6ef4397f84dd888/gcc%2Fcp%2Fpt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aa4db31dd2a99b4c902f2a3ac6ef4397f84dd888/gcc%2Fcp%2Fpt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fpt.c?ref=aa4db31dd2a99b4c902f2a3ac6ef4397f84dd888", "patch": "@@ -16796,7 +16796,9 @@ tsubst_copy (tree t, tree args, tsubst_flags_t complain, tree in_decl)\n       {\n \ttree type = tsubst (TREE_TYPE (t), args, complain, in_decl);\n \ttree op0 = tsubst_copy (TREE_OPERAND (t, 0), args, complain, in_decl);\n-\treturn cp_build_bit_cast (EXPR_LOCATION (t), type, op0, complain);\n+\tr = build_min (BIT_CAST_EXPR, type, op0);\n+\tSET_EXPR_LOCATION (r, EXPR_LOCATION (t));\n+\treturn r;\n       }\n \n     case SIZEOF_EXPR:\n@@ -19631,6 +19633,13 @@ tsubst_copy_and_build (tree t,\n \tRETURN (r);\n       }\n \n+    case BIT_CAST_EXPR:\n+      {\n+\ttree type = tsubst (TREE_TYPE (t), args, complain, in_decl);\n+\ttree op0 = RECUR (TREE_OPERAND (t, 0));\n+\tRETURN (cp_build_bit_cast (EXPR_LOCATION (t), type, op0, complain));\n+      }\n+\n     case POSTDECREMENT_EXPR:\n     case POSTINCREMENT_EXPR:\n       op1 = tsubst_non_call_postfix_expression (TREE_OPERAND (t, 0),"}, {"sha": "69298fb423d8534f60c7e3d85e79f2458f151bf1", "filename": "gcc/testsuite/g++.dg/cpp2a/bit-cast10.C", "status": "added", "additions": 42, "deletions": 0, "changes": 42, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aa4db31dd2a99b4c902f2a3ac6ef4397f84dd888/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp2a%2Fbit-cast10.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aa4db31dd2a99b4c902f2a3ac6ef4397f84dd888/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp2a%2Fbit-cast10.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp2a%2Fbit-cast10.C?ref=aa4db31dd2a99b4c902f2a3ac6ef4397f84dd888", "patch": "@@ -0,0 +1,42 @@\n+// PR c++/98329\n+// { dg-do compile { target c++20 } }\n+\n+template <typename To, typename From>\n+constexpr To\n+foo (const From &from)\n+{\n+  return __builtin_bit_cast (To, &from);\n+}\n+\n+template <typename To, typename From>\n+constexpr To\n+bar (const From &from)\n+{\n+  return __builtin_bit_cast (To, *from);\n+}\n+\n+template <typename To, typename From>\n+constexpr To\n+baz (const From &from)\n+{\n+  return __builtin_bit_cast (To, **from);\n+}\n+\n+template <typename To, typename From>\n+constexpr To\n+qux (const From &from)\n+{\n+  return __builtin_bit_cast (To, -from);\n+}\n+\n+void\n+test ()\n+{\n+  int i = 0;\n+  int *j = &i;\n+  int **k = &j;\n+  foo <char *> (i);\n+  bar <int> (j);\n+  baz <int> (k);\n+  qux <int> (i);\n+}"}]}