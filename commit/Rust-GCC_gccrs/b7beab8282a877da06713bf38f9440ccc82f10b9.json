{"sha": "b7beab8282a877da06713bf38f9440ccc82f10b9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjdiZWFiODI4MmE4NzdkYTA2NzEzYmYzOGY5NDQwY2NjODJmMTBiOQ==", "commit": {"author": {"name": "David Edelsohn", "email": "dje.gcc@gmail.com", "date": "2020-10-15T18:12:52Z"}, "committer": {"name": "David Edelsohn", "email": "dje.gcc@gmail.com", "date": "2020-10-15T19:25:40Z"}, "message": "testsuite: Fix some endianness bugs in p9 runnable tests.\n\nThis patch fixes some bugs in the powerpc testsuite for runnable tests\nwhose expected values were endian dependent.\n\ngcc/testsuite/ChangeLog:\n\n2020-10-15  David Edelsohn  <dje.gcc@gmail.com>\n\n\t* gcc.target/powerpc/builtins-1-p9-runnable.c: Adjust for big endian.\n\t* gcc.target/powerpc/builtins-7-p9-runnable.c: Same.", "tree": {"sha": "0bac8616e2b8badf7ac7876ff1bdef33f4ebce3d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0bac8616e2b8badf7ac7876ff1bdef33f4ebce3d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b7beab8282a877da06713bf38f9440ccc82f10b9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b7beab8282a877da06713bf38f9440ccc82f10b9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b7beab8282a877da06713bf38f9440ccc82f10b9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b7beab8282a877da06713bf38f9440ccc82f10b9/comments", "author": {"login": "edelsohn", "id": 667700, "node_id": "MDQ6VXNlcjY2NzcwMA==", "avatar_url": "https://avatars.githubusercontent.com/u/667700?v=4", "gravatar_id": "", "url": "https://api.github.com/users/edelsohn", "html_url": "https://github.com/edelsohn", "followers_url": "https://api.github.com/users/edelsohn/followers", "following_url": "https://api.github.com/users/edelsohn/following{/other_user}", "gists_url": "https://api.github.com/users/edelsohn/gists{/gist_id}", "starred_url": "https://api.github.com/users/edelsohn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/edelsohn/subscriptions", "organizations_url": "https://api.github.com/users/edelsohn/orgs", "repos_url": "https://api.github.com/users/edelsohn/repos", "events_url": "https://api.github.com/users/edelsohn/events{/privacy}", "received_events_url": "https://api.github.com/users/edelsohn/received_events", "type": "User", "site_admin": false}, "committer": {"login": "edelsohn", "id": 667700, "node_id": "MDQ6VXNlcjY2NzcwMA==", "avatar_url": "https://avatars.githubusercontent.com/u/667700?v=4", "gravatar_id": "", "url": "https://api.github.com/users/edelsohn", "html_url": "https://github.com/edelsohn", "followers_url": "https://api.github.com/users/edelsohn/followers", "following_url": "https://api.github.com/users/edelsohn/following{/other_user}", "gists_url": "https://api.github.com/users/edelsohn/gists{/gist_id}", "starred_url": "https://api.github.com/users/edelsohn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/edelsohn/subscriptions", "organizations_url": "https://api.github.com/users/edelsohn/orgs", "repos_url": "https://api.github.com/users/edelsohn/repos", "events_url": "https://api.github.com/users/edelsohn/events{/privacy}", "received_events_url": "https://api.github.com/users/edelsohn/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7dbf96e2a2a673d78a23da9155c0b4c4c36621c7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7dbf96e2a2a673d78a23da9155c0b4c4c36621c7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7dbf96e2a2a673d78a23da9155c0b4c4c36621c7"}], "stats": {"total": 43, "additions": 39, "deletions": 4}, "files": [{"sha": "976654155b1a692e90fb29def2deb9e0bd8f2ee9", "filename": "gcc/testsuite/gcc.target/powerpc/builtins-1-p9-runnable.c", "status": "modified", "additions": 7, "deletions": 2, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b7beab8282a877da06713bf38f9440ccc82f10b9/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fbuiltins-1-p9-runnable.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b7beab8282a877da06713bf38f9440ccc82f10b9/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fbuiltins-1-p9-runnable.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fbuiltins-1-p9-runnable.c?ref=b7beab8282a877da06713bf38f9440ccc82f10b9", "patch": "@@ -16,8 +16,13 @@ int main() {\n   vfb = (vector float){10.0, -2.0, 70.0, 999.0 };\n \n   /* Expected results.  */\n+#ifdef __BIG_ENDIAN__\n+  vexpected = (vector unsigned short) { 0x4900, 0xc000, 0x5460, 0x63ce,\n+\t\t\t\t\t0x3666, 0x3e66, 0x4d00, 0x563e };\n+#else\n   vexpected = (vector unsigned short) { 0x3666, 0x3e66, 0x4d00, 0x563e,\n-\t\t\t\t\t0x4900, 0xc000, 0x5460, 0x63ce};\n+\t\t\t\t\t0x4900, 0xc000, 0x5460, 0x63ce };\n+#endif\n \n /*\n      vresult = vec_pack_to_short_fp32 (vfa, vfb);\n@@ -44,7 +49,7 @@ int main() {\n   for(i = 0; i< 8; i++) {\n     if (vresult[i] != vexpected[i]) {\n \tprintf(\"i=[%d] 0x%x != 0x%x \\n\",i,vresult[i],vexpected[i]);\n-      abort();\n+\tabort();\n     }\n   }\n }"}, {"sha": "fa4eb2db37e7835810659c8ddbc1332a67a7af92", "filename": "gcc/testsuite/gcc.target/powerpc/builtins-7-p9-runnable.c", "status": "modified", "additions": 32, "deletions": 2, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b7beab8282a877da06713bf38f9440ccc82f10b9/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fbuiltins-7-p9-runnable.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b7beab8282a877da06713bf38f9440ccc82f10b9/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fbuiltins-7-p9-runnable.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fbuiltins-7-p9-runnable.c?ref=b7beab8282a877da06713bf38f9440ccc82f10b9", "patch": "@@ -93,10 +93,17 @@ int main()\n \n    vsi_arg = (vector signed int){0xA, 0xB, 0xC, 0xD};\n \n+#ifdef __BIG_ENDIAN__\n+   vec_uc_expected = (vector unsigned char){0, 0, 0, 0xB,\n+\t\t\t\t\t    5, 6, 7, 8,\n+\t\t\t\t\t    9, 10, 11, 12,\n+\t\t\t\t\t    13, 14, 15, 16};\n+#else\n    vec_uc_expected = (vector unsigned char){0xC, 0, 0, 0,\n \t\t\t\t\t    5, 6, 7, 8,\n \t\t\t\t\t    9, 10, 11, 12,\n \t\t\t\t\t    13, 14, 15, 16};\n+#endif\n    /* Test vec_insert4b() */\n    /* Insert into char 0 location */\n    vec_uc_result = vec_insert4b (vsi_arg, vec_uc_arg, 0);\n@@ -112,10 +119,17 @@ int main()\n       }\n \n    /* insert into char 4 location */\n+#ifdef __BIG_ENDIAN__\n+   vec_uc_expected = (vector unsigned char){1, 2, 3, 4,\n+\t\t\t\t\t    0, 0, 0, 3,\n+\t\t\t\t\t    9, 10, 11, 12,\n+\t\t\t\t\t    13, 14, 15, 16};\n+#else\n    vec_uc_expected = (vector unsigned char){1, 2, 3, 4,\n \t\t\t\t\t    2, 0, 0, 0,\n \t\t\t\t\t    9, 10, 11, 12,\n \t\t\t\t\t    13, 14, 15, 16};\n+#endif\n    vui_arg = (vector unsigned int){0x4, 0x3, 0x2, 0x1};\n \n    vec_uc_result = vec_insert4b (vui_arg, vec_uc_arg, 4);\n@@ -132,12 +146,20 @@ int main()\n \n    /* Test vec_extract4b() */\n    /* Extract 4b, from char 0 location */\n+#ifdef __BIG_ENDIAN__\n+   vec_uc_arg = (vector unsigned char){0, 0, 0, 10,\n+\t\t\t\t       0, 0, 0, 20,\n+\t\t\t\t       0, 0, 0, 30,\n+\t\t\t\t       0, 0, 0, 40};\n+   vec_ull_expected = (vector unsigned long long){10, 0};\n+#else\n    vec_uc_arg = (vector unsigned char){10, 0, 0, 0,\n \t\t\t\t       20, 0, 0, 0,\n \t\t\t\t       30, 0, 0, 0,\n \t\t\t\t       40, 0, 0, 0};\n-\n    vec_ull_expected = (vector unsigned long long){0, 10};\n+#endif\n+\n    vec_ull_result = vec_extract4b(vec_uc_arg, 0);\n \n    if (result_wrong_ull(vec_ull_expected, vec_ull_result))\n@@ -151,12 +173,20 @@ int main()\n       }\n \n    /* Extract 4b, from char 12 location */\n+#ifdef __BIG_ENDIAN__\n+   vec_uc_arg = (vector unsigned char){0, 0, 0, 10,\n+\t\t\t\t       0, 0, 0, 20,\n+\t\t\t\t       0, 0, 0, 30,\n+\t\t\t\t       0, 0, 0, 40};\n+   vec_ull_expected = (vector unsigned long long){40, 0};\n+#else\n    vec_uc_arg = (vector unsigned char){10, 0, 0, 0,\n \t\t\t\t       20, 0, 0, 0,\n \t\t\t\t       30, 0, 0, 0,\n \t\t\t\t       40, 0, 0, 0};\n-\n    vec_ull_expected = (vector unsigned long long){0, 40};\n+#endif\n+\n    vec_ull_result = vec_extract4b(vec_uc_arg, 12);\n \n    if (result_wrong_ull(vec_ull_expected, vec_ull_result))"}]}