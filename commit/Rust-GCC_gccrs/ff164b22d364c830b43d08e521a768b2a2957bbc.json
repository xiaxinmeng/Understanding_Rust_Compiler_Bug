{"sha": "ff164b22d364c830b43d08e521a768b2a2957bbc", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZmYxNjRiMjJkMzY0YzgzMGI0M2QwOGU1MjFhNzY4YjJhMjk1N2JiYw==", "commit": {"author": {"name": "Geoffrey Keating", "email": "geoffk@apple.com", "date": "2004-08-30T22:19:24Z"}, "committer": {"name": "Geoffrey Keating", "email": "geoffk@gcc.gnu.org", "date": "2004-08-30T22:19:24Z"}, "message": "re PR c/12738 (Missing function with 'static' block-scope declaration; unit-at-a-time; and IMA.)\n\n2004-08-30  Geoffrey Keating  <geoffk@apple.com>\n\n\tPR 12738\n\tPR 17205\n\tRadar 3460526\n\tRadar 3775729\n\t* c-decl.c (grokdeclarator): Produce error for 'static' on local\n\tfunction declaration.\n\nIndex: testsuite/ChangeLog\n2004-08-30  Geoffrey Keating  <geoffk@apple.com>\n\n\t* gcc.dg/funcdef-storage-1.c: New.\n\t* gcc.c-torture/compile/920625-2.c: Don't use 'static' to declare\n\tan extern function in local scope.\n\t* gcc.c-torture/execute/20010605-1.c: Don't use 'static inline' to\n\tdeclare an 'auto inline' function in local scope.\n\t* gcc.dg/20011130-1.c: Likewise.\n\t* gcc.c-torture/execute/nest-stdar-1.c: Don't use 'static' to declare\n\tan 'auto' function in local scope.\n\t* gcc.dg/20021014-1.c: Likewise.\n\t* gcc.dg/20030331-2.c: Likewise.\n\nFrom-SVN: r86807", "tree": {"sha": "0a03574db9fe3cc658f3e39c3b39e37c3aa5c726", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0a03574db9fe3cc658f3e39c3b39e37c3aa5c726"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ff164b22d364c830b43d08e521a768b2a2957bbc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ff164b22d364c830b43d08e521a768b2a2957bbc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ff164b22d364c830b43d08e521a768b2a2957bbc", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ff164b22d364c830b43d08e521a768b2a2957bbc/comments", "author": {"login": "geoffk01", "id": 31905243, "node_id": "MDQ6VXNlcjMxOTA1MjQz", "avatar_url": "https://avatars.githubusercontent.com/u/31905243?v=4", "gravatar_id": "", "url": "https://api.github.com/users/geoffk01", "html_url": "https://github.com/geoffk01", "followers_url": "https://api.github.com/users/geoffk01/followers", "following_url": "https://api.github.com/users/geoffk01/following{/other_user}", "gists_url": "https://api.github.com/users/geoffk01/gists{/gist_id}", "starred_url": "https://api.github.com/users/geoffk01/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/geoffk01/subscriptions", "organizations_url": "https://api.github.com/users/geoffk01/orgs", "repos_url": "https://api.github.com/users/geoffk01/repos", "events_url": "https://api.github.com/users/geoffk01/events{/privacy}", "received_events_url": "https://api.github.com/users/geoffk01/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "e2cad04b2825ff91d12ebe595c91bbf3cf824fcc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e2cad04b2825ff91d12ebe595c91bbf3cf824fcc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e2cad04b2825ff91d12ebe595c91bbf3cf824fcc"}], "stats": {"total": 83, "additions": 61, "deletions": 22}, "files": [{"sha": "5ec3a32fc723e2c490241c822461626381ad7e91", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ff164b22d364c830b43d08e521a768b2a2957bbc/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ff164b22d364c830b43d08e521a768b2a2957bbc/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=ff164b22d364c830b43d08e521a768b2a2957bbc", "patch": "@@ -1,3 +1,12 @@\n+2004-08-30  Geoffrey Keating  <geoffk@apple.com>\n+\n+\tPR 12738\n+\tPR 17205\n+\tRadar 3460526\n+\tRadar 3775729\n+\t* c-decl.c (grokdeclarator): Produce error for 'static' on local\n+\tfunction declaration.\n+\n 2004-08-30  Richard Henderson  <rth@redhat.com>\n \n \t* expr.c (array_ref_element_size): Force aligned_size back to"}, {"sha": "b2f7bbe42d24e046f25855bebe89ccfce73ad7dd", "filename": "gcc/c-decl.c", "status": "modified", "additions": 18, "deletions": 15, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ff164b22d364c830b43d08e521a768b2a2957bbc/gcc%2Fc-decl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ff164b22d364c830b43d08e521a768b2a2957bbc/gcc%2Fc-decl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-decl.c?ref=ff164b22d364c830b43d08e521a768b2a2957bbc", "patch": "@@ -4664,26 +4664,29 @@ grokdeclarator (tree declarator, tree declspecs,\n       }\n     else if (TREE_CODE (type) == FUNCTION_TYPE)\n       {\n-\tif (specbits & (1 << (int) RID_AUTO)\n-\t    && (pedantic || current_scope == file_scope))\n-\t  pedwarn (\"invalid storage class for function `%s'\", name);\n-\tif (specbits & (1 << (int) RID_REGISTER))\n-\t  error (\"invalid storage class for function `%s'\", name);\n-\tif (specbits & (1 << (int) RID_THREAD))\n+\tif (specbits & (1 << (int) RID_REGISTER)\n+\t    || specbits & (1 << (int) RID_THREAD))\n \t  error (\"invalid storage class for function `%s'\", name);\n-\t/* Function declaration not at file scope.\n-\t   Storage classes other than `extern' are not allowed\n-\t   and `extern' makes no difference.  */\n-\tif (current_scope != file_scope\n-\t    && (specbits & ((1 << (int) RID_STATIC) | (1 << (int) RID_INLINE)))\n-\t    && pedantic)\n-\t  pedwarn (\"invalid storage class for function `%s'\", name);\n+\telse if (current_scope != file_scope)\n+\t  {\n+\t    /* Function declaration not at file scope.  Storage\n+\t       classes other than `extern' are not allowed, C99\n+\t       6.7.1p5, and `extern' makes no difference.  However,\n+\t       GCC allows 'auto', perhaps with 'inline', to support\n+\t       nested functions.  */\n+\t    if (specbits & (1 << (int) RID_AUTO))\n+\t      {\n+\t\tif (pedantic)\n+\t\t  pedwarn (\"invalid storage class for function `%s'\", name);\n+\t      }\n+\t    if (specbits & (1 << (int) RID_STATIC))\n+\t      error (\"invalid storage class for function `%s'\", name);\n+\t  }\n \n \tdecl = build_decl (FUNCTION_DECL, declarator, type);\n \tdecl = build_decl_attribute_variant (decl, decl_attr);\n \n-\tDECL_LANG_SPECIFIC (decl)\n-\t  = GGC_CNEW (struct lang_decl);\n+\tDECL_LANG_SPECIFIC (decl) = GGC_CNEW (struct lang_decl);\n \n \tif (pedantic && type_quals && ! DECL_IN_SYSTEM_HEADER (decl))\n \t  pedwarn (\"ISO C forbids qualified function types\");"}, {"sha": "f3dde948c8330f12dbd975e6bb1ed88c58062cc6", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ff164b22d364c830b43d08e521a768b2a2957bbc/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ff164b22d364c830b43d08e521a768b2a2957bbc/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=ff164b22d364c830b43d08e521a768b2a2957bbc", "patch": "@@ -1,3 +1,16 @@\n+2004-08-30  Geoffrey Keating  <geoffk@apple.com>\n+\n+\t* gcc.dg/funcdef-storage-1.c: New.\n+\t* gcc.c-torture/compile/920625-2.c: Don't use 'static' to declare\n+\tan extern function in local scope.\n+\t* gcc.c-torture/execute/20010605-1.c: Don't use 'static inline' to\n+\tdeclare an 'auto inline' function in local scope.\n+\t* gcc.dg/20011130-1.c: Likewise.\n+\t* gcc.c-torture/execute/nest-stdar-1.c: Don't use 'static' to declare\n+\tan 'auto' function in local scope.\n+\t* gcc.dg/20021014-1.c: Likewise.\n+\t* gcc.dg/20030331-2.c: Likewise.\n+\n 2004-08-30  Tobias Schlueter  <tobias.schlueter@physik.uni-muenchen.de>\n \n \t* gfortran.dg/blockdata_1.f90: New test."}, {"sha": "291e80d02101746d3ba5658d569d96549f957fc0", "filename": "gcc/testsuite/gcc.c-torture/compile/920625-2.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ff164b22d364c830b43d08e521a768b2a2957bbc/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2F920625-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ff164b22d364c830b43d08e521a768b2a2957bbc/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2F920625-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2F920625-2.c?ref=ff164b22d364c830b43d08e521a768b2a2957bbc", "patch": "@@ -23,7 +23,7 @@ trashQueryResult(Widget w, Boolean delete, caddr_t call_data)\n \n   extern Cursor busy, left_ptr;\n   extern String cwd;\n-      \tstatic void freeReturnStruct(void);\n+      \textern void freeReturnStruct(void);\n   String rmstring;\n   int status;\n   XedwListReturnStruct *tmp;\n@@ -58,7 +58,7 @@ copyQueryResult(Widget w, Boolean copy, caddr_t call_data)\n   extern void destroy_button_dialog();\n   extern void changestate(Boolean);\n   extern Cursor busy, left_ptr;\n-  static void freeReturnStruct(void);\n+  extern void freeReturnStruct(void);\n   int execute(String, String, String, Boolean);\n   extern String cwd;\n   String copystring;"}, {"sha": "c777af5bdc4ef17c563351bee21a44fb3bc38f77", "filename": "gcc/testsuite/gcc.c-torture/execute/20010605-1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ff164b22d364c830b43d08e521a768b2a2957bbc/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F20010605-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ff164b22d364c830b43d08e521a768b2a2957bbc/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F20010605-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F20010605-1.c?ref=ff164b22d364c830b43d08e521a768b2a2957bbc", "patch": "@@ -2,7 +2,7 @@ int main ()\n {\n   int v = 42;\n \n-  static inline int fff (int x)\n+  inline int fff (int x)\n     {\n       return x*10;\n     }"}, {"sha": "492670b5a1e729c5a2d32f98049ff6708120fc2a", "filename": "gcc/testsuite/gcc.c-torture/execute/nest-stdar-1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ff164b22d364c830b43d08e521a768b2a2957bbc/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fnest-stdar-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ff164b22d364c830b43d08e521a768b2a2957bbc/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fnest-stdar-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fnest-stdar-1.c?ref=ff164b22d364c830b43d08e521a768b2a2957bbc", "patch": "@@ -2,7 +2,7 @@\n \n main ()\n {\n-  static double f (int x, ...)\n+  double f (int x, ...)\n     {\n       va_list args;\n       double a;"}, {"sha": "60a2738fc653c13bb94d6ee4966edaa5264d06f6", "filename": "gcc/testsuite/gcc.dg/20011130-1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ff164b22d364c830b43d08e521a768b2a2957bbc/gcc%2Ftestsuite%2Fgcc.dg%2F20011130-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ff164b22d364c830b43d08e521a768b2a2957bbc/gcc%2Ftestsuite%2Fgcc.dg%2F20011130-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2F20011130-1.c?ref=ff164b22d364c830b43d08e521a768b2a2957bbc", "patch": "@@ -9,7 +9,7 @@\n \n static int __attribute__((unused)) foo (int x)\n {\n-  static inline int bar (int x)\n+  inline int bar (int x)\n     {\n       int y;\n       y = x;"}, {"sha": "dd8614c9f093da1cb7d033d5462688146ef9965e", "filename": "gcc/testsuite/gcc.dg/20021014-1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ff164b22d364c830b43d08e521a768b2a2957bbc/gcc%2Ftestsuite%2Fgcc.dg%2F20021014-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ff164b22d364c830b43d08e521a768b2a2957bbc/gcc%2Ftestsuite%2Fgcc.dg%2F20021014-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2F20021014-1.c?ref=ff164b22d364c830b43d08e521a768b2a2957bbc", "patch": "@@ -10,7 +10,7 @@ extern void exit (int);\n \n int foo (void)\n {\n-  static int bar (int x)\n+  int bar (int x)\n   {\n     return x + 3;\n   }"}, {"sha": "2fce78ea97c10bb94369fb3c7ae8fc7933f9643d", "filename": "gcc/testsuite/gcc.dg/20030331-2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ff164b22d364c830b43d08e521a768b2a2957bbc/gcc%2Ftestsuite%2Fgcc.dg%2F20030331-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ff164b22d364c830b43d08e521a768b2a2957bbc/gcc%2Ftestsuite%2Fgcc.dg%2F20030331-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2F20030331-2.c?ref=ff164b22d364c830b43d08e521a768b2a2957bbc", "patch": "@@ -6,7 +6,7 @@ int foo() {\n   int yd;\n   float in[1][yd];\n  \n-  static void bar() {\n+  void bar() {\n     printf(\"%p\\n\",in[0]);\n   }\n }"}, {"sha": "955dac284063b21ee52bcd9c8a438e5e95b47822", "filename": "gcc/testsuite/gcc.dg/funcdef-storage-1.c", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ff164b22d364c830b43d08e521a768b2a2957bbc/gcc%2Ftestsuite%2Fgcc.dg%2Ffuncdef-storage-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ff164b22d364c830b43d08e521a768b2a2957bbc/gcc%2Ftestsuite%2Fgcc.dg%2Ffuncdef-storage-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ffuncdef-storage-1.c?ref=ff164b22d364c830b43d08e521a768b2a2957bbc", "patch": "@@ -0,0 +1,14 @@\n+/* { dg-do compile } */\n+\n+void\n+flarm(void)\n+{\n+  static void foo();  /* { dg-error \"invalid storage class\" } */\n+\n+  foo();\n+}\n+\n+static void\n+foo(void)\n+{\n+}"}]}