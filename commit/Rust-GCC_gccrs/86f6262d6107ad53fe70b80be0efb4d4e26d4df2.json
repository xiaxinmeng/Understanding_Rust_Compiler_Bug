{"sha": "86f6262d6107ad53fe70b80be0efb4d4e26d4df2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODZmNjI2MmQ2MTA3YWQ1M2ZlNzBiODBiZTBlZmI0ZDRlMjZkNGRmMg==", "commit": {"author": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2003-05-29T12:21:26Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2003-05-29T12:21:26Z"}, "message": "[multiple changes]\n\n2003-05-29  Sylvain Pion  <Sylvain.Pion@mpi-sb.mpg.de>\n\n\tPR libstdc++/10783\n\t* include/bits/stl_iterator.h (class __normal_iterator):\n\tDon't inherit from iterator, add missing typedefs.\n\n2003-05-29  Paolo Carlini <pcarlini@unitus.it>\n\n\t* testsuite/24_iterators/reverse_iterator.cc: Split up, as follows.\n\t* testsuite/24_iterators/reverse_iterator/1.cc: New.\n\t* testsuite/24_iterators/reverse_iterator/2.cc: New.\n\t* testsuite/24_iterators/reverse_iterator/3.cc: New, from\n\tPR libstdc++/10783.\n\nFrom-SVN: r67223", "tree": {"sha": "f03e8ad2ce19643ac165724dc88b180f89e0fcfa", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f03e8ad2ce19643ac165724dc88b180f89e0fcfa"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/86f6262d6107ad53fe70b80be0efb4d4e26d4df2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/86f6262d6107ad53fe70b80be0efb4d4e26d4df2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/86f6262d6107ad53fe70b80be0efb4d4e26d4df2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/86f6262d6107ad53fe70b80be0efb4d4e26d4df2/comments", "author": null, "committer": null, "parents": [{"sha": "5f52c0e090ef701313b6f8d1d1b50cf9a815abf4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5f52c0e090ef701313b6f8d1d1b50cf9a815abf4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5f52c0e090ef701313b6f8d1d1b50cf9a815abf4"}], "stats": {"total": 145, "additions": 112, "deletions": 33}, "files": [{"sha": "e503c7ee24b7f4f534880c86f02cf0573ca7cc6c", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/86f6262d6107ad53fe70b80be0efb4d4e26d4df2/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/86f6262d6107ad53fe70b80be0efb4d4e26d4df2/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=86f6262d6107ad53fe70b80be0efb4d4e26d4df2", "patch": "@@ -1,3 +1,17 @@\n+2003-05-29  Sylvain Pion  <Sylvain.Pion@mpi-sb.mpg.de>\n+\n+\tPR libstdc++/10783\n+\t* include/bits/stl_iterator.h (class __normal_iterator):\n+\tDon't inherit from iterator, add missing typedefs.\n+\n+2003-05-29  Paolo Carlini <pcarlini@unitus.it>\n+\n+\t* testsuite/24_iterators/reverse_iterator.cc: Split up, as follows.\n+\t* testsuite/24_iterators/reverse_iterator/1.cc: New.\n+\t* testsuite/24_iterators/reverse_iterator/2.cc: New.\n+\t* testsuite/24_iterators/reverse_iterator/3.cc: New, from\n+\tPR libstdc++/10783.\n+\n 2003-05-27  Steve Ellcey  <sje@cup.hp.com>\n \n \t* config/os/hpux/os_defines.h: Define _LIBUNWIND_STD_ABI if we are"}, {"sha": "a996f4c34ed6f9eb573b6e159b860583218a2700", "filename": "libstdc++-v3/include/bits/stl_iterator.h", "status": "modified", "additions": 3, "deletions": 5, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/86f6262d6107ad53fe70b80be0efb4d4e26d4df2/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_iterator.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/86f6262d6107ad53fe70b80be0efb4d4e26d4df2/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_iterator.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_iterator.h?ref=86f6262d6107ad53fe70b80be0efb4d4e26d4df2", "patch": "@@ -569,16 +569,14 @@ namespace __gnu_cxx\n   using std::iterator;\n   template<typename _Iterator, typename _Container>\n     class __normal_iterator\n-      : public iterator<typename iterator_traits<_Iterator>::iterator_category,\n-                        typename iterator_traits<_Iterator>::value_type,\n-                        typename iterator_traits<_Iterator>::difference_type,\n-                        typename iterator_traits<_Iterator>::pointer,\n-                        typename iterator_traits<_Iterator>::reference>\n     {\n     protected:\n       _Iterator _M_current;\n       \n     public:\n+      typedef typename iterator_traits<_Iterator>::iterator_category\n+                                                               iterator_category;\n+      typedef typename iterator_traits<_Iterator>::value_type  value_type;\n       typedef typename iterator_traits<_Iterator>::difference_type \t\n       \t\t\t\t\t\t\t       difference_type;\n       typedef typename iterator_traits<_Iterator>::reference   reference;"}, {"sha": "1278a21e8bb362b87087a4a201f059a83377a875", "filename": "libstdc++-v3/testsuite/24_iterators/reverse_iterator/1.cc", "status": "renamed", "additions": 1, "deletions": 28, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/86f6262d6107ad53fe70b80be0efb4d4e26d4df2/libstdc%2B%2B-v3%2Ftestsuite%2F24_iterators%2Freverse_iterator%2F1.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/86f6262d6107ad53fe70b80be0efb4d4e26d4df2/libstdc%2B%2B-v3%2Ftestsuite%2F24_iterators%2Freverse_iterator%2F1.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F24_iterators%2Freverse_iterator%2F1.cc?ref=86f6262d6107ad53fe70b80be0efb4d4e26d4df2", "patch": "@@ -1,6 +1,6 @@\n // 2001-06-21  Benjamin Kosnik  <bkoz@redhat.com>\n \n-// Copyright (C) 2001, 2002 Free Software Foundation, Inc.\n+// Copyright (C) 2001, 2002, 2003 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -46,38 +46,11 @@ void test01()\n   typedef test_iterator::iterator_category iteratory_category;\n }\n \n-\n // Make sure iterator can be instantiated.\n template class std::reverse_iterator<int*>;\n \n-void test02()\n-{\n-  typedef std::reverse_iterator<int*> iterator_type;\n-  iterator_type it01;\n-  iterator_type it02;\n-\n-  // Sanity check non-member operators and functions can be instantiated. \n-  it01 == it02;\n-  it01 != it02;\n-  it01 < it02;\n-  it01 <= it02;\n-  it01 > it02;\n-  it01 >= it02;\n-  it01 - it02;\n-  5 + it02;\n-}\n-\n-// Check data member 'current' accessible.\n-class test_dm : public std::reverse_iterator<int*>\n-{\n-  int* p;\n-public:\n-  test_dm(): p(current) { }\n-};\n-\n int main() \n { \n   test01();\n-  test02();\n   return 0;\n }", "previous_filename": "libstdc++-v3/testsuite/24_iterators/reverse_iterator.cc"}, {"sha": "f227bcbcc98fb8e67094c76109f5411d03b56e1b", "filename": "libstdc++-v3/testsuite/24_iterators/reverse_iterator/2.cc", "status": "added", "additions": 54, "deletions": 0, "changes": 54, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/86f6262d6107ad53fe70b80be0efb4d4e26d4df2/libstdc%2B%2B-v3%2Ftestsuite%2F24_iterators%2Freverse_iterator%2F2.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/86f6262d6107ad53fe70b80be0efb4d4e26d4df2/libstdc%2B%2B-v3%2Ftestsuite%2F24_iterators%2Freverse_iterator%2F2.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F24_iterators%2Freverse_iterator%2F2.cc?ref=86f6262d6107ad53fe70b80be0efb4d4e26d4df2", "patch": "@@ -0,0 +1,54 @@\n+// 2001-06-21  Benjamin Kosnik  <bkoz@redhat.com>\n+\n+// Copyright (C) 2001, 2002, 2003 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,\n+// USA.\n+\n+// 24.4.1.2 Reverse iterators\n+\n+#include <iterator>\n+\n+void test02()\n+{\n+  typedef std::reverse_iterator<int*> iterator_type;\n+  iterator_type it01;\n+  iterator_type it02;\n+\n+  // Sanity check non-member operators and functions can be instantiated. \n+  it01 == it02;\n+  it01 != it02;\n+  it01 < it02;\n+  it01 <= it02;\n+  it01 > it02;\n+  it01 >= it02;\n+  it01 - it02;\n+  5 + it02;\n+}\n+\n+// Check data member 'current' accessible.\n+class test_dm : public std::reverse_iterator<int*>\n+{\n+  int* p;\n+public:\n+  test_dm(): p(current) { }\n+};\n+\n+int main() \n+{ \n+  test02();\n+  return 0;\n+}"}, {"sha": "ffb6e779db0741717e44c444c452717a3143140a", "filename": "libstdc++-v3/testsuite/24_iterators/reverse_iterator/3.cc", "status": "added", "additions": 40, "deletions": 0, "changes": 40, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/86f6262d6107ad53fe70b80be0efb4d4e26d4df2/libstdc%2B%2B-v3%2Ftestsuite%2F24_iterators%2Freverse_iterator%2F3.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/86f6262d6107ad53fe70b80be0efb4d4e26d4df2/libstdc%2B%2B-v3%2Ftestsuite%2F24_iterators%2Freverse_iterator%2F3.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F24_iterators%2Freverse_iterator%2F3.cc?ref=86f6262d6107ad53fe70b80be0efb4d4e26d4df2", "patch": "@@ -0,0 +1,40 @@\n+// 2003-05-29  Paolo Carlini  <pcarlini@unitus.it>\n+\n+// Copyright (C) 2003 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,\n+// USA.\n+\n+// 24.4.1.2 Reverse iterators\n+\n+#include <iterator>\n+#include <vector>\n+#include <testsuite_hooks.h>\n+\n+// libstdc++/10783\n+void test03()\n+{\n+  bool test = true;\n+\n+  typedef std::vector<int> V;\n+  VERIFY( sizeof(V::iterator) == sizeof(V::reverse_iterator) );\n+}\n+\n+int main() \n+{ \n+  test03();\n+  return 0;\n+}"}]}