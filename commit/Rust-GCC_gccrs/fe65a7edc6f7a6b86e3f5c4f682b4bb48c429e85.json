{"sha": "fe65a7edc6f7a6b86e3f5c4f682b4bb48c429e85", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZmU2NWE3ZWRjNmY3YTZiODZlM2Y1YzRmNjgyYjRiYjQ4YzQyOWU4NQ==", "commit": {"author": {"name": "Kyrylo Tkachov", "email": "kyrylo.tkachov@arm.com", "date": "2014-04-25T11:09:03Z"}, "committer": {"name": "Kyrylo Tkachov", "email": "ktkachov@gcc.gnu.org", "date": "2014-04-25T11:09:03Z"}, "message": "[ARM] Wrap long literals in HOST_WIDE_INT_C in aarch-common.c\n\n       * config/arm/aarch-common.c (aarch_rev16_shright_mask_imm_p):\n       Use HOST_WIDE_INT_C for mask literal.\n       (aarch_rev16_shleft_mask_imm_p): Likewise.\n\nFrom-SVN: r209797", "tree": {"sha": "5b2165fb3168bece07c5c7bc21b8c81023f4b8cb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5b2165fb3168bece07c5c7bc21b8c81023f4b8cb"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/fe65a7edc6f7a6b86e3f5c4f682b4bb48c429e85", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fe65a7edc6f7a6b86e3f5c4f682b4bb48c429e85", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fe65a7edc6f7a6b86e3f5c4f682b4bb48c429e85", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fe65a7edc6f7a6b86e3f5c4f682b4bb48c429e85/comments", "author": {"login": "ktkachov-arm", "id": 74917949, "node_id": "MDQ6VXNlcjc0OTE3OTQ5", "avatar_url": "https://avatars.githubusercontent.com/u/74917949?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ktkachov-arm", "html_url": "https://github.com/ktkachov-arm", "followers_url": "https://api.github.com/users/ktkachov-arm/followers", "following_url": "https://api.github.com/users/ktkachov-arm/following{/other_user}", "gists_url": "https://api.github.com/users/ktkachov-arm/gists{/gist_id}", "starred_url": "https://api.github.com/users/ktkachov-arm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ktkachov-arm/subscriptions", "organizations_url": "https://api.github.com/users/ktkachov-arm/orgs", "repos_url": "https://api.github.com/users/ktkachov-arm/repos", "events_url": "https://api.github.com/users/ktkachov-arm/events{/privacy}", "received_events_url": "https://api.github.com/users/ktkachov-arm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "45484dcfb14634ff30b409c58ecc754e9fd88b5c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/45484dcfb14634ff30b409c58ecc754e9fd88b5c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/45484dcfb14634ff30b409c58ecc754e9fd88b5c"}], "stats": {"total": 14, "additions": 12, "deletions": 2}, "files": [{"sha": "b43b317c17a90e5007903ebf96860d914c3ff9f2", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fe65a7edc6f7a6b86e3f5c4f682b4bb48c429e85/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fe65a7edc6f7a6b86e3f5c4f682b4bb48c429e85/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=fe65a7edc6f7a6b86e3f5c4f682b4bb48c429e85", "patch": "@@ -1,3 +1,9 @@\n+2014-04-25  Kyrylo Tkachov  <kyrylo.tkachov@arm.com>\n+\n+\t* config/arm/aarch-common.c (aarch_rev16_shright_mask_imm_p):\n+\tUse HOST_WIDE_INT_C for mask literal.\n+\t(aarch_rev16_shleft_mask_imm_p): Likewise.\n+\n 2014-04-25  Eric Botcazou  <ebotcazou@adacore.com>\n \n \tPR target/60941"}, {"sha": "d31191ab9e7dadd68c332c6e1aacf1e124bf7d3e", "filename": "gcc/config/arm/aarch-common.c", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fe65a7edc6f7a6b86e3f5c4f682b4bb48c429e85/gcc%2Fconfig%2Farm%2Faarch-common.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fe65a7edc6f7a6b86e3f5c4f682b4bb48c429e85/gcc%2Fconfig%2Farm%2Faarch-common.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Faarch-common.c?ref=fe65a7edc6f7a6b86e3f5c4f682b4bb48c429e85", "patch": "@@ -195,14 +195,18 @@ bool\n aarch_rev16_shright_mask_imm_p (rtx val, enum machine_mode mode)\n {\n   return CONST_INT_P (val)\n-         && INTVAL (val) == trunc_int_for_mode (0xff00ff00ff00ff, mode);\n+         && INTVAL (val)\n+            == trunc_int_for_mode (HOST_WIDE_INT_C (0xff00ff00ff00ff),\n+                                   mode);\n }\n \n bool\n aarch_rev16_shleft_mask_imm_p (rtx val, enum machine_mode mode)\n {\n   return CONST_INT_P (val)\n-         && INTVAL (val) == trunc_int_for_mode (0xff00ff00ff00ff00, mode);\n+         && INTVAL (val)\n+            == trunc_int_for_mode (HOST_WIDE_INT_C (0xff00ff00ff00ff00),\n+                                   mode);\n }\n \n "}]}