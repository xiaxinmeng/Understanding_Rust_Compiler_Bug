{"sha": "147d396eaa9379b5b9f37ebedd0243b0f79fa450", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTQ3ZDM5NmVhYTkzNzliNWI5ZjM3ZWJlZGQwMjQzYjBmNzlmYTQ1MA==", "commit": {"author": {"name": "Neil Booth", "email": "neil@gcc.gnu.org", "date": "2003-06-08T07:55:18Z"}, "committer": {"name": "Neil Booth", "email": "neil@gcc.gnu.org", "date": "2003-06-08T07:55:18Z"}, "message": "* Makfile.in, cp/Make-lang.in: Forgotten commit.\n\nFrom-SVN: r67616", "tree": {"sha": "35a3201c37f00ff1d2d4fa200926bb37f02cc727", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/35a3201c37f00ff1d2d4fa200926bb37f02cc727"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/147d396eaa9379b5b9f37ebedd0243b0f79fa450", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/147d396eaa9379b5b9f37ebedd0243b0f79fa450", "html_url": "https://github.com/Rust-GCC/gccrs/commit/147d396eaa9379b5b9f37ebedd0243b0f79fa450", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/147d396eaa9379b5b9f37ebedd0243b0f79fa450/comments", "author": null, "committer": null, "parents": [{"sha": "35399bdca9aeeaf8c7b0709c7767c79504944fa7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/35399bdca9aeeaf8c7b0709c7767c79504944fa7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/35399bdca9aeeaf8c7b0709c7767c79504944fa7"}], "stats": {"total": 20, "additions": 11, "deletions": 9}, "files": [{"sha": "11ab0c24806860cf671aa0d1a1331eb633321569", "filename": "gcc/Makefile.in", "status": "modified", "additions": 9, "deletions": 8, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/147d396eaa9379b5b9f37ebedd0243b0f79fa450/gcc%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/147d396eaa9379b5b9f37ebedd0243b0f79fa450/gcc%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FMakefile.in?ref=147d396eaa9379b5b9f37ebedd0243b0f79fa450", "patch": "@@ -793,7 +793,7 @@ CXX_TARGET_OBJS=@cxx_target_objs@\n # Language-specific object files for C and Objective C.\n C_AND_OBJC_OBJS = attribs.o c-errors.o c-lex.o c-pragma.o c-decl.o c-typeck.o \\\n   c-convert.o c-aux-info.o c-common.o c-opts.o c-format.o c-semantics.o \\\n-  c-incpath.o cppdefault.o c-ppoutput.o c-cppbuiltin.o prefix.o \\\n+  c-incpath.o cppdefault.o c-ppoutput.o c-cppbuiltin.o c-options.o prefix.o \\\n   c-objc-common.o c-dump.o c-pch.o libcpp.a $(C_TARGET_OBJS)\n \n # Language-specific object files for C.\n@@ -812,7 +812,7 @@ OBJS = alias.o bb-reorder.o bitmap.o builtins.o caller-save.o calls.o\t   \\\n  haifa-sched.o hashtable.o hooks.o ifcvt.o insn-attrtab.o insn-emit.o\t   \\\n  insn-extract.o insn-opinit.o insn-output.o insn-peep.o insn-recog.o\t   \\\n  integrate.o intl.o jump.o  langhooks.o lcm.o lists.o local-alloc.o  \t   \\\n- loop.o mbchar.o optabs.o options.o opts.o params.o predict.o\t\t   \\\n+ loop.o mbchar.o optabs.o opts.o params.o predict.o\t\t\t   \\\n  print-rtl.o print-tree.o\t\t\t\t\t\t   \\\n  profile.o ra.o ra-build.o ra-colorize.o ra-debug.o ra-rewrite.o\t   \\\n  real.o recog.o reg-stack.o regclass.o regmove.o regrename.o\t\t   \\\n@@ -1317,14 +1317,15 @@ c-pretty-print.o : c-pretty-print.c c-pretty-print.h pretty-print.h \\\n \n c-opts.o : c-opts.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(TREE_H) \\\n         c-pragma.h flags.h toplev.h langhooks.h tree-inline.h diagnostic.h \\\n-\tintl.h debug.h $(C_COMMON_H) opts.h options.h\n+\tintl.h debug.h $(C_COMMON_H) opts.h c-options.h\n \t$(CC) -c $(ALL_CFLAGS) $(ALL_CPPFLAGS) $(INCLUDES) \\\n \t\t$< $(OUTPUT_OPTION) @TARGET_SYSTEM_ROOT_DEFINE@\n \n-options.c: c.opt $(srcdir)/opts.sh options.h\n+c-options.c: c.opt $(srcdir)/opts.sh c-options.h\n \n-options.h: c.opt $(srcdir)/opts.sh\n-\tAWK=$(AWK) $(SHELL) $(srcdir)/opts.sh options.c options.h $(srcdir)/c.opt\n+c-options.h: c.opt $(srcdir)/opts.sh\n+\tAWK=$(AWK) $(SHELL) $(srcdir)/opts.sh c-options.c c-options.h \\\n+\t\t$(srcdir)/c.opt\n \n c-cppbuiltin.o : c-cppbuiltin.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n \t$(TREE_H) $(C_COMMON_H) c-pragma.h flags.h toplev.h langhooks.h \\\n@@ -1479,7 +1480,7 @@ fold-const.o : fold-const.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(TREE_H\n diagnostic.o : diagnostic.c diagnostic.h real.h diagnostic.def \\\n    $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(TREE_H) $(TM_P_H) flags.h $(GGC_H) \\\n    input.h toplev.h intl.h langhooks.h $(LANGHOOKS_DEF_H)\n-opts.o : opts.c opts.h options.h $(CONFIG_H) $(SYSTEM_H) \\\n+opts.o : opts.c opts.h $(CONFIG_H) $(SYSTEM_H) \\\n \tcoretypes.h $(TREE_H) $(TM_H) $(LANGHOOKS_H)\n toplev.o : toplev.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(TREE_H) $(RTL_H) \\\n    function.h flags.h xcoffout.h input.h $(INSN_ATTR_H) output.h diagnostic.h \\\n@@ -2787,7 +2788,7 @@ mostlyclean: $(INTL_MOSTLYCLEAN) lang.mostlyclean\n \t-rm -f xlimits.h\n # Delete other built files.\n \t-rm -f xsys-protos.hT\n-\t-rm -f specs.h options_.h gencheck.h options.c options.h\n+\t-rm -f specs.h options_.h gencheck.h c-options.c c-options.h\n # Delete the stamp and temporary files.\n \t-rm -f s-* tmp-* stamp-* stmp-*\n \t-rm -f */stamp-* */tmp-*"}, {"sha": "1b7cc0be65f4f20d05e0a4ba56fc30c3d5a42f58", "filename": "gcc/cp/Make-lang.in", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/147d396eaa9379b5b9f37ebedd0243b0f79fa450/gcc%2Fcp%2FMake-lang.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/147d396eaa9379b5b9f37ebedd0243b0f79fa450/gcc%2Fcp%2FMake-lang.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FMake-lang.in?ref=147d396eaa9379b5b9f37ebedd0243b0f79fa450", "patch": "@@ -80,7 +80,8 @@ g++-cross$(exeext): g++$(exeext)\n # Shared with C front end:\n CXX_C_OBJS = attribs.o c-common.o c-format.o c-pragma.o c-semantics.o c-lex.o \\\n \tc-dump.o $(CXX_TARGET_OBJS) c-pretty-print.o c-opts.o c-pch.o \\\n-\tc-incpath.o cppdefault.o c-ppoutput.o c-cppbuiltin.o prefix.o\n+\tc-incpath.o cppdefault.o c-ppoutput.o c-cppbuiltin.o prefix.o \\\n+\tc-options.o\n \n # Language-specific object files.\n CXX_OBJS = cp/call.o cp/decl.o cp/expr.o cp/pt.o cp/typeck2.o \\"}]}