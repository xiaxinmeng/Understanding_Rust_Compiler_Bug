{"sha": "80480ceee903c0f55d23995b7ae0a58fee2e7f43", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODA0ODBjZWVlOTAzYzBmNTVkMjM5OTViN2FlMGE1OGZlZTJlN2Y0Mw==", "commit": {"author": {"name": "Marek Polacek", "email": "polacek@redhat.com", "date": "2017-02-20T15:05:53Z"}, "committer": {"name": "Marek Polacek", "email": "mpolacek@gcc.gnu.org", "date": "2017-02-20T15:05:53Z"}, "message": "re PR middle-end/79537 (ICE in gimplify_expr, at gimplify.c:12009)\n\n\tPR middle-end/79537\n\t* gimplify.c (gimplify_expr): Handle unused *&&L;.\n\n\t* gcc.dg/comp-goto-4.c: New.\n\nFrom-SVN: r245604", "tree": {"sha": "1c2d5c31becd36af44dd4fd90a0c381b2c059b33", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1c2d5c31becd36af44dd4fd90a0c381b2c059b33"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/80480ceee903c0f55d23995b7ae0a58fee2e7f43", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/80480ceee903c0f55d23995b7ae0a58fee2e7f43", "html_url": "https://github.com/Rust-GCC/gccrs/commit/80480ceee903c0f55d23995b7ae0a58fee2e7f43", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/80480ceee903c0f55d23995b7ae0a58fee2e7f43/comments", "author": {"login": "mpolacek", "id": 10496300, "node_id": "MDQ6VXNlcjEwNDk2MzAw", "avatar_url": "https://avatars.githubusercontent.com/u/10496300?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mpolacek", "html_url": "https://github.com/mpolacek", "followers_url": "https://api.github.com/users/mpolacek/followers", "following_url": "https://api.github.com/users/mpolacek/following{/other_user}", "gists_url": "https://api.github.com/users/mpolacek/gists{/gist_id}", "starred_url": "https://api.github.com/users/mpolacek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mpolacek/subscriptions", "organizations_url": "https://api.github.com/users/mpolacek/orgs", "repos_url": "https://api.github.com/users/mpolacek/repos", "events_url": "https://api.github.com/users/mpolacek/events{/privacy}", "received_events_url": "https://api.github.com/users/mpolacek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "b93a9a15ee1975ab5aafad34748dec06a74a161d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b93a9a15ee1975ab5aafad34748dec06a74a161d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b93a9a15ee1975ab5aafad34748dec06a74a161d"}], "stats": {"total": 38, "additions": 36, "deletions": 2}, "files": [{"sha": "ab2e544d6d229bc9bbbc9c61129e7da7b62d3aec", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/80480ceee903c0f55d23995b7ae0a58fee2e7f43/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/80480ceee903c0f55d23995b7ae0a58fee2e7f43/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=80480ceee903c0f55d23995b7ae0a58fee2e7f43", "patch": "@@ -1,3 +1,8 @@\n+2017-02-20  Marek Polacek  <polacek@redhat.com>\n+\n+\tPR middle-end/79537\n+\t* gimplify.c (gimplify_expr): Handle unused *&&L;.\n+\n 2017-02-20  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR target/79568"}, {"sha": "820459c4dd76fb30c9563c780dd7d4961bad832f", "filename": "gcc/gimplify.c", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/80480ceee903c0f55d23995b7ae0a58fee2e7f43/gcc%2Fgimplify.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/80480ceee903c0f55d23995b7ae0a58fee2e7f43/gcc%2Fgimplify.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgimplify.c?ref=80480ceee903c0f55d23995b7ae0a58fee2e7f43", "patch": "@@ -11976,8 +11976,11 @@ gimplify_expr (tree *expr_p, gimple_seq *pre_p, gimple_seq *post_p,\n   if (fallback == fb_none && *expr_p && !is_gimple_stmt (*expr_p))\n     {\n       /* We aren't looking for a value, and we don't have a valid\n-\t statement.  If it doesn't have side-effects, throw it away.  */\n-      if (!TREE_SIDE_EFFECTS (*expr_p))\n+\t statement.  If it doesn't have side-effects, throw it away.\n+\t We can also get here with code such as \"*&&L;\", where L is\n+\t a LABEL_DECL that is marked as FORCED_LABEL.  */\n+      if (TREE_CODE (*expr_p) == LABEL_DECL\n+\t  || !TREE_SIDE_EFFECTS (*expr_p))\n \t*expr_p = NULL;\n       else if (!TREE_THIS_VOLATILE (*expr_p))\n \t{"}, {"sha": "bbe7ac9a4a487575f948970320667a5a55a8f78e", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/80480ceee903c0f55d23995b7ae0a58fee2e7f43/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/80480ceee903c0f55d23995b7ae0a58fee2e7f43/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=80480ceee903c0f55d23995b7ae0a58fee2e7f43", "patch": "@@ -1,3 +1,8 @@\n+2017-02-20  Marek Polacek  <polacek@redhat.com>\n+\n+\tPR middle-end/79537\n+\t* gcc.dg/comp-goto-4.c: New test.\n+\n 2017-02-20  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR target/79568"}, {"sha": "51a6a867706ffd058c5a43991e10de6315f12d1b", "filename": "gcc/testsuite/gcc.dg/comp-goto-4.c", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/80480ceee903c0f55d23995b7ae0a58fee2e7f43/gcc%2Ftestsuite%2Fgcc.dg%2Fcomp-goto-4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/80480ceee903c0f55d23995b7ae0a58fee2e7f43/gcc%2Ftestsuite%2Fgcc.dg%2Fcomp-goto-4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fcomp-goto-4.c?ref=80480ceee903c0f55d23995b7ae0a58fee2e7f43", "patch": "@@ -0,0 +1,21 @@\n+/* PR middle-end/79537 */\n+/* { dg-do compile } */\n+/* { dg-options \"\" } */\n+/* { dg-require-effective-target indirect_jumps } */\n+/* { dg-require-effective-target label_values } */\n+\n+void\n+f (void)\n+{\n+L:\n+  *&&L;\n+}\n+\n+void\n+f2 (void)\n+{\n+   void *p;\n+L:\n+   p = &&L;\n+   *p; /* { dg-warning \"dereferencing 'void \\\\*' pointer\" } */\n+}"}]}