{"sha": "62021f64e550290e77a8e56270617a0a4ba673da", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjIwMjFmNjRlNTUwMjkwZTc3YThlNTYyNzA2MTdhMGE0YmE2NzNkYQ==", "commit": {"author": {"name": "Tobias Burnus", "email": "burnus@net-b.de", "date": "2015-03-27T20:21:52Z"}, "committer": {"name": "Tobias Burnus", "email": "burnus@gcc.gnu.org", "date": "2015-03-27T20:21:52Z"}, "message": "re PR c/65586 (-fopenmp-simd rejects valid input)\n\n2015-03-27  Tobias Burnus  <burnus@net-b.de>\n\n        PR c/65586\ngcc/c/\n        * c-parser.c (c_parser_skip_to_pragma_eol): Optionally, don't\n        error out.\n        (c_parser_omp_for, c_parser_omp_parallel, c_parser_omp_distribute,\n        c_parser_omp_teams, c_parser_omp_target, c_parser_omp_declare):\n        Update calls to not error for skipped omp pragmas with -fopenmp-simd.\n\ngcc/cp/\n        * parser.c (cp_parser_omp_for, cp_parser_omp_parallel,\n        cp_parser_omp_distribute, cp_parser_omp_teams, cp_parser_omp_target,\n        cp_parser_omp_declare): Don't show error for skipped omp pragmas\n        with -fopenmp-simd.\n\ngcc/testsuite/\n        * g++.dg/gomp/openmp-simd-3.C: New.\n        * gcc.dg/gomp/openmp-simd-3.c: New.\n\nFrom-SVN: r221744", "tree": {"sha": "ad32bfb3fd8ce11eb2a69dff037732d2d6e6fb80", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ad32bfb3fd8ce11eb2a69dff037732d2d6e6fb80"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/62021f64e550290e77a8e56270617a0a4ba673da", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/62021f64e550290e77a8e56270617a0a4ba673da", "html_url": "https://github.com/Rust-GCC/gccrs/commit/62021f64e550290e77a8e56270617a0a4ba673da", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/62021f64e550290e77a8e56270617a0a4ba673da/comments", "author": {"login": "tob2", "id": 264461, "node_id": "MDQ6VXNlcjI2NDQ2MQ==", "avatar_url": "https://avatars.githubusercontent.com/u/264461?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tob2", "html_url": "https://github.com/tob2", "followers_url": "https://api.github.com/users/tob2/followers", "following_url": "https://api.github.com/users/tob2/following{/other_user}", "gists_url": "https://api.github.com/users/tob2/gists{/gist_id}", "starred_url": "https://api.github.com/users/tob2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tob2/subscriptions", "organizations_url": "https://api.github.com/users/tob2/orgs", "repos_url": "https://api.github.com/users/tob2/repos", "events_url": "https://api.github.com/users/tob2/events{/privacy}", "received_events_url": "https://api.github.com/users/tob2/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "a5eef8e9b024741b8d661c628643a9850616b813", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a5eef8e9b024741b8d661c628643a9850616b813", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a5eef8e9b024741b8d661c628643a9850616b813"}], "stats": {"total": 105, "additions": 79, "deletions": 26}, "files": [{"sha": "f3b05c13e12010fec537ee2b9d4c990955b9936f", "filename": "gcc/c/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/62021f64e550290e77a8e56270617a0a4ba673da/gcc%2Fc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/62021f64e550290e77a8e56270617a0a4ba673da/gcc%2Fc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc%2FChangeLog?ref=62021f64e550290e77a8e56270617a0a4ba673da", "patch": "@@ -1,3 +1,12 @@\n+2015-03-27  Tobias Burnus  <burnus@net-b.de>\n+\n+\tPR c/65586\n+\t* c-parser.c (c_parser_skip_to_pragma_eol): Optionally, don't\n+\terror out.\n+\t(c_parser_omp_for, c_parser_omp_parallel, c_parser_omp_distribute,\n+\tc_parser_omp_teams, c_parser_omp_target, c_parser_omp_declare):\n+\tUpdate calls to not error for skipped omp pragmas with -fopenmp-simd.\n+\n 2015-03-19  Jakub Jelinek  <jakub@redhat.com>\n \n \t* c-decl.c (c_decl_attributes): Also add \"omp declare target\""}, {"sha": "024dbd2af8a3a6c88d33c51bcffa9d599f9e92b0", "filename": "gcc/c/c-parser.c", "status": "modified", "additions": 20, "deletions": 20, "changes": 40, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/62021f64e550290e77a8e56270617a0a4ba673da/gcc%2Fc%2Fc-parser.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/62021f64e550290e77a8e56270617a0a4ba673da/gcc%2Fc%2Fc-parser.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc%2Fc-parser.c?ref=62021f64e550290e77a8e56270617a0a4ba673da", "patch": "@@ -991,24 +991,24 @@ c_parser_skip_to_end_of_parameter (c_parser *parser)\n    end of line marker.  */\n \n static void\n-c_parser_skip_to_pragma_eol (c_parser *parser)\n+c_parser_skip_to_pragma_eol (c_parser *parser, bool error_if_not_eol = true)\n {\n   gcc_assert (parser->in_pragma);\n   parser->in_pragma = false;\n \n-  if (!c_parser_require (parser, CPP_PRAGMA_EOL, \"expected end of line\"))\n-    while (true)\n-      {\n-\tc_token *token = c_parser_peek_token (parser);\n-\tif (token->type == CPP_EOF)\n-\t  break;\n-\tif (token->type == CPP_PRAGMA_EOL)\n-\t  {\n-\t    c_parser_consume_token (parser);\n-\t    break;\n-\t  }\n-\tc_parser_consume_token (parser);\n-      }\n+  if (error_if_not_eol && c_parser_peek_token (parser)->type != CPP_PRAGMA_EOL)\n+    c_parser_error (parser, \"expected end of line\");\n+\n+  cpp_ttype token_type;\n+  do\n+    {\n+      c_token *token = c_parser_peek_token (parser);\n+      token_type = token->type;\n+      if (token_type == CPP_EOF)\n+\tbreak;\n+      c_parser_consume_token (parser);\n+    }\n+  while (token_type != CPP_PRAGMA_EOL);\n \n   parser->error = false;\n }\n@@ -13223,7 +13223,7 @@ c_parser_omp_for (location_t loc, c_parser *parser,\n     }\n   if (!flag_openmp)  /* flag_openmp_simd  */\n     {\n-      c_parser_skip_to_pragma_eol (parser);\n+      c_parser_skip_to_pragma_eol (parser, false);\n       return NULL_TREE;\n     }\n \n@@ -13448,7 +13448,7 @@ c_parser_omp_parallel (location_t loc, c_parser *parser,\n     }\n   else if (!flag_openmp)  /* flag_openmp_simd  */\n     {\n-      c_parser_skip_to_pragma_eol (parser);\n+      c_parser_skip_to_pragma_eol (parser, false);\n       return NULL_TREE;\n     }\n   else if (c_parser_next_token_is (parser, CPP_NAME))\n@@ -13708,7 +13708,7 @@ c_parser_omp_distribute (location_t loc, c_parser *parser,\n     }\n   if (!flag_openmp)  /* flag_openmp_simd  */\n     {\n-      c_parser_skip_to_pragma_eol (parser);\n+      c_parser_skip_to_pragma_eol (parser, false);\n       return NULL_TREE;\n     }\n \n@@ -13776,7 +13776,7 @@ c_parser_omp_teams (location_t loc, c_parser *parser,\n     }\n   if (!flag_openmp)  /* flag_openmp_simd  */\n     {\n-      c_parser_skip_to_pragma_eol (parser);\n+      c_parser_skip_to_pragma_eol (parser, false);\n       return NULL_TREE;\n     }\n \n@@ -13921,7 +13921,7 @@ c_parser_omp_target (c_parser *parser, enum pragma_context context)\n \t}\n       else if (!flag_openmp)  /* flag_openmp_simd  */\n \t{\n-\t  c_parser_skip_to_pragma_eol (parser);\n+\t  c_parser_skip_to_pragma_eol (parser, false);\n \t  return false;\n \t}\n       else if (strcmp (p, \"data\") == 0)\n@@ -14604,7 +14604,7 @@ c_parser_omp_declare (c_parser *parser, enum pragma_context context)\n \t}\n       if (!flag_openmp)  /* flag_openmp_simd  */\n \t{\n-\t  c_parser_skip_to_pragma_eol (parser);\n+\t  c_parser_skip_to_pragma_eol (parser, false);\n \t  return;\n \t}\n       if (strcmp (p, \"target\") == 0)"}, {"sha": "a9f872dc5e1c218b523fe1fc58024dc098790119", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/62021f64e550290e77a8e56270617a0a4ba673da/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/62021f64e550290e77a8e56270617a0a4ba673da/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=62021f64e550290e77a8e56270617a0a4ba673da", "patch": "@@ -1,3 +1,11 @@\n+2015-03-27  Tobias Burnus  <burnus@net-b.de>\n+\n+\tPR c/65586\n+\t* parser.c (cp_parser_omp_for, cp_parser_omp_parallel,\n+\tcp_parser_omp_distribute, cp_parser_omp_teams, cp_parser_omp_target,\n+\tcp_parser_omp_declare): Don't show error for skipped omp pragmas with\n+\t-fopenmp-simd.\n+\n 2015-03-27  Marek Polacek  <polacek@redhat.com>\n \n \tPR c++/65556"}, {"sha": "4d6b479b4970918a96cb2a6864136984f382b146", "filename": "gcc/cp/parser.c", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/62021f64e550290e77a8e56270617a0a4ba673da/gcc%2Fcp%2Fparser.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/62021f64e550290e77a8e56270617a0a4ba673da/gcc%2Fcp%2Fparser.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fparser.c?ref=62021f64e550290e77a8e56270617a0a4ba673da", "patch": "@@ -30768,7 +30768,7 @@ cp_parser_omp_for (cp_parser *parser, cp_token *pragma_tok,\n     }\n   if (!flag_openmp)  /* flag_openmp_simd  */\n     {\n-      cp_parser_require_pragma_eol (parser, pragma_tok);\n+      cp_parser_skip_to_pragma_eol (parser, pragma_tok);\n       return NULL_TREE;\n     }\n \n@@ -30979,7 +30979,7 @@ cp_parser_omp_parallel (cp_parser *parser, cp_token *pragma_tok,\n     }\n   else if (!flag_openmp)  /* flag_openmp_simd  */\n     {\n-      cp_parser_require_pragma_eol (parser, pragma_tok);\n+      cp_parser_skip_to_pragma_eol (parser, pragma_tok);\n       return NULL_TREE;\n     }\n   else if (cp_lexer_next_token_is (parser->lexer, CPP_NAME))\n@@ -31242,7 +31242,7 @@ cp_parser_omp_distribute (cp_parser *parser, cp_token *pragma_tok,\n     }\n   if (!flag_openmp)  /* flag_openmp_simd  */\n     {\n-      cp_parser_require_pragma_eol (parser, pragma_tok);\n+      cp_parser_skip_to_pragma_eol (parser, pragma_tok);\n       return NULL_TREE;\n     }\n \n@@ -31321,7 +31321,7 @@ cp_parser_omp_teams (cp_parser *parser, cp_token *pragma_tok,\n     }\n   if (!flag_openmp)  /* flag_openmp_simd  */\n     {\n-      cp_parser_require_pragma_eol (parser, pragma_tok);\n+      cp_parser_skip_to_pragma_eol (parser, pragma_tok);\n       return NULL_TREE;\n     }\n \n@@ -31466,7 +31466,7 @@ cp_parser_omp_target (cp_parser *parser, cp_token *pragma_tok,\n \t}\n       else if (!flag_openmp)  /* flag_openmp_simd  */\n \t{\n-\t  cp_parser_require_pragma_eol (parser, pragma_tok);\n+\t  cp_parser_skip_to_pragma_eol (parser, pragma_tok);\n \t  return false;\n \t}\n       else if (strcmp (p, \"data\") == 0)\n@@ -32442,7 +32442,7 @@ cp_parser_omp_declare (cp_parser *parser, cp_token *pragma_tok,\n \t}\n       if (!flag_openmp)  /* flag_openmp_simd  */\n \t{\n-\t  cp_parser_require_pragma_eol (parser, pragma_tok);\n+\t  cp_parser_skip_to_pragma_eol (parser, pragma_tok);\n \t  return;\n \t}\n       if (strcmp (p, \"target\") == 0)"}, {"sha": "d94f5a12b53ab10e2ef3f5479cac329408a6045e", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/62021f64e550290e77a8e56270617a0a4ba673da/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/62021f64e550290e77a8e56270617a0a4ba673da/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=62021f64e550290e77a8e56270617a0a4ba673da", "patch": "@@ -1,3 +1,9 @@\n+2015-03-27  Tobias Burnus  <burnus@net-b.de>\n+\n+\tPR c/65586\n+\t* g++.dg/gomp/openmp-simd-3.C: New.\n+\t* gcc.dg/gomp/openmp-simd-3.c: New.\n+\n 2015-03-27  H.J. Lu  <hongjiu.lu@intel.com>\n \n \tPR target/65248"}, {"sha": "eba9de27d985a7d32865e044d363ff3031f26258", "filename": "gcc/testsuite/g++.dg/gomp/openmp-simd-3.C", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/62021f64e550290e77a8e56270617a0a4ba673da/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fgomp%2Fopenmp-simd-3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/62021f64e550290e77a8e56270617a0a4ba673da/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fgomp%2Fopenmp-simd-3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fgomp%2Fopenmp-simd-3.C?ref=62021f64e550290e77a8e56270617a0a4ba673da", "patch": "@@ -0,0 +1,15 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-fopenmp-simd -fdump-tree-original\" } */\n+\n+/* PR c/65586 */\n+\n+void foo() { }\n+\n+int main() {\n+#pragma omp for collapse(1)\n+  for (int i = 1; i <= 151; i+=31)\n+     foo();\n+}\n+\n+/* { dg-final { scan-tree-dump-not \"omp\" \"original\" } } */\n+/* { dg-final { cleanup-tree-dump \"original\" } } */"}, {"sha": "eba9de27d985a7d32865e044d363ff3031f26258", "filename": "gcc/testsuite/gcc.dg/gomp/openmp-simd-3.c", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/62021f64e550290e77a8e56270617a0a4ba673da/gcc%2Ftestsuite%2Fgcc.dg%2Fgomp%2Fopenmp-simd-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/62021f64e550290e77a8e56270617a0a4ba673da/gcc%2Ftestsuite%2Fgcc.dg%2Fgomp%2Fopenmp-simd-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fgomp%2Fopenmp-simd-3.c?ref=62021f64e550290e77a8e56270617a0a4ba673da", "patch": "@@ -0,0 +1,15 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-fopenmp-simd -fdump-tree-original\" } */\n+\n+/* PR c/65586 */\n+\n+void foo() { }\n+\n+int main() {\n+#pragma omp for collapse(1)\n+  for (int i = 1; i <= 151; i+=31)\n+     foo();\n+}\n+\n+/* { dg-final { scan-tree-dump-not \"omp\" \"original\" } } */\n+/* { dg-final { cleanup-tree-dump \"original\" } } */"}]}