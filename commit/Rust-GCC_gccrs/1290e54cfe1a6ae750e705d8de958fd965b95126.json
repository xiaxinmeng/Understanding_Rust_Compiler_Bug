{"sha": "1290e54cfe1a6ae750e705d8de958fd965b95126", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTI5MGU1NGNmZTFhNmFlNzUwZTcwNWQ4ZGU5NThmZDk2NWI5NTEyNg==", "commit": {"author": {"name": "Nathan Froyd", "email": "froydnj@codesourcery.com", "date": "2011-03-31T02:26:18Z"}, "committer": {"name": "Nathan Froyd", "email": "froydnj@gcc.gnu.org", "date": "2011-03-31T02:26:18Z"}, "message": "tree.h (CASE_CHAIN): Define.\n\n\t* tree.h (CASE_CHAIN): Define.\n\t* tree-cfg.c (edge_to_cases_cleanup, get_cases_for_edge): Use it.\n\t(gimple_redirect_edge_and_branch): Likewise.\n\nFrom-SVN: r171769", "tree": {"sha": "39219ef9b21f2c2238449acdc97bb0cc8802e862", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/39219ef9b21f2c2238449acdc97bb0cc8802e862"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1290e54cfe1a6ae750e705d8de958fd965b95126", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1290e54cfe1a6ae750e705d8de958fd965b95126", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1290e54cfe1a6ae750e705d8de958fd965b95126", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1290e54cfe1a6ae750e705d8de958fd965b95126/comments", "author": null, "committer": null, "parents": [{"sha": "bddc98e135ce6dfa9f123c7801afc951fe9d6347", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bddc98e135ce6dfa9f123c7801afc951fe9d6347", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bddc98e135ce6dfa9f123c7801afc951fe9d6347"}], "stats": {"total": 19, "additions": 13, "deletions": 6}, "files": [{"sha": "f71f1af465ea235e536a673e1d0d69d099fd6086", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1290e54cfe1a6ae750e705d8de958fd965b95126/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1290e54cfe1a6ae750e705d8de958fd965b95126/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=1290e54cfe1a6ae750e705d8de958fd965b95126", "patch": "@@ -1,3 +1,9 @@\n+2011-03-30  Nathan Froyd  <froydnj@codesourcery.com>\n+\n+\t* tree.h (CASE_CHAIN): Define.\n+\t* tree-cfg.c (edge_to_cases_cleanup, get_cases_for_edge): Use it.\n+\t(gimple_redirect_edge_and_branch): Likewise.\n+\n 2011-03-30  Vladimir Makarov  <vmakarov@redhat.com>\n \n \tPR middle-end/48367"}, {"sha": "8a47e2ff728d7f56a89b2f66817ea965af3ad600", "filename": "gcc/tree-cfg.c", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1290e54cfe1a6ae750e705d8de958fd965b95126/gcc%2Ftree-cfg.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1290e54cfe1a6ae750e705d8de958fd965b95126/gcc%2Ftree-cfg.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-cfg.c?ref=1290e54cfe1a6ae750e705d8de958fd965b95126", "patch": "@@ -838,8 +838,8 @@ edge_to_cases_cleanup (const void *key ATTRIBUTE_UNUSED, void **value,\n \n   for (t = (tree) *value; t; t = next)\n     {\n-      next = TREE_CHAIN (t);\n-      TREE_CHAIN (t) = NULL;\n+      next = CASE_CHAIN (t);\n+      CASE_CHAIN (t) = NULL;\n     }\n \n   *value = NULL;\n@@ -922,7 +922,7 @@ get_cases_for_edge (edge e, gimple t)\n       /* Add it to the chain of CASE_LABEL_EXPRs referencing E, or create\n \t a new chain.  */\n       slot = pointer_map_insert (edge_to_cases, this_edge);\n-      TREE_CHAIN (elt) = (tree) *slot;\n+      CASE_CHAIN (elt) = (tree) *slot;\n       *slot = elt;\n     }\n \n@@ -4851,7 +4851,7 @@ gimple_redirect_edge_and_branch (edge e, basic_block dest)\n \t      {\n \t\tlast = cases;\n \t\tCASE_LABEL (cases) = label;\n-\t\tcases = TREE_CHAIN (cases);\n+\t\tcases = CASE_CHAIN (cases);\n \t      }\n \n \t    /* If there was already an edge in the CFG, then we need\n@@ -4860,8 +4860,8 @@ gimple_redirect_edge_and_branch (edge e, basic_block dest)\n \t      {\n \t\ttree cases2 = get_cases_for_edge (e2, stmt);\n \n-\t\tTREE_CHAIN (last) = TREE_CHAIN (cases2);\n-\t\tTREE_CHAIN (cases2) = first;\n+\t\tCASE_CHAIN (last) = CASE_CHAIN (cases2);\n+\t\tCASE_CHAIN (cases2) = first;\n \t      }\n \t    bitmap_set_bit (touched_switch_bbs, gimple_bb (stmt)->index);\n \t  }"}, {"sha": "ac5e544abe37ffd23888c976433be16d8ba24ecb", "filename": "gcc/tree.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1290e54cfe1a6ae750e705d8de958fd965b95126/gcc%2Ftree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1290e54cfe1a6ae750e705d8de958fd965b95126/gcc%2Ftree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree.h?ref=1290e54cfe1a6ae750e705d8de958fd965b95126", "patch": "@@ -1636,6 +1636,7 @@ extern void protected_set_expr_location (tree, location_t);\n #define CASE_LOW(NODE)          \tTREE_OPERAND (CASE_LABEL_EXPR_CHECK (NODE), 0)\n #define CASE_HIGH(NODE)         \tTREE_OPERAND (CASE_LABEL_EXPR_CHECK (NODE), 1)\n #define CASE_LABEL(NODE)\t\tTREE_OPERAND (CASE_LABEL_EXPR_CHECK (NODE), 2)\n+#define CASE_CHAIN(NODE)\t\tTREE_CHAIN (CASE_LABEL_EXPR_CHECK (NODE))\n \n /* The operands of a TARGET_MEM_REF.  Operands 0 and 1 have to match\n    corresponding MEM_REF operands.  */"}]}