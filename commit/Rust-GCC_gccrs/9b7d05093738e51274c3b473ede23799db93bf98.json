{"sha": "9b7d05093738e51274c3b473ede23799db93bf98", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OWI3ZDA1MDkzNzM4ZTUxMjc0YzNiNDczZWRlMjM3OTlkYjkzYmY5OA==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2010-11-09T03:54:24Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2010-11-09T03:54:24Z"}, "message": "re PR c++/46382 (constexpr vs. static_assert in constexpr ctors)\n\n\tPR c++/46382\n\t* semantics.c (check_constexpr_ctor_body): New fn.\n\t* parser.c (cp_parser_ctor_initializer_opt_and_function_body): Call it.\n\t* cp-tree.h: Declare it.\n\nFrom-SVN: r166471", "tree": {"sha": "98fb4d94e9d9d03d85c305dab606ebd564af92c9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/98fb4d94e9d9d03d85c305dab606ebd564af92c9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9b7d05093738e51274c3b473ede23799db93bf98", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9b7d05093738e51274c3b473ede23799db93bf98", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9b7d05093738e51274c3b473ede23799db93bf98", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9b7d05093738e51274c3b473ede23799db93bf98/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "edb7c512888ad65f3804585a43448ada0d10f690", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/edb7c512888ad65f3804585a43448ada0d10f690", "html_url": "https://github.com/Rust-GCC/gccrs/commit/edb7c512888ad65f3804585a43448ada0d10f690"}], "stats": {"total": 75, "additions": 67, "deletions": 8}, "files": [{"sha": "7223529dd36ddd3230341d288cd3403e5b1d2fda", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9b7d05093738e51274c3b473ede23799db93bf98/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9b7d05093738e51274c3b473ede23799db93bf98/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=9b7d05093738e51274c3b473ede23799db93bf98", "patch": "@@ -1,5 +1,10 @@\n 2010-11-08  Jason Merrill  <jason@redhat.com>\n \n+\tPR c++/46382\n+\t* semantics.c (check_constexpr_ctor_body): New fn.\n+\t* parser.c (cp_parser_ctor_initializer_opt_and_function_body): Call it.\n+\t* cp-tree.h: Declare it.\n+\n \tPR c++/46335\n \t* tree.c (bot_manip): Check TREE_SIDE_EFFECTS as well.\n "}, {"sha": "67f4f93d2b2f6b90c6a1d5eb622bcffe946049d4", "filename": "gcc/cp/cp-tree.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9b7d05093738e51274c3b473ede23799db93bf98/gcc%2Fcp%2Fcp-tree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9b7d05093738e51274c3b473ede23799db93bf98/gcc%2Fcp%2Fcp-tree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcp-tree.h?ref=9b7d05093738e51274c3b473ede23799db93bf98", "patch": "@@ -5249,6 +5249,7 @@ extern void finish_cleanup\t\t\t(tree, tree);\n extern bool literal_type_p (tree);\n extern tree validate_constexpr_fundecl (tree);\n extern tree register_constexpr_fundef (tree, tree);\n+extern bool check_constexpr_ctor_body (tree, tree);\n extern tree ensure_literal_type_for_constexpr_object (tree);\n extern bool potential_constant_expression (tree, tsubst_flags_t);\n extern tree cxx_constant_value (tree);"}, {"sha": "489794161f5cdbcc3b16eb009bbb3d400b0bbbd2", "filename": "gcc/cp/parser.c", "status": "modified", "additions": 2, "deletions": 8, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9b7d05093738e51274c3b473ede23799db93bf98/gcc%2Fcp%2Fparser.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9b7d05093738e51274c3b473ede23799db93bf98/gcc%2Fcp%2Fparser.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fparser.c?ref=9b7d05093738e51274c3b473ede23799db93bf98", "patch": "@@ -16347,14 +16347,8 @@ cp_parser_ctor_initializer_opt_and_function_body (cp_parser *parser)\n     }\n   /* Parse the function-body.  */\n   cp_parser_function_body (parser);\n-  if (check_body_p\n-      && (TREE_CODE (list) != STATEMENT_LIST\n-\t  || (last == NULL && STATEMENT_LIST_TAIL (list) != NULL)\n-\t  || (last != NULL && last != STATEMENT_LIST_TAIL (list)->stmt)))\n-    {\n-      error (\"constexpr constructor does not have empty body\");\n-      DECL_DECLARED_CONSTEXPR_P (current_function_decl) = false;\n-    }\n+  if (check_body_p)\n+    check_constexpr_ctor_body (last, list);\n   /* Finish the function body.  */\n   finish_function_body (body);\n "}, {"sha": "b48559e81aa0454f636b3c7306eb295920128d17", "filename": "gcc/cp/semantics.c", "status": "modified", "additions": 42, "deletions": 0, "changes": 42, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9b7d05093738e51274c3b473ede23799db93bf98/gcc%2Fcp%2Fsemantics.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9b7d05093738e51274c3b473ede23799db93bf98/gcc%2Fcp%2Fsemantics.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fsemantics.c?ref=9b7d05093738e51274c3b473ede23799db93bf98", "patch": "@@ -5522,6 +5522,48 @@ build_data_member_initialization (tree t, VEC(constructor_elt,gc) **vec)\n   return true;\n }\n \n+/* Make sure that there are no statements after LAST in the constructor\n+   body represented by LIST.  */\n+\n+bool\n+check_constexpr_ctor_body (tree last, tree list)\n+{\n+  bool ok = true;\n+  if (TREE_CODE (list) == STATEMENT_LIST)\n+    {\n+      tree_stmt_iterator i = tsi_last (list);\n+      for (; !tsi_end_p (i); tsi_prev (&i))\n+\t{\n+\t  tree t = tsi_stmt (i);\n+\t  if (t == last)\n+\t    break;\n+\t  if (TREE_CODE (t) == BIND_EXPR)\n+\t    {\n+\t      if (!check_constexpr_ctor_body (last, BIND_EXPR_BODY (t)))\n+\t\treturn false;\n+\t      else\n+\t\tcontinue;\n+\t    }\n+\t  /* We currently allow typedefs and static_assert.\n+\t     FIXME allow them in the standard, too.  */\n+\t  if (TREE_CODE (t) != STATIC_ASSERT)\n+\t    {\n+\t      ok = false;\n+\t      break;\n+\t    }\n+\t}\n+    }\n+  else if (list != last\n+\t   && TREE_CODE (list) != STATIC_ASSERT)\n+    ok = false;\n+  if (!ok)\n+    {\n+      error (\"constexpr constructor does not have empty body\");\n+      DECL_DECLARED_CONSTEXPR_P (current_function_decl) = false;\n+    }\n+  return ok;\n+}\n+\n /* Build compile-time evalable representations of member-initializer list\n    for a constexpr constructor.  */\n "}, {"sha": "3f992d9819ee084636051cef232dcff49cbe2387", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9b7d05093738e51274c3b473ede23799db93bf98/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9b7d05093738e51274c3b473ede23799db93bf98/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=9b7d05093738e51274c3b473ede23799db93bf98", "patch": "@@ -1,3 +1,7 @@\n+2010-11-08  Jason Merrill  <jason@redhat.com>\n+\n+\t* g++.dg/cpp0x/constexpr-sassert.C: New.\n+\n 2010-11-08  Jason Merrill  <jason@redhat.com>\n \n \t* g++.dg/cpp0x/constexpr-defarg.C: New."}, {"sha": "3e08fb0efa3689c28d51c9babc248e6b20e9cf42", "filename": "gcc/testsuite/g++.dg/cpp0x/constexpr-sassert.C", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9b7d05093738e51274c3b473ede23799db93bf98/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-sassert.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9b7d05093738e51274c3b473ede23799db93bf98/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-sassert.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-sassert.C?ref=9b7d05093738e51274c3b473ede23799db93bf98", "patch": "@@ -0,0 +1,13 @@\n+// Allow static_assert in constexpr constructors, too.\n+// { dg-options -std=c++0x }\n+\n+template<typename T>\n+struct A\n+{\n+  int i;\n+\n+  constexpr A(int i) : i(i)\n+  {\n+    static_assert(sizeof(T) == 1, \"\");\n+  }\n+};"}]}