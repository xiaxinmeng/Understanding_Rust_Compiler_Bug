{"sha": "8a2f6bbe45fe2dff64d613365fe2ddb2b1922e2f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGEyZjZiYmU0NWZlMmRmZjY0ZDYxMzM2NWZlMmRkYjJiMTkyMmUyZg==", "commit": {"author": {"name": "Ed Schonberg", "email": "schonberg@adacore.com", "date": "2018-08-21T14:44:46Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "pmderodat@gcc.gnu.org", "date": "2018-08-21T14:44:46Z"}, "message": "[Ada] Compiler abort on call to expr. function for default discriminant\n\nIf a discriminant specification has a default that is a call to an\nexpression function, that function has to be frozen at the point of a\ncall to the initialization procedure for an object of the record type,\neven though the call does not appear to come from source.\n\n2018-08-21  Ed Schonberg  <schonberg@adacore.com>\n\ngcc/ada/\n\n\t* sem_res.adb (Resolve_Call): Force the freezing of an\n\texpression function that is called to provide a default value\n\tfor a defaulted discriminant in an object initialization.\n\ngcc/testsuite/\n\n\t* gnat.dg/expr_func5.adb: New testcase.\n\nFrom-SVN: r263710", "tree": {"sha": "07042f92f76214893d3caaeb6592aaaf64c481d9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/07042f92f76214893d3caaeb6592aaaf64c481d9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8a2f6bbe45fe2dff64d613365fe2ddb2b1922e2f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8a2f6bbe45fe2dff64d613365fe2ddb2b1922e2f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8a2f6bbe45fe2dff64d613365fe2ddb2b1922e2f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8a2f6bbe45fe2dff64d613365fe2ddb2b1922e2f/comments", "author": {"login": "Edschonberg", "id": 6352375, "node_id": "MDQ6VXNlcjYzNTIzNzU=", "avatar_url": "https://avatars.githubusercontent.com/u/6352375?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Edschonberg", "html_url": "https://github.com/Edschonberg", "followers_url": "https://api.github.com/users/Edschonberg/followers", "following_url": "https://api.github.com/users/Edschonberg/following{/other_user}", "gists_url": "https://api.github.com/users/Edschonberg/gists{/gist_id}", "starred_url": "https://api.github.com/users/Edschonberg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Edschonberg/subscriptions", "organizations_url": "https://api.github.com/users/Edschonberg/orgs", "repos_url": "https://api.github.com/users/Edschonberg/repos", "events_url": "https://api.github.com/users/Edschonberg/events{/privacy}", "received_events_url": "https://api.github.com/users/Edschonberg/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "d8251d001b3507ffb80b26f4d17f1daa99a5dc4a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d8251d001b3507ffb80b26f4d17f1daa99a5dc4a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d8251d001b3507ffb80b26f4d17f1daa99a5dc4a"}], "stats": {"total": 33, "additions": 32, "deletions": 1}, "files": [{"sha": "7bae0cfc813b021d2ffc05cc0693cc93c397e611", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8a2f6bbe45fe2dff64d613365fe2ddb2b1922e2f/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8a2f6bbe45fe2dff64d613365fe2ddb2b1922e2f/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=8a2f6bbe45fe2dff64d613365fe2ddb2b1922e2f", "patch": "@@ -1,3 +1,9 @@\n+2018-08-21  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* sem_res.adb (Resolve_Call): Force the freezing of an\n+\texpression function that is called to provide a default value\n+\tfor a defaulted discriminant in an object initialization.\n+\n 2018-08-21  Hristian Kirtchev  <kirtchev@adacore.com>\n \n \t* libgnat/g-dynhta.adb, libgnat/g-dynhta.ads: New package"}, {"sha": "13612aa3bf53cf553e9eca512f0ad6afc73ac5ad", "filename": "gcc/ada/sem_res.adb", "status": "modified", "additions": 12, "deletions": 1, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8a2f6bbe45fe2dff64d613365fe2ddb2b1922e2f/gcc%2Fada%2Fsem_res.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8a2f6bbe45fe2dff64d613365fe2ddb2b1922e2f/gcc%2Fada%2Fsem_res.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_res.adb?ref=8a2f6bbe45fe2dff64d613365fe2ddb2b1922e2f", "patch": "@@ -6067,7 +6067,10 @@ package body Sem_Res is\n       --  (including the body of another expression function) which would\n       --  place the freeze node in the wrong scope. An expression function\n       --  is frozen in the usual fashion, by the appearance of a real body,\n-      --  or at the end of a declarative part.\n+      --  or at the end of a declarative part. However an implcit call to\n+      --  an expression function may appear when it is part of a default\n+      --  expression in a call to an initialiation procedure, and must be\n+      --  frozen now, even if the body is inserted at a later point.\n \n       if Is_Entity_Name (Subp)\n         and then not In_Spec_Expression\n@@ -6076,6 +6079,14 @@ package body Sem_Res is\n           (not Is_Expression_Function_Or_Completion (Entity (Subp))\n             or else Scope (Entity (Subp)) = Current_Scope)\n       then\n+         if Is_Expression_Function (Entity (Subp)) then\n+\n+            --  Force freeze of expression function in call.\n+\n+            Set_Comes_From_Source (Subp, True);\n+            Set_Must_Not_Freeze (Subp, False);\n+         end if;\n+\n          Freeze_Expression (Subp);\n       end if;\n "}, {"sha": "a3d8dda36c298199253c001035422dcb5c2b6481", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8a2f6bbe45fe2dff64d613365fe2ddb2b1922e2f/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8a2f6bbe45fe2dff64d613365fe2ddb2b1922e2f/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=8a2f6bbe45fe2dff64d613365fe2ddb2b1922e2f", "patch": "@@ -1,3 +1,7 @@\n+2018-08-21  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* gnat.dg/expr_func5.adb: New testcase.\n+\n 2018-08-21  Hristian Kirtchev  <kirtchev@adacore.com>\n \n \t* gnat.dg/dynhash.adb: New testcase."}, {"sha": "34c4eb3b78d6fefffb544ec50d91c0f5c3eaaf40", "filename": "gcc/testsuite/gnat.dg/expr_func5.adb", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8a2f6bbe45fe2dff64d613365fe2ddb2b1922e2f/gcc%2Ftestsuite%2Fgnat.dg%2Fexpr_func5.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8a2f6bbe45fe2dff64d613365fe2ddb2b1922e2f/gcc%2Ftestsuite%2Fgnat.dg%2Fexpr_func5.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Fexpr_func5.adb?ref=8a2f6bbe45fe2dff64d613365fe2ddb2b1922e2f", "patch": "@@ -0,0 +1,10 @@\n+--  { dg-do compile }\n+\n+procedure Expr_Func5 is\n+   type T is (B);\n+   function F return T is (B);\n+   type R (W : T := F) is null record;\n+   V : R;\n+begin\n+   null;\n+end Expr_Func5;"}]}