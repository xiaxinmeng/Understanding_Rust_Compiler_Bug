{"sha": "00e7f01dc47892361aa865714e84872745c691ec", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDBlN2YwMWRjNDc4OTIzNjFhYTg2NTcxNGU4NDg3Mjc0NWM2OTFlYw==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2019-05-27T10:52:14Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2019-05-27T10:52:14Z"}, "message": "re PR tree-optimization/90610 (526.blender_r miscompared on znver1 with -Ofast -march=native since r271463)\n\n2019-05-27  Richard Biener  <rguenther@suse.de>\n\n\tPR middle-end/90610\n\t* match.pd (vec_perm): Avoid clobbering op0 when not generating\n\ta bit-insert.\n\nFrom-SVN: r271652", "tree": {"sha": "99ae9177e548d58d2ab386a427c25e33a1ef31fb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/99ae9177e548d58d2ab386a427c25e33a1ef31fb"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/00e7f01dc47892361aa865714e84872745c691ec", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/00e7f01dc47892361aa865714e84872745c691ec", "html_url": "https://github.com/Rust-GCC/gccrs/commit/00e7f01dc47892361aa865714e84872745c691ec", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/00e7f01dc47892361aa865714e84872745c691ec/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "3016ec8a616241f5672e9f0e826688295f60a99f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3016ec8a616241f5672e9f0e826688295f60a99f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3016ec8a616241f5672e9f0e826688295f60a99f"}], "stats": {"total": 10, "additions": 8, "deletions": 2}, "files": [{"sha": "ec30909166ba58b471e9d2f60759eb23a1fc5b0c", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/00e7f01dc47892361aa865714e84872745c691ec/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/00e7f01dc47892361aa865714e84872745c691ec/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=00e7f01dc47892361aa865714e84872745c691ec", "patch": "@@ -1,3 +1,9 @@\n+2019-05-27  Richard Biener  <rguenther@suse.de>\n+\n+\tPR middle-end/90610\n+\t* match.pd (vec_perm): Avoid clobbering op0 when not generating\n+\ta bit-insert.\n+\n 2019-05-26  Uro\u0161 Bizjak  <ubizjak@gmail.com>\n \n \t* config/i386/i386.md (@leave_<mode>): New expander."}, {"sha": "e1fa75cf5a08418079165b5bda50419dd5374278", "filename": "gcc/match.pd", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/00e7f01dc47892361aa865714e84872745c691ec/gcc%2Fmatch.pd", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/00e7f01dc47892361aa865714e84872745c691ec/gcc%2Fmatch.pd", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fmatch.pd?ref=00e7f01dc47892361aa865714e84872745c691ec", "patch": "@@ -5453,8 +5453,8 @@ DEFINE_INT_AND_FLOAT_ROUND_FN (RINT)\n \t\t   first vector we only can insert the first elt from\n \t\t   the first vector.  */\n \t        at = 0;\n-\t\tins = fold_read_from_vector (cop0, 0);\n-\t        op0 = op1;\n+\t\tif ((ins = fold_read_from_vector (cop0, 0)))\n+\t\t  op0 = op1;\n \t      }\n \t    else\n \t      {"}]}