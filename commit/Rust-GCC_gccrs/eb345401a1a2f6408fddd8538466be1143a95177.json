{"sha": "eb345401a1a2f6408fddd8538466be1143a95177", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWIzNDU0MDFhMWEyZjY0MDhmZGRkODUzODQ2NmJlMTE0M2E5NTE3Nw==", "commit": {"author": {"name": "Nicola Pero", "email": "nicola.pero@meta-innovation.com", "date": "2011-04-12T19:02:14Z"}, "committer": {"name": "Nicola Pero", "email": "nicola@gcc.gnu.org", "date": "2011-04-12T19:02:14Z"}, "message": "In gcc/: 2011-04-12 Nicola Pero <nicola.pero@meta-innovation.com>\n\nIn gcc/:\n2011-04-12  Nicola Pero  <nicola.pero@meta-innovation.com>\n\n\t* c-parser.c (c_parser_initelt): Updated call to\n\tobjc_build_message_expr.\n\t(c_parser_postfix_expression): Likewise.\n\nIn gcc/c-family/:\n2011-04-12  Nicola Pero  <nicola.pero@meta-innovation.com>\n\n\t* c-objc.h (objc_build_message_expr): Updated prototype.\n\t* stub-objc.c (objc_build_message_expr): Likewise.\n\t\nIn gcc/objc/:\n2011-04-12  Nicola Pero  <nicola.pero@meta-innovation.com>\n\n\t* objc-act.c (objc_build_message_expr): Accept two arguments\n\tinstead of one so that callers can simply pass the arguments\n\twithout having to create a temporary chain to hold them.\n\nIn gcc/cp/:\n2011-04-12  Nicola Pero  <nicola.pero@meta-innovation.com>\n\n\t* parser.c (cp_parser_objc_message_expression): Updated call\n\tto objc_build_message_expr.\n\nFrom-SVN: r172338", "tree": {"sha": "dd0661e72bba2ceb2c1565779cd6d02900e5e871", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/dd0661e72bba2ceb2c1565779cd6d02900e5e871"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/eb345401a1a2f6408fddd8538466be1143a95177", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/eb345401a1a2f6408fddd8538466be1143a95177", "html_url": "https://github.com/Rust-GCC/gccrs/commit/eb345401a1a2f6408fddd8538466be1143a95177", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/eb345401a1a2f6408fddd8538466be1143a95177/comments", "author": {"login": "Nico-31415", "id": 94470564, "node_id": "U_kgDOBaGBpA", "avatar_url": "https://avatars.githubusercontent.com/u/94470564?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Nico-31415", "html_url": "https://github.com/Nico-31415", "followers_url": "https://api.github.com/users/Nico-31415/followers", "following_url": "https://api.github.com/users/Nico-31415/following{/other_user}", "gists_url": "https://api.github.com/users/Nico-31415/gists{/gist_id}", "starred_url": "https://api.github.com/users/Nico-31415/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Nico-31415/subscriptions", "organizations_url": "https://api.github.com/users/Nico-31415/orgs", "repos_url": "https://api.github.com/users/Nico-31415/repos", "events_url": "https://api.github.com/users/Nico-31415/events{/privacy}", "received_events_url": "https://api.github.com/users/Nico-31415/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "dc2dc51254b9c3802424e2d3fc9cbb3d73fff909", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dc2dc51254b9c3802424e2d3fc9cbb3d73fff909", "html_url": "https://github.com/Rust-GCC/gccrs/commit/dc2dc51254b9c3802424e2d3fc9cbb3d73fff909"}], "stats": {"total": 42, "additions": 31, "deletions": 11}, "files": [{"sha": "6d07d40ed63f7d2b3aace541c61ffb10af74db73", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eb345401a1a2f6408fddd8538466be1143a95177/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eb345401a1a2f6408fddd8538466be1143a95177/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=eb345401a1a2f6408fddd8538466be1143a95177", "patch": "@@ -1,3 +1,9 @@\n+2011-04-12  Nicola Pero  <nicola.pero@meta-innovation.com>\n+\n+\t* c-parser.c (c_parser_initelt): Updated call to\n+\tobjc_build_message_expr.\n+\t(c_parser_postfix_expression): Likewise.\n+\n 2011-04-12  Kai Tietz  <ktietz@redhat.com>\n \n \t* config/i386/mingw32.h (TARGET_SUBTARGET_DEFAULT): Add"}, {"sha": "9fc2e228aa633e9462ace9b765f0956de79558c2", "filename": "gcc/c-family/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eb345401a1a2f6408fddd8538466be1143a95177/gcc%2Fc-family%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eb345401a1a2f6408fddd8538466be1143a95177/gcc%2Fc-family%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2FChangeLog?ref=eb345401a1a2f6408fddd8538466be1143a95177", "patch": "@@ -1,3 +1,8 @@\n+2011-04-12  Nicola Pero  <nicola.pero@meta-innovation.com>\n+\n+\t* c-objc.h (objc_build_message_expr): Updated prototype.\n+\t* stub-objc.c (objc_build_message_expr): Likewise.\n+\t\n 2011-04-12  Martin Jambor  <mjambor@suse.cz>\n \n \t* c-gimplify.c (c_genericize): Call cgraph_get_create_node instead"}, {"sha": "8f7bd622da094f1117c45ee1f4f16f28be65f6f4", "filename": "gcc/c-family/c-objc.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eb345401a1a2f6408fddd8538466be1143a95177/gcc%2Fc-family%2Fc-objc.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eb345401a1a2f6408fddd8538466be1143a95177/gcc%2Fc-family%2Fc-objc.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2Fc-objc.h?ref=eb345401a1a2f6408fddd8538466be1143a95177", "patch": "@@ -53,7 +53,7 @@ extern tree objc_is_id (tree);\n extern void objc_declare_alias (tree, tree);\n extern void objc_declare_class (tree);\n extern void objc_declare_protocols (tree, tree);\n-extern tree objc_build_message_expr (tree);\n+extern tree objc_build_message_expr (tree, tree);\n extern tree objc_finish_message_expr (tree, tree, tree, tree*);\n extern tree objc_build_selector_expr (location_t, tree);\n extern tree objc_build_protocol_expr (tree);"}, {"sha": "16f293170a4a85c42f0b0e00f7c1121211eb5984", "filename": "gcc/c-family/stub-objc.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eb345401a1a2f6408fddd8538466be1143a95177/gcc%2Fc-family%2Fstub-objc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eb345401a1a2f6408fddd8538466be1143a95177/gcc%2Fc-family%2Fstub-objc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2Fstub-objc.c?ref=eb345401a1a2f6408fddd8538466be1143a95177", "patch": "@@ -258,7 +258,7 @@ objc_build_selector_expr (location_t ARG_UNUSED (loc), tree ARG_UNUSED (expr))\n }\n \n tree\n-objc_build_message_expr (tree ARG_UNUSED (expr))\n+objc_build_message_expr (tree ARG_UNUSED (receiver), tree ARG_UNUSED (args))\n {\n   return 0;\n }"}, {"sha": "0aefa421a1cbf204de1775247096fe4c371e1af2", "filename": "gcc/c-parser.c", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eb345401a1a2f6408fddd8538466be1143a95177/gcc%2Fc-parser.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eb345401a1a2f6408fddd8538466be1143a95177/gcc%2Fc-parser.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-parser.c?ref=eb345401a1a2f6408fddd8538466be1143a95177", "patch": "@@ -3788,7 +3788,7 @@ c_parser_initelt (c_parser *parser, struct obstack * braced_init_obstack)\n \t\t  c_parser_skip_until_found (parser, CPP_CLOSE_SQUARE,\n \t\t\t\t\t     \"expected %<]%>\");\n \t\t  mexpr.value\n-\t\t    = objc_build_message_expr (build_tree_list (rec, args));\n+\t\t    = objc_build_message_expr (rec, args);\n \t\t  mexpr.original_code = ERROR_MARK;\n \t\t  mexpr.original_type = NULL;\n \t\t  /* Now parse and process the remainder of the\n@@ -6455,8 +6455,7 @@ c_parser_postfix_expression (c_parser *parser)\n \t  args = c_parser_objc_message_args (parser);\n \t  c_parser_skip_until_found (parser, CPP_CLOSE_SQUARE,\n \t\t\t\t     \"expected %<]%>\");\n-\t  expr.value = objc_build_message_expr (build_tree_list (receiver,\n-\t\t\t\t\t\t\t\t args));\n+\t  expr.value = objc_build_message_expr (receiver, args);\n \t  break;\n \t}\n       /* Else fall through to report error.  */"}, {"sha": "21a9377154d7e2410326490c567a7e89e5641a56", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eb345401a1a2f6408fddd8538466be1143a95177/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eb345401a1a2f6408fddd8538466be1143a95177/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=eb345401a1a2f6408fddd8538466be1143a95177", "patch": "@@ -1,3 +1,8 @@\n+2011-04-12  Nicola Pero  <nicola.pero@meta-innovation.com>\n+\n+\t* parser.c (cp_parser_objc_message_expression): Updated call\n+\tto objc_build_message_expr.\n+\n 2011-04-12  Martin Jambor  <mjambor@suse.cz>\n \n \t* class.c (cp_fold_obj_type_ref): Call cgraph_get_node instead of"}, {"sha": "051c1c8258e724fd7f05b76f41648872dbbb7a80", "filename": "gcc/cp/parser.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eb345401a1a2f6408fddd8538466be1143a95177/gcc%2Fcp%2Fparser.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eb345401a1a2f6408fddd8538466be1143a95177/gcc%2Fcp%2Fparser.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fparser.c?ref=eb345401a1a2f6408fddd8538466be1143a95177", "patch": "@@ -21289,7 +21289,7 @@ cp_parser_objc_message_expression (cp_parser* parser)\n   messageargs = cp_parser_objc_message_args (parser);\n   cp_parser_require (parser, CPP_CLOSE_SQUARE, RT_CLOSE_SQUARE);\n \n-  return objc_build_message_expr (build_tree_list (receiver, messageargs));\n+  return objc_build_message_expr (receiver, messageargs);\n }\n \n /* Parse an objc-message-receiver."}, {"sha": "110de87adcdd4afe0ff1423c68df15fbc6d14c1a", "filename": "gcc/objc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eb345401a1a2f6408fddd8538466be1143a95177/gcc%2Fobjc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eb345401a1a2f6408fddd8538466be1143a95177/gcc%2Fobjc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fobjc%2FChangeLog?ref=eb345401a1a2f6408fddd8538466be1143a95177", "patch": "@@ -1,3 +1,9 @@\n+2011-04-12  Nicola Pero  <nicola.pero@meta-innovation.com>\n+\n+\t* objc-act.c (objc_build_message_expr): Accept two arguments\n+\tinstead of one so that callers can simply pass the arguments\n+\twithout having to create a temporary chain to hold them.\n+\n 2011-04-12  Nicola Pero  <nicola.pero@meta-innovation.com>\n \n \t* objc-act.c (comp_proto_with_proto): Do not create and use"}, {"sha": "2f6613c0586330f8c8061b6aad4a4e7aa388d7f8", "filename": "gcc/objc/objc-act.c", "status": "modified", "additions": 4, "deletions": 5, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eb345401a1a2f6408fddd8538466be1143a95177/gcc%2Fobjc%2Fobjc-act.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eb345401a1a2f6408fddd8538466be1143a95177/gcc%2Fobjc%2Fobjc-act.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fobjc%2Fobjc-act.c?ref=eb345401a1a2f6408fddd8538466be1143a95177", "patch": "@@ -5026,14 +5026,13 @@ objc_message_selector (void)\n    (*(<abstract_decl>(*)())_msgSuper)(receiver, selTransTbl[n], ...);  */\n \n tree\n-objc_build_message_expr (tree mess)\n+objc_build_message_expr (tree receiver, tree message_args)\n {\n-  tree receiver = TREE_PURPOSE (mess);\n   tree sel_name;\n #ifdef OBJCPLUS\n-  tree args = TREE_PURPOSE (TREE_VALUE (mess));\n+  tree args = TREE_PURPOSE (message_args);\n #else\n-  tree args = TREE_VALUE (mess);\n+  tree args = message_args;\n #endif\n   tree method_params = NULL_TREE;\n \n@@ -5057,7 +5056,7 @@ objc_build_message_expr (tree mess)\n   /* Build the parameter list to give to the method.  */\n   if (TREE_CODE (args) == TREE_LIST)\n #ifdef OBJCPLUS\n-    method_params = chainon (args, TREE_VALUE (TREE_VALUE (mess)));\n+    method_params = chainon (args, TREE_VALUE (message_args));\n #else\n     {\n       tree chain = args, prev = NULL_TREE;"}]}