{"sha": "73f5d219bb59d2930010220d144bbff22031fb90", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzNmNWQyMTliYjU5ZDI5MzAwMTAyMjBkMTQ0YmJmZjIyMDMxZmI5MA==", "commit": {"author": {"name": "Steven G. Kargl", "email": "kargl@gcc.gnu.org", "date": "2018-12-22T17:26:12Z"}, "committer": {"name": "Steven G. Kargl", "email": "kargl@gcc.gnu.org", "date": "2018-12-22T17:26:12Z"}, "message": "re PR fortran/88169 (Rejects USE rename of namelist group)\n\n2018-12-21  Steven G. Kargl  <kargl@gcc.gnu.org>\n\n\tPR fortran/88169\n\t* module.c (mio_namelist): Remove an error condition/message that\n\tis contrary to the Fortran standard.\n\n2018-12-21  Steven G. Kargl  <kargl@gcc.gnu.org>\n\n\tPR fortran/88169\n\t* gfortran.dg/pr88169_1.f90: new test.\n\t* gfortran.dg/pr88169_2.f90: Ditto.\n\t* gfortran.dg/pr88169_3.f90: Ditto.\n\nFrom-SVN: r267351", "tree": {"sha": "c766d9d9c6ffe97fafab88a943e8ab1d6987d976", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c766d9d9c6ffe97fafab88a943e8ab1d6987d976"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/73f5d219bb59d2930010220d144bbff22031fb90", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/73f5d219bb59d2930010220d144bbff22031fb90", "html_url": "https://github.com/Rust-GCC/gccrs/commit/73f5d219bb59d2930010220d144bbff22031fb90", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/73f5d219bb59d2930010220d144bbff22031fb90/comments", "author": null, "committer": null, "parents": [{"sha": "a00165b4660b76c8a54ff6be3e053b1cea2a6a37", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a00165b4660b76c8a54ff6be3e053b1cea2a6a37", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a00165b4660b76c8a54ff6be3e053b1cea2a6a37"}], "stats": {"total": 92, "additions": 80, "deletions": 12}, "files": [{"sha": "6f37f0954cace8583d3a5f4d50cff216c4095173", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73f5d219bb59d2930010220d144bbff22031fb90/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73f5d219bb59d2930010220d144bbff22031fb90/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=73f5d219bb59d2930010220d144bbff22031fb90", "patch": "@@ -1,3 +1,9 @@\n+2018-12-22  Steven G. Kargl  <kargl@gcc.gnu.org>\n+\n+\tPR fortran/88169\n+\t* module.c (mio_namelist): Remove an error condition/message that\n+\tis contrary to the Fortran standard.\n+\n 2018-12-22  Thomas Koenig  <tkoenig@gcc.gnu.org>\n \n \tPR fortran/85544"}, {"sha": "163b3ceebb2c12050e94b0a6f5dfa31a8ede875e", "filename": "gcc/fortran/module.c", "status": "modified", "additions": 0, "deletions": 12, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73f5d219bb59d2930010220d144bbff22031fb90/gcc%2Ffortran%2Fmodule.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73f5d219bb59d2930010220d144bbff22031fb90/gcc%2Ffortran%2Fmodule.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fmodule.c?ref=73f5d219bb59d2930010220d144bbff22031fb90", "patch": "@@ -3711,7 +3711,6 @@ static void\n mio_namelist (gfc_symbol *sym)\n {\n   gfc_namelist *n, *m;\n-  const char *check_name;\n \n   mio_lparen ();\n \n@@ -3722,17 +3721,6 @@ mio_namelist (gfc_symbol *sym)\n     }\n   else\n     {\n-      /* This departure from the standard is flagged as an error.\n-\t It does, in fact, work correctly. TODO: Allow it\n-\t conditionally?  */\n-      if (sym->attr.flavor == FL_NAMELIST)\n-\t{\n-\t  check_name = find_use_name (sym->name, false);\n-\t  if (check_name && strcmp (check_name, sym->name) != 0)\n-\t    gfc_error (\"Namelist %s cannot be renamed by USE \"\n-\t\t       \"association to %s\", sym->name, check_name);\n-\t}\n-\n       m = NULL;\n       while (peek_atom () != ATOM_RPAREN)\n \t{"}, {"sha": "d358d2d3a31a29ba7709e640dee5f46d86f4fd07", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73f5d219bb59d2930010220d144bbff22031fb90/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73f5d219bb59d2930010220d144bbff22031fb90/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=73f5d219bb59d2930010220d144bbff22031fb90", "patch": "@@ -1,3 +1,10 @@\n+2018-12-21  Steven G. Kargl  <kargl@gcc.gnu.org>\n+\n+\tPR fortran/88169\n+\t* gfortran.dg/pr88169_1.f90: new test.\n+\t* gfortran.dg/pr88169_2.f90: Ditto.\n+\t* gfortran.dg/pr88169_3.f90: Ditto.\n+\n 2018-12-21  Steven G. Kargl  <kargl@gcc.gnu.org>\n \n \tPR fortran/69121"}, {"sha": "6ea4aba5e10ac24073bcce3d7ecc649ab39c847b", "filename": "gcc/testsuite/gfortran.dg/pr88169_1.f90", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73f5d219bb59d2930010220d144bbff22031fb90/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr88169_1.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73f5d219bb59d2930010220d144bbff22031fb90/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr88169_1.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr88169_1.f90?ref=73f5d219bb59d2930010220d144bbff22031fb90", "patch": "@@ -0,0 +1,21 @@\n+! { dg-do run }\n+module foo_nml\n+   implicit none\n+   real :: x = -1\n+   namelist /foo/ x\n+end module\n+\n+program main\n+   use foo_nml, only: bar => foo, x\n+   implicit none\n+   integer fd\n+   x = 42\n+   open(newunit=fd, file='tmp.dat', status='replace')\n+   write(fd,nml=bar)\n+   close(fd)\n+   open(newunit=fd, file='tmp.dat', status='old')\n+   read(fd,nml=bar)\n+   if (x /= 42) stop 1\n+   close(fd)\n+end program\n+! { dg-final { cleanup-modules \"foo_nml\" } }"}, {"sha": "a7805b4557a5d7c89435ce1adb0246f0a00dd60a", "filename": "gcc/testsuite/gfortran.dg/pr88169_2.f90", "status": "added", "additions": 31, "deletions": 0, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73f5d219bb59d2930010220d144bbff22031fb90/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr88169_2.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73f5d219bb59d2930010220d144bbff22031fb90/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr88169_2.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr88169_2.f90?ref=73f5d219bb59d2930010220d144bbff22031fb90", "patch": "@@ -0,0 +1,31 @@\n+! { dg-do run }\n+module foo_nml\n+   implicit none\n+   real :: x = -1\n+   namelist /foo/ x\n+end module\n+!\n+! Yes, implicit typing of local variable 'x'.\n+!\n+program main\n+   use foo_nml, only: bar => foo\n+   integer fd\n+   x = 42\n+   open(newunit=fd, file='tmp.dat', status='replace')\n+   write(fd,nml=bar)\n+   close(fd)\n+   open(newunit=fd, file='tmp.dat', status='old')\n+   read(fd,nml=bar)\n+   close(fd)\n+   call bah\n+   if (x /= 42) stop 1\n+end program\n+\n+subroutine bah\n+   use foo_nml\n+   integer fd\n+   open(newunit=fd, file='tmp.dat', status='old')\n+   read(fd,nml=foo)\n+   if (x /= -1) stop 2\n+   close(fd, status='delete')\n+end subroutine bah"}, {"sha": "6bc24ed6b7190d002fe7e996677e5245fe5af88c", "filename": "gcc/testsuite/gfortran.dg/pr88169_3.f90", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73f5d219bb59d2930010220d144bbff22031fb90/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr88169_3.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73f5d219bb59d2930010220d144bbff22031fb90/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr88169_3.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr88169_3.f90?ref=73f5d219bb59d2930010220d144bbff22031fb90", "patch": "@@ -0,0 +1,15 @@\n+! { dg-do compile }\n+! { dg-options \"-std=f95\" }\n+module foo_nml\n+   implicit none\n+   real :: x = -1\n+   namelist /foo/ x\n+end module\n+\n+program main\n+   use foo_nml, only: bar => foo, x\n+   implicit none\n+   real a\n+   namelist /bar/a  ! { dg-error \"already is USE associated\" }\n+end program\n+! { dg-final { cleanup-modules \"foo_nml\" } }"}]}