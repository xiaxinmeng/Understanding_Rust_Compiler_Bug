{"sha": "b207f9008294b36b6f5c1fcd6876b5720815bcb1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjIwN2Y5MDA4Mjk0YjM2YjZmNWMxZmNkNjg3NmI1NzIwODE1YmNiMQ==", "commit": {"author": {"name": "Richard Guenther", "email": "rguenther@suse.de", "date": "2009-10-30T15:58:57Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2009-10-30T15:58:57Z"}, "message": "re PR lto/41858 (-flto -O2 crashes when many source files.)\n\n2009-10-30  Richard Guenther  <rguenther@suse.de>\n\n\tPR lto/41858\n\t* lto-streamer.h (struct lto_file_decl_data): Remove fd member.\n\n\tlto/\n\t* lto.c (lto_file_read): Do not set file_data->fd.\n\t(lto_read_section_data): Use a single-entry file-descriptor cache.\n\tDo not check the result of xmalloc.\n\t(free_section_data): Do not use file_data->fd.\n\t(lto_read_all_file_options): Likewise.\n\nFrom-SVN: r153758", "tree": {"sha": "6a6d371bbddb27aa20de3609df1e2686ed5dae1c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6a6d371bbddb27aa20de3609df1e2686ed5dae1c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b207f9008294b36b6f5c1fcd6876b5720815bcb1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b207f9008294b36b6f5c1fcd6876b5720815bcb1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b207f9008294b36b6f5c1fcd6876b5720815bcb1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b207f9008294b36b6f5c1fcd6876b5720815bcb1/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "62f9f3cebf6f21cf17c907d3797ee2c18c4e766a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/62f9f3cebf6f21cf17c907d3797ee2c18c4e766a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/62f9f3cebf6f21cf17c907d3797ee2c18c4e766a"}], "stats": {"total": 70, "additions": 40, "deletions": 30}, "files": [{"sha": "fb1fccedef850abbbce473b3324401e7f4c24018", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b207f9008294b36b6f5c1fcd6876b5720815bcb1/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b207f9008294b36b6f5c1fcd6876b5720815bcb1/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=b207f9008294b36b6f5c1fcd6876b5720815bcb1", "patch": "@@ -1,3 +1,8 @@\n+2009-10-30  Richard Guenther  <rguenther@suse.de>\n+\n+\tPR lto/41858\n+\t* lto-streamer.h (struct lto_file_decl_data): Remove fd member.\n+\n 2009-10-30  Nathan Sidwell  <nathan@codesourcery.com>\n \n \t* target-def.h (TARGET_ASM_TTYPE): Correct typo of TARGET_ARM_TTYPE."}, {"sha": "c3880b61efa8044caf11757f73595f441736f2b3", "filename": "gcc/lto-streamer.h", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b207f9008294b36b6f5c1fcd6876b5720815bcb1/gcc%2Flto-streamer.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b207f9008294b36b6f5c1fcd6876b5720815bcb1/gcc%2Flto-streamer.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flto-streamer.h?ref=b207f9008294b36b6f5c1fcd6876b5720815bcb1", "patch": "@@ -555,10 +555,6 @@ struct lto_file_decl_data\n   /* Nonzero if this file should be recompiled with LTRANS.  */\n   unsigned needs_ltrans_p : 1;\n \n-  /* If the file is open, this is the fd of the mapped section.  This\n-     is -1 if the file has not yet been opened.  */\n-  int fd;\n-\n   /* Hash table maps lto-related section names to location in file.  */\n   htab_t section_hash_table;\n "}, {"sha": "0d464ec232ee913e45cc189fe1f71b91423d77c8", "filename": "gcc/lto/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b207f9008294b36b6f5c1fcd6876b5720815bcb1/gcc%2Flto%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b207f9008294b36b6f5c1fcd6876b5720815bcb1/gcc%2Flto%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flto%2FChangeLog?ref=b207f9008294b36b6f5c1fcd6876b5720815bcb1", "patch": "@@ -1,3 +1,12 @@\n+2009-10-30  Richard Guenther  <rguenther@suse.de>\n+\n+\tPR lto/41858\n+\t* lto.c (lto_file_read): Do not set file_data->fd.\n+\t(lto_read_section_data): Use a single-entry file-descriptor cache.\n+\tDo not check the result of xmalloc.\n+\t(free_section_data): Do not use file_data->fd.\n+\t(lto_read_all_file_options): Likewise.\n+\n 2009-10-22  Richard Guenther  <rguenther@suse.de>\n \n \t* lto.c (lto_fixup_jump_functions): Remove."}, {"sha": "d8c49cf729f7b6ca253200a784de50c806332452", "filename": "gcc/lto/lto.c", "status": "modified", "additions": 26, "deletions": 26, "changes": 52, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b207f9008294b36b6f5c1fcd6876b5720815bcb1/gcc%2Flto%2Flto.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b207f9008294b36b6f5c1fcd6876b5720815bcb1/gcc%2Flto%2Flto.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flto%2Flto.c?ref=b207f9008294b36b6f5c1fcd6876b5720815bcb1", "patch": "@@ -334,7 +334,6 @@ lto_file_read (lto_file *file, FILE *resolution_file)\n \n   file_data = XCNEW (struct lto_file_decl_data);\n   file_data->file_name = file->filename;\n-  file_data->fd = -1;\n   file_data->section_hash_table = lto_elf_build_section_table (file);\n   file_data->renaming_hash_table = lto_create_renaming_table ();\n \n@@ -363,17 +362,33 @@ lto_read_section_data (struct lto_file_decl_data *file_data,\n \t\t       intptr_t offset, size_t len)\n {\n   char *result;\n+  static int fd = -1;\n+  static char *fd_name;\n #if LTO_MMAP_IO\n   intptr_t computed_len;\n   intptr_t computed_offset;\n   intptr_t diff;\n #endif\n \n-  if (file_data->fd == -1)\n-    file_data->fd = open (file_data->file_name, O_RDONLY);\n-\n-  if (file_data->fd == -1)\n-    return NULL;\n+  /* Keep a single-entry file-descriptor cache.  The last file we\n+     touched will get closed at exit.\n+     ???  Eventually we want to add a more sophisticated larger cache\n+     or rather fix function body streaming to not stream them in\n+     practically random order.  */\n+  if (fd != -1\n+      && strcmp (fd_name, file_data->file_name) != 0)\n+    {\n+      free (fd_name);\n+      close (fd);\n+      fd = -1;\n+    }\n+  if (fd == -1)\n+    {\n+      fd_name = xstrdup (file_data->file_name);\n+      fd = open (file_data->file_name, O_RDONLY);\n+      if (fd == -1)\n+\treturn NULL;\n+    }\n \n #if LTO_MMAP_IO\n   if (!page_mask)\n@@ -387,26 +402,17 @@ lto_read_section_data (struct lto_file_decl_data *file_data,\n   computed_len = len + diff;\n \n   result = (char *) mmap (NULL, computed_len, PROT_READ, MAP_PRIVATE,\n-\t\t\t  file_data->fd, computed_offset);\n+\t\t\t  fd, computed_offset);\n   if (result == MAP_FAILED)\n-    {\n-      close (file_data->fd);\n-      return NULL;\n-    }\n+    return NULL;\n \n   return result + diff;\n #else\n   result = (char *) xmalloc (len);\n-  if (result == NULL)\n-    {\n-      close (file_data->fd);\n-      return NULL;\n-    }\n-  if (lseek (file_data->fd, offset, SEEK_SET) != offset\n-      || read (file_data->fd, result, len) != (ssize_t) len)\n+  if (lseek (fd, offset, SEEK_SET) != offset\n+      || read (fd, result, len) != (ssize_t) len)\n     {\n       free (result);\n-      close (file_data->fd);\n       return NULL;\n     }\n \n@@ -449,7 +455,7 @@ get_section_data (struct lto_file_decl_data *file_data,\n    starts at OFFSET and has LEN bytes.  */\n \n static void\n-free_section_data (struct lto_file_decl_data *file_data,\n+free_section_data (struct lto_file_decl_data *file_data ATTRIBUTE_UNUSED,\n \t\t   enum lto_section_type section_type ATTRIBUTE_UNUSED,\n \t\t   const char *name ATTRIBUTE_UNUSED,\n \t\t   const char *offset, size_t len ATTRIBUTE_UNUSED)\n@@ -460,9 +466,6 @@ free_section_data (struct lto_file_decl_data *file_data,\n   intptr_t diff;\n #endif\n \n-  if (file_data->fd == -1)\n-    return;\n-\n #if LTO_MMAP_IO\n   computed_offset = ((intptr_t) offset) & page_mask;\n   diff = (intptr_t) offset - computed_offset;\n@@ -1712,15 +1715,12 @@ lto_read_all_file_options (void)\n \n       file_data = XCNEW (struct lto_file_decl_data);\n       file_data->file_name = file->filename;\n-      file_data->fd = -1;\n       file_data->section_hash_table = lto_elf_build_section_table (file);\n \n       lto_read_file_options (file_data);\n \n       lto_elf_file_close (file);\n       htab_delete (file_data->section_hash_table);\n-      if (file_data->fd != -1)\n-\tclose (file_data->fd);\n       free (file_data);\n     }\n "}]}