{"sha": "3b7511f9219038110e5b464f197266564e2f8c76", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2I3NTExZjkyMTkwMzgxMTBlNWI0NjRmMTk3MjY2NTY0ZTJmOGM3Ng==", "commit": {"author": {"name": "Martin Jambor", "email": "mjambor@suse.cz", "date": "2017-10-03T11:43:45Z"}, "committer": {"name": "Martin Jambor", "email": "jamborm@gcc.gnu.org", "date": "2017-10-03T11:43:45Z"}, "message": "[PR 82363] Fix thinko in SRA subaccess propagation\n\n2017-10-03  Martin Jambor  <mjambor@suse.cz>\n\n\tPR tree-optimization/82363\n\t* tree-sra.c (propagate_subaccesses_across_link): In unrecoverable\n\tmismatch, mark lacc written regardless of racc.\n\n\ttestsuite/\n\t* gcc.dg/tree-ssa/pr82363.c: New test.\n\nFrom-SVN: r253380", "tree": {"sha": "5608cd966e124eec350996a08c760328f2af49e7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5608cd966e124eec350996a08c760328f2af49e7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3b7511f9219038110e5b464f197266564e2f8c76", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3b7511f9219038110e5b464f197266564e2f8c76", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3b7511f9219038110e5b464f197266564e2f8c76", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3b7511f9219038110e5b464f197266564e2f8c76/comments", "author": {"login": "jamborm", "id": 2180070, "node_id": "MDQ6VXNlcjIxODAwNzA=", "avatar_url": "https://avatars.githubusercontent.com/u/2180070?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jamborm", "html_url": "https://github.com/jamborm", "followers_url": "https://api.github.com/users/jamborm/followers", "following_url": "https://api.github.com/users/jamborm/following{/other_user}", "gists_url": "https://api.github.com/users/jamborm/gists{/gist_id}", "starred_url": "https://api.github.com/users/jamborm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jamborm/subscriptions", "organizations_url": "https://api.github.com/users/jamborm/orgs", "repos_url": "https://api.github.com/users/jamborm/repos", "events_url": "https://api.github.com/users/jamborm/events{/privacy}", "received_events_url": "https://api.github.com/users/jamborm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "33ff5dda9fe0dd67216ec38a6b1143d9adc3948a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/33ff5dda9fe0dd67216ec38a6b1143d9adc3948a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/33ff5dda9fe0dd67216ec38a6b1143d9adc3948a"}], "stats": {"total": 63, "additions": 62, "deletions": 1}, "files": [{"sha": "33ae1be901a6ede43c0bae3d9775dbb51633805b", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3b7511f9219038110e5b464f197266564e2f8c76/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3b7511f9219038110e5b464f197266564e2f8c76/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=3b7511f9219038110e5b464f197266564e2f8c76", "patch": "@@ -1,3 +1,9 @@\n+2017-10-03  Martin Jambor  <mjambor@suse.cz>\n+\n+\tPR tree-optimization/82363\n+\t* tree-sra.c (propagate_subaccesses_across_link): In unrecoverable\n+\tmismatch, mark lacc written regardless of racc.\n+\n 2017-10-03  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR tree-optimization/82381"}, {"sha": "e109ea55d551a3c3246ad4c469bc7e12918e2149", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3b7511f9219038110e5b464f197266564e2f8c76/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3b7511f9219038110e5b464f197266564e2f8c76/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=3b7511f9219038110e5b464f197266564e2f8c76", "patch": "@@ -1,3 +1,8 @@\n+2017-10-03  Martin Jambor  <mjambor@suse.cz>\n+\n+\tPR tree-optimization/82363\n+\t* gcc.dg/tree-ssa/pr82363.c: New test.\n+\n 2017-10-03  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR tree-optimization/82381"}, {"sha": "6652468976b21027f768533719a4979f45e5253c", "filename": "gcc/testsuite/gcc.dg/tree-ssa/pr82363.c", "status": "added", "additions": 50, "deletions": 0, "changes": 50, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3b7511f9219038110e5b464f197266564e2f8c76/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr82363.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3b7511f9219038110e5b464f197266564e2f8c76/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr82363.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr82363.c?ref=3b7511f9219038110e5b464f197266564e2f8c76", "patch": "@@ -0,0 +1,50 @@\n+/* { dg-do run } */\n+/* { dg-options \"-O\" } */\n+\n+struct A\n+{\n+  int b;\n+  int c;\n+  int d;\n+};\n+\n+struct E\n+{\n+  int f;\n+  int g:18;\n+  struct A h;\n+};\n+\n+struct I\n+{\n+  int b;\n+  int j;\n+  struct E k;\n+};\n+\n+int l, *m = &l;\n+\n+struct A n;\n+struct I o;\n+\n+void __attribute__ ((noipa))\n+test_l (void)\n+{\n+  if (l != 1)\n+    __builtin_abort ();\n+}\n+\n+int main ()\n+{\n+  while (1)\n+    {\n+      struct I q = { 0, 0, {0, 0, {1, 1, 1}}}, p = q, r = p, *s = &q;\n+      if (p.k.h.c)\n+        o = p;\n+      *m = r.k.h.d;\n+      n = (*s).k.h;\n+      break;\n+    }\n+  test_l ();\n+  return 0;\n+}"}, {"sha": "bac593951e7206f5c5253bc5b1fd897af019f0a9", "filename": "gcc/tree-sra.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3b7511f9219038110e5b464f197266564e2f8c76/gcc%2Ftree-sra.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3b7511f9219038110e5b464f197266564e2f8c76/gcc%2Ftree-sra.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-sra.c?ref=3b7511f9219038110e5b464f197266564e2f8c76", "patch": "@@ -2691,7 +2691,7 @@ propagate_subaccesses_across_link (struct access *lacc, struct access *racc)\n \t    }\n \t  else\n \t    {\n-\t      if (rchild->grp_write && !lacc->grp_write)\n+\t      if (!lacc->grp_write)\n \t\t{\n \t\t  ret = true;\n \t\t  subtree_mark_written_and_enqueue (lacc);"}]}