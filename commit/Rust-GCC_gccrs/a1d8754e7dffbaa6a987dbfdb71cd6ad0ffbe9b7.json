{"sha": "a1d8754e7dffbaa6a987dbfdb71cd6ad0ffbe9b7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTFkODc1NGU3ZGZmYmFhNmE5ODdkYmZkYjcxY2Q2YWQwZmZiZTliNw==", "commit": {"author": {"name": "Nick Clifton", "email": "nickc@redhat.com", "date": "2011-05-17T08:58:09Z"}, "committer": {"name": "Nick Clifton", "email": "nickc@gcc.gnu.org", "date": "2011-05-17T08:58:09Z"}, "message": "rx.c (rx_memory_move_cost): Include cost of register moves.\n\n\t* config/rx/rx.c (rx_memory_move_cost): Include cost of register\n\tmoves.\n\nFrom-SVN: r173824", "tree": {"sha": "966f08854a927091ebafc0b30d215d7dcbd3ff69", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/966f08854a927091ebafc0b30d215d7dcbd3ff69"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a1d8754e7dffbaa6a987dbfdb71cd6ad0ffbe9b7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a1d8754e7dffbaa6a987dbfdb71cd6ad0ffbe9b7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a1d8754e7dffbaa6a987dbfdb71cd6ad0ffbe9b7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a1d8754e7dffbaa6a987dbfdb71cd6ad0ffbe9b7/comments", "author": {"login": "nickclifton", "id": 31441682, "node_id": "MDQ6VXNlcjMxNDQxNjgy", "avatar_url": "https://avatars.githubusercontent.com/u/31441682?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nickclifton", "html_url": "https://github.com/nickclifton", "followers_url": "https://api.github.com/users/nickclifton/followers", "following_url": "https://api.github.com/users/nickclifton/following{/other_user}", "gists_url": "https://api.github.com/users/nickclifton/gists{/gist_id}", "starred_url": "https://api.github.com/users/nickclifton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nickclifton/subscriptions", "organizations_url": "https://api.github.com/users/nickclifton/orgs", "repos_url": "https://api.github.com/users/nickclifton/repos", "events_url": "https://api.github.com/users/nickclifton/events{/privacy}", "received_events_url": "https://api.github.com/users/nickclifton/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "39960f7a9f564abf1fc12646a08baf84ad268981", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/39960f7a9f564abf1fc12646a08baf84ad268981", "html_url": "https://github.com/Rust-GCC/gccrs/commit/39960f7a9f564abf1fc12646a08baf84ad268981"}], "stats": {"total": 5, "additions": 4, "deletions": 1}, "files": [{"sha": "18243164f05965607c822a673af80e56b2923423", "filename": "gcc/ChangeLog", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a1d8754e7dffbaa6a987dbfdb71cd6ad0ffbe9b7/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a1d8754e7dffbaa6a987dbfdb71cd6ad0ffbe9b7/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=a1d8754e7dffbaa6a987dbfdb71cd6ad0ffbe9b7", "patch": "@@ -1,5 +1,8 @@\n 2011-05-17  Nick Clifton  <nickc@redhat.com>\n \n+\t* config/rx/rx.c (rx_memory_move_cost): Include cost of register\n+\tmoves.\n+\n \t* config/rx/rx.md: Add peephole to remove redundant extensions\n \tafter loads.\n \t(bitset_in_memory): Use rx_restricted_mem_operand."}, {"sha": "6b0ca2e9333d2c850abbb3e5767d975e229e57d1", "filename": "gcc/config/rx/rx.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a1d8754e7dffbaa6a987dbfdb71cd6ad0ffbe9b7/gcc%2Fconfig%2Frx%2Frx.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a1d8754e7dffbaa6a987dbfdb71cd6ad0ffbe9b7/gcc%2Fconfig%2Frx%2Frx.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frx%2Frx.c?ref=a1d8754e7dffbaa6a987dbfdb71cd6ad0ffbe9b7", "patch": "@@ -2638,7 +2638,7 @@ rx_trampoline_init (rtx tramp, tree fndecl, rtx chain)\n static int\n rx_memory_move_cost (enum machine_mode mode, reg_class_t regclass, bool in)\n {\n-  return (in ? 2 : 0) + memory_move_secondary_cost (mode, regclass, in);\n+  return (in ? 2 : 0) + REGISTER_MOVE_COST (mode, regclass, regclass);\n }\n \n /* Convert a CC_MODE to the set of flags that it represents.  */"}]}