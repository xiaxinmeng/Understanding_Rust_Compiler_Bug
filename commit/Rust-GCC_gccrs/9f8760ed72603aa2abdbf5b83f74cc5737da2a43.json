{"sha": "9f8760ed72603aa2abdbf5b83f74cc5737da2a43", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OWY4NzYwZWQ3MjYwM2FhMmFiZGJmNWI4M2Y3NGNjNTczN2RhMmE0Mw==", "commit": {"author": {"name": "H.J. Lu", "email": "hongjiu.lu@intel.com", "date": "2017-11-06T23:04:15Z"}, "committer": {"name": "H.J. Lu", "email": "hjl@gcc.gnu.org", "date": "2017-11-06T23:04:15Z"}, "message": "i386: Use reference of struct ix86_frame to avoid copy\n\nWhen there is no need to make a copy of ix86_frame, we can use reference\nof struct ix86_frame to avoid copy.\n\nTested on x86-64.\n\n\t* config/i386/i386.c (ix86_can_use_return_insn_p): Use reference\n\tof struct ix86_frame.\n\t(ix86_initial_elimination_offset): Likewise.\n\t(ix86_expand_split_stack_prologue): Likewise.\n\nFrom-SVN: r254480", "tree": {"sha": "df038db50d2574619f89cd2d3ac6d2d643462d51", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/df038db50d2574619f89cd2d3ac6d2d643462d51"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9f8760ed72603aa2abdbf5b83f74cc5737da2a43", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9f8760ed72603aa2abdbf5b83f74cc5737da2a43", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9f8760ed72603aa2abdbf5b83f74cc5737da2a43", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9f8760ed72603aa2abdbf5b83f74cc5737da2a43/comments", "author": {"login": "hjl-tools", "id": 1072356, "node_id": "MDQ6VXNlcjEwNzIzNTY=", "avatar_url": "https://avatars.githubusercontent.com/u/1072356?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hjl-tools", "html_url": "https://github.com/hjl-tools", "followers_url": "https://api.github.com/users/hjl-tools/followers", "following_url": "https://api.github.com/users/hjl-tools/following{/other_user}", "gists_url": "https://api.github.com/users/hjl-tools/gists{/gist_id}", "starred_url": "https://api.github.com/users/hjl-tools/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hjl-tools/subscriptions", "organizations_url": "https://api.github.com/users/hjl-tools/orgs", "repos_url": "https://api.github.com/users/hjl-tools/repos", "events_url": "https://api.github.com/users/hjl-tools/events{/privacy}", "received_events_url": "https://api.github.com/users/hjl-tools/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "53d855e09df135ea735178521cc7c4cfbfb8a485", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/53d855e09df135ea735178521cc7c4cfbfb8a485", "html_url": "https://github.com/Rust-GCC/gccrs/commit/53d855e09df135ea735178521cc7c4cfbfb8a485"}], "stats": {"total": 16, "additions": 10, "deletions": 6}, "files": [{"sha": "9353fd3586dd266388d4561f28193008d643a589", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9f8760ed72603aa2abdbf5b83f74cc5737da2a43/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9f8760ed72603aa2abdbf5b83f74cc5737da2a43/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=9f8760ed72603aa2abdbf5b83f74cc5737da2a43", "patch": "@@ -1,3 +1,10 @@\n+2017-11-06  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\t* config/i386/i386.c (ix86_can_use_return_insn_p): Use reference\n+\tof struct ix86_frame.\n+\t(ix86_initial_elimination_offset): Likewise.\n+\t(ix86_expand_split_stack_prologue): Likewise.\n+\n 2017-11-06  Marc Glisse  <marc.glisse@inria.fr>\n \n \t* tree-vrp.h (enum value_range_type): Update stale comment."}, {"sha": "1e2709d8aec4946ce3953a6437a1200c907c6f99", "filename": "gcc/config/i386/i386.c", "status": "modified", "additions": 3, "deletions": 6, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9f8760ed72603aa2abdbf5b83f74cc5737da2a43/gcc%2Fconfig%2Fi386%2Fi386.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9f8760ed72603aa2abdbf5b83f74cc5737da2a43/gcc%2Fconfig%2Fi386%2Fi386.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.c?ref=9f8760ed72603aa2abdbf5b83f74cc5737da2a43", "patch": "@@ -10486,8 +10486,6 @@ symbolic_reference_mentioned_p (rtx op)\n bool\n ix86_can_use_return_insn_p (void)\n {\n-  struct ix86_frame frame;\n-\n   if (ix86_function_naked (current_function_decl))\n     return false;\n \n@@ -10502,7 +10500,7 @@ ix86_can_use_return_insn_p (void)\n   if (crtl->args.pops_args && crtl->args.size >= 32768)\n     return 0;\n \n-  frame = cfun->machine->frame;\n+  struct ix86_frame &frame = cfun->machine->frame;\n   return (frame.stack_pointer_offset == UNITS_PER_WORD\n \t  && (frame.nregs + frame.nsseregs) == 0);\n }\n@@ -10996,7 +10994,7 @@ ix86_can_eliminate (const int from, const int to)\n HOST_WIDE_INT\n ix86_initial_elimination_offset (int from, int to)\n {\n-  struct ix86_frame frame = cfun->machine->frame;\n+  struct ix86_frame &frame = cfun->machine->frame;\n \n   if (from == ARG_POINTER_REGNUM && to == HARD_FRAME_POINTER_REGNUM)\n     return frame.hard_frame_pointer_offset;\n@@ -14334,7 +14332,6 @@ ix86_split_stack_guard (void)\n void\n ix86_expand_split_stack_prologue (void)\n {\n-  struct ix86_frame frame;\n   HOST_WIDE_INT allocate;\n   unsigned HOST_WIDE_INT args_size;\n   rtx_code_label *label;\n@@ -14346,7 +14343,7 @@ ix86_expand_split_stack_prologue (void)\n   gcc_assert (flag_split_stack && reload_completed);\n \n   ix86_finalize_stack_frame_flags ();\n-  frame = cfun->machine->frame;\n+  struct ix86_frame &frame = cfun->machine->frame;\n   allocate = frame.stack_pointer_offset - INCOMING_FRAME_SP_OFFSET;\n \n   /* This is the label we will branch to if we have enough stack"}]}