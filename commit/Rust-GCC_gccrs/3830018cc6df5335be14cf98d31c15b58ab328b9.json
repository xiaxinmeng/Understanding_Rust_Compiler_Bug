{"sha": "3830018cc6df5335be14cf98d31c15b58ab328b9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzgzMDAxOGNjNmRmNTMzNWJlMTRjZjk4ZDMxYzE1YjU4YWIzMjhiOQ==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@adacore.com", "date": "2020-03-31T11:47:17Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "derodat@adacore.com", "date": "2020-06-15T08:04:33Z"}, "message": "[Ada] AI12-0260 Functions Is_Basic and To_Basic in Wide_Characters.Handling\n\n2020-06-15  Arnaud Charlet  <charlet@adacore.com>\n\ngcc/ada/\n\n\t* libgnat/a-wichha.ads, libgnat/a-wichha.adb,\n\tlibgnat/a-wichun.ads, libgnat/a-wichun.adb (Is_Basic, To_Basic):\n\tNew.\n\t* libgnat/s-utf_32.ads, libgnat/s-utf_32.adb (Is_UTF_32_Basic,\n\tTo_UTF_32_Basic, Decomposition_Search): New subprograms.\n\t(Unicode_Decomposition): New table.", "tree": {"sha": "38168d052770da8a4360a35c0a0c235c493c571a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/38168d052770da8a4360a35c0a0c235c493c571a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3830018cc6df5335be14cf98d31c15b58ab328b9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3830018cc6df5335be14cf98d31c15b58ab328b9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3830018cc6df5335be14cf98d31c15b58ab328b9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3830018cc6df5335be14cf98d31c15b58ab328b9/comments", "author": {"login": "ArnaudCharlet", "id": 30291825, "node_id": "MDQ6VXNlcjMwMjkxODI1", "avatar_url": "https://avatars.githubusercontent.com/u/30291825?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ArnaudCharlet", "html_url": "https://github.com/ArnaudCharlet", "followers_url": "https://api.github.com/users/ArnaudCharlet/followers", "following_url": "https://api.github.com/users/ArnaudCharlet/following{/other_user}", "gists_url": "https://api.github.com/users/ArnaudCharlet/gists{/gist_id}", "starred_url": "https://api.github.com/users/ArnaudCharlet/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ArnaudCharlet/subscriptions", "organizations_url": "https://api.github.com/users/ArnaudCharlet/orgs", "repos_url": "https://api.github.com/users/ArnaudCharlet/repos", "events_url": "https://api.github.com/users/ArnaudCharlet/events{/privacy}", "received_events_url": "https://api.github.com/users/ArnaudCharlet/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pmderodat", "id": 758452, "node_id": "MDQ6VXNlcjc1ODQ1Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/758452?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pmderodat", "html_url": "https://github.com/pmderodat", "followers_url": "https://api.github.com/users/pmderodat/followers", "following_url": "https://api.github.com/users/pmderodat/following{/other_user}", "gists_url": "https://api.github.com/users/pmderodat/gists{/gist_id}", "starred_url": "https://api.github.com/users/pmderodat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pmderodat/subscriptions", "organizations_url": "https://api.github.com/users/pmderodat/orgs", "repos_url": "https://api.github.com/users/pmderodat/repos", "events_url": "https://api.github.com/users/pmderodat/events{/privacy}", "received_events_url": "https://api.github.com/users/pmderodat/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c873714ff0cdefda09729bf04a7fc6c049d024f5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c873714ff0cdefda09729bf04a7fc6c049d024f5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c873714ff0cdefda09729bf04a7fc6c049d024f5"}], "stats": {"total": 5911, "additions": 5903, "deletions": 8}, "files": [{"sha": "7531ef67444e36d328e22bbd63a23bd49810d1df", "filename": "gcc/ada/libgnat/a-wichha.adb", "status": "modified", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3830018cc6df5335be14cf98d31c15b58ab328b9/gcc%2Fada%2Flibgnat%2Fa-wichha.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3830018cc6df5335be14cf98d31c15b58ab328b9/gcc%2Fada%2Flibgnat%2Fa-wichha.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fa-wichha.adb?ref=3830018cc6df5335be14cf98d31c15b58ab328b9", "patch": "@@ -51,6 +51,13 @@ package body Ada.Wide_Characters.Handling is\n       return Is_Letter (Item) or else Is_Digit (Item);\n    end Is_Alphanumeric;\n \n+   --------------\n+   -- Is_Basic --\n+   --------------\n+\n+   function Is_Basic (Item : Wide_Character) return Boolean\n+     renames Ada.Wide_Characters.Unicode.Is_Basic;\n+\n    ----------------\n    -- Is_Control --\n    ----------------\n@@ -192,4 +199,22 @@ package body Ada.Wide_Characters.Handling is\n       return Result;\n    end To_Upper;\n \n+   --------------\n+   -- To_Basic --\n+   --------------\n+\n+   function To_Basic (Item : Wide_Character) return Wide_Character\n+     renames Ada.Wide_Characters.Unicode.To_Basic;\n+\n+   function To_Basic (Item : Wide_String) return Wide_String is\n+      Result : Wide_String (Item'Range);\n+\n+   begin\n+      for J in Result'Range loop\n+         Result (J) := To_Basic (Item (J));\n+      end loop;\n+\n+      return Result;\n+   end To_Basic;\n+\n end Ada.Wide_Characters.Handling;"}, {"sha": "bb9452fb8789b6242478fcf7cf070a4dcd99c3e1", "filename": "gcc/ada/libgnat/a-wichha.ads", "status": "modified", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3830018cc6df5335be14cf98d31c15b58ab328b9/gcc%2Fada%2Flibgnat%2Fa-wichha.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3830018cc6df5335be14cf98d31c15b58ab328b9/gcc%2Fada%2Flibgnat%2Fa-wichha.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fa-wichha.ads?ref=3830018cc6df5335be14cf98d31c15b58ab328b9", "patch": "@@ -43,6 +43,12 @@ package Ada.Wide_Characters.Handling is\n    --  Returns True if the Wide_Character designated by Item is categorized as\n    --  letter_uppercase, otherwise returns False.\n \n+   function Is_Basic (Item : Wide_Character) return Boolean;\n+   pragma Inline (Is_Basic);\n+   --  Returns True if the Wide_Character designated by Item has no\n+   --  Decomposition Mapping in the code charts of ISO/IEC 10646:2017,\n+   --  otherwise returns False.\n+\n    function Is_Digit (Item : Wide_Character) return Boolean;\n    pragma Inline (Is_Digit);\n    --  Returns True if the Wide_Character designated by Item is categorized as\n@@ -124,4 +130,16 @@ package Ada.Wide_Characters.Handling is\n    --  by Item. The result is the null Wide_String if the value of the formal\n    --  parameter is the null Wide_String.\n \n+   function To_Basic (Item : Wide_Character) return Wide_Character;\n+   pragma Inline (To_Basic);\n+   --  Returns the Wide_Character whose code point is given by the first value\n+   --  of its Decomposition Mapping in the code charts of ISO/IEC 10646:2017 if\n+   --  any, returns Item otherwise.\n+\n+   function To_Basic (Item : Wide_String) return Wide_String;\n+   --  Returns the result of applying the To_Basic conversion to each\n+   --  Wide_Character element of the Wide_String designated by Item. The result\n+   --  is the null Wide_String if the value of the formal parameter is the null\n+   --  Wide_String. The lower bound of the result Wide_String is 1.\n+\n end Ada.Wide_Characters.Handling;"}, {"sha": "cfd84da677ec1afab3209ee9bfa80b91572fc1f1", "filename": "gcc/ada/libgnat/a-wichun.adb", "status": "modified", "additions": 21, "deletions": 8, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3830018cc6df5335be14cf98d31c15b58ab328b9/gcc%2Fada%2Flibgnat%2Fa-wichun.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3830018cc6df5335be14cf98d31c15b58ab328b9/gcc%2Fada%2Flibgnat%2Fa-wichun.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fa-wichun.adb?ref=3830018cc6df5335be14cf98d31c15b58ab328b9", "patch": "@@ -42,6 +42,15 @@ package body Ada.Wide_Characters.Unicode is\n       return Category (G.Get_Category (Wide_Character'Pos (U)));\n    end Get_Category;\n \n+   --------------\n+   -- Is_Basic --\n+   --------------\n+\n+   function Is_Basic (U : Wide_Character) return Boolean is\n+   begin\n+      return G.Is_UTF_32_Basic (Wide_Character'Pos (U));\n+   end Is_Basic;\n+\n    --------------\n    -- Is_Digit --\n    --------------\n@@ -149,26 +158,30 @@ package body Ada.Wide_Characters.Unicode is\n       return G.Is_UTF_32_Space (G.Category (C));\n    end Is_Space;\n \n+   --------------\n+   -- To_Basic --\n+   --------------\n+\n+   function To_Basic (U : Wide_Character) return Wide_Character is\n+   begin\n+      return Wide_Character'Val (G.UTF_32_To_Basic (Wide_Character'Pos (U)));\n+   end To_Basic;\n+\n    -------------------\n    -- To_Lower_Case --\n    -------------------\n \n-   function To_Lower_Case\n-     (U : Wide_Character) return Wide_Character\n-   is\n+   function To_Lower_Case (U : Wide_Character) return Wide_Character is\n    begin\n       return\n-        Wide_Character'Val\n-          (G.UTF_32_To_Lower_Case (Wide_Character'Pos (U)));\n+        Wide_Character'Val (G.UTF_32_To_Lower_Case (Wide_Character'Pos (U)));\n    end To_Lower_Case;\n \n    -------------------\n    -- To_Upper_Case --\n    -------------------\n \n-   function To_Upper_Case\n-     (U : Wide_Character) return Wide_Character\n-   is\n+   function To_Upper_Case (U : Wide_Character) return Wide_Character is\n    begin\n       return\n         Wide_Character'Val"}, {"sha": "c9eb938e5c97b33f9b09bd165c5e692575a43667", "filename": "gcc/ada/libgnat/a-wichun.ads", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3830018cc6df5335be14cf98d31c15b58ab328b9/gcc%2Fada%2Flibgnat%2Fa-wichun.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3830018cc6df5335be14cf98d31c15b58ab328b9/gcc%2Fada%2Flibgnat%2Fa-wichun.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fa-wichun.ads?ref=3830018cc6df5335be14cf98d31c15b58ab328b9", "patch": "@@ -174,6 +174,18 @@ package Ada.Wide_Characters.Unicode is\n    --  in the list of categories above. This means that these characters can\n    --  be included in character and string literals.\n \n+   function Is_Basic (U : Wide_Character) return Boolean;\n+   pragma Inline (Is_Basic);\n+   --  Returns True if the Wide_Character designated by Item has no\n+   --  Decomposition Mapping in the code charts of ISO/IEC 10646:2017,\n+   --  otherwise returns False.\n+\n+   function To_Basic (U : Wide_Character) return Wide_Character;\n+   pragma Inline (To_Basic);\n+   --  Returns the Wide_Character whose code point is given by the first value\n+   --  of its Decomposition Mapping in the code charts of ISO/IEC 10646:2017 if\n+   --  any, returns Item otherwise.\n+\n    --  The following function is used to fold to upper case, as required by\n    --  the Ada 2005 standard rules for identifier case folding. Two\n    --  identifiers are equivalent if they are identical after folding all"}, {"sha": "a722d62e59177168899c8f974305f4a77c7950b2", "filename": "gcc/ada/libgnat/s-utf_32.adb", "status": "modified", "additions": 5816, "deletions": 0, "changes": 5816, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3830018cc6df5335be14cf98d31c15b58ab328b9/gcc%2Fada%2Flibgnat%2Fs-utf_32.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3830018cc6df5335be14cf98d31c15b58ab328b9/gcc%2Fada%2Flibgnat%2Fs-utf_32.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fs-utf_32.adb?ref=3830018cc6df5335be14cf98d31c15b58ab328b9"}, {"sha": "b8e4e3e903ee445d231d684e2eec50bdce48362d", "filename": "gcc/ada/libgnat/s-utf_32.ads", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3830018cc6df5335be14cf98d31c15b58ab328b9/gcc%2Fada%2Flibgnat%2Fs-utf_32.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3830018cc6df5335be14cf98d31c15b58ab328b9/gcc%2Fada%2Flibgnat%2Fs-utf_32.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fs-utf_32.ads?ref=3830018cc6df5335be14cf98d31c15b58ab328b9", "patch": "@@ -189,6 +189,11 @@ package System.UTF_32 is\n    --  letters to upper case using this routine. A corresponding routine to\n    --  fold to lower case is also provided.\n \n+   function Is_UTF_32_Basic (U : UTF_32) return Boolean;\n+   pragma Inline (Is_UTF_32_Basic);\n+   --  Return True if U has no Decomposition Mapping in the code charts of\n+   --  ISO/IEC 10646:2017.\n+\n    function UTF_32_To_Lower_Case (U : UTF_32) return UTF_32;\n    pragma Inline (UTF_32_To_Lower_Case);\n    --  If U represents an upper case letter, returns the corresponding lower\n@@ -209,4 +214,10 @@ package System.UTF_32 is\n    --  code is folded to this CAPITAL LETTER code. Otherwise the input code is\n    --  returned unchanged.\n \n+   function UTF_32_To_Basic (U : UTF_32) return UTF_32;\n+   pragma Inline (UTF_32_To_Basic);\n+   --  Returns the UTF_32 character whose code point is given by the first\n+   --  value of its Decomposition Mapping in the code charts of ISO/IEC\n+   --  10646:2017 if any; returns Item otherwise.\n+\n end System.UTF_32;"}]}