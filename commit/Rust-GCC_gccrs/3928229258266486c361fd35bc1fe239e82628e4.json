{"sha": "3928229258266486c361fd35bc1fe239e82628e4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzkyODIyOTI1ODI2NjQ4NmMzNjFmZDM1YmMxZmUyMzllODI2MjhlNA==", "commit": {"author": {"name": "Michael Meissner", "email": "meissner@gcc.gnu.org", "date": "1992-09-22T16:31:20Z"}, "committer": {"name": "Michael Meissner", "email": "meissner@gcc.gnu.org", "date": "1992-09-22T16:31:20Z"}, "message": "Put correct source into tree.\n\nFrom-SVN: r2206", "tree": {"sha": "c95db71079e01a8bdcb0f63588b32ef88fd52a9f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c95db71079e01a8bdcb0f63588b32ef88fd52a9f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3928229258266486c361fd35bc1fe239e82628e4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3928229258266486c361fd35bc1fe239e82628e4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3928229258266486c361fd35bc1fe239e82628e4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3928229258266486c361fd35bc1fe239e82628e4/comments", "author": null, "committer": null, "parents": [{"sha": "6cb6c3b358c4a78eb9351f3b8eea1a7ffea42248", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6cb6c3b358c4a78eb9351f3b8eea1a7ffea42248", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6cb6c3b358c4a78eb9351f3b8eea1a7ffea42248"}], "stats": {"total": 12, "additions": 9, "deletions": 3}, "files": [{"sha": "800721b570c70f768a3e7fc8ac7f30ec06dc6223", "filename": "gcc/config/mips/mips.h", "status": "modified", "additions": 9, "deletions": 3, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3928229258266486c361fd35bc1fe239e82628e4/gcc%2Fconfig%2Fmips%2Fmips.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3928229258266486c361fd35bc1fe239e82628e4/gcc%2Fconfig%2Fmips%2Fmips.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fmips.h?ref=3928229258266486c361fd35bc1fe239e82628e4", "patch": "@@ -1628,14 +1628,20 @@ extern struct mips_frame_info current_frame_info;\n    function.\n \n    If `ARGS_GROW_DOWNWARD', this is the offset to the location above\n-   the first argument's address.  */\n+   the first argument's address.\n+\n+   On the MIPS, we must skip the first argument position if we are\n+   returning a structure or a union, to account for it's address being\n+   passed in $4.  */\n \n #define FIRST_PARM_OFFSET(FNDECL)\t\t\t\t\t\\\n   (FNDECL != 0\t\t\t\t\t\t\t\t\\\n    && TREE_TYPE (FNDECL) != 0\t\t\t\t\t\t\\\n    && TREE_TYPE (TREE_TYPE (FNDECL)) != 0\t\t\t\t\\\n    && (TREE_CODE (TREE_TYPE (TREE_TYPE (FNDECL))) == RECORD_TYPE\t\\\n-       || TREE_CODE (TREE_TYPE (TREE_TYPE (FNDECL))) == UNION_TYPE) ? 4 : 0)\n+       || TREE_CODE (TREE_TYPE (TREE_TYPE (FNDECL))) == UNION_TYPE)\t\\\n+\t\t? UNITS_PER_WORD\t\t\t\t\t\\\n+\t\t: 0)\n \n /* When a parameter is passed in a register, stack space is still\n    allocated for it.  For the MIPS, stack space must be allocated, cf\n@@ -1645,7 +1651,7 @@ extern struct mips_frame_info current_frame_info;\n    in register. In case an argument list is of form GF used registers\n    are a0 (a2,a3), but we should push over a1...  */\n \n-#define REG_PARM_STACK_SPACE(FNDECL) (4*4)\n+#define REG_PARM_STACK_SPACE(FNDECL) (4*UNITS_PER_WORD) - FIRST_PARM_OFFSET(FNDECL)\n \n /* Define this if it is the responsibility of the caller to\n    allocate the area reserved for arguments passed in registers. "}]}