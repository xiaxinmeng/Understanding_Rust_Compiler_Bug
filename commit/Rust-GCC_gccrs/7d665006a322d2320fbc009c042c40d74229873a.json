{"sha": "7d665006a322d2320fbc009c042c40d74229873a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6N2Q2NjUwMDZhMzIyZDIzMjBmYmMwMDljMDQyYzQwZDc0MjI5ODczYQ==", "commit": {"author": {"name": "Geoffrey Keating", "email": "geoffk@apple.com", "date": "2005-01-28T18:57:59Z"}, "committer": {"name": "Geoffrey Keating", "email": "geoffk@gcc.gnu.org", "date": "2005-01-28T18:57:59Z"}, "message": "libstdc++.exp (libstdc++_init): Search the path for the compiler.\n\n\t* testsuite/lib/libstdc++.exp (libstdc++_init): Search the path\n\tfor the compiler.  Don't set cxxflags.\n\t(v3_target_compile): Search for libv3test.a relative to $objdir.\n\t(lsearch_all_inline): New.\n\t(lsearch_all_inline_not): New.\n\t(v3-list-tests): Rewrite to not need generated files.\n\t* testsuite/Makefile.am (IGNORE_WCHAR_T): New.\n\t(IGNORE_THREAD): New.\n\t(TESTS_TO_IGNORE): New.\n\t(site.exp): Set tests_to_ignore, cxxflags.\n\t* aclocal.m4: Regenerate.\n\t* Makefile.in: Regenerate.\n\t* libmath/Makefile.in: Likewise.\n\t* libsupc++/Makefile.in: Likewise.\n\t* po/Makefile.in: Likewise.\n\t* src/Makefile.in: Likewise.\n\t* testsuite/Makefile.in: Likewise.\n\nFrom-SVN: r94384", "tree": {"sha": "7c5cecdd6226df6c1b6170e6d00a6e91bd6a502b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7c5cecdd6226df6c1b6170e6d00a6e91bd6a502b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7d665006a322d2320fbc009c042c40d74229873a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7d665006a322d2320fbc009c042c40d74229873a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7d665006a322d2320fbc009c042c40d74229873a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7d665006a322d2320fbc009c042c40d74229873a/comments", "author": {"login": "geoffk01", "id": 31905243, "node_id": "MDQ6VXNlcjMxOTA1MjQz", "avatar_url": "https://avatars.githubusercontent.com/u/31905243?v=4", "gravatar_id": "", "url": "https://api.github.com/users/geoffk01", "html_url": "https://github.com/geoffk01", "followers_url": "https://api.github.com/users/geoffk01/followers", "following_url": "https://api.github.com/users/geoffk01/following{/other_user}", "gists_url": "https://api.github.com/users/geoffk01/gists{/gist_id}", "starred_url": "https://api.github.com/users/geoffk01/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/geoffk01/subscriptions", "organizations_url": "https://api.github.com/users/geoffk01/orgs", "repos_url": "https://api.github.com/users/geoffk01/repos", "events_url": "https://api.github.com/users/geoffk01/events{/privacy}", "received_events_url": "https://api.github.com/users/geoffk01/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "82dfb9a58fa7f797c1a9e49708fe9ed273ba4f70", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/82dfb9a58fa7f797c1a9e49708fe9ed273ba4f70", "html_url": "https://github.com/Rust-GCC/gccrs/commit/82dfb9a58fa7f797c1a9e49708fe9ed273ba4f70"}], "stats": {"total": 152, "additions": 101, "deletions": 51}, "files": [{"sha": "e823fd872a18e89dd49cd637f8cf754338a0cd32", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7d665006a322d2320fbc009c042c40d74229873a/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7d665006a322d2320fbc009c042c40d74229873a/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=7d665006a322d2320fbc009c042c40d74229873a", "patch": "@@ -1,3 +1,23 @@\n+2005-01-28  Geoffrey Keating  <geoffk@apple.com>\n+\n+\t* testsuite/lib/libstdc++.exp (libstdc++_init): Search the path\n+\tfor the compiler.  Don't set cxxflags.\n+\t(v3_target_compile): Search for libv3test.a relative to $objdir.\n+\t(lsearch_all_inline): New.\n+\t(lsearch_all_inline_not): New.\n+\t(v3-list-tests): Rewrite to not need generated files.\n+\t* testsuite/Makefile.am (IGNORE_WCHAR_T): New.\n+\t(IGNORE_THREAD): New.\n+\t(TESTS_TO_IGNORE): New.\n+\t(site.exp): Set tests_to_ignore, cxxflags.\n+\t* aclocal.m4: Regenerate.\n+\t* Makefile.in: Regenerate.\n+\t* libmath/Makefile.in: Likewise.\n+\t* libsupc++/Makefile.in: Likewise.\n+\t* po/Makefile.in: Likewise.\n+\t* src/Makefile.in: Likewise.\n+\t* testsuite/Makefile.in: Likewise.\n+\n 2005-01-28  Paolo Carlini  <pcarlini@suse.de>\n \n \t* include/tr1/type_traits: Implement is_empty."}, {"sha": "b6903d3b06d932c9b83e47c2bc3df397d05e039f", "filename": "libstdc++-v3/Makefile.in", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7d665006a322d2320fbc009c042c40d74229873a/libstdc%2B%2B-v3%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7d665006a322d2320fbc009c042c40d74229873a/libstdc%2B%2B-v3%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FMakefile.in?ref=7d665006a322d2320fbc009c042c40d74229873a", "patch": "@@ -1,4 +1,4 @@\n-# Makefile.in generated by automake 1.9.3 from Makefile.am.\n+# Makefile.in generated by automake 1.9.4 from Makefile.am.\n # @configure_input@\n \n # Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,"}, {"sha": "b67612a625777c82e949296fcdd0391a3c642108", "filename": "libstdc++-v3/aclocal.m4", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7d665006a322d2320fbc009c042c40d74229873a/libstdc%2B%2B-v3%2Faclocal.m4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7d665006a322d2320fbc009c042c40d74229873a/libstdc%2B%2B-v3%2Faclocal.m4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Faclocal.m4?ref=7d665006a322d2320fbc009c042c40d74229873a", "patch": "@@ -1,4 +1,4 @@\n-# generated automatically by aclocal 1.9.3 -*- Autoconf -*-\n+# generated automatically by aclocal 1.9.4 -*- Autoconf -*-\n \n # Copyright (C) 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004\n # Free Software Foundation, Inc.\n@@ -40,7 +40,7 @@ AC_DEFUN([AM_AUTOMAKE_VERSION], [am__api_version=\"1.9\"])\n # Call AM_AUTOMAKE_VERSION so it can be traced.\n # This function is AC_REQUIREd by AC_INIT_AUTOMAKE.\n AC_DEFUN([AM_SET_CURRENT_AUTOMAKE_VERSION],\n-\t [AM_AUTOMAKE_VERSION([1.9.3])])\n+\t [AM_AUTOMAKE_VERSION([1.9.4])])\n \n # AM_AUX_DIR_EXPAND\n "}, {"sha": "8a67dcb3104b84a35e96fe15840ebdd7534fe05b", "filename": "libstdc++-v3/include/Makefile.in", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7d665006a322d2320fbc009c042c40d74229873a/libstdc%2B%2B-v3%2Finclude%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7d665006a322d2320fbc009c042c40d74229873a/libstdc%2B%2B-v3%2Finclude%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2FMakefile.in?ref=7d665006a322d2320fbc009c042c40d74229873a", "patch": "@@ -1,4 +1,4 @@\n-# Makefile.in generated by automake 1.9.3 from Makefile.am.\n+# Makefile.in generated by automake 1.9.4 from Makefile.am.\n # @configure_input@\n \n # Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,"}, {"sha": "8c00c66301c94dc09499e716ade8ff23dd2fb45e", "filename": "libstdc++-v3/libmath/Makefile.in", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7d665006a322d2320fbc009c042c40d74229873a/libstdc%2B%2B-v3%2Flibmath%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7d665006a322d2320fbc009c042c40d74229873a/libstdc%2B%2B-v3%2Flibmath%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Flibmath%2FMakefile.in?ref=7d665006a322d2320fbc009c042c40d74229873a", "patch": "@@ -1,4 +1,4 @@\n-# Makefile.in generated by automake 1.9.3 from Makefile.am.\n+# Makefile.in generated by automake 1.9.4 from Makefile.am.\n # @configure_input@\n \n # Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,"}, {"sha": "2a98d68fb93129e978dc0187884956f0af84e7a7", "filename": "libstdc++-v3/libsupc++/Makefile.in", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7d665006a322d2320fbc009c042c40d74229873a/libstdc%2B%2B-v3%2Flibsupc%2B%2B%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7d665006a322d2320fbc009c042c40d74229873a/libstdc%2B%2B-v3%2Flibsupc%2B%2B%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Flibsupc%2B%2B%2FMakefile.in?ref=7d665006a322d2320fbc009c042c40d74229873a", "patch": "@@ -1,4 +1,4 @@\n-# Makefile.in generated by automake 1.9.3 from Makefile.am.\n+# Makefile.in generated by automake 1.9.4 from Makefile.am.\n # @configure_input@\n \n # Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,"}, {"sha": "cc9b4dbdf20080a01395ef4e9dbcb05a2752dc1d", "filename": "libstdc++-v3/po/Makefile.in", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7d665006a322d2320fbc009c042c40d74229873a/libstdc%2B%2B-v3%2Fpo%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7d665006a322d2320fbc009c042c40d74229873a/libstdc%2B%2B-v3%2Fpo%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fpo%2FMakefile.in?ref=7d665006a322d2320fbc009c042c40d74229873a", "patch": "@@ -1,4 +1,4 @@\n-# Makefile.in generated by automake 1.9.3 from Makefile.am.\n+# Makefile.in generated by automake 1.9.4 from Makefile.am.\n # @configure_input@\n \n # Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,"}, {"sha": "a5b670dced483105c8b1352fe532fb70af900058", "filename": "libstdc++-v3/src/Makefile.in", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7d665006a322d2320fbc009c042c40d74229873a/libstdc%2B%2B-v3%2Fsrc%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7d665006a322d2320fbc009c042c40d74229873a/libstdc%2B%2B-v3%2Fsrc%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fsrc%2FMakefile.in?ref=7d665006a322d2320fbc009c042c40d74229873a", "patch": "@@ -1,4 +1,4 @@\n-# Makefile.in generated by automake 1.9.3 from Makefile.am.\n+# Makefile.in generated by automake 1.9.4 from Makefile.am.\n # @configure_input@\n \n # Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,"}, {"sha": "436f0bbad79becc4c0d5e79e697596a36e2066e7", "filename": "libstdc++-v3/testsuite/Makefile.am", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7d665006a322d2320fbc009c042c40d74229873a/libstdc%2B%2B-v3%2Ftestsuite%2FMakefile.am", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7d665006a322d2320fbc009c042c40d74229873a/libstdc%2B%2B-v3%2Ftestsuite%2FMakefile.am", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2FMakefile.am?ref=7d665006a322d2320fbc009c042c40d74229873a", "patch": "@@ -62,17 +62,21 @@ all-local: stamp_wchar stamp_thread testsuite_files\n \n # Enable wchar_t tests if capable.\n if GLIBCXX_TEST_WCHAR_T\n+IGNORE_WCHAR_T = \n stamp_wchar:\n \ttouch testsuite_wchar_t\n else\n+IGNORE_WCHAR_T = *wchar_t*\n stamp_wchar:\n endif\n \n # Enable thread tests if capable.\n if GLIBCXX_TEST_THREAD\n+IGNORE_THREAD = \n stamp_thread:\n \ttouch testsuite_thread\n else\n+IGNORE_THREAD = *thread*\n stamp_thread:\n endif\n \n@@ -83,6 +87,7 @@ lists_of_files = \\\n    testsuite_files_interactive \\\n    testsuite_files_performance\n \n+TESTS_TO_IGNORE = $(IGNORE_WCHAR_T) $(IGNORE_THREAD)\n \n # We need more things in site.exp, but automake completely controls the\n # creation of that file; there's no way to append to it without messing up\n@@ -103,6 +108,8 @@ site.exp: Makefile\n \t@echo 'set target_triplet $(target_triplet)' >>site.tmp\n \t@echo 'set target_triplet $(target_triplet)' >>site.tmp\n \t@echo 'set libiconv \"$(LIBICONV)\"' >>site.tmp\n+\t@echo 'set tests_to_ignore [list $(TESTS_TO_IGNORE)]' >> site.tmp\n+\t@echo 'set cxxflags { $(AM_CXXFLAGS) }' >> site.tmp\n \t@echo '## All variables above are generated by configure. Do Not Edit ##' >>site.tmp\n \t@test ! -f site.exp || \\\n \t  sed '1,/^## All variables above are.*##/ d' site.exp >> site.tmp"}, {"sha": "96c4563ec3828f43266f7533419bd81785231148", "filename": "libstdc++-v3/testsuite/Makefile.in", "status": "modified", "additions": 12, "deletions": 5, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7d665006a322d2320fbc009c042c40d74229873a/libstdc%2B%2B-v3%2Ftestsuite%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7d665006a322d2320fbc009c042c40d74229873a/libstdc%2B%2B-v3%2Ftestsuite%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2FMakefile.in?ref=7d665006a322d2320fbc009c042c40d74229873a", "patch": "@@ -1,4 +1,4 @@\n-# Makefile.in generated by automake 1.9.3 from Makefile.am.\n+# Makefile.in generated by automake 1.9.4 from Makefile.am.\n # @configure_input@\n \n # Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,\n@@ -286,6 +286,14 @@ libv3test_a_SOURCES = \\\n \n abi_check_SOURCES = abi_check.cc\n abi_check_DEPENDENCIES = libv3test.a\n+@GLIBCXX_TEST_WCHAR_T_FALSE@IGNORE_WCHAR_T = *wchar_t*\n+\n+# Enable wchar_t tests if capable.\n+@GLIBCXX_TEST_WCHAR_T_TRUE@IGNORE_WCHAR_T = \n+@GLIBCXX_TEST_THREAD_FALSE@IGNORE_THREAD = *thread*\n+\n+# Enable thread tests if capable.\n+@GLIBCXX_TEST_THREAD_TRUE@IGNORE_THREAD = \n \n # Generated lists of files to run.  All of these names are valid make\n # targets, if you wish to generate a list manually.\n@@ -294,6 +302,7 @@ lists_of_files = \\\n    testsuite_files_interactive \\\n    testsuite_files_performance\n \n+TESTS_TO_IGNORE = $(IGNORE_WCHAR_T) $(IGNORE_THREAD)\n baseline_file = ${baseline_dir}/baseline_symbols.txt\n extract_symvers = $(glibcxx_srcdir)/scripts/extract_symvers\n \n@@ -581,13 +590,9 @@ uninstall-am: uninstall-info-am\n \n \n all-local: stamp_wchar stamp_thread testsuite_files\n-\n-# Enable wchar_t tests if capable.\n @GLIBCXX_TEST_WCHAR_T_TRUE@stamp_wchar:\n @GLIBCXX_TEST_WCHAR_T_TRUE@\ttouch testsuite_wchar_t\n @GLIBCXX_TEST_WCHAR_T_FALSE@stamp_wchar:\n-\n-# Enable thread tests if capable.\n @GLIBCXX_TEST_THREAD_TRUE@stamp_thread:\n @GLIBCXX_TEST_THREAD_TRUE@\ttouch testsuite_thread\n @GLIBCXX_TEST_THREAD_FALSE@stamp_thread:\n@@ -611,6 +616,8 @@ site.exp: Makefile\n \t@echo 'set target_triplet $(target_triplet)' >>site.tmp\n \t@echo 'set target_triplet $(target_triplet)' >>site.tmp\n \t@echo 'set libiconv \"$(LIBICONV)\"' >>site.tmp\n+\t@echo 'set tests_to_ignore [list $(TESTS_TO_IGNORE)]' >> site.tmp\n+\t@echo 'set cxxflags { $(AM_CXXFLAGS) }' >> site.tmp\n \t@echo '## All variables above are generated by configure. Do Not Edit ##' >>site.tmp\n \t@test ! -f site.exp || \\\n \t  sed '1,/^## All variables above are.*##/ d' site.exp >> site.tmp"}, {"sha": "d187595ec48a752fb65a61aa7afdcc22c91e1851", "filename": "libstdc++-v3/testsuite/lib/libstdc++.exp", "status": "modified", "additions": 54, "deletions": 38, "changes": 92, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7d665006a322d2320fbc009c042c40d74229873a/libstdc%2B%2B-v3%2Ftestsuite%2Flib%2Flibstdc%2B%2B.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7d665006a322d2320fbc009c042c40d74229873a/libstdc%2B%2B-v3%2Ftestsuite%2Flib%2Flibstdc%2B%2B.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Flib%2Flibstdc%2B%2B.exp?ref=7d665006a322d2320fbc009c042c40d74229873a", "patch": "@@ -79,7 +79,7 @@ proc v3-copy-files {srcfiles} {\n proc libstdc++_init { testfile } {\n     global env\n     global srcdir blddir objdir tool_root_dir\n-    global cxx cxxflags\n+    global cxx\n     global includes\n     global gluefile wrap_flags\n     global ld_library_path\n@@ -137,17 +137,17 @@ proc libstdc++_init { testfile } {\n     append ld_library_path \":${gccdir}\"\n     set compiler ${gccdir}/g++\n     if { [is_remote host] == 0 && [which $compiler] != 0 } {\n-      foreach i \"[exec $compiler --print-multi-lib]\" {\n-        set mldir \"\"\n-        regexp -- \"\\[a-z0-9=/\\.-\\]*;\" $i mldir\n-        set mldir [string trimright $mldir \"\\;@\"]\n-        if { \"$mldir\" == \".\" } {\n-          continue\n-        }\n-        if { [llength [glob -nocomplain ${gccdir}/${mldir}/libgcc_s*.so.*]] >= 1 } {\n-          append ld_library_path \":${gccdir}/${mldir}\"\n-        }\n-      }\n+\tforeach i \"[exec [which $compiler] --print-multi-lib]\" {\n+\t    set mldir \"\"\n+\t    regexp -- \"\\[a-z0-9=/\\.-\\]*;\" $i mldir\n+\t    set mldir [string trimright $mldir \"\\;@\"]\n+\t    if { \"$mldir\" == \".\" } {\n+\t\tcontinue\n+\t    }\n+\t    if { [llength [glob -nocomplain ${gccdir}/${mldir}/libgcc_s*.so.*]] >= 1 } {\n+\t\tappend ld_library_path \":${gccdir}/${mldir}\"\n+\t    }\n+\t}\n     }\n     append ld_library_path \":${blddir}/src/.libs\"\n \n@@ -165,17 +165,14 @@ proc libstdc++_init { testfile } {\n             return \"untested\"\n         }\n       set cxx [transform \"g++\"]\n-      set cxxflags \"-ggdb3\"\n       set includes \"-I./\"\n     } else {\n         # If we find a testsuite_flags file, we're testing in the build dir.\n         if { [file exists $flags_file] } {\n             set cxx [exec sh $flags_file --build-cxx]\n-            set cxxflags [exec sh $flags_file --cxxflags]\n             set includes [exec sh $flags_file --build-includes]\n         } else {\n             set cxx [transform \"g++\"]\n-            set cxxflags \"-ggdb3\"\n             set includes \"-I${srcdir}\"\n         }\n     }\n@@ -249,7 +246,7 @@ proc v3_target_compile { source dest type options } {\n     global cxx\n     global cxxflags\n     global includes\n-    global blddir\n+    global objdir\n \n     if { [target_info needs_status_wrapper] != \"\" && [info exists gluefile] } {\n         lappend options \"libs=${gluefile}\"\n@@ -266,37 +263,56 @@ proc v3_target_compile { source dest type options } {\n \n     # Picks up the freshly-built testsuite library corresponding to the\n     # multilib under test.\n-    lappend options \"ldflags=-L${blddir}/testsuite\"\n+    lappend options \"ldflags=-L${objdir}\"\n     lappend options \"libs=-lv3test\"\n \n     return [target_compile $source $dest $type $options]\n }\n \n \n+# This is the equivalent of the Tcl 8.4 \"lsearch -all -inline\" except\n+# slower\n+proc lsearch_all_inline {listData pattern} {\n+    set result [list]\n+    foreach item $listData {\n+        if {[string match $pattern $item]} {\n+            lappend result $item\n+        }\n+    }\n+    return $result\n+}\n+\n+# This is the equivalent of the Tcl 8.4 \"lsearch -all -inline -not\"\n+# except slower\n+proc lsearch_all_inline_not {listData pattern} {\n+    set result [list]\n+    foreach item $listData {\n+        if {! [string match $pattern $item]} {\n+            lappend result $item\n+        }\n+    }\n+    return $result\n+}\n+\n # Called once, from libstdc++/normal.exp.\n proc v3-list-tests { filename } {\n-    global srcdir\n-    global blddir\n-\n-    set tests_file \"${blddir}/testsuite/${filename}\"\n-    set sfiles \"\"\n-\n-    verbose -log \"In v3-list-tests\"\n-    verbose -log \"blddir = ${blddir}\"\n-    verbose -log \"tests_file = $tests_file\"\n-\n-    # If there is a testsuite_file, use it. \n-    if { [file exists $tests_file] } {\n-        set f [open $tests_file]\n-        while { ! [eof $f] } {\n-            set t [gets $f]\n-            if { [string length \"$t\"] != 0 } {\n-                lappend sfiles  ${srcdir}/${t}\n-            }\n-        } \n-        close $f\n+    global srcdir tests_to_ignore\n+\n+    set sfiles [lsort [ find $srcdir \"*.cc\"] ]\n+    set sfiles [ lsearch_all_inline $sfiles \"$srcdir/*/*.cc\" ]\n+    foreach pattern $tests_to_ignore {\n+\tset sfiles [ lsearch_all_inline_not $sfiles $pattern ]\n+    }\n+    if { $filename == \"testsuite_files\" } {\n+\tset sfiles [ lsearch_all_inline_not $sfiles *_xin* ]\n+\tset sfiles [ lsearch_all_inline_not $sfiles *performance* ]\n+    } elseif { $filename == \"testsuite_files_interactive\" } {\n+\tset sfiles [ lsearch_all_inline $sfiles *_xin* ]\n+    } elseif { $filename == \"testsuite_files_performance\" } {\n+\tset sfiles [ lsearch_all_inline $sfiles *performance* ]\n     } else {\n-        verbose \"cannot open $tests_file\"\n+        verbose \"cannot compute list of tests named $filename\"\n+\tset sfiles [list]\n     }\n     return $sfiles\n }"}]}