{"sha": "f4a1dd0dc725bf8baf3027afeca750642cb31ee1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjRhMWRkMGRjNzI1YmY4YmFmMzAyN2FmZWNhNzUwNjQyY2IzMWVlMQ==", "commit": {"author": {"name": "Zuxy Meng", "email": "zuxy.meng@gmail.com", "date": "2008-04-04T07:39:12Z"}, "committer": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2008-04-04T07:39:12Z"}, "message": "driver-i386.c (describe_cache): Add l2_sizekb argument.\n\n\t* config/i386/driver-i386.c (describe_cache): Add l2_sizekb argument.\n\tPass L2 size as \"--param l2-cache-size\" to the compiler.\n\t(decode_l2_cache): New function to decode L2 cache parameters using\n\t0x8000006 extended cpuid function.\n\t(detect_caches_amd): Determine parameters of L2 cache using\n\tdecode_l2_caches function.\n\t(decode_caches_intel): Decode L2 cache parameters.\n\t(detect_caches_intel): Determine L2 cache parameters using\n\tdecode_caches_intel and decode_l2_caches functions.\n\nFrom-SVN: r133890", "tree": {"sha": "8a6707546e182b6c07cb0346d498ea12863279c4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8a6707546e182b6c07cb0346d498ea12863279c4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f4a1dd0dc725bf8baf3027afeca750642cb31ee1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f4a1dd0dc725bf8baf3027afeca750642cb31ee1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f4a1dd0dc725bf8baf3027afeca750642cb31ee1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f4a1dd0dc725bf8baf3027afeca750642cb31ee1/comments", "author": {"login": "zuxy", "id": 3745922, "node_id": "MDQ6VXNlcjM3NDU5MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/3745922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zuxy", "html_url": "https://github.com/zuxy", "followers_url": "https://api.github.com/users/zuxy/followers", "following_url": "https://api.github.com/users/zuxy/following{/other_user}", "gists_url": "https://api.github.com/users/zuxy/gists{/gist_id}", "starred_url": "https://api.github.com/users/zuxy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zuxy/subscriptions", "organizations_url": "https://api.github.com/users/zuxy/orgs", "repos_url": "https://api.github.com/users/zuxy/repos", "events_url": "https://api.github.com/users/zuxy/events{/privacy}", "received_events_url": "https://api.github.com/users/zuxy/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "3ee909cb673969faac7dad765a85df6122a79a78", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3ee909cb673969faac7dad765a85df6122a79a78", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3ee909cb673969faac7dad765a85df6122a79a78"}], "stats": {"total": 202, "additions": 188, "deletions": 14}, "files": [{"sha": "edda2659b287bebec69694fb4bf3cbc2840c39e5", "filename": "gcc/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f4a1dd0dc725bf8baf3027afeca750642cb31ee1/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f4a1dd0dc725bf8baf3027afeca750642cb31ee1/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=f4a1dd0dc725bf8baf3027afeca750642cb31ee1", "patch": "@@ -1,3 +1,15 @@\n+2008-04-04  Zuxy Meng <zuxy.meng@gmail.com>\n+\n+\t* config/i386/driver-i386.c (describe_cache): Add l2_sizekb argument.\n+\tPass L2 size as \"--param l2-cache-size\" to the compiler.\n+\t(decode_l2_cache): New function to decode L2 cache parameters using\n+\t0x8000006 extended cpuid function.\n+\t(detect_caches_amd): Determine parameters of L2 cache using\n+\tdecode_l2_caches function.\n+\t(decode_caches_intel): Decode L2 cache parameters.\n+\t(detect_caches_intel): Determine L2 cache parameters using\n+\tdecode_caches_intel and decode_l2_caches functions.\n+\n 2008-04-03  Bob Wilson  <bob.wilson@acm.org>\n \n \t* config/xtensa/xtensa.c (xtensa_secondary_reload_class): Use a"}, {"sha": "b823d435c6d59513706b366d1a1fb5e658e2e8d5", "filename": "gcc/config/i386/driver-i386.c", "status": "modified", "additions": 176, "deletions": 14, "changes": 190, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f4a1dd0dc725bf8baf3027afeca750642cb31ee1/gcc%2Fconfig%2Fi386%2Fdriver-i386.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f4a1dd0dc725bf8baf3027afeca750642cb31ee1/gcc%2Fconfig%2Fi386%2Fdriver-i386.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fdriver-i386.c?ref=f4a1dd0dc725bf8baf3027afeca750642cb31ee1", "patch": "@@ -33,17 +33,39 @@ const char *host_detect_local_cpu (int argc, const char **argv);\n \n static char *\n describe_cache (unsigned l1_sizekb, unsigned l1_line,\n-\t\tunsigned l1_assoc ATTRIBUTE_UNUSED)\n+\t\tunsigned l1_assoc ATTRIBUTE_UNUSED, unsigned l2_sizekb)\n {\n-  char size[100], line[100];\n+  char size[100], line[100], size2[100];\n \n   /* At the moment, gcc middle-end does not use the information about the\n      associativity of the cache.  */\n \n   sprintf (size, \"--param l1-cache-size=%u\", l1_sizekb);\n   sprintf (line, \"--param l1-cache-line-size=%u\", l1_line);\n+  sprintf (size2, \"--param l2-cache-size=%u\", l2_sizekb);\n \n-  return concat (size, \" \", line, \" \", NULL);\n+  return concat (size, \" \", line, \" \", size2, \" \", NULL);\n+}\n+\n+static void\n+decode_l2_cache (unsigned *l2_size, unsigned *l2_line, unsigned *l2_assoc)\n+{\n+  unsigned eax, ebx, ecx, edx, assoc;\n+\n+  __cpuid (0x80000006, eax, ebx, ecx, edx);\n+\n+  *l2_size = (ecx >> 16) & 0xffff;\n+  *l2_line = ecx & 0xff;\n+  assoc = (ecx >> 12) & 0xf;\n+  if (assoc == 6)\n+    assoc = 8;\n+  else if (assoc == 8)\n+    assoc = 16;\n+  else if (assoc >= 0xa && assoc <= 0xc)\n+    assoc = 32 + (assoc - 0xa) * 16;\n+  else if (assoc >= 0xd && assoc <= 0xe)\n+    assoc = 96 + (assoc - 0xd) * 32;\n+  *l2_assoc = assoc;\n }\n \n /* Returns the description of caches for an AMD processor.  */\n@@ -53,6 +75,7 @@ detect_caches_amd (unsigned max_ext_level)\n {\n   unsigned eax, ebx, ecx, edx;\n   unsigned l1_sizekb, l1_line, l1_assoc;\n+  unsigned l2_sizekb, l2_line, l2_assoc;\n \n   if (max_ext_level < 0x80000005)\n     return (char *) \"\";\n@@ -63,15 +86,20 @@ detect_caches_amd (unsigned max_ext_level)\n   l1_sizekb = (ecx >> 24) & 0xff;\n   l1_assoc = (ecx >> 16) & 0xff;\n \n-  return describe_cache (l1_sizekb, l1_line, l1_assoc);\n+  if (max_ext_level >= 0x80000006)\n+    decode_l2_cache (&l2_sizekb, &l2_line, &l2_assoc);\n+\n+  return describe_cache (l1_sizekb, l1_line, l1_assoc, l2_sizekb);\n }\n \n-/* Stores the size of the L1 cache and cache line, and the associativity\n-   of the cache according to REG to L1_SIZEKB, L1_LINE and L1_ASSOC.  */\n+/* Stores the size of the L1/2 cache and cache line, and the associativity\n+   of the cache according to REG to L1_SIZEKB, L1_LINE, L1_ASSOC and\n+   L2_SIZEKB. */\n \n static void\n decode_caches_intel (unsigned reg, unsigned *l1_sizekb, unsigned *l1_line,\n-\t\t     unsigned *l1_assoc)\n+\t\t     unsigned *l1_assoc, unsigned *l2_sizekb,\n+\t\t     unsigned *l2_line, unsigned *l2_assoc)\n {\n   unsigned i, val;\n \n@@ -100,6 +128,66 @@ decode_caches_intel (unsigned reg, unsigned *l1_sizekb, unsigned *l1_line,\n \t  *l1_line = 64;\n \t  *l1_assoc = 8;\n \t  break;\n+\tcase 0x39:\n+\t  *l2_sizekb = 128;\n+\t  *l2_line = 64;\n+\t  *l2_assoc = 4;\n+\t  break;\n+\tcase 0x3a:\n+\t  *l2_sizekb = 192;\n+\t  *l2_line = 64;\n+\t  *l2_assoc = 6;\n+\t  break;\n+\tcase 0x3b:\n+\t  *l2_sizekb = 128;\n+\t  *l2_line = 64;\n+\t  *l2_assoc = 2;\n+\t  break;\n+\tcase 0x3c:\n+\t  *l2_sizekb = 256;\n+\t  *l2_line = 64;\n+\t  *l2_assoc = 4;\n+\t  break;\n+\tcase 0x3d:\n+\t  *l2_sizekb = 384;\n+\t  *l2_line = 64;\n+\t  *l2_assoc = 6;\n+\t  break;\n+\tcase 0x3e:\n+\t  *l2_sizekb = 512;\n+\t  *l2_line = 64;\n+\t  *l2_assoc = 4;\n+\t  break;\n+\tcase 0x41:\n+\t  *l2_sizekb = 128;\n+\t  *l2_line = 32;\n+\t  *l2_assoc = 4;\n+\t  break;\n+\tcase 0x42:\n+\t  *l2_sizekb = 256;\n+\t  *l2_line = 32;\n+\t  *l2_assoc = 4;\n+\t  break;\n+\tcase 0x43:\n+\t  *l2_sizekb = 512;\n+\t  *l2_line = 32;\n+\t  *l2_assoc = 4;\n+\t  break;\n+\tcase 0x44:\n+\t  *l2_sizekb = 1024;\n+\t  *l2_line = 32;\n+\t  *l2_assoc = 4;\n+\t  break;\n+\tcase 0x45:\n+\t  *l2_sizekb = 2048;\n+\t  *l2_line = 32;\n+\t  *l2_assoc = 4;\n+\t  break;\n+\tcase 0x49:\n+\t  *l2_sizekb = 4096;\n+\t  *l2_line = 64;\n+\t  *l2_assoc = 16;\n+\t  break;\n \tcase 0x60:\n \t  *l1_sizekb = 16;\n \t  *l1_line = 64;\n@@ -120,6 +208,71 @@ decode_caches_intel (unsigned reg, unsigned *l1_sizekb, unsigned *l1_line,\n \t  *l1_line = 64;\n \t  *l1_assoc = 4;\n \t  break;\n+\tcase 0x78:\n+\t  *l2_sizekb = 1024;\n+\t  *l2_line = 64;\n+\t  *l2_assoc = 4;\n+\t  break;\n+\tcase 0x79:\n+\t  *l2_sizekb = 128;\n+\t  *l2_line = 64;\n+\t  *l2_assoc = 8;\n+\t  break;\n+\tcase 0x7a:\n+\t  *l2_sizekb = 256;\n+\t  *l2_line = 64;\n+\t  *l2_assoc = 8;\n+\t  break;\n+\tcase 0x7b:\n+\t  *l2_sizekb = 512;\n+\t  *l2_line = 64;\n+\t  *l2_assoc = 8;\n+\t  break;\n+\tcase 0x7c:\n+\t  *l2_sizekb = 1024;\n+\t  *l2_line = 64;\n+\t  *l2_assoc = 8;\n+\t  break;\n+\tcase 0x7d:\n+\t  *l2_sizekb = 2048;\n+\t  *l2_line = 64;\n+\t  *l2_assoc = 8;\n+\t  break;\n+\tcase 0x7f:\n+\t  *l2_sizekb = 512;\n+\t  *l2_line = 64;\n+\t  *l2_assoc = 2;\n+\t  break;\n+\tcase 0x82:\n+\t  *l2_sizekb = 256;\n+\t  *l2_line = 32;\n+\t  *l2_assoc = 8;\n+\t  break;\n+\tcase 0x83:\n+\t  *l2_sizekb = 512;\n+\t  *l2_line = 32;\n+\t  *l2_assoc = 8;\n+\t  break;\n+\tcase 0x84:\n+\t  *l2_sizekb = 1024;\n+\t  *l2_line = 32;\n+\t  *l2_assoc = 8;\n+\t  break;\n+\tcase 0x85:\n+\t  *l2_sizekb = 2048;\n+\t  *l2_line = 32;\n+\t  *l2_assoc = 8;\n+\t  break;\n+\tcase 0x86:\n+\t  *l2_sizekb = 512;\n+\t  *l2_line = 64;\n+\t  *l2_assoc = 4;\n+\t  break;\n+\tcase 0x87:\n+\t  *l2_sizekb = 1024;\n+\t  *l2_line = 64;\n+\t  *l2_assoc = 8;\n+\t  break;\n \n \tdefault:\n \t  break;\n@@ -130,25 +283,34 @@ decode_caches_intel (unsigned reg, unsigned *l1_sizekb, unsigned *l1_line,\n /* Returns the description of caches for an intel processor.  */\n \n static char *\n-detect_caches_intel (unsigned max_level)\n+detect_caches_intel (unsigned max_level, unsigned max_ext_level)\n {\n   unsigned eax, ebx, ecx, edx;\n   unsigned l1_sizekb = 0, l1_line = 0, assoc = 0;\n+  unsigned l2_sizekb = 0, l2_line = 0, l2_assoc = 0;\n \n   if (max_level < 2)\n     return (char *) \"\";\n \n   __cpuid (2, eax, ebx, ecx, edx);\n \n-  decode_caches_intel (eax, &l1_sizekb, &l1_line, &assoc);\n-  decode_caches_intel (ebx, &l1_sizekb, &l1_line, &assoc);\n-  decode_caches_intel (ecx, &l1_sizekb, &l1_line, &assoc);\n-  decode_caches_intel (edx, &l1_sizekb, &l1_line, &assoc);\n+  decode_caches_intel (eax, &l1_sizekb, &l1_line, &assoc,\n+      &l2_sizekb, &l2_line, &l2_assoc);\n+  decode_caches_intel (ebx, &l1_sizekb, &l1_line, &assoc,\n+      &l2_sizekb, &l2_line, &l2_assoc);\n+  decode_caches_intel (ecx, &l1_sizekb, &l1_line, &assoc,\n+      &l2_sizekb, &l2_line, &l2_assoc);\n+  decode_caches_intel (edx, &l1_sizekb, &l1_line, &assoc,\n+      &l2_sizekb, &l2_line, &l2_assoc);\n \n   if (!l1_sizekb)\n     return (char *) \"\";\n \n-  return describe_cache (l1_sizekb, l1_line, assoc);\n+  /* Newer Intel CPUs are equipped with AMD style L2 cache info */\n+  if (max_ext_level >= 0x80000006)\n+    decode_l2_cache (&l2_sizekb, &l2_line, &l2_assoc);\n+\n+  return describe_cache (l1_sizekb, l1_line, assoc, l2_sizekb);\n }\n \n /* This will be called by the spec parser in gcc.c when it sees\n@@ -234,7 +396,7 @@ const char *host_detect_local_cpu (int argc, const char **argv)\n       if (vendor == *(unsigned int*) \"Auth\")\n \tcache = detect_caches_amd (ext_level);\n       else if (vendor == *(unsigned int*) \"Genu\")\n-\tcache = detect_caches_intel (max_level);\n+\tcache = detect_caches_intel (max_level, ext_level);\n     }\n \n   if (vendor == *(unsigned int*) \"Auth\")"}]}