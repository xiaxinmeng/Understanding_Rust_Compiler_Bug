{"sha": "0333394edfb117c6a3b599dcc9c20ae872a2b0be", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDMzMzM5NGVkZmIxMTdjNmEzYjU5OWRjYzljMjBhZTg3MmEyYjBiZQ==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2002-01-21T15:53:31Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2002-01-21T15:53:31Z"}, "message": "i386.c (ix86_function_arg_regno_p): Never return true for 64-bit mode only SSE registers in 32-bit mode.\n\n\t* config/i386/i386.c (ix86_function_arg_regno_p): Never return\n\ttrue for 64-bit mode only SSE registers in 32-bit mode.\n\n\t* gcc.dg/20020218-1.c: New test.\n\nFrom-SVN: r49046", "tree": {"sha": "b5b862995df2efeb1772947bacfcb44a7e1ae43a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b5b862995df2efeb1772947bacfcb44a7e1ae43a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0333394edfb117c6a3b599dcc9c20ae872a2b0be", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0333394edfb117c6a3b599dcc9c20ae872a2b0be", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0333394edfb117c6a3b599dcc9c20ae872a2b0be", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0333394edfb117c6a3b599dcc9c20ae872a2b0be/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "e9d1b155fc792949cbee6234b4628340f923fd3b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e9d1b155fc792949cbee6234b4628340f923fd3b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e9d1b155fc792949cbee6234b4628340f923fd3b"}], "stats": {"total": 46, "additions": 45, "deletions": 1}, "files": [{"sha": "be36d3197d794612036fc1d487e139a77dfc8ca9", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0333394edfb117c6a3b599dcc9c20ae872a2b0be/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0333394edfb117c6a3b599dcc9c20ae872a2b0be/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=0333394edfb117c6a3b599dcc9c20ae872a2b0be", "patch": "@@ -1,3 +1,8 @@\n+2002-01-21  Jakub Jelinek  <jakub@redhat.com>\n+\n+\t* config/i386/i386.c (ix86_function_arg_regno_p): Never return\n+\ttrue for 64-bit mode only SSE registers in 32-bit mode.\n+\n 2002-01-21  Kazu Hirata  <kazu@hxi.com>\n \n \t* unwind-dw2.c: Fix formatting."}, {"sha": "7eedba3ac7042097801f4d998d1bca771180e4b1", "filename": "gcc/config/i386/i386.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0333394edfb117c6a3b599dcc9c20ae872a2b0be/gcc%2Fconfig%2Fi386%2Fi386.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0333394edfb117c6a3b599dcc9c20ae872a2b0be/gcc%2Fconfig%2Fi386%2Fi386.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.c?ref=0333394edfb117c6a3b599dcc9c20ae872a2b0be", "patch": "@@ -1483,7 +1483,8 @@ ix86_function_arg_regno_p (regno)\n {\n   int i;\n   if (!TARGET_64BIT)\n-    return regno < REGPARM_MAX || (TARGET_SSE && SSE_REGNO_P (regno));\n+    return (regno < REGPARM_MAX\n+\t    || (TARGET_SSE && SSE_REGNO_P (regno) && !fixed_regs[regno]));\n   if (SSE_REGNO_P (regno) && TARGET_SSE)\n     return true;\n   /* RAX is used as hidden argument to va_arg functions.  */"}, {"sha": "d806caf6677da35785b691098a1e7acd5562a08f", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0333394edfb117c6a3b599dcc9c20ae872a2b0be/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0333394edfb117c6a3b599dcc9c20ae872a2b0be/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=0333394edfb117c6a3b599dcc9c20ae872a2b0be", "patch": "@@ -1,3 +1,7 @@\n+2002-01-21  Jakub Jelinek  <jakub@redhat.com>\n+\n+\t* gcc.dg/20020218-1.c: New test.\n+\n 2002-01-21  David.Billinghurst <David.Billinghurst@riotinto.com>\n \n \t* lib/prune.exp (prune_gcc_output): Prune \"At global scope\""}, {"sha": "2887328d5fb743ffd2779bc68b0c18732e2cbee0", "filename": "gcc/testsuite/gcc.dg/20020218-1.c", "status": "added", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0333394edfb117c6a3b599dcc9c20ae872a2b0be/gcc%2Ftestsuite%2Fgcc.dg%2F20020218-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0333394edfb117c6a3b599dcc9c20ae872a2b0be/gcc%2Ftestsuite%2Fgcc.dg%2F20020218-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2F20020218-1.c?ref=0333394edfb117c6a3b599dcc9c20ae872a2b0be", "patch": "@@ -0,0 +1,34 @@\n+/* Verify that X86-64 only SSE registers aren't restored on IA-32.  */\n+/* { dg-do compile { target i?86-*-* } } */\n+/* { dg-options \"-O2 -msse\" } */\n+/* { dg-final { scan-assembler-not \"xmm8\" } } */\n+\n+extern void abort (void);\n+extern void exit (int);\n+\n+void *bar (void *p, void *q)\n+{\n+  if (p != (void *) 26 || q != (void *) 35)\n+    abort ();\n+  return (void *) 76;\n+}\n+\n+void *foo (void **args)\n+{\n+  void *argcookie = &args[1];\n+\n+  __builtin_return (__builtin_apply (args[0], &argcookie,\n+\t\t\t\t     2 * sizeof (void *)));\n+}\n+\n+int main (void)\n+{\n+  void *args[3];\n+\n+  args[0] = (void *) bar;\n+  args[1] = (void *) 26;\n+  args[2] = (void *) 35;\n+  if (foo (args) != (void *) 76)\n+    abort ();\n+  exit (0);\n+}"}]}