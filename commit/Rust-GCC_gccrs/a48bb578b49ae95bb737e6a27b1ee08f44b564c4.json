{"sha": "a48bb578b49ae95bb737e6a27b1ee08f44b564c4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTQ4YmI1NzhiNDlhZTk1YmI3MzdlNmEyN2IxZWUwOGY0NGI1NjRjNA==", "commit": {"author": {"name": "Michael Meissner", "email": "meissner@gcc.gnu.org", "date": "1992-09-22T21:03:23Z"}, "committer": {"name": "Michael Meissner", "email": "meissner@gcc.gnu.org", "date": "1992-09-22T21:03:23Z"}, "message": "Eliminate -fbuiltin/-fno-builtin hacks & enable OSF/rose shared libs.\n\nFrom-SVN: r2208", "tree": {"sha": "d81f0a1258498b1265a554b1e8603fb5bbbdb272", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d81f0a1258498b1265a554b1e8603fb5bbbdb272"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a48bb578b49ae95bb737e6a27b1ee08f44b564c4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a48bb578b49ae95bb737e6a27b1ee08f44b564c4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a48bb578b49ae95bb737e6a27b1ee08f44b564c4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a48bb578b49ae95bb737e6a27b1ee08f44b564c4/comments", "author": null, "committer": null, "parents": [{"sha": "9bbd6c3abe08459c0dd28ca708cda90851e9d273", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9bbd6c3abe08459c0dd28ca708cda90851e9d273", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9bbd6c3abe08459c0dd28ca708cda90851e9d273"}], "stats": {"total": 111, "additions": 69, "deletions": 42}, "files": [{"sha": "33bca7c33590a1f502445d393e591da601571f3b", "filename": "gcc/config/i386/osfrose.h", "status": "modified", "additions": 69, "deletions": 42, "changes": 111, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a48bb578b49ae95bb737e6a27b1ee08f44b564c4/gcc%2Fconfig%2Fi386%2Fosfrose.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a48bb578b49ae95bb737e6a27b1ee08f44b564c4/gcc%2Fconfig%2Fi386%2Fosfrose.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fosfrose.h?ref=a48bb578b49ae95bb737e6a27b1ee08f44b564c4", "patch": "@@ -30,16 +30,21 @@ the Free Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA.  */\n #define abort fancy_abort\n #endif\n \n-#define MASK_HALF_PIC     0x00000100  /* Mask for half-pic code */\n-#define TARGET_HALF_PIC   (target_flags & MASK_HALF_PIC)\n+#define MASK_HALF_PIC     \t0x40000000\t/* Mask for half-pic code */\n+#define MASK_HALF_PIC_DEBUG\t0x20000000\t/* Debug flag */\n+\n+#define TARGET_HALF_PIC\t(target_flags & MASK_HALF_PIC)\n+#define TARGET_DEBUG\t(target_flags & MASK_HALF_PIC_DEBUG)\n+#define HALF_PIC_DEBUG\tTARGET_DEBUG\n \n #ifdef SUBTARGET_SWITCHES\n #undef SUBTARGET_SWITCHES\n #endif\n #define SUBTARGET_SWITCHES \\\n-     { \"half-pic\",     MASK_HALF_PIC},    \\\n-     { \"no-half-pic\", -MASK_HALF_PIC},\n- \n+     { \"half-pic\",\t MASK_HALF_PIC},\t\t\t\t\\\n+     { \"no-half-pic\",\t-MASK_HALF_PIC},\t\t\t\t\\\n+     { \"debugb\",\t MASK_HALF_PIC_DEBUG},\n+\n /* Prefix that appears before all global/static identifiers, except for\n    temporary labels.  */\n \n@@ -65,36 +70,20 @@ the Free Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA.  */\n %{.cxx:\t-D__LANGUAGE_C_PLUS_PLUS} \\\n %{.C:\t-D__LANGUAGE_C_PLUS_PLUS} \\\n %{.m:\t-D__LANGUAGE_OBJECTIVE_C} \\\n-%{!.S:\t-D__LANGUAGE_C %{!ansi:-DLANGUAGE_C}} \\\n-%{!fbuiltin: %{!fno-builtin: %{O*: \\\n-\t-Dmemcpy=__builtin_memcpy \\\n-\t-Dmemcmp=__builtin_memcmp \\\n-\t-Dstrcpy=__builtin_strcpy \\\n-\t-Dstrlen=__builtin_strlen }}}\"\n+%{!.S:\t-D__LANGUAGE_C %{!ansi:-DLANGUAGE_C}}\"\n \n #ifdef  CC1_SPEC\n #undef  CC1_SPEC\n #endif\n \n-#ifndef NO_HALF_PIC\n-/* Turn on -mpic-extern and -fno-builtin by default.  */\n+/* Turn on -mpic-extern by default.  */\n #define CC1_SPEC \"\\\n %{gline:%{!g:%{!g0:%{!g1:%{!g2: -g1}}}}} \\\n %{pic-none:   -mno-half-pic} \\\n %{pic-lib:    -mhalf-pic} \\\n %{pic-extern: -mhalf-pic} \\\n %{pic-calls:  -mhalf-pic} \\\n-%{!pic-*:     -mhalf-pic} \\\n-%{!fbuiltin: %{!fno-builtin: -fno-builtin}} \\\n-%{save-temps: }\"\n-\n-#else\n-/* Turn on -fno-builtin by default.  */\n-#define CC1_SPEC \"\\\n-%{gline:%{!g:%{!g0:%{!g1:%{!g2: -g1}}}}} \\\n-%{!fbuiltin: %{!fno-builtin: -fno-builtin}} \\\n-%{save-temps: }\"\n-#endif\n+%{!pic-*:     -mhalf-pic}\"\n \n #ifdef ASM_SPEC\n #undef ASM_SPEC\n@@ -159,26 +148,10 @@ the Free Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA.  */\n \n #define OPTIMIZATION_OPTIONS(LEVEL)\t\t\t\t\t\\\n {\t\t\t\t\t\t\t\t\t\\\n-  flag_gnu_linker\t\t\t= FALSE;\t\t\t\\\n-\t\t\t\t\t\t\t\t\t\\\n-  if (LEVEL)\t\t\t\t\t\t\t\t\\\n-    {\t\t\t\t\t\t\t\t\t\\\n-      flag_omit_frame_pointer\t\t= TRUE;\t\t\t\t\\\n-      flag_thread_jumps\t\t\t= TRUE;\t\t\t\t\\\n-    }\t\t\t\t\t\t\t\t\t\\\n-\t\t\t\t\t\t\t\t\t\\\n-  if (LEVEL >= 2)\t\t\t\t\t\t\t\\\n-    {\t\t\t\t\t\t\t\t\t\\\n-      flag_strength_reduce\t\t= TRUE;\t\t\t\t\\\n-      flag_cse_follow_jumps\t\t= TRUE;\t\t\t\t\\\n-      flag_expensive_optimizations\t= TRUE;\t\t\t\t\\\n-      flag_rerun_cse_after_loop\t\t= TRUE;\t\t\t\t\\\n-    }\t\t\t\t\t\t\t\t\t\\\n+  flag_gnu_linker = FALSE;\t\t\t\t\t\t\\\n \t\t\t\t\t\t\t\t\t\\\n   if (LEVEL >= 3)\t\t\t\t\t\t\t\\\n-    {\t\t\t\t\t\t\t\t\t\\\n-      flag_inline_functions\t\t= TRUE;\t\t\t\t\\\n-    }\t\t\t\t\t\t\t\t\t\\\n+    flag_inline_functions = TRUE;\t\t\t\t\t\\\n }\n \n /* A C expression that is 1 if the RTX X is a constant which is a\n@@ -197,6 +170,51 @@ the Free Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA.  */\n #define CONSTANT_ADDRESS_P(X)                                           \\\n   (CONSTANT_P (X) && (!HALF_PIC_P () || !HALF_PIC_ADDRESS_P (X)))\n \n+/* GO_IF_LEGITIMATE_ADDRESS recognizes an RTL expression\n+   that is a valid memory address for an instruction.\n+   The MODE argument is the machine mode for the MEM expression\n+   that wants to use this address. */\n+\n+#undef GO_IF_LEGITIMATE_ADDRESS\n+#define GO_IF_LEGITIMATE_ADDRESS(MODE, X, ADDR)\t\t\t\t\\\n+{\t\t\t\t\t\t\t\t\t\\\n+  if (CONSTANT_P (X))\t\t\t\t\t\t\t\\\n+    {\t\t\t\t\t\t\t\t\t\\\n+      if (! HALF_PIC_P () || ! HALF_PIC_ADDRESS_P (X))\t\t\t\\\n+\tgoto ADDR;\t\t\t\t\t\t\t\\\n+    }\t\t\t\t\t\t\t\t\t\\\n+  else\t\t\t\t\t\t\t\t\t\\\n+    {\t\t\t\t\t\t\t\t\t\\\n+      GO_IF_INDEXING (X, ADDR);\t\t\t\t\t\t\\\n+\t\t\t\t\t\t\t\t\t\\\n+      if (GET_CODE (X) == PLUS)\t\t\t\t\t\t\\\n+\t{\t\t\t\t\t\t\t\t\\\n+\t  rtx x1 = XEXP (X, 1);\t\t\t\t\t\t\\\n+\t\t\t\t\t\t\t\t\t\\\n+\t  if (CONSTANT_P (x1))\t\t\t\t\t\t\\\n+\t    {\t\t\t\t\t\t\t\t\\\n+\t      if (! HALF_PIC_P () || ! HALF_PIC_ADDRESS_P (x1))\t\t\\\n+\t\t{\t\t\t\t\t\t\t\\\n+\t\t  rtx x0 = XEXP (X, 0);\t\t\t\t\t\\\n+\t\t  GO_IF_INDEXING (x0, ADDR);\t\t\t\t\\\n+\t\t}\t\t\t\t\t\t\t\\\n+\t    }\t\t\t\t\t\t\t\t\\\n+\t}\t\t\t\t\t\t\t\t\\\n+    }\t\t\t\t\t\t\t\t\t\\\n+}\n+\n+/* Sometimes certain combinations of command options do not make sense\n+   on a particular target machine.  You can define a macro\n+   `OVERRIDE_OPTIONS' to take account of this.  This macro, if\n+   defined, is executed once just after all the command options have\n+   been parsed.  */\n+\n+#define OVERRIDE_OPTIONS\t\t\t\t\t\t\\\n+{\t\t\t\t\t\t\t\t\t\\\n+  if (TARGET_HALF_PIC)\t\t\t\t\t\t\t\\\n+    half_pic_init ();\t\t\t\t\t\t\t\\\n+}\n+\n /* Define this macro if references to a symbol must be treated\n    differently depending on something about the variable or\n    function named by the symbol (such as what section it is in).\n@@ -264,6 +282,15 @@ do\t\t\t\t\t\t\t\t\t\\\n  }\t\t\t\t\t\t\t\t\t\\\n while (0)\n \n+/* This says what to print at the end of the assembly file */\n+#define ASM_FILE_END(STREAM)\t\t\t\t\t\t\\\n+do\t\t\t\t\t\t\t\t\t\\\n+  {\t\t\t\t\t\t\t\t\t\\\n+    if (HALF_PIC_P ())\t\t\t\t\t\t\t\\\n+      HALF_PIC_FINISH (STREAM);\t\t\t\t\t\t\\\n+  }\t\t\t\t\t\t\t\t\t\\\n+while (0)\n+\n /* Tell collect that the object format is OSF/rose.  */\n #define OBJECT_FORMAT_ROSE\n "}]}