{"sha": "2fcfc03459a907c0237ea6e2c6e4ce4871034bed", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmZjZmMwMzQ1OWE5MDdjMDIzN2VhNmUyYzZlNGNlNDg3MTAzNGJlZA==", "commit": {"author": {"name": "Aldy Hernandez", "email": "aldyh@redhat.com", "date": "2021-09-03T10:02:30Z"}, "committer": {"name": "Aldy Hernandez", "email": "aldyh@redhat.com", "date": "2021-09-03T13:47:34Z"}, "message": "Avoid using unavailable objects in jt_state.\n\nThe jump threading state is about to get more interesting, and it may\nget with a ranger or with the const_copies/etc helpers.  This patch\nmakes sure we have an object before we attempt to call push_marker or\npop_to_marker.\n\nTested on x86-64 Linux.\n\ngcc/ChangeLog:\n\n\t* tree-ssa-threadedge.c (jt_state::push): Only call methods for\n\twhich objects are available.\n\t(jt_state::pop): Same.\n\t(jt_state::register_equiv): Same.\n\t(jt_state::register_equivs_on_edge): Same.", "tree": {"sha": "cfdf37269e8d1cb5bac82af087883f3ff71a6cca", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/cfdf37269e8d1cb5bac82af087883f3ff71a6cca"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2fcfc03459a907c0237ea6e2c6e4ce4871034bed", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2fcfc03459a907c0237ea6e2c6e4ce4871034bed", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2fcfc03459a907c0237ea6e2c6e4ce4871034bed", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2fcfc03459a907c0237ea6e2c6e4ce4871034bed/comments", "author": {"login": "aldyh", "id": 12937877, "node_id": "MDQ6VXNlcjEyOTM3ODc3", "avatar_url": "https://avatars.githubusercontent.com/u/12937877?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aldyh", "html_url": "https://github.com/aldyh", "followers_url": "https://api.github.com/users/aldyh/followers", "following_url": "https://api.github.com/users/aldyh/following{/other_user}", "gists_url": "https://api.github.com/users/aldyh/gists{/gist_id}", "starred_url": "https://api.github.com/users/aldyh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aldyh/subscriptions", "organizations_url": "https://api.github.com/users/aldyh/orgs", "repos_url": "https://api.github.com/users/aldyh/repos", "events_url": "https://api.github.com/users/aldyh/events{/privacy}", "received_events_url": "https://api.github.com/users/aldyh/received_events", "type": "User", "site_admin": false}, "committer": {"login": "aldyh", "id": 12937877, "node_id": "MDQ6VXNlcjEyOTM3ODc3", "avatar_url": "https://avatars.githubusercontent.com/u/12937877?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aldyh", "html_url": "https://github.com/aldyh", "followers_url": "https://api.github.com/users/aldyh/followers", "following_url": "https://api.github.com/users/aldyh/following{/other_user}", "gists_url": "https://api.github.com/users/aldyh/gists{/gist_id}", "starred_url": "https://api.github.com/users/aldyh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aldyh/subscriptions", "organizations_url": "https://api.github.com/users/aldyh/orgs", "repos_url": "https://api.github.com/users/aldyh/repos", "events_url": "https://api.github.com/users/aldyh/events{/privacy}", "received_events_url": "https://api.github.com/users/aldyh/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b237eb9dfdada49d3f2bdfa98aa4a0b67fc1829d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b237eb9dfdada49d3f2bdfa98aa4a0b67fc1829d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b237eb9dfdada49d3f2bdfa98aa4a0b67fc1829d"}], "stats": {"total": 18, "additions": 12, "deletions": 6}, "files": [{"sha": "e57f6d3e39c0d7f5f9e7708d9f7f00ef4de065a9", "filename": "gcc/tree-ssa-threadedge.c", "status": "modified", "additions": 12, "deletions": 6, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2fcfc03459a907c0237ea6e2c6e4ce4871034bed/gcc%2Ftree-ssa-threadedge.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2fcfc03459a907c0237ea6e2c6e4ce4871034bed/gcc%2Ftree-ssa-threadedge.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-threadedge.c?ref=2fcfc03459a907c0237ea6e2c6e4ce4871034bed", "patch": "@@ -1323,8 +1323,10 @@ jt_state::jt_state (const_and_copies *copies,\n void\n jt_state::push (edge)\n {\n-  m_copies->push_marker ();\n-  m_exprs->push_marker ();\n+  if (m_copies)\n+    m_copies->push_marker ();\n+  if (m_exprs)\n+    m_exprs->push_marker ();\n   if (m_evrp)\n     m_evrp->push_marker ();\n }\n@@ -1334,8 +1336,10 @@ jt_state::push (edge)\n void\n jt_state::pop ()\n {\n-  m_copies->pop_to_marker ();\n-  m_exprs->pop_to_marker ();\n+  if (m_copies)\n+    m_copies->pop_to_marker ();\n+  if (m_exprs)\n+    m_exprs->pop_to_marker ();\n   if (m_evrp)\n     m_evrp->pop_to_marker ();\n }\n@@ -1346,7 +1350,8 @@ jt_state::pop ()\n void\n jt_state::register_equiv (tree dst, tree src, bool update_range)\n {\n-  m_copies->record_const_or_copy (dst, src);\n+  if (m_copies)\n+    m_copies->record_const_or_copy (dst, src);\n \n   /* If requested, update the value range associated with DST, using\n      the range from SRC.  */\n@@ -1396,7 +1401,8 @@ jt_state::record_ranges_from_stmt (gimple *stmt, bool temporary)\n void\n jt_state::register_equivs_on_edge (edge e)\n {\n-  record_temporary_equivalences (e, m_copies, m_exprs);\n+  if (m_copies && m_exprs)\n+    record_temporary_equivalences (e, m_copies, m_exprs);\n }\n \n jump_threader_simplifier::jump_threader_simplifier (vr_values *v)"}]}