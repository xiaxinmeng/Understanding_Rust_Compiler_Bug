{"sha": "63cf211af7291642bb723a58898f78fe1a1cf3de", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjNjZjIxMWFmNzI5MTY0MmJiNzIzYTU4ODk4Zjc4ZmUxYTFjZjNkZQ==", "commit": {"author": {"name": "Nathanael Nerode", "email": "neroden@gcc.gnu.org", "date": "2003-12-07T16:12:26Z"}, "committer": {"name": "Nathanael Nerode", "email": "neroden@gcc.gnu.org", "date": "2003-12-07T16:12:26Z"}, "message": "configure.in, aclocal.m4: Revert to pre-2.5x conversion status.\n\n\t* configure.in, aclocal.m4: Revert to pre-2.5x conversion status.\n\t* configure: Regenerate with autoconf 2.13.\n\nFrom-SVN: r74396", "tree": {"sha": "5d3cc3e248587e0531f90d1946a83849642a3b9e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5d3cc3e248587e0531f90d1946a83849642a3b9e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/63cf211af7291642bb723a58898f78fe1a1cf3de", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/63cf211af7291642bb723a58898f78fe1a1cf3de", "html_url": "https://github.com/Rust-GCC/gccrs/commit/63cf211af7291642bb723a58898f78fe1a1cf3de", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/63cf211af7291642bb723a58898f78fe1a1cf3de/comments", "author": null, "committer": null, "parents": [{"sha": "b8ec65864910c06bc4b1ceb4e59f02c09693dce6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b8ec65864910c06bc4b1ceb4e59f02c09693dce6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b8ec65864910c06bc4b1ceb4e59f02c09693dce6"}], "stats": {"total": 11652, "additions": 3399, "deletions": 8253}, "files": [{"sha": "c9ff1ef1df587758165a0a6ab916b2470a5e9163", "filename": "gcc/ChangeLog", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/63cf211af7291642bb723a58898f78fe1a1cf3de/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/63cf211af7291642bb723a58898f78fe1a1cf3de/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=63cf211af7291642bb723a58898f78fe1a1cf3de", "patch": "@@ -1,5 +1,8 @@\n 2003-12-07  Nathanael Nerode  <neroden@gcc.gnu.org>\n \n+\t* configure.in, aclocal.m4: Revert to pre-2.5x conversion status.\n+\t* configure: Regenerate with autoconf 2.13.\n+\n \t* configure.in: Replace AC_INIT, AC_OUTPUT, AC_CANONICAL_SYSTEM\n \twith modern equivalents.\n \t* configure: Regenerate."}, {"sha": "788db372e191b1f13e46ca1b1bb64e54142681f3", "filename": "gcc/aclocal.m4", "status": "modified", "additions": 22, "deletions": 1, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/63cf211af7291642bb723a58898f78fe1a1cf3de/gcc%2Faclocal.m4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/63cf211af7291642bb723a58898f78fe1a1cf3de/gcc%2Faclocal.m4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Faclocal.m4?ref=63cf211af7291642bb723a58898f78fe1a1cf3de", "patch": "@@ -16,6 +16,27 @@ if test $ac_cv_header_stdbool_h = yes; then\n fi\n ])\n \n+dnl Fixed AC_CHECK_TYPE that doesn't need anything in acconfig.h.\n+dnl Remove after migrating to 2.5x.\n+AC_DEFUN([gcc_AC_CHECK_TYPE],\n+[AC_REQUIRE([AC_HEADER_STDC])dnl\n+AC_MSG_CHECKING(for $1)\n+AC_CACHE_VAL(ac_cv_type_$1,\n+[AC_EGREP_CPP(dnl\n+changequote(<<,>>)dnl\n+<<(^|[^a-zA-Z_0-9])$1[^a-zA-Z_0-9]>>dnl\n+changequote([,]), [#include <sys/types.h>\n+#if STDC_HEADERS\n+#include <stdlib.h>\n+#include <stddef.h>\n+#endif], ac_cv_type_$1=yes, ac_cv_type_$1=no)])dnl\n+AC_MSG_RESULT($ac_cv_type_$1)\n+if test $ac_cv_type_$1 = no; then\n+  AC_DEFINE($1, $2, [Define as \\`$2' if <sys/types.h> doesn't define.])\n+fi\n+])\n+\n+\n dnl See whether we can include both string.h and strings.h.\n AC_DEFUN([gcc_AC_HEADER_STRING],\n [AC_CACHE_CHECK([whether string.h and strings.h may both be included],\n@@ -732,7 +753,7 @@ AC_DEFUN([gcc_GAS_CHECK_FEATURE],\n   if test $in_tree_gas = yes; then\n     gcc_GAS_VERSION_GTE_IFELSE($3, [[$2]=yes])\n   el])if test x$gcc_cv_as != x; then\n-    echo ifelse(m4_substr([$5],0,1),[$], \"[$5]\", '[$5]') > conftest.s\n+    echo ifelse(substr([$5],0,1),[$], \"[$5]\", '[$5]') > conftest.s\n     if AC_TRY_COMMAND([$gcc_cv_as $4 -o conftest.o conftest.s >&AC_FD_CC])\n     then\n \tifelse([$6],, [$2]=yes, [$6])"}, {"sha": "f0ca01e6d2f587c2001491ad5debd4263c73d9c4", "filename": "gcc/configure", "status": "modified", "additions": 3365, "deletions": 8236, "changes": 11601, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/63cf211af7291642bb723a58898f78fe1a1cf3de/gcc%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/63cf211af7291642bb723a58898f78fe1a1cf3de/gcc%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfigure?ref=63cf211af7291642bb723a58898f78fe1a1cf3de"}, {"sha": "ed32400dd5bcd96e2768237643a359f825de567e", "filename": "gcc/configure.in", "status": "modified", "additions": 9, "deletions": 16, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/63cf211af7291642bb723a58898f78fe1a1cf3de/gcc%2Fconfigure.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/63cf211af7291642bb723a58898f78fe1a1cf3de/gcc%2Fconfigure.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfigure.in?ref=63cf211af7291642bb723a58898f78fe1a1cf3de", "patch": "@@ -25,15 +25,12 @@\n # Initialization and sanity checks\n # --------------------------------\n \n-AC_PREREQ(2.57)\n-AC_INIT\n-AC_CONFIG_SRCDIR(tree.c)\n+AC_PREREQ(2.13)\n+AC_INIT(tree.c)\n AC_CONFIG_HEADER(auto-host.h:config.in)\n \n # Determine the host, build, and target systems\n-AC_CANONICAL_BUILD\n-AC_CANONICAL_HOST\n-AC_CANONICAL_TARGET\n+AC_CANONICAL_SYSTEM\n \n # Determine the noncanonical target name, for directory use.\n _GCC_TOPLEV_NONCANONICAL_TARGET\n@@ -801,7 +798,7 @@ int main()\n   fi\n fi\n \n-AC_CHECK_TYPE(ssize_t, int)\n+gcc_AC_CHECK_TYPE(ssize_t, int)\n \n # Try to determine the array type of the second argument of getgroups\n # for the target system (int or gid_t).\n@@ -1962,16 +1959,15 @@ __FRAME_BEGIN__:\n \t.byte\t0x4\n \t.4byte\t.L1-.LFB1\n .LEFDE1:],\n-[  dnl # For autoconf 2.5x, must protect trailing spaces with @&t@.\n-cat > conftest.lit <<EOF\n+[  cat > conftest.lit <<EOF\n  0000 10000000 00000000 017a0001 781a0004  .........z..x...\n  0010 01000000 12000000 18000000 00000000  ................\n- 0020 08000000 04080000 0044               .........D      @&t@\n+ 0020 08000000 04080000 0044               .........D      \n EOF\n-cat > conftest.big <<EOF\n+  cat > conftest.big <<EOF\n  0000 00000010 00000000 017a0001 781a0004  .........z..x...\n  0010 00000001 00000012 00000018 00000000  ................\n- 0020 00000008 04000000 0844               .........D      @&t@\n+ 0020 00000008 04000000 0844               .........D      \n EOF\n   # If the assembler didn't choke, and we can objdump,\n   # and we got the correct data, then succeed.\n@@ -3041,9 +3037,7 @@ fi\n \n # Create the Makefile\n # and configure language subdirectories\n-AC_CONFIG_FILES($all_outputs)\n-\n-AC_CONFIG_COMMANDS([default],\n+AC_OUTPUT($all_outputs,\n [\n case ${CONFIG_HEADERS} in\n   *auto-host.h:config.in*)\n@@ -3076,4 +3070,3 @@ else true ; fi\n [subdirs='$subdirs'\n symbolic_link='$symbolic_link'\n ])\n-AC_OUTPUT"}]}