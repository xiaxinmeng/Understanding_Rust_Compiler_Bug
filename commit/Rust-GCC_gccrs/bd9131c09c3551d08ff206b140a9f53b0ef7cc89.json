{"sha": "bd9131c09c3551d08ff206b140a9f53b0ef7cc89", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmQ5MTMxYzA5YzM1NTFkMDhmZjIwNmIxNDBhOWY1M2IwZWY3Y2M4OQ==", "commit": {"author": {"name": "Richard Sandiford", "email": "rsandifo@redhat.com", "date": "2004-01-11T10:37:49Z"}, "committer": {"name": "Richard Sandiford", "email": "rsandifo@gcc.gnu.org", "date": "2004-01-11T10:37:49Z"}, "message": "mips.c (mips_symbolic_constant_p): Don't allow out-of-bounds accesses to string constants.\n\n\t* config/mips/mips.c (mips_symbolic_constant_p): Don't allow\n\tout-of-bounds accesses to string constants.  Simplify mips16\n\tcase accordingly.\n\nFrom-SVN: r75670", "tree": {"sha": "c9f37546f849e338102d34dbc8d676961752db91", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c9f37546f849e338102d34dbc8d676961752db91"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/bd9131c09c3551d08ff206b140a9f53b0ef7cc89", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bd9131c09c3551d08ff206b140a9f53b0ef7cc89", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bd9131c09c3551d08ff206b140a9f53b0ef7cc89", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bd9131c09c3551d08ff206b140a9f53b0ef7cc89/comments", "author": null, "committer": null, "parents": [{"sha": "6732ee60436e4a8849e1915ad4cca78f166a561e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6732ee60436e4a8849e1915ad4cca78f166a561e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6732ee60436e4a8849e1915ad4cca78f166a561e"}], "stats": {"total": 24, "additions": 19, "deletions": 5}, "files": [{"sha": "6d23396e3e96f57426434fd71e23d8ffcfbcbe29", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bd9131c09c3551d08ff206b140a9f53b0ef7cc89/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bd9131c09c3551d08ff206b140a9f53b0ef7cc89/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=bd9131c09c3551d08ff206b140a9f53b0ef7cc89", "patch": "@@ -1,3 +1,9 @@\n+2004-01-11  Richard Sandiford  <rsandifo@redhat.com>\n+\n+\t* config/mips/mips.c (mips_symbolic_constant_p): Don't allow\n+\tout-of-bounds accesses to string constants.  Simplify mips16\n+\tcase accordingly.\n+\n 2004-01-11  Richard Sandiford  <rsandifo@redhat.com>\n \n \tPR optimization/13469"}, {"sha": "1e04fa7a9541517e1228ae5892dd698dd4b6b028", "filename": "gcc/config/mips/mips.c", "status": "modified", "additions": 13, "deletions": 5, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bd9131c09c3551d08ff206b140a9f53b0ef7cc89/gcc%2Fconfig%2Fmips%2Fmips.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bd9131c09c3551d08ff206b140a9f53b0ef7cc89/gcc%2Fconfig%2Fmips%2Fmips.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fmips.c?ref=bd9131c09c3551d08ff206b140a9f53b0ef7cc89", "patch": "@@ -902,6 +902,16 @@ mips_symbolic_constant_p (rtx x, enum mips_symbol_type *symbol_type)\n   if (offset == 0)\n     return true;\n \n+  /* If X refers to a string constant, and that constant is put into a\n+     mergeable section, the linker will need to know which string is\n+     being accessed.  It has no way of distinguishing an out-of-bounds\n+     access to X from an in-bounds access to a later or earlier string.  */\n+  if (GET_CODE (x) == SYMBOL_REF\n+      && SYMBOL_REF_DECL (x) != 0\n+      && TREE_CODE (SYMBOL_REF_DECL (x)) == STRING_CST\n+      && !(offset > 0 && offset < TREE_STRING_LENGTH (SYMBOL_REF_DECL (x))))\n+    return false;\n+\n   /* Check whether a nonzero offset is valid for the underlying\n      relocations.  */\n   switch (*symbol_type)\n@@ -917,11 +927,9 @@ mips_symbolic_constant_p (rtx x, enum mips_symbol_type *symbol_type)\n       return (offset > 0 && offset < mips_section_threshold);\n \n     case SYMBOL_CONSTANT_POOL:\n-      /* Similarly check the range of offsets for mips16 constant\n-\t pool entries.  */\n-      return (CONSTANT_POOL_ADDRESS_P (x)\n-\t      && offset > 0\n-\t      && offset < (int) GET_MODE_SIZE (get_pool_mode (x)));\n+      /* We don't generate out-of-bounds accesses to normal constant\n+\t pool entries.  String constants were handled above.  */\n+      return true;\n \n     case SYMBOL_GOT_LOCAL:\n     case SYMBOL_GOTOFF_PAGE:"}]}