{"sha": "a240e83ce9d92786ac9a15ab815b58197b85ada2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTI0MGU4M2NlOWQ5Mjc4NmFjOWExNWFiODE1YjU4MTk3Yjg1YWRhMg==", "commit": {"author": {"name": "Jos\u00e9 Rui Faustino de Sousa", "email": "jrfsousa@gmail.com", "date": "2020-08-30T18:10:15Z"}, "committer": {"name": "Jos\u00e9 Rui Faustino de Sousa", "email": "jrfsousa@gmail.com", "date": "2020-08-30T18:10:15Z"}, "message": "\t2020-8-20  Jos\u00e9 Rui Faustino de Sousa  <jrfsousa@gmail.com>\n\ngcc/fortran/ChangeLog:\n\n\tPR fortran/96728\n\t* module.c (module_peek_char): Peek ahead function.\n\t(parse_integer): Add code for parsing signed integers.\n\t(parse_atom): Add code to handle signed integers.\n\t(peek_atom): Add code to handle signed integers.\n\ngcc/testsuite/ChangeLog:\n\n\tPR fortran/96728\n\t* gfortran.dg/PR96728.f90: New test.", "tree": {"sha": "aea783b158816d14c544c1af27d3c19edb0c6fd8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/aea783b158816d14c544c1af27d3c19edb0c6fd8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a240e83ce9d92786ac9a15ab815b58197b85ada2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a240e83ce9d92786ac9a15ab815b58197b85ada2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a240e83ce9d92786ac9a15ab815b58197b85ada2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a240e83ce9d92786ac9a15ab815b58197b85ada2/comments", "author": {"login": "jrfsousa", "id": 56982651, "node_id": "MDQ6VXNlcjU2OTgyNjUx", "avatar_url": "https://avatars.githubusercontent.com/u/56982651?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jrfsousa", "html_url": "https://github.com/jrfsousa", "followers_url": "https://api.github.com/users/jrfsousa/followers", "following_url": "https://api.github.com/users/jrfsousa/following{/other_user}", "gists_url": "https://api.github.com/users/jrfsousa/gists{/gist_id}", "starred_url": "https://api.github.com/users/jrfsousa/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jrfsousa/subscriptions", "organizations_url": "https://api.github.com/users/jrfsousa/orgs", "repos_url": "https://api.github.com/users/jrfsousa/repos", "events_url": "https://api.github.com/users/jrfsousa/events{/privacy}", "received_events_url": "https://api.github.com/users/jrfsousa/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jrfsousa", "id": 56982651, "node_id": "MDQ6VXNlcjU2OTgyNjUx", "avatar_url": "https://avatars.githubusercontent.com/u/56982651?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jrfsousa", "html_url": "https://github.com/jrfsousa", "followers_url": "https://api.github.com/users/jrfsousa/followers", "following_url": "https://api.github.com/users/jrfsousa/following{/other_user}", "gists_url": "https://api.github.com/users/jrfsousa/gists{/gist_id}", "starred_url": "https://api.github.com/users/jrfsousa/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jrfsousa/subscriptions", "organizations_url": "https://api.github.com/users/jrfsousa/orgs", "repos_url": "https://api.github.com/users/jrfsousa/repos", "events_url": "https://api.github.com/users/jrfsousa/events{/privacy}", "received_events_url": "https://api.github.com/users/jrfsousa/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3a7a95a220c14043da1e1166530e1d76f001dad9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3a7a95a220c14043da1e1166530e1d76f001dad9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3a7a95a220c14043da1e1166530e1d76f001dad9"}], "stats": {"total": 91, "additions": 90, "deletions": 1}, "files": [{"sha": "33e7df7d6a4a64dc55eca31e7c0c063758561c2d", "filename": "gcc/fortran/module.c", "status": "modified", "additions": 41, "deletions": 1, "changes": 42, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a240e83ce9d92786ac9a15ab815b58197b85ada2/gcc%2Ffortran%2Fmodule.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a240e83ce9d92786ac9a15ab815b58197b85ada2/gcc%2Ffortran%2Fmodule.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fmodule.c?ref=a240e83ce9d92786ac9a15ab815b58197b85ada2", "patch": "@@ -1234,6 +1234,13 @@ get_module_locus (module_locus *m)\n   m->pos = module_pos;\n }\n \n+/* Peek at the next character in the module.  */\n+\n+static int\n+module_peek_char (void)\n+{\n+  return module_content[module_pos];\n+}\n \n /* Get the next character in the module, updating our reckoning of\n    where we are.  */\n@@ -1314,7 +1321,19 @@ parse_string (void)\n static void\n parse_integer (int c)\n {\n-  atom_int = c - '0';\n+  int sign = 1;\n+\n+  atom_int = 0;\n+  switch (c)\n+    {\n+    case ('-'):\n+      sign = -1;\n+    case ('+'):\n+      break;\n+    default:\n+      atom_int = c - '0';\n+      break;\n+    }\n \n   for (;;)\n     {\n@@ -1328,6 +1347,7 @@ parse_integer (int c)\n       atom_int = 10 * atom_int + c - '0';\n     }\n \n+  atom_int *= sign; \n }\n \n \n@@ -1401,6 +1421,16 @@ parse_atom (void)\n       parse_integer (c);\n       return ATOM_INTEGER;\n \n+    case '+':\n+    case '-':\n+      if (ISDIGIT (module_peek_char ()))\n+\t{\n+\t  parse_integer (c);\n+\t  return ATOM_INTEGER;\n+\t}\n+      else\n+\tbad_module (\"Bad name\");\n+\n     case 'a':\n     case 'b':\n     case 'c':\n@@ -1504,6 +1534,16 @@ peek_atom (void)\n       module_unget_char ();\n       return ATOM_INTEGER;\n \n+    case '+':\n+    case '-':\n+      if (ISDIGIT (module_peek_char ()))\n+\t{\n+\t  module_unget_char ();\n+\t  return ATOM_INTEGER;\n+\t}\n+      else\n+\tbad_module (\"Bad name\");\n+\n     case 'a':\n     case 'b':\n     case 'c':"}, {"sha": "4caa3a569a70a33a60d33e8e5be10e8005bb74cd", "filename": "gcc/testsuite/gfortran.dg/PR96728.f90", "status": "added", "additions": 49, "deletions": 0, "changes": 49, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a240e83ce9d92786ac9a15ab815b58197b85ada2/gcc%2Ftestsuite%2Fgfortran.dg%2FPR96728.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a240e83ce9d92786ac9a15ab815b58197b85ada2/gcc%2Ftestsuite%2Fgfortran.dg%2FPR96728.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2FPR96728.f90?ref=a240e83ce9d92786ac9a15ab815b58197b85ada2", "patch": "@@ -0,0 +1,49 @@\n+! { dg-do run }\n+!\n+! Test the fix for PR96728\n+!\n+\n+module cref_m\n+\n+  implicit none\n+\n+  private\n+\n+  public ::   &\n+    isub_a_m\n+  \n+contains\n+\n+  subroutine isub_a_m(a, b)\n+    integer, intent(in)  :: a(..)\n+    integer, intent(out) :: b(size(a))\n+\n+    integer :: i\n+    \n+    b = [(i, i=1,size(b))]\n+    return\n+  end subroutine isub_a_m\n+  \n+end module cref_m\n+\n+program cref_p\n+\n+  use cref_m, only: &\n+    isub_a_m\n+\n+  implicit none\n+  \n+  integer            :: i\n+\n+  integer, parameter :: n = 3\n+  integer, parameter :: p(*) = [(i, i=1,n*n)]\n+  \n+  integer :: a(n,n)\n+  integer :: b(n*n)\n+\n+  a = reshape(p, shape=[n,n])\n+  call isub_a_m(a, b)\n+  if (any(b/=p)) stop 1\n+  stop\n+\n+end program cref_p"}]}