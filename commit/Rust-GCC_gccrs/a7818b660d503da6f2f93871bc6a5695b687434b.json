{"sha": "a7818b660d503da6f2f93871bc6a5695b687434b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTc4MThiNjYwZDUwM2RhNmYyZjkzODcxYmM2YTU2OTViNjg3NDM0Yg==", "commit": {"author": {"name": "Kazu Hirata", "email": "kazu@cs.umass.edu", "date": "2005-04-01T13:55:11Z"}, "committer": {"name": "Kazu Hirata", "email": "kazu@gcc.gnu.org", "date": "2005-04-01T13:55:11Z"}, "message": "tree-inline.c (copy_body_r): Use CONSTANT_CLASS_P where possible.\n\n\t* tree-inline.c (copy_body_r): Use CONSTANT_CLASS_P where\n\tpossible.\n\nFrom-SVN: r97389", "tree": {"sha": "ef94137e63d736e48dfb833e703e5cc9e752e68c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ef94137e63d736e48dfb833e703e5cc9e752e68c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a7818b660d503da6f2f93871bc6a5695b687434b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a7818b660d503da6f2f93871bc6a5695b687434b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a7818b660d503da6f2f93871bc6a5695b687434b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a7818b660d503da6f2f93871bc6a5695b687434b/comments", "author": null, "committer": null, "parents": [{"sha": "88ec1cc98bbfdd6b917cfd98f3ff50c80f93579b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/88ec1cc98bbfdd6b917cfd98f3ff50c80f93579b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/88ec1cc98bbfdd6b917cfd98f3ff50c80f93579b"}], "stats": {"total": 7, "additions": 6, "deletions": 1}, "files": [{"sha": "3237308d6b5c04585854088534f90629e1adf2a6", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a7818b660d503da6f2f93871bc6a5695b687434b/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a7818b660d503da6f2f93871bc6a5695b687434b/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=a7818b660d503da6f2f93871bc6a5695b687434b", "patch": "@@ -1,3 +1,8 @@\n+2005-04-01  Kazu Hirata  <kazu@cs.umass.edu>\n+\n+\t* tree-inline.c (copy_body_r): Use CONSTANT_CLASS_P where\n+\tpossible.\n+\n 2005-04-01  Richard Earnshaw  <richard.earnshaw@arm.com>\n \n \t* arm.c (adjacent_mem_locations): Reject volatile memory refs."}, {"sha": "8680a37daf773d75a599efc02ee6f3ffc5b5e170", "filename": "gcc/tree-inline.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a7818b660d503da6f2f93871bc6a5695b687434b/gcc%2Ftree-inline.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a7818b660d503da6f2f93871bc6a5695b687434b/gcc%2Ftree-inline.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-inline.c?ref=a7818b660d503da6f2f93871bc6a5695b687434b", "patch": "@@ -516,7 +516,7 @@ copy_body_r (tree *tp, int *walk_subtrees, void *data)\n \n   /* If this is a constant, we have to copy the node iff the type will be\n      remapped.  copy_tree_r will not copy a constant.  */\n-  else if (TREE_CODE_CLASS (TREE_CODE (*tp)) == tcc_constant)\n+  else if (CONSTANT_CLASS_P (*tp) == tcc_constant)\n     {\n       tree new_type = remap_type (TREE_TYPE (*tp), id);\n "}]}