{"sha": "9f14d763affc5a001506f485e826ab110b4a2969", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OWYxNGQ3NjNhZmZjNWEwMDE1MDZmNDg1ZTgyNmFiMTEwYjRhMjk2OQ==", "commit": {"author": {"name": "Kyrylo Tkachov", "email": "kyrylo.tkachov@arm.com", "date": "2018-01-19T10:26:53Z"}, "committer": {"name": "Kyrylo Tkachov", "email": "ktkachov@gcc.gnu.org", "date": "2018-01-19T10:26:53Z"}, "message": "[arm] Fix gcc.target/arm/pr40956.c\n\nThe scan-assembler tests here check for MOVS for Thumb1 and MOV for Thumb2,\nbut in fact there's no reason why we wouldn't generate MOVS for Thumb2 as well,\nit really depends on a lot of optimisation decisions.\nThe only behaviour we want to test is that we move a 0 constant into a register\nonly once, which can be achieved with either MOV or MOVS.\nSimplify the check by always checking for either MOV or MOVS.\n\n      * gcc.target/arm/pr40956.c: Adjust scan-assembler pattern.\n\nFrom-SVN: r256880", "tree": {"sha": "f072c8205ad37492e55630b8efe5769aabb096ad", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f072c8205ad37492e55630b8efe5769aabb096ad"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9f14d763affc5a001506f485e826ab110b4a2969", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9f14d763affc5a001506f485e826ab110b4a2969", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9f14d763affc5a001506f485e826ab110b4a2969", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9f14d763affc5a001506f485e826ab110b4a2969/comments", "author": {"login": "ktkachov-arm", "id": 74917949, "node_id": "MDQ6VXNlcjc0OTE3OTQ5", "avatar_url": "https://avatars.githubusercontent.com/u/74917949?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ktkachov-arm", "html_url": "https://github.com/ktkachov-arm", "followers_url": "https://api.github.com/users/ktkachov-arm/followers", "following_url": "https://api.github.com/users/ktkachov-arm/following{/other_user}", "gists_url": "https://api.github.com/users/ktkachov-arm/gists{/gist_id}", "starred_url": "https://api.github.com/users/ktkachov-arm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ktkachov-arm/subscriptions", "organizations_url": "https://api.github.com/users/ktkachov-arm/orgs", "repos_url": "https://api.github.com/users/ktkachov-arm/repos", "events_url": "https://api.github.com/users/ktkachov-arm/events{/privacy}", "received_events_url": "https://api.github.com/users/ktkachov-arm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "a46c4287bb4b52974f88a65e9e16f4e35dd4caea", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a46c4287bb4b52974f88a65e9e16f4e35dd4caea", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a46c4287bb4b52974f88a65e9e16f4e35dd4caea"}], "stats": {"total": 7, "additions": 5, "deletions": 2}, "files": [{"sha": "a0000cd70ad47365f2d9a0c3706fe45e96395f27", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9f14d763affc5a001506f485e826ab110b4a2969/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9f14d763affc5a001506f485e826ab110b4a2969/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=9f14d763affc5a001506f485e826ab110b4a2969", "patch": "@@ -1,3 +1,7 @@\n+2018-01-19  Kyrylo Tkachov  <kyrylo.tkachov@arm.com>\n+\n+\t* gcc.target/arm/pr40956.c: Adjust scan-assembler pattern.\n+\n 2018-01-19  Kyrylo Tkachov  <kyrylo.tkachov@arm.com>\n \n \t* gcc.target/arm/pr79058.c: Add arm_arm_ok check and -marm to options."}, {"sha": "7429272a8c26a00ed40ead45d8d5737986e4bb0a", "filename": "gcc/testsuite/gcc.target/arm/pr40956.c", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9f14d763affc5a001506f485e826ab110b4a2969/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fpr40956.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9f14d763affc5a001506f485e826ab110b4a2969/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fpr40956.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fpr40956.c?ref=9f14d763affc5a001506f485e826ab110b4a2969", "patch": "@@ -1,8 +1,7 @@\n /* { dg-options \"-Os -fpic\" }  */\n /* { dg-require-effective-target fpic } */\n /* Make sure the constant \"0\" is loaded into register only once.  */\n-/* { dg-final { scan-assembler-times \"movs\\[\\\\t \\]*r., #0\" 1 { target arm_thumb1 } } } */\n-/* { dg-final { scan-assembler-times \"mov\\[\\\\t \\]*r., #0\" 1 { target { ! arm_thumb1 } } } } */\n+/* { dg-final { scan-assembler-times \"movs?\\[\\\\t \\]*r., #0\" 1 } } */\n \n int foo(int p, int* q)\n {"}]}