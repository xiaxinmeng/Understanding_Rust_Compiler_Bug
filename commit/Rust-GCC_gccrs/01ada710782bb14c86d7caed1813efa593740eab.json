{"sha": "01ada710782bb14c86d7caed1813efa593740eab", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDFhZGE3MTA3ODJiYjE0Yzg2ZDdjYWVkMTgxM2VmYTU5Mzc0MGVhYg==", "commit": {"author": {"name": "Marek Polacek", "email": "polacek@redhat.com", "date": "2014-12-16T18:29:01Z"}, "committer": {"name": "Marek Polacek", "email": "mpolacek@gcc.gnu.org", "date": "2014-12-16T18:29:01Z"}, "message": "re PR middle-end/64309 (if (1 & (1 << n)) not simplified to if (n == 0))\n\n\tPR middle-end/64309\n\t* match.pd: Add ((1 << A) & 1) != 0 -> A == 0 and\n\t((1 << A) & 1) == 0 -> A != 0.\n\n\t* gcc.dg/pr64309.c: New test.\n\nFrom-SVN: r218787", "tree": {"sha": "934c45cf87fd29677d4acbc201a26aaddb8742ee", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/934c45cf87fd29677d4acbc201a26aaddb8742ee"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/01ada710782bb14c86d7caed1813efa593740eab", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/01ada710782bb14c86d7caed1813efa593740eab", "html_url": "https://github.com/Rust-GCC/gccrs/commit/01ada710782bb14c86d7caed1813efa593740eab", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/01ada710782bb14c86d7caed1813efa593740eab/comments", "author": {"login": "mpolacek", "id": 10496300, "node_id": "MDQ6VXNlcjEwNDk2MzAw", "avatar_url": "https://avatars.githubusercontent.com/u/10496300?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mpolacek", "html_url": "https://github.com/mpolacek", "followers_url": "https://api.github.com/users/mpolacek/followers", "following_url": "https://api.github.com/users/mpolacek/following{/other_user}", "gists_url": "https://api.github.com/users/mpolacek/gists{/gist_id}", "starred_url": "https://api.github.com/users/mpolacek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mpolacek/subscriptions", "organizations_url": "https://api.github.com/users/mpolacek/orgs", "repos_url": "https://api.github.com/users/mpolacek/repos", "events_url": "https://api.github.com/users/mpolacek/events{/privacy}", "received_events_url": "https://api.github.com/users/mpolacek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "d0af2c6589e1eca2142c6fed09d741820ea96bf3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d0af2c6589e1eca2142c6fed09d741820ea96bf3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d0af2c6589e1eca2142c6fed09d741820ea96bf3"}], "stats": {"total": 84, "additions": 84, "deletions": 0}, "files": [{"sha": "b399b6ebadeacd83ae35fc3f4bb40f8363f666f3", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/01ada710782bb14c86d7caed1813efa593740eab/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/01ada710782bb14c86d7caed1813efa593740eab/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=01ada710782bb14c86d7caed1813efa593740eab", "patch": "@@ -1,3 +1,9 @@\n+2014-12-16  Marek Polacek  <polacek@redhat.com>\n+\n+\tPR middle-end/64309\n+\t* match.pd: Add ((1 << A) & 1) != 0 -> A == 0 and\n+\t((1 << A) & 1) == 0 -> A != 0.\n+\n 2014-12-16  Richard Biener  <rguenther@suse.de>\n \n \t* genmatch.c (parser::parser): Initialize capture_ids."}, {"sha": "dbca99efb019ed6723c3e54d3288a1876f15cb75", "filename": "gcc/match.pd", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/01ada710782bb14c86d7caed1813efa593740eab/gcc%2Fmatch.pd", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/01ada710782bb14c86d7caed1813efa593740eab/gcc%2Fmatch.pd", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fmatch.pd?ref=01ada710782bb14c86d7caed1813efa593740eab", "patch": "@@ -599,6 +599,13 @@ along with GCC; see the file COPYING3.  If not see\n \t\t\t    build_int_cst (TREE_TYPE (@1),\n \t\t\t\t\t   element_precision (type)), @1); }))\n \n+/* ((1 << A) & 1) != 0 -> A == 0\n+   ((1 << A) & 1) == 0 -> A != 0 */\n+(for cmp (ne eq)\n+     icmp (eq ne)\n+ (simplify\n+  (cmp (bit_and (lshift integer_onep @0) integer_onep) integer_zerop)\n+  (icmp @0 { build_zero_cst (TREE_TYPE (@0)); })))\n \n /* Simplifications of conversions.  */\n "}, {"sha": "a21146276be979b34e4eb4deb06d557d963c4c99", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/01ada710782bb14c86d7caed1813efa593740eab/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/01ada710782bb14c86d7caed1813efa593740eab/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=01ada710782bb14c86d7caed1813efa593740eab", "patch": "@@ -1,3 +1,8 @@\n+2014-12-16  Marek Polacek  <polacek@redhat.com>\n+\n+\tPR middle-end/64309\n+\t* gcc.dg/pr64309.c: New test.\n+\n 2014-12-16  Felix Yang  <felix.yang@huawei.com>\n \n \tPR rtl-optimization/64240"}, {"sha": "710a7624e214211f26873aa840d70c63f77f25e6", "filename": "gcc/testsuite/gcc.dg/pr64309.c", "status": "added", "additions": 66, "deletions": 0, "changes": 66, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/01ada710782bb14c86d7caed1813efa593740eab/gcc%2Ftestsuite%2Fgcc.dg%2Fpr64309.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/01ada710782bb14c86d7caed1813efa593740eab/gcc%2Ftestsuite%2Fgcc.dg%2Fpr64309.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr64309.c?ref=01ada710782bb14c86d7caed1813efa593740eab", "patch": "@@ -0,0 +1,66 @@\n+/* PR middle-end/64309 */\n+/* { dg-do run } */\n+/* { dg-options \"-fdump-tree-original\" } */\n+\n+int\n+fn1 (int n)\n+{\n+  return ((1 << n) & 1) != 0;\n+}\n+\n+int\n+fn2 (int n)\n+{\n+  return (1 & (1 << n)) != 0;\n+}\n+\n+int\n+fn3 (int n)\n+{\n+  return ((1 << n) & 1) == 0;\n+}\n+\n+int\n+fn4 (int n)\n+{\n+  return (1 & (1 << n)) == 0;\n+}\n+\n+int\n+main (void)\n+{\n+  if (fn1 (0) != 1\n+      || fn1 (1) != 0\n+      || fn1 (2) != 0\n+      || fn1 (3) != 0\n+      || fn1 (4) != 0\n+      || fn1 (5) != 0)\n+    __builtin_abort ();\n+\n+  if (fn2 (0) != 1\n+      || fn2 (1) != 0\n+      || fn2 (2) != 0\n+      || fn2 (3) != 0\n+      || fn2 (4) != 0\n+      || fn2 (5) != 0)\n+    __builtin_abort ();\n+\n+  if (fn3 (0) != 0\n+      || fn3 (1) != 1\n+      || fn3 (2) != 1\n+      || fn3 (3) != 1\n+      || fn3 (4) != 1\n+      || fn3 (5) != 1)\n+    __builtin_abort ();\n+\n+  if (fn4 (0) != 0\n+      || fn4 (1) != 1\n+      || fn4 (2) != 1\n+      || fn4 (3) != 1\n+      || fn4 (4) != 1\n+      || fn4 (5) != 1)\n+    __builtin_abort ();\n+}\n+\n+/* { dg-final { scan-tree-dump-not \"(<<|>>)\" \"original\" } } */\n+/* { dg-final { cleanup-tree-dump \"original\" } } */"}]}