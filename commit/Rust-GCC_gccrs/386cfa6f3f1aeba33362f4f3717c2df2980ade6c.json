{"sha": "386cfa6f3f1aeba33362f4f3717c2df2980ade6c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Mzg2Y2ZhNmYzZjFhZWJhMzMzNjJmNGYzNzE3YzJkZjI5ODBhZGU2Yw==", "commit": {"author": {"name": "Andrew Pinski", "email": "pinskia@physics.uc.edu", "date": "2005-10-11T15:11:02Z"}, "committer": {"name": "Andrew Pinski", "email": "pinskia@gcc.gnu.org", "date": "2005-10-11T15:11:02Z"}, "message": "re PR tree-optimization/23946 (ICE: verify_ssa failed (\"definition ... follows the use\"))\n\n2005-10-11  Andrew Pinski  <pinskia@physics.uc.edu>\n\n        PR tree-opt/23946\n        * gcc.c-torture/compile/pr23946.c: New test.\n\n2005-10-11  Andrew Pinski  <pinskia@physics.uc.edu>\n\n        PR tree-opt/23946\n        * tree-ssa-ccp.c (execute_fold_all_builtins): Call\n        mark_new_vars_to_rename instead of update_stmt.\n\nFrom-SVN: r105239", "tree": {"sha": "db3113e60bb2836eefd2d2c6aceab2b532fe25f8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/db3113e60bb2836eefd2d2c6aceab2b532fe25f8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/386cfa6f3f1aeba33362f4f3717c2df2980ade6c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/386cfa6f3f1aeba33362f4f3717c2df2980ade6c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/386cfa6f3f1aeba33362f4f3717c2df2980ade6c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/386cfa6f3f1aeba33362f4f3717c2df2980ade6c/comments", "author": null, "committer": null, "parents": [{"sha": "ace0544ad6c8ab35aa388d9c5e5917695e570491", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ace0544ad6c8ab35aa388d9c5e5917695e570491", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ace0544ad6c8ab35aa388d9c5e5917695e570491"}], "stats": {"total": 85, "additions": 84, "deletions": 1}, "files": [{"sha": "c4c063b39580ad142c7d5ba3e4a75aaa7494d222", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/386cfa6f3f1aeba33362f4f3717c2df2980ade6c/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/386cfa6f3f1aeba33362f4f3717c2df2980ade6c/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=386cfa6f3f1aeba33362f4f3717c2df2980ade6c", "patch": "@@ -1,3 +1,9 @@\n+2005-10-11  Andrew Pinski  <pinskia@physics.uc.edu>\n+\n+\tPR tree-opt/23946\n+\t* tree-ssa-ccp.c (execute_fold_all_builtins): Call\n+\tmark_new_vars_to_rename instead of update_stmt.\n+\n 2005-10-11  Bernd Schmidt  <bernd.schmidt@analog.com>\n \n \t* config/bfin/crti.s (__init, __fini): Renamed from _init, _fini."}, {"sha": "96a21e9d9862b542e49f8b786eebb7e8ffcc4f88", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/386cfa6f3f1aeba33362f4f3717c2df2980ade6c/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/386cfa6f3f1aeba33362f4f3717c2df2980ade6c/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=386cfa6f3f1aeba33362f4f3717c2df2980ade6c", "patch": "@@ -1,3 +1,8 @@\n+2005-10-11  Andrew Pinski  <pinskia@physics.uc.edu>\n+\n+\tPR tree-opt/23946\n+\t* gcc.c-torture/compile/pr23946.c: New test.\n+\n 2005-10-11  Jakub Jelinek  <jakub@redhat.com>\n \n \t* g++.dg/opt/mmx2.C: New test."}, {"sha": "ecaa5b1635c225362e60bf159f294928b7984dd7", "filename": "gcc/testsuite/gcc.c-torture/compile/pr23946.c", "status": "added", "additions": 72, "deletions": 0, "changes": 72, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/386cfa6f3f1aeba33362f4f3717c2df2980ade6c/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr23946.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/386cfa6f3f1aeba33362f4f3717c2df2980ade6c/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr23946.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr23946.c?ref=386cfa6f3f1aeba33362f4f3717c2df2980ade6c", "patch": "@@ -0,0 +1,72 @@\n+\n+extern int foo (void);\n+\n+int\n+avi_parse_comments (int fd, char *buf, int space_left)\n+{\n+  int len = 0, readlen = 0, k;\n+  char *data, *c, *d;\n+\n+  if (fd <= 0 || !buf || space_left <= 0)\n+    return -1;\n+\n+  memset (buf, 0, space_left);\n+\n+  readlen = foo ();\n+  if (!(data = malloc (readlen * sizeof (char) + 1)))\n+    return -1;\n+\n+  c = data;\n+  space_left--;\n+\n+  while (len < space_left)\n+    {\n+      if (!c || *c == '\\0')\n+\tbreak;\n+      else if (*c == 'I')\n+\t{\n+\t  d = c + 4;\n+\n+\t  k = 0;\n+\t  while (d[k] != '\\r' && d[k] != '\\n' && d[k] != '\\0')\n+\t    ++k;\n+\t  if (k >= space_left)\n+\t    return len;\n+\n+\n+\t  memcpy (buf + len, c, 4);\n+\t  len += 4;\n+\n+\n+\t  long2str (buf + len, k + 1);\n+\t  len += 4;\n+\n+\n+\t  memcpy (buf + len, d, k);\n+\n+\t  *(buf + len + k + 1) = '\\0';\n+\n+\n+\t  if ((k + 1) & 1)\n+\t    {\n+\t      k++;\n+\t      *(buf + len + k + 1) = '\\0';\n+\t    }\n+\t  len += k + 1;\n+\n+\n+\t  while (*c != '\\n' && *c != '\\0')\n+\t    ++c;\n+\t  if (*c != '\\0')\n+\t    ++c;\n+\t  else\n+\t    break;\n+\n+\t}\n+    }\n+  free (data);\n+\n+  return len;\n+}\n+\n+"}, {"sha": "e9e1c0b9e42e5ab62c11455a2990a13b7af46904", "filename": "gcc/tree-ssa-ccp.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/386cfa6f3f1aeba33362f4f3717c2df2980ade6c/gcc%2Ftree-ssa-ccp.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/386cfa6f3f1aeba33362f4f3717c2df2980ade6c/gcc%2Ftree-ssa-ccp.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-ccp.c?ref=386cfa6f3f1aeba33362f4f3717c2df2980ade6c", "patch": "@@ -2460,7 +2460,7 @@ execute_fold_all_builtins (void)\n \t\t  gcc_assert (ok);\n \t\t}\n \t    }\n-\t  update_stmt (*stmtp);\n+\t  mark_new_vars_to_rename (*stmtp);\n \t  if (maybe_clean_or_replace_eh_stmt (old_stmt, *stmtp)\n \t      && tree_purge_dead_eh_edges (bb))\n \t    cfg_changed = true;"}]}