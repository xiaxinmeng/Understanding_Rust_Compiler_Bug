{"sha": "556e0f21f46afeb19ad4881808eab186b676dc57", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTU2ZTBmMjFmNDZhZmViMTlhZDQ4ODE4MDhlYWIxODZiNjc2ZGM1Nw==", "commit": {"author": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "1998-02-19T00:04:36Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "1998-02-19T00:04:36Z"}, "message": "Fix doc typos.\n\nFrom-SVN: r18104", "tree": {"sha": "d0bc49ad3f508d937f5af8e2cd6dc3a36558dc27", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d0bc49ad3f508d937f5af8e2cd6dc3a36558dc27"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/556e0f21f46afeb19ad4881808eab186b676dc57", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/556e0f21f46afeb19ad4881808eab186b676dc57", "html_url": "https://github.com/Rust-GCC/gccrs/commit/556e0f21f46afeb19ad4881808eab186b676dc57", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/556e0f21f46afeb19ad4881808eab186b676dc57/comments", "author": null, "committer": null, "parents": [{"sha": "3875b31da7e22e83f5a5ca696e88a7c13f967b75", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3875b31da7e22e83f5a5ca696e88a7c13f967b75", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3875b31da7e22e83f5a5ca696e88a7c13f967b75"}], "stats": {"total": 10, "additions": 5, "deletions": 5}, "files": [{"sha": "e3e4ce5f35b9d48d24e6416c6ca2d7bc965a28c2", "filename": "gcc/md.texi", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/556e0f21f46afeb19ad4881808eab186b676dc57/gcc%2Fmd.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/556e0f21f46afeb19ad4881808eab186b676dc57/gcc%2Fmd.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fmd.texi?ref=556e0f21f46afeb19ad4881808eab186b676dc57", "patch": "@@ -1669,7 +1669,7 @@ now in existence use constraints.\n Here is a table of the instruction names that are meaningful in the RTL\n generation pass of the compiler.  Giving one of these names to an\n instruction pattern tells the RTL generation pass that it can use the\n-pattern in to accomplish a certain task.\n+pattern to accomplish a certain task.\n \n @table @asis\n @cindex @code{mov@var{m}} instruction pattern"}, {"sha": "168ee404db9920591ca4c5aa1a1a65fe11f7d4e1", "filename": "gcc/tm.texi", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/556e0f21f46afeb19ad4881808eab186b676dc57/gcc%2Ftm.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/556e0f21f46afeb19ad4881808eab186b676dc57/gcc%2Ftm.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftm.texi?ref=556e0f21f46afeb19ad4881808eab186b676dc57", "patch": "@@ -2314,7 +2314,7 @@ allocation has been done (for example, because the saved registers are\n between these two locations).  On those machines, define\n @code{FRAME_POINTER_REGNUM} the number of a special, fixed register to\n be used internally until the offset is known, and define\n-@code{HARD_FRAME_POINTER_REGNUM} to be actual the hard register number\n+@code{HARD_FRAME_POINTER_REGNUM} to be the actual hard register number\n used for the frame pointer.\n \n You should define this macro only in the very rare circumstances when it\n@@ -5975,7 +5975,7 @@ operands to @code{asm_fprintf}.\n \n Define the macros @code{REGISTER_PREFIX}, @code{LOCAL_LABEL_PREFIX},\n @code{USER_LABEL_PREFIX} and @code{IMMEDIATE_PREFIX} if you can express\n-the variations in assemble language syntax with that mechanism.  Define\n+the variations in assembly language syntax with that mechanism.  Define\n @code{ASSEMBLER_DIALECT} and use the @samp{@{option0|option1@}} syntax\n if the syntax variant are larger and involve such things as different\n opcodes or operand order.\n@@ -6183,7 +6183,7 @@ expression of type @code{int}.\n @findex ASM_NO_SKIP_IN_TEXT\n @item ASM_NO_SKIP_IN_TEXT\n Define this macro if @code{ASM_OUTPUT_SKIP} should not be used in the\n-text section because it fails put zeros in the bytes that are skipped.\n+text section because it fails to put zeros in the bytes that are skipped.\n This is true on many Unix systems, where the pseudo--op to skip bytes\n produces no-op instructions rather than zeros when used in the text\n section.\n@@ -6829,7 +6829,7 @@ incorrect definitions that omit an rtl code that may be matched by the\n predicate can cause the compiler to malfunction).  Instead, it allows\n the table built by @file{genrecog} to be more compact and efficient,\n thus speeding up the compiler.  The most important predicates to include\n-in the list specified by this macro are thoses used in the most insn\n+in the list specified by this macro are those used in the most insn\n patterns.\n \n @findex CASE_VECTOR_MODE"}]}