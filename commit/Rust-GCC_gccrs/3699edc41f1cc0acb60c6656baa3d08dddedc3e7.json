{"sha": "3699edc41f1cc0acb60c6656baa3d08dddedc3e7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzY5OWVkYzQxZjFjYzBhY2I2MGM2NjU2YmFhM2QwOGRkZGVkYzNlNw==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2013-09-10T15:02:33Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2013-09-10T15:02:33Z"}, "message": "[multiple changes]\n\n2013-09-10  Thomas Quinot  <quinot@adacore.com>\n\n\t* adaint.c (__gnat_is_executable_file_attr): Should be true\n\tfor an executable regular file only only (not for a directory\n\tthat has the executable permission).\n\n2013-09-10  Ed Schonberg  <schonberg@adacore.com>\n\n\t* sem_res.adb: Further work on operator calls in ASIS.\n\n2013-09-10  Yannick Moy  <moy@adacore.com>\n\n\t* sinfo.ads, sem_prag.ads, sem_ch13.adb: Minor correction and comment\n\tupdate.\n\nFrom-SVN: r202459", "tree": {"sha": "2c817b19f453cea2fbcdaf67c1d047c212e3dcae", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2c817b19f453cea2fbcdaf67c1d047c212e3dcae"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3699edc41f1cc0acb60c6656baa3d08dddedc3e7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3699edc41f1cc0acb60c6656baa3d08dddedc3e7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3699edc41f1cc0acb60c6656baa3d08dddedc3e7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3699edc41f1cc0acb60c6656baa3d08dddedc3e7/comments", "author": null, "committer": null, "parents": [{"sha": "860917b625a20ed2cc2d72bd86e89717966f6f92", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/860917b625a20ed2cc2d72bd86e89717966f6f92", "html_url": "https://github.com/Rust-GCC/gccrs/commit/860917b625a20ed2cc2d72bd86e89717966f6f92"}], "stats": {"total": 45, "additions": 31, "deletions": 14}, "files": [{"sha": "cbf0079482819d9b9d77a5374f179a31701cf604", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3699edc41f1cc0acb60c6656baa3d08dddedc3e7/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3699edc41f1cc0acb60c6656baa3d08dddedc3e7/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=3699edc41f1cc0acb60c6656baa3d08dddedc3e7", "patch": "@@ -1,3 +1,18 @@\n+2013-09-10  Thomas Quinot  <quinot@adacore.com>\n+\n+\t* adaint.c (__gnat_is_executable_file_attr): Should be true\n+\tfor an executable regular file only only (not for a directory\n+\tthat has the executable permission).\n+\n+2013-09-10  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* sem_res.adb: Further work on operator calls in ASIS.\n+\n+2013-09-10  Yannick Moy  <moy@adacore.com>\n+\n+\t* sinfo.ads, sem_prag.ads, sem_ch13.adb: Minor correction and comment\n+\tupdate.\n+\n 2013-09-10  Thomas Quinot  <quinot@adacore.com>\n \n \t* aspects.ads, sem_ch13.adb: Minor reformatting."}, {"sha": "f76edb739954e4558f1d82ee239048bef58b3498", "filename": "gcc/ada/adaint.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3699edc41f1cc0acb60c6656baa3d08dddedc3e7/gcc%2Fada%2Fadaint.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3699edc41f1cc0acb60c6656baa3d08dddedc3e7/gcc%2Fada%2Fadaint.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fadaint.c?ref=3699edc41f1cc0acb60c6656baa3d08dddedc3e7", "patch": "@@ -2264,7 +2264,7 @@ __gnat_is_executable_file_attr (char* name, struct file_attributes* attr)\n #endif\n    }\n \n-   return attr->executable;\n+   return attr->regular && attr->executable;\n }\n \n int"}, {"sha": "40cc72957d5f2beaf547ca4469c5b594a2dd4e76", "filename": "gcc/ada/sem_ch13.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3699edc41f1cc0acb60c6656baa3d08dddedc3e7/gcc%2Fada%2Fsem_ch13.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3699edc41f1cc0acb60c6656baa3d08dddedc3e7/gcc%2Fada%2Fsem_ch13.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch13.adb?ref=3699edc41f1cc0acb60c6656baa3d08dddedc3e7", "patch": "@@ -1378,7 +1378,7 @@ package body Sem_Ch13 is\n                if Is_Ignored (Aspect) then\n                   Set_Is_Ignored (Aitem);\n                elsif Is_Checked (Aspect) then\n-                  Set_Is_Checked (Aspect);\n+                  Set_Is_Checked (Aitem);\n                end if;\n \n                Set_Corresponding_Aspect (Aitem, Aspect);\n@@ -1396,7 +1396,7 @@ package body Sem_Ch13 is\n \n             --  Skip looking at aspect if it is totally disabled. Just mark\n             --  it as such for later reference in the tree. This also sets\n-            --  the Is_Ignored flag appropriately.\n+            --  the Is_Ignored and Is_Checked flags appropriately.\n \n             Check_Applicable_Policy (Aspect);\n "}, {"sha": "ecfb3eda75a6c646ff6120511d5c2b4ec3d1730e", "filename": "gcc/ada/sem_prag.ads", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3699edc41f1cc0acb60c6656baa3d08dddedc3e7/gcc%2Fada%2Fsem_prag.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3699edc41f1cc0acb60c6656baa3d08dddedc3e7/gcc%2Fada%2Fsem_prag.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_prag.ads?ref=3699edc41f1cc0acb60c6656baa3d08dddedc3e7", "patch": "@@ -76,9 +76,10 @@ package Sem_Prag is\n    --  If the name is a valid assertion kind name, then the Check_Policy pragma\n    --  chain is checked for a matching entry (or for an Assertion entry which\n    --  matches all possibilities). If a matching entry is found then the policy\n-   --  is checked. If it is Off, Ignore, or Disable, then the Is_Ignored flag\n-   --  is set in the aspect or pragma node. Additionally for policy Disable,\n-   --  the Is_Disabled flag is set.\n+   --  is checked. If it is On or Check, then the Is_Checked flag is set in\n+   --  the aspect or pragma node. If it is Off, Ignore, or Disable, then the\n+   --  Is_Ignored flag is set in the aspect or pragma node. Additionally for\n+   --  policy Disable, the Is_Disabled flag is set.\n    --\n    --  If no matching Check_Policy pragma is found then the effect depends on\n    --  whether -gnata was used, if so, then the call has no effect, otherwise"}, {"sha": "e08370e782433afdaa64a02efc0f5f2b1ebeadc5", "filename": "gcc/ada/sem_res.adb", "status": "modified", "additions": 8, "deletions": 7, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3699edc41f1cc0acb60c6656baa3d08dddedc3e7/gcc%2Fada%2Fsem_res.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3699edc41f1cc0acb60c6656baa3d08dddedc3e7/gcc%2Fada%2Fsem_res.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_res.adb?ref=3699edc41f1cc0acb60c6656baa3d08dddedc3e7", "patch": "@@ -1583,15 +1583,16 @@ package body Sem_Res is\n \n       if ASIS_Mode and then Nkind (N) in N_Op then\n          if Is_Binary then\n-            Set_Parameter_Associations\n-              (Original_Node (N),\n-               New_List (New_Copy_Tree (Left_Opnd (N)),\n-                         New_Copy_Tree (Right_Opnd (N))));\n+            Rewrite (First (Parameter_Associations (Original_Node (N))),\n+               New_Copy_Tree (Left_Opnd (N)));\n+            Rewrite (Next (First (Parameter_Associations (Original_Node (N)))),\n+               New_Copy_Tree (Right_Opnd (N)));\n          else\n-            Set_Parameter_Associations\n-              (Original_Node (N),\n-               New_List (New_Copy_Tree (Right_Opnd (N))));\n+            Rewrite (First (Parameter_Associations (Original_Node (N))),\n+               New_Copy_Tree (Right_Opnd (N)));\n          end if;\n+\n+         Set_Parent (Original_Node (N), Parent (N));\n       end if;\n    end Make_Call_Into_Operator;\n "}, {"sha": "78ab2c19434f60d6673cb0cb3702331614a3521f", "filename": "gcc/ada/sinfo.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3699edc41f1cc0acb60c6656baa3d08dddedc3e7/gcc%2Fada%2Fsinfo.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3699edc41f1cc0acb60c6656baa3d08dddedc3e7/gcc%2Fada%2Fsinfo.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsinfo.ads?ref=3699edc41f1cc0acb60c6656baa3d08dddedc3e7", "patch": "@@ -1272,7 +1272,7 @@ package Sinfo is\n    --  Is_Checked (Flag11-Sem)\n    --    Present in N_Aspect_Specification and N_Pragma nodes. Set for an\n    --    assertion aspect or pragma, or check pragma for an assertion, that\n-   --    is to be checked at run - time. If either Is_Checked or Is_Ignored\n+   --    is to be checked at run time. If either Is_Checked or Is_Ignored\n    --    is set (they cannot both be set), then this means that the status of\n    --    the pragma has been checked at the appropriate point and should not\n    --    be further modified (in some cases these flags are copied when a"}]}