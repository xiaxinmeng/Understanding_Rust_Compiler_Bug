{"sha": "2f1e0b61936bee94c65d1c935e2f43a8d46cf9da", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmYxZTBiNjE5MzZiZWU5NGM2NWQxYzkzNWUyZjQzYThkNDZjZjlkYQ==", "commit": {"author": {"name": "Emmanuel Briot", "email": "briot@adacore.com", "date": "2009-04-22T15:10:29Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2009-04-22T15:10:29Z"}, "message": "make.adb, [...] (Create_Mapping_File): merge the two versions for Ada_Only and Multi_Language modes...\n\n2009-04-22  Emmanuel Briot  <briot@adacore.com>\n\n\t* make.adb, prj-env.adb, prj-env.ads, prj-nmsc.adb, prj.adb,\n\tprj.ads (Create_Mapping_File): merge the two versions for Ada_Only and\n\tMulti_Language modes, to avoid code duplication.\n\t(Project_Data.Include_Language): Removed.\n\nFrom-SVN: r146586", "tree": {"sha": "56d2525a633fec20ff809ad445013ce09c7ef8e6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/56d2525a633fec20ff809ad445013ce09c7ef8e6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2f1e0b61936bee94c65d1c935e2f43a8d46cf9da", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2f1e0b61936bee94c65d1c935e2f43a8d46cf9da", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2f1e0b61936bee94c65d1c935e2f43a8d46cf9da", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2f1e0b61936bee94c65d1c935e2f43a8d46cf9da/comments", "author": {"login": "briot", "id": 42402, "node_id": "MDQ6VXNlcjQyNDAy", "avatar_url": "https://avatars.githubusercontent.com/u/42402?v=4", "gravatar_id": "", "url": "https://api.github.com/users/briot", "html_url": "https://github.com/briot", "followers_url": "https://api.github.com/users/briot/followers", "following_url": "https://api.github.com/users/briot/following{/other_user}", "gists_url": "https://api.github.com/users/briot/gists{/gist_id}", "starred_url": "https://api.github.com/users/briot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/briot/subscriptions", "organizations_url": "https://api.github.com/users/briot/orgs", "repos_url": "https://api.github.com/users/briot/repos", "events_url": "https://api.github.com/users/briot/events{/privacy}", "received_events_url": "https://api.github.com/users/briot/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "35afb0125671933617554b0c4acc290dcfb28bf3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/35afb0125671933617554b0c4acc290dcfb28bf3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/35afb0125671933617554b0c4acc290dcfb28bf3"}], "stats": {"total": 371, "additions": 124, "deletions": 247}, "files": [{"sha": "235cf5386c6338b9f7bbb0d3dd73b0422e7fcbd9", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2f1e0b61936bee94c65d1c935e2f43a8d46cf9da/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2f1e0b61936bee94c65d1c935e2f43a8d46cf9da/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=2f1e0b61936bee94c65d1c935e2f43a8d46cf9da", "patch": "@@ -1,3 +1,10 @@\n+2009-04-22  Emmanuel Briot  <briot@adacore.com>\n+\n+\t* make.adb, prj-env.adb, prj-env.ads, prj-nmsc.adb, prj.adb,\n+\tprj.ads (Create_Mapping_File): merge the two versions for Ada_Only and\n+\tMulti_Language modes, to avoid code duplication.\n+\t(Project_Data.Include_Language): Removed.\n+\n 2009-04-22  Vincent Celier  <celier@adacore.com>\n \n \t* tempdir.adb (Create_Temp_File): Add a diagnostic in verbose mode when"}, {"sha": "168e4f3643d46ca4d670fc2e780744d776103e30", "filename": "gcc/ada/make.adb", "status": "modified", "additions": 6, "deletions": 4, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2f1e0b61936bee94c65d1c935e2f43a8d46cf9da/gcc%2Fada%2Fmake.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2f1e0b61936bee94c65d1c935e2f43a8d46cf9da/gcc%2Fada%2Fmake.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fmake.adb?ref=2f1e0b61936bee94c65d1c935e2f43a8d46cf9da", "patch": "@@ -6380,7 +6380,7 @@ package body Make is\n                                     Library_Paths.Table (Index).all);\n                               end loop;\n \n-                              --  One switch for the standard GNAT library dir.\n+                              --  One switch for the standard GNAT library dir\n \n                               Linker_Switches.Increment_Last;\n                               Linker_Switches.Table\n@@ -6809,9 +6809,11 @@ package body Make is\n \n       if Project /= No_Project then\n          Prj.Env.Create_Mapping_File\n-           (Project, Project_Tree,\n-            The_Mapping_File_Names\n-              (Project, Last_Mapping_File_Names (Project)));\n+           (Project,\n+            In_Tree  => Project_Tree,\n+            Language => No_Name,\n+            Name     => The_Mapping_File_Names\n+                          (Project, Last_Mapping_File_Names (Project)));\n \n       --  Otherwise, just create an empty file\n "}, {"sha": "3b0b1e51e00735fb8bf2cfa58e918ed340358575", "filename": "gcc/ada/prj-env.adb", "status": "modified", "additions": 88, "deletions": 214, "changes": 302, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2f1e0b61936bee94c65d1c935e2f43a8d46cf9da/gcc%2Fada%2Fprj-env.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2f1e0b61936bee94c65d1c935e2f43a8d46cf9da/gcc%2Fada%2Fprj-env.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-env.adb?ref=2f1e0b61936bee94c65d1c935e2f43a8d46cf9da", "patch": "@@ -57,14 +57,9 @@ package body Prj.Env is\n    --  platforms, except on VMS where the logical names are deassigned, thus\n    --  avoiding the pollution of the environment of the caller.\n \n-   Default_Naming : constant Naming_Id := Naming_Table.First;\n-\n+   Default_Naming    : constant Naming_Id := Naming_Table.First;\n    Fill_Mapping_File : Boolean := True;\n \n-   type Project_Flags is array (Project_Id range <>) of Boolean;\n-   --  A Boolean array type used in Create_Mapping_File to select the projects\n-   --  in the closure of a specific project.\n-\n    -----------------------\n    -- Local Subprograms --\n    -----------------------\n@@ -1041,22 +1036,24 @@ package body Prj.Env is\n    -------------------------\n \n    procedure Create_Mapping_File\n-     (Project : Project_Id;\n-      In_Tree : Project_Tree_Ref;\n-      Name    : out Path_Name_Type)\n+     (Project  : Project_Id;\n+      Language : Name_Id := No_Name;\n+      In_Tree  : Project_Tree_Ref;\n+      Name     : out Path_Name_Type)\n    is\n-      File          : File_Descriptor := Invalid_FD;\n-      The_Unit_Data : Unit_Data;\n-      Data          : File_Name_Data;\n-\n+      File   : File_Descriptor := Invalid_FD;\n       Status : Boolean;\n-      --  For call to Close\n \n-      Present       : Project_Flags\n-        (No_Project .. Project_Table.Last (In_Tree.Projects)) :=\n-        (others => False);\n+      Present : array (No_Project .. Project_Table.Last (In_Tree.Projects))\n+                  of Boolean := (others => False);\n       --  For each project in the closure of Project, the corresponding flag\n-      --  will be set to True;\n+      --  will be set to True.\n+\n+      Source        : Source_Id;\n+      Src_Data      : Source_Data;\n+      Suffix        : File_Name_Type;\n+      The_Unit_Data : Unit_Data;\n+      Data          : File_Name_Data;\n \n       procedure Put_Name_Buffer;\n       --  Put the line contained in the Name_Buffer in the mapping file\n@@ -1082,7 +1079,7 @@ package body Prj.Env is\n          Last := Write (File, Name_Buffer (1)'Address, Name_Len);\n \n          if Last /= Name_Len then\n-            Prj.Com.Fail (\"Disk full\");\n+            Prj.Com.Fail (\"Disk full, cannot write mapping file\");\n          end if;\n       end Put_Name_Buffer;\n \n@@ -1116,7 +1113,6 @@ package body Prj.Env is\n \n          Get_Name_String (Data.Path.Name);\n          Put_Name_Buffer;\n-\n       end Put_Data;\n \n       --------------------\n@@ -1128,32 +1124,21 @@ package body Prj.Env is\n          Proj     : Project_Id;\n \n       begin\n-         --  Nothing to do for non existent project or project that has\n-         --  already been flagged.\n-\n-         if Prj = No_Project or else Present (Prj) then\n-            return;\n-         end if;\n-\n-         --  Flag the current project\n-\n-         Present (Prj) := True;\n-         Imported :=\n-           In_Tree.Projects.Table (Prj).Imported_Projects;\n-\n-         --  Call itself for each project directly imported\n+         --  Nothing to do for non existent project or project that has already\n+         --  been flagged.\n \n-         while Imported /= Empty_Project_List loop\n-            Proj :=\n-              In_Tree.Project_Lists.Table (Imported).Project;\n-            Imported :=\n-              In_Tree.Project_Lists.Table (Imported).Next;\n-            Recursive_Flag (Proj);\n-         end loop;\n+         if Prj /= No_Project and then not Present (Prj) then\n+            Present (Prj) := True;\n \n-         --  Call itself for an eventual project being extended\n+            Imported := In_Tree.Projects.Table (Prj).Imported_Projects;\n+            while Imported /= Empty_Project_List loop\n+               Proj     := In_Tree.Project_Lists.Table (Imported).Project;\n+               Imported := In_Tree.Project_Lists.Table (Imported).Next;\n+               Recursive_Flag (Proj);\n+            end loop;\n \n-         Recursive_Flag (In_Tree.Projects.Table (Prj).Extends);\n+            Recursive_Flag (In_Tree.Projects.Table (Prj).Extends);\n+         end if;\n       end Recursive_Flag;\n \n    --  Start of processing for Create_Mapping_File\n@@ -1180,201 +1165,90 @@ package body Prj.Env is\n          end if;\n       end if;\n \n-      if Fill_Mapping_File then\n+      if Language = No_Name then\n+         if Fill_Mapping_File then\n+            for Unit in 1 .. Unit_Table.Last (In_Tree.Units) loop\n+               The_Unit_Data := In_Tree.Units.Table (Unit);\n \n-         --  For all units in table Units\n+               --  Case of unit has a valid name\n \n-         for Unit in 1 .. Unit_Table.Last (In_Tree.Units) loop\n-            The_Unit_Data := In_Tree.Units.Table (Unit);\n+               if The_Unit_Data.Name /= No_Name then\n+                  Data := The_Unit_Data.File_Names (Specification);\n \n-            --  If the unit has a valid name\n+                  --  If there is a spec, put it mapping in the file if it is\n+                  --  from a project in the closure of Project.\n \n-            if The_Unit_Data.Name /= No_Name then\n-               Data := The_Unit_Data.File_Names (Specification);\n-\n-               --  If there is a spec, put it mapping in the file if it is\n-               --  from a project in the closure of Project.\n-\n-               if Data.Name /= No_File and then Present (Data.Project) then\n-                  Put_Data (Spec => True);\n-               end if;\n+                  if Data.Name /= No_File and then Present (Data.Project) then\n+                     Put_Data (Spec => True);\n+                  end if;\n \n-               Data := The_Unit_Data.File_Names (Body_Part);\n+                  Data := The_Unit_Data.File_Names (Body_Part);\n \n-               --  If there is a body (or subunit) put its mapping in the file\n-               --  if it is from a project in the closure of Project.\n+                  --  If there is a body (or subunit) put its mapping in the\n+                  --  file if it is from a project in the closure of Project.\n \n-               if Data.Name /= No_File and then Present (Data.Project) then\n-                  Put_Data (Spec => False);\n+                  if Data.Name /= No_File and then Present (Data.Project) then\n+                     Put_Data (Spec => False);\n+                  end if;\n                end if;\n-\n-            end if;\n-         end loop;\n-      end if;\n-\n-      GNAT.OS_Lib.Close (File, Status);\n-\n-      if not Status then\n-         Prj.Com.Fail (\"disk full\");\n-      end if;\n-   end Create_Mapping_File;\n-\n-   procedure Create_Mapping_File\n-     (Project  : Project_Id;\n-      Language : Name_Id;\n-      In_Tree  : Project_Tree_Ref;\n-      Name     : out Path_Name_Type)\n-   is\n-      File : File_Descriptor := Invalid_FD;\n-\n-      Status : Boolean;\n-      --  For call to Close\n-\n-      Present : Project_Flags\n-                 (No_Project .. Project_Table.Last (In_Tree.Projects)) :=\n-                   (others => False);\n-      --  For each project in the closure of Project, the corresponding flag\n-      --  will be set to True.\n-\n-      Source   : Source_Id;\n-      Src_Data : Source_Data;\n-      Suffix   : File_Name_Type;\n-\n-      procedure Put_Name_Buffer;\n-      --  Put the line contained in the Name_Buffer in the mapping file\n-\n-      procedure Recursive_Flag (Prj : Project_Id);\n-      --  Set the flags corresponding to Prj, the projects it imports\n-      --  (directly or indirectly) or extends to True. Call itself recursively.\n-\n-      ---------\n-      -- Put --\n-      ---------\n-\n-      procedure Put_Name_Buffer is\n-         Last : Natural;\n-\n-      begin\n-         Name_Len := Name_Len + 1;\n-         Name_Buffer (Name_Len) := ASCII.LF;\n-         Last := Write (File, Name_Buffer (1)'Address, Name_Len);\n-\n-         if Last /= Name_Len then\n-            Prj.Com.Fail (\"Disk full\");\n-         end if;\n-      end Put_Name_Buffer;\n-\n-      --------------------\n-      -- Recursive_Flag --\n-      --------------------\n-\n-      procedure Recursive_Flag (Prj : Project_Id) is\n-         Imported : Project_List;\n-         Proj     : Project_Id;\n-\n-      begin\n-         --  Nothing to do for non existent project or project that has already\n-         --  been flagged.\n-\n-         if Prj = No_Project or else Present (Prj) then\n-            return;\n+            end loop;\n          end if;\n \n-         --  Flag the current project\n-\n-         Present (Prj) := True;\n-         Imported :=\n-           In_Tree.Projects.Table (Prj).Imported_Projects;\n-\n-         --  Call itself for each project directly imported\n-\n-         while Imported /= Empty_Project_List loop\n-            Proj :=\n-              In_Tree.Project_Lists.Table (Imported).Project;\n-            Imported :=\n-              In_Tree.Project_Lists.Table (Imported).Next;\n-            Recursive_Flag (Proj);\n-         end loop;\n-\n-         --  Call itself for an eventual project being extended\n-\n-         Recursive_Flag (In_Tree.Projects.Table (Prj).Extends);\n-      end Recursive_Flag;\n-\n-   --  Start of processing for Create_Mapping_File\n-\n-   begin\n-      --  Flag the necessary projects\n-\n-      Recursive_Flag (Project);\n-\n-      --  Create the temporary file\n-\n-      Tempdir.Create_Temp_File (File, Name => Name);\n-\n-      if File = Invalid_FD then\n-         Prj.Com.Fail (\"unable to create temporary mapping file\");\n-\n+      --  If language is defined\n       else\n-         Record_Temp_File (Name);\n-\n-         if Opt.Verbose_Mode then\n-            Write_Str (\"Creating temp mapping file \"\"\");\n-            Write_Str (Get_Name_String (Name));\n-            Write_Line (\"\"\"\");\n-         end if;\n-      end if;\n-\n-      --  For all source of the Language of all projects in the closure\n+         --  For all source of the Language of all projects in the closure\n+\n+         for Proj in Present'Range loop\n+            if Present (Proj) then\n+               Source := In_Tree.Projects.Table (Proj).First_Source;\n+               while Source /= No_Source loop\n+                  Src_Data := In_Tree.Sources.Table (Source);\n+\n+                  if In_Tree.Languages_Data.Table\n+                    (In_Tree.Sources.Table (Source).Language).Name = Language\n+                      and then not Src_Data.Locally_Removed\n+                      and then Src_Data.Replaced_By = No_Source\n+                      and then Src_Data.Path.Name /= No_Path\n+                  then\n+                     if Src_Data.Unit /= No_Name then\n+                        Get_Name_String (Src_Data.Unit);\n \n-      for Proj in Present'Range loop\n-         if Present (Proj) then\n-            Source := In_Tree.Projects.Table (Proj).First_Source;\n-            while Source /= No_Source loop\n-               Src_Data := In_Tree.Sources.Table (Source);\n+                        if Src_Data.Kind = Spec then\n+                           Suffix :=\n+                             In_Tree.Languages_Data.Table\n+                               (Src_Data.Language).Config.Mapping_Spec_Suffix;\n+                        else\n+                           Suffix :=\n+                             In_Tree.Languages_Data.Table\n+                               (Src_Data.Language).Config.Mapping_Body_Suffix;\n+                        end if;\n \n-               if In_Tree.Languages_Data.Table\n-                 (In_Tree.Sources.Table (Source).Language).Name = Language\n-                   and then not Src_Data.Locally_Removed\n-                   and then Src_Data.Replaced_By = No_Source\n-                   and then Src_Data.Path.Name /= No_Path\n-               then\n-                  if Src_Data.Unit /= No_Name then\n-                     Get_Name_String (Src_Data.Unit);\n+                        if Suffix /= No_File then\n+                           Add_Str_To_Name_Buffer (Get_Name_String (Suffix));\n+                        end if;\n \n-                     if Src_Data.Kind = Spec then\n-                        Suffix :=\n-                          In_Tree.Languages_Data.Table\n-                            (Src_Data.Language).Config.Mapping_Spec_Suffix;\n-                     else\n-                        Suffix :=\n-                          In_Tree.Languages_Data.Table\n-                            (Src_Data.Language).Config.Mapping_Body_Suffix;\n+                        Put_Name_Buffer;\n                      end if;\n \n-                     if Suffix /= No_File then\n-                        Add_Str_To_Name_Buffer (Get_Name_String (Suffix));\n-                     end if;\n+                     Get_Name_String (Src_Data.File);\n+                     Put_Name_Buffer;\n \n+                     Get_Name_String (Src_Data.Path.Name);\n                      Put_Name_Buffer;\n                   end if;\n \n-                  Get_Name_String (Src_Data.File);\n-                  Put_Name_Buffer;\n-\n-                  Get_Name_String (Src_Data.Path.Name);\n-                  Put_Name_Buffer;\n-               end if;\n-\n-               Source := Src_Data.Next_In_Project;\n-            end loop;\n-         end if;\n-      end loop;\n+                  Source := Src_Data.Next_In_Project;\n+               end loop;\n+            end if;\n+         end loop;\n+      end if;\n \n       GNAT.OS_Lib.Close (File, Status);\n \n       if not Status then\n-         Prj.Com.Fail (\"disk full\");\n+         Prj.Com.Fail (\"disk full, could not create mapping file\");\n+         --  Do we know this is disk full? Or could it be e.g. a protection\n+         --  problem of some kind preventing creation of the file ???\n       end if;\n    end Create_Mapping_File;\n "}, {"sha": "dbce7b648ca7d8637a6be06f464f7e77bb8c7089", "filename": "gcc/ada/prj-env.ads", "status": "modified", "additions": 19, "deletions": 23, "changes": 42, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2f1e0b61936bee94c65d1c935e2f43a8d46cf9da/gcc%2Fada%2Fprj-env.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2f1e0b61936bee94c65d1c935e2f43a8d46cf9da/gcc%2Fada%2Fprj-env.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-env.ads?ref=2f1e0b61936bee94c65d1c935e2f43a8d46cf9da", "patch": "@@ -40,31 +40,28 @@ package Prj.Env is\n    --  of package Fmap), so that Osint.Find_File will find the correct path\n    --  corresponding to a source.\n \n-   procedure Create_Mapping_File\n-     (Project : Project_Id;\n-      In_Tree : Project_Tree_Ref;\n-      Name    : out Path_Name_Type);\n-   --  Create a temporary mapping file for project Project. For each unit\n-   --  in the closure of immediate sources of Project, put the mapping of\n-   --  its spec and or body to its file name and path name in this file.\n-\n    procedure Create_Mapping_File\n      (Project  : Project_Id;\n-      Language : Name_Id;\n+      Language : Name_Id := No_Name;\n       In_Tree  : Project_Tree_Ref;\n       Name     : out Path_Name_Type);\n    --  Create a temporary mapping file for project Project. For each source or\n    --  template of Language in the Project, put the mapping of its file\n    --  name and path name in this file.\n    --\n+   --  This function either looks at all the source files for the specified\n+   --  language in the project, or if Language is set to No_Name, at all\n+   --  units in the project.\n+   --\n    --  Implementation note: we pass a language name, not a language_index here,\n    --  since the latter would have to match exactly the index of that language\n    --  for the specified project, and that is not information available in\n-   --  buildgpr.adb\n+   --  buildgpr.adb.\n \n    procedure Set_Mapping_File_Initial_State_To_Empty;\n-   --  When creating a mapping file, create an empty map. This case occurs\n-   --  when run time source files are found in the project files.\n+   --  When creating a mapping file, create an empty map. This case occurs when\n+   --  run time source files are found in the project files. This only applies\n+   --  to the Ada_Only mode.\n \n    procedure Create_Config_Pragmas_File\n      (For_Project          : Project_Id;\n@@ -97,11 +94,11 @@ package Prj.Env is\n      (Project   : Project_Id;\n       In_Tree   : Project_Tree_Ref;\n       Recursive : Boolean) return String;\n-   --  Get the source search path of a Project file. If Recursive it True,\n-   --  get all the source directories of the imported and modified project\n-   --  files (recursively). If Recursive is False, just get the path for the\n-   --  source directories of Project. Note: the resulting String may be empty\n-   --  if there is no source directory in the project file.\n+   --  Get the source search path of a Project file. If Recursive it True, get\n+   --  all the source directories of the imported and modified project files\n+   --  (recursively). If Recursive is False, just get the path for the source\n+   --  directories of Project. Note: the resulting String may be empty if there\n+   --  is no source directory in the project file.\n \n    function Ada_Objects_Path\n      (Project             : Project_Id;\n@@ -115,18 +112,17 @@ package Prj.Env is\n      (Project             : Project_Id;\n       In_Tree             : Project_Tree_Ref;\n       Including_Libraries : Boolean);\n-   --  Set the env vars for additional project path files, after\n+   --  Set the environment variables for additional project path files, after\n    --  creating the path files if necessary.\n \n    procedure Delete_All_Path_Files (In_Tree : Project_Tree_Ref);\n-   --  Delete all temporary path files that have been created by\n-   --  calls to Set_Ada_Paths.\n+   --  Delete all temporary path files that have been created by Set_Ada_Paths\n \n    function Path_Name_Of_Library_Unit_Body\n      (Name    : String;\n       Project : Project_Id;\n       In_Tree : Project_Tree_Ref) return String;\n-   --  Returns the Path of a library unit\n+   --  Returns the path of a library unit\n \n    function File_Name_Of_Library_Unit_Body\n      (Name              : String;\n@@ -169,8 +165,8 @@ package Prj.Env is\n    procedure For_All_Source_Dirs\n      (Project : Project_Id;\n       In_Tree : Project_Tree_Ref);\n-   --  Iterate through all the source directories of a project, including\n-   --  those of imported or modified projects.\n+   --  Iterate through all the source directories of a project, including those\n+   --  of imported or modified projects.\n \n    generic\n       with procedure Action (Path : String);"}, {"sha": "daff8ef30eeb128cd916db802f35986d7f243822", "filename": "gcc/ada/prj-nmsc.adb", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2f1e0b61936bee94c65d1c935e2f43a8d46cf9da/gcc%2Fada%2Fprj-nmsc.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2f1e0b61936bee94c65d1c935e2f43a8d46cf9da/gcc%2Fada%2Fprj-nmsc.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-nmsc.adb?ref=2f1e0b61936bee94c65d1c935e2f43a8d46cf9da", "patch": "@@ -72,9 +72,10 @@ package body Prj.Nmsc is\n       Except   : Boolean := False;\n       Found    : Boolean := False;\n    end record;\n-   --  Information about file names found in string list attribute\n-   --  Source_Files or in a source list file, stored in hash table\n+   --  Information about file names found in string list attribute:\n+   --  Source_Files or in a source list file, stored in hash table.\n    --  Source_Names, used by procedure Get_Path_Names_And_Record_Sources.\n+   --  Except is set to True if source is a naming exception in the project.\n \n    No_Name_Location : constant Name_Location :=\n                         (Name     => No_File,\n@@ -3264,7 +3265,7 @@ package body Prj.Nmsc is\n \n          Write_Attr (\"Body_Suffix\", Get_Name_String (Body_Suffix));\n \n-         --  We'll need the dot replacement below, so compute it now.\n+         --  We'll need the dot replacement below, so compute it now\n \n          Check_Common\n            (Dot_Replacement => Data.Naming.Dot_Replacement,"}, {"sha": "966f40870dbb25fce72efe6c7c4dd0eaa2363462", "filename": "gcc/ada/prj.adb", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2f1e0b61936bee94c65d1c935e2f43a8d46cf9da/gcc%2Fada%2Fprj.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2f1e0b61936bee94c65d1c935e2f43a8d46cf9da/gcc%2Fada%2Fprj.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj.adb?ref=2f1e0b61936bee94c65d1c935e2f43a8d46cf9da", "patch": "@@ -116,7 +116,6 @@ package body Prj is\n                       Imported_Directories_Switches  => null,\n                       Include_Path                   => null,\n                       Include_Data_Set               => False,\n-                      Include_Language               => No_Language_Index,\n                       Source_Dirs                    => Nil_String,\n                       Known_Order_Of_Source_Dirs     => True,\n                       Object_Directory               => No_Path_Information,"}, {"sha": "10d023b8e6599be084cb0b3c7ac6c6f6560ad0f1", "filename": "gcc/ada/prj.ads", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2f1e0b61936bee94c65d1c935e2f43a8d46cf9da/gcc%2Fada%2Fprj.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2f1e0b61936bee94c65d1c935e2f43a8d46cf9da/gcc%2Fada%2Fprj.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj.ads?ref=2f1e0b61936bee94c65d1c935e2f43a8d46cf9da", "patch": "@@ -1178,8 +1178,6 @@ package Prj is\n       --  The list of languages of the sources of this project\n       --  mode: Ada_Only\n \n-      Include_Language : Language_Index := No_Language_Index;\n-\n       First_Language_Processing : Language_Index := No_Language_Index;\n       --  First index of the language data in the project.\n       --  This is an index into the project_tree_data.languages_data"}]}