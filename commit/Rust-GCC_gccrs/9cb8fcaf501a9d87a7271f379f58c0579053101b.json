{"sha": "9cb8fcaf501a9d87a7271f379f58c0579053101b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OWNiOGZjYWY1MDFhOWQ4N2E3MjcxZjM3OWY1OGMwNTc5MDUzMTAxYg==", "commit": {"author": {"name": "Geoff Keating", "email": "geoffk@cygnus.com", "date": "2000-09-11T06:00:52Z"}, "committer": {"name": "Geoffrey Keating", "email": "geoffk@gcc.gnu.org", "date": "2000-09-11T06:00:52Z"}, "message": "aix.h (RS6000_ITRUNC): Moved from rs6000.h.\n\n\t* config/rs6000/aix.h (RS6000_ITRUNC): Moved from rs6000.h.\n\t(RS6000_UITRUNC): Likewise.\n\t(INIT_TARGET_OPTABS): New macro.\n\t* config/rs6000/rs6000.c (rs6000_trunc_used): Delete.\n\t(trunc_defined): Delete.\n\t(output_prolog): Don't output .extern definitions for fp->int\n\tconversion routines, ASM_OUTPUT_EXTERNAL_LIBCALL will do it.\n\t* config/rs6000/rs6000.h (rs6000_trunc_used): Delete.\n\t(trunc_defined): Delete.\n\t(RS6000_ITRUNC): Moved to aix.h.\n\t(RS6000_UITRUNC): Likewise.\n\t* config/rs6000/rs6000.md (fix_truncdfsi2): Fail if it would\n\tonly emit a libcall.\n\t(fixuns_truncdfsi2): Delete.\n\t(trunc_call): Delete.\n\t(trunc_call_rtl): Delete.\n\nFrom-SVN: r36310", "tree": {"sha": "a48921c91a591233c26e1604a1db0a35c708f619", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a48921c91a591233c26e1604a1db0a35c708f619"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9cb8fcaf501a9d87a7271f379f58c0579053101b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9cb8fcaf501a9d87a7271f379f58c0579053101b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9cb8fcaf501a9d87a7271f379f58c0579053101b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9cb8fcaf501a9d87a7271f379f58c0579053101b/comments", "author": null, "committer": null, "parents": [{"sha": "8f820299e3a349d39429bfe64bcbf22593369bf4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8f820299e3a349d39429bfe64bcbf22593369bf4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8f820299e3a349d39429bfe64bcbf22593369bf4"}], "stats": {"total": 121, "additions": 38, "deletions": 83}, "files": [{"sha": "26309fcd105f61c81c892f30e374a6deeeaaeae5", "filename": "gcc/ChangeLog", "status": "modified", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9cb8fcaf501a9d87a7271f379f58c0579053101b/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9cb8fcaf501a9d87a7271f379f58c0579053101b/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=9cb8fcaf501a9d87a7271f379f58c0579053101b", "patch": "@@ -1,3 +1,22 @@\n+2000-09-10  Geoff Keating  <geoffk@cygnus.com>\n+\n+\t* config/rs6000/aix.h (RS6000_ITRUNC): Moved from rs6000.h.\n+\t(RS6000_UITRUNC): Likewise.\n+\t(INIT_TARGET_OPTABS): New macro.\n+\t* config/rs6000/rs6000.c (rs6000_trunc_used): Delete.\n+\t(trunc_defined): Delete.\n+\t(output_prolog): Don't output .extern definitions for fp->int\n+\tconversion routines, ASM_OUTPUT_EXTERNAL_LIBCALL will do it.\n+\t* config/rs6000/rs6000.h (rs6000_trunc_used): Delete.\n+\t(trunc_defined): Delete.\n+\t(RS6000_ITRUNC): Moved to aix.h.\n+\t(RS6000_UITRUNC): Likewise.\n+\t* config/rs6000/rs6000.md (fix_truncdfsi2): Fail if it would\n+\tonly emit a libcall.\n+\t(fixuns_truncdfsi2): Delete.\n+\t(trunc_call): Delete.\n+\t(trunc_call_rtl): Delete.\n+\n 2000-09-10  Zack Weinberg  <zack@wolery.cumb.org>\n \n \t* varasm.c (make_decl_rtl): Restore leading star on"}, {"sha": "9c4e341833645c2981c5140a28949f8002812276", "filename": "gcc/config/rs6000/aix.h", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9cb8fcaf501a9d87a7271f379f58c0579053101b/gcc%2Fconfig%2Frs6000%2Faix.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9cb8fcaf501a9d87a7271f379f58c0579053101b/gcc%2Fconfig%2Frs6000%2Faix.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Faix.h?ref=9cb8fcaf501a9d87a7271f379f58c0579053101b", "patch": "@@ -275,6 +275,22 @@ toc_section ()\t\t\t\t\t\t\\\n /* Function name to call to do profiling.  */\n #define RS6000_MCOUNT \".__mcount\"\n \n+/* Function names to call to do floating point truncation.  */\n+\n+#define RS6000_ITRUNC \"__itrunc\"\n+#define RS6000_UITRUNC \"__uitrunc\"\n+\n+/* Optabs entries for the int->float routines, using the standard\n+   AIX names.  */\n+#define INIT_TARGET_OPTABS\t\t\t\t\t\t\\\n+  do {\t\t\t\t\t\t\t\t\t\\\n+    if (! TARGET_POWER2 && ! TARGET_POWERPC && TARGET_HARD_FLOAT)\t\\\n+      {\t\t\t\t\t\t\t\t\t\\\n+\tfixdfsi_libfunc = init_one_libfunc (RS6000_ITRUNC);\t\t\\\n+\tfixunsdfsi_libfunc = init_one_libfunc (RS6000_UITRUNC);\t\t\\\n+      }\t\t\t\t\t\t\t\t\t\\\n+  } while (0)\n+\n /* AIX always has a TOC.  */\n #define TARGET_NO_TOC\t\t0\n #define\tTARGET_TOC\t\t1"}, {"sha": "803c2db896556ca16e96f11d9ccc516715568929", "filename": "gcc/config/rs6000/rs6000.c", "status": "modified", "additions": 0, "deletions": 17, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9cb8fcaf501a9d87a7271f379f58c0579053101b/gcc%2Fconfig%2Frs6000%2Frs6000.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9cb8fcaf501a9d87a7271f379f58c0579053101b/gcc%2Fconfig%2Frs6000%2Frs6000.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.c?ref=9cb8fcaf501a9d87a7271f379f58c0579053101b", "patch": "@@ -63,15 +63,6 @@ struct rs6000_cpu_select rs6000_select[3] =\n   { (const char *)0,\t\"-mtune=\",\t\t1,\t0 },\n };\n \n-/* Set to non-zero by \"fix\" operation to indicate that itrunc and\n-   uitrunc must be defined.  */\n-\n-int rs6000_trunc_used;\n-\n-/* Set to non-zero once they have been defined.  */\n-\n-static int trunc_defined;\n-\n /* Set to non-zero once AIX common-mode calls have been defined.  */\n static int common_mode_defined;\n \n@@ -5794,14 +5785,6 @@ output_prolog (file, size)\n \t     SAVE_FP_PREFIX, info->first_fp_reg_save - 32, SAVE_FP_SUFFIX,\n \t     RESTORE_FP_PREFIX, info->first_fp_reg_save - 32, RESTORE_FP_SUFFIX);\n \n-  /* Write .extern for truncation routines, if needed.  */\n-  if (rs6000_trunc_used && ! trunc_defined)\n-    {\n-      fprintf (file, \"\\t.extern .%s\\n\\t.extern .%s\\n\",\n-\t       RS6000_ITRUNC, RS6000_UITRUNC);\n-      trunc_defined = 1;\n-    }\n-\n   /* Write .extern for AIX common mode routines, if needed.  */\n   if (! TARGET_POWER && ! TARGET_POWERPC && ! common_mode_defined)\n     {"}, {"sha": "543dceaa15dc1b3289f4ce4143408271c58b6be5", "filename": "gcc/config/rs6000/rs6000.h", "status": "modified", "additions": 0, "deletions": 11, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9cb8fcaf501a9d87a7271f379f58c0579053101b/gcc%2Fconfig%2Frs6000%2Frs6000.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9cb8fcaf501a9d87a7271f379f58c0579053101b/gcc%2Fconfig%2Frs6000%2Frs6000.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.h?ref=9cb8fcaf501a9d87a7271f379f58c0579053101b", "patch": "@@ -2302,17 +2302,6 @@ do {\t\t\t\t\t\t\t\t\t     \\\n \n extern struct rtx_def *rs6000_compare_op0, *rs6000_compare_op1;\n extern int rs6000_compare_fp_p;\n-\n-/* Set to non-zero by \"fix\" operation to indicate that itrunc and\n-   uitrunc must be defined.  */\n-\n-extern int rs6000_trunc_used;\n-\n-/* Function names to call to do floating point truncation.  */\n-\n-#define RS6000_ITRUNC \"__itrunc\"\n-#define RS6000_UITRUNC \"__uitrunc\"\n-\n \f\n /* Control the assembler format that we output.  */\n "}, {"sha": "132fb3c1ef7329ea9e4dab8b154807944d0bb1e4", "filename": "gcc/config/rs6000/rs6000.md", "status": "modified", "additions": 3, "deletions": 55, "changes": 58, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9cb8fcaf501a9d87a7271f379f58c0579053101b/gcc%2Fconfig%2Frs6000%2Frs6000.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9cb8fcaf501a9d87a7271f379f58c0579053101b/gcc%2Fconfig%2Frs6000%2Frs6000.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.md?ref=9cb8fcaf501a9d87a7271f379f58c0579053101b", "patch": "@@ -5339,16 +5339,9 @@\n \t\t   (fix:SI (match_operand:DF 1 \"gpc_reg_operand\" \"\")))\n \t      (clobber (match_dup 2))\n \t      (clobber (match_dup 3))])]\n-  \"TARGET_HARD_FLOAT\"\n+  \"(TARGET_POWER2 || TARGET_POWERPC) && TARGET_HARD_FLOAT\"\n   \"\n {\n-  if (! TARGET_POWER2 && ! TARGET_POWERPC)\n-    {\n-      emit_insn (gen_trunc_call (operands[0], operands[1],\n-\t\t\t\t gen_rtx_SYMBOL_REF (Pmode, RS6000_ITRUNC)));\n-      DONE;\n-    }\n-\n   operands[2] = gen_reg_rtx (DImode);\n   operands[3] = assign_stack_temp (DImode, GET_MODE_SIZE (DImode), 0);\n }\")\n@@ -5358,7 +5351,7 @@\n \t(fix:SI (match_operand:DF 1 \"gpc_reg_operand\" \"f\")))\n    (clobber (match_operand:DI 2 \"gpc_reg_operand\" \"=f\"))\n    (clobber (match_operand:DI 3 \"memory_operand\" \"=o\"))]\n-  \"TARGET_HARD_FLOAT\"\n+  \"(TARGET_POWER2 || TARGET_POWERPC) && TARGET_HARD_FLOAT\"\n   \"#\"\n   [(set_attr \"length\" \"16\")])\n \n@@ -5367,7 +5360,7 @@\n \t(fix:SI (match_operand:DF 1 \"gpc_reg_operand\" \"f\")))\n    (clobber (match_operand:DI 2 \"gpc_reg_operand\" \"\"))\n    (clobber (match_operand:DI 3 \"offsettable_mem_operand\" \"\"))]\n-  \"TARGET_HARD_FLOAT\"\n+  \"(TARGET_POWER2 || TARGET_POWERPC) && TARGET_HARD_FLOAT\"\n   [(set (match_operand:SI 0 \"gpc_reg_operand\" \"\")\n \t(fix:SI (match_operand:DF 1 \"gpc_reg_operand\" \"f\")))\n    (clobber (match_operand:DI 2 \"gpc_reg_operand\" \"\"))\n@@ -5387,51 +5380,6 @@\n   DONE;\n }\")\n \n-(define_expand \"fixuns_truncdfsi2\"\n-  [(set (match_operand:SI 0 \"gpc_reg_operand\" \"\")\n-\t(unsigned_fix:SI (match_operand:DF 1 \"gpc_reg_operand\" \"\")))]\n-  \"! TARGET_POWER2 && ! TARGET_POWERPC && TARGET_HARD_FLOAT\"\n-  \"\n-{\n-  emit_insn (gen_trunc_call (operands[0], operands[1],\n-\t\t\t     gen_rtx_SYMBOL_REF (Pmode, RS6000_UITRUNC)));\n-  DONE;\n-}\")\n-\n-(define_expand \"trunc_call\"\n-  [(parallel [(set (match_operand:SI 0 \"\" \"\")\n-\t\t   (fix:SI (match_operand:DF 1 \"\" \"\")))\n-\t      (use (match_operand:SI 2 \"\" \"\"))])]\n-  \"TARGET_HARD_FLOAT\"\n-  \"\n-{\n-  rtx insns = gen_trunc_call_rtl (operands[0], operands[1], operands[2]);\n-  rtx first = XVECEXP (insns, 0, 0);\n-  rtx last = XVECEXP (insns, 0, XVECLEN (insns, 0) - 1);\n-\n-  REG_NOTES (first) = gen_rtx_INSN_LIST (REG_LIBCALL, last,\n-\t\t\t\t\t REG_NOTES (first));\n-  REG_NOTES (last) = gen_rtx_INSN_LIST (REG_RETVAL, first, REG_NOTES (last));\n-\n-  emit_insn (insns);\n-  DONE;\n-}\")\n-\n-(define_expand \"trunc_call_rtl\"\n-  [(set (reg:DF 33) (match_operand:DF 1 \"gpc_reg_operand\" \"\"))\n-   (use (reg:DF 33))\n-   (parallel [(set (reg:SI 3)\n-\t\t   (call (mem:SI (match_operand 2 \"\" \"\")) (const_int 0)))\n-\t      (use (const_int 0))\n-\t      (clobber (scratch:SI))])\n-   (set (match_operand:SI 0 \"gpc_reg_operand\" \"\")\n-\t(reg:SI 3))]\n-  \"TARGET_HARD_FLOAT\"\n-  \"\n-{\n-  rs6000_trunc_used = 1;\n-}\")\n-\n ; Here, we use (set (reg) (unspec:DI [(fix:SI ...)] 10))\n ; rather than (set (subreg:SI (reg)) (fix:SI ...))\n ; because the first makes it clear that operand 0 is not live"}]}