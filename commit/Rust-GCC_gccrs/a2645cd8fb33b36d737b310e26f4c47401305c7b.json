{"sha": "a2645cd8fb33b36d737b310e26f4c47401305c7b", "node_id": "C_kwDOANBUbNoAKGEyNjQ1Y2Q4ZmIzM2IzNmQ3MzdiMzEwZTI2ZjRjNDc0MDEzMDVjN2I", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2022-03-15T08:12:03Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2022-03-15T08:12:03Z"}, "message": "ifcvt: Punt if not onlyjump_p for find_if_case_{1,2} [PR104814]\n\nfind_if_case_{1,2} implicitly assumes conditional jumps and rewrites them,\nso if they have extra side-effects or are say asm goto, things don't work\nwell, either the side-effects are lost or we could ICE.\nIn particular, the testcase below on s390x has there a doloop instruction\nthat decrements a register in addition to testing it for non-zero and\nconditionally jumping based on that.\n\nThe following patch fixes that by punting for !onlyjump_p case, i.e.\nif there are side-effects in the jump instruction or it isn't a plain PC\nsetter.\n\nAlso, it assumes BB_END (test_bb) will be always non-NULL, because basic\nblocks with 2 non-abnormal successor edges should always have some instruction\nat the end that determines which edge to take.\n\n2022-03-15  Jakub Jelinek  <jakub@redhat.com>\n\n\tPR rtl-optimization/104814\n\t* ifcvt.cc (find_if_case_1, find_if_case_2): Punt if test_bb doesn't\n\tend with onlyjump_p.  Assume BB_END (test_bb) is always non-NULL.\n\n\t* gcc.c-torture/execute/pr104814.c: New test.", "tree": {"sha": "f4f9ff1a7fd8a4b5e73f804393b4b6e5f435a148", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f4f9ff1a7fd8a4b5e73f804393b4b6e5f435a148"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a2645cd8fb33b36d737b310e26f4c47401305c7b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a2645cd8fb33b36d737b310e26f4c47401305c7b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a2645cd8fb33b36d737b310e26f4c47401305c7b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a2645cd8fb33b36d737b310e26f4c47401305c7b/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "373a2dc2be0089ae59b61202a6023458aaaf63d8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/373a2dc2be0089ae59b61202a6023458aaaf63d8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/373a2dc2be0089ae59b61202a6023458aaaf63d8"}], "stats": {"total": 44, "additions": 40, "deletions": 4}, "files": [{"sha": "22960a67f893316563e46658fab8f06cf9cbeb80", "filename": "gcc/ifcvt.cc", "status": "modified", "additions": 10, "deletions": 4, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a2645cd8fb33b36d737b310e26f4c47401305c7b/gcc%2Fifcvt.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a2645cd8fb33b36d737b310e26f4c47401305c7b/gcc%2Fifcvt.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fifcvt.cc?ref=a2645cd8fb33b36d737b310e26f4c47401305c7b", "patch": "@@ -5251,14 +5251,17 @@ find_if_case_1 (basic_block test_bb, edge then_edge, edge else_edge)\n   if ((BB_END (then_bb)\n        && JUMP_P (BB_END (then_bb))\n        && CROSSING_JUMP_P (BB_END (then_bb)))\n-      || (BB_END (test_bb)\n-\t  && JUMP_P (BB_END (test_bb))\n+      || (JUMP_P (BB_END (test_bb))\n \t  && CROSSING_JUMP_P (BB_END (test_bb)))\n       || (BB_END (else_bb)\n \t  && JUMP_P (BB_END (else_bb))\n \t  && CROSSING_JUMP_P (BB_END (else_bb))))\n     return FALSE;\n \n+  /* Verify test_bb ends in a conditional jump with no other side-effects.  */\n+  if (!onlyjump_p (BB_END (test_bb)))\n+    return FALSE;\n+\n   /* THEN has one successor.  */\n   if (!single_succ_p (then_bb))\n     return FALSE;\n@@ -5372,14 +5375,17 @@ find_if_case_2 (basic_block test_bb, edge then_edge, edge else_edge)\n   if ((BB_END (then_bb)\n        && JUMP_P (BB_END (then_bb))\n        && CROSSING_JUMP_P (BB_END (then_bb)))\n-      || (BB_END (test_bb)\n-\t  && JUMP_P (BB_END (test_bb))\n+      || (JUMP_P (BB_END (test_bb))\n \t  && CROSSING_JUMP_P (BB_END (test_bb)))\n       || (BB_END (else_bb)\n \t  && JUMP_P (BB_END (else_bb))\n \t  && CROSSING_JUMP_P (BB_END (else_bb))))\n     return FALSE;\n \n+  /* Verify test_bb ends in a conditional jump with no other side-effects.  */\n+  if (!onlyjump_p (BB_END (test_bb)))\n+    return FALSE;\n+\n   /* ELSE has one successor.  */\n   if (!single_succ_p (else_bb))\n     return FALSE;"}, {"sha": "7d4f8ab4b8c3e8ee69e4e2041f8adbea57375ecf", "filename": "gcc/testsuite/gcc.c-torture/execute/pr104814.c", "status": "added", "additions": 30, "deletions": 0, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a2645cd8fb33b36d737b310e26f4c47401305c7b/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr104814.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a2645cd8fb33b36d737b310e26f4c47401305c7b/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr104814.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr104814.c?ref=a2645cd8fb33b36d737b310e26f4c47401305c7b", "patch": "@@ -0,0 +1,30 @@\n+/* PR rtl-optimization/104814 */\n+\n+short a = 0;\n+static long b = 0;\n+int c = 7;\n+char d = 0;\n+short *e = &a;\n+long f = 0;\n+\n+unsigned long\n+foo (unsigned long h, long j)\n+{\n+  return j == 0 ? h : h / j;\n+}\n+\n+int\n+main ()\n+{\n+  long k = f;\n+  for (; c; --c)\n+    {\n+      for (int i = 0; i < 7; ++i)\n+\t;\n+      long m = foo (f, --b);\n+      d = ((char) m | *e) <= 43165;\n+    }\n+  if (b != -7)\n+    __builtin_abort ();\n+  return 0;\n+}"}]}