{"sha": "e1def31b3f923559eca94c97a61ba55809c49386", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTFkZWYzMWIzZjkyMzU1OWVjYTk0Yzk3YTYxYmE1NTgwOWM0OTM4Ng==", "commit": {"author": {"name": "Kaveh R. Ghazi", "email": "ghazi@caip.rutgers.edu", "date": "1999-08-29T13:47:37Z"}, "committer": {"name": "Kaveh Ghazi", "email": "ghazi@gcc.gnu.org", "date": "1999-08-29T13:47:37Z"}, "message": "cp-tree.h (fndecl_as_string, [...]): Constify a char*.\n\n\t* cp-tree.h (fndecl_as_string, type_as_string,\n\ttype_as_string_real, args_as_string, decl_as_string,\n\texpr_as_string, code_as_string, language_as_string,\n\tparm_as_string, op_as_string, assop_as_string, cv_as_string,\n\tlang_decl_name, cp_file_of, lang_printable_name): Constify a char*.\n\n\t* errfn.c (cp_printer): Likewise.\n\n\t* error.c (cp_printer, fndecl_as_string, type_as_string_real,\n\ttype_as_string, expr_as_string, decl_as_string, lang_decl_name,\n\tcp_file_of, code_as_string, language_as_string, parm_as_string,\n\top_as_string, assop_as_string, args_as_string, cv_as_string):\n\tLikewise.\n\n\t* tree.c (lang_printable_name): Likewise.\n\nFrom-SVN: r28968", "tree": {"sha": "ac2d4c357a01906eda158e5936dceb11f34498aa", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ac2d4c357a01906eda158e5936dceb11f34498aa"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e1def31b3f923559eca94c97a61ba55809c49386", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e1def31b3f923559eca94c97a61ba55809c49386", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e1def31b3f923559eca94c97a61ba55809c49386", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e1def31b3f923559eca94c97a61ba55809c49386/comments", "author": null, "committer": null, "parents": [{"sha": "fa74c0f64c4a7bc371f2c115ee41f7f2f276f7b6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fa74c0f64c4a7bc371f2c115ee41f7f2f276f7b6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fa74c0f64c4a7bc371f2c115ee41f7f2f276f7b6"}], "stats": {"total": 82, "additions": 50, "deletions": 32}, "files": [{"sha": "61cee8c03b3b5b26261762e2837d7b416a2beb5e", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e1def31b3f923559eca94c97a61ba55809c49386/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e1def31b3f923559eca94c97a61ba55809c49386/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=e1def31b3f923559eca94c97a61ba55809c49386", "patch": "@@ -1,3 +1,21 @@\n+1999-08-29  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n+\n+\t* cp-tree.h (fndecl_as_string, type_as_string,\n+\ttype_as_string_real, args_as_string, decl_as_string,\n+\texpr_as_string, code_as_string, language_as_string,\n+\tparm_as_string, op_as_string, assop_as_string, cv_as_string,\n+\tlang_decl_name, cp_file_of, lang_printable_name): Constify a char*.\n+\n+\t* errfn.c (cp_printer): Likewise.\n+\n+\t* error.c (cp_printer, fndecl_as_string, type_as_string_real,\n+\ttype_as_string, expr_as_string, decl_as_string, lang_decl_name,\n+\tcp_file_of, code_as_string, language_as_string, parm_as_string,\n+\top_as_string, assop_as_string, args_as_string, cv_as_string):\n+\tLikewise.\n+\n+\t* tree.c (lang_printable_name): Likewise.\n+\n 1999-08-28  Richard Henderson  <rth@cygnus.com>\n \n \t* decl2.c (arg_assoc_class): Bail if the class is a builtin type."}, {"sha": "2761324d18537803ef69769bdaeac705da0fca38", "filename": "gcc/cp/cp-tree.h", "status": "modified", "additions": 15, "deletions": 15, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e1def31b3f923559eca94c97a61ba55809c49386/gcc%2Fcp%2Fcp-tree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e1def31b3f923559eca94c97a61ba55809c49386/gcc%2Fcp%2Fcp-tree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcp-tree.h?ref=e1def31b3f923559eca94c97a61ba55809c49386", "patch": "@@ -3067,20 +3067,20 @@ extern void cp_deprecated                       PROTO((const char*));\n \n /* in error.c */\n extern void init_error\t\t\t\tPROTO((void));\n-extern char *fndecl_as_string\t\t\tPROTO((tree, int));\n-extern char *type_as_string\t\t\tPROTO((tree, int));\n-extern char *type_as_string_real\t\tPROTO((tree, int, int));\n-extern char *args_as_string\t\t\tPROTO((tree, int));\n-extern char *decl_as_string\t\t\tPROTO((tree, int));\n-extern char *expr_as_string\t\t\tPROTO((tree, int));\n-extern char *code_as_string\t\t\tPROTO((enum tree_code, int));\n-extern char *language_as_string\t\t\tPROTO((enum languages, int));\n-extern char *parm_as_string\t\t\tPROTO((int, int));\n-extern char *op_as_string\t\t\tPROTO((enum tree_code, int));\n-extern char *assop_as_string\t\t\tPROTO((enum tree_code, int));\n-extern char *cv_as_string\t\t\tPROTO((tree, int));\n-extern char *lang_decl_name\t\t\tPROTO((tree, int));\n-extern char *cp_file_of\t\t\t\tPROTO((tree));\n+extern const char *fndecl_as_string\t\tPROTO((tree, int));\n+extern const char *type_as_string\t\tPROTO((tree, int));\n+extern const char *type_as_string_real\t\tPROTO((tree, int, int));\n+extern const char *args_as_string\t\tPROTO((tree, int));\n+extern const char *decl_as_string\t\tPROTO((tree, int));\n+extern const char *expr_as_string\t\tPROTO((tree, int));\n+extern const char *code_as_string\t\tPROTO((enum tree_code, int));\n+extern const char *language_as_string\t\tPROTO((enum languages, int));\n+extern const char *parm_as_string\t\tPROTO((int, int));\n+extern const char *op_as_string\t\t\tPROTO((enum tree_code, int));\n+extern const char *assop_as_string\t\tPROTO((enum tree_code, int));\n+extern const char *cv_as_string\t\t\tPROTO((tree, int));\n+extern const char *lang_decl_name\t\tPROTO((tree, int));\n+extern const char *cp_file_of\t\t\tPROTO((tree));\n extern int cp_line_of\t\t\t\tPROTO((tree));\n \n /* in except.c */\n@@ -3459,7 +3459,7 @@ extern tree fnaddr_from_vtable_entry\t\tPROTO((tree));\n extern tree function_arg_chain\t\t\tPROTO((tree));\n extern int promotes_to_aggr_type\t\tPROTO((tree, enum tree_code));\n extern int is_aggr_type_2\t\t\tPROTO((tree, tree));\n-extern char *lang_printable_name\t\tPROTO((tree, int));\n+extern const char *lang_printable_name\t\tPROTO((tree, int));\n extern tree build_exception_variant\t\tPROTO((tree, tree));\n extern tree copy_template_template_parm\t\tPROTO((tree));\n extern tree copy_to_permanent\t\t\tPROTO((tree));"}, {"sha": "cc9f39bead194d87db242d46a497b2d556c038a2", "filename": "gcc/cp/errfn.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e1def31b3f923559eca94c97a61ba55809c49386/gcc%2Fcp%2Ferrfn.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e1def31b3f923559eca94c97a61ba55809c49386/gcc%2Fcp%2Ferrfn.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Ferrfn.c?ref=e1def31b3f923559eca94c97a61ba55809c49386", "patch": "@@ -30,7 +30,7 @@ Boston, MA 02111-1307, USA.  */\n    with all memory management; the functions in this file will not free\n    the char*s returned.  See error.c for an example use of this code.  */\n \n-typedef char* cp_printer PROTO((tree, int));\n+typedef const char *cp_printer PROTO((tree, int));\n extern cp_printer * cp_printers[256];\n \n /* Whether or not we should try to be quiet for errors and warnings; this is"}, {"sha": "c2a55e8fe9e0d379ee203cf2ee8e173a1e590c46", "filename": "gcc/cp/error.c", "status": "modified", "additions": 15, "deletions": 15, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e1def31b3f923559eca94c97a61ba55809c49386/gcc%2Fcp%2Ferror.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e1def31b3f923559eca94c97a61ba55809c49386/gcc%2Fcp%2Ferror.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Ferror.c?ref=e1def31b3f923559eca94c97a61ba55809c49386", "patch": "@@ -26,7 +26,7 @@ Boston, MA 02111-1307, USA.  */\n #include \"obstack.h\"\n #include \"toplev.h\"\n \n-typedef char* cp_printer ();\n+typedef const char *cp_printer ();\n \n #define A args_as_string\n #define C code_as_string\n@@ -1871,7 +1871,7 @@ dump_unary_op (opstring, t, nop)\n \n /* Print a function decl with exception specification included. */\n \n-char *\n+const char *\n fndecl_as_string (fndecl, print_default_args_p)\n      tree fndecl;\n      int print_default_args_p;\n@@ -1891,7 +1891,7 @@ fndecl_as_string (fndecl, print_default_args_p)\n    when describing a typedef, we use the name of the type described,\n    rather than the name of the typedef.  */\n \n-char *\n+const char *\n type_as_string_real (typ, v, canonical_name)\n      tree typ;\n      int v;\n@@ -1907,15 +1907,15 @@ type_as_string_real (typ, v, canonical_name)\n }\n \n \n-char *\n+const char *\n type_as_string (typ, v)\n      tree typ;\n      int v;\n {\n   return type_as_string_real (typ, v, 0);\n }\n \n-char *\n+const char *\n expr_as_string (decl, v)\n      tree decl;\n      int v ATTRIBUTE_UNUSED;\n@@ -1932,7 +1932,7 @@ expr_as_string (decl, v)\n /* A cross between type_as_string and fndecl_as_string.\n    Only called from substitute_nice_name.  */\n \n-char *\n+const char *\n decl_as_string (decl, v)\n      tree decl;\n      int v;\n@@ -1948,7 +1948,7 @@ decl_as_string (decl, v)\n \n /* Generate the three forms of printable names for lang_printable_name.  */\n \n-char *\n+const char *\n lang_decl_name (decl, v)\n      tree decl;\n      int v;\n@@ -1980,7 +1980,7 @@ lang_decl_name (decl, v)\n }\n   \n \n-char *\n+const char *\n cp_file_of (t)\n      tree t;\n {\n@@ -2018,15 +2018,15 @@ cp_line_of (t)\n   return line;\n }\n \n-char *\n+const char *\n code_as_string (c, v)\n      enum tree_code c;\n      int v ATTRIBUTE_UNUSED;\n {\n   return tree_code_name [c];\n }\n \n-char *\n+const char *\n language_as_string (c, v)\n      enum languages c;\n      int v ATTRIBUTE_UNUSED;\n@@ -2050,7 +2050,7 @@ language_as_string (c, v)\n \n /* Return the proper printed version of a parameter to a C++ function.  */\n \n-char *\n+const char *\n parm_as_string (p, v)\n      int p;\n      int v ATTRIBUTE_UNUSED;\n@@ -2062,7 +2062,7 @@ parm_as_string (p, v)\n   return digit_buffer;\n }\n \n-char *\n+const char *\n op_as_string (p, v)\n      enum tree_code p;\n      int v ATTRIBUTE_UNUSED;\n@@ -2076,7 +2076,7 @@ op_as_string (p, v)\n   return buf;\n }\n \n-char *\n+const char *\n assop_as_string (p, v)\n      enum tree_code p;\n      int v ATTRIBUTE_UNUSED;\n@@ -2090,7 +2090,7 @@ assop_as_string (p, v)\n   return buf;\n }\n \n-char *\n+const char *\n args_as_string (p, v)\n      tree p;\n      int v;\n@@ -2115,7 +2115,7 @@ args_as_string (p, v)\n   return (char *)obstack_base (&scratch_obstack);\n }\n \n-char *\n+const char *\n cv_as_string (p, v)\n      tree p;\n      int v ATTRIBUTE_UNUSED;"}, {"sha": "6857adaca79ef178ac9dd901907081ad9346ec55", "filename": "gcc/cp/tree.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e1def31b3f923559eca94c97a61ba55809c49386/gcc%2Fcp%2Ftree.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e1def31b3f923559eca94c97a61ba55809c49386/gcc%2Fcp%2Ftree.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Ftree.c?ref=e1def31b3f923559eca94c97a61ba55809c49386", "patch": "@@ -1460,7 +1460,7 @@ is_aggr_type_2 (t1, t2)\n \f\n #define PRINT_RING_SIZE 4\n \n-char *\n+const char *\n lang_printable_name (decl, v)\n      tree decl;\n      int v;"}]}