{"sha": "a615ca3e76df2e5c9339be12602306e53370a112", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTYxNWNhM2U3NmRmMmU1YzkzMzliZTEyNjAyMzA2ZTUzMzcwYTExMg==", "commit": {"author": {"name": "Richard Henderson", "email": "rth@redhat.com", "date": "2002-02-18T01:07:52Z"}, "committer": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "2002-02-18T01:07:52Z"}, "message": "alpha.c (some_small_symbolic_operand, [...]): Rename from *symbolic_mem_op*.\n\n        * config/alpha/alpha.c (some_small_symbolic_operand,\n        some_small_symbolic_operand_1, split_small_symbolic_operand,\n        split_small_symbolic_operand_1): Rename from *symbolic_mem_op*.\n        Handle small SYMBOL_REFs anywhere, not just inside memories.\n        * config/alpha/alpha-protos.h: Update.\n        * config/alpha/alpha.h (PREDICATE_CODES): Update.\n        * config/alpha/alpha.md (small symbolic operand splitter): Update.\n\nFrom-SVN: r49827", "tree": {"sha": "b7bc24270a6112a0f5e4abdabea5d20c49dce6ad", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b7bc24270a6112a0f5e4abdabea5d20c49dce6ad"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a615ca3e76df2e5c9339be12602306e53370a112", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a615ca3e76df2e5c9339be12602306e53370a112", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a615ca3e76df2e5c9339be12602306e53370a112", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a615ca3e76df2e5c9339be12602306e53370a112/comments", "author": null, "committer": null, "parents": [{"sha": "ddb284412e1e626ad8fb11e673e91953d2bc64fd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ddb284412e1e626ad8fb11e673e91953d2bc64fd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ddb284412e1e626ad8fb11e673e91953d2bc64fd"}], "stats": {"total": 61, "additions": 33, "deletions": 28}, "files": [{"sha": "e1b054cde4297ba65d15e66bfd0ff9c6e90ee901", "filename": "gcc/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a615ca3e76df2e5c9339be12602306e53370a112/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a615ca3e76df2e5c9339be12602306e53370a112/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=a615ca3e76df2e5c9339be12602306e53370a112", "patch": "@@ -1,3 +1,13 @@\n+2002-02-17  Richard Henderson  <rth@redhat.com>\n+\n+\t* config/alpha/alpha.c (some_small_symbolic_operand,\n+\tsome_small_symbolic_operand_1, split_small_symbolic_operand,\n+\tsplit_small_symbolic_operand_1): Rename from *symbolic_mem_op*.\n+\tHandle small SYMBOL_REFs anywhere, not just inside memories.\n+\t* config/alpha/alpha-protos.h: Update.\n+\t* config/alpha/alpha.h (PREDICATE_CODES): Update.\n+\t* config/alpha/alpha.md (small symbolic operand splitter): Update.\n+\n 2002-02-17  Roland McGrath  <roland@frob.com>\n \n \t* config.gcc (powerpc-*-gnu-gnualtivec*,"}, {"sha": "c6fdd042242e448a177d08239e9f5fb4a5d6975f", "filename": "gcc/config/alpha/alpha-protos.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a615ca3e76df2e5c9339be12602306e53370a112/gcc%2Fconfig%2Falpha%2Falpha-protos.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a615ca3e76df2e5c9339be12602306e53370a112/gcc%2Fconfig%2Falpha%2Falpha-protos.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Falpha%2Falpha-protos.h?ref=a615ca3e76df2e5c9339be12602306e53370a112", "patch": "@@ -59,7 +59,7 @@ extern int current_file_function_operand PARAMS ((rtx, enum machine_mode));\n extern int direct_call_operand PARAMS ((rtx, enum machine_mode));\n extern int local_symbolic_operand PARAMS ((rtx, enum machine_mode));\n extern int small_symbolic_operand PARAMS ((rtx, enum machine_mode));\n-extern int some_small_symbolic_mem_operand PARAMS ((rtx, enum machine_mode));\n+extern int some_small_symbolic_operand PARAMS ((rtx, enum machine_mode));\n extern int global_symbolic_operand PARAMS ((rtx, enum machine_mode));\n extern int call_operand PARAMS ((rtx, enum machine_mode));\n extern int symbolic_operand PARAMS ((rtx, enum machine_mode));\n@@ -90,7 +90,7 @@ extern rtx alpha_legitimize_address PARAMS ((rtx, rtx, enum machine_mode));\n extern rtx alpha_legitimize_reload_address PARAMS ((rtx, enum machine_mode,\n \t\t\t\t\t\t    int, int, int));\n \n-extern rtx split_small_symbolic_mem_operand PARAMS ((rtx));\n+extern rtx split_small_symbolic_operand PARAMS ((rtx));\n \n extern void get_aligned_mem PARAMS ((rtx, rtx *, rtx *));\n extern rtx get_unaligned_address PARAMS ((rtx, int));"}, {"sha": "0f4bd14eca3c80feec62fddd867e1d38387425fa", "filename": "gcc/config/alpha/alpha.c", "status": "modified", "additions": 17, "deletions": 23, "changes": 40, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a615ca3e76df2e5c9339be12602306e53370a112/gcc%2Fconfig%2Falpha%2Falpha.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a615ca3e76df2e5c9339be12602306e53370a112/gcc%2Fconfig%2Falpha%2Falpha.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Falpha%2Falpha.c?ref=a615ca3e76df2e5c9339be12602306e53370a112", "patch": "@@ -117,9 +117,9 @@ int alpha_this_gpdisp_sequence_number;\n /* Declarations of static functions.  */\n static bool decl_in_text_section\n   PARAMS ((tree));\n-static int some_small_symbolic_mem_operand_1\n+static int some_small_symbolic_operand_1\n   PARAMS ((rtx *, void *));\n-static int split_small_symbolic_mem_operand_1\n+static int split_small_symbolic_operand_1\n   PARAMS ((rtx *, void *));\n static bool local_symbol_p\n   PARAMS ((rtx));\n@@ -1875,61 +1875,55 @@ alpha_legitimize_address (x, scratch, mode)\n    so that sched2 has the proper dependency information.  */\n \n int\n-some_small_symbolic_mem_operand (x, mode)\n+some_small_symbolic_operand (x, mode)\n      rtx x;\n      enum machine_mode mode ATTRIBUTE_UNUSED;\n {\n-  return for_each_rtx (&x, some_small_symbolic_mem_operand_1, NULL);\n+  return for_each_rtx (&x, some_small_symbolic_operand_1, NULL);\n }\n \n static int\n-some_small_symbolic_mem_operand_1 (px, data)\n+some_small_symbolic_operand_1 (px, data)\n      rtx *px;\n      void *data ATTRIBUTE_UNUSED;\n {\n   rtx x = *px;\n \n-  if (GET_CODE (x) != MEM)\n-    return 0;\n-  x = XEXP (x, 0);\n-\n-  /* If this is an ldq_u type address, discard the outer AND.  */\n-  if (GET_CODE (x) == AND)\n-    x = XEXP (x, 0);\n+  /* Don't re-split.  */\n+  if (GET_CODE (x) == LO_SUM)\n+    return -1;\n \n-  return small_symbolic_operand (x, Pmode) ? 1 : -1;\n+  return small_symbolic_operand (x, Pmode) != 0;\n }\n \n rtx\n-split_small_symbolic_mem_operand (x)\n+split_small_symbolic_operand (x)\n      rtx x;\n {\n   x = copy_insn (x);\n-  for_each_rtx (&x, split_small_symbolic_mem_operand_1, NULL);\n+  for_each_rtx (&x, split_small_symbolic_operand_1, NULL);\n   return x;\n }\n \n static int\n-split_small_symbolic_mem_operand_1 (px, data)\n+split_small_symbolic_operand_1 (px, data)\n      rtx *px;\n      void *data ATTRIBUTE_UNUSED;\n {\n   rtx x = *px;\n \n-  if (GET_CODE (x) != MEM)\n-    return 0;\n-\n-  px = &XEXP (x, 0), x = *px;\n-  if (GET_CODE (x) == AND)\n-    px = &XEXP (x, 0), x = *px;\n+  /* Don't re-split.  */\n+  if (GET_CODE (x) == LO_SUM)\n+    return -1;\n \n   if (small_symbolic_operand (x, Pmode))\n     {\n       x = gen_rtx_LO_SUM (Pmode, pic_offset_table_rtx, x);\n       *px = x;\n+      return -1;\n     }\n \n-  return -1;\n+  return 0;\n }\n \n /* Try a machine-dependent way of reloading an illegitimate address"}, {"sha": "b2363bc1e4d3429596d45ac5f16f6a92640693e0", "filename": "gcc/config/alpha/alpha.h", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a615ca3e76df2e5c9339be12602306e53370a112/gcc%2Fconfig%2Falpha%2Falpha.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a615ca3e76df2e5c9339be12602306e53370a112/gcc%2Fconfig%2Falpha%2Falpha.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Falpha%2Falpha.h?ref=a615ca3e76df2e5c9339be12602306e53370a112", "patch": "@@ -2073,7 +2073,8 @@ do {\t\t\t\t\t\t\\\n   {\"reg_no_subreg_operand\", {REG}},\t\t\t\t\t\\\n   {\"addition_operation\", {PLUS}},\t\t\t\t\t\\\n   {\"symbolic_operand\", {SYMBOL_REF, LABEL_REF, CONST}},\t\t\t\\\n-  {\"some_small_symbolic_mem_operand\", {SET, PARALLEL}},\n+  {\"some_small_symbolic_operand\", {SET, PARALLEL, PREFETCH, UNSPEC,\t\\\n+\t\t\t\t   UNSPEC_VOLATILE}},\n \f\n /* Define the `__builtin_va_list' type for the ABI.  */\n #define BUILD_VA_LIST_TYPE(VALIST) \\"}, {"sha": "48ac0f775774b0728d9b5e895a7443ad853751fd", "filename": "gcc/config/alpha/alpha.md", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a615ca3e76df2e5c9339be12602306e53370a112/gcc%2Fconfig%2Falpha%2Falpha.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a615ca3e76df2e5c9339be12602306e53370a112/gcc%2Fconfig%2Falpha%2Falpha.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Falpha%2Falpha.md?ref=a615ca3e76df2e5c9339be12602306e53370a112", "patch": "@@ -5523,10 +5523,10 @@ fadd,fmul,fcpys,fdiv,fsqrt,misc,mvi,ftoi,itof,multi\"\n   \"operands[2] = pic_offset_table_rtx;\")\n \n (define_split\n-  [(match_operand 0 \"some_small_symbolic_mem_operand\" \"\")]\n+  [(match_operand 0 \"some_small_symbolic_operand\" \"\")]\n   \"TARGET_EXPLICIT_RELOCS && reload_completed\"\n   [(match_dup 0)]\n-  \"operands[0] = split_small_symbolic_mem_operand (operands[0]);\")\n+  \"operands[0] = split_small_symbolic_operand (operands[0]);\")\n \n (define_insn \"movdi_er_high_g\"\n   [(set (match_operand:DI 0 \"register_operand\" \"=r\")"}]}