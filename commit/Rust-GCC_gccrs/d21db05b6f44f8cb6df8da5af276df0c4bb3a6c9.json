{"sha": "d21db05b6f44f8cb6df8da5af276df0c4bb3a6c9", "node_id": "C_kwDOANBUbNoAKGQyMWRiMDViNmY0NGY4Y2I2ZGY4ZGE1YWYyNzZkZjBjNGJiM2E2Yzk", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2022-01-18T11:15:36Z"}, "committer": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2022-01-18T11:19:49Z"}, "message": "pack fields in cgraph_simd_clone_arg and struct function\n\nAs pointed out by pahole.\n\n2022-01-18  Richard Biener  <rguenther@suse.de>\n\n\t* cgraph.h (struct cgraph_simd_clone_arg): Re-arrange fields to\n\tavoid padding.\n\t* function.h (struct function): Likewise.", "tree": {"sha": "93844258e08af8d5dcd7561b8e5e67e2acf68575", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/93844258e08af8d5dcd7561b8e5e67e2acf68575"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d21db05b6f44f8cb6df8da5af276df0c4bb3a6c9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d21db05b6f44f8cb6df8da5af276df0c4bb3a6c9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d21db05b6f44f8cb6df8da5af276df0c4bb3a6c9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d21db05b6f44f8cb6df8da5af276df0c4bb3a6c9/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "abb748aaf3e1d25258949856d5b39f6ac90a8119", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/abb748aaf3e1d25258949856d5b39f6ac90a8119", "html_url": "https://github.com/Rust-GCC/gccrs/commit/abb748aaf3e1d25258949856d5b39f6ac90a8119"}], "stats": {"total": 20, "additions": 10, "deletions": 10}, "files": [{"sha": "43fc94e69eaa9655f8c2563d129333a19a3af21f", "filename": "gcc/cgraph.h", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d21db05b6f44f8cb6df8da5af276df0c4bb3a6c9/gcc%2Fcgraph.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d21db05b6f44f8cb6df8da5af276df0c4bb3a6c9/gcc%2Fcgraph.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcgraph.h?ref=d21db05b6f44f8cb6df8da5af276df0c4bb3a6c9", "patch": "@@ -764,14 +764,14 @@ struct GTY(()) cgraph_simd_clone_arg {\n      variable), uniform, or vector.  */\n   enum cgraph_simd_clone_arg_type arg_type;\n \n+  /* Variable alignment if available, otherwise 0.  */\n+  unsigned int alignment;\n+\n   /* For arg_type SIMD_CLONE_ARG_TYPE_LINEAR_*CONSTANT_STEP this is\n      the constant linear step, if arg_type is\n      SIMD_CLONE_ARG_TYPE_LINEAR_*VARIABLE_STEP, this is index of\n      the uniform argument holding the step, otherwise 0.  */\n   HOST_WIDE_INT linear_step;\n-\n-  /* Variable alignment if available, otherwise 0.  */\n-  unsigned int alignment;\n };\n \n /* Specific data for a SIMD function clone.  */"}, {"sha": "098613766bea42d2c77b2eddd9482fd5e4e0ba71", "filename": "gcc/function.h", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d21db05b6f44f8cb6df8da5af276df0c4bb3a6c9/gcc%2Ffunction.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d21db05b6f44f8cb6df8da5af276df0c4bb3a6c9/gcc%2Ffunction.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffunction.h?ref=d21db05b6f44f8cb6df8da5af276df0c4bb3a6c9", "patch": "@@ -270,13 +270,6 @@ struct GTY(()) function {\n   /* Value histograms attached to particular statements.  */\n   htab_t GTY((skip)) value_histograms;\n \n-  /* Different from normal TODO_flags which are handled right at the\n-     beginning or the end of one pass execution, the pending_TODOs\n-     are passed down in the pipeline until one of its consumers can\n-     perform the requested action.  Consumers should then clear the\n-     flags for the actions that they have taken.  */\n-  unsigned int pending_TODOs;\n-\n   /* For function.cc.  */\n \n   /* Points to the FUNCTION_DECL of this function.  */\n@@ -338,6 +331,13 @@ struct GTY(()) function {\n   unsigned int curr_properties;\n   unsigned int last_verified;\n \n+  /* Different from normal TODO_flags which are handled right at the\n+     beginning or the end of one pass execution, the pending_TODOs\n+     are passed down in the pipeline until one of its consumers can\n+     perform the requested action.  Consumers should then clear the\n+     flags for the actions that they have taken.  */\n+  unsigned int pending_TODOs;\n+\n   /* Non-null if the function does something that would prevent it from\n      being copied; this applies to both versioning and inlining.  Set to\n      a string describing the reason for failure.  */"}]}