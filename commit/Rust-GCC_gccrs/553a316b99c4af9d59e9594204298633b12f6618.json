{"sha": "553a316b99c4af9d59e9594204298633b12f6618", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTUzYTMxNmI5OWM0YWY5ZDU5ZTk1OTQyMDQyOTg2MzNiMTJmNjYxOA==", "commit": {"author": {"name": "David Malcolm", "email": "dmalcolm@redhat.com", "date": "2018-11-30T22:46:45Z"}, "committer": {"name": "David Malcolm", "email": "dmalcolm@gcc.gnu.org", "date": "2018-11-30T22:46:45Z"}, "message": "pretty-print.c: add selftest::test_prefixes_and_wrapping\n\ngcc/ChangeLog:\n\t* pretty-print.c (class selftest::test_pretty_printer): New\n\tsubclass of pretty_printer.\n\t(selftest::test_prefixes_and_wrapping): New test.\n\t(selftest::pretty_print_c_tests): Call it.\n\nFrom-SVN: r266695", "tree": {"sha": "168260d113bc624bec27096eac34175661bea86c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/168260d113bc624bec27096eac34175661bea86c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/553a316b99c4af9d59e9594204298633b12f6618", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/553a316b99c4af9d59e9594204298633b12f6618", "html_url": "https://github.com/Rust-GCC/gccrs/commit/553a316b99c4af9d59e9594204298633b12f6618", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/553a316b99c4af9d59e9594204298633b12f6618/comments", "author": {"login": "davidmalcolm", "id": 1553248, "node_id": "MDQ6VXNlcjE1NTMyNDg=", "avatar_url": "https://avatars.githubusercontent.com/u/1553248?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidmalcolm", "html_url": "https://github.com/davidmalcolm", "followers_url": "https://api.github.com/users/davidmalcolm/followers", "following_url": "https://api.github.com/users/davidmalcolm/following{/other_user}", "gists_url": "https://api.github.com/users/davidmalcolm/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidmalcolm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidmalcolm/subscriptions", "organizations_url": "https://api.github.com/users/davidmalcolm/orgs", "repos_url": "https://api.github.com/users/davidmalcolm/repos", "events_url": "https://api.github.com/users/davidmalcolm/events{/privacy}", "received_events_url": "https://api.github.com/users/davidmalcolm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "ed1b53a0abc298f13a89e2bb69cbedfb5c4dd6f9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ed1b53a0abc298f13a89e2bb69cbedfb5c4dd6f9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ed1b53a0abc298f13a89e2bb69cbedfb5c4dd6f9"}], "stats": {"total": 103, "additions": 103, "deletions": 0}, "files": [{"sha": "58b58865933da1b3de06bb6a554db2cd684dffb0", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/553a316b99c4af9d59e9594204298633b12f6618/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/553a316b99c4af9d59e9594204298633b12f6618/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=553a316b99c4af9d59e9594204298633b12f6618", "patch": "@@ -1,3 +1,10 @@\n+2018-11-30  David Malcolm  <dmalcolm@redhat.com>\n+\n+\t* pretty-print.c (class selftest::test_pretty_printer): New\n+\tsubclass of pretty_printer.\n+\t(selftest::test_prefixes_and_wrapping): New test.\n+\t(selftest::pretty_print_c_tests): Call it.\n+\n 2018-11-30  Michael Ploujnikov  <michael.ploujnikov@oracle.com>\n \n \tMinimize clone counter memory usage in create_virtual_clone."}, {"sha": "691dbb6045cabadc0ce373ae890f43041fbe4e37", "filename": "gcc/pretty-print.c", "status": "modified", "additions": 96, "deletions": 0, "changes": 96, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/553a316b99c4af9d59e9594204298633b12f6618/gcc%2Fpretty-print.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/553a316b99c4af9d59e9594204298633b12f6618/gcc%2Fpretty-print.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fpretty-print.c?ref=553a316b99c4af9d59e9594204298633b12f6618", "patch": "@@ -2217,13 +2217,109 @@ test_pp_format ()\n \t\t    \"problem with %qs at line %i\", \"bar\", 10);\n }\n \n+/* A subclass of pretty_printer for use by test_prefixes_and_wrapping.  */\n+\n+class test_pretty_printer : public pretty_printer\n+{\n+ public:\n+  test_pretty_printer (enum diagnostic_prefixing_rule_t rule,\n+\t\t       int max_line_length)\n+  {\n+    pp_set_prefix (this, xstrdup (\"PREFIX: \"));\n+    wrapping.rule = rule;\n+    pp_set_line_maximum_length (this, max_line_length);\n+  }\n+};\n+\n+/* Verify that the various values of enum diagnostic_prefixing_rule_t work\n+   as expected, with and without line wrapping.  */\n+\n+static void\n+test_prefixes_and_wrapping ()\n+{\n+  /* Tests of the various prefixing rules, without wrapping.\n+     Newlines embedded in pp_string don't affect it; we have to\n+     explicitly call pp_newline.  */\n+  {\n+    test_pretty_printer pp (DIAGNOSTICS_SHOW_PREFIX_ONCE, 0);\n+    pp_string (&pp, \"the quick brown fox\");\n+    pp_newline (&pp);\n+    pp_string (&pp, \"jumps over the lazy dog\");\n+    pp_newline (&pp);\n+    ASSERT_STREQ (pp_formatted_text (&pp),\n+\t\t  \"PREFIX: the quick brown fox\\n\"\n+\t\t  \"   jumps over the lazy dog\\n\");\n+  }\n+  {\n+    test_pretty_printer pp (DIAGNOSTICS_SHOW_PREFIX_NEVER, 0);\n+    pp_string (&pp, \"the quick brown fox\");\n+    pp_newline (&pp);\n+    pp_string (&pp, \"jumps over the lazy dog\");\n+    pp_newline (&pp);\n+    ASSERT_STREQ (pp_formatted_text (&pp),\n+\t\t  \"the quick brown fox\\n\"\n+\t\t  \"jumps over the lazy dog\\n\");\n+  }\n+  {\n+    test_pretty_printer pp (DIAGNOSTICS_SHOW_PREFIX_EVERY_LINE, 0);\n+    pp_string (&pp, \"the quick brown fox\");\n+    pp_newline (&pp);\n+    pp_string (&pp, \"jumps over the lazy dog\");\n+    pp_newline (&pp);\n+    ASSERT_STREQ (pp_formatted_text (&pp),\n+\t\t  \"PREFIX: the quick brown fox\\n\"\n+\t\t  \"PREFIX: jumps over the lazy dog\\n\");\n+  }\n+\n+  /* Tests of the various prefixing rules, with wrapping.  */\n+  {\n+    test_pretty_printer pp (DIAGNOSTICS_SHOW_PREFIX_ONCE, 20);\n+    pp_string (&pp, \"the quick brown fox jumps over the lazy dog\");\n+    pp_newline (&pp);\n+    pp_string (&pp, \"able was I ere I saw elba\");\n+    pp_newline (&pp);\n+    ASSERT_STREQ (pp_formatted_text (&pp),\n+\t\t  \"PREFIX: the quick \\n\"\n+\t\t  \"   brown fox jumps \\n\"\n+\t\t  \"   over the lazy \\n\"\n+\t\t  \"   dog\\n\"\n+\t\t  \"   able was I ere I \\n\"\n+\t\t  \"   saw elba\\n\");\n+  }\n+  {\n+    test_pretty_printer pp (DIAGNOSTICS_SHOW_PREFIX_NEVER, 20);\n+    pp_string (&pp, \"the quick brown fox jumps over the lazy dog\");\n+    pp_newline (&pp);\n+    pp_string (&pp, \"able was I ere I saw elba\");\n+    pp_newline (&pp);\n+    ASSERT_STREQ (pp_formatted_text (&pp),\n+\t\t  \"the quick brown fox \\n\"\n+\t\t  \"jumps over the lazy \\n\"\n+\t\t  \"dog\\n\"\n+\t\t  \"able was I ere I \\n\"\n+\t\t  \"saw elba\\n\");\n+  }\n+  {\n+    test_pretty_printer pp (DIAGNOSTICS_SHOW_PREFIX_EVERY_LINE, 20);\n+    pp_string (&pp, \"the quick brown fox jumps over the lazy dog\");\n+    pp_newline (&pp);\n+    pp_string (&pp, \"able was I ere I saw elba\");\n+    pp_newline (&pp);\n+    ASSERT_STREQ (pp_formatted_text (&pp),\n+\t\t  \"PREFIX: the quick brown fox jumps over the lazy dog\\n\"\n+\t\t  \"PREFIX: able was I ere I saw elba\\n\");\n+  }\n+\n+}\n+\n /* Run all of the selftests within this file.  */\n \n void\n pretty_print_c_tests ()\n {\n   test_basic_printing ();\n   test_pp_format ();\n+  test_prefixes_and_wrapping ();\n }\n \n } // namespace selftest"}]}