{"sha": "d9b7be2ebd0cf4652590c2db4313c8435a9a66a9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDliN2JlMmViZDBjZjQ2NTI1OTBjMmRiNDMxM2M4NDM1YTlhNjZhOQ==", "commit": {"author": {"name": "Marek Polacek", "email": "polacek@redhat.com", "date": "2014-10-17T18:53:35Z"}, "committer": {"name": "Marek Polacek", "email": "mpolacek@gcc.gnu.org", "date": "2014-10-17T18:53:35Z"}, "message": "re PR c/63543 (incomplete type error should suppress duplicates)\n\n\tPR c/63543\n\t* c-tree.h (C_TYPE_ERROR_REPORTED): Define.\n\t* c-typeck.c (build_indirect_ref): Don't print the \"dereferencing...\"\n\terror multiple times.  Print the type.\n\n\t* gcc.dg/pr63543.c: New test.\n\t* gcc.dg/array-8.c: Remove dg-error.\n\t* gcc.dg/pr48552-1.c: Remove and adjust dg-error.\n\t* gcc.dg/pr48552-2.c: Likewise.\n\nFrom-SVN: r216414", "tree": {"sha": "5864967c12d70d6e72ca16b0a2535367e7f5778b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5864967c12d70d6e72ca16b0a2535367e7f5778b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d9b7be2ebd0cf4652590c2db4313c8435a9a66a9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d9b7be2ebd0cf4652590c2db4313c8435a9a66a9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d9b7be2ebd0cf4652590c2db4313c8435a9a66a9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d9b7be2ebd0cf4652590c2db4313c8435a9a66a9/comments", "author": {"login": "mpolacek", "id": 10496300, "node_id": "MDQ6VXNlcjEwNDk2MzAw", "avatar_url": "https://avatars.githubusercontent.com/u/10496300?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mpolacek", "html_url": "https://github.com/mpolacek", "followers_url": "https://api.github.com/users/mpolacek/followers", "following_url": "https://api.github.com/users/mpolacek/following{/other_user}", "gists_url": "https://api.github.com/users/mpolacek/gists{/gist_id}", "starred_url": "https://api.github.com/users/mpolacek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mpolacek/subscriptions", "organizations_url": "https://api.github.com/users/mpolacek/orgs", "repos_url": "https://api.github.com/users/mpolacek/repos", "events_url": "https://api.github.com/users/mpolacek/events{/privacy}", "received_events_url": "https://api.github.com/users/mpolacek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "f406ae1fd66cbef7528139d813049d606973b4d2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f406ae1fd66cbef7528139d813049d606973b4d2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f406ae1fd66cbef7528139d813049d606973b4d2"}], "stats": {"total": 55, "additions": 49, "deletions": 6}, "files": [{"sha": "294b4ef54ad561e8abd2dd8a813349635c262167", "filename": "gcc/c/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d9b7be2ebd0cf4652590c2db4313c8435a9a66a9/gcc%2Fc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d9b7be2ebd0cf4652590c2db4313c8435a9a66a9/gcc%2Fc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc%2FChangeLog?ref=d9b7be2ebd0cf4652590c2db4313c8435a9a66a9", "patch": "@@ -1,3 +1,10 @@\n+2014-10-17  Marek Polacek  <polacek@redhat.com>\n+\n+\tPR c/63543\n+\t* c-tree.h (C_TYPE_ERROR_REPORTED): Define.\n+\t* c-typeck.c (build_indirect_ref): Don't print the \"dereferencing...\"\n+\terror multiple times.  Print the type.\n+\n 2014-10-17  Marek Polacek  <polacek@redhat.com>\n \n \tPR c/63549"}, {"sha": "5ff9d9ccce9d6cb01a83b8833294ebc8e0dc9cd5", "filename": "gcc/c/c-tree.h", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d9b7be2ebd0cf4652590c2db4313c8435a9a66a9/gcc%2Fc%2Fc-tree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d9b7be2ebd0cf4652590c2db4313c8435a9a66a9/gcc%2Fc%2Fc-tree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc%2Fc-tree.h?ref=d9b7be2ebd0cf4652590c2db4313c8435a9a66a9", "patch": "@@ -56,6 +56,9 @@ along with GCC; see the file COPYING3.  If not see\n    This is used for -Wc++-compat. */\n #define C_TYPE_DEFINED_IN_STRUCT(TYPE) TYPE_LANG_FLAG_2 (TYPE)\n \n+/* Record whether an \"incomplete type\" error was given for the type.  */\n+#define C_TYPE_ERROR_REPORTED(TYPE) TYPE_LANG_FLAG_3 (TYPE)\n+\n /* Record whether a typedef for type `int' was actually `signed int'.  */\n #define C_TYPEDEF_EXPLICITLY_SIGNED(EXP) DECL_LANG_FLAG_1 (EXP)\n "}, {"sha": "324736acdf4812597161a6de6a83293cd2a0e697", "filename": "gcc/c/c-typeck.c", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d9b7be2ebd0cf4652590c2db4313c8435a9a66a9/gcc%2Fc%2Fc-typeck.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d9b7be2ebd0cf4652590c2db4313c8435a9a66a9/gcc%2Fc%2Fc-typeck.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc%2Fc-typeck.c?ref=d9b7be2ebd0cf4652590c2db4313c8435a9a66a9", "patch": "@@ -2378,7 +2378,12 @@ build_indirect_ref (location_t loc, tree ptr, ref_operator errstring)\n \n \t  if (!COMPLETE_OR_VOID_TYPE_P (t) && TREE_CODE (t) != ARRAY_TYPE)\n \t    {\n-\t      error_at (loc, \"dereferencing pointer to incomplete type\");\n+\t      if (!C_TYPE_ERROR_REPORTED (TREE_TYPE (ptr)))\n+\t\t{\n+\t\t  error_at (loc, \"dereferencing pointer to incomplete type \"\n+\t\t\t    \"%qT\", t);\n+\t\t  C_TYPE_ERROR_REPORTED (TREE_TYPE (ptr)) = 1;\n+\t\t}\n \t      return error_mark_node;\n \t    }\n \t  if (VOID_TYPE_P (t) && c_inhibit_evaluation_warnings == 0)"}, {"sha": "29ed3e6956ddc342da40d9bf1773315b273b3949", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d9b7be2ebd0cf4652590c2db4313c8435a9a66a9/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d9b7be2ebd0cf4652590c2db4313c8435a9a66a9/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=d9b7be2ebd0cf4652590c2db4313c8435a9a66a9", "patch": "@@ -1,3 +1,11 @@\n+2014-10-17  Marek Polacek  <polacek@redhat.com>\n+\n+\tPR c/63543\n+\t* gcc.dg/pr63543.c: New test.\n+\t* gcc.dg/array-8.c: Remove dg-error.\n+\t* gcc.dg/pr48552-1.c: Remove and adjust dg-error.\n+\t* gcc.dg/pr48552-2.c: Likewise.\n+\n 2014-10-17  Marek Polacek  <polacek@redhat.com>\n \n \tPR c/63549"}, {"sha": "2872985806e0c2fafda31c2b528481e5a8cbefe6", "filename": "gcc/testsuite/gcc.dg/array-8.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d9b7be2ebd0cf4652590c2db4313c8435a9a66a9/gcc%2Ftestsuite%2Fgcc.dg%2Farray-8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d9b7be2ebd0cf4652590c2db4313c8435a9a66a9/gcc%2Ftestsuite%2Fgcc.dg%2Farray-8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Farray-8.c?ref=d9b7be2ebd0cf4652590c2db4313c8435a9a66a9", "patch": "@@ -45,5 +45,4 @@ g (void)\n   sip[0]; /* { dg-error \"invalid use of undefined type 'struct si'\" } */\n   /* { dg-error \"dereferencing pointer to incomplete type\" \"incomplete\" { target *-*-* } 45 } */\n   0[sip]; /* { dg-error \"invalid use of undefined type 'struct si'\" } */\n-  /* { dg-error \"dereferencing pointer to incomplete type\" \"incomplete\" { target *-*-* } 47 } */\n }"}, {"sha": "4b833fb3da01cecb0c3dc9871adb0c6be8fdee8f", "filename": "gcc/testsuite/gcc.dg/pr48552-1.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d9b7be2ebd0cf4652590c2db4313c8435a9a66a9/gcc%2Ftestsuite%2Fgcc.dg%2Fpr48552-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d9b7be2ebd0cf4652590c2db4313c8435a9a66a9/gcc%2Ftestsuite%2Fgcc.dg%2Fpr48552-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr48552-1.c?ref=d9b7be2ebd0cf4652590c2db4313c8435a9a66a9", "patch": "@@ -49,5 +49,5 @@ f7 (struct S *x)\n void\n f8 (struct S *x)\n {\n-  __asm volatile (\"\" : \"=r\" (*x));\t/* { dg-error \"dereferencing pointer to incomplete type\" \"incomplete\" } */\n-}\t\t\t\t\t/* { dg-error \"invalid lvalue in asm output 0\" \"invalid lvalue\" { target *-*-* } 52 } */\n+  __asm volatile (\"\" : \"=r\" (*x));\t/* { dg-error \"invalid lvalue in asm output 0\" } */\n+}"}, {"sha": "954c411c5c4450cc8d23e6e3e6053c30c5d347c7", "filename": "gcc/testsuite/gcc.dg/pr48552-2.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d9b7be2ebd0cf4652590c2db4313c8435a9a66a9/gcc%2Ftestsuite%2Fgcc.dg%2Fpr48552-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d9b7be2ebd0cf4652590c2db4313c8435a9a66a9/gcc%2Ftestsuite%2Fgcc.dg%2Fpr48552-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr48552-2.c?ref=d9b7be2ebd0cf4652590c2db4313c8435a9a66a9", "patch": "@@ -49,5 +49,5 @@ f7 (struct S *x)\n void\n f8 (struct S *x)\n {\n-  __asm (\"\" : \"=r\" (*x));\t/* { dg-error \"dereferencing pointer to incomplete type\" \"incomplete\" } */\n-}\t\t\t\t/* { dg-error \"invalid lvalue in asm output 0\" \"invalid lvalue\" { target *-*-* } 52 } */\n+  __asm (\"\" : \"=r\" (*x));\t/* { dg-error \"invalid lvalue in asm output 0\" } */\n+}"}, {"sha": "215b62ed911f8c1cf8137b1e26d9f2ec27227241", "filename": "gcc/testsuite/gcc.dg/pr63543.c", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d9b7be2ebd0cf4652590c2db4313c8435a9a66a9/gcc%2Ftestsuite%2Fgcc.dg%2Fpr63543.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d9b7be2ebd0cf4652590c2db4313c8435a9a66a9/gcc%2Ftestsuite%2Fgcc.dg%2Fpr63543.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr63543.c?ref=d9b7be2ebd0cf4652590c2db4313c8435a9a66a9", "patch": "@@ -0,0 +1,21 @@\n+/* PR c/63543 */\n+/* { dg-do compile } */\n+\n+struct S;\n+union U;\n+\n+int\n+f1 (struct S *s)\n+{\n+  return s->a /* { dg-error \"dereferencing pointer to incomplete type .struct S.\" } */\n+\t + s->b\n+\t + s->c;\n+}\n+\n+int\n+f2 (union U *u)\n+{\n+  return u->a /* { dg-error \"dereferencing pointer to incomplete type .union U.\" } */\n+\t + u->a\n+\t + u->a;\n+}"}]}