{"sha": "867504e66013d99de08cb244ffc911c829b6fb82", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODY3NTA0ZTY2MDEzZDk5ZGUwOGNiMjQ0ZmZjOTExYzgyOWI2ZmI4Mg==", "commit": {"author": {"name": "Kazu Hirata", "email": "kazu@cs.umass.edu", "date": "2003-01-09T13:05:49Z"}, "committer": {"name": "Kazu Hirata", "email": "kazu@gcc.gnu.org", "date": "2003-01-09T13:05:49Z"}, "message": "h8300.md (*addsi3_upper): New.\n\n\t* config/h8300/h8300.md (*addsi3_upper): New.\n\t(*iorsi3_shift): Likewise.\n\t(two splitters): Likewise.\n\t(*addsi3_shift): Likewise.\n\t(two splitters): Likewise.\n\nFrom-SVN: r61106", "tree": {"sha": "9f7f5079c3d85aef61f22062062e4940c178a652", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9f7f5079c3d85aef61f22062062e4940c178a652"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/867504e66013d99de08cb244ffc911c829b6fb82", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/867504e66013d99de08cb244ffc911c829b6fb82", "html_url": "https://github.com/Rust-GCC/gccrs/commit/867504e66013d99de08cb244ffc911c829b6fb82", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/867504e66013d99de08cb244ffc911c829b6fb82/comments", "author": null, "committer": null, "parents": [{"sha": "4a69cf7914102d0438d0d628007049b7ac95b46f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4a69cf7914102d0438d0d628007049b7ac95b46f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4a69cf7914102d0438d0d628007049b7ac95b46f"}], "stats": {"total": 128, "additions": 128, "deletions": 0}, "files": [{"sha": "6b58b1d2c30e1c9bf679b3b691ebb3623b09cb08", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/867504e66013d99de08cb244ffc911c829b6fb82/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/867504e66013d99de08cb244ffc911c829b6fb82/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=867504e66013d99de08cb244ffc911c829b6fb82", "patch": "@@ -1,3 +1,11 @@\n+2003-01-09  Kazu Hirata  <kazu@cs.umass.edu>\n+\n+\t* config/h8300/h8300.md (*addsi3_upper): New.\n+\t(*iorsi3_shift): Likewise.\n+\t(two splitters): Likewise.\n+\t(*addsi3_shift): Likewise.\n+\t(two splitters): Likewise.\n+\n 2003-01-09  Josef Zlomek  <zlomj9am@artax.karlin.mff.cuni.cz>\n \n \t* Makefile.in (optabs.o): Add dependency on basic-block.h."}, {"sha": "65ff9888e40c50ca8d6c7561c049c0b405b0c496", "filename": "gcc/config/h8300/h8300.md", "status": "modified", "additions": 120, "deletions": 0, "changes": 120, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/867504e66013d99de08cb244ffc911c829b6fb82/gcc%2Fconfig%2Fh8300%2Fh8300.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/867504e66013d99de08cb244ffc911c829b6fb82/gcc%2Fconfig%2Fh8300%2Fh8300.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fh8300%2Fh8300.md?ref=867504e66013d99de08cb244ffc911c829b6fb82", "patch": "@@ -2600,6 +2600,16 @@\n \n ;; plus:SI\n \n+(define_insn \"*addsi3_upper\"\n+  [(set (match_operand:SI 0 \"register_operand\" \"=r\")\n+\t(plus:SI (mult:SI (match_operand:SI 1 \"register_operand\" \"r\")\n+\t\t\t  (const_int 65536))\n+\t\t (match_operand:SI 2 \"register_operand\" \"0\")))]\n+  \"TARGET_H8300H || TARGET_H8300S\"\n+  \"add.w\\\\t%f1,%e0\"\n+  [(set_attr \"length\" \"2\")\n+   (set_attr \"cc\" \"clobber\")])\n+\n (define_insn \"*addsi3_lshiftrt_16_zexthi\"\n   [(set (match_operand:SI 0 \"register_operand\" \"=r\")\n \t(plus:SI (lshiftrt:SI (match_operand:SI 1 \"register_operand\" \"r\")\n@@ -2691,6 +2701,116 @@\n   [(set_attr \"cc\" \"clobber\")\n    (set_attr \"length\" \"2\")])\n \n+;; Used to OR the exponent of a float.\n+\n+(define_insn \"*iorsi3_shift\"\n+  [(set (match_operand:SI 0 \"register_operand\" \"=r\")\n+\t(ior:SI (ashift:SI (match_operand:SI 1 \"register_operand\" \"r\")\n+\t\t\t   (const_int 23))\n+\t\t(match_operand:SI 2 \"register_operand\" \"0\")))\n+   (clobber (match_scratch:SI 3 \"=&r\"))]\n+  \"TARGET_H8300H || TARGET_H8300S\"\n+  \"#\")\n+\n+(define_split\n+  [(parallel\n+    [(set (match_operand:SI 0 \"register_operand\" \"\")\n+\t  (ior:SI (ashift:SI (match_operand:SI 1 \"register_operand\" \"\")\n+\t\t\t     (const_int 23))\n+\t\t  (match_dup 0)))\n+     (clobber (match_operand:SI 2 \"register_operand\" \"\"))])]\n+  \"(TARGET_H8300H || TARGET_H8300S)\n+   && flow2_completed\n+   && find_regno_note (insn, REG_DEAD, REGNO (operands[1]))\n+   && REGNO (operands[0]) != REGNO (operands[1])\"\n+  [(parallel [(set (match_dup 3)\n+\t\t   (ashift:HI (match_dup 3)\n+\t\t\t      (const_int 7)))\n+\t      (clobber (scratch:QI))])\n+   (set (match_dup 0)\n+\t(ior:SI (ashift:SI (match_dup 1)\n+\t\t\t   (const_int 16))\n+\t\t(match_dup 0)))]\n+  \"operands[3] = gen_rtx_REG (HImode, REGNO (operands[1]));\")\n+\n+(define_split\n+  [(parallel\n+    [(set (match_operand:SI 0 \"register_operand\" \"\")\n+\t  (ior:SI (ashift:SI (match_operand:SI 1 \"register_operand\" \"\")\n+\t\t\t     (const_int 23))\n+\t\t  (match_dup 0)))\n+     (clobber (match_operand:SI 2 \"register_operand\" \"\"))])]\n+  \"(TARGET_H8300H || TARGET_H8300S)\n+   && flow2_completed\n+   && !(find_regno_note (insn, REG_DEAD, REGNO (operands[1]))\n+        && REGNO (operands[0]) != REGNO (operands[1]))\"\n+  [(set (match_dup 2)\n+\t(match_dup 1))\n+   (parallel [(set (match_dup 3)\n+\t\t   (ashift:HI (match_dup 3)\n+\t\t\t      (const_int 7)))\n+\t      (clobber (scratch:QI))])\n+   (set (match_dup 0)\n+\t(ior:SI (ashift:SI (match_dup 2)\n+\t\t\t   (const_int 16))\n+\t\t(match_dup 0)))]\n+  \"operands[3] = gen_rtx_REG (HImode, REGNO (operands[2]));\")\n+\n+;; Used to add the exponent of a float.\n+\n+(define_insn \"*addsi3_shift\"\n+  [(set (match_operand:SI 0 \"register_operand\" \"=r\")\n+\t(plus:SI (mult:SI (match_operand:SI 1 \"register_operand\" \"r\")\n+\t\t\t  (const_int 8388608))\n+\t\t (match_operand:SI 2 \"register_operand\" \"0\")))\n+   (clobber (match_scratch:SI 3 \"=&r\"))]\n+  \"TARGET_H8300H || TARGET_H8300S\"\n+  \"#\")\n+\n+(define_split\n+  [(parallel\n+    [(set (match_operand:SI 0 \"register_operand\" \"\")\n+\t  (plus:SI (mult:SI (match_operand:SI 1 \"register_operand\" \"\")\n+\t\t\t    (const_int 8388608))\n+\t\t   (match_dup 0)))\n+     (clobber (match_operand:SI 2 \"register_operand\" \"\"))])]\n+  \"(TARGET_H8300H || TARGET_H8300S)\n+   && flow2_completed\n+   && find_regno_note (insn, REG_DEAD, REGNO (operands[1]))\n+   && REGNO (operands[0]) != REGNO (operands[1])\"\n+  [(parallel [(set (match_dup 3)\n+\t\t   (ashift:HI (match_dup 3)\n+\t\t\t      (const_int 7)))\n+\t      (clobber (scratch:QI))])\n+   (set (match_dup 0)\n+\t(plus:SI (mult:SI (match_dup 1)\n+\t\t\t  (const_int 65536))\n+\t\t (match_dup 0)))]\n+  \"operands[3] = gen_rtx_REG (HImode, REGNO (operands[1]));\")\n+\n+(define_split\n+  [(parallel\n+    [(set (match_operand:SI 0 \"register_operand\" \"\")\n+\t  (plus:SI (mult:SI (match_operand:SI 1 \"register_operand\" \"\")\n+\t\t\t    (const_int 8388608))\n+\t\t   (match_dup 0)))\n+     (clobber (match_operand:SI 2 \"register_operand\" \"\"))])]\n+  \"(TARGET_H8300H || TARGET_H8300S)\n+   && flow2_completed\n+   && !(find_regno_note (insn, REG_DEAD, REGNO (operands[1]))\n+        && REGNO (operands[0]) != REGNO (operands[1]))\"\n+  [(set (match_dup 2)\n+\t(match_dup 1))\n+   (parallel [(set (match_dup 3)\n+\t\t   (ashift:HI (match_dup 3)\n+\t\t\t      (const_int 7)))\n+\t      (clobber (scratch:QI))])\n+   (set (match_dup 0)\n+\t(plus:SI (mult:SI (match_dup 2)\n+\t\t\t  (const_int 65536))\n+\t\t (match_dup 0)))]\n+  \"operands[3] = gen_rtx_REG (HImode, REGNO (operands[2]));\")\n+\n ;; xor:HI\n \n (define_insn \"*xorhi3_zextqi\""}]}