{"sha": "c7f4be78cb61006492d16375aba5392f580cd633", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzdmNGJlNzhjYjYxMDA2NDkyZDE2Mzc1YWJhNTM5MmY1ODBjZDYzMw==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2020-09-17T09:48:36Z"}, "committer": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2020-09-17T11:56:15Z"}, "message": "CSE negated multiplications and divisions\n\nThis adds the capability to look for available negated multiplications\nand divisions, replacing them with cheaper negates.\n\n2020-09-17  Richard Biener  <rguenther@suse.de>\n\n\t* tree-ssa-sccvn.c (visit_nary_op): Value-number multiplications\n\tand divisions to negates of available negated forms.\n\n\t* gcc.dg/tree-ssa/ssa-fre-88.c: New testcase.", "tree": {"sha": "fae2071cad4368dfc130f1d0a4512567cd9369b4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/fae2071cad4368dfc130f1d0a4512567cd9369b4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c7f4be78cb61006492d16375aba5392f580cd633", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c7f4be78cb61006492d16375aba5392f580cd633", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c7f4be78cb61006492d16375aba5392f580cd633", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c7f4be78cb61006492d16375aba5392f580cd633/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "225a08220e444371ae4867b3e2ace275d30af3d3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/225a08220e444371ae4867b3e2ace275d30af3d3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/225a08220e444371ae4867b3e2ace275d30af3d3"}], "stats": {"total": 53, "additions": 53, "deletions": 0}, "files": [{"sha": "15d2ca05e659cdbcc0fb4749b9dd091901c2b7a4", "filename": "gcc/testsuite/gcc.dg/tree-ssa/ssa-fre-88.c", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c7f4be78cb61006492d16375aba5392f580cd633/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fssa-fre-88.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c7f4be78cb61006492d16375aba5392f580cd633/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fssa-fre-88.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fssa-fre-88.c?ref=c7f4be78cb61006492d16375aba5392f580cd633", "patch": "@@ -0,0 +1,18 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -fdump-tree-fre1\" } */\n+\n+double y[2];\n+void foo (double x)\n+{\n+  y[0] = x * -3.;\n+  y[1] = x * 3.;\n+}\n+void bar (double x, double z)\n+{\n+  y[0] = -z / x;\n+  y[1] = z / x;\n+}\n+\n+/* { dg-final { scan-tree-dump-times \" \\\\* \" 1 \"fre1\" } } */\n+/* { dg-final { scan-tree-dump-times \" / \" 1 \"fre1\" } } */\n+/* { dg-final { scan-tree-dump-times \"= -_\" 2 \"fre1\" } } */"}, {"sha": "64f1e8c9160772ae20b6b63adc6250819a01ba36", "filename": "gcc/tree-ssa-sccvn.c", "status": "modified", "additions": 35, "deletions": 0, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c7f4be78cb61006492d16375aba5392f580cd633/gcc%2Ftree-ssa-sccvn.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c7f4be78cb61006492d16375aba5392f580cd633/gcc%2Ftree-ssa-sccvn.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-sccvn.c?ref=c7f4be78cb61006492d16375aba5392f580cd633", "patch": "@@ -4824,6 +4824,40 @@ visit_nary_op (tree lhs, gassign *stmt)\n \t    }\n \t}\n       break;\n+    case RDIV_EXPR:\n+    case TRUNC_DIV_EXPR:\n+    case MULT_EXPR:\n+      /* Match up ([-]a){/,*}([-])b with v=a{/,*}b, replacing it with -v.  */\n+      if (! HONOR_SIGN_DEPENDENT_ROUNDING (type))\n+\t{\n+\t  tree rhs[2];\n+\t  rhs[0] = rhs1;\n+\t  rhs[1] = gimple_assign_rhs2 (stmt);\n+\t  for (unsigned i = 0; i <= 1; ++i)\n+\t    {\n+\t      unsigned j = i == 0 ? 1 : 0;\n+\t      tree ops[2];\n+\t      gimple_match_op match_op (gimple_match_cond::UNCOND,\n+\t\t\t\t\tNEGATE_EXPR, type, rhs[i]);\n+\t      ops[i] = vn_nary_build_or_lookup_1 (&match_op, false);\n+\t      ops[j] = rhs[j];\n+\t      if (ops[i]\n+\t\t  && (ops[0] = vn_nary_op_lookup_pieces (2, code,\n+\t\t\t\t\t\t\t type, ops, NULL)))\n+\t\t{\n+\t\t  gimple_match_op match_op (gimple_match_cond::UNCOND,\n+\t\t\t\t\t    NEGATE_EXPR, type, ops[0]);\n+\t\t  result = vn_nary_build_or_lookup (&match_op);\n+\t\t  if (result)\n+\t\t    {\n+\t\t      bool changed = set_ssa_val_to (lhs, result);\n+\t\t      vn_nary_op_insert_stmt (stmt, result);\n+\t\t      return changed;\n+\t\t    }\n+\t\t}\n+\t    }\n+\t}\n+      break;\n     default:\n       break;\n     }\n@@ -5739,6 +5773,7 @@ eliminate_dom_walker::eliminate_insert (basic_block bb,\n   if (!stmt\n       || (!CONVERT_EXPR_CODE_P (gimple_assign_rhs_code (stmt))\n \t  && gimple_assign_rhs_code (stmt) != VIEW_CONVERT_EXPR\n+\t  && gimple_assign_rhs_code (stmt) != NEGATE_EXPR\n \t  && gimple_assign_rhs_code (stmt) != BIT_FIELD_REF\n \t  && (gimple_assign_rhs_code (stmt) != BIT_AND_EXPR\n \t      || TREE_CODE (gimple_assign_rhs2 (stmt)) != INTEGER_CST)))"}]}