{"sha": "220c4d8e44971c87ad9070f1b3d29ab5fbe45dff", "node_id": "C_kwDOANBUbNoAKDIyMGM0ZDhlNDQ5NzFjODdhZDkwNzBmMWIzZDI5YWI1ZmJlNDVkZmY", "commit": {"author": {"name": "GCC Administrator", "email": "gccadmin@gcc.gnu.org", "date": "2022-09-27T00:17:52Z"}, "committer": {"name": "GCC Administrator", "email": "gccadmin@gcc.gnu.org", "date": "2022-09-27T00:17:52Z"}, "message": "Daily bump.", "tree": {"sha": "5a24e7143f5d0bdcea05f952dcaec78593173cbc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5a24e7143f5d0bdcea05f952dcaec78593173cbc"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/220c4d8e44971c87ad9070f1b3d29ab5fbe45dff", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/220c4d8e44971c87ad9070f1b3d29ab5fbe45dff", "html_url": "https://github.com/Rust-GCC/gccrs/commit/220c4d8e44971c87ad9070f1b3d29ab5fbe45dff", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/220c4d8e44971c87ad9070f1b3d29ab5fbe45dff/comments", "author": null, "committer": null, "parents": [{"sha": "03cb9ed8dd603dbb77762ca948fc6381ba190731", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/03cb9ed8dd603dbb77762ca948fc6381ba190731", "html_url": "https://github.com/Rust-GCC/gccrs/commit/03cb9ed8dd603dbb77762ca948fc6381ba190731"}], "stats": {"total": 336, "additions": 335, "deletions": 1}, "files": [{"sha": "9aee34d34ccf5282607becfb952e6ff7dadb23cb", "filename": "ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/220c4d8e44971c87ad9070f1b3d29ab5fbe45dff/ChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/220c4d8e44971c87ad9070f1b3d29ab5fbe45dff/ChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/ChangeLog?ref=220c4d8e44971c87ad9070f1b3d29ab5fbe45dff", "patch": "@@ -1,3 +1,7 @@\n+2022-09-26  Jeff Law  <jlaw@ventanamicro.com>\n+\n+\t* MAINTAINERS: Update my email address and DCO entry.\n+\n 2022-09-23  Paul-Antoine Arras  <pa@codesourcery.com>\n \n \t* MAINTAINERS (Write After Approval): Add myself."}, {"sha": "4bd177da72a9c9a01a94cc3e70da71ae02b93e45", "filename": "gcc/ChangeLog", "status": "modified", "additions": 108, "deletions": 0, "changes": 108, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/220c4d8e44971c87ad9070f1b3d29ab5fbe45dff/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/220c4d8e44971c87ad9070f1b3d29ab5fbe45dff/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=220c4d8e44971c87ad9070f1b3d29ab5fbe45dff", "patch": "@@ -1,3 +1,111 @@\n+2022-09-26  Martin Liska  <mliska@suse.cz>\n+\n+\t* doc/invoke.texi: Add missing dash for\n+\t  Wanalyzer-exposure-through-uninit-copy.\n+\n+2022-09-26  Aldy Hernandez  <aldyh@redhat.com>\n+\n+\tPR tree-optimization/107009\n+\t* range-op.cc (operator_bitwise_and::op1_range): Optimize 0 = x & MASK.\n+\t(range_op_bitwise_and_tests): New test.\n+\n+2022-09-26  Aldy Hernandez  <aldyh@redhat.com>\n+\n+\tPR tree-optimization/107009\n+\t* tree-ssa-dom.cc\n+\t(dom_opt_dom_walker::set_global_ranges_from_unreachable_edges):\n+\tIterate over exports.\n+\n+2022-09-26  Thomas Schwinge  <thomas@codesourcery.com>\n+\n+\t* config.gcc (with_arch) [nvptx]: Allow '--with-arch' to override\n+\tthe default.\n+\t* config/nvptx/gen-multilib-matches.sh: New.\n+\t* config/nvptx/t-nvptx (MULTILIB_OPTIONS, MULTILIB_MATCHES)\n+\t(MULTILIB_EXCEPTIONS): Handle this.\n+\t* doc/install.texi (Specific) <nvptx-*-none>: Document this.\n+\t* doc/invoke.texi (Nvidia PTX Options): Likewise.\n+\n+2022-09-26  Thomas Schwinge  <thomas@codesourcery.com>\n+\n+\t* config.gcc (TM_MULTILIB_CONFIG) [nvptx]: Set to '$with_arch'.\n+\t* config/nvptx/t-nvptx (MULTILIB_OPTIONS, MULTILIB_MATCHES)\n+\t(MULTILIB_EXCEPTIONS): Handle it.\n+\n+2022-09-26  Thomas Schwinge  <thomas@codesourcery.com>\n+\n+\t* config.gcc (with_arch) [nvptx]: Set to 'sm_30'.\n+\t* config/nvptx/nvptx.cc (nvptx_option_override): Assert that\n+\t'-misa' appeared.\n+\t* config/nvptx/nvptx.h (OPTION_DEFAULT_SPECS): Define.\n+\t* config/nvptx/nvptx.opt (misa=): Remove 'Init'.\n+\n+2022-09-26  Thomas Schwinge  <thomas@codesourcery.com>\n+\n+\t* config/nvptx/nvptx.h (ASM_SPEC): Define.\n+\n+2022-09-26  Jeff Law  <jeffreyalaw@gmail.com>\n+\n+\t* cfgcleanup.cc (bb_is_just_return): No longer static.\n+\t* cfgcleanup.h (bb_is_just_return): Add prototype.\n+\t* cfgrtl.cc (fixup_reorder_chain): Do not create an\n+\tunconditional jump to a return block.  Conditionally\n+\tremove unreachable blocks.\n+\n+2022-09-26  Tobias Burnus  <tobias@codesourcery.com>\n+\n+\tPR middle-end/106982\n+\t* omp-low.cc (lower_oacc_reductions): Add some unshare_expr.\n+\n+2022-09-26  Martin Liska  <mliska@suse.cz>\n+\n+\t* config/s390/s390.cc (s390_rtx_costs): Remove dest variable\n+\tand use only dst.\n+\n+2022-09-26  Kyrylo Tkachov  <kyrylo.tkachov@arm.com>\n+\n+\t* config/aarch64/aarch64-arches.def (armv9.1-a): Define.\n+\t(armv9.2-a): Likewise.\n+\t(armv9.3-a): Likewise.\n+\t* config/aarch64/aarch64.h (AARCH64_FL_V9_1): Likewise.\n+\t(AARCH64_FL_V9_2): Likewise.\n+\t(AARCH64_FL_V9_3): Likewise.\n+\t(AARCH64_FL_FOR_ARCH9_1): Likewise.\n+\t(AARCH64_FL_FOR_ARCH9_2): Likewise.\n+\t(AARCH64_FL_FOR_ARCH9_3): Likewise.\n+\t(AARCH64_ISA_V9_1): Likewise.\n+\t(AARCH64_ISA_V9_2): Likewise.\n+\t(AARCH64_ISA_V9_3): Likewise.\n+\t* doc/invoke.texi (AArch64 Options): Document armv9.1-a, armv9.2-a,\n+\tarmv9.3-a values to -march.\n+\n+2022-09-26  Martin Liska  <mliska@suse.cz>\n+\n+\t* value-range.cc (tree_compare): Remove unused function.\n+\n+2022-09-26  Kewen Lin  <linkw@linux.ibm.com>\n+\n+\tPR target/96072\n+\t* config/rs6000/rs6000-logue.cc (rs6000_emit_epilogue): Update the\n+\tcondition for adding REG_CFA_DEF_CFA reg note with\n+\tframe_pointer_needed_indeed.\n+\n+2022-09-26  Kewen Lin  <linkw@linux.ibm.com>\n+\n+\tPR target/100645\n+\t* config/rs6000/vector.md (vec_shr_<mode>): Replace condition\n+\tTARGET_ALTIVEC with VECTOR_UNIT_ALTIVEC_OR_VSX_P.\n+\n+2022-09-26  Hongtao Liu  <hongtao.liu@intel.com>\n+\t    Liwei Xu  <liwei.xu@intel.com>\n+\n+\tPR target/53346\n+\t* config/i386/i386-expand.cc (expand_vec_perm_shufps_shufps):\n+\tNew function.\n+\t(ix86_expand_vec_perm_const_1): Insert\n+\texpand_vec_perm_shufps_shufps at the end of 2-instruction\n+\texpand sequence.\n+\n 2022-09-25  Torbj\u00f6rn SVENSSON  <torbjorn.svensson@foss.st.com>\n \n \t* doc/sourcebuild.texi: Fix chapter level."}, {"sha": "38c805d4b6a860292dcd2ad74048690e53c88600", "filename": "gcc/DATESTAMP", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/220c4d8e44971c87ad9070f1b3d29ab5fbe45dff/gcc%2FDATESTAMP", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/220c4d8e44971c87ad9070f1b3d29ab5fbe45dff/gcc%2FDATESTAMP", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FDATESTAMP?ref=220c4d8e44971c87ad9070f1b3d29ab5fbe45dff", "patch": "@@ -1 +1 @@\n-20220926\n+20220927"}, {"sha": "db4ac0d176b868b8542305ec3d7a6f61034b3165", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 99, "deletions": 0, "changes": 99, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/220c4d8e44971c87ad9070f1b3d29ab5fbe45dff/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/220c4d8e44971c87ad9070f1b3d29ab5fbe45dff/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=220c4d8e44971c87ad9070f1b3d29ab5fbe45dff", "patch": "@@ -1,3 +1,102 @@\n+2022-09-26  Ghjuvan Lacambre  <lacambre@adacore.com>\n+\n+\t* doc/gnat_rm/implementation_defined_attributes.rst: Rename Valid_Image.\n+\t* gnat_rm.texi: Regenerate.\n+\t* gnat_ugn.texi: Regenerate.\n+\n+2022-09-26  Piotr Trojanek  <trojanek@adacore.com>\n+\n+\t* sem_ch12.adb (Build_Instance_Compilation_Unit_Nodes): Relocate\n+\tauxiliary declarations from the original compilation unit to the\n+\tnewly created compilation unit for the spec.\n+\n+2022-09-26  Piotr Trojanek  <trojanek@adacore.com>\n+\n+\t* rtsfind.ads\n+\t(RTU_Id): Remove unreferenced packages; fix whitespace.\n+\t(RE_Id): Remove unreferenced entities; add comment about entity\n+\tthat is only used by GNATprove and not by GNAT.\n+\n+2022-09-26  Piotr Trojanek  <trojanek@adacore.com>\n+\n+\t* s-oscons-tmplt.c (STR, STR1): Remove.\n+\n+2022-09-26  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* doc/gnat_ugn/building_executable_programs_with_gnat.rst\n+\t(-gnateT): Document new parameter Long_Long_Long_Size.\n+\t* gnat_ugn.texi: Regenerate.\n+\n+2022-09-26  Steve Baird  <baird@adacore.com>\n+\n+\t* bindgen.adb: When the binder is invoked for the device, specify\n+\tthe CUDA_Global aspect for the adainit and adafinal procedures via\n+\ta pragma instead of via an aspect_specification.\n+\n+2022-09-26  K\u00e9vin Le Gouguec  <legouguec@adacore.com>\n+\n+\t* doc/gnat_ugn/building_executable_programs_with_gnat.rst\n+\t(Linker Switches): Document support for mold along with gold; add some\n+\tadvice regarding OpenSSL in the Pro version.\n+\t* gnat_ugn.texi: Regenerate.\n+\n+2022-09-26  Tucker Taft  <taft@adacore.com>\n+\n+\t* sem_util.adb (Original_Aspect_Pragma_Name): Check for Check\n+\tpragmas.\n+\n+2022-09-26  Piotr Trojanek  <trojanek@adacore.com>\n+\n+\t* sem_ch5.adb (Analyze_Iterator_Specification): Delay expansion\n+\tbased on Full_Analysis flag.\n+\n+2022-09-26  Piotr Trojanek  <trojanek@adacore.com>\n+\n+\t* sem_ch5.adb (Analyze_Iterator_Specification): Delay expansion of\n+\tfor iterated component association just like it is done within\n+\tquantified expression.\n+\n+2022-09-26  Piotr Trojanek  <trojanek@adacore.com>\n+\n+\t* contracts.adb (Analyze_Object_Contract): Check SPARK_Mode before\n+\tapplying SPARK rule.\n+\n+2022-09-26  Justin Squirek  <squirek@adacore.com>\n+\n+\t* sem_util.adb\n+\t(Accessibility_Level): Modify indexed and selected components case\n+\tby reducing the scope where Original_Node gets used.\n+\n+2022-09-26  Boris Yakobowski  <yakobowski@adacore.com>\n+\n+\t* doc/gnat_ugn/gnat_utility_programs.rst: Remove documentation for\n+\tgnatmetric.\n+\n+2022-09-26  Piotr Trojanek  <trojanek@adacore.com>\n+\n+\t* gsocket.h: Remove redefinition of _WIN32_WINNT.\n+\t* mingw32.h: Remove conditional definition of _WIN32_WINNT.\n+\n+2022-09-26  Piotr Trojanek  <trojanek@adacore.com>\n+\n+\t* mingw32.h: Remove condition definition of MAXPATHLEN; the include\n+\tdirective for stdlib.h was most likely intended to provide the\n+\tMAX_PATH.\n+\n+2022-09-26  Piotr Trojanek  <trojanek@adacore.com>\n+\n+\t* adaint.c: Remove conditional #include directives for old MinGW.\n+\t* cal.c: Always include winsock.h, since it is part of modern\n+\tMinGW.\n+\t* cstreams.c: Remove workaround for old MinGW.\n+\t* expect.c: Remove conditional #include directive for old MinGW.\n+\t* mingw32.h: Remove STD_MINGW and OLD_MINGW declarations.\n+\t* sysdep.c: Remove conditional #include directive for old MinGW.\n+\n+2022-09-26  Piotr Trojanek  <trojanek@adacore.com>\n+\n+\t* sem_warn.ads (Has_Junk_Name): Reword comment.\n+\n 2022-09-20  Martin Liska  <mliska@suse.cz>\n \n \t* exp_ch6.adb: Replace \"the the\" with \"the\"."}, {"sha": "4e99c4307ea0ae8eba87dd0dfe441f821f42133f", "filename": "gcc/c-family/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/220c4d8e44971c87ad9070f1b3d29ab5fbe45dff/gcc%2Fc-family%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/220c4d8e44971c87ad9070f1b3d29ab5fbe45dff/gcc%2Fc-family%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2FChangeLog?ref=220c4d8e44971c87ad9070f1b3d29ab5fbe45dff", "patch": "@@ -1,3 +1,9 @@\n+2022-09-26  Marek Polacek  <polacek@redhat.com>\n+\n+\tPR c++/106656\n+\t* c-cppbuiltin.cc (c_cpp_builtins): Update value of __cpp_char8_t\n+\tfor C++20.\n+\n 2022-09-23  Marek Polacek  <polacek@redhat.com>\n \n \tPR c++/106784"}, {"sha": "ca5015e162133e439b98e6bb1e541f8a844c45fa", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/220c4d8e44971c87ad9070f1b3d29ab5fbe45dff/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/220c4d8e44971c87ad9070f1b3d29ab5fbe45dff/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=220c4d8e44971c87ad9070f1b3d29ab5fbe45dff", "patch": "@@ -1,3 +1,28 @@\n+2022-09-26  Marek Polacek  <polacek@redhat.com>\n+\n+\tPR c++/106656\n+\t* typeck2.cc (array_string_literal_compatible_p): Allow\n+\tinitializing arrays of char or unsigned char by a UTF-8 string literal.\n+\n+2022-09-26  Marek Polacek  <polacek@redhat.com>\n+\n+\tPR c++/106784\n+\t* method.cc (is_convertible_helper): New.\n+\t(is_convertible): Use it.\n+\t(is_nothrow_convertible): Likewise.\n+\n+2022-09-26  Patrick Palka  <ppalka@redhat.com>\n+\n+\tPR c++/107033\n+\t* module.cc (trees_in::decl_value): In the MK_partial case for\n+\ta variable template partial specialization, pass decl_p=true to\n+\tadd_mergeable_specialization, and set spec to the VAR_DECL not\n+\tthe TEMPLATE_DECL.\n+\t* pt.cc (add_mergeable_specialization): For a variable template\n+\tpartial specialization, set the TREE_TYPE of the new\n+\tDECL_TEMPLATE_SPECIALIZATIONS node to the TREE_TYPE of the\n+\tVAR_DECL not the VAR_DECL itself.\n+\n 2022-09-23  Marek Polacek  <polacek@redhat.com>\n \n \tPR c++/106784"}, {"sha": "24f4ac5395f3cedef5bdaf6b5f90f78610663576", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 64, "deletions": 0, "changes": 64, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/220c4d8e44971c87ad9070f1b3d29ab5fbe45dff/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/220c4d8e44971c87ad9070f1b3d29ab5fbe45dff/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=220c4d8e44971c87ad9070f1b3d29ab5fbe45dff", "patch": "@@ -1,3 +1,67 @@\n+2022-09-26  Marek Polacek  <polacek@redhat.com>\n+\n+\tPR c++/106656\n+\t* g++.dg/cpp23/feat-cxx2b.C: Adjust.\n+\t* g++.dg/cpp2a/feat-cxx2a.C: Likewise.\n+\t* g++.dg/ext/char8_t-feature-test-macro-2.C: Likewise.\n+\t* g++.dg/ext/char8_t-init-2.C: Likewise.\n+\t* g++.dg/cpp2a/char8_t3.C: New test.\n+\t* g++.dg/cpp2a/char8_t4.C: New test.\n+\n+2022-09-26  Marek Polacek  <polacek@redhat.com>\n+\n+\tPR c++/106784\n+\t* g++.dg/ext/is_convertible3.C: New test.\n+\t* g++.dg/ext/is_nothrow_convertible3.C: New test.\n+\n+2022-09-26  Patrick Palka  <ppalka@redhat.com>\n+\n+\tPR c++/107033\n+\t* g++.dg/modules/partial-2.cc, g++.dg/modules/partial-2.h: New\n+\tfiles, factored out from ...\n+\t* g++.dg/modules/partial-2_a.C, g++.dg/modules/partial-2_b.C: ...\n+\tthese.\n+\t* g++.dg/modules/partial-2_c.H: New test.\n+\t* g++.dg/modules/partial-2_d.C: New test.\n+\n+2022-09-26  Aldy Hernandez  <aldyh@redhat.com>\n+\n+\tPR tree-optimization/107009\n+\t* gcc.dg/tree-ssa/pr107009.c: New test.\n+\n+2022-09-26  Jeff Law  <jeffreyalaw@gmail.com>\n+\n+\t* gcc.target/riscv/ret-1.c: New test.\n+\n+2022-09-26  Tobias Burnus  <tobias@codesourcery.com>\n+\n+\tPR middle-end/106982\n+\t* c-c++-common/goacc/reduction-7.c: New test.\n+\t* c-c++-common/goacc/reduction-8.c: New test.\n+\n+2022-09-26  Kewen Lin  <linkw@linux.ibm.com>\n+\n+\tPR target/96072\n+\t* gcc.target/powerpc/pr96072.c: New test.\n+\n+2022-09-26  Hu, Lin1  <lin1.hu@intel.com>\n+\n+\tPR target/94962\n+\t* gcc.target/i386/avx256-unaligned-store-3.c: Add -mno-avx512f\n+\n+2022-09-26  Kewen Lin  <linkw@linux.ibm.com>\n+\n+\tPR target/100645\n+\t* gcc.target/powerpc/pr100645.c: New test.\n+\n+2022-09-26  Hongtao Liu  <hongtao.liu@intel.com>\n+\t    Liwei Xu  <liwei.xu@intel.com>\n+\n+\t* gcc.target/i386/pr53346-1.c: New test.\n+\t* gcc.target/i386/pr53346-2.c: New test.\n+\t* gcc.target/i386/pr53346-3.c: New test.\n+\t* gcc.target/i386/pr53346-4.c: New test.\n+\n 2022-09-25  Mikael Morin  <mikael@gcc.gnu.org>\n \n \tPR fortran/41453"}, {"sha": "2429618514f55b245b4b5730151aebb5c34c840a", "filename": "libgcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/220c4d8e44971c87ad9070f1b3d29ab5fbe45dff/libgcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/220c4d8e44971c87ad9070f1b3d29ab5fbe45dff/libgcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2FChangeLog?ref=220c4d8e44971c87ad9070f1b3d29ab5fbe45dff", "patch": "@@ -1,3 +1,8 @@\n+2022-09-26  Thomas Neumann  <tneumann@users.sourceforge.net>\n+\n+\t* unwind-dw2-fde.c: Introduce a constant for in_shutdown\n+\tfor the non-fast-path case. Drop destructor priority.\n+\n 2022-09-22  Thomas Neumann  <tneumann@users.sourceforge.net>\n \n \t* unwind-dw2-fde.c: (release_register_frames) Remember"}, {"sha": "ca7ab98eb368eb34cebfe9cbc850f837260c9a61", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/220c4d8e44971c87ad9070f1b3d29ab5fbe45dff/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/220c4d8e44971c87ad9070f1b3d29ab5fbe45dff/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=220c4d8e44971c87ad9070f1b3d29ab5fbe45dff", "patch": "@@ -1,3 +1,26 @@\n+2022-09-26  Jonathan Wakely  <jwakely@redhat.com>\n+\n+\t* include/bits/ptr_traits.h (__ptr_traits_elem) [__cpp_concepts]:\n+\tAlso define the __ptr_traits_elem class template for the\n+\tconcepts case.\n+\t(pointer_traits<Ptr>): Remove constrained partial\n+\tspecialization.\n+\t* testsuite/20_util/pointer_traits/lwg3545.cc: Check for\n+\tambiguitiy with program-defined partial specialization.\n+\n+2022-09-26  Jonathan Wakely  <jwakely@redhat.com>\n+\n+\t* include/std/type_traits (is_convertible, is_convertible_v):\n+\tDefine using new built-in.\n+\t(is_nothrow_convertible is_nothrow_convertible_v): Likewise.\n+\n+2022-09-26  Jonathan Wakely  <jwakely@redhat.com>\n+\n+\tPR libstdc++/107037\n+\t* include/std/bitset (_Base_bitset::_M_do_reset): Use\n+\tpreprocessor conditional around non-C++03 code.\n+\t* testsuite/20_util/bitset/107037.cc: New test.\n+\n 2022-09-24  Jonathan Wakely  <jwakely@redhat.com>\n \n \t* include/bits/alloc_traits.h (allocator_traits::is_always_equal):"}]}