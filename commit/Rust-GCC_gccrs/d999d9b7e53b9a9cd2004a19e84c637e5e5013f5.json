{"sha": "d999d9b7e53b9a9cd2004a19e84c637e5e5013f5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDk5OWQ5YjdlNTNiOWE5Y2QyMDA0YTE5ZTg0YzYzN2U1ZTUwMTNmNQ==", "commit": {"author": {"name": "Patrick Palka", "email": "ppalka@redhat.com", "date": "2021-06-03T13:39:13Z"}, "committer": {"name": "Patrick Palka", "email": "ppalka@redhat.com", "date": "2021-06-03T13:39:13Z"}, "message": "c++: cv-qualified dependent name of alias tmpl [PR100592]\n\nHere, the dependent template name in the return type of f() resolves to\nan alias of int& after substitution, and we end up complaining about\nqualifying this reference type with 'const' from cp_build_qualified_type\nrather than just silently dropping the qualification as per [dcl.ref]/1.\n\nThe problem is ultimately that make_typename_type ignores the\ntf_keep_type_decl flag when the dependent name is a template-id.  This\nin turn causes the TYPE_DECL check within tsubst <case TYPENAME_TYPE>\nto fail, and so we end up not passing tf_ignore_bad_quals to\ncp_build_qualified_type.  This patch fixes this by making\nmake_typename_type respect the tf_keep_type_decl flag in this situation.\n\n\tPR c++/100592\n\ngcc/cp/ChangeLog:\n\n\t* decl.c (make_typename_type): After calling\n\tlookup_template_class, adjust the result to its TYPE_NAME and\n\tthen consider the tf_keep_type_decl flag.\n\ngcc/testsuite/ChangeLog:\n\n\t* g++.dg/cpp0x/alias-decl-71.C: New test.", "tree": {"sha": "2fa80535414e432aa07426d95410dc50a299af67", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2fa80535414e432aa07426d95410dc50a299af67"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d999d9b7e53b9a9cd2004a19e84c637e5e5013f5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d999d9b7e53b9a9cd2004a19e84c637e5e5013f5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d999d9b7e53b9a9cd2004a19e84c637e5e5013f5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d999d9b7e53b9a9cd2004a19e84c637e5e5013f5/comments", "author": null, "committer": null, "parents": [{"sha": "69f517ac20566a645ff41a9bfca535822205a538", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/69f517ac20566a645ff41a9bfca535822205a538", "html_url": "https://github.com/Rust-GCC/gccrs/commit/69f517ac20566a645ff41a9bfca535822205a538"}], "stats": {"total": 26, "additions": 22, "deletions": 4}, "files": [{"sha": "a3687dbb0dd0ed6e7279eda4798bd34a26703f1b", "filename": "gcc/cp/decl.c", "status": "modified", "additions": 9, "deletions": 4, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d999d9b7e53b9a9cd2004a19e84c637e5e5013f5/gcc%2Fcp%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d999d9b7e53b9a9cd2004a19e84c637e5e5013f5/gcc%2Fcp%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fdecl.c?ref=d999d9b7e53b9a9cd2004a19e84c637e5e5013f5", "patch": "@@ -4136,10 +4136,15 @@ make_typename_type (tree context, tree name, enum tag_types tag_type,\n     return error_mark_node;\n \n   if (want_template)\n-    return lookup_template_class (t, TREE_OPERAND (fullname, 1),\n-\t\t\t\t  NULL_TREE, context,\n-\t\t\t\t  /*entering_scope=*/0,\n-\t\t\t\t  complain | tf_user);\n+    {\n+      t = lookup_template_class (t, TREE_OPERAND (fullname, 1),\n+\t\t\t\t NULL_TREE, context,\n+\t\t\t\t /*entering_scope=*/0,\n+\t\t\t\t complain | tf_user);\n+      if (t == error_mark_node)\n+\treturn error_mark_node;\n+      t = TYPE_NAME (t);\n+    }\n   \n   if (DECL_ARTIFICIAL (t) || !(complain & tf_keep_type_decl))\n     t = TREE_TYPE (t);"}, {"sha": "6a61f93a0b0a9d83bf9219aa508954b7b05007a8", "filename": "gcc/testsuite/g++.dg/cpp0x/alias-decl-71.C", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d999d9b7e53b9a9cd2004a19e84c637e5e5013f5/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Falias-decl-71.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d999d9b7e53b9a9cd2004a19e84c637e5e5013f5/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Falias-decl-71.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Falias-decl-71.C?ref=d999d9b7e53b9a9cd2004a19e84c637e5e5013f5", "patch": "@@ -0,0 +1,13 @@\n+// PR c++/100592\n+// { dg-do compile { target c++11 } }\n+\n+template<bool>\n+struct meta {\n+  template<class> using if_c = int&;\n+};\n+\n+template<bool B>\n+typename meta<B>::template if_c<void> const f();\n+\n+using type = decltype(f<true>());\n+using type = int&;"}]}