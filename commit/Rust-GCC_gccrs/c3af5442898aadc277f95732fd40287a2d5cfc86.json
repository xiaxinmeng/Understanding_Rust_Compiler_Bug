{"sha": "c3af5442898aadc277f95732fd40287a2d5cfc86", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzNhZjU0NDI4OThhYWRjMjc3Zjk1NzMyZmQ0MDI4N2EyZDVjZmM4Ng==", "commit": {"author": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2019-06-04T07:53:08Z"}, "committer": {"name": "Martin Liska", "email": "marxin@gcc.gnu.org", "date": "2019-06-04T07:53:08Z"}, "message": "IPA ICF: use fibonacci heap instead of list as a worklist.\n\n2019-06-04  Martin Liska  <mliska@suse.cz>\n\n\t* ipa-icf.c (sem_item_optimizer::add_item_to_class): Count\n\tnumber of references.\n\t(sem_item_optimizer::do_congruence_step):\n\t(sem_item_optimizer::worklist_push): Dump how references\n\ta class has.\n\t(sem_item_optimizer::worklist_pop): Use heap.\n\t(sem_item_optimizer::process_cong_reduction): Likewise.\n\t* ipa-icf.h: Use fibonacci_heap insteam of std::list.\n\nFrom-SVN: r271901", "tree": {"sha": "147e8c1313b4c1ba91bf2638170cad21df503cb7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/147e8c1313b4c1ba91bf2638170cad21df503cb7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c3af5442898aadc277f95732fd40287a2d5cfc86", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c3af5442898aadc277f95732fd40287a2d5cfc86", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c3af5442898aadc277f95732fd40287a2d5cfc86", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c3af5442898aadc277f95732fd40287a2d5cfc86/comments", "author": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "a9fae4b47ff749ff4d063d60d54b409412ed151e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a9fae4b47ff749ff4d063d60d54b409412ed151e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a9fae4b47ff749ff4d063d60d54b409412ed151e"}], "stats": {"total": 31, "additions": 24, "deletions": 7}, "files": [{"sha": "d249d12ca5077d5960b73e9a82d840822df475d6", "filename": "gcc/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c3af5442898aadc277f95732fd40287a2d5cfc86/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c3af5442898aadc277f95732fd40287a2d5cfc86/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=c3af5442898aadc277f95732fd40287a2d5cfc86", "patch": "@@ -1,3 +1,14 @@\n+2019-06-04  Martin Liska  <mliska@suse.cz>\n+\n+\t* ipa-icf.c (sem_item_optimizer::add_item_to_class): Count\n+\tnumber of references.\n+\t(sem_item_optimizer::do_congruence_step):\n+\t(sem_item_optimizer::worklist_push): Dump how references\n+\ta class has.\n+\t(sem_item_optimizer::worklist_pop): Use heap.\n+\t(sem_item_optimizer::process_cong_reduction): Likewise.\n+\t* ipa-icf.h: Use fibonacci_heap insteam of std::list.\n+\n 2019-06-04  Martin Liska  <mliska@suse.cz>\n \n \t* ipa-icf.h (struct sem_usage_pair_hash): New."}, {"sha": "19b45b35c9a2f4f42d9a9fea7b406e5677e5320b", "filename": "gcc/ipa-icf.c", "status": "modified", "additions": 7, "deletions": 5, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c3af5442898aadc277f95732fd40287a2d5cfc86/gcc%2Fipa-icf.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c3af5442898aadc277f95732fd40287a2d5cfc86/gcc%2Fipa-icf.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fipa-icf.c?ref=c3af5442898aadc277f95732fd40287a2d5cfc86", "patch": "@@ -80,6 +80,7 @@ along with GCC; see the file COPYING3.  If not see\n #include \"print-tree.h\"\n #include \"ipa-utils.h\"\n #include \"ipa-icf-gimple.h\"\n+#include \"fibonacci_heap.h\"\n #include \"ipa-icf.h\"\n #include \"stor-layout.h\"\n #include \"dbgcnt.h\"\n@@ -2624,6 +2625,7 @@ sem_item_optimizer::add_item_to_class (congruence_class *cls, sem_item *item)\n {\n   item->index_in_class = cls->members.length ();\n   cls->members.safe_push (item);\n+  cls->referenced_by_count += item->referenced_by_count;\n   item->cls = cls;\n }\n \n@@ -3186,7 +3188,8 @@ sem_item_optimizer::do_congruence_step (congruence_class *cls)\n   {\n     if (dump_file && (dump_flags & TDF_DETAILS))\n       fprintf (dump_file, \"  processing congruence step for class: %u \"\n-\t       \"(%u items), index: %u\\n\", cls->id, cls->members.length (), i);\n+\t       \"(%u items, %u references), index: %u\\n\", cls->id,\n+\t       cls->referenced_by_count, cls->members.length (), i);\n     do_congruence_step_for_index (cls, i);\n \n     if (splitter_class_removed)\n@@ -3206,7 +3209,7 @@ sem_item_optimizer::worklist_push (congruence_class *cls)\n     return;\n \n   cls->in_worklist = true;\n-  worklist.push_back (cls);\n+  worklist.insert (cls->referenced_by_count, cls);\n }\n \n /* Pops a class from worklist. */\n@@ -3218,8 +3221,7 @@ sem_item_optimizer::worklist_pop (void)\n \n   while (!worklist.empty ())\n     {\n-      cls = worklist.front ();\n-      worklist.pop_front ();\n+      cls = worklist.extract_min ();\n       if (cls->in_worklist)\n \t{\n \t  cls->in_worklist = false;\n@@ -3251,7 +3253,7 @@ sem_item_optimizer::process_cong_reduction (void)\n \n   if (dump_file)\n     fprintf (dump_file, \"Worklist has been filled with: %lu\\n\",\n-\t     (unsigned long) worklist.size ());\n+\t     (unsigned long) worklist.nodes ());\n \n   if (dump_file && (dump_flags & TDF_DETAILS))\n     fprintf (dump_file, \"Congruence class reduction\\n\");"}, {"sha": "6b81eb38b2a71cffe642bb3865dc3cfda9157551", "filename": "gcc/ipa-icf.h", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c3af5442898aadc277f95732fd40287a2d5cfc86/gcc%2Fipa-icf.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c3af5442898aadc277f95732fd40287a2d5cfc86/gcc%2Fipa-icf.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fipa-icf.h?ref=c3af5442898aadc277f95732fd40287a2d5cfc86", "patch": "@@ -29,7 +29,8 @@ class congruence_class\n {\n public:\n   /* Congruence class constructor for a new class with _ID.  */\n-  congruence_class (unsigned int _id): in_worklist (false), id(_id)\n+  congruence_class (unsigned int _id): in_worklist (false), id (_id),\n+  referenced_by_count (0)\n   {\n   }\n \n@@ -54,6 +55,9 @@ class congruence_class\n \n   /* Global unique class identifier.  */\n   unsigned int id;\n+\n+  /* Total number of references to items of this class.  */\n+  unsigned referenced_by_count;\n };\n \n /* Semantic item type enum.  */\n@@ -530,7 +534,7 @@ class sem_item_optimizer\n \n   /* Worklist of congruence classes that can potentially\n      refine classes of congruence.  */\n-  std::list<congruence_class *> worklist;\n+  fibonacci_heap<unsigned, congruence_class> worklist;\n \n   /* Remove semantic ITEM and release memory.  */\n   void remove_item (sem_item *item);"}]}