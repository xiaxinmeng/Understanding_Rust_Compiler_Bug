{"sha": "cd5091f1eab0b6f19a1f0557bf40d1aa9ec34dd4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2Q1MDkxZjFlYWIwYjZmMTlhMWYwNTU3YmY0MGQxYWE5ZWMzNGRkNA==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2019-03-13T11:32:11Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2019-03-13T11:32:11Z"}, "message": "re PR middle-end/89677 (internal compiler error: in wide_int_to_tree_1, at tree.c:1549)\n\n2019-03-13  Richard Biener  <rguenther@suse.de>\n\n\tPR middle-end/89677\n\t* tree-scalar-evolution.c (simplify_peeled_chrec): Do not\n\tthrow FP expressions at tree-affine.\n\n\t* gcc.dg/torture/pr89677.c: New testcase.\n\nFrom-SVN: r269646", "tree": {"sha": "6fbb67876b941ff86bfee7dad468fc27e778ceb2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6fbb67876b941ff86bfee7dad468fc27e778ceb2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/cd5091f1eab0b6f19a1f0557bf40d1aa9ec34dd4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cd5091f1eab0b6f19a1f0557bf40d1aa9ec34dd4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cd5091f1eab0b6f19a1f0557bf40d1aa9ec34dd4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cd5091f1eab0b6f19a1f0557bf40d1aa9ec34dd4/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "c045ea5763f0148e0d38dc71174b523c84143d68", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c045ea5763f0148e0d38dc71174b523c84143d68", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c045ea5763f0148e0d38dc71174b523c84143d68"}], "stats": {"total": 31, "additions": 31, "deletions": 0}, "files": [{"sha": "86e210b4e272e60747431d48b1188e0bade5d1c8", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd5091f1eab0b6f19a1f0557bf40d1aa9ec34dd4/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd5091f1eab0b6f19a1f0557bf40d1aa9ec34dd4/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=cd5091f1eab0b6f19a1f0557bf40d1aa9ec34dd4", "patch": "@@ -1,3 +1,9 @@\n+2019-03-13  Richard Biener  <rguenther@suse.de>\n+\n+\tPR middle-end/89677\n+\t* tree-scalar-evolution.c (simplify_peeled_chrec): Do not\n+\tthrow FP expressions at tree-affine.\n+\n 2019-03-14  Richard Biener  <rguenther@suse.de>\n \n \t* tree-pretty-print.c (dump_generic_node): For -gimple properly"}, {"sha": "a61b668d2e1b167f13723b9edaa41461b836719f", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd5091f1eab0b6f19a1f0557bf40d1aa9ec34dd4/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd5091f1eab0b6f19a1f0557bf40d1aa9ec34dd4/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=cd5091f1eab0b6f19a1f0557bf40d1aa9ec34dd4", "patch": "@@ -1,3 +1,8 @@\n+2019-03-13  Richard Biener  <rguenther@suse.de>\n+\n+\tPR middle-end/89677\n+\t* gcc.dg/torture/pr89677.c: New testcase.\n+\n 2019-03-13  Paolo Carlini  <paolo.carlini@oracle.com>\n \n \tPR c++/85558"}, {"sha": "a45ca1f61a11594607b0f16185e9df9e4c89a8e0", "filename": "gcc/testsuite/gcc.dg/torture/pr89677.c", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd5091f1eab0b6f19a1f0557bf40d1aa9ec34dd4/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr89677.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd5091f1eab0b6f19a1f0557bf40d1aa9ec34dd4/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr89677.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr89677.c?ref=cd5091f1eab0b6f19a1f0557bf40d1aa9ec34dd4", "patch": "@@ -0,0 +1,15 @@\n+/* { dg-do compile } */\n+/* { dg-require-effective-target int32plus } */\n+\n+int a, b, d;\n+unsigned c;\n+float e, f, g;\n+void h() {\n+    float *i = &g;\n+    for (; c < 10; c += 3)\n+      for (; d; d += 3) {\n+\t  a = *i;\n+\t  g = f + 0;\n+\t  f = b + *i + (b - e + 305219) + -b + 3;\n+      }\n+}"}, {"sha": "c814437c2393c3948127df63ce8e0ef820a97125", "filename": "gcc/tree-scalar-evolution.c", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd5091f1eab0b6f19a1f0557bf40d1aa9ec34dd4/gcc%2Ftree-scalar-evolution.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd5091f1eab0b6f19a1f0557bf40d1aa9ec34dd4/gcc%2Ftree-scalar-evolution.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-scalar-evolution.c?ref=cd5091f1eab0b6f19a1f0557bf40d1aa9ec34dd4", "patch": "@@ -1456,6 +1456,11 @@ simplify_peeled_chrec (struct loop *loop, tree arg, tree init_cond)\n       return build_polynomial_chrec (loop->num, init_cond, right);\n     }\n \n+  /* The affine code only deals with pointer and integer types.  */\n+  if (!POINTER_TYPE_P (type)\n+      && !INTEGRAL_TYPE_P (type))\n+    return chrec_dont_know;\n+\n   /* Try harder to check if they are equal.  */\n   tree_to_aff_combination_expand (left, type, &aff1, &peeled_chrec_map);\n   tree_to_aff_combination_expand (step_val, type, &aff2, &peeled_chrec_map);"}]}