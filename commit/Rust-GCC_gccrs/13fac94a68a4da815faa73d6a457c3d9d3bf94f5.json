{"sha": "13fac94a68a4da815faa73d6a457c3d9d3bf94f5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTNmYWM5NGE2OGE0ZGE4MTVmYWE3M2Q2YTQ1N2MzZDlkM2JmOTRmNQ==", "commit": {"author": {"name": "Geoffrey Keating", "email": "geoffk@redhat.com", "date": "2001-08-19T21:40:37Z"}, "committer": {"name": "Geoffrey Keating", "email": "geoffk@gcc.gnu.org", "date": "2001-08-19T21:40:37Z"}, "message": "invoke.texi (MIPS Options): Document -mfused-madd.\n\n\t* doc/invoke.texi (MIPS Options): Document -mfused-madd.\n\t* config/mips/mips.h (MASK_NO_FUSED_MADD): New.\n\t(TARGET_FUSED_MADD): New.\n\t(TARGET_SWITCHES): Add -mfused-madd, -mno-fused-madd.\n\t* config/mips/mips.md: Add TARGET_FUSED_MADD as condition to\n\tthe multiply-add instructions.\n\nFrom-SVN: r45041", "tree": {"sha": "d870f65f83d3ef830ed1c114ba9b46e221c555ed", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d870f65f83d3ef830ed1c114ba9b46e221c555ed"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/13fac94a68a4da815faa73d6a457c3d9d3bf94f5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/13fac94a68a4da815faa73d6a457c3d9d3bf94f5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/13fac94a68a4da815faa73d6a457c3d9d3bf94f5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/13fac94a68a4da815faa73d6a457c3d9d3bf94f5/comments", "author": null, "committer": null, "parents": [{"sha": "915a17f667e9abdfddbc8b429ff29db1becacdbb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/915a17f667e9abdfddbc8b429ff29db1becacdbb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/915a17f667e9abdfddbc8b429ff29db1becacdbb"}], "stats": {"total": 48, "additions": 39, "deletions": 9}, "files": [{"sha": "54b09bcce9d438610ee8b0b19cabae11c82f98ad", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/13fac94a68a4da815faa73d6a457c3d9d3bf94f5/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/13fac94a68a4da815faa73d6a457c3d9d3bf94f5/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=13fac94a68a4da815faa73d6a457c3d9d3bf94f5", "patch": "@@ -1,3 +1,12 @@\n+2001-08-19  Geoffrey Keating  <geoffk@redhat.com>\n+\n+\t* doc/invoke.texi (MIPS Options): Document -mfused-madd.\n+\t* config/mips/mips.h (MASK_NO_FUSED_MADD): New.\n+\t(TARGET_FUSED_MADD): New.\n+\t(TARGET_SWITCHES): Add -mfused-madd, -mno-fused-madd.\n+\t* config/mips/mips.md: Add TARGET_FUSED_MADD as condition to\n+\tthe multiply-add instructions.\n+\n 2001-08-19  Richard Henderson  <rth@redhat.com>\n \n \t* dwarf2asm.c (dw2_output_indirect_constant_1): The symbol ref "}, {"sha": "e5a3e1782359978b84a7d5db6baa7099db694872", "filename": "gcc/config/mips/mips.h", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/13fac94a68a4da815faa73d6a457c3d9d3bf94f5/gcc%2Fconfig%2Fmips%2Fmips.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/13fac94a68a4da815faa73d6a457c3d9d3bf94f5/gcc%2Fconfig%2Fmips%2Fmips.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fmips.h?ref=13fac94a68a4da815faa73d6a457c3d9d3bf94f5", "patch": "@@ -223,6 +223,8 @@ extern void\t\tsbss_section PARAMS ((void));\n #define MASK_UNINIT_CONST_IN_RODATA \\\n \t\t\t   0x00800000\t/* Store uninitialized\n \t\t\t\t\t   consts in rodata */\n+#define MASK_NO_FUSED_MADD 0x01000000   /* Don't generate floating point\n+\t\t\t\t\t   multiply-add operations.  */\n \n \t\t\t\t\t/* Debug switches, not documented */\n #define MASK_DEBUG\t0\t\t/* unused */\n@@ -311,6 +313,8 @@ extern void\t\tsbss_section PARAMS ((void));\n \n #define TARGET_MAD\t\t(target_flags & MASK_MAD)\n \n+#define TARGET_FUSED_MADD\t(! (target_flags & MASK_NO_FUSED_MADD))\n+\n #define TARGET_4300_MUL_FIX     (target_flags & MASK_4300_MUL_FIX)\n \n #define TARGET_NO_CHECK_ZERO_DIV (target_flags & MASK_NO_CHECK_ZERO_DIV)\n@@ -439,6 +443,10 @@ extern void\t\tsbss_section PARAMS ((void));\n      N_(\"Use multiply accumulate\")},\t\t\t\t\t\\\n   {\"no-mad\",\t\t -MASK_MAD,\t\t\t\t\t\\\n      N_(\"Don't use multiply accumulate\")},\t\t\t\t\\\n+  {\"no-fused-madd\",       MASK_NO_FUSED_MADD,                           \\\n+     N_(\"Don't generate fused multiply/add instructions\")},\t\t\\\n+  {\"fused-madd\",         -MASK_NO_FUSED_MADD,                           \\\n+     N_(\"Generate fused multiply/add instructions\")},\t\t\t\\\n   {\"fix4300\",             MASK_4300_MUL_FIX,\t\t\t\t\\\n      N_(\"Work around early 4300 hardware bug\")},\t\t\t\\\n   {\"no-fix4300\",         -MASK_4300_MUL_FIX,\t\t\t\t\\"}, {"sha": "8462162b663cb8cf1838ba9fed644df9f317ff3c", "filename": "gcc/config/mips/mips.md", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/13fac94a68a4da815faa73d6a457c3d9d3bf94f5/gcc%2Fconfig%2Fmips%2Fmips.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/13fac94a68a4da815faa73d6a457c3d9d3bf94f5/gcc%2Fconfig%2Fmips%2Fmips.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fmips.md?ref=13fac94a68a4da815faa73d6a457c3d9d3bf94f5", "patch": "@@ -2138,7 +2138,7 @@\n \t(plus:DF (mult:DF (match_operand:DF 1 \"register_operand\" \"f\")\n \t\t\t  (match_operand:DF 2 \"register_operand\" \"f\"))\n \t\t (match_operand:DF 3 \"register_operand\" \"f\")))]\n-  \"ISA_HAS_FP4 && TARGET_HARD_FLOAT && TARGET_DOUBLE_FLOAT\"\n+  \"ISA_HAS_FP4 && TARGET_HARD_FLOAT && TARGET_DOUBLE_FLOAT && TARGET_FUSED_MADD\"\n   \"madd.d\\\\t%0,%3,%1,%2\"\n   [(set_attr \"type\"\t\"fmadd\")\n    (set_attr \"mode\"\t\"DF\")])\n@@ -2148,7 +2148,7 @@\n \t(plus:SF (mult:SF (match_operand:SF 1 \"register_operand\" \"f\")\n \t\t\t  (match_operand:SF 2 \"register_operand\" \"f\"))\n \t\t (match_operand:SF 3 \"register_operand\" \"f\")))]\n-  \"ISA_HAS_FP4 && TARGET_HARD_FLOAT\"\n+  \"ISA_HAS_FP4 && TARGET_HARD_FLOAT && TARGET_FUSED_MADD\"\n   \"madd.s\\\\t%0,%3,%1,%2\"\n   [(set_attr \"type\"\t\"fmadd\")\n    (set_attr \"mode\"\t\"SF\")])\n@@ -2158,7 +2158,7 @@\n \t(minus:DF (mult:DF (match_operand:DF 1 \"register_operand\" \"f\")\n \t\t\t   (match_operand:DF 2 \"register_operand\" \"f\"))\n \t\t  (match_operand:DF 3 \"register_operand\" \"f\")))]\n-  \"ISA_HAS_FP4 && TARGET_HARD_FLOAT && TARGET_DOUBLE_FLOAT\"\n+  \"ISA_HAS_FP4 && TARGET_HARD_FLOAT && TARGET_DOUBLE_FLOAT && TARGET_FUSED_MADD\"\n   \"msub.d\\\\t%0,%3,%1,%2\"\n   [(set_attr \"type\"\t\"fmadd\")\n    (set_attr \"mode\"\t\"DF\")])\n@@ -2169,7 +2169,7 @@\n \t\t\t   (match_operand:SF 2 \"register_operand\" \"f\"))\n \t\t  (match_operand:SF 3 \"register_operand\" \"f\")))]\n \n-  \"ISA_HAS_FP4 && TARGET_HARD_FLOAT\"\n+  \"ISA_HAS_FP4 && TARGET_HARD_FLOAT && TARGET_FUSED_MADD\"\n   \"msub.s\\\\t%0,%3,%1,%2\"\n   [(set_attr \"type\"\t\"fmadd\")\n    (set_attr \"mode\"\t\"SF\")])\n@@ -2179,7 +2179,7 @@\n \t(neg:DF (plus:DF (mult:DF (match_operand:DF 1 \"register_operand\" \"f\")\n \t\t\t\t  (match_operand:DF 2 \"register_operand\" \"f\"))\n \t\t\t (match_operand:DF 3 \"register_operand\" \"f\"))))]\n-  \"ISA_HAS_NMADD_NMSUB && TARGET_HARD_FLOAT && TARGET_DOUBLE_FLOAT\"\n+  \"ISA_HAS_NMADD_NMSUB && TARGET_HARD_FLOAT && TARGET_DOUBLE_FLOAT && TARGET_FUSED_MADD\"\n   \"nmadd.d\\\\t%0,%3,%1,%2\"\n   [(set_attr \"type\"\t\"fmadd\")\n    (set_attr \"mode\"\t\"DF\")])\n@@ -2189,7 +2189,7 @@\n \t(neg:SF (plus:SF (mult:SF (match_operand:SF 1 \"register_operand\" \"f\")\n \t\t\t\t  (match_operand:SF 2 \"register_operand\" \"f\"))\n \t\t\t (match_operand:SF 3 \"register_operand\" \"f\"))))]\n-  \"ISA_HAS_NMADD_NMSUB && TARGET_HARD_FLOAT\"\n+  \"ISA_HAS_NMADD_NMSUB && TARGET_HARD_FLOAT && TARGET_FUSED_MADD\"\n   \"nmadd.s\\\\t%0,%3,%1,%2\"\n   [(set_attr \"type\"\t\"fmadd\")\n    (set_attr \"mode\"\t\"SF\")])\n@@ -2199,7 +2199,7 @@\n \t(minus:DF (match_operand:DF 1 \"register_operand\" \"f\")\n \t\t  (mult:DF (match_operand:DF 2 \"register_operand\" \"f\")\n \t\t\t   (match_operand:DF 3 \"register_operand\" \"f\"))))]\n-  \"ISA_HAS_NMADD_NMSUB && TARGET_HARD_FLOAT && TARGET_DOUBLE_FLOAT\"\n+  \"ISA_HAS_NMADD_NMSUB && TARGET_HARD_FLOAT && TARGET_DOUBLE_FLOAT && TARGET_FUSED_MADD\"\n   \"nmsub.d\\\\t%0,%1,%2,%3\"\n   [(set_attr \"type\"\t\"fmadd\")\n    (set_attr \"mode\"\t\"DF\")])\n@@ -2209,7 +2209,7 @@\n \t(minus:SF (match_operand:SF 1 \"register_operand\" \"f\")\n \t\t  (mult:SF (match_operand:SF 2 \"register_operand\" \"f\")\n \t\t\t   (match_operand:SF 3 \"register_operand\" \"f\"))))]\n-  \"ISA_HAS_NMADD_NMSUB && TARGET_HARD_FLOAT\"\n+  \"ISA_HAS_NMADD_NMSUB && TARGET_HARD_FLOAT && TARGET_FUSED_MADD\"\n   \"nmsub.s\\\\t%0,%1,%2,%3\"\n   [(set_attr \"type\"\t\"fmadd\")\n    (set_attr \"mode\"\t\"SF\")])"}, {"sha": "c0e69e63ccd51f7cb3e801eacec0784d4e6ec7f3", "filename": "gcc/doc/invoke.texi", "status": "modified", "additions": 14, "deletions": 1, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/13fac94a68a4da815faa73d6a457c3d9d3bf94f5/gcc%2Fdoc%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/13fac94a68a4da815faa73d6a457c3d9d3bf94f5/gcc%2Fdoc%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finvoke.texi?ref=13fac94a68a4da815faa73d6a457c3d9d3bf94f5", "patch": "@@ -450,7 +450,8 @@ in the following sections.\n @gccoptlist{\n -mabicalls -march=@var{cpu-type} -mtune=@var{cpu=type} @gol\n -mcpu=@var{cpu-type} -membedded-data  -muninit-const-in-rodata @gol\n--membedded-pic  -mfp32  -mfp64  -mgas  -mgp32  -mgp64 @gol\n+-membedded-pic  -mfp32  -mfp64  -mfused-madd  -mno-fused-madd @gol\n+-mgas  -mgp32  -mgp64 @gol\n -mgpopt  -mhalf-pic  -mhard-float  -mint64  -mips1 @gol\n -mips2  -mips3  -mips4  -mlong64  -mlong32  -mlong-calls  -mmemcpy @gol\n -mmips-as  -mmips-tfile  -mno-abicalls @gol\n@@ -7080,6 +7081,18 @@ the default.\n Assume that 32 64-bit floating point registers are available.  This is\n the default when the @option{-mips3} option is used.\n \n+@item -mfused-madd\n+@itemx -mno-fused-madd\n+@opindex mfused-madd\n+@opindex mno-fused-madd\n+Generate code that uses (does not use) the floating point multiply and\n+accumulate instructions, when they are available.  These instructions\n+are generated by default if they are available, but this may be\n+undesirable if the extra precision causes problems or on certain chips\n+in the mode where denormals are rounded to zero where denormals\n+generated by multiply and accumulate instructions cause exceptions\n+anyway.\n+\n @item -mgp32\n @opindex mgp32\n Assume that 32 32-bit general purpose registers are available.  This is"}]}