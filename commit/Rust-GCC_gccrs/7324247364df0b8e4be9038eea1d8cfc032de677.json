{"sha": "7324247364df0b8e4be9038eea1d8cfc032de677", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzMyNDI0NzM2NGRmMGI4ZTRiZTkwMzhlZWExZDhjZmMwMzJkZTY3Nw==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2011-08-05T13:48:46Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2011-08-05T13:48:46Z"}, "message": "[multiple changes]\n\n2011-08-05  Emmanuel Briot  <briot@adacore.com>\n\n\t* projects.texi: Added reference to the Makefile package.\n\n2011-08-05  Thomas Quinot  <quinot@adacore.com>\n\n\t* exp_ch7.adb: Minor comment rewording.\n\n2011-08-05  Ed Falis  <falis@adacore.com>\n\n\t* env.c: Fix comment.\n\n2011-08-05  Hristian Kirtchev  <kirtchev@adacore.com>\n\n\t* sem_elab.adb (Is_Finalization_Procedure): Reimplemented to avoid\n\tcharacter comparison and rely on concrete entities instead.\n\nFrom-SVN: r177435", "tree": {"sha": "40e3baa427d137f4060155dfde148ba8cc87d31b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/40e3baa427d137f4060155dfde148ba8cc87d31b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7324247364df0b8e4be9038eea1d8cfc032de677", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7324247364df0b8e4be9038eea1d8cfc032de677", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7324247364df0b8e4be9038eea1d8cfc032de677", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7324247364df0b8e4be9038eea1d8cfc032de677/comments", "author": null, "committer": null, "parents": [{"sha": "97ed5872c6629a96fcc4b4ff4ccaca41950ae26c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/97ed5872c6629a96fcc4b4ff4ccaca41950ae26c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/97ed5872c6629a96fcc4b4ff4ccaca41950ae26c"}], "stats": {"total": 71, "additions": 62, "deletions": 9}, "files": [{"sha": "ecbcadc12fd51305f5f75f1a300b05f11bf02bcd", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7324247364df0b8e4be9038eea1d8cfc032de677/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7324247364df0b8e4be9038eea1d8cfc032de677/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=7324247364df0b8e4be9038eea1d8cfc032de677", "patch": "@@ -1,3 +1,20 @@\n+2011-08-05  Emmanuel Briot  <briot@adacore.com>\n+\n+\t* projects.texi: Added reference to the Makefile package.\n+\n+2011-08-05  Thomas Quinot  <quinot@adacore.com>\n+\n+\t* exp_ch7.adb: Minor comment rewording.\n+\n+2011-08-05  Ed Falis  <falis@adacore.com>\n+\n+\t* env.c: Fix comment.\n+\n+2011-08-05  Hristian Kirtchev  <kirtchev@adacore.com>\n+\n+\t* sem_elab.adb (Is_Finalization_Procedure): Reimplemented to avoid\n+\tcharacter comparison and rely on concrete entities instead.\n+\n 2011-08-05  Ed Schonberg  <schonberg@adacore.com>\n \n \t* sem_ch3.adb: (Check_Private_Overriding): better error message,"}, {"sha": "1719684034a05b6a002a865177b2df3647bb9cb5", "filename": "gcc/ada/env.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7324247364df0b8e4be9038eea1d8cfc032de677/gcc%2Fada%2Fenv.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7324247364df0b8e4be9038eea1d8cfc032de677/gcc%2Fada%2Fenv.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fenv.c?ref=7324247364df0b8e4be9038eea1d8cfc032de677", "patch": "@@ -63,7 +63,7 @@ extern \"C\" {\n   #elif defined (VTHREADS)\n     /* VTHREADS mode applies to both VxWorks 653 and VxWorks MILS. The\n        inclusion of vThreadsData.h is necessary to workaround a bug with\n-       envLib.h on VxWorks MILS.  */\n+       envLib.h on VxWorks MILS and VxWorks 653.  */\n     #include <vThreadsData.h>\n     #include <envLib.h>\n   #else"}, {"sha": "a537e603c35ae21f03ab4220e44b0e93e887e3ec", "filename": "gcc/ada/exp_ch7.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7324247364df0b8e4be9038eea1d8cfc032de677/gcc%2Fada%2Fexp_ch7.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7324247364df0b8e4be9038eea1d8cfc032de677/gcc%2Fada%2Fexp_ch7.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch7.adb?ref=7324247364df0b8e4be9038eea1d8cfc032de677", "patch": "@@ -2272,7 +2272,7 @@ package body Exp_Ch7 is\n \n             function Next_Suitable_Statement (Stmt : Node_Id) return Node_Id;\n             --  Given a statement which is part of a list, return the next\n-            --  real statement while skipping over generated checks.\n+            --  real statement while skipping over dynamic elab checks.\n \n             ------------------\n             -- Is_Init_Call --"}, {"sha": "2a3e5bc0d8d6cf63db592f3aecbcc358e4ba7102", "filename": "gcc/ada/projects.texi", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7324247364df0b8e4be9038eea1d8cfc032de677/gcc%2Fada%2Fprojects.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7324247364df0b8e4be9038eea1d8cfc032de677/gcc%2Fada%2Fprojects.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprojects.texi?ref=7324247364df0b8e4be9038eea1d8cfc032de677", "patch": "@@ -2871,6 +2871,10 @@ The following packages are currently supported in project files\n @item Linker\n   This package specifies the options used by the linker.\n   @xref{Main Subprograms}.\n+@item Makefile\n+@cindex Makefile package in projects\n+  This package is used by the GPS plugin Makefile.py. See the documentation\n+  in that plugin (from GPS: /Tools/Plug-ins).\n @item Metrics\n   This package specifies the options used when calling the tool\n   @command{gnatmetric} via the @command{gnat} driver. Its attributes"}, {"sha": "fab5370074b2a6c79e87748fb194520d65f9c80d", "filename": "gcc/ada/sem_elab.adb", "status": "modified", "additions": 39, "deletions": 7, "changes": 46, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7324247364df0b8e4be9038eea1d8cfc032de677/gcc%2Fada%2Fsem_elab.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7324247364df0b8e4be9038eea1d8cfc032de677/gcc%2Fada%2Fsem_elab.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_elab.adb?ref=7324247364df0b8e4be9038eea1d8cfc032de677", "patch": "@@ -2938,13 +2938,45 @@ package body Sem_Elab is\n \n    function Is_Finalization_Procedure (Id : Entity_Id) return Boolean is\n    begin\n-      return\n-        Ekind (Id) = E_Procedure\n-          and then\n-            (Chars (Id) = Name_Finalize\n-               or else Is_TSS (Id, TSS_Deep_Finalize))\n-          and then Present (First_Formal (Id))\n-          and then Needs_Finalization (Etype (First_Formal (Id)));\n+      --  Check whether Id is a procedure with at least one parameter\n+\n+      if Ekind (Id) = E_Procedure\n+        and then Present (First_Formal (Id))\n+      then\n+         declare\n+            Typ      : constant Entity_Id := Etype (First_Formal (Id));\n+            Deep_Fin : Entity_Id := Empty;\n+            Fin      : Entity_Id := Empty;\n+\n+         begin\n+            --  If the type of the first formal does not require finalization\n+            --  actions, then this is definitely not [Deep_]Finalize.\n+\n+            if not Needs_Finalization (Typ) then\n+               return False;\n+            end if;\n+\n+            --  At this point we have the following scenario:\n+\n+            --    procedure Name (Param1 : [in] [out] Ctrl[; Param2 : ...]);\n+\n+            --  Recover the two possible versions of [Deep_]Finalize using the\n+            --  type of the first parameter and compare with the input.\n+\n+            Deep_Fin := TSS (Typ, TSS_Deep_Finalize);\n+\n+            if Is_Controlled (Typ) then\n+               Fin := Find_Prim_Op (Typ, Name_Finalize);\n+            end if;\n+\n+            return\n+                (Present (Deep_Fin) and then Id = Deep_Fin)\n+              or else\n+                (Present (Fin) and then Id = Fin);\n+         end;\n+      end if;\n+\n+      return False;\n    end Is_Finalization_Procedure;\n \n    ------------------"}]}