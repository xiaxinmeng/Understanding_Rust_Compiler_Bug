{"sha": "130f703da0c0d7b785d394b17df884379b4aadd9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTMwZjcwM2RhMGMwZDdiNzg1ZDM5NGIxN2RmODg0Mzc5YjRhYWRkOQ==", "commit": {"author": {"name": "Joel Brobecker", "email": "brobecker@adacore.com", "date": "2020-04-06T19:07:48Z"}, "committer": {"name": "Joel Brobecker", "email": "brobecker@adacore.com", "date": "2020-04-06T19:07:48Z"}, "message": "skip gcc.target/arm/div64-unwinding.c on vxworks_kernel targets\n\nThis test verifies, by using a weak reference to _Unwind_RaiseException,\nthat performing division by zero does not cause that symbol to get\nindirectly pulled into our closure.\n\nThe testing methodology unfortunately does not work on VxWorks targets\nwhen building in kernel mode. This is inherent to how kernel mode\non VxWorks works: The link is only partial and the remaining symbols\nwhich have not been resolved already get automatically resolved by\nthe VxWorks loader at the moment the module is loaded onto the target,\nprior to execution. The resolution includes weak symbols too, which\ndefeats the purpose of this test.\n\ngcc/testsuite/\n\n        * gcc.target/arm/div64-unwinding.c: Skip on vxworks_kernel targets.", "tree": {"sha": "a53a825854f1793508a66eb566111b75dff9b216", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a53a825854f1793508a66eb566111b75dff9b216"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/130f703da0c0d7b785d394b17df884379b4aadd9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/130f703da0c0d7b785d394b17df884379b4aadd9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/130f703da0c0d7b785d394b17df884379b4aadd9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/130f703da0c0d7b785d394b17df884379b4aadd9/comments", "author": {"login": "brobecke", "id": 11981700, "node_id": "MDQ6VXNlcjExOTgxNzAw", "avatar_url": "https://avatars.githubusercontent.com/u/11981700?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brobecke", "html_url": "https://github.com/brobecke", "followers_url": "https://api.github.com/users/brobecke/followers", "following_url": "https://api.github.com/users/brobecke/following{/other_user}", "gists_url": "https://api.github.com/users/brobecke/gists{/gist_id}", "starred_url": "https://api.github.com/users/brobecke/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brobecke/subscriptions", "organizations_url": "https://api.github.com/users/brobecke/orgs", "repos_url": "https://api.github.com/users/brobecke/repos", "events_url": "https://api.github.com/users/brobecke/events{/privacy}", "received_events_url": "https://api.github.com/users/brobecke/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brobecke", "id": 11981700, "node_id": "MDQ6VXNlcjExOTgxNzAw", "avatar_url": "https://avatars.githubusercontent.com/u/11981700?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brobecke", "html_url": "https://github.com/brobecke", "followers_url": "https://api.github.com/users/brobecke/followers", "following_url": "https://api.github.com/users/brobecke/following{/other_user}", "gists_url": "https://api.github.com/users/brobecke/gists{/gist_id}", "starred_url": "https://api.github.com/users/brobecke/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brobecke/subscriptions", "organizations_url": "https://api.github.com/users/brobecke/orgs", "repos_url": "https://api.github.com/users/brobecke/repos", "events_url": "https://api.github.com/users/brobecke/events{/privacy}", "received_events_url": "https://api.github.com/users/brobecke/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e83714f65d1f75fc5af39f9fdc520a909dfc7635", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e83714f65d1f75fc5af39f9fdc520a909dfc7635", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e83714f65d1f75fc5af39f9fdc520a909dfc7635"}], "stats": {"total": 5, "additions": 5, "deletions": 0}, "files": [{"sha": "2198e18198b4a8f372608c8f81d54b99b8c8a86b", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/130f703da0c0d7b785d394b17df884379b4aadd9/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/130f703da0c0d7b785d394b17df884379b4aadd9/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=130f703da0c0d7b785d394b17df884379b4aadd9", "patch": "@@ -1,3 +1,7 @@\n+2020-04-06  Joel Brobecker  <brobecker@adacore.com>\n+\n+\t* gcc.target/arm/div64-unwinding.c: Skip on vxworks_kernel targets.\n+\n 2020-04-04  Marek Polacek  <polacek@redhat.com>\n \n \tPR c++/94155 - crash in gimplifier with paren init of aggregates."}, {"sha": "c10ac24835467b52f30316c4d6dc567be4abe890", "filename": "gcc/testsuite/gcc.target/arm/div64-unwinding.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/130f703da0c0d7b785d394b17df884379b4aadd9/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fdiv64-unwinding.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/130f703da0c0d7b785d394b17df884379b4aadd9/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fdiv64-unwinding.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fdiv64-unwinding.c?ref=130f703da0c0d7b785d394b17df884379b4aadd9", "patch": "@@ -1,6 +1,7 @@\n /* Performing a 64-bit division should not pull in the unwinder.  */\n \n /* { dg-do run { target { { ! *-*-linux* } && { ! *-*-uclinux* } } } } */\n+/* { dg-skip-if \"load causes weak symbol resolution\" { vxworks_kernel } } */\n /* { dg-options \"-O0\" } */\n \n #include <stdlib.h>"}]}