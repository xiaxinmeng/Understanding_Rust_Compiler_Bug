{"sha": "f1cd4ab0037948a9800f33b0cbaef7140d467fd8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjFjZDRhYjAwMzc5NDhhOTgwMGYzM2IwY2JhZWY3MTQwZDQ2N2ZkOA==", "commit": {"author": {"name": "Bryce McKinlay", "email": "bryce@albatross.co.nz", "date": "2001-03-24T08:05:29Z"}, "committer": {"name": "Bryce McKinlay", "email": "bryce@gcc.gnu.org", "date": "2001-03-24T08:05:29Z"}, "message": "HashMap.java (HashMap): If 0 is given for initialCapacity paramater, bump it to 1.\n\n2001-03-24  Bryce McKinlay  <bryce@albatross.co.nz>\n\n\t* java/util/HashMap.java (HashMap): If 0 is given for initialCapacity\n\tparamater, bump it to 1.\n\t* java/util/Hashtable.java (Hashtable): Likewise.\n\nFrom-SVN: r40812", "tree": {"sha": "2f56a669b80540246a89b55a478afadbac3e615c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2f56a669b80540246a89b55a478afadbac3e615c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f1cd4ab0037948a9800f33b0cbaef7140d467fd8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f1cd4ab0037948a9800f33b0cbaef7140d467fd8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f1cd4ab0037948a9800f33b0cbaef7140d467fd8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f1cd4ab0037948a9800f33b0cbaef7140d467fd8/comments", "author": null, "committer": null, "parents": [{"sha": "aff68f1cd99a1e3f98fbfea2638fdc4905a6ed4f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/aff68f1cd99a1e3f98fbfea2638fdc4905a6ed4f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/aff68f1cd99a1e3f98fbfea2638fdc4905a6ed4f"}], "stats": {"total": 16, "additions": 13, "deletions": 3}, "files": [{"sha": "35218b3631825611ac9923115b69c075f4f4b277", "filename": "libjava/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f1cd4ab0037948a9800f33b0cbaef7140d467fd8/libjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f1cd4ab0037948a9800f33b0cbaef7140d467fd8/libjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog?ref=f1cd4ab0037948a9800f33b0cbaef7140d467fd8", "patch": "@@ -1,3 +1,9 @@\n+2001-03-24  Bryce McKinlay  <bryce@albatross.co.nz>\n+\n+\t* java/util/HashMap.java (HashMap): If 0 is given for initialCapacity \n+\tparamater, bump it to 1.\n+\t* java/util/Hashtable.java (Hashtable): Likewise.\n+\n 2001-03-23  Per Bothner  <per@bothner.com>\n \n \t* java/lang/natDouble.cc (parseDouble):  Cannot use errno to"}, {"sha": "4bc88b7557041cff3f244146450cdb6cbfabe173", "filename": "libjava/java/util/HashMap.java", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f1cd4ab0037948a9800f33b0cbaef7140d467fd8/libjava%2Fjava%2Futil%2FHashMap.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f1cd4ab0037948a9800f33b0cbaef7140d467fd8/libjava%2Fjava%2Futil%2FHashMap.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Futil%2FHashMap.java?ref=f1cd4ab0037948a9800f33b0cbaef7140d467fd8", "patch": "@@ -157,7 +157,7 @@ public HashMap(int initialCapacity) throws IllegalArgumentException\n    * @param   loadFactor       the load factor\n    * \n    * @throws   IllegalArgumentException    if (initialCapacity < 0) ||\n-   *                                          (initialLoadFactor > 1.0) ||\n+   *                                          (loadFactor <= 0)\n    */\n   public HashMap(int initialCapacity, float loadFactor)\n     throws IllegalArgumentException\n@@ -167,7 +167,9 @@ public HashMap(int initialCapacity, float loadFactor)\n       \t\t\t\t\t + initialCapacity);    \n     if (loadFactor <= 0)\n       throw new IllegalArgumentException(\"Illegal Load Factor: \" + loadFactor);\n-  \n+\n+    if (initialCapacity == 0)\n+      initialCapacity = 1;\n     buckets = new Entry[initialCapacity];\n     this.loadFactor = loadFactor;\n     this.threshold = (int) (initialCapacity * loadFactor);"}, {"sha": "4475785bbbb4d34a219ccdb09f56f53024cfd6e4", "filename": "libjava/java/util/Hashtable.java", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f1cd4ab0037948a9800f33b0cbaef7140d467fd8/libjava%2Fjava%2Futil%2FHashtable.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f1cd4ab0037948a9800f33b0cbaef7140d467fd8/libjava%2Fjava%2Futil%2FHashtable.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Futil%2FHashtable.java?ref=f1cd4ab0037948a9800f33b0cbaef7140d467fd8", "patch": "@@ -179,7 +179,9 @@ public Hashtable(int initialCapacity, float loadFactor)\n       \t\t\t\t\t + initialCapacity);    \n     if (loadFactor <= 0)\n       throw new IllegalArgumentException(\"Illegal Load Factor: \" + loadFactor);\n-     \n+    \n+    if (initialCapacity == 0)\n+      initialCapacity = 1;    \n     buckets = new Entry[initialCapacity];\n     this.loadFactor = loadFactor;\n     this.threshold = (int) (initialCapacity * loadFactor);"}]}