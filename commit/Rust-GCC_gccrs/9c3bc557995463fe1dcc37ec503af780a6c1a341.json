{"sha": "9c3bc557995463fe1dcc37ec503af780a6c1a341", "node_id": "C_kwDOANBUbNoAKDljM2JjNTU3OTk1NDYzZmUxZGNjMzdlYzUwM2FmNzgwYTZjMWEzNDE", "commit": {"author": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2022-11-09T12:10:11Z"}, "committer": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2022-11-09T12:10:41Z"}, "message": "sphinx: update diagnostics URLs\n\ngcc/ChangeLog:\n\n\t* opts.cc (get_option_html_page): Port to sphinx URLs.\n\t(get_option_url): Likewise.\n\t(test_get_option_html_page): Likewise.", "tree": {"sha": "044db0c759725711207fb88ce5f834e619613733", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/044db0c759725711207fb88ce5f834e619613733"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9c3bc557995463fe1dcc37ec503af780a6c1a341", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9c3bc557995463fe1dcc37ec503af780a6c1a341", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9c3bc557995463fe1dcc37ec503af780a6c1a341", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9c3bc557995463fe1dcc37ec503af780a6c1a341/comments", "author": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "committer": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d943927ff860cea44a9cf64fc6d591a4a6e37f6f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d943927ff860cea44a9cf64fc6d591a4a6e37f6f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d943927ff860cea44a9cf64fc6d591a4a6e37f6f"}], "stats": {"total": 26, "additions": 14, "deletions": 12}, "files": [{"sha": "c00887ae76eb307cf71d81f92924ac14a2076946", "filename": "gcc/opts.cc", "status": "modified", "additions": 14, "deletions": 12, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9c3bc557995463fe1dcc37ec503af780a6c1a341/gcc%2Fopts.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9c3bc557995463fe1dcc37ec503af780a6c1a341/gcc%2Fopts.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fopts.cc?ref=9c3bc557995463fe1dcc37ec503af780a6c1a341", "patch": "@@ -3608,11 +3608,11 @@ get_option_html_page (int option_index)\n \n   /* Analyzer options are on their own page.  */\n   if (strstr (cl_opt->opt_text, \"analyzer-\"))\n-    return \"gcc/Static-Analyzer-Options.html\";\n+    return \"gcc/gcc-command-options/options-that-control-static-analysis.html\";\n \n   /* Handle -flto= option.  */\n   if (strstr (cl_opt->opt_text, \"flto\"))\n-    return \"gcc/Optimize-Options.html\";\n+    return \"gcc/gcc-command-options/options-that-control-optimization.html\";\n \n #ifdef CL_Fortran\n   if ((cl_opt->flags & CL_Fortran) != 0\n@@ -3623,10 +3623,11 @@ get_option_html_page (int option_index)\n       && (cl_opt->flags & CL_CXX) == 0\n #endif\n      )\n-    return \"gfortran/Error-and-Warning-Options.html\";\n+    return (\"gfortran/gnu-fortran-command-options/\"\n+\t    \"options-to-request-or-suppress-errors-and-warnings.html\");\n #endif\n \n-  return \"gcc/Warning-Options.html\";\n+  return \"gcc/gcc-command-options/options-to-request-or-suppress-warnings.html\";\n }\n \n /* Return malloced memory for a URL describing the option OPTION_INDEX\n@@ -3645,11 +3646,8 @@ get_option_url (diagnostic_context *, int option_index)\n \t\t      \"gcc/Warning-Options.html\".  */\n \t\t   get_option_html_page (option_index),\n \n-\t\t   /* Expect an anchor of the form \"index-Wfoo\" e.g.\n-\t\t      <a name=\"index-Wformat\"></a>, and thus an id within\n-\t\t      the URL of \"#index-Wformat\".  */\n-\t\t   \"#index\", cl_options[option_index].opt_text,\n-\t\t   NULL);\n+\t\t   /* Expect an anchor of the form \"cmdoption-Wfoo\".  */\n+\t\t   \"#cmdoption\", cl_options[option_index].opt_text, NULL);\n   else\n     return NULL;\n }\n@@ -3786,12 +3784,16 @@ namespace selftest {\n static void\n test_get_option_html_page ()\n {\n-  ASSERT_STREQ (get_option_html_page (OPT_Wcpp), \"gcc/Warning-Options.html\");\n+  ASSERT_STREQ (get_option_html_page (OPT_Wcpp),\n+\t\t\"gcc/gcc-command-options/\"\n+\t\t\"options-to-request-or-suppress-warnings.html\");\n   ASSERT_STREQ (get_option_html_page (OPT_Wanalyzer_double_free),\n-\t     \"gcc/Static-Analyzer-Options.html\");\n+\t\t\"gcc/gcc-command-options/\"\n+\t\t\"options-that-control-static-analysis.html\");\n #ifdef CL_Fortran\n   ASSERT_STREQ (get_option_html_page (OPT_Wline_truncation),\n-\t\t\"gfortran/Error-and-Warning-Options.html\");\n+\t\t\"gfortran/gnu-fortran-command-options/\"\n+\t\t\"options-to-request-or-suppress-errors-and-warnings.html\");\n #endif\n }\n "}]}