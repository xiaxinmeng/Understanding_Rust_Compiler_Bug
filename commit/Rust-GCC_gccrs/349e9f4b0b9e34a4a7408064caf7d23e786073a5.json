{"sha": "349e9f4b0b9e34a4a7408064caf7d23e786073a5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzQ5ZTlmNGIwYjllMzRhNGE3NDA4MDY0Y2FmN2QyM2U3ODYwNzNhNQ==", "commit": {"author": {"name": "Aldy Hernandez", "email": "aldyh@redhat.com", "date": "2002-10-11T04:15:14Z"}, "committer": {"name": "Aldy Hernandez", "email": "aldyh@gcc.gnu.org", "date": "2002-10-11T04:15:14Z"}, "message": "extend.texi (Vector Extensions): Remove comment about single element vectors.\n\n\t* extend.texi (Vector Extensions): Remove comment about single\n\telement vectors.\n\nFrom-SVN: r58041", "tree": {"sha": "8c32be4c00a51a316706d44686c7be12f856ab81", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8c32be4c00a51a316706d44686c7be12f856ab81"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/349e9f4b0b9e34a4a7408064caf7d23e786073a5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/349e9f4b0b9e34a4a7408064caf7d23e786073a5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/349e9f4b0b9e34a4a7408064caf7d23e786073a5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/349e9f4b0b9e34a4a7408064caf7d23e786073a5/comments", "author": {"login": "aldyh", "id": 12937877, "node_id": "MDQ6VXNlcjEyOTM3ODc3", "avatar_url": "https://avatars.githubusercontent.com/u/12937877?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aldyh", "html_url": "https://github.com/aldyh", "followers_url": "https://api.github.com/users/aldyh/followers", "following_url": "https://api.github.com/users/aldyh/following{/other_user}", "gists_url": "https://api.github.com/users/aldyh/gists{/gist_id}", "starred_url": "https://api.github.com/users/aldyh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aldyh/subscriptions", "organizations_url": "https://api.github.com/users/aldyh/orgs", "repos_url": "https://api.github.com/users/aldyh/repos", "events_url": "https://api.github.com/users/aldyh/events{/privacy}", "received_events_url": "https://api.github.com/users/aldyh/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "7bdfd72e8db8e421d5c52c263ef4766c8bac2599", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7bdfd72e8db8e421d5c52c263ef4766c8bac2599", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7bdfd72e8db8e421d5c52c263ef4766c8bac2599"}], "stats": {"total": 8, "additions": 5, "deletions": 3}, "files": [{"sha": "b49819b387adac7e6c277037dda72f8068c2e361", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/349e9f4b0b9e34a4a7408064caf7d23e786073a5/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/349e9f4b0b9e34a4a7408064caf7d23e786073a5/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=349e9f4b0b9e34a4a7408064caf7d23e786073a5", "patch": "@@ -1,3 +1,8 @@\n+2002-10-10  Aldy Hernandez  <aldyh@redhat.com>\n+\n+\t* extend.texi (Vector Extensions): Remove comment about single\n+\telement vectors.\n+\n 2002-10-10  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n \n \t* fold-const.c (size_htab_hash): Use htab_hash_pointer."}, {"sha": "cc7fdf17e604e8af7f25579362deb46f00ce1422", "filename": "gcc/doc/extend.texi", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/349e9f4b0b9e34a4a7408064caf7d23e786073a5/gcc%2Fdoc%2Fextend.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/349e9f4b0b9e34a4a7408064caf7d23e786073a5/gcc%2Fdoc%2Fextend.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Fextend.texi?ref=349e9f4b0b9e34a4a7408064caf7d23e786073a5", "patch": "@@ -4443,9 +4443,6 @@ A floating point value, as wide as a SI mode integer, usually 32 bits.\n A floating point value, as wide as a DI mode integer, usually 64 bits.\n @end table\n \n-There are no @code{V1xx} vector modes - they would be identical to the\n-corresponding base mode.\n-\n Specifying a combination that is not valid for the current architecture\n will cause gcc to synthesize the instructions using a narrower mode.\n For example, if you specify a variable of type @code{V4SI} and your"}]}