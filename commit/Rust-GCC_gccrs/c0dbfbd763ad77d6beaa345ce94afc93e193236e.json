{"sha": "c0dbfbd763ad77d6beaa345ce94afc93e193236e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzBkYmZiZDc2M2FkNzdkNmJlYWEzNDVjZTk0YWZjOTNlMTkzMjM2ZQ==", "commit": {"author": {"name": "Iain Buclaw", "email": "ibuclaw@gdcproject.org", "date": "2020-04-08T22:41:14Z"}, "committer": {"name": "Iain Buclaw", "email": "ibuclaw@gdcproject.org", "date": "2020-04-08T22:46:39Z"}, "message": "libphobos: Add --enable-libphobos-checking configure option\n\nAs GDCFLAGS is overriden by the top-level make file with '-O2 -g',\nlibphobos ends up always being built with all contracts, invariants, and\nasserts compiled in.  This adds a new configurable that defaults to omit\ncompiling any run-time checks into the library using '-frelease'.\n\nOther choices either set the flags '-fno-release', enabling all run-time\nchecks, or '-fassert', which only compiles in asserts.\n\nThe omission of compiling in contracts results in a smaller library\nsize, with faster build times.\n\nlibphobos/ChangeLog:\n\n\tPR d/94305\n\t* Makefile.in: Regenerate.\n\t* configure: Regenerate.\n\t* configure.ac: Add --enable-libphobos-checking and substitute\n\tCHECKING_DFLAGS.  Remove -frelease from GDCFLAGS.\n\t* libdruntime/Makefile.am: Add CHECKING_DFLAGS to AM_DFLAGS.\n\t* libdruntime/Makefile.in: Regenerate.\n\t* src/Makefile.am: Add CHECKING_DFLAGS to AM_DFLAGS.\n\t* src/Makefile.in: Regenerate.\n\t* testsuite/Makefile.in: Regenerate.\n\t* testsuite/testsuite_flags.in: Add -fno-release -funittest to\n\t--gdcflags.", "tree": {"sha": "a5ddb4962be29e04a4ab27209a22c240af5114fc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a5ddb4962be29e04a4ab27209a22c240af5114fc"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c0dbfbd763ad77d6beaa345ce94afc93e193236e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c0dbfbd763ad77d6beaa345ce94afc93e193236e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c0dbfbd763ad77d6beaa345ce94afc93e193236e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c0dbfbd763ad77d6beaa345ce94afc93e193236e/comments", "author": {"login": "ibuclaw", "id": 397929, "node_id": "MDQ6VXNlcjM5NzkyOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/397929?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ibuclaw", "html_url": "https://github.com/ibuclaw", "followers_url": "https://api.github.com/users/ibuclaw/followers", "following_url": "https://api.github.com/users/ibuclaw/following{/other_user}", "gists_url": "https://api.github.com/users/ibuclaw/gists{/gist_id}", "starred_url": "https://api.github.com/users/ibuclaw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ibuclaw/subscriptions", "organizations_url": "https://api.github.com/users/ibuclaw/orgs", "repos_url": "https://api.github.com/users/ibuclaw/repos", "events_url": "https://api.github.com/users/ibuclaw/events{/privacy}", "received_events_url": "https://api.github.com/users/ibuclaw/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ibuclaw", "id": 397929, "node_id": "MDQ6VXNlcjM5NzkyOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/397929?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ibuclaw", "html_url": "https://github.com/ibuclaw", "followers_url": "https://api.github.com/users/ibuclaw/followers", "following_url": "https://api.github.com/users/ibuclaw/following{/other_user}", "gists_url": "https://api.github.com/users/ibuclaw/gists{/gist_id}", "starred_url": "https://api.github.com/users/ibuclaw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ibuclaw/subscriptions", "organizations_url": "https://api.github.com/users/ibuclaw/orgs", "repos_url": "https://api.github.com/users/ibuclaw/repos", "events_url": "https://api.github.com/users/ibuclaw/events{/privacy}", "received_events_url": "https://api.github.com/users/ibuclaw/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6e286c8df452787fffe4fb4bd3dbba4d80bc6c12", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6e286c8df452787fffe4fb4bd3dbba4d80bc6c12", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6e286c8df452787fffe4fb4bd3dbba4d80bc6c12"}], "stats": {"total": 98, "additions": 87, "deletions": 11}, "files": [{"sha": "5b9fe432bb9e098be057b76c31a0eaf8214ac16d", "filename": "libphobos/ChangeLog", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c0dbfbd763ad77d6beaa345ce94afc93e193236e/libphobos%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c0dbfbd763ad77d6beaa345ce94afc93e193236e/libphobos%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libphobos%2FChangeLog?ref=c0dbfbd763ad77d6beaa345ce94afc93e193236e", "patch": "@@ -1,3 +1,18 @@\n+2020-04-09  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\tPR d/94305\n+\t* Makefile.in: Regenerate.\n+\t* configure: Regenerate.\n+\t* configure.ac: Add --enable-libphobos-checking and substitute\n+\tCHECKING_DFLAGS.  Remove -frelease from GDCFLAGS.\n+\t* libdruntime/Makefile.am: Add CHECKING_DFLAGS to AM_DFLAGS.\n+\t* libdruntime/Makefile.in: Regenerate.\n+\t* src/Makefile.am: Add CHECKING_DFLAGS to AM_DFLAGS.\n+\t* src/Makefile.in: Regenerate.\n+\t* testsuite/Makefile.in: Regenerate.\n+\t* testsuite/testsuite_flags.in: Add -fno-release -funittest to\n+\t--gdcflags.\n+\n 2020-04-09  Iain Buclaw  <ibuclaw@gdcproject.org>\n \n \t* configure: Regenerate."}, {"sha": "b464d605232919712b2cfb32561a5b8b77ebada1", "filename": "libphobos/Makefile.in", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c0dbfbd763ad77d6beaa345ce94afc93e193236e/libphobos%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c0dbfbd763ad77d6beaa345ce94afc93e193236e/libphobos%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libphobos%2FMakefile.in?ref=c0dbfbd763ad77d6beaa345ce94afc93e193236e", "patch": "@@ -207,6 +207,7 @@ CCASFLAGS = @CCASFLAGS@\n CC_FOR_BUILD = @CC_FOR_BUILD@\n CFLAGS = @CFLAGS@\n CFLAGS_FOR_BUILD = @CFLAGS_FOR_BUILD@\n+CHECKING_DFLAGS = @CHECKING_DFLAGS@\n CPP = @CPP@\n CPPFLAGS = @CPPFLAGS@\n CYGPATH_W = @CYGPATH_W@"}, {"sha": "af597b2525b787ff2ac96865c4649c0a620887b2", "filename": "libphobos/configure", "status": "modified", "additions": 36, "deletions": 4, "changes": 40, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c0dbfbd763ad77d6beaa345ce94afc93e193236e/libphobos%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c0dbfbd763ad77d6beaa345ce94afc93e193236e/libphobos%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libphobos%2Fconfigure?ref=c0dbfbd763ad77d6beaa345ce94afc93e193236e", "patch": "@@ -637,6 +637,7 @@ WARN_DFLAGS\n GDCFLAGSX\n libtool_VERSION\n SPEC_PHOBOS_DEPS\n+CHECKING_DFLAGS\n ENABLE_LIBPHOBOS_FALSE\n ENABLE_LIBPHOBOS_TRUE\n gdc_include_dir\n@@ -842,6 +843,7 @@ with_cross_host\n enable_version_specific_runtime_libs\n with_toolexeclibdir\n enable_libphobos\n+enable_libphobos_checking\n '\n       ac_precious_vars='build_alias\n host_alias\n@@ -1488,6 +1490,11 @@ Optional Features:\n                           Specify that runtime libraries should be installed\n                           in a compiler-specific directory\n   --enable-libphobos      Enable libphobos\n+  --enable-libphobos-checking[=LIST]\n+                          enable expensive run-time checks. With LIST, enable\n+                          only specific categories of checks. Categories are:\n+                          yes,no,all,none,release. Flags are: assert or other\n+                          strings\n \n Optional Packages:\n   --with-PACKAGE[=ARG]    use PACKAGE [ARG=yes]\n@@ -11642,7 +11649,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 11645 \"configure\"\n+#line 11652 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -11748,7 +11755,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 11751 \"configure\"\n+#line 11758 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -15288,6 +15295,31 @@ else\n fi\n \n \n+# Enable expensive internal checks\n+# Check whether --enable-libphobos-checking was given.\n+if test \"${enable_libphobos_checking+set}\" = set; then :\n+  enableval=$enable_libphobos_checking; ac_checking_flags=\"${enableval}\"\n+else\n+  ac_checking_flags=release\n+fi\n+\n+IFS=\"${IFS= \t}\"; ac_save_IFS=\"$IFS\"; IFS=\"$IFS,\"\n+for check in release $ac_checking_flags\n+do\n+\tcase $check in\n+\t# These set all the flags to specific states\n+\tyes|all) RELEASE_FLAG=\"-fno-release\" ; ASSERT_FLAG= ;;\n+\tno|none|release) RELEASE_FLAG=\"-frelease\" ; ASSERT_FLAG= ;;\n+\t# These enable particular checks\n+\tassert) ASSERT_FLAG=\"-fassert\" ;;\n+\t# Accept\n+\t*) ;;\n+\tesac\n+done\n+IFS=\"$ac_save_IFS\"\n+CHECKING_DFLAGS=\"$RELEASE_FLAG $ASSERT_FLAG\"\n+\n+\n # Add drtbegin.o/drtend.o to startfile/endfile specs in libgphobos.spec\n if test \"$DCFG_MINFO_BRACKETING\" = \"false\"; then\n     DRTSTUFF_SPEC=$srcdir/src/drtstuff.spec\n@@ -15306,12 +15338,12 @@ libtool_VERSION=1:0:0\n \n # Set default flags (after DRUNTIME_WERROR!)\n if test -z \"$GDCFLAGS\"; then\n-    GDCFLAGS=\"-g -frelease -O2\"\n+    GDCFLAGS=\"-g -O2\"\n fi\n \n \n if test -z \"$GDCFLAGSX\"; then\n-    GDCFLAGSX=\"-g -fno-release -funittest\"\n+    GDCFLAGSX=\"-g\"\n fi\n \n "}, {"sha": "ffd12981d0bd60bed7e5006198d7bf7ab36a4c67", "filename": "libphobos/configure.ac", "status": "modified", "additions": 27, "deletions": 2, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c0dbfbd763ad77d6beaa345ce94afc93e193236e/libphobos%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c0dbfbd763ad77d6beaa345ce94afc93e193236e/libphobos%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libphobos%2Fconfigure.ac?ref=c0dbfbd763ad77d6beaa345ce94afc93e193236e", "patch": "@@ -187,6 +187,31 @@ yes:*) use_libphobos=yes ;;\n esac\n AM_CONDITIONAL(ENABLE_LIBPHOBOS, test x$use_libphobos = xyes)\n \n+# Enable expensive internal checks\n+AC_ARG_ENABLE(libphobos-checking,\n+[AS_HELP_STRING([[--enable-libphobos-checking[=LIST]]],\n+\t\t[enable expensive run-time checks.  With LIST,\n+\t\t enable only specific categories of checks.\n+\t\t Categories are: yes,no,all,none,release.\n+\t\t Flags are: assert or other strings])],\n+[ac_checking_flags=\"${enableval}\"],[ac_checking_flags=release])\n+IFS=\"${IFS= \t}\"; ac_save_IFS=\"$IFS\"; IFS=\"$IFS,\"\n+for check in release $ac_checking_flags\n+do\n+\tcase $check in\n+\t# These set all the flags to specific states\n+\tyes|all) RELEASE_FLAG=\"-fno-release\" ; ASSERT_FLAG= ;;\n+\tno|none|release) RELEASE_FLAG=\"-frelease\" ; ASSERT_FLAG= ;;\n+\t# These enable particular checks\n+\tassert) ASSERT_FLAG=\"-fassert\" ;;\n+\t# Accept\n+\t*) ;;\n+\tesac\n+done\n+IFS=\"$ac_save_IFS\"\n+CHECKING_DFLAGS=\"$RELEASE_FLAG $ASSERT_FLAG\"\n+AC_SUBST(CHECKING_DFLAGS)\n+\n # Add drtbegin.o/drtend.o to startfile/endfile specs in libgphobos.spec\n if test \"$DCFG_MINFO_BRACKETING\" = \"false\"; then\n     DRTSTUFF_SPEC=$srcdir/src/drtstuff.spec\n@@ -205,12 +230,12 @@ AC_SUBST(libtool_VERSION)\n \n # Set default flags (after DRUNTIME_WERROR!)\n if test -z \"$GDCFLAGS\"; then\n-    GDCFLAGS=\"-g -frelease -O2\"\n+    GDCFLAGS=\"-g -O2\"\n fi\n AC_SUBST(GDCFLAGS)\n \n if test -z \"$GDCFLAGSX\"; then\n-    GDCFLAGSX=\"-g -fno-release -funittest\"\n+    GDCFLAGSX=\"-g\"\n fi\n AC_SUBST(GDCFLAGSX)\n "}, {"sha": "c7b03a5967de8f08e0fd51361d5cfbc73873998b", "filename": "libphobos/libdruntime/Makefile.am", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c0dbfbd763ad77d6beaa345ce94afc93e193236e/libphobos%2Flibdruntime%2FMakefile.am", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c0dbfbd763ad77d6beaa345ce94afc93e193236e/libphobos%2Flibdruntime%2FMakefile.am", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libphobos%2Flibdruntime%2FMakefile.am?ref=c0dbfbd763ad77d6beaa345ce94afc93e193236e", "patch": "@@ -24,7 +24,7 @@ D_EXTRA_DFLAGS=-nostdinc -I $(srcdir) -I .\n # D flags for compilation\n AM_DFLAGS= \\\n \t$(phobos_compiler_pic_flag) \\\n-\t$(WARN_DFLAGS)\n+\t$(WARN_DFLAGS) $(CHECKING_DFLAGS)\n \n # Install all D and DI files\n ALL_DRUNTIME_INSTALL_DSOURCES = $(DRUNTIME_DSOURCES) \\"}, {"sha": "e0688e25c815e00f82d8fe9303452e5b8eccaf01", "filename": "libphobos/libdruntime/Makefile.in", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c0dbfbd763ad77d6beaa345ce94afc93e193236e/libphobos%2Flibdruntime%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c0dbfbd763ad77d6beaa345ce94afc93e193236e/libphobos%2Flibdruntime%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libphobos%2Flibdruntime%2FMakefile.in?ref=c0dbfbd763ad77d6beaa345ce94afc93e193236e", "patch": "@@ -555,6 +555,7 @@ CCASFLAGS = @CCASFLAGS@\n CC_FOR_BUILD = @CC_FOR_BUILD@\n CFLAGS = @CFLAGS@\n CFLAGS_FOR_BUILD = @CFLAGS_FOR_BUILD@\n+CHECKING_DFLAGS = @CHECKING_DFLAGS@\n CPP = @CPP@\n CPPFLAGS = @CPPFLAGS@\n CYGPATH_W = @CYGPATH_W@\n@@ -715,7 +716,7 @@ D_EXTRA_DFLAGS = -nostdinc -I $(srcdir) -I .\n # D flags for compilation\n AM_DFLAGS = \\\n \t$(phobos_compiler_pic_flag) \\\n-\t$(WARN_DFLAGS)\n+\t$(WARN_DFLAGS) $(CHECKING_DFLAGS)\n \n \n # Install all D and DI files"}, {"sha": "d2418a8ca83e0d6fc157a7ee2bc3427f02e80869", "filename": "libphobos/src/Makefile.am", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c0dbfbd763ad77d6beaa345ce94afc93e193236e/libphobos%2Fsrc%2FMakefile.am", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c0dbfbd763ad77d6beaa345ce94afc93e193236e/libphobos%2Fsrc%2FMakefile.am", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libphobos%2Fsrc%2FMakefile.am?ref=c0dbfbd763ad77d6beaa345ce94afc93e193236e", "patch": "@@ -25,7 +25,7 @@ D_EXTRA_DFLAGS=-nostdinc -I $(srcdir) \\\n # D flags for compilation\n AM_DFLAGS= \\\n \t$(phobos_compiler_pic_flag) \\\n-\t$(WARN_DFLAGS)\n+\t$(WARN_DFLAGS) $(CHECKING_DFLAGS)\n \n # Install all D files\n ALL_PHOBOS_INSTALL_DSOURCES = $(PHOBOS_DSOURCES)"}, {"sha": "45651672e1eb0bd25ac0e58eea302cfad85c5048", "filename": "libphobos/src/Makefile.in", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c0dbfbd763ad77d6beaa345ce94afc93e193236e/libphobos%2Fsrc%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c0dbfbd763ad77d6beaa345ce94afc93e193236e/libphobos%2Fsrc%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libphobos%2Fsrc%2FMakefile.in?ref=c0dbfbd763ad77d6beaa345ce94afc93e193236e", "patch": "@@ -278,6 +278,7 @@ CCASFLAGS = @CCASFLAGS@\n CC_FOR_BUILD = @CC_FOR_BUILD@\n CFLAGS = @CFLAGS@\n CFLAGS_FOR_BUILD = @CFLAGS_FOR_BUILD@\n+CHECKING_DFLAGS = @CHECKING_DFLAGS@\n CPP = @CPP@\n CPPFLAGS = @CPPFLAGS@\n CYGPATH_W = @CYGPATH_W@\n@@ -440,7 +441,7 @@ D_EXTRA_DFLAGS = -nostdinc -I $(srcdir) \\\n # D flags for compilation\n AM_DFLAGS = \\\n \t$(phobos_compiler_pic_flag) \\\n-\t$(WARN_DFLAGS)\n+\t$(WARN_DFLAGS) $(CHECKING_DFLAGS)\n \n \n # Install all D files"}, {"sha": "6f0eaf83405b3f9f1caa720120b53086e2f1fe2d", "filename": "libphobos/testsuite/Makefile.in", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c0dbfbd763ad77d6beaa345ce94afc93e193236e/libphobos%2Ftestsuite%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c0dbfbd763ad77d6beaa345ce94afc93e193236e/libphobos%2Ftestsuite%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libphobos%2Ftestsuite%2FMakefile.in?ref=c0dbfbd763ad77d6beaa345ce94afc93e193236e", "patch": "@@ -151,6 +151,7 @@ CCASFLAGS = @CCASFLAGS@\n CC_FOR_BUILD = @CC_FOR_BUILD@\n CFLAGS = @CFLAGS@\n CFLAGS_FOR_BUILD = @CFLAGS_FOR_BUILD@\n+CHECKING_DFLAGS = @CHECKING_DFLAGS@\n CPP = @CPP@\n CPPFLAGS = @CPPFLAGS@\n CYGPATH_W = @CYGPATH_W@"}, {"sha": "808dde30993f74cb2d844b5a10b388088fbdf502", "filename": "libphobos/testsuite/testsuite_flags.in", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c0dbfbd763ad77d6beaa345ce94afc93e193236e/libphobos%2Ftestsuite%2Ftestsuite_flags.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c0dbfbd763ad77d6beaa345ce94afc93e193236e/libphobos%2Ftestsuite%2Ftestsuite_flags.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libphobos%2Ftestsuite%2Ftestsuite_flags.in?ref=c0dbfbd763ad77d6beaa345ce94afc93e193236e", "patch": "@@ -28,7 +28,7 @@ case ${query} in\n       ;;\n     --gdcflags)\n       GDCFLAGS_default=\"-fmessage-length=0 -fno-show-column\"\n-      GDCFLAGS_config=\"@WARN_DFLAGS@ @GDCFLAGSX@\"\n+      GDCFLAGS_config=\"@WARN_DFLAGS@ @GDCFLAGSX@ -fno-release -funittest\"\n       echo ${GDCFLAGS_default} ${GDCFLAGS_config}\n       ;;\n     --gdcpaths)"}]}