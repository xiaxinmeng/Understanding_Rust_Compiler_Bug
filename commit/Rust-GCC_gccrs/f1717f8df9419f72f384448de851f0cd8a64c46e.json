{"sha": "f1717f8df9419f72f384448de851f0cd8a64c46e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjE3MTdmOGRmOTQxOWY3MmYzODQ0NDhkZTg1MWYwY2Q4YTY0YzQ2ZQ==", "commit": {"author": {"name": "Kito Cheng", "email": "kito@0xlab.org", "date": "2014-09-18T22:34:23Z"}, "committer": {"name": "Joseph Myers", "email": "jsm28@gcc.gnu.org", "date": "2014-09-18T22:34:23Z"}, "message": "Add header guard to several header files.\n\n2014-09-19  Kito Cheng  <kito@0xlab.org>\n\n\t* except.h: Fix header guard.\n\t* addresses.h: Add missing header guard.\n\t* cfghooks.h: Likewise.\n\t* collect-utils.h: Likewise.\n\t* collect2-aix.h: Likewise.\n\t* conditions.h: Likewise.\n\t* cselib.h: Likewise.\n\t* dwarf2asm.h: Likewise.\n\t* graphds.h: Likewise.\n\t* graphite-scop-detection.h: Likewise.\n\t* gsyms.h: Likewise.\n\t* hw-doloop.h: Likewise.\n\t* incpath.h: Likewise.\n\t* ipa-inline.h: Likewise.\n\t* ipa-ref.h: Likewise.\n\t* ira-int.h: Likewise.\n\t* ira.h: Likewise.\n\t* lra-int.h: Likewise.\n\t* lra.h: Likewise.\n\t* lto-section-names.h: Likewise.\n\t* read-md.h: Likewise.\n\t* reload.h: Likewise.\n\t* rtl-error.h: Likewise.\n\t* sdbout.h: Likewise.\n\t* targhooks.h: Likewise.\n\t* tree-affine.h: Likewise.\n\t* xcoff.h: Likewise.\n\t* xcoffout.h: Likewise.\n\nFrom-SVN: r215365", "tree": {"sha": "51ef7cf67814b3a880c9055544cea24abae3beb5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/51ef7cf67814b3a880c9055544cea24abae3beb5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f1717f8df9419f72f384448de851f0cd8a64c46e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f1717f8df9419f72f384448de851f0cd8a64c46e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f1717f8df9419f72f384448de851f0cd8a64c46e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f1717f8df9419f72f384448de851f0cd8a64c46e/comments", "author": {"login": "kito-cheng", "id": 2723185, "node_id": "MDQ6VXNlcjI3MjMxODU=", "avatar_url": "https://avatars.githubusercontent.com/u/2723185?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kito-cheng", "html_url": "https://github.com/kito-cheng", "followers_url": "https://api.github.com/users/kito-cheng/followers", "following_url": "https://api.github.com/users/kito-cheng/following{/other_user}", "gists_url": "https://api.github.com/users/kito-cheng/gists{/gist_id}", "starred_url": "https://api.github.com/users/kito-cheng/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kito-cheng/subscriptions", "organizations_url": "https://api.github.com/users/kito-cheng/orgs", "repos_url": "https://api.github.com/users/kito-cheng/repos", "events_url": "https://api.github.com/users/kito-cheng/events{/privacy}", "received_events_url": "https://api.github.com/users/kito-cheng/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jsm28", "id": 10537793, "node_id": "MDQ6VXNlcjEwNTM3Nzkz", "avatar_url": "https://avatars.githubusercontent.com/u/10537793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsm28", "html_url": "https://github.com/jsm28", "followers_url": "https://api.github.com/users/jsm28/followers", "following_url": "https://api.github.com/users/jsm28/following{/other_user}", "gists_url": "https://api.github.com/users/jsm28/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsm28/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsm28/subscriptions", "organizations_url": "https://api.github.com/users/jsm28/orgs", "repos_url": "https://api.github.com/users/jsm28/repos", "events_url": "https://api.github.com/users/jsm28/events{/privacy}", "received_events_url": "https://api.github.com/users/jsm28/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2fb5f0da9dff6e7f4e394da90c0edcc333402217", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2fb5f0da9dff6e7f4e394da90c0edcc333402217", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2fb5f0da9dff6e7f4e394da90c0edcc333402217"}], "stats": {"total": 164, "additions": 162, "deletions": 2}, "files": [{"sha": "37749c7b4b9e30efd54f53e67fe89e94f63af7c1", "filename": "gcc/ChangeLog", "status": "modified", "additions": 31, "deletions": 0, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f1717f8df9419f72f384448de851f0cd8a64c46e/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f1717f8df9419f72f384448de851f0cd8a64c46e/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=f1717f8df9419f72f384448de851f0cd8a64c46e", "patch": "@@ -1,3 +1,34 @@\n+2014-09-19  Kito Cheng  <kito@0xlab.org>\n+\n+\t* except.h: Fix header guard.\n+\t* addresses.h: Add missing header guard.\n+\t* cfghooks.h: Likewise.\n+\t* collect-utils.h: Likewise.\n+\t* collect2-aix.h: Likewise.\n+\t* conditions.h: Likewise.\n+\t* cselib.h: Likewise.\n+\t* dwarf2asm.h: Likewise.\n+\t* graphds.h: Likewise.\n+\t* graphite-scop-detection.h: Likewise.\n+\t* gsyms.h: Likewise.\n+\t* hw-doloop.h: Likewise.\n+\t* incpath.h: Likewise.\n+\t* ipa-inline.h: Likewise.\n+\t* ipa-ref.h: Likewise.\n+\t* ira-int.h: Likewise.\n+\t* ira.h: Likewise.\n+\t* lra-int.h: Likewise.\n+\t* lra.h: Likewise.\n+\t* lto-section-names.h: Likewise.\n+\t* read-md.h: Likewise.\n+\t* reload.h: Likewise.\n+\t* rtl-error.h: Likewise.\n+\t* sdbout.h: Likewise.\n+\t* targhooks.h: Likewise.\n+\t* tree-affine.h: Likewise.\n+\t* xcoff.h: Likewise.\n+\t* xcoffout.h: Likewise.\n+\n 2014-09-18  Vladimir Makarov  <vmakarov@redhat.com>\n \n \tPR debug/63285"}, {"sha": "3f0089a87f1d8492fc2568b37b3fc34b18a0981f", "filename": "gcc/addresses.h", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f1717f8df9419f72f384448de851f0cd8a64c46e/gcc%2Faddresses.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f1717f8df9419f72f384448de851f0cd8a64c46e/gcc%2Faddresses.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Faddresses.h?ref=f1717f8df9419f72f384448de851f0cd8a64c46e", "patch": "@@ -21,6 +21,9 @@ along with GCC; see the file COPYING3.  If not see\n    MODE_BASE_REG_REG_CLASS, MODE_BASE_REG_CLASS and BASE_REG_CLASS.\n    Arguments as for the MODE_CODE_BASE_REG_CLASS macro.  */\n \n+#ifndef GCC_ADDRESSES_H\n+#define GCC_ADDRESSES_H\n+\n static inline enum reg_class\n base_reg_class (enum machine_mode mode ATTRIBUTE_UNUSED,\n \t\taddr_space_t as ATTRIBUTE_UNUSED,\n@@ -82,3 +85,5 @@ regno_ok_for_base_p (unsigned regno, enum machine_mode mode, addr_space_t as,\n \n   return ok_for_base_p_1 (regno, mode, as, outer_code, index_code);\n }\n+\n+#endif /* GCC_ADDRESSES_H */"}, {"sha": "1b8587a5b1bd71afc8515259139ad08c8379f4b9", "filename": "gcc/cfghooks.h", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f1717f8df9419f72f384448de851f0cd8a64c46e/gcc%2Fcfghooks.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f1717f8df9419f72f384448de851f0cd8a64c46e/gcc%2Fcfghooks.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcfghooks.h?ref=f1717f8df9419f72f384448de851f0cd8a64c46e", "patch": "@@ -18,6 +18,9 @@ You should have received a copy of the GNU General Public License\n along with GCC; see the file COPYING3.  If not see\n <http://www.gnu.org/licenses/>.  */\n \n+#ifndef GCC_CFGHOOKS_H\n+#define GCC_CFGHOOKS_H\n+\n /* Only basic-block.h includes this.  */\n \n struct cfg_hooks\n@@ -221,3 +224,4 @@ extern void gimple_register_cfg_hooks (void);\n extern struct cfg_hooks get_cfg_hooks (void);\n extern void set_cfg_hooks (struct cfg_hooks);\n \n+#endif /* GCC_CFGHOOKS_H */"}, {"sha": "ba1985e0e21b51944633ba0444a3a21df9b7f6fc", "filename": "gcc/collect-utils.h", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f1717f8df9419f72f384448de851f0cd8a64c46e/gcc%2Fcollect-utils.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f1717f8df9419f72f384448de851f0cd8a64c46e/gcc%2Fcollect-utils.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcollect-utils.h?ref=f1717f8df9419f72f384448de851f0cd8a64c46e", "patch": "@@ -17,6 +17,9 @@ You should have received a copy of the GNU General Public License\n along with GCC; see the file COPYING3.  If not see\n <http://www.gnu.org/licenses/>.  */\n \n+#ifndef GCC_COLLECT_UTILS_H\n+#define GCC_COLLECT_UTILS_H\n+\n /* Provided in collect-utils.c.  */\n extern void notice (const char *, ...)\n   __attribute__ ((format (printf, 1, 2)));\n@@ -42,3 +45,5 @@ extern const char tool_name[];\n /* Called by utils_cleanup.  */\n extern void tool_cleanup (bool);\n extern void maybe_unlink (const char *);\n+\n+#endif /* GCC_COLLECT_UTILS_H */"}, {"sha": "40f855e96615819f8135465b01e1fdb4f536c781", "filename": "gcc/collect2-aix.h", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f1717f8df9419f72f384448de851f0cd8a64c46e/gcc%2Fcollect2-aix.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f1717f8df9419f72f384448de851f0cd8a64c46e/gcc%2Fcollect2-aix.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcollect2-aix.h?ref=f1717f8df9419f72f384448de851f0cd8a64c46e", "patch": "@@ -17,6 +17,8 @@ You should have received a copy of the GNU General Public License\n along with GCC; see the file COPYING3.  If not see\n <http://www.gnu.org/licenses/>.  */\n \n+#ifndef GCC_COLLECT2_AIX_H\n+#define GCC_COLLECT2_AIX_H\n /* collect2-aix.c requires mmap support.  It should otherwise be\n    fairly portable.  */\n #if defined(CROSS_DIRECTORY_STRUCTURE) \\\n@@ -300,3 +302,5 @@ extern int ldtbread (LDFILE *, long, SYMENT *);\n extern int ldclose (LDFILE *);\n \n #endif\n+\n+#endif /* GCC_COLLECT2_AIX_H */"}, {"sha": "5162957fbdea5ce32cd214c4650a03eff766ecd6", "filename": "gcc/conditions.h", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f1717f8df9419f72f384448de851f0cd8a64c46e/gcc%2Fconditions.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f1717f8df9419f72f384448de851f0cd8a64c46e/gcc%2Fconditions.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconditions.h?ref=f1717f8df9419f72f384448de851f0cd8a64c46e", "patch": "@@ -17,6 +17,9 @@ You should have received a copy of the GNU General Public License\n along with GCC; see the file COPYING3.  If not see\n <http://www.gnu.org/licenses/>.  */\n \n+#ifndef GCC_CONDITIONS_H\n+#define GCC_CONDITIONS_H\n+\n /* None of the things in the files exist if we don't use CC0.  */\n \n #ifdef HAVE_cc0\n@@ -115,3 +118,5 @@ extern CC_STATUS cc_status;\n   CC_STATUS_MDEP_INIT)\n \n #endif\n+\n+#endif /* GCC_CONDITIONS_H */"}, {"sha": "205f1806ace72899329819fed24a2b4a6955a301", "filename": "gcc/cselib.h", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f1717f8df9419f72f384448de851f0cd8a64c46e/gcc%2Fcselib.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f1717f8df9419f72f384448de851f0cd8a64c46e/gcc%2Fcselib.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcselib.h?ref=f1717f8df9419f72f384448de851f0cd8a64c46e", "patch": "@@ -17,6 +17,9 @@ You should have received a copy of the GNU General Public License\n along with GCC; see the file COPYING3.  If not see\n <http://www.gnu.org/licenses/>.  */\n \n+#ifndef GCC_CSELIB_H\n+#define GCC_CSELIB_H\n+\n /* Describe a value.  */\n struct cselib_val {\n   /* The hash value.  */\n@@ -120,3 +123,5 @@ canonical_cselib_val (cselib_val *val)\n   gcc_checking_assert (canonical_cselib_val (canon) == canon);\n   return canon;\n }\n+\n+#endif /* GCC_CSELIB_H */"}, {"sha": "1122c856046821c56cdf09bfd6fa9103ed7173a4", "filename": "gcc/dwarf2asm.h", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f1717f8df9419f72f384448de851f0cd8a64c46e/gcc%2Fdwarf2asm.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f1717f8df9419f72f384448de851f0cd8a64c46e/gcc%2Fdwarf2asm.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdwarf2asm.h?ref=f1717f8df9419f72f384448de851f0cd8a64c46e", "patch": "@@ -17,6 +17,8 @@ You should have received a copy of the GNU General Public License\n along with GCC; see the file COPYING3.  If not see\n <http://www.gnu.org/licenses/>.  */\n \n+#ifndef GCC_DWARF2ASM_H\n+#define GCC_DWARF2ASM_H\n \n extern void dw2_assemble_integer (int, rtx);\n \n@@ -86,3 +88,5 @@ extern void dw2_asm_output_delta_sleb128 (const char *, const char *,\n \t\t\t\t\t  const char *, ...)\n      ATTRIBUTE_NULL_PRINTF_3;\n #endif\n+\n+#endif /* GCC_DWARF2ASM_H */"}, {"sha": "d01a3a083be8fb9df1a74183401e33864f5e07af", "filename": "gcc/except.h", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f1717f8df9419f72f384448de851f0cd8a64c46e/gcc%2Fexcept.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f1717f8df9419f72f384448de851f0cd8a64c46e/gcc%2Fexcept.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fexcept.h?ref=f1717f8df9419f72f384448de851f0cd8a64c46e", "patch": "@@ -22,8 +22,7 @@ along with GCC; see the file COPYING3.  If not see\n    that the compiler can keep track of where this file is included.  This\n    is e.g. used to avoid including this file in front-end specific files.  */\n #ifndef GCC_EXCEPT_H\n-#  define GCC_EXCEPT_H\n-#endif\n+#define GCC_EXCEPT_H\n \n #include \"hash-map.h\"\n #include \"hashtab.h\"\n@@ -333,3 +332,5 @@ ehr_next (eh_region r, eh_region start)\n   for ((R) = (FN)->eh->region_tree; (R) != NULL; (R) = ehr_next (R, NULL))\n \n #define FOR_ALL_EH_REGION(R) FOR_ALL_EH_REGION_FN (R, cfun)\n+\n+#endif"}, {"sha": "fbae09c2c554850190aec974bc71b6d3cb3e9834", "filename": "gcc/graphds.h", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f1717f8df9419f72f384448de851f0cd8a64c46e/gcc%2Fgraphds.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f1717f8df9419f72f384448de851f0cd8a64c46e/gcc%2Fgraphds.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgraphds.h?ref=f1717f8df9419f72f384448de851f0cd8a64c46e", "patch": "@@ -17,6 +17,9 @@ You should have received a copy of the GNU General Public License\n along with GCC; see the file COPYING3.  If not see\n <http://www.gnu.org/licenses/>.  */\n \n+#ifndef GCC_GRAPHDS_H\n+#define GCC_GRAPHDS_H\n+\n /* Structure representing edge of a graph.  */\n \n struct graph_edge\n@@ -59,3 +62,5 @@ void graphds_domtree (struct graph *, int, int *, int *, int *);\n typedef void (*graphds_edge_callback) (struct graph *, struct graph_edge *);\n void for_each_edge (struct graph *, graphds_edge_callback);\n void free_graph (struct graph *g);\n+\n+#endif /* GCC_GRAPHDS_H */"}, {"sha": "71b88275eb0a46b4ed9702dab04a686f28f84253", "filename": "gcc/graphite-scop-detection.h", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f1717f8df9419f72f384448de851f0cd8a64c46e/gcc%2Fgraphite-scop-detection.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f1717f8df9419f72f384448de851f0cd8a64c46e/gcc%2Fgraphite-scop-detection.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgraphite-scop-detection.h?ref=f1717f8df9419f72f384448de851f0cd8a64c46e", "patch": "@@ -19,7 +19,11 @@ You should have received a copy of the GNU General Public License\n along with GCC; see the file COPYING3.  If not see\n <http://www.gnu.org/licenses/>.  */\n \n+#ifndef GCC_GRAPHITE_SCOP_DETECTION_H\n+#define GCC_GRAPHITE_SCOP_DETECTION_H\n \n extern void build_scops (vec<scop_p> *);\n extern void dot_all_scops (vec<scop_p> );\n extern void dot_scop (scop_p);\n+\n+#endif /* GCC_GRAPHITE_SCOP_DETECTION_H */"}, {"sha": "3aeb1da3dfa52200543889c37eb46dbe390b6cf1", "filename": "gcc/gsyms.h", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f1717f8df9419f72f384448de851f0cd8a64c46e/gcc%2Fgsyms.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f1717f8df9419f72f384448de851f0cd8a64c46e/gcc%2Fgsyms.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgsyms.h?ref=f1717f8df9419f72f384448de851f0cd8a64c46e", "patch": "@@ -18,6 +18,8 @@ along with GCC; see the file COPYING3.  If not see\n \n /* For cross compilation, use the portable definitions from the COFF\n    documentation.  */\n+#ifndef GCC_GSYMS_H\n+#define GCC_GSYMS_H\n \n #define __GNU_SYMS__\n \n@@ -102,3 +104,5 @@ enum sdb_masks\n #endif\n   N_TSHIFT = 2\n };\n+\n+#endif /* GCC_GSYMS_H */"}, {"sha": "1e2a87f2f893363b0d9066f413409e99d676a486", "filename": "gcc/hw-doloop.h", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f1717f8df9419f72f384448de851f0cd8a64c46e/gcc%2Fhw-doloop.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f1717f8df9419f72f384448de851f0cd8a64c46e/gcc%2Fhw-doloop.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fhw-doloop.h?ref=f1717f8df9419f72f384448de851f0cd8a64c46e", "patch": "@@ -18,6 +18,9 @@ You should have received a copy of the GNU General Public License\n along with GCC; see the file COPYING3.  If not see\n <http://www.gnu.org/licenses/>.  */\n \n+#ifndef GCC_HW_DOLOOP_H\n+#define GCC_HW_DOLOOP_H\n+\n /* We need to keep a vector of loops */\n typedef struct hwloop_info_d *hwloop_info;\n \n@@ -153,3 +156,5 @@ struct hw_doloop_hooks\n };\n \n extern void reorg_loops (bool, struct hw_doloop_hooks *);\n+\n+#endif /* GCC_HW_DOLOOP_H */"}, {"sha": "0826d26140f01bbbc3a2169a684f3a3f93f52425", "filename": "gcc/incpath.h", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f1717f8df9419f72f384448de851f0cd8a64c46e/gcc%2Fincpath.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f1717f8df9419f72f384448de851f0cd8a64c46e/gcc%2Fincpath.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fincpath.h?ref=f1717f8df9419f72f384448de851f0cd8a64c46e", "patch": "@@ -15,6 +15,9 @@\n    along with this program; see the file COPYING3.  If not see\n    <http://www.gnu.org/licenses/>.  */\n \n+#ifndef GCC_INCPATH_H\n+#define GCC_INCPATH_H\n+\n extern void split_quote_chain (void);\n extern void add_path (char *, int, int, bool);\n extern void register_include_chains (cpp_reader *, const char *,\n@@ -32,3 +35,5 @@ struct target_c_incpath_s {\n extern struct target_c_incpath_s target_c_incpath;\n \n enum { QUOTE = 0, BRACKET, SYSTEM, AFTER };\n+\n+#endif /* GCC_INCPATH_H */"}, {"sha": "75973230bc584767b5a47086a6695eb46d9d4308", "filename": "gcc/ipa-inline.h", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f1717f8df9419f72f384448de851f0cd8a64c46e/gcc%2Fipa-inline.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f1717f8df9419f72f384448de851f0cd8a64c46e/gcc%2Fipa-inline.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fipa-inline.h?ref=f1717f8df9419f72f384448de851f0cd8a64c46e", "patch": "@@ -18,6 +18,9 @@ You should have received a copy of the GNU General Public License\n along with GCC; see the file COPYING3.  If not see\n <http://www.gnu.org/licenses/>.  */\n \n+#ifndef GCC_IPA_INLINE_H\n+#define GCC_IPA_INLINE_H\n+\n #include \"ipa-prop.h\"\n \n /* Representation of inline parameters that do depend on context function is\n@@ -347,3 +350,5 @@ reset_edge_growth_cache (struct cgraph_edge *edge)\n       edge_growth_cache[edge->uid] = zero;\n     }\n }\n+\n+#endif /* GCC_IPA_INLINE_H */"}, {"sha": "6709933596e4ef2ca116578763ce3054a5fd5b96", "filename": "gcc/ipa-ref.h", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f1717f8df9419f72f384448de851f0cd8a64c46e/gcc%2Fipa-ref.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f1717f8df9419f72f384448de851f0cd8a64c46e/gcc%2Fipa-ref.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fipa-ref.h?ref=f1717f8df9419f72f384448de851f0cd8a64c46e", "patch": "@@ -18,6 +18,9 @@ You should have received a copy of the GNU General Public License\n along with GCC; see the file COPYING3.  If not see\n <http://www.gnu.org/licenses/>.  */\n \n+#ifndef GCC_IPA_REF_H\n+#define GCC_IPA_REF_H\n+\n struct cgraph_node;\n class varpool_node;\n class symtab_node;\n@@ -127,3 +130,5 @@ struct GTY(()) ipa_ref_list\n      or GGC will try to mark middle of references vectors.  */\n   vec<ipa_ref_ptr>  GTY((skip)) referring;\n };\n+\n+#endif /* GCC_IPA_REF_H */"}, {"sha": "e3db1c7630dc754a3a6ac20975057aaea5b61315", "filename": "gcc/ira-int.h", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f1717f8df9419f72f384448de851f0cd8a64c46e/gcc%2Fira-int.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f1717f8df9419f72f384448de851f0cd8a64c46e/gcc%2Fira-int.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fira-int.h?ref=f1717f8df9419f72f384448de851f0cd8a64c46e", "patch": "@@ -18,6 +18,9 @@ You should have received a copy of the GNU General Public License\n along with GCC; see the file COPYING3.  If not see\n <http://www.gnu.org/licenses/>.  */\n \n+#ifndef GCC_IRA_INT_H\n+#define GCC_IRA_INT_H\n+\n #include \"cfgloop.h\"\n #include \"ira.h\"\n #include \"alloc-pool.h\"\n@@ -1507,3 +1510,5 @@ ira_allocate_and_set_or_copy_costs (int **vec, enum reg_class aclass,\n \n extern rtx ira_create_new_reg (rtx);\n extern int first_moveable_pseudo, last_moveable_pseudo;\n+\n+#endif /* GCC_IRA_INT_H */"}, {"sha": "a3bcbdc875443f479ebafd9085881317dda1ae98", "filename": "gcc/ira.h", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f1717f8df9419f72f384448de851f0cd8a64c46e/gcc%2Fira.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f1717f8df9419f72f384448de851f0cd8a64c46e/gcc%2Fira.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fira.h?ref=f1717f8df9419f72f384448de851f0cd8a64c46e", "patch": "@@ -19,6 +19,9 @@ You should have received a copy of the GNU General Public License\n along with GCC; see the file COPYING3.  If not see\n <http://www.gnu.org/licenses/>.  */\n \n+#ifndef GCC_IRA_H\n+#define GCC_IRA_H\n+\n /* True when we use LRA instead of reload pass for the current\n    function.  */\n extern bool ira_use_lra_p;\n@@ -195,3 +198,5 @@ extern bool ira_better_spill_reload_regno_p (int *, int *, rtx, rtx, rtx);\n extern bool ira_bad_reload_regno (int, rtx, rtx);\n \n extern void ira_adjust_equiv_reg_cost (unsigned, int);\n+\n+#endif /* GCC_IRA_H */"}, {"sha": "28903e1cad8afeb97620eb827955df4aa0dc8f36", "filename": "gcc/lra-int.h", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f1717f8df9419f72f384448de851f0cd8a64c46e/gcc%2Flra-int.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f1717f8df9419f72f384448de851f0cd8a64c46e/gcc%2Flra-int.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flra-int.h?ref=f1717f8df9419f72f384448de851f0cd8a64c46e", "patch": "@@ -18,6 +18,9 @@ You should have received a copy of the GNU General Public License\n along with GCC; see the file COPYING3.\tIf not see\n <http://www.gnu.org/licenses/>.\t */\n \n+#ifndef GCC_LRA_INT_H\n+#define GCC_LRA_INT_H\n+\n #include \"lra.h\"\n #include \"bitmap.h\"\n #include \"recog.h\"\n@@ -501,3 +504,5 @@ lra_assign_reg_val (int from, int to)\n   lra_reg_info[to].val = lra_reg_info[from].val;\n   lra_reg_info[to].offset = lra_reg_info[from].offset;\n }\n+\n+#endif /* GCC_LRA_INT_H */"}, {"sha": "fcdea70a9f7ccad3160381d022f91de92b1cf362", "filename": "gcc/lra.h", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f1717f8df9419f72f384448de851f0cd8a64c46e/gcc%2Flra.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f1717f8df9419f72f384448de851f0cd8a64c46e/gcc%2Flra.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flra.h?ref=f1717f8df9419f72f384448de851f0cd8a64c46e", "patch": "@@ -19,6 +19,9 @@ You should have received a copy of the GNU General Public License\n along with GCC; see the file COPYING3.\tIf not see\n <http://www.gnu.org/licenses/>.\t */\n \n+#ifndef GCC_LRA_H\n+#define GCC_LRA_H\n+\n extern bool lra_simple_p;\n \n /* Return the allocno reg class of REGNO.  If it is a reload pseudo,\n@@ -37,3 +40,5 @@ extern rtx lra_eliminate_regs (rtx, enum machine_mode, rtx);\n extern void lra (FILE *);\n extern void lra_init_once (void);\n extern void lra_finish_once (void);\n+\n+#endif /* GCC_LRA_H */"}, {"sha": "cb7523098729ed6b8697e6fbcb58694f7ec44c45", "filename": "gcc/lto-section-names.h", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f1717f8df9419f72f384448de851f0cd8a64c46e/gcc%2Flto-section-names.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f1717f8df9419f72f384448de851f0cd8a64c46e/gcc%2Flto-section-names.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flto-section-names.h?ref=f1717f8df9419f72f384448de851f0cd8a64c46e", "patch": "@@ -17,6 +17,9 @@ You should have received a copy of the GNU General Public License\n along with GCC; see the file COPYING3.  If not see\n <http://www.gnu.org/licenses/>.  */\n \n+#ifndef GCC_LTO_SECTION_NAMES_H\n+#define GCC_LTO_SECTION_NAMES_H\n+\n /* The string that is the prefix on the section names we make for lto.\n    For decls the DECL_ASSEMBLER_NAME is appended to make the section\n    name for the functions and static_initializers.  For other types of\n@@ -26,3 +29,5 @@ along with GCC; see the file COPYING3.  If not see\n /* Segment name for LTO sections.  This is only used for Mach-O.  */\n \n #define LTO_SEGMENT_NAME \"__GNU_LTO\"\n+\n+#endif /* GCC_LTO_SECTION_NAMES_H */"}, {"sha": "cb328b8457267253de5bd614fb493b923606b996", "filename": "gcc/read-md.h", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f1717f8df9419f72f384448de851f0cd8a64c46e/gcc%2Fread-md.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f1717f8df9419f72f384448de851f0cd8a64c46e/gcc%2Fread-md.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fread-md.h?ref=f1717f8df9419f72f384448de851f0cd8a64c46e", "patch": "@@ -17,6 +17,9 @@ You should have received a copy of the GNU General Public License\n along with GCC; see the file COPYING3.  If not see\n <http://www.gnu.org/licenses/>.  */\n \n+#ifndef GCC_READ_MD_H\n+#define GCC_READ_MD_H\n+\n #include \"obstack.h\"\n #include \"hashtab.h\"\n \n@@ -138,3 +141,5 @@ extern void traverse_enum_types (htab_trav, void *);\n extern struct enum_type *lookup_enum_type (const char *);\n extern bool read_md_files (int, char **, bool (*) (const char *),\n \t\t\t   directive_handler_t);\n+\n+#endif /* GCC_READ_MD_H */"}, {"sha": "e9c109542ea77cf5034c67c099ccbca77e72fa5e", "filename": "gcc/reload.h", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f1717f8df9419f72f384448de851f0cd8a64c46e/gcc%2Freload.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f1717f8df9419f72f384448de851f0cd8a64c46e/gcc%2Freload.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Freload.h?ref=f1717f8df9419f72f384448de851f0cd8a64c46e", "patch": "@@ -17,6 +17,8 @@ You should have received a copy of the GNU General Public License\n along with GCC; see the file COPYING3.  If not see\n <http://www.gnu.org/licenses/>.  */\n \n+#ifndef GCC_RELOAD_H\n+#define GCC_RELOAD_H\n \n /* If secondary reloads are the same for inputs and outputs, define those\n    macros here.  */\n@@ -458,3 +460,5 @@ extern rtx reload_adjust_reg_for_mode (rtx, enum machine_mode);\n \n /* Allocate or grow the reg_equiv tables, initializing new entries to 0.  */\n extern void grow_reg_equivs (void);\n+\n+#endif /* GCC_RELOAD_H */"}, {"sha": "ad38545c34a09c0b69b9d208dfffea1b8f95b97c", "filename": "gcc/rtl-error.h", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f1717f8df9419f72f384448de851f0cd8a64c46e/gcc%2Frtl-error.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f1717f8df9419f72f384448de851f0cd8a64c46e/gcc%2Frtl-error.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frtl-error.h?ref=f1717f8df9419f72f384448de851f0cd8a64c46e", "patch": "@@ -17,10 +17,15 @@ You should have received a copy of the GNU General Public License\n along with GCC; see the file COPYING3.  If not see\n <http://www.gnu.org/licenses/>.  */\n \n+#ifndef GCC_RTL_ERROR_H\n+#define GCC_RTL_ERROR_H\n+\n #include \"rtl.h\"\n #include \"diagnostic-core.h\"\n \n extern void error_for_asm (const rtx_insn *, const char *,\n \t\t\t   ...) ATTRIBUTE_GCC_DIAG(2,3);\n extern void warning_for_asm (const rtx_insn *, const char *,\n \t\t\t     ...) ATTRIBUTE_GCC_DIAG(2,3);\n+\n+#endif /* GCC_RTL_ERROR_H */"}, {"sha": "3d8a88647416d8580b25bad53b32d9accffff844", "filename": "gcc/sdbout.h", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f1717f8df9419f72f384448de851f0cd8a64c46e/gcc%2Fsdbout.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f1717f8df9419f72f384448de851f0cd8a64c46e/gcc%2Fsdbout.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fsdbout.h?ref=f1717f8df9419f72f384448de851f0cd8a64c46e", "patch": "@@ -17,5 +17,10 @@ You should have received a copy of the GNU General Public License\n along with GCC; see the file COPYING3.  If not see\n <http://www.gnu.org/licenses/>.  */\n \n+#ifndef GCC_SDBOUT_H\n+#define GCC_SDBOUT_H\n+\n extern void sdbout_symbol (tree, int);\n extern void sdbout_types (tree);\n+\n+#endif /* GCC_SDBOUT_H */"}, {"sha": "9178c30d3fb714e855a30ceffb9af249295a8419", "filename": "gcc/targhooks.h", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f1717f8df9419f72f384448de851f0cd8a64c46e/gcc%2Ftarghooks.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f1717f8df9419f72f384448de851f0cd8a64c46e/gcc%2Ftarghooks.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftarghooks.h?ref=f1717f8df9419f72f384448de851f0cd8a64c46e", "patch": "@@ -17,6 +17,9 @@ You should have received a copy of the GNU General Public License\n along with GCC; see the file COPYING3.  If not see\n <http://www.gnu.org/licenses/>.  */\n \n+#ifndef GCC_TARGHOOKS_H\n+#define GCC_TARGHOOKS_H\n+\n extern bool default_legitimate_address_p (enum machine_mode, rtx, bool);\n \n extern void default_external_libcall (rtx);\n@@ -212,3 +215,5 @@ extern tree std_gimplify_va_arg_expr (tree, tree, gimple_seq *, gimple_seq *);\n extern bool can_use_doloop_if_innermost (const widest_int &,\n \t\t\t\t\t const widest_int &,\n \t\t\t\t\t unsigned int, bool);\n+\n+#endif /* GCC_TARGHOOKS_H */"}, {"sha": "5cf31241e9832aa7dde1ca1ad2fbd7d9ca0421d8", "filename": "gcc/tree-affine.h", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f1717f8df9419f72f384448de851f0cd8a64c46e/gcc%2Ftree-affine.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f1717f8df9419f72f384448de851f0cd8a64c46e/gcc%2Ftree-affine.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-affine.h?ref=f1717f8df9419f72f384448de851f0cd8a64c46e", "patch": "@@ -20,6 +20,9 @@ along with GCC; see the file COPYING3.  If not see\n /* Affine combination of trees.  We keep track of at most MAX_AFF_ELTS elements\n    to make things simpler; this is sufficient in most cases.  */\n \n+#ifndef GCC_TREE_AFFINE_H\n+#define GCC_TREE_AFFINE_H\n+\n #include \"hash-map.h\"\n #include \"wide-int.h\"\n \n@@ -99,3 +102,5 @@ aff_combination_zero_p (aff_tree *aff)\n \n   return false;\n }\n+\n+#endif /* GCC_TREE_AFFINE_H */"}, {"sha": "af55ebd02e2b21f13d7e753641ad39c0e0c575ea", "filename": "gcc/xcoff.h", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f1717f8df9419f72f384448de851f0cd8a64c46e/gcc%2Fxcoff.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f1717f8df9419f72f384448de851f0cd8a64c46e/gcc%2Fxcoff.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fxcoff.h?ref=f1717f8df9419f72f384448de851f0cd8a64c46e", "patch": "@@ -16,6 +16,9 @@ You should have received a copy of the GNU General Public License\n along with GCC; see the file COPYING3.  If not see\n <http://www.gnu.org/licenses/>.  */\n \n+#ifndef GCC_XCOFF_H\n+#define GCC_XCOFF_H\n+\n /* Storage classes in XCOFF object file format designed for DBX's use.\n    This info is from the `Files Reference' manual for IBM's AIX version 3\n    for the RS6000.  */\n@@ -33,3 +36,5 @@ along with GCC; see the file COPYING3.  If not see\n #define C_DECL\t\t0x8c\n #define C_ENTRY\t\t0x8d\n #define C_FUN\t\t0x8e\n+\n+#endif /* GCC_XCOFF_H */"}, {"sha": "b45518c08f894a1ad8a763b305097b8f686c0df3", "filename": "gcc/xcoffout.h", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f1717f8df9419f72f384448de851f0cd8a64c46e/gcc%2Fxcoffout.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f1717f8df9419f72f384448de851f0cd8a64c46e/gcc%2Fxcoffout.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fxcoffout.h?ref=f1717f8df9419f72f384448de851f0cd8a64c46e", "patch": "@@ -18,6 +18,8 @@ You should have received a copy of the GNU General Public License\n along with GCC; see the file COPYING3.  If not see\n <http://www.gnu.org/licenses/>.  */\n \n+#ifndef GCC_XCOFFOUT_H\n+#define GCC_XCOFFOUT_H\n \n /* Tags and typedefs are C_DECL in XCOFF, not C_LSYM.  */\n \n@@ -184,3 +186,5 @@ extern void xcoffout_end_block (unsigned, unsigned);\n extern int xcoff_assign_fundamental_type_number (tree);\n extern void xcoffout_declare_function (FILE *, tree, const char *);\n extern void xcoffout_source_line (unsigned int, const char *, int, bool);\n+\n+#endif /* GCC_XCOFFOUT_H */"}]}