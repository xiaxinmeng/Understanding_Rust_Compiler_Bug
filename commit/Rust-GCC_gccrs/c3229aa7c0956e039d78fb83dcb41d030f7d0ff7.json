{"sha": "c3229aa7c0956e039d78fb83dcb41d030f7d0ff7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzMyMjlhYTdjMDk1NmUwMzlkNzhmYjgzZGNiNDFkMDMwZjdkMGZmNw==", "commit": {"author": {"name": "Gabriel Dos Reis", "email": "gdr@codesourcery.com", "date": "2000-10-23T16:24:19Z"}, "committer": {"name": "Gabriel Dos Reis", "email": "gdr@gcc.gnu.org", "date": "2000-10-23T16:24:19Z"}, "message": "std_valarray.h (valarray::valarray): Use __valarray_copy, not __valarray_copy_construct.\n\n2000-10-23  Gabriel Dos Reis  <gdr@codesourcery.com>\n\n\t* std/std_valarray.h (valarray::valarray): Use __valarray_copy,\n\tnot __valarray_copy_construct.\n\nFrom-SVN: r37016", "tree": {"sha": "268ea099c90e093c354d9e176db1ed7a1adae1f2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/268ea099c90e093c354d9e176db1ed7a1adae1f2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c3229aa7c0956e039d78fb83dcb41d030f7d0ff7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c3229aa7c0956e039d78fb83dcb41d030f7d0ff7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c3229aa7c0956e039d78fb83dcb41d030f7d0ff7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c3229aa7c0956e039d78fb83dcb41d030f7d0ff7/comments", "author": null, "committer": null, "parents": [{"sha": "d252a5155117a6bf89ef57722f839777395fdb8c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d252a5155117a6bf89ef57722f839777395fdb8c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d252a5155117a6bf89ef57722f839777395fdb8c"}], "stats": {"total": 15, "additions": 10, "deletions": 5}, "files": [{"sha": "1b6aac0822222f15a9d37e80011ea7708772bd8c", "filename": "libstdc++/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c3229aa7c0956e039d78fb83dcb41d030f7d0ff7/libstdc%2B%2B%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c3229aa7c0956e039d78fb83dcb41d030f7d0ff7/libstdc%2B%2B%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B%2FChangeLog?ref=c3229aa7c0956e039d78fb83dcb41d030f7d0ff7", "patch": "@@ -1,3 +1,8 @@\n+2000-10-23  Gabriel Dos Reis  <gdr@codesourcery.com>\n+\n+\t* std/std_valarray.h (valarray::valarray): Use __valarray_copy,\n+\tnot __valarray_copy_construct.\n+\n 2000-10-08  Philipp Thomas  <pthomas@suse.de>\n \n \t* Makefile.in (piclist): Fix sed command to also accept"}, {"sha": "8d4c94aa045c740fc6325b0ee7a6ab5583ac7ee3", "filename": "libstdc++/std/std_valarray.h", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c3229aa7c0956e039d78fb83dcb41d030f7d0ff7/libstdc%2B%2B%2Fstd%2Fstd_valarray.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c3229aa7c0956e039d78fb83dcb41d030f7d0ff7/libstdc%2B%2B%2Fstd%2Fstd_valarray.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B%2Fstd%2Fstd_valarray.h?ref=c3229aa7c0956e039d78fb83dcb41d030f7d0ff7", "patch": "@@ -304,7 +304,7 @@ template<typename _Tp>\n inline valarray<_Tp>::valarray (const slice_array<_Tp>& __sa)\n   : _M_size (__sa._M_sz), _M_data(__valarray_get_storage<_Tp>(__sa._M_sz))\n {\n-  __valarray_copy_construct\n+  __valarray_copy\n     (__sa._M_array, __sa._M_sz, __sa._M_stride, _Array<_Tp>(_M_data));\n }\n \n@@ -313,7 +313,7 @@ inline valarray<_Tp>::valarray (const gslice_array<_Tp>& __ga)\n   : _M_size (__ga._M_index.size()),\n     _M_data(__valarray_get_storage<_Tp>(_M_size))\n {\n-  __valarray_copy_construct\n+  __valarray_copy\n     (__ga._M_array, _Array<size_t>(__ga._M_index),\n      _Array<_Tp>(_M_data), _M_size);\n }\n@@ -322,22 +322,22 @@ template<typename _Tp>\n inline valarray<_Tp>::valarray (const mask_array<_Tp>& __ma)\n   : _M_size (__ma._M_sz), _M_data(__valarray_get_storage<_Tp>(__ma._M_sz))\n {\n-  __valarray_copy_construct\n+  __valarray_copy\n     (__ma._M_array, __ma._M_mask, _Array<_Tp>(_M_data), _M_size);\n }\n \n template<typename _Tp>\n inline valarray<_Tp>::valarray (const indirect_array<_Tp>& __ia)\n   : _M_size (__ia._M_sz), _M_data(__valarray_get_storage<_Tp>(__ia._M_size))\n {\n-  __valarray_copy_construct\n+  __valarray_copy\n     (__ia._M_array, __ia._M_index, _Array<_Tp>(_M_data), _M_size);\n }\n \n template<typename _Tp> template<class _Dom>\n inline valarray<_Tp>::valarray (const _Expr<_Dom, _Tp>& __e)\n   : _M_size (__e.size ()), _M_data (__valarray_get_storage<_Tp>(_M_size))\n-{ __valarray_copy_construct (__e, _M_size, _Array<_Tp>(_M_data)); }\n+{ __valarray_copy (__e, _M_size, _Array<_Tp>(_M_data)); }\n \n template<typename _Tp>\n inline valarray<_Tp>::~valarray ()"}]}