{"sha": "d8d4db3345ec3271a5edf4bd84e999662cd8e2e2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDhkNGRiMzM0NWVjMzI3MWE1ZWRmNGJkODRlOTk5NjYyY2Q4ZTJlMg==", "commit": {"author": {"name": "Andrey Zholos", "email": "aaz@althenia.net", "date": "2011-03-14T17:57:48Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2011-03-14T17:57:48Z"}, "message": "re PR libstdc++/48114 ([C++0x] binomial_distribution incorrect for p > .5 and geometric_distribution wrongly implements the TR1 definition)\n\n2011-03-14  Andrey Zholos  <aaz@althenia.net>\n\n\tPR libstdc++/48114\n\t* include/bits/random.h (geometric_distribution): Correct formula\n\tin comment, per C++0x.\n\t(geometric_distribution<>::param_type::param_type(double)): Fix check.\n\t(geometric_distribution<>::param_type::_M_initialize):\n\tStore log(1 - p).\n\t* include/bits/random.tcc (geometric_distribution<>::operator()):\n\tFix computation.\n\t(binomial_distribution<>::operator()): Likewise.\n\nFrom-SVN: r170946", "tree": {"sha": "252af3acb8afb7f38157c3d59aadf4acfdef3cd4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/252af3acb8afb7f38157c3d59aadf4acfdef3cd4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d8d4db3345ec3271a5edf4bd84e999662cd8e2e2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d8d4db3345ec3271a5edf4bd84e999662cd8e2e2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d8d4db3345ec3271a5edf4bd84e999662cd8e2e2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d8d4db3345ec3271a5edf4bd84e999662cd8e2e2/comments", "author": null, "committer": null, "parents": [{"sha": "7edc478cef220dd4fa0dbe3a50c1030abac83ec1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7edc478cef220dd4fa0dbe3a50c1030abac83ec1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7edc478cef220dd4fa0dbe3a50c1030abac83ec1"}], "stats": {"total": 28, "additions": 20, "deletions": 8}, "files": [{"sha": "ef93431bf09d7fa26f71091d9efe843387bb50ba", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8d4db3345ec3271a5edf4bd84e999662cd8e2e2/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8d4db3345ec3271a5edf4bd84e999662cd8e2e2/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=d8d4db3345ec3271a5edf4bd84e999662cd8e2e2", "patch": "@@ -1,3 +1,15 @@\n+2011-03-14  Andrey Zholos  <aaz@althenia.net>\n+\n+\tPR libstdc++/48114\n+\t* include/bits/random.h (geometric_distribution): Correct formula\n+\tin comment, per C++0x.\n+\t(geometric_distribution<>::param_type::param_type(double)): Fix check.\n+\t(geometric_distribution<>::param_type::_M_initialize):\n+\tStore log(1 - p).\n+\t* include/bits/random.tcc (geometric_distribution<>::operator()):\n+\tFix computation.\n+\t(binomial_distribution<>::operator()): Likewise.\n+\n 2011-03-09  Paolo Carlini  <paolo.carlini@oracle.com>\n \n \t* testsuite/util/testsuite_rvalref.h: Minor tweaks."}, {"sha": "26cec8a885e4cf8124ed53e9a47ce0f73a4867a8", "filename": "libstdc++-v3/include/bits/random.h", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8d4db3345ec3271a5edf4bd84e999662cd8e2e2/libstdc%2B%2B-v3%2Finclude%2Fbits%2Frandom.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8d4db3345ec3271a5edf4bd84e999662cd8e2e2/libstdc%2B%2B-v3%2Finclude%2Fbits%2Frandom.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Frandom.h?ref=d8d4db3345ec3271a5edf4bd84e999662cd8e2e2", "patch": "@@ -1,6 +1,6 @@\n // random number generation -*- C++ -*-\n \n-// Copyright (C) 2009, 2010 Free Software Foundation, Inc.\n+// Copyright (C) 2009, 2010, 2011 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -3589,7 +3589,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n    * @brief A discrete geometric random number distribution.\n    *\n    * The formula for the geometric probability density function is\n-   * @f$p(i|p) = (1 - p)p^{i-1}@f$ where @f$p@f$ is the parameter of the\n+   * @f$p(i|p) = p(1 - p)^{i}@f$ where @f$p@f$ is the parameter of the\n    * distribution.\n    */\n   template<typename _IntType = int>\n@@ -3611,8 +3611,8 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \tparam_type(double __p = 0.5)\n \t: _M_p(__p)\n \t{\n-\t  _GLIBCXX_DEBUG_ASSERT((_M_p >= 0.0)\n-\t\t\t     && (_M_p <= 1.0));\n+\t  _GLIBCXX_DEBUG_ASSERT((_M_p > 0.0)\n+\t\t\t     && (_M_p < 1.0));\n \t  _M_initialize();\n \t}\n \n@@ -3627,11 +3627,11 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n       private:\n \tvoid\n \t_M_initialize()\n-\t{ _M_log_p = std::log(_M_p); }\n+\t{ _M_log_1_p = std::log(1.0 - _M_p); }\n \n \tdouble _M_p;\n \n-\tdouble _M_log_p;\n+\tdouble _M_log_1_p;\n       };\n \n       // constructors and member function"}, {"sha": "4b17e914e5650c8a7cb07744322fab1f920b0e1b", "filename": "libstdc++-v3/include/bits/random.tcc", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8d4db3345ec3271a5edf4bd84e999662cd8e2e2/libstdc%2B%2B-v3%2Finclude%2Fbits%2Frandom.tcc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8d4db3345ec3271a5edf4bd84e999662cd8e2e2/libstdc%2B%2B-v3%2Finclude%2Fbits%2Frandom.tcc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Frandom.tcc?ref=d8d4db3345ec3271a5edf4bd84e999662cd8e2e2", "patch": "@@ -1025,7 +1025,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \n \tdouble __cand;\n \tdo\n-\t  __cand = std::ceil(std::log(__aurng()) / __param._M_log_p);\n+\t  __cand = std::floor(std::log(__aurng()) / __param._M_log_1_p);\n \twhile (__cand >= __thr);\n \n \treturn result_type(__cand + __naf);\n@@ -1434,7 +1434,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n       {\n \tresult_type __ret;\n \tconst _IntType __t = __param.t();\n-\tconst _IntType __p = __param.p();\n+\tconst double __p = __param.p();\n \tconst double __p12 = __p <= 0.5 ? __p : 1.0 - __p;\n \t__detail::_Adaptor<_UniformRandomNumberGenerator, double>\n \t  __aurng(__urng);"}]}