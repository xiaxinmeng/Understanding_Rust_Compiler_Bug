{"sha": "861b6407e476c8fbddc5bda37b8b91959f8e86fe", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODYxYjY0MDdlNDc2YzhmYmRkYzViZGEzN2I4YjkxOTU5ZjhlODZmZQ==", "commit": {"author": {"name": "Segher Boessenkool", "email": "segher@kernel.crashing.org", "date": "2015-06-18T18:10:12Z"}, "committer": {"name": "Segher Boessenkool", "email": "segher@gcc.gnu.org", "date": "2015-06-18T18:10:12Z"}, "message": "* config/rs6000/rs6000.h (WORD_REGISTER_OPERATIONS): Delete.\n\nFrom-SVN: r224629", "tree": {"sha": "facf1a19571822fa744b52085c2265f373a148b1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/facf1a19571822fa744b52085c2265f373a148b1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/861b6407e476c8fbddc5bda37b8b91959f8e86fe", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/861b6407e476c8fbddc5bda37b8b91959f8e86fe", "html_url": "https://github.com/Rust-GCC/gccrs/commit/861b6407e476c8fbddc5bda37b8b91959f8e86fe", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/861b6407e476c8fbddc5bda37b8b91959f8e86fe/comments", "author": {"login": "segher", "id": 417629, "node_id": "MDQ6VXNlcjQxNzYyOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/417629?v=4", "gravatar_id": "", "url": "https://api.github.com/users/segher", "html_url": "https://github.com/segher", "followers_url": "https://api.github.com/users/segher/followers", "following_url": "https://api.github.com/users/segher/following{/other_user}", "gists_url": "https://api.github.com/users/segher/gists{/gist_id}", "starred_url": "https://api.github.com/users/segher/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/segher/subscriptions", "organizations_url": "https://api.github.com/users/segher/orgs", "repos_url": "https://api.github.com/users/segher/repos", "events_url": "https://api.github.com/users/segher/events{/privacy}", "received_events_url": "https://api.github.com/users/segher/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "9ebfea12d2ee9263bdbf8ecd8e7b81e562bd3807", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9ebfea12d2ee9263bdbf8ecd8e7b81e562bd3807", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9ebfea12d2ee9263bdbf8ecd8e7b81e562bd3807"}], "stats": {"total": 8, "additions": 4, "deletions": 4}, "files": [{"sha": "9fdc1076c1551c45db0b5074767cddb9b98e0c85", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/861b6407e476c8fbddc5bda37b8b91959f8e86fe/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/861b6407e476c8fbddc5bda37b8b91959f8e86fe/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=861b6407e476c8fbddc5bda37b8b91959f8e86fe", "patch": "@@ -1,3 +1,7 @@\n+2015-06-18  Segher Boessenkool  <segher@kernel.crashing.org>\n+\n+\t* config/rs6000/rs6000.h (WORD_REGISTER_OPERATIONS): Delete.\n+\n 2015-06-18  Steve Ellcey  <sellcey@imgtec.com>\n \n \t* config/mips/mips.c (mips_rtx_costs): Remove HONOR_NAN check."}, {"sha": "ef8ff38b96a85663353468d90f6f5c6879bbfc10", "filename": "gcc/config/rs6000/rs6000.h", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/861b6407e476c8fbddc5bda37b8b91959f8e86fe/gcc%2Fconfig%2Frs6000%2Frs6000.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/861b6407e476c8fbddc5bda37b8b91959f8e86fe/gcc%2Fconfig%2Frs6000%2Frs6000.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.h?ref=861b6407e476c8fbddc5bda37b8b91959f8e86fe", "patch": "@@ -2039,10 +2039,6 @@ do {\t\t\t\t\t\t\t\t\t     \\\n    is undesirable.  */\n #define SLOW_BYTE_ACCESS 1\n \n-/* Define if operations between registers always perform the operation\n-   on the full register even if a narrower mode is specified.  */\n-#define WORD_REGISTER_OPERATIONS\n-\n /* Define if loading in MODE, an integral mode narrower than BITS_PER_WORD\n    will either zero-extend or sign-extend.  The value of this macro should\n    be the code that says which one of the two operations is implicitly"}]}