{"sha": "7028c2179cc349653c5578fb5774389b1fffdaf1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzAyOGMyMTc5Y2MzNDk2NTNjNTU3OGZiNTc3NDM4OWIxZmZmZGFmMQ==", "commit": {"author": {"name": "Martin Sebor", "email": "msebor@redhat.com", "date": "2019-11-22T00:51:16Z"}, "committer": {"name": "Martin Sebor", "email": "msebor@gcc.gnu.org", "date": "2019-11-22T00:51:16Z"}, "message": "strlenopt-66.c: Avoid buffer overflow.\n\ngcc/testsuite/ChangeLog:\n\t* gcc.dg/strlenopt-66.c: Avoid buffer overflow.  Add more test cases.\n\nFrom-SVN: r278608", "tree": {"sha": "163d5cfb955c2c0185626f0583a94ffe7417f3a1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/163d5cfb955c2c0185626f0583a94ffe7417f3a1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7028c2179cc349653c5578fb5774389b1fffdaf1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7028c2179cc349653c5578fb5774389b1fffdaf1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7028c2179cc349653c5578fb5774389b1fffdaf1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7028c2179cc349653c5578fb5774389b1fffdaf1/comments", "author": {"login": "msebor", "id": 381149, "node_id": "MDQ6VXNlcjM4MTE0OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/381149?v=4", "gravatar_id": "", "url": "https://api.github.com/users/msebor", "html_url": "https://github.com/msebor", "followers_url": "https://api.github.com/users/msebor/followers", "following_url": "https://api.github.com/users/msebor/following{/other_user}", "gists_url": "https://api.github.com/users/msebor/gists{/gist_id}", "starred_url": "https://api.github.com/users/msebor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/msebor/subscriptions", "organizations_url": "https://api.github.com/users/msebor/orgs", "repos_url": "https://api.github.com/users/msebor/repos", "events_url": "https://api.github.com/users/msebor/events{/privacy}", "received_events_url": "https://api.github.com/users/msebor/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "fb6543092ebc796c2aa8c9792a8e052f31a4afcc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fb6543092ebc796c2aa8c9792a8e052f31a4afcc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fb6543092ebc796c2aa8c9792a8e052f31a4afcc"}], "stats": {"total": 16, "additions": 13, "deletions": 3}, "files": [{"sha": "38ff666a49326b5049a59212d601c6e1746982dc", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7028c2179cc349653c5578fb5774389b1fffdaf1/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7028c2179cc349653c5578fb5774389b1fffdaf1/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=7028c2179cc349653c5578fb5774389b1fffdaf1", "patch": "@@ -1,3 +1,7 @@\n+2019-11-21  Martin Sebor  <msebor@redhat.com>\n+\n+\t* gcc.dg/strlenopt-66.c: Avoid buffer overflow.  Add more test cases.\n+\n 2019-11-21  Joseph Myers  <joseph@codesourcery.com>\n \n \t* gcc.dg/c2x-attr-fallthrough-6.c: New test.  Split out from"}, {"sha": "469f3fd8457ef0c55a7224a087180ffb9a10005f", "filename": "gcc/testsuite/gcc.dg/strlenopt-66.c", "status": "modified", "additions": 9, "deletions": 3, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7028c2179cc349653c5578fb5774389b1fffdaf1/gcc%2Ftestsuite%2Fgcc.dg%2Fstrlenopt-66.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7028c2179cc349653c5578fb5774389b1fffdaf1/gcc%2Ftestsuite%2Fgcc.dg%2Fstrlenopt-66.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fstrlenopt-66.c?ref=7028c2179cc349653c5578fb5774389b1fffdaf1", "patch": "@@ -1,7 +1,7 @@\n /* PRE tree-optimization/90626 - fold strcmp(a, b) == 0 to zero when\n    one string length is exact and the other is unequal\n    { dg-do run }\n-   { dg-options \"-O2 -Wall -fdump-tree-optimized\" } */\n+   { dg-options \"-O2 -Wall\" } */\n \n #include \"strlenopt.h\"\n \n@@ -103,6 +103,12 @@ int main (void)\n   test_strncmp_a4_cond_s5_s2_2 (\"12\", 0);\n   test_strncmp_a4_cond_a5_s2_5 (\"12\", \"1234\", 0);\n \n-  test_strncmp_a4_cond_a5_a3_n (\"12\", \"123\", \"1234\", 0, 2);\n-  test_strncmp_a4_cond_a5_a3_n (\"123\", \"12\", \"12\", 1, 3);\n+  test_strncmp_a4_cond_a5_a3_n (\"12\", \"1\", \"1\",    0, 1);\n+  test_strncmp_a4_cond_a5_a3_n (\"\",   \"1\", \"1234\", 1, 1);\n+\n+  test_strncmp_a4_cond_a5_a3_n (\"12\", \"12\", \"1\",    0, 2);\n+  test_strncmp_a4_cond_a5_a3_n (\"\",   \"12\", \"1234\", 1, 2);\n+\n+  test_strncmp_a4_cond_a5_a3_n (\"12\", \"123\", \"1\",    0, 2);\n+  test_strncmp_a4_cond_a5_a3_n (\"\",   \"123\", \"1234\", 1, 3);\n }"}]}