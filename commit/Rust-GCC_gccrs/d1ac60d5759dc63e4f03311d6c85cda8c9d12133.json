{"sha": "d1ac60d5759dc63e4f03311d6c85cda8c9d12133", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDFhYzYwZDU3NTlkYzYzZTRmMDMzMTFkNmM4NWNkYThjOWQxMjEzMw==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2018-06-15T12:41:46Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2018-06-15T12:41:46Z"}, "message": "tree-vect-slp.c (vect_slp_bb): Dump MSG_OPTIMIZED_LOCATIONS here, also noting vector size used.\n\n2018-06-15  Richard Biener  <rguenther@suse.de>\n\n\t* tree-vect-slp.c (vect_slp_bb): Dump MSG_OPTIMIZED_LOCATIONS\n\there, also noting vector size used.\n\t* tree-vectorizer.c (vectorize_loops): Adjust.  Note vector\n\tsize used in MSG_OPTIMIZED_LOCATIONS dump.\n\t(pass_slp_vectorize::execute): Adjust.\n\nFrom-SVN: r261626", "tree": {"sha": "14160f4ccc358f22bff7cb492f72d8ba20738dbd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/14160f4ccc358f22bff7cb492f72d8ba20738dbd"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d1ac60d5759dc63e4f03311d6c85cda8c9d12133", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d1ac60d5759dc63e4f03311d6c85cda8c9d12133", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d1ac60d5759dc63e4f03311d6c85cda8c9d12133", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d1ac60d5759dc63e4f03311d6c85cda8c9d12133/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "738cb232062a3f44ac7ce751ec5c0c3c8abc33c7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/738cb232062a3f44ac7ce751ec5c0c3c8abc33c7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/738cb232062a3f44ac7ce751ec5c0c3c8abc33c7"}], "stats": {"total": 41, "additions": 31, "deletions": 10}, "files": [{"sha": "fe7f74cd5a7317f2eee414aae703ccefee94f68b", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d1ac60d5759dc63e4f03311d6c85cda8c9d12133/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d1ac60d5759dc63e4f03311d6c85cda8c9d12133/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=d1ac60d5759dc63e4f03311d6c85cda8c9d12133", "patch": "@@ -1,3 +1,11 @@\n+2018-06-15  Richard Biener  <rguenther@suse.de>\n+\n+\t* tree-vect-slp.c (vect_slp_bb): Dump MSG_OPTIMIZED_LOCATIONS\n+\there, also noting vector size used.\n+\t* tree-vectorizer.c (vectorize_loops): Adjust.  Note vector\n+\tsize used in MSG_OPTIMIZED_LOCATIONS dump.\n+\t(pass_slp_vectorize::execute): Adjust.\n+\n 2018-06-15  Claudiu Zissulescu  <claziss@synopsys.com>\n \n \tPR target/85968"}, {"sha": "5e8a0d0fc43fa1577e9d2a5d8c68abf8aa7eb1fd", "filename": "gcc/tree-vect-slp.c", "status": "modified", "additions": 10, "deletions": 3, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d1ac60d5759dc63e4f03311d6c85cda8c9d12133/gcc%2Ftree-vect-slp.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d1ac60d5759dc63e4f03311d6c85cda8c9d12133/gcc%2Ftree-vect-slp.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vect-slp.c?ref=d1ac60d5759dc63e4f03311d6c85cda8c9d12133", "patch": "@@ -3036,9 +3036,16 @@ vect_slp_bb (basic_block bb)\n \n \t  vect_schedule_slp (bb_vinfo);\n \n-\t  if (dump_enabled_p ())\n-\t    dump_printf_loc (MSG_NOTE, vect_location,\n-\t\t\t     \"basic block part vectorized\\n\");\n+\t  unsigned HOST_WIDE_INT bytes;\n+\t  if (current_vector_size.is_constant (&bytes))\n+\t    dump_printf_loc (MSG_OPTIMIZED_LOCATIONS, vect_location,\n+\t\t\t     \"basic block part vectorized using \"\n+\t\t\t     HOST_WIDE_INT_PRINT_UNSIGNED \" byte \"\n+\t\t\t     \"vectors\\n\", bytes);\n+\t  else\n+\t    dump_printf_loc (MSG_OPTIMIZED_LOCATIONS, vect_location,\n+\t\t\t     \"basic block part vectorized using variable \"\n+\t\t\t     \"length vectors\\n\");\n \n \t  vectorized = true;\n \t}"}, {"sha": "eb9129051b53df778ae7bfa822d31f4557076158", "filename": "gcc/tree-vectorizer.c", "status": "modified", "additions": 13, "deletions": 7, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d1ac60d5759dc63e4f03311d6c85cda8c9d12133/gcc%2Ftree-vectorizer.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d1ac60d5759dc63e4f03311d6c85cda8c9d12133/gcc%2Ftree-vectorizer.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vectorizer.c?ref=d1ac60d5759dc63e4f03311d6c85cda8c9d12133", "patch": "@@ -794,7 +794,7 @@ vectorize_loops (void)\n \t\t  }\n \t\tif (! has_mask_load_store && vect_slp_bb (bb))\n \t\t  {\n-\t\t    dump_printf_loc (MSG_OPTIMIZED_LOCATIONS, vect_location,\n+\t\t    dump_printf_loc (MSG_NOTE, vect_location,\n \t\t\t\t     \"basic block vectorized\\n\");\n \t\t    fold_loop_internal_call (loop_vectorized_call,\n \t\t\t\t\t     boolean_true_node);\n@@ -827,10 +827,17 @@ vectorize_loops (void)\n \n \tif (loop_vectorized_call)\n \t  set_uid_loop_bbs (loop_vinfo, loop_vectorized_call);\n-        if (LOCATION_LOCUS (vect_location) != UNKNOWN_LOCATION\n-\t    && dump_enabled_p ())\n-          dump_printf_loc (MSG_OPTIMIZED_LOCATIONS, vect_location,\n-                           \"loop vectorized\\n\");\n+\n+\tunsigned HOST_WIDE_INT bytes;\n+\tif (current_vector_size.is_constant (&bytes))\n+\t  dump_printf_loc (MSG_OPTIMIZED_LOCATIONS, vect_location,\n+\t\t\t   \"loop vectorized vectorized using \"\n+\t\t\t   HOST_WIDE_INT_PRINT_UNSIGNED \" byte \"\n+\t\t\t   \"vectors\\n\", bytes);\n+\telse\n+\t  dump_printf_loc (MSG_OPTIMIZED_LOCATIONS, vect_location,\n+\t\t\t   \"loop vectorized using variable length vectors\\n\");\n+\n \tnew_loop = vect_transform_loop (loop_vinfo);\n \tnum_vectorized_loops++;\n \t/* Now that the loop has been vectorized, allow it to be unrolled\n@@ -1066,8 +1073,7 @@ pass_slp_vectorize::execute (function *fun)\n   FOR_EACH_BB_FN (bb, fun)\n     {\n       if (vect_slp_bb (bb))\n-\tdump_printf_loc (MSG_OPTIMIZED_LOCATIONS, vect_location,\n-\t\t\t \"basic block vectorized\\n\");\n+\tdump_printf_loc (MSG_NOTE, vect_location, \"basic block vectorized\\n\");\n     }\n \n   if (!in_loop_pipeline)"}]}