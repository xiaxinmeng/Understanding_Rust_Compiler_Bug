{"sha": "5229788da723442d51155693ab98f831e94d1d58", "node_id": "C_kwDOANBUbNoAKDUyMjk3ODhkYTcyMzQ0MmQ1MTE1NTY5M2FiOThmODMxZTk0ZDFkNTg", "commit": {"author": {"name": "GCC Administrator", "email": "gccadmin@gcc.gnu.org", "date": "2023-04-06T00:16:43Z"}, "committer": {"name": "GCC Administrator", "email": "gccadmin@gcc.gnu.org", "date": "2023-04-06T00:16:43Z"}, "message": "Daily bump.", "tree": {"sha": "8a3964c921f8b35c7a26812aa53d361dc6d03a6d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8a3964c921f8b35c7a26812aa53d361dc6d03a6d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5229788da723442d51155693ab98f831e94d1d58", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5229788da723442d51155693ab98f831e94d1d58", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5229788da723442d51155693ab98f831e94d1d58", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5229788da723442d51155693ab98f831e94d1d58/comments", "author": null, "committer": null, "parents": [{"sha": "1bd13193fab77a19da323974aec876f0fc1817ee", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1bd13193fab77a19da323974aec876f0fc1817ee", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1bd13193fab77a19da323974aec876f0fc1817ee"}], "stats": {"total": 170, "additions": 169, "deletions": 1}, "files": [{"sha": "b1ab528cf9a08685522662723579bd695ec0be20", "filename": "gcc/ChangeLog", "status": "modified", "additions": 28, "deletions": 0, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5229788da723442d51155693ab98f831e94d1d58/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5229788da723442d51155693ab98f831e94d1d58/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=5229788da723442d51155693ab98f831e94d1d58", "patch": "@@ -1,3 +1,31 @@\n+2023-04-05  Jeff Law  <jlaw@ventanamicro>\n+\n+\tPR target/108892\n+\t* combine.cc (combine_instructions): Force re-recognition when\n+\tafter restoring the body of an insn to its original form.\n+\n+2023-04-05  Martin Jambor  <mjambor@suse.cz>\n+\n+\tPR ipa/108959\n+\t* ipa-sra.cc (zap_useless_ipcp_results): New function.\n+\t(process_isra_node_results): Call it.\n+\n+2023-04-05  Ju-Zhe Zhong  <juzhe.zhong@rivai.ai>\n+\n+\t* config/riscv/vector.md: Fix incorrect operand order.\n+\n+2023-04-05  Juzhe-Zhong  <juzhe.zhong@rivai.ai>\n+\n+\t* config/riscv/riscv-vsetvl.cc\n+\t(pass_vsetvl::compute_local_backward_infos): Update user vsetvl in local\n+\tdemand fusion.\n+\n+2023-04-05  Li Xu  <xuli1@eswincomputing.com>\n+\n+\t* config/riscv/riscv-vector-builtins.def: Fix typo.\n+\t* config/riscv/riscv.cc (riscv_dwarf_poly_indeterminate_value): Ditto.\n+\t* config/riscv/vector-iterators.md: Ditto.\n+\n 2023-04-04  Hans-Peter Nilsson  <hp@axis.com>\n \n \t* doc/md.texi (Including Patterns): Fix page break."}, {"sha": "b4a11630735ade5441ce946c935db0f43876b41e", "filename": "gcc/DATESTAMP", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5229788da723442d51155693ab98f831e94d1d58/gcc%2FDATESTAMP", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5229788da723442d51155693ab98f831e94d1d58/gcc%2FDATESTAMP", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FDATESTAMP?ref=5229788da723442d51155693ab98f831e94d1d58", "patch": "@@ -1 +1 @@\n-20230405\n+20230406"}, {"sha": "50055817eddf726d3e6db0a086504ec9ca555fe7", "filename": "gcc/m2/ChangeLog", "status": "modified", "additions": 32, "deletions": 0, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5229788da723442d51155693ab98f831e94d1d58/gcc%2Fm2%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5229788da723442d51155693ab98f831e94d1d58/gcc%2Fm2%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fm2%2FChangeLog?ref=5229788da723442d51155693ab98f831e94d1d58", "patch": "@@ -1,3 +1,35 @@\n+2023-04-05  Gaius Mulley  <gaiusmod2@gmail.com>\n+\n+\tPR modula2/109423\n+\t* gm2-compiler/M2Base.def (Unbounded): Remove.\n+\t* gm2-compiler/M2Error.def (ErrorAbort0): Add noreturn\n+\tattribute.\n+\t* gm2-compiler/M2Quads.mod (BuildInclProcedure): Correct\n+\terror format string.\n+\t(BuildExceptProcedure): Correct error format string.\n+\t(BuildAdrFunction): Call PutWriteQuad when taking the\n+\taddress of a variable.\n+\t* gm2-libs-ch/SysExceptions.c (_M2_SysExceptions_init): Add\n+\tparameters.\n+\t* gm2-libs-ch/wrapc.c (_M2_wrapc_init): Add parameters.\n+\t* gm2-libs/DynamicStrings.mod (DumpStringInfo): Remove t.\n+\t(PopAllocationExemption): Remove f.\n+\t* gm2-libs/FIO.mod (BufferedWrite): Remove result.\n+\t* gm2-libs/FormatStrings.mod (Copy): Remove endpos and\n+\tafterperc.\n+\t(HandlePercent): Remove result.\n+\t* gm2-libs/Indexing.mod (RemoveIndiceFromIndex): Remove k.\n+\t* gm2-libs/M2Dependent.mod (CreateModule): Remove p0\n+\tand p1.\n+\t(DumpModuleData): Remove mptr.\n+\t(ConstructModules): Remove nulp.\n+\t* gm2-libs/RTExceptions.mod (PopHandler): Remove i.\n+\t* gm2-libs/RTint.mod (Listen): Remove b4s, b4m, afs\n+\tand afm.\n+\t* gm2-libs/SFIO.mod (ReadS): Remove c.\n+\t* gm2-libs/StringConvert.mod (doDecimalPlaces): Remove\n+\twhole and fraction.\n+\n 2023-04-03  Gaius Mulley  <gaiusmod2@gmail.com>\n \n \tPR modula2/109388"}, {"sha": "97986f7acfc4f672ad1198ff26114cb4f060d051", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5229788da723442d51155693ab98f831e94d1d58/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5229788da723442d51155693ab98f831e94d1d58/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=5229788da723442d51155693ab98f831e94d1d58", "patch": "@@ -1,3 +1,27 @@\n+2023-04-05  Gaius Mulley  <gaiusmod2@gmail.com>\n+\n+\tPR modula2/109423\n+\t* gm2/pim/fail/setunknown.mod: New test.\n+\t* gm2/pim/fail/setunknown2.mod: New test.\n+\n+2023-04-05  Jeff Law  <jlaw@ventanamicro>\n+\n+\tPR target/108892\n+\t* gcc.c-torture/compile/pr108892.c: New test.\n+\n+2023-04-05  Martin Jambor  <mjambor@suse.cz>\n+\n+\tPR ipa/108959\n+\t* gcc.dg/ipa/pr108959.c: New test.\n+\n+2023-04-05  Ju-Zhe Zhong  <juzhe.zhong@rivai.ai>\n+\n+\t* g++.target/riscv/rvv/base/bug-23.C: New test.\n+\n+2023-04-05  Juzhe-Zhong  <juzhe.zhong@rivai.ai>\n+\n+\t* gcc.target/riscv/rvv/vsetvl/pr109399.c: New test.\n+\n 2023-04-04  Harald Anlauf  <anlauf@gmx.de>\n \n \tPR fortran/104349"}, {"sha": "26539c9a0ee86619c807d1c48a02faf1c20d0ea4", "filename": "libgcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5229788da723442d51155693ab98f831e94d1d58/libgcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5229788da723442d51155693ab98f831e94d1d58/libgcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2FChangeLog?ref=5229788da723442d51155693ab98f831e94d1d58", "patch": "@@ -1,3 +1,12 @@\n+2023-04-05  John David Anglin  <danglin@gcc.gnu.org>\n+\n+\tPR target/109374\n+\t* config/pa/milli64.S (RETURN_COLUMN): Define.\n+\t($$divI): Add CFI directives.\n+\t($$divU): Likewise.\n+\t($$remI): Likewise.\n+\t($$remU): Likewise.\n+\n 2023-03-19  Stafford Horne  <shorne@gmail.com>\n \n \t* config/or1k/sfp-machine.h (FP_HANDLE_EXCEPTIONS): Remove"}, {"sha": "01eb8c6ee215a751427751aac27bd3266e61df07", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 75, "deletions": 0, "changes": 75, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5229788da723442d51155693ab98f831e94d1d58/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5229788da723442d51155693ab98f831e94d1d58/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=5229788da723442d51155693ab98f831e94d1d58", "patch": "@@ -1,3 +1,78 @@\n+2023-04-05  Arsen Arsenovi\u0107  <arsen@aarsen.me>\n+\n+\t* include/precompiled/stdc++.h (C++17): Don't double-include\n+\t<charconv>, once with wrong conditions.\n+\t* testsuite/18_support/96817.cc: Require hosted.\n+\t* testsuite/18_support/bad_exception/59392.cc: Ditto.\n+\t* testsuite/20_util/scoped_allocator/108952.cc: Ditto.\n+\t* testsuite/20_util/uses_allocator/lwg3527.cc: Ditto.\n+\t* testsuite/29_atomics/atomic/operators/pointer_partial_void.cc:\n+\tDitto.\n+\n+2023-04-05  Arsen Arsenovi\u0107  <arsen@aarsen.me>\n+\n+\t* include/bits/c++config: When __STDC_HOSTED__ is zero,\n+\tdisable _GLIBCXX_DEBUG and, if it was set, enable\n+\t_GLIBCXX_ASSERTIONS.\n+\t* testsuite/lib/libstdc++.exp (check_v3_target_debug_mode):\n+\tInclude <bits/c++config.h> when determining whether debug is\n+\tset, in order to inherit the logic from above\n+\n+2023-04-05  Arsen Arsenovi\u0107  <arsen@aarsen.me>\n+\n+\t* testsuite/17_intro/versionconflict.cc: New test.\n+\t* include/std/version: Allow disabling the system_header pragma\n+\tvia _GLIBCXX_TESTING_SYSHDR.\n+\n+2023-04-05  Arsen Arsenovi\u0107  <arsen@aarsen.me>\n+\n+\t* include/bits/unique_ptr.h (__cpp_lib_constexpr_memory):\n+\tSynchronize the definition block with...\n+\t* include/bits/ptr_traits.h (__cpp_lib_constexpr_memory):\n+\t... this one here.  Also define the 202202L value, rather than\n+\tleaving it up to purely unique_ptr.h, so that the value is\n+\tsynchronized across all headers.\n+\t(__gnu_debug::_Safe_iterator_base): Move into new conditional\n+\tblock.\n+\t* include/std/memory (__cpp_lib_atomic_value_initialization):\n+\tDefine on freestanding under the same conditions as in\n+\tatomic_base.h.\n+\t* include/std/version (__cpp_lib_robust_nonmodifying_seq_ops):\n+\tAlso define on freestanding.\n+\t(__cpp_lib_to_chars): Ditto.\n+\t(__cpp_lib_gcd): Ditto.\n+\t(__cpp_lib_gcd_lcm): Ditto.\n+\t(__cpp_lib_raw_memory_algorithms): Ditto.\n+\t(__cpp_lib_array_constexpr): Ditto.\n+\t(__cpp_lib_nonmember_container_access): Ditto.\n+\t(__cpp_lib_clamp): Ditto.\n+\t(__cpp_lib_constexpr_char_traits): Ditto.\n+\t(__cpp_lib_constexpr_string): Ditto.\n+\t(__cpp_lib_sample): Ditto.\n+\t(__cpp_lib_lcm): Ditto.\n+\t(__cpp_lib_constexpr_iterator): Ditto.\n+\t(__cpp_lib_constexpr_char_traits): Ditto.\n+\t(__cpp_lib_interpolate): Ditto.\n+\t(__cpp_lib_constexpr_utility): Ditto.\n+\t(__cpp_lib_shift): Ditto.\n+\t(__cpp_lib_ranges): Ditto.\n+\t(__cpp_lib_move_iterator_concept): Ditto.\n+\t(__cpp_lib_constexpr_numeric): Ditto.\n+\t(__cpp_lib_constexpr_functional): Ditto.\n+\t(__cpp_lib_constexpr_algorithms): Ditto.\n+\t(__cpp_lib_constexpr_tuple): Ditto.\n+\t(__cpp_lib_constexpr_memory): Ditto.\n+\n+2023-04-05  John David Anglin  <danglin@gcc.gnu.org>\n+\n+\t* testsuite/22_locale/locale/cons/12658_thread-2.cc: Double\n+\ttimeout factor on hppa*-*-*.\n+\n+2023-04-05  Jonathan Wakely  <jwakely@redhat.com>\n+\n+\t* include/bits/regex.h (sub_match::swap): New function.\n+\t* testsuite/28_regex/sub_match/lwg3204.cc: New test.\n+\n 2023-04-04  Jonathan Wakely  <jwakely@redhat.com>\n \n \t* doc/xml/manual/extensions.xml: Remove std::bad_exception from"}]}