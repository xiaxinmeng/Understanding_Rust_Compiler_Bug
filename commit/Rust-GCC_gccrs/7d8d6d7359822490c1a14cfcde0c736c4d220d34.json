{"sha": "7d8d6d7359822490c1a14cfcde0c736c4d220d34", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6N2Q4ZDZkNzM1OTgyMjQ5MGMxYTE0Y2ZjZGUwYzczNmM0ZDIyMGQzNA==", "commit": {"author": {"name": "Georg-Johann Lay", "email": "avr@gjlay.de", "date": "2011-07-08T13:09:07Z"}, "committer": {"name": "Georg-Johann Lay", "email": "gjl@gcc.gnu.org", "date": "2011-07-08T13:09:07Z"}, "message": "avr.c (output_reload_insisf): Use 'REG_Z+1' instead of magic '31'.\n\n\t\n\t* config/avr/avr.c (output_reload_insisf): Use 'REG_Z+1' instead\n\tof magic '31'.\n\nFrom-SVN: r176041", "tree": {"sha": "0a4451a454fd063ca701488a7845830d9984c832", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0a4451a454fd063ca701488a7845830d9984c832"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7d8d6d7359822490c1a14cfcde0c736c4d220d34", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7d8d6d7359822490c1a14cfcde0c736c4d220d34", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7d8d6d7359822490c1a14cfcde0c736c4d220d34", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7d8d6d7359822490c1a14cfcde0c736c4d220d34/comments", "author": null, "committer": {"login": "sprintersb", "id": 8905355, "node_id": "MDQ6VXNlcjg5MDUzNTU=", "avatar_url": "https://avatars.githubusercontent.com/u/8905355?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sprintersb", "html_url": "https://github.com/sprintersb", "followers_url": "https://api.github.com/users/sprintersb/followers", "following_url": "https://api.github.com/users/sprintersb/following{/other_user}", "gists_url": "https://api.github.com/users/sprintersb/gists{/gist_id}", "starred_url": "https://api.github.com/users/sprintersb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sprintersb/subscriptions", "organizations_url": "https://api.github.com/users/sprintersb/orgs", "repos_url": "https://api.github.com/users/sprintersb/repos", "events_url": "https://api.github.com/users/sprintersb/events{/privacy}", "received_events_url": "https://api.github.com/users/sprintersb/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0d44736e759f00ddadd0ab5188a86297fac5d284", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0d44736e759f00ddadd0ab5188a86297fac5d284", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0d44736e759f00ddadd0ab5188a86297fac5d284"}], "stats": {"total": 7, "additions": 6, "deletions": 1}, "files": [{"sha": "6a9d81a4890b7c380b684222ea43e2b3a716899c", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7d8d6d7359822490c1a14cfcde0c736c4d220d34/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7d8d6d7359822490c1a14cfcde0c736c4d220d34/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=7d8d6d7359822490c1a14cfcde0c736c4d220d34", "patch": "@@ -1,3 +1,8 @@\n+2011-07-08  Georg-Johann Lay  <avr@gjlay.de>\n+\t\n+\t* config/avr/avr.c (output_reload_insisf): Use 'REG_Z+1' instead\n+\tof magic '31'.\n+\n 2011-07-08  Bernd Schmidt  <bernds@codesourcery.com>\n \n \t* optabs.c (expand_binop): Use GET_MODE_PRECISION instead of"}, {"sha": "a6a307b45d2b5cf486447b9aa49f087d753b1f0e", "filename": "gcc/config/avr/avr.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7d8d6d7359822490c1a14cfcde0c736c4d220d34/gcc%2Fconfig%2Favr%2Favr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7d8d6d7359822490c1a14cfcde0c736c4d220d34/gcc%2Fconfig%2Favr%2Favr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Favr%2Favr.c?ref=7d8d6d7359822490c1a14cfcde0c736c4d220d34", "patch": "@@ -6239,7 +6239,7 @@ output_reload_insisf (rtx insn ATTRIBUTE_UNUSED,\n                  That's cheaper than loading from constant pool.  */\n               \n               cooked_clobber_p = true;\n-              clobber_reg = gen_rtx_REG (QImode, 31);\n+              clobber_reg = gen_rtx_REG (QImode, REG_Z + 1);\n               avr_asm_len (\"mov __tmp_reg__,%0\", &clobber_reg, len, 1);\n               break;\n             }"}]}