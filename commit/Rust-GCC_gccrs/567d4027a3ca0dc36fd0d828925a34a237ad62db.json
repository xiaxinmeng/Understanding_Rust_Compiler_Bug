{"sha": "567d4027a3ca0dc36fd0d828925a34a237ad62db", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTY3ZDQwMjdhM2NhMGRjMzZmZDBkODI4OTI1YTM0YTIzN2FkNjJkYg==", "commit": {"author": {"name": "Paolo Carlini", "email": "paolo.carlini@oracle.com", "date": "2010-06-08T00:45:02Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2010-06-08T00:45:02Z"}, "message": "order_statistics_imp.hpp: Avoid -Wall warnings.\n\n2010-06-07  Paolo Carlini  <paolo.carlini@oracle.com>\n\n\t* include/ext/pb_ds/detail/trie_policy/order_statistics_imp.hpp:\n\tAvoid -Wall warnings.\n\t* testsuite/27_io/ios_base/failure/what-3.cc: Likewise.\n\t* testsuite/27_io/basic_ostringstream/str/wchar_t/1.cc: Likewise.\n\t* testsuite/27_io/basic_ostringstream/str/char/1.cc: Likewise.\n\t* testsuite/27_io/basic_stringbuf/sputbackc/wchar_t/1.cc: Likewise.\n\t* testsuite/27_io/basic_stringbuf/sputbackc/char/1.cc: Likewise.\n\t* testsuite/27_io/basic_stringbuf/sgetn/wchar_t/1.cc: Likewise.\n\t* testsuite/27_io/basic_stringbuf/sgetn/char/1.cc: Likewise.\n\t* testsuite/27_io/basic_stringbuf/seekoff/wchar_t/1.cc: Likewise.\n\t* testsuite/27_io/basic_stringbuf/seekoff/char/1.cc: Likewise.\n\t* testsuite/27_io/basic_stringbuf/sbumpc/wchar_t/1.cc: Likewise.\n\t* testsuite/27_io/basic_stringbuf/sbumpc/char/1.cc: Likewise.\n\t* testsuite/27_io/basic_stringbuf/snextc/wchar_t/1.cc: Likewise.\n\t* testsuite/27_io/basic_stringbuf/snextc/char/1.cc: Likewise.\n\t* testsuite/27_io/basic_stringbuf/sgetc/wchar_t/1.cc: Likewise.\n\t* testsuite/27_io/basic_stringbuf/sgetc/char/1.cc: Likewise.\n\t* testsuite/27_io/basic_stringbuf/sungetc/wchar_t/1.cc: Likewise.\n\t* testsuite/27_io/basic_stringbuf/sungetc/char/1.cc: Likewise.\n\t* testsuite/27_io/basic_stringbuf/seekpos/wchar_t/1.cc: Likewise.\n\t* testsuite/27_io/basic_stringbuf/seekpos/char/1.cc: Likewise.\n\t* testsuite/27_io/types/2.cc: Likewise.\n\t* testsuite/27_io/basic_istream/ignore/wchar_t/1.cc: Likewise.\n\t* testsuite/27_io/basic_istream/ignore/char/1.cc: Likewise.\n\t* testsuite/27_io/basic_istream/peek/wchar_t/1.cc: Likewise.\n\t* testsuite/27_io/basic_istream/peek/char/1.cc: Likewise.\n\t* testsuite/27_io/basic_istream/ws/wchar_t/1.cc: Likewise.\n\t* testsuite/27_io/basic_istream/ws/char/1.cc: Likewise.\n\t* testsuite/27_io/basic_istream/seekg/wchar_t/8348-2.cc: Likewise.\n\t* testsuite/27_io/basic_istream/seekg/char/8348-2.cc: Likewise.\n\t* testsuite/27_io/basic_istream/tellg/wchar_t/8348.cc: Likewise.\n\t* testsuite/27_io/basic_istream/tellg/char/8348.cc: Likewise.\n\t* testsuite/27_io/basic_istream/extractors_arithmetic/\n\twchar_t/01.cc: Likewise.\n\t* testsuite/27_io/basic_istream/extractors_arithmetic/char/\n\t01.cc: Likewise.\n\t* testsuite/27_io/fpos/mbstate_t/4_neg.cc: Likewise.\n\t* testsuite/27_io/fpos/mbstate_t/2.cc: Likewise.\n\t* testsuite/27_io/fpos/mbstate_t/3.cc: Likewise.\n\t* testsuite/27_io/fpos/mbstate_t/5.cc: Likewise.\n\t* testsuite/27_io/basic_ostream/inserters_character/wchar_t/\n\t4.cc: Likewise.\n\t* testsuite/27_io/basic_ostream/inserters_character/char/\n\t4.cc: Likewise.\n\t* testsuite/27_io/basic_filebuf/sgetn/char/2-out.cc: Likewise.\n\t* testsuite/27_io/basic_filebuf/seekoff/12790-4.cc: Likewise.\n\t* testsuite/27_io/basic_filebuf/seekoff/char/1-in.cc: Likewise.\n\t* testsuite/27_io/basic_filebuf/seekoff/char/2-in.cc: Likewise.\n\t* testsuite/27_io/basic_filebuf/seekoff/char/1-out.cc: Likewise.\n\t* testsuite/27_io/basic_filebuf/seekoff/char/1-io.cc: Likewise.\n\t* testsuite/27_io/basic_filebuf/seekoff/char/2-out.cc: Likewise.\n\t* testsuite/27_io/basic_filebuf/seekoff/char/2-io.cc: Likewise.\n\t* testsuite/27_io/basic_filebuf/sungetc/char/1-io.cc: Likewise.\n\t* testsuite/27_io/basic_filebuf/sungetc/char/2-io.cc: Likewise.\n\t* testsuite/25_algorithms/minmax/3.cc: Likewise.\n\t* testsuite/19_diagnostics/logic_error/what-3.cc: Likewise.\n\t* testsuite/19_diagnostics/runtime_error/what-3.cc: Likewise.\n\t* testsuite/19_diagnostics/system_error/what-3.cc: Likewise.\n\t* testsuite/24_iterators/front_insert_iterator/2.cc: Likewise.\n\t* testsuite/24_iterators/back_insert_iterator/2.cc: Likewise.\n\t* testsuite/24_iterators/insert_iterator/2.cc: Likewise.\n\t* testsuite/18_support/exception_ptr/make_exception_ptr.cc: Likewise.\n\t* testsuite/21_strings/c_strings/wchar_t/1.cc: Likewise.\n\t* testsuite/21_strings/c_strings/wchar_t/2.cc: Likewise.\n\t* testsuite/21_strings/c_strings/char/1.cc: Likewise.\n\t* testsuite/21_strings/c_strings/char/2.cc: Likewise.\n\t* testsuite/26_numerics/random/independent_bits_engine/cons/\n\tcopy.cc: Likewise.\n\t* testsuite/26_numerics/random/subtract_with_carry_engine/\n\tcons/copy.cc: Likewise.\n\t* testsuite/26_numerics/random/subtract_with_carry_engine/\n\trequirements/constants.cc: Likewise.\n\t* testsuite/26_numerics/random/discard_block_engine/\n\tcons/copy.cc: Likewise.\n\t* testsuite/26_numerics/random/mersenne_twister_engine/\n\tcons/copy.cc: Likewise.\n\t* testsuite/26_numerics/random/mersenne_twister_engine/\n\trequirements/constants.cc: Likewise.\n\t* testsuite/26_numerics/random/linear_congruential_engine/\n\tcons/copy.cc: Likewise.\n\t* testsuite/26_numerics/random/linear_congruential_engine/\n\trequirements/constants.cc: Likewise.\n\t* testsuite/26_numerics/random/shuffle_order_engine/\n\tcons/copy.cc: Likewise.\n\t* testsuite/26_numerics/random/shuffle_order_engine/\n\trequirements/constants.cc: Likewise.\n\t* testsuite/26_numerics/complex/complex_value.cc: Likewise.\n\t* testsuite/26_numerics/headers/cmath/overloads.cc: Likewise.\n\t* testsuite/26_numerics/headers/cmath/\n\tc99_classification_macros_c++.cc: Likewise.\n\t* testsuite/26_numerics/slice_array/array_assignment.cc: Likewise.\n\t* testsuite/22_locale/money_put/put/wchar_t/1.cc: Likewise.\n\t* testsuite/22_locale/money_put/put/wchar_t/2.cc: Likewise.\n\t* testsuite/22_locale/money_put/put/wchar_t/3.cc: Likewise.\n\t* testsuite/22_locale/money_put/put/wchar_t/12971.cc: Likewise.\n\t* testsuite/22_locale/money_put/put/char/1.cc: Likewise.\n\t* testsuite/22_locale/money_put/put/char/2.cc: Likewise.\n\t* testsuite/22_locale/money_put/put/char/3.cc: Likewise.\n\t* testsuite/22_locale/money_put/put/char/12971.cc: Likewise.\n\t* testsuite/22_locale/time_put/put/wchar_t/1.cc: Likewise.\n\t* testsuite/22_locale/time_put/put/wchar_t/2.cc: Likewise.\n\t* testsuite/22_locale/time_put/put/wchar_t/3.cc: Likewise.\n\t* testsuite/22_locale/time_put/put/wchar_t/4.cc: Likewise.\n\t* testsuite/22_locale/time_put/put/wchar_t/5.cc: Likewise.\n\t* testsuite/22_locale/time_put/put/wchar_t/6.cc: Likewise.\n\t* testsuite/22_locale/time_put/put/wchar_t/7.cc: Likewise.\n\t* testsuite/22_locale/time_put/put/wchar_t/8.cc: Likewise.\n\t* testsuite/22_locale/time_put/put/wchar_t/17038.cc: Likewise.\n\t* testsuite/22_locale/time_put/put/char/1.cc: Likewise.\n\t* testsuite/22_locale/time_put/put/char/2.cc: Likewise.\n\t* testsuite/22_locale/time_put/put/char/3.cc: Likewise.\n\t* testsuite/22_locale/time_put/put/char/4.cc: Likewise.\n\t* testsuite/22_locale/time_put/put/char/5.cc: Likewise.\n\t* testsuite/22_locale/time_put/put/char/6.cc: Likewise.\n\t* testsuite/22_locale/time_put/put/char/7.cc: Likewise.\n\t* testsuite/22_locale/time_put/put/char/8.cc: Likewise.\n\t* testsuite/22_locale/time_put/put/char/17038.cc: Likewise.\n\t* testsuite/22_locale/num_put/put/wchar_t/1.cc: Likewise.\n\t* testsuite/22_locale/num_put/put/char/1.cc: Likewise.\n\t* testsuite/22_locale/time_get/get_year/wchar_t/5.cc: Likewise.\n\t* testsuite/22_locale/time_get/get_year/char/5.cc: Likewise.\n\t* testsuite/22_locale/time_get/get_monthname/wchar_t/5.cc: Likewise.\n\t* testsuite/22_locale/time_get/get_monthname/char/5.cc: Likewise.\n\t* testsuite/22_locale/time_get/get_weekday/wchar_t/5.cc: Likewise.\n\t* testsuite/22_locale/time_get/get_weekday/char/5.cc: Likewise.\n\t* testsuite/22_locale/time_get/get_date/wchar_t/5.cc: Likewise.\n\t* testsuite/22_locale/time_get/get_date/char/5.cc: Likewise.\n\t* testsuite/22_locale/time_get/get_time/wchar_t/5.cc: Likewise.\n\t* testsuite/22_locale/time_get/get_time/char/5.cc: Likewise.\n\t* testsuite/22_locale/num_get/get/wchar_t/1.cc: Likewise.\n\t* testsuite/22_locale/num_get/get/char/1.cc: Likewise.\n\t* testsuite/22_locale/moneypunct/members/wchar_t/1.cc: Likewise.\n\t* testsuite/22_locale/moneypunct/members/char/1.cc: Likewise.\n\t* testsuite/22_locale/ctype_base/mask.cc: Likewise.\n\t* testsuite/tr1/5_numerical_facilities/random/\n\tsubtract_with_carry/requirements/constants.cc: Likewise.\n\t* testsuite/tr1/5_numerical_facilities/random/\n\tsubtract_with_carry_01/requirements/constants.cc: Likewise.\n\t* testsuite/tr1/5_numerical_facilities/random/\n\tdiscard_block/requirements/constants.cc: Likewise.\n\t* testsuite/tr1/5_numerical_facilities/random/\n\tlinear_congruential/requirements/constants.cc: Likewise.\n\t* testsuite/tr1/5_numerical_facilities/random/\n\tmersenne_twister/requirements/constants.cc: Likewise.\n\t* testsuite/tr1/5_numerical_facilities/random/\n\txor_combine/requirements/constants.cc: Likewise.\n\t* testsuite/tr1/8_c_compatibility/cfenv/functions.cc: Likewise.\n\t* testsuite/tr1/8_c_compatibility/cinttypes/functions.cc: Likewise.\n\t* testsuite/tr1/8_c_compatibility/cstdlib/functions.cc: Likewise.\n\t* testsuite/tr1/8_c_compatibility/cstdio/functions.cc: Likewise.\n\t* testsuite/tr1/8_c_compatibility/cctype/functions.cc: Likewise.\n\t* testsuite/tr1/8_c_compatibility/cwchar/functions.cc: Likewise.\n\t* testsuite/tr1/8_c_compatibility/cmath/templates.cc: Likewise.\n\t* testsuite/tr1/8_c_compatibility/cmath/functions.cc: Likewise.\n\t* testsuite/tr1/8_c_compatibility/cwctype/functions.cc: Likewise.\n\t* testsuite/tr1/6_containers/utility/pair.cc: Likewise.\n\t* testsuite/29_atomics/atomic_address/cons/aggregate.cc: Likewise.\n\t* testsuite/29_atomics/atomic_integral/cons/assign_neg.cc: Likewise.\n\t* testsuite/29_atomics/atomic_integral/cons/copy_neg.cc: Likewise.\n\t* testsuite/29_atomics/atomic_integral/operators/\n\tincrement_neg.cc: Likewise.\n\t* testsuite/29_atomics/atomic_integral/operators/\n\tbitwise_neg.cc: Likewise.\n\t* testsuite/29_atomics/atomic_integral/operators/\n\tdecrement_neg.cc: Likewise.\n\t* testsuite/29_atomics/atomic_flag/cons/1.cc: Likewise.\n\t* testsuite/29_atomics/atomic/cons/assign_neg.cc: Likewise.\n\t* testsuite/29_atomics/atomic/cons/copy_neg.cc: Likewise.\n\t* testsuite/23_containers/priority_queue/members/7161.cc\n\t* testsuite/23_containers/set/dr130.cc: Likewise.\n\t* testsuite/23_containers/list/pthread5.cc: Likewise.\n\t* testsuite/23_containers/map/dr130.cc: Likewise.\n\t* testsuite/util/exception/safety.h: Likewise.\n\t* testsuite/util/testsuite_common_types.h: Likewise.\n\t* testsuite/20_util/clocks/1.cc: Likewise.\n\nFrom-SVN: r160416", "tree": {"sha": "1900e27ddd2b4040339647f59868e7da6fe7ae55", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1900e27ddd2b4040339647f59868e7da6fe7ae55"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/567d4027a3ca0dc36fd0d828925a34a237ad62db", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/567d4027a3ca0dc36fd0d828925a34a237ad62db", "html_url": "https://github.com/Rust-GCC/gccrs/commit/567d4027a3ca0dc36fd0d828925a34a237ad62db", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/567d4027a3ca0dc36fd0d828925a34a237ad62db/comments", "author": null, "committer": null, "parents": [{"sha": "6e9e0126dbd711899789da8c9e11cc6b54270774", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6e9e0126dbd711899789da8c9e11cc6b54270774", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6e9e0126dbd711899789da8c9e11cc6b54270774"}], "stats": {"total": 1204, "additions": 717, "deletions": 487}, "files": [{"sha": "1a2d4105fa071cf41fc7b28ef1997fd9432732be", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 178, "deletions": 0, "changes": 178, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/567d4027a3ca0dc36fd0d828925a34a237ad62db/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/567d4027a3ca0dc36fd0d828925a34a237ad62db/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=567d4027a3ca0dc36fd0d828925a34a237ad62db", "patch": "@@ -1,3 +1,181 @@\n+2010-06-07  Paolo Carlini  <paolo.carlini@oracle.com>\n+\n+\t* include/ext/pb_ds/detail/trie_policy/order_statistics_imp.hpp:\n+\tAvoid -Wall warnings.\n+\t* testsuite/27_io/ios_base/failure/what-3.cc: Likewise.\n+\t* testsuite/27_io/basic_ostringstream/str/wchar_t/1.cc: Likewise.\n+\t* testsuite/27_io/basic_ostringstream/str/char/1.cc: Likewise.\n+\t* testsuite/27_io/basic_stringbuf/sputbackc/wchar_t/1.cc: Likewise.\n+\t* testsuite/27_io/basic_stringbuf/sputbackc/char/1.cc: Likewise.\n+\t* testsuite/27_io/basic_stringbuf/sgetn/wchar_t/1.cc: Likewise.\n+\t* testsuite/27_io/basic_stringbuf/sgetn/char/1.cc: Likewise.\n+\t* testsuite/27_io/basic_stringbuf/seekoff/wchar_t/1.cc: Likewise.\n+\t* testsuite/27_io/basic_stringbuf/seekoff/char/1.cc: Likewise.\n+\t* testsuite/27_io/basic_stringbuf/sbumpc/wchar_t/1.cc: Likewise.\n+\t* testsuite/27_io/basic_stringbuf/sbumpc/char/1.cc: Likewise.\n+\t* testsuite/27_io/basic_stringbuf/snextc/wchar_t/1.cc: Likewise.\n+\t* testsuite/27_io/basic_stringbuf/snextc/char/1.cc: Likewise.\n+\t* testsuite/27_io/basic_stringbuf/sgetc/wchar_t/1.cc: Likewise.\n+\t* testsuite/27_io/basic_stringbuf/sgetc/char/1.cc: Likewise.\n+\t* testsuite/27_io/basic_stringbuf/sungetc/wchar_t/1.cc: Likewise.\n+\t* testsuite/27_io/basic_stringbuf/sungetc/char/1.cc: Likewise.\n+\t* testsuite/27_io/basic_stringbuf/seekpos/wchar_t/1.cc: Likewise.\n+\t* testsuite/27_io/basic_stringbuf/seekpos/char/1.cc: Likewise.\n+\t* testsuite/27_io/types/2.cc: Likewise.\n+\t* testsuite/27_io/basic_istream/ignore/wchar_t/1.cc: Likewise.\n+\t* testsuite/27_io/basic_istream/ignore/char/1.cc: Likewise.\n+\t* testsuite/27_io/basic_istream/peek/wchar_t/1.cc: Likewise.\n+\t* testsuite/27_io/basic_istream/peek/char/1.cc: Likewise.\n+\t* testsuite/27_io/basic_istream/ws/wchar_t/1.cc: Likewise.\n+\t* testsuite/27_io/basic_istream/ws/char/1.cc: Likewise.\n+\t* testsuite/27_io/basic_istream/seekg/wchar_t/8348-2.cc: Likewise.\n+\t* testsuite/27_io/basic_istream/seekg/char/8348-2.cc: Likewise.\n+\t* testsuite/27_io/basic_istream/tellg/wchar_t/8348.cc: Likewise.\n+\t* testsuite/27_io/basic_istream/tellg/char/8348.cc: Likewise.\n+\t* testsuite/27_io/basic_istream/extractors_arithmetic/wchar_t/01.cc:\n+\tLikewise.\n+\t* testsuite/27_io/basic_istream/extractors_arithmetic/char/01.cc:\n+\tLikewise.\n+\t* testsuite/27_io/fpos/mbstate_t/4_neg.cc: Likewise.\n+\t* testsuite/27_io/fpos/mbstate_t/2.cc: Likewise.\n+\t* testsuite/27_io/fpos/mbstate_t/3.cc: Likewise.\n+\t* testsuite/27_io/fpos/mbstate_t/5.cc: Likewise.\n+\t* testsuite/27_io/basic_ostream/inserters_character/wchar_t/4.cc:\n+\tLikewise.\n+\t* testsuite/27_io/basic_ostream/inserters_character/char/4.cc:\n+\tLikewise.\n+\t* testsuite/27_io/basic_filebuf/sgetn/char/2-out.cc: Likewise.\n+\t* testsuite/27_io/basic_filebuf/seekoff/12790-4.cc: Likewise.\n+\t* testsuite/27_io/basic_filebuf/seekoff/char/1-in.cc: Likewise.\n+\t* testsuite/27_io/basic_filebuf/seekoff/char/2-in.cc: Likewise.\n+\t* testsuite/27_io/basic_filebuf/seekoff/char/1-out.cc: Likewise.\n+\t* testsuite/27_io/basic_filebuf/seekoff/char/1-io.cc: Likewise.\n+\t* testsuite/27_io/basic_filebuf/seekoff/char/2-out.cc: Likewise.\n+\t* testsuite/27_io/basic_filebuf/seekoff/char/2-io.cc: Likewise.\n+\t* testsuite/27_io/basic_filebuf/sungetc/char/1-io.cc: Likewise.\n+\t* testsuite/27_io/basic_filebuf/sungetc/char/2-io.cc: Likewise.\n+\t* testsuite/25_algorithms/minmax/3.cc: Likewise.\n+\t* testsuite/19_diagnostics/logic_error/what-3.cc: Likewise.\n+\t* testsuite/19_diagnostics/runtime_error/what-3.cc: Likewise.\n+\t* testsuite/19_diagnostics/system_error/what-3.cc: Likewise.\n+\t* testsuite/24_iterators/front_insert_iterator/2.cc: Likewise.\n+\t* testsuite/24_iterators/back_insert_iterator/2.cc: Likewise.\n+\t* testsuite/24_iterators/insert_iterator/2.cc: Likewise.\n+\t* testsuite/18_support/exception_ptr/make_exception_ptr.cc: Likewise.\n+\t* testsuite/21_strings/c_strings/wchar_t/1.cc: Likewise.\n+\t* testsuite/21_strings/c_strings/wchar_t/2.cc: Likewise.\n+\t* testsuite/21_strings/c_strings/char/1.cc: Likewise.\n+\t* testsuite/21_strings/c_strings/char/2.cc: Likewise.\n+\t* testsuite/26_numerics/random/independent_bits_engine/cons/\n+\tcopy.cc: Likewise.\n+\t* testsuite/26_numerics/random/subtract_with_carry_engine/\n+\tcons/copy.cc: Likewise.\n+\t* testsuite/26_numerics/random/subtract_with_carry_engine/\n+\trequirements/constants.cc: Likewise.\n+\t* testsuite/26_numerics/random/discard_block_engine/\n+\tcons/copy.cc: Likewise.\n+\t* testsuite/26_numerics/random/mersenne_twister_engine/\n+\tcons/copy.cc: Likewise.\n+\t* testsuite/26_numerics/random/mersenne_twister_engine/\n+\trequirements/constants.cc: Likewise.\n+\t* testsuite/26_numerics/random/linear_congruential_engine/\n+\tcons/copy.cc: Likewise.\n+\t* testsuite/26_numerics/random/linear_congruential_engine/\n+\trequirements/constants.cc: Likewise.\n+\t* testsuite/26_numerics/random/shuffle_order_engine/\n+\tcons/copy.cc: Likewise.\n+\t* testsuite/26_numerics/random/shuffle_order_engine/\n+\trequirements/constants.cc: Likewise.\n+\t* testsuite/26_numerics/complex/complex_value.cc: Likewise.\n+\t* testsuite/26_numerics/headers/cmath/overloads.cc: Likewise.\n+\t* testsuite/26_numerics/headers/cmath/\n+\tc99_classification_macros_c++.cc: Likewise.\n+\t* testsuite/26_numerics/slice_array/array_assignment.cc: Likewise.\n+\t* testsuite/22_locale/money_put/put/wchar_t/1.cc: Likewise.\n+\t* testsuite/22_locale/money_put/put/wchar_t/2.cc: Likewise.\n+\t* testsuite/22_locale/money_put/put/wchar_t/3.cc: Likewise.\n+\t* testsuite/22_locale/money_put/put/wchar_t/12971.cc: Likewise.\n+\t* testsuite/22_locale/money_put/put/char/1.cc: Likewise.\n+\t* testsuite/22_locale/money_put/put/char/2.cc: Likewise.\n+\t* testsuite/22_locale/money_put/put/char/3.cc: Likewise.\n+\t* testsuite/22_locale/money_put/put/char/12971.cc: Likewise.\n+\t* testsuite/22_locale/time_put/put/wchar_t/1.cc: Likewise.\n+\t* testsuite/22_locale/time_put/put/wchar_t/2.cc: Likewise.\n+\t* testsuite/22_locale/time_put/put/wchar_t/3.cc: Likewise.\n+\t* testsuite/22_locale/time_put/put/wchar_t/4.cc: Likewise.\n+\t* testsuite/22_locale/time_put/put/wchar_t/5.cc: Likewise.\n+\t* testsuite/22_locale/time_put/put/wchar_t/6.cc: Likewise.\n+\t* testsuite/22_locale/time_put/put/wchar_t/7.cc: Likewise.\n+\t* testsuite/22_locale/time_put/put/wchar_t/8.cc: Likewise.\n+\t* testsuite/22_locale/time_put/put/wchar_t/17038.cc: Likewise.\n+\t* testsuite/22_locale/time_put/put/char/1.cc: Likewise.\n+\t* testsuite/22_locale/time_put/put/char/2.cc: Likewise.\n+\t* testsuite/22_locale/time_put/put/char/3.cc: Likewise.\n+\t* testsuite/22_locale/time_put/put/char/4.cc: Likewise.\n+\t* testsuite/22_locale/time_put/put/char/5.cc: Likewise.\n+\t* testsuite/22_locale/time_put/put/char/6.cc: Likewise.\n+\t* testsuite/22_locale/time_put/put/char/7.cc: Likewise.\n+\t* testsuite/22_locale/time_put/put/char/8.cc: Likewise.\n+\t* testsuite/22_locale/time_put/put/char/17038.cc: Likewise.\n+\t* testsuite/22_locale/num_put/put/wchar_t/1.cc: Likewise.\n+\t* testsuite/22_locale/num_put/put/char/1.cc: Likewise.\n+\t* testsuite/22_locale/time_get/get_year/wchar_t/5.cc: Likewise.\n+\t* testsuite/22_locale/time_get/get_year/char/5.cc: Likewise.\n+\t* testsuite/22_locale/time_get/get_monthname/wchar_t/5.cc: Likewise.\n+\t* testsuite/22_locale/time_get/get_monthname/char/5.cc: Likewise.\n+\t* testsuite/22_locale/time_get/get_weekday/wchar_t/5.cc: Likewise.\n+\t* testsuite/22_locale/time_get/get_weekday/char/5.cc: Likewise.\n+\t* testsuite/22_locale/time_get/get_date/wchar_t/5.cc: Likewise.\n+\t* testsuite/22_locale/time_get/get_date/char/5.cc: Likewise.\n+\t* testsuite/22_locale/time_get/get_time/wchar_t/5.cc: Likewise.\n+\t* testsuite/22_locale/time_get/get_time/char/5.cc: Likewise.\n+\t* testsuite/22_locale/num_get/get/wchar_t/1.cc: Likewise.\n+\t* testsuite/22_locale/num_get/get/char/1.cc: Likewise.\n+\t* testsuite/22_locale/moneypunct/members/wchar_t/1.cc: Likewise.\n+\t* testsuite/22_locale/moneypunct/members/char/1.cc: Likewise.\n+\t* testsuite/22_locale/ctype_base/mask.cc: Likewise.\n+\t* testsuite/tr1/5_numerical_facilities/random/\n+\tsubtract_with_carry/requirements/constants.cc: Likewise.\n+\t* testsuite/tr1/5_numerical_facilities/random/\n+\tsubtract_with_carry_01/requirements/constants.cc: Likewise.\n+\t* testsuite/tr1/5_numerical_facilities/random/\n+\tdiscard_block/requirements/constants.cc: Likewise.\n+\t* testsuite/tr1/5_numerical_facilities/random/\n+\tlinear_congruential/requirements/constants.cc: Likewise.\n+\t* testsuite/tr1/5_numerical_facilities/random/\n+\tmersenne_twister/requirements/constants.cc: Likewise.\n+\t* testsuite/tr1/5_numerical_facilities/random/\n+\txor_combine/requirements/constants.cc: Likewise.\n+\t* testsuite/tr1/8_c_compatibility/cfenv/functions.cc: Likewise.\n+\t* testsuite/tr1/8_c_compatibility/cinttypes/functions.cc: Likewise.\n+\t* testsuite/tr1/8_c_compatibility/cstdlib/functions.cc: Likewise.\n+\t* testsuite/tr1/8_c_compatibility/cstdio/functions.cc: Likewise.\n+\t* testsuite/tr1/8_c_compatibility/cctype/functions.cc: Likewise.\n+\t* testsuite/tr1/8_c_compatibility/cwchar/functions.cc: Likewise.\n+\t* testsuite/tr1/8_c_compatibility/cmath/templates.cc: Likewise.\n+\t* testsuite/tr1/8_c_compatibility/cmath/functions.cc: Likewise.\n+\t* testsuite/tr1/8_c_compatibility/cwctype/functions.cc: Likewise.\n+\t* testsuite/tr1/6_containers/utility/pair.cc: Likewise.\n+\t* testsuite/29_atomics/atomic_address/cons/aggregate.cc: Likewise.\n+\t* testsuite/29_atomics/atomic_integral/cons/assign_neg.cc: Likewise.\n+\t* testsuite/29_atomics/atomic_integral/cons/copy_neg.cc: Likewise.\n+\t* testsuite/29_atomics/atomic_integral/operators/\n+\tincrement_neg.cc: Likewise.\n+\t* testsuite/29_atomics/atomic_integral/operators/\n+\tbitwise_neg.cc: Likewise.\n+\t* testsuite/29_atomics/atomic_integral/operators/\n+\tdecrement_neg.cc: Likewise.\n+\t* testsuite/29_atomics/atomic_flag/cons/1.cc: Likewise.\n+\t* testsuite/29_atomics/atomic/cons/assign_neg.cc: Likewise.\n+\t* testsuite/29_atomics/atomic/cons/copy_neg.cc: Likewise.\n+\t* testsuite/23_containers/priority_queue/members/7161.cc\n+\t* testsuite/23_containers/set/dr130.cc: Likewise.\n+\t* testsuite/23_containers/list/pthread5.cc: Likewise.\n+\t* testsuite/23_containers/map/dr130.cc: Likewise.\n+\t* testsuite/util/exception/safety.h: Likewise.\n+\t* testsuite/util/testsuite_common_types.h: Likewise.\n+\t* testsuite/20_util/clocks/1.cc: Likewise.\n+\n 2010-06-06  Jonathan Wakely  <jwakely.gcc@gmail.com>\n \n \t* doc/Makefile.am, doc/Makefile.in (xml_sources_extra): Add"}, {"sha": "cb8e24741217026361de177be8c0b7fa74d47b1f", "filename": "libstdc++-v3/include/ext/pb_ds/detail/trie_policy/order_statistics_imp.hpp", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/567d4027a3ca0dc36fd0d828925a34a237ad62db/libstdc%2B%2B-v3%2Finclude%2Fext%2Fpb_ds%2Fdetail%2Ftrie_policy%2Forder_statistics_imp.hpp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/567d4027a3ca0dc36fd0d828925a34a237ad62db/libstdc%2B%2B-v3%2Finclude%2Fext%2Fpb_ds%2Fdetail%2Ftrie_policy%2Forder_statistics_imp.hpp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fext%2Fpb_ds%2Fdetail%2Ftrie_policy%2Forder_statistics_imp.hpp?ref=567d4027a3ca0dc36fd0d828925a34a237ad62db", "patch": "@@ -1,6 +1,6 @@\n // -*- C++ -*-\n \n-// Copyright (C) 2005, 2006, 2009 Free Software Foundation, Inc.\n+// Copyright (C) 2005, 2006, 2009, 2010 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the terms\n@@ -50,8 +50,6 @@ find_by_order(size_type order)\n \n   node_iterator nd_it = node_begin();\n \n-  node_iterator end_nd_it = node_end();\n-\n   while (true)\n     {\n       if (order > nd_it.get_metadata())"}, {"sha": "4a7283f67de669216b2f3dff693f0d29da77cad5", "filename": "libstdc++-v3/testsuite/18_support/exception_ptr/make_exception_ptr.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/567d4027a3ca0dc36fd0d828925a34a237ad62db/libstdc%2B%2B-v3%2Ftestsuite%2F18_support%2Fexception_ptr%2Fmake_exception_ptr.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/567d4027a3ca0dc36fd0d828925a34a237ad62db/libstdc%2B%2B-v3%2Ftestsuite%2F18_support%2Fexception_ptr%2Fmake_exception_ptr.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F18_support%2Fexception_ptr%2Fmake_exception_ptr.cc?ref=567d4027a3ca0dc36fd0d828925a34a237ad62db", "patch": "@@ -21,7 +21,7 @@\n #include <exception>\n #include <testsuite_hooks.h>\n \n-bool test01()\n+void test01()\n {\n   bool test __attribute__((unused)) = true;\n "}, {"sha": "0656d42f068ac90e5f24c10de7ddcdfdeea56a46", "filename": "libstdc++-v3/testsuite/19_diagnostics/logic_error/what-3.cc", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/567d4027a3ca0dc36fd0d828925a34a237ad62db/libstdc%2B%2B-v3%2Ftestsuite%2F19_diagnostics%2Flogic_error%2Fwhat-3.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/567d4027a3ca0dc36fd0d828925a34a237ad62db/libstdc%2B%2B-v3%2Ftestsuite%2F19_diagnostics%2Flogic_error%2Fwhat-3.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F19_diagnostics%2Flogic_error%2Fwhat-3.cc?ref=567d4027a3ca0dc36fd0d828925a34a237ad62db", "patch": "@@ -1,6 +1,6 @@\n // { dg-options \"-std=gnu++0x\" }\n \n-// Copyright (C) 2007, 2009\n+// Copyright (C) 2007, 2009, 2010\n // Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n@@ -32,6 +32,9 @@ void allocate_on_stack(void)\n   __extension__ char array[num];\n   for (size_t i = 0; i < num; i++) \n     array[i]=0;\n+  // Suppress unused warnings.\n+  for (size_t i = 0; i < num; i++) \n+    array[i]=array[i];\n }\n \n void test04()"}, {"sha": "b252cea36479f7d3b1ca7f0a528fb967b6213f7d", "filename": "libstdc++-v3/testsuite/19_diagnostics/runtime_error/what-3.cc", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/567d4027a3ca0dc36fd0d828925a34a237ad62db/libstdc%2B%2B-v3%2Ftestsuite%2F19_diagnostics%2Fruntime_error%2Fwhat-3.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/567d4027a3ca0dc36fd0d828925a34a237ad62db/libstdc%2B%2B-v3%2Ftestsuite%2F19_diagnostics%2Fruntime_error%2Fwhat-3.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F19_diagnostics%2Fruntime_error%2Fwhat-3.cc?ref=567d4027a3ca0dc36fd0d828925a34a237ad62db", "patch": "@@ -1,6 +1,6 @@\n // 2001-02-26 Benjamin Kosnik  <bkoz@redhat.com>\n \n-// Copyright (C) 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2009\n+// Copyright (C) 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2009, 2010\n // Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n@@ -34,6 +34,9 @@ void allocate_on_stack(void)\n   __extension__ char array[num];\n   for (size_t i = 0; i < num; i++) \n     array[i]=0;\n+  // Suppress unused warnings.\n+  for (size_t i = 0; i < num; i++) \n+    array[i]=array[i];\n }\n \n void test04()"}, {"sha": "da4c80dfc1e5b1a06245060c16c2698b70af73cd", "filename": "libstdc++-v3/testsuite/19_diagnostics/system_error/what-3.cc", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/567d4027a3ca0dc36fd0d828925a34a237ad62db/libstdc%2B%2B-v3%2Ftestsuite%2F19_diagnostics%2Fsystem_error%2Fwhat-3.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/567d4027a3ca0dc36fd0d828925a34a237ad62db/libstdc%2B%2B-v3%2Ftestsuite%2F19_diagnostics%2Fsystem_error%2Fwhat-3.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F19_diagnostics%2Fsystem_error%2Fwhat-3.cc?ref=567d4027a3ca0dc36fd0d828925a34a237ad62db", "patch": "@@ -1,6 +1,6 @@\n // { dg-options \"-std=gnu++0x\" }\n \n-// Copyright (C) 2007, 2009\n+// Copyright (C) 2007, 2009, 2010\n // Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n@@ -32,6 +32,9 @@ void allocate_on_stack(void)\n   __extension__ char array[num];\n   for (size_t i = 0; i < num; i++) \n     array[i]=0;\n+  // Suppress unused warnings.\n+  for (size_t i = 0; i < num; i++) \n+    array[i]=array[i];\n }\n \n void test04()"}, {"sha": "ead20873c7bab43aba9b12ef3a0a488ae82afedc", "filename": "libstdc++-v3/testsuite/20_util/clocks/1.cc", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/567d4027a3ca0dc36fd0d828925a34a237ad62db/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fclocks%2F1.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/567d4027a3ca0dc36fd0d828925a34a237ad62db/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fclocks%2F1.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fclocks%2F1.cc?ref=567d4027a3ca0dc36fd0d828925a34a237ad62db", "patch": "@@ -1,7 +1,7 @@\n // { dg-options \"-std=gnu++0x\" }\n // { dg-require-cstdint \"\" }\n \n-// Copyright (C) 2008, 2009 Free Software Foundation\n+// Copyright (C) 2008, 2009, 2010 Free Software Foundation\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -33,6 +33,7 @@ main()\n   is_monotonic = is_monotonic; // suppress unused warning\n   std::time_t t2 = system_clock::to_time_t(t1);\n   system_clock::time_point t3 = system_clock::from_time_t(t2);\n+  t3 = t3; // suppress unused warning\n   \n   return 0;\n }"}, {"sha": "9142018d0de2fab05b955baa3af4676bf25e0444", "filename": "libstdc++-v3/testsuite/21_strings/c_strings/char/1.cc", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/567d4027a3ca0dc36fd0d828925a34a237ad62db/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fc_strings%2Fchar%2F1.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/567d4027a3ca0dc36fd0d828925a34a237ad62db/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fc_strings%2Fchar%2F1.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fc_strings%2Fchar%2F1.cc?ref=567d4027a3ca0dc36fd0d828925a34a237ad62db", "patch": "@@ -1,6 +1,6 @@\n // 2001-04-02  Benjamin Kosnik  <bkoz@redhat.com>\n \n-// Copyright (C) 2001, 2003, 2009 Free Software Foundation, Inc.\n+// Copyright (C) 2001, 2003, 2009, 2010 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -60,6 +60,9 @@ void test01()\n   // void* memchr(      void* s, int c, size_t n);\n   cv = std::memchr(cv, 'a', 3);\n   v = std::memchr(v, 'a', 3);\n+\n+  cc1 = cc1; // Suppress unused warnings.\n+  c1 = c1;\n }\n \n int main()"}, {"sha": "5d75190047366bf88577b2345a35ad492e4e4bf8", "filename": "libstdc++-v3/testsuite/21_strings/c_strings/char/2.cc", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/567d4027a3ca0dc36fd0d828925a34a237ad62db/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fc_strings%2Fchar%2F2.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/567d4027a3ca0dc36fd0d828925a34a237ad62db/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fc_strings%2Fchar%2F2.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fc_strings%2Fchar%2F2.cc?ref=567d4027a3ca0dc36fd0d828925a34a237ad62db", "patch": "@@ -1,6 +1,6 @@\n // 2001-04-02  Benjamin Kosnik  <bkoz@redhat.com>\n \n-// Copyright (C) 2001, 2003, 2009 Free Software Foundation, Inc.\n+// Copyright (C) 2001, 2003, 2009, 2010 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -40,6 +40,10 @@ void test02()\n   cc = strrchr(ccarray1, 'c');\n   cc = strpbrk(ccarray1, ccarray2);\n   c = strstr(carray, carray);\n+\n+  cv1 = cv1; // Suppress unused warnings.\n+  cc = cc;\n+  c = c;\n }\n \n int main()"}, {"sha": "4702581d90f20c7e8541c6d4f1e98a1777f2bb86", "filename": "libstdc++-v3/testsuite/21_strings/c_strings/wchar_t/1.cc", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/567d4027a3ca0dc36fd0d828925a34a237ad62db/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fc_strings%2Fwchar_t%2F1.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/567d4027a3ca0dc36fd0d828925a34a237ad62db/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fc_strings%2Fwchar_t%2F1.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fc_strings%2Fwchar_t%2F1.cc?ref=567d4027a3ca0dc36fd0d828925a34a237ad62db", "patch": "@@ -1,6 +1,6 @@\n // 2001-04-02  Benjamin Kosnik  <bkoz@redhat.com>\n \n-// Copyright (C) 2001, 2009 Free Software Foundation, Inc.\n+// Copyright (C) 2001, 2009, 2010 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -59,6 +59,9 @@ void test01()\n   // wchar_t* wmemchr(      wchar_t* s, wchar_t c, size_t n);\n   cc1 = std::wmemchr(ccarray1, L'a', 3);\n   c1 = std::wmemchr(carray, L'a', 3);\n+\n+  cc1 = cc1; // Suppress unused warnings.\n+  c1 = c1;\n }\n \n int main()"}, {"sha": "7637ecddf26cf70a52e022ce0789c6296f6bb592", "filename": "libstdc++-v3/testsuite/21_strings/c_strings/wchar_t/2.cc", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/567d4027a3ca0dc36fd0d828925a34a237ad62db/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fc_strings%2Fwchar_t%2F2.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/567d4027a3ca0dc36fd0d828925a34a237ad62db/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fc_strings%2Fwchar_t%2F2.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fc_strings%2Fwchar_t%2F2.cc?ref=567d4027a3ca0dc36fd0d828925a34a237ad62db", "patch": "@@ -1,6 +1,6 @@\n // 2001-04-02  Benjamin Kosnik  <bkoz@redhat.com>\n \n-// Copyright (C) 2001, 2009 Free Software Foundation, Inc.\n+// Copyright (C) 2001, 2009, 2010 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -39,6 +39,9 @@ void test02()\n   cw = wcspbrk(ccarray1, ccarray2);\n   cw = wcsrchr(ccarray1, L'c');\n   w = wcsstr(carray, carray);\n+\n+  cw = cw; // Suppress unused warnings.\n+  w = w;\n }\n \n int main()"}, {"sha": "f503ce7f41e82d6daeac3f58432ff70f76974477", "filename": "libstdc++-v3/testsuite/22_locale/ctype_base/mask.cc", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/567d4027a3ca0dc36fd0d828925a34a237ad62db/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Fctype_base%2Fmask.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/567d4027a3ca0dc36fd0d828925a34a237ad62db/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Fctype_base%2Fmask.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Fctype_base%2Fmask.cc?ref=567d4027a3ca0dc36fd0d828925a34a237ad62db", "patch": "@@ -1,7 +1,7 @@\n // { dg-do compile }\n // 1999-08-24 bkoz\n \n-// Copyright (C) 1999, 2000, 2003, 2009 Free Software Foundation\n+// Copyright (C) 1999, 2000, 2003, 2009, 2010 Free Software Foundation\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -43,6 +43,8 @@ test01()\n   res = m01 | m02;\n   res = m01 ^ m02;\n   res = ~m01;\n+  res = res; // Suppress unused warning.\n+\n   m01 &= m02;\n   m01 |= m02;\n   m01 ^= m02;"}, {"sha": "0dad40accf52f74dcfc4a0eb09d20d8489cee7e7", "filename": "libstdc++-v3/testsuite/22_locale/money_put/put/char/1.cc", "status": "modified", "additions": 8, "deletions": 7, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/567d4027a3ca0dc36fd0d828925a34a237ad62db/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Fmoney_put%2Fput%2Fchar%2F1.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/567d4027a3ca0dc36fd0d828925a34a237ad62db/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Fmoney_put%2Fput%2Fchar%2F1.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Fmoney_put%2Fput%2Fchar%2F1.cc?ref=567d4027a3ca0dc36fd0d828925a34a237ad62db", "patch": "@@ -2,7 +2,8 @@\n \n // 2001-08-27 Benjamin Kosnik  <bkoz@redhat.com>\n \n-// Copyright (C) 2001, 2002, 2003, 2004, 2005, 2009 Free Software Foundation\n+// Copyright (C) 2001, 2002, 2003, 2004, 2005, 2009, 2010\n+// Free Software Foundation\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -52,12 +53,12 @@ void test01()\n   oss.imbue(loc_de);\n   const money_put<char>& mon_put = use_facet<money_put<char> >(oss.getloc()); \n \n-  iterator_type os_it01 = mon_put.put(oss.rdbuf(), true, oss, ' ', digits1);\n+  mon_put.put(oss.rdbuf(), true, oss, ' ', digits1);\n   string result1 = oss.str();\n   VERIFY( result1 == \"7.200.000.000,00 \");\n \n   oss.str(empty);\n-  iterator_type os_it02 = mon_put.put(oss.rdbuf(), false, oss, ' ', digits1);\n+  mon_put.put(oss.rdbuf(), false, oss, ' ', digits1);\n   string result2 = oss.str();\n   VERIFY( result2 == \"7.200.000.000,00 \");\n \n@@ -68,12 +69,12 @@ void test01()\n   oss.setf(ios_base::showbase);\n \n   oss.str(empty);\n-  iterator_type os_it03 = mon_put.put(oss.rdbuf(), true, oss, ' ', digits1);\n+  mon_put.put(oss.rdbuf(), true, oss, ' ', digits1);\n   string result3 = oss.str();\n   VERIFY( result3 == \"7.200.000.000,00 EUR \");\n \n   oss.str(empty);\n-  iterator_type os_it04 = mon_put.put(oss.rdbuf(), false, oss, ' ', digits1);\n+  mon_put.put(oss.rdbuf(), false, oss, ' ', digits1);\n   string result4 = oss.str();\n   VERIFY( result4 == \"7.200.000.000,00 \\244\");\n \n@@ -88,14 +89,14 @@ void test01()\n   // test various fill strategies\n   oss.str(empty);\n   oss.width(20);\n-  iterator_type os_it10 = mon_put.put(oss.rdbuf(), true, oss, '*', digits2);\n+  mon_put.put(oss.rdbuf(), true, oss, '*', digits2);\n   string result10 = oss.str();\n   VERIFY( result10 == \"***************-,01*\");\n \n   oss.str(empty);\n   oss.width(20);\n   oss.setf(ios_base::internal);\n-  iterator_type os_it11 = mon_put.put(oss.rdbuf(), true, oss, '*', digits2);\n+  mon_put.put(oss.rdbuf(), true, oss, '*', digits2);\n   string result11 = oss.str();\n   VERIFY( result11 == \"-,01****************\");\n }"}, {"sha": "5ccb9ba4afc62327fe21ad66bf2723e9905f3c77", "filename": "libstdc++-v3/testsuite/22_locale/money_put/put/char/12971.cc", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/567d4027a3ca0dc36fd0d828925a34a237ad62db/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Fmoney_put%2Fput%2Fchar%2F12971.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/567d4027a3ca0dc36fd0d828925a34a237ad62db/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Fmoney_put%2Fput%2Fchar%2F12971.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Fmoney_put%2Fput%2Fchar%2F12971.cc?ref=567d4027a3ca0dc36fd0d828925a34a237ad62db", "patch": "@@ -1,6 +1,6 @@\n // 2003-11-09 Paolo Carlini <pcarlini@suse.de>\n \n-// Copyright (C) 2003, 2009 Free Software Foundation\n+// Copyright (C) 2003, 2009, 2010 Free Software Foundation\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -37,7 +37,7 @@ void test01()\n   ostringstream oss;\n   const money_put<char>& mon_put = use_facet<money_put<char> >(oss.getloc()); \n \n-  iterator_type os_it01 = mon_put.put(oss.rdbuf(), true, oss, ' ', amount);\n+  mon_put.put(oss.rdbuf(), true, oss, ' ', amount);\n   string result = oss.str();\n   VERIFY( result == \"11\" );\n }"}, {"sha": "7707c7e2a42c91d3ed1d0782d31c7d1139690011", "filename": "libstdc++-v3/testsuite/22_locale/money_put/put/char/2.cc", "status": "modified", "additions": 7, "deletions": 6, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/567d4027a3ca0dc36fd0d828925a34a237ad62db/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Fmoney_put%2Fput%2Fchar%2F2.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/567d4027a3ca0dc36fd0d828925a34a237ad62db/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Fmoney_put%2Fput%2Fchar%2F2.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Fmoney_put%2Fput%2Fchar%2F2.cc?ref=567d4027a3ca0dc36fd0d828925a34a237ad62db", "patch": "@@ -2,7 +2,8 @@\n \n // 2001-08-27 Benjamin Kosnik  <bkoz@redhat.com>\n \n-// Copyright (C) 2001, 2002, 2003, 2004, 2005, 2009 Free Software Foundation\n+// Copyright (C) 2001, 2002, 2003, 2004, 2005, 2009, 2010\n+// Free Software Foundation\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -63,36 +64,36 @@ void test02()\n \n   // test sign of more than one digit, say hong kong.\n   oss.str(empty);\n-  iterator_type os_it05 = mon_put.put(oss.rdbuf(), false, oss, ' ', digits1);\n+  mon_put.put(oss.rdbuf(), false, oss, ' ', digits1);\n   string result5 = oss.str();\n   VERIFY( result5 == \"HK$7,200,000,000.00\");\n \n   oss.str(empty);\n-  iterator_type os_it06 = mon_put.put(oss.rdbuf(), true, oss, ' ', digits2);\n+  mon_put.put(oss.rdbuf(), true, oss, ' ', digits2);\n   string result6 = oss.str();\n   VERIFY( result6 == \"(HKD 100,000,000,000.00)\");\n \n   // test one-digit formats without zero padding\n   oss.imbue(loc_c);\n   oss.str(empty);\n   const money_put<char>& mon_put2 = use_facet<money_put<char> >(oss.getloc()); \n-  iterator_type os_it07 = mon_put2.put(oss.rdbuf(), true, oss, ' ', digits4);\n+  mon_put2.put(oss.rdbuf(), true, oss, ' ', digits4);\n   string result7 = oss.str();\n   VERIFY( result7 == \"1\");\n \n   // test one-digit formats with zero padding, zero frac widths\n   oss.imbue(loc_hk);\n   oss.str(empty);\n   const money_put<char>& mon_put3 = use_facet<money_put<char> >(oss.getloc()); \n-  iterator_type os_it08 = mon_put3.put(oss.rdbuf(), true, oss, ' ', digits4);\n+  mon_put3.put(oss.rdbuf(), true, oss, ' ', digits4);\n   string result8 = oss.str();\n   VERIFY( result8 == \"(HKD .01)\");\n \n   oss.unsetf(ios_base::showbase);\n \n   // test bunk input\n   oss.str(empty);\n-  iterator_type os_it09 = mon_put.put(oss.rdbuf(), true, oss, ' ', digits3);\n+  mon_put.put(oss.rdbuf(), true, oss, ' ', digits3);\n   string result9 = oss.str();\n   VERIFY( result9 == \"\");\n }"}, {"sha": "609bb7f6373efd0671fa9153de61f5ccff34bc22", "filename": "libstdc++-v3/testsuite/22_locale/money_put/put/char/3.cc", "status": "modified", "additions": 6, "deletions": 5, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/567d4027a3ca0dc36fd0d828925a34a237ad62db/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Fmoney_put%2Fput%2Fchar%2F3.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/567d4027a3ca0dc36fd0d828925a34a237ad62db/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Fmoney_put%2Fput%2Fchar%2F3.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Fmoney_put%2Fput%2Fchar%2F3.cc?ref=567d4027a3ca0dc36fd0d828925a34a237ad62db", "patch": "@@ -2,7 +2,8 @@\n \n // 2001-08-27 Benjamin Kosnik  <bkoz@redhat.com>\n \n-// Copyright (C) 2001, 2002, 2003, 2004, 2005, 2009 Free Software Foundation\n+// Copyright (C) 2001, 2002, 2003, 2004, 2005, 2009, 2010\n+// Free Software Foundation\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -49,12 +50,12 @@ void test03()\n   oss.imbue(loc_de);\n   const money_put<char>& mon_put = use_facet<money_put<char> >(oss.getloc()); \n \n-  iterator_type os_it01 = mon_put.put(oss.rdbuf(), true, oss, ' ', digits1);\n+  mon_put.put(oss.rdbuf(), true, oss, ' ', digits1);\n   string result1 = oss.str();\n   VERIFY( result1 == \"7.200.000.000,00 \");\n \n   oss.str(empty);\n-  iterator_type os_it02 = mon_put.put(oss.rdbuf(), false, oss, ' ', digits1);\n+  mon_put.put(oss.rdbuf(), false, oss, ' ', digits1);\n   string result2 = oss.str();\n   VERIFY( result2 == \"7.200.000.000,00 \");\n \n@@ -65,12 +66,12 @@ void test03()\n   oss.setf(ios_base::showbase);\n \n   oss.str(empty);\n-  iterator_type os_it03 = mon_put.put(oss.rdbuf(), true, oss, ' ', digits1);\n+  mon_put.put(oss.rdbuf(), true, oss, ' ', digits1);\n   string result3 = oss.str();\n   VERIFY( result3 == \"7.200.000.000,00 EUR \");\n \n   oss.str(empty);\n-  iterator_type os_it04 = mon_put.put(oss.rdbuf(), false, oss, ' ', digits1);\n+  mon_put.put(oss.rdbuf(), false, oss, ' ', digits1);\n   string result4 = oss.str();\n   VERIFY( result4 == \"7.200.000.000,00 \\244\");\n "}, {"sha": "d48b8aa320c6bee065d0d3b1ea8243eb4921c383", "filename": "libstdc++-v3/testsuite/22_locale/money_put/put/wchar_t/1.cc", "status": "modified", "additions": 8, "deletions": 7, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/567d4027a3ca0dc36fd0d828925a34a237ad62db/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Fmoney_put%2Fput%2Fwchar_t%2F1.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/567d4027a3ca0dc36fd0d828925a34a237ad62db/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Fmoney_put%2Fput%2Fwchar_t%2F1.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Fmoney_put%2Fput%2Fwchar_t%2F1.cc?ref=567d4027a3ca0dc36fd0d828925a34a237ad62db", "patch": "@@ -2,7 +2,8 @@\n \n // 2001-08-27 Benjamin Kosnik  <bkoz@redhat.com>\n \n-// Copyright (C) 2001, 2002, 2003, 2004, 2005, 2009 Free Software Foundation\n+// Copyright (C) 2001, 2002, 2003, 2004, 2005, 2009, 2010\n+// Free Software Foundation\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -53,12 +54,12 @@ void test01()\n   const money_put<wchar_t>& mon_put =\n     use_facet<money_put<wchar_t> >(oss.getloc()); \n \n-  iterator_type os_it01 = mon_put.put(oss.rdbuf(), true, oss, L' ', digits1);\n+  mon_put.put(oss.rdbuf(), true, oss, L' ', digits1);\n   wstring result1 = oss.str();\n   VERIFY( result1 == L\"7.200.000.000,00 \" );\n \n   oss.str(empty);\n-  iterator_type os_it02 = mon_put.put(oss.rdbuf(), false, oss, L' ', digits1);\n+  mon_put.put(oss.rdbuf(), false, oss, L' ', digits1);\n   wstring result2 = oss.str();\n   VERIFY( result2 == L\"7.200.000.000,00 \" );\n \n@@ -69,12 +70,12 @@ void test01()\n   oss.setf(ios_base::showbase);\n \n   oss.str(empty);\n-  iterator_type os_it03 = mon_put.put(oss.rdbuf(), true, oss, L' ', digits1);\n+  mon_put.put(oss.rdbuf(), true, oss, L' ', digits1);\n   wstring result3 = oss.str();\n   VERIFY( result3 == L\"7.200.000.000,00 EUR \" );\n \n   oss.str(empty);\n-  iterator_type os_it04 = mon_put.put(oss.rdbuf(), false, oss, L' ', digits1);\n+  mon_put.put(oss.rdbuf(), false, oss, L' ', digits1);\n   wstring result4 = oss.str();\n   VERIFY( result4 == L\"7.200.000.000,00 \\x20ac\" );\n \n@@ -89,14 +90,14 @@ void test01()\n   // test various fill strategies\n   oss.str(empty);\n   oss.width(20);\n-  iterator_type os_it10 = mon_put.put(oss.rdbuf(), true, oss, L'*', digits2);\n+  mon_put.put(oss.rdbuf(), true, oss, L'*', digits2);\n   wstring result10 = oss.str();\n   VERIFY( result10 == L\"***************-,01*\" );\n \n   oss.str(empty);\n   oss.width(20);\n   oss.setf(ios_base::internal);\n-  iterator_type os_it11 = mon_put.put(oss.rdbuf(), true, oss, L'*', digits2);\n+  mon_put.put(oss.rdbuf(), true, oss, L'*', digits2);\n   wstring result11 = oss.str();\n   VERIFY( result11 == L\"-,01****************\" );\n }"}, {"sha": "cd430a9e1bde2f67ae5bf379a1303af89ccbc47c", "filename": "libstdc++-v3/testsuite/22_locale/money_put/put/wchar_t/12971.cc", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/567d4027a3ca0dc36fd0d828925a34a237ad62db/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Fmoney_put%2Fput%2Fwchar_t%2F12971.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/567d4027a3ca0dc36fd0d828925a34a237ad62db/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Fmoney_put%2Fput%2Fwchar_t%2F12971.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Fmoney_put%2Fput%2Fwchar_t%2F12971.cc?ref=567d4027a3ca0dc36fd0d828925a34a237ad62db", "patch": "@@ -1,6 +1,6 @@\n // 2003-11-09 Paolo Carlini <pcarlini@suse.de>\n \n-// Copyright (C) 2003, 2004, 2009 Free Software Foundation\n+// Copyright (C) 2003, 2004, 2009, 2010 Free Software Foundation\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -38,7 +38,7 @@ void test01()\n   const money_put<wchar_t>& mon_put =\n     use_facet<money_put<wchar_t> >(oss.getloc()); \n \n-  iterator_type os_it01 = mon_put.put(oss.rdbuf(), true, oss, L' ', amount);\n+  mon_put.put(oss.rdbuf(), true, oss, L' ', amount);\n   wstring result = oss.str();\n   VERIFY( result == L\"11\" );\n }"}, {"sha": "592c913f08459001cdb2b7e9ee8e0ff2890cfb71", "filename": "libstdc++-v3/testsuite/22_locale/money_put/put/wchar_t/2.cc", "status": "modified", "additions": 7, "deletions": 6, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/567d4027a3ca0dc36fd0d828925a34a237ad62db/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Fmoney_put%2Fput%2Fwchar_t%2F2.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/567d4027a3ca0dc36fd0d828925a34a237ad62db/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Fmoney_put%2Fput%2Fwchar_t%2F2.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Fmoney_put%2Fput%2Fwchar_t%2F2.cc?ref=567d4027a3ca0dc36fd0d828925a34a237ad62db", "patch": "@@ -2,7 +2,8 @@\n \n // 2001-08-27 Benjamin Kosnik  <bkoz@redhat.com>\n \n-// Copyright (C) 2001, 2002, 2003, 2004, 2005, 2009 Free Software Foundation\n+// Copyright (C) 2001, 2002, 2003, 2004, 2005, 2009, 2010\n+// Free Software Foundation\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -64,12 +65,12 @@ void test02()\n \n   // test sign of more than one digit, say hong kong.\n   oss.str(empty);\n-  iterator_type os_it05 = mon_put.put(oss.rdbuf(), false, oss, L' ', digits1);\n+  mon_put.put(oss.rdbuf(), false, oss, L' ', digits1);\n   wstring result5 = oss.str();\n   VERIFY( result5 == L\"HK$7,200,000,000.00\" );\n \n   oss.str(empty);\n-  iterator_type os_it06 = mon_put.put(oss.rdbuf(), true, oss, L' ', digits2);\n+  mon_put.put(oss.rdbuf(), true, oss, L' ', digits2);\n   wstring result6 = oss.str();\n   VERIFY( result6 == L\"(HKD 100,000,000,000.00)\" );\n \n@@ -78,7 +79,7 @@ void test02()\n   oss.str(empty);\n   const money_put<wchar_t>& mon_put2 =\n     use_facet<money_put<wchar_t> >(oss.getloc()); \n-  iterator_type os_it07 = mon_put2.put(oss.rdbuf(), true, oss, L' ', digits4);\n+  mon_put2.put(oss.rdbuf(), true, oss, L' ', digits4);\n   wstring result7 = oss.str();\n   VERIFY( result7 == L\"1\" );\n \n@@ -87,15 +88,15 @@ void test02()\n   oss.str(empty);\n   const money_put<wchar_t>& mon_put3 =\n     use_facet<money_put<wchar_t> >(oss.getloc()); \n-  iterator_type os_it08 = mon_put3.put(oss.rdbuf(), true, oss, L' ', digits4);\n+  mon_put3.put(oss.rdbuf(), true, oss, L' ', digits4);\n   wstring result8 = oss.str();\n   VERIFY( result8 == L\"(HKD .01)\" );\n \n   oss.unsetf(ios_base::showbase);\n \n   // test bunk input\n   oss.str(empty);\n-  iterator_type os_it09 = mon_put.put(oss.rdbuf(), true, oss, L' ', digits3);\n+  mon_put.put(oss.rdbuf(), true, oss, L' ', digits3);\n   wstring result9 = oss.str();\n   VERIFY( result9 == L\"\" );\n }"}, {"sha": "798745bac0e9dc26908e9831b09069e520be339e", "filename": "libstdc++-v3/testsuite/22_locale/money_put/put/wchar_t/3.cc", "status": "modified", "additions": 6, "deletions": 5, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/567d4027a3ca0dc36fd0d828925a34a237ad62db/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Fmoney_put%2Fput%2Fwchar_t%2F3.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/567d4027a3ca0dc36fd0d828925a34a237ad62db/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Fmoney_put%2Fput%2Fwchar_t%2F3.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Fmoney_put%2Fput%2Fwchar_t%2F3.cc?ref=567d4027a3ca0dc36fd0d828925a34a237ad62db", "patch": "@@ -2,7 +2,8 @@\n \n // 2001-08-27 Benjamin Kosnik  <bkoz@redhat.com>\n \n-// Copyright (C) 2001, 2002, 2003, 2004, 2005, 2009 Free Software Foundation\n+// Copyright (C) 2001, 2002, 2003, 2004, 2005, 2009, 2010\n+// Free Software Foundation\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -50,12 +51,12 @@ void test03()\n   const money_put<wchar_t>& mon_put =\n     use_facet<money_put<wchar_t> >(oss.getloc()); \n \n-  iterator_type os_it01 = mon_put.put(oss.rdbuf(), true, oss, L' ', digits1);\n+  mon_put.put(oss.rdbuf(), true, oss, L' ', digits1);\n   wstring result1 = oss.str();\n   VERIFY( result1 == L\"7.200.000.000,00 \" );\n \n   oss.str(empty);\n-  iterator_type os_it02 = mon_put.put(oss.rdbuf(), false, oss, L' ', digits1);\n+  mon_put.put(oss.rdbuf(), false, oss, L' ', digits1);\n   wstring result2 = oss.str();\n   VERIFY( result2 == L\"7.200.000.000,00 \" );\n \n@@ -66,12 +67,12 @@ void test03()\n   oss.setf(ios_base::showbase);\n \n   oss.str(empty);\n-  iterator_type os_it03 = mon_put.put(oss.rdbuf(), true, oss, L' ', digits1);\n+  mon_put.put(oss.rdbuf(), true, oss, L' ', digits1);\n   wstring result3 = oss.str();\n   VERIFY( result3 == L\"7.200.000.000,00 EUR \" );\n \n   oss.str(empty);\n-  iterator_type os_it04 = mon_put.put(oss.rdbuf(), false, oss, L' ', digits1);\n+  mon_put.put(oss.rdbuf(), false, oss, L' ', digits1);\n   wstring result4 = oss.str();\n   VERIFY( result4 == L\"7.200.000.000,00 \\x20ac\" );\n "}, {"sha": "fd28b63fbebaa5866197063e38bc3466744f2e35", "filename": "libstdc++-v3/testsuite/22_locale/moneypunct/members/char/1.cc", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/567d4027a3ca0dc36fd0d828925a34a237ad62db/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Fmoneypunct%2Fmembers%2Fchar%2F1.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/567d4027a3ca0dc36fd0d828925a34a237ad62db/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Fmoneypunct%2Fmembers%2Fchar%2F1.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Fmoneypunct%2Fmembers%2Fchar%2F1.cc?ref=567d4027a3ca0dc36fd0d828925a34a237ad62db", "patch": "@@ -1,6 +1,6 @@\n // 2001-08-23 Benjamin Kosnik  <bkoz@redhat.com>\n \n-// Copyright (C) 2001, 2002, 2003, 2009 Free Software Foundation\n+// Copyright (C) 2001, 2002, 2003, 2009, 2010 Free Software Foundation\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -59,6 +59,8 @@ void test01()\n   pattern neg1 = monp_c_t.neg_format();\n   pattern pos2 = monp_c_f.pos_format();\n   pattern neg2 = monp_c_f.neg_format();\n+  neg1 = neg1;\n+  neg2 = neg2;\n \n   VERIFY( q1 == '.' );\n   VERIFY( q3 == '.' );"}, {"sha": "eb5e50684be02d30ed0058c0454caaee0bdc20a8", "filename": "libstdc++-v3/testsuite/22_locale/moneypunct/members/wchar_t/1.cc", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/567d4027a3ca0dc36fd0d828925a34a237ad62db/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Fmoneypunct%2Fmembers%2Fwchar_t%2F1.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/567d4027a3ca0dc36fd0d828925a34a237ad62db/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Fmoneypunct%2Fmembers%2Fwchar_t%2F1.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Fmoneypunct%2Fmembers%2Fwchar_t%2F1.cc?ref=567d4027a3ca0dc36fd0d828925a34a237ad62db", "patch": "@@ -1,6 +1,6 @@\n // 2001-08-23 Benjamin Kosnik  <bkoz@redhat.com>\n \n-// Copyright (C) 2001, 2002, 2003, 2009 Free Software Foundation\n+// Copyright (C) 2001, 2002, 2003, 2009, 2010 Free Software Foundation\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -59,6 +59,8 @@ void test01()\n   pattern neg1 = monp_c_t.neg_format();\n   pattern pos2 = monp_c_f.pos_format();\n   pattern neg2 = monp_c_f.neg_format();\n+  neg1 = neg1;\n+  neg2 = neg2;\n \n   VERIFY( q1 == L'.' );\n   VERIFY( q3 == L'.' );"}, {"sha": "c951c4c3e5ed3ce5ff4892959a4c5dc57660e633", "filename": "libstdc++-v3/testsuite/22_locale/num_get/get/char/1.cc", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/567d4027a3ca0dc36fd0d828925a34a237ad62db/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Fnum_get%2Fget%2Fchar%2F1.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/567d4027a3ca0dc36fd0d828925a34a237ad62db/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Fnum_get%2Fget%2Fchar%2F1.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Fnum_get%2Fget%2Fchar%2F1.cc?ref=567d4027a3ca0dc36fd0d828925a34a237ad62db", "patch": "@@ -2,7 +2,7 @@\n \n // 2001-11-21 Benjamin Kosnik  <bkoz@redhat.com>\n \n-// Copyright (C) 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2009\n+// Copyright (C) 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2009, 2010\n // Free Software Foundation\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n@@ -63,7 +63,7 @@ void test01()\n   // bool, simple\n   iss.str(\"1\");\n   iterator_type os_it00 = iss.rdbuf();\n-  iterator_type os_it01 = ng.get(os_it00, 0, iss, err, b1);\n+  ng.get(os_it00, 0, iss, err, b1);\n   VERIFY( b1 == true );\n   VERIFY( err & ios_base::eofbit );\n "}, {"sha": "8b4884738a76c7d6e803a7da707686eaf5f4befa", "filename": "libstdc++-v3/testsuite/22_locale/num_get/get/wchar_t/1.cc", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/567d4027a3ca0dc36fd0d828925a34a237ad62db/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Fnum_get%2Fget%2Fwchar_t%2F1.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/567d4027a3ca0dc36fd0d828925a34a237ad62db/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Fnum_get%2Fget%2Fwchar_t%2F1.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Fnum_get%2Fget%2Fwchar_t%2F1.cc?ref=567d4027a3ca0dc36fd0d828925a34a237ad62db", "patch": "@@ -2,7 +2,7 @@\n \n // 2001-11-21 Benjamin Kosnik  <bkoz@redhat.com>\n \n-// Copyright (C) 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2009\n+// Copyright (C) 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2009, 2010\n // Free Software Foundation\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n@@ -63,7 +63,7 @@ void test01()\n   // bool, simple\n   iss.str(L\"1\");\n   iterator_type os_it00 = iss.rdbuf();\n-  iterator_type os_it01 = ng.get(os_it00, 0, iss, err, b1);\n+  ng.get(os_it00, 0, iss, err, b1);\n   VERIFY( b1 == true );\n   VERIFY( err & ios_base::eofbit );\n "}, {"sha": "df1a86dca3f1c56409dce4da8b53c8b7b936d756", "filename": "libstdc++-v3/testsuite/22_locale/num_put/put/char/1.cc", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/567d4027a3ca0dc36fd0d828925a34a237ad62db/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Fnum_put%2Fput%2Fchar%2F1.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/567d4027a3ca0dc36fd0d828925a34a237ad62db/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Fnum_put%2Fput%2Fchar%2F1.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Fnum_put%2Fput%2Fchar%2F1.cc?ref=567d4027a3ca0dc36fd0d828925a34a237ad62db", "patch": "@@ -2,7 +2,8 @@\n \n // 2001-11-19 Benjamin Kosnik  <bkoz@redhat.com>\n \n-// Copyright (C) 2001, 2002, 2003, 2004, 2005, 2009 Free Software Foundation\n+// Copyright (C) 2001, 2002, 2003, 2004, 2005, 2009, 2010\n+// Free Software Foundation\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -61,7 +62,7 @@ void test01()\n \n   // bool, simple\n   iterator_type os_it00 = oss.rdbuf();\n-  iterator_type os_it01 = np.put(os_it00, oss, '+', b1);\n+  np.put(os_it00, oss, '+', b1);\n   result1 = oss.str();\n   VERIFY( result1 == \"1\" );\n "}, {"sha": "01b06d6b5525d2d5002c3c0363cafc76b3d0900e", "filename": "libstdc++-v3/testsuite/22_locale/num_put/put/wchar_t/1.cc", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/567d4027a3ca0dc36fd0d828925a34a237ad62db/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Fnum_put%2Fput%2Fwchar_t%2F1.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/567d4027a3ca0dc36fd0d828925a34a237ad62db/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Fnum_put%2Fput%2Fwchar_t%2F1.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Fnum_put%2Fput%2Fwchar_t%2F1.cc?ref=567d4027a3ca0dc36fd0d828925a34a237ad62db", "patch": "@@ -2,7 +2,7 @@\n \n // 2001-11-19 Benjamin Kosnik  <bkoz@redhat.com>\n \n-// Copyright (C) 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2009\n+// Copyright (C) 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2009, 2010\n // Free Software Foundation\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n@@ -62,7 +62,7 @@ void test01()\n \n   // bool, simple\n   iterator_type os_it00 = oss.rdbuf();\n-  iterator_type os_it01 = np.put(os_it00, oss, L'+', b1);\n+  np.put(os_it00, oss, L'+', b1);\n   result1 = oss.str();\n   VERIFY( result1 == L\"1\" );\n "}, {"sha": "f08cd6f0761b6efe35494bf2c67a64e3d64b1649", "filename": "libstdc++-v3/testsuite/22_locale/time_get/get_date/char/5.cc", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/567d4027a3ca0dc36fd0d828925a34a237ad62db/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Ftime_get%2Fget_date%2Fchar%2F5.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/567d4027a3ca0dc36fd0d828925a34a237ad62db/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Ftime_get%2Fget_date%2Fchar%2F5.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Ftime_get%2Fget_date%2Fchar%2F5.cc?ref=567d4027a3ca0dc36fd0d828925a34a237ad62db", "patch": "@@ -1,6 +1,6 @@\n // 2006-06-16  Paolo Carlini  <pcarlini@suse.de>\n \n-// Copyright (C) 2006, 2009 Free Software Foundation\n+// Copyright (C) 2006, 2009, 2010 Free Software Foundation\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -48,7 +48,7 @@ void test01()\n   const time_get_type& tg = use_facet<time_get_type>(iss.getloc());\n \n   const string str0 = \"1\";\n-  iter_type end0 = tg.get_date(str0.begin(), str0.end(), iss, err, &tm0);\n+  tg.get_date(str0.begin(), str0.end(), iss, err, &tm0);\n   VERIFY( err == (failbit | eofbit) );\n   VERIFY( tm0.tm_year == 0 );\n   VERIFY( tm0.tm_mon == 0 );"}, {"sha": "9110884fae91efcfcdef0723923b27f6f94ac889", "filename": "libstdc++-v3/testsuite/22_locale/time_get/get_date/wchar_t/5.cc", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/567d4027a3ca0dc36fd0d828925a34a237ad62db/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Ftime_get%2Fget_date%2Fwchar_t%2F5.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/567d4027a3ca0dc36fd0d828925a34a237ad62db/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Ftime_get%2Fget_date%2Fwchar_t%2F5.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Ftime_get%2Fget_date%2Fwchar_t%2F5.cc?ref=567d4027a3ca0dc36fd0d828925a34a237ad62db", "patch": "@@ -1,6 +1,6 @@\n // 2006-06-16  Paolo Carlini  <pcarlini@suse.de>\n \n-// Copyright (C) 2006, 2009 Free Software Foundation\n+// Copyright (C) 2006, 2009, 2010 Free Software Foundation\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -48,7 +48,7 @@ void test01()\n   const time_get_type& tg = use_facet<time_get_type>(iss.getloc());\n \n   const wstring str0 = L\"1\";\n-  iter_type end0 = tg.get_date(str0.begin(), str0.end(), iss, err, &tm0);\n+  tg.get_date(str0.begin(), str0.end(), iss, err, &tm0);\n   VERIFY( err == (failbit | eofbit) );\n   VERIFY( tm0.tm_year == 0 );\n   VERIFY( tm0.tm_mon == 0 );"}, {"sha": "c1966fe4b9545c2ed1ba68e3837aa2b1996ccac6", "filename": "libstdc++-v3/testsuite/22_locale/time_get/get_monthname/char/5.cc", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/567d4027a3ca0dc36fd0d828925a34a237ad62db/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Ftime_get%2Fget_monthname%2Fchar%2F5.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/567d4027a3ca0dc36fd0d828925a34a237ad62db/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Ftime_get%2Fget_monthname%2Fchar%2F5.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Ftime_get%2Fget_monthname%2Fchar%2F5.cc?ref=567d4027a3ca0dc36fd0d828925a34a237ad62db", "patch": "@@ -1,6 +1,6 @@\n // 2006-06-16  Paolo Carlini  <pcarlini@suse.de>\n \n-// Copyright (C) 2006, 2009 Free Software Foundation\n+// Copyright (C) 2006, 2009, 2010 Free Software Foundation\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -48,7 +48,7 @@ void test01()\n   const time_get_type& tg = use_facet<time_get_type>(iss.getloc());\n \n   const string str0 = \"S\";\n-  iter_type end0 = tg.get_monthname(str0.begin(), str0.end(), iss, err, &tm0);\n+  tg.get_monthname(str0.begin(), str0.end(), iss, err, &tm0);\n   VERIFY( err == (failbit | eofbit) );\n   VERIFY( tm0.tm_mon == 0 );\n "}, {"sha": "192d19c945be438730d240d0e4e8dfb8c5bbcd77", "filename": "libstdc++-v3/testsuite/22_locale/time_get/get_monthname/wchar_t/5.cc", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/567d4027a3ca0dc36fd0d828925a34a237ad62db/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Ftime_get%2Fget_monthname%2Fwchar_t%2F5.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/567d4027a3ca0dc36fd0d828925a34a237ad62db/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Ftime_get%2Fget_monthname%2Fwchar_t%2F5.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Ftime_get%2Fget_monthname%2Fwchar_t%2F5.cc?ref=567d4027a3ca0dc36fd0d828925a34a237ad62db", "patch": "@@ -1,6 +1,6 @@\n // 2006-06-16  Paolo Carlini  <pcarlini@suse.de>\n \n-// Copyright (C) 2006, 2009 Free Software Foundation\n+// Copyright (C) 2006, 2009, 2010 Free Software Foundation\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -48,7 +48,7 @@ void test01()\n   const time_get_type& tg = use_facet<time_get_type>(iss.getloc());\n \n   const wstring str0 = L\"S\";\n-  iter_type end0 = tg.get_monthname(str0.begin(), str0.end(), iss, err, &tm0);\n+  tg.get_monthname(str0.begin(), str0.end(), iss, err, &tm0);\n   VERIFY( err == (failbit | eofbit) );\n   VERIFY( tm0.tm_mon == 0 );\n "}, {"sha": "b099b6e7ba4f9340b825bffc7aaf11255b13c17f", "filename": "libstdc++-v3/testsuite/22_locale/time_get/get_time/char/5.cc", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/567d4027a3ca0dc36fd0d828925a34a237ad62db/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Ftime_get%2Fget_time%2Fchar%2F5.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/567d4027a3ca0dc36fd0d828925a34a237ad62db/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Ftime_get%2Fget_time%2Fchar%2F5.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Ftime_get%2Fget_time%2Fchar%2F5.cc?ref=567d4027a3ca0dc36fd0d828925a34a237ad62db", "patch": "@@ -1,6 +1,6 @@\n // 2006-06-16  Paolo Carlini  <pcarlini@suse.de>\n \n-// Copyright (C) 2006, 2009 Free Software Foundation\n+// Copyright (C) 2006, 2009, 2010 Free Software Foundation\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -49,7 +49,7 @@ void test01()\n   const time_get_type& tg = use_facet<time_get_type>(iss.getloc());\n \n   const string str0 = \"1\";\n-  iter_type end0 = tg.get_time(str0.begin(), str0.end(), iss, err, &tm0);\n+  tg.get_time(str0.begin(), str0.end(), iss, err, &tm0);\n   VERIFY( err == (failbit | eofbit) );\n   VERIFY( tm0.tm_sec == 0 );\n   VERIFY( tm0.tm_min == 0 );"}, {"sha": "ffce43218cd3e7258d46c0962c62e6357addafe8", "filename": "libstdc++-v3/testsuite/22_locale/time_get/get_time/wchar_t/5.cc", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/567d4027a3ca0dc36fd0d828925a34a237ad62db/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Ftime_get%2Fget_time%2Fwchar_t%2F5.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/567d4027a3ca0dc36fd0d828925a34a237ad62db/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Ftime_get%2Fget_time%2Fwchar_t%2F5.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Ftime_get%2Fget_time%2Fwchar_t%2F5.cc?ref=567d4027a3ca0dc36fd0d828925a34a237ad62db", "patch": "@@ -1,6 +1,6 @@\n // 2006-06-16  Paolo Carlini  <pcarlini@suse.de>\n \n-// Copyright (C) 2006, 2009 Free Software Foundation\n+// Copyright (C) 2006, 2009, 2010 Free Software Foundation\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -49,7 +49,7 @@ void test01()\n   const time_get_type& tg = use_facet<time_get_type>(iss.getloc());\n \n   const wstring str0 = L\"1\";\n-  iter_type end0 = tg.get_time(str0.begin(), str0.end(), iss, err, &tm0);\n+  tg.get_time(str0.begin(), str0.end(), iss, err, &tm0);\n   VERIFY( err == (failbit | eofbit) );\n   VERIFY( tm0.tm_sec == 0 );\n   VERIFY( tm0.tm_min == 0 );"}, {"sha": "4157a08b560c31ad44c922b3bcc721dd71d33a56", "filename": "libstdc++-v3/testsuite/22_locale/time_get/get_weekday/char/5.cc", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/567d4027a3ca0dc36fd0d828925a34a237ad62db/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Ftime_get%2Fget_weekday%2Fchar%2F5.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/567d4027a3ca0dc36fd0d828925a34a237ad62db/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Ftime_get%2Fget_weekday%2Fchar%2F5.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Ftime_get%2Fget_weekday%2Fchar%2F5.cc?ref=567d4027a3ca0dc36fd0d828925a34a237ad62db", "patch": "@@ -1,6 +1,6 @@\n // 2006-06-16  Paolo Carlini  <pcarlini@suse.de>\n \n-// Copyright (C) 2006, 2009 Free Software Foundation\n+// Copyright (C) 2006, 2009, 2010 Free Software Foundation\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -49,7 +49,7 @@ void test01()\n   const time_get_type& tg = use_facet<time_get_type>(iss.getloc());\n \n   const string str0 = \"T\";\n-  iter_type end0 = tg.get_weekday(str0.begin(), str0.end(), iss, err, &tm0);\n+  tg.get_weekday(str0.begin(), str0.end(), iss, err, &tm0);\n   VERIFY( err == (failbit | eofbit) );\n   VERIFY( tm1.tm_wday == 0 );\n "}, {"sha": "02664bf0b3d5595e6e42248eb0ecc58644118eb0", "filename": "libstdc++-v3/testsuite/22_locale/time_get/get_weekday/wchar_t/5.cc", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/567d4027a3ca0dc36fd0d828925a34a237ad62db/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Ftime_get%2Fget_weekday%2Fwchar_t%2F5.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/567d4027a3ca0dc36fd0d828925a34a237ad62db/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Ftime_get%2Fget_weekday%2Fwchar_t%2F5.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Ftime_get%2Fget_weekday%2Fwchar_t%2F5.cc?ref=567d4027a3ca0dc36fd0d828925a34a237ad62db", "patch": "@@ -1,6 +1,6 @@\n // 2006-06-16  Paolo Carlini  <pcarlini@suse.de>\n \n-// Copyright (C) 2006, 2009 Free Software Foundation\n+// Copyright (C) 2006, 2009, 2010 Free Software Foundation\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -49,7 +49,7 @@ void test01()\n   const time_get_type& tg = use_facet<time_get_type>(iss.getloc());\n \n   const wstring str0 = L\"T\";\n-  iter_type end0 = tg.get_weekday(str0.begin(), str0.end(), iss, err, &tm0);\n+  tg.get_weekday(str0.begin(), str0.end(), iss, err, &tm0);\n   VERIFY( err == (failbit | eofbit) );\n   VERIFY( tm1.tm_wday == 0 );\n "}, {"sha": "f3a47bf87b5a8f0f27719553f59c9f48616978f1", "filename": "libstdc++-v3/testsuite/22_locale/time_get/get_year/char/5.cc", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/567d4027a3ca0dc36fd0d828925a34a237ad62db/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Ftime_get%2Fget_year%2Fchar%2F5.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/567d4027a3ca0dc36fd0d828925a34a237ad62db/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Ftime_get%2Fget_year%2Fchar%2F5.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Ftime_get%2Fget_year%2Fchar%2F5.cc?ref=567d4027a3ca0dc36fd0d828925a34a237ad62db", "patch": "@@ -1,6 +1,6 @@\n // 2006-06-16  Paolo Carlini  <pcarlini@suse.de>\n \n-// Copyright (C) 2006, 2009  Free Software Foundation\n+// Copyright (C) 2006, 2009, 2010  Free Software Foundation\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -49,7 +49,7 @@ void test01()\n   const time_get_type& tg = use_facet<time_get_type>(iss.getloc());\n \n   const string str0 = \"1\";\n-  iter_type end0 = tg.get_year(str0.begin(), str0.end(), iss, err, &tm0);\n+  tg.get_year(str0.begin(), str0.end(), iss, err, &tm0);\n   VERIFY( err == (failbit | eofbit) );\n   VERIFY( tm0.tm_year == 0 );\n "}, {"sha": "c932bebdb64d4828a2cb449745490e774d55f888", "filename": "libstdc++-v3/testsuite/22_locale/time_get/get_year/wchar_t/5.cc", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/567d4027a3ca0dc36fd0d828925a34a237ad62db/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Ftime_get%2Fget_year%2Fwchar_t%2F5.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/567d4027a3ca0dc36fd0d828925a34a237ad62db/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Ftime_get%2Fget_year%2Fwchar_t%2F5.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Ftime_get%2Fget_year%2Fwchar_t%2F5.cc?ref=567d4027a3ca0dc36fd0d828925a34a237ad62db", "patch": "@@ -1,6 +1,6 @@\n // 2006-06-16  Paolo Carlini  <pcarlini@suse.de>\n \n-// Copyright (C) 2006, 2009  Free Software Foundation\n+// Copyright (C) 2006, 2009, 2010  Free Software Foundation\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -49,7 +49,7 @@ void test01()\n   const time_get_type& tg = use_facet<time_get_type>(iss.getloc());\n \n   const wstring str0 = L\"1\";\n-  iter_type end0 = tg.get_year(str0.begin(), str0.end(), iss, err, &tm0);\n+  tg.get_year(str0.begin(), str0.end(), iss, err, &tm0);\n   VERIFY( err == (failbit | eofbit) );\n   VERIFY( tm0.tm_year == 0 );\n "}, {"sha": "32388cc6f0b0e378b276914aec7aa3fe36811d43", "filename": "libstdc++-v3/testsuite/22_locale/time_put/put/char/1.cc", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/567d4027a3ca0dc36fd0d828925a34a237ad62db/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Ftime_put%2Fput%2Fchar%2F1.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/567d4027a3ca0dc36fd0d828925a34a237ad62db/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Ftime_put%2Fput%2Fchar%2F1.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Ftime_put%2Fput%2Fchar%2F1.cc?ref=567d4027a3ca0dc36fd0d828925a34a237ad62db", "patch": "@@ -1,6 +1,6 @@\n // 2001-09-17 Benjamin Kosnik  <bkoz@redhat.com>\n \n-// Copyright (C) 2001, 2002, 2003, 2004, 2005, 2006, 2009\n+// Copyright (C) 2001, 2002, 2003, 2004, 2005, 2006, 2009, 2010\n // Free Software Foundation\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n@@ -48,27 +48,27 @@ void test01()\n   // put(iter_type s, ios_base& str, char_type fill, const tm* t,\n   //\t char format, char modifier = 0) const;\n   oss.str(empty);\n-  iterator_type os_it01 = tim_put.put(oss.rdbuf(), oss, '*', &time1, 'a');\n+  tim_put.put(oss.rdbuf(), oss, '*', &time1, 'a');\n   string result1 = oss.str();\n   VERIFY( result1 == \"Sun\" );\n \n   oss.str(empty);\n-  iterator_type os_it21 = tim_put.put(oss.rdbuf(), oss, '*', &time1, 'x');\n+  tim_put.put(oss.rdbuf(), oss, '*', &time1, 'x');\n   string result21 = oss.str(); // \"04/04/71\"\n   VERIFY( result21 == \"04/04/71\" );\n \n   oss.str(empty);\n-  iterator_type os_it22 = tim_put.put(oss.rdbuf(), oss, '*', &time1, 'X');\n+  tim_put.put(oss.rdbuf(), oss, '*', &time1, 'X');\n   string result22 = oss.str(); // \"12:00:00\"\n   VERIFY( result22 == \"12:00:00\" );\n   \n   oss.str(empty);\n-  iterator_type os_it31 = tim_put.put(oss.rdbuf(), oss, '*', &time1, 'x', 'E');\n+  tim_put.put(oss.rdbuf(), oss, '*', &time1, 'x', 'E');\n   string result31 = oss.str(); // \"04/04/71\"\n   VERIFY( result31 == \"04/04/71\" );\n \n   oss.str(empty);\n-  iterator_type os_it32 = tim_put.put(oss.rdbuf(), oss, '*', &time1, 'X', 'E');\n+  tim_put.put(oss.rdbuf(), oss, '*', &time1, 'X', 'E');\n   string result32 = oss.str(); // \"12:00:00\"\n   VERIFY( result32 == \"12:00:00\" );\n }"}, {"sha": "77f2972ca6e575ebe7e2da4f82346ffba527a7e3", "filename": "libstdc++-v3/testsuite/22_locale/time_put/put/char/17038.cc", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/567d4027a3ca0dc36fd0d828925a34a237ad62db/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Ftime_put%2Fput%2Fchar%2F17038.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/567d4027a3ca0dc36fd0d828925a34a237ad62db/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Ftime_put%2Fput%2Fchar%2F17038.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Ftime_put%2Fput%2Fchar%2F17038.cc?ref=567d4027a3ca0dc36fd0d828925a34a237ad62db", "patch": "@@ -2,7 +2,7 @@\n \n // 2004-08-25  Paolo Carlini  <pcarlini@suse.de>\n \n-// Copyright (C) 2004, 2005, 2006, 2009 Free Software Foundation\n+// Copyright (C) 2004, 2005, 2006, 2009, 2010 Free Software Foundation\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -47,7 +47,7 @@ void test01()\n   const time_put<char>& tim_put =\n     use_facet<time_put<char> >(oss.getloc()); \n \n-  iterator_type os_it01 = tim_put.put(oss.rdbuf(), oss, '*', &time1, 'c');\n+  tim_put.put(oss.rdbuf(), oss, '*', &time1, 'c');\n   string result1 = oss.str();\n \n   char time_buffer[128];"}, {"sha": "255636cbd2c64706c191ec06ff8f63b696de2962", "filename": "libstdc++-v3/testsuite/22_locale/time_put/put/char/2.cc", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/567d4027a3ca0dc36fd0d828925a34a237ad62db/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Ftime_put%2Fput%2Fchar%2F2.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/567d4027a3ca0dc36fd0d828925a34a237ad62db/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Ftime_put%2Fput%2Fchar%2F2.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Ftime_put%2Fput%2Fchar%2F2.cc?ref=567d4027a3ca0dc36fd0d828925a34a237ad62db", "patch": "@@ -2,7 +2,7 @@\n \n // 2001-09-17 Benjamin Kosnik  <bkoz@redhat.com>\n \n-// Copyright (C) 2001, 2002, 2003, 2004, 2005, 2006, 2009\n+// Copyright (C) 2001, 2002, 2003, 2004, 2005, 2006, 2009, 2010\n // Free Software Foundation\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n@@ -47,27 +47,27 @@ void test02()\n   oss.imbue(loc_de);\n   const time_put<char>& tim_put = use_facet<time_put<char> >(oss.getloc()); \n \n-  iterator_type os_it02 = tim_put.put(oss.rdbuf(), oss, '*', &time1, 'a');\n+  tim_put.put(oss.rdbuf(), oss, '*', &time1, 'a');\n   string result2 = oss.str();\n   VERIFY( result2 == \"Son\" || result2 == \"So\" );\n \n   oss.str(empty); // \"%d.%m.%Y\"\n-  iterator_type os_it23 = tim_put.put(oss.rdbuf(), oss, '*', &time1, 'x');\n+  tim_put.put(oss.rdbuf(), oss, '*', &time1, 'x');\n   string result23 = oss.str(); // \"04.04.1971\"\n   VERIFY( result23 == \"04.04.1971\" );\n \n   oss.str(empty); // \"%T\"\n-  iterator_type os_it24 = tim_put.put(oss.rdbuf(), oss, '*', &time1, 'X');\n+  tim_put.put(oss.rdbuf(), oss, '*', &time1, 'X');\n   string result24 = oss.str(); // \"12:00:00\"\n   VERIFY( result24 == \"12:00:00\" );\n \n   oss.str(empty);\n-  iterator_type os_it33 = tim_put.put(oss.rdbuf(), oss, '*', &time1, 'x', 'E');\n+  tim_put.put(oss.rdbuf(), oss, '*', &time1, 'x', 'E');\n   string result33 = oss.str(); // \"04.04.1971\"\n   VERIFY( result33 == \"04.04.1971\" );\n \n   oss.str(empty);\n-  iterator_type os_it34 = tim_put.put(oss.rdbuf(), oss, '*', &time1, 'X', 'E');\n+  tim_put.put(oss.rdbuf(), oss, '*', &time1, 'X', 'E');\n   string result34 = oss.str(); // \"12:00:00\"\n   VERIFY( result34 == \"12:00:00\" );\n }"}, {"sha": "6b9b330aef7dc979aa2ab5aa63540238ecc7c894", "filename": "libstdc++-v3/testsuite/22_locale/time_put/put/char/3.cc", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/567d4027a3ca0dc36fd0d828925a34a237ad62db/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Ftime_put%2Fput%2Fchar%2F3.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/567d4027a3ca0dc36fd0d828925a34a237ad62db/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Ftime_put%2Fput%2Fchar%2F3.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Ftime_put%2Fput%2Fchar%2F3.cc?ref=567d4027a3ca0dc36fd0d828925a34a237ad62db", "patch": "@@ -2,7 +2,7 @@\n \n // 2001-09-17 Benjamin Kosnik  <bkoz@redhat.com>\n \n-// Copyright (C) 2001, 2002, 2003, 2004, 2005, 2006, 2009\n+// Copyright (C) 2001, 2002, 2003, 2004, 2005, 2006, 2009, 2010\n // Free Software Foundation\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n@@ -47,27 +47,27 @@ void test03()\n   oss.imbue(loc_hk);\n   const time_put<char>& tim_put = use_facet<time_put<char> >(oss.getloc()); \n \n-  iterator_type os_it03 = tim_put.put(oss.rdbuf(), oss, '*', &time1, 'a');\n+  tim_put.put(oss.rdbuf(), oss, '*', &time1, 'a');\n   string result3 = oss.str();\n   VERIFY( result3 == \"Sun\" );\n \n   oss.str(empty); // \"%A, %B %d, %Y\"\n-  iterator_type os_it25 = tim_put.put(oss.rdbuf(), oss, '*', &time1, 'x');\n+  tim_put.put(oss.rdbuf(), oss, '*', &time1, 'x');\n   string result25 = oss.str(); // \"Sunday, April 04, 1971\"\n   VERIFY( result25 == \"Sunday, April 04, 1971\" );\n \n   oss.str(empty); // \"%I:%M:%S %Z\"\n-  iterator_type os_it26 = tim_put.put(oss.rdbuf(), oss, '*', &time1, 'X');\n+  tim_put.put(oss.rdbuf(), oss, '*', &time1, 'X');\n   string result26 = oss.str(); // \"12:00:00 CET\" or whatever timezone\n   VERIFY( result26.find(\"12:00:00\") != string::npos );\n \n   oss.str(empty);\n-  iterator_type os_it35 = tim_put.put(oss.rdbuf(), oss, '*', &time1, 'x', 'E');\n+  tim_put.put(oss.rdbuf(), oss, '*', &time1, 'x', 'E');\n   string result35 = oss.str(); // \"Sunday, April 04, 1971\"\n   VERIFY( result35 == \"Sunday, April 04, 1971\" );\n \n   oss.str(empty);\n-  iterator_type os_it36 = tim_put.put(oss.rdbuf(), oss, '*', &time1, 'X', 'E');\n+  tim_put.put(oss.rdbuf(), oss, '*', &time1, 'X', 'E');\n   string result36 = oss.str(); // \"12:00:00 CET\"\n   VERIFY( result36.find(\"12:00:00\") != string::npos );\n }"}, {"sha": "21b9725c6b9903af43bd323464b05652a2c81120", "filename": "libstdc++-v3/testsuite/22_locale/time_put/put/char/4.cc", "status": "modified", "additions": 7, "deletions": 6, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/567d4027a3ca0dc36fd0d828925a34a237ad62db/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Ftime_put%2Fput%2Fchar%2F4.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/567d4027a3ca0dc36fd0d828925a34a237ad62db/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Ftime_put%2Fput%2Fchar%2F4.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Ftime_put%2Fput%2Fchar%2F4.cc?ref=567d4027a3ca0dc36fd0d828925a34a237ad62db", "patch": "@@ -2,7 +2,8 @@\n \n // 2001-09-17 Benjamin Kosnik  <bkoz@redhat.com>\n \n-// Copyright (C) 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009\n+// Copyright (C) 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008,\n+// 2009, 2010\n // Free Software Foundation\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n@@ -46,27 +47,27 @@ void test04()\n   ostringstream oss;\n   oss.imbue(loc_es);\n   const time_put<char>& tim_put = use_facet<time_put<char> >(oss.getloc()); \n-  iterator_type os_it04 = tim_put.put(oss.rdbuf(), oss, '*', &time1, 'a');\n+  tim_put.put(oss.rdbuf(), oss, '*', &time1, 'a');\n   string result4 = oss.str();\n   VERIFY( result4 == \"dom\" );\n \n   oss.str(empty); // \"%d/%m/%y\"\n-  iterator_type os_it27 = tim_put.put(oss.rdbuf(), oss, '*', &time1, 'x');\n+  tim_put.put(oss.rdbuf(), oss, '*', &time1, 'x');\n   string result27 = oss.str(); // \"04/04/71\"\n   VERIFY( result27 == \"04/04/71\" );\n \n   oss.str(empty); // \"%T\"\n-  iterator_type os_it28 = tim_put.put(oss.rdbuf(), oss, '*', &time1, 'X');\n+  tim_put.put(oss.rdbuf(), oss, '*', &time1, 'X');\n   string result28 = oss.str(); // \"12:00:00\"\n   VERIFY( result28 == \"12:00:00\" );\n \n   oss.str(empty);\n-  iterator_type os_it37 = tim_put.put(oss.rdbuf(), oss, '*', &time1, 'x', 'E');\n+  tim_put.put(oss.rdbuf(), oss, '*', &time1, 'x', 'E');\n   string result37 = oss.str(); // \"04/04/71\"\n   VERIFY( result37 == \"04/04/71\" );\n \n   oss.str(empty);\n-  iterator_type os_it38 = tim_put.put(oss.rdbuf(), oss, '*', &time1, 'X', 'E');\n+  tim_put.put(oss.rdbuf(), oss, '*', &time1, 'X', 'E');\n   string result38 = oss.str(); // \"12:00:00\"\n   VERIFY( result38 == \"12:00:00\" );\n }"}, {"sha": "96ce947c2aff06398b56a54ed0fa8cde0e8037f0", "filename": "libstdc++-v3/testsuite/22_locale/time_put/put/char/5.cc", "status": "modified", "additions": 5, "deletions": 6, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/567d4027a3ca0dc36fd0d828925a34a237ad62db/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Ftime_put%2Fput%2Fchar%2F5.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/567d4027a3ca0dc36fd0d828925a34a237ad62db/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Ftime_put%2Fput%2Fchar%2F5.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Ftime_put%2Fput%2Fchar%2F5.cc?ref=567d4027a3ca0dc36fd0d828925a34a237ad62db", "patch": "@@ -1,6 +1,6 @@\n // 2001-09-17 Benjamin Kosnik  <bkoz@redhat.com>\n \n-// Copyright (C) 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2009\n+// Copyright (C) 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2009, 2010\n // Free Software Foundation\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n@@ -48,13 +48,12 @@ void test05()\n \n   // 2\n   oss.str(empty);\n-  iterator_type os_it05 = tim_put.put(oss.rdbuf(), oss, '*', &time1, \n-\t\t\t\t      date, date + traits::length(date));\n+  tim_put.put(oss.rdbuf(), oss, '*', &time1, \n+\t      date, date + traits::length(date));\n   string result5 = oss.str();\n   VERIFY( result5 == \"Sunday, the second of April\");\n-  iterator_type os_it06 = tim_put.put(oss.rdbuf(), oss, '*', &time1,\n-\t\t\t\t      date_ex,\n-\t\t\t\t      date_ex + traits::length(date_ex));\n+  tim_put.put(oss.rdbuf(), oss, '*', &time1,\n+\t      date_ex, date_ex + traits::length(date_ex));\n   string result6 = oss.str();\n   VERIFY( result6 != result5 );\n }"}, {"sha": "9e144ffcb035eec4d4b3d628075d0b4f5b645f71", "filename": "libstdc++-v3/testsuite/22_locale/time_put/put/char/6.cc", "status": "modified", "additions": 5, "deletions": 6, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/567d4027a3ca0dc36fd0d828925a34a237ad62db/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Ftime_put%2Fput%2Fchar%2F6.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/567d4027a3ca0dc36fd0d828925a34a237ad62db/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Ftime_put%2Fput%2Fchar%2F6.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Ftime_put%2Fput%2Fchar%2F6.cc?ref=567d4027a3ca0dc36fd0d828925a34a237ad62db", "patch": "@@ -2,7 +2,7 @@\n \n // 2001-09-17 Benjamin Kosnik  <bkoz@redhat.com>\n \n-// Copyright (C) 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2009\n+// Copyright (C) 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2009, 2010\n // Free Software Foundation\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n@@ -50,13 +50,12 @@ void test06()\n   oss.imbue(loc_de);\n   const time_put<char>& tim_put = use_facet<time_put<char> >(oss.getloc()); \n \n-  iterator_type os_it07 = tim_put.put(oss.rdbuf(), oss, '*', &time1, \n-\t\t\t\t      date, date + traits::length(date));\n+  tim_put.put(oss.rdbuf(), oss, '*', &time1, \n+\t      date, date + traits::length(date));\n   string result7 = oss.str();\n   VERIFY( result7 == \"Sonntag, the second of April\");\n-  iterator_type os_it08 = tim_put.put(oss.rdbuf(), oss, '*', &time1, \n-\t\t\t\t      date_ex,\n-\t\t\t\t      date_ex + traits::length(date_ex));\n+  tim_put.put(oss.rdbuf(), oss, '*', &time1, \n+\t      date_ex, date_ex + traits::length(date_ex));\n   string result8 = oss.str();\n   VERIFY( result8 != result7 );\n }"}, {"sha": "67f1aa580f6937178a66848db9dbaeb5f04dc0e1", "filename": "libstdc++-v3/testsuite/22_locale/time_put/put/char/7.cc", "status": "modified", "additions": 5, "deletions": 6, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/567d4027a3ca0dc36fd0d828925a34a237ad62db/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Ftime_put%2Fput%2Fchar%2F7.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/567d4027a3ca0dc36fd0d828925a34a237ad62db/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Ftime_put%2Fput%2Fchar%2F7.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Ftime_put%2Fput%2Fchar%2F7.cc?ref=567d4027a3ca0dc36fd0d828925a34a237ad62db", "patch": "@@ -2,7 +2,7 @@\n \n // 2001-09-17 Benjamin Kosnik  <bkoz@redhat.com>\n \n-// Copyright (C) 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2009\n+// Copyright (C) 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2009, 2010\n // Free Software Foundation\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n@@ -50,13 +50,12 @@ void test07()\n   oss.imbue(loc_hk);\n   const time_put<char>& tim_put = use_facet<time_put<char> >(oss.getloc()); \n \n-  iterator_type os_it09 = tim_put.put(oss.rdbuf(), oss, '*', &time1, \n-\t\t\t\t      date, date + traits::length(date));\n+  tim_put.put(oss.rdbuf(), oss, '*', &time1, \n+\t      date, date + traits::length(date));\n   string result9 = oss.str();\n   VERIFY( result9 == \"Sunday, the second of April\");\n-  iterator_type os_it10 = tim_put.put(oss.rdbuf(), oss, '*', &time1, \n-\t\t\t\t      date_ex,\n-\t\t\t\t      date_ex + traits::length(date_ex));\n+  tim_put.put(oss.rdbuf(), oss, '*', &time1, \n+\t      date_ex, date_ex + traits::length(date_ex));\n   string result10 = oss.str();\n   VERIFY( result10 != result9 );\n }"}, {"sha": "c3fc4d83acdb83b96290797027c9a3d55abe5308", "filename": "libstdc++-v3/testsuite/22_locale/time_put/put/char/8.cc", "status": "modified", "additions": 5, "deletions": 6, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/567d4027a3ca0dc36fd0d828925a34a237ad62db/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Ftime_put%2Fput%2Fchar%2F8.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/567d4027a3ca0dc36fd0d828925a34a237ad62db/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Ftime_put%2Fput%2Fchar%2F8.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Ftime_put%2Fput%2Fchar%2F8.cc?ref=567d4027a3ca0dc36fd0d828925a34a237ad62db", "patch": "@@ -2,7 +2,7 @@\n \n // 2001-09-17 Benjamin Kosnik  <bkoz@redhat.com>\n \n-// Copyright (C) 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2009\n+// Copyright (C) 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2009, 2010\n // Free Software Foundation\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n@@ -49,13 +49,12 @@ void test08()\n   ostringstream oss;\n   oss.imbue(loc_fr);\n   const time_put<char>& tim_put = use_facet<time_put<char> >(oss.getloc()); \n-  iterator_type os_it11 = tim_put.put(oss.rdbuf(), oss, '*', &time1, \n-\t\t\t\t      date, date + traits::length(date));\n+  tim_put.put(oss.rdbuf(), oss, '*', &time1, \n+\t      date, date + traits::length(date));\n   string result11 = oss.str();\n   VERIFY( result11 == \"dimanche, the second of avril\");\n-  iterator_type os_it12 = tim_put.put(oss.rdbuf(), oss, '*', &time1, \n-\t\t\t\t      date_ex,\n-\t\t\t\t      date_ex + traits::length(date_ex));\n+  tim_put.put(oss.rdbuf(), oss, '*', &time1, \n+\t      date_ex, date_ex + traits::length(date_ex));\n   string result12 = oss.str();\n   VERIFY( result12 != result11 );\n }"}, {"sha": "2325975319915c9688cdc6b4b47e71601132e4fa", "filename": "libstdc++-v3/testsuite/22_locale/time_put/put/wchar_t/1.cc", "status": "modified", "additions": 8, "deletions": 7, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/567d4027a3ca0dc36fd0d828925a34a237ad62db/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Ftime_put%2Fput%2Fwchar_t%2F1.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/567d4027a3ca0dc36fd0d828925a34a237ad62db/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Ftime_put%2Fput%2Fwchar_t%2F1.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Ftime_put%2Fput%2Fwchar_t%2F1.cc?ref=567d4027a3ca0dc36fd0d828925a34a237ad62db", "patch": "@@ -1,6 +1,6 @@\n // 2001-09-17 Benjamin Kosnik  <bkoz@redhat.com>\n \n-// Copyright (C) 2001, 2002, 2003, 2004, 2005, 2006, 2009\n+// Copyright (C) 2001, 2002, 2003, 2004, 2005, 2006, 2009, 2010\n // Free Software Foundation\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n@@ -43,34 +43,35 @@ void test01()\n   const wstring empty;\n   wostringstream oss;\n   oss.imbue(loc_c);\n-  const time_put<wchar_t>& tim_put = use_facet<time_put<wchar_t> >(oss.getloc()); \n+  const time_put<wchar_t>& tim_put\n+    = use_facet<time_put<wchar_t> >(oss.getloc()); \n \n   // 1\n   // iter_type \n   // put(iter_type s, ios_base& str, char_type fill, const tm* t,\n   //\t char format, char modifier = 0) const;\n   oss.str(empty);\n-  iterator_type os_it01 = tim_put.put(oss.rdbuf(), oss, L'*', &time1, 'a');\n+  tim_put.put(oss.rdbuf(), oss, L'*', &time1, 'a');\n   wstring result1 = oss.str();\n   VERIFY( result1 == L\"Sun\" );\n \n   oss.str(empty);\n-  iterator_type os_it21 = tim_put.put(oss.rdbuf(), oss, L'*', &time1, 'x');\n+  tim_put.put(oss.rdbuf(), oss, L'*', &time1, 'x');\n   wstring result21 = oss.str(); // \"04/04/71\"\n   VERIFY( result21 == L\"04/04/71\" );\n \n   oss.str(empty);\n-  iterator_type os_it22 = tim_put.put(oss.rdbuf(), oss, L'*', &time1, 'X');\n+  tim_put.put(oss.rdbuf(), oss, L'*', &time1, 'X');\n   wstring result22 = oss.str(); // \"12:00:00\"\n   VERIFY( result22 == L\"12:00:00\" );\n \n   oss.str(empty);\n-  iterator_type os_it31 = tim_put.put(oss.rdbuf(), oss, L'*', &time1, 'x', 'E');\n+  tim_put.put(oss.rdbuf(), oss, L'*', &time1, 'x', 'E');\n   wstring result31 = oss.str(); // \"04/04/71\"\n   VERIFY( result31 == L\"04/04/71\" );\n \n   oss.str(empty);\n-  iterator_type os_it32 = tim_put.put(oss.rdbuf(), oss, L'*', &time1, 'X', 'E');\n+  tim_put.put(oss.rdbuf(), oss, L'*', &time1, 'X', 'E');\n   wstring result32 = oss.str(); // \"12:00:00\"\n   VERIFY( result32 == L\"12:00:00\" );\n }"}, {"sha": "088acf2f3f446e1ccbafa115d9577010ed1f2a06", "filename": "libstdc++-v3/testsuite/22_locale/time_put/put/wchar_t/17038.cc", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/567d4027a3ca0dc36fd0d828925a34a237ad62db/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Ftime_put%2Fput%2Fwchar_t%2F17038.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/567d4027a3ca0dc36fd0d828925a34a237ad62db/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Ftime_put%2Fput%2Fwchar_t%2F17038.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Ftime_put%2Fput%2Fwchar_t%2F17038.cc?ref=567d4027a3ca0dc36fd0d828925a34a237ad62db", "patch": "@@ -2,7 +2,7 @@\n \n // 2004-08-25  Paolo Carlini  <pcarlini@suse.de>\n \n-// Copyright (C) 2004, 2005, 2006, 2009 Free Software Foundation\n+// Copyright (C) 2004, 2005, 2006, 2009, 2010 Free Software Foundation\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -47,7 +47,7 @@ void test01()\n   const time_put<wchar_t>& tim_put =\n     use_facet<time_put<wchar_t> >(oss.getloc()); \n \n-  iterator_type os_it01 = tim_put.put(oss.rdbuf(), oss, L'*', &time1, 'c');\n+  tim_put.put(oss.rdbuf(), oss, L'*', &time1, 'c');\n   wstring result1 = oss.str();\n \n   wchar_t time_buffer[128];"}, {"sha": "7ead914b1666f08b0a733f8bfb3282d1f85caed0", "filename": "libstdc++-v3/testsuite/22_locale/time_put/put/wchar_t/2.cc", "status": "modified", "additions": 8, "deletions": 7, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/567d4027a3ca0dc36fd0d828925a34a237ad62db/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Ftime_put%2Fput%2Fwchar_t%2F2.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/567d4027a3ca0dc36fd0d828925a34a237ad62db/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Ftime_put%2Fput%2Fwchar_t%2F2.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Ftime_put%2Fput%2Fwchar_t%2F2.cc?ref=567d4027a3ca0dc36fd0d828925a34a237ad62db", "patch": "@@ -2,7 +2,7 @@\n \n // 2001-09-17 Benjamin Kosnik  <bkoz@redhat.com>\n \n-// Copyright (C) 2001, 2002, 2003, 2004, 2005, 2006, 2009\n+// Copyright (C) 2001, 2002, 2003, 2004, 2005, 2006, 2009, 2010\n // Free Software Foundation\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n@@ -45,29 +45,30 @@ void test02()\n   const wstring empty;\n   wostringstream oss;\n   oss.imbue(loc_de);\n-  const time_put<wchar_t>& tim_put = use_facet<time_put<wchar_t> >(oss.getloc()); \n+  const time_put<wchar_t>& tim_put\n+    = use_facet<time_put<wchar_t> >(oss.getloc()); \n \n-  iterator_type os_it02 = tim_put.put(oss.rdbuf(), oss, L'*', &time1, 'a');\n+  tim_put.put(oss.rdbuf(), oss, L'*', &time1, 'a');\n   wstring result2 = oss.str();\n   VERIFY( result2 == L\"Son\" || result2 == L\"So\" );\n \n   oss.str(empty); // \"%d.%m.%Y\"\n-  iterator_type os_it23 = tim_put.put(oss.rdbuf(), oss, L'*', &time1, 'x');\n+  tim_put.put(oss.rdbuf(), oss, L'*', &time1, 'x');\n   wstring result23 = oss.str(); // \"04.04.1971\"\n   VERIFY( result23 == L\"04.04.1971\" );\n \n   oss.str(empty); // \"%T\"\n-  iterator_type os_it24 = tim_put.put(oss.rdbuf(), oss, L'*', &time1, 'X');\n+  tim_put.put(oss.rdbuf(), oss, L'*', &time1, 'X');\n   wstring result24 = oss.str(); // \"12:00:00\"\n   VERIFY( result24 == L\"12:00:00\" );\n \n   oss.str(empty);\n-  iterator_type os_it33 = tim_put.put(oss.rdbuf(), oss, L'*', &time1, 'x', 'E');\n+  tim_put.put(oss.rdbuf(), oss, L'*', &time1, 'x', 'E');\n   wstring result33 = oss.str(); // \"04.04.1971\"\n   VERIFY( result33 == L\"04.04.1971\" );\n \n   oss.str(empty);\n-  iterator_type os_it34 = tim_put.put(oss.rdbuf(), oss, L'*', &time1, 'X', 'E');\n+  tim_put.put(oss.rdbuf(), oss, L'*', &time1, 'X', 'E');\n   wstring result34 = oss.str(); // \"12:00:00\"\n   VERIFY( result34 == L\"12:00:00\" );\n }"}, {"sha": "6e099d64a76190335ad9c26eaae2b7057b2347ae", "filename": "libstdc++-v3/testsuite/22_locale/time_put/put/wchar_t/3.cc", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/567d4027a3ca0dc36fd0d828925a34a237ad62db/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Ftime_put%2Fput%2Fwchar_t%2F3.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/567d4027a3ca0dc36fd0d828925a34a237ad62db/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Ftime_put%2Fput%2Fwchar_t%2F3.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Ftime_put%2Fput%2Fwchar_t%2F3.cc?ref=567d4027a3ca0dc36fd0d828925a34a237ad62db", "patch": "@@ -2,7 +2,7 @@\n \n // 2001-09-17 Benjamin Kosnik  <bkoz@redhat.com>\n \n-// Copyright (C) 2001, 2002, 2003, 2004, 2005, 2006, 2009\n+// Copyright (C) 2001, 2002, 2003, 2004, 2005, 2006, 2009, 2010\n // Free Software Foundation\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n@@ -45,32 +45,32 @@ void test03()\n   const wstring empty;\n   wostringstream oss;\n   oss.imbue(loc_hk);\n-  const time_put<wchar_t>& tim_put = use_facet<time_put<wchar_t> >(oss.getloc()); \n+  const time_put<wchar_t>& tim_put\n+    = use_facet<time_put<wchar_t> >(oss.getloc()); \n \n-  iterator_type os_it03 = tim_put.put(oss.rdbuf(), oss, L'*', &time1, 'a');\n+  tim_put.put(oss.rdbuf(), oss, L'*', &time1, 'a');\n   wstring result3 = oss.str();\n   VERIFY( result3 == L\"Sun\" );\n \n   oss.str(empty); // \"%A, %B %d, %Y\"\n-  iterator_type os_it25 = tim_put.put(oss.rdbuf(), oss, L'*', &time1, 'x');\n+  tim_put.put(oss.rdbuf(), oss, L'*', &time1, 'x');\n   wstring result25 = oss.str(); // \"Sunday, April 04, 1971\"\n   VERIFY( result25 == L\"Sunday, April 04, 1971\" );\n \n   oss.str(empty); // \"%I:%M:%S %Z\"\n-  iterator_type os_it26 = tim_put.put(oss.rdbuf(), oss, L'*', &time1, 'X');\n+  tim_put.put(oss.rdbuf(), oss, L'*', &time1, 'X');\n   wstring result26 = oss.str(); // \"12:00:00 CET\" or whatever timezone\n   VERIFY( result26.find(L\"12:00:00\") != wstring::npos );\n \n   oss.str(empty);\n-  iterator_type os_it35 = tim_put.put(oss.rdbuf(), oss, L'*', &time1, 'x', 'E');\n+  tim_put.put(oss.rdbuf(), oss, L'*', &time1, 'x', 'E');\n   wstring result35 = oss.str(); // \"Sunday, April 04, 1971\"\n   VERIFY( result35 == L\"Sunday, April 04, 1971\" );\n \n   oss.str(empty);\n-  iterator_type os_it36 = tim_put.put(oss.rdbuf(), oss, L'*', &time1, 'X', 'E');\n+  tim_put.put(oss.rdbuf(), oss, L'*', &time1, 'X', 'E');\n   wstring result36 = oss.str(); // \"12:00:00 CET\"\n   VERIFY( result36.find(L\"12:00:00\") != wstring::npos );\n-\n }\n \n int main()"}, {"sha": "0ae2a1f88986b3af3409d285dc7dc66999173829", "filename": "libstdc++-v3/testsuite/22_locale/time_put/put/wchar_t/4.cc", "status": "modified", "additions": 10, "deletions": 7, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/567d4027a3ca0dc36fd0d828925a34a237ad62db/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Ftime_put%2Fput%2Fwchar_t%2F4.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/567d4027a3ca0dc36fd0d828925a34a237ad62db/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Ftime_put%2Fput%2Fwchar_t%2F4.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Ftime_put%2Fput%2Fwchar_t%2F4.cc?ref=567d4027a3ca0dc36fd0d828925a34a237ad62db", "patch": "@@ -2,7 +2,8 @@\n \n // 2001-09-17 Benjamin Kosnik  <bkoz@redhat.com>\n \n-// Copyright (C) 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009\n+// Copyright (C) 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008,\n+// 2009, 2010\n // Free Software Foundation\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n@@ -45,28 +46,30 @@ void test04()\n   const wstring empty;\n   wostringstream oss;\n   oss.imbue(loc_es);\n-  const time_put<wchar_t>& tim_put = use_facet<time_put<wchar_t> >(oss.getloc()); \n-  iterator_type os_it04 = tim_put.put(oss.rdbuf(), oss, L'*', &time1, 'a');\n+  const time_put<wchar_t>& tim_put\n+    = use_facet<time_put<wchar_t> >(oss.getloc()); \n+  \n+  tim_put.put(oss.rdbuf(), oss, L'*', &time1, 'a');\n   wstring result4 = oss.str();\n   VERIFY( result4 == L\"dom\" );\n \n   oss.str(empty); // \"%d/%m/%y\"\n-  iterator_type os_it27 = tim_put.put(oss.rdbuf(), oss, L'*', &time1, 'x');\n+  tim_put.put(oss.rdbuf(), oss, L'*', &time1, 'x');\n   wstring result27 = oss.str(); // \"04/04/71\"\n   VERIFY( result27 == L\"04/04/71\" );\n \n   oss.str(empty); // \"%T\"\n-  iterator_type os_it28 = tim_put.put(oss.rdbuf(), oss, L'*', &time1, 'X');\n+  tim_put.put(oss.rdbuf(), oss, L'*', &time1, 'X');\n   wstring result28 = oss.str(); // \"12:00:00\"\n   VERIFY( result28 == L\"12:00:00\" );\n \n   oss.str(empty);\n-  iterator_type os_it37 = tim_put.put(oss.rdbuf(), oss, L'*', &time1, 'x', 'E');\n+  tim_put.put(oss.rdbuf(), oss, L'*', &time1, 'x', 'E');\n   wstring result37 = oss.str(); // \"04/04/71\"\n   VERIFY( result37 == L\"04/04/71\" );\n \n   oss.str(empty);\n-  iterator_type os_it38 = tim_put.put(oss.rdbuf(), oss, L'*', &time1, 'X', 'E');\n+  tim_put.put(oss.rdbuf(), oss, L'*', &time1, 'X', 'E');\n   wstring result38 = oss.str(); // \"12:00:00\"\n   VERIFY( result38 == L\"12:00:00\" );\n }"}, {"sha": "1a355e0a5145999114715966861f23baa04ed7be", "filename": "libstdc++-v3/testsuite/22_locale/time_put/put/wchar_t/5.cc", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/567d4027a3ca0dc36fd0d828925a34a237ad62db/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Ftime_put%2Fput%2Fwchar_t%2F5.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/567d4027a3ca0dc36fd0d828925a34a237ad62db/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Ftime_put%2Fput%2Fwchar_t%2F5.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Ftime_put%2Fput%2Fwchar_t%2F5.cc?ref=567d4027a3ca0dc36fd0d828925a34a237ad62db", "patch": "@@ -1,6 +1,6 @@\n // 2001-09-17 Benjamin Kosnik  <bkoz@redhat.com>\n \n-// Copyright (C) 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2009\n+// Copyright (C) 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2009, 2010\n // Free Software Foundation\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n@@ -46,17 +46,17 @@ void test05()\n   const wstring empty;\n   wostringstream oss;\n   oss.imbue(loc_c);\n-  const time_put<wchar_t>& tim_put = use_facet<time_put<wchar_t> >(oss.getloc()); \n+  const time_put<wchar_t>& tim_put\n+    = use_facet<time_put<wchar_t> >(oss.getloc()); \n \n   // 2\n   oss.str(empty);\n-  iterator_type os_it05 = tim_put.put(oss.rdbuf(), oss, L'*', &time1, \n-\t\t\t\t      date, date + traits::length(date));\n+  tim_put.put(oss.rdbuf(), oss, L'*', &time1, \n+\t      date, date + traits::length(date));\n   wstring result5 = oss.str();\n   VERIFY( result5 == L\"Sunday, the second of April\");\n-  iterator_type os_it06 = tim_put.put(oss.rdbuf(), oss, L'*', &time1,\n-\t\t\t\t      date_ex,\n-\t\t\t\t      date_ex + traits::length(date_ex));\n+  tim_put.put(oss.rdbuf(), oss, L'*', &time1,\n+\t      date_ex, date_ex + traits::length(date_ex));\n   wstring result6 = oss.str();\n   VERIFY( result6 != result5 );\n }"}, {"sha": "dedac7b78fd9ea9fd1f897fef419ec4739b52e0f", "filename": "libstdc++-v3/testsuite/22_locale/time_put/put/wchar_t/6.cc", "status": "modified", "additions": 7, "deletions": 6, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/567d4027a3ca0dc36fd0d828925a34a237ad62db/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Ftime_put%2Fput%2Fwchar_t%2F6.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/567d4027a3ca0dc36fd0d828925a34a237ad62db/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Ftime_put%2Fput%2Fwchar_t%2F6.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Ftime_put%2Fput%2Fwchar_t%2F6.cc?ref=567d4027a3ca0dc36fd0d828925a34a237ad62db", "patch": "@@ -2,7 +2,7 @@\n \n // 2001-09-17 Benjamin Kosnik  <bkoz@redhat.com>\n \n-// Copyright (C) 2001, 2002, 2003, 2004, 2005, 2006, 2009\n+// Copyright (C) 2001, 2002, 2003, 2004, 2005, 2006, 2009, 2010\n // Free Software Foundation\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n@@ -48,14 +48,15 @@ void test06()\n   const wstring empty;\n   wostringstream oss;\n   oss.imbue(loc_de);\n-  const time_put<wchar_t>& tim_put = use_facet<time_put<wchar_t> >(oss.getloc()); \n+  const time_put<wchar_t>& tim_put\n+    = use_facet<time_put<wchar_t> >(oss.getloc()); \n \n-  iterator_type os_it07 = tim_put.put(oss.rdbuf(), oss, L'*', &time1, \n-\t\t\t\t      date, date + traits::length(date));\n+  tim_put.put(oss.rdbuf(), oss, L'*', &time1, \n+\t      date, date + traits::length(date));\n   wstring result7 = oss.str();\n   VERIFY( result7 == L\"Sonntag, the second of April\");\n-  iterator_type os_it08 = tim_put.put(oss.rdbuf(), oss, L'*', &time1, \n-\t\t\t\t      date_ex, date_ex + traits::length(date));\n+  tim_put.put(oss.rdbuf(), oss, L'*', &time1, \n+\t      date_ex, date_ex + traits::length(date));\n   wstring result8 = oss.str();\n   VERIFY( result8 != result7 );\n }"}, {"sha": "5f0926c88d0b0dd02d86f536b7601121e69dea25", "filename": "libstdc++-v3/testsuite/22_locale/time_put/put/wchar_t/7.cc", "status": "modified", "additions": 7, "deletions": 6, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/567d4027a3ca0dc36fd0d828925a34a237ad62db/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Ftime_put%2Fput%2Fwchar_t%2F7.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/567d4027a3ca0dc36fd0d828925a34a237ad62db/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Ftime_put%2Fput%2Fwchar_t%2F7.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Ftime_put%2Fput%2Fwchar_t%2F7.cc?ref=567d4027a3ca0dc36fd0d828925a34a237ad62db", "patch": "@@ -2,7 +2,7 @@\n \n // 2001-09-17 Benjamin Kosnik  <bkoz@redhat.com>\n \n-// Copyright (C) 2001, 2002, 2003, 2004, 2005, 2006, 2009\n+// Copyright (C) 2001, 2002, 2003, 2004, 2005, 2006, 2009, 2010\n // Free Software Foundation\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n@@ -48,14 +48,15 @@ void test07()\n   const wstring empty;\n   wostringstream oss;\n   oss.imbue(loc_hk);\n-  const time_put<wchar_t>& tim_put = use_facet<time_put<wchar_t> >(oss.getloc()); \n+  const time_put<wchar_t>& tim_put\n+    = use_facet<time_put<wchar_t> >(oss.getloc()); \n \n-  iterator_type os_it09 = tim_put.put(oss.rdbuf(), oss, L'*', &time1, \n-\t\t\t\t      date, date + traits::length(date));\n+  tim_put.put(oss.rdbuf(), oss, L'*', &time1, \n+\t      date, date + traits::length(date));\n   wstring result9 = oss.str();\n   VERIFY( result9 == L\"Sunday, the second of April\");\n-  iterator_type os_it10 = tim_put.put(oss.rdbuf(), oss, L'*', &time1, \n-\t\t\t\t      date_ex, date_ex + traits::length(date));\n+  tim_put.put(oss.rdbuf(), oss, L'*', &time1, \n+\t      date_ex, date_ex + traits::length(date));\n   wstring result10 = oss.str();\n   VERIFY( result10 != result9 );\n }"}, {"sha": "09311f4c2c83d4a734648aad95cc28b912ef70f6", "filename": "libstdc++-v3/testsuite/22_locale/time_put/put/wchar_t/8.cc", "status": "modified", "additions": 8, "deletions": 6, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/567d4027a3ca0dc36fd0d828925a34a237ad62db/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Ftime_put%2Fput%2Fwchar_t%2F8.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/567d4027a3ca0dc36fd0d828925a34a237ad62db/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Ftime_put%2Fput%2Fwchar_t%2F8.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Ftime_put%2Fput%2Fwchar_t%2F8.cc?ref=567d4027a3ca0dc36fd0d828925a34a237ad62db", "patch": "@@ -2,7 +2,7 @@\n \n // 2001-09-17 Benjamin Kosnik  <bkoz@redhat.com>\n \n-// Copyright (C) 2001, 2002, 2003, 2004, 2005, 2006, 2009\n+// Copyright (C) 2001, 2002, 2003, 2004, 2005, 2006, 2009, 2010\n // Free Software Foundation\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n@@ -48,13 +48,15 @@ void test08()\n   const wstring empty;\n   wostringstream oss;\n   oss.imbue(loc_fr);\n-  const time_put<wchar_t>& tim_put = use_facet<time_put<wchar_t> >(oss.getloc()); \n-  iterator_type os_it11 = tim_put.put(oss.rdbuf(), oss, L'*', &time1, \n-\t\t\t\t      date, date + traits::length(date));\n+  const time_put<wchar_t>& tim_put\n+    = use_facet<time_put<wchar_t> >(oss.getloc()); \n+  \n+  tim_put.put(oss.rdbuf(), oss, L'*', &time1, \n+\t      date, date + traits::length(date));\n   wstring result11 = oss.str();\n   VERIFY( result11 == L\"dimanche, the second of avril\");\n-  iterator_type os_it12 = tim_put.put(oss.rdbuf(), oss, L'*', &time1, \n-\t\t\t\t      date_ex, date_ex + traits::length(date));\n+  tim_put.put(oss.rdbuf(), oss, L'*', &time1, \n+\t      date_ex, date_ex + traits::length(date));\n   wstring result12 = oss.str();\n   VERIFY( result12 != result11 );\n }"}, {"sha": "4f464372124dd0b85dd487002992a3e1d9f12806", "filename": "libstdc++-v3/testsuite/23_containers/list/pthread5.cc", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/567d4027a3ca0dc36fd0d828925a34a237ad62db/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Flist%2Fpthread5.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/567d4027a3ca0dc36fd0d828925a34a237ad62db/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Flist%2Fpthread5.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Flist%2Fpthread5.cc?ref=567d4027a3ca0dc36fd0d828925a34a237ad62db", "patch": "@@ -2,7 +2,7 @@\n // Adpated from libstdc++/5464 submitted by jjessel@amadeus.net\n // Jean-Francois JESSEL (Amadeus SAS Development) \n //\n-// Copyright (C) 2002, 2003, 2004, 2005, 2006, 2007, 2009\n+// Copyright (C) 2002, 2003, 2004, 2005, 2006, 2007, 2009, 2010\n // Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n@@ -99,7 +99,7 @@ main ()\n #endif\n \n   pthread_attr_t tattr;\n-  int ret = pthread_attr_init (&tattr);\n+  int ret __attribute__((unused)) = pthread_attr_init (&tattr);\n #ifdef _POSIX_THREAD_PRIORITY_SCHEDULING\n   ret = pthread_attr_setscope(&tattr, PTHREAD_SCOPE_SYSTEM);\n #endif"}, {"sha": "9186a621ea765d23dde49d7972e0673c15198856", "filename": "libstdc++-v3/testsuite/23_containers/map/dr130.cc", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/567d4027a3ca0dc36fd0d828925a34a237ad62db/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmap%2Fdr130.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/567d4027a3ca0dc36fd0d828925a34a237ad62db/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmap%2Fdr130.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmap%2Fdr130.cc?ref=567d4027a3ca0dc36fd0d828925a34a237ad62db", "patch": "@@ -1,7 +1,7 @@\n // { dg-options \"-std=gnu++0x\" }\n // 2008-07-22  Edward Smith-Rowland  <3dw4rd@verizon.net>\n //\n-// Copyright (C) 2009 Free Software Foundation, Inc.\n+// Copyright (C) 2009, 2010 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -34,7 +34,7 @@ test01()\n   typedef map<int, int>::value_type value_type;\n   typedef pair<iterator, bool> insert_return_type;\n \n-  insert_return_type irt0 = m0.insert(value_type(1, 1));\n+  m0.insert(value_type(1, 1));\n   insert_return_type irt1 = m0.insert(value_type(2, 2));\n   insert_return_type irt2 = m0.insert(value_type(3, 3));\n \n@@ -58,7 +58,7 @@ test02()\n   typedef pair<iterator, bool> insert_return_type;\n \n   insert_return_type irt0 = m0.insert(value_type(1, 1));\n-  insert_return_type irt1 = m0.insert(value_type(2, 2));\n+  m0.insert(value_type(2, 2));\n   insert_return_type irt2 = m0.insert(value_type(3, 3));\n   insert_return_type irt3 = m0.insert(value_type(4, 4));\n "}, {"sha": "0c21b25f9002cc0199e02d55c3974072aaeacb55", "filename": "libstdc++-v3/testsuite/23_containers/priority_queue/members/7161.cc", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/567d4027a3ca0dc36fd0d828925a34a237ad62db/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fpriority_queue%2Fmembers%2F7161.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/567d4027a3ca0dc36fd0d828925a34a237ad62db/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fpriority_queue%2Fmembers%2F7161.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fpriority_queue%2Fmembers%2F7161.cc?ref=567d4027a3ca0dc36fd0d828925a34a237ad62db", "patch": "@@ -1,6 +1,6 @@\n // 2002-06-28 pme\n \n-// Copyright (C) 2002, 2004, 2005, 2009 Free Software Foundation, Inc.\n+// Copyright (C) 2002, 2004, 2005, 2009, 2010 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -28,12 +28,10 @@ test03()\n {\n   int data[] = {1, 2, 3};\n   std::priority_queue<int> pq;\n-  std::size_t size = pq.size();\n \n   for (int i = 0; i < 3; ++i)\n     pq.push(data[i]);\n \n-  size = pq.size();\n   pq.top();\n   for (int i = 0; i < 2; ++i)\n     pq.pop();"}, {"sha": "1dac5628d3701d93515a6103be9f6b7a590c6e0d", "filename": "libstdc++-v3/testsuite/23_containers/set/dr130.cc", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/567d4027a3ca0dc36fd0d828925a34a237ad62db/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fset%2Fdr130.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/567d4027a3ca0dc36fd0d828925a34a237ad62db/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fset%2Fdr130.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fset%2Fdr130.cc?ref=567d4027a3ca0dc36fd0d828925a34a237ad62db", "patch": "@@ -1,7 +1,7 @@\n // { dg-options \"-std=gnu++0x\" }\n // 2008-07-22  Edward Smith-Rowland  <3dw4rd@verizon.net>\n //\n-// Copyright (C) 2009 Free Software Foundation, Inc.\n+// Copyright (C) 2009, 2010 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -33,7 +33,7 @@ test01()\n   typedef set<int>::const_iterator const_iterator;\n   typedef pair<iterator, bool> insert_return_type;\n \n-  insert_return_type irt0 = s0.insert(1);\n+  s0.insert(1);\n   insert_return_type irt1 = s0.insert(2);\n   insert_return_type irt2 = s0.insert(3);\n \n@@ -56,7 +56,7 @@ test02()\n   typedef pair<iterator, bool> insert_return_type;\n \n   insert_return_type irt0 = s0.insert(1);\n-  insert_return_type irt1 = s0.insert(2);\n+  s0.insert(2);\n   insert_return_type irt2 = s0.insert(3);\n   insert_return_type irt3 = s0.insert(4);\n "}, {"sha": "2c967ac2778e5278dee0beec7dac683d92b02124", "filename": "libstdc++-v3/testsuite/24_iterators/back_insert_iterator/2.cc", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/567d4027a3ca0dc36fd0d828925a34a237ad62db/libstdc%2B%2B-v3%2Ftestsuite%2F24_iterators%2Fback_insert_iterator%2F2.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/567d4027a3ca0dc36fd0d828925a34a237ad62db/libstdc%2B%2B-v3%2Ftestsuite%2F24_iterators%2Fback_insert_iterator%2F2.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F24_iterators%2Fback_insert_iterator%2F2.cc?ref=567d4027a3ca0dc36fd0d828925a34a237ad62db", "patch": "@@ -1,6 +1,7 @@\n // 2001-06-21  Benjamin Kosnik  <bkoz@redhat.com>\n \n-// Copyright (C) 2001, 2002, 2004, 2005, 2009 Free Software Foundation, Inc.\n+// Copyright (C) 2001, 2002, 2004, 2005, 2009, 2010\n+// Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -27,6 +28,7 @@ void test02()\n   typedef std::back_insert_iterator<std::list<int> > iterator_type;\n   std::list<int> li;\n   iterator_type it = std::back_inserter(li);\n+  it = it; // Suppress unused warning.\n }\n \n int main() "}, {"sha": "e72723764cbdbda4dd511870dbdd50a204928c75", "filename": "libstdc++-v3/testsuite/24_iterators/front_insert_iterator/2.cc", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/567d4027a3ca0dc36fd0d828925a34a237ad62db/libstdc%2B%2B-v3%2Ftestsuite%2F24_iterators%2Ffront_insert_iterator%2F2.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/567d4027a3ca0dc36fd0d828925a34a237ad62db/libstdc%2B%2B-v3%2Ftestsuite%2F24_iterators%2Ffront_insert_iterator%2F2.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F24_iterators%2Ffront_insert_iterator%2F2.cc?ref=567d4027a3ca0dc36fd0d828925a34a237ad62db", "patch": "@@ -1,6 +1,6 @@\n // 2001-06-21  Benjamin Kosnik  <bkoz@redhat.com>\n \n-// Copyright (C) 2001, 2004, 2005, 2009 Free Software Foundation, Inc.\n+// Copyright (C) 2001, 2004, 2005, 2009, 2010 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -27,6 +27,7 @@ void test02()\n   typedef std::front_insert_iterator<std::list<int> > iterator_type;\n   std::list<int> li;\n   iterator_type it = std::front_inserter(li);\n+  it = it; // Suppress unused warning.\n }\n \n int main() "}, {"sha": "ac949307e09479068949aa1d6e74e1e753d100d1", "filename": "libstdc++-v3/testsuite/24_iterators/insert_iterator/2.cc", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/567d4027a3ca0dc36fd0d828925a34a237ad62db/libstdc%2B%2B-v3%2Ftestsuite%2F24_iterators%2Finsert_iterator%2F2.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/567d4027a3ca0dc36fd0d828925a34a237ad62db/libstdc%2B%2B-v3%2Ftestsuite%2F24_iterators%2Finsert_iterator%2F2.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F24_iterators%2Finsert_iterator%2F2.cc?ref=567d4027a3ca0dc36fd0d828925a34a237ad62db", "patch": "@@ -1,6 +1,6 @@\n // 2001-06-21  Benjamin Kosnik  <bkoz@redhat.com>\n \n-// Copyright (C) 2001, 2004, 2005, 2009 Free Software Foundation, Inc.\n+// Copyright (C) 2001, 2004, 2005, 2009, 2010 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -30,6 +30,8 @@ void test02()\n   std::list<int>::iterator liit = li.begin();\n   iterator_type it01(li, liit);\n   iterator_type it02 = std::inserter(li, liit);\n+  it01 = it01; // Suppress unused warnings.\n+  it02 = it02;\n }\n \n int main() "}, {"sha": "0e99d51d2102db28701762a3d10d97de828c9bab", "filename": "libstdc++-v3/testsuite/25_algorithms/minmax/3.cc", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/567d4027a3ca0dc36fd0d828925a34a237ad62db/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Fminmax%2F3.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/567d4027a3ca0dc36fd0d828925a34a237ad62db/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Fminmax%2F3.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Fminmax%2F3.cc?ref=567d4027a3ca0dc36fd0d828925a34a237ad62db", "patch": "@@ -2,7 +2,7 @@\n \n // 2008-09-16  Chris Fairles  <chris.fairles@gmail.com>\n \n-// Copyright (C) 2008, 2009 Free Software Foundation, Inc.\n+// Copyright (C) 2008, 2009, 2010 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -41,8 +41,7 @@ void test01()\n {\n   bool test __attribute__((unused)) = true;\n \n-  std::pair<int, int> z = std::minmax({1, 2, 3, 4, 5, 6, 7, 8},\n-\t\t\t\t      compare_counter());\n+  std::minmax({1, 2, 3, 4, 5, 6, 7, 8}, compare_counter());\n \n   // If N is the number of arguments in the minmax function call, \n   // 25.3.7 specifies that at most 3N/2 comparisons are allowed."}, {"sha": "dc05a2b19b4ddaf8a1a6f04a145bb2017c82e70a", "filename": "libstdc++-v3/testsuite/26_numerics/complex/complex_value.cc", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/567d4027a3ca0dc36fd0d828925a34a237ad62db/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Fcomplex%2Fcomplex_value.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/567d4027a3ca0dc36fd0d828925a34a237ad62db/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Fcomplex%2Fcomplex_value.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Fcomplex%2Fcomplex_value.cc?ref=567d4027a3ca0dc36fd0d828925a34a237ad62db", "patch": "@@ -3,7 +3,7 @@\n // 2000-11-20\n // Benjamin Kosnik bkoz@redhat.com\n \n-// Copyright (C) 2000, 2003, 2004, 2009 Free Software Foundation, Inc.\n+// Copyright (C) 2000, 2003, 2004, 2009, 2010 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -34,27 +34,27 @@ void test01()\n  complex_type a(cd1, cd2);\n  double d;\n  d = a.real();\n- VERIFY( d == cd1);\n+ VERIFY( d == cd1 );\n \n  d = a.imag();\n- VERIFY(d == cd2);\n+ VERIFY( d == cd2 );\n \n  complex_type c(cd1, cd2);\n  double d6 = abs(c);\n- VERIFY( d6 >= 0);\n+ VERIFY( d6 >= 0 );\n \n  double d7 = arg(c);\n  double d8 = atan2(c.imag(), c.real());\n- VERIFY( d7 == d8);\n+ VERIFY( d7 == d8 );\n \n  double d9 = norm(c);\n  double d10 = d6 * d6;\n- VERIFY(d9 - d10 == 0);\n+ VERIFY( d9 - d10 == 0 );\n \n- complex_type e = conj(c);\n+ complex_type e __attribute__((unused)) = conj(c);\n  \n  complex_type f = polar(c.imag(), 0.0);\n- VERIFY(f.real() != 0);\n+ VERIFY( f.real() != 0 );\n }\n \n "}, {"sha": "3f4b8ba26e195810f2c038e929a558cb5733d7aa", "filename": "libstdc++-v3/testsuite/26_numerics/headers/cmath/c99_classification_macros_c++.cc", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/567d4027a3ca0dc36fd0d828925a34a237ad62db/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Fheaders%2Fcmath%2Fc99_classification_macros_c%2B%2B.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/567d4027a3ca0dc36fd0d828925a34a237ad62db/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Fheaders%2Fcmath%2Fc99_classification_macros_c%2B%2B.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Fheaders%2Fcmath%2Fc99_classification_macros_c%2B%2B.cc?ref=567d4027a3ca0dc36fd0d828925a34a237ad62db", "patch": "@@ -70,6 +70,7 @@ template <typename _Tp>\n     res = std::islessequal(f1,f2);\n     res = std::islessgreater(f1, f2);\n     res = std::isunordered(f1, f2);\n+    res = res; // Suppress unused warning.\n   }\n #endif\n "}, {"sha": "5819e1a18a7263781d46e1bcb5c7ae0f2e9cbf4e", "filename": "libstdc++-v3/testsuite/26_numerics/headers/cmath/overloads.cc", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/567d4027a3ca0dc36fd0d828925a34a237ad62db/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Fheaders%2Fcmath%2Foverloads.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/567d4027a3ca0dc36fd0d828925a34a237ad62db/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Fheaders%2Fcmath%2Foverloads.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Fheaders%2Fcmath%2Foverloads.cc?ref=567d4027a3ca0dc36fd0d828925a34a237ad62db", "patch": "@@ -1,4 +1,4 @@\n-// Copyright (C) 2003, 2004, 2005, 2006, 2007, 2008, 2009\n+// Copyright (C) 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010\n // Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n@@ -43,4 +43,5 @@ int main()\n   ans = std::sinh(j);\n   ans = std::tan(i);\n   ans = std::tanh(i);\n+  ans = ans; // Suppress unused warnings.\n }"}, {"sha": "6010c536cefe9a35aedad674af54bf79c37eefd6", "filename": "libstdc++-v3/testsuite/26_numerics/random/discard_block_engine/cons/copy.cc", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/567d4027a3ca0dc36fd0d828925a34a237ad62db/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Fdiscard_block_engine%2Fcons%2Fcopy.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/567d4027a3ca0dc36fd0d828925a34a237ad62db/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Fdiscard_block_engine%2Fcons%2Fcopy.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Fdiscard_block_engine%2Fcons%2Fcopy.cc?ref=567d4027a3ca0dc36fd0d828925a34a237ad62db", "patch": "@@ -33,6 +33,7 @@ test01()\n \n   const auto f(e);\n   auto g(f);\n+  g = g; // Suppress unused warning.\n }\n \n int main()"}, {"sha": "111af1964e43de730f40a312a003f90429946458", "filename": "libstdc++-v3/testsuite/26_numerics/random/independent_bits_engine/cons/copy.cc", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/567d4027a3ca0dc36fd0d828925a34a237ad62db/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Findependent_bits_engine%2Fcons%2Fcopy.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/567d4027a3ca0dc36fd0d828925a34a237ad62db/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Findependent_bits_engine%2Fcons%2Fcopy.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Findependent_bits_engine%2Fcons%2Fcopy.cc?ref=567d4027a3ca0dc36fd0d828925a34a237ad62db", "patch": "@@ -34,6 +34,7 @@ test01()\n \n   const auto f(e);\n   auto g(f);\n+  g = g; // Suppress unused warning.\n }\n \n int main()"}, {"sha": "6f5b8d297546abdf401aed02f6be183e4a46777a", "filename": "libstdc++-v3/testsuite/26_numerics/random/linear_congruential_engine/cons/copy.cc", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/567d4027a3ca0dc36fd0d828925a34a237ad62db/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Flinear_congruential_engine%2Fcons%2Fcopy.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/567d4027a3ca0dc36fd0d828925a34a237ad62db/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Flinear_congruential_engine%2Fcons%2Fcopy.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Flinear_congruential_engine%2Fcons%2Fcopy.cc?ref=567d4027a3ca0dc36fd0d828925a34a237ad62db", "patch": "@@ -28,7 +28,8 @@ test01()\n   std::linear_congruential_engine<unsigned long, 48271, 0, 2147483647> e(1);\n \n   const auto f(e);\n-  auto g(f);  \n+  auto g(f);\n+  g = g; // Suppress unused warning.\n }\n \n int main()"}, {"sha": "2b48164fb8336266ecee0341ba7c6f150e84b130", "filename": "libstdc++-v3/testsuite/26_numerics/random/linear_congruential_engine/requirements/constants.cc", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/567d4027a3ca0dc36fd0d828925a34a237ad62db/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Flinear_congruential_engine%2Frequirements%2Fconstants.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/567d4027a3ca0dc36fd0d828925a34a237ad62db/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Flinear_congruential_engine%2Frequirements%2Fconstants.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Flinear_congruential_engine%2Frequirements%2Fconstants.cc?ref=567d4027a3ca0dc36fd0d828925a34a237ad62db", "patch": "@@ -4,7 +4,7 @@\n //\n // 2009-09-29  Paolo Carlini <paolo.carlini@oracle.com>\n //\n-// Copyright (C) 2009 Free Software Foundation, Inc.\n+// Copyright (C) 2009, 2010 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -31,6 +31,7 @@ void test01()\n   p = &lc.increment;\n   p = &lc.modulus;\n   p = &lc.default_seed;\n+  p = p; // Suppress unused warning.\n }\n \n int main()"}, {"sha": "98ea4fe0387ac78ac633b360945dc87eb2fae413", "filename": "libstdc++-v3/testsuite/26_numerics/random/mersenne_twister_engine/cons/copy.cc", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/567d4027a3ca0dc36fd0d828925a34a237ad62db/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Fmersenne_twister_engine%2Fcons%2Fcopy.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/567d4027a3ca0dc36fd0d828925a34a237ad62db/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Fmersenne_twister_engine%2Fcons%2Fcopy.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Fmersenne_twister_engine%2Fcons%2Fcopy.cc?ref=567d4027a3ca0dc36fd0d828925a34a237ad62db", "patch": "@@ -36,6 +36,7 @@ test01()\n \n   const auto f(e);\n   auto g(f);\n+  g = g; // Suppress unused warning.\n }\n \n int main()"}, {"sha": "ad38bec01c0e044f9d005b300ac3ca8078ed9c13", "filename": "libstdc++-v3/testsuite/26_numerics/random/mersenne_twister_engine/requirements/constants.cc", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/567d4027a3ca0dc36fd0d828925a34a237ad62db/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Fmersenne_twister_engine%2Frequirements%2Fconstants.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/567d4027a3ca0dc36fd0d828925a34a237ad62db/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Fmersenne_twister_engine%2Frequirements%2Fconstants.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Fmersenne_twister_engine%2Frequirements%2Fconstants.cc?ref=567d4027a3ca0dc36fd0d828925a34a237ad62db", "patch": "@@ -4,7 +4,7 @@\n //\n // 2009-09-29  Paolo Carlini <paolo.carlini@oracle.com>\n //\n-// Copyright (C) 2009 Free Software Foundation, Inc.\n+// Copyright (C) 2009, 2010 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -41,6 +41,7 @@ void test01()\n   p = &mt.tempering_l;\n   p = &mt.initialization_multiplier;\n   p = &mt.default_seed;\n+  p = p; // Suppress unused warning.\n }\n \n int main()"}, {"sha": "55e38e22f8059ab93304923bdb139702b18eae55", "filename": "libstdc++-v3/testsuite/26_numerics/random/shuffle_order_engine/cons/copy.cc", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/567d4027a3ca0dc36fd0d828925a34a237ad62db/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Fshuffle_order_engine%2Fcons%2Fcopy.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/567d4027a3ca0dc36fd0d828925a34a237ad62db/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Fshuffle_order_engine%2Fcons%2Fcopy.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Fshuffle_order_engine%2Fcons%2Fcopy.cc?ref=567d4027a3ca0dc36fd0d828925a34a237ad62db", "patch": "@@ -33,6 +33,7 @@ test01()\n \n   const auto f(e);\n   auto g(f);\n+  g = g; // Suppress unused warning.\n }\n \n int main()"}, {"sha": "2a96488cd3d3999be9cfb606aba23132c9210f7e", "filename": "libstdc++-v3/testsuite/26_numerics/random/shuffle_order_engine/requirements/constants.cc", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/567d4027a3ca0dc36fd0d828925a34a237ad62db/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Fshuffle_order_engine%2Frequirements%2Fconstants.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/567d4027a3ca0dc36fd0d828925a34a237ad62db/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Fshuffle_order_engine%2Frequirements%2Fconstants.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Fshuffle_order_engine%2Frequirements%2Fconstants.cc?ref=567d4027a3ca0dc36fd0d828925a34a237ad62db", "patch": "@@ -4,7 +4,7 @@\n //\n // 2009-09-29  Paolo Carlini <paolo.carlini@oracle.com>\n //\n-// Copyright (C) 2009 Free Software Foundation, Inc.\n+// Copyright (C) 2009, 2010 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -29,6 +29,7 @@ void test01()\n \n   const void* p = &so.table_size;\n   p = &so.table_size;\n+  p = p; // Suppress unused warning.\n }\n \n int main()"}, {"sha": "2639e87dd4c6af3b13dc9ee918d156dea1b5f36a", "filename": "libstdc++-v3/testsuite/26_numerics/random/subtract_with_carry_engine/cons/copy.cc", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/567d4027a3ca0dc36fd0d828925a34a237ad62db/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Fsubtract_with_carry_engine%2Fcons%2Fcopy.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/567d4027a3ca0dc36fd0d828925a34a237ad62db/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Fsubtract_with_carry_engine%2Fcons%2Fcopy.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Fsubtract_with_carry_engine%2Fcons%2Fcopy.cc?ref=567d4027a3ca0dc36fd0d828925a34a237ad62db", "patch": "@@ -29,6 +29,7 @@ test01()\n \n   const auto f(e);\n   auto g(f);\n+  g = g; // Suppress unused warning.\n }\n \n int main()"}, {"sha": "8c033cd26e35415b64442bb5cf66ae2d6bf63242", "filename": "libstdc++-v3/testsuite/26_numerics/random/subtract_with_carry_engine/requirements/constants.cc", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/567d4027a3ca0dc36fd0d828925a34a237ad62db/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Fsubtract_with_carry_engine%2Frequirements%2Fconstants.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/567d4027a3ca0dc36fd0d828925a34a237ad62db/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Fsubtract_with_carry_engine%2Frequirements%2Fconstants.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Fsubtract_with_carry_engine%2Frequirements%2Fconstants.cc?ref=567d4027a3ca0dc36fd0d828925a34a237ad62db", "patch": "@@ -4,7 +4,7 @@\n //\n // 2009-09-29  Paolo Carlini <paolo.carlini@oracle.com>\n //\n-// Copyright (C) 2009 Free Software Foundation, Inc.\n+// Copyright (C) 2009, 2010 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -31,6 +31,7 @@ void test01()\n   p = &swc.short_lag;\n   p = &swc.long_lag;\n   p = &swc.default_seed;\n+  p = p; // Suppress unused warning.\n }\n \n int main()"}, {"sha": "0357e5de71ef31f376736bf47276ac3f467848bd", "filename": "libstdc++-v3/testsuite/26_numerics/slice_array/array_assignment.cc", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/567d4027a3ca0dc36fd0d828925a34a237ad62db/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Fslice_array%2Farray_assignment.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/567d4027a3ca0dc36fd0d828925a34a237ad62db/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Fslice_array%2Farray_assignment.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Fslice_array%2Farray_assignment.cc?ref=567d4027a3ca0dc36fd0d828925a34a237ad62db", "patch": "@@ -1,6 +1,6 @@\n // 20010613 gdr\n \n-// Copyright (C) 2001, 2002, 2003, 2009 Free Software Foundation, Inc.\n+// Copyright (C) 2001, 2002, 2003, 2009, 2010 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -17,8 +17,6 @@\n // with this library; see the file COPYING3.  If not see\n // <http://www.gnu.org/licenses/>.\n \n-\n-\n // This is DR-253.  Test for accessible assignment-operators.\n #include <valarray>\n #include <testsuite_hooks.h>\n@@ -36,7 +34,7 @@ int main()\n   VERIFY(v[3] == 1 && w[3] == 1);\n   VERIFY(v[6] == 1 && w[6] == 1);\n \n-  std::slice_array<int> t = v[slice(0, 10, 1)];\n+  std::slice_array<int> t __attribute__((unused)) = v[slice(0, 10, 1)];\n   \n   return 0;\n }"}, {"sha": "3bf4353d7e67f526fcb96f1e61c25f94c5b0150c", "filename": "libstdc++-v3/testsuite/27_io/basic_filebuf/seekoff/12790-4.cc", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/567d4027a3ca0dc36fd0d828925a34a237ad62db/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_filebuf%2Fseekoff%2F12790-4.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/567d4027a3ca0dc36fd0d828925a34a237ad62db/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_filebuf%2Fseekoff%2F12790-4.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_filebuf%2Fseekoff%2F12790-4.cc?ref=567d4027a3ca0dc36fd0d828925a34a237ad62db", "patch": "@@ -1,4 +1,4 @@\n-// Copyright (C) 2003, 2005, 2009 Free Software Foundation, Inc.\n+// Copyright (C) 2003, 2005, 2009, 2010 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -47,7 +47,7 @@ void test01()\n   fb.sputc(pod_uchar::from<char>(0xff));\n \n   // Check that seekoff sets the current state during output\n-  traits_type::pos_type pos = fb.pubseekoff(0, ios_base::cur);\n+  fb.pubseekoff(0, ios_base::cur);\n   fb.sputc(pod_uchar::from<char>('a'));\n   fb.sputc(pod_uchar::from<char>(0xff));\n   fb.sputc(pod_uchar::from<char>(0));"}, {"sha": "2488746171999a7943fdce7d1b6c4395cd5a8227", "filename": "libstdc++-v3/testsuite/27_io/basic_filebuf/seekoff/char/1-in.cc", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/567d4027a3ca0dc36fd0d828925a34a237ad62db/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_filebuf%2Fseekoff%2Fchar%2F1-in.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/567d4027a3ca0dc36fd0d828925a34a237ad62db/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_filebuf%2Fseekoff%2Fchar%2F1-in.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_filebuf%2Fseekoff%2Fchar%2F1-in.cc?ref=567d4027a3ca0dc36fd0d828925a34a237ad62db", "patch": "@@ -1,6 +1,6 @@\n // 2001-05-21 Benjamin Kosnik  <bkoz@redhat.com>\n \n-// Copyright (C) 2001, 2002, 2003, 2009 Free Software Foundation, Inc.\n+// Copyright (C) 2001, 2002, 2003, 2009, 2010 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -41,7 +41,7 @@ void test05()\n   typedef filebuf::traits_type \ttraits_type;\n \n   bool test __attribute__((unused)) = true;\n-  streamsize \t\t\tstrmsz_1, strmsz_2;\n+  streamsize \t\t\tstrmsz_1;\n \n   int_type c1;\n   int_type c2;\n@@ -65,7 +65,7 @@ void test05()\n     //beg\n     strmsz_1 = fb.in_avail(); \n     pt_1 = fb.pubseekoff(2, ios_base::beg);\n-    strmsz_2 = fb.in_avail(); \n+    fb.in_avail(); \n     off_1 = off_type(pt_1);\n     VERIFY( off_1 > 0 );\n     c1 = fb.snextc(); //current in pointer +1"}, {"sha": "4dc6d8648be6262f98d83d5befd254fec38e97a4", "filename": "libstdc++-v3/testsuite/27_io/basic_filebuf/seekoff/char/1-io.cc", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/567d4027a3ca0dc36fd0d828925a34a237ad62db/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_filebuf%2Fseekoff%2Fchar%2F1-io.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/567d4027a3ca0dc36fd0d828925a34a237ad62db/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_filebuf%2Fseekoff%2Fchar%2F1-io.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_filebuf%2Fseekoff%2Fchar%2F1-io.cc?ref=567d4027a3ca0dc36fd0d828925a34a237ad62db", "patch": "@@ -1,6 +1,6 @@\n // 2001-05-21 Benjamin Kosnik  <bkoz@redhat.com>\n \n-// Copyright (C) 2001, 2002, 2003, 2009 Free Software Foundation, Inc.\n+// Copyright (C) 2001, 2002, 2003, 2009, 2010 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -41,7 +41,7 @@ void test05()\n   typedef filebuf::off_type \toff_type;\n \n   bool test __attribute__((unused)) = true;\n-  streamsize \t\t\tstrmsz_1, strmsz_2;\n+  streamsize \t\t\tstrmsz_1;\n \n   int_type c1;\n   int_type c2;\n@@ -66,7 +66,7 @@ void test05()\n     //beg\n     strmsz_1 = fb.in_avail(); \n     pt_1 = fb.pubseekoff(2, ios_base::beg);\n-    strmsz_2 = fb.in_avail(); \n+    fb.in_avail(); \n     off_1 = off_type(pt_1);\n     VERIFY( off_1 > 0 );\n     c1 = fb.snextc(); //current in pointer +1"}, {"sha": "8d7ab1dfc11d8f5eaa553564df06e5227966163d", "filename": "libstdc++-v3/testsuite/27_io/basic_filebuf/seekoff/char/1-out.cc", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/567d4027a3ca0dc36fd0d828925a34a237ad62db/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_filebuf%2Fseekoff%2Fchar%2F1-out.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/567d4027a3ca0dc36fd0d828925a34a237ad62db/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_filebuf%2Fseekoff%2Fchar%2F1-out.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_filebuf%2Fseekoff%2Fchar%2F1-out.cc?ref=567d4027a3ca0dc36fd0d828925a34a237ad62db", "patch": "@@ -1,6 +1,6 @@\n // 2001-05-21 Benjamin Kosnik  <bkoz@redhat.com>\n \n-// Copyright (C) 2001, 2002, 2003, 2009 Free Software Foundation, Inc.\n+// Copyright (C) 2001, 2002, 2003, 2009, 2010 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -41,7 +41,7 @@ void test05()\n   typedef filebuf::traits_type \ttraits_type;\n \n   bool test __attribute__((unused)) = true;\n-  streamsize \t\t\tstrmsz_1, strmsz_2;\n+  streamsize \t\t\tstrmsz_1;\n \n   int_type c1;\n   int_type c2;\n@@ -66,7 +66,7 @@ void test05()\n     //beg\n     strmsz_1 = fb.in_avail(); \n     pt_1 = fb.pubseekoff(2, ios_base::beg);\n-    strmsz_2 = fb.in_avail(); \n+    fb.in_avail(); \n     off_1 = off_type(pt_1);\n     VERIFY( off_1 > 0 );\n     c1 = fb.snextc(); //current in pointer +1"}, {"sha": "3a8809da2f68c7f34a441bb8fc9b373aba3937f6", "filename": "libstdc++-v3/testsuite/27_io/basic_filebuf/seekoff/char/2-in.cc", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/567d4027a3ca0dc36fd0d828925a34a237ad62db/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_filebuf%2Fseekoff%2Fchar%2F2-in.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/567d4027a3ca0dc36fd0d828925a34a237ad62db/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_filebuf%2Fseekoff%2Fchar%2F2-in.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_filebuf%2Fseekoff%2Fchar%2F2-in.cc?ref=567d4027a3ca0dc36fd0d828925a34a237ad62db", "patch": "@@ -1,6 +1,6 @@\n // 2001-05-21 Benjamin Kosnik  <bkoz@redhat.com>\n \n-// Copyright (C) 2001, 2002, 2003, 2009 Free Software Foundation, Inc.\n+// Copyright (C) 2001, 2002, 2003, 2009, 2010 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -41,7 +41,7 @@ void test05()\n   typedef filebuf::traits_type \ttraits_type;\n \n   bool test __attribute__((unused)) = true;\n-  streamsize \t\t\tstrmsz_1, strmsz_2;\n+  streamsize \t\t\tstrmsz_1;\n \n   int_type c1;\n   int_type c2;\n@@ -66,7 +66,7 @@ void test05()\n     //beg\n     strmsz_1 = fb.in_avail(); \n     pt_1 = fb.pubseekoff(2, ios_base::beg);\n-    strmsz_2 = fb.in_avail(); \n+    fb.in_avail(); \n     off_1 = off_type(pt_1);\n     VERIFY( off_1 > 0 );\n     c1 = fb.snextc(); //current in pointer +1"}, {"sha": "89fab2aed90e5d96974adcedaef30c1df4966bd3", "filename": "libstdc++-v3/testsuite/27_io/basic_filebuf/seekoff/char/2-io.cc", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/567d4027a3ca0dc36fd0d828925a34a237ad62db/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_filebuf%2Fseekoff%2Fchar%2F2-io.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/567d4027a3ca0dc36fd0d828925a34a237ad62db/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_filebuf%2Fseekoff%2Fchar%2F2-io.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_filebuf%2Fseekoff%2Fchar%2F2-io.cc?ref=567d4027a3ca0dc36fd0d828925a34a237ad62db", "patch": "@@ -1,6 +1,6 @@\n // 2001-05-21 Benjamin Kosnik  <bkoz@redhat.com>\n \n-// Copyright (C) 2001, 2002, 2003, 2009 Free Software Foundation, Inc.\n+// Copyright (C) 2001, 2002, 2003, 2009, 2010 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -41,7 +41,7 @@ void test05()\n   typedef filebuf::off_type \toff_type;\n \n   bool test __attribute__((unused)) = true;\n-  streamsize \t\t\tstrmsz_1, strmsz_2;\n+  streamsize \t\t\tstrmsz_1;\n \n   int_type c1;\n   int_type c2;\n@@ -66,7 +66,7 @@ void test05()\n     //beg\n     strmsz_1 = fb.in_avail(); \n     pt_1 = fb.pubseekoff(2, ios_base::beg);\n-    strmsz_2 = fb.in_avail(); \n+    fb.in_avail(); \n     off_1 = off_type(pt_1);\n     VERIFY( off_1 > 0 );\n     c1 = fb.snextc(); //current in pointer +1"}, {"sha": "b1ad66e8933f2841a83f9c6502acb6eaca8a0444", "filename": "libstdc++-v3/testsuite/27_io/basic_filebuf/seekoff/char/2-out.cc", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/567d4027a3ca0dc36fd0d828925a34a237ad62db/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_filebuf%2Fseekoff%2Fchar%2F2-out.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/567d4027a3ca0dc36fd0d828925a34a237ad62db/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_filebuf%2Fseekoff%2Fchar%2F2-out.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_filebuf%2Fseekoff%2Fchar%2F2-out.cc?ref=567d4027a3ca0dc36fd0d828925a34a237ad62db", "patch": "@@ -1,6 +1,6 @@\n // 2001-05-21 Benjamin Kosnik  <bkoz@redhat.com>\n \n-// Copyright (C) 2001, 2002, 2003, 2009 Free Software Foundation, Inc.\n+// Copyright (C) 2001, 2002, 2003, 2009, 2010 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -41,7 +41,7 @@ void test05()\n   typedef filebuf::traits_type \ttraits_type;\n \n   bool test __attribute__((unused)) = true;\n-  streamsize \t\t\tstrmsz_1, strmsz_2;\n+  streamsize \t\t\tstrmsz_1;\n \n   int_type c1;\n   int_type c2;\n@@ -66,7 +66,7 @@ void test05()\n     //beg\n     strmsz_1 = fb.in_avail(); \n     pt_1 = fb.pubseekoff(2, ios_base::beg);\n-    strmsz_2 = fb.in_avail(); \n+    fb.in_avail(); \n     off_1 = off_type(pt_1);\n     VERIFY( off_1 > 0 );\n     c1 = fb.snextc(); //current in pointer +1"}, {"sha": "fd332b68365b9c127e598b85ad4b555547a7c272", "filename": "libstdc++-v3/testsuite/27_io/basic_filebuf/sgetn/char/2-out.cc", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/567d4027a3ca0dc36fd0d828925a34a237ad62db/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_filebuf%2Fsgetn%2Fchar%2F2-out.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/567d4027a3ca0dc36fd0d828925a34a237ad62db/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_filebuf%2Fsgetn%2Fchar%2F2-out.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_filebuf%2Fsgetn%2Fchar%2F2-out.cc?ref=567d4027a3ca0dc36fd0d828925a34a237ad62db", "patch": "@@ -1,6 +1,6 @@\n // 2001-05-21 Benjamin Kosnik  <bkoz@redhat.com>\n \n-// Copyright (C) 2001, 2002, 2003, 2009 Free Software Foundation, Inc.\n+// Copyright (C) 2001, 2002, 2003, 2009, 2010 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -40,7 +40,7 @@ void test05()\n \n   streamsize \t\t\tstrmsz_1, strmsz_2;\n   char carray2[8192] = \"\";\n-  int_type \t\t\tc2, c4;\n+  int_type \t\t\tc2;\n   \n   // streamsize sgetn(char_type *s, streamsize n)\n   // streamsize xsgetn(char_type *s, streamsize n)\n@@ -63,7 +63,7 @@ void test05()\n     strmsz_2 = fb_02.sgetn(carray2, strmsz_1 + 5);\n     VERIFY( strmsz_1 == -1 );\n     VERIFY( strmsz_2 == 0 );\n-    c4 = fb_02.sgetc(); \n+    fb_02.sgetc(); \n     VERIFY( fb_02.unbuffered() );\n     VERIFY( !fb_02.read_position() );\n   }"}, {"sha": "54a1372b4670d28c99002d1d125d5a71bdc65984", "filename": "libstdc++-v3/testsuite/27_io/basic_filebuf/sungetc/char/1-io.cc", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/567d4027a3ca0dc36fd0d828925a34a237ad62db/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_filebuf%2Fsungetc%2Fchar%2F1-io.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/567d4027a3ca0dc36fd0d828925a34a237ad62db/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_filebuf%2Fsungetc%2Fchar%2F1-io.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_filebuf%2Fsungetc%2Fchar%2F1-io.cc?ref=567d4027a3ca0dc36fd0d828925a34a237ad62db", "patch": "@@ -1,6 +1,6 @@\n // 2001-05-21 Benjamin Kosnik  <bkoz@redhat.com>\n \n-// Copyright (C) 2001, 2002, 2003, 2009 Free Software Foundation, Inc.\n+// Copyright (C) 2001, 2002, 2003, 2009, 2010 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -41,7 +41,7 @@ void test01()\n \n   bool test __attribute__((unused)) = true;\n   streamsize \t\t\tstrmsz_1, strmsz_2;\n-  int_type \t\t\tc1, c2, c3;\n+  int_type \t\t\tc1, c2;\n \n   // int_type sungetc()\n   // if in_cur not avail, return pbackfail(), else decrement and\n@@ -56,7 +56,7 @@ void test01()\n     fb_01.sputc('u');\n     fb_01.sputc('v');\n     fb_01.pubseekoff(-1, std::ios_base::end);\n-    c3 = fb_01.sbumpc();\n+    fb_01.sbumpc();\n     strmsz_1 = fb_01.in_avail();\n     c2 = fb_01.sungetc(); \n     strmsz_2 = fb_01.in_avail();\n@@ -68,7 +68,7 @@ void test01()\n     c1 = fb_01.sgetc(); \n     c2 = fb_01.sungetc();\n     strmsz_2 = fb_01.in_avail(); // 1\n-    c3 = fb_01.sgetc();\n+    fb_01.sgetc();\n     VERIFY( c1 != c2 );\n     VERIFY( strmsz_2 != strmsz_1 );\n     VERIFY( strmsz_2 == 1 );"}, {"sha": "782a83db91dc2b2197a5f03fcb6a708ea566e706", "filename": "libstdc++-v3/testsuite/27_io/basic_filebuf/sungetc/char/2-io.cc", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/567d4027a3ca0dc36fd0d828925a34a237ad62db/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_filebuf%2Fsungetc%2Fchar%2F2-io.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/567d4027a3ca0dc36fd0d828925a34a237ad62db/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_filebuf%2Fsungetc%2Fchar%2F2-io.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_filebuf%2Fsungetc%2Fchar%2F2-io.cc?ref=567d4027a3ca0dc36fd0d828925a34a237ad62db", "patch": "@@ -1,6 +1,6 @@\n // 2001-05-21 Benjamin Kosnik  <bkoz@redhat.com>\n \n-// Copyright (C) 2001, 2002, 2003, 2009 Free Software Foundation, Inc.\n+// Copyright (C) 2001, 2002, 2003, 2009, 2010 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -41,7 +41,7 @@ void test01()\n \n   bool test __attribute__((unused)) = true;\n   streamsize \t\t\tstrmsz_1, strmsz_2;\n-  int_type \t\t\tc1, c2, c3;\n+  int_type \t\t\tc1, c2;\n \n   // int_type sungetc()\n   // if in_cur not avail, return pbackfail(), else decrement and\n@@ -56,7 +56,7 @@ void test01()\n     fb_01.sputc('u');\n     fb_01.sputc('v');\n     fb_01.pubseekoff(-1, std::ios_base::end);\n-    c3 = fb_01.sbumpc();\n+    fb_01.sbumpc();\n     strmsz_1 = fb_01.in_avail();\n     c2 = fb_01.sungetc(); \n     strmsz_2 = fb_01.in_avail();\n@@ -68,7 +68,7 @@ void test01()\n     c1 = fb_01.sgetc(); \n     c2 = fb_01.sungetc();\n     strmsz_2 = fb_01.in_avail(); // 1\n-    c3 = fb_01.sgetc();\n+    fb_01.sgetc();\n     VERIFY( c1 != c2 );\n     VERIFY( strmsz_2 != strmsz_1 );\n     VERIFY( strmsz_2 == 1 );"}, {"sha": "a8d91695b074b571e5b36c8016137fc1a877ca05", "filename": "libstdc++-v3/testsuite/27_io/basic_istream/extractors_arithmetic/char/01.cc", "status": "modified", "additions": 2, "deletions": 6, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/567d4027a3ca0dc36fd0d828925a34a237ad62db/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_istream%2Fextractors_arithmetic%2Fchar%2F01.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/567d4027a3ca0dc36fd0d828925a34a237ad62db/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_istream%2Fextractors_arithmetic%2Fchar%2F01.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_istream%2Fextractors_arithmetic%2Fchar%2F01.cc?ref=567d4027a3ca0dc36fd0d828925a34a237ad62db", "patch": "@@ -62,20 +62,16 @@ bool test01() {\n   long double \t\tld1 = 0;\n \n   // process alphanumeric versions of bool values\n-  std::ios_base::fmtflags fmt = is_02.flags();\n-  bool testfmt = fmt & std::ios_base::boolalpha;\n   is_02.setf(std::ios_base::boolalpha);\n-  fmt = is_02.flags();\n-  testfmt = fmt & std::ios_base::boolalpha;\n+  is_02.flags();\n   is_02 >> b1;\n   VERIFY( b1 == 1 );\n   is_02 >> b1;\n   VERIFY( b1 == 0 );\n \n   // process numeric versions of of bool values\n   is_02.unsetf(std::ios_base::boolalpha);\n-  fmt = is_02.flags();\n-  testfmt = fmt & std::ios_base::boolalpha;\n+  is_02.flags();\n   is_02 >> b1;\n   VERIFY( b1 == 0 );\n   is_02 >> b1;"}, {"sha": "5d7ec97a59b3c61a92fd4e04e2554f9eca6da83c", "filename": "libstdc++-v3/testsuite/27_io/basic_istream/extractors_arithmetic/wchar_t/01.cc", "status": "modified", "additions": 2, "deletions": 6, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/567d4027a3ca0dc36fd0d828925a34a237ad62db/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_istream%2Fextractors_arithmetic%2Fwchar_t%2F01.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/567d4027a3ca0dc36fd0d828925a34a237ad62db/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_istream%2Fextractors_arithmetic%2Fwchar_t%2F01.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_istream%2Fextractors_arithmetic%2Fwchar_t%2F01.cc?ref=567d4027a3ca0dc36fd0d828925a34a237ad62db", "patch": "@@ -59,20 +59,16 @@ bool test01() {\n   long double \t\tld1 = 0;\n \n   // process alphanumeric versions of bool values\n-  std::ios_base::fmtflags fmt = is_02.flags();\n-  bool testfmt = fmt & std::ios_base::boolalpha;\n   is_02.setf(std::ios_base::boolalpha);\n-  fmt = is_02.flags();\n-  testfmt = fmt & std::ios_base::boolalpha;\n+  is_02.flags();\n   is_02 >> b1;\n   VERIFY( b1 == 1 );\n   is_02 >> b1;\n   VERIFY( b1 == 0 );\n \n   // process numeric versions of of bool values\n   is_02.unsetf(std::ios_base::boolalpha);\n-  fmt = is_02.flags();\n-  testfmt = fmt & std::ios_base::boolalpha;\n+  is_02.flags();\n   is_02 >> b1;\n   VERIFY( b1 == 0 );\n   is_02 >> b1;"}, {"sha": "4e0ce25aa3220c329a560e18e314c612380d693f", "filename": "libstdc++-v3/testsuite/27_io/basic_istream/ignore/char/1.cc", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/567d4027a3ca0dc36fd0d828925a34a237ad62db/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_istream%2Fignore%2Fchar%2F1.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/567d4027a3ca0dc36fd0d828925a34a237ad62db/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_istream%2Fignore%2Fchar%2F1.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_istream%2Fignore%2Fchar%2F1.cc?ref=567d4027a3ca0dc36fd0d828925a34a237ad62db", "patch": "@@ -40,9 +40,7 @@ test01()\n   std::istream is_00(0);\n   std::istream is_03(&isbuf_03);\n   std::istream is_04(&isbuf_04);\n-  std::ios_base::iostate state1, state2, statefail, stateeof;\n-  statefail = std::ios_base::failbit;\n-  stateeof = std::ios_base::eofbit;\n+  std::ios_base::iostate state1, state2;\n \n   // istream& read(char_type* s, streamsize n)\n   char carray[60] = \"\";"}, {"sha": "c4a7a33d002c7dde4f24d4365ed3930311a6aa1c", "filename": "libstdc++-v3/testsuite/27_io/basic_istream/ignore/wchar_t/1.cc", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/567d4027a3ca0dc36fd0d828925a34a237ad62db/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_istream%2Fignore%2Fwchar_t%2F1.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/567d4027a3ca0dc36fd0d828925a34a237ad62db/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_istream%2Fignore%2Fwchar_t%2F1.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_istream%2Fignore%2Fwchar_t%2F1.cc?ref=567d4027a3ca0dc36fd0d828925a34a237ad62db", "patch": "@@ -37,9 +37,7 @@ test01()\n   std::wistream is_00(0);\n   std::wistream is_03(&isbuf_03);\n   std::wistream is_04(&isbuf_04);\n-  std::ios_base::iostate state1, state2, statefail, stateeof;\n-  statefail = std::ios_base::failbit;\n-  stateeof = std::ios_base::eofbit;\n+  std::ios_base::iostate state1, state2;\n \n   // istream& read(char_type* s, streamsize n)\n   wchar_t carray[60] = L\"\";"}, {"sha": "39a3fdff39627ec5b10a4e96fc83f99577ffd3e2", "filename": "libstdc++-v3/testsuite/27_io/basic_istream/peek/char/1.cc", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/567d4027a3ca0dc36fd0d828925a34a237ad62db/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_istream%2Fpeek%2Fchar%2F1.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/567d4027a3ca0dc36fd0d828925a34a237ad62db/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_istream%2Fpeek%2Fchar%2F1.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_istream%2Fpeek%2Fchar%2F1.cc?ref=567d4027a3ca0dc36fd0d828925a34a237ad62db", "patch": "@@ -40,9 +40,7 @@ test01()\n   std::istream is_00(0);\n   std::istream is_03(&isbuf_03);\n   std::istream is_04(&isbuf_04);\n-  std::ios_base::iostate state1, state2, statefail, stateeof;\n-  statefail = std::ios_base::failbit;\n-  stateeof = std::ios_base::eofbit;\n+  std::ios_base::iostate state1, state2;\n \n   char carray[60] = \"\";\n "}, {"sha": "612e60600ff4acc508cd2b11e8f88312eceb873c", "filename": "libstdc++-v3/testsuite/27_io/basic_istream/peek/wchar_t/1.cc", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/567d4027a3ca0dc36fd0d828925a34a237ad62db/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_istream%2Fpeek%2Fwchar_t%2F1.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/567d4027a3ca0dc36fd0d828925a34a237ad62db/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_istream%2Fpeek%2Fwchar_t%2F1.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_istream%2Fpeek%2Fwchar_t%2F1.cc?ref=567d4027a3ca0dc36fd0d828925a34a237ad62db", "patch": "@@ -37,9 +37,7 @@ test01()\n   std::wistream is_00(0);\n   std::wistream is_03(&isbuf_03);\n   std::wistream is_04(&isbuf_04);\n-  std::ios_base::iostate state1, state2, statefail, stateeof;\n-  statefail = std::ios_base::failbit;\n-  stateeof = std::ios_base::eofbit;\n+  std::ios_base::iostate state1, state2;\n \n   wchar_t carray[60] = L\"\";\n "}, {"sha": "899a48d78427c734987728b2438f11c1e1c199a9", "filename": "libstdc++-v3/testsuite/27_io/basic_istream/seekg/char/8348-2.cc", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/567d4027a3ca0dc36fd0d828925a34a237ad62db/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_istream%2Fseekg%2Fchar%2F8348-2.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/567d4027a3ca0dc36fd0d828925a34a237ad62db/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_istream%2Fseekg%2Fchar%2F8348-2.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_istream%2Fseekg%2Fchar%2F8348-2.cc?ref=567d4027a3ca0dc36fd0d828925a34a237ad62db", "patch": "@@ -1,6 +1,6 @@\n // 2000-06-29 bkoz\n \n-// Copyright (C) 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2009\n+// Copyright (C) 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2009, 2010\n // Free Software Foundation\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n@@ -35,7 +35,7 @@ void test06(void)\n   // seekg\n   {\n     istringstream iss(num1);\n-    istream::pos_type pos1 = iss.tellg();\n+    iss.tellg();\n     int asNum = 0;\n     iss >> asNum;\n     VERIFY( test = iss.eof() );"}, {"sha": "d428a88ba412cebd0960d8fddce8d16520e77357", "filename": "libstdc++-v3/testsuite/27_io/basic_istream/seekg/wchar_t/8348-2.cc", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/567d4027a3ca0dc36fd0d828925a34a237ad62db/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_istream%2Fseekg%2Fwchar_t%2F8348-2.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/567d4027a3ca0dc36fd0d828925a34a237ad62db/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_istream%2Fseekg%2Fwchar_t%2F8348-2.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_istream%2Fseekg%2Fwchar_t%2F8348-2.cc?ref=567d4027a3ca0dc36fd0d828925a34a237ad62db", "patch": "@@ -1,4 +1,4 @@\n-// Copyright (C) 2004, 2005, 2006, 2009 Free Software Foundation\n+// Copyright (C) 2004, 2005, 2006, 2009, 2010 Free Software Foundation\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -32,7 +32,7 @@ void test06(void)\n   // seekg\n   {\n     wistringstream iss(num1);\n-    wistream::pos_type pos1 = iss.tellg();\n+    iss.tellg();\n     int asNum = 0;\n     iss >> asNum;\n     VERIFY( test = iss.eof() );"}, {"sha": "e4b4914ef48a47b62fc9d0c4e7299bf4f8b3cf53", "filename": "libstdc++-v3/testsuite/27_io/basic_istream/tellg/char/8348.cc", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/567d4027a3ca0dc36fd0d828925a34a237ad62db/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_istream%2Ftellg%2Fchar%2F8348.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/567d4027a3ca0dc36fd0d828925a34a237ad62db/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_istream%2Ftellg%2Fchar%2F8348.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_istream%2Ftellg%2Fchar%2F8348.cc?ref=567d4027a3ca0dc36fd0d828925a34a237ad62db", "patch": "@@ -1,6 +1,6 @@\n // 2000-06-29 bkoz\n \n-// Copyright (C) 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2009\n+// Copyright (C) 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2009, 2010\n // Free Software Foundation\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n@@ -35,7 +35,7 @@ void test06(void)\n   // tellg\n   {\n     istringstream iss(num1);\n-    istream::pos_type pos1 = iss.tellg();\n+    iss.tellg();\n     int asNum = 0;\n     iss >> asNum;\n     VERIFY( test = iss.eof() );\n@@ -47,7 +47,7 @@ void test06(void)\n   // seekg\n   {\n     istringstream iss(num1);\n-    istream::pos_type pos1 = iss.tellg();\n+    iss.tellg();\n     int asNum = 0;\n     iss >> asNum;\n     VERIFY( test = iss.eof() );"}, {"sha": "61613817b4ddbf3e6e6694d2475cc5a1f5989d0c", "filename": "libstdc++-v3/testsuite/27_io/basic_istream/tellg/wchar_t/8348.cc", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/567d4027a3ca0dc36fd0d828925a34a237ad62db/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_istream%2Ftellg%2Fwchar_t%2F8348.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/567d4027a3ca0dc36fd0d828925a34a237ad62db/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_istream%2Ftellg%2Fwchar_t%2F8348.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_istream%2Ftellg%2Fwchar_t%2F8348.cc?ref=567d4027a3ca0dc36fd0d828925a34a237ad62db", "patch": "@@ -32,7 +32,7 @@ void test06(void)\n   // tellg\n   {\n     wistringstream iss(num1);\n-    wistream::pos_type pos1 = iss.tellg();\n+    iss.tellg();\n     int asNum = 0;\n     iss >> asNum;\n     VERIFY( test = iss.eof() );\n@@ -44,7 +44,7 @@ void test06(void)\n   // seekg\n   {\n     wistringstream iss(num1);\n-    wistream::pos_type pos1 = iss.tellg();\n+    iss.tellg();\n     int asNum = 0;\n     iss >> asNum;\n     VERIFY( test = iss.eof() );"}, {"sha": "b59d08839db60efed6efded9d82efce297a4d9cb", "filename": "libstdc++-v3/testsuite/27_io/basic_istream/ws/char/1.cc", "status": "modified", "additions": 2, "deletions": 5, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/567d4027a3ca0dc36fd0d828925a34a237ad62db/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_istream%2Fws%2Fchar%2F1.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/567d4027a3ca0dc36fd0d828925a34a237ad62db/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_istream%2Fws%2Fchar%2F1.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_istream%2Fws%2Fchar%2F1.cc?ref=567d4027a3ca0dc36fd0d828925a34a237ad62db", "patch": "@@ -1,6 +1,7 @@\n // 1999-07-22 bkoz\n \n-// Copyright (C) 1994, 1999, 2001, 2003, 2009 Free Software Foundation, Inc.\n+// Copyright (C) 1994, 1999, 2001, 2003, 2009, 2010\n+// Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -33,7 +34,6 @@ void test01(void)\n   std::string str02(str_lit01);\n   std::string str04;\n   std::string str05;\n-  std::ios_base::iostate flag3, flag4, flag5;\n \n   // template<_CharT, _Traits>\n   //  basic_istream<_CharT, _Traits>& ws(basic_istream<_Char, _Traits>& is)\n@@ -60,9 +60,6 @@ void test01(void)\n   VERIFY( str05 == \"barbara\" );\n   VERIFY( str05 == str04 );\n \n-  flag3 = std::ios_base::eofbit;\n-  flag4 = std::ios_base::badbit;\n-  flag5 = std::ios_base::failbit;\n   VERIFY( !iss01.fail() );\n   VERIFY( !iss02.fail() );\n   VERIFY( !iss01.eof() );"}, {"sha": "8e60163c1482940255a0f5f95a2fe4f1250ff416", "filename": "libstdc++-v3/testsuite/27_io/basic_istream/ws/wchar_t/1.cc", "status": "modified", "additions": 1, "deletions": 5, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/567d4027a3ca0dc36fd0d828925a34a237ad62db/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_istream%2Fws%2Fwchar_t%2F1.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/567d4027a3ca0dc36fd0d828925a34a237ad62db/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_istream%2Fws%2Fwchar_t%2F1.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_istream%2Fws%2Fwchar_t%2F1.cc?ref=567d4027a3ca0dc36fd0d828925a34a237ad62db", "patch": "@@ -1,4 +1,4 @@\n-// Copyright (C) 2004, 2009 Free Software Foundation, Inc.\n+// Copyright (C) 2004, 2009, 2010 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -31,7 +31,6 @@ void test01(void)\n   std::wstring str02(str_lit01);\n   std::wstring str04;\n   std::wstring str05;\n-  std::ios_base::iostate flag3, flag4, flag5;\n \n   // template<_CharT, _Traits>\n   //  basic_istream<_CharT, _Traits>& ws(basic_istream<_Char, _Traits>& is)\n@@ -58,9 +57,6 @@ void test01(void)\n   VERIFY( str05 == L\"barbara\" );\n   VERIFY( str05 == str04 );\n \n-  flag3 = std::ios_base::eofbit;\n-  flag4 = std::ios_base::badbit;\n-  flag5 = std::ios_base::failbit;\n   VERIFY( !iss01.fail() );\n   VERIFY( !iss02.fail() );\n   VERIFY( !iss01.eof() );"}, {"sha": "5ec21367b081fd5d51810df408f66e10fbf8c482", "filename": "libstdc++-v3/testsuite/27_io/basic_ostream/inserters_character/char/4.cc", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/567d4027a3ca0dc36fd0d828925a34a237ad62db/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_ostream%2Finserters_character%2Fchar%2F4.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/567d4027a3ca0dc36fd0d828925a34a237ad62db/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_ostream%2Finserters_character%2Fchar%2F4.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_ostream%2Finserters_character%2Fchar%2F4.cc?ref=567d4027a3ca0dc36fd0d828925a34a237ad62db", "patch": "@@ -1,6 +1,7 @@\n // 1999-08-16 bkoz\n \n-// Copyright (C) 1999, 2000, 2002, 2003, 2005, 2009 Free Software Foundation\n+// Copyright (C) 1999, 2000, 2002, 2003, 2005, 2009, 2010\n+// Free Software Foundation\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -35,9 +36,6 @@ test04()\n \n   std::ostringstream oss_02(str_01, std::ios_base::out);\n \n-  std::ios_base::iostate statefail;\n-  statefail = std::ios_base::failbit;\n-\n   // template<_CharT, _Traits>\n   //  basic_ostream& operator<<(ostream&, const char*)\n   for (int i = 0; i < i_max; ++i) "}, {"sha": "902539e8c20ce2765c3502fe030861a6cdd1649e", "filename": "libstdc++-v3/testsuite/27_io/basic_ostream/inserters_character/wchar_t/4.cc", "status": "modified", "additions": 1, "deletions": 4, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/567d4027a3ca0dc36fd0d828925a34a237ad62db/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_ostream%2Finserters_character%2Fwchar_t%2F4.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/567d4027a3ca0dc36fd0d828925a34a237ad62db/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_ostream%2Finserters_character%2Fwchar_t%2F4.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_ostream%2Finserters_character%2Fwchar_t%2F4.cc?ref=567d4027a3ca0dc36fd0d828925a34a237ad62db", "patch": "@@ -1,6 +1,6 @@\n // 1999-08-16 bkoz\n \n-// Copyright (C) 1999, 2000, 2002, 2003, 2009 Free Software Foundation\n+// Copyright (C) 1999, 2000, 2002, 2003, 2009, 2010 Free Software Foundation\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -35,9 +35,6 @@ test04()\n \n   std::wostringstream oss_02(str_01, std::ios_base::out);\n \n-  std::ios_base::iostate statefail;\n-  statefail = std::ios_base::failbit;\n-\n   // template<_CharT, _Traits>\n   //  basic_ostream& operator<<(ostream&, const wchar_t*)\n   for (int i = 0; i < i_max; ++i) "}, {"sha": "5fe71886897c5b98e84facce671a8753bbc0f756", "filename": "libstdc++-v3/testsuite/27_io/basic_ostringstream/str/char/1.cc", "status": "modified", "additions": 1, "deletions": 5, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/567d4027a3ca0dc36fd0d828925a34a237ad62db/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_ostringstream%2Fstr%2Fchar%2F1.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/567d4027a3ca0dc36fd0d828925a34a237ad62db/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_ostringstream%2Fstr%2Fchar%2F1.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_ostringstream%2Fstr%2Fchar%2F1.cc?ref=567d4027a3ca0dc36fd0d828925a34a237ad62db", "patch": "@@ -1,6 +1,6 @@\n // 2001-05-23 Benjamin Kosnik  <bkoz@redhat.com>\n \n-// Copyright (C) 2001, 2002, 2003, 2009 Free Software Foundation, Inc.\n+// Copyright (C) 2001, 2002, 2003, 2009, 2010 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -30,10 +30,6 @@ void test01()\n   const std::string str01 = \"123\";\n   std::string str02;\n \n-  std::ios_base::iostate statefail, stateeof;\n-  statefail = std::ios_base::failbit;\n-  stateeof = std::ios_base::eofbit;\n-\n   // string str() const\n   str02 = os01.str();\n   VERIFY( str00 == str02 );"}, {"sha": "b66d8fa25248f3fc2b92685c6c8f6c0f5de60f60", "filename": "libstdc++-v3/testsuite/27_io/basic_ostringstream/str/wchar_t/1.cc", "status": "modified", "additions": 1, "deletions": 5, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/567d4027a3ca0dc36fd0d828925a34a237ad62db/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_ostringstream%2Fstr%2Fwchar_t%2F1.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/567d4027a3ca0dc36fd0d828925a34a237ad62db/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_ostringstream%2Fstr%2Fwchar_t%2F1.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_ostringstream%2Fstr%2Fwchar_t%2F1.cc?ref=567d4027a3ca0dc36fd0d828925a34a237ad62db", "patch": "@@ -1,4 +1,4 @@\n-// Copyright (C) 2004, 2009 Free Software Foundation, Inc.\n+// Copyright (C) 2004, 2009, 2010 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -28,10 +28,6 @@ void test01()\n   const std::wstring str01 = L\"123\";\n   std::wstring str02;\n \n-  std::ios_base::iostate statefail, stateeof;\n-  statefail = std::ios_base::failbit;\n-  stateeof = std::ios_base::eofbit;\n-\n   // string str() const\n   str02 = os01.str();\n   VERIFY( str00 == str02 );"}, {"sha": "f60911bdc435d1065164af6c8431322bac740134", "filename": "libstdc++-v3/testsuite/27_io/basic_stringbuf/sbumpc/char/1.cc", "status": "modified", "additions": 4, "deletions": 5, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/567d4027a3ca0dc36fd0d828925a34a237ad62db/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_stringbuf%2Fsbumpc%2Fchar%2F1.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/567d4027a3ca0dc36fd0d828925a34a237ad62db/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_stringbuf%2Fsbumpc%2Fchar%2F1.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_stringbuf%2Fsbumpc%2Fchar%2F1.cc?ref=567d4027a3ca0dc36fd0d828925a34a237ad62db", "patch": "@@ -1,7 +1,7 @@\n // 981208 bkoz test functionality of basic_stringbuf for char_type == char\n \n // Copyright (C) 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005,\n-// 2006, 2007, 2009\n+// 2006, 2007, 2009, 2010\n // Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n@@ -33,14 +33,13 @@ std::stringbuf strb_03(str_03, std::ios_base::out);\n void test04() \n {\n   bool test __attribute__((unused)) = true;\n-  std::streamoff  \t\tstrmof_1(-1), strmof_2;\n   typedef std::stringbuf::int_type int_type;\n   typedef std::stringbuf::traits_type traits_type;\n \n   // GET\n-  strmof_1 = strb_01.in_avail();\n-  strmof_2 = strb_02.in_avail();\n-  strmof_1 = strb_03.in_avail(); \n+  strb_01.in_avail();\n+  strb_02.in_avail();\n+  strb_03.in_avail(); \n \n   // int_type sbumpc()\n   // if read_cur not avail, return uflow(), else return *read_cur & increment"}, {"sha": "3ec279a19ef49017514b0d7ec8b34a0746861c13", "filename": "libstdc++-v3/testsuite/27_io/basic_stringbuf/sbumpc/wchar_t/1.cc", "status": "modified", "additions": 4, "deletions": 5, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/567d4027a3ca0dc36fd0d828925a34a237ad62db/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_stringbuf%2Fsbumpc%2Fwchar_t%2F1.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/567d4027a3ca0dc36fd0d828925a34a237ad62db/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_stringbuf%2Fsbumpc%2Fwchar_t%2F1.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_stringbuf%2Fsbumpc%2Fwchar_t%2F1.cc?ref=567d4027a3ca0dc36fd0d828925a34a237ad62db", "patch": "@@ -1,6 +1,6 @@\n // 981208 bkoz test functionality of basic_stringbuf for char_type == wchar_t\n \n-// Copyright (C) 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2009\n+// Copyright (C) 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2009, 2010\n // Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n@@ -32,14 +32,13 @@ std::wstringbuf strb_03(str_03, std::ios_base::out);\n void test04() \n {\n   bool test __attribute__((unused)) = true;\n-  std::streamoff  \t\tstrmof_1(-1), strmof_2;\n   typedef std::wstringbuf::int_type int_type;\n   typedef std::wstringbuf::traits_type traits_type;\n \n   // GET\n-  strmof_1 = strb_01.in_avail();\n-  strmof_2 = strb_02.in_avail();\n-  strmof_1 = strb_03.in_avail(); \n+  strb_01.in_avail();\n+  strb_02.in_avail();\n+  strb_03.in_avail(); \n \n   // int_type sbumpc()\n   // if read_cur not avail, return uflow(), else return *read_cur & increment"}, {"sha": "142cde9c7f2a0dad2dba80895a3cb843017a663b", "filename": "libstdc++-v3/testsuite/27_io/basic_stringbuf/seekoff/char/1.cc", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/567d4027a3ca0dc36fd0d828925a34a237ad62db/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_stringbuf%2Fseekoff%2Fchar%2F1.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/567d4027a3ca0dc36fd0d828925a34a237ad62db/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_stringbuf%2Fseekoff%2Fchar%2F1.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_stringbuf%2Fseekoff%2Fchar%2F1.cc?ref=567d4027a3ca0dc36fd0d828925a34a237ad62db", "patch": "@@ -1,6 +1,6 @@\n // 981208 bkoz test functionality of basic_stringbuf for char_type == char\n \n-// Copyright (C) 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2009\n+// Copyright (C) 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2009, 2010\n // Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n@@ -36,7 +36,7 @@ void test04()\n   typedef std::stringbuf::off_type off_type;\n \n   int_type c1 = strb_01.sbumpc();\n-  int_type c2, c3;\n+  int_type c2;\n \n   // BUFFER MANAGEMENT & POSITIONING\n \n@@ -84,7 +84,7 @@ void test04()\n   c1 = strb_01.sgetc(); \n   c2 = strb_01.sungetc();\n   strmsz_2 = strb_01.in_avail(); // 1\n-  c3 = strb_01.sgetc();\n+  strb_01.sgetc();\n   VERIFY( c1 != c2 );\n   VERIFY( strmsz_2 != strmsz_1 );\n   VERIFY( strmsz_2 == 1 );"}, {"sha": "1b0ee5fe58f2713469f2901e38dc110c296482f6", "filename": "libstdc++-v3/testsuite/27_io/basic_stringbuf/seekoff/wchar_t/1.cc", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/567d4027a3ca0dc36fd0d828925a34a237ad62db/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_stringbuf%2Fseekoff%2Fwchar_t%2F1.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/567d4027a3ca0dc36fd0d828925a34a237ad62db/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_stringbuf%2Fseekoff%2Fwchar_t%2F1.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_stringbuf%2Fseekoff%2Fwchar_t%2F1.cc?ref=567d4027a3ca0dc36fd0d828925a34a237ad62db", "patch": "@@ -1,6 +1,6 @@\n // 981208 bkoz test functionality of basic_stringbuf for char_type == wchar_t\n \n-// Copyright (C) 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2009\n+// Copyright (C) 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2009, 2010\n // Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n@@ -36,7 +36,7 @@ void test04()\n   typedef std::wstringbuf::off_type off_type;\n \n   int_type c1 = strb_01.sbumpc();\n-  int_type c2, c3;\n+  int_type c2;\n   \n   // BUFFER MANAGEMENT & POSITIONING\n \n@@ -84,7 +84,7 @@ void test04()\n   c1 = strb_01.sgetc(); \n   c2 = strb_01.sungetc();\n   strmsz_2 = strb_01.in_avail(); // 1\n-  c3 = strb_01.sgetc();\n+  strb_01.sgetc();\n   VERIFY( c1 != c2 );\n   VERIFY( strmsz_2 != strmsz_1 );\n   VERIFY( strmsz_2 == 1 );"}, {"sha": "53f98bf98c30f3b895e5d23384dce34e016aa39c", "filename": "libstdc++-v3/testsuite/27_io/basic_stringbuf/seekpos/char/1.cc", "status": "modified", "additions": 3, "deletions": 4, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/567d4027a3ca0dc36fd0d828925a34a237ad62db/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_stringbuf%2Fseekpos%2Fchar%2F1.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/567d4027a3ca0dc36fd0d828925a34a237ad62db/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_stringbuf%2Fseekpos%2Fchar%2F1.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_stringbuf%2Fseekpos%2Fchar%2F1.cc?ref=567d4027a3ca0dc36fd0d828925a34a237ad62db", "patch": "@@ -1,6 +1,6 @@\n // 981208 bkoz test functionality of basic_stringbuf for char_type == char\n \n-// Copyright (C) 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2009\n+// Copyright (C) 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2009, 2010\n // Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n@@ -34,7 +34,6 @@ void test04()\n   typedef std::stringbuf::off_type off_type;\n \n   int_type c1 = strb_01.sbumpc();\n-  int_type c2; \n   int_type c3 = strb_01.sbumpc();\n \n   pos_type pt_1(off_type(-1));\n@@ -58,7 +57,7 @@ void test04()\n   off_1 = off_type(pt_1);\n   c1 = strb_01.snextc(); //current in pointer +1\n   VERIFY( c1 == 'o' );\n-  c2 = strb_01.sputc('x');  //test current out pointer\n+  strb_01.sputc('x');  //test current out pointer\n   str_tmp = std::string(\"myxonos. . . or what?\");\n   VERIFY( strb_01.str() == str_tmp );\n   strb_01.pubsync(); //resets pointers\n@@ -67,7 +66,7 @@ void test04()\n   VERIFY( off_1 == off_2 );\n   c3 = strb_01.snextc(); //current in pointer +1\n   VERIFY( c1 == c3 );\n-  c2 = strb_01.sputc('x');  //test current out pointer\n+  strb_01.sputc('x');  //test current out pointer\n   str_tmp = std::string(\"myxonos. . . or what?\");\n   VERIFY( strb_01.str() == str_tmp );\n }"}, {"sha": "bc01ea64064167e6b8f2556eabe4dbb077a9d2bb", "filename": "libstdc++-v3/testsuite/27_io/basic_stringbuf/seekpos/wchar_t/1.cc", "status": "modified", "additions": 3, "deletions": 4, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/567d4027a3ca0dc36fd0d828925a34a237ad62db/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_stringbuf%2Fseekpos%2Fwchar_t%2F1.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/567d4027a3ca0dc36fd0d828925a34a237ad62db/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_stringbuf%2Fseekpos%2Fwchar_t%2F1.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_stringbuf%2Fseekpos%2Fwchar_t%2F1.cc?ref=567d4027a3ca0dc36fd0d828925a34a237ad62db", "patch": "@@ -1,6 +1,6 @@\n // 981208 bkoz test functionality of basic_stringbuf for char_type == wchar_t\n \n-// Copyright (C) 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2009\n+// Copyright (C) 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2009, 2010\n // Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n@@ -34,7 +34,6 @@ void test04()\n   typedef std::wstringbuf::off_type off_type;\n \n   int_type c1 = strb_01.sbumpc();\n-  int_type c2;\n   int_type c3 = strb_01.sbumpc();\n \n   pos_type pt_1(off_type(-1));\n@@ -58,7 +57,7 @@ void test04()\n   off_1 = off_type(pt_1);\n   c1 = strb_01.snextc(); //current in pointer +1\n   VERIFY( c1 == L'o' );\n-  c2 = strb_01.sputc(L'x');  //test current out pointer\n+  strb_01.sputc(L'x');  //test current out pointer\n   str_tmp = std::wstring(L\"myxonos. . . or what?\");\n   VERIFY( strb_01.str() == str_tmp );\n   strb_01.pubsync(); //resets pointers\n@@ -67,7 +66,7 @@ void test04()\n   VERIFY( off_1 == off_2 );\n   c3 = strb_01.snextc(); //current in pointer +1\n   VERIFY( c1 == c3 );\n-  c2 = strb_01.sputc(L'x');  //test current out pointer\n+  strb_01.sputc(L'x');  //test current out pointer\n   str_tmp = std::wstring(L\"myxonos. . . or what?\");\n   VERIFY( strb_01.str() == str_tmp );\n }"}, {"sha": "f26ec85c5653e587136586d4e5d0ae12ea930630", "filename": "libstdc++-v3/testsuite/27_io/basic_stringbuf/sgetc/char/1.cc", "status": "modified", "additions": 4, "deletions": 5, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/567d4027a3ca0dc36fd0d828925a34a237ad62db/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_stringbuf%2Fsgetc%2Fchar%2F1.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/567d4027a3ca0dc36fd0d828925a34a237ad62db/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_stringbuf%2Fsgetc%2Fchar%2F1.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_stringbuf%2Fsgetc%2Fchar%2F1.cc?ref=567d4027a3ca0dc36fd0d828925a34a237ad62db", "patch": "@@ -1,6 +1,6 @@\n // 981208 bkoz test functionality of basic_stringbuf for char_type == char\n \n-// Copyright (C) 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2009\n+// Copyright (C) 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2009, 2010\n // Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n@@ -32,14 +32,13 @@ std::stringbuf strb_03(str_03, std::ios_base::out);\n void test04() \n {\n   bool test __attribute__((unused)) = true;\n-  std::streamoff  \t\tstrmof_1(-1), strmof_2;\n   typedef std::stringbuf::int_type int_type;\n   typedef std::stringbuf::traits_type traits_type;\n \n   // GET\n-  strmof_1 = strb_01.in_avail();\n-  strmof_2 = strb_02.in_avail();\n-  strmof_1 = strb_03.in_avail(); \n+  strb_01.in_avail();\n+  strb_02.in_avail();\n+  strb_03.in_avail(); \n \n   int_type c3 = strb_01.sbumpc();\n   int_type c4 = strb_02.sbumpc();"}, {"sha": "98ca73d75fafdfc1b085337c431cf663faf32a9c", "filename": "libstdc++-v3/testsuite/27_io/basic_stringbuf/sgetc/wchar_t/1.cc", "status": "modified", "additions": 4, "deletions": 5, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/567d4027a3ca0dc36fd0d828925a34a237ad62db/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_stringbuf%2Fsgetc%2Fwchar_t%2F1.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/567d4027a3ca0dc36fd0d828925a34a237ad62db/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_stringbuf%2Fsgetc%2Fwchar_t%2F1.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_stringbuf%2Fsgetc%2Fwchar_t%2F1.cc?ref=567d4027a3ca0dc36fd0d828925a34a237ad62db", "patch": "@@ -1,6 +1,6 @@\n // 981208 bkoz test functionality of basic_stringbuf for char_type == wchar_t\n \n-// Copyright (C) 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2009\n+// Copyright (C) 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2009, 2010\n // Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n@@ -32,14 +32,13 @@ std::wstringbuf strb_03(str_03, std::ios_base::out);\n void test04() \n {\n   bool test __attribute__((unused)) = true;\n-  std::streamoff  \t\tstrmof_1(-1), strmof_2;\n   typedef std::wstringbuf::int_type int_type;\n   typedef std::wstringbuf::traits_type traits_type;\n \n   // GET\n-  strmof_1 = strb_01.in_avail();\n-  strmof_2 = strb_02.in_avail();\n-  strmof_1 = strb_03.in_avail(); \n+  strb_01.in_avail();\n+  strb_02.in_avail();\n+  strb_03.in_avail(); \n \n   int_type c3 = strb_01.sbumpc();\n   int_type c4 = strb_02.sbumpc();"}, {"sha": "2f077a508a90da54d58a12b5cde1fdf7ad7cb09d", "filename": "libstdc++-v3/testsuite/27_io/basic_stringbuf/sgetn/char/1.cc", "status": "modified", "additions": 7, "deletions": 8, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/567d4027a3ca0dc36fd0d828925a34a237ad62db/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_stringbuf%2Fsgetn%2Fchar%2F1.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/567d4027a3ca0dc36fd0d828925a34a237ad62db/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_stringbuf%2Fsgetn%2Fchar%2F1.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_stringbuf%2Fsgetn%2Fchar%2F1.cc?ref=567d4027a3ca0dc36fd0d828925a34a237ad62db", "patch": "@@ -1,7 +1,7 @@\n // 981208 bkoz test functionality of basic_stringbuf for char_type == char\n \n // Copyright (C) 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005\n-// 2006, 2007, 2009\n+// 2006, 2007, 2009, 2010\n // Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n@@ -34,34 +34,33 @@ void test04()\n {\n   bool test __attribute__((unused)) = true;\n   std::streamsize \t\tstrmsz_1, strmsz_2;\n-  std::streamoff  \t\tstrmof_1(-1), strmof_2;\n   typedef std::stringbuf::int_type int_type;\n   typedef std::stringbuf::traits_type traits_type;\n \n   // GET\n-  strmof_1 = strb_01.in_avail();\n-  strmof_2 = strb_02.in_avail();\n-  strmof_1 = strb_03.in_avail(); \n+  strb_01.in_avail();\n+  strb_02.in_avail();\n+  strb_03.in_avail(); \n \n   int_type c1 = strb_01.sbumpc();\n   int_type c2 = strb_02.sbumpc();\n   strb_01.sbumpc();\n   int_type c4 = strb_02.sbumpc();\n-  int_type c5 = strb_03.sbumpc();\n+  strb_03.sbumpc();\n \n   // int_type sgetc()\n   // if read_cur not avail, return uflow(), else return *read_cur  \n   int_type c6 = strb_01.sgetc();\n   int_type c7 = strb_02.sgetc();\n   strb_01.sgetc();\n   strb_02.sgetc();\n-   c5 = strb_03.sgetc();\n+  strb_03.sgetc();\n \n   // int_type snextc()\n   // calls sbumpc and if sbumpc != eof, return sgetc\n   c6 = strb_01.snextc();\n   c7 = strb_02.snextc();\n-  c5 = strb_03.snextc();\n+  strb_03.snextc();\n \n   // streamsize sgetn(char_type *s, streamsize n)\n   // streamsize xsgetn(char_type *s, streamsize n)"}, {"sha": "5c917e109509b60c3356adad5c7bcff6b77ccfb8", "filename": "libstdc++-v3/testsuite/27_io/basic_stringbuf/sgetn/wchar_t/1.cc", "status": "modified", "additions": 7, "deletions": 8, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/567d4027a3ca0dc36fd0d828925a34a237ad62db/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_stringbuf%2Fsgetn%2Fwchar_t%2F1.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/567d4027a3ca0dc36fd0d828925a34a237ad62db/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_stringbuf%2Fsgetn%2Fwchar_t%2F1.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_stringbuf%2Fsgetn%2Fwchar_t%2F1.cc?ref=567d4027a3ca0dc36fd0d828925a34a237ad62db", "patch": "@@ -1,7 +1,7 @@\n // 981208 bkoz test functionality of basic_stringbuf for char_type == wchar_t\n \n // Copyright (C) 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005,\n-// 2006, 2007, 2009\n+// 2006, 2007, 2009, 2010\n // Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n@@ -34,34 +34,33 @@ void test04()\n {\n   bool test __attribute__((unused)) = true;\n   std::streamsize \t\tstrmsz_1, strmsz_2;\n-  std::streamoff  \t\tstrmof_1(-1), strmof_2;\n   typedef std::wstringbuf::int_type int_type;\n   typedef std::wstringbuf::traits_type traits_type;\n \n   // GET\n-  strmof_1 = strb_01.in_avail();\n-  strmof_2 = strb_02.in_avail();\n-  strmof_1 = strb_03.in_avail(); \n+  strb_01.in_avail();\n+  strb_02.in_avail();\n+  strb_03.in_avail(); \n \n   int_type c1 = strb_01.sbumpc();\n   int_type c2 = strb_02.sbumpc();\n   strb_01.sbumpc();\n   int_type c4 = strb_02.sbumpc();\n-  int_type c5 = strb_03.sbumpc();\n+  strb_03.sbumpc();\n \n   // int_type sgetc()\n   // if read_cur not avail, return uflow(), else return *read_cur  \n   int_type c6 = strb_01.sgetc();\n   int_type c7 = strb_02.sgetc();\n   strb_01.sgetc();\n   strb_02.sgetc();\n-   c5 = strb_03.sgetc();\n+  strb_03.sgetc();\n \n   // int_type snextc()\n   // calls sbumpc and if sbumpc != eof, return sgetc\n   c6 = strb_01.snextc();\n   c7 = strb_02.snextc();\n-  c5 = strb_03.snextc();\n+  strb_03.snextc();\n \n   // streamsize sgetn(char_type *s, streamsize n)\n   // streamsize xsgetn(char_type *s, streamsize n)"}, {"sha": "afe1dfa5750a5a917467b5fd9cdca8ba820b0a78", "filename": "libstdc++-v3/testsuite/27_io/basic_stringbuf/snextc/char/1.cc", "status": "modified", "additions": 4, "deletions": 5, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/567d4027a3ca0dc36fd0d828925a34a237ad62db/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_stringbuf%2Fsnextc%2Fchar%2F1.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/567d4027a3ca0dc36fd0d828925a34a237ad62db/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_stringbuf%2Fsnextc%2Fchar%2F1.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_stringbuf%2Fsnextc%2Fchar%2F1.cc?ref=567d4027a3ca0dc36fd0d828925a34a237ad62db", "patch": "@@ -1,7 +1,7 @@\n // 981208 bkoz test functionality of basic_stringbuf for char_type == char\n \n // Copyright (C) 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005,\n-// 2006, 2007, 2009\n+// 2006, 2007, 2009, 2010\n // Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n@@ -33,14 +33,13 @@ std::stringbuf strb_03(str_03, std::ios_base::out);\n void test04() \n {\n   bool test __attribute__((unused)) = true;\n-  std::streamoff  \t\tstrmof_1(-1), strmof_2;\n   typedef std::stringbuf::int_type int_type;\n   typedef std::stringbuf::traits_type traits_type;\n \n   // GET\n-  strmof_1 = strb_01.in_avail();\n-  strmof_2 = strb_02.in_avail();\n-  strmof_1 = strb_03.in_avail(); \n+  strb_01.in_avail();\n+  strb_02.in_avail();\n+  strb_03.in_avail(); \n \n   strb_01.sbumpc();\n   strb_02.sbumpc();"}, {"sha": "0154594b689626e28c0f74020c6a1dc67431708e", "filename": "libstdc++-v3/testsuite/27_io/basic_stringbuf/snextc/wchar_t/1.cc", "status": "modified", "additions": 4, "deletions": 5, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/567d4027a3ca0dc36fd0d828925a34a237ad62db/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_stringbuf%2Fsnextc%2Fwchar_t%2F1.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/567d4027a3ca0dc36fd0d828925a34a237ad62db/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_stringbuf%2Fsnextc%2Fwchar_t%2F1.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_stringbuf%2Fsnextc%2Fwchar_t%2F1.cc?ref=567d4027a3ca0dc36fd0d828925a34a237ad62db", "patch": "@@ -1,7 +1,7 @@\n // 981208 bkoz test functionality of basic_stringbuf for char_type == wchar_t\n \n // Copyright (C) 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005\n-// 2006, 2007, 2009\n+// 2006, 2007, 2009, 2010\n // Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n@@ -33,14 +33,13 @@ std::wstringbuf strb_03(str_03, std::ios_base::out);\n void test04() \n {\n   bool test __attribute__((unused)) = true;\n-  std::streamoff  \t\tstrmof_1(-1), strmof_2;\n   typedef std::wstringbuf::int_type int_type;\n   typedef std::wstringbuf::traits_type traits_type;\n \n   // GET\n-  strmof_1 = strb_01.in_avail();\n-  strmof_2 = strb_02.in_avail();\n-  strmof_1 = strb_03.in_avail(); \n+  strb_01.in_avail();\n+  strb_02.in_avail();\n+  strb_03.in_avail(); \n \n   strb_01.sbumpc();\n   strb_02.sbumpc();"}, {"sha": "67358a3b9119a727f750eb431c30a6ce6360d2bf", "filename": "libstdc++-v3/testsuite/27_io/basic_stringbuf/sputbackc/char/1.cc", "status": "modified", "additions": 13, "deletions": 14, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/567d4027a3ca0dc36fd0d828925a34a237ad62db/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_stringbuf%2Fsputbackc%2Fchar%2F1.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/567d4027a3ca0dc36fd0d828925a34a237ad62db/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_stringbuf%2Fsputbackc%2Fchar%2F1.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_stringbuf%2Fsputbackc%2Fchar%2F1.cc?ref=567d4027a3ca0dc36fd0d828925a34a237ad62db", "patch": "@@ -1,6 +1,6 @@\n // 981208 bkoz test functionality of basic_stringbuf for char_type == char\n \n-// Copyright (C) 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2009\n+// Copyright (C) 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2009, 2010\n // Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n@@ -33,7 +33,6 @@ void test04()\n {\n   bool test __attribute__((unused)) = true;\n   std::string \t\tstr_tmp, str_tmp2;\n-  std::streamsize \t\tstrmsz_1, strmsz_2;\n   typedef std::stringbuf::int_type int_type;\n   typedef std::stringbuf::traits_type traits_type;\n \n@@ -44,27 +43,27 @@ void test04()\n \n   // PUT\n   strb_03.str(str_01); //reset\n-  std::string::size_type sz1 = strb_03.str().length();\n-  std::string::size_type sz2 = strb_03.str().length();\n+  strb_03.str().length();\n+  strb_03.str().length();\n   \n   // streamsize sputn(const char_typs* s, streamsize n)\n   // write up to n chars to out_cur from s, returning number assigned\n   // NB *sputn will happily put '\\0' into your stream if you give it a chance*\n   str_tmp = strb_03.str();\n-  sz1 = str_tmp.length();\n-  strmsz_1 = strb_03.sputn(\"racadabras\", 10);//\"abracadabras or what?\"\n-  sz2 = strb_03.str().length();\n-  strmsz_2 = strb_03.sputn(\", i wanna reach out and\", 10);\n-  sz2 = strb_03.str().length();\n+  str_tmp.length();\n+  strb_03.sputn(\"racadabras\", 10);//\"abracadabras or what?\"\n+  strb_03.str().length();\n+  strb_03.sputn(\", i wanna reach out and\", 10);\n+  strb_03.str().length();\n   str_tmp = strb_02.str();\n-  strmsz_1 = strb_02.sputn(\"racadabra\", 10);\n+  strb_02.sputn(\"racadabra\", 10);\n \n   // PUTBACK\n \n   // int_type sputbackc(char_type c)\n   // if in_cur not avail || ! traits::eq(c, gptr() [-1]), return pbfail\n   // otherwise decrements in_cur and returns *gptr()\n-  strmsz_1 = strb_01.in_avail();\n+  strb_01.in_avail();\n   str_tmp = strb_01.str();\n   c1 = strb_01.sgetc(); //\"mykonos. . . 'o'r what?\"\n   c2 = strb_01.sputbackc('z');//\"mykonos. . .zor what?\"\n@@ -76,7 +75,7 @@ void test04()\n   VERIFY( str_tmp.size() == str_tmp2.size() );\n   //test for _in_cur == _in_beg\n   strb_01.str(str_tmp);\n-  strmsz_1 = strb_01.in_avail();\n+  strb_01.in_avail();\n   c1 = strb_01.sgetc(); //\"'m'ykonos. . . or what?\"\n   c2 = strb_01.sputbackc('z');//\"mykonos. . . or what?\"\n   c3 = strb_01.sgetc();\n@@ -88,7 +87,7 @@ void test04()\n   VERIFY( str_tmp.size() == strb_01.str().size() );\n   // test for replacing char with identical one\n   strb_01.str(str_01); //reset\n-  strmsz_1 = strb_01.in_avail();\n+  strb_01.in_avail();\n   strb_01.sbumpc();\n   strb_01.sbumpc();\n   c1 = strb_01.sgetc(); //\"my'k'onos. . . or what?\"\n@@ -100,7 +99,7 @@ void test04()\n   VERIFY( strb_01.str() == str_01 );\n   VERIFY( str_01.size() == strb_01.str().size() );\n   //test for ios_base::out\n-  strmsz_2 = strb_03.in_avail();\n+  strb_03.in_avail();\n   c4 = strb_03.sputbackc('x');\n   VERIFY( c4 == traits_type::eof() );\n }"}, {"sha": "e0c91a3b2c05f3e5f3fb38efd2f8f9e14c6b3af1", "filename": "libstdc++-v3/testsuite/27_io/basic_stringbuf/sputbackc/wchar_t/1.cc", "status": "modified", "additions": 13, "deletions": 14, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/567d4027a3ca0dc36fd0d828925a34a237ad62db/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_stringbuf%2Fsputbackc%2Fwchar_t%2F1.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/567d4027a3ca0dc36fd0d828925a34a237ad62db/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_stringbuf%2Fsputbackc%2Fwchar_t%2F1.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_stringbuf%2Fsputbackc%2Fwchar_t%2F1.cc?ref=567d4027a3ca0dc36fd0d828925a34a237ad62db", "patch": "@@ -1,6 +1,6 @@\n // 981208 bkoz test functionality of basic_stringbuf for char_type == wchar_t\n \n-// Copyright (C) 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2009\n+// Copyright (C) 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2009, 2010\n // Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n@@ -33,7 +33,6 @@ void test04()\n {\n   bool test __attribute__((unused)) = true;\n   std::wstring \t\tstr_tmp, str_tmp2;\n-  std::streamsize \t\tstrmsz_1, strmsz_2;\n   typedef std::wstringbuf::int_type int_type;\n   typedef std::wstringbuf::traits_type traits_type;\n \n@@ -44,27 +43,27 @@ void test04()\n \n   // PUT\n   strb_03.str(str_01); //reset\n-  std::wstring::size_type sz1 = strb_03.str().length();\n-  std::wstring::size_type sz2 = strb_03.str().length();\n+  strb_03.str().length();\n+  strb_03.str().length();\n   \n   // streamsize sputn(const char_typs* s, streamsize n)\n   // write up to n chars to out_cur from s, returning number assigned\n   // NB *sputn will happily put '\\0' into your stream if you give it a chance*\n   str_tmp = strb_03.str();\n-  sz1 = str_tmp.length();\n-  strmsz_1 = strb_03.sputn(L\"racadabras\", 10);//\"abracadabras or what?\"\n-  sz2 = strb_03.str().length();\n-  strmsz_2 = strb_03.sputn(L\", i wanna reach out and\", 10);\n-  sz2 = strb_03.str().length();\n+  str_tmp.length();\n+  strb_03.sputn(L\"racadabras\", 10);//\"abracadabras or what?\"\n+  strb_03.str().length();\n+  strb_03.sputn(L\", i wanna reach out and\", 10);\n+  strb_03.str().length();\n   str_tmp = strb_02.str();\n-  strmsz_1 = strb_02.sputn(L\"racadabra\", 10);\n+  strb_02.sputn(L\"racadabra\", 10);\n \n   // PUTBACK\n \n   // int_type sputbackc(char_type c)\n   // if in_cur not avail || ! traits::eq(c, gptr() [-1]), return pbfail\n   // otherwise decrements in_cur and returns *gptr()\n-  strmsz_1 = strb_01.in_avail();\n+  strb_01.in_avail();\n   str_tmp = strb_01.str();\n   c1 = strb_01.sgetc(); //\"mykonos. . . 'o'r what?\"\n   c2 = strb_01.sputbackc(L'z');//\"mykonos. . .zor what?\"\n@@ -76,7 +75,7 @@ void test04()\n   VERIFY( str_tmp.size() == str_tmp2.size() );\n   //test for _in_cur == _in_beg\n   strb_01.str(str_tmp);\n-  strmsz_1 = strb_01.in_avail();\n+  strb_01.in_avail();\n   c1 = strb_01.sgetc(); //\"'m'ykonos. . . or what?\"\n   c2 = strb_01.sputbackc(L'z');//\"mykonos. . . or what?\"\n   c3 = strb_01.sgetc();\n@@ -88,7 +87,7 @@ void test04()\n   VERIFY( str_tmp.size() == strb_01.str().size() );\n   // test for replacing char with identical one\n   strb_01.str(str_01); //reset\n-  strmsz_1 = strb_01.in_avail();\n+  strb_01.in_avail();\n   strb_01.sbumpc();\n   strb_01.sbumpc();\n   c1 = strb_01.sgetc(); //\"my'k'onos. . . or what?\"\n@@ -100,7 +99,7 @@ void test04()\n   VERIFY( strb_01.str() == str_01 );\n   VERIFY( str_01.size() == strb_01.str().size() );\n   //test for ios_base::out\n-  strmsz_2 = strb_03.in_avail();\n+  strb_03.in_avail();\n   c4 = strb_03.sputbackc(L'x');\n   VERIFY( c4 == traits_type::eof() );\n }"}, {"sha": "ae038e518c3b95ab44316e6e2ac0fac9d30100eb", "filename": "libstdc++-v3/testsuite/27_io/basic_stringbuf/sungetc/char/1.cc", "status": "modified", "additions": 17, "deletions": 18, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/567d4027a3ca0dc36fd0d828925a34a237ad62db/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_stringbuf%2Fsungetc%2Fchar%2F1.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/567d4027a3ca0dc36fd0d828925a34a237ad62db/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_stringbuf%2Fsungetc%2Fchar%2F1.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_stringbuf%2Fsungetc%2Fchar%2F1.cc?ref=567d4027a3ca0dc36fd0d828925a34a237ad62db", "patch": "@@ -1,6 +1,6 @@\n // 981208 bkoz test functionality of basic_stringbuf for char_type == char\n \n-// Copyright (C) 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2009\n+// Copyright (C) 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2009, 2010\n // Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n@@ -33,7 +33,6 @@ void test04()\n {\n   bool test __attribute__((unused)) = true;\n   std::string \t\tstr_tmp;\n-  std::streamsize \t\tstrmsz_1, strmsz_2;\n   typedef std::stringbuf::int_type int_type;\n   typedef std::stringbuf::traits_type traits_type;\n \n@@ -44,55 +43,55 @@ void test04()\n \n   // PUT\n   strb_03.str(str_01); //reset\n-  std::string::size_type sz1 = strb_03.str().length();\n-  std::string::size_type sz2 = strb_03.str().length();\n+  strb_03.str().length();\n+  strb_03.str().length();\n   \n   // streamsize sputn(const char_typs* s, streamsize n)\n   // write up to n chars to out_cur from s, returning number assigned\n   // NB *sputn will happily put '\\0' into your stream if you give it a chance*\n   str_tmp = strb_03.str();\n-  sz1 = str_tmp.length();\n-  strmsz_1 = strb_03.sputn(\"racadabras\", 10);//\"abracadabras or what?\"\n-  sz2 = strb_03.str().length();\n-  strmsz_2 = strb_03.sputn(\", i wanna reach out and\", 10);\n-  sz2 = strb_03.str().length();\n+  str_tmp.length();\n+  strb_03.sputn(\"racadabras\", 10);//\"abracadabras or what?\"\n+  strb_03.str().length();\n+  strb_03.sputn(\", i wanna reach out and\", 10);\n+  strb_03.str().length();\n   str_tmp = strb_02.str();\n-  strmsz_1 = strb_02.sputn(\"racadabra\", 10);\n+  strb_02.sputn(\"racadabra\", 10);\n \n   // PUTBACK\n \n   // int_type sputbackc(char_type c)\n   // if in_cur not avail || ! traits::eq(c, gptr() [-1]), return pbfail\n   // otherwise decrements in_cur and returns *gptr()\n-  strmsz_1 = strb_01.in_avail();\n+  strb_01.in_avail();\n   str_tmp = strb_01.str();\n   c1 = strb_01.sgetc(); //\"mykonos. . . 'o'r what?\"\n   c2 = strb_01.sputbackc('z');//\"mykonos. . .zor what?\"\n   c3 = strb_01.sgetc();\n   //test for _in_cur == _in_beg\n   strb_01.str(str_tmp);\n-  strmsz_1 = strb_01.in_avail();\n+  strb_01.in_avail();\n   c1 = strb_01.sgetc(); //\"'m'ykonos. . . or what?\"\n   c2 = strb_01.sputbackc('z');//\"mykonos. . . or what?\"\n   c3 = strb_01.sgetc();\n   // test for replacing char with identical one\n   strb_01.str(str_01); //reset\n-  strmsz_1 = strb_01.in_avail();\n+  strb_01.in_avail();\n   strb_01.sbumpc();\n   strb_01.sbumpc();\n   c1 = strb_01.sgetc(); //\"my'k'onos. . . or what?\"\n   c2 = strb_01.sputbackc('y');//\"mykonos. . . or what?\"\n   c3 = strb_01.sgetc();\n   //test for ios_base::out\n-  strmsz_2 = strb_03.in_avail();\n+  strb_03.in_avail();\n   c4 = strb_03.sputbackc('x');\n \n   // int_type sungetc()\n   // if in_cur not avail, return pbackfail(), else decrement and\n   // return to_int_type(*gptr())\n   for (int i = 0; i<12; ++i)\n     strb_01.sbumpc();\n-  strmsz_1 = strb_01.in_avail();\n+  strb_01.in_avail();\n   str_tmp = strb_01.str();\n   c1 = strb_01.sgetc(); //\"mykonos. . . 'o'r what?\"\n   c2 = strb_01.sungetc();//\"mykonos. . . or what?\"\n@@ -105,7 +104,7 @@ void test04()\n   VERIFY( str_01.size() == strb_01.str().size() );\n   //test for _in_cur == _in_beg\n   strb_01.str(str_tmp);\n-  strmsz_1 = strb_01.in_avail();\n+  strb_01.in_avail();\n   c1 = strb_01.sgetc(); //\"'m'ykonos. . . or what?\"\n   c2 = strb_01.sungetc();//\"mykonos. . . or what?\"\n   c3 = strb_01.sgetc();\n@@ -117,7 +116,7 @@ void test04()\n   VERIFY( str_01.size() == strb_01.str().size() );\n   // test for replacing char with identical one\n   strb_01.str(str_01); //reset\n-  strmsz_1 = strb_01.in_avail();\n+  strb_01.in_avail();\n   strb_01.sbumpc();\n   strb_01.sbumpc();\n   c1 = strb_01.sgetc(); //\"my'k'onos. . . or what?\"\n@@ -129,7 +128,7 @@ void test04()\n   VERIFY( strb_01.str() == str_01 );\n   VERIFY( str_01.size() == strb_01.str().size() );\n   //test for ios_base::out\n-  strmsz_2 = strb_03.in_avail();\n+  strb_03.in_avail();\n   c4 = strb_03.sungetc();\n   VERIFY( c4 == traits_type::eof() );\n }"}, {"sha": "767b7eac50d7aa453916897cdd570c5a51623182", "filename": "libstdc++-v3/testsuite/27_io/basic_stringbuf/sungetc/wchar_t/1.cc", "status": "modified", "additions": 17, "deletions": 18, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/567d4027a3ca0dc36fd0d828925a34a237ad62db/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_stringbuf%2Fsungetc%2Fwchar_t%2F1.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/567d4027a3ca0dc36fd0d828925a34a237ad62db/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_stringbuf%2Fsungetc%2Fwchar_t%2F1.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_stringbuf%2Fsungetc%2Fwchar_t%2F1.cc?ref=567d4027a3ca0dc36fd0d828925a34a237ad62db", "patch": "@@ -1,6 +1,6 @@\n // 981208 bkoz test functionality of basic_stringbuf for char_type == wchar_t\n \n-// Copyright (C) 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2009\n+// Copyright (C) 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2009, 2010\n // Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n@@ -33,7 +33,6 @@ void test04()\n {\n   bool test __attribute__((unused)) = true;\n   std::wstring \t\tstr_tmp;\n-  std::streamsize \t\tstrmsz_1, strmsz_2;\n   typedef std::wstringbuf::int_type int_type;\n   typedef std::wstringbuf::traits_type traits_type;\n \n@@ -44,55 +43,55 @@ void test04()\n \n   // PUT\n   strb_03.str(str_01); //reset\n-  std::wstring::size_type sz1 = strb_03.str().length();\n-  std::wstring::size_type sz2 = strb_03.str().length();\n+  strb_03.str().length();\n+  strb_03.str().length();\n   \n   // streamsize sputn(const char_typs* s, streamsize n)\n   // write up to n chars to out_cur from s, returning number assigned\n   // NB *sputn will happily put '\\0' into your stream if you give it a chance*\n   str_tmp = strb_03.str();\n-  sz1 = str_tmp.length();\n-  strmsz_1 = strb_03.sputn(L\"racadabras\", 10);//\"abracadabras or what?\"\n-  sz2 = strb_03.str().length();\n-  strmsz_2 = strb_03.sputn(L\", i wanna reach out and\", 10);\n-  sz2 = strb_03.str().length();\n+  str_tmp.length();\n+  strb_03.sputn(L\"racadabras\", 10);//\"abracadabras or what?\"\n+  strb_03.str().length();\n+  strb_03.sputn(L\", i wanna reach out and\", 10);\n+  strb_03.str().length();\n   str_tmp = strb_02.str();\n-  strmsz_1 = strb_02.sputn(L\"racadabra\", 10);\n+  strb_02.sputn(L\"racadabra\", 10);\n \n   // PUTBACK\n \n   // int_type sputbackc(char_type c)\n   // if in_cur not avail || ! traits::eq(c, gptr() [-1]), return pbfail\n   // otherwise decrements in_cur and returns *gptr()\n-  strmsz_1 = strb_01.in_avail();\n+  strb_01.in_avail();\n   str_tmp = strb_01.str();\n   c1 = strb_01.sgetc(); //\"mykonos. . . 'o'r what?\"\n   c2 = strb_01.sputbackc('z');//\"mykonos. . .zor what?\"\n   c3 = strb_01.sgetc();\n   //test for _in_cur == _in_beg\n   strb_01.str(str_tmp);\n-  strmsz_1 = strb_01.in_avail();\n+  strb_01.in_avail();\n   c1 = strb_01.sgetc(); //\"'m'ykonos. . . or what?\"\n   c2 = strb_01.sputbackc(L'z');//\"mykonos. . . or what?\"\n   c3 = strb_01.sgetc();\n   // test for replacing char with identical one\n   strb_01.str(str_01); //reset\n-  strmsz_1 = strb_01.in_avail();\n+  strb_01.in_avail();\n   strb_01.sbumpc();\n   strb_01.sbumpc();\n   c1 = strb_01.sgetc(); //\"my'k'onos. . . or what?\"\n   c2 = strb_01.sputbackc(L'y');//\"mykonos. . . or what?\"\n   c3 = strb_01.sgetc();\n   //test for ios_base::out\n-  strmsz_2 = strb_03.in_avail();\n+  strb_03.in_avail();\n   c4 = strb_03.sputbackc(L'x');\n \n   // int_type sungetc()\n   // if in_cur not avail, return pbackfail(), else decrement and\n   // return to_int_type(*gptr())\n   for (int i = 0; i<12; ++i)\n     strb_01.sbumpc();\n-  strmsz_1 = strb_01.in_avail();\n+  strb_01.in_avail();\n   str_tmp = strb_01.str();\n   c1 = strb_01.sgetc(); //\"mykonos. . . 'o'r what?\"\n   c2 = strb_01.sungetc();//\"mykonos. . . or what?\"\n@@ -105,7 +104,7 @@ void test04()\n   VERIFY( str_01.size() == strb_01.str().size() );\n   //test for _in_cur == _in_beg\n   strb_01.str(str_tmp);\n-  strmsz_1 = strb_01.in_avail();\n+  strb_01.in_avail();\n   c1 = strb_01.sgetc(); //\"'m'ykonos. . . or what?\"\n   c2 = strb_01.sungetc();//\"mykonos. . . or what?\"\n   c3 = strb_01.sgetc();\n@@ -117,7 +116,7 @@ void test04()\n   VERIFY( str_01.size() == strb_01.str().size() );\n   // test for replacing char with identical one\n   strb_01.str(str_01); //reset\n-  strmsz_1 = strb_01.in_avail();\n+  strb_01.in_avail();\n   strb_01.sbumpc();\n   strb_01.sbumpc();\n   c1 = strb_01.sgetc(); //\"my'k'onos. . . or what?\"\n@@ -129,7 +128,7 @@ void test04()\n   VERIFY( strb_01.str() == str_01 );\n   VERIFY( str_01.size() == strb_01.str().size() );\n   //test for ios_base::out\n-  strmsz_2 = strb_03.in_avail();\n+  strb_03.in_avail();\n   c4 = strb_03.sungetc();\n   VERIFY( c4 == traits_type::eof() );\n }"}, {"sha": "accb56535031ef86b23464ca367aa1f151fab092", "filename": "libstdc++-v3/testsuite/27_io/fpos/mbstate_t/2.cc", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/567d4027a3ca0dc36fd0d828925a34a237ad62db/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Ffpos%2Fmbstate_t%2F2.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/567d4027a3ca0dc36fd0d828925a34a237ad62db/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Ffpos%2Fmbstate_t%2F2.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Ffpos%2Fmbstate_t%2F2.cc?ref=567d4027a3ca0dc36fd0d828925a34a237ad62db", "patch": "@@ -1,6 +1,6 @@\n // 1999-09-20 bkoz\n \n-// Copyright (C) 1999, 2001, 2003, 2009 Free Software Foundation, Inc.\n+// Copyright (C) 1999, 2001, 2003, 2009, 2010 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -60,7 +60,6 @@ void test02()\n   pos04 += off02;\n   VERIFY( pos03 == pos04 );\n   std::streampos pos05 = pos03;\n-  std::streampos pos06 = pos03 + off02;\n   VERIFY ( pos05 == pos03 );\n \n   // q = p - o\n@@ -69,7 +68,6 @@ void test02()\n   pos04 -= off02;\n   VERIFY( pos03 == pos04 );\n   std::streampos pos07 = pos03;\n-  std::streampos pos08 = pos03 - off02;\n   VERIFY ( pos07 == pos03 );\n \n   // o = p - q"}, {"sha": "34c557bfb16cc9f9b5ac9c79ff6953e231d0a501", "filename": "libstdc++-v3/testsuite/27_io/fpos/mbstate_t/3.cc", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/567d4027a3ca0dc36fd0d828925a34a237ad62db/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Ffpos%2Fmbstate_t%2F3.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/567d4027a3ca0dc36fd0d828925a34a237ad62db/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Ffpos%2Fmbstate_t%2F3.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Ffpos%2Fmbstate_t%2F3.cc?ref=567d4027a3ca0dc36fd0d828925a34a237ad62db", "patch": "@@ -1,6 +1,6 @@\n // 1999-09-20 bkoz\n \n-// Copyright (C) 1999, 2001, 2003, 2009 Free Software Foundation, Inc.\n+// Copyright (C) 1999, 2001, 2003, 2009, 2010 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -34,6 +34,7 @@ void test03()\n   // casts to const streamoff\n   const std::streampos pos01 = 0;\n   off01 = std::streamoff(pos01);\n+  off01 = off01; // Suppress unused warning.\n \n   // equality/inequality with const args\n   const std::streampos pos02(54);"}, {"sha": "9e3cad5d59ed963cc25e1ca6f575c95eb3e00762", "filename": "libstdc++-v3/testsuite/27_io/fpos/mbstate_t/4_neg.cc", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/567d4027a3ca0dc36fd0d828925a34a237ad62db/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Ffpos%2Fmbstate_t%2F4_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/567d4027a3ca0dc36fd0d828925a34a237ad62db/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Ffpos%2Fmbstate_t%2F4_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Ffpos%2Fmbstate_t%2F4_neg.cc?ref=567d4027a3ca0dc36fd0d828925a34a237ad62db", "patch": "@@ -1,4 +1,4 @@\n-// Copyright (C) 2003, 2009\n+// Copyright (C) 2003, 2009, 2010\n // Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n@@ -32,6 +32,8 @@ void test04()\n \n   // Explicit conversion\n   n = static_cast<long>(pos); // { dg-error \"invalid static_cast\" \"\" { xfail *-*-* } }\n+\n+  n = n; // Suppress unused warning.\n }\n \n int main()"}, {"sha": "a32e34adfac15bd3370d147fbf2acd3004a79c43", "filename": "libstdc++-v3/testsuite/27_io/fpos/mbstate_t/5.cc", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/567d4027a3ca0dc36fd0d828925a34a237ad62db/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Ffpos%2Fmbstate_t%2F5.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/567d4027a3ca0dc36fd0d828925a34a237ad62db/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Ffpos%2Fmbstate_t%2F5.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Ffpos%2Fmbstate_t%2F5.cc?ref=567d4027a3ca0dc36fd0d828925a34a237ad62db", "patch": "@@ -2,7 +2,7 @@\n \n // 2006-03-13  Paolo Carlini  <pcarlini@suse.de>\n \n-// Copyright (C) 2006, 2009 Free Software Foundation, Inc.\n+// Copyright (C) 2006, 2009, 2010 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -32,7 +32,9 @@ void test01()\n \n   test01 = pos01 == -1;\n   test01 = -1 == pos01;  \n+  test01 = test01; // Suppress unused warning.\n \n   test02 = pos02 != -1;\n   test02 = -1 != pos02;\n+  test02 = test02; // Suppress unused warning.\n }"}, {"sha": "ddb29c5efc7190b71bbe21106d19c31a0c2db415", "filename": "libstdc++-v3/testsuite/27_io/ios_base/failure/what-3.cc", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/567d4027a3ca0dc36fd0d828925a34a237ad62db/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fios_base%2Ffailure%2Fwhat-3.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/567d4027a3ca0dc36fd0d828925a34a237ad62db/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fios_base%2Ffailure%2Fwhat-3.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fios_base%2Ffailure%2Fwhat-3.cc?ref=567d4027a3ca0dc36fd0d828925a34a237ad62db", "patch": "@@ -1,6 +1,6 @@\n // 2001-02-26 Benjamin Kosnik  <bkoz@redhat.com>\n \n-// Copyright (C) 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2009\n+// Copyright (C) 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2009, 2010\n // Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n@@ -34,6 +34,8 @@ void allocate_on_stack(void)\n   __extension__ char array[num];\n   for (size_t i = 0; i < num; i++) \n     array[i]=0;\n+  for (size_t i = 0; i < num; i++) \n+    array[i]=array[i]; // Suppress unused warning.\n }\n \n void test04()"}, {"sha": "33db5fed1568d2634747aaa824c0fee9bbfc00b3", "filename": "libstdc++-v3/testsuite/27_io/types/2.cc", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/567d4027a3ca0dc36fd0d828925a34a237ad62db/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Ftypes%2F2.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/567d4027a3ca0dc36fd0d828925a34a237ad62db/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Ftypes%2F2.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Ftypes%2F2.cc?ref=567d4027a3ca0dc36fd0d828925a34a237ad62db", "patch": "@@ -1,4 +1,4 @@\n-// Copyright (C) 2003, 2004, 2009 Free Software Foundation\n+// Copyright (C) 2003, 2004, 2009, 2010 Free Software Foundation\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -30,6 +30,7 @@ void test01()\n \n   // Wrapped in pos_type is EOF.\n   soff = -1;\n+  soff = soff; // Suppress unused warning.\n }\n \n int main(void)"}, {"sha": "b7cb05d0c65e56af98a54fbd994bffd0fbee790c", "filename": "libstdc++-v3/testsuite/29_atomics/atomic/cons/assign_neg.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/567d4027a3ca0dc36fd0d828925a34a237ad62db/libstdc%2B%2B-v3%2Ftestsuite%2F29_atomics%2Fatomic%2Fcons%2Fassign_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/567d4027a3ca0dc36fd0d828925a34a237ad62db/libstdc%2B%2B-v3%2Ftestsuite%2F29_atomics%2Fatomic%2Fcons%2Fassign_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F29_atomics%2Fatomic%2Fcons%2Fassign_neg.cc?ref=567d4027a3ca0dc36fd0d828925a34a237ad62db", "patch": "@@ -28,7 +28,7 @@ int main()\n   return 0;\n }\n \n-// { dg-error \"used here\" \"\" { target *-*-* } 521 }\n+// { dg-error \"used here\" \"\" { target *-*-* } 522 }\n // { dg-error \"deleted function\" \"\" { target *-*-* } 230 }\n // { dg-error \"deleted function\" \"\" { target *-*-* } 248 }\n // { dg-error \"deleted function\" \"\" { target *-*-* } 266 }"}, {"sha": "26d0d03e232eb605a2dd3930a08380c42ea92d5f", "filename": "libstdc++-v3/testsuite/29_atomics/atomic/cons/copy_neg.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/567d4027a3ca0dc36fd0d828925a34a237ad62db/libstdc%2B%2B-v3%2Ftestsuite%2F29_atomics%2Fatomic%2Fcons%2Fcopy_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/567d4027a3ca0dc36fd0d828925a34a237ad62db/libstdc%2B%2B-v3%2Ftestsuite%2F29_atomics%2Fatomic%2Fcons%2Fcopy_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F29_atomics%2Fatomic%2Fcons%2Fcopy_neg.cc?ref=567d4027a3ca0dc36fd0d828925a34a237ad62db", "patch": "@@ -28,7 +28,7 @@ int main()\n   return 0;\n }\n \n-// { dg-error \"used here\" \"\" { target *-*-* } 560 }\n+// { dg-error \"used here\" \"\" { target *-*-* } 561 }\n // { dg-error \"deleted function\" \"\" { target *-*-* } 229 }\n // { dg-error \"deleted function\" \"\" { target *-*-* } 247 }\n // { dg-error \"deleted function\" \"\" { target *-*-* } 265 }"}, {"sha": "5cd2ef9fc4e9b217096d9c8d5b254ca0d30ef309", "filename": "libstdc++-v3/testsuite/29_atomics/atomic_address/cons/aggregate.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/567d4027a3ca0dc36fd0d828925a34a237ad62db/libstdc%2B%2B-v3%2Ftestsuite%2F29_atomics%2Fatomic_address%2Fcons%2Faggregate.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/567d4027a3ca0dc36fd0d828925a34a237ad62db/libstdc%2B%2B-v3%2Ftestsuite%2F29_atomics%2Fatomic_address%2Fcons%2Faggregate.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F29_atomics%2Fatomic_address%2Fcons%2Faggregate.cc?ref=567d4027a3ca0dc36fd0d828925a34a237ad62db", "patch": "@@ -23,6 +23,6 @@\n \n int main()\n {\n-  std::atomic_address a = { { NULL } };\n+  std::atomic_address a __attribute__((unused)) = { { NULL } };\n   return 0;\n }"}, {"sha": "b772440341273694a383c5c59dd0d1063deeb73e", "filename": "libstdc++-v3/testsuite/29_atomics/atomic_flag/cons/1.cc", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/567d4027a3ca0dc36fd0d828925a34a237ad62db/libstdc%2B%2B-v3%2Ftestsuite%2F29_atomics%2Fatomic_flag%2Fcons%2F1.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/567d4027a3ca0dc36fd0d828925a34a237ad62db/libstdc%2B%2B-v3%2Ftestsuite%2F29_atomics%2Fatomic_flag%2Fcons%2F1.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F29_atomics%2Fatomic_flag%2Fcons%2F1.cc?ref=567d4027a3ca0dc36fd0d828925a34a237ad62db", "patch": "@@ -1,7 +1,7 @@\n // { dg-options \"-std=gnu++0x\" }\n // { dg-do compile }\n \n-// Copyright (C) 2008, 2009 Free Software Foundation, Inc.\n+// Copyright (C) 2008, 2009, 2010 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -23,5 +23,5 @@\n void test01()\n {\n   using namespace std;\n-  atomic_flag af = ATOMIC_FLAG_INIT;\n+  atomic_flag af __attribute__((unused)) = ATOMIC_FLAG_INIT;\n }"}, {"sha": "b5fc5c33553d717c478b48826f87b440e6fbb53d", "filename": "libstdc++-v3/testsuite/29_atomics/atomic_integral/cons/assign_neg.cc", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/567d4027a3ca0dc36fd0d828925a34a237ad62db/libstdc%2B%2B-v3%2Ftestsuite%2F29_atomics%2Fatomic_integral%2Fcons%2Fassign_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/567d4027a3ca0dc36fd0d828925a34a237ad62db/libstdc%2B%2B-v3%2Ftestsuite%2F29_atomics%2Fatomic_integral%2Fcons%2Fassign_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F29_atomics%2Fatomic_integral%2Fcons%2Fassign_neg.cc?ref=567d4027a3ca0dc36fd0d828925a34a237ad62db", "patch": "@@ -1,7 +1,7 @@\n // { dg-options \"-std=gnu++0x\" }\n // { dg-do compile }\n \n-// Copyright (C) 2008, 2009 Free Software Foundation, Inc.\n+// Copyright (C) 2008, 2009, 2010 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -29,11 +29,11 @@ int main()\n   return 0;\n }\n \n-// { dg-error \"used here\" \"\" { target *-*-* } 521 }\n+// { dg-error \"used here\" \"\" { target *-*-* } 522 }\n // { dg-excess-errors \"deleted function\" }\n // { dg-excess-errors \"deleted function\" }\n // { dg-error \"instantiated from\" \"\" { target *-*-* } 28 }\n-// { dg-error \"instantiated from\" \"\" { target *-*-* } 528 }\n+// { dg-error \"instantiated from\" \"\" { target *-*-* } 529 }\n // { dg-error \"instantiated from\" \"\" { target *-*-* } 170 }\n // { dg-error \"instantiated from\" \"\" { target *-*-* } 399 }\n // { dg-error \"instantiated from\" \"\" { target *-*-* } 168 }"}, {"sha": "e1559a5e379c964283b09277922264a1e33d6bdf", "filename": "libstdc++-v3/testsuite/29_atomics/atomic_integral/cons/copy_neg.cc", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/567d4027a3ca0dc36fd0d828925a34a237ad62db/libstdc%2B%2B-v3%2Ftestsuite%2F29_atomics%2Fatomic_integral%2Fcons%2Fcopy_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/567d4027a3ca0dc36fd0d828925a34a237ad62db/libstdc%2B%2B-v3%2Ftestsuite%2F29_atomics%2Fatomic_integral%2Fcons%2Fcopy_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F29_atomics%2Fatomic_integral%2Fcons%2Fcopy_neg.cc?ref=567d4027a3ca0dc36fd0d828925a34a237ad62db", "patch": "@@ -1,7 +1,7 @@\n // { dg-options \"-std=gnu++0x\" }\n // { dg-do compile }\n \n-// Copyright (C) 2008, 2009 Free Software Foundation, Inc.\n+// Copyright (C) 2008, 2009, 2010 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -29,11 +29,11 @@ int main()\n   return 0;\n }\n \n-// { dg-error \"used here\" \"\" { target *-*-* } 560 }\n+// { dg-error \"used here\" \"\" { target *-*-* } 561 }\n // { dg-excess-errors \"deleted function\" }\n // { dg-excess-errors \"deleted function\" }\n // { dg-error \"instantiated from\" \"\" { target *-*-* } 28 }\n-// { dg-error \"instantiated from\" \"\" { target *-*-* } 566 }\n+// { dg-error \"instantiated from\" \"\" { target *-*-* } 567 }\n // { dg-error \"instantiated from\" \"\" { target *-*-* } 170 }\n // { dg-error \"instantiated from\" \"\" { target *-*-* } 399 }\n // { dg-error \"instantiated from\" \"\" { target *-*-* } 168 }"}, {"sha": "2a112c958383d9face545cbacf47f82b85c16261", "filename": "libstdc++-v3/testsuite/29_atomics/atomic_integral/operators/bitwise_neg.cc", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/567d4027a3ca0dc36fd0d828925a34a237ad62db/libstdc%2B%2B-v3%2Ftestsuite%2F29_atomics%2Fatomic_integral%2Foperators%2Fbitwise_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/567d4027a3ca0dc36fd0d828925a34a237ad62db/libstdc%2B%2B-v3%2Ftestsuite%2F29_atomics%2Fatomic_integral%2Foperators%2Fbitwise_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F29_atomics%2Fatomic_integral%2Foperators%2Fbitwise_neg.cc?ref=567d4027a3ca0dc36fd0d828925a34a237ad62db", "patch": "@@ -2,7 +2,7 @@\n // { dg-do compile }\n // -*- C++ -*-\n \n-// Copyright (C) 2008, 2009 Free Software Foundation, Inc.\n+// Copyright (C) 2008, 2009, 2010 Free Software Foundation, Inc.\n \n // This library is free software; you can redistribute it and/or\n // modify it under the terms of the GNU General Public License as\n@@ -27,7 +27,7 @@ int main()\n   return 0;\n }\n \n-// { dg-error \"operator\" \"\" { target *-*-* } 404 }\n // { dg-error \"operator\" \"\" { target *-*-* } 405 }\n // { dg-error \"operator\" \"\" { target *-*-* } 406 }\n+// { dg-error \"operator\" \"\" { target *-*-* } 407 }\n // { dg-excess-errors \"In file included from\" }"}, {"sha": "49cbc0238be991771a473433c3ba1efb94701022", "filename": "libstdc++-v3/testsuite/29_atomics/atomic_integral/operators/decrement_neg.cc", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/567d4027a3ca0dc36fd0d828925a34a237ad62db/libstdc%2B%2B-v3%2Ftestsuite%2F29_atomics%2Fatomic_integral%2Foperators%2Fdecrement_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/567d4027a3ca0dc36fd0d828925a34a237ad62db/libstdc%2B%2B-v3%2Ftestsuite%2F29_atomics%2Fatomic_integral%2Foperators%2Fdecrement_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F29_atomics%2Fatomic_integral%2Foperators%2Fdecrement_neg.cc?ref=567d4027a3ca0dc36fd0d828925a34a237ad62db", "patch": "@@ -2,7 +2,7 @@\n // { dg-do compile }\n // -*- C++ -*-\n \n-// Copyright (C) 2008, 2009 Free Software Foundation, Inc.\n+// Copyright (C) 2008, 2009, 2010 Free Software Foundation, Inc.\n \n // This library is free software; you can redistribute it and/or\n // modify it under the terms of the GNU General Public License as\n@@ -28,7 +28,7 @@ int main()\n   return 0;\n }\n \n-// { dg-error \"operator\" \"\" { target *-*-* } 375 }\n // { dg-error \"operator\" \"\" { target *-*-* } 376 }\n // { dg-error \"operator\" \"\" { target *-*-* } 377 }\n+// { dg-error \"operator\" \"\" { target *-*-* } 378 }\n // { dg-excess-errors \"In file included from\" }"}, {"sha": "e5c9dfc4ced841c27fb19e0d6b1eac2ce951e7d2", "filename": "libstdc++-v3/testsuite/29_atomics/atomic_integral/operators/increment_neg.cc", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/567d4027a3ca0dc36fd0d828925a34a237ad62db/libstdc%2B%2B-v3%2Ftestsuite%2F29_atomics%2Fatomic_integral%2Foperators%2Fincrement_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/567d4027a3ca0dc36fd0d828925a34a237ad62db/libstdc%2B%2B-v3%2Ftestsuite%2F29_atomics%2Fatomic_integral%2Foperators%2Fincrement_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F29_atomics%2Fatomic_integral%2Foperators%2Fincrement_neg.cc?ref=567d4027a3ca0dc36fd0d828925a34a237ad62db", "patch": "@@ -2,7 +2,7 @@\n // { dg-do compile }\n // -*- C++ -*-\n \n-// Copyright (C) 2008, 2009 Free Software Foundation, Inc.\n+// Copyright (C) 2008, 2009, 2010 Free Software Foundation, Inc.\n \n // This library is free software; you can redistribute it and/or\n // modify it under the terms of the GNU General Public License as\n@@ -28,7 +28,7 @@ int main()\n   return 0;\n }\n \n-// { dg-error \"operator\" \"\" { target *-*-* } 353 }\n // { dg-error \"operator\" \"\" { target *-*-* } 354 }\n // { dg-error \"operator\" \"\" { target *-*-* } 355 }\n+// { dg-error \"operator\" \"\" { target *-*-* } 356 }\n // { dg-excess-errors \"In file included from\" }"}, {"sha": "be04a2c9060c25d89e970d016e5077c9d9bc7923", "filename": "libstdc++-v3/testsuite/tr1/5_numerical_facilities/random/discard_block/requirements/constants.cc", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/567d4027a3ca0dc36fd0d828925a34a237ad62db/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F5_numerical_facilities%2Frandom%2Fdiscard_block%2Frequirements%2Fconstants.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/567d4027a3ca0dc36fd0d828925a34a237ad62db/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F5_numerical_facilities%2Frandom%2Fdiscard_block%2Frequirements%2Fconstants.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F5_numerical_facilities%2Frandom%2Fdiscard_block%2Frequirements%2Fconstants.cc?ref=567d4027a3ca0dc36fd0d828925a34a237ad62db", "patch": "@@ -2,7 +2,7 @@\n //\n // 2009-09-29  Paolo Carlini <paolo.carlini@oracle.com>\n //\n-// Copyright (C) 2009 Free Software Foundation, Inc.\n+// Copyright (C) 2009, 2010 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -27,6 +27,7 @@ void test01()\n \n   const void* p = &db.block_size;\n   p = &db.used_block;\n+  p = p; // Suppress unused warning.\n }\n \n int main()"}, {"sha": "bdc366ea725e0e5dc51c25e4f0ba17b1ccdb5066", "filename": "libstdc++-v3/testsuite/tr1/5_numerical_facilities/random/linear_congruential/requirements/constants.cc", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/567d4027a3ca0dc36fd0d828925a34a237ad62db/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F5_numerical_facilities%2Frandom%2Flinear_congruential%2Frequirements%2Fconstants.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/567d4027a3ca0dc36fd0d828925a34a237ad62db/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F5_numerical_facilities%2Frandom%2Flinear_congruential%2Frequirements%2Fconstants.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F5_numerical_facilities%2Frandom%2Flinear_congruential%2Frequirements%2Fconstants.cc?ref=567d4027a3ca0dc36fd0d828925a34a237ad62db", "patch": "@@ -2,7 +2,7 @@\n //\n // 2009-09-29  Paolo Carlini <paolo.carlini@oracle.com>\n //\n-// Copyright (C) 2009 Free Software Foundation, Inc.\n+// Copyright (C) 2009, 2010 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -28,6 +28,7 @@ void test01()\n   const void* p = &lc.multiplier;\n   p = &lc.increment;\n   p = &lc.modulus;\n+  p = p; // Suppress unused warning.\n }\n \n int main()"}, {"sha": "52fd3a50ba23322ea8d5adf622c62abd0005b1ec", "filename": "libstdc++-v3/testsuite/tr1/5_numerical_facilities/random/mersenne_twister/requirements/constants.cc", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/567d4027a3ca0dc36fd0d828925a34a237ad62db/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F5_numerical_facilities%2Frandom%2Fmersenne_twister%2Frequirements%2Fconstants.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/567d4027a3ca0dc36fd0d828925a34a237ad62db/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F5_numerical_facilities%2Frandom%2Fmersenne_twister%2Frequirements%2Fconstants.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F5_numerical_facilities%2Frandom%2Fmersenne_twister%2Frequirements%2Fconstants.cc?ref=567d4027a3ca0dc36fd0d828925a34a237ad62db", "patch": "@@ -2,7 +2,7 @@\n //\n // 2009-09-29  Paolo Carlini <paolo.carlini@oracle.com>\n //\n-// Copyright (C) 2009 Free Software Foundation, Inc.\n+// Copyright (C) 2009, 2010 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -36,6 +36,7 @@ void test01()\n   p = &mt.output_t;\n   p = &mt.output_c;\n   p = &mt.output_l;\n+  p = p; // Suppress unused warning.\n }\n \n int main()"}, {"sha": "a34938ee0e0bbc9a19438e63709db19d4e8e987f", "filename": "libstdc++-v3/testsuite/tr1/5_numerical_facilities/random/subtract_with_carry/requirements/constants.cc", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/567d4027a3ca0dc36fd0d828925a34a237ad62db/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F5_numerical_facilities%2Frandom%2Fsubtract_with_carry%2Frequirements%2Fconstants.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/567d4027a3ca0dc36fd0d828925a34a237ad62db/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F5_numerical_facilities%2Frandom%2Fsubtract_with_carry%2Frequirements%2Fconstants.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F5_numerical_facilities%2Frandom%2Fsubtract_with_carry%2Frequirements%2Fconstants.cc?ref=567d4027a3ca0dc36fd0d828925a34a237ad62db", "patch": "@@ -2,7 +2,7 @@\n //\n // 2009-09-29  Paolo Carlini <paolo.carlini@oracle.com>\n //\n-// Copyright (C) 2009 Free Software Foundation, Inc.\n+// Copyright (C) 2009, 2010 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -28,6 +28,7 @@ void test01()\n   const void* p = &swc.modulus;\n   p = &swc.long_lag;\n   p = &swc.short_lag;\n+  p = p; // Suppress unused warning.\n }\n \n int main()"}, {"sha": "a0a360d730ba9392ba9ce5aa4f4608fb3e90c43a", "filename": "libstdc++-v3/testsuite/tr1/5_numerical_facilities/random/subtract_with_carry_01/requirements/constants.cc", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/567d4027a3ca0dc36fd0d828925a34a237ad62db/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F5_numerical_facilities%2Frandom%2Fsubtract_with_carry_01%2Frequirements%2Fconstants.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/567d4027a3ca0dc36fd0d828925a34a237ad62db/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F5_numerical_facilities%2Frandom%2Fsubtract_with_carry_01%2Frequirements%2Fconstants.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F5_numerical_facilities%2Frandom%2Fsubtract_with_carry_01%2Frequirements%2Fconstants.cc?ref=567d4027a3ca0dc36fd0d828925a34a237ad62db", "patch": "@@ -2,7 +2,7 @@\n //\n // 2009-09-29  Paolo Carlini <paolo.carlini@oracle.com>\n //\n-// Copyright (C) 2009 Free Software Foundation, Inc.\n+// Copyright (C) 2009, 2010 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -28,6 +28,7 @@ void test01()\n   const void* p = &swc_01.word_size;\n   p = &swc_01.long_lag;\n   p = &swc_01.short_lag;\n+  p = p; // Suppress unused warning.\n }\n \n int main()"}, {"sha": "3fbd55247aca991db40b5df227c835641b76808c", "filename": "libstdc++-v3/testsuite/tr1/5_numerical_facilities/random/xor_combine/requirements/constants.cc", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/567d4027a3ca0dc36fd0d828925a34a237ad62db/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F5_numerical_facilities%2Frandom%2Fxor_combine%2Frequirements%2Fconstants.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/567d4027a3ca0dc36fd0d828925a34a237ad62db/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F5_numerical_facilities%2Frandom%2Fxor_combine%2Frequirements%2Fconstants.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F5_numerical_facilities%2Frandom%2Fxor_combine%2Frequirements%2Fconstants.cc?ref=567d4027a3ca0dc36fd0d828925a34a237ad62db", "patch": "@@ -2,7 +2,7 @@\n //\n // 2009-09-29  Paolo Carlini <paolo.carlini@oracle.com>\n //\n-// Copyright (C) 2009 Free Software Foundation, Inc.\n+// Copyright (C) 2009, 2010 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -28,6 +28,7 @@ void test01()\n \n   const void* p = &xor_c.shift1;\n   p = &xor_c.shift2;\n+  p = p; // Suppress unused warning.\n }\n \n int main()"}, {"sha": "3189e7f81aa1f592d7eef19a454626a186ebb286", "filename": "libstdc++-v3/testsuite/tr1/6_containers/utility/pair.cc", "status": "modified", "additions": 5, "deletions": 3, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/567d4027a3ca0dc36fd0d828925a34a237ad62db/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F6_containers%2Futility%2Fpair.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/567d4027a3ca0dc36fd0d828925a34a237ad62db/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F6_containers%2Futility%2Fpair.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F6_containers%2Futility%2Fpair.cc?ref=567d4027a3ca0dc36fd0d828925a34a237ad62db", "patch": "@@ -1,6 +1,6 @@\n // 2004-09-23 Chris Jefferson <chris@bubblescope.net>\n \n-// Copyright (C) 2004, 2009 Free Software Foundation, Inc.\n+// Copyright (C) 2004, 2009, 2010 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -36,8 +36,10 @@ main()\n   VERIFY(tuple_size<test_pair_type>::value == 2);\n   // Test if tuple_element::type returns the correct type\n   blank_class blank;\n-  tuple_element<0, pair<blank_class, int> >::type blank2 = blank;\n-  tuple_element<1, pair<int ,blank_class> >::type blank3 = blank;\n+  tuple_element<0, pair<blank_class, int> >::type\n+    blank2 __attribute__((unused)) = blank;\n+  tuple_element<1, pair<int ,blank_class> >::type\n+    blank3 __attribute__((unused)) = blank;\n   pair<int,int> test_pair(1, 2);\n   VERIFY(get<0>(test_pair) == 1);\n   VERIFY(get<1>(test_pair) == 2);"}, {"sha": "862b0419f5097681af63a43acd37925b4318b4ee", "filename": "libstdc++-v3/testsuite/tr1/8_c_compatibility/cctype/functions.cc", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/567d4027a3ca0dc36fd0d828925a34a237ad62db/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F8_c_compatibility%2Fcctype%2Ffunctions.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/567d4027a3ca0dc36fd0d828925a34a237ad62db/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F8_c_compatibility%2Fcctype%2Ffunctions.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F8_c_compatibility%2Fcctype%2Ffunctions.cc?ref=567d4027a3ca0dc36fd0d828925a34a237ad62db", "patch": "@@ -2,7 +2,7 @@\n \n // 2006-01-25  Paolo Carlini  <pcarlini@suse.de>\n //\n-// Copyright (C) 2006, 2009 Free Software Foundation, Inc.\n+// Copyright (C) 2006, 2009, 2010 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -29,6 +29,7 @@ void test01()\n \n   int ch = 0, ret;\n   ret = std::tr1::isblank(ch);\n+  ret = ret; // Suppress unused warning.\n \n #endif\n }"}, {"sha": "5bffa0ef332e96193b3b7114c730c17f95c21cf6", "filename": "libstdc++-v3/testsuite/tr1/8_c_compatibility/cfenv/functions.cc", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/567d4027a3ca0dc36fd0d828925a34a237ad62db/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F8_c_compatibility%2Fcfenv%2Ffunctions.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/567d4027a3ca0dc36fd0d828925a34a237ad62db/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F8_c_compatibility%2Fcfenv%2Ffunctions.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F8_c_compatibility%2Fcfenv%2Ffunctions.cc?ref=567d4027a3ca0dc36fd0d828925a34a237ad62db", "patch": "@@ -2,7 +2,7 @@\n \n // 2006-01-26  Paolo Carlini  <pcarlini@suse.de>\n //\n-// Copyright (C) 2006, 2009 Free Software Foundation, Inc.\n+// Copyright (C) 2006, 2009, 2010 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -46,6 +46,7 @@ void test01()\n   ret = std::tr1::feholdexcept(penv);\n   ret = std::tr1::fesetenv(penv);\n   ret = std::tr1::feupdateenv(penv);\n+  ret = ret; // Suppress unused warning.\n \n #endif\n }"}, {"sha": "30c7b789f4a1cc4b1b7d372c46cf3ac08446ab4c", "filename": "libstdc++-v3/testsuite/tr1/8_c_compatibility/cinttypes/functions.cc", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/567d4027a3ca0dc36fd0d828925a34a237ad62db/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F8_c_compatibility%2Fcinttypes%2Ffunctions.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/567d4027a3ca0dc36fd0d828925a34a237ad62db/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F8_c_compatibility%2Fcinttypes%2Ffunctions.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F8_c_compatibility%2Fcinttypes%2Ffunctions.cc?ref=567d4027a3ca0dc36fd0d828925a34a237ad62db", "patch": "@@ -2,7 +2,7 @@\n \n // 2006-01-30  Paolo Carlini  <pcarlini@suse.de>\n //\n-// Copyright (C) 2006, 2007, 2008, 2009 Free Software Foundation, Inc.\n+// Copyright (C) 2006, 2007, 2008, 2009, 2010 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -53,5 +53,9 @@ void test01()\n   uret = std::tr1::wcstoumax(ws, wendptr, base);\n #endif\n \n+  ret = ret; // Suppress unused warnings.\n+  dret = dret;\n+  uret = uret;\n+\n #endif\n }"}, {"sha": "ae31a48ecf66763251e37a844107e492b75bdca2", "filename": "libstdc++-v3/testsuite/tr1/8_c_compatibility/cmath/functions.cc", "status": "modified", "additions": 8, "deletions": 1, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/567d4027a3ca0dc36fd0d828925a34a237ad62db/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F8_c_compatibility%2Fcmath%2Ffunctions.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/567d4027a3ca0dc36fd0d828925a34a237ad62db/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F8_c_compatibility%2Fcmath%2Ffunctions.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F8_c_compatibility%2Fcmath%2Ffunctions.cc?ref=567d4027a3ca0dc36fd0d828925a34a237ad62db", "patch": "@@ -2,7 +2,7 @@\n \n // 2006-02-07  Paolo Carlini  <pcarlini@suse.de>\n //\n-// Copyright (C) 2006, 2007, 2008, 2009 Free Software Foundation, Inc.\n+// Copyright (C) 2006, 2007, 2008, 2009, 2010 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -181,6 +181,13 @@ void test01()\n   ret = std::tr1::trunc(d0);\n   fret = std::tr1::truncf(f0);\n   ldret = std::tr1::truncl(ld0);\n+\n+  ret = ret; // Suppress unused warnings.\n+  iret = iret;\n+  lret = lret;\n+  llret = llret;\n+  fret = fret;\n+  ldret = ldret;\n   \n #endif\n }"}, {"sha": "cbf8c9592ebada66b851d533ad1ed3cc5fdab088", "filename": "libstdc++-v3/testsuite/tr1/8_c_compatibility/cmath/templates.cc", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/567d4027a3ca0dc36fd0d828925a34a237ad62db/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F8_c_compatibility%2Fcmath%2Ftemplates.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/567d4027a3ca0dc36fd0d828925a34a237ad62db/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F8_c_compatibility%2Fcmath%2Ftemplates.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F8_c_compatibility%2Fcmath%2Ftemplates.cc?ref=567d4027a3ca0dc36fd0d828925a34a237ad62db", "patch": "@@ -2,7 +2,7 @@\n \n // 2006-02-26  Paolo Carlini  <pcarlini@suse.de>\n //\n-// Copyright (C) 2006, 2009 Free Software Foundation, Inc.\n+// Copyright (C) 2006, 2009, 2010 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -37,6 +37,7 @@ template<typename T>\n     ret = std::tr1::signbit(x);\n     \n     iret = std::tr1::fpclassify(x);\n+    iret = iret; // Suppress unused warning.\n     \n     ret = std::tr1::isfinite(x);\n     ret = std::tr1::isinf(x);\n@@ -49,6 +50,7 @@ template<typename T>\n     ret = std::tr1::islessequal(x, x);\n     ret = std::tr1::islessgreater(x, x);\n     ret = std::tr1::isunordered(x, x);\n+    ret = ret; // Suppress unused warning.\n   }\n \n void test01()"}, {"sha": "338902522013245642da7cc74e89db65f258cf22", "filename": "libstdc++-v3/testsuite/tr1/8_c_compatibility/cstdio/functions.cc", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/567d4027a3ca0dc36fd0d828925a34a237ad62db/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F8_c_compatibility%2Fcstdio%2Ffunctions.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/567d4027a3ca0dc36fd0d828925a34a237ad62db/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F8_c_compatibility%2Fcstdio%2Ffunctions.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F8_c_compatibility%2Fcstdio%2Ffunctions.cc?ref=567d4027a3ca0dc36fd0d828925a34a237ad62db", "patch": "@@ -2,7 +2,7 @@\n \n // 2006-02-05  Paolo Carlini  <pcarlini@suse.de>\n //\n-// Copyright (C) 2006, 2009 Free Software Foundation, Inc.\n+// Copyright (C) 2006, 2009, 2010 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -46,6 +46,7 @@ void test01(int dummy, ...)\n   ret = std::tr1::vfscanf(stream, format, ap); \n   ret = std::tr1::vscanf(format, ap);\n   ret = std::tr1::vsscanf(cs, format, ap);\n+  ret = ret; // Suppress unused warning.\n   \n #endif\n }"}, {"sha": "f9b88dca9c737283d2d302f274cc4665b9cb9152", "filename": "libstdc++-v3/testsuite/tr1/8_c_compatibility/cstdlib/functions.cc", "status": "modified", "additions": 9, "deletions": 1, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/567d4027a3ca0dc36fd0d828925a34a237ad62db/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F8_c_compatibility%2Fcstdlib%2Ffunctions.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/567d4027a3ca0dc36fd0d828925a34a237ad62db/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F8_c_compatibility%2Fcstdlib%2Ffunctions.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F8_c_compatibility%2Fcstdlib%2Ffunctions.cc?ref=567d4027a3ca0dc36fd0d828925a34a237ad62db", "patch": "@@ -2,7 +2,7 @@\n \n // 2006-02-07  Paolo Carlini  <pcarlini@suse.de>\n //\n-// Copyright (C) 2006, 2009 Free Software Foundation, Inc.\n+// Copyright (C) 2006, 2009, 2010 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -55,8 +55,16 @@ void test01()\n   ldret = std::tr1::strtold(s, endptr);\n \n   ret = std::tr1::abs(i);\n+\n+  ret = ret; // Suppress unused warning.\n+  uret = uret;\n+  fret = fret;\n+  ldret = ldret;\n+\n #if !_GLIBCXX_USE_C99_LONG_LONG_DYNAMIC\n   dret = std::tr1::div(numer, denom);\n+\n+  dret = dret;\n #endif\n \n #endif"}, {"sha": "0320c9a5a66b71cdac77abafd45bd9f17cf0b45c", "filename": "libstdc++-v3/testsuite/tr1/8_c_compatibility/cwchar/functions.cc", "status": "modified", "additions": 13, "deletions": 1, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/567d4027a3ca0dc36fd0d828925a34a237ad62db/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F8_c_compatibility%2Fcwchar%2Ffunctions.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/567d4027a3ca0dc36fd0d828925a34a237ad62db/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F8_c_compatibility%2Fcwchar%2Ffunctions.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F8_c_compatibility%2Fcwchar%2Ffunctions.cc?ref=567d4027a3ca0dc36fd0d828925a34a237ad62db", "patch": "@@ -2,7 +2,7 @@\n \n // 2006-02-03  Paolo Carlini  <pcarlini@suse.de>\n //\n-// Copyright (C) 2006, 2009 Free Software Foundation, Inc.\n+// Copyright (C) 2006, 2009, 2010 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -37,26 +37,34 @@ void test01(int dummy, ...)\n   wchar_t** endptr1 = 0;\n   float fret;\n   fret = std::tr1::wcstof(nptr1, endptr1);\n+\n+  fret = fret; // Suppress unused warning.\n #endif\n \n #if _GLIBCXX_HAVE_VFWSCANF\n   FILE* stream = 0;\n   const wchar_t* format1 = 0;\n   int ret1;\n   ret1 = std::tr1::vfwscanf(stream, format1, arg);\n+\n+  ret1 = ret1; // Suppress unused warning.\n #endif\n \n #if _GLIBCXX_HAVE_VSWSCANF\n   const wchar_t* s = 0;\n   const wchar_t* format2 = 0;\n   int ret2;\n   ret2 = std::tr1::vswscanf(s, format2, arg);\n+\n+  ret2 = ret2; // Suppress unused warning.\n #endif\n \n #if _GLIBCXX_HAVE_VWSCANF\n   const wchar_t* format3 = 0;\n   int ret3;\n   ret3 = std::tr1::vwscanf(format3, arg);\n+\n+  ret3 = ret3; // Suppress unused warning.\n #endif\n \n #if _GLIBCXX_USE_C99\n@@ -72,6 +80,10 @@ void test01(int dummy, ...)\n   llret = std::tr1::wcstoll(nptr2, endptr2, base);\n   ullret = std::tr1::wcstoull(nptr2, endptr2, base);\n \n+  ldret = ldret; // Suppress unused warnings.\n+  llret = llret;\n+  ullret = ullret;\n+\n #endif\n }\n "}, {"sha": "031b3ac160a7b97b9a99cf655ef621f61a0ebf3f", "filename": "libstdc++-v3/testsuite/tr1/8_c_compatibility/cwctype/functions.cc", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/567d4027a3ca0dc36fd0d828925a34a237ad62db/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F8_c_compatibility%2Fcwctype%2Ffunctions.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/567d4027a3ca0dc36fd0d828925a34a237ad62db/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F8_c_compatibility%2Fcwctype%2Ffunctions.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F8_c_compatibility%2Fcwctype%2Ffunctions.cc?ref=567d4027a3ca0dc36fd0d828925a34a237ad62db", "patch": "@@ -2,7 +2,7 @@\n \n // 2006-02-03  Paolo Carlini  <pcarlini@suse.de>\n //\n-// Copyright (C) 2006, 2009 Free Software Foundation, Inc.\n+// Copyright (C) 2006, 2009, 2010 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -32,6 +32,7 @@ void test01()\n   std::wint_t ch = 0;\n   int ret;\n   ret = std::tr1::iswblank(ch);\n+  ret = ret; // Suppress unused warning.\n \n #endif\n }"}, {"sha": "046eab9e51380bfe1be06479b8c4901d45d073a3", "filename": "libstdc++-v3/testsuite/util/exception/safety.h", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/567d4027a3ca0dc36fd0d828925a34a237ad62db/libstdc%2B%2B-v3%2Ftestsuite%2Futil%2Fexception%2Fsafety.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/567d4027a3ca0dc36fd0d828925a34a237ad62db/libstdc%2B%2B-v3%2Ftestsuite%2Futil%2Fexception%2Fsafety.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Futil%2Fexception%2Fsafety.h?ref=567d4027a3ca0dc36fd0d828925a34a237ad62db", "patch": "@@ -1012,7 +1012,6 @@ namespace __gnu_test\n \t_M_functions.push_back(function_type(base_type::_M_clear));\n \n \t// Run tests.\n-\tauto i = _M_functions.begin();\n \tfor (auto i = _M_functions.begin(); i != _M_functions.end(); ++i)\n \t  {\n \t    function_type& f = *i;\n@@ -1163,7 +1162,6 @@ namespace __gnu_test\n \t_M_functions.push_back(function_type(base_type::_M_rehash));\n \n \t// Run tests.\n-\tauto i = _M_functions.begin();\n \tfor (auto i = _M_functions.begin(); i != _M_functions.end(); ++i)\n \t  {\n \t    function_type& f = *i;"}, {"sha": "1db0ca08c7942078d735eaa8e36e250eb9e659bd", "filename": "libstdc++-v3/testsuite/util/testsuite_common_types.h", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/567d4027a3ca0dc36fd0d828925a34a237ad62db/libstdc%2B%2B-v3%2Ftestsuite%2Futil%2Ftestsuite_common_types.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/567d4027a3ca0dc36fd0d828925a34a237ad62db/libstdc%2B%2B-v3%2Ftestsuite%2Futil%2Ftestsuite_common_types.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Futil%2Ftestsuite_common_types.h?ref=567d4027a3ca0dc36fd0d828925a34a237ad62db", "patch": "@@ -1,7 +1,8 @@\n // -*- C++ -*-\n // typelist for the C++ library testsuite. \n //\n-// Copyright (C) 2005, 2006, 2007, 2008, 2009 Free Software Foundation, Inc.\n+// Copyright (C) 2005, 2006, 2007, 2008, 2009, 2010\n+// Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -622,7 +623,7 @@ namespace __gnu_test\n \tstruct _Concept\n \t{\n \t  void __constraint()\n-\t  { _Ttype __v = {__a}; }\n+\t  { _Ttype __v __attribute__((unused)) = {__a}; }\n \t  \n \t  _Tvalue __a;\n \t};"}]}