{"sha": "7fbb9a499c94f945e4c495e431aa16ad0ff47e8d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6N2ZiYjlhNDk5Yzk0Zjk0NWU0YzQ5NWU0MzFhYTE2YWQwZmY0N2U4ZA==", "commit": {"author": {"name": "Jan Hubicka", "email": "jh@suse.cz", "date": "2007-01-27T22:31:19Z"}, "committer": {"name": "Jan Hubicka", "email": "hubicka@gcc.gnu.org", "date": "2007-01-27T22:31:19Z"}, "message": "tree-sra.c (sra_walk_function): Don't rely on aliases being build.\n\n\t* tree-sra.c (sra_walk_function): Don't rely on aliases being build.\n\t(pass_sra): Do not require alias information.\n\t* passes.c (init_optimization_passes): Add SRA\n\nFrom-SVN: r121240", "tree": {"sha": "158356eefd36a57b644f59ad76730c4302b52876", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/158356eefd36a57b644f59ad76730c4302b52876"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7fbb9a499c94f945e4c495e431aa16ad0ff47e8d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7fbb9a499c94f945e4c495e431aa16ad0ff47e8d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7fbb9a499c94f945e4c495e431aa16ad0ff47e8d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7fbb9a499c94f945e4c495e431aa16ad0ff47e8d/comments", "author": null, "committer": null, "parents": [{"sha": "4838bfc05bf7b35b1e07a57a0878df308655d6d8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4838bfc05bf7b35b1e07a57a0878df308655d6d8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4838bfc05bf7b35b1e07a57a0878df308655d6d8"}], "stats": {"total": 18, "additions": 14, "deletions": 4}, "files": [{"sha": "c8befd262c4b9570600e0d8207dae25caca37bc5", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7fbb9a499c94f945e4c495e431aa16ad0ff47e8d/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7fbb9a499c94f945e4c495e431aa16ad0ff47e8d/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=7fbb9a499c94f945e4c495e431aa16ad0ff47e8d", "patch": "@@ -1,3 +1,9 @@\n+2007-01-27  Jan Hubicka  <jh@suse.cz>\n+\n+\t* tree-sra.c (sra_walk_function): Don't rely on aliases being build.\n+\t(pass_sra): Do not require alias information.\n+\t* passes.c (init_optimization_passes): Add SRA\n+\n 2007-01-27  Steven Bosscher  <steven@gcc.gnu.org>\n \n \t* tracer.c (rest_of_handle_tracer): We already cleaned"}, {"sha": "f1a702efaaa8fb641be6c47bb57c4dd4db26d567", "filename": "gcc/passes.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7fbb9a499c94f945e4c495e431aa16ad0ff47e8d/gcc%2Fpasses.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7fbb9a499c94f945e4c495e431aa16ad0ff47e8d/gcc%2Fpasses.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fpasses.c?ref=7fbb9a499c94f945e4c495e431aa16ad0ff47e8d", "patch": "@@ -496,6 +496,7 @@ init_optimization_passes (void)\n   NEXT_PASS (pass_ccp);\n   \n   NEXT_PASS (pass_forwprop);\n+  NEXT_PASS (pass_sra);\n   NEXT_PASS (pass_copy_prop);\n   NEXT_PASS (pass_merge_phi);\n   NEXT_PASS (pass_dce);"}, {"sha": "a2d28cac2c42516dc8b23f4f7d556ce6514f6400", "filename": "gcc/tree-sra.c", "status": "modified", "additions": 7, "deletions": 4, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7fbb9a499c94f945e4c495e431aa16ad0ff47e8d/gcc%2Ftree-sra.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7fbb9a499c94f945e4c495e431aa16ad0ff47e8d/gcc%2Ftree-sra.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-sra.c?ref=7fbb9a499c94f945e4c495e431aa16ad0ff47e8d", "patch": "@@ -973,8 +973,9 @@ sra_walk_function (const struct sra_walk_fns *fns)\n \n \t/* If the statement has no virtual operands, then it doesn't\n \t   make any structure references that we care about.  */\n-\tif (ZERO_SSA_OPERANDS (stmt, (SSA_OP_VIRTUAL_DEFS | SSA_OP_VUSE)))\n-\t  continue;\n+\tif (gimple_aliases_computed_p (cfun)\n+\t    && ZERO_SSA_OPERANDS (stmt, (SSA_OP_VIRTUAL_DEFS | SSA_OP_VUSE)))\n+\t      continue;\n \n \tswitch (TREE_CODE (stmt))\n \t  {\n@@ -989,7 +990,9 @@ sra_walk_function (const struct sra_walk_fns *fns)\n \t       as a USE of the variable on the RHS of this assignment.  */\n \n \t    t = TREE_OPERAND (stmt, 0);\n-\t    if (TREE_CODE (t) == GIMPLE_MODIFY_STMT)\n+\t    if (t == NULL_TREE)\n+\t      ;\n+\t    else if (TREE_CODE (t) == GIMPLE_MODIFY_STMT)\n \t      sra_walk_expr (&GIMPLE_STMT_OPERAND (t, 1), &si, false, fns);\n \t    else\n \t      sra_walk_expr (&TREE_OPERAND (stmt, 0), &si, false, fns);\n@@ -2374,7 +2377,7 @@ struct tree_opt_pass pass_sra =\n   NULL,\t\t\t\t\t/* next */\n   0,\t\t\t\t\t/* static_pass_number */\n   TV_TREE_SRA,\t\t\t\t/* tv_id */\n-  PROP_cfg | PROP_ssa | PROP_alias,\t/* properties_required */\n+  PROP_cfg | PROP_ssa,\t\t\t/* properties_required */\n   0,\t\t\t\t\t/* properties_provided */\n   0,\t\t\t\t        /* properties_destroyed */\n   0,\t\t\t\t\t/* todo_flags_start */"}]}