{"sha": "85ff29389d2a4e9cae1efabb1acfb8c8927d7e11", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODVmZjI5Mzg5ZDJhNGU5Y2FlMWVmYWJiMWFjZmI4Yzg5MjdkN2UxMQ==", "commit": {"author": {"name": "Tobias Burnus", "email": "burnus@net-b.de", "date": "2011-10-14T15:09:21Z"}, "committer": {"name": "Tobias Burnus", "email": "burnus@gcc.gnu.org", "date": "2011-10-14T15:09:21Z"}, "message": "re PR fortran/50718 (ICE (fold_convert) with -fcheck=pointer)\n\n2011-10-14  Tobias Burnus  <burnus@net-b.de>\n\n        PR fortran/50718\n        * trans-expr.c (gfc_conv_procedure_call): Fix -fcheck=pointer\n        for dummy arguments with VALUE attribute.\n\n2011-10-14  Tobias Burnus  <burnus@net-b.de>\n\n        PR fortran/50718\n        * gfortran.dg/pointer_check_11.f90: New.\n        * gfortran.dg/pointer_check_12.f90: New.\n\nFrom-SVN: r179988", "tree": {"sha": "f0572893ffbfdaa5ae96d940b4c171a86826ca21", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f0572893ffbfdaa5ae96d940b4c171a86826ca21"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/85ff29389d2a4e9cae1efabb1acfb8c8927d7e11", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/85ff29389d2a4e9cae1efabb1acfb8c8927d7e11", "html_url": "https://github.com/Rust-GCC/gccrs/commit/85ff29389d2a4e9cae1efabb1acfb8c8927d7e11", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/85ff29389d2a4e9cae1efabb1acfb8c8927d7e11/comments", "author": {"login": "tob2", "id": 264461, "node_id": "MDQ6VXNlcjI2NDQ2MQ==", "avatar_url": "https://avatars.githubusercontent.com/u/264461?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tob2", "html_url": "https://github.com/tob2", "followers_url": "https://api.github.com/users/tob2/followers", "following_url": "https://api.github.com/users/tob2/following{/other_user}", "gists_url": "https://api.github.com/users/tob2/gists{/gist_id}", "starred_url": "https://api.github.com/users/tob2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tob2/subscriptions", "organizations_url": "https://api.github.com/users/tob2/orgs", "repos_url": "https://api.github.com/users/tob2/repos", "events_url": "https://api.github.com/users/tob2/events{/privacy}", "received_events_url": "https://api.github.com/users/tob2/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "8c3532055ae44c448bd0bff8952f60ce68e2f178", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8c3532055ae44c448bd0bff8952f60ce68e2f178", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8c3532055ae44c448bd0bff8952f60ce68e2f178"}], "stats": {"total": 68, "additions": 66, "deletions": 2}, "files": [{"sha": "3cff8d7cc546fa8509043b3cb657ce6894e1852e", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/85ff29389d2a4e9cae1efabb1acfb8c8927d7e11/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/85ff29389d2a4e9cae1efabb1acfb8c8927d7e11/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=85ff29389d2a4e9cae1efabb1acfb8c8927d7e11", "patch": "@@ -1,3 +1,9 @@\n+2011-10-14  Tobias Burnus  <burnus@net-b.de>\n+\n+\tPR fortran/50718\n+\t* trans-expr.c (gfc_conv_procedure_call): Fix -fcheck=pointer\n+\tfor dummy arguments with VALUE attribute.\n+\n 2011-10-11  Tobias Burnus  <burnus@net-b.de>\n \t    Janus Weil  <janus@gcc.gnu.org>\n "}, {"sha": "09b98d03fafcf416744d2166ccaa2b4a69f18fda", "filename": "gcc/fortran/trans-expr.c", "status": "modified", "additions": 8, "deletions": 2, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/85ff29389d2a4e9cae1efabb1acfb8c8927d7e11/gcc%2Ffortran%2Ftrans-expr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/85ff29389d2a4e9cae1efabb1acfb8c8927d7e11/gcc%2Ffortran%2Ftrans-expr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ftrans-expr.c?ref=85ff29389d2a4e9cae1efabb1acfb8c8927d7e11", "patch": "@@ -3357,10 +3357,16 @@ gfc_conv_procedure_call (gfc_se * se, gfc_symbol * sym,\n \t      else\n \t\tgoto end_pointer_check;\n \n+\t      tmp = parmse.expr;\n+\n+\t      /* If the argument is passed by value, we need to strip the\n+\t\t INDIRECT_REF.  */\n+\t      if (!POINTER_TYPE_P (TREE_TYPE (parmse.expr)))\n+\t\ttmp = gfc_build_addr_expr (NULL_TREE, tmp);\n \n \t      cond = fold_build2_loc (input_location, EQ_EXPR,\n-\t\t\t\t      boolean_type_node, parmse.expr,\n-\t\t\t\t      fold_convert (TREE_TYPE (parmse.expr),\n+\t\t\t\t      boolean_type_node, tmp,\n+\t\t\t\t      fold_convert (TREE_TYPE (tmp),\n \t\t\t\t\t\t    null_pointer_node));\n \t    }\n  "}, {"sha": "83d14d0656cb6b1e777ce683180e493b36611af0", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/85ff29389d2a4e9cae1efabb1acfb8c8927d7e11/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/85ff29389d2a4e9cae1efabb1acfb8c8927d7e11/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=85ff29389d2a4e9cae1efabb1acfb8c8927d7e11", "patch": "@@ -1,3 +1,9 @@\n+2011-10-14  Tobias Burnus  <burnus@net-b.de>\n+\n+\tPR fortran/50718\n+\t* gfortran.dg/pointer_check_11.f90: New.\n+\t* gfortran.dg/pointer_check_12.f90: New.\n+\n 2011-10-14  Paolo Carlini  <paolo.carlini@oracle.com>\n \n \tPR c++/38174"}, {"sha": "b6aa79ae260e936d08eee00a8ff2d32d6f2ff5ed", "filename": "gcc/testsuite/gfortran.dg/pointer_check_11.f90", "status": "added", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/85ff29389d2a4e9cae1efabb1acfb8c8927d7e11/gcc%2Ftestsuite%2Fgfortran.dg%2Fpointer_check_11.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/85ff29389d2a4e9cae1efabb1acfb8c8927d7e11/gcc%2Ftestsuite%2Fgfortran.dg%2Fpointer_check_11.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fpointer_check_11.f90?ref=85ff29389d2a4e9cae1efabb1acfb8c8927d7e11", "patch": "@@ -0,0 +1,24 @@\n+! { dg-do run }\n+! { dg-options \"-fcheck=all\" }\n+!\n+! { dg-shouldfail \"Pointer check\" }\n+! { dg-output \"Fortran runtime error: Pointer actual argument 'y' is not associated\" }\n+!\n+!\n+! PR fortran/50718\n+!\n+! Was failing (ICE) with -fcheck=pointer if the dummy had the value attribute.\n+\n+type t\n+  integer :: p\n+end type t\n+\n+type(t), pointer :: y => null()\n+\n+call sub(y) ! Invalid: Nonassociated pointer\n+\n+contains\n+  subroutine sub (x)\n+    type(t), value :: x\n+  end subroutine\n+end"}, {"sha": "cfef70e5999535c39bc8059e6554496ce1428178", "filename": "gcc/testsuite/gfortran.dg/pointer_check_12.f90", "status": "added", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/85ff29389d2a4e9cae1efabb1acfb8c8927d7e11/gcc%2Ftestsuite%2Fgfortran.dg%2Fpointer_check_12.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/85ff29389d2a4e9cae1efabb1acfb8c8927d7e11/gcc%2Ftestsuite%2Fgfortran.dg%2Fpointer_check_12.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fpointer_check_12.f90?ref=85ff29389d2a4e9cae1efabb1acfb8c8927d7e11", "patch": "@@ -0,0 +1,22 @@\n+! { dg-do run }\n+! { dg-options \"-fcheck=all\" }\n+!\n+! { dg-shouldfail \"Pointer check\" }\n+! { dg-output \"Fortran runtime error: Pointer actual argument 'p' is not associated\" }\n+!\n+! PR fortran/50718\n+!\n+! Was failing with -fcheck=pointer: Segfault at run time\n+\n+integer, pointer :: p => null()\n+\n+call sub2(%val(p)) ! Invalid: Nonassociated pointer\n+end\n+\n+! Not quite correct dummy, but if one uses VALUE, gfortran\n+! complains about a missing interface - which we cannot use\n+! if we want to use %VAL().\n+\n+subroutine sub2(p)\n+  integer :: p\n+end subroutine sub2"}]}