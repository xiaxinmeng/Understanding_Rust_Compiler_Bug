{"sha": "659c0e684c883ab1ac7a5e8eb42c14bee47b3b4c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjU5YzBlNjg0Yzg4M2FiMWFjN2E1ZThlYjQyYzE0YmVlNDdiM2I0Yw==", "commit": {"author": {"name": "Joseph Myers", "email": "joseph@codesourcery.com", "date": "2014-05-06T20:35:15Z"}, "committer": {"name": "Joseph Myers", "email": "jsm28@gcc.gnu.org", "date": "2014-05-06T20:35:15Z"}, "message": "* config/i386/sse.md (*mov<mode>_internal)\n\t(*<sse>_loadu<ssemodesuffix><avxsizesuffix><mask_name>)\n\t(*<sse2_avx_avx512f>_loaddqu<mode><mask_name>)\n\t(<sse>_andnot<mode>3, <code><mode>3, *andnot<mode>3)\n\t(*<code><mode>3, *andnot<mode>3<mask_name>)\n\t(<mask_codefor><code><mode>3<mask_name>): Only consider\n\tTARGET_SSE_PACKED_SINGLE_INSN_OPTIMAL for modes of size 16.\n\nFrom-SVN: r210124", "tree": {"sha": "7d98a46bd049ba93af9b34f3b22248fa430ba280", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7d98a46bd049ba93af9b34f3b22248fa430ba280"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/659c0e684c883ab1ac7a5e8eb42c14bee47b3b4c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/659c0e684c883ab1ac7a5e8eb42c14bee47b3b4c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/659c0e684c883ab1ac7a5e8eb42c14bee47b3b4c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/659c0e684c883ab1ac7a5e8eb42c14bee47b3b4c/comments", "author": {"login": "jsm28", "id": 10537793, "node_id": "MDQ6VXNlcjEwNTM3Nzkz", "avatar_url": "https://avatars.githubusercontent.com/u/10537793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsm28", "html_url": "https://github.com/jsm28", "followers_url": "https://api.github.com/users/jsm28/followers", "following_url": "https://api.github.com/users/jsm28/following{/other_user}", "gists_url": "https://api.github.com/users/jsm28/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsm28/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsm28/subscriptions", "organizations_url": "https://api.github.com/users/jsm28/orgs", "repos_url": "https://api.github.com/users/jsm28/repos", "events_url": "https://api.github.com/users/jsm28/events{/privacy}", "received_events_url": "https://api.github.com/users/jsm28/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jsm28", "id": 10537793, "node_id": "MDQ6VXNlcjEwNTM3Nzkz", "avatar_url": "https://avatars.githubusercontent.com/u/10537793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsm28", "html_url": "https://github.com/jsm28", "followers_url": "https://api.github.com/users/jsm28/followers", "following_url": "https://api.github.com/users/jsm28/following{/other_user}", "gists_url": "https://api.github.com/users/jsm28/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsm28/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsm28/subscriptions", "organizations_url": "https://api.github.com/users/jsm28/orgs", "repos_url": "https://api.github.com/users/jsm28/repos", "events_url": "https://api.github.com/users/jsm28/events{/privacy}", "received_events_url": "https://api.github.com/users/jsm28/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "15ee1a774550df16aa47def1aa054b1b631ab47c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/15ee1a774550df16aa47def1aa054b1b631ab47c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/15ee1a774550df16aa47def1aa054b1b631ab47c"}], "stats": {"total": 43, "additions": 30, "deletions": 13}, "files": [{"sha": "a0526f211b55d604dae570969435d36fa0348c69", "filename": "gcc/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/659c0e684c883ab1ac7a5e8eb42c14bee47b3b4c/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/659c0e684c883ab1ac7a5e8eb42c14bee47b3b4c/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=659c0e684c883ab1ac7a5e8eb42c14bee47b3b4c", "patch": "@@ -1,3 +1,13 @@\n+2014-05-06  Joseph Myers  <joseph@codesourcery.com>\n+\n+\t* config/i386/sse.md (*mov<mode>_internal)\n+\t(*<sse>_loadu<ssemodesuffix><avxsizesuffix><mask_name>)\n+\t(*<sse2_avx_avx512f>_loaddqu<mode><mask_name>)\n+\t(<sse>_andnot<mode>3, <code><mode>3, *andnot<mode>3)\n+\t(*<code><mode>3, *andnot<mode>3<mask_name>)\n+\t(<mask_codefor><code><mode>3<mask_name>): Only consider\n+\tTARGET_SSE_PACKED_SINGLE_INSN_OPTIMAL for modes of size 16.\n+\n 2014-05-06  Richard Sandiford  <rdsandiford@googlemail.com>\n \n \tRevert:"}, {"sha": "c91626bac196a3493e04cd6cd06cd9b97e8fee50", "filename": "gcc/config/i386/sse.md", "status": "modified", "additions": 20, "deletions": 13, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/659c0e684c883ab1ac7a5e8eb42c14bee47b3b4c/gcc%2Fconfig%2Fi386%2Fsse.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/659c0e684c883ab1ac7a5e8eb42c14bee47b3b4c/gcc%2Fconfig%2Fi386%2Fsse.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fsse.md?ref=659c0e684c883ab1ac7a5e8eb42c14bee47b3b4c", "patch": "@@ -758,11 +758,10 @@\n   [(set_attr \"type\" \"sselog1,ssemov,ssemov\")\n    (set_attr \"prefix\" \"maybe_vex\")\n    (set (attr \"mode\")\n-\t(cond [(match_test \"TARGET_SSE_PACKED_SINGLE_INSN_OPTIMAL\")\n-\t\t (const_string \"<ssePSmode>\")\n-\t       (and (match_test \"<MODE_SIZE> == 16\")\n-\t\t    (and (eq_attr \"alternative\" \"2\")\n-\t\t\t (match_test \"TARGET_SSE_TYPELESS_STORES\")))\n+\t(cond [(and (match_test \"<MODE_SIZE> == 16\")\n+\t\t    (ior (match_test \"TARGET_SSE_PACKED_SINGLE_INSN_OPTIMAL\")\n+\t\t\t (and (eq_attr \"alternative\" \"2\")\n+\t\t\t      (match_test \"TARGET_SSE_TYPELESS_STORES\"))))\n \t\t (const_string \"<ssePSmode>\")\n \t       (match_test \"TARGET_AVX\")\n \t\t (const_string \"<sseinsnmode>\")\n@@ -967,7 +966,8 @@\n    (set_attr \"ssememalign\" \"8\")\n    (set_attr \"prefix\" \"maybe_vex\")\n    (set (attr \"mode\")\n-\t(cond [(match_test \"TARGET_SSE_PACKED_SINGLE_INSN_OPTIMAL\")\n+\t(cond [(and (match_test \"<MODE_SIZE> == 16\")\n+\t\t    (match_test \"TARGET_SSE_PACKED_SINGLE_INSN_OPTIMAL\"))\n \t\t (const_string \"<ssePSmode>\")\n \t       (match_test \"TARGET_AVX\")\n \t\t (const_string \"<MODE>\")\n@@ -1089,7 +1089,8 @@\n      (const_string \"1\")))\n    (set_attr \"prefix\" \"maybe_vex\")\n    (set (attr \"mode\")\n-\t(cond [(match_test \"TARGET_SSE_PACKED_SINGLE_INSN_OPTIMAL\")\n+\t(cond [(and (match_test \"<MODE_SIZE> == 16\")\n+\t\t    (match_test \"TARGET_SSE_PACKED_SINGLE_INSN_OPTIMAL\"))\n \t\t (const_string \"<ssePSmode>\")\n \t       (match_test \"TARGET_AVX\")\n \t\t (const_string \"<sseinsnmode>\")\n@@ -2377,7 +2378,8 @@\n    (set_attr \"type\" \"sselog\")\n    (set_attr \"prefix\" \"orig,maybe_evex\")\n    (set (attr \"mode\")\n-\t(cond [(match_test \"TARGET_SSE_PACKED_SINGLE_INSN_OPTIMAL\")\n+\t(cond [(and (match_test \"<MODE_SIZE> == 16\")\n+\t\t    (match_test \"TARGET_SSE_PACKED_SINGLE_INSN_OPTIMAL\"))\n \t\t (const_string \"<ssePSmode>\")\n \t       (match_test \"TARGET_AVX\")\n \t\t (const_string \"<MODE>\")\n@@ -2449,7 +2451,8 @@\n    (set_attr \"type\" \"sselog\")\n    (set_attr \"prefix\" \"orig,maybe_evex\")\n    (set (attr \"mode\")\n-\t(cond [(match_test \"TARGET_SSE_PACKED_SINGLE_INSN_OPTIMAL\")\n+\t(cond [(and (match_test \"<MODE_SIZE> == 16\")\n+\t\t    (match_test \"TARGET_SSE_PACKED_SINGLE_INSN_OPTIMAL\"))\n \t\t (const_string \"<ssePSmode>\")\n \t       (match_test \"TARGET_AVX\")\n \t\t (const_string \"<MODE>\")\n@@ -2513,7 +2516,8 @@\n    (set_attr \"type\" \"sselog\")\n    (set_attr \"prefix\" \"orig,vex\")\n    (set (attr \"mode\")\n-\t(cond [(match_test \"TARGET_SSE_PACKED_SINGLE_INSN_OPTIMAL\")\n+\t(cond [(and (match_test \"<MODE_SIZE> == 16\")\n+\t\t    (match_test \"TARGET_SSE_PACKED_SINGLE_INSN_OPTIMAL\"))\n \t\t (const_string \"V4SF\")\n \t       (match_test \"TARGET_AVX\")\n \t\t (const_string \"<ssevecmode>\")\n@@ -2600,7 +2604,8 @@\n    (set_attr \"type\" \"sselog\")\n    (set_attr \"prefix\" \"orig,vex\")\n    (set (attr \"mode\")\n-\t(cond [(match_test \"TARGET_SSE_PACKED_SINGLE_INSN_OPTIMAL\")\n+\t(cond [(and (match_test \"<MODE_SIZE> == 16\")\n+\t\t    (match_test \"TARGET_SSE_PACKED_SINGLE_INSN_OPTIMAL\"))\n \t\t (const_string \"V4SF\")\n \t       (match_test \"TARGET_AVX\")\n \t\t (const_string \"<ssevecmode>\")\n@@ -9047,7 +9052,8 @@\n        (const_string \"*\")))\n    (set_attr \"prefix\" \"<mask_prefix3>\")\n    (set (attr \"mode\")\n-\t(cond [(match_test \"TARGET_SSE_PACKED_SINGLE_INSN_OPTIMAL\")\n+\t(cond [(and (match_test \"<MODE_SIZE> == 16\")\n+\t\t    (match_test \"TARGET_SSE_PACKED_SINGLE_INSN_OPTIMAL\"))\n \t\t (const_string \"<ssePSmode>\")\n \t       (match_test \"TARGET_AVX2\")\n \t\t (const_string \"<sseinsnmode>\")\n@@ -9140,7 +9146,8 @@\n        (const_string \"*\")))\n    (set_attr \"prefix\" \"<mask_prefix3>\")\n    (set (attr \"mode\")\n-\t(cond [(match_test \"TARGET_SSE_PACKED_SINGLE_INSN_OPTIMAL\")\n+\t(cond [(and (match_test \"<MODE_SIZE> == 16\")\n+\t\t    (match_test \"TARGET_SSE_PACKED_SINGLE_INSN_OPTIMAL\"))\n \t\t (const_string \"<ssePSmode>\")\n \t       (match_test \"TARGET_AVX2\")\n \t\t (const_string \"<sseinsnmode>\")"}]}