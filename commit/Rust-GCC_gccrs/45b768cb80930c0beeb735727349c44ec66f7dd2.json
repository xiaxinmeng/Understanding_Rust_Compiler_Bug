{"sha": "45b768cb80930c0beeb735727349c44ec66f7dd2", "node_id": "C_kwDOANBUbNoAKDQ1Yjc2OGNiODA5MzBjMGJlZWI3MzU3MjczNDljNDRlYzY2ZjdkZDI", "commit": {"author": {"name": "Thomas Schwinge", "email": "thomas@codesourcery.com", "date": "2021-12-10T18:08:26Z"}, "committer": {"name": "Thomas Schwinge", "email": "thomas@codesourcery.com", "date": "2021-12-15T22:26:26Z"}, "message": "testsuite: Be more informative for ICEs\n\nFor example, for the two (FAIL, XFAIL)\n'gcc/testsuite/lib/gcc-dg.exp:gcc-dg-test-1' cases:\n\n    -FAIL: g++.dg/modules/xtreme-header-3_a.H -std=c++17 (internal compiler error)\n    +FAIL: g++.dg/modules/xtreme-header-3_a.H -std=c++17 (internal compiler error: tree check: expected var_decl or function_decl or field_decl or type_decl or concept_decl or template_decl, have namespace_decl in get_merge_kind, at cp/module.cc:10072)\n\n    -FAIL: gfortran.dg/gomp/clauses-1.f90   -O  (internal compiler error)\n    +FAIL: gfortran.dg/gomp/clauses-1.f90   -O  (internal compiler error: Segmentation fault)\n\n    -XFAIL: c-c++-common/goacc/kernels-decompose-ice-1.c (internal compiler error)\n    +XFAIL: c-c++-common/goacc/kernels-decompose-ice-1.c (internal compiler error: in lower_omp_target, at omp-low.c:13147)\n\n    -XFAIL: g++.dg/cpp1z/constexpr-lambda26.C  -std=c++17 (internal compiler error)\n    +XFAIL: g++.dg/cpp1z/constexpr-lambda26.C  -std=c++17 (internal compiler error: in cxx_eval_constant_expression, at cp/constexpr.c:6954)\n\nThat allows for more easily spotting when during development you're trading one\nICE for another.\n\n\tgcc/testsuite/\n\t* lib/fortran-torture.exp (fortran-torture-compile)\n\t(fortran-torture-execute): Be more informative for ICEs.\n\t* lib/gcc-defs.exp (${tool}_check_compile): Likewise.\n\t* lib/gcc-dg.exp (gcc-dg-test-1): Likewise.\n\t* lib/go-torture.exp (go-torture-compile, go-torture-execute):\n\tLikewise.", "tree": {"sha": "feaef1ed4ad95bd1128fe8ba386bfbf1171c3b6e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/feaef1ed4ad95bd1128fe8ba386bfbf1171c3b6e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/45b768cb80930c0beeb735727349c44ec66f7dd2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/45b768cb80930c0beeb735727349c44ec66f7dd2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/45b768cb80930c0beeb735727349c44ec66f7dd2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/45b768cb80930c0beeb735727349c44ec66f7dd2/comments", "author": {"login": "tschwinge", "id": 21753, "node_id": "MDQ6VXNlcjIxNzUz", "avatar_url": "https://avatars.githubusercontent.com/u/21753?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tschwinge", "html_url": "https://github.com/tschwinge", "followers_url": "https://api.github.com/users/tschwinge/followers", "following_url": "https://api.github.com/users/tschwinge/following{/other_user}", "gists_url": "https://api.github.com/users/tschwinge/gists{/gist_id}", "starred_url": "https://api.github.com/users/tschwinge/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tschwinge/subscriptions", "organizations_url": "https://api.github.com/users/tschwinge/orgs", "repos_url": "https://api.github.com/users/tschwinge/repos", "events_url": "https://api.github.com/users/tschwinge/events{/privacy}", "received_events_url": "https://api.github.com/users/tschwinge/received_events", "type": "User", "site_admin": false}, "committer": {"login": "tschwinge", "id": 21753, "node_id": "MDQ6VXNlcjIxNzUz", "avatar_url": "https://avatars.githubusercontent.com/u/21753?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tschwinge", "html_url": "https://github.com/tschwinge", "followers_url": "https://api.github.com/users/tschwinge/followers", "following_url": "https://api.github.com/users/tschwinge/following{/other_user}", "gists_url": "https://api.github.com/users/tschwinge/gists{/gist_id}", "starred_url": "https://api.github.com/users/tschwinge/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tschwinge/subscriptions", "organizations_url": "https://api.github.com/users/tschwinge/orgs", "repos_url": "https://api.github.com/users/tschwinge/repos", "events_url": "https://api.github.com/users/tschwinge/events{/privacy}", "received_events_url": "https://api.github.com/users/tschwinge/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4a5e71f2348adcc49939804889d9f1a64d97005a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4a5e71f2348adcc49939804889d9f1a64d97005a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4a5e71f2348adcc49939804889d9f1a64d97005a"}], "stats": {"total": 26, "additions": 13, "deletions": 13}, "files": [{"sha": "11d73d9f1f7c7272e6cab072b9176b8756be3a5e", "filename": "gcc/testsuite/lib/fortran-torture.exp", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/45b768cb80930c0beeb735727349c44ec66f7dd2/gcc%2Ftestsuite%2Flib%2Ffortran-torture.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/45b768cb80930c0beeb735727349c44ec66f7dd2/gcc%2Ftestsuite%2Flib%2Ffortran-torture.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Flib%2Ffortran-torture.exp?ref=45b768cb80930c0beeb735727349c44ec66f7dd2", "patch": "@@ -138,8 +138,8 @@ proc fortran-torture-compile { src option } {\n \treturn\n     }\n \n-    if [string match \"*internal compiler error*\" $comp_output] then {\n-\tgfortran_fail $testcase \"$option (internal compiler error)\"\n+    if [regexp -line -- \"internal compiler error.*\" $comp_output ice] then {\n+\tgfortran_fail $testcase \"$option ($ice)\"\n \tcatch { remote_file build delete $output }\n \treturn\n     }\n@@ -263,8 +263,8 @@ proc fortran-torture-execute { src } {\n \t    continue\n \t}\n \n-\tif [string match \"*internal compiler error*\" $comp_output] then {\n-\t    gfortran_fail $testcase \"$option (internal compiler error)\"\n+\tif [regexp -line -- \"internal compiler error.*\" $comp_output ice] then {\n+\t    gfortran_fail $testcase \"$option ($ice)\"\n \t    catch { remote_file build delete $executable }\n \t    continue\n \t}"}, {"sha": "66df4e1c6aa27d04d684f7ef60bffad0c6bad83e", "filename": "gcc/testsuite/lib/gcc-defs.exp", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/45b768cb80930c0beeb735727349c44ec66f7dd2/gcc%2Ftestsuite%2Flib%2Fgcc-defs.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/45b768cb80930c0beeb735727349c44ec66f7dd2/gcc%2Ftestsuite%2Flib%2Fgcc-defs.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Flib%2Fgcc-defs.exp?ref=45b768cb80930c0beeb735727349c44ec66f7dd2", "patch": "@@ -38,8 +38,8 @@ proc ${tool}_check_compile {testcase option objname gcc_output} {\n \treturn 0\n     }\n \n-    if [string match \"*internal compiler error*\" $gcc_output] then {\n-\t${tool}_fail $testcase \"$option (internal compiler error)\"\n+    if [regexp -line -- \"internal compiler error.*\" $gcc_output ice] then {\n+\t${tool}_fail $testcase \"$option ($ice)\"\n \treturn 0\n     }\n "}, {"sha": "464059608b8e7d21b4b371296014d9ffd5e5a49c", "filename": "gcc/testsuite/lib/gcc-dg.exp", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/45b768cb80930c0beeb735727349c44ec66f7dd2/gcc%2Ftestsuite%2Flib%2Fgcc-dg.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/45b768cb80930c0beeb735727349c44ec66f7dd2/gcc%2Ftestsuite%2Flib%2Fgcc-dg.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Flib%2Fgcc-dg.exp?ref=45b768cb80930c0beeb735727349c44ec66f7dd2", "patch": "@@ -315,13 +315,13 @@ proc gcc-dg-test-1 { target_compile prog do_what extra_tool_flags } {\n     # to avoid a second failure for excess errors.\n     # \"Error reporting routines re-entered\" ICE says \"Internal\" rather than\n     # \"internal\", so match that too.\n-    if [string match {*[Ii]nternal compiler error*} $comp_output] {\n+    if [regexp -line -- {[Ii]nternal compiler error.*} $comp_output ice] {\n \tupvar 2 name name\n \tif { $expect_ice == 0 } {\n-\t  fail \"$name (internal compiler error)\"\n+\t  fail \"$name ($ice)\"\n \t} else {\n \t  # We expected an ICE and we got it.\n-\t  xfail \"$name (internal compiler error)\"\n+\t  xfail \"$name ($ice)\"\n \t  # Prune the ICE from the output.\n \t  set comp_output [prune_ices $comp_output]\n \t}"}, {"sha": "adeae36f9168b2f7ddbcf05cef27b0ba4cfc9214", "filename": "gcc/testsuite/lib/go-torture.exp", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/45b768cb80930c0beeb735727349c44ec66f7dd2/gcc%2Ftestsuite%2Flib%2Fgo-torture.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/45b768cb80930c0beeb735727349c44ec66f7dd2/gcc%2Ftestsuite%2Flib%2Fgo-torture.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Flib%2Fgo-torture.exp?ref=45b768cb80930c0beeb735727349c44ec66f7dd2", "patch": "@@ -88,8 +88,8 @@ proc go-torture-compile { src option } {\n \treturn\n     }\n \n-    if [string match \"*internal compiler error*\" $comp_output] then {\n-\tgo_fail $testcase \"$option (internal compiler error)\"\n+    if [regexp -line -- \"internal compiler error.*\" $comp_output ice] then {\n+\tgo_fail $testcase \"$option ($ice)\"\n \tcatch { remote_file build delete $output }\n \treturn\n     }\n@@ -224,8 +224,8 @@ proc go-torture-execute { src } {\n \t    continue\n \t}\n \n-\tif [string match \"*internal compiler error*\" $comp_output] then {\n-\t    go_fail $testcase \"$option (internal compiler error)\"\n+\tif [regexp -line -- \"internal compiler error.*\" $comp_output ice] then {\n+\t    go_fail $testcase \"$option ($ice)\"\n \t    catch { remote_file build delete $executable }\n \t    continue\n \t}"}]}