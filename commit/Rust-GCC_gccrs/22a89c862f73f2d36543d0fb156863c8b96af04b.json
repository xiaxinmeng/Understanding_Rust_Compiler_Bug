{"sha": "22a89c862f73f2d36543d0fb156863c8b96af04b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjJhODljODYyZjczZjJkMzY1NDNkMGZiMTU2ODYzYzhiOTZhZjA0Yg==", "commit": {"author": {"name": "Richard Henderson", "email": "rth@redhat.com", "date": "2012-03-06T18:20:34Z"}, "committer": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "2012-03-06T18:20:34Z"}, "message": "m68k: Limit TAS to 68000 and CF ISA_B.\n\nFrom-SVN: r185011", "tree": {"sha": "16e7a66043117f1b10c4cb863184ef27ae5c5bc4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/16e7a66043117f1b10c4cb863184ef27ae5c5bc4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/22a89c862f73f2d36543d0fb156863c8b96af04b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/22a89c862f73f2d36543d0fb156863c8b96af04b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/22a89c862f73f2d36543d0fb156863c8b96af04b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/22a89c862f73f2d36543d0fb156863c8b96af04b/comments", "author": null, "committer": null, "parents": [{"sha": "593f74bbab63d34c7060918088bcbad686c31c66", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/593f74bbab63d34c7060918088bcbad686c31c66", "html_url": "https://github.com/Rust-GCC/gccrs/commit/593f74bbab63d34c7060918088bcbad686c31c66"}], "stats": {"total": 11, "additions": 9, "deletions": 2}, "files": [{"sha": "aee953e04845563c7153d3cf9ec0179af40cd058", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/22a89c862f73f2d36543d0fb156863c8b96af04b/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/22a89c862f73f2d36543d0fb156863c8b96af04b/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=22a89c862f73f2d36543d0fb156863c8b96af04b", "patch": "@@ -1,3 +1,9 @@\n+2012-03-06  Richard Henderson  <rth@redhat.com>\n+\n+\t* config/m68k/m68k.h (ISA_HAS_TAS): New.\n+\t* config/m68k/sync.md (atomic_test_and_set): Use it.\n+\t(atomic_test_and_set_1): Likewise.\n+\n 2012-03-06  Michael Meissner  <meissner@linux.vnet.ibm.com>\n \n \tPR target/50310"}, {"sha": "42d377942e7182704cb2bf5df181cc95470d0866", "filename": "gcc/config/m68k/m68k.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/22a89c862f73f2d36543d0fb156863c8b96af04b/gcc%2Fconfig%2Fm68k%2Fm68k.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/22a89c862f73f2d36543d0fb156863c8b96af04b/gcc%2Fconfig%2Fm68k%2Fm68k.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm68k%2Fm68k.h?ref=22a89c862f73f2d36543d0fb156863c8b96af04b", "patch": "@@ -249,6 +249,7 @@ along with GCC; see the file COPYING3.  If not see\n /* Some instructions are common to more than one ISA.  */\n #define ISA_HAS_MVS_MVZ\t(TARGET_ISAB || TARGET_ISAC)\n #define ISA_HAS_FF1\t(TARGET_ISAAPLUS || TARGET_ISAC)\n+#define ISA_HAS_TAS\t(!TARGET_COLDFIRE || TARGET_ISAB || TARGET_ISAC)\n \n #define TUNE_68000\t(m68k_tune == u68000)\n #define TUNE_68010\t(m68k_tune == u68010)"}, {"sha": "d5cab792ba4b8d6f7b50a44e4cae61040e4fae10", "filename": "gcc/config/m68k/sync.md", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/22a89c862f73f2d36543d0fb156863c8b96af04b/gcc%2Fconfig%2Fm68k%2Fsync.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/22a89c862f73f2d36543d0fb156863c8b96af04b/gcc%2Fconfig%2Fm68k%2Fsync.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm68k%2Fsync.md?ref=22a89c862f73f2d36543d0fb156863c8b96af04b", "patch": "@@ -60,7 +60,7 @@\n   [(match_operand:QI 0 \"register_operand\" \"\")\t\t;; bool success output\n    (match_operand:QI 1 \"memory_operand\" \"\")\t\t;; memory\n    (match_operand:SI 2 \"const_int_operand\" \"\")]\t\t;; model\n-  \"\"\n+  \"ISA_HAS_TAS\"\n {\n   rtx t = gen_reg_rtx (QImode);\n   emit_insn (gen_atomic_test_and_set_1 (t, operands[1]));\n@@ -77,5 +77,5 @@\n \t  UNSPECV_TAS_1))\n    (set (match_dup 1)\n \t(unspec_volatile:QI [(match_dup 1)] UNSPECV_TAS_2))]\n-  \"\"\n+  \"ISA_HAS_TAS\"\n   \"tas %1\\;sne %0\")"}]}