{"sha": "58939c25bdc16c2a1a31e08b640980119994cac6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTg5MzljMjViZGMxNmMyYTFhMzFlMDhiNjQwOTgwMTE5OTk0Y2FjNg==", "commit": {"author": {"name": "Torbjorn Granlund", "email": "tege@gnu.org", "date": "1992-09-16T23:36:52Z"}, "committer": {"name": "Torbjorn Granlund", "email": "tege@gnu.org", "date": "1992-09-16T23:36:52Z"}, "message": "(casesi): Use emit_jump_insn to emit casesi0 pattern.\n\n(xorsi3): Remove `r' from output template.\n(movstrsi recognizer): Add `+' to operand 0 & 1 constraints.\n\nFrom-SVN: r2138", "tree": {"sha": "af97133e331c133aa247c2dd4d48e1702f428c59", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/af97133e331c133aa247c2dd4d48e1702f428c59"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/58939c25bdc16c2a1a31e08b640980119994cac6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/58939c25bdc16c2a1a31e08b640980119994cac6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/58939c25bdc16c2a1a31e08b640980119994cac6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/58939c25bdc16c2a1a31e08b640980119994cac6/comments", "author": null, "committer": null, "parents": [{"sha": "6f3c667fbe065bfd55007031150a56f8ccf086d2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6f3c667fbe065bfd55007031150a56f8ccf086d2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6f3c667fbe065bfd55007031150a56f8ccf086d2"}], "stats": {"total": 12, "additions": 6, "deletions": 6}, "files": [{"sha": "a929f34740bde5c1968f7506297652b98c157bdc", "filename": "gcc/config/pa/pa.md", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/58939c25bdc16c2a1a31e08b640980119994cac6/gcc%2Fconfig%2Fpa%2Fpa.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/58939c25bdc16c2a1a31e08b640980119994cac6/gcc%2Fconfig%2Fpa%2Fpa.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fpa%2Fpa.md?ref=58939c25bdc16c2a1a31e08b640980119994cac6", "patch": "@@ -749,7 +749,7 @@\n    (set_attr \"length\" \"1\")])\n \n (define_insn \"\"\n-  [(set (match_operand:SI 0 \"register_operand\" \"=a,?*r\")\n+  [(set (match_operand:SI 0 \"register_operand\" \"=a,&?*r\")\n \t(plus:SI (match_operand:SI 1 \"register_operand\" \"r,r\")\n \t\t (high:SI (match_operand 2 \"\" \"\"))))]\n   \"\"\n@@ -944,8 +944,8 @@\n ;; therefore it is forced to operand 2.  If the count is compile-time\n ;; determined, we need two scratch registers for the unrolled code.\n (define_insn \"\"\n-  [(set (mem:BLK (match_operand:SI 0 \"register_operand\" \"r,r\"))\n-\t(mem:BLK (match_operand:SI 1 \"register_operand\" \"r,r\")))\n+  [(set (mem:BLK (match_operand:SI 0 \"register_operand\" \"+r,r\"))\n+\t(mem:BLK (match_operand:SI 1 \"register_operand\" \"+r,r\")))\n    (clobber (match_dup 0))\n    (clobber (match_dup 1))\n    (clobber (match_scratch:SI 2 \"=r,r\"))\t\t ;loop cnt/item tmp\n@@ -1667,7 +1667,7 @@\n \t(xor:SI (match_operand:SI 1 \"register_operand\" \"%r\")\n \t\t(match_operand:SI 2 \"register_operand\" \"r\")))]\n   \"\"\n-  \"xor %r1,%2,%0\")\n+  \"xor %1,%2,%0\")\n \n (define_insn \"negdi2\"\n   [(set (match_operand:DI 0 \"register_operand\" \"=r\")\n@@ -2057,8 +2057,8 @@\n   if (!INT_11_BITS (operands[2]))\n     operands[2] = force_reg (SImode, operands[2]);\n \n-  emit_insn (gen_casesi0 (operands[0], operands[2],\n-\t\t\t  operands[3], operands[4]));\n+  emit_jump_insn (gen_casesi0 (operands[0], operands[2],\n+\t\t\t       operands[3], operands[4]));\n   DONE;\n }\")\n "}]}