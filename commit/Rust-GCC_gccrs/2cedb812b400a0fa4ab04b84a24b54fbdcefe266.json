{"sha": "2cedb812b400a0fa4ab04b84a24b54fbdcefe266", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmNlZGI4MTJiNDAwYTBmYTRhYjA0Yjg0YTI0YjU0ZmJkY2VmZTI2Ng==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1994-11-10T20:55:49Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1994-11-10T20:55:49Z"}, "message": "({print,scan}_char_table): Allow `L' modifier for integer output formats.\n\n(check_format_info): Treat `ll' like `q'.\n\nFrom-SVN: r8409", "tree": {"sha": "1847e0f490bc4d632ed7514ded00e59a2f077cfb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1847e0f490bc4d632ed7514ded00e59a2f077cfb"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2cedb812b400a0fa4ab04b84a24b54fbdcefe266", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2cedb812b400a0fa4ab04b84a24b54fbdcefe266", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2cedb812b400a0fa4ab04b84a24b54fbdcefe266", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2cedb812b400a0fa4ab04b84a24b54fbdcefe266/comments", "author": null, "committer": null, "parents": [{"sha": "57fa673965950f8586de56fe568bee9a534f0efd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/57fa673965950f8586de56fe568bee9a534f0efd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/57fa673965950f8586de56fe568bee9a534f0efd"}], "stats": {"total": 12, "additions": 7, "deletions": 5}, "files": [{"sha": "56201a695ce9f48c7b9d8a80ec7630838879aed7", "filename": "gcc/c-common.c", "status": "modified", "additions": 7, "deletions": 5, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2cedb812b400a0fa4ab04b84a24b54fbdcefe266/gcc%2Fc-common.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2cedb812b400a0fa4ab04b84a24b54fbdcefe266/gcc%2Fc-common.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-common.c?ref=2cedb812b400a0fa4ab04b84a24b54fbdcefe266", "patch": "@@ -508,7 +508,7 @@ typedef struct {\n   /* Type of argument if length modifier `l' is used.\n      If NULL, then this modifier is not allowed.  */\n   tree *llen;\n-  /* Type of argument if length modifier `q' is used.\n+  /* Type of argument if length modifier `q' or `ll' is used.\n      If NULL, then this modifier is not allowed.  */\n   tree *qlen;\n   /* Type of argument if length modifier `L' is used.\n@@ -519,8 +519,8 @@ typedef struct {\n } format_char_info;\n \n static format_char_info print_char_table[] = {\n-  { \"di\",\t0,\tT_I,\tT_I,\tT_L,\tT_LL,\tNULL,\t\"-wp0 +\"\t},\n-  { \"oxX\",\t0,\tT_UI,\tT_UI,\tT_UL,\tT_ULL,\tNULL,\t\"-wp0#\"\t\t},\n+  { \"di\",\t0,\tT_I,\tT_I,\tT_L,\tT_LL,\tT_LL,\t\"-wp0 +\"\t},\n+  { \"oxX\",\t0,\tT_UI,\tT_UI,\tT_UL,\tT_ULL,\tT_ULL,\t\"-wp0#\"\t\t},\n   { \"u\",\t0,\tT_UI,\tT_UI,\tT_UL,\tT_ULL,\tNULL,\t\"-wp0\"\t\t},\n /* Two GNU extensions.  */\n   { \"Z\",\t0,\tT_ST,\tNULL,\tNULL,\tNULL,\tNULL,\t\"-wp0\"\t\t},\n@@ -536,8 +536,8 @@ static format_char_info print_char_table[] = {\n };\n \n static format_char_info scan_char_table[] = {\n-  { \"di\",\t1,\tT_I,\tT_S,\tT_L,\tT_LL,\tNULL,\t\"*\"\t},\n-  { \"ouxX\",\t1,\tT_UI,\tT_US,\tT_UL,\tT_ULL,\tNULL,\t\"*\"\t},\t\n+  { \"di\",\t1,\tT_I,\tT_S,\tT_L,\tT_LL,\tT_LL,\t\"*\"\t},\n+  { \"ouxX\",\t1,\tT_UI,\tT_US,\tT_UL,\tT_ULL,\tT_ULL,\t\"*\"\t},\t\n   { \"efgEG\",\t1,\tT_F,\tNULL,\tT_D,\tNULL,\tT_LD,\t\"*\"\t},\n   { \"sc\",\t1,\tT_C,\tNULL,\tT_W,\tNULL,\tNULL,\t\"*a\"\t},\n   { \"[\",\t1,\tT_C,\tNULL,\tNULL,\tNULL,\tNULL,\t\"*a\"\t},\n@@ -895,6 +895,8 @@ check_format_info (info, params)\n \tlength_char = *format_chars++;\n       else\n \tlength_char = 0;\n+      if (length_char == 'l' && *format_chars == 'l')\n+\tlength_char = 'q', format_chars++;\n       aflag = 0;\n       if (*format_chars == 'a')\n \t{"}]}