{"sha": "61314cb469b7a014caddd55f944ccaa84bd98e7e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjEzMTRjYjQ2OWI3YTAxNGNhZGRkNTVmOTQ0Y2NhYTg0YmQ5OGU3ZQ==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1994-12-07T21:51:43Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1994-12-07T21:51:43Z"}, "message": "New pattern for ior between SImode target and zero_extended value.\n\nFrom-SVN: r8624", "tree": {"sha": "82606e88e4497dd93c21e85e96916fa3c4404c83", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/82606e88e4497dd93c21e85e96916fa3c4404c83"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/61314cb469b7a014caddd55f944ccaa84bd98e7e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/61314cb469b7a014caddd55f944ccaa84bd98e7e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/61314cb469b7a014caddd55f944ccaa84bd98e7e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/61314cb469b7a014caddd55f944ccaa84bd98e7e/comments", "author": null, "committer": null, "parents": [{"sha": "9e8730a444d8213d5c19a5a7723278acc725bc90", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9e8730a444d8213d5c19a5a7723278acc725bc90", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9e8730a444d8213d5c19a5a7723278acc725bc90"}], "stats": {"total": 19, "additions": 19, "deletions": 0}, "files": [{"sha": "2afdedc7fd0598c88c442d7bf143cef7f225e789", "filename": "gcc/config/m68k/m68k.md", "status": "modified", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/61314cb469b7a014caddd55f944ccaa84bd98e7e/gcc%2Fconfig%2Fm68k%2Fm68k.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/61314cb469b7a014caddd55f944ccaa84bd98e7e/gcc%2Fconfig%2Fm68k%2Fm68k.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm68k%2Fm68k.md?ref=61314cb469b7a014caddd55f944ccaa84bd98e7e", "patch": "@@ -3194,6 +3194,25 @@\n \t\t(match_dup 0)))]\n   \"\"\n   \"or%.b %1,%0\")\n+\n+(define_insn \"\"\n+  [(set (match_operand:SI 0 \"general_operand\" \"=o,d\")\n+    (ior:SI (zero_extend:SI (match_operand 1 \"general_operand\" \"dn,dmn\"))\n+        (match_operand:SI 2 \"general_operand\" \"0,0\")))]\n+  \"\"\n+  \"*\n+{\n+  int byte_mode;\n+\n+  CC_STATUS_INIT;\n+  byte_mode = (GET_MODE(operands[1]) == QImode);\n+  if (GET_CODE (operands[0]) == MEM)\n+    operands[0] = adj_offsettable_operand (operands[0], byte_mode ? 3 : 2);\n+  if (byte_mode)\n+\treturn \\\"or%.b %1,%0\\\";\n+  else\n+\treturn \\\"or%.w %1,%0\\\";\n+}\")\n \f\n ;; xor instructions\n "}]}