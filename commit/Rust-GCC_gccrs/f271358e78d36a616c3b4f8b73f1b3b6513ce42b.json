{"sha": "f271358e78d36a616c3b4f8b73f1b3b6513ce42b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjI3MTM1OGU3OGQzNmE2MTZjM2I0ZjhiNzNmMWIzYjY1MTNjZTQyYg==", "commit": {"author": {"name": "Per Bothner", "email": "bothner@gcc.gnu.org", "date": "1998-06-05T15:57:11Z"}, "committer": {"name": "Per Bothner", "email": "bothner@gcc.gnu.org", "date": "1998-06-05T15:57:11Z"}, "message": "gcc.c (lang_specific_pre_link): New LANG_SPECIFIC_DRIVER function.\n\n`\n\t* gcc.c (lang_specific_pre_link):  New LANG_SPECIFIC_DRIVER function.\n\t(lang_specific_extra_outfiles):  New LANG_SPECIFIC_DRIVER variable.\n\t(do_spec, input_filename, input_filename_length):  Make public.\n\t(main):  Adjust outfiles allocation by lang_specific_extra_outfiles.\n\tCall lang_specific_pre_link befor elinking.\n\nFrom-SVN: r20250", "tree": {"sha": "a6c36dde47246a4a92f288f42e07af5503e92290", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a6c36dde47246a4a92f288f42e07af5503e92290"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f271358e78d36a616c3b4f8b73f1b3b6513ce42b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f271358e78d36a616c3b4f8b73f1b3b6513ce42b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f271358e78d36a616c3b4f8b73f1b3b6513ce42b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f271358e78d36a616c3b4f8b73f1b3b6513ce42b/comments", "author": null, "committer": null, "parents": [{"sha": "98b570c6a0c19aebf760a07c5860ff5aa6ba79f7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/98b570c6a0c19aebf760a07c5860ff5aa6ba79f7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/98b570c6a0c19aebf760a07c5860ff5aa6ba79f7"}], "stats": {"total": 27, "additions": 22, "deletions": 5}, "files": [{"sha": "dec6acc65f20da63af9b515836febc8334bfdcaa", "filename": "gcc/gcc.c", "status": "modified", "additions": 22, "deletions": 5, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f271358e78d36a616c3b4f8b73f1b3b6513ce42b/gcc%2Fgcc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f271358e78d36a616c3b4f8b73f1b3b6513ce42b/gcc%2Fgcc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgcc.c?ref=f271358e78d36a616c3b4f8b73f1b3b6513ce42b", "patch": "@@ -232,7 +232,7 @@ static int check_live_switch\tPROTO((int, int));\n static char *handle_braces\tPROTO((char *));\n static char *save_string\tPROTO((char *, int));\n static char *concat\t\tPVPROTO((char *, ...));\n-static int do_spec\t\tPROTO((char *));\n+extern int do_spec\t\tPROTO((char *));\n static int do_spec_1\t\tPROTO((char *, int, char *));\n static char *find_file\t\tPROTO((char *));\n static int is_directory\t\tPROTO((char *, char *, int));\n@@ -254,7 +254,14 @@ char *xmalloc ();\n char *xrealloc ();\n \n #ifdef LANG_SPECIFIC_DRIVER\n+/* Called before processing to change/add/remove arguments. */\n extern void lang_specific_driver PROTO ((void (*) PVPROTO((char *, ...)), int *, char ***, int *));\n+\n+/* Called before linking.  Returns 0 on success and -1 on failure. */\n+extern int lang_specific_pre_link ();\n+\n+/* Number of extra output files that lang_specific_pre_link may generate. */\n+extern int lang_specific_extra_ofiles;\n #endif\n \f\n /* Specs are strings containing lines, each of which (if not blank)\n@@ -3111,9 +3118,9 @@ process_command (argc, argv)\n    sans all directory names, and basename_length is the number\n    of characters starting there excluding the suffix .c or whatever.  */\n \n-static char *input_filename;\n+char *input_filename;\n static int input_file_number;\n-static size_t input_filename_length;\n+size_t input_filename_length;\n static int basename_length;\n static char *input_basename;\n static char *input_suffix;\n@@ -3143,7 +3150,7 @@ static int input_from_pipe;\n /* Process the spec SPEC and run the commands specified therein.\n    Returns 0 if the spec is successfully processed; -1 if failed.  */\n \n-static int\n+int\n do_spec (spec)\n      char *spec;\n {\n@@ -4739,7 +4746,11 @@ main (argc, argv)\n   /* Make a place to record the compiler output file names\n      that correspond to the input files.  */\n \n-  outfiles = (char **) xmalloc (n_infiles * sizeof (char *));\n+  i = n_infiles;\n+#ifdef LANG_SPECIFIC_DRIVER\n+  i += lang_specific_extra_ofiles;\n+#endif\n+  outfiles = (char **) xmalloc (i * sizeof (char *));\n   bzero ((char *) outfiles, n_infiles * sizeof (char *));\n \n   /* Record which files were specified explicitly as link input.  */\n@@ -4835,6 +4846,12 @@ main (argc, argv)\n       clear_failure_queue ();\n     }\n \n+#ifdef LANG_SPECIFIC_DRIVER\n+  if (error_count == 0\n+      && lang_specific_pre_link ())\n+    error_count++;\n+#endif\n+\n   /* Run ld to link all the compiler output files.  */\n \n   if (error_count == 0)"}]}