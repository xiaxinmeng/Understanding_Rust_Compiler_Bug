{"sha": "fa5aa8353877421229443a04c4d9711fb2dd4aa5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZmE1YWE4MzUzODc3NDIxMjI5NDQzYTA0YzRkOTcxMWZiMmRkNGFhNQ==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2010-06-22T13:20:17Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2010-06-22T13:20:17Z"}, "message": "[multiple changes]\n\n2010-06-22  Emmanuel Briot  <briot@adacore.com>\n\n\t* fmap.adb, scng.adb, switch-m.ads, sinput-c.adb, opt.ads, output.ads,\n\ttree_io.ads, osint.adb, osint.ads: Use configuration pragmas to prevent\n\twarnings on use of internal GNAT units.\n\n2010-06-22  Jose Ruiz  <ruiz@adacore.com>\n\n\t* s-taprop-vxworks.adb (Set_Priority): Update comments.\n\n2010-06-22  Paul Hilfinger  <hilfinger@adacore.com>\n\n\t* s-rannum.adb: Make stylistic change to remove mystery constant in\n\tExtract_Value.  Image_Numeral_Length: new symbolic constant.\n\n2010-06-22  Ed Schonberg  <schonberg@adacore.com>\n\n\t* einfo.ads, einfo.adb: Make Is_Protected_Interface,\n\tIs_Synchronized_Interface, Is_Task_Interface into computable\n\tpredicates, to free three flags in entity nodes.\n\t* sem_ch3.adb: Remove setting of these flags.\n\nFrom-SVN: r161181", "tree": {"sha": "ba1a77f937880d077256606fd8983752c417793d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ba1a77f937880d077256606fd8983752c417793d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/fa5aa8353877421229443a04c4d9711fb2dd4aa5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fa5aa8353877421229443a04c4d9711fb2dd4aa5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fa5aa8353877421229443a04c4d9711fb2dd4aa5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fa5aa8353877421229443a04c4d9711fb2dd4aa5/comments", "author": null, "committer": null, "parents": [{"sha": "f6da8aff3dfd442088e586dc69bb7cc5c67167bd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f6da8aff3dfd442088e586dc69bb7cc5c67167bd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f6da8aff3dfd442088e586dc69bb7cc5c67167bd"}], "stats": {"total": 316, "additions": 183, "deletions": 133}, "files": [{"sha": "0dd0ed344c1c28808bcf026d79c7fe2f988f1dd5", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fa5aa8353877421229443a04c4d9711fb2dd4aa5/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fa5aa8353877421229443a04c4d9711fb2dd4aa5/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=fa5aa8353877421229443a04c4d9711fb2dd4aa5", "patch": "@@ -1,3 +1,25 @@\n+2010-06-22  Emmanuel Briot  <briot@adacore.com>\n+\n+\t* fmap.adb, scng.adb, switch-m.ads, sinput-c.adb, opt.ads, output.ads,\n+\ttree_io.ads, osint.adb, osint.ads: Use configuration pragmas to prevent\n+\twarnings on use of internal GNAT units.\n+\n+2010-06-22  Jose Ruiz  <ruiz@adacore.com>\n+\n+\t* s-taprop-vxworks.adb (Set_Priority): Update comments.\n+\n+2010-06-22  Paul Hilfinger  <hilfinger@adacore.com>\n+\n+\t* s-rannum.adb: Make stylistic change to remove mystery constant in\n+\tExtract_Value.  Image_Numeral_Length: new symbolic constant.\n+\n+2010-06-22  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* einfo.ads, einfo.adb: Make Is_Protected_Interface,\n+\tIs_Synchronized_Interface, Is_Task_Interface into computable\n+\tpredicates, to free three flags in entity nodes.\n+\t* sem_ch3.adb: Remove setting of these flags.\n+\n 2010-06-22  Robert Dewar  <dewar@adacore.com>\n \n \t* uintp.adb, osint.adb, prj-conf.adb, prj-part.adb, prj.adb: Minor"}, {"sha": "357d0bd992689e8d47dc2e7d8522d97ad6409408", "filename": "gcc/ada/einfo.adb", "status": "modified", "additions": 57, "deletions": 42, "changes": 99, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fa5aa8353877421229443a04c4d9711fb2dd4aa5/gcc%2Fada%2Feinfo.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fa5aa8353877421229443a04c4d9711fb2dd4aa5/gcc%2Fada%2Feinfo.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Feinfo.adb?ref=fa5aa8353877421229443a04c4d9711fb2dd4aa5", "patch": "@@ -455,9 +455,6 @@ package body Einfo is\n    --    Is_Primitive_Wrapper            Flag195\n    --    Was_Hidden                      Flag196\n    --    Is_Limited_Interface            Flag197\n-   --    Is_Protected_Interface          Flag198\n-   --    Is_Synchronized_Interface       Flag199\n-   --    Is_Task_Interface               Flag200\n \n    --    Has_Anon_Block_Suffix           Flag201\n    --    Itype_Printed                   Flag202\n@@ -511,6 +508,10 @@ package body Einfo is\n    --    Is_Underlying_Record_View       Flag246\n    --    OK_To_Rename                    Flag247\n \n+   --    (unused)                        Flag198\n+   --    (unused)                        Flag199\n+   --    (unused)                        Flag200\n+\n    -----------------------\n    -- Local subprograms --\n    -----------------------\n@@ -1942,12 +1943,6 @@ package body Einfo is\n       return Flag245 (Id);\n    end Is_Private_Primitive;\n \n-   function Is_Protected_Interface (Id : E) return B is\n-   begin\n-      pragma Assert (Is_Interface (Id));\n-      return Flag198 (Id);\n-   end Is_Protected_Interface;\n-\n    function Is_Public (Id : E) return B is\n    begin\n       pragma Assert (Nkind (Id) in N_Entity);\n@@ -2007,12 +2002,6 @@ package body Einfo is\n       return Flag28 (Id);\n    end Is_Statically_Allocated;\n \n-   function Is_Synchronized_Interface (Id : E) return B is\n-   begin\n-      pragma Assert (Is_Interface (Id));\n-      return Flag199 (Id);\n-   end Is_Synchronized_Interface;\n-\n    function Is_Tag (Id : E) return B is\n    begin\n       pragma Assert (Nkind (Id) in N_Entity);\n@@ -2024,12 +2013,6 @@ package body Einfo is\n       return Flag55 (Id);\n    end Is_Tagged_Type;\n \n-   function Is_Task_Interface (Id : E) return B is\n-   begin\n-      pragma Assert (Is_Interface (Id));\n-      return Flag200 (Id);\n-   end Is_Task_Interface;\n-\n    function Is_Thunk (Id : E) return B is\n    begin\n       pragma Assert (Is_Subprogram (Id));\n@@ -4390,12 +4373,6 @@ package body Einfo is\n       Set_Flag245 (Id, V);\n    end Set_Is_Private_Primitive;\n \n-   procedure Set_Is_Protected_Interface (Id : E; V : B := True) is\n-   begin\n-      pragma Assert (Is_Interface (Id));\n-      Set_Flag198 (Id, V);\n-   end Set_Is_Protected_Interface;\n-\n    procedure Set_Is_Public (Id : E; V : B := True) is\n    begin\n       pragma Assert (Nkind (Id) in N_Entity);\n@@ -4461,12 +4438,6 @@ package body Einfo is\n       Set_Flag28 (Id, V);\n    end Set_Is_Statically_Allocated;\n \n-   procedure Set_Is_Synchronized_Interface (Id : E; V : B := True) is\n-   begin\n-      pragma Assert (Is_Interface (Id));\n-      Set_Flag199 (Id, V);\n-   end Set_Is_Synchronized_Interface;\n-\n    procedure Set_Is_Tag (Id : E; V : B := True) is\n    begin\n       pragma Assert (Ekind_In (Id, E_Component, E_Constant));\n@@ -4478,12 +4449,6 @@ package body Einfo is\n       Set_Flag55 (Id, V);\n    end Set_Is_Tagged_Type;\n \n-   procedure Set_Is_Task_Interface (Id : E; V : B := True) is\n-   begin\n-      pragma Assert (Is_Interface (Id));\n-      Set_Flag200 (Id, V);\n-   end Set_Is_Task_Interface;\n-\n    procedure Set_Is_Thunk (Id : E; V : B := True) is\n    begin\n       Set_Flag225 (Id, V);\n@@ -6112,6 +6077,22 @@ package body Einfo is\n         and then Is_Protected_Type (Scope (Id));\n    end Is_Protected_Component;\n \n+   ----------------------------\n+   -- Is_Protected_Interface --\n+   ----------------------------\n+\n+   function Is_Protected_Interface (Id : E) return B is\n+      Typ : constant Entity_Id := Base_Type (Id);\n+   begin\n+      if not Is_Interface (Typ) then\n+         return False;\n+      elsif Is_Class_Wide_Type (Typ) then\n+         return Is_Protected_Interface (Etype (Typ));\n+      else\n+         return Protected_Present (Type_Definition (Parent (Typ)));\n+      end if;\n+   end Is_Protected_Interface;\n+\n    ------------------------------\n    -- Is_Protected_Record_Type --\n    ------------------------------\n@@ -6158,6 +6139,43 @@ package body Einfo is\n                   and then Is_Character_Type (Component_Type (Id)));\n    end Is_String_Type;\n \n+   -------------------------------\n+   -- Is_Synchronized_Interface --\n+   -------------------------------\n+\n+   function Is_Synchronized_Interface (Id : E) return B is\n+      Typ : constant Entity_Id := Base_Type (Id);\n+\n+   begin\n+      if not Is_Interface (Typ) then\n+         return False;\n+\n+      elsif Is_Class_Wide_Type (Typ) then\n+         return Is_Synchronized_Interface (Etype (Typ));\n+\n+      else\n+         return    Protected_Present    (Type_Definition (Parent (Typ)))\n+           or else Synchronized_Present (Type_Definition (Parent (Typ)))\n+           or else Task_Present         (Type_Definition (Parent (Typ)));\n+      end if;\n+   end Is_Synchronized_Interface;\n+\n+   -----------------------\n+   -- Is_Task_Interface --\n+   -----------------------\n+\n+   function Is_Task_Interface (Id : E) return B is\n+      Typ : constant Entity_Id := Base_Type (Id);\n+   begin\n+      if not Is_Interface (Typ) then\n+         return False;\n+      elsif Is_Class_Wide_Type (Typ) then\n+         return Is_Task_Interface (Etype (Typ));\n+      else\n+         return Task_Present (Type_Definition (Parent (Typ)));\n+      end if;\n+   end Is_Task_Interface;\n+\n    -------------------------\n    -- Is_Task_Record_Type --\n    -------------------------\n@@ -6927,7 +6945,6 @@ package body Einfo is\n       W (\"Is_Private_Composite\",            Flag107 (Id));\n       W (\"Is_Private_Descendant\",           Flag53  (Id));\n       W (\"Is_Private_Primitive\",            Flag245 (Id));\n-      W (\"Is_Protected_Interface\",          Flag198 (Id));\n       W (\"Is_Public\",                       Flag10  (Id));\n       W (\"Is_Pure\",                         Flag44  (Id));\n       W (\"Is_Pure_Unit_Access_Type\",        Flag189 (Id));\n@@ -6938,11 +6955,9 @@ package body Einfo is\n       W (\"Is_Renaming_Of_Object\",           Flag112 (Id));\n       W (\"Is_Return_Object\",                Flag209 (Id));\n       W (\"Is_Shared_Passive\",               Flag60  (Id));\n-      W (\"Is_Synchronized_Interface\",       Flag199 (Id));\n       W (\"Is_Statically_Allocated\",         Flag28  (Id));\n       W (\"Is_Tag\",                          Flag78  (Id));\n       W (\"Is_Tagged_Type\",                  Flag55  (Id));\n-      W (\"Is_Task_Interface\",               Flag200 (Id));\n       W (\"Is_Thunk\",                        Flag225 (Id));\n       W (\"Is_Trivial_Subprogram\",           Flag235 (Id));\n       W (\"Is_True_Constant\",                Flag163 (Id));"}, {"sha": "3d846fe063fa951a5c06f3c6193c694fca81f588", "filename": "gcc/ada/einfo.ads", "status": "modified", "additions": 6, "deletions": 18, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fa5aa8353877421229443a04c4d9711fb2dd4aa5/gcc%2Fada%2Feinfo.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fa5aa8353877421229443a04c4d9711fb2dd4aa5/gcc%2Fada%2Feinfo.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Feinfo.ads?ref=fa5aa8353877421229443a04c4d9711fb2dd4aa5", "patch": "@@ -2477,7 +2477,7 @@ package Einfo is\n --       Applicable to all entities, true if the entity denotes a private\n --       component of a protected type.\n \n---    Is_Protected_Interface (Flag198)\n+--    Is_Protected_Interface (Synthesized)\n --       Present in types that are interfaces. True if interface is declared\n --       protected, or is derived from protected interfaces.\n \n@@ -2584,7 +2584,7 @@ package Einfo is\n --       Applies to all entities, true for function, procedure and operator\n --       entities.\n \n---    Is_Synchronized_Interface (Flag199)\n+--    Is_Synchronized_Interface (synthesized)\n --       Present in types that are interfaces. True if interface is declared\n --       synchronized, task, or protected, or is derived from a synchronized\n --       interface.\n@@ -2598,7 +2598,7 @@ package Einfo is\n --    Is_Tagged_Type (Flag55)\n --       Present in all entities. Set for an entity for a tagged type.\n \n---    Is_Task_Interface (Flag200)\n+--    Is_Task_Interface (Synthesized)\n --       Present in types that are interfaces. True if interface is declared as\n --       a task interface, or if it is derived from task interfaces.\n \n@@ -4641,10 +4641,7 @@ package Einfo is\n    --    Is_Eliminated                       (Flag124)\n    --    Is_Frozen                           (Flag4)\n    --    Is_Generic_Actual_Type              (Flag94)\n-   --    Is_Protected_Interface              (Flag198)\n    --    Is_RACW_Stub_Type                   (Flag244)\n-   --    Is_Synchronized_Interface           (Flag199)\n-   --    Is_Task_Interface                   (Flag200)\n    --    Is_Non_Static_Subtype               (Flag109)\n    --    Is_Packed                           (Flag51)   (base type only)\n    --    Is_Private_Composite                (Flag107)\n@@ -5915,7 +5912,6 @@ package Einfo is\n    function Is_Private_Composite                (Id : E) return B;\n    function Is_Private_Descendant               (Id : E) return B;\n    function Is_Private_Primitive                (Id : E) return B;\n-   function Is_Protected_Interface              (Id : E) return B;\n    function Is_Public                           (Id : E) return B;\n    function Is_Pure                             (Id : E) return B;\n    function Is_Pure_Unit_Access_Type            (Id : E) return B;\n@@ -5927,10 +5923,8 @@ package Einfo is\n    function Is_Return_Object                    (Id : E) return B;\n    function Is_Shared_Passive                   (Id : E) return B;\n    function Is_Statically_Allocated             (Id : E) return B;\n-   function Is_Synchronized_Interface           (Id : E) return B;\n    function Is_Tag                              (Id : E) return B;\n    function Is_Tagged_Type                      (Id : E) return B;\n-   function Is_Task_Interface                   (Id : E) return B;\n    function Is_Thunk                            (Id : E) return B;\n    function Is_Trivial_Subprogram               (Id : E) return B;\n    function Is_True_Constant                    (Id : E) return B;\n@@ -6140,9 +6134,12 @@ package Einfo is\n    function Is_Package_Or_Generic_Package       (Id : E) return B;\n    function Is_Prival                           (Id : E) return B;\n    function Is_Protected_Component              (Id : E) return B;\n+   function Is_Protected_Interface              (Id : E) return B;\n    function Is_Protected_Record_Type            (Id : E) return B;\n    function Is_Standard_Character_Type          (Id : E) return B;\n    function Is_String_Type                      (Id : E) return B;\n+   function Is_Synchronized_Interface           (Id : E) return B;\n+   function Is_Task_Interface                   (Id : E) return B;\n    function Is_Task_Record_Type                 (Id : E) return B;\n    function Is_Wrapper_Package                  (Id : E) return B;\n    function Next_Component                      (Id : E) return E;\n@@ -6478,7 +6475,6 @@ package Einfo is\n    procedure Set_Is_Private_Composite            (Id : E; V : B := True);\n    procedure Set_Is_Private_Descendant           (Id : E; V : B := True);\n    procedure Set_Is_Private_Primitive            (Id : E; V : B := True);\n-   procedure Set_Is_Protected_Interface          (Id : E; V : B := True);\n    procedure Set_Is_Public                       (Id : E; V : B := True);\n    procedure Set_Is_Pure                         (Id : E; V : B := True);\n    procedure Set_Is_Pure_Unit_Access_Type        (Id : E; V : B := True);\n@@ -6490,10 +6486,8 @@ package Einfo is\n    procedure Set_Is_Return_Object                (Id : E; V : B := True);\n    procedure Set_Is_Shared_Passive               (Id : E; V : B := True);\n    procedure Set_Is_Statically_Allocated         (Id : E; V : B := True);\n-   procedure Set_Is_Synchronized_Interface       (Id : E; V : B := True);\n    procedure Set_Is_Tag                          (Id : E; V : B := True);\n    procedure Set_Is_Tagged_Type                  (Id : E; V : B := True);\n-   procedure Set_Is_Task_Interface               (Id : E; V : B := True);\n    procedure Set_Is_Thunk                        (Id : E; V : B := True);\n    procedure Set_Is_Trivial_Subprogram           (Id : E; V : B := True);\n    procedure Set_Is_True_Constant                (Id : E; V : B := True);\n@@ -7170,7 +7164,6 @@ package Einfo is\n    pragma Inline (Is_Private_Descendant);\n    pragma Inline (Is_Private_Primitive);\n    pragma Inline (Is_Private_Type);\n-   pragma Inline (Is_Protected_Interface);\n    pragma Inline (Is_Protected_Type);\n    pragma Inline (Is_Public);\n    pragma Inline (Is_Pure);\n@@ -7188,10 +7181,8 @@ package Einfo is\n    pragma Inline (Is_Signed_Integer_Type);\n    pragma Inline (Is_Statically_Allocated);\n    pragma Inline (Is_Subprogram);\n-   pragma Inline (Is_Synchronized_Interface);\n    pragma Inline (Is_Tag);\n    pragma Inline (Is_Tagged_Type);\n-   pragma Inline (Is_Task_Interface);\n    pragma Inline (Is_True_Constant);\n    pragma Inline (Is_Task_Type);\n    pragma Inline (Is_Thunk);\n@@ -7570,7 +7561,6 @@ package Einfo is\n    pragma Inline (Set_Is_Private_Composite);\n    pragma Inline (Set_Is_Private_Descendant);\n    pragma Inline (Set_Is_Private_Primitive);\n-   pragma Inline (Set_Is_Protected_Interface);\n    pragma Inline (Set_Is_Public);\n    pragma Inline (Set_Is_Pure);\n    pragma Inline (Set_Is_Pure_Unit_Access_Type);\n@@ -7582,10 +7572,8 @@ package Einfo is\n    pragma Inline (Set_Is_Return_Object);\n    pragma Inline (Set_Is_Shared_Passive);\n    pragma Inline (Set_Is_Statically_Allocated);\n-   pragma Inline (Set_Is_Synchronized_Interface);\n    pragma Inline (Set_Is_Tag);\n    pragma Inline (Set_Is_Tagged_Type);\n-   pragma Inline (Set_Is_Task_Interface);\n    pragma Inline (Set_Is_Thunk);\n    pragma Inline (Set_Is_Trivial_Subprogram);\n    pragma Inline (Set_Is_True_Constant);"}, {"sha": "2dd07c05e9aeb2b3e6332e03226d8d3d11f84db2", "filename": "gcc/ada/fmap.adb", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fa5aa8353877421229443a04c4d9711fb2dd4aa5/gcc%2Fada%2Ffmap.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fa5aa8353877421229443a04c4d9711fb2dd4aa5/gcc%2Fada%2Ffmap.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ffmap.adb?ref=fa5aa8353877421229443a04c4d9711fb2dd4aa5", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 2001-2009, Free Software Foundation, Inc.         --\n+--          Copyright (C) 2001-2010, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -23,6 +23,10 @@\n --                                                                          --\n ------------------------------------------------------------------------------\n \n+--  This unit is used by gnatcoll\n+pragma Warnings (Off, \"*is an internal GNAT unit\");\n+pragma Warnings (Off, \"*use * instead\");\n+\n with Opt;    use Opt;\n with Osint;  use Osint;\n with Output; use Output;"}, {"sha": "9319f2dcc4205da651a9e2f71e3075688906720b", "filename": "gcc/ada/opt.ads", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fa5aa8353877421229443a04c4d9711fb2dd4aa5/gcc%2Fada%2Fopt.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fa5aa8353877421229443a04c4d9711fb2dd4aa5/gcc%2Fada%2Fopt.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fopt.ads?ref=fa5aa8353877421229443a04c4d9711fb2dd4aa5", "patch": "@@ -38,6 +38,10 @@\n --  use the Project Manager. These tools include gnatmake, gnatname, the gnat\n --  driver, gnatclean, gprbuild and gprclean.\n \n+--  This unit is used by gnatcoll\n+pragma Warnings (Off, \"*is an internal GNAT unit\");\n+pragma Warnings (Off, \"*use * instead\");\n+\n with Hostparm; use Hostparm;\n with Types;    use Types;\n "}, {"sha": "bbce9198784d28e35282c442886c40c5532b1e5c", "filename": "gcc/ada/osint.adb", "status": "modified", "additions": 9, "deletions": 5, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fa5aa8353877421229443a04c4d9711fb2dd4aa5/gcc%2Fada%2Fosint.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fa5aa8353877421229443a04c4d9711fb2dd4aa5/gcc%2Fada%2Fosint.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fosint.adb?ref=fa5aa8353877421229443a04c4d9711fb2dd4aa5", "patch": "@@ -23,11 +23,9 @@\n --                                                                          --\n ------------------------------------------------------------------------------\n \n-with Unchecked_Conversion;\n-\n-with System.Case_Util; use System.Case_Util;\n-\n-with GNAT.HTable;\n+--  This unit is used by gnatcoll\n+pragma Warnings (Off, \"*is an internal GNAT unit\");\n+pragma Warnings (Off, \"*use * instead\");\n \n with Alloc;\n with Debug;\n@@ -40,6 +38,12 @@ with Sdefault; use Sdefault;\n with Table;\n with Targparm; use Targparm;\n \n+with Unchecked_Conversion;\n+\n+with System.Case_Util; use System.Case_Util;\n+\n+with GNAT.HTable;\n+\n package body Osint is\n \n    Running_Program : Program_Type := Unspecified;"}, {"sha": "08d074a406f4def66c8fabbde4ab8d52f7ca6756", "filename": "gcc/ada/osint.ads", "status": "modified", "additions": 9, "deletions": 6, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fa5aa8353877421229443a04c4d9711fb2dd4aa5/gcc%2Fada%2Fosint.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fa5aa8353877421229443a04c4d9711fb2dd4aa5/gcc%2Fada%2Fosint.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fosint.ads?ref=fa5aa8353877421229443a04c4d9711fb2dd4aa5", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1992-2009, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2010, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -26,22 +26,25 @@\n --  This package contains the low level, operating system routines used in the\n --  compiler and binder for command line processing and file input output.\n \n+--  This unit is used by gnatcoll\n+pragma Warnings (Off, \"*is an internal GNAT unit\");\n+pragma Warnings (Off, \"*use * instead\");\n+\n with Namet; use Namet;\n with Types; use Types;\n \n-with System.Storage_Elements;\n-with System.OS_Lib;           use System.OS_Lib;\n with System;                  use System;\n+with System.OS_Lib;           use System.OS_Lib;\n+with System.Storage_Elements;\n \n pragma Elaborate_All (System.OS_Lib);\n --  For the call to function Get_Target_Object_Suffix in the private part\n \n package Osint is\n \n    Multi_Unit_Index_Character : Character := '~';\n-   --  The character before the index of the unit in a multi-unit source, in\n-   --  ALI and object file names. This is not a constant, because it is changed\n-   --  to '$' on VMS.\n+   --  The character before the index of the unit in a multi-unit source in ALI\n+   --  and object file names. Changed to '$' on VMS.\n \n    Ada_Include_Path          : constant String := \"ADA_INCLUDE_PATH\";\n    Ada_Objects_Path          : constant String := \"ADA_OBJECTS_PATH\";"}, {"sha": "0f121786e12eb96140242bdeded4a829b89ad9e8", "filename": "gcc/ada/output.ads", "status": "modified", "additions": 41, "deletions": 38, "changes": 79, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fa5aa8353877421229443a04c4d9711fb2dd4aa5/gcc%2Fada%2Foutput.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fa5aa8353877421229443a04c4d9711fb2dd4aa5/gcc%2Fada%2Foutput.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Foutput.ads?ref=fa5aa8353877421229443a04c4d9711fb2dd4aa5", "patch": "@@ -33,40 +33,43 @@\n --  writing error messages and informational output. It is also used by the\n --  debug source file output routines (see Sprint.Print_Debug_Line).\n \n-with System.OS_Lib; use System.OS_Lib;\n+--  This unit is used by gnatcoll\n+pragma Warnings (Off, \"*is an internal GNAT unit\");\n+pragma Warnings (Off, \"*use * instead\");\n \n with Hostparm; use Hostparm;\n with Types;    use Types;\n \n+with System.OS_Lib; use System.OS_Lib;\n+\n package Output is\n    pragma Elaborate_Body;\n \n    type Output_Proc is access procedure (S : String);\n-   --  This type is used for the Set_Special_Output procedure. If this\n-   --  procedure is called, then instead of lines being written to\n-   --  standard error or standard output, a call is made to the given\n-   --  procedure for each line, passing the line with an end of line\n-   --  character (which is a single ASCII.LF character, even in systems\n-   --  which normally use CR/LF or some other sequence for line end).\n+   --  This type is used for the Set_Special_Output procedure. If Output_Proc\n+   --  is called, then instead of lines being written to standard error or\n+   --  standard output, a call is made to the given procedure for each line,\n+   --  passing the line with an end of line character (which is a single\n+   --  ASCII.LF character, even in systems which normally use CR/LF or some\n+   --  other sequence for line end).\n \n    -----------------\n    -- Subprograms --\n    -----------------\n \n    procedure Set_Special_Output (P : Output_Proc);\n-   --  Sets subsequent output to call procedure P. If P is null, then\n-   --  the call cancels the effect of a previous call, reverting the\n-   --  output to standard error or standard output depending on the\n-   --  mode at the time of previous call. Any exception generated by\n-   --  by calls to P is simply propagated to the caller of the routine\n-   --  causing the write operation.\n+   --  Sets subsequent output to call procedure P. If P is null, then the call\n+   --  cancels the effect of a previous call, reverting the output to standard\n+   --  error or standard output depending on the mode at the time of previous\n+   --  call. Any exception generated by by calls to P is simply propagated to\n+   --  the caller of the routine causing the write operation.\n \n    procedure Cancel_Special_Output;\n-   --  Cancels the effect of a call to Set_Special_Output, if any.\n-   --  The output is then directed to standard error or standard output\n-   --  depending on the last call to Set_Standard_Error or Set_Standard_Output.\n-   --  It is never an error to call Cancel_Special_Output. It has the same\n-   --  effect as calling Set_Special_Output (null).\n+   --  Cancels the effect of a call to Set_Special_Output, if any. The output\n+   --  is then directed to standard error or standard output depending on the\n+   --  last call to Set_Standard_Error or Set_Standard_Output. It is never an\n+   --  error to call Cancel_Special_Output. It has the same effect as calling\n+   --  Set_Special_Output (null).\n \n    procedure Ignore_Output (S : String);\n    --  Does nothing. To disable output, pass Ignore_Output'Access to\n@@ -81,16 +84,16 @@ package Output is\n \n    procedure Set_Standard_Output;\n    --  Sets subsequent output to appear on the standard output file (whatever\n-   --  that might mean for the host operating system, if anything) when\n-   --  no special output is in effect. When a special output is in effect,\n-   --  the output will appear on standard output only after special output\n-   --  has been cancelled. Output to standard output is the default mode\n-   --  before any call to either of the Set procedures.\n+   --  that might mean for the host operating system, if anything) when no\n+   --  special output is in effect. When a special output is in effect, the\n+   --  output will appear on standard output only after special output has been\n+   --  cancelled. Output to standard output is the default mode before any call\n+   --  to either of the Set procedures.\n \n    procedure Set_Output (FD : File_Descriptor);\n    --  Sets subsequent output to appear on the given file descriptor when no\n-   --  special output is in effect. When a special output is in effect,\n-   --  the output will appear on the given file descriptor only after special\n+   --  special output is in effect. When a special output is in effect, the\n+   --  output will appear on the given file descriptor only after special\n    --  output has been cancelled.\n \n    procedure Indent;\n@@ -109,36 +112,36 @@ package Output is\n    --  If last character in buffer matches C, erase it, otherwise no effect\n \n    procedure Write_Eol;\n-   --  Write an end of line (whatever is required by the system in use,\n-   --  e.g. CR/LF for DOS, or LF for Unix) to the standard output file.\n-   --  This routine also empties the line buffer, actually writing it\n-   --  to the file. Note that Write_Eol is the only routine that causes\n-   --  any actual output to be written. Trailing spaces are removed.\n+   --  Write an end of line (whatever is required by the system in use, e.g.\n+   --  CR/LF for DOS, or LF for Unix) to the standard output file. This routine\n+   --  also empties the line buffer, actually writing it to the file. Note that\n+   --  Write_Eol is the only routine that causes any actual output to be\n+   --  written. Trailing spaces are removed.\n \n    procedure Write_Eol_Keep_Blanks;\n    --  Similar as Write_Eol, except that trailing spaces are not removed\n \n    procedure Write_Int (Val : Int);\n-   --  Write an integer value with no leading blanks or zeroes. Negative\n-   --  values are preceded by a minus sign).\n+   --  Write an integer value with no leading blanks or zeroes. Negative values\n+   --  are preceded by a minus sign).\n \n    procedure Write_Spaces (N : Nat);\n    --  Write N spaces\n \n    procedure Write_Str (S : String);\n    --  Write a string of characters to the standard output file. Note that\n-   --  end of line is normally handled separately using WRITE_EOL, but it\n-   --  is allowed for the string to contain LF (but not CR) characters,\n-   --  which are properly interpreted as end of line characters. The string\n-   --  may also contain horizontal tab characters.\n+   --  end of line is normally handled separately using WRITE_EOL, but it is\n+   --  allowable for the string to contain LF (but not CR) characters, which\n+   --  are properly interpreted as end of line characters. The string may also\n+   --  contain horizontal tab characters.\n \n    procedure Write_Line (S : String);\n    --  Equivalent to Write_Str (S) followed by Write_Eol;\n \n    function Column return Pos;\n    pragma Inline (Column);\n-   --  Returns the number of the column about to be written (e.g. a value\n-   --  of 1 means the current line is empty).\n+   --  Returns the number of the column about to be written (e.g. a value of 1\n+   --  means the current line is empty).\n \n    -------------------------\n    -- Buffer Save/Restore --"}, {"sha": "c3865a69a33adc4fb32e0ad3643b2e2a97d10b3a", "filename": "gcc/ada/s-rannum.adb", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fa5aa8353877421229443a04c4d9711fb2dd4aa5/gcc%2Fada%2Fs-rannum.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fa5aa8353877421229443a04c4d9711fb2dd4aa5/gcc%2Fada%2Fs-rannum.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-rannum.adb?ref=fa5aa8353877421229443a04c4d9711fb2dd4aa5", "patch": "@@ -119,6 +119,7 @@ package body System.Random_Numbers is\n              (Year => 2000, Month => 1, Day => 1, Seconds => 0.0);\n    --  First Year 2000 day\n \n+   Image_Numeral_Length : constant := Max_Image_Width / N;\n    subtype Image_String is String (1 .. Max_Image_Width);\n \n    --  Utility functions\n@@ -526,9 +527,9 @@ package body System.Random_Numbers is\n    -------------------\n \n    function Extract_Value (S : String; Index : Integer) return State_Val is\n+      Start : constant Integer := S'First + Index * Image_Numeral_Length;\n    begin\n-      return State_Val'Value (S (S'First + Index * 11 ..\n-                                 S'First + Index * 11 + 10));\n+      return State_Val'Value (S (Start .. Start + Image_Numeral_Length - 1));\n    end Extract_Value;\n \n end System.Random_Numbers;"}, {"sha": "2cf8131755bd47da6e10cb021dd6ec36c1640270", "filename": "gcc/ada/s-taprop-vxworks.adb", "status": "modified", "additions": 6, "deletions": 4, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fa5aa8353877421229443a04c4d9711fb2dd4aa5/gcc%2Fada%2Fs-taprop-vxworks.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fa5aa8353877421229443a04c4d9711fb2dd4aa5/gcc%2Fada%2Fs-taprop-vxworks.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-taprop-vxworks.adb?ref=fa5aa8353877421229443a04c4d9711fb2dd4aa5", "patch": "@@ -745,10 +745,12 @@ package body System.Task_Primitives.Operations is\n           (T.Common.LL.Thread, To_VxWorks_Priority (int (Prio)));\n       pragma Assert (Result = 0);\n \n-      --  Note: in VxWorks, the task is placed at the end of the priority queue\n-      --  instead of the head. This is not the behavior required by Annex D,\n-      --  but we consider it an acceptable variation (RM 1.1.3(6)), given this\n-      --  is the built-in behavior of the operating system.\n+      --  Note: in VxWorks 6.6 (or earlier), the task is placed at the end of\n+      --  the priority queue instead of the head. This is not the behavior\n+      --  required by Annex D (RM D.2.3(5/2)), but we consider it an acceptable\n+      --  variation (RM 1.1.3(6)), given this is the built-in behavior of the\n+      --  operating system. VxWorks versions starting from 6.7 implement the\n+      --  required Annex D semantics.\n \n       --  In older versions we attempted to better approximate the Annex D\n       --  required behavior, but this simulation was not entirely accurate,"}, {"sha": "383d88472726a94cf6d551757643ebada40fe784", "filename": "gcc/ada/scng.adb", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fa5aa8353877421229443a04c4d9711fb2dd4aa5/gcc%2Fada%2Fscng.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fa5aa8353877421229443a04c4d9711fb2dd4aa5/gcc%2Fada%2Fscng.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fscng.adb?ref=fa5aa8353877421229443a04c4d9711fb2dd4aa5", "patch": "@@ -23,6 +23,11 @@\n --                                                                          --\n ------------------------------------------------------------------------------\n \n+--  This unit is used by gnatcoll\n+pragma Warnings (Off, \"*is an internal GNAT unit\");\n+pragma Warnings (Off, \"*use of this unit is non-portable*\");\n+pragma Warnings (Off, \"*use * instead\");\n+\n with Csets;    use Csets;\n with Err_Vars; use Err_Vars;\n with Hostparm; use Hostparm;"}, {"sha": "1cb03ba407d8643678c58bea191556cb5a3a8e07", "filename": "gcc/ada/sem_ch3.adb", "status": "modified", "additions": 0, "deletions": 14, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fa5aa8353877421229443a04c4d9711fb2dd4aa5/gcc%2Fada%2Fsem_ch3.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fa5aa8353877421229443a04c4d9711fb2dd4aa5/gcc%2Fada%2Fsem_ch3.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch3.adb?ref=fa5aa8353877421229443a04c4d9711fb2dd4aa5", "patch": "@@ -2166,17 +2166,6 @@ package body Sem_Ch3 is\n               or else Synchronized_Present (Def)\n               or else Task_Present (Def));\n \n-      Set_Is_Protected_Interface (T, Protected_Present (Def));\n-      Set_Is_Task_Interface (T, Task_Present (Def));\n-\n-      --  Type is a synchronized interface if it includes the keyword task,\n-      --  protected, or synchronized.\n-\n-      Set_Is_Synchronized_Interface\n-        (T, Synchronized_Present (Def)\n-              or else Protected_Present (Def)\n-              or else Task_Present (Def));\n-\n       Set_Interfaces (T, New_Elmt_List);\n       Set_Primitive_Operations (T, New_Elmt_List);\n \n@@ -2186,9 +2175,6 @@ package body Sem_Ch3 is\n       if Present (CW) then\n          Set_Is_Interface (CW);\n          Set_Is_Limited_Interface      (CW, Is_Limited_Interface (T));\n-         Set_Is_Protected_Interface    (CW, Is_Protected_Interface (T));\n-         Set_Is_Synchronized_Interface (CW, Is_Synchronized_Interface (T));\n-         Set_Is_Task_Interface         (CW, Is_Task_Interface (T));\n       end if;\n \n       --  Check runtime support for synchronized interfaces"}, {"sha": "3c7a882e5592eda27956d541be5ee55cb78292b0", "filename": "gcc/ada/sinput-c.adb", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fa5aa8353877421229443a04c4d9711fb2dd4aa5/gcc%2Fada%2Fsinput-c.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fa5aa8353877421229443a04c4d9711fb2dd4aa5/gcc%2Fada%2Fsinput-c.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsinput-c.adb?ref=fa5aa8353877421229443a04c4d9711fb2dd4aa5", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2009, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2010, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -23,6 +23,10 @@\n --                                                                          --\n ------------------------------------------------------------------------------\n \n+--  This unit is used by gnatcoll\n+pragma Warnings (Off, \"*is an internal GNAT unit\");\n+pragma Warnings (Off, \"*use * instead\");\n+\n with Opt;    use Opt;\n with System; use System;\n "}, {"sha": "9ae4860021e6f67eb218f67cb20ffe2ea93465f0", "filename": "gcc/ada/switch-m.ads", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fa5aa8353877421229443a04c4d9711fb2dd4aa5/gcc%2Fada%2Fswitch-m.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fa5aa8353877421229443a04c4d9711fb2dd4aa5/gcc%2Fada%2Fswitch-m.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fswitch-m.ads?ref=fa5aa8353877421229443a04c4d9711fb2dd4aa5", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 2001-2009, Free Software Foundation, Inc.         --\n+--          Copyright (C) 2001-2010, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -29,7 +29,12 @@\n --  switches that are recognized. In addition, package Debug documents\n --  the otherwise undocumented debug switches that are also recognized.\n \n+--  This unit is used by gnatcoll\n+pragma Warnings (Off, \"*is an internal GNAT unit\");\n+pragma Warnings (Off, \"*use * instead\");\n+\n with System.OS_Lib; use System.OS_Lib;\n+\n with Prj.Tree;\n \n package Switch.M is"}, {"sha": "f70c92f6b2711a0d39de48b4c2e82ccd2eedba9a", "filename": "gcc/ada/tree_io.ads", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fa5aa8353877421229443a04c4d9711fb2dd4aa5/gcc%2Fada%2Ftree_io.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fa5aa8353877421229443a04c4d9711fb2dd4aa5/gcc%2Fada%2Ftree_io.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ftree_io.ads?ref=fa5aa8353877421229443a04c4d9711fb2dd4aa5", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1992-2009, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2010, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -34,6 +34,10 @@\n --  create and close routines are elsewhere (in Osint in the compiler, and in\n --  the tree read driver for the tree read interface).\n \n+--  This unit is used by gnatcoll\n+pragma Warnings (Off, \"*is an internal GNAT unit\");\n+pragma Warnings (Off, \"*use * instead\");\n+\n with Types; use Types;\n \n with System;        use System;"}]}