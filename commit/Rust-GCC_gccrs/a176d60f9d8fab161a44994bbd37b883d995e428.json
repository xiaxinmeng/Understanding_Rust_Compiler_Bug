{"sha": "a176d60f9d8fab161a44994bbd37b883d995e428", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTE3NmQ2MGY5ZDhmYWIxNjFhNDQ5OTRiYmQzN2I4ODNkOTk1ZTQyOA==", "commit": {"author": {"name": "H.J. Lu", "email": "hongjiu.lu@intel.com", "date": "2007-06-05T12:54:41Z"}, "committer": {"name": "H.J. Lu", "email": "hjl@gcc.gnu.org", "date": "2007-06-05T12:54:41Z"}, "message": "constraints.md (\"Y2\"): Replaced by ...\n\n2007-06-05  H.J. Lu  <hongjiu.lu@intel.com>\n\n\t* config/i386/constraints.md (\"Y2\"): Replaced by ...\n\t(\"Yt\"): This.\n\t* config/i386/i386.md: Likewise.\n\t* config/i386/mmx.md: Likewise.\n\t* config/i386/sse.md: Likewise.\n\nFrom-SVN: r125333", "tree": {"sha": "7f565e3a300282b275d5a20278ab9ba4aeab1954", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7f565e3a300282b275d5a20278ab9ba4aeab1954"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a176d60f9d8fab161a44994bbd37b883d995e428", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a176d60f9d8fab161a44994bbd37b883d995e428", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a176d60f9d8fab161a44994bbd37b883d995e428", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a176d60f9d8fab161a44994bbd37b883d995e428/comments", "author": {"login": "hjl-tools", "id": 1072356, "node_id": "MDQ6VXNlcjEwNzIzNTY=", "avatar_url": "https://avatars.githubusercontent.com/u/1072356?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hjl-tools", "html_url": "https://github.com/hjl-tools", "followers_url": "https://api.github.com/users/hjl-tools/followers", "following_url": "https://api.github.com/users/hjl-tools/following{/other_user}", "gists_url": "https://api.github.com/users/hjl-tools/gists{/gist_id}", "starred_url": "https://api.github.com/users/hjl-tools/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hjl-tools/subscriptions", "organizations_url": "https://api.github.com/users/hjl-tools/orgs", "repos_url": "https://api.github.com/users/hjl-tools/repos", "events_url": "https://api.github.com/users/hjl-tools/events{/privacy}", "received_events_url": "https://api.github.com/users/hjl-tools/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "c3b9a8d6883c6b5cb8ba9b825869b257ba388757", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c3b9a8d6883c6b5cb8ba9b825869b257ba388757", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c3b9a8d6883c6b5cb8ba9b825869b257ba388757"}], "stats": {"total": 90, "additions": 49, "deletions": 41}, "files": [{"sha": "4ea1037c542eabf4df5d1f7e40678cd94dd9ee51", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a176d60f9d8fab161a44994bbd37b883d995e428/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a176d60f9d8fab161a44994bbd37b883d995e428/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=a176d60f9d8fab161a44994bbd37b883d995e428", "patch": "@@ -1,3 +1,11 @@\n+2007-06-05  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\t* config/i386/constraints.md (\"Y2\"): Replaced by ...\n+\t(\"Yt\"): This.\n+\t* config/i386/i386.md: Likewise.\n+\t* config/i386/mmx.md: Likewise.\n+\t* config/i386/sse.md: Likewise.\n+\n 2007-06-05  H.J. Lu  <hongjiu.lu@intel.com>\n \n \t* config/i386/constraints.md (\"z\"): Replaced by ..."}, {"sha": "70a0ad038b8a61667489bd36d76965ac2b240979", "filename": "gcc/config/i386/constraints.md", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a176d60f9d8fab161a44994bbd37b883d995e428/gcc%2Fconfig%2Fi386%2Fconstraints.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a176d60f9d8fab161a44994bbd37b883d995e428/gcc%2Fconfig%2Fi386%2Fconstraints.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fconstraints.md?ref=a176d60f9d8fab161a44994bbd37b883d995e428", "patch": "@@ -85,14 +85,14 @@\n \n ;; We use the Y prefix to denote any number of conditional register sets:\n ;;  0\tFirst SSE register.\n-;;  2\tSSE2 enabled\n+;;  t\tSSE2 enabled\n ;;  i\tSSE2 inter-unit moves enabled\n ;;  m\tMMX inter-unit moves enabled\n \n (define_register_constraint \"Y0\" \"TARGET_SSE ? SSE_FIRST_REG : NO_REGS\"\n  \"First SSE register (@code{%xmm0}).\")\n \n-(define_register_constraint \"Y2\" \"TARGET_SSE2 ? SSE_REGS : NO_REGS\"\n+(define_register_constraint \"Yt\" \"TARGET_SSE2 ? SSE_REGS : NO_REGS\"\n  \"@internal Any SSE register, when SSE2 is enabled.\")\n \n (define_register_constraint \"Yi\""}, {"sha": "3e9a15fbf7c283472f742bae4602c3cb6fb32ef9", "filename": "gcc/config/i386/i386.md", "status": "modified", "additions": 16, "deletions": 16, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a176d60f9d8fab161a44994bbd37b883d995e428/gcc%2Fconfig%2Fi386%2Fi386.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a176d60f9d8fab161a44994bbd37b883d995e428/gcc%2Fconfig%2Fi386%2Fi386.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.md?ref=a176d60f9d8fab161a44994bbd37b883d995e428", "patch": "@@ -1987,9 +1987,9 @@\n \n (define_insn \"*movdi_2\"\n   [(set (match_operand:DI 0 \"nonimmediate_operand\"\n-\t\t\t\"=r  ,o  ,*y,m*y,*y,*Y2,m  ,*Y2,*Y2,*x,m ,*x,*x\")\n+\t\t\t\"=r  ,o  ,*y,m*y,*y,*Yt,m  ,*Yt,*Yt,*x,m ,*x,*x\")\n \t(match_operand:DI 1 \"general_operand\"\n-\t\t\t\"riFo,riF,C ,*y ,m ,C  ,*Y2,*Y2,m  ,C ,*x,*x,m \"))]\n+\t\t\t\"riFo,riF,C ,*y ,m ,C  ,*Yt,*Yt,m  ,C ,*x,*x,m \"))]\n   \"!TARGET_64BIT && !(MEM_P (operands[0]) && MEM_P (operands[1]))\"\n   \"@\n    #\n@@ -2460,7 +2460,7 @@\n \n (define_insn \"*pushdf_nointeger\"\n   [(set (match_operand:DF 0 \"push_operand\" \"=<,<,<,<\")\n-\t(match_operand:DF 1 \"general_no_elim_operand\" \"f,Fo,*r,Y2\"))]\n+\t(match_operand:DF 1 \"general_no_elim_operand\" \"f,Fo,*r,Yt\"))]\n   \"!TARGET_64BIT && !TARGET_INTEGER_DFMODE_MOVES\"\n {\n   /* This insn should be already split before reg-stack.  */\n@@ -2472,7 +2472,7 @@\n \n (define_insn \"*pushdf_integer\"\n   [(set (match_operand:DF 0 \"push_operand\" \"=<,<,<\")\n-\t(match_operand:DF 1 \"general_no_elim_operand\" \"f,rFo,Y2\"))]\n+\t(match_operand:DF 1 \"general_no_elim_operand\" \"f,rFo,Yt\"))]\n   \"TARGET_64BIT || TARGET_INTEGER_DFMODE_MOVES\"\n {\n   /* This insn should be already split before reg-stack.  */\n@@ -2512,9 +2512,9 @@\n \n (define_insn \"*movdf_nointeger\"\n   [(set (match_operand:DF 0 \"nonimmediate_operand\"\n-\t\t\t\"=f,m,f,*r  ,o  ,Y2*x,Y2*x,Y2*x ,m  \")\n+\t\t\t\"=f,m,f,*r  ,o  ,Yt*x,Yt*x,Yt*x ,m  \")\n \t(match_operand:DF 1 \"general_operand\"\n-\t\t\t\"fm,f,G,*roF,F*r,C   ,Y2*x,mY2*x,Y2*x\"))]\n+\t\t\t\"fm,f,G,*roF,F*r,C   ,Yt*x,mYt*x,Yt*x\"))]\n   \"!(MEM_P (operands[0]) && MEM_P (operands[1]))\n    && ((optimize_size || !TARGET_INTEGER_DFMODE_MOVES) && !TARGET_64BIT)\n    && (reload_in_progress || reload_completed\n@@ -2629,9 +2629,9 @@\n \n (define_insn \"*movdf_integer_rex64\"\n   [(set (match_operand:DF 0 \"nonimmediate_operand\"\n-\t\t\"=f,m,f,r  ,m ,Y2*x,Y2*x,Y2*x,m   ,Yi,r \")\n+\t\t\"=f,m,f,r  ,m ,Yt*x,Yt*x,Yt*x,m   ,Yi,r \")\n \t(match_operand:DF 1 \"general_operand\"\n-\t\t\"fm,f,G,rmF,Fr,C   ,Y2*x,m   ,Y2*x,r ,Yi\"))]\n+\t\t\"fm,f,G,rmF,Fr,C   ,Yt*x,m   ,Yt*x,r ,Yi\"))]\n   \"TARGET_64BIT && !(MEM_P (operands[0]) && MEM_P (operands[1]))\n    && (reload_in_progress || reload_completed\n        || (ix86_cmodel == CM_MEDIUM || ix86_cmodel == CM_LARGE)\n@@ -2750,9 +2750,9 @@\n \n (define_insn \"*movdf_integer\"\n   [(set (match_operand:DF 0 \"nonimmediate_operand\"\n-\t\t\"=f,m,f,r  ,o ,Y2*x,Y2*x,Y2*x,m   \")\n+\t\t\"=f,m,f,r  ,o ,Yt*x,Yt*x,Yt*x,m   \")\n \t(match_operand:DF 1 \"general_operand\"\n-\t\t\"fm,f,G,roF,Fr,C   ,Y2*x,m   ,Y2*x\"))]\n+\t\t\"fm,f,G,roF,Fr,C   ,Yt*x,m   ,Yt*x\"))]\n   \"!(MEM_P (operands[0]) && MEM_P (operands[1]))\n    && !optimize_size && TARGET_INTEGER_DFMODE_MOVES\n    && (reload_in_progress || reload_completed\n@@ -3386,7 +3386,7 @@\n })\n \n (define_insn \"zero_extendsidi2_32\"\n-  [(set (match_operand:DI 0 \"nonimmediate_operand\" \"=r,?r,?o,?*Ym,?*y,?*Yi,*Y2\")\n+  [(set (match_operand:DI 0 \"nonimmediate_operand\" \"=r,?r,?o,?*Ym,?*y,?*Yi,*Yt\")\n \t(zero_extend:DI\n \t (match_operand:SI 1 \"nonimmediate_operand\" \"0,rm,r ,r   ,m  ,r   ,m\")))\n    (clobber (reg:CC FLAGS_REG))]\n@@ -3403,7 +3403,7 @@\n    (set_attr \"type\" \"multi,multi,multi,mmxmov,mmxmov,ssemov,ssemov\")])\n \n (define_insn \"zero_extendsidi2_rex64\"\n-  [(set (match_operand:DI 0 \"nonimmediate_operand\" \"=r,o,?*Ym,?*y,?*Yi,*Y2\")\n+  [(set (match_operand:DI 0 \"nonimmediate_operand\" \"=r,o,?*Ym,?*y,?*Yi,*Yt\")\n      (zero_extend:DI\n        (match_operand:SI 1 \"nonimmediate_operand\"  \"rm,0,r   ,m  ,r   ,m\")))]\n   \"TARGET_64BIT\"\n@@ -3906,9 +3906,9 @@\n    (set_attr \"mode\" \"SF\")])\n \n (define_insn \"*truncdfsf_mixed\"\n-  [(set (match_operand:SF 0 \"nonimmediate_operand\"   \"=m,?fx*r,Y2\")\n+  [(set (match_operand:SF 0 \"nonimmediate_operand\"   \"=m,?fx*r,Yt\")\n \t(float_truncate:SF\n-\t  (match_operand:DF 1 \"nonimmediate_operand\" \"f ,f    ,Y2m\")))\n+\t  (match_operand:DF 1 \"nonimmediate_operand\" \"f ,f    ,Ytm\")))\n    (clobber (match_operand:SF 2 \"memory_operand\"     \"=X,m    ,X\"))]\n   \"TARGET_MIX_SSE_I387\"\n {\n@@ -4010,7 +4010,7 @@\n    (set_attr \"mode\" \"SF\")])\n \n (define_insn \"*truncxfdf2_mixed\"\n-  [(set (match_operand:DF 0 \"nonimmediate_operand\" \"=m,?fY2*r\")\n+  [(set (match_operand:DF 0 \"nonimmediate_operand\" \"=m,?fYt*r\")\n \t(float_truncate:DF\n \t  (match_operand:XF 1 \"register_operand\" \"f,f\")))\n    (clobber (match_operand:DF 2 \"memory_operand\" \"=X,m\"))]\n@@ -4237,7 +4237,7 @@\n \n ;; Avoid vector decoded forms of the instruction.\n (define_peephole2\n-  [(match_scratch:DF 2 \"Y2\")\n+  [(match_scratch:DF 2 \"Yt\")\n    (set (match_operand:SSEMODEI24 0 \"register_operand\" \"\")\n \t(fix:SSEMODEI24 (match_operand:DF 1 \"memory_operand\" \"\")))]\n   \"TARGET_AVOID_VECTOR_DECODE && !optimize_size\""}, {"sha": "ac4721bff0aca5c89aa1f018f10f22c5bc625a30", "filename": "gcc/config/i386/mmx.md", "status": "modified", "additions": 10, "deletions": 10, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a176d60f9d8fab161a44994bbd37b883d995e428/gcc%2Fconfig%2Fi386%2Fmmx.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a176d60f9d8fab161a44994bbd37b883d995e428/gcc%2Fconfig%2Fi386%2Fmmx.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fmmx.md?ref=a176d60f9d8fab161a44994bbd37b883d995e428", "patch": "@@ -64,9 +64,9 @@\n \n (define_insn \"*mov<mode>_internal_rex64\"\n   [(set (match_operand:MMXMODEI 0 \"nonimmediate_operand\"\n-\t\t\t\t\"=rm,r,*y,*y ,m ,*y,Y2,x,x ,m,r,x\")\n+\t\t\t\t\"=rm,r,*y,*y ,m ,*y,Yt,x,x ,m,r,x\")\n \t(match_operand:MMXMODEI 1 \"vector_move_operand\"\n-\t\t\t\t\"Cr ,m,C ,*ym,*y,Y2,*y,C,xm,x,x,r\"))]\n+\t\t\t\t\"Cr ,m,C ,*ym,*y,Yt,*y,C,xm,x,x,r\"))]\n   \"TARGET_64BIT && TARGET_MMX\n    && !(MEM_P (operands[0]) && MEM_P (operands[1]))\"\n   \"@\n@@ -88,9 +88,9 @@\n \n (define_insn \"*mov<mode>_internal\"\n   [(set (match_operand:MMXMODEI 0 \"nonimmediate_operand\"\n-\t\t\t\"=*y,*y ,m ,*y ,*Y2,*Y2,*Y2 ,m  ,*x,*x,*x,m ,?r ,?m\")\n+\t\t\t\"=*y,*y ,m ,*y ,*Yt,*Yt,*Yt ,m  ,*x,*x,*x,m ,?r ,?m\")\n \t(match_operand:MMXMODEI 1 \"vector_move_operand\"\n-\t\t\t\"C  ,*ym,*y,*Y2,*y ,C  ,*Y2m,*Y2,C ,*x,m ,*x,irm,r\"))]\n+\t\t\t\"C  ,*ym,*y,*Yt,*y ,C  ,*Ytm,*Yt,C ,*x,m ,*x,irm,r\"))]\n   \"TARGET_MMX\n    && !(MEM_P (operands[0]) && MEM_P (operands[1]))\"\n   \"@\n@@ -123,9 +123,9 @@\n \n (define_insn \"*movv2sf_internal_rex64\"\n   [(set (match_operand:V2SF 0 \"nonimmediate_operand\"\n-\t\t\t\t\"=rm,r,*y ,*y ,m ,*y,Y2,x,x,x,m,r,x\")\n+\t\t\t\t\"=rm,r,*y ,*y ,m ,*y,Yt,x,x,x,m,r,x\")\n         (match_operand:V2SF 1 \"vector_move_operand\"\n-\t\t\t\t\"Cr ,m ,C ,*ym,*y,Y2,*y,C,x,m,x,x,r\"))]\n+\t\t\t\t\"Cr ,m ,C ,*ym,*y,Yt,*y,C,x,m,x,x,r\"))]\n   \"TARGET_64BIT && TARGET_MMX\n    && !(MEM_P (operands[0]) && MEM_P (operands[1]))\"\n   \"@\n@@ -148,9 +148,9 @@\n \n (define_insn \"*movv2sf_internal\"\n   [(set (match_operand:V2SF 0 \"nonimmediate_operand\"\n-\t\t\t\"=*y,*y ,m,*y ,*Y2,*x,*x,*x,m ,?r ,?m\")\n+\t\t\t\"=*y,*y ,m,*y ,*Yt,*x,*x,*x,m ,?r ,?m\")\n         (match_operand:V2SF 1 \"vector_move_operand\"\n-\t\t\t\"C ,*ym,*y,*Y2,*y ,C ,*x,m ,*x,irm,r\"))]\n+\t\t\t\"C ,*ym,*y,*Yt,*y ,C ,*x,m ,*x,irm,r\"))]\n   \"TARGET_MMX\n    && !(MEM_P (operands[0]) && MEM_P (operands[1]))\"\n   \"@\n@@ -1172,9 +1172,9 @@\n })\n \n (define_insn \"*vec_extractv2si_1\"\n-  [(set (match_operand:SI 0 \"nonimmediate_operand\"     \"=y,Y2,Y2,x,frxy\")\n+  [(set (match_operand:SI 0 \"nonimmediate_operand\"     \"=y,Yt,Yt,x,frxy\")\n \t(vec_select:SI\n-\t  (match_operand:V2SI 1 \"nonimmediate_operand\" \" 0,0 ,Y2,0,o\")\n+\t  (match_operand:V2SI 1 \"nonimmediate_operand\" \" 0,0 ,Yt,0,o\")\n \t  (parallel [(const_int 1)])))]\n   \"TARGET_MMX && !(MEM_P (operands[0]) && MEM_P (operands[1]))\"\n   \"@"}, {"sha": "bdb653d7a37cfa12427f90178dabef56d8c2e173", "filename": "gcc/config/i386/sse.md", "status": "modified", "additions": 13, "deletions": 13, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a176d60f9d8fab161a44994bbd37b883d995e428/gcc%2Fconfig%2Fi386%2Fsse.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a176d60f9d8fab161a44994bbd37b883d995e428/gcc%2Fconfig%2Fi386%2Fsse.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fsse.md?ref=a176d60f9d8fab161a44994bbd37b883d995e428", "patch": "@@ -1364,7 +1364,7 @@\n })\n \n (define_insn \"vec_setv4sf_0\"\n-  [(set (match_operand:V4SF 0 \"nonimmediate_operand\"  \"=x,x,Y2,m\")\n+  [(set (match_operand:V4SF 0 \"nonimmediate_operand\"  \"=x,x,Yt,m\")\n \t(vec_merge:V4SF\n \t  (vec_duplicate:V4SF\n \t    (match_operand:SF 2 \"general_operand\"     \" x,m,*r,x*rfF\"))\n@@ -2645,10 +2645,10 @@\n    (set_attr \"mode\" \"DF\")])\n \n (define_insn \"*vec_concatv2df\"\n-  [(set (match_operand:V2DF 0 \"register_operand\"     \"=Y2,Y2,Y2,x,x\")\n+  [(set (match_operand:V2DF 0 \"register_operand\"     \"=Yt,Yt,Yt,x,x\")\n \t(vec_concat:V2DF\n \t  (match_operand:DF 1 \"nonimmediate_operand\" \" 0 ,0 ,m ,0,0\")\n-\t  (match_operand:DF 2 \"vector_move_operand\"  \" Y2,m ,C ,x,m\")))]\n+\t  (match_operand:DF 2 \"vector_move_operand\"  \" Yt,m ,C ,x,m\")))]\n   \"TARGET_SSE\"\n   \"@\n    unpcklpd\\t{%2, %0|%0, %2}\n@@ -4422,7 +4422,7 @@\n   \"operands[2] = CONST0_RTX (V4SImode);\")\n \n (define_insn \"sse2_loadld\"\n-  [(set (match_operand:V4SI 0 \"register_operand\"       \"=Y2,Yi,x,x\")\n+  [(set (match_operand:V4SI 0 \"register_operand\"       \"=Yt,Yi,x,x\")\n \t(vec_merge:V4SI\n \t  (vec_duplicate:V4SI\n \t    (match_operand:SI 2 \"nonimmediate_operand\" \"m  ,r ,m,x\"))\n@@ -4522,9 +4522,9 @@\n    (set_attr \"mode\" \"V2SF,V4SF,V2SF\")])\n \n (define_insn \"*vec_dupv4si\"\n-  [(set (match_operand:V4SI 0 \"register_operand\" \"=Y2,x\")\n+  [(set (match_operand:V4SI 0 \"register_operand\" \"=Yt,x\")\n \t(vec_duplicate:V4SI\n-\t  (match_operand:SI 1 \"register_operand\" \" Y2,0\")))]\n+\t  (match_operand:SI 1 \"register_operand\" \" Yt,0\")))]\n   \"TARGET_SSE\"\n   \"@\n    pshufd\\t{$0, %1, %0|%0, %1, 0}\n@@ -4533,7 +4533,7 @@\n    (set_attr \"mode\" \"TI,V4SF\")])\n \n (define_insn \"*vec_dupv2di\"\n-  [(set (match_operand:V2DI 0 \"register_operand\" \"=Y2,x\")\n+  [(set (match_operand:V2DI 0 \"register_operand\" \"=Yt,x\")\n \t(vec_duplicate:V2DI\n \t  (match_operand:DI 1 \"register_operand\" \" 0 ,0\")))]\n   \"TARGET_SSE\"\n@@ -4547,10 +4547,10 @@\n ;; nonimmediate_operand for operand 2 and *not* allowing memory for the SSE\n ;; alternatives pretty much forces the MMX alternative to be chosen.\n (define_insn \"*sse2_concatv2si\"\n-  [(set (match_operand:V2SI 0 \"register_operand\"     \"=Y2, Y2,*y,*y\")\n+  [(set (match_operand:V2SI 0 \"register_operand\"     \"=Yt, Yt,*y,*y\")\n \t(vec_concat:V2SI\n \t  (match_operand:SI 1 \"nonimmediate_operand\" \" 0 ,rm , 0,rm\")\n-\t  (match_operand:SI 2 \"reg_or_0_operand\"     \" Y2,C  ,*y, C\")))]\n+\t  (match_operand:SI 2 \"reg_or_0_operand\"     \" Yt,C  ,*y, C\")))]\n   \"TARGET_SSE2\"\n   \"@\n    punpckldq\\t{%2, %0|%0, %2}\n@@ -4575,10 +4575,10 @@\n    (set_attr \"mode\" \"V4SF,V4SF,DI,DI\")])\n \n (define_insn \"*vec_concatv4si_1\"\n-  [(set (match_operand:V4SI 0 \"register_operand\"       \"=Y2,x,x\")\n+  [(set (match_operand:V4SI 0 \"register_operand\"       \"=Yt,x,x\")\n \t(vec_concat:V4SI\n \t  (match_operand:V2SI 1 \"register_operand\"     \" 0 ,0,0\")\n-\t  (match_operand:V2SI 2 \"nonimmediate_operand\" \" Y2,x,m\")))]\n+\t  (match_operand:V2SI 2 \"nonimmediate_operand\" \" Yt,x,m\")))]\n   \"TARGET_SSE\"\n   \"@\n    punpcklqdq\\t{%2, %0|%0, %2}\n@@ -4588,10 +4588,10 @@\n    (set_attr \"mode\" \"TI,V4SF,V2SF\")])\n \n (define_insn \"vec_concatv2di\"\n-  [(set (match_operand:V2DI 0 \"register_operand\"     \"=Y2,?Y2,Y2,x,x,x\")\n+  [(set (match_operand:V2DI 0 \"register_operand\"     \"=Yt,?Yt,Yt,x,x,x\")\n \t(vec_concat:V2DI\n \t  (match_operand:DI 1 \"nonimmediate_operand\" \"  m,*y ,0 ,0,0,m\")\n-\t  (match_operand:DI 2 \"vector_move_operand\"  \"  C,  C,Y2,x,m,0\")))]\n+\t  (match_operand:DI 2 \"vector_move_operand\"  \"  C,  C,Yt,x,m,0\")))]\n   \"TARGET_SSE\"\n   \"@\n    movq\\t{%1, %0|%0, %1}"}]}