{"sha": "1011502b46e880679458a65ef87e3307076cfa57", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTAxMTUwMmI0NmU4ODA2Nzk0NThhNjVlZjg3ZTMzMDcwNzZjZmE1Nw==", "commit": {"author": {"name": "Andre Vehreschild", "email": "vehre@gcc.gnu.org", "date": "2016-12-06T13:41:46Z"}, "committer": {"name": "Andre Vehreschild", "email": "vehre@gcc.gnu.org", "date": "2016-12-06T13:41:46Z"}, "message": "re PR fortran/78226 (Fill out location information everywhere)\n\ngcc/fortran/ChangeLog:\n\n2016-12-06  Andre Vehreschild  <vehre@gcc.gnu.org>\n\n\tPR fortran/78226\n\t* class.c (finalize_component): Add missing locus information.\n\t(finalization_scalarizer): Likewise.\n\t(finalization_get_offset): Likewise.\n\t(finalizer_insert_packed_call): Likewise.\n\t(generate_finalization_wrapper): Likewise.\n\nFrom-SVN: r243300", "tree": {"sha": "34d6d57ef024a3481ebf3787de9f088cf5e75b71", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/34d6d57ef024a3481ebf3787de9f088cf5e75b71"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1011502b46e880679458a65ef87e3307076cfa57", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1011502b46e880679458a65ef87e3307076cfa57", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1011502b46e880679458a65ef87e3307076cfa57", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1011502b46e880679458a65ef87e3307076cfa57/comments", "author": null, "committer": null, "parents": [{"sha": "505326670f1d5fb161f1676c59462f3ca16754fd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/505326670f1d5fb161f1676c59462f3ca16754fd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/505326670f1d5fb161f1676c59462f3ca16754fd"}], "stats": {"total": 23, "additions": 23, "deletions": 0}, "files": [{"sha": "baef2d3ce477a21573ca11404cd25a0f3c56867d", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1011502b46e880679458a65ef87e3307076cfa57/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1011502b46e880679458a65ef87e3307076cfa57/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=1011502b46e880679458a65ef87e3307076cfa57", "patch": "@@ -1,3 +1,12 @@\n+2016-12-06  Andre Vehreschild  <vehre@gcc.gnu.org>\n+\n+\tPR fortran/78226\n+\t* class.c (finalize_component): Add missing locus information.\n+\t(finalization_scalarizer): Likewise.\n+\t(finalization_get_offset): Likewise.\n+\t(finalizer_insert_packed_call): Likewise.\n+\t(generate_finalization_wrapper): Likewise.\n+\n 2016-12-05  Nathan Sidwell  <nathan@acm.org>\n \n \t* error.c (gfc_warning_check): Call diagnostic_check_max_errors."}, {"sha": "e59b87cdeae3ff4e207979318e76052b3e01b271", "filename": "gcc/fortran/class.c", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1011502b46e880679458a65ef87e3307076cfa57/gcc%2Ffortran%2Fclass.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1011502b46e880679458a65ef87e3307076cfa57/gcc%2Ffortran%2Fclass.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fclass.c?ref=1011502b46e880679458a65ef87e3307076cfa57", "patch": "@@ -965,6 +965,7 @@ finalize_component (gfc_expr *expr, gfc_symbol *derived, gfc_component *comp,\n       cond->block = gfc_get_code (EXEC_IF);\n       cond->block->expr1 = gfc_get_expr ();\n       cond->block->expr1->expr_type = EXPR_FUNCTION;\n+      cond->block->expr1->where = gfc_current_locus;\n       gfc_get_sym_tree (\"associated\", sub_ns, &cond->block->expr1->symtree, false);\n       cond->block->expr1->symtree->n.sym->attr.flavor = FL_PROCEDURE;\n       cond->block->expr1->symtree->n.sym->attr.intrinsic = 1;\n@@ -1077,6 +1078,7 @@ finalization_scalarizer (gfc_symbol *array, gfc_symbol *ptr,\n   gfc_commit_symbol (expr->symtree->n.sym);\n   expr->ts.type = BT_INTEGER;\n   expr->ts.kind = gfc_index_integer_kind;\n+  expr->where = gfc_current_locus;\n \n   /* TRANSFER.  */\n   expr2 = gfc_build_intrinsic_call (sub_ns, GFC_ISYM_TRANSFER, \"transfer\",\n@@ -1093,6 +1095,7 @@ finalization_scalarizer (gfc_symbol *array, gfc_symbol *ptr,\n   block->ext.actual->expr->value.op.op1 = expr2;\n   block->ext.actual->expr->value.op.op2 = offset;\n   block->ext.actual->expr->ts = expr->ts;\n+  block->ext.actual->expr->where = gfc_current_locus;\n \n   /* C_F_POINTER's 2nd arg: ptr -- and its absent shape=.  */\n   block->ext.actual->next = gfc_get_actual_arglist ();\n@@ -1149,6 +1152,7 @@ finalization_get_offset (gfc_symbol *idx, gfc_symbol *idx2, gfc_symbol *offset,\n   expr->ref->u.ar.dimen = 1;\n   expr->ref->u.ar.dimen_type[0] = DIMEN_ELEMENT;\n   expr->ref->u.ar.start[0] = gfc_lval_expr_from_sym (idx2);\n+  expr->where = sizes->declared_at;\n \n   expr = gfc_build_intrinsic_call (sub_ns, GFC_ISYM_MOD, \"mod\",\n \t\t\t\t   gfc_current_locus, 2,\n@@ -1169,6 +1173,7 @@ finalization_get_offset (gfc_symbol *idx, gfc_symbol *idx2, gfc_symbol *offset,\n   expr2->value.op.op2->ref->u.ar.dimen_type[0] = DIMEN_ELEMENT;\n   expr2->value.op.op2->ref->u.ar.start[0] = gfc_get_expr ();\n   expr2->value.op.op2->ref->u.ar.start[0]->expr_type = EXPR_OP;\n+  expr2->value.op.op2->ref->u.ar.start[0]->where = gfc_current_locus;\n   expr2->value.op.op2->ref->u.ar.start[0]->value.op.op = INTRINSIC_MINUS;\n   expr2->value.op.op2->ref->u.ar.start[0]->value.op.op1\n \t= gfc_lval_expr_from_sym (idx2);\n@@ -1177,6 +1182,7 @@ finalization_get_offset (gfc_symbol *idx, gfc_symbol *idx2, gfc_symbol *offset,\n   expr2->value.op.op2->ref->u.ar.start[0]->ts\n \t= expr2->value.op.op2->ref->u.ar.start[0]->value.op.op1->ts;\n   expr2->ts = idx->ts;\n+  expr2->where = gfc_current_locus;\n \n   /* ... * strides(idx2).  */\n   expr = gfc_get_expr ();\n@@ -1192,6 +1198,7 @@ finalization_get_offset (gfc_symbol *idx, gfc_symbol *idx2, gfc_symbol *offset,\n   expr->value.op.op2->ref->u.ar.start[0] = gfc_lval_expr_from_sym (idx2);\n   expr->value.op.op2->ref->u.ar.as = strides->as;\n   expr->ts = idx->ts;\n+  expr->where = gfc_current_locus;\n \n   /* offset = offset + ...  */\n   block->block->next = gfc_get_code (EXEC_ASSIGN);\n@@ -1202,6 +1209,7 @@ finalization_get_offset (gfc_symbol *idx, gfc_symbol *idx2, gfc_symbol *offset,\n   block->block->next->expr2->value.op.op1 = gfc_lval_expr_from_sym (offset);\n   block->block->next->expr2->value.op.op2 = expr;\n   block->block->next->expr2->ts = idx->ts;\n+  block->block->next->expr2->where = gfc_current_locus;\n \n   /* After the loop:  offset = offset * byte_stride.  */\n   block->next = gfc_get_code (EXEC_ASSIGN);\n@@ -1213,6 +1221,7 @@ finalization_get_offset (gfc_symbol *idx, gfc_symbol *idx2, gfc_symbol *offset,\n   block->expr2->value.op.op1 = gfc_lval_expr_from_sym (offset);\n   block->expr2->value.op.op2 = gfc_lval_expr_from_sym (byte_stride);\n   block->expr2->ts = block->expr2->value.op.op1->ts;\n+  block->expr2->where = gfc_current_locus;\n   return block;\n }\n \n@@ -1422,6 +1431,7 @@ finalizer_insert_packed_call (gfc_code *block, gfc_finalizer *fini,\n   /* Offset calculation for the new array: idx * size of type (in bytes).  */\n   offset2 = gfc_get_expr ();\n   offset2->expr_type = EXPR_OP;\n+  offset2->where = gfc_current_locus;\n   offset2->value.op.op = INTRINSIC_TIMES;\n   offset2->value.op.op1 = gfc_lval_expr_from_sym (idx);\n   offset2->value.op.op2 = gfc_copy_expr (size_expr);\n@@ -1826,6 +1836,7 @@ generate_finalization_wrapper (gfc_symbol *derived, gfc_namespace *ns,\n   block->expr2 = gfc_get_expr ();\n   block->expr2->expr_type = EXPR_OP;\n   block->expr2->value.op.op = INTRINSIC_TIMES;\n+  block->expr2->where = gfc_current_locus;\n \n   /* sizes(idx-1).  */\n   block->expr2->value.op.op1 = gfc_lval_expr_from_sym (sizes);\n@@ -1837,6 +1848,7 @@ generate_finalization_wrapper (gfc_symbol *derived, gfc_namespace *ns,\n   block->expr2->value.op.op1->ref->u.ar.dimen_type[0] = DIMEN_ELEMENT;\n   block->expr2->value.op.op1->ref->u.ar.start[0] = gfc_get_expr ();\n   block->expr2->value.op.op1->ref->u.ar.start[0]->expr_type = EXPR_OP;\n+  block->expr2->value.op.op1->ref->u.ar.start[0]->where = gfc_current_locus;\n   block->expr2->value.op.op1->ref->u.ar.start[0]->value.op.op = INTRINSIC_MINUS;\n   block->expr2->value.op.op1->ref->u.ar.start[0]->value.op.op1\n \t= gfc_lval_expr_from_sym (idx);\n@@ -1890,6 +1902,7 @@ generate_finalization_wrapper (gfc_symbol *derived, gfc_namespace *ns,\n   block->expr1->value.op.op2->ref->u.ar.dimen_type[0] = DIMEN_ELEMENT;\n   block->expr1->value.op.op2->ref->u.ar.start[0] = gfc_get_expr ();\n   block->expr1->value.op.op2->ref->u.ar.start[0]->expr_type = EXPR_OP;\n+  block->expr1->value.op.op2->ref->u.ar.start[0]->where = gfc_current_locus;\n   block->expr1->value.op.op2->ref->u.ar.start[0]->value.op.op = INTRINSIC_MINUS;\n   block->expr1->value.op.op2->ref->u.ar.start[0]->value.op.op1\n \t= gfc_lval_expr_from_sym (idx);\n@@ -1927,6 +1940,7 @@ generate_finalization_wrapper (gfc_symbol *derived, gfc_namespace *ns,\n   last_code->expr2->value.op.op2\n \t= gfc_get_int_expr (gfc_index_integer_kind, NULL, 1);\n   last_code->expr2->ts = last_code->expr2->value.op.op2->ts;\n+  last_code->expr2->where = gfc_current_locus;\n \n   last_code->expr2->value.op.op1 = gfc_lval_expr_from_sym (sizes);\n   last_code->expr2->value.op.op1->ref = gfc_get_ref ();"}]}