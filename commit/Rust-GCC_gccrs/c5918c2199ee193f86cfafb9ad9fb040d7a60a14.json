{"sha": "c5918c2199ee193f86cfafb9ad9fb040d7a60a14", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzU5MThjMjE5OWVlMTkzZjg2Y2ZhZmI5YWQ5ZmIwNDBkN2E2MGExNA==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2013-08-20T12:58:47Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2013-08-20T12:58:47Z"}, "message": "re PR c++/58119 (Invalid ambiguous default type conversion with only a single invalid conversion listed.)\n\n\tPR c++/58119\n\t* cvt.c (build_expr_type_conversion): Don't complain about a\n\ttemplate that can't match the desired type category.\n\nFrom-SVN: r201880", "tree": {"sha": "8032eae83cbbc51e1a5e4e573422bc93c16f14a6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8032eae83cbbc51e1a5e4e573422bc93c16f14a6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c5918c2199ee193f86cfafb9ad9fb040d7a60a14", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c5918c2199ee193f86cfafb9ad9fb040d7a60a14", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c5918c2199ee193f86cfafb9ad9fb040d7a60a14", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c5918c2199ee193f86cfafb9ad9fb040d7a60a14/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "f8693fafeffe58c374b04ddb44bfc281c426505a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f8693fafeffe58c374b04ddb44bfc281c426505a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f8693fafeffe58c374b04ddb44bfc281c426505a"}], "stats": {"total": 55, "additions": 44, "deletions": 11}, "files": [{"sha": "c18bcb522634182b82f86475b95132e79db2ea75", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c5918c2199ee193f86cfafb9ad9fb040d7a60a14/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c5918c2199ee193f86cfafb9ad9fb040d7a60a14/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=c5918c2199ee193f86cfafb9ad9fb040d7a60a14", "patch": "@@ -1,3 +1,9 @@\n+2013-08-20  Jason Merrill  <jason@redhat.com>\n+\n+\tPR c++/58119\n+\t* cvt.c (build_expr_type_conversion): Don't complain about a\n+\ttemplate that can't match the desired type category.\n+\n 2013-08-20  Gabriel Dos Reis  <gdr@integrable-solutions.net>\n \n \t* error.c (pp_ggc_formatted_text): New."}, {"sha": "08c026da1788ee9ad01ffee821e37cb1ec4eb316", "filename": "gcc/cp/cvt.c", "status": "modified", "additions": 12, "deletions": 11, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c5918c2199ee193f86cfafb9ad9fb040d7a60a14/gcc%2Fcp%2Fcvt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c5918c2199ee193f86cfafb9ad9fb040d7a60a14/gcc%2Fcp%2Fcvt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcvt.c?ref=c5918c2199ee193f86cfafb9ad9fb040d7a60a14", "patch": "@@ -1590,17 +1590,6 @@ build_expr_type_conversion (int desires, tree expr, bool complain)\n       if (DECL_NONCONVERTING_P (cand))\n \tcontinue;\n \n-      if (TREE_CODE (cand) == TEMPLATE_DECL)\n-\t{\n-\t  if (complain)\n-\t    {\n-\t      error (\"ambiguous default type conversion from %qT\",\n-\t\t     basetype);\n-\t      error (\"  candidate conversions include %qD\", cand);\n-\t    }\n-\t  return error_mark_node;\n-\t}\n-\n       candidate = non_reference (TREE_TYPE (TREE_TYPE (cand)));\n \n       switch (TREE_CODE (candidate))\n@@ -1634,11 +1623,23 @@ build_expr_type_conversion (int desires, tree expr, bool complain)\n \t  break;\n \n \tdefault:\n+\t  /* A wildcard could be instantiated to match any desired\n+\t     type, but we can't deduce the template argument.  */\n+\t  if (WILDCARD_TYPE_P (candidate))\n+\t    win = true;\n \t  break;\n \t}\n \n       if (win)\n \t{\n+\t  if (TREE_CODE (cand) == TEMPLATE_DECL)\n+\t    {\n+\t      if (complain)\n+\t\terror (\"default type conversion can't deduce template\"\n+\t\t       \" argument for %qD\", cand);\n+\t      return error_mark_node;\n+\t    }\n+\n \t  if (winner)\n \t    {\n \t      tree winner_type"}, {"sha": "b6ab380c9f9dcc89cc27bee926d08352a9c334f4", "filename": "gcc/testsuite/g++.dg/template/delete2.C", "status": "added", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c5918c2199ee193f86cfafb9ad9fb040d7a60a14/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fdelete2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c5918c2199ee193f86cfafb9ad9fb040d7a60a14/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fdelete2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fdelete2.C?ref=c5918c2199ee193f86cfafb9ad9fb040d7a60a14", "patch": "@@ -0,0 +1,26 @@\n+// PR c++/58119\n+\n+template <class T>\n+struct A\n+{\n+  operator T*();\n+  template <class U>\n+  operator A<U>();\n+};\n+\n+template <class T>\n+struct B\n+{\n+  operator T*();\n+  template <class U>\n+  operator A<U>*();\n+};\n+\n+int main()\n+{\n+  A<int> a;\n+  delete a;\n+\n+  B<int> b;\n+  delete b;\t\t\t// { dg-error \"template|delete\" }\n+}"}]}