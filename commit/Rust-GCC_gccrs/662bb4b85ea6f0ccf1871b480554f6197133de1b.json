{"sha": "662bb4b85ea6f0ccf1871b480554f6197133de1b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjYyYmI0Yjg1ZWE2ZjBjY2YxODcxYjQ4MDU1NGY2MTk3MTMzZGUxYg==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2014-10-01T17:21:08Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2014-10-01T17:21:08Z"}, "message": "re PR c++/63362 (The c++11 triviality-traits need front-end help)\n\n\tPR c++/63362\n\t* method.c (constructible_expr): Handle value-init of non-class.\n\t* parser.c (cp_parser_trait_expr): Allow pack expansion.\n\t* pt.c (tsubst_copy_and_build): Handle pack expansion.\n\nFrom-SVN: r215772", "tree": {"sha": "3bfd046542fe98e955bf5aba6a88e70bace92cba", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3bfd046542fe98e955bf5aba6a88e70bace92cba"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/662bb4b85ea6f0ccf1871b480554f6197133de1b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/662bb4b85ea6f0ccf1871b480554f6197133de1b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/662bb4b85ea6f0ccf1871b480554f6197133de1b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/662bb4b85ea6f0ccf1871b480554f6197133de1b/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "a710f1f83caee6e647bebf6b45743b276ac55cbf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a710f1f83caee6e647bebf6b45743b276ac55cbf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a710f1f83caee6e647bebf6b45743b276ac55cbf"}], "stats": {"total": 26, "additions": 24, "deletions": 2}, "files": [{"sha": "a3cfa05e23d19bb7c0c6741f2545a6e7f8e1b912", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/662bb4b85ea6f0ccf1871b480554f6197133de1b/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/662bb4b85ea6f0ccf1871b480554f6197133de1b/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=662bb4b85ea6f0ccf1871b480554f6197133de1b", "patch": "@@ -1,5 +1,10 @@\n 2014-10-01  Jason Merrill  <jason@redhat.com>\n \n+\tPR c++/63362\n+\t* method.c (constructible_expr): Handle value-init of non-class.\n+\t* parser.c (cp_parser_trait_expr): Allow pack expansion.\n+\t* pt.c (tsubst_copy_and_build): Handle pack expansion.\n+\n \tPR c++/63362\n \t* class.c (type_has_non_user_provided_default_constructor): Rename\n \tfrom type_has_user_provided_default_constructor, reverse sense."}, {"sha": "882898658ddcbde84e6ad1afc6b39c7781845ce7", "filename": "gcc/cp/method.c", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/662bb4b85ea6f0ccf1871b480554f6197133de1b/gcc%2Fcp%2Fmethod.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/662bb4b85ea6f0ccf1871b480554f6197133de1b/gcc%2Fcp%2Fmethod.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fmethod.c?ref=662bb4b85ea6f0ccf1871b480554f6197133de1b", "patch": "@@ -1077,7 +1077,9 @@ constructible_expr (tree to, tree from)\n     }\n   else\n     {\n-      if (TREE_CHAIN (from))\n+      if (from == NULL_TREE)\n+\treturn build_value_init (to, tf_none);\n+      else if (TREE_CHAIN (from))\n \treturn error_mark_node; // too many initializers\n       from = build_stub_object (TREE_VALUE (from));\n       expr = perform_direct_initialization_if_possible (to, from,"}, {"sha": "01b2fadfe0176ec0417c5db78dfddc989f077cc4", "filename": "gcc/cp/parser.c", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/662bb4b85ea6f0ccf1871b480554f6197133de1b/gcc%2Fcp%2Fparser.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/662bb4b85ea6f0ccf1871b480554f6197133de1b/gcc%2Fcp%2Fparser.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fparser.c?ref=662bb4b85ea6f0ccf1871b480554f6197133de1b", "patch": "@@ -8780,6 +8780,11 @@ cp_parser_trait_expr (cp_parser* parser, enum rid keyword)\n \t{\n \t  cp_lexer_consume_token (parser->lexer);\n \t  tree elt = cp_parser_type_id (parser);\n+\t  if (cp_lexer_next_token_is (parser->lexer, CPP_ELLIPSIS))\n+\t    {\n+\t      cp_lexer_consume_token (parser->lexer);\n+\t      elt = make_pack_expansion (elt);\n+\t    }\n \t  if (elt == error_mark_node)\n \t    return error_mark_node;\n \t  type2 = tree_cons (NULL_TREE, elt, type2);"}, {"sha": "f03e74cd514d1c857a4aaea94ffe855b843d2c42", "filename": "gcc/cp/pt.c", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/662bb4b85ea6f0ccf1871b480554f6197133de1b/gcc%2Fcp%2Fpt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/662bb4b85ea6f0ccf1871b480554f6197133de1b/gcc%2Fcp%2Fpt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fpt.c?ref=662bb4b85ea6f0ccf1871b480554f6197133de1b", "patch": "@@ -15487,7 +15487,9 @@ tsubst_copy_and_build (tree t,\n \t\t\t     complain, in_decl);\n \n \ttree type2 = TRAIT_EXPR_TYPE2 (t);\n-\tif (type2)\n+\tif (type2 && TREE_CODE (type2) == TREE_LIST)\n+\t  type2 = RECUR (type2);\n+\telse if (type2)\n \t  type2 = tsubst (type2, args, complain, in_decl);\n \t\n \tRETURN (finish_trait_expr (TRAIT_EXPR_KIND (t), type1, type2));"}, {"sha": "02a678a8ab6f68b170cd8ca275c60376fb21407d", "filename": "gcc/testsuite/g++.dg/ext/is_trivially_constructible3.C", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/662bb4b85ea6f0ccf1871b480554f6197133de1b/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fis_trivially_constructible3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/662bb4b85ea6f0ccf1871b480554f6197133de1b/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fis_trivially_constructible3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fis_trivially_constructible3.C?ref=662bb4b85ea6f0ccf1871b480554f6197133de1b", "patch": "@@ -0,0 +1,8 @@\n+// { dg-do compile { target c++11 } }\n+\n+template <class T, class... Args> void bar() {\n+  static_assert(__is_trivially_constructible(T, Args...), \"\");\n+}\n+\n+template void bar<int>();\n+template void bar<int,int>();"}]}