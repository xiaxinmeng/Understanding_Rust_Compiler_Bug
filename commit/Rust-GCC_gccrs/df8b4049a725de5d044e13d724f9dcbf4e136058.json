{"sha": "df8b4049a725de5d044e13d724f9dcbf4e136058", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGY4YjQwNDlhNzI1ZGU1ZDA0NGUxM2Q3MjRmOWRjYmY0ZTEzNjA1OA==", "commit": {"author": {"name": "Jim Wilson", "email": "wilson@gcc.gnu.org", "date": "1993-01-11T23:04:35Z"}, "committer": {"name": "Jim Wilson", "email": "wilson@gcc.gnu.org", "date": "1993-01-11T23:04:35Z"}, "message": "(eligible_for_epilogue_delay): Delete unused variable `this_function_name'.\n\n(eligible_for_epilogue_delay): Delete unused variable\n`this_function_name'.\n(output_fp_move_double): Delete unused var `addr'.\n(output_fp_move_quad): Likewise.\n(fregs_ever_live): Delete unused static var.\n(output_function_epilogue): Delete `n_fregs' and `i'.\n(sparc_frw_output_function_prologue): Delete `regno'.\n(sparc_frw_output_function_epilogue): Delete `load_nop'.\n\nFrom-SVN: r3198", "tree": {"sha": "49099e98d9b96cf88db32b367406e06136e5d014", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/49099e98d9b96cf88db32b367406e06136e5d014"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/df8b4049a725de5d044e13d724f9dcbf4e136058", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/df8b4049a725de5d044e13d724f9dcbf4e136058", "html_url": "https://github.com/Rust-GCC/gccrs/commit/df8b4049a725de5d044e13d724f9dcbf4e136058", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/df8b4049a725de5d044e13d724f9dcbf4e136058/comments", "author": null, "committer": null, "parents": [{"sha": "2a72bac75f89b02afac3ebf7c5615530f30d6146", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2a72bac75f89b02afac3ebf7c5615530f30d6146", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2a72bac75f89b02afac3ebf7c5615530f30d6146"}], "stats": {"total": 10, "additions": 0, "deletions": 10}, "files": [{"sha": "b24ed2d557d3607fb1424a19a09109072fad3cb2", "filename": "gcc/config/sparc/sparc.c", "status": "modified", "additions": 0, "deletions": 10, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/df8b4049a725de5d044e13d724f9dcbf4e136058/gcc%2Fconfig%2Fsparc%2Fsparc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/df8b4049a725de5d044e13d724f9dcbf4e136058/gcc%2Fconfig%2Fsparc%2Fsparc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsparc%2Fsparc.c?ref=df8b4049a725de5d044e13d724f9dcbf4e136058", "patch": "@@ -481,7 +481,6 @@ eligible_for_epilogue_delay (trial, slot)\n      rtx trial;\n      int slot;\n {\n-  static char *this_function_name;\n   rtx pat, src;\n \n   if (slot >= 1)\n@@ -1432,8 +1431,6 @@ char *\n output_fp_move_double (operands)\n      rtx *operands;\n {\n-  rtx addr;\n-\n   if (FP_REG_P (operands[0]))\n     {\n       if (FP_REG_P (operands[1]))\n@@ -1472,7 +1469,6 @@ output_fp_move_quad (operands)\n {\n   register rtx op0 = operands[0];\n   register rtx op1 = operands[1];\n-  register rtx addr;\n \n   if (FP_REG_P (op0))\n     {\n@@ -2053,9 +2049,6 @@ restore_regs (file, low, high, base, offset, n_fregs)\n /* Number of live floating point registers needed to be saved.  */\n static int num_fregs;\n \n-/* Nonzero if any floating point register was ever used.  */\n-static int fregs_ever_live;\n-\n int\n compute_frame_size (size, leaf_function)\n      int size;\n@@ -2202,7 +2195,6 @@ output_function_epilogue (file, size, leaf_function)\n      int size;\n      int leaf_function;\n {\n-  int n_fregs, i;\n   char *ret;\n \n   if (leaf_label)\n@@ -3350,7 +3342,6 @@ sparc_frw_output_function_prologue (file, size, ignored)\n      int size;\n {\n   extern char call_used_regs[];\n-  int regno;\n   int tsize;\n   char *sp_str = reg_names[STACK_POINTER_REGNUM];\n   frame_base_name\n@@ -3413,7 +3404,6 @@ sparc_frw_output_function_epilogue (file, size, ignored1, ignored2)\n   char *t1_str = \"%g1\";\n   rtx epilogue_delay = current_function_epilogue_delay_list;\n   int noepilogue = FALSE;\n-  int load_nop = FALSE;\n   int load_only_r15;\n \n   /* The epilogue does not depend on any registers, but the stack"}]}