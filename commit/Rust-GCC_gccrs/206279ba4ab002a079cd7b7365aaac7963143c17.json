{"sha": "206279ba4ab002a079cd7b7365aaac7963143c17", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjA2Mjc5YmE0YWIwMDJhMDc5Y2Q3YjczNjVhYWFjNzk2MzE0M2MxNw==", "commit": {"author": {"name": "Bernardo Innocenti", "email": "bernie@develer.com", "date": "2003-11-15T19:34:57Z"}, "committer": {"name": "Bernardo Innocenti", "email": "bernie@gcc.gnu.org", "date": "2003-11-15T19:34:57Z"}, "message": "re PR c++/2294 (using declaration confusion)\n\n\tPR c++/2294\n\t* name-lookup.c: Revert previous patch for PR c++/2294 to prevent\n\tbuild failure on libjava.\n\nFrom-SVN: r73630", "tree": {"sha": "fd72198c53ff6c7f335ca3efe504eaecd78af61d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/fd72198c53ff6c7f335ca3efe504eaecd78af61d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/206279ba4ab002a079cd7b7365aaac7963143c17", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/206279ba4ab002a079cd7b7365aaac7963143c17", "html_url": "https://github.com/Rust-GCC/gccrs/commit/206279ba4ab002a079cd7b7365aaac7963143c17", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/206279ba4ab002a079cd7b7365aaac7963143c17/comments", "author": {"login": "codewiz", "id": 1184492, "node_id": "MDQ6VXNlcjExODQ0OTI=", "avatar_url": "https://avatars.githubusercontent.com/u/1184492?v=4", "gravatar_id": "", "url": "https://api.github.com/users/codewiz", "html_url": "https://github.com/codewiz", "followers_url": "https://api.github.com/users/codewiz/followers", "following_url": "https://api.github.com/users/codewiz/following{/other_user}", "gists_url": "https://api.github.com/users/codewiz/gists{/gist_id}", "starred_url": "https://api.github.com/users/codewiz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/codewiz/subscriptions", "organizations_url": "https://api.github.com/users/codewiz/orgs", "repos_url": "https://api.github.com/users/codewiz/repos", "events_url": "https://api.github.com/users/codewiz/events{/privacy}", "received_events_url": "https://api.github.com/users/codewiz/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "c85dfef7a0385d2c4f54495d8882c0f1d3aef4b0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c85dfef7a0385d2c4f54495d8882c0f1d3aef4b0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c85dfef7a0385d2c4f54495d8882c0f1d3aef4b0"}], "stats": {"total": 15, "additions": 9, "deletions": 6}, "files": [{"sha": "eb3b0f0f511bb1acb065b264667ded2d48e905f1", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/206279ba4ab002a079cd7b7365aaac7963143c17/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/206279ba4ab002a079cd7b7365aaac7963143c17/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=206279ba4ab002a079cd7b7365aaac7963143c17", "patch": "@@ -1,3 +1,9 @@\n+2003-11-15  Bernardo Innocenti  <bernie@develer.com>\n+\n+\tPR c++/2294\n+\t* name-lookup.c: Revert previous patch for PR c++/2294 to prevent\n+\tbuild failure on libjava.\n+\n 2003-11-14  Giovanni Bajo  <giovannibajo@libero.it>\n \n         PR c++/2294"}, {"sha": "a31aeebbcafe8e686ba448fabfed615d4f44d84c", "filename": "gcc/cp/name-lookup.c", "status": "modified", "additions": 3, "deletions": 6, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/206279ba4ab002a079cd7b7365aaac7963143c17/gcc%2Fcp%2Fname-lookup.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/206279ba4ab002a079cd7b7365aaac7963143c17/gcc%2Fcp%2Fname-lookup.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fname-lookup.c?ref=206279ba4ab002a079cd7b7365aaac7963143c17", "patch": "@@ -2002,7 +2002,7 @@ push_overloaded_decl (tree decl, int flags)\n \t}\n     }\n \n-  if (!DECL_ARTIFICIAL (decl))\n+  if (old || TREE_CODE (decl) == TEMPLATE_DECL)\n     {\n       if (old && TREE_CODE (old) != OVERLOAD)\n \tnew_binding = ovl_cons (decl, ovl_cons (old, NULL_TREE));\n@@ -2012,6 +2012,7 @@ push_overloaded_decl (tree decl, int flags)\n \tOVL_USED (new_binding) = 1;\n     }\n   else\n+    /* NAME is not ambiguous.  */\n     new_binding = decl;\n \n   if (doing_global)\n@@ -2869,11 +2870,7 @@ set_namespace_binding (tree name, tree scope, tree val)\n   if (scope == NULL_TREE)\n     scope = global_namespace;\n   b = binding_for_name (NAMESPACE_LEVEL (scope), name);\n-  if (!b->value\n-      /* If OVL_CHAIN is NULL, it's the first FUNCTION_DECL for this name,\n-         and we still need to call supplement_binding.  */\n-      || (TREE_CODE (val) == OVERLOAD && OVL_CHAIN (val))\n-      || val == error_mark_node)\n+  if (!b->value || TREE_CODE (val) == OVERLOAD || val == error_mark_node)\n     b->value = val;\n   else\n     supplement_binding (b, val);"}]}