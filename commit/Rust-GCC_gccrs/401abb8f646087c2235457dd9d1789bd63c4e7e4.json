{"sha": "401abb8f646087c2235457dd9d1789bd63c4e7e4", "node_id": "C_kwDOANBUbNoAKDQwMWFiYjhmNjQ2MDg3YzIyMzU0NTdkZDlkMTc4OWJkNjNjNGU3ZTQ", "commit": {"author": {"name": "Segher Boessenkool", "email": "segher@kernel.crashing.org", "date": "2022-05-10T18:47:31Z"}, "committer": {"name": "Segher Boessenkool", "email": "segher@kernel.crashing.org", "date": "2022-05-11T14:59:08Z"}, "message": "rs6000: Delete RS6000_CONSTRAINT_f\n\nConstraint \"f\" is always exactly the same as constraint \"d\", so we do\nnot need RS6000_CONSTRAINT_f.\n\n2022-05-11  Segher Boessenkool  <segher@kernel.crashing.org>\n\n\t* config/rs6000/constraints.md (register_constraint \"f\"): Use\n\tRS6000_CONSTRAINT_d.\n\t* config/rs6000/rs6000.cc (rs6000_debug_reg_global): Do not handle\n\tRS6000_CONSTRAINT_f.\n\t(rs6000_init_hard_regno_mode_ok): Ditto.  Reorder and simplify a bit.\n\t* config/rs6000/rs6000.h (r6000_reg_class_enum): Delete\n\tRS6000_CONSTRAINT_d.", "tree": {"sha": "ab11d630a6cfca996577a76f70c7af1e76e60a80", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ab11d630a6cfca996577a76f70c7af1e76e60a80"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/401abb8f646087c2235457dd9d1789bd63c4e7e4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/401abb8f646087c2235457dd9d1789bd63c4e7e4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/401abb8f646087c2235457dd9d1789bd63c4e7e4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/401abb8f646087c2235457dd9d1789bd63c4e7e4/comments", "author": {"login": "segher", "id": 417629, "node_id": "MDQ6VXNlcjQxNzYyOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/417629?v=4", "gravatar_id": "", "url": "https://api.github.com/users/segher", "html_url": "https://github.com/segher", "followers_url": "https://api.github.com/users/segher/followers", "following_url": "https://api.github.com/users/segher/following{/other_user}", "gists_url": "https://api.github.com/users/segher/gists{/gist_id}", "starred_url": "https://api.github.com/users/segher/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/segher/subscriptions", "organizations_url": "https://api.github.com/users/segher/orgs", "repos_url": "https://api.github.com/users/segher/repos", "events_url": "https://api.github.com/users/segher/events{/privacy}", "received_events_url": "https://api.github.com/users/segher/received_events", "type": "User", "site_admin": false}, "committer": {"login": "segher", "id": 417629, "node_id": "MDQ6VXNlcjQxNzYyOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/417629?v=4", "gravatar_id": "", "url": "https://api.github.com/users/segher", "html_url": "https://github.com/segher", "followers_url": "https://api.github.com/users/segher/followers", "following_url": "https://api.github.com/users/segher/following{/other_user}", "gists_url": "https://api.github.com/users/segher/gists{/gist_id}", "starred_url": "https://api.github.com/users/segher/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/segher/subscriptions", "organizations_url": "https://api.github.com/users/segher/orgs", "repos_url": "https://api.github.com/users/segher/repos", "events_url": "https://api.github.com/users/segher/events{/privacy}", "received_events_url": "https://api.github.com/users/segher/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "684c97dd084b7a535deb400ab8b26b914d011c5c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/684c97dd084b7a535deb400ab8b26b914d011c5c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/684c97dd084b7a535deb400ab8b26b914d011c5c"}], "stats": {"total": 21, "additions": 5, "deletions": 16}, "files": [{"sha": "5a44a92142e5eb396de56eacfd489064d012a629", "filename": "gcc/config/rs6000/constraints.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/401abb8f646087c2235457dd9d1789bd63c4e7e4/gcc%2Fconfig%2Frs6000%2Fconstraints.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/401abb8f646087c2235457dd9d1789bd63c4e7e4/gcc%2Fconfig%2Frs6000%2Fconstraints.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Fconstraints.md?ref=401abb8f646087c2235457dd9d1789bd63c4e7e4", "patch": "@@ -29,7 +29,7 @@\n   \"A base register.  Like @code{r}, but @code{r0} is not allowed, so\n    @code{r1}@dots{}@code{r31}.\")\n \n-(define_register_constraint \"f\" \"rs6000_constraints[RS6000_CONSTRAINT_f]\"\n+(define_register_constraint \"f\" \"rs6000_constraints[RS6000_CONSTRAINT_d]\"\n   \"A floating point register (FPR), @code{f0}@dots{}@code{f31}.\")\n \n (define_register_constraint \"d\" \"rs6000_constraints[RS6000_CONSTRAINT_d]\""}, {"sha": "5cb8a53e9ce6f4d9ead1ca413b07f86caaec4877", "filename": "gcc/config/rs6000/rs6000.cc", "status": "modified", "additions": 3, "deletions": 13, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/401abb8f646087c2235457dd9d1789bd63c4e7e4/gcc%2Fconfig%2Frs6000%2Frs6000.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/401abb8f646087c2235457dd9d1789bd63c4e7e4/gcc%2Fconfig%2Frs6000%2Frs6000.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.cc?ref=401abb8f646087c2235457dd9d1789bd63c4e7e4", "patch": "@@ -2305,7 +2305,6 @@ rs6000_debug_reg_global (void)\n   fprintf (stderr,\n \t   \"\\n\"\n \t   \"d  reg_class = %s\\n\"\n-\t   \"f  reg_class = %s\\n\"\n \t   \"v  reg_class = %s\\n\"\n \t   \"wa reg_class = %s\\n\"\n \t   \"we reg_class = %s\\n\"\n@@ -2314,7 +2313,6 @@ rs6000_debug_reg_global (void)\n \t   \"wA reg_class = %s\\n\"\n \t   \"\\n\",\n \t   reg_class_names[rs6000_constraints[RS6000_CONSTRAINT_d]],\n-\t   reg_class_names[rs6000_constraints[RS6000_CONSTRAINT_f]],\n \t   reg_class_names[rs6000_constraints[RS6000_CONSTRAINT_v]],\n \t   reg_class_names[rs6000_constraints[RS6000_CONSTRAINT_wa]],\n \t   reg_class_names[rs6000_constraints[RS6000_CONSTRAINT_we]],\n@@ -2953,7 +2951,6 @@ rs6000_init_hard_regno_mode_ok (bool global_init_p)\n      constraints are:\n \n \td  - Register class to use with traditional DFmode instructions.\n-\tf  - Register class to use with traditional SFmode instructions.\n \tv  - Altivec register.\n \twa - Any VSX register.\n \twc - Reserved to represent individual CR bits (used in LLVM).\n@@ -2962,18 +2959,11 @@ rs6000_init_hard_regno_mode_ok (bool global_init_p)\n \twx - Float register if we can do 32-bit int stores.  */\n \n   if (TARGET_HARD_FLOAT)\n-    {\n-      rs6000_constraints[RS6000_CONSTRAINT_f] = FLOAT_REGS;\t/* SFmode  */\n-      rs6000_constraints[RS6000_CONSTRAINT_d] = FLOAT_REGS;\t/* DFmode  */\n-    }\n-\n-  if (TARGET_VSX)\n-    rs6000_constraints[RS6000_CONSTRAINT_wa] = VSX_REGS;\n-\n-  /* Add conditional constraints based on various options, to allow us to\n-     collapse multiple insn patterns.  */\n+    rs6000_constraints[RS6000_CONSTRAINT_d] = FLOAT_REGS;\n   if (TARGET_ALTIVEC)\n     rs6000_constraints[RS6000_CONSTRAINT_v] = ALTIVEC_REGS;\n+  if (TARGET_VSX)\n+    rs6000_constraints[RS6000_CONSTRAINT_wa] = VSX_REGS;\n \n   if (TARGET_POWERPC64)\n     {"}, {"sha": "20b9d11424db8dba2a5ac74144ce537134cf4337", "filename": "gcc/config/rs6000/rs6000.h", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/401abb8f646087c2235457dd9d1789bd63c4e7e4/gcc%2Fconfig%2Frs6000%2Frs6000.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/401abb8f646087c2235457dd9d1789bd63c4e7e4/gcc%2Fconfig%2Frs6000%2Frs6000.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.h?ref=401abb8f646087c2235457dd9d1789bd63c4e7e4", "patch": "@@ -1240,8 +1240,7 @@ extern enum reg_class rs6000_regno_regclass[FIRST_PSEUDO_REGISTER];\n /* Register classes for various constraints that are based on the target\n    switches.  */\n enum r6000_reg_class_enum {\n-  RS6000_CONSTRAINT_d,\t\t/* fpr registers for double values */\n-  RS6000_CONSTRAINT_f,\t\t/* fpr registers for single values */\n+  RS6000_CONSTRAINT_d,\t\t/* FPR registers */\n   RS6000_CONSTRAINT_v,\t\t/* Altivec registers */\n   RS6000_CONSTRAINT_wa,\t\t/* Any VSX register */\n   RS6000_CONSTRAINT_we,\t\t/* VSX register if ISA 3.0 vector. */"}]}