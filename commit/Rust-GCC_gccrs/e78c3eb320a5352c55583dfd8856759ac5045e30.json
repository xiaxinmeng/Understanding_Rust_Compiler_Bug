{"sha": "e78c3eb320a5352c55583dfd8856759ac5045e30", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTc4YzNlYjMyMGE1MzUyYzU1NTgzZGZkODg1Njc1OWFjNTA0NWUzMA==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2018-09-24T07:08:24Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2018-09-24T07:08:24Z"}, "message": "re PR middle-end/63155 (memory hog)\n\n2018-09-24  Richard Biener  <rguenther@suse.de>\n\n\tPR tree-optimization/63155\n\t* tree-ssa-propagate.c (add_ssa_edge): Avoid adding PHIs to\n\tthe worklist when the edge of the respective argument isn't\n\texecutable.\n\nFrom-SVN: r264523", "tree": {"sha": "2e4bed12d0886eda92cad130e21384352245aeed", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2e4bed12d0886eda92cad130e21384352245aeed"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e78c3eb320a5352c55583dfd8856759ac5045e30", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e78c3eb320a5352c55583dfd8856759ac5045e30", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e78c3eb320a5352c55583dfd8856759ac5045e30", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e78c3eb320a5352c55583dfd8856759ac5045e30/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "e528260d8fa487d0087b42c157ec9972d99049d5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e528260d8fa487d0087b42c157ec9972d99049d5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e528260d8fa487d0087b42c157ec9972d99049d5"}], "stats": {"total": 17, "additions": 16, "deletions": 1}, "files": [{"sha": "5c07395eefdf832f994d1e7f76d09ec2ce30777c", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e78c3eb320a5352c55583dfd8856759ac5045e30/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e78c3eb320a5352c55583dfd8856759ac5045e30/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=e78c3eb320a5352c55583dfd8856759ac5045e30", "patch": "@@ -1,3 +1,10 @@\n+2018-09-24  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/63155\n+\t* tree-ssa-propagate.c (add_ssa_edge): Avoid adding PHIs to\n+\tthe worklist when the edge of the respective argument isn't\n+\texecutable.\n+\n 2018-09-23   Uros Bizjak  <ubizjak@gmail.com>\n \n \t* config/i386/i386.h (enum reg_class): Rename MASK_REGS to"}, {"sha": "140b153d5a1cfa96bb2cc3e63734932d79782c5c", "filename": "gcc/tree-ssa-propagate.c", "status": "modified", "additions": 9, "deletions": 1, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e78c3eb320a5352c55583dfd8856759ac5045e30/gcc%2Ftree-ssa-propagate.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e78c3eb320a5352c55583dfd8856759ac5045e30/gcc%2Ftree-ssa-propagate.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-propagate.c?ref=e78c3eb320a5352c55583dfd8856759ac5045e30", "patch": "@@ -168,10 +168,18 @@ add_ssa_edge (tree var)\n   FOR_EACH_IMM_USE_FAST (use_p, iter, var)\n     {\n       gimple *use_stmt = USE_STMT (use_p);\n+      basic_block use_bb = gimple_bb (use_stmt);\n \n       /* If we did not yet simulate the block wait for this to happen\n          and do not add the stmt to the SSA edge worklist.  */\n-      if (! (gimple_bb (use_stmt)->flags & BB_VISITED))\n+      if (! (use_bb->flags & BB_VISITED))\n+\tcontinue;\n+\n+      /* If this is a use on a not yet executable edge do not bother to\n+\t queue it.  */\n+      if (gimple_code (use_stmt) == GIMPLE_PHI\n+\t  && !(EDGE_PRED (use_bb, PHI_ARG_INDEX_FROM_USE (use_p))->flags\n+\t       & EDGE_EXECUTABLE))\n \tcontinue;\n \n       if (prop_simulate_again_p (use_stmt)"}]}