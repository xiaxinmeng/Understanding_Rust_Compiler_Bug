{"sha": "3826795b8c5540f1ec3da2c5b67957f29cde4bef", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzgyNjc5NWI4YzU1NDBmMWVjM2RhMmM1YjY3OTU3ZjI5Y2RlNGJlZg==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2015-11-12T09:00:37Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2015-11-12T09:00:37Z"}, "message": "re PR tree-optimization/58497 (SLP vectorizes identical operations)\n\n2015-11-12  Richard Biener  <rguenther@suse.de>\n\n\tPR tree-optimization/58497\n\t* tree-vect-generic.c: Include gimplify.h.\n\t(tree_vec_extract): Lookup constant/constructor DEFs.\n\t(do_cond): Unshare cond.\n\nFrom-SVN: r230216", "tree": {"sha": "165702c1a3bb0b890da5040523be748bc7ca34ca", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/165702c1a3bb0b890da5040523be748bc7ca34ca"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3826795b8c5540f1ec3da2c5b67957f29cde4bef", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3826795b8c5540f1ec3da2c5b67957f29cde4bef", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3826795b8c5540f1ec3da2c5b67957f29cde4bef", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3826795b8c5540f1ec3da2c5b67957f29cde4bef/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "c471289ac8af8608dab424693d9411be6042ded6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c471289ac8af8608dab424693d9411be6042ded6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c471289ac8af8608dab424693d9411be6042ded6"}], "stats": {"total": 19, "additions": 18, "deletions": 1}, "files": [{"sha": "d292656e8d1691f9ac8c7d0dc52a1a4d9e6ec255", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3826795b8c5540f1ec3da2c5b67957f29cde4bef/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3826795b8c5540f1ec3da2c5b67957f29cde4bef/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=3826795b8c5540f1ec3da2c5b67957f29cde4bef", "patch": "@@ -1,3 +1,10 @@\n+2015-11-12  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/58497\n+\t* tree-vect-generic.c: Include gimplify.h.\n+\t(tree_vec_extract): Lookup constant/constructor DEFs.\n+\t(do_cond): Unshare cond.\n+\n 2015-11-12  Uros Bizjak  <ubizjak@gmail.com>\n \n \t* config/i386/i386.c (ix86_legitimate_combined_insn): Reject"}, {"sha": "af1af17a42536d98278e7e9364314994796baf6d", "filename": "gcc/tree-vect-generic.c", "status": "modified", "additions": 11, "deletions": 1, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3826795b8c5540f1ec3da2c5b67957f29cde4bef/gcc%2Ftree-vect-generic.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3826795b8c5540f1ec3da2c5b67957f29cde4bef/gcc%2Ftree-vect-generic.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vect-generic.c?ref=3826795b8c5540f1ec3da2c5b67957f29cde4bef", "patch": "@@ -35,6 +35,7 @@ along with GCC; see the file COPYING3.  If not see\n #include \"tree-eh.h\"\n #include \"gimple-iterator.h\"\n #include \"gimplify-me.h\"\n+#include \"gimplify.h\"\n #include \"tree-cfg.h\"\n \n \n@@ -105,6 +106,15 @@ static inline tree\n tree_vec_extract (gimple_stmt_iterator *gsi, tree type,\n \t\t  tree t, tree bitsize, tree bitpos)\n {\n+  if (TREE_CODE (t) == SSA_NAME)\n+    {\n+      gimple *def_stmt = SSA_NAME_DEF_STMT (t);\n+      if (is_gimple_assign (def_stmt)\n+\t  && (gimple_assign_rhs_code (def_stmt) == VECTOR_CST\n+\t      || (bitpos\n+\t\t  && gimple_assign_rhs_code (def_stmt) == CONSTRUCTOR)))\n+\tt = gimple_assign_rhs1 (def_stmt);\n+    }\n   if (bitpos)\n     {\n       if (TREE_CODE (type) == BOOLEAN_TYPE)\n@@ -1419,7 +1429,7 @@ do_cond (gimple_stmt_iterator *gsi, tree inner_type, tree a, tree b,\n   if (TREE_CODE (TREE_TYPE (b)) == VECTOR_TYPE)\n     b = tree_vec_extract (gsi, inner_type, b, bitsize, bitpos);\n   tree cond = gimple_assign_rhs1 (gsi_stmt (*gsi));\n-  return gimplify_build3 (gsi, code, inner_type, cond, a, b);\n+  return gimplify_build3 (gsi, code, inner_type, unshare_expr (cond), a, b);\n }\n \n /* Expand a vector COND_EXPR to scalars, piecewise.  */"}]}