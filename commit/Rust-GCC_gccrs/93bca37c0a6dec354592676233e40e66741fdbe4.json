{"sha": "93bca37c0a6dec354592676233e40e66741fdbe4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTNiY2EzN2MwYTZkZWMzNTQ1OTI2NzYyMzNlNDBlNjY3NDFmZGJlNA==", "commit": {"author": {"name": "GCC Administrator", "email": "gccadmin@gcc.gnu.org", "date": "2020-09-30T00:16:29Z"}, "committer": {"name": "GCC Administrator", "email": "gccadmin@gcc.gnu.org", "date": "2020-09-30T00:16:29Z"}, "message": "Daily bump.", "tree": {"sha": "d239149360ad16fe3d73466e367e1676c132fc0c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d239149360ad16fe3d73466e367e1676c132fc0c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/93bca37c0a6dec354592676233e40e66741fdbe4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/93bca37c0a6dec354592676233e40e66741fdbe4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/93bca37c0a6dec354592676233e40e66741fdbe4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/93bca37c0a6dec354592676233e40e66741fdbe4/comments", "author": null, "committer": null, "parents": [{"sha": "58614b10edc9a66fa3ef23dd0fee034e3a2cbc2d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/58614b10edc9a66fa3ef23dd0fee034e3a2cbc2d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/58614b10edc9a66fa3ef23dd0fee034e3a2cbc2d"}], "stats": {"total": 320, "additions": 319, "deletions": 1}, "files": [{"sha": "4df8e961f29e3392ef2e91cebdcc8feea2295583", "filename": "gcc/ChangeLog", "status": "modified", "additions": 135, "deletions": 0, "changes": 135, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/93bca37c0a6dec354592676233e40e66741fdbe4/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/93bca37c0a6dec354592676233e40e66741fdbe4/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=93bca37c0a6dec354592676233e40e66741fdbe4", "patch": "@@ -1,3 +1,138 @@\n+2020-09-30  Segher Boessenkool  <segher@kernel.crashing.org>\n+\n+\t* config/rs6000/rs6000.md (tablejump): Simplify.\n+\t(tablejumpsi): Merge this ...\n+\t(tablejumpdi): ... and this ...\n+\t(@tablejump<mode>_normal): ... into this.\n+\t(tablejumpsi_nospec): Merge this ...\n+\t(tablejumpdi_nospec): ... and this ...\n+\t(@tablejump<mode>_nospec): ... into this.\n+\t(*tablejump<mode>_internal1): Delete, rename to ...\n+\t(@tablejump<mode>_insn_normal): ... this.\n+\t(*tablejump<mode>_internal1_nospec): Delete, rename to ...\n+\t(@tablejump<mode>_insn_nospec): ... this.\n+\n+2020-09-29  Martin Sebor  <msebor@redhat.com>\n+\n+\tPR middle-end/97188\n+\t* calls.c (maybe_warn_rdwr_sizes): Simplify warning messages.\n+\tCorrect handling of VLA argumments.\n+\n+2020-09-29  Marek Polacek  <polacek@redhat.com>\n+\n+\tPR c++/94695\n+\t* doc/invoke.texi: Document -Wrange-loop-construct.\n+\n+2020-09-29  Jim Wilson  <jimw@sifive.com>\n+\n+\tPR bootstrap/97183\n+\t* configure.ac (gcc_cv_header_zstd_h): Check ZSTD_VERISON_NUMBER.\n+\t* configure: Regenerated.\n+\n+2020-09-29  Przemyslaw Wirkus  <przemyslaw.wirkus@arm.com>\n+\n+\t* config/arm/arm-cpus.in: Add Cortex-X1 core.\n+\t* config/arm/arm-tables.opt: Regenerate.\n+\t* config/arm/arm-tune.md: Regenerate.\n+\t* doc/invoke.texi: Update docs.\n+\n+2020-09-29  Przemyslaw Wirkus  <przemyslaw.wirkus@arm.com>\n+\n+\t* config/aarch64/aarch64-cores.def: Add Cortex-X1 Arm core.\n+\t* config/aarch64/aarch64-tune.md: Regenerate.\n+\t* doc/invoke.texi: Add -mtune=cortex-x1 docs.\n+\n+2020-09-29  H.J. Lu  <hjl.tools@gmail.com>\n+\n+\tPR target/97247\n+\t* config/i386/enqcmdintrin.h: Replace <enqcmdntrin.h> with\n+\t<enqcmdintrin.h>.  Replace _ENQCMDNTRIN_H_INCLUDED with\n+\t_ENQCMDINTRIN_H_INCLUDED.\n+\n+2020-09-29  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/97241\n+\t* tree-vect-loop.c (vectorizable_reduction): Move finding\n+\tthe SLP node for the reduction stmt to a better place.\n+\n+2020-09-29  Richard Biener  <rguenther@suse.de>\n+\n+\t* tree-vect-slp.c (vect_analyze_slp): Move SLP reduction\n+\tre-arrangement and SLP graph load gathering...\n+\t(vect_optimize_slp): ... here.\n+\t* tree-vectorizer.h (vec_info::slp_loads): Remove.\n+\n+2020-09-29  Hongyu Wang  <hongyu.wang@intel.com>\n+\n+\tPR target/97231\n+\t* config/i386/amxbf16intrin.h: Add FSF copyright notes.\n+\t* config/i386/amxint8intrin.h: Ditto.\n+\t* config/i386/amxtileintrin.h: Ditto.\n+\t* config/i386/avx512vp2intersectintrin.h: Ditto.\n+\t* config/i386/avx512vp2intersectvlintrin.h: Ditto.\n+\t* config/i386/pconfigintrin.h: Ditto.\n+\t* config/i386/tsxldtrkintrin.h: Ditto.\n+\t* config/i386/wbnoinvdintrin.h: Ditto.\n+\n+2020-09-29  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/97238\n+\t* tree-ssa-reassoc.c (ovce_extract_ops): Fix typo.\n+\n+2020-09-29  Richard Sandiford  <richard.sandiford@arm.com>\n+\n+\t* config/arm/arm.h (ARM_HAVE_NEON_V8QI_ARITH, ARM_HAVE_NEON_V4HI_ARITH)\n+\t(ARM_HAVE_NEON_V2SI_ARITH, ARM_HAVE_NEON_V16QI_ARITH): New macros.\n+\t(ARM_HAVE_NEON_V8HI_ARITH, ARM_HAVE_NEON_V4SI_ARITH): Likewise.\n+\t(ARM_HAVE_NEON_V2DI_ARITH, ARM_HAVE_NEON_V4HF_ARITH): Likewise.\n+\t(ARM_HAVE_NEON_V8HF_ARITH, ARM_HAVE_NEON_V2SF_ARITH): Likewise.\n+\t(ARM_HAVE_NEON_V4SF_ARITH, ARM_HAVE_V8QI_ARITH, ARM_HAVE_V4HI_ARITH)\n+\t(ARM_HAVE_V2SI_ARITH, ARM_HAVE_V16QI_ARITH, ARM_HAVE_V8HI_ARITH)\n+\t(ARM_HAVE_V4SI_ARITH, ARM_HAVE_V2DI_ARITH, ARM_HAVE_V4HF_ARITH)\n+\t(ARM_HAVE_V2SF_ARITH, ARM_HAVE_V8HF_ARITH, ARM_HAVE_V4SF_ARITH):\n+\tLikewise.\n+\t* config/arm/iterators.md (VNIM, VNINOTM): Delete.\n+\t* config/arm/vec-common.md (add<VNIM:mode>3, addv8hf3)\n+\t(add<VNINOTM:mode>3): Replace with...\n+\t(add<VDQ:mode>3): ...this new expander.\n+\t* config/arm/neon.md (*add<VDQ:mode>3_neon): Use the new\n+\tARM_HAVE_NEON_<MODE>_ARITH macros as the C condition.\n+\t(addv8hf3_neon, addv4hf3, add<VFH:mode>3_fp16): Delete in\n+\tfavor of the above.\n+\t(neon_vadd<VH:mode>): Use gen_add<mode>3 instead of\n+\tgen_add<mode>3_fp16.\n+\n+2020-09-29  Kito Cheng  <kito.cheng@sifive.com>\n+\n+\t* config/riscv/riscv-c.c (riscv_cpu_cpp_builtins): Define\n+\t__riscv_cmodel_medany when PIC mode.\n+\n+2020-09-29  Alex Coplan  <alex.coplan@arm.com>\n+\n+\t* config/aarch64/aarch64-cores.def: Move neoverse-n2 after saphira.\n+\t* config/aarch64/aarch64-tune.md: Regenerate.\n+\n+2020-09-29  Martin Liska  <mliska@suse.cz>\n+\n+\tPR tree-optimization/96979\n+\t* tree-switch-conversion.c (jump_table_cluster::can_be_handled):\n+\tMake a fast bail out.\n+\t(bit_test_cluster::can_be_handled): Likewise here.\n+\t* tree-switch-conversion.h (get_range): Use wi::to_wide instead\n+\tof a folding.\n+\n+2020-09-29  Martin Liska  <mliska@suse.cz>\n+\n+\tRevert:\n+\t2020-09-22  Martin Liska  <mliska@suse.cz>\n+\n+\tPR tree-optimization/96979\n+\t* doc/invoke.texi: Document new param max-switch-clustering-attempts.\n+\t* params.opt: Add new parameter.\n+\t* tree-switch-conversion.c (jump_table_cluster::find_jump_tables):\n+\tLimit number of attempts.\n+\t(bit_test_cluster::find_bit_tests): Likewise.\n+\n 2020-09-28  Aldy Hernandez  <aldyh@redhat.com>\n \n \t* value-range.h (class irange): Add irange_allocator friend."}, {"sha": "f1815d15e81ed71ea47f7920510f4024318d948e", "filename": "gcc/DATESTAMP", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/93bca37c0a6dec354592676233e40e66741fdbe4/gcc%2FDATESTAMP", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/93bca37c0a6dec354592676233e40e66741fdbe4/gcc%2FDATESTAMP", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FDATESTAMP?ref=93bca37c0a6dec354592676233e40e66741fdbe4", "patch": "@@ -1 +1 @@\n-20200929\n+20200930"}, {"sha": "2e40e81eccbe5f940c11e11e38d74ef7d3546547", "filename": "gcc/analyzer/ChangeLog", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/93bca37c0a6dec354592676233e40e66741fdbe4/gcc%2Fanalyzer%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/93bca37c0a6dec354592676233e40e66741fdbe4/gcc%2Fanalyzer%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fanalyzer%2FChangeLog?ref=93bca37c0a6dec354592676233e40e66741fdbe4", "patch": "@@ -1,3 +1,17 @@\n+2020-09-29  David Malcolm  <dmalcolm@redhat.com>\n+\n+\tPR analyzer/95188\n+\t* engine.cc (stmt_requires_new_enode_p): Split enodes before\n+\t\"signal\" calls.\n+\n+2020-09-29  David Malcolm  <dmalcolm@redhat.com>\n+\n+\t* constraint-manager.cc\n+\t(constraint_manager::add_constraint_internal): Whitespace fixes.\n+\tSilence -Wsign-compare warning.\n+\t* engine.cc (maybe_process_run_of_before_supernode_enodes):\n+\tSilence -Wsign-compare warning.\n+\n 2020-09-28  David Malcolm  <dmalcolm@redhat.com>\n \n \t* region-model.h (binop_svalue::dyn_cast_binop_svalue): Remove"}, {"sha": "03ce9ea90d45a7ddf37d7ab264b0fcbb75885180", "filename": "gcc/c-family/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/93bca37c0a6dec354592676233e40e66741fdbe4/gcc%2Fc-family%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/93bca37c0a6dec354592676233e40e66741fdbe4/gcc%2Fc-family%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2FChangeLog?ref=93bca37c0a6dec354592676233e40e66741fdbe4", "patch": "@@ -1,3 +1,8 @@\n+2020-09-29  Marek Polacek  <polacek@redhat.com>\n+\n+\tPR c++/94695\n+\t* c.opt (Wrange-loop-construct): New option.\n+\n 2020-09-23  Martin Sebor  <msebor@redhat.com>\n \n \tPR c/97131"}, {"sha": "4dea15f2742805ebb5ef9ad4d1f945a33c934fa5", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 52, "deletions": 0, "changes": 52, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/93bca37c0a6dec354592676233e40e66741fdbe4/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/93bca37c0a6dec354592676233e40e66741fdbe4/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=93bca37c0a6dec354592676233e40e66741fdbe4", "patch": "@@ -1,3 +1,55 @@\n+2020-09-29  Marek Polacek  <polacek@redhat.com>\n+\n+\tPR c++/94695\n+\t* call.c (ref_conv_binds_directly_p): New function.\n+\t* cp-tree.h (ref_conv_binds_directly_p): Declare.\n+\t* parser.c (warn_for_range_copy): New function.\n+\t(cp_convert_range_for): Call it.\n+\n+2020-09-29  Nathan Sidwell  <nathan@acm.org>\n+\n+\t* cp-tree.h (ovl_insert): Change final parm to hidden-or-using\n+\tindicator.\n+\t* name-lookup.h (HIDDEN_TYPE_BINDING_P): New.\n+\t(struct cxx_binding): Add type_is_hidden flag.\n+\t* tree.c (ovl_insert): Change using_p parm to using_or_hidden,\n+\tadjust.\n+\t(ovl_skip_hidden): Assert we never see a naked hidden decl.\n+\t* decl.c (xref_tag_1): Delete unhiding friend from here (moved to\n+\tlookup_elaborated_type_1).\n+\t* name-lookup.c (STAT_TYPE_HIDDEN_P, STAT_DECL_HIDDEN_P): New.\n+\t(name_lookup::search_namespace_only): Check new hidden markers.\n+\t(cxx_binding_make): Clear HIDDEN_TYPE_BINDING_P.\n+\t(update_binding): Update new hidden markers.\n+\t(lookup_name_1): Check HIDDEN_TYPE_BINDING_P and simplify friend\n+\tignoring.\n+\t(lookup_elaborated_type_1): Use new hidden markers.  Reveal the\n+\tdecl here.\n+\n+2020-09-29  Nathan Sidwell  <nathan@acm.org>\n+\n+\t* name-lookup.c (create_local_binding): Do not clear\n+\tINHERITED_VALUE_BINDING_P here.\n+\t(name_lookup::process_binding): Move done hidden-decl triage to ...\n+\t(name_lookup::search_namespace_only): ... here, its only caller.\n+\t(cxx_binding_make): Clear flags here.\n+\t(push_binding): Not here.\n+\t(pop_local_binding): RAII.\n+\t(update_binding): Refactor.\n+\t(do_pushdecl): Assert we're never revealing a local binding.\n+\t(do_pushdecl_with_scope): Directly call do_pushdecl.\n+\t(get_class_binding): Do not clear LOCAL_BINDING_P here.\n+\t* pt.c (push_template_decl): Set friend & anticipated before\n+\tpushing.\n+\n+2020-09-29  Nathan Sidwell  <nathan@acm.org>\n+\n+\t* name-lookup.c (update_binding): We never meet two implicit\n+\ttypedefs.\n+\t(do_pushdecl): Adjust set_identifier_type_value_with_scope calls.\n+\t(set_identifier_type_value_with_scope): Do not update binding in\n+\tthe namespace-case.  Assert it is already there.\n+\n 2020-09-25  Nathan Sidwell  <nathan@acm.org>\n \n \t* cp-tree.h (duplicate_decls): Replace 'is_friend' with 'hiding'"}, {"sha": "1c265894c8404eaeef5c12f190294a16f6ec3637", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 94, "deletions": 0, "changes": 94, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/93bca37c0a6dec354592676233e40e66741fdbe4/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/93bca37c0a6dec354592676233e40e66741fdbe4/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=93bca37c0a6dec354592676233e40e66741fdbe4", "patch": "@@ -1,3 +1,97 @@\n+2020-09-29  Martin Sebor  <msebor@redhat.com>\n+\n+\tPR middle-end/97188\n+\t* gcc.dg/Wstringop-overflow-23.c: Adjust text of expected warnings.\n+\t* gcc.dg/Wnonnull-4.c: New test.\n+\n+2020-09-29  Marek Polacek  <polacek@redhat.com>\n+\n+\tPR c++/94695\n+\t* g++.dg/warn/Wrange-loop-construct.C: New test.\n+\n+2020-09-29  David Edelsohn  <dje.gcc@gmail.com>\n+\n+\t* g++.dg/debug/dwarf2/align-1.C: Remove AIX XFAIL.\n+\t* g++.dg/debug/dwarf2/align-2.C: Same.\n+\t* g++.dg/debug/dwarf2/align-3.C: Same.\n+\t* g++.dg/debug/dwarf2/align-4.C: Same.\n+\t* g++.dg/debug/dwarf2/align-5.C: Same.\n+\t* g++.dg/debug/dwarf2/align-6.C: Same.\n+\t* g++.dg/debug/dwarf2/defaulted-member-function-1.C: Same.\n+\t* g++.dg/debug/dwarf2/defaulted-member-function-2.C: Same.\n+\t* g++.dg/debug/dwarf2/defaulted-member-function-3.C: Same.\n+\t* g++.dg/debug/dwarf2/inline-var-1.C: Same.\n+\t* g++.dg/debug/dwarf2/inline-var-2.C: Same.\n+\t* g++.dg/debug/dwarf2/inline-var-3.C: Same.\n+\t* g++.dg/debug/dwarf2/noreturn-function.C: Same.\n+\t* g++.dg/debug/dwarf2/ptrdmem-1.C: Same.\n+\t* g++.dg/debug/dwarf2/ref-2.C: Same.\n+\t* g++.dg/debug/dwarf2/ref-3.C: Same.\n+\t* g++.dg/debug/dwarf2/ref-4.C: Same.\n+\t* g++.dg/debug/dwarf2/refqual-1.C: Same.\n+\t* g++.dg/debug/dwarf2/refqual-2.C: Same.\n+\t* gcc.dg/debug/dwarf2/align-1.c: Same.\n+\t* gcc.dg/debug/dwarf2/align-2.c: Same.\n+\t* gcc.dg/debug/dwarf2/align-3.c: Same.\n+\t* gcc.dg/debug/dwarf2/align-4.c: Same.\n+\t* gcc.dg/debug/dwarf2/align-5.c: Same.\n+\t* gcc.dg/debug/dwarf2/align-6.c: Same.\n+\t* gcc.dg/debug/dwarf2/align-as-1.c: Same.\n+\t* gcc.dg/debug/dwarf2/dwarf2-macro.c: Same.\n+\t* gcc.dg/debug/dwarf2/dwarf2-macro2.c: Same.\n+\t* gcc.dg/debug/dwarf2/lang-c89.c: Same.\n+\t* gcc.dg/debug/dwarf2/noreturn-function-attribute.c: Same.\n+\t* gcc.dg/debug/dwarf2/noreturn-function-keyword.c: Same.\n+\t* gcc.dg/debug/dwarf2/pr71855.c: Same.\n+\t* gcc.dg/debug/dwarf2/inline5.c: Add XFAIL on AIX.\n+\n+2020-09-29  David Malcolm  <dmalcolm@redhat.com>\n+\n+\tPR analyzer/95188\n+\t* gcc.dg/analyzer/signal-registration-loc.c: New test.\n+\n+2020-09-29  David Edelsohn  <dje.gcc@gmail.com>\n+\n+\t* g++.dg/spellcheck-inttypes.C: Define _STD_TYPES_T on AIX.\n+\t* gcc.dg/spellcheck-inttypes.c: Same.\n+\n+2020-09-29  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/97241\n+\t* gcc.dg/vect/pr97241.c: New testcase.\n+\n+2020-09-29  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/97238\n+\t* gcc.dg/pr97238.c: New testcase.\n+\n+2020-09-29  Richard Sandiford  <richard.sandiford@arm.com>\n+\n+\t* gcc.target/arm/armv8_2-fp16-arith-2.c: Expect FP16 vectorization\n+\teven without -ffast-math.\n+\n+2020-09-29  Kito Cheng  <kito.cheng@sifive.com>\n+\n+\t* gcc.target/riscv/predef-3.c: Update testcase.\n+\t* gcc.target/riscv/predef-6.c: Ditto.\n+\n+2020-09-29  Martin Liska  <mliska@suse.cz>\n+\n+\tPR tree-optimization/96979\n+\t* g++.dg/tree-ssa/pr96979.C: New test.\n+\n+2020-09-29  Martin Liska  <mliska@suse.cz>\n+\n+\tRevert:\n+\t2020-09-29  Martin Liska  <mliska@suse.cz>\n+\n+\tPR tree-optimization/96979\n+\t* g++.dg/tree-ssa/pr96979.C: New test.\n+\n+2020-09-29  David Edelsohn  <dje.gcc@gmail.com>\n+\n+\t* gcc.dg/ipa/symver1.c: Skip on AIX.\n+\n 2020-09-28  David Malcolm  <dmalcolm@redhat.com>\n \n \tPR analyzer/97233"}, {"sha": "da89eb99aea5c60b65f8a614362ca70bb119aabf", "filename": "libgcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/93bca37c0a6dec354592676233e40e66741fdbe4/libgcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/93bca37c0a6dec354592676233e40e66741fdbe4/libgcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2FChangeLog?ref=93bca37c0a6dec354592676233e40e66741fdbe4", "patch": "@@ -1,3 +1,8 @@\n+2020-09-29  Maciej W. Rozycki  <macro@wdc.com>\n+\n+\t* config/riscv/t-elf (LIB2_DIVMOD_EXCEPTION_FLAGS): New\n+\tvariable.\n+\n 2020-09-28  Richard Sandiford  <richard.sandiford@arm.com>\n \n \t* config/aarch64/libgcc-softfp.ver: New file."}, {"sha": "ce0d06895d49454604885dce0fb420e7ba54e98d", "filename": "libgomp/ChangeLog", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/93bca37c0a6dec354592676233e40e66741fdbe4/libgomp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/93bca37c0a6dec354592676233e40e66741fdbe4/libgomp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2FChangeLog?ref=93bca37c0a6dec354592676233e40e66741fdbe4", "patch": "@@ -1,3 +1,16 @@\n+2020-09-29  Andrew Stubbs  <ams@codesourcery.com>\n+\n+\t* config/gcn/bar.c (gomp_barrier_wait_end): Skip the barrier if the\n+\ttotal number of threads is one.\n+\t(gomp_team_barrier_wake): Likewise.\n+\t(gomp_team_barrier_wait_end): Likewise.\n+\t(gomp_team_barrier_wait_cancel_end): Likewise.\n+\t* config/nvptx/bar.c (gomp_barrier_wait_end): Likewise.\n+\t(gomp_team_barrier_wake): Likewise.\n+\t(gomp_team_barrier_wait_end): Likewise.\n+\t(gomp_team_barrier_wait_cancel_end): Likewise.\n+\t* testsuite/libgomp.c-c++-common/nested-parallel-unbalanced.c: New test.\n+\n 2020-09-28  Tobias Burnus  <tobias@codesourcery.com>\n \n \tPR middle-end/96390"}]}