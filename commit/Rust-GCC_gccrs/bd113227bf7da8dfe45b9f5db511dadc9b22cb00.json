{"sha": "bd113227bf7da8dfe45b9f5db511dadc9b22cb00", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmQxMTMyMjdiZjdkYThkZmU0NWI5ZjVkYjUxMWRhZGM5YjIyY2IwMA==", "commit": {"author": {"name": "Richard Guenther", "email": "rguenther@suse.de", "date": "2007-10-08T15:23:49Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2007-10-08T15:23:49Z"}, "message": "re PR middle-end/33693 (Type checking error with bitwise xor/and)\n\n2007-10-08  Richard Guenther  <rguenther@suse.de>\n\n\tPR middle-end/33693\n\tPR middle-end/33695\n\tPR middle-end/33697\n\t* fold-const.c (fold_binary): Use correct types in folding\n\tof a * (1 << b) to (a << b).  Likewise for ~A & ~B to ~(A | B)\n\tand building of RROTATE_EXPR.\n\n\t* gcc.dg/pr33693.c: New testcase.\n\t* gcc.dg/pr33695.c: Likewise.\n\t* gcc.dg/pr33697.c: Likewise.\n\nFrom-SVN: r129130", "tree": {"sha": "68d927f3aff3877ad0962683ab193ec9859c84fb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/68d927f3aff3877ad0962683ab193ec9859c84fb"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/bd113227bf7da8dfe45b9f5db511dadc9b22cb00", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bd113227bf7da8dfe45b9f5db511dadc9b22cb00", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bd113227bf7da8dfe45b9f5db511dadc9b22cb00", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bd113227bf7da8dfe45b9f5db511dadc9b22cb00/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "1904bef10a80e25e59105a084501097f67621c3f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1904bef10a80e25e59105a084501097f67621c3f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1904bef10a80e25e59105a084501097f67621c3f"}], "stats": {"total": 58, "additions": 52, "deletions": 6}, "files": [{"sha": "b03f6d0f5893ea1744e85348a51cf68dd2041502", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bd113227bf7da8dfe45b9f5db511dadc9b22cb00/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bd113227bf7da8dfe45b9f5db511dadc9b22cb00/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=bd113227bf7da8dfe45b9f5db511dadc9b22cb00", "patch": "@@ -1,3 +1,12 @@\n+2007-10-08  Richard Guenther  <rguenther@suse.de>\n+\n+\tPR middle-end/33693\n+\tPR middle-end/33695\n+\tPR middle-end/33697\n+\t* fold-const.c (fold_binary): Use correct types in folding\n+\tof a * (1 << b) to (a << b).  Likewise for ~A & ~B to ~(A | B)\n+\tand building of RROTATE_EXPR.\n+\n 2007-10-08  Richard Guenther  <rguenther@suse.de>\n \n \tPR middle-end/33691"}, {"sha": "4a8153cb499dc8201fc2d0f10ac36437627f1730", "filename": "gcc/fold-const.c", "status": "modified", "additions": 8, "deletions": 6, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bd113227bf7da8dfe45b9f5db511dadc9b22cb00/gcc%2Ffold-const.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bd113227bf7da8dfe45b9f5db511dadc9b22cb00/gcc%2Ffold-const.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffold-const.c?ref=bd113227bf7da8dfe45b9f5db511dadc9b22cb00", "patch": "@@ -10348,16 +10348,16 @@ fold_binary (enum tree_code code, tree type, tree op0, tree op1)\n \t      && (tem = negate_expr (arg1)) != arg1\n \t      && !TREE_OVERFLOW (tem))\n \t    return fold_build2 (MULT_EXPR, type,\n-\t    \t\t\tnegate_expr (arg0), tem);\n+\t    \t\t\tfold_convert (type, negate_expr (arg0)), tem);\n \n \t  /* (a * (1 << b)) is (a << b)  */\n \t  if (TREE_CODE (arg1) == LSHIFT_EXPR\n \t      && integer_onep (TREE_OPERAND (arg1, 0)))\n-\t    return fold_build2 (LSHIFT_EXPR, type, arg0,\n+\t    return fold_build2 (LSHIFT_EXPR, type, op0,\n \t\t\t\tTREE_OPERAND (arg1, 1));\n \t  if (TREE_CODE (arg0) == LSHIFT_EXPR\n \t      && integer_onep (TREE_OPERAND (arg0, 0)))\n-\t    return fold_build2 (LSHIFT_EXPR, type, arg1,\n+\t    return fold_build2 (LSHIFT_EXPR, type, op1,\n \t\t\t\tTREE_OPERAND (arg0, 1));\n \n \t  strict_overflow_p = false;\n@@ -11012,8 +11012,10 @@ fold_binary (enum tree_code code, tree type, tree op0, tree op1)\n \t{\n \t  return fold_build1 (BIT_NOT_EXPR, type,\n \t\t\t      build2 (BIT_IOR_EXPR, type,\n-\t\t\t\t      TREE_OPERAND (arg0, 0),\n-\t\t\t\t      TREE_OPERAND (arg1, 0)));\n+\t\t\t\t      fold_convert (type,\n+\t\t\t\t\t\t    TREE_OPERAND (arg0, 0)),\n+\t\t\t\t      fold_convert (type,\n+\t\t\t\t\t\t    TREE_OPERAND (arg1, 0))));\n \t}\n \n       /* If arg0 is derived from the address of an object or function, we may\n@@ -11549,7 +11551,7 @@ fold_binary (enum tree_code code, tree type, tree op0, tree op1)\n \t  tree tem = build_int_cst (TREE_TYPE (arg1),\n \t\t\t\t    GET_MODE_BITSIZE (TYPE_MODE (type)));\n \t  tem = const_binop (MINUS_EXPR, tem, arg1, 0);\n-\t  return fold_build2 (RROTATE_EXPR, type, arg0, tem);\n+\t  return fold_build2 (RROTATE_EXPR, type, op0, tem);\n \t}\n \n       /* If we have a rotate of a bit operation with the rotate count and"}, {"sha": "f7fd6dd35b058f8c8d4fda12d70b8260a89efcba", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bd113227bf7da8dfe45b9f5db511dadc9b22cb00/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bd113227bf7da8dfe45b9f5db511dadc9b22cb00/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=bd113227bf7da8dfe45b9f5db511dadc9b22cb00", "patch": "@@ -1,3 +1,12 @@\n+2007-10-08  Richard Guenther  <rguenther@suse.de>\n+\n+\tPR middle-end/33693\n+\tPR middle-end/33695\n+\tPR middle-end/33697\n+\t* gcc.dg/pr33693.c: New testcase.\n+\t* gcc.dg/pr33695.c: Likewise.\n+\t* gcc.dg/pr33697.c: Likewise.\n+\n 2007-10-08  Richard Guenther  <rguenther@suse.de>\n \n \tPR middle-end/33691"}, {"sha": "147c164c4b42034f2118d55fa93eddd3f67de0e1", "filename": "gcc/testsuite/gcc.dg/pr33693.c", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bd113227bf7da8dfe45b9f5db511dadc9b22cb00/gcc%2Ftestsuite%2Fgcc.dg%2Fpr33693.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bd113227bf7da8dfe45b9f5db511dadc9b22cb00/gcc%2Ftestsuite%2Fgcc.dg%2Fpr33693.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr33693.c?ref=bd113227bf7da8dfe45b9f5db511dadc9b22cb00", "patch": "@@ -0,0 +1,8 @@\n+/* { dg-do compile } */\n+\n+/* This used to ICE with type-checking enabled.  */\n+\n+unsigned long modify_field (unsigned long mask, long fieldval)\n+{\n+  return (~fieldval & ~mask);\n+}"}, {"sha": "2d3ffbd6688c778355d08a338334bcd52a5b372b", "filename": "gcc/testsuite/gcc.dg/pr33695.c", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bd113227bf7da8dfe45b9f5db511dadc9b22cb00/gcc%2Ftestsuite%2Fgcc.dg%2Fpr33695.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bd113227bf7da8dfe45b9f5db511dadc9b22cb00/gcc%2Ftestsuite%2Fgcc.dg%2Fpr33695.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr33695.c?ref=bd113227bf7da8dfe45b9f5db511dadc9b22cb00", "patch": "@@ -0,0 +1,8 @@\n+/* { dg-do compile } */\n+\n+/* We used to ICE with type-checking enabled.  */\n+\n+unsigned int bfstages(int M, float *Utbl, int Ustride)\n+{\n+   return ((unsigned int) 1 << M) * Ustride;\n+}"}, {"sha": "8c5edb65853341b761c0fe968ecc2c80bfdd2934", "filename": "gcc/testsuite/gcc.dg/pr33697.c", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bd113227bf7da8dfe45b9f5db511dadc9b22cb00/gcc%2Ftestsuite%2Fgcc.dg%2Fpr33697.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bd113227bf7da8dfe45b9f5db511dadc9b22cb00/gcc%2Ftestsuite%2Fgcc.dg%2Fpr33697.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr33697.c?ref=bd113227bf7da8dfe45b9f5db511dadc9b22cb00", "patch": "@@ -0,0 +1,10 @@\n+/* { dg-do compile } */\n+\n+/* We used to ICE for this with type-checking enabled.  */\n+\n+typedef signed short gint16;\n+typedef unsigned short guint16;\n+gint16 dissect_old_pflog(gint16 rnr)\n+{\n+  return (guint16) ((guint16) ((guint16)rnr >> 8) | (guint16) ((guint16)rnr << 8));\n+}"}]}