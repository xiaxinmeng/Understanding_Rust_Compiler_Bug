{"sha": "cbc45bea5f58a19d0545d1101a0a0c1a9e7760d2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2JjNDViZWE1ZjU4YTE5ZDA1NDVkMTEwMWEwYTBjMWE5ZTc3NjBkMg==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2017-09-12T15:25:15Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2017-09-12T15:25:15Z"}, "message": "re PR target/82112 (internal compiler error: in fold_convert_loc, at fold-const.c:2262)\n\n\tPR target/82112\n\t* config/rs6000/rs6000-c.c (altivec_resolve_overloaded_builtin): For\n\tALTIVEC_BUILTIN_VEC_LD if arg1 has array type call default_conversion\n\ton it early, rather than manual conversion late.  For\n\tALTIVEC_BUILTIN_VEC_ST if arg2 has array type call default_conversion\n\tinstead of performing manual conversion.\n\n\t* gcc.target/powerpc/pr82112.c: New test.\n\t* g++.dg/ext/altivec-18.C: New test.\n\nFrom-SVN: r252028", "tree": {"sha": "ea5c4c4a0d3679e0987b6d888e875b12f5432a2c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ea5c4c4a0d3679e0987b6d888e875b12f5432a2c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/cbc45bea5f58a19d0545d1101a0a0c1a9e7760d2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cbc45bea5f58a19d0545d1101a0a0c1a9e7760d2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cbc45bea5f58a19d0545d1101a0a0c1a9e7760d2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cbc45bea5f58a19d0545d1101a0a0c1a9e7760d2/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "2afb2668ad15d17d225e97856354bf15041e5316", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2afb2668ad15d17d225e97856354bf15041e5316", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2afb2668ad15d17d225e97856354bf15041e5316"}], "stats": {"total": 71, "additions": 56, "deletions": 15}, "files": [{"sha": "eb73164a896dbe975804621d05dc93c0e70295e6", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cbc45bea5f58a19d0545d1101a0a0c1a9e7760d2/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cbc45bea5f58a19d0545d1101a0a0c1a9e7760d2/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=cbc45bea5f58a19d0545d1101a0a0c1a9e7760d2", "patch": "@@ -1,3 +1,12 @@\n+2017-09-12  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR target/82112\n+\t* config/rs6000/rs6000-c.c (altivec_resolve_overloaded_builtin): For\n+\tALTIVEC_BUILTIN_VEC_LD if arg1 has array type call default_conversion\n+\ton it early, rather than manual conversion late.  For\n+\tALTIVEC_BUILTIN_VEC_ST if arg2 has array type call default_conversion\n+\tinstead of performing manual conversion.\n+\n 2017-09-12  Carl Love  <cel@us.ibm.com>\n \n         * config/rs6000/altivec.md (vec_widen_umult_even_v4si,"}, {"sha": "d27f5635c82cd7c113fc5040a6c3a189cdd89773", "filename": "gcc/config/rs6000/rs6000-c.c", "status": "modified", "additions": 11, "deletions": 15, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cbc45bea5f58a19d0545d1101a0a0c1a9e7760d2/gcc%2Fconfig%2Frs6000%2Frs6000-c.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cbc45bea5f58a19d0545d1101a0a0c1a9e7760d2/gcc%2Fconfig%2Frs6000%2Frs6000-c.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000-c.c?ref=cbc45bea5f58a19d0545d1101a0a0c1a9e7760d2", "patch": "@@ -6489,7 +6489,13 @@ altivec_resolve_overloaded_builtin (location_t loc, tree fndecl,\n \n       /* Strip qualifiers like \"const\" from the pointer arg.  */\n       tree arg1_type = TREE_TYPE (arg1);\n-      if (!POINTER_TYPE_P (arg1_type) && TREE_CODE (arg1_type) != ARRAY_TYPE)\n+      if (TREE_CODE (arg1_type) == ARRAY_TYPE && c_dialect_cxx ())\n+\t{\n+\t  /* Force array-to-pointer decay for C++.  */\n+\t  arg1 = default_conversion (arg1);\n+\t  arg1_type = TREE_TYPE (arg1);\n+\t}\n+      if (!POINTER_TYPE_P (arg1_type))\n \tgoto bad;\n \n       tree inner_type = TREE_TYPE (arg1_type);\n@@ -6509,15 +6515,6 @@ altivec_resolve_overloaded_builtin (location_t loc, tree fndecl,\n \t  if (!ptrofftype_p (TREE_TYPE (arg0)))\n \t    arg0 = build1 (NOP_EXPR, sizetype, arg0);\n \n-\t  tree arg1_type = TREE_TYPE (arg1);\n-\t  if (TREE_CODE (arg1_type) == ARRAY_TYPE)\n-\t    {\n-\t      arg1_type = TYPE_POINTER_TO (TREE_TYPE (arg1_type));\n-\t      tree const0 = build_int_cstu (sizetype, 0);\n-\t      tree arg1_elt0 = build_array_ref (loc, arg1, const0);\n-\t      arg1 = build1 (ADDR_EXPR, arg1_type, arg1_elt0);\n-\t    }\n-\n \t  tree addr = fold_build2_loc (loc, POINTER_PLUS_EXPR, arg1_type,\n \t\t\t\t       arg1, arg0);\n \t  tree aligned = fold_build2_loc (loc, BIT_AND_EXPR, arg1_type, addr,\n@@ -6572,12 +6569,11 @@ altivec_resolve_overloaded_builtin (location_t loc, tree fndecl,\n \t    arg1 = build1 (NOP_EXPR, sizetype, arg1);\n \n \t  tree arg2_type = TREE_TYPE (arg2);\n-\t  if (TREE_CODE (arg2_type) == ARRAY_TYPE)\n+\t  if (TREE_CODE (arg2_type) == ARRAY_TYPE && c_dialect_cxx ())\n \t    {\n-\t      arg2_type = TYPE_POINTER_TO (TREE_TYPE (arg2_type));\n-\t      tree const0 = build_int_cstu (sizetype, 0);\n-\t      tree arg2_elt0 = build_array_ref (loc, arg2, const0);\n-\t      arg2 = build1 (ADDR_EXPR, arg2_type, arg2_elt0);\n+\t      /* Force array-to-pointer decay for C++.  */\n+\t      arg2 = default_conversion (arg2);\n+\t      arg2_type = TREE_TYPE (arg2);\n \t    }\n \n \t  /* Find the built-in to make sure a compatible one exists; if not"}, {"sha": "a3ccc129d11a2c0db5a25d023dd6b8ea8f769f62", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cbc45bea5f58a19d0545d1101a0a0c1a9e7760d2/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cbc45bea5f58a19d0545d1101a0a0c1a9e7760d2/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=cbc45bea5f58a19d0545d1101a0a0c1a9e7760d2", "patch": "@@ -1,3 +1,9 @@\n+2017-09-12  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR target/82112\n+\t* gcc.target/powerpc/pr82112.c: New test.\n+\t* g++.dg/ext/altivec-18.C: New test.\n+\n 2017-09-12  Martin Liska  <mliska@suse.cz>\n \n \tPR testsuite/82114"}, {"sha": "5b83028e7370c8929d2d7d36d26c9f07722f44b7", "filename": "gcc/testsuite/g++.dg/ext/altivec-18.C", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cbc45bea5f58a19d0545d1101a0a0c1a9e7760d2/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Faltivec-18.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cbc45bea5f58a19d0545d1101a0a0c1a9e7760d2/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Faltivec-18.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Faltivec-18.C?ref=cbc45bea5f58a19d0545d1101a0a0c1a9e7760d2", "patch": "@@ -0,0 +1,14 @@\n+// PR target/82112\n+// { dg-do compile { target powerpc*-*-* } }\n+// { dg-require-effective-target powerpc_altivec_ok }\n+// { dg-options \"-maltivec\" }\n+\n+#include <altivec.h>\n+\n+__attribute__((aligned (16))) extern const unsigned char c[16];\n+\n+void\n+foo (void)\n+{\n+  vec_ld (0, c);\n+}"}, {"sha": "fbb0f9d3d06002c0cc0f408a55474a2c13e754d6", "filename": "gcc/testsuite/gcc.target/powerpc/pr82112.c", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cbc45bea5f58a19d0545d1101a0a0c1a9e7760d2/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fpr82112.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cbc45bea5f58a19d0545d1101a0a0c1a9e7760d2/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fpr82112.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fpr82112.c?ref=cbc45bea5f58a19d0545d1101a0a0c1a9e7760d2", "patch": "@@ -0,0 +1,16 @@\n+/* PR target/82112 */\n+/* { dg-do compile } */\n+/* { dg-require-effective-target powerpc_altivec_ok } */\n+/* { dg-options \"-maltivec -std=gnu90\" } */\n+\n+#include <altivec.h>\n+\n+struct __attribute__((aligned (16))) S { unsigned char c[64]; } bar (void);\n+vector unsigned char v;\n+\n+void\n+foo (void)\n+{\n+  vec_ld (0, bar ().c);\t/* { dg-error \"invalid parameter combination for AltiVec intrinsic\" } */\n+  vec_st (v, 0, bar ().c);\t/* { dg-error \"invalid parameter combination for AltiVec intrinsic\" } */\n+}"}]}