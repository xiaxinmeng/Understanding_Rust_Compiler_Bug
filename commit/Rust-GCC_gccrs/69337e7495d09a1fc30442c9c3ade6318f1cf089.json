{"sha": "69337e7495d09a1fc30442c9c3ade6318f1cf089", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjkzMzdlNzQ5NWQwOWExZmMzMDQ0MmM5YzNhZGU2MzE4ZjFjZjA4OQ==", "commit": {"author": {"name": "Benjamin Peterson", "email": "benjamin@locrian.net", "date": "2021-09-19T04:07:40Z"}, "committer": {"name": "Jeff Law", "email": "jeffreyalaw@gmail.com", "date": "2021-09-19T04:08:21Z"}, "message": "[PATCH] Remove unused function make_unique_name.\n\ngcc/\n\t* attribs.c (make_unique_name): Delete.\n\t* attribs.h (make_unique_name): Delete.", "tree": {"sha": "a2d5ff4685cd4dda3c96e14771323b725578adcd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a2d5ff4685cd4dda3c96e14771323b725578adcd"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/69337e7495d09a1fc30442c9c3ade6318f1cf089", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/69337e7495d09a1fc30442c9c3ade6318f1cf089", "html_url": "https://github.com/Rust-GCC/gccrs/commit/69337e7495d09a1fc30442c9c3ade6318f1cf089", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/69337e7495d09a1fc30442c9c3ade6318f1cf089/comments", "author": {"login": "benjaminp", "id": 219470, "node_id": "MDQ6VXNlcjIxOTQ3MA==", "avatar_url": "https://avatars.githubusercontent.com/u/219470?v=4", "gravatar_id": "", "url": "https://api.github.com/users/benjaminp", "html_url": "https://github.com/benjaminp", "followers_url": "https://api.github.com/users/benjaminp/followers", "following_url": "https://api.github.com/users/benjaminp/following{/other_user}", "gists_url": "https://api.github.com/users/benjaminp/gists{/gist_id}", "starred_url": "https://api.github.com/users/benjaminp/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/benjaminp/subscriptions", "organizations_url": "https://api.github.com/users/benjaminp/orgs", "repos_url": "https://api.github.com/users/benjaminp/repos", "events_url": "https://api.github.com/users/benjaminp/events{/privacy}", "received_events_url": "https://api.github.com/users/benjaminp/received_events", "type": "User", "site_admin": false}, "committer": {"login": "JeffreyALaw", "id": 14062506, "node_id": "MDQ6VXNlcjE0MDYyNTA2", "avatar_url": "https://avatars.githubusercontent.com/u/14062506?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JeffreyALaw", "html_url": "https://github.com/JeffreyALaw", "followers_url": "https://api.github.com/users/JeffreyALaw/followers", "following_url": "https://api.github.com/users/JeffreyALaw/following{/other_user}", "gists_url": "https://api.github.com/users/JeffreyALaw/gists{/gist_id}", "starred_url": "https://api.github.com/users/JeffreyALaw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JeffreyALaw/subscriptions", "organizations_url": "https://api.github.com/users/JeffreyALaw/orgs", "repos_url": "https://api.github.com/users/JeffreyALaw/repos", "events_url": "https://api.github.com/users/JeffreyALaw/events{/privacy}", "received_events_url": "https://api.github.com/users/JeffreyALaw/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "767c098247a405041a48d6c1663100bfc29e414c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/767c098247a405041a48d6c1663100bfc29e414c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/767c098247a405041a48d6c1663100bfc29e414c"}], "stats": {"total": 35, "additions": 0, "deletions": 35}, "files": [{"sha": "83fafc98b7d215fad482706c7b8182059855d2c8", "filename": "gcc/attribs.c", "status": "modified", "additions": 0, "deletions": 34, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/69337e7495d09a1fc30442c9c3ade6318f1cf089/gcc%2Fattribs.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/69337e7495d09a1fc30442c9c3ade6318f1cf089/gcc%2Fattribs.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fattribs.c?ref=69337e7495d09a1fc30442c9c3ade6318f1cf089", "patch": "@@ -1022,40 +1022,6 @@ common_function_versions (tree fn1, tree fn2)\n   return result;\n }\n \n-/* Return a new name by appending SUFFIX to the DECL name.  If make_unique\n-   is true, append the full path name of the source file.  */\n-\n-char *\n-make_unique_name (tree decl, const char *suffix, bool make_unique)\n-{\n-  char *global_var_name;\n-  int name_len;\n-  const char *name;\n-  const char *unique_name = NULL;\n-\n-  name = IDENTIFIER_POINTER (DECL_ASSEMBLER_NAME (decl));\n-\n-  /* Get a unique name that can be used globally without any chances\n-     of collision at link time.  */\n-  if (make_unique)\n-    unique_name = IDENTIFIER_POINTER (get_file_function_name (\"\\0\"));\n-\n-  name_len = strlen (name) + strlen (suffix) + 2;\n-\n-  if (make_unique)\n-    name_len += strlen (unique_name) + 1;\n-  global_var_name = XNEWVEC (char, name_len);\n-\n-  /* Use '.' to concatenate names as it is demangler friendly.  */\n-  if (make_unique)\n-    snprintf (global_var_name, name_len, \"%s.%s.%s\", name, unique_name,\n-\t      suffix);\n-  else\n-    snprintf (global_var_name, name_len, \"%s.%s\", name, suffix);\n-\n-  return global_var_name;\n-}\n-\n /* Make a dispatcher declaration for the multi-versioned function DECL.\n    Calls to DECL function will be replaced with calls to the dispatcher\n    by the front-end.  Return the decl created.  */"}, {"sha": "138c509bce13df8b01953483fd82de6c62b2b836", "filename": "gcc/attribs.h", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/69337e7495d09a1fc30442c9c3ade6318f1cf089/gcc%2Fattribs.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/69337e7495d09a1fc30442c9c3ade6318f1cf089/gcc%2Fattribs.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fattribs.h?ref=69337e7495d09a1fc30442c9c3ade6318f1cf089", "patch": "@@ -44,7 +44,6 @@ extern struct scoped_attributes* register_scoped_attributes (const struct attrib\n \n extern char *sorted_attr_string (tree);\n extern bool common_function_versions (tree, tree);\n-extern char *make_unique_name (tree, const char *, bool);\n extern tree make_dispatcher_decl (const tree);\n extern bool is_function_default_version (const tree);\n "}]}