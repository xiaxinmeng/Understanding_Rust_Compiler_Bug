{"sha": "5cd25f0725e01635bd3f8da6ae91d41670e18a1f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWNkMjVmMDcyNWUwMTYzNWJkM2Y4ZGE2YWU5MWQ0MTY3MGUxOGExZg==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2009-11-20T05:03:21Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2009-11-20T05:03:21Z"}, "message": "re PR c++/42115 (r154072 & r154073 break build of ppl, non-placement deallocation issue)\n\n\tPR c++/42115\n\t* call.c (build_op_delete_call): Don't complain about using\n\top delete (void *, size_t) for placement delete if there's an\n\top delete (void *).\n\nFrom-SVN: r154357", "tree": {"sha": "e9a6a73054ca153a6753e107531289d9d19e7624", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e9a6a73054ca153a6753e107531289d9d19e7624"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5cd25f0725e01635bd3f8da6ae91d41670e18a1f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5cd25f0725e01635bd3f8da6ae91d41670e18a1f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5cd25f0725e01635bd3f8da6ae91d41670e18a1f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5cd25f0725e01635bd3f8da6ae91d41670e18a1f/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "98fba7f7af1ee1286264f56447be91a4a8e67d49", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/98fba7f7af1ee1286264f56447be91a4a8e67d49", "html_url": "https://github.com/Rust-GCC/gccrs/commit/98fba7f7af1ee1286264f56447be91a4a8e67d49"}], "stats": {"total": 38, "additions": 36, "deletions": 2}, "files": [{"sha": "042e637f8eac952fb13028dc6bb879ee864f6d19", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5cd25f0725e01635bd3f8da6ae91d41670e18a1f/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5cd25f0725e01635bd3f8da6ae91d41670e18a1f/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=5cd25f0725e01635bd3f8da6ae91d41670e18a1f", "patch": "@@ -1,5 +1,10 @@\n 2009-11-19  Jason Merrill  <jason@redhat.com>\n \n+\tPR c++/42115\n+\t* call.c (build_op_delete_call): Don't complain about using\n+\top delete (void *, size_t) for placement delete if there's an\n+\top delete (void *).\n+\n \tDR 176 permissiveness\n \t* class.c (build_self_reference): Call set_underlying_type.\n \t* decl.c (check_elaborated_type_specifier): Don't complain about"}, {"sha": "3b3ccb66bad2c1d878132fd6ce1641b9cf969ee7", "filename": "gcc/cp/call.c", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5cd25f0725e01635bd3f8da6ae91d41670e18a1f/gcc%2Fcp%2Fcall.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5cd25f0725e01635bd3f8da6ae91d41670e18a1f/gcc%2Fcp%2Fcall.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcall.c?ref=5cd25f0725e01635bd3f8da6ae91d41670e18a1f", "patch": "@@ -4622,8 +4622,20 @@ build_op_delete_call (enum tree_code code, tree addr, tree size,\n \t allocation function, the program is ill-formed.\"  */\n       if (non_placement_deallocation_fn_p (fn))\n \t{\n+\t  /* But if the class has an operator delete (void *), then that is\n+\t     the usual deallocation function, so we shouldn't complain\n+\t     about using the operator delete (void *, size_t).  */\n+\t  for (t = BASELINK_P (fns) ? BASELINK_FUNCTIONS (fns) : fns;\n+\t       t; t = OVL_NEXT (t))\n+\t    {\n+\t      tree elt = OVL_CURRENT (t);\n+\t      if (non_placement_deallocation_fn_p (elt)\n+\t\t  && FUNCTION_ARG_CHAIN (elt) == void_list_node)\n+\t\tgoto ok;\n+\t    }\n \t  permerror (0, \"non-placement deallocation function %q+D\", fn);\n \t  permerror (input_location, \"selected for placement delete\");\n+\tok:;\n \t}\n     }\n   else"}, {"sha": "ecebcb136a36eb6eb97c6259238971bd71d80435", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5cd25f0725e01635bd3f8da6ae91d41670e18a1f/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5cd25f0725e01635bd3f8da6ae91d41670e18a1f/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=5cd25f0725e01635bd3f8da6ae91d41670e18a1f", "patch": "@@ -1,5 +1,8 @@\n 2009-11-19  Jason Merrill  <jason@redhat.com>\n \n+\tPR c++/42115\n+\t* g++.dg/init/placement5.C: Add positive test.\n+\n \tDR 176 permissiveness\n \t* g++.dg/ext/injected-ttp.C: New.\n \t* g++.old-deja/g++.pt/niklas01a.C: Adjust."}, {"sha": "1d540daca4329b34e0b36bf607ce819e81657443", "filename": "gcc/testsuite/g++.dg/init/placement5.C", "status": "modified", "additions": 16, "deletions": 2, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5cd25f0725e01635bd3f8da6ae91d41670e18a1f/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Finit%2Fplacement5.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5cd25f0725e01635bd3f8da6ae91d41670e18a1f/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Finit%2Fplacement5.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Finit%2Fplacement5.C?ref=5cd25f0725e01635bd3f8da6ae91d41670e18a1f", "patch": "@@ -3,16 +3,30 @@\n // placement deallocation function, would have been selected as a match for\n // the allocation function, the program is ill-formed.\n \n+// But we should only complain about using op delete (void *, size_t) for\n+// placement delete if it would also be selected for normal delete, not if\n+// there's also an op delete (void *).\n+\n typedef __SIZE_TYPE__ size_t;\n \n struct A\n {\n   A();\n-  static void* operator new (size_t, size_t);\n-  static void operator delete (void *, size_t); // { dg-error \"non-placement\" }\n+  void* operator new (size_t, size_t);\n+  void operator delete (void *, size_t); // { dg-error \"non-placement\" }\n+};\n+\n+struct B\n+{\n+  B();\n+  void * operator new (size_t);\n+  void * operator new (size_t, size_t);\n+  void operator delete (void *);\n+  void operator delete (void *, size_t);\n };\n \n int main()\n {\n   A* ap = new (24) A;\t\t// { dg-error \"placement delete\" }\n+  B* bp = new (24) B;\n }"}]}