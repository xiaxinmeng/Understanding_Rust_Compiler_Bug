{"sha": "e713adf6454bc88303e4708378948ac831b14b10", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTcxM2FkZjY0NTRiYzg4MzAzZTQ3MDgzNzg5NDhhYzgzMWIxNGIxMA==", "commit": {"author": {"name": "Carlos O'Donell", "email": "carlos@codesourcery.com", "date": "2006-03-24T21:17:41Z"}, "committer": {"name": "Carlos O'Donell", "email": "carlos@gcc.gnu.org", "date": "2006-03-24T21:17:41Z"}, "message": "invoke.texi: Document -femit-class-debug-always\n\ngcc/\n\n2006-03-24  Carlos O'Donell  <carlos@codesourcery.com>\n\n\t* doc/invoke.texi: Document -femit-class-debug-always\n\t* common.opt: Add -femit-class-debug-always.\n\ngcc/cp/\n\n2006-03-24  Carlos O'Donell  <carlos@codesourcery.com>\n\n\t* search.c (maybe_suppress_debug_info): If\n\tflag_emit_class_debug_always then don't suppress.\n\nFrom-SVN: r112360", "tree": {"sha": "cb8c0bb8c6287c529e1298157589ba45fae12f66", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/cb8c0bb8c6287c529e1298157589ba45fae12f66"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e713adf6454bc88303e4708378948ac831b14b10", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e713adf6454bc88303e4708378948ac831b14b10", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e713adf6454bc88303e4708378948ac831b14b10", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e713adf6454bc88303e4708378948ac831b14b10/comments", "author": null, "committer": null, "parents": [{"sha": "69793f280c2e603755d8be9e04a24a35e9847fda", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/69793f280c2e603755d8be9e04a24a35e9847fda", "html_url": "https://github.com/Rust-GCC/gccrs/commit/69793f280c2e603755d8be9e04a24a35e9847fda"}], "stats": {"total": 29, "additions": 28, "deletions": 1}, "files": [{"sha": "e47ecd13b86f7d030b02686d47994572169bfc62", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e713adf6454bc88303e4708378948ac831b14b10/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e713adf6454bc88303e4708378948ac831b14b10/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=e713adf6454bc88303e4708378948ac831b14b10", "patch": "@@ -1,3 +1,8 @@\n+2006-03-24  Carlos O'Donell  <carlos@codesourcery.com>\n+\n+\t* doc/invoke.texi: Document -femit-class-debug-always\n+\t* common.opt: Add -femit-class-debug-always.\n+\n 2006-03-24  Andreas Krebbel  <krebbel1@de.ibm.com>\n \n \t* config/s390/s390.c (s390_decompose_address): Allow SImode for"}, {"sha": "ba5bb2977d415026372bd26e742f2c4c024b01d5", "filename": "gcc/common.opt", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e713adf6454bc88303e4708378948ac831b14b10/gcc%2Fcommon.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e713adf6454bc88303e4708378948ac831b14b10/gcc%2Fcommon.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcommon.opt?ref=e713adf6454bc88303e4708378948ac831b14b10", "patch": "@@ -397,6 +397,10 @@ feliminate-unused-debug-types\n Common Report Var(flag_eliminate_unused_debug_types) Init(1)\n Perform unused type elimination in debug info\n \n+femit-class-debug-always\n+Common Report Var(flag_emit_class_debug_always) Init(1)\n+Do not suppress C++ class debug information.\n+\n fexceptions\n Common Report Var(flag_exceptions)\n Enable exception handling"}, {"sha": "f154edcf6025720ee9208f07f53ffc8c4588f1b9", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e713adf6454bc88303e4708378948ac831b14b10/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e713adf6454bc88303e4708378948ac831b14b10/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=e713adf6454bc88303e4708378948ac831b14b10", "patch": "@@ -1,3 +1,8 @@\n+2006-03-24  Carlos O'Donell  <carlos@codesourcery.com>\n+\n+\t* search.c (maybe_suppress_debug_info): If\n+\tflag_emit_class_debug_always then don't suppress.\n+\n 2006-03-22  Jason Merrill  <jason@redhat.com>\n \n         * name-lookup.c (push_namespace_with_attribs): Only apply hidden"}, {"sha": "66bbb133da0c13d9a62537e851bea6e8b299bab2", "filename": "gcc/cp/search.c", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e713adf6454bc88303e4708378948ac831b14b10/gcc%2Fcp%2Fsearch.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e713adf6454bc88303e4708378948ac831b14b10/gcc%2Fcp%2Fsearch.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fsearch.c?ref=e713adf6454bc88303e4708378948ac831b14b10", "patch": "@@ -2042,6 +2042,10 @@ maybe_suppress_debug_info (tree t)\n   /* We might have set this earlier in cp_finish_decl.  */\n   TYPE_DECL_SUPPRESS_DEBUG (TYPE_MAIN_DECL (t)) = 0;\n \n+  /* Always emit the information for each class every time. */\n+  if (flag_emit_class_debug_always)\n+    return;\n+\n   /* If we already know how we're handling this class, handle debug info\n      the same way.  */\n   if (CLASSTYPE_INTERFACE_KNOWN (t))"}, {"sha": "97885ef7503394adcd8547b1612f6530de8a0cf0", "filename": "gcc/doc/invoke.texi", "status": "modified", "additions": 10, "deletions": 1, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e713adf6454bc88303e4708378948ac831b14b10/gcc%2Fdoc%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e713adf6454bc88303e4708378948ac831b14b10/gcc%2Fdoc%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finvoke.texi?ref=e713adf6454bc88303e4708378948ac831b14b10", "patch": "@@ -287,7 +287,8 @@ Objective-C and Objective-C++ Dialects}.\n -ftree-vectorizer-verbose=@var{n} @gol\n -fdump-tree-storeccp@r{[}-@var{n}@r{]} @gol\n -feliminate-dwarf2-dups -feliminate-unused-debug-types @gol\n--feliminate-unused-debug-symbols -fmem-report -fprofile-arcs @gol\n+-feliminate-unused-debug-symbols -femit-class-debug-always @gol\n+-fmem-report -fprofile-arcs @gol\n -frandom-seed=@var{string} -fsched-verbose=@var{n} @gol\n -ftest-coverage  -ftime-report -fvar-tracking @gol\n -g  -g@var{level}  -gcoff -gdwarf-2 @gol\n@@ -3522,6 +3523,14 @@ On System V Release 4 systems this option requires the GNU assembler.\n Produce debugging information in stabs format (if that is supported),\n for only symbols that are actually used.\n \n+@item -femit-class-debug-always\n+Instead of emitting debugging information for a C++ class in only one\n+object file, emit it in all object files using the class.  This option\n+should be used only with debuggers that are unable to handle the way GCC\n+normally emits debugging information for classes because using this\n+option will increase the size of debugging information by as much as a\n+factor of two.\n+\n @item -gstabs+\n @opindex gstabs+\n Produce debugging information in stabs format (if that is supported),"}]}