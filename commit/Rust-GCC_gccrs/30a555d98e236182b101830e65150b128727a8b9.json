{"sha": "30a555d98e236182b101830e65150b128727a8b9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzBhNTU1ZDk4ZTIzNjE4MmIxMDE4MzBlNjUxNTBiMTI4NzI3YThiOQ==", "commit": {"author": {"name": "David Edelsohn", "email": "dje@gcc.gnu.org", "date": "2004-08-04T23:38:34Z"}, "committer": {"name": "David Edelsohn", "email": "dje@gcc.gnu.org", "date": "2004-08-04T23:38:34Z"}, "message": "rs6000.c (rs6000_rtx_costs): LABEL_REFs are zero cost.\n\n        * config/rs6000/rs6000.c (rs6000_rtx_costs): LABEL_REFs are zero\n        cost.\n\nFrom-SVN: r85582", "tree": {"sha": "6954e4cc0e599ac52ef1ec3539f9c0260ef34a4c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6954e4cc0e599ac52ef1ec3539f9c0260ef34a4c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/30a555d98e236182b101830e65150b128727a8b9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/30a555d98e236182b101830e65150b128727a8b9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/30a555d98e236182b101830e65150b128727a8b9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/30a555d98e236182b101830e65150b128727a8b9/comments", "author": null, "committer": null, "parents": [{"sha": "f1ff6bb8a9efa8e6b94d6a2f7b12a20ff0d65537", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f1ff6bb8a9efa8e6b94d6a2f7b12a20ff0d65537", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f1ff6bb8a9efa8e6b94d6a2f7b12a20ff0d65537"}], "stats": {"total": 15, "additions": 11, "deletions": 4}, "files": [{"sha": "e480dd1e095fb6c246bab9307545adba15970cd2", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/30a555d98e236182b101830e65150b128727a8b9/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/30a555d98e236182b101830e65150b128727a8b9/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=30a555d98e236182b101830e65150b128727a8b9", "patch": "@@ -1,3 +1,8 @@\n+2004-08-04  David Edelsohn  <edelsohn@gnu.org>\n+\n+\t* config/rs6000/rs6000.c (rs6000_rtx_costs): LABEL_REFs are zero\n+\tcost.\n+\n 2004-08-04  Jan Hubicka  <jh@suse.cz>\n \n \t* basic-block.h (profile_staus): New global variable.\n@@ -206,7 +211,7 @@\n \t* config/i386/xmmintrin.h: Include <mm_malloc.h>.\n \n 2004-08-03  H.J. Lu  <hongjiu.lu@intel.com>\n-\t    Tanguy Fautr\u00c3  <tfautre@pandora.be>\n+\t    Tanguy Fautr\ufffd  <tfautre@pandora.be>\n \n \t* config/i386/pmm_malloc.h: New file.\n "}, {"sha": "035c02599c78af56ba4ca92edf9aaa88cb35044e", "filename": "gcc/config/rs6000/rs6000.c", "status": "modified", "additions": 5, "deletions": 3, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/30a555d98e236182b101830e65150b128727a8b9/gcc%2Fconfig%2Frs6000%2Frs6000.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/30a555d98e236182b101830e65150b128727a8b9/gcc%2Fconfig%2Frs6000%2Frs6000.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.c?ref=30a555d98e236182b101830e65150b128727a8b9", "patch": "@@ -16520,8 +16520,7 @@ rs6000_rtx_costs (rtx x, int code, int outer_code ATTRIBUTE_UNUSED,\n \n   switch (code)\n     {\n-      /* On the RS/6000, if it is valid in the insn, it is free.\n-\t So this always returns 0.  */\n+      /* On the RS/6000, if it is valid in the insn, it is free.  */\n     case CONST_INT:\n       if (((outer_code == SET\n \t    || outer_code == PLUS\n@@ -16591,7 +16590,6 @@ rs6000_rtx_costs (rtx x, int code, int outer_code ATTRIBUTE_UNUSED,\n \n     case CONST:\n     case HIGH:\n-    case LABEL_REF:\n     case SYMBOL_REF:\n     case MEM:\n       /* When optimizing for size, MEM should be slightly more expensive\n@@ -16600,6 +16598,10 @@ rs6000_rtx_costs (rtx x, int code, int outer_code ATTRIBUTE_UNUSED,\n       *total = optimize_size ? COSTS_N_INSNS (1) + 1 : COSTS_N_INSNS (2);\n       return true;\n \n+    case LABEL_REF:\n+      *total = 0;\n+      return true;\n+\n     case PLUS:\n       if (mode == DFmode)\n \t{"}]}