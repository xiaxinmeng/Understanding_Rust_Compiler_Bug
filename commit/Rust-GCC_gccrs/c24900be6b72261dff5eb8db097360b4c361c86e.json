{"sha": "c24900be6b72261dff5eb8db097360b4c361c86e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzI0OTAwYmU2YjcyMjYxZGZmNWViOGRiMDk3MzYwYjRjMzYxYzg2ZQ==", "commit": {"author": {"name": "Mikael Pettersson", "email": "mikpelinux@gmail.com", "date": "2017-01-06T21:21:02Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "2017-01-06T21:21:02Z"}, "message": "re PR target/57583 (large switches with jump tables are horribly broken on m68k)\n\n2017-01-06  Mikael Pettersson  <mikpelinux@gmail.com>\n\n\tPR target/57583\n\t* config/m68k/m68k.opt (LONG_JUMP_TABLE_OFFSETS): New option.\n\t* config/m68k/linux.h (ASM_RETURN_CASE_JUMP): Handle\n\tTARGET_LONG_JUMP_TABLE_OFFSETS.\n\t* config/m68k/m68kelf.h (ASM_RETURN_CASE_JUMP): Likewise.\n\t* config/m68k/netbsd-elf.h (ASM_RETURN_CASE_JUMP): Likewise.\n\t* config/m68k/m68k.h (CASE_VECTOR_MODE): Likewise.\n\t(ASM_OUTPUT_ADDR_DIFF_ELF): Likewise.\n\t* config/m68k/m68k.md (tablejump expander): Likewise.\n\t(*tablejump_pcrel_hi): Renamed from unnamed insn, reject\n\tTARGET_LONG_JUMP_TABLE_OFFSETS.\n\t(*tablejump_pcrel_si): New insn, handle TARGET_LONG_JUMP_TABLE_OFFSETS.\n\t* doc/invoke.texi (M68K options): Add -mlong-jump-table-offsets.\n\nFrom-SVN: r244184", "tree": {"sha": "12f0b63e0a1fa7277e22bbffda4163f666cabd23", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/12f0b63e0a1fa7277e22bbffda4163f666cabd23"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c24900be6b72261dff5eb8db097360b4c361c86e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c24900be6b72261dff5eb8db097360b4c361c86e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c24900be6b72261dff5eb8db097360b4c361c86e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c24900be6b72261dff5eb8db097360b4c361c86e/comments", "author": {"login": "mikpe", "id": 7581288, "node_id": "MDQ6VXNlcjc1ODEyODg=", "avatar_url": "https://avatars.githubusercontent.com/u/7581288?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mikpe", "html_url": "https://github.com/mikpe", "followers_url": "https://api.github.com/users/mikpe/followers", "following_url": "https://api.github.com/users/mikpe/following{/other_user}", "gists_url": "https://api.github.com/users/mikpe/gists{/gist_id}", "starred_url": "https://api.github.com/users/mikpe/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mikpe/subscriptions", "organizations_url": "https://api.github.com/users/mikpe/orgs", "repos_url": "https://api.github.com/users/mikpe/repos", "events_url": "https://api.github.com/users/mikpe/events{/privacy}", "received_events_url": "https://api.github.com/users/mikpe/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "b69195a0f48add25066ee99ef00597715d3c1fe7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b69195a0f48add25066ee99ef00597715d3c1fe7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b69195a0f48add25066ee99ef00597715d3c1fe7"}], "stats": {"total": 69, "additions": 63, "deletions": 6}, "files": [{"sha": "4e0f040a65697ceca4606b5dd876f7e103794d25", "filename": "gcc/ChangeLog", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c24900be6b72261dff5eb8db097360b4c361c86e/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c24900be6b72261dff5eb8db097360b4c361c86e/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=c24900be6b72261dff5eb8db097360b4c361c86e", "patch": "@@ -1,3 +1,19 @@\n+2017-01-06  Mikael Pettersson  <mikpelinux@gmail.com>\n+\n+\tPR target/57583\n+\t* config/m68k/m68k.opt (LONG_JUMP_TABLE_OFFSETS): New option.\n+\t* config/m68k/linux.h (ASM_RETURN_CASE_JUMP): Handle\n+\tTARGET_LONG_JUMP_TABLE_OFFSETS.\n+\t* config/m68k/m68kelf.h (ASM_RETURN_CASE_JUMP): Likewise.\n+\t* config/m68k/netbsd-elf.h (ASM_RETURN_CASE_JUMP): Likewise.\n+\t* config/m68k/m68k.h (CASE_VECTOR_MODE): Likewise.\n+\t(ASM_OUTPUT_ADDR_DIFF_ELF): Likewise.\n+\t* config/m68k/m68k.md (tablejump expander): Likewise.\n+\t(*tablejump_pcrel_hi): Renamed from unnamed insn, reject\n+\tTARGET_LONG_JUMP_TABLE_OFFSETS.\n+\t(*tablejump_pcrel_si): New insn, handle TARGET_LONG_JUMP_TABLE_OFFSETS.\n+\t* doc/invoke.texi (M68K options): Add -mlong-jump-table-offsets.\n+\n 2017-01-06  Edgar E. Iglesias <edgar.iglesias@xilinx.com>\n \t    David Holsgrove <david.holsgrove@xilinx.com>\n "}, {"sha": "c6e005604d485df3315026a2b143bf30f6c705c3", "filename": "gcc/config/m68k/linux.h", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c24900be6b72261dff5eb8db097360b4c361c86e/gcc%2Fconfig%2Fm68k%2Flinux.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c24900be6b72261dff5eb8db097360b4c361c86e/gcc%2Fconfig%2Fm68k%2Flinux.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm68k%2Flinux.h?ref=c24900be6b72261dff5eb8db097360b4c361c86e", "patch": "@@ -98,9 +98,13 @@ along with GCC; see the file COPYING3.  If not see\n       {\t\t\t\t\t\t\t\\\n \tif (ADDRESS_REG_P (operands[0]))\t\t\\\n \t  return \"jmp %%pc@(2,%0:l)\";\t\t\t\\\n+\telse if (TARGET_LONG_JUMP_TABLE_OFFSETS)\t\\\n+\t  return \"jmp %%pc@(2,%0:l)\";\t\t\t\\\n \telse\t\t\t\t\t\t\\\n \t  return \"ext%.l %0\\n\\tjmp %%pc@(2,%0:l)\";\t\\\n       }\t\t\t\t\t\t\t\\\n+    else if (TARGET_LONG_JUMP_TABLE_OFFSETS)\t\t\\\n+      return \"jmp %%pc@(2,%0:l)\";\t\t\t\\\n     else\t\t\t\t\t\t\\\n       return \"jmp %%pc@(2,%0:w)\";\t\t\t\\\n   } while (0)"}, {"sha": "ba7feb07cbddf870f3ef1d1fe98c8dcd18770fa3", "filename": "gcc/config/m68k/m68k.h", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c24900be6b72261dff5eb8db097360b4c361c86e/gcc%2Fconfig%2Fm68k%2Fm68k.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c24900be6b72261dff5eb8db097360b4c361c86e/gcc%2Fconfig%2Fm68k%2Fm68k.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm68k%2Fm68k.h?ref=c24900be6b72261dff5eb8db097360b4c361c86e", "patch": "@@ -675,7 +675,7 @@ __transfer_from_trampoline ()\t\t\t\t\t\\\n \f\n /* This address is OK as it stands.  */\n #define PIC_CASE_VECTOR_ADDRESS(index) index\n-#define CASE_VECTOR_MODE HImode\n+#define CASE_VECTOR_MODE (TARGET_LONG_JUMP_TABLE_OFFSETS ? SImode : HImode)\n #define CASE_VECTOR_PC_RELATIVE 1\n \n #define DEFAULT_SIGNED_CHAR 1\n@@ -857,7 +857,11 @@ do { if (cc_prev_status.flags & CC_IN_68881)\t\t\t\\\n   asm_fprintf (FILE, \"\\t.long %LL%d\\n\", VALUE)\n \n #define ASM_OUTPUT_ADDR_DIFF_ELT(FILE, BODY, VALUE, REL)  \\\n-  asm_fprintf (FILE, \"\\t.word %LL%d-%LL%d\\n\", VALUE, REL)\n+  asm_fprintf (FILE,\t\t\t\t\t\t\\\n+\t       TARGET_LONG_JUMP_TABLE_OFFSETS\t\t\t\\\n+\t       ? \"\\t.long %LL%d-%LL%d\\n\"\t\t\t\\\n+\t       : \"\\t.word %LL%d-%LL%d\\n\",\t\t\t\\\n+\t       VALUE, REL)\n \n /* We don't have a way to align to more than a two-byte boundary, so do the\n    best we can and don't complain.  */"}, {"sha": "5bf6c92d3d55074dc0bfde3c2e014b9b9839f896", "filename": "gcc/config/m68k/m68k.md", "status": "modified", "additions": 19, "deletions": 3, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c24900be6b72261dff5eb8db097360b4c361c86e/gcc%2Fconfig%2Fm68k%2Fm68k.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c24900be6b72261dff5eb8db097360b4c361c86e/gcc%2Fconfig%2Fm68k%2Fm68k.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm68k%2Fm68k.md?ref=c24900be6b72261dff5eb8db097360b4c361c86e", "patch": "@@ -6695,7 +6695,9 @@\n {\n #if CASE_VECTOR_PC_RELATIVE\n     operands[0] = gen_rtx_PLUS (SImode, pc_rtx,\n-\t\t\t\tgen_rtx_SIGN_EXTEND (SImode, operands[0]));\n+\t\t\t\tTARGET_LONG_JUMP_TABLE_OFFSETS\n+\t\t\t\t? operands[0]\n+\t\t\t\t: gen_rtx_SIGN_EXTEND (SImode, operands[0]));\n #endif\n })\n \n@@ -6710,12 +6712,26 @@\n   [(set_attr \"type\" \"jmp\")])\n \n ;; Jump to variable address from dispatch table of relative addresses.\n-(define_insn \"\"\n+(define_insn \"*tablejump_pcrel_si\"\n+  [(set (pc)\n+\t(plus:SI (pc)\n+\t\t (match_operand:SI 0 \"register_operand\" \"r\")))\n+   (use (label_ref (match_operand 1 \"\" \"\")))]\n+  \"TARGET_LONG_JUMP_TABLE_OFFSETS\"\n+{\n+#ifdef ASM_RETURN_CASE_JUMP\n+  ASM_RETURN_CASE_JUMP;\n+#else\n+  return MOTOROLA ? \"jmp (2,pc,%0.l)\" : \"jmp pc@(2,%0:l)\";\n+#endif\n+})\n+\n+(define_insn \"*tablejump_pcrel_hi\"\n   [(set (pc)\n \t(plus:SI (pc)\n \t\t (sign_extend:SI (match_operand:HI 0 \"register_operand\" \"r\"))))\n    (use (label_ref (match_operand 1 \"\" \"\")))]\n-  \"\"\n+  \"!TARGET_LONG_JUMP_TABLE_OFFSETS\"\n {\n #ifdef ASM_RETURN_CASE_JUMP\n   ASM_RETURN_CASE_JUMP;"}, {"sha": "b9835f5e42fdb5deb20d5ec3015b996828c35c83", "filename": "gcc/config/m68k/m68k.opt", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c24900be6b72261dff5eb8db097360b4c361c86e/gcc%2Fconfig%2Fm68k%2Fm68k.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c24900be6b72261dff5eb8db097360b4c361c86e/gcc%2Fconfig%2Fm68k%2Fm68k.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm68k%2Fm68k.opt?ref=c24900be6b72261dff5eb8db097360b4c361c86e", "patch": "@@ -142,6 +142,10 @@ mid-shared-library\n Target Report Mask(ID_SHARED_LIBRARY)\n Enable ID based shared library.\n \n+mlong-jump-table-offsets\n+Target Report RejectNegative Mask(LONG_JUMP_TABLE_OFFSETS)\n+Use 32-bit offsets in jump tables rather than 16-bit offsets.\n+\n mnobitfield\n Target RejectNegative InverseMask(BITFIELD)\n Do not use the bit-field instructions."}, {"sha": "fb1a0a4d917f39879f6907c38258483826192db7", "filename": "gcc/config/m68k/m68kelf.h", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c24900be6b72261dff5eb8db097360b4c361c86e/gcc%2Fconfig%2Fm68k%2Fm68kelf.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c24900be6b72261dff5eb8db097360b4c361c86e/gcc%2Fconfig%2Fm68k%2Fm68kelf.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm68k%2Fm68kelf.h?ref=c24900be6b72261dff5eb8db097360b4c361c86e", "patch": "@@ -58,9 +58,13 @@ along with GCC; see the file COPYING3.  If not see\n       {\t\t\t\t\t\t\t\\\n \tif (ADDRESS_REG_P (operands[0]))\t\t\\\n \t  return \"jmp %%pc@(2,%0:l)\";\t\t\t\\\n+\telse if (TARGET_LONG_JUMP_TABLE_OFFSETS)\t\\\n+\t  return \"jmp %%pc@(2,%0:l)\";\t\t\t\\\n \telse\t\t\t\t\t\t\\\n \t  return \"ext%.l %0\\n\\tjmp %%pc@(2,%0:l)\";\t\\\n       }\t\t\t\t\t\t\t\\\n+    else if (TARGET_LONG_JUMP_TABLE_OFFSETS)\t\t\\\n+      return \"jmp %%pc@(2,%0:l)\";\t\t\t\\\n     else\t\t\t\t\t\t\\\n       return \"jmp %%pc@(2,%0:w)\";\t\t\t\\\n   } while (0)"}, {"sha": "5e2be21614058d0ad723030e6f59cb42516ac03c", "filename": "gcc/config/m68k/netbsd-elf.h", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c24900be6b72261dff5eb8db097360b4c361c86e/gcc%2Fconfig%2Fm68k%2Fnetbsd-elf.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c24900be6b72261dff5eb8db097360b4c361c86e/gcc%2Fconfig%2Fm68k%2Fnetbsd-elf.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm68k%2Fnetbsd-elf.h?ref=c24900be6b72261dff5eb8db097360b4c361c86e", "patch": "@@ -136,9 +136,13 @@ while (0)\n       {\t\t\t\t\t\t\t\\\n \tif (ADDRESS_REG_P (operands[0]))\t\t\\\n \t  return \"jmp %%pc@(2,%0:l)\";\t\t\t\\\n+\telse if (TARGET_LONG_JUMP_TABLE_OFFSETS)\t\\\n+\t  return \"jmp %%pc@(2,%0:l)\";\t\t\t\\\n \telse\t\t\t\t\t\t\\\n \t  return \"ext%.l %0\\n\\tjmp %%pc@(2,%0:l)\";\t\\\n       }\t\t\t\t\t\t\t\\\n+    else if (TARGET_LONG_JUMP_TABLE_OFFSETS)\t\t\\\n+      return \"jmp %%pc@(2,%0:l)\";\t\t\t\\\n     else\t\t\t\t\t\t\\\n       return \"jmp %%pc@(2,%0:w)\";\t\t\t\\\n   } while (0)"}, {"sha": "83a0222ce49a138b01d1763eb3dbac89fd9692a5", "filename": "gcc/doc/invoke.texi", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c24900be6b72261dff5eb8db097360b4c361c86e/gcc%2Fdoc%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c24900be6b72261dff5eb8db097360b4c361c86e/gcc%2Fdoc%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finvoke.texi?ref=c24900be6b72261dff5eb8db097360b4c361c86e", "patch": "@@ -837,7 +837,7 @@ Objective-C and Objective-C++ Dialects}.\n -mno-short  -mhard-float  -m68881  -msoft-float  -mpcrel @gol\n -malign-int  -mstrict-align  -msep-data  -mno-sep-data @gol\n -mshared-library-id=n  -mid-shared-library  -mno-id-shared-library @gol\n--mxgot -mno-xgot}\n+-mxgot -mno-xgot -mlong-jump-table-offsets}\n \n @emph{MCore Options}\n @gccoptlist{-mhardlit  -mno-hardlit  -mdiv  -mno-div  -mrelax-immediates @gol\n@@ -18476,6 +18476,11 @@ object file that accesses more than 8192 GOT entries.  Very few do.\n These options have no effect unless GCC is generating\n position-independent code.\n \n+@item -mlong-jump-table-offsets\n+@opindex mlong-jump-table-offsets\n+Use 32-bit offsets in @code{switch} tables.  The default is to use\n+16-bit offsets.\n+\n @end table\n \n @node MCore Options"}]}