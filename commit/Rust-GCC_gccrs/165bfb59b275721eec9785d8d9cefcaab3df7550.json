{"sha": "165bfb59b275721eec9785d8d9cefcaab3df7550", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTY1YmZiNTliMjc1NzIxZWVjOTc4NWQ4ZDljZWZjYWFiM2RmNzU1MA==", "commit": {"author": {"name": "Bruce Korb", "email": "korbb@gcc.gnu.org", "date": "2002-12-16T19:02:09Z"}, "committer": {"name": "Bruce Korb", "email": "korbb@gcc.gnu.org", "date": "2002-12-16T19:02:09Z"}, "message": "oops.\n\nFrom-SVN: r60178", "tree": {"sha": "019331cc54cc0a3e6a74cd8e8c90995cb32a8ac7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/019331cc54cc0a3e6a74cd8e8c90995cb32a8ac7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/165bfb59b275721eec9785d8d9cefcaab3df7550", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/165bfb59b275721eec9785d8d9cefcaab3df7550", "html_url": "https://github.com/Rust-GCC/gccrs/commit/165bfb59b275721eec9785d8d9cefcaab3df7550", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/165bfb59b275721eec9785d8d9cefcaab3df7550/comments", "author": null, "committer": null, "parents": [{"sha": "6aa43d99a33e70adb87432dc5ded2476e3bc9f28", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6aa43d99a33e70adb87432dc5ded2476e3bc9f28", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6aa43d99a33e70adb87432dc5ded2476e3bc9f28"}], "stats": {"total": 1010, "additions": 1002, "deletions": 8}, "files": [{"sha": "1340b56240330ffea577af6f5b9505cbe8f3981e", "filename": "gcc/fixinc/fixincl.x", "status": "modified", "additions": 1002, "deletions": 8, "changes": 1010, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/165bfb59b275721eec9785d8d9cefcaab3df7550/gcc%2Ffixinc%2Ffixincl.x", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/165bfb59b275721eec9785d8d9cefcaab3df7550/gcc%2Ffixinc%2Ffixincl.x", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffixinc%2Ffixincl.x?ref=165bfb59b275721eec9785d8d9cefcaab3df7550", "patch": "@@ -5,7 +5,7 @@\n  * files which are fixed to work correctly with ANSI C and placed in a\n  * directory that GNU C will search.\n  *\n- * This file contains 125 fixup descriptions.\n+ * This file contains 148 fixup descriptions.\n  *\n  * See README for more information.\n  *\n@@ -30,6 +30,77 @@\n  *             Boston,  MA  02111-1307, USA.\n  */\n \n+/* * * * * * * * * * * * * * * * * * * * * * * * * *\n+ *\n+ *  Description of Aab_Dgux_Int_Varargs fix\n+ */\n+tSCC zAab_Dgux_Int_VarargsName[] =\n+     \"AAB_dgux_int_varargs\";\n+\n+/*\n+ *  File name selection pattern\n+ */\n+tSCC zAab_Dgux_Int_VarargsList[] =\n+  \"|_int_varargs.h|\";\n+/*\n+ *  Machine/OS name selection pattern\n+ */\n+#define apzAab_Dgux_Int_VarargsMachs (const char**)NULL\n+#define AAB_DGUX_INT_VARARGS_TEST_CT  0\n+#define aAab_Dgux_Int_VarargsTests   (tTestDesc*)NULL\n+\n+/*\n+ *  Fix Command Arguments for Aab_Dgux_Int_Varargs\n+ */\n+static const char* apzAab_Dgux_Int_VarargsPatch[] = {\n+\"#ifndef __INT_VARARGS_H\\n\\\n+#define __INT_VARARGS_H\\n\\n\\\n+/********************************************************/\\n\\\n+/*  Define the common stuff for varargs/stdarg/stdio.   */\\n\\\n+/********************************************************/\\n\\n\\\n+/*\\n\\\n+** This file is a DG internal header.  Never include this\\n\\\n+** file directly.\\n\\\n+*/\\n\\n\\\n+#ifndef ___int_features_h\\n\\\n+#include <sys/_int_features.h>\\n\\\n+#endif\\n\\n\\\n+#if !(defined(_VA_LIST) || defined(_VA_LIST_))\\n\\\n+#define _VA_LIST\\n\\\n+#define _VA_LIST_\\n\\n\\\n+#ifdef __LINT__\\n\\n\\\n+#ifdef __STDC__\\n\\\n+typedef void * va_list;\\n\\\n+#else\\n\\\n+typedef char * va_list;\\n\\\n+#endif\\n\\n\\\n+#else\\n\\\n+#if _M88K_ANY\\n\\n\\\n+#if defined(__DCC__)\\n\\n\\\n+typedef struct {\\n\\\n+      int     next_arg;\\n\\\n+      int     *mem_ptr;\\n\\\n+      int     *reg_ptr;\\n\\\n+} va_list;\\n\\n\\\n+#else  /* ! defined(__DCC__) */\\n\\n\\\n+typedef struct {\\n\\\n+      int  __va_arg;       /* argument number */\\n\\\n+      int *__va_stk;       /* start of args passed on stack */\\n\\\n+      int *__va_reg;       /* start of args passed in regs */\\n\\\n+} va_list;\\n\\n\\\n+#endif  /* ! defined(__DCC__) */\\n\\n\\\n+#elif _IX86_ANY\\n\\n\\\n+#if defined(__GNUC__) || defined(__STDC__)\\n\\\n+typedef void * va_list;\\n\\\n+#else\\n\\\n+typedef char * va_list;\\n\\\n+#endif\\n\\n\\\n+#endif  /*  _IX86_ANY */\\n\\n\\\n+#endif /* __LINT__ */\\n\\\n+#endif /*  !(defined(_VA_LIST) || defined(_VA_LIST_)) */\\n\\\n+#endif /*  #ifndef __INT_VARARGS_H  */\",\n+    (char*)NULL };\n+\n /* * * * * * * * * * * * * * * * * * * * * * * * * *\n  *\n  *  Description of Aab_Fd_Zero_Asm_Posix_Types_H fix\n@@ -253,7 +324,7 @@ extern char *memcpy();\\n\\\n extern char *memset();\\n\\\n #endif /* __STDC__ */\\n\\n\\\n extern int memcmp();\\n\\n\\\n-#endif /* __memory_h__ */\",\n+#endif /* __memory_h__ */\\n\",\n     (char*)NULL };\n \n /* * * * * * * * * * * * * * * * * * * * * * * * * *\n@@ -323,8 +394,8 @@ htonl (unsigned long __arg)\\n\\\n {\\n\\\n   register unsigned long __result;\\n\\n\\\n   __asm__ (\\\"xchg%B0 %b0,%h0\\n\\\n-ror%L0 $16,%0\\n\\\n-xchg%B0 %b0,%h0\\\" : \\\"=q\\\" (__result) : \\\"0\\\" (__arg));\\n\\\n+\\tror%L0 $16,%0\\n\\\n+\\txchg%B0 %b0,%h0\\\" : \\\"=q\\\" (__result) : \\\"0\\\" (__arg));\\n\\\n   return __result;\\n\\\n }\\n\\n\\\n /* Convert a host short to a network short.  */\\n\\n\\\n@@ -335,7 +406,9 @@ htons (unsigned int __arg)\\n\\\n   __asm__ (\\\"xchg%B0 %b0,%h0\\\" : \\\"=q\\\" (__result) : \\\"0\\\" (__arg));\\n\\\n   return __result;\\n\\\n }\\n\\n\\\n-#elif (defined (__ns32k__) || defined (__vax__) || defined (__arm__))\\n\\n\\\n+#elif ((defined (__i860__) && !defined (__i860_big_endian__))\\t\\\\\\n\\\n+       || defined (__ns32k__) || defined (__vax__)\\t\\t\\\\\\n\\\n+       || defined (__spur__) || defined (__arm__))\\n\\n\\\n #ifndef __BYTE_ORDER__\\n\\\n #define __BYTE_ORDER__ __LITTLE_ENDIAN__\\n\\\n #endif\\n\\n\\\n@@ -390,7 +463,134 @@ ntohs (unsigned int __arg)\\n\\\n {\\n\\\n   return htons (__arg);\\n\\\n }\\n\\\n-#endif\",\n+#endif\\n\",\n+    (char*)NULL };\n+\n+/* * * * * * * * * * * * * * * * * * * * * * * * * *\n+ *\n+ *  Description of Aab_Ultrix_Ansi_Compat fix\n+ */\n+tSCC zAab_Ultrix_Ansi_CompatName[] =\n+     \"AAB_ultrix_ansi_compat\";\n+\n+/*\n+ *  File name selection pattern\n+ */\n+tSCC zAab_Ultrix_Ansi_CompatList[] =\n+  \"|ansi_compat.h|\";\n+/*\n+ *  Machine/OS name selection pattern\n+ */\n+#define apzAab_Ultrix_Ansi_CompatMachs (const char**)NULL\n+\n+/*\n+ *  content selection pattern - do fix if pattern found\n+ */\n+tSCC zAab_Ultrix_Ansi_CompatSelect0[] =\n+       \"ULTRIX\";\n+\n+#define    AAB_ULTRIX_ANSI_COMPAT_TEST_CT  1\n+static tTestDesc aAab_Ultrix_Ansi_CompatTests[] = {\n+  { TT_EGREP,    zAab_Ultrix_Ansi_CompatSelect0, (regex_t*)NULL }, };\n+\n+/*\n+ *  Fix Command Arguments for Aab_Ultrix_Ansi_Compat\n+ */\n+static const char* apzAab_Ultrix_Ansi_CompatPatch[] = {\n+\"/* This file intentionally left blank.  */\\n\",\n+    (char*)NULL };\n+\n+/* * * * * * * * * * * * * * * * * * * * * * * * * *\n+ *\n+ *  Description of Aab_Ultrix_Limits fix\n+ */\n+tSCC zAab_Ultrix_LimitsName[] =\n+     \"AAB_ultrix_limits\";\n+\n+/*\n+ *  File name selection pattern\n+ */\n+tSCC zAab_Ultrix_LimitsList[] =\n+  \"|limits.h|\";\n+/*\n+ *  Machine/OS name selection pattern\n+ */\n+tSCC* apzAab_Ultrix_LimitsMachs[] = {\n+        \"*-*-ultrix4.3\",\n+        (const char*)NULL };\n+#define AAB_ULTRIX_LIMITS_TEST_CT  0\n+#define aAab_Ultrix_LimitsTests   (tTestDesc*)NULL\n+\n+/*\n+ *  Fix Command Arguments for Aab_Ultrix_Limits\n+ */\n+static const char* apzAab_Ultrix_LimitsPatch[] = {\n+\"#ifndef _LIMITS_INCLUDED\\n\\\n+#define _LIMITS_INCLUDED\\n\\\n+#include <sys/limits.h>\\n\\\n+#endif /* _LIMITS_INCLUDED */\\n\",\n+    (char*)NULL };\n+\n+/* * * * * * * * * * * * * * * * * * * * * * * * * *\n+ *\n+ *  Description of Aab_Ultrix_Memory fix\n+ */\n+tSCC zAab_Ultrix_MemoryName[] =\n+     \"AAB_ultrix_memory\";\n+\n+/*\n+ *  File name selection pattern\n+ */\n+tSCC zAab_Ultrix_MemoryList[] =\n+  \"|memory.h|\";\n+/*\n+ *  Machine/OS name selection pattern\n+ */\n+tSCC* apzAab_Ultrix_MemoryMachs[] = {\n+        \"*-*-ultrix4.3\",\n+        (const char*)NULL };\n+#define AAB_ULTRIX_MEMORY_TEST_CT  0\n+#define aAab_Ultrix_MemoryTests   (tTestDesc*)NULL\n+\n+/*\n+ *  Fix Command Arguments for Aab_Ultrix_Memory\n+ */\n+static const char* apzAab_Ultrix_MemoryPatch[] = {\n+\"#ifndef _MEMORY_INCLUDED\\n\\\n+#define _MEMORY_INCLUDED\\n\\\n+#include <strings.h>\\n\\\n+#endif /* _MEMORY_INCLUDED */\\n\",\n+    (char*)NULL };\n+\n+/* * * * * * * * * * * * * * * * * * * * * * * * * *\n+ *\n+ *  Description of Aab_Ultrix_String fix\n+ */\n+tSCC zAab_Ultrix_StringName[] =\n+     \"AAB_ultrix_string\";\n+\n+/*\n+ *  File name selection pattern\n+ */\n+tSCC zAab_Ultrix_StringList[] =\n+  \"|string.h|\";\n+/*\n+ *  Machine/OS name selection pattern\n+ */\n+tSCC* apzAab_Ultrix_StringMachs[] = {\n+        \"*-*-ultrix4.3\",\n+        (const char*)NULL };\n+#define AAB_ULTRIX_STRING_TEST_CT  0\n+#define aAab_Ultrix_StringTests   (tTestDesc*)NULL\n+\n+/*\n+ *  Fix Command Arguments for Aab_Ultrix_String\n+ */\n+static const char* apzAab_Ultrix_StringPatch[] = {\n+\"#ifndef _STRING_INCLUDED\\n\\\n+#define _STRING_INCLUDED\\n\\\n+#include <strings.h>\\n\\\n+#endif /* _STRING_INCLUDED */\\n\",\n     (char*)NULL };\n \n /* * * * * * * * * * * * * * * * * * * * * * * * * *\n@@ -714,6 +914,112 @@ static const char* apzAlpha_SbrkPatch[] = {\n     \"void *sbrk(\",\n     (char*)NULL };\n \n+/* * * * * * * * * * * * * * * * * * * * * * * * * *\n+ *\n+ *  Description of Arm_Norcroft_Hint fix\n+ */\n+tSCC zArm_Norcroft_HintName[] =\n+     \"arm_norcroft_hint\";\n+\n+/*\n+ *  File name selection pattern\n+ */\n+tSCC zArm_Norcroft_HintList[] =\n+  \"|X11/Intrinsic.h|\";\n+/*\n+ *  Machine/OS name selection pattern\n+ */\n+#define apzArm_Norcroft_HintMachs (const char**)NULL\n+\n+/*\n+ *  content selection pattern - do fix if pattern found\n+ */\n+tSCC zArm_Norcroft_HintSelect0[] =\n+       \"___type p_type\";\n+\n+#define    ARM_NORCROFT_HINT_TEST_CT  1\n+static tTestDesc aArm_Norcroft_HintTests[] = {\n+  { TT_EGREP,    zArm_Norcroft_HintSelect0, (regex_t*)NULL }, };\n+\n+/*\n+ *  Fix Command Arguments for Arm_Norcroft_Hint\n+ */\n+static const char* apzArm_Norcroft_HintPatch[] = {\n+    \"format\",\n+    \"p_type\",\n+    (char*)NULL };\n+\n+/* * * * * * * * * * * * * * * * * * * * * * * * * *\n+ *\n+ *  Description of Arm_Wchar fix\n+ */\n+tSCC zArm_WcharName[] =\n+     \"arm_wchar\";\n+\n+/*\n+ *  File name selection pattern\n+ */\n+tSCC zArm_WcharList[] =\n+  \"|stdlib.h|\";\n+/*\n+ *  Machine/OS name selection pattern\n+ */\n+#define apzArm_WcharMachs (const char**)NULL\n+\n+/*\n+ *  content selection pattern - do fix if pattern found\n+ */\n+tSCC zArm_WcharSelect0[] =\n+       \"#[ \\t]*define[ \\t]*__wchar_t\";\n+\n+#define    ARM_WCHAR_TEST_CT  1\n+static tTestDesc aArm_WcharTests[] = {\n+  { TT_EGREP,    zArm_WcharSelect0, (regex_t*)NULL }, };\n+\n+/*\n+ *  Fix Command Arguments for Arm_Wchar\n+ */\n+static const char* apzArm_WcharPatch[] = {\n+    \"format\",\n+    \"%1_GCC_WCHAR_T\",\n+    \"(#[ \\t]*(ifndef|define)[ \\t]+)__wchar_t\",\n+    (char*)NULL };\n+\n+/* * * * * * * * * * * * * * * * * * * * * * * * * *\n+ *\n+ *  Description of Aux_Asm fix\n+ */\n+tSCC zAux_AsmName[] =\n+     \"aux_asm\";\n+\n+/*\n+ *  File name selection pattern\n+ */\n+tSCC zAux_AsmList[] =\n+  \"|sys/param.h|\";\n+/*\n+ *  Machine/OS name selection pattern\n+ */\n+#define apzAux_AsmMachs (const char**)NULL\n+\n+/*\n+ *  content selection pattern - do fix if pattern found\n+ */\n+tSCC zAux_AsmSelect0[] =\n+       \"#ifndef NOINLINE\";\n+\n+#define    AUX_ASM_TEST_CT  1\n+static tTestDesc aAux_AsmTests[] = {\n+  { TT_EGREP,    zAux_AsmSelect0, (regex_t*)NULL }, };\n+\n+/*\n+ *  Fix Command Arguments for Aux_Asm\n+ */\n+static const char* apzAux_AsmPatch[] = {\n+    \"format\",\n+    \"#if !defined(NOINLINE) && !defined(__GNUC__)\",\n+    (char*)NULL };\n+\n /* * * * * * * * * * * * * * * * * * * * * * * * * *\n  *\n  *  Description of Avoid_Bool_Define fix\n@@ -1287,6 +1593,43 @@ static const char* apzEcd_CursorPatch[] = {\n     \"ecd_cursor\",\n     (char*)NULL };\n \n+/* * * * * * * * * * * * * * * * * * * * * * * * * *\n+ *\n+ *  Description of Fix_Header_Breakage fix\n+ */\n+tSCC zFix_Header_BreakageName[] =\n+     \"fix_header_breakage\";\n+\n+/*\n+ *  File name selection pattern\n+ */\n+tSCC zFix_Header_BreakageList[] =\n+  \"|math.h|\";\n+/*\n+ *  Machine/OS name selection pattern\n+ */\n+tSCC* apzFix_Header_BreakageMachs[] = {\n+        \"m88k-motorola-sysv3*\",\n+        (const char*)NULL };\n+\n+/*\n+ *  content selection pattern - do fix if pattern found\n+ */\n+tSCC zFix_Header_BreakageSelect0[] =\n+       \"extern double floor\\\\(\\\\), ceil\\\\(\\\\), fmod\\\\(\\\\), fabs\\\\(\\\\);\";\n+\n+#define    FIX_HEADER_BREAKAGE_TEST_CT  1\n+static tTestDesc aFix_Header_BreakageTests[] = {\n+  { TT_EGREP,    zFix_Header_BreakageSelect0, (regex_t*)NULL }, };\n+\n+/*\n+ *  Fix Command Arguments for Fix_Header_Breakage\n+ */\n+static const char* apzFix_Header_BreakagePatch[] = {\n+    \"format\",\n+    \"extern double floor(), ceil(), fmod(), fabs _PARAMS((double));\",\n+    (char*)NULL };\n+\n /* * * * * * * * * * * * * * * * * * * * * * * * * *\n  *\n  *  Description of Freebsd_Gcc3_Breakage fix\n@@ -2376,6 +2719,128 @@ static const char* apzLynxos_Fcntl_ProtoPatch[] = {\n     \"(fcntl[ \\t]*\\\\(int, int, )int\\\\)\",\n     (char*)NULL };\n \n+/* * * * * * * * * * * * * * * * * * * * * * * * * *\n+ *\n+ *  Description of M88k_Bad_Hypot_Opt fix\n+ */\n+tSCC zM88k_Bad_Hypot_OptName[] =\n+     \"m88k_bad_hypot_opt\";\n+\n+/*\n+ *  File name selection pattern\n+ */\n+tSCC zM88k_Bad_Hypot_OptList[] =\n+  \"|math.h|\";\n+/*\n+ *  Machine/OS name selection pattern\n+ */\n+tSCC* apzM88k_Bad_Hypot_OptMachs[] = {\n+        \"m88k-motorola-sysv3*\",\n+        (const char*)NULL };\n+\n+/*\n+ *  content selection pattern - do fix if pattern found\n+ */\n+tSCC zM88k_Bad_Hypot_OptSelect0[] =\n+       \"^extern double hypot\\\\(\\\\);\\n\";\n+\n+#define    M88K_BAD_HYPOT_OPT_TEST_CT  1\n+static tTestDesc aM88k_Bad_Hypot_OptTests[] = {\n+  { TT_EGREP,    zM88k_Bad_Hypot_OptSelect0, (regex_t*)NULL }, };\n+\n+/*\n+ *  Fix Command Arguments for M88k_Bad_Hypot_Opt\n+ */\n+static const char* apzM88k_Bad_Hypot_OptPatch[] = {\n+    \"format\",\n+    \"%0/* Workaround a stupid Motorola optimization if one\\n\\\n+   of x or y is 0.0 and the other is negative!  */\\n\\\n+#ifdef __STDC__\\n\\\n+static __inline__ double fake_hypot (double x, double y)\\n\\\n+#else\\n\\\n+static __inline__ double fake_hypot (x, y)\\n\\\n+\\tdouble x, y;\\n\\\n+#endif\\n\\\n+{\\n\\\n+\\treturn fabs (hypot (x, y));\\n\\\n+}\\n\\\n+#define hypot\\tfake_hypot\\n\",\n+    (char*)NULL };\n+\n+/* * * * * * * * * * * * * * * * * * * * * * * * * *\n+ *\n+ *  Description of M88k_Bad_S_If fix\n+ */\n+tSCC zM88k_Bad_S_IfName[] =\n+     \"m88k_bad_s_if\";\n+\n+/*\n+ *  File name selection pattern\n+ */\n+tSCC zM88k_Bad_S_IfList[] =\n+  \"|sys/stat.h|\";\n+/*\n+ *  Machine/OS name selection pattern\n+ */\n+tSCC* apzM88k_Bad_S_IfMachs[] = {\n+        \"m88k-*-sysv3*\",\n+        (const char*)NULL };\n+\n+/*\n+ *  content selection pattern - do fix if pattern found\n+ */\n+tSCC zM88k_Bad_S_IfSelect0[] =\n+       \"#define[ \\t]+S_IS[A-Z]+\\\\(m\\\\)[ \\t]+\\\\(m[ \\t]*&\";\n+\n+#define    M88K_BAD_S_IF_TEST_CT  1\n+static tTestDesc aM88k_Bad_S_IfTests[] = {\n+  { TT_EGREP,    zM88k_Bad_S_IfSelect0, (regex_t*)NULL }, };\n+\n+/*\n+ *  Fix Command Arguments for M88k_Bad_S_If\n+ */\n+static const char* apzM88k_Bad_S_IfPatch[] = {\n+    \"format\",\n+    \"#define %1(m) (((m) & S_IFMT) == %2)\",\n+    \"#define[ \\t]+(S_IS[A-Z]+)\\\\(m\\\\)[ \\t]+\\\\(m[ \\t]*&[ \\t]*(S_IF[A-Z][A-Z][A-Z]+|0[0-9]+)[ \\t]*\\\\)\",\n+    (char*)NULL };\n+\n+/* * * * * * * * * * * * * * * * * * * * * * * * * *\n+ *\n+ *  Description of M88k_Multi_Incl fix\n+ */\n+tSCC zM88k_Multi_InclName[] =\n+     \"m88k_multi_incl\";\n+\n+/*\n+ *  File name selection pattern\n+ */\n+tSCC zM88k_Multi_InclList[] =\n+  \"|time.h|\";\n+/*\n+ *  Machine/OS name selection pattern\n+ */\n+tSCC* apzM88k_Multi_InclMachs[] = {\n+        \"m88k-tektronix-sysv3*\",\n+        (const char*)NULL };\n+\n+/*\n+ *  content bypass pattern - skip fix if pattern found\n+ */\n+tSCC zM88k_Multi_InclBypass0[] =\n+       \"#ifndef\";\n+\n+#define    M88K_MULTI_INCL_TEST_CT  1\n+static tTestDesc aM88k_Multi_InclTests[] = {\n+  { TT_NEGREP,   zM88k_Multi_InclBypass0, (regex_t*)NULL }, };\n+\n+/*\n+ *  Fix Command Arguments for M88k_Multi_Incl\n+ */\n+static const char* apzM88k_Multi_InclPatch[] = {\n+    \"wrap\",\n+    (char*)NULL };\n+\n /* * * * * * * * * * * * * * * * * * * * * * * * * *\n  *\n  *  Description of Machine_Ansi_H_Va_List fix\n@@ -2687,6 +3152,43 @@ static const char* apzNested_Sys_LimitsPatch[] = { \"sed\",\n     \"-e\", \"/OPEN_MAX/s,/\\\\* Max, Max,\",\n     (char*)NULL };\n \n+/* * * * * * * * * * * * * * * * * * * * * * * * * *\n+ *\n+ *  Description of News_Os_Recursion fix\n+ */\n+tSCC zNews_Os_RecursionName[] =\n+     \"news_os_recursion\";\n+\n+/*\n+ *  File name selection pattern\n+ */\n+tSCC zNews_Os_RecursionList[] =\n+  \"|stdlib.h|\";\n+/*\n+ *  Machine/OS name selection pattern\n+ */\n+#define apzNews_Os_RecursionMachs (const char**)NULL\n+\n+/*\n+ *  content selection pattern - do fix if pattern found\n+ */\n+tSCC zNews_Os_RecursionSelect0[] =\n+       \"[ \\t]*#include <stdlib\\\\.h>.*\";\n+\n+#define    NEWS_OS_RECURSION_TEST_CT  1\n+static tTestDesc aNews_Os_RecursionTests[] = {\n+  { TT_EGREP,    zNews_Os_RecursionSelect0, (regex_t*)NULL }, };\n+\n+/*\n+ *  Fix Command Arguments for News_Os_Recursion\n+ */\n+static const char* apzNews_Os_RecursionPatch[] = {\n+    \"format\",\n+    \"#ifdef BOGUS_RECURSION\\n\\\n+%0\\n\\\n+#endif\",\n+    (char*)NULL };\n+\n /* * * * * * * * * * * * * * * * * * * * * * * * * *\n  *\n  *  Description of Next_Math_Prefix fix\n@@ -4209,6 +4711,76 @@ static const char* apzTinfo_CplusplusPatch[] = {\n     \" __cplusplus\",\n     (char*)NULL };\n \n+/* * * * * * * * * * * * * * * * * * * * * * * * * *\n+ *\n+ *  Description of Ultrix_Atexit_Param fix\n+ */\n+tSCC zUltrix_Atexit_ParamName[] =\n+     \"ultrix_atexit_param\";\n+\n+/*\n+ *  File name selection pattern\n+ */\n+tSCC zUltrix_Atexit_ParamList[] =\n+  \"|stdlib.h|\";\n+/*\n+ *  Machine/OS name selection pattern\n+ */\n+#define apzUltrix_Atexit_ParamMachs (const char**)NULL\n+\n+/*\n+ *  content selection pattern - do fix if pattern found\n+ */\n+tSCC zUltrix_Atexit_ParamSelect0[] =\n+       \"atexit\\\\(.*\\\\(\\\\)\";\n+\n+#define    ULTRIX_ATEXIT_PARAM_TEST_CT  1\n+static tTestDesc aUltrix_Atexit_ParamTests[] = {\n+  { TT_EGREP,    zUltrix_Atexit_ParamSelect0, (regex_t*)NULL }, };\n+\n+/*\n+ *  Fix Command Arguments for Ultrix_Atexit_Param\n+ */\n+static const char* apzUltrix_Atexit_ParamPatch[] = {\n+    \"format\",\n+    \"atexit( void (*__func)( void )\",\n+    (char*)NULL };\n+\n+/* * * * * * * * * * * * * * * * * * * * * * * * * *\n+ *\n+ *  Description of Ultrix_Atof_Param fix\n+ */\n+tSCC zUltrix_Atof_ParamName[] =\n+     \"ultrix_atof_param\";\n+\n+/*\n+ *  File name selection pattern\n+ */\n+tSCC zUltrix_Atof_ParamList[] =\n+  \"|math.h|\";\n+/*\n+ *  Machine/OS name selection pattern\n+ */\n+#define apzUltrix_Atof_ParamMachs (const char**)NULL\n+\n+/*\n+ *  content selection pattern - do fix if pattern found\n+ */\n+tSCC zUltrix_Atof_ParamSelect0[] =\n+       \"atof\\\\([ \\t]*char\";\n+\n+#define    ULTRIX_ATOF_PARAM_TEST_CT  1\n+static tTestDesc aUltrix_Atof_ParamTests[] = {\n+  { TT_EGREP,    zUltrix_Atof_ParamSelect0, (regex_t*)NULL }, };\n+\n+/*\n+ *  Fix Command Arguments for Ultrix_Atof_Param\n+ */\n+static const char* apzUltrix_Atof_ParamPatch[] = {\n+    \"format\",\n+    \"atof(const char\",\n+    (char*)NULL };\n+\n /* * * * * * * * * * * * * * * * * * * * * * * * * *\n  *\n  *  Description of Ultrix_Const fix\n@@ -4281,6 +4853,290 @@ static const char* apzUltrix_Const2Patch[] = {\n     \"([ \\t*](fopen|sscanf|popen|tempnam))\\\\([ \\t]*char[ \\t]*\\\\*([^,]*),[ \\t]*char[ \\t]*\\\\*[ \\t]*\",\n     (char*)NULL };\n \n+/* * * * * * * * * * * * * * * * * * * * * * * * * *\n+ *\n+ *  Description of Ultrix_Fix_Fixproto fix\n+ */\n+tSCC zUltrix_Fix_FixprotoName[] =\n+     \"ultrix_fix_fixproto\";\n+\n+/*\n+ *  File name selection pattern\n+ */\n+tSCC zUltrix_Fix_FixprotoList[] =\n+  \"|sys/utsname.h|\";\n+/*\n+ *  Machine/OS name selection pattern\n+ */\n+#define apzUltrix_Fix_FixprotoMachs (const char**)NULL\n+\n+/*\n+ *  content selection pattern - do fix if pattern found\n+ */\n+tSCC zUltrix_Fix_FixprotoSelect0[] =\n+       \"ULTRIX\";\n+\n+#define    ULTRIX_FIX_FIXPROTO_TEST_CT  1\n+static tTestDesc aUltrix_Fix_FixprotoTests[] = {\n+  { TT_EGREP,    zUltrix_Fix_FixprotoSelect0, (regex_t*)NULL }, };\n+\n+/*\n+ *  Fix Command Arguments for Ultrix_Fix_Fixproto\n+ */\n+static const char* apzUltrix_Fix_FixprotoPatch[] = {\n+    \"format\",\n+    \"struct utsname;\\n\\\n+%0\",\n+    \"^[ \\t]*extern[ \\t]*int[ \\t]*uname\\\\(\\\\);\",\n+    (char*)NULL };\n+\n+/* * * * * * * * * * * * * * * * * * * * * * * * * *\n+ *\n+ *  Description of Ultrix_Ifdef fix\n+ */\n+tSCC zUltrix_IfdefName[] =\n+     \"ultrix_ifdef\";\n+\n+/*\n+ *  File name selection pattern\n+ */\n+tSCC zUltrix_IfdefList[] =\n+  \"|sys/file.h|\";\n+/*\n+ *  Machine/OS name selection pattern\n+ */\n+#define apzUltrix_IfdefMachs (const char**)NULL\n+\n+/*\n+ *  content selection pattern - do fix if pattern found\n+ */\n+tSCC zUltrix_IfdefSelect0[] =\n+       \"^#ifdef KERNEL[ \\t]+&&\";\n+\n+#define    ULTRIX_IFDEF_TEST_CT  1\n+static tTestDesc aUltrix_IfdefTests[] = {\n+  { TT_EGREP,    zUltrix_IfdefSelect0, (regex_t*)NULL }, };\n+\n+/*\n+ *  Fix Command Arguments for Ultrix_Ifdef\n+ */\n+static const char* apzUltrix_IfdefPatch[] = {\n+    \"format\",\n+    \"#if defined(KERNEL) &&\",\n+    (char*)NULL };\n+\n+/* * * * * * * * * * * * * * * * * * * * * * * * * *\n+ *\n+ *  Description of Ultrix_Math_Ifdef fix\n+ */\n+tSCC zUltrix_Math_IfdefName[] =\n+     \"ultrix_math_ifdef\";\n+\n+/*\n+ *  File name selection pattern\n+ */\n+tSCC zUltrix_Math_IfdefList[] =\n+  \"|sys/limits.h|float.h|math.h|\";\n+/*\n+ *  Machine/OS name selection pattern\n+ */\n+#define apzUltrix_Math_IfdefMachs (const char**)NULL\n+\n+/*\n+ *  content selection pattern - do fix if pattern found\n+ */\n+tSCC zUltrix_Math_IfdefSelect0[] =\n+       \"^(#if.*)\\\\|\\\\|[ \\t]+CC\\\\$[a-z]+\";\n+\n+#define    ULTRIX_MATH_IFDEF_TEST_CT  1\n+static tTestDesc aUltrix_Math_IfdefTests[] = {\n+  { TT_EGREP,    zUltrix_Math_IfdefSelect0, (regex_t*)NULL }, };\n+\n+/*\n+ *  Fix Command Arguments for Ultrix_Math_Ifdef\n+ */\n+static const char* apzUltrix_Math_IfdefPatch[] = {\n+    \"format\",\n+    \"%1\",\n+    (char*)NULL };\n+\n+/* * * * * * * * * * * * * * * * * * * * * * * * * *\n+ *\n+ *  Description of Ultrix_Nested_Ioctl fix\n+ */\n+tSCC zUltrix_Nested_IoctlName[] =\n+     \"ultrix_nested_ioctl\";\n+\n+/*\n+ *  File name selection pattern\n+ */\n+tSCC zUltrix_Nested_IoctlList[] =\n+  \"|sys/ioctl.h|\";\n+/*\n+ *  Machine/OS name selection pattern\n+ */\n+#define apzUltrix_Nested_IoctlMachs (const char**)NULL\n+\n+/*\n+ *  content selection pattern - do fix if pattern found\n+ */\n+tSCC zUltrix_Nested_IoctlSelect0[] =\n+       \"^/\\\\* #define SIOCSCREEN\";\n+\n+#define    ULTRIX_NESTED_IOCTL_TEST_CT  1\n+static tTestDesc aUltrix_Nested_IoctlTests[] = {\n+  { TT_EGREP,    zUltrix_Nested_IoctlSelect0, (regex_t*)NULL }, };\n+\n+/*\n+ *  Fix Command Arguments for Ultrix_Nested_Ioctl\n+ */\n+static const char* apzUltrix_Nested_IoctlPatch[] = { \"sed\",\n+    \"-e\", \"/^\\\\/\\\\* #define SIOCSCREEN/s@/\\\\* screend@*//* screend@\",\n+    (char*)NULL };\n+\n+/* * * * * * * * * * * * * * * * * * * * * * * * * *\n+ *\n+ *  Description of Ultrix_Nested_Svc fix\n+ */\n+tSCC zUltrix_Nested_SvcName[] =\n+     \"ultrix_nested_svc\";\n+\n+/*\n+ *  File name selection pattern\n+ */\n+tSCC zUltrix_Nested_SvcList[] =\n+  \"|rpc/svc.h|\";\n+/*\n+ *  Machine/OS name selection pattern\n+ */\n+#define apzUltrix_Nested_SvcMachs (const char**)NULL\n+\n+/*\n+ *  content selection pattern - do fix if pattern found\n+ */\n+tSCC zUltrix_Nested_SvcSelect0[] =\n+       \"^ \\\\*[ \\t]*int protocol;  */\\\\*\";\n+\n+#define    ULTRIX_NESTED_SVC_TEST_CT  1\n+static tTestDesc aUltrix_Nested_SvcTests[] = {\n+  { TT_EGREP,    zUltrix_Nested_SvcSelect0, (regex_t*)NULL }, };\n+\n+/*\n+ *  Fix Command Arguments for Ultrix_Nested_Svc\n+ */\n+static const char* apzUltrix_Nested_SvcPatch[] = { \"sed\",\n+    \"-e\", \"s@^\\\\( \\\\*\\tint protocol;  \\\\)/\\\\*@\\\\1*/ /*@\",\n+    (char*)NULL };\n+\n+/* * * * * * * * * * * * * * * * * * * * * * * * * *\n+ *\n+ *  Description of Ultrix_Stat fix\n+ */\n+tSCC zUltrix_StatName[] =\n+     \"ultrix_stat\";\n+\n+/*\n+ *  File name selection pattern\n+ */\n+tSCC zUltrix_StatList[] =\n+  \"|sys/stat.h|\";\n+/*\n+ *  Machine/OS name selection pattern\n+ */\n+#define apzUltrix_StatMachs (const char**)NULL\n+\n+/*\n+ *  content selection pattern - do fix if pattern found\n+ */\n+tSCC zUltrix_StatSelect0[] =\n+       \"@\\\\(#\\\\)stat\\\\.h.*6\\\\.1.*\\\\(ULTRIX\\\\)\";\n+\n+#define    ULTRIX_STAT_TEST_CT  1\n+static tTestDesc aUltrix_StatTests[] = {\n+  { TT_EGREP,    zUltrix_StatSelect0, (regex_t*)NULL }, };\n+\n+/*\n+ *  Fix Command Arguments for Ultrix_Stat\n+ */\n+static const char* apzUltrix_StatPatch[] = { \"sed\",\n+    \"-e\", \"/^#define[ \\t]S_IFPORT[ \\t]*S_IFIFO$/a\\\\\\n\\\n+\\\\\\n\\\n+/* macro to test for symbolic link */\\\\\\n\\\n+#define S_ISLNK(mode) (((mode) & S_IFMT) == S_IFLNK)\\\\\\n\\n\",\n+    \"-e\", \"/^[ \\t]*fstat(),$/a\\\\\\n\\\n+\\tlstat(),\\n\",\n+    (char*)NULL };\n+\n+/* * * * * * * * * * * * * * * * * * * * * * * * * *\n+ *\n+ *  Description of Ultrix_Static fix\n+ */\n+tSCC zUltrix_StaticName[] =\n+     \"ultrix_static\";\n+\n+/*\n+ *  File name selection pattern\n+ */\n+tSCC zUltrix_StaticList[] =\n+  \"|machine/cpu.h|\";\n+/*\n+ *  Machine/OS name selection pattern\n+ */\n+#define apzUltrix_StaticMachs (const char**)NULL\n+\n+/*\n+ *  content selection pattern - do fix if pattern found\n+ */\n+tSCC zUltrix_StaticSelect0[] =\n+       \"#include \\\"r[34]_cpu\";\n+\n+#define    ULTRIX_STATIC_TEST_CT  1\n+static tTestDesc aUltrix_StaticTests[] = {\n+  { TT_EGREP,    zUltrix_StaticSelect0, (regex_t*)NULL }, };\n+\n+/*\n+ *  Fix Command Arguments for Ultrix_Static\n+ */\n+static const char* apzUltrix_StaticPatch[] = { \"sed\",\n+    \"-e\", \"s/^static struct tlb_pid_state/struct tlb_pid_state/\",\n+    \"-e\", \"s/^#include \\\"r3_cpu\\\\.h\\\"$/#include <machine\\\\/r3_cpu\\\\.h>/\",\n+    \"-e\", \"s/^#include \\\"r4_cpu\\\\.h\\\"$/#include <machine\\\\/r4_cpu\\\\.h>/\",\n+    (char*)NULL };\n+\n+/* * * * * * * * * * * * * * * * * * * * * * * * * *\n+ *\n+ *  Description of Ultrix_Strings fix\n+ */\n+tSCC zUltrix_StringsName[] =\n+     \"ultrix_strings\";\n+\n+/*\n+ *  File name selection pattern\n+ */\n+tSCC zUltrix_StringsList[] =\n+  \"|strings.h|\";\n+/*\n+ *  Machine/OS name selection pattern\n+ */\n+#define apzUltrix_StringsMachs (const char**)NULL\n+\n+/*\n+ *  content selection pattern - do fix if pattern found\n+ */\n+tSCC zUltrix_StringsSelect0[] =\n+       \"@\\\\(#\\\\)strings\\\\.h.*6\\\\.1.*\\\\(ULTRIX\\\\)\";\n+\n+#define    ULTRIX_STRINGS_TEST_CT  1\n+static tTestDesc aUltrix_StringsTests[] = {\n+  { TT_EGREP,    zUltrix_StringsSelect0, (regex_t*)NULL }, };\n+\n+/*\n+ *  Fix Command Arguments for Ultrix_Strings\n+ */\n+static const char* apzUltrix_StringsPatch[] = {\n+    \"wrap\",\n+    (char*)NULL };\n+\n /* * * * * * * * * * * * * * * * * * * * * * * * * *\n  *\n  *  Description of Undefine_Null fix\n@@ -4926,20 +5782,25 @@ static const char* apzX11_SprintfPatch[] = {\n  *\n  *  List of all fixes\n  */\n-#define REGEX_COUNT          136\n+#define REGEX_COUNT          155\n #define MACH_LIST_SIZE_LIMIT 279\n-#define FIX_COUNT            125\n+#define FIX_COUNT            148\n \n /*\n  *  Enumerate the fixes\n  */\n typedef enum {\n+    AAB_DGUX_INT_VARARGS_FIXIDX,\n     AAB_FD_ZERO_ASM_POSIX_TYPES_H_FIXIDX,\n     AAB_FD_ZERO_GNU_TYPES_H_FIXIDX,\n     AAB_FD_ZERO_SELECTBITS_H_FIXIDX,\n     AAB_SOLARIS_SYS_VARARGS_H_FIXIDX,\n     AAB_SUN_MEMCPY_FIXIDX,\n     AAB_SVR4_REPLACE_BYTEORDER_FIXIDX,\n+    AAB_ULTRIX_ANSI_COMPAT_FIXIDX,\n+    AAB_ULTRIX_LIMITS_FIXIDX,\n+    AAB_ULTRIX_MEMORY_FIXIDX,\n+    AAB_ULTRIX_STRING_FIXIDX,\n     AIX_PTHREAD_FIXIDX,\n     AIX_SYSMACHINE_FIXIDX,\n     AIX_SYSWAIT_FIXIDX,\n@@ -4949,6 +5810,9 @@ typedef enum {\n     ALPHA_GETOPT_FIXIDX,\n     ALPHA_PARENS_FIXIDX,\n     ALPHA_SBRK_FIXIDX,\n+    ARM_NORCROFT_HINT_FIXIDX,\n+    ARM_WCHAR_FIXIDX,\n+    AUX_ASM_FIXIDX,\n     AVOID_BOOL_DEFINE_FIXIDX,\n     AVOID_BOOL_TYPE_FIXIDX,\n     AVOID_WCHAR_T_TYPE_FIXIDX,\n@@ -4964,6 +5828,7 @@ typedef enum {\n     DEC_INTERN_ASM_FIXIDX,\n     DJGPP_WCHAR_H_FIXIDX,\n     ECD_CURSOR_FIXIDX,\n+    FIX_HEADER_BREAKAGE_FIXIDX,\n     FREEBSD_GCC3_BREAKAGE_FIXIDX,\n     GNU_TYPES_FIXIDX,\n     HP_INLINE_FIXIDX,\n@@ -4993,6 +5858,9 @@ typedef enum {\n     LIMITS_IFNDEFS_FIXIDX,\n     LYNX_VOID_INT_FIXIDX,\n     LYNXOS_FCNTL_PROTO_FIXIDX,\n+    M88K_BAD_HYPOT_OPT_FIXIDX,\n+    M88K_BAD_S_IF_FIXIDX,\n+    M88K_MULTI_INCL_FIXIDX,\n     MACHINE_ANSI_H_VA_LIST_FIXIDX,\n     MACHINE_NAME_FIXIDX,\n     MATH_EXCEPTION_FIXIDX,\n@@ -5001,6 +5869,7 @@ typedef enum {\n     NESTED_AUTH_DES_FIXIDX,\n     NESTED_MOTOROLA_FIXIDX,\n     NESTED_SYS_LIMITS_FIXIDX,\n+    NEWS_OS_RECURSION_FIXIDX,\n     NEXT_MATH_PREFIX_FIXIDX,\n     NEXT_TEMPLATE_FIXIDX,\n     NEXT_VOLITILE_FIXIDX,\n@@ -5041,8 +5910,18 @@ typedef enum {\n     SYSZ_STDLIB_FOR_SUN_FIXIDX,\n     THREAD_KEYWORD_FIXIDX,\n     TINFO_CPLUSPLUS_FIXIDX,\n+    ULTRIX_ATEXIT_PARAM_FIXIDX,\n+    ULTRIX_ATOF_PARAM_FIXIDX,\n     ULTRIX_CONST_FIXIDX,\n     ULTRIX_CONST2_FIXIDX,\n+    ULTRIX_FIX_FIXPROTO_FIXIDX,\n+    ULTRIX_IFDEF_FIXIDX,\n+    ULTRIX_MATH_IFDEF_FIXIDX,\n+    ULTRIX_NESTED_IOCTL_FIXIDX,\n+    ULTRIX_NESTED_SVC_FIXIDX,\n+    ULTRIX_STAT_FIXIDX,\n+    ULTRIX_STATIC_FIXIDX,\n+    ULTRIX_STRINGS_FIXIDX,\n     UNDEFINE_NULL_FIXIDX,\n     UNICOSMK_RESTRICT_FIXIDX,\n     UW7_BYTEORDER_FIX_FIXIDX,\n@@ -5062,6 +5941,11 @@ typedef enum {\n } t_fixinc_idx;\n \n tFixDesc fixDescList[ FIX_COUNT ] = {\n+  {  zAab_Dgux_Int_VarargsName,    zAab_Dgux_Int_VarargsList,\n+     apzAab_Dgux_Int_VarargsMachs,\n+     AAB_DGUX_INT_VARARGS_TEST_CT, FD_MACH_ONLY | FD_REPLACEMENT,\n+     aAab_Dgux_Int_VarargsTests,   apzAab_Dgux_Int_VarargsPatch, 0 },\n+\n   {  zAab_Fd_Zero_Asm_Posix_Types_HName,    zAab_Fd_Zero_Asm_Posix_Types_HList,\n      apzAab_Fd_Zero_Asm_Posix_Types_HMachs,\n      AAB_FD_ZERO_ASM_POSIX_TYPES_H_TEST_CT, FD_MACH_ONLY | FD_REPLACEMENT,\n@@ -5092,6 +5976,26 @@ tFixDesc fixDescList[ FIX_COUNT ] = {\n      AAB_SVR4_REPLACE_BYTEORDER_TEST_CT, FD_MACH_ONLY | FD_REPLACEMENT,\n      aAab_Svr4_Replace_ByteorderTests,   apzAab_Svr4_Replace_ByteorderPatch, 0 },\n \n+  {  zAab_Ultrix_Ansi_CompatName,    zAab_Ultrix_Ansi_CompatList,\n+     apzAab_Ultrix_Ansi_CompatMachs,\n+     AAB_ULTRIX_ANSI_COMPAT_TEST_CT, FD_MACH_ONLY | FD_REPLACEMENT,\n+     aAab_Ultrix_Ansi_CompatTests,   apzAab_Ultrix_Ansi_CompatPatch, 0 },\n+\n+  {  zAab_Ultrix_LimitsName,    zAab_Ultrix_LimitsList,\n+     apzAab_Ultrix_LimitsMachs,\n+     AAB_ULTRIX_LIMITS_TEST_CT, FD_MACH_ONLY | FD_REPLACEMENT,\n+     aAab_Ultrix_LimitsTests,   apzAab_Ultrix_LimitsPatch, 0 },\n+\n+  {  zAab_Ultrix_MemoryName,    zAab_Ultrix_MemoryList,\n+     apzAab_Ultrix_MemoryMachs,\n+     AAB_ULTRIX_MEMORY_TEST_CT, FD_MACH_ONLY | FD_REPLACEMENT,\n+     aAab_Ultrix_MemoryTests,   apzAab_Ultrix_MemoryPatch, 0 },\n+\n+  {  zAab_Ultrix_StringName,    zAab_Ultrix_StringList,\n+     apzAab_Ultrix_StringMachs,\n+     AAB_ULTRIX_STRING_TEST_CT, FD_MACH_ONLY | FD_REPLACEMENT,\n+     aAab_Ultrix_StringTests,   apzAab_Ultrix_StringPatch, 0 },\n+\n   {  zAix_PthreadName,    zAix_PthreadList,\n      apzAix_PthreadMachs,\n      AIX_PTHREAD_TEST_CT, FD_MACH_ONLY | FD_SUBROUTINE,\n@@ -5137,6 +6041,21 @@ tFixDesc fixDescList[ FIX_COUNT ] = {\n      ALPHA_SBRK_TEST_CT, FD_MACH_ONLY | FD_SUBROUTINE,\n      aAlpha_SbrkTests,   apzAlpha_SbrkPatch, 0 },\n \n+  {  zArm_Norcroft_HintName,    zArm_Norcroft_HintList,\n+     apzArm_Norcroft_HintMachs,\n+     ARM_NORCROFT_HINT_TEST_CT, FD_MACH_ONLY | FD_SUBROUTINE,\n+     aArm_Norcroft_HintTests,   apzArm_Norcroft_HintPatch, 0 },\n+\n+  {  zArm_WcharName,    zArm_WcharList,\n+     apzArm_WcharMachs,\n+     ARM_WCHAR_TEST_CT, FD_MACH_ONLY | FD_SUBROUTINE,\n+     aArm_WcharTests,   apzArm_WcharPatch, 0 },\n+\n+  {  zAux_AsmName,    zAux_AsmList,\n+     apzAux_AsmMachs,\n+     AUX_ASM_TEST_CT, FD_MACH_ONLY | FD_SUBROUTINE,\n+     aAux_AsmTests,   apzAux_AsmPatch, 0 },\n+\n   {  zAvoid_Bool_DefineName,    zAvoid_Bool_DefineList,\n      apzAvoid_Bool_DefineMachs,\n      AVOID_BOOL_DEFINE_TEST_CT, FD_MACH_ONLY | FD_SUBROUTINE,\n@@ -5212,6 +6131,11 @@ tFixDesc fixDescList[ FIX_COUNT ] = {\n      ECD_CURSOR_TEST_CT, FD_MACH_ONLY | FD_SUBROUTINE,\n      aEcd_CursorTests,   apzEcd_CursorPatch, 0 },\n \n+  {  zFix_Header_BreakageName,    zFix_Header_BreakageList,\n+     apzFix_Header_BreakageMachs,\n+     FIX_HEADER_BREAKAGE_TEST_CT, FD_MACH_ONLY | FD_SUBROUTINE,\n+     aFix_Header_BreakageTests,   apzFix_Header_BreakagePatch, 0 },\n+\n   {  zFreebsd_Gcc3_BreakageName,    zFreebsd_Gcc3_BreakageList,\n      apzFreebsd_Gcc3_BreakageMachs,\n      FREEBSD_GCC3_BREAKAGE_TEST_CT, FD_MACH_ONLY | FD_SUBROUTINE,\n@@ -5357,6 +6281,21 @@ tFixDesc fixDescList[ FIX_COUNT ] = {\n      LYNXOS_FCNTL_PROTO_TEST_CT, FD_MACH_ONLY | FD_SUBROUTINE,\n      aLynxos_Fcntl_ProtoTests,   apzLynxos_Fcntl_ProtoPatch, 0 },\n \n+  {  zM88k_Bad_Hypot_OptName,    zM88k_Bad_Hypot_OptList,\n+     apzM88k_Bad_Hypot_OptMachs,\n+     M88K_BAD_HYPOT_OPT_TEST_CT, FD_MACH_ONLY | FD_SUBROUTINE,\n+     aM88k_Bad_Hypot_OptTests,   apzM88k_Bad_Hypot_OptPatch, 0 },\n+\n+  {  zM88k_Bad_S_IfName,    zM88k_Bad_S_IfList,\n+     apzM88k_Bad_S_IfMachs,\n+     M88K_BAD_S_IF_TEST_CT, FD_MACH_ONLY | FD_SUBROUTINE,\n+     aM88k_Bad_S_IfTests,   apzM88k_Bad_S_IfPatch, 0 },\n+\n+  {  zM88k_Multi_InclName,    zM88k_Multi_InclList,\n+     apzM88k_Multi_InclMachs,\n+     M88K_MULTI_INCL_TEST_CT, FD_MACH_ONLY | FD_SUBROUTINE,\n+     aM88k_Multi_InclTests,   apzM88k_Multi_InclPatch, 0 },\n+\n   {  zMachine_Ansi_H_Va_ListName,    zMachine_Ansi_H_Va_ListList,\n      apzMachine_Ansi_H_Va_ListMachs,\n      MACHINE_ANSI_H_VA_LIST_TEST_CT, FD_MACH_ONLY | FD_SUBROUTINE,\n@@ -5397,6 +6336,11 @@ tFixDesc fixDescList[ FIX_COUNT ] = {\n      NESTED_SYS_LIMITS_TEST_CT, FD_MACH_ONLY,\n      aNested_Sys_LimitsTests,   apzNested_Sys_LimitsPatch, 0 },\n \n+  {  zNews_Os_RecursionName,    zNews_Os_RecursionList,\n+     apzNews_Os_RecursionMachs,\n+     NEWS_OS_RECURSION_TEST_CT, FD_MACH_ONLY | FD_SUBROUTINE,\n+     aNews_Os_RecursionTests,   apzNews_Os_RecursionPatch, 0 },\n+\n   {  zNext_Math_PrefixName,    zNext_Math_PrefixList,\n      apzNext_Math_PrefixMachs,\n      NEXT_MATH_PREFIX_TEST_CT, FD_MACH_ONLY | FD_SUBROUTINE,\n@@ -5597,6 +6541,16 @@ tFixDesc fixDescList[ FIX_COUNT ] = {\n      TINFO_CPLUSPLUS_TEST_CT, FD_MACH_ONLY | FD_SUBROUTINE,\n      aTinfo_CplusplusTests,   apzTinfo_CplusplusPatch, 0 },\n \n+  {  zUltrix_Atexit_ParamName,    zUltrix_Atexit_ParamList,\n+     apzUltrix_Atexit_ParamMachs,\n+     ULTRIX_ATEXIT_PARAM_TEST_CT, FD_MACH_ONLY | FD_SUBROUTINE,\n+     aUltrix_Atexit_ParamTests,   apzUltrix_Atexit_ParamPatch, 0 },\n+\n+  {  zUltrix_Atof_ParamName,    zUltrix_Atof_ParamList,\n+     apzUltrix_Atof_ParamMachs,\n+     ULTRIX_ATOF_PARAM_TEST_CT, FD_MACH_ONLY | FD_SUBROUTINE,\n+     aUltrix_Atof_ParamTests,   apzUltrix_Atof_ParamPatch, 0 },\n+\n   {  zUltrix_ConstName,    zUltrix_ConstList,\n      apzUltrix_ConstMachs,\n      ULTRIX_CONST_TEST_CT, FD_MACH_ONLY | FD_SUBROUTINE,\n@@ -5607,6 +6561,46 @@ tFixDesc fixDescList[ FIX_COUNT ] = {\n      ULTRIX_CONST2_TEST_CT, FD_MACH_ONLY | FD_SUBROUTINE,\n      aUltrix_Const2Tests,   apzUltrix_Const2Patch, 0 },\n \n+  {  zUltrix_Fix_FixprotoName,    zUltrix_Fix_FixprotoList,\n+     apzUltrix_Fix_FixprotoMachs,\n+     ULTRIX_FIX_FIXPROTO_TEST_CT, FD_MACH_ONLY | FD_SUBROUTINE,\n+     aUltrix_Fix_FixprotoTests,   apzUltrix_Fix_FixprotoPatch, 0 },\n+\n+  {  zUltrix_IfdefName,    zUltrix_IfdefList,\n+     apzUltrix_IfdefMachs,\n+     ULTRIX_IFDEF_TEST_CT, FD_MACH_ONLY | FD_SUBROUTINE,\n+     aUltrix_IfdefTests,   apzUltrix_IfdefPatch, 0 },\n+\n+  {  zUltrix_Math_IfdefName,    zUltrix_Math_IfdefList,\n+     apzUltrix_Math_IfdefMachs,\n+     ULTRIX_MATH_IFDEF_TEST_CT, FD_MACH_ONLY | FD_SUBROUTINE,\n+     aUltrix_Math_IfdefTests,   apzUltrix_Math_IfdefPatch, 0 },\n+\n+  {  zUltrix_Nested_IoctlName,    zUltrix_Nested_IoctlList,\n+     apzUltrix_Nested_IoctlMachs,\n+     ULTRIX_NESTED_IOCTL_TEST_CT, FD_MACH_ONLY,\n+     aUltrix_Nested_IoctlTests,   apzUltrix_Nested_IoctlPatch, 0 },\n+\n+  {  zUltrix_Nested_SvcName,    zUltrix_Nested_SvcList,\n+     apzUltrix_Nested_SvcMachs,\n+     ULTRIX_NESTED_SVC_TEST_CT, FD_MACH_ONLY,\n+     aUltrix_Nested_SvcTests,   apzUltrix_Nested_SvcPatch, 0 },\n+\n+  {  zUltrix_StatName,    zUltrix_StatList,\n+     apzUltrix_StatMachs,\n+     ULTRIX_STAT_TEST_CT, FD_MACH_ONLY,\n+     aUltrix_StatTests,   apzUltrix_StatPatch, 0 },\n+\n+  {  zUltrix_StaticName,    zUltrix_StaticList,\n+     apzUltrix_StaticMachs,\n+     ULTRIX_STATIC_TEST_CT, FD_MACH_ONLY,\n+     aUltrix_StaticTests,   apzUltrix_StaticPatch, 0 },\n+\n+  {  zUltrix_StringsName,    zUltrix_StringsList,\n+     apzUltrix_StringsMachs,\n+     ULTRIX_STRINGS_TEST_CT, FD_MACH_ONLY | FD_SUBROUTINE,\n+     aUltrix_StringsTests,   apzUltrix_StringsPatch, 0 },\n+\n   {  zUndefine_NullName,    zUndefine_NullList,\n      apzUndefine_NullMachs,\n      UNDEFINE_NULL_TEST_CT, FD_MACH_ONLY | FD_SUBROUTINE,"}]}