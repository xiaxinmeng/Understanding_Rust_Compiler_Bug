{"sha": "90314e8242f2722ea003bbd9fc507209f82af03b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTAzMTRlODI0MmYyNzIyZWEwMDNiYmQ5ZmM1MDcyMDlmODJhZjAzYg==", "commit": {"author": {"name": "Andreas Jaeger", "email": "aj@suse.de", "date": "2000-04-12T21:38:23Z"}, "committer": {"name": "Gavin Romig-Koch", "email": "gavin@gcc.gnu.org", "date": "2000-04-12T21:38:23Z"}, "message": "linux.h (SUBTARGET_ASM_SPEC): Use proper flags if not compiling PIC code, add flags for mabi=64.\n\n2000-04-05  Andreas Jaeger  <aj@suse.de>\n\n\t* config/mips/linux.h (SUBTARGET_ASM_SPEC): Use proper flags if\n\tnot compiling PIC code, add flags for mabi=64.\n\t(SUBTARGET_CPP_SIZE_SPEC): New.\n\t(SUBTARGET_CPP_SPEC): New.\n\t(CPP_PREDEFINES): Define __PIC__ and __pic__.  PIC code is default\n\tfor MIPS/Linux and lots of code needs these defines.\n\nFrom-SVN: r33128", "tree": {"sha": "a34459a569abe7cac169aa2244034e570bdca4b2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a34459a569abe7cac169aa2244034e570bdca4b2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/90314e8242f2722ea003bbd9fc507209f82af03b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/90314e8242f2722ea003bbd9fc507209f82af03b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/90314e8242f2722ea003bbd9fc507209f82af03b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/90314e8242f2722ea003bbd9fc507209f82af03b/comments", "author": {"login": "ajaeger", "id": 16867, "node_id": "MDQ6VXNlcjE2ODY3", "avatar_url": "https://avatars.githubusercontent.com/u/16867?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ajaeger", "html_url": "https://github.com/ajaeger", "followers_url": "https://api.github.com/users/ajaeger/followers", "following_url": "https://api.github.com/users/ajaeger/following{/other_user}", "gists_url": "https://api.github.com/users/ajaeger/gists{/gist_id}", "starred_url": "https://api.github.com/users/ajaeger/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ajaeger/subscriptions", "organizations_url": "https://api.github.com/users/ajaeger/orgs", "repos_url": "https://api.github.com/users/ajaeger/repos", "events_url": "https://api.github.com/users/ajaeger/events{/privacy}", "received_events_url": "https://api.github.com/users/ajaeger/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "cc309dd5120d47b3d2084cee75734ff56d6ee393", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cc309dd5120d47b3d2084cee75734ff56d6ee393", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cc309dd5120d47b3d2084cee75734ff56d6ee393"}], "stats": {"total": 63, "additions": 61, "deletions": 2}, "files": [{"sha": "566f8401d4750cd40fd01d4cee79ae3cfaddeacd", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/90314e8242f2722ea003bbd9fc507209f82af03b/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/90314e8242f2722ea003bbd9fc507209f82af03b/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=90314e8242f2722ea003bbd9fc507209f82af03b", "patch": "@@ -1,3 +1,12 @@\n+2000-04-05  Andreas Jaeger  <aj@suse.de>\n+\n+\t* config/mips/linux.h (SUBTARGET_ASM_SPEC): Use proper flags if\n+\tnot compiling PIC code, add flags for mabi=64.\n+\t(SUBTARGET_CPP_SIZE_SPEC): New.\n+\t(SUBTARGET_CPP_SPEC): New.\n+\t(CPP_PREDEFINES): Define __PIC__ and __pic__.  PIC code is default\n+\tfor MIPS/Linux and lots of code needs these defines.\n+\n Wed Apr 12 22:44:11 2000  Hans-Peter Nilsson  <hp@axis.com>\n \n \t* reorg.c (fill_slots_from_thread): Check side_effects_p when"}, {"sha": "75aad4e4a7d8ad95fc49ec22a2714384daf84e58", "filename": "gcc/config/mips/linux.h", "status": "modified", "additions": 52, "deletions": 2, "changes": 54, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/90314e8242f2722ea003bbd9fc507209f82af03b/gcc%2Fconfig%2Fmips%2Flinux.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/90314e8242f2722ea003bbd9fc507209f82af03b/gcc%2Fconfig%2Fmips%2Flinux.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Flinux.h?ref=90314e8242f2722ea003bbd9fc507209f82af03b", "patch": "@@ -68,9 +68,56 @@ Boston, MA 02111-1307, USA.  */\n #else\n #define CPP_PREDEFINES \"-DMIPSEB -D_MIPSEB -Dunix -Dmips -D_mips \\\n -DR3000 -D_R3000 -Dlinux -Asystem(posix) -Acpu(mips) \\\n--Amachine(mips) -D__ELF__\"\n+-Amachine(mips) -D__ELF__ -D__PIC__ -D__pic__\"\n #endif\n \n+#undef SUBTARGET_CPP_SIZE_SPEC\n+#define SUBTARGET_CPP_SIZE_SPEC \"\\\n+%{mabi=32: -D__SIZE_TYPE__=unsigned\\\\ int -D__PTRDIFF_TYPE__=int} \\\n+%{mabi=n32: -D__SIZE_TYPE__=unsigned\\\\ int -D__PTRDIFF_TYPE__=int} \\\n+%{mabi=64: -D__SIZE_TYPE__=long\\\\ unsigned\\\\ int -D__PTRDIFF_TYPE__=long\\\\ int} \\\n+%{!mabi*: -D__SIZE_TYPE__=unsigned\\\\ int -D__PTRDIFF_TYPE__=int}\"\n+\n+/* We must make -mips3 do what -mlong64 used to do.  */\n+/* ??? If no mipsX option given, but a mabi=X option is, then should set\n+   _MIPS_ISA based on the mabi=X option.  */\n+/* ??? If no mabi=X option give, but a mipsX option is, then should set\n+   _MIPS_SIM based on the mipsX option.  */\n+/* ??? Same for _MIPS_SZINT.  */\n+/* ??? Same for _MIPS_SZPTR.  */\n+/* ??? Same for __SIZE_TYPE and __PTRDIFF_TYPE.  */\n+#undef SUBTARGET_CPP_SPEC\n+#define SUBTARGET_CPP_SPEC \"\\\n+%{mfp32: -D_MIPS_FPSET=16} \\\n+%{mfp64: -D_MIPS_FPSET=32} \\\n+%{!mfp*: -D_MIPS_FPSET=32} \\\n+%{mips1: -D_MIPS_ISA=_MIPS_ISA_MIPS1} \\\n+%{mips2: -D_MIPS_ISA=_MIPS_ISA_MIPS2} \\\n+%{mips3: -D_MIPS_ISA=_MIPS_ISA_MIPS3} \\\n+%{mips4: -D_MIPS_ISA=_MIPS_ISA_MIPS4} \\\n+%{!mips*: -D_MIPS_ISA=_MIPS_ISA_MIPS3} \\\n+%{mabi=32: -D_MIPS_SIM=_MIPS_SIM_ABI32}\t\\\n+%{mabi=n32: -D_ABIN32=2 -D_MIPS_SIM=_ABIN32} \\\n+%{mabi=64: -D_ABI64=3 -D_MIPS_SIM=_ABI64} \\\n+%{!mabi*: -D_ABIN32=2 -D_MIPS_SIM=_ABIN32} \\\n+%{!mint64: -D_MIPS_SZINT=32}%{mint64: -D_MIPS_SZINT=64} \\\n+%{mabi=32: -D_MIPS_SZLONG=32} \\\n+%{mabi=n32: -D_MIPS_SZLONG=32} \\\n+%{mabi=64: -D_MIPS_SZLONG=64} \\\n+%{!mabi*: -D_MIPS_SZLONG=32} \\\n+%{mabi=32: -D_MIPS_SZPTR=32} \\\n+%{mabi=n32: -D_MIPS_SZPTR=32} \\\n+%{mabi=64: -D_MIPS_SZPTR=64} \\\n+%{!mabi*: -D_MIPS_SZPTR=32} \\\n+%{!mips*: -U__mips -D__mips} \\\n+%{mabi=32: -U__mips64} \\\n+%{mabi=n32: -D__mips64} \\\n+%{mabi=64: -U__mips64} \\\n+%{!mabi*: -U__mips64} \\\n+%{fno-PIC:-U__PIC__ -U__pic__} %{fno-pic:-U__PIC__ -U__pic__} \\\n+%{fPIC:-D__PIC__ -D__pic__} %{fpic:-D__PIC__ -D__pic__} \\\n+%{pthread:-D_REENTRANT}\"\n+\n /* Provide a STARTFILE_SPEC appropriate for GNU/Linux.  Here we add\n    the GNU/Linux magical crtbegin.o file (see crtstuff.c) which\n    provides part of the support for getting C++ file-scope static\n@@ -117,7 +164,10 @@ Boston, MA 02111-1307, USA.  */\n \n \n #undef SUBTARGET_ASM_SPEC\n-#define SUBTARGET_ASM_SPEC \"-KPIC\"\n+#define SUBTARGET_ASM_SPEC \"\\\n+%{mabi=64: -64} \\\n+%{!fno-PIC:%{!fno-pic:-KPIC}} \\\n+%{fno-PIC:-non_shared} %{fno-pic:-non_shared}\"\n \n /* Undefine the following which were defined in elf.h.  This will cause the linux\n    port to continue to use collect2 for constructors/destructors.  These may be removed"}]}