{"sha": "34f6b14ff33e0c64b3a4a1a2cd871df715d69151", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzRmNmIxNGZmMzNlMGM2NGIzYTRhMWEyY2Q4NzFkZjcxNWQ2OTE1MQ==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2020-04-28T09:26:56Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2020-04-28T09:26:56Z"}, "message": "tree: Fix up TREE_SIDE_EFFECTS on internal calls [PR94809]\n\nOn the following testcase, match.pd during GENERIC folding\nchanges the -1U / x < y into __imag__ .MUL_OVERFLOW (x, y),\nbut unfortunately unlike for normal calls nothing sets TREE_SIDE_EFFECTS on\nthe call.  There is the process_call_operands function that non-internal\ncall creation calls and it is usable for internal calls too,\ne.g. TREE_SIDE_EFFECTS is derived from checking whether the\ncall has side-effects (non-ECF_{CONST,PURE}; we have those for internal\ncalls) and from whether any of the arguments has TREE_SIDE_EFFECTS.\n\n2020-04-28  Jakub Jelinek  <jakub@redhat.com>\n\n\tPR tree-optimization/94809\n\t* tree.c (build_call_expr_internal_loc_array): Call\n\tprocess_call_operands.\n\n\t* gcc.c-torture/execute/pr94809.c: New test.", "tree": {"sha": "22b3389c391cfa7244a83048690e2288670dd21a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/22b3389c391cfa7244a83048690e2288670dd21a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/34f6b14ff33e0c64b3a4a1a2cd871df715d69151", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/34f6b14ff33e0c64b3a4a1a2cd871df715d69151", "html_url": "https://github.com/Rust-GCC/gccrs/commit/34f6b14ff33e0c64b3a4a1a2cd871df715d69151", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/34f6b14ff33e0c64b3a4a1a2cd871df715d69151/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "fa477e454287063a583967c79867b44deea8e4ad", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fa477e454287063a583967c79867b44deea8e4ad", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fa477e454287063a583967c79867b44deea8e4ad"}], "stats": {"total": 28, "additions": 26, "deletions": 2}, "files": [{"sha": "d8b753d8bf1c822b94ce1101af6a2389e9504555", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 2, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/34f6b14ff33e0c64b3a4a1a2cd871df715d69151/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/34f6b14ff33e0c64b3a4a1a2cd871df715d69151/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=34f6b14ff33e0c64b3a4a1a2cd871df715d69151", "patch": "@@ -1,4 +1,10 @@\n-2020-04-27 Anton Youdkevitch <anton.youdkevitch@bell-sw.com>\n+2020-04-28  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR tree-optimization/94809\n+\t* tree.c (build_call_expr_internal_loc_array): Call\n+\tprocess_call_operands.\n+\n+2020-04-27  Anton Youdkevitch  <anton.youdkevitch@bell-sw.com>\n \n \t* config/aarch64/aarch64-cores.def (thunderx3t110): Add the chip name.\n \t* config/aarch64/aarch64-tune.md: Regenerate.\n@@ -7,7 +13,7 @@\n \t(thunderx3t110_vector_cost): Likewise.\n \t(thunderx3t110_prefetch_tune): Likewise.\n \t(thunderx3t110_tunings): Likewise.\n-\t* gcc/config/aarch64/aarch64-cost-tables.h (thunderx3t110_extra_costs):\n+\t* config/aarch64/aarch64-cost-tables.h (thunderx3t110_extra_costs):\n \tDefine.\n \t* config/aarch64/thunderx3t110.md: New file.\n \t* config/aarch64/aarch64.md: Include thunderx3t110.md."}, {"sha": "e94c09cef7b32cd92e8ae4f7bc3a3ad088d3825e", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/34f6b14ff33e0c64b3a4a1a2cd871df715d69151/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/34f6b14ff33e0c64b3a4a1a2cd871df715d69151/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=34f6b14ff33e0c64b3a4a1a2cd871df715d69151", "patch": "@@ -1,3 +1,8 @@\n+2020-04-28  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR tree-optimization/94809\n+\t* gcc.c-torture/execute/pr94809.c: New test.\n+\n 2020-04-28  Iain Sandoe  <iain@sandoe.co.uk>\n \n \tPR c++/94760"}, {"sha": "ce55e8f92d4a4ec1d63962ada78a693d5e1ff134", "filename": "gcc/testsuite/gcc.c-torture/execute/pr94809.c", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/34f6b14ff33e0c64b3a4a1a2cd871df715d69151/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr94809.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/34f6b14ff33e0c64b3a4a1a2cd871df715d69151/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr94809.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr94809.c?ref=34f6b14ff33e0c64b3a4a1a2cd871df715d69151", "patch": "@@ -0,0 +1,12 @@\n+/* PR tree-optimization/94809 */\n+\n+int\n+main ()\n+{\n+  int a = 0;\n+  unsigned long long one = 1;\n+  ((-1ULL / one) < a++, one);\n+  if (a != 1)\n+    __builtin_abort ();\n+  return 0;\n+}"}, {"sha": "e28b29580caf94a81d9580c4928dc990ba7ea646", "filename": "gcc/tree.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/34f6b14ff33e0c64b3a4a1a2cd871df715d69151/gcc%2Ftree.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/34f6b14ff33e0c64b3a4a1a2cd871df715d69151/gcc%2Ftree.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree.c?ref=34f6b14ff33e0c64b3a4a1a2cd871df715d69151", "patch": "@@ -11523,6 +11523,7 @@ build_call_expr_internal_loc_array (location_t loc, internal_fn ifn,\n     CALL_EXPR_ARG (t, i) = args[i];\n   SET_EXPR_LOCATION (t, loc);\n   CALL_EXPR_IFN (t) = ifn;\n+  process_call_operands (t);\n   return t;\n }\n "}]}