{"sha": "69d1a403420aea41cd6ce81087e1e388c571118e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjlkMWE0MDM0MjBhZWE0MWNkNmNlODEwODdlMWUzODhjNTcxMTE4ZQ==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2006-03-14T17:36:29Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2006-03-14T17:36:29Z"}, "message": "tweak comments\n\nFrom-SVN: r112059", "tree": {"sha": "0aa85354b9c3198028817ff442e7b1fd0a354817", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0aa85354b9c3198028817ff442e7b1fd0a354817"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/69d1a403420aea41cd6ce81087e1e388c571118e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/69d1a403420aea41cd6ce81087e1e388c571118e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/69d1a403420aea41cd6ce81087e1e388c571118e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/69d1a403420aea41cd6ce81087e1e388c571118e/comments", "author": null, "committer": null, "parents": [{"sha": "e1835ff189fb2a103508889f0c7450075c28a86e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e1835ff189fb2a103508889f0c7450075c28a86e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e1835ff189fb2a103508889f0c7450075c28a86e"}], "stats": {"total": 6, "additions": 3, "deletions": 3}, "files": [{"sha": "f68b48477151de63c06136419933a19f06dfb440", "filename": "gcc/cp/typeck.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/69d1a403420aea41cd6ce81087e1e388c571118e/gcc%2Fcp%2Ftypeck.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/69d1a403420aea41cd6ce81087e1e388c571118e/gcc%2Fcp%2Ftypeck.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Ftypeck.c?ref=69d1a403420aea41cd6ce81087e1e388c571118e", "patch": "@@ -1309,7 +1309,7 @@ cxx_sizeof_expr (tree e)\n }\n \n /* Implement the __alignof keyword: Return the minimum required\n-   alignment of EXPR, measured in bytes.  For VAR_DECL's and\n+   alignment of E, measured in bytes.  For VAR_DECL's and\n    FIELD_DECL's return DECL_ALIGN (which can be set from an\n    \"aligned\" __attribute__ specification).  */\n \n@@ -1359,8 +1359,8 @@ cxx_alignof_expr (tree e)\n   return fold_convert (size_type_node, t);\n }\n \n-/* Process a sizeof or alignof expression where the operand is an\n-   expression.  */\n+/* Process a sizeof or alignof expression E with code OP where the operand\n+   is an expression.  */\n \n tree\n cxx_sizeof_or_alignof_expr (tree e, enum tree_code op)"}]}