{"sha": "c3e799e123238f1762760bcec2091005603eb4e7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzNlNzk5ZTEyMzIzOGYxNzYyNzYwYmNlYzIwOTEwMDU2MDNlYjRlNw==", "commit": {"author": {"name": "Fritz Reese", "email": "fritzoreese@gmail.com", "date": "2018-12-03T17:10:50Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2018-12-03T17:10:50Z"}, "message": "re PR fortran/87919 (Incorrect fortran handling of -fno-* options)\n\n\tPR fortran/87919\n\t* options.c (SET_FLAG, SET_BITFLAG, SET_BITFLAG2): New macros.\n\t(set_dec_flags): Set/unset DEC and std flags according to value.\n\t(post_dec_flags, set_init_local_zero): New functions.\n\t(gfc_init_options): Use set_init_local_zero and post_dec_flags.\n\t(gfc_handle_options) <case OPT_fcheck_array_temporaries>: Use\n\tSET_BITFLAG.\n\t<case OPT_finit_local_zero>: Use set_init_local_zero.\n\t<case OPT_fdec>: Pass value to set_dec_flags.\n\t<case OPT_fdec_structure>: Remove.\n\nCo-Authored-By: Mark Eggleston <mark.eggleston@codethink.co.uk>\n\nFrom-SVN: r266761", "tree": {"sha": "abb1db0f868bd876c60dd0aa1627a847108afa41", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/abb1db0f868bd876c60dd0aa1627a847108afa41"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c3e799e123238f1762760bcec2091005603eb4e7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c3e799e123238f1762760bcec2091005603eb4e7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c3e799e123238f1762760bcec2091005603eb4e7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c3e799e123238f1762760bcec2091005603eb4e7/comments", "author": {"login": "fritzr", "id": 2230564, "node_id": "MDQ6VXNlcjIyMzA1NjQ=", "avatar_url": "https://avatars.githubusercontent.com/u/2230564?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fritzr", "html_url": "https://github.com/fritzr", "followers_url": "https://api.github.com/users/fritzr/followers", "following_url": "https://api.github.com/users/fritzr/following{/other_user}", "gists_url": "https://api.github.com/users/fritzr/gists{/gist_id}", "starred_url": "https://api.github.com/users/fritzr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fritzr/subscriptions", "organizations_url": "https://api.github.com/users/fritzr/orgs", "repos_url": "https://api.github.com/users/fritzr/repos", "events_url": "https://api.github.com/users/fritzr/events{/privacy}", "received_events_url": "https://api.github.com/users/fritzr/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "e1976443fb2864f091c5f82d72820b9126ee0241", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e1976443fb2864f091c5f82d72820b9126ee0241", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e1976443fb2864f091c5f82d72820b9126ee0241"}], "stats": {"total": 42, "additions": 20, "deletions": 22}, "files": [{"sha": "b9fcfd617ae2fe7e7f2549bb9f995e8f6bfd3201", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 8, "deletions": 4, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c3e799e123238f1762760bcec2091005603eb4e7/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c3e799e123238f1762760bcec2091005603eb4e7/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=c3e799e123238f1762760bcec2091005603eb4e7", "patch": "@@ -1,12 +1,16 @@\n 2018-12-03  Fritz Reese  <fritzoreese@gmail.com>\n-            Mark Eggleston <mark.eggleston@codethink.co.uk>\n+\t    Mark Eggleston  <mark.eggleston@codethink.co.uk>\n \n \tPR fortran/87919\n \t* options.c (SET_FLAG, SET_BITFLAG, SET_BITFLAG2): New macros.\n \t(set_dec_flags): Set/unset DEC and std flags according to value.\n-\t(set_init_local_zero): New helper for -finit-local-zero flag group.\n-\t(gfc_init_options): Fix disabling of init flags, array temporaries\n-\tcheck, and dec flags when value is zero (from -fno-*).\n+\t(post_dec_flags, set_init_local_zero): New functions.\n+\t(gfc_init_options): Use set_init_local_zero and post_dec_flags.\n+\t(gfc_handle_options) <case OPT_fcheck_array_temporaries>: Use\n+\tSET_BITFLAG.\n+\t<case OPT_finit_local_zero>: Use set_init_local_zero.\n+\t<case OPT_fdec>: Pass value to set_dec_flags.\n+\t<case OPT_fdec_structure>: Remove.\n \n 2018-11-30  Thomas Schwinge  <thomas@codesourcery.com>\n "}, {"sha": "48e35e3524d21feb0e45ab9493c5a0f0616a3c9c", "filename": "gcc/fortran/options.c", "status": "modified", "additions": 12, "deletions": 18, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c3e799e123238f1762760bcec2091005603eb4e7/gcc%2Ffortran%2Foptions.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c3e799e123238f1762760bcec2091005603eb4e7/gcc%2Ffortran%2Foptions.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Foptions.c?ref=c3e799e123238f1762760bcec2091005603eb4e7", "patch": "@@ -147,11 +147,7 @@ gfc_init_options (unsigned int decoded_options_count,\n \n   gfc_option.flag_preprocessed = 0;\n   gfc_option.flag_d_lines = -1;\n-  gfc_option.flag_init_integer = GFC_INIT_INTEGER_OFF;\n-  gfc_option.flag_init_integer_value = 0;\n-  gfc_option.flag_init_logical = GFC_INIT_LOGICAL_OFF;\n-  gfc_option.flag_init_character = GFC_INIT_CHARACTER_OFF;\n-  gfc_option.flag_init_character_value = (char)0;\n+  set_init_local_zero (0);\n   \n   gfc_option.fpe = 0;\n   /* All except GFC_FPE_INEXACT.  */\n@@ -261,6 +257,9 @@ gfc_post_options (const char **pfilename)\n   char *source_path;\n   int i;\n \n+  /* Finalize DEC flags.  */\n+  post_dec_flags (flag_dec);\n+\n   /* Excess precision other than \"fast\" requires front-end\n      support.  */\n   if (flag_excess_precision_cmdline == EXCESS_PRECISION_STANDARD)\n@@ -644,7 +643,7 @@ gfc_handle_option (size_t scode, const char *arg, HOST_WIDE_INT value,\n       break;\n \n     case OPT_fcheck_array_temporaries:\n-      gfc_option.rtcheck |= GFC_RTCHECK_ARRAY_TEMPS;\n+      SET_BITFLAG (gfc_option.rtcheck, value, GFC_RTCHECK_ARRAY_TEMPS);\n       break;\n       \n     case OPT_fd_lines_as_code:\n@@ -694,12 +693,7 @@ gfc_handle_option (size_t scode, const char *arg, HOST_WIDE_INT value,\n       break;\n \n     case OPT_finit_local_zero:\n-      gfc_option.flag_init_integer = GFC_INIT_INTEGER_ON;\n-      gfc_option.flag_init_integer_value = 0;\n-      flag_init_real = GFC_INIT_REAL_ZERO;\n-      gfc_option.flag_init_logical = GFC_INIT_LOGICAL_FALSE;\n-      gfc_option.flag_init_character = GFC_INIT_CHARACTER_ON;\n-      gfc_option.flag_init_character_value = (char)0;\n+      set_init_local_zero (value);\n       break;\n \n     case OPT_finit_logical_:\n@@ -798,12 +792,8 @@ gfc_handle_option (size_t scode, const char *arg, HOST_WIDE_INT value,\n       break;\n \n     case OPT_fdec:\n-      /* Enable all DEC extensions.  */\n-      set_dec_flags (1);\n-      break;\n-\n-    case OPT_fdec_structure:\n-      flag_dec_structure = 1;\n+      /* Set (or unset) the DEC extension flags.  */\n+      set_dec_flags (value);\n       break;\n     }\n \n@@ -895,3 +885,7 @@ gfc_get_option_string (void)\n   result[--pos] = '\\0';\n   return result;\n }\n+\n+#undef SET_BITFLAG\n+#undef SET_BITFLAG2\n+#undef SET_FLAG"}]}