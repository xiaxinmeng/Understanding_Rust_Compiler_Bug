{"sha": "845d451e1f73d8a9a84382c3c6d4fca9c8220403", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODQ1ZDQ1MWUxZjczZDhhOWE4NDM4MmMzYzZkNGZjYTljODIyMDQwMw==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2020-04-07T04:45:26Z"}, "committer": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2020-04-08T05:12:12Z"}, "message": "c++: requires-expression and tentative parse [PR94480]\n\nThe problem here was that cp_parser_requires_expression committing to a\ntentative parse confused cp_parser_decltype_expr, which needs to still be\ntentative.  The only reason to commit here is to get syntax errors within\nthe requires-expression, which we can still do when the commit is firewalled\nfrom the enclosing context.\n\ngcc/cp/ChangeLog\n2020-04-07  Jason Merrill  <jason@redhat.com>\n\n\tPR c++/94480\n\t* parser.c (cp_parser_requires_expression): Use tentative_firewall.", "tree": {"sha": "72b481f86d22f55976656952389f782a7316d498", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/72b481f86d22f55976656952389f782a7316d498"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/845d451e1f73d8a9a84382c3c6d4fca9c8220403", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/845d451e1f73d8a9a84382c3c6d4fca9c8220403", "html_url": "https://github.com/Rust-GCC/gccrs/commit/845d451e1f73d8a9a84382c3c6d4fca9c8220403", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/845d451e1f73d8a9a84382c3c6d4fca9c8220403/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f1a6150ecb7b17f068150e98bc107d730604f5b6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f1a6150ecb7b17f068150e98bc107d730604f5b6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f1a6150ecb7b17f068150e98bc107d730604f5b6"}], "stats": {"total": 13, "additions": 13, "deletions": 0}, "files": [{"sha": "31f1fc433fdf08ba5093295a21c511e9e912b8b5", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/845d451e1f73d8a9a84382c3c6d4fca9c8220403/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/845d451e1f73d8a9a84382c3c6d4fca9c8220403/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=845d451e1f73d8a9a84382c3c6d4fca9c8220403", "patch": "@@ -1,5 +1,8 @@\n 2020-04-07  Jason Merrill  <jason@redhat.com>\n \n+\tPR c++/94480\n+\t* parser.c (cp_parser_requires_expression): Use tentative_firewall.\n+\n \tPR c++/94481\n \t* parser.c (cp_parser_placeholder_type_specifier): Use\n \tmatching_parens."}, {"sha": "a95d43127d72b5d57a802df6bb17e44f1b48633e", "filename": "gcc/cp/parser.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/845d451e1f73d8a9a84382c3c6d4fca9c8220403/gcc%2Fcp%2Fparser.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/845d451e1f73d8a9a84382c3c6d4fca9c8220403/gcc%2Fcp%2Fparser.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fparser.c?ref=845d451e1f73d8a9a84382c3c6d4fca9c8220403", "patch": "@@ -27740,6 +27740,9 @@ cp_parser_requires_expression (cp_parser *parser)\n   gcc_assert (cp_lexer_next_token_is_keyword (parser->lexer, RID_REQUIRES));\n   location_t loc = cp_lexer_consume_token (parser->lexer)->location;\n \n+  /* Avoid committing to outer tentative parse.  */\n+  tentative_firewall firewall (parser);\n+\n   /* This is definitely a requires-expression.  */\n   cp_parser_commit_to_tentative_parse (parser);\n "}, {"sha": "1d21cce7eee929fe17e58a1a72f60b6f8edee483", "filename": "gcc/testsuite/g++.dg/cpp2a/concepts-requires21.C", "status": "added", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/845d451e1f73d8a9a84382c3c6d4fca9c8220403/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp2a%2Fconcepts-requires21.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/845d451e1f73d8a9a84382c3c6d4fca9c8220403/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp2a%2Fconcepts-requires21.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp2a%2Fconcepts-requires21.C?ref=845d451e1f73d8a9a84382c3c6d4fca9c8220403", "patch": "@@ -0,0 +1,7 @@\n+// PR c++/94480\n+// { dg-do compile { target c++2a } }\n+\n+template<typename T, typename U>\n+constexpr bool is_same_v = __is_same (T, U);\n+\n+static_assert(is_same_v<bool, decltype(requires { requires false; })>);"}]}