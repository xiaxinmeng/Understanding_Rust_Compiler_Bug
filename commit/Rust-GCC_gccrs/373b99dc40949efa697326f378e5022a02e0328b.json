{"sha": "373b99dc40949efa697326f378e5022a02e0328b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzczYjk5ZGM0MDk0OWVmYTY5NzMyNmYzNzhlNTAyMmEwMmUwMzI4Yg==", "commit": {"author": {"name": "H.J. Lu", "email": "hjl.tools@gmail.com", "date": "2020-09-30T15:13:21Z"}, "committer": {"name": "H.J. Lu", "email": "hjl.tools@gmail.com", "date": "2020-09-30T15:13:21Z"}, "message": "Add a testcase for PR target/96827\n\nAdd a testcase for PR target/96827 which was fixed by r11-3559:\n\ncommit 97b798d80baf945ea28236eef3fa69f36626b579\nAuthor: Joel Hutton <joel.hutton@arm.com>\nDate:   Wed Sep 30 15:08:13 2020 +0100\n\n    [SLP][VECT] Add check to fix 96837\n\n\tPR target/96827\n\t* gcc.target/i386/pr96827.c: New test.", "tree": {"sha": "996954558eea342595b8e3b40f89f2ef8da7f30e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/996954558eea342595b8e3b40f89f2ef8da7f30e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/373b99dc40949efa697326f378e5022a02e0328b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/373b99dc40949efa697326f378e5022a02e0328b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/373b99dc40949efa697326f378e5022a02e0328b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/373b99dc40949efa697326f378e5022a02e0328b/comments", "author": {"login": "hjl-tools", "id": 1072356, "node_id": "MDQ6VXNlcjEwNzIzNTY=", "avatar_url": "https://avatars.githubusercontent.com/u/1072356?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hjl-tools", "html_url": "https://github.com/hjl-tools", "followers_url": "https://api.github.com/users/hjl-tools/followers", "following_url": "https://api.github.com/users/hjl-tools/following{/other_user}", "gists_url": "https://api.github.com/users/hjl-tools/gists{/gist_id}", "starred_url": "https://api.github.com/users/hjl-tools/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hjl-tools/subscriptions", "organizations_url": "https://api.github.com/users/hjl-tools/orgs", "repos_url": "https://api.github.com/users/hjl-tools/repos", "events_url": "https://api.github.com/users/hjl-tools/events{/privacy}", "received_events_url": "https://api.github.com/users/hjl-tools/received_events", "type": "User", "site_admin": false}, "committer": {"login": "hjl-tools", "id": 1072356, "node_id": "MDQ6VXNlcjEwNzIzNTY=", "avatar_url": "https://avatars.githubusercontent.com/u/1072356?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hjl-tools", "html_url": "https://github.com/hjl-tools", "followers_url": "https://api.github.com/users/hjl-tools/followers", "following_url": "https://api.github.com/users/hjl-tools/following{/other_user}", "gists_url": "https://api.github.com/users/hjl-tools/gists{/gist_id}", "starred_url": "https://api.github.com/users/hjl-tools/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hjl-tools/subscriptions", "organizations_url": "https://api.github.com/users/hjl-tools/orgs", "repos_url": "https://api.github.com/users/hjl-tools/repos", "events_url": "https://api.github.com/users/hjl-tools/events{/privacy}", "received_events_url": "https://api.github.com/users/hjl-tools/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ef11f5b37b0a62dbad9ed37613a3799dc98f6f8b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ef11f5b37b0a62dbad9ed37613a3799dc98f6f8b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ef11f5b37b0a62dbad9ed37613a3799dc98f6f8b"}], "stats": {"total": 41, "additions": 41, "deletions": 0}, "files": [{"sha": "309e9e8947daed04bc833de88e559f49becfea9f", "filename": "gcc/testsuite/gcc.target/i386/pr96827.c", "status": "added", "additions": 41, "deletions": 0, "changes": 41, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/373b99dc40949efa697326f378e5022a02e0328b/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr96827.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/373b99dc40949efa697326f378e5022a02e0328b/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr96827.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr96827.c?ref=373b99dc40949efa697326f378e5022a02e0328b", "patch": "@@ -0,0 +1,41 @@\n+/* { dg-do run { target sse2_runtime } } */\n+/* { dg-options \"-O3 -msse2 -mfpmath=sse\" } */\n+\n+typedef unsigned short int __uint16_t;\n+typedef unsigned int __uint32_t;\n+typedef __uint16_t uint16_t;\n+typedef __uint32_t uint32_t;\n+typedef int __v4si __attribute__ ((__vector_size__ (16)));\n+typedef long long __m128i __attribute__ ((__vector_size__ (16), __may_alias__));\n+extern __inline void __attribute__((__gnu_inline__, __always_inline__, __artificial__))\n+_mm_store_si128 (__m128i *__P, __m128i __B)\n+{\n+  *__P = __B;\n+}\n+extern __inline __m128i __attribute__((__gnu_inline__, __always_inline__, __artificial__))\n+_mm_set_epi32 (int __q3, int __q2, int __q1, int __q0)\n+{\n+  return __extension__ (__m128i)(__v4si){ __q0, __q1, __q2, __q3 };\n+}\n+typedef uint16_t u16;\n+typedef uint32_t u32;\n+extern int printf (const char *__restrict __format, ...);\n+void do_the_thing(u32 idx, __m128i *dude)\n+{\n+ u32 dude_[4] = { idx+0, idx+2, idx+4, idx+6 };\n+ for (u32 i = 0; i < 3; ++i)\n+  if (dude_[i] == 1234)\n+   dude_[i]--;\n+ *dude = _mm_set_epi32(dude_[0], dude_[1], dude_[2], dude_[3]);\n+}\n+int main()\n+{\n+ __m128i dude;\n+ u32 idx = 0;\n+ do_the_thing(idx, &dude);\n+ __attribute__((aligned(16))) u32 dude_[4];\n+ _mm_store_si128((__m128i*)dude_, dude);\n+ if (!(6 == dude_[0] && 4 == dude_[1] && 2 == dude_[2] && 0 == dude_[3]))\n+   __builtin_abort ();\n+ return 0;\n+}"}]}