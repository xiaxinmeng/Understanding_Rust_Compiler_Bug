{"sha": "8722316bd6257294da996795313f8dc5c666f3d5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODcyMjMxNmJkNjI1NzI5NGRhOTk2Nzk1MzEzZjhkYzVjNjY2ZjNkNQ==", "commit": {"author": {"name": "Carl Love", "email": "cel@us.ibm.com", "date": "2017-02-14T23:11:19Z"}, "committer": {"name": "Carl Love", "email": "carll@gcc.gnu.org", "date": "2017-02-14T23:11:19Z"}, "message": "rs6000.c: Add case statement entry to make the xvcvuxdsp built-in argument unsigned.\n\ngcc/ChangeLog:\n\n2017-02-14  Carl Love  <cel@us.ibm.com>\n\n\t* config/rs6000/rs6000.c: Add case statement entry to make the\n\txvcvuxdsp built-in argument unsigned.\n\t* config/rs6000/vsx.md: Fix the source and return operand types so they\n\tmatch the instruction definitions from the ISA document.  Fix typo\n\tin the instruction generation for the (define_insn \"vsx_xvcvuxdsp\"\n\tstatement.\n\ngcc/testsuite/ChangeLog:\n\n2017-01-14  Carl Love  <cel@us.ibm.com>\n\n\t* gcc.target/powerpc/vsx-builtin-3.c: Add missing test case for the\n\txvcvsxdsp and xvcvuxdsp instructions.\n\nFrom-SVN: r245460", "tree": {"sha": "951fad981afdd7b6840d007506e3e94a04a93255", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/951fad981afdd7b6840d007506e3e94a04a93255"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8722316bd6257294da996795313f8dc5c666f3d5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8722316bd6257294da996795313f8dc5c666f3d5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8722316bd6257294da996795313f8dc5c666f3d5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8722316bd6257294da996795313f8dc5c666f3d5/comments", "author": {"login": "carlelove", "id": 86435705, "node_id": "MDQ6VXNlcjg2NDM1NzA1", "avatar_url": "https://avatars.githubusercontent.com/u/86435705?v=4", "gravatar_id": "", "url": "https://api.github.com/users/carlelove", "html_url": "https://github.com/carlelove", "followers_url": "https://api.github.com/users/carlelove/followers", "following_url": "https://api.github.com/users/carlelove/following{/other_user}", "gists_url": "https://api.github.com/users/carlelove/gists{/gist_id}", "starred_url": "https://api.github.com/users/carlelove/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/carlelove/subscriptions", "organizations_url": "https://api.github.com/users/carlelove/orgs", "repos_url": "https://api.github.com/users/carlelove/repos", "events_url": "https://api.github.com/users/carlelove/events{/privacy}", "received_events_url": "https://api.github.com/users/carlelove/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "584898ee80100dcdda3f0eb3cbf151976843055d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/584898ee80100dcdda3f0eb3cbf151976843055d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/584898ee80100dcdda3f0eb3cbf151976843055d"}], "stats": {"total": 48, "additions": 43, "deletions": 5}, "files": [{"sha": "df1e1420098b5415352ffe2f49ccdd7b8d105935", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8722316bd6257294da996795313f8dc5c666f3d5/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8722316bd6257294da996795313f8dc5c666f3d5/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=8722316bd6257294da996795313f8dc5c666f3d5", "patch": "@@ -1,3 +1,12 @@\n+2017-02-14  Carl Love  <cel@us.ibm.com>\n+\n+\t* config/rs6000/rs6000.c: Add case statement entry to make the\n+\txvcvuxdsp built-in argument unsigned.\n+\t* config/rs6000/vsx.md: Fix the source and return operand types so they\n+\tmatch the instruction definitions from the ISA document.  Fix typo\n+\tin the instruction generation for the (define_insn \"vsx_xvcvuxdsp\"\n+\tstatement.\n+\n 2017-02-14  Vladimir Makarov  <vmakarov@redhat.com>\n \n \tPR target/79282"}, {"sha": "9806b364b03845837c7303d0982d213142f88cf9", "filename": "gcc/config/rs6000/rs6000.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8722316bd6257294da996795313f8dc5c666f3d5/gcc%2Fconfig%2Frs6000%2Frs6000.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8722316bd6257294da996795313f8dc5c666f3d5/gcc%2Fconfig%2Frs6000%2Frs6000.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.c?ref=8722316bd6257294da996795313f8dc5c666f3d5", "patch": "@@ -18594,6 +18594,7 @@ builtin_function_type (machine_mode mode_ret, machine_mode mode_arg0,\n       break;\n \n       /* unsigned args, signed return.  */\n+    case VSX_BUILTIN_XVCVUXDSP:\n     case VSX_BUILTIN_XVCVUXDDP_UNS:\n     case ALTIVEC_BUILTIN_UNSFLOAT_V4SI_V4SF:\n       h.uns_p[1] = 1;"}, {"sha": "9c3c07da611d2f1bd5cc74849467340c76addbed", "filename": "gcc/config/rs6000/vsx.md", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8722316bd6257294da996795313f8dc5c666f3d5/gcc%2Fconfig%2Frs6000%2Fvsx.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8722316bd6257294da996795313f8dc5c666f3d5/gcc%2Fconfig%2Frs6000%2Fvsx.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Fvsx.md?ref=8722316bd6257294da996795313f8dc5c666f3d5", "patch": "@@ -1914,19 +1914,19 @@\n   [(set_attr \"type\" \"vecdouble\")])\n \n (define_insn \"vsx_xvcvsxdsp\"\n-  [(set (match_operand:V4SI 0 \"vsx_register_operand\" \"=wd,?wa\")\n-\t(unspec:V4SI [(match_operand:V2DF 1 \"vsx_register_operand\" \"wf,wa\")]\n+  [(set (match_operand:V4SF 0 \"vsx_register_operand\" \"=wd,?wa\")\n+\t(unspec:V4SF [(match_operand:V2DI 1 \"vsx_register_operand\" \"wf,wa\")]\n \t\t     UNSPEC_VSX_CVSXDSP))]\n   \"VECTOR_UNIT_VSX_P (V2DFmode)\"\n   \"xvcvsxdsp %x0,%x1\"\n   [(set_attr \"type\" \"vecfloat\")])\n \n (define_insn \"vsx_xvcvuxdsp\"\n-  [(set (match_operand:V4SI 0 \"vsx_register_operand\" \"=wd,?wa\")\n-\t(unspec:V4SI [(match_operand:V2DF 1 \"vsx_register_operand\" \"wf,wa\")]\n+  [(set (match_operand:V4SF 0 \"vsx_register_operand\" \"=wd,?wa\")\n+\t(unspec:V4SF [(match_operand:V2DI 1 \"vsx_register_operand\" \"wf,wa\")]\n \t\t     UNSPEC_VSX_CVUXDSP))]\n   \"VECTOR_UNIT_VSX_P (V2DFmode)\"\n-  \"xvcvuxwdp %x0,%x1\"\n+  \"xvcvuxdsp %x0,%x1\"\n   [(set_attr \"type\" \"vecdouble\")])\n \n ;; Convert from 32-bit to 64-bit types"}, {"sha": "db52ab932826705513c8b70f9dd0a5154268f822", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8722316bd6257294da996795313f8dc5c666f3d5/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8722316bd6257294da996795313f8dc5c666f3d5/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=8722316bd6257294da996795313f8dc5c666f3d5", "patch": "@@ -1,3 +1,8 @@\n+2017-01-14  Carl Love  <cel@us.ibm.com>\n+\n+\t* gcc.target/powerpc/vsx-builtin-3.c: Add missing test case for the\n+\txvcvsxdsp and xvcvuxdsp instructions.\n+\n 2017-02-14  Segher Boessenkool  <segher@kernel.crashing.org>\n \n \t* gcc.target/powerpc/vec-adde-int128.c: Only run if int128 exists."}, {"sha": "ff5296c87e23121e3cf67c5e870617b8bbbf065a", "filename": "gcc/testsuite/gcc.target/powerpc/vsx-builtin-3.c", "status": "modified", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8722316bd6257294da996795313f8dc5c666f3d5/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fvsx-builtin-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8722316bd6257294da996795313f8dc5c666f3d5/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fvsx-builtin-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fvsx-builtin-3.c?ref=8722316bd6257294da996795313f8dc5c666f3d5", "patch": "@@ -35,6 +35,8 @@\n /* { dg-final { scan-assembler \"xvcmpgesp\" } } */\n /* { dg-final { scan-assembler \"xxsldwi\" } } */\n /* { dg-final { scan-assembler-not \"call\" } } */\n+/* { dg-final { scan-assembler \"xvcvsxdsp\" } } */\n+/* { dg-final { scan-assembler \"xvcvuxdsp\" } } */\n \n extern __vector int si[][4];\n extern __vector short ss[][4];\n@@ -50,7 +52,9 @@ extern __vector __pixel p[][4];\n #ifdef __VSX__\n extern __vector double d[][4];\n extern __vector long sl[][4];\n+extern __vector long long sll[][4];\n extern __vector unsigned long ul[][4];\n+extern __vector unsigned long long ull[][4];\n extern __vector __bool long bl[][4];\n #endif\n \n@@ -211,3 +215,22 @@ int do_xxsldwi (void)\n   d[i][0] = __builtin_vsx_xxsldwi (d[i][1], d[i][2], 3); i++;\n   return i;\n }\n+\n+int do_xvcvsxdsp (void)\n+{\n+  int i = 0;\n+\n+  f[i][0] = __builtin_vsx_xvcvsxdsp (sll[i][1]); i++;\n+\n+  return i;\n+}\n+\n+int do_xvcvuxdsp (void)\n+{\n+  int i = 0;\n+\n+  f[i][0] = __builtin_vsx_xvcvuxdsp (ull[i][1]); i++;\n+\n+  return i;\n+}\n+"}]}