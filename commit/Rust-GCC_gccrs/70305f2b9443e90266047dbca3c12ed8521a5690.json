{"sha": "70305f2b9443e90266047dbca3c12ed8521a5690", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzAzMDVmMmI5NDQzZTkwMjY2MDQ3ZGJjYTNjMTJlZDg1MjFhNTY5MA==", "commit": {"author": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "2001-01-27T20:50:52Z"}, "committer": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "2001-01-27T20:50:52Z"}, "message": "[multiple changes]\n\n2001-01-27  Janis Johnson <janis@us.ibm.com>\n\n        * config.gcc (i[34567]86-sequent-{ptx4*,sysv4*}): Use usegas.h\n        if appropriate.\n        * config/ptx4.h: Several fixes to build on DYNIX/ptx v4.[456], and\n        to remove macro definitions that are duplicated from elfos.h.\n\n2001-01-27  Richard Henderson  <rth@redhat.com>\n\n        * config/i386/sco5gas.h: Move ...\n        * config/usegas.h: ... here.\n        * config.gcc (i[34567]86-*-sco3.2v5) [tm_file]: Update.\n\nFrom-SVN: r39303", "tree": {"sha": "e2b7634c3a67496bf457409be43bd6654d60f350", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e2b7634c3a67496bf457409be43bd6654d60f350"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/70305f2b9443e90266047dbca3c12ed8521a5690", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/70305f2b9443e90266047dbca3c12ed8521a5690", "html_url": "https://github.com/Rust-GCC/gccrs/commit/70305f2b9443e90266047dbca3c12ed8521a5690", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/70305f2b9443e90266047dbca3c12ed8521a5690/comments", "author": null, "committer": null, "parents": [{"sha": "940ff66d0ba2ba6166a9788172385415663c622c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/940ff66d0ba2ba6166a9788172385415663c622c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/940ff66d0ba2ba6166a9788172385415663c622c"}], "stats": {"total": 719, "additions": 75, "deletions": 644}, "files": [{"sha": "b42e7ca6bc6386da774d28964468b8d1f45677a5", "filename": "gcc/ChangeLog", "status": "modified", "additions": 23, "deletions": 10, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/70305f2b9443e90266047dbca3c12ed8521a5690/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/70305f2b9443e90266047dbca3c12ed8521a5690/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=70305f2b9443e90266047dbca3c12ed8521a5690", "patch": "@@ -1,3 +1,16 @@\n+2001-01-27  Janis Johnson <janis@us.ibm.com>\n+\n+\t* config.gcc (i[34567]86-sequent-{ptx4*,sysv4*}): Use usegas.h\n+\tif appropriate.\n+\t* config/ptx4.h: Several fixes to build on DYNIX/ptx v4.[456], and\n+\tto remove macro definitions that are duplicated from elfos.h.\n+\n+2001-01-27  Richard Henderson  <rth@redhat.com>\n+\n+\t* config/i386/sco5gas.h: Move ...\n+\t* config/usegas.h: ... here.\n+\t* config.gcc (i[34567]86-*-sco3.2v5) [tm_file]: Update.\n+\n 2001-01-27  Jakub Jelinek  <jakub@redhat.com>\n \n \t* c-typeck.c (struct constructor_stack): Add range_stack member.\n@@ -84,7 +97,7 @@ Fri Jan 26 11:37:26 2001  Jeffrey A Law  (law@cygnus.com)\n \n 2001-01-25  Neil Booth  <neil@daikokuya.demon.co.uk>\n \n-        * diagnostic.c (fatal): Request preprocessed source.\n+\t* diagnostic.c (fatal): Request preprocessed source.\n \n Thu Jan 25 02:01:16 2001  J\"orn Rennecke <amylaar@redhat.com>\n \n@@ -150,7 +163,7 @@ Wed Jan 24 23:51:55 2001  J\"orn Rennecke <amylaar@redhat.com>\n \n 2001-01-24  Roger Collins <roger@ProProject.com>\n \n-        * config/i386/xm-i386.h: Make __i386__ a boolean macro.\n+\t* config/i386/xm-i386.h: Make __i386__ a boolean macro.\n \n 2001-01-24  Will Cohen  <wcohen@redhat.com>\n \n@@ -221,7 +234,7 @@ Wed Jan 24 23:51:55 2001  J\"orn Rennecke <amylaar@redhat.com>\n \n 2001-01-23  Neil Booth  <neil@daikokuya.demon.co.uk>\n \n-        * c-lex.c (lex_charconst): Fix typo: s/p/str.\n+\t* c-lex.c (lex_charconst): Fix typo: s/p/str.\n \n 2001-01-23  Franz Sirl  <Franz.Sirl-kernel@lauterbach.com>\n \n@@ -242,9 +255,9 @@ Wed Jan 24 23:51:55 2001  J\"orn Rennecke <amylaar@redhat.com>\n 2001-01-23  Chris Demetriou  <cgd@sibyte.com>\n \t    Neil Booth  <neil@daikokuya.demon.co.uk>\n \n-        * cpperror.c: Merge handlers of PEDWARN and WARNING.\n-        Have -Werror make pedantic warnings errors, like the\n-        rest of GCC.\n+\t* cpperror.c: Merge handlers of PEDWARN and WARNING.\n+\tHave -Werror make pedantic warnings errors, like the\n+\trest of GCC.\n \n 2001-01-23  Phil Edwards  <pme@sources.redhat.com>\n \n@@ -345,8 +358,8 @@ Mon Jan 22 16:53:06 2001  J\"orn Rennecke <amylaar@redhat.com>\n \n 2001-01-22  Alan Modra <alan@linuxcare.com.au>\n \n-        * cppexp.c (parse_charconst):  Change `mask' type to agree\n-        with parse_escape.\n+\t* cppexp.c (parse_charconst):  Change `mask' type to agree\n+\twith parse_escape.\n \n 2001-01-21  Richard Henderson  <rth@redhat.com>\n \n@@ -423,8 +436,8 @@ Sat Jan 20 12:46:57 2001  Richard Kenner  <kenner@vlsi1.ultra.nyu.edu>\n \n 2001-01-20  Neil Booth  <neil@daikokuya.demon.co.uk>\n \n-        * cppmacro.c (funlike_invocation_p): Don't move back up to the\n-        context of the top of the stack.\n+\t* cppmacro.c (funlike_invocation_p): Don't move back up to the\n+\tcontext of the top of the stack.\n \n 2001-01-20  Jakub Jelinek  <jakub@redhat.com>\n "}, {"sha": "19358fbe591716dde508138b45c46e662c409150", "filename": "gcc/config.gcc", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/70305f2b9443e90266047dbca3c12ed8521a5690/gcc%2Fconfig.gcc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/70305f2b9443e90266047dbca3c12ed8521a5690/gcc%2Fconfig.gcc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig.gcc?ref=70305f2b9443e90266047dbca3c12ed8521a5690", "patch": "@@ -1052,6 +1052,10 @@ i[34567]86-sequent-ptx2* | i[34567]86-sequent-sysv3*)\n \t;;\n i[34567]86-sequent-ptx4* | i[34567]86-sequent-sysv4*)\n \txm_file=\"xm-alloca.h ${xm_file}\"\n+\tif test x$gas = xyes\n+\tthen\n+\t\ttm_file=\"${tm_file} usegas.h\"\n+\tfi\n \txm_defines=\"USG POSIX SMALL_ARG_MAX\"\n \txmake_file=x-svr4\n \ttm_file=i386/ptx4-i.h\n@@ -1279,7 +1283,7 @@ i[34567]86-*-sco3.2v5*)\t# 80386 running SCO Open Server 5\n \ttm_file=i386/sco5.h\n \tif test x$gas = xyes\n \tthen\n-\t\ttm_file=\"i386/sco5gas.h ${tm_file}\"\n+\t\ttm_file=\"usegas.h ${tm_file}\"\n \t\ttmake_file=i386/t-sco5gas\n \telse\n \t\ttmake_file=i386/t-sco5"}, {"sha": "de3e5d5570f1541b321704ee675bfb08a1a32be8", "filename": "gcc/config/i386/sco5gas.h", "status": "removed", "additions": 0, "deletions": 24, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/940ff66d0ba2ba6166a9788172385415663c622c/gcc%2Fconfig%2Fi386%2Fsco5gas.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/940ff66d0ba2ba6166a9788172385415663c622c/gcc%2Fconfig%2Fi386%2Fsco5gas.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fsco5gas.h?ref=940ff66d0ba2ba6166a9788172385415663c622c", "patch": "@@ -1,24 +0,0 @@\n-/* Definitions for Intel x86 running SCO OpenServer, running GNU assembler\n-   Copyright (C) 1998 Free Software Foundation, Inc.\n-\n-This file is part of GNU CC.\n-\n-GNU CC is free software; you can redistribute it and/or modify\n-it under the terms of the GNU General Public License as published by\n-the Free Software Foundation; either version 2, or (at your option)\n-any later version.\n-\n-GNU CC is distributed in the hope that it will be useful,\n-but WITHOUT ANY WARRANTY; without even the implied warranty of\n-MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-GNU General Public License for more details.\n-\n-You should have received a copy of the GNU General Public License\n-along with GNU CC; see the file COPYING.  If not, write to\n-the Free Software Foundation, 59 Temple Place - Suite 330,\n-Boston, MA 02111-1307, USA.  */\n-\n-\n-/* Just set a single flag we can test for inside of sco5.h and include it. */\n-\n-#define USE_GAS 1"}, {"sha": "c7108748d49fb995b1297a56b5ea3f0197e5f508", "filename": "gcc/config/ptx4.h", "status": "modified", "additions": 26, "deletions": 609, "changes": 635, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/70305f2b9443e90266047dbca3c12ed8521a5690/gcc%2Fconfig%2Fptx4.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/70305f2b9443e90266047dbca3c12ed8521a5690/gcc%2Fconfig%2Fptx4.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fptx4.h?ref=70305f2b9443e90266047dbca3c12ed8521a5690", "patch": "@@ -1,9 +1,10 @@\n /* Operating system specific defines to be used when targeting GCC for some\n    generic System V Release 4 system.\n-   Copyright (C) 1996, 1997, 1998, 1999, 2000 Free Software Foundation, Inc.\n+   Copyright (C) 1996, 1997, 1998, 1999, 2000, 2001 Free Software Foundation, Inc.\n    Contributed by Ron Guilmette (rfg@monkeys.com).\n    Renamed and changed to suit Dynix/ptx v4 and later.\n    Modified by Tim Wright (timw@sequent.com).\n+   Modified by Janis Johnson (janis@us.ibm.com).\n   \n This file is part of GNU CC.\n \n@@ -27,6 +28,14 @@ Boston, MA 02111-1307, USA.\n /* Define a symbol indicating that we are using svr4.h.  */\n #define USING_SVR4_H\n \n+/* Use DWARF debugging info by default.  */\n+\n+#ifndef PREFERRED_DEBUGGING_TYPE\n+#define PREFERRED_DEBUGGING_TYPE DWARF_DEBUG\n+#endif\n+\n+#include \"elfos.h\"\n+\n /* Cpp, assembler, linker, library, and startfile spec's.  */\n \n /* This defines which switch letters take arguments.  On svr4, most of\n@@ -78,8 +87,13 @@ Boston, MA 02111-1307, USA.\n */\n \n #undef ASM_SPEC\n+#ifdef USE_GAS\n+#define ASM_SPEC \\\n+  \"%{v:-V} %{Qy:} %{!Qn:-Qy} %{n} %{T} %{Ym,*} %{Yd,*} %{Wa,*:%*}\"\n+#else\n #define ASM_SPEC \\\n-  \"-no_0f_fix %{v:-V} %{Qy:} %{!Qn:-Qy} %{n} %{T} %{Ym,*} %{Yd,*} %{Wa,*:%*}\"\n+  \"-no_0f_fix -no_eflags_chk %{v:-V} %{Qy:} %{!Qn:-Qy} %{n} %{T} %{Ym,*} %{Yd,*} %{Wa,*:%*}\"\n+#endif\n \n /* svr4 assemblers need the `-' (indicating input from stdin) to come after\n    the -o option (and its argument) for some reason.  If we try to put it\n@@ -171,48 +185,13 @@ Boston, MA 02111-1307, USA.\n \t\t\t %{!traditional:values-Xa.o%s}} \\\n  \t\t\tcrtbegin.o%s\"\n \n-/* Attach a special .ident directive to the end of the file to identify\n-   the version of GCC which compiled this code.  The format of the\n-   .ident string is patterned after the ones produced by native svr4\n-   C compilers.  */\n-\n-#define IDENT_ASM_OP \"\\t.ident\\t\"\n-\n-#define ASM_FILE_END(FILE)\t\t\t\t\t\\\n-do {\t\t\t\t \t\t\t\t\\\n-     if (!flag_no_ident)\t\t\t\t\t\\\n-\tfprintf ((FILE), \"%s\\\"GCC: (GNU) %s\\\"\\n\",\t\t\\\n-\t\t IDENT_ASM_OP, version_string);\t\t\t\\\n-   } while (0)\n-\n /* Allow #sccs in preprocessor.  */\n \n #define SCCS_DIRECTIVE\n \n-/* Output #ident as a .ident.  */\n-\n-#define ASM_OUTPUT_IDENT(FILE, NAME) \\\n-  fprintf (FILE, \"%s\\\"%s\\\"\\n\", IDENT_ASM_OP, NAME);\n-\n-/* Use periods rather than dollar signs in special g++ assembler names.  */\n-\n-#define NO_DOLLAR_IN_LABEL\n-\n-/* Writing `int' for a bitfield forces int alignment for the structure.  */\n-\n-#define PCC_BITFIELD_TYPE_MATTERS 1\n-\n-/* Implicit library calls should use memcpy, not bcopy, etc.  */\n-\n-#define TARGET_MEM_FUNCTIONS\n+/* Don't use bcopy, which doesn't handle overlaps before DYNIX/ptx 4.6. */\n \n-/* Handle #pragma weak and #pragma pack.  */\n-\n-#define HANDLE_SYSV_PRAGMA\n-\n-/* System V Release 4 uses DWARF debugging info.  */\n-\n-#define DWARF_DEBUGGING_INFO\n+#undef HAVE_BCOPY\n \n /* The numbers used to denote specific machine registers in the System V\n    Release 4 DWARF debugging information are quite likely to be totally\n@@ -225,28 +204,11 @@ do {\t\t\t\t \t\t\t\t\\\n \n #undef DBX_REGISTER_NUMBER\n \n-/* gas on SVR4 supports the use of .stabs.  Permit -gstabs to be used\n-   in general, although it will only work when using gas.  */\n-\n-#define DBX_DEBUGGING_INFO\n-\n-/* Use DWARF debugging info by default.  */\n-\n-#ifndef PREFERRED_DEBUGGING_TYPE\n-#define PREFERRED_DEBUGGING_TYPE DWARF_DEBUG\n-#endif\n-\n-/* Make LBRAC and RBRAC addresses relative to the start of the\n-   function.  The native Solaris stabs debugging format works this\n-   way, gdb expects it, and it reduces the number of relocation\n-   entries.  */\n-\n-#define DBX_BLOCKS_FUNCTION_RELATIVE 1\n-\n /* When using stabs, gcc2_compiled must be a stabs entry, not an\n    ordinary symbol, or gdb won't see it.  The stabs entry must be\n    before the N_SO in order for gdb to find it.  */\n \n+#undef ASM_IDENTIFY_GCC\n #define ASM_IDENTIFY_GCC(FILE)\t\t\t\t\t\t\\\n do\t\t\t\t\t\t\t\t\t\\\n   {\t\t\t\t\t\t\t\t\t\\\n@@ -260,6 +222,7 @@ while (0)\n /* Like block addresses, stabs line numbers are relative to the\n    current function.  */\n \n+#undef ASM_OUTPUT_SOURCE_LINE\n #define ASM_OUTPUT_SOURCE_LINE(file, line)\t\t\t\t\\\n do\t\t\t\t\t\t\t\t\t\\\n   {\t\t\t\t\t\t\t\t\t\\\n@@ -273,15 +236,11 @@ do\t\t\t\t\t\t\t\t\t\\\n   }\t\t\t\t\t\t\t\t\t\\\n while (0)\n \n-/* In order for relative line numbers to work, we must output the\n-   stabs entry for the function name first.  */\n-\n-#define DBX_FUNCTION_FIRST\n-\n /* Generate a blank trailing N_SO to mark the end of the .o file, since\n    we can't depend upon the linker to mark .o file boundaries with\n    embedded stabs.  */\n \n+#undef DBX_OUTPUT_MAIN_SOURCE_FILE_END\n #define DBX_OUTPUT_MAIN_SOURCE_FILE_END(FILE, FILENAME)\t\t\t\\\n   fprintf (FILE,\t\t\t\t\t\t\t\\\n \t   \"\\t.text\\n\\t.stabs \\\"\\\",%d,0,0,.Letext\\n.Letext:\\n\", N_SO)\n@@ -301,557 +260,15 @@ while (0)\n #undef WCHAR_TYPE_SIZE\n #define WCHAR_TYPE_SIZE BITS_PER_WORD\n \n-/* This causes trouble, because it requires the host machine\n-   to support ANSI C.  */\n-/* #define MULTIBYTE_CHARS */\n-\n-#undef ASM_BYTE_OP\n-#define ASM_BYTE_OP\t\"\\t.byte\\t\"\n-\n-#undef SET_ASM_OP\n-#define SET_ASM_OP\t\"\\t.set\\t\"\n-\n-/* This is how to begin an assembly language file.  Most svr4 assemblers want\n-   at least a .file directive to come first, and some want to see a .version\n-   directive come right after that.  Here we just establish a default\n-   which generates only the .file directive.  If you need a .version\n-   directive for any specific target, you should override this definition\n-   in the target-specific file which includes this one.  */\n-\n-#undef ASM_FILE_START\n-#define ASM_FILE_START(FILE)                                    \\\n-  output_file_directive ((FILE), main_input_filename)\n-\n-/* This is how to allocate empty space in some section.  The .zero\n-   pseudo-op is used for this on most svr4 assemblers.  */\n-\n-#define SKIP_ASM_OP\t\"\\t.zero\\t\"\n-\n-#undef ASM_OUTPUT_SKIP\n-#define ASM_OUTPUT_SKIP(FILE,SIZE) \\\n-  fprintf (FILE, \"%s%u\\n\", SKIP_ASM_OP, (SIZE))\n-\n-/* The prefix to add to user-visible assembler symbols.\n-\n-   For System V Release 4 the convention is *not* to prepend a leading\n-   underscore onto user-level symbol names.  */\n-\n-#undef USER_LABEL_PREFIX\n-#define USER_LABEL_PREFIX \"\"\n-\n-/* This is how to output an internal numbered label where\n-   PREFIX is the class of label and NUM is the number within the class.\n-\n-   For most svr4 systems, the convention is that any symbol which begins\n-   with a period is not put into the linker symbol table by the assembler. */\n-\n-#undef ASM_OUTPUT_INTERNAL_LABEL\n-#define ASM_OUTPUT_INTERNAL_LABEL(FILE, PREFIX, NUM)\t\t\t\\\n-do {\t\t\t\t\t\t\t\t\t\\\n-  fprintf (FILE, \".%s%d:\\n\", PREFIX, NUM);\t\t\t\t\\\n-} while (0)\n-\n-/* This is how to store into the string LABEL\n-   the symbol_ref name of an internal numbered label where\n-   PREFIX is the class of label and NUM is the number within the class.\n-   This is suitable for output with `assemble_name'.\n-\n-   For most svr4 systems, the convention is that any symbol which begins\n-   with a period is not put into the linker symbol table by the assembler. */\n-\n-#undef ASM_GENERATE_INTERNAL_LABEL\n-#define ASM_GENERATE_INTERNAL_LABEL(LABEL, PREFIX, NUM)\t\t\t\\\n-do {\t\t\t\t\t\t\t\t\t\\\n-  sprintf (LABEL, \"*.%s%d\", PREFIX, NUM);\t\t\t\t\\\n-} while (0)\n-\n-/* Output the label which precedes a jumptable.  Note that for all svr4\n-   systems where we actually generate jumptables (which is to say every\n-   svr4 target except i386, where we use casesi instead) we put the jump-\n-   tables into the .rodata section and since other stuff could have been\n-   put into the .rodata section prior to any given jumptable, we have to\n-   make sure that the location counter for the .rodata section gets pro-\n-   perly re-aligned prior to the actual beginning of the jump table.  */\n-\n-#define ALIGN_ASM_OP \"\\t.align\\t\"\n-\n-#ifndef ASM_OUTPUT_BEFORE_CASE_LABEL\n-#define ASM_OUTPUT_BEFORE_CASE_LABEL(FILE,PREFIX,NUM,TABLE) \\\n-  ASM_OUTPUT_ALIGN ((FILE), 2);\n-#endif\n-\n-#undef ASM_OUTPUT_CASE_LABEL\n-#define ASM_OUTPUT_CASE_LABEL(FILE,PREFIX,NUM,JUMPTABLE)\t\t\\\n-  do {\t\t\t\t\t\t\t\t\t\\\n-    ASM_OUTPUT_BEFORE_CASE_LABEL (FILE, PREFIX, NUM, JUMPTABLE)\t\t\\\n-    ASM_OUTPUT_INTERNAL_LABEL (FILE, PREFIX, NUM);\t\t\t\\\n-  } while (0)\n-\n-/* The standard SVR4 assembler seems to require that certain builtin\n-   library routines (e.g. .udiv) be explicitly declared as .globl\n-   in each assembly file where they are referenced.  */\n-\n-#define ASM_OUTPUT_EXTERNAL_LIBCALL(FILE, FUN)\t\t\t\t\\\n-  ASM_GLOBALIZE_LABEL (FILE, XSTR (FUN, 0))\n-\n-/* This says how to output assembler code to declare an\n-   uninitialized external linkage data object.  Under SVR4,\n-   the linker seems to want the alignment of data objects\n-   to depend on their types.  We do exactly that here.  */\n-\n-#define COMMON_ASM_OP\t\"\\t.comm\\t\"\n+/* This says how to output assembler code to declare an uninitialized\n+   external linkage data item.  There's a bug in the DYNIX/ptx linker\n+   (PR 254649) when the alignment for such an object is specified, so\n+   ignore the ALIGN parameter. */\n \n #undef ASM_OUTPUT_ALIGNED_COMMON\n #define ASM_OUTPUT_ALIGNED_COMMON(FILE, NAME, SIZE, ALIGN)\t\t\\\n do {\t\t\t\t\t\t\t\t\t\\\n   fprintf ((FILE), \"%s\", COMMON_ASM_OP);\t\t\t\t\\\n   assemble_name ((FILE), (NAME));\t\t\t\t\t\\\n-  fprintf ((FILE), \",%u,%u\\n\", (SIZE), (ALIGN) / BITS_PER_UNIT);\t\\\n-} while (0)\n-\n-/* This says how to output assembler code to declare an\n-   uninitialized internal linkage data object.  Under SVR4,\n-   the linker seems to want the alignment of data objects\n-   to depend on their types.  We do exactly that here.  */\n-\n-#define LOCAL_ASM_OP\t\"\\t.local\\t\"\n-\n-#undef ASM_OUTPUT_ALIGNED_LOCAL\n-#define ASM_OUTPUT_ALIGNED_LOCAL(FILE, NAME, SIZE, ALIGN)\t\t\\\n-do {\t\t\t\t\t\t\t\t\t\\\n-  fprintf ((FILE), \"%s\", LOCAL_ASM_OP);\t\t\t\t\t\\\n-  assemble_name ((FILE), (NAME));\t\t\t\t\t\\\n-  fprintf ((FILE), \"\\n\");\t\t\t\t\t\t\\\n-  ASM_OUTPUT_ALIGNED_COMMON (FILE, NAME, SIZE, ALIGN);\t\t\t\\\n+  fprintf ((FILE), \",%u\\n\", (SIZE));\t\t\t\t\t\\\n } while (0)\n-\n-/* This is the pseudo-op used to generate a 32-bit word of data with a\n-   specific value in some section.  This is the same for all known svr4\n-   assemblers.  */\n-\n-#define INT_ASM_OP\t\t\"\\t.long\\t\"\n-\n-/* This is the pseudo-op used to generate a contiguous sequence of byte\n-   values from a double-quoted string WITHOUT HAVING A TERMINATING NUL\n-   AUTOMATICALLY APPENDED.  This is the same for most svr4 assemblers.  */\n-\n-#undef ASCII_DATA_ASM_OP\n-#define ASCII_DATA_ASM_OP\t\"\\t.ascii\\t\"\n-\n-/* Support const sections and the ctors and dtors sections for g++.\n-   Note that there appears to be two different ways to support const\n-   sections at the moment.  You can either #define the symbol\n-   READONLY_DATA_SECTION (giving it some code which switches to the\n-   readonly data section) or else you can #define the symbols\n-   EXTRA_SECTIONS, EXTRA_SECTION_FUNCTIONS, SELECT_SECTION, and\n-   SELECT_RTX_SECTION.  We do both here just to be on the safe side.  */\n-\n-#define USE_CONST_SECTION\t1\n-\n-#define CONST_SECTION_ASM_OP\t\"\\t.section\\t.rodata\"\n-\n-/* Define the pseudo-ops used to switch to the .ctors and .dtors sections.\n-\n-   Note that we want to give these sections the SHF_WRITE attribute\n-   because these sections will actually contain data (i.e. tables of\n-   addresses of functions in the current root executable or shared library\n-   file) and, in the case of a shared library, the relocatable addresses\n-   will have to be properly resolved/relocated (and then written into) by\n-   the dynamic linker when it actually attaches the given shared library\n-   to the executing process.  (Note that on SVR4, you may wish to use the\n-   `-z text' option to the ELF linker, when building a shared library, as\n-   an additional check that you are doing everything right.  But if you do\n-   use the `-z text' option when building a shared library, you will get\n-   errors unless the .ctors and .dtors sections are marked as writable\n-   via the SHF_WRITE attribute.)  */\n-\n-#define CTORS_SECTION_ASM_OP\t\"\\t.section\\t.ctors,\\\"aw\\\"\"\n-#define DTORS_SECTION_ASM_OP\t\"\\t.section\\t.dtors,\\\"aw\\\"\"\n-\n-/* On svr4, we *do* have support for the .init and .fini sections, and we\n-   can put stuff in there to be executed before and after `main'.  We let\n-   crtstuff.c and other files know this by defining the following symbols.\n-   The definitions say how to change sections to the .init and .fini\n-   sections.  This is the same for all known svr4 assemblers.  */\n-\n-#define INIT_SECTION_ASM_OP\t\"\\t.section\\t.init\"\n-#define FINI_SECTION_ASM_OP\t\"\\t.section\\t.fini\"\n-\n-/* A default list of other sections which we might be \"in\" at any given\n-   time.  For targets that use additional sections (e.g. .tdesc) you\n-   should override this definition in the target-specific file which\n-   includes this file.  */\n-\n-#undef EXTRA_SECTIONS\n-#define EXTRA_SECTIONS in_const, in_ctors, in_dtors\n-\n-/* A default list of extra section function definitions.  For targets\n-   that use additional sections (e.g. .tdesc) you should override this\n-   definition in the target-specific file which includes this file.  */\n-\n-#undef EXTRA_SECTION_FUNCTIONS\n-#define EXTRA_SECTION_FUNCTIONS\t\t\t\t\t\t\\\n-  CONST_SECTION_FUNCTION\t\t\t\t\t\t\\\n-  CTORS_SECTION_FUNCTION\t\t\t\t\t\t\\\n-  DTORS_SECTION_FUNCTION\n-\n-#define READONLY_DATA_SECTION() const_section ()\n-\n-#define CONST_SECTION_FUNCTION\t\t\t\t\t\t\\\n-void\t\t\t\t\t\t\t\t\t\\\n-const_section ()\t\t\t\t\t\t\t\\\n-{\t\t\t\t\t\t\t\t\t\\\n-  if (!USE_CONST_SECTION)\t\t\t\t\t\t\\\n-    text_section();\t\t\t\t\t\t\t\\\n-  else if (in_section != in_const)\t\t\t\t\t\\\n-    {\t\t\t\t\t\t\t\t\t\\\n-      fprintf (asm_out_file, \"%s\\n\", CONST_SECTION_ASM_OP);\t\t\\\n-      in_section = in_const;\t\t\t\t\t\t\\\n-    }\t\t\t\t\t\t\t\t\t\\\n-}\n-\n-#define CTORS_SECTION_FUNCTION\t\t\t\t\t\t\\\n-void\t\t\t\t\t\t\t\t\t\\\n-ctors_section ()\t\t\t\t\t\t\t\\\n-{\t\t\t\t\t\t\t\t\t\\\n-  if (in_section != in_ctors)\t\t\t\t\t\t\\\n-    {\t\t\t\t\t\t\t\t\t\\\n-      fprintf (asm_out_file, \"%s\\n\", CTORS_SECTION_ASM_OP);\t\t\\\n-      in_section = in_ctors;\t\t\t\t\t\t\\\n-    }\t\t\t\t\t\t\t\t\t\\\n-}\n-\n-#define DTORS_SECTION_FUNCTION\t\t\t\t\t\t\\\n-void\t\t\t\t\t\t\t\t\t\\\n-dtors_section ()\t\t\t\t\t\t\t\\\n-{\t\t\t\t\t\t\t\t\t\\\n-  if (in_section != in_dtors)\t\t\t\t\t\t\\\n-    {\t\t\t\t\t\t\t\t\t\\\n-      fprintf (asm_out_file, \"%s\\n\", DTORS_SECTION_ASM_OP);\t\t\\\n-      in_section = in_dtors;\t\t\t\t\t\t\\\n-    }\t\t\t\t\t\t\t\t\t\\\n-}\n-\n-/* Switch into a generic section.\n-   This is currently only used to support section attributes.\n-\n-   We make the section read-only and executable for a function decl,\n-   read-only for a const data decl, and writable for a non-const data decl. */\n-#define ASM_OUTPUT_SECTION_NAME(FILE, DECL, NAME, RELOC) \\\n-  fprintf (FILE, \".section\\t%s,\\\"%s\\\",@progbits\\n\", NAME, \\\n-\t   (DECL) && TREE_CODE (DECL) == FUNCTION_DECL ? \"ax\" : \\\n-\t   (DECL) && DECL_READONLY_SECTION (DECL, RELOC) ? \"a\" : \"aw\")\n-\n-\n-/* A C statement (sans semicolon) to output an element in the table of\n-   global constructors.  */\n-#define ASM_OUTPUT_CONSTRUCTOR(FILE,NAME)\t\t\t\t\\\n-  do {\t\t\t\t\t\t\t\t\t\\\n-    ctors_section ();\t\t\t\t\t\t\t\\\n-    fprintf (FILE, \"%s\", INT_ASM_OP);\t\t\t\t\t\\\n-    assemble_name (FILE, NAME);\t\t\t\t\t\t\\\n-    fprintf (FILE, \"\\n\");\t\t\t\t\t\t\\\n-  } while (0)\n-\n-/* A C statement (sans semicolon) to output an element in the table of\n-   global destructors.  */\n-#define ASM_OUTPUT_DESTRUCTOR(FILE,NAME)       \t\t\t\t\\\n-  do {\t\t\t\t\t\t\t\t\t\\\n-    dtors_section ();                   \t\t\t\t\\\n-    fprintf (FILE, \"%s\", INT_ASM_OP);\t\t\t\t\t\\\n-    assemble_name (FILE, NAME);              \t\t\t\t\\\n-    fprintf (FILE, \"\\n\");\t\t\t\t\t\t\\\n-  } while (0)\n-\n-/* A C statement or statements to switch to the appropriate\n-   section for output of DECL.  DECL is either a `VAR_DECL' node\n-   or a constant of some sort.  RELOC indicates whether forming\n-   the initial value of DECL requires link-time relocations.  */\n-\n-#define SELECT_SECTION(DECL,RELOC)\t\t\t\t\t\\\n-{\t\t\t\t\t\t\t\t\t\\\n-  if (TREE_CODE (DECL) == STRING_CST)\t\t\t\t\t\\\n-    {\t\t\t\t\t\t\t\t\t\\\n-      if (! flag_writable_strings)\t\t\t\t\t\\\n-\tconst_section ();\t\t\t\t\t\t\\\n-      else\t\t\t\t\t\t\t\t\\\n-\tdata_section ();\t\t\t\t\t\t\\\n-    }\t\t\t\t\t\t\t\t\t\\\n-  else if (TREE_CODE (DECL) == VAR_DECL)\t\t\t\t\\\n-    {\t\t\t\t\t\t\t\t\t\\\n-      if ((flag_pic && RELOC)\t\t\t\t\t\t\\\n-\t  || !TREE_READONLY (DECL) || TREE_SIDE_EFFECTS (DECL)\t\t\\\n-\t  || !DECL_INITIAL (DECL)\t\t\t\t\t\\\n-\t  || (DECL_INITIAL (DECL) != error_mark_node\t\t\t\\\n-\t      && !TREE_CONSTANT (DECL_INITIAL (DECL))))\t\t\t\\\n-\tdata_section ();\t\t\t\t\t\t\\\n-      else\t\t\t\t\t\t\t\t\\\n-\tconst_section ();\t\t\t\t\t\t\\\n-    }\t\t\t\t\t\t\t\t\t\\\n-  else\t\t\t\t\t\t\t\t\t\\\n-    const_section ();\t\t\t\t\t\t\t\\\n-}\n-\n-/* A C statement or statements to switch to the appropriate\n-   section for output of RTX in mode MODE.  RTX is some kind\n-   of constant in RTL.  The argument MODE is redundant except\n-   in the case of a `const_int' rtx.  Currently, these always\n-   go into the const section.  */\n-\n-#undef SELECT_RTX_SECTION\n-#define SELECT_RTX_SECTION(MODE,RTX) const_section()\n-\n-/* Define the strings used for the special svr4 .type and .size directives.\n-   These strings generally do not vary from one system running svr4 to\n-   another, but if a given system (e.g. m88k running svr) needs to use\n-   different pseudo-op names for these, they may be overridden in the\n-   file which includes this one.  */\n-\n-#define TYPE_ASM_OP\t\"\\t.type\\t\"\n-#define SIZE_ASM_OP\t\"\\t.size\\t\"\n-\n-/* This is how we tell the assembler that a symbol is weak.  */\n-\n-#define ASM_WEAKEN_LABEL(FILE,NAME) \\\n-  do { fputs (\"\\t.weak\\t\", FILE); assemble_name (FILE, NAME); \\\n-       fputc ('\\n', FILE); } while (0)\n-\n-/* The following macro defines the format used to output the second\n-   operand of the .type assembler directive.  Different svr4 assemblers\n-   expect various different forms for this operand.  The one given here\n-   is just a default.  You may need to override it in your machine-\n-   specific tm.h file (depending upon the particulars of your assembler).  */\n-\n-#define TYPE_OPERAND_FMT\t\"@%s\"\n-\n-/* Write the extra assembler code needed to declare a function's result.\n-   Most svr4 assemblers don't require any special declaration of the\n-   result value, but there are exceptions.  */\n-\n-#ifndef ASM_DECLARE_RESULT\n-#define ASM_DECLARE_RESULT(FILE, RESULT)\n-#endif\n-\n-/* These macros generate the special .type and .size directives which\n-   are used to set the corresponding fields of the linker symbol table\n-   entries in an ELF object file under SVR4.  These macros also output\n-   the starting labels for the relevant functions/objects.  */\n-\n-/* Write the extra assembler code needed to declare a function properly.\n-   Some svr4 assemblers need to also have something extra said about the\n-   function's return value.  We allow for that here.  */\n-\n-#define ASM_DECLARE_FUNCTION_NAME(FILE, NAME, DECL)\t\t\t\\\n-  do {\t\t\t\t\t\t\t\t\t\\\n-    fprintf (FILE, \"%s\", TYPE_ASM_OP);\t\t\t\t\t\\\n-    assemble_name (FILE, NAME);\t\t\t\t\t\t\\\n-    putc (',', FILE);\t\t\t\t\t\t\t\\\n-    fprintf (FILE, TYPE_OPERAND_FMT, \"function\");\t\t\t\\\n-    putc ('\\n', FILE);\t\t\t\t\t\t\t\\\n-    ASM_DECLARE_RESULT (FILE, DECL_RESULT (DECL));\t\t\t\\\n-    ASM_OUTPUT_LABEL(FILE, NAME);\t\t\t\t\t\\\n-  } while (0)\n-\n-/* Write the extra assembler code needed to declare an object properly.  */\n-\n-#define ASM_DECLARE_OBJECT_NAME(FILE, NAME, DECL)\t\t\t\\\n-  do {\t\t\t\t\t\t\t\t\t\\\n-    fprintf (FILE, \"%s\", TYPE_ASM_OP);\t\t\t\t\t\\\n-    assemble_name (FILE, NAME);\t\t\t\t\t\t\\\n-    putc (',', FILE);\t\t\t\t\t\t\t\\\n-    fprintf (FILE, TYPE_OPERAND_FMT, \"object\");\t\t\t\t\\\n-    putc ('\\n', FILE);\t\t\t\t\t\t\t\\\n-    size_directive_output = 0;\t\t\t\t\t\t\\\n-    if (!flag_inhibit_size_directive && DECL_SIZE (DECL))\t\t\\\n-      {\t\t\t\t\t\t\t\t\t\\\n-\tsize_directive_output = 1;\t\t\t\t\t\\\n-\tfprintf (FILE, \"%s\", SIZE_ASM_OP);\t\t\t\t\\\n-\tassemble_name (FILE, NAME);\t\t\t\t\t\\\n-\tfprintf (FILE, \",%d\\n\",  int_size_in_bytes (TREE_TYPE (DECL)));\t\\\n-      }\t\t\t\t\t\t\t\t\t\\\n-    ASM_OUTPUT_LABEL(FILE, NAME);\t\t\t\t\t\\\n-  } while (0)\n-\n-/* Output the size directive for a decl in rest_of_decl_compilation\n-   in the case where we did not do so before the initializer.\n-   Once we find the error_mark_node, we know that the value of\n-   size_directive_output was set\n-   by ASM_DECLARE_OBJECT_NAME when it was run for the same decl.  */\n-\n-#define ASM_FINISH_DECLARE_OBJECT(FILE, DECL, TOP_LEVEL, AT_END)\t \\\n-do {\t\t\t\t\t\t\t\t\t \\\n-     const char *name = XSTR (XEXP (DECL_RTL (DECL), 0), 0);\t\t \\\n-     if (!flag_inhibit_size_directive && DECL_SIZE (DECL)\t\t \\\n-         && ! AT_END && TOP_LEVEL\t\t\t\t\t \\\n-\t && DECL_INITIAL (DECL) == error_mark_node\t\t\t \\\n-\t && !size_directive_output)\t\t\t\t\t \\\n-       {\t\t\t\t\t\t\t\t \\\n-\t size_directive_output = 1;\t\t\t\t\t \\\n-\t fprintf (FILE, \"%s\", SIZE_ASM_OP);\t\t\t\t \\\n-\t assemble_name (FILE, name);\t\t\t\t\t \\\n-\t fprintf (FILE, \",%d\\n\",  int_size_in_bytes (TREE_TYPE (DECL))); \\\n-       }\t\t\t\t\t\t\t\t \\\n-   } while (0)\n-\n-/* This is how to declare the size of a function.  */\n-\n-#define ASM_DECLARE_FUNCTION_SIZE(FILE, FNAME, DECL)\t\t\t\\\n-  do {\t\t\t\t\t\t\t\t\t\\\n-    if (!flag_inhibit_size_directive)\t\t\t\t\t\\\n-      {\t\t\t\t\t\t\t\t\t\\\n-        char label[256];\t\t\t\t\t\t\\\n-\tstatic int labelno;\t\t\t\t\t\t\\\n-\tlabelno++;\t\t\t\t\t\t\t\\\n-\tASM_GENERATE_INTERNAL_LABEL (label, \"Lfe\", labelno);\t\t\\\n-\tASM_OUTPUT_INTERNAL_LABEL (FILE, \"Lfe\", labelno);\t\t\\\n-\tfprintf (FILE, \"%s\", SIZE_ASM_OP);\t\t\t\t\\\n-\tassemble_name (FILE, (FNAME));\t\t\t\t\t\\\n-        fprintf (FILE, \",\");\t\t\t\t\t\t\\\n-\tassemble_name (FILE, label);\t\t\t\t\t\\\n-        fprintf (FILE, \"-\");\t\t\t\t\t\t\\\n-\tassemble_name (FILE, (FNAME));\t\t\t\t\t\\\n-\tputc ('\\n', FILE);\t\t\t\t\t\t\\\n-      }\t\t\t\t\t\t\t\t\t\\\n-  } while (0)\n-\n-/* A table of bytes codes used by the ASM_OUTPUT_ASCII and\n-   ASM_OUTPUT_LIMITED_STRING macros.  Each byte in the table\n-   corresponds to a particular byte value [0..255].  For any\n-   given byte value, if the value in the corresponding table\n-   position is zero, the given character can be output directly.\n-   If the table value is 1, the byte must be output as a \\ooo\n-   octal escape.  If the tables value is anything else, then the\n-   byte value should be output as a \\ followed by the value\n-   in the table.  Note that we can use standard UN*X escape\n-   sequences for many control characters, but we don't use\n-   \\a to represent BEL because some svr4 assemblers (e.g. on\n-   the i386) don't know about that.  Also, we don't use \\v\n-   since some versions of gas, such as 2.2 did not accept it.  */\n-\n-#define ESCAPES \\\n-\"\\1\\1\\1\\1\\1\\1\\1\\1btn\\1fr\\1\\1\\1\\1\\1\\1\\1\\1\\1\\1\\1\\1\\1\\1\\1\\1\\1\\1\\\n-\\0\\0\\\"\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\\n-\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\\\\\0\\0\\0\\\n-\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\1\\\n-\\1\\1\\1\\1\\1\\1\\1\\1\\1\\1\\1\\1\\1\\1\\1\\1\\1\\1\\1\\1\\1\\1\\1\\1\\1\\1\\1\\1\\1\\1\\1\\1\\\n-\\1\\1\\1\\1\\1\\1\\1\\1\\1\\1\\1\\1\\1\\1\\1\\1\\1\\1\\1\\1\\1\\1\\1\\1\\1\\1\\1\\1\\1\\1\\1\\1\\\n-\\1\\1\\1\\1\\1\\1\\1\\1\\1\\1\\1\\1\\1\\1\\1\\1\\1\\1\\1\\1\\1\\1\\1\\1\\1\\1\\1\\1\\1\\1\\1\\1\\\n-\\1\\1\\1\\1\\1\\1\\1\\1\\1\\1\\1\\1\\1\\1\\1\\1\\1\\1\\1\\1\\1\\1\\1\\1\\1\\1\\1\\1\\1\\1\\1\\1\"\n-\n-/* Some svr4 assemblers have a limit on the number of characters which\n-   can appear in the operand of a .string directive.  If your assembler\n-   has such a limitation, you should define STRING_LIMIT to reflect that\n-   limit.  Note that at least some svr4 assemblers have a limit on the\n-   actual number of bytes in the double-quoted string, and that they\n-   count each character in an escape sequence as one byte.  Thus, an\n-   escape sequence like \\377 would count as four bytes.\n-\n-   If your target assembler doesn't support the .string directive, you\n-   should define this to zero.\n-*/\n-\n-#define STRING_LIMIT\t((unsigned) 256)\n-\n-#define STRING_ASM_OP\t\"\\t.string\\t\"\n-\n-/* The routine used to output NUL terminated strings.  We use a special\n-   version of this for most svr4 targets because doing so makes the\n-   generated assembly code more compact (and thus faster to assemble)\n-   as well as more readable, especially for targets like the i386\n-   (where the only alternative is to output character sequences as\n-   comma separated lists of numbers).   */\n-\n-#define ASM_OUTPUT_LIMITED_STRING(FILE, STR)\t\t\t\t\\\n-  do\t\t\t\t\t\t\t\t\t\\\n-    {\t\t\t\t\t\t\t\t\t\\\n-      register const unsigned char *_limited_str =\t\t\t\\\n-        (const unsigned char *) (STR);\t\t\t\t\t\\\n-      register unsigned ch;\t\t\t\t\t\t\\\n-      fprintf ((FILE), \"%s\\\"\", STRING_ASM_OP);\t\t\t\t\\\n-      for (; ch = *_limited_str; _limited_str++)\t\t\t\\\n-        {\t\t\t\t\t\t\t\t\\\n-\t  register int escape;\t\t\t\t\t\t\\\n-\t  switch (escape = ESCAPES[ch])\t\t\t\t\t\\\n-\t    {\t\t\t\t\t\t\t\t\\\n-\t    case 0:\t\t\t\t\t\t\t\\\n-\t      putc (ch, (FILE));\t\t\t\t\t\\\n-\t      break;\t\t\t\t\t\t\t\\\n-\t    case 1:\t\t\t\t\t\t\t\\\n-\t      fprintf ((FILE), \"\\\\%03o\", ch);\t\t\t\t\\\n-\t      break;\t\t\t\t\t\t\t\\\n-\t    default:\t\t\t\t\t\t\t\\\n-\t      putc ('\\\\', (FILE));\t\t\t\t\t\\\n-\t      putc (escape, (FILE));\t\t\t\t\t\\\n-\t      break;\t\t\t\t\t\t\t\\\n-\t    }\t\t\t\t\t\t\t\t\\\n-        }\t\t\t\t\t\t\t\t\\\n-      fprintf ((FILE), \"\\\"\\n\");\t\t\t\t\t\t\\\n-    }\t\t\t\t\t\t\t\t\t\\\n-  while (0)\n-\n-/* The routine used to output sequences of byte values.  We use a special\n-   version of this for most svr4 targets because doing so makes the\n-   generated assembly code more compact (and thus faster to assemble)\n-   as well as more readable.  Note that if we find subparts of the\n-   character sequence which end with NUL (and which are shorter than\n-   STRING_LIMIT) we output those using ASM_OUTPUT_LIMITED_STRING.  */\n-\n-#undef ASM_OUTPUT_ASCII\n-#define ASM_OUTPUT_ASCII(FILE, STR, LENGTH)\t\t\t\t\\\n-  do\t\t\t\t\t\t\t\t\t\\\n-    {\t\t\t\t\t\t\t\t\t\\\n-      register const unsigned char *_ascii_bytes =\t\t\t\\\n-        (const unsigned char *) (STR);\t\t\t\t\t\\\n-      register const unsigned char *limit = _ascii_bytes + (LENGTH);\t\\\n-      register unsigned bytes_in_chunk = 0;\t\t\t\t\\\n-      for (; _ascii_bytes < limit; _ascii_bytes++)\t\t\t\\\n-        {\t\t\t\t\t\t\t\t\\\n-\t  register const unsigned char *p;\t\t\t\t\\\n-\t  if (bytes_in_chunk >= 60)\t\t\t\t\t\\\n-\t    {\t\t\t\t\t\t\t\t\\\n-\t      fprintf ((FILE), \"\\\"\\n\");\t\t\t\t\t\\\n-\t      bytes_in_chunk = 0;\t\t\t\t\t\\\n-\t    }\t\t\t\t\t\t\t\t\\\n-\t  for (p = _ascii_bytes; p < limit && *p != '\\0'; p++)\t\t\\\n-\t    continue;\t\t\t\t\t\t\t\\\n-\t  if (p < limit && (p - _ascii_bytes) <= STRING_LIMIT)\t\t\\\n-\t    {\t\t\t\t\t\t\t\t\\\n-\t      if (bytes_in_chunk > 0)\t\t\t\t\t\\\n-\t\t{\t\t\t\t\t\t\t\\\n-\t\t  fprintf ((FILE), \"\\\"\\n\");\t\t\t\t\\\n-\t\t  bytes_in_chunk = 0;\t\t\t\t\t\\\n-\t\t}\t\t\t\t\t\t\t\\\n-\t      ASM_OUTPUT_LIMITED_STRING ((FILE), _ascii_bytes);\t\t\\\n-\t      _ascii_bytes = p;\t\t\t\t\t\t\\\n-\t    }\t\t\t\t\t\t\t\t\\\n-\t  else\t\t\t\t\t\t\t\t\\\n-\t    {\t\t\t\t\t\t\t\t\\\n-\t      register int escape;\t\t\t\t\t\\\n-\t      register unsigned ch;\t\t\t\t\t\\\n-\t      if (bytes_in_chunk == 0)\t\t\t\t\t\\\n-\t\tfprintf ((FILE), \"%s\\\"\", ASCII_DATA_ASM_OP);\t\t\\\n-\t      switch (escape = ESCAPES[ch = *_ascii_bytes])\t\t\\\n-\t\t{\t\t\t\t\t\t\t\\\n-\t\tcase 0:\t\t\t\t\t\t\t\\\n-\t\t  putc (ch, (FILE));\t\t\t\t\t\\\n-\t\t  bytes_in_chunk++;\t\t\t\t\t\\\n-\t\t  break;\t\t\t\t\t\t\\\n-\t\tcase 1:\t\t\t\t\t\t\t\\\n-\t\t  fprintf ((FILE), \"\\\\%03o\", ch);\t\t\t\\\n-\t\t  bytes_in_chunk += 4;\t\t\t\t\t\\\n-\t\t  break;\t\t\t\t\t\t\\\n-\t\tdefault:\t\t\t\t\t\t\\\n-\t\t  putc ('\\\\', (FILE));\t\t\t\t\t\\\n-\t\t  putc (escape, (FILE));\t\t\t\t\\\n-\t\t  bytes_in_chunk += 2;\t\t\t\t\t\\\n-\t\t  break;\t\t\t\t\t\t\\\n-\t\t}\t\t\t\t\t\t\t\\\n-\t    }\t\t\t\t\t\t\t\t\\\n-\t}\t\t\t\t\t\t\t\t\\\n-      if (bytes_in_chunk > 0)\t\t\t\t\t\t\\\n-        fprintf ((FILE), \"\\\"\\n\");\t\t\t\t\t\\\n-    }\t\t\t\t\t\t\t\t\t\\\n-  while (0)\n-\n-/* All SVR4 targets use the ELF object file format.  */\n-#define OBJECT_FORMAT_ELF"}, {"sha": "cf20c558e36d306799a83a395f8189a670c7034c", "filename": "gcc/config/usegas.h", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/70305f2b9443e90266047dbca3c12ed8521a5690/gcc%2Fconfig%2Fusegas.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/70305f2b9443e90266047dbca3c12ed8521a5690/gcc%2Fconfig%2Fusegas.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fusegas.h?ref=70305f2b9443e90266047dbca3c12ed8521a5690", "patch": "@@ -0,0 +1,21 @@\n+/* Copyright (C) 2001 Free Software Foundation, Inc.\n+\n+   This file is part of GNU CC.\n+\n+   GNU CC is free software; you can redistribute it and/or modify\n+   it under the terms of the GNU General Public License as published by\n+   the Free Software Foundation; either version 2, or (at your option)\n+   any later version.\n+\n+   GNU CC is distributed in the hope that it will be useful,\n+   but WITHOUT ANY WARRANTY; without even the implied warranty of\n+   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+   GNU General Public License for more details.\n+\n+   You should have received a copy of the GNU General Public License\n+   along with GNU CC; see the file COPYING.  If not, write to\n+   the Free Software Foundation, 59 Temple Place - Suite 330,\n+   Boston, MA 02111-1307, USA.  */\n+\n+/* Just set a single flag we can test for it inside other files.  */\n+#define USE_GAS 1"}]}