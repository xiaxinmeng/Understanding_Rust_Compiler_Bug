{"sha": "c37845f84190677a661e7ea45f5cd2b2c096c028", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzM3ODQ1Zjg0MTkwNjc3YTY2MWU3ZWE0NWY1Y2QyYjJjMDk2YzAyOA==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2009-07-23T12:41:47Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2009-07-23T12:41:47Z"}, "message": "[multiple changes]\n\n2009-07-23  Robert Dewar  <dewar@adacore.com>\n\n\t* scos.ads: Minor reformatting.\n\n2009-07-23  Pascal Obry  <obry@adacore.com>\n\n\t* prj-nmsc.adb: Fix spec/body naming extension on case insensitive\n\tsystems.\n\nFrom-SVN: r150006", "tree": {"sha": "9f9247ebeace64a225f5e20fa9ca70788bda0ad2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9f9247ebeace64a225f5e20fa9ca70788bda0ad2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c37845f84190677a661e7ea45f5cd2b2c096c028", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c37845f84190677a661e7ea45f5cd2b2c096c028", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c37845f84190677a661e7ea45f5cd2b2c096c028", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c37845f84190677a661e7ea45f5cd2b2c096c028/comments", "author": null, "committer": null, "parents": [{"sha": "d58b95150676722940a72f068927687a8c7d7391", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d58b95150676722940a72f068927687a8c7d7391", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d58b95150676722940a72f068927687a8c7d7391"}], "stats": {"total": 74, "additions": 56, "deletions": 18}, "files": [{"sha": "eddc1449dbe9c9aab44b7e58fe6efbf075cf913b", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 33, "deletions": 0, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c37845f84190677a661e7ea45f5cd2b2c096c028/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c37845f84190677a661e7ea45f5cd2b2c096c028/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=c37845f84190677a661e7ea45f5cd2b2c096c028", "patch": "@@ -1,3 +1,36 @@\n+2009-07-23  Gary Dismukes  <dismukes@adacore.com>\n+\n+\t* sem_aggr.adb (Resolve_Extension_Aggregate): Report an error when the\n+\tancestor part is a call to a limited function with an unconstrained\n+\tresult subtype unless the aggregate has a null extension type.\n+\t* sem_ch3.adb (Is_Null_Extension): Use the base type when retrieving\n+\tthe parent type declaration to avoid blowups on subtype cases.\n+\n+2009-07-23  Robert Dewar  <dewar@adacore.com>\n+\n+\t* par-ch4.adb (P_Aggregate_Or_Paren_Expr): Better message for missing\n+\tcomma.\n+\n+\t* sem_util.adb (Wrong_Type): Special message for cases like A and B = 0\n+\n+\t* s-regexp.adb: Minor reformatting\n+\t* scos.ads: Minor reformatting.\n+\n+2009-07-23  Arnaud Charlet  <charlet@adacore.com>\n+\n+\t* freeze.adb (Set_Small_Size): Remove extra space for consistency with\n+\tother similar messages.\n+\t* sem_prag.adb (Freeze_Record_Type, Freeze_Entity): Disable error\n+\tmessages/implicit packing in CodePeer mode.\n+\t(Analyze_Pragma [case pragma Pack]): Ignore pragma in CodePeer mode.\n+\t* errout.adb (Special_Msg_Delete): Suppress 'size too small' message in\n+\tCodePeer mode.\n+\n+2009-07-23  Pascal Obry  <obry@adacore.com>\n+\n+\t* prj-nmsc.adb: Fix spec/body naming extension on case insensitive\n+\tsystems.\n+\n 2009-07-23  Robert Dewar  <dewar@adacore.com>\n \n \t* einfo.ads, g-ssvety.ads, s-regexp.adb, g-sse.ads: Update comment."}, {"sha": "df29bb55d50cf6aa555f7ed22ad27c0bc4693ff3", "filename": "gcc/ada/prj-nmsc.adb", "status": "modified", "additions": 19, "deletions": 16, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c37845f84190677a661e7ea45f5cd2b2c096c028/gcc%2Fada%2Fprj-nmsc.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c37845f84190677a661e7ea45f5cd2b2c096c028/gcc%2Fada%2Fprj-nmsc.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-nmsc.adb?ref=c37845f84190677a661e7ea45f5cd2b2c096c028", "patch": "@@ -105,7 +105,7 @@ package body Prj.Nmsc is\n       Key        => File_Name_Type,\n       Hash       => Hash,\n       Equal      => \"=\");\n-   --  A hash table to store the base names of excluded files, if any.\n+   --  A hash table to store the base names of excluded files, if any\n \n    package Object_File_Names_Htable is new GNAT.Dynamic_HTables.Simple_HTable\n      (Header_Num => Header_Num,\n@@ -163,7 +163,7 @@ package body Prj.Nmsc is\n    procedure Check\n      (Project     : Project_Id;\n       Data        : in out Tree_Processing_Data);\n-   --  Process the naming scheme for a single project.\n+   --  Process the naming scheme for a single project\n \n    procedure Initialize\n      (Data    : in out Project_Processing_Data;\n@@ -232,10 +232,10 @@ package body Prj.Nmsc is\n    --  Check that a name is a valid Ada unit name\n \n    procedure Check_Package_Naming\n-     (Project        : Project_Id;\n-      Data           : in out Tree_Processing_Data;\n-      Bodies         : out Array_Element_Id;\n-      Specs          : out Array_Element_Id);\n+     (Project : Project_Id;\n+      Data    : in out Tree_Processing_Data;\n+      Bodies  : out Array_Element_Id;\n+      Specs   : out Array_Element_Id);\n    --  Check the naming scheme part of Data, and initialize the naming scheme\n    --  data in the config of the various languages. This also returns the\n    --  naming scheme exceptions for unit-based languages (Bodies and Specs are\n@@ -272,8 +272,8 @@ package body Prj.Nmsc is\n    --  languages indicated in attribute Languages, if any.\n \n    procedure Check_Stand_Alone_Library\n-     (Project     : Project_Id;\n-      Data        : in out Tree_Processing_Data);\n+     (Project : Project_Id;\n+      Data    : in out Tree_Processing_Data);\n    --  Check if project Project in project tree Data.Tree is a Stand-Alone\n    --  Library project, and modify its data Data accordingly if it is one.\n \n@@ -494,9 +494,12 @@ package body Prj.Nmsc is\n       end if;\n \n       declare\n-         Suf : constant String := Get_Name_String (Suffix);\n+         Suf : String := Get_Name_String (Suffix);\n \n       begin\n+         --  On non case-sensitive systems, use proper suffix casing\n+         Canonical_Case_File_Name (Suf);\n+\n          --  The file name must end with the suffix (which is not an extension)\n          --  For instance a suffix \"configure.in\" must match a file with the\n          --  same name. To avoid dummy cases, though, a suffix starting with\n@@ -2562,10 +2565,10 @@ package body Prj.Nmsc is\n    --------------------------\n \n    procedure Check_Package_Naming\n-     (Project        : Project_Id;\n-      Data           : in out Tree_Processing_Data;\n-      Bodies         : out Array_Element_Id;\n-      Specs          : out Array_Element_Id)\n+     (Project : Project_Id;\n+      Data    : in out Tree_Processing_Data;\n+      Bodies  : out Array_Element_Id;\n+      Specs   : out Array_Element_Id)\n    is\n       Naming_Id : constant Package_Id :=\n                     Util.Value_Of\n@@ -4055,8 +4058,8 @@ package body Prj.Nmsc is\n    -------------------------------\n \n    procedure Check_Stand_Alone_Library\n-     (Project     : Project_Id;\n-      Data        : in out Tree_Processing_Data)\n+     (Project : Project_Id;\n+      Data    : in out Tree_Processing_Data)\n    is\n       Lib_Interfaces      : constant Prj.Variable_Value :=\n                               Prj.Util.Value_Of\n@@ -6239,7 +6242,7 @@ package body Prj.Nmsc is\n          Data            => Data,\n          For_All_Sources => Sources.Default and then Source_List_File.Default);\n \n-      --  Check if all exceptions have been found.\n+      --  Check if all exceptions have been found\n \n       declare\n          Source : Source_Id;"}, {"sha": "c58545f5ec1135a4dae8fb03bf74d3793b73f6ea", "filename": "gcc/ada/scos.ads", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c37845f84190677a661e7ea45f5cd2b2c096c028/gcc%2Fada%2Fscos.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c37845f84190677a661e7ea45f5cd2b2c096c028/gcc%2Fada%2Fscos.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fscos.ads?ref=c37845f84190677a661e7ea45f5cd2b2c096c028", "patch": "@@ -86,8 +86,10 @@ package SCOs is\n    --        a Source_Reference pragma was encountered (since all line number\n    --        references will be with respect to the original file).\n \n-   --        Isn't the filename indication redundant, since we can look it up\n-   --        from the D line???\n+   --        Note: the filename is redundant in that it could be deduced from\n+   --        the corresponding D line, but it is convenient at least for human\n+   --        reading of the SCO information, and means that the SCO information\n+   --        can stand on its own without needing other parts of the ALI file.\n \n    --  Statements\n "}]}