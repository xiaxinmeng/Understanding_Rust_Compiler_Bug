{"sha": "f6c28ef193ad29a9eccb01db78efd5aca26ae787", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjZjMjhlZjE5M2FkMjlhOWVjY2IwMWRiNzhlZmQ1YWNhMjZhZTc4Nw==", "commit": {"author": {"name": "Tobias Burnus", "email": "burnus@net-b.de", "date": "2012-12-16T14:34:45Z"}, "committer": {"name": "Tobias Burnus", "email": "burnus@gcc.gnu.org", "date": "2012-12-16T14:34:45Z"}, "message": "trans-intrinsic.c (conv_intrinsic_move_alloc): Set dynamic type of the FROM variable to the declared type.\n\n2012-12-16  Tobias Burnus  <burnus@net-b.de>\n\n        * trans-intrinsic.c (conv_intrinsic_move_alloc): Set dynamic\n        type of the FROM variable to the declared type.\n\n2012-12-16  Tobias Burnus  <burnus@net-b.de>\n\n        * gfortran.dg/move_alloc_14.f90: New.\n\nFrom-SVN: r194536", "tree": {"sha": "fa7c37823562aa82e8eda44250880cea4acff47b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/fa7c37823562aa82e8eda44250880cea4acff47b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f6c28ef193ad29a9eccb01db78efd5aca26ae787", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f6c28ef193ad29a9eccb01db78efd5aca26ae787", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f6c28ef193ad29a9eccb01db78efd5aca26ae787", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f6c28ef193ad29a9eccb01db78efd5aca26ae787/comments", "author": {"login": "tob2", "id": 264461, "node_id": "MDQ6VXNlcjI2NDQ2MQ==", "avatar_url": "https://avatars.githubusercontent.com/u/264461?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tob2", "html_url": "https://github.com/tob2", "followers_url": "https://api.github.com/users/tob2/followers", "following_url": "https://api.github.com/users/tob2/following{/other_user}", "gists_url": "https://api.github.com/users/tob2/gists{/gist_id}", "starred_url": "https://api.github.com/users/tob2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tob2/subscriptions", "organizations_url": "https://api.github.com/users/tob2/orgs", "repos_url": "https://api.github.com/users/tob2/repos", "events_url": "https://api.github.com/users/tob2/events{/privacy}", "received_events_url": "https://api.github.com/users/tob2/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "2f7d07ff4e1be351696a13f33d4e8b466744071c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2f7d07ff4e1be351696a13f33d4e8b466744071c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2f7d07ff4e1be351696a13f33d4e8b466744071c"}], "stats": {"total": 72, "additions": 62, "deletions": 10}, "files": [{"sha": "1deb94d39378cb01501b375aa6e7731d7b6c0ae7", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f6c28ef193ad29a9eccb01db78efd5aca26ae787/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f6c28ef193ad29a9eccb01db78efd5aca26ae787/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=f6c28ef193ad29a9eccb01db78efd5aca26ae787", "patch": "@@ -1,3 +1,8 @@\n+2012-12-16  Tobias Burnus  <burnus@net-b.de>\n+\n+\t* trans-intrinsic.c (conv_intrinsic_move_alloc): Set dynamic\n+\ttype of the FROM variable to the declared type.\n+\n 2012-12-16  Tobias Burnus  <burnus@net-b.de>\n \n \tPR fortran/55638"}, {"sha": "4f74c3ff29ab9fa1fbe5a6524c1c1596a0feae17", "filename": "gcc/fortran/trans-intrinsic.c", "status": "modified", "additions": 31, "deletions": 10, "changes": 41, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f6c28ef193ad29a9eccb01db78efd5aca26ae787/gcc%2Ffortran%2Ftrans-intrinsic.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f6c28ef193ad29a9eccb01db78efd5aca26ae787/gcc%2Ffortran%2Ftrans-intrinsic.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ftrans-intrinsic.c?ref=f6c28ef193ad29a9eccb01db78efd5aca26ae787", "patch": "@@ -7338,6 +7338,8 @@ conv_intrinsic_move_alloc (gfc_code *code)\n       /* Set _vptr.  */\n       if (to_expr->ts.type == BT_CLASS)\n \t{\n+\t  gfc_symbol *vtab;\n+\n \t  gfc_free_expr (to_expr2);\n \t  gfc_init_se (&to_se, NULL);\n \t  to_se.want_pointer = 1;\n@@ -7346,23 +7348,31 @@ conv_intrinsic_move_alloc (gfc_code *code)\n \n \t  if (from_expr->ts.type == BT_CLASS)\n \t    {\n+\t      vtab = gfc_find_derived_vtab (from_expr->ts.u.derived);\n+\t      gcc_assert (vtab);\n+\n \t      gfc_free_expr (from_expr2);\n \t      gfc_init_se (&from_se, NULL);\n \t      from_se.want_pointer = 1;\n \t      gfc_add_vptr_component (from_expr);\n \t      gfc_conv_expr (&from_se, from_expr);\n-\t      tmp = from_se.expr;\n+\t      gfc_add_modify_loc (input_location, &block, to_se.expr,\n+\t\t\t\t  fold_convert (TREE_TYPE (to_se.expr),\n+\t\t\t\t  from_se.expr));\n+\n+              /* Reset _vptr component to declared type.  */\n+\t      tmp = gfc_build_addr_expr (NULL_TREE, gfc_get_symbol_decl (vtab));\n+\t      gfc_add_modify_loc (input_location, &block, from_se.expr,\n+\t\t\t\t  fold_convert (TREE_TYPE (from_se.expr), tmp));\n \t    }\n \t  else\n \t    {\n-\t      gfc_symbol *vtab;\n \t      vtab = gfc_find_derived_vtab (from_expr->ts.u.derived);\n \t      gcc_assert (vtab);\n \t      tmp = gfc_build_addr_expr (NULL_TREE, gfc_get_symbol_decl (vtab));\n+\t      gfc_add_modify_loc (input_location, &block, to_se.expr,\n+\t\t\t\t  fold_convert (TREE_TYPE (to_se.expr), tmp));\n \t    }\n-\n-\t  gfc_add_modify_loc (input_location, &block, to_se.expr,\n-\t\t\t      fold_convert (TREE_TYPE (to_se.expr), tmp));\n \t}\n \n       return gfc_finish_block (&block);\n@@ -7371,29 +7381,40 @@ conv_intrinsic_move_alloc (gfc_code *code)\n   /* Update _vptr component.  */\n   if (to_expr->ts.type == BT_CLASS)\n     {\n+      gfc_symbol *vtab;\n+\n       to_se.want_pointer = 1;\n       to_expr2 = gfc_copy_expr (to_expr);\n       gfc_add_vptr_component (to_expr2);\n       gfc_conv_expr (&to_se, to_expr2);\n \n       if (from_expr->ts.type == BT_CLASS)\n \t{\n+\t  vtab = gfc_find_derived_vtab (from_expr->ts.u.derived);\n+\t  gcc_assert (vtab);\n+\n \t  from_se.want_pointer = 1;\n \t  from_expr2 = gfc_copy_expr (from_expr);\n \t  gfc_add_vptr_component (from_expr2);\n \t  gfc_conv_expr (&from_se, from_expr2);\n-\t  tmp = from_se.expr;\n+\t  gfc_add_modify_loc (input_location, &block, to_se.expr,\n+\t\t\t      fold_convert (TREE_TYPE (to_se.expr),\n+\t\t\t      from_se.expr));\n+\n+\t  /* Reset _vptr component to declared type.  */\n+\t  tmp = gfc_build_addr_expr (NULL_TREE, gfc_get_symbol_decl (vtab));\n+\t  gfc_add_modify_loc (input_location, &block, from_se.expr,\n+\t\t\t      fold_convert (TREE_TYPE (from_se.expr), tmp));\n \t}\n       else\n \t{\n-\t  gfc_symbol *vtab;\n \t  vtab = gfc_find_derived_vtab (from_expr->ts.u.derived);\n \t  gcc_assert (vtab);\n \t  tmp = gfc_build_addr_expr (NULL_TREE, gfc_get_symbol_decl (vtab));\n+\t  gfc_add_modify_loc (input_location, &block, to_se.expr,\n+\t\t\t      fold_convert (TREE_TYPE (to_se.expr), tmp));\n \t}\n \n-      gfc_add_modify_loc (input_location, &block, to_se.expr,\n-\t\t\t  fold_convert (TREE_TYPE (to_se.expr), tmp));\n       gfc_free_expr (to_expr2);\n       gfc_init_se (&to_se, NULL);\n \n@@ -7449,7 +7470,7 @@ conv_intrinsic_move_alloc (gfc_code *code)\n   /* Move the pointer and update the array descriptor data.  */\n   gfc_add_modify_loc (input_location, &block, to_se.expr, from_se.expr);\n \n-  /* Set \"to\" to NULL.  */\n+  /* Set \"from\" to NULL.  */\n   tmp = gfc_conv_descriptor_data_get (from_se.expr);\n   gfc_add_modify_loc (input_location, &block, tmp,\n \t\t      fold_convert (TREE_TYPE (tmp), null_pointer_node));"}, {"sha": "f6503b094daca2c48e7c23aab044b7ab0b04d249", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f6c28ef193ad29a9eccb01db78efd5aca26ae787/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f6c28ef193ad29a9eccb01db78efd5aca26ae787/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=f6c28ef193ad29a9eccb01db78efd5aca26ae787", "patch": "@@ -1,3 +1,7 @@\n+2012-12-16  Tobias Burnus  <burnus@net-b.de>\n+\n+\t* gfortran.dg/move_alloc_14.f90: New.\n+\n 2012-12-16  Tobias Burnus  <burnus@net-b.de>\n \n \tPR fortran/55638"}, {"sha": "bc5e491651292424898477a3ff99232e97ad0f42", "filename": "gcc/testsuite/gfortran.dg/move_alloc_14.f90", "status": "added", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f6c28ef193ad29a9eccb01db78efd5aca26ae787/gcc%2Ftestsuite%2Fgfortran.dg%2Fmove_alloc_14.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f6c28ef193ad29a9eccb01db78efd5aca26ae787/gcc%2Ftestsuite%2Fgfortran.dg%2Fmove_alloc_14.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fmove_alloc_14.f90?ref=f6c28ef193ad29a9eccb01db78efd5aca26ae787", "patch": "@@ -0,0 +1,22 @@\n+! { dg-do run }\n+!\n+! Ensure that move_alloc for CLASS resets the FROM variable's dynamic type\n+! to the declared one\n+!\n+implicit none\n+type t\n+end type t\n+type, extends(t) :: t2\n+end type t2\n+\n+class(t), allocatable :: a, b, c\n+class(t), allocatable :: a2(:), b2(:), c2(:)\n+allocate (t2 :: a)\n+allocate (t2 :: a2(5))\n+call move_alloc (from=a, to=b)\n+call move_alloc (from=a2, to=b2)\n+!print *, same_type_as (a,c), same_type_as (a,b)\n+!print *, same_type_as (a2,c2), same_type_as (a2,b2)\n+if (.not. same_type_as (a,c) .or. same_type_as (a,b)) call abort ()\n+if (.not. same_type_as (a2,c2) .or. same_type_as (a2,b2)) call abort ()\n+end"}]}