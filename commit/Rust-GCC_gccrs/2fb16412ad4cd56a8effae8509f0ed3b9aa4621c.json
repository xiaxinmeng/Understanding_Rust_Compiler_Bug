{"sha": "2fb16412ad4cd56a8effae8509f0ed3b9aa4621c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmZiMTY0MTJhZDRjZDU2YThlZmZhZTg1MDlmMGVkM2I5YWE0NjIxYw==", "commit": {"author": {"name": "Martin Jambor", "email": "mjambor@suse.cz", "date": "2008-09-25T09:53:42Z"}, "committer": {"name": "Martin Jambor", "email": "jamborm@gcc.gnu.org", "date": "2008-09-25T09:53:42Z"}, "message": "cgraph.c (free_nodes): New variable.\n\n2008-09-25  Martin Jambor  <mjambor@suse.cz>\n\n\t* cgraph.c (free_nodes): New variable.\n\t(NEXT_FREE_NODE): New macro.\n\t(cgraph_create_node): Reuse nodes from the free list.  Do not\n\tupdate uid if doing so.\n\t(cgraph_remove_node): Add the node to the free list.\n\nFrom-SVN: r140660", "tree": {"sha": "4f80610012b1958ec10e6a73c0c3f6d2fa3f64fe", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4f80610012b1958ec10e6a73c0c3f6d2fa3f64fe"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2fb16412ad4cd56a8effae8509f0ed3b9aa4621c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2fb16412ad4cd56a8effae8509f0ed3b9aa4621c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2fb16412ad4cd56a8effae8509f0ed3b9aa4621c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2fb16412ad4cd56a8effae8509f0ed3b9aa4621c/comments", "author": {"login": "jamborm", "id": 2180070, "node_id": "MDQ6VXNlcjIxODAwNzA=", "avatar_url": "https://avatars.githubusercontent.com/u/2180070?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jamborm", "html_url": "https://github.com/jamborm", "followers_url": "https://api.github.com/users/jamborm/followers", "following_url": "https://api.github.com/users/jamborm/following{/other_user}", "gists_url": "https://api.github.com/users/jamborm/gists{/gist_id}", "starred_url": "https://api.github.com/users/jamborm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jamborm/subscriptions", "organizations_url": "https://api.github.com/users/jamborm/orgs", "repos_url": "https://api.github.com/users/jamborm/repos", "events_url": "https://api.github.com/users/jamborm/events{/privacy}", "received_events_url": "https://api.github.com/users/jamborm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "1f243c2275aad70797784eaf64c90f950c0a8a3f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1f243c2275aad70797784eaf64c90f950c0a8a3f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1f243c2275aad70797784eaf64c90f950c0a8a3f"}], "stats": {"total": 37, "additions": 33, "deletions": 4}, "files": [{"sha": "01aa28ec476a4ccb2f2d502e47b47e428c7d40b4", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2fb16412ad4cd56a8effae8509f0ed3b9aa4621c/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2fb16412ad4cd56a8effae8509f0ed3b9aa4621c/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=2fb16412ad4cd56a8effae8509f0ed3b9aa4621c", "patch": "@@ -1,3 +1,11 @@\n+2008-09-25  Martin Jambor  <mjambor@suse.cz>\n+\n+\t* cgraph.c (free_nodes): New variable.\n+\t(NEXT_FREE_NODE): New macro.\n+\t(cgraph_create_node): Reuse nodes from the free list.  Do not\n+\tupdate uid if doing so.\n+\t(cgraph_remove_node): Add the node to the free list.\n+\n 2008-09-25  Gerald Pfeifer  <gerald@pfeifer.com>\n \n \t* config/freebsd.h (HANDLE_PRAGMA_PACK_PUSH_POP): Define."}, {"sha": "73dbfb3aa8b44ef6e16f2ba0608debf8ce034deb", "filename": "gcc/cgraph.c", "status": "modified", "additions": 25, "deletions": 4, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2fb16412ad4cd56a8effae8509f0ed3b9aa4621c/gcc%2Fcgraph.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2fb16412ad4cd56a8effae8509f0ed3b9aa4621c/gcc%2Fcgraph.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcgraph.c?ref=2fb16412ad4cd56a8effae8509f0ed3b9aa4621c", "patch": "@@ -177,11 +177,16 @@ struct cgraph_2node_hook_list *first_cgraph_node_duplicated_hook;\n /* List of hooks triggered when an function is inserted.  */\n struct cgraph_node_hook_list *first_cgraph_function_insertion_hook;\n \n+/* Head of a linked list of unused (freed) call graph nodes.\n+   Do not GTY((delete)) this list so UIDs gets reliably recycled.  */\n+static GTY(()) struct cgraph_node *free_nodes;\n /* Head of a linked list of unused (freed) call graph edges.\n    Do not GTY((delete)) this list so UIDs gets reliably recycled.  */\n static GTY(()) struct cgraph_edge *free_edges;\n \n-/* Macro to access the next item in the list of free cgraph edges. */\n+/* Macros to access the next item in the list of free cgraph nodes and\n+   edges. */\n+#define NEXT_FREE_NODE(NODE) (NODE)->next\n #define NEXT_FREE_EDGE(EDGE) (EDGE)->prev_caller\n \n /* Register HOOK to be called with DATA on each removed edge.  */\n@@ -417,9 +422,18 @@ cgraph_create_node (void)\n {\n   struct cgraph_node *node;\n \n-  node = GGC_CNEW (struct cgraph_node);\n+  if (free_nodes)\n+    {\n+      node = free_nodes;\n+      free_nodes = NEXT_FREE_NODE (node);\n+    }\n+  else\n+    {\n+      node = GGC_CNEW (struct cgraph_node);\n+      node->uid = cgraph_max_uid++;\n+    }\n+\n   node->next = cgraph_nodes;\n-  node->uid = cgraph_max_uid++;\n   node->pid = -1;\n   node->order = cgraph_order++;\n   if (cgraph_nodes)\n@@ -933,6 +947,7 @@ cgraph_remove_node (struct cgraph_node *node)\n   void **slot;\n   bool kill_body = false;\n   struct cgraph_node *n;\n+  int uid = node->uid;\n \n   cgraph_call_node_removal_hooks (node);\n   cgraph_node_remove_callers (node);\n@@ -1020,7 +1035,13 @@ cgraph_remove_node (struct cgraph_node *node)\n       node->call_site_hash = NULL;\n     }\n   cgraph_n_nodes--;\n-  /* Do not free the structure itself so the walk over chain can continue.  */\n+\n+  /* Clear out the node to NULL all pointers and add the node to the free\n+     list.  */\n+  memset (node, 0, sizeof(*node));\n+  node->uid = uid;\n+  NEXT_FREE_NODE (node) = free_nodes;\n+  free_nodes = node;\n }\n \n /* Notify finalize_compilation_unit that given node is reachable.  */"}]}