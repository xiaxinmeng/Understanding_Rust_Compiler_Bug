{"sha": "964b79eb330d5df3e851696e2d0bfa30b0e0307b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTY0Yjc5ZWIzMzBkNWRmM2U4NTE2OTZlMmQwYmZhMzBiMGUwMzA3Yg==", "commit": {"author": {"name": "Marek Polacek", "email": "polacek@redhat.com", "date": "2016-12-14T20:41:43Z"}, "committer": {"name": "Marek Polacek", "email": "mpolacek@gcc.gnu.org", "date": "2016-12-14T20:41:43Z"}, "message": "re PR c++/72775 (internal compiler error: in finish_expr_stmt, at cp/semantics.c:677)\n\n\tPR c++/72775\n\t* init.c (perform_member_init): Diagnose member initializer for\n\tflexible array member. \n\n\t* g++.dg/ext/flexary12.C: Adjust dg-error.\n\t* g++.dg/ext/flexary20.C: New.\n\t* g++.dg/ext/flexary21.C: New.\n\nFrom-SVN: r243669", "tree": {"sha": "f6f66a11d2a821e98fa7c953cadb8f50678c0dff", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f6f66a11d2a821e98fa7c953cadb8f50678c0dff"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/964b79eb330d5df3e851696e2d0bfa30b0e0307b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/964b79eb330d5df3e851696e2d0bfa30b0e0307b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/964b79eb330d5df3e851696e2d0bfa30b0e0307b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/964b79eb330d5df3e851696e2d0bfa30b0e0307b/comments", "author": {"login": "mpolacek", "id": 10496300, "node_id": "MDQ6VXNlcjEwNDk2MzAw", "avatar_url": "https://avatars.githubusercontent.com/u/10496300?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mpolacek", "html_url": "https://github.com/mpolacek", "followers_url": "https://api.github.com/users/mpolacek/followers", "following_url": "https://api.github.com/users/mpolacek/following{/other_user}", "gists_url": "https://api.github.com/users/mpolacek/gists{/gist_id}", "starred_url": "https://api.github.com/users/mpolacek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mpolacek/subscriptions", "organizations_url": "https://api.github.com/users/mpolacek/orgs", "repos_url": "https://api.github.com/users/mpolacek/repos", "events_url": "https://api.github.com/users/mpolacek/events{/privacy}", "received_events_url": "https://api.github.com/users/mpolacek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "cc99421ec4b3b94aa328175635782f6f5c36f9e9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cc99421ec4b3b94aa328175635782f6f5c36f9e9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cc99421ec4b3b94aa328175635782f6f5c36f9e9"}], "stats": {"total": 87, "additions": 86, "deletions": 1}, "files": [{"sha": "a08c93a755e3e50516817227ca21e54ad5c74b30", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/964b79eb330d5df3e851696e2d0bfa30b0e0307b/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/964b79eb330d5df3e851696e2d0bfa30b0e0307b/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=964b79eb330d5df3e851696e2d0bfa30b0e0307b", "patch": "@@ -1,3 +1,9 @@\n+2016-12-14  Marek Polacek  <polacek@redhat.com>\n+\n+\tPR c++/72775\n+\t* init.c (perform_member_init): Diagnose member initializer for\n+\tflexible array member. \n+\n 2016-12-14  Nathan Sidwell  <nathan@acm.org>\n \n \tPR c++/78701"}, {"sha": "47428b96f3d9c9c3a53f1c99bb751e23054eb93e", "filename": "gcc/cp/init.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/964b79eb330d5df3e851696e2d0bfa30b0e0307b/gcc%2Fcp%2Finit.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/964b79eb330d5df3e851696e2d0bfa30b0e0307b/gcc%2Fcp%2Finit.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Finit.c?ref=964b79eb330d5df3e851696e2d0bfa30b0e0307b", "patch": "@@ -800,6 +800,14 @@ perform_member_init (tree member, tree init)\n \t   in that case.  */\n \tinit = build_x_compound_expr_from_list (init, ELK_MEM_INIT,\n \t\t\t\t\t\ttf_warning_or_error);\n+      if (TREE_CODE (type) == ARRAY_TYPE\n+\t  && TYPE_DOMAIN (type) == NULL_TREE\n+\t  && init != NULL_TREE)\n+\t{\n+\t  error_at (DECL_SOURCE_LOCATION (current_function_decl),\n+\t\t    \"member initializer for flexible array member\");\n+\t  inform (DECL_SOURCE_LOCATION (member), \"%q#D initialized\", member);\n+\t}\n \n       if (init)\n \tfinish_expr_stmt (cp_build_modify_expr (input_location, decl,"}, {"sha": "5026f07b5dc5116a424a75948f17a9d006d0b205", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/964b79eb330d5df3e851696e2d0bfa30b0e0307b/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/964b79eb330d5df3e851696e2d0bfa30b0e0307b/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=964b79eb330d5df3e851696e2d0bfa30b0e0307b", "patch": "@@ -1,3 +1,10 @@\n+2016-12-14  Marek Polacek  <polacek@redhat.com>\n+\n+\tPR c++/72775\n+\t* g++.dg/ext/flexary12.C: Adjust dg-error.\n+\t* g++.dg/ext/flexary20.C: New.\n+\t* g++.dg/ext/flexary21.C: New.\n+\n 2016-12-14  Uros Bizjak  <ubizjak@gmail.com>\n \n \tPR target/59874"}, {"sha": "db80bf408f5633a2d7363bf8a37448ea9e89e5c4", "filename": "gcc/testsuite/g++.dg/ext/flexary12.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/964b79eb330d5df3e851696e2d0bfa30b0e0307b/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fflexary12.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/964b79eb330d5df3e851696e2d0bfa30b0e0307b/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fflexary12.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fflexary12.C?ref=964b79eb330d5df3e851696e2d0bfa30b0e0307b", "patch": "@@ -44,7 +44,7 @@ struct D {\n   D ();\n };\n \n-D::D ():\n+D::D ():    // { dg-error \"member initializer for flexible array member\" }\n   a (\"c\")   // { dg-error \"incompatible types in assignment of .const char \\\\\\[2\\\\\\]. to .int \\\\\\[\\\\\\].\" }\n { }\n "}, {"sha": "2c8ab2960f72dc146340ff88317a024a5774b084", "filename": "gcc/testsuite/g++.dg/ext/flexary20.C", "status": "added", "additions": 49, "deletions": 0, "changes": 49, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/964b79eb330d5df3e851696e2d0bfa30b0e0307b/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fflexary20.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/964b79eb330d5df3e851696e2d0bfa30b0e0307b/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fflexary20.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fflexary20.C?ref=964b79eb330d5df3e851696e2d0bfa30b0e0307b", "patch": "@@ -0,0 +1,49 @@\n+// PR c++/72775\n+// { dg-do compile { target c++11 } }\n+// { dg-options -Wno-pedantic }\n+\n+struct S {\n+  int i;\n+  char a[] = \"foo\";\n+  S () {} // { dg-error \"member initializer for flexible array member\" }\n+};\n+\n+struct T { // { dg-error \"member initializer for flexible array member\" }\n+  int i;\n+  char a[] = \"foo\";\n+};\n+\n+struct U {\n+  int i;\n+  char a[] = \"foo\";\n+  U ();\n+};\n+\n+U::U() {} // { dg-error \"member initializer for flexible array member\" }\n+\n+int\n+main ()\n+{\n+  struct T t;\n+}\n+\n+struct V {\n+  int i;\n+  struct W { // { dg-error \"member initializer for flexible array member\" }\n+    int j;\n+    char a[] = \"foo\";\n+  } w;\n+  V () {}\n+};\n+\n+template <class T>\n+struct X { // { dg-error \"member initializer for flexible array member\" }\n+  int i;\n+  T a[] = \"foo\";\n+};\n+\n+void\n+fn ()\n+{\n+  struct X<char> x;\n+}"}, {"sha": "5675bf6f0d64c405d73e5d21d0aa47894cb4eabf", "filename": "gcc/testsuite/g++.dg/ext/flexary21.C", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/964b79eb330d5df3e851696e2d0bfa30b0e0307b/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fflexary21.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/964b79eb330d5df3e851696e2d0bfa30b0e0307b/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fflexary21.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fflexary21.C?ref=964b79eb330d5df3e851696e2d0bfa30b0e0307b", "patch": "@@ -0,0 +1,15 @@\n+// PR c++/72775\n+// { dg-do compile { target c++11 } }\n+// { dg-options -Wno-pedantic }\n+\n+struct S {\n+  int i;\n+  char a[];\n+  S () : a(\"bob\") {} // { dg-error \"member initializer for flexible array member\" }\n+};\n+\n+struct T {\n+  int i;\n+  char a[] = \"bob\";\n+  T () : a(\"bob\") {} // { dg-error \"member initializer for flexible array member\" }\n+};"}]}