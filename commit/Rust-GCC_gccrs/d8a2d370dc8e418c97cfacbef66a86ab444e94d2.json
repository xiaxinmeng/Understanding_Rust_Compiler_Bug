{"sha": "d8a2d370dc8e418c97cfacbef66a86ab444e94d2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDhhMmQzNzBkYzhlNDE4Yzk3Y2ZhY2JlZjY2YTg2YWI0NDRlOTRkMg==", "commit": {"author": {"name": "Diego Novillo", "email": "dnovillo@google.com", "date": "2013-11-19T12:31:09Z"}, "committer": {"name": "Diego Novillo", "email": "dnovillo@gcc.gnu.org", "date": "2013-11-19T12:31:09Z"}, "message": "Factor unrelated declarations out of tree.h.\n\nThis patch applies the rule that functions defined in FOO.c must be\ndeclared in FOO.h. One of the worst offenders in the code base is\ntree.h, unsurprisingly.\n\nThe patch creates several new headers: attribs.h calls.h fold-const.h\ngcc-symtab.h print-rtl.h print-tree.h stmt.h stor-layout.h stringpool.h\ntree-nested.h tree-object-size.h varasm.h.\n\nFunctions in each corresponding .c file got moved to those headers and\nothers that already existed. I wanted to make this patch as mechanical\nas possible, so I made no attempt to fix problems like having\nbuild_addr defined in tree-inline.c. I left that for later.\n\nThere were some declarations that I could not move out of tree.h\nbecause of header poisoning or the use of target macros. We forbid the\ninclusion of things like expr.h from FE files. While that's a\nreasonable idea, the FE file *still* manage to at expr.c functionality\nbecause the declarations they want to use were defined in tree.h.\n\nThe affected files are builtins.h, emit-rtl.h and expr.h.\n\nIf that functionality is allowed to be accessed from the FEs,\nthen I will later move those functions out of expr.c into tree.c.\nI have moved these declarations to the bottom of tree.h so they\nare easy to identify later.\n\nThere is a namespace collision with libcpp. The file gcc/symtab.c\ncannot use gcc/symtab.h because the #include command picks up\nlibcpp/include/symtab.h first. So I named this file gcc-symtab.h\nfor now.\n\nFinally, I added a new header to PLUGIN_HEADERS to account for the\ntree.h refactoring. I did not add all headers factored out of tree.h\nbecause it is unclear (and impossible to tell) what plugins need.\nThis adds the one header used by the plugins in the testsuite.\n\nThis will be changing quite dramatically as we progress with the header\nrefactoring.\n\nThis patch should offer some minimal incremental build advantages\nby reducing the size of tree.h. Changes that would otherwise\naffected tree.h, will now go to other headers which are less\nfrequently included.\n\n\t* tree.h: Include fold-const.h.\n\t(aggregate_value_p): Moved to function.h.\n\t(alloca_call_p): Moved to calls.h.\n\t(allocate_struct_function): Moved to function.h.\n\t(apply_tm_attr): Moved to attribs.h.\n\t(array_at_struct_end_p): Moved to expr.h.\n\t(array_ref_element_size): Moved to tree-dfa.h.\n\t(array_ref_low_bound): Moved to tree-dfa.h.\n\t(array_ref_up_bound): Moved to tree.h.\n\t(assemble_alias): Moved to cgraph.h.\n\t(bit_from_pos): Moved to stor-layout.h.\n\t(build_addr): Moved to tree-nested.h.\n\t(build_duplicate_type): Moved to tree-inline.h.\n\t(build_fold_addr_expr): Moved to fold-const.h.\n\t(build_fold_addr_expr_with_type): Moved to fold-const.h.\n\t(build_fold_addr_expr_with_type_loc): Moved to fold-const.h.\n\t(build_fold_indirect_ref): Moved to fold-const.h.\n\t(build_fold_indirect_ref_loc): Moved to fold-const.h.\n\t(build_personality_function): Moved to tree.h.\n\t(build_range_check): Moved to fold-const.h.\n\t(build_simple_mem_ref): Moved to fold-const.h.\n\t(build_simple_mem_ref_loc): Moved to fold-const.h.\n\t(build_tm_abort_call): Moved to trans-mem.h.\n\t(byte_from_pos): Moved to stor-layout.h.\n\t(call_expr_flags): Moved to calls.h.\n\t(can_move_by_pieces): Moved to expr.h.\n\t(categorize_ctor_elements): Moved to expr.h.\n\t(change_decl_assembler_name): Moved to gcc-symtab.h.\n\t(combine_comparisons): Moved to fold-const.h.\n\t(complete_ctor_at_level_p): Moved to tree.h.\n\t(component_ref_field_offset): Moved to tree-dfa.h.\n\t(compute_builtin_object_size): Moved to tree-object-size.h.\n\t(compute_record_mode): Moved to stor-layout.h.\n\t(constant_boolean_node): Moved to fold-const.h.\n\t(constructor_static_from_elts_p): Moved to varasm.h.\n\t(cxx11_attribute_p): Moved to attribs.h.\n\t(debug_body): Moved to print-tree.h.\n\t(debug_find_tree): Moved to tree-inline.h.\n\t(debug_fold_checksum): Moved to fold-const.h.\n\t(debug_head): Moved to print-tree.h.\n\t(debug_head): Moved to print-tree.h.\n\t(debug_raw): Moved to print-tree.h.\n\t(debug_tree): Moved to print-tree.h.\n\t(debug_vec_tree): Moved to print-tree.h.\n\t(debug_verbose): Moved to print-tree.h.\n\t(debug_verbose): Moved to print-tree.h.\n\t(decl_attributes): Moved to attribs.h.\n\t(decl_binds_to_current_def_p): Moved to varasm.h.\n\t(decl_default_tls_model): Moved to varasm.h.\n\t(decl_replaceable_p): Moved to varasm.h.\n\t(div_if_zero_remainder): Moved to fold-const.h.\n\t(double_int mem_ref_offset): Moved to fold-const.h.\n\t(dump_addr): Moved to print-tree.h.\n\t(element_precision): Moved to machmode.h.\n\t(expand_dummy_function_end): Moved to function.h.\n\t(expand_function_end): Moved to function.h.\n\t(expand_function_start): Moved to function.h.\n\t(expand_label): Moved to stmt.h.\n\t(expr_first): Moved to tree-iterator.h.\n\t(expr_last): Moved to tree-iterator.h.\n\t(finalize_size_functions): Moved to stor-layout.h.\n\t(finish_builtin_struct): Moved to stor-layout.h.\n\t(finish_record_layout): Moved to stor-layout.h.\n\t(fixup_signed_type): Moved to stor-layout.h.\n\t(fixup_unsigned_type): Moved to stor-layout.h.\n\t(flags_from_decl_or_type): Moved to calls.h.\n\t(fold): Moved to fold-const.h.\n\t(fold_abs_const): Moved to fold-const.h.\n\t(fold_binary): Moved to fold-const.h.\n\t(fold_binary_loc): Moved to fold-const.h.\n\t(fold_binary_to_constant): Moved to fold-const.h.\n\t(fold_build1): Moved to fold-const.h.\n\t(fold_build1_initializer_loc): Moved to fold-const.h.\n\t(fold_build1_loc): Moved to fold-const.h.\n\t(fold_build1_stat_loc): Moved to fold-const.h.\n\t(fold_build2): Moved to fold-const.h.\n\t(fold_build2_initializer_loc): Moved to fold-const.h.\n\t(fold_build2_loc): Moved to fold-const.h.\n\t(fold_build2_stat_loc): Moved to fold-const.h.\n\t(fold_build3): Moved to fold-const.h.\n\t(fold_build3_loc): Moved to fold-const.h.\n\t(fold_build3_stat_loc): Moved to fold-const.h.\n\t(fold_build_call_array): Moved to fold-const.h.\n\t(fold_build_call_array_initializer): Moved to fold-const.h.\n\t(fold_build_call_array_initializer_loc): Moved to fold-const.h.\n\t(fold_build_call_array_loc): Moved to fold-const.h.\n\t(fold_build_cleanup_point_expr): Moved to fold-const.h.\n\t(fold_convert): Moved to fold-const.h.\n\t(fold_convert_loc): Moved to fold-const.h.\n\t(fold_convertible_p): Moved to fold-const.h.\n\t(fold_defer_overflow_warnings): Moved to fold-const.h.\n\t(fold_deferring_overflow_warnings_p): Moved to fold-const.h.\n\t(fold_fma): Moved to fold-const.h.\n\t(fold_ignored_result): Moved to fold-const.h.\n\t(fold_indirect_ref): Moved to fold-const.h.\n\t(fold_indirect_ref_1): Moved to fold-const.h.\n\t(fold_indirect_ref_loc): Moved to fold-const.h.\n\t(fold_read_from_constant_string): Moved to fold-const.h.\n\t(fold_real_zero_addition_p): Moved to fold-const.h.\n\t(fold_single_bit_test): Moved to fold-const.h.\n\t(fold_strip_sign_ops): Moved to fold-const.h.\n\t(fold_ternary): Moved to fold-const.h.\n\t(fold_ternary_loc): Moved to fold-const.h.\n\t(fold_unary): Moved to tree-data-ref.h.\n\t(fold_unary_ignore_overflow): Moved to fold-const.h.\n\t(fold_unary_ignore_overflow_loc): Moved to fold-const.h.\n\t(fold_unary_loc): Moved to fold-const.h.\n\t(fold_unary_to_constant): Moved to fold-const.h.\n\t(fold_undefer_and_ignore_overflow_warnings): Moved to fold-const.h.\n\t(fold_undefer_overflow_warnings): Moved to fold-const.h.\n\t(folding_initializer): Moved to fold-const.h.\n\t(free_temp_slots): Moved to function.h.\n\t(generate_setjmp_warnings): Moved to function.h.\n\t(get_attribute_name): Moved to attribs.h.\n\t(get_identifier): Moved to stringpool.h.\n\t(get_identifier_with_length): Moved to stringpool.h.\n\t(get_inner_reference): Moved to tree.h.\n\t(gimple_alloca_call_p): Moved to calls.h.\n\t(gimplify_parameters): Moved to function.h.\n\t(highest_pow2_factor): Moved to expr.h.\n\t(indent_to): Moved to print-tree.h.\n\t(init_attributes): Moved to attribs.h.\n\t(init_dummy_function_start): Moved to function.h.\n\t(init_function_start): Moved to function.h.\n\t(init_inline_once): Moved to tree-inline.h.\n\t(init_object_sizes): Moved to tree-object-size.h.\n\t(init_temp_slots): Moved to function.h.\n\t(init_tree_optimization_optabs): Moved to optabs.h.\n\t(initialize_sizetypes): Moved to stor-layout.h.\n\t(initializer_constant_valid_for_bitfield_p): Moved to varasm.h.\n\t(initializer_constant_valid_p): Moved to varasm.h.\n\t(int_const_binop): Moved to fold-const.h.\n\t(internal_reference_types): Moved to stor-layout.h.\n\t(invert_tree_comparison): Moved to fold-const.h.\n\t(invert_truthvalue): Moved to fold-const.h.\n\t(invert_truthvalue_loc): Moved to fold-const.h.\n\t(is_tm_ending_fndecl): Moved to trans-mem.h.\n\t(is_tm_may_cancel_outer): Moved to trans-mem.h.\n\t(is_tm_pure): Moved to trans-mem.h.\n\t(is_tm_safe): Moved to trans-mem.h.\n\t(layout_decl): Moved to stor-layout.h.\n\t(layout_type): Moved to stor-layout.h.\n\t(lookup_attribute_spec): Moved to attribs.h.\n\t(make_accum_type): Moved to stor-layout.h.\n\t(make_decl_one_only): Moved to varasm.h.\n\t(make_decl_rtl): Moved to tree.h.\n\t(make_decl_rtl_for_debug): Moved to varasm.h.\n\t(make_fract_type): Moved to stor-layout.h.\n\t(make_or_reuse_sat_signed_accum_type): Moved to stor-layout.h.\n\t(make_or_reuse_sat_signed_fract_type): Moved to stor-layout.h.\n\t(make_or_reuse_sat_unsigned_accum_type): Moved to stor-layout.h.\n\t(make_or_reuse_sat_unsigned_fract_type): Moved to stor-layout.h.\n\t(make_or_reuse_signed_accum_type): Moved to stor-layout.h.\n\t(make_or_reuse_signed_fract_type): Moved to stor-layout.h.\n\t(make_or_reuse_unsigned_accum_type): Moved to stor-layout.h.\n\t(make_or_reuse_unsigned_fract_type): Moved to stor-layout.h.\n\t(make_range): Moved to fold-const.h.\n\t(make_range_step): Moved to fold-const.h.\n\t(make_sat_signed_accum_type): Moved to stor-layout.h.\n\t(make_sat_signed_fract_type): Moved to stor-layout.h.\n\t(make_sat_unsigned_accum_type): Moved to stor-layout.h.\n\t(make_sat_unsigned_fract_type): Moved to stor-layout.h.\n\t(make_signed_accum_type): Moved to stor-layout.h.\n\t(make_signed_fract_type): Moved to stor-layout.h.\n\t(make_signed_type): Moved to stor-layout.h.\n\t(make_unsigned_accum_type): Moved to stor-layout.h.\n\t(make_unsigned_fract_type): Moved to stor-layout.h.\n\t(make_unsigned_type): Moved to stor-layout.h.\n\t(mark_decl_referenced): Moved to varasm.h.\n\t(mark_referenced): Moved to varasm.h.\n\t(may_negate_without_overflow_p): Moved to fold-const.h.\n\t(maybe_get_identifier): Moved to stringpool.h.\n\t(merge_ranges): Moved to fold-const.h.\n\t(merge_weak): Moved to varasm.h.\n\t(mode_for_size_tree): Moved to stor-layout.h.\n\t(multiple_of_p): Moved to fold-const.h.\n\t(must_pass_in_stack_var_size): Moved to calls.h.\n\t(must_pass_in_stack_var_size_or_pad): Moved to calls.h.\n\t(native_encode_expr): Moved to fold-const.h.\n\t(native_interpret_expr): Moved to fold-const.h.\n\t(non_lvalue): Moved to fold-const.h.\n\t(non_lvalue_loc): Moved to fold-const.h.\n\t(normalize_offset): Moved to stor-layout.h.\n\t(normalize_rli): Moved to stor-layout.h.\n\t(notice_global_symbol): Moved to varasm.h.\n\t(omit_one_operand): Moved to fold-const.h.\n\t(omit_one_operand_loc): Moved to fold-const.h.\n\t(omit_two_operands): Moved to fold-const.h.\n\t(omit_two_operands_loc): Moved to fold-const.h.\n\t(operand_equal_p): Moved to tree-data-ref.h.\n\t(parse_input_constraint): Moved to stmt.h.\n\t(parse_output_constraint): Moved to stmt.h.\n\t(place_field): Moved to stor-layout.h.\n\t(pop_function_context): Moved to function.h.\n\t(pop_temp_slots): Moved to function.h.\n\t(pos_from_bit): Moved to stor-layout.h.\n\t(preserve_temp_slots): Moved to function.h.\n\t(print_node): Moved to print-tree.h.\n\t(print_node_brief): Moved to print-tree.h.\n\t(print_rtl): Moved to rtl.h.\n\t(process_pending_assemble_externals): Moved to varasm.h.\n\t(ptr_difference_const): Moved to fold-const.h.\n\t(push_function_context): Moved to function.h.\n\t(push_struct_function): Moved to function.h.\n\t(push_temp_slots): Moved to function.h.\n\t(record_tm_replacement): Moved to trans-mem.h.\n\t(relayout_decl): Moved to stor-layout.h.\n\t(resolve_asm_operand_names): Moved to stmt.h.\n\t(resolve_unique_section): Moved to varasm.h.\n\t(rli_size_so_far): Moved to stor-layout.h.\n\t(rli_size_unit_so_far): Moved to stor-layout.h.\n\t(round_down): Moved to fold-const.h.\n\t(round_down_loc): Moved to fold-const.h.\n\t(round_up): Moved to fold-const.h.\n\t(round_up_loc): Moved to fold-const.h.\n\t(set_decl_incoming_rtl): Moved to emit-rtl.h.\n\t(set_decl_rtl): Moved to tree.h.\n\t(set_min_and_max_values_for_integral_type): Moved to stor-layout.h.\n\t(set_user_assembler_name): Moved to varasm.h.\n\t(setjmp_call_p): Moved to calls.h.\n\t(size_binop): Moved to fold-const.h.\n\t(size_binop_loc): Moved to fold-const.h.\n\t(size_diffop): Moved to fold-const.h.\n\t(size_diffop_loc): Moved to fold-const.h.\n\t(size_int_kind): Moved to fold-const.h.\n\t(stack_protect_epilogue): Moved to function.h.\n\t(start_record_layout): Moved to stor-layout.h.\n\t(supports_one_only): Moved to varasm.h.\n\t(swap_tree_comparison): Moved to fold-const.h.\n\t(tm_malloc_replacement): Moved to trans-mem.h.\n\t(tree build_fold_addr_expr_loc): Moved to fold-const.h.\n\t(tree build_invariant_address): Moved to fold-const.h.\n\t(tree_binary_nonnegative_warnv_p): Moved to fold-const.h.\n\t(tree_binary_nonzero_warnv_p): Moved to fold-const.h.\n\t(tree_call_nonnegative_warnv_p): Moved to fold-const.h.\n\t(tree_expr_nonnegative_p): Moved to fold-const.h.\n\t(tree_expr_nonnegative_warnv_p): Moved to fold-const.h.\n\t(tree_output_constant_def): Moved to varasm.h.\n\t(tree_overlaps_hard_reg_set): Moved to stmt.h.\n\t(tree_single_nonnegative_warnv_p): Moved to fold-const.h.\n\t(tree_single_nonzero_warnv_p): Moved to fold-const.h.\n\t(tree_swap_operands_p): Moved to fold-const.h.\n\t(tree_unary_nonnegative_warnv_p): Moved to fold-const.h.\n\t(tree_unary_nonzero_warnv_p): Moved to fold-const.h.\n\t(update_alignment_for_field): Moved to stor-layout.h.\n\t(use_register_for_decl): Moved to function.h.\n\t(variable_size): Moved to rtl.h.\n\t(vector_type_mode): Moved to stor-layout.h.\n\t* cgraph.h: Corresponding changes.\n\t* emit-rtl.h: Corresponding changes.\n\t* expr.h: Corresponding changes.\n\t* function.h: Corresponding changes.\n\t* optabs.h: Corresponding changes.\n\t* trans-mem.h: Corresponding changes.\n\tProtect against multiple inclusion.\n\t* tree-inline.h: Corresponding changes.\n\t* tree-iterator.h: Corresponding changes.\n\t* tree-dfa.h: Include expr.h.\n\t* tree-ssanames.h: Include stringpool.h.\n\t* attribs.h: New file.\n\t* calls.h: New file.\n\t* fold-const.h: New file.\n\t* gcc-symtab.h: New file.\n\t* print-rtl.h: New file.\n\t* print-tree.h: New file.\n\t* stmt.h: New file.\n\t* stor-layout.h: New file.\n\t* strinpool.h: New file.\n\t* tree-nested.h: New file\n\t* tree-object-size.h: New file.\n\t* varasm.h: New file.\n\t* Makefile.in (PLUGIN_HEADERS): Add stringpool.h.\n\n\t* alias.c: Include varasm.h.\n\tInclude expr.h.\n\t* asan.c: Include calls.h.\n\tInclude stor-layout.h.\n\tInclude varasm.h.\n\t* attribs.c: Include stringpool.h.\n\tInclude attribs.h.\n\tInclude stor-layout.h.\n\t* builtins.c: Include stringpool.h.\n\tInclude stor-layout.h.\n\tInclude calls.h.\n\tInclude varasm.h.\n\tInclude tree-object-size.h.\n\t* calls.c: Include stor-layout.h.\n\tInclude varasm.h.\n\tInclude stringpool.h.\n\tInclude attribs.h.\n\t* cfgexpand.c: Include stringpool.h.\n\tInclude varasm.h.\n\tInclude stor-layout.h.\n\tInclude stmt.h.\n\tInclude print-tree.h.\n\t* cgraph.c: Include varasm.h.\n\tInclude calls.h.\n\tInclude print-tree.h.\n\t* cgraphclones.c: Include stringpool.h.\n\tInclude function.h.\n\tInclude emit-rtl.h.\n\tMove inclusion of rtl.h earlier in the file.\n\t* cgraphunit.c: Include varasm.h.\n\tInclude stor-layout.h.\n\tInclude stringpool.h.\n\t* cilk-common.c: Include stringpool.h.\n\tInclude stor-layout.h.\n\t* combine.c: Include stor-layout.h.\n\t* config/aarch64/aarch64-builtins.c: Include stor-layout.h.\n\tInclude stringpool.h.\n\tInclude calls.h.\n\t* config/aarch64/aarch64.c: Include stringpool.h.\n\tInclude stor-layout.h.\n\tInclude calls.h.\n\tInclude varasm.h.\n\t* config/alpha/alpha.c: Include stor-layout.h.\n\tInclude calls.h.\n\tInclude varasm.h.\n\t* config/arc/arc.c: Include varasm.h.\n\tInclude stor-layout.h.\n\tInclude stringpool.h.\n\tInclude calls.h.\n\t* config/arm/arm.c: Include stringpool.h.\n\tInclude stor-layout.h.\n\tInclude calls.h.\n\tInclude varasm.h.\n\t* config/avr/avr-c.c: Include stor-layout.h.\n\t* config/avr/avr-log.c: Include print-tree.h.\n\t* config/avr/avr.c: Include print-tree.h.\n\tInclude calls.h.\n\tInclude stor-layout.h.\n\tInclude stringpool.h.\n\t* config/bfin/bfin.c: Include varasm.h.\n\tInclude calls.h.\n\t* config/c6x/c6x.c: Include stor-layout.h.\n\tInclude varasm.h.\n\tInclude calls.h.\n\tInclude stringpool.h.\n\t* config/cr16/cr16.c: Include stor-layout.h.\n\tInclude calls.h.\n\t* config/cris/cris.c: Include varasm.h.\n\tInclude stor-layout.h.\n\tInclude calls.h.\n\tInclude stmt.h.\n\t* config/darwin.c: Include stringpool.h.\n\tInclude varasm.h.\n\tInclude stor-layout.h.\n\t* config/epiphany/epiphany.c: Include stor-layout.h.\n\tInclude varasm.h.\n\tInclude calls.h.\n\tInclude stringpool.h.\n\t* config/fr30/fr30.c: Include stor-layout.h.\n\tInclude varasm.h.\n\t* config/frv/frv.c: Include varasm.h.\n\tInclude stor-layout.h.\n\tInclude stringpool.h.\n\t* config/h8300/h8300.c: Include stor-layout.h.\n\tInclude varasm.h.\n\tInclude calls.h.\n\tInclude stringpool.h.\n\t* config/i386/i386.c: Include stringpool.h.\n\tInclude attribs.h.\n\tInclude calls.h.\n\tInclude stor-layout.h.\n\tInclude varasm.h.\n\t* config/i386/winnt-cxx.c: Include stringpool.h.\n\tInclude attribs.h.\n\t* config/i386/winnt.c: Include stringpool.h.\n\tInclude varasm.h.\n\t* config/ia64/ia64-c.c: Include stringpool.h.\n\t* config/ia64/ia64.c: Include stringpool.h.\n\tInclude stor-layout.h.\n\tInclude calls.h.\n\tInclude varasm.h.\n\t* config/iq2000/iq2000.c: Include stor-layout.h.\n\tInclude calls.h.\n\tInclude varasm.h.\n\t* config/lm32/lm32.c: Include calls.h.\n\t* config/m32c/m32c.c: Include stor-layout.h.\n\tInclude varasm.h.\n\tInclude calls.h.\n\t* config/m32r/m32r.c: Include stor-layout.h.\n\tInclude varasm.h.\n\tInclude stringpool.h.\n\tInclude calls.h.\n\t* config/m68k/m68k.c: Include calls.h.\n\tInclude stor-layout.h.\n\tInclude varasm.h.\n\t* config/mcore/mcore.c: Include stor-layout.h.\n\tInclude varasm.h.\n\tInclude stringpool.h.\n\tInclude calls.h.\n\t* config/mep/mep.c: Include varasm.h.\n\tInclude calls.h.\n\tInclude stringpool.h.\n\tInclude stor-layout.h.\n\t* config/microblaze/microblaze.c: Include varasm.h.\n\tInclude stor-layout.h.\n\tInclude calls.h.\n\t* config/mips/mips.c: Include varasm.h.\n\tInclude stringpool.h.\n\tInclude stor-layout.h.\n\tInclude calls.h.\n\t* config/mmix/mmix.c: Include varasm.h.\n\tInclude stor-layout.h.\n\tInclude calls.h.\n\t* config/mn10300/mn10300.c: Include stor-layout.h.\n\tInclude varasm.h.\n\tInclude calls.h.\n\t* config/moxie/moxie.c: Include stor-layout.h.\n\tInclude varasm.h.\n\tInclude calls.h.\n\t* config/msp430/msp430.c: Include stor-layout.h.\n\tInclude calls.h.\n\t* config/nds32/nds32.c: Include stor-layout.h.\n\tInclude varasm.h.\n\tInclude calls.h.\n\t* config/pa/pa.c: Include stor-layout.h.\n\tInclude stringpool.h.\n\tInclude varasm.h.\n\tInclude calls.h.\n\t* config/pdp11/pdp11.c: Include stor-layout.h.\n\tInclude varasm.h.\n\tInclude calls.h.\n\t* config/picochip/picochip.c: Include calls.h.\n\tInclude stor-layout.h.\n\tInclude stringpool.h.\n\tInclude varasm.h.\n\t* config/rl78/rl78.c: Include varasm.h.\n\tInclude stor-layout.h.\n\tInclude calls.h.\n\t* config/rs6000/rs6000-c.c: Include stor-layout.h.\n\tInclude stringpool.h.\n\t* config/rs6000/rs6000.c: Include stringpool.h.\n\tInclude stor-layout.h.\n\tInclude calls.h.\n\tInclude print-tree.h.\n\tInclude varasm.h.\n\t* config/rx/rx.c: Include varasm.h.\n\tInclude stor-layout.h.\n\tInclude calls.h.\n\t* config/s390/s390.c: Include print-tree.h.\n\tInclude stringpool.h.\n\tInclude stor-layout.h.\n\tInclude varasm.h.\n\tInclude calls.h.\n\t* config/score/score.c: Include stringpool.h.\n\tInclude calls.h.\n\tInclude varasm.h.\n\tInclude stor-layout.h.\n\t* config/sh/sh-c.c: Include stringpool.h.\n\tInclude attribs.h.h.\n\t* config/sh/sh.c: Include stringpool.h.\n\tInclude stor-layout.h.\n\tInclude calls.h.\n\tInclude varasm.h.\n\t* config/sol2-c.c: Include stringpool.h.\n\tInclude attribs.h.\n\t* config/sol2-cxx.c: Include stringpool.h.\n\t* config/sol2.c: Include stringpool.h.\n\tInclude varasm.h.\n\t* config/sparc/sparc.c: Include stringpool.h.\n\tInclude stor-layout.h.\n\tInclude calls.h.\n\tInclude varasm.h.\n\t* config/spu/spu-c.c: Include stringpool.h.\n\t* config/spu/spu.c: Include stringpool.h.\n\tInclude stor-layout.h.\n\tInclude calls.h.\n\tInclude varasm.h.\n\t* config/stormy16/stormy16.c: Include stringpool.h.\n\tInclude stor-layout.h.\n\tInclude varasm.h.\n\tInclude calls.h.\n\t* config/tilegx/tilegx.c: Include stringpool.h.\n\tInclude stor-layout.h.\n\tInclude varasm.h.\n\tInclude calls.h.\n\t* config/tilepro/tilepro.c: Include stringpool.h.\n\tInclude stor-layout.h.\n\tInclude varasm.h.\n\tInclude calls.h.\n\t* config/v850/v850-c.c: Include stringpool.h.\n\tInclude attribs.h.\n\t* config/v850/v850.c: Include stringpool.h.\n\tInclude stor-layout.h.\n\tInclude varasm.h.\n\tInclude calls.h.\n\t* config/vax/vax.c: Include calls.h.\n\tInclude varasm.h.\n\t* config/vms/vms.c: Include stringpool.h.\n\t* config/vxworks.c: Include stringpool.h.\n\t* config/xtensa/xtensa.c: Include stringpool.h.\n\tInclude stor-layout.h.\n\tInclude calls.h.\n\tInclude varasm.h.\n\t* convert.c: Include stor-layout.h.\n\t* coverage.c: Include stringpool.h.\n\tInclude stor-layout.h.\n\t* dbxout.c: Include varasm.h.\n\tInclude stor-layout.h.\n\t* dojump.c: Include stor-layout.h.\n\t* dse.c: Include stor-layout.h.\n\t* dwarf2asm.c: Include stringpool.h.\n\tInclude varasm.h.\n\t* dwarf2cfi.c: Include stor-layout.h.\n\t* dwarf2out.c: Include rtl.h.\n\tInclude stringpool.h.\n\tInclude stor-layout.h.\n\tInclude varasm.h.\n\tInclude function.h.\n\tInclude emit-rtl.h.\n\tMove inclusion of rtl.h earlier in the file.\n\t* emit-rtl.c: Include varasm.h.\n\t* except.c: Include stringpool.h.\n\tInclude stor-layout.h.\n\t* explow.c: Include stor-layout.h.\n\t* expmed.c: Include stor-layout.h.\n\t* expr.c: Include stringpool.h.\n\tInclude stor-layout.h.\n\tInclude attribs.h.\n\tInclude varasm.h.\n\t* final.c: Include varasm.h.\n\t* fold-const.c: Include stor-layout.h.\n\tInclude calls.h.\n\tInclude tree-iterator.h.\n\t* function.c: Include stor-layout.h.\n\tInclude varasm.h.\n\tInclude stringpool.h.\n\t* genattrtab.c (write_header): Emit includes for varasm.h,\n\tstor-layout.h and calls.h.\n\t* genautomata.c (main): Likewise.\n\t* genemit.c: Likewise.\n\t* genopinit.c: Likewise.\n\t* genoutput.c (output_prologue): Likewise.\n\t* genpeep.c: Likewise.\n\t* genpreds.c (write_insn_preds_c): Likewise.\n\t* gengtype.c (open_base_files): Add stringpool.h.\n\t* gimple-expr.c: Include stringpool.h.\n\tInclude stor-layout.h.\n\t* gimple-fold.c: Include stringpool.h.\n\tInclude expr.h.\n\tInclude stmt.h.\n\tInclude stor-layout.h.\n\t* gimple-low.c: Include tree-nested.h.\n\tInclude calls.h.\n\t* gimple-pretty-print.c: Include stringpool.h.\n\t* gimple-ssa-strength-reduction.c: Include stor-layout.h.\n\tInclude expr.h.\n\t* gimple-walk.c: Include stmt.h.\n\t* gimple.c: Include calls.h.\n\tInclude stmt.h.\n\tInclude stor-layout.h.\n\t* gimplify.c: Include stringpool.h.\n\tInclude calls.h.\n\tInclude varasm.h.\n\tInclude stor-layout.h.\n\tInclude stmt.h.\n\tInclude print-tree.h.\n\tInclude expr.h.\n\t* gimplify-me.c: Include stmt.h\n\tInclude stor-layout.h\n\t* internal-fn.c: Include stor-layout.h.\n\t* ipa-devirt.c: Include print-tree.h.\n\tInclude calls.h.\n\t* ipa-inline-analysis.c: Include stor-layout.h.\n\tInclude stringpool.h.\n\tInclude print-tree.h.\n\t* ipa-inline.c: Include trans-mem.h.\n\tInclude calls.h.\n\t* ipa-prop.c: Include expr.h.\n\tInclude stor-layout.h.\n\tInclude print-tree.h.\n\t* ipa-pure-const.c: Include print-tree.h.\n\tInclude calls.h.\n\t* ipa-reference.c: Include calls.h.\n\t* ipa-split.c: Include stringpool.h.\n\tInclude expr.h.\n\tInclude calls.h.\n\t* ipa.c: Include calls.h.\n\tInclude stringpool.h.\n\t* langhooks.c: Include stringpool.h.\n\tInclude attribs.h.\n\t* lto-cgraph.c: Include stringpool.h.\n\t* lto-streamer-in.c: Include stringpool.h.\n\t* lto-streamer-out.c: Include stor-layout.h.\n\tInclude stringpool.h.\n\t* omp-low.c: Include stringpool.h.\n\tInclude stor-layout.h.\n\tInclude expr.h.\n\t* optabs.c: Include stor-layout.h.\n\tInclude stringpool.h.\n\tInclude varasm.h.\n\t* passes.c: Include varasm.h.\n\t* predict.c: Include calls.h.\n\t* print-rtl.c: Include print-tree.h.\n\t* print-tree.c: Include varasm.h.\n\tInclude print-rtl.h.\n\tInclude stor-layout.h.\n\t* realmpfr.c: Include stor-layout.h.\n\t* reg-stack.c: Include varasm.h.\n\t* sdbout.c: Include varasm.h.\n\tInclude stor-layout.h.\n\t* simplify-rtx.c: Include varasm.h.\n\t* stmt.c: Include varasm.h.\n\tInclude stor-layout.h.\n\t* stor-layout.c: Include stor-layout.h.\n\tInclude stringpool.h.\n\tInclude varasm.h.\n\tInclude print-tree.h.\n\t* symtab.c: Include rtl.h.\n\tInclude print-tree.h.\n\tInclude varasm.h.\n\tInclude function.h.\n\tInclude emit-rtl.h.\n\t* targhooks.c: Include stor-layout.h.\n\tInclude varasm.h.\n\t* toplev.c: Include varasm.h.\n\tInclude tree-inline.h.\n\t* trans-mem.c: Include calls.h.\n\tInclude function.h.\n\tInclude rtl.h.\n\tInclude emit-rtl.h.\n\t* tree-affine.c: Include expr.h.\n\t* tree-browser.c: Include print-tree.h.\n\t* tree-call-cdce.c: Include stor-layout.h.\n\t* tree-cfg.c: Include trans-mem.h.\n\tInclude stor-layout.h.\n\tInclude print-tree.h.\n\t* tree-complex.c: Include stor-layout.h.\n\t* tree-data-ref.c: Include expr.h.\n\t* tree-dfa.c: Include stor-layout.h.\n\t* tree-eh.c: Include expr.h.\n\tInclude calls.h.\n\t* tree-emutls.c: Include stor-layout.h.\n\tInclude varasm.h.\n\t* tree-if-conv.c: Include stor-layout.h.\n\t* tree-inline.c: Include stor-layout.h.\n\tInclude calls.h.\n\t* tree-loop-distribution.c: Include stor-layout.h.\n\t* tree-nested.c: Include stringpool.h.\n\tInclude stor-layout.h.\n\t* tree-object-size.c: Include tree-object-size.h.\n\t* tree-outof-ssa.c: Include stor-layout.h.\n\t* tree-parloops.c: Include stor-layout.h.\n\tInclude tree-nested.h.\n\t* tree-pretty-print.c: Include stor-layout.h.\n\tInclude expr.h.\n\t* tree-profile.c: Include varasm.h.\n\tInclude tree-nested.h.\n\t* tree-scalar-evolution.c: Include expr.h.\n\t* tree-sra.c: Include stor-layout.h.\n\t* tree-ssa-address.c: Include stor-layout.h.\n\t* tree-ssa-ccp.c: Include stor-layout.h.\n\t* tree-ssa-dce.c: Include calls.h.\n\t* tree-ssa-dom.c: Include stor-layout.h.\n\t* tree-ssa-forwprop.c: Include stor-layout.h.\n\t* tree-ssa-ifcombine.c: Include stor-layout.h.\n\t* tree-ssa-loop-ivopts.c: Include stor-layout.h.\n\t* tree-ssa-loop-niter.c: Include calls.h.\n\tInclude expr.h.\n\t* tree-ssa-loop-prefetch.c: Include stor-layout.h.\n\t* tree-ssa-math-opts.c: Include stor-layout.h.\n\t* tree-ssa-operands.c: Include stmt.h.\n\tInclude print-tree.h.\n\t* tree-ssa-phiopt.c: Include stor-layout.h.\n\t* tree-ssa-reassoc.c: Include stor-layout.h.\n\t* tree-ssa-sccvn.c: Include stor-layout.h.\n\t* tree-ssa-sink.c: Include stor-layout.h.\n\t* tree-ssa-strlen.c: Include stor-layout.h.\n\t* tree-ssa-structalias.c: Include stor-layout.h.\n\tInclude stmt.h.\n\t* tree-ssa-tail-merge.c: Include stor-layout.h.\n\tInclude trans-mem.h.\n\t* tree-ssa-uncprop.c: Include stor-layout.h.\n\t* tree-ssa.c: Include stor-layout.h.\n\t* tree-ssanames.c: Include stor-layout.h.\n\t* tree-streamer-in.c: Include stringpool.h.\n\t* tree-streamer-out.c: Include stor-layout.h.\n\t* tree-switch-conversion.c: Include varasm.h.\n\tInclude stor-layout.h.\n\t* tree-tailcall.c: Include stor-layout.h.\n\t* tree-vect-data-refs.c: Include stor-layout.h.\n\t* tree-vect-generic.c: Include stor-layout.h.\n\t* tree-vect-loop.c: Include stor-layout.h.\n\t* tree-vect-patterns.c: Include stor-layout.h.\n\t* tree-vect-slp.c: Include stor-layout.h.\n\t* tree-vect-stmts.c: Include stor-layout.h.\n\t* tree-vectorizer.c: Include stor-layout.h.\n\t* tree-vrp.c: Include stor-layout.h.\n\tInclude calls.h.\n\t* tree.c: Include stor-layout.h.\n\tInclude calls.h.\n\tInclude attribs.h.\n\tInclude varasm.h.\n\t* tsan.c: Include expr.h.\n\t* ubsan.c: Include stor-layout.h.\n\tInclude stringpool.h.\n\t* value-prof.c: Include tree-nested.h.\n\tInclude calls.h.\n\t* var-tracking.c: Include varasm.h.\n\tInclude stor-layout.h.\n\t* varasm.c: Include stor-layout.h.\n\tInclude stringpool.h.\n\tInclude gcc-symtab.h.\n\tInclude varasm.h.\n\t* varpool.c: Include varasm.h.\n\t* vmsdbgout.c: Include varasm.h.\n\t* xcoffout.c: Include varasm.h.\n\nada/ChangeLog\n\n\t* gcc-interface/decl.c: Include stringpool.h\n\tInclude stor-layout.h\n\t* gcc-interface/misc.c: Include stor-layout.h\n\tInclude print-tree.h\n\t* gcc-interface/trans.c: Include stringpool.h\n\tInclude stor-layout.h\n\tInclude stmt.h\n\tInclude varasm.h\n\t* gcc-interface/utils.c: Include stringpool.h\n\tInclude stor-layout.h\n\tInclude attribs.h\n\tInclude varasm.h\n\t* gcc-interface/utils2.c: Include stringpool.h\n\tInclude stor-layout.h\n\tInclude attribs.h\n\tInclude varasm.h\n\nc-family/ChangeLog\n\n\t* c-common.c: Include fold-const.h.\n\tInclude stor-layout.h.\n\tInclude calls.h.\n\tInclude stringpool.h.\n\tInclude attribs.h.\n\tInclude varasm.h.\n\tInclude trans-mem.h.\n\t* c-cppbuiltin.c: Include stor-layout.h.\n\tInclude stringpool.h.\n\t* c-format.c: Include stringpool.h.\n\t* c-lex.c: Include stringpool.h.\n\tInclude stor-layout.h.\n\t* c-pragma.c: Include stringpool.h.\n\tInclude attribs.h.\n\tInclude varasm.h.\n\tInclude gcc-symtab.h.\n\t* c-pretty-print.c: Include stor-layout.h.\n\tInclude attribs.h.\n\t* cilk.c: Include stringpool.h.\n\tInclude calls.h.\n\nc/ChangeLog\n\n\t* c-decl.c: Include print-tree.h.\n\tInclude stor-layout.h.\n\tInclude varasm.h.\n\tInclude attribs.h.\n\tInclude stringpool.h.\n\t* c-lang.c: Include fold-const.h.\n\t* c-parser.c: Include stringpool.h.\n\tInclude attribs.h.\n\tInclude stor-layout.h.\n\tInclude varasm.h.\n\tInclude trans-mem.h.\n\t* c-typeck.c: Include stor-layout.h.\n\tInclude trans-mem.h.\n\tInclude varasm.h.\n\tInclude stmt.h.\n\ncp/ChangeLog\n\n\t* call.c: Include stor-layout.h.\n\tInclude trans-mem.h.\n\tInclude stringpool.h.\n\t* class.c: Include stringpool.h.\n\tInclude stor-layout.h.\n\tInclude attribs.h.\n\t* cp-gimplify.c: Include stor-layout.h.\n\t* cvt.c: Include stor-layout.h.\n\t* decl.c: Include stringpool.h.\n\tInclude stor-layout.h.\n\tInclude varasm.h.\n\tInclude attribs.h.\n\tInclude calls.h.\n\t* decl2.c: Include stringpool.h.\n\tInclude varasm.h.\n\tInclude attribs.h.\n\tInclude stor-layout.h.\n\tInclude calls.h.\n\t* error.c: Include stringpool.h.\n\t* except.c: Include stringpool.h.\n\tInclude trans-mem.h.\n\tInclude attribs.h.\n\t* init.c: Include stringpool.h.\n\tInclude varasm.h.\n\t* lambda.c: Include stringpool.h.\n\t* lex.c: Include stringpool.h.\n\t* mangle.c: Include stor-layout.h.\n\tInclude stringpool.h.\n\t* method.c: Include stringpool.h.\n\tInclude varasm.h.\n\t* name-lookup.c: Include stringpool.h.\n\tInclude print-tree.h.\n\tInclude attribs.h.\n\t* optimize.c: Include stringpool.h.\n\t* parser.c: Include print-tree.h.\n\tInclude stringpool.h.\n\tInclude attribs.h.\n\tInclude trans-mem.h.\n\t* pt.c: Include stringpool.h.\n\tInclude varasm.h.\n\tInclude attribs.h.\n\tInclude stor-layout.h.\n\t* ptree.c: Include print-tree.h.\n\t* repo.c: Include stringpool.h.\n\t* rtti.c: Include stringpool.h.\n\tInclude stor-layout.h.\n\t* semantics.c: Include stmt.h.\n\tInclude varasm.h.\n\tInclude stor-layout.h.\n\tInclude stringpool.h.\n\t* tree.c: Include stor-layout.h.\n\tInclude print-tree.h.\n\tInclude tree-iterator.h.\n\t* typeck.c: Include stor-layout.h.\n\tInclude varasm.h.\n\t* typeck2.c: Include stor-layout.h.\n\tInclude varasm.h.\n\t* vtable-class-hierarchy.c: Include stringpool.h.\n\tInclude stor-layout.h.\n\nfortran/ChangeLog\n\n\t* decl.c: Include stringpool.h.\n\t* iresolve.c: Include stringpool.h.\n\t* match.c: Include stringpool.h.\n\t* module.c: Include stringpool.h.\n\t* target-memory.c: Include stor-layout.h.\n\t* trans-common.c: Include stringpool.h.\n\tInclude stor-layout.h.\n\tInclude varasm.h.\n\t* trans-const.c: Include stor-layout.h.\n\t* trans-decl.c: Include stringpool.h.\n\tInclude stor-layout.h.\n\tInclude varasm.h.\n\tInclude attribs.h.\n\t* trans-expr.c: Include stringpool.h.\n\t* trans-intrinsic.c: Include stringpool.h.\n\tInclude tree-nested.h.\n\tInclude stor-layout.h.\n\t* trans-io.c: Include stringpool.h.\n\tInclude stor-layout.h.\n\t* trans-openmp.c: Include stringpool.h.\n\t* trans-stmt.c: Include stringpool.h.\n\t* trans-types.c: Include stor-layout.h.\n\tInclude stringpool.h.\n\t* trans.c: Include stringpool.h.\n\ngo/ChangeLog\n\n\t* go-backend.c: Include stor-layout.h.\n\t* go-gcc.cc: Include stringpool.h.\n\tInclude stor-layout.h.\n\tInclude varasm.h.\n\t* go-lang.c: Include stor-layout.h.\n\njava/ChangeLog\n\n\t* builtins.c: Include stor-layout.h.\n\tInclude stringpool.h.\n\t* class.c: Include stringpool.h.\n\tInclude stor-layout.h.\n\tInclude varasm.h.\n\t* constants.c: Include stringpool.h.\n\tInclude stor-layout.h.\n\t* decl.c: Include stor-layout.h.\n\tInclude stringpool.h.\n\tInclude varasm.h.\n\t* except.c: Include stringpool.h.\n\tInclude stor-layout.h.\n\t* expr.c: Include stringpool.h.\n\tInclude stor-layout.h.\n\t* jcf-parse.c: Include stringpool.h.\n\t* mangle.c: Include stringpool.h.\n\t* resource.c: Include stringpool.h.\n\tInclude stor-layout.h.\n\t* typeck.c: Include stor-layout.h.\n\tInclude stringpool.h.\n\t* verify-glue.c: Include stringpool.h.\n\nlto/ChangeLog\n\t* lto-lang.c: Include stringpool.h.\n\tInclude stor-layout.h.\n\t* lto-partition.c: Include gcc-symtab.h.\n\t* lto.c: Include stor-layout.h.\n\nobjc/ChangeLog\n\t* objc-act.c: Include stringpool.h.\n\tInclude stor-layout.h.\n\tInclude attribs.h.\n\t* objc-encoding.c: Include stringpool.h.\n\tInclude stor-layout.h.\n\t* objc-gnu-runtime-abi-01.c: Include stringpool.h.\n\t* objc-next-runtime-abi-01.c:\n\tInclude stringpool.h.\n\t* objc-next-runtime-abi-02.c: Include stringpool.h.\n\t* objc-runtime-shared-support.c: Include stringpool.h.\n\ntestsuite/ChangeLog\n\n\t* gcc.dg/plugin/selfassign.c: Include stringpool.h.\n\t* gcc.dg/plugin/start_unit_plugin.c: Likewise.\n\nFrom-SVN: r205023", "tree": {"sha": "058d42df305c5405dc414593bf44994dd6f03cfe", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/058d42df305c5405dc414593bf44994dd6f03cfe"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d8a2d370dc8e418c97cfacbef66a86ab444e94d2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d8a2d370dc8e418c97cfacbef66a86ab444e94d2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d8a2d370dc8e418c97cfacbef66a86ab444e94d2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/comments", "author": {"login": "dnovillo", "id": 7295335, "node_id": "MDQ6VXNlcjcyOTUzMzU=", "avatar_url": "https://avatars.githubusercontent.com/u/7295335?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dnovillo", "html_url": "https://github.com/dnovillo", "followers_url": "https://api.github.com/users/dnovillo/followers", "following_url": "https://api.github.com/users/dnovillo/following{/other_user}", "gists_url": "https://api.github.com/users/dnovillo/gists{/gist_id}", "starred_url": "https://api.github.com/users/dnovillo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dnovillo/subscriptions", "organizations_url": "https://api.github.com/users/dnovillo/orgs", "repos_url": "https://api.github.com/users/dnovillo/repos", "events_url": "https://api.github.com/users/dnovillo/events{/privacy}", "received_events_url": "https://api.github.com/users/dnovillo/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "b9a55b135e5482e2484c27b6233ebf9132347ee5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b9a55b135e5482e2484c27b6233ebf9132347ee5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b9a55b135e5482e2484c27b6233ebf9132347ee5"}], "stats": {"total": 3001, "additions": 2433, "deletions": 568}, "files": [{"sha": "9e82c2fb169452849bd744d4b93f4339ec0ad96b", "filename": "gcc/ChangeLog", "status": "modified", "additions": 717, "deletions": 0, "changes": 717, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=d8a2d370dc8e418c97cfacbef66a86ab444e94d2", "patch": "@@ -911,6 +911,723 @@\n \t* config/tilepro/tilepro.c: Likewise.\n \t* config/xtensa/xtensa.c: Likewise.\n \n+2013-11-14  Diego Novillo  <dnovillo@google.com>\n+\n+\t* Makefile.in (PLUGIN_HEADERS): Add stringpool.h.\n+\n+2013-11-14  Diego Novillo  <dnovillo@google.com>\n+\n+\t* tree.h: Include fold-const.h.\n+\t(aggregate_value_p): Moved to function.h.\n+\t(alloca_call_p): Moved to calls.h.\n+\t(allocate_struct_function): Moved to function.h.\n+\t(apply_tm_attr): Moved to attribs.h.\n+\t(array_at_struct_end_p): Moved to expr.h.\n+\t(array_ref_element_size): Moved to tree-dfa.h.\n+\t(array_ref_low_bound): Moved to tree-dfa.h.\n+\t(array_ref_up_bound): Moved to tree.h.\n+\t(assemble_alias): Moved to cgraph.h.\n+\t(bit_from_pos): Moved to stor-layout.h.\n+\t(build_addr): Moved to tree-nested.h.\n+\t(build_duplicate_type): Moved to tree-inline.h.\n+\t(build_fold_addr_expr): Moved to fold-const.h.\n+\t(build_fold_addr_expr_with_type): Moved to fold-const.h.\n+\t(build_fold_addr_expr_with_type_loc): Moved to fold-const.h.\n+\t(build_fold_indirect_ref): Moved to fold-const.h.\n+\t(build_fold_indirect_ref_loc): Moved to fold-const.h.\n+\t(build_personality_function): Moved to tree.h.\n+\t(build_range_check): Moved to fold-const.h.\n+\t(build_simple_mem_ref): Moved to fold-const.h.\n+\t(build_simple_mem_ref_loc): Moved to fold-const.h.\n+\t(build_tm_abort_call): Moved to trans-mem.h.\n+\t(byte_from_pos): Moved to stor-layout.h.\n+\t(call_expr_flags): Moved to calls.h.\n+\t(can_move_by_pieces): Moved to expr.h.\n+\t(categorize_ctor_elements): Moved to expr.h.\n+\t(change_decl_assembler_name): Moved to gcc-symtab.h.\n+\t(combine_comparisons): Moved to fold-const.h.\n+\t(complete_ctor_at_level_p): Moved to tree.h.\n+\t(component_ref_field_offset): Moved to tree-dfa.h.\n+\t(compute_builtin_object_size): Moved to tree-object-size.h.\n+\t(compute_record_mode): Moved to stor-layout.h.\n+\t(constant_boolean_node): Moved to fold-const.h.\n+\t(constructor_static_from_elts_p): Moved to varasm.h.\n+\t(cxx11_attribute_p): Moved to attribs.h.\n+\t(debug_body): Moved to print-tree.h.\n+\t(debug_find_tree): Moved to tree-inline.h.\n+\t(debug_fold_checksum): Moved to fold-const.h.\n+\t(debug_head): Moved to print-tree.h.\n+\t(debug_head): Moved to print-tree.h.\n+\t(debug_raw): Moved to print-tree.h.\n+\t(debug_tree): Moved to print-tree.h.\n+\t(debug_vec_tree): Moved to print-tree.h.\n+\t(debug_verbose): Moved to print-tree.h.\n+\t(debug_verbose): Moved to print-tree.h.\n+\t(decl_attributes): Moved to attribs.h.\n+\t(decl_binds_to_current_def_p): Moved to varasm.h.\n+\t(decl_default_tls_model): Moved to varasm.h.\n+\t(decl_replaceable_p): Moved to varasm.h.\n+\t(div_if_zero_remainder): Moved to fold-const.h.\n+\t(double_int mem_ref_offset): Moved to fold-const.h.\n+\t(dump_addr): Moved to print-tree.h.\n+\t(element_precision): Moved to machmode.h.\n+\t(expand_dummy_function_end): Moved to function.h.\n+\t(expand_function_end): Moved to function.h.\n+\t(expand_function_start): Moved to function.h.\n+\t(expand_label): Moved to stmt.h.\n+\t(expr_first): Moved to tree-iterator.h.\n+\t(expr_last): Moved to tree-iterator.h.\n+\t(finalize_size_functions): Moved to stor-layout.h.\n+\t(finish_builtin_struct): Moved to stor-layout.h.\n+\t(finish_record_layout): Moved to stor-layout.h.\n+\t(fixup_signed_type): Moved to stor-layout.h.\n+\t(fixup_unsigned_type): Moved to stor-layout.h.\n+\t(flags_from_decl_or_type): Moved to calls.h.\n+\t(fold): Moved to fold-const.h.\n+\t(fold_abs_const): Moved to fold-const.h.\n+\t(fold_binary): Moved to fold-const.h.\n+\t(fold_binary_loc): Moved to fold-const.h.\n+\t(fold_binary_to_constant): Moved to fold-const.h.\n+\t(fold_build1): Moved to fold-const.h.\n+\t(fold_build1_initializer_loc): Moved to fold-const.h.\n+\t(fold_build1_loc): Moved to fold-const.h.\n+\t(fold_build1_stat_loc): Moved to fold-const.h.\n+\t(fold_build2): Moved to fold-const.h.\n+\t(fold_build2_initializer_loc): Moved to fold-const.h.\n+\t(fold_build2_loc): Moved to fold-const.h.\n+\t(fold_build2_stat_loc): Moved to fold-const.h.\n+\t(fold_build3): Moved to fold-const.h.\n+\t(fold_build3_loc): Moved to fold-const.h.\n+\t(fold_build3_stat_loc): Moved to fold-const.h.\n+\t(fold_build_call_array): Moved to fold-const.h.\n+\t(fold_build_call_array_initializer): Moved to fold-const.h.\n+\t(fold_build_call_array_initializer_loc): Moved to fold-const.h.\n+\t(fold_build_call_array_loc): Moved to fold-const.h.\n+\t(fold_build_cleanup_point_expr): Moved to fold-const.h.\n+\t(fold_convert): Moved to fold-const.h.\n+\t(fold_convert_loc): Moved to fold-const.h.\n+\t(fold_convertible_p): Moved to fold-const.h.\n+\t(fold_defer_overflow_warnings): Moved to fold-const.h.\n+\t(fold_deferring_overflow_warnings_p): Moved to fold-const.h.\n+\t(fold_fma): Moved to fold-const.h.\n+\t(fold_ignored_result): Moved to fold-const.h.\n+\t(fold_indirect_ref): Moved to fold-const.h.\n+\t(fold_indirect_ref_1): Moved to fold-const.h.\n+\t(fold_indirect_ref_loc): Moved to fold-const.h.\n+\t(fold_read_from_constant_string): Moved to fold-const.h.\n+\t(fold_real_zero_addition_p): Moved to fold-const.h.\n+\t(fold_single_bit_test): Moved to fold-const.h.\n+\t(fold_strip_sign_ops): Moved to fold-const.h.\n+\t(fold_ternary): Moved to fold-const.h.\n+\t(fold_ternary_loc): Moved to fold-const.h.\n+\t(fold_unary): Moved to tree-data-ref.h.\n+\t(fold_unary_ignore_overflow): Moved to fold-const.h.\n+\t(fold_unary_ignore_overflow_loc): Moved to fold-const.h.\n+\t(fold_unary_loc): Moved to fold-const.h.\n+\t(fold_unary_to_constant): Moved to fold-const.h.\n+\t(fold_undefer_and_ignore_overflow_warnings): Moved to fold-const.h.\n+\t(fold_undefer_overflow_warnings): Moved to fold-const.h.\n+\t(folding_initializer): Moved to fold-const.h.\n+\t(free_temp_slots): Moved to function.h.\n+\t(generate_setjmp_warnings): Moved to function.h.\n+\t(get_attribute_name): Moved to attribs.h.\n+\t(get_identifier): Moved to stringpool.h.\n+\t(get_identifier_with_length): Moved to stringpool.h.\n+\t(get_inner_reference): Moved to tree.h.\n+\t(gimple_alloca_call_p): Moved to calls.h.\n+\t(gimplify_parameters): Moved to function.h.\n+\t(highest_pow2_factor): Moved to expr.h.\n+\t(indent_to): Moved to print-tree.h.\n+\t(init_attributes): Moved to attribs.h.\n+\t(init_dummy_function_start): Moved to function.h.\n+\t(init_function_start): Moved to function.h.\n+\t(init_inline_once): Moved to tree-inline.h.\n+\t(init_object_sizes): Moved to tree-object-size.h.\n+\t(init_temp_slots): Moved to function.h.\n+\t(init_tree_optimization_optabs): Moved to optabs.h.\n+\t(initialize_sizetypes): Moved to stor-layout.h.\n+\t(initializer_constant_valid_for_bitfield_p): Moved to varasm.h.\n+\t(initializer_constant_valid_p): Moved to varasm.h.\n+\t(int_const_binop): Moved to fold-const.h.\n+\t(internal_reference_types): Moved to stor-layout.h.\n+\t(invert_tree_comparison): Moved to fold-const.h.\n+\t(invert_truthvalue): Moved to fold-const.h.\n+\t(invert_truthvalue_loc): Moved to fold-const.h.\n+\t(is_tm_ending_fndecl): Moved to trans-mem.h.\n+\t(is_tm_may_cancel_outer): Moved to trans-mem.h.\n+\t(is_tm_pure): Moved to trans-mem.h.\n+\t(is_tm_safe): Moved to trans-mem.h.\n+\t(layout_decl): Moved to stor-layout.h.\n+\t(layout_type): Moved to stor-layout.h.\n+\t(lookup_attribute_spec): Moved to attribs.h.\n+\t(make_accum_type): Moved to stor-layout.h.\n+\t(make_decl_one_only): Moved to varasm.h.\n+\t(make_decl_rtl): Moved to tree.h.\n+\t(make_decl_rtl_for_debug): Moved to varasm.h.\n+\t(make_fract_type): Moved to stor-layout.h.\n+\t(make_or_reuse_sat_signed_accum_type): Moved to stor-layout.h.\n+\t(make_or_reuse_sat_signed_fract_type): Moved to stor-layout.h.\n+\t(make_or_reuse_sat_unsigned_accum_type): Moved to stor-layout.h.\n+\t(make_or_reuse_sat_unsigned_fract_type): Moved to stor-layout.h.\n+\t(make_or_reuse_signed_accum_type): Moved to stor-layout.h.\n+\t(make_or_reuse_signed_fract_type): Moved to stor-layout.h.\n+\t(make_or_reuse_unsigned_accum_type): Moved to stor-layout.h.\n+\t(make_or_reuse_unsigned_fract_type): Moved to stor-layout.h.\n+\t(make_range): Moved to fold-const.h.\n+\t(make_range_step): Moved to fold-const.h.\n+\t(make_sat_signed_accum_type): Moved to stor-layout.h.\n+\t(make_sat_signed_fract_type): Moved to stor-layout.h.\n+\t(make_sat_unsigned_accum_type): Moved to stor-layout.h.\n+\t(make_sat_unsigned_fract_type): Moved to stor-layout.h.\n+\t(make_signed_accum_type): Moved to stor-layout.h.\n+\t(make_signed_fract_type): Moved to stor-layout.h.\n+\t(make_signed_type): Moved to stor-layout.h.\n+\t(make_unsigned_accum_type): Moved to stor-layout.h.\n+\t(make_unsigned_fract_type): Moved to stor-layout.h.\n+\t(make_unsigned_type): Moved to stor-layout.h.\n+\t(mark_decl_referenced): Moved to varasm.h.\n+\t(mark_referenced): Moved to varasm.h.\n+\t(may_negate_without_overflow_p): Moved to fold-const.h.\n+\t(maybe_get_identifier): Moved to stringpool.h.\n+\t(merge_ranges): Moved to fold-const.h.\n+\t(merge_weak): Moved to varasm.h.\n+\t(mode_for_size_tree): Moved to stor-layout.h.\n+\t(multiple_of_p): Moved to fold-const.h.\n+\t(must_pass_in_stack_var_size): Moved to calls.h.\n+\t(must_pass_in_stack_var_size_or_pad): Moved to calls.h.\n+\t(native_encode_expr): Moved to fold-const.h.\n+\t(native_interpret_expr): Moved to fold-const.h.\n+\t(non_lvalue): Moved to fold-const.h.\n+\t(non_lvalue_loc): Moved to fold-const.h.\n+\t(normalize_offset): Moved to stor-layout.h.\n+\t(normalize_rli): Moved to stor-layout.h.\n+\t(notice_global_symbol): Moved to varasm.h.\n+\t(omit_one_operand): Moved to fold-const.h.\n+\t(omit_one_operand_loc): Moved to fold-const.h.\n+\t(omit_two_operands): Moved to fold-const.h.\n+\t(omit_two_operands_loc): Moved to fold-const.h.\n+\t(operand_equal_p): Moved to tree-data-ref.h.\n+\t(parse_input_constraint): Moved to stmt.h.\n+\t(parse_output_constraint): Moved to stmt.h.\n+\t(place_field): Moved to stor-layout.h.\n+\t(pop_function_context): Moved to function.h.\n+\t(pop_temp_slots): Moved to function.h.\n+\t(pos_from_bit): Moved to stor-layout.h.\n+\t(preserve_temp_slots): Moved to function.h.\n+\t(print_node): Moved to print-tree.h.\n+\t(print_node_brief): Moved to print-tree.h.\n+\t(print_rtl): Moved to rtl.h.\n+\t(process_pending_assemble_externals): Moved to varasm.h.\n+\t(ptr_difference_const): Moved to fold-const.h.\n+\t(push_function_context): Moved to function.h.\n+\t(push_struct_function): Moved to function.h.\n+\t(push_temp_slots): Moved to function.h.\n+\t(record_tm_replacement): Moved to trans-mem.h.\n+\t(relayout_decl): Moved to stor-layout.h.\n+\t(resolve_asm_operand_names): Moved to stmt.h.\n+\t(resolve_unique_section): Moved to varasm.h.\n+\t(rli_size_so_far): Moved to stor-layout.h.\n+\t(rli_size_unit_so_far): Moved to stor-layout.h.\n+\t(round_down): Moved to fold-const.h.\n+\t(round_down_loc): Moved to fold-const.h.\n+\t(round_up): Moved to fold-const.h.\n+\t(round_up_loc): Moved to fold-const.h.\n+\t(set_decl_incoming_rtl): Moved to emit-rtl.h.\n+\t(set_decl_rtl): Moved to tree.h.\n+\t(set_min_and_max_values_for_integral_type): Moved to stor-layout.h.\n+\t(set_user_assembler_name): Moved to varasm.h.\n+\t(setjmp_call_p): Moved to calls.h.\n+\t(size_binop): Moved to fold-const.h.\n+\t(size_binop_loc): Moved to fold-const.h.\n+\t(size_diffop): Moved to fold-const.h.\n+\t(size_diffop_loc): Moved to fold-const.h.\n+\t(size_int_kind): Moved to fold-const.h.\n+\t(stack_protect_epilogue): Moved to function.h.\n+\t(start_record_layout): Moved to stor-layout.h.\n+\t(supports_one_only): Moved to varasm.h.\n+\t(swap_tree_comparison): Moved to fold-const.h.\n+\t(tm_malloc_replacement): Moved to trans-mem.h.\n+\t(tree build_fold_addr_expr_loc): Moved to fold-const.h.\n+\t(tree build_invariant_address): Moved to fold-const.h.\n+\t(tree_binary_nonnegative_warnv_p): Moved to fold-const.h.\n+\t(tree_binary_nonzero_warnv_p): Moved to fold-const.h.\n+\t(tree_call_nonnegative_warnv_p): Moved to fold-const.h.\n+\t(tree_expr_nonnegative_p): Moved to fold-const.h.\n+\t(tree_expr_nonnegative_warnv_p): Moved to fold-const.h.\n+\t(tree_output_constant_def): Moved to varasm.h.\n+\t(tree_overlaps_hard_reg_set): Moved to stmt.h.\n+\t(tree_single_nonnegative_warnv_p): Moved to fold-const.h.\n+\t(tree_single_nonzero_warnv_p): Moved to fold-const.h.\n+\t(tree_swap_operands_p): Moved to fold-const.h.\n+\t(tree_unary_nonnegative_warnv_p): Moved to fold-const.h.\n+\t(tree_unary_nonzero_warnv_p): Moved to fold-const.h.\n+\t(update_alignment_for_field): Moved to stor-layout.h.\n+\t(use_register_for_decl): Moved to function.h.\n+\t(variable_size): Moved to rtl.h.\n+\t(vector_type_mode): Moved to stor-layout.h.\n+\t* cgraph.h: Corresponding changes.\n+\t* emit-rtl.h: Corresponding changes.\n+\t* expr.h: Corresponding changes.\n+\t* function.h: Corresponding changes.\n+\t* optabs.h: Corresponding changes.\n+\t* trans-mem.h: Corresponding changes.\n+\tProtect against multiple inclusion.\n+\t* tree-inline.h: Corresponding changes.\n+\t* tree-iterator.h: Corresponding changes.\n+\t* tree-dfa.h: Include expr.h.\n+\t* tree-ssanames.h: Include stringpool.h.\n+\t* attribs.h: New file.\n+\t* calls.h: New file.\n+\t* fold-const.h: New file.\n+\t* gcc-symtab.h: New file.\n+\t* print-rtl.h: New file.\n+\t* print-tree.h: New file.\n+\t* stmt.h: New file.\n+\t* stor-layout.h: New file.\n+\t* strinpool.h: New file.\n+\t* tree-nested.h: New file\n+\t* tree-object-size.h: New file.\n+\t* varasm.h: New file.\n+\n+2013-11-14  Diego Novillo  <dnovillo@google.com>\n+\n+\t* alias.c: Include varasm.h.\n+\tInclude expr.h.\n+\t* asan.c: Include calls.h.\n+\tInclude stor-layout.h.\n+\tInclude varasm.h.\n+\t* attribs.c: Include stringpool.h.\n+\tInclude attribs.h.\n+\tInclude stor-layout.h.\n+\t* builtins.c: Include stringpool.h.\n+\tInclude stor-layout.h.\n+\tInclude calls.h.\n+\tInclude varasm.h.\n+\tInclude tree-object-size.h.\n+\t* calls.c: Include stor-layout.h.\n+\tInclude varasm.h.\n+\tInclude stringpool.h.\n+\tInclude attribs.h.\n+\t* cfgexpand.c: Include stringpool.h.\n+\tInclude varasm.h.\n+\tInclude stor-layout.h.\n+\tInclude stmt.h.\n+\tInclude print-tree.h.\n+\t* cgraph.c: Include varasm.h.\n+\tInclude calls.h.\n+\tInclude print-tree.h.\n+\t* cgraphclones.c: Include stringpool.h.\n+\tInclude function.h.\n+\tInclude emit-rtl.h.\n+\tMove inclusion of rtl.h earlier in the file.\n+\t* cgraphunit.c: Include varasm.h.\n+\tInclude stor-layout.h.\n+\tInclude stringpool.h.\n+\t* cilk-common.c: Include stringpool.h.\n+\tInclude stor-layout.h.\n+\t* combine.c: Include stor-layout.h.\n+\t* config/aarch64/aarch64-builtins.c: Include stor-layout.h.\n+\tInclude stringpool.h.\n+\tInclude calls.h.\n+\t* config/aarch64/aarch64.c: Include stringpool.h.\n+\tInclude stor-layout.h.\n+\tInclude calls.h.\n+\tInclude varasm.h.\n+\t* config/alpha/alpha.c: Include stor-layout.h.\n+\tInclude calls.h.\n+\tInclude varasm.h.\n+\t* config/arc/arc.c: Include varasm.h.\n+\tInclude stor-layout.h.\n+\tInclude stringpool.h.\n+\tInclude calls.h.\n+\t* config/arm/arm.c: Include stringpool.h.\n+\tInclude stor-layout.h.\n+\tInclude calls.h.\n+\tInclude varasm.h.\n+\t* config/avr/avr-c.c: Include stor-layout.h.\n+\t* config/avr/avr-log.c: Include print-tree.h.\n+\t* config/avr/avr.c: Include print-tree.h.\n+\tInclude calls.h.\n+\tInclude stor-layout.h.\n+\tInclude stringpool.h.\n+\t* config/bfin/bfin.c: Include varasm.h.\n+\tInclude calls.h.\n+\t* config/c6x/c6x.c: Include stor-layout.h.\n+\tInclude varasm.h.\n+\tInclude calls.h.\n+\tInclude stringpool.h.\n+\t* config/cr16/cr16.c: Include stor-layout.h.\n+\tInclude calls.h.\n+\t* config/cris/cris.c: Include varasm.h.\n+\tInclude stor-layout.h.\n+\tInclude calls.h.\n+\tInclude stmt.h.\n+\t* config/darwin.c: Include stringpool.h.\n+\tInclude varasm.h.\n+\tInclude stor-layout.h.\n+\t* config/epiphany/epiphany.c: Include stor-layout.h.\n+\tInclude varasm.h.\n+\tInclude calls.h.\n+\tInclude stringpool.h.\n+\t* config/fr30/fr30.c: Include stor-layout.h.\n+\tInclude varasm.h.\n+\t* config/frv/frv.c: Include varasm.h.\n+\tInclude stor-layout.h.\n+\tInclude stringpool.h.\n+\t* config/h8300/h8300.c: Include stor-layout.h.\n+\tInclude varasm.h.\n+\tInclude calls.h.\n+\tInclude stringpool.h.\n+\t* config/i386/i386.c: Include stringpool.h.\n+\tInclude attribs.h.\n+\tInclude calls.h.\n+\tInclude stor-layout.h.\n+\tInclude varasm.h.\n+\t* config/i386/winnt-cxx.c: Include stringpool.h.\n+\tInclude attribs.h.\n+\t* config/i386/winnt.c: Include stringpool.h.\n+\tInclude varasm.h.\n+\t* config/ia64/ia64-c.c: Include stringpool.h.\n+\t* config/ia64/ia64.c: Include stringpool.h.\n+\tInclude stor-layout.h.\n+\tInclude calls.h.\n+\tInclude varasm.h.\n+\t* config/iq2000/iq2000.c: Include stor-layout.h.\n+\tInclude calls.h.\n+\tInclude varasm.h.\n+\t* config/lm32/lm32.c: Include calls.h.\n+\t* config/m32c/m32c.c: Include stor-layout.h.\n+\tInclude varasm.h.\n+\tInclude calls.h.\n+\t* config/m32r/m32r.c: Include stor-layout.h.\n+\tInclude varasm.h.\n+\tInclude stringpool.h.\n+\tInclude calls.h.\n+\t* config/m68k/m68k.c: Include calls.h.\n+\tInclude stor-layout.h.\n+\tInclude varasm.h.\n+\t* config/mcore/mcore.c: Include stor-layout.h.\n+\tInclude varasm.h.\n+\tInclude stringpool.h.\n+\tInclude calls.h.\n+\t* config/mep/mep.c: Include varasm.h.\n+\tInclude calls.h.\n+\tInclude stringpool.h.\n+\tInclude stor-layout.h.\n+\t* config/microblaze/microblaze.c: Include varasm.h.\n+\tInclude stor-layout.h.\n+\tInclude calls.h.\n+\t* config/mips/mips.c: Include varasm.h.\n+\tInclude stringpool.h.\n+\tInclude stor-layout.h.\n+\tInclude calls.h.\n+\t* config/mmix/mmix.c: Include varasm.h.\n+\tInclude stor-layout.h.\n+\tInclude calls.h.\n+\t* config/mn10300/mn10300.c: Include stor-layout.h.\n+\tInclude varasm.h.\n+\tInclude calls.h.\n+\t* config/moxie/moxie.c: Include stor-layout.h.\n+\tInclude varasm.h.\n+\tInclude calls.h.\n+\t* config/msp430/msp430.c: Include stor-layout.h.\n+\tInclude calls.h.\n+\t* config/nds32/nds32.c: Include stor-layout.h.\n+\tInclude varasm.h.\n+\tInclude calls.h.\n+\t* config/pa/pa.c: Include stor-layout.h.\n+\tInclude stringpool.h.\n+\tInclude varasm.h.\n+\tInclude calls.h.\n+\t* config/pdp11/pdp11.c: Include stor-layout.h.\n+\tInclude varasm.h.\n+\tInclude calls.h.\n+\t* config/picochip/picochip.c: Include calls.h.\n+\tInclude stor-layout.h.\n+\tInclude stringpool.h.\n+\tInclude varasm.h.\n+\t* config/rl78/rl78.c: Include varasm.h.\n+\tInclude stor-layout.h.\n+\tInclude calls.h.\n+\t* config/rs6000/rs6000-c.c: Include stor-layout.h.\n+\tInclude stringpool.h.\n+\t* config/rs6000/rs6000.c: Include stringpool.h.\n+\tInclude stor-layout.h.\n+\tInclude calls.h.\n+\tInclude print-tree.h.\n+\tInclude varasm.h.\n+\t* config/rx/rx.c: Include varasm.h.\n+\tInclude stor-layout.h.\n+\tInclude calls.h.\n+\t* config/s390/s390.c: Include print-tree.h.\n+\tInclude stringpool.h.\n+\tInclude stor-layout.h.\n+\tInclude varasm.h.\n+\tInclude calls.h.\n+\t* config/score/score.c: Include stringpool.h.\n+\tInclude calls.h.\n+\tInclude varasm.h.\n+\tInclude stor-layout.h.\n+\t* config/sh/sh-c.c: Include stringpool.h.\n+\tInclude attribs.h.h.\n+\t* config/sh/sh.c: Include stringpool.h.\n+\tInclude stor-layout.h.\n+\tInclude calls.h.\n+\tInclude varasm.h.\n+\t* config/sol2-c.c: Include stringpool.h.\n+\tInclude attribs.h.\n+\t* config/sol2-cxx.c: Include stringpool.h.\n+\t* config/sol2.c: Include stringpool.h.\n+\tInclude varasm.h.\n+\t* config/sparc/sparc.c: Include stringpool.h.\n+\tInclude stor-layout.h.\n+\tInclude calls.h.\n+\tInclude varasm.h.\n+\t* config/spu/spu-c.c: Include stringpool.h.\n+\t* config/spu/spu.c: Include stringpool.h.\n+\tInclude stor-layout.h.\n+\tInclude calls.h.\n+\tInclude varasm.h.\n+\t* config/stormy16/stormy16.c: Include stringpool.h.\n+\tInclude stor-layout.h.\n+\tInclude varasm.h.\n+\tInclude calls.h.\n+\t* config/tilegx/tilegx.c: Include stringpool.h.\n+\tInclude stor-layout.h.\n+\tInclude varasm.h.\n+\tInclude calls.h.\n+\t* config/tilepro/tilepro.c: Include stringpool.h.\n+\tInclude stor-layout.h.\n+\tInclude varasm.h.\n+\tInclude calls.h.\n+\t* config/v850/v850-c.c: Include stringpool.h.\n+\tInclude attribs.h.\n+\t* config/v850/v850.c: Include stringpool.h.\n+\tInclude stor-layout.h.\n+\tInclude varasm.h.\n+\tInclude calls.h.\n+\t* config/vax/vax.c: Include calls.h.\n+\tInclude varasm.h.\n+\t* config/vms/vms.c: Include stringpool.h.\n+\t* config/vxworks.c: Include stringpool.h.\n+\t* config/xtensa/xtensa.c: Include stringpool.h.\n+\tInclude stor-layout.h.\n+\tInclude calls.h.\n+\tInclude varasm.h.\n+\t* convert.c: Include stor-layout.h.\n+\t* coverage.c: Include stringpool.h.\n+\tInclude stor-layout.h.\n+\t* dbxout.c: Include varasm.h.\n+\tInclude stor-layout.h.\n+\t* dojump.c: Include stor-layout.h.\n+\t* dse.c: Include stor-layout.h.\n+\t* dwarf2asm.c: Include stringpool.h.\n+\tInclude varasm.h.\n+\t* dwarf2cfi.c: Include stor-layout.h.\n+\t* dwarf2out.c: Include rtl.h.\n+\tInclude stringpool.h.\n+\tInclude stor-layout.h.\n+\tInclude varasm.h.\n+\tInclude function.h.\n+\tInclude emit-rtl.h.\n+\tMove inclusion of rtl.h earlier in the file.\n+\t* emit-rtl.c: Include varasm.h.\n+\t* except.c: Include stringpool.h.\n+\tInclude stor-layout.h.\n+\t* explow.c: Include stor-layout.h.\n+\t* expmed.c: Include stor-layout.h.\n+\t* expr.c: Include stringpool.h.\n+\tInclude stor-layout.h.\n+\tInclude attribs.h.\n+\tInclude varasm.h.\n+\t* final.c: Include varasm.h.\n+\t* fold-const.c: Include stor-layout.h.\n+\tInclude calls.h.\n+\tInclude tree-iterator.h.\n+\t* function.c: Include stor-layout.h.\n+\tInclude varasm.h.\n+\tInclude stringpool.h.\n+\t* genattrtab.c (write_header): Emit includes for varasm.h,\n+\tstor-layout.h and calls.h.\n+\t* genautomata.c (main): Likewise.\n+\t* genemit.c: Likewise.\n+\t* genopinit.c: Likewise.\n+\t* genoutput.c (output_prologue): Likewise.\n+\t* genpeep.c: Likewise.\n+\t* genpreds.c (write_insn_preds_c): Likewise.\n+\t* gengtype.c (open_base_files): Add stringpool.h.\n+\t* gimple-expr.c: Include stringpool.h.\n+\tInclude stor-layout.h.\n+\t* gimple-fold.c: Include stringpool.h.\n+\tInclude expr.h.\n+\tInclude stmt.h.\n+\tInclude stor-layout.h.\n+\t* gimple-low.c: Include tree-nested.h.\n+\tInclude calls.h.\n+\t* gimple-pretty-print.c: Include stringpool.h.\n+\t* gimple-ssa-strength-reduction.c: Include stor-layout.h.\n+\tInclude expr.h.\n+\t* gimple-walk.c: Include stmt.h.\n+\t* gimple.c: Include calls.h.\n+\tInclude stmt.h.\n+\tInclude stor-layout.h.\n+\t* gimplify.c: Include stringpool.h.\n+\tInclude calls.h.\n+\tInclude varasm.h.\n+\tInclude stor-layout.h.\n+\tInclude stmt.h.\n+\tInclude print-tree.h.\n+\tInclude expr.h.\n+\t* gimplify-me.c: Include stmt.h\n+\tInclude stor-layout.h\n+\t* internal-fn.c: Include stor-layout.h.\n+\t* ipa-devirt.c: Include print-tree.h.\n+\tInclude calls.h.\n+\t* ipa-inline-analysis.c: Include stor-layout.h.\n+\tInclude stringpool.h.\n+\tInclude print-tree.h.\n+\t* ipa-inline.c: Include trans-mem.h.\n+\tInclude calls.h.\n+\t* ipa-prop.c: Include expr.h.\n+\tInclude stor-layout.h.\n+\tInclude print-tree.h.\n+\t* ipa-pure-const.c: Include print-tree.h.\n+\tInclude calls.h.\n+\t* ipa-reference.c: Include calls.h.\n+\t* ipa-split.c: Include stringpool.h.\n+\tInclude expr.h.\n+\tInclude calls.h.\n+\t* ipa.c: Include calls.h.\n+\tInclude stringpool.h.\n+\t* langhooks.c: Include stringpool.h.\n+\tInclude attribs.h.\n+\t* lto-cgraph.c: Include stringpool.h.\n+\t* lto-streamer-in.c: Include stringpool.h.\n+\t* lto-streamer-out.c: Include stor-layout.h.\n+\tInclude stringpool.h.\n+\t* omp-low.c: Include stringpool.h.\n+\tInclude stor-layout.h.\n+\tInclude expr.h.\n+\t* optabs.c: Include stor-layout.h.\n+\tInclude stringpool.h.\n+\tInclude varasm.h.\n+\t* passes.c: Include varasm.h.\n+\t* predict.c: Include calls.h.\n+\t* print-rtl.c: Include print-tree.h.\n+\t* print-tree.c: Include varasm.h.\n+\tInclude print-rtl.h.\n+\tInclude stor-layout.h.\n+\t* realmpfr.c: Include stor-layout.h.\n+\t* reg-stack.c: Include varasm.h.\n+\t* sdbout.c: Include varasm.h.\n+\tInclude stor-layout.h.\n+\t* simplify-rtx.c: Include varasm.h.\n+\t* stmt.c: Include varasm.h.\n+\tInclude stor-layout.h.\n+\t* stor-layout.c: Include stor-layout.h.\n+\tInclude stringpool.h.\n+\tInclude varasm.h.\n+\tInclude print-tree.h.\n+\t* symtab.c: Include rtl.h.\n+\tInclude print-tree.h.\n+\tInclude varasm.h.\n+\tInclude function.h.\n+\tInclude emit-rtl.h.\n+\t* targhooks.c: Include stor-layout.h.\n+\tInclude varasm.h.\n+\t* toplev.c: Include varasm.h.\n+\tInclude tree-inline.h.\n+\t* trans-mem.c: Include calls.h.\n+\tInclude function.h.\n+\tInclude rtl.h.\n+\tInclude emit-rtl.h.\n+\t* tree-affine.c: Include expr.h.\n+\t* tree-browser.c: Include print-tree.h.\n+\t* tree-call-cdce.c: Include stor-layout.h.\n+\t* tree-cfg.c: Include trans-mem.h.\n+\tInclude stor-layout.h.\n+\tInclude print-tree.h.\n+\t* tree-complex.c: Include stor-layout.h.\n+\t* tree-data-ref.c: Include expr.h.\n+\t* tree-dfa.c: Include stor-layout.h.\n+\t* tree-eh.c: Include expr.h.\n+\tInclude calls.h.\n+\t* tree-emutls.c: Include stor-layout.h.\n+\tInclude varasm.h.\n+\t* tree-if-conv.c: Include stor-layout.h.\n+\t* tree-inline.c: Include stor-layout.h.\n+\tInclude calls.h.\n+\t* tree-loop-distribution.c: Include stor-layout.h.\n+\t* tree-nested.c: Include stringpool.h.\n+\tInclude stor-layout.h.\n+\t* tree-object-size.c: Include tree-object-size.h.\n+\t* tree-outof-ssa.c: Include stor-layout.h.\n+\t* tree-parloops.c: Include stor-layout.h.\n+\tInclude tree-nested.h.\n+\t* tree-pretty-print.c: Include stor-layout.h.\n+\tInclude expr.h.\n+\t* tree-profile.c: Include varasm.h.\n+\tInclude tree-nested.h.\n+\t* tree-scalar-evolution.c: Include expr.h.\n+\t* tree-sra.c: Include stor-layout.h.\n+\t* tree-ssa-address.c: Include stor-layout.h.\n+\t* tree-ssa-ccp.c: Include stor-layout.h.\n+\t* tree-ssa-dce.c: Include calls.h.\n+\t* tree-ssa-dom.c: Include stor-layout.h.\n+\t* tree-ssa-forwprop.c: Include stor-layout.h.\n+\t* tree-ssa-ifcombine.c: Include stor-layout.h.\n+\t* tree-ssa-loop-ivopts.c: Include stor-layout.h.\n+\t* tree-ssa-loop-niter.c: Include calls.h.\n+\tInclude expr.h.\n+\t* tree-ssa-loop-prefetch.c: Include stor-layout.h.\n+\t* tree-ssa-math-opts.c: Include stor-layout.h.\n+\t* tree-ssa-operands.c: Include stmt.h.\n+\tInclude print-tree.h.\n+\t* tree-ssa-phiopt.c: Include stor-layout.h.\n+\t* tree-ssa-reassoc.c: Include stor-layout.h.\n+\t* tree-ssa-sccvn.c: Include stor-layout.h.\n+\t* tree-ssa-sink.c: Include stor-layout.h.\n+\t* tree-ssa-strlen.c: Include stor-layout.h.\n+\t* tree-ssa-structalias.c: Include stor-layout.h.\n+\tInclude stmt.h.\n+\t* tree-ssa-tail-merge.c: Include stor-layout.h.\n+\tInclude trans-mem.h.\n+\t* tree-ssa-uncprop.c: Include stor-layout.h.\n+\t* tree-ssa.c: Include stor-layout.h.\n+\t* tree-ssanames.c: Include stor-layout.h.\n+\t* tree-streamer-in.c: Include stringpool.h.\n+\t* tree-streamer-out.c: Include stor-layout.h.\n+\t* tree-switch-conversion.c: Include varasm.h.\n+\tInclude stor-layout.h.\n+\t* tree-tailcall.c: Include stor-layout.h.\n+\t* tree-vect-data-refs.c: Include stor-layout.h.\n+\t* tree-vect-generic.c: Include stor-layout.h.\n+\t* tree-vect-loop.c: Include stor-layout.h.\n+\t* tree-vect-patterns.c: Include stor-layout.h.\n+\t* tree-vect-slp.c: Include stor-layout.h.\n+\t* tree-vect-stmts.c: Include stor-layout.h.\n+\t* tree-vectorizer.c: Include stor-layout.h.\n+\t* tree-vrp.c: Include stor-layout.h.\n+\tInclude calls.h.\n+\t* tree.c: Include stor-layout.h.\n+\tInclude calls.h.\n+\tInclude attribs.h.\n+\tInclude varasm.h.\n+\t* tsan.c: Include expr.h.\n+\t* ubsan.c: Include stor-layout.h.\n+\tInclude stringpool.h.\n+\t* value-prof.c: Include tree-nested.h.\n+\tInclude calls.h.\n+\t* var-tracking.c: Include varasm.h.\n+\tInclude stor-layout.h.\n+\t* varasm.c: Include stor-layout.h.\n+\tInclude stringpool.h.\n+\tInclude gcc-symtab.h.\n+\tInclude varasm.h.\n+\t* varpool.c: Include varasm.h.\n+\t* vmsdbgout.c: Include varasm.h.\n+\t* xcoffout.c: Include varasm.h.\n+\n 2013-11-14  Joern Rennecke  <joern.rennecke@embecosm.com>\n \n \t* config/arc/arc.md (doloop_begin_i): Remove extra alignment;"}, {"sha": "8cc8341048e7a4d9bdb91b49e5d35717c1013a43", "filename": "gcc/Makefile.in", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FMakefile.in?ref=d8a2d370dc8e418c97cfacbef66a86ab444e94d2", "patch": "@@ -3115,7 +3115,7 @@ PLUGIN_HEADERS = $(TREE_H) $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n   cppdefault.h flags.h $(MD5_H) params.def params.h prefix.h tree-inline.h \\\n   $(GIMPLE_PRETTY_PRINT_H) realmpfr.h \\\n   $(IPA_PROP_H) $(TARGET_H) $(RTL_H) $(TM_P_H) $(CFGLOOP_H) $(EMIT_RTL_H) \\\n-  version.h\n+  version.h stringpool.h\n \n # generate the 'build fragment' b-header-vars\n s-header-vars: Makefile"}, {"sha": "4d55405f6948dc40d0d6ba22192a51450404835a", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=d8a2d370dc8e418c97cfacbef66a86ab444e94d2", "patch": "@@ -64,6 +64,25 @@\n \n \t* gcc-interface/trans.c: Include gimple.h and pointer-set.h.\n \n+2013-11-14  Diego Novillo  <dnovillo@google.com>\n+\n+\t* gcc-interface/decl.c: Include stringpool.h\n+\tInclude stor-layout.h\n+\t* gcc-interface/misc.c: Include stor-layout.h\n+\tInclude print-tree.h\n+\t* gcc-interface/trans.c: Include stringpool.h\n+\tInclude stor-layout.h\n+\tInclude stmt.h\n+\tInclude varasm.h\n+\t* gcc-interface/utils.c: Include stringpool.h\n+\tInclude stor-layout.h\n+\tInclude attribs.h\n+\tInclude varasm.h\n+\t* gcc-interface/utils2.c: Include stringpool.h\n+\tInclude stor-layout.h\n+\tInclude attribs.h\n+\tInclude varasm.h\n+\n 2013-11-12  Andrew MacLeod  <amacleod@redhat.com>\n \n \t* gcc-interface/trans.c: Include gimplify.h."}, {"sha": "0d72be255a59da7ab8c9b65100a100cb1a0b419d", "filename": "gcc/ada/gcc-interface/decl.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Fada%2Fgcc-interface%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Fada%2Fgcc-interface%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgcc-interface%2Fdecl.c?ref=d8a2d370dc8e418c97cfacbef66a86ab444e94d2", "patch": "@@ -28,6 +28,8 @@\n #include \"coretypes.h\"\n #include \"tm.h\"\n #include \"tree.h\"\n+#include \"stringpool.h\"\n+#include \"stor-layout.h\"\n #include \"flags.h\"\n #include \"toplev.h\"\n #include \"ggc.h\""}, {"sha": "fc74be28fb84393a02eac0c7e5055a2218989041", "filename": "gcc/ada/gcc-interface/misc.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Fada%2Fgcc-interface%2Fmisc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Fada%2Fgcc-interface%2Fmisc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgcc-interface%2Fmisc.c?ref=d8a2d370dc8e418c97cfacbef66a86ab444e94d2", "patch": "@@ -30,6 +30,8 @@\n #include \"options.h\"\n #include \"tm.h\"\n #include \"tree.h\"\n+#include \"stor-layout.h\"\n+#include \"print-tree.h\"\n #include \"diagnostic.h\"\n #include \"target.h\"\n #include \"ggc.h\""}, {"sha": "53e66780f84a5fa4fd7b6c39a3e62a1651ad1ebc", "filename": "gcc/ada/gcc-interface/trans.c", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Fada%2Fgcc-interface%2Ftrans.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Fada%2Fgcc-interface%2Ftrans.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgcc-interface%2Ftrans.c?ref=d8a2d370dc8e418c97cfacbef66a86ab444e94d2", "patch": "@@ -28,6 +28,10 @@\n #include \"coretypes.h\"\n #include \"tm.h\"\n #include \"tree.h\"\n+#include \"stringpool.h\"\n+#include \"stor-layout.h\"\n+#include \"stmt.h\"\n+#include \"varasm.h\"\n #include \"flags.h\"\n #include \"ggc.h\"\n #include \"output.h\""}, {"sha": "4995ca4e92c621ce24c47d517553f64471eb472c", "filename": "gcc/ada/gcc-interface/utils.c", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Fada%2Fgcc-interface%2Futils.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Fada%2Fgcc-interface%2Futils.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgcc-interface%2Futils.c?ref=d8a2d370dc8e418c97cfacbef66a86ab444e94d2", "patch": "@@ -28,6 +28,10 @@\n #include \"coretypes.h\"\n #include \"tm.h\"\n #include \"tree.h\"\n+#include \"stringpool.h\"\n+#include \"stor-layout.h\"\n+#include \"attribs.h\"\n+#include \"varasm.h\"\n #include \"flags.h\"\n #include \"toplev.h\"\n #include \"diagnostic-core.h\""}, {"sha": "184a223ff132d85fddb5c851f554f44ef0b2b230", "filename": "gcc/ada/gcc-interface/utils2.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Fada%2Fgcc-interface%2Futils2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Fada%2Fgcc-interface%2Futils2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgcc-interface%2Futils2.c?ref=d8a2d370dc8e418c97cfacbef66a86ab444e94d2", "patch": "@@ -28,6 +28,9 @@\n #include \"coretypes.h\"\n #include \"tm.h\"\n #include \"tree.h\"\n+#include \"stor-layout.h\"\n+#include \"stringpool.h\"\n+#include \"varasm.h\"\n #include \"flags.h\"\n #include \"toplev.h\"\n #include \"ggc.h\""}, {"sha": "68650f02110419c7b4179705856ae2e50bc0b80d", "filename": "gcc/alias.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Falias.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Falias.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Falias.c?ref=d8a2d370dc8e418c97cfacbef66a86ab444e94d2", "patch": "@@ -24,6 +24,8 @@ along with GCC; see the file COPYING3.  If not see\n #include \"tm.h\"\n #include \"rtl.h\"\n #include \"tree.h\"\n+#include \"varasm.h\"\n+#include \"expr.h\"\n #include \"tm_p.h\"\n #include \"function.h\"\n #include \"alias.h\""}, {"sha": "d44aa636c559665e91697d4766b051df4b207378", "filename": "gcc/asan.c", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Fasan.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Fasan.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fasan.c?ref=d8a2d370dc8e418c97cfacbef66a86ab444e94d2", "patch": "@@ -26,8 +26,12 @@ along with GCC; see the file COPYING3.  If not see\n #include \"gimple.h\"\n #include \"gimplify.h\"\n #include \"gimple-iterator.h\"\n+#include \"calls.h\"\n+#include \"varasm.h\"\n+#include \"stor-layout.h\"\n #include \"tree-iterator.h\"\n #include \"cgraph.h\"\n+#include \"stringpool.h\"\n #include \"tree-ssanames.h\"\n #include \"tree-pass.h\"\n #include \"asan.h\""}, {"sha": "19b697d416ffe05baa356f72a698b9fd7b79bbbf", "filename": "gcc/attribs.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Fattribs.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Fattribs.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fattribs.c?ref=d8a2d370dc8e418c97cfacbef66a86ab444e94d2", "patch": "@@ -22,6 +22,9 @@ along with GCC; see the file COPYING3.  If not see\n #include \"coretypes.h\"\n #include \"tm.h\"\n #include \"tree.h\"\n+#include \"stringpool.h\"\n+#include \"attribs.h\"\n+#include \"stor-layout.h\"\n #include \"flags.h\"\n #include \"diagnostic-core.h\"\n #include \"ggc.h\""}, {"sha": "042e112ea8e89727749f193631357cef18a654ee", "filename": "gcc/attribs.h", "status": "added", "additions": 40, "deletions": 0, "changes": 40, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Fattribs.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Fattribs.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fattribs.h?ref=d8a2d370dc8e418c97cfacbef66a86ab444e94d2", "patch": "@@ -0,0 +1,40 @@\n+/* Declarations and definitions dealing with attribute handling.\n+   Copyright (C) 2013 Free Software Foundation, Inc.\n+\n+This file is part of GCC.\n+\n+GCC is free software; you can redistribute it and/or modify it under\n+the terms of the GNU General Public License as published by the Free\n+Software Foundation; either version 3, or (at your option) any later\n+version.\n+\n+GCC is distributed in the hope that it will be useful, but WITHOUT ANY\n+WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GCC; see the file COPYING3.  If not see\n+<http://www.gnu.org/licenses/>.  */\n+\n+#ifndef GCC_ATTRIBS_H\n+#define GCC_ATTRIBS_H\n+\n+extern const struct attribute_spec *lookup_attribute_spec (const_tree);\n+extern void init_attributes (void);\n+\n+/* Process the attributes listed in ATTRIBUTES and install them in *NODE,\n+   which is either a DECL (including a TYPE_DECL) or a TYPE.  If a DECL,\n+   it should be modified in place; if a TYPE, a copy should be created\n+   unless ATTR_FLAG_TYPE_IN_PLACE is set in FLAGS.  FLAGS gives further\n+   information, in the form of a bitwise OR of flags in enum attribute_flags\n+   from tree.h.  Depending on these flags, some attributes may be\n+   returned to be applied at a later stage (for example, to apply\n+   a decl attribute to the declaration rather than to its type).  */\n+extern tree decl_attributes (tree *, tree, int);\n+\n+extern bool cxx11_attribute_p (const_tree);\n+extern tree get_attribute_name (const_tree);\n+extern void apply_tm_attr (tree, tree);\n+\n+#endif // GCC_ATTRIBS_H"}, {"sha": "e96245709c08d8c62dc43e5cca8eabc59848ac88", "filename": "gcc/builtins.c", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Fbuiltins.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Fbuiltins.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fbuiltins.c?ref=d8a2d370dc8e418c97cfacbef66a86ab444e94d2", "patch": "@@ -24,6 +24,11 @@ along with GCC; see the file COPYING3.  If not see\n #include \"machmode.h\"\n #include \"rtl.h\"\n #include \"tree.h\"\n+#include \"stringpool.h\"\n+#include \"stor-layout.h\"\n+#include \"calls.h\"\n+#include \"varasm.h\"\n+#include \"tree-object-size.h\"\n #include \"realmpfr.h\"\n #include \"gimple.h\"\n #include \"flags.h\""}, {"sha": "599c024c9b04e58e86db5d0260d2228446f00b0e", "filename": "gcc/c-family/ChangeLog", "status": "modified", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Fc-family%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Fc-family%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2FChangeLog?ref=d8a2d370dc8e418c97cfacbef66a86ab444e94d2", "patch": "@@ -63,6 +63,29 @@\n \t* c-gimplify.c: Likewise.\n \t* cilk.c: Likewise.\n \n+2013-11-14  Diego Novillo  <dnovillo@google.com>\n+\n+\t* c-common.c: Include fold-const.h.\n+\tInclude stor-layout.h.\n+\tInclude calls.h.\n+\tInclude stringpool.h.\n+\tInclude attribs.h.\n+\tInclude varasm.h.\n+\tInclude trans-mem.h.\n+\t* c-cppbuiltin.c: Include stor-layout.h.\n+\tInclude stringpool.h.\n+\t* c-format.c: Include stringpool.h.\n+\t* c-lex.c: Include stringpool.h.\n+\tInclude stor-layout.h.\n+\t* c-pragma.c: Include stringpool.h.\n+\tInclude attribs.h.\n+\tInclude varasm.h.\n+\tInclude gcc-symtab.h.\n+\t* c-pretty-print.c: Include stor-layout.h.\n+\tInclude attribs.h.\n+\t* cilk.c: Include stringpool.h.\n+\tInclude calls.h.\n+\n 2013-11-13  Joseph Myers  <joseph@codesourcery.com>\n \n \t* c-common.h (enum rid): Add RID_AUTO_TYPE."}, {"sha": "b4bd63ba213b1afa4f68dadb3f7dc68ba559cb99", "filename": "gcc/c-family/c-common.c", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Fc-family%2Fc-common.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Fc-family%2Fc-common.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2Fc-common.c?ref=d8a2d370dc8e418c97cfacbef66a86ab444e94d2", "patch": "@@ -23,6 +23,13 @@ along with GCC; see the file COPYING3.  If not see\n #include \"tm.h\"\n #include \"intl.h\"\n #include \"tree.h\"\n+#include \"fold-const.h\"\n+#include \"stor-layout.h\"\n+#include \"calls.h\"\n+#include \"stringpool.h\"\n+#include \"attribs.h\"\n+#include \"varasm.h\"\n+#include \"trans-mem.h\"\n #include \"flags.h\"\n #include \"c-pragma.h\"\n #include \"ggc.h\""}, {"sha": "eb96b8338b05d5fdcd4a6d39f5d0d1f4eb17e477", "filename": "gcc/c-family/c-cppbuiltin.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Fc-family%2Fc-cppbuiltin.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Fc-family%2Fc-cppbuiltin.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2Fc-cppbuiltin.c?ref=d8a2d370dc8e418c97cfacbef66a86ab444e94d2", "patch": "@@ -22,6 +22,8 @@ along with GCC; see the file COPYING3.  If not see\n #include \"coretypes.h\"\n #include \"tm.h\"\n #include \"tree.h\"\n+#include \"stor-layout.h\"\n+#include \"stringpool.h\"\n #include \"version.h\"\n #include \"flags.h\"\n #include \"c-common.h\""}, {"sha": "8f6c0db46ae1df55cd24e91bbbf46b7b05c85f29", "filename": "gcc/c-family/c-format.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Fc-family%2Fc-format.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Fc-family%2Fc-format.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2Fc-format.c?ref=d8a2d370dc8e418c97cfacbef66a86ab444e94d2", "patch": "@@ -22,6 +22,7 @@ along with GCC; see the file COPYING3.  If not see\n #include \"coretypes.h\"\n #include \"tm.h\"\n #include \"tree.h\"\n+#include \"stringpool.h\"\n #include \"flags.h\"\n #include \"c-common.h\"\n #include \"c-objc.h\""}, {"sha": "85fa42671a11187a87d32238645fb6edfba7b76a", "filename": "gcc/c-family/c-lex.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Fc-family%2Fc-lex.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Fc-family%2Fc-lex.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2Fc-lex.c?ref=d8a2d370dc8e418c97cfacbef66a86ab444e94d2", "patch": "@@ -23,6 +23,8 @@ along with GCC; see the file COPYING3.  If not see\n #include \"tm.h\"\n \n #include \"tree.h\"\n+#include \"stringpool.h\"\n+#include \"stor-layout.h\"\n #include \"input.h\"\n #include \"c-common.h\"\n #include \"flags.h\""}, {"sha": "70fb39ae9cfb34cdd64b4f016eb42a0aa78098b0", "filename": "gcc/c-family/c-pragma.c", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Fc-family%2Fc-pragma.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Fc-family%2Fc-pragma.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2Fc-pragma.c?ref=d8a2d370dc8e418c97cfacbef66a86ab444e94d2", "patch": "@@ -22,6 +22,10 @@ along with GCC; see the file COPYING3.  If not see\n #include \"coretypes.h\"\n #include \"tm.h\"\n #include \"tree.h\"\n+#include \"stringpool.h\"\n+#include \"attribs.h\"\n+#include \"varasm.h\"\n+#include \"gcc-symtab.h\"\n #include \"function.h\"\t\t/* For cfun.  FIXME: Does the parser know\n \t\t\t\t   when it is inside a function, so that\n \t\t\t\t   we don't have to look at cfun?  */"}, {"sha": "af8a3fcdbe931759792ede14fd2246fcd8df57dd", "filename": "gcc/c-family/c-pretty-print.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Fc-family%2Fc-pretty-print.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Fc-family%2Fc-pretty-print.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2Fc-pretty-print.c?ref=d8a2d370dc8e418c97cfacbef66a86ab444e94d2", "patch": "@@ -23,6 +23,8 @@ along with GCC; see the file COPYING3.  If not see\n #include \"coretypes.h\"\n #include \"tm.h\"\n #include \"tree.h\"\n+#include \"stor-layout.h\"\n+#include \"attribs.h\"\n #include \"intl.h\"\n #include \"c-pretty-print.h\"\n #include \"tree-pretty-print.h\""}, {"sha": "894a35270c54c73dcb3db47746d38f2446a61f4b", "filename": "gcc/c-family/cilk.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Fc-family%2Fcilk.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Fc-family%2Fcilk.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2Fcilk.c?ref=d8a2d370dc8e418c97cfacbef66a86ab444e94d2", "patch": "@@ -24,6 +24,8 @@ along with GCC; see the file COPYING3.  If not see\n #include \"system.h\"\n #include \"coretypes.h\"\n #include \"tree.h\"\n+#include \"stringpool.h\"\n+#include \"calls.h\"\n #include \"langhooks.h\"\n #include \"gimple.h\"\n #include \"gimplify.h\""}, {"sha": "92dbcee48094d601d95877a846c304a2c06417bf", "filename": "gcc/c/ChangeLog", "status": "modified", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Fc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Fc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc%2FChangeLog?ref=d8a2d370dc8e418c97cfacbef66a86ab444e94d2", "patch": "@@ -39,6 +39,24 @@\n \n \t* c-typeck.c: Include only gimplify.h and gimple.h as needed.\n \n+2013-11-14  Diego Novillo  <dnovillo@google.com>\n+\n+\t* c-decl.c: Include print-tree.h.\n+\tInclude stor-layout.h.\n+\tInclude varasm.h.\n+\tInclude attribs.h.\n+\tInclude stringpool.h.\n+\t* c-lang.c: Include fold-const.h.\n+\t* c-parser.c: Include stringpool.h.\n+\tInclude attribs.h.\n+\tInclude stor-layout.h.\n+\tInclude varasm.h.\n+\tInclude trans-mem.h.\n+\t* c-typeck.c: Include stor-layout.h.\n+\tInclude trans-mem.h.\n+\tInclude varasm.h.\n+\tInclude stmt.h.\n+\n 2013-11-13  Joseph Myers  <joseph@codesourcery.com>\n \n \t* c-tree.h (c_typespec_keyword): Add cts_auto_type."}, {"sha": "4125bd94103632d4b7491328051626184e9b53b0", "filename": "gcc/c/c-decl.c", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Fc%2Fc-decl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Fc%2Fc-decl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc%2Fc-decl.c?ref=d8a2d370dc8e418c97cfacbef66a86ab444e94d2", "patch": "@@ -31,6 +31,11 @@ along with GCC; see the file COPYING3.  If not see\n #include \"tm.h\"\n #include \"intl.h\"\n #include \"tree.h\"\n+#include \"print-tree.h\"\n+#include \"stor-layout.h\"\n+#include \"varasm.h\"\n+#include \"attribs.h\"\n+#include \"stringpool.h\"\n #include \"tree-inline.h\"\n #include \"flags.h\"\n #include \"function.h\""}, {"sha": "8b0dca601e9a7d369043df62a163b57fd2a474d1", "filename": "gcc/c/c-lang.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Fc%2Fc-lang.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Fc%2Fc-lang.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc%2Fc-lang.c?ref=d8a2d370dc8e418c97cfacbef66a86ab444e94d2", "patch": "@@ -23,6 +23,7 @@ along with GCC; see the file COPYING3.  If not see\n #include \"coretypes.h\"\n #include \"tm.h\"\n #include \"tree.h\"\n+#include \"fold-const.h\"\n #include \"c-tree.h\"\n #include \"c-family/c-common.h\"\n #include \"langhooks.h\""}, {"sha": "ea3aa9a10438dcbf3e09b60d54921d8c2f1d85e2", "filename": "gcc/c/c-parser.c", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Fc%2Fc-parser.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Fc%2Fc-parser.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc%2Fc-parser.c?ref=d8a2d370dc8e418c97cfacbef66a86ab444e94d2", "patch": "@@ -40,6 +40,11 @@ along with GCC; see the file COPYING3.  If not see\n #include \"coretypes.h\"\n #include \"tm.h\"\t\t\t/* For rtl.h: needs enum reg_class.  */\n #include \"tree.h\"\n+#include \"stringpool.h\"\n+#include \"attribs.h\"\n+#include \"stor-layout.h\"\n+#include \"varasm.h\"\n+#include \"trans-mem.h\"\n #include \"langhooks.h\"\n #include \"input.h\"\n #include \"cpplib.h\""}, {"sha": "8e74b7b39188c6ffc4f31728c2f8384d403cbc5e", "filename": "gcc/c/c-typeck.c", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Fc%2Fc-typeck.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Fc%2Fc-typeck.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc%2Fc-typeck.c?ref=d8a2d370dc8e418c97cfacbef66a86ab444e94d2", "patch": "@@ -28,6 +28,10 @@ along with GCC; see the file COPYING3.  If not see\n #include \"coretypes.h\"\n #include \"tm.h\"\n #include \"tree.h\"\n+#include \"stor-layout.h\"\n+#include \"trans-mem.h\"\n+#include \"varasm.h\"\n+#include \"stmt.h\"\n #include \"langhooks.h\"\n #include \"c-tree.h\"\n #include \"c-lang.h\""}, {"sha": "726ba23c3fc1fe1d75c31d4f9c2cecfc2ba53e94", "filename": "gcc/calls.c", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Fcalls.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Fcalls.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcalls.c?ref=d8a2d370dc8e418c97cfacbef66a86ab444e94d2", "patch": "@@ -23,6 +23,10 @@ along with GCC; see the file COPYING3.  If not see\n #include \"tm.h\"\n #include \"rtl.h\"\n #include \"tree.h\"\n+#include \"stor-layout.h\"\n+#include \"varasm.h\"\n+#include \"stringpool.h\"\n+#include \"attribs.h\"\n #include \"gimple.h\"\n #include \"flags.h\"\n #include \"expr.h\""}, {"sha": "8e7273829050a1fd514d90cb41bc02064933402e", "filename": "gcc/calls.h", "status": "added", "additions": 31, "deletions": 0, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Fcalls.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Fcalls.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcalls.h?ref=d8a2d370dc8e418c97cfacbef66a86ab444e94d2", "patch": "@@ -0,0 +1,31 @@\n+/* Declarations anda data types for RTL call insn generation.\n+   Copyright (C) 2013 Free Software Foundation, Inc.\n+\n+This file is part of GCC.\n+\n+GCC is free software; you can redistribute it and/or modify it under\n+the terms of the GNU General Public License as published by the Free\n+Software Foundation; either version 3, or (at your option) any later\n+version.\n+\n+GCC is distributed in the hope that it will be useful, but WITHOUT ANY\n+WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GCC; see the file COPYING3.  If not see\n+<http://www.gnu.org/licenses/>.  */\n+\n+#ifndef GCC_CALLS_H\n+#define GCC_CALLS_H\n+\n+extern int flags_from_decl_or_type (const_tree);\n+extern int call_expr_flags (const_tree);\n+extern int setjmp_call_p (const_tree);\n+extern bool gimple_alloca_call_p (const_gimple);\n+extern bool alloca_call_p (const_tree);\n+extern bool must_pass_in_stack_var_size (enum machine_mode, const_tree);\n+extern bool must_pass_in_stack_var_size_or_pad (enum machine_mode, const_tree);\n+\n+#endif // GCC_CALLS_H"}, {"sha": "4ff1a8954281b401c74ea0e37b8470ccc6533d9f", "filename": "gcc/cfgexpand.c", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Fcfgexpand.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Fcfgexpand.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcfgexpand.c?ref=d8a2d370dc8e418c97cfacbef66a86ab444e94d2", "patch": "@@ -24,6 +24,11 @@ along with GCC; see the file COPYING3.  If not see\n #include \"rtl.h\"\n #include \"hard-reg-set.h\"\n #include \"tree.h\"\n+#include \"stringpool.h\"\n+#include \"varasm.h\"\n+#include \"stor-layout.h\"\n+#include \"stmt.h\"\n+#include \"print-tree.h\"\n #include \"tm_p.h\"\n #include \"basic-block.h\"\n #include \"function.h\""}, {"sha": "624d492cb75f43489ae77e11ac2502496b153248", "filename": "gcc/cgraph.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Fcgraph.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Fcgraph.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcgraph.c?ref=d8a2d370dc8e418c97cfacbef66a86ab444e94d2", "patch": "@@ -28,6 +28,9 @@ along with GCC; see the file COPYING3.  If not see\n #include \"coretypes.h\"\n #include \"tm.h\"\n #include \"tree.h\"\n+#include \"varasm.h\"\n+#include \"calls.h\"\n+#include \"print-tree.h\"\n #include \"tree-inline.h\"\n #include \"langhooks.h\"\n #include \"hashtab.h\""}, {"sha": "651f34e6fc22155d4b4a9056fe89e9b175db9a33", "filename": "gcc/cgraph.h", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Fcgraph.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Fcgraph.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcgraph.h?ref=d8a2d370dc8e418c97cfacbef66a86ab444e94d2", "patch": "@@ -852,6 +852,8 @@ void symtab_initialize_asm_name_hash (void);\n void symtab_prevail_in_asm_name_hash (symtab_node *node);\n void varpool_remove_initializer (struct varpool_node *);\n \n+/* In cgraph.c */\n+extern void change_decl_assembler_name (tree, tree);\n \n /* Return callgraph node for given symbol and check it is a function. */\n static inline struct cgraph_node *"}, {"sha": "795a321ae5701a5ea6ab7be3bf97b92909692107", "filename": "gcc/cgraphclones.c", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Fcgraphclones.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Fcgraphclones.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcgraphclones.c?ref=d8a2d370dc8e418c97cfacbef66a86ab444e94d2", "patch": "@@ -68,9 +68,12 @@ along with GCC; see the file COPYING3.  If not see\n #include \"system.h\"\n #include \"coretypes.h\"\n #include \"tm.h\"\n+#include \"rtl.h\"\n #include \"tree.h\"\n+#include \"stringpool.h\"\n+#include \"function.h\"\n+#include \"emit-rtl.h\"\n #include \"gimple.h\"\n-#include \"rtl.h\"\n #include \"bitmap.h\"\n #include \"tree-cfg.h\"\n #include \"tree-inline.h\""}, {"sha": "2fcd313b8532b8d556b0274a20970427928c5717", "filename": "gcc/cgraphunit.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Fcgraphunit.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Fcgraphunit.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcgraphunit.c?ref=d8a2d370dc8e418c97cfacbef66a86ab444e94d2", "patch": "@@ -162,6 +162,9 @@ along with GCC; see the file COPYING3.  If not see\n #include \"coretypes.h\"\n #include \"tm.h\"\n #include \"tree.h\"\n+#include \"varasm.h\"\n+#include \"stor-layout.h\"\n+#include \"stringpool.h\"\n #include \"output.h\"\n #include \"rtl.h\"\n #include \"gimple.h\""}, {"sha": "bdea617a2e872780e8c70345b3866eb8abf9cf63", "filename": "gcc/cilk-common.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Fcilk-common.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Fcilk-common.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcilk-common.c?ref=d8a2d370dc8e418c97cfacbef66a86ab444e94d2", "patch": "@@ -24,6 +24,8 @@ along with GCC; see the file COPYING3.  If not see\n #include \"system.h\"\n #include \"coretypes.h\"\n #include \"tree.h\"\n+#include \"stringpool.h\"\n+#include \"stor-layout.h\"\n #include \"langhooks.h\"\n #include \"expr.h\"\n #include \"optabs.h\""}, {"sha": "fb5c8814edb8ccb757f07901bdb72436d61132b5", "filename": "gcc/combine.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Fcombine.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Fcombine.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcombine.c?ref=d8a2d370dc8e418c97cfacbef66a86ab444e94d2", "patch": "@@ -81,6 +81,7 @@ along with GCC; see the file COPYING3.  If not see\n #include \"tm.h\"\n #include \"rtl.h\"\n #include \"tree.h\"\n+#include \"stor-layout.h\"\n #include \"tm_p.h\"\n #include \"flags.h\"\n #include \"regs.h\""}, {"sha": "2dc7838003b24d48f8b5d500d29ef34930b74e6f", "filename": "gcc/config/aarch64/aarch64-builtins.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Fconfig%2Faarch64%2Faarch64-builtins.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Fconfig%2Faarch64%2Faarch64-builtins.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Faarch64-builtins.c?ref=d8a2d370dc8e418c97cfacbef66a86ab444e94d2", "patch": "@@ -24,6 +24,9 @@\n #include \"tm.h\"\n #include \"rtl.h\"\n #include \"tree.h\"\n+#include \"stor-layout.h\"\n+#include \"stringpool.h\"\n+#include \"calls.h\"\n #include \"expr.h\"\n #include \"tm_p.h\"\n #include \"recog.h\""}, {"sha": "f9da7c4243403c5cc031c58d25ae8eb4b3e9a20b", "filename": "gcc/config/aarch64/aarch64.c", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Fconfig%2Faarch64%2Faarch64.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Fconfig%2Faarch64%2Faarch64.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Faarch64.c?ref=d8a2d370dc8e418c97cfacbef66a86ab444e94d2", "patch": "@@ -26,6 +26,10 @@\n #include \"rtl.h\"\n #include \"insn-attr.h\"\n #include \"tree.h\"\n+#include \"stringpool.h\"\n+#include \"stor-layout.h\"\n+#include \"calls.h\"\n+#include \"varasm.h\"\n #include \"regs.h\"\n #include \"df.h\"\n #include \"hard-reg-set.h\""}, {"sha": "a5171ea0def92a6783ee4fc32c44bc98c9abcb50", "filename": "gcc/config/alpha/alpha.c", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Fconfig%2Falpha%2Falpha.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Fconfig%2Falpha%2Falpha.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Falpha%2Falpha.c?ref=d8a2d370dc8e418c97cfacbef66a86ab444e94d2", "patch": "@@ -25,6 +25,9 @@ along with GCC; see the file COPYING3.  If not see\n #include \"tm.h\"\n #include \"rtl.h\"\n #include \"tree.h\"\n+#include \"stor-layout.h\"\n+#include \"calls.h\"\n+#include \"varasm.h\"\n #include \"regs.h\"\n #include \"hard-reg-set.h\"\n #include \"insn-config.h\"\n@@ -51,6 +54,7 @@ along with GCC; see the file COPYING3.  If not see\n #include \"gimple.h\"\n #include \"gimplify.h\"\n #include \"gimple-ssa.h\"\n+#include \"stringpool.h\"\n #include \"tree-ssanames.h\"\n #include \"tree-stdarg.h\"\n #include \"tm-constrs.h\""}, {"sha": "77932ce567c6d0acaae0ab3157c388120c4ab2ad", "filename": "gcc/config/arc/arc.c", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Fconfig%2Farc%2Farc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Fconfig%2Farc%2Farc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farc%2Farc.c?ref=d8a2d370dc8e418c97cfacbef66a86ab444e94d2", "patch": "@@ -34,6 +34,10 @@ along with GCC; see the file COPYING3.  If not see\n #include \"coretypes.h\"\n #include \"tm.h\"\n #include \"tree.h\"\n+#include \"varasm.h\"\n+#include \"stor-layout.h\"\n+#include \"stringpool.h\"\n+#include \"calls.h\"\n #include \"rtl.h\"\n #include \"regs.h\"\n #include \"hard-reg-set.h\""}, {"sha": "2d5f8671b14356127fb774d40698d0f2de74c398", "filename": "gcc/config/arm/arm.c", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Fconfig%2Farm%2Farm.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Fconfig%2Farm%2Farm.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm.c?ref=d8a2d370dc8e418c97cfacbef66a86ab444e94d2", "patch": "@@ -27,6 +27,10 @@\n #include \"tm.h\"\n #include \"rtl.h\"\n #include \"tree.h\"\n+#include \"stringpool.h\"\n+#include \"stor-layout.h\"\n+#include \"calls.h\"\n+#include \"varasm.h\"\n #include \"obstack.h\"\n #include \"regs.h\"\n #include \"hard-reg-set.h\""}, {"sha": "2cfb264ad2049fd49e555d2b169c9ab21894ee45", "filename": "gcc/config/avr/avr-c.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Fconfig%2Favr%2Favr-c.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Fconfig%2Favr%2Favr-c.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Favr%2Favr-c.c?ref=d8a2d370dc8e418c97cfacbef66a86ab444e94d2", "patch": "@@ -26,6 +26,7 @@\n #include \"tm_p.h\"\n #include \"cpplib.h\"\n #include \"tree.h\"\n+#include \"stor-layout.h\"\n #include \"target.h\"\n #include \"c-family/c-common.h\"\n #include \"langhooks.h\""}, {"sha": "3d2f54d9707a1fbc790eb4150c2b4dd9f6f7de85", "filename": "gcc/config/avr/avr-log.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Fconfig%2Favr%2Favr-log.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Fconfig%2Favr%2Favr-log.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Favr%2Favr-log.c?ref=d8a2d370dc8e418c97cfacbef66a86ab444e94d2", "patch": "@@ -24,6 +24,7 @@\n #include \"tm.h\"\n #include \"rtl.h\"\n #include \"tree.h\"\n+#include \"print-tree.h\"\n #include \"output.h\"\n #include \"input.h\"\n #include \"function.h\""}, {"sha": "8d98c811d9b75edd3d1a6eed2644c581da803a7b", "filename": "gcc/config/avr/avr.c", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Fconfig%2Favr%2Favr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Fconfig%2Favr%2Favr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Favr%2Favr.c?ref=d8a2d370dc8e418c97cfacbef66a86ab444e94d2", "patch": "@@ -32,6 +32,10 @@\n #include \"flags.h\"\n #include \"reload.h\"\n #include \"tree.h\"\n+#include \"print-tree.h\"\n+#include \"calls.h\"\n+#include \"stor-layout.h\"\n+#include \"stringpool.h\"\n #include \"output.h\"\n #include \"expr.h\"\n #include \"c-family/c-common.h\""}, {"sha": "0d473cbafbcc901a0a2d8d9953dbb897534f8f31", "filename": "gcc/config/bfin/bfin.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Fconfig%2Fbfin%2Fbfin.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Fconfig%2Fbfin%2Fbfin.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fbfin%2Fbfin.c?ref=d8a2d370dc8e418c97cfacbef66a86ab444e94d2", "patch": "@@ -32,6 +32,8 @@\n #include \"output.h\"\n #include \"insn-attr.h\"\n #include \"tree.h\"\n+#include \"varasm.h\"\n+#include \"calls.h\"\n #include \"flags.h\"\n #include \"except.h\"\n #include \"function.h\""}, {"sha": "af310bac8dc59e4b10562a58c11c84b9deac2a56", "filename": "gcc/config/c6x/c6x.c", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Fconfig%2Fc6x%2Fc6x.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Fconfig%2Fc6x%2Fc6x.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fc6x%2Fc6x.c?ref=d8a2d370dc8e418c97cfacbef66a86ab444e94d2", "patch": "@@ -25,6 +25,10 @@\n #include \"tm.h\"\n #include \"rtl.h\"\n #include \"tree.h\"\n+#include \"stor-layout.h\"\n+#include \"varasm.h\"\n+#include \"calls.h\"\n+#include \"stringpool.h\"\n #include \"insn-flags.h\"\n #include \"output.h\"\n #include \"insn-attr.h\""}, {"sha": "b3972766d5bfa157cc440bdb67de6cddaccc94d0", "filename": "gcc/config/cr16/cr16.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Fconfig%2Fcr16%2Fcr16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Fconfig%2Fcr16%2Fcr16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fcr16%2Fcr16.c?ref=d8a2d370dc8e418c97cfacbef66a86ab444e94d2", "patch": "@@ -24,6 +24,8 @@\n #include \"tm.h\"\n #include \"rtl.h\"\n #include \"tree.h\"\n+#include \"stor-layout.h\"\n+#include \"calls.h\"\n #include \"tm_p.h\"\n #include \"regs.h\"\n #include \"hard-reg-set.h\""}, {"sha": "2d2a108031d769705cf9f1a0cd40d296a39accbd", "filename": "gcc/config/cris/cris.c", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Fconfig%2Fcris%2Fcris.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Fconfig%2Fcris%2Fcris.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fcris%2Fcris.c?ref=d8a2d370dc8e418c97cfacbef66a86ab444e94d2", "patch": "@@ -30,6 +30,10 @@ along with GCC; see the file COPYING3.  If not see\n #include \"insn-attr.h\"\n #include \"flags.h\"\n #include \"tree.h\"\n+#include \"varasm.h\"\n+#include \"stor-layout.h\"\n+#include \"calls.h\"\n+#include \"stmt.h\"\n #include \"expr.h\"\n #include \"except.h\"\n #include \"function.h\""}, {"sha": "761576df5657c42f28eb445ea87b35dd414ff983", "filename": "gcc/config/darwin.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Fconfig%2Fdarwin.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Fconfig%2Fdarwin.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fdarwin.c?ref=d8a2d370dc8e418c97cfacbef66a86ab444e94d2", "patch": "@@ -32,6 +32,9 @@ along with GCC; see the file COPYING3.  If not see\n #include \"insn-attr.h\"\n #include \"flags.h\"\n #include \"tree.h\"\n+#include \"stringpool.h\"\n+#include \"varasm.h\"\n+#include \"stor-layout.h\"\n #include \"expr.h\"\n #include \"reload.h\"\n #include \"function.h\""}, {"sha": "88459e2d4adf3855f5c429f3d2c841f92e1cad54", "filename": "gcc/config/epiphany/epiphany.c", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Fconfig%2Fepiphany%2Fepiphany.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Fconfig%2Fepiphany%2Fepiphany.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fepiphany%2Fepiphany.c?ref=d8a2d370dc8e418c97cfacbef66a86ab444e94d2", "patch": "@@ -23,6 +23,10 @@ along with GCC; see the file COPYING3.  If not see\n #include \"coretypes.h\"\n #include \"tm.h\"\n #include \"tree.h\"\n+#include \"stor-layout.h\"\n+#include \"varasm.h\"\n+#include \"calls.h\"\n+#include \"stringpool.h\"\n #include \"rtl.h\"\n #include \"regs.h\"\n #include \"hard-reg-set.h\""}, {"sha": "caa50d9e691ab893f174f1588c6ece95f4f9201d", "filename": "gcc/config/fr30/fr30.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Fconfig%2Ffr30%2Ffr30.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Fconfig%2Ffr30%2Ffr30.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Ffr30%2Ffr30.c?ref=d8a2d370dc8e418c97cfacbef66a86ab444e94d2", "patch": "@@ -33,6 +33,8 @@\n #include \"flags.h\"\n #include \"recog.h\"\n #include \"tree.h\"\n+#include \"stor-layout.h\"\n+#include \"varasm.h\"\n #include \"output.h\"\n #include \"expr.h\"\n #include \"obstack.h\""}, {"sha": "6e74fe48eaac49a43dffcf9d5bbc82dee77200ae", "filename": "gcc/config/frv/frv.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Fconfig%2Ffrv%2Ffrv.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Fconfig%2Ffrv%2Ffrv.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Ffrv%2Ffrv.c?ref=d8a2d370dc8e418c97cfacbef66a86ab444e94d2", "patch": "@@ -23,6 +23,9 @@ along with GCC; see the file COPYING3.  If not see\n #include \"tm.h\"\n #include \"rtl.h\"\n #include \"tree.h\"\n+#include \"varasm.h\"\n+#include \"stor-layout.h\"\n+#include \"stringpool.h\"\n #include \"regs.h\"\n #include \"hard-reg-set.h\"\n #include \"insn-config.h\""}, {"sha": "f0ebca30f2c7a21c36138ddcc873d88eb8138c6b", "filename": "gcc/config/h8300/h8300.c", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Fconfig%2Fh8300%2Fh8300.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Fconfig%2Fh8300%2Fh8300.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fh8300%2Fh8300.c?ref=d8a2d370dc8e418c97cfacbef66a86ab444e94d2", "patch": "@@ -25,6 +25,10 @@ along with GCC; see the file COPYING3.  If not see\n #include \"tm.h\"\n #include \"rtl.h\"\n #include \"tree.h\"\n+#include \"stor-layout.h\"\n+#include \"varasm.h\"\n+#include \"calls.h\"\n+#include \"stringpool.h\"\n #include \"regs.h\"\n #include \"hard-reg-set.h\"\n #include \"insn-config.h\""}, {"sha": "7ae9f57aeee3ff407fe849dd9c2a288d81d22222", "filename": "gcc/config/i386/i386.c", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Fconfig%2Fi386%2Fi386.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Fconfig%2Fi386%2Fi386.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.c?ref=d8a2d370dc8e418c97cfacbef66a86ab444e94d2", "patch": "@@ -23,6 +23,11 @@ along with GCC; see the file COPYING3.  If not see\n #include \"tm.h\"\n #include \"rtl.h\"\n #include \"tree.h\"\n+#include \"stringpool.h\"\n+#include \"attribs.h\"\n+#include \"calls.h\"\n+#include \"stor-layout.h\"\n+#include \"varasm.h\"\n #include \"tm_p.h\"\n #include \"regs.h\"\n #include \"hard-reg-set.h\""}, {"sha": "d466299abedbd012d62c5df7fac387d8291a6116", "filename": "gcc/config/i386/winnt-cxx.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Fconfig%2Fi386%2Fwinnt-cxx.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Fconfig%2Fi386%2Fwinnt-cxx.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fwinnt-cxx.c?ref=d8a2d370dc8e418c97cfacbef66a86ab444e94d2", "patch": "@@ -23,6 +23,8 @@ along with GCC; see the file COPYING3.  If not see\n #include \"coretypes.h\"\n #include \"tm.h\"\n #include \"tree.h\"\n+#include \"stringpool.h\"\n+#include \"attribs.h\"\n #include \"cp/cp-tree.h\" /* This is why we're a separate module.  */\n #include \"flags.h\"\n #include \"tm_p.h\""}, {"sha": "2c1677eec883ac1a683358955c05682cbf1cb50f", "filename": "gcc/config/i386/winnt.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Fconfig%2Fi386%2Fwinnt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Fconfig%2Fi386%2Fwinnt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fwinnt.c?ref=d8a2d370dc8e418c97cfacbef66a86ab444e94d2", "patch": "@@ -27,6 +27,8 @@ along with GCC; see the file COPYING3.  If not see\n #include \"hard-reg-set.h\"\n #include \"output.h\"\n #include \"tree.h\"\n+#include \"stringpool.h\"\n+#include \"varasm.h\"\n #include \"flags.h\"\n #include \"tm_p.h\"\n #include \"diagnostic-core.h\""}, {"sha": "6489668b7d99d0bdad4dc9f6dd865de7705570cb", "filename": "gcc/config/ia64/ia64-c.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Fconfig%2Fia64%2Fia64-c.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Fconfig%2Fia64%2Fia64-c.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fia64%2Fia64-c.c?ref=d8a2d370dc8e418c97cfacbef66a86ab444e94d2", "patch": "@@ -23,6 +23,7 @@ along with GCC; see the file COPYING3.  If not see\n #include \"coretypes.h\"\n #include \"tm.h\"\n #include \"tree.h\"\n+#include \"stringpool.h\"\n #include \"cpplib.h\"\n #include \"c-family/c-common.h\"\n #include \"c-family/c-pragma.h\""}, {"sha": "307681c995d17e1764b18d12a67c2f0869b49a40", "filename": "gcc/config/ia64/ia64.c", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Fconfig%2Fia64%2Fia64.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Fconfig%2Fia64%2Fia64.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fia64%2Fia64.c?ref=d8a2d370dc8e418c97cfacbef66a86ab444e94d2", "patch": "@@ -25,6 +25,10 @@ along with GCC; see the file COPYING3.  If not see\n #include \"tm.h\"\n #include \"rtl.h\"\n #include \"tree.h\"\n+#include \"stringpool.h\"\n+#include \"stor-layout.h\"\n+#include \"calls.h\"\n+#include \"varasm.h\"\n #include \"regs.h\"\n #include \"hard-reg-set.h\"\n #include \"insn-config.h\""}, {"sha": "e6d1171ca858a3e2f316faefcde3aed06ec869f3", "filename": "gcc/config/iq2000/iq2000.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Fconfig%2Fiq2000%2Fiq2000.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Fconfig%2Fiq2000%2Fiq2000.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fiq2000%2Fiq2000.c?ref=d8a2d370dc8e418c97cfacbef66a86ab444e94d2", "patch": "@@ -22,6 +22,9 @@ along with GCC; see the file COPYING3.  If not see\n #include \"coretypes.h\"\n #include \"tm.h\"\n #include \"tree.h\"\n+#include \"stor-layout.h\"\n+#include \"calls.h\"\n+#include \"varasm.h\"\n #include \"rtl.h\"\n #include \"regs.h\"\n #include \"hard-reg-set.h\""}, {"sha": "6bddc488727a2305743a270cd75c435c17cf0292", "filename": "gcc/config/lm32/lm32.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Fconfig%2Flm32%2Flm32.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Fconfig%2Flm32%2Flm32.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Flm32%2Flm32.c?ref=d8a2d370dc8e418c97cfacbef66a86ab444e94d2", "patch": "@@ -35,6 +35,7 @@\n #include \"recog.h\"\n #include \"output.h\"\n #include \"tree.h\"\n+#include \"calls.h\"\n #include \"expr.h\"\n #include \"flags.h\"\n #include \"reload.h\""}, {"sha": "ec30b8d7f9ba1c2fb7c4b2f205a488f97dbed7c3", "filename": "gcc/config/m32c/m32c.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Fconfig%2Fm32c%2Fm32c.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Fconfig%2Fm32c%2Fm32c.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm32c%2Fm32c.c?ref=d8a2d370dc8e418c97cfacbef66a86ab444e94d2", "patch": "@@ -36,6 +36,9 @@\n #include \"diagnostic-core.h\"\n #include \"obstack.h\"\n #include \"tree.h\"\n+#include \"stor-layout.h\"\n+#include \"varasm.h\"\n+#include \"calls.h\"\n #include \"expr.h\"\n #include \"optabs.h\"\n #include \"except.h\""}, {"sha": "6cee5d728b35e33ad7e0f36afdc29d707e550bc8", "filename": "gcc/config/m32r/m32r.c", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Fconfig%2Fm32r%2Fm32r.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Fconfig%2Fm32r%2Fm32r.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm32r%2Fm32r.c?ref=d8a2d370dc8e418c97cfacbef66a86ab444e94d2", "patch": "@@ -22,6 +22,10 @@\n #include \"coretypes.h\"\n #include \"tm.h\"\n #include \"tree.h\"\n+#include \"stor-layout.h\"\n+#include \"varasm.h\"\n+#include \"stringpool.h\"\n+#include \"calls.h\"\n #include \"rtl.h\"\n #include \"regs.h\"\n #include \"hard-reg-set.h\""}, {"sha": "db1554deb3656ee6cfcc4673497f10b73769ffd7", "filename": "gcc/config/m68k/m68k.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Fconfig%2Fm68k%2Fm68k.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Fconfig%2Fm68k%2Fm68k.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm68k%2Fm68k.c?ref=d8a2d370dc8e418c97cfacbef66a86ab444e94d2", "patch": "@@ -22,6 +22,9 @@ along with GCC; see the file COPYING3.  If not see\n #include \"coretypes.h\"\n #include \"tm.h\"\n #include \"tree.h\"\n+#include \"calls.h\"\n+#include \"stor-layout.h\"\n+#include \"varasm.h\"\n #include \"rtl.h\"\n #include \"function.h\"\n #include \"regs.h\""}, {"sha": "6bd60702fa244591c031358e9b85d69caf19515f", "filename": "gcc/config/mcore/mcore.c", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Fconfig%2Fmcore%2Fmcore.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Fconfig%2Fmcore%2Fmcore.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmcore%2Fmcore.c?ref=d8a2d370dc8e418c97cfacbef66a86ab444e94d2", "patch": "@@ -23,6 +23,10 @@\n #include \"tm.h\"\n #include \"rtl.h\"\n #include \"tree.h\"\n+#include \"stor-layout.h\"\n+#include \"varasm.h\"\n+#include \"stringpool.h\"\n+#include \"calls.h\"\n #include \"tm_p.h\"\n #include \"mcore.h\"\n #include \"regs.h\""}, {"sha": "6ce6c530077a911ca76c5251d92870dd3e96ae82", "filename": "gcc/config/mep/mep.c", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Fconfig%2Fmep%2Fmep.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Fconfig%2Fmep%2Fmep.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmep%2Fmep.c?ref=d8a2d370dc8e418c97cfacbef66a86ab444e94d2", "patch": "@@ -24,6 +24,10 @@ along with GCC; see the file COPYING3.  If not see\n #include \"tm.h\"\n #include \"rtl.h\"\n #include \"tree.h\"\n+#include \"varasm.h\"\n+#include \"calls.h\"\n+#include \"stringpool.h\"\n+#include \"stor-layout.h\"\n #include \"regs.h\"\n #include \"hard-reg-set.h\"\n #include \"insn-config.h\""}, {"sha": "93dede4d189d2723cf3c0dfeba320f3feef5e798", "filename": "gcc/config/microblaze/microblaze.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Fconfig%2Fmicroblaze%2Fmicroblaze.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Fconfig%2Fmicroblaze%2Fmicroblaze.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmicroblaze%2Fmicroblaze.c?ref=d8a2d370dc8e418c97cfacbef66a86ab444e94d2", "patch": "@@ -33,6 +33,9 @@\n #include \"insn-attr.h\"\n #include \"recog.h\"\n #include \"tree.h\"\n+#include \"varasm.h\"\n+#include \"stor-layout.h\"\n+#include \"calls.h\"\n #include \"function.h\"\n #include \"expr.h\"\n #include \"flags.h\""}, {"sha": "00c6e0c90ae06f88ee42178d13edf21b6fa0ff61", "filename": "gcc/config/mips/mips.c", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Fconfig%2Fmips%2Fmips.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Fconfig%2Fmips%2Fmips.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fmips.c?ref=d8a2d370dc8e418c97cfacbef66a86ab444e94d2", "patch": "@@ -34,6 +34,10 @@ along with GCC; see the file COPYING3.  If not see\n #include \"recog.h\"\n #include \"output.h\"\n #include \"tree.h\"\n+#include \"varasm.h\"\n+#include \"stringpool.h\"\n+#include \"stor-layout.h\"\n+#include \"calls.h\"\n #include \"function.h\"\n #include \"expr.h\"\n #include \"optabs.h\""}, {"sha": "eb43af71d08e5dcc06620033630d0dbdc2f09f40", "filename": "gcc/config/mmix/mmix.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Fconfig%2Fmmix%2Fmmix.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Fconfig%2Fmmix%2Fmmix.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmmix%2Fmmix.c?ref=d8a2d370dc8e418c97cfacbef66a86ab444e94d2", "patch": "@@ -31,6 +31,9 @@ along with GCC; see the file COPYING3.  If not see\n #include \"basic-block.h\"\n #include \"flags.h\"\n #include \"tree.h\"\n+#include \"varasm.h\"\n+#include \"stor-layout.h\"\n+#include \"calls.h\"\n #include \"function.h\"\n #include \"expr.h\"\n #include \"diagnostic-core.h\""}, {"sha": "342c336f118b3daa02262cf28d5988ee27813e83", "filename": "gcc/config/mn10300/mn10300.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Fconfig%2Fmn10300%2Fmn10300.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Fconfig%2Fmn10300%2Fmn10300.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmn10300%2Fmn10300.c?ref=d8a2d370dc8e418c97cfacbef66a86ab444e94d2", "patch": "@@ -24,6 +24,9 @@\n #include \"tm.h\"\n #include \"rtl.h\"\n #include \"tree.h\"\n+#include \"stor-layout.h\"\n+#include \"varasm.h\"\n+#include \"calls.h\"\n #include \"regs.h\"\n #include \"hard-reg-set.h\"\n #include \"insn-config.h\""}, {"sha": "abba0aebd2d16a6ce3cce7a71bb403b06e46ec0a", "filename": "gcc/config/moxie/moxie.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Fconfig%2Fmoxie%2Fmoxie.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Fconfig%2Fmoxie%2Fmoxie.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmoxie%2Fmoxie.c?ref=d8a2d370dc8e418c97cfacbef66a86ab444e94d2", "patch": "@@ -36,6 +36,9 @@\n #include \"diagnostic-core.h\"\n #include \"obstack.h\"\n #include \"tree.h\"\n+#include \"stor-layout.h\"\n+#include \"varasm.h\"\n+#include \"calls.h\"\n #include \"expr.h\"\n #include \"optabs.h\"\n #include \"except.h\""}, {"sha": "daff4ae1623e0f54400d7b00cb3586a045d1c341", "filename": "gcc/config/msp430/msp430.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Fconfig%2Fmsp430%2Fmsp430.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Fconfig%2Fmsp430%2Fmsp430.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmsp430%2Fmsp430.c?ref=d8a2d370dc8e418c97cfacbef66a86ab444e94d2", "patch": "@@ -23,6 +23,8 @@\n #include \"coretypes.h\"\n #include \"tm.h\"\n #include \"tree.h\"\n+#include \"stor-layout.h\"\n+#include \"calls.h\"\n #include \"rtl.h\"\n #include \"regs.h\"\n #include \"hard-reg-set.h\""}, {"sha": "4454bf2d0d40085a5041e599a58ced1bace4a4fe", "filename": "gcc/config/nds32/nds32.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Fconfig%2Fnds32%2Fnds32.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Fconfig%2Fnds32%2Fnds32.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fnds32%2Fnds32.c?ref=d8a2d370dc8e418c97cfacbef66a86ab444e94d2", "patch": "@@ -25,6 +25,9 @@\n #include \"coretypes.h\"\n #include \"tm.h\"\n #include \"tree.h\"\n+#include \"stor-layout.h\"\n+#include \"varasm.h\"\n+#include \"calls.h\"\n #include \"rtl.h\"\n #include \"regs.h\"\n #include \"hard-reg-set.h\""}, {"sha": "2aa63c6bd0c882d0690576847ed19d32039906cc", "filename": "gcc/config/pa/pa.c", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Fconfig%2Fpa%2Fpa.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Fconfig%2Fpa%2Fpa.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fpa%2Fpa.c?ref=d8a2d370dc8e418c97cfacbef66a86ab444e94d2", "patch": "@@ -30,6 +30,10 @@ along with GCC; see the file COPYING3.  If not see\n #include \"insn-attr.h\"\n #include \"flags.h\"\n #include \"tree.h\"\n+#include \"stor-layout.h\"\n+#include \"stringpool.h\"\n+#include \"varasm.h\"\n+#include \"calls.h\"\n #include \"output.h\"\n #include \"dbxout.h\"\n #include \"except.h\""}, {"sha": "42237b5d798ca1c47658c78e60cbdbfdf051af31", "filename": "gcc/config/pdp11/pdp11.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Fconfig%2Fpdp11%2Fpdp11.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Fconfig%2Fpdp11%2Fpdp11.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fpdp11%2Fpdp11.c?ref=d8a2d370dc8e418c97cfacbef66a86ab444e94d2", "patch": "@@ -33,6 +33,9 @@ along with GCC; see the file COPYING3.  If not see\n #include \"flags.h\"\n #include \"recog.h\"\n #include \"tree.h\"\n+#include \"stor-layout.h\"\n+#include \"varasm.h\"\n+#include \"calls.h\"\n #include \"expr.h\"\n #include \"diagnostic-core.h\"\n #include \"tm_p.h\""}, {"sha": "4756cb78b724a6f330ff56496a9f6ffee633f0c5", "filename": "gcc/config/picochip/picochip.c", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Fconfig%2Fpicochip%2Fpicochip.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Fconfig%2Fpicochip%2Fpicochip.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fpicochip%2Fpicochip.c?ref=d8a2d370dc8e418c97cfacbef66a86ab444e94d2", "patch": "@@ -34,6 +34,10 @@ along with GCC; see the file COPYING3.  If not, see\n #include \"recog.h\"\n #include \"obstack.h\"\n #include \"tree.h\"\n+#include \"calls.h\"\n+#include \"stor-layout.h\"\n+#include \"stringpool.h\"\n+#include \"varasm.h\"\n #include \"expr.h\"\n #include \"optabs.h\"\n #include \"except.h\""}, {"sha": "72aefc205a1ef1606808e8c29bd664d46ea4269b", "filename": "gcc/config/rl78/rl78.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Fconfig%2Frl78%2Frl78.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Fconfig%2Frl78%2Frl78.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frl78%2Frl78.c?ref=d8a2d370dc8e418c97cfacbef66a86ab444e94d2", "patch": "@@ -23,6 +23,9 @@\n #include \"coretypes.h\"\n #include \"tm.h\"\n #include \"tree.h\"\n+#include \"varasm.h\"\n+#include \"stor-layout.h\"\n+#include \"calls.h\"\n #include \"rtl.h\"\n #include \"regs.h\"\n #include \"hard-reg-set.h\""}, {"sha": "667e5a6de180b573a9e84f3e1032bcc278b2d045", "filename": "gcc/config/rs6000/rs6000-c.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Fconfig%2Frs6000%2Frs6000-c.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Fconfig%2Frs6000%2Frs6000-c.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000-c.c?ref=d8a2d370dc8e418c97cfacbef66a86ab444e94d2", "patch": "@@ -26,6 +26,8 @@\n #include \"tm.h\"\n #include \"cpplib.h\"\n #include \"tree.h\"\n+#include \"stor-layout.h\"\n+#include \"stringpool.h\"\n #include \"c-family/c-common.h\"\n #include \"c-family/c-pragma.h\"\n #include \"diagnostic-core.h\""}, {"sha": "fa79a02a936bd5f973d2f3040ef1dd298d3686a5", "filename": "gcc/config/rs6000/rs6000.c", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Fconfig%2Frs6000%2Frs6000.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Fconfig%2Frs6000%2Frs6000.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.c?ref=d8a2d370dc8e418c97cfacbef66a86ab444e94d2", "patch": "@@ -32,6 +32,11 @@\n #include \"recog.h\"\n #include \"obstack.h\"\n #include \"tree.h\"\n+#include \"stringpool.h\"\n+#include \"stor-layout.h\"\n+#include \"calls.h\"\n+#include \"print-tree.h\"\n+#include \"varasm.h\"\n #include \"expr.h\"\n #include \"optabs.h\"\n #include \"except.h\""}, {"sha": "662ab9b72ccbea58c7426e7869cb9a1123e35e8a", "filename": "gcc/config/rx/rx.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Fconfig%2Frx%2Frx.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Fconfig%2Frx%2Frx.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frx%2Frx.c?ref=d8a2d370dc8e418c97cfacbef66a86ab444e94d2", "patch": "@@ -27,6 +27,9 @@\n #include \"coretypes.h\"\n #include \"tm.h\"\n #include \"tree.h\"\n+#include \"varasm.h\"\n+#include \"stor-layout.h\"\n+#include \"calls.h\"\n #include \"rtl.h\"\n #include \"regs.h\"\n #include \"hard-reg-set.h\""}, {"sha": "cae4a329f4e6fda3755dfe12243ad0ef56c2b00b", "filename": "gcc/config/s390/s390.c", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Fconfig%2Fs390%2Fs390.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Fconfig%2Fs390%2Fs390.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fs390%2Fs390.c?ref=d8a2d370dc8e418c97cfacbef66a86ab444e94d2", "patch": "@@ -26,6 +26,11 @@ along with GCC; see the file COPYING3.  If not see\n #include \"tm.h\"\n #include \"rtl.h\"\n #include \"tree.h\"\n+#include \"print-tree.h\"\n+#include \"stringpool.h\"\n+#include \"stor-layout.h\"\n+#include \"varasm.h\"\n+#include \"calls.h\"\n #include \"tm_p.h\"\n #include \"regs.h\"\n #include \"hard-reg-set.h\""}, {"sha": "3fdf2ea9050108c6e08c8b41f9d996d5ce9ef354", "filename": "gcc/config/score/score.c", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Fconfig%2Fscore%2Fscore.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Fconfig%2Fscore%2Fscore.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fscore%2Fscore.c?ref=d8a2d370dc8e418c97cfacbef66a86ab444e94d2", "patch": "@@ -32,6 +32,10 @@\n #include \"diagnostic-core.h\"\n #include \"output.h\"\n #include \"tree.h\"\n+#include \"stringpool.h\"\n+#include \"calls.h\"\n+#include \"varasm.h\"\n+#include \"stor-layout.h\"\n #include \"function.h\"\n #include \"expr.h\"\n #include \"optabs.h\""}, {"sha": "22e291d2b76d5921128b467a8ab93b7c68b402c3", "filename": "gcc/config/sh/sh-c.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Fconfig%2Fsh%2Fsh-c.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Fconfig%2Fsh%2Fsh-c.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsh%2Fsh-c.c?ref=d8a2d370dc8e418c97cfacbef66a86ab444e94d2", "patch": "@@ -23,6 +23,8 @@ along with GCC; see the file COPYING3.  If not see\n #include \"coretypes.h\"\n #include \"tm.h\"\n #include \"tree.h\"\n+#include \"stringpool.h\"\n+#include \"attribs.h.h\"\n #include \"tm_p.h\"\n #include \"cpplib.h\"\n #include \"c-family/c-common.h\""}, {"sha": "d5f7f15c1cc4b908ae71b81f0c29053170159399", "filename": "gcc/config/sh/sh.c", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Fconfig%2Fsh%2Fsh.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Fconfig%2Fsh%2Fsh.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsh%2Fsh.c?ref=d8a2d370dc8e418c97cfacbef66a86ab444e94d2", "patch": "@@ -26,6 +26,10 @@ along with GCC; see the file COPYING3.  If not see\n #include \"insn-config.h\"\n #include \"rtl.h\"\n #include \"tree.h\"\n+#include \"stringpool.h\"\n+#include \"stor-layout.h\"\n+#include \"calls.h\"\n+#include \"varasm.h\"\n #include \"flags.h\"\n #include \"expr.h\"\n #include \"optabs.h\""}, {"sha": "8254af0fd7395b4a2d185e40413bb24c7b64a2cc", "filename": "gcc/config/sol2-c.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Fconfig%2Fsol2-c.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Fconfig%2Fsol2-c.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsol2-c.c?ref=d8a2d370dc8e418c97cfacbef66a86ab444e94d2", "patch": "@@ -22,6 +22,8 @@ along with GCC; see the file COPYING3.  If not see\n #include \"system.h\"\n #include \"coretypes.h\"\n #include \"tree.h\"\n+#include \"stringpool.h\"\n+#include \"attribs.h\"\n #include \"tm.h\"\n #include \"tm_p.h\"\n "}, {"sha": "d3d79554b96ba5411b1fd655da1d76827a8cbad1", "filename": "gcc/config/sol2-cxx.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Fconfig%2Fsol2-cxx.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Fconfig%2Fsol2-cxx.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsol2-cxx.c?ref=d8a2d370dc8e418c97cfacbef66a86ab444e94d2", "patch": "@@ -21,6 +21,7 @@ along with GCC; see the file COPYING3.  If not see\n #include \"system.h\"\n #include \"coretypes.h\"\n #include \"tree.h\"\n+#include \"stringpool.h\"\n #include \"cp/cp-tree.h\"\n #include \"tm.h\"\n #include \"tm_p.h\""}, {"sha": "4200e620e165b90d2468610858d51c15c732128d", "filename": "gcc/config/sol2.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Fconfig%2Fsol2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Fconfig%2Fsol2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsol2.c?ref=d8a2d370dc8e418c97cfacbef66a86ab444e94d2", "patch": "@@ -22,6 +22,8 @@ along with GCC; see the file COPYING3.  If not see\n #include \"system.h\"\n #include \"coretypes.h\"\n #include \"tree.h\"\n+#include \"stringpool.h\"\n+#include \"varasm.h\"\n #include \"output.h\"\n #include \"tm.h\"\n #include \"rtl.h\""}, {"sha": "cabf8f0d244ddf88ae8f7125652357adbb61c969", "filename": "gcc/config/sparc/sparc.c", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Fconfig%2Fsparc%2Fsparc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Fconfig%2Fsparc%2Fsparc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsparc%2Fsparc.c?ref=d8a2d370dc8e418c97cfacbef66a86ab444e94d2", "patch": "@@ -25,6 +25,10 @@ along with GCC; see the file COPYING3.  If not see\n #include \"coretypes.h\"\n #include \"tm.h\"\n #include \"tree.h\"\n+#include \"stringpool.h\"\n+#include \"stor-layout.h\"\n+#include \"calls.h\"\n+#include \"varasm.h\"\n #include \"rtl.h\"\n #include \"regs.h\"\n #include \"hard-reg-set.h\""}, {"sha": "7632ec1462cd206796c161850e70379792dd43ec", "filename": "gcc/config/spu/spu-c.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Fconfig%2Fspu%2Fspu-c.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Fconfig%2Fspu%2Fspu-c.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fspu%2Fspu-c.c?ref=d8a2d370dc8e418c97cfacbef66a86ab444e94d2", "patch": "@@ -20,6 +20,7 @@\n #include \"tm.h\"\n #include \"cpplib.h\"\n #include \"tree.h\"\n+#include \"stringpool.h\"\n #include \"c-family/c-common.h\"\n #include \"c-family/c-pragma.h\"\n #include \"tm_p.h\""}, {"sha": "315f1b3617fdf26536db55ac68f80b9d2d192e8f", "filename": "gcc/config/spu/spu.c", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Fconfig%2Fspu%2Fspu.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Fconfig%2Fspu%2Fspu.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fspu%2Fspu.c?ref=d8a2d370dc8e418c97cfacbef66a86ab444e94d2", "patch": "@@ -28,6 +28,10 @@\n #include \"recog.h\"\n #include \"obstack.h\"\n #include \"tree.h\"\n+#include \"stringpool.h\"\n+#include \"stor-layout.h\"\n+#include \"calls.h\"\n+#include \"varasm.h\"\n #include \"expr.h\"\n #include \"optabs.h\"\n #include \"except.h\""}, {"sha": "d5a1fc6ad860d5ae6cd536e152576c23ccac9db3", "filename": "gcc/config/stormy16/stormy16.c", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Fconfig%2Fstormy16%2Fstormy16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Fconfig%2Fstormy16%2Fstormy16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fstormy16%2Fstormy16.c?ref=d8a2d370dc8e418c97cfacbef66a86ab444e94d2", "patch": "@@ -35,6 +35,10 @@\n #include \"diagnostic-core.h\"\n #include \"obstack.h\"\n #include \"tree.h\"\n+#include \"stringpool.h\"\n+#include \"stor-layout.h\"\n+#include \"varasm.h\"\n+#include \"calls.h\"\n #include \"expr.h\"\n #include \"optabs.h\"\n #include \"except.h\""}, {"sha": "809beefa3055a579f24e11d14c2a8aef7259b75e", "filename": "gcc/config/tilegx/tilegx.c", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Fconfig%2Ftilegx%2Ftilegx.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Fconfig%2Ftilegx%2Ftilegx.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Ftilegx%2Ftilegx.c?ref=d8a2d370dc8e418c97cfacbef66a86ab444e94d2", "patch": "@@ -41,6 +41,10 @@\n #include \"timevar.h\"\n #include \"tree.h\"\n #include \"gimple.h\"\n+#include \"stringpool.h\"\n+#include \"stor-layout.h\"\n+#include \"varasm.h\"\n+#include \"calls.h\"\n #include \"gimplify.h\"\n #include \"cfgloop.h\"\n #include \"tilegx-builtins.h\""}, {"sha": "9fe1b104f57151ed02f6b3ff4afdb94e801857d3", "filename": "gcc/config/tilepro/tilepro.c", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Fconfig%2Ftilepro%2Ftilepro.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Fconfig%2Ftilepro%2Ftilepro.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Ftilepro%2Ftilepro.c?ref=d8a2d370dc8e418c97cfacbef66a86ab444e94d2", "patch": "@@ -42,6 +42,10 @@\n #include \"timevar.h\"\n #include \"tree.h\"\n #include \"gimple.h\"\n+#include \"stringpool.h\"\n+#include \"stor-layout.h\"\n+#include \"varasm.h\"\n+#include \"calls.h\"\n #include \"gimplify.h\"\n #include \"cfgloop.h\"\n #include \"tilepro-builtins.h\""}, {"sha": "25158d50e09e5cdc10abfdfc943cb77895813504", "filename": "gcc/config/v850/v850-c.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Fconfig%2Fv850%2Fv850-c.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Fconfig%2Fv850%2Fv850-c.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fv850%2Fv850-c.c?ref=d8a2d370dc8e418c97cfacbef66a86ab444e94d2", "patch": "@@ -24,6 +24,8 @@ along with GCC; see the file COPYING3.  If not see\n #include \"tm.h\"\n #include \"cpplib.h\"\n #include \"tree.h\"\n+#include \"stringpool.h\"\n+#include \"attribs.h\"\n #include \"c-family/c-pragma.h\"\n #include \"diagnostic-core.h\"\n #include \"ggc.h\""}, {"sha": "32fe73b1fa628c588174c7263637e6ea4e4ec3fe", "filename": "gcc/config/v850/v850.c", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Fconfig%2Fv850%2Fv850.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Fconfig%2Fv850%2Fv850.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fv850%2Fv850.c?ref=d8a2d370dc8e418c97cfacbef66a86ab444e94d2", "patch": "@@ -23,6 +23,10 @@\n #include \"coretypes.h\"\n #include \"tm.h\"\n #include \"tree.h\"\n+#include \"stringpool.h\"\n+#include \"stor-layout.h\"\n+#include \"varasm.h\"\n+#include \"calls.h\"\n #include \"rtl.h\"\n #include \"regs.h\"\n #include \"hard-reg-set.h\""}, {"sha": "7aac7cb0554a49dd1db54a1324bb231eb326e7f9", "filename": "gcc/config/vax/vax.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Fconfig%2Fvax%2Fvax.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Fconfig%2Fvax%2Fvax.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fvax%2Fvax.c?ref=d8a2d370dc8e418c97cfacbef66a86ab444e94d2", "patch": "@@ -24,6 +24,8 @@ along with GCC; see the file COPYING3.  If not see\n #include \"rtl.h\"\n #include \"df.h\"\n #include \"tree.h\"\n+#include \"calls.h\"\n+#include \"varasm.h\"\n #include \"regs.h\"\n #include \"hard-reg-set.h\"\n #include \"insn-config.h\""}, {"sha": "3047cfde9fed20bb259e2ea818b1548ad6d28f87", "filename": "gcc/config/vms/vms.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Fconfig%2Fvms%2Fvms.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Fconfig%2Fvms%2Fvms.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fvms%2Fvms.c?ref=d8a2d370dc8e418c97cfacbef66a86ab444e94d2", "patch": "@@ -22,6 +22,7 @@ along with GCC; see the file COPYING3.  If not see\n #include \"system.h\"\n #include \"coretypes.h\"\n #include \"tree.h\"\n+#include \"stringpool.h\"\n #include \"vms-protos.h\"\n #include \"ggc.h\"\n #include \"target.h\""}, {"sha": "2940ea1193395d9a5c66dd6191b52cc4567794c7", "filename": "gcc/config/vxworks.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Fconfig%2Fvxworks.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Fconfig%2Fvxworks.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fvxworks.c?ref=d8a2d370dc8e418c97cfacbef66a86ab444e94d2", "patch": "@@ -26,6 +26,7 @@ along with GCC; see the file COPYING3.  If not see\n #include \"output.h\"\n #include \"tm.h\"\n #include \"tree.h\"\n+#include \"stringpool.h\"\n \n /* Like default_named_section_asm_out_constructor, except that even\n    constructors with DEFAULT_INIT_PRIORITY must go in a numbered"}, {"sha": "9e6bb23818f8a905cd711f991ed0b23a359bb20e", "filename": "gcc/config/xtensa/xtensa.c", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Fconfig%2Fxtensa%2Fxtensa.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Fconfig%2Fxtensa%2Fxtensa.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fxtensa%2Fxtensa.c?ref=d8a2d370dc8e418c97cfacbef66a86ab444e94d2", "patch": "@@ -34,6 +34,10 @@ along with GCC; see the file COPYING3.  If not see\n #include \"recog.h\"\n #include \"output.h\"\n #include \"tree.h\"\n+#include \"stringpool.h\"\n+#include \"stor-layout.h\"\n+#include \"calls.h\"\n+#include \"varasm.h\"\n #include \"expr.h\"\n #include \"flags.h\"\n #include \"reload.h\""}, {"sha": "4cf500197ae68d2b16394f20e8f6b8f113b703a3", "filename": "gcc/convert.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Fconvert.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Fconvert.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconvert.c?ref=d8a2d370dc8e418c97cfacbef66a86ab444e94d2", "patch": "@@ -26,6 +26,7 @@ along with GCC; see the file COPYING3.  If not see\n #include \"coretypes.h\"\n #include \"tm.h\"\n #include \"tree.h\"\n+#include \"stor-layout.h\"\n #include \"flags.h\"\n #include \"convert.h\"\n #include \"diagnostic-core.h\""}, {"sha": "f2ac5fcaa46cc080c8f03986eda1924a3e1de7b1", "filename": "gcc/coverage.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Fcoverage.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Fcoverage.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcoverage.c?ref=d8a2d370dc8e418c97cfacbef66a86ab444e94d2", "patch": "@@ -30,6 +30,8 @@ along with GCC; see the file COPYING3.  If not see\n #include \"tm.h\"\n #include \"rtl.h\"\n #include \"tree.h\"\n+#include \"stringpool.h\"\n+#include \"stor-layout.h\"\n #include \"flags.h\"\n #include \"output.h\"\n #include \"regs.h\""}, {"sha": "1c0d9b7c12116cce46db7e09cf961a7c3f532d73", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 62, "deletions": 0, "changes": 62, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=d8a2d370dc8e418c97cfacbef66a86ab444e94d2", "patch": "@@ -83,6 +83,68 @@\n \t* tree.c: Likewise.\n \t* vtable-class-hierarchy.c: Likewise.\n \n+2013-11-14  Diego Novillo  <dnovillo@google.com>\n+\n+\t* call.c: Include stor-layout.h.\n+\tInclude trans-mem.h.\n+\tInclude stringpool.h.\n+\t* class.c: Include stringpool.h.\n+\tInclude stor-layout.h.\n+\tInclude attribs.h.\n+\t* cp-gimplify.c: Include stor-layout.h.\n+\t* cvt.c: Include stor-layout.h.\n+\t* decl.c: Include stringpool.h.\n+\tInclude stor-layout.h.\n+\tInclude varasm.h.\n+\tInclude attribs.h.\n+\tInclude calls.h.\n+\t* decl2.c: Include stringpool.h.\n+\tInclude varasm.h.\n+\tInclude attribs.h.\n+\tInclude stor-layout.h.\n+\tInclude calls.h.\n+\t* error.c: Include stringpool.h.\n+\t* except.c: Include stringpool.h.\n+\tInclude trans-mem.h.\n+\tInclude attribs.h.\n+\t* init.c: Include stringpool.h.\n+\tInclude varasm.h.\n+\t* lambda.c: Include stringpool.h.\n+\t* lex.c: Include stringpool.h.\n+\t* mangle.c: Include stor-layout.h.\n+\tInclude stringpool.h.\n+\t* method.c: Include stringpool.h.\n+\tInclude varasm.h.\n+\t* name-lookup.c: Include stringpool.h.\n+\tInclude print-tree.h.\n+\tInclude attribs.h.\n+\t* optimize.c: Include stringpool.h.\n+\t* parser.c: Include print-tree.h.\n+\tInclude stringpool.h.\n+\tInclude attribs.h.\n+\tInclude trans-mem.h.\n+\t* pt.c: Include stringpool.h.\n+\tInclude varasm.h.\n+\tInclude attribs.h.\n+\tInclude stor-layout.h.\n+\t* ptree.c: Include print-tree.h.\n+\t* repo.c: Include stringpool.h.\n+\t* rtti.c: Include stringpool.h.\n+\tInclude stor-layout.h.\n+\t* semantics.c: Include stmt.h.\n+\tInclude varasm.h.\n+\tInclude stor-layout.h.\n+\tInclude stringpool.h.\n+\t* tree.c: Include stor-layout.h.\n+\tInclude print-tree.h.\n+\tInclude tree-iterator.h.\n+\t* typeck.c: Include stor-layout.h.\n+\tInclude varasm.h.\n+\t* typeck2.c: Include stor-layout.h.\n+\tInclude varasm.h.\n+\t* vtable-class-hierarchy.c: Include stringpool.h.\n+\tInclude stor-layout.h.\n+\n 2013-11-12  Andrew MacLeod <amacleod@redhat.com>\n \n \t* class.c: Include gimplify.h."}, {"sha": "c529c16bc7495c4d7986d4b4c2b359f5e7289526", "filename": "gcc/cp/call.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Fcp%2Fcall.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Fcp%2Fcall.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcall.c?ref=d8a2d370dc8e418c97cfacbef66a86ab444e94d2", "patch": "@@ -27,6 +27,9 @@ along with GCC; see the file COPYING3.  If not see\n #include \"coretypes.h\"\n #include \"tm.h\"\n #include \"tree.h\"\n+#include \"stor-layout.h\"\n+#include \"trans-mem.h\"\n+#include \"stringpool.h\"\n #include \"cp-tree.h\"\n #include \"flags.h\"\n #include \"toplev.h\""}, {"sha": "00fec27a3d55df9d0e9cb7193b8d5348379fc11e", "filename": "gcc/cp/class.c", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Fcp%2Fclass.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Fcp%2Fclass.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fclass.c?ref=d8a2d370dc8e418c97cfacbef66a86ab444e94d2", "patch": "@@ -26,6 +26,10 @@ along with GCC; see the file COPYING3.  If not see\n #include \"coretypes.h\"\n #include \"tm.h\"\n #include \"tree.h\"\n+#include \"stringpool.h\"\n+#include \"stor-layout.h\"\n+#include \"attribs.h\"\n+#include \"gimple.h\"\n #include \"cp-tree.h\"\n #include \"flags.h\"\n #include \"toplev.h\""}, {"sha": "e2629464dd9a1c6ca1ab7e146d2daf8f5840c169", "filename": "gcc/cp/cp-gimplify.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Fcp%2Fcp-gimplify.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Fcp%2Fcp-gimplify.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcp-gimplify.c?ref=d8a2d370dc8e418c97cfacbef66a86ab444e94d2", "patch": "@@ -24,6 +24,7 @@ along with GCC; see the file COPYING3.  If not see\n #include \"coretypes.h\"\n #include \"tm.h\"\n #include \"tree.h\"\n+#include \"stor-layout.h\"\n #include \"cp-tree.h\"\n #include \"c-family/c-common.h\"\n #include \"tree-iterator.h\""}, {"sha": "5264c5df2a810f1b69731bceb47fb1ea22411286", "filename": "gcc/cp/cvt.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Fcp%2Fcvt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Fcp%2Fcvt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcvt.c?ref=d8a2d370dc8e418c97cfacbef66a86ab444e94d2", "patch": "@@ -29,6 +29,7 @@ along with GCC; see the file COPYING3.  If not see\n #include \"coretypes.h\"\n #include \"tm.h\"\n #include \"tree.h\"\n+#include \"stor-layout.h\"\n #include \"flags.h\"\n #include \"cp-tree.h\"\n #include \"intl.h\""}, {"sha": "500c81f79fc48f131efbe42c2f4052d1bdf386c8", "filename": "gcc/cp/decl.c", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Fcp%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Fcp%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fdecl.c?ref=d8a2d370dc8e418c97cfacbef66a86ab444e94d2", "patch": "@@ -31,6 +31,11 @@ along with GCC; see the file COPYING3.  If not see\n #include \"coretypes.h\"\n #include \"tm.h\"\n #include \"tree.h\"\n+#include \"stringpool.h\"\n+#include \"stor-layout.h\"\n+#include \"varasm.h\"\n+#include \"attribs.h\"\n+#include \"calls.h\"\n #include \"flags.h\"\n #include \"cp-tree.h\"\n #include \"tree-iterator.h\""}, {"sha": "93c75cbf4d66cd7d08ff38f0b1ac11e64588133f", "filename": "gcc/cp/decl2.c", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Fcp%2Fdecl2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Fcp%2Fdecl2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fdecl2.c?ref=d8a2d370dc8e418c97cfacbef66a86ab444e94d2", "patch": "@@ -31,6 +31,12 @@ along with GCC; see the file COPYING3.  If not see\n #include \"coretypes.h\"\n #include \"tm.h\"\n #include \"tree.h\"\n+#include \"stringpool.h\"\n+#include \"varasm.h\"\n+#include \"attribs.h\"\n+#include \"stor-layout.h\"\n+#include \"calls.h\"\n+#include \"gimple.h\"\n #include \"flags.h\"\n #include \"cp-tree.h\"\n #include \"decl.h\""}, {"sha": "5481523868df43a3107255ed0d9613cc55dc8e74", "filename": "gcc/cp/error.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Fcp%2Ferror.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Fcp%2Ferror.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Ferror.c?ref=d8a2d370dc8e418c97cfacbef66a86ab444e94d2", "patch": "@@ -22,6 +22,7 @@ along with GCC; see the file COPYING3.  If not see\n #include \"coretypes.h\"\n #include \"tm.h\"\n #include \"tree.h\"\n+#include \"stringpool.h\"\n #include \"cp-tree.h\"\n #include \"flags.h\"\n #include \"diagnostic.h\""}, {"sha": "d7d009bdd6925753bfb7d0699f08ffe8b79637a1", "filename": "gcc/cp/except.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Fcp%2Fexcept.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Fcp%2Fexcept.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fexcept.c?ref=d8a2d370dc8e418c97cfacbef66a86ab444e94d2", "patch": "@@ -26,6 +26,9 @@ along with GCC; see the file COPYING3.  If not see\n #include \"coretypes.h\"\n #include \"tm.h\"\n #include \"tree.h\"\n+#include \"stringpool.h\"\n+#include \"trans-mem.h\"\n+#include \"attribs.h\"\n #include \"cp-tree.h\"\n #include \"flags.h\"\n #include \"tree-inline.h\""}, {"sha": "fd43a4fc87c963d4b63644420afd22e99ce2c728", "filename": "gcc/cp/init.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Fcp%2Finit.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Fcp%2Finit.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Finit.c?ref=d8a2d370dc8e418c97cfacbef66a86ab444e94d2", "patch": "@@ -25,6 +25,8 @@ along with GCC; see the file COPYING3.  If not see\n #include \"coretypes.h\"\n #include \"tm.h\"\n #include \"tree.h\"\n+#include \"stringpool.h\"\n+#include \"varasm.h\"\n #include \"cp-tree.h\"\n #include \"flags.h\"\n #include \"target.h\""}, {"sha": "24aa2c55cc0f3a8224932be8e282e44bda28b242", "filename": "gcc/cp/lambda.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Fcp%2Flambda.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Fcp%2Flambda.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Flambda.c?ref=d8a2d370dc8e418c97cfacbef66a86ab444e94d2", "patch": "@@ -25,6 +25,7 @@ along with GCC; see the file COPYING3.  If not see\n #include \"system.h\"\n #include \"coretypes.h\"\n #include \"tree.h\"\n+#include \"stringpool.h\"\n #include \"cgraph.h\"\n #include \"tree-iterator.h\"\n #include \"cp-tree.h\""}, {"sha": "5d8a313f38b4ed259befcff8a900281e36fd675c", "filename": "gcc/cp/lex.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Fcp%2Flex.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Fcp%2Flex.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Flex.c?ref=d8a2d370dc8e418c97cfacbef66a86ab444e94d2", "patch": "@@ -27,6 +27,7 @@ along with GCC; see the file COPYING3.  If not see\n #include \"tm.h\"\n #include \"input.h\"\n #include \"tree.h\"\n+#include \"stringpool.h\"\n #include \"cp-tree.h\"\n #include \"cpplib.h\"\n #include \"flags.h\""}, {"sha": "8a24d6c8cfd93defe7ea8e3a58c087be7f0c075f", "filename": "gcc/cp/mangle.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Fcp%2Fmangle.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Fcp%2Fmangle.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fmangle.c?ref=d8a2d370dc8e418c97cfacbef66a86ab444e94d2", "patch": "@@ -49,6 +49,8 @@ along with GCC; see the file COPYING3.  If not see\n #include \"coretypes.h\"\n #include \"tm.h\"\n #include \"tree.h\"\n+#include \"stor-layout.h\"\n+#include \"stringpool.h\"\n #include \"tm_p.h\"\n #include \"cp-tree.h\"\n #include \"obstack.h\""}, {"sha": "740536573cb64a36be8476c5d37fc16c061e0cf0", "filename": "gcc/cp/method.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Fcp%2Fmethod.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Fcp%2Fmethod.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fmethod.c?ref=d8a2d370dc8e418c97cfacbef66a86ab444e94d2", "patch": "@@ -26,6 +26,8 @@ along with GCC; see the file COPYING3.  If not see\n #include \"coretypes.h\"\n #include \"tm.h\"\n #include \"tree.h\"\n+#include \"stringpool.h\"\n+#include \"varasm.h\"\n #include \"cp-tree.h\"\n #include \"flags.h\"\n #include \"toplev.h\""}, {"sha": "d0c024a120ffbf42e2b3cebb48eb987ecad4fdcc", "filename": "gcc/cp/name-lookup.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Fcp%2Fname-lookup.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Fcp%2Fname-lookup.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fname-lookup.c?ref=d8a2d370dc8e418c97cfacbef66a86ab444e94d2", "patch": "@@ -24,6 +24,9 @@ along with GCC; see the file COPYING3.  If not see\n #include \"tm.h\"\n #include \"flags.h\"\n #include \"tree.h\"\n+#include \"stringpool.h\"\n+#include \"print-tree.h\"\n+#include \"attribs.h\"\n #include \"cp-tree.h\"\n #include \"name-lookup.h\"\n #include \"timevar.h\""}, {"sha": "b8df1347c3393788f0c221ef1a2136f4033e5be4", "filename": "gcc/cp/optimize.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Fcp%2Foptimize.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Fcp%2Foptimize.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Foptimize.c?ref=d8a2d370dc8e418c97cfacbef66a86ab444e94d2", "patch": "@@ -23,6 +23,7 @@ along with GCC; see the file COPYING3.  If not see\n #include \"coretypes.h\"\n #include \"tm.h\"\n #include \"tree.h\"\n+#include \"stringpool.h\"\n #include \"cp-tree.h\"\n #include \"input.h\"\n #include \"params.h\""}, {"sha": "977adf6b79163ab21db608ce521a129fad56eddd", "filename": "gcc/cp/parser.c", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Fcp%2Fparser.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Fcp%2Fparser.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fparser.c?ref=d8a2d370dc8e418c97cfacbef66a86ab444e94d2", "patch": "@@ -25,6 +25,10 @@ along with GCC; see the file COPYING3.  If not see\n #include \"timevar.h\"\n #include \"cpplib.h\"\n #include \"tree.h\"\n+#include \"print-tree.h\"\n+#include \"stringpool.h\"\n+#include \"attribs.h\"\n+#include \"trans-mem.h\"\n #include \"cp-tree.h\"\n #include \"intl.h\"\n #include \"c-family/c-pragma.h\""}, {"sha": "bbf8f550f3ed1119050184d8f36585c52c101c1f", "filename": "gcc/cp/pt.c", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Fcp%2Fpt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Fcp%2Fpt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fpt.c?ref=d8a2d370dc8e418c97cfacbef66a86ab444e94d2", "patch": "@@ -29,6 +29,10 @@ along with GCC; see the file COPYING3.  If not see\n #include \"coretypes.h\"\n #include \"tm.h\"\n #include \"tree.h\"\n+#include \"stringpool.h\"\n+#include \"varasm.h\"\n+#include \"attribs.h\"\n+#include \"stor-layout.h\"\n #include \"intl.h\"\n #include \"pointer-set.h\"\n #include \"flags.h\""}, {"sha": "3c37a2aed3ea9f79a3cff17d159dfcab884b0171", "filename": "gcc/cp/ptree.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Fcp%2Fptree.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Fcp%2Fptree.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fptree.c?ref=d8a2d370dc8e418c97cfacbef66a86ab444e94d2", "patch": "@@ -24,6 +24,7 @@ along with GCC; see the file COPYING3.  If not see\n #include \"coretypes.h\"\n #include \"tm.h\"\n #include \"tree.h\"\n+#include \"print-tree.h\"\n #include \"cp-tree.h\"\n \n void"}, {"sha": "47b9198658245301388ceb143c4481a35f7d4f69", "filename": "gcc/cp/repo.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Fcp%2Frepo.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Fcp%2Frepo.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Frepo.c?ref=d8a2d370dc8e418c97cfacbef66a86ab444e94d2", "patch": "@@ -29,6 +29,7 @@ along with GCC; see the file COPYING3.  If not see\n #include \"coretypes.h\"\n #include \"tm.h\"\n #include \"tree.h\"\n+#include \"stringpool.h\"\n #include \"cp-tree.h\"\n #include \"input.h\"\n #include \"obstack.h\""}, {"sha": "0bac87909a081c5efdcfe421e664cbe351767d26", "filename": "gcc/cp/rtti.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Fcp%2Frtti.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Fcp%2Frtti.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Frtti.c?ref=d8a2d370dc8e418c97cfacbef66a86ab444e94d2", "patch": "@@ -24,6 +24,8 @@ along with GCC; see the file COPYING3.  If not see\n #include \"coretypes.h\"\n #include \"tm.h\"\n #include \"tree.h\"\n+#include \"stringpool.h\"\n+#include \"stor-layout.h\"\n #include \"cp-tree.h\"\n #include \"flags.h\"\n #include \"convert.h\""}, {"sha": "11f781288e90f47aa5791c110c848303093bc71b", "filename": "gcc/cp/semantics.c", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Fcp%2Fsemantics.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Fcp%2Fsemantics.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fsemantics.c?ref=d8a2d370dc8e418c97cfacbef66a86ab444e94d2", "patch": "@@ -28,6 +28,10 @@ along with GCC; see the file COPYING3.  If not see\n #include \"coretypes.h\"\n #include \"tm.h\"\n #include \"tree.h\"\n+#include \"stmt.h\"\n+#include \"varasm.h\"\n+#include \"stor-layout.h\"\n+#include \"stringpool.h\"\n #include \"cp-tree.h\"\n #include \"c-family/c-common.h\"\n #include \"c-family/c-objc.h\""}, {"sha": "a990a79bbb3667c40bc24e25e78c1586ff0bffca", "filename": "gcc/cp/tree.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Fcp%2Ftree.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Fcp%2Ftree.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Ftree.c?ref=d8a2d370dc8e418c97cfacbef66a86ab444e94d2", "patch": "@@ -23,6 +23,9 @@ along with GCC; see the file COPYING3.  If not see\n #include \"coretypes.h\"\n #include \"tm.h\"\n #include \"tree.h\"\n+#include \"stor-layout.h\"\n+#include \"print-tree.h\"\n+#include \"tree-iterator.h\"\n #include \"cp-tree.h\"\n #include \"flags.h\"\n #include \"tree-inline.h\""}, {"sha": "c9ddbe9ba242d8e6dccc4a435e58a47af4fa5094", "filename": "gcc/cp/typeck.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Fcp%2Ftypeck.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Fcp%2Ftypeck.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Ftypeck.c?ref=d8a2d370dc8e418c97cfacbef66a86ab444e94d2", "patch": "@@ -29,6 +29,9 @@ along with GCC; see the file COPYING3.  If not see\n #include \"coretypes.h\"\n #include \"tm.h\"\n #include \"tree.h\"\n+#include \"stor-layout.h\"\n+#include \"varasm.h\"\n+#include \"gimple.h\"\n #include \"cp-tree.h\"\n #include \"flags.h\"\n #include \"diagnostic.h\""}, {"sha": "0f3b01d9bc23fd75c0d9be2eb091e90bf7730d84", "filename": "gcc/cp/typeck2.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Fcp%2Ftypeck2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Fcp%2Ftypeck2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Ftypeck2.c?ref=d8a2d370dc8e418c97cfacbef66a86ab444e94d2", "patch": "@@ -30,6 +30,8 @@ along with GCC; see the file COPYING3.  If not see\n #include \"coretypes.h\"\n #include \"tm.h\"\n #include \"tree.h\"\n+#include \"stor-layout.h\"\n+#include \"varasm.h\"\n #include \"intl.h\"\n #include \"cp-tree.h\"\n #include \"flags.h\""}, {"sha": "32f9541e43da2a66e586414b08fe01aa54cb6dda", "filename": "gcc/cp/vtable-class-hierarchy.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Fcp%2Fvtable-class-hierarchy.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Fcp%2Fvtable-class-hierarchy.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fvtable-class-hierarchy.c?ref=d8a2d370dc8e418c97cfacbef66a86ab444e94d2", "patch": "@@ -120,6 +120,8 @@ along with GCC; see the file COPYING3.  If not see\n #include \"vtable-verify.h\"\n #include \"gimple.h\"\n #include \"gimplify.h\"\n+#include \"stringpool.h\"\n+#include \"stor-layout.h\"\n \n static int num_calls_to_regset = 0;\n static int num_calls_to_regpair = 0;"}, {"sha": "88596a8d49c22ed353134edd150b1bdd475cb1d9", "filename": "gcc/dbxout.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Fdbxout.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Fdbxout.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdbxout.c?ref=d8a2d370dc8e418c97cfacbef66a86ab444e94d2", "patch": "@@ -72,6 +72,8 @@ along with GCC; see the file COPYING3.  If not see\n #include \"tm.h\"\n \n #include \"tree.h\"\n+#include \"varasm.h\"\n+#include \"stor-layout.h\"\n #include \"rtl.h\"\n #include \"flags.h\"\n #include \"regs.h\""}, {"sha": "2aef34d307a572488700c31dcb0884f4404d2a94", "filename": "gcc/dojump.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Fdojump.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Fdojump.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdojump.c?ref=d8a2d370dc8e418c97cfacbef66a86ab444e94d2", "patch": "@@ -23,6 +23,7 @@ along with GCC; see the file COPYING3.  If not see\n #include \"tm.h\"\n #include \"rtl.h\"\n #include \"tree.h\"\n+#include \"stor-layout.h\"\n #include \"flags.h\"\n #include \"function.h\"\n #include \"insn-config.h\""}, {"sha": "9662da845ba63a2950fef11ff016698c6dea9c83", "filename": "gcc/dse.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Fdse.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Fdse.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdse.c?ref=d8a2d370dc8e418c97cfacbef66a86ab444e94d2", "patch": "@@ -29,6 +29,7 @@ along with GCC; see the file COPYING3.  If not see\n #include \"tm.h\"\n #include \"rtl.h\"\n #include \"tree.h\"\n+#include \"stor-layout.h\"\n #include \"tm_p.h\"\n #include \"regs.h\"\n #include \"hard-reg-set.h\""}, {"sha": "fc1b0825205642be6332053109a0d0850bc1f739", "filename": "gcc/dwarf2asm.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Fdwarf2asm.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Fdwarf2asm.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdwarf2asm.c?ref=d8a2d370dc8e418c97cfacbef66a86ab444e94d2", "patch": "@@ -24,6 +24,8 @@ along with GCC; see the file COPYING3.  If not see\n #include \"tm.h\"\n #include \"flags.h\"\n #include \"tree.h\"\n+#include \"stringpool.h\"\n+#include \"varasm.h\"\n #include \"rtl.h\"\n #include \"output.h\"\n #include \"target.h\""}, {"sha": "19276e23a2073b47e779442e1dda381ff3da357f", "filename": "gcc/dwarf2cfi.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Fdwarf2cfi.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Fdwarf2cfi.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdwarf2cfi.c?ref=d8a2d370dc8e418c97cfacbef66a86ab444e94d2", "patch": "@@ -25,6 +25,7 @@ along with GCC; see the file COPYING3.  If not see\n #include \"flags.h\"\n #include \"rtl.h\"\n #include \"tree.h\"\n+#include \"stor-layout.h\"\n #include \"function.h\"\n #include \"basic-block.h\"\n #include \"dwarf2.h\""}, {"sha": "8186b528872fcd87fab5968b134d76b19d274991", "filename": "gcc/dwarf2out.c", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Fdwarf2out.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Fdwarf2out.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdwarf2out.c?ref=d8a2d370dc8e418c97cfacbef66a86ab444e94d2", "patch": "@@ -59,10 +59,16 @@ along with GCC; see the file COPYING3.  If not see\n #include \"system.h\"\n #include \"coretypes.h\"\n #include \"tm.h\"\n+#include \"rtl.h\"\n #include \"tree.h\"\n+#include \"stringpool.h\"\n+#include \"stor-layout.h\"\n+#include \"varasm.h\"\n+#include \"function.h\"\n+#include \"emit-rtl.h\"\n+#include \"gimple.h\"\n #include \"version.h\"\n #include \"flags.h\"\n-#include \"rtl.h\"\n #include \"hard-reg-set.h\"\n #include \"regs.h\"\n #include \"insn-config.h\""}, {"sha": "24e3c92151b85bbf2443c46c5a1d9aa95d0546e3", "filename": "gcc/emit-rtl.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Femit-rtl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Femit-rtl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Femit-rtl.c?ref=d8a2d370dc8e418c97cfacbef66a86ab444e94d2", "patch": "@@ -38,9 +38,12 @@ along with GCC; see the file COPYING3.  If not see\n #include \"diagnostic-core.h\"\n #include \"rtl.h\"\n #include \"tree.h\"\n+#include \"varasm.h\"\n+#include \"gimple.h\"\n #include \"tm_p.h\"\n #include \"flags.h\"\n #include \"function.h\"\n+#include \"stringpool.h\"\n #include \"expr.h\"\n #include \"regs.h\"\n #include \"hard-reg-set.h\""}, {"sha": "301c67b354549a6cb02ac10cd6f21d8742981883", "filename": "gcc/emit-rtl.h", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Femit-rtl.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Femit-rtl.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Femit-rtl.h?ref=d8a2d370dc8e418c97cfacbef66a86ab444e94d2", "patch": "@@ -113,4 +113,7 @@ get_max_uid (void)\n {\n   return crtl->emit.x_cur_insn_uid;\n }\n+\n+extern void set_decl_incoming_rtl (tree, rtx, bool);\n+\n #endif /* GCC_EMIT_RTL_H */"}, {"sha": "f8296b223bc2198a8d92243ac2cba2254af5d642", "filename": "gcc/except.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Fexcept.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Fexcept.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fexcept.c?ref=d8a2d370dc8e418c97cfacbef66a86ab444e94d2", "patch": "@@ -115,6 +115,8 @@ along with GCC; see the file COPYING3.  If not see\n #include \"tm.h\"\n #include \"rtl.h\"\n #include \"tree.h\"\n+#include \"stringpool.h\"\n+#include \"stor-layout.h\"\n #include \"flags.h\"\n #include \"function.h\"\n #include \"expr.h\""}, {"sha": "bc4f805323c3b5d8c0bb84db4e5f4f455f79a903", "filename": "gcc/explow.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Fexplow.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Fexplow.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fexplow.c?ref=d8a2d370dc8e418c97cfacbef66a86ab444e94d2", "patch": "@@ -25,6 +25,7 @@ along with GCC; see the file COPYING3.  If not see\n #include \"diagnostic-core.h\"\n #include \"rtl.h\"\n #include \"tree.h\"\n+#include \"stor-layout.h\"\n #include \"tm_p.h\"\n #include \"flags.h\"\n #include \"except.h\""}, {"sha": "c5123cbbe81c21136ddd38737dd3c659369d80c4", "filename": "gcc/expmed.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Fexpmed.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Fexpmed.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fexpmed.c?ref=d8a2d370dc8e418c97cfacbef66a86ab444e94d2", "patch": "@@ -26,6 +26,7 @@ along with GCC; see the file COPYING3.  If not see\n #include \"diagnostic-core.h\"\n #include \"rtl.h\"\n #include \"tree.h\"\n+#include \"stor-layout.h\"\n #include \"tm_p.h\"\n #include \"flags.h\"\n #include \"insn-config.h\""}, {"sha": "53e85e503ee5b1c999702dd587f641c0b0425f0c", "filename": "gcc/expr.c", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Fexpr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Fexpr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fexpr.c?ref=d8a2d370dc8e418c97cfacbef66a86ab444e94d2", "patch": "@@ -24,6 +24,10 @@ along with GCC; see the file COPYING3.  If not see\n #include \"machmode.h\"\n #include \"rtl.h\"\n #include \"tree.h\"\n+#include \"stringpool.h\"\n+#include \"stor-layout.h\"\n+#include \"attribs.h\"\n+#include \"varasm.h\"\n #include \"flags.h\"\n #include \"regs.h\"\n #include \"hard-reg-set.h\""}, {"sha": "a2cd6690bfe73197af379b68692de26894802b76", "filename": "gcc/expr.h", "status": "modified", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Fexpr.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Fexpr.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fexpr.h?ref=d8a2d370dc8e418c97cfacbef66a86ab444e94d2", "patch": "@@ -748,4 +748,23 @@ extern void expand_case (gimple);\n /* Like expand_case but special-case for SJLJ exception dispatching.  */\n extern void expand_sjlj_dispatch_table (rtx, vec<tree> );\n \n+/* Determine whether the LEN bytes can be moved by using several move\n+   instructions.  Return nonzero if a call to move_by_pieces should\n+   succeed.  */\n+extern int can_move_by_pieces (unsigned HOST_WIDE_INT, unsigned int);\n+\n+extern unsigned HOST_WIDE_INT highest_pow2_factor (const_tree);\n+bool array_at_struct_end_p (tree);\n+\n+/* Return a tree of sizetype representing the size, in bytes, of the element\n+   of EXP, an ARRAY_REF or an ARRAY_RANGE_REF.  */\n+extern tree array_ref_element_size (tree);\n+\n+extern bool categorize_ctor_elements (const_tree, HOST_WIDE_INT *,\n+\t\t\t\t      HOST_WIDE_INT *, bool *);\n+\n+/* Return a tree representing the offset, in bytes, of the field referenced\n+   by EXP.  This does not include any offset in DECL_FIELD_BIT_OFFSET.  */\n+extern tree component_ref_field_offset (tree);\n+\n #endif /* GCC_EXPR_H */"}, {"sha": "2d206f1311a7d9de208214a0111b8afcc7af4048", "filename": "gcc/final.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Ffinal.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Ffinal.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffinal.c?ref=d8a2d370dc8e418c97cfacbef66a86ab444e94d2", "patch": "@@ -48,6 +48,7 @@ along with GCC; see the file COPYING3.  If not see\n #include \"tm.h\"\n \n #include \"tree.h\"\n+#include \"varasm.h\"\n #include \"rtl.h\"\n #include \"tm_p.h\"\n #include \"regs.h\""}, {"sha": "fc18de56565b4b801712b227f93c2f8806ab08e5", "filename": "gcc/fold-const.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Ffold-const.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Ffold-const.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffold-const.c?ref=d8a2d370dc8e418c97cfacbef66a86ab444e94d2", "patch": "@@ -46,6 +46,9 @@ along with GCC; see the file COPYING3.  If not see\n #include \"tm.h\"\n #include \"flags.h\"\n #include \"tree.h\"\n+#include \"stor-layout.h\"\n+#include \"calls.h\"\n+#include \"tree-iterator.h\"\n #include \"realmpfr.h\"\n #include \"rtl.h\"\n #include \"expr.h\""}, {"sha": "1d45836695199d4e65e94236b7e9f9de5c5eee3b", "filename": "gcc/fold-const.h", "status": "added", "additions": 172, "deletions": 0, "changes": 172, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Ffold-const.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Ffold-const.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffold-const.h?ref=d8a2d370dc8e418c97cfacbef66a86ab444e94d2", "patch": "@@ -0,0 +1,172 @@\n+/* Fold a constant sub-tree into a single node for C-compiler\n+   Copyright (C) 1987-2013 Free Software Foundation, Inc.\n+\n+This file is part of GCC.\n+\n+GCC is free software; you can redistribute it and/or modify it under\n+the terms of the GNU General Public License as published by the Free\n+Software Foundation; either version 3, or (at your option) any later\n+version.\n+\n+GCC is distributed in the hope that it will be useful, but WITHOUT ANY\n+WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GCC; see the file COPYING3.  If not see\n+<http://www.gnu.org/licenses/>.  */\n+\n+#ifndef GCC_FOLD_CONST_H\n+#define GCC_FOLD_CONST_H\n+\n+/* Non-zero if we are folding constants inside an initializer; zero\n+   otherwise.  */\n+extern int folding_initializer;\n+\n+/* Convert between trees and native memory representation.  */\n+extern int native_encode_expr (const_tree, unsigned char *, int);\n+extern tree native_interpret_expr (tree, const unsigned char *, int);\n+\n+/* Fold constants as much as possible in an expression.\n+   Returns the simplified expression.\n+   Acts only on the top level of the expression;\n+   if the argument itself cannot be simplified, its\n+   subexpressions are not changed.  */\n+\n+extern tree fold (tree);\n+#define fold_unary(CODE,T1,T2)\\\n+   fold_unary_loc (UNKNOWN_LOCATION, CODE, T1, T2)\n+extern tree fold_unary_loc (location_t, enum tree_code, tree, tree);\n+#define fold_unary_ignore_overflow(CODE,T1,T2)\\\n+   fold_unary_ignore_overflow_loc (UNKNOWN_LOCATION, CODE, T1, T2)\n+extern tree fold_unary_ignore_overflow_loc (location_t, enum tree_code, tree, tree);\n+#define fold_binary(CODE,T1,T2,T3)\\\n+   fold_binary_loc (UNKNOWN_LOCATION, CODE, T1, T2, T3)\n+extern tree fold_binary_loc (location_t, enum tree_code, tree, tree, tree);\n+#define fold_ternary(CODE,T1,T2,T3,T4)\\\n+   fold_ternary_loc (UNKNOWN_LOCATION, CODE, T1, T2, T3, T4)\n+extern tree fold_ternary_loc (location_t, enum tree_code, tree, tree, tree, tree);\n+#define fold_build1(c,t1,t2)\\\n+   fold_build1_stat_loc (UNKNOWN_LOCATION, c, t1, t2 MEM_STAT_INFO)\n+#define fold_build1_loc(l,c,t1,t2)\\\n+   fold_build1_stat_loc (l, c, t1, t2 MEM_STAT_INFO)\n+extern tree fold_build1_stat_loc (location_t, enum tree_code, tree,\n+\t\t\t\t  tree MEM_STAT_DECL);\n+#define fold_build2(c,t1,t2,t3)\\\n+   fold_build2_stat_loc (UNKNOWN_LOCATION, c, t1, t2, t3 MEM_STAT_INFO)\n+#define fold_build2_loc(l,c,t1,t2,t3)\\\n+   fold_build2_stat_loc (l, c, t1, t2, t3 MEM_STAT_INFO)\n+extern tree fold_build2_stat_loc (location_t, enum tree_code, tree, tree,\n+\t\t\t\t  tree MEM_STAT_DECL);\n+#define fold_build3(c,t1,t2,t3,t4)\\\n+   fold_build3_stat_loc (UNKNOWN_LOCATION, c, t1, t2, t3, t4 MEM_STAT_INFO)\n+#define fold_build3_loc(l,c,t1,t2,t3,t4)\\\n+   fold_build3_stat_loc (l, c, t1, t2, t3, t4 MEM_STAT_INFO)\n+extern tree fold_build3_stat_loc (location_t, enum tree_code, tree, tree, tree,\n+\t\t\t\t  tree MEM_STAT_DECL);\n+extern tree fold_build1_initializer_loc (location_t, enum tree_code, tree, tree);\n+extern tree fold_build2_initializer_loc (location_t, enum tree_code, tree, tree, tree);\n+#define fold_build_call_array(T1,T2,N,T4)\\\n+   fold_build_call_array_loc (UNKNOWN_LOCATION, T1, T2, N, T4)\n+extern tree fold_build_call_array_loc (location_t, tree, tree, int, tree *);\n+#define fold_build_call_array_initializer(T1,T2,N,T4)\\\n+   fold_build_call_array_initializer_loc (UNKNOWN_LOCATION, T1, T2, N, T4)\n+extern tree fold_build_call_array_initializer_loc (location_t, tree, tree, int, tree *);\n+extern bool fold_convertible_p (const_tree, const_tree);\n+#define fold_convert(T1,T2)\\\n+   fold_convert_loc (UNKNOWN_LOCATION, T1, T2)\n+extern tree fold_convert_loc (location_t, tree, tree);\n+extern tree fold_single_bit_test (location_t, enum tree_code, tree, tree, tree);\n+extern tree fold_ignored_result (tree);\n+extern tree fold_abs_const (tree, tree);\n+extern tree fold_indirect_ref_1 (location_t, tree, tree);\n+extern void fold_defer_overflow_warnings (void);\n+extern void fold_undefer_overflow_warnings (bool, const_gimple, int);\n+extern void fold_undefer_and_ignore_overflow_warnings (void);\n+extern bool fold_deferring_overflow_warnings_p (void);\n+extern tree fold_fma (location_t, tree, tree, tree, tree);\n+extern int operand_equal_p (const_tree, const_tree, unsigned int);\n+extern int multiple_of_p (tree, const_tree, const_tree);\n+#define omit_one_operand(T1,T2,T3)\\\n+   omit_one_operand_loc (UNKNOWN_LOCATION, T1, T2, T3)\n+extern tree omit_one_operand_loc (location_t, tree, tree, tree);\n+#define omit_two_operands(T1,T2,T3,T4)\\\n+   omit_two_operands_loc (UNKNOWN_LOCATION, T1, T2, T3, T4)\n+extern tree omit_two_operands_loc (location_t, tree, tree, tree, tree);\n+#define invert_truthvalue(T)\\\n+   invert_truthvalue_loc (UNKNOWN_LOCATION, T)\n+extern tree invert_truthvalue_loc (location_t, tree);\n+extern tree fold_unary_to_constant (enum tree_code, tree, tree);\n+extern tree fold_binary_to_constant (enum tree_code, tree, tree, tree);\n+extern tree fold_read_from_constant_string (tree);\n+extern tree int_const_binop (enum tree_code, const_tree, const_tree);\n+#define build_fold_addr_expr(T)\\\n+        build_fold_addr_expr_loc (UNKNOWN_LOCATION, (T))\n+extern tree build_fold_addr_expr_loc (location_t, tree);\n+#define build_fold_addr_expr_with_type(T,TYPE)\\\n+        build_fold_addr_expr_with_type_loc (UNKNOWN_LOCATION, (T), TYPE)\n+extern tree build_fold_addr_expr_with_type_loc (location_t, tree, tree);\n+extern tree fold_build_cleanup_point_expr (tree type, tree expr);\n+extern tree fold_strip_sign_ops (tree);\n+#define build_fold_indirect_ref(T)\\\n+        build_fold_indirect_ref_loc (UNKNOWN_LOCATION, T)\n+extern tree build_fold_indirect_ref_loc (location_t, tree);\n+#define fold_indirect_ref(T)\\\n+        fold_indirect_ref_loc (UNKNOWN_LOCATION, T)\n+extern tree fold_indirect_ref_loc (location_t, tree);\n+extern tree build_simple_mem_ref_loc (location_t, tree);\n+#define build_simple_mem_ref(T)\\\n+\tbuild_simple_mem_ref_loc (UNKNOWN_LOCATION, T)\n+extern double_int mem_ref_offset (const_tree);\n+extern tree build_invariant_address (tree, tree, HOST_WIDE_INT);\n+extern tree constant_boolean_node (bool, tree);\n+extern tree div_if_zero_remainder (enum tree_code, const_tree, const_tree);\n+\n+extern bool tree_swap_operands_p (const_tree, const_tree, bool);\n+extern enum tree_code swap_tree_comparison (enum tree_code);\n+\n+extern bool ptr_difference_const (tree, tree, HOST_WIDE_INT *);\n+extern enum tree_code invert_tree_comparison (enum tree_code, bool);\n+\n+extern bool tree_unary_nonzero_warnv_p (enum tree_code, tree, tree, bool *);\n+extern bool tree_binary_nonzero_warnv_p (enum tree_code, tree, tree, tree op1,\n+                                         bool *);\n+extern bool tree_single_nonzero_warnv_p (tree, bool *);\n+extern bool tree_unary_nonnegative_warnv_p (enum tree_code, tree, tree, bool *);\n+extern bool tree_binary_nonnegative_warnv_p (enum tree_code, tree, tree, tree,\n+                                             bool *);\n+extern bool tree_single_nonnegative_warnv_p (tree t, bool *strict_overflow_p);\n+extern bool tree_call_nonnegative_warnv_p (tree, tree, tree, tree, bool *);\n+\n+extern bool fold_real_zero_addition_p (const_tree, const_tree, int);\n+extern tree combine_comparisons (location_t, enum tree_code, enum tree_code,\n+\t\t\t\t enum tree_code, tree, tree, tree);\n+extern void debug_fold_checksum (const_tree);\n+extern bool may_negate_without_overflow_p (const_tree);\n+#define round_up(T,N) round_up_loc (UNKNOWN_LOCATION, T, N)\n+extern tree round_up_loc (location_t, tree, int);\n+#define round_down(T,N) round_down_loc (UNKNOWN_LOCATION, T, N)\n+extern tree round_down_loc (location_t, tree, int);\n+extern tree size_int_kind (HOST_WIDE_INT, enum size_type_kind);\n+#define size_binop(CODE,T1,T2)\\\n+   size_binop_loc (UNKNOWN_LOCATION, CODE, T1, T2)\n+extern tree size_binop_loc (location_t, enum tree_code, tree, tree);\n+#define size_diffop(T1,T2)\\\n+   size_diffop_loc (UNKNOWN_LOCATION, T1, T2)\n+extern tree size_diffop_loc (location_t, tree, tree);\n+\n+/* Return an expr equal to X but certainly not valid as an lvalue.  */\n+#define non_lvalue(T) non_lvalue_loc (UNKNOWN_LOCATION, T)\n+extern tree non_lvalue_loc (location_t, tree);\n+\n+extern bool tree_expr_nonnegative_p (tree);\n+extern bool tree_expr_nonnegative_warnv_p (tree, bool *);\n+extern tree make_range (tree, int *, tree *, tree *, bool *);\n+extern tree make_range_step (location_t, enum tree_code, tree, tree, tree,\n+\t\t\t     tree *, tree *, int *, bool *);\n+extern tree build_range_check (location_t, tree, tree, int, tree, tree);\n+extern bool merge_ranges (int *, tree *, tree *, int, tree, tree, int,\n+\t\t\t  tree, tree);\n+\n+#endif // GCC_FOLD_CONST_H"}, {"sha": "26e58bef0f0b2b8d028b391f9719af0c97d1fe62", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=d8a2d370dc8e418c97cfacbef66a86ab444e94d2", "patch": "@@ -7,6 +7,33 @@\n \t* trans-expr.c: Include only gimplify.h and gimple.h as needed.\n \t* trans-openmp.c: Likewise.\n \n+2013-11-14  Diego Novillo  <dnovillo@google.com>\n+\n+\t* decl.c: Include stringpool.h.\n+\t* iresolve.c: Include stringpool.h.\n+\t* match.c: Include stringpool.h.\n+\t* module.c: Include stringpool.h.\n+\t* target-memory.c: Include stor-layout.h.\n+\t* trans-common.c: Include stringpool.h.\n+\tInclude stor-layout.h.\n+\tInclude varasm.h.\n+\t* trans-const.c: Include stor-layout.h.\n+\t* trans-decl.c: Include stringpool.h.\n+\tInclude stor-layout.h.\n+\tInclude varasm.h.\n+\tInclude attribs.h.\n+\t* trans-expr.c: Include stringpool.h.\n+\t* trans-intrinsic.c: Include stringpool.h.\n+\tInclude tree-nested.h.\n+\tInclude stor-layout.h.\n+\t* trans-io.c: Include stringpool.h.\n+\tInclude stor-layout.h.\n+\t* trans-openmp.c: Include stringpool.h.\n+\t* trans-stmt.c: Include stringpool.h.\n+\t* trans-types.c: Include stor-layout.h.\n+\tInclude stringpool.h.\n+\t* trans.c: Include stringpool.h.\n+\n 2013-11-12  Andrew MacLeod  <amacleod@redhat.com>\n \n \t* f95-lang.c: Don't include gimple.h."}, {"sha": "0a0f8e0f3b569a0efe87e7efa542e4949deae8b1", "filename": "gcc/fortran/decl.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Ffortran%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Ffortran%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fdecl.c?ref=d8a2d370dc8e418c97cfacbef66a86ab444e94d2", "patch": "@@ -27,6 +27,7 @@ along with GCC; see the file COPYING3.  If not see\n #include \"flags.h\"\n #include \"constructor.h\"\n #include \"tree.h\"\n+#include \"stringpool.h\"\n \n /* Macros to access allocate memory for gfc_data_variable,\n    gfc_data_value and gfc_data.  */"}, {"sha": "f31340f5d5525674f4df022ca93f4c9e1c276381", "filename": "gcc/fortran/iresolve.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Ffortran%2Firesolve.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Ffortran%2Firesolve.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Firesolve.c?ref=d8a2d370dc8e418c97cfacbef66a86ab444e94d2", "patch": "@@ -30,6 +30,7 @@ along with GCC; see the file COPYING3.  If not see\n #include \"system.h\"\n #include \"coretypes.h\"\n #include \"tree.h\"\n+#include \"stringpool.h\"\n #include \"gfortran.h\"\n #include \"intrinsic.h\"\n #include \"constructor.h\""}, {"sha": "539780aaa245745cd4e76301f88e22fc3bb812f5", "filename": "gcc/fortran/match.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Ffortran%2Fmatch.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Ffortran%2Fmatch.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fmatch.c?ref=d8a2d370dc8e418c97cfacbef66a86ab444e94d2", "patch": "@@ -26,6 +26,7 @@ along with GCC; see the file COPYING3.  If not see\n #include \"match.h\"\n #include \"parse.h\"\n #include \"tree.h\"\n+#include \"stringpool.h\"\n \n int gfc_matching_ptr_assignment = 0;\n int gfc_matching_procptr_assignment = 0;"}, {"sha": "0cd4801857706c9363e2b4ddbab5eb55ccb441b9", "filename": "gcc/fortran/module.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Ffortran%2Fmodule.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Ffortran%2Fmodule.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fmodule.c?ref=d8a2d370dc8e418c97cfacbef66a86ab444e94d2", "patch": "@@ -74,6 +74,7 @@ along with GCC; see the file COPYING3.  If not see\n #include \"constructor.h\"\n #include \"cpp.h\"\n #include \"tree.h\"\n+#include \"stringpool.h\"\n #include \"scanner.h\"\n #include <zlib.h>\n "}, {"sha": "d0ee41a089c7ba0c6edd03243913caf3008ab249", "filename": "gcc/fortran/target-memory.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Ffortran%2Ftarget-memory.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Ffortran%2Ftarget-memory.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ftarget-memory.c?ref=d8a2d370dc8e418c97cfacbef66a86ab444e94d2", "patch": "@@ -24,6 +24,7 @@ along with GCC; see the file COPYING3.  If not see\n #include \"flags.h\"\n #include \"machmode.h\"\n #include \"tree.h\"\n+#include \"stor-layout.h\"\n #include \"gfortran.h\"\n #include \"arith.h\"\n #include \"constructor.h\""}, {"sha": "2266c1bfa5668d6ab50c43fcd928a44edff0a66a", "filename": "gcc/fortran/trans-common.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Ffortran%2Ftrans-common.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Ffortran%2Ftrans-common.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ftrans-common.c?ref=d8a2d370dc8e418c97cfacbef66a86ab444e94d2", "patch": "@@ -98,6 +98,9 @@ along with GCC; see the file COPYING3.  If not see\n #include \"coretypes.h\"\n #include \"tm.h\"\n #include \"tree.h\"\n+#include \"stringpool.h\"\n+#include \"stor-layout.h\"\n+#include \"varasm.h\"\n #include \"gfortran.h\"\n #include \"trans.h\"\n #include \"trans-types.h\""}, {"sha": "f5a2b18ecba1f24426ae46feb526ab0a1ee175e6", "filename": "gcc/fortran/trans-const.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Ffortran%2Ftrans-const.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Ffortran%2Ftrans-const.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ftrans-const.c?ref=d8a2d370dc8e418c97cfacbef66a86ab444e94d2", "patch": "@@ -24,6 +24,7 @@ along with GCC; see the file COPYING3.  If not see\n #include \"system.h\"\n #include \"coretypes.h\"\n #include \"tree.h\"\n+#include \"stor-layout.h\"\n #include \"realmpfr.h\"\n #include \"diagnostic-core.h\"\t/* For fatal_error.  */\n #include \"double-int.h\""}, {"sha": "f974c6e81075d13ae7dad38d6a188d2c2594fba8", "filename": "gcc/fortran/trans-decl.c", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Ffortran%2Ftrans-decl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Ffortran%2Ftrans-decl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ftrans-decl.c?ref=d8a2d370dc8e418c97cfacbef66a86ab444e94d2", "patch": "@@ -25,6 +25,10 @@ along with GCC; see the file COPYING3.  If not see\n #include \"coretypes.h\"\n #include \"tm.h\"\n #include \"tree.h\"\n+#include \"stringpool.h\"\n+#include \"stor-layout.h\"\n+#include \"varasm.h\"\n+#include \"attribs.h\"\n #include \"tree-dump.h\"\n #include \"gimple-expr.h\"\t/* For create_tmp_var_raw.  */\n #include \"ggc.h\""}, {"sha": "41b2f94679ab6f5e4d863b3553a05980f5a70f94", "filename": "gcc/fortran/trans-expr.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Ffortran%2Ftrans-expr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Ffortran%2Ftrans-expr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ftrans-expr.c?ref=d8a2d370dc8e418c97cfacbef66a86ab444e94d2", "patch": "@@ -25,6 +25,7 @@ along with GCC; see the file COPYING3.  If not see\n #include \"system.h\"\n #include \"coretypes.h\"\n #include \"tree.h\"\n+#include \"stringpool.h\"\n #include \"diagnostic-core.h\"\t/* For fatal_error.  */\n #include \"langhooks.h\"\n #include \"flags.h\""}, {"sha": "4acdc8dc7564ed73a5670079a39b16cf3ab0d7fb", "filename": "gcc/fortran/trans-intrinsic.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Ffortran%2Ftrans-intrinsic.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Ffortran%2Ftrans-intrinsic.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ftrans-intrinsic.c?ref=d8a2d370dc8e418c97cfacbef66a86ab444e94d2", "patch": "@@ -26,6 +26,9 @@ along with GCC; see the file COPYING3.  If not see\n #include \"coretypes.h\"\n #include \"tm.h\"\t\t/* For UNITS_PER_WORD.  */\n #include \"tree.h\"\n+#include \"stringpool.h\"\n+#include \"tree-nested.h\"\n+#include \"stor-layout.h\"\n #include \"ggc.h\"\n #include \"diagnostic-core.h\"\t/* For internal_error.  */\n #include \"toplev.h\"\t/* For rest_of_decl_compilation.  */"}, {"sha": "9b46a4eef3eeed907a59a1aed7bce7e5b31702ed", "filename": "gcc/fortran/trans-io.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Ffortran%2Ftrans-io.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Ffortran%2Ftrans-io.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ftrans-io.c?ref=d8a2d370dc8e418c97cfacbef66a86ab444e94d2", "patch": "@@ -23,6 +23,8 @@ along with GCC; see the file COPYING3.  If not see\n #include \"system.h\"\n #include \"coretypes.h\"\n #include \"tree.h\"\n+#include \"stringpool.h\"\n+#include \"stor-layout.h\"\n #include \"ggc.h\"\n #include \"diagnostic-core.h\"\t/* For internal_error.  */\n #include \"gfortran.h\""}, {"sha": "d23af17d81e066c220800ba5df3e1b085d857ca0", "filename": "gcc/fortran/trans-openmp.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Ffortran%2Ftrans-openmp.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Ffortran%2Ftrans-openmp.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ftrans-openmp.c?ref=d8a2d370dc8e418c97cfacbef66a86ab444e94d2", "patch": "@@ -25,6 +25,7 @@ along with GCC; see the file COPYING3.  If not see\n #include \"tree.h\"\n #include \"gimple.h\"\n #include \"gimplify.h\"\t/* For create_tmp_var_raw.  */\n+#include \"stringpool.h\"\n #include \"diagnostic-core.h\"\t/* For internal_error.  */\n #include \"gfortran.h\"\n #include \"trans.h\""}, {"sha": "4f211975581e39b1c0c1e96f7b25e1b56df68e0c", "filename": "gcc/fortran/trans-stmt.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Ffortran%2Ftrans-stmt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Ffortran%2Ftrans-stmt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ftrans-stmt.c?ref=d8a2d370dc8e418c97cfacbef66a86ab444e94d2", "patch": "@@ -24,6 +24,7 @@ along with GCC; see the file COPYING3.  If not see\n #include \"system.h\"\n #include \"coretypes.h\"\n #include \"tree.h\"\n+#include \"stringpool.h\"\n #include \"gfortran.h\"\n #include \"flags.h\"\n #include \"trans.h\""}, {"sha": "21d9f285d17c0ee82edab108a7a4a021fc4f8bea", "filename": "gcc/fortran/trans-types.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Ffortran%2Ftrans-types.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Ffortran%2Ftrans-types.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ftrans-types.c?ref=d8a2d370dc8e418c97cfacbef66a86ab444e94d2", "patch": "@@ -34,6 +34,8 @@ along with GCC; see the file COPYING3.  If not see\n \t\t\t   FLOAT_TYPE_SIZE, DOUBLE_TYPE_SIZE,\n \t\t\t   LONG_DOUBLE_TYPE_SIZE and LIBGCC2_HAS_TF_MODE.  */\n #include \"tree.h\"\n+#include \"stor-layout.h\"\n+#include \"stringpool.h\"\n #include \"langhooks.h\"\t/* For iso-c-bindings.def.  */\n #include \"target.h\"\n #include \"ggc.h\""}, {"sha": "204cbff324736979dd438db40fbca05a3e8683ff", "filename": "gcc/fortran/trans.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Ffortran%2Ftrans.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Ffortran%2Ftrans.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ftrans.c?ref=d8a2d370dc8e418c97cfacbef66a86ab444e94d2", "patch": "@@ -23,6 +23,8 @@ along with GCC; see the file COPYING3.  If not see\n #include \"coretypes.h\"\n #include \"tree.h\"\n #include \"gimple-expr.h\"\t/* For create_tmp_var_raw.  */\n+#include \"gimple.h\"\n+#include \"stringpool.h\"\n #include \"tree-iterator.h\"\n #include \"diagnostic-core.h\"  /* For internal_error.  */\n #include \"flags.h\""}, {"sha": "87953e335c4a75f08a43024ad93a6fe86d90aaee", "filename": "gcc/function.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Ffunction.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Ffunction.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffunction.c?ref=d8a2d370dc8e418c97cfacbef66a86ab444e94d2", "patch": "@@ -37,6 +37,9 @@ along with GCC; see the file COPYING3.  If not see\n #include \"tm.h\"\n #include \"rtl-error.h\"\n #include \"tree.h\"\n+#include \"stor-layout.h\"\n+#include \"varasm.h\"\n+#include \"stringpool.h\"\n #include \"flags.h\"\n #include \"except.h\"\n #include \"function.h\""}, {"sha": "c00bfe2aa3729f8be1e8794e168da207dce0b136", "filename": "gcc/function.h", "status": "modified", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Ffunction.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Ffunction.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffunction.h?ref=d8a2d370dc8e418c97cfacbef66a86ab444e94d2", "patch": "@@ -822,4 +822,25 @@ extern unsigned int emit_initial_value_sets (void);\n extern bool optimize_function_for_size_p (struct function *);\n extern bool optimize_function_for_speed_p (struct function *);\n \n+/* In function.c */\n+extern void expand_function_end (void);\n+extern void expand_function_start (tree);\n+extern void stack_protect_epilogue (void);\n+extern void init_dummy_function_start (void);\n+extern void expand_dummy_function_end (void);\n+extern void allocate_struct_function (tree, bool);\n+extern void push_struct_function (tree fndecl);\n+extern void init_function_start (tree);\n+extern bool use_register_for_decl (const_tree);\n+extern void generate_setjmp_warnings (void);\n+extern void init_temp_slots (void);\n+extern void free_temp_slots (void);\n+extern void pop_temp_slots (void);\n+extern void push_temp_slots (void);\n+extern void preserve_temp_slots (rtx);\n+extern int aggregate_value_p (const_tree, const_tree);\n+extern void push_function_context (void);\n+extern void pop_function_context (void);\n+extern gimple_seq gimplify_parameters (void);\n+\n #endif  /* GCC_FUNCTION_H */"}, {"sha": "a5bbad265a374de740bb31c6bc36a1c92204b4a7", "filename": "gcc/gcc-symtab.h", "status": "added", "additions": 28, "deletions": 0, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Fgcc-symtab.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Fgcc-symtab.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgcc-symtab.h?ref=d8a2d370dc8e418c97cfacbef66a86ab444e94d2", "patch": "@@ -0,0 +1,28 @@\n+/* Declarations for symtab.c.\n+   FIXME - This file should be named symtab.h, but that name conflicts\n+           with libcpp's symtab.h.\n+\n+   Copyright (C) 2013 Free Software Foundation, Inc.\n+\n+This file is part of GCC.\n+\n+GCC is free software; you can redistribute it and/or modify it under\n+the terms of the GNU General Public License as published by the Free\n+Software Foundation; either version 3, or (at your option) any later\n+version.\n+\n+GCC is distributed in the hope that it will be useful, but WITHOUT ANY\n+WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GCC; see the file COPYING3.  If not see\n+<http://www.gnu.org/licenses/>.  */\n+\n+#ifndef GCC_SYMTAB_H\n+#define GCC_SYMTAB_H\n+\n+extern void change_decl_assembler_name (tree, tree);\n+\n+#endif  // GCC_SYMTAB_H"}, {"sha": "c0125d103b71495b4fef6f0b85e809790a2b3572", "filename": "gcc/genattrtab.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Fgenattrtab.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Fgenattrtab.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgenattrtab.c?ref=d8a2d370dc8e418c97cfacbef66a86ab444e94d2", "patch": "@@ -5101,6 +5101,9 @@ write_header (FILE *outf)\n   fprintf (outf, \"#include \\\"coretypes.h\\\"\\n\");\n   fprintf (outf, \"#include \\\"tm.h\\\"\\n\");\n   fprintf (outf, \"#include \\\"tree.h\\\"\\n\");\n+  fprintf (outf, \"#include \\\"varasm.h\\\"\\n\");\n+  fprintf (outf, \"#include \\\"stor-layout.h\\\"\\n\");\n+  fprintf (outf, \"#include \\\"calls.h\\\"\\n\");\n   fprintf (outf, \"#include \\\"rtl.h\\\"\\n\");\n   fprintf (outf, \"#include \\\"insn-attr.h\\\"\\n\");\n   fprintf (outf, \"#include \\\"tm_p.h\\\"\\n\");"}, {"sha": "3ab480428aa917cff9aabddf6ec8ddd73d2db446", "filename": "gcc/genautomata.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Fgenautomata.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Fgenautomata.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgenautomata.c?ref=d8a2d370dc8e418c97cfacbef66a86ab444e94d2", "patch": "@@ -9666,6 +9666,9 @@ main (int argc, char **argv)\n \t\t\"#include \\\"coretypes.h\\\"\\n\"\n \t\t\"#include \\\"tm.h\\\"\\n\"\n \t\t\"#include \\\"tree.h\\\"\\n\"\n+\t\t\"#include \\\"varasm.h\\\"\\n\"\n+\t\t\"#include \\\"stor-layout.h\\\"\\n\"\n+\t\t\"#include \\\"calls.h\\\"\\n\"\n \t\t\"#include \\\"rtl.h\\\"\\n\"\n \t\t\"#include \\\"tm_p.h\\\"\\n\"\n \t\t\"#include \\\"insn-config.h\\\"\\n\""}, {"sha": "03831bfc9de7735b15e095783063b243298c1ec6", "filename": "gcc/genemit.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Fgenemit.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Fgenemit.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgenemit.c?ref=d8a2d370dc8e418c97cfacbef66a86ab444e94d2", "patch": "@@ -791,6 +791,9 @@ from the machine description file `md'.  */\\n\\n\");\n   printf (\"#include \\\"coretypes.h\\\"\\n\");\n   printf (\"#include \\\"tm.h\\\"\\n\");\n   printf (\"#include \\\"tree.h\\\"\\n\");\n+  printf (\"#include \\\"varasm.h\\\"\\n\");\n+  printf (\"#include \\\"stor-layout.h\\\"\\n\");\n+  printf (\"#include \\\"calls.h\\\"\\n\");\n   printf (\"#include \\\"rtl.h\\\"\\n\");\n   printf (\"#include \\\"tm_p.h\\\"\\n\");\n   printf (\"#include \\\"function.h\\\"\\n\");"}, {"sha": "86e9ca220065214f16a7688d9afeb33b87440b60", "filename": "gcc/gengtype.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Fgengtype.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Fgengtype.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgengtype.c?ref=d8a2d370dc8e418c97cfacbef66a86ab444e94d2", "patch": "@@ -1770,7 +1770,7 @@ open_base_files (void)\n       \"hard-reg-set.h\", \"basic-block.h\", \"cselib.h\", \"insn-addr.h\",\n       \"optabs.h\", \"libfuncs.h\", \"debug.h\", \"ggc.h\", \"cgraph.h\",\n       \"gimple.h\", \"gimple-iterator.h\", \"gimple-ssa.h\", \"tree-cfg.h\",\n-      \"tree-phinodes.h\", \"ssa-iterators.h\", \"tree-ssanames.h\",\n+      \"tree-phinodes.h\", \"ssa-iterators.h\", \"stringpool.h\", \"tree-ssanames.h\",\n       \"tree-ssa-loop.h\", \"tree-ssa-loop-ivopts.h\", \"tree-ssa-loop-manip.h\",\n       \"tree-ssa-loop-niter.h\", \"tree-into-ssa.h\", \"tree-dfa.h\", \n       \"tree-ssa.h\", \"reload.h\", \"cpp-id-data.h\", \"tree-chrec.h\","}, {"sha": "2e736ce687b0c25ae83bb2dac8b3906baa94401c", "filename": "gcc/genopinit.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Fgenopinit.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Fgenopinit.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgenopinit.c?ref=d8a2d370dc8e418c97cfacbef66a86ab444e94d2", "patch": "@@ -405,6 +405,9 @@ main (int argc, char **argv)\n \t   \"#include \\\"coretypes.h\\\"\\n\"\n \t   \"#include \\\"tm.h\\\"\\n\"\n \t   \"#include \\\"tree.h\\\"\\n\"\n+\t   \"#include \\\"varasm.h\\\"\\n\"\n+\t   \"#include \\\"stor-layout.h\\\"\\n\"\n+\t   \"#include \\\"calls.h\\\"\\n\"\n \t   \"#include \\\"rtl.h\\\"\\n\"\n \t   \"#include \\\"tm_p.h\\\"\\n\"\n \t   \"#include \\\"flags.h\\\"\\n\""}, {"sha": "de8979bc7266f55feaf3ba31a10ac484fd85ddf0", "filename": "gcc/genoutput.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Fgenoutput.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Fgenoutput.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgenoutput.c?ref=d8a2d370dc8e418c97cfacbef66a86ab444e94d2", "patch": "@@ -239,6 +239,9 @@ output_prologue (void)\n   printf (\"#include \\\"flags.h\\\"\\n\");\n   printf (\"#include \\\"ggc.h\\\"\\n\");\n   printf (\"#include \\\"tree.h\\\"\\n\");\n+  printf (\"#include \\\"varasm.h\\\"\\n\");\n+  printf (\"#include \\\"stor-layout.h\\\"\\n\");\n+  printf (\"#include \\\"calls.h\\\"\\n\");\n   printf (\"#include \\\"rtl.h\\\"\\n\");\n   printf (\"#include \\\"expr.h\\\"\\n\");\n   printf (\"#include \\\"insn-codes.h\\\"\\n\");"}, {"sha": "8d9d25dd772b1724f8da539ab83d42d81acfb90f", "filename": "gcc/genpeep.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Fgenpeep.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Fgenpeep.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgenpeep.c?ref=d8a2d370dc8e418c97cfacbef66a86ab444e94d2", "patch": "@@ -360,6 +360,9 @@ from the machine description file `md'.  */\\n\\n\");\n   printf (\"#include \\\"tm.h\\\"\\n\");\n   printf (\"#include \\\"insn-config.h\\\"\\n\");\n   printf (\"#include \\\"tree.h\\\"\\n\");\n+  printf (\"#include \\\"varasm.h\\\"\\n\");\n+  printf (\"#include \\\"stor-layout.h\\\"\\n\");\n+  printf (\"#include \\\"calls.h\\\"\\n\");\n   printf (\"#include \\\"rtl.h\\\"\\n\");\n   printf (\"#include \\\"tm_p.h\\\"\\n\");\n   printf (\"#include \\\"regs.h\\\"\\n\");"}, {"sha": "c27ae88f1a040e29608f9c8a7caf585370283b3b", "filename": "gcc/genpreds.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Fgenpreds.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Fgenpreds.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgenpreds.c?ref=d8a2d370dc8e418c97cfacbef66a86ab444e94d2", "patch": "@@ -1302,6 +1302,9 @@ write_insn_preds_c (void)\n #include \\\"tm.h\\\"\\n\\\n #include \\\"rtl.h\\\"\\n\\\n #include \\\"tree.h\\\"\\n\\\n+#include \\\"varasm.h\\\"\\n\\\n+#include \\\"stor-layout.h\\\"\\n\\\n+#include \\\"calls.h\\\"\\n\\\n #include \\\"tm_p.h\\\"\\n\\\n #include \\\"function.h\\\"\\n\\\n #include \\\"insn-config.h\\\"\\n\\"}, {"sha": "17cd2e1b887ecd9b73543042285e2b580dc17d32", "filename": "gcc/gimple-builder.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Fgimple-builder.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Fgimple-builder.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgimple-builder.c?ref=d8a2d370dc8e418c97cfacbef66a86ab444e94d2", "patch": "@@ -21,6 +21,7 @@ along with GCC; see the file COPYING3.  If not see\n #include \"system.h\"\n #include \"coretypes.h\"\n #include \"tree.h\"\n+#include \"stringpool.h\"\n #include \"gimple.h\"\n #include \"tree-ssanames.h\"\n "}, {"sha": "77660a34c6de374eac68281193531261418c6991", "filename": "gcc/gimple-expr.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Fgimple-expr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Fgimple-expr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgimple-expr.c?ref=d8a2d370dc8e418c97cfacbef66a86ab444e94d2", "patch": "@@ -25,7 +25,9 @@ along with GCC; see the file COPYING3.  If not see\n #include \"tm.h\"\n #include \"tree.h\"\n #include \"gimple.h\"\n+#include \"stringpool.h\"\n #include \"gimplify.h\"\n+#include \"stor-layout.h\"\n #include \"demangle.h\"\n #include \"gimple-ssa.h\"\n "}, {"sha": "5493c5f3ea0ca4c729f2b80c283746c8e723486e", "filename": "gcc/gimple-fold.c", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Fgimple-fold.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Fgimple-fold.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgimple-fold.c?ref=d8a2d370dc8e418c97cfacbef66a86ab444e94d2", "patch": "@@ -23,6 +23,10 @@ along with GCC; see the file COPYING3.  If not see\n #include \"coretypes.h\"\n #include \"tm.h\"\n #include \"tree.h\"\n+#include \"stringpool.h\"\n+#include \"expr.h\"\n+#include \"stmt.h\"\n+#include \"stor-layout.h\"\n #include \"flags.h\"\n #include \"function.h\"\n #include \"dumpfile.h\""}, {"sha": "71f8dfec3f807c438a11f4e38b9c1866bfba2dbe", "filename": "gcc/gimple-low.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Fgimple-low.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Fgimple-low.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgimple-low.c?ref=d8a2d370dc8e418c97cfacbef66a86ab444e94d2", "patch": "@@ -23,6 +23,8 @@ along with GCC; see the file COPYING3.  If not see\n #include \"coretypes.h\"\n #include \"tm.h\"\n #include \"tree.h\"\n+#include \"tree-nested.h\"\n+#include \"calls.h\"\n #include \"gimple.h\"\n #include \"gimple-iterator.h\"\n #include \"tree-iterator.h\""}, {"sha": "cdf1dbd417e7064b4ecfcc459fb61e5248cd6e6b", "filename": "gcc/gimple-pretty-print.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Fgimple-pretty-print.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Fgimple-pretty-print.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgimple-pretty-print.c?ref=d8a2d370dc8e418c97cfacbef66a86ab444e94d2", "patch": "@@ -24,6 +24,7 @@ along with GCC; see the file COPYING3.  If not see\n #include \"coretypes.h\"\n #include \"tm.h\"\n #include \"tree.h\"\n+#include \"stringpool.h\"\n #include \"diagnostic.h\"\n #include \"gimple-pretty-print.h\"\n #include \"hashtab.h\""}, {"sha": "1b7e3ff7d76944991919d18add19eead35f99070", "filename": "gcc/gimple-ssa-isolate-paths.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Fgimple-ssa-isolate-paths.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Fgimple-ssa-isolate-paths.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgimple-ssa-isolate-paths.c?ref=d8a2d370dc8e418c97cfacbef66a86ab444e94d2", "patch": "@@ -30,6 +30,7 @@ along with GCC; see the file COPYING3.  If not see\n #include \"gimple-iterator.h\"\n #include \"gimple-walk.h\"\n #include \"tree-ssa.h\"\n+#include \"stringpool.h\"\n #include \"tree-ssanames.h\"\n #include \"gimple-ssa.h\"\n #include \"tree-ssa-operands.h\""}, {"sha": "4eb897fd40cee8f01705148212f9064c0a2dfeff", "filename": "gcc/gimple-ssa-strength-reduction.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Fgimple-ssa-strength-reduction.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Fgimple-ssa-strength-reduction.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgimple-ssa-strength-reduction.c?ref=d8a2d370dc8e418c97cfacbef66a86ab444e94d2", "patch": "@@ -40,6 +40,8 @@ along with GCC; see the file COPYING3.  If not see\n #include \"gimple.h\"\n #include \"gimple-iterator.h\"\n #include \"gimplify-me.h\"\n+#include \"stor-layout.h\"\n+#include \"expr.h\"\n #include \"basic-block.h\"\n #include \"tree-pass.h\"\n #include \"cfgloop.h\"\n@@ -48,6 +50,7 @@ along with GCC; see the file COPYING3.  If not see\n #include \"tree-cfg.h\"\n #include \"tree-phinodes.h\"\n #include \"ssa-iterators.h\"\n+#include \"stringpool.h\"\n #include \"tree-ssanames.h\"\n #include \"domwalk.h\"\n #include \"pointer-set.h\""}, {"sha": "f8106fc4e78174346b0d50cf0749407d574f5428", "filename": "gcc/gimple-streamer-in.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Fgimple-streamer-in.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Fgimple-streamer-in.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgimple-streamer-in.c?ref=d8a2d370dc8e418c97cfacbef66a86ab444e94d2", "patch": "@@ -28,6 +28,7 @@ along with GCC; see the file COPYING3.  If not see\n #include \"gimple-iterator.h\"\n #include \"gimple-ssa.h\"\n #include \"tree-phinodes.h\"\n+#include \"stringpool.h\"\n #include \"tree-ssanames.h\"\n #include \"data-streamer.h\"\n #include \"tree-streamer.h\""}, {"sha": "22f4584a673ee7533355cf78b288bb10fc5450aa", "filename": "gcc/gimple-walk.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Fgimple-walk.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Fgimple-walk.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgimple-walk.c?ref=d8a2d370dc8e418c97cfacbef66a86ab444e94d2", "patch": "@@ -24,6 +24,7 @@ along with GCC; see the file COPYING3.  If not see\n #include \"coretypes.h\"\n #include \"tm.h\"\n #include \"tree.h\"\n+#include \"stmt.h\"\n #include \"gimple.h\"\n #include \"gimple-iterator.h\"\n #include \"gimple-walk.h\""}, {"sha": "c0316981ef9e24ea6d37b858f8cc06599aa4bccc", "filename": "gcc/gimple.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Fgimple.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Fgimple.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgimple.c?ref=d8a2d370dc8e418c97cfacbef66a86ab444e94d2", "patch": "@@ -25,6 +25,9 @@ along with GCC; see the file COPYING3.  If not see\n #include \"tm.h\"\n #include \"target.h\"\n #include \"tree.h\"\n+#include \"calls.h\"\n+#include \"stmt.h\"\n+#include \"stor-layout.h\"\n #include \"ggc.h\"\n #include \"hard-reg-set.h\"\n #include \"basic-block.h\""}, {"sha": "a7e9387b6480d98f36a3aac32f384968daf51080", "filename": "gcc/gimplify-me.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Fgimplify-me.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Fgimplify-me.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgimplify-me.c?ref=d8a2d370dc8e418c97cfacbef66a86ab444e94d2", "patch": "@@ -25,11 +25,14 @@ along with GCC; see the file COPYING3.  If not see\n #include \"system.h\"\n #include \"coretypes.h\"\n #include \"tree.h\"\n+#include \"stmt.h\"\n+#include \"stor-layout.h\"\n #include \"gimple.h\"\n #include \"gimple-iterator.h\"\n #include \"gimplify.h\"\n #include \"gimplify-me.h\"\n #include \"gimple-ssa.h\"\n+#include \"stringpool.h\"\n #include \"tree-ssanames.h\"\n \n "}, {"sha": "8baa4dcc1786c2aa2a737c230a5b440041799726", "filename": "gcc/gimplify.c", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Fgimplify.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Fgimplify.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgimplify.c?ref=d8a2d370dc8e418c97cfacbef66a86ab444e94d2", "patch": "@@ -24,9 +24,16 @@ along with GCC; see the file COPYING3.  If not see\n #include \"system.h\"\n #include \"coretypes.h\"\n #include \"tree.h\"\n+#include \"expr.h\"\n #include \"gimple.h\"\n #include \"gimplify.h\"\n #include \"gimple-iterator.h\"\n+#include \"stringpool.h\"\n+#include \"calls.h\"\n+#include \"varasm.h\"\n+#include \"stor-layout.h\"\n+#include \"stmt.h\"\n+#include \"print-tree.h\"\n #include \"tree-iterator.h\"\n #include \"tree-inline.h\"\n #include \"tree-pretty-print.h\""}, {"sha": "918862ef8fe5bd6d150a3d35e989bc60574192f8", "filename": "gcc/go/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Fgo%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Fgo%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgo%2FChangeLog?ref=d8a2d370dc8e418c97cfacbef66a86ab444e94d2", "patch": "@@ -12,6 +12,14 @@\n \n \t* go-lang.c: Include only gimplify.h and gimple.h as needed.\n \n+2013-11-14  Diego Novillo  <dnovillo@google.com>\n+\n+\t* go-backend.c: Include stor-layout.h.\n+\t* go-gcc.cc: Include stringpool.h.\n+\tInclude stor-layout.h.\n+\tInclude varasm.h.\n+\t* go-lang.c: Include stor-layout.h.\n+\n 2013-11-12  Andrew MacLeod  <amacleod@redhat.com>\n \n \t* go-lang.c: Include gimplify.h."}, {"sha": "31d01221fd1c8a587ca77d02a4a45f101fe7829a", "filename": "gcc/go/go-backend.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Fgo%2Fgo-backend.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Fgo%2Fgo-backend.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgo%2Fgo-backend.c?ref=d8a2d370dc8e418c97cfacbef66a86ab444e94d2", "patch": "@@ -23,6 +23,7 @@ along with GCC; see the file COPYING3.  If not see\n #include \"simple-object.h\"\n #include \"tm.h\"\n #include \"tree.h\"\n+#include \"stor-layout.h\"\n #include \"tm_p.h\"\n #include \"intl.h\"\n #include \"output.h\"\t/* for assemble_string */"}, {"sha": "83f91d5daf5479b5f07cf2245d4d5998a13e09c6", "filename": "gcc/go/go-gcc.cc", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Fgo%2Fgo-gcc.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Fgo%2Fgo-gcc.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgo%2Fgo-gcc.cc?ref=d8a2d370dc8e418c97cfacbef66a86ab444e94d2", "patch": "@@ -25,6 +25,9 @@\n #include <gmp.h>\n \n #include \"tree.h\"\n+#include \"stringpool.h\"\n+#include \"stor-layout.h\"\n+#include \"varasm.h\"\n #include \"tree-iterator.h\"\n #include \"gimple.h\"\n #include \"toplev.h\""}, {"sha": "93a0446efe620585817216f6cd2aebe80a4ed235", "filename": "gcc/go/go-lang.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Fgo%2Fgo-lang.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Fgo%2Fgo-lang.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgo%2Fgo-lang.c?ref=d8a2d370dc8e418c97cfacbef66a86ab444e94d2", "patch": "@@ -25,6 +25,7 @@ along with GCC; see the file COPYING3.  If not see\n #include \"tree.h\"\n #include \"gimple.h\"\n #include \"gimplify.h\"\n+#include \"stor-layout.h\"\n #include \"ggc.h\"\n #include \"toplev.h\"\n #include \"debug.h\""}, {"sha": "14c10d66a042e187f50b45a503d005ead8307970", "filename": "gcc/go/gofrontend/expressions.cc", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Fgo%2Fgofrontend%2Fexpressions.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Fgo%2Fgofrontend%2Fexpressions.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgo%2Fgofrontend%2Fexpressions.cc?ref=d8a2d370dc8e418c97cfacbef66a86ab444e94d2", "patch": "@@ -11,6 +11,8 @@\n #include \"toplev.h\"\n #include \"intl.h\"\n #include \"tree.h\"\n+#include \"stringpool.h\"\n+#include \"stor-layout.h\"\n #include \"gimple.h\"\n #include \"gimplify.h\"\n #include \"tree-iterator.h\""}, {"sha": "001d24d238d6cf71301645856c587c4a0b19fd11", "filename": "gcc/go/gofrontend/gogo-tree.cc", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Fgo%2Fgofrontend%2Fgogo-tree.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Fgo%2Fgofrontend%2Fgogo-tree.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgo%2Fgofrontend%2Fgogo-tree.cc?ref=d8a2d370dc8e418c97cfacbef66a86ab444e94d2", "patch": "@@ -8,6 +8,9 @@\n \n #include \"toplev.h\"\n #include \"tree.h\"\n+#include \"stringpool.h\"\n+#include \"stor-layout.h\"\n+#include \"varasm.h\"\n #include \"gimple.h\"\n #include \"gimplify.h\"\n #include \"tree-iterator.h\""}, {"sha": "7d705bb339443235b0949827639a23232df9e279", "filename": "gcc/graphite-sese-to-poly.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Fgraphite-sese-to-poly.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Fgraphite-sese-to-poly.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgraphite-sese-to-poly.c?ref=d8a2d370dc8e418c97cfacbef66a86ab444e94d2", "patch": "@@ -42,6 +42,7 @@ along with GCC; see the file COPYING3.  If not see\n #include \"tree-cfg.h\"\n #include \"tree-phinodes.h\"\n #include \"ssa-iterators.h\"\n+#include \"stringpool.h\"\n #include \"tree-ssanames.h\"\n #include \"tree-ssa-loop-manip.h\"\n #include \"tree-ssa-loop-niter.h\""}, {"sha": "867747041ae360347859b97dedc3b2b0c7289149", "filename": "gcc/internal-fn.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Finternal-fn.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Finternal-fn.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Finternal-fn.c?ref=d8a2d370dc8e418c97cfacbef66a86ab444e94d2", "patch": "@@ -22,6 +22,7 @@ along with GCC; see the file COPYING3.  If not see\n #include \"coretypes.h\"\n #include \"internal-fn.h\"\n #include \"tree.h\"\n+#include \"stor-layout.h\"\n #include \"expr.h\"\n #include \"optabs.h\"\n #include \"gimple.h\""}, {"sha": "38cf378d2d4cd0463a86e98a415e640c388f54e6", "filename": "gcc/ipa-devirt.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Fipa-devirt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Fipa-devirt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fipa-devirt.c?ref=d8a2d370dc8e418c97cfacbef66a86ab444e94d2", "patch": "@@ -110,7 +110,10 @@ along with GCC; see the file COPYING3.  If not see\n #include \"coretypes.h\"\n #include \"tm.h\"\n #include \"tree.h\"\n+#include \"print-tree.h\"\n+#include \"calls.h\"\n #include \"cgraph.h\"\n+#include \"expr.h\"\n #include \"tree-pass.h\"\n #include \"ggc.h\"\n #include \"pointer-set.h\""}, {"sha": "662196f058bda27754e33541f2207a0e7a315c73", "filename": "gcc/ipa-inline-analysis.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Fipa-inline-analysis.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Fipa-inline-analysis.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fipa-inline-analysis.c?ref=d8a2d370dc8e418c97cfacbef66a86ab444e94d2", "patch": "@@ -69,6 +69,9 @@ along with GCC; see the file COPYING3.  If not see\n #include \"coretypes.h\"\n #include \"tm.h\"\n #include \"tree.h\"\n+#include \"stor-layout.h\"\n+#include \"stringpool.h\"\n+#include \"print-tree.h\"\n #include \"tree-inline.h\"\n #include \"langhooks.h\"\n #include \"flags.h\""}, {"sha": "fbb63da7dc83beab8c68fb25721f1a3654f67785", "filename": "gcc/ipa-inline.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Fipa-inline.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Fipa-inline.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fipa-inline.c?ref=d8a2d370dc8e418c97cfacbef66a86ab444e94d2", "patch": "@@ -94,6 +94,8 @@ along with GCC; see the file COPYING3.  If not see\n #include \"coretypes.h\"\n #include \"tm.h\"\n #include \"tree.h\"\n+#include \"trans-mem.h\"\n+#include \"calls.h\"\n #include \"tree-inline.h\"\n #include \"langhooks.h\"\n #include \"flags.h\""}, {"sha": "d122dd555392080b1e970d29f740b441375ae044", "filename": "gcc/ipa-prop.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Fipa-prop.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Fipa-prop.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fipa-prop.c?ref=d8a2d370dc8e418c97cfacbef66a86ab444e94d2", "patch": "@@ -22,6 +22,9 @@ along with GCC; see the file COPYING3.  If not see\n #include \"coretypes.h\"\n #include \"tree.h\"\n #include \"gimple.h\"\n+#include \"expr.h\"\n+#include \"stor-layout.h\"\n+#include \"print-tree.h\"\n #include \"gimplify.h\"\n #include \"gimple-iterator.h\"\n #include \"gimplify-me.h\""}, {"sha": "a241a699c5c276e65af24896029f74163281b1bf", "filename": "gcc/ipa-pure-const.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Fipa-pure-const.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Fipa-pure-const.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fipa-pure-const.c?ref=d8a2d370dc8e418c97cfacbef66a86ab444e94d2", "patch": "@@ -36,6 +36,8 @@ along with GCC; see the file COPYING3.  If not see\n #include \"coretypes.h\"\n #include \"tm.h\"\n #include \"tree.h\"\n+#include \"print-tree.h\"\n+#include \"calls.h\"\n #include \"gimple.h\"\n #include \"gimple-iterator.h\"\n #include \"gimple-walk.h\""}, {"sha": "27208deb5192d7e1e48bc7c0985cd02eb8a0aee0", "filename": "gcc/ipa-reference.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Fipa-reference.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Fipa-reference.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fipa-reference.c?ref=d8a2d370dc8e418c97cfacbef66a86ab444e94d2", "patch": "@@ -41,6 +41,7 @@ along with GCC; see the file COPYING3.  If not see\n #include \"coretypes.h\"\n #include \"tm.h\"\n #include \"tree.h\"\n+#include \"calls.h\"\n #include \"gimple.h\"\n #include \"tree-inline.h\"\n #include \"tree-pass.h\""}, {"sha": "59d174220c3ef38c3975793d17d9e3c5a8fbf6ad", "filename": "gcc/ipa-split.c", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Fipa-split.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Fipa-split.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fipa-split.c?ref=d8a2d370dc8e418c97cfacbef66a86ab444e94d2", "patch": "@@ -79,6 +79,9 @@ along with GCC; see the file COPYING3.  If not see\n #include \"coretypes.h\"\n #include \"tree.h\"\n #include \"gimple.h\"\n+#include \"stringpool.h\"\n+#include \"expr.h\"\n+#include \"calls.h\"\n #include \"gimplify.h\"\n #include \"gimple-iterator.h\"\n #include \"gimplify-me.h\"\n@@ -89,6 +92,7 @@ along with GCC; see the file COPYING3.  If not see\n #include \"tree-cfg.h\"\n #include \"tree-phinodes.h\"\n #include \"ssa-iterators.h\"\n+#include \"stringpool.h\"\n #include \"tree-ssanames.h\"\n #include \"tree-into-ssa.h\"\n #include \"tree-dfa.h\""}, {"sha": "3950d4eb8568ec2bc61d296e4e4aa3b3d3e88599", "filename": "gcc/ipa.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Fipa.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Fipa.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fipa.c?ref=d8a2d370dc8e418c97cfacbef66a86ab444e94d2", "patch": "@@ -22,6 +22,8 @@ along with GCC; see the file COPYING3.  If not see\n #include \"coretypes.h\"\n #include \"tm.h\"\n #include \"tree.h\"\n+#include \"calls.h\"\n+#include \"stringpool.h\"\n #include \"cgraph.h\"\n #include \"tree-pass.h\"\n #include \"gimple.h\""}, {"sha": "0e277e4bf40239022bb57639f499d8d2f2d96c0a", "filename": "gcc/java/ChangeLog", "status": "modified", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Fjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Fjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2FChangeLog?ref=d8a2d370dc8e418c97cfacbef66a86ab444e94d2", "patch": "@@ -12,6 +12,30 @@\n \n \t* java-gimplify.c: Include only gimplify.h and gimple.h as needed.\n \n+2013-11-14  Diego Novillo  <dnovillo@google.com>\n+\n+\t* builtins.c: Include stor-layout.h.\n+\tInclude stringpool.h.\n+\t* class.c: Include stringpool.h.\n+\tInclude stor-layout.h.\n+\tInclude varasm.h.\n+\t* constants.c: Include stringpool.h.\n+\tInclude stor-layout.h.\n+\t* decl.c: Include stor-layout.h.\n+\tInclude stringpool.h.\n+\tInclude varasm.h.\n+\t* except.c: Include stringpool.h.\n+\tInclude stor-layout.h.\n+\t* expr.c: Include stringpool.h.\n+\tInclude stor-layout.h.\n+\t* jcf-parse.c: Include stringpool.h.\n+\t* mangle.c: Include stringpool.h.\n+\t* resource.c: Include stringpool.h.\n+\tInclude stor-layout.h.\n+\t* typeck.c: Include stor-layout.h.\n+\tInclude stringpool.h.\n+\t* verify-glue.c: Include stringpool.h.\n+\n 2013-11-12  Andrew MacLeod  <amacleod@redhat.com>\n \n \t* java-gimplify.c: Include gimplify.h."}, {"sha": "46d1d86820cff49533d222985173f50fa03fade8", "filename": "gcc/java/builtins.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Fjava%2Fbuiltins.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Fjava%2Fbuiltins.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fbuiltins.c?ref=d8a2d370dc8e418c97cfacbef66a86ab444e94d2", "patch": "@@ -31,6 +31,8 @@ The Free Software Foundation is independent of Sun Microsystems, Inc.  */\n #include \"coretypes.h\"\n #include \"tm.h\"\n #include \"tree.h\"\n+#include \"stor-layout.h\"\n+#include \"stringpool.h\"\n #include \"ggc.h\"\n #include \"flags.h\"\n #include \"langhooks.h\""}, {"sha": "58bc92f94d94b4aa8c6a03fd506bb27c0a433e6f", "filename": "gcc/java/class.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Fjava%2Fclass.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Fjava%2Fclass.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fclass.c?ref=d8a2d370dc8e418c97cfacbef66a86ab444e94d2", "patch": "@@ -27,6 +27,9 @@ The Free Software Foundation is independent of Sun Microsystems, Inc.  */\n #include \"system.h\"\n #include \"coretypes.h\"\n #include \"tree.h\"\n+#include \"stringpool.h\"\n+#include \"stor-layout.h\"\n+#include \"varasm.h\"\n #include \"flags.h\"\n #include \"java-tree.h\"\n #include \"jcf.h\""}, {"sha": "64f6e6964035807efc28b629809d9937280e09f1", "filename": "gcc/java/constants.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Fjava%2Fconstants.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Fjava%2Fconstants.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fconstants.c?ref=d8a2d370dc8e418c97cfacbef66a86ab444e94d2", "patch": "@@ -26,6 +26,8 @@ The Free Software Foundation is independent of Sun Microsystems, Inc.  */\n #include \"tm.h\"\n #include \"jcf.h\"\n #include \"tree.h\"\n+#include \"stringpool.h\"\n+#include \"stor-layout.h\"\n #include \"java-tree.h\"\n #include \"diagnostic-core.h\"\n #include \"toplev.h\""}, {"sha": "70e21b071f0d5ced1d26b15ac3cf8826a8c6322b", "filename": "gcc/java/decl.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Fjava%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Fjava%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fdecl.c?ref=d8a2d370dc8e418c97cfacbef66a86ab444e94d2", "patch": "@@ -28,6 +28,9 @@ The Free Software Foundation is independent of Sun Microsystems, Inc.  */\n #include \"system.h\"\n #include \"coretypes.h\"\n #include \"tree.h\"\n+#include \"stor-layout.h\"\n+#include \"stringpool.h\"\n+#include \"varasm.h\"\n #include \"diagnostic-core.h\"\n #include \"toplev.h\"\n #include \"flags.h\""}, {"sha": "9674abac22cb7995d577519a26cb918ae7f26326", "filename": "gcc/java/except.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Fjava%2Fexcept.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Fjava%2Fexcept.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fexcept.c?ref=d8a2d370dc8e418c97cfacbef66a86ab444e94d2", "patch": "@@ -26,6 +26,8 @@ The Free Software Foundation is independent of Sun Microsystems, Inc.  */\n #include \"coretypes.h\"\n #include \"tm.h\"\n #include \"tree.h\"\n+#include \"stringpool.h\"\n+#include \"stor-layout.h\"\n #include \"java-tree.h\"\n #include \"javaop.h\"\n #include \"java-opcodes.h\""}, {"sha": "c62d66dba0210c202124f1c7491817e1e2aa79ef", "filename": "gcc/java/expr.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Fjava%2Fexpr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Fjava%2Fexpr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fexpr.c?ref=d8a2d370dc8e418c97cfacbef66a86ab444e94d2", "patch": "@@ -33,6 +33,8 @@ The Free Software Foundation is independent of Sun Microsystems, Inc.  */\n \t\t\t\t   PARM_BOUNDARY.  */\n \t\t\t\t   \n #include \"tree.h\"\n+#include \"stringpool.h\"\n+#include \"stor-layout.h\"\n #include \"flags.h\"\n #include \"java-tree.h\"\n #include \"javaop.h\""}, {"sha": "9799523f142c5f4a9bddaaa34b071d42174634bf", "filename": "gcc/java/jcf-parse.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Fjava%2Fjcf-parse.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Fjava%2Fjcf-parse.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fjcf-parse.c?ref=d8a2d370dc8e418c97cfacbef66a86ab444e94d2", "patch": "@@ -27,6 +27,7 @@ The Free Software Foundation is independent of Sun Microsystems, Inc.  */\n #include \"system.h\"\n #include \"coretypes.h\"\n #include \"tree.h\"\n+#include \"stringpool.h\"\n #include \"obstack.h\"\n #include \"flags.h\"\n #include \"java-except.h\""}, {"sha": "c4e088303c1330cb5ab6424241ccb984c3c779b4", "filename": "gcc/java/mangle.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Fjava%2Fmangle.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Fjava%2Fmangle.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fmangle.c?ref=d8a2d370dc8e418c97cfacbef66a86ab444e94d2", "patch": "@@ -29,6 +29,7 @@ The Free Software Foundation is independent of Sun Microsystems, Inc.  */\n #include \"coretypes.h\"\n #include \"jcf.h\"\n #include \"tree.h\"\n+#include \"stringpool.h\"\n #include \"java-tree.h\"\n #include \"obstack.h\"\n #include \"diagnostic-core.h\""}, {"sha": "17155b8c362b496a43e4b4d4684a7251857101cc", "filename": "gcc/java/resource.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Fjava%2Fresource.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Fjava%2Fresource.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fresource.c?ref=d8a2d370dc8e418c97cfacbef66a86ab444e94d2", "patch": "@@ -25,6 +25,8 @@ The Free Software Foundation is independent of Sun Microsystems, Inc.  */\n #include \"system.h\"\n #include \"coretypes.h\"\n #include \"tree.h\"\n+#include \"stringpool.h\"\n+#include \"stor-layout.h\"\n #include \"java-tree.h\"\n #include \"jcf.h\"\n #include \"diagnostic-core.h\""}, {"sha": "3a0aa3960a2352c84ac6656c73f4b6732616c736", "filename": "gcc/java/typeck.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Fjava%2Ftypeck.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Fjava%2Ftypeck.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Ftypeck.c?ref=d8a2d370dc8e418c97cfacbef66a86ab444e94d2", "patch": "@@ -27,6 +27,8 @@ The Free Software Foundation is independent of Sun Microsystems, Inc.  */\n #include \"system.h\"\n #include \"coretypes.h\"\n #include \"tree.h\"\n+#include \"stor-layout.h\"\n+#include \"stringpool.h\"\n #include \"obstack.h\"\n #include \"flags.h\"\n #include \"java-tree.h\""}, {"sha": "022f4c4e058267c21eea014169dbed8e104f1a6d", "filename": "gcc/java/verify-glue.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Fjava%2Fverify-glue.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Fjava%2Fverify-glue.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fverify-glue.c?ref=d8a2d370dc8e418c97cfacbef66a86ab444e94d2", "patch": "@@ -28,6 +28,7 @@ The Free Software Foundation is independent of Sun Microsystems, Inc.  */\n #include \"system.h\"\n #include \"coretypes.h\"\n #include \"tree.h\"\n+#include \"stringpool.h\"\n #include \"parse.h\"\n \n #include \"verify.h\""}, {"sha": "4b72f2a6238d54abde48af2acfe8bc395fb1fdcc", "filename": "gcc/langhooks.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Flanghooks.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Flanghooks.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flanghooks.c?ref=d8a2d370dc8e418c97cfacbef66a86ab444e94d2", "patch": "@@ -25,6 +25,8 @@ along with GCC; see the file COPYING3.  If not see\n #include \"tm.h\"\n #include \"toplev.h\"\n #include \"tree.h\"\n+#include \"stringpool.h\"\n+#include \"attribs.h\"\n #include \"tree-inline.h\"\n #include \"gimple.h\"\n #include \"gimplify.h\""}, {"sha": "d82759955d871b0da07e19fed7e32e88db917bad", "filename": "gcc/lto-cgraph.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Flto-cgraph.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Flto-cgraph.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flto-cgraph.c?ref=d8a2d370dc8e418c97cfacbef66a86ab444e94d2", "patch": "@@ -25,6 +25,7 @@ along with GCC; see the file COPYING3.  If not see\n #include \"coretypes.h\"\n #include \"tm.h\"\n #include \"tree.h\"\n+#include \"stringpool.h\"\n #include \"gimple.h\"\n #include \"expr.h\"\n #include \"flags.h\""}, {"sha": "7b9f4ca496ecac1d6e3ac880095c007f85007b07", "filename": "gcc/lto-streamer-in.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Flto-streamer-in.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Flto-streamer-in.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flto-streamer-in.c?ref=d8a2d370dc8e418c97cfacbef66a86ab444e94d2", "patch": "@@ -26,6 +26,7 @@ along with GCC; see the file COPYING3.  If not see\n #include \"tm.h\"\n #include \"toplev.h\"\n #include \"tree.h\"\n+#include \"stringpool.h\"\n #include \"expr.h\"\n #include \"flags.h\"\n #include \"params.h\""}, {"sha": "5e264fceee0c11d3de1b957cb540cc84cdc2b1ac", "filename": "gcc/lto-streamer-out.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Flto-streamer-out.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Flto-streamer-out.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flto-streamer-out.c?ref=d8a2d370dc8e418c97cfacbef66a86ab444e94d2", "patch": "@@ -25,6 +25,8 @@ along with GCC; see the file COPYING3.  If not see\n #include \"coretypes.h\"\n #include \"tm.h\"\n #include \"tree.h\"\n+#include \"stor-layout.h\"\n+#include \"stringpool.h\"\n #include \"expr.h\"\n #include \"flags.h\"\n #include \"params.h\""}, {"sha": "1b83f22046a79afee85ae21ed2ad1f81e86a0889", "filename": "gcc/lto/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Flto%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Flto%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flto%2FChangeLog?ref=d8a2d370dc8e418c97cfacbef66a86ab444e94d2", "patch": "@@ -2,6 +2,13 @@\n \n \t* lto-partition.c lto-symtab.c lto.c Adjust.\n \n+2013-11-14  Diego Novillo  <dnovillo@google.com>\n+\n+\t* lto-lang.c: Include stringpool.h.\n+\tInclude stor-layout.h.\n+\t* lto-partition.c: Include gcc-symtab.h.\n+\t* lto.c: Include stor-layout.h.\n+\n 2013-10-31  David Malcolm  <dmalcolm@redhat.com>\n \n \tAutomated part of renaming of symtab_node_base to symtab_node."}, {"sha": "cb15ce32fa7115bd8396a87d152c1d5503a1ddd7", "filename": "gcc/lto/lto-lang.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Flto%2Flto-lang.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Flto%2Flto-lang.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flto%2Flto-lang.c?ref=d8a2d370dc8e418c97cfacbef66a86ab444e94d2", "patch": "@@ -24,6 +24,8 @@ along with GCC; see the file COPYING3.  If not see\n #include \"flags.h\"\n #include \"tm.h\"\n #include \"tree.h\"\n+#include \"stringpool.h\"\n+#include \"stor-layout.h\"\n #include \"target.h\"\n #include \"langhooks.h\"\n #include \"langhooks-def.h\""}, {"sha": "42d78307dedcdc248f6f71fcbad1ee9af34818bb", "filename": "gcc/lto/lto-partition.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Flto%2Flto-partition.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Flto%2Flto-partition.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flto%2Flto-partition.c?ref=d8a2d370dc8e418c97cfacbef66a86ab444e94d2", "patch": "@@ -22,6 +22,7 @@ along with GCC; see the file COPYING3.  If not see\n #include \"coretypes.h\"\n #include \"toplev.h\"\n #include \"tree.h\"\n+#include \"gcc-symtab.h\"\n #include \"gimple.h\"\n #include \"tm.h\"\n #include \"cgraph.h\""}, {"sha": "0211437d5f9a3021a09ccf1781450572bfa7322f", "filename": "gcc/lto/lto.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Flto%2Flto.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Flto%2Flto.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flto%2Flto.c?ref=d8a2d370dc8e418c97cfacbef66a86ab444e94d2", "patch": "@@ -24,6 +24,7 @@ along with GCC; see the file COPYING3.  If not see\n #include \"opts.h\"\n #include \"toplev.h\"\n #include \"tree.h\"\n+#include \"stor-layout.h\"\n #include \"diagnostic-core.h\"\n #include \"tm.h\"\n #include \"cgraph.h\""}, {"sha": "000ba9e71b179a9c17bf3aa65ba34b1497ca127a", "filename": "gcc/objc/ChangeLog", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Fobjc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Fobjc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fobjc%2FChangeLog?ref=d8a2d370dc8e418c97cfacbef66a86ab444e94d2", "patch": "@@ -12,6 +12,19 @@\n \n \t* objc-act.c: Include only gimplify.h and gimple.h as needed.\n \n+2013-11-14  Diego Novillo  <dnovillo@google.com>\n+\n+\t* objc-act.c: Include stringpool.h.\n+\tInclude stor-layout.h.\n+\tInclude attribs.h.\n+\t* objc-encoding.c: Include stringpool.h.\n+\tInclude stor-layout.h.\n+\t* objc-gnu-runtime-abi-01.c: Include stringpool.h.\n+\t* objc-next-runtime-abi-01.c:\n+\tInclude stringpool.h.\n+\t* objc-next-runtime-abi-02.c: Include stringpool.h.\n+\t* objc-runtime-shared-support.c: Include stringpool.h.\n+\n 2013-11-12  Andrew MacLeod  <amacleod@redhat.com>\n \n \t* objc-act.c: Include gimplify.h."}, {"sha": "d7e8afb6acfbeada31693843ebba5eb42a4cba0e", "filename": "gcc/objc/objc-act.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Fobjc%2Fobjc-act.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Fobjc%2Fobjc-act.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fobjc%2Fobjc-act.c?ref=d8a2d370dc8e418c97cfacbef66a86ab444e94d2", "patch": "@@ -23,6 +23,9 @@ along with GCC; see the file COPYING3.  If not see\n #include \"coretypes.h\"\n #include \"tm.h\"\n #include \"tree.h\"\n+#include \"stringpool.h\"\n+#include \"stor-layout.h\"\n+#include \"attribs.h\"\n \n #ifdef OBJCPLUS\n #include \"cp/cp-tree.h\""}, {"sha": "61d722a77b0943cbf8839b60ab7163b6d54fcc56", "filename": "gcc/objc/objc-encoding.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Fobjc%2Fobjc-encoding.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Fobjc%2Fobjc-encoding.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fobjc%2Fobjc-encoding.c?ref=d8a2d370dc8e418c97cfacbef66a86ab444e94d2", "patch": "@@ -21,6 +21,8 @@ along with GCC; see the file COPYING3.  If not see\n #include \"system.h\"\n #include \"coretypes.h\"\n #include \"tree.h\"\n+#include \"stringpool.h\"\n+#include \"stor-layout.h\"\n \n #ifdef OBJCPLUS\n #include \"cp/cp-tree.h\""}, {"sha": "ef2e033b6ddba5c83bd554785267f57c9f194848", "filename": "gcc/objc/objc-gnu-runtime-abi-01.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Fobjc%2Fobjc-gnu-runtime-abi-01.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Fobjc%2Fobjc-gnu-runtime-abi-01.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fobjc%2Fobjc-gnu-runtime-abi-01.c?ref=d8a2d370dc8e418c97cfacbef66a86ab444e94d2", "patch": "@@ -22,6 +22,7 @@ along with GCC; see the file COPYING3.  If not see\n #include \"system.h\"\n #include \"coretypes.h\"\n #include \"tree.h\"\n+#include \"stringpool.h\"\n \n #ifdef OBJCPLUS\n #include \"cp/cp-tree.h\""}, {"sha": "9c7bf4529b1bcab8b68c4eb8aeeb54212c29a228", "filename": "gcc/objc/objc-next-runtime-abi-01.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Fobjc%2Fobjc-next-runtime-abi-01.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Fobjc%2Fobjc-next-runtime-abi-01.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fobjc%2Fobjc-next-runtime-abi-01.c?ref=d8a2d370dc8e418c97cfacbef66a86ab444e94d2", "patch": "@@ -27,6 +27,7 @@ along with GCC; see the file COPYING3.  If not see\n #include \"system.h\"\n #include \"coretypes.h\"\n #include \"tree.h\"\n+#include \"stringpool.h\"\n \n #ifdef OBJCPLUS\n #include \"cp/cp-tree.h\""}, {"sha": "c7215a86682b1a992e3b914f8bcc9f07f4ecdc76", "filename": "gcc/objc/objc-next-runtime-abi-02.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Fobjc%2Fobjc-next-runtime-abi-02.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Fobjc%2Fobjc-next-runtime-abi-02.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fobjc%2Fobjc-next-runtime-abi-02.c?ref=d8a2d370dc8e418c97cfacbef66a86ab444e94d2", "patch": "@@ -30,6 +30,7 @@ along with GCC; see the file COPYING3.  If not see\n #include \"coretypes.h\"\n #include \"tm.h\"\n #include \"tree.h\"\n+#include \"stringpool.h\"\n \n #ifdef OBJCPLUS\n #include \"cp/cp-tree.h\""}, {"sha": "9278b39e11be466084b974c784cf89e4fc99cfeb", "filename": "gcc/objc/objc-runtime-shared-support.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Fobjc%2Fobjc-runtime-shared-support.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Fobjc%2Fobjc-runtime-shared-support.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fobjc%2Fobjc-runtime-shared-support.c?ref=d8a2d370dc8e418c97cfacbef66a86ab444e94d2", "patch": "@@ -23,6 +23,7 @@ along with GCC; see the file COPYING3.  If not see\n #include \"coretypes.h\"\n #include \"tm.h\"\n #include \"tree.h\"\n+#include \"stringpool.h\"\n \n #ifdef OBJCPLUS\n #include \"cp/cp-tree.h\""}, {"sha": "783b422a6438efc7ff0a249b17edc7ecdd557d53", "filename": "gcc/omp-low.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Fomp-low.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Fomp-low.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fomp-low.c?ref=d8a2d370dc8e418c97cfacbef66a86ab444e94d2", "patch": "@@ -26,6 +26,8 @@ along with GCC; see the file COPYING3.  If not see\n #include \"coretypes.h\"\n #include \"tm.h\"\n #include \"tree.h\"\n+#include \"stringpool.h\"\n+#include \"stor-layout.h\"\n #include \"rtl.h\"\n #include \"gimple.h\"\n #include \"gimplify.h\"\n@@ -43,6 +45,7 @@ along with GCC; see the file COPYING3.  If not see\n #include \"ssa-iterators.h\"\n #include \"tree-ssanames.h\"\n #include \"tree-into-ssa.h\"\n+#include \"expr.h\"\n #include \"tree-dfa.h\"\n #include \"tree-ssa.h\"\n #include \"flags.h\""}, {"sha": "dcef4809d8b3def856c6c9b0c9dddc4a05405e22", "filename": "gcc/optabs.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Foptabs.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Foptabs.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Foptabs.c?ref=d8a2d370dc8e418c97cfacbef66a86ab444e94d2", "patch": "@@ -29,6 +29,9 @@ along with GCC; see the file COPYING3.  If not see\n #include \"insn-config.h\"\n #include \"rtl.h\"\n #include \"tree.h\"\n+#include \"stor-layout.h\"\n+#include \"stringpool.h\"\n+#include \"varasm.h\"\n #include \"tm_p.h\"\n #include \"flags.h\"\n #include \"function.h\""}, {"sha": "6a5ec19a539af25f2baa6726d855527152dca97a", "filename": "gcc/optabs.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Foptabs.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Foptabs.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Foptabs.h?ref=d8a2d370dc8e418c97cfacbef66a86ab444e94d2", "patch": "@@ -551,5 +551,6 @@ extern void gen_satfract_conv_libfunc (convert_optab, const char *,\n extern void gen_satfractuns_conv_libfunc (convert_optab, const char *,\n \t\t\t\t\t  enum machine_mode,\n \t\t\t\t\t  enum machine_mode);\n+extern void init_tree_optimization_optabs (tree);\n \n #endif /* GCC_OPTABS_H */"}, {"sha": "fee1513b4042293927328c963d585c6815a50831", "filename": "gcc/passes.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Fpasses.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Fpasses.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fpasses.c?ref=d8a2d370dc8e418c97cfacbef66a86ab444e94d2", "patch": "@@ -30,6 +30,7 @@ along with GCC; see the file COPYING3.  If not see\n #include \"hash-table.h\"\n #include \"input.h\"\n #include \"tree.h\"\n+#include \"varasm.h\"\n #include \"rtl.h\"\n #include \"tm_p.h\"\n #include \"flags.h\"\n@@ -63,6 +64,7 @@ along with GCC; see the file COPYING3.  If not see\n #include \"gimple.h\"\n #include \"gimple-ssa.h\"\n #include \"tree-cfg.h\"\n+#include \"stringpool.h\"\n #include \"tree-ssanames.h\"\n #include \"tree-ssa-loop-manip.h\"\n #include \"tree-into-ssa.h\""}, {"sha": "4adc5e44c9e7dde71d1a3b85c091ff8743427092", "filename": "gcc/predict.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Fpredict.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Fpredict.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fpredict.c?ref=d8a2d370dc8e418c97cfacbef66a86ab444e94d2", "patch": "@@ -32,6 +32,7 @@ along with GCC; see the file COPYING3.  If not see\n #include \"coretypes.h\"\n #include \"tm.h\"\n #include \"tree.h\"\n+#include \"calls.h\"\n #include \"rtl.h\"\n #include \"tm_p.h\"\n #include \"hard-reg-set.h\""}, {"sha": "833bee92f711742dcfff5ecbe789ef53c9c4b191", "filename": "gcc/print-rtl.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Fprint-rtl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Fprint-rtl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fprint-rtl.c?ref=d8a2d370dc8e418c97cfacbef66a86ab444e94d2", "patch": "@@ -34,6 +34,7 @@ along with GCC; see the file COPYING3.  If not see\n    generator programs.  */\n #ifndef GENERATOR_FILE\n #include \"tree.h\"\n+#include \"print-tree.h\"\n #include \"flags.h\"\n #include \"hard-reg-set.h\"\n #include \"basic-block.h\""}, {"sha": "3cb28d656fb4e2e366bcd3a7db1ec37a3b17c90b", "filename": "gcc/print-rtl.h", "status": "added", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Fprint-rtl.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Fprint-rtl.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fprint-rtl.h?ref=d8a2d370dc8e418c97cfacbef66a86ab444e94d2", "patch": "@@ -0,0 +1,27 @@\n+/* Print RTL for GCC.\n+   Copyright (C) 1987-2013 Free Software Foundation, Inc.\n+\n+This file is part of GCC.\n+\n+GCC is free software; you can redistribute it and/or modify it under\n+the terms of the GNU General Public License as published by the Free\n+Software Foundation; either version 3, or (at your option) any later\n+version.\n+\n+GCC is distributed in the hope that it will be useful, but WITHOUT ANY\n+WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GCC; see the file COPYING3.  If not see\n+<http://www.gnu.org/licenses/>.  */\n+\n+#ifndef GCC_PRINT_RTL_H\n+#define GCC_PRINT_RTL_H\n+\n+#ifdef BUFSIZ\n+extern void print_rtl (FILE *, const_rtx);\n+#endif\n+\n+#endif  // GCC_PRINT_RTL_H"}, {"sha": "1f4bf222aa122072bded163fbe959689a949cd15", "filename": "gcc/print-tree.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Fprint-tree.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Fprint-tree.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fprint-tree.c?ref=d8a2d370dc8e418c97cfacbef66a86ab444e94d2", "patch": "@@ -23,6 +23,9 @@ along with GCC; see the file COPYING3.  If not see\n #include \"coretypes.h\"\n #include \"tm.h\"\n #include \"tree.h\"\n+#include \"varasm.h\"\n+#include \"print-rtl.h\"\n+#include \"stor-layout.h\"\n #include \"ggc.h\"\n #include \"langhooks.h\"\n #include \"tree-iterator.h\""}, {"sha": "7d1a5c82bdc3d6f92d69dd30081aad06136a0510", "filename": "gcc/print-tree.h", "status": "added", "additions": 46, "deletions": 0, "changes": 46, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Fprint-tree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Fprint-tree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fprint-tree.h?ref=d8a2d370dc8e418c97cfacbef66a86ab444e94d2", "patch": "@@ -0,0 +1,46 @@\n+/* Declarations for printing trees in human readable form\n+   Copyright (C) 2013 Free Software Foundation, Inc.\n+\n+This file is part of GCC.\n+\n+GCC is free software; you can redistribute it and/or modify it under\n+the terms of the GNU General Public License as published by the Free\n+Software Foundation; either version 3, or (at your option) any later\n+version.\n+\n+GCC is distributed in the hope that it will be useful, but WITHOUT ANY\n+WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GCC; see the file COPYING3.  If not see\n+<http://www.gnu.org/licenses/>.  */\n+\n+#ifndef GCC_PRINT_TREE_H\n+#define GCC_PRINT_TREE_H\n+\n+extern void debug_tree (tree);\n+extern void debug_raw (const tree_node &ref);\n+extern void debug_raw (const tree_node *ptr);\n+extern void debug (const tree_node &ref);\n+extern void debug (const tree_node *ptr);\n+extern void debug_verbose (const tree_node &ref);\n+extern void debug_verbose (const tree_node *ptr);\n+extern void debug_head (const tree_node &ref);\n+extern void debug_head (const tree_node *ptr);\n+extern void debug_body (const tree_node &ref);\n+extern void debug_body (const tree_node *ptr);\n+extern void debug_vec_tree (vec<tree, va_gc> *);\n+extern void debug (vec<tree, va_gc> &ref);\n+extern void debug (vec<tree, va_gc> *ptr);\n+extern void debug_raw (vec<tree, va_gc> &ref);\n+extern void debug_raw (vec<tree, va_gc> *ptr);\n+#ifdef BUFSIZ\n+extern void dump_addr (FILE*, const char *, const void *);\n+extern void print_node (FILE *, const char *, tree, int);\n+extern void print_node_brief (FILE *, const char *, const_tree, int);\n+extern void indent_to (FILE *, int);\n+#endif\n+\n+#endif  // GCC_PRINT_TREE_H"}, {"sha": "b5c11206d6ce2a205e05be1a8aa5ac78027b92fd", "filename": "gcc/realmpfr.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Frealmpfr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Frealmpfr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frealmpfr.c?ref=d8a2d370dc8e418c97cfacbef66a86ab444e94d2", "patch": "@@ -22,6 +22,7 @@\n #include \"coretypes.h\"\n #include \"realmpfr.h\"\n #include \"tree.h\"\t/* For TYPE_MODE in real_from_mpfr.  */\n+#include \"stor-layout.h\"\n \n /* Convert from REAL_VALUE_TYPE to MPFR.  The caller is responsible\n    for initializing and clearing the MPFR parameter.  */"}, {"sha": "756d3bd586f7ef57da373520ff4cdddfc72f290a", "filename": "gcc/reg-stack.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Freg-stack.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Freg-stack.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Freg-stack.c?ref=d8a2d370dc8e418c97cfacbef66a86ab444e94d2", "patch": "@@ -154,6 +154,7 @@\n #include \"coretypes.h\"\n #include \"tm.h\"\n #include \"tree.h\"\n+#include \"varasm.h\"\n #include \"rtl-error.h\"\n #include \"tm_p.h\"\n #include \"function.h\""}, {"sha": "8af0bc5af5be392b08d151a9a6f8023d9851c32e", "filename": "gcc/sdbout.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Fsdbout.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Fsdbout.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fsdbout.c?ref=d8a2d370dc8e418c97cfacbef66a86ab444e94d2", "patch": "@@ -45,6 +45,8 @@ AT&T C compiler.  From the example below I would conclude the following:\n #include \"tm.h\"\n #include \"debug.h\"\n #include \"tree.h\"\n+#include \"varasm.h\"\n+#include \"stor-layout.h\"\n #include \"ggc.h\"\n #include \"vec.h\"\n "}, {"sha": "2fe77392bd43c42d80ae299a147b468189c3e3a7", "filename": "gcc/sese.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Fsese.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Fsese.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fsese.c?ref=d8a2d370dc8e418c97cfacbef66a86ab444e94d2", "patch": "@@ -33,6 +33,7 @@ along with GCC; see the file COPYING3.  If not see\n #include \"tree-cfg.h\"\n #include \"tree-phinodes.h\"\n #include \"ssa-iterators.h\"\n+#include \"stringpool.h\"\n #include \"tree-ssanames.h\"\n #include \"tree-ssa-loop.h\"\n #include \"tree-into-ssa.h\""}, {"sha": "b91ae1ade3f9b633a68b3286c62c1f5b14a3eb8e", "filename": "gcc/simplify-rtx.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Fsimplify-rtx.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Fsimplify-rtx.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fsimplify-rtx.c?ref=d8a2d370dc8e418c97cfacbef66a86ab444e94d2", "patch": "@@ -24,6 +24,7 @@ along with GCC; see the file COPYING3.  If not see\n #include \"tm.h\"\n #include \"rtl.h\"\n #include \"tree.h\"\n+#include \"varasm.h\"\n #include \"tm_p.h\"\n #include \"regs.h\"\n #include \"hard-reg-set.h\""}, {"sha": "37b2de34482187b7a55e3ca62c2d39e8a7b851c6", "filename": "gcc/stmt.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Fstmt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Fstmt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fstmt.c?ref=d8a2d370dc8e418c97cfacbef66a86ab444e94d2", "patch": "@@ -30,6 +30,8 @@ along with GCC; see the file COPYING3.  If not see\n #include \"rtl.h\"\n #include \"hard-reg-set.h\"\n #include \"tree.h\"\n+#include \"varasm.h\"\n+#include \"stor-layout.h\"\n #include \"tm_p.h\"\n #include \"flags.h\"\n #include \"except.h\""}, {"sha": "514be23a239670ef8165c382ca6801e314d0ff5e", "filename": "gcc/stmt.h", "status": "added", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Fstmt.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Fstmt.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fstmt.h?ref=d8a2d370dc8e418c97cfacbef66a86ab444e94d2", "patch": "@@ -0,0 +1,34 @@\n+/* Declarations and data structures for stmt.c.\n+   Copyright (C) 2013 Free Software Foundation, Inc.\n+\n+This file is part of GCC.\n+\n+GCC is free software; you can redistribute it and/or modify it under\n+the terms of the GNU General Public License as published by the Free\n+Software Foundation; either version 3, or (at your option) any later\n+version.\n+\n+GCC is distributed in the hope that it will be useful, but WITHOUT ANY\n+WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GCC; see the file COPYING3.  If not see\n+<http://www.gnu.org/licenses/>.  */\n+\n+#ifndef GCC_STMT_H\n+#define GCC_STMT_H\n+\n+extern void expand_label (tree);\n+extern bool parse_output_constraint (const char **, int, int, int,\n+\t\t\t\t     bool *, bool *, bool *);\n+extern bool parse_input_constraint (const char **, int, int, int, int,\n+\t\t\t\t    const char * const *, bool *, bool *);\n+extern tree resolve_asm_operand_names (tree, tree, tree, tree);\n+#ifdef HARD_CONST\n+/* Silly ifdef to avoid having all includers depend on hard-reg-set.h.  */\n+extern tree tree_overlaps_hard_reg_set (tree, HARD_REG_SET *);\n+#endif\n+\n+#endif  // GCC_STMT_H"}, {"sha": "0dece714bf8dd19dea0755d159bde9fee8a56b5e", "filename": "gcc/stor-layout.c", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Fstor-layout.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Fstor-layout.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fstor-layout.c?ref=d8a2d370dc8e418c97cfacbef66a86ab444e94d2", "patch": "@@ -23,6 +23,10 @@ along with GCC; see the file COPYING3.  If not see\n #include \"coretypes.h\"\n #include \"tm.h\"\n #include \"tree.h\"\n+#include \"stor-layout.h\"\n+#include \"stringpool.h\"\n+#include \"varasm.h\"\n+#include \"print-tree.h\"\n #include \"rtl.h\"\n #include \"tm_p.h\"\n #include \"flags.h\""}, {"sha": "706bed4992db15e35bada37fbecb7b50d4ef4e4b", "filename": "gcc/stor-layout.h", "status": "added", "additions": 115, "deletions": 0, "changes": 115, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Fstor-layout.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Fstor-layout.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fstor-layout.h?ref=d8a2d370dc8e418c97cfacbef66a86ab444e94d2", "patch": "@@ -0,0 +1,115 @@\n+/* Definitions and declarations for stor-layout.c.\n+   Copyright (C) 2013 Free Software Foundation, Inc.\n+\n+This file is part of GCC.\n+\n+GCC is free software; you can redistribute it and/or modify it under\n+the terms of the GNU General Public License as published by the Free\n+Software Foundation; either version 3, or (at your option) any later\n+version.\n+\n+GCC is distributed in the hope that it will be useful, but WITHOUT ANY\n+WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GCC; see the file COPYING3.  If not see\n+<http://www.gnu.org/licenses/>.  */\n+\n+#ifndef GCC_STOR_LAYOUT_H\n+#define GCC_STOR_LAYOUT_H\n+\n+extern void set_min_and_max_values_for_integral_type (tree, int, bool);\n+extern void fixup_signed_type (tree);\n+extern void internal_reference_types (void);\n+extern unsigned int update_alignment_for_field (record_layout_info, tree,\n+                                                unsigned int);\n+extern record_layout_info start_record_layout (tree);\n+extern tree bit_from_pos (tree, tree);\n+extern tree byte_from_pos (tree, tree);\n+extern void pos_from_bit (tree *, tree *, unsigned int, tree);\n+extern void normalize_offset (tree *, tree *, unsigned int);\n+extern tree rli_size_unit_so_far (record_layout_info);\n+extern tree rli_size_so_far (record_layout_info);\n+extern void normalize_rli (record_layout_info);\n+extern void place_field (record_layout_info, tree);\n+extern void compute_record_mode (tree);\n+extern void finish_record_layout (record_layout_info, int);\n+extern unsigned int element_precision (const_tree);\n+extern void finalize_size_functions (void);\n+extern void fixup_unsigned_type (tree);\n+extern void initialize_sizetypes (void);\n+\n+/* Finish up a builtin RECORD_TYPE. Give it a name and provide its\n+   fields. Optionally specify an alignment, and then lay it out.  */\n+extern void finish_builtin_struct (tree, const char *, tree, tree);\n+\n+/* Given a VAR_DECL, PARM_DECL, RESULT_DECL or FIELD_DECL node,\n+   calculates the DECL_SIZE, DECL_SIZE_UNIT, DECL_ALIGN and DECL_MODE\n+   fields.  Call this only once for any given decl node.\n+\n+   Second argument is the boundary that this field can be assumed to\n+   be starting at (in bits).  Zero means it can be assumed aligned\n+   on any boundary that may be needed.  */\n+extern void layout_decl (tree, unsigned);\n+\n+/* Given a ..._TYPE node, calculate the TYPE_SIZE, TYPE_SIZE_UNIT,\n+   TYPE_ALIGN and TYPE_MODE fields.  If called more than once on one\n+   node, does nothing except for the first time.  */\n+extern void layout_type (tree);\n+\n+/* Construct various nodes representing fract or accum data types.  */\n+extern tree make_fract_type (int, int, int);\n+extern tree make_accum_type (int, int, int);\n+\n+#define make_signed_fract_type(P) make_fract_type (P, 0, 0)\n+#define make_unsigned_fract_type(P) make_fract_type (P, 1, 0)\n+#define make_sat_signed_fract_type(P) make_fract_type (P, 0, 1)\n+#define make_sat_unsigned_fract_type(P) make_fract_type (P, 1, 1)\n+#define make_signed_accum_type(P) make_accum_type (P, 0, 0)\n+#define make_unsigned_accum_type(P) make_accum_type (P, 1, 0)\n+#define make_sat_signed_accum_type(P) make_accum_type (P, 0, 1)\n+#define make_sat_unsigned_accum_type(P) make_accum_type (P, 1, 1)\n+\n+#define make_or_reuse_signed_fract_type(P) \\\n+\t\tmake_or_reuse_fract_type (P, 0, 0)\n+#define make_or_reuse_unsigned_fract_type(P) \\\n+\t\tmake_or_reuse_fract_type (P, 1, 0)\n+#define make_or_reuse_sat_signed_fract_type(P) \\\n+\t\tmake_or_reuse_fract_type (P, 0, 1)\n+#define make_or_reuse_sat_unsigned_fract_type(P) \\\n+\t\tmake_or_reuse_fract_type (P, 1, 1)\n+#define make_or_reuse_signed_accum_type(P) \\\n+\t\tmake_or_reuse_accum_type (P, 0, 0)\n+#define make_or_reuse_unsigned_accum_type(P) \\\n+\t\tmake_or_reuse_accum_type (P, 1, 0)\n+#define make_or_reuse_sat_signed_accum_type(P) \\\n+\t\tmake_or_reuse_accum_type (P, 0, 1)\n+#define make_or_reuse_sat_unsigned_accum_type(P) \\\n+\t\tmake_or_reuse_accum_type (P, 1, 1)\n+\n+extern tree make_signed_type (int);\n+extern tree make_unsigned_type (int);\n+\n+/* Return the mode for data of a given size SIZE and mode class CLASS.\n+   If LIMIT is nonzero, then don't use modes bigger than MAX_FIXED_MODE_SIZE.\n+   The value is BLKmode if no other mode is found.  This is like\n+   mode_for_size, but is passed a tree.  */\n+extern enum machine_mode mode_for_size_tree (const_tree, enum mode_class, int);\n+\n+/* Given a VAR_DECL, PARM_DECL or RESULT_DECL, clears the results of\n+   a previous call to layout_decl and calls it again.  */\n+extern void relayout_decl (tree);\n+\n+/* variable_size (EXP) is like save_expr (EXP) except that it\n+   is for the special case of something that is part of a\n+   variable size for a data type.  It makes special arrangements\n+   to compute the value at the right time when the data type\n+   belongs to a function parameter.  */\n+extern tree variable_size (tree);\n+\n+/* Vector types need to check target flags to determine type.  */\n+extern enum machine_mode vector_type_mode (const_tree);\n+\n+#endif  // GCC_STOR_LAYOUT_H"}, {"sha": "55592aa3957e1310c0fb0989698dbb5e4942019b", "filename": "gcc/stringpool.h", "status": "added", "additions": 43, "deletions": 0, "changes": 43, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Fstringpool.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Fstringpool.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fstringpool.h?ref=d8a2d370dc8e418c97cfacbef66a86ab444e94d2", "patch": "@@ -0,0 +1,43 @@\n+/* Declarations and definitons for stringpool.c.\n+   Copyright (C) 2013 Free Software Foundation, Inc.\n+\n+This file is part of GCC.\n+\n+GCC is free software; you can redistribute it and/or modify it under\n+the terms of the GNU General Public License as published by the Free\n+Software Foundation; either version 3, or (at your option) any later\n+version.\n+\n+GCC is distributed in the hope that it will be useful, but WITHOUT ANY\n+WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GCC; see the file COPYING3.  If not see\n+<http://www.gnu.org/licenses/>.  */\n+\n+#ifndef GCC_STRINGPOOL_H\n+#define GCC_STRINGPOOL_H\n+\n+/* Return the (unique) IDENTIFIER_NODE node for a given name.\n+   The name is supplied as a char *.  */\n+extern tree get_identifier (const char *);\n+\n+/* If an identifier with the name TEXT (a null-terminated string) has\n+   previously been referred to, return that node; otherwise return\n+   NULL_TREE.  */\n+extern tree maybe_get_identifier (const char *);\n+\n+/* Identical to get_identifier, except that the length is assumed\n+   known.  */\n+extern tree get_identifier_with_length (const char *, size_t);\n+\n+#if GCC_VERSION >= 3000\n+#define get_identifier(str) \\\n+  (__builtin_constant_p (str)\t\t\t\t\\\n+    ? get_identifier_with_length ((str), strlen (str))  \\\n+    : get_identifier (str))\n+#endif\n+\n+#endif  // GCC_STRINGPOOL_H"}, {"sha": "851264d954a69f73a73f196a1202a0100cc732ca", "filename": "gcc/symtab.c", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Fsymtab.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Fsymtab.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fsymtab.c?ref=d8a2d370dc8e418c97cfacbef66a86ab444e94d2", "patch": "@@ -22,7 +22,12 @@ along with GCC; see the file COPYING3.  If not see\n #include \"system.h\"\n #include \"coretypes.h\"\n #include \"tm.h\"\n+#include \"rtl.h\"\n #include \"tree.h\"\n+#include \"print-tree.h\"\n+#include \"varasm.h\"\n+#include \"function.h\"\n+#include \"emit-rtl.h\"\n #include \"gimple.h\"\n #include \"tree-inline.h\"\n #include \"langhooks.h\"\n@@ -32,7 +37,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"diagnostic.h\"\n #include \"timevar.h\"\n #include \"lto-streamer.h\"\n-#include \"rtl.h\"\n #include \"output.h\"\n \n const char * const ld_plugin_symbol_resolution_names[]="}, {"sha": "533d9f3783e1e7a0710c7179d7b1b0c99758c6ff", "filename": "gcc/targhooks.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Ftarghooks.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Ftarghooks.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftarghooks.c?ref=d8a2d370dc8e418c97cfacbef66a86ab444e94d2", "patch": "@@ -53,6 +53,8 @@ along with GCC; see the file COPYING3.  If not see\n #include \"machmode.h\"\n #include \"rtl.h\"\n #include \"tree.h\"\n+#include \"stor-layout.h\"\n+#include \"varasm.h\"\n #include \"expr.h\"\n #include \"output.h\"\n #include \"diagnostic-core.h\"\n@@ -70,6 +72,7 @@ along with GCC; see the file COPYING3.  If not see\n #include \"opts.h\"\n #include \"gimple.h\"\n #include \"gimplify.h\"\n+#include \"stringpool.h\"\n #include \"tree-ssanames.h\"\n #include \"tree-ssa-alias.h\"\n #include \"insn-codes.h\""}, {"sha": "7fd31dfa3d954e5361ec48b34035b9623f8f167e", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=d8a2d370dc8e418c97cfacbef66a86ab444e94d2", "patch": "@@ -175,6 +175,11 @@\n \t* g++.dg/cpp0x/nsdmi-template3.C: New.\n \t* g++.dg/cpp0x/nsdmi-template4.C: Likewise.\n \n+2013-11-14  Diego Novillo  <dnovillo@google.com>\n+\n+\t* gcc.dg/plugin/selfassign.c: Include stringpool.h.\n+\t* gcc.dg/plugin/start_unit_plugin.c: Likewise.\n+\n 2013-11-14  Ulrich Weigand  <Ulrich.Weigand@de.ibm.com>\n \n \t* gcc.target/powerpc/ppc64-abi-1.c (stack_frame_t): Remove"}, {"sha": "cdab74a19ae2bc2d4a2af303d502c2b73a7487d7", "filename": "gcc/testsuite/gcc.dg/plugin/selfassign.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Ftestsuite%2Fgcc.dg%2Fplugin%2Fselfassign.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Ftestsuite%2Fgcc.dg%2Fplugin%2Fselfassign.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fplugin%2Fselfassign.c?ref=d8a2d370dc8e418c97cfacbef66a86ab444e94d2", "patch": "@@ -8,6 +8,7 @@\n #include \"coretypes.h\"\n #include \"tm.h\"\n #include \"tree.h\"\n+#include \"stringpool.h\"\n #include \"toplev.h\"\n #include \"basic-block.h\"\n #include \"gimple.h\""}, {"sha": "39f44626a55ca74b3b9277cf6eac3709e9865a55", "filename": "gcc/testsuite/gcc.dg/plugin/start_unit_plugin.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Ftestsuite%2Fgcc.dg%2Fplugin%2Fstart_unit_plugin.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Ftestsuite%2Fgcc.dg%2Fplugin%2Fstart_unit_plugin.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fplugin%2Fstart_unit_plugin.c?ref=d8a2d370dc8e418c97cfacbef66a86ab444e94d2", "patch": "@@ -11,6 +11,7 @@\n #include \"coretypes.h\"\n #include \"tm.h\"\n #include \"tree.h\"\n+#include \"stringpool.h\"\n #include \"toplev.h\"\n #include \"basic-block.h\"\n #include \"gimple.h\""}, {"sha": "5fedcea9002bae869dbeab2aeca9d7f4b6344537", "filename": "gcc/toplev.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Ftoplev.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Ftoplev.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftoplev.c?ref=d8a2d370dc8e418c97cfacbef66a86ab444e94d2", "patch": "@@ -29,6 +29,8 @@ along with GCC; see the file COPYING3.  If not see\n #include \"line-map.h\"\n #include \"input.h\"\n #include \"tree.h\"\n+#include \"varasm.h\"\n+#include \"tree-inline.h\"\n #include \"realmpfr.h\"\t/* For GMP/MPFR/MPC versions, in print_version.  */\n #include \"version.h\"\n #include \"rtl.h\""}, {"sha": "24860054e6e7086c4a0794e59fa18532b3d98640", "filename": "gcc/trans-mem.c", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Ftrans-mem.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Ftrans-mem.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftrans-mem.c?ref=d8a2d370dc8e418c97cfacbef66a86ab444e94d2", "patch": "@@ -23,13 +23,18 @@\n #include \"hash-table.h\"\n #include \"tree.h\"\n #include \"gimple.h\"\n+#include \"calls.h\"\n+#include \"function.h\"\n+#include \"rtl.h\"\n+#include \"emit-rtl.h\"\n #include \"gimplify.h\"\n #include \"gimple-iterator.h\"\n #include \"gimplify-me.h\"\n #include \"gimple-walk.h\"\n #include \"gimple-ssa.h\"\n #include \"cgraph.h\"\n #include \"tree-cfg.h\"\n+#include \"stringpool.h\"\n #include \"tree-ssanames.h\"\n #include \"tree-into-ssa.h\"\n #include \"tree-pass.h\""}, {"sha": "d68171fc4ea3c3bbf7425e9952bd508aa6d932c2", "filename": "gcc/trans-mem.h", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Ftrans-mem.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Ftrans-mem.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftrans-mem.h?ref=d8a2d370dc8e418c97cfacbef66a86ab444e94d2", "patch": "@@ -17,6 +17,8 @@\n    along with GCC; see the file COPYING3.  If not see\n    <http://www.gnu.org/licenses/>.  */\n \n+#ifndef GCC_TRANS_MEM_H\n+#define GCC_TRANS_MEM_H\n \n /* These defines must match the enumerations in libitm.h.  */\n #define PR_INSTRUMENTEDCODE\t0x0001\n@@ -37,3 +39,12 @@\n \n extern void compute_transaction_bits (void);\n extern bool is_tm_ending (gimple);\n+extern tree build_tm_abort_call (location_t, bool);\n+extern bool is_tm_safe (const_tree);\n+extern bool is_tm_pure (const_tree);\n+extern bool is_tm_may_cancel_outer (tree);\n+extern bool is_tm_ending_fndecl (tree);\n+extern void record_tm_replacement (tree, tree);\n+extern void tm_malloc_replacement (tree);\n+\n+#endif  // GCC_TRANS_MEM_H"}, {"sha": "9e3e1bf0657550c3124ea4d3f8e2568d5c1ed52a", "filename": "gcc/tree-affine.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Ftree-affine.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Ftree-affine.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-affine.c?ref=d8a2d370dc8e418c97cfacbef66a86ab444e94d2", "patch": "@@ -21,6 +21,7 @@ along with GCC; see the file COPYING3.  If not see\n #include \"system.h\"\n #include \"coretypes.h\"\n #include \"tree.h\"\n+#include \"expr.h\"\n #include \"tree-pretty-print.h\"\n #include \"pointer-set.h\"\n #include \"tree-affine.h\""}, {"sha": "c3483a7b3a7c71a43a8ab21686f20c521801dbb3", "filename": "gcc/tree-browser.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Ftree-browser.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Ftree-browser.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-browser.c?ref=d8a2d370dc8e418c97cfacbef66a86ab444e94d2", "patch": "@@ -24,6 +24,7 @@ along with GCC; see the file COPYING3.  If not see\n #include \"hash-table.h\"\n #include \"tree.h\"\n #include \"tree-pretty-print.h\"\n+#include \"print-tree.h\"\n \n #define TB_OUT_FILE stdout\n #define TB_IN_FILE stdin"}, {"sha": "6f6b1171b92380dd4e9204ee543f23a964706e39", "filename": "gcc/tree-call-cdce.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Ftree-call-cdce.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Ftree-call-cdce.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-call-cdce.c?ref=d8a2d370dc8e418c97cfacbef66a86ab444e94d2", "patch": "@@ -24,11 +24,13 @@ along with GCC; see the file COPYING3.  If not see\n #include \"tm.h\"\n #include \"basic-block.h\"\n #include \"tree.h\"\n+#include \"stor-layout.h\"\n #include \"gimple-pretty-print.h\"\n #include \"gimple.h\"\n #include \"gimple-iterator.h\"\n #include \"gimple-ssa.h\"\n #include \"tree-cfg.h\"\n+#include \"stringpool.h\"\n #include \"tree-ssanames.h\"\n #include \"tree-into-ssa.h\"\n #include \"tree-pass.h\""}, {"sha": "a38dec3920f1fc5919047e20c100cef9c172b251", "filename": "gcc/tree-cfg.c", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Ftree-cfg.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Ftree-cfg.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-cfg.c?ref=d8a2d370dc8e418c97cfacbef66a86ab444e94d2", "patch": "@@ -24,6 +24,9 @@ along with GCC; see the file COPYING3.  If not see\n #include \"hash-table.h\"\n #include \"tm.h\"\n #include \"tree.h\"\n+#include \"trans-mem.h\"\n+#include \"stor-layout.h\"\n+#include \"print-tree.h\"\n #include \"tm_p.h\"\n #include \"basic-block.h\"\n #include \"flags.h\"\n@@ -39,10 +42,12 @@ along with GCC; see the file COPYING3.  If not see\n #include \"tree-cfg.h\"\n #include \"tree-phinodes.h\"\n #include \"ssa-iterators.h\"\n+#include \"stringpool.h\"\n #include \"tree-ssanames.h\"\n #include \"tree-ssa-loop-manip.h\"\n #include \"tree-ssa-loop-niter.h\"\n #include \"tree-into-ssa.h\"\n+#include \"expr.h\"\n #include \"tree-dfa.h\"\n #include \"tree-ssa.h\"\n #include \"tree-dump.h\""}, {"sha": "ec99ed0a1117c950805319df1198c5cf7231e931", "filename": "gcc/tree-cfgcleanup.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Ftree-cfgcleanup.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Ftree-cfgcleanup.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-cfgcleanup.c?ref=d8a2d370dc8e418c97cfacbef66a86ab444e94d2", "patch": "@@ -36,8 +36,10 @@ along with GCC; see the file COPYING3.  If not see\n #include \"tree-cfg.h\"\n #include \"tree-phinodes.h\"\n #include \"ssa-iterators.h\"\n+#include \"stringpool.h\"\n #include \"tree-ssanames.h\"\n #include \"tree-ssa-loop-manip.h\"\n+#include \"expr.h\"\n #include \"tree-dfa.h\"\n #include \"tree-ssa.h\"\n #include \"tree-pass.h\""}, {"sha": "05f30e5afa28ea98a6b3d9d32a3c93fbcc16c67a", "filename": "gcc/tree-complex.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Ftree-complex.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Ftree-complex.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-complex.c?ref=d8a2d370dc8e418c97cfacbef66a86ab444e94d2", "patch": "@@ -22,6 +22,7 @@ along with GCC; see the file COPYING3.  If not see\n #include \"coretypes.h\"\n #include \"tm.h\"\n #include \"tree.h\"\n+#include \"stor-layout.h\"\n #include \"flags.h\"\n #include \"gimple.h\"\n #include \"gimplify.h\"\n@@ -31,7 +32,9 @@ along with GCC; see the file COPYING3.  If not see\n #include \"tree-cfg.h\"\n #include \"tree-phinodes.h\"\n #include \"ssa-iterators.h\"\n+#include \"stringpool.h\"\n #include \"tree-ssanames.h\"\n+#include \"expr.h\"\n #include \"tree-dfa.h\"\n #include \"tree-ssa.h\"\n #include \"tree-iterator.h\""}, {"sha": "190b91ca7521ae2cd6abacb08f1d499c2714d858", "filename": "gcc/tree-data-ref.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Ftree-data-ref.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Ftree-data-ref.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-data-ref.c?ref=d8a2d370dc8e418c97cfacbef66a86ab444e94d2", "patch": "@@ -77,6 +77,7 @@ along with GCC; see the file COPYING3.  If not see\n #include \"system.h\"\n #include \"coretypes.h\"\n #include \"tree.h\"\n+#include \"expr.h\"\n #include \"gimple-pretty-print.h\"\n #include \"gimple.h\"\n #include \"gimple-iterator.h\""}, {"sha": "0d1eb999ccbb24812e5df9a54cb8f1f38b7b275b", "filename": "gcc/tree-dfa.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Ftree-dfa.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Ftree-dfa.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-dfa.c?ref=d8a2d370dc8e418c97cfacbef66a86ab444e94d2", "patch": "@@ -25,6 +25,7 @@ along with GCC; see the file COPYING3.  If not see\n #include \"hashtab.h\"\n #include \"pointer-set.h\"\n #include \"tree.h\"\n+#include \"stor-layout.h\"\n #include \"tm_p.h\"\n #include \"basic-block.h\"\n #include \"ggc.h\"\n@@ -38,7 +39,9 @@ along with GCC; see the file COPYING3.  If not see\n #include \"gimple-ssa.h\"\n #include \"tree-phinodes.h\"\n #include \"ssa-iterators.h\"\n+#include \"stringpool.h\"\n #include \"tree-ssanames.h\"\n+#include \"expr.h\"\n #include \"tree-dfa.h\"\n #include \"tree-inline.h\"\n #include \"tree-pass.h\""}, {"sha": "7778678758583eadf2a647b6c04ce0e8e6b7f278", "filename": "gcc/tree-eh.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Ftree-eh.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Ftree-eh.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-eh.c?ref=d8a2d370dc8e418c97cfacbef66a86ab444e94d2", "patch": "@@ -23,6 +23,8 @@ along with GCC; see the file COPYING3.  If not see\n #include \"hash-table.h\"\n #include \"tm.h\"\n #include \"tree.h\"\n+#include \"expr.h\"\n+#include \"calls.h\"\n #include \"flags.h\"\n #include \"function.h\"\n #include \"except.h\"\n@@ -34,6 +36,7 @@ along with GCC; see the file COPYING3.  If not see\n #include \"tree-cfg.h\"\n #include \"tree-phinodes.h\"\n #include \"ssa-iterators.h\"\n+#include \"stringpool.h\"\n #include \"tree-ssanames.h\"\n #include \"tree-into-ssa.h\"\n #include \"tree-ssa.h\""}, {"sha": "7f0c0a1981a7016b3bedb6f28241f6db7a058752", "filename": "gcc/tree-emutls.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Ftree-emutls.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Ftree-emutls.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-emutls.c?ref=d8a2d370dc8e418c97cfacbef66a86ab444e94d2", "patch": "@@ -21,6 +21,8 @@ along with GCC; see the file COPYING3.  If not see\n #include \"system.h\"\n #include \"coretypes.h\"\n #include \"tree.h\"\n+#include \"stor-layout.h\"\n+#include \"varasm.h\"\n #include \"gimple.h\"\n #include \"gimple-iterator.h\"\n #include \"gimple-walk.h\"\n@@ -29,6 +31,7 @@ along with GCC; see the file COPYING3.  If not see\n #include \"cgraph.h\"\n #include \"tree-phinodes.h\"\n #include \"ssa-iterators.h\"\n+#include \"stringpool.h\"\n #include \"tree-ssanames.h\"\n #include \"langhooks.h\"\n #include \"target.h\""}, {"sha": "2dd073389f89b728b30b26ff1d5868eb352efebf", "filename": "gcc/tree-if-conv.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Ftree-if-conv.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Ftree-if-conv.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-if-conv.c?ref=d8a2d370dc8e418c97cfacbef66a86ab444e94d2", "patch": "@@ -85,6 +85,7 @@ along with GCC; see the file COPYING3.  If not see\n #include \"coretypes.h\"\n #include \"tm.h\"\n #include \"tree.h\"\n+#include \"stor-layout.h\"\n #include \"flags.h\"\n #include \"basic-block.h\"\n #include \"gimple-pretty-print.h\"\n@@ -96,6 +97,7 @@ along with GCC; see the file COPYING3.  If not see\n #include \"tree-cfg.h\"\n #include \"tree-phinodes.h\"\n #include \"ssa-iterators.h\"\n+#include \"stringpool.h\"\n #include \"tree-ssanames.h\"\n #include \"tree-into-ssa.h\"\n #include \"tree-ssa.h\""}, {"sha": "0a39ee6f4e1d6523415183c31675bcd91e020149", "filename": "gcc/tree-inline.c", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Ftree-inline.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Ftree-inline.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-inline.c?ref=d8a2d370dc8e418c97cfacbef66a86ab444e94d2", "patch": "@@ -24,6 +24,8 @@ along with GCC; see the file COPYING3.  If not see\n #include \"tm.h\"\n #include \"diagnostic-core.h\"\n #include \"tree.h\"\n+#include \"stor-layout.h\"\n+#include \"calls.h\"\n #include \"tree-inline.h\"\n #include \"flags.h\"\n #include \"params.h\"\n@@ -43,8 +45,10 @@ along with GCC; see the file COPYING3.  If not see\n #include \"tree-cfg.h\"\n #include \"tree-phinodes.h\"\n #include \"ssa-iterators.h\"\n+#include \"stringpool.h\"\n #include \"tree-ssanames.h\"\n #include \"tree-into-ssa.h\"\n+#include \"expr.h\"\n #include \"tree-dfa.h\"\n #include \"tree-ssa.h\"\n #include \"function.h\""}, {"sha": "d871fc4e4b69e21f63da136eec3dc3e8a4bbb0a4", "filename": "gcc/tree-inline.h", "status": "modified", "additions": 6, "deletions": 3, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Ftree-inline.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Ftree-inline.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-inline.h?ref=d8a2d370dc8e418c97cfacbef66a86ab444e94d2", "patch": "@@ -183,10 +183,9 @@ extern eni_weights eni_size_weights;\n extern eni_weights eni_time_weights;\n \n /* Function prototypes.  */\n-\n+void init_inline_once (void);\n extern tree copy_tree_body_r (tree *, int *, void *);\n extern void insert_decl_map (copy_body_data *, tree, tree);\n-\n unsigned int optimize_inline_calls (tree);\n tree maybe_inline_call_in_expr (tree);\n bool tree_inlinable_function_p (tree);\n@@ -197,9 +196,13 @@ int estimate_num_insns (gimple, eni_weights *);\n int estimate_num_insns_fn (tree, eni_weights *);\n int count_insns_seq (gimple_seq, eni_weights *);\n bool tree_versionable_function_p (tree);\n-\n extern tree remap_decl (tree decl, copy_body_data *id);\n extern tree remap_type (tree type, copy_body_data *id);\n extern gimple_seq copy_gimple_seq_and_replace_locals (gimple_seq seq);\n+extern bool debug_find_tree (tree, tree);\n+\n+/* This is in tree-inline.c since the routine uses\n+   data structures from the inliner.  */\n+extern tree build_duplicate_type (tree);\n \n #endif /* GCC_TREE_INLINE_H */"}, {"sha": "b2b57992d55ae91632de41729dd27f277760d629", "filename": "gcc/tree-into-ssa.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Ftree-into-ssa.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Ftree-into-ssa.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-into-ssa.c?ref=d8a2d370dc8e418c97cfacbef66a86ab444e94d2", "patch": "@@ -35,8 +35,10 @@ along with GCC; see the file COPYING3.  If not see\n #include \"tree-cfg.h\"\n #include \"tree-phinodes.h\"\n #include \"ssa-iterators.h\"\n+#include \"stringpool.h\"\n #include \"tree-ssanames.h\"\n #include \"tree-into-ssa.h\"\n+#include \"expr.h\"\n #include \"tree-dfa.h\"\n #include \"tree-ssa.h\"\n #include \"tree-inline.h\""}, {"sha": "b5217f7787377b4efcd45aee870cdc73450c142e", "filename": "gcc/tree-iterator.h", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Ftree-iterator.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Ftree-iterator.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-iterator.h?ref=d8a2d370dc8e418c97cfacbef66a86ab444e94d2", "patch": "@@ -117,5 +117,7 @@ extern tree alloc_stmt_list (void);\n extern void free_stmt_list (tree);\n extern void append_to_statement_list (tree, tree *);\n extern void append_to_statement_list_force (tree, tree *);\n+extern tree expr_first (tree);\n+extern tree expr_last (tree);\n \n #endif /* GCC_TREE_ITERATOR_H  */"}, {"sha": "6f9462c4aec725b6ac195f4f2a54f6529155add4", "filename": "gcc/tree-loop-distribution.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Ftree-loop-distribution.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Ftree-loop-distribution.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-loop-distribution.c?ref=d8a2d370dc8e418c97cfacbef66a86ab444e94d2", "patch": "@@ -48,10 +48,12 @@ along with GCC; see the file COPYING3.  If not see\n #include \"gimple.h\"\n #include \"gimple-iterator.h\"\n #include \"gimplify-me.h\"\n+#include \"stor-layout.h\"\n #include \"gimple-ssa.h\"\n #include \"tree-cfg.h\"\n #include \"tree-phinodes.h\"\n #include \"ssa-iterators.h\"\n+#include \"stringpool.h\"\n #include \"tree-ssanames.h\"\n #include \"tree-ssa-loop-manip.h\"\n #include \"tree-ssa-loop.h\""}, {"sha": "868c8fd0e1fa8f7767a24ce05946a936d35943b6", "filename": "gcc/tree-nested.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Ftree-nested.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Ftree-nested.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-nested.c?ref=d8a2d370dc8e418c97cfacbef66a86ab444e94d2", "patch": "@@ -22,6 +22,8 @@\n #include \"coretypes.h\"\n #include \"tm.h\"\n #include \"tree.h\"\n+#include \"stringpool.h\"\n+#include \"stor-layout.h\"\n #include \"tm_p.h\"\n #include \"function.h\"\n #include \"tree-dump.h\""}, {"sha": "035428aaec30ee398cd2548ce1117a872e569a31", "filename": "gcc/tree-nrv.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Ftree-nrv.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Ftree-nrv.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-nrv.c?ref=d8a2d370dc8e418c97cfacbef66a86ab444e94d2", "patch": "@@ -29,6 +29,7 @@ along with GCC; see the file COPYING3.  If not see\n #include \"gimple-iterator.h\"\n #include \"gimple-walk.h\"\n #include \"gimple-ssa.h\"\n+#include \"stringpool.h\"\n #include \"tree-ssanames.h\"\n #include \"tree-pass.h\"\n #include \"langhooks.h\""}, {"sha": "785f71eae295d23885737376ef435d84745a8bf7", "filename": "gcc/tree-object-size.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Ftree-object-size.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Ftree-object-size.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-object-size.c?ref=d8a2d370dc8e418c97cfacbef66a86ab444e94d2", "patch": "@@ -23,12 +23,14 @@ along with GCC; see the file COPYING3.  If not see\n #include \"coretypes.h\"\n #include \"tm.h\"\n #include \"tree.h\"\n+#include \"tree-object-size.h\"\n #include \"diagnostic-core.h\"\n #include \"gimple-pretty-print.h\"\n #include \"bitmap.h\"\n #include \"gimple.h\"\n #include \"gimple-iterator.h\"\n #include \"gimple-ssa.h\"\n+#include \"stringpool.h\"\n #include \"tree-ssanames.h\"\n #include \"tree-pass.h\"\n #include \"tree-ssa-propagate.h\""}, {"sha": "19029d895621f2c2d8193a80d23f5b7153dd511b", "filename": "gcc/tree-object-size.h", "status": "added", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Ftree-object-size.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Ftree-object-size.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-object-size.h?ref=d8a2d370dc8e418c97cfacbef66a86ab444e94d2", "patch": "@@ -0,0 +1,26 @@\n+/* Declarations for tree-object-size.c.\n+   Copyright (C) 2013 Free Software Foundation, Inc.\n+\n+This file is part of GCC.\n+\n+GCC is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 3, or (at your option)\n+any later version.\n+\n+GCC is distributed in the hope that it will be useful,\n+but WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+GNU General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GCC; see the file COPYING3.  If not see\n+<http://www.gnu.org/licenses/>.  */\n+\n+#ifndef GCC_TREE_OBJECT_SIZE_H\n+#define GCC_TREE_OBJECT_SIZE_H\n+\n+extern void init_object_sizes (void);\n+extern unsigned HOST_WIDE_INT compute_builtin_object_size (tree, int);\n+\n+#endif  // GCC_TREE_OBJECT_SIZE_H"}, {"sha": "333ef767418176299defaac0556b86f406e1e772", "filename": "gcc/tree-outof-ssa.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Ftree-outof-ssa.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Ftree-outof-ssa.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-outof-ssa.c?ref=d8a2d370dc8e418c97cfacbef66a86ab444e94d2", "patch": "@@ -23,6 +23,7 @@ along with GCC; see the file COPYING3.  If not see\n #include \"coretypes.h\"\n #include \"tm.h\"\n #include \"tree.h\"\n+#include \"stor-layout.h\"\n #include \"ggc.h\"\n #include \"basic-block.h\"\n #include \"gimple-pretty-print.h\"\n@@ -34,6 +35,7 @@ along with GCC; see the file COPYING3.  If not see\n #include \"tree-cfg.h\"\n #include \"tree-phinodes.h\"\n #include \"ssa-iterators.h\"\n+#include \"stringpool.h\"\n #include \"tree-ssanames.h\"\n #include \"dumpfile.h\"\n #include \"diagnostic-core.h\""}, {"sha": "b7370f73c461e33b3f04d38876adb82085de7be7", "filename": "gcc/tree-parloops.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Ftree-parloops.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Ftree-parloops.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-parloops.c?ref=d8a2d370dc8e418c97cfacbef66a86ab444e94d2", "patch": "@@ -28,10 +28,13 @@ along with GCC; see the file COPYING3.  If not see\n #include \"gimple-iterator.h\"\n #include \"gimplify-me.h\"\n #include \"gimple-walk.h\"\n+#include \"stor-layout.h\"\n+#include \"tree-nested.h\"\n #include \"gimple-ssa.h\"\n #include \"tree-cfg.h\"\n #include \"tree-phinodes.h\"\n #include \"ssa-iterators.h\"\n+#include \"stringpool.h\"\n #include \"tree-ssanames.h\"\n #include \"tree-ssa-loop-ivopts.h\"\n #include \"tree-ssa-loop-manip.h\""}, {"sha": "dffad686fd1babc46024a2dafc12ef96f98ceaab", "filename": "gcc/tree-phinodes.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Ftree-phinodes.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Ftree-phinodes.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-phinodes.c?ref=d8a2d370dc8e418c97cfacbef66a86ab444e94d2", "patch": "@@ -29,6 +29,7 @@ along with GCC; see the file COPYING3.  If not see\n #include \"gimple-ssa.h\"\n #include \"tree-phinodes.h\"\n #include \"ssa-iterators.h\"\n+#include \"stringpool.h\"\n #include \"tree-ssanames.h\"\n #include \"tree-ssa.h\"\n #include \"diagnostic-core.h\""}, {"sha": "830f82bc811086e95edd2b7568d07080c2ff6c6b", "filename": "gcc/tree-predcom.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Ftree-predcom.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Ftree-predcom.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-predcom.c?ref=d8a2d370dc8e418c97cfacbef66a86ab444e94d2", "patch": "@@ -198,12 +198,14 @@ along with GCC; see the file COPYING3.  If not see\n #include \"gimple-ssa.h\"\n #include \"tree-phinodes.h\"\n #include \"ssa-iterators.h\"\n+#include \"stringpool.h\"\n #include \"tree-ssanames.h\"\n #include \"tree-ssa-loop-ivopts.h\"\n #include \"tree-ssa-loop-manip.h\"\n #include \"tree-ssa-loop-niter.h\"\n #include \"tree-ssa-loop.h\"\n #include \"tree-into-ssa.h\"\n+#include \"expr.h\"\n #include \"tree-dfa.h\"\n #include \"tree-ssa.h\"\n #include \"ggc.h\""}, {"sha": "7ed48833fc33cc606e7428008c37d6f341b46cad", "filename": "gcc/tree-pretty-print.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Ftree-pretty-print.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Ftree-pretty-print.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-pretty-print.c?ref=d8a2d370dc8e418c97cfacbef66a86ab444e94d2", "patch": "@@ -23,6 +23,8 @@ along with GCC; see the file COPYING3.  If not see\n #include \"coretypes.h\"\n #include \"tm.h\"\n #include \"tree.h\"\n+#include \"stor-layout.h\"\n+#include \"expr.h\"\n #include \"tree-pretty-print.h\"\n #include \"hashtab.h\"\n #include \"gimple.h\""}, {"sha": "fb4df90b769945c9a20d6d60581c0f1646fd8713", "filename": "gcc/tree-profile.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Ftree-profile.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Ftree-profile.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-profile.c?ref=d8a2d370dc8e418c97cfacbef66a86ab444e94d2", "patch": "@@ -35,12 +35,15 @@ along with GCC; see the file COPYING3.  If not see\n #include \"coverage.h\"\n #include \"tree.h\"\n #include \"gimple.h\"\n+#include \"varasm.h\"\n+#include \"tree-nested.h\"\n #include \"gimplify.h\"\n #include \"gimple-iterator.h\"\n #include \"gimplify-me.h\"\n #include \"gimple-ssa.h\"\n #include \"cgraph.h\"\n #include \"tree-cfg.h\"\n+#include \"stringpool.h\"\n #include \"tree-ssanames.h\"\n #include \"tree-into-ssa.h\"\n #include \"tree-pass.h\""}, {"sha": "e8b18f9df07b47083542ce3f49cc463aaf3b1c8b", "filename": "gcc/tree-scalar-evolution.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Ftree-scalar-evolution.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Ftree-scalar-evolution.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-scalar-evolution.c?ref=d8a2d370dc8e418c97cfacbef66a86ab444e94d2", "patch": "@@ -257,6 +257,7 @@ along with GCC; see the file COPYING3.  If not see\n #include \"system.h\"\n #include \"coretypes.h\"\n #include \"tree.h\"\n+#include \"expr.h\"\n #include \"hash-table.h\"\n #include \"gimple-pretty-print.h\"\n #include \"gimple.h\"\n@@ -266,6 +267,7 @@ along with GCC; see the file COPYING3.  If not see\n #include \"gimple-ssa.h\"\n #include \"tree-cfg.h\"\n #include \"tree-phinodes.h\"\n+#include \"stringpool.h\"\n #include \"tree-ssanames.h\"\n #include \"tree-ssa-loop-ivopts.h\"\n #include \"tree-ssa-loop-manip.h\""}, {"sha": "ea1986cae7e387e07051bb5f6417601cbe098feb", "filename": "gcc/tree-sra.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Ftree-sra.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Ftree-sra.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-sra.c?ref=d8a2d370dc8e418c97cfacbef66a86ab444e94d2", "patch": "@@ -79,6 +79,7 @@ along with GCC; see the file COPYING3.  If not see\n #include \"tm.h\"\n #include \"tree.h\"\n #include \"gimple.h\"\n+#include \"stor-layout.h\"\n #include \"gimplify.h\"\n #include \"gimple-iterator.h\"\n #include \"gimplify-me.h\"\n@@ -88,7 +89,9 @@ along with GCC; see the file COPYING3.  If not see\n #include \"tree-cfg.h\"\n #include \"tree-phinodes.h\"\n #include \"ssa-iterators.h\"\n+#include \"stringpool.h\"\n #include \"tree-ssanames.h\"\n+#include \"expr.h\"\n #include \"tree-dfa.h\"\n #include \"tree-ssa.h\"\n #include \"tree-pass.h\""}, {"sha": "257d534a492153ac0b1e97766a0bbdf4c7d3e9e0", "filename": "gcc/tree-ssa-address.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Ftree-ssa-address.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Ftree-ssa-address.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-address.c?ref=d8a2d370dc8e418c97cfacbef66a86ab444e94d2", "patch": "@@ -25,14 +25,17 @@ along with GCC; see the file COPYING3.  If not see\n #include \"coretypes.h\"\n #include \"tm.h\"\n #include \"tree.h\"\n+#include \"stor-layout.h\"\n #include \"tm_p.h\"\n #include \"basic-block.h\"\n #include \"tree-pretty-print.h\"\n #include \"gimple.h\"\n #include \"gimple-iterator.h\"\n #include \"gimplify-me.h\"\n+#include \"stringpool.h\"\n #include \"tree-ssanames.h\"\n #include \"tree-ssa-loop-ivopts.h\"\n+#include \"expr.h\"\n #include \"tree-dfa.h\"\n #include \"dumpfile.h\"\n #include \"flags.h\""}, {"sha": "ef9fbfecdc9173462f02b7572421bdd1dd3e1a36", "filename": "gcc/tree-ssa-alias.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Ftree-ssa-alias.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Ftree-ssa-alias.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-alias.c?ref=d8a2d370dc8e418c97cfacbef66a86ab444e94d2", "patch": "@@ -35,7 +35,9 @@ along with GCC; see the file COPYING3.  If not see\n #include \"dumpfile.h\"\n #include \"gimple.h\"\n #include \"gimple-ssa.h\"\n+#include \"stringpool.h\"\n #include \"tree-ssanames.h\"\n+#include \"expr.h\"\n #include \"tree-dfa.h\"\n #include \"tree-inline.h\"\n #include \"params.h\""}, {"sha": "d8ef822d4fba6b0d01b06327fa2ea95f406c45e0", "filename": "gcc/tree-ssa-ccp.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Ftree-ssa-ccp.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Ftree-ssa-ccp.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-ccp.c?ref=d8a2d370dc8e418c97cfacbef66a86ab444e94d2", "patch": "@@ -114,6 +114,7 @@ along with GCC; see the file COPYING3.  If not see\n #include \"coretypes.h\"\n #include \"tm.h\"\n #include \"tree.h\"\n+#include \"stor-layout.h\"\n #include \"flags.h\"\n #include \"tm_p.h\"\n #include \"basic-block.h\"\n@@ -126,6 +127,7 @@ along with GCC; see the file COPYING3.  If not see\n #include \"tree-cfg.h\"\n #include \"tree-phinodes.h\"\n #include \"ssa-iterators.h\"\n+#include \"stringpool.h\"\n #include \"tree-ssanames.h\"\n #include \"tree-pass.h\"\n #include \"tree-ssa-propagate.h\""}, {"sha": "cc46370d1f9f393d034e03b8f527cbd9e8d8d991", "filename": "gcc/tree-ssa-coalesce.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Ftree-ssa-coalesce.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Ftree-ssa-coalesce.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-coalesce.c?ref=d8a2d370dc8e418c97cfacbef66a86ab444e94d2", "patch": "@@ -32,6 +32,7 @@ along with GCC; see the file COPYING3.  If not see\n #include \"gimple-ssa.h\"\n #include \"tree-phinodes.h\"\n #include \"ssa-iterators.h\"\n+#include \"stringpool.h\"\n #include \"tree-ssanames.h\"\n #include \"hash-table.h\"\n #include \"tree-ssa-live.h\""}, {"sha": "def780650e0029d9f4eee46897302929964e8626", "filename": "gcc/tree-ssa-copy.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Ftree-ssa-copy.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Ftree-ssa-copy.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-copy.c?ref=d8a2d370dc8e418c97cfacbef66a86ab444e94d2", "patch": "@@ -33,6 +33,7 @@ along with GCC; see the file COPYING3.  If not see\n #include \"tree-cfg.h\"\n #include \"tree-phinodes.h\"\n #include \"ssa-iterators.h\"\n+#include \"stringpool.h\"\n #include \"tree-ssanames.h\"\n #include \"tree-pass.h\"\n #include \"tree-ssa-propagate.h\""}, {"sha": "361b4c32fd79311c786ad0af51f994d849b3caf7", "filename": "gcc/tree-ssa-copyrename.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Ftree-ssa-copyrename.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Ftree-ssa-copyrename.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-copyrename.c?ref=d8a2d370dc8e418c97cfacbef66a86ab444e94d2", "patch": "@@ -31,7 +31,9 @@ along with GCC; see the file COPYING3.  If not see\n #include \"tree-pretty-print.h\"\n #include \"bitmap.h\"\n #include \"gimple-ssa.h\"\n+#include \"stringpool.h\"\n #include \"tree-ssanames.h\"\n+#include \"expr.h\"\n #include \"tree-dfa.h\"\n #include \"tree-inline.h\"\n #include \"hashtab.h\""}, {"sha": "213bb51b3e2bda6bb19c596bcf5b32a37959bf2f", "filename": "gcc/tree-ssa-dce.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Ftree-ssa-dce.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Ftree-ssa-dce.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-dce.c?ref=d8a2d370dc8e418c97cfacbef66a86ab444e94d2", "patch": "@@ -48,6 +48,7 @@ along with GCC; see the file COPYING3.  If not see\n #include \"tm.h\"\n \n #include \"tree.h\"\n+#include \"calls.h\"\n #include \"gimple-pretty-print.h\"\n #include \"basic-block.h\"\n #include \"gimple.h\"\n@@ -57,9 +58,11 @@ along with GCC; see the file COPYING3.  If not see\n #include \"tree-cfg.h\"\n #include \"tree-phinodes.h\"\n #include \"ssa-iterators.h\"\n+#include \"stringpool.h\"\n #include \"tree-ssanames.h\"\n #include \"tree-ssa-loop-niter.h\"\n #include \"tree-into-ssa.h\"\n+#include \"expr.h\"\n #include \"tree-dfa.h\"\n #include \"tree-pass.h\"\n #include \"flags.h\""}, {"sha": "bfd865d09a7a4c0890b632c09f3a1b0e389ac5e3", "filename": "gcc/tree-ssa-dom.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Ftree-ssa-dom.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Ftree-ssa-dom.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-dom.c?ref=d8a2d370dc8e418c97cfacbef66a86ab444e94d2", "patch": "@@ -24,6 +24,7 @@ along with GCC; see the file COPYING3.  If not see\n #include \"hash-table.h\"\n #include \"tm.h\"\n #include \"tree.h\"\n+#include \"stor-layout.h\"\n #include \"flags.h\"\n #include \"tm_p.h\"\n #include \"basic-block.h\"\n@@ -36,6 +37,7 @@ along with GCC; see the file COPYING3.  If not see\n #include \"tree-cfg.h\"\n #include \"tree-phinodes.h\"\n #include \"ssa-iterators.h\"\n+#include \"stringpool.h\"\n #include \"tree-ssanames.h\"\n #include \"tree-into-ssa.h\"\n #include \"domwalk.h\""}, {"sha": "905ef21761c2e96df8a592d555b907f0059da23a", "filename": "gcc/tree-ssa-dse.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Ftree-ssa-dse.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Ftree-ssa-dse.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-dse.c?ref=d8a2d370dc8e418c97cfacbef66a86ab444e94d2", "patch": "@@ -33,7 +33,9 @@ along with GCC; see the file COPYING3.  If not see\n #include \"tree-cfg.h\"\n #include \"tree-phinodes.h\"\n #include \"ssa-iterators.h\"\n+#include \"stringpool.h\"\n #include \"tree-ssanames.h\"\n+#include \"expr.h\"\n #include \"tree-dfa.h\"\n #include \"tree-pass.h\"\n #include \"domwalk.h\""}, {"sha": "a826137aabdc482d1125621941b56998f54f0980", "filename": "gcc/tree-ssa-forwprop.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Ftree-ssa-forwprop.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Ftree-ssa-forwprop.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-forwprop.c?ref=d8a2d370dc8e418c97cfacbef66a86ab444e94d2", "patch": "@@ -22,6 +22,7 @@ along with GCC; see the file COPYING3.  If not see\n #include \"coretypes.h\"\n #include \"tm.h\"\n #include \"tree.h\"\n+#include \"stor-layout.h\"\n #include \"tm_p.h\"\n #include \"basic-block.h\"\n #include \"gimple-pretty-print.h\"\n@@ -33,7 +34,9 @@ along with GCC; see the file COPYING3.  If not see\n #include \"tree-cfg.h\"\n #include \"tree-phinodes.h\"\n #include \"ssa-iterators.h\"\n+#include \"stringpool.h\"\n #include \"tree-ssanames.h\"\n+#include \"expr.h\"\n #include \"tree-dfa.h\"\n #include \"tree-pass.h\"\n #include \"langhooks.h\""}, {"sha": "9d24375366690f40b56ddde3cc7d9c3d28e0529c", "filename": "gcc/tree-ssa-ifcombine.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Ftree-ssa-ifcombine.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Ftree-ssa-ifcombine.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-ifcombine.c?ref=d8a2d370dc8e418c97cfacbef66a86ab444e94d2", "patch": "@@ -27,6 +27,7 @@ along with GCC; see the file COPYING3.  If not see\n #include \"rtl.h\"\n #include \"tm_p.h\"\n #include \"tree.h\"\n+#include \"stor-layout.h\"\n #include \"basic-block.h\"\n #include \"tree-pretty-print.h\"\n #include \"gimple.h\""}, {"sha": "5dc8d025f663f545adf22e7cd59419d3ec07dec8", "filename": "gcc/tree-ssa-live.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Ftree-ssa-live.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Ftree-ssa-live.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-live.c?ref=d8a2d370dc8e418c97cfacbef66a86ab444e94d2", "patch": "@@ -32,7 +32,9 @@ along with GCC; see the file COPYING3.  If not see\n #include \"gimple-ssa.h\"\n #include \"tree-phinodes.h\"\n #include \"ssa-iterators.h\"\n+#include \"stringpool.h\"\n #include \"tree-ssanames.h\"\n+#include \"expr.h\"\n #include \"tree-dfa.h\"\n #include \"timevar.h\"\n #include \"dumpfile.h\""}, {"sha": "79a0543a40f0c2fc44335de4c1ebe261c0a2b7bf", "filename": "gcc/tree-ssa-loop-im.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Ftree-ssa-loop-im.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Ftree-ssa-loop-im.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-loop-im.c?ref=d8a2d370dc8e418c97cfacbef66a86ab444e94d2", "patch": "@@ -33,6 +33,7 @@ along with GCC; see the file COPYING3.  If not see\n #include \"tree-cfg.h\"\n #include \"tree-phinodes.h\"\n #include \"ssa-iterators.h\"\n+#include \"stringpool.h\"\n #include \"tree-ssanames.h\"\n #include \"tree-ssa-loop-manip.h\"\n #include \"tree-ssa-loop.h\""}, {"sha": "ea0ab8ca80b499f450169dea1491791f895998a8", "filename": "gcc/tree-ssa-loop-ivcanon.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Ftree-ssa-loop-ivcanon.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Ftree-ssa-loop-ivcanon.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-loop-ivcanon.c?ref=d8a2d370dc8e418c97cfacbef66a86ab444e94d2", "patch": "@@ -47,6 +47,7 @@ along with GCC; see the file COPYING3.  If not see\n #include \"tree-cfg.h\"\n #include \"tree-phinodes.h\"\n #include \"ssa-iterators.h\"\n+#include \"stringpool.h\"\n #include \"tree-ssanames.h\"\n #include \"tree-ssa-loop-manip.h\"\n #include \"tree-ssa-loop-niter.h\""}, {"sha": "9bf12ebdc8ee1237698a19e5719eeccf608c5467", "filename": "gcc/tree-ssa-loop-ivopts.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Ftree-ssa-loop-ivopts.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Ftree-ssa-loop-ivopts.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-loop-ivopts.c?ref=d8a2d370dc8e418c97cfacbef66a86ab444e94d2", "patch": "@@ -66,6 +66,7 @@ along with GCC; see the file COPYING3.  If not see\n #include \"coretypes.h\"\n #include \"tm.h\"\n #include \"tree.h\"\n+#include \"stor-layout.h\"\n #include \"tm_p.h\"\n #include \"basic-block.h\"\n #include \"gimple-pretty-print.h\"\n@@ -78,11 +79,13 @@ along with GCC; see the file COPYING3.  If not see\n #include \"tree-cfg.h\"\n #include \"tree-phinodes.h\"\n #include \"ssa-iterators.h\"\n+#include \"stringpool.h\"\n #include \"tree-ssanames.h\"\n #include \"tree-ssa-loop-ivopts.h\"\n #include \"tree-ssa-loop-manip.h\"\n #include \"tree-ssa-loop-niter.h\"\n #include \"tree-ssa-loop.h\"\n+#include \"expr.h\"\n #include \"tree-dfa.h\"\n #include \"tree-ssa.h\"\n #include \"cfgloop.h\""}, {"sha": "fe2686d3037f4cb93e792d0107eff0175603883e", "filename": "gcc/tree-ssa-loop-manip.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Ftree-ssa-loop-manip.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Ftree-ssa-loop-manip.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-loop-manip.c?ref=d8a2d370dc8e418c97cfacbef66a86ab444e94d2", "patch": "@@ -32,6 +32,7 @@ along with GCC; see the file COPYING3.  If not see\n #include \"tree-cfg.h\"\n #include \"tree-phinodes.h\"\n #include \"ssa-iterators.h\"\n+#include \"stringpool.h\"\n #include \"tree-ssanames.h\"\n #include \"tree-ssa-loop-ivopts.h\"\n #include \"tree-ssa-loop-manip.h\""}, {"sha": "023f2a833561c261b1da0a767102a430271d3733", "filename": "gcc/tree-ssa-loop-niter.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Ftree-ssa-loop-niter.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Ftree-ssa-loop-niter.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-loop-niter.c?ref=d8a2d370dc8e418c97cfacbef66a86ab444e94d2", "patch": "@@ -22,6 +22,8 @@ along with GCC; see the file COPYING3.  If not see\n #include \"coretypes.h\"\n #include \"tm.h\"\n #include \"tree.h\"\n+#include \"calls.h\"\n+#include \"expr.h\"\n #include \"tm_p.h\"\n #include \"basic-block.h\"\n #include \"gimple-pretty-print.h\"\n@@ -47,6 +49,7 @@ along with GCC; see the file COPYING3.  If not see\n #include \"diagnostic-core.h\"\n #include \"tree-inline.h\"\n #include \"tree-pass.h\"\n+#include \"stringpool.h\"\n #include \"tree-ssanames.h\"\n \n "}, {"sha": "6baf4abd3191e94c4f04c45da5f5b8de2237a424", "filename": "gcc/tree-ssa-loop-prefetch.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Ftree-ssa-loop-prefetch.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Ftree-ssa-loop-prefetch.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-loop-prefetch.c?ref=d8a2d370dc8e418c97cfacbef66a86ab444e94d2", "patch": "@@ -22,6 +22,7 @@ along with GCC; see the file COPYING3.  If not see\n #include \"coretypes.h\"\n #include \"tm.h\"\n #include \"tree.h\"\n+#include \"stor-layout.h\"\n #include \"tm_p.h\"\n #include \"basic-block.h\"\n #include \"tree-pretty-print.h\""}, {"sha": "67117bcc3f698eee431c50357691c0fa8d88dc6d", "filename": "gcc/tree-ssa-math-opts.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Ftree-ssa-math-opts.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Ftree-ssa-math-opts.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-math-opts.c?ref=d8a2d370dc8e418c97cfacbef66a86ab444e94d2", "patch": "@@ -93,11 +93,14 @@ along with GCC; see the file COPYING3.  If not see\n #include \"gimple.h\"\n #include \"gimple-iterator.h\"\n #include \"gimplify-me.h\"\n+#include \"stor-layout.h\"\n #include \"gimple-ssa.h\"\n #include \"tree-cfg.h\"\n #include \"tree-phinodes.h\"\n #include \"ssa-iterators.h\"\n+#include \"stringpool.h\"\n #include \"tree-ssanames.h\"\n+#include \"expr.h\"\n #include \"tree-dfa.h\"\n #include \"tree-ssa.h\"\n #include \"tree-pass.h\""}, {"sha": "3508b34b77a8fae20c15aebee7bbd494dce8a4a4", "filename": "gcc/tree-ssa-operands.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Ftree-ssa-operands.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Ftree-ssa-operands.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-operands.c?ref=d8a2d370dc8e418c97cfacbef66a86ab444e94d2", "patch": "@@ -22,6 +22,8 @@ along with GCC; see the file COPYING3.  If not see\n #include \"coretypes.h\"\n #include \"tm.h\"\n #include \"tree.h\"\n+#include \"stmt.h\"\n+#include \"print-tree.h\"\n #include \"flags.h\"\n #include \"function.h\"\n #include \"gimple-pretty-print.h\"\n@@ -30,6 +32,7 @@ along with GCC; see the file COPYING3.  If not see\n #include \"gimple-ssa.h\"\n #include \"tree-phinodes.h\"\n #include \"ssa-iterators.h\"\n+#include \"stringpool.h\"\n #include \"tree-ssanames.h\"\n #include \"tree-inline.h\"\n #include \"timevar.h\""}, {"sha": "54a981935fdd1239ded0d38d5867fe72ad0e7861", "filename": "gcc/tree-ssa-phiopt.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Ftree-ssa-phiopt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Ftree-ssa-phiopt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-phiopt.c?ref=d8a2d370dc8e418c97cfacbef66a86ab444e94d2", "patch": "@@ -24,6 +24,7 @@ along with GCC; see the file COPYING3.  If not see\n #include \"tm.h\"\n #include \"ggc.h\"\n #include \"tree.h\"\n+#include \"stor-layout.h\"\n #include \"flags.h\"\n #include \"tm_p.h\"\n #include \"basic-block.h\"\n@@ -35,7 +36,9 @@ along with GCC; see the file COPYING3.  If not see\n #include \"tree-cfg.h\"\n #include \"tree-phinodes.h\"\n #include \"ssa-iterators.h\"\n+#include \"stringpool.h\"\n #include \"tree-ssanames.h\"\n+#include \"expr.h\"\n #include \"tree-dfa.h\"\n #include \"tree-pass.h\"\n #include \"langhooks.h\""}, {"sha": "e76404094252e092aa4c21ec0dfd2d1e9d4ed2a7", "filename": "gcc/tree-ssa-phiprop.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Ftree-ssa-phiprop.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8a2d370dc8e418c97cfacbef66a86ab444e94d2/gcc%2Ftree-ssa-phiprop.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-phiprop.c?ref=d8a2d370dc8e418c97cfacbef66a86ab444e94d2", "patch": "@@ -32,6 +32,7 @@ along with GCC; see the file COPYING3.  If not see\n #include \"gimple-ssa.h\"\n #include \"tree-phinodes.h\"\n #include \"ssa-iterators.h\"\n+#include \"stringpool.h\"\n #include \"tree-ssanames.h\"\n #include \"tree-pass.h\"\n #include \"langhooks.h\""}]}