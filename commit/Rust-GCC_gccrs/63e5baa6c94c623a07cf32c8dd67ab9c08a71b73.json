{"sha": "63e5baa6c94c623a07cf32c8dd67ab9c08a71b73", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjNlNWJhYTZjOTRjNjIzYTA3Y2YzMmM4ZGQ2N2FiOWMwOGE3MWI3Mw==", "commit": {"author": {"name": "Kaveh R. Ghazi", "email": "ghazi@caip.rutgers.edu", "date": "1999-03-31T07:48:00Z"}, "committer": {"name": "Kaveh Ghazi", "email": "ghazi@gcc.gnu.org", "date": "1999-03-31T07:48:00Z"}, "message": "Makefile.in (hash.h): Generate using gperf language 'C'...\n\n        * Makefile.in (hash.h): Generate using gperf language 'C', not\n        'KR-C', so gperf uses the `const' keyword on strings.\n        * gperf (resword): Const-ify a char*.\n\nFrom-SVN: r26080", "tree": {"sha": "ff53d28a83b428640ac40353378a6a9fb58ba5e6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ff53d28a83b428640ac40353378a6a9fb58ba5e6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/63e5baa6c94c623a07cf32c8dd67ab9c08a71b73", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/63e5baa6c94c623a07cf32c8dd67ab9c08a71b73", "html_url": "https://github.com/Rust-GCC/gccrs/commit/63e5baa6c94c623a07cf32c8dd67ab9c08a71b73", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/63e5baa6c94c623a07cf32c8dd67ab9c08a71b73/comments", "author": null, "committer": null, "parents": [{"sha": "0728688f0e00c906a5c09d71bdcd088b1e5dd9e4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0728688f0e00c906a5c09d71bdcd088b1e5dd9e4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0728688f0e00c906a5c09d71bdcd088b1e5dd9e4"}], "stats": {"total": 25, "additions": 16, "deletions": 9}, "files": [{"sha": "886785d135670f9e70bc526e2882d4526ca51b44", "filename": "gcc/ch/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/63e5baa6c94c623a07cf32c8dd67ab9c08a71b73/gcc%2Fch%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/63e5baa6c94c623a07cf32c8dd67ab9c08a71b73/gcc%2Fch%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fch%2FChangeLog?ref=63e5baa6c94c623a07cf32c8dd67ab9c08a71b73", "patch": "@@ -1,3 +1,10 @@\n+Wed Mar 31 10:44:47 1999  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n+\n+        * Makefile.in (hash.h): Generate using gperf language 'C', not\n+        'KR-C', so gperf uses the `const' keyword on strings.\n+\t \n+        * gperf (resword): Const-ify a char*.\n+\n Sun Mar 28 00:30:36 1999  Jeffrey A Law  (law@cygnus.com)\n \n \t* Make-lang.in (CHILL.dvi): New target."}, {"sha": "5dbc26a238a899b17be00301321e574f9b5cefe3", "filename": "gcc/ch/Makefile.in", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/63e5baa6c94c623a07cf32c8dd67ab9c08a71b73/gcc%2Fch%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/63e5baa6c94c623a07cf32c8dd67ab9c08a71b73/gcc%2Fch%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fch%2FMakefile.in?ref=63e5baa6c94c623a07cf32c8dd67ab9c08a71b73", "patch": "@@ -266,7 +266,7 @@ $(srcdir)/hash.h:\n \tgawk '{ printf (\"s/^%s,/%s,/\\n\", $$1, toupper ($$1)) }' < gperf.tmp > sed.tmp\n \tsed -f sed.tmp < gperf.tmp > gperf.tmp2\n \tcat $(srcdir)/gperf gperf.tmp2 > gperf.tmp\n-\tgperf -L KR-C -F ', 0, 0, 0' -D -E -S1 -p -j1 -i 1 -g -o -t -k'*' \\\n+\tgperf -L C -F ', 0, 0, 0' -D -E -S1 -p -j1 -i 1 -g -o -t -k'*' \\\n \t  gperf.tmp > $(srcdir)/hash.h\n \t$(RM) gperf.tmp gperf.tmp2 sed.tmp\n "}, {"sha": "20d05961aa7afbfa0701a404bdac432c4fd27637", "filename": "gcc/ch/gperf", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/63e5baa6c94c623a07cf32c8dd67ab9c08a71b73/gcc%2Fch%2Fgperf", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/63e5baa6c94c623a07cf32c8dd67ab9c08a71b73/gcc%2Fch%2Fgperf", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fch%2Fgperf?ref=63e5baa6c94c623a07cf32c8dd67ab9c08a71b73", "patch": "@@ -1,5 +1,5 @@\n struct resword {\n-  char        *name;\n+  const char  *name;\n   short        token;\n   enum rid     rid;\n   enum toktype { RESERVED, DIRECTIVE, PREDEF } flags;"}, {"sha": "1f0d59493c2d7f83584006b036febf919607f0cd", "filename": "gcc/ch/hash.h", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/63e5baa6c94c623a07cf32c8dd67ab9c08a71b73/gcc%2Fch%2Fhash.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/63e5baa6c94c623a07cf32c8dd67ab9c08a71b73/gcc%2Fch%2Fhash.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fch%2Fhash.h?ref=63e5baa6c94c623a07cf32c8dd67ab9c08a71b73", "patch": "@@ -1,7 +1,7 @@\n-/* KR-C code produced by gperf version 2.7.1 (19981006 egcs) */\n-/* Command-line: gperf -L KR-C -F , 0, 0, 0 -D -E -S1 -p -j1 -i 1 -g -o -t -k* gperf.tmp  */\n+/* C code produced by gperf version 2.7.1 (19981006 egcs) */\n+/* Command-line: gperf -L C -F , 0, 0, 0 -D -E -S1 -p -j1 -i 1 -g -o -t -k* gperf.tmp  */\n struct resword {\n-  char        *name;\n+  const char   *name;\n   short        token;\n   enum rid     rid;\n   enum toktype { RESERVED, DIRECTIVE, PREDEF } flags;\n@@ -14,7 +14,7 @@ __inline\n #endif\n static unsigned int\n hash (str, len)\n-     register char *str;\n+     register const char *str;\n      register unsigned int len;\n {\n   static unsigned short asso_values[] =\n@@ -121,7 +121,7 @@ __inline\n #endif\n struct resword *\n in_word_set (str, len)\n-     register char *str;\n+     register const char *str;\n      register unsigned int len;\n {\n   enum\n@@ -1342,7 +1342,7 @@ in_word_set (str, len)\n         multicompare:\n           while (wordptr < wordendptr)\n             {\n-              register char *s = wordptr->name;\n+              register const char *s = wordptr->name;\n \n               if (*str == *s && !strcmp (str + 1, s + 1))\n                 return wordptr;\n@@ -1351,7 +1351,7 @@ in_word_set (str, len)\n           return 0;\n         compare:\n           {\n-            register char *s = resword->name;\n+            register const char *s = resword->name;\n \n             if (*str == *s && !strcmp (str + 1, s + 1))\n               return resword;"}]}