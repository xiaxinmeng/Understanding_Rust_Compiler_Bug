{"sha": "d6476f90da4bfcb8644da32d3b4c4685a72bc84e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDY0NzZmOTBkYTRiZmNiODY0NGRhMzJkM2I0YzQ2ODVhNzJiYzg0ZQ==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2018-05-02T14:19:51Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2018-05-02T14:19:51Z"}, "message": "re PR tree-optimization/85597 (internal compiler error: in compute_live_loop_exits, at tree-ssa-loop-manip.c:229)\n\n2018-05-02  Richard Biener  <rguenther@suse.de>\n\n\tPR tree-optimization/85597\n\t* tree-vect-stmts.c (vectorizable_operation): For ternary SLP\n\tdo not use split vect_get_vec_defs call but call vect_get_slp_defs\n\tdirectly.\n\n\t* gcc.dg/vect/pr85597.c: New testcase.\n\nFrom-SVN: r259840", "tree": {"sha": "66dc915b15b21cbba13f0740f1d19d91d2c0bda5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/66dc915b15b21cbba13f0740f1d19d91d2c0bda5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d6476f90da4bfcb8644da32d3b4c4685a72bc84e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d6476f90da4bfcb8644da32d3b4c4685a72bc84e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d6476f90da4bfcb8644da32d3b4c4685a72bc84e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d6476f90da4bfcb8644da32d3b4c4685a72bc84e/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "9220b5116d0f4e880c073409f3854dec7d065eb5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9220b5116d0f4e880c073409f3854dec7d065eb5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9220b5116d0f4e880c073409f3854dec7d065eb5"}], "stats": {"total": 65, "additions": 61, "deletions": 4}, "files": [{"sha": "1c2a8283ed62123eb3d4eaba82db6b2a17446a54", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d6476f90da4bfcb8644da32d3b4c4685a72bc84e/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d6476f90da4bfcb8644da32d3b4c4685a72bc84e/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=d6476f90da4bfcb8644da32d3b4c4685a72bc84e", "patch": "@@ -1,3 +1,10 @@\n+2018-05-02  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/85597\n+\t* tree-vect-stmts.c (vectorizable_operation): For ternary SLP\n+\tdo not use split vect_get_vec_defs call but call vect_get_slp_defs\n+\tdirectly.\n+\n 2018-05-02  Tom de Vries  <tom@codesourcery.com>\n \n \tPR testsuite/85106"}, {"sha": "ecd2de3bc27421833a99ec2a3ab9bbf376e02f0e", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d6476f90da4bfcb8644da32d3b4c4685a72bc84e/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d6476f90da4bfcb8644da32d3b4c4685a72bc84e/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=d6476f90da4bfcb8644da32d3b4c4685a72bc84e", "patch": "@@ -1,3 +1,8 @@\n+2018-05-02  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/85597\n+\t* gcc.dg/vect/pr85597.c: New testcase.\n+\n 2018-05-02  Tom de Vries  <tom@codesourcery.com>\n \n \tPR testsuite/85106"}, {"sha": "cf615f9c4645244c51e2194e6a5483e6d43139ef", "filename": "gcc/testsuite/gcc.dg/vect/pr85597.c", "status": "added", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d6476f90da4bfcb8644da32d3b4c4685a72bc84e/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fpr85597.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d6476f90da4bfcb8644da32d3b4c4685a72bc84e/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fpr85597.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fpr85597.c?ref=d6476f90da4bfcb8644da32d3b4c4685a72bc84e", "patch": "@@ -0,0 +1,26 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O3\" } */\n+/* { dg-additional-options \"-mfma\" { target { x86_64-*-* i?86-*-* } } } */\n+\n+extern double fma (double, double, double);\n+\n+static inline void\n+bar (int i, double *D, double *S)\n+{\n+  while (i-- > 0)\n+    {\n+      D[0] = fma (1, S[0], D[0]);\n+      D[1] = fma (1, S[1], D[1]);\n+      D[2] = fma (1, S[2], D[2]);\n+      D[3] = fma (1, S[3], D[3]);\n+      D += 4;\n+      S += 4;\n+    }\n+}\n+\n+void\n+foo (double *d, double *s)\n+{\n+  bar (10, d, s);\n+}\n+"}, {"sha": "7ebc426bd3ecbec9c95270810c70e0ecaff4c999", "filename": "gcc/tree-vect-stmts.c", "status": "modified", "additions": 23, "deletions": 4, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d6476f90da4bfcb8644da32d3b4c4685a72bc84e/gcc%2Ftree-vect-stmts.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d6476f90da4bfcb8644da32d3b4c4685a72bc84e/gcc%2Ftree-vect-stmts.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vect-stmts.c?ref=d6476f90da4bfcb8644da32d3b4c4685a72bc84e", "patch": "@@ -5923,15 +5923,34 @@ vectorizable_operation (gimple *stmt, gimple_stmt_iterator *gsi,\n       /* Handle uses.  */\n       if (j == 0)\n \t{\n-\t  if (op_type == binary_op || op_type == ternary_op)\n+\t  if (op_type == binary_op)\n \t    vect_get_vec_defs (op0, op1, stmt, &vec_oprnds0, &vec_oprnds1,\n \t\t\t       slp_node);\n+\t  else if (op_type == ternary_op)\n+\t    {\n+\t      if (slp_node)\n+\t\t{\n+\t\t  auto_vec<tree> ops(3);\n+\t\t  ops.quick_push (op0);\n+\t\t  ops.quick_push (op1);\n+\t\t  ops.quick_push (op2);\n+\t\t  auto_vec<vec<tree> > vec_defs(3);\n+\t\t  vect_get_slp_defs (ops, slp_node, &vec_defs);\n+\t\t  vec_oprnds0 = vec_defs[0];\n+\t\t  vec_oprnds1 = vec_defs[1];\n+\t\t  vec_oprnds2 = vec_defs[2];\n+\t\t}\n+\t      else\n+\t\t{\n+\t\t  vect_get_vec_defs (op0, op1, stmt, &vec_oprnds0, &vec_oprnds1,\n+\t\t\t\t     NULL);\n+\t\t  vect_get_vec_defs (op2, NULL_TREE, stmt, &vec_oprnds2, NULL,\n+\t\t\t\t     NULL);\n+\t\t}\n+\t    }\n \t  else\n \t    vect_get_vec_defs (op0, NULL_TREE, stmt, &vec_oprnds0, NULL,\n \t\t\t       slp_node);\n-\t  if (op_type == ternary_op)\n-\t    vect_get_vec_defs (op2, NULL_TREE, stmt, &vec_oprnds2, NULL,\n-\t\t\t       slp_node);\n \t}\n       else\n \t{"}]}