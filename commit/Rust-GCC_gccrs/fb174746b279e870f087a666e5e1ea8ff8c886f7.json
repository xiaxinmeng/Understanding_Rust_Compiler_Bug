{"sha": "fb174746b279e870f087a666e5e1ea8ff8c886f7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZmIxNzQ3NDZiMjc5ZTg3MGYwODdhNjY2ZTVlMWVhOGZmOGM4ODZmNw==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2012-11-06T10:01:03Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2012-11-06T10:01:03Z"}, "message": "[multiple changes]\n\n2012-11-06  Yannick Moy  <moy@adacore.com>\n\n\t* s-bignum.adb (Div_Rem): Fix another bug in step D3.\n\n2012-11-06  Tristan Gingold  <gingold@adacore.com>\n\n\t* s-tarest.adb (Create_Restricted_Task): Call\n\tCreate_Restricted_Task_Sequential in sequential case.\n\n2012-11-06  Hristian Kirtchev  <kirtchev@adacore.com>\n\n\t* exp_prag.adb (Expand_Pragma_Loop_Assertion): Do not rewrite the\n\tpragma into a null statement as its presence is desirable in -gnatG\n\toutput.\n\nFrom-SVN: r193219", "tree": {"sha": "9606de64103b67697773916e577a9e5e46262aad", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9606de64103b67697773916e577a9e5e46262aad"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/fb174746b279e870f087a666e5e1ea8ff8c886f7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fb174746b279e870f087a666e5e1ea8ff8c886f7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fb174746b279e870f087a666e5e1ea8ff8c886f7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fb174746b279e870f087a666e5e1ea8ff8c886f7/comments", "author": null, "committer": null, "parents": [{"sha": "2780d17486479a152560b6173434199dcc685727", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2780d17486479a152560b6173434199dcc685727", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2780d17486479a152560b6173434199dcc685727"}], "stats": {"total": 51, "additions": 35, "deletions": 16}, "files": [{"sha": "57b91bdb9ba24a42c8bd36003b5ad92d4ee1d566", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fb174746b279e870f087a666e5e1ea8ff8c886f7/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fb174746b279e870f087a666e5e1ea8ff8c886f7/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=fb174746b279e870f087a666e5e1ea8ff8c886f7", "patch": "@@ -1,3 +1,18 @@\n+2012-11-06  Yannick Moy  <moy@adacore.com>\n+\n+\t* s-bignum.adb (Div_Rem): Fix another bug in step D3.\n+\n+2012-11-06  Tristan Gingold  <gingold@adacore.com>\n+\n+\t* s-tarest.adb (Create_Restricted_Task): Call\n+\tCreate_Restricted_Task_Sequential in sequential case.\n+\n+2012-11-06  Hristian Kirtchev  <kirtchev@adacore.com>\n+\n+\t* exp_prag.adb (Expand_Pragma_Loop_Assertion): Do not rewrite the\n+\tpragma into a null statement as its presence is desirable in -gnatG\n+\toutput.\n+\n 2012-11-06  Ed Schonberg  <schonberg@adacore.com>\n \n \t* sem_ch8.adb (Check_Constrained_Object): Do nothing if the"}, {"sha": "c41cc815cb52e7828792b94cfa365aed9528c971", "filename": "gcc/ada/exp_prag.adb", "status": "modified", "additions": 3, "deletions": 4, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fb174746b279e870f087a666e5e1ea8ff8c886f7/gcc%2Fada%2Fexp_prag.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fb174746b279e870f087a666e5e1ea8ff8c886f7/gcc%2Fada%2Fexp_prag.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_prag.adb?ref=fb174746b279e870f087a666e5e1ea8ff8c886f7", "patch": "@@ -1177,11 +1177,10 @@ package body Exp_Prag is\n                  Expression => New_Reference_To (Standard_True, Loc)))));\n       end if;\n \n-      --  The original pragma has been transformed into a complex sequence of\n-      --  statements and does not need to remain in the tree.\n+      --  Note: the pragma has been completely transformed into a sequence of\n+      --  corresponding declarations and statements. We leave it in the tree\n+      --  for documentation purposes. It will be ignored by the backend.\n \n-      Rewrite (N, Make_Null_Statement (Loc));\n-      Analyze (N);\n    end Expand_Pragma_Loop_Assertion;\n \n    --------------------------------"}, {"sha": "7cafbf3d5ae72a35c227e5e107659c19bebc10cf", "filename": "gcc/ada/s-bignum.adb", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fb174746b279e870f087a666e5e1ea8ff8c886f7/gcc%2Fada%2Fs-bignum.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fb174746b279e870f087a666e5e1ea8ff8c886f7/gcc%2Fada%2Fs-bignum.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-bignum.adb?ref=fb174746b279e870f087a666e5e1ea8ff8c886f7", "patch": "@@ -859,6 +859,8 @@ package body System.Bignums is\n             --  This had a bug not discovered till 1995, see Vol 2 errata:\n             --  http://www-cs-faculty.stanford.edu/~uno/err2-2e.ps.gz. Under\n             --  rare circumstances the expression in the test could overflow.\n+            --  This version was further corrected in 2005, see Vol 2 errata:\n+            --  http://www-cs-faculty.stanford.edu/~uno/all2-pre.ps.gz.\n             --  The code below is the fixed version of this step.\n \n             --  D3. [Calculate qhat.] Set qhat to (uj,uj+1)/v1 and rhat to\n@@ -868,13 +870,13 @@ package body System.Bignums is\n             qhat := temp / DD (v1);\n             rhat := temp mod DD (v1);\n \n-            --  D3 (continued). Now test if qhat = b or v2*qhat > (rhat,uj+2):\n+            --  D3 (continued). Now test if qhat >= b or v2*qhat > (rhat,uj+2):\n             --  if so, decrease qhat by 1, increase rhat by v1, and repeat this\n             --  test if rhat < b. [The test on v2 determines at at high speed\n             --  most of the cases in which the trial value qhat is one too\n             --  large, and eliminates all cases where qhat is two too large.]\n \n-            while qhat = b\n+            while qhat >= b\n               or else DD (v2) * qhat > LSD (rhat) & u (j + 2)\n             loop\n                qhat := qhat - 1;"}, {"sha": "c765cc0789dc081092f54a0ced76aaacf9109c9e", "filename": "gcc/ada/s-tarest.adb", "status": "modified", "additions": 13, "deletions": 10, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fb174746b279e870f087a666e5e1ea8ff8c886f7/gcc%2Fada%2Fs-tarest.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fb174746b279e870f087a666e5e1ea8ff8c886f7/gcc%2Fada%2Fs-tarest.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-tarest.adb?ref=fb174746b279e870f087a666e5e1ea8ff8c886f7", "patch": "@@ -621,21 +621,24 @@ package body System.Tasking.Restricted.Stages is\n       Created_Task  : Task_Id)\n    is\n    begin\n-      Create_Restricted_Task\n-        (Priority, Stack_Address, Size, Task_Info, CPU, State,\n-         Discriminants, Elaborated, Task_Image, Created_Task);\n-\n-      --  Append this task to the activation chain\n-\n       if Partition_Elaboration_Policy = 'S' then\n \n-         --  In fact the elaboration policy is sequential, add this task to\n-         --  the global activation chain to defer its activation.\n+         --  A unit may have been compiled without partition elaboration\n+         --  policy, and in this case the compiler will emit calls for the\n+         --  default policy (concurrent). But if the partition policy is\n+         --  sequential, activation must be deferred.\n \n-         Created_Task.Common.Activation_Link := Tasks_Activation_Chain;\n-         Tasks_Activation_Chain := Created_Task;\n+         Create_Restricted_Task_Sequential\n+           (Priority, Stack_Address, Size, Task_Info, CPU, State,\n+            Discriminants, Elaborated, Task_Image, Created_Task);\n \n       else\n+         Create_Restricted_Task\n+           (Priority, Stack_Address, Size, Task_Info, CPU, State,\n+            Discriminants, Elaborated, Task_Image, Created_Task);\n+\n+         --  Append this task to the activation chain\n+\n          Created_Task.Common.Activation_Link := Chain.T_ID;\n          Chain.T_ID := Created_Task;\n       end if;"}]}