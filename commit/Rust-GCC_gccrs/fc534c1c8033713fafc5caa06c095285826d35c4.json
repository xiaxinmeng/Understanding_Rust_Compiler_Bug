{"sha": "fc534c1c8033713fafc5caa06c095285826d35c4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZmM1MzRjMWM4MDMzNzEzZmFmYzVjYWEwNmMwOTUyODU4MjZkMzVjNA==", "commit": {"author": {"name": "Ed Schonberg", "email": "schonberg@adacore.com", "date": "2008-04-08T06:49:26Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2008-04-08T06:49:26Z"}, "message": "exp_aggr.adb (Static_Array_Aggregate): Use Max_Aggr_Size to determine whether an array aggregate with static bounds...\n\n2008-04-08  Ed Schonberg  <schonberg@adacore.com>\n\n\t* exp_aggr.adb (Static_Array_Aggregate): Use Max_Aggr_Size to determine\n\twhether an array aggregate with static bounds and scalar components\n\tshould be expanded into a static constant.\n\nFrom-SVN: r134025", "tree": {"sha": "36d245f088a115a8d65e90355e6a66a55c481816", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/36d245f088a115a8d65e90355e6a66a55c481816"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/fc534c1c8033713fafc5caa06c095285826d35c4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fc534c1c8033713fafc5caa06c095285826d35c4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fc534c1c8033713fafc5caa06c095285826d35c4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fc534c1c8033713fafc5caa06c095285826d35c4/comments", "author": {"login": "Edschonberg", "id": 6352375, "node_id": "MDQ6VXNlcjYzNTIzNzU=", "avatar_url": "https://avatars.githubusercontent.com/u/6352375?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Edschonberg", "html_url": "https://github.com/Edschonberg", "followers_url": "https://api.github.com/users/Edschonberg/followers", "following_url": "https://api.github.com/users/Edschonberg/following{/other_user}", "gists_url": "https://api.github.com/users/Edschonberg/gists{/gist_id}", "starred_url": "https://api.github.com/users/Edschonberg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Edschonberg/subscriptions", "organizations_url": "https://api.github.com/users/Edschonberg/orgs", "repos_url": "https://api.github.com/users/Edschonberg/repos", "events_url": "https://api.github.com/users/Edschonberg/events{/privacy}", "received_events_url": "https://api.github.com/users/Edschonberg/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "2dcf2584dbcefb4c3148a2c4ec776598d2004c1c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2dcf2584dbcefb4c3148a2c4ec776598d2004c1c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2dcf2584dbcefb4c3148a2c4ec776598d2004c1c"}], "stats": {"total": 18, "additions": 9, "deletions": 9}, "files": [{"sha": "c815369e821ddaa2338411b77e99ce3109259838", "filename": "gcc/ada/exp_aggr.adb", "status": "modified", "additions": 9, "deletions": 9, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fc534c1c8033713fafc5caa06c095285826d35c4/gcc%2Fada%2Fexp_aggr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fc534c1c8033713fafc5caa06c095285826d35c4/gcc%2Fada%2Fexp_aggr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_aggr.adb?ref=fc534c1c8033713fafc5caa06c095285826d35c4", "patch": "@@ -300,7 +300,7 @@ package body Exp_Aggr is\n       Hiv  : Uint;\n \n       --  The following constant determines the maximum size of an\n-      --  aggregate produced by converting named to positional\n+      --  array aggregate produced by converting named to positional\n       --  notation (e.g. from others clauses). This avoids running\n       --  away with attempts to convert huge aggregates, which hit\n       --  memory limits in the backend.\n@@ -1170,9 +1170,9 @@ package body Exp_Aggr is\n             --  If the component is itself an array of controlled types, whose\n             --  value is given by a sub-aggregate, then the attach calls have\n             --  been generated when individual subcomponent are assigned, and\n-            --  and must not be done again to prevent malformed finalization\n-            --  chains (see comments above, concerning the creation of a block\n-            --  to hold inner finalization actions).\n+            --  must not be done again to prevent malformed finalization chains\n+            --  (see comments above, concerning the creation of a block to hold\n+            --  inner finalization actions).\n \n             if Present (Comp_Type)\n               and then Controlled_Type (Comp_Type)\n@@ -1677,10 +1677,6 @@ package body Exp_Aggr is\n    -- Build_Record_Aggr_Code --\n    ----------------------------\n \n-   ----------------------------\n-   -- Build_Record_Aggr_Code --\n-   ----------------------------\n-\n    function Build_Record_Aggr_Code\n      (N                             : Node_Id;\n       Typ                           : Entity_Id;\n@@ -6350,7 +6346,8 @@ package body Exp_Aggr is\n             else\n                --  The aggregate is static if all components are literals, or\n                --  else all its components are static aggregates for the\n-               --  component type.\n+               --  component type. We also limit the size of a static aggregate\n+               --  to prevent runaway static expressions.\n \n                if Is_Array_Type (Comp_Type)\n                  or else Is_Record_Type (Comp_Type)\n@@ -6364,6 +6361,9 @@ package body Exp_Aggr is\n \n                elsif Nkind (Expression (Expr)) /= N_Integer_Literal then\n                   return False;\n+\n+               elsif not Aggr_Size_OK (Typ) then\n+                  return False;\n                end if;\n \n                --  Create a positional aggregate with the right number of"}]}