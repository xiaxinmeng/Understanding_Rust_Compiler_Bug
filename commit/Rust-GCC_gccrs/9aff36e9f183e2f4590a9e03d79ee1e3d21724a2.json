{"sha": "9aff36e9f183e2f4590a9e03d79ee1e3d21724a2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OWFmZjM2ZTlmMTgzZTJmNDU5MGE5ZTAzZDc5ZWUxZTNkMjE3MjRhMg==", "commit": {"author": {"name": "Robert Dewar", "email": "dewar@adacore.com", "date": "2011-08-05T13:35:04Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2011-08-05T13:35:04Z"}, "message": "exp_ch7.ads, [...]: Minor reformatting.\n\n2011-08-05  Robert Dewar  <dewar@adacore.com>\n\n\t* exp_ch7.ads, sem_type.adb, make.adb, sem_prag.adb, sem_util.adb,\n\tsem_util.ads, sem_attr.adb, restrict.ads, sem_ch6.adb, prj-conf.adb,\n\tprj-conf.ads, s-atocou.ads, s-atocou.adb, s-atocou-x86.adb,\n\ts-atocou-builtin.adb: Minor reformatting.\n\nFrom-SVN: r177433", "tree": {"sha": "ceb05eff07864148731708854889873363c69eb4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ceb05eff07864148731708854889873363c69eb4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9aff36e9f183e2f4590a9e03d79ee1e3d21724a2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9aff36e9f183e2f4590a9e03d79ee1e3d21724a2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9aff36e9f183e2f4590a9e03d79ee1e3d21724a2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9aff36e9f183e2f4590a9e03d79ee1e3d21724a2/comments", "author": null, "committer": null, "parents": [{"sha": "406935b64c887e2e7bb2882f4db5d2fa2e451b73", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/406935b64c887e2e7bb2882f4db5d2fa2e451b73", "html_url": "https://github.com/Rust-GCC/gccrs/commit/406935b64c887e2e7bb2882f4db5d2fa2e451b73"}], "stats": {"total": 167, "additions": 97, "deletions": 70}, "files": [{"sha": "82d1301481b4c382feba4e4629267384ea96aec6", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9aff36e9f183e2f4590a9e03d79ee1e3d21724a2/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9aff36e9f183e2f4590a9e03d79ee1e3d21724a2/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=9aff36e9f183e2f4590a9e03d79ee1e3d21724a2", "patch": "@@ -1,3 +1,10 @@\n+2011-08-05  Robert Dewar  <dewar@adacore.com>\n+\n+\t* exp_ch7.ads, sem_type.adb, make.adb, sem_prag.adb, sem_util.adb,\n+\tsem_util.ads, sem_attr.adb, restrict.ads, sem_ch6.adb, prj-conf.adb,\n+\tprj-conf.ads, s-atocou.ads, s-atocou.adb, s-atocou-x86.adb,\n+\ts-atocou-builtin.adb: Minor reformatting.\n+\n 2011-08-05  Yannick Moy  <moy@adacore.com>\n \n \t* exp_ch7.adb (Establish_Transient_Scope): in formal verification mode,"}, {"sha": "4b937d8a7c65d4b2dda7dedf21c1eb910af3e453", "filename": "gcc/ada/exp_ch7.ads", "status": "modified", "additions": 3, "deletions": 4, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9aff36e9f183e2f4590a9e03d79ee1e3d21724a2/gcc%2Fada%2Fexp_ch7.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9aff36e9f183e2f4590a9e03d79ee1e3d21724a2/gcc%2Fada%2Fexp_ch7.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch7.ads?ref=9aff36e9f183e2f4590a9e03d79ee1e3d21724a2", "patch": "@@ -94,10 +94,9 @@ package Exp_Ch7 is\n \n    function CW_Or_Has_Controlled_Part (T : Entity_Id) return Boolean;\n    --  True if T is a class-wide type, or if it has controlled parts (\"part\"\n-   --  means T or any of its subcomponents). This is the same as\n-   --  Needs_Finalization, except when pragma Restrictions (No_Finalization)\n-   --  applies, in which case we know that class-wide objects do not contain\n-   --  controlled parts.\n+   --  means T or any of its subcomponents). Same as Needs_Finalization, except\n+   --  when pragma Restrictions (No_Finalization) applies, in which case we\n+   --  know that class-wide objects do not contain controlled parts.\n \n    function Get_Global_Pool_For_Access_Type (T : Entity_Id) return Entity_Id;\n    --  Return the pool id for access type T.  This is generally the node"}, {"sha": "b25c220aa8d6a8829f8bc05637290f7c819562c5", "filename": "gcc/ada/make.adb", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9aff36e9f183e2f4590a9e03d79ee1e3d21724a2/gcc%2Fada%2Fmake.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9aff36e9f183e2f4590a9e03d79ee1e3d21724a2/gcc%2Fada%2Fmake.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fmake.adb?ref=9aff36e9f183e2f4590a9e03d79ee1e3d21724a2", "patch": "@@ -4874,9 +4874,8 @@ package body Make is\n \n       --  If the objects were up-to-date check if the executable file is also\n       --  up-to-date. For now always bind and link on the JVM since there is\n-      --  currently no simple way to check whether objects are up-to-date wrt\n-      --  the executable. Similarly in CodePeer mode where there is no\n-      --  executable.\n+      --  currently no simple way to check whether objects are up to date wrt\n+      --  the executable. Same in CodePeer mode where there is no executable.\n \n       if Targparm.VM_Target /= JVM_Target\n         and then not CodePeer_Mode\n@@ -7833,6 +7832,8 @@ package body Make is\n             Operating_Mode           := Check_Semantics;\n             Check_Object_Consistency := False;\n \n+            --  Comment needed here, what is going on???\n+\n             if Argv'Last >= 7 and then Argv (7) = 'C' then\n                CodePeer_Mode := True;\n             else"}, {"sha": "2fa66ac44965caa6828a2a731d79c49f9ccf1a52", "filename": "gcc/ada/prj-conf.adb", "status": "modified", "additions": 30, "deletions": 29, "changes": 59, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9aff36e9f183e2f4590a9e03d79ee1e3d21724a2/gcc%2Fada%2Fprj-conf.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9aff36e9f183e2f4590a9e03d79ee1e3d21724a2/gcc%2Fada%2Fprj-conf.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-conf.adb?ref=9aff36e9f183e2f4590a9e03d79ee1e3d21724a2", "patch": "@@ -911,7 +911,7 @@ package body Prj.Conf is\n \n          if Subdirs /= null then\n             Add_Char_To_Name_Buffer (Directory_Separator);\n-            Add_Str_To_Name_Buffer (Subdirs.all);\n+            Add_Str_To_Name_Buffer  (Subdirs.all);\n          end if;\n \n          for J in 1 .. Name_Len loop\n@@ -924,9 +924,8 @@ package body Prj.Conf is\n             Obj_Dir         : constant String := Name_Buffer (1 .. Name_Len);\n             Config_Switches : Argument_List_Access;\n             Args            : Argument_List (1 .. 5);\n-            Arg_Last         : Positive;\n-\n-            Obj_Dir_Exists : Boolean := True;\n+            Arg_Last        : Positive;\n+            Obj_Dir_Exists  : Boolean := True;\n \n          begin\n             --  Check if the object directory exists. If Setup_Projects is True\n@@ -958,11 +957,13 @@ package body Prj.Conf is\n                   when Error =>\n                      Raise_Invalid_Config\n                        (\"object directory \" & Obj_Dir & \" does not exist\");\n+\n                   when Warning =>\n                      Prj.Err.Error_Msg\n                        (Env.Flags,\n                         \"?object directory \" & Obj_Dir & \" does not exist\");\n                      Obj_Dir_Exists := False;\n+\n                   when Silent =>\n                      null;\n                end case;\n@@ -974,7 +975,8 @@ package body Prj.Conf is\n             if RTS_Languages.Get_First = No_Name then\n                declare\n                   Builder : constant Package_Id :=\n-                    Value_Of (Name_Builder, Project.Decl.Packages, Shared);\n+                              Value_Of\n+                                (Name_Builder, Project.Decl.Packages, Shared);\n                   Switch_Array_Id : Array_Element_Id;\n \n                   procedure Check_RTS_Switches;\n@@ -988,17 +990,18 @@ package body Prj.Conf is\n                   procedure Check_RTS_Switches is\n                      Switch_Array : Array_Element;\n \n-                     Switch_List   : String_List_Id := Nil_String;\n-                     Switch : String_Element;\n+                     Switch_List  : String_List_Id := Nil_String;\n+                     Switch       : String_Element;\n+\n+                     Lang         : Name_Id;\n+                     Lang_Last    : Positive;\n \n-                     Lang      : Name_Id;\n-                     Lang_Last : Positive;\n                   begin\n                      while Switch_Array_Id /= No_Array_Element loop\n                         Switch_Array :=\n                           Shared.Array_Elements.Table (Switch_Array_Id);\n-                           Switch_List := Switch_Array.Value.Values;\n \n+                        Switch_List := Switch_Array.Value.Values;\n                         while Switch_List /= Nil_String loop\n                            Switch :=\n                              Shared.String_Elements.Table (Switch_List);\n@@ -1027,23 +1030,21 @@ package body Prj.Conf is\n                                        Lang_Last := Lang_Last + 1;\n                                     end loop;\n \n-                                    if\n-                                      Name_Buffer (Lang_Last + 1) = '='\n-                                    then\n+                                    if Name_Buffer (Lang_Last + 1) = '=' then\n                                        declare\n                                           RTS : constant String :=\n-                                            Name_Buffer (Lang_Last + 2 ..\n-                                                           Name_Len);\n+                                                  Name_Buffer (Lang_Last + 2 ..\n+                                                               Name_Len);\n                                        begin\n-                                          Name_Buffer (1 .. Lang_Last - 6)\n-                                            := Name_Buffer (7 .. Lang_Last);\n+                                          Name_Buffer (1 .. Lang_Last - 6) :=\n+                                            Name_Buffer (7 .. Lang_Last);\n                                           Name_Len := Lang_Last - 6;\n                                           To_Lower\n                                             (Name_Buffer (1 .. Name_Len));\n                                           Lang := Name_Find;\n \n-                                          if\n-                                          not Runtime_Name_Set_For (Lang)\n+                                          if not\n+                                            Runtime_Name_Set_For (Lang)\n                                           then\n                                              Set_Runtime_For (Lang, RTS);\n                                           end if;\n@@ -1245,8 +1246,8 @@ package body Prj.Conf is\n       --  If the config file is not auto-generated, warn if there is any --RTS\n       --  switch on the command line.\n \n-      elsif RTS_Languages.Get_First /= No_Name and then\n-        Opt.Warning_Mode /= Opt.Suppress\n+      elsif RTS_Languages.Get_First /= No_Name\n+        and then Opt.Warning_Mode /= Opt.Suppress\n       then\n          Write_Line\n            (\"warning: --RTS is taken into account only in auto-configuration\");\n@@ -1266,14 +1267,14 @@ package body Prj.Conf is\n \n       elsif Config_File_Path /= null then\n          Prj.Part.Parse\n-           (In_Tree                => Project_Node_Tree,\n-            Project                => Config_Project_Node,\n-            Project_File_Name      => Config_File_Path.all,\n-            Errout_Handling        => Prj.Part.Finalize_If_Error,\n-            Packages_To_Check      => Packages_To_Check,\n-            Current_Directory      => Current_Directory,\n-            Is_Config_File         => True,\n-            Env                    => Env);\n+           (In_Tree           => Project_Node_Tree,\n+            Project           => Config_Project_Node,\n+            Project_File_Name => Config_File_Path.all,\n+            Errout_Handling   => Prj.Part.Finalize_If_Error,\n+            Packages_To_Check => Packages_To_Check,\n+            Current_Directory => Current_Directory,\n+            Is_Config_File    => True,\n+            Env               => Env);\n       else\n          Config_Project_Node := Empty_Node;\n       end if;"}, {"sha": "bc672cf868c22ee3b4ce22e65cc60f37362ceaf3", "filename": "gcc/ada/prj-conf.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9aff36e9f183e2f4590a9e03d79ee1e3d21724a2/gcc%2Fada%2Fprj-conf.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9aff36e9f183e2f4590a9e03d79ee1e3d21724a2/gcc%2Fada%2Fprj-conf.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-conf.ads?ref=9aff36e9f183e2f4590a9e03d79ee1e3d21724a2", "patch": "@@ -187,6 +187,6 @@ package Prj.Conf is\n    --  runtime was specified for the language using option --RTS.\n \n    function Runtime_Name_Set_For (Language : Name_Id) return Boolean;\n-   --  Returns True only of Set_Runtime_For has been called for the Language\n+   --  Returns True only if Set_Runtime_For has been called for the Language\n \n end Prj.Conf;"}, {"sha": "f022bceccc85118d36fc6b7f1ca67bf10a5aaa68", "filename": "gcc/ada/restrict.ads", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9aff36e9f183e2f4590a9e03d79ee1e3d21724a2/gcc%2Fada%2Frestrict.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9aff36e9f183e2f4590a9e03d79ee1e3d21724a2/gcc%2Fada%2Frestrict.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Frestrict.ads?ref=9aff36e9f183e2f4590a9e03d79ee1e3d21724a2", "patch": "@@ -206,6 +206,11 @@ package Restrict is\n    -- Subprograms --\n    -----------------\n \n+   --  Note: several of these subprograms can generate error messages (e.g.\n+   --  Check_Restriction). These routines should be called in the analyzer\n+   --  rather than the expander, so that the associated error messages are\n+   --  correctly generated in semantics only (-gnatc) mode.\n+\n    function Abort_Allowed return Boolean;\n    pragma Inline (Abort_Allowed);\n    --  Tests to see if abort is allowed by the current restrictions settings."}, {"sha": "8ec851e8f20096a02069d622fce0c138567c4675", "filename": "gcc/ada/s-atocou-builtin.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9aff36e9f183e2f4590a9e03d79ee1e3d21724a2/gcc%2Fada%2Fs-atocou-builtin.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9aff36e9f183e2f4590a9e03d79ee1e3d21724a2/gcc%2Fada%2Fs-atocou-builtin.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-atocou-builtin.adb?ref=9aff36e9f183e2f4590a9e03d79ee1e3d21724a2", "patch": "@@ -29,7 +29,7 @@\n --                                                                          --\n ------------------------------------------------------------------------------\n \n---  This package provides implementation of atomic counter for platforms where\n+--  This package implements Atomic_Counter operatiobns for platforms where\n --  GCC supports __sync_add_and_fetch_4 and __sync_sub_and_fetch_4 builtins.\n \n package body System.Atomic_Counters is"}, {"sha": "1625ebaecbe316955479807df8cf34c5962f42f1", "filename": "gcc/ada/s-atocou-x86.adb", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9aff36e9f183e2f4590a9e03d79ee1e3d21724a2/gcc%2Fada%2Fs-atocou-x86.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9aff36e9f183e2f4590a9e03d79ee1e3d21724a2/gcc%2Fada%2Fs-atocou-x86.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-atocou-x86.adb?ref=9aff36e9f183e2f4590a9e03d79ee1e3d21724a2", "patch": "@@ -30,13 +30,16 @@\n ------------------------------------------------------------------------------\n \n --  This implementation of the package for x86 processor. GCC can't generate\n---  code for atomic builtins for 386 CPU there only increment/decrement\n---  instructions are supported, thus implementaton use assembler code.\n+--  code for atomic builtins for 386 CPU. Only increment/decrement instructions\n+--  are supported, thus this implementaton uses machine code insertions to\n+--  access the necessary instructions.\n \n with System.Machine_Code;\n \n package body System.Atomic_Counters is\n \n+   --  Add comments showing in normal asm language what we generate???\n+\n    ---------------\n    -- Decrement --\n    ---------------"}, {"sha": "8f2ca01b6d920b4e3ac84aa06b2cd724e349dce7", "filename": "gcc/ada/s-atocou.adb", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9aff36e9f183e2f4590a9e03d79ee1e3d21724a2/gcc%2Fada%2Fs-atocou.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9aff36e9f183e2f4590a9e03d79ee1e3d21724a2/gcc%2Fada%2Fs-atocou.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-atocou.adb?ref=9aff36e9f183e2f4590a9e03d79ee1e3d21724a2", "patch": "@@ -29,7 +29,12 @@\n --                                                                          --\n ------------------------------------------------------------------------------\n \n---  This is dummy version of the package.\n+--  This is dummy version of the package, for use on platforms where this\n+--  capability is not supported. Any use of any of the routines in this\n+--  package will raise Program_Error.\n+\n+--  Why don't we use pragma Unimplemented_Unit in a dummy spec, this would\n+--  seem much more useful than raising an exception at run time ???\n \n package body System.Atomic_Counters is\n "}, {"sha": "5efcb3548477d74025e0f19101ba4697e0b87edd", "filename": "gcc/ada/s-atocou.ads", "status": "modified", "additions": 7, "deletions": 4, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9aff36e9f183e2f4590a9e03d79ee1e3d21724a2/gcc%2Fada%2Fs-atocou.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9aff36e9f183e2f4590a9e03d79ee1e3d21724a2/gcc%2Fada%2Fs-atocou.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-atocou.ads?ref=9aff36e9f183e2f4590a9e03d79ee1e3d21724a2", "patch": "@@ -29,19 +29,22 @@\n --                                                                          --\n ------------------------------------------------------------------------------\n \n---  This package provides atomic counter on platforms where it is supported.\n+--  This package provides atomic counter on platforms where it is supported:\n+--    ??? Please provide a list of such platforms\n+\n+--  Why isn't this package available to application programs???\n \n package System.Atomic_Counters is\n \n    pragma Preelaborate;\n \n    type Atomic_Counter is limited private;\n    --  Type for atomic counter objects. Note, initial value of the counter is\n-   --  one. This allows to use atomic counter as member of record types when\n-   --  object of these types are created at library level on preelaboratable\n+   --  one. This allows using an atomic counter as member of record types when\n+   --  object of these types are created at library level in preelaborable\n    --  compilation units.\n    --\n-   --  Atomic counter is declared as private limited type to provide highest\n+   --  Atomic_Counter is declared as private limited type to provide highest\n    --  level of protection from unexpected use. All available operations are\n    --  declared below, and this set should be as small as possible.\n "}, {"sha": "9ee6a5fca29a1ec004c3a59d5971a968d33a71f3", "filename": "gcc/ada/sem_attr.adb", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9aff36e9f183e2f4590a9e03d79ee1e3d21724a2/gcc%2Fada%2Fsem_attr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9aff36e9f183e2f4590a9e03d79ee1e3d21724a2/gcc%2Fada%2Fsem_attr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_attr.adb?ref=9aff36e9f183e2f4590a9e03d79ee1e3d21724a2", "patch": "@@ -1641,9 +1641,11 @@ package body Sem_Attr is\n          if Restriction_Active (No_Default_Stream_Attributes) then\n             declare\n                T : Entity_Id;\n+\n             begin\n                if Nam = TSS_Stream_Input\n-                 or else Nam = TSS_Stream_Read\n+                    or else\n+                  Nam = TSS_Stream_Read\n                then\n                   T :=\n                     Type_Without_Stream_Operation (P_Type, TSS_Stream_Read);"}, {"sha": "5f7b1a79ea34d8eea1657d251c4c1e81ac4410f3", "filename": "gcc/ada/sem_ch6.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9aff36e9f183e2f4590a9e03d79ee1e3d21724a2/gcc%2Fada%2Fsem_ch6.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9aff36e9f183e2f4590a9e03d79ee1e3d21724a2/gcc%2Fada%2Fsem_ch6.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch6.adb?ref=9aff36e9f183e2f4590a9e03d79ee1e3d21724a2", "patch": "@@ -4528,8 +4528,8 @@ package body Sem_Ch6 is\n          elsif Ekind (T) = E_Incomplete_Type and then From_With_Type (T) then\n             Set_Has_Delayed_Freeze (Designator);\n \n-         --  AI05-0151 : incomplete types can now appear in the profile of a\n-         --  subprogram or entry declaration.\n+         --  AI05-0151: In Ada 2012, Incomplete types can appear in the profile\n+         --  of a subprogram or entry declaration.\n \n          elsif Ekind (T) = E_Incomplete_Type\n            and then Ada_Version >= Ada_2012"}, {"sha": "e338b4b70e3a26f7aa35c86cb775b9830dc68637", "filename": "gcc/ada/sem_prag.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9aff36e9f183e2f4590a9e03d79ee1e3d21724a2/gcc%2Fada%2Fsem_prag.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9aff36e9f183e2f4590a9e03d79ee1e3d21724a2/gcc%2Fada%2Fsem_prag.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_prag.adb?ref=9aff36e9f183e2f4590a9e03d79ee1e3d21724a2", "patch": "@@ -5061,7 +5061,7 @@ package body Sem_Prag is\n       begin\n          --  Ignore all Restrictions pragma in CodePeer and ALFA modes\n \n-         if CodePeer_Mode or else ALFA_Mode then\n+         if CodePeer_Mode or ALFA_Mode then\n             return;\n          end if;\n "}, {"sha": "3d99e185f17368d5b607fad24d46e8c99efd365e", "filename": "gcc/ada/sem_type.adb", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9aff36e9f183e2f4590a9e03d79ee1e3d21724a2/gcc%2Fada%2Fsem_type.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9aff36e9f183e2f4590a9e03d79ee1e3d21724a2/gcc%2Fada%2Fsem_type.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_type.adb?ref=9aff36e9f183e2f4590a9e03d79ee1e3d21724a2", "patch": "@@ -1956,9 +1956,9 @@ package body Sem_Type is\n                 (Ada_Version = Ada_83\n                   or else\n                    (Ada_Version >= Ada_2012\n-                      and then\n-                        In_Same_Declaration_List\n-                          (Typ, Unit_Declaration_Node (User_Subp))))\n+                     and then\n+                       In_Same_Declaration_List\n+                         (Typ, Unit_Declaration_Node (User_Subp))))\n             then\n                if It2.Nam = Predef_Subp then\n                   return It1;"}, {"sha": "e910dd33983b207afa70f66dbd447bdcf6b51890", "filename": "gcc/ada/sem_util.adb", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9aff36e9f183e2f4590a9e03d79ee1e3d21724a2/gcc%2Fada%2Fsem_util.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9aff36e9f183e2f4590a9e03d79ee1e3d21724a2/gcc%2Fada%2Fsem_util.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_util.adb?ref=9aff36e9f183e2f4590a9e03d79ee1e3d21724a2", "patch": "@@ -10786,7 +10786,6 @@ package body Sem_Util is\n             while Present (Component)\n               and then Comes_From_Source (Component)\n             loop\n-\n                --  Skip anonymous types generated by constrained components\n \n                if not Is_Type (Component) then\n@@ -12235,10 +12234,12 @@ package body Sem_Util is\n    ------------------------------------\n \n    function Type_Without_Stream_Operation\n-     (T : Entity_Id; Op : TSS_Name_Type := TSS_Null) return Entity_Id\n+     (T  : Entity_Id;\n+      Op : TSS_Name_Type := TSS_Null) return Entity_Id\n    is\n-      BT : constant Entity_Id := Base_Type (T);\n+      BT         : constant Entity_Id := Base_Type (T);\n       Op_Missing : Boolean;\n+\n    begin\n       if not Restriction_Active (No_Default_Stream_Attributes) then\n          return Empty;\n@@ -12247,16 +12248,15 @@ package body Sem_Util is\n       if Is_Elementary_Type (T) then\n          if Op = TSS_Null then\n             Op_Missing :=\n-            No (TSS (BT, TSS_Stream_Read))\n-              or else No (TSS (BT, TSS_Stream_Write));\n+              No (TSS (BT, TSS_Stream_Read))\n+                or else No (TSS (BT, TSS_Stream_Write));\n \n          else\n             Op_Missing := No (TSS (BT, Op));\n          end if;\n \n          if Op_Missing then\n             return T;\n-\n          else\n             return Empty;\n          end if;\n@@ -12273,6 +12273,7 @@ package body Sem_Util is\n             Comp := First_Component (T);\n             while Present (Comp) loop\n                C_Typ := Type_Without_Stream_Operation (Etype (Comp), Op);\n+\n                if Present (C_Typ) then\n                   return C_Typ;\n                end if;\n@@ -12287,7 +12288,6 @@ package body Sem_Util is\n         and then Present (Full_View (T))\n       then\n          return Type_Without_Stream_Operation (Full_View (T), Op);\n-\n       else\n          return Empty;\n       end if;"}, {"sha": "1b9babda9444d5c425a5ed499b2abd6dad4022d9", "filename": "gcc/ada/sem_util.ads", "status": "modified", "additions": 12, "deletions": 11, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9aff36e9f183e2f4590a9e03d79ee1e3d21724a2/gcc%2Fada%2Fsem_util.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9aff36e9f183e2f4590a9e03d79ee1e3d21724a2/gcc%2Fada%2Fsem_util.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_util.ads?ref=9aff36e9f183e2f4590a9e03d79ee1e3d21724a2", "patch": "@@ -25,14 +25,14 @@\n \n --  Package containing utility procedures used throughout the semantics\n \n-with Einfo;  use Einfo;\n+with Einfo;   use Einfo;\n with Exp_Tss; use Exp_Tss;\n-with Namet;  use Namet;\n-with Nmake;  use Nmake;\n-with Snames; use Snames;\n-with Types;  use Types;\n-with Uintp;  use Uintp;\n-with Urealp; use Urealp;\n+with Namet;   use Namet;\n+with Nmake;   use Nmake;\n+with Snames;  use Snames;\n+with Types;   use Types;\n+with Uintp;   use Uintp;\n+with Urealp;  use Urealp;\n \n package Sem_Util is\n \n@@ -1379,10 +1379,11 @@ package Sem_Util is\n    --  Return the accessibility level of Typ\n \n    function Type_Without_Stream_Operation\n-     (T : Entity_Id; Op : TSS_Name_Type := TSS_Null) return Entity_Id;\n-   --  AI05-0161 : if the restriction No_Default_Stream_Attributes is active\n-   --  then we cannot generate stream subprograms for composite types with\n-   --  elementary subcomponents that lack user-defined stream subprograms.\n+     (T  : Entity_Id;\n+      Op : TSS_Name_Type := TSS_Null) return Entity_Id;\n+   --  AI05-0161: In Ada 2012, if the restriction No_Default_Stream_Attributes\n+   --  is active then we cannot generate stream subprograms for composite types\n+   --  with elementary subcomponents that lack user-defined stream subprograms.\n    --  This predicate determines whether a type has such an elementary\n    --  subcomponent. If Op is TSS_Null, a type that lacks either Read or Write\n    --  prevents the construction of a composite stream operation. If Op is"}]}