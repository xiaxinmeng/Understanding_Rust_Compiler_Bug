{"sha": "d55c1ffd497193b56ee9f7540d5b0eadf6717c42", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDU1YzFmZmQ0OTcxOTNiNTZlZTlmNzU0MGQ1YjBlYWRmNjcxN2M0Mg==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2019-06-26T08:26:18Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2019-06-26T08:26:18Z"}, "message": "re PR target/90991 (_mm_loadu_ps instrinsic translates to vmovaps in combination with _mm512_insertf32x4)\n\n\tPR target/90991\n\t* config/i386/sse.md\n\t(*<extract_type>_vinsert<shuffletype><extract_suf>_0): Use vmovupd,\n\tvmovups, vmovdqu, vmovdqu32 or vmovdqu64 instead of the aligned\n\tinsns if operands[2] is misaligned_operand.\n\n\t* gcc.target/i386/avx512dq-pr90991-1.c: New test.\n\nFrom-SVN: r272674", "tree": {"sha": "33f8ef728b08279bcf026ded097617d64610277f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/33f8ef728b08279bcf026ded097617d64610277f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d55c1ffd497193b56ee9f7540d5b0eadf6717c42", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d55c1ffd497193b56ee9f7540d5b0eadf6717c42", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d55c1ffd497193b56ee9f7540d5b0eadf6717c42", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d55c1ffd497193b56ee9f7540d5b0eadf6717c42/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "fdfbed383e48f9a6fce6ef1e0e0defea0363ac3f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fdfbed383e48f9a6fce6ef1e0e0defea0363ac3f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fdfbed383e48f9a6fce6ef1e0e0defea0363ac3f"}], "stats": {"total": 86, "additions": 80, "deletions": 6}, "files": [{"sha": "bd65d2a3a43c9ef564b91c791b20053b63a45c79", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d55c1ffd497193b56ee9f7540d5b0eadf6717c42/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d55c1ffd497193b56ee9f7540d5b0eadf6717c42/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=d55c1ffd497193b56ee9f7540d5b0eadf6717c42", "patch": "@@ -1,3 +1,11 @@\n+2019-06-26  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR target/90991\n+\t* config/i386/sse.md\n+\t(*<extract_type>_vinsert<shuffletype><extract_suf>_0): Use vmovupd,\n+\tvmovups, vmovdqu, vmovdqu32 or vmovdqu64 instead of the aligned\n+\tinsns if operands[2] is misaligned_operand.\n+\n 2019-06-26  Li Jia He  <helijia@linux.ibm.com>\n \n \t* config/rs6000/rs6000.h (TARGET_MADDLD): Remove the restriction of"}, {"sha": "29f16bc558f97cc62d784e410e6b6ecaf0a02b7d", "filename": "gcc/config/i386/sse.md", "status": "modified", "additions": 20, "deletions": 6, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d55c1ffd497193b56ee9f7540d5b0eadf6717c42/gcc%2Fconfig%2Fi386%2Fsse.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d55c1ffd497193b56ee9f7540d5b0eadf6717c42/gcc%2Fconfig%2Fi386%2Fsse.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fsse.md?ref=d55c1ffd497193b56ee9f7540d5b0eadf6717c42", "patch": "@@ -13747,15 +13747,29 @@\n   switch (<MODE>mode)\n     {\n     case E_V8DFmode:\n-      return \"vmovapd\\t{%2, %x0|%x0, %2}\";\n+      if (misaligned_operand (operands[2], <ssequartermode>mode))\n+\treturn \"vmovupd\\t{%2, %x0|%x0, %2}\";\n+      else\n+\treturn \"vmovapd\\t{%2, %x0|%x0, %2}\";\n     case E_V16SFmode:\n-      return \"vmovaps\\t{%2, %x0|%x0, %2}\";\n+      if (misaligned_operand (operands[2], <ssequartermode>mode))\n+\treturn \"vmovups\\t{%2, %x0|%x0, %2}\";\n+      else\n+\treturn \"vmovaps\\t{%2, %x0|%x0, %2}\";\n     case E_V8DImode:\n-      return which_alternative == 2 ? \"vmovdqa64\\t{%2, %x0|%x0, %2}\"\n-\t\t\t\t    : \"vmovdqa\\t{%2, %x0|%x0, %2}\";\n+      if (misaligned_operand (operands[2], <ssequartermode>mode))\n+\treturn which_alternative == 2 ? \"vmovdqu64\\t{%2, %x0|%x0, %2}\"\n+\t\t\t\t      : \"vmovdqu\\t{%2, %x0|%x0, %2}\";\n+      else\n+\treturn which_alternative == 2 ? \"vmovdqa64\\t{%2, %x0|%x0, %2}\"\n+\t\t\t\t      : \"vmovdqa\\t{%2, %x0|%x0, %2}\";\n     case E_V16SImode:\n-      return which_alternative == 2 ? \"vmovdqa32\\t{%2, %x0|%x0, %2}\"\n-\t\t\t\t    : \"vmovdqa\\t{%2, %x0|%x0, %2}\";\n+      if (misaligned_operand (operands[2], <ssequartermode>mode))\n+\treturn which_alternative == 2 ? \"vmovdqu32\\t{%2, %x0|%x0, %2}\"\n+\t\t\t\t      : \"vmovdqu\\t{%2, %x0|%x0, %2}\";\n+      else\n+\treturn which_alternative == 2 ? \"vmovdqa32\\t{%2, %x0|%x0, %2}\"\n+\t\t\t\t      : \"vmovdqa\\t{%2, %x0|%x0, %2}\";\n     default:\n       gcc_unreachable ();\n     }"}, {"sha": "a77eb7e04c6a2cae378e86f77806848df3726c58", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d55c1ffd497193b56ee9f7540d5b0eadf6717c42/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d55c1ffd497193b56ee9f7540d5b0eadf6717c42/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=d55c1ffd497193b56ee9f7540d5b0eadf6717c42", "patch": "@@ -1,3 +1,8 @@\n+2019-06-26  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR target/90991\n+\t* gcc.target/i386/avx512dq-pr90991-1.c: New test.\n+\n 2019-06-26  Li Jia He  <helijia@linux.ibm.com>\n \n \t* gcc.target/powerpc/maddld-1.c: New testcase."}, {"sha": "6c968126b7d34081edd2f0b7ba44fb7377626608", "filename": "gcc/testsuite/gcc.target/i386/avx512dq-pr90991-1.c", "status": "added", "additions": 47, "deletions": 0, "changes": 47, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d55c1ffd497193b56ee9f7540d5b0eadf6717c42/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512dq-pr90991-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d55c1ffd497193b56ee9f7540d5b0eadf6717c42/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512dq-pr90991-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512dq-pr90991-1.c?ref=d55c1ffd497193b56ee9f7540d5b0eadf6717c42", "patch": "@@ -0,0 +1,47 @@\n+/* PR target/90991 */\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -mavx512dq -masm=att\" } */\n+/* { dg-final { scan-assembler-times \"vmovaps\\[ \\t]\\+\\\\(\\[^\\n\\r]*\\\\), %xmm0\" 1 } } */\n+/* { dg-final { scan-assembler-times \"vmovapd\\[ \\t]\\+\\\\(\\[^\\n\\r]*\\\\), %xmm0\" 1 } } */\n+/* { dg-final { scan-assembler-times \"vmovdqa\\[ \\t]\\+\\\\(\\[^\\n\\r]*\\\\), %xmm0\" 1 } } */\n+/* { dg-final { scan-assembler-times \"vmovups\\[ \\t]\\+\\\\(\\[^\\n\\r]*\\\\), %xmm0\" 1 } } */\n+/* { dg-final { scan-assembler-times \"vmovupd\\[ \\t]\\+\\\\(\\[^\\n\\r]*\\\\), %xmm0\" 1 } } */\n+/* { dg-final { scan-assembler-times \"vmovdqu\\[ \\t]\\+\\\\(\\[^\\n\\r]*\\\\), %xmm0\" 1 } } */\n+\n+#include <x86intrin.h>\n+\n+__m512\n+f1 (void *a)\n+{\n+  return _mm512_insertf32x4 (_mm512_set1_ps (0.0f), _mm_load_ps (a), 0);\n+}\n+\n+__m512d\n+f2 (void *a)\n+{\n+  return _mm512_insertf64x2 (_mm512_set1_pd (0.0), _mm_load_pd (a), 0);\n+}\n+\n+__m512i\n+f3 (void *a)\n+{\n+  return _mm512_inserti32x4 (_mm512_set1_epi32 (0), _mm_load_si128 (a), 0);\n+}\n+\n+__m512\n+f4 (void *a)\n+{\n+  return _mm512_insertf32x4 (_mm512_set1_ps (0.0f), _mm_loadu_ps (a), 0);\n+}\n+\n+__m512d\n+f5 (void *a)\n+{\n+  return _mm512_insertf64x2 (_mm512_set1_pd (0.0), _mm_loadu_pd (a), 0);\n+}\n+\n+__m512i\n+f6 (void *a)\n+{\n+  return _mm512_inserti32x4 (_mm512_set1_epi32 (0), _mm_loadu_si128 (a), 0);\n+}"}]}