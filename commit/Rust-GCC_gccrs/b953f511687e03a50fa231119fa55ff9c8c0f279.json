{"sha": "b953f511687e03a50fa231119fa55ff9c8c0f279", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Yjk1M2Y1MTE2ODdlMDNhNTBmYTIzMTExOWZhNTVmZjljOGMwZjI3OQ==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2014-11-20T14:41:49Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2014-11-20T14:41:49Z"}, "message": "[multiple changes]\n\n2014-11-20  Robert Dewar  <dewar@adacore.com>\n\n\t* errout.adb (Error_Msg): Don't suppress continuation msgs for\n\trun-time files.\n\t* sem_prag.adb (Analyze_Pragma, case Elaborate): Forbid pragma\n\tElaborate in SPARK mode.\n\n2014-11-20  Yannick Moy  <moy@adacore.com>\n\n\t* gnat_rm.texi: Update GNAT RM with rule about expressions in\n\tUpdate attribute.\n\nFrom-SVN: r217862", "tree": {"sha": "c632340687f94ef43ff9a16a74546795082bd241", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c632340687f94ef43ff9a16a74546795082bd241"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b953f511687e03a50fa231119fa55ff9c8c0f279", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b953f511687e03a50fa231119fa55ff9c8c0f279", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b953f511687e03a50fa231119fa55ff9c8c0f279", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b953f511687e03a50fa231119fa55ff9c8c0f279/comments", "author": null, "committer": null, "parents": [{"sha": "3fbbbd1e874d3dd74ba551b8ff7f1ed04321a3ed", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3fbbbd1e874d3dd74ba551b8ff7f1ed04321a3ed", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3fbbbd1e874d3dd74ba551b8ff7f1ed04321a3ed"}], "stats": {"total": 38, "additions": 28, "deletions": 10}, "files": [{"sha": "0ccf7eae1fd81cc85a116b498ef0c95e9c959629", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b953f511687e03a50fa231119fa55ff9c8c0f279/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b953f511687e03a50fa231119fa55ff9c8c0f279/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=b953f511687e03a50fa231119fa55ff9c8c0f279", "patch": "@@ -1,3 +1,15 @@\n+2014-11-20  Robert Dewar  <dewar@adacore.com>\n+\n+\t* errout.adb (Error_Msg): Don't suppress continuation msgs for\n+\trun-time files.\n+\t* sem_prag.adb (Analyze_Pragma, case Elaborate): Forbid pragma\n+\tElaborate in SPARK mode.\n+\n+2014-11-20  Yannick Moy  <moy@adacore.com>\n+\n+\t* gnat_rm.texi: Update GNAT RM with rule about expressions in\n+\tUpdate attribute.\n+\n 2014-11-20  Thomas Quinot  <quinot@adacore.com>\n \n \t* g-socket.adb (To_Host_Entry): Guard against case of a"}, {"sha": "803e2d4c939576c53474bee1196e0291ec499c1b", "filename": "gcc/ada/errout.adb", "status": "modified", "additions": 6, "deletions": 4, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b953f511687e03a50fa231119fa55ff9c8c0f279/gcc%2Fada%2Ferrout.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b953f511687e03a50fa231119fa55ff9c8c0f279/gcc%2Fada%2Ferrout.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ferrout.adb?ref=b953f511687e03a50fa231119fa55ff9c8c0f279", "patch": "@@ -308,11 +308,13 @@ package body Errout is\n       end if;\n \n       --  If we already have messages, and we are trying to place a message at\n-      --  No_Location or in package Standard, then just ignore the attempt\n-      --  since we assume that what is happening is some cascaded junk. Note\n-      --  that this is safe in the sense that proceeding will surely bomb.\n+      --  No_Location, then just ignore the attempt since we assume that what\n+      --  is happening is some cascaded junk. Note that this is safe in the\n+      --  sense that proceeding will surely bomb. We will also bomb if the flag\n+      --  location is No_Location and we don't have any messages so far, but\n+      --  that is a real bug and a legitimate bomb, so we go ahead.\n \n-      if Flag_Location < First_Source_Ptr\n+      if Flag_Location = No_Location\n         and then Total_Errors_Detected > 0\n       then\n          return;"}, {"sha": "3824ee877fce22bd10dfa0b549f558e1f230f046", "filename": "gcc/ada/gnat_rm.texi", "status": "modified", "additions": 8, "deletions": 6, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b953f511687e03a50fa231119fa55ff9c8c0f279/gcc%2Fada%2Fgnat_rm.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b953f511687e03a50fa231119fa55ff9c8c0f279/gcc%2Fada%2Fgnat_rm.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnat_rm.texi?ref=b953f511687e03a50fa231119fa55ff9c8c0f279", "patch": "@@ -10146,12 +10146,14 @@ INDEX_EXPRESSION_LIST                        ::= ( EXPRESSION @{, EXPRESSION @}\n @end smallexample\n \n @noindent\n-where @code{PREFIX} is the name of an array or record object, and\n-the association list in parentheses does not contain an @code{others}\n-choice. The effect is to yield a copy of the array or record value which\n-is unchanged apart from the components mentioned in the association list, which\n-are changed to the indicated value. The original value of the array or\n-record value is not affected. For example:\n+where @code{PREFIX} is the name of an array or record object, the\n+association list in parentheses does not contain an @code{others}\n+choice and the box symbol @code{<>} may not appear in any\n+expression. The effect is to yield a copy of the array or record value\n+which is unchanged apart from the components mentioned in the\n+association list, which are changed to the indicated value. The\n+original value of the array or record value is not affected. For\n+example:\n \n @smallexample @c ada\n type Arr is Array (1 .. 5) of Integer;"}, {"sha": "94bbf9397e6e67ec5d6110b1a1253ee5b2e0ef53", "filename": "gcc/ada/sem_prag.adb", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b953f511687e03a50fa231119fa55ff9c8c0f279/gcc%2Fada%2Fsem_prag.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b953f511687e03a50fa231119fa55ff9c8c0f279/gcc%2Fada%2Fsem_prag.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_prag.adb?ref=b953f511687e03a50fa231119fa55ff9c8c0f279", "patch": "@@ -13125,6 +13125,8 @@ package body Sem_Prag is\n             Citem : Node_Id;\n \n          begin\n+            SPARK_Msg_N (\"pragma Elaborate not allowed\", N);\n+\n             --  Pragma must be in context items list of a compilation unit\n \n             if not Is_In_Context_Clause then"}]}