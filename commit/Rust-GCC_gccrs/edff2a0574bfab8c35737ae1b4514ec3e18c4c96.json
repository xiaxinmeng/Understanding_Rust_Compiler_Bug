{"sha": "edff2a0574bfab8c35737ae1b4514ec3e18c4c96", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWRmZjJhMDU3NGJmYWI4YzM1NzM3YWUxYjQ1MTRlYzNlMThjNGM5Ng==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2019-03-19T08:11:25Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2019-03-19T08:11:25Z"}, "message": "re PR target/89752 (ICE in emit_move_insn, at expr.c:3723)\n\n\tPR target/89752\n\t* gimplify.c (gimplify_asm_expr): For output argument with\n\tTREE_ADDRESSABLE type, clear allows_reg if it allows memory, otherwise\n\tdiagnose error.\n\n\t* g++.dg/ext/asm15.C: Check for particular diagnostic wording.\n\t* g++.dg/ext/asm16.C: Likewise.\n\t* g++.dg/ext/asm17.C: New test.\n\nFrom-SVN: r269793", "tree": {"sha": "32a9049d66717a59377ced4a235b43f0f9b6ce62", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/32a9049d66717a59377ced4a235b43f0f9b6ce62"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/edff2a0574bfab8c35737ae1b4514ec3e18c4c96", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/edff2a0574bfab8c35737ae1b4514ec3e18c4c96", "html_url": "https://github.com/Rust-GCC/gccrs/commit/edff2a0574bfab8c35737ae1b4514ec3e18c4c96", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/edff2a0574bfab8c35737ae1b4514ec3e18c4c96/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "4f683506df6ae4137d5cd362ccb8a50302cf8a2d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4f683506df6ae4137d5cd362ccb8a50302cf8a2d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4f683506df6ae4137d5cd362ccb8a50302cf8a2d"}], "stats": {"total": 44, "additions": 42, "deletions": 2}, "files": [{"sha": "f96d515a92e86013e89f9f0f0c3e4ac05e616316", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/edff2a0574bfab8c35737ae1b4514ec3e18c4c96/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/edff2a0574bfab8c35737ae1b4514ec3e18c4c96/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=edff2a0574bfab8c35737ae1b4514ec3e18c4c96", "patch": "@@ -1,3 +1,10 @@\n+2019-03-19  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR target/89752\n+\t* gimplify.c (gimplify_asm_expr): For output argument with\n+\tTREE_ADDRESSABLE type, clear allows_reg if it allows memory, otherwise\n+\tdiagnose error.\n+\n 2019-03-19  Eric Botcazou  <ebotcazou@adacore.com>\n \n \tPR rtl-optimization/89753"}, {"sha": "e264700989f0c35dfafa01d440b0720e85771398", "filename": "gcc/gimplify.c", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/edff2a0574bfab8c35737ae1b4514ec3e18c4c96/gcc%2Fgimplify.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/edff2a0574bfab8c35737ae1b4514ec3e18c4c96/gcc%2Fgimplify.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgimplify.c?ref=edff2a0574bfab8c35737ae1b4514ec3e18c4c96", "patch": "@@ -6155,6 +6155,19 @@ gimplify_asm_expr (tree *expr_p, gimple_seq *pre_p, gimple_seq *post_p)\n \t  is_inout = false;\n \t}\n \n+      /* If we can't make copies, we can only accept memory.  */\n+      if (TREE_ADDRESSABLE (TREE_TYPE (TREE_VALUE (link))))\n+\t{\n+\t  if (allows_mem)\n+\t    allows_reg = 0;\n+\t  else\n+\t    {\n+\t      error (\"impossible constraint in %<asm%>\");\n+\t      error (\"non-memory output %d must stay in memory\", i);\n+\t      return GS_ERROR;\n+\t    }\n+\t}\n+\n       if (!allows_reg && allows_mem)\n \tmark_addressable (TREE_VALUE (link));\n "}, {"sha": "86be3ca10601c2d52cc229dee5b25cda8dba5abc", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/edff2a0574bfab8c35737ae1b4514ec3e18c4c96/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/edff2a0574bfab8c35737ae1b4514ec3e18c4c96/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=edff2a0574bfab8c35737ae1b4514ec3e18c4c96", "patch": "@@ -1,3 +1,10 @@\n+2019-03-19  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR target/89752\n+\t* g++.dg/ext/asm15.C: Check for particular diagnostic wording.\n+\t* g++.dg/ext/asm16.C: Likewise.\n+\t* g++.dg/ext/asm17.C: New test.\n+\n 2019-03-19  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* c-c++-common/unroll-7.c: New test."}, {"sha": "6c6f3dfc3db3b8adee6a1f604e754376ed5c87bc", "filename": "gcc/testsuite/g++.dg/ext/asm15.C", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/edff2a0574bfab8c35737ae1b4514ec3e18c4c96/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fasm15.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/edff2a0574bfab8c35737ae1b4514ec3e18c4c96/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fasm15.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fasm15.C?ref=edff2a0574bfab8c35737ae1b4514ec3e18c4c96", "patch": "@@ -6,5 +6,6 @@ struct S { S (); ~S (); int s; };\n void\n foo (S &s)\n {\n-  __asm volatile (\"\" : \"+r\" (s) : : \"memory\");\t// { dg-error \"\" }\n+  __asm volatile (\"\" : \"+r\" (s) : : \"memory\");\t// { dg-error \"impossible constraint\" }\n+\t\t\t\t\t\t// { dg-error \"must stay in memory\" \"\" { target *-*-* } .-1 }\n }"}, {"sha": "9ebb4dc15f9a45ffada74c9dabc8822f9c6fcb44", "filename": "gcc/testsuite/g++.dg/ext/asm16.C", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/edff2a0574bfab8c35737ae1b4514ec3e18c4c96/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fasm16.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/edff2a0574bfab8c35737ae1b4514ec3e18c4c96/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fasm16.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fasm16.C?ref=edff2a0574bfab8c35737ae1b4514ec3e18c4c96", "patch": "@@ -6,5 +6,6 @@ struct S { S (); ~S (); int s[64]; } s;\n void\n foo ()\n {\n-  __asm volatile (\"\" : \"=r\" (s) : : \"memory\");\t// { dg-error \"\" }\n+  __asm volatile (\"\" : \"=r\" (s) : : \"memory\");\t// { dg-error \"impossible constraint\" }\n+\t\t\t\t\t\t// { dg-error \"must stay in memory\" \"\" { target *-*-* } .-1 }\n }"}, {"sha": "9e7de37013e3b73dfdfd328d10bd51708c754021", "filename": "gcc/testsuite/g++.dg/ext/asm17.C", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/edff2a0574bfab8c35737ae1b4514ec3e18c4c96/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fasm17.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/edff2a0574bfab8c35737ae1b4514ec3e18c4c96/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fasm17.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fasm17.C?ref=edff2a0574bfab8c35737ae1b4514ec3e18c4c96", "patch": "@@ -0,0 +1,11 @@\n+// PR target/89752\n+// { dg-do compile }\n+\n+struct A { A (); ~A (); short c; };\n+\n+void\n+foo ()\n+{\n+  A a0, a1;\n+  __asm volatile (\"\" : \"+rm\" (a0), \"+rm\" (a1));\n+}"}]}