{"sha": "b6878188455ecc1deb8a40fd30649710380a82e5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjY4NzgxODg0NTVlY2MxZGViOGE0MGZkMzA2NDk3MTAzODBhODJlNQ==", "commit": {"author": {"name": "Denis Chertykov", "email": "denisc@overta.ru", "date": "2002-10-10T19:45:59Z"}, "committer": {"name": "Denis Chertykov", "email": "denisc@gcc.gnu.org", "date": "2002-10-10T19:45:59Z"}, "message": "ip2k.c (function_epilogue): Optimize stack deallocation.\n\n\t* config/ip2k/ip2k.c (function_epilogue): Optimize stack\n\tdeallocation.\n\t* config/ip2k/libgcc.S: Combine routines used by function\n\tepilogue.\n\nFrom-SVN: r58027", "tree": {"sha": "1782ee906b22c9d264a4b143b433ef0d5e6b0e3b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1782ee906b22c9d264a4b143b433ef0d5e6b0e3b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b6878188455ecc1deb8a40fd30649710380a82e5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b6878188455ecc1deb8a40fd30649710380a82e5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b6878188455ecc1deb8a40fd30649710380a82e5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b6878188455ecc1deb8a40fd30649710380a82e5/comments", "author": null, "committer": null, "parents": [{"sha": "f930bfd067f2cfb739d544a5decec4bc860de28c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f930bfd067f2cfb739d544a5decec4bc860de28c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f930bfd067f2cfb739d544a5decec4bc860de28c"}], "stats": {"total": 144, "additions": 73, "deletions": 71}, "files": [{"sha": "8dadd8ed7c2ae052dc229ac3e58b47451527f7cd", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b6878188455ecc1deb8a40fd30649710380a82e5/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b6878188455ecc1deb8a40fd30649710380a82e5/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=b6878188455ecc1deb8a40fd30649710380a82e5", "patch": "@@ -1,3 +1,10 @@\n+2002-10-10  Denis Chertykov  <denisc@overta.ru>\n+\n+\t* config/ip2k/ip2k.c (function_epilogue): Optimize stack\n+\tdeallocation.\n+\t* config/ip2k/libgcc.S: Combine routines used by function\n+\tepilogue.\n+\n 2002-10-10  Jim Wilson  <wilson@redhat.com>\n \n \t* cse.c (fold_rtx): Don't perform associative optimization for DIV and"}, {"sha": "36c9b5fe4b005c129abe40532b7ade41bdff9cca", "filename": "gcc/config/ip2k/ip2k.c", "status": "modified", "additions": 52, "deletions": 40, "changes": 92, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b6878188455ecc1deb8a40fd30649710380a82e5/gcc%2Fconfig%2Fip2k%2Fip2k.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b6878188455ecc1deb8a40fd30649710380a82e5/gcc%2Fconfig%2Fip2k%2Fip2k.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fip2k%2Fip2k.c?ref=b6878188455ecc1deb8a40fd30649710380a82e5", "patch": "@@ -304,6 +304,8 @@ function_epilogue (file, size)\n   int leaf_func_p;\n   int reg,savelimit;\n   rtx operands[2];\t\t/* Dummy used by OUT_ASn  */\n+  int args_locals_size = current_function_args_size;\n+  int saved_regs_p = 0;\n   int need_ret = 1;\n \n   /* Use this opportunity to reset the reorg flags!  */\n@@ -325,42 +327,54 @@ function_epilogue (file, size)\n   epilogue_size = 0;\n   fprintf (file, \"/* epilogue: frame size=%d */\\n\", size);\n \n+  savelimit = (CHAIN_FRAMES) ? REG_FP : (REG_FP + 2);\n+  for (reg = 0; reg < savelimit; reg++)\n+    if (regs_ever_live[reg] && ! call_used_regs[reg])\n+      {\n+\tsaved_regs_p = 1;\n+\tbreak;\n+      }\n+\n   if (size)\n     {\n-      operands[0] = GEN_INT (size);\n-\n-      switch (size & 0xff)\n+      if (leaf_func_p && !CHAIN_FRAMES && !saved_regs_p\n+\t  && current_function_pops_args)\n+\targs_locals_size = current_function_args_size + size;\n+      else\n \t{\n-\tdefault:\n-\t  OUT_AS2 (mov, w, %L0);\n-\t  OUT_AS2 (add, spl, w);\n-\t  epilogue_size += 4;\n-\t  /* fall-thru  */\n-\tcase 0:\n-\t  break;\n-\tcase 1:\n-\t  OUT_AS1 (inc, spl);\n-\t  epilogue_size += 2;\n-\t}\n+\t  operands[0] = GEN_INT (size);\n \n-      switch (size & 0xff00)\n-\t{\n-\tdefault:\n-\t  if ((size & 0xff) != ((size >> 8) & 0xff))\n-\t    OUT_AS2 (mov, w, %H0);\n-\t  OUT_AS2 (add, sph, w);\n-\t  epilogue_size += 4;\n-\t  /* fall-thru  */\n-\tcase 0:\n-\t  break;\n-\tcase 0x100:\n-\t  OUT_AS1 (inc, sph);\n-\t  epilogue_size += 2;\n+\t  switch (size & 0xff)\n+\t    {\n+\t    default:\n+\t      OUT_AS2 (mov, w, %L0);\n+\t      OUT_AS2 (add, spl, w);\n+\t      epilogue_size += 4;\n+\t      /* fall-thru  */\n+\t    case 0:\n+\t      break;\n+\t    case 1:\n+\t      OUT_AS1 (inc, spl);\n+\t      epilogue_size += 2;\n+\t    }\n+\n+\t  switch (size & 0xff00)\n+\t    {\n+\t    default:\n+\t      if ((size & 0xff) != ((size >> 8) & 0xff))\n+\t\tOUT_AS2 (mov, w, %H0);\n+\t      OUT_AS2 (add, sph, w);\n+\t      epilogue_size += 4;\n+\t      /* fall-thru  */\n+\t    case 0:\n+\t      break;\n+\t    case 0x100:\n+\t      OUT_AS1 (inc, sph);\n+\t      epilogue_size += 2;\n+\t    }\n \t}\n     }\n \n-  savelimit = (CHAIN_FRAMES) ? REG_FP : (REG_FP + 2);\n-\n   for (reg = 0; reg < savelimit; reg++)\n     {\n       if (regs_ever_live[reg] && ! call_used_regs[reg])\n@@ -428,10 +442,10 @@ function_epilogue (file, size)\n   else\n     {\n       if (current_function_pops_args\n-          && current_function_args_size >= 2\n-          && current_function_args_size < 0x100)\n+          && args_locals_size >= 2\n+          && args_locals_size < 0x100)\n         {\n-          if (current_function_args_size == 2)\n+          if (args_locals_size == 2)\n \t    {\n \t      if (CHAIN_FRAMES)\n \t        {\n@@ -443,7 +457,7 @@ function_epilogue (file, size)\n \t    }\n           else\n \t    {\n-\t      operands[0] = GEN_INT (current_function_args_size);\n+\t      operands[0] = GEN_INT (args_locals_size);\n \t      if (CHAIN_FRAMES)\n \t        {\n                   OUT_AS2 (mov, w, %L0);\n@@ -456,12 +470,11 @@ function_epilogue (file, size)\n         }\n     }\n   \n-  if (current_function_pops_args && current_function_args_size\n-      && need_ret)\n+  if (current_function_pops_args && args_locals_size && need_ret)\n     {\n-      operands[0] = GEN_INT (current_function_args_size);\n+      operands[0] = GEN_INT (args_locals_size);\n \n-      switch (current_function_args_size & 0xff)\n+      switch (args_locals_size & 0xff)\n         {\n         default:\n \t  OUT_AS2 (mov, w, %L0);\n@@ -477,11 +490,10 @@ function_epilogue (file, size)\n \t  epilogue_size += 2;\n \t}\n \n-      switch (current_function_args_size & 0xff00)\n+      switch (args_locals_size & 0xff00)\n \t{\n \tdefault:\n-\t  if ((current_function_args_size & 0xff)\n-\t      != ((current_function_args_size >> 8) & 0xff))\n+\t  if ((args_locals_size & 0xff) != ((args_locals_size >> 8) & 0xff))\n \t    OUT_AS2 (mov, w, %H0);\n \t  OUT_AS2 (add, sph, w);\n \t  epilogue_size += 4;"}, {"sha": "fb0c98871955dfdd8e8eeab9f9443d6b2c42ef93", "filename": "gcc/config/ip2k/libgcc.S", "status": "modified", "additions": 13, "deletions": 29, "changes": 42, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b6878188455ecc1deb8a40fd30649710380a82e5/gcc%2Fconfig%2Fip2k%2Flibgcc.S", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b6878188455ecc1deb8a40fd30649710380a82e5/gcc%2Fconfig%2Fip2k%2Flibgcc.S", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fip2k%2Flibgcc.S?ref=b6878188455ecc1deb8a40fd30649710380a82e5", "patch": "@@ -1,4 +1,3 @@\n-; libgcc.S for the Ubicom IP2k architecture.\n ;\n ; Copyright (C) 2000, 2001, 2002 Free Software Foundation, Inc.\n ; Contributed by Red Hat, Inc and Ubicom, Inc.\n@@ -1327,8 +1326,11 @@ __cmpdi2_dp:\n \t.sect\t.pram.libgcc,\"ax\"\n \t.global\t__fp_pop_args_ret\n \t.global\t__pop_args_ret\n-\t.func\t__fp_pop_args_ret, __fp_pop_args_ret\n+\t.global\t__pop2_args_ret\n+\t.func\t__fp_pop2_args_ret, __fp_pop2_args_ret\n \n+__fp_pop2_args_ret:\n+\tmov\tw, #2\n __fp_pop_args_ret:\n \tpop\t0xfd\n \tpop\t0xfe\n@@ -1341,29 +1343,11 @@ __pop_args_ret:\n \t.endfunc\n #endif /* L_fp_pop_args_ret */\n \n-#if defined(L_leaf_fp_pop_args_ret)\n-\t.sect\t.pram.libgcc,\"ax\"\n-\t.global\t__leaf_fp_pop_args_ret\n-\t.func\t__leaf_fp_pop_args_ret, __leaf_fp_pop_args_ret\n-\n-__leaf_fp_pop_args_ret:\n-\tpop\t0xfd\n-\tpop\t0xfe\n-\tadd\tspl, w\n-\tret\n-\n-\t.endfunc\n-#endif /* L_leaf_fp_pop_args_ret */\n-\n-#if defined(L_fp_pop2_args_ret)\n+#if defined(L__pop2_args_ret)\n \t.sect\t.pram.libgcc,\"ax\"\n-\t.global\t__fp_pop2_args_ret\n \t.global\t__pop2_args_ret\n-\t.func\t__fp_pop2_args_ret, __fp_pop2_args_ret\n+\t.func\t__pop2_args_ret, __pop2_args_ret\n \n-__fp_pop2_args_ret:\n-\tpop\t0xfd\n-\tpop\t0xfe\n __pop2_args_ret:\n \tmov\tw, #2\n \tpop\tcallh\n@@ -1372,22 +1356,23 @@ __pop2_args_ret:\n \tret\n \n \t.endfunc\n-#endif /* L_fp_pop2_args_ret */\n+#endif /* L__pop2_args_ret */\n \n-#if defined(L_leaf_fp_pop2_args_ret)\n+#if defined(L_leaf_fp_pop_args_ret)\n \t.sect\t.pram.libgcc,\"ax\"\n-\t.global\t__leaf_fp_pop2_args_ret\n-\t.func\t__leaf_fp_pop2_args_ret, __leaf_fp_pop2_args_ret\n+\t.global\t__leaf_fp_pop_args_ret, __leaf_fp_pop2_args_ret\n+\t.func\t__leaf_fp2_pop_args_ret, __leaf_fp_pop2_args_ret\n \n __leaf_fp_pop2_args_ret:\n+\tmov\tw, #2\n+__leaf_fp_pop_args_ret:\n \tpop\t0xfd\n \tpop\t0xfe\n-\tmov\tw, #2\n \tadd\tspl, w\n \tret\n \n \t.endfunc\n-#endif /* L_leaf_fp_pop2_args_ret */\n+#endif /* L_leaf_fp_pop_args_ret */\n \n #if defined(L_movstrhi_countqi)\n \t.sect\t.pram.libgcc,\"ax\"\n@@ -1529,4 +1514,3 @@ _write:\n \t\n \t.endfunc\n #endif\n-"}, {"sha": "7a59a705c8308dcd2e887190c7d723a4f020982c", "filename": "gcc/config/ip2k/t-ip2k", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b6878188455ecc1deb8a40fd30649710380a82e5/gcc%2Fconfig%2Fip2k%2Ft-ip2k", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b6878188455ecc1deb8a40fd30649710380a82e5/gcc%2Fconfig%2Fip2k%2Ft-ip2k", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fip2k%2Ft-ip2k?ref=b6878188455ecc1deb8a40fd30649710380a82e5", "patch": "@@ -17,9 +17,8 @@ LIB1ASMFUNCS = \\\n \t_cmpdi2 \\\n \t_cmpdi2_dp \\\n \t_fp_pop_args_ret \\\n+\t_pop2_args_ret \\\n \t_leaf_fp_pop_args_ret \\\n-\t_fp_pop2_args_ret \\\n-\t_leaf_fp_pop2_args_ret \\\n \t_movstrhi_countqi \\\n \t_movstrhi_counthi \\\n \tabort \\"}]}