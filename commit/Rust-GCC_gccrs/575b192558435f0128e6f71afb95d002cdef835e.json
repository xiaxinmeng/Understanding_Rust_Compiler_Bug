{"sha": "575b192558435f0128e6f71afb95d002cdef835e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTc1YjE5MjU1ODQzNWYwMTI4ZTZmNzFhZmI5NWQwMDJjZGVmODM1ZQ==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@adacore.com", "date": "2018-06-21T17:01:12Z"}, "committer": {"name": "Eric Botcazou", "email": "ebotcazou@gcc.gnu.org", "date": "2018-06-21T17:01:12Z"}, "message": "tree-nested.c (get_frame_type): Use create_tmp_var_raw instead of create_tmp_var_for to create the FRAME decl.\n\n\t* tree-nested.c (get_frame_type): Use create_tmp_var_raw instead of\n\tcreate_tmp_var_for to create the FRAME decl.\n\t(finalize_nesting_tree_1): Do not unchain the FRAME decl.\n\nFrom-SVN: r261854", "tree": {"sha": "31a1264f0d74e079d431821c1c9ff7de7cd5410d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/31a1264f0d74e079d431821c1c9ff7de7cd5410d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/575b192558435f0128e6f71afb95d002cdef835e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/575b192558435f0128e6f71afb95d002cdef835e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/575b192558435f0128e6f71afb95d002cdef835e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/575b192558435f0128e6f71afb95d002cdef835e/comments", "author": null, "committer": null, "parents": [{"sha": "29cbd18b58a4fa3f2ee57b25df270cec5a4d1adf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/29cbd18b58a4fa3f2ee57b25df270cec5a4d1adf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/29cbd18b58a4fa3f2ee57b25df270cec5a4d1adf"}], "stats": {"total": 28, "additions": 15, "deletions": 13}, "files": [{"sha": "0550afb59422ec77623cb95c2200ba3ae11cab76", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/575b192558435f0128e6f71afb95d002cdef835e/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/575b192558435f0128e6f71afb95d002cdef835e/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=575b192558435f0128e6f71afb95d002cdef835e", "patch": "@@ -1,3 +1,9 @@\n+2018-06-21  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* tree-nested.c (get_frame_type): Use create_tmp_var_raw instead of\n+\tcreate_tmp_var_for to create the FRAME decl.\n+\t(finalize_nesting_tree_1): Do not unchain the FRAME decl.\n+\n 2018-06-21  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* tree-inline.c (copy_edges_for_bb): Minor tweak."}, {"sha": "127a81f9973abb836f473f56f9996359a0bda371", "filename": "gcc/tree-nested.c", "status": "modified", "additions": 9, "deletions": 13, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/575b192558435f0128e6f71afb95d002cdef835e/gcc%2Ftree-nested.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/575b192558435f0128e6f71afb95d002cdef835e/gcc%2Ftree-nested.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-nested.c?ref=575b192558435f0128e6f71afb95d002cdef835e", "patch": "@@ -223,8 +223,15 @@ get_frame_type (struct nesting_info *info)\n       free (name);\n \n       info->frame_type = type;\n-      info->frame_decl = create_tmp_var_for (info, type, \"FRAME\");\n+\n+      /* Do not put info->frame_decl on info->new_local_var_chain,\n+\t so that we can declare it in the lexical blocks, which\n+\t makes sure virtual regs that end up appearing in its RTL\n+\t expression get substituted in instantiate_virtual_regs.  */\n+      info->frame_decl = create_tmp_var_raw (type, \"FRAME\");\n+      DECL_CONTEXT (info->frame_decl) = info->context;\n       DECL_NONLOCAL_FRAME (info->frame_decl) = 1;\n+      DECL_SEEN_IN_BIND_EXPR_P (info->frame_decl) = 1;\n \n       /* ??? Always make it addressable for now, since it is meant to\n \t be pointed to by the static chain pointer.  This pessimizes\n@@ -234,6 +241,7 @@ get_frame_type (struct nesting_info *info)\n \t local frame structure in the first place.  */\n       TREE_ADDRESSABLE (info->frame_decl) = 1;\n     }\n+\n   return type;\n }\n \n@@ -3117,18 +3125,6 @@ finalize_nesting_tree_1 (struct nesting_info *root)\n       gimple_seq_add_stmt (&stmt_list,\n \t\t\t   gimple_build_assign (fb_ref, fb_tmp));\n \n-      /* Remove root->frame_decl from root->new_local_var_chain, so\n-\t that we can declare it also in the lexical blocks, which\n-\t helps ensure virtual regs that end up appearing in its RTL\n-\t expression get substituted in instantiate_virtual_regs().  */\n-      tree *adjust;\n-      for (adjust = &root->new_local_var_chain;\n-\t   *adjust != root->frame_decl;\n-\t   adjust = &DECL_CHAIN (*adjust))\n-\tgcc_assert (DECL_CHAIN (*adjust));\n-      *adjust = DECL_CHAIN (*adjust);\n-\n-      DECL_CHAIN (root->frame_decl) = NULL_TREE;\n       declare_vars (root->frame_decl,\n \t\t    gimple_seq_first_stmt (gimple_body (context)), true);\n     }"}]}