{"sha": "ebf7f0abade68c85557af4f634fe68b86c34f751", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWJmN2YwYWJhZGU2OGM4NTU1N2FmNGY2MzRmZTY4Yjg2YzM0Zjc1MQ==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@adacore.com", "date": "2019-08-14T09:52:29Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "pmderodat@gcc.gnu.org", "date": "2019-08-14T09:52:29Z"}, "message": "[Ada] Further cleanup in the inlining machinery\n\n2019-08-14  Eric Botcazou  <ebotcazou@adacore.com>\n\ngcc/ada/\n\n\t* sem_ch12.adb (Might_Inline_Subp): Rework comment and restrict\n\tthe shortcut based on Is_Inlined to the back-end inlining case.\n\nFrom-SVN: r274468", "tree": {"sha": "742c322e4417b4ffe2aead34d8e6ba2f1e9184e9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/742c322e4417b4ffe2aead34d8e6ba2f1e9184e9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ebf7f0abade68c85557af4f634fe68b86c34f751", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ebf7f0abade68c85557af4f634fe68b86c34f751", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ebf7f0abade68c85557af4f634fe68b86c34f751", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ebf7f0abade68c85557af4f634fe68b86c34f751/comments", "author": null, "committer": null, "parents": [{"sha": "dba246bfabc54c9a97304f4ab65fda62bd2936c8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dba246bfabc54c9a97304f4ab65fda62bd2936c8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/dba246bfabc54c9a97304f4ab65fda62bd2936c8"}], "stats": {"total": 18, "additions": 14, "deletions": 4}, "files": [{"sha": "a507c894449938cb6e294bf844a38267553c94f6", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ebf7f0abade68c85557af4f634fe68b86c34f751/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ebf7f0abade68c85557af4f634fe68b86c34f751/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=ebf7f0abade68c85557af4f634fe68b86c34f751", "patch": "@@ -1,3 +1,8 @@\n+2019-08-14  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* sem_ch12.adb (Might_Inline_Subp): Rework comment and restrict\n+\tthe shortcut based on Is_Inlined to the back-end inlining case.\n+\n 2019-08-14  Bob Duff  <duff@adacore.com>\n \n \t* inline.adb (Check_And_Split_Unconstrained_Function): Ignore"}, {"sha": "de350b4e4d3a999cee5c7f6a4005fd0ac1ca0704", "filename": "gcc/ada/sem_ch12.adb", "status": "modified", "additions": 9, "deletions": 4, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ebf7f0abade68c85557af4f634fe68b86c34f751/gcc%2Fada%2Fsem_ch12.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ebf7f0abade68c85557af4f634fe68b86c34f751/gcc%2Fada%2Fsem_ch12.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch12.adb?ref=ebf7f0abade68c85557af4f634fe68b86c34f751", "patch": "@@ -3845,12 +3845,16 @@ package body Sem_Ch12 is\n \n    procedure Analyze_Package_Instantiation (N : Node_Id) is\n       Has_Inline_Always : Boolean := False;\n+      --  Set if the generic unit contains any subprograms with Inline_Always.\n+      --  Only relevant when back-end inlining is not enabled.\n \n       function Might_Inline_Subp (Gen_Unit : Entity_Id) return Boolean;\n       --  If inlining is active and the generic contains inlined subprograms,\n-      --  we instantiate the body. This may cause superfluous instantiations,\n-      --  but it is simpler than detecting the need for the body at the point\n-      --  of inlining, when the context of the instance is not available.\n+      --  we either instantiate the body when front-end inlining is enabled,\n+      --  or we add a pending instantiation when back-end inlining is enabled.\n+      --  In the former case, this may cause superfluous instantiations, but\n+      --  in either case we need to perform the instantiation of the body in\n+      --  the context of the instance and not in that of the point of inlining.\n \n       -----------------------\n       -- Might_Inline_Subp --\n@@ -3862,8 +3866,9 @@ package body Sem_Ch12 is\n       begin\n          if Inline_Processing_Required then\n             --  No need to recompute the answer if we know it is positive\n+            --  and back-end inlining is enabled.\n \n-            if Is_Inlined (Gen_Unit) then\n+            if Is_Inlined (Gen_Unit) and then Back_End_Inlining then\n                return True;\n             end if;\n "}]}