{"sha": "24f9c4df3330f359098c1985f02450e1d393b3bb", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjRmOWM0ZGYzMzMwZjM1OTA5OGMxOTg1ZjAyNDUwZTFkMzkzYjNiYg==", "commit": {"author": {"name": "Bernardo Innocenti", "email": "bernie@develer.com", "date": "2003-10-26T19:03:43Z"}, "committer": {"name": "Bernardo Innocenti", "email": "bernie@gcc.gnu.org", "date": "2003-10-26T19:03:43Z"}, "message": "extend.texi (interrupt_handler): Add m68k to the list of processors implementing it.\n\n\t* doc/extend.texi (interrupt_handler): Add m68k to the\n\tlist of processors implementing it.\n\t* doc/invoke.texi (-msep-data): Document new m68k option.\n\t(-mno-sep-data): Likewise.\n\t(-mid-shared-library): Likewise.\n\t(-mno-id-shared-library): Likewise.\n\t(-mshared-library-id): Likewise.\n\nCo-Authored-By: Paul Dale <pauli@snapgear.com>\n\nFrom-SVN: r72962", "tree": {"sha": "57c992edea7a6cec55cfeb3fb3f4352bec31db04", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/57c992edea7a6cec55cfeb3fb3f4352bec31db04"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/24f9c4df3330f359098c1985f02450e1d393b3bb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/24f9c4df3330f359098c1985f02450e1d393b3bb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/24f9c4df3330f359098c1985f02450e1d393b3bb", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/24f9c4df3330f359098c1985f02450e1d393b3bb/comments", "author": {"login": "codewiz", "id": 1184492, "node_id": "MDQ6VXNlcjExODQ0OTI=", "avatar_url": "https://avatars.githubusercontent.com/u/1184492?v=4", "gravatar_id": "", "url": "https://api.github.com/users/codewiz", "html_url": "https://github.com/codewiz", "followers_url": "https://api.github.com/users/codewiz/followers", "following_url": "https://api.github.com/users/codewiz/following{/other_user}", "gists_url": "https://api.github.com/users/codewiz/gists{/gist_id}", "starred_url": "https://api.github.com/users/codewiz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/codewiz/subscriptions", "organizations_url": "https://api.github.com/users/codewiz/orgs", "repos_url": "https://api.github.com/users/codewiz/repos", "events_url": "https://api.github.com/users/codewiz/events{/privacy}", "received_events_url": "https://api.github.com/users/codewiz/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "36f9cf4adaaba39ac6a4b3a99c79543a433dbab9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/36f9cf4adaaba39ac6a4b3a99c79543a433dbab9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/36f9cf4adaaba39ac6a4b3a99c79543a433dbab9"}], "stats": {"total": 50, "additions": 43, "deletions": 7}, "files": [{"sha": "3a13d770f1e7f91406c9707eb4893f20d7e6275d", "filename": "gcc/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/24f9c4df3330f359098c1985f02450e1d393b3bb/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/24f9c4df3330f359098c1985f02450e1d393b3bb/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=24f9c4df3330f359098c1985f02450e1d393b3bb", "patch": "@@ -1,3 +1,14 @@\n+2003-10-26  Bernardo Innocenti  <bernie@develer.com>\n+\t    Paul Dale  <pauli@snapgear.com>\n+\n+\t* doc/extend.texi (interrupt_handler): Add m68k to the\n+\tlist of processors implementing it.\n+\t* doc/invoke.texi (-msep-data): Document new m68k option.\n+\t(-mno-sep-data): Likewise.\n+\t(-mid-shared-library): Likewise.\n+\t(-mno-id-shared-library): Likewise.\n+\t(-mshared-library-id): Likewise.\n+\n 2003-10-26  Andreas Jaeger  <aj@suse.de>\n \n \t* unwind-dw2.c (_Unwind_GetGR): Avoid warning about unsigned"}, {"sha": "e2982929e587e4105264d11cba1a925726af009e", "filename": "gcc/doc/extend.texi", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/24f9c4df3330f359098c1985f02450e1d393b3bb/gcc%2Fdoc%2Fextend.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/24f9c4df3330f359098c1985f02450e1d393b3bb/gcc%2Fdoc%2Fextend.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Fextend.texi?ref=24f9c4df3330f359098c1985f02450e1d393b3bb", "patch": "@@ -2493,8 +2493,8 @@ that the specified function is an interrupt handler.  The compiler will\n generate function entry and exit sequences suitable for use in an\n interrupt handler when this attribute is present.\n \n-Note, interrupt handlers for the H8/300, H8/300H, H8S, and SH processors can\n-be specified via the @code{interrupt_handler} attribute.\n+Note, interrupt handlers for the m68k, H8/300, H8/300H, H8S, and SH processors\n+can be specified via the @code{interrupt_handler} attribute.\n \n Note, on the AVR, interrupts will be enabled inside the function.\n \n@@ -2508,9 +2508,9 @@ void f () __attribute__ ((interrupt (\"IRQ\")));\n Permissible values for this parameter are: IRQ, FIQ, SWI, ABORT and UNDEF@.\n \n @item interrupt_handler\n-@cindex interrupt handler functions on the H8/300 and SH processors\n-Use this attribute on the H8/300, H8/300H, H8S, and SH to indicate that the\n-specified function is an interrupt handler.  The compiler will generate\n+@cindex interrupt handler functions on the m68k, H8/300 and SH processors\n+Use this attribute on the m68k, H8/300, H8/300H, H8S, and SH to indicate that\n+the specified function is an interrupt handler.  The compiler will generate\n function entry and exit sequences suitable for use in an interrupt\n handler when this attribute is present.\n \n@@ -2527,7 +2527,7 @@ void f () __attribute__ ((interrupt_handler,\n @end smallexample\n \n @item trap_exit\n-Use this attribute on the SH for an @code{interrupt_handle} to return using\n+Use this attribute on the SH for an @code{interrupt_handler} to return using\n @code{trapa} instead of @code{rte}.  This attribute expects an integer\n argument specifying the trap number to be used.\n "}, {"sha": "f5f59382371bc29c267a511c5476ab80c986b84b", "filename": "gcc/doc/invoke.texi", "status": "modified", "additions": 26, "deletions": 1, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/24f9c4df3330f359098c1985f02450e1d393b3bb/gcc%2Fdoc%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/24f9c4df3330f359098c1985f02450e1d393b3bb/gcc%2Fdoc%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finvoke.texi?ref=24f9c4df3330f359098c1985f02450e1d393b3bb", "patch": "@@ -341,7 +341,8 @@ in the following sections.\n @gccoptlist{-m68000  -m68020  -m68020-40  -m68020-60  -m68030  -m68040 @gol\n -m68060  -mcpu32  -m5200  -m68881  -mbitfield  -mc68000  -mc68020   @gol\n -mnobitfield  -mrtd  -mshort  -msoft-float  -mpcrel @gol\n--malign-int  -mstrict-align}\n+-malign-int  -mstrict-align  -msep-data  -mno-sep-data @gol\n+-mshared-library-id=n  -mid-shared-library  -mno-id-shared-library}\n \n @emph{M68hc1x Options}\n @gccoptlist{-m6811  -m6812  -m68hc11  -m68hc12   -m68hcs12 @gol\n@@ -6089,6 +6090,30 @@ not presently supported with @option{-mpcrel}, though this could be supported fo\n Do not (do) assume that unaligned memory references will be handled by\n the system.\n \n+@item -msep-data\n+Generate code that allows the data segment to be located in a different\n+area of memory from the text segment.  This allows for execute in place in\n+an environment without virtual memory management.  This option implies -fPIC.\n+\n+@item -mno-sep-data\n+Generate code that assumes that the data segment follows the text segment.\n+This is the default.\n+\n+@item -mid-shared-library\n+Generate code that supports shared libraries via the library ID method.\n+This allows for execute in place and shared libraries in an environment\n+without virtual memory management.  This option implies -fPIC.\n+\n+@item -mno-id-shared-library\n+Generate code that doesn't assume ID based shared libraries are being used.\n+This is the default.\n+\n+@item -mshared-library-id=n\n+Specified the identification number of the ID based shared library being\n+compiled.  Specifying a value of 0 will generate more compact code, specifying\n+other values will force the allocation of that number to the current\n+library but is no more space or time efficient than omitting this option.\n+\n @end table\n \n @node M68hc1x Options"}]}