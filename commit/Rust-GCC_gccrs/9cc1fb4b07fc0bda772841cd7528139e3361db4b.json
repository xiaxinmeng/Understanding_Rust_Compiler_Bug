{"sha": "9cc1fb4b07fc0bda772841cd7528139e3361db4b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OWNjMWZiNGIwN2ZjMGJkYTc3Mjg0MWNkNzUyODEzOWUzMzYxZGI0Yg==", "commit": {"author": {"name": "Xinliang David Li", "email": "davidxl@gcc.gnu.org", "date": "2013-08-29T21:06:08Z"}, "committer": {"name": "Xinliang David Li", "email": "davidxl@gcc.gnu.org", "date": "2013-08-29T21:06:08Z"}, "message": "New vectorizer messages; message format change.\n\nFrom-SVN: r202088", "tree": {"sha": "1a7d2a084ca87df8b177164420d01e13f4a895c0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1a7d2a084ca87df8b177164420d01e13f4a895c0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9cc1fb4b07fc0bda772841cd7528139e3361db4b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9cc1fb4b07fc0bda772841cd7528139e3361db4b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9cc1fb4b07fc0bda772841cd7528139e3361db4b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9cc1fb4b07fc0bda772841cd7528139e3361db4b/comments", "author": null, "committer": null, "parents": [{"sha": "753c498921726cece24fa1e56402f9a8e8034b28", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/753c498921726cece24fa1e56402f9a8e8034b28", "html_url": "https://github.com/Rust-GCC/gccrs/commit/753c498921726cece24fa1e56402f9a8e8034b28"}], "stats": {"total": 223, "additions": 154, "deletions": 69}, "files": [{"sha": "c41e8edeb4c817805e1719c878907269f7187764", "filename": "gcc/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9cc1fb4b07fc0bda772841cd7528139e3361db4b/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9cc1fb4b07fc0bda772841cd7528139e3361db4b/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=9cc1fb4b07fc0bda772841cd7528139e3361db4b", "patch": "@@ -1,3 +1,14 @@\n+2013-08-29  Xinliang David Li  <davidxl@google.com>\n+\n+\t* loop-unroll.c (report_unroll_peel): Minor message\n+\tchange.\n+\t* tree-vect-loop-manip.c (vect_do_peeling_for_alignment):\n+\tEmit alignment peeling message with default -fopt-info.\n+\t(vect_loop_versioning): Emit loop version info message.\n+\t* tree-vectorizer.c (vectorize_loops): Minor message\n+\tchange.\n+\t(execute_vect_slp): Ditto.\n+\n 2013-08-29  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* cgraphclones.c (cgraph_create_virtual_clone): Compute the DECL_NAME"}, {"sha": "ad26f3da17491b563537bf59c280647600b8c05d", "filename": "gcc/loop-unroll.c", "status": "modified", "additions": 11, "deletions": 8, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9cc1fb4b07fc0bda772841cd7528139e3361db4b/gcc%2Floop-unroll.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9cc1fb4b07fc0bda772841cd7528139e3361db4b/gcc%2Floop-unroll.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Floop-unroll.c?ref=9cc1fb4b07fc0bda772841cd7528139e3361db4b", "patch": "@@ -225,7 +225,7 @@ report_unroll_peel (struct loop *loop, location_t locus)\n       && !loop->lpt_decision.times)\n     {\n       dump_printf_loc (report_flags, locus,\n-                       \"Turned loop into non-loop; it never loops.\\n\");\n+                       \"loop turned into non-loop; it never loops.\\n\");\n       return;\n     }\n \n@@ -236,13 +236,16 @@ report_unroll_peel (struct loop *loop, location_t locus)\n   else if (loop->header->count)\n     niters = expected_loop_iterations (loop);\n \n-  dump_printf_loc (report_flags, locus,\n-                   \"%s loop %d times\",\n-                   (loop->lpt_decision.decision == LPT_PEEL_COMPLETELY\n-                    ?  \"Completely unroll\"\n-                    : (loop->lpt_decision.decision == LPT_PEEL_SIMPLE\n-                       ? \"Peel\" : \"Unroll\")),\n-                   loop->lpt_decision.times);\n+  if (loop->lpt_decision.decision == LPT_PEEL_COMPLETELY)\n+    dump_printf_loc (report_flags, locus,\n+                     \"loop with %d iterations completely unrolled\",\n+\t\t     loop->lpt_decision.times + 1);\n+  else\n+    dump_printf_loc (report_flags, locus,\n+                     \"loop %s %d times\",\n+                     (loop->lpt_decision.decision == LPT_PEEL_SIMPLE\n+                       ? \"peeled\" : \"unrolled\"),\n+                     loop->lpt_decision.times);\n   if (profile_info)\n     dump_printf (report_flags,\n                  \" (header execution count %d\","}, {"sha": "a3afbcedd029d7819db430920c7425b6775d51b2", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 54, "deletions": 0, "changes": 54, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9cc1fb4b07fc0bda772841cd7528139e3361db4b/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9cc1fb4b07fc0bda772841cd7528139e3361db4b/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=9cc1fb4b07fc0bda772841cd7528139e3361db4b", "patch": "@@ -1,3 +1,57 @@\n+2013-08-29  Xinliang DavidLi  <davidxl@google.com>\n+\t\n+\t* gcc.dg/unroll_3.c: Message change.\n+\t* gcc.dg/unroll_4.c: Likewise.\n+\t* gcc.dg/tree-ssa/cunroll-1.c: Likewise.\n+\t* gcc.dg/tree-ssa/cunroll-2.c: Likewise.\n+\t* gcc.dg/tree-ssa/cunroll-3.c: Likewise.\n+\t* gcc.dg/tree-ssa/cunroll-4.c: Likewise.\n+\t* gcc.dg/tree-ssa/cunroll-5.c: Likewise.\n+\t* gcc.dg/tree-ssa/loop-23.c: Likewise.\n+\t* gcc.dg/tree-ssa/loop-1.c: Likewise.\n+\t* gcc.dg/unroll_1.c: Likewise.\n+\t* gcc.dg/vect/bb-slp-31.c: Likewise.\n+\t* gcc.dg/vect/bb-slp-14.c: Likewise.\n+\t* gcc.dg/vect/bb-slp-8.c: Likewise.\n+\t* gcc.dg/vect/bb-slp-23.c: Likewise.\n+\t* gcc.dg/vect/bb-slp-15.c: Likewise.\n+\t* gcc.dg/vect/bb-slp-9.c: Likewise.\n+\t* gcc.dg/vect/bb-slp-24.c: Likewise.\n+\t* gcc.dg/vect/bb-slp-16.c: Likewise.\n+\t* gcc.dg/vect/bb-slp-25.c: Likewise.\n+\t* gcc.dg/vect/bb-slp-17.c: Likewise.\n+\t* gcc.dg/vect/bb-slp-26.c: Likewise.\n+\t* gcc.dg/vect/bb-slp-18.c: Likewise.\n+\t* gcc.dg/vect/no-tree-reassoc-bb-slp-12.c: Likewise.\n+\t* gcc.dg/vect/bb-slp-27.c: Likewise.\n+\t* gcc.dg/vect/bb-slp-19.c: Likewise.\n+\t* gcc.dg/vect/bb-slp-28.c: Likewise.\n+\t* gcc.dg/vect/bb-slp-cond-1.c: Likewise.\n+\t* gcc.dg/vect/bb-slp-29.c: Likewise.\n+\t* gcc.dg/vect/bb-slp-8a.c: Likewise.\n+\t* gcc.dg/vect/bb-slp-pattern-2.c: Likewise.\n+\t* gcc.dg/vect/bb-slp-1.c: Likewise.\n+\t* gcc.dg/vect/bb-slp-8b.c: Likewise.\n+\t* gcc.dg/vect/bb-slp-2.c: Likewise.\n+\t* gcc.dg/vect/bb-slp-3.c: Likewise.\n+\t* gcc.dg/vect/bb-slp-10.c: Likewise.\n+\t* gcc.dg/vect/fast-math-bb-slp-call-1.c: Likewise.\n+\t* gcc.dg/vect/bb-slp-4.c: Likewise.\n+\t* gcc.dg/vect/bb-slp-11.c: Likewise.\n+\t* gcc.dg/vect/fast-math-bb-slp-call-2.c: Likewise.\n+\t* gcc.dg/vect/bb-slp-5.c: Likewise.\n+\t* gcc.dg/vect/bb-slp-20.c: Likewise.\n+\t* gcc.dg/vect/bb-slp-6.c: Likewise.\n+\t* gcc.dg/vect/bb-slp-21.c: Likewise.\n+\t* gcc.dg/vect/bb-slp-30.c: Likewise.\n+\t* gcc.dg/vect/bb-slp-13.c: Likewise.\n+\t* gcc.dg/vect/bb-slp-7.c: Likewise.\n+\t* gcc.dg/vect/bb-slp-22.c: Likewise.\n+\t* gcc.dg/unroll_2.c: Likewise.\n+\t* g++.dg/vect/slp-pr50413.cc: Likewise.\n+\t* g++.dg/vect/slp-pr56812.cc: Likewise.\n+\t* g++.dg/vect/slp-pr50819.cc: Likewise.\n+\n 2013-08-29  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* gcc.dg/tree-ssa/ipa-cp-1.c: Adjust regexp."}, {"sha": "6e69f11b382673d1e0aeb8779246e7a688181ccd", "filename": "gcc/testsuite/g++.dg/vect/slp-pr50413.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9cc1fb4b07fc0bda772841cd7528139e3361db4b/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fvect%2Fslp-pr50413.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9cc1fb4b07fc0bda772841cd7528139e3361db4b/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fvect%2Fslp-pr50413.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fvect%2Fslp-pr50413.cc?ref=9cc1fb4b07fc0bda772841cd7528139e3361db4b", "patch": "@@ -160,6 +160,6 @@ void shift(unsigned char t)\n   V.bitmap.b96 = t;\n }\n \n-/* { dg-final { scan-tree-dump-times \"Vectorized basic-block\" 0 \"slp\" } } */\n+/* { dg-final { scan-tree-dump-times \"basic block vectorized\" 0 \"slp\" } } */\n /* { dg-final { cleanup-tree-dump \"slp\" } } */\n "}, {"sha": "515d774a22833da11fa61f14d83c99be86fd4cb6", "filename": "gcc/testsuite/g++.dg/vect/slp-pr50819.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9cc1fb4b07fc0bda772841cd7528139e3361db4b/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fvect%2Fslp-pr50819.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9cc1fb4b07fc0bda772841cd7528139e3361db4b/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fvect%2Fslp-pr50819.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fvect%2Fslp-pr50819.cc?ref=9cc1fb4b07fc0bda772841cd7528139e3361db4b", "patch": "@@ -49,5 +49,5 @@ const & v2) {\n   res = res + s*(v1+v2);\n }\n \n-/* { dg-final { scan-tree-dump-times \"Vectorized basic-block\" 2 \"slp\" } } */\n+/* { dg-final { scan-tree-dump-times \"basic block vectorized\" 2 \"slp\" } } */\n /* { dg-final { cleanup-tree-dump \"slp\" } } */"}, {"sha": "e98abc89df0262102028e60abf0b6764bb61cbb2", "filename": "gcc/testsuite/g++.dg/vect/slp-pr56812.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9cc1fb4b07fc0bda772841cd7528139e3361db4b/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fvect%2Fslp-pr56812.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9cc1fb4b07fc0bda772841cd7528139e3361db4b/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fvect%2Fslp-pr56812.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fvect%2Fslp-pr56812.cc?ref=9cc1fb4b07fc0bda772841cd7528139e3361db4b", "patch": "@@ -17,5 +17,5 @@ void mydata::Set (float x)\n     data[i] = x;\r\n }\r\n \r\n-/* { dg-final { scan-tree-dump-times \"Vectorized basic-block\" 1 \"slp\" } } */\r\n+/* { dg-final { scan-tree-dump-times \"basic block vectorized\" 1 \"slp\" } } */\r\n /* { dg-final { cleanup-tree-dump \"slp\" } } */\r"}, {"sha": "0bea9a9f00bb9e51b8a1e0b09b7c37665e4a26a9", "filename": "gcc/testsuite/gcc.dg/tree-ssa/cunroll-1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9cc1fb4b07fc0bda772841cd7528139e3361db4b/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fcunroll-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9cc1fb4b07fc0bda772841cd7528139e3361db4b/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fcunroll-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fcunroll-1.c?ref=9cc1fb4b07fc0bda772841cd7528139e3361db4b", "patch": "@@ -8,6 +8,6 @@ test(int c)\n     a[i]=5;\n }\n /* Array bounds says the loop will not roll much.  */\n-/* { dg-final { scan-tree-dump \"Completely unroll loop 2 times\" \"cunrolli\"} } */\n+/* { dg-final { scan-tree-dump \"loop with 3 iterations completely unrolled\" \"cunrolli\"} } */\n /* { dg-final { scan-tree-dump \"Last iteration exit edge was proved true.\" \"cunrolli\"} } */\n /* { dg-final { cleanup-tree-dump \"cunrolli\" } } */"}, {"sha": "e16d0086fab3d9a4d863cafa9183887c0bcbb369", "filename": "gcc/testsuite/gcc.dg/tree-ssa/cunroll-2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9cc1fb4b07fc0bda772841cd7528139e3361db4b/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fcunroll-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9cc1fb4b07fc0bda772841cd7528139e3361db4b/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fcunroll-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fcunroll-2.c?ref=9cc1fb4b07fc0bda772841cd7528139e3361db4b", "patch": "@@ -12,5 +12,5 @@ test(int c)\n     }\n }\n /* We are not able to get rid of the final conditional because the loop has two exits.  */\n-/* { dg-final { scan-tree-dump \"Completely unroll loop 1 times\" \"cunroll\"} } */\n+/* { dg-final { scan-tree-dump \"loop with 2 iterations completely unrolled\" \"cunroll\"} } */\n /* { dg-final { cleanup-tree-dump \"cunroll\" } } */"}, {"sha": "dd6ce506744e810abf533e1b0f49031a3eb1b341", "filename": "gcc/testsuite/gcc.dg/tree-ssa/cunroll-3.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9cc1fb4b07fc0bda772841cd7528139e3361db4b/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fcunroll-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9cc1fb4b07fc0bda772841cd7528139e3361db4b/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fcunroll-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fcunroll-3.c?ref=9cc1fb4b07fc0bda772841cd7528139e3361db4b", "patch": "@@ -11,5 +11,5 @@ test(int c)\n }\n /* If we start duplicating headers prior curoll, this loop will have 0 iterations.  */\n \n-/* { dg-final { scan-tree-dump \"Completely unroll loop 1 times\" \"cunrolli\"} } */\n+/* { dg-final { scan-tree-dump \"loop with 2 iterations completely unrolled\" \"cunrolli\"} } */\n /* { dg-final { cleanup-tree-dump \"cunrolli\" } } */"}, {"sha": "86e12bbb4194cf8f5ea03ce89dc0e6b0666528b9", "filename": "gcc/testsuite/gcc.dg/tree-ssa/cunroll-4.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9cc1fb4b07fc0bda772841cd7528139e3361db4b/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fcunroll-4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9cc1fb4b07fc0bda772841cd7528139e3361db4b/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fcunroll-4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fcunroll-4.c?ref=9cc1fb4b07fc0bda772841cd7528139e3361db4b", "patch": "@@ -16,6 +16,6 @@ test(int c)\n \n /* We should do this as part of cunrolli, but our cost model do not take into account early exit\n    from the last iteration.  */\n-/* { dg-final { scan-tree-dump \"Turned loop into non-loop; it never loops.\" \"ivcanon\"} } */\n+/* { dg-final { scan-tree-dump \"loop turned into non-loop; it never loops.\" \"ivcanon\"} } */\n /* { dg-final { scan-tree-dump \"Last iteration exit edge was proved true.\" \"ivcanon\"} } */\n /* { dg-final { cleanup-tree-dump \"ivcanon\" } } */"}, {"sha": "1e9b8bfbab008b50b5b55fbba9c093b86785973d", "filename": "gcc/testsuite/gcc.dg/tree-ssa/cunroll-5.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9cc1fb4b07fc0bda772841cd7528139e3361db4b/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fcunroll-5.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9cc1fb4b07fc0bda772841cd7528139e3361db4b/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fcunroll-5.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fcunroll-5.c?ref=9cc1fb4b07fc0bda772841cd7528139e3361db4b", "patch": "@@ -8,7 +8,7 @@ test(int c)\n     a[i]=5;\n }\n /* Basic testcase for complette unrolling.  */\n-/* { dg-final { scan-tree-dump \"Completely unroll loop 5 times\" \"cunroll\"} } */\n+/* { dg-final { scan-tree-dump \"loop with 6 iterations completely unrolled\" \"cunroll\"} } */\n /* { dg-final { scan-tree-dump \"Exit condition of peeled iterations was eliminated.\" \"cunroll\"} } */\n /* { dg-final { scan-tree-dump \"Last iteration exit edge was proved true.\" \"cunroll\"} } */\n /* { dg-final { cleanup-tree-dump \"cunroll\" } } */"}, {"sha": "dd52c50faf4d9f82d83699e801848a7ba79381f4", "filename": "gcc/testsuite/gcc.dg/tree-ssa/loop-1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9cc1fb4b07fc0bda772841cd7528139e3361db4b/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Floop-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9cc1fb4b07fc0bda772841cd7528139e3361db4b/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Floop-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Floop-1.c?ref=9cc1fb4b07fc0bda772841cd7528139e3361db4b", "patch": "@@ -35,7 +35,7 @@ int xxx(void)\n \n /* { dg-final { scan-tree-dump-times \"Added canonical iv to loop 1, 4 iterations\" 1 \"ivcanon\"} } */\n /* { dg-final { cleanup-tree-dump \"ivcanon\" } } */\n-/* { dg-final { scan-tree-dump-times \"Completely unroll loop 4 times\" 1 \"cunroll\"} } */\n+/* { dg-final { scan-tree-dump-times \"loop with 5 iterations completely unrolled\" 1 \"cunroll\"} } */\n /* { dg-final { cleanup-tree-dump \"cunroll\" } } */\n /* { dg-final { scan-tree-dump-times \"foo\" 5 \"optimized\"} } */\n /* { dg-final { cleanup-tree-dump \"optimized\" } } */"}, {"sha": "5bdc35fbd4ca6ba4e6d10fbb87bfbedd2c6184ab", "filename": "gcc/testsuite/gcc.dg/tree-ssa/loop-23.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9cc1fb4b07fc0bda772841cd7528139e3361db4b/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Floop-23.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9cc1fb4b07fc0bda772841cd7528139e3361db4b/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Floop-23.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Floop-23.c?ref=9cc1fb4b07fc0bda772841cd7528139e3361db4b", "patch": "@@ -24,6 +24,6 @@ int foo(void)\n   return sum;\n }\n \n-/* { dg-final { scan-tree-dump-times \"Completely unroll loop 3 times\" 1 \"cunroll\" } } */\n+/* { dg-final { scan-tree-dump-times \"loop with 4 iterations completely unrolled\" 1 \"cunroll\" } } */\n \n /* { dg-final { cleanup-tree-dump \"cunroll\" } } */"}, {"sha": "a02825f2b0d5b3101fa3ffc4e0639b7ede5d3972", "filename": "gcc/testsuite/gcc.dg/unroll_1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9cc1fb4b07fc0bda772841cd7528139e3361db4b/gcc%2Ftestsuite%2Fgcc.dg%2Funroll_1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9cc1fb4b07fc0bda772841cd7528139e3361db4b/gcc%2Ftestsuite%2Fgcc.dg%2Funroll_1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Funroll_1.c?ref=9cc1fb4b07fc0bda772841cd7528139e3361db4b", "patch": "@@ -28,5 +28,5 @@ int foo2(void)\n   return 1;\n }\n \n-/* { dg-final { scan-rtl-dump-times \"Turned loop into non-loop; it never loops\" 2 \"loop2_unroll\" } } */\n+/* { dg-final { scan-rtl-dump-times \"loop turned into non-loop; it never loops\" 2 \"loop2_unroll\" } } */\n /* { dg-final { cleanup-rtl-dump \"loop2_unroll\" } } */"}, {"sha": "601b38705c160bab20451f1667e1b895bb0d584a", "filename": "gcc/testsuite/gcc.dg/unroll_2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9cc1fb4b07fc0bda772841cd7528139e3361db4b/gcc%2Ftestsuite%2Fgcc.dg%2Funroll_2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9cc1fb4b07fc0bda772841cd7528139e3361db4b/gcc%2Ftestsuite%2Fgcc.dg%2Funroll_2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Funroll_2.c?ref=9cc1fb4b07fc0bda772841cd7528139e3361db4b", "patch": "@@ -28,5 +28,5 @@ int foo2(void)\n   return 1;\n }\n \n-/* { dg-final { scan-rtl-dump-times \"Turned loop into non-loop; it never loops\" 1 \"loop2_unroll\" } } */\n+/* { dg-final { scan-rtl-dump-times \"loop turned into non-loop; it never loops\" 1 \"loop2_unroll\" } } */\n /* { dg-final { cleanup-rtl-dump \"loop2_unroll\" } } */"}, {"sha": "1f4216b6068f51f8097e5272180af03865e0aa72", "filename": "gcc/testsuite/gcc.dg/unroll_3.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9cc1fb4b07fc0bda772841cd7528139e3361db4b/gcc%2Ftestsuite%2Fgcc.dg%2Funroll_3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9cc1fb4b07fc0bda772841cd7528139e3361db4b/gcc%2Ftestsuite%2Fgcc.dg%2Funroll_3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Funroll_3.c?ref=9cc1fb4b07fc0bda772841cd7528139e3361db4b", "patch": "@@ -28,5 +28,5 @@ int foo2(void)\n   return 1;\n }\n \n-/* { dg-final { scan-rtl-dump-times \"Turned loop into non-loop; it never loops\" 1 \"loop2_unroll\" } } */\n+/* { dg-final { scan-rtl-dump-times \"loop turned into non-loop; it never loops\" 1 \"loop2_unroll\" } } */\n /* { dg-final { cleanup-rtl-dump \"loop2_unroll\" } } */"}, {"sha": "33d6edee2ccb63732b1a93d00adfa87a7e3bab47", "filename": "gcc/testsuite/gcc.dg/unroll_4.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9cc1fb4b07fc0bda772841cd7528139e3361db4b/gcc%2Ftestsuite%2Fgcc.dg%2Funroll_4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9cc1fb4b07fc0bda772841cd7528139e3361db4b/gcc%2Ftestsuite%2Fgcc.dg%2Funroll_4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Funroll_4.c?ref=9cc1fb4b07fc0bda772841cd7528139e3361db4b", "patch": "@@ -28,5 +28,5 @@ int foo2(void)\n   return 1;\n }\n \n-/* { dg-final { scan-rtl-dump-times \"Turned loop into non-loop; it never loops\" 1 \"loop2_unroll\" } } */\n+/* { dg-final { scan-rtl-dump-times \"loop turned into non-loop; it never loops\" 1 \"loop2_unroll\" } } */\n /* { dg-final { cleanup-rtl-dump \"loop2_unroll\" } } */"}, {"sha": "1caa3cf5c60f5ebaed7bf7c7597de26adaff580a", "filename": "gcc/testsuite/gcc.dg/vect/bb-slp-1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9cc1fb4b07fc0bda772841cd7528139e3361db4b/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fbb-slp-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9cc1fb4b07fc0bda772841cd7528139e3361db4b/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fbb-slp-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fbb-slp-1.c?ref=9cc1fb4b07fc0bda772841cd7528139e3361db4b", "patch": "@@ -56,6 +56,6 @@ int main (void)\n   return 0;\n }\n \n-/* { dg-final { scan-tree-dump-times \"Vectorized basic-block\" 1 \"slp\" } } */\n+/* { dg-final { scan-tree-dump-times \"basic block vectorized\" 1 \"slp\" } } */\n /* { dg-final { cleanup-tree-dump \"slp\" } } */\n   "}, {"sha": "658bf03ca566e289715195d9e11b43f3b03424f8", "filename": "gcc/testsuite/gcc.dg/vect/bb-slp-10.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9cc1fb4b07fc0bda772841cd7528139e3361db4b/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fbb-slp-10.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9cc1fb4b07fc0bda772841cd7528139e3361db4b/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fbb-slp-10.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fbb-slp-10.c?ref=9cc1fb4b07fc0bda772841cd7528139e3361db4b", "patch": "@@ -50,6 +50,6 @@ int main (void)\n }\n \n /* { dg-final { scan-tree-dump-times \"unsupported alignment in basic block.\" 1 \"slp\" { xfail vect_element_align } } } */\n-/* { dg-final { scan-tree-dump-times \"Vectorized basic-block\" 1 \"slp\" { target vect_element_align } } } */\n+/* { dg-final { scan-tree-dump-times \"basic block vectorized\" 1 \"slp\" { target vect_element_align } } } */\n /* { dg-final { cleanup-tree-dump \"slp\" } } */\n   "}, {"sha": "3c350a7ab224242a52334466afc51e52e2f71d0d", "filename": "gcc/testsuite/gcc.dg/vect/bb-slp-11.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9cc1fb4b07fc0bda772841cd7528139e3361db4b/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fbb-slp-11.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9cc1fb4b07fc0bda772841cd7528139e3361db4b/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fbb-slp-11.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fbb-slp-11.c?ref=9cc1fb4b07fc0bda772841cd7528139e3361db4b", "patch": "@@ -48,6 +48,6 @@ int main (void)\n   return 0;\n }\n \n-/* { dg-final { scan-tree-dump-times \"Vectorized basic-block\" 1 \"slp\" { target vect64 } } } */\n+/* { dg-final { scan-tree-dump-times \"basic block vectorized\" 1 \"slp\" { target vect64 } } } */\n /* { dg-final { cleanup-tree-dump \"slp\" } } */\n   "}, {"sha": "88838cea9bc4d9b34cd82cd5a1c1a2683a701793", "filename": "gcc/testsuite/gcc.dg/vect/bb-slp-13.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9cc1fb4b07fc0bda772841cd7528139e3361db4b/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fbb-slp-13.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9cc1fb4b07fc0bda772841cd7528139e3361db4b/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fbb-slp-13.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fbb-slp-13.c?ref=9cc1fb4b07fc0bda772841cd7528139e3361db4b", "patch": "@@ -46,6 +46,6 @@ int main (void)\n   return 0;\n }\n \n-/* { dg-final { scan-tree-dump-times \"Vectorized basic-block\" 1 \"slp\" { target vect_int_mult } } } */\n+/* { dg-final { scan-tree-dump-times \"basic block vectorized\" 1 \"slp\" { target vect_int_mult } } } */\n /* { dg-final { cleanup-tree-dump \"slp\" } } */\n   "}, {"sha": "d46deadd0dc5e865b37efcd4886590e0c8647868", "filename": "gcc/testsuite/gcc.dg/vect/bb-slp-14.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9cc1fb4b07fc0bda772841cd7528139e3361db4b/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fbb-slp-14.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9cc1fb4b07fc0bda772841cd7528139e3361db4b/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fbb-slp-14.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fbb-slp-14.c?ref=9cc1fb4b07fc0bda772841cd7528139e3361db4b", "patch": "@@ -47,6 +47,6 @@ int main (void)\n   return 0;\n }\n \n-/* { dg-final { scan-tree-dump-times \"Vectorized basic-block\" 0 \"slp\"  } } */\n+/* { dg-final { scan-tree-dump-times \"basic block vectorized\" 0 \"slp\"  } } */\n /* { dg-final { cleanup-tree-dump \"slp\" } } */\n   "}, {"sha": "fd065e6ce3560b9d982a7489bd21deef715f2ffa", "filename": "gcc/testsuite/gcc.dg/vect/bb-slp-15.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9cc1fb4b07fc0bda772841cd7528139e3361db4b/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fbb-slp-15.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9cc1fb4b07fc0bda772841cd7528139e3361db4b/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fbb-slp-15.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fbb-slp-15.c?ref=9cc1fb4b07fc0bda772841cd7528139e3361db4b", "patch": "@@ -51,6 +51,6 @@ int main (void)\n   return 0;\n }\n \n-/* { dg-final { scan-tree-dump-times \"Vectorized basic-block\" 1 \"slp\" { target vect_int_mult } } } */\n+/* { dg-final { scan-tree-dump-times \"basic block vectorized\" 1 \"slp\" { target vect_int_mult } } } */\n /* { dg-final { cleanup-tree-dump \"slp\" } } */\n   "}, {"sha": "0cbec65b773d78b8c6a0997f72ed93106030ed3e", "filename": "gcc/testsuite/gcc.dg/vect/bb-slp-16.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9cc1fb4b07fc0bda772841cd7528139e3361db4b/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fbb-slp-16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9cc1fb4b07fc0bda772841cd7528139e3361db4b/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fbb-slp-16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fbb-slp-16.c?ref=9cc1fb4b07fc0bda772841cd7528139e3361db4b", "patch": "@@ -65,6 +65,6 @@ int main (void)\n   return 0;\n }\n \n-/* { dg-final { scan-tree-dump-times \"Vectorized basic-block\" 1 \"slp\" } } */\n+/* { dg-final { scan-tree-dump-times \"basic block vectorized\" 1 \"slp\" } } */\n /* { dg-final { cleanup-tree-dump \"slp\" } } */\n   "}, {"sha": "3f14ff487a598219e2ce3468d9fac82436f81fb0", "filename": "gcc/testsuite/gcc.dg/vect/bb-slp-17.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9cc1fb4b07fc0bda772841cd7528139e3361db4b/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fbb-slp-17.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9cc1fb4b07fc0bda772841cd7528139e3361db4b/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fbb-slp-17.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fbb-slp-17.c?ref=9cc1fb4b07fc0bda772841cd7528139e3361db4b", "patch": "@@ -57,6 +57,6 @@ int main (void)\n   return 0;\n }\n \n-/* { dg-final { scan-tree-dump-times \"Vectorized basic-block\" 1 \"slp\" { target vect_int_mult } } } */\n+/* { dg-final { scan-tree-dump-times \"basic block vectorized\" 1 \"slp\" { target vect_int_mult } } } */\n /* { dg-final { cleanup-tree-dump \"slp\" } } */\n   "}, {"sha": "7d73dbd8b23f3f096db0f3aad203c63ae740c2ad", "filename": "gcc/testsuite/gcc.dg/vect/bb-slp-18.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9cc1fb4b07fc0bda772841cd7528139e3361db4b/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fbb-slp-18.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9cc1fb4b07fc0bda772841cd7528139e3361db4b/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fbb-slp-18.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fbb-slp-18.c?ref=9cc1fb4b07fc0bda772841cd7528139e3361db4b", "patch": "@@ -46,6 +46,6 @@ int main (void)\n   return 0;\n }\n \n-/* { dg-final { scan-tree-dump-times \"Vectorized basic-block\" 1 \"slp\" { target vect_int_mult } } } */\n+/* { dg-final { scan-tree-dump-times \"basic block vectorized\" 1 \"slp\" { target vect_int_mult } } } */\n /* { dg-final { cleanup-tree-dump \"slp\" } } */\n   "}, {"sha": "576bbc16921632dc5629d8fa117cf33280c7b189", "filename": "gcc/testsuite/gcc.dg/vect/bb-slp-19.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9cc1fb4b07fc0bda772841cd7528139e3361db4b/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fbb-slp-19.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9cc1fb4b07fc0bda772841cd7528139e3361db4b/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fbb-slp-19.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fbb-slp-19.c?ref=9cc1fb4b07fc0bda772841cd7528139e3361db4b", "patch": "@@ -53,6 +53,6 @@ int main (void)\n   return 0;\n }\n \n-/* { dg-final { scan-tree-dump-times \"Vectorized basic-block\" 1 \"slp\"  { xfail *-*-* }  } } */\n+/* { dg-final { scan-tree-dump-times \"basic block vectorized\" 1 \"slp\"  { xfail *-*-* }  } } */\n /* { dg-final { cleanup-tree-dump \"slp\" } } */\n   "}, {"sha": "accc472f79114a987de017d6532e69b286ec357f", "filename": "gcc/testsuite/gcc.dg/vect/bb-slp-2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9cc1fb4b07fc0bda772841cd7528139e3361db4b/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fbb-slp-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9cc1fb4b07fc0bda772841cd7528139e3361db4b/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fbb-slp-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fbb-slp-2.c?ref=9cc1fb4b07fc0bda772841cd7528139e3361db4b", "patch": "@@ -53,6 +53,6 @@ int main (void)\n   return 0;\n }\n \n-/* { dg-final { scan-tree-dump-times \"Vectorized basic-block\" 1 \"slp\" } } */\n+/* { dg-final { scan-tree-dump-times \"basic block vectorized\" 1 \"slp\" } } */\n /* { dg-final { cleanup-tree-dump \"slp\" } } */\n   "}, {"sha": "a7978a70d7ab7d2996dd753912a88e9feed8caaa", "filename": "gcc/testsuite/gcc.dg/vect/bb-slp-20.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9cc1fb4b07fc0bda772841cd7528139e3361db4b/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fbb-slp-20.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9cc1fb4b07fc0bda772841cd7528139e3361db4b/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fbb-slp-20.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fbb-slp-20.c?ref=9cc1fb4b07fc0bda772841cd7528139e3361db4b", "patch": "@@ -63,7 +63,7 @@ int main (void)\n   return 0;\n }\n \n-/* { dg-final { scan-tree-dump-times \"Vectorized basic-block\" 1 \"slp\" { target vect_int_mult } } } */\n+/* { dg-final { scan-tree-dump-times \"basic block vectorized\" 1 \"slp\" { target vect_int_mult } } } */\n /* { dg-final { scan-tree-dump-times \"vectorizing stmts using SLP\" 2 \"slp\" { target vect_int_mult } } } */\n /* { dg-final { cleanup-tree-dump \"slp\" } } */\n   "}, {"sha": "8ad71454afe606190d8836b4a6da19ec7e2bcc3c", "filename": "gcc/testsuite/gcc.dg/vect/bb-slp-21.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9cc1fb4b07fc0bda772841cd7528139e3361db4b/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fbb-slp-21.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9cc1fb4b07fc0bda772841cd7528139e3361db4b/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fbb-slp-21.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fbb-slp-21.c?ref=9cc1fb4b07fc0bda772841cd7528139e3361db4b", "patch": "@@ -63,7 +63,7 @@ int main (void)\n   return 0;\n }\n \n-/* { dg-final { scan-tree-dump-times \"Vectorized basic-block\" 1 \"slp\"  } } */\n+/* { dg-final { scan-tree-dump-times \"basic block vectorized\" 1 \"slp\"  } } */\n /* { dg-final { scan-tree-dump-times \"vectorizing stmts using SLP\" 1 \"slp\" { target { ! {vect_int_mult } } } } } */\n /* { dg-final { scan-tree-dump-times \"vectorizing stmts using SLP\" 2 \"slp\" { target vect_int_mult } } } */\n /* { dg-final { cleanup-tree-dump \"slp\" } } */"}, {"sha": "e425dc9ade13297883f5599beaa73512e8527da6", "filename": "gcc/testsuite/gcc.dg/vect/bb-slp-22.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9cc1fb4b07fc0bda772841cd7528139e3361db4b/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fbb-slp-22.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9cc1fb4b07fc0bda772841cd7528139e3361db4b/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fbb-slp-22.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fbb-slp-22.c?ref=9cc1fb4b07fc0bda772841cd7528139e3361db4b", "patch": "@@ -63,7 +63,7 @@ int main (void)\n   return 0;\n }\n \n-/* { dg-final { scan-tree-dump-times \"Vectorized basic-block\" 1 \"slp\"  { target { ! {vect_int_mult } } } } } */\n-/* { dg-final { scan-tree-dump-times \"Vectorized basic-block\" 2 \"slp\"  { target vect_int_mult  } } } */\n+/* { dg-final { scan-tree-dump-times \"basic block vectorized\" 1 \"slp\"  { target { ! {vect_int_mult } } } } } */\n+/* { dg-final { scan-tree-dump-times \"basic block vectorized\" 2 \"slp\"  { target vect_int_mult  } } } */\n /* { dg-final { cleanup-tree-dump \"slp\" } } */\n   "}, {"sha": "35f5186fd742966c800d9dfb490ed872a5f70b44", "filename": "gcc/testsuite/gcc.dg/vect/bb-slp-23.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9cc1fb4b07fc0bda772841cd7528139e3361db4b/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fbb-slp-23.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9cc1fb4b07fc0bda772841cd7528139e3361db4b/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fbb-slp-23.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fbb-slp-23.c?ref=9cc1fb4b07fc0bda772841cd7528139e3361db4b", "patch": "@@ -51,6 +51,6 @@ int main (void)\n   return 0;\n }\n \n-/* { dg-final { scan-tree-dump-times \"Vectorized basic-block\" 1 \"slp\" { target vect_int_mult } } } */\n+/* { dg-final { scan-tree-dump-times \"basic block vectorized\" 1 \"slp\" { target vect_int_mult } } } */\n /* { dg-final { cleanup-tree-dump \"slp\" } } */\n   "}, {"sha": "d0c1d69d1faa12b0920b4653cac64692495a06a5", "filename": "gcc/testsuite/gcc.dg/vect/bb-slp-24.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9cc1fb4b07fc0bda772841cd7528139e3361db4b/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fbb-slp-24.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9cc1fb4b07fc0bda772841cd7528139e3361db4b/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fbb-slp-24.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fbb-slp-24.c?ref=9cc1fb4b07fc0bda772841cd7528139e3361db4b", "patch": "@@ -54,6 +54,6 @@ int main (void)\n   return 0;\n }\n \n-/* { dg-final { scan-tree-dump-times \"Vectorized basic-block\" 1 \"slp\" { target vect_element_align } } } */\n+/* { dg-final { scan-tree-dump-times \"basic block vectorized\" 1 \"slp\" { target vect_element_align } } } */\n /* { dg-final { cleanup-tree-dump \"slp\" } } */\n "}, {"sha": "737b3b06c04ba3855bcaf72d2db1bdec8483cb86", "filename": "gcc/testsuite/gcc.dg/vect/bb-slp-25.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9cc1fb4b07fc0bda772841cd7528139e3361db4b/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fbb-slp-25.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9cc1fb4b07fc0bda772841cd7528139e3361db4b/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fbb-slp-25.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fbb-slp-25.c?ref=9cc1fb4b07fc0bda772841cd7528139e3361db4b", "patch": "@@ -54,6 +54,6 @@ int main (void)\n   return 0;\n }\n \n-/* { dg-final { scan-tree-dump-times \"Vectorized basic-block\" 1 \"slp\" { target vect_element_align } } } */\n+/* { dg-final { scan-tree-dump-times \"basic block vectorized\" 1 \"slp\" { target vect_element_align } } } */\n /* { dg-final { cleanup-tree-dump \"slp\" } } */\n "}, {"sha": "881f3204f4032c3f07091d00063a61541892828f", "filename": "gcc/testsuite/gcc.dg/vect/bb-slp-26.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9cc1fb4b07fc0bda772841cd7528139e3361db4b/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fbb-slp-26.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9cc1fb4b07fc0bda772841cd7528139e3361db4b/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fbb-slp-26.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fbb-slp-26.c?ref=9cc1fb4b07fc0bda772841cd7528139e3361db4b", "patch": "@@ -55,6 +55,6 @@ int main (void)\n   return 0;\n }\n \n-/* { dg-final { scan-tree-dump-times \"Vectorized basic-block\" 1 \"slp\" { target vect64 } } } */\n+/* { dg-final { scan-tree-dump-times \"basic block vectorized\" 1 \"slp\" { target vect64 } } } */\n /* { dg-final { cleanup-tree-dump \"slp\" } } */\n "}, {"sha": "7fcc1e6104183ff3c8c348bee42f569b466aafc8", "filename": "gcc/testsuite/gcc.dg/vect/bb-slp-27.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9cc1fb4b07fc0bda772841cd7528139e3361db4b/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fbb-slp-27.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9cc1fb4b07fc0bda772841cd7528139e3361db4b/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fbb-slp-27.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fbb-slp-27.c?ref=9cc1fb4b07fc0bda772841cd7528139e3361db4b", "patch": "@@ -44,6 +44,6 @@ int main (void)\n   return 0;\n }\n \n-/* { dg-final { scan-tree-dump-times \"Vectorized basic-block\" 1 \"slp\" { target { vect_int_mult && { vect_unpack && vect_pack_trunc } } } } } */\n+/* { dg-final { scan-tree-dump-times \"basic block vectorized\" 1 \"slp\" { target { vect_int_mult && { vect_unpack && vect_pack_trunc } } } } } */\n /* { dg-final { cleanup-tree-dump \"slp\" } } */\n "}, {"sha": "650c50eb9381bc54ba16e035b6779db79a73df42", "filename": "gcc/testsuite/gcc.dg/vect/bb-slp-28.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9cc1fb4b07fc0bda772841cd7528139e3361db4b/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fbb-slp-28.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9cc1fb4b07fc0bda772841cd7528139e3361db4b/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fbb-slp-28.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fbb-slp-28.c?ref=9cc1fb4b07fc0bda772841cd7528139e3361db4b", "patch": "@@ -66,6 +66,6 @@ int main (void)\n   return 0;\n }\n \n-/* { dg-final { scan-tree-dump-times \"Vectorized basic-block\" 1 \"slp\" { target { vect_int_mult &&  { vect_pack_trunc && vect_unpack } } } } } */\n+/* { dg-final { scan-tree-dump-times \"basic block vectorized\" 1 \"slp\" { target { vect_int_mult &&  { vect_pack_trunc && vect_unpack } } } } } */\n /* { dg-final { cleanup-tree-dump \"slp\" } } */\n "}, {"sha": "c5b31343a441f3a4e9f694e4a12f3a8e22137a5b", "filename": "gcc/testsuite/gcc.dg/vect/bb-slp-29.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9cc1fb4b07fc0bda772841cd7528139e3361db4b/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fbb-slp-29.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9cc1fb4b07fc0bda772841cd7528139e3361db4b/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fbb-slp-29.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fbb-slp-29.c?ref=9cc1fb4b07fc0bda772841cd7528139e3361db4b", "patch": "@@ -54,6 +54,6 @@ int main (void)\n   return 0;\n }\n \n-/* { dg-final { scan-tree-dump-times \"Vectorized basic-block\" 1 \"slp\"  { target { vect_int_mult &&  vect_element_align } } } } */\n+/* { dg-final { scan-tree-dump-times \"basic block vectorized\" 1 \"slp\"  { target { vect_int_mult &&  vect_element_align } } } } */\n /* { dg-final { cleanup-tree-dump \"slp\" } } */\n "}, {"sha": "093389faf9fea1028ddd6bb4df7ff1db9b6b5734", "filename": "gcc/testsuite/gcc.dg/vect/bb-slp-3.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9cc1fb4b07fc0bda772841cd7528139e3361db4b/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fbb-slp-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9cc1fb4b07fc0bda772841cd7528139e3361db4b/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fbb-slp-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fbb-slp-3.c?ref=9cc1fb4b07fc0bda772841cd7528139e3361db4b", "patch": "@@ -42,6 +42,6 @@ int main (void)\n   return 0;\n }\n \n-/* { dg-final { scan-tree-dump-times \"Vectorized basic-block\" 1 \"slp\" } } */\n+/* { dg-final { scan-tree-dump-times \"basic block vectorized\" 1 \"slp\" } } */\n /* { dg-final { cleanup-tree-dump \"slp\" } } */\n   "}, {"sha": "86da55a47cc8b2534db19f550e6e2e2939fb685f", "filename": "gcc/testsuite/gcc.dg/vect/bb-slp-30.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9cc1fb4b07fc0bda772841cd7528139e3361db4b/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fbb-slp-30.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9cc1fb4b07fc0bda772841cd7528139e3361db4b/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fbb-slp-30.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fbb-slp-30.c?ref=9cc1fb4b07fc0bda772841cd7528139e3361db4b", "patch": "@@ -43,5 +43,5 @@ test1(void)\n \n int main() { test1(); return a[21]; }\n \n-/* { dg-final { scan-tree-dump-times \"Vectorized basic-block\" 1 \"slp\" } } */\n+/* { dg-final { scan-tree-dump-times \"basic block vectorized\" 1 \"slp\" } } */\n /* { dg-final { cleanup-tree-dump \"slp\" } } */"}, {"sha": "bbddb0ac28c0e06a7f40907da9d36c809eb93fbe", "filename": "gcc/testsuite/gcc.dg/vect/bb-slp-31.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9cc1fb4b07fc0bda772841cd7528139e3361db4b/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fbb-slp-31.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9cc1fb4b07fc0bda772841cd7528139e3361db4b/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fbb-slp-31.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fbb-slp-31.c?ref=9cc1fb4b07fc0bda772841cd7528139e3361db4b", "patch": "@@ -9,4 +9,4 @@ void f(){\n   a[1]=1+2*a[1]*a[1];\n }\n \n-/* { dg-final { scan-tree-dump \"Vectorized basic-block\" \"slp\" } } */\n+/* { dg-final { scan-tree-dump \"basic block vectorized\" \"slp\" } } */"}, {"sha": "2c4b62dc4aceb9c9b1d251e52c072d806c7dc08a", "filename": "gcc/testsuite/gcc.dg/vect/bb-slp-4.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9cc1fb4b07fc0bda772841cd7528139e3361db4b/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fbb-slp-4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9cc1fb4b07fc0bda772841cd7528139e3361db4b/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fbb-slp-4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fbb-slp-4.c?ref=9cc1fb4b07fc0bda772841cd7528139e3361db4b", "patch": "@@ -38,6 +38,6 @@ int main (void)\n   return 0;\n }\n \n-/* { dg-final { scan-tree-dump-times \"Vectorized basic-block\" 0 \"slp\" } } */\n+/* { dg-final { scan-tree-dump-times \"basic block vectorized\" 0 \"slp\" } } */\n /* { dg-final { cleanup-tree-dump \"slp\" } } */\n   "}, {"sha": "ca093e795fcb34c39f5bc59ad74f374c34b6732a", "filename": "gcc/testsuite/gcc.dg/vect/bb-slp-5.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9cc1fb4b07fc0bda772841cd7528139e3361db4b/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fbb-slp-5.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9cc1fb4b07fc0bda772841cd7528139e3361db4b/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fbb-slp-5.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fbb-slp-5.c?ref=9cc1fb4b07fc0bda772841cd7528139e3361db4b", "patch": "@@ -47,6 +47,6 @@ int main (void)\n   return 0;\n }\n \n-/* { dg-final { scan-tree-dump-times \"Vectorized basic-block\" 1 \"slp\" } } */\n+/* { dg-final { scan-tree-dump-times \"basic block vectorized\" 1 \"slp\" } } */\n /* { dg-final { cleanup-tree-dump \"slp\" } } */\n   "}, {"sha": "c233a9d5010481462fb8877a2d161231534290e2", "filename": "gcc/testsuite/gcc.dg/vect/bb-slp-6.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9cc1fb4b07fc0bda772841cd7528139e3361db4b/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fbb-slp-6.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9cc1fb4b07fc0bda772841cd7528139e3361db4b/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fbb-slp-6.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fbb-slp-6.c?ref=9cc1fb4b07fc0bda772841cd7528139e3361db4b", "patch": "@@ -45,6 +45,6 @@ int main (void)\n   return 0;\n }\n \n-/* { dg-final { scan-tree-dump-times \"Vectorized basic-block\" 1 \"slp\" { target vect_int_mult } } } */\n+/* { dg-final { scan-tree-dump-times \"basic block vectorized\" 1 \"slp\" { target vect_int_mult } } } */\n /* { dg-final { cleanup-tree-dump \"slp\" } } */\n   "}, {"sha": "b7b90f0b95bb023ce026b0ae1caa98036810f3a7", "filename": "gcc/testsuite/gcc.dg/vect/bb-slp-7.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9cc1fb4b07fc0bda772841cd7528139e3361db4b/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fbb-slp-7.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9cc1fb4b07fc0bda772841cd7528139e3361db4b/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fbb-slp-7.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fbb-slp-7.c?ref=9cc1fb4b07fc0bda772841cd7528139e3361db4b", "patch": "@@ -46,6 +46,6 @@ int main (void)\n   return 0;\n }\n \n-/* { dg-final { scan-tree-dump-times \"Vectorized basic-block\" 0 \"slp\" } } */\n+/* { dg-final { scan-tree-dump-times \"basic block vectorized\" 0 \"slp\" } } */\n /* { dg-final { cleanup-tree-dump \"slp\" } } */\n   "}, {"sha": "303fe3e4336ff94eb6c67f9e2559a5efa277988b", "filename": "gcc/testsuite/gcc.dg/vect/bb-slp-8.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9cc1fb4b07fc0bda772841cd7528139e3361db4b/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fbb-slp-8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9cc1fb4b07fc0bda772841cd7528139e3361db4b/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fbb-slp-8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fbb-slp-8.c?ref=9cc1fb4b07fc0bda772841cd7528139e3361db4b", "patch": "@@ -48,6 +48,6 @@ int main (void)\n   return 0;\n }\n \n-/* { dg-final { scan-tree-dump-times \"Vectorized basic-block\" 1 \"slp\"  { target vect_hw_misalign } } } */\n+/* { dg-final { scan-tree-dump-times \"basic block vectorized\" 1 \"slp\"  { target vect_hw_misalign } } } */\n /* { dg-final { cleanup-tree-dump \"slp\" } } */\n   "}, {"sha": "55a6a81d38c2481b447be978ab2c0cd71d8ec3ad", "filename": "gcc/testsuite/gcc.dg/vect/bb-slp-8a.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9cc1fb4b07fc0bda772841cd7528139e3361db4b/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fbb-slp-8a.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9cc1fb4b07fc0bda772841cd7528139e3361db4b/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fbb-slp-8a.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fbb-slp-8a.c?ref=9cc1fb4b07fc0bda772841cd7528139e3361db4b", "patch": "@@ -47,6 +47,6 @@ int main (void)\n   return 0;\n }\n \n-/* { dg-final { scan-tree-dump-times \"Vectorized basic-block\" 0 \"slp\" } } */\n+/* { dg-final { scan-tree-dump-times \"basic block vectorized\" 0 \"slp\" } } */\n /* { dg-final { cleanup-tree-dump \"slp\" } } */\n   "}, {"sha": "8c5c5ab9182304018e80763387232da13c668b8d", "filename": "gcc/testsuite/gcc.dg/vect/bb-slp-8b.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9cc1fb4b07fc0bda772841cd7528139e3361db4b/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fbb-slp-8b.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9cc1fb4b07fc0bda772841cd7528139e3361db4b/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fbb-slp-8b.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fbb-slp-8b.c?ref=9cc1fb4b07fc0bda772841cd7528139e3361db4b", "patch": "@@ -49,6 +49,6 @@ int main (void)\n   return 0;\n }\n \n-/* { dg-final { scan-tree-dump-times \"Vectorized basic-block\" 1 \"slp\"  { target vect_hw_misalign } } } */\n+/* { dg-final { scan-tree-dump-times \"basic block vectorized\" 1 \"slp\"  { target vect_hw_misalign } } } */\n /* { dg-final { cleanup-tree-dump \"slp\" } } */\n   "}, {"sha": "9f1a5877a29df4e84312e2ab2821d31087493870", "filename": "gcc/testsuite/gcc.dg/vect/bb-slp-9.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9cc1fb4b07fc0bda772841cd7528139e3361db4b/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fbb-slp-9.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9cc1fb4b07fc0bda772841cd7528139e3361db4b/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fbb-slp-9.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fbb-slp-9.c?ref=9cc1fb4b07fc0bda772841cd7528139e3361db4b", "patch": "@@ -46,6 +46,6 @@ int main (void)\n   return 0;\n }\n \n-/* { dg-final { scan-tree-dump-times \"Vectorized basic-block\" 1 \"slp\"  { xfail  vect_no_align } } } */\n+/* { dg-final { scan-tree-dump-times \"basic block vectorized\" 1 \"slp\"  { xfail  vect_no_align } } } */\n /* { dg-final { cleanup-tree-dump \"slp\" } } */\n   "}, {"sha": "86376b4464147fd8acd9ac75ddac0b2b570ef928", "filename": "gcc/testsuite/gcc.dg/vect/bb-slp-cond-1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9cc1fb4b07fc0bda772841cd7528139e3361db4b/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fbb-slp-cond-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9cc1fb4b07fc0bda772841cd7528139e3361db4b/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fbb-slp-cond-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fbb-slp-cond-1.c?ref=9cc1fb4b07fc0bda772841cd7528139e3361db4b", "patch": "@@ -41,6 +41,6 @@ int main ()\n   return 0;\n }\n \n-/* { dg-final { scan-tree-dump-times \"Vectorized basic-block\" 1 \"slp\" { target vect_element_align } } } */\n+/* { dg-final { scan-tree-dump-times \"basic block vectorized\" 1 \"slp\" { target vect_element_align } } } */\n /* { dg-final { cleanup-tree-dump \"slp\" } } */\n "}, {"sha": "545c08d86e9f2a0dbcf425dd28752fae53b40962", "filename": "gcc/testsuite/gcc.dg/vect/bb-slp-pattern-2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9cc1fb4b07fc0bda772841cd7528139e3361db4b/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fbb-slp-pattern-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9cc1fb4b07fc0bda772841cd7528139e3361db4b/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fbb-slp-pattern-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fbb-slp-pattern-2.c?ref=9cc1fb4b07fc0bda772841cd7528139e3361db4b", "patch": "@@ -48,5 +48,5 @@ int main ()\n   return 0;\n }\n \n-/* { dg-final { scan-tree-dump-times \"Vectorized basic-block\" 1 \"slp\" { target { vect_element_align && vect_pack_trunc } } } } */\n+/* { dg-final { scan-tree-dump-times \"basic block vectorized\" 1 \"slp\" { target { vect_element_align && vect_pack_trunc } } } } */\n /* { dg-final { cleanup-tree-dump \"slp\" } } */"}, {"sha": "c138a78b3281a7dac616fa13d3d4a5919a80d636", "filename": "gcc/testsuite/gcc.dg/vect/fast-math-bb-slp-call-1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9cc1fb4b07fc0bda772841cd7528139e3361db4b/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Ffast-math-bb-slp-call-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9cc1fb4b07fc0bda772841cd7528139e3361db4b/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Ffast-math-bb-slp-call-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Ffast-math-bb-slp-call-1.c?ref=9cc1fb4b07fc0bda772841cd7528139e3361db4b", "patch": "@@ -45,5 +45,5 @@ main ()\n   return main1 ();\n }\n \n-/* { dg-final { scan-tree-dump-times \"Vectorized basic-block\" 1 \"slp\" { target { vect_call_copysignf && vect_call_sqrtf } } } } */\n+/* { dg-final { scan-tree-dump-times \"basic block vectorized\" 1 \"slp\" { target { vect_call_copysignf && vect_call_sqrtf } } } } */\n /* { dg-final { cleanup-tree-dump \"slp\" } } */"}, {"sha": "c126c1c0085d682c492efb94034a671167d1c8d7", "filename": "gcc/testsuite/gcc.dg/vect/fast-math-bb-slp-call-2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9cc1fb4b07fc0bda772841cd7528139e3361db4b/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Ffast-math-bb-slp-call-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9cc1fb4b07fc0bda772841cd7528139e3361db4b/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Ffast-math-bb-slp-call-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Ffast-math-bb-slp-call-2.c?ref=9cc1fb4b07fc0bda772841cd7528139e3361db4b", "patch": "@@ -63,5 +63,5 @@ main ()\n   return main1 ();\n }\n \n-/* { dg-final { scan-tree-dump-times \"Vectorized basic-block\" 2 \"slp\" { target vect_call_lrint } } } */\n+/* { dg-final { scan-tree-dump-times \"basic block vectorized\" 2 \"slp\" { target vect_call_lrint } } } */\n /* { dg-final { cleanup-tree-dump \"slp\" } } */"}, {"sha": "49274f88f5731935fbe4324b1a1a2e94ea3dc622", "filename": "gcc/testsuite/gcc.dg/vect/no-tree-reassoc-bb-slp-12.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9cc1fb4b07fc0bda772841cd7528139e3361db4b/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fno-tree-reassoc-bb-slp-12.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9cc1fb4b07fc0bda772841cd7528139e3361db4b/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fno-tree-reassoc-bb-slp-12.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fno-tree-reassoc-bb-slp-12.c?ref=9cc1fb4b07fc0bda772841cd7528139e3361db4b", "patch": "@@ -47,6 +47,6 @@ int main (void)\n   return 0;\n }\n \n-/* { dg-final { scan-tree-dump-times \"Vectorized basic-block\" 1 \"slp\" { target vect_int_mult } } } */\n+/* { dg-final { scan-tree-dump-times \"basic block vectorized\" 1 \"slp\" { target vect_int_mult } } } */\n /* { dg-final { cleanup-tree-dump \"slp\" } } */\n   "}, {"sha": "f2acc4c15f1c949db53b53b2caeb02da1eda30e4", "filename": "gcc/tree-ssa-loop-ivcanon.c", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9cc1fb4b07fc0bda772841cd7528139e3361db4b/gcc%2Ftree-ssa-loop-ivcanon.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9cc1fb4b07fc0bda772841cd7528139e3361db4b/gcc%2Ftree-ssa-loop-ivcanon.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-loop-ivcanon.c?ref=9cc1fb4b07fc0bda772841cd7528139e3361db4b", "patch": "@@ -870,11 +870,12 @@ try_unroll_loop_completely (struct loop *loop,\n     {\n       if (!n_unroll)\n         dump_printf_loc (MSG_OPTIMIZED_LOCATIONS | TDF_DETAILS, locus,\n-                         \"Turned loop into non-loop; it never loops.\\n\");\n+                         \"loop turned into non-loop; it never loops\\n\");\n       else\n         {\n           dump_printf_loc (MSG_OPTIMIZED_LOCATIONS | TDF_DETAILS, locus,\n-                           \"Completely unroll loop %d times\", (int)n_unroll);\n+                           \"loop with %d iterations completely unrolled\",\n+\t\t\t   (int) (n_unroll + 1));\n           if (profile_info)\n             dump_printf (MSG_OPTIMIZED_LOCATIONS | TDF_DETAILS,\n                          \" (header execution count %d)\","}, {"sha": "4c12f49391617bb4d1be2751400c16674fe3b860", "filename": "gcc/tree-vect-data-refs.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9cc1fb4b07fc0bda772841cd7528139e3361db4b/gcc%2Ftree-vect-data-refs.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9cc1fb4b07fc0bda772841cd7528139e3361db4b/gcc%2Ftree-vect-data-refs.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vect-data-refs.c?ref=9cc1fb4b07fc0bda772841cd7528139e3361db4b", "patch": "@@ -37,7 +37,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"tree-scalar-evolution.h\"\n #include \"tree-vectorizer.h\"\n #include \"diagnostic-core.h\"\n-\n /* Need to include rtl.h, expr.h, etc. for optabs.  */\n #include \"expr.h\"\n #include \"optabs.h\""}, {"sha": "2bebdeab34c909b667c1b1b591c80eb64d2e998e", "filename": "gcc/tree-vect-loop-manip.c", "status": "modified", "additions": 21, "deletions": 4, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9cc1fb4b07fc0bda772841cd7528139e3361db4b/gcc%2Ftree-vect-loop-manip.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9cc1fb4b07fc0bda772841cd7528139e3361db4b/gcc%2Ftree-vect-loop-manip.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vect-loop-manip.c?ref=9cc1fb4b07fc0bda772841cd7528139e3361db4b", "patch": "@@ -2021,8 +2021,9 @@ vect_do_peeling_for_alignment (loop_vec_info loop_vinfo,\n   int bound = 0;\n \n   if (dump_enabled_p ())\n-    dump_printf_loc (MSG_NOTE, vect_location,\n-                     \"=== vect_do_peeling_for_alignment ===\");\n+    dump_printf_loc (MSG_OPTIMIZED_LOCATIONS, vect_location,\n+                     \"loop peeled for vectorization to enhance\"\n+                     \" alignment\\n\");\n \n   initialize_original_copy_tables ();\n \n@@ -2404,6 +2405,8 @@ vect_loop_versioning (loop_vec_info loop_vinfo,\n   unsigned prob = 4 * REG_BR_PROB_BASE / 5;\n   gimple_seq gimplify_stmt_list = NULL;\n   tree scalar_loop_iters = LOOP_VINFO_NITERS (loop_vinfo);\n+  bool version_align = LOOP_REQUIRES_VERSIONING_FOR_ALIGNMENT (loop_vinfo);\n+  bool version_alias = LOOP_REQUIRES_VERSIONING_FOR_ALIAS (loop_vinfo);\n \n   if (check_profitability)\n     {\n@@ -2413,11 +2416,11 @@ vect_loop_versioning (loop_vec_info loop_vinfo,\n \t\t\t\t\t  is_gimple_condexpr, NULL_TREE);\n     }\n \n-  if (LOOP_REQUIRES_VERSIONING_FOR_ALIGNMENT (loop_vinfo))\n+  if (version_align)\n     vect_create_cond_for_align_checks (loop_vinfo, &cond_expr,\n \t\t\t\t       &cond_expr_stmt_list);\n \n-  if (LOOP_REQUIRES_VERSIONING_FOR_ALIAS (loop_vinfo))\n+  if (version_alias)\n     vect_create_cond_for_alias_checks (loop_vinfo, &cond_expr);\n \n   cond_expr = force_gimple_operand_1 (cond_expr, &gimplify_stmt_list,\n@@ -2427,6 +2430,20 @@ vect_loop_versioning (loop_vec_info loop_vinfo,\n   initialize_original_copy_tables ();\n   loop_version (loop, cond_expr, &condition_bb,\n \t\tprob, prob, REG_BR_PROB_BASE - prob, true);\n+\n+  if (LOCATION_LOCUS (vect_location) != UNKNOWN_LOC\n+      && dump_enabled_p ())\n+    {\n+      if (version_alias)\n+        dump_printf_loc (MSG_OPTIMIZED_LOCATIONS, vect_location,\n+                         \"loop versioned for vectorization because of \"\n+\t\t\t \"possible aliasing\\n\");\n+      if (version_align)\n+        dump_printf_loc (MSG_OPTIMIZED_LOCATIONS, vect_location,\n+                         \"loop versioned for vectorization to enhance \"\n+\t\t\t \"alignment\\n\");\n+\n+    }\n   free_original_copy_tables();\n \n   /* Loop versioning violates an assumption we try to maintain during"}, {"sha": "9db94b16673442343ac142afc1757992fe8d70fc", "filename": "gcc/tree-vectorizer.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9cc1fb4b07fc0bda772841cd7528139e3361db4b/gcc%2Ftree-vectorizer.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9cc1fb4b07fc0bda772841cd7528139e3361db4b/gcc%2Ftree-vectorizer.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vectorizer.c?ref=9cc1fb4b07fc0bda772841cd7528139e3361db4b", "patch": "@@ -334,7 +334,7 @@ vectorize_loops (void)\n         if (LOCATION_LOCUS (vect_location) != UNKNOWN_LOC\n \t    && dump_enabled_p ())\n           dump_printf_loc (MSG_OPTIMIZED_LOCATIONS, vect_location,\n-                           \"Vectorized loop\\n\");\n+                           \"loop vectorized\\n\");\n \tvect_transform_loop (loop_vinfo);\n \tnum_vectorized_loops++;\n \t/* Now that the loop has been vectorized, allow it to be unrolled\n@@ -443,7 +443,7 @@ execute_vect_slp (void)\n           vect_slp_transform_bb (bb);\n           if (dump_enabled_p ())\n             dump_printf_loc (MSG_OPTIMIZED_LOCATIONS, vect_location,\n-\t\t\t     \"Vectorized basic-block\\n\");\n+\t\t\t     \"basic block vectorized\\n\");\n         }\n     }\n "}]}