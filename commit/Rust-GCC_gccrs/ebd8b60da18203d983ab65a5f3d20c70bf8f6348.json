{"sha": "ebd8b60da18203d983ab65a5f3d20c70bf8f6348", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWJkOGI2MGRhMTgyMDNkOTgzYWI2NWE1ZjNkMjBjNzBiZjhmNjM0OA==", "commit": {"author": {"name": "Steven Bosscher", "email": "stevenb@suse.de", "date": "2005-12-16T22:19:09Z"}, "committer": {"name": "Steven Bosscher", "email": "steven@gcc.gnu.org", "date": "2005-12-16T22:19:09Z"}, "message": "re PR rtl-optimization/23837 (Wrong code with REG_NO_CONFLICT notes (caused by combine))\n\n\tPR rtl-optimization/23837\n\t* optabs.c (expand_binop): For a multi-word rotate, never emit\n\ta REG_NO_CONFLICT block.\n\nFrom-SVN: r108690", "tree": {"sha": "27cbf67bba2b87ad3d3700394b9e945821f96440", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/27cbf67bba2b87ad3d3700394b9e945821f96440"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ebd8b60da18203d983ab65a5f3d20c70bf8f6348", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ebd8b60da18203d983ab65a5f3d20c70bf8f6348", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ebd8b60da18203d983ab65a5f3d20c70bf8f6348", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ebd8b60da18203d983ab65a5f3d20c70bf8f6348/comments", "author": null, "committer": null, "parents": [{"sha": "f3a1a6532fbce3ce51c71b07d5141c1f5f48c176", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f3a1a6532fbce3ce51c71b07d5141c1f5f48c176", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f3a1a6532fbce3ce51c71b07d5141c1f5f48c176"}], "stats": {"total": 28, "additions": 13, "deletions": 15}, "files": [{"sha": "4f36c02e47f859601071f48d9766f3dfe34c45fc", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ebd8b60da18203d983ab65a5f3d20c70bf8f6348/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ebd8b60da18203d983ab65a5f3d20c70bf8f6348/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=ebd8b60da18203d983ab65a5f3d20c70bf8f6348", "patch": "@@ -1,3 +1,9 @@\n+2005-12-16  Steven Bosscher  <stevenb@suse.de>\n+\n+\tPR rtl-optimization/23837\n+\t* optabs.c (expand_binop): For a multi-word rotate, never emit\n+\ta REG_NO_CONFLICT block.\n+\n 2005-12-16  John David Anglin  <dave.anglin@nrc-cnrc.gc.ca>\n \n \tPR middle-end/25457"}, {"sha": "45bfbbde4822be67bede5dc28cd9624ab290a37f", "filename": "gcc/optabs.c", "status": "modified", "additions": 7, "deletions": 15, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ebd8b60da18203d983ab65a5f3d20c70bf8f6348/gcc%2Foptabs.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ebd8b60da18203d983ab65a5f3d20c70bf8f6348/gcc%2Foptabs.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Foptabs.c?ref=ebd8b60da18203d983ab65a5f3d20c70bf8f6348", "patch": "@@ -1420,7 +1420,7 @@ expand_binop (enum machine_mode mode, optab binoptab, rtx op0, rtx op1,\n       && ashl_optab->handlers[(int) word_mode].insn_code != CODE_FOR_nothing\n       && lshr_optab->handlers[(int) word_mode].insn_code != CODE_FOR_nothing)\n     {\n-      rtx insns, equiv_value;\n+      rtx insns;\n       rtx into_target, outof_target;\n       rtx into_input, outof_input;\n       rtx inter;\n@@ -1520,20 +1520,12 @@ expand_binop (enum machine_mode mode, optab binoptab, rtx op0, rtx op1,\n \n       if (inter != 0)\n \t{\n-\t  if (binoptab->code != UNKNOWN)\n-\t    equiv_value = gen_rtx_fmt_ee (binoptab->code, mode, op0, op1);\n-\t  else\n-\t    equiv_value = 0;\n-\n-\t  /* We can't make this a no conflict block if this is a word swap,\n-\t     because the word swap case fails if the input and output values\n-\t     are in the same register.  */\n-\t  if (shift_count != BITS_PER_WORD)\n-\t    emit_no_conflict_block (insns, target, op0, op1, equiv_value);\n-\t  else\n-\t    emit_insn (insns);\n-\n-\n+\t  /* One may be tempted to wrap the insns in a REG_NO_CONFLICT\n+\t     block to help the register allocator a bit.  But a multi-word\n+\t     rotate will need all the input bits when setting the output\n+\t     bits, so there clearly is a conflict between the input and\n+\t     output registers.  So we can't use a no-conflict block here.  */\n+\t  emit_insn (insns);\n \t  return target;\n \t}\n     }"}]}