{"sha": "ffe889d7ffcc7e8150413d4de38e066940fb7881", "node_id": "C_kwDOANBUbNoAKGZmZTg4OWQ3ZmZjYzdlODE1MDQxM2Q0ZGUzOGUwNjY5NDBmYjc4ODE", "commit": {"author": {"name": "Piotr Trojanek", "email": "trojanek@adacore.com", "date": "2022-09-07T14:02:42Z"}, "committer": {"name": "Marc Poulhi\u00e8s", "email": "poulhies@adacore.com", "date": "2022-11-07T08:36:29Z"}, "message": "ada: Simplify detection of pragmas in the context items\n\nCode cleanup; semantics is unaffected.\n\ngcc/ada/\n\n\t* sem_prag.adb (Is_In_Context_Clause): Rewrite without negations\n\tand inequalities.", "tree": {"sha": "7e220ae3e6741624482426e6ec54053c040ed631", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7e220ae3e6741624482426e6ec54053c040ed631"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ffe889d7ffcc7e8150413d4de38e066940fb7881", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ffe889d7ffcc7e8150413d4de38e066940fb7881", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ffe889d7ffcc7e8150413d4de38e066940fb7881", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ffe889d7ffcc7e8150413d4de38e066940fb7881/comments", "author": {"login": "ptroja", "id": 161602, "node_id": "MDQ6VXNlcjE2MTYwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/161602?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ptroja", "html_url": "https://github.com/ptroja", "followers_url": "https://api.github.com/users/ptroja/followers", "following_url": "https://api.github.com/users/ptroja/following{/other_user}", "gists_url": "https://api.github.com/users/ptroja/gists{/gist_id}", "starred_url": "https://api.github.com/users/ptroja/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ptroja/subscriptions", "organizations_url": "https://api.github.com/users/ptroja/orgs", "repos_url": "https://api.github.com/users/ptroja/repos", "events_url": "https://api.github.com/users/ptroja/events{/privacy}", "received_events_url": "https://api.github.com/users/ptroja/received_events", "type": "User", "site_admin": false}, "committer": {"login": "dkm", "id": 87603, "node_id": "MDQ6VXNlcjg3NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/87603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dkm", "html_url": "https://github.com/dkm", "followers_url": "https://api.github.com/users/dkm/followers", "following_url": "https://api.github.com/users/dkm/following{/other_user}", "gists_url": "https://api.github.com/users/dkm/gists{/gist_id}", "starred_url": "https://api.github.com/users/dkm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dkm/subscriptions", "organizations_url": "https://api.github.com/users/dkm/orgs", "repos_url": "https://api.github.com/users/dkm/repos", "events_url": "https://api.github.com/users/dkm/events{/privacy}", "received_events_url": "https://api.github.com/users/dkm/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "74056e9411e0457c33ff5546a3563edb9ed09c99", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/74056e9411e0457c33ff5546a3563edb9ed09c99", "html_url": "https://github.com/Rust-GCC/gccrs/commit/74056e9411e0457c33ff5546a3563edb9ed09c99"}], "stats": {"total": 16, "additions": 5, "deletions": 11}, "files": [{"sha": "f33d858062d4b9338a2bfd93ee13c31a14be3973", "filename": "gcc/ada/sem_prag.adb", "status": "modified", "additions": 5, "deletions": 11, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ffe889d7ffcc7e8150413d4de38e066940fb7881/gcc%2Fada%2Fsem_prag.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ffe889d7ffcc7e8150413d4de38e066940fb7881/gcc%2Fada%2Fsem_prag.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_prag.adb?ref=ffe889d7ffcc7e8150413d4de38e066940fb7881", "patch": "@@ -7315,22 +7315,16 @@ package body Sem_Prag is\n          Parent_Node : Node_Id;\n \n       begin\n-         if not Is_List_Member (N) then\n-            return False;\n-\n-         else\n+         if Is_List_Member (N) then\n             Plist := List_Containing (N);\n             Parent_Node := Parent (Plist);\n \n-            if Parent_Node = Empty\n-              or else Nkind (Parent_Node) /= N_Compilation_Unit\n-              or else Context_Items (Parent_Node) /= Plist\n-            then\n-               return False;\n-            end if;\n+            return Present (Parent_Node)\n+              and then Nkind (Parent_Node) = N_Compilation_Unit\n+              and then Context_Items (Parent_Node) = Plist;\n          end if;\n \n-         return True;\n+         return False;\n       end Is_In_Context_Clause;\n \n       ---------------------------------"}]}