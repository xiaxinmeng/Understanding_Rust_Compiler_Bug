{"sha": "2aee3e57aed77de4f5ef28a8711b315aeb1bf77c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmFlZTNlNTdhZWQ3N2RlNGY1ZWYyOGE4NzExYjMxNWFlYjFiZjc3Yw==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2006-05-02T10:41:44Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2006-05-02T10:41:44Z"}, "message": "re PR middle-end/27328 (ICE with -fopenmp and goto)\n\n\tPR middle-end/27328\n\t* omp-low.c (remove_exit_barrier): Handle NULL exit_bb.\n\t(expand_omp_parallel): Likewise.\n\t* tree-cfg.c (move_sese_region_to_fn): Likewise.\n\n\t* gcc.dg/gomp/pr27328.c: New test.\n\nFrom-SVN: r113455", "tree": {"sha": "61b2330a1ce5d4bae00e79479b913e9d6160443f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/61b2330a1ce5d4bae00e79479b913e9d6160443f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2aee3e57aed77de4f5ef28a8711b315aeb1bf77c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2aee3e57aed77de4f5ef28a8711b315aeb1bf77c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2aee3e57aed77de4f5ef28a8711b315aeb1bf77c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2aee3e57aed77de4f5ef28a8711b315aeb1bf77c/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "4a31b7ee3c5e45b11c283fda801ac4b773ad2a19", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4a31b7ee3c5e45b11c283fda801ac4b773ad2a19", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4a31b7ee3c5e45b11c283fda801ac4b773ad2a19"}], "stats": {"total": 88, "additions": 70, "deletions": 18}, "files": [{"sha": "9a0849a8794ed2afc74d24206f5430546d8e877d", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2aee3e57aed77de4f5ef28a8711b315aeb1bf77c/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2aee3e57aed77de4f5ef28a8711b315aeb1bf77c/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=2aee3e57aed77de4f5ef28a8711b315aeb1bf77c", "patch": "@@ -1,5 +1,10 @@\n 2006-05-02  Jakub Jelinek  <jakub@redhat.com>\n \n+\tPR middle-end/27328\n+\t* omp-low.c (remove_exit_barrier): Handle NULL exit_bb.\n+\t(expand_omp_parallel): Likewise.\n+\t* tree-cfg.c (move_sese_region_to_fn): Likewise.\n+\n \tPR middle-end/27325\n \t* omp-low.c (lower_omp_sections): Call maybe_catch_exception\n \ton statement list containing also constructors and destructors."}, {"sha": "62b715e37adb6d5334d1032fc61f94372be20557", "filename": "gcc/omp-low.c", "status": "modified", "additions": 16, "deletions": 6, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2aee3e57aed77de4f5ef28a8711b315aeb1bf77c/gcc%2Fomp-low.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2aee3e57aed77de4f5ef28a8711b315aeb1bf77c/gcc%2Fomp-low.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fomp-low.c?ref=2aee3e57aed77de4f5ef28a8711b315aeb1bf77c", "patch": "@@ -2227,6 +2227,11 @@ remove_exit_barrier (struct omp_region *region)\n \n   exit_bb = region->exit;\n \n+  /* If the parallel region doesn't return, we don't have REGION->EXIT\n+     block at all.  */\n+  if (! exit_bb)\n+    return;\n+\n   /* The last insn in the block will be the parallel's OMP_RETURN.  The\n      workshare's OMP_RETURN will be in a preceding block.  The kinds of\n      statements that can appear in between are extremely limited -- no\n@@ -2372,15 +2377,20 @@ expand_omp_parallel (struct omp_region *region)\n \t regions has invalidated it.  */\n       free_dominance_info (CDI_DOMINATORS);\n       new_bb = move_sese_region_to_fn (child_cfun, entry_bb, exit_bb);\n-      single_succ_edge (new_bb)->flags = EDGE_FALLTHRU;\n+      if (exit_bb)\n+\tsingle_succ_edge (new_bb)->flags = EDGE_FALLTHRU;\n       cgraph_add_new_function (child_fn);\n \n       /* Convert OMP_RETURN into a RETURN_EXPR.  */\n-      si = bsi_last (exit_bb);\n-      gcc_assert (!bsi_end_p (si) && TREE_CODE (bsi_stmt (si)) == OMP_RETURN);\n-      t = build1 (RETURN_EXPR, void_type_node, NULL);\n-      bsi_insert_after (&si, t, TSI_SAME_STMT);\n-      bsi_remove (&si, true);\n+      if (exit_bb)\n+\t{\n+\t  si = bsi_last (exit_bb);\n+\t  gcc_assert (!bsi_end_p (si)\n+\t\t      && TREE_CODE (bsi_stmt (si)) == OMP_RETURN);\n+\t  t = build1 (RETURN_EXPR, void_type_node, NULL);\n+\t  bsi_insert_after (&si, t, TSI_SAME_STMT);\n+\t  bsi_remove (&si, true);\n+\t}\n     }\n \n   /* Emit a library call to launch the children threads.  */"}, {"sha": "b890b64302bef79369cca347782afcf2cba99b9b", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2aee3e57aed77de4f5ef28a8711b315aeb1bf77c/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2aee3e57aed77de4f5ef28a8711b315aeb1bf77c/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=2aee3e57aed77de4f5ef28a8711b315aeb1bf77c", "patch": "@@ -1,5 +1,8 @@\n 2006-05-02  Jakub Jelinek  <jakub@redhat.com>\n \n+\tPR middle-end/27328\n+\t* gcc.dg/gomp/pr27328.c: New test.\n+\n \tPR middle-end/27325\n \t* g++.dg/gomp/pr27325.C: New test.\n "}, {"sha": "afde738a725d2f9d804b19fca7806d4ddc6af38d", "filename": "gcc/testsuite/gcc.dg/gomp/pr27328.c", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2aee3e57aed77de4f5ef28a8711b315aeb1bf77c/gcc%2Ftestsuite%2Fgcc.dg%2Fgomp%2Fpr27328.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2aee3e57aed77de4f5ef28a8711b315aeb1bf77c/gcc%2Ftestsuite%2Fgcc.dg%2Fgomp%2Fpr27328.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fgomp%2Fpr27328.c?ref=2aee3e57aed77de4f5ef28a8711b315aeb1bf77c", "patch": "@@ -0,0 +1,19 @@\n+/* PR middle-end/27328 */\n+/* { dg-do compile } */\n+\n+extern void baz (void) __attribute__((noreturn));\n+\n+void\n+foo (void)\n+{\n+#pragma omp parallel\n+  for (;;)\n+    ;\n+}\n+\n+void\n+bar (void)\n+{\n+#pragma omp parallel\n+  baz ();\n+}"}, {"sha": "4c5aa4bd4e7ec9c0a55c3a0cf5b7034f89dbc014", "filename": "gcc/tree-cfg.c", "status": "modified", "additions": 27, "deletions": 12, "changes": 39, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2aee3e57aed77de4f5ef28a8711b315aeb1bf77c/gcc%2Ftree-cfg.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2aee3e57aed77de4f5ef28a8711b315aeb1bf77c/gcc%2Ftree-cfg.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-cfg.c?ref=2aee3e57aed77de4f5ef28a8711b315aeb1bf77c", "patch": "@@ -4814,7 +4814,8 @@ move_sese_region_to_fn (struct function *dest_cfun, basic_block entry_bb,\n   /* If ENTRY does not strictly dominate EXIT, this cannot be an SESE\n      region.  */\n   gcc_assert (entry_bb != exit_bb\n-              && dominated_by_p (CDI_DOMINATORS, exit_bb, entry_bb));\n+              && (!exit_bb\n+\t\t  || dominated_by_p (CDI_DOMINATORS, exit_bb, entry_bb)));\n \n   bbs = NULL;\n   VEC_safe_push (basic_block, heap, bbs, entry_bb);\n@@ -4835,15 +4836,25 @@ move_sese_region_to_fn (struct function *dest_cfun, basic_block entry_bb,\n       remove_edge (e);\n     }\n \n-  num_exit_edges = EDGE_COUNT (exit_bb->succs);\n-  exit_succ = (basic_block *) xcalloc (num_exit_edges, sizeof (basic_block));\n-  exit_flag = (int *) xcalloc (num_exit_edges, sizeof (int));\n-  i = 0;\n-  for (ei = ei_start (exit_bb->succs); (e = ei_safe_edge (ei)) != NULL;)\n+  if (exit_bb)\n     {\n-      exit_flag[i] = e->flags;\n-      exit_succ[i++] = e->dest;\n-      remove_edge (e);\n+      num_exit_edges = EDGE_COUNT (exit_bb->succs);\n+      exit_succ = (basic_block *) xcalloc (num_exit_edges,\n+\t\t\t\t\t   sizeof (basic_block));\n+      exit_flag = (int *) xcalloc (num_exit_edges, sizeof (int));\n+      i = 0;\n+      for (ei = ei_start (exit_bb->succs); (e = ei_safe_edge (ei)) != NULL;)\n+\t{\n+\t  exit_flag[i] = e->flags;\n+\t  exit_succ[i++] = e->dest;\n+\t  remove_edge (e);\n+\t}\n+    }\n+  else\n+    {\n+      num_exit_edges = 0;\n+      exit_succ = NULL;\n+      exit_flag = NULL;\n     }\n \n   /* Switch context to the child function to initialize DEST_FN's CFG.  */\n@@ -4923,7 +4934,8 @@ move_sese_region_to_fn (struct function *dest_cfun, basic_block entry_bb,\n      these helpers.  */\n   cfun = dest_cfun;\n   make_edge (ENTRY_BLOCK_PTR, entry_bb, EDGE_FALLTHRU);\n-  make_edge (exit_bb,  EXIT_BLOCK_PTR, 0);\n+  if (exit_bb)\n+    make_edge (exit_bb,  EXIT_BLOCK_PTR, 0);\n   cfun = saved_cfun;\n \n   /* Back in the original function, the SESE region has disappeared,\n@@ -4935,10 +4947,13 @@ move_sese_region_to_fn (struct function *dest_cfun, basic_block entry_bb,\n   for (i = 0; i < num_exit_edges; i++)\n     make_edge (bb, exit_succ[i], exit_flag[i]);\n \n-  free (exit_flag);\n+  if (exit_bb)\n+    {\n+      free (exit_flag);\n+      free (exit_succ);\n+    }\n   free (entry_flag);\n   free (entry_pred);\n-  free (exit_succ);\n   free_dominance_info (CDI_DOMINATORS);\n   free_dominance_info (CDI_POST_DOMINATORS);\n   VEC_free (basic_block, heap, bbs);"}]}