{"sha": "5de73c050e4dbb3dfc8705bf20199aedb090df20", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWRlNzNjMDUwZTRkYmIzZGZjODcwNWJmMjAxOTlhZWRiMDkwZGYyMA==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2017-11-30T22:47:51Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2017-11-30T22:47:51Z"}, "message": "spellcheck-tree.c (test_find_closest_identifier): Use ; instead of ;;.\n\n\t* spellcheck-tree.c (test_find_closest_identifier): Use ; instead\n\tof ;;.\n\t* gengtype-state.c (read_state_pair): Likewise.\n\t* gimple-fold.c (gimple_fold_builtin_string_compare): Likewise.\n\t* sel-sched-dump.c (dump_insn_rtx_1): Likewise.\n\t* ipa-cp.c (intersect_aggregates_with_edge): Likewise.\n\t* ifcvt.c (noce_try_store_flag_constants): Likewise.\n\t* tree-ssa-ccp.c (ccp_finalize): Likewise.\n\t* omp-grid.c (grid_process_kernel_body_copy): Likewise.\n\t* builtins.c (fold_builtin_3): Likewise.\n\t* graphite-scop-detection.c\n\t(scop_detection::stmt_has_simple_data_refs_p): Likewise.\n\t* hsa-gen.c (hsa_function_representation::hsa_function_representation):\n\tLikewise.\nc/\n\t* c-parser.c (c_parser_postfix_expression): Use ; instead of ;;.\njit/\n\t* jit-recording.c\n\t(recording::memento_of_new_rvalue_from_const <long>::write_reproducer):\n\tUse ; instead of ;;.\nlto/\n\t* lto.c (create_subid_section_table): Use ; instead of ;;.\nobjc/\n\t* objc-next-runtime-abi-01.c (generate_dispatch_table): Use ; instead\n\tof ;;.\n\nFrom-SVN: r255284", "tree": {"sha": "0b3cb78d4587c91313736b1efd39187b9e3bcb39", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0b3cb78d4587c91313736b1efd39187b9e3bcb39"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5de73c050e4dbb3dfc8705bf20199aedb090df20", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5de73c050e4dbb3dfc8705bf20199aedb090df20", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5de73c050e4dbb3dfc8705bf20199aedb090df20", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5de73c050e4dbb3dfc8705bf20199aedb090df20/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "1069dc251bd97f187ff42b543ca90e08203465ae", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1069dc251bd97f187ff42b543ca90e08203465ae", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1069dc251bd97f187ff42b543ca90e08203465ae"}], "stats": {"total": 68, "additions": 52, "deletions": 16}, "files": [{"sha": "6a42a25a24e6d0b85fbe742ca4b59b819e21e407", "filename": "gcc/ChangeLog", "status": "modified", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5de73c050e4dbb3dfc8705bf20199aedb090df20/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5de73c050e4dbb3dfc8705bf20199aedb090df20/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=5de73c050e4dbb3dfc8705bf20199aedb090df20", "patch": "@@ -1,3 +1,20 @@\n+2017-11-30  Jakub Jelinek  <jakub@redhat.com>\n+\n+\t* spellcheck-tree.c (test_find_closest_identifier): Use ; instead\n+\tof ;;.\n+\t* gengtype-state.c (read_state_pair): Likewise.\n+\t* gimple-fold.c (gimple_fold_builtin_string_compare): Likewise.\n+\t* sel-sched-dump.c (dump_insn_rtx_1): Likewise.\n+\t* ipa-cp.c (intersect_aggregates_with_edge): Likewise.\n+\t* ifcvt.c (noce_try_store_flag_constants): Likewise.\n+\t* tree-ssa-ccp.c (ccp_finalize): Likewise.\n+\t* omp-grid.c (grid_process_kernel_body_copy): Likewise.\n+\t* builtins.c (fold_builtin_3): Likewise.\n+\t* graphite-scop-detection.c\n+\t(scop_detection::stmt_has_simple_data_refs_p): Likewise.\n+\t* hsa-gen.c (hsa_function_representation::hsa_function_representation):\n+\tLikewise.\n+\n 2017-12-01  Maxim Ostapenko  <m.ostapenko@samsung.com>\n \n \tPR sanitizer/81697"}, {"sha": "097e1b7356380a869233d182ed48f00cfd7fc1e3", "filename": "gcc/builtins.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5de73c050e4dbb3dfc8705bf20199aedb090df20/gcc%2Fbuiltins.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5de73c050e4dbb3dfc8705bf20199aedb090df20/gcc%2Fbuiltins.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fbuiltins.c?ref=5de73c050e4dbb3dfc8705bf20199aedb090df20", "patch": "@@ -9088,7 +9088,7 @@ fold_builtin_3 (location_t loc, tree fndecl,\n     break;\n \n     case BUILT_IN_MEMCMP:\n-      return fold_builtin_memcmp (loc, arg0, arg1, arg2);;\n+      return fold_builtin_memcmp (loc, arg0, arg1, arg2);\n \n     case BUILT_IN_EXPECT:\n       return fold_builtin_expect (loc, arg0, arg1, arg2);"}, {"sha": "677b54cbfaebbd8e1f7fc57f8d61feff5193b10b", "filename": "gcc/c/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5de73c050e4dbb3dfc8705bf20199aedb090df20/gcc%2Fc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5de73c050e4dbb3dfc8705bf20199aedb090df20/gcc%2Fc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc%2FChangeLog?ref=5de73c050e4dbb3dfc8705bf20199aedb090df20", "patch": "@@ -1,3 +1,7 @@\n+2017-11-30  Jakub Jelinek  <jakub@redhat.com>\n+\n+\t* c-parser.c (c_parser_postfix_expression): Use ; instead of ;;.\n+\n 2017-11-28  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR sanitizer/81275"}, {"sha": "755cd2b434194070d340c14b6cde35a0cb45f183", "filename": "gcc/c/c-parser.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5de73c050e4dbb3dfc8705bf20199aedb090df20/gcc%2Fc%2Fc-parser.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5de73c050e4dbb3dfc8705bf20199aedb090df20/gcc%2Fc%2Fc-parser.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc%2Fc-parser.c?ref=5de73c050e4dbb3dfc8705bf20199aedb090df20", "patch": "@@ -7763,7 +7763,7 @@ c_parser_postfix_expression (c_parser *parser)\n {\n   struct c_expr expr, e1;\n   struct c_type_name *t1, *t2;\n-  location_t loc = c_parser_peek_token (parser)->location;;\n+  location_t loc = c_parser_peek_token (parser)->location;\n   source_range tok_range = c_parser_peek_token (parser)->get_range ();\n   expr.original_code = ERROR_MARK;\n   expr.original_type = NULL;"}, {"sha": "bae5a2e1b5f8014c7604787a98d0e1215ed12e88", "filename": "gcc/gengtype-state.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5de73c050e4dbb3dfc8705bf20199aedb090df20/gcc%2Fgengtype-state.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5de73c050e4dbb3dfc8705bf20199aedb090df20/gcc%2Fgengtype-state.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgengtype-state.c?ref=5de73c050e4dbb3dfc8705bf20199aedb090df20", "patch": "@@ -2206,7 +2206,7 @@ read_state_pair (pair_p *current)\n \t  next_state_tokens (1);\n \t  read_state_type (&((*current)->type));\n \t  read_state_fileloc (&((*current)->line));\n-\t  read_state_options (&((*current)->opt));;\n+\t  read_state_options (&((*current)->opt));\n \t  t0 = peek_state_token (0);\n \t  if (state_token_kind (t0) == STOK_RIGHTPAR)\n \t    {"}, {"sha": "05a930e98f8453dfb03780c3198afec1e9addef2", "filename": "gcc/gimple-fold.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5de73c050e4dbb3dfc8705bf20199aedb090df20/gcc%2Fgimple-fold.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5de73c050e4dbb3dfc8705bf20199aedb090df20/gcc%2Fgimple-fold.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgimple-fold.c?ref=5de73c050e4dbb3dfc8705bf20199aedb090df20", "patch": "@@ -2145,7 +2145,7 @@ gimple_fold_builtin_string_compare (gimple_stmt_iterator *gsi)\n \t    r = strncmp (p1, p2, length);\n \t    if (r == 0)\n \t      known_result = true;\n-\t    break;;\n+\t    break;\n \t  }\n \tdefault:\n \t  gcc_unreachable ();"}, {"sha": "0f09c1359dd28416cd7680db5cff971c9d6d2b21", "filename": "gcc/graphite-scop-detection.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5de73c050e4dbb3dfc8705bf20199aedb090df20/gcc%2Fgraphite-scop-detection.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5de73c050e4dbb3dfc8705bf20199aedb090df20/gcc%2Fgraphite-scop-detection.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgraphite-scop-detection.c?ref=5de73c050e4dbb3dfc8705bf20199aedb090df20", "patch": "@@ -1005,7 +1005,7 @@ scop_detection::graphite_can_represent_expr (sese_l scop, loop_p loop,\n bool\n scop_detection::stmt_has_simple_data_refs_p (sese_l scop, gimple *stmt)\n {\n-  edge nest = scop.entry;;\n+  edge nest = scop.entry;\n   loop_p loop = loop_containing_stmt (stmt);\n   if (!loop_in_sese_p (loop, scop))\n     loop = NULL;"}, {"sha": "70f715ec8fe24ea27505cf8d730588424a566eb0", "filename": "gcc/hsa-gen.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5de73c050e4dbb3dfc8705bf20199aedb090df20/gcc%2Fhsa-gen.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5de73c050e4dbb3dfc8705bf20199aedb090df20/gcc%2Fhsa-gen.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fhsa-gen.c?ref=5de73c050e4dbb3dfc8705bf20199aedb090df20", "patch": "@@ -211,7 +211,7 @@ hsa_function_representation::hsa_function_representation\n     m_seen_error (false), m_temp_symbol_count (0), m_ssa_map (),\n     m_modified_cfg (modified_cfg)\n {\n-  int sym_init_len = (vec_safe_length (cfun->local_decls) / 2) + 1;;\n+  int sym_init_len = (vec_safe_length (cfun->local_decls) / 2) + 1;\n   m_local_symbols = new hash_table <hsa_noop_symbol_hasher> (sym_init_len);\n   m_ssa_map.safe_grow_cleared (ssa_names_count);\n }"}, {"sha": "91360d806153d9d6cd75b31038162b131521a859", "filename": "gcc/ifcvt.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5de73c050e4dbb3dfc8705bf20199aedb090df20/gcc%2Fifcvt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5de73c050e4dbb3dfc8705bf20199aedb090df20/gcc%2Fifcvt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fifcvt.c?ref=5de73c050e4dbb3dfc8705bf20199aedb090df20", "patch": "@@ -1287,7 +1287,7 @@ noce_try_store_flag_constants (struct noce_if_info *if_info)\n   HOST_WIDE_INT itrue, ifalse, diff, tmp;\n   int normalize;\n   bool can_reverse;\n-  machine_mode mode = GET_MODE (if_info->x);;\n+  machine_mode mode = GET_MODE (if_info->x);\n   rtx common = NULL_RTX;\n \n   rtx a = if_info->a;"}, {"sha": "144762cf5e25a3a66c6fd09cbe1840321ae63a7f", "filename": "gcc/ipa-cp.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5de73c050e4dbb3dfc8705bf20199aedb090df20/gcc%2Fipa-cp.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5de73c050e4dbb3dfc8705bf20199aedb090df20/gcc%2Fipa-cp.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fipa-cp.c?ref=5de73c050e4dbb3dfc8705bf20199aedb090df20", "patch": "@@ -4192,7 +4192,7 @@ intersect_aggregates_with_edge (struct cgraph_edge *cs, int index,\n \t}\n       else\n \t{\n-\t  src_plats = ipa_get_parm_lattices (caller_info, src_idx);;\n+\t  src_plats = ipa_get_parm_lattices (caller_info, src_idx);\n \t  /* Currently we do not produce clobber aggregate jump\n \t     functions, adjust when we do.  */\n \t  gcc_checking_assert (!src_plats->aggs || !jfunc->agg.items);\n@@ -4214,7 +4214,7 @@ intersect_aggregates_with_edge (struct cgraph_edge *cs, int index,\n \tFOR_EACH_VEC_ELT (inter, k, item)\n \t  {\n \t    int l = 0;\n-\t    bool found = false;;\n+\t    bool found = false;\n \n \t    if (!item->value)\n \t      continue;"}, {"sha": "7be5c47f01d6f9aaf0c8e339b36e9459497fa24c", "filename": "gcc/jit/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5de73c050e4dbb3dfc8705bf20199aedb090df20/gcc%2Fjit%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5de73c050e4dbb3dfc8705bf20199aedb090df20/gcc%2Fjit%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjit%2FChangeLog?ref=5de73c050e4dbb3dfc8705bf20199aedb090df20", "patch": "@@ -1,3 +1,9 @@\n+2017-11-30  Jakub Jelinek  <jakub@redhat.com>\n+\n+\t* jit-recording.c\n+\t(recording::memento_of_new_rvalue_from_const <long>::write_reproducer):\n+\tUse ; instead of ;;.\n+\n 2017-11-28  Jakub Jelinek  <jakub@redhat.com>\n \n \t* jit-playback.c (add_switch): Build SWITCH_EXPR using build2 instead"}, {"sha": "fb492c09142ffbfd511a8a7b57ee6d18b28eb204", "filename": "gcc/jit/jit-recording.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5de73c050e4dbb3dfc8705bf20199aedb090df20/gcc%2Fjit%2Fjit-recording.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5de73c050e4dbb3dfc8705bf20199aedb090df20/gcc%2Fjit%2Fjit-recording.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjit%2Fjit-recording.c?ref=5de73c050e4dbb3dfc8705bf20199aedb090df20", "patch": "@@ -4487,7 +4487,7 @@ recording::memento_of_new_rvalue_from_const <long>::write_reproducer (reproducer\n \t       id,\n \t       r.get_identifier (get_context ()),\n \t       r.get_identifier_as_type (m_type),\n-\t       m_value + 1);;\n+\t       m_value + 1);\n       return;\n     }\n "}, {"sha": "7d997e4f9ff539f07a403c48760901236cbc7385", "filename": "gcc/lto/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5de73c050e4dbb3dfc8705bf20199aedb090df20/gcc%2Flto%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5de73c050e4dbb3dfc8705bf20199aedb090df20/gcc%2Flto%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flto%2FChangeLog?ref=5de73c050e4dbb3dfc8705bf20199aedb090df20", "patch": "@@ -1,3 +1,7 @@\n+2017-11-30  Jakub Jelinek  <jakub@redhat.com>\n+\n+\t* lto.c (create_subid_section_table): Use ; instead of ;;.\n+\n 2017-11-22  Marek Polacek  <polacek@redhat.com>\n \n \tPR c++/60336"}, {"sha": "ae9bae84016d0a7e835f688bec2f157cb593db05", "filename": "gcc/lto/lto.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5de73c050e4dbb3dfc8705bf20199aedb090df20/gcc%2Flto%2Flto.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5de73c050e4dbb3dfc8705bf20199aedb090df20/gcc%2Flto%2Flto.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flto%2Flto.c?ref=5de73c050e4dbb3dfc8705bf20199aedb090df20", "patch": "@@ -1989,7 +1989,7 @@ create_subid_section_table (struct lto_section_slot *ls, splay_tree file_ids,\n       file_data = ggc_alloc<lto_file_decl_data> ();\n       memset(file_data, 0, sizeof (struct lto_file_decl_data));\n       file_data->id = id;\n-      file_data->section_hash_table = lto_obj_create_section_hash_table ();;\n+      file_data->section_hash_table = lto_obj_create_section_hash_table ();\n       lto_splay_tree_insert (file_ids, id, file_data);\n \n       /* Maintain list in linker order */"}, {"sha": "39d0223ca0e84ce5836850fc38a91e36dbb56d08", "filename": "gcc/objc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5de73c050e4dbb3dfc8705bf20199aedb090df20/gcc%2Fobjc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5de73c050e4dbb3dfc8705bf20199aedb090df20/gcc%2Fobjc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fobjc%2FChangeLog?ref=5de73c050e4dbb3dfc8705bf20199aedb090df20", "patch": "@@ -1,3 +1,8 @@\n+2017-11-30  Jakub Jelinek  <jakub@redhat.com>\n+\n+\t* objc-next-runtime-abi-01.c (generate_dispatch_table): Use ; instead\n+\tof ;;.\n+\n 2017-11-10  Martin Sebor  <msebor@redhat.com>\n \n \tPR c/81117"}, {"sha": "8c52afb2704c6673fb34c59c3dc3ec48070b0beb", "filename": "gcc/objc/objc-next-runtime-abi-01.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5de73c050e4dbb3dfc8705bf20199aedb090df20/gcc%2Fobjc%2Fobjc-next-runtime-abi-01.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5de73c050e4dbb3dfc8705bf20199aedb090df20/gcc%2Fobjc%2Fobjc-next-runtime-abi-01.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fobjc%2Fobjc-next-runtime-abi-01.c?ref=5de73c050e4dbb3dfc8705bf20199aedb090df20", "patch": "@@ -1662,7 +1662,7 @@ generate_dispatch_table (tree chain, const char *name, tree attr)\n {\n   tree decl, method_list_template, initlist;\n   vec<constructor_elt, va_gc> *v = NULL;\n-  int size;;\n+  int size;\n \n   if (!chain || !name || !(size = list_length (chain)))\n     return NULL_TREE;"}, {"sha": "7314126f8e3c233beae0333e77730ef2c9c02235", "filename": "gcc/omp-grid.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5de73c050e4dbb3dfc8705bf20199aedb090df20/gcc%2Fomp-grid.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5de73c050e4dbb3dfc8705bf20199aedb090df20/gcc%2Fomp-grid.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fomp-grid.c?ref=5de73c050e4dbb3dfc8705bf20199aedb090df20", "patch": "@@ -1237,7 +1237,7 @@ grid_process_kernel_body_copy (grid_prop *grid, gimple_seq seq,\n \n       if (gimple_omp_for_combined_p (inner_loop))\n \tgrid_eliminate_combined_simd_part (inner_loop);\n-      struct walk_stmt_info body_wi;;\n+      struct walk_stmt_info body_wi;\n       memset (&body_wi, 0, sizeof (body_wi));\n       walk_gimple_seq_mod (gimple_omp_body_ptr (inner_loop),\n \t\t\t   grid_process_grid_body, NULL, &body_wi);"}, {"sha": "44e0c0c82dd0b46fcc32cad4768d45a1dadc0f04", "filename": "gcc/sel-sched-dump.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5de73c050e4dbb3dfc8705bf20199aedb090df20/gcc%2Fsel-sched-dump.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5de73c050e4dbb3dfc8705bf20199aedb090df20/gcc%2Fsel-sched-dump.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fsel-sched-dump.c?ref=5de73c050e4dbb3dfc8705bf20199aedb090df20", "patch": "@@ -121,7 +121,7 @@ dump_insn_rtx_1 (rtx insn, int flags)\n   int all;\n \n   /* flags == -1 also means dumping all.  */\n-  all = (flags & 1);;\n+  all = (flags & 1);\n   if (all)\n     flags |= DUMP_INSN_RTX_ALL;\n "}, {"sha": "b819980b62bbe51892670acadfdbedb554057069", "filename": "gcc/spellcheck-tree.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5de73c050e4dbb3dfc8705bf20199aedb090df20/gcc%2Fspellcheck-tree.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5de73c050e4dbb3dfc8705bf20199aedb090df20/gcc%2Fspellcheck-tree.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fspellcheck-tree.c?ref=5de73c050e4dbb3dfc8705bf20199aedb090df20", "patch": "@@ -123,7 +123,7 @@ test_find_closest_identifier ()\n   ASSERT_EQ (apple, find_closest_identifier (get_identifier (\"app\"),\n \t\t\t\t\t     &candidates));\n   ASSERT_EQ (banana, find_closest_identifier (get_identifier (\"banyan\"),\n-\t\t\t\t\t      &candidates));;\n+\t\t\t\t\t      &candidates));\n   ASSERT_EQ (cherry, find_closest_identifier (get_identifier (\"berry\"),\n \t\t\t\t\t      &candidates));\n   ASSERT_EQ (NULL,"}, {"sha": "ae6006d1163dfe034c51406c002446d4189a190c", "filename": "gcc/tree-ssa-ccp.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5de73c050e4dbb3dfc8705bf20199aedb090df20/gcc%2Ftree-ssa-ccp.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5de73c050e4dbb3dfc8705bf20199aedb090df20/gcc%2Ftree-ssa-ccp.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-ccp.c?ref=5de73c050e4dbb3dfc8705bf20199aedb090df20", "patch": "@@ -989,7 +989,7 @@ ccp_finalize (bool nonzero_p)\n \n   free (const_val);\n   const_val = NULL;\n-  return something_changed;;\n+  return something_changed;\n }\n \n "}]}