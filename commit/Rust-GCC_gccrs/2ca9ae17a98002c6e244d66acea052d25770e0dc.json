{"sha": "2ca9ae17a98002c6e244d66acea052d25770e0dc", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmNhOWFlMTdhOTgwMDJjNmUyNDRkNjZhY2VhMDUyZDI1NzcwZTBkYw==", "commit": {"author": {"name": "Jim Wilson", "email": "wilson@gcc.gnu.org", "date": "1995-04-26T18:08:54Z"}, "committer": {"name": "Jim Wilson", "email": "wilson@gcc.gnu.org", "date": "1995-04-26T18:08:54Z"}, "message": "(simplify_rtx, case TRUNCATE): Add.  Use force_to_mode.\n\n(force_to_mode, case AND): Allow some simplifications when GET_MODE (x)\nhas more bits than HOST_BITS_PER_WIDE_INT.\n\nFrom-SVN: r9479", "tree": {"sha": "d9c614c004c1aa870cd6174e671d12776048e902", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d9c614c004c1aa870cd6174e671d12776048e902"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2ca9ae17a98002c6e244d66acea052d25770e0dc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2ca9ae17a98002c6e244d66acea052d25770e0dc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2ca9ae17a98002c6e244d66acea052d25770e0dc", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2ca9ae17a98002c6e244d66acea052d25770e0dc/comments", "author": null, "committer": null, "parents": [{"sha": "99f762bff753e425603fb24473155a1c63582b95", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/99f762bff753e425603fb24473155a1c63582b95", "html_url": "https://github.com/Rust-GCC/gccrs/commit/99f762bff753e425603fb24473155a1c63582b95"}], "stats": {"total": 13, "additions": 10, "deletions": 3}, "files": [{"sha": "827141c2e5f7b38d594962494f716add359e6333", "filename": "gcc/combine.c", "status": "modified", "additions": 10, "deletions": 3, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2ca9ae17a98002c6e244d66acea052d25770e0dc/gcc%2Fcombine.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2ca9ae17a98002c6e244d66acea052d25770e0dc/gcc%2Fcombine.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcombine.c?ref=2ca9ae17a98002c6e244d66acea052d25770e0dc", "patch": "@@ -3447,6 +3447,13 @@ simplify_rtx (x, op0_mode, last, in_dest)\n \t}\n       break;\n \n+    case TRUNCATE:\n+      if (GET_MODE_BITSIZE (mode) <= HOST_BITS_PER_WIDE_INT)\n+\tSUBST (XEXP (x, 0),\n+\t       force_to_mode (XEXP (x, 0), GET_MODE (XEXP (x, 0)),\n+\t\t\t      GET_MODE_MASK (mode), NULL_RTX, 0));\n+      break;\n+\n     case FLOAT_TRUNCATE:\n       /* (float_truncate:SF (float_extend:DF foo:SF)) = foo:SF.  */\n       if (GET_CODE (XEXP (x, 0)) == FLOAT_EXTEND\n@@ -5765,8 +5772,7 @@ force_to_mode (x, mode, mask, reg, just_select)\n \t whose constant is the AND of that constant with MASK.  If it\n \t remains an AND of MASK, delete it since it is redundant.  */\n \n-      if (GET_CODE (XEXP (x, 1)) == CONST_INT\n-\t  && GET_MODE_BITSIZE (GET_MODE (x)) <= HOST_BITS_PER_WIDE_INT)\n+      if (GET_CODE (XEXP (x, 1)) == CONST_INT)\n \t{\n \t  x = simplify_and_const_int (x, op_mode, XEXP (x, 0),\n \t\t\t\t      mask & INTVAL (XEXP (x, 1)));\n@@ -5785,7 +5791,8 @@ force_to_mode (x, mode, mask, reg, just_select)\n \t     cheaper constant.  */\n \n \t  if (GET_CODE (x) == AND && GET_CODE (XEXP (x, 1)) == CONST_INT\n-\t      && GET_MODE_MASK (GET_MODE (x)) != mask)\n+\t      && GET_MODE_MASK (GET_MODE (x)) != mask\n+\t      && GET_MODE_BITSIZE (GET_MODE (x)) <= HOST_BITS_PER_WIDE_INT)\n \t    {\n \t      HOST_WIDE_INT cval = (INTVAL (XEXP (x, 1))\n \t\t\t\t    | (GET_MODE_MASK (GET_MODE (x)) & ~ mask));"}]}