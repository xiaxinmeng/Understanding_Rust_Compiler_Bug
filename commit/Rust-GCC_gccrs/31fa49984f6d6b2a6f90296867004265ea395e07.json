{"sha": "31fa49984f6d6b2a6f90296867004265ea395e07", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzFmYTQ5OTg0ZjZkNmIyYTZmOTAyOTY4NjcwMDQyNjVlYTM5NWUwNw==", "commit": {"author": {"name": "Douglas Gregor", "email": "doug.gregor@gmail.com", "date": "2007-08-29T12:25:01Z"}, "committer": {"name": "Doug Gregor", "email": "dgregor@gcc.gnu.org", "date": "2007-08-29T12:25:01Z"}, "message": "re PR c++/33194 (ICE: canonical types differ for identical types void ()(const char*, ...) and void ()(const char*, ...))\n\n2007-08-29  Douglas Gregor  <doug.gregor@gmail.com>\n\n\tPR c++/33194\n\t* tree.c (build_type_attribute_qual_variant): Set canonical types\n\ton the final, unqualified attribute variant before building the\n\tqualified version.\n\n2007-08-29  Douglas Gregor  <doug.gregor@gmail.com>\n\n\tPR c++/33194\n\t* g++.dg/other/canon-33194.C: New.\n\nFrom-SVN: r127896", "tree": {"sha": "2b91b39e4ff5198911e5114e0cd3c9f44d0e6e73", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2b91b39e4ff5198911e5114e0cd3c9f44d0e6e73"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/31fa49984f6d6b2a6f90296867004265ea395e07", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/31fa49984f6d6b2a6f90296867004265ea395e07", "html_url": "https://github.com/Rust-GCC/gccrs/commit/31fa49984f6d6b2a6f90296867004265ea395e07", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/31fa49984f6d6b2a6f90296867004265ea395e07/comments", "author": {"login": "DougGregor", "id": 989428, "node_id": "MDQ6VXNlcjk4OTQyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/989428?v=4", "gravatar_id": "", "url": "https://api.github.com/users/DougGregor", "html_url": "https://github.com/DougGregor", "followers_url": "https://api.github.com/users/DougGregor/followers", "following_url": "https://api.github.com/users/DougGregor/following{/other_user}", "gists_url": "https://api.github.com/users/DougGregor/gists{/gist_id}", "starred_url": "https://api.github.com/users/DougGregor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/DougGregor/subscriptions", "organizations_url": "https://api.github.com/users/DougGregor/orgs", "repos_url": "https://api.github.com/users/DougGregor/repos", "events_url": "https://api.github.com/users/DougGregor/events{/privacy}", "received_events_url": "https://api.github.com/users/DougGregor/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "d2b9afb12104e09bd382b6b5f4cbfecc11983629", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d2b9afb12104e09bd382b6b5f4cbfecc11983629", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d2b9afb12104e09bd382b6b5f4cbfecc11983629"}], "stats": {"total": 45, "additions": 38, "deletions": 7}, "files": [{"sha": "5300252823f912071ea2595b9a1ddcc04aad9c7e", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/31fa49984f6d6b2a6f90296867004265ea395e07/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/31fa49984f6d6b2a6f90296867004265ea395e07/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=31fa49984f6d6b2a6f90296867004265ea395e07", "patch": "@@ -1,3 +1,10 @@\n+2007-08-29  Douglas Gregor  <doug.gregor@gmail.com>\n+\n+\tPR c++/33194\n+\t* tree.c (build_type_attribute_qual_variant): Set canonical types\n+\ton the final, unqualified attribute variant before building the\n+\tqualified version.\n+\n 2007-08-29  Jie Zhang  <jie.zhang@analog.com>\n \n \t* config/bfin/bfin.c (bfin_expand_builtin): Fix the argument"}, {"sha": "eb9c329684ac41a4a2fe331ad46ddee240ab0389", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/31fa49984f6d6b2a6f90296867004265ea395e07/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/31fa49984f6d6b2a6f90296867004265ea395e07/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=31fa49984f6d6b2a6f90296867004265ea395e07", "patch": "@@ -1,3 +1,8 @@\n+2007-08-29  Douglas Gregor  <doug.gregor@gmail.com>\n+\n+\tPR c++/33194\n+\t* g++.dg/other/canon-33194.C: New.\n+\n 2007-08-29  Rask Ingemann Lambertsen  <rask@sygehus.dk>\n \n \t* gcc.c-torture/execute/simd-1.c: Use SImode vector elements."}, {"sha": "496aafe2c1c780a26f6ca54bea2a17044f4e96fa", "filename": "gcc/testsuite/g++.dg/other/canon-33194.C", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/31fa49984f6d6b2a6f90296867004265ea395e07/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fother%2Fcanon-33194.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/31fa49984f6d6b2a6f90296867004265ea395e07/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fother%2Fcanon-33194.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fother%2Fcanon-33194.C?ref=31fa49984f6d6b2a6f90296867004265ea395e07", "patch": "@@ -0,0 +1,21 @@\n+// PR c++/33194\n+void c_translate_location (\n+           void (*fail) (\n+           const char *fmt, ...)\n+           __attribute__ ((noreturn,\n+             format (printf, 1, 2)))\n+           );\n+\n+\n+struct dwflpp\n+{\n+  static void loc2c_error (const char *fmt, ...)\n+  {\n+  }\n+\n+  void\n+  translate_location()\n+  {\n+    return c_translate_location (&loc2c_error);\n+  }\n+};"}, {"sha": "fc5c8246cccd652f2b5b3e053daf6fda7ed1c4c2", "filename": "gcc/tree.c", "status": "modified", "additions": 5, "deletions": 7, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/31fa49984f6d6b2a6f90296867004265ea395e07/gcc%2Ftree.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/31fa49984f6d6b2a6f90296867004265ea395e07/gcc%2Ftree.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree.c?ref=31fa49984f6d6b2a6f90296867004265ea395e07", "patch": "@@ -3678,12 +3678,6 @@ build_type_attribute_qual_variant (tree ttype, tree attribute, int quals)\n       TYPE_REFERENCE_TO (ntype) = 0;\n       TYPE_ATTRIBUTES (ntype) = attribute;\n \n-      if (TYPE_STRUCTURAL_EQUALITY_P (ttype))\n-\tSET_TYPE_STRUCTURAL_EQUALITY (ntype);\n-      else\n-\tTYPE_CANONICAL (ntype)\n-\t  = build_qualified_type (TYPE_CANONICAL (ttype), quals);\n-\n       /* Create a new main variant of TYPE.  */\n       TYPE_MAIN_VARIANT (ntype) = ntype;\n       TYPE_NEXT_VARIANT (ntype) = 0;\n@@ -3726,8 +3720,12 @@ build_type_attribute_qual_variant (tree ttype, tree attribute, int quals)\n       /* If the target-dependent attributes make NTYPE different from\n \t its canonical type, we will need to use structural equality\n \t checks for this qualified type. */\n-      if (!targetm.comp_type_attributes (ntype, ttype))\n+      ttype = build_qualified_type (ttype, TYPE_UNQUALIFIED);\n+      if (TYPE_STRUCTURAL_EQUALITY_P (ttype)\n+          || !targetm.comp_type_attributes (ntype, ttype))\n \tSET_TYPE_STRUCTURAL_EQUALITY (ntype);\n+      else\n+\tTYPE_CANONICAL (ntype) = TYPE_CANONICAL (ttype);\n \n       ttype = build_qualified_type (ntype, quals);\n     }"}]}