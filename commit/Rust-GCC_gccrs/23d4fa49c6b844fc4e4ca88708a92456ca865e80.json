{"sha": "23d4fa49c6b844fc4e4ca88708a92456ca865e80", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjNkNGZhNDljNmI4NDRmYzRlNGNhODg3MDhhOTI0NTZjYTg2NWU4MA==", "commit": {"author": {"name": "Paolo Carlini", "email": "pcarlini@suse.de", "date": "2004-08-15T19:03:44Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2004-08-15T19:03:44Z"}, "message": "deque.tcc: Trivial formatting fixes.\n\n2004-08-15  Paolo Carlini  <pcarlini@suse.de>\n\n\t* include/bits/deque.tcc: Trivial formatting fixes.\n\n\t* include/bits/locale_facets.tcc (num_get<>::do_get(&bool)):\n\tRemove unneded typedef.\n\n\t* include/bits/locale_facets.tcc: Very minor tweaks.\n\n\t* testsuite/22_locale/time_put/put/wchar_t/1.cc: Use proper\n\ttype for the fill argument.\n\t* testsuite/22_locale/time_put/put/wchar_t/10.cc: Likewise.\n\t* testsuite/22_locale/time_put/put/wchar_t/2.cc: Likewise.\n\t* testsuite/22_locale/time_put/put/wchar_t/3.cc: Likewise.\n\t* testsuite/22_locale/time_put/put/wchar_t/4.cc: Likewise.\n\t* testsuite/22_locale/time_put/put/wchar_t/5.cc: Likewise.\n\t* testsuite/22_locale/time_put/put/wchar_t/6.cc: Likewise.\n\t* testsuite/22_locale/time_put/put/wchar_t/7.cc: Likewise.\n\t* testsuite/22_locale/time_put/put/wchar_t/8.cc: Likewise.\n\nFrom-SVN: r86026", "tree": {"sha": "4af7ee7b5734185a7da99f2394a8e53600117458", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4af7ee7b5734185a7da99f2394a8e53600117458"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/23d4fa49c6b844fc4e4ca88708a92456ca865e80", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/23d4fa49c6b844fc4e4ca88708a92456ca865e80", "html_url": "https://github.com/Rust-GCC/gccrs/commit/23d4fa49c6b844fc4e4ca88708a92456ca865e80", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/23d4fa49c6b844fc4e4ca88708a92456ca865e80/comments", "author": null, "committer": null, "parents": [{"sha": "4a90aeeb51438af9f31cf57ccbba6fdd7c331398", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4a90aeeb51438af9f31cf57ccbba6fdd7c331398", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4a90aeeb51438af9f31cf57ccbba6fdd7c331398"}], "stats": {"total": 107, "additions": 62, "deletions": 45}, "files": [{"sha": "e5b5d659e9478772298f5b59d3d0c2d1a0644181", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/23d4fa49c6b844fc4e4ca88708a92456ca865e80/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/23d4fa49c6b844fc4e4ca88708a92456ca865e80/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=23d4fa49c6b844fc4e4ca88708a92456ca865e80", "patch": "@@ -1,3 +1,23 @@\n+2004-08-15  Paolo Carlini  <pcarlini@suse.de>\n+\n+\t* include/bits/deque.tcc: Trivial formatting fixes.\n+\n+\t* include/bits/locale_facets.tcc (num_get<>::do_get(&bool)):\n+\tRemove unneded typedef.\n+\n+\t* include/bits/locale_facets.tcc: Very minor tweaks.\n+\n+\t* testsuite/22_locale/time_put/put/wchar_t/1.cc: Use proper\n+\ttype for the fill argument.\n+\t* testsuite/22_locale/time_put/put/wchar_t/10.cc: Likewise.\n+\t* testsuite/22_locale/time_put/put/wchar_t/2.cc: Likewise.\n+\t* testsuite/22_locale/time_put/put/wchar_t/3.cc: Likewise.\n+\t* testsuite/22_locale/time_put/put/wchar_t/4.cc: Likewise.\n+\t* testsuite/22_locale/time_put/put/wchar_t/5.cc: Likewise.\n+\t* testsuite/22_locale/time_put/put/wchar_t/6.cc: Likewise.\n+\t* testsuite/22_locale/time_put/put/wchar_t/7.cc: Likewise.\n+\t* testsuite/22_locale/time_put/put/wchar_t/8.cc: Likewise.\n+\n 2004-08-13  Paolo Carlini  <pcarlini@suse.de>\n \t\n \t* src/debug.cc (_Error_formatter::_M_print_string): Fix thinko,"}, {"sha": "3fbde412ef672a5d088896f44acfe38fe9188270", "filename": "libstdc++-v3/include/bits/deque.tcc", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/23d4fa49c6b844fc4e4ca88708a92456ca865e80/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fdeque.tcc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/23d4fa49c6b844fc4e4ca88708a92456ca865e80/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fdeque.tcc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fdeque.tcc?ref=23d4fa49c6b844fc4e4ca88708a92456ca865e80", "patch": "@@ -64,8 +64,8 @@\n namespace _GLIBCXX_STD\n {\n   template <typename _Tp, typename _Alloc>\n-    deque<_Tp,_Alloc>&\n-    deque<_Tp,_Alloc>::\n+    deque<_Tp, _Alloc>&\n+    deque<_Tp, _Alloc>::\n     operator=(const deque& __x)\n     {\n       const size_type __len = size();\n@@ -85,7 +85,7 @@ namespace _GLIBCXX_STD\n     }\n \n   template <typename _Tp, typename _Alloc>\n-    typename deque<_Tp,_Alloc>::iterator\n+    typename deque<_Tp, _Alloc>::iterator\n     deque<_Tp, _Alloc>::\n     insert(iterator position, const value_type& __x)\n     {\n@@ -106,7 +106,7 @@ namespace _GLIBCXX_STD\n     }\n \n   template <typename _Tp, typename _Alloc>\n-    typename deque<_Tp,_Alloc>::iterator\n+    typename deque<_Tp, _Alloc>::iterator\n     deque<_Tp, _Alloc>::\n     erase(iterator __position)\n     {\n@@ -127,7 +127,7 @@ namespace _GLIBCXX_STD\n     }\n \n   template <typename _Tp, typename _Alloc>\n-    typename deque<_Tp,_Alloc>::iterator\n+    typename deque<_Tp, _Alloc>::iterator\n     deque<_Tp, _Alloc>::\n     erase(iterator __first, iterator __last)\n     {"}, {"sha": "6a3c808f6c28b8bf56b89f40edd4659242c2d14e", "filename": "libstdc++-v3/include/bits/locale_facets.tcc", "status": "modified", "additions": 7, "deletions": 10, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/23d4fa49c6b844fc4e4ca88708a92456ca865e80/libstdc%2B%2B-v3%2Finclude%2Fbits%2Flocale_facets.tcc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/23d4fa49c6b844fc4e4ca88708a92456ca865e80/libstdc%2B%2B-v3%2Finclude%2Fbits%2Flocale_facets.tcc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Flocale_facets.tcc?ref=23d4fa49c6b844fc4e4ca88708a92456ca865e80", "patch": "@@ -658,7 +658,6 @@ namespace std\n       else\n         {\n \t  // Parse bool values as alphanumeric.\n-\t  typedef char_traits<_CharT>                     __traits_type;\n \t  typedef typename numpunct<_CharT>::__cache_type __cache_type;\n \t  __use_cache<__cache_type> __uc;\n \t  const locale& __loc = __io._M_getloc();\n@@ -955,10 +954,9 @@ namespace std\n \t    __new[0] = __cs[0];\n \t    __new[1] = __cs[1];\n \t  }\n-      _CharT* __p;\n-      __p = std::__add_grouping(__new + __off, __sep, __grouping,\n-\t\t\t\t__grouping_size, __cs + __off,\n-\t\t\t\t__cs + __len);\n+      _CharT* __p = std::__add_grouping(__new + __off, __sep, __grouping,\n+\t\t\t\t\t__grouping_size, __cs + __off,\n+\t\t\t\t\t__cs + __len);\n       __len = __p - __new;\n     }\n \n@@ -1024,10 +1022,10 @@ namespace std\n       // _GLIBCXX_RESOLVE_LIB_DEFECTS\n       // 282. What types does numpunct grouping refer to?\n       // Add grouping, if necessary.\n-      _CharT* __p2;\n       const int __declen = __p ? __p - __cs : __len;\n-      __p2 = std::__add_grouping(__new, __sep, __grouping, __grouping_size,\n-\t\t\t\t __cs, __cs + __declen);\n+      _CharT* __p2 = std::__add_grouping(__new, __sep, __grouping,\n+\t\t\t\t\t __grouping_size,\n+\t\t\t\t\t __cs, __cs + __declen);\n \n       // Tack on decimal part.\n       int __newlen = __p2 - __new;\n@@ -2278,7 +2276,6 @@ namespace std\n       return std::__write(__s, __res, char_traits<char_type>::length(__res));\n     }\n \n-\n   // Generic version does nothing.\n   template<typename _CharT>\n     int\n@@ -2361,7 +2358,7 @@ namespace std\n \t      __len = __res + 1;\n \t      __c = static_cast<_CharT*>(__builtin_alloca(sizeof(_CharT)\n \t\t\t\t\t\t\t  * __len));\n-\t      __res = _M_transform(__c, __p, __res + 1);\n+\t      __res = _M_transform(__c, __p, __len);\n \t    }\n \n \t  __ret.append(__c, __res);"}, {"sha": "e9a9e8580d86e11f78f59886b70c3ed862ef1b4e", "filename": "libstdc++-v3/testsuite/22_locale/time_put/put/wchar_t/1.cc", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/23d4fa49c6b844fc4e4ca88708a92456ca865e80/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Ftime_put%2Fput%2Fwchar_t%2F1.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/23d4fa49c6b844fc4e4ca88708a92456ca865e80/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Ftime_put%2Fput%2Fwchar_t%2F1.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Ftime_put%2Fput%2Fwchar_t%2F1.cc?ref=23d4fa49c6b844fc4e4ca88708a92456ca865e80", "patch": "@@ -48,21 +48,21 @@ void test01()\n   // put(iter_type s, ios_base& str, char_type fill, const tm* t,\n   //\t char format, char modifier = 0) const;\n   oss.str(empty);\n-  iterator_type os_it01 = tim_put.put(oss.rdbuf(), oss, '*', &time1, 'a');\n+  iterator_type os_it01 = tim_put.put(oss.rdbuf(), oss, L'*', &time1, 'a');\n   wstring result1 = oss.str();\n   VERIFY( result1 == L\"Sun\" );\n \n   oss.str(empty);\n-  iterator_type os_it21 = tim_put.put(oss.rdbuf(), oss, '*', &time1, 'x');\n+  iterator_type os_it21 = tim_put.put(oss.rdbuf(), oss, L'*', &time1, 'x');\n   wstring result21 = oss.str(); // \"04/04/71\"\n   oss.str(empty);\n-  iterator_type os_it22 = tim_put.put(oss.rdbuf(), oss, '*', &time1, 'X');\n+  iterator_type os_it22 = tim_put.put(oss.rdbuf(), oss, L'*', &time1, 'X');\n   wstring result22 = oss.str(); // \"12:00:00\"\n   oss.str(empty);\n-  iterator_type os_it31 = tim_put.put(oss.rdbuf(), oss, '*', &time1, 'x', 'E');\n+  iterator_type os_it31 = tim_put.put(oss.rdbuf(), oss, L'*', &time1, 'x', 'E');\n   wstring result31 = oss.str(); // \"04/04/71\"\n   oss.str(empty);\n-  iterator_type os_it32 = tim_put.put(oss.rdbuf(), oss, '*', &time1, 'X', 'E');\n+  iterator_type os_it32 = tim_put.put(oss.rdbuf(), oss, L'*', &time1, 'X', 'E');\n   wstring result32 = oss.str(); // \"12:00:00\"\n }\n "}, {"sha": "b0c366d41572764af24f6b46a4cd9e06d50e899e", "filename": "libstdc++-v3/testsuite/22_locale/time_put/put/wchar_t/10.cc", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/23d4fa49c6b844fc4e4ca88708a92456ca865e80/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Ftime_put%2Fput%2Fwchar_t%2F10.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/23d4fa49c6b844fc4e4ca88708a92456ca865e80/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Ftime_put%2Fput%2Fwchar_t%2F10.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Ftime_put%2Fput%2Fwchar_t%2F10.cc?ref=23d4fa49c6b844fc4e4ca88708a92456ca865e80", "patch": "@@ -1,6 +1,6 @@\n // 2001-09-17 Benjamin Kosnik  <bkoz@redhat.com>\n \n-// Copyright (C) 2001, 2002, 2003 Free Software Foundation\n+// Copyright (C) 2001, 2002, 2003, 2004 Free Software Foundation\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -48,7 +48,7 @@ void test10()\n \n   // 02 char format\n   res = x;\n-  iter_type ret2 = tp.put(res.begin(), oss, ' ', &time_sanity, 'A');\n+  iter_type ret2 = tp.put(res.begin(), oss, L' ', &time_sanity, 'A');\n   wstring sanity2(res.begin(), ret2);\n   VERIFY( err == goodbit );\n   VERIFY( res == L\"Tuesdayxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\" );"}, {"sha": "a4a696892d77062b80e1943055f5083d73f68023", "filename": "libstdc++-v3/testsuite/22_locale/time_put/put/wchar_t/2.cc", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/23d4fa49c6b844fc4e4ca88708a92456ca865e80/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Ftime_put%2Fput%2Fwchar_t%2F2.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/23d4fa49c6b844fc4e4ca88708a92456ca865e80/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Ftime_put%2Fput%2Fwchar_t%2F2.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Ftime_put%2Fput%2Fwchar_t%2F2.cc?ref=23d4fa49c6b844fc4e4ca88708a92456ca865e80", "patch": "@@ -45,21 +45,21 @@ void test02()\n   oss.imbue(loc_de);\n   const time_put<wchar_t>& tim_put = use_facet<time_put<wchar_t> >(oss.getloc()); \n \n-  iterator_type os_it02 = tim_put.put(oss.rdbuf(), oss, '*', &time1, 'a');\n+  iterator_type os_it02 = tim_put.put(oss.rdbuf(), oss, L'*', &time1, 'a');\n   wstring result2 = oss.str();\n   VERIFY( result2 == L\"Son\" || result2 == L\"So\" );\n \n   oss.str(empty); // \"%d.%m.%Y\"\n-  iterator_type os_it23 = tim_put.put(oss.rdbuf(), oss, '*', &time1, 'x');\n+  iterator_type os_it23 = tim_put.put(oss.rdbuf(), oss, L'*', &time1, 'x');\n   wstring result23 = oss.str(); // \"04.04.1971\"\n   oss.str(empty); // \"%T\"\n-  iterator_type os_it24 = tim_put.put(oss.rdbuf(), oss, '*', &time1, 'X');\n+  iterator_type os_it24 = tim_put.put(oss.rdbuf(), oss, L'*', &time1, 'X');\n   wstring result24 = oss.str(); // \"12:00:00\"\n   oss.str(empty);\n-  iterator_type os_it33 = tim_put.put(oss.rdbuf(), oss, '*', &time1, 'x', 'E');\n+  iterator_type os_it33 = tim_put.put(oss.rdbuf(), oss, L'*', &time1, 'x', 'E');\n   wstring result33 = oss.str(); // \"04.04.1971\"\n   oss.str(empty);\n-  iterator_type os_it34 = tim_put.put(oss.rdbuf(), oss, '*', &time1, 'X', 'E');\n+  iterator_type os_it34 = tim_put.put(oss.rdbuf(), oss, L'*', &time1, 'X', 'E');\n   wstring result34 = oss.str(); // \"12:00:00\"\n }\n "}, {"sha": "a95248ed327ca61c98035c193e2ec9948ee938d5", "filename": "libstdc++-v3/testsuite/22_locale/time_put/put/wchar_t/3.cc", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/23d4fa49c6b844fc4e4ca88708a92456ca865e80/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Ftime_put%2Fput%2Fwchar_t%2F3.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/23d4fa49c6b844fc4e4ca88708a92456ca865e80/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Ftime_put%2Fput%2Fwchar_t%2F3.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Ftime_put%2Fput%2Fwchar_t%2F3.cc?ref=23d4fa49c6b844fc4e4ca88708a92456ca865e80", "patch": "@@ -45,21 +45,21 @@ void test03()\n   oss.imbue(loc_hk);\n   const time_put<wchar_t>& tim_put = use_facet<time_put<wchar_t> >(oss.getloc()); \n \n-  iterator_type os_it03 = tim_put.put(oss.rdbuf(), oss, '*', &time1, 'a');\n+  iterator_type os_it03 = tim_put.put(oss.rdbuf(), oss, L'*', &time1, 'a');\n   wstring result3 = oss.str();\n   VERIFY( result3 == L\"Sun\" );\n \n   oss.str(empty); // \"%A, %B %d, %Y\"\n-  iterator_type os_it25 = tim_put.put(oss.rdbuf(), oss, '*', &time1, 'x');\n+  iterator_type os_it25 = tim_put.put(oss.rdbuf(), oss, L'*', &time1, 'x');\n   wstring result25 = oss.str(); // \"Sunday, April 04, 1971\"\n   oss.str(empty); // \"%I:%M:%S %Z\"\n-  iterator_type os_it26 = tim_put.put(oss.rdbuf(), oss, '*', &time1, 'X');\n+  iterator_type os_it26 = tim_put.put(oss.rdbuf(), oss, L'*', &time1, 'X');\n   wstring result26 = oss.str(); // \"12:00:00 PST\"\n   oss.str(empty);\n-  iterator_type os_it35 = tim_put.put(oss.rdbuf(), oss, '*', &time1, 'x', 'E');\n+  iterator_type os_it35 = tim_put.put(oss.rdbuf(), oss, L'*', &time1, 'x', 'E');\n   wstring result35 = oss.str(); // \"Sunday, April 04, 1971\"\n   oss.str(empty);\n-  iterator_type os_it36 = tim_put.put(oss.rdbuf(), oss, '*', &time1, 'X', 'E');\n+  iterator_type os_it36 = tim_put.put(oss.rdbuf(), oss, L'*', &time1, 'X', 'E');\n   wstring result36 = oss.str(); // \"12:00:00 PST\"\n }\n "}, {"sha": "84bd775642964a4d13bc76bd88b4c297737aab9b", "filename": "libstdc++-v3/testsuite/22_locale/time_put/put/wchar_t/4.cc", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/23d4fa49c6b844fc4e4ca88708a92456ca865e80/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Ftime_put%2Fput%2Fwchar_t%2F4.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/23d4fa49c6b844fc4e4ca88708a92456ca865e80/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Ftime_put%2Fput%2Fwchar_t%2F4.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Ftime_put%2Fput%2Fwchar_t%2F4.cc?ref=23d4fa49c6b844fc4e4ca88708a92456ca865e80", "patch": "@@ -44,21 +44,21 @@ void test04()\n   wostringstream oss;\n   oss.imbue(loc_fr);\n   const time_put<wchar_t>& tim_put = use_facet<time_put<wchar_t> >(oss.getloc()); \n-  iterator_type os_it04 = tim_put.put(oss.rdbuf(), oss, '*', &time1, 'a');\n+  iterator_type os_it04 = tim_put.put(oss.rdbuf(), oss, L'*', &time1, 'a');\n   wstring result4 = oss.str();\n   VERIFY( result4 == L\"dim\" );\n \n   oss.str(empty); // \"%d.%m.%Y\"\n-  iterator_type os_it27 = tim_put.put(oss.rdbuf(), oss, '*', &time1, 'x');\n+  iterator_type os_it27 = tim_put.put(oss.rdbuf(), oss, L'*', &time1, 'x');\n   wstring result27 = oss.str(); // \"04.04.1971\"\n   oss.str(empty); // \"%T\"\n-  iterator_type os_it28 = tim_put.put(oss.rdbuf(), oss, '*', &time1, 'X');\n+  iterator_type os_it28 = tim_put.put(oss.rdbuf(), oss, L'*', &time1, 'X');\n   wstring result28 = oss.str(); // \"12:00:00\"\n   oss.str(empty);\n-  iterator_type os_it37 = tim_put.put(oss.rdbuf(), oss, '*', &time1, 'x', 'E');\n+  iterator_type os_it37 = tim_put.put(oss.rdbuf(), oss, L'*', &time1, 'x', 'E');\n   wstring result37 = oss.str(); // \"04.04.1971\"\n   oss.str(empty);\n-  iterator_type os_it38 = tim_put.put(oss.rdbuf(), oss, '*', &time1, 'X', 'E');\n+  iterator_type os_it38 = tim_put.put(oss.rdbuf(), oss, L'*', &time1, 'X', 'E');\n   wstring result38 = oss.str(); // \"12:00:00\"\n }\n "}, {"sha": "efe000ae64c6c09d730816c7525d69b14a437113", "filename": "libstdc++-v3/testsuite/22_locale/time_put/put/wchar_t/5.cc", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/23d4fa49c6b844fc4e4ca88708a92456ca865e80/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Ftime_put%2Fput%2Fwchar_t%2F5.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/23d4fa49c6b844fc4e4ca88708a92456ca865e80/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Ftime_put%2Fput%2Fwchar_t%2F5.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Ftime_put%2Fput%2Fwchar_t%2F5.cc?ref=23d4fa49c6b844fc4e4ca88708a92456ca865e80", "patch": "@@ -48,11 +48,11 @@ void test05()\n \n   // 2\n   oss.str(empty);\n-  iterator_type os_it05 = tim_put.put(oss.rdbuf(), oss, '*', &time1, \n+  iterator_type os_it05 = tim_put.put(oss.rdbuf(), oss, L'*', &time1, \n \t\t\t\t      date, date + traits::length(date));\n   wstring result5 = oss.str();\n   VERIFY( result5 == L\"Sunday, the second of April\");\n-  iterator_type os_it06 = tim_put.put(oss.rdbuf(), oss, '*', &time1, \n+  iterator_type os_it06 = tim_put.put(oss.rdbuf(), oss, L'*', &time1, \n \t\t\t\t      date_ex, date_ex + traits::length(date));\n   wstring result6 = oss.str();\n   VERIFY( result6 != result5 );"}, {"sha": "c38ea8fc278d4b6c7454bac2937d190b6bb6b920", "filename": "libstdc++-v3/testsuite/22_locale/time_put/put/wchar_t/6.cc", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/23d4fa49c6b844fc4e4ca88708a92456ca865e80/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Ftime_put%2Fput%2Fwchar_t%2F6.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/23d4fa49c6b844fc4e4ca88708a92456ca865e80/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Ftime_put%2Fput%2Fwchar_t%2F6.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Ftime_put%2Fput%2Fwchar_t%2F6.cc?ref=23d4fa49c6b844fc4e4ca88708a92456ca865e80", "patch": "@@ -48,11 +48,11 @@ void test06()\n   oss.imbue(loc_de);\n   const time_put<wchar_t>& tim_put = use_facet<time_put<wchar_t> >(oss.getloc()); \n \n-  iterator_type os_it07 = tim_put.put(oss.rdbuf(), oss, '*', &time1, \n+  iterator_type os_it07 = tim_put.put(oss.rdbuf(), oss, L'*', &time1, \n \t\t\t\t      date, date + traits::length(date));\n   wstring result7 = oss.str();\n   VERIFY( result7 == L\"Sonntag, the second of April\");\n-  iterator_type os_it08 = tim_put.put(oss.rdbuf(), oss, '*', &time1, \n+  iterator_type os_it08 = tim_put.put(oss.rdbuf(), oss, L'*', &time1, \n \t\t\t\t      date_ex, date_ex + traits::length(date));\n   wstring result8 = oss.str();\n   VERIFY( result8 != result7 );"}, {"sha": "7d0f63ef51fdd1796d75f53f80a4dffd0adf60a8", "filename": "libstdc++-v3/testsuite/22_locale/time_put/put/wchar_t/7.cc", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/23d4fa49c6b844fc4e4ca88708a92456ca865e80/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Ftime_put%2Fput%2Fwchar_t%2F7.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/23d4fa49c6b844fc4e4ca88708a92456ca865e80/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Ftime_put%2Fput%2Fwchar_t%2F7.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Ftime_put%2Fput%2Fwchar_t%2F7.cc?ref=23d4fa49c6b844fc4e4ca88708a92456ca865e80", "patch": "@@ -48,11 +48,11 @@ void test07()\n   oss.imbue(loc_hk);\n   const time_put<wchar_t>& tim_put = use_facet<time_put<wchar_t> >(oss.getloc()); \n \n-  iterator_type os_it09 = tim_put.put(oss.rdbuf(), oss, '*', &time1, \n+  iterator_type os_it09 = tim_put.put(oss.rdbuf(), oss, L'*', &time1, \n \t\t\t\t      date, date + traits::length(date));\n   wstring result9 = oss.str();\n   VERIFY( result9 == L\"Sunday, the second of April\");\n-  iterator_type os_it10 = tim_put.put(oss.rdbuf(), oss, '*', &time1, \n+  iterator_type os_it10 = tim_put.put(oss.rdbuf(), oss, L'*', &time1, \n \t\t\t\t      date_ex, date_ex + traits::length(date));\n   wstring result10 = oss.str();\n   VERIFY( result10 != result9 );"}, {"sha": "83f42ae9d7282e12d9e6562b15ce7c9bd10c65b4", "filename": "libstdc++-v3/testsuite/22_locale/time_put/put/wchar_t/8.cc", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/23d4fa49c6b844fc4e4ca88708a92456ca865e80/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Ftime_put%2Fput%2Fwchar_t%2F8.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/23d4fa49c6b844fc4e4ca88708a92456ca865e80/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Ftime_put%2Fput%2Fwchar_t%2F8.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Ftime_put%2Fput%2Fwchar_t%2F8.cc?ref=23d4fa49c6b844fc4e4ca88708a92456ca865e80", "patch": "@@ -47,11 +47,11 @@ void test08()\n   wostringstream oss;\n   oss.imbue(loc_fr);\n   const time_put<wchar_t>& tim_put = use_facet<time_put<wchar_t> >(oss.getloc()); \n-  iterator_type os_it11 = tim_put.put(oss.rdbuf(), oss, '*', &time1, \n+  iterator_type os_it11 = tim_put.put(oss.rdbuf(), oss, L'*', &time1, \n \t\t\t\t      date, date + traits::length(date));\n   wstring result11 = oss.str();\n   VERIFY( result11 == L\"dimanche, the second of avril\");\n-  iterator_type os_it12 = tim_put.put(oss.rdbuf(), oss, '*', &time1, \n+  iterator_type os_it12 = tim_put.put(oss.rdbuf(), oss, L'*', &time1, \n \t\t\t\t      date_ex, date_ex + traits::length(date));\n   wstring result12 = oss.str();\n   VERIFY( result12 != result11 );"}]}