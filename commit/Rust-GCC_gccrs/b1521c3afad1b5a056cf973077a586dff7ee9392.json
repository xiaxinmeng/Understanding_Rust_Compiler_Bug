{"sha": "b1521c3afad1b5a056cf973077a586dff7ee9392", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjE1MjFjM2FmYWQxYjVhMDU2Y2Y5NzMwNzdhNTg2ZGZmN2VlOTM5Mg==", "commit": {"author": {"name": "Giovanni Bajo", "email": "giovannibajo@gcc.gnu.org", "date": "2004-01-29T04:26:50Z"}, "committer": {"name": "Giovanni Bajo", "email": "giovannibajo@gcc.gnu.org", "date": "2004-01-29T04:26:50Z"}, "message": "error11.C: New test.\n\n\t* g++.dg/parse/error11.C: New test.\n\t* g++.dg/parse/error12.C: Likewise.\n\nFrom-SVN: r76846", "tree": {"sha": "2d01ccc1d596460bb302a07555bebf3549c9f19b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2d01ccc1d596460bb302a07555bebf3549c9f19b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b1521c3afad1b5a056cf973077a586dff7ee9392", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b1521c3afad1b5a056cf973077a586dff7ee9392", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b1521c3afad1b5a056cf973077a586dff7ee9392", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b1521c3afad1b5a056cf973077a586dff7ee9392/comments", "author": {"login": "rasky", "id": 1014109, "node_id": "MDQ6VXNlcjEwMTQxMDk=", "avatar_url": "https://avatars.githubusercontent.com/u/1014109?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rasky", "html_url": "https://github.com/rasky", "followers_url": "https://api.github.com/users/rasky/followers", "following_url": "https://api.github.com/users/rasky/following{/other_user}", "gists_url": "https://api.github.com/users/rasky/gists{/gist_id}", "starred_url": "https://api.github.com/users/rasky/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rasky/subscriptions", "organizations_url": "https://api.github.com/users/rasky/orgs", "repos_url": "https://api.github.com/users/rasky/repos", "events_url": "https://api.github.com/users/rasky/events{/privacy}", "received_events_url": "https://api.github.com/users/rasky/received_events", "type": "User", "site_admin": false}, "committer": {"login": "rasky", "id": 1014109, "node_id": "MDQ6VXNlcjEwMTQxMDk=", "avatar_url": "https://avatars.githubusercontent.com/u/1014109?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rasky", "html_url": "https://github.com/rasky", "followers_url": "https://api.github.com/users/rasky/followers", "following_url": "https://api.github.com/users/rasky/following{/other_user}", "gists_url": "https://api.github.com/users/rasky/gists{/gist_id}", "starred_url": "https://api.github.com/users/rasky/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rasky/subscriptions", "organizations_url": "https://api.github.com/users/rasky/orgs", "repos_url": "https://api.github.com/users/rasky/repos", "events_url": "https://api.github.com/users/rasky/events{/privacy}", "received_events_url": "https://api.github.com/users/rasky/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f4abade9fe297572fefc4484ac5f0c723c0c29df", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f4abade9fe297572fefc4484ac5f0c723c0c29df", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f4abade9fe297572fefc4484ac5f0c723c0c29df"}], "stats": {"total": 70, "additions": 70, "deletions": 0}, "files": [{"sha": "7b7f692228b0a610697a2d5d4ed603e39f8dae85", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b1521c3afad1b5a056cf973077a586dff7ee9392/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b1521c3afad1b5a056cf973077a586dff7ee9392/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=b1521c3afad1b5a056cf973077a586dff7ee9392", "patch": "@@ -1,3 +1,8 @@\n+2004-01-28  Giovanni Bajo  <giovannibajo@gcc.gnu.org>\n+\n+\t* g++.dg/parse/error11.C: New test.\n+\t* g++.dg/parse/error12.C: Likewise.\n+\n 2004-01-28  Ziemowit Laski  <zlaski@apple.com>\n \n \t* objc.dg/proto-qual-1.m (ROUND, aligned_sizeof): New."}, {"sha": "6b3deec178abbd86f7db0a0daf0e5fa657e51a69", "filename": "gcc/testsuite/g++.dg/parse/error11.C", "status": "added", "additions": 53, "deletions": 0, "changes": 53, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b1521c3afad1b5a056cf973077a586dff7ee9392/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Ferror11.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b1521c3afad1b5a056cf973077a586dff7ee9392/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Ferror11.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Ferror11.C?ref=b1521c3afad1b5a056cf973077a586dff7ee9392", "patch": "@@ -0,0 +1,53 @@\n+// { dg-do compile }\n+// Origin: Giovanni Bajo <giovannibajo at gcc dot gnu dot org>\n+// Try to find out when the digraph '<:' is used as a mistake, and parse it\n+//  correctly to avoid cascaded errors.\n+\n+struct B;\n+\n+template <class A>\n+struct Foo \n+{\n+  template <class T>\n+  struct Nested\n+  {\n+    static void method(void) {}\n+  };\n+\n+  void method(void) {\n+    typename Foo<::B>::template Nested<::B> n; // { dg-error \"cannot begin|alternate spelling\" }\n+    n.template Nested<B>::method();\n+    n.template Nested<::B>::method();  // { dg-error \"cannot begin|alternate spelling\" }\n+    Nested<B>::method();\n+    Nested<::B>::method(); // { dg-error \"cannot begin|alternate spelling\" }\n+  }\n+};\n+\n+template <int N> struct Foo2 {};\n+template struct Foo2<::B>;  // { dg-error \"cannot begin|alternate spelling|type/value mismatch|expected a constant\" }\n+\n+int value = 0;\n+\n+void func(void)\n+{\n+  Foo<::B> f; // { dg-error \"cannot begin|alternate spelling\" }\n+  f.Foo<B>::method();\n+  f.Foo<::B>::method(); // { dg-error \"cannot begin|alternate spelling\" }\n+\n+  // Check cases where we the token sequence is the correct one, but there\n+  //  was no digraph or whitespaces in the middle, so we should not emit\n+  //  the special error message.\n+  Foo<: :B> k2;     // { dg-bogus \"cannot begin|alternate spelling\" \"smart error should not be triggered here\" }\n+  Foo[:B> k1;       // { dg-bogus \"cannot begin|alternate spelling\" \"smart error should not be triggered here\" } \n+// { dg-error \"\" \"\" { target *-*-* } 40 }\n+// { dg-error \"\" \"\" { target *-*-* } 41 }\n+\n+  int Foo[2];\n+  Foo[::value] = 0;\n+}\n+\n+template struct Foo<::B>; // { dg-error \"cannot begin|alternate spelling\" }\n+\n+// On the first error message, an additional note about the use of \n+//  -fpermissive should be present\n+// { dg-error \"-fpermissive\" \"\" { target *-*-* } 18 }"}, {"sha": "ea04fd06d11efbc2d366c8720e8f4598b7b8cdae", "filename": "gcc/testsuite/g++.dg/parse/error12.C", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b1521c3afad1b5a056cf973077a586dff7ee9392/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Ferror12.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b1521c3afad1b5a056cf973077a586dff7ee9392/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Ferror12.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Ferror12.C?ref=b1521c3afad1b5a056cf973077a586dff7ee9392", "patch": "@@ -0,0 +1,12 @@\n+// { dg-do compile }\n+// Origin: Giovanni Bajo <giovannibajo at gcc dot gnu dot org>\n+// Make sure the error about '<:' can be turned into a warning\n+// { dg-options \"-fpermissive\" }\n+\n+struct B;\n+\n+template <class A>\n+struct Foo {};\n+\n+Foo<::B> foo;   // { dg-bogus \"error\" \"error in place of warning\" }\n+// { dg-error \"\" \"\" { target *-*-* } 11 }"}]}