{"sha": "2c5721d9f36a114809e296686ff39b1324b0cc5b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmM1NzIxZDlmMzZhMTE0ODA5ZTI5NjY4NmZmMzliMTMyNGIwY2M1Yg==", "commit": {"author": {"name": "Martin Jambor", "email": "mjambor@suse.cz", "date": "2009-11-10T14:43:20Z"}, "committer": {"name": "Martin Jambor", "email": "jamborm@gcc.gnu.org", "date": "2009-11-10T14:43:20Z"}, "message": "tree-pass.h (struct ipa_opt_pass_d): Added stmt_fixup field.\n\n2009-11-10  Martin Jambor  <mjambor@suse.cz>\n\n\t* tree-pass.h (struct ipa_opt_pass_d): Added stmt_fixup field.\n\t(execute_all_ipa_stmt_fixups): Declare.\n\t* ipa-cp.c (pass_ipa_cp): Added stmt_fixup value.\n\t* ipa-inline.c (pass_ipa_inline): Likewise.\n\t* ipa-pure-const.c (pass_ipa_pure_cons): Likewise.\n\t* ipa-reference.c (pass_ipa_reference): Likewise.\n\t* ipa.c (pass_ipa_whole_program_visibility): Likewise.\n\t* lto-streamer-out.c (pass_ipa_lto_gimple_out): Likewise.\n\t(pass_ipa_lto_finish_out): Likewise.\n\t* lto-wpa-fixup.c (pass_ipa_lto_wpa_fixup): Likewise.\n\t* passes.c (execute_ipa_stmt_fixups): New function.\n\t(execute_all_ipa_stmt_fixups): New function.\n\t* lto-streamer-in.c (input_function): Call execute_all_ipa_stmt_fixups.\n\nFrom-SVN: r154064", "tree": {"sha": "6cb5567aec53c0584fb5b316226815f21f6ec6b1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6cb5567aec53c0584fb5b316226815f21f6ec6b1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2c5721d9f36a114809e296686ff39b1324b0cc5b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2c5721d9f36a114809e296686ff39b1324b0cc5b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2c5721d9f36a114809e296686ff39b1324b0cc5b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2c5721d9f36a114809e296686ff39b1324b0cc5b/comments", "author": {"login": "jamborm", "id": 2180070, "node_id": "MDQ6VXNlcjIxODAwNzA=", "avatar_url": "https://avatars.githubusercontent.com/u/2180070?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jamborm", "html_url": "https://github.com/jamborm", "followers_url": "https://api.github.com/users/jamborm/followers", "following_url": "https://api.github.com/users/jamborm/following{/other_user}", "gists_url": "https://api.github.com/users/jamborm/gists{/gist_id}", "starred_url": "https://api.github.com/users/jamborm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jamborm/subscriptions", "organizations_url": "https://api.github.com/users/jamborm/orgs", "repos_url": "https://api.github.com/users/jamborm/repos", "events_url": "https://api.github.com/users/jamborm/events{/privacy}", "received_events_url": "https://api.github.com/users/jamborm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "c587836d9d5d1c1ec9182becd91268e0249d8f26", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c587836d9d5d1c1ec9182becd91268e0249d8f26", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c587836d9d5d1c1ec9182becd91268e0249d8f26"}], "stats": {"total": 79, "additions": 77, "deletions": 2}, "files": [{"sha": "7bcc946b012cf2e0ea02df6c373555bc1dcf05cb", "filename": "gcc/ChangeLog", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2c5721d9f36a114809e296686ff39b1324b0cc5b/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2c5721d9f36a114809e296686ff39b1324b0cc5b/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=2c5721d9f36a114809e296686ff39b1324b0cc5b", "patch": "@@ -1,3 +1,19 @@\n+2009-11-10  Martin Jambor  <mjambor@suse.cz>\n+\n+\t* tree-pass.h (struct ipa_opt_pass_d): Added stmt_fixup field.\n+\t(execute_all_ipa_stmt_fixups): Declare.\n+\t* ipa-cp.c (pass_ipa_cp): Added stmt_fixup value.\n+\t* ipa-inline.c (pass_ipa_inline): Likewise.\n+\t* ipa-pure-const.c (pass_ipa_pure_cons): Likewise.\n+\t* ipa-reference.c (pass_ipa_reference): Likewise.\n+\t* ipa.c (pass_ipa_whole_program_visibility): Likewise.\n+\t* lto-streamer-out.c (pass_ipa_lto_gimple_out): Likewise.\n+\t(pass_ipa_lto_finish_out): Likewise.\n+\t* lto-wpa-fixup.c (pass_ipa_lto_wpa_fixup): Likewise.\n+\t* passes.c (execute_ipa_stmt_fixups): New function.\n+\t(execute_all_ipa_stmt_fixups): New function.\n+\t* lto-streamer-in.c (input_function): Call execute_all_ipa_stmt_fixups.\n+\n 2009-11-10  Eric Botcazou  <ebotcazou@adacore.com>\n \n \tPR ada/20548"}, {"sha": "2c3b5b737db9619d6a9f22c978cb06fe4392e226", "filename": "gcc/ipa-cp.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2c5721d9f36a114809e296686ff39b1324b0cc5b/gcc%2Fipa-cp.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2c5721d9f36a114809e296686ff39b1324b0cc5b/gcc%2Fipa-cp.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fipa-cp.c?ref=2c5721d9f36a114809e296686ff39b1324b0cc5b", "patch": "@@ -1327,6 +1327,7 @@ struct ipa_opt_pass_d pass_ipa_cp =\n  ipcp_write_summary,\t\t\t/* write_summary */\n  ipcp_read_summary,\t\t\t/* read_summary */\n  NULL,\t\t\t\t\t/* function_read_summary */\n+ NULL,\t\t\t\t\t/* stmt_fixup */\n  0,\t\t\t\t\t/* TODOs */\n  NULL,\t\t\t\t\t/* function_transform */\n  NULL,\t\t\t\t\t/* variable_transform */"}, {"sha": "08088dd3e7915a1a2bc2dfa51d13f19dcb99e2f3", "filename": "gcc/ipa-inline.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2c5721d9f36a114809e296686ff39b1324b0cc5b/gcc%2Fipa-inline.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2c5721d9f36a114809e296686ff39b1324b0cc5b/gcc%2Fipa-inline.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fipa-inline.c?ref=2c5721d9f36a114809e296686ff39b1324b0cc5b", "patch": "@@ -2020,6 +2020,7 @@ struct ipa_opt_pass_d pass_ipa_inline =\n  inline_write_summary,\t\t\t/* write_summary */\n  inline_read_summary,\t\t\t/* read_summary */\n  NULL,\t\t\t\t\t/* function_read_summary */\n+ NULL,\t\t\t\t\t/* stmt_fixup */\n  0,\t\t\t\t\t/* TODOs */\n  inline_transform,\t\t\t/* function_transform */\n  NULL,\t\t\t\t\t/* variable_transform */"}, {"sha": "bc03bfff61af18248e819e6faccd658f6fc75013", "filename": "gcc/ipa-pure-const.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2c5721d9f36a114809e296686ff39b1324b0cc5b/gcc%2Fipa-pure-const.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2c5721d9f36a114809e296686ff39b1324b0cc5b/gcc%2Fipa-pure-const.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fipa-pure-const.c?ref=2c5721d9f36a114809e296686ff39b1324b0cc5b", "patch": "@@ -1100,6 +1100,7 @@ struct ipa_opt_pass_d pass_ipa_pure_const =\n  pure_const_write_summary,\t\t/* write_summary */\n  pure_const_read_summary,\t\t/* read_summary */\n  NULL,\t\t\t\t\t/* function_read_summary */\n+ NULL,\t\t\t\t\t/* stmt_fixup */\n  0,\t\t\t\t\t/* TODOs */\n  NULL,\t\t\t                /* function_transform */\n  NULL\t\t\t\t\t/* variable_transform */"}, {"sha": "074aea6655eef538b3cc5ad08bdd8cdfa38e775c", "filename": "gcc/ipa-reference.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2c5721d9f36a114809e296686ff39b1324b0cc5b/gcc%2Fipa-reference.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2c5721d9f36a114809e296686ff39b1324b0cc5b/gcc%2Fipa-reference.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fipa-reference.c?ref=2c5721d9f36a114809e296686ff39b1324b0cc5b", "patch": "@@ -1511,6 +1511,7 @@ struct ipa_opt_pass_d pass_ipa_reference =\n  ipa_reference_write_summary,\t\t/* write_summary */\n  ipa_reference_read_summary,\t\t/* read_summary */\n  NULL,\t\t\t\t\t/* function_read_summary */\n+ NULL,\t\t\t\t\t/* stmt_fixup */\n  0,\t\t\t\t\t/* TODOs */\n  NULL,\t\t\t                /* function_transform */\n  NULL\t\t\t\t\t/* variable_transform */"}, {"sha": "b082efe78bd2dae2bdc3a9ec56971b51d787623f", "filename": "gcc/ipa.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2c5721d9f36a114809e296686ff39b1324b0cc5b/gcc%2Fipa.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2c5721d9f36a114809e296686ff39b1324b0cc5b/gcc%2Fipa.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fipa.c?ref=2c5721d9f36a114809e296686ff39b1324b0cc5b", "patch": "@@ -425,6 +425,7 @@ struct ipa_opt_pass_d pass_ipa_whole_program_visibility =\n  NULL,\t\t\t\t\t/* write_summary */\n  NULL,\t\t\t\t\t/* read_summary */\n  NULL,\t\t\t\t\t/* function_read_summary */\n+ NULL,\t\t\t\t\t/* stmt_fixup */\n  0,\t\t\t\t\t/* TODOs */\n  NULL,\t\t\t\t\t/* function_transform */\n  NULL,\t\t\t\t\t/* variable_transform */"}, {"sha": "7e1559cbdbe210f7c9122aaccb1ea02d1bc20d82", "filename": "gcc/lto-streamer-in.c", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2c5721d9f36a114809e296686ff39b1324b0cc5b/gcc%2Flto-streamer-in.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2c5721d9f36a114809e296686ff39b1324b0cc5b/gcc%2Flto-streamer-in.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flto-streamer-in.c?ref=2c5721d9f36a114809e296686ff39b1324b0cc5b", "patch": "@@ -1261,6 +1261,7 @@ input_function (tree fn_decl, struct data_in *data_in,\n   gimple *stmts;\n   basic_block bb;\n   struct bitpack_d *bp;\n+  struct cgraph_node *node;\n \n   fn = DECL_STRUCT_FUNCTION (fn_decl);\n   tag = input_record_start (ib);\n@@ -1340,7 +1341,9 @@ input_function (tree fn_decl, struct data_in *data_in,\n     gimple_set_body (fn_decl, bb_seq (ei_edge (ei)->dest));\n   }\n \n-  fixup_call_stmt_edges (cgraph_node (fn_decl), stmts);\n+  node = cgraph_node (fn_decl);\n+  fixup_call_stmt_edges (node, stmts);\n+  execute_all_ipa_stmt_fixups (node, stmts);\n \n   update_ssa (TODO_update_ssa_only_virtuals); \n   free_dominance_info (CDI_DOMINATORS);"}, {"sha": "fee23720c9292eb6b6ae634bc6a4b91736d6bf0f", "filename": "gcc/lto-streamer-out.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2c5721d9f36a114809e296686ff39b1324b0cc5b/gcc%2Flto-streamer-out.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2c5721d9f36a114809e296686ff39b1324b0cc5b/gcc%2Flto-streamer-out.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flto-streamer-out.c?ref=2c5721d9f36a114809e296686ff39b1324b0cc5b", "patch": "@@ -2115,6 +2115,7 @@ struct ipa_opt_pass_d pass_ipa_lto_gimple_out =\n  lto_output,           \t\t\t/* write_summary */\n  NULL,\t\t         \t\t/* read_summary */\n  NULL,\t\t\t\t\t/* function_read_summary */\n+ NULL,\t\t\t\t\t/* stmt_fixup */\n  0,\t\t\t\t\t/* TODOs */\n  NULL,\t\t\t                /* function_transform */\n  NULL\t\t\t\t\t/* variable_transform */\n@@ -2545,6 +2546,7 @@ struct ipa_opt_pass_d pass_ipa_lto_finish_out =\n  produce_asm_for_decls,\t\t\t/* write_summary */\n  NULL,\t\t         \t\t/* read_summary */\n  NULL,\t\t\t\t\t/* function_read_summary */\n+ NULL,\t\t\t\t\t/* stmt_fixup */\n  0,\t\t\t\t\t/* TODOs */\n  NULL,\t\t\t                /* function_transform */\n  NULL\t\t\t\t\t/* variable_transform */"}, {"sha": "469af5a267c1bc650b7b1112483d07c0de1ea852", "filename": "gcc/lto-wpa-fixup.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2c5721d9f36a114809e296686ff39b1324b0cc5b/gcc%2Flto-wpa-fixup.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2c5721d9f36a114809e296686ff39b1324b0cc5b/gcc%2Flto-wpa-fixup.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flto-wpa-fixup.c?ref=2c5721d9f36a114809e296686ff39b1324b0cc5b", "patch": "@@ -274,6 +274,7 @@ struct ipa_opt_pass_d pass_ipa_lto_wpa_fixup =\n  lto_output_wpa_fixup,\t\t\t/* write_summary */\n  lto_input_wpa_fixup,\t\t\t/* read_summary */\n  NULL,\t\t\t\t\t/* function_read_summary */\n+ NULL,\t\t\t\t\t/* stmt_fixup */\n  0,\t\t\t\t\t/* TODOs */\n  NULL,\t\t\t                /* function_transform */\n  NULL\t\t\t\t\t/* variable_transform */"}, {"sha": "fb0dd8327089c0b7e05728318e736b464f80c547", "filename": "gcc/passes.c", "status": "modified", "additions": 44, "deletions": 0, "changes": 44, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2c5721d9f36a114809e296686ff39b1324b0cc5b/gcc%2Fpasses.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2c5721d9f36a114809e296686ff39b1324b0cc5b/gcc%2Fpasses.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fpasses.c?ref=2c5721d9f36a114809e296686ff39b1324b0cc5b", "patch": "@@ -1755,6 +1755,50 @@ execute_ipa_pass_list (struct opt_pass *pass)\n   while (pass);\n }\n \n+/* Execute stmt fixup hooks of all passes in PASS for NODE and STMTS.  */\n+\n+static void\n+execute_ipa_stmt_fixups (struct opt_pass *pass,\n+\t\t\t  struct cgraph_node *node, gimple *stmts)\n+{\n+  while (pass)\n+    {\n+      /* Execute all of the IPA_PASSes in the list.  */\n+      if (pass->type == IPA_PASS\n+\t  && (!pass->gate || pass->gate ()))\n+\t{\n+\t  struct ipa_opt_pass_d *ipa_pass = (struct ipa_opt_pass_d *) pass;\n+\n+\t  if (ipa_pass->stmt_fixup)\n+\t    {\n+\t      pass_init_dump_file (pass);\n+\t      /* If a timevar is present, start it.  */\n+\t      if (pass->tv_id)\n+\t\ttimevar_push (pass->tv_id);\n+\n+\t      ipa_pass->stmt_fixup (node, stmts);\n+\n+\t      /* Stop timevar.  */\n+\t      if (pass->tv_id)\n+\t\ttimevar_pop (pass->tv_id);\n+\t      pass_fini_dump_file (pass);\n+\t    }\n+\t  if (pass->sub)\n+\t    execute_ipa_stmt_fixups (pass->sub, node, stmts);\n+\t}\n+      pass = pass->next;\n+    }\n+}\n+\n+/* Execute stmt fixup hooks of all IPA passes for NODE and STMTS.  */\n+\n+void\n+execute_all_ipa_stmt_fixups (struct cgraph_node *node, gimple *stmts)\n+{\n+  execute_ipa_stmt_fixups (all_regular_ipa_passes, node, stmts);\n+}\n+\n+\n extern void debug_properties (unsigned int);\n extern void dump_properties (FILE *, unsigned int);\n "}, {"sha": "bff027b304c769cab928c0ad8903c0993fd93ce2", "filename": "gcc/tree-pass.h", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2c5721d9f36a114809e296686ff39b1324b0cc5b/gcc%2Ftree-pass.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2c5721d9f36a114809e296686ff39b1324b0cc5b/gcc%2Ftree-pass.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-pass.h?ref=2c5721d9f36a114809e296686ff39b1324b0cc5b", "patch": "@@ -185,7 +185,10 @@ struct ipa_opt_pass_d\n      as needed so both calls are necessary.  */\n   void (*read_summary) (void);\n   void (*function_read_summary) (struct cgraph_node *);\n-  \n+  /* Hook to convert gimple stmt uids into true gimple statements.  The second\n+     parameter is an array of statements indexed by their uid. */\n+  void (*stmt_fixup) (struct cgraph_node *, gimple *);\n+\n   /* Results of interprocedural propagation of an IPA pass is applied to\n      function body via this hook.  */\n   unsigned int function_transform_todo_flags_start;\n@@ -566,6 +569,7 @@ extern void execute_pass_list (struct opt_pass *);\n extern void execute_ipa_pass_list (struct opt_pass *);\n extern void execute_ipa_summary_passes (struct ipa_opt_pass_d *);\n extern void execute_all_ipa_transforms (void);\n+extern void execute_all_ipa_stmt_fixups (struct cgraph_node *, gimple *);\n \n extern void print_current_pass (FILE *);\n extern void debug_pass (void);"}]}