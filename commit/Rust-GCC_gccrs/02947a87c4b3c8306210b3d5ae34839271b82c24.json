{"sha": "02947a87c4b3c8306210b3d5ae34839271b82c24", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDI5NDdhODdjNGIzYzgzMDYyMTBiM2Q1YWUzNDgzOTI3MWI4MmMyNA==", "commit": {"author": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2020-07-09T09:58:11Z"}, "committer": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2020-07-10T08:10:50Z"}, "message": "Add -fdump-profile-report.\n\nWhen using -fprofile-report, -fdump-profile-report can be used to\nprint the report to a foo.c.000i.profile-report file instead\nof stderr. I see it handy for comparison purpose.\n\ngcc/ChangeLog:\n\n\t* dumpfile.c [profile-report]: Add new profile dump.\n\t* dumpfile.h (enum tree_dump_index): Ad TDI_profile_report.\n\t* passes.c (pass_manager::dump_profile_report): Change stderr\n\tto dump_file.", "tree": {"sha": "a01932ac9edec6c254e7e3bdefcca9dadad378a6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a01932ac9edec6c254e7e3bdefcca9dadad378a6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/02947a87c4b3c8306210b3d5ae34839271b82c24", "comment_count": 0, "verification": {"verified": false, "reason": "unknown_key", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQEzBAABCAAdFiEE6I4wzqqylQBfXaRhTcGC3A+nN4UFAl8IIrYACgkQTcGC3A+n\nN4XmhAf/T/ulUmVZQFPwcUR0cRJPgU/1ZG7SqG3CI7W/P6Hog5Ps7ytcO5CHdj7p\nIZQdBKvCyB9osNl+X1Wx19XUpM7anIWBHKQQaZ7y+4dl3rcxEYT0ZW0Zag0qUxP7\n1lInOUDB5ZNb1VmjZOcm47eFVoh7OHcH3L8mv73gDeatBW+zaaA0wRqFN31rxkbG\ni+8VO05weE06wYEHS1fR3LyM0DdOb624kkGbfoehpNAfKiSqTbbd7LBXwnfXCANH\n+Gc7KdItkwciztR8ZK3Ev9AB6WsPs/a47TZrTbnUmcsli4RI6sGjZ05Wwrvc/0U9\n1GurkOb0z/rfehHfy3urVnjXzs+62g==\n=QL3b\n-----END PGP SIGNATURE-----", "payload": "tree a01932ac9edec6c254e7e3bdefcca9dadad378a6\nparent 08a94a95d10f311d2a83e6f4c076babd8afd6a3e\nauthor Martin Liska <mliska@suse.cz> 1594288691 +0200\ncommitter Martin Liska <mliska@suse.cz> 1594368650 +0200\n\nAdd -fdump-profile-report.\n\nWhen using -fprofile-report, -fdump-profile-report can be used to\nprint the report to a foo.c.000i.profile-report file instead\nof stderr. I see it handy for comparison purpose.\n\ngcc/ChangeLog:\n\n\t* dumpfile.c [profile-report]: Add new profile dump.\n\t* dumpfile.h (enum tree_dump_index): Ad TDI_profile_report.\n\t* passes.c (pass_manager::dump_profile_report): Change stderr\n\tto dump_file.\n"}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/02947a87c4b3c8306210b3d5ae34839271b82c24", "html_url": "https://github.com/Rust-GCC/gccrs/commit/02947a87c4b3c8306210b3d5ae34839271b82c24", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/02947a87c4b3c8306210b3d5ae34839271b82c24/comments", "author": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "committer": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "08a94a95d10f311d2a83e6f4c076babd8afd6a3e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/08a94a95d10f311d2a83e6f4c076babd8afd6a3e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/08a94a95d10f311d2a83e6f4c076babd8afd6a3e"}], "stats": {"total": 51, "additions": 30, "deletions": 21}, "files": [{"sha": "9a5496a18e88f769a7ce6d4a467a5df4951db726", "filename": "gcc/dumpfile.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/02947a87c4b3c8306210b3d5ae34839271b82c24/gcc%2Fdumpfile.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/02947a87c4b3c8306210b3d5ae34839271b82c24/gcc%2Fdumpfile.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdumpfile.c?ref=02947a87c4b3c8306210b3d5ae34839271b82c24", "patch": "@@ -103,8 +103,9 @@ static struct dump_file_info dump_files[TDI_end] =\n   DUMP_FILE_INFO (\".gimple\", \"tree-gimple\", DK_tree, 0),\n   DUMP_FILE_INFO (\".nested\", \"tree-nested\", DK_tree, 0),\n   DUMP_FILE_INFO (\".lto-stream-out\", \"ipa-lto-stream-out\", DK_ipa, 0),\n+  DUMP_FILE_INFO (\".profile-report\", \"profile-report\", DK_ipa, 0),\n #define FIRST_AUTO_NUMBERED_DUMP 1\n-#define FIRST_ME_AUTO_NUMBERED_DUMP 4\n+#define FIRST_ME_AUTO_NUMBERED_DUMP 5\n \n   DUMP_FILE_INFO (NULL, \"lang-all\", DK_lang, 0),\n   DUMP_FILE_INFO (NULL, \"tree-all\", DK_tree, 0),"}, {"sha": "ee9e602b67f291b876c7d6d3e96c1061e1610a2d", "filename": "gcc/dumpfile.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/02947a87c4b3c8306210b3d5ae34839271b82c24/gcc%2Fdumpfile.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/02947a87c4b3c8306210b3d5ae34839271b82c24/gcc%2Fdumpfile.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdumpfile.h?ref=02947a87c4b3c8306210b3d5ae34839271b82c24", "patch": "@@ -48,6 +48,7 @@ enum tree_dump_index\n   TDI_gimple,\t\t\t/* dump each function after gimplifying it */\n   TDI_nested,\t\t\t/* dump each function after unnesting it */\n   TDI_lto_stream_out,\t\t/* dump information about lto streaming */\n+  TDI_profile_report,\t\t/* dump information about profile quality */\n \n   TDI_lang_all,\t\t\t/* enable all the language dumps.  */\n   TDI_tree_all,\t\t\t/* enable all the GENERIC/GIMPLE dumps.  */"}, {"sha": "a5da9a46f4e9d165707e68ea5227602c1dbe3012", "filename": "gcc/passes.c", "status": "modified", "additions": 27, "deletions": 20, "changes": 47, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/02947a87c4b3c8306210b3d5ae34839271b82c24/gcc%2Fpasses.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/02947a87c4b3c8306210b3d5ae34839271b82c24/gcc%2Fpasses.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fpasses.c?ref=02947a87c4b3c8306210b3d5ae34839271b82c24", "patch": "@@ -1850,10 +1850,15 @@ pass_manager::dump_profile_report () const\n \n   if (!profile_record)\n     return;\n-  fprintf (stderr, \"\\nProfile consistency report:\\n\\n\");\n-  fprintf (stderr, \"                                 |mismatch     |mismatch     |                     |\\n\");\n-  fprintf (stderr, \"Pass name                        |IN    |IN    |OUT   |OUT   |overall              |\\n\");\n-  fprintf (stderr, \"                                 |freq  |count |freq  |count |size      |time      |\\n\");\n+\n+  FILE *dump_file = dump_begin (TDI_profile_report, NULL);\n+  if (dump_file == NULL)\n+    dump_file = stderr;\n+\n+  fprintf (dump_file, \"Profile consistency report:\\n\\n\");\n+  fprintf (dump_file, \"                                 |mismatch     |mismatch     |                     |\\n\");\n+  fprintf (dump_file, \"Pass name                        |IN    |IN    |OUT   |OUT   |overall              |\\n\");\n+  fprintf (dump_file, \"                                 |freq  |count |freq  |count |size      |time      |\\n\");\n \t   \n   for (int i = 1; i < passes_by_id_size; i++)\n     if (profile_record[i].run)\n@@ -1876,47 +1881,47 @@ pass_manager::dump_profile_report () const\n \t    || rel_time_change || rel_size_change)\n \t  {\n \t    last_reported = i;\n-\t    fprintf (stderr, \"%-33s\", passes_by_id[i]->name);\n+\t    fprintf (dump_file, \"%-33s\", passes_by_id[i]->name);\n \t    if (profile_record[i].num_mismatched_freq_in != last_freq_in)\n-\t      fprintf (stderr, \"| %+5i\",\n+\t      fprintf (dump_file, \"| %+5i\",\n \t\t       profile_record[i].num_mismatched_freq_in\n \t\t       - last_freq_in);\n \t    else\n-\t      fprintf (stderr, \"|      \");\n+\t      fprintf (dump_file, \"|      \");\n \t    if (profile_record[i].num_mismatched_count_in != last_count_in)\n-\t      fprintf (stderr, \"| %+5i\",\n+\t      fprintf (dump_file, \"| %+5i\",\n \t\t       profile_record[i].num_mismatched_count_in\n \t\t       - last_count_in);\n \t    else\n-\t      fprintf (stderr, \"|      \");\n+\t      fprintf (dump_file, \"|      \");\n \t    if (profile_record[i].num_mismatched_freq_out != last_freq_out)\n-\t      fprintf (stderr, \"| %+5i\",\n+\t      fprintf (dump_file, \"| %+5i\",\n \t\t       profile_record[i].num_mismatched_freq_out\n \t\t       - last_freq_out);\n \t    else\n-\t      fprintf (stderr, \"|      \");\n+\t      fprintf (dump_file, \"|      \");\n \t    if (profile_record[i].num_mismatched_count_out != last_count_out)\n-\t      fprintf (stderr, \"| %+5i\",\n+\t      fprintf (dump_file, \"| %+5i\",\n \t\t       profile_record[i].num_mismatched_count_out\n \t\t       - last_count_out);\n \t    else\n-\t      fprintf (stderr, \"|      \");\n+\t      fprintf (dump_file, \"|      \");\n \n \t    /* Size/time units change across gimple and RTL.  */\n \t    if (i == pass_expand_1->static_pass_number)\n-\t      fprintf (stderr, \"|----------|----------\");\n+\t      fprintf (dump_file, \"|----------|----------\");\n \t    else\n \t      {\n \t\tif (rel_size_change)\n-\t\t  fprintf (stderr, \"| %+8.1f%%\", rel_size_change);\n+\t\t  fprintf (dump_file, \"| %+8.1f%%\", rel_size_change);\n \t\telse\n-\t\t  fprintf (stderr, \"|          \");\n+\t\t  fprintf (dump_file, \"|          \");\n \t\tif (rel_time_change)\n-\t\t  fprintf (stderr, \"| %+8.1f%%\", rel_time_change);\n+\t\t  fprintf (dump_file, \"| %+8.1f%%\", rel_time_change);\n \t\telse\n-\t\t  fprintf (stderr, \"|          \");\n+\t\t  fprintf (dump_file, \"|          \");\n \t      }\n-\t    fprintf (stderr, \"|\\n\");\n+\t    fprintf (dump_file, \"|\\n\");\n \t    last_freq_in = profile_record[i].num_mismatched_freq_in;\n \t    last_freq_out = profile_record[i].num_mismatched_freq_out;\n \t    last_count_in = profile_record[i].num_mismatched_count_in;\n@@ -1925,12 +1930,14 @@ pass_manager::dump_profile_report () const\n \telse if (last_reported != i)\n \t  {\n \t    last_reported = i;\n-\t    fprintf (stderr, \"%-20s ------------|      |      |      |      |          |          |\\n\",\n+\t    fprintf (dump_file, \"%-20s ------------|      |      |      |      |          |          |\\n\",\n \t\t     passes_by_id[i]->name);\n \t  }\n \tlast_time = profile_record[i].time;\n \tlast_size = profile_record[i].size;\n       }\n+\n+  dump_end (TDI_profile_report, dump_file);\n }\n \n /* Perform all TODO actions that ought to be done on each function.  */"}]}