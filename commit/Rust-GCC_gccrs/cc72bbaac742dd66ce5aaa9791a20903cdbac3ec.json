{"sha": "cc72bbaac742dd66ce5aaa9791a20903cdbac3ec", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2M3MmJiYWFjNzQyZGQ2NmNlNWFhYTk3OTFhMjA5MDNjZGJhYzNlYw==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2010-03-22T20:38:57Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2010-03-22T20:38:57Z"}, "message": "re PR c++/43333 (__is_pod seems broken)\n\n\tPR c++/43333\n\t* tree.c (pod_type_p): Use old meaning in C++98 mode.\n\nFrom-SVN: r157652", "tree": {"sha": "498717f3a2592be450d23ddf277ef43ad3174304", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/498717f3a2592be450d23ddf277ef43ad3174304"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/cc72bbaac742dd66ce5aaa9791a20903cdbac3ec", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cc72bbaac742dd66ce5aaa9791a20903cdbac3ec", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cc72bbaac742dd66ce5aaa9791a20903cdbac3ec", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cc72bbaac742dd66ce5aaa9791a20903cdbac3ec/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "189327376c98168ad9445537dcd04d467b09d143", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/189327376c98168ad9445537dcd04d467b09d143", "html_url": "https://github.com/Rust-GCC/gccrs/commit/189327376c98168ad9445537dcd04d467b09d143"}], "stats": {"total": 31, "additions": 29, "deletions": 2}, "files": [{"sha": "0e10b5bb203c3b11c396dc12ed8ad6b8dc88f950", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cc72bbaac742dd66ce5aaa9791a20903cdbac3ec/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cc72bbaac742dd66ce5aaa9791a20903cdbac3ec/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=cc72bbaac742dd66ce5aaa9791a20903cdbac3ec", "patch": "@@ -1,5 +1,8 @@\n 2010-03-22  Jason Merrill  <jason@redhat.com>\n \n+\tPR c++/43333\n+\t* tree.c (pod_type_p): Use old meaning in C++98 mode.\n+\n \tPR c++/43281\n \t* pt.c (contains_auto_r): New fn.\n \t(do_auto_deduction): Use it."}, {"sha": "35b0da62ea5b8ec4c2d1738088cff9f04a152756", "filename": "gcc/cp/tree.c", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cc72bbaac742dd66ce5aaa9791a20903cdbac3ec/gcc%2Fcp%2Ftree.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cc72bbaac742dd66ce5aaa9791a20903cdbac3ec/gcc%2Fcp%2Ftree.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Ftree.c?ref=cc72bbaac742dd66ce5aaa9791a20903cdbac3ec", "patch": "@@ -2390,7 +2390,9 @@ pod_type_p (const_tree t)\n      argument unmodified and we assign it to a const_tree.  */\n   t = strip_array_types (CONST_CAST_TREE(t));\n \n-  if (CLASS_TYPE_P (t))\n+  if (!CLASS_TYPE_P (t))\n+    return scalarish_type_p (t);\n+  else if (cxx_dialect > cxx98)\n     /* [class]/10: A POD struct is a class that is both a trivial class and a\n        standard-layout class, and has no non-static data members of type\n        non-POD struct, non-POD union (or array of such types).\n@@ -2399,7 +2401,8 @@ pod_type_p (const_tree t)\n        non-std-layout or non-trivial, the class will be too.  */\n     return (std_layout_type_p (t) && trivial_type_p (t));\n   else\n-    return scalarish_type_p (t);\n+    /* The C++98 definition of POD is different.  */\n+    return !CLASSTYPE_NON_LAYOUT_POD_P (t);\n }\n \n /* Returns true iff T is POD for the purpose of layout, as defined in the"}, {"sha": "e01b7ad5a1f82d51e622f83fd6786908aa4a84e2", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cc72bbaac742dd66ce5aaa9791a20903cdbac3ec/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cc72bbaac742dd66ce5aaa9791a20903cdbac3ec/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=cc72bbaac742dd66ce5aaa9791a20903cdbac3ec", "patch": "@@ -1,5 +1,9 @@\n 2010-03-22  Jason Merrill  <jason@redhat.com>\n \n+\tPR c++/43333\n+\t* g++.dg/ext/is_pod.C: Pass -std=c++0x.\n+\t* g++.dg/ext/is_pod_98.C: New.\n+\n \tPR c++/43281\n \t* g++.dg/cpp0x/auto18.C: New.\n "}, {"sha": "570d23565f13f28438fc8c02a9c0edc1302912be", "filename": "gcc/testsuite/g++.dg/ext/is_pod.C", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cc72bbaac742dd66ce5aaa9791a20903cdbac3ec/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fis_pod.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cc72bbaac742dd66ce5aaa9791a20903cdbac3ec/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fis_pod.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fis_pod.C?ref=cc72bbaac742dd66ce5aaa9791a20903cdbac3ec", "patch": "@@ -1,3 +1,4 @@\n+// { dg-options \"-std=c++0x\" }\n // { dg-do \"run\" }\n #include <cassert>\n "}, {"sha": "80a87c825c40d7c70fc5457548002e24129ba108", "filename": "gcc/testsuite/g++.dg/ext/is_pod_98.C", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cc72bbaac742dd66ce5aaa9791a20903cdbac3ec/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fis_pod_98.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cc72bbaac742dd66ce5aaa9791a20903cdbac3ec/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fis_pod_98.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fis_pod_98.C?ref=cc72bbaac742dd66ce5aaa9791a20903cdbac3ec", "patch": "@@ -0,0 +1,16 @@\n+// PR c++/43333\n+// { dg-options \"-std=c++98\" }\n+// { dg-do run }\n+\n+struct strPOD\n+{\n+  const char *const foo;\n+  const char *const bar;\n+};\n+extern \"C\" void abort (void);\n+int main ()\n+{\n+  if (!__is_pod (strPOD))\n+    abort ();\n+  return 0;\n+}"}]}