{"sha": "511ea1538b58d7d44a53d0264fc041de5991270a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTExZWExNTM4YjU4ZDdkNDRhNTNkMDI2NGZjMDQxZGU1OTkxMjcwYQ==", "commit": {"author": {"name": "Andreas Krebbel", "email": "krebbel@linux.ibm.com", "date": "2019-04-02T10:50:03Z"}, "committer": {"name": "Andreas Krebbel", "email": "krebbel@gcc.gnu.org", "date": "2019-04-02T10:50:03Z"}, "message": "S/390: arch13: Add arch13 as architecture option\n\nThis patch enables the command line options and provides the proper\nmacros for checking.\n\ngcc/ChangeLog:\n\n2019-04-02  Andreas Krebbel  <krebbel@linux.ibm.com>\n\n\t* common/config/s390/s390-common.c (processor_flags_table): New\n\tentry for arch13.\n\t* config.gcc: Support arch13 with the --with-arch= configure flag.\n\t* config/s390/driver-native.c (s390_host_detect_local_cpu):\n\t* config/s390/s390-opts.h (enum processor_type): Add PROCESSOR_ARCH13.\n\t* config/s390/s390.c (s390_get_sched_attrmask)\n\t(s390_get_unit_mask): Add PROCESSOR_ARCH13.\n\t* config/s390/s390.h (enum processor_flags): Add PF_VXE2 and PF_ARCH13.\n\t* config/s390/s390.md (TARGET_CPU_ARCH13, TARGET_CPU_ARCH13_P)\n\t(TARGET_CPU_VXE2, TARGET_CPU_VXE2_P, TARGET_ARCH13)\n\t(TARGET_ARCH13_P, TARGET_VXE2, TARGET_VXE2_P): New macro\n\tdefinitions.\n\t* config/s390/s390.opt: Support arch13 as processor type in\n\tcommand line options.\n\ngcc/testsuite/ChangeLog:\n\n2019-04-02  Andreas Krebbel  <krebbel@linux.ibm.com>\n\n\t* gcc.target/s390/s390.exp: Run tests in arch13 subdir.\n\t* lib/target-supports.exp (check_effective_target_s390_vxe2): New\n\truntime check for the vxe2 hardware feature on IBM Z.\n\nFrom-SVN: r270077", "tree": {"sha": "3b70d51d4f7f0371cb3f9b343704e32e5cad8613", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3b70d51d4f7f0371cb3f9b343704e32e5cad8613"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/511ea1538b58d7d44a53d0264fc041de5991270a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/511ea1538b58d7d44a53d0264fc041de5991270a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/511ea1538b58d7d44a53d0264fc041de5991270a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/511ea1538b58d7d44a53d0264fc041de5991270a/comments", "author": {"login": "Andreas-Krebbel", "id": 38103320, "node_id": "MDQ6VXNlcjM4MTAzMzIw", "avatar_url": "https://avatars.githubusercontent.com/u/38103320?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Andreas-Krebbel", "html_url": "https://github.com/Andreas-Krebbel", "followers_url": "https://api.github.com/users/Andreas-Krebbel/followers", "following_url": "https://api.github.com/users/Andreas-Krebbel/following{/other_user}", "gists_url": "https://api.github.com/users/Andreas-Krebbel/gists{/gist_id}", "starred_url": "https://api.github.com/users/Andreas-Krebbel/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Andreas-Krebbel/subscriptions", "organizations_url": "https://api.github.com/users/Andreas-Krebbel/orgs", "repos_url": "https://api.github.com/users/Andreas-Krebbel/repos", "events_url": "https://api.github.com/users/Andreas-Krebbel/events{/privacy}", "received_events_url": "https://api.github.com/users/Andreas-Krebbel/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "6de6b21052e0ca0f54cb494a3a59fee389ac6fdf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6de6b21052e0ca0f54cb494a3a59fee389ac6fdf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6de6b21052e0ca0f54cb494a3a59fee389ac6fdf"}], "stats": {"total": 103, "additions": 90, "deletions": 13}, "files": [{"sha": "2ab9586762e1fc0c27507060441c07b1a8dee99c", "filename": "gcc/ChangeLog", "status": "modified", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/511ea1538b58d7d44a53d0264fc041de5991270a/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/511ea1538b58d7d44a53d0264fc041de5991270a/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=511ea1538b58d7d44a53d0264fc041de5991270a", "patch": "@@ -1,3 +1,20 @@\n+2019-04-02  Andreas Krebbel  <krebbel@linux.ibm.com>\n+\n+\t* common/config/s390/s390-common.c (processor_flags_table): New\n+\tentry for arch13.\n+\t* config.gcc: Support arch13 with the --with-arch= configure flag.\n+\t* config/s390/driver-native.c (s390_host_detect_local_cpu):\n+\t* config/s390/s390-opts.h (enum processor_type): Add PROCESSOR_ARCH13.\n+\t* config/s390/s390.c (s390_get_sched_attrmask)\n+\t(s390_get_unit_mask): Add PROCESSOR_ARCH13.\n+\t* config/s390/s390.h (enum processor_flags): Add PF_VXE2 and PF_ARCH13.\n+\t* config/s390/s390.md (TARGET_CPU_ARCH13, TARGET_CPU_ARCH13_P)\n+\t(TARGET_CPU_VXE2, TARGET_CPU_VXE2_P, TARGET_ARCH13)\n+\t(TARGET_ARCH13_P, TARGET_VXE2, TARGET_VXE2_P): New macro\n+\tdefinitions.\n+\t* config/s390/s390.opt: Support arch13 as processor type in\n+\tcommand line options.\n+\n 2019-04-02  Martin Liska  <mliska@suse.cz>\n \n \tPR translation/89912"}, {"sha": "f9c3a95f897d2fe8da12c19c4e4f133be1cd5b79", "filename": "gcc/common/config/s390/s390-common.c", "status": "modified", "additions": 12, "deletions": 9, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/511ea1538b58d7d44a53d0264fc041de5991270a/gcc%2Fcommon%2Fconfig%2Fs390%2Fs390-common.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/511ea1538b58d7d44a53d0264fc041de5991270a/gcc%2Fcommon%2Fconfig%2Fs390%2Fs390-common.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcommon%2Fconfig%2Fs390%2Fs390-common.c?ref=511ea1538b58d7d44a53d0264fc041de5991270a", "patch": "@@ -32,21 +32,24 @@ EXPORTED_CONST int processor_flags_table[] =\n     /* z900 */   PF_IEEE_FLOAT | PF_ZARCH,\n     /* z990 */   PF_IEEE_FLOAT | PF_ZARCH | PF_LONG_DISPLACEMENT,\n     /* z9-109 */ PF_IEEE_FLOAT | PF_ZARCH | PF_LONG_DISPLACEMENT\n-                 | PF_EXTIMM,\n+\t\t | PF_EXTIMM,\n     /* z9-ec */  PF_IEEE_FLOAT | PF_ZARCH | PF_LONG_DISPLACEMENT\n-                 | PF_EXTIMM | PF_DFP,\n+\t\t | PF_EXTIMM | PF_DFP,\n     /* z10 */    PF_IEEE_FLOAT | PF_ZARCH | PF_LONG_DISPLACEMENT\n-                 | PF_EXTIMM | PF_DFP | PF_Z10,\n+\t\t | PF_EXTIMM | PF_DFP | PF_Z10,\n     /* z196 */   PF_IEEE_FLOAT | PF_ZARCH | PF_LONG_DISPLACEMENT\n-                 | PF_EXTIMM | PF_DFP | PF_Z10 | PF_Z196,\n+\t\t | PF_EXTIMM | PF_DFP | PF_Z10 | PF_Z196,\n     /* zEC12 */  PF_IEEE_FLOAT | PF_ZARCH | PF_LONG_DISPLACEMENT\n-                 | PF_EXTIMM | PF_DFP | PF_Z10 | PF_Z196 | PF_ZEC12 | PF_TX,\n+\t\t | PF_EXTIMM | PF_DFP | PF_Z10 | PF_Z196 | PF_ZEC12 | PF_TX,\n     /* z13 */    PF_IEEE_FLOAT | PF_ZARCH | PF_LONG_DISPLACEMENT\n-                 | PF_EXTIMM | PF_DFP | PF_Z10 | PF_Z196 | PF_ZEC12 | PF_TX\n-                 | PF_Z13 | PF_VX,\n+\t\t | PF_EXTIMM | PF_DFP | PF_Z10 | PF_Z196 | PF_ZEC12 | PF_TX\n+\t\t | PF_Z13 | PF_VX,\n     /* z14 */    PF_IEEE_FLOAT | PF_ZARCH | PF_LONG_DISPLACEMENT\n-                 | PF_EXTIMM | PF_DFP | PF_Z10 | PF_Z196 | PF_ZEC12 | PF_TX\n-                 | PF_Z13 | PF_VX | PF_VXE | PF_Z14\n+\t\t | PF_EXTIMM | PF_DFP | PF_Z10 | PF_Z196 | PF_ZEC12 | PF_TX\n+\t\t | PF_Z13 | PF_VX | PF_VXE | PF_Z14,\n+    /* arch13 */ PF_IEEE_FLOAT | PF_ZARCH | PF_LONG_DISPLACEMENT\n+\t\t | PF_EXTIMM | PF_DFP | PF_Z10 | PF_Z196 | PF_ZEC12 | PF_TX\n+\t\t | PF_Z13 | PF_VX | PF_VXE | PF_Z14 | PF_VXE2 | PF_ARCH13\n   };\n \n /* Change optimizations to be performed, depending on the"}, {"sha": "0a8830a0d57f3d294ab7da82339ace590d57d432", "filename": "gcc/config.gcc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/511ea1538b58d7d44a53d0264fc041de5991270a/gcc%2Fconfig.gcc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/511ea1538b58d7d44a53d0264fc041de5991270a/gcc%2Fconfig.gcc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig.gcc?ref=511ea1538b58d7d44a53d0264fc041de5991270a", "patch": "@@ -4727,7 +4727,7 @@ case \"${target}\" in\n \t\tfor which in arch tune; do\n \t\t\teval \"val=\\$with_$which\"\n \t\t\tcase ${val} in\n-\t\t\t\"\" | native | z900 | z990 | z9-109 | z9-ec | z10 | z196 | zEC12 | z13 | z14 | arch5 | arch6 | arch7 | arch8 | arch9 | arch10 | arch11 | arch12)\n+\t\t\t\"\" | native | z900 | z990 | z9-109 | z9-ec | z10 | z196 | zEC12 | z13 | z14 | arch5 | arch6 | arch7 | arch8 | arch9 | arch10 | arch11 | arch12 | arch13 )\n \t\t\t\t# OK\n \t\t\t\t;;\n \t\t\t*)"}, {"sha": "0352a79868abbac1bf226fb590fce63a74ae94b4", "filename": "gcc/config/s390/driver-native.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/511ea1538b58d7d44a53d0264fc041de5991270a/gcc%2Fconfig%2Fs390%2Fdriver-native.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/511ea1538b58d7d44a53d0264fc041de5991270a/gcc%2Fconfig%2Fs390%2Fdriver-native.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fs390%2Fdriver-native.c?ref=511ea1538b58d7d44a53d0264fc041de5991270a", "patch": "@@ -120,7 +120,7 @@ s390_host_detect_local_cpu (int argc, const char **argv)\n \t      cpu = \"z14\";\n \t      break;\n \t    default:\n-\t      cpu = \"z14\";\n+\t      cpu = \"arch13\";\n \t      break;\n \t    }\n \t}"}, {"sha": "db9dc62971402a190e52353cb4a39d876419b2f7", "filename": "gcc/config/s390/s390-opts.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/511ea1538b58d7d44a53d0264fc041de5991270a/gcc%2Fconfig%2Fs390%2Fs390-opts.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/511ea1538b58d7d44a53d0264fc041de5991270a/gcc%2Fconfig%2Fs390%2Fs390-opts.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fs390%2Fs390-opts.h?ref=511ea1538b58d7d44a53d0264fc041de5991270a", "patch": "@@ -37,6 +37,7 @@ enum processor_type\n   PROCESSOR_2827_ZEC12,\n   PROCESSOR_2964_Z13,\n   PROCESSOR_3906_Z14,\n+  PROCESSOR_ARCH13,\n   PROCESSOR_NATIVE,\n   PROCESSOR_max\n };"}, {"sha": "5c55ebe32981e9ad3c28d8ce72bb7b744d44bd7f", "filename": "gcc/config/s390/s390.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/511ea1538b58d7d44a53d0264fc041de5991270a/gcc%2Fconfig%2Fs390%2Fs390.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/511ea1538b58d7d44a53d0264fc041de5991270a/gcc%2Fconfig%2Fs390%2Fs390.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fs390%2Fs390.c?ref=511ea1538b58d7d44a53d0264fc041de5991270a", "patch": "@@ -337,6 +337,7 @@ const struct s390_processor processor_table[] =\n   { \"zEC12\",  \"zEC12\",  PROCESSOR_2827_ZEC12,  &zEC12_cost,  10 },\n   { \"z13\",    \"z13\",    PROCESSOR_2964_Z13,    &zEC12_cost,  11 },\n   { \"z14\",    \"arch12\", PROCESSOR_3906_Z14,    &zEC12_cost,  12 },\n+  { \"arch13\", \"\",       PROCESSOR_ARCH13,      &zEC12_cost,  13 },\n   { \"native\", \"\",       PROCESSOR_NATIVE,      NULL,         0  }\n };\n \n@@ -14313,6 +14314,7 @@ s390_get_sched_attrmask (rtx_insn *insn)\n \tmask |= S390_SCHED_ATTR_MASK_GROUPOFTWO;\n       break;\n     case PROCESSOR_3906_Z14:\n+    case PROCESSOR_ARCH13:\n       if (get_attr_z14_cracked (insn))\n \tmask |= S390_SCHED_ATTR_MASK_CRACKED;\n       if (get_attr_z14_expanded (insn))\n@@ -14349,6 +14351,7 @@ s390_get_unit_mask (rtx_insn *insn, int *units)\n \tmask |= 1 << 3;\n       break;\n     case PROCESSOR_3906_Z14:\n+    case PROCESSOR_ARCH13:\n       *units = 4;\n       if (get_attr_z14_unit_lsu (insn))\n \tmask |= 1 << 0;"}, {"sha": "c7aa67c83ce0dc311ccd01f1a9e73bdb335d7f2a", "filename": "gcc/config/s390/s390.h", "status": "modified", "additions": 18, "deletions": 1, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/511ea1538b58d7d44a53d0264fc041de5991270a/gcc%2Fconfig%2Fs390%2Fs390.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/511ea1538b58d7d44a53d0264fc041de5991270a/gcc%2Fconfig%2Fs390%2Fs390.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fs390%2Fs390.h?ref=511ea1538b58d7d44a53d0264fc041de5991270a", "patch": "@@ -39,7 +39,9 @@ enum processor_flags\n   PF_Z13 = 512,\n   PF_VX = 1024,\n   PF_Z14 = 2048,\n-  PF_VXE = 4096\n+  PF_VXE = 4096,\n+  PF_VXE2 = 8192,\n+  PF_ARCH13 = 16384\n };\n \n /* This is necessary to avoid a warning about comparing different enum\n@@ -98,6 +100,14 @@ enum processor_flags\n \t(s390_arch_flags & PF_VXE)\n #define TARGET_CPU_VXE_P(opts) \\\n \t(opts->x_s390_arch_flags & PF_VXE)\n+#define TARGET_CPU_ARCH13 \\\n+\t(s390_arch_flags & PF_ARCH13)\n+#define TARGET_CPU_ARCH13_P(opts) \\\n+\t(opts->x_s390_arch_flags & PF_ARCH13)\n+#define TARGET_CPU_VXE2 \\\n+\t(s390_arch_flags & PF_VXE2)\n+#define TARGET_CPU_VXE2_P(opts) \\\n+\t(opts->x_s390_arch_flags & PF_VXE2)\n \n #define TARGET_HARD_FLOAT_P(opts) (!TARGET_SOFT_FLOAT_P(opts))\n \n@@ -150,6 +160,13 @@ enum processor_flags\n \t(TARGET_VX && TARGET_CPU_VXE)\n #define TARGET_VXE_P(opts)\t\t\t\t\t\t\\\n \t(TARGET_VX_P (opts) && TARGET_CPU_VXE_P (opts))\n+#define TARGET_ARCH13 (TARGET_ZARCH && TARGET_CPU_ARCH13)\n+#define TARGET_ARCH13_P(opts)\t\t\t\t\t\t\\\n+\t(TARGET_ZARCH_P (opts->x_target_flags) && TARGET_CPU_ARCH13_P (opts))\n+#define TARGET_VXE2\t\t\t\t\t\\\n+\t(TARGET_VX && TARGET_CPU_VXE2)\n+#define TARGET_VXE2_P(opts)\t\t\t\t\t\t\\\n+\t(TARGET_VX_P (opts) && TARGET_CPU_VXE2_P (opts))\n \n #ifdef HAVE_AS_MACHINE_MACHINEMODE\n #define S390_USE_TARGET_ATTRIBUTE 1"}, {"sha": "bbe1ea5f01ccbb6a58333652fc3eea9af6fc3b09", "filename": "gcc/config/s390/s390.md", "status": "modified", "additions": 9, "deletions": 1, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/511ea1538b58d7d44a53d0264fc041de5991270a/gcc%2Fconfig%2Fs390%2Fs390.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/511ea1538b58d7d44a53d0264fc041de5991270a/gcc%2Fconfig%2Fs390%2Fs390.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fs390%2Fs390.md?ref=511ea1538b58d7d44a53d0264fc041de5991270a", "patch": "@@ -510,7 +510,7 @@\n   (const (symbol_ref \"s390_tune_attr\")))\n \n (define_attr \"cpu_facility\"\n-  \"standard,ieee,zarch,cpu_zarch,longdisp,extimm,dfp,z10,z196,zEC12,vx,z13,z14,vxe\"\n+  \"standard,ieee,zarch,cpu_zarch,longdisp,extimm,dfp,z10,z196,zEC12,vx,z13,z14,vxe,arch13,vxe2\"\n   (const_string \"standard\"))\n \n (define_attr \"enabled\" \"\"\n@@ -567,6 +567,14 @@\n          (and (eq_attr \"cpu_facility\" \"vxe\")\n \t      (match_test \"TARGET_VXE\"))\n \t (const_int 1)\n+\n+\t (and (eq_attr \"cpu_facility\" \"arch13\")\n+\t      (match_test \"TARGET_ARCH13\"))\n+\t (const_int 1)\n+\n+         (and (eq_attr \"cpu_facility\" \"vxe2\")\n+\t      (match_test \"TARGET_VXE2\"))\n+\t (const_int 1)\n \t ]\n \t(const_int 0)))\n "}, {"sha": "0fb738fb261363435fc4aa50e16960a19e310aed", "filename": "gcc/config/s390/s390.opt", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/511ea1538b58d7d44a53d0264fc041de5991270a/gcc%2Fconfig%2Fs390%2Fs390.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/511ea1538b58d7d44a53d0264fc041de5991270a/gcc%2Fconfig%2Fs390%2Fs390.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fs390%2Fs390.opt?ref=511ea1538b58d7d44a53d0264fc041de5991270a", "patch": "@@ -109,6 +109,9 @@ Enum(processor_type) String(z14) Value(PROCESSOR_3906_Z14)\n EnumValue\n Enum(processor_type) String(arch12) Value(PROCESSOR_3906_Z14)\n \n+EnumValue\n+Enum(processor_type) String(arch13) Value(PROCESSOR_ARCH13)\n+\n EnumValue\n Enum(processor_type) String(native) Value(PROCESSOR_NATIVE) DriverOnly\n "}, {"sha": "35eb6fe09ce5021ebe7ea066d338202e01fbbfbc", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/511ea1538b58d7d44a53d0264fc041de5991270a/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/511ea1538b58d7d44a53d0264fc041de5991270a/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=511ea1538b58d7d44a53d0264fc041de5991270a", "patch": "@@ -1,3 +1,9 @@\n+2019-04-02  Andreas Krebbel  <krebbel@linux.ibm.com>\n+\n+\t* gcc.target/s390/s390.exp: Run tests in arch13 subdir.\n+\t* lib/target-supports.exp (check_effective_target_s390_vxe2): New\n+\truntime check for the vxe2 hardware feature on IBM Z.\n+\n 2019-04-01  H.J. Lu  <hongjiu.lu@intel.com>\n \n \tPR testsuite/89907"}, {"sha": "86f7e4398eb8d94251ebd7062c85dac4e7dfe3b1", "filename": "gcc/testsuite/gcc.target/s390/s390.exp", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/511ea1538b58d7d44a53d0264fc041de5991270a/gcc%2Ftestsuite%2Fgcc.target%2Fs390%2Fs390.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/511ea1538b58d7d44a53d0264fc041de5991270a/gcc%2Ftestsuite%2Fgcc.target%2Fs390%2Fs390.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fs390%2Fs390.exp?ref=511ea1538b58d7d44a53d0264fc041de5991270a", "patch": "@@ -215,6 +215,9 @@ dg-runtest [lsort [glob -nocomplain $srcdir/$subdir/target-attribute/*.{c,S}]] \\\n dg-runtest [lsort [glob -nocomplain $srcdir/$subdir/arch12/*.{c,S}]] \\\n \t\"\" \"-O3 -march=arch12 -mzarch\"\n \n+dg-runtest [lsort [glob -nocomplain $srcdir/$subdir/arch13/*.{c,S}]] \\\n+\t\"\" \"-O3 -march=arch13 -mzarch\"\n+\n dg-runtest [lsort [glob -nocomplain $srcdir/$subdir/vxe/*.{c,S}]] \\\n \t\"\" \"-O3 -march=arch12 -mzarch\"\n "}, {"sha": "0dc1e184f55028e02fe08e37dea7c3ab412c23d0", "filename": "gcc/testsuite/lib/target-supports.exp", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/511ea1538b58d7d44a53d0264fc041de5991270a/gcc%2Ftestsuite%2Flib%2Ftarget-supports.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/511ea1538b58d7d44a53d0264fc041de5991270a/gcc%2Ftestsuite%2Flib%2Ftarget-supports.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Flib%2Ftarget-supports.exp?ref=511ea1538b58d7d44a53d0264fc041de5991270a", "patch": "@@ -8961,6 +8961,22 @@ proc check_effective_target_s390_vxe { } {\n     } \"-march=z14 -mzarch\" ]\n }\n \n+# Same as above but for the arch13 vector enhancement facility. Test\n+# is performed with the vector shift left double by bit instruction.\n+proc check_effective_target_s390_vxe2 { } {\n+    if ![istarget s390*-*-*] then {\n+\treturn 0;\n+    }\n+\n+    return [check_runtime s390_check_vxe2 {\n+\tint main (void)\n+\t{\n+\t    asm (\"vsld %%v24, %%v26, %%v28, 3\" : : : \"v24\", \"v26\", \"v28\");\n+\t    return 0;\n+\t}\n+    } \"-march=arch13 -mzarch\" ]\n+}\n+\n #For versions of ARM architectures that have hardware div insn,\n #disable the divmod transform\n "}]}