{"sha": "6a3936d48b36c09a5f7654ae2bc3a62d688bd414", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmEzOTM2ZDQ4YjM2YzA5YTVmNzY1NGFlMmJjM2E2MmQ2ODhiZDQxNA==", "commit": {"author": {"name": "Nathan Sidwell", "email": "nathan@acm.org", "date": "2017-04-25T12:49:17Z"}, "committer": {"name": "Nathan Sidwell", "email": "nathan@gcc.gnu.org", "date": "2017-04-25T12:49:17Z"}, "message": "dg.exp (find-cxx-tests): New function.\n\n\t* g++.dg/dg.exp (find-cxx-tests): New function.\n\t(main): Use it, remove explicit pruning\n\nFrom-SVN: r247215", "tree": {"sha": "2e44a99af127e003df35649478c455d8f2298cec", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2e44a99af127e003df35649478c455d8f2298cec"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6a3936d48b36c09a5f7654ae2bc3a62d688bd414", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6a3936d48b36c09a5f7654ae2bc3a62d688bd414", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6a3936d48b36c09a5f7654ae2bc3a62d688bd414", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6a3936d48b36c09a5f7654ae2bc3a62d688bd414/comments", "author": {"login": "urnathan", "id": 13103001, "node_id": "MDQ6VXNlcjEzMTAzMDAx", "avatar_url": "https://avatars.githubusercontent.com/u/13103001?v=4", "gravatar_id": "", "url": "https://api.github.com/users/urnathan", "html_url": "https://github.com/urnathan", "followers_url": "https://api.github.com/users/urnathan/followers", "following_url": "https://api.github.com/users/urnathan/following{/other_user}", "gists_url": "https://api.github.com/users/urnathan/gists{/gist_id}", "starred_url": "https://api.github.com/users/urnathan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/urnathan/subscriptions", "organizations_url": "https://api.github.com/users/urnathan/orgs", "repos_url": "https://api.github.com/users/urnathan/repos", "events_url": "https://api.github.com/users/urnathan/events{/privacy}", "received_events_url": "https://api.github.com/users/urnathan/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "9dd958d2d16fe7b6869392682e693a65bf1e26be", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9dd958d2d16fe7b6869392682e693a65bf1e26be", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9dd958d2d16fe7b6869392682e693a65bf1e26be"}], "stats": {"total": 47, "additions": 18, "deletions": 29}, "files": [{"sha": "5495f787508c2995102153f82e4c55b3b1855c91", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6a3936d48b36c09a5f7654ae2bc3a62d688bd414/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6a3936d48b36c09a5f7654ae2bc3a62d688bd414/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=6a3936d48b36c09a5f7654ae2bc3a62d688bd414", "patch": "@@ -1,3 +1,8 @@\n+2017-04-25  Nathan Sidwell  <nathan@acm.org>\n+\n+\t* g++.dg/dg.exp (find-cxx-tests): New function.\n+\t(main): Use it, remove explicit pruning\n+\n 2017-04-25  Richard Biener  <rguenther@suse.de>\n \n \tPR tree-optimization/80492"}, {"sha": "940213d4eff0424a08c02db5d644903635b954a5", "filename": "gcc/testsuite/g++.dg/dg.exp", "status": "modified", "additions": 13, "deletions": 29, "changes": 42, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6a3936d48b36c09a5f7654ae2bc3a62d688bd414/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fdg.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6a3936d48b36c09a5f7654ae2bc3a62d688bd414/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fdg.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fdg.exp?ref=6a3936d48b36c09a5f7654ae2bc3a62d688bd414", "patch": "@@ -29,35 +29,19 @@ if ![info exists DEFAULT_CXXFLAGS] then {\n # Initialize `dg'.\n dg-init\n \n-# Gather a list of all tests, with the exception of those in directories\n-# that are handled specially.\n-set tests [lsort [find $srcdir/$subdir *.C]]\n-set tests [prune $tests $srcdir/$subdir/bprob/*]\n-set tests [prune $tests $srcdir/$subdir/charset/*]\n-set tests [prune $tests $srcdir/$subdir/cilk-plus/AN/*]\n-set tests [prune $tests $srcdir/$subdir/compat/*]\n-set tests [prune $tests $srcdir/$subdir/debug/*]\n-set tests [prune $tests $srcdir/$subdir/dfp/*]\n-set tests [prune $tests $srcdir/$subdir/gcov/*]\n-set tests [prune $tests $srcdir/$subdir/lto/*]\n-set tests [prune $tests $srcdir/$subdir/pch/*]\n-set tests [prune $tests $srcdir/$subdir/plugin/*]\n-set tests [prune $tests $srcdir/$subdir/special/*]\n-set tests [prune $tests $srcdir/$subdir/tls/*]\n-set tests [prune $tests $srcdir/$subdir/vect/*]\n-set tests [prune $tests $srcdir/$subdir/goacc/*]\n-set tests [prune $tests $srcdir/$subdir/goacc-gomp/*]\n-set tests [prune $tests $srcdir/$subdir/gomp/*]\n-set tests [prune $tests $srcdir/$subdir/tree-prof/*]\n-set tests [prune $tests $srcdir/$subdir/torture/*]\n-set tests [prune $tests $srcdir/$subdir/graphite/*]\n-set tests [prune $tests $srcdir/$subdir/tm/*]\n-set tests [prune $tests $srcdir/$subdir/cilk-plus/*]\n-set tests [prune $tests $srcdir/$subdir/guality/*]\n-set tests [prune $tests $srcdir/$subdir/simulate-thread/*]\n-set tests [prune $tests $srcdir/$subdir/asan/*]\n-set tests [prune $tests $srcdir/$subdir/ubsan/*]\n-set tests [prune $tests $srcdir/$subdir/tsan/*]\n+# Recursively find files in $dir and subdirs, do not walk into subdirs\n+# that contain their own .exp file.\n+proc find-cxx-tests { dir suffix } {\n+    set tests [lsort [glob -nocomplain -directory $dir \"*.$suffix\" ]]\n+    foreach subdir [lsort [glob -nocomplain -type d -directory $dir *]] {\n+\tif { [glob -nocomplain -directory $subdir *.exp] eq \"\" } {\n+\t    lappend tests {*}[find-cxx-tests $subdir $suffix]\n+\t}\n+    }\n+    return $tests\n+}\n+\n+set tests [find-cxx-tests $srcdir/$subdir {C}]\n \n # Main loop.\n g++-dg-runtest $tests \"\" $DEFAULT_CXXFLAGS"}]}