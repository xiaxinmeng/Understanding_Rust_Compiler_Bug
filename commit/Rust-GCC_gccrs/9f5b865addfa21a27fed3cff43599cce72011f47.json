{"sha": "9f5b865addfa21a27fed3cff43599cce72011f47", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OWY1Yjg2NWFkZGZhMjFhMjdmZWQzY2ZmNDM1OTljY2U3MjAxMWY0Nw==", "commit": {"author": {"name": "Vincent Celier", "email": "celier@adacore.com", "date": "2013-04-11T12:48:23Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2013-04-11T12:48:23Z"}, "message": "switch-c.adb: Document internal switches.\n\n2013-04-11  Vincent Celier  <celier@adacore.com>\n\n\t* switch-c.adb: Document internal switches.\n\t* usage.adb: Remove lines for internal switches: -gnatea, -gnateO,\n\t-gnatez and -gnateO.\n\nFrom-SVN: r197782", "tree": {"sha": "9bd9fbbdb3eb04ca312ac376cee0b8d0f841fee8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9bd9fbbdb3eb04ca312ac376cee0b8d0f841fee8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9f5b865addfa21a27fed3cff43599cce72011f47", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9f5b865addfa21a27fed3cff43599cce72011f47", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9f5b865addfa21a27fed3cff43599cce72011f47", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9f5b865addfa21a27fed3cff43599cce72011f47/comments", "author": {"login": "vcelier", "id": 8888056, "node_id": "MDQ6VXNlcjg4ODgwNTY=", "avatar_url": "https://avatars.githubusercontent.com/u/8888056?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vcelier", "html_url": "https://github.com/vcelier", "followers_url": "https://api.github.com/users/vcelier/followers", "following_url": "https://api.github.com/users/vcelier/following{/other_user}", "gists_url": "https://api.github.com/users/vcelier/gists{/gist_id}", "starred_url": "https://api.github.com/users/vcelier/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vcelier/subscriptions", "organizations_url": "https://api.github.com/users/vcelier/orgs", "repos_url": "https://api.github.com/users/vcelier/repos", "events_url": "https://api.github.com/users/vcelier/events{/privacy}", "received_events_url": "https://api.github.com/users/vcelier/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "afb4a8cda0247500a0084508af16b7ccaf943c8b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/afb4a8cda0247500a0084508af16b7ccaf943c8b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/afb4a8cda0247500a0084508af16b7ccaf943c8b"}], "stats": {"total": 134, "additions": 69, "deletions": 65}, "files": [{"sha": "d565142accf0ca9f62e812fd36cbf9fc50b36257", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9f5b865addfa21a27fed3cff43599cce72011f47/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9f5b865addfa21a27fed3cff43599cce72011f47/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=9f5b865addfa21a27fed3cff43599cce72011f47", "patch": "@@ -1,3 +1,9 @@\n+2013-04-11  Vincent Celier  <celier@adacore.com>\n+\n+\t* switch-c.adb: Document internal switches.\n+\t* usage.adb: Remove lines for internal switches: -gnatea, -gnateO,\n+\t-gnatez and -gnateO.\n+\n 2013-04-11  Ed Schonberg  <schonberg@adacore.com>\n \n \t* par-ch6.adb (P_Subprogram): Attach aspects to subprogram stub."}, {"sha": "f4e51ddf136a173cc292451d2df990da246eb023", "filename": "gcc/ada/switch-c.adb", "status": "modified", "additions": 59, "deletions": 49, "changes": 108, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9f5b865addfa21a27fed3cff43599cce72011f47/gcc%2Fada%2Fswitch-c.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9f5b865addfa21a27fed3cff43599cce72011f47/gcc%2Fada%2Fswitch-c.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fswitch-c.adb?ref=9f5b865addfa21a27fed3cff43599cce72011f47", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 2001-2012, Free Software Foundation, Inc.         --\n+--          Copyright (C) 2001-2013, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -274,30 +274,32 @@ package body Switch.C is\n \n             case C is\n \n+            --  -gnata (assertions enabled)\n+\n             when 'a' =>\n                Ptr := Ptr + 1;\n                Assertions_Enabled := True;\n                Debug_Pragmas_Enabled := True;\n \n-            --  Processing for A switch\n+            --  -gnatA (disregard gnat.adc)\n \n             when 'A' =>\n                Ptr := Ptr + 1;\n                Config_File := False;\n \n-            --  Processing for b switch\n+            --  -gnatb (brief messages to stderr)\n \n             when 'b' =>\n                Ptr := Ptr + 1;\n                Brief_Output := True;\n \n-            --  Processing for B switch\n+            --  -gnatB (assume no invalid values)\n \n             when 'B' =>\n                Ptr := Ptr + 1;\n                Assume_No_Invalid_Values := True;\n \n-            --  Processing for c switch\n+            --  -gnatc (check syntax and semantics only)\n \n             when 'c' =>\n                if not First_Switch then\n@@ -308,7 +310,7 @@ package body Switch.C is\n                Ptr := Ptr + 1;\n                Operating_Mode := Check_Semantics;\n \n-            --  Processing for C switch\n+            --  -gnatC (Generate CodePeer information)\n \n             when 'C' =>\n                Ptr := Ptr + 1;\n@@ -326,7 +328,7 @@ package body Switch.C is\n                   Warning_Mode := Suppress;\n                end if;\n \n-            --  Processing for d switch\n+            --  -gnatd (compiler debug options)\n \n             when 'd' =>\n                Store_Switch := False;\n@@ -367,7 +369,7 @@ package body Switch.C is\n \n                return;\n \n-            --  Processing for D switch\n+            --  -gnatD (debug expanded code)\n \n             when 'D' =>\n                Ptr := Ptr + 1;\n@@ -403,6 +405,8 @@ package body Switch.C is\n \n                   --  -gnatea (initial delimiter of explicit switches)\n \n+                  --  This is an internal switch\n+\n                   --  All switches that come before -gnatea have been added by\n                   --  the GCC driver and are not stored in the ALI file.\n                   --  See also -gnatez below.\n@@ -562,6 +566,8 @@ package body Switch.C is\n \n                   --  -gnateO= (object path file)\n \n+                  --  This is an internal switch\n+\n                   when 'O' =>\n                      Store_Switch := False;\n                      Ptr := Ptr + 1;\n@@ -641,6 +647,8 @@ package body Switch.C is\n \n                   --  -gnatez (final delimiter of explicit switches)\n \n+                  --  This is an internal switch\n+\n                   --  All switches that come after -gnatez have been added by\n                   --  the GCC driver and are not stored in the ALI file. See\n                   --  also -gnatea above.\n@@ -668,14 +676,14 @@ package body Switch.C is\n                Ptr := Ptr + 1;\n                All_Errors_Mode := True;\n \n-            --  Processing for F switch\n+            --  -gnatF (overflow of predefined float types)\n \n             when 'F' =>\n                Ptr := Ptr + 1;\n                External_Name_Exp_Casing := Uppercase;\n                External_Name_Imp_Casing := Uppercase;\n \n-            --  Processing for g switch\n+            --  -gnatg (GNAT implementation mode)\n \n             when 'g' =>\n                Ptr := Ptr + 1;\n@@ -696,7 +704,7 @@ package body Switch.C is\n                Set_GNAT_Mode_Warnings;\n                Set_GNAT_Style_Check_Options;\n \n-            --  Processing for G switch\n+            --  -gnatG (output generated code)\n \n             when 'G' =>\n                Ptr := Ptr + 1;\n@@ -709,13 +717,13 @@ package body Switch.C is\n                   Sprint_Line_Limit := Nat'Max (Sprint_Line_Limit, 40);\n                end if;\n \n-            --  Processing for h switch\n+            --  -gnath (help information)\n \n             when 'h' =>\n                Ptr := Ptr + 1;\n                Usage_Requested := True;\n \n-            --  Processing for i switch\n+            --  -gnati (character set)\n \n             when 'i' =>\n                if Ptr = Max then\n@@ -740,26 +748,26 @@ package body Switch.C is\n                   Bad_Switch (\"-gnati\" & Switch_Chars (Ptr .. Max));\n                end if;\n \n-            --  Processing for I switch\n+            --  -gnatI (ignore representation clauses)\n \n             when 'I' =>\n                Ptr := Ptr + 1;\n                Ignore_Rep_Clauses := True;\n \n-            --  Processing for j switch\n+            --  -gnatj (messages in limited length lines)\n \n             when 'j' =>\n                Ptr := Ptr + 1;\n                Scan_Nat (Switch_Chars, Max, Ptr, Error_Msg_Line_Length, C);\n \n-            --  Processing for k switch\n+            --  -gnatk (limit file name length)\n \n             when 'k' =>\n                Ptr := Ptr + 1;\n                   Scan_Pos\n                     (Switch_Chars, Max, Ptr, Maximum_File_Name_Length, C);\n \n-            --  Processing for l switch\n+            --  -gnatl (output full source)\n \n             when 'l' =>\n                Ptr := Ptr + 1;\n@@ -777,19 +785,19 @@ package body Switch.C is\n                   end if;\n                end if;\n \n-            --  Processing for L switch\n+            --  -gnatL (corresponding source text)\n \n             when 'L' =>\n                Ptr := Ptr + 1;\n                Dump_Source_Text := True;\n \n-            --  Processing for m switch\n+            --  -gnatm (max number or errors/warnings)\n \n             when 'm' =>\n                Ptr := Ptr + 1;\n                Scan_Nat (Switch_Chars, Max, Ptr, Maximum_Messages, C);\n \n-            --  Processing for n switch\n+            --  -gnatn (enable pragma Inline)\n \n             when 'n' =>\n                Ptr := Ptr + 1;\n@@ -806,14 +814,14 @@ package body Switch.C is\n                   end if;\n                end if;\n \n-            --  Processing for N switch\n+            --  -gnatN (obsolescent)\n \n             when 'N' =>\n                Ptr := Ptr + 1;\n                Inline_Active := True;\n                Front_End_Inlining := True;\n \n-            --  Processing for o switch\n+            --  -gnato (overflow checks)\n \n             when 'o' =>\n                Ptr := Ptr + 1;\n@@ -852,14 +860,16 @@ package body Switch.C is\n                   end if;\n                end if;\n \n-            --  Processing for O switch\n+            --  -gnatO (specify name of the object file)\n+\n+            --  This is an internal switch\n \n             when 'O' =>\n                Store_Switch := False;\n                Ptr := Ptr + 1;\n                Output_File_Name_Present := True;\n \n-            --  Processing for p switch\n+            --  -gnatp (suppress all checks)\n \n             when 'p' =>\n                Ptr := Ptr + 1;\n@@ -890,32 +900,32 @@ package body Switch.C is\n                   Opt.Suppress_Checks := True;\n                end if;\n \n-            --  Processing for P switch\n+            --  -gnatP (periodic poll)\n \n             when 'P' =>\n                Ptr := Ptr + 1;\n                Polling_Required := True;\n \n-            --  Processing for q switch\n+            --  -gnatq (don't quit)\n \n             when 'q' =>\n                Ptr := Ptr + 1;\n                Try_Semantics := True;\n \n-            --  Processing for Q switch\n+            --  -gnatQ (always write ALI file)\n \n             when 'Q' =>\n                Ptr := Ptr + 1;\n                Force_ALI_Tree_File := True;\n                Try_Semantics := True;\n \n-               --  Processing for r switch\n+            --  -gnatr (restrictions as warnings)\n \n             when 'r' =>\n                Ptr := Ptr + 1;\n                Treat_Restrictions_As_Warnings := True;\n \n-            --  Processing for R switch\n+            --  -gnatR (list rep. info)\n \n             when 'R' =>\n                Back_Annotate_Rep_Info := True;\n@@ -942,7 +952,7 @@ package body Switch.C is\n                   Ptr := Ptr + 1;\n                end loop;\n \n-            --  Processing for s switch\n+            --  -gnats (syntax check only)\n \n             when 's' =>\n                if not First_Switch then\n@@ -953,44 +963,44 @@ package body Switch.C is\n                Ptr := Ptr + 1;\n                Operating_Mode := Check_Syntax;\n \n-            --  Processing for S switch\n+            --  -gnatS (print package Standard)\n \n             when 'S' =>\n                Print_Standard := True;\n                Ptr := Ptr + 1;\n \n-            --  Processing for t switch\n+            --  -gnatt (output tree)\n \n             when 't' =>\n                Ptr := Ptr + 1;\n                Tree_Output := True;\n                Back_Annotate_Rep_Info := True;\n \n-            --  Processing for T switch\n+            --  -gnatT (change start of internal table sizes)\n \n             when 'T' =>\n                Ptr := Ptr + 1;\n                Scan_Pos (Switch_Chars, Max, Ptr, Table_Factor, C);\n \n-            --  Processing for u switch\n+            --  -gnatu (list units for compilation)\n \n             when 'u' =>\n                Ptr := Ptr + 1;\n                List_Units := True;\n \n-            --  Processing for U switch\n+            --  -gnatU (unique tags)\n \n             when 'U' =>\n                Ptr := Ptr + 1;\n                Unique_Error_Tag := True;\n \n-            --  Processing for v switch\n+            --  -gnatv (verbose mode)\n \n             when 'v' =>\n                Ptr := Ptr + 1;\n                Verbose_Mode := True;\n \n-            --  Processing for V switch\n+            --  -gnatV (validity checks)\n \n             when 'V' =>\n                Store_Switch := False;\n@@ -1020,7 +1030,7 @@ package body Switch.C is\n \n                Ptr := Max + 1;\n \n-            --  Processing for w switch\n+            --  -gnatw (warning modes)\n \n             when 'w' =>\n                Store_Switch := False;\n@@ -1060,7 +1070,7 @@ package body Switch.C is\n \n                return;\n \n-            --  Processing for W switch\n+            --  -gnatW (wide character encoding method)\n \n             when 'W' =>\n                Ptr := Ptr + 1;\n@@ -1085,21 +1095,21 @@ package body Switch.C is\n \n                Ptr := Ptr + 1;\n \n-            --  Processing for x switch\n+            --  -gnatx (suppress cross-ref information)\n \n             when 'x' =>\n                Ptr := Ptr + 1;\n                Xref_Active := False;\n \n-            --  Processing for X switch\n+            --  -gnatX (language extensions)\n \n             when 'X' =>\n                Ptr := Ptr + 1;\n                Extensions_Allowed   := True;\n                Ada_Version          := Ada_Version_Type'Last;\n                Ada_Version_Explicit := Ada_Version_Type'Last;\n \n-            --  Processing for y switch\n+            --  -gnaty (style checks)\n \n             when 'y' =>\n                Ptr := Ptr + 1;\n@@ -1145,7 +1155,7 @@ package body Switch.C is\n                   end;\n                end if;\n \n-            --  Processing for z switch\n+            --  -gnatz (stub generation)\n \n             when 'z' =>\n \n@@ -1185,7 +1195,7 @@ package body Switch.C is\n                   Osint.Fail (\"only one -gnatz* switch allowed\");\n                end if;\n \n-            --  Processing for Z switch\n+            --  -gnatZ (obsolescent)\n \n             when 'Z' =>\n                Ptr := Ptr + 1;\n@@ -1196,7 +1206,7 @@ package body Switch.C is\n             --  version switch is added, Switch.M.Normalize_Compiler_Switches\n             --  must be updated.\n \n-            --  Processing for 83 switch\n+            --  -gnat83\n \n             when '8' =>\n                if Ptr = Max then\n@@ -1213,7 +1223,7 @@ package body Switch.C is\n                   Ada_Version_Explicit := Ada_Version;\n                end if;\n \n-            --  Processing for 95 switch\n+            --  -gnat95\n \n             when '9' =>\n                if Ptr = Max then\n@@ -1230,7 +1240,7 @@ package body Switch.C is\n                   Ada_Version_Explicit := Ada_Version;\n                end if;\n \n-            --  Processing for 05 switch\n+            --  -gnat05\n \n             when '0' =>\n                if Ptr = Max then\n@@ -1247,7 +1257,7 @@ package body Switch.C is\n                   Ada_Version_Explicit := Ada_Version;\n                end if;\n \n-            --  Processing for 12 switch\n+            --  -gnat12\n \n             when '1' =>\n                if Ptr = Max then\n@@ -1264,7 +1274,7 @@ package body Switch.C is\n                   Ada_Version_Explicit := Ada_Version;\n                end if;\n \n-            --  Processing for 2005 and 2012 switches\n+            --  -gnat2005 and -gnat2012\n \n             when '2' =>\n                if Ptr > Max - 3 then"}, {"sha": "a0cf348221d258ef9093b5c549b8c14a4bf8b73f", "filename": "gcc/ada/usage.adb", "status": "modified", "additions": 4, "deletions": 16, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9f5b865addfa21a27fed3cff43599cce72011f47/gcc%2Fada%2Fusage.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9f5b865addfa21a27fed3cff43599cce72011f47/gcc%2Fada%2Fusage.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fusage.adb?ref=9f5b865addfa21a27fed3cff43599cce72011f47", "patch": "@@ -167,10 +167,7 @@ begin\n    Write_Switch_Char (\"Dnn\");\n    Write_Line (\"Debug expanded generated code (max line length = nn)\");\n \n-   --  Line for -gnatea switch\n-\n-   Write_Switch_Char (\"ea\");\n-   Write_Line (\"Delimiter for automatically added switches (internal switch)\");\n+   --  No line for -gnatea : internal switch\n \n    --  Line for -gnateA switch\n \n@@ -227,10 +224,7 @@ begin\n    Write_Switch_Char (\"em=?\");\n    Write_Line (\"Specify mapping file, e.g. -gnatem=mapping\");\n \n-   --  Line for -gnateO=?\n-\n-   Write_Switch_Char (\"eO=?\");\n-   Write_Line (\"Specify an object path file (internal switch)\");\n+   --  No line for -gnateO=? : internal switch\n \n    --  Line for -gnatep switch\n \n@@ -262,10 +256,7 @@ begin\n    Write_Switch_Char (\"eY\");\n    Write_Line (\"Ignore all Style_Checks pragmas in source\");\n \n-   --  Line for -gnatez switch\n-\n-   Write_Switch_Char (\"ez\");\n-   Write_Line (\"Delimiter for automatically added switches (internal switch)\");\n+   --  No line for -gnatez : internal switch\n \n    --  Line for -gnatE switch\n \n@@ -355,10 +346,7 @@ begin\n    Write_Line\n      (\"Set mode for general/assertion expressions separately\");\n \n-   --  Line for -gnatO switch\n-\n-   Write_Switch_Char (\"O nm \");\n-   Write_Line (\"Set name of output ali file (internal switch)\");\n+   --  No line for -gnatO : internal switch\n \n    --  Line for -gnatp switch\n "}]}