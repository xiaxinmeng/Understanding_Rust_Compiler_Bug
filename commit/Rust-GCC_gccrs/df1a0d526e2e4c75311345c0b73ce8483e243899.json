{"sha": "df1a0d526e2e4c75311345c0b73ce8483e243899", "node_id": "C_kwDOANBUbNoAKGRmMWEwZDUyNmUyZTRjNzUzMTEzNDVjMGI3M2NlODQ4M2UyNDM4OTk", "commit": {"author": {"name": "Navid Rahimi", "email": "navidrahimi@microsoft.com", "date": "2021-11-23T03:07:35Z"}, "committer": {"name": "Jeff Law", "email": "jeffreyalaw@gmail.com", "date": "2021-11-23T03:07:35Z"}, "message": "Re: [PATCH] PR tree-optimization/102232 Adding a missing pattern to match.pd\n\n\tPR tree-optimization/102232\n\ngcc/\n\t* match.pd (x * (1 + y / x) - y) -> (x - y % x): New optimization.\n\ngcc/testsuite/\n\n\t* gcc.dg/tree-ssa/pr102232.c: Testcase for this optimization.", "tree": {"sha": "b607a1c5cb532d816d2b194afcee57e0ebb2635d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b607a1c5cb532d816d2b194afcee57e0ebb2635d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/df1a0d526e2e4c75311345c0b73ce8483e243899", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/df1a0d526e2e4c75311345c0b73ce8483e243899", "html_url": "https://github.com/Rust-GCC/gccrs/commit/df1a0d526e2e4c75311345c0b73ce8483e243899", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/df1a0d526e2e4c75311345c0b73ce8483e243899/comments", "author": {"login": "navidR", "id": 3811601, "node_id": "MDQ6VXNlcjM4MTE2MDE=", "avatar_url": "https://avatars.githubusercontent.com/u/3811601?v=4", "gravatar_id": "", "url": "https://api.github.com/users/navidR", "html_url": "https://github.com/navidR", "followers_url": "https://api.github.com/users/navidR/followers", "following_url": "https://api.github.com/users/navidR/following{/other_user}", "gists_url": "https://api.github.com/users/navidR/gists{/gist_id}", "starred_url": "https://api.github.com/users/navidR/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/navidR/subscriptions", "organizations_url": "https://api.github.com/users/navidR/orgs", "repos_url": "https://api.github.com/users/navidR/repos", "events_url": "https://api.github.com/users/navidR/events{/privacy}", "received_events_url": "https://api.github.com/users/navidR/received_events", "type": "User", "site_admin": false}, "committer": {"login": "JeffreyALaw", "id": 14062506, "node_id": "MDQ6VXNlcjE0MDYyNTA2", "avatar_url": "https://avatars.githubusercontent.com/u/14062506?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JeffreyALaw", "html_url": "https://github.com/JeffreyALaw", "followers_url": "https://api.github.com/users/JeffreyALaw/followers", "following_url": "https://api.github.com/users/JeffreyALaw/following{/other_user}", "gists_url": "https://api.github.com/users/JeffreyALaw/gists{/gist_id}", "starred_url": "https://api.github.com/users/JeffreyALaw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JeffreyALaw/subscriptions", "organizations_url": "https://api.github.com/users/JeffreyALaw/orgs", "repos_url": "https://api.github.com/users/JeffreyALaw/repos", "events_url": "https://api.github.com/users/JeffreyALaw/events{/privacy}", "received_events_url": "https://api.github.com/users/JeffreyALaw/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "630686f93f0018fa1ef128aa673fddd302cc83e1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/630686f93f0018fa1ef128aa673fddd302cc83e1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/630686f93f0018fa1ef128aa673fddd302cc83e1"}], "stats": {"total": 58, "additions": 58, "deletions": 0}, "files": [{"sha": "886f807ac0482597f49f649775fa1aed7163de0f", "filename": "gcc/match.pd", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/df1a0d526e2e4c75311345c0b73ce8483e243899/gcc%2Fmatch.pd", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/df1a0d526e2e4c75311345c0b73ce8483e243899/gcc%2Fmatch.pd", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fmatch.pd?ref=df1a0d526e2e4c75311345c0b73ce8483e243899", "patch": "@@ -651,6 +651,12 @@ DEFINE_INT_AND_FLOAT_ROUND_FN (RINT)\n  (if (INTEGRAL_TYPE_P (type) || VECTOR_INTEGER_TYPE_P (type))\n   (convert (trunc_mod @0 @1))))\n \n+/* x * (1 + y / x) - y -> x - y % x */\n+(simplify\n+ (minus (mult:cs @0 (plus:s (trunc_div:s @1 @0) integer_onep)) @1)\n+ (if (INTEGRAL_TYPE_P (type))\n+  (minus @0 (trunc_mod @1 @0))))\n+\n /* Optimize TRUNC_MOD_EXPR by a power of two into a BIT_AND_EXPR,\n    i.e. \"X % C\" into \"X & (C - 1)\", if X and C are positive.\n    Also optimize A % (C << N)  where C is a power of 2,"}, {"sha": "62bca6922aba94eaeb0260dc255fe2daa2dd7480", "filename": "gcc/testsuite/gcc.dg/tree-ssa/pr102232.c", "status": "added", "additions": 52, "deletions": 0, "changes": 52, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/df1a0d526e2e4c75311345c0b73ce8483e243899/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr102232.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/df1a0d526e2e4c75311345c0b73ce8483e243899/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr102232.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr102232.c?ref=df1a0d526e2e4c75311345c0b73ce8483e243899", "patch": "@@ -0,0 +1,52 @@\n+/* PR tree-optimization/102232 */\n+/* { dg-do run } */\n+/* { dg-options \"-O -fdump-tree-optimized\" } */\n+\n+int __attribute__ ((noipa)) foo (int a, int b)\n+{\n+  return b * (1 + a / b) - a;\n+}\n+\n+int\n+main (void)\n+{\n+  // few randomly generated test cases\n+  if (foo (71856034, 238) != 212)\n+    {\n+      __builtin_abort ();\n+    }\n+  if (foo (71856034, 10909) != 1549)\n+    {\n+      __builtin_abort ();\n+    }\n+  if (foo (20350, 1744) != 578)\n+    {\n+      __builtin_abort ();\n+    }\n+  if (foo (444813, 88563) != 86565)\n+    {\n+      __builtin_abort ();\n+    }\n+  if (foo (112237, 63004) != 13771)\n+    {\n+      __builtin_abort ();\n+    }\n+  if (foo (68268386, 787116) != 210706)\n+    {\n+      __builtin_abort ();\n+    }\n+  if (foo (-444813, 88563) != 90561)\n+    {\n+      __builtin_abort ();\n+    }\n+  if (foo (-68268386, 787116) != 1363526)\n+    {\n+      __builtin_abort ();\n+    }\n+\n+  return 0;\n+}\n+\n+/* Verify that multiplication and division has been removed.  */\n+/* { dg-final { scan-tree-dump-not \" \\\\* \" \"optimized\" } } */\n+/* { dg-final { scan-tree-dump-not \" / \" \"optimized\" } } */\n\\ No newline at end of file"}]}