{"sha": "85d8ebcfc235e71bf52e7bf1d3864e1b95689091", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODVkOGViY2ZjMjM1ZTcxYmY1MmU3YmYxZDM4NjRlMWI5NTY4OTA5MQ==", "commit": {"author": {"name": "GCC Administrator", "email": "gccadmin@gcc.gnu.org", "date": "2020-12-24T00:16:26Z"}, "committer": {"name": "GCC Administrator", "email": "gccadmin@gcc.gnu.org", "date": "2020-12-24T00:16:26Z"}, "message": "Daily bump.", "tree": {"sha": "e04307f3449fb218f3f434b26950840559f0f113", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e04307f3449fb218f3f434b26950840559f0f113"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/85d8ebcfc235e71bf52e7bf1d3864e1b95689091", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/85d8ebcfc235e71bf52e7bf1d3864e1b95689091", "html_url": "https://github.com/Rust-GCC/gccrs/commit/85d8ebcfc235e71bf52e7bf1d3864e1b95689091", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/85d8ebcfc235e71bf52e7bf1d3864e1b95689091/comments", "author": null, "committer": null, "parents": [{"sha": "0df311657dc8c2a7f6ce3464c9d9ae5d5033840c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0df311657dc8c2a7f6ce3464c9d9ae5d5033840c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0df311657dc8c2a7f6ce3464c9d9ae5d5033840c"}], "stats": {"total": 178, "additions": 177, "deletions": 1}, "files": [{"sha": "50a7c32e84d20be1a780d21d9a5296e4afb68568", "filename": "c++tools/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/85d8ebcfc235e71bf52e7bf1d3864e1b95689091/c%2B%2Btools%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/85d8ebcfc235e71bf52e7bf1d3864e1b95689091/c%2B%2Btools%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/c%2B%2Btools%2FChangeLog?ref=85d8ebcfc235e71bf52e7bf1d3864e1b95689091", "patch": "@@ -1,3 +1,10 @@\n+2020-12-23  Nathan Sidwell  <nathan@acm.org>\n+\n+\tPR bootstrap/98324\n+\t* Makefile.in: Add FLAGPIE.\n+\t* configure.ac: Add --enable-default-pie support.\n+\t* configure: Rebuilt.\n+\n 2020-12-21  Nathan Sidwell  <nathan@acm.org>\n \n \tPR other/98409"}, {"sha": "66369658c204084c42dd99f630abff1852fece17", "filename": "gcc/ChangeLog", "status": "modified", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/85d8ebcfc235e71bf52e7bf1d3864e1b95689091/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/85d8ebcfc235e71bf52e7bf1d3864e1b95689091/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=85d8ebcfc235e71bf52e7bf1d3864e1b95689091", "patch": "@@ -1,3 +1,27 @@\n+2020-12-23  Martin Sebor  <msebor@redhat.com>\n+\n+\tPR middle-end/98160\n+\t* builtins.c (warn_dealloc_offset): Avoid assuming calls are made\n+\tthrough declared functions and not pointers.\n+\n+2020-12-23  Martin Sebor  <msebor@redhat.com>\n+\n+\tPR c++/98413\n+\t* builtins.c (get_offset_range): Avoid non-integers/-pointers.\n+\n+2020-12-23  Iain Sandoe  <iain@sandoe.co.uk>\n+\n+\t* config/darwin-driver.c (validate_macosx_version_min): Allow\n+\tMACOSX_DEPLOYMENT_TARGET=11.\n+\t(darwin_default_min_version): Adjust warning spelling to avoid\n+\tan apostrophe.\n+\n+2020-12-23  Uro\u0161 Bizjak  <ubizjak@gmail.com>\n+\n+\tPR target/96793\n+\t* config/i386/i386-expand.c (ix86_expand_truncdf_32):\n+\tRemove the sign of the intermediate value for flag_rounding_math.\n+\n 2020-12-22  Qian Jianhua  <qianjh@cn.fujitsu.com>\n \n \t* config/arm/types.md (define_attr \"autodetect_type\"): New."}, {"sha": "0ecfbe28be39abe381d345d0e3d709e003bb7573", "filename": "gcc/DATESTAMP", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/85d8ebcfc235e71bf52e7bf1d3864e1b95689091/gcc%2FDATESTAMP", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/85d8ebcfc235e71bf52e7bf1d3864e1b95689091/gcc%2FDATESTAMP", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FDATESTAMP?ref=85d8ebcfc235e71bf52e7bf1d3864e1b95689091", "patch": "@@ -1 +1 @@\n-20201223\n+20201224"}, {"sha": "95fcc2cc41409e76c45cf3d1668d66b2554e427e", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/85d8ebcfc235e71bf52e7bf1d3864e1b95689091/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/85d8ebcfc235e71bf52e7bf1d3864e1b95689091/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=85d8ebcfc235e71bf52e7bf1d3864e1b95689091", "patch": "@@ -1,3 +1,28 @@\n+2020-12-23  Nathan Sidwell  <nathan@acm.org>\n+\n+\tPR c++/96045\n+\t* parser.c (cp_lexer_new_main): Adjust EOF token location.\n+\n+2020-12-23  Jason Merrill  <jason@redhat.com>\n+\n+\tPR c++/97597\n+\t* class.c (is_empty_base_ref): New.\n+\t(build_base_path): Add NOP_EXPR after offset.\n+\t* cp-tree.h (is_empty_base_ref): Declare it.\n+\t* call.c (unsafe_return_slot_p): Call it.\n+\n+2020-12-23  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR c++/98353\n+\t* init.c (build_zero_init_1): Use build_zero_cst for SCALAR_TYPE_P\n+\tzero initializers.\n+\n+2020-12-23  Jason Merrill  <jason@redhat.com>\n+\n+\tPR c++/98332\n+\t* constexpr.c (unshare_constructor): Check for NULL.\n+\t(cxx_eval_vec_init_1): Always exit early if non-constant.\n+\n 2020-12-22  Nathan Sidwell  <nathan@acm.org>\n \n \t* module.cc (has_definition): Check DECL_LANG_SPECIFIC."}, {"sha": "10f75d70b37e31fe471996cc5b55b50bad3a6cc7", "filename": "gcc/d/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/85d8ebcfc235e71bf52e7bf1d3864e1b95689091/gcc%2Fd%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/85d8ebcfc235e71bf52e7bf1d3864e1b95689091/gcc%2Fd%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2FChangeLog?ref=85d8ebcfc235e71bf52e7bf1d3864e1b95689091", "patch": "@@ -1,3 +1,10 @@\n+2020-12-23  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\tPR d/98427\n+\t* types.cc (TypeVisitor::visit (TypeStruct *)): Set TYPE_MODE of all\n+\tnon-trivial types as BLKmode.\n+\t(TypeVisitor::visit (TypeClass *)): Likewise.\n+\n 2020-12-15  Iain Buclaw  <ibuclaw@gdcproject.org>\n \n \tPR d/98277"}, {"sha": "eb2f013cc85641060d4c8a5dd83000e2ea5a8efe", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 97, "deletions": 0, "changes": 97, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/85d8ebcfc235e71bf52e7bf1d3864e1b95689091/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/85d8ebcfc235e71bf52e7bf1d3864e1b95689091/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=85d8ebcfc235e71bf52e7bf1d3864e1b95689091", "patch": "@@ -1,3 +1,100 @@\n+2020-12-23  Martin Sebor  <msebor@redhat.com>\n+\n+\tPR middle-end/98160\n+\t* g++.dg/warn/pr98160.C: New test.\n+\n+2020-12-23  Martin Sebor  <msebor@redhat.com>\n+\n+\tPR c++/98413\n+\t* g++.dg/warn/pr98413.C: New test.\n+\n+2020-12-23  Joel Brobecker  <brobecker@adacore.com>\n+\n+\t* gcc.target/arm/data-rel-1.c: Require \"fpic\" support.\n+\t* gcc.target/arm/data-rel-2.c: Likewise.\n+\t* gcc.target/arm/data-rel-3.c: Ditto.\n+\t* gcc.target/arm/pr44788.c: Ditto.\n+\t* gcc.target/arm/pr52006.c: Ditto.\n+\t* gcc.target/arm/pr59858.c: Ditto.\n+\t* gcc.target/arm/tlscall.c: Ditto.\n+\t* gcc.target/arm/require-pic-register-loc.c: Ditto.\n+\tAdjust line numbers.\n+\n+2020-12-23  Nathan Sidwell  <nathan@acm.org>\n+\n+\tPR c++/96045\n+\t* g++.dg/diagnostic/pr96045-1.C: New.\n+\t* g++.dg/diagnostic/pr96045-2.C: New.\n+\t* g++.dg/diagnostic/pr96045-3.C: New.\n+\t* c-c++-common/goacc/pr79428-1.c: Adjust EOF diagnostic location.\n+\t* c-c++-common/gomp/pr79428-2.c: Likewise\n+\t* c-c++-common/raw-string-6.c: Likewise\n+\t* g++.dg/cpp0x/decltype63.C: Likewise\n+\t* g++.dg/cpp0x/gen-attrs-64.C: Likewise\n+\t* g++.dg/cpp0x/pr68726.C: Likewise\n+\t* g++.dg/cpp0x/pr78341.C: Likewise\n+\t* g++.dg/cpp1y/pr65202.C: Likewise\n+\t* g++.dg/cpp1y/pr65340.C: Likewise\n+\t* g++.dg/cpp1y/pr68578.C: Likewise\n+\t* g++.dg/cpp1z/class-deduction44.C: Likewise\n+\t* g++.dg/diagnostic/unclosed-extern-c.C: Likewise\n+\t* g++.dg/diagnostic/unclosed-function.C: Likewise\n+\t* g++.dg/diagnostic/unclosed-namespace.C: Likewise\n+\t* g++.dg/diagnostic/unclosed-struct.C: Likewise\n+\t* g++.dg/ext/pr84598.C: Likewise\n+\t* g++.dg/other/switch4.C: Likewise\n+\t* g++.dg/parse/attr4.C: Likewise\n+\t* g++.dg/parse/cond4.C: Likewise\n+\t* g++.dg/parse/crash10.C: Likewise\n+\t* g++.dg/parse/crash18.C: Likewise\n+\t* g++.dg/parse/crash27.C: Likewise\n+\t* g++.dg/parse/crash34.C: Likewise\n+\t* g++.dg/parse/crash35.C: Likewise\n+\t* g++.dg/parse/crash52.C: Likewise\n+\t* g++.dg/parse/crash59.C: Likewise\n+\t* g++.dg/parse/crash61.C: Likewise\n+\t* g++.dg/parse/crash67.C: Likewise\n+\t* g++.dg/parse/error14.C: Likewise\n+\t* g++.dg/parse/error56.C: Likewise\n+\t* g++.dg/parse/invalid1.C: Likewise\n+\t* g++.dg/parse/parameter-declaration-1.C: Likewise\n+\t* g++.dg/parse/parser-pr28152-2.C: Likewise\n+\t* g++.dg/parse/parser-pr28152.C: Likewise\n+\t* g++.dg/parse/pr68722.C: Likewise\n+\t* g++.dg/parse/pr96258.C: Likewise\n+\t* g++.dg/pr46852.C: Likewise\n+\t* g++.dg/pr46868.C: Likewise\n+\t* g++.dg/template/crash115.C: Likewise\n+\t* g++.dg/template/crash43.C: Likewise\n+\t* g++.dg/template/crash90.C: Likewise\n+\t* g++.dg/template/error-recovery1.C: Likewise\n+\t* g++.dg/template/error57.C: Likewise\n+\t* g++.old-deja/g++.other/crash31.C: Likewise\n+\n+2020-12-23  Jason Merrill  <jason@redhat.com>\n+\n+\tPR c++/97597\n+\t* g++.dg/init/empty3.C: New test.\n+\n+2020-12-23  Jason Merrill  <jason@redhat.com>\n+\n+\t* g++.dg/cpp0x/constexpr-overflow3.C: Use INT_MAX.\n+\n+2020-12-23  Jason Merrill  <jason@redhat.com>\n+\n+\tPR c++/98332\n+\t* g++.dg/cpp0x/constexpr-overflow3.C: New test.\n+\n+2020-12-23  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\tPR d/98427\n+\t* gdc.dg/pr98427.d: New test.\n+\n+2020-12-23  Uro\u0161 Bizjak  <ubizjak@gmail.com>\n+\n+\tPR target/96793\n+\t* gcc.target/i386/pr96793-1.c: New test.\n+\n 2020-12-22  Nathan Sidwell  <nathan@acm.org>\n \n \t* g++.dg/modules/access-1_a.C: New.: New."}, {"sha": "b99357e753a662e778de56cfab8163adf6074303", "filename": "libcody/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/85d8ebcfc235e71bf52e7bf1d3864e1b95689091/libcody%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/85d8ebcfc235e71bf52e7bf1d3864e1b95689091/libcody%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libcody%2FChangeLog?ref=85d8ebcfc235e71bf52e7bf1d3864e1b95689091", "patch": "@@ -1,3 +1,15 @@\n+2020-12-23  Nathan Sidwell  <nathan@acm.org>\n+\n+\t* Makefile.in (LDFLAGS): Drop -L..\n+\t* tests/01-serialize/connect.cc: Delete.\n+\t* tests/01-serialize/decoder.cc: Delete.\n+\t* tests/01-serialize/encoder.cc: Delete.\n+\t* tests/02-comms/client-1.cc: Delete.\n+\t* tests/02-comms/pivot-1.cc: Delete.\n+\t* tests/02-comms/server-1.cc: Delete.\n+\t* tests/Makesub.in: Delete.\n+\t* tests/jouster: Delete.\n+\n 2020-12-21  Nathan Sidwell  <nathan@acm.org>\n \n \tPR bootstrap/98412"}, {"sha": "cf2bb088a08672da68267fdb112d2b67afc5074c", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/85d8ebcfc235e71bf52e7bf1d3864e1b95689091/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/85d8ebcfc235e71bf52e7bf1d3864e1b95689091/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=85d8ebcfc235e71bf52e7bf1d3864e1b95689091", "patch": "@@ -1,3 +1,7 @@\n+2020-12-23  Olivier Hainque  <hainque@adacore.com>\n+\n+\t* testsuite/17_intro/names.cc: Account for VxWorks headers.\n+\n 2020-12-21  Patrick Palka  <ppalka@redhat.com>\n \n \t* include/bits/c++config (_GLIBCXX_FLOAT_IS_IEEE_BINARY_32):"}]}