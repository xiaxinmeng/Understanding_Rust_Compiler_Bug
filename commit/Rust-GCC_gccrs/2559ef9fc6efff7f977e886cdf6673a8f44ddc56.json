{"sha": "2559ef9fc6efff7f977e886cdf6673a8f44ddc56", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjU1OWVmOWZjNmVmZmY3Zjk3N2U4ODZjZGY2NjczYThmNDRkZGM1Ng==", "commit": {"author": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2018-11-22T15:09:55Z"}, "committer": {"name": "Martin Liska", "email": "marxin@gcc.gnu.org", "date": "2018-11-22T15:09:55Z"}, "message": "Fix option values for -march.\n\n2018-11-22  Martin Liska  <mliska@suse.cz>\n\n\t* common/config/i386/i386-common.c (processor_names): Add\n\tstatic assert and add missing \"znver2\".\n\t(ix86_get_valid_option_values): Add checking assert for null\n\tvalues and add \"native\" value if feasible.\n\t* config/i386/i386.h: Do not declare size of processor_names.\n\t* common/config/i386/i386-common.c:\n\t* config/i386/i386.c: Add static assert for size\n\tof processor_cost_table.\n\nFrom-SVN: r266381", "tree": {"sha": "2faf9b59a56259f0d19224177134b95e47bdf459", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2faf9b59a56259f0d19224177134b95e47bdf459"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2559ef9fc6efff7f977e886cdf6673a8f44ddc56", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2559ef9fc6efff7f977e886cdf6673a8f44ddc56", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2559ef9fc6efff7f977e886cdf6673a8f44ddc56", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2559ef9fc6efff7f977e886cdf6673a8f44ddc56/comments", "author": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "89d7557202d25a393666ac4c0f7dbdab31e452a2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/89d7557202d25a393666ac4c0f7dbdab31e452a2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/89d7557202d25a393666ac4c0f7dbdab31e452a2"}], "stats": {"total": 43, "additions": 37, "deletions": 6}, "files": [{"sha": "57962464f40eb6d5210b5e7b3e26d5bc6207dfc3", "filename": "gcc/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2559ef9fc6efff7f977e886cdf6673a8f44ddc56/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2559ef9fc6efff7f977e886cdf6673a8f44ddc56/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=2559ef9fc6efff7f977e886cdf6673a8f44ddc56", "patch": "@@ -1,3 +1,14 @@\n+2018-11-22  Martin Liska  <mliska@suse.cz>\n+\n+\t* common/config/i386/i386-common.c (processor_names): Add\n+\tstatic assert and add missing \"znver2\".\n+\t(ix86_get_valid_option_values): Add checking assert for null\n+\tvalues and add \"native\" value if feasible.\n+\t* config/i386/i386.h: Do not declare size of processor_names.\n+\t* common/config/i386/i386-common.c:\n+\t* config/i386/i386.c: Add static assert for size\n+\tof processor_cost_table.\n+\n 2018-11-22  Thomas Preud'homme  <thomas.preudhomme@linaro.org>\n \n \t* target-insns.def (stack_protect_combined_set): Define new standard"}, {"sha": "4238b43243127c773c5057ef1a98fdbd0da551a9", "filename": "gcc/common/config/i386/i386-common.c", "status": "modified", "additions": 21, "deletions": 4, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2559ef9fc6efff7f977e886cdf6673a8f44ddc56/gcc%2Fcommon%2Fconfig%2Fi386%2Fi386-common.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2559ef9fc6efff7f977e886cdf6673a8f44ddc56/gcc%2Fcommon%2Fconfig%2Fi386%2Fi386-common.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcommon%2Fconfig%2Fi386%2Fi386-common.c?ref=2559ef9fc6efff7f977e886cdf6673a8f44ddc56", "patch": "@@ -1478,7 +1478,7 @@ i386_except_unwind_info (struct gcc_options *opts)\n #define TARGET_SUPPORTS_SPLIT_STACK ix86_supports_split_stack\n \n /* This table must be in sync with enum processor_type in i386.h.  */\n-const char *const processor_names[PROCESSOR_max] =\n+const char *const processor_names[] =\n {\n   \"generic\",\n   \"i386\",\n@@ -1516,9 +1516,13 @@ const char *const processor_names[PROCESSOR_max] =\n   \"bdver4\",\n   \"btver1\",\n   \"btver2\",\n-  \"znver1\"\n+  \"znver1\",\n+  \"znver2\"\n };\n \n+/* Guarantee that the array is aligned with enum processor_type.  */\n+STATIC_ASSERT (ARRAY_SIZE (processor_names) == PROCESSOR_max);\n+\n const pta processor_alias_table[] =\n {\n   {\"i386\", PROCESSOR_I386, CPU_NONE, 0},\n@@ -1734,11 +1738,24 @@ ix86_get_valid_option_values (int option_code,\n     {\n     case OPT_march_:\n       for (unsigned i = 0; i < pta_size; i++)\n-\tv.safe_push (processor_alias_table[i].name);\n+\t{\n+\t  const char *name = processor_alias_table[i].name;\n+\t  gcc_checking_assert (name != NULL);\n+\t  v.safe_push (name);\n+\t}\n+#ifdef HAVE_LOCAL_CPU_DETECT\n+      /* Add also \"native\" as possible value.  */\n+      v.safe_push (\"native\");\n+#endif\n+\n       break;\n     case OPT_mtune_:\n       for (unsigned i = 0; i < PROCESSOR_max; i++)\n-\tv.safe_push (processor_names[i]);\n+\t{\n+\t  const char *name = processor_names[i];\n+\t  gcc_checking_assert (name != NULL);\n+\t  v.safe_push (name);\n+\t}\n       break;\n     default:\n       break;"}, {"sha": "2f0d531427be93c5fbba51edb5dadf19aeb20392", "filename": "gcc/config/i386/i386.c", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2559ef9fc6efff7f977e886cdf6673a8f44ddc56/gcc%2Fconfig%2Fi386%2Fi386.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2559ef9fc6efff7f977e886cdf6673a8f44ddc56/gcc%2Fconfig%2Fi386%2Fi386.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.c?ref=2559ef9fc6efff7f977e886cdf6673a8f44ddc56", "patch": "@@ -831,7 +831,7 @@ static tree ix86_veclibabi_svml (combined_fn, tree, tree);\n static tree ix86_veclibabi_acml (combined_fn, tree, tree);\n \n /* This table must be in sync with enum processor_type in i386.h.  */ \n-static const struct processor_costs *processor_cost_table[PROCESSOR_max] =\n+static const struct processor_costs *processor_cost_table[] =\n {\n   &generic_cost,\n   &i386_cost,\n@@ -872,6 +872,9 @@ static const struct processor_costs *processor_cost_table[PROCESSOR_max] =\n   &znver1_cost,\n   &znver2_cost\n };\n+\n+/* Guarantee that the array is aligned with enum processor_type.  */\n+STATIC_ASSERT (ARRAY_SIZE (processor_cost_table) == PROCESSOR_max);\n \f\n static unsigned int\n rest_of_handle_insert_vzeroupper (void)"}, {"sha": "b9e726e3d2487e52a94136315d18ea1d41963a94", "filename": "gcc/config/i386/i386.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2559ef9fc6efff7f977e886cdf6673a8f44ddc56/gcc%2Fconfig%2Fi386%2Fi386.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2559ef9fc6efff7f977e886cdf6673a8f44ddc56/gcc%2Fconfig%2Fi386%2Fi386.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.h?ref=2559ef9fc6efff7f977e886cdf6673a8f44ddc56", "patch": "@@ -2279,7 +2279,7 @@ enum processor_type\n };\n \n #if !defined(IN_LIBGCC2) && !defined(IN_TARGET_LIBS) && !defined(IN_RTS)\n-extern const char *const processor_names[PROCESSOR_max];\n+extern const char *const processor_names[];\n \n #include \"wide-int-bitmask.h\"\n "}]}