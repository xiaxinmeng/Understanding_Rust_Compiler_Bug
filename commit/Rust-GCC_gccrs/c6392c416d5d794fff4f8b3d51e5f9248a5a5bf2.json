{"sha": "c6392c416d5d794fff4f8b3d51e5f9248a5a5bf2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzYzOTJjNDE2ZDVkNzk0ZmZmNGY4YjNkNTFlNWY5MjQ4YTVhNWJmMg==", "commit": {"author": {"name": "Kugan Vivekanandarajah", "email": "kuganv@linaro.org", "date": "2015-11-22T23:07:58Z"}, "committer": {"name": "Kugan Vivekanandarajah", "email": "kugan@gcc.gnu.org", "date": "2015-11-22T23:07:58Z"}, "message": "re PR target/68390 (Incorrect code due to indirect tail call of varargs function with hard float ABI)\n\ngcc/ChangeLog:\n\n2015-11-23  Kugan Vivekanandarajah  <kuganv@linaro.org>\n\n\tPR target/68390\n\t* config/arm/arm.c (arm_function_ok_for_sibcall): Get function type\n\tfor indirect function call.\n\ngcc/testsuite/ChangeLog:\n\n2015-11-23  Kugan Vivekanandarajah  <kuganv@linaro.org>\n\n\tPR target/68390\n\t* gcc/testsuite/gcc.c-torture/execute/pr68390.c: New test.\n\nFrom-SVN: r230730", "tree": {"sha": "55f2f883214379511399e4b40061339fb37d2209", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/55f2f883214379511399e4b40061339fb37d2209"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c6392c416d5d794fff4f8b3d51e5f9248a5a5bf2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c6392c416d5d794fff4f8b3d51e5f9248a5a5bf2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c6392c416d5d794fff4f8b3d51e5f9248a5a5bf2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c6392c416d5d794fff4f8b3d51e5f9248a5a5bf2/comments", "author": null, "committer": null, "parents": [{"sha": "cfba61d25c4acaa74c352c492150e197a4cafcba", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cfba61d25c4acaa74c352c492150e197a4cafcba", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cfba61d25c4acaa74c352c492150e197a4cafcba"}], "stats": {"total": 45, "additions": 44, "deletions": 1}, "files": [{"sha": "c584fd9780debea6c9ecef014c4fa0a25166540e", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c6392c416d5d794fff4f8b3d51e5f9248a5a5bf2/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c6392c416d5d794fff4f8b3d51e5f9248a5a5bf2/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=c6392c416d5d794fff4f8b3d51e5f9248a5a5bf2", "patch": "@@ -1,3 +1,9 @@\n+2015-11-23  Kugan Vivekanandarajah  <kuganv@linaro.org>\n+\n+\tPR target/68390\n+\t* config/arm/arm.c (arm_function_ok_for_sibcall): Get function type\n+\tfor indirect function call.\n+\n 2015-11-22  Bilyan Borisov  <bilyan.borisov@arm.com>\n \n \t* config/aarch64/aarch64-simd.md"}, {"sha": "e0cdc209734520037e99412a46ac6470ebb13b07", "filename": "gcc/config/arm/arm.c", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c6392c416d5d794fff4f8b3d51e5f9248a5a5bf2/gcc%2Fconfig%2Farm%2Farm.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c6392c416d5d794fff4f8b3d51e5f9248a5a5bf2/gcc%2Fconfig%2Farm%2Farm.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm.c?ref=c6392c416d5d794fff4f8b3d51e5f9248a5a5bf2", "patch": "@@ -6686,8 +6686,13 @@ arm_function_ok_for_sibcall (tree decl, tree exp)\n \t a VFP register but then need to transfer it to a core\n \t register.  */\n       rtx a, b;\n+      tree decl_or_type = decl;\n \n-      a = arm_function_value (TREE_TYPE (exp), decl, false);\n+      /* If it is an indirect function pointer, get the function type.  */\n+      if (!decl)\n+\tdecl_or_type = TREE_TYPE (TREE_TYPE (CALL_EXPR_FN (exp)));\n+\n+      a = arm_function_value (TREE_TYPE (exp), decl_or_type, false);\n       b = arm_function_value (TREE_TYPE (DECL_RESULT (cfun->decl)),\n \t\t\t      cfun->decl, false);\n       if (!rtx_equal_p (a, b))"}, {"sha": "3074642b247582102af1468359a51d154f1943f3", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c6392c416d5d794fff4f8b3d51e5f9248a5a5bf2/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c6392c416d5d794fff4f8b3d51e5f9248a5a5bf2/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=c6392c416d5d794fff4f8b3d51e5f9248a5a5bf2", "patch": "@@ -1,3 +1,8 @@\n+2015-11-23  Kugan Vivekanandarajah  <kuganv@linaro.org>\n+\n+\tPR target/68390\n+\t* gcc/testsuite/gcc.c-torture/execute/pr68390.c: New test.\n+\n 2015-11-22  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n \n \t* gfortran.dg/fmt_g0_1.f08: Update test. Leading zero."}, {"sha": "86f07fefd4fae7e3561e93644b0d58f167454971", "filename": "gcc/testsuite/gcc.c-torture/execute/pr68390.c", "status": "added", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c6392c416d5d794fff4f8b3d51e5f9248a5a5bf2/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr68390.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c6392c416d5d794fff4f8b3d51e5f9248a5a5bf2/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr68390.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr68390.c?ref=c6392c416d5d794fff4f8b3d51e5f9248a5a5bf2", "patch": "@@ -0,0 +1,27 @@\n+/* { dg-do run }  */\n+/* { dg-options \"-O2\" } */\n+\n+__attribute__ ((noinline))\n+double direct(int x, ...)\n+{\n+  return x*x;\n+}\n+\n+__attribute__ ((noinline))\n+double broken(double (*indirect)(int x, ...), int v)\n+{\n+  return indirect(v);\n+}\n+\n+int main ()\n+{\n+  double d1, d2;\n+  int i = 2;\n+  d1 = broken (direct, i);\n+  if (d1 != i*i)\n+    {\n+      __builtin_abort ();\n+    }\n+  return 0;\n+}\n+"}]}