{"sha": "b0a421e8c1edf21466756f1354a481273c2cb362", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjBhNDIxZThjMWVkZjIxNDY2NzU2ZjEzNTRhNDgxMjczYzJjYjM2Mg==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2010-06-07T20:43:01Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2010-06-07T20:43:01Z"}, "message": "re PR c++/44401 (Doesn't correctly hide injected class name)\n\n\tPR c++/44401\n\t* parser.c (cp_parser_lookup_name): Fix naming the constructor.\n\nFrom-SVN: r160399", "tree": {"sha": "df8ee9a847339e3a9f935f8ffacc112f1a1d8f9b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/df8ee9a847339e3a9f935f8ffacc112f1a1d8f9b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b0a421e8c1edf21466756f1354a481273c2cb362", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b0a421e8c1edf21466756f1354a481273c2cb362", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b0a421e8c1edf21466756f1354a481273c2cb362", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b0a421e8c1edf21466756f1354a481273c2cb362/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "01628e543b8867e4c4ca5724d4982caae7f0bc1a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/01628e543b8867e4c4ca5724d4982caae7f0bc1a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/01628e543b8867e4c4ca5724d4982caae7f0bc1a"}], "stats": {"total": 42, "additions": 31, "deletions": 11}, "files": [{"sha": "5f74ab9ce32b4966c4dc8c161d8564f3a702b3db", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b0a421e8c1edf21466756f1354a481273c2cb362/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b0a421e8c1edf21466756f1354a481273c2cb362/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=b0a421e8c1edf21466756f1354a481273c2cb362", "patch": "@@ -1,5 +1,8 @@\n 2010-06-07  Jason Merrill  <jason@redhat.com>\n \n+\tPR c++/44401\n+\t* parser.c (cp_parser_lookup_name): Fix naming the constructor.\n+\n \t* cp-tree.h (COMPLETE_OR_OPEN_TYPE_P): New macro.\n \t* init.c (build_offset_ref): Use it.\n \t* pt.c (maybe_process_partial_specialization): Use it."}, {"sha": "92f778619eb19c22169657d1d12008230f1cc582", "filename": "gcc/cp/parser.c", "status": "modified", "additions": 13, "deletions": 11, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b0a421e8c1edf21466756f1354a481273c2cb362/gcc%2Fcp%2Fparser.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b0a421e8c1edf21466756f1354a481273c2cb362/gcc%2Fcp%2Fparser.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fparser.c?ref=b0a421e8c1edf21466756f1354a481273c2cb362", "patch": "@@ -18365,6 +18365,14 @@ cp_parser_lookup_name (cp_parser *parser, tree name,\n \t  if (dependent_p)\n \t    pushed_scope = push_scope (parser->scope);\n \n+\t  /* If the PARSER->SCOPE is a template specialization, it\n+\t     may be instantiated during name lookup.  In that case,\n+\t     errors may be issued.  Even if we rollback the current\n+\t     tentative parse, those errors are valid.  */\n+\t  decl = lookup_qualified_name (parser->scope, name,\n+\t\t\t\t\ttag_type != none_type,\n+\t\t\t\t\t/*complain=*/true);\n+\n \t  /* 3.4.3.1: In a lookup in which the constructor is an acceptable\n \t     lookup result and the nested-name-specifier nominates a class C:\n \t       * if the name specified after the nested-name-specifier, when\n@@ -18380,17 +18388,11 @@ cp_parser_lookup_name (cp_parser *parser, tree name,\n \t     shall be used only in the declarator-id of a declaration that\n \t     names a constructor or in a using-declaration.  */\n \t  if (tag_type == none_type\n-\t      && CLASS_TYPE_P (parser->scope)\n-\t      && constructor_name_p (name, parser->scope))\n-\t    name = ctor_identifier;\n-\n-\t  /* If the PARSER->SCOPE is a template specialization, it\n-\t     may be instantiated during name lookup.  In that case,\n-\t     errors may be issued.  Even if we rollback the current\n-\t     tentative parse, those errors are valid.  */\n-\t  decl = lookup_qualified_name (parser->scope, name,\n-\t\t\t\t\ttag_type != none_type,\n-\t\t\t\t\t/*complain=*/true);\n+\t      && DECL_SELF_REFERENCE_P (decl)\n+\t      && same_type_p (DECL_CONTEXT (decl), parser->scope))\n+\t    decl = lookup_qualified_name (parser->scope, ctor_identifier,\n+\t\t\t\t\t  tag_type != none_type,\n+\t\t\t\t\t  /*complain=*/true);\n \n \t  /* If we have a single function from a using decl, pull it out.  */\n \t  if (TREE_CODE (decl) == OVERLOAD"}, {"sha": "50afa0dd51de80965f4888a96d8317c6d1c28169", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b0a421e8c1edf21466756f1354a481273c2cb362/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b0a421e8c1edf21466756f1354a481273c2cb362/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=b0a421e8c1edf21466756f1354a481273c2cb362", "patch": "@@ -1,3 +1,8 @@\n+2010-06-07  Jason Merrill  <jason@redhat.com>\n+\n+\tPR c++/44401\n+\t* g++.dg/tc1/dr147.C: Test case of member with same name as class.\n+\n 2010-06-07  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR c++/44444"}, {"sha": "6799b7dccad0c17376e9f2b1ba264ee0d6d3b61a", "filename": "gcc/testsuite/g++.dg/tc1/dr147.C", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b0a421e8c1edf21466756f1354a481273c2cb362/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftc1%2Fdr147.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b0a421e8c1edf21466756f1354a481273c2cb362/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftc1%2Fdr147.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftc1%2Fdr147.C?ref=b0a421e8c1edf21466756f1354a481273c2cb362", "patch": "@@ -54,3 +54,13 @@ struct D: C::C\n {\n   D(): C::C() { }\n };\n+\n+// And if lookup doesn't find the injected-class-name, we aren't naming the\n+// constructor (c++/44401).\n+\n+struct E\n+{\n+  int E;\n+};\n+\n+int E::*p = &E::E;"}]}