{"sha": "406f58e1e38e92e4b881f3666b596843da308783", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDA2ZjU4ZTFlMzhlOTJlNGI4ODFmMzY2NmI1OTY4NDNkYTMwODc4Mw==", "commit": {"author": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2021-04-06T13:41:29Z"}, "committer": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2021-04-06T15:43:25Z"}, "message": "libstdc++: Add nodiscard attribute to cast-like functions\n\nAdd [[nodiscard]] to functions that are effectively just a static_cast,\nas per P2351. Also add it to std::addressof.\n\nlibstdc++-v3/ChangeLog:\n\n\t* include/bits/move.h (forward, move, move_if_noexcept)\n\t(addressof): Add _GLIBCXX_NODISCARD.\n\t* include/bits/ranges_cmp.h (identity::operator()): Add\n\tnodiscard attribute.\n\t* include/c_global/cstddef (to_integer): Likewise.\n\t* include/std/bit (bit_cast): Likewise.\n\t* include/std/utility (as_const, to_underlying): Likewise.", "tree": {"sha": "51ed49f19e399a73512f6b843bebe0388b0503a1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/51ed49f19e399a73512f6b843bebe0388b0503a1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/406f58e1e38e92e4b881f3666b596843da308783", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/406f58e1e38e92e4b881f3666b596843da308783", "html_url": "https://github.com/Rust-GCC/gccrs/commit/406f58e1e38e92e4b881f3666b596843da308783", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/406f58e1e38e92e4b881f3666b596843da308783/comments", "author": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "41019bfae2673a818a9b7d08742f3ef91c0deade", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/41019bfae2673a818a9b7d08742f3ef91c0deade", "html_url": "https://github.com/Rust-GCC/gccrs/commit/41019bfae2673a818a9b7d08742f3ef91c0deade"}], "stats": {"total": 14, "additions": 13, "deletions": 1}, "files": [{"sha": "3abbb37ceebb1291b0ab1236513b1c5c96580fa3", "filename": "libstdc++-v3/include/bits/move.h", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/406f58e1e38e92e4b881f3666b596843da308783/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fmove.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/406f58e1e38e92e4b881f3666b596843da308783/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fmove.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fmove.h?ref=406f58e1e38e92e4b881f3666b596843da308783", "patch": "@@ -72,6 +72,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n    *  This function is used to implement \"perfect forwarding\".\n    */\n   template<typename _Tp>\n+    _GLIBCXX_NODISCARD\n     constexpr _Tp&&\n     forward(typename std::remove_reference<_Tp>::type& __t) noexcept\n     { return static_cast<_Tp&&>(__t); }\n@@ -83,6 +84,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n    *  This function is used to implement \"perfect forwarding\".\n    */\n   template<typename _Tp>\n+    _GLIBCXX_NODISCARD\n     constexpr _Tp&&\n     forward(typename std::remove_reference<_Tp>::type&& __t) noexcept\n     {\n@@ -97,6 +99,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n    *  @return The parameter cast to an rvalue-reference to allow moving it.\n   */\n   template<typename _Tp>\n+    _GLIBCXX_NODISCARD\n     constexpr typename std::remove_reference<_Tp>::type&&\n     move(_Tp&& __t) noexcept\n     { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }\n@@ -116,6 +119,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n    *  type is copyable, in which case an lvalue-reference is returned instead.\n    */\n   template<typename _Tp>\n+    _GLIBCXX_NODISCARD\n     constexpr typename\n     conditional<__move_if_noexcept_cond<_Tp>::value, const _Tp&, _Tp&&>::type\n     move_if_noexcept(_Tp& __x) noexcept\n@@ -136,6 +140,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n    *  @return   The actual address.\n   */\n   template<typename _Tp>\n+    _GLIBCXX_NODISCARD\n     inline _GLIBCXX17_CONSTEXPR _Tp*\n     addressof(_Tp& __r) noexcept\n     { return std::__addressof(__r); }"}, {"sha": "f859a33b2c1abe19199ad93e420a9f814ce2eccd", "filename": "libstdc++-v3/include/bits/ranges_cmp.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/406f58e1e38e92e4b881f3666b596843da308783/libstdc%2B%2B-v3%2Finclude%2Fbits%2Franges_cmp.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/406f58e1e38e92e4b881f3666b596843da308783/libstdc%2B%2B-v3%2Finclude%2Fbits%2Franges_cmp.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Franges_cmp.h?ref=406f58e1e38e92e4b881f3666b596843da308783", "patch": "@@ -47,6 +47,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n   struct identity\n   {\n     template<typename _Tp>\n+      [[nodiscard]]\n       constexpr _Tp&&\n       operator()(_Tp&& __t) const noexcept\n       { return std::forward<_Tp>(__t); }"}, {"sha": "13ef7f03c12584804e4dd1635954723f628addc0", "filename": "libstdc++-v3/include/c_global/cstddef", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/406f58e1e38e92e4b881f3666b596843da308783/libstdc%2B%2B-v3%2Finclude%2Fc_global%2Fcstddef", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/406f58e1e38e92e4b881f3666b596843da308783/libstdc%2B%2B-v3%2Finclude%2Fc_global%2Fcstddef", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fc_global%2Fcstddef?ref=406f58e1e38e92e4b881f3666b596843da308783", "patch": "@@ -169,6 +169,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n   { return __l = __l ^ __r; }\n \n   template<typename _IntegerType>\n+    [[nodiscard]]\n     constexpr _IntegerType\n     to_integer(__byte_op_t<_IntegerType> __b) noexcept\n     { return _IntegerType(__b); }"}, {"sha": "fb78578448c0f8450bb4998e099f28be62a10ed0", "filename": "libstdc++-v3/include/std/bit", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/406f58e1e38e92e4b881f3666b596843da308783/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fbit", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/406f58e1e38e92e4b881f3666b596843da308783/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fbit", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fbit?ref=406f58e1e38e92e4b881f3666b596843da308783", "patch": "@@ -54,6 +54,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \n   /// Create a value of type `To` from the bits of `from`.\n   template<typename _To, typename _From>\n+    [[nodiscard]]\n     constexpr _To\n     bit_cast(const _From& __from) noexcept\n     {"}, {"sha": "3e68f682e005aef6c4fdb13ad7867580297b20fc", "filename": "libstdc++-v3/include/std/utility", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/406f58e1e38e92e4b881f3666b596843da308783/libstdc%2B%2B-v3%2Finclude%2Fstd%2Futility", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/406f58e1e38e92e4b881f3666b596843da308783/libstdc%2B%2B-v3%2Finclude%2Fstd%2Futility", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Futility?ref=406f58e1e38e92e4b881f3666b596843da308783", "patch": "@@ -386,7 +386,10 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \n #define  __cpp_lib_as_const 201510\n   template<typename _Tp>\n-    constexpr add_const_t<_Tp>& as_const(_Tp& __t) noexcept { return __t; }\n+    [[nodiscard]]\n+    constexpr add_const_t<_Tp>&\n+    as_const(_Tp& __t) noexcept\n+    { return __t; }\n \n   template<typename _Tp>\n     void as_const(const _Tp&&) = delete;\n@@ -466,6 +469,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n #define __cpp_lib_to_underlying 202102L\n   /// Convert an object of enumeration type to its underlying type.\n   template<typename _Tp>\n+    [[nodiscard]]\n     constexpr underlying_type_t<_Tp>\n     to_underlying(_Tp __value) noexcept\n     { return static_cast<underlying_type_t<_Tp>>(__value); }"}]}