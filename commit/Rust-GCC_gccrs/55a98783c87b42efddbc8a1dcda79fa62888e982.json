{"sha": "55a98783c87b42efddbc8a1dcda79fa62888e982", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTVhOTg3ODNjODdiNDJlZmRkYmM4YTFkY2RhNzlmYTYyODg4ZTk4Mg==", "commit": {"author": {"name": "Jeffrey A Law", "email": "law@cygnus.com", "date": "1999-04-12T02:18:55Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "1999-04-12T02:18:55Z"}, "message": "flow.c (flow_delete_insn): If we delete a CODE_LABEL...\n\n\t* flow.c (flow_delete_insn): If we delete a CODE_LABEL, also remove\n\tit from the nonlocal_goto_handler_labels list.\n\t* jump.c (delete_insn): Likewise.\n\t(jump_optimize_1): Also recompute LABEL_NUSES when we are just\n\tmarking labels.\n\t* rtl.h (remove_node_from_expr_list): Declare.\n\t* rtlanal.c (remove_node_from_expr_list): New function.\n\nFrom-SVN: r26361", "tree": {"sha": "4730eb8514a569674bc3d9d7886860ad0b6bb297", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4730eb8514a569674bc3d9d7886860ad0b6bb297"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/55a98783c87b42efddbc8a1dcda79fa62888e982", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/55a98783c87b42efddbc8a1dcda79fa62888e982", "html_url": "https://github.com/Rust-GCC/gccrs/commit/55a98783c87b42efddbc8a1dcda79fa62888e982", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/55a98783c87b42efddbc8a1dcda79fa62888e982/comments", "author": null, "committer": null, "parents": [{"sha": "21b2cd732182b457962d0f248662c5d894e147ca", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/21b2cd732182b457962d0f248662c5d894e147ca", "html_url": "https://github.com/Rust-GCC/gccrs/commit/21b2cd732182b457962d0f248662c5d894e147ca"}], "stats": {"total": 57, "additions": 52, "deletions": 5}, "files": [{"sha": "db5281d88f1c3a4b93864a71736a482ce9ae1be2", "filename": "gcc/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/55a98783c87b42efddbc8a1dcda79fa62888e982/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/55a98783c87b42efddbc8a1dcda79fa62888e982/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=55a98783c87b42efddbc8a1dcda79fa62888e982", "patch": "@@ -1,3 +1,13 @@\n+Mon Apr 12 03:11:30 1999  Jeffrey A Law  (law@cygnus.com)\n+\n+\t* flow.c (flow_delete_insn): If we delete a CODE_LABEL, also remove\n+\tit from the nonlocal_goto_handler_labels list.\n+\t* jump.c (delete_insn): Likewise.\n+\t(jump_optimize_1): Also recompute LABEL_NUSES when we are just\n+\tmarking labels.\n+\t* rtl.h (remove_node_from_expr_list): Declare.\n+\t* rtlanal.c (remove_node_from_expr_list): New function.\n+\n Mon Apr 12 02:37:02 1999  Jan Hubicka <hubicka@freesoft.cz>\n \n \t* reg-stack.c: Update comment, include varray.h."}, {"sha": "c9bf5ab15b61c7898b217dbca6872b06d25680fa", "filename": "gcc/flow.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/55a98783c87b42efddbc8a1dcda79fa62888e982/gcc%2Fflow.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/55a98783c87b42efddbc8a1dcda79fa62888e982/gcc%2Fflow.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fflow.c?ref=55a98783c87b42efddbc8a1dcda79fa62888e982", "patch": "@@ -1802,6 +1802,9 @@ flow_delete_insn (insn)\n   else\n     set_last_insn (prev);\n \n+  if (GET_CODE (insn) == CODE_LABEL)\n+    remove_node_from_expr_list (insn, &nonlocal_goto_handler_labels);\n+\n   /* If deleting a jump, decrement the use count of the label.  Deleting\n      the label itself should happen in the normal course of block merging.  */\n   if (GET_CODE (insn) == JUMP_INSN && JUMP_LABEL (insn))"}, {"sha": "9b727fa32c85e7cb995f8441bb576ba63f63d63e", "filename": "gcc/jump.c", "status": "modified", "additions": 8, "deletions": 5, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/55a98783c87b42efddbc8a1dcda79fa62888e982/gcc%2Fjump.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/55a98783c87b42efddbc8a1dcda79fa62888e982/gcc%2Fjump.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjump.c?ref=55a98783c87b42efddbc8a1dcda79fa62888e982", "patch": "@@ -210,11 +210,6 @@ jump_optimize_1 (f, cross_jump, noop_moves, after_regscan, mark_labels_only)\n \n   mark_all_labels (f, cross_jump);\n \n-  /* Quit now if we just wanted to rebuild the JUMP_LABEL and REG_LABEL\n-     notes.  */\n-  if (mark_labels_only)\n-    return;\n-\n   /* Keep track of labels used from static data;\n      they cannot ever be deleted.  */\n \n@@ -229,6 +224,11 @@ jump_optimize_1 (f, cross_jump, noop_moves, after_regscan, mark_labels_only)\n   for (insn = exception_handler_labels; insn; insn = XEXP (insn, 1))\n     LABEL_NUSES (XEXP (insn, 0))++;\n \n+  /* Quit now if we just wanted to rebuild the JUMP_LABEL and REG_LABEL\n+     notes and recompute LABEL_NUSES.  */\n+  if (mark_labels_only)\n+    return;\n+\n   exception_optimize ();\n \n   last_insn = delete_unreferenced_labels (f);\n@@ -3922,6 +3922,9 @@ delete_insn (insn)\n   if (INSN_DELETED_P (insn))\n     return next;\n \n+  if (was_code_label)\n+    remove_node_from_expr_list (insn, &nonlocal_goto_handler_labels);\n+\n   /* Don't delete user-declared labels.  Convert them to special NOTEs\n      instead.  */\n   if (was_code_label && LABEL_NAME (insn) != 0"}, {"sha": "964a8abd99df7297ceb707bf29111df6c9f6b4e6", "filename": "gcc/rtl.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/55a98783c87b42efddbc8a1dcda79fa62888e982/gcc%2Frtl.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/55a98783c87b42efddbc8a1dcda79fa62888e982/gcc%2Frtl.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frtl.h?ref=55a98783c87b42efddbc8a1dcda79fa62888e982", "patch": "@@ -1081,6 +1081,7 @@ typedef int (*rtx_function)             PROTO((rtx *, void *));\n extern int for_each_rtx                 PROTO((rtx *, rtx_function, void *));\n extern rtx regno_use_in\t\t\tPROTO((int, rtx));\n extern int auto_inc_p\t\t\tPROTO((rtx));\n+extern void remove_node_from_expr_list\tPROTO((rtx, rtx *));\n \n /* flow.c */\n "}, {"sha": "fb4f87c07de31686ed87a11e512f6bc37b47067e", "filename": "gcc/rtlanal.c", "status": "modified", "additions": 30, "deletions": 0, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/55a98783c87b42efddbc8a1dcda79fa62888e982/gcc%2Frtlanal.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/55a98783c87b42efddbc8a1dcda79fa62888e982/gcc%2Frtlanal.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frtlanal.c?ref=55a98783c87b42efddbc8a1dcda79fa62888e982", "patch": "@@ -1529,6 +1529,36 @@ remove_note (insn, note)\n \n   abort ();\n }\n+\n+/* Search LISTP (an EXPR_LIST) for NODE and remove NODE from the list\n+   if it is found.\n+\n+   A simple equality test is used to determine if NODE is on the\n+   EXPR_LIST.  */\n+\n+void\n+remove_node_from_expr_list (node, listp)\n+     rtx node;\n+     rtx *listp;\n+{\n+  rtx temp = *listp;\n+  rtx prev = NULL_RTX;\n+\n+  while (temp)\n+    {\n+      if (node == XEXP (temp, 0))\n+\t{\n+\t  /* Splice the node out of the list.  */\n+\t  if (prev)\n+\t    XEXP (prev, 1) = XEXP (temp, 1);\n+\t  else\n+\t    *listp = XEXP (temp, 1);\n+\n+\t  return;\n+\t}\n+      temp = XEXP (temp, 1);\n+    }\n+}\n \f\n /* Nonzero if X contains any volatile instructions.  These are instructions\n    which may cause unpredictable machine state instructions, and thus no"}]}