{"sha": "b1bb4869e2708c1385352e4d960833e1b258859b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjFiYjQ4NjllMjcwOGMxMzg1MzUyZTRkOTYwODMzZTFiMjU4ODU5Yg==", "commit": {"author": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2019-05-31T14:58:05Z"}, "committer": {"name": "Jonathan Wakely", "email": "redi@gcc.gnu.org", "date": "2019-05-31T14:58:05Z"}, "message": "Add noexcept to tuple<> and simplify tuple<T1,T2> noexcept-specifiers\n\n\t* include/std/tuple (tuple<>): Add noexcept to allocator-extended\n\tconstructors.\n\t(tuple<T1, T2>::__nothrow_default_constructible()): New helper\n\tfunction.\n\t(tuple<T1, T2>::tuple(), explicit tuple<T1, T2>::tuple()): Use helper.\n\nFrom-SVN: r271814", "tree": {"sha": "eea6af3e88138f26abea6feb0f42a99494a223a2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/eea6af3e88138f26abea6feb0f42a99494a223a2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b1bb4869e2708c1385352e4d960833e1b258859b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b1bb4869e2708c1385352e4d960833e1b258859b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b1bb4869e2708c1385352e4d960833e1b258859b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b1bb4869e2708c1385352e4d960833e1b258859b/comments", "author": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1facd6278b85e2866b487b72c1f5f671c5ae9e4a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1facd6278b85e2866b487b72c1f5f671c5ae9e4a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1facd6278b85e2866b487b72c1f5f671c5ae9e4a"}], "stats": {"total": 35, "additions": 23, "deletions": 12}, "files": [{"sha": "3d9d5919e5b7981c0e06edf3247863948de6996d", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b1bb4869e2708c1385352e4d960833e1b258859b/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b1bb4869e2708c1385352e4d960833e1b258859b/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=b1bb4869e2708c1385352e4d960833e1b258859b", "patch": "@@ -1,3 +1,11 @@\n+2019-05-31  Jonathan Wakely  <jwakely@redhat.com>\n+\n+\t* include/std/tuple (tuple<>): Add noexcept to allocator-extended\n+\tconstructors.\n+\t(tuple<T1, T2>::__nothrow_default_constructible()): New helper\n+\tfunction.\n+\t(tuple<T1, T2>::tuple(), explicit tuple<T1, T2>::tuple()): Use helper.\n+\n 2019-05-31  Jonathan Wakely  <jwakely@redhat.com>\n \n \t* src/c++98/bitmap_allocator.cc: Add using-declaration for size_t."}, {"sha": "64516b1dece1f266534946a2eacac46a4a5d7bd7", "filename": "libstdc++-v3/include/std/tuple", "status": "modified", "additions": 15, "deletions": 12, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b1bb4869e2708c1385352e4d960833e1b258859b/libstdc%2B%2B-v3%2Finclude%2Fstd%2Ftuple", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b1bb4869e2708c1385352e4d960833e1b258859b/libstdc%2B%2B-v3%2Finclude%2Fstd%2Ftuple", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Ftuple?ref=b1bb4869e2708c1385352e4d960833e1b258859b", "patch": "@@ -898,9 +898,9 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n       tuple() = default;\n       // No-op allocator constructors.\n       template<typename _Alloc>\n-\ttuple(allocator_arg_t, const _Alloc&) { }\n+\ttuple(allocator_arg_t, const _Alloc&) noexcept { }\n       template<typename _Alloc>\n-\ttuple(allocator_arg_t, const _Alloc&, const tuple&) { }\n+\ttuple(allocator_arg_t, const _Alloc&, const tuple&) noexcept { }\n     };\n \n   /// Partial specialization, 2-element tuple.\n@@ -925,11 +925,17 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \t}\n \n       template<typename _U1, typename _U2>\n-    static constexpr bool __nothrow_constructible()\n-    {\n-      return __and_<is_nothrow_constructible<_T1, _U1>,\n-\t\t\tis_nothrow_constructible<_T2, _U2>>::value;\n-    }\n+\tstatic constexpr bool __nothrow_constructible()\n+\t{\n+\t  return __and_<is_nothrow_constructible<_T1, _U1>,\n+\t\t\t    is_nothrow_constructible<_T2, _U2>>::value;\n+\t}\n+\n+      static constexpr bool __nothrow_default_constructible()\n+      {\n+\treturn __and_<is_nothrow_default_constructible<_T1>,\n+\t\t      is_nothrow_default_constructible<_T2>>::value;\n+      }\n \n     public:\n       template <typename _U1 = _T1,\n@@ -939,8 +945,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n                                      __is_implicitly_default_constructible<_U2>>\n                                    ::value, bool>::type = true>\n \tconstexpr tuple()\n-\tnoexcept(__and_<is_nothrow_default_constructible<_T1>,\n-\t\t\tis_nothrow_default_constructible<_T2>>::value)\n+\tnoexcept(__nothrow_default_constructible())\n \t: _Inherited() { }\n \n       template <typename _U1 = _T1,\n@@ -954,8 +959,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n                              __is_implicitly_default_constructible<_U2>>>>\n                   ::value, bool>::type = false>\n \texplicit constexpr tuple()\n-\tnoexcept(__and_<is_nothrow_default_constructible<_T1>,\n-\t\t\tis_nothrow_default_constructible<_T2>>::value)\n+\tnoexcept(__nothrow_default_constructible())\n \t: _Inherited() { }\n \n       // Shortcut for the cases where constructors taking _T1, _T2\n@@ -1108,7 +1112,6 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n                  && _TCC<_Dummy>::template\n                    _ImplicitlyConvertibleTuple<_T1, _T2>(),\n                bool>::type=true>\n-\n \ttuple(allocator_arg_t __tag, const _Alloc& __a,\n \t      const _T1& __a1, const _T2& __a2)\n \t: _Inherited(__tag, __a, __a1, __a2) { }"}]}