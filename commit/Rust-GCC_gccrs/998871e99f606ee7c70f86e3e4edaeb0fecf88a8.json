{"sha": "998871e99f606ee7c70f86e3e4edaeb0fecf88a8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTk4ODcxZTk5ZjYwNmVlN2M3MGY4NmUzZTRlZGFlYjBmZWNmODhhOA==", "commit": {"author": {"name": "Anatoly Sokolov", "email": "aesok@post.ru", "date": "2011-02-28T20:48:06Z"}, "committer": {"name": "Anatoly Sokolov", "email": "aesok@gcc.gnu.org", "date": "2011-02-28T20:48:06Z"}, "message": "stormy16.h (FUNCTION_VALUE, [...]): Remove.\n\n\t* config/stormy16/stormy16.h (FUNCTION_VALUE, LIBCALL_VALUE,\n\tFUNCTION_VALUE_REGNO_P): Remove.\n\t* config/stormy16/stormy16-protos.h (xstormy16_function_value):\n\tRemove.\n\t* config/stormy16/stormy16.c (xstormy16_function_value): Make static.\n\tAdd 'outgoing' argument.\n\t(xstormy16_libcall_value, xstormy16_function_value_regno_p): New\n\tfunction.\n\t(TARGET_FUNCTION_VALUE, TARGET_LIBCALL_VALUE,\n\tTARGET_FUNCTION_VALUE_REGNO_P): Define.\n\nFrom-SVN: r170573", "tree": {"sha": "29e37d75b01c486f2df22a90045897281dd0d531", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/29e37d75b01c486f2df22a90045897281dd0d531"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/998871e99f606ee7c70f86e3e4edaeb0fecf88a8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/998871e99f606ee7c70f86e3e4edaeb0fecf88a8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/998871e99f606ee7c70f86e3e4edaeb0fecf88a8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/998871e99f606ee7c70f86e3e4edaeb0fecf88a8/comments", "author": null, "committer": null, "parents": [{"sha": "9926de2cd8da73d5d949211455df6b0aea65dee5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9926de2cd8da73d5d949211455df6b0aea65dee5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9926de2cd8da73d5d949211455df6b0aea65dee5"}], "stats": {"total": 52, "additions": 41, "deletions": 11}, "files": [{"sha": "4bf60577979ac834c33497f2e72ad226edab3daf", "filename": "gcc/ChangeLog", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/998871e99f606ee7c70f86e3e4edaeb0fecf88a8/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/998871e99f606ee7c70f86e3e4edaeb0fecf88a8/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=998871e99f606ee7c70f86e3e4edaeb0fecf88a8", "patch": "@@ -1,3 +1,16 @@\n+2011-02-28  Anatoly Sokolov  <aesok@post.ru>\n+\n+\t* config/stormy16/stormy16.h (FUNCTION_VALUE, LIBCALL_VALUE,\n+\tFUNCTION_VALUE_REGNO_P): Remove.\n+\t* config/stormy16/stormy16-protos.h (xstormy16_function_value):\n+\tRemove.\n+\t* config/stormy16/stormy16.c (xstormy16_function_value): Make static.\n+\tAdd 'outgoing' argument.\n+\t(xstormy16_libcall_value, xstormy16_function_value_regno_p): New\n+\tfunction.\n+\t(TARGET_FUNCTION_VALUE, TARGET_LIBCALL_VALUE,\n+\tTARGET_FUNCTION_VALUE_REGNO_P): Define.\n+\n 2011-02-28  Kai Tietz  <kai.tietz@onevision.com>\n \n \tPR debug/28047"}, {"sha": "bd0b5818e085ab5952bab5f7fa607ef9e0687bc6", "filename": "gcc/config/stormy16/stormy16-protos.h", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/998871e99f606ee7c70f86e3e4edaeb0fecf88a8/gcc%2Fconfig%2Fstormy16%2Fstormy16-protos.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/998871e99f606ee7c70f86e3e4edaeb0fecf88a8/gcc%2Fconfig%2Fstormy16%2Fstormy16-protos.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fstormy16%2Fstormy16-protos.h?ref=998871e99f606ee7c70f86e3e4edaeb0fecf88a8", "patch": "@@ -37,7 +37,6 @@ extern void xstormy16_asm_output_aligned_common (FILE *, tree, const char *,\n \n #if defined (TREE_CODE) && defined (RTX_CODE)\n extern void xstormy16_initialize_trampoline (rtx, rtx, rtx);\n-extern rtx xstormy16_function_value (const_tree, const_tree);\n #endif\n \n #ifdef RTX_CODE"}, {"sha": "66cd1455692eef39c02a7bc8ba0e73f88bc09f41", "filename": "gcc/config/stormy16/stormy16.c", "status": "modified", "additions": 28, "deletions": 3, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/998871e99f606ee7c70f86e3e4edaeb0fecf88a8/gcc%2Fconfig%2Fstormy16%2Fstormy16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/998871e99f606ee7c70f86e3e4edaeb0fecf88a8/gcc%2Fconfig%2Fstormy16%2Fstormy16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fstormy16%2Fstormy16.c?ref=998871e99f606ee7c70f86e3e4edaeb0fecf88a8", "patch": "@@ -1419,17 +1419,36 @@ xstormy16_trampoline_init (rtx m_tramp, tree fndecl, rtx static_chain)\n   emit_move_insn (reg_addr_mem, reg_fnaddr);\n }\n \n-/* Worker function for FUNCTION_VALUE.  */\n+/* Worker function for TARGET_FUNCTION_VALUE.  */\n \n-rtx\n-xstormy16_function_value (const_tree valtype, const_tree func ATTRIBUTE_UNUSED)\n+static rtx\n+xstormy16_function_value (const_tree valtype,\n+\t\t\t  const_tree func ATTRIBUTE_UNUSED,\n+\t\t\t  bool outgoing ATTRIBUTE_UNUSED)\n {\n   enum machine_mode mode;\n   mode = TYPE_MODE (valtype);\n   PROMOTE_MODE (mode, 0, valtype);\n   return gen_rtx_REG (mode, RETURN_VALUE_REGNUM);\n }\n \n+/* Worker function for TARGET_LIBCALL_VALUE.  */\n+\n+static rtx\n+xstormy16_libcall_value (enum machine_mode mode,\n+\t\t\t const_rtx fun ATTRIBUTE_UNUSED)\n+{\n+  return gen_rtx_REG (mode, RETURN_VALUE_REGNUM);\n+}\n+\n+/* Worker function for TARGET_FUNCTION_VALUE_REGNO_P.  */\n+\n+static bool\n+xstormy16_function_value_regno_p (const unsigned int regno)\n+{\n+  return (regno == RETURN_VALUE_REGNUM);\n+}\n+\n /* A C compound statement that outputs the assembler code for a thunk function,\n    used to implement C++ virtual function calls with multiple inheritance.  The\n    thunk acts as a wrapper around a virtual function, adjusting the implicit\n@@ -2603,6 +2622,12 @@ static const struct default_options xstorym16_option_optimization_table[] =\n \n #undef  TARGET_RETURN_IN_MEMORY\n #define TARGET_RETURN_IN_MEMORY xstormy16_return_in_memory\n+#undef TARGET_FUNCTION_VALUE\n+#define TARGET_FUNCTION_VALUE xstormy16_function_value\n+#undef TARGET_LIBCALL_VALUE\n+#define TARGET_LIBCALL_VALUE xstormy16_libcall_value\n+#undef TARGET_FUNCTION_VALUE_REGNO_P\n+#define TARGET_FUNCTION_VALUE_REGNO_P xstormy16_function_value_regno_p\n \n #undef  TARGET_MACHINE_DEPENDENT_REORG\n #define TARGET_MACHINE_DEPENDENT_REORG xstormy16_reorg"}, {"sha": "daec8a2b3c6a9deab0db4b6f0a771f9ec942ccad", "filename": "gcc/config/stormy16/stormy16.h", "status": "modified", "additions": 0, "deletions": 7, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/998871e99f606ee7c70f86e3e4edaeb0fecf88a8/gcc%2Fconfig%2Fstormy16%2Fstormy16.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/998871e99f606ee7c70f86e3e4edaeb0fecf88a8/gcc%2Fconfig%2Fstormy16%2Fstormy16.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fstormy16%2Fstormy16.h?ref=998871e99f606ee7c70f86e3e4edaeb0fecf88a8", "patch": "@@ -319,13 +319,6 @@ enum reg_class\n /* The number of the hard register that is used to return a scalar value from a\n    function call.  */\n #define RETURN_VALUE_REGNUM\tFIRST_ARGUMENT_REGISTER\n-     \n-#define FUNCTION_VALUE(VALTYPE, FUNC) \\\n-  xstormy16_function_value (VALTYPE, FUNC)\n-\n-#define LIBCALL_VALUE(MODE) gen_rtx_REG (MODE, RETURN_VALUE_REGNUM)\n-\n-#define FUNCTION_VALUE_REGNO_P(REGNO) ((REGNO) == RETURN_VALUE_REGNUM)\n \n \f\n /* Function Entry and Exit.  */"}]}