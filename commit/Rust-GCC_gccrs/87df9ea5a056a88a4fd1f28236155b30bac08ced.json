{"sha": "87df9ea5a056a88a4fd1f28236155b30bac08ced", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODdkZjllYTVhMDU2YTg4YTRmZDFmMjgyMzYxNTViMzBiYWMwOGNlZA==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2010-09-03T14:46:39Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2010-09-03T14:46:39Z"}, "message": "re PR middle-end/45484 (Invalid memory access in gcc.c-torture/execute/builtins/sprintf-chk.c)\n\n\tPR middle-end/45484\n\t* dwarf2out.c (flush_queued_reg_saves): Rename to...\n\t(dwarf2out_flush_queued_reg_saves): ... this.  No longer static.\n\t(dwarf2out_frame_debug_expr, dwarf2out_frame_debug): Adjust callers.\n\t* dwarf2out.h (dwarf2out_flush_queued_reg_saves): New prototype.\n\t* config/i386/i386.c (output_set_got): Call it.\n\nFrom-SVN: r163823", "tree": {"sha": "34695d8a7b5cea828396ff58d0246f0b55ae0485", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/34695d8a7b5cea828396ff58d0246f0b55ae0485"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/87df9ea5a056a88a4fd1f28236155b30bac08ced", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/87df9ea5a056a88a4fd1f28236155b30bac08ced", "html_url": "https://github.com/Rust-GCC/gccrs/commit/87df9ea5a056a88a4fd1f28236155b30bac08ced", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/87df9ea5a056a88a4fd1f28236155b30bac08ced/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "15a54c10cb41f5a84583f7359c347706a6b90c5d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/15a54c10cb41f5a84583f7359c347706a6b90c5d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/15a54c10cb41f5a84583f7359c347706a6b90c5d"}], "stats": {"total": 31, "additions": 17, "deletions": 14}, "files": [{"sha": "b527fe0247de9a15de12ae7ed1b51d1d24344b62", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/87df9ea5a056a88a4fd1f28236155b30bac08ced/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/87df9ea5a056a88a4fd1f28236155b30bac08ced/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=87df9ea5a056a88a4fd1f28236155b30bac08ced", "patch": "@@ -1,3 +1,12 @@\n+2010-09-03  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR middle-end/45484\n+\t* dwarf2out.c (flush_queued_reg_saves): Rename to...\n+\t(dwarf2out_flush_queued_reg_saves): ... this.  No longer static.\n+\t(dwarf2out_frame_debug_expr, dwarf2out_frame_debug): Adjust callers.\n+\t* dwarf2out.h (dwarf2out_flush_queued_reg_saves): New prototype.\n+\t* config/i386/i386.c (output_set_got): Call it.\n+\n 2010-09-03  Michael Matz  <matz@suse.de>\n \n \tPR middle-end/45415"}, {"sha": "3a8484aeca46b542cf72f4d942b2b03882bcad6e", "filename": "gcc/config/i386/i386.c", "status": "modified", "additions": 1, "deletions": 7, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/87df9ea5a056a88a4fd1f28236155b30bac08ced/gcc%2Fconfig%2Fi386%2Fi386.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/87df9ea5a056a88a4fd1f28236155b30bac08ced/gcc%2Fconfig%2Fi386%2Fi386.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.c?ref=87df9ea5a056a88a4fd1f28236155b30bac08ced", "patch": "@@ -8119,13 +8119,7 @@ output_set_got (rtx dest, rtx label ATTRIBUTE_UNUSED)\n       /* Ensure all queued register saves are flushed before the\n \t call.  */\n       if (dwarf2out_do_frame ())\n-\t{\n-\t  rtx insn;\n-\t  start_sequence ();\n-\t  insn = emit_barrier ();\n-\t  end_sequence ();\n-\t  dwarf2out_frame_debug (insn, false);\n-\t}\n+\tdwarf2out_flush_queued_reg_saves ();\n #endif\n       xops[2] = gen_rtx_SYMBOL_REF (Pmode, ggc_strdup (name));\n       xops[2] = gen_rtx_MEM (QImode, xops[2]);"}, {"sha": "31d44130b307405e7d132282ee91e1ebbebe882d", "filename": "gcc/dwarf2out.c", "status": "modified", "additions": 6, "deletions": 7, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/87df9ea5a056a88a4fd1f28236155b30bac08ced/gcc%2Fdwarf2out.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/87df9ea5a056a88a4fd1f28236155b30bac08ced/gcc%2Fdwarf2out.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdwarf2out.c?ref=87df9ea5a056a88a4fd1f28236155b30bac08ced", "patch": "@@ -471,7 +471,6 @@ static void output_cfi (dw_cfi_ref, dw_fde_ref, int);\n static void output_cfi_directive (dw_cfi_ref);\n static void output_call_frame_info (int);\n static void dwarf2out_note_section_used (void);\n-static void flush_queued_reg_saves (void);\n static bool clobbers_queued_reg_save (const_rtx);\n static void dwarf2out_frame_debug_expr (rtx, const char *);\n \n@@ -1712,8 +1711,8 @@ queue_reg_save (const char *label, rtx reg, rtx sreg, HOST_WIDE_INT offset)\n \n /* Output all the entries in QUEUED_REG_SAVES.  */\n \n-static void\n-flush_queued_reg_saves (void)\n+void\n+dwarf2out_flush_queued_reg_saves (void)\n {\n   struct queued_reg_save *q;\n \n@@ -2458,7 +2457,7 @@ dwarf2out_frame_debug_expr (rtx expr, const char *label)\n             {\n \t      /* We interpret reg_save differently with stack_realign set.\n \t\t Thus we must flush whatever we have queued first.  */\n-\t      flush_queued_reg_saves ();\n+\t      dwarf2out_flush_queued_reg_saves ();\n \n               gcc_assert (cfa_store.reg == REGNO (XEXP (src, 0)));\n               fde->stack_realign = 1;\n@@ -2705,7 +2704,7 @@ dwarf2out_frame_debug (rtx insn, bool after_p)\n       size_t i;\n \n       /* Flush any queued register saves.  */\n-      flush_queued_reg_saves ();\n+      dwarf2out_flush_queued_reg_saves ();\n \n       /* Set up state for generating call frame debug info.  */\n       lookup_cfa (&cfa);\n@@ -2733,7 +2732,7 @@ dwarf2out_frame_debug (rtx insn, bool after_p)\n     }\n \n   if (!NONJUMP_INSN_P (insn) || clobbers_queued_reg_save (insn))\n-    flush_queued_reg_saves ();\n+    dwarf2out_flush_queued_reg_saves ();\n \n   if (!RTX_FRAME_RELATED_P (insn))\n     {\n@@ -2841,7 +2840,7 @@ dwarf2out_frame_debug (rtx insn, bool after_p)\n      We could probably check just once, here, but this is safer than\n      removing the check above.  */\n   if (clobbers_queued_reg_save (insn))\n-    flush_queued_reg_saves ();\n+    dwarf2out_flush_queued_reg_saves ();\n }\n \n /* Determine if we need to save and restore CFI information around this"}, {"sha": "d5b958dd66ca17db52322a0a24b53fb224be4d56", "filename": "gcc/dwarf2out.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/87df9ea5a056a88a4fd1f28236155b30bac08ced/gcc%2Fdwarf2out.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/87df9ea5a056a88a4fd1f28236155b30bac08ced/gcc%2Fdwarf2out.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdwarf2out.h?ref=87df9ea5a056a88a4fd1f28236155b30bac08ced", "patch": "@@ -22,6 +22,7 @@ extern void dwarf2out_decl (tree);\n extern void dwarf2out_frame_debug (rtx, bool);\n extern void dwarf2out_cfi_begin_epilogue (rtx);\n extern void dwarf2out_frame_debug_restore_state (void);\n+extern void dwarf2out_flush_queued_reg_saves (void);\n \n extern void debug_dwarf (void);\n struct die_struct;"}]}