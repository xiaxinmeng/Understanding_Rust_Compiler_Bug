{"sha": "bd459cb6ab900df00b20dc018126bc5bc2574b43", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmQ0NTljYjZhYjkwMGRmMDBiMjBkYzAxODEyNmJjNWJjMjU3NGI0Mw==", "commit": {"author": {"name": "H.J. Lu", "email": "hongjiu.lu@intel.com", "date": "2008-09-30T00:32:29Z"}, "committer": {"name": "H.J. Lu", "email": "hjl@gcc.gnu.org", "date": "2008-09-30T00:32:29Z"}, "message": "i386.opt: Add msse2avx.\n\n2008-09-29  H.J. Lu  <hongjiu.lu@intel.com>\n\n\t* config/i386/i386.opt: Add msse2avx.\n\n\t* config/i386/linux.h (ASM_SPEC): New.  Support -msse2avx.\n\t* config/i386/linux64.h (ASM_SPEC): Likewise.\n\n\t* doc/invoke.texi: Document -msse2avx.\n\nFrom-SVN: r140774", "tree": {"sha": "7f00552ffe0fb7f2bb9dd52b5f2a4be7c7f88bf6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7f00552ffe0fb7f2bb9dd52b5f2a4be7c7f88bf6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/bd459cb6ab900df00b20dc018126bc5bc2574b43", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bd459cb6ab900df00b20dc018126bc5bc2574b43", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bd459cb6ab900df00b20dc018126bc5bc2574b43", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bd459cb6ab900df00b20dc018126bc5bc2574b43/comments", "author": {"login": "hjl-tools", "id": 1072356, "node_id": "MDQ6VXNlcjEwNzIzNTY=", "avatar_url": "https://avatars.githubusercontent.com/u/1072356?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hjl-tools", "html_url": "https://github.com/hjl-tools", "followers_url": "https://api.github.com/users/hjl-tools/followers", "following_url": "https://api.github.com/users/hjl-tools/following{/other_user}", "gists_url": "https://api.github.com/users/hjl-tools/gists{/gist_id}", "starred_url": "https://api.github.com/users/hjl-tools/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hjl-tools/subscriptions", "organizations_url": "https://api.github.com/users/hjl-tools/orgs", "repos_url": "https://api.github.com/users/hjl-tools/repos", "events_url": "https://api.github.com/users/hjl-tools/events{/privacy}", "received_events_url": "https://api.github.com/users/hjl-tools/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "78bf333c16aa2bca5926f23858d1d7b2ee589705", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/78bf333c16aa2bca5926f23858d1d7b2ee589705", "html_url": "https://github.com/Rust-GCC/gccrs/commit/78bf333c16aa2bca5926f23858d1d7b2ee589705"}], "stats": {"total": 31, "additions": 30, "deletions": 1}, "files": [{"sha": "5a9b48249dc5c66543e5947c3c8e8df78ddac13a", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bd459cb6ab900df00b20dc018126bc5bc2574b43/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bd459cb6ab900df00b20dc018126bc5bc2574b43/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=bd459cb6ab900df00b20dc018126bc5bc2574b43", "patch": "@@ -1,3 +1,12 @@\n+2008-09-29  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\t* config/i386/i386.opt: Add msse2avx.\n+\n+\t* config/i386/linux.h (ASM_SPEC): New.  Support -msse2avx.\n+\t* config/i386/linux64.h (ASM_SPEC): Likewise.\n+\n+\t* doc/invoke.texi: Document -msse2avx.\n+\n 2008-09-29  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* dwarf2out.c (constant_size): Use HOST_WIDE_INT in parameter type."}, {"sha": "406727139c8a995c0f5907f78a7329e084c93961", "filename": "gcc/config/i386/i386.opt", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bd459cb6ab900df00b20dc018126bc5bc2574b43/gcc%2Fconfig%2Fi386%2Fi386.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bd459cb6ab900df00b20dc018126bc5bc2574b43/gcc%2Fconfig%2Fi386%2Fi386.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.opt?ref=bd459cb6ab900df00b20dc018126bc5bc2574b43", "patch": "@@ -338,3 +338,7 @@ Support AES built-in functions and code generation\n mpclmul\n Target Report Mask(ISA_PCLMUL) Var(ix86_isa_flags) VarExists Save\n Support PCLMUL built-in functions and code generation\n+\n+msse2avx\n+Target Report Var(ix86_sse2avx)\n+Encode SSE instructions with VEX prefix"}, {"sha": "ca9a136b3e5b44563950c2a095cf024d14704c0c", "filename": "gcc/config/i386/linux.h", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bd459cb6ab900df00b20dc018126bc5bc2574b43/gcc%2Fconfig%2Fi386%2Flinux.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bd459cb6ab900df00b20dc018126bc5bc2574b43/gcc%2Fconfig%2Fi386%2Flinux.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Flinux.h?ref=bd459cb6ab900df00b20dc018126bc5bc2574b43", "patch": "@@ -102,6 +102,11 @@ along with GCC; see the file COPYING3.  If not see\n #define LINK_EMULATION \"elf_i386\"\n #define GLIBC_DYNAMIC_LINKER \"/lib/ld-linux.so.2\"\n \n+#undef  ASM_SPEC\n+#define ASM_SPEC \\\n+  \"%{v:-V} %{Qy:} %{!Qn:-Qy} %{n} %{T} %{Ym,*} %{Yd,*} %{Wa,*:%*} \\\n+  %{!mno-sse2avx:%{mavx:-msse2avx}} %{msse2avx:%{!mavx:-msse2avx}}\"\n+\n #undef  SUBTARGET_EXTRA_SPECS\n #define SUBTARGET_EXTRA_SPECS \\\n   { \"link_emulation\", LINK_EMULATION },\\"}, {"sha": "88c875a098065bfb8080e55134292df8bba19e8c", "filename": "gcc/config/i386/linux64.h", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bd459cb6ab900df00b20dc018126bc5bc2574b43/gcc%2Fconfig%2Fi386%2Flinux64.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bd459cb6ab900df00b20dc018126bc5bc2574b43/gcc%2Fconfig%2Fi386%2Flinux64.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Flinux64.h?ref=bd459cb6ab900df00b20dc018126bc5bc2574b43", "patch": "@@ -56,6 +56,11 @@ along with GCC; see the file COPYING3.  If not see\n #define GLIBC_DYNAMIC_LINKER32 \"/lib/ld-linux.so.2\"\n #define GLIBC_DYNAMIC_LINKER64 \"/lib64/ld-linux-x86-64.so.2\"\n \n+#undef ASM_SPEC\n+#define ASM_SPEC \"%{v:-V} %{Qy:} %{!Qn:-Qy} %{n} %{T} %{Ym,*} %{Yd,*} \\\n+ %{Wa,*:%*} %{m32:--32} %{m64:--64} \\\n+ %{!mno-sse2avx:%{mavx:-msse2avx}} %{msse2avx:%{!mavx:-msse2avx}}\"\n+\n #if TARGET_64BIT_DEFAULT\n #define SPEC_32 \"m32\"\n #define SPEC_64 \"!m32\""}, {"sha": "62ae31fda461a3c024fa7281b57e0a6b2ea3db8e", "filename": "gcc/doc/invoke.texi", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bd459cb6ab900df00b20dc018126bc5bc2574b43/gcc%2Fdoc%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bd459cb6ab900df00b20dc018126bc5bc2574b43/gcc%2Fdoc%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finvoke.texi?ref=bd459cb6ab900df00b20dc018126bc5bc2574b43", "patch": "@@ -581,7 +581,7 @@ Objective-C and Objective-C++ Dialects}.\n -momit-leaf-frame-pointer  -mno-red-zone -mno-tls-direct-seg-refs @gol\n -mcmodel=@var{code-model} @gol\n -m32  -m64 -mlarge-data-threshold=@var{num} @gol\n--mfused-madd -mno-fused-madd}\n+-mfused-madd -mno-fused-madd -msse2avx}\n \n @emph{IA-64 Options}\n @gccoptlist{-mbig-endian  -mlittle-endian  -mgnu-as  -mgnu-ld  -mno-pic @gol\n@@ -11213,6 +11213,12 @@ Enable automatic generation of fused floating point multiply-add instructions\n if the ISA supports such instructions.  The -mfused-madd option is on by\n default.  The fused multiply-add instructions have a different\n rounding behavior compared to executing a multiply followed by an add.\n+\n+@item -msse2avx\n+@itemx -mno-sse2avx\n+@opindex msse2avx\n+Specify that the assembler should encode SSE instructions with VEX\n+prefix.  The option @option{-mavx} turns this on by default.\n @end table\n \n These @samp{-m} switches are supported in addition to the above"}]}