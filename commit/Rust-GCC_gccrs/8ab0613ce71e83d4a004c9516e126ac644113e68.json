{"sha": "8ab0613ce71e83d4a004c9516e126ac644113e68", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGFiMDYxM2NlNzFlODNkNGEwMDRjOTUxNmUxMjZhYzY0NDExM2U2OA==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1996-02-13T23:11:23Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1996-02-13T23:11:23Z"}, "message": "(convert_move): Fix typo in extendqfh2 case.\n\nFrom-SVN: r11267", "tree": {"sha": "1cffcf2166d224b524890e9810aeaec96f274a27", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1cffcf2166d224b524890e9810aeaec96f274a27"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8ab0613ce71e83d4a004c9516e126ac644113e68", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8ab0613ce71e83d4a004c9516e126ac644113e68", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8ab0613ce71e83d4a004c9516e126ac644113e68", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8ab0613ce71e83d4a004c9516e126ac644113e68/comments", "author": null, "committer": null, "parents": [{"sha": "7d4ea832ef4ac686c1c1f07fde26624a9de07fbe", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7d4ea832ef4ac686c1c1f07fde26624a9de07fbe", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7d4ea832ef4ac686c1c1f07fde26624a9de07fbe"}], "stats": {"total": 4, "additions": 2, "deletions": 2}, "files": [{"sha": "639d9fe1f2488428326fc4bdcf6b1e96c9b62d2d", "filename": "gcc/expr.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8ab0613ce71e83d4a004c9516e126ac644113e68/gcc%2Fexpr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8ab0613ce71e83d4a004c9516e126ac644113e68/gcc%2Fexpr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fexpr.c?ref=8ab0613ce71e83d4a004c9516e126ac644113e68", "patch": "@@ -612,9 +612,9 @@ convert_move (to, from, unsignedp)\n       rtx value;\n \n #ifdef HAVE_extendqfhf2\n-      if (HAVE_extendqfsf2 && from_mode == QFmode && to_mode == HFmode)\n+      if (HAVE_extendqfhf2 && from_mode == QFmode && to_mode == HFmode)\n \t{\n-\t  emit_unop_insn (CODE_FOR_extendqfsf2, to, from, UNKNOWN);\n+\t  emit_unop_insn (CODE_FOR_extendqfhf2, to, from, UNKNOWN);\n \t  return;\n \t}\n #endif"}]}