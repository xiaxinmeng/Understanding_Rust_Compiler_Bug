{"sha": "d685c974fe6ef429c0019254ed2fd65d347ceabc", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDY4NWM5NzRmZTZlZjQyOWMwMDE5MjU0ZWQyZmQ2NWQzNDdjZWFiYw==", "commit": {"author": {"name": "Daniel Jacobowitz", "email": "dan@debian.org", "date": "2004-08-24T00:46:11Z"}, "committer": {"name": "Daniel Jacobowitz", "email": "drow@gcc.gnu.org", "date": "2004-08-24T00:46:11Z"}, "message": "ggc-zone.c (struc alloc_chunk): Rearrange flag bits and SIZE.\n\n\t* ggc-zone.c (struc alloc_chunk): Rearrange flag bits and SIZE.\n\tRemove TYPECODE.\n\t(ggc_alloc_zone_1): Mark TYPE as unused.  Don't save it in the chunk.\n\nFrom-SVN: r86456", "tree": {"sha": "27ff5ccbd60df69edffed8aae8d3ce5a5a79a9a5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/27ff5ccbd60df69edffed8aae8d3ce5a5a79a9a5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d685c974fe6ef429c0019254ed2fd65d347ceabc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d685c974fe6ef429c0019254ed2fd65d347ceabc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d685c974fe6ef429c0019254ed2fd65d347ceabc", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d685c974fe6ef429c0019254ed2fd65d347ceabc/comments", "author": null, "committer": null, "parents": [{"sha": "f676971a92dcc163394d15c819e904cbed2438d6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f676971a92dcc163394d15c819e904cbed2438d6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f676971a92dcc163394d15c819e904cbed2438d6"}], "stats": {"total": 21, "additions": 16, "deletions": 5}, "files": [{"sha": "0e0cc94fa981e3751ac0c17f927423e7ae3fd30d", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d685c974fe6ef429c0019254ed2fd65d347ceabc/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d685c974fe6ef429c0019254ed2fd65d347ceabc/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=d685c974fe6ef429c0019254ed2fd65d347ceabc", "patch": "@@ -1,3 +1,9 @@\n+2004-08-23  Daniel Jacobowitz  <dan@debian.org>\n+\n+\t* ggc-zone.c (struc alloc_chunk): Rearrange flag bits and SIZE.\n+\tRemove TYPECODE.\n+\t(ggc_alloc_zone_1): Mark TYPE as unused.  Don't save it in the chunk.\n+\n 2004-08-23  Eric Christopher  <echristo@redhat.com>\n \n \t* defaults.h (VECTOR_MODE_SUPPORTED_P): Remove macro."}, {"sha": "86fbc281718347999c3a59aad259ac9b63caeae0", "filename": "gcc/ggc-zone.c", "status": "modified", "additions": 10, "deletions": 5, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d685c974fe6ef429c0019254ed2fd65d347ceabc/gcc%2Fggc-zone.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d685c974fe6ef429c0019254ed2fd65d347ceabc/gcc%2Fggc-zone.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fggc-zone.c?ref=d685c974fe6ef429c0019254ed2fd65d347ceabc", "patch": "@@ -146,10 +146,13 @@ struct alloc_chunk {\n   unsigned int magic;\n #endif\n   unsigned int type:1;\n-  unsigned int typecode:14;\n-  unsigned int large:1;\n-  unsigned int size:15;\n   unsigned int mark:1;\n+  unsigned char large;\n+  unsigned short size;\n+  /* Right now, on 32-bit hosts we don't have enough room to save the\n+     typecode unless we make the one remaining flag into a bitfield.\n+     There's a performance cost to that, so we don't do it until we're\n+     ready to use the type information for something.  */\n   union {\n     struct alloc_chunk *next_free;\n     char data[1];\n@@ -594,7 +597,8 @@ free_chunk (struct alloc_chunk *chunk, size_t size, struct alloc_zone *zone)\n /* Allocate a chunk of memory of SIZE bytes.  */\n \n static void *\n-ggc_alloc_zone_1 (size_t orig_size, struct alloc_zone *zone, short type\n+ggc_alloc_zone_1 (size_t orig_size, struct alloc_zone *zone,\n+\t\t  short type ATTRIBUTE_UNUSED\n \t\t  MEM_STAT_DECL)\n {\n   size_t bin = 0;\n@@ -696,7 +700,8 @@ ggc_alloc_zone_1 (size_t orig_size, struct alloc_zone *zone, short type\n #endif\n   chunk->type = 1;\n   chunk->mark = 0;\n-  chunk->typecode = type;\n+  /* We could save TYPE in the chunk, but we don't use that for\n+     anything yet.  */\n   result = chunk->u.data;\n \n #ifdef ENABLE_GC_CHECKING"}]}