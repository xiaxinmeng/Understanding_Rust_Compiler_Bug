{"sha": "935167332d4ee2b0bb173e40a6cf36db53b67d16", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTM1MTY3MzMyZDRlZTJiMGJiMTczZTQwYTZjZjM2ZGI1M2I2N2QxNg==", "commit": {"author": {"name": "Andrew Pinski", "email": "pinskia@physics.uc.edu", "date": "2005-03-04T06:24:09Z"}, "committer": {"name": "Andrew Pinski", "email": "pinskia@gcc.gnu.org", "date": "2005-03-04T06:24:09Z"}, "message": "revert: re PR tree-optimization/15784 (fold misses binary optimization)\n\n2005-03-04  Andrew Pinski  <pinskia@physics.uc.edu>\n\n        Revert for now:\n        2005-03-03  James A. Morrison  <phython@gcc.gnu.org>\n        PR tree-optimization/15784\n        * fold-const.c (fold): Fold ~A + 1 to -1.  Fold -A - 1\n        and -1 - A to ~A.\n\nFrom-SVN: r95880", "tree": {"sha": "f56735cae147ea5b7f7fd4e20aaa0eed733555a6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f56735cae147ea5b7f7fd4e20aaa0eed733555a6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/935167332d4ee2b0bb173e40a6cf36db53b67d16", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/935167332d4ee2b0bb173e40a6cf36db53b67d16", "html_url": "https://github.com/Rust-GCC/gccrs/commit/935167332d4ee2b0bb173e40a6cf36db53b67d16", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/935167332d4ee2b0bb173e40a6cf36db53b67d16/comments", "author": null, "committer": null, "parents": [{"sha": "99ff9e7a1543a94af8e777e0aa4393fdb9cf4b3d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/99ff9e7a1543a94af8e777e0aa4393fdb9cf4b3d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/99ff9e7a1543a94af8e777e0aa4393fdb9cf4b3d"}], "stats": {"total": 23, "additions": 8, "deletions": 15}, "files": [{"sha": "be6abe6e245fe4000af41aea17ef2e56357ec6b6", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/935167332d4ee2b0bb173e40a6cf36db53b67d16/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/935167332d4ee2b0bb173e40a6cf36db53b67d16/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=935167332d4ee2b0bb173e40a6cf36db53b67d16", "patch": "@@ -1,3 +1,11 @@\n+2005-03-04  Andrew Pinski  <pinskia@physics.uc.edu>\n+\n+\tRevert for now:\n+\t2005-03-03  James A. Morrison  <phython@gcc.gnu.org>\n+\tPR tree-optimization/15784\n+\t* fold-const.c (fold): Fold ~A + 1 to -1.  Fold -A - 1\n+\tand -1 - A to ~A.\n+\n 2005-03-04  Ben Elliston  <bje@au.ibm.com>\n \n \t* gcc.c (option_map): Add --coverage."}, {"sha": "517c45d12c16313bd5c482b2240a3bd9ca01e4b7", "filename": "gcc/fold-const.c", "status": "modified", "additions": 0, "deletions": 15, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/935167332d4ee2b0bb173e40a6cf36db53b67d16/gcc%2Ffold-const.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/935167332d4ee2b0bb173e40a6cf36db53b67d16/gcc%2Ffold-const.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffold-const.c?ref=935167332d4ee2b0bb173e40a6cf36db53b67d16", "patch": "@@ -7454,11 +7454,6 @@ fold (tree expr)\n       if (TREE_CODE (arg0) == NEGATE_EXPR\n \t  && reorder_operands_p (TREE_OPERAND (arg0, 0), arg1))\n \treturn fold (build2 (MINUS_EXPR, type, arg1, TREE_OPERAND (arg0, 0)));\n-      /* Convert ~A + 1 to -A.  */\n-      if (INTEGRAL_TYPE_P (type)\n-\t  && TREE_CODE (arg0) == BIT_NOT_EXPR\n-\t  && integer_onep (arg1))\n-\treturn fold (build1 (NEGATE_EXPR, type, TREE_OPERAND (arg0, 0)));\n \n       if (TREE_CODE (type) == COMPLEX_TYPE)\n \t{\n@@ -7897,16 +7892,6 @@ fold (tree expr)\n \t  && reorder_operands_p (arg0, arg1))\n \treturn fold (build2 (MINUS_EXPR, type, negate_expr (arg1),\n \t\t\t     TREE_OPERAND (arg0, 0)));\n-      /* Convert -A - 1 to ~A.  */\n-      if (INTEGRAL_TYPE_P (type)\n-\t  && TREE_CODE (arg0) == NEGATE_EXPR\n-\t  && integer_onep (arg1))\n-\treturn fold (build1 (BIT_NOT_EXPR, type, TREE_OPERAND (arg0, 0)));\n-\n-      /* Convert -1 - A to ~A.  */\n-      if (INTEGRAL_TYPE_P (type)\n-\t  && integer_all_onesp (arg0))\n-\treturn fold (build1 (BIT_NOT_EXPR, type, arg1));\n \n       if (TREE_CODE (type) == COMPLEX_TYPE)\n \t{"}]}