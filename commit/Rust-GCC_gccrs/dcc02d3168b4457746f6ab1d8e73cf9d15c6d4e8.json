{"sha": "dcc02d3168b4457746f6ab1d8e73cf9d15c6d4e8", "node_id": "C_kwDOANBUbNoAKGRjYzAyZDMxNjhiNDQ1Nzc0NmY2YWIxZDhlNzNjZjlkMTVjNmQ0ZTg", "commit": {"author": {"name": "Piotr Trojanek", "email": "trojanek@adacore.com", "date": "2022-09-05T22:24:17Z"}, "committer": {"name": "Marc Poulhi\u00e8s", "email": "poulhies@adacore.com", "date": "2022-11-07T08:36:32Z"}, "message": "ada: Remove redundant suppression for non-modified IN OUT parameters\n\nNon-modified IN OUT parameters are first collected and then filtered by\nexamining uses of their enclosing subprograms. In this filtering we\ndon't need to look again at properties of the formal parameters\nthemselves.\n\nCleanup related to improved detection of references to uninitialized\nobjects; semantics is unaffected.\n\ngcc/ada/\n\n\t* sem_warn.adb\n\t(No_Warn_On_In_Out): For subprograms we can simply call\n\tWarnings_Off.\n\t(Output_Non_Modified_In_Out_Warnings): Remove repeated\n\tsuppression.", "tree": {"sha": "282148096b5d2c989f7b27a041a041508b7751f4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/282148096b5d2c989f7b27a041a041508b7751f4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/dcc02d3168b4457746f6ab1d8e73cf9d15c6d4e8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dcc02d3168b4457746f6ab1d8e73cf9d15c6d4e8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/dcc02d3168b4457746f6ab1d8e73cf9d15c6d4e8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dcc02d3168b4457746f6ab1d8e73cf9d15c6d4e8/comments", "author": {"login": "ptroja", "id": 161602, "node_id": "MDQ6VXNlcjE2MTYwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/161602?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ptroja", "html_url": "https://github.com/ptroja", "followers_url": "https://api.github.com/users/ptroja/followers", "following_url": "https://api.github.com/users/ptroja/following{/other_user}", "gists_url": "https://api.github.com/users/ptroja/gists{/gist_id}", "starred_url": "https://api.github.com/users/ptroja/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ptroja/subscriptions", "organizations_url": "https://api.github.com/users/ptroja/orgs", "repos_url": "https://api.github.com/users/ptroja/repos", "events_url": "https://api.github.com/users/ptroja/events{/privacy}", "received_events_url": "https://api.github.com/users/ptroja/received_events", "type": "User", "site_admin": false}, "committer": {"login": "dkm", "id": 87603, "node_id": "MDQ6VXNlcjg3NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/87603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dkm", "html_url": "https://github.com/dkm", "followers_url": "https://api.github.com/users/dkm/followers", "following_url": "https://api.github.com/users/dkm/following{/other_user}", "gists_url": "https://api.github.com/users/dkm/gists{/gist_id}", "starred_url": "https://api.github.com/users/dkm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dkm/subscriptions", "organizations_url": "https://api.github.com/users/dkm/orgs", "repos_url": "https://api.github.com/users/dkm/repos", "events_url": "https://api.github.com/users/dkm/events{/privacy}", "received_events_url": "https://api.github.com/users/dkm/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2caaa4bf336bce2a7d649aa05f2851d576a26e5e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2caaa4bf336bce2a7d649aa05f2851d576a26e5e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2caaa4bf336bce2a7d649aa05f2851d576a26e5e"}], "stats": {"total": 10, "additions": 4, "deletions": 6}, "files": [{"sha": "1bfa8449ad76803e6608459767a6f6b6e60fc366", "filename": "gcc/ada/sem_warn.adb", "status": "modified", "additions": 4, "deletions": 6, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dcc02d3168b4457746f6ab1d8e73cf9d15c6d4e8/gcc%2Fada%2Fsem_warn.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dcc02d3168b4457746f6ab1d8e73cf9d15c6d4e8/gcc%2Fada%2Fsem_warn.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_warn.adb?ref=dcc02d3168b4457746f6ab1d8e73cf9d15c6d4e8", "patch": "@@ -3006,9 +3006,9 @@ package body Sem_Warn is\n          then\n             return True;\n \n-         --  Else test warnings off\n+         --  Else test warnings off on the subprogram\n \n-         elsif Warnings_Off_Check_Spec (S) then\n+         elsif Warnings_Off (S) then\n             return True;\n \n          --  All tests for suppressing warning failed\n@@ -3029,11 +3029,9 @@ package body Sem_Warn is\n \n          begin\n             --  Suppress warning in specific cases (see details in comments for\n-            --  No_Warn_On_In_Out), or if there is a pragma Unmodified.\n+            --  No_Warn_On_In_Out).\n \n-            if Has_Pragma_Unmodified_Check_Spec (E1)\n-              or else No_Warn_On_In_Out (E1)\n-            then\n+            if No_Warn_On_In_Out (E1) then\n                null;\n \n             --  Here we generate the warning"}]}