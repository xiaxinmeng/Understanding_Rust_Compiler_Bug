{"sha": "ac6dbb1a4042eaa719afbb9c7a02e4f409b8aa75", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWM2ZGJiMWE0MDQyZWFhNzE5YWZiYjljN2EwMmU0ZjQwOWI4YWE3NQ==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2017-02-03T22:36:29Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2017-02-03T22:36:29Z"}, "message": "re PR tree-optimization/79340 (Memory leaks in tree-vect-slp.c)\n\n\tPR tree-optimization/79340\n\t* tree-vect-loop.c (vectorizable_reduction): Release\n\tvec_defs elements after safe_splicing them into other vectors.\n\tFormatting fixes.\n\nFrom-SVN: r245171", "tree": {"sha": "c705e8c944d7a14caa79dc8be29f10a8a040264a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c705e8c944d7a14caa79dc8be29f10a8a040264a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ac6dbb1a4042eaa719afbb9c7a02e4f409b8aa75", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ac6dbb1a4042eaa719afbb9c7a02e4f409b8aa75", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ac6dbb1a4042eaa719afbb9c7a02e4f409b8aa75", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ac6dbb1a4042eaa719afbb9c7a02e4f409b8aa75/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "8a87daca9cc5e0156477d6ad39ca1fd8b8687730", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8a87daca9cc5e0156477d6ad39ca1fd8b8687730", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8a87daca9cc5e0156477d6ad39ca1fd8b8687730"}], "stats": {"total": 23, "additions": 16, "deletions": 7}, "files": [{"sha": "5bfbff585a51c36a3d7c31fae06fb3c3c0c2f3f2", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ac6dbb1a4042eaa719afbb9c7a02e4f409b8aa75/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ac6dbb1a4042eaa719afbb9c7a02e4f409b8aa75/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=ac6dbb1a4042eaa719afbb9c7a02e4f409b8aa75", "patch": "@@ -1,5 +1,10 @@\n 2017-02-03  Jakub Jelinek  <jakub@redhat.com>\n \n+\tPR tree-optimization/79340\n+\t* tree-vect-loop.c (vectorizable_reduction): Release\n+\tvec_defs elements after safe_splicing them into other vectors.\n+\tFormatting fixes.\n+\n \tPR tree-optimization/79327\n \t* gimple-ssa-sprintf.c (adjust_range_for_overflow): If returning\n \ttrue, always set *argmin and *argmax to TYPE_{MIN,MAX}_VALUE of"}, {"sha": "f9b3f5432d8631eac5c3aa3440d0a75b6f5ed0cb", "filename": "gcc/tree-vect-loop.c", "status": "modified", "additions": 11, "deletions": 7, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ac6dbb1a4042eaa719afbb9c7a02e4f409b8aa75/gcc%2Ftree-vect-loop.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ac6dbb1a4042eaa719afbb9c7a02e4f409b8aa75/gcc%2Ftree-vect-loop.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vect-loop.c?ref=ac6dbb1a4042eaa719afbb9c7a02e4f409b8aa75", "patch": "@@ -6172,20 +6172,24 @@ vectorizable_reduction (gimple *stmt, gimple_stmt_iterator *gsi,\n \t  if (slp_node)\n \t    {\n \t      /* Get vec defs for all the operands except the reduction index,\n-\t\tensuring the ordering of the ops in the vector is kept.  */\n+\t\t ensuring the ordering of the ops in the vector is kept.  */\n \t      auto_vec<tree, 3> slp_ops;\n \t      auto_vec<vec<tree>, 3> vec_defs;\n \n-\t      slp_ops.quick_push ((reduc_index == 0) ? NULL : ops[0]);\n-\t      slp_ops.quick_push ((reduc_index == 1) ? NULL : ops[1]);\n+\t      slp_ops.quick_push (reduc_index == 0 ? NULL : ops[0]);\n+\t      slp_ops.quick_push (reduc_index == 1 ? NULL : ops[1]);\n \t      if (op_type == ternary_op)\n-\t\tslp_ops.quick_push ((reduc_index == 2) ? NULL : ops[2]);\n+\t\tslp_ops.quick_push (reduc_index == 2 ? NULL : ops[2]);\n \n \t      vect_get_slp_defs (slp_ops, slp_node, &vec_defs, -1);\n \n-\t      vec_oprnds0.safe_splice (vec_defs[(reduc_index == 0) ? 1 : 0]);\n+\t      vec_oprnds0.safe_splice (vec_defs[reduc_index == 0 ? 1 : 0]);\n+\t      vec_defs[reduc_index == 0 ? 1 : 0].release ();\n \t      if (op_type == ternary_op)\n-\t\tvec_oprnds1.safe_splice (vec_defs[(reduc_index == 2) ? 1 : 2]);\n+\t\t{\n+\t\t  vec_oprnds1.safe_splice (vec_defs[reduc_index == 2 ? 1 : 2]);\n+\t\t  vec_defs[reduc_index == 2 ? 1 : 2].release ();\n+\t\t}\n \t    }\n           else\n \t    {\n@@ -6194,7 +6198,7 @@ vectorizable_reduction (gimple *stmt, gimple_stmt_iterator *gsi,\n               vec_oprnds0.quick_push (loop_vec_def0);\n               if (op_type == ternary_op)\n                {\n-\t\t op1 = (reduc_index == 0) ? ops[2] : ops[1];\n+\t\t op1 = reduc_index == 0 ? ops[2] : ops[1];\n                  loop_vec_def1 = vect_get_vec_def_for_operand (op1, stmt);\n                  vec_oprnds1.quick_push (loop_vec_def1);\n                }"}]}