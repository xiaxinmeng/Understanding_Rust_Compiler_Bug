{"sha": "5e98fba26b73d4a6aad24f34c25e533a10f16b36", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWU5OGZiYTI2YjczZDRhNmFhZDI0ZjM0YzI1ZTUzM2ExMGYxNmIzNg==", "commit": {"author": {"name": "Dhananjay R. Deshpande", "email": "dhananjayd@kpit.com", "date": "2002-08-29T21:26:52Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "2002-08-29T21:26:52Z"}, "message": "h8300.c (shift_alg_hi): Various tweaks to improve performance of HImode shifts.\n\n        * h8300.c (shift_alg_hi): Various tweaks to improve performance\n        of HImode shifts.\n        (get_shift_alg): Corresponding changes.\n\nFrom-SVN: r56665", "tree": {"sha": "26531952318d352240afaa6d93b9b6c1552d68de", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/26531952318d352240afaa6d93b9b6c1552d68de"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5e98fba26b73d4a6aad24f34c25e533a10f16b36", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5e98fba26b73d4a6aad24f34c25e533a10f16b36", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5e98fba26b73d4a6aad24f34c25e533a10f16b36", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5e98fba26b73d4a6aad24f34c25e533a10f16b36/comments", "author": null, "committer": null, "parents": [{"sha": "4385234278e3b3d29b88672b3567829448b4c945", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4385234278e3b3d29b88672b3567829448b4c945", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4385234278e3b3d29b88672b3567829448b4c945"}], "stats": {"total": 48, "additions": 38, "deletions": 10}, "files": [{"sha": "5fca1767049d7e7feb5e6cc3bc40fa3a7d47fa7f", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5e98fba26b73d4a6aad24f34c25e533a10f16b36/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5e98fba26b73d4a6aad24f34c25e533a10f16b36/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=5e98fba26b73d4a6aad24f34c25e533a10f16b36", "patch": "@@ -1,3 +1,9 @@\n+2002-08-29  \"Dhananjay R. Deshpande\" <dhananjayd@kpit.com>\n+\n+\t* h8300.c (shift_alg_hi): Various tweaks to improve performance\n+\tof HImode shifts.\n+\t(get_shift_alg): Corresponding changes.\n+\n 2002-08-29  John David Anglin  <dave@hiauly1.hia.nrc.ca>\n \n \t* som.h (ALWAYS_STRIP_DOTDOT): Define to 1."}, {"sha": "19520db43331fb7d67683bdf240581b1f26b24e2", "filename": "gcc/config/h8300/h8300.c", "status": "modified", "additions": 32, "deletions": 10, "changes": 42, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5e98fba26b73d4a6aad24f34c25e533a10f16b36/gcc%2Fconfig%2Fh8300%2Fh8300.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5e98fba26b73d4a6aad24f34c25e533a10f16b36/gcc%2Fconfig%2Fh8300%2Fh8300.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fh8300%2Fh8300.c?ref=5e98fba26b73d4a6aad24f34c25e533a10f16b36", "patch": "@@ -2213,23 +2213,23 @@ static const enum shift_alg shift_alg_hi[3][3][16] = {\n     /* TARGET_H8300  */\n     /*  0    1    2    3    4    5    6    7  */\n     /*  8    9   10   11   12   13   14   15  */\n+    { INL, INL, INL, INL, INL, INL, INL, SPC,\n+      SPC, SPC, SPC, SPC, SPC, SPC, SPC, SPC }, /* SHIFT_ASHIFT   */\n     { INL, INL, INL, INL, INL, LOP, LOP, SPC,\n-      SPC, SPC, SPC, SPC, SPC, LOP, LOP, SPC }, /* SHIFT_ASHIFT   */\n+      SPC, SPC, SPC, SPC, SPC, SPC, SPC, SPC }, /* SHIFT_LSHIFTRT */\n     { INL, INL, INL, INL, INL, LOP, LOP, SPC,\n-      SPC, SPC, SPC, SPC, SPC, LOP, LOP, SPC }, /* SHIFT_LSHIFTRT */\n-    { INL, INL, INL, INL, INL, LOP, LOP, SPC,\n-      SPC, SPC, SPC, SPC, SPC, LOP, LOP, SPC }, /* SHIFT_ASHIFTRT */\n+      SPC, SPC, SPC, SPC, SPC, SPC, SPC, SPC }, /* SHIFT_ASHIFTRT */\n   },\n   {\n     /* TARGET_H8300H  */\n     /*  0    1    2    3    4    5    6    7  */\n     /*  8    9   10   11   12   13   14   15  */\n-    { INL, INL, INL, INL, INL, LOP, LOP, SPC,\n+    { INL, INL, INL, INL, INL, INL, INL, SPC,\n       SPC, SPC, SPC, SPC, SPC, ROT, ROT, ROT }, /* SHIFT_ASHIFT   */\n-    { INL, INL, INL, INL, INL, LOP, LOP, SPC,\n+    { INL, INL, INL, INL, INL, INL, INL, SPC,\n       SPC, SPC, SPC, SPC, SPC, ROT, ROT, ROT }, /* SHIFT_LSHIFTRT */\n-    { INL, INL, INL, INL, INL, LOP, LOP, SPC,\n-      SPC, SPC, SPC, SPC, SPC, LOP, LOP, SPC }, /* SHIFT_ASHIFTRT */\n+    { INL, INL, INL, INL, INL, INL, INL, SPC,\n+      SPC, SPC, SPC, SPC, SPC, SPC, SPC, SPC }, /* SHIFT_ASHIFTRT */\n   },\n   {\n     /* TARGET_H8300S  */\n@@ -2240,7 +2240,7 @@ static const enum shift_alg shift_alg_hi[3][3][16] = {\n     { INL, INL, INL, INL, INL, INL, INL, INL,\n       SPC, SPC, SPC, SPC, SPC, ROT, ROT, ROT }, /* SHIFT_LSHIFTRT */\n     { INL, INL, INL, INL, INL, INL, INL, INL,\n-      SPC, SPC, SPC, SPC, SPC, LOP, LOP, SPC }, /* SHIFT_ASHIFTRT */\n+      SPC, SPC, SPC, SPC, SPC, SPC, SPC, SPC }, /* SHIFT_ASHIFTRT */\n   }\n };\n \n@@ -2458,7 +2458,7 @@ get_shift_alg (shift_type, shift_mode, count, info)\n \t      goto end;\n \t    }\n \t}\n-      else if (8 <= count && count <= 12)\n+      else if (8 <= count && count <= 13)\n \t{\n \t  info->remainder = count - 8;\n \n@@ -2484,6 +2484,28 @@ get_shift_alg (shift_type, shift_mode, count, info)\n \t      goto end;\n \t    }\n \t}\n+      else if (count == 14)\n+\t{\n+\t  switch (shift_type)\n+\t    {\n+\t    case SHIFT_ASHIFT:\n+\t      if (TARGET_H8300)\n+\t\tinfo->special = \"mov.b\\t%s0,%t0\\n\\trotr.b\\t%t0\\n\\trotr.b\\t%t0\\n\\tand.b\\t#0xC0,%t0\\n\\tsub.b\\t%s0,%s0\";\n+\t      goto end;\n+\t    case SHIFT_LSHIFTRT:\n+\t      if (TARGET_H8300)\n+\t\tinfo->special = \"mov.b\\t%t0,%s0\\n\\trotl.b\\t%s0\\n\\trotl.b\\t%s0\\n\\tand.b\\t#3,%s0\\n\\tsub.b\\t%t0,%t0\";\n+\t      goto end;\n+\t    case SHIFT_ASHIFTRT:\n+\t      if (TARGET_H8300)\n+\t\tinfo->special = \"mov.b\\t%t0,%s0\\n\\tshll.b\\t%s0\\n\\tsubx.b\\t%t0,%t0\\n\\tshll.b\\t%s0\\n\\tmov.b\\t%t0,%s0\\n\\tbst.b\\t#0,%s0\";\n+\t      else if (TARGET_H8300H)\n+\t\tinfo->special = \"shll.b\\t%t0\\n\\tsubx.b\\t%s0,%s0\\n\\tshll.b\\t%t0\\n\\trotxl.b\\t%s0\\n\\texts.w\\t%T0\";\n+\t      else /* TARGET_H8300S */\n+\t\tinfo->special = \"mov.b\\t%t0,%s0\\n\\texts.w\\t%T0\\n\\tshar.w\\t#2,%T0\\n\\tshar.w\\t#2,%T0\\n\\tshar.w\\t#2,%T0\";\n+\t      goto end;\n+\t    }\n+\t}\n       else if (count == 15)\n \t{\n \t  switch (shift_type)"}]}