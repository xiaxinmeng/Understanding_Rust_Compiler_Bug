{"sha": "1c8b4e29cc037130c30a057b0f2b8e92d933276b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWM4YjRlMjljYzAzNzEzMGMzMGEwNTdiMGYyYjhlOTJkOTMzMjc2Yg==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@gcc.gnu.org", "date": "2003-09-10T12:59:36Z"}, "committer": {"name": "Eric Botcazou", "email": "ebotcazou@gcc.gnu.org", "date": "2003-09-10T12:59:36Z"}, "message": "re PR target/11965 (invalid assembler code for a shift << 32 operation)\n\n\tPR target/11965\n\t* config/sparc/sparc.c (sparc_v8plus_shift): Protect against\n\tconstants greater than 63.\n\t* config/sparc/sparc.md (ashlsi3, ashrsi3, lshrsi3): Protect\n\tagainst constants greater than 31.\n\t(*ashldi3_sp64, *ashrdi3_sp64, *lshrdi3_sp64): Protect against\n\tconstants greater than 63.\n\nFrom-SVN: r71266", "tree": {"sha": "966345a8cc85f4aa5a78833b202355d5d1d86690", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/966345a8cc85f4aa5a78833b202355d5d1d86690"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1c8b4e29cc037130c30a057b0f2b8e92d933276b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1c8b4e29cc037130c30a057b0f2b8e92d933276b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1c8b4e29cc037130c30a057b0f2b8e92d933276b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1c8b4e29cc037130c30a057b0f2b8e92d933276b/comments", "author": null, "committer": null, "parents": [{"sha": "80e46d778a7038aaed9b5bdee838cf5dca279d7e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/80e46d778a7038aaed9b5bdee838cf5dca279d7e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/80e46d778a7038aaed9b5bdee838cf5dca279d7e"}], "stats": {"total": 75, "additions": 69, "deletions": 6}, "files": [{"sha": "bac59f1963f6a250e7a8d0f1e4e8a95838074b38", "filename": "gcc/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1c8b4e29cc037130c30a057b0f2b8e92d933276b/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1c8b4e29cc037130c30a057b0f2b8e92d933276b/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=1c8b4e29cc037130c30a057b0f2b8e92d933276b", "patch": "@@ -1,3 +1,13 @@\n+2003-09-10  Martin Husemann  <martin@duskware.de>\n+\n+\tPR target/11965\n+\t* config/sparc/sparc.c (sparc_v8plus_shift): Protect against\n+\tconstants greater than 63.\n+\t* config/sparc/sparc.md (ashlsi3, ashrsi3, lshrsi3): Protect\n+\tagainst constants greater than 31.\n+\t(*ashldi3_sp64, *ashrdi3_sp64, *lshrdi3_sp64): Protect against\n+\tconstants greater than 63.\n+\n 2003-09-09  Richard Henderson  <rth@redhat.com>\n \n \t* cgraphunit.c (cgraph_finalize_function): Remove unused argument."}, {"sha": "4c4ea63325ad78b3af3c4b303d1c9f9b0f93d191", "filename": "gcc/config/sparc/sparc.c", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1c8b4e29cc037130c30a057b0f2b8e92d933276b/gcc%2Fconfig%2Fsparc%2Fsparc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1c8b4e29cc037130c30a057b0f2b8e92d933276b/gcc%2Fconfig%2Fsparc%2Fsparc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsparc%2Fsparc.c?ref=1c8b4e29cc037130c30a057b0f2b8e92d933276b", "patch": "@@ -8302,6 +8302,10 @@ sparc_v8plus_shift (rtx *operands, rtx insn, const char *opcode)\n   if (which_alternative != 2)\n     operands[3] = operands[0];\n \n+  /* We can only shift by constants <= 63. */\n+  if (GET_CODE (operands[2]) == CONST_INT)\n+    operands[2] = GEN_INT (INTVAL (operands[2]) & 0x3f);\n+\n   if (GET_CODE (operands[1]) == CONST_INT)\n     {\n       output_asm_insn (\"mov\\t%1, %3\", operands);"}, {"sha": "a987041af81ceab369229d469f0b42b83f762c06", "filename": "gcc/config/sparc/sparc.md", "status": "modified", "additions": 27, "deletions": 6, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1c8b4e29cc037130c30a057b0f2b8e92d933276b/gcc%2Fconfig%2Fsparc%2Fsparc.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1c8b4e29cc037130c30a057b0f2b8e92d933276b/gcc%2Fconfig%2Fsparc%2Fsparc.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsparc%2Fsparc.md?ref=1c8b4e29cc037130c30a057b0f2b8e92d933276b", "patch": "@@ -6908,6 +6908,8 @@\n {\n   if (operands[2] == const1_rtx)\n     return \"add\\t%1, %1, %0\";\n+  if (GET_CODE (operands[2]) == CONST_INT)\n+    operands[2] = GEN_INT (INTVAL (operands[2]) & 0x1f);\n   return \"sll\\t%1, %2, %0\";\n }\n   [(set (attr \"type\")\n@@ -6937,6 +6939,8 @@\n {\n   if (operands[2] == const1_rtx)\n     return \"add\\t%1, %1, %0\";\n+  if (GET_CODE (operands[2]) == CONST_INT)\n+    operands[2] = GEN_INT (INTVAL (operands[2]) & 0x3f);\n   return \"sllx\\t%1, %2, %0\";\n }\n   [(set (attr \"type\")\n@@ -6996,7 +7000,11 @@\n \t(ashiftrt:SI (match_operand:SI 1 \"register_operand\" \"r\")\n \t\t     (match_operand:SI 2 \"arith_operand\" \"rI\")))]\n   \"\"\n-  \"sra\\t%1, %2, %0\"\n+  {\n+     if (GET_CODE (operands[2]) == CONST_INT)\n+       operands[2] = GEN_INT (INTVAL (operands[2]) & 0x1f);\n+     return \"sra\\t%1, %2, %0\";\n+  }\n   [(set_attr \"type\" \"shift\")])\n \n (define_insn \"*ashrsi3_extend\"\n@@ -7043,12 +7051,17 @@\n     }\n })\n \n-(define_insn \"\"\n+(define_insn \"*ashrdi3_sp64\"\n   [(set (match_operand:DI 0 \"register_operand\" \"=r\")\n \t(ashiftrt:DI (match_operand:DI 1 \"register_operand\" \"r\")\n \t\t     (match_operand:SI 2 \"arith_operand\" \"rI\")))]\n   \"TARGET_ARCH64\"\n-  \"srax\\t%1, %2, %0\"\n+  \n+  {\n+    if (GET_CODE (operands[2]) == CONST_INT)\n+      operands[2] = GEN_INT (INTVAL (operands[2]) & 0x3f);\n+    return \"srax\\t%1, %2, %0\";\n+  }\n   [(set_attr \"type\" \"shift\")])\n \n ;; XXX\n@@ -7067,7 +7080,11 @@\n \t(lshiftrt:SI (match_operand:SI 1 \"register_operand\" \"r\")\n \t\t     (match_operand:SI 2 \"arith_operand\" \"rI\")))]\n   \"\"\n-  \"srl\\t%1, %2, %0\"\n+  {\n+    if (GET_CODE (operands[2]) == CONST_INT)\n+      operands[2] = GEN_INT (INTVAL (operands[2]) & 0x1f);\n+    return \"srl\\t%1, %2, %0\";\n+  }\n   [(set_attr \"type\" \"shift\")])\n \n ;; This handles the case where\n@@ -7124,12 +7141,16 @@\n     }\n })\n \n-(define_insn \"\"\n+(define_insn \"*lshrdi3_sp64\"\n   [(set (match_operand:DI 0 \"register_operand\" \"=r\")\n \t(lshiftrt:DI (match_operand:DI 1 \"register_operand\" \"r\")\n \t\t     (match_operand:SI 2 \"arith_operand\" \"rI\")))]\n   \"TARGET_ARCH64\"\n-  \"srlx\\t%1, %2, %0\"\n+  {\n+    if (GET_CODE (operands[2]) == CONST_INT)\n+      operands[2] = GEN_INT (INTVAL (operands[2]) & 0x3f);\n+    return \"srlx\\t%1, %2, %0\";\n+  }\n   [(set_attr \"type\" \"shift\")])\n \n ;; XXX"}, {"sha": "db6cc0d371de27e43abbe8e5b54ae00f1c29fcb4", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1c8b4e29cc037130c30a057b0f2b8e92d933276b/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1c8b4e29cc037130c30a057b0f2b8e92d933276b/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=1c8b4e29cc037130c30a057b0f2b8e92d933276b", "patch": "@@ -1,3 +1,6 @@\n+2003-09-10  Eric Botcazou  <ebotcazou@libertysurf.fr>\n+\n+\t* gcc.dg/ultrasp10.c: New test.\n \n 2003-09-09  Devang Patel  <dpatel@apple.com>\n "}, {"sha": "ffa3229fa4f26f4c00115095c37e51d4807870e3", "filename": "gcc/testsuite/gcc.dg/ultrasp10.c", "status": "added", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1c8b4e29cc037130c30a057b0f2b8e92d933276b/gcc%2Ftestsuite%2Fgcc.dg%2Fultrasp10.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1c8b4e29cc037130c30a057b0f2b8e92d933276b/gcc%2Ftestsuite%2Fgcc.dg%2Fultrasp10.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fultrasp10.c?ref=1c8b4e29cc037130c30a057b0f2b8e92d933276b", "patch": "@@ -0,0 +1,25 @@\n+/* PR target/11965 */\n+/* Originator: <jk@tools.de> */\n+/* { dg-do run { target sparc*-*-* } } */\n+/* { dg-options \"-O -mcpu=ultrasparc\" } */\n+\n+/* This used to fail on 32-bit Ultrasparc because GCC emitted\n+   an invalid shift instruction.  */\n+\n+\n+static inline unsigned int shift(int n, unsigned int value)\n+{\n+  return value << n;\n+}\n+\n+unsigned int val = 1;\n+\n+int main(void)\n+{\n+  int i;\n+\n+  for (i = 0; i < 4; i++)\n+    val = shift(32, val);\n+\n+  return 0;\n+}"}]}