{"sha": "d9930d55ad31d35abe3a3a1b2d2c4a8b677ed4a9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDk5MzBkNTVhZDMxZDM1YWJlM2EzYTFiMmQyYzRhOGI2NzdlZDRhOQ==", "commit": {"author": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2011-09-13T18:24:45Z"}, "committer": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2011-09-13T18:24:45Z"}, "message": "Fix inheriting hidden methods with arguments of hidden type.\n\nFrom-SVN: r178827", "tree": {"sha": "85ad0452783a9f4f381dc32dd0baab514c83a916", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/85ad0452783a9f4f381dc32dd0baab514c83a916"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d9930d55ad31d35abe3a3a1b2d2c4a8b677ed4a9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d9930d55ad31d35abe3a3a1b2d2c4a8b677ed4a9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d9930d55ad31d35abe3a3a1b2d2c4a8b677ed4a9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d9930d55ad31d35abe3a3a1b2d2c4a8b677ed4a9/comments", "author": null, "committer": null, "parents": [{"sha": "61c4c1504980a97e4689209640fa6be3e9d7f0e3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/61c4c1504980a97e4689209640fa6be3e9d7f0e3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/61c4c1504980a97e4689209640fa6be3e9d7f0e3"}], "stats": {"total": 30, "additions": 23, "deletions": 7}, "files": [{"sha": "b0be4834e50552b18ccd31e1b79882dd7d8b131d", "filename": "gcc/go/gofrontend/expressions.cc", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d9930d55ad31d35abe3a3a1b2d2c4a8b677ed4a9/gcc%2Fgo%2Fgofrontend%2Fexpressions.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d9930d55ad31d35abe3a3a1b2d2c4a8b677ed4a9/gcc%2Fgo%2Fgofrontend%2Fexpressions.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgo%2Fgofrontend%2Fexpressions.cc?ref=d9930d55ad31d35abe3a3a1b2d2c4a8b677ed4a9", "patch": "@@ -9239,7 +9239,13 @@ Call_expression::check_argument_type(int i, const Type* parameter_type,\n \t\t\t\t     bool issued_error)\n {\n   std::string reason;\n-  if (!Type::are_assignable(parameter_type, argument_type, &reason))\n+  bool ok;\n+  if (this->are_hidden_fields_ok_)\n+    ok = Type::are_assignable_hidden_ok(parameter_type, argument_type,\n+\t\t\t\t\t&reason);\n+  else\n+    ok = Type::are_assignable(parameter_type, argument_type, &reason);\n+  if (!ok)\n     {\n       if (!issued_error)\n \t{"}, {"sha": "c6ae12ce048808236dee5475a9f7a32f90460026", "filename": "gcc/go/gofrontend/expressions.h", "status": "modified", "additions": 12, "deletions": 2, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d9930d55ad31d35abe3a3a1b2d2c4a8b677ed4a9/gcc%2Fgo%2Fgofrontend%2Fexpressions.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d9930d55ad31d35abe3a3a1b2d2c4a8b677ed4a9/gcc%2Fgo%2Fgofrontend%2Fexpressions.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgo%2Fgofrontend%2Fexpressions.h?ref=d9930d55ad31d35abe3a3a1b2d2c4a8b677ed4a9", "patch": "@@ -1198,8 +1198,9 @@ class Call_expression : public Expression\n \t\t  source_location location)\n     : Expression(EXPRESSION_CALL, location),\n       fn_(fn), args_(args), type_(NULL), results_(NULL), tree_(NULL),\n-      is_varargs_(is_varargs), varargs_are_lowered_(false),\n-      types_are_determined_(false), is_deferred_(false), issued_error_(false)\n+      is_varargs_(is_varargs), are_hidden_fields_ok_(false),\n+      varargs_are_lowered_(false), types_are_determined_(false),\n+      is_deferred_(false), issued_error_(false)\n   { }\n \n   // The function to call.\n@@ -1249,6 +1250,12 @@ class Call_expression : public Expression\n   set_varargs_are_lowered()\n   { this->varargs_are_lowered_ = true; }\n \n+  // Note that it is OK for this call to set hidden fields when\n+  // passing arguments.\n+  void\n+  set_hidden_fields_are_ok()\n+  { this->are_hidden_fields_ok_ = true; }\n+\n   // Whether this call is being deferred.\n   bool\n   is_deferred() const\n@@ -1350,6 +1357,9 @@ class Call_expression : public Expression\n   tree tree_;\n   // True if the last argument is a varargs argument (f(a...)).\n   bool is_varargs_;\n+  // True if this statement may pass hidden fields in the arguments.\n+  // This is used for generated method stubs.\n+  bool are_hidden_fields_ok_;\n   // True if varargs have already been lowered.\n   bool varargs_are_lowered_;\n   // True if types have been determined."}, {"sha": "a22090a5fe923337590c8b86322b09a1fb446278", "filename": "gcc/go/gofrontend/statements.h", "status": "modified", "additions": 3, "deletions": 4, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d9930d55ad31d35abe3a3a1b2d2c4a8b677ed4a9/gcc%2Fgo%2Fgofrontend%2Fstatements.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d9930d55ad31d35abe3a3a1b2d2c4a8b677ed4a9/gcc%2Fgo%2Fgofrontend%2Fstatements.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgo%2Fgofrontend%2Fstatements.h?ref=d9930d55ad31d35abe3a3a1b2d2c4a8b677ed4a9", "patch": "@@ -490,8 +490,7 @@ class Temporary_statement : public Statement\n   Type*\n   type() const;\n \n-  // Note that it is OK for this return statement to set hidden\n-  // fields.\n+  // Note that it is OK for this statement to set hidden fields.\n   void\n   set_hidden_fields_are_ok()\n   { this->are_hidden_fields_ok_ = true; }\n@@ -533,8 +532,8 @@ class Temporary_statement : public Statement\n   Expression* init_;\n   // The backend representation of the temporary variable.\n   Bvariable* bvariable_;\n-  // True if this statement may pass hidden fields in the return\n-  // value.  This is used for generated method stubs.\n+  // True if this statement may set hidden fields when assigning the\n+  // value to the temporary.  This is used for generated method stubs.\n   bool are_hidden_fields_ok_;\n   // True if something takes the address of this temporary variable.\n   bool is_address_taken_;"}, {"sha": "453e741e2cf5cb35934d3ed14bf7aa7c521aa55b", "filename": "gcc/go/gofrontend/types.cc", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d9930d55ad31d35abe3a3a1b2d2c4a8b677ed4a9/gcc%2Fgo%2Fgofrontend%2Ftypes.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d9930d55ad31d35abe3a3a1b2d2c4a8b677ed4a9/gcc%2Fgo%2Fgofrontend%2Ftypes.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgo%2Fgofrontend%2Ftypes.cc?ref=d9930d55ad31d35abe3a3a1b2d2c4a8b677ed4a9", "patch": "@@ -7401,6 +7401,7 @@ Type::build_one_stub_method(Gogo* gogo, Method* method,\n   go_assert(func != NULL);\n   Call_expression* call = Expression::make_call(func, arguments, is_varargs,\n \t\t\t\t\t\tlocation);\n+  call->set_hidden_fields_are_ok();\n   size_t count = call->result_count();\n   if (count == 0)\n     gogo->add_statement(Statement::make_statement(call));"}]}