{"sha": "b7cb4a617fd5fd4ec69eedf3790f5c9ef836f0d7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjdjYjRhNjE3ZmQ1ZmQ0ZWM2OWVlZGYzNzkwZjVjOWVmODM2ZjBkNw==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2014-01-29T15:37:54Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2014-01-29T15:37:54Z"}, "message": "[multiple changes]\n\n2014-01-29  Javier Miranda  <miranda@adacore.com>\n\n\t* exp_ch3.adb (Predefined_Primitive_Bodies): Complete the code\n\tthat checks if an interface types defines the predefined \"=\"\n\tfunction because the compiler was erroneously not generating the\n\tpredefined \"=\" primitive as soon as the name of some interface\n\tprimitive is \"=\" (formals were not checked).\n\n2014-01-29  Ed Schonberg  <schonberg@adacore.com>\n\n\t* expander.adb (Expander): In GNATprove mode, do not process\n\ttransient scopes: they are in general not created in this mode,\n\tand an attempt to examine them will lead to constraint errors when\n\tprocessing configuration pragmas that have analyzable expressions.\n\nFrom-SVN: r207256", "tree": {"sha": "ecb4a0ed4260a6765f4005605459ca34b415b40b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ecb4a0ed4260a6765f4005605459ca34b415b40b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b7cb4a617fd5fd4ec69eedf3790f5c9ef836f0d7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b7cb4a617fd5fd4ec69eedf3790f5c9ef836f0d7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b7cb4a617fd5fd4ec69eedf3790f5c9ef836f0d7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b7cb4a617fd5fd4ec69eedf3790f5c9ef836f0d7/comments", "author": null, "committer": null, "parents": [{"sha": "35d4d8995a18522fc25763457e7b2efbc2d05089", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/35d4d8995a18522fc25763457e7b2efbc2d05089", "html_url": "https://github.com/Rust-GCC/gccrs/commit/35d4d8995a18522fc25763457e7b2efbc2d05089"}], "stats": {"total": 29, "additions": 29, "deletions": 0}, "files": [{"sha": "1d0515d3cbfe92ad85c3b143c95f2f3a9d615074", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b7cb4a617fd5fd4ec69eedf3790f5c9ef836f0d7/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b7cb4a617fd5fd4ec69eedf3790f5c9ef836f0d7/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=b7cb4a617fd5fd4ec69eedf3790f5c9ef836f0d7", "patch": "@@ -1,3 +1,18 @@\n+2014-01-29  Javier Miranda  <miranda@adacore.com>\n+\n+\t* exp_ch3.adb (Predefined_Primitive_Bodies): Complete the code\n+\tthat checks if an interface types defines the predefined \"=\"\n+\tfunction because the compiler was erroneously not generating the\n+\tpredefined \"=\" primitive as soon as the name of some interface\n+\tprimitive is \"=\" (formals were not checked).\n+\n+2014-01-29  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* expander.adb (Expander): In GNATprove mode, do not process\n+\ttransient scopes: they are in general not created in this mode,\n+\tand an attempt to examine them will lead to constraint errors when\n+\tprocessing configuration pragmas that have analyzable expressions.\n+\n 2014-01-29  Vincent Celier  <celier@adacore.com>\n \n \t* clean.adb (Gnatclean): Fail if main project is an aggregate"}, {"sha": "3dfd39084cd8d69ffbc2c7cbf575a2b6f589905f", "filename": "gcc/ada/exp_ch3.adb", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b7cb4a617fd5fd4ec69eedf3790f5c9ef836f0d7/gcc%2Fada%2Fexp_ch3.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b7cb4a617fd5fd4ec69eedf3790f5c9ef836f0d7/gcc%2Fada%2Fexp_ch3.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch3.adb?ref=b7cb4a617fd5fd4ec69eedf3790f5c9ef836f0d7", "patch": "@@ -9642,6 +9642,15 @@ package body Exp_Ch3 is\n          while Present (Prim) loop\n             if Chars (Node (Prim)) = Name_Op_Eq\n               and then not Is_Internal (Node (Prim))\n+              and then Present (First_Entity (Node (Prim)))\n+\n+              --  Following tests need a comment ???\n+\n+              and then Present (Last_Entity (Node (Prim)))\n+              and then Next_Entity (First_Entity (Node (Prim)))\n+                         = Last_Entity (Node (Prim))\n+              and then Etype (First_Entity (Node (Prim))) = Tag_Typ\n+              and then Etype (Last_Entity (Node (Prim))) = Tag_Typ\n             then\n                Eq_Needed := False;\n                Eq_Name := No_Name;"}, {"sha": "6ed3e63d864b9129b6ae371d0b21739ac3985779", "filename": "gcc/ada/expander.adb", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b7cb4a617fd5fd4ec69eedf3790f5c9ef836f0d7/gcc%2Fada%2Fexpander.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b7cb4a617fd5fd4ec69eedf3790f5c9ef836f0d7/gcc%2Fada%2Fexpander.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexpander.adb?ref=b7cb4a617fd5fd4ec69eedf3790f5c9ef836f0d7", "patch": "@@ -129,9 +129,14 @@ package body Expander is\n             --  In GNATprove mode we only need a very limited subset of\n             --  the usual expansions. This limited subset is implemented\n             --  in Expand_SPARK.\n+            --  Regular expansion is followed by special handling for transient\n+            --  scopes for unconstrained results, etc. but this is not needed,\n+            --  and in general cannot be done correctly, in this mode.\n \n             if GNATprove_Mode then\n                Expand_SPARK (N);\n+               Set_Analyzed (N);\n+               return;\n \n             --  Here for normal non-SPARK mode\n "}]}