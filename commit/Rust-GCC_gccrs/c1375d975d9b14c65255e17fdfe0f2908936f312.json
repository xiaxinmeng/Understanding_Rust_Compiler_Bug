{"sha": "c1375d975d9b14c65255e17fdfe0f2908936f312", "node_id": "C_kwDOANBUbNoAKGMxMzc1ZDk3NWQ5YjE0YzY1MjU1ZTE3ZmRmZTBmMjkwODkzNmYzMTI", "commit": {"author": {"name": "Jerry DeLisle", "email": "jvdelisle@gcc.gnu.org", "date": "2023-02-26T04:30:35Z"}, "committer": {"name": "Jerry DeLisle", "email": "jvdelisle@gcc.gnu.org", "date": "2023-02-28T02:02:59Z"}, "message": "Fortran: Eliminate nuisance warnings by initializing.\n\nSet sstride[0] and mstride[0] to zero, eliminating some warnings.\n\nlibgfortran/ChangeLog:\n\n\t* generated/pack_c10.c (pack_c10): Regenerated.\n\t* generated/pack_c16.c (pack_c16): Regenerated.\n\t* generated/pack_c17.c (pack_c17): Regenerated.\n\t* generated/pack_c4.c (pack_c4): Regenerated.\n\t* generated/pack_c8.c (pack_c8): Regenerated.\n\t* generated/pack_i1.c (pack_i1): Regenerated.\n\t* generated/pack_i16.c (pack_i16): Regenerated.\n\t* generated/pack_i2.c (pack_i2): Regenerated.\n\t* generated/pack_i4.c (pack_i4): Regenerated.\n\t* generated/pack_i8.c (pack_i8): Regenerated.\n\t* generated/pack_r10.c (pack_r10): Regenerated.\n\t* generated/pack_r16.c (pack_r16): Regenerated.\n\t* generated/pack_r17.c (pack_r17): Regenerated.\n\t* generated/pack_r4.c (pack_r4): Regenerated.\n\t* generated/pack_r8.c (pack_r8): Regenerated.\n\t* generated/spread_c10.c (spread_c10): Regenerated.\n\t* generated/spread_c16.c (spread_c16): Regenerated.\n\t* generated/spread_c17.c (spread_c17): Regenerated.\n\t* generated/spread_c4.c (spread_c4): Regenerated.\n\t* generated/spread_c8.c (spread_c8): Regenerated.\n\t* generated/spread_i1.c (spread_i1): Regenerated.\n\t* generated/spread_i16.c (spread_i16): Regenerated.\n\t* generated/spread_i2.c (spread_i2): Regenerated.\n\t* generated/spread_i4.c (spread_i4): Regenerated.\n\t* generated/spread_i8.c (spread_i8): Regenerated.\n\t* generated/spread_r10.c (spread_r10): Regenerated.\n\t* generated/spread_r16.c (spread_r16): Regenerated.\n\t* generated/spread_r17.c (spread_r17): Regenerated.\n\t* generated/spread_r4.c (spread_r4): Regenerated.\n\t* generated/spread_r8.c (spread_r8): Regenerated.\n\t* intrinsics/execute_command_line.c (execute_command_line_i4),\n\t(execute_command_line_i8): Set estat_initial to zero.\n\t* intrinsics/pack_generic.c (pack_internal): Set sstride[0] and\n\tmstride[0] to zero.\n\t* intrinsics/spread_generic.c (spread_internal): Set sstride[0].\n\t* m4/pack.m4: Set sstride[0] and mstride[0].\n\t* m4/spread.m4: Set sstride[0].", "tree": {"sha": "7136dfcd9756d77cebfa5fae954db0d65fa57df0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7136dfcd9756d77cebfa5fae954db0d65fa57df0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c1375d975d9b14c65255e17fdfe0f2908936f312", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c1375d975d9b14c65255e17fdfe0f2908936f312", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c1375d975d9b14c65255e17fdfe0f2908936f312", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c1375d975d9b14c65255e17fdfe0f2908936f312/comments", "author": null, "committer": null, "parents": [{"sha": "cf2ba92481d56ab923ccae96f29764e871979451", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cf2ba92481d56ab923ccae96f29764e871979451", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cf2ba92481d56ab923ccae96f29764e871979451"}], "stats": {"total": 89, "additions": 89, "deletions": 0}, "files": [{"sha": "c01efd11cf8d2bd6a493e11d706cb53b41a26fd1", "filename": "libgfortran/generated/pack_c10.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c1375d975d9b14c65255e17fdfe0f2908936f312/libgfortran%2Fgenerated%2Fpack_c10.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c1375d975d9b14c65255e17fdfe0f2908936f312/libgfortran%2Fgenerated%2Fpack_c10.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fpack_c10.c?ref=c1375d975d9b14c65255e17fdfe0f2908936f312", "patch": "@@ -96,6 +96,9 @@ pack_c10 (gfc_array_c10 *ret, const gfc_array_c10 *array,\n \n   dim = GFC_DESCRIPTOR_RANK (array);\n \n+  sstride[0] = 0; /* Avoid warnings if not initialized.  */\n+  mstride[0] = 0;\n+\n   mptr = mask->base_addr;\n \n   /* Use the same loop for all logical types, by using GFC_LOGICAL_1"}, {"sha": "8ee6b25cbe6f61d99f5e71bb1af585110bc36399", "filename": "libgfortran/generated/pack_c16.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c1375d975d9b14c65255e17fdfe0f2908936f312/libgfortran%2Fgenerated%2Fpack_c16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c1375d975d9b14c65255e17fdfe0f2908936f312/libgfortran%2Fgenerated%2Fpack_c16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fpack_c16.c?ref=c1375d975d9b14c65255e17fdfe0f2908936f312", "patch": "@@ -96,6 +96,9 @@ pack_c16 (gfc_array_c16 *ret, const gfc_array_c16 *array,\n \n   dim = GFC_DESCRIPTOR_RANK (array);\n \n+  sstride[0] = 0; /* Avoid warnings if not initialized.  */\n+  mstride[0] = 0;\n+\n   mptr = mask->base_addr;\n \n   /* Use the same loop for all logical types, by using GFC_LOGICAL_1"}, {"sha": "7a1cf5e17e824ea441a7a541c8f13bba59248502", "filename": "libgfortran/generated/pack_c17.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c1375d975d9b14c65255e17fdfe0f2908936f312/libgfortran%2Fgenerated%2Fpack_c17.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c1375d975d9b14c65255e17fdfe0f2908936f312/libgfortran%2Fgenerated%2Fpack_c17.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fpack_c17.c?ref=c1375d975d9b14c65255e17fdfe0f2908936f312", "patch": "@@ -96,6 +96,9 @@ pack_c17 (gfc_array_c17 *ret, const gfc_array_c17 *array,\n \n   dim = GFC_DESCRIPTOR_RANK (array);\n \n+  sstride[0] = 0; /* Avoid warnings if not initialized.  */\n+  mstride[0] = 0;\n+\n   mptr = mask->base_addr;\n \n   /* Use the same loop for all logical types, by using GFC_LOGICAL_1"}, {"sha": "76c8a853faccee5628e4608f0b7e13cde0b9363d", "filename": "libgfortran/generated/pack_c4.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c1375d975d9b14c65255e17fdfe0f2908936f312/libgfortran%2Fgenerated%2Fpack_c4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c1375d975d9b14c65255e17fdfe0f2908936f312/libgfortran%2Fgenerated%2Fpack_c4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fpack_c4.c?ref=c1375d975d9b14c65255e17fdfe0f2908936f312", "patch": "@@ -96,6 +96,9 @@ pack_c4 (gfc_array_c4 *ret, const gfc_array_c4 *array,\n \n   dim = GFC_DESCRIPTOR_RANK (array);\n \n+  sstride[0] = 0; /* Avoid warnings if not initialized.  */\n+  mstride[0] = 0;\n+\n   mptr = mask->base_addr;\n \n   /* Use the same loop for all logical types, by using GFC_LOGICAL_1"}, {"sha": "365c26ed0e8f06b1f6518b8cd81de8d85706d8aa", "filename": "libgfortran/generated/pack_c8.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c1375d975d9b14c65255e17fdfe0f2908936f312/libgfortran%2Fgenerated%2Fpack_c8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c1375d975d9b14c65255e17fdfe0f2908936f312/libgfortran%2Fgenerated%2Fpack_c8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fpack_c8.c?ref=c1375d975d9b14c65255e17fdfe0f2908936f312", "patch": "@@ -96,6 +96,9 @@ pack_c8 (gfc_array_c8 *ret, const gfc_array_c8 *array,\n \n   dim = GFC_DESCRIPTOR_RANK (array);\n \n+  sstride[0] = 0; /* Avoid warnings if not initialized.  */\n+  mstride[0] = 0;\n+\n   mptr = mask->base_addr;\n \n   /* Use the same loop for all logical types, by using GFC_LOGICAL_1"}, {"sha": "97a82281a5c513fe046f25cf852f49ccd53790d0", "filename": "libgfortran/generated/pack_i1.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c1375d975d9b14c65255e17fdfe0f2908936f312/libgfortran%2Fgenerated%2Fpack_i1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c1375d975d9b14c65255e17fdfe0f2908936f312/libgfortran%2Fgenerated%2Fpack_i1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fpack_i1.c?ref=c1375d975d9b14c65255e17fdfe0f2908936f312", "patch": "@@ -96,6 +96,9 @@ pack_i1 (gfc_array_i1 *ret, const gfc_array_i1 *array,\n \n   dim = GFC_DESCRIPTOR_RANK (array);\n \n+  sstride[0] = 0; /* Avoid warnings if not initialized.  */\n+  mstride[0] = 0;\n+\n   mptr = mask->base_addr;\n \n   /* Use the same loop for all logical types, by using GFC_LOGICAL_1"}, {"sha": "a0aa6db29d8bb4f1e5d2bc9c36351e1025e98e66", "filename": "libgfortran/generated/pack_i16.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c1375d975d9b14c65255e17fdfe0f2908936f312/libgfortran%2Fgenerated%2Fpack_i16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c1375d975d9b14c65255e17fdfe0f2908936f312/libgfortran%2Fgenerated%2Fpack_i16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fpack_i16.c?ref=c1375d975d9b14c65255e17fdfe0f2908936f312", "patch": "@@ -96,6 +96,9 @@ pack_i16 (gfc_array_i16 *ret, const gfc_array_i16 *array,\n \n   dim = GFC_DESCRIPTOR_RANK (array);\n \n+  sstride[0] = 0; /* Avoid warnings if not initialized.  */\n+  mstride[0] = 0;\n+\n   mptr = mask->base_addr;\n \n   /* Use the same loop for all logical types, by using GFC_LOGICAL_1"}, {"sha": "24efcaae17e64b787afd54acbde7f7f06692c1b8", "filename": "libgfortran/generated/pack_i2.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c1375d975d9b14c65255e17fdfe0f2908936f312/libgfortran%2Fgenerated%2Fpack_i2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c1375d975d9b14c65255e17fdfe0f2908936f312/libgfortran%2Fgenerated%2Fpack_i2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fpack_i2.c?ref=c1375d975d9b14c65255e17fdfe0f2908936f312", "patch": "@@ -96,6 +96,9 @@ pack_i2 (gfc_array_i2 *ret, const gfc_array_i2 *array,\n \n   dim = GFC_DESCRIPTOR_RANK (array);\n \n+  sstride[0] = 0; /* Avoid warnings if not initialized.  */\n+  mstride[0] = 0;\n+\n   mptr = mask->base_addr;\n \n   /* Use the same loop for all logical types, by using GFC_LOGICAL_1"}, {"sha": "6642f2b0bc109fac77dd26cf2d5e406b15c8a5c7", "filename": "libgfortran/generated/pack_i4.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c1375d975d9b14c65255e17fdfe0f2908936f312/libgfortran%2Fgenerated%2Fpack_i4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c1375d975d9b14c65255e17fdfe0f2908936f312/libgfortran%2Fgenerated%2Fpack_i4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fpack_i4.c?ref=c1375d975d9b14c65255e17fdfe0f2908936f312", "patch": "@@ -96,6 +96,9 @@ pack_i4 (gfc_array_i4 *ret, const gfc_array_i4 *array,\n \n   dim = GFC_DESCRIPTOR_RANK (array);\n \n+  sstride[0] = 0; /* Avoid warnings if not initialized.  */\n+  mstride[0] = 0;\n+\n   mptr = mask->base_addr;\n \n   /* Use the same loop for all logical types, by using GFC_LOGICAL_1"}, {"sha": "0f6ce94f03675b391d56773004653d68e3fc9772", "filename": "libgfortran/generated/pack_i8.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c1375d975d9b14c65255e17fdfe0f2908936f312/libgfortran%2Fgenerated%2Fpack_i8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c1375d975d9b14c65255e17fdfe0f2908936f312/libgfortran%2Fgenerated%2Fpack_i8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fpack_i8.c?ref=c1375d975d9b14c65255e17fdfe0f2908936f312", "patch": "@@ -96,6 +96,9 @@ pack_i8 (gfc_array_i8 *ret, const gfc_array_i8 *array,\n \n   dim = GFC_DESCRIPTOR_RANK (array);\n \n+  sstride[0] = 0; /* Avoid warnings if not initialized.  */\n+  mstride[0] = 0;\n+\n   mptr = mask->base_addr;\n \n   /* Use the same loop for all logical types, by using GFC_LOGICAL_1"}, {"sha": "7dd232853b4c5212cfeebfd376fc019d9262a1a8", "filename": "libgfortran/generated/pack_r10.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c1375d975d9b14c65255e17fdfe0f2908936f312/libgfortran%2Fgenerated%2Fpack_r10.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c1375d975d9b14c65255e17fdfe0f2908936f312/libgfortran%2Fgenerated%2Fpack_r10.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fpack_r10.c?ref=c1375d975d9b14c65255e17fdfe0f2908936f312", "patch": "@@ -96,6 +96,9 @@ pack_r10 (gfc_array_r10 *ret, const gfc_array_r10 *array,\n \n   dim = GFC_DESCRIPTOR_RANK (array);\n \n+  sstride[0] = 0; /* Avoid warnings if not initialized.  */\n+  mstride[0] = 0;\n+\n   mptr = mask->base_addr;\n \n   /* Use the same loop for all logical types, by using GFC_LOGICAL_1"}, {"sha": "6db5e65e16fca2144da1b4fa9f6d7a3ee8ed6285", "filename": "libgfortran/generated/pack_r16.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c1375d975d9b14c65255e17fdfe0f2908936f312/libgfortran%2Fgenerated%2Fpack_r16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c1375d975d9b14c65255e17fdfe0f2908936f312/libgfortran%2Fgenerated%2Fpack_r16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fpack_r16.c?ref=c1375d975d9b14c65255e17fdfe0f2908936f312", "patch": "@@ -96,6 +96,9 @@ pack_r16 (gfc_array_r16 *ret, const gfc_array_r16 *array,\n \n   dim = GFC_DESCRIPTOR_RANK (array);\n \n+  sstride[0] = 0; /* Avoid warnings if not initialized.  */\n+  mstride[0] = 0;\n+\n   mptr = mask->base_addr;\n \n   /* Use the same loop for all logical types, by using GFC_LOGICAL_1"}, {"sha": "6f9ff439559c573a31a3d3b6bed879f3ecdd5031", "filename": "libgfortran/generated/pack_r17.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c1375d975d9b14c65255e17fdfe0f2908936f312/libgfortran%2Fgenerated%2Fpack_r17.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c1375d975d9b14c65255e17fdfe0f2908936f312/libgfortran%2Fgenerated%2Fpack_r17.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fpack_r17.c?ref=c1375d975d9b14c65255e17fdfe0f2908936f312", "patch": "@@ -96,6 +96,9 @@ pack_r17 (gfc_array_r17 *ret, const gfc_array_r17 *array,\n \n   dim = GFC_DESCRIPTOR_RANK (array);\n \n+  sstride[0] = 0; /* Avoid warnings if not initialized.  */\n+  mstride[0] = 0;\n+\n   mptr = mask->base_addr;\n \n   /* Use the same loop for all logical types, by using GFC_LOGICAL_1"}, {"sha": "09132539ce9fef3592d7660b15b833dd316317fd", "filename": "libgfortran/generated/pack_r4.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c1375d975d9b14c65255e17fdfe0f2908936f312/libgfortran%2Fgenerated%2Fpack_r4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c1375d975d9b14c65255e17fdfe0f2908936f312/libgfortran%2Fgenerated%2Fpack_r4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fpack_r4.c?ref=c1375d975d9b14c65255e17fdfe0f2908936f312", "patch": "@@ -96,6 +96,9 @@ pack_r4 (gfc_array_r4 *ret, const gfc_array_r4 *array,\n \n   dim = GFC_DESCRIPTOR_RANK (array);\n \n+  sstride[0] = 0; /* Avoid warnings if not initialized.  */\n+  mstride[0] = 0;\n+\n   mptr = mask->base_addr;\n \n   /* Use the same loop for all logical types, by using GFC_LOGICAL_1"}, {"sha": "96b648aca4e3ce37595358acdaa3403f1b700561", "filename": "libgfortran/generated/pack_r8.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c1375d975d9b14c65255e17fdfe0f2908936f312/libgfortran%2Fgenerated%2Fpack_r8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c1375d975d9b14c65255e17fdfe0f2908936f312/libgfortran%2Fgenerated%2Fpack_r8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fpack_r8.c?ref=c1375d975d9b14c65255e17fdfe0f2908936f312", "patch": "@@ -96,6 +96,9 @@ pack_r8 (gfc_array_r8 *ret, const gfc_array_r8 *array,\n \n   dim = GFC_DESCRIPTOR_RANK (array);\n \n+  sstride[0] = 0; /* Avoid warnings if not initialized.  */\n+  mstride[0] = 0;\n+\n   mptr = mask->base_addr;\n \n   /* Use the same loop for all logical types, by using GFC_LOGICAL_1"}, {"sha": "987a81c0d7bef80bdfacb50902b1fa4fb849e20b", "filename": "libgfortran/generated/spread_c10.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c1375d975d9b14c65255e17fdfe0f2908936f312/libgfortran%2Fgenerated%2Fspread_c10.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c1375d975d9b14c65255e17fdfe0f2908936f312/libgfortran%2Fgenerated%2Fspread_c10.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fspread_c10.c?ref=c1375d975d9b14c65255e17fdfe0f2908936f312", "patch": "@@ -56,6 +56,8 @@ spread_c10 (gfc_array_c10 *ret, const gfc_array_c10 *source,\n \n   srank = GFC_DESCRIPTOR_RANK(source);\n \n+  sstride[0] = 0; /* Avoid warnings if not initialized.  */\n+  \n   rrank = srank + 1;\n   if (rrank > GFC_MAX_DIMENSIONS)\n     runtime_error (\"return rank too large in spread()\");"}, {"sha": "d7969a14a6a59b5bcfa914ad3f7c73a7571774a4", "filename": "libgfortran/generated/spread_c16.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c1375d975d9b14c65255e17fdfe0f2908936f312/libgfortran%2Fgenerated%2Fspread_c16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c1375d975d9b14c65255e17fdfe0f2908936f312/libgfortran%2Fgenerated%2Fspread_c16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fspread_c16.c?ref=c1375d975d9b14c65255e17fdfe0f2908936f312", "patch": "@@ -56,6 +56,8 @@ spread_c16 (gfc_array_c16 *ret, const gfc_array_c16 *source,\n \n   srank = GFC_DESCRIPTOR_RANK(source);\n \n+  sstride[0] = 0; /* Avoid warnings if not initialized.  */\n+  \n   rrank = srank + 1;\n   if (rrank > GFC_MAX_DIMENSIONS)\n     runtime_error (\"return rank too large in spread()\");"}, {"sha": "3011c365c14220d2480d53ec3ac5635ad05bc312", "filename": "libgfortran/generated/spread_c17.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c1375d975d9b14c65255e17fdfe0f2908936f312/libgfortran%2Fgenerated%2Fspread_c17.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c1375d975d9b14c65255e17fdfe0f2908936f312/libgfortran%2Fgenerated%2Fspread_c17.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fspread_c17.c?ref=c1375d975d9b14c65255e17fdfe0f2908936f312", "patch": "@@ -56,6 +56,8 @@ spread_c17 (gfc_array_c17 *ret, const gfc_array_c17 *source,\n \n   srank = GFC_DESCRIPTOR_RANK(source);\n \n+  sstride[0] = 0; /* Avoid warnings if not initialized.  */\n+  \n   rrank = srank + 1;\n   if (rrank > GFC_MAX_DIMENSIONS)\n     runtime_error (\"return rank too large in spread()\");"}, {"sha": "f0550d36e2b7d674e39ce3b2346feb80862e7747", "filename": "libgfortran/generated/spread_c4.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c1375d975d9b14c65255e17fdfe0f2908936f312/libgfortran%2Fgenerated%2Fspread_c4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c1375d975d9b14c65255e17fdfe0f2908936f312/libgfortran%2Fgenerated%2Fspread_c4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fspread_c4.c?ref=c1375d975d9b14c65255e17fdfe0f2908936f312", "patch": "@@ -56,6 +56,8 @@ spread_c4 (gfc_array_c4 *ret, const gfc_array_c4 *source,\n \n   srank = GFC_DESCRIPTOR_RANK(source);\n \n+  sstride[0] = 0; /* Avoid warnings if not initialized.  */\n+  \n   rrank = srank + 1;\n   if (rrank > GFC_MAX_DIMENSIONS)\n     runtime_error (\"return rank too large in spread()\");"}, {"sha": "b93518fb900615780b5dc8d9d29bf90ad10a95a7", "filename": "libgfortran/generated/spread_c8.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c1375d975d9b14c65255e17fdfe0f2908936f312/libgfortran%2Fgenerated%2Fspread_c8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c1375d975d9b14c65255e17fdfe0f2908936f312/libgfortran%2Fgenerated%2Fspread_c8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fspread_c8.c?ref=c1375d975d9b14c65255e17fdfe0f2908936f312", "patch": "@@ -56,6 +56,8 @@ spread_c8 (gfc_array_c8 *ret, const gfc_array_c8 *source,\n \n   srank = GFC_DESCRIPTOR_RANK(source);\n \n+  sstride[0] = 0; /* Avoid warnings if not initialized.  */\n+  \n   rrank = srank + 1;\n   if (rrank > GFC_MAX_DIMENSIONS)\n     runtime_error (\"return rank too large in spread()\");"}, {"sha": "3c913a303974cb14d00a391b5bb25a081335e619", "filename": "libgfortran/generated/spread_i1.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c1375d975d9b14c65255e17fdfe0f2908936f312/libgfortran%2Fgenerated%2Fspread_i1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c1375d975d9b14c65255e17fdfe0f2908936f312/libgfortran%2Fgenerated%2Fspread_i1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fspread_i1.c?ref=c1375d975d9b14c65255e17fdfe0f2908936f312", "patch": "@@ -56,6 +56,8 @@ spread_i1 (gfc_array_i1 *ret, const gfc_array_i1 *source,\n \n   srank = GFC_DESCRIPTOR_RANK(source);\n \n+  sstride[0] = 0; /* Avoid warnings if not initialized.  */\n+  \n   rrank = srank + 1;\n   if (rrank > GFC_MAX_DIMENSIONS)\n     runtime_error (\"return rank too large in spread()\");"}, {"sha": "61dc5c49ad9d3307c8e1a5c6d9a83d457d679080", "filename": "libgfortran/generated/spread_i16.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c1375d975d9b14c65255e17fdfe0f2908936f312/libgfortran%2Fgenerated%2Fspread_i16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c1375d975d9b14c65255e17fdfe0f2908936f312/libgfortran%2Fgenerated%2Fspread_i16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fspread_i16.c?ref=c1375d975d9b14c65255e17fdfe0f2908936f312", "patch": "@@ -56,6 +56,8 @@ spread_i16 (gfc_array_i16 *ret, const gfc_array_i16 *source,\n \n   srank = GFC_DESCRIPTOR_RANK(source);\n \n+  sstride[0] = 0; /* Avoid warnings if not initialized.  */\n+  \n   rrank = srank + 1;\n   if (rrank > GFC_MAX_DIMENSIONS)\n     runtime_error (\"return rank too large in spread()\");"}, {"sha": "28a4f8b1a7cc25c9c2860fbe45caa5cfb82b9df7", "filename": "libgfortran/generated/spread_i2.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c1375d975d9b14c65255e17fdfe0f2908936f312/libgfortran%2Fgenerated%2Fspread_i2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c1375d975d9b14c65255e17fdfe0f2908936f312/libgfortran%2Fgenerated%2Fspread_i2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fspread_i2.c?ref=c1375d975d9b14c65255e17fdfe0f2908936f312", "patch": "@@ -56,6 +56,8 @@ spread_i2 (gfc_array_i2 *ret, const gfc_array_i2 *source,\n \n   srank = GFC_DESCRIPTOR_RANK(source);\n \n+  sstride[0] = 0; /* Avoid warnings if not initialized.  */\n+  \n   rrank = srank + 1;\n   if (rrank > GFC_MAX_DIMENSIONS)\n     runtime_error (\"return rank too large in spread()\");"}, {"sha": "a0a53322d16bc2b17af681b65b9372f3e3bed591", "filename": "libgfortran/generated/spread_i4.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c1375d975d9b14c65255e17fdfe0f2908936f312/libgfortran%2Fgenerated%2Fspread_i4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c1375d975d9b14c65255e17fdfe0f2908936f312/libgfortran%2Fgenerated%2Fspread_i4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fspread_i4.c?ref=c1375d975d9b14c65255e17fdfe0f2908936f312", "patch": "@@ -56,6 +56,8 @@ spread_i4 (gfc_array_i4 *ret, const gfc_array_i4 *source,\n \n   srank = GFC_DESCRIPTOR_RANK(source);\n \n+  sstride[0] = 0; /* Avoid warnings if not initialized.  */\n+  \n   rrank = srank + 1;\n   if (rrank > GFC_MAX_DIMENSIONS)\n     runtime_error (\"return rank too large in spread()\");"}, {"sha": "206bbbbb367ea2eeb20e821f231f7c1db974a46d", "filename": "libgfortran/generated/spread_i8.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c1375d975d9b14c65255e17fdfe0f2908936f312/libgfortran%2Fgenerated%2Fspread_i8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c1375d975d9b14c65255e17fdfe0f2908936f312/libgfortran%2Fgenerated%2Fspread_i8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fspread_i8.c?ref=c1375d975d9b14c65255e17fdfe0f2908936f312", "patch": "@@ -56,6 +56,8 @@ spread_i8 (gfc_array_i8 *ret, const gfc_array_i8 *source,\n \n   srank = GFC_DESCRIPTOR_RANK(source);\n \n+  sstride[0] = 0; /* Avoid warnings if not initialized.  */\n+  \n   rrank = srank + 1;\n   if (rrank > GFC_MAX_DIMENSIONS)\n     runtime_error (\"return rank too large in spread()\");"}, {"sha": "0760838598466195b78d1cedb13ae5c172356294", "filename": "libgfortran/generated/spread_r10.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c1375d975d9b14c65255e17fdfe0f2908936f312/libgfortran%2Fgenerated%2Fspread_r10.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c1375d975d9b14c65255e17fdfe0f2908936f312/libgfortran%2Fgenerated%2Fspread_r10.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fspread_r10.c?ref=c1375d975d9b14c65255e17fdfe0f2908936f312", "patch": "@@ -56,6 +56,8 @@ spread_r10 (gfc_array_r10 *ret, const gfc_array_r10 *source,\n \n   srank = GFC_DESCRIPTOR_RANK(source);\n \n+  sstride[0] = 0; /* Avoid warnings if not initialized.  */\n+  \n   rrank = srank + 1;\n   if (rrank > GFC_MAX_DIMENSIONS)\n     runtime_error (\"return rank too large in spread()\");"}, {"sha": "af6075e6b3d9b760a012f2f7d302e3e49f50d392", "filename": "libgfortran/generated/spread_r16.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c1375d975d9b14c65255e17fdfe0f2908936f312/libgfortran%2Fgenerated%2Fspread_r16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c1375d975d9b14c65255e17fdfe0f2908936f312/libgfortran%2Fgenerated%2Fspread_r16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fspread_r16.c?ref=c1375d975d9b14c65255e17fdfe0f2908936f312", "patch": "@@ -56,6 +56,8 @@ spread_r16 (gfc_array_r16 *ret, const gfc_array_r16 *source,\n \n   srank = GFC_DESCRIPTOR_RANK(source);\n \n+  sstride[0] = 0; /* Avoid warnings if not initialized.  */\n+  \n   rrank = srank + 1;\n   if (rrank > GFC_MAX_DIMENSIONS)\n     runtime_error (\"return rank too large in spread()\");"}, {"sha": "cb765d3212e3a62410fa03306fff7154a948db05", "filename": "libgfortran/generated/spread_r17.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c1375d975d9b14c65255e17fdfe0f2908936f312/libgfortran%2Fgenerated%2Fspread_r17.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c1375d975d9b14c65255e17fdfe0f2908936f312/libgfortran%2Fgenerated%2Fspread_r17.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fspread_r17.c?ref=c1375d975d9b14c65255e17fdfe0f2908936f312", "patch": "@@ -56,6 +56,8 @@ spread_r17 (gfc_array_r17 *ret, const gfc_array_r17 *source,\n \n   srank = GFC_DESCRIPTOR_RANK(source);\n \n+  sstride[0] = 0; /* Avoid warnings if not initialized.  */\n+  \n   rrank = srank + 1;\n   if (rrank > GFC_MAX_DIMENSIONS)\n     runtime_error (\"return rank too large in spread()\");"}, {"sha": "8fdb722e523d13b1723f9560fc913015c8c41cff", "filename": "libgfortran/generated/spread_r4.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c1375d975d9b14c65255e17fdfe0f2908936f312/libgfortran%2Fgenerated%2Fspread_r4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c1375d975d9b14c65255e17fdfe0f2908936f312/libgfortran%2Fgenerated%2Fspread_r4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fspread_r4.c?ref=c1375d975d9b14c65255e17fdfe0f2908936f312", "patch": "@@ -56,6 +56,8 @@ spread_r4 (gfc_array_r4 *ret, const gfc_array_r4 *source,\n \n   srank = GFC_DESCRIPTOR_RANK(source);\n \n+  sstride[0] = 0; /* Avoid warnings if not initialized.  */\n+  \n   rrank = srank + 1;\n   if (rrank > GFC_MAX_DIMENSIONS)\n     runtime_error (\"return rank too large in spread()\");"}, {"sha": "ecfe9ad4e8bf68eb2f0b587cff42cf5294a0839f", "filename": "libgfortran/generated/spread_r8.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c1375d975d9b14c65255e17fdfe0f2908936f312/libgfortran%2Fgenerated%2Fspread_r8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c1375d975d9b14c65255e17fdfe0f2908936f312/libgfortran%2Fgenerated%2Fspread_r8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fspread_r8.c?ref=c1375d975d9b14c65255e17fdfe0f2908936f312", "patch": "@@ -56,6 +56,8 @@ spread_r8 (gfc_array_r8 *ret, const gfc_array_r8 *source,\n \n   srank = GFC_DESCRIPTOR_RANK(source);\n \n+  sstride[0] = 0; /* Avoid warnings if not initialized.  */\n+  \n   rrank = srank + 1;\n   if (rrank > GFC_MAX_DIMENSIONS)\n     runtime_error (\"return rank too large in spread()\");"}, {"sha": "c2bcaf05f0b1d34909eca8a617ce4f1e3576c1db", "filename": "libgfortran/intrinsics/execute_command_line.c", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c1375d975d9b14c65255e17fdfe0f2908936f312/libgfortran%2Fintrinsics%2Fexecute_command_line.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c1375d975d9b14c65255e17fdfe0f2908936f312/libgfortran%2Fintrinsics%2Fexecute_command_line.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fintrinsics%2Fexecute_command_line.c?ref=c1375d975d9b14c65255e17fdfe0f2908936f312", "patch": "@@ -192,6 +192,8 @@ execute_command_line_i4 (const char *command, GFC_LOGICAL_4 *wait,\n   bool w = wait ? *wait : true;\n   int estat, estat_initial, cstat;\n \n+  estat_initial = 0; /* Avoid nuisance warning if not initialized.  */\n+\n   if (exitstat)\n     estat_initial = estat = *exitstat;\n \n@@ -221,6 +223,8 @@ execute_command_line_i8 (const char *command, GFC_LOGICAL_8 *wait,\n   bool w = wait ? *wait : true;\n   int estat, estat_initial, cstat;\n \n+  estat_initial = 0; /* Avoid nuisance warning if not initialized.  */\n+\n   if (exitstat)\n     estat_initial = estat = *exitstat;\n "}, {"sha": "5462b17bed2a1d2d1d065d8ecb99e320ca9195ef", "filename": "libgfortran/intrinsics/pack_generic.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c1375d975d9b14c65255e17fdfe0f2908936f312/libgfortran%2Fintrinsics%2Fpack_generic.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c1375d975d9b14c65255e17fdfe0f2908936f312/libgfortran%2Fintrinsics%2Fpack_generic.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fintrinsics%2Fpack_generic.c?ref=c1375d975d9b14c65255e17fdfe0f2908936f312", "patch": "@@ -94,6 +94,9 @@ pack_internal (gfc_array_char *ret, const gfc_array_char *array,\n \n   dim = GFC_DESCRIPTOR_RANK (array);\n \n+  sstride[0] = 0; /* Avoid warnings if not initialized.  */\n+  mstride[0] = 0;\n+\n   sptr = array->base_addr;\n   mptr = mask->base_addr;\n "}, {"sha": "5b6df95447e01a15687082a15622355c65171fc2", "filename": "libgfortran/intrinsics/spread_generic.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c1375d975d9b14c65255e17fdfe0f2908936f312/libgfortran%2Fintrinsics%2Fspread_generic.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c1375d975d9b14c65255e17fdfe0f2908936f312/libgfortran%2Fintrinsics%2Fspread_generic.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fintrinsics%2Fspread_generic.c?ref=c1375d975d9b14c65255e17fdfe0f2908936f312", "patch": "@@ -55,6 +55,8 @@ spread_internal (gfc_array_char *ret, const gfc_array_char *source,\n \n   srank = GFC_DESCRIPTOR_RANK(source);\n \n+  sstride[0] = 0; /* Avoid warnings if not initialized.  */\n+\n   rrank = srank + 1;\n   if (rrank > GFC_MAX_DIMENSIONS)\n     runtime_error (\"return rank too large in spread()\");"}, {"sha": "8bb8c250ceb6bb68d2d921eada3850c511cfc9b8", "filename": "libgfortran/m4/pack.m4", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c1375d975d9b14c65255e17fdfe0f2908936f312/libgfortran%2Fm4%2Fpack.m4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c1375d975d9b14c65255e17fdfe0f2908936f312/libgfortran%2Fm4%2Fpack.m4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fm4%2Fpack.m4?ref=c1375d975d9b14c65255e17fdfe0f2908936f312", "patch": "@@ -97,6 +97,9 @@ pack_'rtype_code` ('rtype` *ret, const 'rtype` *array,\n \n   dim = GFC_DESCRIPTOR_RANK (array);\n \n+  sstride[0] = 0; /* Avoid warnings if not initialized.  */\n+  mstride[0] = 0;\n+\n   mptr = mask->base_addr;\n \n   /* Use the same loop for all logical types, by using GFC_LOGICAL_1"}, {"sha": "edb46ef1b853b46e38145c23cc0d0eb81c3e1c77", "filename": "libgfortran/m4/spread.m4", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c1375d975d9b14c65255e17fdfe0f2908936f312/libgfortran%2Fm4%2Fspread.m4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c1375d975d9b14c65255e17fdfe0f2908936f312/libgfortran%2Fm4%2Fspread.m4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fm4%2Fspread.m4?ref=c1375d975d9b14c65255e17fdfe0f2908936f312", "patch": "@@ -57,6 +57,8 @@ spread_'rtype_code` ('rtype` *ret, const 'rtype` *source,\n \n   srank = GFC_DESCRIPTOR_RANK(source);\n \n+  sstride[0] = 0; /* Avoid warnings if not initialized.  */\n+  \n   rrank = srank + 1;\n   if (rrank > GFC_MAX_DIMENSIONS)\n     runtime_error (\"return rank too large in spread()\");"}]}