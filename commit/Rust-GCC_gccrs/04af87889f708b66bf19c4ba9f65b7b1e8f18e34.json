{"sha": "04af87889f708b66bf19c4ba9f65b7b1e8f18e34", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDRhZjg3ODg5ZjcwOGI2NmJmMTljNGJhOWY2NWI3YjFlOGYxOGUzNA==", "commit": {"author": {"name": "Nicola Pero", "email": "nicola.pero@meta-innovation.com", "date": "2011-01-27T02:09:13Z"}, "committer": {"name": "Nicola Pero", "email": "nicola@gcc.gnu.org", "date": "2011-01-27T02:09:13Z"}, "message": "In gcc/: 2011-01-26 Nicola Pero <nicola.pero@meta-innovation.com>\n\nIn gcc/:\n2011-01-26  Nicola Pero  <nicola.pero@meta-innovation.com>\n\n\tPR c/43082\n\t* c-typeck.c (c_objc_common_truthvalue_conversion): If we are\n\tpassed a VOID_TYPE expression, immediately emit an error and\n\treturn error_mark_node.\n\nIn gcc/testsuite/:\n2011-01-26  Nicola Pero  <nicola.pero@meta-innovation.com>\n\t    Andrew Pinski  <pinskia@gmail.com>\n\n\tPR c/43082\n\t* gcc.dg/pr43082.c: New.\n\nCo-Authored-By: Andrew Pinski <pinskia@gmail.com>\n\nFrom-SVN: r169319", "tree": {"sha": "3a9c962ac63adb51b3f0d443e86f451d6eee1cc8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3a9c962ac63adb51b3f0d443e86f451d6eee1cc8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/04af87889f708b66bf19c4ba9f65b7b1e8f18e34", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/04af87889f708b66bf19c4ba9f65b7b1e8f18e34", "html_url": "https://github.com/Rust-GCC/gccrs/commit/04af87889f708b66bf19c4ba9f65b7b1e8f18e34", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/04af87889f708b66bf19c4ba9f65b7b1e8f18e34/comments", "author": {"login": "Nico-31415", "id": 94470564, "node_id": "U_kgDOBaGBpA", "avatar_url": "https://avatars.githubusercontent.com/u/94470564?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Nico-31415", "html_url": "https://github.com/Nico-31415", "followers_url": "https://api.github.com/users/Nico-31415/followers", "following_url": "https://api.github.com/users/Nico-31415/following{/other_user}", "gists_url": "https://api.github.com/users/Nico-31415/gists{/gist_id}", "starred_url": "https://api.github.com/users/Nico-31415/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Nico-31415/subscriptions", "organizations_url": "https://api.github.com/users/Nico-31415/orgs", "repos_url": "https://api.github.com/users/Nico-31415/repos", "events_url": "https://api.github.com/users/Nico-31415/events{/privacy}", "received_events_url": "https://api.github.com/users/Nico-31415/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "45d581f7907ebfd5b22456edd52cc7697e65003b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/45d581f7907ebfd5b22456edd52cc7697e65003b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/45d581f7907ebfd5b22456edd52cc7697e65003b"}], "stats": {"total": 31, "additions": 29, "deletions": 2}, "files": [{"sha": "c0389d48b95c7748955b4dad24824f999ad11b5e", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/04af87889f708b66bf19c4ba9f65b7b1e8f18e34/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/04af87889f708b66bf19c4ba9f65b7b1e8f18e34/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=04af87889f708b66bf19c4ba9f65b7b1e8f18e34", "patch": "@@ -1,3 +1,10 @@\n+2011-01-26  Nicola Pero  <nicola.pero@meta-innovation.com>\n+\n+\tPR c/43082\n+\t* c-typeck.c (c_objc_common_truthvalue_conversion): If we are\n+\tpassed a VOID_TYPE expression, immediately emit an error and\n+\treturn error_mark_node.\n+\n 2011-01-26  Jeff Law  <law@redhat.com>\n \n \tPR rtl-optimization/47464"}, {"sha": "a22bb737533affc203de69609b7a860e4b4ca449", "filename": "gcc/c-typeck.c", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/04af87889f708b66bf19c4ba9f65b7b1e8f18e34/gcc%2Fc-typeck.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/04af87889f708b66bf19c4ba9f65b7b1e8f18e34/gcc%2Fc-typeck.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-typeck.c?ref=04af87889f708b66bf19c4ba9f65b7b1e8f18e34", "patch": "@@ -10270,6 +10270,10 @@ c_objc_common_truthvalue_conversion (location_t location, tree expr)\n       error_at (location, \"used union type value where scalar is required\");\n       return error_mark_node;\n \n+    case VOID_TYPE:\n+      error_at (location, \"void value not ignored as it ought to be\");\n+      return error_mark_node;\n+\n     case FUNCTION_TYPE:\n       gcc_unreachable ();\n \n@@ -10282,8 +10286,8 @@ c_objc_common_truthvalue_conversion (location_t location, tree expr)\n   if (int_operands)\n     expr = remove_c_maybe_const_expr (expr);\n \n-  /* ??? Should we also give an error for void and vectors rather than\n-     leaving those to give errors later?  */\n+  /* ??? Should we also give an error for vectors rather than leaving\n+     those to give errors later?  */\n   expr = c_common_truthvalue_conversion (location, expr);\n \n   if (TREE_CODE (expr) == INTEGER_CST && int_operands && !int_const)"}, {"sha": "6835c1956afbd99681a8a40e7ff0644a8aa8377e", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/04af87889f708b66bf19c4ba9f65b7b1e8f18e34/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/04af87889f708b66bf19c4ba9f65b7b1e8f18e34/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=04af87889f708b66bf19c4ba9f65b7b1e8f18e34", "patch": "@@ -1,3 +1,9 @@\n+2011-01-26  Nicola Pero  <nicola.pero@meta-innovation.com>\n+\t    Andrew Pinski  <pinskia@gmail.com>\n+\n+\tPR c/43082\n+\t* gcc.dg/pr43082.c: New.\n+\n 2011-01-26  DJ Delorie  <dj@redhat.com>\n \n \tPR rtl-optimization/46878"}, {"sha": "a6e00461673c76792f3686e780df7abced70539e", "filename": "gcc/testsuite/gcc.dg/pr43082.c", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/04af87889f708b66bf19c4ba9f65b7b1e8f18e34/gcc%2Ftestsuite%2Fgcc.dg%2Fpr43082.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/04af87889f708b66bf19c4ba9f65b7b1e8f18e34/gcc%2Ftestsuite%2Fgcc.dg%2Fpr43082.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr43082.c?ref=04af87889f708b66bf19c4ba9f65b7b1e8f18e34", "patch": "@@ -0,0 +1,10 @@\n+/* Test that the compiler does not crash when void expressions are\n+   found inside conditional expressions.  PR c/43082.  */\n+/* { dg-do compile } */\n+\n+void\n+foo (int x)\n+{\n+  if (x ? (void)(0) : (void)(1)) /* { dg-error \"void value not ignored as it ought to be\" } */\n+    ;\n+}"}]}