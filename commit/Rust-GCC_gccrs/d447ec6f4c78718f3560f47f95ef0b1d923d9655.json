{"sha": "d447ec6f4c78718f3560f47f95ef0b1d923d9655", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDQ0N2VjNmY0Yzc4NzE4ZjM1NjBmNDdmOTVlZjBiMWQ5MjNkOTY1NQ==", "commit": {"author": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1993-05-20T03:10:30Z"}, "committer": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1993-05-20T03:10:30Z"}, "message": "(assemble_constant_align): New function.\n\nFrom-SVN: r4509", "tree": {"sha": "cea795cc38d1e64b3670529fbccc67b9a90787f0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/cea795cc38d1e64b3670529fbccc67b9a90787f0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d447ec6f4c78718f3560f47f95ef0b1d923d9655", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d447ec6f4c78718f3560f47f95ef0b1d923d9655", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d447ec6f4c78718f3560f47f95ef0b1d923d9655", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d447ec6f4c78718f3560f47f95ef0b1d923d9655/comments", "author": null, "committer": null, "parents": [{"sha": "8ddc1ce36dda87a6d8e999473c8b8df1153af135", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8ddc1ce36dda87a6d8e999473c8b8df1153af135", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8ddc1ce36dda87a6d8e999473c8b8df1153af135"}], "stats": {"total": 18, "additions": 18, "deletions": 0}, "files": [{"sha": "fea708389a3401834da99a5af89afd4d4b15b330", "filename": "gcc/varasm.c", "status": "modified", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d447ec6f4c78718f3560f47f95ef0b1d923d9655/gcc%2Fvarasm.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d447ec6f4c78718f3560f47f95ef0b1d923d9655/gcc%2Fvarasm.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fvarasm.c?ref=d447ec6f4c78718f3560f47f95ef0b1d923d9655", "patch": "@@ -432,6 +432,24 @@ make_var_volatile (var)\n   MEM_VOLATILE_P (DECL_RTL (var)) = 1;\n }\n \f\n+/* Output alignment directive to align for constant expression EXP.  */\n+\n+void\n+assemble_constant_align (exp)\n+     tree exp;\n+{\n+  int align;\n+\n+  /* Align the location counter as required by EXP's data type.  */\n+  align = TYPE_ALIGN (TREE_TYPE (exp));\n+#ifdef CONSTANT_ALIGNMENT\n+  align = CONSTANT_ALIGNMENT (exp, align);\n+#endif\n+\n+  if (align > BITS_PER_UNIT)\n+    ASM_OUTPUT_ALIGN (asm_out_file, floor_log2 (align / BITS_PER_UNIT));\n+}\n+\n /* Output a string of literal assembler code\n    for an `asm' keyword used between functions.  */\n "}]}