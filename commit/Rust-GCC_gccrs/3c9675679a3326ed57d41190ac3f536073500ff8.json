{"sha": "3c9675679a3326ed57d41190ac3f536073500ff8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2M5Njc1Njc5YTMzMjZlZDU3ZDQxMTkwYWMzZjUzNjA3MzUwMGZmOA==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1996-10-28T22:17:00Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1996-10-28T22:17:00Z"}, "message": "(signed_or_unsigned_type): If already right signedness, return.\n\nFrom-SVN: r13055", "tree": {"sha": "4ae752404dcf4b82fa39ae27869900f0a889ac02", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4ae752404dcf4b82fa39ae27869900f0a889ac02"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3c9675679a3326ed57d41190ac3f536073500ff8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3c9675679a3326ed57d41190ac3f536073500ff8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3c9675679a3326ed57d41190ac3f536073500ff8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3c9675679a3326ed57d41190ac3f536073500ff8/comments", "author": null, "committer": null, "parents": [{"sha": "ef9d910bb4edf56f168ff6940e8dd1a09fe8f83b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ef9d910bb4edf56f168ff6940e8dd1a09fe8f83b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ef9d910bb4edf56f168ff6940e8dd1a09fe8f83b"}], "stats": {"total": 3, "additions": 2, "deletions": 1}, "files": [{"sha": "fa647dbce603e5757bd1d734247cc9348be7cd86", "filename": "gcc/c-typeck.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3c9675679a3326ed57d41190ac3f536073500ff8/gcc%2Fc-typeck.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3c9675679a3326ed57d41190ac3f536073500ff8/gcc%2Fc-typeck.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-typeck.c?ref=3c9675679a3326ed57d41190ac3f536073500ff8", "patch": "@@ -776,7 +776,8 @@ signed_or_unsigned_type (unsignedp, type)\n      int unsignedp;\n      tree type;\n {\n-  if (! INTEGRAL_TYPE_P (type))\n+  if (! INTEGRAL_TYPE_P (type)\n+      || TREE_UNSIGNED (type) == unsignedp)\n     return type;\n   if (TYPE_PRECISION (type) == TYPE_PRECISION (signed_char_type_node))\n     return unsignedp ? unsigned_char_type_node : signed_char_type_node;"}]}