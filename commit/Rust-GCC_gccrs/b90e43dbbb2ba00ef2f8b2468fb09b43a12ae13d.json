{"sha": "b90e43dbbb2ba00ef2f8b2468fb09b43a12ae13d", "node_id": "C_kwDOANBUbNoAKGI5MGU0M2RiYmIyYmEwMGVmMmY4YjI0NjhmYjA5YjQzYTEyYWUxM2Q", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@adacore.com", "date": "2022-03-16T13:50:24Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "derodat@adacore.com", "date": "2022-05-16T08:42:06Z"}, "message": "[Ada] Fix fallout of change in equality for untagged record types\n\nThe problem is that the resolution of expanded names implicitly assumes\nthat the visible and private homonyms in a given scope are segregated on\nthe homonym chain, and this was no longer the case for equality operators\nin the specific case at stake.\n\ngcc/ada/\n\n\t* sem_ch7.adb (Inspect_Untagged_Record_Completion): Also move the\n\tequality operator on the homonym chain if there is another equality\n\toperator in the private part.", "tree": {"sha": "018208736d69be937d7270ef6eae5f152422e335", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/018208736d69be937d7270ef6eae5f152422e335"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b90e43dbbb2ba00ef2f8b2468fb09b43a12ae13d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b90e43dbbb2ba00ef2f8b2468fb09b43a12ae13d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b90e43dbbb2ba00ef2f8b2468fb09b43a12ae13d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b90e43dbbb2ba00ef2f8b2468fb09b43a12ae13d/comments", "author": null, "committer": {"login": "pmderodat", "id": 758452, "node_id": "MDQ6VXNlcjc1ODQ1Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/758452?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pmderodat", "html_url": "https://github.com/pmderodat", "followers_url": "https://api.github.com/users/pmderodat/followers", "following_url": "https://api.github.com/users/pmderodat/following{/other_user}", "gists_url": "https://api.github.com/users/pmderodat/gists{/gist_id}", "starred_url": "https://api.github.com/users/pmderodat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pmderodat/subscriptions", "organizations_url": "https://api.github.com/users/pmderodat/orgs", "repos_url": "https://api.github.com/users/pmderodat/repos", "events_url": "https://api.github.com/users/pmderodat/events{/privacy}", "received_events_url": "https://api.github.com/users/pmderodat/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7e0c853c6f6a2987ac7616cbfdd52bb41d598bd5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7e0c853c6f6a2987ac7616cbfdd52bb41d598bd5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7e0c853c6f6a2987ac7616cbfdd52bb41d598bd5"}], "stats": {"total": 30, "additions": 27, "deletions": 3}, "files": [{"sha": "0b11176793ca512f508e057d9370a67e56deacea", "filename": "gcc/ada/sem_ch7.adb", "status": "modified", "additions": 27, "deletions": 3, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b90e43dbbb2ba00ef2f8b2468fb09b43a12ae13d/gcc%2Fada%2Fsem_ch7.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b90e43dbbb2ba00ef2f8b2468fb09b43a12ae13d/gcc%2Fada%2Fsem_ch7.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch7.adb?ref=b90e43dbbb2ba00ef2f8b2468fb09b43a12ae13d", "patch": "@@ -1491,6 +1491,7 @@ package body Sem_Ch7 is\n                   Prim_List : constant Elist_Id :=\n                      Collect_Primitive_Operations (Defining_Identifier (Decl));\n \n+                  E       : Entity_Id;\n                   Ne_Id   : Entity_Id;\n                   Op_Decl : Node_Id;\n                   Op_Id   : Entity_Id;\n@@ -1517,16 +1518,39 @@ package body Sem_Ch7 is\n                         pragma Assert (Ekind (Ne_Id) = E_Function\n                           and then Corresponding_Equality (Ne_Id) = Op_Id);\n \n+                        E := First_Private_Entity (Id);\n+\n                         --  Move them from the private part of the entity list\n                         --  up to the end of the visible part of the same list.\n \n                         Remove_Entity (Op_Id);\n                         Remove_Entity (Ne_Id);\n \n-                        Link_Entities\n-                          (Prev_Entity (First_Private_Entity (Id)), Op_Id);\n+                        Link_Entities (Prev_Entity (E), Op_Id);\n                         Link_Entities (Op_Id, Ne_Id);\n-                        Link_Entities (Ne_Id, First_Private_Entity (Id));\n+                        Link_Entities (Ne_Id, E);\n+\n+                        --  And if the private part contains another equality\n+                        --  operator, move the equality operator to after it\n+                        --  in the homonym chain, so that all its next homonyms\n+                        --  in the same scope, if any, also are in the visible\n+                        --  part. This is relied upon to resolve expanded names\n+                        --  in Collect_Interps for example.\n+\n+                        while Present (E) loop\n+                           exit when Ekind (E) = E_Function\n+                             and then Chars (E) = Name_Op_Eq;\n+\n+                           Next_Entity (E);\n+                        end loop;\n+\n+                        if Present (E) then\n+                           Remove_Homonym (Op_Id);\n+\n+                           Set_Homonym (Op_Id, Homonym (E));\n+                           Set_Homonym (E, Op_Id);\n+                        end if;\n+\n                         exit;\n                      end if;\n "}]}