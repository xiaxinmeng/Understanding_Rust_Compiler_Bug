{"sha": "4dfe21acc2072b7dd35cd57ced94cf880b896158", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGRmZTIxYWNjMjA3MmI3ZGQzNWNkNTdjZWQ5NGNmODgwYjg5NjE1OA==", "commit": {"author": {"name": "Richard Earnshaw", "email": "rearnsha@arm.com", "date": "2015-09-24T09:40:06Z"}, "committer": {"name": "Richard Earnshaw", "email": "rearnsha@gcc.gnu.org", "date": "2015-09-24T09:40:06Z"}, "message": "ARM: fp16 Fix PR 67624 - Incorrect conversion of float Infinity to __fp16\n\n\tPR libgcc/67624\n\tlibgcc:\n\t* config/arm/fp16.c (__gnu_f2h_internal): Handle infinity correctly.\n\tgcc/testsuite:\n\t* gcc.target/arm/fp16-inf.c: New test.\n\nFrom-SVN: r228082", "tree": {"sha": "febf915b6babe064024fc102cdb1a878c5287c89", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/febf915b6babe064024fc102cdb1a878c5287c89"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4dfe21acc2072b7dd35cd57ced94cf880b896158", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4dfe21acc2072b7dd35cd57ced94cf880b896158", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4dfe21acc2072b7dd35cd57ced94cf880b896158", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4dfe21acc2072b7dd35cd57ced94cf880b896158/comments", "author": null, "committer": null, "parents": [{"sha": "60dd79ca89f7eb0c4bded86766c7d17d171aba7f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/60dd79ca89f7eb0c4bded86766c7d17d171aba7f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/60dd79ca89f7eb0c4bded86766c7d17d171aba7f"}], "stats": {"total": 31, "additions": 29, "deletions": 2}, "files": [{"sha": "fe4f67f70009cfb51dff1706921210ca3dc6a9be", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4dfe21acc2072b7dd35cd57ced94cf880b896158/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4dfe21acc2072b7dd35cd57ced94cf880b896158/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=4dfe21acc2072b7dd35cd57ced94cf880b896158", "patch": "@@ -1,3 +1,8 @@\n+2015-09-24  Richard Earnshaw  <rearnsha@arm.com>\n+\n+\tPR libgcc/67624\n+\t* gcc.target/arm/fp16-inf.c: New test.\n+\n 2015-09-24  Kirill Yukhin <kirill.yukhin@intel.com>\n \n \t* gcc.target/i386/avx512vbmi-check.h (main): Fix register"}, {"sha": "ce5c197c12183e2b4e272adebac0d32caba5a3ba", "filename": "gcc/testsuite/gcc.target/arm/fp16-inf.c", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4dfe21acc2072b7dd35cd57ced94cf880b896158/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Ffp16-inf.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4dfe21acc2072b7dd35cd57ced94cf880b896158/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Ffp16-inf.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Ffp16-inf.c?ref=4dfe21acc2072b7dd35cd57ced94cf880b896158", "patch": "@@ -0,0 +1,14 @@\n+/* { dg-do run } */\n+/* { dg-options \"-O -mfp16-format=ieee\" } */\n+\n+/* Conversion of infinity to __fp16 and back again should preserve the\n+   value.  */\n+volatile float f = __builtin_inf ();\n+\n+int main ()\n+{\n+  __fp16 h = f;\n+  if (h != __builtin_inf ())\n+    __builtin_abort ();\n+  return 0;\n+}"}, {"sha": "dee1c11528035df53c416025c846c8132b69d69c", "filename": "libgcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4dfe21acc2072b7dd35cd57ced94cf880b896158/libgcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4dfe21acc2072b7dd35cd57ced94cf880b896158/libgcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2FChangeLog?ref=4dfe21acc2072b7dd35cd57ced94cf880b896158", "patch": "@@ -1,3 +1,8 @@\n+2015-09-24  Richard Earnshaw  <rearnsha@arm.com>\n+\n+\tPR libgcc/67624\n+\t* config/arm/fp16.c (__gnu_f2h_internal): Handle infinity correctly.\n+\n 2015-09-24  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>\n \n \t* config.host (*-*-solaris2*): Add t-crtstuff-pic to tmake_file."}, {"sha": "8eaae2b84e76b2efd4a7dfb156396b34f1ce04ec", "filename": "libgcc/config/arm/fp16.c", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4dfe21acc2072b7dd35cd57ced94cf880b896158/libgcc%2Fconfig%2Farm%2Ffp16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4dfe21acc2072b7dd35cd57ced94cf880b896158/libgcc%2Fconfig%2Farm%2Ffp16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Farm%2Ffp16.c?ref=4dfe21acc2072b7dd35cd57ced94cf880b896158", "patch": "@@ -35,9 +35,12 @@ __gnu_f2h_internal(unsigned int a, int ieee)\n     {\n       if (!ieee)\n \treturn sign;\n+      if (mantissa == 0)\n+\treturn sign | 0x7c00;\t/* Infinity.  */\n+      /* Remaining cases are NaNs.  Convert SNaN to QNaN.  */\n       return sign | 0x7e00 | (mantissa >> 13);\n     }\n-  \n+\n   if (aexp == 0 && mantissa == 0)\n     return sign;\n \n@@ -49,7 +52,7 @@ __gnu_f2h_internal(unsigned int a, int ieee)\n     {\n       mask = 0x00ffffff;\n       if (aexp >= -25)\n-        mask >>= 25 + aexp;\n+\tmask >>= 25 + aexp;\n     }\n   else\n     mask = 0x00001fff;"}]}