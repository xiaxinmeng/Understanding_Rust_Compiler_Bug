{"sha": "40008eda377fb8e6ff7549230c81767217662791", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDAwMDhlZGEzNzdmYjhlNmZmNzU0OTIzMGM4MTc2NzIxNzY2Mjc5MQ==", "commit": {"author": {"name": "Kaveh R. Ghazi", "email": "ghazi@caip.rutgers.edu", "date": "2001-09-12T16:25:07Z"}, "committer": {"name": "Kaveh Ghazi", "email": "ghazi@gcc.gnu.org", "date": "2001-09-12T16:25:07Z"}, "message": "decl2.c (lang_f_options): Const-ification.\n\n\t* decl2.c (lang_f_options): Const-ification.\n\t* lex.c (cplus_tree_code_name): Likewise.\n\t* spew.c (yyerror): Likewise.\n\nFrom-SVN: r45565", "tree": {"sha": "0e93950145ea2a73742b649fd03a0f8d97b8ada4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0e93950145ea2a73742b649fd03a0f8d97b8ada4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/40008eda377fb8e6ff7549230c81767217662791", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/40008eda377fb8e6ff7549230c81767217662791", "html_url": "https://github.com/Rust-GCC/gccrs/commit/40008eda377fb8e6ff7549230c81767217662791", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/40008eda377fb8e6ff7549230c81767217662791/comments", "author": null, "committer": null, "parents": [{"sha": "fd033052f96f8e4c62f981e6923371f0d58278ca", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fd033052f96f8e4c62f981e6923371f0d58278ca", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fd033052f96f8e4c62f981e6923371f0d58278ca"}], "stats": {"total": 12, "additions": 9, "deletions": 3}, "files": [{"sha": "f5ce21fa299bf8bb07bd49444e8c5d1082b26817", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40008eda377fb8e6ff7549230c81767217662791/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40008eda377fb8e6ff7549230c81767217662791/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=40008eda377fb8e6ff7549230c81767217662791", "patch": "@@ -1,3 +1,9 @@\n+2001-09-12  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n+\n+\t* decl2.c (lang_f_options): Const-ification.\n+\t* lex.c (cplus_tree_code_name): Likewise.\n+\t* spew.c (yyerror): Likewise.\n+\n 2001-09-06  Nathan Sidwell  <nathan@codesourcery.com>\n \n \tPR c++/3986"}, {"sha": "5c62acaa28da831c55119b1ead0a3ded9f388a2b", "filename": "gcc/cp/decl2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40008eda377fb8e6ff7549230c81767217662791/gcc%2Fcp%2Fdecl2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40008eda377fb8e6ff7549230c81767217662791/gcc%2Fcp%2Fdecl2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fdecl2.c?ref=40008eda377fb8e6ff7549230c81767217662791", "patch": "@@ -417,7 +417,7 @@ c_language_kind c_language = clk_cplusplus;\n     if `-fSTRING' is seen as an option.\n    (If `-fno-STRING' is seen as an option, the opposite value is stored.)  */\n \n-static struct { const char *string; int *variable; int on_value;}\n+static struct { const char *const string; int *variable; int on_value;}\n lang_f_options[] =\n {\n   /* C/C++ options.  */"}, {"sha": "6d8fcb36ad7a60c04793c2fd858195b152beffe9", "filename": "gcc/cp/lex.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40008eda377fb8e6ff7549230c81767217662791/gcc%2Fcp%2Flex.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40008eda377fb8e6ff7549230c81767217662791/gcc%2Fcp%2Flex.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Flex.c?ref=40008eda377fb8e6ff7549230c81767217662791", "patch": "@@ -235,7 +235,7 @@ static int cplus_tree_code_length[] = {\n    Used for printing out the tree and error messages.  */\n #define DEFTREECODE(SYM, NAME, TYPE, LEN) NAME,\n \n-static const char *cplus_tree_code_name[] = {\n+static const char *const cplus_tree_code_name[] = {\n   \"@@dummy\",\n #include \"cp-tree.def\"\n };"}, {"sha": "64cf48dd1607e4937ac30520d7e539d30af08b63", "filename": "gcc/cp/spew.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40008eda377fb8e6ff7549230c81767217662791/gcc%2Fcp%2Fspew.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40008eda377fb8e6ff7549230c81767217662791/gcc%2Fcp%2Fspew.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fspew.c?ref=40008eda377fb8e6ff7549230c81767217662791", "patch": "@@ -1482,7 +1482,7 @@ yyerror (msgid)\n   else if (last_token == CPP_CHAR || last_token == CPP_WCHAR)\n     {\n       unsigned int val = TREE_INT_CST_LOW (yylval.ttype);\n-      const char *ell = (last_token == CPP_CHAR) ? \"\" : \"L\";\n+      const char *const ell = (last_token == CPP_CHAR) ? \"\" : \"L\";\n       if (val <= UCHAR_MAX && ISGRAPH (val))\n \terror (\"%s before %s'%c'\", string, ell, val);\n       else"}]}