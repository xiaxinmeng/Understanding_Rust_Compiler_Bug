{"sha": "e48cc3915567359131c25e8453182150d4a66b56", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTQ4Y2MzOTE1NTY3MzU5MTMxYzI1ZTg0NTMxODIxNTBkNGE2NmI1Ng==", "commit": {"author": {"name": "Tobias Burnus", "email": "burnus@net-b.de", "date": "2011-12-08T18:51:28Z"}, "committer": {"name": "Tobias Burnus", "email": "burnus@gcc.gnu.org", "date": "2011-12-08T18:51:28Z"}, "message": "re PR fortran/51448 (Compiler crash when assigning floating point values of different kinds)\n\n2011-12-08  Tobias Burnus  <burnus@net-b.de>\n\n        PR fortran/51448\n        * fortran/trans-array.c (get_std_lbound): Fix handling of\n        conversion functions.\n\n2011-12-08  Tobias Burnus  <burnus@net-b.de>\n\n        PR fortran/51448\n        * gfortran.dg/realloc_on_assign_8.f90: New.\n\nFrom-SVN: r182131", "tree": {"sha": "72dc960245648db7c70fe4680582fee6ad01a6ca", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/72dc960245648db7c70fe4680582fee6ad01a6ca"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e48cc3915567359131c25e8453182150d4a66b56", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e48cc3915567359131c25e8453182150d4a66b56", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e48cc3915567359131c25e8453182150d4a66b56", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e48cc3915567359131c25e8453182150d4a66b56/comments", "author": {"login": "tob2", "id": 264461, "node_id": "MDQ6VXNlcjI2NDQ2MQ==", "avatar_url": "https://avatars.githubusercontent.com/u/264461?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tob2", "html_url": "https://github.com/tob2", "followers_url": "https://api.github.com/users/tob2/followers", "following_url": "https://api.github.com/users/tob2/following{/other_user}", "gists_url": "https://api.github.com/users/tob2/gists{/gist_id}", "starred_url": "https://api.github.com/users/tob2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tob2/subscriptions", "organizations_url": "https://api.github.com/users/tob2/orgs", "repos_url": "https://api.github.com/users/tob2/repos", "events_url": "https://api.github.com/users/tob2/events{/privacy}", "received_events_url": "https://api.github.com/users/tob2/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "d62023228ddc5ee21a7d0c6297dedba3e1783848", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d62023228ddc5ee21a7d0c6297dedba3e1783848", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d62023228ddc5ee21a7d0c6297dedba3e1783848"}], "stats": {"total": 48, "additions": 38, "deletions": 10}, "files": [{"sha": "727368188995df345881af450262fe979c601663", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e48cc3915567359131c25e8453182150d4a66b56/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e48cc3915567359131c25e8453182150d4a66b56/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=e48cc3915567359131c25e8453182150d4a66b56", "patch": "@@ -1,3 +1,9 @@\n+2011-12-08  Tobias Burnus  <burnus@net-b.de>\n+\n+\tPR fortran/51448\n+\t* fortran/trans-array.c (get_std_lbound): Fix handling of\n+\tconversion functions.\n+\n 2011-12-08  Toon Moene  <toon@moene.org>\n \n \tPR fortran/51310"}, {"sha": "c8624d96a32cd24de934bc2ae144a55644a6d7e5", "filename": "gcc/fortran/trans-array.c", "status": "modified", "additions": 10, "deletions": 10, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e48cc3915567359131c25e8453182150d4a66b56/gcc%2Ffortran%2Ftrans-array.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e48cc3915567359131c25e8453182150d4a66b56/gcc%2Ffortran%2Ftrans-array.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ftrans-array.c?ref=e48cc3915567359131c25e8453182150d4a66b56", "patch": "@@ -7428,7 +7428,16 @@ get_std_lbound (gfc_expr *expr, tree desc, int dim, bool assumed_size)\n \t\t\t      gfc_array_index_type, cond,\n \t\t\t      lbound, gfc_index_one_node);\n     }\n-  else if (expr->expr_type == EXPR_VARIABLE)\n+\n+  if (expr->expr_type == EXPR_FUNCTION)\n+    {\n+      /* A conversion function, so use the argument.  */\n+      gcc_assert (expr->value.function.isym\n+\t\t  && expr->value.function.isym->conversion);\n+      expr = expr->value.function.actual->expr;\n+    }\n+\n+  if (expr->expr_type == EXPR_VARIABLE)\n     {\n       tmp = TREE_TYPE (expr->symtree->n.sym->backend_decl);\n       for (ref = expr->ref; ref; ref = ref->next)\n@@ -7441,15 +7450,6 @@ get_std_lbound (gfc_expr *expr, tree desc, int dim, bool assumed_size)\n \t}\n       return GFC_TYPE_ARRAY_LBOUND(tmp, dim);\n     }\n-  else if (expr->expr_type == EXPR_FUNCTION)\n-    {\n-      /* A conversion function, so use the argument.  */\n-      expr = expr->value.function.actual->expr;\n-      if (expr->expr_type != EXPR_VARIABLE)\n-\treturn gfc_index_one_node;\n-      desc = TREE_TYPE (expr->symtree->n.sym->backend_decl);\n-      return get_std_lbound (expr, desc, dim, assumed_size);\n-    }\n \n   return gfc_index_one_node;\n }"}, {"sha": "66645cd984b63242b66eeb33c0b75dd6c361deb4", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e48cc3915567359131c25e8453182150d4a66b56/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e48cc3915567359131c25e8453182150d4a66b56/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=e48cc3915567359131c25e8453182150d4a66b56", "patch": "@@ -1,3 +1,8 @@\n+2011-12-07  Tobias Burnus  <burnus@net-b.de>\n+\n+\tPR fortran/51448\n+\t* gfortran.dg/realloc_on_assign_8.f90: New.\n+\n 2011-12-08  Teresa Johnson  <tejohnson@google.com>\n \n \t* gcc.target/i386/movdi-rex64.c: Remove unnecessary"}, {"sha": "4f7d28895b5bc262689690ffdad96cacb2423829", "filename": "gcc/testsuite/gfortran.dg/realloc_on_assign_8.f90", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e48cc3915567359131c25e8453182150d4a66b56/gcc%2Ftestsuite%2Fgfortran.dg%2Frealloc_on_assign_8.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e48cc3915567359131c25e8453182150d4a66b56/gcc%2Ftestsuite%2Fgfortran.dg%2Frealloc_on_assign_8.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Frealloc_on_assign_8.f90?ref=e48cc3915567359131c25e8453182150d4a66b56", "patch": "@@ -0,0 +1,17 @@\n+! { dg-do compile }\n+!\n+! PR fortran/51448\n+!\n+! Contribued by Fran\u00e7ois Willot\n+!\n+  PROGRAM MAIN\n+  IMPLICIT NONE\n+  TYPE mytype\n+    REAL b(2)\n+  END TYPE mytype\n+  TYPE(mytype) a\n+  DOUBLE PRECISION, ALLOCATABLE :: x(:)\n+  ALLOCATE(x(2))\n+  a%b=0.0E0\n+  x=a%b\n+  END"}]}