{"sha": "fd973b936ec99a25133edd7aa7356a2b65ca62e8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZmQ5NzNiOTM2ZWM5OWEyNTEzM2VkZDdhYTczNTZhMmI2NWNhNjJlOA==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1996-05-18T18:08:25Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1996-05-18T18:08:25Z"}, "message": "Provide a default for TARGET_DEFAULT.\n\nTake \"or\" of TARGET_DEFAULT and TARGET_CPU_DEFAULT everywhere.\n\nFrom-SVN: r12025", "tree": {"sha": "06630487a621e05d7edc14d870d380fb31d3e172", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/06630487a621e05d7edc14d870d380fb31d3e172"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/fd973b936ec99a25133edd7aa7356a2b65ca62e8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fd973b936ec99a25133edd7aa7356a2b65ca62e8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fd973b936ec99a25133edd7aa7356a2b65ca62e8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fd973b936ec99a25133edd7aa7356a2b65ca62e8/comments", "author": null, "committer": null, "parents": [{"sha": "3ea57002e82a31930987cec3b43d3b42a426c671", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3ea57002e82a31930987cec3b43d3b42a426c671", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3ea57002e82a31930987cec3b43d3b42a426c671"}], "stats": {"total": 18, "additions": 9, "deletions": 9}, "files": [{"sha": "b687fbc045bdb81ec55619f7abb29369eba4feed", "filename": "gcc/config/convex/convex.h", "status": "modified", "additions": 9, "deletions": 9, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fd973b936ec99a25133edd7aa7356a2b65ca62e8/gcc%2Fconfig%2Fconvex%2Fconvex.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fd973b936ec99a25133edd7aa7356a2b65ca62e8/gcc%2Fconfig%2Fconvex%2Fconvex.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fconvex%2Fconvex.h?ref=fd973b936ec99a25133edd7aa7356a2b65ca62e8", "patch": "@@ -45,7 +45,7 @@ extern int target_flags;\n    An empty string NAME is used to identify the default VALUE.  */\n \n #ifndef TARGET_DEFAULT\n-#error Use one of convex1.h, convex2.h, etc.\n+#define TARGET_DEFAULT 0\n #endif\n \n #define TARGET_SWITCHES \\\n@@ -62,7 +62,7 @@ extern int target_flags;\n     { \"volatile-nocache\", 0400 }, \\\n     { \"long64\", 01000 }, \\\n     { \"long32\", -01000 }, \\\n-    { \"\", TARGET_DEFAULT }}\n+    { \"\", TARGET_DEFAULT | TARGET_CPU_DEFAULT}}\n \n /* Macros used in the machine description to test the flags.  */\n \n@@ -81,8 +81,8 @@ extern int target_flags;\n   init_convex ();\t\t\t\t\t\t\t\\\n   /* To compile system header files, allow $ in identifiers even if -ansi */ \\\n   dollars_in_ident = 1;\t\t\t\t\t\t\t\\\n-  if ((target_flags & 077) != (TARGET_DEFAULT & 077))\t\t\t\\\n-    target_flags &= ~TARGET_DEFAULT;\t\t\t\t\t\\\n+  if ((target_flags & 077) != ((TARGET_DEFAULT | TARGET_CPU_DEFAULT) & 077)) \\\n+    target_flags &= ~ (TARGET_DEFAULT | TARGET_CPU_DEFAULT);\t\t\\\n   if (target_flags & 001)\t\t\t\t\t\t\\\n     target_cpu = 0;\t\t\t\t\t\t\t\\\n   else if (target_flags & 006)\t\t\t\t\t\t\\\n@@ -106,7 +106,7 @@ extern int target_flags;\n    Make a target-dependent __convex_cxx__ define to relay the target cpu\n    to the program being compiled. */\n \n-#if TARGET_DEFAULT & 1\n+#if (TARGET_DEFAULT | TARGET_CPU_DEFAULT) & 1\n \n /* C1 default */\n \n@@ -158,7 +158,7 @@ extern int target_flags;\n \n #endif\n \n-#if TARGET_DEFAULT & 2\n+#if (TARGET_DEFAULT | TARGET_CPU_DEFAULT) & 2\n \n /* C2 default */\n \n@@ -210,7 +210,7 @@ extern int target_flags;\n \n #endif\n \n-#if TARGET_DEFAULT & 4\n+#if (TARGET_DEFAULT | TARGET_CPU_DEFAULT) & 4\n \n /* C32 default */\n \n@@ -262,7 +262,7 @@ extern int target_flags;\n \n #endif\n \n-#if TARGET_DEFAULT & 010\n+#if (TARGET_DEFAULT | TARGET_CPU_DEFAULT) & 010\n \n /* C34 default */\n \n@@ -314,7 +314,7 @@ extern int target_flags;\n \n #endif\n \n-#if TARGET_DEFAULT & 020\n+#if (TARGET_DEFAULT | TARGET_CPU_DEFAULT) & 020\n \n /* C38 default */\n "}]}