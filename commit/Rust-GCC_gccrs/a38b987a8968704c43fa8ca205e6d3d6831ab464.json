{"sha": "a38b987a8968704c43fa8ca205e6d3d6831ab464", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTM4Yjk4N2E4OTY4NzA0YzQzZmE4Y2EyMDVlNmQzZDY4MzFhYjQ2NA==", "commit": {"author": {"name": "Neil Booth", "email": "neil@daikokuya.demon.co.uk", "date": "2001-10-26T20:49:48Z"}, "committer": {"name": "Neil Booth", "email": "neil@gcc.gnu.org", "date": "2001-10-26T20:49:48Z"}, "message": "c-typeck.c (convert_arguments): When comparing for enumeral type equality, use TYPE_MAIN_VARIANT.\n\n\t* c-typeck.c (convert_arguments): When comparing for enumeral\n\ttype equality, use TYPE_MAIN_VARIANT.\n\t* gcc.dg/Wconversion.c: New tests.\n\nFrom-SVN: r46559", "tree": {"sha": "ddb791f710ded9ec9c92ee16b36e20059a119b14", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ddb791f710ded9ec9c92ee16b36e20059a119b14"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a38b987a8968704c43fa8ca205e6d3d6831ab464", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a38b987a8968704c43fa8ca205e6d3d6831ab464", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a38b987a8968704c43fa8ca205e6d3d6831ab464", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a38b987a8968704c43fa8ca205e6d3d6831ab464/comments", "author": null, "committer": null, "parents": [{"sha": "30151c7b3b2512424287adf5b20dba1cde81c2e5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/30151c7b3b2512424287adf5b20dba1cde81c2e5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/30151c7b3b2512424287adf5b20dba1cde81c2e5"}], "stats": {"total": 29, "additions": 28, "deletions": 1}, "files": [{"sha": "6e4d58dfe4b44343f49d5819a9082852662759fb", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a38b987a8968704c43fa8ca205e6d3d6831ab464/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a38b987a8968704c43fa8ca205e6d3d6831ab464/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=a38b987a8968704c43fa8ca205e6d3d6831ab464", "patch": "@@ -1,3 +1,9 @@\n+2001-10-26  Neil Booth  <neil@daikokuya.demon.co.uk>\n+\n+\t* c-typeck.c (convert_arguments): When comparing for enumeral\n+\ttype equality, use TYPE_MAIN_VARIANT.\n+\t* gcc.dg/Wconversion.c: New tests.\n+\n 2001-10-26  Kazu Hirata  <kazu@hxi.com>\n \n \t* s390/s390.c: Fix comment typos."}, {"sha": "62e7898d9a1122b21782fa1e31a3c400d34721ec", "filename": "gcc/c-typeck.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a38b987a8968704c43fa8ca205e6d3d6831ab464/gcc%2Fc-typeck.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a38b987a8968704c43fa8ca205e6d3d6831ab464/gcc%2Fc-typeck.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-typeck.c?ref=a38b987a8968704c43fa8ca205e6d3d6831ab464", "patch": "@@ -1651,7 +1651,8 @@ convert_arguments (typelist, values, name, fundecl)\n \t\t      tree type1 = TREE_TYPE (would_have_been);\n \n \t\t      if (TREE_CODE (type) == ENUMERAL_TYPE\n-\t\t\t  && type == TREE_TYPE (val))\n+\t\t\t  && (TYPE_MAIN_VARIANT (type)\n+\t\t\t      == TYPE_MAIN_VARIANT (TREE_TYPE (val))))\n \t\t\t/* No warning if function asks for enum\n \t\t\t   and the actual arg is that enum type.  */\n \t\t\t;"}, {"sha": "7cbcb6a4461b06d6b63c08a3db14305a84e0bf96", "filename": "gcc/testsuite/gcc.dg/Wconversion.c", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a38b987a8968704c43fa8ca205e6d3d6831ab464/gcc%2Ftestsuite%2Fgcc.dg%2FWconversion.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a38b987a8968704c43fa8ca205e6d3d6831ab464/gcc%2Ftestsuite%2Fgcc.dg%2FWconversion.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2FWconversion.c?ref=a38b987a8968704c43fa8ca205e6d3d6831ab464", "patch": "@@ -0,0 +1,20 @@\n+/* Source: PR 137.\n+\n+   We would not warn about passing an enum, but would warn about\n+   passing a enum that was part of an array.  TYPE_MAIN_VARIANT was\n+   not used in the appropriate place in the warning code.  */\n+\n+/* { dg-do compile } */\n+/* { dg-options -Wconversion } */\n+\n+typedef enum { a } __attribute__((packed)) t;\n+void f(t x) {}\n+\n+int main(void)\n+{\n+  t x[2], y;\n+  f(x[0]);\t\t\t/* { dg-bogus \"different width\" } */\n+  f(y);\t\t\t\t/* { dg-bogus \"different width\" } */\n+  return 0;\n+}\n+"}]}