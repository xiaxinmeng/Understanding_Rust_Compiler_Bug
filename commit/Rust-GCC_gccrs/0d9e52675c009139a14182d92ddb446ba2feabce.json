{"sha": "0d9e52675c009139a14182d92ddb446ba2feabce", "node_id": "C_kwDOANBUbNoAKDBkOWU1MjY3NWMwMDkxMzlhMTQxODJkOTJkZGI0NDZiYTJmZWFiY2U", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2023-03-24T08:42:18Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2023-03-24T08:42:18Z"}, "message": "testsuite: Fix up gcc.target/i386/pr109137.c testcase [PR109137]\n\nThe testcase has a couple of small problems:\n1) had -m32 in dg-options, that should never be done, instead the test\n   should be guarded on ia32\n2) adds -fPIC unconditionally (that should be guarded on fpic effective\n   target)\n3) using #include <string.h> for a RA test seems unnecessary, __builtin_memset\n   handles it without the header\n\n2023-03-24  Jakub Jelinek  <jakub@redhat.com>\n\n\tPR target/109137\n\t* gcc.target/i386/pr109137.c: Remove -m32 from dg-options, instead\n\trequire ia32 effective target.  Only add -fPIC for fpic effective\n\ttarget.  Remove #include <string.h>, use __builtin_memset instead of\n\tmemset.", "tree": {"sha": "5c3cf42fbc416387402120cac1663a211e693bf8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5c3cf42fbc416387402120cac1663a211e693bf8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0d9e52675c009139a14182d92ddb446ba2feabce", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0d9e52675c009139a14182d92ddb446ba2feabce", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0d9e52675c009139a14182d92ddb446ba2feabce", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0d9e52675c009139a14182d92ddb446ba2feabce/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "86111e7b3027de1029718e23ee5fab0ee011e191", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/86111e7b3027de1029718e23ee5fab0ee011e191", "html_url": "https://github.com/Rust-GCC/gccrs/commit/86111e7b3027de1029718e23ee5fab0ee011e191"}], "stats": {"total": 11, "additions": 6, "deletions": 5}, "files": [{"sha": "e92a5e4785552877a13dd27d587cd4d9b13f190a", "filename": "gcc/testsuite/gcc.target/i386/pr109137.c", "status": "modified", "additions": 6, "deletions": 5, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0d9e52675c009139a14182d92ddb446ba2feabce/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr109137.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0d9e52675c009139a14182d92ddb446ba2feabce/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr109137.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr109137.c?ref=0d9e52675c009139a14182d92ddb446ba2feabce", "patch": "@@ -1,6 +1,8 @@\n-/* { dg-do compile } */\n-/* { dg-options \"-m32 -O3 -march=znver1 -fPIC -mfpmath=sse -w\" } */\n-#include <string.h>\n+/* PR target/109137 */\n+/* { dg-do compile { target ia32 } } */\n+/* { dg-options \"-O3 -march=znver1 -mfpmath=sse -w\" } */\n+/* { dg-additional-options \"-fPIC\" { target fpic } } */\n+\n typedef struct {\n   char bytestream_end;\n } CABACContext;\n@@ -12,7 +14,7 @@ typedef struct {\n } H264SliceContext;\n H264SliceContext ff_h264_decode_mb_cabac_sl;\n void ff_h264_decode_mb_cabac(void) {\n-  memset((void*)ff_h264_decode_mb_cabac_h_0, 6, 48);\n+  __builtin_memset((void*)ff_h264_decode_mb_cabac_h_0, 6, 48);\n   int i;\n   for (;; i++) {\n     __asm__(\"\"/* { dg-error \"'asm' operand has impossible constraints\" } */\n@@ -25,4 +27,3 @@ void ff_h264_decode_mb_cabac(void) {\n         decode_cabac_mb_intra4x4_pred_mode_mode;\n   }\n }\n-"}]}