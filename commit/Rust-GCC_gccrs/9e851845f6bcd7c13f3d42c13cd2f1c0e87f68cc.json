{"sha": "9e851845f6bcd7c13f3d42c13cd2f1c0e87f68cc", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OWU4NTE4NDVmNmJjZDdjMTNmM2Q0MmMxM2NkMmYxYzBlODdmNjhjYw==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2017-11-28T08:43:32Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2017-11-28T08:43:32Z"}, "message": "tree.def (SWITCH_EXPR): Change from 3 operand to 2 operand tree.\n\n\t* tree.def (SWITCH_EXPR): Change from 3 operand to 2 operand tree.\n\tAdjust comment.\n\t* tree.h (SWITCH_LABELS): Remove.\n\t* gimplify.c (gimplify_switch_expr): Don't test SWITCH_LABELS,\n\tassert SWITCH_BODY is non-NULL.\n\t* tree-pretty-print.c (dump_generic_node): Remove SWITCH_LABELS\n\thandling.\n\t* tree.c (block_may_fallthru): Always return true; for SWITCH_EXPR.\nc/\n\t* c-typeck.c (c_start_case): Build SWITCH_EXPR using build2 instead\n\tof build3.\ncp/\n\t* cp-gimplify.c (genericize_switch_stmt): Build SWITCH_EXPR using\n\tbuild2_loc instead of build3_loc.\nada/\n\t* gcc-interface/trans.c (Case_Statement_to_gnu): Build SWITCH_EXPR\n\tusing build2 instead of build3.\njit/\n\t* jit-playback.c (add_switch): Build SWITCH_EXPR using build2 instead\n\tof build3.  Formatting fixes.  Adjust funciton comment.\nfortran/\n\t* trans-decl.c (gfc_trans_entry_master_switch): Build SWITCH_EXPR\n\tusing fold_build2_loc instead of fold_build3_loc.\n\t* trans-io.c (io_result): Likewise.\n\t* trans-stmt.c (gfc_trans_integer_select, gfc_trans_character_select):\n\tLikewise.\ngo/\n\t* go-gcc.cc (Gcc_backend::switch_statement): Build SWITCH_EXPR using\n\tbuild2_loc instead of build3_loc.\nbrig/\n\t* brigfrontend/brig-branch-inst-handler.cc\n\t(brig_branch_inst_handler::operator): Build SWITCH_EXPR using build2\n\tinstead of build3.\n\nFrom-SVN: r255192", "tree": {"sha": "64d90923bdd9deb69efa042cc7ae54b08df598bf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/64d90923bdd9deb69efa042cc7ae54b08df598bf"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9e851845f6bcd7c13f3d42c13cd2f1c0e87f68cc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9e851845f6bcd7c13f3d42c13cd2f1c0e87f68cc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9e851845f6bcd7c13f3d42c13cd2f1c0e87f68cc", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9e851845f6bcd7c13f3d42c13cd2f1c0e87f68cc/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "11c1e63c90eb3540da0b7524a2d7571916102dfe", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/11c1e63c90eb3540da0b7524a2d7571916102dfe", "html_url": "https://github.com/Rust-GCC/gccrs/commit/11c1e63c90eb3540da0b7524a2d7571916102dfe"}], "stats": {"total": 142, "additions": 71, "deletions": 71}, "files": [{"sha": "021035c81ac45203ea487270e1709c2dcc13d3c3", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9e851845f6bcd7c13f3d42c13cd2f1c0e87f68cc/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9e851845f6bcd7c13f3d42c13cd2f1c0e87f68cc/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=9e851845f6bcd7c13f3d42c13cd2f1c0e87f68cc", "patch": "@@ -1,5 +1,14 @@\n 2017-11-28  Jakub Jelinek  <jakub@redhat.com>\n \n+\t* tree.def (SWITCH_EXPR): Change from 3 operand to 2 operand tree.\n+\tAdjust comment.\n+\t* tree.h (SWITCH_LABELS): Remove.\n+\t* gimplify.c (gimplify_switch_expr): Don't test SWITCH_LABELS,\n+\tassert SWITCH_BODY is non-NULL.\n+\t* tree-pretty-print.c (dump_generic_node): Remove SWITCH_LABELS\n+\thandling.\n+\t* tree.c (block_may_fallthru): Always return true; for SWITCH_EXPR.\n+\n \tPR tree-optimization/80788\n \t* match.pd (X +- C1 CMP C2 -> X CMP C2 -+ C1): If res\n \thas TREE_OVERFLOW set, call drop_tree_overflow."}, {"sha": "1b51bd631c4576a433666b9a6258d565f1ee5f06", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9e851845f6bcd7c13f3d42c13cd2f1c0e87f68cc/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9e851845f6bcd7c13f3d42c13cd2f1c0e87f68cc/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=9e851845f6bcd7c13f3d42c13cd2f1c0e87f68cc", "patch": "@@ -1,3 +1,8 @@\n+2017-11-28  Jakub Jelinek  <jakub@redhat.com>\n+\n+\t* gcc-interface/trans.c (Case_Statement_to_gnu): Build SWITCH_EXPR\n+\tusing build2 instead of build3.\n+\n 2017-11-23  Eric Botcazou  <ebotcazou@adacore.com>\n \n \tPR ada/83091"}, {"sha": "4739923a09dde8870f6d520f8f078ef98c3f9074", "filename": "gcc/ada/gcc-interface/trans.c", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9e851845f6bcd7c13f3d42c13cd2f1c0e87f68cc/gcc%2Fada%2Fgcc-interface%2Ftrans.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9e851845f6bcd7c13f3d42c13cd2f1c0e87f68cc/gcc%2Fada%2Fgcc-interface%2Ftrans.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgcc-interface%2Ftrans.c?ref=9e851845f6bcd7c13f3d42c13cd2f1c0e87f68cc", "patch": "@@ -2625,8 +2625,7 @@ Case_Statement_to_gnu (Node_Id gnat_node)\n   /* Now emit a definition of the label the cases branch to, if any.  */\n   if (may_fallthru)\n     add_stmt (build1 (LABEL_EXPR, void_type_node, gnu_label));\n-  gnu_result\n-    = build3 (SWITCH_EXPR, gnu_type, gnu_expr, end_stmt_group (), NULL_TREE);\n+  gnu_result = build2 (SWITCH_EXPR, gnu_type, gnu_expr, end_stmt_group ());\n \n   return gnu_result;\n }"}, {"sha": "3e8f44330daa3602b9a57ea037e835227f68f342", "filename": "gcc/brig/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9e851845f6bcd7c13f3d42c13cd2f1c0e87f68cc/gcc%2Fbrig%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9e851845f6bcd7c13f3d42c13cd2f1c0e87f68cc/gcc%2Fbrig%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fbrig%2FChangeLog?ref=9e851845f6bcd7c13f3d42c13cd2f1c0e87f68cc", "patch": "@@ -1,3 +1,9 @@\n+2017-11-28  Jakub Jelinek  <jakub@redhat.com>\n+\n+\t* brigfrontend/brig-branch-inst-handler.cc\n+\t(brig_branch_inst_handler::operator): Build SWITCH_EXPR using build2\n+\tinstead of build3.\n+\n 2017-11-17  Henry Linjam\u00e4ki  <henry.linjamaki@parmance.com>\n \n \t* brigfrontend/brig-util.cc: Fix sprintf format string type mismatch"}, {"sha": "a660698c8a3d1bdd2db3e1bd3605496cc0675f23", "filename": "gcc/brig/brigfrontend/brig-branch-inst-handler.cc", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9e851845f6bcd7c13f3d42c13cd2f1c0e87f68cc/gcc%2Fbrig%2Fbrigfrontend%2Fbrig-branch-inst-handler.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9e851845f6bcd7c13f3d42c13cd2f1c0e87f68cc/gcc%2Fbrig%2Fbrigfrontend%2Fbrig-branch-inst-handler.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fbrig%2Fbrigfrontend%2Fbrig-branch-inst-handler.cc?ref=9e851845f6bcd7c13f3d42c13cd2f1c0e87f68cc", "patch": "@@ -167,8 +167,8 @@ brig_branch_inst_handler::operator () (const BrigBase *base)\n       tree select = operands[0];\n       tree cases = operands[1];\n \n-      tree switch_expr = build3 (SWITCH_EXPR, TREE_TYPE (select), select,\n-\t\t\t\t NULL_TREE, NULL_TREE);\n+      tree switch_expr = build2 (SWITCH_EXPR, TREE_TYPE (select), select,\n+\t\t\t\t NULL_TREE);\n \n       tree default_case\n \t= build_case_label (NULL_TREE, NULL_TREE,"}, {"sha": "cb1cd308cea401d0daf93c80854eafe639898c56", "filename": "gcc/c/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9e851845f6bcd7c13f3d42c13cd2f1c0e87f68cc/gcc%2Fc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9e851845f6bcd7c13f3d42c13cd2f1c0e87f68cc/gcc%2Fc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc%2FChangeLog?ref=9e851845f6bcd7c13f3d42c13cd2f1c0e87f68cc", "patch": "@@ -1,3 +1,8 @@\n+2017-11-28  Jakub Jelinek  <jakub@redhat.com>\n+\n+\t* c-typeck.c (c_start_case): Build SWITCH_EXPR using build2 instead\n+\tof build3.\n+\n 2017-11-14 Boris Kolpackov  <boris@codesynthesis.com>\n \n \t* Make-lang.in (c.install-plugin): Install backend import library."}, {"sha": "a4d3d39c3d07b8477e1f23b5de07948f25a8c4b3", "filename": "gcc/c/c-typeck.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9e851845f6bcd7c13f3d42c13cd2f1c0e87f68cc/gcc%2Fc%2Fc-typeck.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9e851845f6bcd7c13f3d42c13cd2f1c0e87f68cc/gcc%2Fc%2Fc-typeck.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc%2Fc-typeck.c?ref=9e851845f6bcd7c13f3d42c13cd2f1c0e87f68cc", "patch": "@@ -10330,7 +10330,7 @@ c_start_case (location_t switch_loc,\n \n   /* Add this new SWITCH_EXPR to the stack.  */\n   cs = XNEW (struct c_switch);\n-  cs->switch_expr = build3 (SWITCH_EXPR, orig_type, exp, NULL_TREE, NULL_TREE);\n+  cs->switch_expr = build2 (SWITCH_EXPR, orig_type, exp, NULL_TREE);\n   SET_EXPR_LOCATION (cs->switch_expr, switch_loc);\n   cs->orig_type = orig_type;\n   cs->cases = splay_tree_new (case_compare, NULL, NULL);"}, {"sha": "13fe545cd1c2ca7a18fcb30570839e2ef7d696d2", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9e851845f6bcd7c13f3d42c13cd2f1c0e87f68cc/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9e851845f6bcd7c13f3d42c13cd2f1c0e87f68cc/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=9e851845f6bcd7c13f3d42c13cd2f1c0e87f68cc", "patch": "@@ -1,3 +1,8 @@\n+2017-11-28  Jakub Jelinek  <jakub@redhat.com>\n+\n+\t* cp-gimplify.c (genericize_switch_stmt): Build SWITCH_EXPR using\n+\tbuild2_loc instead of build3_loc.\n+\n 2017-11-27  Martin Sebor  <msebor@redhat.com>\n \n \tPR c++/83058"}, {"sha": "f50aff739a2df3515d94ffa3d3696159245939ab", "filename": "gcc/cp/cp-gimplify.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9e851845f6bcd7c13f3d42c13cd2f1c0e87f68cc/gcc%2Fcp%2Fcp-gimplify.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9e851845f6bcd7c13f3d42c13cd2f1c0e87f68cc/gcc%2Fcp%2Fcp-gimplify.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcp-gimplify.c?ref=9e851845f6bcd7c13f3d42c13cd2f1c0e87f68cc", "patch": "@@ -332,7 +332,7 @@ genericize_switch_stmt (tree *stmt_p, int *walk_subtrees, void *data)\n   cp_walk_tree (&type, cp_genericize_r, data, NULL);\n   *walk_subtrees = 0;\n \n-  *stmt_p = build3_loc (stmt_locus, SWITCH_EXPR, type, cond, body, NULL_TREE);\n+  *stmt_p = build2_loc (stmt_locus, SWITCH_EXPR, type, cond, body);\n   finish_bc_block (stmt_p, bc_break, break_block);\n }\n "}, {"sha": "7ba781447f9cb80b469507e52657fde4e7251a83", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9e851845f6bcd7c13f3d42c13cd2f1c0e87f68cc/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9e851845f6bcd7c13f3d42c13cd2f1c0e87f68cc/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=9e851845f6bcd7c13f3d42c13cd2f1c0e87f68cc", "patch": "@@ -1,3 +1,11 @@\n+2017-11-28  Jakub Jelinek  <jakub@redhat.com>\n+\n+\t* trans-decl.c (gfc_trans_entry_master_switch): Build SWITCH_EXPR\n+\tusing fold_build2_loc instead of fold_build3_loc.\n+\t* trans-io.c (io_result): Likewise.\n+\t* trans-stmt.c (gfc_trans_integer_select, gfc_trans_character_select):\n+\tLikewise.\n+\n 2017-11-24  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR fortran/81304"}, {"sha": "3231fb98e2d20ffcef9bb4a3c5ea8778e6f67a41", "filename": "gcc/fortran/trans-decl.c", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9e851845f6bcd7c13f3d42c13cd2f1c0e87f68cc/gcc%2Ffortran%2Ftrans-decl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9e851845f6bcd7c13f3d42c13cd2f1c0e87f68cc/gcc%2Ffortran%2Ftrans-decl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ftrans-decl.c?ref=9e851845f6bcd7c13f3d42c13cd2f1c0e87f68cc", "patch": "@@ -5758,8 +5758,7 @@ gfc_trans_entry_master_switch (gfc_entry_list * el)\n   tmp = gfc_finish_block (&block);\n   /* The first argument selects the entry point.  */\n   val = DECL_ARGUMENTS (current_function_decl);\n-  tmp = fold_build3_loc (input_location, SWITCH_EXPR, NULL_TREE,\n-\t\t\t val, tmp, NULL_TREE);\n+  tmp = fold_build2_loc (input_location, SWITCH_EXPR, NULL_TREE, val, tmp);\n   return tmp;\n }\n "}, {"sha": "764766d003fecc7ea9519c1e7cd69edd48b18fb0", "filename": "gcc/fortran/trans-io.c", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9e851845f6bcd7c13f3d42c13cd2f1c0e87f68cc/gcc%2Ffortran%2Ftrans-io.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9e851845f6bcd7c13f3d42c13cd2f1c0e87f68cc/gcc%2Ffortran%2Ftrans-io.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ftrans-io.c?ref=9e851845f6bcd7c13f3d42c13cd2f1c0e87f68cc", "patch": "@@ -1002,8 +1002,7 @@ io_result (stmtblock_t * block, tree var, gfc_st_label * err_label,\n \t\t\trc, build_int_cst (TREE_TYPE (rc),\n \t\t\t\t\t   IOPARM_common_libreturn_mask));\n \n-  tmp = fold_build3_loc (input_location, SWITCH_EXPR, NULL_TREE,\n-\t\t\t rc, tmp, NULL_TREE);\n+  tmp = fold_build2_loc (input_location, SWITCH_EXPR, NULL_TREE, rc, tmp);\n \n   gfc_add_expr_to_block (block, tmp);\n }"}, {"sha": "df29b78e3f189ff275e413218ab79cb6beca5c37", "filename": "gcc/fortran/trans-stmt.c", "status": "modified", "additions": 5, "deletions": 6, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9e851845f6bcd7c13f3d42c13cd2f1c0e87f68cc/gcc%2Ffortran%2Ftrans-stmt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9e851845f6bcd7c13f3d42c13cd2f1c0e87f68cc/gcc%2Ffortran%2Ftrans-stmt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ftrans-stmt.c?ref=9e851845f6bcd7c13f3d42c13cd2f1c0e87f68cc", "patch": "@@ -2666,8 +2666,7 @@ gfc_trans_integer_select (gfc_code * code)\n     }\n \n   tmp = gfc_finish_block (&body);\n-  tmp = fold_build3_loc (input_location, SWITCH_EXPR, NULL_TREE,\n-\t\t\t se.expr, tmp, NULL_TREE);\n+  tmp = fold_build2_loc (input_location, SWITCH_EXPR, NULL_TREE, se.expr, tmp);\n   gfc_add_expr_to_block (&block, tmp);\n \n   tmp = build1_v (LABEL_EXPR, end_label);\n@@ -2952,8 +2951,8 @@ gfc_trans_character_select (gfc_code *code)\n \t  gfc_add_block_to_block (&block, &expr1se.post);\n \n \t  tmp = gfc_finish_block (&body);\n-\t  tmp = fold_build3_loc (input_location, SWITCH_EXPR, NULL_TREE,\n-\t\t\t\t case_num, tmp, NULL_TREE);\n+\t  tmp = fold_build2_loc (input_location, SWITCH_EXPR, NULL_TREE,\n+\t\t\t\t case_num, tmp);\n \t  gfc_add_expr_to_block (&block, tmp);\n \n \t  tmp = build1_v (LABEL_EXPR, end_label);\n@@ -3099,8 +3098,8 @@ gfc_trans_character_select (gfc_code *code)\n   gfc_add_block_to_block (&block, &expr1se.post);\n \n   tmp = gfc_finish_block (&body);\n-  tmp = fold_build3_loc (input_location, SWITCH_EXPR, NULL_TREE,\n-\t\t\t case_num, tmp, NULL_TREE);\n+  tmp = fold_build2_loc (input_location, SWITCH_EXPR, NULL_TREE,\n+\t\t\t case_num, tmp);\n   gfc_add_expr_to_block (&block, tmp);\n \n   tmp = build1_v (LABEL_EXPR, end_label);"}, {"sha": "8769505b313cefa61ef34c051d2c24338e078690", "filename": "gcc/gimplify.c", "status": "modified", "additions": 1, "deletions": 5, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9e851845f6bcd7c13f3d42c13cd2f1c0e87f68cc/gcc%2Fgimplify.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9e851845f6bcd7c13f3d42c13cd2f1c0e87f68cc/gcc%2Fgimplify.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgimplify.c?ref=9e851845f6bcd7c13f3d42c13cd2f1c0e87f68cc", "patch": "@@ -2287,10 +2287,6 @@ gimplify_switch_expr (tree *expr_p, gimple_seq *pre_p)\n       tree default_case = NULL_TREE;\n       gswitch *switch_stmt;\n \n-      /* If someone can be bothered to fill in the labels, they can\n-\t be bothered to null out the body too.  */\n-      gcc_assert (!SWITCH_LABELS (switch_expr));\n-\n       /* Save old labels, get new ones from body, then restore the old\n          labels.  Save all the things from the switch body to append after.  */\n       saved_labels = gimplify_ctxp->case_labels;\n@@ -2347,7 +2343,7 @@ gimplify_switch_expr (tree *expr_p, gimple_seq *pre_p)\n       labels.release ();\n     }\n   else\n-    gcc_assert (SWITCH_LABELS (switch_expr));\n+    gcc_unreachable ();\n \n   return GS_ALL_DONE;\n }"}, {"sha": "01af4678684ab862efa8c0f4e74e996ecc553cd6", "filename": "gcc/go/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9e851845f6bcd7c13f3d42c13cd2f1c0e87f68cc/gcc%2Fgo%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9e851845f6bcd7c13f3d42c13cd2f1c0e87f68cc/gcc%2Fgo%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgo%2FChangeLog?ref=9e851845f6bcd7c13f3d42c13cd2f1c0e87f68cc", "patch": "@@ -1,3 +1,8 @@\n+2017-11-28  Jakub Jelinek  <jakub@redhat.com>\n+\n+\t* go-gcc.cc (Gcc_backend::switch_statement): Build SWITCH_EXPR using\n+\tbuild2_loc instead of build3_loc.\n+\n 2017-11-14  Than McIntosh  <thanm@google.com>\n \n \t* go-gcc.cc (var_expression): Remove Varexpr_context parameter."}, {"sha": "1b0190d954ba136f533ec594781ffa0c14848682", "filename": "gcc/go/go-gcc.cc", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9e851845f6bcd7c13f3d42c13cd2f1c0e87f68cc/gcc%2Fgo%2Fgo-gcc.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9e851845f6bcd7c13f3d42c13cd2f1c0e87f68cc/gcc%2Fgo%2Fgo-gcc.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgo%2Fgo-gcc.cc?ref=9e851845f6bcd7c13f3d42c13cd2f1c0e87f68cc", "patch": "@@ -2289,8 +2289,8 @@ Gcc_backend::switch_statement(\n   tree tv = value->get_tree();\n   if (tv == error_mark_node)\n     return this->error_statement();\n-  tree t = build3_loc(switch_location.gcc_location(), SWITCH_EXPR,\n-                      NULL_TREE, tv, stmt_list, NULL_TREE);\n+  tree t = build2_loc(switch_location.gcc_location(), SWITCH_EXPR,\n+                      NULL_TREE, tv, stmt_list);\n   return this->make_statement(t);\n }\n "}, {"sha": "afa53791d798274941b2ab3f6024320bb11a1cf5", "filename": "gcc/jit/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9e851845f6bcd7c13f3d42c13cd2f1c0e87f68cc/gcc%2Fjit%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9e851845f6bcd7c13f3d42c13cd2f1c0e87f68cc/gcc%2Fjit%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjit%2FChangeLog?ref=9e851845f6bcd7c13f3d42c13cd2f1c0e87f68cc", "patch": "@@ -1,3 +1,8 @@\n+2017-11-28  Jakub Jelinek  <jakub@redhat.com>\n+\n+\t* jit-playback.c (add_switch): Build SWITCH_EXPR using build2 instead\n+\tof build3.  Formatting fixes.  Adjust funciton comment.\n+\n 2017-11-23  Tom de Vries  <tom@codesourcery.com>\n \n \t* libgccjit.c (RETURN_NULL_IF_FAIL_NONNULL_NUMERIC_TYPE): Wrap in"}, {"sha": "fe9fb2d8bc29cb2cb5adde978417401c029d41b9", "filename": "gcc/jit/jit-playback.c", "status": "modified", "additions": 4, "deletions": 15, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9e851845f6bcd7c13f3d42c13cd2f1c0e87f68cc/gcc%2Fjit%2Fjit-playback.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9e851845f6bcd7c13f3d42c13cd2f1c0e87f68cc/gcc%2Fjit%2Fjit-playback.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjit%2Fjit-playback.c?ref=9e851845f6bcd7c13f3d42c13cd2f1c0e87f68cc", "patch": "@@ -1689,12 +1689,7 @@ add_case (tree *ptr_t_switch_body,\n \n /* Add a switch statement to the function's statement list.\n \n-   My initial attempt at implementing this constructed a TREE_VEC\n-   of the cases and set it as SWITCH_LABELS (switch_expr).  However,\n-   gimplify.c:gimplify_switch_expr is set up to deal with SWITCH_BODY, and\n-   doesn't have any logic for gimplifying SWITCH_LABELS.\n-\n-   Hence we create a switch body, and populate it with case labels, each\n+   We create a switch body, and populate it with case labels, each\n    followed by a goto to the desired block.  */\n \n void\n@@ -1722,18 +1717,12 @@ add_switch (location *loc,\n     {\n       tree t_low_value = c->m_min_value->as_tree ();\n       tree t_high_value = c->m_max_value->as_tree ();\n-      add_case (&t_switch_body,\n-\t\tt_low_value,\n-\t\tt_high_value,\n-\t\tc->m_dest_block);\n+      add_case (&t_switch_body, t_low_value, t_high_value, c->m_dest_block);\n     }\n   /* Default label. */\n-  add_case (&t_switch_body,\n-\t    NULL_TREE, NULL_TREE,\n-\t    default_block);\n+  add_case (&t_switch_body, NULL_TREE, NULL_TREE, default_block);\n \n-  tree switch_stmt = build3 (SWITCH_EXPR, t_type, t_expr,\n-\t\t\t     t_switch_body, NULL_TREE);\n+  tree switch_stmt = build2 (SWITCH_EXPR, t_type, t_expr, t_switch_body);\n   if (loc)\n     set_tree_location (switch_stmt, loc);\n   add_stmt (switch_stmt);"}, {"sha": "1cdec69314dec5bf99bc23f6bacab4d1dbce6ebe", "filename": "gcc/tree-pretty-print.c", "status": "modified", "additions": 0, "deletions": 20, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9e851845f6bcd7c13f3d42c13cd2f1c0e87f68cc/gcc%2Ftree-pretty-print.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9e851845f6bcd7c13f3d42c13cd2f1c0e87f68cc/gcc%2Ftree-pretty-print.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-pretty-print.c?ref=9e851845f6bcd7c13f3d42c13cd2f1c0e87f68cc", "patch": "@@ -2686,26 +2686,6 @@ dump_generic_node (pretty_printer *pp, tree node, int spc, dump_flags_t flags,\n \t      dump_generic_node (pp, SWITCH_BODY (node), spc+4, flags,\n \t\t                 true);\n \t    }\n-\t  else\n-\t    {\n-\t      tree vec = SWITCH_LABELS (node);\n-\t      size_t i, n = TREE_VEC_LENGTH (vec);\n-\t      for (i = 0; i < n; ++i)\n-\t\t{\n-\t\t  tree elt = TREE_VEC_ELT (vec, i);\n-\t\t  newline_and_indent (pp, spc+4);\n-\t\t  if (elt)\n-\t\t    {\n-\t\t      dump_generic_node (pp, elt, spc+4, flags, false);\n-\t\t      pp_string (pp, \" goto \");\n-\t\t      dump_generic_node (pp, CASE_LABEL (elt), spc+4,\n-\t\t\t\t\t flags, true);\n-\t\t      pp_semicolon (pp);\n-\t\t    }\n-\t\t  else\n-\t\t    pp_string (pp, \"case ???: goto ???;\");\n-\t\t}\n-\t    }\n \t  newline_and_indent (pp, spc+2);\n \t  pp_right_brace (pp);\n \t}"}, {"sha": "da2db7ae9bf452c9ec9f213740ba2c75721c69ec", "filename": "gcc/tree.c", "status": "modified", "additions": 1, "deletions": 5, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9e851845f6bcd7c13f3d42c13cd2f1c0e87f68cc/gcc%2Ftree.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9e851845f6bcd7c13f3d42c13cd2f1c0e87f68cc/gcc%2Ftree.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree.c?ref=9e851845f6bcd7c13f3d42c13cd2f1c0e87f68cc", "patch": "@@ -12351,11 +12351,7 @@ block_may_fallthru (const_tree block)\n       return false;\n \n     case SWITCH_EXPR:\n-      /* If SWITCH_LABELS is set, this is lowered, and represents a\n-\t branch to a selected label and hence can not fall through.\n-\t Otherwise SWITCH_BODY is set, and the switch can fall\n-\t through.  */\n-      return SWITCH_LABELS (stmt) == NULL_TREE;\n+      return true;\n \n     case COND_EXPR:\n       if (block_may_fallthru (COND_EXPR_THEN (stmt)))"}, {"sha": "9b6e06fba8c08c2919e56adddf1712e4c1c50207", "filename": "gcc/tree.def", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9e851845f6bcd7c13f3d42c13cd2f1c0e87f68cc/gcc%2Ftree.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9e851845f6bcd7c13f3d42c13cd2f1c0e87f68cc/gcc%2Ftree.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree.def?ref=9e851845f6bcd7c13f3d42c13cd2f1c0e87f68cc", "patch": "@@ -943,10 +943,8 @@ DEFTREECODE (LOOP_EXPR, \"loop_expr\", tcc_statement, 1)\n    Operand 0 is the expression used to perform the branch,\n    Operand 1 is the body of the switch, which probably contains\n      CASE_LABEL_EXPRs.  It may also be NULL, in which case operand 2\n-     must not be NULL.\n-   Operand 2 is either NULL_TREE or a TREE_VEC of the CASE_LABEL_EXPRs\n-     of all the cases.  */\n-DEFTREECODE (SWITCH_EXPR, \"switch_expr\", tcc_statement, 3)\n+     must not be NULL.  */\n+DEFTREECODE (SWITCH_EXPR, \"switch_expr\", tcc_statement, 2)\n \n /* Used to represent a case label.\n "}, {"sha": "68c5b2c4bd2520a2491f7a8a297ad5a709dd2785", "filename": "gcc/tree.h", "status": "modified", "additions": 1, "deletions": 4, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9e851845f6bcd7c13f3d42c13cd2f1c0e87f68cc/gcc%2Ftree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9e851845f6bcd7c13f3d42c13cd2f1c0e87f68cc/gcc%2Ftree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree.h?ref=9e851845f6bcd7c13f3d42c13cd2f1c0e87f68cc", "patch": "@@ -1172,12 +1172,9 @@ extern void protected_set_expr_location (tree, location_t);\n #define COMPOUND_LITERAL_EXPR_DECL(NODE)\t\t\t\\\n   DECL_EXPR_DECL (COMPOUND_LITERAL_EXPR_DECL_EXPR (NODE))\n \n-/* SWITCH_EXPR accessors. These give access to the condition, body and\n-   original condition type (before any compiler conversions)\n-   of the switch statement, respectively.  */\n+/* SWITCH_EXPR accessors. These give access to the condition and body.  */\n #define SWITCH_COND(NODE)       TREE_OPERAND (SWITCH_EXPR_CHECK (NODE), 0)\n #define SWITCH_BODY(NODE)       TREE_OPERAND (SWITCH_EXPR_CHECK (NODE), 1)\n-#define SWITCH_LABELS(NODE)     TREE_OPERAND (SWITCH_EXPR_CHECK (NODE), 2)\n \n /* CASE_LABEL_EXPR accessors. These give access to the high and low values\n    of a case label, respectively.  */"}]}