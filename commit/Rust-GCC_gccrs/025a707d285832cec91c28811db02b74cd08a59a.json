{"sha": "025a707d285832cec91c28811db02b74cd08a59a", "node_id": "C_kwDOANBUbNoAKDAyNWE3MDdkMjg1ODMyY2VjOTFjMjg4MTFkYjAyYjc0Y2QwOGE1OWE", "commit": {"author": {"name": "Thomas Koenig", "email": "tkoenig@gcc.gnu.org", "date": "2022-01-15T10:30:20Z"}, "committer": {"name": "Thomas Koenig", "email": "tkoenig@gcc.gnu.org", "date": "2022-01-17T06:29:35Z"}, "message": "Allow for multiple defaults in endianness and r16 in GFORTRAN_CONVERT_UNIT.\n\nWith this patch, it is possible to specify multiple defaults inthe\nGFORTRAN_CONVERT_UNIT environment variable so that, for example, R16_IEEE\nand BIG_ENDIAN can be specified together.\n\nlibgfortran/ChangeLog:\n\n\t* runtime/environ.c: Allow for multiple default values so that\n\tseparate default specifications for IBM long double format and\n\tendianness are possible.", "tree": {"sha": "97d48e2e8ade0141f3def38459173ac4afdc5525", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/97d48e2e8ade0141f3def38459173ac4afdc5525"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/025a707d285832cec91c28811db02b74cd08a59a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/025a707d285832cec91c28811db02b74cd08a59a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/025a707d285832cec91c28811db02b74cd08a59a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/025a707d285832cec91c28811db02b74cd08a59a/comments", "author": null, "committer": null, "parents": [{"sha": "b3e77224edbcb06cfd6ef585c11fc2c7d9672a16", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b3e77224edbcb06cfd6ef585c11fc2c7d9672a16", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b3e77224edbcb06cfd6ef585c11fc2c7d9672a16"}], "stats": {"total": 111, "additions": 56, "deletions": 55}, "files": [{"sha": "a53c64965b688e287ff56dbcbdd5c142a0a0b752", "filename": "libgfortran/runtime/environ.c", "status": "modified", "additions": 56, "deletions": 55, "changes": 111, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/025a707d285832cec91c28811db02b74cd08a59a/libgfortran%2Fruntime%2Fenviron.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/025a707d285832cec91c28811db02b74cd08a59a/libgfortran%2Fruntime%2Fenviron.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fruntime%2Fenviron.c?ref=025a707d285832cec91c28811db02b74cd08a59a", "patch": "@@ -499,78 +499,79 @@ do_parse (void)\n \n   unit_count = 0;\n \n-  start = p;\n-\n   /* Parse the string.  First, let's look for a default.  */\n-  tok = next_token ();\n   endian = 0;\n-\n-  switch (tok)\n+  while (1)\n     {\n-    case NATIVE:\n-      endian = GFC_CONVERT_NATIVE;\n-      break;\n+      start = p;\n+      tok = next_token ();\n+      switch (tok)\n+\t{\n+\tcase NATIVE:\n+\t  endian = GFC_CONVERT_NATIVE;\n+\t  break;\n \n-    case SWAP:\n-      endian = GFC_CONVERT_SWAP;\n-      break;\n+\tcase SWAP:\n+\t  endian = GFC_CONVERT_SWAP;\n+\t  break;\n \n-    case BIG:\n-      endian = GFC_CONVERT_BIG;\n-      break;\n+\tcase BIG:\n+\t  endian = GFC_CONVERT_BIG;\n+\t  break;\n \n-    case LITTLE:\n-      endian = GFC_CONVERT_LITTLE;\n-      break;\n+\tcase LITTLE:\n+\t  endian = GFC_CONVERT_LITTLE;\n+\t  break;\n \n #ifdef HAVE_GFC_REAL_17\n-    case R16_IEEE:\n-      endian = GFC_CONVERT_R16_IEEE;\n-      break;\n+\tcase R16_IEEE:\n+\t  endian = GFC_CONVERT_R16_IEEE;\n+\t  break;\n \n-    case R16_IBM:\n-      endian = GFC_CONVERT_R16_IBM;\n-      break;\n+\tcase R16_IBM:\n+\t  endian = GFC_CONVERT_R16_IBM;\n+\t  break;\n #endif\n-    case INTEGER:\n-      /* A leading digit means that we are looking at an exception.\n-\t Reset the position to the beginning, and continue processing\n-\t at the exception list.  */\n-      p = start;\n-      goto exceptions;\n-      break;\n+\tcase INTEGER:\n+\t  /* A leading digit means that we are looking at an exception.\n+\t     Reset the position to the beginning, and continue processing\n+\t     at the exception list.  */\n+\t  p = start;\n+\t  goto exceptions;\n+\t  break;\n \n-    case END:\n-      goto end;\n-      break;\n+\tcase END:\n+\t  goto end;\n+\t  break;\n \n-    default:\n-      goto error;\n-      break;\n+\tdefault:\n+\t  goto error;\n+\t  break;\n     }\n \n-  tok = next_token ();\n-  switch (tok)\n-    {\n-    case ';':\n-      def = endian;\n-      break;\n+      tok = next_token ();\n+      switch (tok)\n+\t{\n+\tcase ';':\n+\t  def = def == GFC_CONVERT_NONE ? endian : def | endian;\n+\t  break;\n \n-    case ':':\n-      /* This isn't a default after all.  Reset the position to the\n-\t beginning, and continue processing at the exception list.  */\n-      p = start;\n-      goto exceptions;\n-      break;\n+\tcase ':':\n+\t  /* This isn't a default after all.  Reset the position to the\n+\t     beginning, and continue processing at the exception list.  */\n+\t  p = start;\n+\t  goto exceptions;\n+\t  break;\n \n-    case END:\n-      def = endian;\n-      goto end;\n-      break;\n+\tcase END:\n+\t  def = def == GFC_CONVERT_NONE ? endian : def | endian;\n+\t  goto end;\n+\t  break;\n \n-    default:\n-      goto error;\n-      break;\n+\tdefault:\n+\t  goto error;\n+\t  break;\n+\t}\n     }\n \n  exceptions:"}]}