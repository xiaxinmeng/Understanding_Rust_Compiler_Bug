{"sha": "d5ef47fb25f583d46b42dd53917aa5ff5990bccb", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDVlZjQ3ZmIyNWY1ODNkNDZiNDJkZDUzOTE3YWE1ZmY1OTkwYmNjYg==", "commit": {"author": {"name": "Gary Dismukes", "email": "dismukes@adacore.com", "date": "2006-10-31T18:11:33Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2006-10-31T18:11:33Z"}, "message": "s-scaval.adb (Initialize): Add new Boolean flag AFloat that is set True when...\n\n2006-10-31  Gary Dismukes  <dismukes@adacore.com>\n\n\t* s-scaval.adb (Initialize): Add new Boolean flag AFloat that is set\n\tTrue when AAMP extended floating-point is in use (48-bit). Change type\n\tByteLF to ByteLLF, add new array type ByteLF and condition the size of\n\tthe two byte array types on AFloat. Change type of IV_Ilf overlay\n\tvariable from Byte8 to ByteLF. Add appropriate initializations of\n\tfloating-point overlays for AAMP cases.\n\nFrom-SVN: r118316", "tree": {"sha": "ea95b3aa662fae2b864235be8f1577ec8f4b6824", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ea95b3aa662fae2b864235be8f1577ec8f4b6824"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d5ef47fb25f583d46b42dd53917aa5ff5990bccb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d5ef47fb25f583d46b42dd53917aa5ff5990bccb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d5ef47fb25f583d46b42dd53917aa5ff5990bccb", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d5ef47fb25f583d46b42dd53917aa5ff5990bccb/comments", "author": {"login": "dismukes", "id": 50880541, "node_id": "MDQ6VXNlcjUwODgwNTQx", "avatar_url": "https://avatars.githubusercontent.com/u/50880541?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dismukes", "html_url": "https://github.com/dismukes", "followers_url": "https://api.github.com/users/dismukes/followers", "following_url": "https://api.github.com/users/dismukes/following{/other_user}", "gists_url": "https://api.github.com/users/dismukes/gists{/gist_id}", "starred_url": "https://api.github.com/users/dismukes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dismukes/subscriptions", "organizations_url": "https://api.github.com/users/dismukes/orgs", "repos_url": "https://api.github.com/users/dismukes/repos", "events_url": "https://api.github.com/users/dismukes/events{/privacy}", "received_events_url": "https://api.github.com/users/dismukes/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "f7753fbb7e1eae498bc99d9edd8ac90c6dee0096", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f7753fbb7e1eae498bc99d9edd8ac90c6dee0096", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f7753fbb7e1eae498bc99d9edd8ac90c6dee0096"}], "stats": {"total": 80, "additions": 64, "deletions": 16}, "files": [{"sha": "6339d26c774336153f7aa012b1eccee7ec58687c", "filename": "gcc/ada/s-scaval.adb", "status": "modified", "additions": 64, "deletions": 16, "changes": 80, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d5ef47fb25f583d46b42dd53917aa5ff5990bccb/gcc%2Fada%2Fs-scaval.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d5ef47fb25f583d46b42dd53917aa5ff5990bccb/gcc%2Fada%2Fs-scaval.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-scaval.adb?ref=d5ef47fb25f583d46b42dd53917aa5ff5990bccb", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 2003-2005, Free Software Foundation, Inc.         --\n+--          Copyright (C) 2003-2006, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -60,7 +60,29 @@ package body System.Scalar_Values is\n       EFloat : constant Boolean := Long_Long_Float'Size > Long_Float'Size;\n       --  Set True if we are on an x86 with 96-bit floats for extended\n \n-      type ByteLF is array (0 .. 7 + 4 * Boolean'Pos (EFloat)) of Byte1;\n+      AFloat : constant Boolean :=\n+                 Long_Float'Size = 48 and Long_Long_Float'Size = 48;\n+      --  Set True if we are on an AAMP with 48-bit extended floating point\n+\n+      type ByteLF is array (0 .. 7 - 2 * Boolean'Pos (AFloat)) of Byte1;\n+\n+      for ByteLF'Component_Size use 8;\n+\n+      --  Type used to hold Long_Float values on all targets and to initialize\n+      --  48-bit Long_Float values used on AAMP. On AAMP, this type is 6 bytes.\n+      --  On other targets the type is 8 bytes, and type Byte8 is used for\n+      --  values that are then converted to ByteLF.\n+\n+      pragma Warnings (Off);\n+      function To_ByteLF is new Unchecked_Conversion (Byte8, ByteLF);\n+      pragma Warnings (On);\n+\n+      type ByteLLF is\n+        array (0 .. 7 + 4 * Boolean'Pos (EFloat) - 2 * Boolean'Pos (AFloat))\n+          of Byte1;\n+\n+      for ByteLLF'Component_Size use 8;\n+\n       --  Type used to initialize Long_Long_Float values used on x86 and\n       --  any other target with the same 80-bit floating-point values that\n       --  GCC always stores in 96-bits. Note that we are assuming Intel\n@@ -75,8 +97,8 @@ package body System.Scalar_Values is\n \n       IV_Isf : aliased Byte4;     -- Initialize short float\n       IV_Ifl : aliased Byte4;     -- Initialize float\n-      IV_Ilf : aliased Byte8;     -- Initialize long float\n-      IV_Ill : aliased ByteLF;    -- Initialize long long float\n+      IV_Ilf : aliased ByteLF;    -- Initialize long float\n+      IV_Ill : aliased ByteLLF;   -- Initialize long long float\n \n       for IV_Isf'Address use IS_Isf'Address;\n       for IV_Ifl'Address use IS_Ifl'Address;\n@@ -164,9 +186,16 @@ package body System.Scalar_Values is\n          IS_Iz4 := 16#0000_0000#;\n          IS_Iz8 := 16#0000_0000_0000_0000#;\n \n-         IV_Isf := IS_Iu4;\n-         IV_Ifl := IS_Iu4;\n-         IV_Ilf := IS_Iu8;\n+         if AFloat then\n+            IV_Isf := 16#FFFF_FF00#;\n+            IV_Ifl := 16#FFFF_FF00#;\n+            IV_Ilf := (0, 16#FF#, 16#FF#, 16#FF#, 16#FF#, 16#FF#);\n+\n+         else\n+            IV_Isf := IS_Iu4;\n+            IV_Ifl := IS_Iu4;\n+            IV_Ilf := To_ByteLF (IS_Iu8);\n+         end if;\n \n          if EFloat then\n             IV_Ill := (0, 0, 0, 0, 0, 0, 0, 16#C0#, 16#FF#, 16#FF#, 0, 0);\n@@ -190,9 +219,16 @@ package body System.Scalar_Values is\n          IS_Iz4 := 16#0000_0000#;\n          IS_Iz8 := 16#0000_0000_0000_0000#;\n \n-         IV_Isf := 16#FF80_0000#;\n-         IV_Ifl := 16#FF80_0000#;\n-         IV_Ilf := 16#FFF0_0000_0000_0000#;\n+         if AFloat then\n+            IV_Isf := 16#0000_0001#;\n+            IV_Ifl := 16#0000_0001#;\n+            IV_Ilf := (1, 0, 0, 0, 0, 0);\n+\n+         else\n+            IV_Isf := 16#FF80_0000#;\n+            IV_Ifl := 16#FF80_0000#;\n+            IV_Ilf := To_ByteLF (16#FFF0_0000_0000_0000#);\n+         end if;\n \n          if EFloat then\n             IV_Ill := (0, 0, 0, 0, 0, 0, 0, 16#80#, 16#FF#, 16#FF#, 0, 0);\n@@ -216,9 +252,16 @@ package body System.Scalar_Values is\n          IS_Iz4 := 16#FFFF_FFFF#;\n          IS_Iz8 := 16#FFFF_FFFF_FFFF_FFFF#;\n \n-         IV_Isf := 16#7F80_0000#;\n-         IV_Ifl := 16#7F80_0000#;\n-         IV_Ilf := 16#7FF0_0000_0000_0000#;\n+         if AFloat then\n+            IV_Isf := 16#7FFF_FFFF#;\n+            IV_Ifl := 16#7FFF_FFFF#;\n+            IV_Ilf := (16#FF#, 16#FF#, 16#FF#, 16#FF#, 16#FF#, 16#7F#);\n+\n+         else\n+            IV_Isf := 16#7F80_0000#;\n+            IV_Ifl := 16#7F80_0000#;\n+            IV_Ilf := To_ByteLF (16#7FF0_0000_0000_0000#);\n+         end if;\n \n          if EFloat then\n             IV_Ill := (0, 0, 0, 0, 0, 0, 0, 16#80#, 16#FF#, 16#7F#, 0, 0);\n@@ -260,7 +303,12 @@ package body System.Scalar_Values is\n \n          IV_Isf := IS_Is4;\n          IV_Ifl := IS_Is4;\n-         IV_Ilf := IS_Is8;\n+\n+         if AFloat then\n+            IV_Ill := (B, B, B, B, B, B);\n+         else\n+            IV_Ilf := To_ByteLF (IS_Is8);\n+         end if;\n \n          if EFloat then\n             IV_Ill := (B, B, B, B, B, B, B, B, B, B, B, B);\n@@ -273,10 +321,10 @@ package body System.Scalar_Values is\n       if not EFloat then\n          declare\n             pragma Warnings (Off);\n-            function To_ByteLF is new Unchecked_Conversion (Byte8, ByteLF);\n+            function To_ByteLLF is new Unchecked_Conversion (ByteLF, ByteLLF);\n             pragma Warnings (On);\n          begin\n-            IV_Ill := To_ByteLF (IV_Ilf);\n+            IV_Ill := To_ByteLLF (IV_Ilf);\n          end;\n       end if;\n    end Initialize;"}]}