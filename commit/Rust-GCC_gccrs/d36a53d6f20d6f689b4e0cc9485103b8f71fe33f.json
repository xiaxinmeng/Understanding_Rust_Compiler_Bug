{"sha": "d36a53d6f20d6f689b4e0cc9485103b8f71fe33f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDM2YTUzZDZmMjBkNmY2ODliNGUwY2M5NDg1MTAzYjhmNzFmZTMzZg==", "commit": {"author": {"name": "Bill Schmidt", "email": "wschmidt@linux.vnet.ibm.com", "date": "2017-03-02T19:17:04Z"}, "committer": {"name": "William Schmidt", "email": "wschmidt@gcc.gnu.org", "date": "2017-03-02T19:17:04Z"}, "message": "vector.md (vector_ne_<mode>_p): Correct operand numbers.\n\n2017-03-02  Bill Schmidt  <wschmidt@linux.vnet.ibm.com>\n\n\t* config/rs6000/vector.md (vector_ne_<mode>_p): Correct operand\n\tnumbers.\n\t(vector_ae_<mode>_p): Likewise.\n\t(vector_nez_<mode>_p): Likewise.\n\t(vector_ne_v2di_p): Likewise.\n\t(vector_ae_v2di_p): Likewise.\n\t(vector_ne_<mode>_p): Likewise.\n\t* config/rs6000/vsx.md (vsx_tsqrt<mode>2_fg): Correct operand\n\tnumbers.\n\t(vsx_tsqrt<mode>2_fe): Likewise.\n\nFrom-SVN: r245849", "tree": {"sha": "072400f8a14822a155cae3fbcf83ad1c0181d565", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/072400f8a14822a155cae3fbcf83ad1c0181d565"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d36a53d6f20d6f689b4e0cc9485103b8f71fe33f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d36a53d6f20d6f689b4e0cc9485103b8f71fe33f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d36a53d6f20d6f689b4e0cc9485103b8f71fe33f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d36a53d6f20d6f689b4e0cc9485103b8f71fe33f/comments", "author": {"login": "wschmidt-ibm", "id": 5520937, "node_id": "MDQ6VXNlcjU1MjA5Mzc=", "avatar_url": "https://avatars.githubusercontent.com/u/5520937?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wschmidt-ibm", "html_url": "https://github.com/wschmidt-ibm", "followers_url": "https://api.github.com/users/wschmidt-ibm/followers", "following_url": "https://api.github.com/users/wschmidt-ibm/following{/other_user}", "gists_url": "https://api.github.com/users/wschmidt-ibm/gists{/gist_id}", "starred_url": "https://api.github.com/users/wschmidt-ibm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wschmidt-ibm/subscriptions", "organizations_url": "https://api.github.com/users/wschmidt-ibm/orgs", "repos_url": "https://api.github.com/users/wschmidt-ibm/repos", "events_url": "https://api.github.com/users/wschmidt-ibm/events{/privacy}", "received_events_url": "https://api.github.com/users/wschmidt-ibm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "1a5a334e7839b2fe8a200c60af066e836ceff12c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1a5a334e7839b2fe8a200c60af066e836ceff12c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1a5a334e7839b2fe8a200c60af066e836ceff12c"}], "stats": {"total": 49, "additions": 31, "deletions": 18}, "files": [{"sha": "c8b375ecf5c00ed6aa7a5c9f60ecf5352fd1f676", "filename": "gcc/ChangeLog", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d36a53d6f20d6f689b4e0cc9485103b8f71fe33f/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d36a53d6f20d6f689b4e0cc9485103b8f71fe33f/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=d36a53d6f20d6f689b4e0cc9485103b8f71fe33f", "patch": "@@ -1,3 +1,16 @@\n+2017-03-02  Bill Schmidt  <wschmidt@linux.vnet.ibm.com>\n+\n+\t* config/rs6000/vector.md (vector_ne_<mode>_p): Correct operand\n+\tnumbers.\n+\t(vector_ae_<mode>_p): Likewise.\n+\t(vector_nez_<mode>_p): Likewise.\n+\t(vector_ne_v2di_p): Likewise.\n+\t(vector_ae_v2di_p): Likewise.\n+\t(vector_ne_<mode>_p): Likewise.\n+\t* config/rs6000/vsx.md (vsx_tsqrt<mode>2_fg): Correct operand\n+\tnumbers.\n+\t(vsx_tsqrt<mode>2_fe): Likewise.\n+\n 2017-03-02  Uros Bizjak  <ubizjak@gmail.com>\n \n \tPR target/79514"}, {"sha": "fefe5db6aae101d41d380b085e87015ec82be505", "filename": "gcc/config/rs6000/vector.md", "status": "modified", "additions": 12, "deletions": 12, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d36a53d6f20d6f689b4e0cc9485103b8f71fe33f/gcc%2Fconfig%2Frs6000%2Fvector.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d36a53d6f20d6f689b4e0cc9485103b8f71fe33f/gcc%2Fconfig%2Frs6000%2Fvector.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Fvector.md?ref=d36a53d6f20d6f689b4e0cc9485103b8f71fe33f", "patch": "@@ -700,15 +700,15 @@\n \t  (unspec:CC [(ne:CC (match_operand:VI 1 \"vlogical_operand\")\n \t\t\t     (match_operand:VI 2 \"vlogical_operand\"))]\n \t   UNSPEC_PREDICATE))\n-     (set (match_dup 4)\n+     (set (match_dup 3)\n \t  (ne:VI (match_dup 1)\n \t\t (match_dup 2)))])\n    (set (match_operand:SI 0 \"register_operand\" \"=r\")\n \t(lt:SI (reg:CC CR6_REGNO)\n \t       (const_int 0)))]\n   \"TARGET_P9_VECTOR\"\n {\n-  operands[4] = gen_reg_rtx (<MODE>mode);\n+  operands[3] = gen_reg_rtx (<MODE>mode);\n })\n \n ;; This expansion handles the V16QI, V8HI, and V4SI modes in the\n@@ -719,7 +719,7 @@\n \t  (unspec:CC [(ne:CC (match_operand:VI 1 \"vlogical_operand\")\n \t\t\t     (match_operand:VI 2 \"vlogical_operand\"))]\n \t   UNSPEC_PREDICATE))\n-     (set (match_dup 4)\n+     (set (match_dup 3)\n \t  (ne:VI (match_dup 1)\n \t\t (match_dup 2)))])\n    (set (match_operand:SI 0 \"register_operand\" \"=r\")\n@@ -730,7 +730,7 @@\n \t\t(const_int 1)))]\n   \"TARGET_P9_VECTOR\"\n {\n-  operands[4] = gen_reg_rtx (<MODE>mode);\n+  operands[3] = gen_reg_rtx (<MODE>mode);\n })\n \n ;; This expansion handles the V16QI, V8HI, and V4SI modes in the\n@@ -763,15 +763,15 @@\n \t  (unspec:CC [(eq:CC (match_operand:V2DI 1 \"vlogical_operand\")\n \t\t\t     (match_operand:V2DI 2 \"vlogical_operand\"))]\n \t\t     UNSPEC_PREDICATE))\n-     (set (match_dup 4)\n+     (set (match_dup 3)\n \t  (eq:V2DI (match_dup 1)\n \t\t   (match_dup 2)))])\n    (set (match_operand:SI 0 \"register_operand\" \"=r\")\n \t(eq:SI (reg:CC CR6_REGNO)\n \t       (const_int 0)))]\n   \"TARGET_P9_VECTOR\"\n {\n-  operands[4] = gen_reg_rtx (V2DImode);\n+  operands[3] = gen_reg_rtx (V2DImode);\n })\n \n ;; This expansion handles the V2DI mode in the implementation of the\n@@ -786,7 +786,7 @@\n \t  (unspec:CC [(eq:CC (match_operand:V2DI 1 \"vlogical_operand\")\n \t\t\t     (match_operand:V2DI 2 \"vlogical_operand\"))]\n \t\t     UNSPEC_PREDICATE))\n-     (set (match_dup 4)\n+     (set (match_dup 3)\n \t  (eq:V2DI (match_dup 1)\n \t\t   (match_dup 2)))])\n    (set (match_operand:SI 0 \"register_operand\" \"=r\")\n@@ -797,7 +797,7 @@\n \t\t(const_int 1)))]\n   \"TARGET_P9_VECTOR\"\n {\n-  operands[4] = gen_reg_rtx (V2DImode);\n+  operands[3] = gen_reg_rtx (V2DImode);\n })\n \n ;; This expansion handles the V4SF and V2DF modes in the Power9\n@@ -811,15 +811,15 @@\n \t  (unspec:CC [(eq:CC (match_operand:VEC_F 1 \"vlogical_operand\")\n \t\t\t     (match_operand:VEC_F 2 \"vlogical_operand\"))]\n \t\t     UNSPEC_PREDICATE))\n-     (set (match_dup 4)\n+     (set (match_dup 3)\n \t  (eq:VEC_F (match_dup 1)\n \t\t    (match_dup 2)))])\n    (set (match_operand:SI 0 \"register_operand\" \"=r\")\n \t(eq:SI (reg:CC CR6_REGNO)\n \t       (const_int 0)))]\n   \"TARGET_P9_VECTOR\"\n {\n-  operands[4] = gen_reg_rtx (<MODE>mode);\n+  operands[3] = gen_reg_rtx (<MODE>mode);\n })\n \n ;; This expansion handles the V4SF and V2DF modes in the Power9\n@@ -833,7 +833,7 @@\n \t  (unspec:CC [(eq:CC (match_operand:VEC_F 1 \"vlogical_operand\")\n \t\t\t     (match_operand:VEC_F 2 \"vlogical_operand\"))]\n \t\t     UNSPEC_PREDICATE))\n-     (set (match_dup 4)\n+     (set (match_dup 3)\n \t  (eq:VEC_F (match_dup 1)\n \t\t    (match_dup 2)))])\n    (set (match_operand:SI 0 \"register_operand\" \"=r\")\n@@ -844,7 +844,7 @@\n \t\t(const_int 1)))]\n   \"TARGET_P9_VECTOR\"\n {\n-  operands[4] = gen_reg_rtx (<MODE>mode);\n+  operands[3] = gen_reg_rtx (<MODE>mode);\n })\n \n (define_expand \"vector_gt_<mode>_p\""}, {"sha": "aabc8f61ecef620b350c5c09e7aa6a6bf9b673a5", "filename": "gcc/config/rs6000/vsx.md", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d36a53d6f20d6f689b4e0cc9485103b8f71fe33f/gcc%2Fconfig%2Frs6000%2Fvsx.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d36a53d6f20d6f689b4e0cc9485103b8f71fe33f/gcc%2Fconfig%2Frs6000%2Fvsx.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Fvsx.md?ref=d36a53d6f20d6f689b4e0cc9485103b8f71fe33f", "patch": "@@ -1383,28 +1383,28 @@\n \n ;; *tsqrt* returning the fg flag\n (define_expand \"vsx_tsqrt<mode>2_fg\"\n-  [(set (match_dup 3)\n+  [(set (match_dup 2)\n \t(unspec:CCFP [(match_operand:VSX_B 1 \"vsx_register_operand\" \"\")]\n \t\t     UNSPEC_VSX_TSQRT))\n    (set (match_operand:SI 0 \"gpc_reg_operand\" \"\")\n-\t(gt:SI (match_dup 3)\n+\t(gt:SI (match_dup 2)\n \t       (const_int 0)))]\n   \"VECTOR_UNIT_VSX_P (<MODE>mode)\"\n {\n-  operands[3] = gen_reg_rtx (CCFPmode);\n+  operands[2] = gen_reg_rtx (CCFPmode);\n })\n \n ;; *tsqrt* returning the fe flag\n (define_expand \"vsx_tsqrt<mode>2_fe\"\n-  [(set (match_dup 3)\n+  [(set (match_dup 2)\n \t(unspec:CCFP [(match_operand:VSX_B 1 \"vsx_register_operand\" \"\")]\n \t\t     UNSPEC_VSX_TSQRT))\n    (set (match_operand:SI 0 \"gpc_reg_operand\" \"\")\n-\t(eq:SI (match_dup 3)\n+\t(eq:SI (match_dup 2)\n \t       (const_int 0)))]\n   \"VECTOR_UNIT_VSX_P (<MODE>mode)\"\n {\n-  operands[3] = gen_reg_rtx (CCFPmode);\n+  operands[2] = gen_reg_rtx (CCFPmode);\n })\n \n (define_insn \"*vsx_tsqrt<mode>2_internal\""}]}