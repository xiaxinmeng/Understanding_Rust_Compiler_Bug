{"sha": "75cc66f26344aa95c916ba580191e3d17fa817c2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzVjYzY2ZjI2MzQ0YWE5NWM5MTZiYTU4MDE5MWUzZDE3ZmE4MTdjMg==", "commit": {"author": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2016-08-16T14:14:18Z"}, "committer": {"name": "Martin Liska", "email": "marxin@gcc.gnu.org", "date": "2016-08-16T14:14:18Z"}, "message": "gcov: add new option (--hash-filenames) (PR\n\n\tPR gcov-profile/36412\n\t* doc/gcov.texi: Document --hash-filenames(-x).\n\t* gcov.c (print_usage): Add the option.\n\t(process_args): Process the option, sort options alphabetically.\n\t(md5sum_to_hex): New function.\n\t(make_gcov_file_name): Do the md5sum and append it to a\n\tfilename.\n\nFrom-SVN: r239503", "tree": {"sha": "d89cf48000e2f957e9dcb0c5251868de4f23fea3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d89cf48000e2f957e9dcb0c5251868de4f23fea3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/75cc66f26344aa95c916ba580191e3d17fa817c2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/75cc66f26344aa95c916ba580191e3d17fa817c2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/75cc66f26344aa95c916ba580191e3d17fa817c2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/75cc66f26344aa95c916ba580191e3d17fa817c2/comments", "author": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "3c556bc4e9eb31561f246e8e2944b05a95cc1a4a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3c556bc4e9eb31561f246e8e2944b05a95cc1a4a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3c556bc4e9eb31561f246e8e2944b05a95cc1a4a"}], "stats": {"total": 69, "additions": 67, "deletions": 2}, "files": [{"sha": "df133208b2c90b720df26d504ad1f42e62f1811e", "filename": "gcc/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/75cc66f26344aa95c916ba580191e3d17fa817c2/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/75cc66f26344aa95c916ba580191e3d17fa817c2/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=75cc66f26344aa95c916ba580191e3d17fa817c2", "patch": "@@ -1,3 +1,13 @@\n+2016-08-16  Martin Liska  <mliska@suse.cz>\n+\n+\tPR gcov-profile/36412\n+\t* doc/gcov.texi: Document --hash-filenames(-x).\n+\t* gcov.c (print_usage): Add the option.\n+\t(process_args): Process the option, sort options alphabetically.\n+\t(md5sum_to_hex): New function.\n+\t(make_gcov_file_name): Do the md5sum and append it to a\n+\tfilename.\n+\n 2016-08-16  Bin Cheng  <bin.cheng@arm.com>\n \n \tPR tree-optimization/69848"}, {"sha": "a0a7af78900b4db8bd3e1fe135759f6d9c4526fc", "filename": "gcc/doc/gcov.texi", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/75cc66f26344aa95c916ba580191e3d17fa817c2/gcc%2Fdoc%2Fgcov.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/75cc66f26344aa95c916ba580191e3d17fa817c2/gcc%2Fdoc%2Fgcov.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Fgcov.texi?ref=75cc66f26344aa95c916ba580191e3d17fa817c2", "patch": "@@ -133,6 +133,7 @@ gcov [@option{-v}|@option{--version}] [@option{-h}|@option{--help}]\n      [@option{-r}|@option{--relative-only}]\n      [@option{-s}|@option{--source-prefix} @var{directory}]\n      [@option{-u}|@option{--unconditional-branches}]\n+     [@option{-x}|@option{--hash-filenames}]\n      @var{files}\n @c man end\n @c man begin SEEALSO\n@@ -278,6 +279,16 @@ branch:28,nottaken\n Display demangled function names in output. The default is to show\n mangled function names.\n \n+@item -x\n+@itemx --hash-filenames\n+By default, gcov uses the full pathname of the source files to to create\n+an output filename.  This can lead to long filenames that can overflow\n+filesystem limits.  This option creates names of the form\n+@file{@var{source-file}##@var{md5}.gcov},\n+where the @var{source-file} component is the final filename part and\n+the @var{md5} component is calculated from the full mangled name that\n+would have been used otherwise.\n+\n @end table\n \n @command{gcov} should be run with the current directory the same as that"}, {"sha": "da0bc9777afe1b16da498a6885bf1060ba078851", "filename": "gcc/gcov.c", "status": "modified", "additions": 46, "deletions": 2, "changes": 48, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/75cc66f26344aa95c916ba580191e3d17fa817c2/gcc%2Fgcov.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/75cc66f26344aa95c916ba580191e3d17fa817c2/gcc%2Fgcov.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgcov.c?ref=75cc66f26344aa95c916ba580191e3d17fa817c2", "patch": "@@ -43,6 +43,7 @@ along with Gcov; see the file COPYING3.  If not see\n \n #include <vector>\n #include <algorithm>\n+#include \"md5.h\"\n \n using namespace std;\n \n@@ -359,6 +360,11 @@ static int flag_demangled_names = 0;\n \n static int flag_long_names = 0;\n \n+/* For situations when a long name can potentially hit filesystem path limit,\n+   let's calculate md5sum of the path and append it to a file name.  */\n+\n+static int flag_hash_filenames = 0;\n+\n /* Output count information for every basic block, not merely those\n    that contain line number information.  */\n \n@@ -667,6 +673,7 @@ print_usage (int error_p)\n   fnotice (file, \"  -s, --source-prefix DIR         Source prefix to elide\\n\");\n   fnotice (file, \"  -u, --unconditional-branches    Show unconditional branch counts too\\n\");\n   fnotice (file, \"  -v, --version                   Print version number, then exit\\n\");\n+  fnotice (file, \"  -x, --hash-filenames            Hash long pathnames\\n\");\n   fnotice (file, \"\\nFor bug reporting instructions, please see:\\n%s.\\n\",\n \t   bug_report_url);\n   exit (status);\n@@ -706,6 +713,7 @@ static const struct option options[] =\n   { \"source-prefix\",        required_argument, NULL, 's' },\n   { \"unconditional-branches\", no_argument,     NULL, 'u' },\n   { \"display-progress\",     no_argument,       NULL, 'd' },\n+  { \"hash-filenames\",\t    no_argument,       NULL, 'x' },\n   { 0, 0, 0, 0 }\n };\n \n@@ -716,8 +724,8 @@ process_args (int argc, char **argv)\n {\n   int opt;\n \n-  while ((opt = getopt_long (argc, argv, \"abcdfhilmno:s:pruv\", options, NULL)) !=\n-         -1)\n+  const char *opts = \"abcdfhilmno:prs:uvx\";\n+  while ((opt = getopt_long (argc, argv, opts, options, NULL)) != -1)\n     {\n       switch (opt)\n \t{\n@@ -770,6 +778,9 @@ process_args (int argc, char **argv)\n           break;\n \tcase 'v':\n \t  print_version ();\n+\tcase 'x':\n+\t  flag_hash_filenames = 1;\n+\t  break;\n \t  /* print_version will exit.  */\n \tdefault:\n \t  print_usage (true);\n@@ -2147,6 +2158,15 @@ canonicalize_name (const char *name)\n   return result;\n }\n \n+/* Print hex representation of 16 bytes from SUM and write it to BUFFER.  */\n+\n+static void\n+md5sum_to_hex (const char *sum, char *buffer)\n+{\n+  for (unsigned i = 0; i < 16; i++)\n+    sprintf (buffer + (2 * i), \"%02x\", sum[i]);\n+}\n+\n /* Generate an output file name. INPUT_NAME is the canonicalized main\n    input file and SRC_NAME is the canonicalized file name.\n    LONG_OUTPUT_NAMES and PRESERVE_PATHS affect name generation.  With\n@@ -2184,6 +2204,30 @@ make_gcov_file_name (const char *input_name, const char *src_name)\n   ptr = mangle_name (src_name, ptr);\n   strcpy (ptr, \".gcov\");\n \n+  /* When hashing filenames, we shorten them by only using the filename\n+     component and appending a hash of the full (mangled) pathname.  */\n+  if (flag_hash_filenames)\n+    {\n+      md5_ctx ctx;\n+      char md5sum[16];\n+      char md5sum_hex[33];\n+\n+      md5_init_ctx (&ctx);\n+      md5_process_bytes (result, strlen (result), &ctx);\n+      md5_finish_ctx (&ctx, md5sum);\n+      md5sum_to_hex (md5sum, md5sum_hex);\n+      free (result);\n+\n+      result = XNEWVEC (char, strlen (src_name) + 50);\n+      ptr = result;\n+      ptr = mangle_name (src_name, ptr);\n+      ptr[0] = ptr[1] = '#';\n+      ptr += 2;\n+      memcpy (ptr, md5sum_hex, 32);\n+      ptr += 32;\n+      strcpy (ptr, \".gcov\");\n+    }\n+\n   return result;\n }\n "}]}