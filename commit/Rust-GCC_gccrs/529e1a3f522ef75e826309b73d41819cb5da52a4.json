{"sha": "529e1a3f522ef75e826309b73d41819cb5da52a4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTI5ZTFhM2Y1MjJlZjc1ZTgyNjMwOWI3M2Q0MTgxOWNiNWRhNTJhNA==", "commit": {"author": {"name": "Nicolas Roche", "email": "roche@adacore.com", "date": "2018-05-25T09:05:34Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "pmderodat@gcc.gnu.org", "date": "2018-05-25T09:05:34Z"}, "message": "[Ada] Improve performance of conversion from String to Long_Float\n\nOnce it is sure that the result will be infinity, stop computation and return\nthe result. This ensure that the function call duration is bounded. Before that\nchange on some cases the computation was taking more than a few seconds.\n\n2018-05-25  Nicolas Roche  <roche@adacore.com>\n\ngcc/ada/\n\n\t* libgnat/s-valrea.adb (Scan_Real): Abort computation once it is sure\n\tthat the result will be either -infinite or +infinite.\n\nFrom-SVN: r260743", "tree": {"sha": "6e2093c6589c9538bce4d8c167e1b52fdbd080c0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6e2093c6589c9538bce4d8c167e1b52fdbd080c0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/529e1a3f522ef75e826309b73d41819cb5da52a4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/529e1a3f522ef75e826309b73d41819cb5da52a4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/529e1a3f522ef75e826309b73d41819cb5da52a4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/529e1a3f522ef75e826309b73d41819cb5da52a4/comments", "author": {"login": "Nikokrock", "id": 7796165, "node_id": "MDQ6VXNlcjc3OTYxNjU=", "avatar_url": "https://avatars.githubusercontent.com/u/7796165?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Nikokrock", "html_url": "https://github.com/Nikokrock", "followers_url": "https://api.github.com/users/Nikokrock/followers", "following_url": "https://api.github.com/users/Nikokrock/following{/other_user}", "gists_url": "https://api.github.com/users/Nikokrock/gists{/gist_id}", "starred_url": "https://api.github.com/users/Nikokrock/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Nikokrock/subscriptions", "organizations_url": "https://api.github.com/users/Nikokrock/orgs", "repos_url": "https://api.github.com/users/Nikokrock/repos", "events_url": "https://api.github.com/users/Nikokrock/events{/privacy}", "received_events_url": "https://api.github.com/users/Nikokrock/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "38806cd3da0ec930cef1c80934a3aa9afc2c90c5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/38806cd3da0ec930cef1c80934a3aa9afc2c90c5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/38806cd3da0ec930cef1c80934a3aa9afc2c90c5"}], "stats": {"total": 18, "additions": 13, "deletions": 5}, "files": [{"sha": "39deb156fc2ecbdd2cfa5f9d204ccdec567745c3", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/529e1a3f522ef75e826309b73d41819cb5da52a4/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/529e1a3f522ef75e826309b73d41819cb5da52a4/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=529e1a3f522ef75e826309b73d41819cb5da52a4", "patch": "@@ -1,3 +1,8 @@\n+2018-05-25  Nicolas Roche  <roche@adacore.com>\n+\n+\t* libgnat/s-valrea.adb (Scan_Real): Abort computation once it is sure\n+\tthat the result will be either -infinite or +infinite.\n+\n 2018-05-25  Patrick Bernardi  <bernardi@adacore.com>\n \n \t* libgnat/s-parame.ads, libgnat/s-parame__vxworks.ads,"}, {"sha": "7bc7fd80afed55a0b7450a63457a3e3ed2fbae6d", "filename": "gcc/ada/libgnat/s-valrea.adb", "status": "modified", "additions": 8, "deletions": 5, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/529e1a3f522ef75e826309b73d41819cb5da52a4/gcc%2Fada%2Flibgnat%2Fs-valrea.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/529e1a3f522ef75e826309b73d41819cb5da52a4/gcc%2Fada%2Flibgnat%2Fs-valrea.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fs-valrea.adb?ref=529e1a3f522ef75e826309b73d41819cb5da52a4", "patch": "@@ -342,26 +342,29 @@ package body System.Val_Real is\n       --  For base 10, use power of ten table, repeatedly if necessary\n \n       elsif Scale > 0 then\n-         while Scale > Maxpow loop\n+         while Scale > Maxpow and then Uval'Valid loop\n             Uval := Uval * Powten (Maxpow);\n             Scale := Scale - Maxpow;\n          end loop;\n \n          --  Note that we still know that Scale > 0, since the loop\n          --  above leaves Scale in the range 1 .. Maxpow.\n \n-         Uval := Uval * Powten (Scale);\n+         if Uval'Valid then\n+            Uval := Uval * Powten (Scale);\n+         end if;\n \n       elsif Scale < 0 then\n-         while (-Scale) > Maxpow loop\n+         while (-Scale) > Maxpow and then Uval'Valid loop\n             Uval := Uval / Powten (Maxpow);\n             Scale := Scale + Maxpow;\n          end loop;\n \n          --  Note that we still know that Scale < 0, since the loop\n          --  above leaves Scale in the range -Maxpow .. -1.\n-\n-         Uval := Uval / Powten (-Scale);\n+         if Uval'Valid then\n+            Uval := Uval / Powten (-Scale);\n+         end if;\n       end if;\n \n       --  Here is where we check for a bad based number"}]}