{"sha": "c4cc7bc1ce2c87338f3a55ebfc4ce32d4a31cecc", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzRjYzdiYzFjZTJjODczMzhmM2E1NWViZmM0Y2UzMmQ0YTMxY2VjYw==", "commit": {"author": {"name": "Richard Earnshaw", "email": "rearnsha@arm.com", "date": "2012-06-13T12:45:27Z"}, "committer": {"name": "Richard Earnshaw", "email": "rearnsha@gcc.gnu.org", "date": "2012-06-13T12:45:27Z"}, "message": "config.gcc (unsupported): Move obsoleted FPA-based configurations here from ...\n\n\t* config.gcc (unsupported): Move obsoleted FPA-based configurations\n\there from ...\n\t(obsolete): ... here.\n\t(arm*-*-freebsd*): Remove.\n\t(arm*-*-linux*): Only accept EABI variants.  Simplify logic.\n\t(arm*-*-uclinux*): Likewise.\n\t(arm*-*-ecos-elf): Remove.\n\t(arm*-*-rtems*): Remove.\n\t(arm*-*-elf): Remove.\n\t(arm*-wince-pe*): Remove.\n\t(arm, --with-fpu): Remove support for fpa and Maverick variants.\n\t* arm/ecos-elf.h: Delete.\n\t* arm/t-strongarm-elf: Delete.\n\t* arm/rtems-elf.h: Delete.\n\t* arm/wince-pe.h: Delete.\n\t* arm/pe.c: Delete.\n\t* arm/pe.h: Delete.\n\t* arm/t-wince-pe: Delete.\n\nFrom-SVN: r188510", "tree": {"sha": "6cd0597e238acb39498e19bfa0535e6ce0e8ff75", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6cd0597e238acb39498e19bfa0535e6ce0e8ff75"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c4cc7bc1ce2c87338f3a55ebfc4ce32d4a31cecc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c4cc7bc1ce2c87338f3a55ebfc4ce32d4a31cecc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c4cc7bc1ce2c87338f3a55ebfc4ce32d4a31cecc", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c4cc7bc1ce2c87338f3a55ebfc4ce32d4a31cecc/comments", "author": null, "committer": null, "parents": [{"sha": "7ef58a1a45e7f2f3b2c377212acfbdd94d830fbf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7ef58a1a45e7f2f3b2c377212acfbdd94d830fbf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7ef58a1a45e7f2f3b2c377212acfbdd94d830fbf"}], "stats": {"total": 820, "additions": 57, "deletions": 763}, "files": [{"sha": "4d3b63cb7cbbe1d9f91f53e103fc74230048c4ea", "filename": "gcc/ChangeLog", "status": "modified", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c4cc7bc1ce2c87338f3a55ebfc4ce32d4a31cecc/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c4cc7bc1ce2c87338f3a55ebfc4ce32d4a31cecc/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=c4cc7bc1ce2c87338f3a55ebfc4ce32d4a31cecc", "patch": "@@ -1,3 +1,24 @@\n+2012-06-13  Richard Earnshaw  <rearnsha@arm.com>\n+\n+\t* config.gcc (unsupported): Move obsoleted FPA-based configurations\n+\there from ...\n+\t(obsolete): ... here.\n+\t(arm*-*-freebsd*): Remove.\n+\t(arm*-*-linux*): Only accept EABI variants.  Simplify logic.\n+\t(arm*-*-uclinux*): Likewise.\n+\t(arm*-*-ecos-elf): Remove.\n+\t(arm*-*-rtems*): Remove.\n+\t(arm*-*-elf): Remove.\n+\t(arm*-wince-pe*): Remove.\n+\t(arm, --with-fpu): Remove support for fpa and Maverick variants.\n+\t* arm/ecos-elf.h: Delete.\n+\t* arm/t-strongarm-elf: Delete.\n+\t* arm/rtems-elf.h: Delete.\n+\t* arm/wince-pe.h: Delete.\n+\t* arm/pe.c: Delete.\n+\t* arm/pe.h: Delete.\n+\t* arm/t-wince-pe: Delete.\n+\n 2012-06-13  Bill Schmidt  <wschmidt@linux.ibm.com>\n \n \tPR tree-optimization/53647"}, {"sha": "40d513f9d25ba1204d53694d5d9be01b1d12b390", "filename": "gcc/config.gcc", "status": "modified", "additions": 36, "deletions": 80, "changes": 116, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c4cc7bc1ce2c87338f3a55ebfc4ce32d4a31cecc/gcc%2Fconfig.gcc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c4cc7bc1ce2c87338f3a55ebfc4ce32d4a31cecc/gcc%2Fconfig.gcc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig.gcc?ref=c4cc7bc1ce2c87338f3a55ebfc4ce32d4a31cecc", "patch": "@@ -245,18 +245,7 @@ md_file=\n \n # Obsolete configurations.\n case ${target} in\n- # Avoid special cases that are not obsolete\n-   arm*-*-*eabi*\t\t\t\\\n- )\n-     ;;\n-   arm*-*-ecos-elf\t\t\t\\\n- | arm*-*-elf\t\t\t\t\\\n- | arm*-*-freebsd*\t\t\t\\\n- | arm*-*-linux*\t\t\t\\\n- | arm*-*-rtems*\t\t\t\\\n- | arm*-*-uclinux*\t\t\t\\\n- | arm*-wince-pe*\t\t\t\\\n- | score-*\t\t\t\t\\\n+   score-*\t\t\t\t\\\n  )\n     if test \"x$enable_obsolete\" != xyes; then\n       echo \"*** Configuration ${target} is obsolete.\" >&2\n@@ -271,7 +260,18 @@ esac\n # it would otherwise be caught by a more permissive pattern.  The list\n # should be in alphabetical order.\n case ${target} in\n-   i[34567]86-go32-*\t\t\t\\\n+ # Avoid special cases that are not obsolete\n+   arm*-*-*eabi*\t\t\t\\\n+ )\n+\t;;\n+   arm*-wince-pe*\t\t\t\\\n+ | arm*-*-ecos-elf\t\t\t\\\n+ | arm*-*-elf\t\t\t\t\\\n+ | arm*-*-freebsd*\t\t\t\\\n+ | arm*-*-linux*\t\t\t\\\n+ | arm*-*-rtems*\t\t\t\\\n+ | arm*-*-uclinux*\t\t\t\\\n+ | i[34567]86-go32-*\t\t\t\\\n  | i[34567]86-*-go32*\t\t\t\\\n  | m68k-*-uclinuxoldabi*\t\t\\\n  | mips64orion*-*-rtems*\t\t\\\n@@ -818,66 +818,44 @@ arm-wrs-vxworks)\n \textra_options=\"${extra_options} arm/vxworks.opt\"\n \ttmake_file=\"${tmake_file} arm/t-arm arm/t-vxworks\"\n \t;;\n-arm*-*-freebsd*)\n-\ttm_file=\"dbxelf.h elfos.h ${fbsd_tm_file} arm/elf.h arm/aout.h arm/freebsd.h arm/arm.h\"\n-\ttmake_file=\"${tmake_file} arm/t-arm arm/t-strongarm-elf\"\n-\t;;\n arm*-*-netbsdelf*)\n \ttm_file=\"dbxelf.h elfos.h netbsd.h netbsd-elf.h arm/elf.h arm/aout.h arm/arm.h arm/netbsd-elf.h\"\n \textra_options=\"${extra_options} netbsd.opt netbsd-elf.opt\"\n \ttmake_file=\"${tmake_file} arm/t-arm\"\n \t;;\n-arm*-*-linux*)\t\t\t# ARM GNU/Linux with ELF\n+arm*-*-linux-*eabi*)\t\t\t# ARM GNU/Linux with ELF\n \ttm_file=\"dbxelf.h elfos.h gnu-user.h linux.h linux-android.h glibc-stdint.h arm/elf.h arm/linux-gas.h arm/linux-elf.h\"\n \tcase $target in\n \tarm*b-*-linux*)\n-\t\ttm_defines=\"${tm_defines} TARGET_BIG_ENDIAN_DEFAULT=1\"\n-\t\t;;\n+\t    tm_defines=\"${tm_defines} TARGET_BIG_ENDIAN_DEFAULT=1\"\n+\t    ;;\n \tesac\n-\ttmake_file=\"${tmake_file} arm/t-arm\"\n+\ttmake_file=\"${tmake_file} arm/t-arm arm/t-arm-elf arm/t-bpabi arm/t-linux-eabi\"\n+\ttm_file=\"$tm_file arm/bpabi.h arm/linux-eabi.h arm/aout.h arm/arm.h\"\n+\t# Define multilib configuration for arm-linux-androideabi.\n \tcase ${target} in\n-\tarm*-*-linux-*eabi)\n-\t    tm_file=\"$tm_file arm/bpabi.h arm/linux-eabi.h\"\n-\t    tmake_file=\"$tmake_file arm/t-arm-elf arm/t-bpabi arm/t-linux-eabi\"\n-\t    # Define multilib configuration for arm-linux-androideabi.\n-\t    case ${target} in\n-\t    *-androideabi)\n-\t\ttmake_file=\"$tmake_file arm/t-linux-androideabi\"\n-\t\t;;\n-\t    esac\n-  \t    # The BPABI long long divmod functions return a 128-bit value in\n-\t    # registers r0-r3.  Correctly modeling that requires the use of\n-\t    # TImode.\n-\t    need_64bit_hwint=yes\n-\t    # The EABI requires the use of __cxa_atexit.\n-\t    default_use_cxa_atexit=yes\n-\t    ;;\n-\t*)\n-\t    tmake_file=\"$tmake_file arm/t-linux\"\n+\t*-androideabi)\n+\t    tmake_file=\"$tmake_file arm/t-linux-androideabi\"\n \t    ;;\n \tesac\n+  \t# The BPABI long long divmod functions return a 128-bit value in\n+\t# registers r0-r3.  Correctly modeling that requires the use of\n+\t# TImode.\n+\tneed_64bit_hwint=yes\n+\t# The EABI requires the use of __cxa_atexit.\n+\tdefault_use_cxa_atexit=yes\n \twith_tls=${with_tls:-gnu}\n-\ttm_file=\"$tm_file arm/aout.h arm/arm.h\"\n \t;;\n-arm*-*-uclinux*)\t\t# ARM ucLinux\n+arm*-*-uclinux*eabi*)\t\t# ARM ucLinux\n \ttm_file=\"dbxelf.h elfos.h arm/unknown-elf.h arm/elf.h arm/linux-gas.h arm/uclinux-elf.h glibc-stdint.h\"\n-\ttmake_file=\"arm/t-arm arm/t-arm-elf\"\n-\tcase ${target} in\n-\tarm*-*-uclinux*eabi)\n-\t    tm_file=\"$tm_file arm/bpabi.h arm/uclinux-eabi.h\"\n-\t    tmake_file=\"$tmake_file arm/t-bpabi\"\n-  \t    # The BPABI long long divmod functions return a 128-bit value in\n-\t    # registers r0-r3.  Correctly modeling that requires the use of\n-\t    # TImode.\n-\t    need_64bit_hwint=yes\n-\t    # The EABI requires the use of __cxa_atexit.\n-\t    default_use_cxa_atexit=yes\n-\tesac\n-\ttm_file=\"$tm_file arm/aout.h arm/arm.h\"\n-\t;;\n-arm*-*-ecos-elf)\n-\ttm_file=\"dbxelf.h elfos.h newlib-stdint.h arm/unknown-elf.h arm/elf.h arm/aout.h arm/arm.h arm/ecos-elf.h\"\n-\ttmake_file=\"arm/t-arm arm/t-arm-elf\"\n+\ttmake_file=\"arm/t-arm arm/t-arm-elf arm/t-bpabi\"\n+\ttm_file=\"$tm_file arm/bpabi.h arm/uclinux-eabi.h arm/aout.h arm/arm.h\"\n+\t# The BPABI long long divmod functions return a 128-bit value in\n+\t# registers r0-r3.  Correctly modeling that requires the use of\n+\t# TImode.\n+\tneed_64bit_hwint=yes\n+\t# The EABI requires the use of __cxa_atexit.\n+\tdefault_use_cxa_atexit=yes\n \t;;\n arm*-*-eabi* | arm*-*-symbianelf* | arm*-*-rtemseabi*)\n \t# The BPABI long long divmod functions return a 128-bit value in\n@@ -906,20 +884,6 @@ arm*-*-eabi* | arm*-*-symbianelf* | arm*-*-rtemseabi*)\n \tesac\n \ttm_file=\"${tm_file} arm/aout.h arm/arm.h\"\n \t;;\n-arm*-*-rtems*)\n-\ttm_file=\"dbxelf.h elfos.h arm/unknown-elf.h arm/elf.h arm/aout.h arm/arm.h arm/rtems-elf.h rtems.h newlib-stdint.h\"\n-\ttmake_file=\"arm/t-arm arm/t-arm-elf t-rtems arm/t-rtems\"\n-\t;;\n-arm*-*-elf)\n-\ttm_file=\"dbxelf.h elfos.h newlib-stdint.h arm/unknown-elf.h arm/elf.h arm/aout.h arm/arm.h\"\n-\ttmake_file=\"arm/t-arm arm/t-arm-elf\"\n-\t;;\n-arm*-wince-pe*)\n-\ttm_file=\"arm/semi.h arm/aout.h arm/arm.h arm/coff.h dbxcoff.h arm/pe.h arm/wince-pe.h\"\n-\ttmake_file=\"arm/t-arm arm/t-wince-pe\"\n-\textra_options=\"${extra_options} arm/pe.opt\"\n-\textra_objs=\"pe.o\"\n-\t;;\n avr-*-rtems*)\n \ttm_file=\"elfos.h avr/elf.h avr/avr.h dbxelf.h avr/rtems.h rtems.h newlib-stdint.h\"\n \ttmake_file=\"avr/t-avr avr/t-multilib t-rtems avr/t-rtems\"\n@@ -3048,14 +3012,6 @@ case \"${target}\" in\n \t\t| fpv4-sp-d16 | neon-vfpv4)\n \t\t\t# OK\n \t\t\t;;\n-\t\tfpa | fpe2 | fpe3 | maverick)\n-    \t\t\tif test \"x$enable_obsolete\" != xyes; then\n-\t\t\t    echo \"*** Configuration option --with-fpu=${with_fpu} is obsolete.\" >&2\n-\t\t\t    echo \"*** Specify --enable-obsolete to build it anyway.\" >&2\n-      \t\t\t    echo \"*** Support will be REMOVED in the next major release of GCC.\" >&2\n-      \t\t\t    exit 1\n-\t\t\tfi\n-\t\t\t;;\n \t\t*)\n \t\t\techo \"Unknown fpu used in --with-fpu=$with_fpu\" 2>&1\n \t\t\texit 1"}, {"sha": "4dd111eed032f56f8eb4b2846a7d3fc5d598b7a0", "filename": "gcc/config/arm/ecos-elf.h", "status": "removed", "additions": 0, "deletions": 24, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ef58a1a45e7f2f3b2c377212acfbdd94d830fbf/gcc%2Fconfig%2Farm%2Fecos-elf.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ef58a1a45e7f2f3b2c377212acfbdd94d830fbf/gcc%2Fconfig%2Farm%2Fecos-elf.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Fecos-elf.h?ref=7ef58a1a45e7f2f3b2c377212acfbdd94d830fbf", "patch": "@@ -1,24 +0,0 @@\n-/* Definitions for ecos based ARM systems using ELF\n-   Copyright (C) 1998, 2001, 2007, 2011 Free Software Foundation, Inc.\n- \n-   This file is part of GCC.\n- \n-   GCC is free software; you can redistribute it and/or modify it\n-   under the terms of the GNU General Public License as published\n-   by the Free Software Foundation; either version 3, or (at your\n-   option) any later version.\n- \n-   GCC is distributed in the hope that it will be useful, but WITHOUT\n-   ANY WARRANTY; without even the implied warranty of MERCHANTABILITY\n-   or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public\n-   License for more details.\n- \n-   You should have received a copy of the GNU General Public License\n-   along with GCC; see the file COPYING3.  If not see\n-   <http://www.gnu.org/licenses/>.  */\n-\n-/* Run-time Target Specification.  */\n-#define HAS_INIT_SECTION\n-\n-#undef INVOKE_main\n-"}, {"sha": "6c39e12530682d8b587eec7971c5356f7b1d2c8a", "filename": "gcc/config/arm/freebsd.h", "status": "removed", "additions": 0, "deletions": 64, "changes": 64, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ef58a1a45e7f2f3b2c377212acfbdd94d830fbf/gcc%2Fconfig%2Farm%2Ffreebsd.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ef58a1a45e7f2f3b2c377212acfbdd94d830fbf/gcc%2Fconfig%2Farm%2Ffreebsd.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Ffreebsd.h?ref=7ef58a1a45e7f2f3b2c377212acfbdd94d830fbf", "patch": "@@ -1,64 +0,0 @@\n-/* Definitions for StrongARM running FreeBSD using the ELF format\n-   Copyright (C) 2001, 2004, 2007, 2010, 2011 Free Software Foundation, Inc.\n-   Contributed by David E. O'Brien <obrien@FreeBSD.org> and BSDi.\n-\n-   This file is part of GCC.\n-\n-   GCC is free software; you can redistribute it and/or modify it\n-   under the terms of the GNU General Public License as published\n-   by the Free Software Foundation; either version 3, or (at your\n-   option) any later version.\n-\n-   GCC is distributed in the hope that it will be useful, but WITHOUT\n-   ANY WARRANTY; without even the implied warranty of MERCHANTABILITY\n-   or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public\n-   License for more details.\n-\n-   You should have received a copy of the GNU General Public License\n-   along with GCC; see the file COPYING3.  If not see\n-   <http://www.gnu.org/licenses/>.  */\n-\n-\n-#undef  SUBTARGET_EXTRA_SPECS\n-#define SUBTARGET_EXTRA_SPECS \\\n-  { \"fbsd_dynamic_linker\", FBSD_DYNAMIC_LINKER }\n-\n-#undef  SUBTARGET_CPP_SPEC\n-#define SUBTARGET_CPP_SPEC FBSD_CPP_SPEC\n-\n-#undef\tLINK_SPEC\n-#define LINK_SPEC \"\t\t\t\t\t\t\t\\\n-  %{p:%nconsider using '-pg' instead of '-p' with gprof(1)}\t\t\\\n-  %{v:-V}\t\t\t\t\t\t\t\t\\\n-  %{assert*} %{R*} %{rpath*} %{defsym*}\t\t\t\t\t\\\n-  %{shared:-Bshareable %{h*} %{soname*}}\t\t\t\t\\\n-  %{!shared:\t\t\t\t\t\t\t\t\\\n-    %{!static:\t\t\t\t\t\t\t\t\\\n-      %{rdynamic:-export-dynamic}\t\t\t\t\t\\\n-      -dynamic-linker %(fbsd_dynamic_linker) }\t\\\n-    %{static:-Bstatic}}\t\t\t\t\t\t\t\\\n-  %{symbolic:-Bsymbolic}\"\n-\n-\n-/************************[  Target stuff  ]***********************************/\n-\n-/* Define the actual types of some ANSI-mandated types.  \n-   Needs to agree with <machine/ansi.h>.  GCC defaults come from c-decl.c,\n-   c-common.c, and config/<arch>/<arch>.h.  */\n-\n-/* arm.h gets this wrong for FreeBSD.  We use the GCC defaults instead.  */\n-\n-#undef  SIZE_TYPE\n-#define SIZE_TYPE\t\"unsigned int\"\n-\n-#undef  PTRDIFF_TYPE\n-#define PTRDIFF_TYPE\t\"int\"\n-\n-/* We use the GCC defaults here.  */\n-#undef WCHAR_TYPE\n-\n-#undef  WCHAR_TYPE_SIZE\n-#define WCHAR_TYPE_SIZE 32\n-\n-#undef  SUBTARGET_CPU_DEFAULT\n-#define SUBTARGET_CPU_DEFAULT\tTARGET_CPU_strongarm"}, {"sha": "3d9efd57841466f3385965d4a4ace0d1c71ce203", "filename": "gcc/config/arm/pe.c", "status": "removed", "additions": 0, "deletions": 257, "changes": 257, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ef58a1a45e7f2f3b2c377212acfbdd94d830fbf/gcc%2Fconfig%2Farm%2Fpe.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ef58a1a45e7f2f3b2c377212acfbdd94d830fbf/gcc%2Fconfig%2Farm%2Fpe.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Fpe.c?ref=7ef58a1a45e7f2f3b2c377212acfbdd94d830fbf", "patch": "@@ -1,257 +0,0 @@\n-/* Routines for GCC for ARM/pe.\n-   Copyright (C) 1995, 1996, 2000, 2001, 2002, 2004, 2005, 2007, 2008, 2010\n-   Free Software Foundation, Inc.\n-   Contributed by Doug Evans (dje@cygnus.com).\n-\n-   This file is part of GCC.\n-\n-   GCC is free software; you can redistribute it and/or modify it\n-   under the terms of the GNU General Public License as published\n-   by the Free Software Foundation; either version 3, or (at your\n-   option) any later version.\n-\n-   GCC is distributed in the hope that it will be useful, but WITHOUT\n-   ANY WARRANTY; without even the implied warranty of MERCHANTABILITY\n-   or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public\n-   License for more details.\n-\n-   You should have received a copy of the GNU General Public License\n-   along with GCC; see the file COPYING3.  If not see\n-   <http://www.gnu.org/licenses/>.  */\n-\n-#include \"config.h\"\n-#include \"system.h\"\n-#include \"coretypes.h\"\n-#include \"tm.h\"\n-#include \"rtl.h\"\n-#include \"output.h\"\n-#include \"flags.h\"\n-#include \"tree.h\"\n-#include \"expr.h\"\n-#include \"diagnostic-core.h\"\n-#include \"tm_p.h\"\n-\n-extern int current_function_anonymous_args;\n-\n-\f\n-/* Return nonzero if DECL is a dllexport'd object.  */\n-\n-tree current_class_type; /* FIXME */\n-\n-int\n-arm_dllexport_p (tree decl)\n-{\n-  tree exp;\n-\n-  if (TREE_CODE (decl) != VAR_DECL\n-      && TREE_CODE (decl) != FUNCTION_DECL)\n-    return 0;\n-  exp = lookup_attribute (\"dllexport\", DECL_ATTRIBUTES (decl));\n-  if (exp)\n-    return 1;\n-\n-  return 0;\n-}\n-\n-/* Return nonzero if DECL is a dllimport'd object.  */\n-\n-int\n-arm_dllimport_p (tree decl)\n-{\n-  tree imp;\n-\n-  if (TREE_CODE (decl) == FUNCTION_DECL\n-      && TARGET_NOP_FUN_DLLIMPORT)\n-    return 0;\n-\n-  if (TREE_CODE (decl) != VAR_DECL\n-      && TREE_CODE (decl) != FUNCTION_DECL)\n-    return 0;\n-  imp = lookup_attribute (\"dllimport\", DECL_ATTRIBUTES (decl));\n-  if (imp)\n-    return 1;\n-\n-  return 0;\n-}\n-\n-/* Return nonzero if SYMBOL is marked as being dllexport'd.  */\n-\n-int\n-arm_dllexport_name_p (const char *symbol)\n-{\n-  return symbol[0] == ARM_PE_FLAG_CHAR && symbol[1] == 'e' && symbol[2] == '.';\n-}\n-\n-/* Return nonzero if SYMBOL is marked as being dllimport'd.  */\n-\n-int\n-arm_dllimport_name_p (const char *symbol)\n-{\n-  return symbol[0] == ARM_PE_FLAG_CHAR && symbol[1] == 'i' && symbol[2] == '.';\n-}\n-\n-/* Mark a DECL as being dllexport'd.\n-   Note that we override the previous setting (e.g.: dllimport).  */\n-\n-void\n-arm_mark_dllexport (tree decl)\n-{\n-  const char * oldname;\n-  char * newname;\n-  rtx rtlname;\n-  tree idp;\n-\n-  rtlname = XEXP (DECL_RTL (decl), 0);\n-  if (GET_CODE (rtlname) == MEM)\n-    rtlname = XEXP (rtlname, 0);\n-  gcc_assert (GET_CODE (rtlname) == SYMBOL_REF);\n-  oldname = XSTR (rtlname, 0);\n-  \n-  if (arm_dllimport_name_p (oldname))\n-    oldname += 9;\n-  else if (arm_dllexport_name_p (oldname))\n-    return; /* already done */\n-\n-  newname = XALLOCAVEC (char, strlen (oldname) + 4);\n-  sprintf (newname, \"%ce.%s\", ARM_PE_FLAG_CHAR, oldname);\n-\n-  /* We pass newname through get_identifier to ensure it has a unique\n-     address.  RTL processing can sometimes peek inside the symbol ref\n-     and compare the string's addresses to see if two symbols are\n-     identical.  */\n-  /* ??? At least I think that's why we do this.  */\n-  idp = get_identifier (newname);\n-\n-  XEXP (DECL_RTL (decl), 0) =\n-    gen_rtx_SYMBOL_REF (Pmode, IDENTIFIER_POINTER (idp));\n-}\n-\n-/* Mark a DECL as being dllimport'd.  */\n-\n-void\n-arm_mark_dllimport (tree decl)\n-{\n-  const char * oldname;\n-  char * newname;\n-  tree idp;\n-  rtx rtlname, newrtl;\n-\n-  rtlname = XEXP (DECL_RTL (decl), 0);\n-  \n-  if (GET_CODE (rtlname) == MEM)\n-    rtlname = XEXP (rtlname, 0);\n-  gcc_assert (GET_CODE (rtlname) == SYMBOL_REF);\n-  oldname = XSTR (rtlname, 0);\n-  \n-  gcc_assert (!arm_dllexport_name_p (oldname));\n-  if (arm_dllimport_name_p (oldname))\n-    return; /* already done */\n-\n-  /* ??? One can well ask why we're making these checks here,\n-     and that would be a good question.  */\n-\n-  /* Imported variables can't be initialized.  */\n-  if (TREE_CODE (decl) == VAR_DECL\n-      && !DECL_VIRTUAL_P (decl)\n-      && DECL_INITIAL (decl))\n-    {\n-      error (\"initialized variable %q+D is marked dllimport\", decl);\n-      return;\n-    }\n-  /* Nor can they be static.  */\n-  if (TREE_CODE (decl) == VAR_DECL\n-      /* ??? Is this test for vtables needed?  */\n-      && !DECL_VIRTUAL_P (decl)\n-      && 0 /*???*/)\n-    {\n-      error (\"static variable %q+D is marked dllimport\", decl);\n-      return;\n-    }\n-\n-  /* `extern' needn't be specified with dllimport.\n-     Specify `extern' now and hope for the best.  Sigh.  */\n-  if (TREE_CODE (decl) == VAR_DECL\n-      /* ??? Is this test for vtables needed?  */\n-      && !DECL_VIRTUAL_P (decl))\n-    {\n-      DECL_EXTERNAL (decl) = 1;\n-      TREE_PUBLIC (decl) = 1;\n-    }\n-\n-  newname = XALLOCAVEC (char, strlen (oldname) + 11);\n-  sprintf (newname, \"%ci.__imp_%s\", ARM_PE_FLAG_CHAR, oldname);\n-\n-  /* We pass newname through get_identifier to ensure it has a unique\n-     address.  RTL processing can sometimes peek inside the symbol ref\n-     and compare the string's addresses to see if two symbols are\n-     identical.  */\n-  /* ??? At least I think that's why we do this.  */\n-  idp = get_identifier (newname);\n-\n-  newrtl = gen_rtx_MEM (Pmode,\n-\t\t\tgen_rtx_SYMBOL_REF (Pmode,\n-\t\t\t\t\t    IDENTIFIER_POINTER (idp)));\n-  XEXP (DECL_RTL (decl), 0) = newrtl;\n-}\n-\n-void\n-arm_pe_encode_section_info (tree decl, rtx rtl, int first ATTRIBUTE_UNUSED)\n-{\n-  /* This bit is copied from arm_encode_section_info.  */\n-  if (optimize > 0 && TREE_CONSTANT (decl))\n-    SYMBOL_REF_FLAG (XEXP (rtl, 0)) = 1;\n-\n-  /* Mark the decl so we can tell from the rtl whether the object is\n-     dllexport'd or dllimport'd.  */\n-  if (arm_dllexport_p (decl))\n-    arm_mark_dllexport (decl);\n-  else if (arm_dllimport_p (decl))\n-    arm_mark_dllimport (decl);\n-  /* It might be that DECL has already been marked as dllimport, but a\n-     subsequent definition nullified that.  The attribute is gone but\n-     DECL_RTL still has @i.__imp_foo.  We need to remove that.  */\n-  else if ((TREE_CODE (decl) == FUNCTION_DECL\n-\t    || TREE_CODE (decl) == VAR_DECL)\n-\t   && DECL_RTL (decl) != NULL_RTX\n-\t   && GET_CODE (DECL_RTL (decl)) == MEM\n-\t   && GET_CODE (XEXP (DECL_RTL (decl), 0)) == MEM\n-\t   && GET_CODE (XEXP (XEXP (DECL_RTL (decl), 0), 0)) == SYMBOL_REF\n-\t   && arm_dllimport_name_p (XSTR (XEXP (XEXP (DECL_RTL (decl), 0), 0), 0)))\n-    {\n-      const char *oldname = XSTR (XEXP (XEXP (DECL_RTL (decl), 0), 0), 0);\n-      tree idp = get_identifier (oldname + 9);\n-      rtx newrtl = gen_rtx_SYMBOL_REF (Pmode, IDENTIFIER_POINTER (idp));\n-\n-      XEXP (DECL_RTL (decl), 0) = newrtl;\n-\n-      /* We previously set TREE_PUBLIC and DECL_EXTERNAL.\n-\t ??? We leave these alone for now.  */\n-    }\n-}\n-\n-void\n-arm_pe_unique_section (tree decl, int reloc)\n-{\n-  int len;\n-  const char * name;\n-  char * string;\n-  const char * prefix;\n-\n-  name = IDENTIFIER_POINTER (DECL_ASSEMBLER_NAME (decl));\n-  name = arm_strip_name_encoding (name);\n-\n-  /* The object is put in, for example, section .text$foo.\n-     The linker will then ultimately place them in .text\n-     (everything from the $ on is stripped).  */\n-  if (TREE_CODE (decl) == FUNCTION_DECL)\n-    prefix = \".text$\";\n-  else if (decl_readonly_section (decl, reloc))\n-    prefix = \".rdata$\";\n-  else\n-    prefix = \".data$\";\n-  len = strlen (name) + strlen (prefix);\n-  string = XALLOCAVEC (char, len + 1);\n-  sprintf (string, \"%s%s\", prefix, name);\n-\n-  DECL_SECTION_NAME (decl) = build_string (len, string);\n-}"}, {"sha": "ce2f1d7328154e6c14f540d15b5f6205131e5540", "filename": "gcc/config/arm/pe.h", "status": "removed", "additions": 0, "deletions": 146, "changes": 146, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ef58a1a45e7f2f3b2c377212acfbdd94d830fbf/gcc%2Fconfig%2Farm%2Fpe.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ef58a1a45e7f2f3b2c377212acfbdd94d830fbf/gcc%2Fconfig%2Farm%2Fpe.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Fpe.h?ref=7ef58a1a45e7f2f3b2c377212acfbdd94d830fbf", "patch": "@@ -1,146 +0,0 @@\n-/* Definitions of target machine for GNU compiler, for ARM with PE obj format.\n-   Copyright (C) 1995, 1996, 1999, 2000, 2002, 2003, 2004, 2005, 2007, 2011\n-   Free Software Foundation, Inc.\n-   Contributed by Doug Evans (dje@cygnus.com).\n-   \n-   This file is part of GCC.\n-\n-   GCC is free software; you can redistribute it and/or modify it\n-   under the terms of the GNU General Public License as published\n-   by the Free Software Foundation; either version 3, or (at your\n-   option) any later version.\n-\n-   GCC is distributed in the hope that it will be useful, but WITHOUT\n-   ANY WARRANTY; without even the implied warranty of MERCHANTABILITY\n-   or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public\n-   License for more details.\n-\n-   You should have received a copy of the GNU General Public License\n-   along with GCC; see the file COPYING3.  If not see\n-   <http://www.gnu.org/licenses/>.  */\n-\n-/* Enable PE specific code.  */\n-#define ARM_PE\t\t1\n-\n-#define ARM_PE_FLAG_CHAR '@'\n-\n-/* Ensure that @x. will be stripped from the function name.  */\n-#undef SUBTARGET_NAME_ENCODING_LENGTHS\n-#define SUBTARGET_NAME_ENCODING_LENGTHS  \\\n-  case ARM_PE_FLAG_CHAR: return 3;\n-\n-#undef  USER_LABEL_PREFIX\n-#define USER_LABEL_PREFIX \"_\"\n-\n-\f\n-/* Run-time Target Specification.  */\n-\n-/* Get tree.c to declare a target-specific specialization of\n-   merge_decl_attributes.  */\n-#define TARGET_DLLIMPORT_DECL_ATTRIBUTES 1\n-\n-#undef  SUBTARGET_CPP_SPEC\n-#define SUBTARGET_CPP_SPEC \"-D__pe__\"\n-\n-#undef  TARGET_DEFAULT\n-#define TARGET_DEFAULT\t(MASK_NOP_FUN_DLLIMPORT)\n-\n-#undef  MULTILIB_DEFAULTS\n-#define MULTILIB_DEFAULTS \\\n-  { \"marm\", \"mlittle-endian\", \"mfloat-abi=soft\", \"mno-thumb-interwork\" }  \n-\f\n-#undef  WCHAR_TYPE\n-#define WCHAR_TYPE \t\"short unsigned int\"\n-#undef  WCHAR_TYPE_SIZE\n-#define WCHAR_TYPE_SIZE 16\n-\n-/* r11 is fixed.  */\n-#undef  SUBTARGET_CONDITIONAL_REGISTER_USAGE\n-#define SUBTARGET_CONDITIONAL_REGISTER_USAGE \\\n-  fixed_regs [11] = 1; \\\n-  call_used_regs [11] = 1;\n-\n-\f\n-/* PE/COFF uses explicit import from shared libraries.  */\n-#define MULTIPLE_SYMBOL_SPACES 1\n-\n-#define TARGET_ASM_UNIQUE_SECTION arm_pe_unique_section\n-#define TARGET_ASM_FUNCTION_RODATA_SECTION default_no_function_rodata_section\n-\n-#define SUPPORTS_ONE_ONLY 1\n-\n-/* Switch into a generic section.  */\n-#undef  TARGET_ASM_NAMED_SECTION\n-#define TARGET_ASM_NAMED_SECTION  default_pe_asm_named_section\n-\f\n-#define TARGET_ASM_FILE_START_FILE_DIRECTIVE true\n-\n-/* Output a reference to a label.  */\n-#undef  ASM_OUTPUT_LABELREF\n-#define ASM_OUTPUT_LABELREF(STREAM, NAME)  \\\n-  asm_fprintf (STREAM, \"%U%s\", arm_strip_name_encoding (NAME))\n-\n-/* Output a function definition label.  */\n-#undef  ASM_DECLARE_FUNCTION_NAME\n-#define ASM_DECLARE_FUNCTION_NAME(STREAM, NAME, DECL)   \t\\\n-  do\t\t\t\t\t\t\t\t\\\n-    {\t\t\t\t\t\t\t\t\\\n-      if (arm_dllexport_name_p (NAME))\t\t\t\t\\\n-\t{\t\t\t\t\t\t\t\\\n-\t  drectve_section ();\t\t\t\t\t\\\n-\t  fprintf (STREAM, \"\\t.ascii \\\" -export:%s\\\"\\n\",\t\\\n-\t\t   arm_strip_name_encoding (NAME));\t\t\\\n-\t  switch_to_section (function_section (DECL));\t\t\\\n-\t}\t\t\t\t\t\t\t\\\n-      ARM_DECLARE_FUNCTION_NAME (STREAM, NAME, DECL);\t\t\\\n-      if (TARGET_THUMB)\t\t\t\t\t\t\\\n-\tfprintf (STREAM, \"\\t.code 16\\n\");\t\t\t\\\n-      ASM_OUTPUT_LABEL (STREAM, NAME);\t\t\t\t\\\n-    }\t\t\t\t\t\t\t\t\\\n-  while (0)\n-\n-/* Output a common block.  */\n-#undef  ASM_OUTPUT_COMMON\n-#define ASM_OUTPUT_COMMON(STREAM, NAME, SIZE, ROUNDED)\t\\\n-  do\t\t\t\t\t\t\t\\\n-    {\t\t\t\t\t\t\t\\\n-      if (arm_dllexport_name_p (NAME))\t\t\t\\\n-\t{\t\t\t\t\t\t\\\n-\t  drectve_section ();\t\t\t\t\\\n-\t  fprintf ((STREAM), \"\\t.ascii \\\" -export:%s\\\"\\n\",\\\n-\t\t   arm_strip_name_encoding (NAME));\t\\\n-\t}\t\t\t\t\t\t\\\n-      if (! arm_dllimport_name_p (NAME))\t\t\\\n-\t{\t\t\t\t\t\t\\\n-\t  fprintf ((STREAM), \"\\t.comm\\t\"); \t\t\\\n-\t  assemble_name ((STREAM), (NAME));\t\t\\\n-\t  asm_fprintf ((STREAM), \", %d\\t%@ %d\\n\",\t\\\n- \t\t   (int)(ROUNDED), (int)(SIZE));\t\\\n-\t}\t\t\t\t\t\t\\\n-    }\t\t\t\t\t\t\t\\\n-  while (0)\n-\n-/* Output the label for an initialized variable.  */\n-#undef  ASM_DECLARE_OBJECT_NAME\n-#define ASM_DECLARE_OBJECT_NAME(STREAM, NAME, DECL) \t\\\n-  do\t\t\t\t\t\t\t\\\n-    {\t\t\t\t\t\t\t\\\n-      if (arm_dllexport_name_p (NAME))\t\t\t\\\n-\t{\t\t\t\t\t\t\\\n-\t  section *save_section = in_section;\t\t\\\n-\t  drectve_section ();\t\t\t\t\\\n-\t  fprintf (STREAM, \"\\t.ascii \\\" -export:%s\\\"\\n\",\\\n-\t\t   arm_strip_name_encoding (NAME));\t\\\n-\t  switch_to_section (save_section);\t\t\\\n-\t}\t\t\t\t\t\t\\\n-      ASM_OUTPUT_LABEL ((STREAM), (NAME));\t\t\\\n-    }\t\t\t\t\t\t\t\\\n-  while (0)\n-\f\n-/* Support the ctors/dtors and other sections.  */\n-\n-#define DRECTVE_SECTION_ASM_OP\t\"\\t.section .drectve\"\n-\n-#define drectve_section() \\\n-  (fprintf (asm_out_file, \"%s\\n\", DRECTVE_SECTION_ASM_OP), \\\n-   in_section = NULL)"}, {"sha": "560a52a81efd45375bbbab517bd8d59341288332", "filename": "gcc/config/arm/pe.opt", "status": "removed", "additions": 0, "deletions": 23, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ef58a1a45e7f2f3b2c377212acfbdd94d830fbf/gcc%2Fconfig%2Farm%2Fpe.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ef58a1a45e7f2f3b2c377212acfbdd94d830fbf/gcc%2Fconfig%2Farm%2Fpe.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Fpe.opt?ref=7ef58a1a45e7f2f3b2c377212acfbdd94d830fbf", "patch": "@@ -1,23 +0,0 @@\n-; PE-specific options for the ARM port\n-\n-; Copyright (C) 2005, 2007 Free Software Foundation, Inc.\n-;\n-; This file is part of GCC.\n-;\n-; GCC is free software; you can redistribute it and/or modify it under\n-; the terms of the GNU General Public License as published by the Free\n-; Software Foundation; either version 3, or (at your option) any later\n-; version.\n-;\n-; GCC is distributed in the hope that it will be useful, but WITHOUT ANY\n-; WARRANTY; without even the implied warranty of MERCHANTABILITY or\n-; FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n-; for more details.\n-;\n-; You should have received a copy of the GNU General Public License\n-; along with GCC; see the file COPYING3.  If not see\n-; <http://www.gnu.org/licenses/>.\n-\n-mnop-fun-dllimport\n-Target Report Mask(NOP_FUN_DLLIMPORT)\n-Ignore dllimport attribute for functions"}, {"sha": "d9d24a7c83b6f8cd2a933e67cd76d85810a711ce", "filename": "gcc/config/arm/rtems-elf.h", "status": "removed", "additions": 0, "deletions": 44, "changes": 44, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ef58a1a45e7f2f3b2c377212acfbdd94d830fbf/gcc%2Fconfig%2Farm%2Frtems-elf.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ef58a1a45e7f2f3b2c377212acfbdd94d830fbf/gcc%2Fconfig%2Farm%2Frtems-elf.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Frtems-elf.h?ref=7ef58a1a45e7f2f3b2c377212acfbdd94d830fbf", "patch": "@@ -1,44 +0,0 @@\n-/* Definitions for RTEMS based ARM systems using ELF\n-   Copyright (C) 2000, 2002, 2005, 2007, 2008, 2009, 2011\n-   Free Software Foundation, Inc.\n- \n-   This file is part of GCC.\n- \n-   GCC is free software; you can redistribute it and/or modify it\n-   under the terms of the GNU General Public License as published\n-   by the Free Software Foundation; either version 3, or (at your\n-   option) any later version.\n- \n-   GCC is distributed in the hope that it will be useful, but WITHOUT\n-   ANY WARRANTY; without even the implied warranty of MERCHANTABILITY\n-   or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public\n-   License for more details.\n- \n-   You should have received a copy of the GNU General Public License\n-   along with GCC; see the file COPYING3.  If not see\n-   <http://www.gnu.org/licenses/>.  */\n-\n-/* Run-time Target Specification.  */\n-\n-#define HAS_INIT_SECTION\n-\n-#define TARGET_OS_CPP_BUILTINS()\t\t\\\n-    do {\t\t\t\t\t\\\n-\tbuiltin_define (\"__rtems__\");\t\t\\\n-\tbuiltin_define (\"__USE_INIT_FINI__\");\t\\\n-\tbuiltin_assert (\"system=rtems\");\t\\\n-    } while (0)\n-\n-/*\n- * The default in gcc now is soft-float, but gcc misses it to \n- * pass it to the assembler.\n- */\n-#undef SUBTARGET_EXTRA_ASM_SPEC\n-#define SUBTARGET_EXTRA_ASM_SPEC \"\\\n-  %{!mfloat-abi=hard: %{!mfpu=vfp: %{!mfloat-abi=soft:-mfpu=softfpa}}}\"\n-\n-/*\n- *  The default includes --start-group and --end-group which conflicts\n- *  with how this used to be defined.\n- */\n-#undef LINK_GCC_C_SEQUENCE_SPEC"}, {"sha": "5eff411e76edb2b64182bbd955dc0300059e95d7", "filename": "gcc/config/arm/t-rtems", "status": "removed", "additions": 0, "deletions": 45, "changes": 45, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ef58a1a45e7f2f3b2c377212acfbdd94d830fbf/gcc%2Fconfig%2Farm%2Ft-rtems", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ef58a1a45e7f2f3b2c377212acfbdd94d830fbf/gcc%2Fconfig%2Farm%2Ft-rtems", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Ft-rtems?ref=7ef58a1a45e7f2f3b2c377212acfbdd94d830fbf", "patch": "@@ -1,45 +0,0 @@\n-# Custom rtems multilibs\n-\n-MULTILIB_OPTIONS     = marm/mthumb\n-MULTILIB_DIRNAMES    = arm thumb\n-MULTILIB_EXCEPTIONS  = \n-MULTILIB_MATCHES     = marm=mno-thumb\n-\n-MULTILIB_OPTIONS    += mfloat-abi=hard/mfloat-abi=softfp\n-MULTILIB_DIRNAMES   += fpu softfp\n-MULTILIB_EXCEPTIONS += *mthumb*/*mfloat-abi=hard* *mthumb*/*mfloat-abi=softfp*\n-MULTILIB_MATCHES     =\n-\n-MULTILIB_OPTIONS    += mfpu=vfp\n-MULTILIB_DIRNAMES   += vfp\n-MULTILIB_EXCEPTIONS += *mfloat-abi=hard*/*mfpu=vfp* *marm*/*mfloat-abi=softfp*/*mfpu=fpa*\n-MULTILIB_EXCLUSIONS += !mthumb/mfloat-abi=softfp/!mfpu=vfp\n-\n-# default float model is fpa, so don't create a explicit copy of it\n-MULTILIB_EXCEPTIONS += *marm*/*mfpa*\n-\n-# permutations of the options which are useful (+) or make no sense (-),\n-# defaults are in brackets:\n-# + (arm/soft/fpa)\n-# + (arm/soft)/vfp\n-# - (arm)/softfp(/fpa)\n-# + (arm)/softfp/vfp\n-# + (arm)/float-abi=hard(/fpa)\n-# - (arm)/float-abi=hard/vfp\n-# + thumb/(soft/fpa)\n-# + thumb/(soft/)vfp\n-# - thumb/softfp/fpa\n-# - thumb/softfp/vfp\n-# - thumb/float-abi=hard/fpa\n-# - thumb/float-abi=hard/vfp\n-\n-# subdirs to be used for multilibs and their respective options:\n-#/thumb/vfp  -> thumb/soft/vfp\n-#/thumb/fpa  -> thumb/soft/fpa\n-#/thumb      -> thumb/soft/fpa\n-#/vfp        -> arm/soft/vfp\n-#/softfp/vfp -> arm/softfp/cfp\n-#/fpu/fpa    -> arm/hard/fpa\n-#/fpu        -> arm/hard/fpa\n-#/fpa        -> arm/soft/fpa\n-#.           -> arm/soft/fpa"}, {"sha": "0639e695800dc7fcf6318ad73b461e39829220b8", "filename": "gcc/config/arm/t-strongarm-elf", "status": "removed", "additions": 0, "deletions": 23, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ef58a1a45e7f2f3b2c377212acfbdd94d830fbf/gcc%2Fconfig%2Farm%2Ft-strongarm-elf", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ef58a1a45e7f2f3b2c377212acfbdd94d830fbf/gcc%2Fconfig%2Farm%2Ft-strongarm-elf", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Ft-strongarm-elf?ref=7ef58a1a45e7f2f3b2c377212acfbdd94d830fbf", "patch": "@@ -1,23 +0,0 @@\n-# Copyright (C) 2000, 2001, 2006, 2008, 2009, 2011\n-# Free Software Foundation, Inc.\n-#\n-# This file is part of GCC.\n-#\n-# GCC is free software; you can redistribute it and/or modify\n-# it under the terms of the GNU General Public License as published by\n-# the Free Software Foundation; either version 3, or (at your option)\n-# any later version.\n-#\n-# GCC is distributed in the hope that it will be useful,\n-# but WITHOUT ANY WARRANTY; without even the implied warranty of\n-# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-# GNU General Public License for more details.\n-#\n-# You should have received a copy of the GNU General Public License\n-# along with GCC; see the file COPYING3.  If not see\n-# <http://www.gnu.org/licenses/>.\n-\n-MULTILIB_OPTIONS     = mlittle-endian/mbig-endian mfloat-abi=hard/mfloat-abi=soft\n-MULTILIB_DIRNAMES    = le be fpu soft\n-MULTILIB_EXCEPTIONS  =\n-MULTILIB_MATCHES     = mbig-endian=mbe mlittle-endian=mle"}, {"sha": "becda7f25a48f66adbe507439b72f485e2cf56cc", "filename": "gcc/config/arm/t-wince-pe", "status": "removed", "additions": 0, "deletions": 31, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ef58a1a45e7f2f3b2c377212acfbdd94d830fbf/gcc%2Fconfig%2Farm%2Ft-wince-pe", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ef58a1a45e7f2f3b2c377212acfbdd94d830fbf/gcc%2Fconfig%2Farm%2Ft-wince-pe", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Ft-wince-pe?ref=7ef58a1a45e7f2f3b2c377212acfbdd94d830fbf", "patch": "@@ -1,31 +0,0 @@\n-# Copyright (C) 2003, 2004, 2006, 2008, 2009, 2010, 2011\n-# Free Software Foundation, Inc.\n-#\n-# This file is part of GCC.\n-#\n-# GCC is free software; you can redistribute it and/or modify\n-# it under the terms of the GNU General Public License as published by\n-# the Free Software Foundation; either version 3, or (at your option)\n-# any later version.\n-#\n-# GCC is distributed in the hope that it will be useful,\n-# but WITHOUT ANY WARRANTY; without even the implied warranty of\n-# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-# GNU General Public License for more details.\n-#\n-# You should have received a copy of the GNU General Public License\n-# along with GCC; see the file COPYING3.  If not see\n-# <http://www.gnu.org/licenses/>.\n-\n-pe.o: $(srcdir)/config/arm/pe.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n-  $(RTL_H) output.h flags.h $(TREE_H) expr.h $(TM_P_H)\n-\t$(COMPILER) -c $(ALL_COMPILERFLAGS) $(ALL_CPPFLAGS) $(INCLUDES) \\\n-\t\t$(srcdir)/config/arm/pe.c\n-\n-MULTILIB_OPTIONS = mfloat-abi=hard\n-MULTILIB_DIRNAMES = fpu\n-# Note - Thumb multilib omitted because Thumb support for\n-# arm-wince-pe target does not appear to be working in binutils\n-# yet... \n-# MULTILIB_OPTIONS += thumb\n-# MULTILIB_DIRNAMES += thumb"}, {"sha": "7ef38230f3d5c9ab896a6b5ccef2747ab1a4c436", "filename": "gcc/config/arm/wince-pe.h", "status": "removed", "additions": 0, "deletions": 26, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ef58a1a45e7f2f3b2c377212acfbdd94d830fbf/gcc%2Fconfig%2Farm%2Fwince-pe.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ef58a1a45e7f2f3b2c377212acfbdd94d830fbf/gcc%2Fconfig%2Farm%2Fwince-pe.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Fwince-pe.h?ref=7ef58a1a45e7f2f3b2c377212acfbdd94d830fbf", "patch": "@@ -1,26 +0,0 @@\n-/* Definitions of target machine for GNU compiler, for ARM with WINCE-PE obj format.\n-   Copyright (C) 2003, 2004, 2005, 2007, 2011 Free Software Foundation, Inc.\n-   Contributed by Nick Clifton <nickc@redhat.com>\n-   \n-   This file is part of GCC.\n-\n-   GCC is free software; you can redistribute it and/or modify it\n-   under the terms of the GNU General Public License as published\n-   by the Free Software Foundation; either version 3, or (at your\n-   option) any later version.\n-\n-   GCC is distributed in the hope that it will be useful, but WITHOUT\n-   ANY WARRANTY; without even the implied warranty of MERCHANTABILITY\n-   or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public\n-   License for more details.\n-\n-   You should have received a copy of the GNU General Public License\n-   along with GCC; see the file COPYING3.  If not see\n-   <http://www.gnu.org/licenses/>.  */\n-\n-#undef  TARGET_DEFAULT\n-#define TARGET_DEFAULT\t(MASK_NOP_FUN_DLLIMPORT)\n-\n-#undef  MULTILIB_DEFAULTS\n-#define MULTILIB_DEFAULTS \\\n-  { \"marm\", \"mlittle-endian\", \"mfloat-abi=soft\", \"mno-thumb-interwork\" }  "}]}