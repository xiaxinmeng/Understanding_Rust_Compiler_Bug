{"sha": "1c99d804eeb06044f5e7b3ff7b840a3570aa59c1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWM5OWQ4MDRlZWIwNjA0NGY1ZTdiM2ZmN2I4NDBhMzU3MGFhNTljMQ==", "commit": {"author": {"name": "Richard Henderson", "email": "rth@redhat.com", "date": "2003-01-22T01:02:51Z"}, "committer": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "2003-01-22T01:02:51Z"}, "message": "dwarf2out.c (lookup_filename): Fix printf format warning.\n\n        * dwarf2out.c (lookup_filename): Fix printf format warning.\n        * system.h (fread_unlocked, fwrite_unlocked): Undef.\n\n        * fixinc/Makefile.in (FL_LIST): Add $($@-warn) hook.\n        (fixincl.o-warn, gnu-regex.o-warn): New.\n        * fixinc/fixfixes.c (FIX_PROC_HEAD): Mark parameters unused.\n        * fixinc/fixtests.c (TEST_FOR_FIX_PROC_HEAD): Likewise.\n        * fixinc/fixincl.c (process): Fix printf format warning.\n\nFrom-SVN: r61584", "tree": {"sha": "845b96df5c1eb09fbf1a857272f510da30049ca8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/845b96df5c1eb09fbf1a857272f510da30049ca8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1c99d804eeb06044f5e7b3ff7b840a3570aa59c1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1c99d804eeb06044f5e7b3ff7b840a3570aa59c1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1c99d804eeb06044f5e7b3ff7b840a3570aa59c1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1c99d804eeb06044f5e7b3ff7b840a3570aa59c1/comments", "author": null, "committer": null, "parents": [{"sha": "44897a588a0bfc48d4850f98996fbc85390ccf90", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/44897a588a0bfc48d4850f98996fbc85390ccf90", "html_url": "https://github.com/Rust-GCC/gccrs/commit/44897a588a0bfc48d4850f98996fbc85390ccf90"}], "stats": {"total": 54, "additions": 38, "deletions": 16}, "files": [{"sha": "c4d450ded465554df77d9b0087d905ad4e4a4891", "filename": "gcc/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1c99d804eeb06044f5e7b3ff7b840a3570aa59c1/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1c99d804eeb06044f5e7b3ff7b840a3570aa59c1/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=1c99d804eeb06044f5e7b3ff7b840a3570aa59c1", "patch": "@@ -1,3 +1,14 @@\n+2003-01-21  Richard Henderson  <rth@redhat.com>\n+\n+\t* dwarf2out.c (lookup_filename): Fix printf format warning.\n+\t* system.h (fread_unlocked, fwrite_unlocked): Undef.\n+\n+\t* fixinc/Makefile.in (FL_LIST): Add $($@-warn) hook.\n+\t(fixincl.o-warn, gnu-regex.o-warn): New.\n+\t* fixinc/fixfixes.c (FIX_PROC_HEAD): Mark parameters unused.\n+\t* fixinc/fixtests.c (TEST_FOR_FIX_PROC_HEAD): Likewise.\n+\t* fixinc/fixincl.c (process): Fix printf format warning.\n+\n 2003-01-21  Ulrich Weigand  <uweigand@de.ibm.com>\n \n \t* dwarf2out (output_file_names): Don't crash if called"}, {"sha": "1cd511dea0792abd10bfbd8a4add24aa4a1ad421", "filename": "gcc/dwarf2out.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1c99d804eeb06044f5e7b3ff7b840a3570aa59c1/gcc%2Fdwarf2out.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1c99d804eeb06044f5e7b3ff7b840a3570aa59c1/gcc%2Fdwarf2out.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdwarf2out.c?ref=1c99d804eeb06044f5e7b3ff7b840a3570aa59c1", "patch": "@@ -12354,7 +12354,7 @@ lookup_filename (file_name)\n \n   if (DWARF2_ASM_LINE_DEBUG_INFO)\n     {\n-      fprintf (asm_out_file, \"\\t.file %u \", i);\n+      fprintf (asm_out_file, \"\\t.file %lu \", (unsigned long) i);\n       output_quoted_string (asm_out_file, file_name);\n       fputc ('\\n', asm_out_file);\n     }"}, {"sha": "cd4092fbc294b6396e48c256014133f8e809858e", "filename": "gcc/fixinc/Makefile.in", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1c99d804eeb06044f5e7b3ff7b840a3570aa59c1/gcc%2Ffixinc%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1c99d804eeb06044f5e7b3ff7b840a3570aa59c1/gcc%2Ffixinc%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffixinc%2FMakefile.in?ref=1c99d804eeb06044f5e7b3ff7b840a3570aa59c1", "patch": "@@ -29,7 +29,7 @@ SHELL=@SHELL@\n # in the kernel.  So, we use `echo' instead. \n STAMP = echo timestamp >\n \n-FL_LIST = $(CFLAGS) $(CPPFLAGS) $(WARN_CFLAGS)\n+FL_LIST = $(CFLAGS) $(CPPFLAGS) $(WARN_CFLAGS) $($@-warn)\n FIXINC_DEFS = -DIN_GCC -DHAVE_CONFIG_H $(FL_LIST) $(INCLUDES)\n \n # Directory where sources are, from where we are.\n@@ -94,6 +94,11 @@ test-stamp : $(TESTOBJ) $(LIBERTY)\n $(AF): $(FIXOBJ) $(LIBERTY)\n \t$(CC) $(FIXINC_DEFS) $(LDFLAGS) -o $@ $(FIXOBJ) $(LIBERTY)\n \n+# String length warnings\n+fixincl.o-warn = -Wno-error\n+# Signed/Unsigned warnings, but in code pulled from upstream.\n+gnu-regex.o-warn = -Wno-error\n+\n $(ALLOBJ)   : $(HDR)\n fixincl.o   : fixincl.c  $(srcdir)/fixincl.x\n fixtests.o  : fixtests.c"}, {"sha": "30466bbb2c7bd655ce6d79706f81b63cb9b23200", "filename": "gcc/fixinc/fixfixes.c", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1c99d804eeb06044f5e7b3ff7b840a3570aa59c1/gcc%2Ffixinc%2Ffixfixes.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1c99d804eeb06044f5e7b3ff7b840a3570aa59c1/gcc%2Ffixinc%2Ffixfixes.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffixinc%2Ffixfixes.c?ref=1c99d804eeb06044f5e7b3ff7b840a3570aa59c1", "patch": "@@ -73,12 +73,12 @@ typedef struct {\n   _FT_( \"gnu_type\",         gnu_type_fix )\n \n \n-#define FIX_PROC_HEAD( fix )                    \\\n-static void fix PARAMS ((const char *, const char *, tFixDesc *)); /* avoid warning */      \\\n-static void fix ( filname, text, p_fixd )       \\\n-    const char* filname;                        \\\n-    const char* text;                           \\\n-    tFixDesc* p_fixd;\n+#define FIX_PROC_HEAD( fix )\t\t\t\t\t\t\\\n+static void fix PARAMS ((const char *, const char *, tFixDesc *));\t\\\n+static void fix ( filname, text, p_fixd )\t\t\t\t\\\n+    const char* filname ATTRIBUTE_UNUSED;\t\t\t\t\\\n+    const char* text ATTRIBUTE_UNUSED;\t\t\t\t\t\\\n+    tFixDesc* p_fixd ATTRIBUTE_UNUSED;\n \n #ifdef NEED_PRINT_QUOTE\n /*"}, {"sha": "7c38637b1d0a682309c870e891a5db1915c97723", "filename": "gcc/fixinc/fixincl.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1c99d804eeb06044f5e7b3ff7b840a3570aa59c1/gcc%2Ffixinc%2Ffixincl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1c99d804eeb06044f5e7b3ff7b840a3570aa59c1/gcc%2Ffixinc%2Ffixincl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffixinc%2Ffixincl.c?ref=1c99d804eeb06044f5e7b3ff7b840a3570aa59c1", "patch": "@@ -1355,7 +1355,8 @@ process ()\n   process_ct++;\n #endif\n   if (VLEVEL( VERB_PROGRESS ) && have_tty)\n-    fprintf (stderr, \"%6d %-50s   \\r\", data_map_size, pz_curr_file );\n+    fprintf (stderr, \"%6lu %-50s   \\r\",\n+\t     (unsigned long) data_map_size, pz_curr_file);\n \n # ifndef SEPARATE_FIX_PROC\n   process_chain_head = NOPROCESS;"}, {"sha": "982fe335613f7f2b4c2bca6f2c96fc86e5d5f735", "filename": "gcc/fixinc/fixtests.c", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1c99d804eeb06044f5e7b3ff7b840a3570aa59c1/gcc%2Ffixinc%2Ffixtests.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1c99d804eeb06044f5e7b3ff7b840a3570aa59c1/gcc%2Ffixinc%2Ffixtests.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffixinc%2Ffixtests.c?ref=1c99d804eeb06044f5e7b3ff7b840a3570aa59c1", "patch": "@@ -58,15 +58,15 @@ typedef struct {\n     t_test_proc* test_proc;\n } test_entry_t;\n \n-#define FIX_TEST_TABLE \\\n-  _FT_( \"machine_name\",     machine_name_test )        \\\n+#define FIX_TEST_TABLE\t\t\t\t\t\t\t\\\n+  _FT_( \"machine_name\",     machine_name_test )\t\t\t\t\\\n   _FT_( \"stdc_0_in_system_headers\",    stdc_0_in_system_headers_test )\n \n-#define TEST_FOR_FIX_PROC_HEAD( test )          \\\n-static apply_fix_p_t test PARAMS(( tCC* file, tCC* text ));  \\\n-static apply_fix_p_t test ( fname, text )       \\\n-    tCC* fname;                                 \\\n-    tCC* text;\n+#define TEST_FOR_FIX_PROC_HEAD( test )\t\t\t\t\\\n+static apply_fix_p_t test PARAMS(( tCC* file, tCC* text ));\t\\\n+static apply_fix_p_t test ( fname, text )\t\t\t\\\n+    tCC* fname ATTRIBUTE_UNUSED;\t\t\t\t\\\n+    tCC* text ATTRIBUTE_UNUSED;\n \n \n TEST_FOR_FIX_PROC_HEAD( machine_name_test )"}, {"sha": "da78a59714bbb66f34a109e5130c2fc4cc657981", "filename": "gcc/system.h", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1c99d804eeb06044f5e7b3ff7b840a3570aa59c1/gcc%2Fsystem.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1c99d804eeb06044f5e7b3ff7b840a3570aa59c1/gcc%2Fsystem.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fsystem.h?ref=1c99d804eeb06044f5e7b3ff7b840a3570aa59c1", "patch": "@@ -99,6 +99,11 @@ extern int fprintf_unlocked PARAMS ((FILE *, const char *, ...));\n \n #endif\n \n+/* ??? Glibc's fwrite/fread_unlocked macros cause \n+   \"warning: signed and unsigned type in conditional expression\".  */\n+#undef fread_unlocked\n+#undef fwrite_unlocked\n+\n /* There are an extraordinary number of issues with <ctype.h>.\n    The last straw is that it varies with the locale.  Use libiberty's\n    replacement instead.  */"}]}