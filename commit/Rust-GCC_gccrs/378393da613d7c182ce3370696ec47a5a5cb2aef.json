{"sha": "378393da613d7c182ce3370696ec47a5a5cb2aef", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Mzc4MzkzZGE2MTNkN2MxODJjZTMzNzA2OTZlYzQ3YTVhNWNiMmFlZg==", "commit": {"author": {"name": "Roger Sayle", "email": "roger@eyesopen.com", "date": "2002-06-01T16:56:08Z"}, "committer": {"name": "Roger Sayle", "email": "sayle@gcc.gnu.org", "date": "2002-06-01T16:56:08Z"}, "message": "tree.c (real_minus_onep): New function to test for -1.0.\n\n\n\t* tree.c (real_minus_onep): New function to test for -1.0.\n\t* fold-const.c (fold) [MULT_EXPR]:  Optimize -1.0*x into -x.\n\n\t* gcc.dg/fnegate-1.c: New test case.\n\nFrom-SVN: r54149", "tree": {"sha": "c7cb5d93af1f6099cec88dc9bb98ff85b1058671", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c7cb5d93af1f6099cec88dc9bb98ff85b1058671"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/378393da613d7c182ce3370696ec47a5a5cb2aef", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/378393da613d7c182ce3370696ec47a5a5cb2aef", "html_url": "https://github.com/Rust-GCC/gccrs/commit/378393da613d7c182ce3370696ec47a5a5cb2aef", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/378393da613d7c182ce3370696ec47a5a5cb2aef/comments", "author": null, "committer": null, "parents": [{"sha": "01c58f2670a5f7858b8762e06cab0a68b98a684f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/01c58f2670a5f7858b8762e06cab0a68b98a684f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/01c58f2670a5f7858b8762e06cab0a68b98a684f"}], "stats": {"total": 147, "additions": 147, "deletions": 0}, "files": [{"sha": "9a4a44b4e62d571a46b1f7f52969b206deb1d99a", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/378393da613d7c182ce3370696ec47a5a5cb2aef/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/378393da613d7c182ce3370696ec47a5a5cb2aef/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=378393da613d7c182ce3370696ec47a5a5cb2aef", "patch": "@@ -1,3 +1,8 @@\n+2002-06-01  Roger Sayle  <roger@eyesopen.com>\n+\n+\t* tree.c (real_minus_onep): New function to test for -1.0.\n+\t* fold-const.c (fold) [MULT_EXPR]:  Optimize -1.0*x into -x.\n+\n 2002-06-01  Roger Sayle  <roger@eyesopen.com>\n \n \t* fold-const.c (fold_truthop): Transform \"a || b\" into \"(a|b) != 0\""}, {"sha": "947d575dd9398442d5faab5fe6eea3f204f7dbf4", "filename": "gcc/fold-const.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/378393da613d7c182ce3370696ec47a5a5cb2aef/gcc%2Ffold-const.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/378393da613d7c182ce3370696ec47a5a5cb2aef/gcc%2Ffold-const.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffold-const.c?ref=378393da613d7c182ce3370696ec47a5a5cb2aef", "patch": "@@ -5370,6 +5370,14 @@ fold (expr)\n \t     so we can do this anyway.  */\n \t  if (real_onep (arg1))\n \t    return non_lvalue (convert (type, arg0));\n+\n+\t  /* Transform x * -1.0 into -x.  This should be safe for NaNs,\n+\t     signed zeros and signed infinities, but is currently\n+\t     restricted to \"unsafe math optimizations\" just in case.  */\n+\t  if (flag_unsafe_math_optimizations\n+\t      && real_minus_onep (arg1))\n+\t    return fold (build1 (NEGATE_EXPR, type, arg0));\n+\n \t  /* x*2 is x+x */\n \t  if (! wins && real_twop (arg1)\n \t      && (*lang_hooks.decls.global_bindings_p) () == 0"}, {"sha": "5f2d0b7b9a761ea652fd68854a727312764a1df7", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/378393da613d7c182ce3370696ec47a5a5cb2aef/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/378393da613d7c182ce3370696ec47a5a5cb2aef/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=378393da613d7c182ce3370696ec47a5a5cb2aef", "patch": "@@ -1,3 +1,7 @@\n+2002-06-01  Roger Sayle  <roger@eyesopen.com>\n+\n+\t* gcc.dg/fnegate-1.c: New test case.\n+\n 2002-05-30  Osku Salerma  <osku@iki.fi>\n \n \t* gcc.c-torture/execute/mayalias-1.c: New file."}, {"sha": "ad0f4e09f134f012ac880cdacd8e8377a07794bb", "filename": "gcc/testsuite/gcc.dg/fnegate-1.c", "status": "added", "additions": 113, "deletions": 0, "changes": 113, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/378393da613d7c182ce3370696ec47a5a5cb2aef/gcc%2Ftestsuite%2Fgcc.dg%2Ffnegate-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/378393da613d7c182ce3370696ec47a5a5cb2aef/gcc%2Ftestsuite%2Fgcc.dg%2Ffnegate-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ffnegate-1.c?ref=378393da613d7c182ce3370696ec47a5a5cb2aef", "patch": "@@ -0,0 +1,113 @@\n+/* Copyright (C) 2002 Free Software Foundation.\n+  \n+   Test floating point negation produces the expected results.\n+  \n+   Written by Roger Sayle, 21st May 2002.  */\n+\n+/* { dg-do run } */\n+/* { dg-options \"-O2 -ffast-math\" } */\n+\n+extern void abort ();\n+\n+\n+double\n+dneg (double x)\n+{\n+  return -x;\n+}\n+\n+double\n+dmult (double x)\n+{\n+  return -1.0 * x;\n+}\n+\n+double\n+ddiv (double x)\n+{\n+  return x / -1.0;\n+}\n+\n+\n+float\n+fneg (float x)\n+{\n+  return -x;\n+}\n+\n+float\n+fmult (float x)\n+{\n+  return -1.0f * x;\n+}\n+\n+float\n+fdiv (float x)\n+{\n+  return x / -1.0f;\n+}\n+\n+\n+void\n+ftest(float src, float dst)\n+{\n+  if (fneg (src) != dst)\n+    abort ();\n+\n+  if (src != fneg (dst))\n+    abort ();\n+\n+  if (fmult (src) != dst)\n+    abort ();\n+\n+  if (src != fmult (dst))\n+    abort ();\n+\n+  if (fdiv (src) != dst)\n+    abort ();\n+\n+  if (src != fdiv(dst))\n+    abort ();\n+}\n+\n+void\n+dtest(double src, double dst)\n+{\n+  if (dneg (src) != dst)\n+    abort ();\n+\n+  if (src != dneg (dst))\n+    abort ();\n+\n+  if (dmult (src) != dst)\n+    abort ();\n+\n+  if (src != dmult (dst))\n+    abort ();\n+\n+  if (ddiv (src) != dst)\n+    abort ();\n+\n+  if (src != ddiv(dst))\n+    abort ();\n+}\n+\n+\n+int\n+main ()\n+{\n+  ftest (1.0f, -1.0f);\n+  ftest (2.0f, -2.0f);\n+  ftest (-3.0f, 3.0f);\n+  ftest (0.0f, -0.0f);\n+  ftest (-0.0f, 0.0f);\n+\n+  dtest (1.0, -1.0);\n+  dtest (2.0, -2.0);\n+  dtest (-3.0, 3.0);\n+  dtest (0.0, -0.0);\n+  dtest (-0.0, 0.0);\n+\n+  return 0;\n+}\n+"}, {"sha": "04ae6ce53480bae19a8b3546e69f8952a25bf3d6", "filename": "gcc/tree.c", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/378393da613d7c182ce3370696ec47a5a5cb2aef/gcc%2Ftree.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/378393da613d7c182ce3370696ec47a5a5cb2aef/gcc%2Ftree.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree.c?ref=378393da613d7c182ce3370696ec47a5a5cb2aef", "patch": "@@ -892,6 +892,22 @@ real_twop (expr)\n \t      && real_zerop (TREE_IMAGPART (expr))));\n }\n \n+/* Return 1 if EXPR is the real constant minus one.  */\n+\n+int\n+real_minus_onep (expr)\n+     tree expr;\n+{\n+  STRIP_NOPS (expr);\n+\n+  return ((TREE_CODE (expr) == REAL_CST\n+\t   && ! TREE_CONSTANT_OVERFLOW (expr)\n+\t   && REAL_VALUES_EQUAL (TREE_REAL_CST (expr), dconstm1))\n+\t  || (TREE_CODE (expr) == COMPLEX_CST\n+\t      && real_minus_onep (TREE_REALPART (expr))\n+\t      && real_zerop (TREE_IMAGPART (expr))));\n+}\n+\n /* Nonzero if EXP is a constant or a cast of a constant.  */\n \n int"}, {"sha": "34385da1c73c3b8d009f04196cde004b8cd669fa", "filename": "gcc/tree.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/378393da613d7c182ce3370696ec47a5a5cb2aef/gcc%2Ftree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/378393da613d7c182ce3370696ec47a5a5cb2aef/gcc%2Ftree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree.h?ref=378393da613d7c182ce3370696ec47a5a5cb2aef", "patch": "@@ -2850,6 +2850,7 @@ extern void expand_pending_sizes        PARAMS ((tree));\n \n extern int real_onep\t\t\tPARAMS ((tree));\n extern int real_twop\t\t\tPARAMS ((tree));\n+extern int real_minus_onep\t\tPARAMS ((tree));\n extern void gcc_obstack_init\t\tPARAMS ((struct obstack *));\n extern void init_obstacks\t\tPARAMS ((void));\n extern void build_common_tree_nodes\tPARAMS ((int));"}]}