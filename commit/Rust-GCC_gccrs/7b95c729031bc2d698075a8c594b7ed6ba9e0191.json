{"sha": "7b95c729031bc2d698075a8c594b7ed6ba9e0191", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6N2I5NWM3MjkwMzFiYzJkNjk4MDc1YThjNTk0YjdlZDZiYTllMDE5MQ==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@adacore.com", "date": "2015-11-09T12:14:07Z"}, "committer": {"name": "Eric Botcazou", "email": "ebotcazou@gcc.gnu.org", "date": "2015-11-09T12:14:07Z"}, "message": "re PR middle-end/68251 (sorry, unimplemented: reverse storage order for BLKmode)\n\n\tPR middle-end/68251\n\t* tree-core.h (REF_REVERSE_STORAGE_ORDER): Move around.\n\t* tree.h (REF_REVERSE_STORAGE_ORDER): Change to default_def_flag.\n\t* tree-streamer-in.c (unpack_ts_base_value_fields): Adjust.\n\t* tree-streamer-out.c (pack_ts_base_value_fields): Likewise.\n\nFrom-SVN: r230015", "tree": {"sha": "f319f7fa44f0d74b89b6dc926d17db42fad3bce5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f319f7fa44f0d74b89b6dc926d17db42fad3bce5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7b95c729031bc2d698075a8c594b7ed6ba9e0191", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7b95c729031bc2d698075a8c594b7ed6ba9e0191", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7b95c729031bc2d698075a8c594b7ed6ba9e0191", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7b95c729031bc2d698075a8c594b7ed6ba9e0191/comments", "author": null, "committer": null, "parents": [{"sha": "0780fbabe817acfecd44ea2ca48df0bb0b7af9cb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0780fbabe817acfecd44ea2ca48df0bb0b7af9cb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0780fbabe817acfecd44ea2ca48df0bb0b7af9cb"}], "stats": {"total": 30, "additions": 22, "deletions": 8}, "files": [{"sha": "2c80165650bdf3bdcfe9ed10de07f8cb795e3841", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7b95c729031bc2d698075a8c594b7ed6ba9e0191/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7b95c729031bc2d698075a8c594b7ed6ba9e0191/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=7b95c729031bc2d698075a8c594b7ed6ba9e0191", "patch": "@@ -1,3 +1,11 @@\n+2015-11-09  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\tPR middle-end/68251\n+\t* tree-core.h (REF_REVERSE_STORAGE_ORDER): Move around.\n+\t* tree.h (REF_REVERSE_STORAGE_ORDER): Change to default_def_flag.\n+\t* tree-streamer-in.c (unpack_ts_base_value_fields): Adjust.\n+\t* tree-streamer-out.c (pack_ts_base_value_fields): Likewise.\n+\n 2015-11-09  Kyrylo Tkachov  <kyrylo.tkachov@arm.com>\n \n \tPR rtl-optimization/67749"}, {"sha": "ff061ef86377359d987d76c908e9736f324c5c90", "filename": "gcc/tree-core.h", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7b95c729031bc2d698075a8c594b7ed6ba9e0191/gcc%2Ftree-core.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7b95c729031bc2d698075a8c594b7ed6ba9e0191/gcc%2Ftree-core.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-core.h?ref=7b95c729031bc2d698075a8c594b7ed6ba9e0191", "patch": "@@ -1157,9 +1157,6 @@ struct GTY(()) tree_base {\n        TYPE_SATURATING in\n            other types\n \n-       REF_REVERSE_STORAGE_ORDER in\n-           BIT_FIELD_REF, MEM_REF\n-\n        VAR_DECL_IS_VIRTUAL_OPERAND in\n \t   VAR_DECL\n \n@@ -1174,6 +1171,9 @@ struct GTY(()) tree_base {\n \n    default_def_flag:\n \n+       TYPE_FINAL_P in\n+\t   RECORD_TYPE, UNION_TYPE and QUAL_UNION_TYPE\n+\n        TYPE_VECTOR_OPAQUE in\n \t   VECTOR_TYPE\n \n@@ -1183,8 +1183,8 @@ struct GTY(()) tree_base {\n        DECL_NONLOCAL_FRAME in\n \t   VAR_DECL\n \n-       TYPE_FINAL_P in\n-\t   RECORD_TYPE, UNION_TYPE and QUAL_UNION_TYPE\n+       REF_REVERSE_STORAGE_ORDER in\n+           BIT_FIELD_REF, MEM_REF\n */\n \n struct GTY(()) tree_typed {"}, {"sha": "65a1ce3bef4272f9a618c71d918d7310a2636acc", "filename": "gcc/tree-streamer-in.c", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7b95c729031bc2d698075a8c594b7ed6ba9e0191/gcc%2Ftree-streamer-in.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7b95c729031bc2d698075a8c594b7ed6ba9e0191/gcc%2Ftree-streamer-in.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-streamer-in.c?ref=7b95c729031bc2d698075a8c594b7ed6ba9e0191", "patch": "@@ -143,7 +143,10 @@ unpack_ts_base_value_fields (struct bitpack_d *bp, tree expr)\n       TYPE_ADDR_SPACE (expr) = (unsigned) bp_unpack_value (bp, 8);\n     }\n   else if (TREE_CODE (expr) == BIT_FIELD_REF || TREE_CODE (expr) == MEM_REF)\n-    REF_REVERSE_STORAGE_ORDER (expr) = (unsigned) bp_unpack_value (bp, 1);\n+    {\n+      REF_REVERSE_STORAGE_ORDER (expr) = (unsigned) bp_unpack_value (bp, 1);\n+      bp_unpack_value (bp, 8);\n+    }\n   else if (TREE_CODE (expr) == SSA_NAME)\n     {\n       SSA_NAME_IS_DEFAULT_DEF (expr) = (unsigned) bp_unpack_value (bp, 1);"}, {"sha": "d0b7f6db171c4cebfe9e85cafa0fb3e42030c3df", "filename": "gcc/tree-streamer-out.c", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7b95c729031bc2d698075a8c594b7ed6ba9e0191/gcc%2Ftree-streamer-out.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7b95c729031bc2d698075a8c594b7ed6ba9e0191/gcc%2Ftree-streamer-out.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-streamer-out.c?ref=7b95c729031bc2d698075a8c594b7ed6ba9e0191", "patch": "@@ -117,7 +117,10 @@ pack_ts_base_value_fields (struct bitpack_d *bp, tree expr)\n       bp_pack_value (bp, TYPE_ADDR_SPACE (expr), 8);\n     }\n   else if (TREE_CODE (expr) == BIT_FIELD_REF || TREE_CODE (expr) == MEM_REF)\n-    bp_pack_value (bp, REF_REVERSE_STORAGE_ORDER (expr), 1);\n+    {\n+      bp_pack_value (bp, REF_REVERSE_STORAGE_ORDER (expr), 1);\n+      bp_pack_value (bp, 0, 8);\n+    }\n   else if (TREE_CODE (expr) == SSA_NAME)\n     {\n       bp_pack_value (bp, SSA_NAME_IS_DEFAULT_DEF (expr), 1);"}, {"sha": "2a5ccfc6802477c39a2a7e14d77db283a5990f6d", "filename": "gcc/tree.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7b95c729031bc2d698075a8c594b7ed6ba9e0191/gcc%2Ftree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7b95c729031bc2d698075a8c594b7ed6ba9e0191/gcc%2Ftree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree.h?ref=7b95c729031bc2d698075a8c594b7ed6ba9e0191", "patch": "@@ -927,7 +927,7 @@ extern void omp_clause_range_check_failed (const_tree, const char *, int,\n    But, of course, the storage order must be preserved when the accesses\n    themselves are rewritten or transformed.  */\n #define REF_REVERSE_STORAGE_ORDER(NODE) \\\n-  (TREE_CHECK2 (NODE, BIT_FIELD_REF, MEM_REF)->base.u.bits.saturating_flag)\n+  (TREE_CHECK2 (NODE, BIT_FIELD_REF, MEM_REF)->base.default_def_flag)\n \n /* These flags are available for each language front end to use internally.  */\n #define TREE_LANG_FLAG_0(NODE) \\"}]}