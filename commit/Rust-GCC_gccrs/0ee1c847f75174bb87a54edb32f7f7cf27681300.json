{"sha": "0ee1c847f75174bb87a54edb32f7f7cf27681300", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MGVlMWM4NDdmNzUxNzRiYjg3YTU0ZWRiMzJmN2Y3Y2YyNzY4MTMwMA==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2011-12-08T22:28:38Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2011-12-08T22:28:38Z"}, "message": "re PR c++/51318 (segfault on Eigen3)\n\n\tPR c++/51318\n\t* typeck.c (build_x_conditional_expr): Restrict glvalue games to C++11.\n\nFrom-SVN: r182142", "tree": {"sha": "72c3586becdc548da2d22a9612b89d1ffdc537bf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/72c3586becdc548da2d22a9612b89d1ffdc537bf"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0ee1c847f75174bb87a54edb32f7f7cf27681300", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0ee1c847f75174bb87a54edb32f7f7cf27681300", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0ee1c847f75174bb87a54edb32f7f7cf27681300", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0ee1c847f75174bb87a54edb32f7f7cf27681300/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "4eefc795c1af34738cbbe5839fc20415f7b20f39", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4eefc795c1af34738cbbe5839fc20415f7b20f39", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4eefc795c1af34738cbbe5839fc20415f7b20f39"}], "stats": {"total": 22, "additions": 20, "deletions": 2}, "files": [{"sha": "14e65c0f7a66252879a7202247c4afdcae010833", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0ee1c847f75174bb87a54edb32f7f7cf27681300/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0ee1c847f75174bb87a54edb32f7f7cf27681300/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=0ee1c847f75174bb87a54edb32f7f7cf27681300", "patch": "@@ -1,5 +1,8 @@\n 2011-12-08  Jason Merrill  <jason@redhat.com>\n \n+\tPR c++/51318\n+\t* typeck.c (build_x_conditional_expr): Restrict glvalue games to C++11.\n+\n \tPR c++/51459\n \t* pt.c (tsubst_expr) [DECL_EXPR]: Handle capture proxies properly.\n \t* semantics.c (insert_capture_proxy): No longer static."}, {"sha": "4973d7d72ce437457f4d6e16671cf8829c07f2bc", "filename": "gcc/cp/typeck.c", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0ee1c847f75174bb87a54edb32f7f7cf27681300/gcc%2Fcp%2Ftypeck.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0ee1c847f75174bb87a54edb32f7f7cf27681300/gcc%2Fcp%2Ftypeck.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Ftypeck.c?ref=0ee1c847f75174bb87a54edb32f7f7cf27681300", "patch": "@@ -5517,8 +5517,10 @@ build_x_conditional_expr (tree ifexp, tree op1, tree op2,\n     {\n       tree min = build_min_non_dep (COND_EXPR, expr,\n \t\t\t\t    orig_ifexp, orig_op1, orig_op2);\n-      /* Remember that the result is an lvalue or xvalue.  */\n-      if (lvalue_or_rvalue_with_address_p (expr)\n+      /* In C++11, remember that the result is an lvalue or xvalue.\n+         In C++98, lvalue_kind can just assume lvalue in a template.  */\n+      if (cxx_dialect >= cxx0x\n+\t  && lvalue_or_rvalue_with_address_p (expr)\n \t  && !lvalue_or_rvalue_with_address_p (min))\n \tTREE_TYPE (min) = cp_build_reference_type (TREE_TYPE (min),\n \t\t\t\t\t\t   !real_lvalue_p (expr));"}, {"sha": "9d4f286418eb8302ae9596b9eb0f590d374a113b", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0ee1c847f75174bb87a54edb32f7f7cf27681300/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0ee1c847f75174bb87a54edb32f7f7cf27681300/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=0ee1c847f75174bb87a54edb32f7f7cf27681300", "patch": "@@ -1,5 +1,8 @@\n 2011-12-08  Jason Merrill  <jason@redhat.com>\n \n+\tPR c++/51318\n+\t* g++.dg/template/cond8.C: New.\n+\n \tPR c++/51459\n \t* g++.dg/cpp0x/lambda/lambda-template4.C: New.\n "}, {"sha": "a3bad7e7beda085340278cf5cc733bfe294cfa4e", "filename": "gcc/testsuite/g++.dg/template/cond8.C", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0ee1c847f75174bb87a54edb32f7f7cf27681300/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fcond8.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0ee1c847f75174bb87a54edb32f7f7cf27681300/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fcond8.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fcond8.C?ref=0ee1c847f75174bb87a54edb32f7f7cf27681300", "patch": "@@ -0,0 +1,10 @@\n+// PR c++/51318\n+\n+enum { e0, e1 };\n+\n+template<bool B, int = B ? e0 : e1> struct A {};\n+\n+template<typename T> struct B\n+{\n+  A<T::X> a;\n+};"}]}