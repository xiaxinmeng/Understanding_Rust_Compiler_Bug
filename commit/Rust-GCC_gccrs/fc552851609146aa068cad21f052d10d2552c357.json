{"sha": "fc552851609146aa068cad21f052d10d2552c357", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZmM1NTI4NTE2MDkxNDZhYTA2OGNhZDIxZjA1MmQxMGQyNTUyYzM1Nw==", "commit": {"author": {"name": "Richard Sandiford", "email": "rsandifo@redhat.com", "date": "2002-04-13T09:29:03Z"}, "committer": {"name": "Richard Sandiford", "email": "rsandifo@gcc.gnu.org", "date": "2002-04-13T09:29:03Z"}, "message": "stmt.c (check_unique_operand_names): Expect operand names to be strings rather than identifiers.\n\n\t* stmt.c (check_unique_operand_names): Expect operand names to\n\tbe strings rather than identifiers.  Use simple_cst_equal to\n\tcompare them.\n\t(resolve_operand_name_1): Make same identifier to string change here.\n\t* c-parse.in (asm_operand): Convert a named operand into a string.\n\t* cp/parse.y (asm_operand): Likewise.\n\nFrom-SVN: r52269", "tree": {"sha": "7ce196bd09b2829aee78182cc4a87bbe0cf3c046", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7ce196bd09b2829aee78182cc4a87bbe0cf3c046"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/fc552851609146aa068cad21f052d10d2552c357", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fc552851609146aa068cad21f052d10d2552c357", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fc552851609146aa068cad21f052d10d2552c357", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fc552851609146aa068cad21f052d10d2552c357/comments", "author": null, "committer": null, "parents": [{"sha": "c8825221047b9d22cac2af7d52b7c7cba4fa6967", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c8825221047b9d22cac2af7d52b7c7cba4fa6967", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c8825221047b9d22cac2af7d52b7c7cba4fa6967"}], "stats": {"total": 37, "additions": 25, "deletions": 12}, "files": [{"sha": "b0243de561972d9289b7a2c071888e7a663e1399", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fc552851609146aa068cad21f052d10d2552c357/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fc552851609146aa068cad21f052d10d2552c357/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=fc552851609146aa068cad21f052d10d2552c357", "patch": "@@ -1,3 +1,12 @@\n+2002-04-13  Richard Sandiford  <rsandifo@redhat.com>\n+\n+\t* stmt.c (check_unique_operand_names): Expect operand names to\n+\tbe strings rather than identifiers.  Use simple_cst_equal to\n+\tcompare them.\n+\t(resolve_operand_name_1): Make same identifier to string change here.\n+\t* c-parse.in (asm_operand): Convert a named operand into a string.\n+\t* cp/parse.y (asm_operand): Likewise.\n+\n 2002-04-13  Andreas Schwab  <schwab@suse.de>\n \n \t* config/ia64/ia64.h (CPP_SPEC): Include %(cpp_cpu)."}, {"sha": "c6d4b4fe0030964f831193d76627db3a3a8c8e23", "filename": "gcc/c-parse.in", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fc552851609146aa068cad21f052d10d2552c357/gcc%2Fc-parse.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fc552851609146aa068cad21f052d10d2552c357/gcc%2Fc-parse.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-parse.in?ref=fc552851609146aa068cad21f052d10d2552c357", "patch": "@@ -2467,7 +2467,9 @@ asm_operand:\n \t  STRING '(' expr ')'\n \t\t{ $$ = build_tree_list (build_tree_list (NULL_TREE, $1), $3); }\n \t| '[' identifier ']' STRING '(' expr ')'\n-\t\t{ $$ = build_tree_list (build_tree_list ($2, $4), $6); }\n+\t\t{ $2 = build_string (IDENTIFIER_LENGTH ($2),\n+\t\t\t\t     IDENTIFIER_POINTER ($2));\n+\t\t  $$ = build_tree_list (build_tree_list ($2, $4), $6); }\n \t;\n \n asm_clobbers:"}, {"sha": "ae1c2a48010faf06339a6e2da6795b57715a5f4d", "filename": "gcc/cp/parse.y", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fc552851609146aa068cad21f052d10d2552c357/gcc%2Fcp%2Fparse.y", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fc552851609146aa068cad21f052d10d2552c357/gcc%2Fcp%2Fparse.y", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fparse.y?ref=fc552851609146aa068cad21f052d10d2552c357", "patch": "@@ -3637,7 +3637,9 @@ asm_operand:\n \t  STRING '(' expr ')'\n \t\t{ $$ = build_tree_list (build_tree_list (NULL_TREE, $1), $3); }\n \t| '[' identifier ']' STRING '(' expr ')'\n-\t\t{ $$ = build_tree_list (build_tree_list ($2, $4), $6); }\n+\t\t{ $2 = build_string (IDENTIFIER_LENGTH ($2),\n+\t\t\t\t     IDENTIFIER_POINTER ($2));\n+\t\t  $$ = build_tree_list (build_tree_list ($2, $4), $6); }\n \t;\n \n asm_clobbers:"}, {"sha": "32a1541cb057973c2658ad4bdb9915fff6628e31", "filename": "gcc/stmt.c", "status": "modified", "additions": 10, "deletions": 10, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fc552851609146aa068cad21f052d10d2552c357/gcc%2Fstmt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fc552851609146aa068cad21f052d10d2552c357/gcc%2Fstmt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fstmt.c?ref=fc552851609146aa068cad21f052d10d2552c357", "patch": "@@ -2034,7 +2034,7 @@ check_unique_operand_names (outputs, inputs)\n \tcontinue;\n \n       for (j = TREE_CHAIN (i); j ; j = TREE_CHAIN (j))\n-\tif (i_name == TREE_PURPOSE (TREE_PURPOSE (j)))\n+\tif (simple_cst_equal (i_name, TREE_PURPOSE (TREE_PURPOSE (j))))\n \t  goto failure;\n     }\n \n@@ -2045,18 +2045,18 @@ check_unique_operand_names (outputs, inputs)\n \tcontinue;\n \n       for (j = TREE_CHAIN (i); j ; j = TREE_CHAIN (j))\n-\tif (i_name == TREE_PURPOSE (TREE_PURPOSE (j)))\n+\tif (simple_cst_equal (i_name, TREE_PURPOSE (TREE_PURPOSE (j))))\n \t  goto failure;\n       for (j = outputs; j ; j = TREE_CHAIN (j))\n-\tif (i_name == TREE_PURPOSE (TREE_PURPOSE (j)))\n+\tif (simple_cst_equal (i_name, TREE_PURPOSE (TREE_PURPOSE (j))))\n \t  goto failure;\n     }\n \n   return true;\n \n  failure:\n   error (\"duplicate asm operand name '%s'\",\n-\t IDENTIFIER_POINTER (TREE_PURPOSE (TREE_PURPOSE (i))));\n+\t TREE_STRING_POINTER (TREE_PURPOSE (TREE_PURPOSE (i))));\n   return false;\n }\n \n@@ -2150,20 +2150,20 @@ resolve_operand_name_1 (p, outputs, inputs)\n   /* Resolve the name to a number.  */\n   for (op = 0, t = outputs; t ; t = TREE_CHAIN (t), op++)\n     {\n-      tree id = TREE_PURPOSE (TREE_PURPOSE (t));\n-      if (id)\n+      tree name = TREE_PURPOSE (TREE_PURPOSE (t));\n+      if (name)\n \t{\n-\t  const char *c = IDENTIFIER_POINTER (id);\n+\t  const char *c = TREE_STRING_POINTER (name);\n \t  if (strncmp (c, p + 1, len) == 0 && c[len] == '\\0')\n \t    goto found;\n \t}\n     }\n   for (t = inputs; t ; t = TREE_CHAIN (t), op++)\n     {\n-      tree id = TREE_PURPOSE (TREE_PURPOSE (t));\n-      if (id)\n+      tree name = TREE_PURPOSE (TREE_PURPOSE (t));\n+      if (name)\n \t{\n-\t  const char *c = IDENTIFIER_POINTER (id);\n+\t  const char *c = TREE_STRING_POINTER (name);\n \t  if (strncmp (c, p + 1, len) == 0 && c[len] == '\\0')\n \t    goto found;\n \t}"}]}