{"sha": "6fedd529b927167733e5e858d9bae5ce075ec00f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmZlZGQ1MjliOTI3MTY3NzMzZTVlODU4ZDliYWU1Y2UwNzVlYzAwZg==", "commit": {"author": {"name": "Jim Wilson", "email": "jim.wilson@linaro.org", "date": "2015-05-08T19:56:13Z"}, "committer": {"name": "Jim Wilson", "email": "wilson@gcc.gnu.org", "date": "2015-05-08T19:56:13Z"}, "message": "install.texi (--enable-languages): Add missing jit and lto info.\n\n* doc/install.texi (--enable-languages): Add missing jit and lto info.\nAdd ^ to grep command.\n* doc/match-and-simplify.texi (GIMPLE API): Add missing fourth tree\narg to last gimple_simplify declaration.  Add missing gimple_build\ndeclaration for built-in function case with four tree args.\n\nFrom-SVN: r222923", "tree": {"sha": "6ca6f280a8b3ce8bd19a1b57d6e35df8c7897c97", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6ca6f280a8b3ce8bd19a1b57d6e35df8c7897c97"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6fedd529b927167733e5e858d9bae5ce075ec00f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6fedd529b927167733e5e858d9bae5ce075ec00f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6fedd529b927167733e5e858d9bae5ce075ec00f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6fedd529b927167733e5e858d9bae5ce075ec00f/comments", "author": null, "committer": null, "parents": [{"sha": "f5e7f5900b6be6fff60da6aee6eb76952236b5e3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f5e7f5900b6be6fff60da6aee6eb76952236b5e3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f5e7f5900b6be6fff60da6aee6eb76952236b5e3"}], "stats": {"total": 19, "additions": 15, "deletions": 4}, "files": [{"sha": "77d93529f10c2338fa713c2572344d152ab26d8c", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6fedd529b927167733e5e858d9bae5ce075ec00f/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6fedd529b927167733e5e858d9bae5ce075ec00f/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=6fedd529b927167733e5e858d9bae5ce075ec00f", "patch": "@@ -1,3 +1,11 @@\n+2015-05-08  Jim Wilson  <jim.wilson@linaro.org>\n+\n+\t* doc/install.texi (--enable-languages): Add missing jit and lto info.\n+\tAdd ^ to grep command.\n+\t* doc/match-and-simplify.texi (GIMPLE API): Add missing fourth tree\n+\targ to last gimple_simplify declaration.  Add missing gimple_build\n+\tdeclaration for built-in function case with four tree args.\n+\n 2015-05-08  Gregor Richards  <gregor.richards@uwaterloo.ca>\n \t    Szabolcs Nagy  <szabolcs.nagy@arm.com>\n "}, {"sha": "8790f1484719c49324684ae118d415a00e0c5e83", "filename": "gcc/doc/install.texi", "status": "modified", "additions": 5, "deletions": 3, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6fedd529b927167733e5e858d9bae5ce075ec00f/gcc%2Fdoc%2Finstall.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6fedd529b927167733e5e858d9bae5ce075ec00f/gcc%2Fdoc%2Finstall.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finstall.texi?ref=6fedd529b927167733e5e858d9bae5ce075ec00f", "patch": "@@ -1544,15 +1544,17 @@ their runtime libraries should be built.  For a list of valid values for\n @var{langN} you can issue the following command in the\n @file{gcc} directory of your GCC source tree:@*\n @smallexample\n-grep language= */config-lang.in\n+grep ^language= */config-lang.in\n @end smallexample\n Currently, you can use any of the following:\n @code{all}, @code{ada}, @code{c}, @code{c++}, @code{fortran},\n-@code{go}, @code{java}, @code{objc}, @code{obj-c++}.\n+@code{go}, @code{java}, @code{jit}, @code{lto}, @code{objc}, @code{obj-c++}.\n Building the Ada compiler has special requirements, see below.\n If you do not pass this flag, or specify the option @code{all}, then all\n default languages available in the @file{gcc} sub-tree will be configured.\n-Ada, Go and Objective-C++ are not default languages; the rest are.\n+Ada, Go, Jit, and Objective-C++ are not default languages.  LTO is not a\n+default language, but is built by default because @option{--enable-lto} is\n+enabled by default.  The other languages are default languages.\n \n @item --enable-stage1-languages=@var{lang1},@var{lang2},@dots{}\n Specify that a particular subset of compilers and their runtime"}, {"sha": "876483f681f6a00543bc71a663baaa45a2b063e2", "filename": "gcc/doc/match-and-simplify.texi", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6fedd529b927167733e5e858d9bae5ce075ec00f/gcc%2Fdoc%2Fmatch-and-simplify.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6fedd529b927167733e5e858d9bae5ce075ec00f/gcc%2Fdoc%2Fmatch-and-simplify.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Fmatch-and-simplify.texi?ref=6fedd529b927167733e5e858d9bae5ce075ec00f", "patch": "@@ -39,7 +39,7 @@ APIs are introduced.\n @deftypefnx {GIMPLE function} tree gimple_simplify (enum tree_code, tree, tree, tree, tree, gimple_seq *, tree (*)(tree))\n @deftypefnx {GIMPLE function} tree gimple_simplify (enum built_in_function, tree, tree, gimple_seq *, tree (*)(tree))\n @deftypefnx {GIMPLE function} tree gimple_simplify (enum built_in_function, tree, tree, tree, gimple_seq *, tree (*)(tree))\n-@deftypefnx {GIMPLE function} tree gimple_simplify (enum built_in_function, tree, tree, tree, gimple_seq *, tree (*)(tree))\n+@deftypefnx {GIMPLE function} tree gimple_simplify (enum built_in_function, tree, tree, tree, tree, gimple_seq *, tree (*)(tree))\n The main GIMPLE API entry to the expression simplifications mimicing\n that of the GENERIC fold_@{unary,binary,ternary@} functions.\n @end deftypefn\n@@ -64,6 +64,7 @@ Ontop of these a @code{fold_buildN}-like API for GIMPLE is introduced:\n @deftypefnx {GIMPLE function} tree gimple_build (gimple_seq *, location_t, enum tree_code, tree, tree, tree, tree, tree (*valueize) (tree) = NULL);\n @deftypefnx {GIMPLE function} tree gimple_build (gimple_seq *, location_t, enum built_in_function, tree, tree, tree (*valueize) (tree) = NULL);\n @deftypefnx {GIMPLE function} tree gimple_build (gimple_seq *, location_t, enum built_in_function, tree, tree, tree, tree (*valueize) (tree) = NULL);\n+@deftypefnx {GIMPLE function} tree gimple_build (gimple_seq *, location_t, enum built_in_function, tree, tree, tree, tree, tree (*valueize) (tree) = NULL);\n @deftypefnx {GIMPLE function} tree gimple_convert (gimple_seq *, location_t, tree, tree);\n @end deftypefn\n "}]}