{"sha": "8aa04a189b677159c475f7fc3409ee56c710f047", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGFhMDRhMTg5YjY3NzE1OWM0NzVmN2ZjMzQwOWVlNTZjNzEwZjA0Nw==", "commit": {"author": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2020-08-10T10:01:59Z"}, "committer": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2020-09-01T12:25:51Z"}, "message": "vec: default exect = false in grow functions.\n\ngcc/ChangeLog:\n\n\t* vec.h (vec_safe_grow): Change default of exact to false.\n\t(vec_safe_grow_cleared): Likewise.", "tree": {"sha": "3409114ecf03cde1d09568098e37e815d146d7bb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3409114ecf03cde1d09568098e37e815d146d7bb"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8aa04a189b677159c475f7fc3409ee56c710f047", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8aa04a189b677159c475f7fc3409ee56c710f047", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8aa04a189b677159c475f7fc3409ee56c710f047", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8aa04a189b677159c475f7fc3409ee56c710f047/comments", "author": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "committer": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b61eaa25b0812a5996024e0ddb3535dde5a89c88", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b61eaa25b0812a5996024e0ddb3535dde5a89c88", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b61eaa25b0812a5996024e0ddb3535dde5a89c88"}], "stats": {"total": 10, "additions": 5, "deletions": 5}, "files": [{"sha": "48e756ebdf34843973feb944df59e62e898dc920", "filename": "gcc/vec.h", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8aa04a189b677159c475f7fc3409ee56c710f047/gcc%2Fvec.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8aa04a189b677159c475f7fc3409ee56c710f047/gcc%2Fvec.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fvec.h?ref=8aa04a189b677159c475f7fc3409ee56c710f047", "patch": "@@ -724,7 +724,7 @@ vec_free (vec<T, A, vl_embed> *&v)\n template<typename T, typename A>\n inline void\n vec_safe_grow (vec<T, A, vl_embed> *&v, unsigned len,\n-\t       bool exact CXX_MEM_STAT_INFO)\n+\t       bool exact = false CXX_MEM_STAT_INFO)\n {\n   unsigned oldlen = vec_safe_length (v);\n   gcc_checking_assert (len >= oldlen);\n@@ -737,7 +737,7 @@ vec_safe_grow (vec<T, A, vl_embed> *&v, unsigned len,\n template<typename T, typename A>\n inline void\n vec_safe_grow_cleared (vec<T, A, vl_embed> *&v, unsigned len,\n-\t\t       bool exact CXX_MEM_STAT_INFO)\n+\t\t       bool exact = false CXX_MEM_STAT_INFO)\n {\n   unsigned oldlen = vec_safe_length (v);\n   vec_safe_grow (v, len, exact PASS_MEM_STAT);\n@@ -750,7 +750,7 @@ vec_safe_grow_cleared (vec<T, A, vl_embed> *&v, unsigned len,\n template<typename T>\n inline void\n vec_safe_grow_cleared (vec<T, va_heap, vl_ptr> *&v,\n-\t\t       unsigned len, bool exact CXX_MEM_STAT_INFO)\n+\t\t       unsigned len, bool exact = false CXX_MEM_STAT_INFO)\n {\n   v->safe_grow_cleared (len, exact PASS_MEM_STAT);\n }\n@@ -1467,8 +1467,8 @@ struct vec<T, va_heap, vl_ptr>\n   T *safe_push (const T &CXX_MEM_STAT_INFO);\n   T &pop (void);\n   void truncate (unsigned);\n-  void safe_grow (unsigned, bool CXX_MEM_STAT_INFO);\n-  void safe_grow_cleared (unsigned, bool CXX_MEM_STAT_INFO);\n+  void safe_grow (unsigned, bool = false CXX_MEM_STAT_INFO);\n+  void safe_grow_cleared (unsigned, bool = false CXX_MEM_STAT_INFO);\n   void quick_grow (unsigned);\n   void quick_grow_cleared (unsigned);\n   void quick_insert (unsigned, const T &);"}]}