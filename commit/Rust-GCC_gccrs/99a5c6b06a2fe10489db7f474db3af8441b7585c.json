{"sha": "99a5c6b06a2fe10489db7f474db3af8441b7585c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTlhNWM2YjA2YTJmZTEwNDg5ZGI3ZjQ3NGRiM2FmODQ0MWI3NTg1Yw==", "commit": {"author": {"name": "Matthew Fortune", "email": "matthew.fortune@imgtec.com", "date": "2014-09-10T10:52:39Z"}, "committer": {"name": "Matthew Fortune", "email": "mpf@gcc.gnu.org", "date": "2014-09-10T10:52:39Z"}, "message": "MIPS: Do not reload unallocated FP_REGS pseudos via GR_REGS\n\ngcc/\n\n\t* config/mips/mips.c (mips_secondary_reload_class): Handle\n\tregno < 0 case.\n\nFrom-SVN: r215120", "tree": {"sha": "13399392523c390b5135c5645dec71c41ecd3b61", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/13399392523c390b5135c5645dec71c41ecd3b61"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/99a5c6b06a2fe10489db7f474db3af8441b7585c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/99a5c6b06a2fe10489db7f474db3af8441b7585c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/99a5c6b06a2fe10489db7f474db3af8441b7585c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/99a5c6b06a2fe10489db7f474db3af8441b7585c/comments", "author": {"login": "mfortune", "id": 10220247, "node_id": "MDQ6VXNlcjEwMjIwMjQ3", "avatar_url": "https://avatars.githubusercontent.com/u/10220247?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mfortune", "html_url": "https://github.com/mfortune", "followers_url": "https://api.github.com/users/mfortune/followers", "following_url": "https://api.github.com/users/mfortune/following{/other_user}", "gists_url": "https://api.github.com/users/mfortune/gists{/gist_id}", "starred_url": "https://api.github.com/users/mfortune/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mfortune/subscriptions", "organizations_url": "https://api.github.com/users/mfortune/orgs", "repos_url": "https://api.github.com/users/mfortune/repos", "events_url": "https://api.github.com/users/mfortune/events{/privacy}", "received_events_url": "https://api.github.com/users/mfortune/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "5625bd33a23929746596a22f3a8e7ac52b368435", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5625bd33a23929746596a22f3a8e7ac52b368435", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5625bd33a23929746596a22f3a8e7ac52b368435"}], "stats": {"total": 10, "additions": 8, "deletions": 2}, "files": [{"sha": "154b9daa0a06db1f78e534814f40fb267da916b3", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/99a5c6b06a2fe10489db7f474db3af8441b7585c/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/99a5c6b06a2fe10489db7f474db3af8441b7585c/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=99a5c6b06a2fe10489db7f474db3af8441b7585c", "patch": "@@ -1,3 +1,8 @@\n+2014-09-10  Matthew Fortune  <matthew.fortune@imgtec.com>\n+\n+\t* config/mips/mips.c (mips_secondary_reload_class): Handle\n+\tregno < 0 case.\n+\n 2014-09-10  Robert Suchanek   <robert.suchanek@imgtec.com>\n \n \t* lra-lives.c (process_bb_lives): Replace assignment with bitwise OR"}, {"sha": "d1d4defd8e51f53da138f2ee88509b380dd8e41b", "filename": "gcc/config/mips/mips.c", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/99a5c6b06a2fe10489db7f474db3af8441b7585c/gcc%2Fconfig%2Fmips%2Fmips.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/99a5c6b06a2fe10489db7f474db3af8441b7585c/gcc%2Fconfig%2Fmips%2Fmips.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fmips.c?ref=99a5c6b06a2fe10489db7f474db3af8441b7585c", "patch": "@@ -12143,8 +12143,9 @@ mips_secondary_reload_class (enum reg_class rclass,\n \n   if (reg_class_subset_p (rclass, FP_REGS))\n     {\n-      if (MEM_P (x)\n-\t  && (GET_MODE_SIZE (mode) == 4 || GET_MODE_SIZE (mode) == 8))\n+      if (regno < 0\n+\t  || (MEM_P (x)\n+\t      && (GET_MODE_SIZE (mode) == 4 || GET_MODE_SIZE (mode) == 8)))\n \t/* In this case we can use lwc1, swc1, ldc1 or sdc1.  We'll use\n \t   pairs of lwc1s and swc1s if ldc1 and sdc1 are not supported.  */\n \treturn NO_REGS;"}]}