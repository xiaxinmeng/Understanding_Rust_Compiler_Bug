{"sha": "c0d6cb1a6f2ccb052ca538ac49d82abec7ef60d8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzBkNmNiMWE2ZjJjY2IwNTJjYTUzOGFjNDlkODJhYmVjN2VmNjBkOA==", "commit": {"author": {"name": "Segher Boessenkool", "email": "segher@kernel.crashing.org", "date": "2016-11-12T15:13:14Z"}, "committer": {"name": "Segher Boessenkool", "email": "segher@gcc.gnu.org", "date": "2016-11-12T15:13:14Z"}, "message": "rs6000: Don't forget to initialize the TOC (PR77957)\n\nThe code generating traceback tables mistakenly does an early return\nif !optional_tbtab, which causes it to miss the code generating the TOC\nsection.  This only matters if the TOC will be empty since otherwise\nthe section is created elsewhere.\n\nThis patch fixes it.\n\n\n\tPR target/77957\n\t* config/rs6000/rs6000.c (rs6000_output_function_epilogue): Don't\n\treturn early if !optional_tbtab.\n\nFrom-SVN: r242336", "tree": {"sha": "4f88af78effffd1f22988bd192edb3bc7aaae7f1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4f88af78effffd1f22988bd192edb3bc7aaae7f1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c0d6cb1a6f2ccb052ca538ac49d82abec7ef60d8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c0d6cb1a6f2ccb052ca538ac49d82abec7ef60d8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c0d6cb1a6f2ccb052ca538ac49d82abec7ef60d8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c0d6cb1a6f2ccb052ca538ac49d82abec7ef60d8/comments", "author": {"login": "segher", "id": 417629, "node_id": "MDQ6VXNlcjQxNzYyOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/417629?v=4", "gravatar_id": "", "url": "https://api.github.com/users/segher", "html_url": "https://github.com/segher", "followers_url": "https://api.github.com/users/segher/followers", "following_url": "https://api.github.com/users/segher/following{/other_user}", "gists_url": "https://api.github.com/users/segher/gists{/gist_id}", "starred_url": "https://api.github.com/users/segher/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/segher/subscriptions", "organizations_url": "https://api.github.com/users/segher/orgs", "repos_url": "https://api.github.com/users/segher/repos", "events_url": "https://api.github.com/users/segher/events{/privacy}", "received_events_url": "https://api.github.com/users/segher/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "b93d8a3f16bc7582254edf988b14009587fe00a6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b93d8a3f16bc7582254edf988b14009587fe00a6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b93d8a3f16bc7582254edf988b14009587fe00a6"}], "stats": {"total": 87, "additions": 47, "deletions": 40}, "files": [{"sha": "e5510c37bf982a46202f41cd0fee6583a5c983ce", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c0d6cb1a6f2ccb052ca538ac49d82abec7ef60d8/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c0d6cb1a6f2ccb052ca538ac49d82abec7ef60d8/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=c0d6cb1a6f2ccb052ca538ac49d82abec7ef60d8", "patch": "@@ -1,3 +1,9 @@\n+2016-11-12  Segher Boessenkool  <segher@kernel.crashing.org>\n+\n+\tPR target/77957\n+\t* config/rs6000/rs6000.c (rs6000_output_function_epilogue): Don't\n+\treturn early if !optional_tbtab.\n+\n 2016-11-11  Eric Botcazou  <ebotcazou@adacore.com>\n \n \tPR rtl-optimization/59461"}, {"sha": "05448cb7904799fbe3204faba882df4845a1a74c", "filename": "gcc/config/rs6000/rs6000.c", "status": "modified", "additions": 41, "deletions": 40, "changes": 81, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c0d6cb1a6f2ccb052ca538ac49d82abec7ef60d8/gcc%2Fconfig%2Frs6000%2Frs6000.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c0d6cb1a6f2ccb052ca538ac49d82abec7ef60d8/gcc%2Fconfig%2Frs6000%2Frs6000.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.c?ref=c0d6cb1a6f2ccb052ca538ac49d82abec7ef60d8", "patch": "@@ -30412,53 +30412,54 @@ rs6000_output_function_epilogue (FILE *file,\n \t seems to set the bit when not optimizing.  */\n       fprintf (file, \"%d\\n\", ((float_parms << 1) | (! optimize)));\n \n-      if (! optional_tbtab)\n-\treturn;\n-\n-      /* Optional fields follow.  Some are variable length.  */\n-\n-      /* Parameter types, left adjusted bit fields: 0 fixed, 10 single float,\n-\t 11 double float.  */\n-      /* There is an entry for each parameter in a register, in the order that\n-\t they occur in the parameter list.  Any intervening arguments on the\n-\t stack are ignored.  If the list overflows a long (max possible length\n-\t 34 bits) then completely leave off all elements that don't fit.  */\n-      /* Only emit this long if there was at least one parameter.  */\n-      if (fixed_parms || float_parms)\n-\tfprintf (file, \"\\t.long %d\\n\", parm_info);\n-\n-      /* Offset from start of code to tb table.  */\n-      fputs (\"\\t.long \", file);\n-      ASM_OUTPUT_INTERNAL_LABEL_PREFIX (file, \"LT\");\n-      RS6000_OUTPUT_BASENAME (file, fname);\n-      putc ('-', file);\n-      rs6000_output_function_entry (file, fname);\n-      putc ('\\n', file);\n+      if (optional_tbtab)\n+\t{\n+\t  /* Optional fields follow.  Some are variable length.  */\n+\n+\t  /* Parameter types, left adjusted bit fields: 0 fixed, 10 single\n+\t     float, 11 double float.  */\n+\t  /* There is an entry for each parameter in a register, in the order\n+\t     that they occur in the parameter list.  Any intervening arguments\n+\t     on the stack are ignored.  If the list overflows a long (max\n+\t     possible length 34 bits) then completely leave off all elements\n+\t     that don't fit.  */\n+\t  /* Only emit this long if there was at least one parameter.  */\n+\t  if (fixed_parms || float_parms)\n+\t    fprintf (file, \"\\t.long %d\\n\", parm_info);\n+\n+\t  /* Offset from start of code to tb table.  */\n+\t  fputs (\"\\t.long \", file);\n+\t  ASM_OUTPUT_INTERNAL_LABEL_PREFIX (file, \"LT\");\n+\t  RS6000_OUTPUT_BASENAME (file, fname);\n+\t  putc ('-', file);\n+\t  rs6000_output_function_entry (file, fname);\n+\t  putc ('\\n', file);\n \n-      /* Interrupt handler mask.  */\n-      /* Omit this long, since we never set the interrupt handler bit\n-\t above.  */\n+\t  /* Interrupt handler mask.  */\n+\t  /* Omit this long, since we never set the interrupt handler bit\n+\t     above.  */\n \n-      /* Number of CTL (controlled storage) anchors.  */\n-      /* Omit this long, since the has_ctl bit is never set above.  */\n+\t  /* Number of CTL (controlled storage) anchors.  */\n+\t  /* Omit this long, since the has_ctl bit is never set above.  */\n \n-      /* Displacement into stack of each CTL anchor.  */\n-      /* Omit this list of longs, because there are no CTL anchors.  */\n+\t  /* Displacement into stack of each CTL anchor.  */\n+\t  /* Omit this list of longs, because there are no CTL anchors.  */\n \n-      /* Length of function name.  */\n-      if (*fname == '*')\n-\t++fname;\n-      fprintf (file, \"\\t.short %d\\n\", (int) strlen (fname));\n+\t  /* Length of function name.  */\n+\t  if (*fname == '*')\n+\t    ++fname;\n+\t  fprintf (file, \"\\t.short %d\\n\", (int) strlen (fname));\n \n-      /* Function name.  */\n-      assemble_string (fname, strlen (fname));\n+\t  /* Function name.  */\n+\t  assemble_string (fname, strlen (fname));\n \n-      /* Register for alloca automatic storage; this is always reg 31.\n-\t Only emit this if the alloca bit was set above.  */\n-      if (frame_pointer_needed)\n-\tfputs (\"\\t.byte 31\\n\", file);\n+\t  /* Register for alloca automatic storage; this is always reg 31.\n+\t     Only emit this if the alloca bit was set above.  */\n+\t  if (frame_pointer_needed)\n+\t    fputs (\"\\t.byte 31\\n\", file);\n \n-      fputs (\"\\t.align 2\\n\", file);\n+\t  fputs (\"\\t.align 2\\n\", file);\n+\t}\n     }\n \n   /* Arrange to define .LCTOC1 label, if not already done.  */"}]}