{"sha": "c9b6494a2415efed8ad89952adc3640f54d87c3f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzliNjQ5NGEyNDE1ZWZlZDhhZDg5OTUyYWRjMzY0MGY1NGQ4N2MzZg==", "commit": {"author": {"name": "Zack Weinberg", "email": "zack@wolery.cumb.org", "date": "2000-08-02T22:03:53Z"}, "committer": {"name": "Zack Weinberg", "email": "zack@gcc.gnu.org", "date": "2000-08-02T22:03:53Z"}, "message": "* pexecute.c:  Don't use vfork.  Initialize 'pid' before retry loop.\n\nFrom-SVN: r35436", "tree": {"sha": "a86437b22a6ae8809536c2587df64ce5859255d4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a86437b22a6ae8809536c2587df64ce5859255d4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c9b6494a2415efed8ad89952adc3640f54d87c3f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c9b6494a2415efed8ad89952adc3640f54d87c3f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c9b6494a2415efed8ad89952adc3640f54d87c3f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c9b6494a2415efed8ad89952adc3640f54d87c3f/comments", "author": null, "committer": null, "parents": [{"sha": "f536cd95fb5cfbfa54809514fd89dc55d6b8e1a4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f536cd95fb5cfbfa54809514fd89dc55d6b8e1a4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f536cd95fb5cfbfa54809514fd89dc55d6b8e1a4"}], "stats": {"total": 29, "additions": 9, "deletions": 20}, "files": [{"sha": "95ea8113206404b6181a2286a7aebc5903314732", "filename": "libiberty/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c9b6494a2415efed8ad89952adc3640f54d87c3f/libiberty%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c9b6494a2415efed8ad89952adc3640f54d87c3f/libiberty%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libiberty%2FChangeLog?ref=c9b6494a2415efed8ad89952adc3640f54d87c3f", "patch": "@@ -1,3 +1,7 @@\n+2000-08-02  Zack Weinberg  <zack@wolery.cumb.org>\n+\n+\t* pexecute.c:  Don't use vfork.  Initialize 'pid' before retry loop.\n+\n 2000-07-26  Dave Pitts  <dpitts@cozx.com>\t\n \n \t* config/mh-openedition.h: Added -DLE370 definition."}, {"sha": "34d2deb298b12a15c8dbd1131e66e25fc7fa8ac2", "filename": "libiberty/pexecute.c", "status": "modified", "additions": 5, "deletions": 20, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c9b6494a2415efed8ad89952adc3640f54d87c3f/libiberty%2Fpexecute.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c9b6494a2415efed8ad89952adc3640f54d87c3f/libiberty%2Fpexecute.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libiberty%2Fpexecute.c?ref=c9b6494a2415efed8ad89952adc3640f54d87c3f", "patch": "@@ -46,19 +46,6 @@ extern int errno;\n #include <sys/wait.h>\n #endif\n \n-#ifdef vfork /* Autoconf may define this to fork for us. */\n-# define VFORK_STRING \"fork\"\n-#else\n-# define VFORK_STRING \"vfork\"\n-#endif\n-#ifdef HAVE_VFORK_H\n-#include <vfork.h>\n-#endif\n-#ifdef VMS\n-#define vfork() (decc$$alloc_vfork_blocks() >= 0 ? \\\n-               lib$get_current_invo_context(decc$$get_vfork_jmpbuf()) : -1)\n-#endif /* VMS */\n-\n #include \"libiberty.h\"\n \n /* stdin file number.  */\n@@ -714,9 +701,10 @@ pexecute (program, argv, this_pname, temp_base, errmsg_fmt, errmsg_arg, flags)\n \n   /* Fork a subprocess; wait and retry if it fails.  */\n   sleep_interval = 1;\n+  pid = -1;\n   for (retries = 0; retries < 4; retries++)\n     {\n-      pid = vfork ();\n+      pid = fork ();\n       if (pid >= 0)\n \tbreak;\n       sleep (sleep_interval);\n@@ -726,11 +714,9 @@ pexecute (program, argv, this_pname, temp_base, errmsg_fmt, errmsg_arg, flags)\n   switch (pid)\n     {\n     case -1:\n-      {\n-\t*errmsg_fmt = VFORK_STRING;\n-\t*errmsg_arg = NULL;\n-\treturn -1;\n-      }\n+      *errmsg_fmt = \"fork\";\n+      *errmsg_arg = NULL;\n+      return -1;\n \n     case 0: /* child */\n       /* Move the input and output pipes into place, if necessary.  */\n@@ -754,7 +740,6 @@ pexecute (program, argv, this_pname, temp_base, errmsg_fmt, errmsg_arg, flags)\n       /* Exec the program.  */\n       (*func) (program, argv);\n \n-      /* Note: Calling fprintf and exit here doesn't seem right for vfork.  */\n       fprintf (stderr, \"%s: \", this_pname);\n       fprintf (stderr, install_error_msg, program);\n       fprintf (stderr, \": %s\\n\", xstrerror (errno));"}]}