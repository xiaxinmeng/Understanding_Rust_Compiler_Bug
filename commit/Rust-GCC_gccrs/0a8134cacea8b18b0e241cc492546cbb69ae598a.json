{"sha": "0a8134cacea8b18b0e241cc492546cbb69ae598a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MGE4MTM0Y2FjZWE4YjE4YjBlMjQxY2M0OTI1NDZjYmI2OWFlNTk4YQ==", "commit": {"author": {"name": "Joseph Myers", "email": "joseph@codesourcery.com", "date": "2011-02-17T22:51:57Z"}, "committer": {"name": "Joseph Myers", "email": "jsm28@gcc.gnu.org", "date": "2011-02-17T22:51:57Z"}, "message": "common.opt (optimize_fast): New Variable.\n\n\t* common.opt (optimize_fast): New Variable.\n\t* opts.c (default_options_optimization): Use opts->x_optimize_fast\n\tinstead of local variable ofast.\n\nFrom-SVN: r170259", "tree": {"sha": "3594103b5994b233e0746fd86578ad34870164db", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3594103b5994b233e0746fd86578ad34870164db"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0a8134cacea8b18b0e241cc492546cbb69ae598a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0a8134cacea8b18b0e241cc492546cbb69ae598a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0a8134cacea8b18b0e241cc492546cbb69ae598a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0a8134cacea8b18b0e241cc492546cbb69ae598a/comments", "author": {"login": "jsm28", "id": 10537793, "node_id": "MDQ6VXNlcjEwNTM3Nzkz", "avatar_url": "https://avatars.githubusercontent.com/u/10537793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsm28", "html_url": "https://github.com/jsm28", "followers_url": "https://api.github.com/users/jsm28/followers", "following_url": "https://api.github.com/users/jsm28/following{/other_user}", "gists_url": "https://api.github.com/users/jsm28/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsm28/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsm28/subscriptions", "organizations_url": "https://api.github.com/users/jsm28/orgs", "repos_url": "https://api.github.com/users/jsm28/repos", "events_url": "https://api.github.com/users/jsm28/events{/privacy}", "received_events_url": "https://api.github.com/users/jsm28/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jsm28", "id": 10537793, "node_id": "MDQ6VXNlcjEwNTM3Nzkz", "avatar_url": "https://avatars.githubusercontent.com/u/10537793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsm28", "html_url": "https://github.com/jsm28", "followers_url": "https://api.github.com/users/jsm28/followers", "following_url": "https://api.github.com/users/jsm28/following{/other_user}", "gists_url": "https://api.github.com/users/jsm28/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsm28/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsm28/subscriptions", "organizations_url": "https://api.github.com/users/jsm28/orgs", "repos_url": "https://api.github.com/users/jsm28/repos", "events_url": "https://api.github.com/users/jsm28/events{/privacy}", "received_events_url": "https://api.github.com/users/jsm28/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0a2562409bc550c88c60cf3622802bb05483edb9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0a2562409bc550c88c60cf3622802bb05483edb9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0a2562409bc550c88c60cf3622802bb05483edb9"}], "stats": {"total": 24, "additions": 17, "deletions": 7}, "files": [{"sha": "8382f5091decd9a444844c826b6aa9a3d80c3927", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0a8134cacea8b18b0e241cc492546cbb69ae598a/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0a8134cacea8b18b0e241cc492546cbb69ae598a/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=0a8134cacea8b18b0e241cc492546cbb69ae598a", "patch": "@@ -1,3 +1,9 @@\n+2011-02-17  Joseph Myers  <joseph@codesourcery.com>\n+\n+\t* common.opt (optimize_fast): New Variable.\n+\t* opts.c (default_options_optimization): Use opts->x_optimize_fast\n+\tinstead of local variable ofast.\n+\n 2011-02-17  Nicola Pero  <nicola.pero@meta-innovation.com>\n \n \t* doc/invoke.texi (fobjc-abi-version): Documented."}, {"sha": "f95805c7f1e0d4fc58c1a8f1fe06c507749ba95e", "filename": "gcc/common.opt", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0a8134cacea8b18b0e241cc492546cbb69ae598a/gcc%2Fcommon.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0a8134cacea8b18b0e241cc492546cbb69ae598a/gcc%2Fcommon.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcommon.opt?ref=0a8134cacea8b18b0e241cc492546cbb69ae598a", "patch": "@@ -32,6 +32,11 @@ int optimize\n Variable\n int optimize_size\n \n+; Not used directly to control optimizations, only to save -Ofast\n+; setting for \"optimize\" attributes.\n+Variable\n+int optimize_fast\n+\n ; 0 means straightforward implementation of complex divide acceptable.\n ; 1 means wide ranges of inputs must work for complex divide.\n ; 2 means C99-like requirements for complex multiply and divide."}, {"sha": "9f93356539f5f37d07874f5326cc882e8b65f9ae", "filename": "gcc/opts.c", "status": "modified", "additions": 6, "deletions": 7, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0a8134cacea8b18b0e241cc492546cbb69ae598a/gcc%2Fopts.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0a8134cacea8b18b0e241cc492546cbb69ae598a/gcc%2Fopts.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fopts.c?ref=0a8134cacea8b18b0e241cc492546cbb69ae598a", "patch": "@@ -524,7 +524,6 @@ default_options_optimization (struct gcc_options *opts,\n {\n   unsigned int i;\n   int opt2;\n-  int ofast = 0;\n \n   /* Scan to see what optimization level has been specified.  That will\n      determine the default value of many flags.  */\n@@ -538,7 +537,7 @@ default_options_optimization (struct gcc_options *opts,\n \t    {\n \t      opts->x_optimize = 1;\n \t      opts->x_optimize_size = 0;\n-\t      ofast = 0;\n+\t      opts->x_optimize_fast = 0;\n \t    }\n \t  else\n \t    {\n@@ -553,7 +552,7 @@ default_options_optimization (struct gcc_options *opts,\n \t\t  if ((unsigned int) opts->x_optimize > 255)\n \t\t    opts->x_optimize = 255;\n \t\t  opts->x_optimize_size = 0;\n-\t\t  ofast = 0;\n+\t\t  opts->x_optimize_fast = 0;\n \t\t}\n \t    }\n \t  break;\n@@ -563,14 +562,14 @@ default_options_optimization (struct gcc_options *opts,\n \n \t  /* Optimizing for size forces optimize to be 2.  */\n \t  opts->x_optimize = 2;\n-\t  ofast = 0;\n+\t  opts->x_optimize_fast = 0;\n \t  break;\n \n \tcase OPT_Ofast:\n \t  /* -Ofast only adds flags to -O3.  */\n \t  opts->x_optimize_size = 0;\n \t  opts->x_optimize = 3;\n-\t  ofast = 1;\n+\t  opts->x_optimize_fast = 1;\n \t  break;\n \n \tdefault:\n@@ -581,7 +580,7 @@ default_options_optimization (struct gcc_options *opts,\n \n   maybe_default_options (opts, opts_set, default_options_table,\n \t\t\t opts->x_optimize, opts->x_optimize_size,\n-\t\t\t ofast, lang_mask, handlers, loc, dc);\n+\t\t\t opts->x_optimize_fast, lang_mask, handlers, loc, dc);\n \n   /* -O2 param settings.  */\n   opt2 = (opts->x_optimize >= 2);\n@@ -611,7 +610,7 @@ default_options_optimization (struct gcc_options *opts,\n   maybe_default_options (opts, opts_set,\n \t\t\t targetm.target_option.optimization_table,\n \t\t\t opts->x_optimize, opts->x_optimize_size,\n-\t\t\t ofast, lang_mask, handlers, loc, dc);\n+\t\t\t opts->x_optimize_fast, lang_mask, handlers, loc, dc);\n }\n \n /* After all options at LOC have been read into OPTS and OPTS_SET,"}]}