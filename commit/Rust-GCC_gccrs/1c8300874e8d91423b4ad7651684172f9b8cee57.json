{"sha": "1c8300874e8d91423b4ad7651684172f9b8cee57", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWM4MzAwODc0ZThkOTE0MjNiNGFkNzY1MTY4NDE3MmY5YjhjZWU1Nw==", "commit": {"author": {"name": "Marc Glisse", "email": "marc.glisse@inria.fr", "date": "2012-04-29T09:25:17Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2012-04-29T09:25:17Z"}, "message": "re PR libstdc++/22200 (numeric_limits<signed>::is_modulo is inconsistent with gcc)\n\n2012-04-29  Marc Glisse  <marc.glisse@inria.fr>\n\n\tPR libstdc++/22200\n    \t* include/std/limits (numeric_limits<>::is_modulo): False for\n    \tsigned types.\n\nFrom-SVN: r186944", "tree": {"sha": "c6b5dbb19a125bf76edbeb33a6bacb81af03e844", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c6b5dbb19a125bf76edbeb33a6bacb81af03e844"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1c8300874e8d91423b4ad7651684172f9b8cee57", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1c8300874e8d91423b4ad7651684172f9b8cee57", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1c8300874e8d91423b4ad7651684172f9b8cee57", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1c8300874e8d91423b4ad7651684172f9b8cee57/comments", "author": {"login": "mglisse", "id": 10097863, "node_id": "MDQ6VXNlcjEwMDk3ODYz", "avatar_url": "https://avatars.githubusercontent.com/u/10097863?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mglisse", "html_url": "https://github.com/mglisse", "followers_url": "https://api.github.com/users/mglisse/followers", "following_url": "https://api.github.com/users/mglisse/following{/other_user}", "gists_url": "https://api.github.com/users/mglisse/gists{/gist_id}", "starred_url": "https://api.github.com/users/mglisse/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mglisse/subscriptions", "organizations_url": "https://api.github.com/users/mglisse/orgs", "repos_url": "https://api.github.com/users/mglisse/repos", "events_url": "https://api.github.com/users/mglisse/events{/privacy}", "received_events_url": "https://api.github.com/users/mglisse/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "94ee697923f5a93881edbc5e1b3f810b290f0fc7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/94ee697923f5a93881edbc5e1b3f810b290f0fc7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/94ee697923f5a93881edbc5e1b3f810b290f0fc7"}], "stats": {"total": 42, "additions": 26, "deletions": 16}, "files": [{"sha": "b91668ae2382960ac7bdf4f4ced6ad2d308cff5e", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 9, "deletions": 2, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1c8300874e8d91423b4ad7651684172f9b8cee57/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1c8300874e8d91423b4ad7651684172f9b8cee57/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=1c8300874e8d91423b4ad7651684172f9b8cee57", "patch": "@@ -1,7 +1,14 @@\n+2012-04-29  Marc Glisse  <marc.glisse@inria.fr>\n+\n+\tPR libstdc++/22200\n+\t* include/std/limits (numeric_limits<>::is_modulo): False for\n+\tsigned types.\n+\n 2012-04-25  Benjamin Kosnik  <bkoz@redhat.com>\n \n-\t*  include/bits/hashtable.h: Adjust doxygen markup for base classes.\n-\t*  include/bits/hashtable_policy.h: Same.\n+\t* include/bits/hashtable.h: Adjust doxygen markup for base\n+\tclasses.\n+\t* include/bits/hashtable_policy.h: Same.\n \n 2012-04-25  Benjamin Kosnik  <bkoz@redhat.com>\n "}, {"sha": "aff853b820812d10751ecc44ca3df6efaa4a6587", "filename": "libstdc++-v3/include/std/limits", "status": "modified", "additions": 17, "deletions": 14, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1c8300874e8d91423b4ad7651684172f9b8cee57/libstdc%2B%2B-v3%2Finclude%2Fstd%2Flimits", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1c8300874e8d91423b4ad7651684172f9b8cee57/libstdc%2B%2B-v3%2Finclude%2Fstd%2Flimits", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Flimits?ref=1c8300874e8d91423b4ad7651684172f9b8cee57", "patch": "@@ -270,10 +270,13 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \tfalse for arbitrary precision types.</em> [18.2.1.2]/54  */\n     static _GLIBCXX_USE_CONSTEXPR bool is_bounded = false;\n \n-    /** True if the type is @e modulo, that is, if it is possible to add two\n-\tpositive numbers and have a result that wraps around to a third number\n-\tthat is less.  Typically false for floating types, true for unsigned\n-\tintegers, and true for signed integers.  */\n+    /** True if the type is @e modulo. A type is modulo if, for any\n+\toperation involving +, -, or * on values of that type whose\n+\tresult would fall outside the range [min(),max()], the value\n+\treturned differs from the true value by an integer multiple of\n+\tmax() - min() + 1. On most machines, this is false for floating\n+\ttypes, true for unsigned integers, and true for signed integers.\n+\tSee PR22200 about signed integers.  */\n     static _GLIBCXX_USE_CONSTEXPR bool is_modulo = false;\n \n     /** True if trapping is implemented for this type.  */\n@@ -494,7 +497,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \n       static _GLIBCXX_USE_CONSTEXPR bool is_iec559 = false;\n       static _GLIBCXX_USE_CONSTEXPR bool is_bounded = true;\n-      static _GLIBCXX_USE_CONSTEXPR bool is_modulo = true;\n+      static _GLIBCXX_USE_CONSTEXPR bool is_modulo = !is_signed;\n \n       static _GLIBCXX_USE_CONSTEXPR bool traps = __glibcxx_integral_traps;\n       static _GLIBCXX_USE_CONSTEXPR bool tinyness_before = false;\n@@ -564,7 +567,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \n       static _GLIBCXX_USE_CONSTEXPR bool is_iec559 = false;\n       static _GLIBCXX_USE_CONSTEXPR bool is_bounded = true;\n-      static _GLIBCXX_USE_CONSTEXPR bool is_modulo = true;\n+      static _GLIBCXX_USE_CONSTEXPR bool is_modulo = false;\n \n       static _GLIBCXX_USE_CONSTEXPR bool traps = __glibcxx_integral_traps;\n       static _GLIBCXX_USE_CONSTEXPR bool tinyness_before = false;\n@@ -705,7 +708,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \n       static _GLIBCXX_USE_CONSTEXPR bool is_iec559 = false;\n       static _GLIBCXX_USE_CONSTEXPR bool is_bounded = true;\n-      static _GLIBCXX_USE_CONSTEXPR bool is_modulo = true;\n+      static _GLIBCXX_USE_CONSTEXPR bool is_modulo = !is_signed;\n \n       static _GLIBCXX_USE_CONSTEXPR bool traps = __glibcxx_integral_traps;\n       static _GLIBCXX_USE_CONSTEXPR bool tinyness_before = false;\n@@ -768,7 +771,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \n       static constexpr bool is_iec559 = false;\n       static constexpr bool is_bounded = true;\n-      static constexpr bool is_modulo = true;\n+      static constexpr bool is_modulo = !is_signed;\n \n       static constexpr bool traps = __glibcxx_integral_traps;\n       static constexpr bool tinyness_before = false;\n@@ -829,7 +832,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \n       static constexpr bool is_iec559 = false;\n       static constexpr bool is_bounded = true;\n-      static constexpr bool is_modulo = true;\n+      static constexpr bool is_modulo = !is_signed;\n \n       static constexpr bool traps = __glibcxx_integral_traps;\n       static constexpr bool tinyness_before = false;\n@@ -896,7 +899,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \n       static _GLIBCXX_USE_CONSTEXPR bool is_iec559 = false;\n       static _GLIBCXX_USE_CONSTEXPR bool is_bounded = true;\n-      static _GLIBCXX_USE_CONSTEXPR bool is_modulo = true;\n+      static _GLIBCXX_USE_CONSTEXPR bool is_modulo = false;\n \n       static _GLIBCXX_USE_CONSTEXPR bool traps = __glibcxx_integral_traps;\n       static _GLIBCXX_USE_CONSTEXPR bool tinyness_before = false;\n@@ -1036,7 +1039,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \n       static _GLIBCXX_USE_CONSTEXPR bool is_iec559 = false;\n       static _GLIBCXX_USE_CONSTEXPR bool is_bounded = true;\n-      static _GLIBCXX_USE_CONSTEXPR bool is_modulo = true;\n+      static _GLIBCXX_USE_CONSTEXPR bool is_modulo = false;\n \n       static _GLIBCXX_USE_CONSTEXPR bool traps = __glibcxx_integral_traps;\n       static _GLIBCXX_USE_CONSTEXPR bool tinyness_before = false;\n@@ -1175,7 +1178,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \n       static _GLIBCXX_USE_CONSTEXPR bool is_iec559 = false;\n       static _GLIBCXX_USE_CONSTEXPR bool is_bounded = true;\n-      static _GLIBCXX_USE_CONSTEXPR bool is_modulo = true;\n+      static _GLIBCXX_USE_CONSTEXPR bool is_modulo = false;\n \n       static _GLIBCXX_USE_CONSTEXPR bool traps = __glibcxx_integral_traps;\n       static _GLIBCXX_USE_CONSTEXPR bool tinyness_before = false;\n@@ -1318,7 +1321,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \n       static _GLIBCXX_USE_CONSTEXPR bool is_iec559 = false;\n       static _GLIBCXX_USE_CONSTEXPR bool is_bounded = true;\n-      static _GLIBCXX_USE_CONSTEXPR bool is_modulo = true;\n+      static _GLIBCXX_USE_CONSTEXPR bool is_modulo = false;\n \n       static _GLIBCXX_USE_CONSTEXPR bool traps = __glibcxx_integral_traps;\n       static _GLIBCXX_USE_CONSTEXPR bool tinyness_before = false;\n@@ -1465,7 +1468,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \n       static _GLIBCXX_USE_CONSTEXPR bool is_iec559 = false;\n       static _GLIBCXX_USE_CONSTEXPR bool is_bounded = true;\n-      static _GLIBCXX_USE_CONSTEXPR bool is_modulo = true;\n+      static _GLIBCXX_USE_CONSTEXPR bool is_modulo = false;\n \n       static _GLIBCXX_USE_CONSTEXPR bool traps\n        = __glibcxx_integral_traps;"}]}