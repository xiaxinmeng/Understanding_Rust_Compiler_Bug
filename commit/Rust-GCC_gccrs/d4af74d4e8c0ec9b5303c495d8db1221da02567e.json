{"sha": "d4af74d4e8c0ec9b5303c495d8db1221da02567e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDRhZjc0ZDRlOGMwZWM5YjUzMDNjNDk1ZDhkYjEyMjFkYTAyNTY3ZQ==", "commit": {"author": {"name": "Tobias Burnus", "email": "burnus@net-b.de", "date": "2013-10-27T07:40:31Z"}, "committer": {"name": "Tobias Burnus", "email": "burnus@gcc.gnu.org", "date": "2013-10-27T07:40:31Z"}, "message": "re PR other/33426 (Support of #pragma ivdep)\n\n2013-10-27  Tobias Burnus  <burnus@net-b.de>\n\ngcc/c/\n        PR other/33426\n        * c-parser.c (c_parser_while_statement,\n        * c_parser_while_statement,\n        c_parser_pragma): Add GCC ivdep support to 'do' and 'while'.\n        (c_parser_statement_after_labels): Update calls.\n\ngcc/testsuite/\n        PR other/33426\n        * gcc.dg/vect/vect-ivdep-2.c: New.\n\nFrom-SVN: r204102", "tree": {"sha": "4664d6b8678b602e68c561dc4b261c11351daba7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4664d6b8678b602e68c561dc4b261c11351daba7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d4af74d4e8c0ec9b5303c495d8db1221da02567e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d4af74d4e8c0ec9b5303c495d8db1221da02567e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d4af74d4e8c0ec9b5303c495d8db1221da02567e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d4af74d4e8c0ec9b5303c495d8db1221da02567e/comments", "author": {"login": "tob2", "id": 264461, "node_id": "MDQ6VXNlcjI2NDQ2MQ==", "avatar_url": "https://avatars.githubusercontent.com/u/264461?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tob2", "html_url": "https://github.com/tob2", "followers_url": "https://api.github.com/users/tob2/followers", "following_url": "https://api.github.com/users/tob2/following{/other_user}", "gists_url": "https://api.github.com/users/tob2/gists{/gist_id}", "starred_url": "https://api.github.com/users/tob2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tob2/subscriptions", "organizations_url": "https://api.github.com/users/tob2/orgs", "repos_url": "https://api.github.com/users/tob2/repos", "events_url": "https://api.github.com/users/tob2/events{/privacy}", "received_events_url": "https://api.github.com/users/tob2/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "f32311532c085f47de9f75c618ac73fd0e8a638a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f32311532c085f47de9f75c618ac73fd0e8a638a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f32311532c085f47de9f75c618ac73fd0e8a638a"}], "stats": {"total": 82, "additions": 72, "deletions": 10}, "files": [{"sha": "707c5d225a3ae4b4549bf7bceaf9f254036eba1c", "filename": "gcc/c/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d4af74d4e8c0ec9b5303c495d8db1221da02567e/gcc%2Fc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d4af74d4e8c0ec9b5303c495d8db1221da02567e/gcc%2Fc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc%2FChangeLog?ref=d4af74d4e8c0ec9b5303c495d8db1221da02567e", "patch": "@@ -1,3 +1,10 @@\n+2013-10-27  Tobias Burnus  <burnus@net-b.de>\n+\n+\tPR other/33426\n+\t* c-parser.c (c_parser_while_statement, c_parser_while_statement,\n+\tc_parser_pragma): Add GCC ivdep support to 'do' and 'while'.\n+\t(c_parser_statement_after_labels): Update calls.\n+\n 2013-10-24  Tobias Burnus  <burnus@net-b.de>\n \n \tPR other/33426"}, {"sha": "9ccae3bccc6a0d1359cd68d8fa0e043993a39e5f", "filename": "gcc/c/c-parser.c", "status": "modified", "additions": 25, "deletions": 10, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d4af74d4e8c0ec9b5303c495d8db1221da02567e/gcc%2Fc%2Fc-parser.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d4af74d4e8c0ec9b5303c495d8db1221da02567e/gcc%2Fc%2Fc-parser.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc%2Fc-parser.c?ref=d4af74d4e8c0ec9b5303c495d8db1221da02567e", "patch": "@@ -1157,8 +1157,8 @@ static void c_parser_statement (c_parser *);\n static void c_parser_statement_after_labels (c_parser *);\n static void c_parser_if_statement (c_parser *);\n static void c_parser_switch_statement (c_parser *);\n-static void c_parser_while_statement (c_parser *);\n-static void c_parser_do_statement (c_parser *);\n+static void c_parser_while_statement (c_parser *, bool);\n+static void c_parser_do_statement (c_parser *, bool);\n static void c_parser_for_statement (c_parser *, bool);\n static tree c_parser_asm_statement (c_parser *);\n static tree c_parser_asm_operands (c_parser *);\n@@ -4579,10 +4579,10 @@ c_parser_statement_after_labels (c_parser *parser)\n \t  c_parser_switch_statement (parser);\n \t  break;\n \tcase RID_WHILE:\n-\t  c_parser_while_statement (parser);\n+\t  c_parser_while_statement (parser, false);\n \t  break;\n \tcase RID_DO:\n-\t  c_parser_do_statement (parser);\n+\t  c_parser_do_statement (parser, false);\n \t  break;\n \tcase RID_FOR:\n \t  c_parser_for_statement (parser, false);\n@@ -4912,7 +4912,7 @@ c_parser_switch_statement (c_parser *parser)\n */\n \n static void\n-c_parser_while_statement (c_parser *parser)\n+c_parser_while_statement (c_parser *parser, bool ivdep)\n {\n   tree block, cond, body, save_break, save_cont;\n   location_t loc;\n@@ -4927,6 +4927,11 @@ c_parser_while_statement (c_parser *parser)\n \t\t\"statement\");\n       cond = error_mark_node;\n     }\n+\n+  if (ivdep && cond != error_mark_node)\n+    cond = build2 (ANNOTATE_EXPR, TREE_TYPE (cond), cond,\n+\t\t   build_int_cst (integer_type_node,\n+\t\t   annot_expr_ivdep_kind));\n   save_break = c_break_label;\n   c_break_label = NULL_TREE;\n   save_cont = c_cont_label;\n@@ -4945,7 +4950,7 @@ c_parser_while_statement (c_parser *parser)\n */\n \n static void\n-c_parser_do_statement (c_parser *parser)\n+c_parser_do_statement (c_parser *parser, bool ivdep)\n {\n   tree block, cond, body, save_break, save_cont, new_break, new_cont;\n   location_t loc;\n@@ -4974,7 +4979,10 @@ c_parser_do_statement (c_parser *parser)\n \t\t\"do-while statement\");\n       cond = error_mark_node;\n     }\n-\n+  if (ivdep && cond != error_mark_node)\n+    cond = build2 (ANNOTATE_EXPR, TREE_TYPE (cond), cond,\n+\t\t   build_int_cst (integer_type_node,\n+\t\t   annot_expr_ivdep_kind));\n   if (!c_parser_require (parser, CPP_SEMICOLON, \"expected %<;%>\"))\n     c_parser_skip_to_end_of_block_or_statement (parser);\n   c_finish_loop (loc, cond, NULL, body, new_break, new_cont, false);\n@@ -9102,12 +9110,19 @@ c_parser_pragma (c_parser *parser, enum pragma_context context)\n     case PRAGMA_IVDEP:\n       c_parser_consume_pragma (parser);\n       c_parser_skip_to_pragma_eol (parser);\n-      if (!c_parser_next_token_is_keyword (parser, RID_FOR))\n+      if (!c_parser_next_token_is_keyword (parser, RID_FOR)\n+\t  && !c_parser_next_token_is_keyword (parser, RID_WHILE)\n+\t  && !c_parser_next_token_is_keyword (parser, RID_DO))\n \t{\n-\t  c_parser_error (parser, \"for statement expected\");\n+\t  c_parser_error (parser, \"for, while or do statement expected\");\n \t  return false;\n \t}\n-      c_parser_for_statement (parser, true);\n+      if (c_parser_next_token_is_keyword (parser, RID_FOR))\n+\tc_parser_for_statement (parser, true);\n+      else if (c_parser_next_token_is_keyword (parser, RID_WHILE))\n+\tc_parser_while_statement (parser, true);\n+      else\n+\tc_parser_do_statement (parser, true);\n       return false;\n \n     case PRAGMA_GCC_PCH_PREPROCESS:"}, {"sha": "fa2eb7d51cb6c94b39a925ca0ffd7a9c26ea732f", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d4af74d4e8c0ec9b5303c495d8db1221da02567e/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d4af74d4e8c0ec9b5303c495d8db1221da02567e/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=d4af74d4e8c0ec9b5303c495d8db1221da02567e", "patch": "@@ -1,3 +1,8 @@\n+2013-10-27  Tobias Burnus  <burnus@net-b.de>\n+\n+\tPR other/33426\n+\t* gcc.dg/vect/vect-ivdep-2.c: New.\n+\n 2013-10-26  Oleg Endo  <olegendo@gcc.gnu.org>\n \n \tPR target/52483"}, {"sha": "ff9cb20ccb1826229f00fd3559c77f6b46bb93ba", "filename": "gcc/testsuite/gcc.dg/vect/vect-ivdep-2.c", "status": "added", "additions": 35, "deletions": 0, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d4af74d4e8c0ec9b5303c495d8db1221da02567e/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-ivdep-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d4af74d4e8c0ec9b5303c495d8db1221da02567e/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-ivdep-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-ivdep-2.c?ref=d4af74d4e8c0ec9b5303c495d8db1221da02567e", "patch": "@@ -0,0 +1,35 @@\n+/* { dg-do compile } */\n+/* { dg-require-effective-target vect_float } */\n+/* { dg-additional-options \"-O3 -fopt-info-vec-optimized\" } */\n+\n+/* PR other/33426 */\n+/* Testing whether #pragma ivdep is working.  */\n+\n+void foo(int n, int *a, int *b, int *c) {\n+  int i;\n+ i = 0;\n+#pragma GCC ivdep\n+  while(i < n)\n+    {\n+      a[i] = b[i] + c[i];\n+      ++i;\n+    }\n+}\n+\n+void bar(int n, int *a, int *b, int *c) {\n+  int i;\n+ i = 0;\n+#pragma GCC ivdep\n+  do\n+    {\n+      a[i] = b[i] + c[i];\n+      ++i;\n+    }\n+  while(i < n);\n+}\n+\n+\n+/* { dg-message \"loop vectorized\" \"\" { target *-*-* } 0 } */\n+/* { dg-bogus \" version\" \"\" { target *-*-* } 0 } */\n+/* { dg-bogus \" alias\" \"\" { target *-*-* } 0 } */\n+/* { dg-final { cleanup-tree-dump \"vect\" } } */"}]}