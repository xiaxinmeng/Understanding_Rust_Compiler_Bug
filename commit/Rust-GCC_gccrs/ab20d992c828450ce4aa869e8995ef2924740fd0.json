{"sha": "ab20d992c828450ce4aa869e8995ef2924740fd0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWIyMGQ5OTJjODI4NDUwY2U0YWE4NjllODk5NWVmMjkyNDc0MGZkMA==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2019-08-10T09:59:17Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2019-08-10T09:59:17Z"}, "message": "Assorted ChangeLog cleanups.\n\nFrom-SVN: r274250", "tree": {"sha": "ea9583c50cb1f8136d60635217dcde7e4e73a6f7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ea9583c50cb1f8136d60635217dcde7e4e73a6f7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ab20d992c828450ce4aa869e8995ef2924740fd0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ab20d992c828450ce4aa869e8995ef2924740fd0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ab20d992c828450ce4aa869e8995ef2924740fd0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ab20d992c828450ce4aa869e8995ef2924740fd0/comments", "author": null, "committer": null, "parents": [{"sha": "740392538848e2c1b4535f3b6fc7e018930c0a64", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/740392538848e2c1b4535f3b6fc7e018930c0a64", "html_url": "https://github.com/Rust-GCC/gccrs/commit/740392538848e2c1b4535f3b6fc7e018930c0a64"}], "stats": {"total": 1303, "additions": 661, "deletions": 642}, "files": [{"sha": "350483acf667c6d4fb47320f03a8dc965f97bae7", "filename": "gcc/ChangeLog", "status": "modified", "additions": 63, "deletions": 104, "changes": 167, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab20d992c828450ce4aa869e8995ef2924740fd0/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab20d992c828450ce4aa869e8995ef2924740fd0/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=ab20d992c828450ce4aa869e8995ef2924740fd0", "patch": "@@ -11,7 +11,7 @@\n \n 2019-08-09  Richard Earnshaw  <rearnsha@arm.com>\n \n-\t*config/arm/arm.md (addsi3_compare_op1): Add 16-bit thumb-2 variants.\n+\t* config/arm/arm.md (addsi3_compare_op1): Add 16-bit thumb-2 variants.\n \t(addsi3_compare_op2): Likewise.\n \n 2019-08-09  Martin Liska  <mliska@suse.cz>\n@@ -54,7 +54,7 @@\n \t(gimple_ic_transform): Likewise.\n \t(gimple_stringops_transform): Likewise.\n \n-2019-08-08  Mihailo Stojanovic <mistojanovic@wavecomp.com>\n+2019-08-08  Mihailo Stojanovic  <mistojanovic@wavecomp.com>\n \n \t* doc/extend.texi: Add const qualifier to ld intrinsics.\n \n@@ -326,7 +326,7 @@\n \n 2019-08-07  Kito Cheng  <kito.cheng@sifive.com>\n \n-\t* gcc/config/riscv/multilib-generator: (canonical_order): Add 'g'.\n+\t* config/riscv/multilib-generator: (canonical_order): Add 'g'.\n \t(arch_canonicalize): Support rv32g and rv64g and fix error\n \thandling.\n \n@@ -363,7 +363,7 @@\n \n 2019-08-06  Kito Cheng  <kito.cheng@sifive.com>\n \n-\t* gcc/config/riscv/multilib-generator: (canonical_order): New.\n+\t* config/riscv/multilib-generator: (canonical_order): New.\n \t(arch_canonicalize): Dito.\n \tApply arch_canonicalize for alts.\n \n@@ -656,9 +656,9 @@\n \tof reduction stmts.\n \n 2019-07-31  Matt Thomas  <matt@3am-software.com>\n-\t    Nick Hudson <nick@nthcliff.demon.co.uk>\n-\t    Matthew Green <mrg@eterna.com.au>\n-\t    Maya Rashish <coypu@sdf.org>\n+\t    Nick Hudson  <nick@nthcliff.demon.co.uk>\n+\t    Matthew Green  <mrg@eterna.com.au>\n+\t    Maya Rashish  <coypu@sdf.org>\n \n \t* config.gcc (hppa*-*-netbsd*): New target.\n \t* config/pa/pa-netbsd.h: New file.\n@@ -1045,7 +1045,7 @@\n \n 2019-07-28  Alan Modra  <amodra@gmail.com>\n \n-\t* gcc/config/rs6000/rs6000-call.c (rs6000_output_mi_thunk): Use\n+\t* config/rs6000/rs6000-call.c (rs6000_output_mi_thunk): Use\n \tgen_sibcall.\n \n 2019-07-28  Alan Modra  <amodra@gmail.com>\n@@ -1326,7 +1326,7 @@\n \n 2019-07-24  Giuliano Belinassi  <giuliano.belinassi@usp.br>\n \n-\t* cgraphunit.c (symbol_table::compile): Start and stop \n+\t* cgraphunit.c (symbol_table::compile): Start and stop\n \tTV_CGRAPH_IPA_PASSES and TV_CGRAPH_FUNC_EXPANSION timers.\n \t* timevar.def (TV_CGRAPH_IPA_PASSES, TV_CGRAPH_FUNC_EXPANSION): New.\n \n@@ -1468,11 +1468,11 @@\n \tarch case.\n \t* config/i386/darwin32-biarch.h: New.\n \t* config/i386/darwin64.h: Rename.\n-\t* gcc/config/i386/darwin64-biarch.h: To this.\n+\t* config/i386/darwin64-biarch.h: To this.\n \t* config/i386/t-darwin: Rename.\n-\t* gcc/config/i386/t-darwin32-biarch: To this.\n+\t* config/i386/t-darwin32-biarch: To this.\n \t* config/i386/t-darwin64: Rename.\n-\t* gcc/config/i386/t-darwin64-biarch: To this.\n+\t* config/i386/t-darwin64-biarch: To this.\n \t* config/rs6000/darwin32-biarch.h: New.\n \t* config/rs6000/darwin64.h: Rename.\n \t* config/rs6000/darwin64-biarch.h: To this.\n@@ -1487,12 +1487,12 @@\n \n \t* configure.ac (ACX_PROG_CXX_WARNING_OPTS): Revert r273311.\n \n-2019-07-23  Vladislav Ivanishin <vlad@ispras.ru>\n+2019-07-23  Vladislav Ivanishin  <vlad@ispras.ru>\n \n \t* gdbinit.in (reload-gdbhooks): New command with an attached doc string.\n \t(rh): New alias for it.\n \n-2019-07-23  Vladislav Ivanishin <vlad@ispras.ru>\n+2019-07-23  Vladislav Ivanishin  <vlad@ispras.ru>\n \n \t* gdbhooks.py: Pass replace=True to\n \tgdb.printing.register_pretty_printer.\n@@ -1679,7 +1679,7 @@\n \tPR target/90363\n \t* config/or1k/or1k.md (zero_extend<mode>si2): Update predicate.\n \t(extend<mode>si2): Update predicate.\n-\t* gcc/config/or1k/predicates.md (volatile_mem_operand): New.\n+\t* config/or1k/predicates.md (volatile_mem_operand): New.\n \t(reg_or_mem_operand): New.\n \n 2019-07-21  Iain Sandoe  <iain@sandoe.co.uk>\n@@ -2016,17 +2016,16 @@\n \n 2019-07-18  Sylvia Taylor  <sylvia.taylor@arm.com>\n \n-        PR target/90317\n-        * config/arm/arm_neon.h\n-        (vsha1h_u32): Refactor.\n-        (vsha1cq_u32): Likewise.\n-        (vsha1pq_u32): Likewise.\n-        (vsha1mq_u32): Likewise.\n-        * config/arm/crypto.md:\n-        (crypto_sha1h): Remove zero extend, correct vec select.\n-        (crypto_sha1c): Correct vec select.\n-        (crypto_sha1m): Likewise.\n-        (crypto_sha1p): Likewise.\n+\tPR target/90317\n+\t* config/arm/arm_neon.h (vsha1h_u32): Refactor.\n+\t(vsha1cq_u32): Likewise.\n+\t(vsha1pq_u32): Likewise.\n+\t(vsha1mq_u32): Likewise.\n+\t* config/arm/crypto.md (crypto_sha1h): Remove zero extend, correct\n+\tvec select.\n+\t(crypto_sha1c): Correct vec select.\n+\t(crypto_sha1m): Likewise.\n+\t(crypto_sha1p): Likewise.\n \n 2019-07-18  Richard Earnshaw  <rearnsha@arm.com>\n \n@@ -2071,7 +2070,7 @@\n \t* tree-ssa-sccvn.c (vn_walk_cb_data::push_partial_def): Refactor\n \tbranches to make code less indented.\n \n-2019-07-17  Alexandre Oliva <oliva@adacore.com>\n+2019-07-17  Alexandre Oliva  <oliva@adacore.com>\n \n \tPR middle-end/81824\n \t* attribs.c (decls_mismatched_attributes): Simplify the logic\n@@ -2085,7 +2084,7 @@\n \t(pa_reloc_rw_mask): Return 3 when generating PIC code and when\n \tgenerating code for SOM targets earlier than HP-UX 11.  Otherwise,\n \treturn 2 for SOM and 0 for other targets.\n-\t \n+\n 2019-07-17  Jeff Law  <law@redhat.com>\n \n \t* tree-ssa-dse.c (initialize_ao_ref_for_dse): Fix formatting.\n@@ -2327,7 +2326,7 @@\n \t(*test<mode>_1): Use nonmemory_szext_operand mode attribute\n \tinstead of genera_operand mode attribute.\n \n-2019-07-14  Vladislav Ivanishin <vlad@ispras.ru>\n+2019-07-14  Vladislav Ivanishin  <vlad@ispras.ru>\n \n \t* gdbhooks.py (DumpFn.invoke): Add explicit casts of return values of\n \tfopen and fclose to their respective types.\n@@ -2433,7 +2432,7 @@\n \t* tree-vect-slp.c (vect_build_slp_tree_2): Fix reduction\n \tchain check.\n \n-2019-07-12  Alexandre Oliva <oliva@adacore.com>\n+2019-07-12  Alexandre Oliva  <oliva@adacore.com>\n \n \t* tree-eh.c (honor_protect_cleanup_actions): Use outer_\n \trather than this_state as the lowering context for the ELSE\n@@ -2503,7 +2502,7 @@\n \n 2019-07-12  Kewen Lin  <linkw@gcc.gnu.org>\n \n-\t* gcc/cfgrtl.c (print_rtl_with_bb): Emit a hint if the\n+\t* cfgrtl.c (print_rtl_with_bb): Emit a hint if the\n \tfallthrough target of current basic block isn't the placed\n \tright next.\n \n@@ -4453,18 +4452,11 @@\n \t* config/s390/subst.md: Remove addr_style_op and masked_op substs.\n \t* config/s390/vector.md: Use new predicate.\n \n-2019-07-08  Joern Rennecke  <joern.rennecke@riscy-ip.com>\n-\n-\tAvoid clash with system header declaration.\n-\t* testsuite/gcc.dg/vect/slp-reduc-sad.c (uint32_t):\n-\tRemove unused declaration.\n-\n 2019-07-08  Andrew Waterman  <andrew@sifive.com>\n \t    Jim Wilson  <jimw@sifive.com>\n \n \t* config/riscv/riscv.md (lshrsi3_zero_extend_3+1): Use operands[1]\n \tbitsize\tinstead of BITS_PER_WORD.\n-\tgcc/testsuite/\n \n 2019-07-08  Martin Liska  <mliska@suse.cz>\n \n@@ -4593,7 +4585,7 @@\n \t* config/arm/sync.md\n \t(@atomic_compare_and_swap<CCSI:arch><NARROW:mode>_1): Use\n \t<NARROW:sync_predtab> instead of (implicitly) <CCSI:sync_predtab>.\n-\t(@atomic_compare_and_swap<CCSI:arch><SIDI:mode>_1): Likewise\n+\t(@atomic_compare_and_swap<CCSI:arch><SIDI:mode>_1): Likewise.\n \t<SIDI:sync_predtab>.  Use <SIDI:cas_cmp_operand> and\n \t<SIDI:cas_cmp_str>.\n \n@@ -4724,7 +4716,7 @@\n \tSupport __builtin_expect_with_probability for analysis\n \tof # of loop iterations.\n \n-2019-07-04  Alexandre Oliva <oliva@adacore.com>\n+2019-07-04  Alexandre Oliva  <oliva@adacore.com>\n \n \t* doc/generic.texi (Cleanups): Document EH_ELSE_EXPR.\n \t* except.c: Likewise.\n@@ -4892,7 +4884,6 @@\n \t(output_addr_table): Add DWARF5 table header generation here after\n \tchecking there are actually any addresses from...\n \t(dwarf2out_finish): ...here.\n-\t* testsuite/g++.dg/pr90981.C: New test.\n \n 2019-07-03  Richard Biener  <rguenther@suse.de>\n \n@@ -5092,12 +5083,6 @@\n \tconditional lastprivate clause(s), emit GOMP_loop_end_nowait call\n \tat the end.\n \n-2019-07-02  Joern Rennecke  <joern.rennecke@riscy-ip.com>\n-\n-\tPR testsuite/91065\n-\t* testsuite/gcc.dg/plugin/start_unit_plugin.c: Register a root tab\n-\tto reference fake_var.\n-\n 2019-07-02  qing zhao  <qing.zhao@oracle.com>\n \n \tPR preprocessor/90581\n@@ -5171,7 +5156,7 @@\n \tnonoverlapping_component_refs_since_match_p_may_alias,\n \tnonoverlapping_component_refs_since_match_p_no_alias.\n \t(dump_alias_stats): Update dumping.\n-\t(aliasing_matching_component_refs_p):  Break out from ...;\n+\t(aliasing_matching_component_refs_p): Break out from ...;\n \tdispatch to nonoverlapping_component_refs_for_decl_p\n \tand nonoverlapping_component_refs_since_match_p.\n \t(aliasing_component_refs_p): ... here; call\n@@ -5211,7 +5196,6 @@\n \tPR middle-end/66726\n \t* tree-ssa-phiopt.c (factor_out_conditional_conversion):\n \tTune heuristic from PR71016 to allow MIN / MAX.\n-\t* testsuite/gcc.dg/tree-ssa/pr66726-4.c: New testcase.\n \n 2019-07-01  Segher Boessenkool  <segher@kernel.crashing.org>\n \n@@ -5371,7 +5355,7 @@\n \targument.\n \t(free_page): Likewise.\n \n-2019-07-01  Vladislav Ivanishin <vlad@ispras.ru>\n+2019-07-01  Vladislav Ivanishin  <vlad@ispras.ru>\n \n \t* gdbhooks.py (GdbPrettyPrinters.add_printer_for_types): Reorder\n \tparameter names to match usage (no functional change).\n@@ -5445,7 +5429,7 @@\n \n 2019-06-28   Michael Meissner  <meissner@linux.ibm.com>\n \n-\t* config/rs6000/predicates.md (pcrel_address):  Use\n+\t* config/rs6000/predicates.md (pcrel_address): Use\n \tSYMBOL_REF_LOCAL_P to determine if a label is local.\n \t(pcrel_external_address): New predicate.\n \t(non_prefixed_mem_operand): Delete, predicate not used.\n@@ -5538,7 +5522,7 @@\n \t* config/rs6000/rs6000.c (darwin_rs6000_override_options): Do not\n \tuse longcall for 64b code.\n \n-2019-06-27  Aaron Sawdey <acsawdey@linux.ibm.com>\n+2019-06-27  Aaron Sawdey  <acsawdey@linux.ibm.com>\n \n \t* builtins.c (get_memory_rtx): Fix comment.\n \t* optabs.def (movmem_optab): Change to cpymem_optab.\n@@ -5743,7 +5727,7 @@\n \n \t* tree-ssa-sccvn.c (vn_reference_lookup_3): Encode valueized RHS.\n \n-2019-06-27  Jun Ma <JunMa@linux.alibaba.com>\n+2019-06-27  Jun Ma  <JunMa@linux.alibaba.com>\n \n \tPR tree-optimization/89772\n \t* gimple-fold.c (gimple_fold_builtin_memchr): consider trailing nuls in\n@@ -5765,7 +5749,7 @@\n 2019-06-27  Kewen Lin  <linkw@gcc.gnu.org>\n \n \tPR target/62147\n-\t* gcc/loop-iv.c (find_simple_exit): Call finite_loop_p to update\n+\t* loop-iv.c (find_simple_exit): Call finite_loop_p to update\n \tfiniteness.\n \n 2019-06-26  Jeff Law  <law@redhat.com>\n@@ -6062,28 +6046,15 @@\n \n 2019-06-25  Jozef Lawrynowicz  <jozef.l@mittosystems.com>\n \n-\t* gcc/c-family/c-common.c (c_common_nodes_and_builtins): Define\n-\talternate \"__intN__\" name for \"__intN\" types.\n-\t* gcc/c/c-parser.c (c_parse_init): Create keyword for \"__intN__\" type.\n-\t* gcc/cp/lex.c (init_reswords): Likewise.\n-\t* gcc/config/msp430/msp430.h: Use __int20__ for SIZE_TYPE and\n+\t* config/msp430/msp430.h: Use __int20__ for SIZE_TYPE and\n \tPTRDIFF_TYPE.\n-\t* gcc/cp/cp-tree.h (cp_decl_specifier_seq): New bitfield \"int_n_alt\".\n-\t* gcc/c/c-decl.c (declspecs_add_type): Don't pedwarn about \"__intN\" ISO\n-\tC incompatibility if alternate \"__intN__\" form is used.\n-\t* gcc/cp/decl.c (grokdeclarator): Likewise.\n-\t* gcc/cp/parser.c (cp_parser_simple_type_specifier): Set\n-\tdecl_specs->int_n_alt if \"__intN__\" form is used.\n-\t* gcc/gimple-ssa-sprintf.c (build_intmax_type_nodes): Accept \"__intN__\"\n+\t* gimple-ssa-sprintf.c (build_intmax_type_nodes): Accept \"__intN__\"\n \tformat of \"__intN\" types for UINTMAX_TYPE.\n-\t* gcc/brig/brig-lang.c (brig_build_c_type_nodes): Accept \"__intN__\"\n-\tformat of \"__intN\" types for SIZE_TYPE.\n-\t* gcc/lto/lto-lang.c (lto_build_c_type_nodes): Likewise.\n-\t* gcc/stor-layout.c (initialize_sizetypes): Accept \"__intN__\"\n+\t* stor-layout.c (initialize_sizetypes): Accept \"__intN__\"\n \tformat of \"__intN\" types for SIZETYPE.\n-\t* gcc/tree.c (build_common_tree_nodes): Accept \"__intN__\"\n+\t* tree.c (build_common_tree_nodes): Accept \"__intN__\"\n \tformat of \"__intN\" types for SIZE_TYPE and PTRDIFF_TYPE.\n-\t* gcc/doc/invoke.texi: Document that __intN__ disables pedantic\n+\t* doc/invoke.texi: Document that __intN__ disables pedantic\n \twarnings.\n \n 2019-06-25  Jan Hubicka  <jh@suse.cz>\n@@ -6294,7 +6265,7 @@\n \t(vectorizable_scan_store): Adjust caller, use whole vector left shift\n \tand additional VEC_COND_EXPR only for those iterations that need it.\n \n-2019-06-20  Alexandre Oliva <oliva@adacore.com>\n+2019-06-20  Alexandre Oliva  <oliva@adacore.com>\n \n \t* config.gcc: Fix ARM --with-fpu checking and error message.\n \n@@ -7452,7 +7423,7 @@\n \t(ATTR_MALLOC_WARN_UNUSED_RESULT_SIZE_1_NOTHROW_LEAF_LIST): New.\n \t(ATTR_ALLOCA_SIZE_1_NOTHROW_LEAF_LIST): Remove.\n \t(ATTR_ALLOCA_WARN_UNUSED_RESULT_SIZE_1_NOTHROW_LEAF_LIST): New.\n-\t(ATTR_MALLOC_SIZE_1_2_NOTHROW_LEAF_LIST):  Remove.\n+\t(ATTR_MALLOC_SIZE_1_2_NOTHROW_LEAF_LIST): Remove.\n \t(ATTR_MALLOC_WARN_UNUSED_RESULT_SIZE_1_2_NOTHROW_LEAF_LIST):\n \tNew.\n \t(ATTR_ALLOC_SIZE_2_NOTHROW_LEAF_LIST): Remove.\n@@ -8701,7 +8672,7 @@\n \t(ix86_adjust_stack_and_probe): Ditto.\n \t(ix86_emit_probe_stack_range): Use gen_probe_stack_range instead\n \tof ix86_gen_probe_stack_range.\n-\t(ix86_expand_prologue):  Use gen_pro_epilogue_adjust_stack_sub\n+\t(ix86_expand_prologue): Use gen_pro_epilogue_adjust_stack_sub\n \tinstead of gen_pro_epilogue_adjust_stack_{si,di}_sub.\n \t* config/i386/x86-tune-sched.c (ix86_macro_fusion_pair_p):\n \tInclude insn-opinit.h.  Use code_for_stack_protect_test_1 instead of\n@@ -9070,12 +9041,6 @@\n \t(rs6000_file_start): ..extracted from here, and modified to\n \ttest all ISA bits.\n \t(rs6000_output_function_prologue): Emit .machine as necessary.\n-\t* testsuite/gcc.target/powerpc/ppc32-abi-dfp-1.c: Don't use\n-\tpower mnemonics.\n-\t* testsuite/gcc.dg/vect/O3-pr70130.c: Disable default options\n-\tadded by check_vect_support_and_set_flags.\n-\t* testsuite/gcc.dg/vect/pr48765.c: Likewise.\n-\t* testsuite/gfortran.dg/vect/pr45714-b.f: Likewise.\n \n 2019-05-22  Hans-Peter Nilsson  <hp@axis.com>\n \n@@ -9160,7 +9125,7 @@\n \t* config/i386/i386.md (anddi_1 to andsi_1_zext splitter):\n \tAvoid calling gen_lowpart with CONST operand.\n \n-2019-05-21  Alexandre Oliva <aoliva@redhat.com>\n+2019-05-21  Alexandre Oliva  <aoliva@redhat.com>\n \n \t* tree-ssa-threadupdate.c (struct ssa_local_info_t): Add\n \tfield template_last_to_copy.\n@@ -9189,8 +9154,6 @@\n \tPR target/90545\n \t* config/rs6000/rs6000.c (rs6000_register_move_cost): Increase\n \tpower9 direct move cost.\n-\t* testsuite/gcc.target/powerpc/fold-vec-splats-floatdouble.c:\n-\tCorrect comments and rename functions to suit parameters.\n \n 2019-05-21  Richard Biener  <rguenther@suse.de>\n \n@@ -9211,8 +9174,8 @@\n \tedges if for_edge_insertion_p is false.  Fix whitespace.\n \t* tree-ssa-pre.c (pass_pre::execute): Call\n \tsplit_edges_for_insertion instead of split_critical_edges.\n-\t* gcc/tree-ssa-tail-merge.c (tail_merge_optimize): Ditto.\n-\t* gcc/tree-ssa-sink.c (pass_sink_code::execute): Ditto.\n+\t* tree-ssa-tail-merge.c (tail_merge_optimize): Ditto.\n+\t* tree-ssa-sink.c (pass_sink_code::execute): Ditto.\n \t(pass_data_sink_code): Update function name in the comment.\n \n 2019-05-21  Vladislav Ivanishin  <vlad@ispras.ru>\n@@ -9766,7 +9729,7 @@\n \n \t* lto-streamer.h (LTO_major_version): Bump to 9.\n \n-2019-05-16  Jun Ma <JunMa@linux.alibaba.com>\n+2019-05-16  Jun Ma  <JunMa@linux.alibaba.com>\n \n \tPR tree-optimization/90106\n \t* tree-call-cdce.c (shrink_wrap_one_built_in_call_with_conds): Add\n@@ -11630,7 +11593,7 @@\n \tPR target/84369\n \t* config/rs6000/power9.md: Add store forwarding bypass.\n \n-2019-04-16  Alexandre Oliva <aoliva@redhat.com>\n+2019-04-16  Alexandre Oliva  <aoliva@redhat.com>\n \n \tPR debug/89528\n \t* valtrack.c (dead_debug_insert_temp): Reset debug references\n@@ -12658,7 +12621,6 @@\n \n 2019-03-27  Jeff Law  <law@redhat.com>\n \n-\n \tPR rtl-optimization/87761\n \tPR rtl-optimization/89826\n \t* regcprop.c (copyprop_hardreg_forward_1): Move may_trap_p test\n@@ -12775,7 +12737,7 @@\n \talignment in diagnostic.  Avoid assuming argument fits in SHWI,\n \tconvert it to UHWI when it fits.\n \n-2019-03-25  Johan Karlsson <johan.karlsson@enea.com>\n+2019-03-25  Johan Karlsson  <johan.karlsson@enea.com>\n \n \tPR debug/86964\n \t* dwarf2out.c (premark_used_variables): New function.\n@@ -13248,7 +13210,7 @@\n \t(altivec_expand_vec_ext_builtin): Use modular arithmetic to\n \tcompute index.\n \n-2019-03-15  Alexandre Oliva <aoliva@redhat.com>\n+2019-03-15  Alexandre Oliva  <aoliva@redhat.com>\n \n \tPR c++/88534\n \tPR c++/88537\n@@ -13442,7 +13404,7 @@\n \t(s390_sched_reorder): Likewise.\n \t(s390_sched_variable_issue): Rework and use new functions.\n \t(s390_sched_init): Use new functions.\n-\t* config/s390/s390.h (s390_tune_attr):  Add z14.\n+\t* config/s390/s390.h (s390_tune_attr): Add z14.\n \t* config/s390/s390.md: Add z14.\n \n 2019-03-12  Robin Dapp  <rdapp@linux.ibm.com>\n@@ -14300,8 +14262,6 @@\n \t(__builtin_has_attribute): Add missing comma after @xref.\n \t(__builtin_object_size): Ditto.\n \t* doc/md.texi (cond_*{mode}): Use @samp instead of @var around op1[i].\n-\t* fortran/invoke.texi (-ffpe-trap): Use @var for every item\n-\tin the list.\n \n 2019-02-26  Jeff Law  <law@redhat.com>\n \n@@ -14359,7 +14319,7 @@\n \t(_mm_cvttpd_epi32): Likewise.\n \n \tPR target/89338\n-\t* config/rs6000/xmmintrin.h (_mm_cvtss_f32):  Fix type mismatch.\n+\t* config/rs6000/xmmintrin.h (_mm_cvtss_f32): Fix type mismatch.\n \t(_mm_cvt_ss2si): Fix type mismatch and 32-bit.\n \n \tPR target/89339\n@@ -14722,7 +14682,7 @@\n \t(diagnostic_show_locus): Use linenum_arith_t when iterating over\n \tlines within each line_span.\n \n-2019-02-20 Andre Vieira  <andre.simoesdiasvieira@arm.com>\n+2019-02-20  Andre Vieira  <andre.simoesdiasvieira@arm.com>\n \n \tPR target/86487\n \t* lra-constraints.c(uses_hard_regs_p): Fix handling of\n@@ -14731,7 +14691,7 @@\n 2019-02-20  Li Jia He  <helijia@linux.ibm.com>\n \n \tPR target/88100\n-\t* gcc/config/rs6000/rs6000.c (rs6000_gimple_fold_builtin)\n+\t* config/rs6000/rs6000.c (rs6000_gimple_fold_builtin)\n \t<case ALTIVEC_BUILTIN_VSPLTISB, ALTIVEC_BUILTIN_VSPLTISH,\n \tALTIVEC_BUILTIN_VSPLTISW>: Don't convert the operand before\n \trange checking it.\n@@ -15057,8 +15017,7 @@\n \t* config/i386/i386.c (ix86_function_arg_advance): Remove\n \tunrelated comment.\n \t(struct builtin_isa): Remove leaf_p and nothrow_p fields.\n-\t(def_builtin):  Remove usage of dead\n-\tfields.\n+\t(def_builtin): Remove usage of dead fields.\n \t(ix86_add_new_builtins): Likewise.\n \t* ipa-fnsummary.c (compute_fn_summary): Likewise.\n \t* ipa-icf.c (sem_function::equals_wpa): Likewise.\n@@ -16146,7 +16105,7 @@\n \t* doc/invoke.texi: Add -menqcmd.\n \n 2019-01-23  Bin Cheng  <bin.cheng@arm.com>\n-\t    Steve Ellcey <sellcey@marvell.com>\n+\t    Steve Ellcey  <sellcey@marvell.com>\n \n \tPR target/85711\n \t* recog.c (address_operand): Return false on wrong mode for address.\n@@ -17712,7 +17671,7 @@\n \t* config/aarch64/aarch64.c (aarch64_expand_prologue): Use new\n \tepilogue/prologue scratch registers EP0_REGNUM and EP1_REGNUM.\n \t(aarch64_expand_epilogue): Likewise.\n-\t(aarch64_output_mi_thunk): Likewise\n+\t(aarch64_output_mi_thunk): Likewise.\n \t* config/aarch64/aarch64.h (REG_CLASS_CONTENTS): Change\n \tTAILCALL_ADDR_REGS to x16 and x17.\n \t* config/aarch64/aarch64.md: Define EP0_REGNUM and EP1_REGNUM.\n@@ -18002,7 +17961,7 @@\n \tto propagate state.\n \t(nvptx_shared_propagate): Initialize vector bcast partition and\n \tsynchronization state.\n-\t(nvptx_single):  Generalize to enable vectors to use shared-memory\n+\t(nvptx_single): Generalize to enable vectors to use shared-memory\n \tto propagate state.\n \t(nvptx_process_pars): Likewise.\n \t(nvptx_set_current_function): Initialize oacc_broadcast_partition.\n@@ -18308,11 +18267,11 @@\n \t(format_string): Set unlikely range appropriately.\n \t* gimple-fold.c (get_range_strlen): Update comments.  Fix minor\n \tformatting issues.\n-\t(get_range_strlen):  Accept c_strlen_data pointer for external\n+\t(get_range_strlen): Accept c_strlen_data pointer for external\n \tcall sites as well.  Pass through to call to internal get_range_strlen.\n \tAdjust minlen, maxlen and maxbound as needed.\n \t(get_maxval_strlen): Update comments.\n-\t(gimple_fold_builtin_strlen):  Update call to get_range_strlen\n+\t(gimple_fold_builtin_strlen): Update call to get_range_strlen\n \tto use c_strlen_data pointer.  Change variable accesses to instead\n \tuse c_strlen_data data members.\n "}, {"sha": "cb3892ff36e4c926452194d841b7183fb6756e00", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab20d992c828450ce4aa869e8995ef2924740fd0/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab20d992c828450ce4aa869e8995ef2924740fd0/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=ab20d992c828450ce4aa869e8995ef2924740fd0", "patch": "@@ -1,4 +1,4 @@\n-2019-08-02  Alexandre Oliva <oliva@adacore.com>\n+2019-08-02  Alexandre Oliva  <oliva@adacore.com>\n \n \t* libgnat/a-exexpr.adb (Begin_Handler_v1, End_Handler_v1): New.\n \t(Claimed_Cleanup): New.\n@@ -281,7 +281,7 @@\n \n 2019-07-22  Ed Schonberg  <schonberg@adacore.com>\n \n-\t* freeze.adb (Freeze_Fixed_Point_Type):  When freezing a\n+\t* freeze.adb (Freeze_Fixed_Point_Type): When freezing a\n \tfixed-point subtype, check whether the parent type declarastion\n \tincludes an aspect specification for the 'Small type attribute,\n \tand inherit the specified value.\n@@ -1945,7 +1945,7 @@\n \t* libgnat/g-traceb.ads, libgnat/g-traceb.adb (Call_Chain): New\n \tfunction.\n \n-2019-07-04  James Clarke <jrtc27@debian.org>\n+2019-07-04  James Clarke  <jrtc27@debian.org>\n \n \t* libgnarl/s-osinte__kfreebsd-gnu.ads (clockid_t): Make type\n \tdefinition public.\n@@ -2508,7 +2508,7 @@\n \n 2019-07-03  Ed Schonberg  <schonberg@adacore.com>\n \n-\t* inline.adb (Make_Loop_Labels_Unique):  New procedure to modify\n+\t* inline.adb (Make_Loop_Labels_Unique): New procedure to modify\n \tthe source code of subprograms that are inlined by the\n \tfront-end, to prevent accidental duplication between loop labels\n \tin the inlined code and the code surrounding the inlined call."}, {"sha": "a5c3b9b500e3e3ce6386e3df88ee7bb6e33dcbcd", "filename": "gcc/brig/ChangeLog", "status": "modified", "additions": 40, "deletions": 35, "changes": 75, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab20d992c828450ce4aa869e8995ef2924740fd0/gcc%2Fbrig%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab20d992c828450ce4aa869e8995ef2924740fd0/gcc%2Fbrig%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fbrig%2FChangeLog?ref=ab20d992c828450ce4aa869e8995ef2924740fd0", "patch": "@@ -1,11 +1,16 @@\n+2019-06-25  Jozef Lawrynowicz  <jozef.l@mittosystems.com>\n+\n+\t* brig-lang.c (brig_build_c_type_nodes): Accept \"__intN__\"\n+\tformat of \"__intN\" types for SIZE_TYPE.\n+\n 2019-05-16  Martin Sebor  <msebor@redhat.com>\n \n-        * brigfrontend/brig-control-handler.cc\n-        (brig_directive_control_handler::operator): Remove trailing newline\n-        from a diagnostic.\n-        * brigfrontend/brig-module-handler.cc\n-        (brig_directive_module_handler::operator): Remove a duplicated space\n-        from a diagnostic.\n+\t* brigfrontend/brig-control-handler.cc\n+\t(brig_directive_control_handler::operator): Remove trailing newline\n+\tfrom a diagnostic.\n+\t* brigfrontend/brig-module-handler.cc\n+\t(brig_directive_module_handler::operator): Remove a duplicated space\n+\tfrom a diagnostic.\n \n 2019-01-01  Jakub Jelinek  <jakub@redhat.com>\n \n@@ -18,7 +23,7 @@\n 2018-07-20  Martin Sebor  <msebor@redhat.com>\n \n \tPR middle-end/82063\n-\t* brig/brig-lang.c (brig_langhook_handle_option): Change function\n+\t* brig-lang.c (brig_langhook_handle_option): Change function\n \targument to HOST_WIDE_INT.\n \n 2018-07-04  Martin Jambor  <mjambor@suse.cz>\n@@ -46,7 +51,7 @@\n \n 2018-05-04  Pekka J\u00e4\u00e4skel\u00e4inen  <pekka.jaaskelainen@parmance.com>\n \n-\t* brig/brigfrontend/brig-basic-inst-handler.cc:  Fix handling of NOPs.\n+\t* brigfrontend/brig-basic-inst-handler.cc: Fix handling of NOPs.\n \n 2018-05-04  Pekka J\u00e4\u00e4skel\u00e4inen  <pekka.jaaskelainen@parmance.com>\n \n@@ -75,52 +80,52 @@\n \t- add qualifiers to generated function parameters.\n \tConst and restrict on the hidden local/private pointers,\n \tthe arg buffer and the context pointer help some optimizations.\n-\t* brig/brigfrontend/brig-basic-inst-handler.cc: See above.\n-\t* brig/brigfrontend/brig-branch-inst-handler.cc: See above.\n-\t* brig/brigfrontend/brig-cmp-inst-handler.cc: See above.\n-\t* brig/brigfrontend/brig-code-entry-handler.cc: See above.\n-\t* brig/brigfrontend/brig-code-entry-handler.h: See above.\n-\t* brig/brigfrontend/brig-control-handler.cc: See above.\n-\t* brig/brigfrontend/brig-cvt-inst-handler.cc: See above.\n-\t* brig/brigfrontend/brig-function-handler.cc: See above.\n-\t* brig/brigfrontend/brig-function.cc: See above.\n-\t* brig/brigfrontend/brig-function.h: See above.\n-\t* brig/brigfrontend/brig-label-handler.cc: See above.\n-\t* brig/brigfrontend/brig-lane-inst-handler.cc: See above.\n-\t* brig/brigfrontend/brig-mem-inst-handler.cc: See above.\n-\t* brig/brigfrontend/phsa.h: See above.\n-\t* brig/lang.opt: See above.\n+\t* brigfrontend/brig-basic-inst-handler.cc: See above.\n+\t* brigfrontend/brig-branch-inst-handler.cc: See above.\n+\t* brigfrontend/brig-cmp-inst-handler.cc: See above.\n+\t* brigfrontend/brig-code-entry-handler.cc: See above.\n+\t* brigfrontend/brig-code-entry-handler.h: See above.\n+\t* brigfrontend/brig-control-handler.cc: See above.\n+\t* brigfrontend/brig-cvt-inst-handler.cc: See above.\n+\t* brigfrontend/brig-function-handler.cc: See above.\n+\t* brigfrontend/brig-function.cc: See above.\n+\t* brigfrontend/brig-function.h: See above.\n+\t* brigfrontend/brig-label-handler.cc: See above.\n+\t* brigfrontend/brig-lane-inst-handler.cc: See above.\n+\t* brigfrontend/brig-mem-inst-handler.cc: See above.\n+\t* brigfrontend/phsa.h: See above.\n+\t* lang.opt: See above.\n \n 2018-05-04  Pekka J\u00e4\u00e4skel\u00e4inen  <pekka.jaaskelainen@parmance.com>\n \n-\t* brig/brigfrontend/brig-function-handler.cc: Skip multiple forward\n+\t* brigfrontend/brig-function-handler.cc: Skip multiple forward\n \tdeclarations of the same function.\n \n 2018-05-04  Pekka J\u00e4\u00e4skel\u00e4inen  <pekka.jaaskelainen@parmance.com>\n \n-\t* brig/brig-lang.c: Do not allow optimizations based on known C\n+\t* brig-lang.c: Do not allow optimizations based on known C\n \tbuiltins.\n \n 2018-05-04  Pekka J\u00e4\u00e4skel\u00e4inen  <pekka.jaaskelainen@parmance.com>\n \n-\t* brig/brig-lang.c: Allow controlling strict aliasing from\n+\t* brig-lang.c: Allow controlling strict aliasing from\n \tcmd line.\n \n 2018-05-04  Pekka J\u00e4\u00e4skel\u00e4inen  <pekka.jaaskelainen@parmance.com>\n \n-\t* brig/brigfrontend/brig-code-entry-handler.cc: The modulo in\n+\t* brigfrontend/brig-code-entry-handler.cc: The modulo in\n \tID computation should not be needed.\n \n 2018-05-04  Pekka J\u00e4\u00e4skel\u00e4inen  <pekka.jaaskelainen@parmance.com>\n \n-\t* brig/brig-lang.c: Add support for whole program\n+\t* brig-lang.c: Add support for whole program\n \toptimizations by marking the kernels externally visible.\n-\t* brig/brigfrontend/brig-branch-inst-handler.cc: See above.\n-\t* brig/brigfrontend/brig-function-handler.cc: See above.\n-\t* brig/brigfrontend/brig-function.cc: See above.\n-\t* brig/brigfrontend/brig-to-generic.cc: See above.\n-\t* brig/brigfrontend/brig-to-generic.h: See above.\n-\t* brig/brigfrontend/brig-variable-handler.h: See above.\n+\t* brigfrontend/brig-branch-inst-handler.cc: See above.\n+\t* brigfrontend/brig-function-handler.cc: See above.\n+\t* brigfrontend/brig-function.cc: See above.\n+\t* brigfrontend/brig-to-generic.cc: See above.\n+\t* brigfrontend/brig-to-generic.h: See above.\n+\t* brigfrontend/brig-variable-handler.h: See above.\n \n 2018-01-03  Richard Sandiford  <richard.sandiford@linaro.org>\n \t    Alan Hayward  <alan.hayward@arm.com>\n@@ -217,7 +222,7 @@\n \tcan be used to patch away BRIG entries at the binary level.\n \tAlso add extra error detection for zeroed regions: make sure\n \tthe byteCount field is never zero.\n-\t* brig/brigfrontend/phsa.h: Added a new error prefix for\n+\t* brigfrontend/phsa.h: Added a new error prefix for\n \terrors which are due to corrupted BRIG modules.\n \n 2017-10-09  Henry Linjam\u00e4ki  <henry.linjamaki@parmance.com>"}, {"sha": "36beddcd7f2baf7ec955219cce2835fd1a9da96c", "filename": "gcc/c-family/ChangeLog", "status": "modified", "additions": 74, "deletions": 69, "changes": 143, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab20d992c828450ce4aa869e8995ef2924740fd0/gcc%2Fc-family%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab20d992c828450ce4aa869e8995ef2924740fd0/gcc%2Fc-family%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2FChangeLog?ref=ab20d992c828450ce4aa869e8995ef2924740fd0", "patch": "@@ -75,6 +75,11 @@\n \t* c-omp.c (c_finish_omp_atomic): Allow tree_invariant_p in addition\n \tto SAVE_EXPR in first operand of a COMPOUND_EXPR.\n \n+2019-06-25  Jozef Lawrynowicz  <jozef.l@mittosystems.com>\n+\n+\t* c-common.c (c_common_nodes_and_builtins): Define\n+\talternate \"__intN__\" name for \"__intN\" types.\n+\n 2019-06-24  Jan Hubicka  <jh@suse.cz>\n \n \t* c-common.c (braced_lists_to_strings): Check that\n@@ -184,44 +189,44 @@\n \n 2019-05-16  Martin Sebor  <msebor@redhat.com>\n \n-        * c-attribs.c (handle_no_sanitize_attribute): Quote identifiers,\n-        keywords, operators, and types in diagnostics.\n-        (handle_scalar_storage_order_attribute): Same.\n-        (handle_mode_attribute): Same.\n-        (handle_visibility_attribute): Same.\n-        (handle_assume_aligned_attribute): Same.\n-        (handle_no_split_stack_attribute): Same.\n-        * c-common.c (shorten_compare): Same.\n-        (c_common_truthvalue_conversion): Same.\n-        (cb_get_source_date_epoch): Same.\n-        * c-lex.c (cb_def_pragma): Quote keywords, operators, and types\n-        in diagnostics.\n-        (interpret_float): Same.\n-        * c-omp.c (c_finish_omp_for): Same.\n-        * c-opts.c (c_common_post_options): Same.\n-        * c-pch.c (c_common_pch_pragma): Same.\n-        * c-pragma.c (pop_alignment): Same.\n-        (handle_pragma_pack): Same.\n-        (apply_pragma_weak): Same.\n-        (handle_pragma_weak): Same.\n-        (handle_pragma_scalar_storage_order): Same.\n-        (handle_pragma_redefine_extname): Same.\n-        (add_to_renaming_pragma_list): Same.\n-        (maybe_apply_renaming_pragma): Same.\n-        (push_visibility): Same.\n-        (handle_pragma_visibility): Same.\n-        (handle_pragma_optimize): Same.\n-        (handle_pragma_message): Same.\n-        * c-warn.c (warn_for_omitted_condop): Same.\n-        (lvalue_error): Same.\n+\t* c-attribs.c (handle_no_sanitize_attribute): Quote identifiers,\n+\tkeywords, operators, and types in diagnostics.\n+\t(handle_scalar_storage_order_attribute): Same.\n+\t(handle_mode_attribute): Same.\n+\t(handle_visibility_attribute): Same.\n+\t(handle_assume_aligned_attribute): Same.\n+\t(handle_no_split_stack_attribute): Same.\n+\t* c-common.c (shorten_compare): Same.\n+\t(c_common_truthvalue_conversion): Same.\n+\t(cb_get_source_date_epoch): Same.\n+\t* c-lex.c (cb_def_pragma): Quote keywords, operators, and types\n+\tin diagnostics.\n+\t(interpret_float): Same.\n+\t* c-omp.c (c_finish_omp_for): Same.\n+\t* c-opts.c (c_common_post_options): Same.\n+\t* c-pch.c (c_common_pch_pragma): Same.\n+\t* c-pragma.c (pop_alignment): Same.\n+\t(handle_pragma_pack): Same.\n+\t(apply_pragma_weak): Same.\n+\t(handle_pragma_weak): Same.\n+\t(handle_pragma_scalar_storage_order): Same.\n+\t(handle_pragma_redefine_extname): Same.\n+\t(add_to_renaming_pragma_list): Same.\n+\t(maybe_apply_renaming_pragma): Same.\n+\t(push_visibility): Same.\n+\t(handle_pragma_visibility): Same.\n+\t(handle_pragma_optimize): Same.\n+\t(handle_pragma_message): Same.\n+\t* c-warn.c (warn_for_omitted_condop): Same.\n+\t(lvalue_error): Same.\n \n 2019-05-15  Richard Biener  <rguenther@suse.de>\n \n \tPR c/90474\n \t* c-common.c (c_common_mark_addressable_vec): Also mark\n \ta COMPOUND_LITERAL_EXPR_DECL addressable similar to\n \tc_mark_addressable.\n- \n+\n 2019-05-06  Nathan Sidwell  <nathan@acm.org>\n \n \t* c-opts.c (handle_defered_opts): Rename struct deps to struc mkdeps.\n@@ -284,7 +289,7 @@\n \n 2019-04-05  Marek Polacek  <polacek@redhat.com>\n \n-\tPR c++/89973 - -Waddress-of-packed-member ICE with invalid conversion. \n+\tPR c++/89973 - -Waddress-of-packed-member ICE with invalid conversion.\n \t* c-warn.c (check_address_or_pointer_of_packed_member): Check the type\n \tof RHS.\n \n@@ -1056,7 +1061,7 @@\n 2018-08-01  Martin Sebor  <msebor@redhat.com>\n \n \tPR tree-optimization/86650\n-\t* c-family/c-format.c (gcc_tdiag_char_table): Update comment for \"%G\".\n+\t* c-format.c (gcc_tdiag_char_table): Update comment for \"%G\".\n \t(gcc_cdiag_char_table, gcc_cxxdiag_char_table): Same.\n  \t(init_dynamic_diag_info): Update from \"gcall *\" to \"gimple *\".\n  \t* c-format.h (T89_G): Update to be \"gimple *\" rather than\n@@ -1095,7 +1100,7 @@\n 2018-07-20  Martin Sebor  <msebor@redhat.com>\n \n \tPR middle-end/82063\n-\t* gcc/c-family/c.opt (-Warray-bounds): Remove redundant -Wall.\n+\t* c.opt (-Warray-bounds): Remove redundant -Wall.\n \n 2018-07-20  Martin Sebor  <msebor@redhat.com>\n \n@@ -1175,8 +1180,8 @@\n \n \t* cppspec.c: Include opt-suggestions.h.\n \n-2018-06-20  Chung-Lin Tang <cltang@codesourcery.com>\n-\t    Thomas Schwinge <thomas@codesourcery.com>\n+2018-06-20  Chung-Lin Tang  <cltang@codesourcery.com>\n+\t    Thomas Schwinge  <thomas@codesourcery.com>\n \t    Cesar Philippidis  <cesar@codesourcery.com>\n \n \t* c-pragma.h (enum pragma_omp_clause): Add\n@@ -1265,7 +1270,7 @@\n \n \tPR c/55976\n \t* c-opts.c (c_common_post_options): Set default for warn_return_type\n-\tfor C++/C++ with ObjC extensions only. For C, makes it possible to \n+\tfor C++/C++ with ObjC extensions only. For C, makes it possible to\n \tdifferentiate between default (no option), -Wreturn-type, and\n \t-Wno-return-type.\n \n@@ -1407,12 +1412,12 @@\n 2018-03-12  Martin Sebor  <msebor@redhat.com>\n \n \tPR tree-optimization/83456\n-\t* gcc/c-family/c-common.c (check_function_restrict): Return bool.\n+\t* c-common.c (check_function_restrict): Return bool.\n \tRestore checking of bounded built-in functions.\n \t(check_function_arguments): Also return the result\n \tof warn_for_restrict.\n-\t* gcc/c-family/c-common.c (check_function_restrict): Return bool.\n-\t* gcc/c-family/c-warn.c (warn_for_restrict): Return bool.\n+\t* c-common.c (check_function_restrict): Return bool.\n+\t* c-warn.c (warn_for_restrict): Return bool.\n \n 2018-03-02  Marek Polacek  <polacek@redhat.com>\n \n@@ -1623,7 +1628,7 @@\n \t* c-pragma.c (init_pragma): Register pragma GCC unroll.\n \t* c-pragma.h (enum pragma_kind): Add PRAGMA_UNROLL.\n \n-2017-12-22  Alexandre Oliva <aoliva@redhat.com>\n+2017-12-22  Alexandre Oliva  <aoliva@redhat.com>\n \n \tPR debug/83527\n \tPR debug/83419\n@@ -1677,7 +1682,7 @@\n \tAdjust the size of buf1 and buf2, add a new buf to avoid\n \tformat-overflow warning.\n \n-2017-12-12  Alexandre Oliva <aoliva@redhat.com>\n+2017-12-12  Alexandre Oliva  <aoliva@redhat.com>\n \n \t* c-semantics.c (pop_stmt_list): Move begin stmt marker into\n \tsubsequent statement list.\n@@ -1981,7 +1986,7 @@\n \trather than DECL_INITIAL.\n \t(common_handle_aligned_attribute): Likewise.\n \n-2017-09-20  Alexandre Oliva <aoliva@redhat.com>\n+2017-09-20  Alexandre Oliva  <aoliva@redhat.com>\n \n \t* c.opt (gen-decls): Add RejectNegative.\n \n@@ -2043,7 +2048,7 @@\n \t* c-warn.c (warn_tautological_bitwise_comparison): New function.\n \t(warn_tautological_cmp): Call it.\n \n-2017-09-01  Boris Kolpackov <boris@codesynthesis.com>\n+2017-09-01  Boris Kolpackov  <boris@codesynthesis.com>\n \n \t* c-opts.c (c_common_finish): Write dependency information even if\n \tthere are errors.\n@@ -2134,7 +2139,7 @@\n \t* c-format.c (struct format_check_context): Add field \"arglocs\".\n \t(check_function_format): Add param \"arglocs\"; pass it to\n \tcheck_format_info.\n-\t(check_format_info):  Add param \"arglocs\"; use it to initialize\n+\t(check_format_info): Add param \"arglocs\"; use it to initialize\n \tnew field of format_ctx.\n \t(check_format_arg): Pass format_ctx->arglocs to new param of\n \tcheck_format_info_main.\n@@ -2802,7 +2807,7 @@\n \tPR middle-end/77708\n \t* c.opt (-Wformat-truncation): New option.\n \n-2017-01-06  Alexandre Oliva <aoliva@redhat.com>\n+2017-01-06  Alexandre Oliva  <aoliva@redhat.com>\n \n \t* c-pretty-print.c (pp_c_tree_decl_identifier): Convert 16-bit\n \tvalue to unsigned short to fit in 4 hex digits without\n@@ -3413,7 +3418,7 @@\n \t(format_warning_va): Move to substring-locations.c.\n \t(format_warning_at_substring): Likewise.\n \n-2016-09-06 Martin Sebor  <msebor@redhat.com>\n+2016-09-06  Martin Sebor  <msebor@redhat.com>\n \n \tPR c/77336\n \t* c-format.c (check_function_format): Avoid issuing warnings for\n@@ -5883,7 +5888,7 @@\n \tCommentary and rearrangement of tests.\n \t* g++.dg/cpp1y/feat-cxx14.C: Enable aggregate NSDMI test.\n \tCommentary and rearrangement of tests.\n-\t* g++.dg/cpp1y/feat-cxx98-neg.C: Ditto\n+\t* g++.dg/cpp1y/feat-cxx98-neg.C: Ditto.\n \t* g++.dg/cpp1y/feat-cxx98.C: Commentary.\n \n 2014-10-29  Richard Sandiford  <richard.sandiford@arm.com>\n@@ -6273,7 +6278,7 @@\n \n 2014-08-03  Marek Polacek  <polacek@redhat.com>\n \n-\t* c-common.c (check_case_value):  Add location_t parameter.  Use it.\n+\t* c-common.c (check_case_value): Add location_t parameter.  Use it.\n \t(c_add_case_label): Pass loc to check_case_value.\n \n 2014-08-02  Trevor Saunders  <tsaunders@mozilla.com>\n@@ -6630,7 +6635,7 @@\n \t* c-common.h (registered_builtin_types): Declare.\n \n 2014-04-14  Richard Biener  <rguenther@suse.de>\n-\tMarc Glisse  <marc.glisse@inria.fr>\n+\t    Marc Glisse  <marc.glisse@inria.fr>\n \n \tPR c/60819\n \t* c-common.c (convert_vector_to_pointer_for_subscript): Properly\n@@ -6890,7 +6895,7 @@\n \t* c-common.c (c_common_attribute_table): Added \"cilk simd function\"\n \tattribute.\n \t* c-pragma.h (enum pragma_cilk_clause): Remove.\n-\t(enum pragma_omp_clause):  Added the following fields:\n+\t(enum pragma_omp_clause): Added the following fields:\n \tPRAGMA_CILK_CLAUSE_NOMASK, PRAGMA_CILK_CLAUSE_MASK,\n \tPRAGMA_CILK_CLAUSE_VECTORLENGTH, PRAGMA_CILK_CLAUSE_NONE,\n \tPRAGMA_CILK_CLAUSE_LINEAR, PRAGMA_CILK_CLAUSE_PRIVATE,\n@@ -6964,8 +6969,8 @@\n 2013-11-22  Andrew MacLeod  <amacleod@redhat.com>\n \n \t* c-common.c: Add required include files from gimple.h.\n-\t* c-gimplify.c: Likewise\n-\t* cilk.c: Likewise\n+\t* c-gimplify.c: Likewise.\n+\t* cilk.c: Likewise.\n \n 2013-11-22  David Malcolm  <dmalcolm@redhat.com>\n \n@@ -7475,7 +7480,7 @@\n \t(pp_c_direct_abstract_declarator): Likewise.\n \t* c-pretty-print.c (c_pretty_printer::abstract_declarator): Rename\n \tfrom pp_c_abstract_declarator.  Adjust.\n-\t(c_pretty_printer::direct_abstract_declarator):  Rename from\n+\t(c_pretty_printer::direct_abstract_declarator): Rename from\n \tpp_c_direct_abstract_declarator.  Adjust.\n \t(c_pretty_printer::function_specifier): Rename from\n \tpp_c_function_specifier.  Adjust.\n@@ -7957,15 +7962,15 @@\n \t* c-opts.c (c_common_handle_option): Do not handle Wformat here.\n \t* c-format.c (set_Wformat): Delete.\n \t(decode_format_attr): Replace OPT_Wformat with OPT_Wformat_.\n-\t(maybe_read_dollar_number):  Likewise.\n-\t(avoid_dollar_number):  Likewise.\n-\t(finish_dollar_format_checking):  Likewise.\n-\t(check_format_info):  Likewise.\n-\t(check_format_info_main):  Likewise.\n-\t(check_format_types):  Likewise.\n-\t(format_type_warning):  Likewise.\n-\t* c-common.c (int):  Likewise.\n-\t(check_function_sentinel):  Likewise.\n+\t(maybe_read_dollar_number): Likewise.\n+\t(avoid_dollar_number): Likewise.\n+\t(finish_dollar_format_checking): Likewise.\n+\t(check_format_info): Likewise.\n+\t(check_format_info_main): Likewise.\n+\t(check_format_types): Likewise.\n+\t(format_type_warning): Likewise.\n+\t* c-common.c (int): Likewise.\n+\t(check_function_sentinel): Likewise.\n \t* c-common.h (warn_format,set_Wformat): Do not declare here.\n \n 2012-11-07  Manuel L\u00f3pez-Ib\u00e1\u00f1ez  <manu@gcc.gnu.org>\n@@ -8313,7 +8318,7 @@\n 2012-05-16  Dodji Seketeli  <dodji@redhat.com>\n \n \tPR preprocessor/7263\n-\t* c-lex.c (c_lex_with_flags):  Pass a virtual location to the call\n+\t* c-lex.c (c_lex_with_flags): Pass a virtual location to the call\n \tto cpp_classify_number.  For diagnostics, use the precise location\n \tinstead of the global input_location.\n \n@@ -8389,7 +8394,7 @@\n 2012-04-30  Dodji Seketeli  <dodji@redhat.com>\n \n \tAdd -Wvarargs option\n-\t* c.opt (Wvarargs):  Define new option.\n+\t* c.opt (Wvarargs): Define new option.\n \n 2012-04-30  Manuel L\u00f3pez-Ib\u00e1\u00f1ez  <manu@gcc.gnu.org>\n \n@@ -8589,7 +8594,7 @@\n 2011-11-08  Richard Guenther  <rguenther@suse.de>\n \n \tPR middle-end/51010\n-\tc-family/\n+\t* c-pretty-print.c (pp_c_expression): Handle SSA_NAMEs.\n \n 2011-11-07  Richard Henderson  <rth@redhat.com>\n \t    Aldy Hernandez  <aldyh@redhat.com>\n@@ -9525,7 +9530,7 @@\n \tfirst_target_format_type: New variable.\n \t(handle_format_attribute): Set up first_target_format_type, pass the\n \texpected format arg string type to check_format_string().\n-\t* c-common.h (FMT_FLAG_PARSE_ARG_CONVERT_EXTERNAL):  New flag.\n+\t* c-common.h (FMT_FLAG_PARSE_ARG_CONVERT_EXTERNAL): New flag.\n \t* stub-objc.c (objc_string_ref_type_p): New.\n \t(objc_check_format_arg): New.\n \n@@ -9670,7 +9675,7 @@\n \n \tMerge from 'apple/trunk' branch on FSF servers.\n \n-\t2006-03-27 Fariborz Jahanian  <fjahanian@apple.com>\n+\t2006-03-27  Fariborz Jahanian  <fjahanian@apple.com>\n \n \tRadar 4133425\n \t* c-common.h (objc_diagnose_private_ivar): New decl.\n@@ -9712,7 +9717,7 @@\n 2010-10-13  Iain Sandoe  <iains@gcc.gnu.org>\n \n \tmerge from FSF apple 'trunk' branch.\n-\t2006-04-26 Fariborz Jahanian  <fjahanian@apple.com>\n+\t2006-04-26  Fariborz Jahanian  <fjahanian@apple.com>\n \n \tRadar 3803157 (method attributes)\n \t* c-common.c (handle_deprecated_attribute): Recognize"}, {"sha": "55621d68e160002a46bb864e5167b3c45c346722", "filename": "gcc/c/ChangeLog", "status": "modified", "additions": 36, "deletions": 31, "changes": 67, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab20d992c828450ce4aa869e8995ef2924740fd0/gcc%2Fc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab20d992c828450ce4aa869e8995ef2924740fd0/gcc%2Fc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc%2FChangeLog?ref=ab20d992c828450ce4aa869e8995ef2924740fd0", "patch": "@@ -76,7 +76,7 @@\n \t* c-decl.c (finish_function): Check targetm.warn_func_return\n \tbefore issuing a -Wreturn-type warning.\n \n-2019-07-12  Alexandre Oliva <oliva@adacore.com>\n+2019-07-12  Alexandre Oliva  <oliva@adacore.com>\n \n \t* gimple-parser.c (c_parser_gimple_try_stmt): New.\n \t(c_parser_compound_statement): Call it.\n@@ -118,6 +118,12 @@\n \t_Literal (char *) &\"foo\" for address literals pointing to\n \tSTRING_CSTs.\n \n+2019-06-25  Jozef Lawrynowicz  <jozef.l@mittosystems.com>\n+\n+\t* c-parser.c (c_parse_init): Create keyword for \"__intN__\" type.\n+\t* c-decl.c (declspecs_add_type): Don't pedwarn about \"__intN\" ISO\n+\tC incompatibility if alternate \"__intN__\" form is used.\n+\n 2019-06-24  Martin Sebor  <msebor@redhat.com>\n \n \t* c-typeck.c (build_binary_op): Hyphenate floating-point.\n@@ -166,17 +172,17 @@\n \n 2019-05-16  Martin Sebor  <msebor@redhat.com>\n \n-        * c-decl.c (start_decl): Quote keywords, operators, and\n-        types in diagnostics.\n-        (finish_decl): Same.\n-        * c-parser.c (c_parser_asm_statement): Same.\n-        (c_parser_conditional_expression): Same.\n-        (c_parser_transaction_cancel): Same.\n-        * c-typeck.c (c_common_type): Same.\n-        (build_conditional_expr): Same.\n-        (digest_init): Same.\n-        (process_init_element): Same.\n-        (build_binary_op): Same.\n+\t* c-decl.c (start_decl): Quote keywords, operators, and\n+\ttypes in diagnostics.\n+\t(finish_decl): Same.\n+\t* c-parser.c (c_parser_asm_statement): Same.\n+\t(c_parser_conditional_expression): Same.\n+\t(c_parser_transaction_cancel): Same.\n+\t* c-typeck.c (c_common_type): Same.\n+\t(build_conditional_expr): Same.\n+\t(digest_init): Same.\n+\t(process_init_element): Same.\n+\t(build_binary_op): Same.\n \n 2019-05-17  Richard Biener  <rguenther@suse.de>\n \n@@ -335,7 +341,7 @@\n \t(c_parser_oacc_simple_clause): Replace parser with loc formal\n \tparameter.  Adjust all users.\n \n-2019-02-19  Chung-Lin Tang <cltang@codesourcery.com>\n+2019-02-19  Chung-Lin Tang  <cltang@codesourcery.com>\n \n \tPR c/87924\n \t* c-parser.c (c_parser_oacc_clause_wait): Add representation of wait\n@@ -715,7 +721,7 @@\n \n \tPR c/87347\n \t* c-parser.c (warn_for_abs): Bail out if TYPE_ARG_TYPES is NULL.  Fix\n-        comment.\n+\tcomment.\n \n 2018-09-17  David Malcolm  <dmalcolm@redhat.com>\n \n@@ -807,7 +813,7 @@\n \t(build_binary_op): Use it when calling binary_op_error.\n \n 2018-08-15  Prathamesh Kulkarni  <prathamesh.kulkarni@linaro.org>\n-\t\n+\n \t* c-decl.c (start_decl): Do not warn if variables is named as main\n \tand is a local variable.\n \n@@ -848,8 +854,8 @@\n \ttype here, instead add \"omp declare target implicit\" attribute.\n \t(finish_decl): Diagnose vars without mappable type here.\n \n-2018-06-20  Chung-Lin Tang <cltang@codesourcery.com>\n-\t    Thomas Schwinge <thomas@codesourcery.com>\n+2018-06-20  Chung-Lin Tang  <cltang@codesourcery.com>\n+\t    Thomas Schwinge  <thomas@codesourcery.com>\n \t    Cesar Philippidis  <cesar@codesourcery.com>\n \n \t* c-parser.c (c_parser_omp_clause_name): Add support for finalize\n@@ -1092,7 +1098,7 @@\n \tPR c/82679\n \t* c-decl.c (grokdeclarator): Check declspecs insted of atomicp.\n \n-2017-12-12  Alexandre Oliva <aoliva@redhat.com>\n+2017-12-12  Alexandre Oliva  <aoliva@redhat.com>\n \n \t* c-objc-common.h (LANG_HOOKS_EMITS_BEGIN_STMT): Redefine as true.\n \t* c-parser.c (add_debug_begin_stmt): New.\n@@ -1204,7 +1210,7 @@\n \t* c-typeck.c (c_start_case): Build SWITCH_EXPR using build2 instead\n \tof build3.\n \n-2017-11-14 Boris Kolpackov  <boris@codesynthesis.com>\n+2017-11-14  Boris Kolpackov  <boris@codesynthesis.com>\n \n \t* Make-lang.in (c.install-plugin): Install backend import library.\n \n@@ -1612,7 +1618,7 @@\n \n \tPR c/81417\n \t* c-array-notation.c (fix_builtin_array_notation_fn): Update calls to\n-\tbuild_conditional_expr.\t\n+\tbuild_conditional_expr.\n \t* c-parser.c (c_parser_conditional_expression): Create locations for\n \tEXP1 and EXP2 from their source ranges.  Pass the locations down to\n \tbuild_conditional_expr.\n@@ -1640,7 +1646,7 @@\n \t* c-warn.c (warn_for_multistatement_macros): Prevent bogus\n \twarnings.  Avoid walking MACRO_MAP_LOCATIONS.\n \n-2017-07-31  Jan Hubicka <hubicka@ucw.cz>\n+2017-07-31  Jan Hubicka  <hubicka@ucw.cz>\n \t    Martin Liska  <mliska@suse.cz>\n \n \t* c-typeck.c (c_finish_goto_label): Build gimple predict\n@@ -1836,7 +1842,7 @@\n \t* c-convert.c (convert): Replace c_save_expr with save_expr.  Don't\n \tcall c_fully_fold.\n \t(convert) <case COMPLEX_TYPE>: Remove special handling of COMPLEX_TYPEs.\n-\t* c-decl.c (grokdeclarator): Replace c_save_expr with save_expr. \n+\t* c-decl.c (grokdeclarator): Replace c_save_expr with save_expr.\n \t* c-fold.c (c_fully_fold_internal): Handle SAVE_EXPR.\n \t* c-parser.c (c_parser_declaration_or_fndef): Replace c_save_expr with\n \tsave_expr.\n@@ -2068,7 +2074,7 @@\n \tset_c_expr_source_range when parsing ssa-name.\n \n 2017-02-10  Prasad Ghangal  <prasad.ghangal@gmail.com>\n-\tRichard Biener  <rguenther@suse.de>\n+\t    Richard Biener  <rguenther@suse.de>\n \n \t* gimple-parser.c (c_parser_gimple_binary_expression): Avoid\n \tbuilding IL when arguments are error_mark_node.\n@@ -3513,7 +3519,6 @@\n \t    Julian Brown  <julian@codesourcery.com>\n \t    Nathan Sidwell  <nathan@codesourcery.com>\n \n-\tc/\n \t* c-parser.c (c_parser_declaration_or_fndef): Add OpenACC\n \troutine arg.\n \t(c_parser_declaration_or_fndef): Call c_finish_oacc_routine.\n@@ -4935,7 +4940,7 @@\n \n \tPR c/49706\n \t* c-typeck.c (parser_build_binary_op): Warn when logical not is used\n-\ton the left hand side operand of a comparison. \n+\ton the left hand side operand of a comparison.\n \n 2014-06-05  Marek Polacek  <polacek@redhat.com>\n \n@@ -5753,7 +5758,7 @@\n \t(build_cilk_spawn): New function.\n \t(build_cilk_sync): Likewise.\n \t* Makefile.in (c-decl.o): Added cilk.h in dependency list.\n-\t\n+\n 2013-10-27  Tobias Burnus  <burnus@net-b.de>\n \n \tPR other/33426\n@@ -6038,7 +6043,7 @@\n \n \t* c-array-notation.c (expand_array_notation_exprs): Added\n \tARRAY_NOTATION_REF case.\n-\t\n+\n 2013-06-07  Balaji V. Iyer  <balaji.v.iyer@intel.com>\n \n \t* c-array-notation.c (length_mismatch_in_expr_p): Moved this\n@@ -6054,7 +6059,7 @@\n \t(replace_invariant_exprs): Initialized additional_tcodes to NULL.\n \t(struct inv_list): Moved this to c-family/array-notation-common.c.\n \t* c-tree.h (is_cilkplus_builtin_reduce): Remove prototype.\n-\t\n+\n 2013-06-05  Balaji V. Iyer  <balaji.v.iyer@intel.com>\n \n \t* c-typeck.c (convert_arguments): Moved checking of builtin cilkplus\n@@ -6073,15 +6078,15 @@\n \tto the end of function parsing.\n \t* c-array-notation.c (fix_conditional_array_notations_1): Expanded the\n \twhole if-statement instead of just the condition.\n-\t(expand_array_notation_exprs): Added MODIFY_EXPR case.\t\n+\t(expand_array_notation_exprs): Added MODIFY_EXPR case.\n \n 2013-06-03  Balaji V. Iyer  <balaji.v.iyer@intel.com>\n \n \tPR c/57474\n \t* c-array-notation.c (build_array_notation_expr): Initialized rhs_length\n \tarray to NULL_TREE if they are unused.  Also added a check for the\n \tfield to be NULL before its fields are used in future.\n-\t\n+\n 2013-05-29  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>\n \n \tPR bootstrap/57450\n@@ -6129,7 +6134,7 @@\n \t(c_parser_array_notation): New function.\n \t* c-array-notation.c: New file.\n \t* c-tree.h (is_cilkplus_reduce_builtin): Protoize.\n-\t\n+\n 2013-05-23  Mike Stump  <mikestump@comcast.net>\n \n \t* c-typeck.c (convert_for_assignment): Handle references to memory"}, {"sha": "f8fab25e2ab5c333412946b4cc85a1c9285eb164", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 109, "deletions": 101, "changes": 210, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab20d992c828450ce4aa869e8995ef2924740fd0/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab20d992c828450ce4aa869e8995ef2924740fd0/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=ab20d992c828450ce4aa869e8995ef2924740fd0", "patch": "@@ -373,15 +373,14 @@\n \t* cp-tree.h (cp_omp_emit_unmappable_type_notes): New prototype.\n \t* decl.c (cp_finish_decl): Call cp_omp_emit_unmappable_type_notes.\n \t* decl2.c (cp_omp_mappable_type): Move contents to ...\n-\t(cp_omp_mappable_type_1):  ... here and add note output.\n+\t(cp_omp_mappable_type_1): ... here and add note output.\n \t(cp_omp_emit_unmappable_type_notes): New function.\n \t* semantics.c (finish_omp_clauses): Call\n \tcp_omp_emit_unmappable_type_notes in four places.\n \n 2019-07-03  Martin Liska  <mliska@suse.cz>\n \n-\t* call.c (build_new_op_1): Remove\n-\tdead assignemts.\n+\t* call.c (build_new_op_1): Remove dead assignemts.\n \t* typeck.c (cp_build_binary_op): Likewise.\n \n 2019-06-27  Jason Merrill  <jason@redhat.com>\n@@ -423,6 +422,15 @@\n \t* constexpr.c (cxx_eval_array_reference): Don't look through VCE from\n \tvector type if lval.\n \n+2019-06-25  Jozef Lawrynowicz  <jozef.l@mittosystems.com>\n+\n+\t* lex.c (init_reswords): Create keyword for \"__intN__\" type.\n+\t* cp-tree.h (cp_decl_specifier_seq): New bitfield \"int_n_alt\".\n+\t* decl.c (grokdeclarator): Don't pedwarn about \"__intN\" ISO\n+\tC incompatibility if alternate \"__intN__\" form is used.\n+\t* parser.c (cp_parser_simple_type_specifier): Set\n+\tdecl_specs->int_n_alt if \"__intN__\" form is used.\n+\n 2019-06-24  Jan Hubicka  <jh@suse.cz>\n \n \t* lex.c (cxx_make_type): Set TYPE_CXX_ODR_P.\n@@ -671,7 +679,7 @@\n \tPR c++/90449 - add -Winaccessible-base option.\n \t* class.c (warn_about_ambiguous_bases): Changed name to:\n \tmaybe_warn_about_inaccessible_bases.\n-\t(maybe_warn_about_inaccessible_bases):  Implemented new\n+\t(maybe_warn_about_inaccessible_bases): Implemented new\n \tWinaccessible-base warning option for both direct and virtual\n \tbase warnings.\n \t(layout_class_type): Call to warn_about_ambiguous_bases changed to fit\n@@ -817,7 +825,7 @@\n \n \t* cp-tree.h (IDENTIFIER_LAMBDA_P): New.\n \t(TYPE_ANON_P): New.\n-\t(LAMBDA_TYPE_P, TYPE_UNNAMED_P):  Likewise.\n+\t(LAMBDA_TYPE_P, TYPE_UNNAMED_P): Likewise.\n \t(LAMBDANAME_PREFIX, LAMBDANAME_FORMAT): Delete.\n \t(make_lambda_name): Don't declare.\n \t* error.c (dump_aggr_type): Check for lambdas before other\n@@ -999,92 +1007,92 @@\n \n 2019-05-16  Martin Sebor  <msebor@redhat.com>\n \n-        * call.c (print_z_candidate): Wrap diagnostic text in a gettext\n-        macro.  Adjust.\n-        (print_z_candidates): Same.\n-        (build_conditional_expr_1): Quote keywords, operators, and types\n-        in diagnostics.\n-        (build_op_delete_call): Same.\n-        (maybe_print_user_conv_context): Wrap diagnostic text in a gettext\n-        macro.\n-        (convert_like_real): Same.\n-        (convert_arg_to_ellipsis): Quote keywords, operators, and types\n-        in diagnostics.\n-        (build_over_call): Same.\n-        (joust): Break up an overlong line.  Wrap diagnostic text in a gettext\n-        macro.\n-        * constexpr.c (cxx_eval_check_shift_p): Spell out >= in English.\n-        (cxx_eval_constant_expression): Quote keywords, operators, and types\n-        in diagnostics.\n-        (potential_constant_expression_1): Same.\n-        * cp-gimplify.c (cp_genericize_r): Same.\n-        * cvt.c (maybe_warn_nodiscard): Quote keywords, operators, and types\n-        in diagnostics.\n-        (type_promotes_to): Same.\n-        * decl.c (check_previous_goto_1): Same.\n-        (check_goto): Same.\n-        (start_decl): Same.\n-        (cp_finish_decl): Avoid parenthesizing a sentence for consistency.\n-        (grok_op_properties): Quote keywords, operators, and types\n-        in diagnostics.\n-        * decl2.c (grokfield): Same.\n-        (coerce_delete_type): Same.\n-        * except.c (is_admissible_throw_operand_or_catch_parameter): Same.\n-        * friend.c (do_friend): Quote C++ tokens.\n-        * init.c (build_new_1): Quote keywords, operators, and types\n-        in diagnostics.\n-        (build_vec_delete_1): Same.\n-        (build_delete): Same.\n-        * lex.c (parse_strconst_pragma): Same.\n-        (handle_pragma_implementation): Same.\n-        (unqualified_fn_lookup_error): Same.\n-        * mangle.c (write_type): Same.\n-        * method.c (defaulted_late_check): Avoid two consecutive punctuators.\n-        * name-lookup.c (cp_binding_level_debug): Remove a trailing newline.\n-        (pop_everything): Same.\n-        * parser.c (cp_lexer_start_debugging): Quote a macro name.\n-        in a diagnostic\n-        (cp_lexer_stop_debugging): Same.\n-        (cp_parser_userdef_numeric_literal): Quote a C++ header name\n-        in a diagnostic.\n-        (cp_parser_nested_name_specifier_opt): Quote keywords, operators,\n-        and types in diagnostics.\n-        (cp_parser_question_colon_clause): Same.\n-        (cp_parser_asm_definition): Same.\n-        (cp_parser_init_declarator): Same.\n-        (cp_parser_template_declaration_after_parameters): Avoid capitalizing\n-        a sentence in a diagnostic.\n-        (cp_parser_omp_declare_reduction): Quote keywords, operators, and types\n-        in diagnostics.\n-        (cp_parser_transaction): Same.\n-        * pt.c (maybe_process_partial_specialization): Replace second call\n-        to permerror with inform for consistency with other uses.\n-        (expand_integer_pack): Quote keywords, operators, and types\n-        in diagnostics.\n-        * rtti.c (get_typeid): Quote keywords, operators, and types\n-        in diagnostics.\n-        (build_dynamic_cast_1): Same.\n-        * semantics.c (finish_asm_stmt): Same.\n-        (finish_label_decl): Same.\n-        (finish_bases): Same.\n-        (finish_offsetof): Same.\n-        (cp_check_omp_declare_reduction): Same.\n-        (finish_decltype_type): Same.\n-        * tree.c (handle_init_priority_attribute): Same.  Add detail\n-        to diagnostics.\n-        (maybe_warn_zero_as_null_pointer_constant): Same.\n-        * typeck.c (cp_build_binary_op): Quote keywords, operators, and types\n-        in diagnostics.\n-        (cp_build_unary_op): Same.\n-        (check_for_casting_away_constness): Same.\n-        (build_static_cast): Same.\n-        (build_const_cast_1): Same.\n-        (maybe_warn_about_returning_address_of_local): Same.\n-        (check_return_expr): Same.\n-        * typeck2.c (abstract_virtuals_error_sfinae): Same.\n-        (digest_init_r): Replace a tab with spaces in a diagnostic.\n-        (build_functional_cast): Quote keywords, operators, and types\n-        in diagnostics.\n+\t* call.c (print_z_candidate): Wrap diagnostic text in a gettext\n+\tmacro.  Adjust.\n+\t(print_z_candidates): Same.\n+\t(build_conditional_expr_1): Quote keywords, operators, and types\n+\tin diagnostics.\n+\t(build_op_delete_call): Same.\n+\t(maybe_print_user_conv_context): Wrap diagnostic text in a gettext\n+\tmacro.\n+\t(convert_like_real): Same.\n+\t(convert_arg_to_ellipsis): Quote keywords, operators, and types\n+\tin diagnostics.\n+\t(build_over_call): Same.\n+\t(joust): Break up an overlong line.  Wrap diagnostic text in a gettext\n+\tmacro.\n+\t* constexpr.c (cxx_eval_check_shift_p): Spell out >= in English.\n+\t(cxx_eval_constant_expression): Quote keywords, operators, and types\n+\tin diagnostics.\n+\t(potential_constant_expression_1): Same.\n+\t* cp-gimplify.c (cp_genericize_r): Same.\n+\t* cvt.c (maybe_warn_nodiscard): Quote keywords, operators, and types\n+\tin diagnostics.\n+\t(type_promotes_to): Same.\n+\t* decl.c (check_previous_goto_1): Same.\n+\t(check_goto): Same.\n+\t(start_decl): Same.\n+\t(cp_finish_decl): Avoid parenthesizing a sentence for consistency.\n+\t(grok_op_properties): Quote keywords, operators, and types\n+\tin diagnostics.\n+\t* decl2.c (grokfield): Same.\n+\t(coerce_delete_type): Same.\n+\t* except.c (is_admissible_throw_operand_or_catch_parameter): Same.\n+\t* friend.c (do_friend): Quote C++ tokens.\n+\t* init.c (build_new_1): Quote keywords, operators, and types\n+\tin diagnostics.\n+\t(build_vec_delete_1): Same.\n+\t(build_delete): Same.\n+\t* lex.c (parse_strconst_pragma): Same.\n+\t(handle_pragma_implementation): Same.\n+\t(unqualified_fn_lookup_error): Same.\n+\t* mangle.c (write_type): Same.\n+\t* method.c (defaulted_late_check): Avoid two consecutive punctuators.\n+\t* name-lookup.c (cp_binding_level_debug): Remove a trailing newline.\n+\t(pop_everything): Same.\n+\t* parser.c (cp_lexer_start_debugging): Quote a macro name.\n+\tin a diagnostic\n+\t(cp_lexer_stop_debugging): Same.\n+\t(cp_parser_userdef_numeric_literal): Quote a C++ header name\n+\tin a diagnostic.\n+\t(cp_parser_nested_name_specifier_opt): Quote keywords, operators,\n+\tand types in diagnostics.\n+\t(cp_parser_question_colon_clause): Same.\n+\t(cp_parser_asm_definition): Same.\n+\t(cp_parser_init_declarator): Same.\n+\t(cp_parser_template_declaration_after_parameters): Avoid capitalizing\n+\ta sentence in a diagnostic.\n+\t(cp_parser_omp_declare_reduction): Quote keywords, operators, and types\n+\tin diagnostics.\n+\t(cp_parser_transaction): Same.\n+\t* pt.c (maybe_process_partial_specialization): Replace second call\n+\tto permerror with inform for consistency with other uses.\n+\t(expand_integer_pack): Quote keywords, operators, and types\n+\tin diagnostics.\n+\t* rtti.c (get_typeid): Quote keywords, operators, and types\n+\tin diagnostics.\n+\t(build_dynamic_cast_1): Same.\n+\t* semantics.c (finish_asm_stmt): Same.\n+\t(finish_label_decl): Same.\n+\t(finish_bases): Same.\n+\t(finish_offsetof): Same.\n+\t(cp_check_omp_declare_reduction): Same.\n+\t(finish_decltype_type): Same.\n+\t* tree.c (handle_init_priority_attribute): Same.  Add detail\n+\tto diagnostics.\n+\t(maybe_warn_zero_as_null_pointer_constant): Same.\n+\t* typeck.c (cp_build_binary_op): Quote keywords, operators, and types\n+\tin diagnostics.\n+\t(cp_build_unary_op): Same.\n+\t(check_for_casting_away_constness): Same.\n+\t(build_static_cast): Same.\n+\t(build_const_cast_1): Same.\n+\t(maybe_warn_about_returning_address_of_local): Same.\n+\t(check_return_expr): Same.\n+\t* typeck2.c (abstract_virtuals_error_sfinae): Same.\n+\t(digest_init_r): Replace a tab with spaces in a diagnostic.\n+\t(build_functional_cast): Quote keywords, operators, and types\n+\tin diagnostics.\n \n 2019-05-15  Jakub Jelinek  <jakub@redhat.com>\n \n@@ -1489,12 +1497,12 @@\n \tPR c++/47488\n \t* decl.c (reshape_init_array_1): Strip trailing zero-initializers\n \tfrom arrays of trivial type and known size.\n-        * mangle.c (write_expression): Convert braced initializer lists\n-        to STRING_CSTs.\n+\t* mangle.c (write_expression): Convert braced initializer lists\n+\tto STRING_CSTs.\n \t(write_expression): Trim trailing zero-initializers from arrays\n \tof trivial type.\n-        (write_template_arg_literal): Mangle strings the same as braced\n-        initializer lists.\n+\t(write_template_arg_literal): Mangle strings the same as braced\n+\tinitializer lists.\n \n 2019-04-03  Jason Merrill  <jason@redhat.com>\n \n@@ -2174,7 +2182,7 @@\n \t* pt.c (maybe_instantiate_noexcept): Keep error_mark_node.\n \t* typeck2.c (merge_exception_specifiers): Handle error_mark_node.\n \n-2019-02-19  Chung-Lin Tang <cltang@codesourcery.com>\n+2019-02-19  Chung-Lin Tang  <cltang@codesourcery.com>\n \n \tPR c/87924\n \t* parser.c (cp_parser_oacc_clause_wait): Add representation of wait\n@@ -2228,7 +2236,7 @@\n \t* semantics.c (finish_compound_literal): Call\n \tinstantiate_non_dependent_expr_sfinae.\n \n-2019-02-13  Alexandre Oliva <aoliva@redhat.com>\n+2019-02-13  Alexandre Oliva  <aoliva@redhat.com>\n \n \tPR c++/86379\n \t* cp-tree.h (USING_DECL_SCOPE): Use result rather than type.\n@@ -2299,7 +2307,7 @@\n \tinvalid_array_size_error\n \t(build_new): Call valid_array_size_p instead of error.\n \n-2019-02-07  Alexandre Oliva <aoliva@redhat.com>\n+2019-02-07  Alexandre Oliva  <aoliva@redhat.com>\n \n \tPR c++/86218\n \t* call.c (compare_ics): Deal with ck_aggr in either cs.\n@@ -2328,7 +2336,7 @@\n \t* call.c (convert_like_real) <case ck_user>: Call mark_exp_read\n \tinstead of mark_rvalue_use.\n \n-2019-02-05  Alexandre Oliva <aoliva@redhat.com>\n+2019-02-05  Alexandre Oliva  <aoliva@redhat.com>\n \n \tPR c++/87770\n \t* pt.c (instantiates_primary_template_p): New.\n@@ -2429,7 +2437,7 @@\n \tPR c++/89024 - ICE with incomplete enum type.\n \t* call.c (standard_conversion): When converting an\n \tARITHMETIC_TYPE_P to an incomplete type, return NULL.\n-\t\n+\n 2019-01-25  Paolo Carlini  <paolo.carlini@oracle.com>\n \n \tPR c++/88969\n@@ -2533,7 +2541,7 @@\n \t* semantics.c (process_outer_var_ref): Only skip dependent types\n \tin templates.\n \n-2019-01-17  Alexandre Oliva <aoliva@redhat.com>\n+2019-01-17  Alexandre Oliva  <aoliva@redhat.com>\n \n \tPR c++/87768\n \t* cp-tree.h (saved_scope): Add suppress_location_wrappers."}, {"sha": "b2a94ea033a0b612f76490e157216cd729d35dc0", "filename": "gcc/d/ChangeLog", "status": "modified", "additions": 12, "deletions": 12, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab20d992c828450ce4aa869e8995ef2924740fd0/gcc%2Fd%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab20d992c828450ce4aa869e8995ef2924740fd0/gcc%2Fd%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2FChangeLog?ref=ab20d992c828450ce4aa869e8995ef2924740fd0", "patch": "@@ -40,18 +40,18 @@\n \n 2019-05-16  Martin Sebor  <msebor@redhat.com>\n \n-        * d-builtins.cc (d_init_builtins): Quote keywords, operators,\n-        and types in diagnostics.\n-        * d-codegen.cc (get_array_length): Same.  Replace can't with cannot.\n-        * d-convert.cc (convert_expr): Same.\n-        * d-frontend.cc (getTypeInfoType): Quote an option name in\n-        a diagnostic.\n-        * d-lang.cc (d_handle_option): Same.\n-        (d_parse_file): Same.\n-        * decl.cc: Remove a trailing period from a diagnostic.\n-        * expr.cc: Use a directive for an apostrophe.\n-        * toir.cc: Quote keywords, operators, and types in diagnostics.\n-        * typeinfo.cc (build_typeinfo): Quote an option name in a diagnostic.\n+\t* d-builtins.cc (d_init_builtins): Quote keywords, operators,\n+\tand types in diagnostics.\n+\t* d-codegen.cc (get_array_length): Same.  Replace can't with cannot.\n+\t* d-convert.cc (convert_expr): Same.\n+\t* d-frontend.cc (getTypeInfoType): Quote an option name in\n+\ta diagnostic.\n+\t* d-lang.cc (d_handle_option): Same.\n+\t(d_parse_file): Same.\n+\t* decl.cc: Remove a trailing period from a diagnostic.\n+\t* expr.cc: Use a directive for an apostrophe.\n+\t* toir.cc: Quote keywords, operators, and types in diagnostics.\n+\t* typeinfo.cc (build_typeinfo): Quote an option name in a diagnostic.\n \n 2019-04-25  Johannes Pfau  <johannespfau@gmail.com>\n "}, {"sha": "e28e704745fdc7e27626e59283e5b1dc7f3924a6", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 20, "deletions": 16, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab20d992c828450ce4aa869e8995ef2924740fd0/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab20d992c828450ce4aa869e8995ef2924740fd0/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=ab20d992c828450ce4aa869e8995ef2924740fd0", "patch": "@@ -9,7 +9,7 @@\n \tPR fortran/42546\n \t* check.c(gfc_check_allocated): Add comment pointing to ...\n  \t* intrinsic.c(sort_actual): ... the checking done here.\n- \n+\n 2019-08-05  Steven g. Kargl  <kargl@gcc.gnu.org>\n \n \tPR fortran/91372\n@@ -19,11 +19,11 @@\n 2019-08-04  Steven G. Kargl  <kargl@gcc.gnu.org>\n \n \tPR fortran/88227\n-\t* check.c (oct2bin):  New function.  Convert octal string to binary.\n+\t* check.c (oct2bin): New function.  Convert octal string to binary.\n \t(hex2bin): New function.  Convert hexidecimal string to binary.\n \t(bin2real): New function.  Convert binary string to REAL.  Use\n \toct2bin and hex2bin.\n-\t(gfc_boz2real):  Use fallback conversion bin2real.\n+\t(gfc_boz2real): Use fallback conversion bin2real.\n \n 2019-08-02  Steven G. Kargl  <kargl@gcc.gnu.org>\n \n@@ -111,11 +111,11 @@\n \t(gfc_check_cmplx): Re-organize to check kind, if present, first.\n \tConvert BOZ real and/or imaginary parts as needed in accordance to\n \tF2018.\n-\t(gfc_check_complex):  Use gfc_invalid_boz.  Convert BOZ as needed.\n+\t(gfc_check_complex): Use gfc_invalid_boz.  Convert BOZ as needed.\n \t(gfc_check_dcmplx, gfc_check_dble ): Convert BOZ as needed.\n-\t(gfc_check_dshift):  Make dshift[lr] conform to F2018 standard.\n+\t(gfc_check_dshift): Make dshift[lr] conform to F2018 standard.\n  \tgfc_check_float (gfc_expr *a)\n-\t(gfc_check_iand_ieor_ior):  Make IAND, IEOR, and IOR conform to\n+\t(gfc_check_iand_ieor_ior): Make IAND, IEOR, and IOR conform to\n \tF2018 standard.\n \t(gfc_check_int): Conform to F2018 standard.\n \t(gfc_check_intconv): Deprecate SHORT and LONG aliases for INT2 and\n@@ -288,7 +288,7 @@\n 2019-06-19  Steven G. Kargl  <kargl@gcc.gnu.org>\n \n \tPR fortran/69499\n-\t* match.c (gfc_match_select_type):  SELECT TYPE is an executable\n+\t* match.c (gfc_match_select_type): SELECT TYPE is an executable\n \tstatement, and cannot appear in MODULE or SUBMODULE scope.\n \n 2019-06-19  Steven G. Kargl  <kargl@gcc.gnu.org>\n@@ -405,7 +405,7 @@\n \tonly checking the reference chain.\n \n 2019-06-08  Thomas Koenig  <tkoenig@gcc.gnu.org>\n-\tTom\u00e1\u0161 Trnka  <trnka@scm.com>\n+\t    Tom\u00e1\u0161 Trnka  <trnka@scm.com>\n \n \tPR fortran/90744\n \t* trans-types.c (get_formal_from_actual_arglist): Unset typespec\n@@ -610,7 +610,7 @@\n \t* module.c (write_module): Initialize module_column before writing\n \tmodule to ensure line break occurs at correct column.\n \n-2019-05-01 Dominique d'Humieres  <dominiq@gcc.gnu.org>\n+2019-05-01  Dominique d'Humieres  <dominiq@gcc.gnu.org>\n \n \tPR fortran/60144\n \t* match.c (gfc_match_parens): Change the location for missing ')'.\n@@ -730,7 +730,7 @@\n \n 2019-03-31  Thomas Koenig  <tkoenig@gcc.gnu.org>\n \n-\t* dump-parse-tree.c (debug):  Add for symbol_attribute *,\n+\t* dump-parse-tree.c (debug): Add for symbol_attribute *,\n \tsymbol_attribute and gfc_ref * arguments.\n \n 2019-03-30  Paul Thomas  <pault@gcc.gnu.org>\n@@ -991,7 +991,7 @@\n 2019-03-09  Thomas K\u00f6nig  <tkoenig@gcc.gnu.org>\n \n \tPR fortran/71203\n-\t* decl.c (add_init_expr_to_sym):  Add shape if init has none.  Add\n+\t* decl.c (add_init_expr_to_sym): Add shape if init has none.  Add\n \tasserts that it has to be an EXPR_ARRAY in this case.\n \n 2019-03-08  Jakub Jelinek  <jakub@redhat.com>\n@@ -1054,6 +1054,10 @@\n \tthe actual arglist has no expression, the corresponding\n \tformal arglist is an alternate return.\n \n+2019-02-26  Uro\u0161 Bizjak  <ubizjak@gmail.com>\n+\n+\t* invoke.texi (-ffpe-trap): Use @var for every item in the list.\n+\n 2019-02-26  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR fortran/43210\n@@ -1086,7 +1090,7 @@\n \t* class.c (find_intrinsic_vtab): Likewise.\n \t* simplify.c (gfc_simplify_sizeof): Likewise.\n \n-2019-02-23  Jerry DeLisle <jvdelisle@gcc.gnu.org>\n+2019-02-23  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n \n \tPR fortran/84387\n \t* trans-io.c (transfer_expr): Do not return if there are no\n@@ -1236,7 +1240,7 @@\n 2019-02-17  Thomas Koenig  <tkoenig@gcc.gnu.org>\n \n \tPR fortran/71066\n-\t* trans-decl.c (generate_coarray_sym_init):  For an array\n+\t* trans-decl.c (generate_coarray_sym_init): For an array\n \tconstructor in a DATA statement of a coarray variable, set the\n \trank to 1 to avoid confusion later on.  If the constructor\n \tcontains only one value, use that for initiailizig.\n@@ -1422,7 +1426,7 @@\n \t* io.c (match_io_element): input-item cannot be an external function.\n \n 2018-01-19  Thomas Koenig  <tkoenig@gcc.gnu.org>\n-\tPaul Thomas  <pault@gcc.gnu.org>\n+\t    Paul Thomas  <pault@gcc.gnu.org>\n \n \tPR fortran/56789\n \t* trans-expr.c (gfc_conv_procedure_call): Call\n@@ -1578,8 +1582,8 @@\n \tdirectly build the expected GENERIC tree.\n \n 2019-01-07  Thomas Koenig  <tkoenig@gcc.gnu.org>\n-\tHarald Anlauf <anlauf@gmx.de>\n-\tTobias Burnus <burnus@gcc.gnu.org>\n+\t    Harald Anlauf  <anlauf@gmx.de>\n+\t    Tobias Burnus  <burnus@gcc.gnu.org>\n \n \tPR fortran/45424\n \t* check.c (gfc_check_is_contiguous): New function."}, {"sha": "9413c20ed99d21395fd53f5724c3bc0923625802", "filename": "gcc/go/ChangeLog", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab20d992c828450ce4aa869e8995ef2924740fd0/gcc%2Fgo%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab20d992c828450ce4aa869e8995ef2924740fd0/gcc%2Fgo%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgo%2FChangeLog?ref=ab20d992c828450ce4aa869e8995ef2924740fd0", "patch": "@@ -51,10 +51,10 @@\n \n 2019-02-05  Nikhil Benesch  <nikhil.benesch@gmail.com>\n \n-        PR go/89019\n-        * go-gcc.cc (Gcc_backend::placeholder_struct_type): Mark\n-        placeholder structs as requiring structural equality.\n-        (Gcc_backend::set_placeholder_pointer_type): Propagate the\n+\tPR go/89019\n+\t* go-gcc.cc (Gcc_backend::placeholder_struct_type): Mark\n+\tplaceholder structs as requiring structural equality.\n+\t(Gcc_backend::set_placeholder_pointer_type): Propagate the\n \tcanonical type from the desired pointer type to the placeholder\n \tpointer type.\n \n@@ -952,7 +952,7 @@\n 2013-11-22  Andrew MacLeod  <amacleod@redhat.com>\n \n \t* go-gcc.cc: Add required include files from gimple.h.\n-\t* go-lang.c: Likewise\n+\t* go-lang.c: Likewise.\n \n 2013-11-18  Richard Sandiford  <rdsandiford@googlemail.com>\n "}, {"sha": "256e93ecec6f71aeadf51b05324e8a89423e8f39", "filename": "gcc/jit/ChangeLog", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab20d992c828450ce4aa869e8995ef2924740fd0/gcc%2Fjit%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab20d992c828450ce4aa869e8995ef2924740fd0/gcc%2Fjit%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjit%2FChangeLog?ref=ab20d992c828450ce4aa869e8995ef2924740fd0", "patch": "@@ -1,4 +1,4 @@\n-2019-07-22  Andrea Corallo <andrea.corallo@arm.com>\n+2019-07-22  Andrea Corallo  <andrea.corallo@arm.com>\n \n \t* jit-recording.c (unary_op_reproducer_strings): Make it extern.\n \t(binary_op_reproducer_strings): Likewise.\n@@ -8,12 +8,12 @@\n \tnumeric type.\n \t* libgccjit.c (gcc_jit_context_new_binary_op): Improve error message.\n \n-2019-07-04  Andrea Corallo <andrea.corallo@arm.com>\n+2019-07-04  Andrea Corallo  <andrea.corallo@arm.com>\n \n \t* libgccjit.c (gcc_jit_context_new_binary_op): Check result_type to be a\n \tnumeric type.\n \n-2019-07-04  Andrea Corallo <andrea.corallo@arm.com>\n+2019-07-04  Andrea Corallo  <andrea.corallo@arm.com>\n \n \t* docs/topics/compatibility.rst (LIBGCCJIT_ABI_12): New ABI tag.\n \t* docs/topics/types.rst: Add gcc_jit_context_new_bitfield.\n@@ -50,7 +50,7 @@\n \t* jit-recording.c (reproducer::m_set_identifiers): Use false as Lazy\n \tin hash_set template param.\n \n-2019-02-05  Andrea Corallo <andrea.corallo@arm.com>\n+2019-02-05  Andrea Corallo  <andrea.corallo@arm.com>\n \n \t* docs/topics/compatibility.rst (LIBGCCJIT_ABI_11): New ABI tag.\n \t* docs/topics/contexts.rst (Additional driver options): New"}, {"sha": "d150bf61ce401580a9d750f572cc427f93a52602", "filename": "gcc/lto/ChangeLog", "status": "modified", "additions": 131, "deletions": 134, "changes": 265, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab20d992c828450ce4aa869e8995ef2924740fd0/gcc%2Flto%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab20d992c828450ce4aa869e8995ef2924740fd0/gcc%2Flto%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flto%2FChangeLog?ref=ab20d992c828450ce4aa869e8995ef2924740fd0", "patch": "@@ -71,6 +71,11 @@\n \t(dump_list_functions): Release memory.\n \t(dump_list_variables): Likewise.\n \n+2019-06-25  Jozef Lawrynowicz  <jozef.l@mittosystems.com>\n+\n+\t* lto-lang.c (lto_build_c_type_nodes): Accept \"__intN__\"\n+\tformat of \"__intN\" types for SIZE_TYPE.\n+\n 2019-06-24  Jan Hubicka  <jh@suse.cz>\n \n \t* lto-common.c (compare_tree_sccs_1): Compare CXX_ODR_P;\n@@ -82,8 +87,8 @@\n \n 2019-05-16  Martin Sebor  <msebor@redhat.com>\n \n-        * lto-dump.c (lto_main): Same.\n-        * lto.c (stream_out): Same.\n+\t* lto-dump.c (lto_main): Same.\n+\t* lto.c (stream_out): Same.\n \n 2019-05-10  Martin Liska  <mliska@suse.cz>\n \n@@ -215,7 +220,7 @@\n \n 2018-10-26  Jan Hubicka  <jh@suse.cz>\n \n-\t* lto/lto-symtab.c (lto_symtab_merge_decls_2): Fix extra space.\n+\t* lto-symtab.c (lto_symtab_merge_decls_2): Fix extra space.\n \n 2018-10-17  David Malcolm  <dmalcolm@redhat.com>\n \n@@ -240,7 +245,7 @@\n \n 2018-08-21  Tom de Vries  <tdevries@suse.de>\n \n-\t* lto.c (lto_main):  Call debuginfo_early_start and\n+\t* lto.c (lto_main): Call debuginfo_early_start and\n \tdebuginfo_early_stop.\n \n 2018-07-20  Martin Sebor  <msebor@redhat.com>\n@@ -598,7 +603,7 @@\n \t* lto-lang.c (lto_init): Set in_lto_p earlier.\n \n 2017-04-12  Richard Biener  <rguenther@suse.de>\n-\tBernd Edlinger  <bernd.edlinger@hotmail.de>\n+\t    Bernd Edlinger  <bernd.edlinger@hotmail.de>\n \n \tPR middle-end/79671\n \t* lto.c (compare_tree_sccs_1): Compare TYPE_TYPELESS_STORAGE.\n@@ -704,7 +709,7 @@\n 2016-06-10  Martin Sebor  <msebor@redhat.com>\n \n \tPR c/71392\n-\t* gcc/lto/lto-lang.c (handle_nonnull_attribute): Accept the nonnull\n+\t* lto-lang.c (handle_nonnull_attribute): Accept the nonnull\n \tattribute in type-generic builtins.\n \n 2016-05-16  Jan Hubicka  <hubicka@ucw.cz>\n@@ -1047,7 +1052,6 @@\n \n 2015-06-08  Jan Hubicka  <hubicka@ucw.cz>\n \n-\n \t* lto.c (hash_canonical_type): Do not hash TREE_CODE of TREE_TYPE of\n \tpointers.\n \n@@ -1253,7 +1257,7 @@\n \t    Andrey Turetskiy  <andrey.turetskiy@intel.com>\n \t    Michael Zolotukhin  <michael.v.zolotukhin@intel.com>\n \n-\t* lto/lto.c (read_cgraph_and_symbols): Call input_offload_tables.\n+\t* lto.c (read_cgraph_and_symbols): Call input_offload_tables.\n \n 2014-11-13  Ilya Verbin  <ilya.verbin@intel.com>\n \t    Ilya Tocar  <ilya.tocar@intel.com>\n@@ -1407,7 +1411,7 @@\n \n 2014-07-11  Jan Hubicka  <hubicka@ucw.cz>\n \n-\t* lto-partition.c (add_references_to_partition): Use \n+\t* lto-partition.c (add_references_to_partition): Use\n \tvarpool_ctor_useable_for_folding_p.\n \t* lto.c (lto_read_in_decl_state): Update sanity check.\n \n@@ -1438,11 +1442,11 @@\n \n 2014-06-25  Martin Liska  <mliska@suse.cz>\n \n-\t* lto/lto-partition.c (add_references_to_partition): New IPA REF function\n+\t* lto-partition.c (add_references_to_partition): New IPA REF function\n \tused.\n \t(add_symbol_to_partition_1): Likewise.\n \t(lto_balanced_map): Likewise.\n-\t* lto/lto-symtab.c (lto_cgraph_replace_node): Likewise.\n+\t* lto-symtab.c (lto_cgraph_replace_node): Likewise.\n \n 2014-06-24  Jan Hubicka  <hubicka@ucw.cz>\n \n@@ -1563,7 +1567,7 @@\n \n 2014-04-14  Jan Hubicka  <hubicka@ucw.cz>\n \n-\t* lto/lto-symtab.c (lto_cgraph_replace_node): Don't re-merge\n+\t* lto-symtab.c (lto_cgraph_replace_node): Don't re-merge\n \ttp_first_run.\n \n 2014-03-19  Jan Hubicka  <hubicka@ucw.cz>\n@@ -1574,7 +1578,7 @@\n 2014-03-19  Richard Biener  <rguenther@suse.de>\n \n \tPR middle-end/60553\n-\t* lto-tree.h (lang_tree_node): For types use TYPE_NEXT_VARIANT \n+\t* lto-tree.h (lang_tree_node): For types use TYPE_NEXT_VARIANT\n \tinstead of TREE_CHAIN as chain_next.\n \n 2014-03-19  Richard Biener  <rguenther@suse.de>\n@@ -1669,7 +1673,7 @@\n \n 2014-02-04  Jan Hubicka  <hubicka@ucw.cz>\n \n-\t* lto-partition.c (get_symbol_class): Only unforced DECL_ONE_ONLY \n+\t* lto-partition.c (get_symbol_class): Only unforced DECL_ONE_ONLY\n \tneeds duplicating, not generic COMDAT.\n \n 2014-02-04  Richard Biener  <rguenther@suse.de>\n@@ -1727,10 +1731,10 @@\n 2013-11-22  Andrew MacLeod  <amacleod@redhat.com>\n \n \t* lto.c: Add required include files from gimple.h.\n-\t* lto-lang.c: Likewise\n-\t* lto-object.c: Likewise\n-\t* lto-partition.c: Likewise\n-\t* lto-symtab.c: Likewise\n+\t* lto-lang.c: Likewise.\n+\t* lto-object.c: Likewise.\n+\t* lto-partition.c: Likewise.\n+\t* lto-symtab.c: Likewise.\n \n 2013-11-18  Trevor Saunders  <tsaunders@mozilla.com>\n \n@@ -1842,8 +1846,8 @@\n \n 2013-10-29  Andrew MacLeod  <amacleod@redhat.com>\n \n-\t* lto/lto-object.c: Add gimple.h to include list.\n-\t* lto/lto-partition.c: Likewise.\n+\t* lto-object.c: Add gimple.h to include list.\n+\t* lto-partition.c: Likewise.\n \n 2013-10-18  Andrew MacLeod  <amacleod@redhat.com>\n \n@@ -1928,7 +1932,7 @@\n \n 2013-08-31  Jan Hubicka  <jh@suse.cz>\n \n-\t* lto.c (mentions_vars_p_field_decl, lto_fixup_prevailing_decls): \n+\t* lto.c (mentions_vars_p_field_decl, lto_fixup_prevailing_decls):\n \tDECL_FIELD_OFFSET can contain an reference to variable.\n \n 2013-08-31  Jan Hubicka  <jh@suse.cz>\n@@ -1990,7 +1994,7 @@\n 2013-08-06  Jan Hubicka  <jh@suse.cz>\n \t    Martin Liska  <marxin.liska@gmail.com>\n \n-\t* lto-partition.c (lto_balanced_map): Always base order on \n+\t* lto-partition.c (lto_balanced_map): Always base order on\n \tsource file order.\n \n 2013-08-06  Jan Hubicka  <jh@suse.cz>\n@@ -2226,7 +2230,7 @@\n \n 2012-10-08  Jan Hubicka  <jh@suse.cz>\n \n-\t* lto/lto.c (remember_with_vars): Also fixup INTEGER_CST.\n+\t* lto.c (remember_with_vars): Also fixup INTEGER_CST.\n \t(fixup_integer_cst): New functoin.\n \t(lto_ft_type): Fixup BASETYPE of methods and offsets.\n \n@@ -2238,7 +2242,7 @@\n \n 2012-10-06  Jan Hubicka  <jh@suse.cz>\n \n-\tPR lto/54790 \n+\tPR lto/54790\n \t* lto.c (resolution_map): New static var.\n \t(register_resolution): New function.\n \t(lto_register_var_decl_in_symtab): Use it.\n@@ -2251,7 +2255,7 @@\n \n 2012-09-19  Dehao Chen  <dehao@google.com>\n \n-\t* lto/lto.c (lto_fixup_prevailing_decls): Remove tree.exp.block field.\n+\t* lto.c (lto_fixup_prevailing_decls): Remove tree.exp.block field.\n \n 2012-09-19  Jan Hubicka  <jh@suse.cz>\n \n@@ -2382,10 +2386,10 @@\n \n 2012-06-18  Lawrence Crowl  <crowl@google.com>\n \n-\t* lto.c (do_whole_program_analysis):  Rename use of TV_PHASE_CGRAPH to\n+\t* lto.c (do_whole_program_analysis): Rename use of TV_PHASE_CGRAPH to\n \tTV_PHASE_OPT_GEN.  Use new timevar TV_PHASE_STREAM_OUT around the call\n \tto lto_wpa_write_files.\n-\t(lto_main):  Rename use of TV_PHASE_CGRAPH to TV_PHASE_OPT_GEN.  Move\n+\t(lto_main): Rename use of TV_PHASE_CGRAPH to TV_PHASE_OPT_GEN.  Move\n \tstart of TV_PHASE_OPT_GEN to include call to materialize_cgraph.  Use\n \tTV_PHASE_SETUP for the call to lto_init.  Use new timevar\n \tTV_PHASE_STREAM_IN around the call to read_cgraph_and_symbols.\n@@ -2629,7 +2633,6 @@\n \t(promote_fn): Likewise.\n \t(lto_promote_cross_file_statics): Update comment.\n \n-\n 2011-06-07  Diego Novillo  <dnovillo@google.com>\n \n \t* lto.c (uniquify_nodes): Move code to register decls to\n@@ -2813,7 +2816,7 @@\n \n 2011-03-25  Jeff Law  <law@redhat.com>\n \n-\t* lto/lto-lang.c (def_fn_type): Add missing va_end.\n+\t* lto-lang.c (def_fn_type): Add missing va_end.\n \n 2011-03-21  Kai Tietz  <ktietz@redhat.com>\n \n@@ -2981,7 +2984,7 @@\n \n 2010-10-05  Jan Hubicka  <jh@suse.cz>\n \n-\t* lto.c:  Include params.h.\n+\t* lto.c: Include params.h.\n \t(add_cgraph_node_to_partition, add_varpool_node_to_partition): Do\n \trefcounting in aux field.\n \t(undo_partition, partition_cgraph_node_p, partition_varpool_node_p):\n@@ -3035,7 +3038,7 @@\n 2010-09-16  Jan Hubicka  <jh@suse.cz>\n \n \t* lto.c (lto_materialize_function): Do not tamper with STATIC and\n-\tEXTERNAL flags. \n+\tEXTERNAL flags.\n \n 2010-09-15  Laurynas Biveinis  <laurynas.biveinis@gmail.com>\n \n@@ -3162,7 +3165,7 @@\n \n 2010-06-09  Kai Tietz  <kai.tietz@onevision.com>\n \n-\t* lto.c (lto_resolution_read):  Pre-initialize local variable r.\n+\t* lto.c (lto_resolution_read): Pre-initialize local variable r.\n \t* lto-coff.c (coff_write_object_file): Add braces to if.\n \n 2010-06-08  Laurynas Biveinis  <laurynas.biveinis@gmail.com>\n@@ -3316,7 +3319,6 @@\n \t'long long unsigned int' for x64-windows.\n \t(lto_init): Likewise.\n \n-\n 2010-05-07  Steven Bosscher  <steven@gcc.gnu.org>\n \n \t* lto.h (struct lto_file_struct): Document offset member.\n@@ -3368,12 +3370,12 @@\n \n 2010-04-28  Jan Hubicka  <jh@suse.cz>\n \n-\t* lto/lto.c (lto_read_in_decl_state): Use GGC.\n+\t* lto.c (lto_read_in_decl_state): Use GGC.\n \t(lto_wpa_write_files): Announce what we are writting.\n \t(all_file_decl_data): New.\n \t(read_cgraph_and_symbols): Use GGC; correct timevars.\n \t(do_whole_program_analysis): Collect.\n-\t* lto/Make-lang.in (lto.o): Fix dependency.\n+\t* Make-lang.in (lto.o): Fix dependency.\n \t* Makefile.in (GTFILES): Add lto-streamer.h.\n \t* varpool.c (varpool_analyze_pending_decls): Use TV_VARPOOL.\n \t(varpool_assemble_pending_decls): Use VAROUT.\n@@ -3494,7 +3496,7 @@\n \t* lto.c (O_BINARY): Define.\n \t(lto_read_section_data): Open file in binary mode.\n \t* lto-elf.c (O_BINARY): Define.\n-\t(lto_elf_file_open): Open file in binary mode. \n+\t(lto_elf_file_open): Open file in binary mode.\n \n 2010-01-08  Richard Guenther  <rguenther@suse.de>\n \n@@ -4054,7 +4056,7 @@\n \n 2009-01-29  Ramana Radhakrishnan  <ramana.r@gmail.com>\n \n-\t* Make-lang.in (LTO_EXE): Link with all \n+\t* Make-lang.in (LTO_EXE): Link with all\n \tBACKENDLIBS and not only GMPLIBS\n \n 2009-01-28  H.J. Lu  <hongjiu.lu@intel.com>\n@@ -4178,17 +4180,17 @@\n \n 2008-11-09  Diego Novillo  <dnovillo@google.com>\n \n-\t* lto/lto.c (lto_fixup_tree): Change error message locus\n+\t* lto.c (lto_fixup_tree): Change error message locus\n \tinformation to include location of mismatching\n \tdeclaration.\n \tUse TREE_NO_WARNING to avoid repeated messages.\n \t(lto_main): If lto_fixup_decls emitted any errors, exit.\n-\t* lto/lto-lang.c: Don't include libfuncs.h and except.h\n+\t* lto-lang.c: Don't include libfuncs.h and except.h\n \t(lto_init_options): Don't enable exceptions by default.\n \t(lto_eh_runtime_type): Move to lto-function-in.c\n \t(lto_init_eh): Likewise.\n \t(lto_init): Don't call lto_init_eh.\n-\t* lto/Make-lang.in (lto-lang.o): Remove dependency on\n+\t* Make-lang.in (lto-lang.o): Remove dependency on\n \tlibfuncs.h and except.h.\n \n 2008-10-30  Diego Novillo  <dnovillo@google.com>\n@@ -4221,16 +4223,16 @@\n \tinput_cgraph): Move to lto-cgraph.c in gcc directory above.\n \t(LANG_HOOKS_INPUT_CGRAPH): Remove use of macro.\n \n-2008-10-24 Rafael Espindola  <espindola@google.com>\n+2008-10-24  Rafael Espindola  <espindola@google.com>\n \n \t* lto-function-in.c (get_resolution): Return LDPR_PREEMPTED_IR for\n \tnon prevailing weak symbols.\n \n-2008-10-24 Rafael Espindola  <espindola@google.com>\n+2008-10-24  Rafael Espindola  <espindola@google.com>\n \n \t* lto-lang.c (input_cgraph_1): Iterate over nodes, not cgraph_nodes.\n \n-2008-10-24 Rafael Espindola  <espindola@google.com>\n+2008-10-24  Rafael Espindola  <espindola@google.com>\n \n \t* lto-lang.c (input_node): Avoid casts from pointers to ints of\n \tdifferent types.\n@@ -4254,7 +4256,7 @@\n \texceptions flag is given.\n \t* lto-lang.c: (lto_init_options) Set default exceptions flag.\n \t(lto_init_eh): Remove exceptions flag initialization.\n-\t(lto_init): Only call lto_init_eh if exceptions flag is set. \n+\t(lto_init): Only call lto_init_eh if exceptions flag is set.\n \n 2008-10-21  Diego Novillo  <dnovillo@google.com>\n \n@@ -4319,7 +4321,7 @@\n \twalking of nodes except for DECLs to be replaced.  Pass an\n \tlto_fixup_data_t object to tree-walker.\n \n-2008-10-08 Rafael Espindola  <espindola@google.com>\n+2008-10-08  Rafael Espindola  <espindola@google.com>\n \n \t* lto-symtab.c (lto_symtab_set_resolution): New.\n \t(lto_symtab_merge_decl): Use lto_symtab_set_resolution and\n@@ -4328,18 +4330,18 @@\n \t(lto_symtab_get_resolution): New.\n \t* lto.c (lto_fixup_tree, lto_fixup_state): Remove unecessary checks.\n \n-2008-10-06 Rafael Espindola  <espindola@google.com>\n+2008-10-06  Rafael Espindola  <espindola@google.com>\n \n \t* lto-lang.c: Include cgraph.h.\n \t(input_overwrite_node, input_node, input_edge, input_cgraph_1,\n \tinput_cgraph): Moved from lto-cgraph.c.\n \t(LANG_HOOKS_INPUT_CGRAPH): New.\n \n-2008-10-03 Rafael Espindola  <espindola@google.com>\n+2008-10-03  Rafael Espindola  <espindola@google.com>\n \n \t* lto.c (lto_fixup_tree, lto_fixup_state): Fix the FIXME.\n \n-2008-10-03 Rafael Espindola  <espindola@google.com>\n+2008-10-03  Rafael Espindola  <espindola@google.com>\n \n \t* lto-symtab.c (lto_symtab_overwrite_decl): Remove. Remove all calls.\n \t(lto_symtab_merge_decl): Update  LTO_IDENTIFIER_DECL the reflect the\n@@ -4359,13 +4361,13 @@\n \t* lto-lang.c (lto_post_options): Add validation and fixups for\n \t-fltrans and -fwpa.\n \n-2008-10-02 Rafael Espindola  <espindola@google.com>\n+2008-10-02  Rafael Espindola  <espindola@google.com>\n \n \t* lto-symtab.c (lto_symtab_merge_var, lto_symtab_merge_fn,\n \tlto_symtab_merge_decl): Return void.\n \t(lto_symtab_prevailing_decl): New.\n \n-2008-09-30 Rafael Espindola  <espindola@google.com>\n+2008-09-30  Rafael Espindola  <espindola@google.com>\n \n \t* lto-symtab.c (lto_symtab_compatible): Remove the check for already\n \tdefined symbols.\n@@ -4376,7 +4378,7 @@\n \t(LTO_IDENTIFIER_RESOLUTION): Remove.\n \t(LTO_DECL_RESOLUTION): New.\n \n-2008-09-30 Rafael Espindola  <espindola@google.com>\n+2008-09-30  Rafael Espindola  <espindola@google.com>\n \n \t* lto.c (lto_read_decls): Use new input_tree signature.\n \n@@ -4385,7 +4387,7 @@\n \t* lto.c (lto_main): Call lto_fixup_nothrow_decls to fix up function\n \tbodies affected by exception attribute merging of DECLs.\n \t* lto-symtab.c (lto_symtab_merge_decl): Handle exception attribute\n-\tmerging. \n+\tmerging.\n \n 2008-09-25  Rafael Espindola  <espindola@google.com>\n \n@@ -4404,7 +4406,7 @@\n \t* lang.opt (fltrans-output-list=): New option.\n \t* lto.c (lto_execute_ltrans): Output file names to ltrans_output_list.\n \n-2008-09-25 Rafael Espindola  <espindola@google.com>\n+2008-09-25  Rafael Espindola  <espindola@google.com>\n \n \t* lto.c (lto_resolution_read): Initialize ret;\n \n@@ -4423,7 +4425,7 @@\n \t* Make-lang.in (LTRANS_DRIVER_INSTALL_NAME): New variable.\n \t(lto.install-common): Add lto/ltrans-driver.\n \n-2008-09-24 Rafael Espindola  <espindola@google.com>\n+2008-09-24  Rafael Espindola  <espindola@google.com>\n \n \t* Make-lang.in (LTO_OBJS): Add lto/common.o.\n \t(lto/lto.o): Depend on lto/common.h.\n@@ -4444,12 +4446,12 @@\n \tRead resolution.\n \t* lto.h (resolution_file_name): New.\n \n-2008-09-23 Rafael Espindola  <espindola@google.com>\n+2008-09-23  Rafael Espindola  <espindola@google.com>\n \n \t* common.c: Update description.\n \t* common.h: Update description.\n \n-2008-09-23 Rafael Espindola  <espindola@google.com>\n+2008-09-23  Rafael Espindola  <espindola@google.com>\n \n \t* common.c: Moved from lto-plugin.\n \t* common.h: Moved from lto-plugin.\n@@ -4504,10 +4506,10 @@\n \t* lto-lang.c: Include header file expr.h.\n \t(COMPOUND_LITERAL_EXPR_DECL_STMT,\n \tCOMPOUND_LITERAL_EXPR_DECL): Copied from c-common.h.\n-\t(emit_local_var):  Copied from c-semantics.c.\n+\t(emit_local_var): Copied from c-semantics.c.\n \t(lto_expand_expr, lto_staticp): Copied from c_expand_expr\n \tand c_staticp in c-common.c.\n-\t(LANG_HOOKS_EXPAND_EXPR,LANG_HOOKS_STATICP):  Redefined.\n+\t(LANG_HOOKS_EXPAND_EXPR,LANG_HOOKS_STATICP): Redefined.\n \n 2008-09-08  Diego Novillo  <dnovillo@google.com>\n \n@@ -4521,7 +4523,7 @@\n 2008-08-04  Bill Maddox  <maddox@google.com>\n \n \t* lto-symtab.c (lto_symtab_merge_decl): Add comment.\n-\t\n+\n 2008-09-03  Doug Kwan  <dougkwan@google.com>\n \n \tlto.c (lto_add_all_inlinees): Reset FAILED_REASON of edges to\n@@ -4577,7 +4579,7 @@\n \t(lto_1_to_1_map, lto_add_all_inlinees, lto_wpa_write_files):\n \tNew functions.\n \t(lto_main): Initialize bitmap obstack.  Add code to handle WPA mode.\n-\t* Make-lang.in (LTO_H): Replace filename lto-section-in.h with \n+\t* Make-lang.in (LTO_H): Replace filename lto-section-in.h with\n \tvariable LTO_SECTION_IN_H.\n \t(lto/lto.o): Include gt-lto-lto-c.h ggc.h ,VEC_H, BITMAP_H,\n \tpointer-set.h and IPA_PROP_H. Also replace filename lto-section-in.h\n@@ -4593,12 +4595,12 @@\n \tasserting.\n \t(lto_post_options): Suppress debug info generation.\n \t* Make-lang.in: Add dependency of lto-lang.o on tree-gimple.h.\n-\t\n+\n 2008-08-25  Bill Maddox  <maddox@google.com>\n \n \t* lto-symtab.c (lto_symtab_merge_decl): Remove a suspect\n \tassertion and leave an explanatory comment in its place.\n-\t\n+\n 2008-08-21  Doug Kwan  <dougkwan@google.com>\n \n \t* lto.c (preload_common_nodes): Call lto_get_common_nodes to get a list\n@@ -4628,21 +4630,21 @@\n \t* lto.h (struct lto_file_struct): Remove GTY marker.\n \t* config-lang.in: Remove lto/lto.h and lto/lto.c from\n \tgtfiles.\n-\t\n+\n 2008-08-20  Bill Maddox  <maddox@google.com>\n \n \t* lto.c (lto_read_decls): Provide dummy argument to input_tree\n \tto conform to its new signature.\n \t* lto-symtab.c (lto_symtab_merge_decl): Do not invoke ggc_free\n \ton discarded node here, now called in global_vector_fixup.\n-\t\n+\n 2008-08-09  Bill Maddox  <maddox@google.com>\n \n \t* lto.c (preload_common_nodes): Verify that fileptr_type_node\n \thas not been set to a front-end-specific value.\n-\t\n+\n 2008-08-05  Doug Kwan  <dougkwan@google.com>\n-\t\n+\n \t* Make-lang.in (lto-symtab.o): Add missing dependencies to fix\n \tbuild breakage.\n \n@@ -4680,14 +4682,14 @@\n \t* lto.c (lto_read_decls): Fix C++ compatibility warnings.\n \tMake code const-correct.\n \t(lto_file_read): Fix C++ compatibility warnings.\n-\t(lto_read_section_data):  Fix C++ compatibility warnings.\n+\t(lto_read_section_data): Fix C++ compatibility warnings.\n \t(lto_get_section_data): Use CONST_CAST to avoid warning when\n \tconst pointer passed to free.\n \t* lto-elf.c (lto_elf_build_section_table): Fix C++\n \tcompatibility warnings.\n-\t(lto_elf_append_data):  Fix C++ compatibility warnings.  Use CONST_CAST\n+\t(lto_elf_append_data): Fix C++ compatibility warnings.  Use CONST_CAST\n \tto avoid warning assigning const pointer to d_buf field of Elf_Data.\n-\t(lto_get_current_out_file):  Fix C++ compatibility warnings.\n+\t(lto_get_current_out_file): Fix C++ compatibility warnings.\n \n 2008-07-11  Diego Novillo  <dnovillo@google.com>\n \n@@ -4861,7 +4863,7 @@\n \n 2008-06-07  Kenneth Zadeck  <zadeck@naturalbridge.com>\n \t    Jan Hubicka  <jh@suse.cz>\n-\t\n+\n \t* lto.c (sys/mman.h, tree-pass.h): New includes.\n \t(lto_materialize_constructors_and_inits,\n \tlto_materialize_function): Keeps length of section.\n@@ -4873,12 +4875,12 @@\n \t(lto_read_section_data, get_section_data, free_section_data): New\n \tfunctions.\n \t(lto_main): Now calls pass manager, sets the hooks so that the ipa\n-\tpasses can get the section data. \n-\t\n+\tpasses can get the section data.\n+\n 2008-05-27  Kenneth Zadeck  <zadeck@naturalbridge.com>\n \n \t* lto.h (lto_read_decls): Made local.\n-\t(lto_input_function_body, lto_input_constructors_and_inits, \n+\t(lto_input_function_body, lto_input_constructors_and_inits,\n \tlto_input_cgraph): Declarations moved to lto-section-in.h.\n \t* lto-section-in.c: Moved to .. .\n \t* lto-cgraph-in.c: Ditto.\n@@ -4889,7 +4891,7 @@\n \t(LANG_HOOKS_INSERT_BLOCK): Removed.\n \t* Make-lang.in (lto-cgraph-in.o, lto-function-in.o,\n \tlto-section-in.o): Rules moved to lto/Makefile.in.\n-\t\n+\n \n 2008-05-16  Ollie Wild  <aaw@google.com>\n \n@@ -4970,7 +4972,7 @@\n \t(lto_file_read): Made local and initialize dictionary so that\n \tother lto sections can be read without reprocessing the elf file.\n \t(lto_main): Read all functions after all files have been processed\n-\tfor their types, globals and cgraph.  \n+\tfor their types, globals and cgraph.\n \t* Make-lang.in (lto.o, lto-cgraph-in.c, lto-section-in): Changed\n \tdependencies.\n \t* lto-elf.c (lto_elf_file): Removed strtab, symtab fields.\n@@ -4980,7 +4982,7 @@\n \t* lto.h (lto_info_fd_struct): Removed unmaterialized_fndecls.\n \t(lto_file_read): Made local.\n \t(lto_get_file_name, lto_elf_build_section_table,\n-\tlto_input_cgraph): \n+\tlto_input_cgraph):\n \tNew function.\n \t* lto-section-in.c (lto_read_section_data, lto_get_section_data):\n \tNew functions.\n@@ -4995,7 +4997,6 @@\n \t* lto_section_in.h (lto_section_slot): New structure.\n \t(section_hash_table.lto_file_decl_data): New field.\n \n-\t\n 2008-02-09  Kenneth Zadeck  <zadeck@naturalbridge.com>\n \n \t* lto.c (lto_read_variable_formal_parameter_const): Remove code to\n@@ -5011,10 +5012,10 @@\n \tdifferently.\n \t* Make-lang.in (LTO_H, lto/lto-function-in.o,\n \tlto/lto-section-in.o): Update dependencies.\n-\t* lto/lto-elf.c (lto_elf_map_optional_lto_section): Add\n+\t* lto-elf.c (lto_elf_map_optional_lto_section): Add\n \tlto_section_type parameter.\n \t(lto_elf_unmap_fn_body): Renamed to lto_elf_unmap_section.\n-\t* lto.h (lto_file_vtable_struct): Removed two of the fields and \n+\t* lto.h (lto_file_vtable_struct): Removed two of the fields and\n \trenamed the other two so that there is only one map function and\n \tone unmap function and each takes a section type parameter.\n \t(lto_read_function_body): Renamed to lto_input_function_body and\n@@ -5032,7 +5033,7 @@\n \t(lto_read_function_body, lto_input_constructors_and_inits):\n \tRenamed to lto_input_function_body and takes file_data parameter.\n \t* lto-section-in.h (lto_file_decl_data): New structure.\n-\t\n+\n 2008-01-28  Kenneth Zadeck  <zadeck@naturalbridge.com>\n \n \t* lto-function-in.c (input_globals.c): Changed input type to\n@@ -5041,8 +5042,8 @@\n \t(input_function): Renumber all stmts after they are input.\n \t(lto_read_body, lto_read_function_body, lto_read_var_init):\n \tChanged to used new header format and enum section_type.\n-\t*lto-lang.c (success): Removed. \n-\t\n+\t*lto-lang.c (success): Removed.\n+\n 2008-01-28  Nathan Froyd  <froydnj@codesourcery.com>\n \n \t* lto-elf.c (lto_elf_lookup_sym): Remove unused function.\n@@ -5074,7 +5075,7 @@\n \t* lto-section-in.c: New file with changes from above.\n \t* Make-lang.in (lto-read.o): Renamed lto-function-in.c.\n \t(lto-section-in.o): New rule.\n-\t\n+\n 2007-12-29  Nathan Froyd  <froydnj@codesourcery.com>\n \n \t* lto-read.c (input_expr_operand): Mark static and external\n@@ -5197,7 +5198,7 @@\n \t* lto.h (struct lto_str_fd_struct): New struct.\n \t(struct lto_file_struct): Added new field DEBUG_STR\n \tto hold the file descriptor for the debug string table.\n-\t\n+\n 2007-12-07  Bill Maddox  <maddox@google.com>\n \n \t* lto.c (lto_str_fd_init): New function.\n@@ -5313,14 +5314,14 @@\n \n 2007-11-16  Kenneth Zadeck  <zadeck@naturalbridge.com>\n \n-\t* lto-read.c (input_expr_operand): Get types right \n+\t* lto-read.c (input_expr_operand): Get types right\n \tfor COMPLEX_CST.\n \n 2007-11-16  Kenneth Zadeck  <zadeck@naturalbridge.com>\n \n \t* lto-read.c (make_new_block, input_cfg): Properly set\n \tn_basic_blocks.\n-\t\n+\n 2007-11-16  Nathan Froyd  <froydnj@codesourcery.com>\n \n \t* lto.c (lto_read_array_type_DIE): Handle DIEs with DW_AT_GNU_vector\n@@ -5340,7 +5341,7 @@\n \t(input_expr_operand): Keeps track locally if current node needs a loc.\n \t(input_local_var): Added code to handle DECL_INITIAL for\n \tstatic local vars. Only set loc if necessary.\n-\t\n+\n 2007-11-15  Nathan Froyd  <froydnj@codesourcery.com>\n \n \t* lto.c (lto_read_subroutine_type_subprogram_DIE): Fix thinko'd\n@@ -5365,14 +5366,14 @@\n \tregistered_builtin_fndecls.\n \n 2007-11-15  Kenneth Zadeck  <zadeck@naturalbridge.com>\n-\t    \n+\n \t* lto-read.c (process_tree_flags, lto_static_init_local):\n \tRenamed to ADD_CLASS_EXPR_FLAG. ADD_CLASS_DECL_FLAG New Macro.\n \t(input_line_info, clear_line_info): Fixed new line number code.\n \t(input_expr_operand): Added type to SWITCH_EXPR.\n \t(lto_read_body): Properly initialized data_in.\n \tClear line info when leaving.\n-\t\n+\n 2007-11-13  Diego Novillo  <dnovillo@google.com>\n \n \t* lto.c (lto_read_variable_formal_parameter_constant_DIE):\n@@ -5385,11 +5386,11 @@\n 2007-11-13  Kenneth Zadeck  <zadeck@naturalbridge.com>\n \n \t* lto-read.c (input_type_ref): Renamed from get_type_ref.\n-\t(input_expr_operand, input_local_var): Renamed get_type_ref to \n+\t(input_expr_operand, input_local_var): Renamed get_type_ref to\n \tinput_type_ref.\n-\t(input_expr_operand): Get the types correct for \n+\t(input_expr_operand): Get the types correct for\n \tvector-cst.  Get SSA_NAME_DEF_STMT correct for return_exprs.\n-\t\n+\n 2007-11-13  Doug Kwan  <dougkwan@google.com>\n \n \t* lto-read.c (input_widest_uint_uleb128): New function.\n@@ -5407,7 +5408,7 @@\n \tDW_AT_static_link and DW_AT_specification.  Return the\n \tspecification if present.\n \t(lto_read_base_type_DIE): Handle DW_ATE_complex_float.\n-\t\n+\n 2007-11-13  Nathan Froyd  <froydnj@codesourcery.com>\n \n \t* lto-lang.c: Include target.h.\n@@ -5423,7 +5424,7 @@\n \n \t* lto-read.c (input_expr_operand): Added code to properly handle\n \tindex filed. Added new RANGE_EXPR case.\n-\t\n+\n 2007-11-11  Kenneth Zadeck  <zadeck@naturalbridge.com>\n \n \t* lto-read.c (ADD_FUNC_FLAG): Deleted macro.\n@@ -5484,14 +5485,14 @@\n \t(struct lto_file_struct): Declare.\n \t(lto_file_vtable): Use it instead of lto_file.\n \n-2007-11-06 Alon Dayan  <alond@il.ibm.com>\n-\t   Kenneth Zadeck  <zadeck@naturalbridge.com>\n+2007-11-06  Alon Dayan  <alond@il.ibm.com>\n+\t    Kenneth Zadeck  <zadeck@naturalbridge.com>\n \n \t * lto-read.c (process_flags, lto_static_init_local):\n \t read flags of VAR_DECL and FUNCTION_DECL of size>1.\n \t change global array num_flags_for_code to flags_length_for_code.\n \t (set_line_info): Make decls work in USE_MAPPED_LOCATION mode.\n-\t\n+\n 2007-11-05  Nathan Froyd  <froydnj@codesourcery.com>\n \n \t* lto.c (lto_read_structure_union_class_type_DIE): Use proper record\n@@ -5537,10 +5538,10 @@\n \n \t* lto-read.c (data_in): Added type_decls and current_col fields.\n \t(string_slot): New type to hold canonized file name.\n-\t(hash_string_slot_node, eq_string_slot_node, canon_file_name, \n+\t(hash_string_slot_node, eq_string_slot_node, canon_file_name,\n \tinput_line_info, set_line_info, clear_line_info): New functions.\n \t(file_name_hash_table): New hash table.\n-\t(input_local_var, input_labels, input_local_vars_index, \n+\t(input_local_var, input_labels, input_local_vars_index,\n \tinput_local_var, input_local_vars, input_ssa_names): Reorganized parameters.\n \t(input_uleb128): Changed type of byte var.\n \t(input_expr_operand): Large number of changes to get line numbers\n@@ -5554,7 +5555,6 @@\n \t(lto_read_body): Added code to get TYPE_DECLS read and to change\n \tparameters to the calls above that had their parms reorganized.\n \n-\t\n 2007-10-29  Nathan Froyd  <froydnj@codesourcery.com>\n \n \t* lto.h (lto_resolve_typedecl_ref): Declare.\n@@ -5576,7 +5576,7 @@\n \n \t* lto-read.c (input_expr_operand): Give label_values the proper\n \tcontext and provide switch statements with a default type.\n-\t\n+\n 2007-10-23  Nathan Froyd  <froydnj@codesourcery.com>\n \n \t* lto-read.c (lto_read_body): Move call to init_ssa_operands...\n@@ -5610,7 +5610,7 @@\n \t(input_ssa_names): Now calls input_tree_flags.\n \t(lto_read_body): Now sets cfun.\n \t(lto_read_function_body): Now sets current_function_pointer.\n-\t\n+\n 2007-10-19  Nathan Froyd  <froydnj@codesourcery.com>\n \n \t* lto.c (lto_read_variable_formal_parameter_constant_DIE): Check\n@@ -5685,8 +5685,7 @@\n \t(input_expr_operand): Make asm operands use input_tree_list.\n \t(input_local_var): Now uses input_tree_list.\n \t(lto_read_body): Change placement for setting context of debug_labels.\n-\t\n-\t\n+\n 2007-10-16  Kenneth Zadeck  <zadeck@naturalbridge.com>\n \n \t* lto-read.c (input_real): Output debugging in proper order.\n@@ -5698,7 +5697,7 @@\n \twritten.\n \t(dump_debug_stream): Also print char in hex.\n \t(debug_out_fun): Fix signed unsigned mismatch.\n-\t\n+\n 2007-10-10  Nathan Froyd  <froydnj@codesourcery.com>\n \n \t* lto.c (lto_read_form): Handle DW_AT_MIPS_linkage_name and\n@@ -5736,7 +5735,7 @@\n 2007-09-11  Kenneth Zadeck  <zadeck@naturalbridge.com>\n \n \t* lto-read.c (input_expr_operand): Added type for STRING_CST.\n-\t\n+\n 2007-09-10  Nathan Froyd  <froydnj@codesourcery.com>\n \n \t* lto-read.c (lto_read): Set the type of the newly created CALL_EXPR.\n@@ -5770,33 +5769,32 @@\n \n \t* lto-read.c (fun_in): Renamed to data_in.\n \t(input_expr_operand, input_local_var, input_string_internal,\n-\tinput_string, input_real, input_list, get_label_decl, \n+\tinput_string, input_real, input_list, get_label_decl,\n \tget_type_ref, input_expr_operand, input_globals, input_labels,\n-\tinput_local_vars_index, input_local_var, input_local_vars, \n+\tinput_local_vars_index, input_local_var, input_local_vars,\n \tinput_cfg, input_phi, input_ssa_names, input_bb, ): Renamed fun_in to data_in.\n \t(input_constructor): New function.\n \t(lto_read_function_body): Renamed to lto_read_body and generalized\n \tto handle both functions and constructors.\n \t(lto_read_function_body, lto_read_var_init): New function.\n-\t\n-\t\n+\n 2007-08-28  Kenneth Zadeck  <zadeck@naturalbridge.com>\n \n \t* lto-read.c (input_expr_operand): Assert that there really is a\n \tFUNCTION_DECL.\n \t(input_globals): Removed checks on 0 section.\n-\t\n+\n 2007-08-28  Kenneth Zadeck  <zadeck@naturalbridge.com>\n \n \t* lto-read.c (fun_in): Added local_decls_index and\n-\tlocal_decls_index_d.  \n+\tlocal_decls_index_d.\n \t(input_expr_operand): Changed inputting of PARM_DECLs and VAR_DECLs.\n \t(input_globals): Enabled code to handle FIELD_DECLs.\n \t(input_local_vars_index, input_local_vars): New function.\n \t(input_local_var): Changed to allow locals to be input randomly.\n \t(lto_read_function_body): Added code to input the\n \tlocal_decls_index and to free various structures.\n-\t\n+\n 2007-08-17  Jim Blandy  <jimb@codesourcery.com>\n \n \t* lto.c (lto_read_variable_formal_parameter_constant_DIE): Remove\n@@ -5827,7 +5825,7 @@\n \n \t* lto.c (lto_read_form): Complete attr_classes table.\n \t(DWARF2_form_data): Doc fix.\n-\t\n+\n 2007-08-05  Mark Mitchell  <mark@codesourcery.com>\n \n \t* lto.h (lto_file_vtable): Remove read_var_init.  Add map_var_init\n@@ -5846,7 +5844,7 @@\n \n \t* lto-read.c (lto_read_function_body): Moved declaration of fn\n \toutside of ifdef.\n-\t\n+\n 2007-08-01  Kenneth Zadeck  <zadeck@naturalbridge.com>\n \n \t* lto-read.c (input_uleb128, input_string_internal, input_real,\n@@ -5855,7 +5853,7 @@\n \tinput_expr_operand, input_local_vars, input_cfg, input_phi,\n \tinput_ssa_names, input_bb, input_function): Added semicolons.\n \n-\t\n+\n 2007-07-31  Kenneth Zadeck  <zadeck@naturalbridge.com>\n \n \t* lto-read.c (input_globals): Remove debugging.\n@@ -5870,8 +5868,8 @@\n \t(input_ssa_names): Initialize SSA_NAME_DEF_STMT to empty stmt.\n \t(input_flags): New function.\n \t* lto-lang.c (lto_init): Changed state of in_lto_p.\n-\t\n-\t\n+\n+\n 2007-07-24  Mark Mitchell  <mark@codesourcery.com>\n \n \t* lto-tree.h (lto_varargs_cookie): Remove.\n@@ -5920,9 +5918,9 @@\n \t(input_function): Now builds both the cfg and ssa_names table.\n \t(lto_read_function_body): Processes new header fields to construct\n \tstreams for the ssa_names and cfg and their debugging.\n-\t* lto/lto-lang.c (lto_init): Set in_lto_p.\n-\t\n-\t\n+\t* lto-lang.c (lto_init): Set in_lto_p.\n+\n+\n 2007-06-28  Mark Mitchell  <mark@codesourcery.com>\n \n \t* lto.h (lto_file_vtable): Add read_var_init.\n@@ -5949,11 +5947,11 @@\n \n \t* lto-read (make_new_block): Initialize the stmt_list.\n \t(lto_static_init_local): Add debugging for missing codes.\n-\t\n+\n 2007-06-26  Mark Mitchell  <mark@codesourcery.com>\n \n \t* lto.c (lto_read_subroutine_type_subprogram_DIE): Handle\n-\tunprototyped functions. \n+\tunprototyped functions.\n \n 2007-06-23  Mark Mitchell  <mark@codesourcery.com>\n \n@@ -5965,20 +5963,19 @@\n \t* lto-symbtab.c: Build function types out of TREE_LISTs.\n \n \t* lto-elf.c (<libelf>): Check for HAVE_LIBELF_H.\n-\t\n+\n \t* Make-lang.in (LTO_OBJS): Depend on attribs.o.\n-\t\n+\n 2007-06-21  Kenneth Zadeck  <zadeck@naturalbridge.com>\n \n-\t* lto/lto-tree.h (lang_decl, lang_type, language_function): Added\n+\t* lto-tree.h (lang_decl, lang_type, language_function): Added\n \tdummy since ggc does not like empty structs.\n-\t* lto/lto-elf.c (libelf.h): Changed to libelf/libelf.h.\n-\t* lto/lto-read.c (ADD_CLASS_FLAG, ADD_EXPR_FLAG): Changed\n+\t* lto-elf.c (libelf.h): Changed to libelf/libelf.h.\n+\t* lto-read.c (ADD_CLASS_FLAG, ADD_EXPR_FLAG): Changed\n \texpr->common to expr->base.\n \t(make_new_block): Moved stmt_list to proper place.\n \n-\n-2007-03-14 Robert Kennedy  <jimbob@google.com>\n+2007-03-14  Robert Kennedy  <jimbob@google.com>\n \n \tEliminate use of lang_hooks.set_decl_assembler_name from LTO\n \t* lto.c (lto_read_subroutine_type_subprogram_DIE) Get DECL\n@@ -6091,7 +6088,7 @@\n \t(lto_read_form): Change first argument to lto_info_fd *.\n \tAdd FORM_CONTEXT argument.\n \tHandle DW_FORM_ref_addr.\n-\t(lto_read_tag_DIE): Change first argument to lto_info_fd *.\t\n+\t(lto_read_tag_DIE): Change first argument to lto_info_fd *.\n \t(LTO_BEGIN_READ_ATTRS_UNCHECKED): Save old context.\n \tSwap contexts if necessary for form.\n \t(LTO_BEGIN_READ_ATTRS): Cast fd to right type for\n@@ -6114,7 +6111,7 @@\n \t* lto.h (DWARF2_CompUnit): New structure.\n \t(lto_info_fd): Ditto.\n \t(lto_file): Change debug_info to be an lto_info_fd.\n-\t\n+\n 2006-06-25  Mark Mitchell  <mark@codesourcery.com>\n \n \t* lto.c (toplev.h): Include it.\n@@ -6173,7 +6170,7 @@\n \t(lto_file): Use new types.\n \t(lto_file_close): Declare.\n \t* lto-lang.c (lto_init): Always use unit-at-a-time mode.\n-\t\n+\n 2006-06-18  Mark Mitchell  <mark@codesourcery.com>\n \n \t* lto.h: New file.\n@@ -6183,7 +6180,7 @@\n \t(lto.h): Likewise.\n \t(lto_init): New function.\n \t(lto_write_globals): Remove.\n-\t(LANG_HOOKS_WRITE_GLOBALS): Define to lhd_do_nothing. \n+\t(LANG_HOOKS_WRITE_GLOBALS): Define to lhd_do_nothing.\n \t(LANG_HOOKS_INIT): Define.\n \t(LANG_HOOKS_PARSE_FILE): Likewise.\n \t* Make-lang.in (LTO_OBJS): Add lto.o and lto-elf.o."}, {"sha": "2b8f889f9f8d024668473072b1e6f144dfb89304", "filename": "gcc/objc/ChangeLog", "status": "modified", "additions": 46, "deletions": 46, "changes": 92, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab20d992c828450ce4aa869e8995ef2924740fd0/gcc%2Fobjc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab20d992c828450ce4aa869e8995ef2924740fd0/gcc%2Fobjc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fobjc%2FChangeLog?ref=ab20d992c828450ce4aa869e8995ef2924740fd0", "patch": "@@ -5,23 +5,23 @@\n \n 2019-05-18  Iain Sandoe  <iain@sandoe.co.uk>\n \n-\t* objc/objc-act.h (OCTI_INSTANCE_TYPE, OCTI_INSTANCETYPE_NAME): New.\n+\t* objc-act.h (OCTI_INSTANCE_TYPE, OCTI_INSTANCETYPE_NAME): New.\n \t(objc_global_trees): Add instance type and name.\n \t(INSTANCE_TYPEDEF_NAME): New.\n-\t* objc/objc-act.c (synth_module_prologue): Build decls for\n+\t* objc-act.c (synth_module_prologue): Build decls for\n \tobjc_instancetype_type and objc_instancetype_name.\n \n 2019-05-16  Martin Sebor  <msebor@redhat.com>\n \n-        * objc-act.c (objc_begin_catch_clause): Quote keywords and options\n-        in diagnostics.\n-        (objc_build_throw_stmt): Same.\n-        (objc_finish_message_expr): Same.\n-        (get_super_receiver): Same.\n-        * objc-next-runtime-abi-01.c (objc_next_runtime_abi_01_init): Spell\n-        out \"less than\" in English./\n-        * objc-next-runtime-abi-02.c (objc_next_runtime_abi_02_init): Spell\n-        out \"greater\" in English.\n+\t* objc-act.c (objc_begin_catch_clause): Quote keywords and options\n+\tin diagnostics.\n+\t(objc_build_throw_stmt): Same.\n+\t(objc_finish_message_expr): Same.\n+\t(get_super_receiver): Same.\n+\t* objc-next-runtime-abi-01.c (objc_next_runtime_abi_01_init): Spell\n+\tout \"less than\" in English./\n+\t* objc-next-runtime-abi-02.c (objc_next_runtime_abi_02_init): Spell\n+\tout \"greater\" in English.\n \n 2019-05-10  Jakub Jelinek  <jakub@redhat.com>\n \n@@ -422,7 +422,7 @@\n \n 2013-11-22  Andrew MacLeod  <amacleod@redhat.com>\n \n-\t* objc/objc-act.c: Add required include files from gimple.h.\n+\t* objc-act.c: Add required include files from gimple.h.\n \n 2013-11-18  Richard Sandiford  <rdsandiford@googlemail.com>\n \n@@ -535,7 +535,7 @@\n \tInclude c-family/c-target.h.\n \t(handle_next_class_ref): Rewrite to emit top-level asm statements.\n \t(handle_next_impent): Likewise.\n-\t* objc/Make-lang.in: Fix dependencies for objc-next-runtime-abi-01.o.\n+\t* Make-lang.in: Fix dependencies for objc-next-runtime-abi-01.o.\n \n 2012-05-31  Steven Bosscher  <steven@gcc.gnu.org>\n \n@@ -1199,7 +1199,7 @@\n \n 2010-12-18  Iain Sandoe  <iains@gcc.gnu.org>\n \n-\t* objc/objc-act.c (objc_eh_personality): Select personality name on\n+\t* objc-act.c (objc_eh_personality): Select personality name on\n \truntime.\n \t(objc_init_exceptions): New.\n \t(objc_begin_try_stmt): Use objc_init_exceptions.\n@@ -1773,7 +1773,7 @@\n \n \tBased on the CFString implementation in FSF apple/trunk branch.\n \n-\t* objc/objc-act.c (objc_build_string_object): Handle CFStrings.\n+\t* objc-act.c (objc_build_string_object): Handle CFStrings.\n \n 2010-10-21  Nicola Pero  <nicola.pero@meta-innovation.com>\n \n@@ -1825,10 +1825,10 @@\n \tto gcc_alloc_xxx calls in hash_init and hash_class_name_enter to\n \tget it to compile in the current trunk.\n \n-\t2006-01-27 Fariborz Jahanian  <fjahanian@apple.com>\n+\t2006-01-27  Fariborz Jahanian  <fjahanian@apple.com>\n \n \tRadar 4345837\n-\t* objc/objc-act.c (hash_class_name_enter): New.\n+\t* objc-act.c (hash_class_name_enter): New.\n \t(hash_class_name_lookup): New.\n \t(objc_declare_alias): Enter alias name into hash table.\n \t(objc_declare_class): Enter class name into hash table.\n@@ -1867,7 +1867,7 @@\n \t2006-03-10  Fariborz Jahanian  <fjahanian@apple.com>\n \n \tRadar 4407151\n-\t* objc/objc-act.c (objc_is_class_name): template parameter is not\n+\t* objc-act.c (objc_is_class_name): template parameter is not\n \tan objective class name.\n \t(objc_generate_cxx_cdtors): Check for the null\n \tobjc_implementation_context.\n@@ -1879,7 +1879,7 @@\n \t2005-11-08  Fariborz Jahanian  <fjahanian@apple.com>\n \n \tRadar 4330422\n-\t* objc/objc-act.c (objc_non_volatilized_type): New\n+\t* objc-act.c (objc_non_volatilized_type): New\n \n \t2005-10-07  Fariborz Jahanian  <fjahanian@apple.com>\n \n@@ -1895,7 +1895,7 @@\n \n \tMerge from 'apple/trunk' branch on FSF servers.\n \n-\t2006-03-27 Fariborz Jahanian  <fjahanian@apple.com>\n+\t2006-03-27  Fariborz Jahanian  <fjahanian@apple.com>\n \n \tRadar 4133425\n \t* objc-act.c (objc_diagnose_private_ivar): New.\n@@ -1966,10 +1966,10 @@\n \n \tmerge from FSF apple 'trunk' branch.\n \n-\t2006-04-26 Fariborz Jahanian  <fjahanian@apple.com>\n+\t2006-04-26  Fariborz Jahanian  <fjahanian@apple.com>\n \tRadar 3803157 (method attributes)\n-\t* objc/objc-act.h (METHOD_TYPE_ATTRIBUTES): New macro.\n-\t* objc/objc-act.c (objc_decl_method_attributes): New.\n+\t* objc-act.h (METHOD_TYPE_ATTRIBUTES): New macro.\n+\t* objc-act.c (objc_decl_method_attributes): New.\n \t(objc_add_method_declaration): Process method's attribute.\n \t(objc_start_method_definition): Ditto.\n \t(build_objc_method_call): Inject method attribute into\n@@ -1997,7 +1997,7 @@\n \n 2010-10-07  Iain Sandoe  <iains@gcc.gnu.org>\n \n-\t* objc-act.c (objc_build_message_expr):  Call mark_exp_read () to\n+\t* objc-act.c (objc_build_message_expr): Call mark_exp_read () to\n \tsignal that the receiver has been used.\n \n 2010-10-06  Nicola Pero  <nicola.pero@meta-innovation.com>\n@@ -2024,7 +2024,7 @@\n \n \tMerge from 'apple/trunk' branch on FSF servers.\n \n-\t2006-04-12 Fariborz Jahanian  <fjahanian@apple.com>\n+\t2006-04-12  Fariborz Jahanian  <fjahanian@apple.com>\n \n \tRadar 4507230\n \t* objc-act.c (objc_type_valid_for_messaging): New routine to check\n@@ -2052,14 +2052,14 @@\n \t2006-01-30  Fariborz Jahanian  <fjahanian@apple.com>\n \n \tRadar 4386773\n-\t* objc/objc-act.c (objc_set_method_opt): New function.\n+\t* objc-act.c (objc_set_method_opt): New function.\n \t(objc_start_protocol, objc_finish_interface): Reset\n \tobjc_method_optional_flag flag.\n \t(objc_add_method_declaration): Pass on the new\n \tflag to objc_add_method.\n \t(objc_add_method): Add optional methods to new chain in\n \tthe protocol class.\n-\t* objc/objc-act.h (CLASS_OPTIONAL_CLS_METHODS)\n+\t* objc-act.h (CLASS_OPTIONAL_CLS_METHODS)\n \t(CLASS_OPTIONAL_NST_METHODS): New macros accessing a protocol\n \tclass's optional method chains.\n \n@@ -2230,16 +2230,16 @@\n \n \tMerge from 'apple/trunk' branch on FSF servers.\n \n-\t2006-03-09 Fariborz Jahanian  <fjahanian@apple.com>\n+\t2006-03-09  Fariborz Jahanian  <fjahanian@apple.com>\n \n \tRadar 4457381\n-\t* objc/objc-act.c (objc_finish_message_expr): Look for message in\n+\t* objc-act.c (objc_finish_message_expr): Look for message in\n \t@class's protocol list.\n \n \t2006-02-07  Fariborz Jahanian  <fjahanian@apple.com>\n \n \tRadar 4219590\n-\t* objc/objc-act.c (objc_start_method_definition): Initialize\n+\t* objc-act.c (objc_start_method_definition): Initialize\n \tbreak/continue labels.\n \n \t2005-08-22  Ziemowit Laski  <zlaski@apple.com>\n@@ -2259,7 +2259,7 @@\n \n 2010-09-10  Nicola Pero  <nicola.pero@meta-innovation.com>\n \n-\t* objc/objc-act.c (objc_begin_try_stmt): Generate an error if\n+\t* objc-act.c (objc_begin_try_stmt): Generate an error if\n \t-fobjc-exceptions was not used.  (objc_build_throw_stmt): Same\n \tchange.\n \n@@ -2293,7 +2293,7 @@\n \tto be extracted within the routine.  Do not start new vars,\n \tbut finish the ones collcted during parsing.\n \t(generate_shared_structures): Likewise.\n-\t(finish_objc):  Reorder code so that we finish variables before\n+\t(finish_objc): Reorder code so that we finish variables before\n \treferencing them.  Save the global data before calling meta-data\n \tcreation routines, and pass the current reference to the two\n \tmain routines.  Only call generate_objc_image_info () for the\n@@ -2471,7 +2471,7 @@\n \t(objc_build_exc_ptr): Use __builtin_eh_pointer.\n \n 2009-09-13  Richard Guenther  <rguenther@suse.de>\n-\tRafael Avila de Espindola  <espindola@google.com>\n+\t    Rafael Avila de Espindola  <espindola@google.com>\n \n \t* objc-act.c (objc_eh_runtime_type): Export.\n \t(objc_init_exceptions): Remove.  Move warning code ...\n@@ -2652,8 +2652,8 @@\n \n 2009-04-21  Taras Glek  <tglek@mozilla.com>\n \n-\t* objc-act.c: Update GTY annotations to new syntax\n-\t* objc-act.h: Likewise\n+\t* objc-act.c: Update GTY annotations to new syntax.\n+\t* objc-act.h: Likewise.\n \n 2009-04-21  Joseph Myers  <joseph@codesourcery.com>\n \n@@ -2728,7 +2728,7 @@\n 2008-09-17  Jan Hubicka  <jh@suse.cz>\n \n \tPR c++/18071\n-\t* objc/objc-act.c (objc_finish_method_definition): Do not set\n+\t* objc-act.c (objc_finish_method_definition): Do not set\n \tDECL_INLINE.\n \n 2008-09-01  Aldy Hernandez  <aldyh@redhat.com>\n@@ -2866,15 +2866,15 @@\n 2007-04-04  Stuart Hastings  <stuart@apple.com>\n \n \tPR 31281\n-\t* objc/objc-act.c (next_sjlj_build_catch_list): Delete volatile from rethrow decl.\n+\t* objc-act.c (next_sjlj_build_catch_list): Delete volatile from rethrow decl.\n \n 2007-03-01  Brooks Moses  <brooks.moses@codesourcery.com>\n \n \t* Make-lang.in: Add dummy lang.install-pdf target.\n \n 2007-02-18  Kazu Hirata  <kazu@codesourcery.com>\n \n-\t* objc/objc-act.c: Fix comment typos.\n+\t* objc-act.c: Fix comment typos.\n \n 2007-02-15  Sandra Loosemore  <sandra@codesourcery.com>\n \t    Brooks Moses  <brooks.moses@codesourcery.com>\n@@ -2908,7 +2908,7 @@\n \t* objc-act.c (objc_finish_file): Remove ifdef clause for OBJCPLUS and\n \tcontent where we called cp_finish_file.\n \n-2006-10-23 Rafael \u00c1vila de Esp\u00edndola  <rafael.espindola@gmail.com>\n+2006-10-23  Rafael \u00c1vila de Esp\u00edndola  <rafael.espindola@gmail.com>\n \n \t* objc-act.c (synth_module_prologue): Replace calls to\n \tbuiltin_function with add_builtin_function.\n@@ -2955,23 +2955,23 @@\n \tPR objc/27240\n \t* objc-act.c (objc_is_public): Return early on invalid type.\n \n-2006-03-02 Fariborz Jahanian  <fjahanian@apple.com>\n+2006-03-02  Fariborz Jahanian  <fjahanian@apple.com>\n \n \t* objc-act.c (init_module_descriptor): Remove file name from\n \tmodule descriptor.\n \t(gen_type_name_0): Fix ICE when issuing warning.\n \n 2006-02-20  Rafael \u00c1vila de Esp\u00edndola  <rafael.espindola@gmail.com>\n \n-\t* Make-lang.in (OBJC): Remove\n-\t(OBJECTIVE-C): Remove\n-\t(objective-c): Remove\n-\t(.PHONY): Remove objective-c and ObjC\n+\t* Make-lang.in (OBJC): Remove.\n+\t(OBJECTIVE-C): Remove.\n+\t(objective-c): Remove.\n+\t(.PHONY): Remove objective-c and ObjC.\n \n 2005-12-14  Andrew Pinski  <pinskia@physics.uc.edu>\n \n \tPR objc/25360\n-\t* objc/objc-act.c (encode_type): Encode Complex types as 'j' followed\n+\t* objc-act.c (encode_type): Encode Complex types as 'j' followed\n \tby the inner type.\n \n 2005-12-12  Andrew Pinski  <pinskia@physics.uc.edu>\n@@ -3322,7 +3322,7 @@\n 2005-02-25  Joseph S. Myers  <joseph@codesourcery.com>\n \n \t* Make-lang.in (objc/objc-parse.o-warn, objc/objc-parse.o,\n-\tobjc/objc-parse.c, objc/objc-parse.y): Remove\n+\tobjc/objc-parse.c, objc/objc-parse.y): Remove.\n \t(OBJC_OBJS, objc.srcextra, objc.tags, objc.mostlyclean,\n \tobjc.distclean, objc.maintainer-clean): Update for new parser.\n \t* config-lang.in (gtfiles): Update for new parser."}, {"sha": "b54fda86b60e9c264d6f9769a5a69fc3af37687c", "filename": "gcc/objcp/ChangeLog", "status": "modified", "additions": 10, "deletions": 10, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab20d992c828450ce4aa869e8995ef2924740fd0/gcc%2Fobjcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab20d992c828450ce4aa869e8995ef2924740fd0/gcc%2Fobjcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fobjcp%2FChangeLog?ref=ab20d992c828450ce4aa869e8995ef2924740fd0", "patch": "@@ -149,7 +149,7 @@\n \t(objcp/objcp-act.o): Reordered dependencies.  Added dependency on\n \tobjc-encoding.h.\n \t(objcp/objc-encoding.o): New rule.\n-\t\n+\n 2011-04-15  Nicola Pero  <nicola.pero@meta-innovation.com>\n \n \t* objcp-decl.c (objcp_finish_struct): Use\n@@ -169,7 +169,7 @@\n \t* config-lang.in (gtfiles): Added cp/parser.h and reorganized list\n \tso that it is more obvious that it is identical to the C++ one\n \twith the addition of some files at the end.\n-\t\n+\n 2011-03-06  Joseph Myers  <joseph@codesourcery.com>\n \n \t* lang-specs.h: Match -save-temps* instead of -save-temps.\n@@ -194,7 +194,7 @@\n \t(LANG_HOOKS_EH_PERSONALITY): Removed.\n \t(LANG_HOOKS_EH_RUNTIME_TYPE): Removed.\n \t(objcp_eh_personality_decl): Removed.\n-\t\n+\n 2011-02-07  Mike Stump  <mikestump@comcast.net>\n \n \t* Make-lang.in (obj-c++.tags): Don't include *.y.\n@@ -234,9 +234,9 @@\n \n 2010-10-14  Iain Sandoe  <iains@gcc.gnu.org>\n \n-\tmerge from FSF apple 'trunk' branch. \n+\tmerge from FSF apple 'trunk' branch.\n \t2006 Fariborz Jahanian  <fjahanian@apple.com>\n-\t\n+\n \tRadars 4436866, 4505126, 4506903, 4517826\n \t* objcp-lang.c (objcxx_init_ts): Update for property_decl.\n \n@@ -268,7 +268,7 @@\n \n 2010-09-21  Nicola Pero  <nicola.pero@meta-innovation.com>\n \n-\tPR objc/25965\t\n+\tPR objc/25965\n \t* objcp-decl.c (objcp_finish_struct): Call\n \tobjc_get_interface_ivars() and check for duplicate ivars.\n \n@@ -402,13 +402,13 @@\n \n \t2008-02-07  Andreas Tobler  <andreast-list@fgznet.ch>\n \t\t    Douglas Gregor  <doug.gregor@gmail.com>\n- \n+\n \tPR bootstrap/35115\n \t* objcp-decl.c (objcp_comptypes): Call cp_comptypes, not comptypes.\n \n 2008-02-07  Andreas Tobler  <andreast-list@fgznet.ch>\n \t    Douglas Gregor  <doug.gregor@gmail.com>\n- \n+\n \tPR bootstrap/35115\n \t* objcp-decl.c (objcp_comptypes): Call cp_comptypes, not comptypes.\n \n@@ -429,7 +429,7 @@\n \n \t* Make-lang.in: Add dummy lang.install-pdf target.\n \n-2006-10-23 Rafael \u00c1vila de Esp\u00edndola  <rafael.espindola@gmail.com>\n+2006-10-23  Rafael \u00c1vila de Esp\u00edndola  <rafael.espindola@gmail.com>\n \n \t* objcp-decl.h (objcp_builtin_function): Remove.\n \n@@ -533,7 +533,7 @@\n \t    Mike Stump  <mrs@apple.com>\n \n \tYet more Objective-C++...\n-\t\n+\n \t* Make-lang.in (objcp/objcp-lang.o): Add tree-gimple.h\n \t(objcp/objcp-decl.o): Likewise.\n \t(objcp/objcp-act.o): Likewise."}, {"sha": "c904eebaa5ac7ddcea2ce6de78058a4f0c26779d", "filename": "gcc/po/ChangeLog", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab20d992c828450ce4aa869e8995ef2924740fd0/gcc%2Fpo%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab20d992c828450ce4aa869e8995ef2924740fd0/gcc%2Fpo%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fpo%2FChangeLog?ref=ab20d992c828450ce4aa869e8995ef2924740fd0", "patch": "@@ -1580,7 +1580,7 @@\n \n 2010-01-11  Joseph Myers  <joseph@codesourcery.com>\n \t    Shujing Zhao  <pearly.zhao@oracle.com>\n-\t    \n+\n \tPR translation/42467\n \t* exgettext: Keep the text before tab character in the option help\n \tstring at *.opt file.\n@@ -3630,7 +3630,7 @@ notice and this notice are preserved.\n \n 2010-01-11  Joseph Myers  <joseph@codesourcery.com>\n \t    Shujing Zhao  <pearly.zhao@oracle.com>\n-\t    \n+\n \tPR translation/42467\n \t* exgettext: Keep the text before tab character in the option help\n \tstring at *.opt file."}, {"sha": "5864fc0080c6227ec510ff600fc088657b958c56", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 105, "deletions": 69, "changes": 174, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab20d992c828450ce4aa869e8995ef2924740fd0/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab20d992c828450ce4aa869e8995ef2924740fd0/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=ab20d992c828450ce4aa869e8995ef2924740fd0", "patch": "@@ -9,7 +9,7 @@\n \t* gcc.target/powerpc/vec_rotate-4.c: Rename to ...\n \t* gcc.target/powerpc/vec-rotate-4.c: ... this.\n \n-2019-08-09  Sam Tebbs <sam.tebbs@arm.com>\n+2019-08-09  Sam Tebbs  <sam.tebbs@arm.com>\n \n \t* lib/target-supports.exp\n \t(check_effective_target_arm_v8_4a_bkey_directive): New proc.\n@@ -89,7 +89,7 @@\n \t* c-c++-common/gomp/pr91401-1.c: New test.\n \t* c-c++-common/gomp/pr91401-2.c: New test.\n \n-2019-08-09  Alexandre Oliva <oliva@adacore.com>\n+2019-08-09  Alexandre Oliva  <oliva@adacore.com>\n \n \t* gcc.target/i386/sse2-mul-1.c: Use rand.  Drop fallback.\n \t* gcc.target/i386/sse4_1-blendps-2.c: Likewise.\n@@ -133,8 +133,8 @@\n 2019-08-07  Steven G. Kargl  <kargl@gcc.gnu.org>\n \n \tPR fortran/91359\n-\t* pr91359_2.f:  Fix missing hyphen in dg-do\n-\t* pr91359_1.f:  Ditto.  Remove RESULT variable to test actual fix!\n+\t* pr91359_2.f: Fix missing hyphen in dg-do\n+\t* pr91359_1.f: Ditto.  Remove RESULT variable to test actual fix!\n \n 2019-08-07  Marek Polacek  <polacek@redhat.com>\n \n@@ -191,7 +191,7 @@\n \t* gcc.target/powerpc/vec_rotate-3.c: New test.\n \t* gcc.target/powerpc/vec_rotate-4.c: New test.\n \n-2019-08-07  Alexandre Oliva <oliva@adacore.com>\n+2019-08-07  Alexandre Oliva  <oliva@adacore.com>\n \n \t* gcc.target/i386/math_m_pi.h: New.\n \t* gcc.target/i386/sse4_1-round.h: Use it.\n@@ -448,7 +448,7 @@\n \n 2019-08-01  Wilco Dijkstra  <wdijkstr@arm.com>\n \n-\t* gcc/testsuite/g++.dg/lto/pr89330_0.C: Add effective-target shared.\n+\t* g++.dg/lto/pr89330_0.C: Add effective-target shared.\n \n 2019-08-01  Kito Cheng  <kito.cheng@sifive.com>\n \n@@ -644,7 +644,7 @@\n \n \t* gnat.dg/case_optimization3.ad[sb]: New test.\n \n-2019-07-25  Martin Liska  <mliska@suse.cz\n+2019-07-25  Martin Liska  <mliska@suse.cz>\n \t    Dominik Infuhr  <dominik.infuehr@theobroma-systems.com>\n \n \tPR c++/23383\n@@ -659,7 +659,7 @@\n \n \tPR tree-optimization/91183\n \tPR tree-optimization/86688\n-\t* gcc/testsuite/c-c++-common/ubsan/object-size-9.c: Disable warnings.\n+\t* c-c++-common/ubsan/object-size-9.c: Disable warnings.\n \t* gcc.dg/Wstringop-overflow-14.c: New test.\n \t* gcc.dg/attr-nonstring-2.c: Remove xfails.\n \t* gcc.dg/strlenopt-70.c: New test.\n@@ -789,7 +789,7 @@\n \t* gcc.target/msp430/isr-push-pop-leaf-isr-430.c: Likewise.\n \t* gcc.target/msp430/isr-push-pop-leaf-isr-430x.c: Likewise.\n \n-2019-07-22  Andrea Corallo <andrea.corallo@arm.com>\n+2019-07-22  Andrea Corallo  <andrea.corallo@arm.com>\n \n \t* jit.dg/test-error-gcc_jit_context_new_unary_op-bad-res-type.c:\n \tNew testcase.\n@@ -968,19 +968,19 @@\n \n 2019-07-18  Sylvia Taylor  <sylvia.taylor@arm.com>\n \n-        PR target/90317\n-        * gcc.target/arm/crypto-vsha1cq_u32.c (foo): Change return type to\n-        uint32_t.\n-        (GET_LANE, TEST_SHA1C_VEC_SELECT): New.\n-        * gcc.target/arm/crypto-vsha1h_u32.c (foo): Change return type to\n-        uint32_t.\n-        (GET_LANE, TEST_SHA1H_VEC_SELECT): New.\n-        * gcc.target/arm/crypto-vsha1mq_u32.c (foo): Change return type to\n-        uint32_t.\n-        (GET_LANE, TEST_SHA1M_VEC_SELECT): New.\n-        * gcc.target/arm/crypto-vsha1pq_u32.c (foo): Change return type to\n-        uint32_t.\n-        (GET_LANE, TEST_SHA1P_VEC_SELECT): New.\n+\tPR target/90317\n+\t* gcc.target/arm/crypto-vsha1cq_u32.c (foo): Change return type to\n+\tuint32_t.\n+\t(GET_LANE, TEST_SHA1C_VEC_SELECT): New.\n+\t* gcc.target/arm/crypto-vsha1h_u32.c (foo): Change return type to\n+\tuint32_t.\n+\t(GET_LANE, TEST_SHA1H_VEC_SELECT): New.\n+\t* gcc.target/arm/crypto-vsha1mq_u32.c (foo): Change return type to\n+\tuint32_t.\n+\t(GET_LANE, TEST_SHA1M_VEC_SELECT): New.\n+\t* gcc.target/arm/crypto-vsha1pq_u32.c (foo): Change return type to\n+\tuint32_t.\n+\t(GET_LANE, TEST_SHA1P_VEC_SELECT): New.\n \n 2019-07-18  Jan Hubicka  <hubicka@ucw.cz>\n \n@@ -997,7 +997,7 @@\n \n \t* c-c++-common/pr53633-2.c: New test.\n \n-2019-07-17  Alexandre Oliva <oliva@adacore.com>\n+2019-07-17  Alexandre Oliva  <oliva@adacore.com>\n \n \tPR middle-end/81824\n \t* g++.dg/Wmissing-attributes-1.C: New.  Some of its fragments\n@@ -1227,7 +1227,7 @@\n \tPR tree-optimization/91145\n \t* gcc.dg/torture/pr91145.c: New testcase.\n \n-2019-07-12  Alexandre Oliva <oliva@adacore.com>\n+2019-07-12  Alexandre Oliva  <oliva@adacore.com>\n \n \t* gcc.dg/gimplefe-44.c: New.\n \t* gcc.dg/gimplefe-43.c: New.\n@@ -1477,6 +1477,11 @@\n \t* gcc.target/s390/combine-shift-rotate-add-mod.c: New test.\n \t* gcc.target/s390/vector/combine-shift-vec.c: New test.\n \n+2019-07-08  Joern Rennecke  <joern.rennecke@riscy-ip.com>\n+\n+\tAvoid clash with system header declaration.\n+\t* gcc.dg/vect/slp-reduc-sad.c (uint32_t): Remove unused declaration.\n+\n 2019-07-08  Richard Biener  <rguenther@suse.de>\n \n \tPR tree-optimization/91108\n@@ -1619,7 +1624,7 @@\n \tPR middle-end/78884\n \t* gcc.dg/gomp/pr78884.c: New test.\n \n-2019-07-04  Andrea Corallo <andrea.corallo@arm.com>\n+2019-07-04  Andrea Corallo  <andrea.corallo@arm.com>\n \n \t* jit.dg/test-error-gcc_jit_context_new_binary_op-bad-res-type.c:\n \tNew testcase.\n@@ -1628,7 +1633,7 @@\n \n \t* gcc.dg/tree-ssa/cunroll-15.c: Remove XFAIL on arm.\n \n-2019-07-04  Andrea Corallo <andrea.corallo@arm.com>\n+2019-07-04  Andrea Corallo  <andrea.corallo@arm.com>\n \n \t* jit.dg/all-non-failing-tests.h: Add test-accessing-bitfield.c.\n \t* jit.dg/test-accessing-bitfield.c: New testcase.\n@@ -1735,6 +1740,11 @@\n \t* gcc.dg/store_merging_29.c: Likewise.\n \t* gcc.dg/tree-ssa/dump-6.c: Likewise.\n \n+2019-07-03  Mark Wielaard  <mark@klomp.org>\n+\n+\tPR debug/90981\n+\t* g++.dg/pr90981.C: New test.\n+\n 2019-07-03  Richard Biener  <rguenther@suse.de>\n \n \tPR middle-end/91069\n@@ -1823,6 +1833,12 @@\n \t* g++.dg/tree-ssa/pr90883.c: Add -Os.  Check dse2 for the\n \tdeleted store on some targets.\n \n+2019-07-02  Joern Rennecke  <joern.rennecke@riscy-ip.com>\n+\n+\tPR testsuite/91065\n+\t* gcc.dg/plugin/start_unit_plugin.c: Register a root tab\n+\tto reference fake_var.\n+\n 2019-07-02  qing zhao  <qing.zhao@oracle.com>\n \n \tPR preprocessor/90581\n@@ -1843,6 +1859,11 @@\n \tPR tree-optimization/58483\n \t* gcc.dg/tree-ssa/ssa-dom-cse-8.c: New testcase.\n \n+2019-07-01  Joern Rennecke  <joern.rennecke@riscy-ip.com>\n+\n+\tPR middle-end/66726\n+\t* gcc.dg/tree-ssa/pr66726-4.c: New testcase.\n+\n 2019-07-01  Andreas Krebbel  <krebbel@linux.ibm.com>\n \n \t* gcc.target/s390/vector/vec-shift-2.c: New test.\n@@ -2661,7 +2682,7 @@\n \tPR objc/90709\n \t* obj-c++.dg/proto-lossage-7.mm: Use proxy headers.\n \t* obj-c++.dg/strings/const-cfstring-2.mm: Likewise.\n-\t* obj-c++.dg/strings/const-cfstring-5.mm: Likewise\n+\t* obj-c++.dg/strings/const-cfstring-5.mm: Likewise.\n \t* obj-c++.dg/strings/const-str-12.mm: Likewise.\n \t* obj-c++.dg/syntax-error-1.mm: Likewise.\n \t* obj-c++.dg/torture/strings/const-cfstring-1.mm: Likewise.\n@@ -3236,7 +3257,7 @@\n \n \t* lib/scanasm.exp (dg-function-on-line): Add pattern for hppa*-*-linux*.\n \n-2019-06-07  Mark Eggleston <mark.eggleston@codethink.com>\n+2019-06-07  Mark Eggleston  <mark.eggleston@codethink.com>\n \n \tPR fortran/89100\n \t* gfortran.dg/fmt_f_default_field_width_3.f90: Modify dg-error\n@@ -3741,7 +3762,7 @@\n \n 2019-05-28  Jeff Law  <law@redhat.com>\n \n-\t* testsuite/gcc.target/sh/pr50749-qihisi-predec-3.c: Disable\n+\t* gcc.target/sh/pr50749-qihisi-predec-3.c: Disable\n \tloop distribution.\n \n 2019-05-28  Segher Boessenkool  <segher@kernel.crashing.org>\n@@ -3905,18 +3926,18 @@\n \n \t* lib/target-supports.exp (check_effective_target_mfentry): New.\n \t* gcc.target/i386/fentry-override.c: Require effective target mfentry.\n-\t* gcc/testsuite/gcc.target/i386/fentry.c: Likewise\n-\t* gcc.target/i386/fentryname1.c: Likewise\n-\t* gcc.target/i386/fentryname2.c: Likewise\n-\t* gcc.target/i386/fentryname3.c: Likewise\n-\t* gcc.target/i386/nop-mcount.c: Likewise\n-\t* gcc.target/i386/pr82699-2.c: Likewise\n-\t* gcc.target/i386/pr82699-4.c: Likewise\n-\t* gcc.target/i386/pr82699-5.c: Likewise\n-\t* gcc.target/i386/pr82699-6.c: Likewise\n-\t* gcc.target/i386/returninst1.c: Likewise\n-\t* gcc.target/i386/returninst2.c: Likewise\n-\t* gcc.target/i386/returninst3.c : Likewise\n+\t* gcc.target/i386/fentry.c: Likewise.\n+\t* gcc.target/i386/fentryname1.c: Likewise.\n+\t* gcc.target/i386/fentryname2.c: Likewise.\n+\t* gcc.target/i386/fentryname3.c: Likewise.\n+\t* gcc.target/i386/nop-mcount.c: Likewise.\n+\t* gcc.target/i386/pr82699-2.c: Likewise.\n+\t* gcc.target/i386/pr82699-4.c: Likewise.\n+\t* gcc.target/i386/pr82699-5.c: Likewise.\n+\t* gcc.target/i386/pr82699-6.c: Likewise.\n+\t* gcc.target/i386/returninst1.c: Likewise.\n+\t* gcc.target/i386/returninst2.c: Likewise.\n+\t* gcc.target/i386/returninst3.c : Likewise.\n \n 2019-05-23  Bill Schmidt  <wschmidt@linux.ibm.com>\n \n@@ -4078,6 +4099,15 @@\n \n \t* gcc.dg/tree-ssa/ssa-lim-13.c: New testcase.\n \n+2019-05-22  Alan Modra  <amodra@gmail.com>\n+\n+\t* gcc.target/powerpc/ppc32-abi-dfp-1.c: Don't use\n+\tpower mnemonics.\n+\t* gcc.dg/vect/O3-pr70130.c: Disable default options\n+\tadded by check_vect_support_and_set_flags.\n+\t* gcc.dg/vect/pr48765.c: Likewise.\n+\t* gfortran.dg/vect/pr45714-b.f: Likewise.\n+\n 2019-05-22  Hans-Peter Nilsson  <hp@axis.com>\n \n \tPR middle-end/90553\n@@ -4147,6 +4177,12 @@\n \n \t* g++.dg/lookup/using53.C: Adjust diagnostic.\n \n+2019-05-21  Alan Modra  <amodra@gmail.com>\n+\n+\tPR target/90545\n+\t* gcc.target/powerpc/fold-vec-splats-floatdouble.c: Correct comments\n+\tand rename functions to suit parameters.\n+\n 2019-05-21  Richard Biener  <rguenther@suse.de>\n \n \tPR middle-end/90510\n@@ -4535,7 +4571,7 @@\n \t* lib/target-supports.exp (check_effective_target_cet): Add the\n \t-fcf-protection flag to the build conditions.\n \n-2019-05-16  Jun Ma <JunMa@linux.alibaba.com>\n+2019-05-16  Jun Ma  <JunMa@linux.alibaba.com>\n \n \tPR tree-optimization/90106\n \t* gcc.dg/cdce1.c: Check tailcall code generation after cdce pass.\n@@ -4789,7 +4825,7 @@\n \tparam.\n \n 2019-05-14  Richard Biener  <rguenther@suse.de>\n-\tH.J. Lu  <hongjiu.lu@intel.com>\n+\t    H.J. Lu  <hongjiu.lu@intel.com>\n \n \tPR tree-optimization/88828\n \t* gcc.target/i386/pr88828-1.c: New test.\n@@ -5160,7 +5196,7 @@\n \tsystems.\n \t* gcc.dg/tsan/pr88017.c: Likewise.\n \n-2019-05-05  Thomas Koenig <tkoenig@gcc.gnu.org>\n+2019-05-05  Thomas Koenig  <tkoenig@gcc.gnu.org>\n \n \tPR fortran/90344\n \t* gfortran.dg/pr90344.f90: New test\n@@ -5252,7 +5288,7 @@\n \n \tPR fortran/60144\n \t* gfortran.dg/block_name_2.f90: Adjust dg-error.\n-\t* gfortran.dg/dec_type_print_3.f90.f90: Likewise\n+\t* gfortran.dg/dec_type_print_3.f90.f90: Likewise.\n \t* gfortran.dg/pr60144.f90: New test.\n \n 2019-05-01  Jeff Law  <law@redhat.com>\n@@ -5296,7 +5332,7 @@\n \t2019-04-23  Bin Cheng  <bin.cheng@linux.alibaba.com>\n \n \tPR tree-optimization/90078\n-\t* gcc/testsuite/g++.dg/tree-ssa/pr90078.C: New test.\n+\t* g++.dg/tree-ssa/pr90078.C: New test.\n \n 2019-04-29  Vladislav Ivanishin  <vlad@ispras.ru>\n \n@@ -5568,7 +5604,7 @@\n \n \t* g++.dg/lto/pr89358_0.C: Replace dg-* with dg-lto-*.\n \n-2019-04-16  Alexandre Oliva <aoliva@redhat.com>\n+2019-04-16  Alexandre Oliva  <aoliva@redhat.com>\n \n \tPR debug/89528\n \t* gcc.dg/guality/pr89528.c: New.\n@@ -5878,15 +5914,15 @@\n \tPR c++/89878\n \tPR c++/89833\n \tPR c++/47488\n-\t* gcc/testsuite/g++.dg/abi/mangle69.C: New test.\n-\t* gcc/testsuite/g++.dg/abi/mangle70.C: New test.\n-\t* gcc/testsuite/g++.dg/abi/mangle71.C: New test.\n-\t* gcc/testsuite/g++.dg/abi/mangle72.C: New test.\n-\t* gcc/testsuite/g++.dg/cpp0x/constexpr-array19.C: New test.\n-\t* gcc/testsuite/g++.dg/cpp2a/nontype-class15.C: New test.\n-\t* gcc/testsuite/g++.dg/cpp2a/nontype-class16.C: New test.\n-\t* gcc/testsuite/g++.dg/init/array51.C: New test.\n-\t* gcc/testsuite/g++.dg/template/nontype29.C: New test.\n+\t* g++.dg/abi/mangle69.C: New test.\n+\t* g++.dg/abi/mangle70.C: New test.\n+\t* g++.dg/abi/mangle71.C: New test.\n+\t* g++.dg/abi/mangle72.C: New test.\n+\t* g++.dg/cpp0x/constexpr-array19.C: New test.\n+\t* g++.dg/cpp2a/nontype-class15.C: New test.\n+\t* g++.dg/cpp2a/nontype-class16.C: New test.\n+\t* g++.dg/init/array51.C: New test.\n+\t* g++.dg/template/nontype29.C: New test.\n \n 2019-04-04  Martin Sebor  <msebor@redhat.com>\n \n@@ -6319,7 +6355,7 @@\n \tPR c/89812\n \t* gcc.dg/attr-aligned-3.c: New test.\n \n-2019-03-25  Johan Karlsson <johan.karlsson@enea.com>\n+2019-03-25  Johan Karlsson  <johan.karlsson@enea.com>\n \n \tPR debug/86964\n \t* gcc.dg/debug/dwarf2/pr86964.c: New testcase.\n@@ -6786,7 +6822,7 @@\n \t* gcc.target/powerpc/vsx-builtin-9a.c: New test.\n \t* gcc.target/powerpc/vsx-builtin-9b.c: New test.\n \n-2019-03-15  Alexandre Oliva <aoliva@redhat.com>\n+2019-03-15  Alexandre Oliva  <aoliva@redhat.com>\n \n \tPR c++/88534\n \tPR c++/88537\n@@ -7412,7 +7448,7 @@\n 2018-03-04  Bin Cheng  <bin.cheng@linux.alibaba.com>\n \n \tPR tree-optimization/89487\n-\t* gcc/testsuite/gcc.dg/tree-ssa/pr89487.c: New test.\n+\t* gcc.dg/tree-ssa/pr89487.c: New test.\n \n 2019-03-03  Harald Anlauf  <anlauf@gmx.de>\n \n@@ -7810,7 +7846,7 @@\n \t* gcc.dg/pr69471-2.c: Likewise.\n \t* gcc.target/i386/pr69471-3.c: Likewise.\n \n-2019-02-23  Jerry DeLisle <jvdelisle@gcc.gnu.org>\n+2019-02-23  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n \n \tPR fortran/84387\n \t* gfortran.dg/dtio_34.f90: New test.\n@@ -7996,7 +8032,7 @@\n \t* gcc.dg/vect/slp-reduc-sad.c: Update scan string.\n \t* gcc.dg/vect/vect-reduc-sad.c: Likewise.\n \n-2019-02-20 Andre Vieira  <andre.simoesdiasvieira@arm.com>\n+2019-02-20  Andre Vieira  <andre.simoesdiasvieira@arm.com>\n \n \tPR target/86487\n \t* gcc.target/arm/pr86487.c: New.\n@@ -8009,7 +8045,7 @@\n 2019-02-20  Li Jia He  <helijia@linux.ibm.com>\n \n \tPR target/88100\n-\t* gcc/testsuite/gcc.target/powerpc/pr88100.c: New testcase.\n+\t* gcc.target/powerpc/pr88100.c: New testcase.\n \n 2019-02-19  Wilco Dijkstra  <wdijkstr@arm.com>\n \n@@ -8293,7 +8329,7 @@\n \tPR c++/89297 - ICE with OVERLOAD in template.\n \t* g++.dg/cpp0x/initlist113.C: New test.\n \n-2019-02-13  Alexandre Oliva <aoliva@redhat.com>\n+2019-02-13  Alexandre Oliva  <aoliva@redhat.com>\n \n \tPR c++/86379\n \t* g++.dg/cpp0x/pr86379.C: New.\n@@ -8568,7 +8604,7 @@\n \tPR/target 88850\n \t* gcc.target/arm/pr88850.c: New test.\n \n-2019-02-07  Alexandre Oliva <aoliva@redhat.com>\n+2019-02-07  Alexandre Oliva  <aoliva@redhat.com>\n \n \tPR c++/86218\n \t* g++.dg/cpp0x/pr86218.C: New.\n@@ -8696,7 +8732,7 @@\n \tPR target/89186\n \t* g++.dg/ext/vector36.C: New test.\n \n-2019-02-05  Alexandre Oliva <aoliva@redhat.com>\n+2019-02-05  Alexandre Oliva  <aoliva@redhat.com>\n \n \tPR c++/87770\n \t* g++.dg/pr87770.C: New.\n@@ -9329,7 +9365,7 @@\n \t* gfortran.dg/pr77960.f90: New test.\n \n 2018-01-19  Thomas Koenig  <tkoenig@gcc.gnu.org>\n-\tPaul Thomas  <pault@gcc.gnu.org>\n+\t    Paul Thomas  <pault@gcc.gnu.org>\n \n \tPR fortran/56789\n \t* gfortran.dg/contiguous_3.f90: Make code compilant.  Remove\n@@ -9671,7 +9707,7 @@\n \n \t* gcc.target/powerpc/altivec_vld_vst_addr.c: New test.\n \n-2019-01-17  Alexandre Oliva <aoliva@redhat.com>\n+2019-01-17  Alexandre Oliva  <aoliva@redhat.com>\n \n \tPR c++/87768\n \t* g++.dg/concepts/pr87768.C: New.\n@@ -10197,8 +10233,8 @@\n \t* g++.dg/diagnostic/thread1.C: Likewise.\n \n 2019-01-07  Thomas Koenig  <tkoenig@gcc.gnu.org>\n-\tHarald Anlauf <anlauf@gmx.de>\n-\tTobias Burnus <burnus@gcc.gnu.org>\n+\t    Harald Anlauf  <anlauf@gmx.de>\n+\t    Tobias Burnus  <burnus@gcc.gnu.org>\n \n \t* gfortran.dg/is_contiguous_1.f90: New test.\n \t* gfortran.dg/is_contiguous_2.f90: New test."}]}