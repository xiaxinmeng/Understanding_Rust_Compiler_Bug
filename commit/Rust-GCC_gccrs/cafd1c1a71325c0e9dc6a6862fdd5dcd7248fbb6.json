{"sha": "cafd1c1a71325c0e9dc6a6862fdd5dcd7248fbb6", "node_id": "C_kwDOANBUbNoAKGNhZmQxYzFhNzEzMjVjMGU5ZGM2YTY4NjJmZGQ1ZGNkNzI0OGZiYjY", "commit": {"author": {"name": "Steve Baird", "email": "baird@adacore.com", "date": "2021-08-05T18:18:19Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "derodat@adacore.com", "date": "2021-10-01T06:13:35Z"}, "message": "[Ada] Improve error message for .ali file version mismatch\n\ngcc/ada/\n\n\t* bcheck.adb (Check_Versions): In the case of an ali file\n\tversion mismatch, if distinct integer values can be extracted\n\tfrom the two version strings then include those values in the\n\tgenerated error message.", "tree": {"sha": "f0203672827883297d935d8ed3a63ccac61c0711", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f0203672827883297d935d8ed3a63ccac61c0711"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/cafd1c1a71325c0e9dc6a6862fdd5dcd7248fbb6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cafd1c1a71325c0e9dc6a6862fdd5dcd7248fbb6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cafd1c1a71325c0e9dc6a6862fdd5dcd7248fbb6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cafd1c1a71325c0e9dc6a6862fdd5dcd7248fbb6/comments", "author": {"login": "swbaird", "id": 50751052, "node_id": "MDQ6VXNlcjUwNzUxMDUy", "avatar_url": "https://avatars.githubusercontent.com/u/50751052?v=4", "gravatar_id": "", "url": "https://api.github.com/users/swbaird", "html_url": "https://github.com/swbaird", "followers_url": "https://api.github.com/users/swbaird/followers", "following_url": "https://api.github.com/users/swbaird/following{/other_user}", "gists_url": "https://api.github.com/users/swbaird/gists{/gist_id}", "starred_url": "https://api.github.com/users/swbaird/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/swbaird/subscriptions", "organizations_url": "https://api.github.com/users/swbaird/orgs", "repos_url": "https://api.github.com/users/swbaird/repos", "events_url": "https://api.github.com/users/swbaird/events{/privacy}", "received_events_url": "https://api.github.com/users/swbaird/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pmderodat", "id": 758452, "node_id": "MDQ6VXNlcjc1ODQ1Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/758452?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pmderodat", "html_url": "https://github.com/pmderodat", "followers_url": "https://api.github.com/users/pmderodat/followers", "following_url": "https://api.github.com/users/pmderodat/following{/other_user}", "gists_url": "https://api.github.com/users/pmderodat/gists{/gist_id}", "starred_url": "https://api.github.com/users/pmderodat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pmderodat/subscriptions", "organizations_url": "https://api.github.com/users/pmderodat/orgs", "repos_url": "https://api.github.com/users/pmderodat/repos", "events_url": "https://api.github.com/users/pmderodat/events{/privacy}", "received_events_url": "https://api.github.com/users/pmderodat/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8e35980ff82ad5a00de3237ad94c1fe942fb0ba4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8e35980ff82ad5a00de3237ad94c1fe942fb0ba4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8e35980ff82ad5a00de3237ad94c1fe942fb0ba4"}], "stats": {"total": 76, "additions": 72, "deletions": 4}, "files": [{"sha": "bf53b4be25d1f516c435f84302137731442922b5", "filename": "gcc/ada/bcheck.adb", "status": "modified", "additions": 72, "deletions": 4, "changes": 76, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cafd1c1a71325c0e9dc6a6862fdd5dcd7248fbb6/gcc%2Fada%2Fbcheck.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cafd1c1a71325c0e9dc6a6862fdd5dcd7248fbb6/gcc%2Fada%2Fbcheck.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fbcheck.adb?ref=cafd1c1a71325c0e9dc6a6862fdd5dcd7248fbb6", "patch": "@@ -29,6 +29,7 @@ with Binderr;  use Binderr;\n with Butil;    use Butil;\n with Casing;   use Casing;\n with Fname;    use Fname;\n+with Gnatvsn;\n with Namet;    use Namet;\n with Opt;      use Opt;\n with Osint;\n@@ -1324,11 +1325,78 @@ package body Bcheck is\n            or else ALIs.Table (A).Ver          (1 .. VL) /=\n                    ALIs.Table (ALIs.First).Ver (1 .. VL)\n          then\n-            Error_Msg_File_1 := ALIs.Table (A).Sfile;\n-            Error_Msg_File_2 := ALIs.Table (ALIs.First).Sfile;\n+            declare\n+               No_Version : constant Int := -1;\n \n-            Consistency_Error_Msg\n-               (\"{ and { compiled with different GNAT versions\");\n+               function Extract_Version (S : String) return Int;\n+               --  Attempts to extract and return a nonnegative library\n+               --  version number from the given string; if unsuccessful,\n+               --  then returns No_Version.\n+\n+               ---------------------\n+               -- Extract_Version --\n+               ---------------------\n+\n+               function Extract_Version (S : String) return Int is\n+                  use Gnatvsn;\n+\n+                  Prefix : constant String :=\n+                     Verbose_Library_Version\n+                       (1 .. Verbose_Library_Version'Length\n+                               - Library_Version'Length);\n+               begin\n+                  pragma Assert (S'First = 1);\n+\n+                  if S'Length > Prefix'Length\n+                     and then S (1 .. Prefix'Length) = Prefix\n+                  then\n+                     declare\n+                        Suffix : constant String :=\n+                          S (1 + Prefix'Length .. S'Last);\n+\n+                        Result : Nat := 0;\n+                     begin\n+                        if Suffix'Length < 10\n+                          and then (for all C of Suffix => C in '0' .. '9')\n+                        then\n+                           --  Using Int'Value leads to complications in\n+                           --  building the binder, so DIY.\n+\n+                           for C of Suffix loop\n+                              Result := (10 * Result) +\n+                                (Character'Pos (C) - Character'Pos ('0'));\n+                           end loop;\n+                           return Result;\n+                        end if;\n+                     end;\n+                  end if;\n+                  return No_Version;\n+               end Extract_Version;\n+\n+               V1_Text : constant String :=\n+                 ALIs.Table (A).Ver (1 .. ALIs.Table (A).Ver_Len);\n+               V2_Text : constant String :=\n+                 ALIs.Table (ALIs.First).Ver (1 .. VL);\n+               V1      : constant Int := Extract_Version (V1_Text);\n+               V2      : constant Int := Extract_Version (V2_Text);\n+\n+               Include_Version_Numbers_In_Message : constant Boolean :=\n+                 (V1 /= V2) and (V1 /= No_Version) and (V2 /= No_Version);\n+            begin\n+               Error_Msg_File_1 := ALIs.Table (A).Sfile;\n+               Error_Msg_File_2 := ALIs.Table (ALIs.First).Sfile;\n+\n+               if Include_Version_Numbers_In_Message then\n+                  Error_Msg_Nat_1 := V1;\n+                  Error_Msg_Nat_2 := V2;\n+                  Consistency_Error_Msg\n+                    (\"{ and { compiled with different GNAT versions\"\n+                     & \", v# and v#\");\n+               else\n+                  Consistency_Error_Msg\n+                    (\"{ and { compiled with different GNAT versions\");\n+               end if;\n+            end;\n          end if;\n       end loop;\n    end Check_Versions;"}]}