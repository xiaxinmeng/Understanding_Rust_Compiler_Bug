{"sha": "7bed1d3d811b3e609593c4ff45ec5c554fba0143", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6N2JlZDFkM2Q4MTFiM2U2MDk1OTNjNGZmNDVlYzVjNTU0ZmJhMDE0Mw==", "commit": {"author": {"name": "Kyrylo Tkachov", "email": "kyrylo.tkachov@arm.com", "date": "2015-07-23T09:21:27Z"}, "committer": {"name": "Kyrylo Tkachov", "email": "ktkachov@gcc.gnu.org", "date": "2015-07-23T09:21:27Z"}, "message": "[combine][obvious] Use std::swap in try_combine\n\n\t* combine.c (try_combine): Use std::swap instead of manually\n\tswapping.\n\nFrom-SVN: r226094", "tree": {"sha": "76955058b2295d965806497ceb9e5e513a2762f4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/76955058b2295d965806497ceb9e5e513a2762f4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7bed1d3d811b3e609593c4ff45ec5c554fba0143", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7bed1d3d811b3e609593c4ff45ec5c554fba0143", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7bed1d3d811b3e609593c4ff45ec5c554fba0143", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7bed1d3d811b3e609593c4ff45ec5c554fba0143/comments", "author": {"login": "ktkachov-arm", "id": 74917949, "node_id": "MDQ6VXNlcjc0OTE3OTQ5", "avatar_url": "https://avatars.githubusercontent.com/u/74917949?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ktkachov-arm", "html_url": "https://github.com/ktkachov-arm", "followers_url": "https://api.github.com/users/ktkachov-arm/followers", "following_url": "https://api.github.com/users/ktkachov-arm/following{/other_user}", "gists_url": "https://api.github.com/users/ktkachov-arm/gists{/gist_id}", "starred_url": "https://api.github.com/users/ktkachov-arm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ktkachov-arm/subscriptions", "organizations_url": "https://api.github.com/users/ktkachov-arm/orgs", "repos_url": "https://api.github.com/users/ktkachov-arm/repos", "events_url": "https://api.github.com/users/ktkachov-arm/events{/privacy}", "received_events_url": "https://api.github.com/users/ktkachov-arm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "7ccb4e4e6a16604a91b803e07b549816f5171d37", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7ccb4e4e6a16604a91b803e07b549816f5171d37", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7ccb4e4e6a16604a91b803e07b549816f5171d37"}], "stats": {"total": 11, "additions": 8, "deletions": 3}, "files": [{"sha": "28538ab30852fa15bb595f0336f327c99a9ca48e", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7bed1d3d811b3e609593c4ff45ec5c554fba0143/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7bed1d3d811b3e609593c4ff45ec5c554fba0143/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=7bed1d3d811b3e609593c4ff45ec5c554fba0143", "patch": "@@ -1,3 +1,8 @@\n+2015-07-23  Kyrylo Tkachov  <kyrylo.tkachov@arm.com>\n+\n+\t* combine.c (try_combine): Use std::swap instead of manually\n+\tswapping.\n+\n 2015-07-23  Prachi Godbole  <prachi.godbole@imgtec.com>\n \n \t* config/mips/i6400.md: New file."}, {"sha": "e47cbc4552b488f36b9e9d98c42ddfa5b31cdfba", "filename": "gcc/combine.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7bed1d3d811b3e609593c4ff45ec5c554fba0143/gcc%2Fcombine.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7bed1d3d811b3e609593c4ff45ec5c554fba0143/gcc%2Fcombine.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcombine.c?ref=7bed1d3d811b3e609593c4ff45ec5c554fba0143", "patch": "@@ -2730,11 +2730,11 @@ try_combine (rtx_insn *i3, rtx_insn *i2, rtx_insn *i1, rtx_insn *i0,\n   /* If multiple insns feed into one of I2 or I3, they can be in any\n      order.  To simplify the code below, reorder them in sequence.  */\n   if (i0 && DF_INSN_LUID (i0) > DF_INSN_LUID (i2))\n-    temp_insn = i2, i2 = i0, i0 = temp_insn;\n+    std::swap (i0, i2);\n   if (i0 && DF_INSN_LUID (i0) > DF_INSN_LUID (i1))\n-    temp_insn = i1, i1 = i0, i0 = temp_insn;\n+    std::swap (i0, i1);\n   if (i1 && DF_INSN_LUID (i1) > DF_INSN_LUID (i2))\n-    temp_insn = i1, i1 = i2, i2 = temp_insn;\n+    std::swap (i1, i2);\n \n   added_links_insn = 0;\n "}]}