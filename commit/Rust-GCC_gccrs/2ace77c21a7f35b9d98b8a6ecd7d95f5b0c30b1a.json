{"sha": "2ace77c21a7f35b9d98b8a6ecd7d95f5b0c30b1a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmFjZTc3YzIxYTdmMzViOWQ5OGI4YTZlY2Q3ZDk1ZjViMGMzMGIxYQ==", "commit": {"author": {"name": "Jan Hubicka", "email": "hubicka@ucw.cz", "date": "2014-02-02T18:56:33Z"}, "committer": {"name": "Jan Hubicka", "email": "hubicka@gcc.gnu.org", "date": "2014-02-02T18:56:33Z"}, "message": "ipa-prop.c (update_jump_functions_after_inlining): When type is not preserverd by passthrough, do not propagate the type.\n\n\n\n\t* ipa-prop.c (update_jump_functions_after_inlining): When type is not\n\tpreserverd by passthrough, do not propagate the type.\n\t* g++.dg/ipa/devirt-23.C: New testcase.\n\nFrom-SVN: r207405", "tree": {"sha": "df688f58672abd79650138829dcf8c5fc787554b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/df688f58672abd79650138829dcf8c5fc787554b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2ace77c21a7f35b9d98b8a6ecd7d95f5b0c30b1a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2ace77c21a7f35b9d98b8a6ecd7d95f5b0c30b1a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2ace77c21a7f35b9d98b8a6ecd7d95f5b0c30b1a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2ace77c21a7f35b9d98b8a6ecd7d95f5b0c30b1a/comments", "author": null, "committer": null, "parents": [{"sha": "e738433e45336d14904a8142169bbbf4dd7faa28", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e738433e45336d14904a8142169bbbf4dd7faa28", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e738433e45336d14904a8142169bbbf4dd7faa28"}], "stats": {"total": 61, "additions": 57, "deletions": 4}, "files": [{"sha": "09b1208ec94714122d0ab625b88f024eb53b5976", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2ace77c21a7f35b9d98b8a6ecd7d95f5b0c30b1a/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2ace77c21a7f35b9d98b8a6ecd7d95f5b0c30b1a/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=2ace77c21a7f35b9d98b8a6ecd7d95f5b0c30b1a", "patch": "@@ -1,3 +1,8 @@\n+2014-02-02  Jan Hubicka  <hubicka@ucw.cz>\n+\n+\t* ipa-prop.c (update_jump_functions_after_inlining): When type is not\n+\tpreserverd by passthrough, do not propagate the type.\n+\n 2014-02-02  Richard Sandiford  <rdsandiford@googlemail.com>\n \n \t* config/mips/mips.c (MIPS_GET_FCSR, MIPS_SET_FCSR): New macros."}, {"sha": "f8a1ca4f3d448cbcf6cec942dd3631e2a1190c8e", "filename": "gcc/ipa-prop.c", "status": "modified", "additions": 7, "deletions": 4, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2ace77c21a7f35b9d98b8a6ecd7d95f5b0c30b1a/gcc%2Fipa-prop.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2ace77c21a7f35b9d98b8a6ecd7d95f5b0c30b1a/gcc%2Fipa-prop.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fipa-prop.c?ref=2ace77c21a7f35b9d98b8a6ecd7d95f5b0c30b1a", "patch": "@@ -2359,10 +2359,13 @@ update_jump_functions_after_inlining (struct cgraph_edge *cs,\n \t\t  dst->type = IPA_JF_UNKNOWN;\n \t\t  break;\n \t\tcase IPA_JF_KNOWN_TYPE:\n-\t\t  ipa_set_jf_known_type (dst,\n-\t\t\t\t\t ipa_get_jf_known_type_offset (src),\n-\t\t\t\t\t ipa_get_jf_known_type_base_type (src),\n-\t\t\t\t\t ipa_get_jf_known_type_base_type (src));\n+\t\t  if (ipa_get_jf_pass_through_type_preserved (dst))\n+\t\t    ipa_set_jf_known_type (dst,\n+\t\t\t\t\t   ipa_get_jf_known_type_offset (src),\n+\t\t\t\t\t   ipa_get_jf_known_type_base_type (src),\n+\t\t\t\t\t   ipa_get_jf_known_type_base_type (src));\n+\t\t  else\n+\t\t    dst->type = IPA_JF_UNKNOWN;\n \t\t  break;\n \t\tcase IPA_JF_CONST:\n \t\t  ipa_set_jf_cst_copy (dst, src);"}, {"sha": "0e17c17166a63ff30bbaba8934275e3e35a9d0b6", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2ace77c21a7f35b9d98b8a6ecd7d95f5b0c30b1a/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2ace77c21a7f35b9d98b8a6ecd7d95f5b0c30b1a/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=2ace77c21a7f35b9d98b8a6ecd7d95f5b0c30b1a", "patch": "@@ -1,3 +1,7 @@\n+2014-02-02  Jan Hubicka  <hubicka@ucw.cz>\n+\n+\t* g++.dg/ipa/devirt-23.C: New testcase.\n+\n 2014-02-02  Richard Sandiford  <rdsandiford@googlemail.com>\n \n \t* gcc.target/mips/get-fcsr-1.c, gcc.target/mips/get-fcsr-2.c,"}, {"sha": "99f60afe33c561d3e9850175900273974a87dd49", "filename": "gcc/testsuite/g++.dg/ipa/devirt-21.C", "status": "added", "additions": 41, "deletions": 0, "changes": 41, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2ace77c21a7f35b9d98b8a6ecd7d95f5b0c30b1a/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fipa%2Fdevirt-21.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2ace77c21a7f35b9d98b8a6ecd7d95f5b0c30b1a/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fipa%2Fdevirt-21.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fipa%2Fdevirt-21.C?ref=2ace77c21a7f35b9d98b8a6ecd7d95f5b0c30b1a", "patch": "@@ -0,0 +1,41 @@\n+/* { dg-do run } */\n+/* { dg-options \"-O3 -fno-early-inlining -fno-ipa-sra -fdump-ipa-cp\"  } */\n+/* Main purpose is to verify that we do not produce wrong devirtualization to\n+   C::m_fn1.  We currently devirtualize to B::m_fn1, so check that. */\n+#include <stdlib.h>\n+class A {\n+public:\n+  unsigned length;\n+};\n+class B {};\n+class MultiTermDocs : public virtual B {\n+protected:\n+  A readerTermDocs;\n+  A subReaders;\n+  virtual B *m_fn1(int *) {}\n+  virtual inline  ~MultiTermDocs();\n+  void wrap(void)\n+  {\n+  m_fn1(NULL);\n+  }\n+};\n+class C : MultiTermDocs {\n+  B *m_fn1(int *);\n+};\n+MultiTermDocs::~MultiTermDocs() {\n+  wrap ();\n+  if (&readerTermDocs) {\n+    B *a;\n+    for (unsigned i = 0; i < subReaders.length; i++)\n+      (a != 0);\n+  }\n+}\n+\n+B *C::m_fn1(int *) { abort (); }\n+\n+main()\n+{\n+  class C c;\n+}\n+/* { dg-final { scan-ipa-dump \"Discovered a virtual call to\" \"cp\" } } */\n+/* { dg-final { cleanup-ipa-dump \"cp\" } } */"}]}