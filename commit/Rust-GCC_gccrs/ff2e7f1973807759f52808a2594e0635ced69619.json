{"sha": "ff2e7f1973807759f52808a2594e0635ced69619", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZmYyZTdmMTk3MzgwNzc1OWY1MjgwOGEyNTk0ZTA2MzVjZWQ2OTYxOQ==", "commit": {"author": {"name": "Marc Glisse", "email": "marc.glisse@inria.fr", "date": "2018-11-22T18:10:05Z"}, "committer": {"name": "Marc Glisse", "email": "glisse@gcc.gnu.org", "date": "2018-11-22T18:10:05Z"}, "message": "Improve relocation\n\n2018-11-22  Marc Glisse  <marc.glisse@inria.fr>\n\n\tPR libstdc++/87106\n\t* include/bits/stl_algobase.h: Include <type_traits>.\n\t(__niter_base): Add noexcept specification.\n\t* include/bits/stl_deque.h: Include <bits/stl_uninitialized.h>.\n\t(__is_trivially_relocatable): Specialize for deque.\n\t* include/bits/stl_iterator.h: Include <type_traits>.\n\t(__niter_base): Add noexcept specification.\n\t* include/bits/stl_uninitialized.h (__is_trivially_relocatable):\n\tAdd parameter for meta-programming.\n\t(__relocate_a_1, __relocate_a): Add noexcept specification.\n\t* include/bits/stl_vector.h (__use_relocate): Test __relocate_a.\n\nFrom-SVN: r266386", "tree": {"sha": "1e01d6887f8679c8849b7d04647aed21957b9c1b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1e01d6887f8679c8849b7d04647aed21957b9c1b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ff2e7f1973807759f52808a2594e0635ced69619", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ff2e7f1973807759f52808a2594e0635ced69619", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ff2e7f1973807759f52808a2594e0635ced69619", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ff2e7f1973807759f52808a2594e0635ced69619/comments", "author": {"login": "mglisse", "id": 10097863, "node_id": "MDQ6VXNlcjEwMDk3ODYz", "avatar_url": "https://avatars.githubusercontent.com/u/10097863?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mglisse", "html_url": "https://github.com/mglisse", "followers_url": "https://api.github.com/users/mglisse/followers", "following_url": "https://api.github.com/users/mglisse/following{/other_user}", "gists_url": "https://api.github.com/users/mglisse/gists{/gist_id}", "starred_url": "https://api.github.com/users/mglisse/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mglisse/subscriptions", "organizations_url": "https://api.github.com/users/mglisse/orgs", "repos_url": "https://api.github.com/users/mglisse/repos", "events_url": "https://api.github.com/users/mglisse/events{/privacy}", "received_events_url": "https://api.github.com/users/mglisse/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "eeae9314d4449b765ab41a7bfbb8938d0bc83fa9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/eeae9314d4449b765ab41a7bfbb8938d0bc83fa9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/eeae9314d4449b765ab41a7bfbb8938d0bc83fa9"}], "stats": {"total": 54, "additions": 45, "deletions": 9}, "files": [{"sha": "1e8072db07e407772fd1a9b455e88d7ac9b59cc9", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ff2e7f1973807759f52808a2594e0635ced69619/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ff2e7f1973807759f52808a2594e0635ced69619/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=ff2e7f1973807759f52808a2594e0635ced69619", "patch": "@@ -1,3 +1,17 @@\n+2018-11-22  Marc Glisse  <marc.glisse@inria.fr>\n+\n+\tPR libstdc++/87106\n+\t* include/bits/stl_algobase.h: Include <type_traits>.\n+\t(__niter_base): Add noexcept specification.\n+\t* include/bits/stl_deque.h: Include <bits/stl_uninitialized.h>.\n+\t(__is_trivially_relocatable): Specialize for deque.\n+\t* include/bits/stl_iterator.h: Include <type_traits>.\n+\t(__niter_base): Add noexcept specification.\n+\t* include/bits/stl_uninitialized.h (__is_trivially_relocatable):\n+\tAdd parameter for meta-programming.\n+\t(__relocate_a_1, __relocate_a): Add noexcept specification.\n+\t* include/bits/stl_vector.h (__use_relocate): Test __relocate_a.\n+\n 2018-11-22  Jonathan Wakely  <jwakely@redhat.com>\n \n \tPR libstdc++/85930"}, {"sha": "d1e1f67d385419ea363c8852311d82d625ffe3e5", "filename": "libstdc++-v3/include/bits/stl_algobase.h", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ff2e7f1973807759f52808a2594e0635ced69619/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_algobase.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ff2e7f1973807759f52808a2594e0635ced69619/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_algobase.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_algobase.h?ref=ff2e7f1973807759f52808a2594e0635ced69619", "patch": "@@ -69,6 +69,9 @@\n #include <debug/debug.h>\n #include <bits/move.h> // For std::swap\n #include <bits/predefined_ops.h>\n+#if __cplusplus >= 201103L\n+# include <type_traits>\n+#endif\n \n namespace std _GLIBCXX_VISIBILITY(default)\n {\n@@ -275,6 +278,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n   template<typename _Iterator>\n     inline _Iterator\n     __niter_base(_Iterator __it)\n+    _GLIBCXX_NOEXCEPT_IF(std::is_nothrow_copy_constructible<_Iterator>::value)\n     { return __it; }\n \n   // Reverse the __niter_base transformation to get a"}, {"sha": "5d1b4281a33906480b9b4178d640494789212468", "filename": "libstdc++-v3/include/bits/stl_deque.h", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ff2e7f1973807759f52808a2594e0635ced69619/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_deque.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ff2e7f1973807759f52808a2594e0635ced69619/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_deque.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_deque.h?ref=ff2e7f1973807759f52808a2594e0635ced69619", "patch": "@@ -61,6 +61,7 @@\n #include <bits/stl_iterator_base_funcs.h>\n #if __cplusplus >= 201103L\n #include <initializer_list>\n+#include <bits/stl_uninitialized.h> // for __is_trivially_relocatable\n #endif\n \n #include <debug/assertions.h>\n@@ -2366,6 +2367,15 @@ _GLIBCXX_BEGIN_NAMESPACE_CONTAINER\n #undef _GLIBCXX_DEQUE_BUF_SIZE\n \n _GLIBCXX_END_NAMESPACE_CONTAINER\n+\n+#if __cplusplus >= 201103L\n+  // std::allocator is safe, but it is not the only allocator\n+  // for which this is valid.\n+  template<class _Tp>\n+    struct __is_trivially_relocatable<_GLIBCXX_STD_C::deque<_Tp>>\n+    : true_type { };\n+#endif\n+\n _GLIBCXX_END_NAMESPACE_VERSION\n } // namespace std\n "}, {"sha": "1f0c0813054bc1b0bdd8e05019fad6c4f4a99ee3", "filename": "libstdc++-v3/include/bits/stl_iterator.h", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ff2e7f1973807759f52808a2594e0635ced69619/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_iterator.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ff2e7f1973807759f52808a2594e0635ced69619/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_iterator.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_iterator.h?ref=ff2e7f1973807759f52808a2594e0635ced69619", "patch": "@@ -65,6 +65,10 @@\n #include <bits/move.h>\n #include <bits/ptr_traits.h>\n \n+#if __cplusplus >= 201103L\n+# include <type_traits>\n+#endif\n+\n #if __cplusplus > 201402L\n # define __cpp_lib_array_constexpr 201603\n #endif\n@@ -1004,6 +1008,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n   template<typename _Iterator, typename _Container>\n     _Iterator\n     __niter_base(__gnu_cxx::__normal_iterator<_Iterator, _Container> __it)\n+    _GLIBCXX_NOEXCEPT_IF(std::is_nothrow_copy_constructible<_Iterator>::value)\n     { return __it.base(); }\n \n #if __cplusplus >= 201103L"}, {"sha": "cec013442136fe2f5a65df3f0dea9ee05369fda6", "filename": "libstdc++-v3/include/bits/stl_uninitialized.h", "status": "modified", "additions": 8, "deletions": 5, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ff2e7f1973807759f52808a2594e0635ced69619/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_uninitialized.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ff2e7f1973807759f52808a2594e0635ced69619/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_uninitialized.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_uninitialized.h?ref=ff2e7f1973807759f52808a2594e0635ced69619", "patch": "@@ -894,14 +894,14 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n     }\n \n   // This class may be specialized for specific types.\n-  template<typename _Tp>\n+  template<typename _Tp, typename = void>\n     struct __is_trivially_relocatable\n     : is_trivial<_Tp> { };\n \n   template <typename _Tp, typename _Up>\n     inline __enable_if_t<std::__is_trivially_relocatable<_Tp>::value, _Tp*>\n     __relocate_a_1(_Tp* __first, _Tp* __last,\n-\t\t   _Tp* __result, allocator<_Up>& __alloc)\n+\t\t   _Tp* __result, allocator<_Up>& __alloc) noexcept\n     {\n       ptrdiff_t __count = __last - __first;\n       if (__count > 0)\n@@ -914,15 +914,15 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n     inline _ForwardIterator\n     __relocate_a_1(_InputIterator __first, _InputIterator __last,\n \t\t   _ForwardIterator __result, _Allocator& __alloc)\n+    noexcept(noexcept(std::__relocate_object_a(std::addressof(*__result),\n+\t\t\t\t\t       std::addressof(*__first),\n+\t\t\t\t\t       __alloc)))\n     {\n       typedef typename iterator_traits<_InputIterator>::value_type\n \t_ValueType;\n       typedef typename iterator_traits<_ForwardIterator>::value_type\n \t_ValueType2;\n       static_assert(std::is_same<_ValueType, _ValueType2>::value);\n-      static_assert(noexcept(std::__relocate_object_a(std::addressof(*__result),\n-\t\t\t\t\t\t      std::addressof(*__first),\n-\t\t\t\t\t\t      __alloc)));\n       _ForwardIterator __cur = __result;\n       for (; __first != __last; ++__first, (void)++__cur)\n \tstd::__relocate_object_a(std::__addressof(*__cur),\n@@ -935,6 +935,9 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n     inline _ForwardIterator\n     __relocate_a(_InputIterator __first, _InputIterator __last,\n \t\t _ForwardIterator __result, _Allocator& __alloc)\n+    noexcept(noexcept(__relocate_a_1(std::__niter_base(__first),\n+\t\t\t\t     std::__niter_base(__last),\n+\t\t\t\t     std::__niter_base(__result), __alloc)))\n     {\n       return __relocate_a_1(std::__niter_base(__first),\n \t\t\t    std::__niter_base(__last),"}, {"sha": "07dcd581ff72433ea5835820328abb72809debe9", "filename": "libstdc++-v3/include/bits/stl_vector.h", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ff2e7f1973807759f52808a2594e0635ced69619/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_vector.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ff2e7f1973807759f52808a2594e0635ced69619/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_vector.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_vector.h?ref=ff2e7f1973807759f52808a2594e0635ced69619", "patch": "@@ -425,10 +425,10 @@ _GLIBCXX_BEGIN_NAMESPACE_CONTAINER\n     private:\n #if __cplusplus >= 201103L\n       static constexpr bool __use_relocate =\n-\tnoexcept(std::__relocate_object_a(\n-\t\t\tstd::addressof(*std::declval<pointer>()),\n-\t\t\tstd::addressof(*std::declval<pointer>()),\n-\t\t\tstd::declval<_Tp_alloc_type&>()));\n+\tnoexcept(std::__relocate_a(std::declval<pointer>(),\n+\t\t\t\t   std::declval<pointer>(),\n+\t\t\t\t   std::declval<pointer>(),\n+\t\t\t\t   std::declval<_Tp_alloc_type&>()));\n #endif\n \n     protected:"}]}