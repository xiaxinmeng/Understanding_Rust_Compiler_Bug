{"sha": "8dffffd00c45584f9adc10472a7ad8907ea1c7f4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGRmZmZmZDAwYzQ1NTg0ZjlhZGMxMDQ3MmE3YWQ4OTA3ZWExYzdmNA==", "commit": {"author": {"name": "Sebastian Pop", "email": "s.pop@samsung.com", "date": "2016-01-29T04:31:40Z"}, "committer": {"name": "Sebastian Pop", "email": "spop@gcc.gnu.org", "date": "2016-01-29T04:31:40Z"}, "message": "PR69545: revert patch\n\nRevert 'assert instead of silently failing code gen' that produces an ICE with isl-0.14.\n\nFrom-SVN: r232966", "tree": {"sha": "a88a45090be7d2565dd5c7c6da2a7a3c55af4fcd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a88a45090be7d2565dd5c7c6da2a7a3c55af4fcd"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8dffffd00c45584f9adc10472a7ad8907ea1c7f4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8dffffd00c45584f9adc10472a7ad8907ea1c7f4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8dffffd00c45584f9adc10472a7ad8907ea1c7f4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8dffffd00c45584f9adc10472a7ad8907ea1c7f4/comments", "author": null, "committer": {"login": "sebpop", "id": 568397, "node_id": "MDQ6VXNlcjU2ODM5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/568397?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sebpop", "html_url": "https://github.com/sebpop", "followers_url": "https://api.github.com/users/sebpop/followers", "following_url": "https://api.github.com/users/sebpop/following{/other_user}", "gists_url": "https://api.github.com/users/sebpop/gists{/gist_id}", "starred_url": "https://api.github.com/users/sebpop/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sebpop/subscriptions", "organizations_url": "https://api.github.com/users/sebpop/orgs", "repos_url": "https://api.github.com/users/sebpop/repos", "events_url": "https://api.github.com/users/sebpop/events{/privacy}", "received_events_url": "https://api.github.com/users/sebpop/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e9f690692b275e87089aedd84cf3325985136e2e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e9f690692b275e87089aedd84cf3325985136e2e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e9f690692b275e87089aedd84cf3325985136e2e"}], "stats": {"total": 26, "additions": 21, "deletions": 5}, "files": [{"sha": "bbdc5f7b92f9ecf72b0f02640a4131f930d82c3c", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8dffffd00c45584f9adc10472a7ad8907ea1c7f4/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8dffffd00c45584f9adc10472a7ad8907ea1c7f4/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=8dffffd00c45584f9adc10472a7ad8907ea1c7f4", "patch": "@@ -1,3 +1,8 @@\n+2016-01-28  Sebastian Pop  <s.pop@samsung.com>\n+\n+\t* graphite-isl-ast-to-gimple.c (get_rename_from_scev): Revert assert\n+\tback to setting codegen_error to fail codegen.\n+\n 2016-01-28  Uros Bizjak  <ubizjak@gmail.com>\n \n \tPR target/69459"}, {"sha": "d3614e48cd8f6ebfe9917b616a1c999e561ca22f", "filename": "gcc/graphite-isl-ast-to-gimple.c", "status": "modified", "additions": 16, "deletions": 5, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8dffffd00c45584f9adc10472a7ad8907ea1c7f4/gcc%2Fgraphite-isl-ast-to-gimple.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8dffffd00c45584f9adc10472a7ad8907ea1c7f4/gcc%2Fgraphite-isl-ast-to-gimple.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgraphite-isl-ast-to-gimple.c?ref=8dffffd00c45584f9adc10472a7ad8907ea1c7f4", "patch": "@@ -1587,17 +1587,28 @@ get_rename_from_scev (tree old_name, gimple_seq *stmts, loop_p loop,\n   tree scev = scalar_evolution_in_region (region->region, loop, old_name);\n \n   /* At this point we should know the exact scev for each\n-     scalar SSA_NAME used in the scop.  */\n-  gcc_assert (!chrec_contains_undetermined (scev));\n+     scalar SSA_NAME used in the scop: all the other scalar\n+     SSA_NAMEs should have been translated out of SSA using\n+     arrays with one element.  */\n+  tree new_expr;\n+  if (chrec_contains_undetermined (scev))\n+    {\n+      codegen_error = true;\n+      return build_zero_cst (TREE_TYPE (old_name));\n+    }\n \n-  tree new_expr = chrec_apply_map (scev, iv_map);\n+  new_expr = chrec_apply_map (scev, iv_map);\n \n   /* The apply should produce an expression tree containing\n      the uses of the new induction variables.  We should be\n      able to use new_expr instead of the old_name in the newly\n      generated loop nest.  */\n-  gcc_assert (!chrec_contains_undetermined (new_expr)\n-\t      && !tree_contains_chrecs (new_expr, NULL));\n+  if (chrec_contains_undetermined (new_expr)\n+      || tree_contains_chrecs (new_expr, NULL))\n+    {\n+      codegen_error = true;\n+      return build_zero_cst (TREE_TYPE (old_name));\n+    }\n \n   if (TREE_CODE (new_expr) == SSA_NAME)\n     {"}]}