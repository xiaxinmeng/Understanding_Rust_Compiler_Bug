{"sha": "5bc69b925dfb46c3cc511a4a03c1c70da48d08de", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWJjNjliOTI1ZGZiNDZjM2NjNTExYTRhMDNjMWM3MGRhNDhkMDhkZQ==", "commit": {"author": {"name": "Shujing Zhao", "email": "pearly.zhao@oracle.com", "date": "2010-01-14T06:28:27Z"}, "committer": {"name": "Shujing Zhao", "email": "pzhao@gcc.gnu.org", "date": "2010-01-14T06:28:27Z"}, "message": "re PR translation/39521 (specs diagnostics translation problems)\n\npo/\n2010-01-14  Shujing Zhao  <pearly.zhao@oracle.com>\n\n        PR translation/39521\n        * exgettext: Extracted all specs %n strings and the %e strings that %e\n        is at the start of a line.\n\n2010-01-14  Shujing Zhao  <pearly.zhao@oracle.com>\n\n        PR translation/39521\n        * gcc.c (do_spec_1): Wrapped the error and notice messages of specs\n        strings with _().\n\nFrom-SVN: r155878", "tree": {"sha": "b0c2231fe93a06487f7d39316a589e11af3b681b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b0c2231fe93a06487f7d39316a589e11af3b681b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5bc69b925dfb46c3cc511a4a03c1c70da48d08de", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5bc69b925dfb46c3cc511a4a03c1c70da48d08de", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5bc69b925dfb46c3cc511a4a03c1c70da48d08de", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5bc69b925dfb46c3cc511a4a03c1c70da48d08de/comments", "author": null, "committer": null, "parents": [{"sha": "40c3294835c9e8e416c0eae4688c1160ffc8ad3f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/40c3294835c9e8e416c0eae4688c1160ffc8ad3f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/40c3294835c9e8e416c0eae4688c1160ffc8ad3f"}], "stats": {"total": 48, "additions": 35, "deletions": 13}, "files": [{"sha": "80ab5e67c15bfa1bd5c04dbdacc1b1db5f9b4d69", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5bc69b925dfb46c3cc511a4a03c1c70da48d08de/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5bc69b925dfb46c3cc511a4a03c1c70da48d08de/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=5bc69b925dfb46c3cc511a4a03c1c70da48d08de", "patch": "@@ -1,3 +1,9 @@\n+2010-01-14  Shujing Zhao  <pearly.zhao@oracle.com>\n+\n+\tPR translation/39521\n+\t* gcc.c (do_spec_1): Wrapped the error and notice messages of specs\n+\tstrings with _().\n+\n 2010-01-13  Richard Guenther  <rguenther@suse.de>\n \n \tPR tree-optimization/42730"}, {"sha": "8efb5704b4afce4ea991e0ccc6ed549accd3ea84", "filename": "gcc/gcc.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5bc69b925dfb46c3cc511a4a03c1c70da48d08de/gcc%2Fgcc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5bc69b925dfb46c3cc511a4a03c1c70da48d08de/gcc%2Fgcc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgcc.c?ref=5bc69b925dfb46c3cc511a4a03c1c70da48d08de", "patch": "@@ -5248,7 +5248,7 @@ do_spec_1 (const char *spec, int inswitch, const char *soft_matched_part)\n \t      buf = (char *) alloca (p - q + 1);\n \t      strncpy (buf, q, p - q);\n \t      buf[p - q] = 0;\n-\t      error (\"%s\", buf);\n+\t      error (\"%s\", _(buf));\n \t      return -1;\n \t    }\n \t    break;\n@@ -5262,7 +5262,7 @@ do_spec_1 (const char *spec, int inswitch, const char *soft_matched_part)\n \t      buf = (char *) alloca (p - q + 1);\n \t      strncpy (buf, q, p - q);\n \t      buf[p - q] = 0;\n-\t      notice (\"%s\\n\", buf);\n+\t      notice (\"%s\\n\", _(buf));\n \t      if (*p)\n \t\tp++;\n \t    }"}, {"sha": "5b09d0d8028cd8fdaaa97f604c638374f06d6b78", "filename": "gcc/po/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5bc69b925dfb46c3cc511a4a03c1c70da48d08de/gcc%2Fpo%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5bc69b925dfb46c3cc511a4a03c1c70da48d08de/gcc%2Fpo%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fpo%2FChangeLog?ref=5bc69b925dfb46c3cc511a4a03c1c70da48d08de", "patch": "@@ -1,3 +1,9 @@\n+2010-01-14  Shujing Zhao  <pearly.zhao@oracle.com>\n+\n+\tPR translation/39521\n+\t* exgettext: Extracted all specs %n strings and the %e strings that %e\n+\tis at the start of a line.\n+\n 2010-01-11  Joseph Myers  <joseph@codesourcery.com>\n \n \t* fi.po: Update."}, {"sha": "7ff3799fa20776d5b16eddcb76cc137ecd2b086c", "filename": "gcc/po/exgettext", "status": "modified", "additions": 21, "deletions": 11, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5bc69b925dfb46c3cc511a4a03c1c70da48d08de/gcc%2Fpo%2Fexgettext", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5bc69b925dfb46c3cc511a4a03c1c70da48d08de/gcc%2Fpo%2Fexgettext", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fpo%2Fexgettext?ref=5bc69b925dfb46c3cc511a4a03c1c70da48d08de", "patch": "@@ -75,12 +75,12 @@ pottmp=$pwd/$T/tmp.pot\n # Then generate keyword options for xgettext, by scanning for declarations\n # of functions whose parameter names end in \"msgid\".\n #\n-# Finally, generate a source file containing all %e strings from\n+# Finally, generate a source file containing all %e and %n strings from\n # driver specs, so those can be translated too.\n #\n # All in one huge awk script.\n \n-echo \"scanning for keywords and %e strings...\" >&2\n+echo \"scanning for keywords, %e and %n strings...\" >&2\n \n ( cd $srcdir\n   lang_subdirs=`echo */config-lang.in */*/config-lang.in | sed -e 's|config-lang\\.in||g'`\n@@ -132,24 +132,34 @@ function keyword_option(line) {\n }\n \n function spec_error_string (line) {\n-    while ((percent_index = index(line, \"%e\")) != 0) {\n-\tescape = substr(line, percent_index - 1, 1)\n+    if (index(line, \"%e\") != 0 && index(line, \"%n\") != 0) return\n+    while ((percent_index = index(line, \"%e\")) != 0 || \n+\t   (percent_index = index(line, \"%n\")) != 0) {\n \tline = substr(line, percent_index + 2)\n-\tif (escape == \"%\") continue\n \n \tbracket_index = index(line, \"}\")\n+\tnewline_index = index(line, \"\\\\n\")\n+\t\t\n \tquote_index = index(line, \"\\\"\")\n-\tif (bracket_index == 0) return\n-\tif (quote_index != 0 && bracket_index > quote_index) return\n+\tif (bracket_index == 0 && newline_index == 0) return\n \n-\tmsgid = substr(line, 1, bracket_index - 1)\n-\tline = substr(line, bracket_index + 1)\n+\tif (bracket_index != 0) {\n+\t  if (quote_index != 0 && bracket_index > quote_index) return\n+\t  msgid = substr(line, 1, bracket_index - 1)\n+\t  line = substr(line, bracket_index + 1)\n+\t}\n+\telse if (newline_index != 0) {\n+\t  if (quote_index != 0 && quote_index > newline_index) return\n+\t  msgid = substr(line, 1, newline_index - 1)\n+\t  line = substr(line, newline_index + 1)\n+\t}\n \n \tif (index(msgid, \"%\") != 0) continue\n \n+\tif ((newline_index = index(msgid, \"\\\\n\")) != 0)\n+\t  msgid = substr(msgid, 1, newline_index - 1)\n \tprintf(\"#line %d \\\"%s\\\"\\n\", lineno, file) > emsg\n \tprintf(\"_(\\\"%s\\\")\\n\", msgid) > emsg\n-\n     }\n }\n \n@@ -174,7 +184,7 @@ END {\n \twhile (getline < file) {\n \t    if (/^(#[ \t]*define[ \t]*)?[A-Za-z_].*\\(.*msgid[,\\)]/) {\n \t\tkeyword_option($0)\n-\t    } else if (/%e/) {\n+\t    } else if (/%e/ || /%n/) {\n \t\tspec_error_string($0)\n \t    }\n \t    lineno++"}]}