{"sha": "7a2f2d91aa6d18b0ab4194f9eb94262016a09803", "node_id": "C_kwDOANBUbNoAKDdhMmYyZDkxYWE2ZDE4YjBhYjQxOTRmOWViOTQyNjIwMTZhMDk4MDM", "commit": {"author": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2022-01-05T11:16:06Z"}, "committer": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2022-01-05T13:47:02Z"}, "message": "libstdc++: Add pretty printer for std::regex internals\n\nThis helps visualize the NFA states in a std::regex.  It probably isn't\nvery useful for users, but helps when working on the implementation.\n\nlibstdc++-v3/ChangeLog:\n\n\t* python/libstdcxx/v6/printers.py (StdRegexStatePrinter): New\n\tprinter for std::regex NFA states.", "tree": {"sha": "5e0b5fb86de1973b9618389aed017af5a85dc15d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5e0b5fb86de1973b9618389aed017af5a85dc15d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7a2f2d91aa6d18b0ab4194f9eb94262016a09803", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7a2f2d91aa6d18b0ab4194f9eb94262016a09803", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7a2f2d91aa6d18b0ab4194f9eb94262016a09803", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7a2f2d91aa6d18b0ab4194f9eb94262016a09803/comments", "author": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "749ee73406d31c7104c64bb7bf84780dea187d48", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/749ee73406d31c7104c64bb7bf84780dea187d48", "html_url": "https://github.com/Rust-GCC/gccrs/commit/749ee73406d31c7104c64bb7bf84780dea187d48"}], "stats": {"total": 32, "additions": 32, "deletions": 0}, "files": [{"sha": "44f1148d5abe21a11ab1a125e683bdccb605a277", "filename": "libstdc++-v3/python/libstdcxx/v6/printers.py", "status": "modified", "additions": 32, "deletions": 0, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7a2f2d91aa6d18b0ab4194f9eb94262016a09803/libstdc%2B%2B-v3%2Fpython%2Flibstdcxx%2Fv6%2Fprinters.py", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7a2f2d91aa6d18b0ab4194f9eb94262016a09803/libstdc%2B%2B-v3%2Fpython%2Flibstdcxx%2Fv6%2Fprinters.py", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fpython%2Flibstdcxx%2Fv6%2Fprinters.py?ref=7a2f2d91aa6d18b0ab4194f9eb94262016a09803", "patch": "@@ -1554,6 +1554,34 @@ def to_string (self):\n                 pass\n         return '%s = {\"%s\": %s}' % (self.typename, category, strval)\n \n+class StdRegexStatePrinter:\n+    \"Print a state node in the NFA for a std::regex\"\n+\n+    def __init__ (self, typename, val):\n+        self.val = val\n+        self.typename = typename\n+\n+    def to_string (self):\n+        opcode = str(self.val['_M_opcode'])\n+        if opcode:\n+            opcode = opcode[25:]\n+        next_id = self.val['_M_next']\n+\n+        variants = {'repeat':'alt', 'alternative':'alt',\n+                    'subexpr_begin':'subexpr', 'subexpr_end':'subexpr',\n+                    'line_begin_assertion':None, 'line_end_assertion':None,\n+                    'word_boundary':'neg', 'subexpr_lookahead':'neg',\n+                    'backref':'backref_index',\n+                    'match':None, 'accept':None,\n+                    'dummy':None, 'unknown':None\n+                   }\n+        v = variants[opcode]\n+\n+        s = \"opcode={}, next={}\".format(opcode, next_id)\n+        if v is not None and self.val['_M_' + v] is not None:\n+            s = \"{}, {}={}\".format(s, v, self.val['_M_' + v])\n+        return \"{%s}\" % (s)\n+\n # A \"regular expression\" printer which conforms to the\n # \"SubPrettyPrinter\" protocol from gdb.printing.\n class RxPrinter(object):\n@@ -2015,6 +2043,10 @@ def build_libstdcxx_dictionary ():\n     libstdcxx_printer.add_version('std::tr1::', 'unordered_multiset',\n                                   Tr1UnorderedSetPrinter)\n \n+    # std::regex components\n+    libstdcxx_printer.add_version('std::__detail::', '_State',\n+                                  StdRegexStatePrinter)\n+\n     # These are the C++11 printer registrations for -D_GLIBCXX_DEBUG cases.\n     # The tr1 namespace containers do not have any debug equivalents,\n     # so do not register printers for them."}]}