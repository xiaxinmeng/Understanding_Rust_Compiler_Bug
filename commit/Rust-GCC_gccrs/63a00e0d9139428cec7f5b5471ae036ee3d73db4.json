{"sha": "63a00e0d9139428cec7f5b5471ae036ee3d73db4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjNhMDBlMGQ5MTM5NDI4Y2VjN2Y1YjU0NzFhZTAzNmVlM2Q3M2RiNA==", "commit": {"author": {"name": "Duncan Sands", "email": "baldrick@free.fr", "date": "2009-12-11T14:38:55Z"}, "committer": {"name": "Duncan Sands", "email": "baldrick@gcc.gnu.org", "date": "2009-12-11T14:38:55Z"}, "message": "IPA passes are bigger than other passes...\n\nIPA passes are bigger than other passes, so more memory needs to be allocated\nfor them (and more copied) in make_pass_instance.\n\nFrom-SVN: r155161", "tree": {"sha": "7e2fd62095299f4918b903dffa1b8bd2df81d455", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7e2fd62095299f4918b903dffa1b8bd2df81d455"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/63a00e0d9139428cec7f5b5471ae036ee3d73db4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/63a00e0d9139428cec7f5b5471ae036ee3d73db4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/63a00e0d9139428cec7f5b5471ae036ee3d73db4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/63a00e0d9139428cec7f5b5471ae036ee3d73db4/comments", "author": {"login": "CunningBaldrick", "id": 1713707, "node_id": "MDQ6VXNlcjE3MTM3MDc=", "avatar_url": "https://avatars.githubusercontent.com/u/1713707?v=4", "gravatar_id": "", "url": "https://api.github.com/users/CunningBaldrick", "html_url": "https://github.com/CunningBaldrick", "followers_url": "https://api.github.com/users/CunningBaldrick/followers", "following_url": "https://api.github.com/users/CunningBaldrick/following{/other_user}", "gists_url": "https://api.github.com/users/CunningBaldrick/gists{/gist_id}", "starred_url": "https://api.github.com/users/CunningBaldrick/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/CunningBaldrick/subscriptions", "organizations_url": "https://api.github.com/users/CunningBaldrick/orgs", "repos_url": "https://api.github.com/users/CunningBaldrick/repos", "events_url": "https://api.github.com/users/CunningBaldrick/events{/privacy}", "received_events_url": "https://api.github.com/users/CunningBaldrick/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "9cf10655bb78b500581f2e3e9bfd0d44cbee7d5c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9cf10655bb78b500581f2e3e9bfd0d44cbee7d5c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9cf10655bb78b500581f2e3e9bfd0d44cbee7d5c"}], "stats": {"total": 22, "additions": 20, "deletions": 2}, "files": [{"sha": "cf0c2e8cf9e3bdff8f1b0c694fa537058b470291", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/63a00e0d9139428cec7f5b5471ae036ee3d73db4/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/63a00e0d9139428cec7f5b5471ae036ee3d73db4/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=63a00e0d9139428cec7f5b5471ae036ee3d73db4", "patch": "@@ -1,3 +1,8 @@\n+2009-12-11  Duncan Sands  <baldrick@free.fr>\n+\n+\t* passes.c (make_pass_instance): Allocate and copy the right amount of\n+\tmemory for ipa passes, which are not the same size as other passes.\n+\n 2009-12-11  Joern Rennecke  <amylaar@spamcop.net>\n \n \t* plugin.c (get_named_event_id): Fix hash table rebuild to include"}, {"sha": "a373a0049287e96386cbfcef9d36d94e4ca9b4c9", "filename": "gcc/passes.c", "status": "modified", "additions": 15, "deletions": 2, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/63a00e0d9139428cec7f5b5471ae036ee3d73db4/gcc%2Fpasses.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/63a00e0d9139428cec7f5b5471ae036ee3d73db4/gcc%2Fpasses.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fpasses.c?ref=63a00e0d9139428cec7f5b5471ae036ee3d73db4", "patch": "@@ -460,8 +460,21 @@ make_pass_instance (struct opt_pass *pass, bool track_duplicates)\n     {\n       struct opt_pass *new_pass;\n \n-      new_pass = XNEW (struct opt_pass);\n-      memcpy (new_pass, pass, sizeof (*new_pass));\n+      if (pass->type == GIMPLE_PASS\n+          || pass->type == RTL_PASS\n+          || pass->type == SIMPLE_IPA_PASS)\n+        {\n+          new_pass = XNEW (struct opt_pass);\n+          memcpy (new_pass, pass, sizeof (struct opt_pass));\n+        }\n+      else if (pass->type == IPA_PASS)\n+        {\n+          new_pass = (struct opt_pass *)XNEW (struct ipa_opt_pass_d);\n+          memcpy (new_pass, pass, sizeof (struct ipa_opt_pass_d));\n+        }\n+      else\n+        gcc_unreachable ();\n+\n       new_pass->next = NULL;\n \n       new_pass->todo_flags_start &= ~TODO_mark_first_instance;"}]}