{"sha": "f03077b0195ce62bdf0819c14e4a55ce10c13f77", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjAzMDc3YjAxOTVjZTYyYmRmMDgxOWMxNGU0YTU1Y2UxMGMxM2Y3Nw==", "commit": {"author": {"name": "Mikael Morin", "email": "mikael@gcc.gnu.org", "date": "2011-11-03T23:51:04Z"}, "committer": {"name": "Mikael Morin", "email": "mikael@gcc.gnu.org", "date": "2011-11-03T23:51:04Z"}, "message": "trans-array.c (constant_array_constructor_loop_size): Handle multiple loops.\n\n\t* trans-array.c (constant_array_constructor_loop_size):\n\tHandle multiple loops.\n\nFrom-SVN: r180901", "tree": {"sha": "d53b10cc8a76bfbc5d0e5cbc5fea7e9264e828ef", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d53b10cc8a76bfbc5d0e5cbc5fea7e9264e828ef"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f03077b0195ce62bdf0819c14e4a55ce10c13f77", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f03077b0195ce62bdf0819c14e4a55ce10c13f77", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f03077b0195ce62bdf0819c14e4a55ce10c13f77", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f03077b0195ce62bdf0819c14e4a55ce10c13f77/comments", "author": null, "committer": null, "parents": [{"sha": "b2f82aaa7801e22e4acd8ab3b2e0ba0a3104355f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b2f82aaa7801e22e4acd8ab3b2e0ba0a3104355f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b2f82aaa7801e22e4acd8ab3b2e0ba0a3104355f"}], "stats": {"total": 47, "additions": 29, "deletions": 18}, "files": [{"sha": "e359eca5f0781ab84f651a102910294a3acdaf6d", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f03077b0195ce62bdf0819c14e4a55ce10c13f77/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f03077b0195ce62bdf0819c14e4a55ce10c13f77/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=f03077b0195ce62bdf0819c14e4a55ce10c13f77", "patch": "@@ -1,3 +1,8 @@\n+2011-11-03  Mikael Morin  <mikael@gcc.gnu.org>\n+\n+\t* trans-array.c (constant_array_constructor_loop_size):\n+\tHandle multiple loops.\n+\n 2011-11-03  Mikael Morin  <mikael@gcc.gnu.org>\n \n \t* trans-array.c (get_rank, get_loop_upper_bound_for_array):"}, {"sha": "299bd80756401aa68435a99bff874e0ff9981aa1", "filename": "gcc/fortran/trans-array.c", "status": "modified", "additions": 24, "deletions": 18, "changes": 42, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f03077b0195ce62bdf0819c14e4a55ce10c13f77/gcc%2Ffortran%2Ftrans-array.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f03077b0195ce62bdf0819c14e4a55ce10c13f77/gcc%2Ffortran%2Ftrans-array.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ftrans-array.c?ref=f03077b0195ce62bdf0819c14e4a55ce10c13f77", "patch": "@@ -2053,32 +2053,38 @@ get_rank (gfc_loopinfo *loop)\n    iteration count of the loop if suitable, and NULL_TREE otherwise.  */\n \n static tree\n-constant_array_constructor_loop_size (gfc_loopinfo * loop)\n+constant_array_constructor_loop_size (gfc_loopinfo * l)\n {\n+  gfc_loopinfo *loop;\n   tree size = gfc_index_one_node;\n   tree tmp;\n-  int i;\n+  int i, total_dim;\n+\n+  total_dim = get_rank (l);\n \n-  for (i = 0; i < loop->dimen; i++)\n+  for (loop = l; loop; loop = loop->parent)\n     {\n-      /* If the bounds aren't constant, return NULL_TREE.  */\n-      if (!INTEGER_CST_P (loop->from[i]) || !INTEGER_CST_P (loop->to[i]))\n-\treturn NULL_TREE;\n-      if (!integer_zerop (loop->from[i]))\n+      for (i = 0; i < loop->dimen; i++)\n \t{\n-\t  /* Only allow nonzero \"from\" in one-dimensional arrays.  */\n-\t  if (loop->dimen != 1)\n+\t  /* If the bounds aren't constant, return NULL_TREE.  */\n+\t  if (!INTEGER_CST_P (loop->from[i]) || !INTEGER_CST_P (loop->to[i]))\n \t    return NULL_TREE;\n-\t  tmp = fold_build2_loc (input_location, MINUS_EXPR,\n-\t\t\t\t gfc_array_index_type,\n-\t\t\t\t loop->to[i], loop->from[i]);\n+\t  if (!integer_zerop (loop->from[i]))\n+\t    {\n+\t      /* Only allow nonzero \"from\" in one-dimensional arrays.  */\n+\t      if (total_dim != 1)\n+\t\treturn NULL_TREE;\n+\t      tmp = fold_build2_loc (input_location, MINUS_EXPR,\n+\t\t\t\t     gfc_array_index_type,\n+\t\t\t\t     loop->to[i], loop->from[i]);\n+\t    }\n+\t  else\n+\t    tmp = loop->to[i];\n+\t  tmp = fold_build2_loc (input_location, PLUS_EXPR,\n+\t\t\t\t gfc_array_index_type, tmp, gfc_index_one_node);\n+\t  size = fold_build2_loc (input_location, MULT_EXPR,\n+\t\t\t\t  gfc_array_index_type, size, tmp);\n \t}\n-      else\n-\ttmp = loop->to[i];\n-      tmp = fold_build2_loc (input_location, PLUS_EXPR, gfc_array_index_type,\n-\t\t\t     tmp, gfc_index_one_node);\n-      size = fold_build2_loc (input_location, MULT_EXPR, gfc_array_index_type,\n-\t\t\t      size, tmp);\n     }\n \n   return size;"}]}