{"sha": "5406e08aa9ff7471dc3f7c3edff7fbb9d6bdac19", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTQwNmUwOGFhOWZmNzQ3MWRjM2Y3YzNlZGZmN2ZiYjlkNmJkYWMxOQ==", "commit": {"author": {"name": "Doug Evans", "email": "dje@gnu.org", "date": "1995-04-28T02:04:32Z"}, "committer": {"name": "Doug Evans", "email": "dje@gnu.org", "date": "1995-04-28T02:04:32Z"}, "message": "sparc.md (tablejump): Only if ! TARGET_MEDANY.\n\n\t* sparc/sparc.md (tablejump): Only if ! TARGET_MEDANY.\n\t(casesi): New pattern for TARGET_MEDANY case.\n\nFrom-SVN: r9527", "tree": {"sha": "ff4d8e271c94ae501dae9dfa870cd908a9717c28", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ff4d8e271c94ae501dae9dfa870cd908a9717c28"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5406e08aa9ff7471dc3f7c3edff7fbb9d6bdac19", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5406e08aa9ff7471dc3f7c3edff7fbb9d6bdac19", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5406e08aa9ff7471dc3f7c3edff7fbb9d6bdac19", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5406e08aa9ff7471dc3f7c3edff7fbb9d6bdac19/comments", "author": null, "committer": null, "parents": [{"sha": "2db70b29ac1642e917d70f08922784c03b47eaf7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2db70b29ac1642e917d70f08922784c03b47eaf7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2db70b29ac1642e917d70f08922784c03b47eaf7"}], "stats": {"total": 36, "additions": 35, "deletions": 1}, "files": [{"sha": "c69d400e0839f426c80f789ff9895eba34132d04", "filename": "gcc/config/sparc/sparc.md", "status": "modified", "additions": 35, "deletions": 1, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5406e08aa9ff7471dc3f7c3edff7fbb9d6bdac19/gcc%2Fconfig%2Fsparc%2Fsparc.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5406e08aa9ff7471dc3f7c3edff7fbb9d6bdac19/gcc%2Fconfig%2Fsparc%2Fsparc.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsparc%2Fsparc.md?ref=5406e08aa9ff7471dc3f7c3edff7fbb9d6bdac19", "patch": "@@ -4674,7 +4674,7 @@\n (define_expand \"tablejump\"\n   [(parallel [(set (pc) (match_operand 0 \"register_operand\" \"r\"))\n \t      (use (label_ref (match_operand 1 \"\" \"\")))])]\n-  \"\"\n+  \"! TARGET_MEDANY\"\n   \"\n {\n   if (GET_MODE (operands[0]) != Pmode)\n@@ -4736,6 +4736,40 @@\n   \"call %l0%#\"\n   [(set_attr \"type\" \"uncond_branch\")])\n \n+;; Implement a switch statement for the medium/anywhere code model.\n+;; This wouldn't be necessary if we could distinguish label refs of the jump\n+;; table from other label refs.  The problem is that jump tables live in the\n+;; .rodata section and thus we need to add %g4 to get their address.\n+\n+(define_expand \"casesi\"\n+  [(set (match_dup 5)\n+\t(minus:SI (match_operand:SI 0 \"register_operand\" \"\")\n+\t\t  (match_operand:SI 1 \"nonmemory_operand\" \"\")))\n+   (set (reg:CC 0)\n+\t(compare:CC (match_dup 5)\n+\t\t    (match_operand:SI 2 \"nonmemory_operand\" \"\")))\n+   (set (pc)\n+\t(if_then_else (gtu (reg:CC 0)\n+\t\t\t   (const_int 0))\n+\t\t      (label_ref (match_operand 4 \"\" \"\"))\n+\t\t      (pc)))\n+   (parallel [(set (match_dup 6) (high:DI (label_ref (match_operand 3 \"\" \"\"))))\n+\t      (clobber (reg:DI 1))])\n+   (set (match_dup 6)\n+\t(lo_sum:DI (match_dup 6) (label_ref (match_dup 3))))\n+   (set (match_dup 6) (plus:DI (match_dup 6) (reg:DI 4)))\n+   (set (match_dup 7) (zero_extend:DI (match_dup 5)))\n+   (set (match_dup 7) (ashift:DI (match_dup 7) (const_int 3)))\n+   (set (match_dup 7) (mem:DI (plus:DI (match_dup 6) (match_dup 7))))\n+   (set (pc) (match_dup 7))]\n+  \"TARGET_MEDANY\"\n+  \"\n+{\n+  operands[5] = gen_reg_rtx (SImode);\n+  operands[6] = gen_reg_rtx (DImode);\n+  operands[7] = gen_reg_rtx (DImode);\n+}\")\n+\n ;; This pattern recognizes the \"instruction\" that appears in \n ;; a function call that wants a structure value, \n ;; to inform the called function if compiled with Sun CC."}]}