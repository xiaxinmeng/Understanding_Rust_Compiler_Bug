{"sha": "74b9f8dfe18b51280ecb9b68e0de7d4f7e36e973", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzRiOWY4ZGZlMThiNTEyODBlY2I5YjY4ZTBkZTdkNGY3ZTM2ZTk3Mw==", "commit": {"author": {"name": "Bernd Schmidt", "email": "bernds_cb1@t-online.de", "date": "2019-11-24T13:20:55Z"}, "committer": {"name": "Bernd Schmidt", "email": "bernds@gcc.gnu.org", "date": "2019-11-24T13:20:55Z"}, "message": "Allow combiner to create autoinc in jump insns.\n\n\t* combine.c (can_combine_p): Allow autoinc in jumps.\n\nFrom-SVN: r278656", "tree": {"sha": "6367c944bf59f6574fa3c51442f757f93ef5042f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6367c944bf59f6574fa3c51442f757f93ef5042f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/74b9f8dfe18b51280ecb9b68e0de7d4f7e36e973", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/74b9f8dfe18b51280ecb9b68e0de7d4f7e36e973", "html_url": "https://github.com/Rust-GCC/gccrs/commit/74b9f8dfe18b51280ecb9b68e0de7d4f7e36e973", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/74b9f8dfe18b51280ecb9b68e0de7d4f7e36e973/comments", "author": {"login": "bernds", "id": 92527, "node_id": "MDQ6VXNlcjkyNTI3", "avatar_url": "https://avatars.githubusercontent.com/u/92527?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bernds", "html_url": "https://github.com/bernds", "followers_url": "https://api.github.com/users/bernds/followers", "following_url": "https://api.github.com/users/bernds/following{/other_user}", "gists_url": "https://api.github.com/users/bernds/gists{/gist_id}", "starred_url": "https://api.github.com/users/bernds/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bernds/subscriptions", "organizations_url": "https://api.github.com/users/bernds/orgs", "repos_url": "https://api.github.com/users/bernds/repos", "events_url": "https://api.github.com/users/bernds/events{/privacy}", "received_events_url": "https://api.github.com/users/bernds/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "391500af1932e696a007b59d667079325d32d631", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/391500af1932e696a007b59d667079325d32d631", "html_url": "https://github.com/Rust-GCC/gccrs/commit/391500af1932e696a007b59d667079325d32d631"}], "stats": {"total": 11, "additions": 5, "deletions": 6}, "files": [{"sha": "823ceca45d851a7bb8c2601c2ef3a854eb354015", "filename": "gcc/ChangeLog", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74b9f8dfe18b51280ecb9b68e0de7d4f7e36e973/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74b9f8dfe18b51280ecb9b68e0de7d4f7e36e973/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=74b9f8dfe18b51280ecb9b68e0de7d4f7e36e973", "patch": "@@ -5,6 +5,8 @@\n \n \t* combine.c (combine_instructions): Record costs for jumps.\n \n+\t* combine.c (can_combine_p): Allow autoinc in jumps.\n+\n 2019-11-23  Jan Hubicka  <hubicka@ucw.cz>\n \n \t* cif-code.def (MAX_INLINE_INSNS_SINGLE_O2_LIMIT): Remove."}, {"sha": "2e21459f50461f5d30268d90f66b9b15ed26c42b", "filename": "gcc/combine.c", "status": "modified", "additions": 3, "deletions": 6, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74b9f8dfe18b51280ecb9b68e0de7d4f7e36e973/gcc%2Fcombine.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74b9f8dfe18b51280ecb9b68e0de7d4f7e36e973/gcc%2Fcombine.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcombine.c?ref=74b9f8dfe18b51280ecb9b68e0de7d4f7e36e973", "patch": "@@ -2110,22 +2110,19 @@ can_combine_p (rtx_insn *insn, rtx_insn *i3, rtx_insn *pred ATTRIBUTE_UNUSED,\n   is_volatile_p = volatile_refs_p (PATTERN (insn))\n     ? volatile_refs_p\n     : volatile_insn_p;\n-    \n+\n   for (p = NEXT_INSN (insn); p != i3; p = NEXT_INSN (p))\n     if (INSN_P (p) && p != succ && p != succ2 && is_volatile_p (PATTERN (p)))\n       return 0;\n \n   /* If INSN contains an autoincrement or autodecrement, make sure that\n      register is not used between there and I3, and not already used in\n-     I3 either.  Neither must it be used in PRED or SUCC, if they exist.\n-     Also insist that I3 not be a jump; if it were one\n-     and the incremented register were spilled, we would lose.  */\n+     I3 either.  Neither must it be used in PRED or SUCC, if they exist.  */\n \n   if (AUTO_INC_DEC)\n     for (link = REG_NOTES (insn); link; link = XEXP (link, 1))\n       if (REG_NOTE_KIND (link) == REG_INC\n-\t  && (JUMP_P (i3)\n-\t      || reg_used_between_p (XEXP (link, 0), insn, i3)\n+\t  && (reg_used_between_p (XEXP (link, 0), insn, i3)\n \t      || (pred != NULL_RTX\n \t\t  && reg_overlap_mentioned_p (XEXP (link, 0), PATTERN (pred)))\n \t      || (pred2 != NULL_RTX"}]}