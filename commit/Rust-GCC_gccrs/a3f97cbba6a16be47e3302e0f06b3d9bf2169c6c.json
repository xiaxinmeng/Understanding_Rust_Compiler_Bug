{"sha": "a3f97cbba6a16be47e3302e0f06b3d9bf2169c6c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTNmOTdjYmJhNmExNmJlNDdlMzMwMmUwZjA2YjNkOWJmMjE2OWM2Yw==", "commit": {"author": {"name": "Jim Wilson", "email": "wilson@gcc.gnu.org", "date": "1996-07-19T00:26:36Z"}, "committer": {"name": "Jim Wilson", "email": "wilson@gcc.gnu.org", "date": "1996-07-19T00:26:36Z"}, "message": "New file.\n\nFrom-SVN: r12523", "tree": {"sha": "f29bf40f81611fe9d20ce5da4533690e261d3429", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f29bf40f81611fe9d20ce5da4533690e261d3429"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a3f97cbba6a16be47e3302e0f06b3d9bf2169c6c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a3f97cbba6a16be47e3302e0f06b3d9bf2169c6c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a3f97cbba6a16be47e3302e0f06b3d9bf2169c6c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a3f97cbba6a16be47e3302e0f06b3d9bf2169c6c/comments", "author": null, "committer": null, "parents": [{"sha": "993cd990a856000f3b9e5925738e8fdcfd5573a9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/993cd990a856000f3b9e5925738e8fdcfd5573a9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/993cd990a856000f3b9e5925738e8fdcfd5573a9"}], "stats": {"total": 8346, "additions": 8346, "deletions": 0}, "files": [{"sha": "483607312c0adfbec9308c0d8c1231ba8f641941", "filename": "gcc/dwarf2.h", "status": "added", "additions": 613, "deletions": 0, "changes": 613, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a3f97cbba6a16be47e3302e0f06b3d9bf2169c6c/gcc%2Fdwarf2.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a3f97cbba6a16be47e3302e0f06b3d9bf2169c6c/gcc%2Fdwarf2.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdwarf2.h?ref=a3f97cbba6a16be47e3302e0f06b3d9bf2169c6c", "patch": "@@ -0,0 +1,613 @@\n+/* Declarations and definitions of codes relating to the DWARF2 symbolic\n+   debugging information format.\n+   Copyright (C) 1992, 1993, 1995, 1996 Free Software Foundation, Inc.\n+   Contributed by Gary Funck (gary@intrepid.com).  Derived from the\n+   DWARF 1 implementation written by Ron Guilmette (rfg@monkeys.com).\n+\n+   This file is part of GNU CC.\n+\n+   GNU CC is free software; you can redistribute it and/or modify\n+   it under the terms of the GNU General Public License as published by\n+   the Free Software Foundation; either version 2, or (at your option)\n+   any later version.\n+\n+   GNU CC is distributed in the hope that it will be useful,\n+   but WITHOUT ANY WARRANTY; without even the implied warranty of\n+   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+   GNU General Public License for more details.\n+\n+   You should have received a copy of the GNU General Public License\n+   along with GNU CC; see the file COPYING.  If not, write to\n+   the Free Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA.  */\n+\n+/* This file is derived from the DWARF specification (a public document)\n+   Revision 2.0.0 (July 27, 1993) developed by the UNIX International\n+   Programming Languages Special Interest Group (UI/PLSIG) and distributed\n+   by UNIX International.  Copies of this specification are available from\n+   UNIX International, 20 Waterview Boulevard, Parsippany, NJ, 07054.  */\n+\n+/* Tag names and codes.  */\n+\n+enum dwarf_tag\n+  {\n+    DW_TAG_padding = 0x00,\n+    DW_TAG_array_type = 0x01,\n+    DW_TAG_class_type = 0x02,\n+    DW_TAG_entry_point = 0x03,\n+    DW_TAG_enumeration_type = 0x04,\n+    DW_TAG_formal_parameter = 0x05,\n+    DW_TAG_imported_declaration = 0x08,\n+    DW_TAG_label = 0x0a,\n+    DW_TAG_lexical_block = 0x0b,\n+    DW_TAG_member = 0x0d,\n+    DW_TAG_pointer_type = 0x0f,\n+    DW_TAG_reference_type = 0x10,\n+    DW_TAG_compile_unit = 0x11,\n+    DW_TAG_string_type = 0x12,\n+    DW_TAG_structure_type = 0x13,\n+    DW_TAG_subroutine_type = 0x15,\n+    DW_TAG_typedef = 0x16,\n+    DW_TAG_union_type = 0x17,\n+    DW_TAG_unspecified_parameters = 0x18,\n+    DW_TAG_variant = 0x19,\n+    DW_TAG_common_block = 0x1a,\n+    DW_TAG_common_inclusion = 0x1b,\n+    DW_TAG_inheritance = 0x1c,\n+    DW_TAG_inlined_subroutine = 0x1d,\n+    DW_TAG_module = 0x1e,\n+    DW_TAG_ptr_to_member_type = 0x1f,\n+    DW_TAG_set_type = 0x20,\n+    DW_TAG_subrange_type = 0x21,\n+    DW_TAG_with_stmt = 0x22,\n+    DW_TAG_access_declaration = 0x23,\n+    DW_TAG_base_type = 0x24,\n+    DW_TAG_catch_block = 0x25,\n+    DW_TAG_const_type = 0x26,\n+    DW_TAG_constant = 0x27,\n+    DW_TAG_enumerator = 0x28,\n+    DW_TAG_file_type = 0x29,\n+    DW_TAG_friend = 0x2a,\n+    DW_TAG_namelist = 0x2b,\n+    DW_TAG_namelist_item = 0x2c,\n+    DW_TAG_packed_type = 0x2d,\n+    DW_TAG_subprogram = 0x2e,\n+    DW_TAG_template_type_param = 0x2f,\n+    DW_TAG_template_value_param = 0x30,\n+    DW_TAG_thrown_type = 0x31,\n+    DW_TAG_try_block = 0x32,\n+    DW_TAG_variant_part = 0x33,\n+    DW_TAG_variable = 0x34,\n+    DW_TAG_volatile_type = 0x35,\n+    /* SGI/MIPS Extensions */\n+    DW_TAG_MIPS_loop = 0x4081,\n+    /* GNU extensions */\n+    DW_TAG_format_label = 0x4101,\t/* for FORTRAN 77 and Fortran 90 */\n+    DW_TAG_function_template = 0x4102,\t/* for C++ */\n+    DW_TAG_class_template = 0x4103\t/* for C++ */\n+  };\n+\n+#define DW_TAG_lo_user\t0x4080\n+#define DW_TAG_hi_user\t0xffff\n+\n+/* flag that tells whether entry has a child or not */\n+#define DW_children_no   0\n+#define\tDW_children_yes  1\n+\n+/* Form names and codes.  */\n+enum dwarf_form\n+  {\n+    DW_FORM_addr = 0x01,\n+    DW_FORM_block2 = 0x03,\n+    DW_FORM_block4 = 0x04,\n+    DW_FORM_data2 = 0x05,\n+    DW_FORM_data4 = 0x06,\n+    DW_FORM_data8 = 0x07,\n+    DW_FORM_string = 0x08,\n+    DW_FORM_block = 0x09,\n+    DW_FORM_block1 = 0x0a,\n+    DW_FORM_data1 = 0x0b,\n+    DW_FORM_flag = 0x0c,\n+    DW_FORM_sdata = 0x0d,\n+    DW_FORM_strp = 0x0e,\n+    DW_FORM_udata = 0x0f,\n+    DW_FORM_ref_addr = 0x10,\n+    DW_FORM_ref1 = 0x11,\n+    DW_FORM_ref2 = 0x12,\n+    DW_FORM_ref4 = 0x13,\n+    DW_FORM_ref8 = 0x14,\n+    DW_FORM_ref_udata = 0x15,\n+    DW_FORM_indirect = 0x16\n+  };\n+\n+/* Attribute names and codes.  */\n+\n+enum dwarf_attribute\n+  {\n+    DW_AT_sibling = 0x01,\n+    DW_AT_location = 0x02,\n+    DW_AT_name = 0x03,\n+    DW_AT_ordering = 0x09,\n+    DW_AT_subscr_data = 0x0a,\n+    DW_AT_byte_size = 0x0b,\n+    DW_AT_bit_offset = 0x0c,\n+    DW_AT_bit_size = 0x0d,\n+    DW_AT_element_list = 0x0f,\n+    DW_AT_stmt_list = 0x10,\n+    DW_AT_low_pc = 0x11,\n+    DW_AT_high_pc = 0x12,\n+    DW_AT_language = 0x13,\n+    DW_AT_member = 0x14,\n+    DW_AT_discr = 0x15,\n+    DW_AT_discr_value = 0x16,\n+    DW_AT_visibility = 0x17,\n+    DW_AT_import = 0x18,\n+    DW_AT_string_length = 0x19,\n+    DW_AT_common_reference = 0x1a,\n+    DW_AT_comp_dir = 0x1b,\n+    DW_AT_const_value = 0x1c,\n+    DW_AT_containing_type = 0x1d,\n+    DW_AT_default_value = 0x1e,\n+    DW_AT_inline = 0x20,\n+    DW_AT_is_optional = 0x21,\n+    DW_AT_lower_bound = 0x22,\n+    DW_AT_producer = 0x25,\n+    DW_AT_prototyped = 0x27,\n+    DW_AT_return_addr = 0x2a,\n+    DW_AT_start_scope = 0x2c,\n+    DW_AT_stride_size = 0x2e,\n+    DW_AT_upper_bound = 0x2f,\n+    DW_AT_abstract_origin = 0x31,\n+    DW_AT_accessibility = 0x32,\n+    DW_AT_address_class = 0x33,\n+    DW_AT_artificial = 0x34,\n+    DW_AT_base_types = 0x35,\n+    DW_AT_calling_convention = 0x36,\n+    DW_AT_count = 0x37,\n+    DW_AT_data_member_location = 0x38,\n+    DW_AT_decl_column = 0x39,\n+    DW_AT_decl_file = 0x3a,\n+    DW_AT_decl_line = 0x3b,\n+    DW_AT_declaration = 0x3c,\n+    DW_AT_discr_list = 0x3d,\n+    DW_AT_encoding = 0x3e,\n+    DW_AT_external = 0x3f,\n+    DW_AT_frame_base = 0x40,\n+    DW_AT_friend = 0x41,\n+    DW_AT_identifier_case = 0x42,\n+    DW_AT_macro_info = 0x43,\n+    DW_AT_namelist_items = 0x44,\n+    DW_AT_priority = 0x45,\n+    DW_AT_segment = 0x46,\n+    DW_AT_specification = 0x47,\n+    DW_AT_static_link = 0x48,\n+    DW_AT_type = 0x49,\n+    DW_AT_use_location = 0x4a,\n+    DW_AT_variable_parameter = 0x4b,\n+    DW_AT_virtuality = 0x4c,\n+    DW_AT_vtable_elem_location = 0x4d,\n+    /* SGI/MIPS Extensions */\n+    DW_AT_MIPS_fde = 0x2001,\n+    DW_AT_MIPS_loop_begin = 0x2002,\n+    DW_AT_MIPS_tail_loop_begin = 0x2003,\n+    DW_AT_MIPS_epilog_begin = 0x2004,\n+    DW_AT_MIPS_loop_unroll_factor = 0x2005,\n+    DW_AT_MIPS_software_pipeline_depth = 0x2006,\n+    DW_AT_MIPS_linkage_name = 0x2007,\n+    /* GNU extensions.  */\n+    DW_AT_sf_names = 0x2101,\n+    DW_AT_src_info = 0x2102,\n+    DW_AT_mac_info = 0x2103,\n+    DW_AT_src_coords = 0x2104,\n+    DW_AT_body_begin = 0x2105,\n+    DW_AT_body_end = 0x2106\n+  };\n+\n+#define DW_AT_lo_user\t0x2000\t/* implementation-defined range start */\n+#define DW_AT_hi_user\t0x3ff0\t/* implementation-defined range end */\n+\n+/* Location atom names and codes.  */\n+\n+enum dwarf_location_atom\n+  {\n+    DW_OP_addr = 0x03,\n+    DW_OP_deref = 0x06,\n+    DW_OP_const1u = 0x08,\n+    DW_OP_const1s = 0x09,\n+    DW_OP_const2u = 0x0a,\n+    DW_OP_const2s = 0x0b,\n+    DW_OP_const4u = 0x0c,\n+    DW_OP_const4s = 0x0d,\n+    DW_OP_const8u = 0x0e,\n+    DW_OP_const8s = 0x0f,\n+    DW_OP_constu = 0x10,\n+    DW_OP_consts = 0x11,\n+    DW_OP_dup = 0x12,\n+    DW_OP_drop = 0x13,\n+    DW_OP_over = 0x14,\n+    DW_OP_pick = 0x15,\n+    DW_OP_swap = 0x16,\n+    DW_OP_rot = 0x17,\n+    DW_OP_xderef = 0x18,\n+    DW_OP_abs = 0x19,\n+    DW_OP_and = 0x1a,\n+    DW_OP_div = 0x1b,\n+    DW_OP_minus = 0x1c,\n+    DW_OP_mod = 0x1d,\n+    DW_OP_mul = 0x1e,\n+    DW_OP_neg = 0x1f,\n+    DW_OP_not = 0x20,\n+    DW_OP_or = 0x21,\n+    DW_OP_plus = 0x22,\n+    DW_OP_plus_uconst = 0x23,\n+    DW_OP_shl = 0x24,\n+    DW_OP_shr = 0x25,\n+    DW_OP_shra = 0x26,\n+    DW_OP_xor = 0x27,\n+    DW_OP_bra = 0x28,\n+    DW_OP_eq = 0x29,\n+    DW_OP_ge = 0x2a,\n+    DW_OP_gt = 0x2b,\n+    DW_OP_le = 0x2c,\n+    DW_OP_lt = 0x2d,\n+    DW_OP_ne = 0x2e,\n+    DW_OP_skip = 0x2f,\n+    DW_OP_lit0 = 0x30,\n+    DW_OP_lit1 = 0x31,\n+    DW_OP_lit2 = 0x32,\n+    DW_OP_lit3 = 0x33,\n+    DW_OP_lit4 = 0x34,\n+    DW_OP_lit5 = 0x35,\n+    DW_OP_lit6 = 0x36,\n+    DW_OP_lit7 = 0x37,\n+    DW_OP_lit8 = 0x38,\n+    DW_OP_lit9 = 0x39,\n+    DW_OP_lit10 = 0x3a,\n+    DW_OP_lit11 = 0x3b,\n+    DW_OP_lit12 = 0x3c,\n+    DW_OP_lit13 = 0x3d,\n+    DW_OP_lit14 = 0x3e,\n+    DW_OP_lit15 = 0x3f,\n+    DW_OP_lit16 = 0x40,\n+    DW_OP_lit17 = 0x41,\n+    DW_OP_lit18 = 0x42,\n+    DW_OP_lit19 = 0x43,\n+    DW_OP_lit20 = 0x44,\n+    DW_OP_lit21 = 0x45,\n+    DW_OP_lit22 = 0x46,\n+    DW_OP_lit23 = 0x47,\n+    DW_OP_lit24 = 0x48,\n+    DW_OP_lit25 = 0x49,\n+    DW_OP_lit26 = 0x4a,\n+    DW_OP_lit27 = 0x4b,\n+    DW_OP_lit28 = 0x4c,\n+    DW_OP_lit29 = 0x4d,\n+    DW_OP_lit30 = 0x4e,\n+    DW_OP_lit31 = 0x4f,\n+    DW_OP_reg0 = 0x50,\n+    DW_OP_reg1 = 0x51,\n+    DW_OP_reg2 = 0x52,\n+    DW_OP_reg3 = 0x53,\n+    DW_OP_reg4 = 0x54,\n+    DW_OP_reg5 = 0x55,\n+    DW_OP_reg6 = 0x56,\n+    DW_OP_reg7 = 0x57,\n+    DW_OP_reg8 = 0x58,\n+    DW_OP_reg9 = 0x59,\n+    DW_OP_reg10 = 0x5a,\n+    DW_OP_reg11 = 0x5b,\n+    DW_OP_reg12 = 0x5c,\n+    DW_OP_reg13 = 0x5d,\n+    DW_OP_reg14 = 0x5e,\n+    DW_OP_reg15 = 0x5f,\n+    DW_OP_reg16 = 0x60,\n+    DW_OP_reg17 = 0x61,\n+    DW_OP_reg18 = 0x62,\n+    DW_OP_reg19 = 0x63,\n+    DW_OP_reg20 = 0x64,\n+    DW_OP_reg21 = 0x65,\n+    DW_OP_reg22 = 0x66,\n+    DW_OP_reg23 = 0x67,\n+    DW_OP_reg24 = 0x68,\n+    DW_OP_reg25 = 0x69,\n+    DW_OP_reg26 = 0x6a,\n+    DW_OP_reg27 = 0x6b,\n+    DW_OP_reg28 = 0x6c,\n+    DW_OP_reg29 = 0x6d,\n+    DW_OP_reg30 = 0x6e,\n+    DW_OP_reg31 = 0x6f,\n+    DW_OP_breg0 = 0x70,\n+    DW_OP_breg1 = 0x71,\n+    DW_OP_breg2 = 0x72,\n+    DW_OP_breg3 = 0x73,\n+    DW_OP_breg4 = 0x74,\n+    DW_OP_breg5 = 0x75,\n+    DW_OP_breg6 = 0x76,\n+    DW_OP_breg7 = 0x77,\n+    DW_OP_breg8 = 0x78,\n+    DW_OP_breg9 = 0x79,\n+    DW_OP_breg10 = 0x7a,\n+    DW_OP_breg11 = 0x7b,\n+    DW_OP_breg12 = 0x7c,\n+    DW_OP_breg13 = 0x7d,\n+    DW_OP_breg14 = 0x7e,\n+    DW_OP_breg15 = 0x7f,\n+    DW_OP_breg16 = 0x80,\n+    DW_OP_breg17 = 0x81,\n+    DW_OP_breg18 = 0x82,\n+    DW_OP_breg19 = 0x83,\n+    DW_OP_breg20 = 0x84,\n+    DW_OP_breg21 = 0x85,\n+    DW_OP_breg22 = 0x86,\n+    DW_OP_breg23 = 0x87,\n+    DW_OP_breg24 = 0x88,\n+    DW_OP_breg25 = 0x89,\n+    DW_OP_breg26 = 0x8a,\n+    DW_OP_breg27 = 0x8b,\n+    DW_OP_breg28 = 0x8c,\n+    DW_OP_breg29 = 0x8d,\n+    DW_OP_breg30 = 0x8e,\n+    DW_OP_breg31 = 0x8f,\n+    DW_OP_regx = 0x90,\n+    DW_OP_fbreg = 0x91,\n+    DW_OP_bregx = 0x92,\n+    DW_OP_piece = 0x93,\n+    DW_OP_deref_size = 0x94,\n+    DW_OP_xderef_size = 0x95,\n+    DW_OP_nop = 0x96\n+  };\n+\n+#define DW_OP_lo_user\t0x80\t/* implementation-defined range start */\n+#define DW_OP_hi_user\t0xff\t/* implementation-defined range end */\n+\n+/* Type encodings.  */\n+\n+enum dwarf_type\n+  {\n+    DW_ATE_void = 0x0,\n+    DW_ATE_address = 0x1,\n+    DW_ATE_boolean = 0x2,\n+    DW_ATE_complex_float = 0x3,\n+    DW_ATE_float = 0x4,\n+    DW_ATE_signed = 0x5,\n+    DW_ATE_signed_char = 0x6,\n+    DW_ATE_unsigned = 0x7,\n+    DW_ATE_unsigned_char = 0x8\n+  };\n+\n+#define\tDW_ATE_lo_user 0x80\n+#define\tDW_ATE_hi_user 0xff\n+\n+/* Array ordering names and codes.  */\n+enum dwarf_array_dim_ordering\n+  {\n+    DW_ORD_row_major = 0,\n+    DW_ORD_col_major = 1\n+  };\n+\n+/* access attribute */\n+enum dwarf_access_attribute\n+  {\n+    DW_ACCESS_public = 1,\n+    DW_ACCESS_protected = 2,\n+    DW_ACCESS_private = 3\n+  };\n+\n+/* visibility */\n+enum dwarf_visibility_attribute\n+  {\n+    DW_VIS_local = 1,\n+    DW_VIS_exported = 2,\n+    DW_VIS_qualified = 3\n+  };\n+\n+/* virtuality */\n+enum dwarf_virtuality_attribute\n+  {\n+    DW_VIRTUALITY_none = 0,\n+    DW_VIRTUALITY_virtual = 1,\n+    DW_VIRTUALITY_pure_virtual = 2\n+  };\n+\n+/* case sensitivity */\n+enum dwarf_id_case\n+  {\n+    DW_ID_case_sensitive = 0,\n+    DW_ID_up_case = 1,\n+    DW_ID_down_case = 2,\n+    DW_ID_case_insensitive = 3\n+  };\n+\n+/* calling convention */\n+enum dwarf_calling_convention\n+  {\n+    DW_CC_normal = 0x1,\n+    DW_CC_program = 0x2,\n+    DW_CC_nocall = 0x3\n+  };\n+\n+#define DW_CC_lo_user 0x40\n+#define DW_CC_hi_user 0xff\n+\n+/* inline attribute */\n+enum dwarf_inline_attribute\n+  {\n+    DW_INL_not_inlined = 0,\n+    DW_INL_inlined = 1,\n+    DW_INL_declared_not_inlined = 2,\n+    DW_INL_declared_inlined = 3\n+  };\n+\n+/* descriminant lists */\n+enum dwarf_descrim_list\n+  {\n+    DW_DSC_label = 0,\n+    DW_DSC_range = 1\n+  };\n+\n+/* line number opcodes */\n+enum dwarf_line_number_ops\n+  {\n+    DW_LNS_extended_op = 0,\n+    DW_LNS_copy = 1,\n+    DW_LNS_advance_pc = 2,\n+    DW_LNS_advance_line = 3,\n+    DW_LNS_set_file = 4,\n+    DW_LNS_set_column = 5,\n+    DW_LNS_negate_stmt = 6,\n+    DW_LNS_set_basic_block = 7,\n+    DW_LNS_const_add_pc = 8,\n+    DW_LNS_fixed_advance_pc = 9\n+  };\n+\n+/* line number extended opcodes */\n+enum dwarf_line_number_x_ops\n+  {\n+    DW_LNE_end_sequence = 1,\n+    DW_LNE_set_address = 2,\n+    DW_LNE_define_file = 3\n+  };\n+\n+/* call frame information */\n+enum dwarf_call_frame_info\n+  {\n+    DW_CFA_advance_loc = 0x40,\n+    DW_CFA_offset = 0x80,\n+    DW_CFA_restore = 0xc0,\n+    DW_CFA_nop = 0x00,\n+    DW_CFA_set_loc = 0x01,\n+    DW_CFA_advance_loc1 = 0x02,\n+    DW_CFA_advance_loc2 = 0x03,\n+    DW_CFA_advance_loc4 = 0x04,\n+    DW_CFA_offset_extended = 0x05,\n+    DW_CFA_restore_extended = 0x06,\n+    DW_CFA_undefined = 0x07,\n+    DW_CFA_same_value = 0x08,\n+    DW_CFA_register = 0x09,\n+    DW_CFA_remember_state = 0x0a,\n+    DW_CFA_restore_state = 0x0b,\n+    DW_CFA_def_cfa = 0x0c,\n+    DW_CFA_def_cfa_register = 0x0d,\n+    DW_CFA_def_cfa_offset = 0x0e,\n+    /* SGI/MIPS specific */\n+    DW_CFA_MIPS_advance_loc8 = 0x1d\n+  };\n+\n+#define DW_CIE_ID\t  0xffffffff\n+#define DW_CIE_VERSION\t  1\n+\n+#define DW_CFA_extended   0\n+#define DW_CFA_low_user   0x1c\n+#define DW_CFA_high_user  0x3f\n+\n+/* SGI/MIPS call frame register usage information */\n+enum dwarf_call_reg_usage\n+  {\n+    DW_FRAME_CFA_COL = 0,\n+    DW_FRAME_REG1 = 1,\n+    DW_FRAME_REG2 = 2,\n+    DW_FRAME_REG3 = 3,\n+    DW_FRAME_REG4 = 4,\n+    DW_FRAME_REG5 = 5,\n+    DW_FRAME_REG6 = 6,\n+    DW_FRAME_REG7 = 7,\n+    DW_FRAME_REG8 = 8,\n+    DW_FRAME_REG9 = 9,\n+    DW_FRAME_REG10 = 10,\n+    DW_FRAME_REG11 = 11,\n+    DW_FRAME_REG12 = 12,\n+    DW_FRAME_REG13 = 13,\n+    DW_FRAME_REG14 = 14,\n+    DW_FRAME_REG15 = 15,\n+    DW_FRAME_REG16 = 16,\n+    DW_FRAME_REG17 = 17,\n+    DW_FRAME_REG18 = 18,\n+    DW_FRAME_REG19 = 19,\n+    DW_FRAME_REG20 = 20,\n+    DW_FRAME_REG21 = 21,\n+    DW_FRAME_REG22 = 22,\n+    DW_FRAME_REG23 = 23,\n+    DW_FRAME_REG24 = 24,\n+    DW_FRAME_REG25 = 25,\n+    DW_FRAME_REG26 = 26,\n+    DW_FRAME_REG27 = 27,\n+    DW_FRAME_REG28 = 28,\n+    DW_FRAME_REG29 = 29,\n+    DW_FRAME_REG30 = 30,\n+    DW_FRAME_REG31 = 31,\n+    DW_FRAME_FREG0 = 32,\n+    DW_FRAME_FREG1 = 33,\n+    DW_FRAME_FREG2 = 34,\n+    DW_FRAME_FREG3 = 35,\n+    DW_FRAME_FREG4 = 36,\n+    DW_FRAME_FREG5 = 37,\n+    DW_FRAME_FREG6 = 38,\n+    DW_FRAME_FREG7 = 39,\n+    DW_FRAME_FREG8 = 40,\n+    DW_FRAME_FREG9 = 41,\n+    DW_FRAME_FREG10 = 42,\n+    DW_FRAME_FREG11 = 43,\n+    DW_FRAME_FREG12 = 44,\n+    DW_FRAME_FREG13 = 45,\n+    DW_FRAME_FREG14 = 46,\n+    DW_FRAME_FREG15 = 47,\n+    DW_FRAME_FREG16 = 48,\n+    DW_FRAME_FREG17 = 49,\n+    DW_FRAME_FREG18 = 50,\n+    DW_FRAME_FREG19 = 51,\n+    DW_FRAME_FREG20 = 52,\n+    DW_FRAME_FREG21 = 53,\n+    DW_FRAME_FREG22 = 54,\n+    DW_FRAME_FREG23 = 55,\n+    DW_FRAME_FREG24 = 56,\n+    DW_FRAME_FREG25 = 57,\n+    DW_FRAME_FREG26 = 58,\n+    DW_FRAME_FREG27 = 59,\n+    DW_FRAME_FREG28 = 60,\n+    DW_FRAME_FREG29 = 61,\n+    DW_FRAME_FREG30 = 62,\n+    DW_FRAME_FREG31 = 63,\n+    DW_FRAME_RA_COL = 64,\n+    DW_FRAME_STATIC_LINK = 65\n+  };\n+\n+/* This is the number of columns in the Frame Table. */\n+#define DW_FRAME_LAST_REG_NUM   66\n+\n+\n+\n+#define DW_CHILDREN_no\t\t     0x00\n+#define DW_CHILDREN_yes\t\t     0x01\n+\n+#define DW_ADDR_none\t\t0\n+\n+/* Source language names and codes.  */\n+\n+enum dwarf_source_language\n+  {\n+    DW_LANG_C89 = 0x0001,\n+    DW_LANG_C = 0x0002,\n+    DW_LANG_Ada83 = 0x0003,\n+    DW_LANG_C_plus_plus = 0x0004,\n+    DW_LANG_Cobol74 = 0x0005,\n+    DW_LANG_Cobol85 = 0x0006,\n+    DW_LANG_Fortran77 = 0x0007,\n+    DW_LANG_Fortran90 = 0x0008,\n+    DW_LANG_Pascal83 = 0x0009,\n+    DW_LANG_Modula2 = 0x000a,\n+    DW_LANG_Mips_Assembler = 0x8001\n+  };\n+\n+\n+#define DW_LANG_lo_user 0x8000\t/* implementation-defined range start */\n+#define DW_LANG_hi_user 0xffff\t/* implementation-defined range start */\n+\n+/* Names and codes for GNU \"macinfo\" extension.  */\n+\n+enum dwarf_macinfo_record_type\n+  {\n+    DW_MACINFO_define = 1,\n+    DW_MACINFO_undef = 2,\n+    DW_MACINFO_start_file = 3,\n+    DW_MACINFO_end_file = 4,\n+    DW_MACINFO_vend_ext = 255\n+  };"}, {"sha": "886c218f78d4ca878b58c060f3836b020772e1e6", "filename": "gcc/dwarf2out.c", "status": "added", "additions": 7733, "deletions": 0, "changes": 7733, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a3f97cbba6a16be47e3302e0f06b3d9bf2169c6c/gcc%2Fdwarf2out.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a3f97cbba6a16be47e3302e0f06b3d9bf2169c6c/gcc%2Fdwarf2out.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdwarf2out.c?ref=a3f97cbba6a16be47e3302e0f06b3d9bf2169c6c"}]}