{"sha": "6b42b5a8a207de5e021a2916281f46bcd60b20d2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmI0MmI1YThhMjA3ZGU1ZTAyMWEyOTE2MjgxZjQ2YmNkNjBiMjBkMg==", "commit": {"author": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2021-05-20T15:39:06Z"}, "committer": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2021-05-20T19:49:57Z"}, "message": "libstdc++: Use __builtin_unreachable for constexpr assertions [PR 100676]\n\nThe current implementation of compile-time precondition checks causes\ncompilation to fail by calling a non-constexpr function declared at\nblock scope. This breaks the CUDA compiler, which wraps some libstdc++\nheaders in a pragma that declares everything as a __host__ __device__\nfunction, but others are not wrapped and so everything is a __host__\nfunction. The local declaration thus gets redeclared as two different\ntypes of function, which doesn't work.\n\nJust use __builtin_unreachable to make constant evaluation fail, instead\nof the local function declaration. Also simplify the assertion macros,\nwhich has the side effect of giving simpler compilation errors when\nusing Clang.\n\nlibstdc++-v3/ChangeLog:\n\n\tPR libstdc++/100676\n\t* include/bits/c++config (__glibcxx_assert_1): Rename to ...\n\t(__glibcxx_constexpr_assert): ... this.\n\t(__glibcxx_assert_impl): Use __glibcxx_constexpr_assert.\n\t(__glibcxx_assert): Define as either __glibcxx_constexpr_assert\n\tor __glibcxx_assert_impl.\n\t(__glibcxx_assert_2): Remove\n\t* include/debug/macros.h (_GLIBCXX_DEBUG_VERIFY_AT_F): Use\n\t__glibcxx_constexpr_assert instead of __glibcxx_assert_1.\n\t* testsuite/21_strings/basic_string_view/element_access/char/back_constexpr_neg.cc:\n\tAdjust expected error.\n\t* testsuite/21_strings/basic_string_view/element_access/char/constexpr_neg.cc:\n\tLikewise.\n\t* testsuite/21_strings/basic_string_view/element_access/char/front_constexpr_neg.cc:\n\tLikewise.\n\tLikewise.\n\t* testsuite/21_strings/basic_string_view/element_access/wchar_t/back_constexpr_neg.cc:\n\tLikewise.\n\t* testsuite/21_strings/basic_string_view/element_access/wchar_t/constexpr_neg.cc:\n\tLikewise.\n\t* testsuite/21_strings/basic_string_view/element_access/wchar_t/front_constexpr_neg.cc:\n\tLikewise.\n\t* testsuite/23_containers/span/back_neg.cc: Likewise.\n\t* testsuite/23_containers/span/front_neg.cc: Likewise.\n\t* testsuite/23_containers/span/index_op_neg.cc: Likewise.", "tree": {"sha": "4cfd4f43c10fdaf4acac32b280c4e625f74117c6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4cfd4f43c10fdaf4acac32b280c4e625f74117c6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6b42b5a8a207de5e021a2916281f46bcd60b20d2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6b42b5a8a207de5e021a2916281f46bcd60b20d2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6b42b5a8a207de5e021a2916281f46bcd60b20d2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6b42b5a8a207de5e021a2916281f46bcd60b20d2/comments", "author": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ee336ecb2a7161bc28f6c5343d97870a8d15e177", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ee336ecb2a7161bc28f6c5343d97870a8d15e177", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ee336ecb2a7161bc28f6c5343d97870a8d15e177"}], "stats": {"total": 62, "additions": 29, "deletions": 33}, "files": [{"sha": "9314117aed8d8c068e0271decc0a19ccbc9536bc", "filename": "libstdc++-v3/include/bits/c++config", "status": "modified", "additions": 18, "deletions": 22, "changes": 40, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6b42b5a8a207de5e021a2916281f46bcd60b20d2/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fc%2B%2Bconfig", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6b42b5a8a207de5e021a2916281f46bcd60b20d2/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fc%2B%2Bconfig", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fc%2B%2Bconfig?ref=6b42b5a8a207de5e021a2916281f46bcd60b20d2", "patch": "@@ -487,6 +487,16 @@ namespace std\n # define _GLIBCXX_EXTERN_TEMPLATE -1\n #endif\n \n+\n+#if __has_builtin(__builtin_is_constant_evaluated)\n+# define __glibcxx_constexpr_assert(cond) \\\n+  if (__builtin_is_constant_evaluated() && !bool(cond))\t\\\n+    __builtin_unreachable() /* precondition violation detected! */\n+#else\n+# define __glibcxx_constexpr_assert(unevaluated)\n+#endif\n+\n+\n // Assert.\n #if defined(_GLIBCXX_ASSERTIONS) \\\n   || defined(_GLIBCXX_PARALLEL) || defined(_GLIBCXX_PARALLEL_ASSERTIONS)\n@@ -506,14 +516,19 @@ namespace std\n }\n #define __glibcxx_assert_impl(_Condition)\t\t\t       \\\n   if (__builtin_expect(!bool(_Condition), false))\t\t       \\\n+  {\t\t\t\t\t\t\t\t       \\\n+    __glibcxx_constexpr_assert(_Condition);\t\t\t       \\\n     std::__replacement_assert(__FILE__, __LINE__, __PRETTY_FUNCTION__, \\\n-\t\t\t      #_Condition)\n+\t\t\t      #_Condition);\t\t\t       \\\n+  }\n #endif\n \n #if defined(_GLIBCXX_ASSERTIONS)\n-# define __glibcxx_assert_2(_Condition) __glibcxx_assert_impl(_Condition)\n+# define __glibcxx_assert(cond) \\\n+  do { __glibcxx_assert_impl(cond); } while (false)\n #else\n-# define __glibcxx_assert_2(_Condition)\n+# define __glibcxx_assert(cond) \\\n+  do { __glibcxx_constexpr_assert(cond); } while (false)\n #endif\n \n // Macros for race detectors.\n@@ -736,25 +751,6 @@ namespace std\n \n #undef _GLIBCXX_HAS_BUILTIN\n \n-#if _GLIBCXX_HAVE_BUILTIN_IS_CONSTANT_EVALUATED && __cplusplus >= 201402L\n-# define __glibcxx_assert_1(_Condition)\t\t\\\n-    if (__builtin_is_constant_evaluated())\t\\\n-     {\t\t\t\t\t\t\\\n-       void __failed_assertion();\t\\\n-       if (!bool(_Condition))\t\t\t\\\n-\t __failed_assertion();\t\\\n-     }\t\t\t\t\t\t\\\n-    else\n-#else\n-# define __glibcxx_assert_1(_Condition)\n-#endif\n-\n-# define __glibcxx_assert(_Condition)\t  \\\n-  do {\t\t\t\t\t  \\\n-    __glibcxx_assert_1(_Condition)\t  \\\n-    { __glibcxx_assert_2(_Condition); }   \\\n-  } while (false)\n-\n \n // PSTL configuration\n "}, {"sha": "9e1288cf4d9252ce82094758724ac2f5679a8bac", "filename": "libstdc++-v3/include/debug/macros.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6b42b5a8a207de5e021a2916281f46bcd60b20d2/libstdc%2B%2B-v3%2Finclude%2Fdebug%2Fmacros.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6b42b5a8a207de5e021a2916281f46bcd60b20d2/libstdc%2B%2B-v3%2Finclude%2Fdebug%2Fmacros.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fdebug%2Fmacros.h?ref=6b42b5a8a207de5e021a2916281f46bcd60b20d2", "patch": "@@ -45,8 +45,8 @@\n \n #define _GLIBCXX_DEBUG_VERIFY_AT_F(_Cond,_ErrMsg,_File,_Line,_Func)\t\\\n   do {\t\t\t\t\t\t\t\t\t\\\n-    __glibcxx_assert_1(_Cond)\t\t\t\t\t\t\\\n-    { _GLIBCXX_DEBUG_VERIFY_COND_AT(_Cond,_ErrMsg,_File,_Line,_Func); } \\\n+    __glibcxx_constexpr_assert(_Cond);\t\t\t\t\t\\\n+    _GLIBCXX_DEBUG_VERIFY_COND_AT(_Cond,_ErrMsg,_File,_Line,_Func);\t\\\n   } while (false)\n \n #define _GLIBCXX_DEBUG_VERIFY_AT(_Cond,_ErrMsg,_File,_Line)\t\t\\"}, {"sha": "2da90bd954e2ece64f7d3b829d10008d0f5775cc", "filename": "libstdc++-v3/testsuite/21_strings/basic_string_view/element_access/char/back_constexpr_neg.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6b42b5a8a207de5e021a2916281f46bcd60b20d2/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string_view%2Felement_access%2Fchar%2Fback_constexpr_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6b42b5a8a207de5e021a2916281f46bcd60b20d2/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string_view%2Felement_access%2Fchar%2Fback_constexpr_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string_view%2Felement_access%2Fchar%2Fback_constexpr_neg.cc?ref=6b42b5a8a207de5e021a2916281f46bcd60b20d2", "patch": "@@ -32,4 +32,4 @@ back()\n static_assert(back() != 'a'); // { dg-error \"non-constant condition\" }\n \n // { dg-prune-output \"in 'constexpr' expansion\" }\n-// { dg-prune-output \"failed_assertion\" }\n+// { dg-prune-output \"unreachable\" }"}, {"sha": "844b62277c5fff05d924ae351c785b8d471f5a8d", "filename": "libstdc++-v3/testsuite/21_strings/basic_string_view/element_access/char/constexpr_neg.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6b42b5a8a207de5e021a2916281f46bcd60b20d2/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string_view%2Felement_access%2Fchar%2Fconstexpr_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6b42b5a8a207de5e021a2916281f46bcd60b20d2/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string_view%2Felement_access%2Fchar%2Fconstexpr_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string_view%2Felement_access%2Fchar%2Fconstexpr_neg.cc?ref=6b42b5a8a207de5e021a2916281f46bcd60b20d2", "patch": "@@ -31,4 +31,4 @@ test()\n static_assert(test() == 0); // { dg-error \"non-constant condition\" }\n \n // { dg-prune-output \"in 'constexpr' expansion\" }\n-// { dg-prune-output \"failed_assertion\" }\n+// { dg-prune-output \"unreachable\" }"}, {"sha": "d6dceb61a34cf646c02cefdedaf107dce37f8e2c", "filename": "libstdc++-v3/testsuite/21_strings/basic_string_view/element_access/char/front_constexpr_neg.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6b42b5a8a207de5e021a2916281f46bcd60b20d2/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string_view%2Felement_access%2Fchar%2Ffront_constexpr_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6b42b5a8a207de5e021a2916281f46bcd60b20d2/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string_view%2Felement_access%2Fchar%2Ffront_constexpr_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string_view%2Felement_access%2Fchar%2Ffront_constexpr_neg.cc?ref=6b42b5a8a207de5e021a2916281f46bcd60b20d2", "patch": "@@ -32,4 +32,4 @@ front()\n static_assert(front() != 'a'); // { dg-error \"non-constant condition\" }\n \n // { dg-prune-output \"in 'constexpr' expansion\" }\n-// { dg-prune-output \"failed_assertion\" }\n+// { dg-prune-output \"unreachable\" }"}, {"sha": "798e1a4074de7d8b3d675f67403865fa90633ea2", "filename": "libstdc++-v3/testsuite/21_strings/basic_string_view/element_access/wchar_t/back_constexpr_neg.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6b42b5a8a207de5e021a2916281f46bcd60b20d2/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string_view%2Felement_access%2Fwchar_t%2Fback_constexpr_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6b42b5a8a207de5e021a2916281f46bcd60b20d2/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string_view%2Felement_access%2Fwchar_t%2Fback_constexpr_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string_view%2Felement_access%2Fwchar_t%2Fback_constexpr_neg.cc?ref=6b42b5a8a207de5e021a2916281f46bcd60b20d2", "patch": "@@ -32,4 +32,4 @@ back()\n static_assert(back() != L'a'); // { dg-error \"non-constant condition\" }\n \n // { dg-prune-output \"in 'constexpr' expansion\" }\n-// { dg-prune-output \"failed_assertion\" }\n+// { dg-prune-output \"unreachable\" }"}, {"sha": "0e22b766b3dea48ae08af42da44f87067c0024aa", "filename": "libstdc++-v3/testsuite/21_strings/basic_string_view/element_access/wchar_t/constexpr_neg.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6b42b5a8a207de5e021a2916281f46bcd60b20d2/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string_view%2Felement_access%2Fwchar_t%2Fconstexpr_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6b42b5a8a207de5e021a2916281f46bcd60b20d2/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string_view%2Felement_access%2Fwchar_t%2Fconstexpr_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string_view%2Felement_access%2Fwchar_t%2Fconstexpr_neg.cc?ref=6b42b5a8a207de5e021a2916281f46bcd60b20d2", "patch": "@@ -31,4 +31,4 @@ test()\n static_assert(test() == 0); // { dg-error \"non-constant condition\" }\n \n // { dg-prune-output \"in 'constexpr' expansion\" }\n-// { dg-prune-output \"failed_assertion\" }\n+// { dg-prune-output \"unreachable\" }"}, {"sha": "f49774a0bdd47eecc7f2d2bd87c65f404c6125b5", "filename": "libstdc++-v3/testsuite/21_strings/basic_string_view/element_access/wchar_t/front_constexpr_neg.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6b42b5a8a207de5e021a2916281f46bcd60b20d2/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string_view%2Felement_access%2Fwchar_t%2Ffront_constexpr_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6b42b5a8a207de5e021a2916281f46bcd60b20d2/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string_view%2Felement_access%2Fwchar_t%2Ffront_constexpr_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string_view%2Felement_access%2Fwchar_t%2Ffront_constexpr_neg.cc?ref=6b42b5a8a207de5e021a2916281f46bcd60b20d2", "patch": "@@ -32,4 +32,4 @@ front()\n static_assert(front() != L'a'); // { dg-error \"non-constant condition\" }\n \n // { dg-prune-output \"in 'constexpr' expansion\" }\n-// { dg-prune-output \"failed_assertion\" }\n+// { dg-prune-output \"unreachable\" }"}, {"sha": "ce00aa8868f0241f602793e6ae234bdc6076626d", "filename": "libstdc++-v3/testsuite/23_containers/span/back_neg.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6b42b5a8a207de5e021a2916281f46bcd60b20d2/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fspan%2Fback_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6b42b5a8a207de5e021a2916281f46bcd60b20d2/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fspan%2Fback_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fspan%2Fback_neg.cc?ref=6b42b5a8a207de5e021a2916281f46bcd60b20d2", "patch": "@@ -31,5 +31,5 @@ test01(bool b)\n \n static_assert(test01(false));\n static_assert(test01(true)); // { dg-error \"non-constant\" }\n-// { dg-error \"assert\" \"\" { target *-*-* } 0 }\n+// { dg-error \"unreachable\" \"\" { target *-*-* } 0 }\n // { dg-prune-output \"in 'constexpr' expansion\" }"}, {"sha": "a6efc7dd83631f34748c34410c622e943dfd096f", "filename": "libstdc++-v3/testsuite/23_containers/span/front_neg.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6b42b5a8a207de5e021a2916281f46bcd60b20d2/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fspan%2Ffront_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6b42b5a8a207de5e021a2916281f46bcd60b20d2/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fspan%2Ffront_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fspan%2Ffront_neg.cc?ref=6b42b5a8a207de5e021a2916281f46bcd60b20d2", "patch": "@@ -31,5 +31,5 @@ test01(bool b)\n \n static_assert(test01(false));\n static_assert(test01(true)); // { dg-error \"non-constant\" }\n-// { dg-error \"assert\" \"\" { target *-*-* } 0 }\n+// { dg-error \"unreachable\" \"\" { target *-*-* } 0 }\n // { dg-prune-output \"in 'constexpr' expansion\" }"}, {"sha": "2dce639819c782f225a2ce3b11e88e9bae454127", "filename": "libstdc++-v3/testsuite/23_containers/span/index_op_neg.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6b42b5a8a207de5e021a2916281f46bcd60b20d2/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fspan%2Findex_op_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6b42b5a8a207de5e021a2916281f46bcd60b20d2/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fspan%2Findex_op_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fspan%2Findex_op_neg.cc?ref=6b42b5a8a207de5e021a2916281f46bcd60b20d2", "patch": "@@ -31,5 +31,5 @@ test01(bool b)\n \n static_assert(test01(false));\n static_assert(test01(true)); // { dg-error \"non-constant\" }\n-// { dg-error \"assert\" \"\" { target *-*-* } 0 }\n+// { dg-error \"unreachable\" \"\" { target *-*-* } 0 }\n // { dg-prune-output \"in 'constexpr' expansion\" }"}]}