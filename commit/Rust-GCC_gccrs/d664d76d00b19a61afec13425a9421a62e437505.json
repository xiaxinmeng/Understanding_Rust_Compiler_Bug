{"sha": "d664d76d00b19a61afec13425a9421a62e437505", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDY2NGQ3NmQwMGIxOWE2MWFmZWMxMzQyNWE5NDIxYTYyZTQzNzUwNQ==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2016-09-23T17:38:29Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2016-09-23T17:38:29Z"}, "message": "Implement P0138R2, C++17 construction rules for enum class values\n\n\tImplement P0138R2, C++17 construction rules for enum class values\n\t* cp-tree.h (is_direct_enum_init): Declare.\n\t* decl.c (is_direct_enum_init): New function.\n\t(reshape_init): Use it.\n\t* typeck.c (convert_for_assignment): Likewise.\n\n\t* g++.dg/cpp1z/direct-enum-init1.C: New test.\n\nFrom-SVN: r240449", "tree": {"sha": "0dab028d22f5c23310e12547c146e8c3c2412cbb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0dab028d22f5c23310e12547c146e8c3c2412cbb"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d664d76d00b19a61afec13425a9421a62e437505", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d664d76d00b19a61afec13425a9421a62e437505", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d664d76d00b19a61afec13425a9421a62e437505", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d664d76d00b19a61afec13425a9421a62e437505/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "24cae8cb9adca74ad4038d2bb55380e486aed8c0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/24cae8cb9adca74ad4038d2bb55380e486aed8c0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/24cae8cb9adca74ad4038d2bb55380e486aed8c0"}], "stats": {"total": 287, "additions": 287, "deletions": 0}, "files": [{"sha": "a3430bf3ad50531cdb8aee2ecb6a752e19af117c", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d664d76d00b19a61afec13425a9421a62e437505/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d664d76d00b19a61afec13425a9421a62e437505/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=d664d76d00b19a61afec13425a9421a62e437505", "patch": "@@ -1,5 +1,11 @@\n 2016-09-23  Jakub Jelinek  <jakub@redhat.com>\n \n+\tImplement P0138R2, C++17 construction rules for enum class values\n+\t* cp-tree.h (is_direct_enum_init): Declare.\n+\t* decl.c (is_direct_enum_init): New function.\n+\t(reshape_init): Use it.\n+\t* typeck.c (convert_for_assignment): Likewise.\n+\n \t* Make-lang.in (check-c++1z): Pass RUNTESTFLAGS down to\n \tmake check-g++.\n "}, {"sha": "c7a38faa10f7dfb6f8eeecbf442c7996ab64d627", "filename": "gcc/cp/cp-tree.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d664d76d00b19a61afec13425a9421a62e437505/gcc%2Fcp%2Fcp-tree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d664d76d00b19a61afec13425a9421a62e437505/gcc%2Fcp%2Fcp-tree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcp-tree.h?ref=d664d76d00b19a61afec13425a9421a62e437505", "patch": "@@ -5829,6 +5829,7 @@ extern tree check_elaborated_type_specifier\t(enum tag_types, tree, bool);\n extern void warn_extern_redeclared_static\t(tree, tree);\n extern tree cxx_comdat_group\t\t\t(tree);\n extern bool cp_missing_noreturn_ok_p\t\t(tree);\n+extern bool is_direct_enum_init\t\t\t(tree, tree);\n extern void initialize_artificial_var\t\t(tree, vec<constructor_elt, va_gc> *);\n extern tree check_var_type\t\t\t(tree, tree);\n extern tree reshape_init                        (tree, tree, tsubst_flags_t);"}, {"sha": "3dfa0423522722d9d3adc35390cb4cfdd3cac85c", "filename": "gcc/cp/decl.c", "status": "modified", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d664d76d00b19a61afec13425a9421a62e437505/gcc%2Fcp%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d664d76d00b19a61afec13425a9421a62e437505/gcc%2Fcp%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fdecl.c?ref=d664d76d00b19a61afec13425a9421a62e437505", "patch": "@@ -5581,6 +5581,22 @@ next_initializable_field (tree field)\n   return field;\n }\n \n+/* Return true for [dcl.init.list] direct-list-initialization from\n+   single element of enumeration with a fixed underlying type.  */\n+\n+bool\n+is_direct_enum_init (tree type, tree init)\n+{\n+  if (cxx_dialect >= cxx1z\n+      && TREE_CODE (type) == ENUMERAL_TYPE\n+      && ENUM_FIXED_UNDERLYING_TYPE_P (type)\n+      && TREE_CODE (init) == CONSTRUCTOR\n+      && CONSTRUCTOR_IS_DIRECT_INIT (init)\n+      && CONSTRUCTOR_NELTS (init) == 1)\n+    return true;\n+  return false;\n+}\n+\n /* Subroutine of reshape_init_array and reshape_init_vector, which does\n    the actual work. ELT_TYPE is the element type of the array. MAX_INDEX is an\n    INTEGER_CST representing the size of the array minus one (the maximum index),\n@@ -6026,6 +6042,17 @@ reshape_init (tree type, tree init, tsubst_flags_t complain)\n   if (vec_safe_is_empty (v))\n     return init;\n \n+  /* Handle [dcl.init.list] direct-list-initialization from\n+     single element of enumeration with a fixed underlying type.  */\n+  if (is_direct_enum_init (type, init))\n+    {\n+      tree elt = CONSTRUCTOR_ELT (init, 0)->value;\n+      if (check_narrowing (ENUM_UNDERLYING_TYPE (type), elt, complain))\n+\treturn cp_build_c_cast (type, elt, tf_warning_or_error);\n+      else\n+\treturn error_mark_node;\n+    }\n+\n   /* Recurse on this CONSTRUCTOR.  */\n   d.cur = &(*v)[0];\n   d.end = d.cur + v->length ();"}, {"sha": "b2af615d89e74a30d5bdcf0f70c302c743cf4591", "filename": "gcc/cp/typeck.c", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d664d76d00b19a61afec13425a9421a62e437505/gcc%2Fcp%2Ftypeck.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d664d76d00b19a61afec13425a9421a62e437505/gcc%2Fcp%2Ftypeck.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Ftypeck.c?ref=d664d76d00b19a61afec13425a9421a62e437505", "patch": "@@ -8266,6 +8266,17 @@ convert_for_assignment (tree type, tree rhs,\n   if (TREE_CODE (rhs) == NON_LVALUE_EXPR)\n     rhs = TREE_OPERAND (rhs, 0);\n \n+  /* Handle [dcl.init.list] direct-list-initialization from\n+     single element of enumeration with a fixed underlying type.  */\n+  if (is_direct_enum_init (type, rhs))\n+    {\n+      tree elt = CONSTRUCTOR_ELT (rhs, 0)->value;\n+      if (check_narrowing (ENUM_UNDERLYING_TYPE (type), elt, complain))\n+\trhs = cp_build_c_cast (type, elt, complain);\n+      else\n+\trhs = error_mark_node;\n+    }\n+\n   rhstype = TREE_TYPE (rhs);\n   coder = TREE_CODE (rhstype);\n "}, {"sha": "080e55604ec7b640e2e3a7b4569c26cba0a8ab5e", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d664d76d00b19a61afec13425a9421a62e437505/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d664d76d00b19a61afec13425a9421a62e437505/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=d664d76d00b19a61afec13425a9421a62e437505", "patch": "@@ -1,3 +1,8 @@\n+2016-09-23  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tImplement P0138R2, C++17 construction rules for enum class values\n+\t* g++.dg/cpp1z/direct-enum-init1.C: New test.\n+\n 2016-09-23  David Malcolm  <dmalcolm@redhat.com>\n \n \tPR preprocessor/77672"}, {"sha": "b473ed553c94fd02be027c25983ff4e84fa3b845", "filename": "gcc/testsuite/g++.dg/cpp1z/direct-enum-init1.C", "status": "added", "additions": 237, "deletions": 0, "changes": 237, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d664d76d00b19a61afec13425a9421a62e437505/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fdirect-enum-init1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d664d76d00b19a61afec13425a9421a62e437505/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fdirect-enum-init1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fdirect-enum-init1.C?ref=d664d76d00b19a61afec13425a9421a62e437505", "patch": "@@ -0,0 +1,237 @@\n+// P0138R2 - direct-list-initialization of enums\n+// { dg-do compile { target c++11 } }\n+\n+enum A { G = 26 };\n+enum B : short {};\n+enum class C {};\n+enum struct D : long {};\n+enum class E : unsigned char { e = 7 };\n+struct S { operator C () { return C (s); } int s; } s;\n+struct T { operator long () { return t; } long t; } t;\n+struct V { E v; };\n+long l;\n+long long ll;\n+short c;\n+void bar (E);\n+\n+void\n+foo ()\n+{\n+  A a1 { 5 };\t\t// { dg-error \"invalid conversion from 'int' to 'A'\" }\n+  B b1 { 7 };\t\t// { dg-error \"invalid conversion from 'int' to 'B'\" \"\" { target c++14_down } }\n+  C c1 { s };\n+  D d1 { D(t) };\t// { dg-error \"invalid cast from type 'T' to type 'D'\" }\n+  D d2 { t };\t\t// { dg-error \"cannot convert 'T' to 'D' in initialization\" \"\" { target c++14_down } }\n+\t\t\t// { dg-error \"invalid cast from type 'T' to type 'D'\" \"\" { target c++1z } .-1 }\n+  D d3 { 9 };\t\t// { dg-error \"cannot convert 'int' to 'D' in initialization\" \"\" { target c++14_down } }\n+  D d4 { l };\t\t// { dg-error \"cannot convert 'long int' to 'D' in initialization\" \"\" { target c++14_down } }\n+  D d5 { D(l) };\n+  D d6 { G };\t\t// { dg-error \"cannot convert 'A' to 'D' in initialization\" \"\" { target c++14_down } }\n+  E e1 { 5 };\t\t// { dg-error \"cannot convert 'int' to 'E' in initialization\" \"\" { target c++14_down } }\n+  E e2 { -1 };\t\t// { dg-error \"cannot convert 'int' to 'E' in initialization\" \"\" { target c++14_down } }\n+\t\t\t// { dg-error \"narrowing conversion of '-1' from 'int' to 'unsigned char' inside\" \"\" { target c++1z } .-1 }\n+  E e3 { 5.0 };\t\t// { dg-error \"cannot convert 'double' to 'E' in initialization\" \"\" { target c++14_down } }\n+\t\t\t// { dg-error \"narrowing conversion of '5.0e.0' from 'double' to 'unsigned char' inside\" \"\" { target c++1z } .-1 }\n+  E e4 { 5.2 };\t\t// { dg-error \"cannot convert 'double' to 'E' in initialization\" \"\" { target c++14_down } }\n+\t\t\t// { dg-error \"narrowing conversion of '5.\\[0-9]*e.0' from 'double' to 'unsigned char' inside\" \"\" { target c++1z } .-1 }\n+  B b2 = { 7 };\t\t// { dg-error \"invalid conversion from 'int' to 'B'\" }\n+  C c2 = { C { 8 } };\t// { dg-error \"cannot convert 'int' to 'C' in initialization\" \"\" { target c++14_down } }\n+\n+  D *d7 = new D { 9 };\t// { dg-error \"cannot convert \\[^\\n\\r]* to 'D' in initialization\" \"\" { target c++14_down } }\n+  E *e5 = new E { -4 };\t// { dg-error \"cannot convert \\[^\\n\\r]* to 'E' in initialization\" \"\" { target c++14_down } }\n+\t\t\t// { dg-error \"narrowing conversion of '-4' from 'int' to 'unsigned char' inside\" \"\" { target c++1z } .-1 }\n+  bar ({ 10 });\t\t// { dg-error \"cannot convert \\[^\\n\\r]* to 'E' for argument\" }\n+  bar (E { 9 });\t// { dg-error \"cannot convert 'int' to 'E' in initialization\" \"\" { target c++14_down } }\n+  V v1 = { { 11 } };\t// { dg-error \"braces around scalar initializer for type 'E'\" }\n+  V v2 = { E { 12 } };\t// { dg-error \"cannot convert 'int' to 'E' in initialization\" \"\" { target c++14_down } }\n+  V v3 = { E { 5.0 } };\t// { dg-error \"cannot convert 'double' to 'E' in initialization\" \"\" { target c++14_down } }\n+\t\t\t// { dg-error \"narrowing conversion of '5.0e.0' from 'double' to 'unsigned char' inside\" \"\" { target c++1z } .-1 }\n+  V v4 = { 13 };\t// { dg-error \"cannot convert 'int' to 'E' in initialization\" }\n+  if (B b3 { 5 })\t// { dg-error \"invalid conversion from 'int' to 'B'\" \"\" { target c++14_down } }\n+    ;\n+  if (B b4 { 4.0 })\t// { dg-error \"cannot convert 'double' to 'B' in initialization\" \"\" { target c++14_down } }\n+    ;\t\t\t// { dg-error \"narrowing conversion of '4.0e.0' from 'double' to 'short int' inside\" \"\" { target c++1z } .-1 }\n+  C c3 { 8L };\t\t// { dg-error \"cannot convert 'long int' to 'C' in initialization\" \"\" { target c++14_down } }\n+  B b4 {short (c + 5)};\t// { dg-error \"invalid conversion from 'short int' to 'B'\" \"\" { target c++14_down } }\n+  B b5 {c + 5};\t\t// { dg-error \"invalid conversion from 'int' to 'B'\" \"\" { target c++14_down } }\n+\t\t\t// { dg-error \"narrowing conversion of \\[^\\n\\r]* from 'int' to 'short int' inside\" \"\" { target c++1z } .-1 }\n+  C c4 { ll };\t\t// { dg-error \"cannot convert 'long long int' to 'C' in initialization\" \"\" { target c++14_down } }\n+\t\t\t// { dg-error \"narrowing conversion of 'll' from 'long long int' to 'int' inside\" \"\" { target c++1z } .-1 }\n+  C c5 {short (c + 5)};\t// { dg-error \"cannot convert 'short int' to 'C' in initialization\" \"\" { target c++14_down } }\n+  C c6 {c + 5};\t\t// { dg-error \"cannot convert 'int' to 'C' in initialization\" \"\" { target c++14_down } }\n+}\n+\n+struct U\n+{\n+  U () : e { 5 } {}\t// { dg-error \"cannot convert \\[^\\n\\r]* to 'E' in initialization\" \"\" { target c++14_down } }\n+  U (int) : e { 5.0 } {}// { dg-error \"cannot convert \\[^\\n\\r]* to 'E' in initialization\" \"\" { target c++14_down } }\n+\t\t\t// { dg-error \"narrowing conversion of '5.0e.0' from 'double' to 'unsigned char' inside\" \"\" { target c++1z } .-1 }\n+  U (float) : e({ 6 }) {}// { dg-error \"list-initializer for non-class type must not be parenthesized\" }\n+\t\t\t// { dg-error \"cannot convert \\[^\\n\\r]* to 'E' in initialization\" \"\" { target *-*-* } .-1 }\n+  E e;\n+};\n+\n+struct W\n+{\n+  A a { 5 };\t\t// { dg-error \"invalid conversion from 'int' to 'A'\" }\n+  B b { 6 };\t\t// { dg-error \"invalid conversion from 'int' to 'B'\" \"\" { target c++14_down } }\n+  C c { 3.0f };\t\t// { dg-error \"cannot convert \\[^\\n\\r]* to 'C' in initialization\" \"\" { target c++14_down } }\n+\t\t\t// { dg-error \"narrowing conversion of '3.0e.0f' from 'float' to 'int' inside\" \"\" { target c++1z } .-1 }\n+  D d = { 7 };\t\t// { dg-error \"cannot convert \\[^\\n\\r]* to 'D' in initialization\" }\n+};\n+\n+template <int N>\n+void\n+foo2 ()\n+{\n+  A a1 { 5 };\t\t// { dg-error \"invalid conversion from 'int' to 'A'\" }\n+  B b1 { 7 };\t\t// { dg-error \"invalid conversion from 'int' to 'B'\" \"\" { target c++14_down } }\n+  C c1 { s };\n+  D d1 { D(t) };\t// { dg-error \"invalid cast from type 'T' to type 'D'\" }\n+  D d2 { t };\t\t// { dg-error \"cannot convert 'T' to 'D' in initialization\" \"\" { target c++14_down } }\n+\t\t\t// { dg-error \"invalid cast from type 'T' to type 'D'\" \"\" { target c++1z } .-1 }\n+  D d3 { 9 };\t\t// { dg-error \"cannot convert 'int' to 'D' in initialization\" \"\" { target c++14_down } }\n+  D d4 { l };\t\t// { dg-error \"cannot convert 'long int' to 'D' in initialization\" \"\" { target c++14_down } }\n+  D d5 { D(l) };\n+  D d6 { G };\t\t// { dg-error \"cannot convert 'A' to 'D' in initialization\" \"\" { target c++14_down } }\n+  E e1 { 5 };\t\t// { dg-error \"cannot convert 'int' to 'E' in initialization\" \"\" { target c++14_down } }\n+  E e2 { -1 };\t\t// { dg-error \"cannot convert 'int' to 'E' in initialization\" \"\" { target c++14_down } }\n+\t\t\t// { dg-error \"narrowing conversion of '-1' from 'int' to 'unsigned char' inside\" \"\" { target c++1z } .-1 }\n+  E e3 { 5.0 };\t\t// { dg-error \"cannot convert 'double' to 'E' in initialization\" \"\" { target c++14_down } }\n+\t\t\t// { dg-error \"narrowing conversion of '5.0e.0' from 'double' to 'unsigned char' inside\" \"\" { target c++1z } .-1 }\n+  E e4 { 5.2 };\t\t// { dg-error \"cannot convert 'double' to 'E' in initialization\" \"\" { target c++14_down } }\n+\t\t\t// { dg-error \"narrowing conversion of '5.\\[0-9]*e.0' from 'double' to 'unsigned char' inside\" \"\" { target c++1z } .-1 }\n+  B b2 = { 7 };\t\t// { dg-error \"invalid conversion from 'int' to 'B'\" }\n+  C c2 = { C { 8 } };\t// { dg-error \"cannot convert 'int' to 'C' in initialization\" \"\" { target c++14_down } }\n+  D *d7 = new D { 9 };\t// { dg-error \"cannot convert \\[^\\n\\r]* to 'D' in initialization\" \"\" { target c++14_down } }\n+  E *e5 = new E { -4 };\t// { dg-error \"cannot convert \\[^\\n\\r]* to 'E' in initialization\" \"\" { target c++14_down } }\n+\t\t\t// { dg-error \"narrowing conversion of '-4' from 'int' to 'unsigned char' inside\" \"\" { target c++1z } .-1 }\n+  bar ({ 10 });\t\t// { dg-error \"cannot convert \\[^\\n\\r]* to 'E' for argument\" }\n+  bar (E { 9 });\t// { dg-error \"cannot convert 'int' to 'E' in initialization\" \"\" { target c++14_down } }\n+  V v1 = { { 11 } };\t// { dg-error \"braces around scalar initializer for type 'E'\" }\n+  V v2 = { E { 12 } };\t// { dg-error \"cannot convert 'int' to 'E' in initialization\" \"\" { target c++14_down } }\n+  V v3 = { E { 5.0 } };\t// { dg-error \"cannot convert 'double' to 'E' in initialization\" \"\" { target c++14_down } }\n+\t\t\t// { dg-error \"narrowing conversion of '5.0e.0' from 'double' to 'unsigned char' inside\" \"\" { target c++1z } .-1 }\n+  V v4 = { 13 };\t// { dg-error \"cannot convert 'int' to 'E' in initialization\" }\n+  if (B b3 { 5 })\t// { dg-error \"invalid conversion from 'int' to 'B'\" \"\" { target c++14_down } }\n+    ;\n+  if (B b4 { 4.0 })\t// { dg-error \"cannot convert 'double' to 'B' in initialization\" \"\" { target c++14_down } }\n+    ;\t\t\t// { dg-error \"narrowing conversion of '4.0e.0' from 'double' to 'short int' inside\" \"\" { target c++1z } .-1 }\n+  C c3 { 8L };\t\t// { dg-error \"cannot convert 'long int' to 'C' in initialization\" \"\" { target c++14_down } }\n+  B b4 {short (c + 5)};\t// { dg-error \"invalid conversion from 'short int' to 'B'\" \"\" { target c++14_down } }\n+  B b5 {c + 5};\t\t// { dg-error \"invalid conversion from 'int' to 'B'\" \"\" { target c++14_down } }\n+\t\t\t// { dg-error \"narrowing conversion of \\[^\\n\\r]* from 'int' to 'short int' inside\" \"\" { target c++1z } .-1 }\n+  C c4 { ll };\t\t// { dg-error \"cannot convert 'long long int' to 'C' in initialization\" \"\" { target c++14_down } }\n+\t\t\t// { dg-error \"narrowing conversion of 'll' from 'long long int' to 'int' inside\" \"\" { target c++1z } .-1 }\n+  C c5 {short (c + 5)};\t// { dg-error \"cannot convert 'short int' to 'C' in initialization\" \"\" { target c++14_down } }\n+  C c6 {c + 5};\t\t// { dg-error \"cannot convert 'int' to 'C' in initialization\" \"\" { target c++14_down } }\n+}\n+\n+template <int N>\n+struct U2\n+{\n+  U2 () : e { 5 } {}\t// { dg-error \"cannot convert \\[^\\n\\r]* to 'E' in initialization\" \"\" { target c++14_down } }\n+  U2 (int) : e { 5.0 } {}// { dg-error \"cannot convert \\[^\\n\\r]* to 'E' in initialization\" \"\" { target c++14_down } }\n+\t\t\t// { dg-error \"narrowing conversion of '5.0e.0' from 'double' to 'unsigned char' inside\" \"\" { target c++1z } .-1 }\n+  U2 (float) : e({ 6 }) {}\n+  E e;\n+};\n+\n+template <int N>\n+struct W2\n+{\n+  A a { 5 };\t\t// { dg-error \"invalid conversion from 'int' to 'A'\" \"\" { target *-*-* } .-2 }\n+  B b { 6 };\t\t// { dg-error \"invalid conversion from 'int' to 'B'\" \"\" { target c++14_down } .-3 }\n+  C c { 3.0f };\t\t// { dg-error \"cannot convert \\[^\\n\\r]* to 'C' in initialization\" \"\" { target c++14_down } .-4 }\n+\t\t\t// { dg-error \"narrowing conversion of '3.0e.0f' from 'float' to 'int' inside\" \"\" { target c++1z } .-5 }\n+  D d = { 7 };\t\t// { dg-error \"cannot convert \\[^\\n\\r]* to 'D' in initialization\" \"\" { target *-*-* } .-6 }\n+};\n+\n+template <typename H, typename I, typename J, typename K, typename L, typename M>\n+void\n+foo3 ()\n+{\n+  void bar3 (L);\n+  H a1 { 5 };\t\t// { dg-error \"invalid conversion from 'int' to 'A'\" }\n+  I b1 { 7 };\t\t// { dg-error \"invalid conversion from 'int' to 'B'\" \"\" { target c++14_down } }\n+  J c1 { s };\n+  K d1 { K(t) };\t// { dg-error \"invalid cast from type 'T' to type 'D'\" }\n+  K d2 { t };\t\t// { dg-error \"cannot convert 'T' to 'D' in initialization\" \"\" { target c++14_down } }\n+\t\t\t// { dg-error \"invalid cast from type 'T' to type 'D'\" \"\" { target c++1z } .-1 }\n+  K d3 { 9 };\t\t// { dg-error \"cannot convert 'int' to 'D' in initialization\" \"\" { target c++14_down } }\n+  K d4 { l };\t\t// { dg-error \"cannot convert 'long int' to 'D' in initialization\" \"\" { target c++14_down } }\n+  K d5 { K(l) };\n+  K d6 { G };\t\t// { dg-error \"cannot convert 'A' to 'D' in initialization\" \"\" { target c++14_down } }\n+  L e1 { 5 };\t\t// { dg-error \"cannot convert 'int' to 'E' in initialization\" \"\" { target c++14_down } }\n+  L e2 { -1 };\t\t// { dg-error \"cannot convert 'int' to 'E' in initialization\" \"\" { target c++14_down } }\n+\t\t\t// { dg-error \"narrowing conversion of '-1' from 'int' to 'unsigned char' inside\" \"\" { target c++1z } .-1 }\n+  L e3 { 5.0 };\t\t// { dg-error \"cannot convert 'double' to 'E' in initialization\" \"\" { target c++14_down } }\n+\t\t\t// { dg-error \"narrowing conversion of '5.0e.0' from 'double' to 'unsigned char' inside\" \"\" { target c++1z } .-1 }\n+  L e4 { 5.2 };\t\t// { dg-error \"cannot convert 'double' to 'E' in initialization\" \"\" { target c++14_down } }\n+\t\t\t// { dg-error \"narrowing conversion of '5.\\[0-9]*e.0' from 'double' to 'unsigned char' inside\" \"\" { target c++1z } .-1 }\n+  I b2 = { 7 };\t\t// { dg-error \"invalid conversion from 'int' to 'B'\" }\n+  J c2 = { J { 8 } };\t// { dg-error \"cannot convert 'int' to 'C' in initialization\" \"\" { target c++14_down } }\n+  K *d7 = new K { 9 };\t// { dg-error \"cannot convert \\[^\\n\\r]* to 'D' in initialization\" \"\" { target c++14_down } }\n+  L *e5 = new L { -4 };\t// { dg-error \"cannot convert \\[^\\n\\r]* to 'E' in initialization\" \"\" { target c++14_down } }\n+\t\t\t// { dg-error \"narrowing conversion of '-4' from 'int' to 'unsigned char' inside\" \"\" { target c++1z } .-1 }\n+  bar3 ({ 10 });\t// { dg-error \"cannot convert \\[^\\n\\r]* to 'E' for argument\" }\n+  bar3 (E { 9 });\t// { dg-error \"cannot convert 'int' to 'E' in initialization\" \"\" { target c++14_down } }\n+  M v1 = { { 11 } };\t// { dg-error \"braces around scalar initializer for type 'E'\" }\n+  M v2 = { L { 12 } };\t// { dg-error \"cannot convert 'int' to 'E' in initialization\" \"\" { target c++14_down } }\n+  M v3 = { L { 5.0 } };\t// { dg-error \"cannot convert 'double' to 'E' in initialization\" \"\" { target c++14_down } }\n+\t\t\t// { dg-error \"narrowing conversion of '5.0e.0' from 'double' to 'unsigned char' inside\" \"\" { target c++1z } .-1 }\n+  M v4 = { 13 };\t// { dg-error \"cannot convert 'int' to 'E' in initialization\" }\n+  if (I b3 { 5 })\t// { dg-error \"invalid conversion from 'int' to 'B'\" \"\" { target c++14_down } }\n+    ;\n+  if (I b4 { 4.0 })\t// { dg-error \"cannot convert 'double' to 'B' in initialization\" \"\" { target c++14_down } }\n+    ;\t\t\t// { dg-error \"narrowing conversion of '4.0e.0' from 'double' to 'short int' inside\" \"\" { target c++1z } .-1 }\n+  J c3 { 8L };\t\t// { dg-error \"cannot convert 'long int' to 'C' in initialization\" \"\" { target c++14_down } }\n+  I b4 {short (c + 5)};\t// { dg-error \"invalid conversion from 'short int' to 'B'\" \"\" { target c++14_down } }\n+  I b5 {c + 5};\t\t// { dg-error \"invalid conversion from 'int' to 'B'\" \"\" { target c++14_down } }\n+\t\t\t// { dg-error \"narrowing conversion of \\[^\\n\\r]* from 'int' to 'short int' inside\" \"\" { target c++1z } .-1 }\n+  J c4 { ll };\t\t// { dg-error \"cannot convert 'long long int' to 'C' in initialization\" \"\" { target c++14_down } }\n+\t\t\t// { dg-error \"narrowing conversion of 'll' from 'long long int' to 'int' inside\" \"\" { target c++1z } .-1 }\n+  J c5 {short (c + 5)};\t// { dg-error \"cannot convert 'short int' to 'C' in initialization\" \"\" { target c++14_down } }\n+  J c6 {c + 5};\t\t// { dg-error \"cannot convert 'int' to 'C' in initialization\" \"\" { target c++14_down } }\n+}\n+\n+template <typename L>\n+struct U3\n+{\n+  U3 () : e { 5 } {}\t// { dg-error \"cannot convert \\[^\\n\\r]* to 'E' in initialization\" \"\" { target c++14_down } }\n+  U3 (int) : e { 5.0 } {}// { dg-error \"cannot convert \\[^\\n\\r]* to 'E' in initialization\" \"\" { target c++14_down } }\n+\t\t\t// { dg-error \"narrowing conversion of '5.0e.0' from 'double' to 'unsigned char' inside\" \"\" { target c++1z } .-1 }\n+  U3 (float) : e({ 6 }) {}\n+  L e;\n+};\n+\n+template <typename H, typename I, typename J, typename K>\n+struct W3\n+{\n+  H a { 5 };\t\t// { dg-error \"invalid conversion from 'int' to 'A'\" \"\" { target *-*-* } .-2 }\n+  I b { 6 };\t\t// { dg-error \"invalid conversion from 'int' to 'B'\" \"\" { target c++14_down } .-3 }\n+  J c { 3.0f };\t\t// { dg-error \"cannot convert \\[^\\n\\r]* to 'C' in initialization\" \"\" { target c++14_down } .-4 }\n+\t\t\t// { dg-error \"narrowing conversion of '3.0e.0f' from 'float' to 'int' inside\" \"\" { target c++1z } .-5 }\n+  K d = { 7 };\t\t// { dg-error \"cannot convert \\[^\\n\\r]* to 'D' in initialization\" \"\" { target *-*-* } .-6 }\n+};\n+\n+void\n+test ()\n+{\n+  foo2<0> ();\n+  U2<0> u20;\n+  U2<1> u21 (5);\n+  W2<0> w2;\t\t// { dg-error \"invalid conversion from 'int' to 'A'\" }\n+\t\t\t// { dg-error \"invalid conversion from 'int' to 'B'\" \"\" { target c++14_down } .-1 }\n+\t\t\t// { dg-error \"cannot convert \\[^\\n\\r]* to 'C' in initialization\" \"\" { target c++14_down } .-2 }\n+\t\t\t// { dg-error \"narrowing conversion of '3.0e.0f' from 'float' to 'int' inside\" \"\" { target c++1z } .-3 }\n+\t\t\t// { dg-error \"cannot convert \\[^\\n\\r]* to 'D' in initialization\" \"\" { target *-*-* } .-4 }\n+  foo3<A, B, C, D, E, V> ();\n+  U3<E> u30;\n+  U3<E> u31 (5);\n+  W3<A, B, C, D> w3;\t// { dg-error \"invalid conversion from 'int' to 'A'\" }\n+\t\t\t// { dg-error \"invalid conversion from 'int' to 'B'\" \"\" { target c++14_down } .-1 }\n+\t\t\t// { dg-error \"cannot convert \\[^\\n\\r]* to 'C' in initialization\" \"\" { target c++14_down } .-2 }\n+\t\t\t// { dg-error \"narrowing conversion of '3.0e.0f' from 'float' to 'int' inside\" \"\" { target c++1z } .-3 }\n+\t\t\t// { dg-error \"cannot convert \\[^\\n\\r]* to 'D' in initialization\" \"\" { target *-*-* } .-4 }\n+}"}]}