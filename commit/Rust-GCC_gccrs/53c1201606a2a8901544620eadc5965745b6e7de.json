{"sha": "53c1201606a2a8901544620eadc5965745b6e7de", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTNjMTIwMTYwNmEyYTg5MDE1NDQ2MjBlYWRjNTk2NTc0NWI2ZTdkZQ==", "commit": {"author": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2015-07-20T17:25:24Z"}, "committer": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2015-07-20T17:25:24Z"}, "message": "compiler: Create dummy labels for blank labels.\n\n    \n    Fixes golang/go#11591.\n    \n    Reviewed-on: https://go-review.googlesource.com/12043\n\nFrom-SVN: r226009", "tree": {"sha": "f61bfa24d2e41f00fe94d06ba1dc5377170b7d29", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f61bfa24d2e41f00fe94d06ba1dc5377170b7d29"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/53c1201606a2a8901544620eadc5965745b6e7de", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/53c1201606a2a8901544620eadc5965745b6e7de", "html_url": "https://github.com/Rust-GCC/gccrs/commit/53c1201606a2a8901544620eadc5965745b6e7de", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/53c1201606a2a8901544620eadc5965745b6e7de/comments", "author": null, "committer": null, "parents": [{"sha": "57c7a33b979a475f38bb3c107016a06bf09f2ebf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/57c7a33b979a475f38bb3c107016a06bf09f2ebf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/57c7a33b979a475f38bb3c107016a06bf09f2ebf"}], "stats": {"total": 32, "additions": 26, "deletions": 6}, "files": [{"sha": "463b2036f11ccf80d3cc27bfc994b982cb436e1e", "filename": "gcc/go/gofrontend/MERGE", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/53c1201606a2a8901544620eadc5965745b6e7de/gcc%2Fgo%2Fgofrontend%2FMERGE", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/53c1201606a2a8901544620eadc5965745b6e7de/gcc%2Fgo%2Fgofrontend%2FMERGE", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgo%2Fgofrontend%2FMERGE?ref=53c1201606a2a8901544620eadc5965745b6e7de", "patch": "@@ -1,4 +1,4 @@\n-19ff97ed3eb07d902bc4b3f97b21c4b6df834ad2\n+5c49a77455f52ba2c7eddb5b831456dc1c67b02f\n \n The first line of this file holds the git revision number of the last\n merge done from the gofrontend repository."}, {"sha": "d521fb1e2b79549216ec8549596d0a2b2fb6f11a", "filename": "gcc/go/gofrontend/gogo.cc", "status": "modified", "additions": 21, "deletions": 5, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/53c1201606a2a8901544620eadc5965745b6e7de/gcc%2Fgo%2Fgofrontend%2Fgogo.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/53c1201606a2a8901544620eadc5965745b6e7de/gcc%2Fgo%2Fgofrontend%2Fgogo.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgo%2Fgofrontend%2Fgogo.cc?ref=53c1201606a2a8901544620eadc5965745b6e7de", "patch": "@@ -1937,10 +1937,6 @@ Label*\n Gogo::add_label_definition(const std::string& label_name,\n \t\t\t   Location location)\n {\n-  // A label with a blank identifier is never declared or defined.\n-  if (label_name == \"_\")\n-    return NULL;\n-\n   go_assert(!this->functions_.empty());\n   Function* func = this->functions_.back().function->func_value();\n   Label* label = func->add_label_definition(this, label_name, location);\n@@ -4724,7 +4720,13 @@ Function::add_label_definition(Gogo* gogo, const std::string& label_name,\n   std::pair<Labels::iterator, bool> ins =\n     this->labels_.insert(std::make_pair(label_name, lnull));\n   Label* label;\n-  if (ins.second)\n+  if (label_name == \"_\")\n+    {\n+      label = Label::create_dummy_label();\n+      if (ins.second)\n+\tins.first->second = label;\n+    }\n+  else if (ins.second)\n     {\n       // This is a new label.\n       label = new Label(label_name);\n@@ -7625,6 +7627,20 @@ Label::get_addr(Translate_context* context, Location location)\n   return context->backend()->label_address(label, location);\n }\n \n+// Return the dummy label that represents any instance of the blank label.\n+\n+Label*\n+Label::create_dummy_label()\n+{\n+  static Label* dummy_label;\n+  if (dummy_label == NULL)\n+    {\n+      dummy_label = new Label(\"_\");\n+      dummy_label->set_is_used();\n+    }\n+  return dummy_label;\n+}\n+\n // Class Unnamed_label.\n \n // Get the backend representation for an unnamed label."}, {"sha": "51f628fa3b201242004cc2118ede0ffae317cb99", "filename": "gcc/go/gofrontend/gogo.h", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/53c1201606a2a8901544620eadc5965745b6e7de/gcc%2Fgo%2Fgofrontend%2Fgogo.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/53c1201606a2a8901544620eadc5965745b6e7de/gcc%2Fgo%2Fgofrontend%2Fgogo.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgo%2Fgofrontend%2Fgogo.h?ref=53c1201606a2a8901544620eadc5965745b6e7de", "patch": "@@ -2688,6 +2688,10 @@ class Label\n   Bexpression*\n   get_addr(Translate_context*, Location location);\n \n+  // Return a dummy label, representing any instance of the blank label.\n+  static Label*\n+  create_dummy_label();\n+\n  private:\n   // The name of the label.\n   std::string name_;"}]}