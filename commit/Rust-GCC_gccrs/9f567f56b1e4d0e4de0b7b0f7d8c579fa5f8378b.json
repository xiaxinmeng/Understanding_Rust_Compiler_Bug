{"sha": "9f567f56b1e4d0e4de0b7b0f7d8c579fa5f8378b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OWY1NjdmNTZiMWU0ZDBlNGRlMGI3YjBmN2Q4YzU3OWZhNWY4Mzc4Yg==", "commit": {"author": {"name": "John Wehle", "email": "john@feith.com", "date": "1999-04-02T11:01:25Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "1999-04-02T11:01:25Z"}, "message": "i386.md (movsf+1, [...]): Update constraints so that SECONDARY_MEMORY_RELOAD is used.\n\n        * i386.md (movsf+1, movdf+1, movxf+1): Update constraints\n        so that SECONDARY_MEMORY_RELOAD is used.  Remove dead code.\n\nFrom-SVN: r26121", "tree": {"sha": "7b693aee28126a6946b63008e941ac21df055fc9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7b693aee28126a6946b63008e941ac21df055fc9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9f567f56b1e4d0e4de0b7b0f7d8c579fa5f8378b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9f567f56b1e4d0e4de0b7b0f7d8c579fa5f8378b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9f567f56b1e4d0e4de0b7b0f7d8c579fa5f8378b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9f567f56b1e4d0e4de0b7b0f7d8c579fa5f8378b/comments", "author": {"login": "jlwehle", "id": 46985578, "node_id": "MDQ6VXNlcjQ2OTg1NTc4", "avatar_url": "https://avatars.githubusercontent.com/u/46985578?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jlwehle", "html_url": "https://github.com/jlwehle", "followers_url": "https://api.github.com/users/jlwehle/followers", "following_url": "https://api.github.com/users/jlwehle/following{/other_user}", "gists_url": "https://api.github.com/users/jlwehle/gists{/gist_id}", "starred_url": "https://api.github.com/users/jlwehle/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jlwehle/subscriptions", "organizations_url": "https://api.github.com/users/jlwehle/orgs", "repos_url": "https://api.github.com/users/jlwehle/repos", "events_url": "https://api.github.com/users/jlwehle/events{/privacy}", "received_events_url": "https://api.github.com/users/jlwehle/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "c095d84a8d7d07fa12425901cacc7e0ec031d913", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c095d84a8d7d07fa12425901cacc7e0ec031d913", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c095d84a8d7d07fa12425901cacc7e0ec031d913"}], "stats": {"total": 59, "additions": 11, "deletions": 48}, "files": [{"sha": "f973ef2a346606e8a477c0c70d146f407a03d8ed", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9f567f56b1e4d0e4de0b7b0f7d8c579fa5f8378b/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9f567f56b1e4d0e4de0b7b0f7d8c579fa5f8378b/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=9f567f56b1e4d0e4de0b7b0f7d8c579fa5f8378b", "patch": "@@ -1,3 +1,8 @@\n+Fri Apr  2 11:53:37 1999  John Wehle  (john@feith.com)\n+\n+\t* i386.md (movsf+1, movdf+1, movxf+1): Update constraints\n+\tso that SECONDARY_MEMORY_RELOAD is used.  Remove dead code.\n+\n 1999-04-02  Bruce Korb <ddsinc09@ix.netcom.com>\n \n \t* fixinc/mkfixinc.sh:  added support for x86-interix"}, {"sha": "6aaa528975e0b4b9d5700c8e4a177f9f9430141d", "filename": "gcc/config/i386/i386.md", "status": "modified", "additions": 6, "deletions": 48, "changes": 54, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9f567f56b1e4d0e4de0b7b0f7d8c579fa5f8378b/gcc%2Fconfig%2Fi386%2Fi386.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9f567f56b1e4d0e4de0b7b0f7d8c579fa5f8378b/gcc%2Fconfig%2Fi386%2Fi386.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.md?ref=9f567f56b1e4d0e4de0b7b0f7d8c579fa5f8378b", "patch": "@@ -1401,8 +1401,8 @@\n \n ;; For the purposes of regclass, prefer FLOAT_REGS.\n (define_insn \"\"\n-  [(set (match_operand:SF 0 \"nonimmediate_operand\" \"=*rfm,*rf,f,!*rm\")\n-\t(match_operand:SF 1 \"general_operand\" \"*rf,*rfm,fG,fF\"))]\n+  [(set (match_operand:SF 0 \"nonimmediate_operand\" \"=f,m,!*r,!m\")\n+\t(match_operand:SF 1 \"general_operand\" \"fmG,f,*rmF,*rF\"))]\n   \"(!TARGET_MOVE || GET_CODE (operands[0]) != MEM) || (GET_CODE (operands[1]) != MEM)\"\n   \"*\n {\n@@ -1418,20 +1418,6 @@\n         return AS1 (fld,%y0);\n     }\n \n-  /* Handle a transfer between the 387 and a 386 register */\n-\n-  if (STACK_TOP_P (operands[0]) && NON_STACK_REG_P (operands[1]))\n-    {\n-      output_op_from_reg (operands[1], AS1 (fld%z0,%y1));\n-      RET;\n-    }\n-\n-  if (STACK_TOP_P (operands[1]) && NON_STACK_REG_P (operands[0]))\n-    {\n-      output_to_reg (operands[0], stack_top_dies, 0);\n-      RET;\n-    }\n-\n   /* Handle other kinds of writes from the 387 */\n \n   if (STACK_TOP_P (operands[1]))\n@@ -1538,8 +1524,8 @@\n \n ;; For the purposes of regclass, prefer FLOAT_REGS.\n (define_insn \"\"\n-  [(set (match_operand:DF 0 \"nonimmediate_operand\" \"=f,fm,!*rf,!*rm\")\n-\t(match_operand:DF 1 \"general_operand\" \"fmG,f,*rfm,*rfF\"))]\n+  [(set (match_operand:DF 0 \"nonimmediate_operand\" \"=f,m,!*r,!o\")\n+\t(match_operand:DF 1 \"general_operand\" \"fmG,f,*roF,*rF\"))]\n   \"(!TARGET_MOVE || GET_CODE (operands[0]) != MEM)\n    || (GET_CODE (operands[1]) != MEM)\"\n   \"*\n@@ -1556,20 +1542,6 @@\n         return AS1 (fld,%y0);\n     }\n \n-  /* Handle a transfer between the 387 and a 386 register */\n-\n-  if (STACK_TOP_P (operands[0]) && NON_STACK_REG_P (operands[1]))\n-    {\n-      output_op_from_reg (operands[1], AS1 (fld%z0,%y1));\n-      RET;\n-    }\n-\n-  if (STACK_TOP_P (operands[1]) && NON_STACK_REG_P (operands[0]))\n-    {\n-      output_to_reg (operands[0], stack_top_dies, 0);\n-      RET;\n-    }\n-\n   /* Handle other kinds of writes from the 387 */\n \n   if (STACK_TOP_P (operands[1]))\n@@ -1675,8 +1647,8 @@\n \n \n (define_insn \"\"\n-  [(set (match_operand:XF 0 \"nonimmediate_operand\" \"=f,fm,!*rf,!*rm\")\n-\t(match_operand:XF 1 \"general_operand\" \"fmG,f,*rfm,*rfF\"))]\n+  [(set (match_operand:XF 0 \"nonimmediate_operand\" \"=f,m,!*r,!o\")\n+\t(match_operand:XF 1 \"general_operand\" \"fmG,f,*roF,*rF\"))]\n   \"(!TARGET_MOVE || GET_CODE (operands[0]) != MEM)\n    || (GET_CODE (operands[1]) != MEM)\"\n   \"*\n@@ -1693,20 +1665,6 @@\n         return AS1 (fld,%y0);\n     }\n \n-  /* Handle a transfer between the 387 and a 386 register */\n-\n-  if (STACK_TOP_P (operands[0]) && NON_STACK_REG_P (operands[1]))\n-    {\n-      output_op_from_reg (operands[1], AS1 (fld%z0,%y1));\n-      RET;\n-    }\n-\n-  if (STACK_TOP_P (operands[1]) && NON_STACK_REG_P (operands[0]))\n-    {\n-      output_to_reg (operands[0], stack_top_dies, 0);\n-      RET;\n-    }\n-\n   /* Handle other kinds of writes from the 387 */\n \n   if (STACK_TOP_P (operands[1]))"}]}