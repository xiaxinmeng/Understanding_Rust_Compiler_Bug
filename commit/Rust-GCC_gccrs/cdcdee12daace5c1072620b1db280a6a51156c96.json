{"sha": "cdcdee12daace5c1072620b1db280a6a51156c96", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2RjZGVlMTJkYWFjZTVjMTA3MjYyMGIxZGIyODBhNmE1MTE1NmM5Ng==", "commit": {"author": {"name": "Paolo Carlini", "email": "pcarlini@suse.de", "date": "2005-07-20T22:07:57Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2005-07-20T22:07:57Z"}, "message": "streambuf.tcc (xsgetn, xsputn): Use streamsize instead of size_t.\n\n2005-07-20  Paolo Carlini  <pcarlini@suse.de>\n\n\t* include/bits/streambuf.tcc (xsgetn, xsputn): Use streamsize\n\tinstead of size_t.\n\t* src/streambuf.cc (__copy_streambufs): Likewise.\n\nFrom-SVN: r102204", "tree": {"sha": "45bdedf211ca29ab9b267fe198cce41c1f494d79", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/45bdedf211ca29ab9b267fe198cce41c1f494d79"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/cdcdee12daace5c1072620b1db280a6a51156c96", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cdcdee12daace5c1072620b1db280a6a51156c96", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cdcdee12daace5c1072620b1db280a6a51156c96", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cdcdee12daace5c1072620b1db280a6a51156c96/comments", "author": null, "committer": null, "parents": [{"sha": "71b50543a7624e54ac80d439d31b6667ce01500b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/71b50543a7624e54ac80d439d31b6667ce01500b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/71b50543a7624e54ac80d439d31b6667ce01500b"}], "stats": {"total": 30, "additions": 18, "deletions": 12}, "files": [{"sha": "810bc4ccb6f64be1c5d0aff4adbc054b27a7ebbf", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cdcdee12daace5c1072620b1db280a6a51156c96/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cdcdee12daace5c1072620b1db280a6a51156c96/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=cdcdee12daace5c1072620b1db280a6a51156c96", "patch": "@@ -1,3 +1,9 @@\n+2005-07-20  Paolo Carlini  <pcarlini@suse.de>\n+\n+\t* include/bits/streambuf.tcc (xsgetn, xsputn): Use streamsize\n+\tinstead of size_t.\n+\t* src/streambuf.cc (__copy_streambufs): Likewise.\n+\n 2005-07-18  Paolo Carlini  <pcarlini@suse.de>\n \n \t* config/locale/gnu/ctype_members.cc (do_is(mask, wchar_t)):"}, {"sha": "f7b9cff89dd7ab86fdc246e34bac2214bc06897c", "filename": "libstdc++-v3/include/bits/streambuf.tcc", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cdcdee12daace5c1072620b1db280a6a51156c96/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstreambuf.tcc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cdcdee12daace5c1072620b1db280a6a51156c96/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstreambuf.tcc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstreambuf.tcc?ref=cdcdee12daace5c1072620b1db280a6a51156c96", "patch": "@@ -1,6 +1,6 @@\n // Stream buffer classes -*- C++ -*-\n \n-// Copyright (C) 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004\n+// Copyright (C) 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005\n // Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n@@ -52,11 +52,11 @@ namespace std\n       streamsize __ret = 0;\n       while (__ret < __n)\n \t{\n-\t  const size_t __buf_len = this->egptr() - this->gptr();\n+\t  const streamsize __buf_len = this->egptr() - this->gptr();\n \t  if (__buf_len)\n \t    {\n-\t      const size_t __remaining = __n - __ret;\n-\t      const size_t __len = std::min(__buf_len, __remaining);\n+\t      const streamsize __remaining = __n - __ret;\n+\t      const streamsize __len = std::min(__buf_len, __remaining);\n \t      traits_type::copy(__s, this->gptr(), __len);\n \t      __ret += __len;\n \t      __s += __len;\n@@ -86,11 +86,11 @@ namespace std\n       streamsize __ret = 0;\n       while (__ret < __n)\n \t{\n-\t  const size_t __buf_len = this->epptr() - this->pptr();\n+\t  const streamsize __buf_len = this->epptr() - this->pptr();\n \t  if (__buf_len)\n \t    {\n-\t      const size_t __remaining = __n - __ret;\n-\t      const size_t __len = std::min(__buf_len, __remaining);\n+\t      const streamsize __remaining = __n - __ret;\n+\t      const streamsize __len = std::min(__buf_len, __remaining);\n \t      traits_type::copy(this->pptr(), __s, __len);\n \t      __ret += __len;\n \t      __s += __len;"}, {"sha": "7badf94a0d233543d59c45d83a3d7ce70f6c7be6", "filename": "libstdc++-v3/src/streambuf.cc", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cdcdee12daace5c1072620b1db280a6a51156c96/libstdc%2B%2B-v3%2Fsrc%2Fstreambuf.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cdcdee12daace5c1072620b1db280a6a51156c96/libstdc%2B%2B-v3%2Fsrc%2Fstreambuf.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fsrc%2Fstreambuf.cc?ref=cdcdee12daace5c1072620b1db280a6a51156c96", "patch": "@@ -1,6 +1,6 @@\n // Stream buffer classes -*- C++ -*-\n \n-// Copyright (C) 2004 Free Software Foundation, Inc.\n+// Copyright (C) 2004, 2005 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -45,10 +45,10 @@ namespace std\n       traits_type::int_type __c = __sbin->sgetc();\n       while (!traits_type::eq_int_type(__c, traits_type::eof()))\n \t{\n-\t  const size_t __n = __sbin->egptr() - __sbin->gptr();\n+\t  const streamsize __n = __sbin->egptr() - __sbin->gptr();\n \t  if (__n > 1)\n \t    {\n-\t      const size_t __wrote = __sbout->sputn(__sbin->gptr(), __n);\n+\t      const streamsize __wrote = __sbout->sputn(__sbin->gptr(), __n);\n \t      __sbin->gbump(__wrote);\n \t      __ret += __wrote;\n \t      if (__wrote < __n)\n@@ -78,10 +78,10 @@ namespace std\n       traits_type::int_type __c = __sbin->sgetc();\n       while (!traits_type::eq_int_type(__c, traits_type::eof()))\n \t{\n-\t  const size_t __n = __sbin->egptr() - __sbin->gptr();\n+\t  const streamsize __n = __sbin->egptr() - __sbin->gptr();\n \t  if (__n > 1)\n \t    {\n-\t      const size_t __wrote = __sbout->sputn(__sbin->gptr(), __n);\n+\t      const streamsize __wrote = __sbout->sputn(__sbin->gptr(), __n);\n \t      __sbin->gbump(__wrote);\n \t      __ret += __wrote;\n \t      if (__wrote < __n)"}]}