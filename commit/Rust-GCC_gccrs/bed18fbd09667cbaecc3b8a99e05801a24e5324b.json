{"sha": "bed18fbd09667cbaecc3b8a99e05801a24e5324b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmVkMThmYmQwOTY2N2NiYWVjYzNiOGE5OWUwNTgwMWEyNGU1MzI0Yg==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2015-03-31T09:34:08Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2015-03-31T09:34:08Z"}, "message": "re PR c++/65626 (ICE in fixup_noreturn_call called by tree-ssa-forwprop.c:2492)\n\n2015-03-31  Richard Biener  <rguenther@suse.de>\n\n\tPR middle-end/65626\n\t* tree-cfgcleanup.c (fixup_noreturn_call): Only split the block\n\tof the noreturn call so it is last and cleanup_control_flow_bb\n\tcan do the CFG part.\n\n\t* g++.dg/torture/pr65626.C: New testcase.\n\nFrom-SVN: r221790", "tree": {"sha": "dc7fac5fb06b3487d74ab50ff205bb9f9b3b5bc5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/dc7fac5fb06b3487d74ab50ff205bb9f9b3b5bc5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/bed18fbd09667cbaecc3b8a99e05801a24e5324b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bed18fbd09667cbaecc3b8a99e05801a24e5324b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bed18fbd09667cbaecc3b8a99e05801a24e5324b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bed18fbd09667cbaecc3b8a99e05801a24e5324b/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "20f234a8d6b6bff86e9f57e66a2d3612f81e56e1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/20f234a8d6b6bff86e9f57e66a2d3612f81e56e1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/20f234a8d6b6bff86e9f57e66a2d3612f81e56e1"}], "stats": {"total": 50, "additions": 45, "deletions": 5}, "files": [{"sha": "36d83706a8de465e08d5fdf97019c1aaea4fb8a1", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bed18fbd09667cbaecc3b8a99e05801a24e5324b/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bed18fbd09667cbaecc3b8a99e05801a24e5324b/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=bed18fbd09667cbaecc3b8a99e05801a24e5324b", "patch": "@@ -1,3 +1,10 @@\n+2015-03-31  Richard Biener  <rguenther@suse.de>\n+\n+\tPR middle-end/65626\n+\t* tree-cfgcleanup.c (fixup_noreturn_call): Only split the block\n+\tof the noreturn call so it is last and cleanup_control_flow_bb\n+\tcan do the CFG part.\n+\n 2015-03-31  Ilya Enkovich  <ilya.enkovich@intel.com>\n \n \tPR target/65531"}, {"sha": "f8adda1955382c38ec4b986da31d16fd90369430", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bed18fbd09667cbaecc3b8a99e05801a24e5324b/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bed18fbd09667cbaecc3b8a99e05801a24e5324b/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=bed18fbd09667cbaecc3b8a99e05801a24e5324b", "patch": "@@ -1,3 +1,8 @@\n+2015-03-31  Richard Biener  <rguenther@suse.de>\n+\n+\tPR middle-end/65626\n+\t* g++.dg/torture/pr65626.C: New testcase.\n+\n 2015-03-31  Ilya Enkovich  <ilya.enkovich@intel.com>\n \n \tPR target/65531"}, {"sha": "ed85ba93830b56f6ae0bf22578eae67a150a9fec", "filename": "gcc/testsuite/g++.dg/torture/pr65626.C", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bed18fbd09667cbaecc3b8a99e05801a24e5324b/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftorture%2Fpr65626.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bed18fbd09667cbaecc3b8a99e05801a24e5324b/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftorture%2Fpr65626.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftorture%2Fpr65626.C?ref=bed18fbd09667cbaecc3b8a99e05801a24e5324b", "patch": "@@ -0,0 +1,19 @@\n+// { dg-do compile }\n+\n+class A {\n+      virtual unsigned long m_fn1() const;\n+        virtual int &m_fn2(unsigned long) const;\n+};\n+class C : A {\n+public:\n+      int &m_fn2(unsigned long) const;\n+        unsigned long m_fn1() const;\n+};\n+class B {\n+      void m_fn3(const A &, const int &, const C &, int &) const;\n+};\n+void B::m_fn3(const A &, const int &, const C &, int &) const {\n+      C &a(a);\n+        for (long b = 0; a.m_fn1(); b++)\n+\t      a.m_fn2(0);\n+}"}, {"sha": "26258aad1ef0da9ba58868ed2f9c56352ac23602", "filename": "gcc/tree-cfgcleanup.c", "status": "modified", "additions": 14, "deletions": 5, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bed18fbd09667cbaecc3b8a99e05801a24e5324b/gcc%2Ftree-cfgcleanup.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bed18fbd09667cbaecc3b8a99e05801a24e5324b/gcc%2Ftree-cfgcleanup.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-cfgcleanup.c?ref=bed18fbd09667cbaecc3b8a99e05801a24e5324b", "patch": "@@ -579,13 +579,15 @@ remove_forwarder_block (basic_block bb)\n   return true;\n }\n \n-/* STMT is a call that has been discovered noreturn.  Fixup the CFG\n-   and remove LHS.  Return true if something changed.  */\n+/* STMT is a call that has been discovered noreturn.  Split the\n+   block to prepare fixing up the CFG and remove LHS.\n+   Return true if cleanup-cfg needs to run.  */\n \n bool\n fixup_noreturn_call (gimple stmt)\n {\n   basic_block bb = gimple_bb (stmt);\n+  bool changed = false;\n \n   if (gimple_call_builtin_p (stmt, BUILT_IN_RETURN))\n     return false;\n@@ -604,7 +606,10 @@ fixup_noreturn_call (gimple stmt)\n \t    gsi_remove (&gsi, true);\n \t}\n       else\n-\tsplit_block (bb, stmt);\n+\t{\n+\t  split_block (bb, stmt);\n+\t  changed = true;\n+\t}\n     }\n \n   /* If there is an LHS, remove it.  */\n@@ -626,9 +631,13 @@ fixup_noreturn_call (gimple stmt)\n     }\n \n   /* Mark the call as altering control flow.  */\n-  gimple_call_set_ctrl_altering (stmt, true);\n+  if (!gimple_call_ctrl_altering_p (stmt))\n+    {\n+      gimple_call_set_ctrl_altering (stmt, true);\n+      changed = true;\n+    }\n \n-  return remove_fallthru_edge (bb->succs);\n+  return changed;\n }\n \n "}]}