{"sha": "91afcbfd3e01c23efbfb2685fa2ece8bd6b218b8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTFhZmNiZmQzZTAxYzIzZWZiZmIyNjg1ZmEyZWNlOGJkNmIyMThiOA==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2015-01-06T09:07:29Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2015-01-06T09:07:29Z"}, "message": "[multiple changes]\n\n2015-01-06  Arnaud Charlet  <charlet@adacore.com>\n\n\t* a-reatim.adb (\"/\"): Add explicit pragma Unsuppress (Division_Check).\n\n2015-01-06  Robert Dewar  <dewar@adacore.com>\n\n\t* sem_prag.adb (Process_Suppress_Unsuppress): Add extra warning\n\tfor ignoring pragma Suppress (Elaboration_Check) in SPARK mode.\n\n2015-01-06  Javier Miranda  <miranda@adacore.com>\n\n\t* exp_disp.adb (Expand_Interface_Conversion): No displacement\n\tof the pointer to the object needed when the type of the operand\n\tis not an interface type and the interface is one of its parent\n\ttypes (since they share the primary dispatch table).\n\nFrom-SVN: r219227", "tree": {"sha": "5dce348cded3095c59dba0d58ecf59d4cdecbc31", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5dce348cded3095c59dba0d58ecf59d4cdecbc31"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/91afcbfd3e01c23efbfb2685fa2ece8bd6b218b8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/91afcbfd3e01c23efbfb2685fa2ece8bd6b218b8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/91afcbfd3e01c23efbfb2685fa2ece8bd6b218b8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/91afcbfd3e01c23efbfb2685fa2ece8bd6b218b8/comments", "author": null, "committer": null, "parents": [{"sha": "966fc9c554d6579316ea3cdebce09e0e095812c9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/966fc9c554d6579316ea3cdebce09e0e095812c9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/966fc9c554d6579316ea3cdebce09e0e095812c9"}], "stats": {"total": 48, "additions": 41, "deletions": 7}, "files": [{"sha": "64c02b3b572f2022b441758b07aa56d338afd5c4", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/91afcbfd3e01c23efbfb2685fa2ece8bd6b218b8/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/91afcbfd3e01c23efbfb2685fa2ece8bd6b218b8/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=91afcbfd3e01c23efbfb2685fa2ece8bd6b218b8", "patch": "@@ -1,3 +1,19 @@\n+2015-01-06  Arnaud Charlet  <charlet@adacore.com>\n+\n+\t* a-reatim.adb (\"/\"): Add explicit pragma Unsuppress (Division_Check).\n+\n+2015-01-06  Robert Dewar  <dewar@adacore.com>\n+\n+\t* sem_prag.adb (Process_Suppress_Unsuppress): Add extra warning\n+\tfor ignoring pragma Suppress (Elaboration_Check) in SPARK mode.\n+\n+2015-01-06  Javier Miranda  <miranda@adacore.com>\n+\n+\t* exp_disp.adb (Expand_Interface_Conversion): No displacement\n+\tof the pointer to the object needed when the type of the operand\n+\tis not an interface type and the interface is one of its parent\n+\ttypes (since they share the primary dispatch table).\n+\n 2015-01-06  Vincent Celier  <celier@adacore.com>\n \n \t* prj-env.adb: Minor comment update."}, {"sha": "f59d083b03c11b3859aeda8908fd883c0cb361b6", "filename": "gcc/ada/a-reatim.adb", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/91afcbfd3e01c23efbfb2685fa2ece8bd6b218b8/gcc%2Fada%2Fa-reatim.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/91afcbfd3e01c23efbfb2685fa2ece8bd6b218b8/gcc%2Fada%2Fa-reatim.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-reatim.adb?ref=91afcbfd3e01c23efbfb2685fa2ece8bd6b218b8", "patch": "@@ -7,7 +7,7 @@\n --                                 B o d y                                  --\n --                                                                          --\n --             Copyright (C) 1991-1994, Florida State University            --\n---                     Copyright (C) 1995-2010, AdaCore                     --\n+--                     Copyright (C) 1995-2014, AdaCore                     --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -114,12 +114,14 @@ package body Ada.Real_Time is\n \n    function \"/\" (Left, Right : Time_Span) return Integer is\n       pragma Unsuppress (Overflow_Check);\n+      pragma Unsuppress (Division_Check);\n    begin\n       return Integer (Duration (Left) / Duration (Right));\n    end \"/\";\n \n    function \"/\" (Left : Time_Span; Right : Integer) return Time_Span is\n       pragma Unsuppress (Overflow_Check);\n+      pragma Unsuppress (Division_Check);\n    begin\n       return Time_Span (Duration (Left) / Right);\n    end \"/\";"}, {"sha": "302f7210b13a33f5f66619b6ace6e10c1608267c", "filename": "gcc/ada/exp_disp.adb", "status": "modified", "additions": 19, "deletions": 5, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/91afcbfd3e01c23efbfb2685fa2ece8bd6b218b8/gcc%2Fada%2Fexp_disp.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/91afcbfd3e01c23efbfb2685fa2ece8bd6b218b8/gcc%2Fada%2Fexp_disp.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_disp.adb?ref=91afcbfd3e01c23efbfb2685fa2ece8bd6b218b8", "patch": "@@ -1138,6 +1138,25 @@ package body Exp_Disp is\n          Operand_Typ := Base_Type (Corresponding_Record_Type (Operand_Typ));\n       end if;\n \n+      --  No displacement of the pointer to the object needed when the type of\n+      --  the operand is not an interface type and the interface is one of\n+      --  its parent types (since they share the primary dispatch table).\n+\n+      declare\n+         Opnd : Entity_Id := Operand_Typ;\n+\n+      begin\n+         if Is_Access_Type (Opnd) then\n+            Opnd := Designated_Type (Opnd);\n+         end if;\n+\n+         if not Is_Interface (Opnd)\n+           and then Is_Ancestor (Iface_Typ, Opnd, Use_Full_View => True)\n+         then\n+            return;\n+         end if;\n+      end;\n+\n       --  Evaluate if we can statically displace the pointer to the object\n \n       declare\n@@ -1177,11 +1196,6 @@ package body Exp_Disp is\n                        Prefix         => New_Occurrence_Of (Iface_Typ, Loc),\n                        Attribute_Name => Name_Tag))));\n             end if;\n-\n-            --  Just do a conversion ???\n-\n-            Rewrite (N, Unchecked_Convert_To (Etype (N), N));\n-            Analyze (N);\n          end if;\n \n          return;"}, {"sha": "207f4ba20eb5ff734fc6388abaffc64cd9e79a0a", "filename": "gcc/ada/sem_prag.adb", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/91afcbfd3e01c23efbfb2685fa2ece8bd6b218b8/gcc%2Fada%2Fsem_prag.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/91afcbfd3e01c23efbfb2685fa2ece8bd6b218b8/gcc%2Fada%2Fsem_prag.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_prag.adb?ref=91afcbfd3e01c23efbfb2685fa2ece8bd6b218b8", "patch": "@@ -9050,7 +9050,9 @@ package body Sem_Prag is\n \n          if C = Elaboration_Check and then SPARK_Mode = On then\n             Error_Pragma_Arg\n-              (\"Suppress of Elaboration_Check ignored in SPARK??\", Arg1);\n+              (\"Suppress of Elaboration_Check ignored in SPARK??\",\n+               \"\\elaboration checking rules are statically enforced \"\n+               & \"(SPARK RM 7.7)\", Arg1);\n          end if;\n \n          --  One-argument case"}]}