{"sha": "1536b6ab5405e87b082c305321f382345d20f604", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTUzNmI2YWI1NDA1ZTg3YjA4MmMzMDUzMjFmMzgyMzQ1ZDIwZjYwNA==", "commit": {"author": {"name": "Martin Jambor", "email": "mjambor@suse.cz", "date": "2010-06-09T11:20:03Z"}, "committer": {"name": "Martin Jambor", "email": "jamborm@gcc.gnu.org", "date": "2010-06-09T11:20:03Z"}, "message": "re PR tree-optimization/44423 (Massive performance regression in SSE code due to SRA)\n\n2010-06-09  Martin Jambor  <mjambor@suse.cz>\n\n\tPR tree-optimization/44423\n\t* tree-sra.c (dump_access): Dump also grp_assignment_read.\n\t(analyze_access_subtree): Pass negative allow_replacements to children\n\tif the current type is scalar.\n\n\t* testsuite/gcc.dg/tree-ssa/pr44423.c: New test.\n\nFrom-SVN: r160462", "tree": {"sha": "7211b6e8b2594dec83d408ac174c8aae3475ae20", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7211b6e8b2594dec83d408ac174c8aae3475ae20"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1536b6ab5405e87b082c305321f382345d20f604", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1536b6ab5405e87b082c305321f382345d20f604", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1536b6ab5405e87b082c305321f382345d20f604", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1536b6ab5405e87b082c305321f382345d20f604/comments", "author": {"login": "jamborm", "id": 2180070, "node_id": "MDQ6VXNlcjIxODAwNzA=", "avatar_url": "https://avatars.githubusercontent.com/u/2180070?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jamborm", "html_url": "https://github.com/jamborm", "followers_url": "https://api.github.com/users/jamborm/followers", "following_url": "https://api.github.com/users/jamborm/following{/other_user}", "gists_url": "https://api.github.com/users/jamborm/gists{/gist_id}", "starred_url": "https://api.github.com/users/jamborm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jamborm/subscriptions", "organizations_url": "https://api.github.com/users/jamborm/orgs", "repos_url": "https://api.github.com/users/jamborm/repos", "events_url": "https://api.github.com/users/jamborm/events{/privacy}", "received_events_url": "https://api.github.com/users/jamborm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "2d7f5f9b5f54aae8eaaaa6e430422ecbbfe91f4d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2d7f5f9b5f54aae8eaaaa6e430422ecbbfe91f4d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2d7f5f9b5f54aae8eaaaa6e430422ecbbfe91f4d"}], "stats": {"total": 66, "additions": 63, "deletions": 3}, "files": [{"sha": "a66edd0bc0cf39dfb8fdfdf8fcbec1cd6747de85", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1536b6ab5405e87b082c305321f382345d20f604/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1536b6ab5405e87b082c305321f382345d20f604/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=1536b6ab5405e87b082c305321f382345d20f604", "patch": "@@ -1,3 +1,10 @@\n+2010-06-09  Martin Jambor  <mjambor@suse.cz>\n+\n+\tPR tree-optimization/44423\n+\t* tree-sra.c (dump_access): Dump also grp_assignment_read.\n+\t(analyze_access_subtree): Pass negative allow_replacements to children\n+\tif the current type is scalar.\n+\n 2010-06-09  Joern Rennecke  <amylaar@spamcop.net>\n \n \tPR testsuite/42843"}, {"sha": "6d4b6f19a00a3d9328b76be55be9e716a37a4974", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1536b6ab5405e87b082c305321f382345d20f604/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1536b6ab5405e87b082c305321f382345d20f604/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=1536b6ab5405e87b082c305321f382345d20f604", "patch": "@@ -1,3 +1,8 @@\n+2010-06-09  Martin Jambor  <mjambor@suse.cz>\n+\n+\tPR tree-optimization/44423\n+\t* gcc.dg/tree-ssa/pr44423.c: New test.\n+\n 2010-06-09  Joern Rennecke  <amylaar@spamcop.net>\n \n \tPR testsuite/42843"}, {"sha": "6232d64963ade4629e98425ec5e13940a37ba17f", "filename": "gcc/testsuite/gcc.dg/tree-ssa/pr44423.c", "status": "added", "additions": 47, "deletions": 0, "changes": 47, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1536b6ab5405e87b082c305321f382345d20f604/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr44423.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1536b6ab5405e87b082c305321f382345d20f604/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr44423.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr44423.c?ref=1536b6ab5405e87b082c305321f382345d20f604", "patch": "@@ -0,0 +1,47 @@\n+/* { dg-do compile { target x86_64-*-* } } */\n+/* { dg-options \"-O2 -fdump-tree-esra-details\" } */\n+\n+#include \"xmmintrin.h\"\n+\n+typedef __m128 v4sf; // vector of 4 floats (SSE1)\n+\n+#define ARRSZ 1024\n+\n+typedef union {\n+  float f[4];\n+  v4sf  v;\n+} V4SF;\n+\n+struct COLOUR {\n+  float r,g,b;\n+};\n+\n+void func (float *pre1, float pre2, struct COLOUR *a, V4SF *lpic)\n+  {\n+  V4SF va;\n+  int y;\n+  va.f[0]=a->r;va.f[1]=a->g;va.f[2]=a->b;va.f[3]=0.f;\n+  for (y=0; y<20; ++y)\n+    {\n+    float att = pre1[y]*pre2;\n+    v4sf tmpatt=_mm_load1_ps(&att);\n+    tmpatt=_mm_mul_ps(tmpatt,va.v);\n+    lpic[y].v=_mm_add_ps(tmpatt,lpic[y].v);\n+    }\n+  }\n+\n+int main()\n+  {\n+  V4SF lpic[ARRSZ];\n+  float pre1[ARRSZ];\n+  int i;\n+  struct COLOUR col={0.,2.,4.};\n+  for (i=0; i<20; ++i)\n+    pre1[i]=0.4;\n+  for (i=0;i<10000000;++i)\n+    func(&pre1[0],0.3,&col,&lpic[0]);\n+  return 0;\n+  }\n+\n+/* { dg-final { scan-tree-dump-times \"Created a replacement\" 0 \"esra\"} } */\n+/* { dg-final { cleanup-tree-dump \"esra\" } } */"}, {"sha": "5387a196930abea84eb7082a8280df48645bc0e8", "filename": "gcc/tree-sra.c", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1536b6ab5405e87b082c305321f382345d20f604/gcc%2Ftree-sra.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1536b6ab5405e87b082c305321f382345d20f604/gcc%2Ftree-sra.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-sra.c?ref=1536b6ab5405e87b082c305321f382345d20f604", "patch": "@@ -356,13 +356,13 @@ dump_access (FILE *f, struct access *access, bool grp)\n   print_generic_expr (f, access->type, 0);\n   if (grp)\n     fprintf (f, \", grp_write = %d, total_scalarization = %d, \"\n-\t     \"grp_read = %d, grp_hint = %d, \"\n+\t     \"grp_read = %d, grp_hint = %d, grp_assignment_read = %d,\"\n \t     \"grp_covered = %d, grp_unscalarizable_region = %d, \"\n \t     \"grp_unscalarized_data = %d, grp_partial_lhs = %d, \"\n \t     \"grp_to_be_replaced = %d, grp_maybe_modified = %d, \"\n \t     \"grp_not_necessarilly_dereferenced = %d\\n\",\n \t     access->grp_write, access->total_scalarization,\n-\t     access->grp_read, access->grp_hint,\n+\t     access->grp_read, access->grp_hint, access->grp_assignment_read,\n \t     access->grp_covered, access->grp_unscalarizable_region,\n \t     access->grp_unscalarized_data, access->grp_partial_lhs,\n \t     access->grp_to_be_replaced, access->grp_maybe_modified,\n@@ -1791,7 +1791,8 @@ analyze_access_subtree (struct access *root, bool allow_replacements,\n       else\n \tcovered_to += child->size;\n \n-      sth_created |= analyze_access_subtree (child, allow_replacements,\n+      sth_created |= analyze_access_subtree (child,\n+\t\t\t\t\t     allow_replacements && !scalar,\n \t\t\t\t\t     mark_read, mark_write);\n \n       root->grp_unscalarized_data |= child->grp_unscalarized_data;"}]}