{"sha": "1256ed02808b685d3f08b9eff26299f124c7c97b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTI1NmVkMDI4MDhiNjg1ZDNmMDhiOWVmZjI2Mjk5ZjEyNGM3Yzk3Yg==", "commit": {"author": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "1999-06-12T02:44:18Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "1999-06-12T02:44:18Z"}, "message": "sparc.h (LEGITIMIZE_RELOAD_ADDRESS): Do nothing with operands that require PIC code sequences.\n\n`\n        * sparc.h (LEGITIMIZE_RELOAD_ADDRESS): Do nothing with operands\n        that require PIC code sequences.\n\nFrom-SVN: r27495", "tree": {"sha": "606684ba30462247c6c23b9481f32b10854c40a8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/606684ba30462247c6c23b9481f32b10854c40a8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1256ed02808b685d3f08b9eff26299f124c7c97b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1256ed02808b685d3f08b9eff26299f124c7c97b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1256ed02808b685d3f08b9eff26299f124c7c97b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1256ed02808b685d3f08b9eff26299f124c7c97b/comments", "author": null, "committer": null, "parents": [{"sha": "691f4e73d4eb5eb9bed0ecc62bc7c7a492e0b5b8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/691f4e73d4eb5eb9bed0ecc62bc7c7a492e0b5b8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/691f4e73d4eb5eb9bed0ecc62bc7c7a492e0b5b8"}], "stats": {"total": 12, "additions": 9, "deletions": 3}, "files": [{"sha": "2c1a5b506dbe3acc2fc25ff61ace27a6bc7e7f70", "filename": "gcc/config/sparc/sparc.h", "status": "modified", "additions": 9, "deletions": 3, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1256ed02808b685d3f08b9eff26299f124c7c97b/gcc%2Fconfig%2Fsparc%2Fsparc.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1256ed02808b685d3f08b9eff26299f124c7c97b/gcc%2Fconfig%2Fsparc%2Fsparc.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsparc%2Fsparc.h?ref=1256ed02808b685d3f08b9eff26299f124c7c97b", "patch": "@@ -2584,16 +2584,22 @@ extern struct rtx_def *legitimize_pic_address ();\n \n    For Sparc 32, we wish to handle addresses by splitting them into\n    HIGH+LO_SUM pairs, retaining the LO_SUM in the memory reference. \n-   This cuts the number of extra insns by one.  */\n-   \n+   This cuts the number of extra insns by one.\n+\n+   Do nothing when generating PIC code and the address is a\n+   symbolic operand or requires a scratch register.  */\n+\n #define LEGITIMIZE_RELOAD_ADDRESS(X,MODE,OPNUM,TYPE,IND_LEVELS,WIN)     \\\n do {                                                                    \\\n   /* Decompose SImode constants into hi+lo_sum.  We do have to \t\t\\\n      rerecognize what we produce, so be careful.  */\t\t\t\\\n   if (CONSTANT_P (X)\t\t\t\t\t\t\t\\\n       && (MODE != TFmode || TARGET_V9)\t\t\t\t\t\\\n       && GET_MODE (X) == SImode\t\t\t\t\t\t\\\n-      && GET_CODE (X) != LO_SUM && GET_CODE (X) != HIGH)\t\t\\\n+      && GET_CODE (X) != LO_SUM && GET_CODE (X) != HIGH\t\t\t\\\n+      && ! (flag_pic\t\t\t\t\t\t\t\\\n+\t    && (symbolic_operand (X, Pmode))\t\t\t\t\\\n+\t\t|| pic_address_needs_scratch (X)))\t\t\t\\\n     {\t\t\t\t\t\t\t\t\t\\\n       X = gen_rtx_LO_SUM (GET_MODE (X),\t\t\t\t\t\\\n \t\t\t  gen_rtx_HIGH (GET_MODE (X), X), X);\t\t\\"}]}