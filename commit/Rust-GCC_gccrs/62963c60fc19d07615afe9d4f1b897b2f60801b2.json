{"sha": "62963c60fc19d07615afe9d4f1b897b2f60801b2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjI5NjNjNjBmYzE5ZDA3NjE1YWZlOWQ0ZjFiODk3YjJmNjA4MDFiMg==", "commit": {"author": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2020-06-09T19:39:39Z"}, "committer": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2020-06-09T19:40:44Z"}, "message": "gcc-changelog: Use non-zero exit status on error\n\nAlso add comment explaining what the script does.\n\ncontrib/ChangeLog:\n\n\t* gcc-changelog/git_email.py: Set exit status on error.", "tree": {"sha": "c753fe21c5c89d16278a86a4ff3c194043b25a9d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c753fe21c5c89d16278a86a4ff3c194043b25a9d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/62963c60fc19d07615afe9d4f1b897b2f60801b2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/62963c60fc19d07615afe9d4f1b897b2f60801b2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/62963c60fc19d07615afe9d4f1b897b2f60801b2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/62963c60fc19d07615afe9d4f1b897b2f60801b2/comments", "author": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "77103685ff4b50b3c4d7ee76688bdf452acc82c7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/77103685ff4b50b3c4d7ee76688bdf452acc82c7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/77103685ff4b50b3c4d7ee76688bdf452acc82c7"}], "stats": {"total": 4, "additions": 4, "deletions": 0}, "files": [{"sha": "bf74bd8b156945f0c2ec30f66b06db0357f3833a", "filename": "contrib/gcc-changelog/git_email.py", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/62963c60fc19d07615afe9d4f1b897b2f60801b2/contrib%2Fgcc-changelog%2Fgit_email.py", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/62963c60fc19d07615afe9d4f1b897b2f60801b2/contrib%2Fgcc-changelog%2Fgit_email.py", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/contrib%2Fgcc-changelog%2Fgit_email.py?ref=62963c60fc19d07615afe9d4f1b897b2f60801b2", "patch": "@@ -70,6 +70,9 @@ def __init__(self, filename, strict=False):\n                          strict=strict)\n \n \n+# With zero arguments, process every patch file in the ./patches directory.\n+# With one argument, process the named patch file.\n+# Patch files must be in 'git format-patch' format.\n if __name__ == '__main__':\n     if len(sys.argv) == 1:\n         allfiles = []\n@@ -100,3 +103,4 @@ def __init__(self, filename, strict=False):\n             if not email.lines:\n                 print('Error: patch contains no parsed lines', file=sys.stderr)\n             email.print_errors()\n+            sys.exit(1)"}]}