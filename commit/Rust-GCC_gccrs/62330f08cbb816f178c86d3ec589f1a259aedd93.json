{"sha": "62330f08cbb816f178c86d3ec589f1a259aedd93", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjIzMzBmMDhjYmI4MTZmMTc4Yzg2ZDNlYzU4OWYxYTI1OWFlZGQ5Mw==", "commit": {"author": {"name": "Hans-Peter Nilsson", "email": "hp@axis.com", "date": "2012-06-01T05:51:07Z"}, "committer": {"name": "Hans-Peter Nilsson", "email": "hp@gcc.gnu.org", "date": "2012-06-01T05:51:07Z"}, "message": "sync-1-v10.c, [...]: New tests.\n\n\t* gcc.target/cris/sync-1-v10.c,\n\tgcc.target/cris/sync-1-v32.c, gcc.target/cris/sync-1.c,\n\tgcc.target/cris/sync-2c.c, gcc.target/cris/sync-2i.c,\n\tgcc.target/cris/sync-2s.c, gcc.target/cris/sync-3i.c,\n\tgcc.target/cris/sync-3s.c, gcc.target/cris/sync-4c.c,\n\tgcc.target/cris/sync-4i.c, gcc.target/cris/sync-4s.c,\n\tgcc.target/cris/torture/sync-mis-op-i-1.c,\n\tgcc.target/cris/torture/sync-mis-op-i-1a.c,\n\tgcc.target/cris/torture/sync-mis-op-i-2.c,\n\tgcc.target/cris/torture/sync-mis-op-i-2a.c,\n\tgcc.target/cris/torture/sync-mis-op-i-3.c,\n\tgcc.target/cris/torture/sync-mis-op-i-3a.c,\n\tgcc.target/cris/torture/sync-mis-op-s-1.c,\n\tgcc.target/cris/torture/sync-mis-op-s-1a.c,\n\tgcc.target/cris/torture/sync-mis-xchg-i-1.c,\n\tgcc.target/cris/torture/sync-mis-xchg-i-1a.c,\n\tgcc.target/cris/torture/sync-mis-xchg-i-2.c,\n\tgcc.target/cris/torture/sync-mis-xchg-i-2a.c,\n\tgcc.target/cris/torture/sync-mis-xchg-i-3.c,\n\tgcc.target/cris/torture/sync-mis-xchg-i-3a.c,\n\tgcc.target/cris/torture/sync-mis-xchg-s-1.c,\n\tgcc.target/cris/torture/sync-mis-xchg-s-1a.c: New tests.\n\nFrom-SVN: r188097", "tree": {"sha": "a25b087780f12065f62151eae5ad787f81ad509b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a25b087780f12065f62151eae5ad787f81ad509b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/62330f08cbb816f178c86d3ec589f1a259aedd93", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/62330f08cbb816f178c86d3ec589f1a259aedd93", "html_url": "https://github.com/Rust-GCC/gccrs/commit/62330f08cbb816f178c86d3ec589f1a259aedd93", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/62330f08cbb816f178c86d3ec589f1a259aedd93/comments", "author": {"login": "hpataxisdotcom", "id": 80339731, "node_id": "MDQ6VXNlcjgwMzM5NzMx", "avatar_url": "https://avatars.githubusercontent.com/u/80339731?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hpataxisdotcom", "html_url": "https://github.com/hpataxisdotcom", "followers_url": "https://api.github.com/users/hpataxisdotcom/followers", "following_url": "https://api.github.com/users/hpataxisdotcom/following{/other_user}", "gists_url": "https://api.github.com/users/hpataxisdotcom/gists{/gist_id}", "starred_url": "https://api.github.com/users/hpataxisdotcom/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hpataxisdotcom/subscriptions", "organizations_url": "https://api.github.com/users/hpataxisdotcom/orgs", "repos_url": "https://api.github.com/users/hpataxisdotcom/repos", "events_url": "https://api.github.com/users/hpataxisdotcom/events{/privacy}", "received_events_url": "https://api.github.com/users/hpataxisdotcom/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "21ed44440fc2b6148425eb156452507629018b18", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/21ed44440fc2b6148425eb156452507629018b18", "html_url": "https://github.com/Rust-GCC/gccrs/commit/21ed44440fc2b6148425eb156452507629018b18"}], "stats": {"total": 319, "additions": 319, "deletions": 0}, "files": [{"sha": "c06dfd1670bf2107b77fca356eed0998cf49aa71", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/62330f08cbb816f178c86d3ec589f1a259aedd93/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/62330f08cbb816f178c86d3ec589f1a259aedd93/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=62330f08cbb816f178c86d3ec589f1a259aedd93", "patch": "@@ -1,3 +1,28 @@\n+2012-06-01  Hans-Peter Nilsson  <hp@axis.com>\n+\n+\t* gcc.target/cris/sync-1-v10.c,\n+\tgcc.target/cris/sync-1-v32.c, gcc.target/cris/sync-1.c,\n+\tgcc.target/cris/sync-2c.c, gcc.target/cris/sync-2i.c,\n+\tgcc.target/cris/sync-2s.c, gcc.target/cris/sync-3i.c,\n+\tgcc.target/cris/sync-3s.c, gcc.target/cris/sync-4c.c,\n+\tgcc.target/cris/sync-4i.c, gcc.target/cris/sync-4s.c,\n+\tgcc.target/cris/torture/sync-mis-op-i-1.c,\n+\tgcc.target/cris/torture/sync-mis-op-i-1a.c,\n+\tgcc.target/cris/torture/sync-mis-op-i-2.c,\n+\tgcc.target/cris/torture/sync-mis-op-i-2a.c,\n+\tgcc.target/cris/torture/sync-mis-op-i-3.c,\n+\tgcc.target/cris/torture/sync-mis-op-i-3a.c,\n+\tgcc.target/cris/torture/sync-mis-op-s-1.c,\n+\tgcc.target/cris/torture/sync-mis-op-s-1a.c,\n+\tgcc.target/cris/torture/sync-mis-xchg-i-1.c,\n+\tgcc.target/cris/torture/sync-mis-xchg-i-1a.c,\n+\tgcc.target/cris/torture/sync-mis-xchg-i-2.c,\n+\tgcc.target/cris/torture/sync-mis-xchg-i-2a.c,\n+\tgcc.target/cris/torture/sync-mis-xchg-i-3.c,\n+\tgcc.target/cris/torture/sync-mis-xchg-i-3a.c,\n+\tgcc.target/cris/torture/sync-mis-xchg-s-1.c,\n+\tgcc.target/cris/torture/sync-mis-xchg-s-1a.c: New tests.\n+\n 2012-05-31  Richard Guenther  <rguenther@suse.de>\n \n \t* gcc.dg/tree-ssa/ldist-pr45948-2.c: New testcase copy of"}, {"sha": "640098a96db77fb6a0ae013974a411c4b1c489e6", "filename": "gcc/testsuite/gcc.target/cris/sync-1-v10.c", "status": "added", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/62330f08cbb816f178c86d3ec589f1a259aedd93/gcc%2Ftestsuite%2Fgcc.target%2Fcris%2Fsync-1-v10.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/62330f08cbb816f178c86d3ec589f1a259aedd93/gcc%2Ftestsuite%2Fgcc.target%2Fcris%2Fsync-1-v10.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fcris%2Fsync-1-v10.c?ref=62330f08cbb816f178c86d3ec589f1a259aedd93", "patch": "@@ -0,0 +1,4 @@\n+/* Check that we can assemble both base atomic variants.  */\n+/* { dg-do assemble } */\n+/* { dg-options \"-O2 -march=v10\" } */\n+#include \"sync-1.c\""}, {"sha": "644d922a3dbf2aa276ca168d67e0f9636cd6b608", "filename": "gcc/testsuite/gcc.target/cris/sync-1-v32.c", "status": "added", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/62330f08cbb816f178c86d3ec589f1a259aedd93/gcc%2Ftestsuite%2Fgcc.target%2Fcris%2Fsync-1-v32.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/62330f08cbb816f178c86d3ec589f1a259aedd93/gcc%2Ftestsuite%2Fgcc.target%2Fcris%2Fsync-1-v32.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fcris%2Fsync-1-v32.c?ref=62330f08cbb816f178c86d3ec589f1a259aedd93", "patch": "@@ -0,0 +1,4 @@\n+/* Check that we can assemble both base atomic variants.  */\n+/* { dg-do assemble } */\n+/* { dg-options \"-O2 -march=v32\" } */\n+#include \"sync-1.c\""}, {"sha": "1bc9a674c3b12fe5ca5627135f8312396de00eb0", "filename": "gcc/testsuite/gcc.target/cris/sync-1.c", "status": "added", "additions": 35, "deletions": 0, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/62330f08cbb816f178c86d3ec589f1a259aedd93/gcc%2Ftestsuite%2Fgcc.target%2Fcris%2Fsync-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/62330f08cbb816f178c86d3ec589f1a259aedd93/gcc%2Ftestsuite%2Fgcc.target%2Fcris%2Fsync-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fcris%2Fsync-1.c?ref=62330f08cbb816f178c86d3ec589f1a259aedd93", "patch": "@@ -0,0 +1,35 @@\n+/* Check that we can assemble both base atomic variants, for v0.  */\n+/* { dg-do assemble } */\n+/* { dg-options \"-O2 -march=v0\" } */\n+\n+#ifndef type\n+#define type char\n+#endif\n+\n+#if !defined(op) && !defined(xchg)\n+#define op 1\n+#define xchg 1\n+#endif\n+\n+#ifndef op\n+#define op 0\n+#endif\n+\n+#ifndef xchg\n+#define xchg 0\n+#endif\n+\n+#if op\n+int sfa (type *p, type *q, int a)\n+{\n+  return __atomic_fetch_nand (p, a, __ATOMIC_ACQ_REL)\n+    + __atomic_fetch_add (q, a, __ATOMIC_SEQ_CST);\n+}\n+#endif\n+\n+#if xchg\n+void acen (type *ptr, type *val, type *ret)\n+{\n+  __atomic_exchange (ptr, val, ret, __ATOMIC_SEQ_CST);\n+}\n+#endif"}, {"sha": "80e646c20dbd82af8651ad793fa4d1196225fc99", "filename": "gcc/testsuite/gcc.target/cris/sync-2c.c", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/62330f08cbb816f178c86d3ec589f1a259aedd93/gcc%2Ftestsuite%2Fgcc.target%2Fcris%2Fsync-2c.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/62330f08cbb816f178c86d3ec589f1a259aedd93/gcc%2Ftestsuite%2Fgcc.target%2Fcris%2Fsync-2c.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fcris%2Fsync-2c.c?ref=62330f08cbb816f178c86d3ec589f1a259aedd93", "patch": "@@ -0,0 +1,8 @@\n+/* Check that we don't get alignment-checking code, char.  */\n+/* { dg-do compile } */\n+/* { dg-options \"-O2\" } */\n+/* { dg-final { scan-assembler-not \"\\tbreak\\[ \\t\\]\" } } */\n+/* { dg-final { scan-assembler-not \"\\tbtstq\\[ \\t\\]\\[^5\\]\" } } */\n+/* { dg-final { scan-assembler-not \"\\tand\" } } */\n+/* { dg-final { scan-assembler-not \"\\t\\[jb\\]sr\" } } */\n+#include \"sync-1.c\""}, {"sha": "e43aa5356f5400ae0bb5d833338b6446265b0ea8", "filename": "gcc/testsuite/gcc.target/cris/sync-2i.c", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/62330f08cbb816f178c86d3ec589f1a259aedd93/gcc%2Ftestsuite%2Fgcc.target%2Fcris%2Fsync-2i.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/62330f08cbb816f178c86d3ec589f1a259aedd93/gcc%2Ftestsuite%2Fgcc.target%2Fcris%2Fsync-2i.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fcris%2Fsync-2i.c?ref=62330f08cbb816f178c86d3ec589f1a259aedd93", "patch": "@@ -0,0 +1,9 @@\n+/* Check that we get the expected alignment-checking code, op variant, int.  */\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -Dop -Dtype=int\" } */\n+/* { dg-additional-options \"-mtrap-using-break8 -mtrap-unaligned-atomic\" { target cris-*-elf } } */\n+/* { dg-final { scan-assembler \"\\tbreak 8\" } } */\n+/* { dg-final { scan-assembler \"\\tbtstq \\\\(2-1\\\\),\" } } */\n+/* { dg-final { scan-assembler-not \"\\tand\" } } */\n+/* { dg-final { scan-assembler-not \"\\t\\[jb\\]sr\" } } */\n+#include \"sync-1.c\""}, {"sha": "9be7dc6bcb54f466246bb02bda995638b530145b", "filename": "gcc/testsuite/gcc.target/cris/sync-2s.c", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/62330f08cbb816f178c86d3ec589f1a259aedd93/gcc%2Ftestsuite%2Fgcc.target%2Fcris%2Fsync-2s.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/62330f08cbb816f178c86d3ec589f1a259aedd93/gcc%2Ftestsuite%2Fgcc.target%2Fcris%2Fsync-2s.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fcris%2Fsync-2s.c?ref=62330f08cbb816f178c86d3ec589f1a259aedd93", "patch": "@@ -0,0 +1,9 @@\n+/* Check that we get the expected alignment-checking code, op variant, short.  */\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -Dop -Dtype=short\" } */\n+/* { dg-additional-options \"-mtrap-using-break8 -mtrap-unaligned-atomic\" { target cris-*-elf } } */\n+/* { dg-final { scan-assembler \"\\tbreak 8\" } } */\n+/* { dg-final { scan-assembler \"\\tbtstq \\\\(1-1\\\\),\" } } */\n+/* { dg-final { scan-assembler-not \"\\tand\" } } */\n+/* { dg-final { scan-assembler-not \"\\t\\[jb\\]sr\" } } */\n+#include \"sync-1.c\""}, {"sha": "114e0a846e8055b7d80ed3d6abf2ab91b58b02ba", "filename": "gcc/testsuite/gcc.target/cris/sync-3i.c", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/62330f08cbb816f178c86d3ec589f1a259aedd93/gcc%2Ftestsuite%2Fgcc.target%2Fcris%2Fsync-3i.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/62330f08cbb816f178c86d3ec589f1a259aedd93/gcc%2Ftestsuite%2Fgcc.target%2Fcris%2Fsync-3i.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fcris%2Fsync-3i.c?ref=62330f08cbb816f178c86d3ec589f1a259aedd93", "patch": "@@ -0,0 +1,11 @@\n+/* Check that we get the expected alignment-checking code, xchg variant, int.\n+   Unfortunately, PRE moves the \"and\" to a different BB, so combine doesn't\n+   see it with the compare to make it a btstq.  */\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -Dxchg -Dtype=int\" } */\n+/* { dg-additional-options \"-mtrap-using-break8 -mtrap-unaligned-atomic\" { target cris-*-elf } } */\n+/* { dg-final { scan-assembler \"\\tbreak 8\" } } */\n+/* { dg-final { scan-assembler \"\\tbtstq \\\\(2-1\\\\),\" { xfail *-*-* } } } */\n+/* { dg-final { scan-assembler-not \"\\tand\" { xfail *-*-* } } } */\n+/* { dg-final { scan-assembler-not \"\\t\\[jb\\]sr\" } } */\n+#include \"sync-1.c\""}, {"sha": "facbb39ed945f969f846d78a5ebb818759951699", "filename": "gcc/testsuite/gcc.target/cris/sync-3s.c", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/62330f08cbb816f178c86d3ec589f1a259aedd93/gcc%2Ftestsuite%2Fgcc.target%2Fcris%2Fsync-3s.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/62330f08cbb816f178c86d3ec589f1a259aedd93/gcc%2Ftestsuite%2Fgcc.target%2Fcris%2Fsync-3s.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fcris%2Fsync-3s.c?ref=62330f08cbb816f178c86d3ec589f1a259aedd93", "patch": "@@ -0,0 +1,11 @@\n+/* Check that we get the expected alignment-checking code, xchg variant, short.\n+   Unfortunately, PRE moves the \"and\" to a different BB, so combine doesn't\n+   see it with the compare to make it a btstq.  */\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -Dxchg -Dtype=short\" } */\n+/* { dg-additional-options \"-mtrap-using-break8 -mtrap-unaligned-atomic\" { target cris-*-elf } } */\n+/* { dg-final { scan-assembler \"\\tbreak 8\" } } */\n+/* { dg-final { scan-assembler \"\\tbtstq \\\\(1-1\\\\),\" { xfail *-*-* } } } */\n+/* { dg-final { scan-assembler-not \"\\tand\" { xfail *-*-* } } } */\n+/* { dg-final { scan-assembler-not \"\\t\\[jb\\]sr\" } } */\n+#include \"sync-1.c\""}, {"sha": "e8cb69267b8666727cfe89aa96b4e6632db75c24", "filename": "gcc/testsuite/gcc.target/cris/sync-4c.c", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/62330f08cbb816f178c86d3ec589f1a259aedd93/gcc%2Ftestsuite%2Fgcc.target%2Fcris%2Fsync-4c.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/62330f08cbb816f178c86d3ec589f1a259aedd93/gcc%2Ftestsuite%2Fgcc.target%2Fcris%2Fsync-4c.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fcris%2Fsync-4c.c?ref=62330f08cbb816f178c86d3ec589f1a259aedd93", "patch": "@@ -0,0 +1,8 @@\n+/* Check that we get don't alignment-checking code, xchg variant, char.  */\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -mno-trap-unaligned-atomic\" } */\n+/* { dg-final { scan-assembler-not \"\\tbreak\\[ \\t\\]\" } } */\n+/* { dg-final { scan-assembler-not \"\\tbtstq\\[ \\t\\]\\[^5\\]\" } } */\n+/* { dg-final { scan-assembler-not \"\\tand\" } } */\n+/* { dg-final { scan-assembler-not \"\\t\\[jb\\]sr\" } } */\n+#include \"sync-1.c\""}, {"sha": "9756c6963864ba51b89cdea3200cbd533684c9f1", "filename": "gcc/testsuite/gcc.target/cris/sync-4i.c", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/62330f08cbb816f178c86d3ec589f1a259aedd93/gcc%2Ftestsuite%2Fgcc.target%2Fcris%2Fsync-4i.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/62330f08cbb816f178c86d3ec589f1a259aedd93/gcc%2Ftestsuite%2Fgcc.target%2Fcris%2Fsync-4i.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fcris%2Fsync-4i.c?ref=62330f08cbb816f178c86d3ec589f1a259aedd93", "patch": "@@ -0,0 +1,8 @@\n+/* Check that we don't get alignment-checking code, int.  */\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -Dtype=int -mno-trap-unaligned-atomic\" } */\n+/* { dg-final { scan-assembler-not \"\\tbreak\\[ \\t\\]\" } } */\n+/* { dg-final { scan-assembler-not \"\\tbtstq\\[ \\t\\]\\[^5\\]\" } } */\n+/* { dg-final { scan-assembler-not \"\\tand\" } } */\n+/* { dg-final { scan-assembler-not \"\\t\\[jb\\]sr\" } } */\n+#include \"sync-1.c\""}, {"sha": "2d644303a791e5725719d3a01ffd25c14285161f", "filename": "gcc/testsuite/gcc.target/cris/sync-4s.c", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/62330f08cbb816f178c86d3ec589f1a259aedd93/gcc%2Ftestsuite%2Fgcc.target%2Fcris%2Fsync-4s.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/62330f08cbb816f178c86d3ec589f1a259aedd93/gcc%2Ftestsuite%2Fgcc.target%2Fcris%2Fsync-4s.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fcris%2Fsync-4s.c?ref=62330f08cbb816f178c86d3ec589f1a259aedd93", "patch": "@@ -0,0 +1,8 @@\n+/* Check that we don't get alignment-checking code, short.  */\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -Dtype=short -mno-trap-unaligned-atomic\" } */\n+/* { dg-final { scan-assembler-not \"\\tbreak\\[ \\t\\]\" } } */\n+/* { dg-final { scan-assembler-not \"\\tbtstq\\[ \\t\\]\\[^5\\]\" } } */\n+/* { dg-final { scan-assembler-not \"\\tand\" } } */\n+/* { dg-final { scan-assembler-not \"\\t\\[jb\\]sr\" } } */\n+#include \"sync-1.c\""}, {"sha": "733ec4bac57b4df5e05892ad0b2af749e0a5af05", "filename": "gcc/testsuite/gcc.target/cris/torture/sync-mis-op-i-1.c", "status": "added", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/62330f08cbb816f178c86d3ec589f1a259aedd93/gcc%2Ftestsuite%2Fgcc.target%2Fcris%2Ftorture%2Fsync-mis-op-i-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/62330f08cbb816f178c86d3ec589f1a259aedd93/gcc%2Ftestsuite%2Fgcc.target%2Fcris%2Ftorture%2Fsync-mis-op-i-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fcris%2Ftorture%2Fsync-mis-op-i-1.c?ref=62330f08cbb816f178c86d3ec589f1a259aedd93", "patch": "@@ -0,0 +1,4 @@\n+/* { dg-do run { target *-*-linux* } } */\n+/* { dg-additional-sources \"../sync-1.c\" } */\n+/* { dg-options \"-Dop -Dtype=int\" } */\n+#include \"sync-mis-op-s-1.c\""}, {"sha": "4cd233316e265e82fe09e56e77908fdb1e6e4e29", "filename": "gcc/testsuite/gcc.target/cris/torture/sync-mis-op-i-1a.c", "status": "added", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/62330f08cbb816f178c86d3ec589f1a259aedd93/gcc%2Ftestsuite%2Fgcc.target%2Fcris%2Ftorture%2Fsync-mis-op-i-1a.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/62330f08cbb816f178c86d3ec589f1a259aedd93/gcc%2Ftestsuite%2Fgcc.target%2Fcris%2Ftorture%2Fsync-mis-op-i-1a.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fcris%2Ftorture%2Fsync-mis-op-i-1a.c?ref=62330f08cbb816f178c86d3ec589f1a259aedd93", "patch": "@@ -0,0 +1,5 @@\n+/* { dg-do run } */\n+/* { dg-additional-sources \"../sync-1.c\" } */\n+/* { dg-options \"-Dop -Dtype=int -DTRAP_USING_ABORT -mno-trap-using-break8\" } */\n+/* { dg-additional-options \"-mtrap-unaligned-atomic\" { target cris-*-elf } } */\n+#include \"sync-mis-op-s-1.c\""}, {"sha": "97d0bf067b0ebe6cb47a72502194fbb005cdbd50", "filename": "gcc/testsuite/gcc.target/cris/torture/sync-mis-op-i-2.c", "status": "added", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/62330f08cbb816f178c86d3ec589f1a259aedd93/gcc%2Ftestsuite%2Fgcc.target%2Fcris%2Ftorture%2Fsync-mis-op-i-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/62330f08cbb816f178c86d3ec589f1a259aedd93/gcc%2Ftestsuite%2Fgcc.target%2Fcris%2Ftorture%2Fsync-mis-op-i-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fcris%2Ftorture%2Fsync-mis-op-i-2.c?ref=62330f08cbb816f178c86d3ec589f1a259aedd93", "patch": "@@ -0,0 +1,4 @@\n+/* { dg-do run { target *-*-linux* } } */\n+/* { dg-additional-sources \"../sync-1.c\" } */\n+/* { dg-options \"-Dop -Dtype=int -Dmisalignment=2\" } */\n+#include \"sync-mis-op-s-1.c\""}, {"sha": "3596e9ea5b188762b0991bfc48b33509838973cc", "filename": "gcc/testsuite/gcc.target/cris/torture/sync-mis-op-i-2a.c", "status": "added", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/62330f08cbb816f178c86d3ec589f1a259aedd93/gcc%2Ftestsuite%2Fgcc.target%2Fcris%2Ftorture%2Fsync-mis-op-i-2a.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/62330f08cbb816f178c86d3ec589f1a259aedd93/gcc%2Ftestsuite%2Fgcc.target%2Fcris%2Ftorture%2Fsync-mis-op-i-2a.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fcris%2Ftorture%2Fsync-mis-op-i-2a.c?ref=62330f08cbb816f178c86d3ec589f1a259aedd93", "patch": "@@ -0,0 +1,5 @@\n+/* { dg-do run } */\n+/* { dg-additional-sources \"../sync-1.c\" } */\n+/* { dg-options \"-Dop -Dtype=int -Dmisalignment=2 -DTRAP_USING_ABORT -mno-trap-using-break8\" } */\n+/* { dg-additional-options \"-mtrap-unaligned-atomic\" { target cris-*-elf } } */\n+#include \"sync-mis-op-s-1.c\""}, {"sha": "07479469f49d4ad56a5d64e3abfcda0f79dd527b", "filename": "gcc/testsuite/gcc.target/cris/torture/sync-mis-op-i-3.c", "status": "added", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/62330f08cbb816f178c86d3ec589f1a259aedd93/gcc%2Ftestsuite%2Fgcc.target%2Fcris%2Ftorture%2Fsync-mis-op-i-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/62330f08cbb816f178c86d3ec589f1a259aedd93/gcc%2Ftestsuite%2Fgcc.target%2Fcris%2Ftorture%2Fsync-mis-op-i-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fcris%2Ftorture%2Fsync-mis-op-i-3.c?ref=62330f08cbb816f178c86d3ec589f1a259aedd93", "patch": "@@ -0,0 +1,4 @@\n+/* { dg-do run { target *-*-linux* } } */\n+/* { dg-additional-sources \"../sync-1.c\" } */\n+/* { dg-options \"-Dop -Dtype=int -Dmisalignment=3\" } */\n+#include \"sync-mis-op-s-1.c\""}, {"sha": "46a04f42c0ea5988663a3a5a36fa240c0a338132", "filename": "gcc/testsuite/gcc.target/cris/torture/sync-mis-op-i-3a.c", "status": "added", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/62330f08cbb816f178c86d3ec589f1a259aedd93/gcc%2Ftestsuite%2Fgcc.target%2Fcris%2Ftorture%2Fsync-mis-op-i-3a.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/62330f08cbb816f178c86d3ec589f1a259aedd93/gcc%2Ftestsuite%2Fgcc.target%2Fcris%2Ftorture%2Fsync-mis-op-i-3a.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fcris%2Ftorture%2Fsync-mis-op-i-3a.c?ref=62330f08cbb816f178c86d3ec589f1a259aedd93", "patch": "@@ -0,0 +1,5 @@\n+/* { dg-do run } */\n+/* { dg-additional-sources \"../sync-1.c\" } */\n+/* { dg-options \"-Dop -Dtype=int -Dmisalignment=3 -DTRAP_USING_ABORT -mno-trap-using-break8\" } */\n+/* { dg-additional-options \"-mtrap-unaligned-atomic\" { target cris-*-elf } } */\n+#include \"sync-mis-op-s-1.c\""}, {"sha": "21b5269eced5cc6fd97517416d4f187a1c5ffed4", "filename": "gcc/testsuite/gcc.target/cris/torture/sync-mis-op-s-1.c", "status": "added", "additions": 111, "deletions": 0, "changes": 111, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/62330f08cbb816f178c86d3ec589f1a259aedd93/gcc%2Ftestsuite%2Fgcc.target%2Fcris%2Ftorture%2Fsync-mis-op-s-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/62330f08cbb816f178c86d3ec589f1a259aedd93/gcc%2Ftestsuite%2Fgcc.target%2Fcris%2Ftorture%2Fsync-mis-op-s-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fcris%2Ftorture%2Fsync-mis-op-s-1.c?ref=62330f08cbb816f178c86d3ec589f1a259aedd93", "patch": "@@ -0,0 +1,111 @@\n+/* { dg-do run { target *-*-linux* } } */\n+/* { dg-additional-sources \"../sync-1.c\" } */\n+/* { dg-options \"-Dop -Dtype=short\" } */\n+\n+/* Make sure we get a SIGTRAP or equivalent when passing unaligned\n+   but otherwise valid pointers to the atomic builtins.  */\n+\n+#include <signal.h>\n+#include <stdlib.h>\n+\n+#ifndef type\n+#error type not defined\n+#endif\n+\n+#ifndef op\n+#define op 0\n+#endif\n+\n+#ifndef xchg\n+#define xchg 0\n+#endif\n+\n+#if op\n+int sfa (type *p, type *q, int a);\n+#endif\n+\n+#if xchg\n+void acen (type *ptr, type *val, type *ret);\n+#endif\n+\n+#ifndef misalignment\n+#define misalignment 1\n+#endif\n+\n+volatile int trap_expected = 0;\n+\n+struct { char x[misalignment]; type i; } s __attribute__ ((__aligned__ (4)))\n+  = { {0}, (type) 0xdeadbeef };\n+type x = 2;\n+type ret = 42;\n+\n+#ifdef TRAP_USING_ABORT\n+#define SYMSTR(x) STR1(__USER_LABEL_PREFIX__, x)\n+#define STR1(x,y) STR2(x, y)\n+#define STR2(x,y) #x #y\n+/* LTO requires marking seemingly-unused-but-used global functions.  */\n+void my_abort (void) __asm__ (SYMSTR (abort)) __attribute__ ((__used__));\n+void my_abort (void)\n+#else\n+#ifdef __gnu_linux__\n+void trap_handler(int signum)\n+#else\n+#error \"can't catch break 8\"\n+#endif\n+#endif\n+{\n+  if (1\n+#ifndef TRAP_USING_ABORT\n+      && signum == SIGTRAP\n+#endif\n+      && trap_expected\n+      && s.i == (type) 0xdeadbeef\n+      && x == 2 && ret == 42)\n+    exit (0);\n+\n+#ifdef TRAP_USING_ABORT\n+  /* We might be able to trust the exit-value getting through, but add\n+     a NULL-dereference SEGV just in case.  Make sure gcc doesn't\n+     understand the NULL.  */\n+  *({ int *p; asm (\"\" : \"=rm\" (p) : \"0\" (0)); p; }) = 0xdead;\n+  exit (2);\n+#else\n+  abort ();\n+#endif\n+}\n+\n+int main(void)\n+{\n+  type x = 0;\n+  type ret;\n+\n+#ifndef TRAP_USING_ABORT\n+#ifdef __gnu_linux__\n+  if (signal (SIGTRAP, trap_handler) == SIG_ERR)\n+    abort ();\n+#endif\n+#endif\n+\n+  trap_expected = 1;\n+\n+#if op\n+  sfa (&s.i, &s.i, 42);\n+\n+  /* We should have fallen into the trap now.  But don't call abort\n+     yet: if the trap is implemented as a call to abort, we have to\n+     tell the difference.  Set a global variable *and* make sure the\n+     setting isn't eliminated by optimizers: another call to sfa\n+     should do it.  */\n+  trap_expected = 0;\n+\n+  sfa (&x, &x, 1);\n+#else\n+  acen (&s.i, &x, &ret);\n+\n+  trap_expected = 0;\n+\n+  acen (&x, &x, &ret);\n+#endif\n+\n+  abort ();\n+}"}, {"sha": "fc91e7c9a8a015a454e014714c21d0aa7c0731e1", "filename": "gcc/testsuite/gcc.target/cris/torture/sync-mis-op-s-1a.c", "status": "added", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/62330f08cbb816f178c86d3ec589f1a259aedd93/gcc%2Ftestsuite%2Fgcc.target%2Fcris%2Ftorture%2Fsync-mis-op-s-1a.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/62330f08cbb816f178c86d3ec589f1a259aedd93/gcc%2Ftestsuite%2Fgcc.target%2Fcris%2Ftorture%2Fsync-mis-op-s-1a.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fcris%2Ftorture%2Fsync-mis-op-s-1a.c?ref=62330f08cbb816f178c86d3ec589f1a259aedd93", "patch": "@@ -0,0 +1,5 @@\n+/* { dg-do run } */\n+/* { dg-additional-sources \"../sync-1.c\" } */\n+/* { dg-options \"-Dop -Dtype=short -DTRAP_USING_ABORT -mno-trap-using-break8\" } */\n+/* { dg-additional-options \"-mtrap-unaligned-atomic\" { target cris-*-elf } } */\n+#include \"sync-mis-op-s-1.c\""}, {"sha": "1072caca9ca29f419e6e7ff6dfafe7449b136230", "filename": "gcc/testsuite/gcc.target/cris/torture/sync-mis-xchg-i-1.c", "status": "added", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/62330f08cbb816f178c86d3ec589f1a259aedd93/gcc%2Ftestsuite%2Fgcc.target%2Fcris%2Ftorture%2Fsync-mis-xchg-i-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/62330f08cbb816f178c86d3ec589f1a259aedd93/gcc%2Ftestsuite%2Fgcc.target%2Fcris%2Ftorture%2Fsync-mis-xchg-i-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fcris%2Ftorture%2Fsync-mis-xchg-i-1.c?ref=62330f08cbb816f178c86d3ec589f1a259aedd93", "patch": "@@ -0,0 +1,4 @@\n+/* { dg-do run { target *-*-linux* } } */\n+/* { dg-additional-sources \"../sync-1.c\" } */\n+/* { dg-options \"-Dxchg -Dtype=int\" } */\n+#include \"sync-mis-op-s-1.c\""}, {"sha": "af6ef8ac748d6c0014d981de1493a25c30f6f755", "filename": "gcc/testsuite/gcc.target/cris/torture/sync-mis-xchg-i-1a.c", "status": "added", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/62330f08cbb816f178c86d3ec589f1a259aedd93/gcc%2Ftestsuite%2Fgcc.target%2Fcris%2Ftorture%2Fsync-mis-xchg-i-1a.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/62330f08cbb816f178c86d3ec589f1a259aedd93/gcc%2Ftestsuite%2Fgcc.target%2Fcris%2Ftorture%2Fsync-mis-xchg-i-1a.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fcris%2Ftorture%2Fsync-mis-xchg-i-1a.c?ref=62330f08cbb816f178c86d3ec589f1a259aedd93", "patch": "@@ -0,0 +1,5 @@\n+/* { dg-do run } */\n+/* { dg-additional-sources \"../sync-1.c\" } */\n+/* { dg-options \"-Dxchg -Dtype=int -DTRAP_USING_ABORT -mno-trap-using-break8\" } */\n+/* { dg-additional-options \"-mtrap-unaligned-atomic\" { target cris-*-elf } } */\n+#include \"sync-mis-op-s-1.c\""}, {"sha": "b02f4875b02555bdc084944a15dcc717a7ec319d", "filename": "gcc/testsuite/gcc.target/cris/torture/sync-mis-xchg-i-2.c", "status": "added", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/62330f08cbb816f178c86d3ec589f1a259aedd93/gcc%2Ftestsuite%2Fgcc.target%2Fcris%2Ftorture%2Fsync-mis-xchg-i-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/62330f08cbb816f178c86d3ec589f1a259aedd93/gcc%2Ftestsuite%2Fgcc.target%2Fcris%2Ftorture%2Fsync-mis-xchg-i-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fcris%2Ftorture%2Fsync-mis-xchg-i-2.c?ref=62330f08cbb816f178c86d3ec589f1a259aedd93", "patch": "@@ -0,0 +1,4 @@\n+/* { dg-do run { target *-*-linux* } } */\n+/* { dg-additional-sources \"../sync-1.c\" } */\n+/* { dg-options \"-Dxchg -Dtype=int -Dmisalignment=2\" } */\n+#include \"sync-mis-op-s-1.c\""}, {"sha": "8c7918470c64b234c4591ed2a3c387e5d8d8acdc", "filename": "gcc/testsuite/gcc.target/cris/torture/sync-mis-xchg-i-2a.c", "status": "added", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/62330f08cbb816f178c86d3ec589f1a259aedd93/gcc%2Ftestsuite%2Fgcc.target%2Fcris%2Ftorture%2Fsync-mis-xchg-i-2a.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/62330f08cbb816f178c86d3ec589f1a259aedd93/gcc%2Ftestsuite%2Fgcc.target%2Fcris%2Ftorture%2Fsync-mis-xchg-i-2a.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fcris%2Ftorture%2Fsync-mis-xchg-i-2a.c?ref=62330f08cbb816f178c86d3ec589f1a259aedd93", "patch": "@@ -0,0 +1,5 @@\n+/* { dg-do run } */\n+/* { dg-additional-sources \"../sync-1.c\" } */\n+/* { dg-options \"-Dxchg -Dtype=int -Dmisalignment=2 -DTRAP_USING_ABORT -mno-trap-using-break8\" } */\n+/* { dg-additional-options \"-mtrap-unaligned-atomic\" { target cris-*-elf } } */\n+#include \"sync-mis-op-s-1.c\""}, {"sha": "637aecfd288c8c12ed058feb720076dbc061fc09", "filename": "gcc/testsuite/gcc.target/cris/torture/sync-mis-xchg-i-3.c", "status": "added", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/62330f08cbb816f178c86d3ec589f1a259aedd93/gcc%2Ftestsuite%2Fgcc.target%2Fcris%2Ftorture%2Fsync-mis-xchg-i-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/62330f08cbb816f178c86d3ec589f1a259aedd93/gcc%2Ftestsuite%2Fgcc.target%2Fcris%2Ftorture%2Fsync-mis-xchg-i-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fcris%2Ftorture%2Fsync-mis-xchg-i-3.c?ref=62330f08cbb816f178c86d3ec589f1a259aedd93", "patch": "@@ -0,0 +1,4 @@\n+/* { dg-do run { target *-*-linux* } } */\n+/* { dg-additional-sources \"../sync-1.c\" } */\n+/* { dg-options \"-Dxchg -Dtype=int -Dmisalignment=3\" } */\n+#include \"sync-mis-op-s-1.c\""}, {"sha": "e7c90a360d3928d34555ede10b380628ef166dbe", "filename": "gcc/testsuite/gcc.target/cris/torture/sync-mis-xchg-i-3a.c", "status": "added", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/62330f08cbb816f178c86d3ec589f1a259aedd93/gcc%2Ftestsuite%2Fgcc.target%2Fcris%2Ftorture%2Fsync-mis-xchg-i-3a.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/62330f08cbb816f178c86d3ec589f1a259aedd93/gcc%2Ftestsuite%2Fgcc.target%2Fcris%2Ftorture%2Fsync-mis-xchg-i-3a.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fcris%2Ftorture%2Fsync-mis-xchg-i-3a.c?ref=62330f08cbb816f178c86d3ec589f1a259aedd93", "patch": "@@ -0,0 +1,5 @@\n+/* { dg-do run } */\n+/* { dg-additional-sources \"../sync-1.c\" } */\n+/* { dg-options \"-Dxchg -Dtype=int -Dmisalignment=3 -DTRAP_USING_ABORT -mno-trap-using-break8\" } */\n+/* { dg-additional-options \"-mtrap-unaligned-atomic\" { target cris-*-elf } } */\n+#include \"sync-mis-op-s-1.c\""}, {"sha": "73742854ed5d957eab39d8899fe75e59accc582a", "filename": "gcc/testsuite/gcc.target/cris/torture/sync-mis-xchg-s-1.c", "status": "added", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/62330f08cbb816f178c86d3ec589f1a259aedd93/gcc%2Ftestsuite%2Fgcc.target%2Fcris%2Ftorture%2Fsync-mis-xchg-s-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/62330f08cbb816f178c86d3ec589f1a259aedd93/gcc%2Ftestsuite%2Fgcc.target%2Fcris%2Ftorture%2Fsync-mis-xchg-s-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fcris%2Ftorture%2Fsync-mis-xchg-s-1.c?ref=62330f08cbb816f178c86d3ec589f1a259aedd93", "patch": "@@ -0,0 +1,4 @@\n+/* { dg-do run { target *-*-linux* } } */\n+/* { dg-additional-sources \"../sync-1.c\" } */\n+/* { dg-options \"-Dxchg -Dtype=short\" } */\n+#include \"sync-mis-op-s-1.c\""}, {"sha": "5dcef52207d3394682b87b5690d145b1c8c7553d", "filename": "gcc/testsuite/gcc.target/cris/torture/sync-mis-xchg-s-1a.c", "status": "added", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/62330f08cbb816f178c86d3ec589f1a259aedd93/gcc%2Ftestsuite%2Fgcc.target%2Fcris%2Ftorture%2Fsync-mis-xchg-s-1a.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/62330f08cbb816f178c86d3ec589f1a259aedd93/gcc%2Ftestsuite%2Fgcc.target%2Fcris%2Ftorture%2Fsync-mis-xchg-s-1a.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fcris%2Ftorture%2Fsync-mis-xchg-s-1a.c?ref=62330f08cbb816f178c86d3ec589f1a259aedd93", "patch": "@@ -0,0 +1,5 @@\n+/* { dg-do run } */\n+/* { dg-additional-sources \"../sync-1.c\" } */\n+/* { dg-options \"-Dxchg -Dtype=short -DTRAP_USING_ABORT -mno-trap-using-break8\" } */\n+/* { dg-additional-options \"-mtrap-unaligned-atomic\" { target cris-*-elf } } */\n+#include \"sync-mis-op-s-1.c\""}]}