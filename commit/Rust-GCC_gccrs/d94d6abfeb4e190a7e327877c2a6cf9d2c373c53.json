{"sha": "d94d6abfeb4e190a7e327877c2a6cf9d2c373c53", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDk0ZDZhYmZlYjRlMTkwYTdlMzI3ODc3YzJhNmNmOWQyYzM3M2M1Mw==", "commit": {"author": {"name": "Bernd Schmidt", "email": "bernds@cygnus.co.uk", "date": "1999-11-29T11:06:51Z"}, "committer": {"name": "Bernd Schmidt", "email": "crux@gcc.gnu.org", "date": "1999-11-29T11:06:51Z"}, "message": "Delete useless patterns\n\nFrom-SVN: r30699", "tree": {"sha": "29def013714f840db1bcd03707442b8a0c4ab89d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/29def013714f840db1bcd03707442b8a0c4ab89d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d94d6abfeb4e190a7e327877c2a6cf9d2c373c53", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d94d6abfeb4e190a7e327877c2a6cf9d2c373c53", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d94d6abfeb4e190a7e327877c2a6cf9d2c373c53", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d94d6abfeb4e190a7e327877c2a6cf9d2c373c53/comments", "author": null, "committer": null, "parents": [{"sha": "311fe27c71628f8d246b23084f5ce2168912215e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/311fe27c71628f8d246b23084f5ce2168912215e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/311fe27c71628f8d246b23084f5ce2168912215e"}], "stats": {"total": 94, "additions": 3, "deletions": 91}, "files": [{"sha": "1105e2143a1ce33599cb869570f2ac784cb319c9", "filename": "gcc/ChangeLog", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d94d6abfeb4e190a7e327877c2a6cf9d2c373c53/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d94d6abfeb4e190a7e327877c2a6cf9d2c373c53/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=d94d6abfeb4e190a7e327877c2a6cf9d2c373c53", "patch": "@@ -1,5 +1,8 @@\n 1999-11-29  Bernd Schmidt  <bernds@cygnus.co.uk>\n \n+\t* alpha.md: Delete useless patterns that tried to work around\n+\tregister elimination problems.\n+\n \t* unroll.c (loop_iterations): Don't abort if iteration variable\n \twas made by loop.\n "}, {"sha": "5d5b8d2de9aaa68e45141c160b446a26325900fc", "filename": "gcc/config/alpha/alpha.md", "status": "modified", "additions": 0, "deletions": 91, "changes": 91, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d94d6abfeb4e190a7e327877c2a6cf9d2c373c53/gcc%2Fconfig%2Falpha%2Falpha.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d94d6abfeb4e190a7e327877c2a6cf9d2c373c53/gcc%2Fconfig%2Falpha%2Falpha.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Falpha%2Falpha.md?ref=d94d6abfeb4e190a7e327877c2a6cf9d2c373c53", "patch": "@@ -670,97 +670,6 @@\n    s%2addq %1,%3,%0\n    s%2subq %1,%n3,%0\")\n \n-;; These variants of the above insns can occur if the third operand\n-;; is the frame pointer, or other eliminable register.  E.g. some\n-;; register holding an offset from the stack pointer.  This is a\n-;; kludge, but there doesn't seem to be a way around it.  Only\n-;; recognize them while reloading.\n-\n-(define_insn \"\"\n-  [(set (match_operand:DI 0 \"some_ni_operand\" \"=r,&r\")\n-\t(plus:DI (plus:DI (match_operand:DI 1 \"some_operand\" \"%r,r\")\n-\t\t\t  (match_operand:DI 2 \"some_operand\" \"%r,r\"))\n-\t\t (match_operand:DI 3 \"some_operand\" \"IOKL,r\")))]\n-  \"reload_in_progress\"\n-  \"#\")\n-\n-(define_split\n-  [(set (match_operand:DI 0 \"register_operand\" \"\")\n-\t(plus:DI (plus:DI (match_operand:DI 1 \"register_operand\" \"\")\n-\t\t\t  (match_operand:DI 2 \"register_operand\" \"\"))\n-\t\t (match_operand:DI 3 \"add_operand\" \"\")))]\n-  \"reload_completed\"\n-  [(set (match_dup 0) (plus:DI (match_dup 1) (match_dup 2)))\n-   (set (match_dup 0) (plus:DI (match_dup 0) (match_dup 3)))]\n-  \"\")\n-\t\t\t\t\t   \n-(define_insn \"\"\n-  [(set (match_operand:SI 0 \"some_ni_operand\" \"=r,&r\")\n-\t(plus:SI (plus:SI (mult:SI (match_operand:SI 1 \"some_operand\" \"rJ,rJ\")\n-\t\t\t\t   (match_operand:SI 2 \"const48_operand\" \"I,I\"))\n-\t\t\t  (match_operand:SI 3 \"some_operand\" \"%r,r\"))\n-\t\t (match_operand:SI 4 \"some_operand\" \"IOKL,r\")))]\n-  \"reload_in_progress\"\n-  \"#\")\n-\n-(define_split\n-  [(set (match_operand:SI 0 \"register_operand\" \"\")\n-\t(plus:SI (plus:SI (mult:SI (match_operand:SI 1 \"reg_or_0_operand\" \"\")\n-\t\t\t\t   (match_operand:SI 2 \"const48_operand\" \"\"))\n-\t\t\t  (match_operand:SI 3 \"register_operand\" \"\"))\n-\t\t (match_operand:SI 4 \"add_operand\" \"rIOKL\")))]\n-  \"reload_completed\"\n-  [(set (match_dup 0)\n-\t(plus:SI (mult:SI (match_dup 1) (match_dup 2)) (match_dup 3)))\n-   (set (match_dup 0) (plus:SI (match_dup 0) (match_dup 4)))]\n-  \"\")\n-\n-(define_insn \"\"\n-  [(set (match_operand:DI 0 \"some_ni_operand\" \"=r,&r\")\n-\t(sign_extend:DI\n-\t (plus:SI (plus:SI\n-\t\t   (mult:SI (match_operand:SI 1 \"some_operand\" \"rJ,rJ\")\n-\t\t\t    (match_operand:SI 2 \"const48_operand\" \"I,I\"))\n-\t\t   (match_operand:SI 3 \"some_operand\" \"%r,r\"))\n-\t\t  (match_operand:SI 4 \"some_operand\" \"IO,r\"))))]\n-  \"reload_in_progress\"\n-  \"#\")\n-\n-(define_split\n-  [(set (match_operand:DI 0 \"register_operand\" \"\")\n-\t(sign_extend:DI\n-\t (plus:SI (plus:SI\n-\t\t   (mult:SI (match_operand:SI 1 \"reg_or_0_operand\" \"\")\n-\t\t\t    (match_operand:SI 2 \"const48_operand\" \"\"))\n-\t\t   (match_operand:SI 3 \"register_operand\" \"\"))\n-\t\t  (match_operand:SI 4 \"sext_add_operand\" \"\"))))]\n-  \"reload_completed\"\n-  [(set (match_dup 5)\n-\t(plus:SI (mult:SI (match_dup 1) (match_dup 2)) (match_dup 3)))\n-   (set (match_dup 0) (sign_extend:DI (plus:SI (match_dup 5) (match_dup 4))))]\n-  \"operands[5] = gen_lowpart (SImode, operands[0]);\")\n-\n-(define_insn \"\"\n-  [(set (match_operand:DI 0 \"some_ni_operand\" \"=r,&r\")\n-\t(plus:DI (plus:DI (mult:DI (match_operand:DI 1 \"some_operand\" \"rJ,rJ\")\n-\t\t\t\t   (match_operand:DI 2 \"const48_operand\" \"I,I\"))\n-\t\t\t  (match_operand:DI 3 \"some_operand\" \"%r,r\"))\n-\t\t (match_operand:DI 4 \"some_operand\" \"IOKL,r\")))]\n-  \"reload_in_progress\"\n-  \"#\")\n-\n-(define_split\n-  [(set (match_operand:DI 0 \"register_operand\" \"\")\n-\t(plus:DI (plus:DI (mult:DI (match_operand:DI 1 \"reg_or_0_operand\" \"\")\n-\t\t\t\t   (match_operand:DI 2 \"const48_operand\" \"\"))\n-\t\t\t  (match_operand:DI 3 \"register_operand\" \"\"))\n-\t\t (match_operand:DI 4 \"add_operand\" \"\")))]\n-  \"reload_completed\"\n-  [(set (match_dup 0)\n-\t(plus:DI (mult:DI (match_dup 1) (match_dup 2)) (match_dup 3)))\n-   (set (match_dup 0) (plus:DI (match_dup 0) (match_dup 4)))]\n-  \"\")\n-\n (define_insn \"negsi2\"\n   [(set (match_operand:SI 0 \"register_operand\" \"=r\")\n \t(neg:SI (match_operand:SI 1 \"reg_or_8bit_operand\" \"rI\")))]"}]}