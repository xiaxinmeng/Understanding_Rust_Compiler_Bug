{"sha": "51308fc3b6cb2d73b52eed78b431a8fd7223c00d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTEzMDhmYzNiNmNiMmQ3M2I1MmVlZDc4YjQzMWE4ZmQ3MjIzYzAwZA==", "commit": {"author": {"name": "Jeff Law", "email": "law@redhat.com", "date": "2017-11-09T22:57:18Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "2017-11-09T22:57:18Z"}, "message": "tree-vrp.c (set_value_range): Do not reference vrp_equiv_obstack.\n\n\t* tree-vrp.c (set_value_range): Do not reference vrp_equiv_obstack.\n\tGet it from the existing bitmap instead.\n\t(vrp_intersect_ranges_1): Likewise.\n\nFrom-SVN: r254611", "tree": {"sha": "5cf7b700d7275c9f8e406ca0ae7bebdfc1e51711", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5cf7b700d7275c9f8e406ca0ae7bebdfc1e51711"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/51308fc3b6cb2d73b52eed78b431a8fd7223c00d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/51308fc3b6cb2d73b52eed78b431a8fd7223c00d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/51308fc3b6cb2d73b52eed78b431a8fd7223c00d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/51308fc3b6cb2d73b52eed78b431a8fd7223c00d/comments", "author": null, "committer": null, "parents": [{"sha": "5ac29058f01502c407a7b77ec57a08c96941f796", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5ac29058f01502c407a7b77ec57a08c96941f796", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5ac29058f01502c407a7b77ec57a08c96941f796"}], "stats": {"total": 17, "additions": 14, "deletions": 3}, "files": [{"sha": "16bec6ec00b13ea674b0d90c3d180f9619f75ef4", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/51308fc3b6cb2d73b52eed78b431a8fd7223c00d/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/51308fc3b6cb2d73b52eed78b431a8fd7223c00d/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=51308fc3b6cb2d73b52eed78b431a8fd7223c00d", "patch": "@@ -1,3 +1,9 @@\n+2017-11-09  Jeff Law  <law@redhat.com>\n+\n+\t* tree-vrp.c (set_value_range): Do not reference vrp_equiv_obstack.\n+\tGet it from the existing bitmap instead.\n+\t(vrp_intersect_ranges_1): Likewise.\n+\n 2017-11-09  Jakub Jelinek  <jakub@redhat.com>\n \n \t* gimple-ssa-store-merging.c (struct store_immediate_info): Add"}, {"sha": "8e86b060ae789ab8ee90924e145a2d4cfeae1c9a", "filename": "gcc/tree-vrp.c", "status": "modified", "additions": 8, "deletions": 3, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/51308fc3b6cb2d73b52eed78b431a8fd7223c00d/gcc%2Ftree-vrp.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/51308fc3b6cb2d73b52eed78b431a8fd7223c00d/gcc%2Ftree-vrp.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vrp.c?ref=51308fc3b6cb2d73b52eed78b431a8fd7223c00d", "patch": "@@ -272,10 +272,13 @@ set_value_range (value_range *vr, enum value_range_type t, tree min,\n   vr->max = max;\n \n   /* Since updating the equivalence set involves deep copying the\n-     bitmaps, only do it if absolutely necessary.  */\n+     bitmaps, only do it if absolutely necessary.\n+\n+     All equivalence bitmaps are allocated from the same obstack.  So\n+     we can use the obstack associated with EQUIV to allocate vr->equiv.  */\n   if (vr->equiv == NULL\n       && equiv != NULL)\n-    vr->equiv = BITMAP_ALLOC (&vrp_equiv_obstack);\n+    vr->equiv = BITMAP_ALLOC (equiv->obstack);\n \n   if (equiv != vr->equiv)\n     {\n@@ -8828,7 +8831,9 @@ vrp_intersect_ranges_1 (value_range *vr0, value_range *vr1)\n     bitmap_ior_into (vr0->equiv, vr1->equiv);\n   else if (vr1->equiv && !vr0->equiv)\n     {\n-      vr0->equiv = BITMAP_ALLOC (&vrp_equiv_obstack);\n+      /* All equivalence bitmaps are allocated from the same obstack.  So\n+\t we can use the obstack associated with VR to allocate vr0->equiv.  */\n+      vr0->equiv = BITMAP_ALLOC (vr1->equiv->obstack);\n       bitmap_copy (vr0->equiv, vr1->equiv);\n     }\n }"}]}