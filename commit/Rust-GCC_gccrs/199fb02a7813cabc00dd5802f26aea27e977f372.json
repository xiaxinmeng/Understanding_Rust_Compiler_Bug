{"sha": "199fb02a7813cabc00dd5802f26aea27e977f372", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTk5ZmIwMmE3ODEzY2FiYzAwZGQ1ODAyZjI2YWVhMjdlOTc3ZjM3Mg==", "commit": {"author": {"name": "Ilya Enkovich", "email": "enkovich.gnu@gmail.com", "date": "2016-02-12T13:17:28Z"}, "committer": {"name": "Ilya Enkovich", "email": "ienkovich@gcc.gnu.org", "date": "2016-02-12T13:17:28Z"}, "message": "re PR middle-end/69729 ([CHKP] internal compiler error: Segmentation fault)\n\ngcc/\n\n\tPR target/69729\n\t* lto-streamer-out.c (lto_output): Use thunk.add_pointer_bounds_args\n\tto correctly determine instrumentation thunks.\n\ngcc/testsuite/\n\n\t* g++.dg/lto/lto.exp: Include and init mpx.\n\t* g++.dg/lto/pr69729_0.C: New test.\n\nFrom-SVN: r233376", "tree": {"sha": "8bdfec0836975c557ee147985f03070d96b12c85", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8bdfec0836975c557ee147985f03070d96b12c85"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/199fb02a7813cabc00dd5802f26aea27e977f372", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/199fb02a7813cabc00dd5802f26aea27e977f372", "html_url": "https://github.com/Rust-GCC/gccrs/commit/199fb02a7813cabc00dd5802f26aea27e977f372", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/199fb02a7813cabc00dd5802f26aea27e977f372/comments", "author": null, "committer": null, "parents": [{"sha": "06ff700018a769b76d4ec39b487fff46738ce84b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/06ff700018a769b76d4ec39b487fff46738ce84b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/06ff700018a769b76d4ec39b487fff46738ce84b"}], "stats": {"total": 51, "additions": 50, "deletions": 1}, "files": [{"sha": "65b32b85f5676d00ca033ab78984ee7b351e1800", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/199fb02a7813cabc00dd5802f26aea27e977f372/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/199fb02a7813cabc00dd5802f26aea27e977f372/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=199fb02a7813cabc00dd5802f26aea27e977f372", "patch": "@@ -1,3 +1,9 @@\n+2016-02-12  Ilya Enkovich  <enkovich.gnu@gmail.com>\n+\n+\tPR target/69729\n+\t* lto-streamer-out.c (lto_output): Use thunk.add_pointer_bounds_args\n+\tto correctly determine instrumentation thunks.\n+\n 2016-02-12  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR ipa/69241"}, {"sha": "997a28b01598c681b0c5e1cb4513f664c2084e94", "filename": "gcc/lto-streamer-out.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/199fb02a7813cabc00dd5802f26aea27e977f372/gcc%2Flto-streamer-out.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/199fb02a7813cabc00dd5802f26aea27e977f372/gcc%2Flto-streamer-out.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flto-streamer-out.c?ref=199fb02a7813cabc00dd5802f26aea27e977f372", "patch": "@@ -2321,7 +2321,7 @@ lto_output (void)\n \t{\n \t  if (lto_symtab_encoder_encode_body_p (encoder, node)\n \t      && !node->alias\n-\t      && (!node->thunk.thunk_p || !node->instrumented_version))\n+\t      && (!node->thunk.thunk_p || !node->thunk.add_pointer_bounds_args))\n \t    {\n \t      if (flag_checking)\n \t\t{"}, {"sha": "6d65e1f208539df2a1b3780c4f758d5d2a84affa", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/199fb02a7813cabc00dd5802f26aea27e977f372/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/199fb02a7813cabc00dd5802f26aea27e977f372/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=199fb02a7813cabc00dd5802f26aea27e977f372", "patch": "@@ -1,3 +1,8 @@\n+2016-02-12  Ilya Enkovich  <enkovich.gnu@gmail.com>\n+\n+\t* g++.dg/lto/lto.exp: Include and init mpx.\n+\t* g++.dg/lto/pr69729_0.C: New test.\n+\n 2016-02-12  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR ipa/69241"}, {"sha": "48f09476381573327de74fe39a32e161ffaaf8ae", "filename": "gcc/testsuite/g++.dg/lto/lto.exp", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/199fb02a7813cabc00dd5802f26aea27e977f372/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flto%2Flto.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/199fb02a7813cabc00dd5802f26aea27e977f372/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flto%2Flto.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flto%2Flto.exp?ref=199fb02a7813cabc00dd5802f26aea27e977f372", "patch": "@@ -31,6 +31,7 @@ if $tracelevel then {\n load_lib standard.exp\n load_lib g++.exp\n load_lib target-libpath.exp\n+load_lib mpx-dg.exp\n \n # Load the language-independent compabibility support procedures.\n load_lib lto.exp\n@@ -42,6 +43,7 @@ if { ![check_effective_target_lto] } {\n \n g++_init\n lto_init no-mathlib\n+mpx_init\n \n # Define an identifier for use with this suite to avoid name conflicts\n # with other lto tests running at the same time.\n@@ -57,4 +59,5 @@ foreach src [lsort [find $srcdir/$subdir *_0.\\[cC\\]]] {\n     lto-execute $src $sid\n }\n \n+mpx_finish\n lto_finish"}, {"sha": "b736406e0cbed20ae89c0784b0c15eb82382da09", "filename": "gcc/testsuite/g++.dg/lto/pr69729_0.C", "status": "added", "additions": 35, "deletions": 0, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/199fb02a7813cabc00dd5802f26aea27e977f372/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flto%2Fpr69729_0.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/199fb02a7813cabc00dd5802f26aea27e977f372/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flto%2Fpr69729_0.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flto%2Fpr69729_0.C?ref=199fb02a7813cabc00dd5802f26aea27e977f372", "patch": "@@ -0,0 +1,35 @@\n+/* { dg-lto-do link } */\n+/* { dg-require-effective-target mpx } */\n+/* { dg-lto-options {{-fcheck-pointer-bounds -mmpx -flto -flto-partition=max}} } */\n+\n+class cl1\n+{\n+ public:\n+  virtual ~cl1 () { };\n+};\n+\n+class cl2\n+{\n+ public:\n+  virtual ~cl2 () { };\n+};\n+\n+class cl3 : cl1, cl2\n+{\n+};\n+\n+class cl4 : cl3\n+{\n+ public:\n+  ~cl4 ();\n+};\n+\n+cl4::~cl4 ()\n+{\n+}\n+\n+int main (int argc, char **argv)\n+{\n+  cl4 c;\n+  return 0;\n+}"}]}