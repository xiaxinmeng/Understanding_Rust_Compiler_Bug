{"sha": "d48ca70553f3884bff4827c98e1fd21f10bdc463", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDQ4Y2E3MDU1M2YzODg0YmZmNDgyN2M5OGUxZmQyMWYxMGJkYzQ2Mw==", "commit": {"author": {"name": "H.J. Lu", "email": "hongjiu.lu@intel.com", "date": "2015-07-09T12:11:18Z"}, "committer": {"name": "H.J. Lu", "email": "hjl@gcc.gnu.org", "date": "2015-07-09T12:11:18Z"}, "message": "Update config/i386/iamcu.h\n\nCopy ASM_OUTPUT_ALIGNED_BSS, ASM_OUTPUT_MAX_SKIP_ALIGN and\nASM_MAYBE_OUTPUT_ENCODED_ADDR_RTX from config/i386/gnu-user.h.\n\n\t* config/i386/iamcu.h (ASM_OUTPUT_ALIGNED_BSS): New.\n\t(ASM_OUTPUT_MAX_SKIP_ALIGN): Likewise.\n\t(ASM_MAYBE_OUTPUT_ENCODED_ADDR_RTX): Likewise.\n\nFrom-SVN: r225609", "tree": {"sha": "7977c3818fea2fb5776165ed22659db18a60b2f4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7977c3818fea2fb5776165ed22659db18a60b2f4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d48ca70553f3884bff4827c98e1fd21f10bdc463", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d48ca70553f3884bff4827c98e1fd21f10bdc463", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d48ca70553f3884bff4827c98e1fd21f10bdc463", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d48ca70553f3884bff4827c98e1fd21f10bdc463/comments", "author": {"login": "hjl-tools", "id": 1072356, "node_id": "MDQ6VXNlcjEwNzIzNTY=", "avatar_url": "https://avatars.githubusercontent.com/u/1072356?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hjl-tools", "html_url": "https://github.com/hjl-tools", "followers_url": "https://api.github.com/users/hjl-tools/followers", "following_url": "https://api.github.com/users/hjl-tools/following{/other_user}", "gists_url": "https://api.github.com/users/hjl-tools/gists{/gist_id}", "starred_url": "https://api.github.com/users/hjl-tools/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hjl-tools/subscriptions", "organizations_url": "https://api.github.com/users/hjl-tools/orgs", "repos_url": "https://api.github.com/users/hjl-tools/repos", "events_url": "https://api.github.com/users/hjl-tools/events{/privacy}", "received_events_url": "https://api.github.com/users/hjl-tools/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "1916bcb5569bbeef370916731aabfab454b5593d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1916bcb5569bbeef370916731aabfab454b5593d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1916bcb5569bbeef370916731aabfab454b5593d"}], "stats": {"total": 49, "additions": 49, "deletions": 0}, "files": [{"sha": "4e81e8cce047fd1920bbe1cc5a44e218a28dfe4c", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d48ca70553f3884bff4827c98e1fd21f10bdc463/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d48ca70553f3884bff4827c98e1fd21f10bdc463/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=d48ca70553f3884bff4827c98e1fd21f10bdc463", "patch": "@@ -1,3 +1,9 @@\n+2015-07-09  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\t* config/i386/iamcu.h (ASM_OUTPUT_ALIGNED_BSS): New.\n+\t(ASM_OUTPUT_MAX_SKIP_ALIGN): Likewise.\n+\t(ASM_MAYBE_OUTPUT_ENCODED_ADDR_RTX): Likewise.\n+\n 2015-07-09  Andrew MacLeod  <amacleod@redhat.com>\n \n \t* flags.h: Don't include flag-types.h or options.h."}, {"sha": "1e2fbe406424379ebf7e62c80233afbf44ce6437", "filename": "gcc/config/i386/iamcu.h", "status": "modified", "additions": 43, "deletions": 0, "changes": 43, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d48ca70553f3884bff4827c98e1fd21f10bdc463/gcc%2Fconfig%2Fi386%2Fiamcu.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d48ca70553f3884bff4827c98e1fd21f10bdc463/gcc%2Fconfig%2Fi386%2Fiamcu.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fiamcu.h?ref=d48ca70553f3884bff4827c98e1fd21f10bdc463", "patch": "@@ -40,3 +40,46 @@ see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n \n #undef LIB_SPEC\n #define LIB_SPEC \"--start-group -lc -lgloss --end-group\"\n+\n+/* A C statement (sans semicolon) to output to the stdio stream\n+   FILE the assembler definition of uninitialized global DECL named\n+   NAME whose size is SIZE bytes and alignment is ALIGN bytes.\n+   Try to use asm_output_aligned_bss to implement this macro.  */\n+\n+#define ASM_OUTPUT_ALIGNED_BSS(FILE, DECL, NAME, SIZE, ALIGN) \\\n+  asm_output_aligned_bss (FILE, DECL, NAME, SIZE, ALIGN)\n+\n+/* A C statement to output to the stdio stream FILE an assembler\n+   command to advance the location counter to a multiple of 1<<LOG\n+   bytes if it is within MAX_SKIP bytes.\n+\n+   This is used to align code labels according to Intel recommendations.  */\n+\n+#define ASM_OUTPUT_MAX_SKIP_ALIGN(FILE,LOG,MAX_SKIP)\t\t\t\\\n+  do {\t\t\t\t\t\t\t\t\t\\\n+    if ((LOG) != 0) {\t\t\t\t\t\t\t\\\n+      if ((MAX_SKIP) == 0) fprintf ((FILE), \"\\t.p2align %d\\n\", (LOG));\t\\\n+      else {\t\t\t\t\t\t\t\t\\\n+\tfprintf ((FILE), \"\\t.p2align %d,,%d\\n\", (LOG), (MAX_SKIP));\t\\\n+\t/* Make sure that we have at least 8 byte alignment if > 8 byte \\\n+\t   alignment is preferred.  */\t\t\t\t\t\\\n+\tif ((LOG) > 3\t\t\t\t\t\t\t\\\n+\t    && (1 << (LOG)) > ((MAX_SKIP) + 1)\t\t\t\t\\\n+\t    && (MAX_SKIP) >= 7)\t\t\t\t\t\t\\\n+\t  fputs (\"\\t.p2align 3\\n\", (FILE));\t\t\t\t\\\n+      }\t\t\t\t\t\t\t\t\t\\\n+    }\t\t\t\t\t\t\t\t\t\\\n+  } while (0)\n+\n+/* Handle special EH pointer encodings.  Absolute, pc-relative, and\n+   indirect are handled automatically.  */\n+#define ASM_MAYBE_OUTPUT_ENCODED_ADDR_RTX(FILE, ENCODING, SIZE, ADDR, DONE) \\\n+  do {\t\t\t\t\t\t\t\t\t\\\n+    if ((SIZE) == 4 && ((ENCODING) & 0x70) == DW_EH_PE_datarel)\t\t\\\n+      {\t\t\t\t\t\t\t\t\t\\\n+        fputs (ASM_LONG, FILE);\t\t\t\t\t\t\\\n+        assemble_name (FILE, XSTR (ADDR, 0));\t\t\t\t\\\n+\tfputs (((ENCODING) & DW_EH_PE_indirect ? \"@GOT\" : \"@GOTOFF\"), FILE); \\\n+        goto DONE;\t\t\t\t\t\t\t\\\n+      }\t\t\t\t\t\t\t\t\t\\\n+  } while (0)"}]}