{"sha": "9037b0c71ed8277d06fd67fff15ea40aee9754ef", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTAzN2IwYzcxZWQ4Mjc3ZDA2ZmQ2N2ZmZjE1ZWE0MGFlZTk3NTRlZg==", "commit": {"author": {"name": "Aldy Hernandez", "email": "aldyh@redhat.com", "date": "2003-02-12T20:25:38Z"}, "committer": {"name": "Aldy Hernandez", "email": "aldyh@gcc.gnu.org", "date": "2003-02-12T20:25:38Z"}, "message": "spe.h: Fix misc formatting.\n\n2003-02-12  Aldy Hernandez  <aldyh@redhat.com>\n\n        * config/rs6000/spe.h: Fix misc formatting.\n        (__ev_create_ufix32_fs): Cast ev argument.\n        (__ev_create_sfix32_fs): Same.\n        (__ev_get_sfix32_fs_internal): Cast arguments to builtins.\n        (__ev_get_ufix32_fs_internal): Same.\n\nFrom-SVN: r62788", "tree": {"sha": "0e8f244c58b71a12e29a54f9b48d735176ad3d49", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0e8f244c58b71a12e29a54f9b48d735176ad3d49"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9037b0c71ed8277d06fd67fff15ea40aee9754ef", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9037b0c71ed8277d06fd67fff15ea40aee9754ef", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9037b0c71ed8277d06fd67fff15ea40aee9754ef", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9037b0c71ed8277d06fd67fff15ea40aee9754ef/comments", "author": {"login": "aldyh", "id": 12937877, "node_id": "MDQ6VXNlcjEyOTM3ODc3", "avatar_url": "https://avatars.githubusercontent.com/u/12937877?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aldyh", "html_url": "https://github.com/aldyh", "followers_url": "https://api.github.com/users/aldyh/followers", "following_url": "https://api.github.com/users/aldyh/following{/other_user}", "gists_url": "https://api.github.com/users/aldyh/gists{/gist_id}", "starred_url": "https://api.github.com/users/aldyh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aldyh/subscriptions", "organizations_url": "https://api.github.com/users/aldyh/orgs", "repos_url": "https://api.github.com/users/aldyh/repos", "events_url": "https://api.github.com/users/aldyh/events{/privacy}", "received_events_url": "https://api.github.com/users/aldyh/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "30dca1c87e5f39c1c792be9ff3acfe8e2355e10a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/30dca1c87e5f39c1c792be9ff3acfe8e2355e10a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/30dca1c87e5f39c1c792be9ff3acfe8e2355e10a"}], "stats": {"total": 267, "additions": 104, "deletions": 163}, "files": [{"sha": "d2cd82a3ea1c2aea765356173282bef0b32a8291", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9037b0c71ed8277d06fd67fff15ea40aee9754ef/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9037b0c71ed8277d06fd67fff15ea40aee9754ef/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=9037b0c71ed8277d06fd67fff15ea40aee9754ef", "patch": "@@ -1,3 +1,12 @@\n+2003-02-12  Aldy Hernandez  <aldyh@redhat.com>\n+\n+        * config/rs6000/spe.h: Fix misc formatting.\n+        (__ev_create_ufix32_fs): Cast ev argument.\n+        (__ev_create_sfix32_fs): Same.\n+        (__ev_get_sfix32_fs_internal): Cast arguments to builtins.\n+        (__ev_get_ufix32_fs_internal): Same.\n+\n+\n 2003-02-12  Ranjit Mathew  <rmathew@hotmail.com>\n \n \t* doc/tm.texi (MODIFY_JNI_METHOD_CALL): Document."}, {"sha": "cf09a7045a9efaa9a956d0c98924cf485f0cc2c6", "filename": "gcc/config/rs6000/spe.h", "status": "modified", "additions": 95, "deletions": 163, "changes": 258, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9037b0c71ed8277d06fd67fff15ea40aee9754ef/gcc%2Fconfig%2Frs6000%2Fspe.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9037b0c71ed8277d06fd67fff15ea40aee9754ef/gcc%2Fconfig%2Frs6000%2Fspe.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Fspe.h?ref=9037b0c71ed8277d06fd67fff15ea40aee9754ef", "patch": "@@ -1,5 +1,5 @@\n /* PowerPC E500 user include file.\n-   Copyright (C) 2002 Free Software Foundation, Inc.\n+   Copyright (C) 2002, 2003 Free Software Foundation, Inc.\n    Contributed by Aldy Hernandez (aldyh@redhat.com).\n \n This file is part of GNU CC.\n@@ -45,7 +45,6 @@ typedef unsigned \t\t__vector __ev64_u32__;\n typedef long long \t\t__ev64_s64__;\n typedef unsigned long long \t__ev64_u64__;\n typedef float \t\t\t__vector __ev64_fs__;\n-\n typedef int \t\t\t__vector __ev64_opaque__;\n \n #define __v2si __ev64_opaque__\n@@ -290,8 +289,8 @@ typedef int \t\t\t__vector __ev64_opaque__;\n \n /* Floating Point SIMD Instructions  */\n \n-/* These all return V2SF, but we need to cast them to V2SI because the SPE\n-   expect all functions to be __ev64_opaque__.  */\n+/* These all return V2SF, but we need to cast them to V2SI\n+   because the SPE expect all functions to be __ev64_opaque__.  */\n \n #define __ev_fsabs(a) ((__v2si) __builtin_spe_evfsabs ((__v2sf) a))\n #define __ev_fsnabs(a) ((__v2si) __builtin_spe_evfsnabs ((__v2sf) a))\n@@ -328,7 +327,6 @@ typedef int \t\t\t__vector __ev64_opaque__;\n #define __ev_mwhgsmfan(a, b) __internal_ev_mwhgsmfan ((__v2si) (a), (__v2si) (b))\n #define __ev_mwhgsmian(a, b) __internal_ev_mwhgsmian ((__v2si) (a), (__v2si) (b))\n #define __ev_mwhgumian(a, b) __internal_ev_mwhgumian ((__v2si) (a), (__v2si) (b))\n-\n #define __ev_mwhssiaaw(a, b) __internal_ev_mwhssiaaw ((__v2si) (a), (__v2si) (b))\n #define __ev_mwhssfaaw(a, b) __internal_ev_mwhssfaaw ((__v2si) (a), (__v2si) (b))\n #define __ev_mwhsmfaaw(a, b) __internal_ev_mwhsmfaaw ((__v2si) (a), (__v2si) (b))\n@@ -348,15 +346,15 @@ __internal_ev_mwhssfaaw (__ev64_opaque__ a, __ev64_opaque__ b)\n   __ev64_opaque__ t;\n \n   t = __ev_mwhssf (a, b);\n-  return __ev_addssiaaw(t);\n+  return __ev_addssiaaw (t);\n }\n \n static inline __ev64_opaque__\n __internal_ev_mwhssiaaw (__ev64_opaque__ a, __ev64_opaque__ b)\n {\n   __ev64_opaque__ t;\n   \n-  t = __ev_mwhsmi (a,b);\n+  t = __ev_mwhsmi (a, b);\n   return __ev_addssiaaw (t);\n }\n \n@@ -365,7 +363,7 @@ __internal_ev_mwhsmfaaw (__ev64_opaque__ a, __ev64_opaque__ b)\n {\n   __ev64_opaque__ t;\n \n-  t = __ev_mwhsmf (a,b);\n+  t = __ev_mwhsmf (a, b);\n   return __ev_addsmiaaw (t);\n }\n  \n@@ -374,7 +372,7 @@ __internal_ev_mwhsmiaaw (__ev64_opaque__ a, __ev64_opaque__ b)\n {\n   __ev64_opaque__ t;\n \n-  t = __ev_mwhsmi (a,b);\n+  t = __ev_mwhsmi (a, b);\n   return __ev_addsmiaaw (t);\n }\n  \n@@ -383,7 +381,7 @@ __internal_ev_mwhusiaaw (__ev64_opaque__ a, __ev64_opaque__ b)\n {\n   __ev64_opaque__ t;\n \n-  t = __ev_mwhumi (a,b);\n+  t = __ev_mwhumi (a, b);\n   return __ev_addusiaaw (t);\n }\n  \n@@ -392,7 +390,7 @@ __internal_ev_mwhumiaaw (__ev64_opaque__ a, __ev64_opaque__ b)\n {\n   __ev64_opaque__ t;\n \n-  t = __ev_mwhumi (a,b);\n+  t = __ev_mwhumi (a, b);\n   return __ev_addumiaaw (t);\n }\n  \n@@ -401,7 +399,7 @@ __internal_ev_mwhssfanw (__ev64_opaque__ a, __ev64_opaque__ b)\n {\n   __ev64_opaque__ t;\n \n-  t = __ev_mwhssf (a,b);\n+  t = __ev_mwhssf (a, b);\n   return __ev_subfssiaaw (t);\n }\n \n@@ -410,7 +408,7 @@ __internal_ev_mwhssianw (__ev64_opaque__ a, __ev64_opaque__ b)\n {\n   __ev64_opaque__ t;\n \n-  t = __ev_mwhsmi (a,b);\n+  t = __ev_mwhsmi (a, b);\n   return __ev_subfssiaaw (t);\n }\n  \n@@ -419,7 +417,7 @@ __internal_ev_mwhsmfanw (__ev64_opaque__ a, __ev64_opaque__ b)\n {\n   __ev64_opaque__ t;\n \n-  t = __ev_mwhsmf (a,b);\n+  t = __ev_mwhsmf (a, b);\n   return __ev_subfsmiaaw (t);\n }\n  \n@@ -428,7 +426,7 @@ __internal_ev_mwhsmianw (__ev64_opaque__ a, __ev64_opaque__ b)\n {\n   __ev64_opaque__ t;\n \n-  t = __ev_mwhsmi (a,b);\n+  t = __ev_mwhsmi (a, b);\n   return __ev_subfsmiaaw (t);\n }\n  \n@@ -437,7 +435,7 @@ __internal_ev_mwhusianw (__ev64_opaque__ a, __ev64_opaque__ b)\n {\n   __ev64_opaque__ t;\n \n-  t = __ev_mwhumi (a,b);\n+  t = __ev_mwhumi (a, b);\n   return __ev_subfusiaaw (t);\n }\n  \n@@ -446,7 +444,7 @@ __internal_ev_mwhumianw (__ev64_opaque__ a, __ev64_opaque__ b)\n {\n   __ev64_opaque__ t;\n \n-  t = __ev_mwhumi (a,b);\n+  t = __ev_mwhumi (a, b);\n   return __ev_subfumiaaw (t);\n }\n \n@@ -615,7 +613,7 @@ __ev_create_sfix32_fs (float a, float b)\n   __ev64_opaque__ ev;\n \n   ev = (__ev64_opaque__) __ev_create_fs (a, b);\n-  return (__ev64_opaque__) __builtin_spe_evfsctsf (ev);\n+  return (__ev64_opaque__) __builtin_spe_evfsctsf ((__v2sf) ev);\n }\n \n static inline __ev64_opaque__\n@@ -624,7 +622,7 @@ __ev_create_ufix32_fs (float a, float b)\n   __ev64_opaque__ ev;\n \n   ev = (__ev64_opaque__) __ev_create_fs (a, b);\n-  return (__ev64_opaque__) __builtin_spe_evfsctuf (ev);\n+  return (__ev64_opaque__) __builtin_spe_evfsctuf ((__v2sf) ev);\n }\n \n static inline __ev64_opaque__\n@@ -728,17 +726,17 @@ __ev_get_sfix32_fs_internal (__ev64_opaque__ a, uint32_t pos)\n {\n   __ev64_fs__ v;\n \n-  v = __builtin_spe_evfscfsf (a);\n-  return __ev_get_fs_internal (v, pos);\n+  v = __builtin_spe_evfscfsf ((__v2sf) a);\n+  return __ev_get_fs_internal ((__ev64_opaque__) v, pos);\n }\n \n static inline float\n __ev_get_ufix32_fs_internal (__ev64_opaque__ a, uint32_t pos)\n {\n   __ev64_fs__ v;\n \n-  v = __builtin_spe_evfscfuf (a);\n-  return __ev_get_fs_internal (v, pos);\n+  v = __builtin_spe_evfscfuf ((__v2sf) a);\n+  return __ev_get_fs_internal ((__ev64_opaque__) v, pos);\n }\n \n static inline uint16_t\n@@ -781,7 +779,7 @@ __ev_get_s16_internal (__ev64_opaque__ a, uint32_t pos)\n #define __ev_set_sfix32_fs(a, b, c)  __ev_set_sfix32_fs_internal ((__ev64_opaque__) (a), b, c)\n #define __ev_set_ufix32_fs(a, b, c)  __ev_set_ufix32_fs_internal ((__ev64_opaque__) (a), b, c)\n \n-#define __ev_set_upper_u32(a, b) __ev_set_u32(a, b, 0)\n+#define __ev_set_upper_u32(a, b) __ev_set_u32 (a, b, 0)\n #define __ev_set_lower_u32(a, b) __ev_set_u32 (a, b, 1)\n #define __ev_set_upper_s32(a, b) __ev_set_s32 (a, b, 0)\n #define __ev_set_lower_s32(a, b) __ev_set_s32 (a, b, 1)\n@@ -817,7 +815,7 @@ __ev_set_acc_s64 (int64_t a)\n }\n \n static inline __ev64_opaque__\n-__ev_set_u32_internal (__ev64_opaque__ a, uint32_t b, uint32_t pos )\n+__ev_set_u32_internal (__ev64_opaque__ a, uint32_t b, uint32_t pos)\n {\n   union\n   {\n@@ -831,7 +829,7 @@ __ev_set_u32_internal (__ev64_opaque__ a, uint32_t b, uint32_t pos )\n }\n \n static inline __ev64_opaque__\n-__ev_set_s32_internal (__ev64_opaque__ a, int32_t b, uint32_t pos )\n+__ev_set_s32_internal (__ev64_opaque__ a, int32_t b, uint32_t pos)\n {\n   union\n   {\n@@ -845,7 +843,7 @@ __ev_set_s32_internal (__ev64_opaque__ a, int32_t b, uint32_t pos )\n }\n \n static inline __ev64_opaque__\n-__ev_set_fs_internal (__ev64_opaque__ a, float b, uint32_t pos )\n+__ev_set_fs_internal (__ev64_opaque__ a, float b, uint32_t pos)\n {\n   union\n   {\n@@ -891,7 +889,7 @@ __ev_set_ufix32_fs_internal (__ev64_opaque__ a, float b, uint32_t pos)\n }\n \n static inline __ev64_opaque__\n-__ev_set_u16_internal (__ev64_opaque__ a, uint16_t b, uint32_t pos )\n+__ev_set_u16_internal (__ev64_opaque__ a, uint16_t b, uint32_t pos)\n {\n   union\n   {\n@@ -905,7 +903,7 @@ __ev_set_u16_internal (__ev64_opaque__ a, uint16_t b, uint32_t pos )\n }\n \n static inline __ev64_opaque__\n-__ev_set_s16_internal (__ev64_opaque__ a, int16_t b, uint32_t pos )\n+__ev_set_s16_internal (__ev64_opaque__ a, int16_t b, uint32_t pos)\n {\n   union\n   {\n@@ -925,136 +923,70 @@ __ev_set_s16_internal (__ev64_opaque__ a, int16_t b, uint32_t pos )\n #define __pred_upper\t2\n #define __pred_lower\t3\n \n-#define __ev_any_gts(a, b) \\\n-\t__builtin_spe_evcmpgts (__pred_any, (__v2si)(a), (__v2si)(b))\n-#define __ev_all_gts(a, b) \\\n-\t__builtin_spe_evcmpgts (__pred_all, (__v2si)(a), (__v2si)(b))\n-#define __ev_upper_gts(a, b) \\\n-\t__builtin_spe_evcmpgts (__pred_upper, (__v2si)(a), (__v2si)(b))\n-#define __ev_lower_gts(a, b) \\\n-\t__builtin_spe_evcmpgts (__pred_lower, (__v2si)(a), (__v2si)(b))\n-#define __ev_select_gts(a, b, c, d) \\\n-\t((__v2si) __builtin_spe_evsel_gts ((__v2si)(a), (__v2si)(b), \\\n-\t\t\t\t\t   (__v2si)(c), (__v2si)(d)))\n-\n-#define __ev_any_gtu(a, b) \\\n-\t__builtin_spe_evcmpgtu (__pred_any, (__v2si)(a), (__v2si)(b))\n-#define __ev_all_gtu(a, b) \\\n-\t__builtin_spe_evcmpgtu (__pred_all, (__v2si)(a), (__v2si)(b))\n-#define __ev_upper_gtu(a, b) \\\n-\t__builtin_spe_evcmpgtu (__pred_upper, (__v2si)(a), (__v2si)(b))\n-#define __ev_lower_gtu(a, b) \\\n-\t__builtin_spe_evcmpgtu (__pred_lower, (__v2si)(a), (__v2si)(b))\n-#define __ev_select_gtu(a, b, c, d) \\\n-\t((__v2si) __builtin_spe_evsel_gtu ((__v2si)(a), (__v2si)(b), \\\n-\t\t\t\t\t   (__v2si)(c), (__v2si)(d)))\n-\n-#define __ev_any_lts(a, b) \\\n-\t__builtin_spe_evcmplts (__pred_any, (__v2si)(a), (__v2si)(b))\n-#define __ev_all_lts(a, b) \\\n-\t__builtin_spe_evcmplts (__pred_all, (__v2si)(a), (__v2si)(b))\n-#define __ev_upper_lts(a, b) \\\n-\t__builtin_spe_evcmplts (__pred_upper, (__v2si)(a), (__v2si)(b))\n-#define __ev_lower_lts(a, b) \\\n-\t__builtin_spe_evcmplts (__pred_lower, (__v2si)(a), (__v2si)(b))\n-#define __ev_select_lts(a, b, c, d) \\\n-\t((__v2si) __builtin_spe_evsel_lts ((__v2si)(a), (__v2si)(b), \\\n-\t\t\t\t\t   (__v2si)(c), (__v2si)(d)))\n-\n-#define __ev_any_ltu(a, b) \\\n-\t__builtin_spe_evcmpltu (__pred_any, (__v2si)(a), (__v2si)(b))\n-#define __ev_all_ltu(a, b) \\\n-\t__builtin_spe_evcmpltu (__pred_all, (__v2si)(a), (__v2si)(b))\n-#define __ev_upper_ltu(a, b) \\\n-\t__builtin_spe_evcmpltu (__pred_upper, (__v2si)(a), (__v2si)(b))\n-#define __ev_lower_ltu(a, b) \\\n-\t__builtin_spe_evcmpltu (__pred_lower, (__v2si)(a), (__v2si)(b))\n-#define __ev_select_ltu(a, b, c, d) \\\n-\t((__v2si) __builtin_spe_evsel_ltu ((__v2si)(a), (__v2si)(b), \\\n-\t\t\t\t\t   (__v2si)(c), (__v2si)(d)))\n-#define __ev_any_eq(a, b) \\\n-\t__builtin_spe_evcmpeq (__pred_any, (__v2si)(a), (__v2si)(b))\n-#define __ev_all_eq(a, b) \\\n-\t__builtin_spe_evcmpeq (__pred_all, (__v2si)(a), (__v2si)(b))\n-#define __ev_upper_eq(a, b) \\\n-\t__builtin_spe_evcmpeq (__pred_upper, (__v2si)(a), (__v2si)(b))\n-#define __ev_lower_eq(a, b) \\\n-\t__builtin_spe_evcmpeq (__pred_lower, (__v2si)(a), (__v2si)(b))\n-#define __ev_select_eq(a, b, c, d) \\\n-\t((__v2si) __builtin_spe_evsel_eq ((__v2si)(a), (__v2si)(b), \\\n-\t\t\t\t\t  (__v2si)(c), (__v2si)(d)))\n-\n-#define __ev_any_fs_gt(a, b) \\\n-\t__builtin_spe_evfscmpgt (__pred_any, (__v2sf)(a), (__v2sf)(b))\n-#define __ev_all_fs_gt(a, b) \\\n-\t__builtin_spe_evfscmpgt (__pred_all, (__v2sf)(a), (__v2sf)(b))\n-#define __ev_upper_fs_gt(a, b) \\\n-\t__builtin_spe_evfscmpgt (__pred_upper, (__v2sf)(a), (__v2sf)(b))\n-#define __ev_lower_fs_gt(a, b) \\\n-\t__builtin_spe_evfscmpgt (__pred_lower, (__v2sf)(a), (__v2sf)(b))\n-#define __ev_select_fs_gt(a, b, c, d) \\\n-\t((__v2si) __builtin_spe_evsel_fsgt ((__v2sf)(a), (__v2sf)(b), \\\n-\t\t\t\t\t    (__v2sf)(c), (__v2sf)(d)))\n-\n-#define __ev_any_fs_lt(a, b) \\\n-\t__builtin_spe_evfscmplt (__pred_any, (__v2sf)(a), (__v2sf)(b))\n-#define __ev_all_fs_lt(a, b) \\\n-\t__builtin_spe_evfscmplt (__pred_all, (__v2sf)(a), (__v2sf)(b))\n-#define __ev_upper_fs_lt(a, b) \\\n-\t__builtin_spe_evfscmplt (__pred_upper, (__v2sf)(a), (__v2sf)(b))\n-#define __ev_lower_fs_lt(a, b) \\\n-\t__builtin_spe_evfscmplt (__pred_lower, (__v2sf)(a), (__v2sf)(b))\n-#define __ev_select_fs_lt(a, b, c, d) \\\n-\t((__v2si) __builtin_spe_evsel_fslt ((__v2sf)(a), (__v2sf)(b), \\\n-\t\t\t\t\t    (__v2sf)(c), (__v2sf)(d)))\n-\n-#define __ev_any_fs_eq(a, b) \\\n-\t__builtin_spe_evfscmpeq (__pred_any, (__v2sf)(a), (__v2sf)(b))\n-#define __ev_all_fs_eq(a, b) \\\n-\t__builtin_spe_evfscmpeq (__pred_all, (__v2sf)(a), (__v2sf)(b))\n-#define __ev_upper_fs_eq(a, b) \\\n-\t__builtin_spe_evfscmpeq (__pred_upper, (__v2sf)(a), (__v2sf)(b))\n-#define __ev_lower_fs_eq(a, b) \\\n-\t__builtin_spe_evfscmpeq (__pred_lower, (__v2sf)(a), (__v2sf)(b))\n-#define __ev_select_fs_eq(a, b, c, d) \\\n-\t((__v2si) __builtin_spe_evsel_fseq ((__v2sf)(a), (__v2sf)(b), \\\n-\t\t\t\t\t    (__v2sf)(c), (__v2sf)(d)))\n-\n-#define __ev_any_fs_tst_gt(a, b) \\\n-\t__builtin_spe_evfststgt (__pred_any, (__v2sf)(a), (__v2sf)(b))\n-#define __ev_all_fs_tst_gt(a, b) \\\n-\t__builtin_spe_evfststgt (__pred_all, (__v2sf)(a), (__v2sf)(b))\n-#define __ev_upper_fs_tst_gt(a, b) \\\n-\t__builtin_spe_evfststgt (__pred_upper, (__v2sf)(a), (__v2sf)(b))\n-#define __ev_lower_fs_tst_gt(a, b) \\\n-\t__builtin_spe_evfststgt (__pred_lower, (__v2sf)(a), (__v2sf)(b))\n-#define __ev_select_fs_tst_gt(a, b, c, d) \\\n-\t((__v2si) __builtin_spe_evsel_fststgt ((__v2sf)(a), (__v2sf)(b), \\\n-\t\t\t\t\t       (__v2sf)(c), (__v2sf)(d)))\n-\n-#define __ev_any_fs_tst_lt(a, b) \\\n-\t__builtin_spe_evfststlt (__pred_any, (__v2sf)(a), (__v2sf)(b))\n-#define __ev_all_fs_tst_lt(a, b) \\\n-\t__builtin_spe_evfststlt (__pred_all, (__v2sf)(a), (__v2sf)(b))\n-#define __ev_upper_fs_tst_lt(a, b) \\\n-\t__builtin_spe_evfststlt (__pred_upper, (__v2sf)(a), (__v2sf)(b))\n-#define __ev_lower_fs_tst_lt(a, b) \\\n-\t__builtin_spe_evfststlt (__pred_lower, (__v2sf)(a), (__v2sf)(b))\n-#define __ev_select_fs_tst_lt(a, b, c, d) \\\n-\t((__v2si) __builtin_spe_evsel_fststlt ((__v2sf)(a), (__v2sf)(b), \\\n-\t\t\t\t\t       (__v2sf)(c), (__v2sf)(d)))\n-\n-#define __ev_any_fs_tst_eq(a, b) \\\n-\t__builtin_spe_evfststeq (__pred_any, (__v2sf)(a), (__v2sf)(b))\n-#define __ev_all_fs_tst_eq(a, b) \\\n-\t__builtin_spe_evfststeq (__pred_all, (__v2sf)(a), (__v2sf)(b))\n-#define __ev_upper_fs_tst_eq(a, b) \\\n-\t__builtin_spe_evfststeq (__pred_upper, (__v2sf)(a), (__v2sf)(b))\n-#define __ev_lower_fs_tst_eq(a, b) \\\n-\t__builtin_spe_evfststeq (__pred_lower, (__v2sf)(a), (__v2sf)(b))\n-#define __ev_select_fs_tst_eq(a, b, c, d) \\\n-\t((__v2si) __builtin_spe_evsel_fststeq ((__v2sf)(a), (__v2sf)(b), \\\n-\t\t\t\t\t       (__v2sf)(c), (__v2sf)(d)))\n+#define __ev_any_gts(a, b)\t\t__builtin_spe_evcmpgts (__pred_any, (__v2si) (a), (__v2si) (b))\n+#define __ev_all_gts(a, b)\t\t__builtin_spe_evcmpgts (__pred_all, (__v2si) (a), (__v2si) (b))\n+#define __ev_upper_gts(a, b)\t\t__builtin_spe_evcmpgts (__pred_upper, (__v2si) (a), (__v2si) (b))\n+#define __ev_lower_gts(a, b)\t\t__builtin_spe_evcmpgts (__pred_lower, (__v2si) (a), (__v2si) (b))\n+#define __ev_select_gts(a, b, c, d) \t((__v2si) __builtin_spe_evsel_gts ((__v2si) (a), (__v2si) (b), (__v2si) (c), (__v2si) (d)))\n+\n+#define __ev_any_gtu(a, b)\t\t__builtin_spe_evcmpgtu (__pred_any, (__v2si) (a), (__v2si) (b))\n+#define __ev_all_gtu(a, b)\t\t__builtin_spe_evcmpgtu (__pred_all, (__v2si) (a), (__v2si) (b))\n+#define __ev_upper_gtu(a, b)\t\t__builtin_spe_evcmpgtu (__pred_upper, (__v2si) (a), (__v2si) (b))\n+#define __ev_lower_gtu(a, b)\t\t__builtin_spe_evcmpgtu (__pred_lower, (__v2si) (a), (__v2si) (b))\n+#define __ev_select_gtu(a, b, c, d) \t((__v2si) __builtin_spe_evsel_gtu ((__v2si) (a), (__v2si) (b), (__v2si) (c), (__v2si) (d)))\n+\n+#define __ev_any_lts(a, b)\t\t__builtin_spe_evcmplts (__pred_any, (__v2si) (a), (__v2si) (b))\n+#define __ev_all_lts(a, b)\t\t__builtin_spe_evcmplts (__pred_all, (__v2si) (a), (__v2si) (b))\n+#define __ev_upper_lts(a, b)\t\t__builtin_spe_evcmplts (__pred_upper, (__v2si) (a), (__v2si) (b))\n+#define __ev_lower_lts(a, b)\t\t__builtin_spe_evcmplts (__pred_lower, (__v2si) (a), (__v2si) (b))\n+#define __ev_select_lts(a, b, c, d) \t((__v2si) __builtin_spe_evsel_lts ((__v2si) (a), (__v2si) (b), (__v2si) (c), (__v2si) (d)))\n+\n+#define __ev_any_ltu(a, b)\t\t__builtin_spe_evcmpltu (__pred_any, (__v2si) (a), (__v2si) (b))\n+#define __ev_all_ltu(a, b)\t\t__builtin_spe_evcmpltu (__pred_all, (__v2si) (a), (__v2si) (b))\n+#define __ev_upper_ltu(a, b)\t\t__builtin_spe_evcmpltu (__pred_upper, (__v2si) (a), (__v2si) (b))\n+#define __ev_lower_ltu(a, b)\t\t__builtin_spe_evcmpltu (__pred_lower, (__v2si) (a), (__v2si) (b))\n+#define __ev_select_ltu(a, b, c, d) \t((__v2si) __builtin_spe_evsel_ltu ((__v2si) (a), (__v2si) (b), (__v2si) (c), (__v2si) (d)))\n+#define __ev_any_eq(a, b)\t\t__builtin_spe_evcmpeq (__pred_any, (__v2si) (a), (__v2si) (b))\n+#define __ev_all_eq(a, b)\t\t__builtin_spe_evcmpeq (__pred_all, (__v2si) (a), (__v2si) (b))\n+#define __ev_upper_eq(a, b)\t\t__builtin_spe_evcmpeq (__pred_upper, (__v2si) (a), (__v2si) (b))\n+#define __ev_lower_eq(a, b)\t\t__builtin_spe_evcmpeq (__pred_lower, (__v2si) (a), (__v2si) (b))\n+#define __ev_select_eq(a, b, c, d) \t((__v2si) __builtin_spe_evsel_eq ((__v2si) (a), (__v2si) (b), (__v2si) (c), (__v2si) (d)))\n+\n+#define __ev_any_fs_gt(a, b)\t\t__builtin_spe_evfscmpgt (__pred_any, (__v2sf) (a), (__v2sf) (b))\n+#define __ev_all_fs_gt(a, b)\t\t__builtin_spe_evfscmpgt (__pred_all, (__v2sf) (a), (__v2sf) (b))\n+#define __ev_upper_fs_gt(a, b)\t\t__builtin_spe_evfscmpgt (__pred_upper, (__v2sf) (a), (__v2sf) (b))\n+#define __ev_lower_fs_gt(a, b)\t\t__builtin_spe_evfscmpgt (__pred_lower, (__v2sf) (a), (__v2sf) (b))\n+#define __ev_select_fs_gt(a, b, c, d)\t((__v2si) __builtin_spe_evsel_fsgt ((__v2sf) (a), (__v2sf) (b), (__v2sf) (c), (__v2sf) (d)))\n+\n+#define __ev_any_fs_lt(a, b)\t\t__builtin_spe_evfscmplt (__pred_any, (__v2sf) (a), (__v2sf) (b))\n+#define __ev_all_fs_lt(a, b)\t\t__builtin_spe_evfscmplt (__pred_all, (__v2sf) (a), (__v2sf) (b))\n+#define __ev_upper_fs_lt(a, b)\t\t__builtin_spe_evfscmplt (__pred_upper, (__v2sf) (a), (__v2sf) (b))\n+#define __ev_lower_fs_lt(a, b)\t\t__builtin_spe_evfscmplt (__pred_lower, (__v2sf) (a), (__v2sf) (b))\n+#define __ev_select_fs_lt(a, b, c, d)\t((__v2si) __builtin_spe_evsel_fslt ((__v2sf) (a), (__v2sf) (b), (__v2sf) (c), (__v2sf) (d)))\n+\n+#define __ev_any_fs_eq(a, b)\t\t__builtin_spe_evfscmpeq (__pred_any, (__v2sf) (a), (__v2sf) (b))\n+#define __ev_all_fs_eq(a, b)\t\t__builtin_spe_evfscmpeq (__pred_all, (__v2sf) (a), (__v2sf) (b))\n+#define __ev_upper_fs_eq(a, b)\t\t__builtin_spe_evfscmpeq (__pred_upper, (__v2sf) (a), (__v2sf) (b))\n+#define __ev_lower_fs_eq(a, b)\t\t__builtin_spe_evfscmpeq (__pred_lower, (__v2sf) (a), (__v2sf) (b))\n+#define __ev_select_fs_eq(a, b, c, d)\t((__v2si) __builtin_spe_evsel_fseq ((__v2sf) (a), (__v2sf) (b), (__v2sf) (c), (__v2sf) (d)))\n+\n+#define __ev_any_fs_tst_gt(a, b)\t__builtin_spe_evfststgt (__pred_any, (__v2sf) (a), (__v2sf) (b))\n+#define __ev_all_fs_tst_gt(a, b)\t__builtin_spe_evfststgt (__pred_all, (__v2sf) (a), (__v2sf) (b))\n+#define __ev_upper_fs_tst_gt(a, b)\t__builtin_spe_evfststgt (__pred_upper, (__v2sf) (a), (__v2sf) (b))\n+#define __ev_lower_fs_tst_gt(a, b)\t__builtin_spe_evfststgt (__pred_lower, (__v2sf) (a), (__v2sf) (b))\n+#define __ev_select_fs_tst_gt(a, b, c, d)\t((__v2si) __builtin_spe_evsel_fststgt ((__v2sf) (a), (__v2sf) (b), (__v2sf) (c), (__v2sf) (d)))\n+\n+#define __ev_any_fs_tst_lt(a, b)\t__builtin_spe_evfststlt (__pred_any, (__v2sf) (a), (__v2sf) (b))\n+#define __ev_all_fs_tst_lt(a, b)\t__builtin_spe_evfststlt (__pred_all, (__v2sf) (a), (__v2sf) (b))\n+#define __ev_upper_fs_tst_lt(a, b)\t__builtin_spe_evfststlt (__pred_upper, (__v2sf) (a), (__v2sf) (b))\n+#define __ev_lower_fs_tst_lt(a, b)\t__builtin_spe_evfststlt (__pred_lower, (__v2sf) (a), (__v2sf) (b))\n+#define __ev_select_fs_tst_lt(a, b, c, d)\t((__v2si) __builtin_spe_evsel_fststlt ((__v2sf) (a), (__v2sf) (b), (__v2sf) (c), (__v2sf) (d)))\n+\n+#define __ev_any_fs_tst_eq(a, b)\t__builtin_spe_evfststeq (__pred_any, (__v2sf) (a), (__v2sf) (b))\n+#define __ev_all_fs_tst_eq(a, b)\t__builtin_spe_evfststeq (__pred_all, (__v2sf) (a), (__v2sf) (b))\n+#define __ev_upper_fs_tst_eq(a, b)\t__builtin_spe_evfststeq (__pred_upper, (__v2sf) (a), (__v2sf) (b))\n+#define __ev_lower_fs_tst_eq(a, b)\t__builtin_spe_evfststeq (__pred_lower, (__v2sf) (a), (__v2sf) (b))\n+#define __ev_select_fs_tst_eq(a, b, c, d)\t((__v2si) __builtin_spe_evsel_fststeq ((__v2sf) (a), (__v2sf) (b), (__v2sf) (c), (__v2sf) (d)))\n \n /* SPEFSCR accesor functions.  */\n \n@@ -1066,7 +998,7 @@ __ev_set_s16_internal (__ev64_opaque__ a, int16_t b, uint32_t pos )\n #define __SPEFSCR_FDBZH\t\t0x04000000\n #define __SPEFSCR_FUNFH\t\t0x02000000\n #define __SPEFSCR_FOVFH\t\t0x01000000\n-/* 2 unused bits */\n+/* 2 unused bits.  */\n #define __SPEFSCR_FINXS\t\t0x00200000\n #define __SPEFSCR_FINVS\t\t0x00100000\n #define __SPEFSCR_FDBZS\t\t0x00080000\n@@ -1081,7 +1013,7 @@ __ev_set_s16_internal (__ev64_opaque__ a, int16_t b, uint32_t pos )\n #define __SPEFSCR_FDBZ\t\t0x00000400\n #define __SPEFSCR_FUNF\t\t0x00000200\n #define __SPEFSCR_FOVF\t\t0x00000100\n-/* 1 unused bit */\n+/* 1 unused bit.  */\n #define __SPEFSCR_FINXE\t\t0x00000040\n #define __SPEFSCR_FINVE\t\t0x00000020\n #define __SPEFSCR_FDBZE\t\t0x00000010\n@@ -1140,8 +1072,8 @@ __ev_clr_spefscr_field (int mask)\n      rnd = 0 (nearest)\n      rnd = 1 (zero)\n      rnd = 2 (+inf)\n-     rnd = 3 (-inf)\n-*/\n+     rnd = 3 (-inf).  */\n+\n static inline void\n __ev_set_spefscr_frmc (int rnd)\n {"}]}