{"sha": "fa95aa254783764ed1969f1ea937ddb198bb360f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZmE5NWFhMjU0NzgzNzY0ZWQxOTY5ZjFlYTkzN2RkYjE5OGJiMzYwZg==", "commit": {"author": {"name": "Ramana Radhakrishnan", "email": "ramana.radhakrishnan@linaro.org", "date": "2012-05-30T01:40:32Z"}, "committer": {"name": "Ramana Radhakrishnan", "email": "ramana@gcc.gnu.org", "date": "2012-05-30T01:40:32Z"}, "message": "arm.c (arm_evpc_neon_vrev): Adjust off by one error.\n\n\n2012-05-30  Ramana Radhakrishnan  <ramana.radhakrishnan@linaro.org>\n\n\t* config/arm/arm.c (arm_evpc_neon_vrev): Adjust off by one error.\n\n\n2012-05-30  Ramana Radhakrishnan  <ramana.radhakrishnan@linaro.org>\n\n\t* gcc.target/arm/neon-vrev.c: New.\n\nFrom-SVN: r187999", "tree": {"sha": "a7813199120c2c8ed73247c2c4545823a92ad45b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a7813199120c2c8ed73247c2c4545823a92ad45b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/fa95aa254783764ed1969f1ea937ddb198bb360f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fa95aa254783764ed1969f1ea937ddb198bb360f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fa95aa254783764ed1969f1ea937ddb198bb360f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fa95aa254783764ed1969f1ea937ddb198bb360f/comments", "author": null, "committer": null, "parents": [{"sha": "eb55047520e5b27d88af48d3c32f58e4dc7cbd90", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/eb55047520e5b27d88af48d3c32f58e4dc7cbd90", "html_url": "https://github.com/Rust-GCC/gccrs/commit/eb55047520e5b27d88af48d3c32f58e4dc7cbd90"}], "stats": {"total": 127, "additions": 124, "deletions": 3}, "files": [{"sha": "7999a502aa6db47517e153125f31f7423f754f4c", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fa95aa254783764ed1969f1ea937ddb198bb360f/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fa95aa254783764ed1969f1ea937ddb198bb360f/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=fa95aa254783764ed1969f1ea937ddb198bb360f", "patch": "@@ -1,3 +1,7 @@\n+2012-05-30  Ramana Radhakrishnan  <ramana.radhakrishnan@linaro.org>\n+\n+\t* config/arm/arm.c (arm_evpc_neon_vrev): Adjust off by one error.\n+\n 2012-05-29  Jack Howarth  <howarth@bromo.med.uc.edu>\n \n \tPR debug/53453"}, {"sha": "8a862275b5bc2f8278093bea716f761b3820b640", "filename": "gcc/config/arm/arm.c", "status": "modified", "additions": 11, "deletions": 3, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fa95aa254783764ed1969f1ea937ddb198bb360f/gcc%2Fconfig%2Farm%2Farm.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fa95aa254783764ed1969f1ea937ddb198bb360f/gcc%2Fconfig%2Farm%2Farm.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm.c?ref=fa95aa254783764ed1969f1ea937ddb198bb360f", "patch": "@@ -25637,10 +25637,18 @@ arm_evpc_neon_vrev (struct expand_vec_perm_d *d)\n       return false;\n     }\n \n-  for (i = 0; i < nelt; i += diff)\n+  for (i = 0; i < nelt ; i += diff + 1)\n     for (j = 0; j <= diff; j += 1)\n-      if (d->perm[i + j] != i + diff - j)\n-\treturn false;\n+      {\n+\t/* This is guaranteed to be true as the value of diff\n+\t   is 7, 3, 1 and we should have enough elements in the\n+\t   queue to generate this. Getting a vector mask with a\n+\t   value of diff other than these values implies that\n+\t   something is wrong by the time we get here.  */\n+\tgcc_assert (i + j < nelt);\n+\tif (d->perm[i + j] != i + diff - j)\n+\t  return false;\n+      }\n \n   /* Success! */\n   if (d->testing_p)"}, {"sha": "7e52cb9499a292ee500203dd1eee4655240c98fa", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fa95aa254783764ed1969f1ea937ddb198bb360f/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fa95aa254783764ed1969f1ea937ddb198bb360f/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=fa95aa254783764ed1969f1ea937ddb198bb360f", "patch": "@@ -1,3 +1,7 @@\n+2012-05-30  Ramana Radhakrishnan  <ramana.radhakrishnan@linaro.org>\n+\n+\t* gcc.target/arm/neon-vrev.c: New.\n+\n 2012-05-29  Oleg Endo  <olegendo@gcc.gnu.org>\n \n \tPR target/51340"}, {"sha": "10f41bc32bbe24c0a2e9b2034cee2e249dacb10a", "filename": "gcc/testsuite/gcc.target/arm/neon-vrev.c", "status": "added", "additions": 105, "deletions": 0, "changes": 105, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fa95aa254783764ed1969f1ea937ddb198bb360f/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fneon-vrev.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fa95aa254783764ed1969f1ea937ddb198bb360f/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fneon-vrev.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fneon-vrev.c?ref=fa95aa254783764ed1969f1ea937ddb198bb360f", "patch": "@@ -0,0 +1,105 @@\n+/* { dg-do compile } */\n+/* { dg-require-effective-target arm_neon_ok } */\n+/* { dg-options \"-O2\" } */\n+/* { dg-add-options arm_neon } */\n+\n+#include <arm_neon.h>\n+\n+uint16x4_t\n+tst_vrev642_u16 (uint16x4_t __a)\n+{\n+  uint16x4_t __rv;\n+  uint16x4_t __mask1 = { 3, 2, 1, 0};\n+  return __builtin_shuffle ( __a, __mask1) ;\n+}\n+\n+uint16x8_t\n+tst_vrev64q2_u16 (uint16x8_t __a)\n+{\n+  uint16x8_t __rv;\n+  uint16x8_t __mask1 = {3, 2, 1, 0, 7, 6, 5, 4 };\n+  return __builtin_shuffle ( __a, __mask1) ;\n+}\n+\n+uint8x8_t\n+tst_vrev642_u8 (uint8x8_t __a)\n+{\n+  uint8x8_t __rv;\n+  uint8x8_t __mask1 = { 7, 6, 5, 4, 3, 2, 1, 0};\n+  return __builtin_shuffle ( __a, __mask1) ;\n+}\n+\n+uint8x16_t\n+tst_vrev64q2_u8 (uint8x16_t __a)\n+{\n+  uint8x16_t __rv;\n+  uint8x16_t __mask1 = {7, 6, 5, 4, 3, 2, 1, 0, 15, 14, 13, 12, 11, 10, 9, 8};\n+  return __builtin_shuffle ( __a, __mask1) ;\n+\n+}\n+\n+uint32x2_t\n+tst_vrev642_u32 (uint32x2_t __a)\n+{\n+  uint32x2_t __rv;\n+  uint32x2_t __mask1 = {1, 0};\n+  return __builtin_shuffle ( __a, __mask1) ;\n+\n+}\n+\n+uint32x4_t\n+tst_vrev64q2_u32 (uint32x4_t __a)\n+{\n+  uint32x4_t __rv;\n+  uint32x4_t __mask1 = {1, 0, 3, 2};\n+  return __builtin_shuffle ( __a, __mask1) ;\n+}\n+\n+uint16x4_t\n+tst_vrev322_u16 (uint16x4_t __a)\n+{\n+  uint16x4_t __mask1 = { 1, 0, 3, 2 };\n+  return __builtin_shuffle (__a, __mask1);\n+}\n+\n+uint16x8_t\n+tst_vrev32q2_u16 (uint16x8_t __a)\n+{\n+  uint16x8_t __mask1 = { 1, 0, 3, 2, 5, 4, 7, 6 }; \n+  return __builtin_shuffle (__a, __mask1);\n+}\n+\n+uint8x8_t\n+tst_vrev322_u8 (uint8x8_t __a)\n+{\n+  uint8x8_t __mask1 = { 3, 2, 1, 0, 7, 6, 5, 4};\n+  return __builtin_shuffle (__a, __mask1);\n+}\n+\n+uint8x16_t\n+tst_vrev32q2_u8 (uint8x16_t __a)\n+{\n+  uint8x16_t __mask1 = { 3, 2, 1, 0, 7, 6, 5, 4, 11, 10, 9, 8, 15, 14, 13, 12};\n+  return __builtin_shuffle (__a, __mask1);\n+}\n+\n+uint8x8_t\n+tst_vrev162_u8 (uint8x8_t __a)\n+{\n+  uint8x8_t __mask = { 1, 0, 3, 2, 5, 4, 7, 6};\n+  return __builtin_shuffle (__a, __mask);\n+}\n+\n+uint8x16_t\n+tst_vrev16q2_u8 (uint8x16_t __a)\n+{\n+  uint8x16_t __mask = { 1, 0, 3, 2, 5, 4, 7, 6, 9, 8, 11, 10, 13, 12, 15, 14};\n+  return __builtin_shuffle (__a, __mask);\n+}\n+\n+/* { dg-final {scan-assembler-times \"vrev32\\.16\\\\t\" 2} }  */\n+/* { dg-final {scan-assembler-times \"vrev32\\.8\\\\t\" 2} }  */ \n+/* { dg-final {scan-assembler-times \"vrev16\\.8\\\\t\" 2} }  */\n+/* { dg-final {scan-assembler-times \"vrev64\\.8\\\\t\" 2} }  */\n+/* { dg-final {scan-assembler-times \"vrev64\\.32\\\\t\" 2} }  */\n+/* { dg-final {scan-assembler-times \"vrev64\\.16\\\\t\" 2} }  */"}]}