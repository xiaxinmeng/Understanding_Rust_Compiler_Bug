{"sha": "af421d9cf0a6cbc585e42af653a01619457ecc01", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWY0MjFkOWNmMGE2Y2JjNTg1ZTQyYWY2NTNhMDE2MTk0NTdlY2MwMQ==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2011-07-04T21:04:54Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2011-07-04T21:04:54Z"}, "message": "re PR rtl-optimization/49619 (ICE in simplify_subreg, at simplify-rtx.c:5362)\n\n\tPR rtl-optimization/49619\n\t* combine.c (combine_simplify_rtx): In PLUS -> IOR simplification\n\tpass VOIDmode as op0_mode to recursive call, and return temp even\n\twhen different from tor, just if it is not IOR of the original\n\tPLUS arguments.\n\n\t* gcc.dg/pr49619.c: New test.\n\nFrom-SVN: r175825", "tree": {"sha": "e6584beeae32a98e8799d34bffe88039b8b8e8e0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e6584beeae32a98e8799d34bffe88039b8b8e8e0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/af421d9cf0a6cbc585e42af653a01619457ecc01", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/af421d9cf0a6cbc585e42af653a01619457ecc01", "html_url": "https://github.com/Rust-GCC/gccrs/commit/af421d9cf0a6cbc585e42af653a01619457ecc01", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/af421d9cf0a6cbc585e42af653a01619457ecc01/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "707f991907e5c97c56a05654fee49f4940158994", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/707f991907e5c97c56a05654fee49f4940158994", "html_url": "https://github.com/Rust-GCC/gccrs/commit/707f991907e5c97c56a05654fee49f4940158994"}], "stats": {"total": 35, "additions": 31, "deletions": 4}, "files": [{"sha": "2c592b2671bc99f495b6e18dc28d77c0db0b94c9", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/af421d9cf0a6cbc585e42af653a01619457ecc01/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/af421d9cf0a6cbc585e42af653a01619457ecc01/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=af421d9cf0a6cbc585e42af653a01619457ecc01", "patch": "@@ -1,5 +1,11 @@\n 2011-07-04  Jakub Jelinek  <jakub@redhat.com>\n \n+\tPR rtl-optimization/49619\n+\t* combine.c (combine_simplify_rtx): In PLUS -> IOR simplification\n+\tpass VOIDmode as op0_mode to recursive call, and return temp even\n+\twhen different from tor, just if it is not IOR of the original\n+\tPLUS arguments.\n+\n \tPR rtl-optimization/49472\n \t* simplify-rtx.c (simplify_unary_operation_1) <case NEG>: When\n \tnegating MULT, negate the second operand instead of first."}, {"sha": "ba35f280fcd741e6b8511c98b509b0a43a2ce168", "filename": "gcc/combine.c", "status": "modified", "additions": 7, "deletions": 2, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/af421d9cf0a6cbc585e42af653a01619457ecc01/gcc%2Fcombine.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/af421d9cf0a6cbc585e42af653a01619457ecc01/gcc%2Fcombine.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcombine.c?ref=af421d9cf0a6cbc585e42af653a01619457ecc01", "patch": "@@ -5681,12 +5681,17 @@ combine_simplify_rtx (rtx x, enum machine_mode op0_mode, int in_dest,\n \t{\n \t  /* Try to simplify the expression further.  */\n \t  rtx tor = simplify_gen_binary (IOR, mode, XEXP (x, 0), XEXP (x, 1));\n-\t  temp = combine_simplify_rtx (tor, mode, in_dest, 0);\n+\t  temp = combine_simplify_rtx (tor, VOIDmode, in_dest, 0);\n \n \t  /* If we could, great.  If not, do not go ahead with the IOR\n \t     replacement, since PLUS appears in many special purpose\n \t     address arithmetic instructions.  */\n-\t  if (GET_CODE (temp) != CLOBBER && temp != tor)\n+\t  if (GET_CODE (temp) != CLOBBER\n+\t      && (GET_CODE (temp) != IOR\n+\t\t  || ((XEXP (temp, 0) != XEXP (x, 0)\n+\t\t       || XEXP (temp, 1) != XEXP (x, 1))\n+\t\t      && (XEXP (temp, 0) != XEXP (x, 1)\n+\t\t\t  || XEXP (temp, 1) != XEXP (x, 0)))))\n \t    return temp;\n \t}\n       break;"}, {"sha": "5894f74257b9137ae621eee5fb94def421aa383c", "filename": "gcc/simplify-rtx.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/af421d9cf0a6cbc585e42af653a01619457ecc01/gcc%2Fsimplify-rtx.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/af421d9cf0a6cbc585e42af653a01619457ecc01/gcc%2Fsimplify-rtx.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fsimplify-rtx.c?ref=af421d9cf0a6cbc585e42af653a01619457ecc01", "patch": "@@ -1,7 +1,7 @@\n /* RTL simplification functions for GNU compiler.\n    Copyright (C) 1987, 1988, 1989, 1992, 1993, 1994, 1995, 1996, 1997, 1998,\n-   1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010\n-   Free Software Foundation, Inc.\n+   1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010,\n+   2011  Free Software Foundation, Inc.\n \n This file is part of GCC.\n "}, {"sha": "fc7336a9d4d3fa29c9265a2d19420ae55f29fdb4", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/af421d9cf0a6cbc585e42af653a01619457ecc01/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/af421d9cf0a6cbc585e42af653a01619457ecc01/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=af421d9cf0a6cbc585e42af653a01619457ecc01", "patch": "@@ -1,5 +1,8 @@\n 2011-07-04  Jakub Jelinek  <jakub@redhat.com>\n \n+\tPR rtl-optimization/49619\n+\t* gcc.dg/pr49619.c: New test.\n+\n \tPR rtl-optimization/49472\n \t* gfortran.dg/pr49472.f90: New test.\n "}, {"sha": "d0a72a6edd1931336e9c53f836421be15a95163c", "filename": "gcc/testsuite/gcc.dg/pr49619.c", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/af421d9cf0a6cbc585e42af653a01619457ecc01/gcc%2Ftestsuite%2Fgcc.dg%2Fpr49619.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/af421d9cf0a6cbc585e42af653a01619457ecc01/gcc%2Ftestsuite%2Fgcc.dg%2Fpr49619.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr49619.c?ref=af421d9cf0a6cbc585e42af653a01619457ecc01", "patch": "@@ -0,0 +1,13 @@\n+/* PR rtl-optimization/49619 */\n+/* { dg-do compile } */\n+/* { dg-options \"-O -fno-tree-fre\" } */\n+\n+extern int a, b;\n+\n+void\n+foo (int x)\n+{\n+  a = 2;\n+  b = 0;\n+  b = (a && ((a = 1, 0 >= b) || (short) (x + (b & x))));\n+}"}]}