{"sha": "363a06901524d9f2e60451e2ccb9322ca784570a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzYzYTA2OTAxNTI0ZDlmMmU2MDQ1MWUyY2NiOTMyMmNhNzg0NTcwYQ==", "commit": {"author": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2017-08-01T14:06:13Z"}, "committer": {"name": "Martin Liska", "email": "marxin@gcc.gnu.org", "date": "2017-08-01T14:06:13Z"}, "message": "Fix segfault in gcov.c (PR gcov-profile/81561).\n\n2017-08-01  Martin Liska  <mliska@suse.cz>\n\n\tPR gcov-profile/81561\n\t* gcov.c (unblock): Make unblocking safe as we need to preserve\n\tindex correspondence of blocks and block_lists.\n\nFrom-SVN: r250780", "tree": {"sha": "0d79ad3f4921e12bba03ec04b2a9e8728d021df6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0d79ad3f4921e12bba03ec04b2a9e8728d021df6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/363a06901524d9f2e60451e2ccb9322ca784570a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/363a06901524d9f2e60451e2ccb9322ca784570a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/363a06901524d9f2e60451e2ccb9322ca784570a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/363a06901524d9f2e60451e2ccb9322ca784570a/comments", "author": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "0102e469f556aed64b50d71c6652baff61999485", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0102e469f556aed64b50d71c6652baff61999485", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0102e469f556aed64b50d71c6652baff61999485"}], "stats": {"total": 16, "additions": 11, "deletions": 5}, "files": [{"sha": "09e2831eb2e8f84fe8ee8a0160ff5699d7abaf9c", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/363a06901524d9f2e60451e2ccb9322ca784570a/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/363a06901524d9f2e60451e2ccb9322ca784570a/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=363a06901524d9f2e60451e2ccb9322ca784570a", "patch": "@@ -1,3 +1,9 @@\n+2017-08-01  Martin Liska  <mliska@suse.cz>\n+\n+\tPR gcov-profile/81561\n+\t* gcov.c (unblock): Make unblocking safe as we need to preserve\n+\tindex correspondence of blocks and block_lists.\n+\n 2017-08-01  Richard Biener  <rguenther@suse.de>\n \n \tPR tree-optimization/81181"}, {"sha": "c56bac2027831fe6ee0f575c9bfb2795a6635588", "filename": "gcc/gcov.c", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/363a06901524d9f2e60451e2ccb9322ca784570a/gcc%2Fgcov.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/363a06901524d9f2e60451e2ccb9322ca784570a/gcc%2Fgcov.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgcov.c?ref=363a06901524d9f2e60451e2ccb9322ca784570a", "patch": "@@ -539,13 +539,13 @@ unblock (const block_t *u, block_vector_t &blocked,\n   unsigned index = it - blocked.begin ();\n   blocked.erase (it);\n \n-  for (block_vector_t::iterator it2 = block_lists[index].begin ();\n-       it2 != block_lists[index].end (); it2++)\n-    unblock (*it2, blocked, block_lists);\n-  for (unsigned j = 0; j < block_lists[index].size (); j++)\n-    unblock (u, blocked, block_lists);\n+  block_vector_t to_unblock (block_lists[index]);\n \n   block_lists.erase (block_lists.begin () + index);\n+\n+  for (block_vector_t::iterator it = to_unblock.begin ();\n+       it != to_unblock.end (); it++)\n+    unblock (*it, blocked, block_lists);\n }\n \n /* Find circuit going to block V, PATH is provisional seen cycle."}]}