{"sha": "049bb74ea2e50df059faf50b8dce663e10c6121c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDQ5YmI3NGVhMmU1MGRmMDU5ZmFmNTBiOGRjZTY2M2UxMGM2MTIxYw==", "commit": {"author": {"name": "Janus Weil", "email": "janus@gcc.gnu.org", "date": "2012-11-04T17:13:16Z"}, "committer": {"name": "Janus Weil", "email": "janus@gcc.gnu.org", "date": "2012-11-04T17:13:16Z"}, "message": "re PR fortran/55199 ([OOP] Equivalenced variable has wrong type when used with generic member function)\n\n2012-11-04  Janus Weil  <janus@gcc.gnu.org>\n\n\tPR fortran/55199\n\t* primary.c (gfc_match_varspec): Clear typespec if it cannot be\n\tdetermined at this point.\n\n2012-11-04  Janus Weil  <janus@gcc.gnu.org>\n\n\tPR fortran/55199\n\t* gfortran.dg/associate_12.f90: New.\n\nFrom-SVN: r193136", "tree": {"sha": "b43d35487f7962a6cea06c09969b00b3919b362a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b43d35487f7962a6cea06c09969b00b3919b362a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/049bb74ea2e50df059faf50b8dce663e10c6121c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/049bb74ea2e50df059faf50b8dce663e10c6121c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/049bb74ea2e50df059faf50b8dce663e10c6121c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/049bb74ea2e50df059faf50b8dce663e10c6121c/comments", "author": {"login": "janusw", "id": 484108, "node_id": "MDQ6VXNlcjQ4NDEwOA==", "avatar_url": "https://avatars.githubusercontent.com/u/484108?v=4", "gravatar_id": "", "url": "https://api.github.com/users/janusw", "html_url": "https://github.com/janusw", "followers_url": "https://api.github.com/users/janusw/followers", "following_url": "https://api.github.com/users/janusw/following{/other_user}", "gists_url": "https://api.github.com/users/janusw/gists{/gist_id}", "starred_url": "https://api.github.com/users/janusw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/janusw/subscriptions", "organizations_url": "https://api.github.com/users/janusw/orgs", "repos_url": "https://api.github.com/users/janusw/repos", "events_url": "https://api.github.com/users/janusw/events{/privacy}", "received_events_url": "https://api.github.com/users/janusw/received_events", "type": "User", "site_admin": false}, "committer": {"login": "janusw", "id": 484108, "node_id": "MDQ6VXNlcjQ4NDEwOA==", "avatar_url": "https://avatars.githubusercontent.com/u/484108?v=4", "gravatar_id": "", "url": "https://api.github.com/users/janusw", "html_url": "https://github.com/janusw", "followers_url": "https://api.github.com/users/janusw/followers", "following_url": "https://api.github.com/users/janusw/following{/other_user}", "gists_url": "https://api.github.com/users/janusw/gists{/gist_id}", "starred_url": "https://api.github.com/users/janusw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/janusw/subscriptions", "organizations_url": "https://api.github.com/users/janusw/orgs", "repos_url": "https://api.github.com/users/janusw/repos", "events_url": "https://api.github.com/users/janusw/events{/privacy}", "received_events_url": "https://api.github.com/users/janusw/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f56f2d332c6f78342a8f52ab426c38806d772017", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f56f2d332c6f78342a8f52ab426c38806d772017", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f56f2d332c6f78342a8f52ab426c38806d772017"}], "stats": {"total": 42, "additions": 42, "deletions": 0}, "files": [{"sha": "084f1f8c53bc2c390ba20524ff85cfceb03677d5", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/049bb74ea2e50df059faf50b8dce663e10c6121c/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/049bb74ea2e50df059faf50b8dce663e10c6121c/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=049bb74ea2e50df059faf50b8dce663e10c6121c", "patch": "@@ -1,3 +1,9 @@\n+2012-11-04  Janus Weil  <janus@gcc.gnu.org>\n+\n+\tPR fortran/55199\n+\t* primary.c (gfc_match_varspec): Clear typespec if it cannot be\n+\tdetermined at this point.\n+\n 2012-10-31  Janus Weil  <janus@gcc.gnu.org>\n \n \tPR fortran/53718"}, {"sha": "6be55b0ef2c49b304d8dd913b6a6fc17b3c9e0ad", "filename": "gcc/fortran/primary.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/049bb74ea2e50df059faf50b8dce663e10c6121c/gcc%2Ffortran%2Fprimary.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/049bb74ea2e50df059faf50b8dce663e10c6121c/gcc%2Ffortran%2Fprimary.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fprimary.c?ref=049bb74ea2e50df059faf50b8dce663e10c6121c", "patch": "@@ -1975,6 +1975,8 @@ gfc_match_varspec (gfc_expr *primary, int equiv_flag, bool sub_flag,\n \t  gcc_assert (primary->symtree->n.sym->attr.referenced);\n \t  if (tbp_sym)\n \t    primary->ts = tbp_sym->ts;\n+\t  else\n+\t    gfc_clear_ts (&primary->ts);\n \n \t  m = gfc_match_actual_arglist (tbp->n.tb->subroutine,\n \t\t\t\t\t&primary->value.compcall.actual);"}, {"sha": "4aced9cadb269b3b2b338f9074ac74dfc53e02e6", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/049bb74ea2e50df059faf50b8dce663e10c6121c/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/049bb74ea2e50df059faf50b8dce663e10c6121c/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=049bb74ea2e50df059faf50b8dce663e10c6121c", "patch": "@@ -1,3 +1,8 @@\n+2012-11-04  Janus Weil  <janus@gcc.gnu.org>\n+\n+\tPR fortran/55199\n+\t* gfortran.dg/associate_12.f90: New.\n+\n 2012-11-03  Jack Howarth  <howarth@bromo.med.uc.edu>\n \n \tPR target/54255"}, {"sha": "1ead1e7112e0ce014aa42bc0fec7531022cdab2f", "filename": "gcc/testsuite/gfortran.dg/associate_12.f90", "status": "added", "additions": 29, "deletions": 0, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/049bb74ea2e50df059faf50b8dce663e10c6121c/gcc%2Ftestsuite%2Fgfortran.dg%2Fassociate_12.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/049bb74ea2e50df059faf50b8dce663e10c6121c/gcc%2Ftestsuite%2Fgfortran.dg%2Fassociate_12.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fassociate_12.f90?ref=049bb74ea2e50df059faf50b8dce663e10c6121c", "patch": "@@ -0,0 +1,29 @@\n+! { dg-do compile }\n+!\n+! PR 55199: [OOP] Equivalenced variable has wrong type when used with generic member function\n+!\n+! Contributed by Rich Townsend <townsend@astro.wisc.edu>\n+\n+module assoc_err_m\n+  implicit none\n+  type :: foo_t\n+   contains\n+     procedure :: func_1\n+     generic   :: func => func_1\n+  end type\n+contains\n+  real function func_1 (this)\n+    class(foo_t), intent(in) :: this\n+  end function\n+end module\n+\n+program assoc_err\n+  use assoc_err_m\n+  implicit none\n+  type(foo_t) :: f\n+  associate(b => f%func())\n+    print *, 1. + b\n+  end associate\n+end program\n+\n+! { dg-final { cleanup-modules \"assoc_err_m\" } }"}]}