{"sha": "1d4a355a01e074604cdbd8b557e043cece8d2167", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWQ0YTM1NWEwMWUwNzQ2MDRjZGJkOGI1NTdlMDQzY2VjZThkMjE2Nw==", "commit": {"author": {"name": "Philip Herron", "email": "phil@nebuloninc.com", "date": "2020-05-16T22:05:35Z"}, "committer": {"name": "Philip Herron", "email": "philip.herron@embecosm.com", "date": "2020-11-28T21:13:13Z"}, "message": "Infer types for AssignmentExpr", "tree": {"sha": "1405864ca91fc8553c242d15275449e9ecdaf76e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1405864ca91fc8553c242d15275449e9ecdaf76e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1d4a355a01e074604cdbd8b557e043cece8d2167", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1d4a355a01e074604cdbd8b557e043cece8d2167", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1d4a355a01e074604cdbd8b557e043cece8d2167", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1d4a355a01e074604cdbd8b557e043cece8d2167/comments", "author": null, "committer": {"login": "philberty", "id": 84585, "node_id": "MDQ6VXNlcjg0NTg1", "avatar_url": "https://avatars.githubusercontent.com/u/84585?v=4", "gravatar_id": "", "url": "https://api.github.com/users/philberty", "html_url": "https://github.com/philberty", "followers_url": "https://api.github.com/users/philberty/followers", "following_url": "https://api.github.com/users/philberty/following{/other_user}", "gists_url": "https://api.github.com/users/philberty/gists{/gist_id}", "starred_url": "https://api.github.com/users/philberty/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/philberty/subscriptions", "organizations_url": "https://api.github.com/users/philberty/orgs", "repos_url": "https://api.github.com/users/philberty/repos", "events_url": "https://api.github.com/users/philberty/events{/privacy}", "received_events_url": "https://api.github.com/users/philberty/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "289cbcc7e694ab3ed62011c86f2d43c8ee2e9dd9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/289cbcc7e694ab3ed62011c86f2d43c8ee2e9dd9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/289cbcc7e694ab3ed62011c86f2d43c8ee2e9dd9"}], "stats": {"total": 29, "additions": 28, "deletions": 1}, "files": [{"sha": "cb96ef091f7e7ae6ace3ac736e03bfd48c17f9b4", "filename": "gcc/rust/analysis/rust-resolution.cc", "status": "modified", "additions": 26, "deletions": 1, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1d4a355a01e074604cdbd8b557e043cece8d2167/gcc%2Frust%2Fanalysis%2Frust-resolution.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1d4a355a01e074604cdbd8b557e043cece8d2167/gcc%2Frust%2Fanalysis%2Frust-resolution.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Fanalysis%2Frust-resolution.cc?ref=1d4a355a01e074604cdbd8b557e043cece8d2167", "patch": "@@ -263,7 +263,32 @@ TypeResolution::visit (AST::TypeCastExpr &expr)\n void\n TypeResolution::visit (AST::AssignmentExpr &expr)\n {\n-  printf (\"AssignmentExpr: %s\\n\", expr.as_string ().c_str ());\n+  size_t before;\n+  before = typeBuffer.size ();\n+  expr.visit_lhs (*this);\n+  if (typeBuffer.size () <= before)\n+    {\n+      rust_error_at (expr.locus, \"unable to determine lhs type\");\n+      return;\n+    }\n+\n+  auto lhsType = typeBuffer.back ();\n+  typeBuffer.pop_back ();\n+\n+  before = typeBuffer.size ();\n+  expr.visit_rhs (*this);\n+  if (typeBuffer.size () <= before)\n+    {\n+      rust_error_at (expr.locus, \"unable to determine rhs type\");\n+      return;\n+    }\n+\n+  auto rhsType = typeBuffer.back ();\n+  // not poping because we will be checking they match and the\n+  // scope will require knowledge of the type\n+\n+  // do the lhsType and the rhsType match\n+  // TODO\n }\n \n void"}, {"sha": "f19ba2c86a56f5849bd036205d3bdcb61089b906", "filename": "gcc/rust/ast/rust-stmt.h", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1d4a355a01e074604cdbd8b557e043cece8d2167/gcc%2Frust%2Fast%2Frust-stmt.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1d4a355a01e074604cdbd8b557e043cece8d2167/gcc%2Frust%2Fast%2Frust-stmt.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Fast%2Frust-stmt.h?ref=1d4a355a01e074604cdbd8b557e043cece8d2167", "patch": "@@ -63,6 +63,8 @@ class LetStmt : public Stmt\n \n   Location locus;\n \n+  Type *inferedType;\n+\n   // Returns whether let statement has outer attributes.\n   inline bool has_outer_attrs () const { return !outer_attrs.empty (); }\n "}]}