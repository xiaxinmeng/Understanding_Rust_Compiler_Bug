{"sha": "dc38e255242192303ae463a913c060b426eb06c0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGMzOGUyNTUyNDIxOTIzMDNhZTQ2M2E5MTNjMDYwYjQyNmViMDZjMA==", "commit": {"author": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2020-10-14T10:52:26Z"}, "committer": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2020-10-14T11:51:40Z"}, "message": "libstdc++: Implement LWG 3706 for COW strings\n\nThe basic_string deduction guides are defined for the old ABI, but the\ntests are currently disabled. This is because a single case fails when\nusing the old ABI, which is just because LWG 3706 isn't implemented for\nthe old ABI. That can be done easily, and the tests can be enabled.\n\nlibstdc++-v3/ChangeLog:\n\n\t* include/bits/basic_string.h [!_GLIBCXX_USE_CXX11_ABI]\n\t(basic_string(const _CharT*, const _Alloc&)): Constrain to\n\trequire an allocator-like type to fix CTAD ambiguity (LWG 3706).\n\t* testsuite/21_strings/basic_string/cons/char/deduction.cc:\n\tRemove dg-skip-if.\n\t* testsuite/21_strings/basic_string/cons/wchar_t/deduction.cc:\n\tLikewise.", "tree": {"sha": "95ce8fda3e5cbdbbface62ed2bb2af66c0718975", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/95ce8fda3e5cbdbbface62ed2bb2af66c0718975"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/dc38e255242192303ae463a913c060b426eb06c0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dc38e255242192303ae463a913c060b426eb06c0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/dc38e255242192303ae463a913c060b426eb06c0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dc38e255242192303ae463a913c060b426eb06c0/comments", "author": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4d2a56a0f7135469587feacef44cf00e08f71d09", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4d2a56a0f7135469587feacef44cf00e08f71d09", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4d2a56a0f7135469587feacef44cf00e08f71d09"}], "stats": {"total": 9, "additions": 7, "deletions": 2}, "files": [{"sha": "4b3722bdbf1831b435970918a5d28a038c44a78b", "filename": "libstdc++-v3/include/bits/basic_string.h", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dc38e255242192303ae463a913c060b426eb06c0/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fbasic_string.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dc38e255242192303ae463a913c060b426eb06c0/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fbasic_string.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fbasic_string.h?ref=dc38e255242192303ae463a913c060b426eb06c0", "patch": "@@ -3612,12 +3612,19 @@ _GLIBCXX_END_NAMESPACE_CXX11\n        */\n       basic_string(const _CharT* __s, size_type __n,\n \t\t   const _Alloc& __a = _Alloc());\n+\n       /**\n        *  @brief  Construct string as copy of a C string.\n        *  @param  __s  Source C string.\n        *  @param  __a  Allocator to use (default is default allocator).\n        */\n+#if __cpp_deduction_guides && ! defined _GLIBCXX_DEFINING_STRING_INSTANTIATIONS\n+      // _GLIBCXX_RESOLVE_LIB_DEFECTS\n+      // 3076. basic_string CTAD ambiguity\n+      template<typename = _RequireAllocator<_Alloc>>\n+#endif\n       basic_string(const _CharT* __s, const _Alloc& __a = _Alloc());\n+\n       /**\n        *  @brief  Construct string as multiple characters.\n        *  @param  __n  Number of characters."}, {"sha": "d05c4b776c32031af1076a00abda758ba38a534c", "filename": "libstdc++-v3/testsuite/21_strings/basic_string/cons/char/deduction.cc", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dc38e255242192303ae463a913c060b426eb06c0/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Fcons%2Fchar%2Fdeduction.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dc38e255242192303ae463a913c060b426eb06c0/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Fcons%2Fchar%2Fdeduction.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Fcons%2Fchar%2Fdeduction.cc?ref=dc38e255242192303ae463a913c060b426eb06c0", "patch": "@@ -17,7 +17,6 @@\n \n // { dg-options \"-std=gnu++17\" }\n // { dg-do compile { target c++17 } }\n-// { dg-xfail-if \"COW string missing deduction guides\" { ! cxx11-abi } }\n \n #include <string>\n #include <testsuite_iterators.h>"}, {"sha": "1773be28e3778b4a9dd2b4690f823d6b6cf345f5", "filename": "libstdc++-v3/testsuite/21_strings/basic_string/cons/wchar_t/deduction.cc", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dc38e255242192303ae463a913c060b426eb06c0/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Fcons%2Fwchar_t%2Fdeduction.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dc38e255242192303ae463a913c060b426eb06c0/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Fcons%2Fwchar_t%2Fdeduction.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Fcons%2Fwchar_t%2Fdeduction.cc?ref=dc38e255242192303ae463a913c060b426eb06c0", "patch": "@@ -17,7 +17,6 @@\n \n // { dg-options \"-std=gnu++17\" }\n // { dg-do compile { target c++17 } }\n-// { dg-xfail-if \"COW string missing deduction guides\" { ! cxx11-abi } }\n \n #include <string>\n #include <testsuite_iterators.h>"}]}