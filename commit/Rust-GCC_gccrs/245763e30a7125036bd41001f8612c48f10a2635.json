{"sha": "245763e30a7125036bd41001f8612c48f10a2635", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjQ1NzYzZTMwYTcxMjUwMzZiZDQxMDAxZjg2MTJjNDhmMTBhMjYzNQ==", "commit": {"author": {"name": "Steven Bosscher", "email": "steven@gcc.gnu.org", "date": "2010-05-25T18:14:23Z"}, "committer": {"name": "Steven Bosscher", "email": "steven@gcc.gnu.org", "date": "2010-05-25T18:14:23Z"}, "message": "Makefile.in (EXCEPT_H): Fix typo.\n\ngcc/ChangeLog:\n\t* Makefile.in (EXCEPT_H): Fix typo.\n\nobjc/ChangeLog:\n\t* objc-act.h: Do not include gimple.h.\n\t* objc-act.c: Do not include rtl.h, expr.h, libfuncs.h, and tm_p.h.\n\tInclude gimple.h.  Explain why except.h has to be included.\n\t* objc-lang.c: Do not include diagnostics.h.\n\t* Make-lang.in: Update dependencies.\n\nobjcp/ChangeLog:\n\t* objcp-decl.c: Do not include tm.h, rtl.h, expr.h, c-common.h,\n\tflags.h, input.h, except.h, output.h, toplev.h, cpplib.h, debug.h,\n\tand target.h.\n\t* objcp-lang.c: Do not include tm.h, toplev.h, diagnostics.h,\n\tand debug.h.  Explain why except.h has to be included.\n\t* Make-lang.in: Update dependencies.\n\ncp/ChangeLog:\n\t* cp-tree.h: Do not include splay-tree.h.\n\t(struct prtmem_cst): Remove unused field and false comment.\n\t* typeck.c: Do not include rtl.h, expr.h, and tm_p.h.\n\t* optimize.c: Do not inclde rtl.h, insn-config.h, and integrate.h.\n\t* init.c: Do not include rtl.h and expr.h.\n\t* class.c: Do not include rtl.h.  Include splay-tree.h.\n\t(build_clone): Use plain NULL instead of NULL_RTX.\n\t* decl.c: Do not include expr.h.  Explain why rtl.h has to be\n\tincluded.  Include splay-tree.h.\n\t* method.c: Do not include rtl.h and expr.h.\n\t(use_thunk): Use plain NULL instead of NULL_RTX.\n\t* except.c: Do not include rtl.h, expr.h, and libfuncs.h.\n\t* tree.c: Do not include rtl.h, insn-config.h, integrate.h,\n\tand target.h.  Include splay-tree.h.\n\t* expr.c: Do not include rtl.h and expr.h.\n\t* pt.c: Do not include obstack.h and rtl.h.\n\t(tsubst_friend_function): Use plain NULL instead of NULL_RTX.\n\t(tsubst_decl): Likewise.\n\t(instantiate_decl): Likewise.\n\t* semantics.c: Do not include exprt.h and debug.h.  Explain why\n\trtl.h has to be included.\n\t* decl2.c: Do not include rtl.h and expr.h.  Include splay-tree.h.\n\t* call.c: Do not include rtl.h and expr.h.\n\t* search.c: Do not include obstack.h and rtl.h.\n\t* friend.c: Do not include rtl.h and expr.h.\n\t* Make-lang.in: Update dependencies.\n\nFrom-SVN: r159839", "tree": {"sha": "dcdfd08bbc0f7551efb5079919f14b18d155048e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/dcdfd08bbc0f7551efb5079919f14b18d155048e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/245763e30a7125036bd41001f8612c48f10a2635", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/245763e30a7125036bd41001f8612c48f10a2635", "html_url": "https://github.com/Rust-GCC/gccrs/commit/245763e30a7125036bd41001f8612c48f10a2635", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/245763e30a7125036bd41001f8612c48f10a2635/comments", "author": null, "committer": null, "parents": [{"sha": "30145da59844b186d0285958b92131e3ab0c2ab2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/30145da59844b186d0285958b92131e3ab0c2ab2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/30145da59844b186d0285958b92131e3ab0c2ab2"}], "stats": {"total": 224, "additions": 112, "deletions": 112}, "files": [{"sha": "0b511f5562a90a88809777f4f37e73a20461817e", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/245763e30a7125036bd41001f8612c48f10a2635/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/245763e30a7125036bd41001f8612c48f10a2635/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=245763e30a7125036bd41001f8612c48f10a2635", "patch": "@@ -1,3 +1,7 @@\n+2010-05-25  Steven Bosscher  <steven@gcc.gnu.org>\n+\n+\t* Makefile.in (EXCEPT_H): Fix typo.\n+\n 2010-05-25  Vladimir Makarov <vmakarov@redhat.com>\n \n \t* ira-build.c (update_conflict_hard_reg_costs): New."}, {"sha": "f9720e36e506159bd6e7baebfd658b19be45f486", "filename": "gcc/Makefile.in", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/245763e30a7125036bd41001f8612c48f10a2635/gcc%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/245763e30a7125036bd41001f8612c48f10a2635/gcc%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FMakefile.in?ref=245763e30a7125036bd41001f8612c48f10a2635", "patch": "@@ -858,7 +858,7 @@ REVISION_s  := \"\\\"\\\"\"\n endif\n \n # Shorthand variables for dependency lists.\n-EXCEPT_H = except.h $(HASHTAB_) vecprim.h vecir.h\n+EXCEPT_H = except.h $(HASHTAB_H) vecprim.h vecir.h\n TOPLEV_H = toplev.h $(INPUT_H) bversion.h\n TARGET_H = $(TM_H) target.h insn-modes.h\n MACHMODE_H = machmode.h mode-classes.def insn-modes.h"}, {"sha": "ea49282ee5006ecc4d32f20cc6959c9ef1987a03", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 29, "deletions": 0, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/245763e30a7125036bd41001f8612c48f10a2635/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/245763e30a7125036bd41001f8612c48f10a2635/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=245763e30a7125036bd41001f8612c48f10a2635", "patch": "@@ -1,3 +1,32 @@\n+2010-05-25  Steven Bosscher  <steven@gcc.gnu.org>\n+\n+\t* cp-tree.h: Do not include splay-tree.h.\n+\t(struct prtmem_cst): Remove unused field and false comment.\n+\t* typeck.c: Do not include rtl.h, expr.h, and tm_p.h.\n+\t* optimize.c: Do not inclde rtl.h, insn-config.h, and integrate.h.\n+\t* init.c: Do not include rtl.h and expr.h.\n+\t* class.c: Do not include rtl.h.  Include splay-tree.h.\n+\t(build_clone): Use plain NULL instead of NULL_RTX.\n+\t* decl.c: Do not include expr.h.  Explain why rtl.h has to be\n+\tincluded.  Include splay-tree.h.\n+\t* method.c: Do not include rtl.h and expr.h.\n+\t(use_thunk): Use plain NULL instead of NULL_RTX.\n+\t* except.c: Do not include rtl.h, expr.h, and libfuncs.h.\n+\t* tree.c: Do not include rtl.h, insn-config.h, integrate.h,\n+\tand target.h.  Include splay-tree.h.\n+\t* expr.c: Do not include rtl.h and expr.h.\n+\t* pt.c: Do not include obstack.h and rtl.h.\n+\t(tsubst_friend_function): Use plain NULL instead of NULL_RTX.\n+\t(tsubst_decl): Likewise.\n+\t(instantiate_decl): Likewise.\n+\t* semantics.c: Do not include exprt.h and debug.h.  Explain why\n+\trtl.h has to be included.\n+\t* decl2.c: Do not include rtl.h and expr.h.  Include splay-tree.h.\n+\t* call.c: Do not include rtl.h and expr.h.\n+\t* search.c: Do not include obstack.h and rtl.h.\n+\t* friend.c: Do not include rtl.h and expr.h.\n+\t* Make-lang.in: Update dependencies.\n+\n 2010-05-25  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR c++/18249"}, {"sha": "7a8521218d4018fdfe9106efcf92ccde7db58237", "filename": "gcc/cp/Make-lang.in", "status": "modified", "additions": 32, "deletions": 30, "changes": 62, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/245763e30a7125036bd41001f8612c48f10a2635/gcc%2Fcp%2FMake-lang.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/245763e30a7125036bd41001f8612c48f10a2635/gcc%2Fcp%2FMake-lang.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FMake-lang.in?ref=245763e30a7125036bd41001f8612c48f10a2635", "patch": "@@ -243,7 +243,7 @@ c++.stagefeedback: stagefeedback-start\n CXX_TREE_H = $(TREE_H) cp/name-lookup.h cp/cp-tree.h $(C_COMMON_H) \\\n \t$(FUNCTION_H) \\\n \t$(SYSTEM_H) coretypes.h $(CONFIG_H) $(TARGET_H) $(GGC_H) \\\n-\t$(srcdir)/../include/hashtab.h $(srcdir)/../include/splay-tree.h\n+\t$(srcdir)/../include/hashtab.h\n \n CXX_PRETTY_PRINT_H = cp/cxx-pretty-print.h $(C_PRETTY_PRINT_H)\n \n@@ -253,60 +253,62 @@ cp/cp-lang.o: cp/cp-lang.c $(CXX_TREE_H) $(TM_H) toplev.h debug.h langhooks.h \\\n   $(LANGHOOKS_DEF_H) $(C_COMMON_H) gtype-cp.h gt-cp-cp-lang.h \\\n   $(DIAGNOSTIC_H) cp/cp-objcp-common.h $(EXPR_H) $(EXCEPT_H)\n cp/decl.o: cp/decl.c $(CXX_TREE_H) $(TM_H) $(FLAGS_H) cp/decl.h \\\n-  output.h $(EXPR_H) except.h toplev.h $(HASHTAB_H) $(RTL_H) \\\n+  output.h $(EXCEPT_H) toplev.h $(HASHTAB_H) $(RTL_H) \\\n   cp/operators.def $(TM_P_H) $(TREE_INLINE_H) $(DIAGNOSTIC_H) $(C_PRAGMA_H) \\\n   debug.h gt-cp-decl.h $(TIMEVAR_H) $(TREE_FLOW_H) $(TARGET_H) $(PLUGIN_H) \\\n-  intl.h tree-iterator.h\n-cp/decl2.o: cp/decl2.c $(CXX_TREE_H) $(TM_H) $(FLAGS_H) cp/decl.h $(EXPR_H) \\\n-  output.h except.h toplev.h $(RTL_H) $(C_COMMON_H) gt-cp-decl2.h $(CGRAPH_H) \\\n-  $(C_PRAGMA_H) $(TREE_DUMP_H) intl.h $(TARGET_H) $(GIMPLE_H) $(POINTER_SET_H)\n+  intl.h tree-iterator.h $(SPLAY_TREE_H)\n+cp/decl2.o: cp/decl2.c $(CXX_TREE_H) $(TM_H) $(FLAGS_H) cp/decl.h \\\n+  output.h $(EXCEPT_H) toplev.h $(C_COMMON_H) gt-cp-decl2.h $(CGRAPH_H) \\\n+  $(C_PRAGMA_H) $(TREE_DUMP_H) intl.h $(TARGET_H) $(GIMPLE_H) $(POINTER_SET_H) \\\n+  $(SPLAY_TREE_H)\n cp/cp-objcp-common.o : cp/cp-objcp-common.c $(CONFIG_H) $(SYSTEM_H) \\\n   coretypes.h $(TM_H) $(TREE_H) $(CXX_TREE_H) $(C_COMMON_H) toplev.h \\\n   langhooks.h $(LANGHOOKS_DEF_H) $(DIAGNOSTIC_H) debug.h \\\n   $(CXX_PRETTY_PRINT_H) cp/cp-objcp-common.h gt-cp-cp-objcp-common.h\n cp/typeck2.o: cp/typeck2.c $(CXX_TREE_H) $(TM_H) $(FLAGS_H) toplev.h output.h \\\n   $(TM_P_H) $(DIAGNOSTIC_H) gt-cp-typeck2.h $(REAL_H) intl.h\n-cp/typeck.o: cp/typeck.c $(CXX_TREE_H) $(TM_H) $(FLAGS_H) $(RTL_H) $(EXPR_H) \\\n-  toplev.h $(DIAGNOSTIC_H) convert.h $(C_COMMON_H) $(TARGET_H)\n-cp/class.o: cp/class.c $(CXX_TREE_H) $(TM_H) $(FLAGS_H) toplev.h $(RTL_H) \\\n-  $(TARGET_H) convert.h $(CGRAPH_H) $(TREE_DUMP_H) gt-cp-class.h\n-cp/call.o: cp/call.c $(CXX_TREE_H) $(TM_H) $(FLAGS_H) toplev.h $(RTL_H) \\\n-  $(EXPR_H) $(DIAGNOSTIC_H) intl.h gt-cp-call.h convert.h $(TARGET_H) langhooks.h\n-cp/friend.o: cp/friend.c $(CXX_TREE_H) $(TM_H) $(FLAGS_H) $(RTL_H) toplev.h \\\n-  $(EXPR_H)\n-cp/init.o: cp/init.c $(CXX_TREE_H) $(TM_H) $(FLAGS_H) $(RTL_H) $(EXPR_H) \\\n-  toplev.h except.h $(TARGET_H)\n-cp/method.o: cp/method.c $(CXX_TREE_H) $(TM_H) toplev.h $(RTL_H) $(EXPR_H) \\\n+cp/typeck.o: cp/typeck.c $(CXX_TREE_H) $(TM_H) $(FLAGS_H) \\\n+  toplev.h $(DIAGNOSTIC_H) convert.h $(C_COMMON_H) $(TARGET_H) \\\n+  output.h toplev.h\n+cp/class.o: cp/class.c $(CXX_TREE_H) $(TM_H) $(FLAGS_H) toplev.h \\\n+  $(TARGET_H) convert.h $(CGRAPH_H) $(TREE_DUMP_H) gt-cp-class.h \\\n+  $(SPLAY_TREE_H)\n+cp/call.o: cp/call.c $(CXX_TREE_H) $(TM_H) $(FLAGS_H) toplev.h \\\n+  $(DIAGNOSTIC_H) intl.h gt-cp-call.h convert.h $(TARGET_H) langhooks.h\n+cp/friend.o: cp/friend.c $(CXX_TREE_H) $(TM_H) $(FLAGS_H) toplev.h\n+cp/init.o: cp/init.c $(CXX_TREE_H) $(TM_H) $(FLAGS_H) \\\n+  toplev.h $(EXCEPT_H) $(TARGET_H)\n+cp/method.o: cp/method.c $(CXX_TREE_H) $(TM_H) toplev.h \\\n   $(TM_P_H) $(TARGET_H) $(DIAGNOSTIC_H) gt-cp-method.h $(GIMPLE_H)\n cp/cvt.o: cp/cvt.c $(CXX_TREE_H) $(TM_H) cp/decl.h $(FLAGS_H) toplev.h \\\n   convert.h $(TARGET_H) intl.h\n-cp/search.o: cp/search.c $(CXX_TREE_H) $(TM_H) $(FLAGS_H) toplev.h $(RTL_H) \\\n+cp/search.o: cp/search.c $(CXX_TREE_H) $(TM_H) $(FLAGS_H) toplev.h \\\n   intl.h\n-cp/tree.o: cp/tree.c $(CXX_TREE_H) $(TM_H) $(FLAGS_H) toplev.h $(RTL_H) \\\n-  insn-config.h $(INTEGRATE_H) $(TREE_INLINE_H) $(REAL_H) gt-cp-tree.h \\\n-  $(TARGET_H) debug.h $(TREE_FLOW_H) $(CGRAPH_H)\n+cp/tree.o: cp/tree.c $(CXX_TREE_H) $(TM_H) $(FLAGS_H) toplev.h \\\n+  $(TREE_INLINE_H) $(REAL_H) gt-cp-tree.h \\\n+  $(TARGET_H) debug.h $(TREE_FLOW_H) $(CGRAPH_H) $(SPLAY_TREE_H)\n cp/ptree.o: cp/ptree.c $(CXX_TREE_H) $(TM_H)\n cp/rtti.o: cp/rtti.c $(CXX_TREE_H) $(TM_H) $(FLAGS_H) toplev.h convert.h \\\n   $(TARGET_H) $(C_PRAGMA_H) gt-cp-rtti.h intl.h\n-cp/except.o: cp/except.c $(CXX_TREE_H) $(TM_H) $(FLAGS_H) $(RTL_H) except.h \\\n-  toplev.h cp/cfns.h $(EXPR_H) libfuncs.h $(TREE_INLINE_H) $(TARGET_H)\n-cp/expr.o: cp/expr.c $(CXX_TREE_H) $(TM_H) $(RTL_H) $(FLAGS_H) $(EXPR_H) \\\n-  toplev.h except.h $(TM_P_H)\n+cp/except.o: cp/except.c $(CXX_TREE_H) $(TM_H) $(FLAGS_H) $(EXCEPT_H) \\\n+  toplev.h cp/cfns.h $(TREE_INLINE_H) $(TARGET_H)\n+cp/expr.o: cp/expr.c $(CXX_TREE_H) $(TM_H) $(FLAGS_H) \\\n+  toplev.h $(EXCEPT_H) $(TM_P_H)\n cp/pt.o: cp/pt.c $(CXX_TREE_H) $(TM_H) cp/decl.h cp/cp-objcp-common.h \\\n-  toplev.h $(RTL_H) except.h $(TREE_INLINE_H) pointer-set.h gt-cp-pt.h \\\n+  toplev.h $(EXCEPT_H) $(TREE_INLINE_H) pointer-set.h gt-cp-pt.h \\\n   vecprim.h intl.h\n cp/error.o: cp/error.c $(CXX_TREE_H) $(TM_H) toplev.h $(DIAGNOSTIC_H) \\\n   $(FLAGS_H) $(REAL_H) $(LANGHOOKS_DEF_H) $(CXX_PRETTY_PRINT_H) \\\n   tree-diagnostic.h tree-pretty-print.h\n cp/repo.o: cp/repo.c $(CXX_TREE_H) $(TM_H) toplev.h $(DIAGNOSTIC_H) \\\n   gt-cp-repo.h\n-cp/semantics.o: cp/semantics.c $(CXX_TREE_H) $(TM_H) except.h toplev.h \\\n-  $(FLAGS_H) debug.h output.h $(RTL_H) $(TIMEVAR_H) $(EXPR_H) \\\n+cp/semantics.o: cp/semantics.c $(CXX_TREE_H) $(TM_H) $(EXCEPT_H) toplev.h \\\n+  $(FLAGS_H) output.h $(RTL_H) $(TIMEVAR_H) \\\n   $(TREE_INLINE_H) $(CGRAPH_H) $(TARGET_H) $(C_COMMON_H) $(GIMPLE_H) \\\n   bitmap.h gt-cp-semantics.h\n cp/dump.o: cp/dump.c $(CXX_TREE_H) $(TM_H) $(TREE_DUMP_H)\n-cp/optimize.o: cp/optimize.c $(CXX_TREE_H) $(TM_H) rtl.h $(INTEGRATE_H) \\\n-  insn-config.h input.h $(PARAMS_H) debug.h $(TREE_INLINE_H) $(GIMPLE_H) \\\n+cp/optimize.o: cp/optimize.c $(CXX_TREE_H) $(TM_H) \\\n+  input.h $(PARAMS_H) debug.h $(TREE_INLINE_H) $(GIMPLE_H) \\\n   $(TARGET_H) tree-iterator.h $(CGRAPH_H)\n cp/mangle.o: cp/mangle.c $(CXX_TREE_H) $(TM_H) toplev.h $(REAL_H) \\\n   gt-cp-mangle.h $(TARGET_H) $(TM_P_H) $(CGRAPH_H)"}, {"sha": "76fec59c3532ac174003a346b8cd790b08c66332", "filename": "gcc/cp/call.c", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/245763e30a7125036bd41001f8612c48f10a2635/gcc%2Fcp%2Fcall.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/245763e30a7125036bd41001f8612c48f10a2635/gcc%2Fcp%2Fcall.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcall.c?ref=245763e30a7125036bd41001f8612c48f10a2635", "patch": "@@ -32,9 +32,7 @@ along with GCC; see the file COPYING3.  If not see\n #include \"cp-tree.h\"\n #include \"output.h\"\n #include \"flags.h\"\n-#include \"rtl.h\"\n #include \"toplev.h\"\n-#include \"expr.h\"\n #include \"diagnostic.h\"\n #include \"intl.h\"\n #include \"target.h\""}, {"sha": "523f401e86871c022b525dc0cf3649d087ecdf74", "filename": "gcc/cp/class.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/245763e30a7125036bd41001f8612c48f10a2635/gcc%2Fcp%2Fclass.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/245763e30a7125036bd41001f8612c48f10a2635/gcc%2Fcp%2Fclass.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fclass.c?ref=245763e30a7125036bd41001f8612c48f10a2635", "patch": "@@ -30,13 +30,13 @@ along with GCC; see the file COPYING3.  If not see\n #include \"tree.h\"\n #include \"cp-tree.h\"\n #include \"flags.h\"\n-#include \"rtl.h\"\n #include \"output.h\"\n #include \"toplev.h\"\n #include \"target.h\"\n #include \"convert.h\"\n #include \"cgraph.h\"\n #include \"tree-dump.h\"\n+#include \"splay-tree.h\"\n \n /* The number of nested classes being processed.  If we are not in the\n    scope of any class, this is zero.  */\n@@ -3955,7 +3955,7 @@ build_clone (tree fn, tree name)\n     }\n \n   /* Create the RTL for this function.  */\n-  SET_DECL_RTL (clone, NULL_RTX);\n+  SET_DECL_RTL (clone, NULL);\n   rest_of_decl_compilation (clone, /*top_level=*/1, at_eof);\n \n   if (pch_file)"}, {"sha": "3128ad3766a9ad223878955bdec241206ba12e7b", "filename": "gcc/cp/cp-tree.h", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/245763e30a7125036bd41001f8612c48f10a2635/gcc%2Fcp%2Fcp-tree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/245763e30a7125036bd41001f8612c48f10a2635/gcc%2Fcp%2Fcp-tree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcp-tree.h?ref=245763e30a7125036bd41001f8612c48f10a2635", "patch": "@@ -26,7 +26,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"ggc.h\"\n #include \"function.h\"\n #include \"hashtab.h\"\n-#include \"splay-tree.h\"\n #include \"vec.h\"\n #include \"c-common.h\"\n #include \"name-lookup.h\"\n@@ -244,9 +243,6 @@ typedef struct template_parm_index_s template_parm_index;\n \n struct GTY(()) ptrmem_cst {\n   struct tree_common common;\n-  /* This isn't used, but the middle-end expects all constants to have\n-     this field.  */\n-  rtx rtl;\n   tree member;\n };\n typedef struct ptrmem_cst * ptrmem_cst_t;"}, {"sha": "41bb5bc380f730d5335513cfe5d39a0c8efe1cb2", "filename": "gcc/cp/decl.c", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/245763e30a7125036bd41001f8612c48f10a2635/gcc%2Fcp%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/245763e30a7125036bd41001f8612c48f10a2635/gcc%2Fcp%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fdecl.c?ref=245763e30a7125036bd41001f8612c48f10a2635", "patch": "@@ -33,8 +33,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"coretypes.h\"\n #include \"tm.h\"\n #include \"tree.h\"\n-#include \"rtl.h\"\n-#include \"expr.h\"\n #include \"flags.h\"\n #include \"cp-tree.h\"\n #include \"tree-iterator.h\"\n@@ -55,8 +53,11 @@ along with GCC; see the file COPYING3.  If not see\n #include \"timevar.h\"\n #include \"tree-flow.h\"\n #include \"pointer-set.h\"\n+#include \"splay-tree.h\"\n #include \"plugin.h\"\n \n+#include \"rtl.h\"          /* For decl_default_tls_model.  */\n+\n static tree grokparms (tree parmlist, tree *);\n static const char *redeclaration_error_message (tree, tree);\n "}, {"sha": "031310112d78cc952e273a74d03b6f46689601a0", "filename": "gcc/cp/decl2.c", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/245763e30a7125036bd41001f8612c48f10a2635/gcc%2Fcp%2Fdecl2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/245763e30a7125036bd41001f8612c48f10a2635/gcc%2Fcp%2Fdecl2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fdecl2.c?ref=245763e30a7125036bd41001f8612c48f10a2635", "patch": "@@ -33,8 +33,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"coretypes.h\"\n #include \"tm.h\"\n #include \"tree.h\"\n-#include \"rtl.h\"\n-#include \"expr.h\"\n #include \"flags.h\"\n #include \"cp-tree.h\"\n #include \"decl.h\"\n@@ -53,6 +51,7 @@ along with GCC; see the file COPYING3.  If not see\n #include \"intl.h\"\n #include \"gimple.h\"\n #include \"pointer-set.h\"\n+#include \"splay-tree.h\"\n \n extern cpp_reader *parse_in;\n "}, {"sha": "de49095255cf9ed6f56e1c92945f11155493ff94", "filename": "gcc/cp/except.c", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/245763e30a7125036bd41001f8612c48f10a2635/gcc%2Fcp%2Fexcept.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/245763e30a7125036bd41001f8612c48f10a2635/gcc%2Fcp%2Fexcept.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fexcept.c?ref=245763e30a7125036bd41001f8612c48f10a2635", "patch": "@@ -28,9 +28,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"coretypes.h\"\n #include \"tm.h\"\n #include \"tree.h\"\n-#include \"rtl.h\"\n-#include \"expr.h\"\n-#include \"libfuncs.h\"\n #include \"cp-tree.h\"\n #include \"flags.h\"\n #include \"output.h\""}, {"sha": "ef5d6be3c5b6f149c6c34f59e6ebd7cc588213b4", "filename": "gcc/cp/expr.c", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/245763e30a7125036bd41001f8612c48f10a2635/gcc%2Fcp%2Fexpr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/245763e30a7125036bd41001f8612c48f10a2635/gcc%2Fcp%2Fexpr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fexpr.c?ref=245763e30a7125036bd41001f8612c48f10a2635", "patch": "@@ -24,10 +24,8 @@ along with GCC; see the file COPYING3.  If not see\n #include \"system.h\"\n #include \"coretypes.h\"\n #include \"tm.h\"\n-#include \"rtl.h\"\n #include \"tree.h\"\n #include \"flags.h\"\n-#include \"expr.h\"\n #include \"cp-tree.h\"\n #include \"toplev.h\"\n #include \"except.h\""}, {"sha": "7bc11c760f97cf18c8f2534d1fda71c086bcc28b", "filename": "gcc/cp/friend.c", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/245763e30a7125036bd41001f8612c48f10a2635/gcc%2Fcp%2Ffriend.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/245763e30a7125036bd41001f8612c48f10a2635/gcc%2Fcp%2Ffriend.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Ffriend.c?ref=245763e30a7125036bd41001f8612c48f10a2635", "patch": "@@ -23,8 +23,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"coretypes.h\"\n #include \"tm.h\"\n #include \"tree.h\"\n-#include \"rtl.h\"\n-#include \"expr.h\"\n #include \"cp-tree.h\"\n #include \"flags.h\"\n #include \"output.h\""}, {"sha": "3e56417ff36897e721ffaa8087ec9ee1961e3d73", "filename": "gcc/cp/init.c", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/245763e30a7125036bd41001f8612c48f10a2635/gcc%2Fcp%2Finit.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/245763e30a7125036bd41001f8612c48f10a2635/gcc%2Fcp%2Finit.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Finit.c?ref=245763e30a7125036bd41001f8612c48f10a2635", "patch": "@@ -27,8 +27,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"coretypes.h\"\n #include \"tm.h\"\n #include \"tree.h\"\n-#include \"rtl.h\"\n-#include \"expr.h\"\n #include \"cp-tree.h\"\n #include \"flags.h\"\n #include \"output.h\""}, {"sha": "124a83ced3d3ab4c49352038f1818a5ce4fe4a00", "filename": "gcc/cp/method.c", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/245763e30a7125036bd41001f8612c48f10a2635/gcc%2Fcp%2Fmethod.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/245763e30a7125036bd41001f8612c48f10a2635/gcc%2Fcp%2Fmethod.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fmethod.c?ref=245763e30a7125036bd41001f8612c48f10a2635", "patch": "@@ -29,8 +29,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"tm.h\"\n #include \"tree.h\"\n #include \"cp-tree.h\"\n-#include \"rtl.h\"\n-#include \"expr.h\"\n #include \"output.h\"\n #include \"flags.h\"\n #include \"toplev.h\"\n@@ -372,7 +370,7 @@ use_thunk (tree thunk_fndecl, bool emit_p)\n       tree x = copy_node (a);\n       TREE_CHAIN (x) = t;\n       DECL_CONTEXT (x) = thunk_fndecl;\n-      SET_DECL_RTL (x, NULL_RTX);\n+      SET_DECL_RTL (x, NULL);\n       DECL_HAS_VALUE_EXPR_P (x) = 0;\n       t = x;\n     }"}, {"sha": "f512570a3179ae54cc0ef14bebb1b229d2eab3f4", "filename": "gcc/cp/optimize.c", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/245763e30a7125036bd41001f8612c48f10a2635/gcc%2Fcp%2Foptimize.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/245763e30a7125036bd41001f8612c48f10a2635/gcc%2Fcp%2Foptimize.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Foptimize.c?ref=245763e30a7125036bd41001f8612c48f10a2635", "patch": "@@ -25,10 +25,7 @@ along with GCC; see the file COPYING3.  If not see\n #include \"tm.h\"\n #include \"tree.h\"\n #include \"cp-tree.h\"\n-#include \"rtl.h\"\n-#include \"insn-config.h\"\n #include \"input.h\"\n-#include \"integrate.h\"\n #include \"toplev.h\"\n #include \"params.h\"\n #include \"hashtab.h\""}, {"sha": "6c9f31d2eef2746c93295060841f8d848deabc97", "filename": "gcc/cp/pt.c", "status": "modified", "additions": 5, "deletions": 7, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/245763e30a7125036bd41001f8612c48f10a2635/gcc%2Fcp%2Fpt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/245763e30a7125036bd41001f8612c48f10a2635/gcc%2Fcp%2Fpt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fpt.c?ref=245763e30a7125036bd41001f8612c48f10a2635", "patch": "@@ -30,7 +30,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"system.h\"\n #include \"coretypes.h\"\n #include \"tm.h\"\n-#include \"obstack.h\"\n #include \"tree.h\"\n #include \"intl.h\"\n #include \"pointer-set.h\"\n@@ -43,7 +42,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"output.h\"\n #include \"except.h\"\n #include \"toplev.h\"\n-#include \"rtl.h\"\n #include \"timevar.h\"\n #include \"tree-iterator.h\"\n #include \"vecprim.h\"\n@@ -7241,7 +7239,7 @@ tsubst_friend_function (tree decl, tree args)\n      later if we need it.  */\n   if (TREE_CODE (new_friend) != TEMPLATE_DECL)\n     {\n-      SET_DECL_RTL (new_friend, NULL_RTX);\n+      SET_DECL_RTL (new_friend, NULL);\n       SET_DECL_ASSEMBLER_NAME (new_friend, NULL_TREE);\n     }\n \n@@ -9133,7 +9131,7 @@ tsubst_decl (tree t, tree args, tsubst_flags_t complain)\n \tTREE_TYPE (r) = type;\n \t/* Clear out the mangled name and RTL for the instantiation.  */\n \tSET_DECL_ASSEMBLER_NAME (r, NULL_TREE);\n-\tSET_DECL_RTL (r, NULL_RTX);\n+\tSET_DECL_RTL (r, NULL);\n \t/* Leave DECL_INITIAL set on deleted instantiations.  */\n \tif (!DECL_DELETED_FN (r))\n \t  DECL_INITIAL (r) = NULL_TREE;\n@@ -9561,12 +9559,12 @@ tsubst_decl (tree t, tree args, tsubst_flags_t complain)\n \t/* Clear out the mangled name and RTL for the instantiation.  */\n \tSET_DECL_ASSEMBLER_NAME (r, NULL_TREE);\n \tif (CODE_CONTAINS_STRUCT (TREE_CODE (t), TS_DECL_WRTL))\n-\t  SET_DECL_RTL (r, NULL_RTX);\n+\t  SET_DECL_RTL (r, NULL);\n \t/* The initializer must not be expanded until it is required;\n \t   see [temp.inst].  */\n \tDECL_INITIAL (r) = NULL_TREE;\n \tif (CODE_CONTAINS_STRUCT (TREE_CODE (t), TS_DECL_WRTL))\n-\t  SET_DECL_RTL (r, NULL_RTX);\n+\t  SET_DECL_RTL (r, NULL);\n \tDECL_SIZE (r) = DECL_SIZE_UNIT (r) = 0;\n \tif (TREE_CODE (r) == VAR_DECL)\n \t  {\n@@ -16814,7 +16812,7 @@ instantiate_decl (tree d, int defer_ok,\n \n       /* Clear out DECL_RTL; whatever was there before may not be right\n \t since we've reset the type of the declaration.  */\n-      SET_DECL_RTL (d, NULL_RTX);\n+      SET_DECL_RTL (d, NULL);\n       DECL_IN_AGGR_P (d) = 0;\n \n       /* The initializer is placed in DECL_INITIAL by"}, {"sha": "4843855bf70e4ec1ad6ac919badc34c425ca8953", "filename": "gcc/cp/search.c", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/245763e30a7125036bd41001f8612c48f10a2635/gcc%2Fcp%2Fsearch.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/245763e30a7125036bd41001f8612c48f10a2635/gcc%2Fcp%2Fsearch.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fsearch.c?ref=245763e30a7125036bd41001f8612c48f10a2635", "patch": "@@ -30,9 +30,7 @@ along with GCC; see the file COPYING3.  If not see\n #include \"tree.h\"\n #include \"cp-tree.h\"\n #include \"intl.h\"\n-#include \"obstack.h\"\n #include \"flags.h\"\n-#include \"rtl.h\"\n #include \"output.h\"\n #include \"toplev.h\"\n #include \"target.h\""}, {"sha": "72a72957abccc4b1f92254e7dbaf60cac8bff1d6", "filename": "gcc/cp/semantics.c", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/245763e30a7125036bd41001f8612c48f10a2635/gcc%2Fcp%2Fsemantics.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/245763e30a7125036bd41001f8612c48f10a2635/gcc%2Fcp%2Fsemantics.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fsemantics.c?ref=245763e30a7125036bd41001f8612c48f10a2635", "patch": "@@ -36,11 +36,8 @@ along with GCC; see the file COPYING3.  If not see\n #include \"except.h\"\n #include \"toplev.h\"\n #include \"flags.h\"\n-#include \"rtl.h\"\n-#include \"expr.h\"\n #include \"output.h\"\n #include \"timevar.h\"\n-#include \"debug.h\"\n #include \"diagnostic.h\"\n #include \"cgraph.h\"\n #include \"tree-iterator.h\"\n@@ -49,6 +46,8 @@ along with GCC; see the file COPYING3.  If not see\n #include \"gimple.h\"\n #include \"bitmap.h\"\n \n+#include \"rtl.h\"          /* For decl_default_tls_model.  */\n+\n /* There routines provide a modular interface to perform many parsing\n    operations.  They may therefore be used during actual parsing, or\n    during template instantiation, which may be regarded as a"}, {"sha": "d5ccd65a790031e9dbba9c743430ab5cafe04690", "filename": "gcc/cp/tree.c", "status": "modified", "additions": 1, "deletions": 4, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/245763e30a7125036bd41001f8612c48f10a2635/gcc%2Fcp%2Ftree.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/245763e30a7125036bd41001f8612c48f10a2635/gcc%2Fcp%2Ftree.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Ftree.c?ref=245763e30a7125036bd41001f8612c48f10a2635", "patch": "@@ -27,16 +27,13 @@ along with GCC; see the file COPYING3.  If not see\n #include \"tree.h\"\n #include \"cp-tree.h\"\n #include \"flags.h\"\n-#include \"rtl.h\"\n #include \"toplev.h\"\n-#include \"insn-config.h\"\n-#include \"integrate.h\"\n #include \"tree-inline.h\"\n #include \"debug.h\"\n-#include \"target.h\"\n #include \"convert.h\"\n #include \"tree-flow.h\"\n #include \"cgraph.h\"\n+#include \"splay-tree.h\"\n \n static tree bot_manip (tree *, int *, void *);\n static tree bot_replace (tree *, int *, void *);"}, {"sha": "d819c7fcfb9b6222590c78f93fccfc58c139be6f", "filename": "gcc/cp/typeck.c", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/245763e30a7125036bd41001f8612c48f10a2635/gcc%2Fcp%2Ftypeck.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/245763e30a7125036bd41001f8612c48f10a2635/gcc%2Fcp%2Ftypeck.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Ftypeck.c?ref=245763e30a7125036bd41001f8612c48f10a2635", "patch": "@@ -31,10 +31,7 @@ along with GCC; see the file COPYING3.  If not see\n #include \"coretypes.h\"\n #include \"tm.h\"\n #include \"tree.h\"\n-#include \"rtl.h\"\n-#include \"expr.h\"\n #include \"cp-tree.h\"\n-#include \"tm_p.h\"\n #include \"flags.h\"\n #include \"output.h\"\n #include \"toplev.h\""}, {"sha": "d48ff16c9e90e869a7ea3443952b224cdd3ea942", "filename": "gcc/objc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/245763e30a7125036bd41001f8612c48f10a2635/gcc%2Fobjc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/245763e30a7125036bd41001f8612c48f10a2635/gcc%2Fobjc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fobjc%2FChangeLog?ref=245763e30a7125036bd41001f8612c48f10a2635", "patch": "@@ -1,3 +1,11 @@\n+2010-05-25  Steven Bosscher  <steven@gcc.gnu.org>\n+\n+\t* objc-act.h: Do not include gimple.h.\n+\t* objc-act.c: Do not include rtl.h, expr.h, libfuncs.h, and tm_p.h.\n+\tInclude gimple.h.  Explain why except.h has to be included.\n+\t* objc-lang.c: Do not include diagnostics.h.\n+\t* Make-lang.in: Update dependencies.\n+\n 2010-05-25  Nathan Froyd  <froydnj@codesourcery.com>\n \n \t* objc-act.c (objc_build_constructor): Adjust OBJCPLUS impedance"}, {"sha": "144d01a5185c4e1ef7c03c5116788c6f53de7f40", "filename": "gcc/objc/Make-lang.in", "status": "modified", "additions": 4, "deletions": 5, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/245763e30a7125036bd41001f8612c48f10a2635/gcc%2Fobjc%2FMake-lang.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/245763e30a7125036bd41001f8612c48f10a2635/gcc%2Fobjc%2FMake-lang.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fobjc%2FMake-lang.in?ref=245763e30a7125036bd41001f8612c48f10a2635", "patch": "@@ -69,14 +69,13 @@ cc1obj$(exeext): $(OBJC_OBJS) $(C_AND_OBJC_OBJS) cc1obj-checksum.o $(BACKEND) $(\n # Objective C language specific files.\n \n objc/objc-lang.o : objc/objc-lang.c \\\n-   $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(TREE_H) \\\n-   $(C_TREE_H) $(DIAGNOSTIC_H) \\\n+   $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(TREE_H) $(C_TREE_H) \\\n    $(GGC_H) langhooks.h $(LANGHOOKS_DEF_H) $(C_COMMON_H) gtype-objc.h \\\n-   c-objc-common.h objc/objc-act.h $(GIMPLE_H)\n+   c-objc-common.h objc/objc-act.h\n \n objc/objc-act.o : objc/objc-act.c \\\n-   $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(TREE_H) $(RTL_H) $(TM_P_H) \\\n-   $(EXPR_H) $(TARGET_H) $(C_TREE_H) $(DIAGNOSTIC_H) toplev.h $(FLAGS_H) \\\n+   $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(TREE_H) \\\n+   $(TARGET_H) $(C_TREE_H) $(DIAGNOSTIC_H) toplev.h $(FLAGS_H) \\\n    objc/objc-act.h input.h $(FUNCTION_H) output.h debug.h langhooks.h \\\n    $(LANGHOOKS_DEF_H) $(HASHTAB_H) $(C_PRAGMA_H) gt-objc-objc-act.h \\\n    $(GIMPLE_H) c-lang.h"}, {"sha": "b1ca2e4249cf3fb595d3c9c2070ac750d0692e69", "filename": "gcc/objc/objc-act.c", "status": "modified", "additions": 4, "deletions": 5, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/245763e30a7125036bd41001f8612c48f10a2635/gcc%2Fobjc%2Fobjc-act.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/245763e30a7125036bd41001f8612c48f10a2635/gcc%2Fobjc%2Fobjc-act.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fobjc%2Fobjc-act.c?ref=245763e30a7125036bd41001f8612c48f10a2635", "patch": "@@ -45,9 +45,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"coretypes.h\"\n #include \"tm.h\"\n #include \"tree.h\"\n-#include \"rtl.h\"\n-#include \"tm_p.h\"\n-#include \"expr.h\"\n \n #ifdef OBJCPLUS\n #include \"cp-tree.h\"\n@@ -62,7 +59,7 @@ along with GCC; see the file COPYING3.  If not see\n #include \"langhooks.h\"\n #include \"objc-act.h\"\n #include \"input.h\"\n-#include \"except.h\"\n+#include \"except.h\"\t/* For USING_SJLJ_EXCEPTIONS.  */\n #include \"function.h\"\n #include \"output.h\"\n #include \"toplev.h\"\n@@ -73,10 +70,12 @@ along with GCC; see the file COPYING3.  If not see\n #include \"intl.h\"\n #include \"cgraph.h\"\n #include \"tree-iterator.h\"\n-#include \"libfuncs.h\"\n #include \"hashtab.h\"\n #include \"langhooks-def.h\"\n \n+/* For enum gimplify_status */\n+#include \"gimple.h\"\n+\n #define OBJC_VOID_AT_END\tvoid_list_node\n \n static unsigned int should_call_super_dealloc = 0;"}, {"sha": "d8bf0f62f931ac103c4120191a0c92eafde3fb82", "filename": "gcc/objc/objc-act.h", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/245763e30a7125036bd41001f8612c48f10a2635/gcc%2Fobjc%2Fobjc-act.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/245763e30a7125036bd41001f8612c48f10a2635/gcc%2Fobjc%2Fobjc-act.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fobjc%2Fobjc-act.h?ref=245763e30a7125036bd41001f8612c48f10a2635", "patch": "@@ -22,9 +22,6 @@ along with GCC; see the file COPYING3.  If not see\n #ifndef GCC_OBJC_ACT_H\n #define GCC_OBJC_ACT_H\n \n-/* For enum gimplify_status */\n-#include \"gimple.h\"\n-\n /*** Language hooks ***/\n \n bool objc_init (void);"}, {"sha": "04cea974f45cb26b521f2fb7064c250f49508640", "filename": "gcc/objc/objc-lang.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/245763e30a7125036bd41001f8612c48f10a2635/gcc%2Fobjc%2Fobjc-lang.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/245763e30a7125036bd41001f8612c48f10a2635/gcc%2Fobjc%2Fobjc-lang.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fobjc%2Fobjc-lang.c?ref=245763e30a7125036bd41001f8612c48f10a2635", "patch": "@@ -31,7 +31,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"objc-act.h\"\n #include \"langhooks.h\"\n #include \"langhooks-def.h\"\n-#include \"diagnostic.h\"\n #include \"c-objc-common.h\"\n \n enum c_language_kind c_language = clk_objc;"}, {"sha": "8623bb591048c4389cba819615d7346a5b16ab4e", "filename": "gcc/objcp/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/245763e30a7125036bd41001f8612c48f10a2635/gcc%2Fobjcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/245763e30a7125036bd41001f8612c48f10a2635/gcc%2Fobjcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fobjcp%2FChangeLog?ref=245763e30a7125036bd41001f8612c48f10a2635", "patch": "@@ -1,3 +1,12 @@\n+2010-05-25  Steven Bosscher  <steven@gcc.gnu.org>\n+\n+\t* objcp-decl.c: Do not include tm.h, rtl.h, expr.h, c-common.h,\n+\tflags.h, input.h, except.h, output.h, toplev.h, cpplib.h, debug.h,\n+\tand target.h.\n+\t* objcp-lang.c: Do not include tm.h, toplev.h, diagnostics.h,\n+\tand debug.h.  Explain why except.h has to be included.\n+\t* Make-lang.in: Update dependencies.\n+\n 2010-04-30  Steven Bosscher  <steven@gcc.gnu.org>\n \n \t* objcp-decl.c: Do not include varray.h."}, {"sha": "873b9080ebfee7147aede14bc244aa48053e0962", "filename": "gcc/objcp/Make-lang.in", "status": "modified", "additions": 5, "deletions": 6, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/245763e30a7125036bd41001f8612c48f10a2635/gcc%2Fobjcp%2FMake-lang.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/245763e30a7125036bd41001f8612c48f10a2635/gcc%2Fobjcp%2FMake-lang.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fobjcp%2FMake-lang.in?ref=245763e30a7125036bd41001f8612c48f10a2635", "patch": "@@ -71,14 +71,13 @@ cc1objplus$(exeext): $(OBJCXX_OBJS) cc1objplus-checksum.o $(BACKEND) $(LIBDEPS)\n # Objective C++ language specific files.\n \n objcp/objcp-lang.o : objcp/objcp-lang.c \\\n-  $(CXX_TREE_H) $(TM_H) toplev.h debug.h langhooks.h objc/objc-act.h \\\n-  $(LANGHOOKS_DEF_H) $(C_COMMON_H) gtype-objcp.h \\\n-  $(DIAGNOSTIC_H) cp/cp-objcp-common.h $(GIMPLE_H) $(EXCEPT_H)\n+  $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(TREE_H) $(CXX_TREE_H) \\\n+  $(C_COMMON_H) $(LANGHOOKS_DEF_H) objc/objc-act.h cp/cp-objcp-common.h \\\n+  gtype-objcp.h $(EXCEPT_H)\n \n objcp/objcp-decl.o : objcp/objcp-decl.c \\\n-   $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(TREE_H) $(C_TREE_H) \\\n-   toplev.h $(GGC_H) $(C_PRAGMA_H) input.h $(FLAGS_H) output.h \\\n-   objc/objc-act.h objcp/objcp-decl.h $(GIMPLE_H) $(EXPR_H) $(TARGET_H)\n+   $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(TREE_H) $(CXX_TREE_H) \\\n+   objc/objc-act.h objcp/objcp-decl.h\n \n # The following must be an explicit rule; please keep in sync with the implicit\n # one in Makefile.in."}, {"sha": "8c688761098eab8a68a12d7f51fb5e30040eb276", "filename": "gcc/objcp/objcp-decl.c", "status": "modified", "additions": 0, "deletions": 11, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/245763e30a7125036bd41001f8612c48f10a2635/gcc%2Fobjcp%2Fobjcp-decl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/245763e30a7125036bd41001f8612c48f10a2635/gcc%2Fobjcp%2Fobjcp-decl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fobjcp%2Fobjcp-decl.c?ref=245763e30a7125036bd41001f8612c48f10a2635", "patch": "@@ -24,18 +24,7 @@ along with GCC; see the file COPYING3.  If not see\n #include \"coretypes.h\"\n #include \"tm.h\"\n #include \"tree.h\"\n-#include \"rtl.h\"\n-#include \"expr.h\"\n #include \"cp-tree.h\"\n-#include \"c-common.h\"\n-#include \"flags.h\"\n-#include \"input.h\"\n-#include \"except.h\"\n-#include \"output.h\"\n-#include \"toplev.h\"\n-#include \"cpplib.h\"\n-#include \"debug.h\"\n-#include \"target.h\"\n \n #include \"objc-act.h\"\n #include \"objcp-decl.h\""}, {"sha": "4708229f26166df944bfe019c44f619b77da73e6", "filename": "gcc/objcp/objcp-lang.c", "status": "modified", "additions": 1, "deletions": 4, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/245763e30a7125036bd41001f8612c48f10a2635/gcc%2Fobjcp%2Fobjcp-lang.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/245763e30a7125036bd41001f8612c48f10a2635/gcc%2Fobjcp%2Fobjcp-lang.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fobjcp%2Fobjcp-lang.c?ref=245763e30a7125036bd41001f8612c48f10a2635", "patch": "@@ -26,14 +26,11 @@ along with GCC; see the file COPYING3.  If not see\n #include \"tree.h\"\n #include \"cp-tree.h\"\n #include \"c-common.h\"\n-#include \"toplev.h\"\n #include \"objc-act.h\"\n #include \"langhooks.h\"\n #include \"langhooks-def.h\"\n-#include \"diagnostic.h\"\n-#include \"debug.h\"\n #include \"cp-objcp-common.h\"\n-#include \"except.h\"\n+#include \"except.h\"\t/* For USING_SJLJ_EXCEPTIONS.  */\n \n enum c_language_kind c_language = clk_objcxx;\n static void objcxx_init_ts (void);"}]}