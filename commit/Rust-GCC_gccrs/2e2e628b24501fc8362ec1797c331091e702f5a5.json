{"sha": "2e2e628b24501fc8362ec1797c331091e702f5a5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmUyZTYyOGIyNDUwMWZjODM2MmVjMTc5N2MzMzEwOTFlNzAyZjVhNQ==", "commit": {"author": {"name": "Marc Glisse", "email": "marc.glisse@inria.fr", "date": "2012-10-30T12:56:47Z"}, "committer": {"name": "Marc Glisse", "email": "glisse@gcc.gnu.org", "date": "2012-10-30T12:56:47Z"}, "message": "fold-const.c (fold_binary_op_with_conditional_arg): Handle vectors.\n\n2012-10-30  Marc Glisse  <marc.glisse@inria.fr>\n\n\t* fold-const.c (fold_binary_op_with_conditional_arg): Handle vectors.\n\t(fold_binary_loc): call it for VEC_COND_EXPR.\n\nFrom-SVN: r192986", "tree": {"sha": "43e796b6b41df8a8571952bfe92a803c5aec082f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/43e796b6b41df8a8571952bfe92a803c5aec082f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2e2e628b24501fc8362ec1797c331091e702f5a5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2e2e628b24501fc8362ec1797c331091e702f5a5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2e2e628b24501fc8362ec1797c331091e702f5a5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2e2e628b24501fc8362ec1797c331091e702f5a5/comments", "author": {"login": "mglisse", "id": 10097863, "node_id": "MDQ6VXNlcjEwMDk3ODYz", "avatar_url": "https://avatars.githubusercontent.com/u/10097863?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mglisse", "html_url": "https://github.com/mglisse", "followers_url": "https://api.github.com/users/mglisse/followers", "following_url": "https://api.github.com/users/mglisse/following{/other_user}", "gists_url": "https://api.github.com/users/mglisse/gists{/gist_id}", "starred_url": "https://api.github.com/users/mglisse/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mglisse/subscriptions", "organizations_url": "https://api.github.com/users/mglisse/orgs", "repos_url": "https://api.github.com/users/mglisse/repos", "events_url": "https://api.github.com/users/mglisse/events{/privacy}", "received_events_url": "https://api.github.com/users/mglisse/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "4fda1ad1dcd40178e001a11b6cd82bce5eed7260", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4fda1ad1dcd40178e001a11b6cd82bce5eed7260", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4fda1ad1dcd40178e001a11b6cd82bce5eed7260"}], "stats": {"total": 22, "additions": 18, "deletions": 4}, "files": [{"sha": "8cf846bbd62a9cfeb5f7d93c1c891955ec9a568c", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2e2e628b24501fc8362ec1797c331091e702f5a5/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2e2e628b24501fc8362ec1797c331091e702f5a5/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=2e2e628b24501fc8362ec1797c331091e702f5a5", "patch": "@@ -1,3 +1,8 @@\n+2012-10-30  Marc Glisse  <marc.glisse@inria.fr>\n+\n+\t* fold-const.c (fold_binary_op_with_conditional_arg): Handle vectors.\n+\t(fold_binary_loc): call it for VEC_COND_EXPR.\n+\n 2012-10-30  James Greenhalgh  <james.greenhalgh@arm.com>\n \t    Tejas Belagod  <tejas.belagod@arm.com>\n "}, {"sha": "0caca2e579468acd8c75e5d876723819edd16608", "filename": "gcc/fold-const.c", "status": "modified", "additions": 13, "deletions": 4, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2e2e628b24501fc8362ec1797c331091e702f5a5/gcc%2Ffold-const.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2e2e628b24501fc8362ec1797c331091e702f5a5/gcc%2Ffold-const.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffold-const.c?ref=2e2e628b24501fc8362ec1797c331091e702f5a5", "patch": "@@ -5959,8 +5959,10 @@ fold_binary_op_with_conditional_arg (location_t loc,\n   tree test, true_value, false_value;\n   tree lhs = NULL_TREE;\n   tree rhs = NULL_TREE;\n+  enum tree_code cond_code = COND_EXPR;\n \n-  if (TREE_CODE (cond) == COND_EXPR)\n+  if (TREE_CODE (cond) == COND_EXPR\n+      || TREE_CODE (cond) == VEC_COND_EXPR)\n     {\n       test = TREE_OPERAND (cond, 0);\n       true_value = TREE_OPERAND (cond, 1);\n@@ -5981,6 +5983,9 @@ fold_binary_op_with_conditional_arg (location_t loc,\n       false_value = constant_boolean_node (false, testtype);\n     }\n \n+  if (TREE_CODE (TREE_TYPE (test)) == VECTOR_TYPE)\n+    cond_code = VEC_COND_EXPR;\n+\n   /* This transformation is only worthwhile if we don't have to wrap ARG\n      in a SAVE_EXPR and the operation can be simplified on at least one\n      of the branches once its pushed inside the COND_EXPR.  */\n@@ -6011,7 +6016,7 @@ fold_binary_op_with_conditional_arg (location_t loc,\n   if (!TREE_CONSTANT (arg) && !TREE_CONSTANT (lhs) && !TREE_CONSTANT (rhs))\n     return NULL_TREE;\n \n-  return fold_build3_loc (loc, COND_EXPR, type, test, lhs, rhs);\n+  return fold_build3_loc (loc, cond_code, type, test, lhs, rhs);\n }\n \n \f\n@@ -9871,7 +9876,9 @@ fold_binary_loc (location_t loc,\n \t\t\t     tem);\n \t}\n \n-      if (TREE_CODE (arg0) == COND_EXPR || COMPARISON_CLASS_P (arg0))\n+      if (TREE_CODE (arg0) == COND_EXPR\n+\t  || TREE_CODE (arg0) == VEC_COND_EXPR\n+\t  || COMPARISON_CLASS_P (arg0))\n \t{\n \t  tem = fold_binary_op_with_conditional_arg (loc, code, type, op0, op1,\n \t\t\t\t\t\t     arg0, arg1,\n@@ -9880,7 +9887,9 @@ fold_binary_loc (location_t loc,\n \t    return tem;\n \t}\n \n-      if (TREE_CODE (arg1) == COND_EXPR || COMPARISON_CLASS_P (arg1))\n+      if (TREE_CODE (arg1) == COND_EXPR\n+\t  || TREE_CODE (arg1) == VEC_COND_EXPR\n+\t  || COMPARISON_CLASS_P (arg1))\n \t{\n \t  tem = fold_binary_op_with_conditional_arg (loc, code, type, op0, op1,\n \t\t\t\t\t\t     arg1, arg0,"}]}