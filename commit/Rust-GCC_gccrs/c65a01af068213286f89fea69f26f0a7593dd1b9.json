{"sha": "c65a01af068213286f89fea69f26f0a7593dd1b9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzY1YTAxYWYwNjgyMTMyODZmODlmZWE2OWYyNmYwYTc1OTNkZDFiOQ==", "commit": {"author": {"name": "Richard Guenther", "email": "richard.guenther@uni-tuebingen.de", "date": "2004-04-30T05:29:23Z"}, "committer": {"name": "Jim Wilson", "email": "wilson@gcc.gnu.org", "date": "2004-04-30T05:29:23Z"}, "message": "Patch from Richard Guenther.\n\n* commom.opt (Wfatal-errors): Add it.\n* diagnostic.c (flag_fatal_errors): Define it.\n(diagnostic_action_after_output): Check for flag_fatal_errors.\n* flags.h (flag_fatal_errors): Declare it.\n* opts.c (common_handle_option): Add OPT_Wfatal_errors.\n* doc/invoke.texi (Warning Options): Document -Wfatal-errors.\n\nFrom-SVN: r81323", "tree": {"sha": "6a6d9a948a86807f77ca3ea4ba0484743388b9e7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6a6d9a948a86807f77ca3ea4ba0484743388b9e7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c65a01af068213286f89fea69f26f0a7593dd1b9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c65a01af068213286f89fea69f26f0a7593dd1b9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c65a01af068213286f89fea69f26f0a7593dd1b9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c65a01af068213286f89fea69f26f0a7593dd1b9/comments", "author": null, "committer": null, "parents": [{"sha": "d1c6a4014429a8f3e3267c3f41c0be77b198fb38", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d1c6a4014429a8f3e3267c3f41c0be77b198fb38", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d1c6a4014429a8f3e3267c3f41c0be77b198fb38"}], "stats": {"total": 35, "additions": 34, "deletions": 1}, "files": [{"sha": "7460ff7fc0922954022722732c82199c92c76f6c", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c65a01af068213286f89fea69f26f0a7593dd1b9/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c65a01af068213286f89fea69f26f0a7593dd1b9/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=c65a01af068213286f89fea69f26f0a7593dd1b9", "patch": "@@ -1,3 +1,12 @@\n+2004-04-29  Richard Guenther  <richard.guenther@uni-tuebingen.de>\n+\n+\t* commom.opt (Wfatal-errors): Add it.\n+\t* diagnostic.c (flag_fatal_errors): Define it.\n+\t(diagnostic_action_after_output): Check for flag_fatal_errors.\n+\t* flags.h (flag_fatal_errors): Declare it.\n+\t* opts.c (common_handle_option): Add OPT_Wfatal_errors.\n+\t* doc/invoke.texi (Warning Options): Document -Wfatal-errors.\n+\n 2004-04-30  Josef Zlomek  <zlomekj@suse.cz>\n \n \t* gcse.c (remove_reachable_equiv_notes): Delete notes also in"}, {"sha": "92748d330629ff2f3f49813c2f425f28eada49c2", "filename": "gcc/common.opt", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c65a01af068213286f89fea69f26f0a7593dd1b9/gcc%2Fcommon.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c65a01af068213286f89fea69f26f0a7593dd1b9/gcc%2Fcommon.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcommon.opt?ref=c65a01af068213286f89fea69f26f0a7593dd1b9", "patch": "@@ -76,6 +76,10 @@ Wextra\n Common\n Print extra (possibly unwanted) warnings\n \n+Wfatal-errors\n+Common\n+Exit on the first error occurred\n+\n Winline\n Common\n Warn when an inlined function cannot be inlined"}, {"sha": "16afddc1b4befcbad83311e06b447e21236da79d", "filename": "gcc/diagnostic.c", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c65a01af068213286f89fea69f26f0a7593dd1b9/gcc%2Fdiagnostic.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c65a01af068213286f89fea69f26f0a7593dd1b9/gcc%2Fdiagnostic.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdiagnostic.c?ref=c65a01af068213286f89fea69f26f0a7593dd1b9", "patch": "@@ -67,6 +67,7 @@ diagnostic_context *global_dc = &global_diagnostic_context;\n with preprocessed source if appropriate.\\n\\\n See %s for instructions.\\n\"\n \n+int flag_fatal_errors = 0;\n \f\n /* Return a malloc'd string containing MSG formatted a la printf.  The\n    caller is responsible for freeing the memory.  */\n@@ -264,6 +265,11 @@ diagnostic_action_after_output (diagnostic_context *context,\n     case DK_SORRY:\n       if (context->abort_on_error)\n \treal_abort ();\n+      if (flag_fatal_errors)\n+\t{\n+\t  fnotice (stderr, \"compilation terminated due to -Wfatal-errors.\\n\");\n+\t  exit (FATAL_EXIT_CODE);\n+\t}\n       break;\n \n     case DK_ICE:"}, {"sha": "6161c1811ba7a9e2782316d86a0cdff940684943", "filename": "gcc/doc/invoke.texi", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c65a01af068213286f89fea69f26f0a7593dd1b9/gcc%2Fdoc%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c65a01af068213286f89fea69f26f0a7593dd1b9/gcc%2Fdoc%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finvoke.texi?ref=c65a01af068213286f89fea69f26f0a7593dd1b9", "patch": "@@ -214,7 +214,7 @@ in the following sections.\n -Wconversion  -Wno-deprecated-declarations @gol\n -Wdisabled-optimization  -Wno-div-by-zero  -Wendif-labels @gol\n -Werror  -Werror-implicit-function-declaration @gol\n--Wfloat-equal  -Wformat  -Wformat=2 @gol\n+-Wfatal-errors  -Wfloat-equal  -Wformat  -Wformat=2 @gol\n -Wno-format-extra-args -Wformat-nonliteral @gol\n -Wformat-security  -Wformat-y2k @gol\n -Wimplicit  -Wimplicit-function-declaration  -Wimplicit-int @gol\n@@ -2065,6 +2065,12 @@ machines.\n Warn whenever a comment-start sequence @samp{/*} appears in a @samp{/*}\n comment, or whenever a Backslash-Newline appears in a @samp{//} comment.\n \n+@item -Wfatal-errors\n+@opindex Wfatal-errors\n+This option causes the compiler to abort compilation on the first error\n+occurred rather than trying to keep going and printing further error\n+messages.\n+\n @item -Wformat\n @opindex Wformat\n Check calls to @code{printf} and @code{scanf}, etc., to make sure that"}, {"sha": "b4fc10d7f9037fdcdb9f1b7926226ca8a1091123", "filename": "gcc/flags.h", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c65a01af068213286f89fea69f26f0a7593dd1b9/gcc%2Fflags.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c65a01af068213286f89fea69f26f0a7593dd1b9/gcc%2Fflags.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fflags.h?ref=c65a01af068213286f89fea69f26f0a7593dd1b9", "patch": "@@ -407,6 +407,10 @@ extern int flag_really_no_inline;\n extern int flag_syntax_only;\n extern int rtl_dump_and_exit;\n \n+/* Nonzero if we are exiting on the first error occurred.  */\n+\n+extern int flag_fatal_errors;\n+\n /* Nonzero means we should save auxiliary info into a .X file.  */\n \n extern int flag_gen_aux_info;"}, {"sha": "b0ede80e610c2c3f22e6ea69385598fe09bc1962", "filename": "gcc/opts.c", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c65a01af068213286f89fea69f26f0a7593dd1b9/gcc%2Fopts.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c65a01af068213286f89fea69f26f0a7593dd1b9/gcc%2Fopts.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fopts.c?ref=c65a01af068213286f89fea69f26f0a7593dd1b9", "patch": "@@ -742,6 +742,10 @@ common_handle_option (size_t scode, const char *arg,\n       set_Wextra (value);\n       break;\n \n+    case OPT_Wfatal_errors:\n+      flag_fatal_errors = value;\n+      break;\n+\n     case OPT_Winline:\n       warn_inline = value;\n       break;"}]}