{"sha": "39c58b3afac8967ed1ff8022a6fc25e2585b6966", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzljNThiM2FmYWM4OTY3ZWQxZmY4MDIyYTZmYzI1ZTI1ODViNjk2Ng==", "commit": {"author": {"name": "Richard Guenther", "email": "rguenther@suse.de", "date": "2012-07-30T11:18:15Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2012-07-30T11:18:15Z"}, "message": "tree-into-ssa.c (mark_def_sites): Also process virtual operands.\n\n2012-07-30  Richard Guenther  <rguenther@suse.de>\n\n\t* tree-into-ssa.c (mark_def_sites): Also process virtual operands.\n\t(rewrite_stmt): Likewise.\n\t(rewrite_enter_block): Likewise.\n\t(pass_build_ssa): Do not update virtual SSA form during TODO.\n\t(mark_symbol_for_renaming): Do nothing if we are not in SSA form.\n\t* lto-streamer-in.c (lto_read_body): Set in_ssa_p earlier.\n\n\t* gcc.dg/ipa/ipa-pta-3.c: Adjust.\n\t* gcc.dg/ipa/ipa-pta-4.c: Likewise.\n\t* gcc.dg/tm/memopt-3.c: Likewise.\n\nFrom-SVN: r189969", "tree": {"sha": "5769ce3241b99d674904f6c6315977327a22eab1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5769ce3241b99d674904f6c6315977327a22eab1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/39c58b3afac8967ed1ff8022a6fc25e2585b6966", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/39c58b3afac8967ed1ff8022a6fc25e2585b6966", "html_url": "https://github.com/Rust-GCC/gccrs/commit/39c58b3afac8967ed1ff8022a6fc25e2585b6966", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/39c58b3afac8967ed1ff8022a6fc25e2585b6966/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "974f90baf29fd1ac7a091126fde9bab10a8dd282", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/974f90baf29fd1ac7a091126fde9bab10a8dd282", "html_url": "https://github.com/Rust-GCC/gccrs/commit/974f90baf29fd1ac7a091126fde9bab10a8dd282"}], "stats": {"total": 42, "additions": 23, "deletions": 19}, "files": [{"sha": "2b445f8cc9ef764714336fb61ec19affe54a2f71", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/39c58b3afac8967ed1ff8022a6fc25e2585b6966/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/39c58b3afac8967ed1ff8022a6fc25e2585b6966/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=39c58b3afac8967ed1ff8022a6fc25e2585b6966", "patch": "@@ -1,3 +1,12 @@\n+2012-07-30  Richard Guenther  <rguenther@suse.de>\n+\n+\t* tree-into-ssa.c (mark_def_sites): Also process virtual operands.\n+\t(rewrite_stmt): Likewise.\n+\t(rewrite_enter_block): Likewise.\n+\t(pass_build_ssa): Do not update virtual SSA form during TODO.\n+\t(mark_symbol_for_renaming): Do nothing if we are not in SSA form.\n+\t* lto-streamer-in.c (lto_read_body): Set in_ssa_p earlier.\n+\n 2012-07-30  Oleg Endo  <olegendo@gcc.gnu.org>\n \n \tPR target/39423"}, {"sha": "d497eef5a55a49b5e26abc873bf7cb1f2cd4bdb9", "filename": "gcc/lto-streamer-in.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/39c58b3afac8967ed1ff8022a6fc25e2585b6966/gcc%2Flto-streamer-in.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/39c58b3afac8967ed1ff8022a6fc25e2585b6966/gcc%2Flto-streamer-in.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flto-streamer-in.c?ref=39c58b3afac8967ed1ff8022a6fc25e2585b6966", "patch": "@@ -979,6 +979,9 @@ lto_read_body (struct lto_file_decl_data *file_data, tree fn_decl,\n       push_cfun (fn);\n       init_tree_ssa (fn);\n \n+      /* We input IL in SSA form.  */\n+      cfun->gimple_df->in_ssa_p = true;\n+\n       /* Use the function's decl state. */\n       decl_state = lto_get_function_in_decl_state (file_data, fn_decl);\n       gcc_assert (decl_state);\n@@ -1015,9 +1018,6 @@ lto_read_body (struct lto_file_decl_data *file_data, tree fn_decl,\n \t    }\n \t}\n \n-      /* We should now be in SSA.  */\n-      cfun->gimple_df->in_ssa_p = true;\n-\n       /* Restore decl state */\n       file_data->current_decl_state = file_data->global_decl_state;\n "}, {"sha": "47900809b9fc0ec6e4117829f84aa8165c48d8b4", "filename": "gcc/testsuite/gcc.dg/ipa/ipa-pta-3.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/39c58b3afac8967ed1ff8022a6fc25e2585b6966/gcc%2Ftestsuite%2Fgcc.dg%2Fipa%2Fipa-pta-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/39c58b3afac8967ed1ff8022a6fc25e2585b6966/gcc%2Ftestsuite%2Fgcc.dg%2Fipa%2Fipa-pta-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fipa%2Fipa-pta-3.c?ref=39c58b3afac8967ed1ff8022a6fc25e2585b6966", "patch": "@@ -23,6 +23,6 @@ int main()\n \n /* { dg-final { scan-ipa-dump \"foo.arg0 = &a\" \"pta\" } } */\n /* { dg-final { scan-ipa-dump \"foo.arg1 = &b\" \"pta\" } } */\n-/* { dg-final { scan-tree-dump \"Replaced \\\\\\*p_1\\\\\\(D\\\\\\) with 1\" \"fre2\" } } */\n+/* { dg-final { scan-tree-dump \"Replaced \\\\\\*p_2\\\\\\(D\\\\\\) with 1\" \"fre2\" } } */\n /* { dg-final { cleanup-tree-dump \"fre2\" } } */\n /* { dg-final { cleanup-ipa-dump \"pta\" } } */"}, {"sha": "bf6fa281d5a865efefb9cb0a4f24554274d97925", "filename": "gcc/testsuite/gcc.dg/ipa/ipa-pta-4.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/39c58b3afac8967ed1ff8022a6fc25e2585b6966/gcc%2Ftestsuite%2Fgcc.dg%2Fipa%2Fipa-pta-4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/39c58b3afac8967ed1ff8022a6fc25e2585b6966/gcc%2Ftestsuite%2Fgcc.dg%2Fipa%2Fipa-pta-4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fipa%2Fipa-pta-4.c?ref=39c58b3afac8967ed1ff8022a6fc25e2585b6966", "patch": "@@ -28,6 +28,6 @@ int main()\n \n /* { dg-final { scan-ipa-dump \"foo.arg0 = &a\" \"pta\" } } */\n /* { dg-final { scan-ipa-dump \"foo.arg1 = &b\" \"pta\" } } */\n-/* { dg-final { scan-tree-dump \"Replaced \\\\\\*p_1\\\\\\(D\\\\\\) with 1\" \"fre2\" } } */\n+/* { dg-final { scan-tree-dump \"Replaced \\\\\\*p_2\\\\\\(D\\\\\\) with 1\" \"fre2\" } } */\n /* { dg-final { cleanup-tree-dump \"fre2\" } } */\n /* { dg-final { cleanup-ipa-dump \"pta\" } } */"}, {"sha": "1220ffc4a0bfd77c908f03f482e5fd8d99f834a4", "filename": "gcc/testsuite/gcc.dg/tm/memopt-3.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/39c58b3afac8967ed1ff8022a6fc25e2585b6966/gcc%2Ftestsuite%2Fgcc.dg%2Ftm%2Fmemopt-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/39c58b3afac8967ed1ff8022a6fc25e2585b6966/gcc%2Ftestsuite%2Fgcc.dg%2Ftm%2Fmemopt-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftm%2Fmemopt-3.c?ref=39c58b3afac8967ed1ff8022a6fc25e2585b6966", "patch": "@@ -16,5 +16,5 @@ int f()\n   return lala.x[0];\n }\n \n-/* { dg-final { scan-tree-dump-times \"logging: lala.x\\\\\\[i_1\\\\\\]\" 1 \"tmmark\" } } */\n+/* { dg-final { scan-tree-dump-times \"logging: lala.x\\\\\\[i_4\\\\\\]\" 1 \"tmmark\" } } */\n /* { dg-final { cleanup-tree-dump \"tmmark\" } } */"}, {"sha": "ea433ed5dc4d50488b20ed64e8b415c79c84ba4f", "filename": "gcc/tree-into-ssa.c", "status": "modified", "additions": 8, "deletions": 13, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/39c58b3afac8967ed1ff8022a6fc25e2585b6966/gcc%2Ftree-into-ssa.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/39c58b3afac8967ed1ff8022a6fc25e2585b6966/gcc%2Ftree-into-ssa.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-into-ssa.c?ref=39c58b3afac8967ed1ff8022a6fc25e2585b6966", "patch": "@@ -675,7 +675,7 @@ mark_def_sites (basic_block bb, gimple stmt, bitmap kills)\n \n   /* If a variable is used before being set, then the variable is live\n      across a block boundary, so mark it live-on-entry to BB.  */\n-  FOR_EACH_SSA_USE_OPERAND (use_p, stmt, iter, SSA_OP_USE)\n+  FOR_EACH_SSA_USE_OPERAND (use_p, stmt, iter, SSA_OP_ALL_USES)\n     {\n       tree sym = USE_FROM_PTR (use_p);\n       gcc_assert (DECL_P (sym));\n@@ -686,7 +686,7 @@ mark_def_sites (basic_block bb, gimple stmt, bitmap kills)\n \n   /* Now process the defs.  Mark BB as the definition block and add\n      each def to the set of killed symbols.  */\n-  FOR_EACH_SSA_TREE_OPERAND (def, stmt, iter, SSA_OP_DEF)\n+  FOR_EACH_SSA_TREE_OPERAND (def, stmt, iter, SSA_OP_ALL_DEFS)\n     {\n       gcc_assert (DECL_P (def));\n       set_def_block (def, bb, false);\n@@ -1336,7 +1336,7 @@ rewrite_stmt (gimple_stmt_iterator si)\n       if (is_gimple_debug (stmt))\n \trewrite_debug_stmt_uses (stmt);\n       else\n-\tFOR_EACH_SSA_USE_OPERAND (use_p, stmt, iter, SSA_OP_USE)\n+\tFOR_EACH_SSA_USE_OPERAND (use_p, stmt, iter, SSA_OP_ALL_USES)\n \t  {\n \t    tree var = USE_FROM_PTR (use_p);\n \t    gcc_assert (DECL_P (var));\n@@ -1346,7 +1346,7 @@ rewrite_stmt (gimple_stmt_iterator si)\n \n   /* Step 2.  Register the statement's DEF operands.  */\n   if (register_defs_p (stmt))\n-    FOR_EACH_SSA_DEF_OPERAND (def_p, stmt, iter, SSA_OP_DEF)\n+    FOR_EACH_SSA_DEF_OPERAND (def_p, stmt, iter, SSA_OP_ALL_DEFS)\n       {\n \ttree var = DEF_FROM_PTR (def_p);\n \ttree name = make_ssa_name (var, stmt);\n@@ -1404,7 +1404,6 @@ static void\n rewrite_enter_block (struct dom_walk_data *walk_data ATTRIBUTE_UNUSED,\n \t\t     basic_block bb)\n {\n-  gimple phi;\n   gimple_stmt_iterator gsi;\n \n   if (dump_file && (dump_flags & TDF_DETAILS))\n@@ -1418,11 +1417,7 @@ rewrite_enter_block (struct dom_walk_data *walk_data ATTRIBUTE_UNUSED,\n      node introduces a new version for the associated variable.  */\n   for (gsi = gsi_start_phis (bb); !gsi_end_p (gsi); gsi_next (&gsi))\n     {\n-      tree result;\n-\n-      phi = gsi_stmt (gsi);\n-      result = gimple_phi_result (phi);\n-      gcc_assert (is_gimple_reg (result));\n+      tree result = gimple_phi_result (gsi_stmt (gsi));\n       register_new_def (result, SSA_NAME_VAR (result));\n     }\n \n@@ -2437,8 +2432,7 @@ struct gimple_opt_pass pass_build_ssa =\n   PROP_ssa,\t\t\t\t/* properties_provided */\n   0,\t\t\t\t\t/* properties_destroyed */\n   0,\t\t\t\t\t/* todo_flags_start */\n-  TODO_update_ssa_only_virtuals\n-    | TODO_verify_ssa\n+  TODO_verify_ssa\n     | TODO_remove_unused_locals\t\t/* todo_flags_finish */\n  }\n };\n@@ -2889,7 +2883,8 @@ register_new_name_mapping (tree new_tree, tree old)\n void\n mark_sym_for_renaming (tree sym)\n {\n-  bitmap_set_bit (SYMS_TO_RENAME (cfun), DECL_UID (sym));\n+  if (cfun->gimple_df->in_ssa_p)\n+    bitmap_set_bit (SYMS_TO_RENAME (cfun), DECL_UID (sym));\n }\n \n "}]}