{"sha": "b505fab860138fe421b466f6e89cbe4a6a419fca", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjUwNWZhYjg2MDEzOGZlNDIxYjQ2NmY2ZTg5Y2JlNGE2YTQxOWZjYQ==", "commit": {"author": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1992-05-15T20:24:03Z"}, "committer": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1992-05-15T20:24:03Z"}, "message": "*** empty log message ***\n\nFrom-SVN: r991", "tree": {"sha": "e424d78a7e5f1757103956766b2584068cac118c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e424d78a7e5f1757103956766b2584068cac118c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b505fab860138fe421b466f6e89cbe4a6a419fca", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b505fab860138fe421b466f6e89cbe4a6a419fca", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b505fab860138fe421b466f6e89cbe4a6a419fca", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b505fab860138fe421b466f6e89cbe4a6a419fca/comments", "author": null, "committer": null, "parents": [{"sha": "963dc8f540238beb098625d8de653bbf01de2962", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/963dc8f540238beb098625d8de653bbf01de2962", "html_url": "https://github.com/Rust-GCC/gccrs/commit/963dc8f540238beb098625d8de653bbf01de2962"}], "stats": {"total": 49, "additions": 31, "deletions": 18}, "files": [{"sha": "993bd60908e71c7142b8e60a651f369c842e2079", "filename": "gcc/config/i860/fx2800.h", "status": "modified", "additions": 25, "deletions": 14, "changes": 39, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b505fab860138fe421b466f6e89cbe4a6a419fca/gcc%2Fconfig%2Fi860%2Ffx2800.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b505fab860138fe421b466f6e89cbe4a6a419fca/gcc%2Fconfig%2Fi860%2Ffx2800.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi860%2Ffx2800.h?ref=b505fab860138fe421b466f6e89cbe4a6a419fca", "patch": "@@ -107,26 +107,37 @@ the Free Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA.  */\n   tree decl;\t\t\t\t\t\t\t\t\\\n   int i;\t\t\t\t\t\t\t\t\\\n \t\t\t\t\t\t\t\t\t\\\n-  for (i=1;*dtyps[i];i++) {\t\t\t\t\t\t\\\n-\tdecl = IDENTIFIER_GLOBAL_VALUE (get_identifier (dtyps[i]));\t\\\n-\tif (decl) {\t\t\t\t\t\t\t\\\n+  for (i=1;*dtyps[i];i++)\t\t\t\t\t\t\\\n+    for (decl = syms; decl; decl = TREE_CHAIN(decl))\t\t\t\\\n+\tif ((TREE_CODE (decl) == TYPE_DECL) &&\t\t\t\t\\\n+\t    !strcmp(IDENTIFIER_POINTER(DECL_NAME(decl)), dtyps[i])) {\t\\\n \t\tTYPE_SYMTAB_ADDRESS (TREE_TYPE (decl)) = i;\t\t\\\n \t\ttypevec[i] = TYPE_DEFINED;\t\t\t\t\\\n \t\tdbxout_symbol (decl, 0);\t\t\t\t\\\n+\t\tbreak;\t\t\t\t\t\t\t\\\n \t}\t\t\t\t\t\t\t\t\\\n-  }\t\t\t\t\t\t\t\t\t\\\n \t\t\t\t\t\t\t\t\t\\\n-  decl = IDENTIFIER_GLOBAL_VALUE (get_identifier (\"long int\"));\t\t\\\n-  TYPE_SYMTAB_ADDRESS (TREE_TYPE (decl)) = i;\t\t\t\t\\\n-  typevec[i] = TYPE_DEFINED;\t\t\t\t\t\t\\\n-  fprintf(asmfile,\".stab \\\"long int:t%d=3\\\",0,0x%x,0,0\\n\",i++,N_LSYM);\t\\\n-  TREE_ASM_WRITTEN (decl) = 1;\t\t\t\t\t\t\\\n+  for (decl = syms; decl; decl = TREE_CHAIN(decl))\t\t\t\\\n+    if ((TREE_CODE (decl) == TYPE_DECL) &&\t\t\t\t\\\n+\t!strcmp(IDENTIFIER_POINTER(DECL_NAME(decl)),\"long int\")) {\t\\\n+      TYPE_SYMTAB_ADDRESS (TREE_TYPE (decl)) = i;\t\t\t\\\n+      typevec[i] = TYPE_DEFINED;\t\t\t\t\t\\\n+      fprintf(asmfile,\".stab \\\"long int:t%d=3\\\",0,0x%x,0,0\\n\",\t\t\\\n+\t\ti++,N_LSYM);\t\t\t\t\t\t\\\n+      TREE_ASM_WRITTEN (decl) = 1;\t\t\t\t\t\\\n+      break;\t\t\t\t\t\t\t\t\\\n+    }\t\t\t\t\t\t\t\t\t\\\n \t\t\t\t\t\t\t\t\t\\\n-  decl = IDENTIFIER_GLOBAL_VALUE (get_identifier (\"long unsigned int\"));\\\n-  TYPE_SYMTAB_ADDRESS (TREE_TYPE (decl)) = i;\t\t\t\t\\\n-  typevec[i] = TYPE_DEFINED;\t\t\t\t\t\t\\\n-  fprintf(asmfile,\".stab \\\"long unsigned int:t%d=17\\\",0,0x%x,0,0\\n\",i++,N_LSYM);\\\n-  TREE_ASM_WRITTEN (decl) = 1;\t\t\t\t\t\t\\\n+  for (decl = syms; decl; decl = TREE_CHAIN(decl))\t\t\t\\\n+    if ((TREE_CODE (decl) == TYPE_DECL) && !strcmp(\t\t\t\\\n+\tIDENTIFIER_POINTER(DECL_NAME(decl)),\"long unsigned int\")) {\t\\\n+      TYPE_SYMTAB_ADDRESS (TREE_TYPE (decl)) = i;\t\t\t\\\n+      typevec[i] = TYPE_DEFINED;\t\t\t\t\t\\\n+      fprintf(asmfile,\".stab \\\"long unsigned int:t%d=17\\\",0,0x%x,0,0\\n\",\\\n+\t\ti++,N_LSYM);\t\t\t\t\t\t\\\n+      TREE_ASM_WRITTEN (decl) = 1;\t\t\t\t\t\\\n+      break;\t\t\t\t\t\t\t\t\\\n+    }\t\t\t\t\t\t\t\t\t\\\n   next_type_number = i; };\n \n /* Alliant dbx doesn't understand split names... */"}, {"sha": "f4ecdb25e47eb43cc8eda0e689c9776cf402eae5", "filename": "gcc/config/i860/i860.c", "status": "modified", "additions": 6, "deletions": 4, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b505fab860138fe421b466f6e89cbe4a6a419fca/gcc%2Fconfig%2Fi860%2Fi860.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b505fab860138fe421b466f6e89cbe4a6a419fca/gcc%2Fconfig%2Fi860%2Fi860.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi860%2Fi860.c?ref=b505fab860138fe421b466f6e89cbe4a6a419fca", "patch": "@@ -669,12 +669,14 @@ singlemove_string (operands)\n     }\n  if (GET_CODE (operands[1]) == CONST_INT)\n    {\n+     if (operands[1] == const0_rtx)\n+      return \"mov %?r0,%0\";\n      if((INTVAL (operands[1]) & 0xffff0000) == 0)\n       return \"or %L1,%?r0,%0\";\n+     if((INTVAL (operands[1]) & 0xffff8000) == 0xffff8000)\n+      return \"adds %1,%?r0,%0\";\n      if((INTVAL (operands[1]) & 0x0000ffff) == 0)\n       return \"orh %H1,%?r0,%0\";\n-     if (operands[1] == const0_rtx)\n-      return \"mov %?r0,%0\";\n    }\n   return \"mov %1,%0\";\n }\n@@ -1196,7 +1198,7 @@ output_size_for_block_move (size, reg, align)\n \n #if 1\n   cc_status.flags &= ~ CC_KNOW_HI_R31;\n-  output_asm_insn (\"mov %1,%0\", xoperands);\n+  output_asm_insn (singlemove_string (xoperands), xoperands);\n #else\n   if (GET_CODE (size) == REG)\n     output_asm_insn (\"sub %2,%1,%0\", xoperands);\n@@ -1621,7 +1623,7 @@ sfmode_constant_to_ulong (x)\n     abort ();\n \n #if TARGET_FLOAT_FORMAT != HOST_FLOAT_FORMAT\n-# error IEEE emulation needed\n+ error IEEE emulation needed\n #endif\n   REAL_VALUE_FROM_CONST_DOUBLE (d, x);\n   u2.f = d;"}]}