{"sha": "cc175e7c89539b0b55ef73c0ba9c7a6e062cc0d4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2MxNzVlN2M4OTUzOWIwYjU1ZWY3M2MwYmE5YzdhNmUwNjJjYzBkNA==", "commit": {"author": {"name": "Nathan Sidwell", "email": "nathan@codesourcery.com", "date": "2004-11-25T10:31:38Z"}, "committer": {"name": "Nathan Sidwell", "email": "nathan@gcc.gnu.org", "date": "2004-11-25T10:31:38Z"}, "message": "basic-block.h (OBSTACK_ALLOC_REG_SET): Adjust.\n\n\t* basic-block.h (OBSTACK_ALLOC_REG_SET): Adjust.\n\t(FREE_REG_SET): Adjust.\n\t* bitmap.c (bitmap_obstack_free): Cope with NULL bitmap.\n\t* bitmap.h (BITMAP_OBSTACK_ALLOC): Rename to ...\n\t(BITMAP_ALLOC): ... here.\n\t(BITMAP_OBSTACK_FREE): Rename to ...\n\t(BITMAP_FREE): Don't check for NULL bitmap here.\n\t* tree-ssa-pre.c (value_insert_into_set_bitmap,\n\tbitmap_set_new): Use new names.\n\nFrom-SVN: r91281", "tree": {"sha": "60167593bb07447210914ff3d3ea5ed5f3a01a6a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/60167593bb07447210914ff3d3ea5ed5f3a01a6a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/cc175e7c89539b0b55ef73c0ba9c7a6e062cc0d4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cc175e7c89539b0b55ef73c0ba9c7a6e062cc0d4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cc175e7c89539b0b55ef73c0ba9c7a6e062cc0d4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cc175e7c89539b0b55ef73c0ba9c7a6e062cc0d4/comments", "author": null, "committer": null, "parents": [{"sha": "d0397fd9704cffd78f00ba2f74add6a46a4c3044", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d0397fd9704cffd78f00ba2f74add6a46a4c3044", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d0397fd9704cffd78f00ba2f74add6a46a4c3044"}], "stats": {"total": 41, "additions": 24, "deletions": 17}, "files": [{"sha": "59750285b58e3f75ae4538162450680494a1949a", "filename": "gcc/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cc175e7c89539b0b55ef73c0ba9c7a6e062cc0d4/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cc175e7c89539b0b55ef73c0ba9c7a6e062cc0d4/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=cc175e7c89539b0b55ef73c0ba9c7a6e062cc0d4", "patch": "@@ -1,5 +1,15 @@\n 2004-11-25  Nathan Sidwell  <nathan@codesourcery.com>\n \n+\t* basic-block.h (OBSTACK_ALLOC_REG_SET): Adjust.\n+\t(FREE_REG_SET): Adjust.\n+\t* bitmap.c (bitmap_obstack_free): Cope with NULL bitmap.\n+\t* bitmap.h (BITMAP_OBSTACK_ALLOC): Rename to ...\n+\t(BITMAP_ALLOC): ... here.\n+\t(BITMAP_OBSTACK_FREE): Rename to ...\n+\t(BITMAP_FREE): Don't check for NULL bitmap here.\n+\t* tree-ssa-pre.c (value_insert_into_set_bitmap,\n+\tbitmap_set_new): Use new names.\n+\n \t* bt-load.c (migrate_btr_defs): Remove unneeded NULL check.\n \t* df.c (df_free): Likewise.\n \t* ra-build.c (ra_build_free, ra_build_free_all): Likewise."}, {"sha": "0a3f2e08105b4474a96a9be5e8b197f4eb525795", "filename": "gcc/basic-block.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cc175e7c89539b0b55ef73c0ba9c7a6e062cc0d4/gcc%2Fbasic-block.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cc175e7c89539b0b55ef73c0ba9c7a6e062cc0d4/gcc%2Fbasic-block.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fbasic-block.h?ref=cc175e7c89539b0b55ef73c0ba9c7a6e062cc0d4", "patch": "@@ -38,10 +38,10 @@ typedef bitmap_head regset_head;\n typedef bitmap regset;\n \n /* Allocate a register set with oballoc.  */\n-#define ALLOC_REG_SET(OBSTACK) BITMAP_OBSTACK_ALLOC (OBSTACK)\n+#define ALLOC_REG_SET(OBSTACK) BITMAP_ALLOC (OBSTACK)\n \n /* Do any cleanup needed on a regset when it is no longer used.  */\n-#define FREE_REG_SET(REGSET) BITMAP_OBSTACK_FREE (REGSET)\n+#define FREE_REG_SET(REGSET) BITMAP_FREE (REGSET)\n \n /* Initialize a new regset.  */\n #define INIT_REG_SET(HEAD) bitmap_initialize (HEAD, &reg_obstack)"}, {"sha": "275e440d6c3220c05f7ef479396162ed81ea6782", "filename": "gcc/bitmap.c", "status": "modified", "additions": 6, "deletions": 3, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cc175e7c89539b0b55ef73c0ba9c7a6e062cc0d4/gcc%2Fbitmap.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cc175e7c89539b0b55ef73c0ba9c7a6e062cc0d4/gcc%2Fbitmap.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fbitmap.c?ref=cc175e7c89539b0b55ef73c0ba9c7a6e062cc0d4", "patch": "@@ -241,9 +241,12 @@ bitmap_malloc_alloc (void)\n void\n bitmap_obstack_free (bitmap map)\n {\n-  bitmap_clear (map);\n-  map->first = (void *)map->obstack->heads;\n-  map->obstack->heads = map;\n+  if (map)\n+    {\n+      bitmap_clear (map);\n+      map->first = (void *)map->obstack->heads;\n+      map->obstack->heads = map;\n+    }\n }\n \n /* Release a malloc allocated bitmap.  */"}, {"sha": "fb599cb275991d73a1ae5a6ba72b847edca3eb91", "filename": "gcc/bitmap.h", "status": "modified", "additions": 3, "deletions": 9, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cc175e7c89539b0b55ef73c0ba9c7a6e062cc0d4/gcc%2Fbitmap.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cc175e7c89539b0b55ef73c0ba9c7a6e062cc0d4/gcc%2Fbitmap.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fbitmap.h?ref=cc175e7c89539b0b55ef73c0ba9c7a6e062cc0d4", "patch": "@@ -156,7 +156,7 @@ extern void bitmap_malloc_free (bitmap);\n extern unsigned bitmap_first_set_bit (bitmap);\n \n /* Allocate a bitmap from a bit obstack.  */\n-#define BITMAP_OBSTACK_ALLOC(OBSTACK) bitmap_obstack_alloc (OBSTACK)\n+#define BITMAP_ALLOC(OBSTACK) bitmap_obstack_alloc (OBSTACK)\n \n /* Allocate a gc'd bitmap.  */\n #define BITMAP_GGC_ALLOC() bitmap_gc_alloc ()\n@@ -165,14 +165,8 @@ extern unsigned bitmap_first_set_bit (bitmap);\n #define BITMAP_XMALLOC() bitmap_malloc_alloc ()\n \n /* Do any cleanup needed on a bitmap when it is no longer used.  */\n-#define BITMAP_OBSTACK_FREE(BITMAP)\t\t\t\\\n-do {\t\t\t\t\t\t\\\n-  if (BITMAP)\t\t\t\t\t\\\n-    {\t\t\t\t\t\t\\\n-      bitmap_obstack_free (BITMAP);\t\t\\\n-      (BITMAP) = 0;\t\t\t\t\\\n-    }\t\t\t\t\t\t\\\n-} while (0)\n+#define BITMAP_FREE(BITMAP)\t\t\t\\\n+      \t((void)(bitmap_obstack_free (BITMAP), (BITMAP) = NULL))\n \n /* Do any cleanup needed on an xmalloced bitmap when it is no longer used.  */\n #define BITMAP_XFREE(BITMAP)\t\t\t\\"}, {"sha": "cbf43c42a70c5f88b21a22c3defdfb25cd008bac", "filename": "gcc/tree-ssa-pre.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cc175e7c89539b0b55ef73c0ba9c7a6e062cc0d4/gcc%2Ftree-ssa-pre.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cc175e7c89539b0b55ef73c0ba9c7a6e062cc0d4/gcc%2Ftree-ssa-pre.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-pre.c?ref=cc175e7c89539b0b55ef73c0ba9c7a6e062cc0d4", "patch": "@@ -462,7 +462,7 @@ value_insert_into_set_bitmap (value_set_t set, tree v)\n   gcc_assert (set->indexed);\n \n   if (set->values == NULL)\n-    set->values = BITMAP_OBSTACK_ALLOC (&grand_bitmap_obstack);\n+    set->values = BITMAP_ALLOC (&grand_bitmap_obstack);\n \n   bitmap_set_bit (set->values, VALUE_HANDLE_ID (v));\n }\n@@ -474,8 +474,8 @@ static bitmap_set_t\n bitmap_set_new (void)\n {\n   bitmap_set_t ret = pool_alloc (bitmap_set_pool);\n-  ret->expressions = BITMAP_OBSTACK_ALLOC (&grand_bitmap_obstack);\n-  ret->values = BITMAP_OBSTACK_ALLOC (&grand_bitmap_obstack);\n+  ret->expressions = BITMAP_ALLOC (&grand_bitmap_obstack);\n+  ret->values = BITMAP_ALLOC (&grand_bitmap_obstack);\n   return ret;\n }\n "}]}