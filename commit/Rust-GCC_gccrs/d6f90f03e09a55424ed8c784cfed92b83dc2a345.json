{"sha": "d6f90f03e09a55424ed8c784cfed92b83dc2a345", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDZmOTBmMDNlMDlhNTU0MjRlZDhjNzg0Y2ZlZDkyYjgzZGMyYTM0NQ==", "commit": {"author": {"name": "Paolo Carlini", "email": "paolo.carlini@oracle.com", "date": "2012-02-20T21:08:48Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2012-02-20T21:08:48Z"}, "message": "re PR libstdc++/52241 (Performance degradation of 447.dealII on corei7 at spec2006_base32.)\n\n2012-02-20  Paolo Carlini  <paolo.carlini@oracle.com>\n\n\tPR libstdc++/52241\n\t* src/c++98/tree.cc (local_Rb_tree_increment,\n\tlocal_Rb_tree_decrement): Add.\n\t(_Rb_tree_increment(const _Rb_tree_node_base*),\n\t_Rb_tree_decrement(const _Rb_tree_node_base*)): Use the latter.\n\t(_Rb_tree_increment(_Rb_tree_node_base*),\n\t_Rb_tree_decrement(_Rb_tree_node_base*)): New.\n\nFrom-SVN: r184404", "tree": {"sha": "80430dd0b825a4c46e9bdefba291ea5c5988b4b7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/80430dd0b825a4c46e9bdefba291ea5c5988b4b7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d6f90f03e09a55424ed8c784cfed92b83dc2a345", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d6f90f03e09a55424ed8c784cfed92b83dc2a345", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d6f90f03e09a55424ed8c784cfed92b83dc2a345", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d6f90f03e09a55424ed8c784cfed92b83dc2a345/comments", "author": null, "committer": null, "parents": [{"sha": "63b08143d6c6f74ce8ed3f5a83adc070cddc8e6b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/63b08143d6c6f74ce8ed3f5a83adc070cddc8e6b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/63b08143d6c6f74ce8ed3f5a83adc070cddc8e6b"}], "stats": {"total": 36, "additions": 29, "deletions": 7}, "files": [{"sha": "01679dc3c5cce8c2adf5c059289fa2a9d98744c9", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d6f90f03e09a55424ed8c784cfed92b83dc2a345/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d6f90f03e09a55424ed8c784cfed92b83dc2a345/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=d6f90f03e09a55424ed8c784cfed92b83dc2a345", "patch": "@@ -1,3 +1,13 @@\n+2012-02-20  Paolo Carlini  <paolo.carlini@oracle.com>\n+\n+\tPR libstdc++/52241\n+\t* src/c++98/tree.cc (local_Rb_tree_increment,\n+\tlocal_Rb_tree_decrement): Add.\n+\t(_Rb_tree_increment(const _Rb_tree_node_base*),\n+\t_Rb_tree_decrement(const _Rb_tree_node_base*)): Use the latter.\n+\t(_Rb_tree_increment(_Rb_tree_node_base*),\n+\t_Rb_tree_decrement(_Rb_tree_node_base*)): New.\n+\n 2012-02-20  Paolo Carlini  <paolo.carlini@oracle.com>\n \n \tPR libstdc++/52309"}, {"sha": "731ce367a927bdba927d829fffc94e527fe622c1", "filename": "libstdc++-v3/src/c++98/tree.cc", "status": "modified", "additions": 19, "deletions": 7, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d6f90f03e09a55424ed8c784cfed92b83dc2a345/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B98%2Ftree.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d6f90f03e09a55424ed8c784cfed92b83dc2a345/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B98%2Ftree.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B98%2Ftree.cc?ref=d6f90f03e09a55424ed8c784cfed92b83dc2a345", "patch": "@@ -1,6 +1,6 @@\n // RB tree utilities implementation -*- C++ -*-\n \n-// Copyright (C) 2003, 2005, 2009 Free Software Foundation, Inc.\n+// Copyright (C) 2003, 2005, 2009, 2012 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -56,8 +56,8 @@ namespace std _GLIBCXX_VISIBILITY(default)\n {\n _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \n-  _Rb_tree_node_base*\n-  _Rb_tree_increment(_Rb_tree_node_base* __x) throw ()\n+  static _Rb_tree_node_base*\n+  local_Rb_tree_increment(_Rb_tree_node_base* __x) throw ()\n   {\n     if (__x->_M_right != 0) \n       {\n@@ -79,14 +79,20 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n     return __x;\n   }\n \n+  _Rb_tree_node_base*\n+  _Rb_tree_increment(_Rb_tree_node_base* __x) throw ()\n+  {\n+    return local_Rb_tree_increment(__x);\n+  }\n+\n   const _Rb_tree_node_base*\n   _Rb_tree_increment(const _Rb_tree_node_base* __x) throw ()\n   {\n-    return _Rb_tree_increment(const_cast<_Rb_tree_node_base*>(__x));\n+    return local_Rb_tree_increment(const_cast<_Rb_tree_node_base*>(__x));\n   }\n \n-  _Rb_tree_node_base*\n-  _Rb_tree_decrement(_Rb_tree_node_base* __x) throw ()\n+  static _Rb_tree_node_base*\n+  local_Rb_tree_decrement(_Rb_tree_node_base* __x) throw ()\n   {\n     if (__x->_M_color == _S_red \n         && __x->_M_parent->_M_parent == __x)\n@@ -111,10 +117,16 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n     return __x;\n   }\n \n+  _Rb_tree_node_base*\n+  _Rb_tree_decrement(_Rb_tree_node_base* __x) throw ()\n+  {\n+    return local_Rb_tree_decrement(__x);\n+  }\n+\n   const _Rb_tree_node_base*\n   _Rb_tree_decrement(const _Rb_tree_node_base* __x) throw ()\n   {\n-    return _Rb_tree_decrement(const_cast<_Rb_tree_node_base*>(__x));\n+    return local_Rb_tree_decrement(const_cast<_Rb_tree_node_base*>(__x));\n   }\n \n   static void "}]}