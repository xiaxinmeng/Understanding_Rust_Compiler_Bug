{"sha": "69eb61d47a9c6dae5308134ee809d85882fbeb10", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjllYjYxZDQ3YTljNmRhZTUzMDgxMzRlZTgwOWQ4NTg4MmZiZWIxMA==", "commit": {"author": {"name": "Tobias Burnus", "email": "burnus@net-b.de", "date": "2011-02-15T21:30:43Z"}, "committer": {"name": "Tobias Burnus", "email": "burnus@gcc.gnu.org", "date": "2011-02-15T21:30:43Z"}, "message": "re PR libfortran/47716 (libgfortran quadmath_weak.h not found on NetBSD 5.1)\n\n2011-02-15  Tobias Burnus  <burnus@net-b.de>\n\n        PR fortran/47716\n        PR fortran/47648\n        * acinclude.m4 (LIBGFOR_CHECK_FLOAT128): Use check from\n        libquadmath, which uses more features.\n        * configure: Regenerate.\n\nFrom-SVN: r170200", "tree": {"sha": "ea8ca213cedb7992d8e77abb99f171de9ede42aa", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ea8ca213cedb7992d8e77abb99f171de9ede42aa"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/69eb61d47a9c6dae5308134ee809d85882fbeb10", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/69eb61d47a9c6dae5308134ee809d85882fbeb10", "html_url": "https://github.com/Rust-GCC/gccrs/commit/69eb61d47a9c6dae5308134ee809d85882fbeb10", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/69eb61d47a9c6dae5308134ee809d85882fbeb10/comments", "author": {"login": "tob2", "id": 264461, "node_id": "MDQ6VXNlcjI2NDQ2MQ==", "avatar_url": "https://avatars.githubusercontent.com/u/264461?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tob2", "html_url": "https://github.com/tob2", "followers_url": "https://api.github.com/users/tob2/followers", "following_url": "https://api.github.com/users/tob2/following{/other_user}", "gists_url": "https://api.github.com/users/tob2/gists{/gist_id}", "starred_url": "https://api.github.com/users/tob2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tob2/subscriptions", "organizations_url": "https://api.github.com/users/tob2/orgs", "repos_url": "https://api.github.com/users/tob2/repos", "events_url": "https://api.github.com/users/tob2/events{/privacy}", "received_events_url": "https://api.github.com/users/tob2/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "fc2fa4fb3848f15a1f69843151214033f45edc07", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fc2fa4fb3848f15a1f69843151214033f45edc07", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fc2fa4fb3848f15a1f69843151214033f45edc07"}], "stats": {"total": 142, "additions": 108, "deletions": 34}, "files": [{"sha": "18daa42d3997f8ce62dbd40f7f480566708fd6b4", "filename": "libgfortran/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/69eb61d47a9c6dae5308134ee809d85882fbeb10/libgfortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/69eb61d47a9c6dae5308134ee809d85882fbeb10/libgfortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2FChangeLog?ref=69eb61d47a9c6dae5308134ee809d85882fbeb10", "patch": "@@ -1,3 +1,11 @@\n+2011-02-15  Tobias Burnus  <burnus@net-b.de>\n+\n+\tPR fortran/47716\n+\tPR fortran/47648\n+\t* acinclude.m4 (LIBGFOR_CHECK_FLOAT128): Use check from\n+\tlibquadmath, which uses more features.\n+\t* configure: Regenerate.\n+\n 2011-02-14  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR fortran/47642"}, {"sha": "1bc1c7bbbfd05e8ba2357c9b31881b8b275c363b", "filename": "libgfortran/acinclude.m4", "status": "modified", "additions": 27, "deletions": 18, "changes": 45, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/69eb61d47a9c6dae5308134ee809d85882fbeb10/libgfortran%2Facinclude.m4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/69eb61d47a9c6dae5308134ee809d85882fbeb10/libgfortran%2Facinclude.m4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Facinclude.m4?ref=69eb61d47a9c6dae5308134ee809d85882fbeb10", "patch": "@@ -284,24 +284,33 @@ AC_DEFUN([LIBGFOR_CHECK_FLOAT128], [\n \n   AC_CACHE_CHECK([whether we have a usable __float128 type],\n                  libgfor_cv_have_float128, [\n-    AC_TRY_LINK([\n-/* no header */\n-],[\n-  typedef _Complex float __attribute__((mode(TC))) __complex128;\n-\n-  __float128 x;\n-  x = __builtin_huge_valq() - 2.e1000Q;\n-\n-  __complex128 z1, z2;\n-  z1 = x;\n-  z2 = 2.Q;\n-\n-  z1 /= z2;\n-  z1 /= 7.Q;\n-],\n-    libgfor_cv_have_float128=yes,\n-    libgfor_cv_have_float128=no)\n-  ])\n+   GCC_TRY_COMPILE_OR_LINK([\n+    typedef _Complex float __attribute__((mode(TC))) __complex128;\n+\n+    __float128 foo (__float128 x)\n+    {\n+\n+     __complex128 z1, z2;\n+\n+     z1 = x;\n+     z2 = x / 7.Q;\n+     z2 /= z1;\n+\n+     return (__float128) z2;\n+    }\n+\n+    __float128 bar (__float128 x)\n+    {\n+      return x * __builtin_huge_valq ();\n+    }\n+  ],[\n+    foo (1.2Q);\n+    bar (1.2Q);\n+  ],[\n+    libgfor_cv_have_float128=yes\n+  ],[\n+    libgfor_cv_have_float128=no\n+])])\n \n   if test \"x$libgfor_cv_have_float128\" = xyes; then\n     AC_DEFINE(HAVE_FLOAT128, 1, [Define if have a usable __float128 type.])"}, {"sha": "9d3c891ca80ffd56bc9e26222d5d804616e68a89", "filename": "libgfortran/configure", "status": "modified", "additions": 73, "deletions": 16, "changes": 89, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/69eb61d47a9c6dae5308134ee809d85882fbeb10/libgfortran%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/69eb61d47a9c6dae5308134ee809d85882fbeb10/libgfortran%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fconfigure?ref=69eb61d47a9c6dae5308134ee809d85882fbeb10", "patch": "@@ -25075,42 +25075,99 @@ if test \"${libgfor_cv_have_float128+set}\" = set; then :\n   $as_echo_n \"(cached) \" >&6\n else\n \n-    if test x$gcc_no_link = xyes; then\n-  as_fn_error \"Link tests are not allowed after GCC_NO_EXECUTABLES.\" \"$LINENO\" 5\n-fi\n-cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n+   if test x$gcc_no_link = xyes; then\n+  cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n /* end confdefs.h.  */\n \n-/* no header */\n+    typedef _Complex float __attribute__((mode(TC))) __complex128;\n+\n+    __float128 foo (__float128 x)\n+    {\n+\n+     __complex128 z1, z2;\n+\n+     z1 = x;\n+     z2 = x / 7.Q;\n+     z2 /= z1;\n+\n+     return (__float128) z2;\n+    }\n+\n+    __float128 bar (__float128 x)\n+    {\n+      return x * __builtin_huge_valq ();\n+    }\n \n int\n main ()\n {\n \n-  typedef _Complex float __attribute__((mode(TC))) __complex128;\n+    foo (1.2Q);\n+    bar (1.2Q);\n \n-  __float128 x;\n-  x = __builtin_huge_valq() - 2.e1000Q;\n+  ;\n+  return 0;\n+}\n+_ACEOF\n+if ac_fn_c_try_compile \"$LINENO\"; then :\n \n-  __complex128 z1, z2;\n-  z1 = x;\n-  z2 = 2.Q;\n+    libgfor_cv_have_float128=yes\n \n-  z1 /= z2;\n-  z1 /= 7.Q;\n+else\n+\n+    libgfor_cv_have_float128=no\n+\n+fi\n+rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext\n+else\n+  if test x$gcc_no_link = xyes; then\n+  as_fn_error \"Link tests are not allowed after GCC_NO_EXECUTABLES.\" \"$LINENO\" 5\n+fi\n+cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n+/* end confdefs.h.  */\n+\n+    typedef _Complex float __attribute__((mode(TC))) __complex128;\n+\n+    __float128 foo (__float128 x)\n+    {\n+\n+     __complex128 z1, z2;\n+\n+     z1 = x;\n+     z2 = x / 7.Q;\n+     z2 /= z1;\n+\n+     return (__float128) z2;\n+    }\n+\n+    __float128 bar (__float128 x)\n+    {\n+      return x * __builtin_huge_valq ();\n+    }\n+\n+int\n+main ()\n+{\n+\n+    foo (1.2Q);\n+    bar (1.2Q);\n \n   ;\n   return 0;\n }\n _ACEOF\n if ac_fn_c_try_link \"$LINENO\"; then :\n-  libgfor_cv_have_float128=yes\n+\n+    libgfor_cv_have_float128=yes\n+\n else\n-  libgfor_cv_have_float128=no\n+\n+    libgfor_cv_have_float128=no\n+\n fi\n rm -f core conftest.err conftest.$ac_objext \\\n     conftest$ac_exeext conftest.$ac_ext\n-\n+fi\n fi\n { $as_echo \"$as_me:${as_lineno-$LINENO}: result: $libgfor_cv_have_float128\" >&5\n $as_echo \"$libgfor_cv_have_float128\" >&6; }"}]}