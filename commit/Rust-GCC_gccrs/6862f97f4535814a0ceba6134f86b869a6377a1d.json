{"sha": "6862f97f4535814a0ceba6134f86b869a6377a1d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Njg2MmY5N2Y0NTM1ODE0YTBjZWJhNjEzNGY4NmI4NjlhNjM3N2ExZA==", "commit": {"author": {"name": "Uros Bizjak", "email": "uros@kss-loka.si", "date": "2004-04-30T05:31:48Z"}, "committer": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2004-04-30T05:31:48Z"}, "message": "reg-stack.c (subst_stack_regs_pat): <UNSPEC_SIN, UNSPEC_COS, UNSPEC_FRNDINT, UNSPEC_F2XM1>: abort() if src1 dies.\n\n2004-04-30  Uros Bizjak  <uros@kss-loka.si>\n\n        * reg-stack.c (subst_stack_regs_pat): <UNSPEC_SIN, UNSPEC_COS,\n        UNSPEC_FRNDINT, UNSPEC_F2XM1>: abort() if src1 dies.\n        <UNSPEC_SINCOS_COS, UNSPEC_TAN_ONE, UNSPEC_XTRACT_FRACT>: Same.\n        <UNSPEC_SINCOS_SIN, UNSPEC_TAN_TAN, UNSPEC_XTRACT_EXP>: Same.\n\nFrom-SVN: r81324", "tree": {"sha": "bd07ed820aed8970605279c7ff710d30350e2256", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/bd07ed820aed8970605279c7ff710d30350e2256"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6862f97f4535814a0ceba6134f86b869a6377a1d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6862f97f4535814a0ceba6134f86b869a6377a1d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6862f97f4535814a0ceba6134f86b869a6377a1d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6862f97f4535814a0ceba6134f86b869a6377a1d/comments", "author": null, "committer": null, "parents": [{"sha": "c65a01af068213286f89fea69f26f0a7593dd1b9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c65a01af068213286f89fea69f26f0a7593dd1b9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c65a01af068213286f89fea69f26f0a7593dd1b9"}], "stats": {"total": 39, "additions": 19, "deletions": 20}, "files": [{"sha": "22f2d773d2b193221bddbfa3e9a145c3cf813917", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6862f97f4535814a0ceba6134f86b869a6377a1d/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6862f97f4535814a0ceba6134f86b869a6377a1d/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=6862f97f4535814a0ceba6134f86b869a6377a1d", "patch": "@@ -1,3 +1,10 @@\n+2004-04-30  Uros Bizjak  <uros@kss-loka.si>\n+\n+        * reg-stack.c (subst_stack_regs_pat): <UNSPEC_SIN, UNSPEC_COS,\n+        UNSPEC_FRNDINT, UNSPEC_F2XM1>: abort() if src1 dies.\n+        <UNSPEC_SINCOS_COS, UNSPEC_TAN_ONE, UNSPEC_XTRACT_FRACT>: Same.\n+        <UNSPEC_SINCOS_SIN, UNSPEC_TAN_TAN, UNSPEC_XTRACT_EXP>: Same.\n+\n 2004-04-29  Richard Guenther  <richard.guenther@uni-tuebingen.de>\n \n \t* commom.opt (Wfatal-errors): Add it."}, {"sha": "6d1018419937d3e6a70acba28ebe9b85cc45f953", "filename": "gcc/reg-stack.c", "status": "modified", "additions": 12, "deletions": 20, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6862f97f4535814a0ceba6134f86b869a6377a1d/gcc%2Freg-stack.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6862f97f4535814a0ceba6134f86b869a6377a1d/gcc%2Freg-stack.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Freg-stack.c?ref=6862f97f4535814a0ceba6134f86b869a6377a1d", "patch": "@@ -1733,18 +1733,15 @@ subst_stack_regs_pat (rtx insn, stack regstack, rtx pat)\n \n \t\temit_swap_insn (insn, regstack, *src1);\n \n+\t\t/* Input should never die, it is\n+\t\t   replaced with output.  */\n \t\tsrc1_note = find_regno_note (insn, REG_DEAD, REGNO (*src1));\n+\t\tif (src1_note)\n+\t\t  abort();\n \n \t\tif (STACK_REG_P (*dest))\n \t\t  replace_reg (dest, FIRST_STACK_REG);\n \n-\t\tif (src1_note)\n-\t\t  {\n-\t\t    replace_reg (&XEXP (src1_note, 0), FIRST_STACK_REG);\n-\t\t    regstack->top--;\n-\t\t    CLEAR_HARD_REG_BIT (regstack->reg_set, REGNO (*src1));\n-\t\t  }\n-\n \t\treplace_reg (src1, FIRST_STACK_REG);\n \t\tbreak;\n \n@@ -1849,7 +1846,11 @@ subst_stack_regs_pat (rtx insn, stack regstack, rtx pat)\n \n \t\temit_swap_insn (insn, regstack, *src1);\n \n+\t\t/* Input should never die, it is\n+\t\t   replaced with output.  */\n \t\tsrc1_note = find_regno_note (insn, REG_DEAD, REGNO (*src1));\n+\t\tif (src1_note)\n+\t\t  abort();\n \n \t\t/* Push the result back onto stack. Empty stack slot\n \t\t   will be filled in second part of insn. */\n@@ -1859,12 +1860,6 @@ subst_stack_regs_pat (rtx insn, stack regstack, rtx pat)\n \t\t  replace_reg (dest, FIRST_STACK_REG);\n \t\t}\n \n-\t\tif (src1_note)\n-\t\t  {\n-\t\t    replace_reg (&XEXP (src1_note, 0), FIRST_STACK_REG);\n-\t\t    regstack->top--;\n-\t\t    CLEAR_HARD_REG_BIT (regstack->reg_set, REGNO (*src1));\n-\t\t  }\n \t\treplace_reg (src1, FIRST_STACK_REG);\n \t\tbreak;\n \n@@ -1878,7 +1873,11 @@ subst_stack_regs_pat (rtx insn, stack regstack, rtx pat)\n \n \t\temit_swap_insn (insn, regstack, *src1);\n \n+\t\t/* Input should never die, it is\n+\t\t   replaced with output.  */\n \t\tsrc1_note = find_regno_note (insn, REG_DEAD, REGNO (*src1));\n+\t\tif (src1_note)\n+\t\t  abort();\n \n \t\t/* Push the result back onto stack. Fill empty slot from\n \t\t   first part of insn and fix top of stack pointer.  */\n@@ -1890,13 +1889,6 @@ subst_stack_regs_pat (rtx insn, stack regstack, rtx pat)\n \t\t  regstack->top++;\n \t\t}\n \n-\t\tif (src1_note)\n-\t\t  {\n-\t\t    replace_reg (&XEXP (src1_note, 0), FIRST_STACK_REG);\n-\t\t    regstack->top--;\n-\t\t    CLEAR_HARD_REG_BIT (regstack->reg_set, REGNO (*src1));\n-\t\t  }\n-\n \t\treplace_reg (src1, FIRST_STACK_REG);\n \t\tbreak;\n "}]}