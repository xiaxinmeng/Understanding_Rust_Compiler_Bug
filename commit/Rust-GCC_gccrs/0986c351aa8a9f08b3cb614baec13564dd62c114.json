{"sha": "0986c351aa8a9f08b3cb614baec13564dd62c114", "node_id": "C_kwDOANBUbNoAKDA5ODZjMzUxYWE4YTlmMDhiM2NiNjE0YmFlYzEzNTY0ZGQ2MmMxMTQ", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2023-01-11T09:40:54Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2023-01-11T09:40:54Z"}, "message": "fortran: Fix up function types for realloc and sincos{,f,l} builtins [PR108349]\n\nAs reported in the PR, the FUNCTION_TYPE for __builtin_realloc in the\nFortran FE is wrong since r0-100026-gb64fca63690ad which changed\n-\u00a0\u00a0tmp\u00a0=\u00a0tree_cons\u00a0(NULL_TREE,\u00a0pvoid_type_node,\u00a0void_list_node);\n-\u00a0\u00a0tmp\u00a0=\u00a0tree_cons\u00a0(NULL_TREE,\u00a0size_type_node,\u00a0tmp);\n-\u00a0\u00a0ftype\u00a0=\u00a0build_function_type\u00a0(pvoid_type_node,\u00a0tmp);\n+\u00a0\u00a0ftype\u00a0=\u00a0build_function_type_list\u00a0(pvoid_type_node,\n+\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0size_type_node,\u00a0pvoid_type_node,\n+\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0NULL_TREE);\n\u00a0\u00a0\u00a0gfc_define_builtin\u00a0(\"__builtin_realloc\",\u00a0ftype,\u00a0BUILT_IN_REALLOC,\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\"realloc\",\u00a0false);\nThe return type is correct, void *, but the first argument should be\nvoid * too and only second one size_t, while the above change changed\nrealloc to be void *__builtin_realloc (size_t, void *);\nI went through all other changes from that commit and found that\n__builtin_sincos{,f,l} got broken as well, instead of the former\nvoid __builtin_sincos{,f,l} (ftype, ftype *, ftype *);\nwhere ftype is {double,float,long double} it is now incorrectly\nvoid __builtin_sincos{,f,l} (ftype *, ftype *);\n\nThe following patch fixes that, plus some formatting issues around\nthe spots I've changed.\n\n2023-01-11  Jakub Jelinek  <jakub@redhat.com>\n\n\tPR fortran/108349\n\t* f95-lang.cc (gfc_init_builtin_function): Fix up function types\n\tfor BUILT_IN_REALLOC and BUILT_IN_SINCOS{F,,L}.  Formatting fixes.", "tree": {"sha": "4054efed35f3b80b1d51331762de90fd7cf37306", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4054efed35f3b80b1d51331762de90fd7cf37306"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0986c351aa8a9f08b3cb614baec13564dd62c114", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0986c351aa8a9f08b3cb614baec13564dd62c114", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0986c351aa8a9f08b3cb614baec13564dd62c114", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0986c351aa8a9f08b3cb614baec13564dd62c114/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8d96a7fc27f3561f984e50feb316d3e472ed9d14", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8d96a7fc27f3561f984e50feb316d3e472ed9d14", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8d96a7fc27f3561f984e50feb316d3e472ed9d14"}], "stats": {"total": 38, "additions": 20, "deletions": 18}, "files": [{"sha": "b8cbfe457d1a0bdb20e546ca8c4aae1a6c6b6660", "filename": "gcc/fortran/f95-lang.cc", "status": "modified", "additions": 20, "deletions": 18, "changes": 38, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0986c351aa8a9f08b3cb614baec13564dd62c114/gcc%2Ffortran%2Ff95-lang.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0986c351aa8a9f08b3cb614baec13564dd62c114/gcc%2Ffortran%2Ff95-lang.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ff95-lang.cc?ref=0986c351aa8a9f08b3cb614baec13564dd62c114", "patch": "@@ -714,31 +714,34 @@ gfc_init_builtin_functions (void)\n                                                 float_type_node, NULL_TREE);\n \n   func_cdouble_double = build_function_type_list (double_type_node,\n-                                                  complex_double_type_node,\n-                                                  NULL_TREE);\n+\t\t\t\t\t\t  complex_double_type_node,\n+\t\t\t\t\t\t  NULL_TREE);\n \n   func_double_cdouble = build_function_type_list (complex_double_type_node,\n-                                                  double_type_node, NULL_TREE);\n+\t\t\t\t\t\t  double_type_node, NULL_TREE);\n \n-  func_clongdouble_longdouble =\n-    build_function_type_list (long_double_type_node,\n-                              complex_long_double_type_node, NULL_TREE);\n+  func_clongdouble_longdouble\n+    = build_function_type_list (long_double_type_node,\n+\t\t\t\tcomplex_long_double_type_node, NULL_TREE);\n \n-  func_longdouble_clongdouble =\n-    build_function_type_list (complex_long_double_type_node,\n-                              long_double_type_node, NULL_TREE);\n+  func_longdouble_clongdouble\n+    = build_function_type_list (complex_long_double_type_node,\n+\t\t\t\tlong_double_type_node, NULL_TREE);\n \n   ptype = build_pointer_type (float_type_node);\n-  func_float_floatp_floatp =\n-    build_function_type_list (void_type_node, ptype, ptype, NULL_TREE);\n+  func_float_floatp_floatp\n+    = build_function_type_list (void_type_node, float_type_node, ptype, ptype,\n+\t\t\t\tNULL_TREE);\n \n   ptype = build_pointer_type (double_type_node);\n-  func_double_doublep_doublep =\n-    build_function_type_list (void_type_node, ptype, ptype, NULL_TREE);\n+  func_double_doublep_doublep\n+    = build_function_type_list (void_type_node, double_type_node, ptype,\n+\t\t\t\tptype, NULL_TREE);\n \n   ptype = build_pointer_type (long_double_type_node);\n-  func_longdouble_longdoublep_longdoublep =\n-    build_function_type_list (void_type_node, ptype, ptype, NULL_TREE);\n+  func_longdouble_longdoublep_longdoublep\n+    = build_function_type_list (void_type_node, long_double_type_node, ptype,\n+\t\t\t\tptype, NULL_TREE);\n \n /* Non-math builtins are defined manually, so they're not included here.  */\n #define OTHER_BUILTIN(ID,NAME,TYPE,CONST)\n@@ -992,9 +995,8 @@ gfc_init_builtin_functions (void)\n \t\t      \"calloc\", ATTR_NOTHROW_LEAF_MALLOC_LIST);\n   DECL_IS_MALLOC (builtin_decl_explicit (BUILT_IN_CALLOC)) = 1;\n \n-  ftype = build_function_type_list (pvoid_type_node,\n-                                    size_type_node, pvoid_type_node,\n-                                    NULL_TREE);\n+  ftype = build_function_type_list (pvoid_type_node, pvoid_type_node,\n+\t\t\t\t    size_type_node, NULL_TREE);\n   gfc_define_builtin (\"__builtin_realloc\", ftype, BUILT_IN_REALLOC,\n \t\t      \"realloc\", ATTR_NOTHROW_LEAF_LIST);\n "}]}