{"sha": "170c850e4bd46745e2a5130b5eb09f9fceb98416", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTcwYzg1MGU0YmQ0Njc0NWUyYTUxMzBiNWViMDlmOWZjZWI5ODQxNg==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2021-05-07T15:48:37Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2021-05-07T15:48:37Z"}, "message": "libcpp: Fix up pragma preprocessing [PR100450]\n\nSince the r0-85991-ga25a8f3be322fe0f838947b679f73d6efc2a412c\nhttps://gcc.gnu.org/legacy-ml/gcc-patches/2008-02/msg01329.html\nchanges, so that we handle macros inside of pragmas that should expand\nmacros, during preprocessing we print those pragmas token by token,\nwith CPP_PRAGMA printed as\n      fputs (\"#pragma \", print.outf);\n      if (space)\n        fprintf (print.outf, \"%s %s\", space, name);\n      else\n        fprintf (print.outf, \"%s\", name);\nwhere name is some identifier (so e.g. print\n #pragma omp parallel\nor\n #pragma omp for\netc.).  Because it ends in an identifier, we need to handle it like\nan identifier (i.e. CPP_NAME) for the decision whether a space needs\nto be emitted in between that #pragma whatever or #pragma whatever whatever\nand following token, otherwise the attached testcase is preprocessed as\n #pragma omp forreduction(+:red)\nrather than\n #pragma omp for reduction(+:red)\nThe cpp_avoid_paste function is only called for this purpose.\n\n2021-05-07  Jakub Jelinek  <jakub@redhat.com>\n\n\tPR c/100450\n\t* lex.c (cpp_avoid_paste): Handle token1 CPP_PRAGMA like CPP_NAME.\n\n\t* c-c++-common/gomp/pr100450.c: New test.", "tree": {"sha": "cc92339a9d553a6a8959bb4753d0af19841ce53e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/cc92339a9d553a6a8959bb4753d0af19841ce53e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/170c850e4bd46745e2a5130b5eb09f9fceb98416", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/170c850e4bd46745e2a5130b5eb09f9fceb98416", "html_url": "https://github.com/Rust-GCC/gccrs/commit/170c850e4bd46745e2a5130b5eb09f9fceb98416", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/170c850e4bd46745e2a5130b5eb09f9fceb98416/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5795ec0edc30e077a9900cf3ca0a04ad8ac5ac97", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5795ec0edc30e077a9900cf3ca0a04ad8ac5ac97", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5795ec0edc30e077a9900cf3ca0a04ad8ac5ac97"}], "stats": {"total": 21, "additions": 21, "deletions": 0}, "files": [{"sha": "a6d2a2829ff5137ae6bfd323930e5e6ab6fc9563", "filename": "gcc/testsuite/c-c++-common/gomp/pr100450.c", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/170c850e4bd46745e2a5130b5eb09f9fceb98416/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fgomp%2Fpr100450.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/170c850e4bd46745e2a5130b5eb09f9fceb98416/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fgomp%2Fpr100450.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fgomp%2Fpr100450.c?ref=170c850e4bd46745e2a5130b5eb09f9fceb98416", "patch": "@@ -0,0 +1,20 @@\n+/* PR c/100450 */\n+/* { dg-do compile } */\n+/* { dg-options \"-fopenmp -save-temps -Wunknown-pragmas\" } */\n+\n+#define TEST(T) { \\\n+     {T} \\\n+}\n+#define CLAUSES reduction(+:red)\n+#define PARALLEL_FOR(X) TEST({ \\\n+_Pragma(\"omp for CLAUSES\") \\\n+X \\\n+})\n+\n+void foo()\n+{\n+  int red = 0;\n+  int A[3] = {};\n+  #pragma omp parallel shared(red)\n+  PARALLEL_FOR( for(int i=0; i < 3; i++) red += A[i]; )\n+}"}, {"sha": "b7ce85a03314879eb52ae2839d91e03fced3ff66", "filename": "libcpp/lex.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/170c850e4bd46745e2a5130b5eb09f9fceb98416/libcpp%2Flex.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/170c850e4bd46745e2a5130b5eb09f9fceb98416/libcpp%2Flex.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libcpp%2Flex.c?ref=170c850e4bd46745e2a5130b5eb09f9fceb98416", "patch": "@@ -3719,6 +3719,7 @@ cpp_avoid_paste (cpp_reader *pfile, const cpp_token *token1,\n     case CPP_DEREF:\treturn c == '*';\n     case CPP_DOT:\treturn c == '.' || c == '%' || b == CPP_NUMBER;\n     case CPP_HASH:\treturn c == '#' || c == '%'; /* Digraph form.  */\n+    case CPP_PRAGMA:\n     case CPP_NAME:\treturn ((b == CPP_NUMBER\n \t\t\t\t && name_p (pfile, &token2->val.str))\n \t\t\t\t|| b == CPP_NAME"}]}