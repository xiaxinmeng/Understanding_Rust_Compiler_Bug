{"sha": "c7ece684cada075bf1d46669794217ccd4bf8b3d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzdlY2U2ODRjYWRhMDc1YmYxZDQ2NjY5Nzk0MjE3Y2NkNGJmOGIzZA==", "commit": {"author": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "2014-06-13T16:40:48Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "2014-06-13T16:40:48Z"}, "message": "[multiple changes]\n\n2014-06-13  Jeff Law  <law@redhat.com>\n\n\tPR rtl-optimization/61094\n\tPR rtl-optimization/61446\n\t* ree.c (combine_reaching_defs): Get the mode for the copy from\n\tthe extension insn rather than the defining insn.\n\n2014-06-13  Ilya Enkovich  <ilya.enkovich@intel.com>\n\n\tPR rtl-optimization/61094\n\tPR rtl-optimization/61446\n\t* gcc.target/i386/pr61446.c : New.\n\nFrom-SVN: r211649", "tree": {"sha": "d09156de34041a750c751b23d0bbc0f8a19489ec", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d09156de34041a750c751b23d0bbc0f8a19489ec"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c7ece684cada075bf1d46669794217ccd4bf8b3d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c7ece684cada075bf1d46669794217ccd4bf8b3d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c7ece684cada075bf1d46669794217ccd4bf8b3d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c7ece684cada075bf1d46669794217ccd4bf8b3d/comments", "author": null, "committer": null, "parents": [{"sha": "8e96d784335afc41a647ccd108dbdc7961b06da9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8e96d784335afc41a647ccd108dbdc7961b06da9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8e96d784335afc41a647ccd108dbdc7961b06da9"}], "stats": {"total": 38, "additions": 34, "deletions": 4}, "files": [{"sha": "545442326a1ead884aa5961cf26f6a23b5fa4514", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c7ece684cada075bf1d46669794217ccd4bf8b3d/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c7ece684cada075bf1d46669794217ccd4bf8b3d/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=c7ece684cada075bf1d46669794217ccd4bf8b3d", "patch": "@@ -1,3 +1,10 @@\n+2014-06-13  Jeff Law  <law@redhat.com>\n+\n+\tPR rtl-optimization/61094\n+\tPR rtl-optimization/61446\n+\t* ree.c (combine_reaching_defs): Get the mode for the copy from\n+\tthe extension insn rather than the defining insn.\n+\n 2014-06-13  Dehao Chen  <dehao@google.com>\n \n \t* dwarf2out.c (add_linkage_name): Emit more linkage name."}, {"sha": "f4bb4ccacd3327d9846fedeeed74d05e3d6d4797", "filename": "gcc/ree.c", "status": "modified", "additions": 7, "deletions": 4, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c7ece684cada075bf1d46669794217ccd4bf8b3d/gcc%2Free.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c7ece684cada075bf1d46669794217ccd4bf8b3d/gcc%2Free.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Free.c?ref=c7ece684cada075bf1d46669794217ccd4bf8b3d", "patch": "@@ -787,13 +787,16 @@ combine_reaching_defs (ext_cand *cand, const_rtx set_pat, ext_state *state)\n \t generated more than one insn.\n \n          This generates garbage since we throw away the insn when we're\n-\t done, only to recreate it later if this test was successful.  */\n+\t done, only to recreate it later if this test was successful. \n+\n+\t Make sure to get the mode from the extension (cand->insn).  This\n+\t is different than in the code to emit the copy as we have not\n+\t modified the defining insn yet.  */\n       start_sequence ();\n-      rtx sub_rtx = *get_sub_rtx (def_insn);\n       rtx pat = PATTERN (cand->insn);\n-      rtx new_dst = gen_rtx_REG (GET_MODE (SET_DEST (sub_rtx)),\n+      rtx new_dst = gen_rtx_REG (GET_MODE (SET_DEST (pat)),\n                                  REGNO (XEXP (SET_SRC (pat), 0)));\n-      rtx new_src = gen_rtx_REG (GET_MODE (SET_DEST (sub_rtx)),\n+      rtx new_src = gen_rtx_REG (GET_MODE (SET_DEST (pat)),\n                                  REGNO (SET_DEST (pat)));\n       emit_move_insn (new_dst, new_src);\n "}, {"sha": "1b63a2d47aeb1efc982f9c02a74e62644ca69546", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c7ece684cada075bf1d46669794217ccd4bf8b3d/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c7ece684cada075bf1d46669794217ccd4bf8b3d/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=c7ece684cada075bf1d46669794217ccd4bf8b3d", "patch": "@@ -1,3 +1,9 @@\n+2014-06-13  Ilya Enkovich  <ilya.enkovich@intel.com>\n+\n+\tPR rtl-optimization/61094\n+\tPR rtl-optimization/61446\n+\t* gcc.target/i386/pr61446.c : New.\n+\n 2014-06-13  Dehao Chen  <dehao@google.com>\n \n \t* g++.dg/debug/dwarf2/cdtor-1.C: Update test result."}, {"sha": "fc32f63ee695923623b09463d44d4affb5d40b41", "filename": "gcc/testsuite/gcc.target/i386/pr61446.c", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c7ece684cada075bf1d46669794217ccd4bf8b3d/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr61446.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c7ece684cada075bf1d46669794217ccd4bf8b3d/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr61446.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr61446.c?ref=c7ece684cada075bf1d46669794217ccd4bf8b3d", "patch": "@@ -0,0 +1,14 @@\n+/* PR rtl-optimization/61446 */\n+\n+/* { dg-do compile { target { ia32 } } } */\n+/* { dg-options \"-O2 -march=corei7 -mfpmath=387\" } */\n+\n+unsigned long long\n+foo (float a)\n+{\n+  const double dfa = a;\n+  const unsigned int hi = dfa / 0x1p32f;\n+  const unsigned int lo = dfa - (double) hi * 0x1p32f;\n+\n+  return ((unsigned long long) hi << (4 * (8))) | lo;\n+}"}]}