{"sha": "744c73a51853327efa19b0abe14b208511d071f1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzQ0YzczYTUxODUzMzI3ZWZhMTliMGFiZTE0YjIwODUxMWQwNzFmMQ==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2015-10-20T12:32:21Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2015-10-20T12:32:21Z"}, "message": "[multiple changes]\n\n2015-10-20  Ed Schonberg  <schonberg@adacore.com>\n\n\t* sem_ch11.adb (Analyze_Handled_Statements): If the scope is a\n\tpostcondition subprogram, do not check for useless assignments\n\tbecause there are no source references in such a body, and the\n\tcall will lose deferred references from the enclosing subprogram.\n\n2015-10-20  Ed Schonberg  <schonberg@adacore.com>\n\n\t* sem_ch13.adb: nalyze_Attribute_Definition_Clause, case\n\t'Address):  If either object is controlled the overlay is\n\terroneous, but analysis must be completed so that back-end sees\n\taddress clause and completes code generation.  Improve text\n\tof warning.\n\n2015-10-20  Thomas Quinot  <quinot@adacore.com>\n\n\t* exp_ch4.adb: Minor reformatting.\n\nFrom-SVN: r229072", "tree": {"sha": "2b73749a207274e9fa458dcff11244fce39124e7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2b73749a207274e9fa458dcff11244fce39124e7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/744c73a51853327efa19b0abe14b208511d071f1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/744c73a51853327efa19b0abe14b208511d071f1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/744c73a51853327efa19b0abe14b208511d071f1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/744c73a51853327efa19b0abe14b208511d071f1/comments", "author": null, "committer": null, "parents": [{"sha": "9fe696a3b387562aceca53cdf20f46e3bfe0d2b4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9fe696a3b387562aceca53cdf20f46e3bfe0d2b4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9fe696a3b387562aceca53cdf20f46e3bfe0d2b4"}], "stats": {"total": 38, "additions": 32, "deletions": 6}, "files": [{"sha": "1c51c9feb63f2dc95a6935c7e170503fc44c0bed", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/744c73a51853327efa19b0abe14b208511d071f1/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/744c73a51853327efa19b0abe14b208511d071f1/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=744c73a51853327efa19b0abe14b208511d071f1", "patch": "@@ -1,3 +1,22 @@\n+2015-10-20  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* sem_ch11.adb (Analyze_Handled_Statements): If the scope is a\n+\tpostcondition subprogram, do not check for useless assignments\n+\tbecause there are no source references in such a body, and the\n+\tcall will lose deferred references from the enclosing subprogram.\n+\n+2015-10-20  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* sem_ch13.adb: nalyze_Attribute_Definition_Clause, case\n+\t'Address):  If either object is controlled the overlay is\n+\terroneous, but analysis must be completed so that back-end sees\n+\taddress clause and completes code generation.  Improve text\n+\tof warning.\n+\n+2015-10-20  Thomas Quinot  <quinot@adacore.com>\n+\n+\t* exp_ch4.adb: Minor reformatting.\n+\n 2015-10-20  Bob Duff  <duff@adacore.com>\n \n \t* s-mudido-affinity.adb (Create): Correct subranges of slices of CPU"}, {"sha": "9d4dff8d1ffddba8a7762802c5d608a02aaccca3", "filename": "gcc/ada/exp_ch4.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/744c73a51853327efa19b0abe14b208511d071f1/gcc%2Fada%2Fexp_ch4.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/744c73a51853327efa19b0abe14b208511d071f1/gcc%2Fada%2Fexp_ch4.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch4.adb?ref=744c73a51853327efa19b0abe14b208511d071f1", "patch": "@@ -1536,7 +1536,7 @@ package body Exp_Ch4 is\n          if RTE_Available (Comp) then\n \n             --  Expand to a call only if the runtime function is available,\n-            --  otherwise fallback to inline code.\n+            --  otherwise fall back to inline code.\n \n             Remove_Side_Effects (Op1, Name_Req => True);\n             Remove_Side_Effects (Op2, Name_Req => True);"}, {"sha": "0b9f8ef829d40d01d5b5b7a4279e2219326d2c45", "filename": "gcc/ada/sem_ch11.adb", "status": "modified", "additions": 7, "deletions": 2, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/744c73a51853327efa19b0abe14b208511d071f1/gcc%2Fada%2Fsem_ch11.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/744c73a51853327efa19b0abe14b208511d071f1/gcc%2Fada%2Fsem_ch11.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch11.adb?ref=744c73a51853327efa19b0abe14b208511d071f1", "patch": "@@ -46,6 +46,7 @@ with Sem_Res;  use Sem_Res;\n with Sem_Util; use Sem_Util;\n with Sem_Warn; use Sem_Warn;\n with Sinfo;    use Sinfo;\n+with Snames;   use Snames;\n with Stand;    use Stand;\n \n package body Sem_Ch11 is\n@@ -417,9 +418,13 @@ package body Sem_Ch11 is\n \n       --  If the current scope is a subprogram, then this is the right place to\n       --  check for hanging useless assignments from the statement sequence of\n-      --  the subprogram body.\n+      --  the subprogram body. Skip this in the body of a postcondition,\n+      --  since in that case there are no source references, and we need to\n+      --  preserve deferred references from the enclosing scope.\n \n-      if Is_Subprogram (Current_Scope) then\n+      if Is_Subprogram (Current_Scope)\n+         and then Chars (Current_Scope) /= Name_uPostconditions\n+      then\n          Warn_On_Useless_Assignments (Current_Scope);\n       end if;\n "}, {"sha": "d3003643f64cc4bd83f414d820f4703799f1d9b9", "filename": "gcc/ada/sem_ch13.adb", "status": "modified", "additions": 5, "deletions": 3, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/744c73a51853327efa19b0abe14b208511d071f1/gcc%2Fada%2Fsem_ch13.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/744c73a51853327efa19b0abe14b208511d071f1/gcc%2Fada%2Fsem_ch13.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch13.adb?ref=744c73a51853327efa19b0abe14b208511d071f1", "patch": "@@ -4711,20 +4711,22 @@ package body Sem_Ch13 is\n \n                   Find_Overlaid_Entity (N, O_Ent, Off);\n \n-                  --  Overlaying controlled objects is erroneous\n+                  --  Overlaying controlled objects is erroneous.\n+                  --  Emit warning but continue analysis because program is\n+                  --  itself legal, and back-end must see address clause.\n \n                   if Present (O_Ent)\n                     and then (Has_Controlled_Component (Etype (O_Ent))\n                                or else Is_Controlled (Etype (O_Ent)))\n+                    and then not Inside_A_Generic\n                   then\n                      Error_Msg_N\n-                       (\"??cannot overlay with controlled object\", Expr);\n+                       (\"??cannot use overlays with controlled objects\", Expr);\n                      Error_Msg_N\n                        (\"\\??Program_Error will be raised at run time\", Expr);\n                      Insert_Action (Declaration_Node (U_Ent),\n                        Make_Raise_Program_Error (Loc,\n                          Reason => PE_Overlaid_Controlled_Object));\n-                     return;\n \n                   elsif Present (O_Ent)\n                     and then Ekind (U_Ent) = E_Constant"}]}