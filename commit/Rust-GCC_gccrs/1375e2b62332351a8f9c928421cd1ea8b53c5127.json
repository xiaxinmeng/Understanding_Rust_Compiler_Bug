{"sha": "1375e2b62332351a8f9c928421cd1ea8b53c5127", "node_id": "C_kwDOANBUbNoAKDEzNzVlMmI2MjMzMjM1MWE4ZjljOTI4NDIxY2QxZWE4YjUzYzUxMjc", "commit": {"author": {"name": "Rainer Orth", "email": "ro@CeBiTec.Uni-Bielefeld.DE", "date": "2022-03-11T08:37:44Z"}, "committer": {"name": "Rainer Orth", "email": "ro@CeBiTec.Uni-Bielefeld.DE", "date": "2022-03-11T08:37:44Z"}, "message": "libphobos: Enable on Solaris/SPARC or with /bin/as [PR 103528]\n\nlibphobos is currently only enabled on Solaris/x86 with gas.  As\ndiscovered when gdc was switched to the dmd frontend, this initially\nbroke bootstrap for the other Solaris configurations.\n\nHowever, it's now well possible to enable it both for Solaris/x86 with\nas and Solaris/SPARC (both as and gas) since the original problems (x86\nas linelength limit, among others) are long gone.\n\nThe following patch does just that.\n\nTested on i386-pc-solaris2.11 and sparc-sun-solaris2.11 (both as and\ngas) with gdc 9.3.0 (x86) resp. 9.4.0 (sparc, configured with\n--enable-libphobos) as bootstrap compilers.\n\n2021-12-01  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>\n\n\tlibphobos:\n\tPR d/103528\n\t* configure.ac <x86_64-*-solaris2.* | i?86-*-solaris2.*>: Remove\n\tgas requirement.\n\t* configure: Regenerate.\n\t* configure.tgt (sparc*-*-solaris2.11*): Mark supported.", "tree": {"sha": "a237276c6be3ad7f078cbf5e9e0462ead6da892a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a237276c6be3ad7f078cbf5e9e0462ead6da892a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1375e2b62332351a8f9c928421cd1ea8b53c5127", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1375e2b62332351a8f9c928421cd1ea8b53c5127", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1375e2b62332351a8f9c928421cd1ea8b53c5127", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1375e2b62332351a8f9c928421cd1ea8b53c5127/comments", "author": {"login": "rorth", "id": 3930951, "node_id": "MDQ6VXNlcjM5MzA5NTE=", "avatar_url": "https://avatars.githubusercontent.com/u/3930951?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rorth", "html_url": "https://github.com/rorth", "followers_url": "https://api.github.com/users/rorth/followers", "following_url": "https://api.github.com/users/rorth/following{/other_user}", "gists_url": "https://api.github.com/users/rorth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rorth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rorth/subscriptions", "organizations_url": "https://api.github.com/users/rorth/orgs", "repos_url": "https://api.github.com/users/rorth/repos", "events_url": "https://api.github.com/users/rorth/events{/privacy}", "received_events_url": "https://api.github.com/users/rorth/received_events", "type": "User", "site_admin": false}, "committer": {"login": "rorth", "id": 3930951, "node_id": "MDQ6VXNlcjM5MzA5NTE=", "avatar_url": "https://avatars.githubusercontent.com/u/3930951?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rorth", "html_url": "https://github.com/rorth", "followers_url": "https://api.github.com/users/rorth/followers", "following_url": "https://api.github.com/users/rorth/following{/other_user}", "gists_url": "https://api.github.com/users/rorth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rorth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rorth/subscriptions", "organizations_url": "https://api.github.com/users/rorth/orgs", "repos_url": "https://api.github.com/users/rorth/repos", "events_url": "https://api.github.com/users/rorth/events{/privacy}", "received_events_url": "https://api.github.com/users/rorth/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "41bda0036ce81e7ac513f325e7b0f41ccf11cbab", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/41bda0036ce81e7ac513f325e7b0f41ccf11cbab", "html_url": "https://github.com/Rust-GCC/gccrs/commit/41bda0036ce81e7ac513f325e7b0f41ccf11cbab"}], "stats": {"total": 27, "additions": 3, "deletions": 24}, "files": [{"sha": "9da06f087d095c7eb4555f43cb11556b4c0b269e", "filename": "libphobos/configure", "status": "modified", "additions": 0, "deletions": 12, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1375e2b62332351a8f9c928421cd1ea8b53c5127/libphobos%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1375e2b62332351a8f9c928421cd1ea8b53c5127/libphobos%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libphobos%2Fconfigure?ref=1375e2b62332351a8f9c928421cd1ea8b53c5127", "patch": "@@ -15475,18 +15475,6 @@ $as_echo_n \"checking for host support for libphobos... \" >&6; }\n . ${srcdir}/configure.tgt\n case ${host} in\n   x86_64-*-solaris2.* | i?86-*-solaris2.*)\n-    # libphobos doesn't compile with the Solaris/x86 assembler due to a\n-    # relatively low linelength limit.\n-    as_prog=`$CC -print-prog-name=as`\n-    if test -n \"$as_prog\" && $as_prog -v /dev/null 2>&1 | grep GNU > /dev/null 2>&1; then\n-      druntime_cv_use_gas=yes;\n-    else\n-      druntime_cv_use_gas=no;\n-    fi\n-    rm -f a.out\n-    if test x$druntime_cv_use_gas = xno; then\n-      LIBPHOBOS_SUPPORTED=no\n-    fi\n     # 64-bit D execution fails with Solaris ld without -z relax=transtls support.\n     if test \"$druntime_ld_gld\" = \"no\" && test \"$druntime_ld_relax_transtls\" = \"no\"; then\n       LIBPHOBOS_SUPPORTED=no"}, {"sha": "31209ba2920c7482025470194873a442ca359166", "filename": "libphobos/configure.ac", "status": "modified", "additions": 0, "deletions": 12, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1375e2b62332351a8f9c928421cd1ea8b53c5127/libphobos%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1375e2b62332351a8f9c928421cd1ea8b53c5127/libphobos%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libphobos%2Fconfigure.ac?ref=1375e2b62332351a8f9c928421cd1ea8b53c5127", "patch": "@@ -189,18 +189,6 @@ AC_MSG_CHECKING([for host support for libphobos])\n . ${srcdir}/configure.tgt\n case ${host} in\n   x86_64-*-solaris2.* | i?86-*-solaris2.*)\n-    # libphobos doesn't compile with the Solaris/x86 assembler due to a\n-    # relatively low linelength limit.\n-    as_prog=`$CC -print-prog-name=as`\n-    if test -n \"$as_prog\" && $as_prog -v /dev/null 2>&1 | grep GNU > /dev/null 2>&1; then\n-      druntime_cv_use_gas=yes;\n-    else\n-      druntime_cv_use_gas=no;\n-    fi\n-    rm -f a.out\n-    if test x$druntime_cv_use_gas = xno; then\n-      LIBPHOBOS_SUPPORTED=no\n-    fi\n     # 64-bit D execution fails with Solaris ld without -z relax=transtls support.\n     if test \"$druntime_ld_gld\" = \"no\" && test \"$druntime_ld_relax_transtls\" = \"no\"; then\n       LIBPHOBOS_SUPPORTED=no"}, {"sha": "0063dd23249101b3506106ebbe32f454bcb829fb", "filename": "libphobos/configure.tgt", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1375e2b62332351a8f9c928421cd1ea8b53c5127/libphobos%2Fconfigure.tgt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1375e2b62332351a8f9c928421cd1ea8b53c5127/libphobos%2Fconfigure.tgt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libphobos%2Fconfigure.tgt?ref=1375e2b62332351a8f9c928421cd1ea8b53c5127", "patch": "@@ -52,6 +52,9 @@ case \"${target}\" in\n   s390*-linux*)\n \tLIBPHOBOS_SUPPORTED=yes\n \t;;\n+  sparc*-*-solaris2.11*)\n+\tLIBPHOBOS_SUPPORTED=yes\n+\t;;\n   x86_64-*-freebsd* | i?86-*-freebsd*)\n \tLIBPHOBOS_SUPPORTED=yes\n \t;;"}]}