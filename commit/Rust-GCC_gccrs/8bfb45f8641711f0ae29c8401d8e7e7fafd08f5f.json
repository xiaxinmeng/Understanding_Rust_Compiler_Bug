{"sha": "8bfb45f8641711f0ae29c8401d8e7e7fafd08f5f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGJmYjQ1Zjg2NDE3MTFmMGFlMjljODQwMWQ4ZTdlN2ZhZmQwOGY1Zg==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2002-10-23T21:20:08Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2002-10-23T21:20:08Z"}, "message": "i386.c (local_symbolic_operand): Move LABEL_REF test after CONST test.\n\n\t* config/i386/i386.c (local_symbolic_operand): Move LABEL_REF test\n\tafter CONST test.\n\n\t* gcc.dg/20021023-1.c: New test.\n\nFrom-SVN: r58469", "tree": {"sha": "8692b846e511047be6b387d13e61dd4e2b0f4f20", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8692b846e511047be6b387d13e61dd4e2b0f4f20"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8bfb45f8641711f0ae29c8401d8e7e7fafd08f5f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8bfb45f8641711f0ae29c8401d8e7e7fafd08f5f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8bfb45f8641711f0ae29c8401d8e7e7fafd08f5f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8bfb45f8641711f0ae29c8401d8e7e7fafd08f5f/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "963f08a97fa92f5f46193758b84a56286dfb1e04", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/963f08a97fa92f5f46193758b84a56286dfb1e04", "html_url": "https://github.com/Rust-GCC/gccrs/commit/963f08a97fa92f5f46193758b84a56286dfb1e04"}], "stats": {"total": 39, "additions": 36, "deletions": 3}, "files": [{"sha": "0a33a70ef1a252394119fdb67e799c9fd0a885a9", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8bfb45f8641711f0ae29c8401d8e7e7fafd08f5f/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8bfb45f8641711f0ae29c8401d8e7e7fafd08f5f/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=8bfb45f8641711f0ae29c8401d8e7e7fafd08f5f", "patch": "@@ -1,3 +1,8 @@\n+2002-10-23  Jakub Jelinek  <jakub@redhat.com>\n+\n+\t* config/i386/i386.c (local_symbolic_operand): Move LABEL_REF test\n+\tafter CONST test.\n+\n 2002-10-23  Steve Ellcey  <sje@cup.hp.com>\n \n \t* config/ia64/ia64.c (hfa_element_mode): Don't allow 128 bit floats"}, {"sha": "4b13c46ec9c6c19781cd3650ada0e658c6993ea9", "filename": "gcc/config/i386/i386.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8bfb45f8641711f0ae29c8401d8e7e7fafd08f5f/gcc%2Fconfig%2Fi386%2Fi386.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8bfb45f8641711f0ae29c8401d8e7e7fafd08f5f/gcc%2Fconfig%2Fi386%2Fi386.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.c?ref=8bfb45f8641711f0ae29c8401d8e7e7fafd08f5f", "patch": "@@ -3063,9 +3063,6 @@ local_symbolic_operand (op, mode)\n      rtx op;\n      enum machine_mode mode ATTRIBUTE_UNUSED;\n {\n-  if (GET_CODE (op) == LABEL_REF)\n-    return 1;\n-\n   if (GET_CODE (op) == CONST\n       && GET_CODE (XEXP (op, 0)) == PLUS\n       && GET_CODE (XEXP (XEXP (op, 0), 1)) == CONST_INT\n@@ -3074,6 +3071,9 @@ local_symbolic_operand (op, mode)\n \t      && INTVAL (XEXP (XEXP (op, 0), 1)) < 16*1024*1024)))\n     op = XEXP (XEXP (op, 0), 0);\n \n+  if (GET_CODE (op) == LABEL_REF)\n+    return 1;\n+\n   if (GET_CODE (op) != SYMBOL_REF)\n     return 0;\n "}, {"sha": "e2fa07709ca6c6a346210202788ff7287c08c4a4", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8bfb45f8641711f0ae29c8401d8e7e7fafd08f5f/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8bfb45f8641711f0ae29c8401d8e7e7fafd08f5f/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=8bfb45f8641711f0ae29c8401d8e7e7fafd08f5f", "patch": "@@ -1,3 +1,7 @@\n+2002-10-23  Jakub Jelinek  <jakub@redhat.com>\n+\n+\t* gcc.dg/20021023-1.c: New test.\n+\n 2002-10-23  Mark Mitchell  <mark@codesourcery.com>\n \n \tPR c++/7679"}, {"sha": "6fe555a5b2fe9cadb1dca5d8dcb892d343e68d3c", "filename": "gcc/testsuite/gcc.dg/20021023-1.c", "status": "added", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8bfb45f8641711f0ae29c8401d8e7e7fafd08f5f/gcc%2Ftestsuite%2Fgcc.dg%2F20021023-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8bfb45f8641711f0ae29c8401d8e7e7fafd08f5f/gcc%2Ftestsuite%2Fgcc.dg%2F20021023-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2F20021023-1.c?ref=8bfb45f8641711f0ae29c8401d8e7e7fafd08f5f", "patch": "@@ -0,0 +1,24 @@\n+/* This testcase ICEd on x86-64 because LABEL_REF + small const was not\n+   considered as local_symbolic_operand.  */\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -fpic\" } */\n+\n+typedef __builtin_va_list va_list;\n+\n+static unsigned int\n+foo (void *a, float b, const char *c, va_list d, void *e)\n+{\n+  return -1;\n+}\n+\n+unsigned int\n+bar (void *a, float b, const char *c, ...)\n+{\n+  va_list args;\n+  unsigned int d;\n+\n+  __builtin_stdarg_start (args, c);\n+  d = foo (a, b, c, args, a);\n+  __builtin_va_end (args);\n+  return d;\n+}"}]}