{"sha": "b1fc9f8b8d5f9355695ba790d0884a951fcaf5db", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjFmYzlmOGI4ZDVmOTM1NTY5NWJhNzkwZDA4ODRhOTUxZmNhZjVkYg==", "commit": {"author": {"name": "David S. Miller", "email": "davem@davemloft.net", "date": "2011-10-23T22:34:07Z"}, "committer": {"name": "David S. Miller", "email": "davem@gcc.gnu.org", "date": "2011-10-23T22:34:07Z"}, "message": "Factor out common tests in 8-byte reg/reg move splitters on 32-bit sparc.\n\n\t* config/sparc/sparc.c (sparc_split_regreg_legitimate): New\n\tfunction.\n\t* config/sparc/sparc-protos.h (sparc_split_regreg_legitimate):\n\tDeclare it.\n\t* config/sparc/sparc.md (DImode reg/reg split): Use it.\n\t(DFmode reg/reg split): Likewise.\n\nFrom-SVN: r180354", "tree": {"sha": "ceddd6702b8688b2520fe6997456bb36bb09351c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ceddd6702b8688b2520fe6997456bb36bb09351c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b1fc9f8b8d5f9355695ba790d0884a951fcaf5db", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b1fc9f8b8d5f9355695ba790d0884a951fcaf5db", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b1fc9f8b8d5f9355695ba790d0884a951fcaf5db", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b1fc9f8b8d5f9355695ba790d0884a951fcaf5db/comments", "author": {"login": "davem330", "id": 1053866, "node_id": "MDQ6VXNlcjEwNTM4NjY=", "avatar_url": "https://avatars.githubusercontent.com/u/1053866?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davem330", "html_url": "https://github.com/davem330", "followers_url": "https://api.github.com/users/davem330/followers", "following_url": "https://api.github.com/users/davem330/following{/other_user}", "gists_url": "https://api.github.com/users/davem330/gists{/gist_id}", "starred_url": "https://api.github.com/users/davem330/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davem330/subscriptions", "organizations_url": "https://api.github.com/users/davem330/orgs", "repos_url": "https://api.github.com/users/davem330/repos", "events_url": "https://api.github.com/users/davem330/events{/privacy}", "received_events_url": "https://api.github.com/users/davem330/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "9c85d38bf4983b01eccfb364e5ef68c54a7d0486", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9c85d38bf4983b01eccfb364e5ef68c54a7d0486", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9c85d38bf4983b01eccfb364e5ef68c54a7d0486"}], "stats": {"total": 47, "additions": 37, "deletions": 10}, "files": [{"sha": "dfa4caf0f6a671c33cb1c849a9b2b281c8657b37", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b1fc9f8b8d5f9355695ba790d0884a951fcaf5db/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b1fc9f8b8d5f9355695ba790d0884a951fcaf5db/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=b1fc9f8b8d5f9355695ba790d0884a951fcaf5db", "patch": "@@ -1,5 +1,12 @@\n 2011-10-23  David S. Miller  <davem@davemloft.net>\n \n+\t* config/sparc/sparc.c (sparc_split_regreg_legitimate): New\n+\tfunction.\n+\t* config/sparc/sparc-protos.h (sparc_split_regreg_legitimate):\n+\tDeclare it.\n+\t* config/sparc/sparc.md (DImode reg/reg split): Use it.\n+\t(DFmode reg/reg split): Likewise.\n+\n \t* config/sparc/sparc.md (*movdi_insn_sp32_v9): Add alternatives for\n \tgenerating fzero and fone instructions.\n \t(DImode const_int --> reg splitter): Only trigger for integer regs."}, {"sha": "bb6fb07c4a366860a0e650bba65cd156bd35d39d", "filename": "gcc/config/sparc/sparc-protos.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b1fc9f8b8d5f9355695ba790d0884a951fcaf5db/gcc%2Fconfig%2Fsparc%2Fsparc-protos.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b1fc9f8b8d5f9355695ba790d0884a951fcaf5db/gcc%2Fconfig%2Fsparc%2Fsparc-protos.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsparc%2Fsparc-protos.h?ref=b1fc9f8b8d5f9355695ba790d0884a951fcaf5db", "patch": "@@ -68,6 +68,7 @@ extern void sparc_defer_case_vector (rtx, rtx, int);\n extern bool sparc_expand_move (enum machine_mode, rtx *);\n extern void sparc_emit_set_symbolic_const64 (rtx, rtx, rtx);\n extern int sparc_splitdi_legitimate (rtx, rtx);\n+extern int sparc_split_regreg_legitimate (rtx, rtx);\n extern int sparc_absnegfloat_split_legitimate (rtx, rtx);\n extern const char *output_ubranch (rtx, int, rtx);\n extern const char *output_cbranch (rtx, rtx, int, int, int, rtx);"}, {"sha": "29d28474e2b19c14ff834bbf0f389621a5fa1462", "filename": "gcc/config/sparc/sparc.c", "status": "modified", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b1fc9f8b8d5f9355695ba790d0884a951fcaf5db/gcc%2Fconfig%2Fsparc%2Fsparc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b1fc9f8b8d5f9355695ba790d0884a951fcaf5db/gcc%2Fconfig%2Fsparc%2Fsparc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsparc%2Fsparc.c?ref=b1fc9f8b8d5f9355695ba790d0884a951fcaf5db", "patch": "@@ -7762,6 +7762,31 @@ sparc_splitdi_legitimate (rtx reg, rtx mem)\n   return 1;\n }\n \n+/* Like sparc_splitdi_legitimate but for REG <--> REG moves.  */\n+\n+int\n+sparc_split_regreg_legitimate (rtx reg1, rtx reg2)\n+{\n+  int regno1, regno2;\n+\n+  if (GET_CODE (reg1) == SUBREG)\n+    reg1 = SUBREG_REG (reg1);\n+  if (GET_CODE (reg1) != REG)\n+    return 0;\n+  regno1 = REGNO (reg1);\n+\n+  if (GET_CODE (reg2) == SUBREG)\n+    reg2 = SUBREG_REG (reg2);\n+  if (GET_CODE (reg2) != REG)\n+    return 0;\n+  regno2 = REGNO (reg2);\n+\n+  if (SPARC_INT_REG_P (regno1) && SPARC_INT_REG_P (regno2))\n+    return 1;\n+\n+  return 0;\n+}\n+\n /* Return 1 if x and y are some kind of REG and they refer to\n    different hard registers.  This test is guaranteed to be\n    run after reload.  */"}, {"sha": "b84699a1cd5104c64b38eaa4c495ce74d468e939", "filename": "gcc/config/sparc/sparc.md", "status": "modified", "additions": 4, "deletions": 10, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b1fc9f8b8d5f9355695ba790d0884a951fcaf5db/gcc%2Fconfig%2Fsparc%2Fsparc.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b1fc9f8b8d5f9355695ba790d0884a951fcaf5db/gcc%2Fconfig%2Fsparc%2Fsparc.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsparc%2Fsparc.md?ref=b1fc9f8b8d5f9355695ba790d0884a951fcaf5db", "patch": "@@ -1834,11 +1834,8 @@\n   \"reload_completed\n    && (! TARGET_V9\n        || (! TARGET_ARCH64\n-           && ((GET_CODE (operands[0]) == REG\n-                && SPARC_INT_REG_P (REGNO (operands[0])))\n-               || (GET_CODE (operands[0]) == SUBREG\n-                   && GET_CODE (SUBREG_REG (operands[0])) == REG\n-                   && SPARC_INT_REG_P (REGNO (SUBREG_REG (operands[0])))))))\"\n+           && sparc_split_regreg_legitimate (operands[0],\n+                                             operands[1])))\"\n   [(clobber (const_int 0))]\n {\n   rtx set_dest = operands[0];\n@@ -2247,11 +2244,8 @@\n         (match_operand:DF 1 \"register_operand\" \"\"))]\n   \"(! TARGET_V9\n     || (! TARGET_ARCH64\n-        && ((GET_CODE (operands[0]) == REG\n-             && SPARC_INT_REG_P (REGNO (operands[0])))\n-            || (GET_CODE (operands[0]) == SUBREG\n-                && GET_CODE (SUBREG_REG (operands[0])) == REG\n-                && SPARC_INT_REG_P (REGNO (SUBREG_REG (operands[0])))))))\n+        && sparc_split_regreg_legitimate (operands[0],\n+                                          operands[1])))\n    && reload_completed\"\n   [(clobber (const_int 0))]\n {"}]}