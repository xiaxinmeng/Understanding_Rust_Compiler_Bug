{"sha": "092763fd0c069f3a7c05a65238d3815e8daab76b", "node_id": "C_kwDOANBUbNoAKDA5Mjc2M2ZkMGMwNjlmM2E3YzA1YTY1MjM4ZDM4MTVlOGRhYWI3NmI", "commit": {"author": {"name": "konglin1", "email": "lingling.kong@intel.com", "date": "2022-09-05T06:38:03Z"}, "committer": {"name": "konglin1", "email": "lingling.kong@intel.com", "date": "2022-09-05T06:38:06Z"}, "message": "x86: Handle V8BF in expand_vec_perm_broadcast_1\n\ngcc/ChangeLog:\n\n\tPR target/106742\n\t* config/i386/i386-expand.cc (ix86_expand_vector_init_duplicate):\n\tHandle V8BF mode.\n\t(expand_vec_perm_broadcast_1): Ditto.\n\t* config/i386/sse.md (avx512fmaskhalfmode): Add BF vector mode.\n\t(vec_set<mode>_0): Add @ to it.\n\t(@vec_set<mode>_0): Ditto.\n\t(vec_interleave_high<mode><mask_name>): Ditto.\n\t(@vec_interleave_high<mode><mask_name>): Ditto.\n\t(vec_interleave_low<mode><mask_name>): Ditto.\n\t(@vec_interleave_low<mode><mask_name>): Ditto.\n\t* config/i386/subst.md (SUBST_V): Add BF vector mode.\n\ngcc/testsuite/ChangeLog:\n\n\t* gcc.target/i386/pr106742.c: New test.", "tree": {"sha": "53b73708a9c8dff667af3dc525dd987485232923", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/53b73708a9c8dff667af3dc525dd987485232923"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/092763fd0c069f3a7c05a65238d3815e8daab76b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/092763fd0c069f3a7c05a65238d3815e8daab76b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/092763fd0c069f3a7c05a65238d3815e8daab76b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/092763fd0c069f3a7c05a65238d3815e8daab76b/comments", "author": {"login": "konglingling7", "id": 86399175, "node_id": "MDQ6VXNlcjg2Mzk5MTc1", "avatar_url": "https://avatars.githubusercontent.com/u/86399175?v=4", "gravatar_id": "", "url": "https://api.github.com/users/konglingling7", "html_url": "https://github.com/konglingling7", "followers_url": "https://api.github.com/users/konglingling7/followers", "following_url": "https://api.github.com/users/konglingling7/following{/other_user}", "gists_url": "https://api.github.com/users/konglingling7/gists{/gist_id}", "starred_url": "https://api.github.com/users/konglingling7/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/konglingling7/subscriptions", "organizations_url": "https://api.github.com/users/konglingling7/orgs", "repos_url": "https://api.github.com/users/konglingling7/repos", "events_url": "https://api.github.com/users/konglingling7/events{/privacy}", "received_events_url": "https://api.github.com/users/konglingling7/received_events", "type": "User", "site_admin": false}, "committer": {"login": "konglingling7", "id": 86399175, "node_id": "MDQ6VXNlcjg2Mzk5MTc1", "avatar_url": "https://avatars.githubusercontent.com/u/86399175?v=4", "gravatar_id": "", "url": "https://api.github.com/users/konglingling7", "html_url": "https://github.com/konglingling7", "followers_url": "https://api.github.com/users/konglingling7/followers", "following_url": "https://api.github.com/users/konglingling7/following{/other_user}", "gists_url": "https://api.github.com/users/konglingling7/gists{/gist_id}", "starred_url": "https://api.github.com/users/konglingling7/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/konglingling7/subscriptions", "organizations_url": "https://api.github.com/users/konglingling7/orgs", "repos_url": "https://api.github.com/users/konglingling7/repos", "events_url": "https://api.github.com/users/konglingling7/events{/privacy}", "received_events_url": "https://api.github.com/users/konglingling7/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5f3228935e27780430a8a1504c2fa4a1ff978594", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5f3228935e27780430a8a1504c2fa4a1ff978594", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5f3228935e27780430a8a1504c2fa4a1ff978594"}], "stats": {"total": 33, "additions": 24, "deletions": 9}, "files": [{"sha": "d7b49c99dc8399a8f689b1c9e17c5a7cd0114731", "filename": "gcc/config/i386/i386-expand.cc", "status": "modified", "additions": 9, "deletions": 6, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/092763fd0c069f3a7c05a65238d3815e8daab76b/gcc%2Fconfig%2Fi386%2Fi386-expand.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/092763fd0c069f3a7c05a65238d3815e8daab76b/gcc%2Fconfig%2Fi386%2Fi386-expand.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386-expand.cc?ref=092763fd0c069f3a7c05a65238d3815e8daab76b", "patch": "@@ -15034,11 +15034,12 @@ ix86_expand_vector_init_duplicate (bool mmx_ok, machine_mode mode,\n \t  dperm.op0 = dperm.op1 = gen_reg_rtx (mode);\n \t  dperm.one_operand_p = true;\n \n-\t  if (mode == V8HFmode)\n+\t  if (mode == V8HFmode || mode == V8BFmode)\n \t    {\n-\t      tmp1 = force_reg (HFmode, val);\n+\t      tmp1 = force_reg (GET_MODE_INNER (mode), val);\n \t      tmp2 = gen_reg_rtx (mode);\n-\t      emit_insn (gen_vec_setv8hf_0 (tmp2, CONST0_RTX (mode), tmp1));\n+\t      emit_insn (maybe_gen_vec_set_0 (mode, tmp2,\n+\t\t\t\t\t      CONST0_RTX (mode), tmp1));\n \t      tmp1 = gen_lowpart (mode, tmp2);\n \t    }\n \t  else\n@@ -21826,21 +21827,23 @@ expand_vec_perm_broadcast_1 (struct expand_vec_perm_d *d)\n       return true;\n \n     case E_V8HFmode:\n+    case E_V8BFmode:\n       /* This can be implemented via interleave and pshufd.  */\n       if (d->testing_p)\n \treturn true;\n \n+      rtx (*maybe_gen) (machine_mode, int, rtx, rtx, rtx);\n       if (elt >= nelt2)\n \t{\n-\t  gen = gen_vec_interleave_highv8hf;\n+\t  maybe_gen = maybe_gen_vec_interleave_high;\n \t  elt -= nelt2;\n \t}\n       else\n-\tgen = gen_vec_interleave_lowv8hf;\n+\tmaybe_gen = maybe_gen_vec_interleave_low;\n       nelt2 /= 2;\n \n       dest = gen_reg_rtx (vmode);\n-      emit_insn (gen (dest, op0, op0));\n+      emit_insn (maybe_gen (vmode, 1, dest, op0, op0));\n \n       vmode = V4SImode;\n       op0 = gen_lowpart (vmode, dest);"}, {"sha": "72acf0b3e23404267d4f09124ace5350aea8cbcf", "filename": "gcc/config/i386/sse.md", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/092763fd0c069f3a7c05a65238d3815e8daab76b/gcc%2Fconfig%2Fi386%2Fsse.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/092763fd0c069f3a7c05a65238d3815e8daab76b/gcc%2Fconfig%2Fi386%2Fsse.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fsse.md?ref=092763fd0c069f3a7c05a65238d3815e8daab76b", "patch": "@@ -984,6 +984,7 @@\n    (V16SI \"QI\") (V8SI  \"QI\") (V4SI  \"QI\")\n    (V8DI  \"QI\") (V4DI  \"QI\") (V2DI  \"QI\")\n    (V32HF \"HI\") (V16HF \"QI\") (V8HF  \"QI\")\n+   (V32BF \"HI\") (V16BF \"QI\") (V8BF  \"QI\")\n    (V16SF \"QI\") (V8SF  \"QI\") (V4SF  \"QI\")\n    (V8DF  \"QI\") (V4DF  \"QI\") (V2DF  \"QI\")])\n \n@@ -10712,7 +10713,7 @@\n \t   ]\n \t   (symbol_ref \"true\")))])\n \n-(define_insn \"vec_set<mode>_0\"\n+(define_insn \"@vec_set<mode>_0\"\n   [(set (match_operand:V8_128 0 \"register_operand\"\n \t  \"=v,v,v,x,x,Yr,*x,x,x,x,v,v\")\n \t(vec_merge:V8_128\n@@ -17895,7 +17896,7 @@\n    (set_attr \"prefix\" \"maybe_evex\")\n    (set_attr \"mode\" \"OI\")])\n \n-(define_insn \"vec_interleave_high<mode><mask_name>\"\n+(define_insn \"@vec_interleave_high<mode><mask_name>\"\n   [(set (match_operand:V8_128 0 \"register_operand\" \"=x,Yw\")\n \t(vec_select:V8_128\n \t  (vec_concat:<ssedoublevecmode>\n@@ -17963,7 +17964,7 @@\n    (set_attr \"prefix\" \"maybe_evex\")\n    (set_attr \"mode\" \"OI\")])\n \n-(define_insn \"vec_interleave_low<mode><mask_name>\"\n+(define_insn \"@vec_interleave_low<mode><mask_name>\"\n   [(set (match_operand:V8_128 0 \"register_operand\" \"=x,Yw\")\n \t(vec_select:V8_128\n \t  (vec_concat:<ssedoublevecmode>"}, {"sha": "e169282fbbc670eec8aeee3cad3423acb647603b", "filename": "gcc/config/i386/subst.md", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/092763fd0c069f3a7c05a65238d3815e8daab76b/gcc%2Fconfig%2Fi386%2Fsubst.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/092763fd0c069f3a7c05a65238d3815e8daab76b/gcc%2Fconfig%2Fi386%2Fsubst.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fsubst.md?ref=092763fd0c069f3a7c05a65238d3815e8daab76b", "patch": "@@ -25,6 +25,7 @@\n    V16SI V8SI  V4SI\n    V8DI  V4DI  V2DI\n    V32HF V16HF V8HF\n+   V32BF V16BF V8BF\n    V16SF V8SF  V4SF\n    V8DF  V4DF  V2DF])\n "}, {"sha": "36ac93c9623f4ed13014016acf243248bce42c0c", "filename": "gcc/testsuite/gcc.target/i386/pr106742.c", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/092763fd0c069f3a7c05a65238d3815e8daab76b/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr106742.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/092763fd0c069f3a7c05a65238d3815e8daab76b/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr106742.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr106742.c?ref=092763fd0c069f3a7c05a65238d3815e8daab76b", "patch": "@@ -0,0 +1,10 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-msse2 -mno-sse4 -O1\" } */\n+typedef __bf16 v8bf __attribute__ ((__vector_size__ (16)));\n+\n+v8bf\n+vec_init_dup_v8bf (__bf16 a1)\n+{\n+  return __extension__ (v8bf) { a1, a1, a1, a1, a1, a1, a1, a1 };\n+}\n+/* { dg-final { scan-assembler-times \"pinsrw\" 1} } */"}]}