{"sha": "dabbc72269ece1873a9bc9a841ed7f3577312da3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGFiYmM3MjI2OWVjZTE4NzNhOWJjOWE4NDFlZDdmMzU3NzMxMmRhMw==", "commit": {"author": {"name": "Jan Hubicka", "email": "jh@suse.cz", "date": "2004-05-26T22:19:40Z"}, "committer": {"name": "Jan Hubicka", "email": "hubicka@gcc.gnu.org", "date": "2004-05-26T22:19:40Z"}, "message": "i386.md (UNSPECV_EH_RETURN): Kill.\n\n\n\t* i386.md (UNSPECV_EH_RETURN): Kill.\n\t(eh_return): Use jump_insn.\n\t(eh_return_si, eh_return_di): Change pattern to jump instruction.\n\nFrom-SVN: r82295", "tree": {"sha": "45456c00408c1e9d15293400f829f62fe05f8da6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/45456c00408c1e9d15293400f829f62fe05f8da6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/dabbc72269ece1873a9bc9a841ed7f3577312da3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dabbc72269ece1873a9bc9a841ed7f3577312da3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/dabbc72269ece1873a9bc9a841ed7f3577312da3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dabbc72269ece1873a9bc9a841ed7f3577312da3/comments", "author": null, "committer": null, "parents": [{"sha": "b9d861bc86c97e68ea474750bb33dfd10f72119d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b9d861bc86c97e68ea474750bb33dfd10f72119d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b9d861bc86c97e68ea474750bb33dfd10f72119d"}], "stats": {"total": 26, "additions": 19, "deletions": 7}, "files": [{"sha": "1fad8d51b1fb00381963e5a459a5e8131eca3160", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dabbc72269ece1873a9bc9a841ed7f3577312da3/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dabbc72269ece1873a9bc9a841ed7f3577312da3/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=dabbc72269ece1873a9bc9a841ed7f3577312da3", "patch": "@@ -1,3 +1,9 @@\n+2004-05-27  Jan Hubicka  <jh@suse.cz>\n+\n+\t* i386.md (UNSPECV_EH_RETURN): Kill.\n+\t(eh_return): Use jump_insn.\n+\t(eh_return_si, eh_return_di): Change pattern to jump instruction.\n+\n 2004-05-26  Jan Hubicka  <jh@suse.cz>\n \n \t* cfgcleanup.c (try_forward_edges):  Do not check loop structure when"}, {"sha": "40f33fba29e79b349c7d5151195ca85130487f73", "filename": "gcc/config/i386/i386.md", "status": "modified", "additions": 13, "deletions": 7, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dabbc72269ece1873a9bc9a841ed7f3577312da3/gcc%2Fconfig%2Fi386%2Fi386.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dabbc72269ece1873a9bc9a841ed7f3577312da3/gcc%2Fconfig%2Fi386%2Fi386.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.md?ref=dabbc72269ece1873a9bc9a841ed7f3577312da3", "patch": "@@ -137,11 +137,12 @@\n \n    ; REP instruction\n    (UNSPEC_REP\t\t\t75)\n+\n+   (UNSPEC_EH_RETURN\t\t76)\n   ])\n \n (define_constants\n   [(UNSPECV_BLOCKAGE\t\t0)\n-   (UNSPECV_EH_RETURN\t\t13)\n    (UNSPECV_EMMS\t\t31)\n    (UNSPECV_LDMXCSR\t\t37)\n    (UNSPECV_STMXCSR\t\t40)\n@@ -13880,6 +13881,7 @@\n   \"\"\n {\n   rtx tmp, sa = EH_RETURN_STACKADJ_RTX, ra = operands[0];\n+  rtx jmp;\n \n   /* Tricky bit: we write the address of the handler to which we will\n      be returning into someone else's stack frame, one word below the\n@@ -13890,25 +13892,29 @@\n   emit_move_insn (tmp, ra);\n \n   if (Pmode == SImode)\n-    emit_insn (gen_eh_return_si (sa));\n+    jmp = emit_jump_insn (gen_eh_return_si (sa));\n   else\n-    emit_insn (gen_eh_return_di (sa));\n+    jmp = emit_jump_insn (gen_eh_return_di (sa));\n+  REG_NOTES (jmp) = alloc_EXPR_LIST (REG_NON_LOCAL_GOTO, const0_rtx,\n+                                     REG_NOTES (jmp));\n   emit_barrier ();\n   DONE;\n })\n \n (define_insn_and_split \"eh_return_si\"\n-  [(unspec_volatile [(match_operand:SI 0 \"register_operand\" \"c\")]\n-\t\t    UNSPECV_EH_RETURN)]\n+  [(set (pc) \n+        (unspec [(match_operand:SI 0 \"register_operand\" \"c\")]\n+\t         UNSPEC_EH_RETURN))]\n   \"!TARGET_64BIT\"\n   \"#\"\n   \"reload_completed\"\n   [(const_int 1)]\n   \"ix86_expand_epilogue (2); DONE;\")\n \n (define_insn_and_split \"eh_return_di\"\n-  [(unspec_volatile [(match_operand:DI 0 \"register_operand\" \"c\")]\n-\t\t    UNSPECV_EH_RETURN)]\n+  [(set (pc) \n+        (unspec [(match_operand:DI 0 \"register_operand\" \"c\")]\n+\t         UNSPEC_EH_RETURN))]\n   \"TARGET_64BIT\"\n   \"#\"\n   \"reload_completed\""}]}