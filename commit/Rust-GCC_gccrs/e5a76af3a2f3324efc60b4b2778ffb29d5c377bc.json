{"sha": "e5a76af3a2f3324efc60b4b2778ffb29d5c377bc", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTVhNzZhZjNhMmYzMzI0ZWZjNjBiNGIyNzc4ZmZiMjlkNWMzNzdiYw==", "commit": {"author": {"name": "Mark Eggleston", "email": "markeggleston@gcc.gnu.org", "date": "2020-06-11T13:33:51Z"}, "committer": {"name": "Mark Eggleston", "email": "markeggleston@gcc.gnu.org", "date": "2020-09-27T10:47:08Z"}, "message": "Fortran  :  ICE in build_field PR95614\n\nLocal identifiers can not be the same as a module name.  Original\npatch by Steve Kargl resulted in name clashes between common block\nnames and local identifiers.  A local identifier can be the same as\na global identier if that identifier represents a common.  The patch\nwas modified to allow global identifiers that represent a common\nblock.\n\n2020-09-27  Steven G. Kargl  <kargl@gcc.gnu.org>\n\t    Mark Eggleston  <markeggleston@gcc.gnu.org>\n\ngcc/fortran/\n\n\tPR fortran/95614\n\t* decl.c (gfc_get_common): Use gfc_match_common_name instead\n\tof match_common_name.\n\t* decl.c (gfc_bind_idents): Use gfc_match_common_name instead\n\tof match_common_name.\n\t* match.c : Rename match_common_name to gfc_match_common_name.\n\t* match.c (gfc_match_common): Use gfc_match_common_name instead\n\tof match_common_name.\n\t* match.h : Rename match_common_name to gfc_match_common_name.\n\t* resolve.c (resolve_common_vars): Check each symbol in a\n\tcommon block has a global symbol.  If there is a global symbol\n\tissue an error if the symbol type is known as is not a common\n\tblock name.\n\n2020-09-27  Mark Eggleston  <markeggleston@gcc.gnu.org>\n\ngcc/testsuite/\n\n\tPR fortran/95614\n\t* gfortran.dg/pr95614_1.f90: New test.\n\t* gfortran.dg/pr95614_2.f90: New test.", "tree": {"sha": "104cd071fef2bd61a93e0dea5ba6272499929d13", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/104cd071fef2bd61a93e0dea5ba6272499929d13"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e5a76af3a2f3324efc60b4b2778ffb29d5c377bc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e5a76af3a2f3324efc60b4b2778ffb29d5c377bc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e5a76af3a2f3324efc60b4b2778ffb29d5c377bc", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e5a76af3a2f3324efc60b4b2778ffb29d5c377bc/comments", "author": null, "committer": null, "parents": [{"sha": "683e55facfd5c1d348796119424d7b3f9e889ffe", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/683e55facfd5c1d348796119424d7b3f9e889ffe", "html_url": "https://github.com/Rust-GCC/gccrs/commit/683e55facfd5c1d348796119424d7b3f9e889ffe"}], "stats": {"total": 34, "additions": 26, "deletions": 8}, "files": [{"sha": "9bfaa60418a9cdfb4edf7efb4f593e121d9847a5", "filename": "gcc/fortran/decl.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e5a76af3a2f3324efc60b4b2778ffb29d5c377bc/gcc%2Ffortran%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e5a76af3a2f3324efc60b4b2778ffb29d5c377bc/gcc%2Ffortran%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fdecl.c?ref=e5a76af3a2f3324efc60b4b2778ffb29d5c377bc", "patch": "@@ -6007,7 +6007,7 @@ get_bind_c_idents (void)\n       found_id = MATCH_YES;\n       gfc_get_ha_symbol (name, &tmp_sym);\n     }\n-  else if (match_common_name (name) == MATCH_YES)\n+  else if (gfc_match_common_name (name) == MATCH_YES)\n     {\n       found_id = MATCH_YES;\n       com_block = gfc_get_common (name, 0);\n@@ -6052,7 +6052,7 @@ get_bind_c_idents (void)\n \t      found_id = MATCH_YES;\n \t      gfc_get_ha_symbol (name, &tmp_sym);\n \t    }\n-\t  else if (match_common_name (name) == MATCH_YES)\n+\t  else if (gfc_match_common_name (name) == MATCH_YES)\n \t    {\n \t      found_id = MATCH_YES;\n \t      com_block = gfc_get_common (name, 0);"}, {"sha": "bee73e7b00800e7e1e816d953a68d1e51b522e2d", "filename": "gcc/fortran/match.c", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e5a76af3a2f3324efc60b4b2778ffb29d5c377bc/gcc%2Ffortran%2Fmatch.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e5a76af3a2f3324efc60b4b2778ffb29d5c377bc/gcc%2Ffortran%2Fmatch.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fmatch.c?ref=e5a76af3a2f3324efc60b4b2778ffb29d5c377bc", "patch": "@@ -5166,7 +5166,8 @@ gfc_get_common (const char *name, int from_module)\n \n /* Match a common block name.  */\n \n-match match_common_name (char *name)\n+match\n+gfc_match_common_name (char *name)\n {\n   match m;\n \n@@ -5218,7 +5219,7 @@ gfc_match_common (void)\n \n   for (;;)\n     {\n-      m = match_common_name (name);\n+      m = gfc_match_common_name (name);\n       if (m == MATCH_ERROR)\n \tgoto cleanup;\n "}, {"sha": "4ccb5961d2b1d8d8c18cf29232e5ad09ed1834fb", "filename": "gcc/fortran/match.h", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e5a76af3a2f3324efc60b4b2778ffb29d5c377bc/gcc%2Ffortran%2Fmatch.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e5a76af3a2f3324efc60b4b2778ffb29d5c377bc/gcc%2Ffortran%2Fmatch.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fmatch.h?ref=e5a76af3a2f3324efc60b4b2778ffb29d5c377bc", "patch": "@@ -103,11 +103,9 @@ match gfc_match_call (void);\n \n /* We want to use this function to check for a common-block-name\n    that can exist in a bind statement, so removed the \"static\"\n-   declaration of the function in match.c.\n+   declaration of the function in match.c. */\n  \n-   TODO: should probably rename this now that it'll be globally seen to\n-   gfc_match_common_name.  */\n-match match_common_name (char *name);\n+match gfc_match_common_name (char *name);\n \n match gfc_match_common (void);\n match gfc_match_block_data (void);"}, {"sha": "3c767a7c490274564ec1cafb6c067e839a3b2569", "filename": "gcc/fortran/resolve.c", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e5a76af3a2f3324efc60b4b2778ffb29d5c377bc/gcc%2Ffortran%2Fresolve.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e5a76af3a2f3324efc60b4b2778ffb29d5c377bc/gcc%2Ffortran%2Fresolve.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fresolve.c?ref=e5a76af3a2f3324efc60b4b2778ffb29d5c377bc", "patch": "@@ -936,9 +936,16 @@ static void\n resolve_common_vars (gfc_common_head *common_block, bool named_common)\n {\n   gfc_symbol *csym = common_block->head;\n+  gfc_gsymbol *gsym;\n \n   for (; csym; csym = csym->common_next)\n     {\n+      gsym = gfc_find_gsymbol (gfc_gsym_root, csym->name);\n+      if (gsym && gsym->type != GSYM_UNKNOWN && gsym->type != GSYM_COMMON)\n+\tgfc_error_now (\"Global entity %qs at %L cannot appear in a \"\n+\t\t\t\"COMMON block at %L\", gsym->name,\n+\t\t\t&gsym->where, &csym->common_block->where);\n+\n       /* gfc_add_in_common may have been called before, but the reported errors\n \t have been ignored to continue parsing.\n \t We do the checks again here.  */"}, {"sha": "f835143365a2c7a2a830919a1922fe328c0b21fe", "filename": "gcc/testsuite/gfortran.dg/pr95614_1.f90", "status": "added", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e5a76af3a2f3324efc60b4b2778ffb29d5c377bc/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr95614_1.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e5a76af3a2f3324efc60b4b2778ffb29d5c377bc/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr95614_1.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr95614_1.f90?ref=e5a76af3a2f3324efc60b4b2778ffb29d5c377bc", "patch": "@@ -0,0 +1,6 @@\n+! { dg-do compile }\n+\n+module m   ! { dg-error \".1.\" }\n+  common m ! { dg-error \"cannot appear in a COMMON\" }\n+end\n+"}, {"sha": "9d69a5063846e9c1212cb9e376f3ea8704eef798", "filename": "gcc/testsuite/gfortran.dg/pr95614_2.f90", "status": "added", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e5a76af3a2f3324efc60b4b2778ffb29d5c377bc/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr95614_2.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e5a76af3a2f3324efc60b4b2778ffb29d5c377bc/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr95614_2.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr95614_2.f90?ref=e5a76af3a2f3324efc60b4b2778ffb29d5c377bc", "patch": "@@ -0,0 +1,6 @@\n+! { dg-do compile }\n+\n+module m        ! { dg-error \".1.\" }\n+  common /xc/ m ! { dg-error \"cannot appear in a COMMON\" }\n+end\n+"}]}