{"sha": "d16017da3480f10f8dbac692b72e87ab82e2f8d7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDE2MDE3ZGEzNDgwZjEwZjhkYmFjNjkyYjcyZTg3YWI4MmUyZjhkNw==", "commit": {"author": {"name": "Jozef Lawrynowicz", "email": "jozef.l@mittosystems.com", "date": "2019-08-23T09:21:26Z"}, "committer": {"name": "Jozef Lawrynowicz", "email": "jozefl@gcc.gnu.org", "date": "2019-08-23T09:21:26Z"}, "message": "re PR target/91306 ([MSP430] libgcc/crtstuff.c: Alignment of frame_dummy .init_array entry is too big)\n\n2019-08-23  Jozef Lawrynowicz  <jozef.l@mittosystems.com>\n\n\tPR target/91306\n\t* crtstuff.c (__CTOR_LIST__): Align to the \"__alignof__\" the array\n\telement type, instead of \"sizeof\" the element type.\n\t(__DTOR_LIST__): Likewise.\n\t(__TMC_LIST__): Likewise.\n\t(__do_global_dtors_aux_fini_array_entry): Likewise.\n\t(__frame_dummy_init_array_entry): Likewise.\n\t(__CTOR_END__): Likewise.\n\t(__DTOR_END__): Likweise.\n\t(__FRAME_END__): Likewise.\n\t(__TMC_END__): Likewise.\n\nFrom-SVN: r274846", "tree": {"sha": "3af0f741fe71edf019cec747a85a2495717e036a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3af0f741fe71edf019cec747a85a2495717e036a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d16017da3480f10f8dbac692b72e87ab82e2f8d7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d16017da3480f10f8dbac692b72e87ab82e2f8d7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d16017da3480f10f8dbac692b72e87ab82e2f8d7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d16017da3480f10f8dbac692b72e87ab82e2f8d7/comments", "author": {"login": "jozefl-mitto", "id": 36524004, "node_id": "MDQ6VXNlcjM2NTI0MDA0", "avatar_url": "https://avatars.githubusercontent.com/u/36524004?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jozefl-mitto", "html_url": "https://github.com/jozefl-mitto", "followers_url": "https://api.github.com/users/jozefl-mitto/followers", "following_url": "https://api.github.com/users/jozefl-mitto/following{/other_user}", "gists_url": "https://api.github.com/users/jozefl-mitto/gists{/gist_id}", "starred_url": "https://api.github.com/users/jozefl-mitto/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jozefl-mitto/subscriptions", "organizations_url": "https://api.github.com/users/jozefl-mitto/orgs", "repos_url": "https://api.github.com/users/jozefl-mitto/repos", "events_url": "https://api.github.com/users/jozefl-mitto/events{/privacy}", "received_events_url": "https://api.github.com/users/jozefl-mitto/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "a50f4236956cbcfff1fe7c8c0ca9c8db43e3bcd5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a50f4236956cbcfff1fe7c8c0ca9c8db43e3bcd5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a50f4236956cbcfff1fe7c8c0ca9c8db43e3bcd5"}], "stats": {"total": 47, "additions": 31, "deletions": 16}, "files": [{"sha": "20674378561ff97c45c1ee42ba7486b364f647a6", "filename": "libgcc/ChangeLog", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d16017da3480f10f8dbac692b72e87ab82e2f8d7/libgcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d16017da3480f10f8dbac692b72e87ab82e2f8d7/libgcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2FChangeLog?ref=d16017da3480f10f8dbac692b72e87ab82e2f8d7", "patch": "@@ -1,3 +1,17 @@\n+2019-08-23  Jozef Lawrynowicz  <jozef.l@mittosystems.com>\n+\n+\tPR target/91306\n+\t* crtstuff.c (__CTOR_LIST__): Align to the \"__alignof__\" the array\n+\telement type, instead of \"sizeof\" the element type.\n+\t(__DTOR_LIST__): Likewise.\n+\t(__TMC_LIST__): Likewise.\n+\t(__do_global_dtors_aux_fini_array_entry): Likewise.\n+\t(__frame_dummy_init_array_entry): Likewise.\n+\t(__CTOR_END__): Likewise.\n+\t(__DTOR_END__): Likweise.\n+\t(__FRAME_END__): Likewise.\n+\t(__TMC_END__): Likewise.\n+\n 2019-08-20  Lili Cui  <lilicui@intel.com>\n \n \t* config/i386/cpuinfo.h: Add INTEL_COREI7_TIGERLAKE and"}, {"sha": "c8a8e2c87a5fec3beb5fd36ce1c54c43d49ea938", "filename": "libgcc/crtstuff.c", "status": "modified", "additions": 17, "deletions": 16, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d16017da3480f10f8dbac692b72e87ab82e2f8d7/libgcc%2Fcrtstuff.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d16017da3480f10f8dbac692b72e87ab82e2f8d7/libgcc%2Fcrtstuff.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fcrtstuff.c?ref=d16017da3480f10f8dbac692b72e87ab82e2f8d7", "patch": "@@ -233,11 +233,11 @@ CTOR_LIST_BEGIN;\n static func_ptr force_to_data[1] __attribute__ ((__used__)) = { };\n asm (__LIBGCC_CTORS_SECTION_ASM_OP__);\n STATIC func_ptr __CTOR_LIST__[1]\n-  __attribute__ ((__used__, aligned(sizeof(func_ptr))))\n+  __attribute__ ((__used__, aligned(__alignof__(func_ptr))))\n   = { (func_ptr) (-1) };\n #else\n STATIC func_ptr __CTOR_LIST__[1]\n-  __attribute__ ((__used__, section(\".ctors\"), aligned(sizeof(func_ptr))))\n+  __attribute__ ((__used__, section(\".ctors\"), aligned(__alignof__(func_ptr))))\n   = { (func_ptr) (-1) };\n #endif /* __CTOR_LIST__ alternatives */\n \n@@ -246,11 +246,11 @@ DTOR_LIST_BEGIN;\n #elif defined(__LIBGCC_DTORS_SECTION_ASM_OP__)\n asm (__LIBGCC_DTORS_SECTION_ASM_OP__);\n STATIC func_ptr __DTOR_LIST__[1]\n-  __attribute__ ((aligned(sizeof(func_ptr))))\n+  __attribute__ ((aligned(__alignof__(func_ptr))))\n   = { (func_ptr) (-1) };\n #else\n STATIC func_ptr __DTOR_LIST__[1]\n-  __attribute__((section(\".dtors\"), aligned(sizeof(func_ptr))))\n+  __attribute__((section(\".dtors\"), aligned(__alignof__(func_ptr))))\n   = { (func_ptr) (-1) };\n #endif /* __DTOR_LIST__ alternatives */\n #endif /* USE_INITFINI_ARRAY */\n@@ -265,7 +265,7 @@ STATIC EH_FRAME_SECTION_CONST char __EH_FRAME_BEGIN__[]\n \n #if USE_TM_CLONE_REGISTRY\n STATIC func_ptr __TMC_LIST__[]\n-  __attribute__((used, section(\".tm_clone_table\"), aligned(sizeof(void*))))\n+  __attribute__((used, section(\".tm_clone_table\"), aligned(__alignof__(void*))))\n   = { };\n # ifdef HAVE_GAS_HIDDEN\n extern func_ptr __TMC_END__[] __attribute__((__visibility__ (\"hidden\")));\n@@ -430,8 +430,8 @@ __do_global_dtors_aux (void)\n CRT_CALL_STATIC_FUNCTION (FINI_SECTION_ASM_OP, __do_global_dtors_aux)\n #elif defined (FINI_ARRAY_SECTION_ASM_OP)\n static func_ptr __do_global_dtors_aux_fini_array_entry[]\n-  __attribute__ ((__used__, section(\".fini_array\"), aligned(sizeof(func_ptr))))\n-  = { __do_global_dtors_aux };\n+  __attribute__ ((__used__, section(\".fini_array\"),\n+\t\t  aligned(__alignof__(func_ptr)))) = { __do_global_dtors_aux };\n #else /* !FINI_SECTION_ASM_OP && !FINI_ARRAY_SECTION_ASM_OP */\n static void __attribute__((used))\n __do_global_dtors_aux_1 (void)\n@@ -474,8 +474,8 @@ frame_dummy (void)\n CRT_CALL_STATIC_FUNCTION (__LIBGCC_INIT_SECTION_ASM_OP__, frame_dummy)\n #else /* defined(__LIBGCC_INIT_SECTION_ASM_OP__) */\n static func_ptr __frame_dummy_init_array_entry[]\n-  __attribute__ ((__used__, section(\".init_array\"), aligned(sizeof(func_ptr))))\n-  = { frame_dummy };\n+  __attribute__ ((__used__, section(\".init_array\"),\n+\t\t  aligned(__alignof__(func_ptr)))) = { frame_dummy };\n #endif /* !defined(__LIBGCC_INIT_SECTION_ASM_OP__) */\n #endif /* USE_EH_FRAME_REGISTRY || USE_TM_CLONE_REGISTRY */\n \n@@ -588,11 +588,11 @@ CTOR_LIST_END;\n static func_ptr force_to_data[1] __attribute__ ((__used__)) = { };\n asm (__LIBGCC_CTORS_SECTION_ASM_OP__);\n STATIC func_ptr __CTOR_END__[1]\n-  __attribute__((aligned(sizeof(func_ptr))))\n+  __attribute__((aligned(__alignof__(func_ptr))))\n   = { (func_ptr) 0 };\n #else\n STATIC func_ptr __CTOR_END__[1]\n-  __attribute__((section(\".ctors\"), aligned(sizeof(func_ptr))))\n+  __attribute__((section(\".ctors\"), aligned(__alignof__(func_ptr))))\n   = { (func_ptr) 0 };\n #endif\n \n@@ -607,16 +607,16 @@ func_ptr __DTOR_END__[1]\n #ifndef __LIBGCC_DTORS_SECTION_ASM_OP__\n \t\t  section(\".dtors\"),\n #endif\n-\t\t  aligned(sizeof(func_ptr)), visibility (\"hidden\")))\n+\t\t  aligned(__alignof__(func_ptr)), visibility (\"hidden\")))\n   = { (func_ptr) 0 };\n #elif defined(__LIBGCC_DTORS_SECTION_ASM_OP__)\n asm (__LIBGCC_DTORS_SECTION_ASM_OP__);\n STATIC func_ptr __DTOR_END__[1]\n-  __attribute__ ((used, aligned(sizeof(func_ptr))))\n+  __attribute__ ((used, aligned(__alignof__(func_ptr))))\n   = { (func_ptr) 0 };\n #else\n STATIC func_ptr __DTOR_END__[1]\n-  __attribute__((used, section(\".dtors\"), aligned(sizeof(func_ptr))))\n+  __attribute__((used, section(\".dtors\"), aligned(__alignof__(func_ptr))))\n   = { (func_ptr) 0 };\n #endif\n #endif /* USE_INITFINI_ARRAY */\n@@ -635,7 +635,7 @@ typedef short int32;\n # endif\n STATIC EH_FRAME_SECTION_CONST int32 __FRAME_END__[]\n      __attribute__ ((used, section(__LIBGCC_EH_FRAME_SECTION_NAME__),\n-\t\t     aligned(sizeof(int32))))\n+\t\t     aligned(__alignof__(int32))))\n      = { 0 };\n #endif /* __LIBGCC_EH_FRAME_SECTION_NAME__ */\n \n@@ -644,7 +644,8 @@ STATIC EH_FRAME_SECTION_CONST int32 __FRAME_END__[]\n static\n # endif\n func_ptr __TMC_END__[]\n-  __attribute__((used, section(\".tm_clone_table\"), aligned(sizeof(void *))))\n+  __attribute__((used, section(\".tm_clone_table\"),\n+\t\t aligned(__alignof__(void *))))\n # ifdef HAVE_GAS_HIDDEN\n   __attribute__((__visibility__ (\"hidden\"))) = { };\n # else"}]}