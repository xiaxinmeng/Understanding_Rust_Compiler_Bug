{"sha": "0a81f500044e97d296deb70b3ee657a0eeabe9f0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MGE4MWY1MDAwNDRlOTdkMjk2ZGViNzBiM2VlNjU3YTBlZWFiZTlmMA==", "commit": {"author": {"name": "Richard Earnshaw", "email": "erich@gnu.org", "date": "1994-10-02T15:10:48Z"}, "committer": {"name": "Richard Earnshaw", "email": "erich@gnu.org", "date": "1994-10-02T15:10:48Z"}, "message": "(arm_reload_in_hi): New function.\n\nFrom-SVN: r8201", "tree": {"sha": "e7faa57b689158ecebe68e194fc91abb17a0001b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e7faa57b689158ecebe68e194fc91abb17a0001b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0a81f500044e97d296deb70b3ee657a0eeabe9f0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0a81f500044e97d296deb70b3ee657a0eeabe9f0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0a81f500044e97d296deb70b3ee657a0eeabe9f0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0a81f500044e97d296deb70b3ee657a0eeabe9f0/comments", "author": null, "committer": null, "parents": [{"sha": "2ce9c1b9e15da5507207c4f2f217bcdde90babea", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2ce9c1b9e15da5507207c4f2f217bcdde90babea", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2ce9c1b9e15da5507207c4f2f217bcdde90babea"}], "stats": {"total": 33, "additions": 31, "deletions": 2}, "files": [{"sha": "cff93d2608e3f319c5d382b8917c85f908f51f12", "filename": "gcc/config/arm/arm.c", "status": "modified", "additions": 31, "deletions": 2, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0a81f500044e97d296deb70b3ee657a0eeabe9f0/gcc%2Fconfig%2Farm%2Farm.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0a81f500044e97d296deb70b3ee657a0eeabe9f0/gcc%2Fconfig%2Farm%2Farm.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm.c?ref=0a81f500044e97d296deb70b3ee657a0eeabe9f0", "patch": "@@ -1472,8 +1472,8 @@ store_multiple_operation (op, mode)\n \n int\n multi_register_push (op, mode)\n-  rtx op;\n-  enum machine_mode mode;\n+     rtx op;\n+     enum machine_mode mode;\n {\n   if (GET_CODE (op) != PARALLEL\n       || (GET_CODE (XVECEXP (op, 0, 0)) != SET)\n@@ -1713,6 +1713,35 @@ gen_compare_reg (code, x, y, fp)\n   return cc_reg;\n }\n \n+void\n+arm_reload_in_hi (operands)\n+     rtx *operands;\n+{\n+  rtx base = find_replacement (&XEXP (operands[1], 0));\n+\n+  emit_insn (gen_zero_extendqisi2 (operands[2], gen_rtx (MEM, QImode, base)));\n+  emit_insn (gen_zero_extendqisi2 (gen_rtx (SUBREG, SImode, operands[0], 0),\n+\t\t\t\t   gen_rtx (MEM, QImode, \n+\t\t\t\t\t    plus_constant (base, 1))));\n+  if (BYTES_BIG_ENDIAN)\n+    emit_insn (gen_rtx (SET, VOIDmode, gen_rtx (SUBREG, SImode, \n+\t\t\t\t\t\toperands[0], 0),\n+\t\t\tgen_rtx (IOR, SImode, \n+\t\t\t\t gen_rtx (ASHIFT, SImode,\n+\t\t\t\t\t  gen_rtx (SUBREG, SImode,\n+\t\t\t\t\t\t   operands[0], 0),\n+\t\t\t\t\t  GEN_INT (8)),\n+\t\t\t\t operands[2])));\n+  else\n+    emit_insn (gen_rtx (SET, VOIDmode, gen_rtx (SUBREG, SImode, \n+\t\t\t\t\t\toperands[0], 0),\n+\t\t\tgen_rtx (IOR, SImode, \n+\t\t\t\t gen_rtx (ASHIFT, SImode,\n+\t\t\t\t\t  operands[2],\n+\t\t\t\t\t  GEN_INT (8)),\n+\t\t\t\t gen_rtx (SUBREG, SImode, operands[0], 0))));\n+}\n+\n void\n arm_reload_out_hi (operands)\n      rtx *operands;"}]}