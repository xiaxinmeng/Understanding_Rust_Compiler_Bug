{"sha": "8d66aecaffd36ef82905a4b225ac5e0932231c9d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGQ2NmFlY2FmZmQzNmVmODI5MDVhNGIyMjVhYzVlMDkzMjIzMWM5ZA==", "commit": {"author": {"name": "Richard Guenther", "email": "rguenther@suse.de", "date": "2005-11-04T18:02:51Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2005-11-04T18:02:51Z"}, "message": "tree-flow.h (ref_contains_indirect_ref): Rename to array_ref_contains_indirect_ref.\n\n2005-11-04  Richard Guenther  <rguenther@suse.de>\n\n\t* tree-flow.h (ref_contains_indirect_ref): Rename to\n\tarray_ref_contains_indirect_ref.\n\t* tree-flow-inline.h (ref_contains_indirect_ref): Likewise.\n\t(array_ref_contains_indirect_ref): Make comment match the code\n\tand vice-versa.\n\t(ref_contains_array_ref): Likewise.\n\t* tree-ssa-structalias.c (find_func_aliases): Remove call to\n\tref_contains_indirect_ref.\n\t* tree-ssa-loop-niter.c (infer_loop_bounds_from_undefined):\n\tRename calls to ref_contains_indirect_ref.\n\nFrom-SVN: r106499", "tree": {"sha": "b6f3557754fc7b55112b9e93cb62f67171fbea3b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b6f3557754fc7b55112b9e93cb62f67171fbea3b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8d66aecaffd36ef82905a4b225ac5e0932231c9d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8d66aecaffd36ef82905a4b225ac5e0932231c9d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8d66aecaffd36ef82905a4b225ac5e0932231c9d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8d66aecaffd36ef82905a4b225ac5e0932231c9d/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "086ed39d00cae8912691bfd0cecb61011a34f835", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/086ed39d00cae8912691bfd0cecb61011a34f835", "html_url": "https://github.com/Rust-GCC/gccrs/commit/086ed39d00cae8912691bfd0cecb61011a34f835"}], "stats": {"total": 58, "additions": 36, "deletions": 22}, "files": [{"sha": "5c49c95c073f87c440f14c8ef110a80a9a4981a7", "filename": "gcc/ChangeLog", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d66aecaffd36ef82905a4b225ac5e0932231c9d/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d66aecaffd36ef82905a4b225ac5e0932231c9d/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=8d66aecaffd36ef82905a4b225ac5e0932231c9d", "patch": "@@ -1,3 +1,16 @@\n+2005-11-04  Richard Guenther  <rguenther@suse.de>\n+\n+\t* tree-flow.h (ref_contains_indirect_ref): Rename to\n+\tarray_ref_contains_indirect_ref.\n+\t* tree-flow-inline.h (ref_contains_indirect_ref): Likewise.\n+\t(array_ref_contains_indirect_ref): Make comment match the code\n+\tand vice-versa.\n+\t(ref_contains_array_ref): Likewise.\n+\t* tree-ssa-structalias.c (find_func_aliases): Remove call to\n+\tref_contains_indirect_ref.\n+\t* tree-ssa-loop-niter.c (infer_loop_bounds_from_undefined):\n+\tRename calls to ref_contains_indirect_ref.\n+\n 2005-11-04 Paul Brook  <paul@codesourcery.com>\n \n \t* config/arm/arm.c (arm_load_pic_register): Pass extra reg to"}, {"sha": "e31db442a5d695ab45e6d14477a87d971c8e3b92", "filename": "gcc/tree-flow-inline.h", "status": "modified", "additions": 19, "deletions": 17, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d66aecaffd36ef82905a4b225ac5e0932231c9d/gcc%2Ftree-flow-inline.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d66aecaffd36ef82905a4b225ac5e0932231c9d/gcc%2Ftree-flow-inline.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-flow-inline.h?ref=8d66aecaffd36ef82905a4b225ac5e0932231c9d", "patch": "@@ -1407,32 +1407,34 @@ unmodifiable_var_p (tree var)\n   return TREE_READONLY (var) && (TREE_STATIC (var) || DECL_EXTERNAL (var));\n }\n \n-/* Return true if REF, an ARRAY_REF, has an INDIRECT_REF somewhere in\n-   it.  */\n+/* Return true if REF, an ARRAY_REF, has an INDIRECT_REF somewhere in it.  */\n \n static inline bool\n-ref_contains_indirect_ref (tree ref)\n+array_ref_contains_indirect_ref (tree ref)\n {\n-  while (handled_component_p (ref))\n-    {\n-      if (TREE_CODE (ref) == INDIRECT_REF)\n-\treturn true;\n-      ref = TREE_OPERAND (ref, 0);\n-    }\n-  return false;\n+  gcc_assert (TREE_CODE (ref) == ARRAY_REF);\n+\n+  do {\n+    ref = TREE_OPERAND (ref, 0);\n+  } while (handled_component_p (ref));\n+\n+  return TREE_CODE (ref) == INDIRECT_REF;\n }\n \n-/* Return true if REF, a COMPONENT_REF, has an ARRAY_REF somewhere in it.  */\n+/* Return true if REF, a handled component reference, has an ARRAY_REF\n+   somewhere in it.  */\n \n static inline bool\n ref_contains_array_ref (tree ref)\n {\n-  while (handled_component_p (ref))\n-    {\n-      if (TREE_CODE (ref) == ARRAY_REF)\n-\treturn true;\n-      ref = TREE_OPERAND (ref, 0);\n-    }\n+  gcc_assert (handled_component_p (ref));\n+\n+  do {\n+    if (TREE_CODE (ref) == ARRAY_REF)\n+      return true;\n+    ref = TREE_OPERAND (ref, 0);\n+  } while (handled_component_p (ref));\n+\n   return false;\n }\n "}, {"sha": "389ec8f94d0d435fa6432c558686f3ba952b00ca", "filename": "gcc/tree-flow.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d66aecaffd36ef82905a4b225ac5e0932231c9d/gcc%2Ftree-flow.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d66aecaffd36ef82905a4b225ac5e0932231c9d/gcc%2Ftree-flow.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-flow.h?ref=8d66aecaffd36ef82905a4b225ac5e0932231c9d", "patch": "@@ -614,7 +614,7 @@ extern void count_uses_and_derefs (tree, tree, unsigned *, unsigned *, bool *);\n static inline subvar_t get_subvars_for_var (tree);\n static inline tree get_subvar_at (tree, unsigned HOST_WIDE_INT);\n static inline bool ref_contains_array_ref (tree);\n-static inline bool ref_contains_indirect_ref (tree);\n+static inline bool array_ref_contains_indirect_ref (tree);\n extern tree okay_component_ref_for_subvars (tree, unsigned HOST_WIDE_INT *,\n \t\t\t\t\t    unsigned HOST_WIDE_INT *);\n static inline bool var_can_have_subvars (tree);"}, {"sha": "796991bcf50156ae6f6082dab5f47d4ebdb8abf5", "filename": "gcc/tree-ssa-loop-niter.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d66aecaffd36ef82905a4b225ac5e0932231c9d/gcc%2Ftree-ssa-loop-niter.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d66aecaffd36ef82905a4b225ac5e0932231c9d/gcc%2Ftree-ssa-loop-niter.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-loop-niter.c?ref=8d66aecaffd36ef82905a4b225ac5e0932231c9d", "patch": "@@ -1438,11 +1438,11 @@ infer_loop_bounds_from_undefined (struct loop *loop)\n \t\t/* For each array access, analyze its access function\n \t\t   and record a bound on the loop iteration domain.  */\n \t\tif (TREE_CODE (op1) == ARRAY_REF \n-\t\t    && !ref_contains_indirect_ref (op1))\n+\t\t    && !array_ref_contains_indirect_ref (op1))\n \t\t  estimate_iters_using_array (stmt, op1);\n \n \t\tif (TREE_CODE (op0) == ARRAY_REF \n-\t\t    && !ref_contains_indirect_ref (op0))\n+\t\t    && !array_ref_contains_indirect_ref (op0))\n \t\t  estimate_iters_using_array (stmt, op0);\n \n \t\t/* For each signed type variable in LOOP, analyze its\n@@ -1494,7 +1494,7 @@ infer_loop_bounds_from_undefined (struct loop *loop)\n \t\tfor (args = TREE_OPERAND (stmt, 1); args;\n \t\t     args = TREE_CHAIN (args))\n \t\t  if (TREE_CODE (TREE_VALUE (args)) == ARRAY_REF\n-\t\t      && !ref_contains_indirect_ref (TREE_VALUE (args)))\n+\t\t      && !array_ref_contains_indirect_ref (TREE_VALUE (args)))\n \t\t    estimate_iters_using_array (stmt, TREE_VALUE (args));\n \n \t\tbreak;"}, {"sha": "aa912cb7bd0f94414c476cfdbe2a9732ce95f659", "filename": "gcc/tree-ssa-structalias.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d66aecaffd36ef82905a4b225ac5e0932231c9d/gcc%2Ftree-ssa-structalias.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d66aecaffd36ef82905a4b225ac5e0932231c9d/gcc%2Ftree-ssa-structalias.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-structalias.c?ref=8d66aecaffd36ef82905a4b225ac5e0932231c9d", "patch": "@@ -2865,7 +2865,6 @@ find_func_aliases (tree t, struct alias_info *ai)\n \t     containing pointers, dereferences, and call expressions.  */\n \t  if (POINTER_TYPE_P (TREE_TYPE (lhsop))\n \t      || AGGREGATE_TYPE_P (TREE_TYPE (lhsop))\n-\t      || ref_contains_indirect_ref (lhsop)\n \t      || TREE_CODE (rhsop) == CALL_EXPR)\n \t    {\n \t      lhs = get_constraint_for (lhsop, NULL);"}]}