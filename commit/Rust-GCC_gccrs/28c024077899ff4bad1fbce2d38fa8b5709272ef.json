{"sha": "28c024077899ff4bad1fbce2d38fa8b5709272ef", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjhjMDI0MDc3ODk5ZmY0YmFkMWZiY2UyZDM4ZmE4YjU3MDkyNzJlZg==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2017-03-30T07:15:39Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2017-03-30T07:15:39Z"}, "message": "re PR tree-optimization/77498 (Performance drop after r239414 on spec2000/172mgrid)\n\n2017-03-30  Richard Biener  <rguenther@suse.de>\n\n\tPR tree-optimization/77498\n\t* tree-ssa-pre.c (phi_translate_1): Do not allow simplifications\n\tto non-constants over backedges.\n\n\t* gfortran.dg/pr77498.f: New testcase.\n\nFrom-SVN: r246583", "tree": {"sha": "38df20abe28191bb91f3ec3d687054afe48af750", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/38df20abe28191bb91f3ec3d687054afe48af750"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/28c024077899ff4bad1fbce2d38fa8b5709272ef", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/28c024077899ff4bad1fbce2d38fa8b5709272ef", "html_url": "https://github.com/Rust-GCC/gccrs/commit/28c024077899ff4bad1fbce2d38fa8b5709272ef", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/28c024077899ff4bad1fbce2d38fa8b5709272ef/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "e0aa80e05e24176051ef644856dd25784344308a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e0aa80e05e24176051ef644856dd25784344308a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e0aa80e05e24176051ef644856dd25784344308a"}], "stats": {"total": 65, "additions": 61, "deletions": 4}, "files": [{"sha": "3333bfd146852e0cece9066459f02cdb35deccb7", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/28c024077899ff4bad1fbce2d38fa8b5709272ef/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/28c024077899ff4bad1fbce2d38fa8b5709272ef/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=28c024077899ff4bad1fbce2d38fa8b5709272ef", "patch": "@@ -1,3 +1,9 @@\n+2017-03-30  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/77498\n+\t* tree-ssa-pre.c (phi_translate_1): Do not allow simplifications\n+\tto non-constants over backedges.\n+\n 2017-03-29  Segher Boessenkool  <segher@kernel.crashing.org>\n \n \tPR rtl-optimization/80233"}, {"sha": "5d33ce78b67a1384d1cf97e218d7ee7f4110bcd0", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/28c024077899ff4bad1fbce2d38fa8b5709272ef/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/28c024077899ff4bad1fbce2d38fa8b5709272ef/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=28c024077899ff4bad1fbce2d38fa8b5709272ef", "patch": "@@ -1,3 +1,8 @@\n+2017-03-30  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/77498\n+\t* gfortran.dg/pr77498.f: New testcase.\n+\n 2017-03-29  Marek Polacek  <polacek@redhat.com>\n \n \tPR c/79730"}, {"sha": "f957b57bb0050f03c8762c69bfa6043c3975f742", "filename": "gcc/testsuite/gfortran.dg/pr77498.f", "status": "added", "additions": 36, "deletions": 0, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/28c024077899ff4bad1fbce2d38fa8b5709272ef/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr77498.f", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/28c024077899ff4bad1fbce2d38fa8b5709272ef/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr77498.f", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr77498.f?ref=28c024077899ff4bad1fbce2d38fa8b5709272ef", "patch": "@@ -0,0 +1,36 @@\n+! { dg-do compile }\n+! { dg-options \"-O2 -ffast-math -fdump-tree-pre\" }\n+\n+      subroutine foo(U,V,R,N,A)\n+      integer N\n+      real*8 U(N,N,N),V(N,N,N),R(N,N,N),A(0:3)\n+      integer I3, I2, I1\n+C\n+      do I3=2,N-1\n+       do I2=2,N-1\n+        do I1=2,N-1\n+         R(I1,I2,I3)=V(I1,I2,I3)\n+     *      -A(0)*( U(I1,  I2,  I3  ) )\n+     *      -A(1)*( U(I1-1,I2,  I3  ) + U(I1+1,I2,  I3  )\n+     *                 +  U(I1,  I2-1,I3  ) + U(I1,  I2+1,I3  )\n+     *                 +  U(I1,  I2,  I3-1) + U(I1,  I2,  I3+1) )\n+     *      -A(2)*( U(I1-1,I2-1,I3  ) + U(I1+1,I2-1,I3  )\n+     *                 +  U(I1-1,I2+1,I3  ) + U(I1+1,I2+1,I3  )\n+     *                 +  U(I1,  I2-1,I3-1) + U(I1,  I2+1,I3-1)\n+     *                 +  U(I1,  I2-1,I3+1) + U(I1,  I2+1,I3+1)\n+     *                 +  U(I1-1,I2,  I3-1) + U(I1-1,I2,  I3+1)\n+     *                 +  U(I1+1,I2,  I3-1) + U(I1+1,I2,  I3+1) )\n+     *      -A(3)*( U(I1-1,I2-1,I3-1) + U(I1+1,I2-1,I3-1)\n+     *                 +  U(I1-1,I2+1,I3-1) + U(I1+1,I2+1,I3-1)\n+     *                 +  U(I1-1,I2-1,I3+1) + U(I1+1,I2-1,I3+1)\n+     *                 +  U(I1-1,I2+1,I3+1) + U(I1+1,I2+1,I3+1) )\n+        enddo\n+       enddo\n+      enddo\n+      return\n+      end\n+\n+! PRE shouldn't do predictive commonings job here (and in a bad way)\n+! ???  It still does but not as bad as it could.  Less prephitmps\n+! would be better, pcom does it with 6.\n+! { dg-final { scan-tree-dump-times \"# prephitmp\" 9 \"pre\" } }"}, {"sha": "c6aa5879739aca73c2924beffd8f1a160e731d68", "filename": "gcc/tree-ssa-pre.c", "status": "modified", "additions": 14, "deletions": 4, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/28c024077899ff4bad1fbce2d38fa8b5709272ef/gcc%2Ftree-ssa-pre.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/28c024077899ff4bad1fbce2d38fa8b5709272ef/gcc%2Ftree-ssa-pre.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-pre.c?ref=28c024077899ff4bad1fbce2d38fa8b5709272ef", "patch": "@@ -1468,10 +1468,20 @@ phi_translate_1 (pre_expr expr, bitmap_set_t set1, bitmap_set_t set2,\n \t\t   leader for it.  */\n \t\tif (constant->kind != CONSTANT)\n \t\t  {\n-\t\t    unsigned value_id = get_expr_value_id (constant);\n-\t\t    constant = find_leader_in_sets (value_id, set1, set2);\n-\t\t    if (constant)\n-\t\t      return constant;\n+\t\t    /* Do not allow simplifications to non-constants over\n+\t\t       backedges as this will likely result in a loop PHI node\n+\t\t       to be inserted and increased register pressure.\n+\t\t       See PR77498 - this avoids doing predcoms work in\n+\t\t       a less efficient way.  */\n+\t\t    if (find_edge (pred, phiblock)->flags & EDGE_DFS_BACK)\n+\t\t      ;\n+\t\t    else\n+\t\t      {\n+\t\t\tunsigned value_id = get_expr_value_id (constant);\n+\t\t\tconstant = find_leader_in_sets (value_id, set1, set2);\n+\t\t\tif (constant)\n+\t\t\t  return constant;\n+\t\t      }\n \t\t  }\n \t\telse\n \t\t  return constant;"}]}