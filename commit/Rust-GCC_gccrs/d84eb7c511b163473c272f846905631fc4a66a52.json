{"sha": "d84eb7c511b163473c272f846905631fc4a66a52", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDg0ZWI3YzUxMWIxNjM0NzNjMjcyZjg0NjkwNTYzMWZjNGE2NmE1Mg==", "commit": {"author": {"name": "Bob Duff", "email": "duff@adacore.com", "date": "2020-03-16T19:22:25Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "derodat@adacore.com", "date": "2020-06-11T09:53:46Z"}, "message": "[Ada] Put_Image attribute\n\n2020-06-11  Bob Duff  <duff@adacore.com>\n\ngcc/ada/\n\n\t* exp_put_image.adb (Build_Elementary_Put_Image_Call): If the\n\tunderlying type is real, call Put_Image_Unknown.\n\t(Build_Unknown_Put_Image_Call): Pass the type name to\n\tPut_Image_Unknown.\n\t* libgnat/s-putima.ads, libgnat/s-putima.adb\n\t(Put_Image_Unknown): Add Type_Name parameter.  Remove\n\toverly-detailed documentation of what it does; better to leave\n\tit open.", "tree": {"sha": "ef26496bde4a19d9e606175bdab80d84688504d7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ef26496bde4a19d9e606175bdab80d84688504d7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d84eb7c511b163473c272f846905631fc4a66a52", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d84eb7c511b163473c272f846905631fc4a66a52", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d84eb7c511b163473c272f846905631fc4a66a52", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d84eb7c511b163473c272f846905631fc4a66a52/comments", "author": {"login": "bobduff", "id": 29099567, "node_id": "MDQ6VXNlcjI5MDk5NTY3", "avatar_url": "https://avatars.githubusercontent.com/u/29099567?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bobduff", "html_url": "https://github.com/bobduff", "followers_url": "https://api.github.com/users/bobduff/followers", "following_url": "https://api.github.com/users/bobduff/following{/other_user}", "gists_url": "https://api.github.com/users/bobduff/gists{/gist_id}", "starred_url": "https://api.github.com/users/bobduff/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bobduff/subscriptions", "organizations_url": "https://api.github.com/users/bobduff/orgs", "repos_url": "https://api.github.com/users/bobduff/repos", "events_url": "https://api.github.com/users/bobduff/events{/privacy}", "received_events_url": "https://api.github.com/users/bobduff/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pmderodat", "id": 758452, "node_id": "MDQ6VXNlcjc1ODQ1Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/758452?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pmderodat", "html_url": "https://github.com/pmderodat", "followers_url": "https://api.github.com/users/pmderodat/followers", "following_url": "https://api.github.com/users/pmderodat/following{/other_user}", "gists_url": "https://api.github.com/users/pmderodat/gists{/gist_id}", "starred_url": "https://api.github.com/users/pmderodat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pmderodat/subscriptions", "organizations_url": "https://api.github.com/users/pmderodat/orgs", "repos_url": "https://api.github.com/users/pmderodat/repos", "events_url": "https://api.github.com/users/pmderodat/events{/privacy}", "received_events_url": "https://api.github.com/users/pmderodat/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "428d49a5a8d3f39b14519ada0ab46c4193581684", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/428d49a5a8d3f39b14519ada0ab46c4193581684", "html_url": "https://github.com/Rust-GCC/gccrs/commit/428d49a5a8d3f39b14519ada0ab46c4193581684"}], "stats": {"total": 30, "additions": 22, "deletions": 8}, "files": [{"sha": "db7c65bf7fb944cbba49c7e6f6c75d861bfd830a", "filename": "gcc/ada/exp_put_image.adb", "status": "modified", "additions": 16, "deletions": 4, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d84eb7c511b163473c272f846905631fc4a66a52/gcc%2Fada%2Fexp_put_image.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d84eb7c511b163473c272f846905631fc4a66a52/gcc%2Fada%2Fexp_put_image.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_put_image.adb?ref=d84eb7c511b163473c272f846905631fc4a66a52", "patch": "@@ -27,6 +27,7 @@ with Atree;    use Atree;\n with Debug;    use Debug;\n with Einfo;    use Einfo;\n with Exp_Tss;  use Exp_Tss;\n+with Exp_Util;\n with Lib;      use Lib;\n with Namet;    use Namet;\n with Nlists;   use Nlists;\n@@ -340,26 +341,34 @@ package body Exp_Put_Image is\n          --\n          --  Note that this is putting a leading space for reals.\n \n+         --  ???Work around the fact that Put_Image doesn't work for private\n+         --  types whose full type is real.\n+\n+         if Is_Real_Type (U_Type) then\n+            return Build_Unknown_Put_Image_Call (N);\n+         end if;\n+\n          declare\n             Image : constant Node_Id :=\n               Make_Attribute_Reference (Loc,\n                 Prefix => New_Occurrence_Of (U_Type, Loc),\n                 Attribute_Name => Name_Wide_Wide_Image,\n                 Expressions => New_List (Relocate_Node (Item)));\n-         begin\n-            return\n+            Put_Call : constant Node_Id :=\n               Make_Procedure_Call_Statement (Loc,\n                 Name =>\n                   New_Occurrence_Of (RTE (RE_Put_Wide_Wide_String), Loc),\n                 Parameter_Associations => New_List\n                   (Relocate_Node (Sink), Image));\n+         begin\n+            return Put_Call;\n          end;\n       end if;\n \n       --  Unchecked-convert parameter to the required type (i.e. the type of\n       --  the corresponding parameter), and call the appropriate routine.\n       --  We could use a normal type conversion for scalars, but the\n-      --  \"unchecked\" is needed for access types.\n+      --  \"unchecked\" is needed for access and private types.\n \n       declare\n          Libent : constant Entity_Id := RTE (Lib_RE);\n@@ -800,7 +809,10 @@ package body Exp_Put_Image is\n         Make_Procedure_Call_Statement (Loc,\n           Name => New_Occurrence_Of (Libent, Loc),\n           Parameter_Associations => New_List (\n-            Relocate_Node (Sink)));\n+            Relocate_Node (Sink),\n+            Make_String_Literal (Loc,\n+              Exp_Util.Fully_Qualified_Name_String (\n+                Entity (Prefix (N)), Append_NUL => False))));\n    end Build_Unknown_Put_Image_Call;\n \n    ----------------------"}, {"sha": "50597b2422a1e1aaf004bb5481ec3060ca8aac7e", "filename": "gcc/ada/libgnat/s-putima.adb", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d84eb7c511b163473c272f846905631fc4a66a52/gcc%2Fada%2Flibgnat%2Fs-putima.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d84eb7c511b163473c272f846905631fc4a66a52/gcc%2Fada%2Flibgnat%2Fs-putima.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fs-putima.adb?ref=d84eb7c511b163473c272f846905631fc4a66a52", "patch": "@@ -212,9 +212,11 @@ package body System.Put_Images is\n       Put_7bit (S, ')');\n    end Record_After;\n \n-   procedure Put_Image_Unknown (S : in out Sink'Class) is\n+   procedure Put_Image_Unknown (S : in out Sink'Class; Type_Name : String) is\n    begin\n-      Put_UTF_8 (S, \"{unknown image}\");\n+      Put_UTF_8 (S, \"{\");\n+      Put_String (S, Type_Name);\n+      Put_UTF_8 (S, \" object}\");\n    end Put_Image_Unknown;\n \n end System.Put_Images;"}, {"sha": "0bedd3dace47cd7fbf6d8c7caf5a6a8618829a12", "filename": "gcc/ada/libgnat/s-putima.ads", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d84eb7c511b163473c272f846905631fc4a66a52/gcc%2Fada%2Flibgnat%2Fs-putima.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d84eb7c511b163473c272f846905631fc4a66a52/gcc%2Fada%2Flibgnat%2Fs-putima.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fs-putima.ads?ref=d84eb7c511b163473c272f846905631fc4a66a52", "patch": "@@ -86,8 +86,8 @@ package System.Put_Images is\n    procedure Record_Between (S : in out Sink'Class);\n    procedure Record_After (S : in out Sink'Class);\n \n-   procedure Put_Image_Unknown (S : in out Sink'Class);\n+   procedure Put_Image_Unknown (S : in out Sink'Class; Type_Name : String);\n    --  For Put_Image of types that don't have the attribute, such as type\n-   --  Sink. Prints a canned string.\n+   --  Sink.\n \n end System.Put_Images;"}]}