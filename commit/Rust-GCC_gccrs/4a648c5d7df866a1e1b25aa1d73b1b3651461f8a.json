{"sha": "4a648c5d7df866a1e1b25aa1d73b1b3651461f8a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGE2NDhjNWQ3ZGY4NjZhMWUxYjI1YWExZDczYjFiMzY1MTQ2MWY4YQ==", "commit": {"author": {"name": "Richard Guenther", "email": "rguenther@suse.de", "date": "2007-11-15T11:15:08Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2007-11-15T11:15:08Z"}, "message": "tree-ssa-alias.c (create_overlap_variables_for): Make sure to only create SFTs if we also create variable infos for PTA.\n\n2007-11-15  Richard Guenther  <rguenther@suse.de>\n\n\t* tree-ssa-alias.c (create_overlap_variables_for): Make sure\n\tto only create SFTs if we also create variable infos for PTA.\n\t* tree-ssa-structalias.c (set_uids_in_ptset): Add all overlapping\n\tSFTs.\n\nFrom-SVN: r130197", "tree": {"sha": "5df9a1aee16895e76cfd432e23a15621197d36a8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5df9a1aee16895e76cfd432e23a15621197d36a8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4a648c5d7df866a1e1b25aa1d73b1b3651461f8a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4a648c5d7df866a1e1b25aa1d73b1b3651461f8a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4a648c5d7df866a1e1b25aa1d73b1b3651461f8a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4a648c5d7df866a1e1b25aa1d73b1b3651461f8a/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "f83ca2512f522d26fd9282b0e803e1a0afeb935d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f83ca2512f522d26fd9282b0e803e1a0afeb935d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f83ca2512f522d26fd9282b0e803e1a0afeb935d"}], "stats": {"total": 29, "additions": 24, "deletions": 5}, "files": [{"sha": "c3aa6ec96b5d3418a8ef137752708e4d54d126f8", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4a648c5d7df866a1e1b25aa1d73b1b3651461f8a/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4a648c5d7df866a1e1b25aa1d73b1b3651461f8a/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=4a648c5d7df866a1e1b25aa1d73b1b3651461f8a", "patch": "@@ -1,3 +1,10 @@\n+2007-11-15  Richard Guenther  <rguenther@suse.de>\n+\n+\t* tree-ssa-alias.c (create_overlap_variables_for): Make sure\n+\tto only create SFTs if we also create variable infos for PTA.\n+\t* tree-ssa-structalias.c (set_uids_in_ptset): Add all overlapping\n+\tSFTs.\n+\n 2007-11-15  Richard Guenther  <rguenther@suse.de>\n \n \t* tree-ssa-structalias.c (set_uids_in_ptset): Use the pointed-to"}, {"sha": "43d5ab23ea749cd3a40606e99e2615023de0aaef", "filename": "gcc/tree-ssa-alias.c", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4a648c5d7df866a1e1b25aa1d73b1b3651461f8a/gcc%2Ftree-ssa-alias.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4a648c5d7df866a1e1b25aa1d73b1b3651461f8a/gcc%2Ftree-ssa-alias.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-alias.c?ref=4a648c5d7df866a1e1b25aa1d73b1b3651461f8a", "patch": "@@ -3834,7 +3834,10 @@ create_overlap_variables_for (tree var)\n \n   push_fields_onto_fieldstack (TREE_TYPE (var), &fieldstack, 0, NULL,\n \t\t\t       TREE_TYPE (var), 0);\n-  if (VEC_length (fieldoff_s, fieldstack) != 0)\n+  /* Make sure to not create SFTs for structs we won't generate variable\n+     infos for.  See tree-ssa-structalias.c:create_variable_info_for ().  */\n+  if (VEC_length (fieldoff_s, fieldstack) != 0\n+      && VEC_length (fieldoff_s, fieldstack) <= MAX_FIELDS_FOR_FIELD_SENSITIVE)\n     {\n       subvar_t *subvars;\n       fieldoff_s *fo;"}, {"sha": "90c1d47f2aba6d8916bdfc1f95848dcbb604cfe7", "filename": "gcc/tree-ssa-structalias.c", "status": "modified", "additions": 13, "deletions": 4, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4a648c5d7df866a1e1b25aa1d73b1b3651461f8a/gcc%2Ftree-ssa-structalias.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4a648c5d7df866a1e1b25aa1d73b1b3651461f8a/gcc%2Ftree-ssa-structalias.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-structalias.c?ref=4a648c5d7df866a1e1b25aa1d73b1b3651461f8a", "patch": "@@ -4749,15 +4749,24 @@ set_uids_in_ptset (tree ptr, bitmap into, bitmap from, bool is_derefed,\n \t       || TREE_CODE (vi->decl) == PARM_DECL\n \t       || TREE_CODE (vi->decl) == RESULT_DECL)\n \t{\n+\t  subvar_t sv;\n \t  if (var_can_have_subvars (vi->decl)\n-\t      && get_subvars_for_var (vi->decl))\n+\t      && (sv = get_subvars_for_var (vi->decl)))\n \t    {\n \t      /* If VI->DECL is an aggregate for which we created\n-\t\t SFTs, add the SFT corresponding to VI->OFFSET.  */\n-\t      tree sft = get_subvar_at (vi->decl, vi->offset);\n+\t\t SFTs, add the SFT corresponding to VI->OFFSET.\n+\t\t If we didn't do field-sensitive PTA we need to to\n+\t\t add all overlapping SFTs.  */\n+\t      unsigned int j;\n+\t      tree sft = get_first_overlapping_subvar (sv, vi->offset,\n+\t\t\t\t\t\t       vi->size, &j);\n \t      gcc_assert (sft);\n-\t      if (sft)\n+\t      for (; VEC_iterate (tree, sv, j, sft); ++j)\n \t\t{\n+\t\t  if (SFT_OFFSET (sft) > vi->offset\n+\t\t      && vi->size <= SFT_OFFSET (sft) - vi->offset)\n+\t\t    break;\n+\n \t\t  var_alias_set = get_alias_set (sft);\n \t\t  if (no_tbaa_pruning\n \t\t      || (!is_derefed && !vi->directly_dereferenced)"}]}