{"sha": "b5087b28b09c84c69fa5e80021be026f297cb31d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjUwODdiMjhiMDljODRjNjlmYTVlODAwMjFiZTAyNmYyOTdjYjMxZA==", "commit": {"author": {"name": "Hans-Peter Nilsson", "email": "hp@bitrange.com", "date": "2020-07-26T00:44:02Z"}, "committer": {"name": "Hans-Peter Nilsson", "email": "hp@bitrange.com", "date": "2020-07-26T00:44:02Z"}, "message": "gcc.dg/torture/pr59330.c: Disable for mmix\n\nWith the dejagnu status-wrapper, there's a reference to write in\neach executable, which for mmix in newlib has a reference to a\nvariable defined in open, which for mmix in newlib has a\nreference to sprintf (oops!) and the dependency-chain goes on;\nad finitum there's a reference to malloc, which in default\nnewlib is colocated with free; the same file\nnewlib/libc/stdlib/malloc.c.\n\nNot being compiled with -ffunction-sections, they're emitted in\nthe same section (.text) and thus inseparable: you can't\noverride just one of them as in this test, or else you'll get:\n\n<X>/pre/mmix/bin/ld: <X>/gccobj/mmix/./newlib/libc.a(lib_a-malloc.o): in function `free':\n<X>/gcc/newlib/libc/stdlib/malloc.c:169: multiple definition of `free'; /tmp/ccvRA0zb.o:(.text+0x0): first defined here\ncollect2: error: ld returned 1 exit status\ncompiler exited with status 1\nFAIL: gcc.dg/torture/pr59330.c   -O0  (test for excess errors)\n\nI'm using a dg-skip-if here instead of starting a hardly\nscalable dg-do target selector.  I'm not keying on\neffective-target unwrapped because the dependency-chain is\ntarget-specific rather than dejagnu status-wrapper-specific.\n\ngcc/testsuite:\n\t* gcc.dg/torture/pr59330.c: Disable for mmix.", "tree": {"sha": "db4b6dd13fbedfbe1e5078ee6d8e55a69c7b7bf4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/db4b6dd13fbedfbe1e5078ee6d8e55a69c7b7bf4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b5087b28b09c84c69fa5e80021be026f297cb31d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b5087b28b09c84c69fa5e80021be026f297cb31d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b5087b28b09c84c69fa5e80021be026f297cb31d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b5087b28b09c84c69fa5e80021be026f297cb31d/comments", "author": null, "committer": null, "parents": [{"sha": "ae2e0bc19b92ef167869dfe0c77246c46c1b5152", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ae2e0bc19b92ef167869dfe0c77246c46c1b5152", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ae2e0bc19b92ef167869dfe0c77246c46c1b5152"}], "stats": {"total": 1, "additions": 1, "deletions": 0}, "files": [{"sha": "536171e0f181971b659dc3d42a9351908578e158", "filename": "gcc/testsuite/gcc.dg/torture/pr59330.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b5087b28b09c84c69fa5e80021be026f297cb31d/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr59330.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b5087b28b09c84c69fa5e80021be026f297cb31d/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr59330.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr59330.c?ref=b5087b28b09c84c69fa5e80021be026f297cb31d", "patch": "@@ -1,4 +1,5 @@\n /* { dg-do run } */\n+/* { dg-skip-if \"free inseparable from malloc when wrapped\" { mmix-knuth-mmixware } } */\n \n void free(void *ptr)\n {"}]}