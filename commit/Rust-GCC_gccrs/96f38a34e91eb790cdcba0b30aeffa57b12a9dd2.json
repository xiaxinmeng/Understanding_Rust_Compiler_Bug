{"sha": "96f38a34e91eb790cdcba0b30aeffa57b12a9dd2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTZmMzhhMzRlOTFlYjc5MGNkY2JhMGIzMGFlZmZhNTdiMTJhOWRkMg==", "commit": {"author": {"name": "Richard Sandiford", "email": "rsandifo@nildram.co.uk", "date": "2007-10-05T08:34:01Z"}, "committer": {"name": "Richard Sandiford", "email": "rsandifo@gcc.gnu.org", "date": "2007-10-05T08:34:01Z"}, "message": "re PR target/33635 (Bootstrap broken on mips-sgi-irix6.5)\n\ngcc/\n\tPR target/33635\n\t* config/mips/mips.c (mips_register_move_cost): Rewrite to use\n\tsubset checks.  Make the cost of FPR -> FPR moves depend on\n\tmips_mode_ok_for_mov_fmt_p.\n\ngcc/testsuite/\n\tPR target/33635\n\t* gcc.target/mips/pr33635-1.c: New test.\n\nFrom-SVN: r129031", "tree": {"sha": "22e7bc9fa6eec1db31a72bdd1fb2cb9a588f6698", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/22e7bc9fa6eec1db31a72bdd1fb2cb9a588f6698"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/96f38a34e91eb790cdcba0b30aeffa57b12a9dd2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/96f38a34e91eb790cdcba0b30aeffa57b12a9dd2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/96f38a34e91eb790cdcba0b30aeffa57b12a9dd2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/96f38a34e91eb790cdcba0b30aeffa57b12a9dd2/comments", "author": null, "committer": null, "parents": [{"sha": "afd82ef5ab97b47cbb9413da64a8bf6929caf25a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/afd82ef5ab97b47cbb9413da64a8bf6929caf25a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/afd82ef5ab97b47cbb9413da64a8bf6929caf25a"}], "stats": {"total": 104, "additions": 57, "deletions": 47}, "files": [{"sha": "fba43b2cb0c29492c71bde3beb423f7cd7025efd", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/96f38a34e91eb790cdcba0b30aeffa57b12a9dd2/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/96f38a34e91eb790cdcba0b30aeffa57b12a9dd2/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=96f38a34e91eb790cdcba0b30aeffa57b12a9dd2", "patch": "@@ -1,3 +1,10 @@\n+2007-10-05  Richard Sandiford  <rsandifo@nildram.co.uk>\n+\n+\tPR target/33635\n+\t* config/mips/mips.c (mips_register_move_cost): Rewrite to use\n+\tsubset checks.  Make the cost of FPR -> FPR moves depend on\n+\tmips_mode_ok_for_mov_fmt_p.\n+\n 2007-10-04  Doug Kwan  <dougkwan@google.com>\n \n \t* gthr-posix.h (__gthread_cond_broadcast, __gthread_cond_wait,"}, {"sha": "889997d8c332222c1533e259cd875416f90e9898", "filename": "gcc/config/mips/mips.c", "status": "modified", "additions": 32, "deletions": 47, "changes": 79, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/96f38a34e91eb790cdcba0b30aeffa57b12a9dd2/gcc%2Fconfig%2Fmips%2Fmips.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/96f38a34e91eb790cdcba0b30aeffa57b12a9dd2/gcc%2Fconfig%2Fmips%2Fmips.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fmips.c?ref=96f38a34e91eb790cdcba0b30aeffa57b12a9dd2", "patch": "@@ -10969,69 +10969,54 @@ mips_init_libfuncs (void)\n    we need to use.  This gets pretty messy, but it is feasible.  */\n \n int\n-mips_register_move_cost (enum machine_mode mode ATTRIBUTE_UNUSED,\n+mips_register_move_cost (enum machine_mode mode,\n \t\t\t enum reg_class to, enum reg_class from)\n {\n-  if (from == M16_REGS && reg_class_subset_p (to, GENERAL_REGS))\n-    return 2;\n-  else if (from == M16_NA_REGS && reg_class_subset_p (to, GENERAL_REGS))\n-    return 2;\n-  else if (reg_class_subset_p (from, GENERAL_REGS))\n+  if (TARGET_MIPS16)\n     {\n-      if (to == M16_REGS)\n-\treturn 2;\n-      else if (to == M16_NA_REGS)\n-\treturn 2;\n-      else if (reg_class_subset_p (to, GENERAL_REGS))\n+      if (reg_class_subset_p (from, GENERAL_REGS)\n+\t  && reg_class_subset_p (to, GENERAL_REGS))\n \t{\n-\t  if (TARGET_MIPS16)\n-\t    return 4;\n-\t  else\n+\t  if (reg_class_subset_p (from, M16_REGS)\n+\t      || reg_class_subset_p (to, M16_REGS))\n \t    return 2;\n-\t}\n-      else if (to == FP_REGS)\n-\treturn 4;\n-      else if (reg_class_subset_p (to, ACC_REGS))\n-\t{\n-\t  if (TARGET_MIPS16)\n-\t    return 12;\n-\t  else\n-\t    return 6;\n-\t}\n-      else if (reg_class_subset_p (to, ALL_COP_REGS))\n-\t{\n-\t  return 5;\n+\t  /* Two MOVEs.  */\n+\t  return 4;\n \t}\n     }\n-  else if (from == FP_REGS)\n+  else if (reg_class_subset_p (from, GENERAL_REGS))\n     {\n       if (reg_class_subset_p (to, GENERAL_REGS))\n-\treturn 4;\n-      else if (to == FP_REGS)\n \treturn 2;\n-      else if (to == ST_REGS)\n-\treturn 8;\n+      if (reg_class_subset_p (to, FP_REGS))\n+\treturn 4;\n+      if (reg_class_subset_p (to, ALL_COP_AND_GR_REGS))\n+\treturn 5;\n+      if (reg_class_subset_p (to, ACC_REGS))\n+\treturn 6;\n     }\n-  else if (reg_class_subset_p (from, ACC_REGS))\n+  else if (reg_class_subset_p (to, GENERAL_REGS))\n     {\n-      if (reg_class_subset_p (to, GENERAL_REGS))\n-\t{\n-\t  if (TARGET_MIPS16)\n-\t    return 12;\n-\t  else\n-\t    return 6;\n-\t}\n+      if (reg_class_subset_p (from, FP_REGS))\n+\treturn 4;\n+      if (reg_class_subset_p (from, ST_REGS))\n+\t/* LUI followed by MOVF.  */\n+\treturn 4;\n+      if (reg_class_subset_p (from, ALL_COP_AND_GR_REGS))\n+\treturn 5;\n+      if (reg_class_subset_p (from, ACC_REGS))\n+\treturn 6;\n     }\n-  else if (from == ST_REGS && reg_class_subset_p (to, GENERAL_REGS))\n-    return 4;\n-  else if (reg_class_subset_p (from, ALL_COP_REGS))\n+  else if (reg_class_subset_p (from, FP_REGS))\n     {\n-      return 5;\n+      if (reg_class_subset_p (to, FP_REGS)\n+\t  && mips_mode_ok_for_mov_fmt_p (mode))\n+\treturn 4;\n+      if (reg_class_subset_p (to, ST_REGS))\n+\t/* An expensive sequence.  */\n+\treturn 8;\n     }\n \n-  /* Fall through.\n-     ??? What cases are these? Shouldn't we return 2 here?  */\n-\n   return 12;\n }\n "}, {"sha": "2252f679a027d45ab2467e8f7aef7e8da6a2f3f0", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/96f38a34e91eb790cdcba0b30aeffa57b12a9dd2/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/96f38a34e91eb790cdcba0b30aeffa57b12a9dd2/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=96f38a34e91eb790cdcba0b30aeffa57b12a9dd2", "patch": "@@ -1,3 +1,8 @@\n+2007-10-05  Richard Sandiford  <rsandifo@nildram.co.uk>\n+\n+\tPR target/33635\n+\t* gcc.target/mips/pr33635-1.c: New test.\n+\n 2007-10-04  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n \n \tPR libfortran/33253"}, {"sha": "44a804ef967bd12ffd2d3f2ba3faa241f37795b8", "filename": "gcc/testsuite/gcc.target/mips/pr33635-1.c", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/96f38a34e91eb790cdcba0b30aeffa57b12a9dd2/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fpr33635-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/96f38a34e91eb790cdcba0b30aeffa57b12a9dd2/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fpr33635-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fpr33635-1.c?ref=96f38a34e91eb790cdcba0b30aeffa57b12a9dd2", "patch": "@@ -0,0 +1,13 @@\n+/* { dg-mips-options \"-mabi=64 -O2\" } */\n+\n+long double __powitf2 (long double x, int m)\n+{\n+  long double y = x;\n+  while (m >>= 1)\n+    {\n+      x = x * x;\n+      if (m % 2)\n+        y = y * x;\n+    }\n+  return y;\n+}"}]}