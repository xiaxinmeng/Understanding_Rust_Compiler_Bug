{"sha": "a968c71490366bd7b72be57fd4daa4297bd024c9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTk2OGM3MTQ5MDM2NmJkN2I3MmJlNTdmZDRkYWE0Mjk3YmQwMjRjOQ==", "commit": {"author": {"name": "Tom Tromey", "email": "tromey@redhat.com", "date": "2007-01-31T17:38:55Z"}, "committer": {"name": "Tom Tromey", "email": "tromey@gcc.gnu.org", "date": "2007-01-31T17:38:55Z"}, "message": "configure, [...]: Rebuilt.\n\n\t* configure, Makefile.in: Rebuilt.\n\t* configure.ac (JAR): Check for -@ feature.\n\t* Makefile.am (libgcj-$(gcc_version).jar): Use find -prune.\n\nFrom-SVN: r121429", "tree": {"sha": "015dab5fb146548d9880e6e3a2a888e288f7a5c1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/015dab5fb146548d9880e6e3a2a888e288f7a5c1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a968c71490366bd7b72be57fd4daa4297bd024c9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a968c71490366bd7b72be57fd4daa4297bd024c9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a968c71490366bd7b72be57fd4daa4297bd024c9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a968c71490366bd7b72be57fd4daa4297bd024c9/comments", "author": null, "committer": null, "parents": [{"sha": "d1fc69e4a5bf5e21c141bb1b1b9302139d1a9f09", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d1fc69e4a5bf5e21c141bb1b1b9302139d1a9f09", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d1fc69e4a5bf5e21c141bb1b1b9302139d1a9f09"}], "stats": {"total": 40, "additions": 34, "deletions": 6}, "files": [{"sha": "40ce7ee333e63b2c5835f85bdfe5fb025f9cfeee", "filename": "libjava/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a968c71490366bd7b72be57fd4daa4297bd024c9/libjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a968c71490366bd7b72be57fd4daa4297bd024c9/libjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog?ref=a968c71490366bd7b72be57fd4daa4297bd024c9", "patch": "@@ -1,3 +1,9 @@\n+2007-01-31  Tom Tromey  <tromey@redhat.com>\n+\n+\t* configure, Makefile.in: Rebuilt.\n+\t* configure.ac (JAR): Check for -@ feature.\n+\t* Makefile.am (libgcj-$(gcc_version).jar): Use find -prune.\n+\n 2007-01-31  Tom Tromey  <tromey@redhat.com>\n \n \tPR libgcj/30606:"}, {"sha": "0b653a88259e0ec8605912abd001dcd04cd1bfd3", "filename": "libjava/Makefile.am", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a968c71490366bd7b72be57fd4daa4297bd024c9/libjava%2FMakefile.am", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a968c71490366bd7b72be57fd4daa4297bd024c9/libjava%2FMakefile.am", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FMakefile.am?ref=a968c71490366bd7b72be57fd4daa4297bd024c9", "patch": "@@ -333,8 +333,7 @@ libgcj-$(gcc_version).jar: classpath/lib/compile-classes\n ## Note that this now omits the property files.\n ## It doesn't matter since we don't use the jar at runtime.\n \there=`pwd`; cd $(srcdir)/classpath/lib; \\\n-\tfind gnu java javax org sun -name '*.class' -print | \\\n-\tfgrep -v .svn | \\\n+\tfind gnu java javax org sun -name .svn -prune -o -name '*.class' -print | \\\n \t$(JAR) -cfM@ $$here/libgcj-$(gcc_version).jar\n \n libgcj-tools-$(gcc_version).jar: classpath/tools/tools.zip"}, {"sha": "000543a3e38ded9b8f164f652faa9942ea95ee2c", "filename": "libjava/Makefile.in", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a968c71490366bd7b72be57fd4daa4297bd024c9/libjava%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a968c71490366bd7b72be57fd4daa4297bd024c9/libjava%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FMakefile.in?ref=a968c71490366bd7b72be57fd4daa4297bd024c9", "patch": "@@ -9902,8 +9902,7 @@ $(propertyo_files): %.lo: classpath/resource/%\n \n libgcj-$(gcc_version).jar: classpath/lib/compile-classes\n \there=`pwd`; cd $(srcdir)/classpath/lib; \\\n-\tfind gnu java javax org sun -name '*.class' -print | \\\n-\tfgrep -v .svn | \\\n+\tfind gnu java javax org sun -name .svn -prune -o -name '*.class' -print | \\\n \t$(JAR) -cfM@ $$here/libgcj-$(gcc_version).jar\n \n libgcj-tools-$(gcc_version).jar: classpath/tools/tools.zip"}, {"sha": "31c43db600fdfa569d507f67fd2cbb8ffe240ed4", "filename": "libjava/configure", "status": "modified", "additions": 14, "deletions": 2, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a968c71490366bd7b72be57fd4daa4297bd024c9/libjava%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a968c71490366bd7b72be57fd4daa4297bd024c9/libjava%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fconfigure?ref=a968c71490366bd7b72be57fd4daa4297bd024c9", "patch": "@@ -4198,6 +4198,18 @@ else\n echo \"${ECHO_T}no\" >&6\n fi\n \n+\n+# We need a jar that supports -@.  This is a GNU extension.\n+if test \"$JAR\" != no; then\n+   rm -f config-test.jar\n+   echo $srcdir/configure.ac | $JAR -cf@ config-test.jar\n+   if test -f config-test.jar; then\n+     rm -f config-test.jar\n+   else\n+     JAR=no\n+   fi\n+fi\n+\n # Prefer the jar we found, but fall back to our jar script.\n if test \"$JAR\" = no; then\n   if test \"$ZIP\" = no; then\n@@ -6012,7 +6024,7 @@ test x\"$pic_mode\" = xno && libtool_flags=\"$libtool_flags --prefer-non-pic\"\n case $host in\n *-*-irix6*)\n   # Find out which ABI we are using.\n-  echo '#line 6015 \"configure\"' > conftest.$ac_ext\n+  echo '#line 6027 \"configure\"' > conftest.$ac_ext\n   if { (eval echo \"$as_me:$LINENO: \\\"$ac_compile\\\"\") >&5\n   (eval $ac_compile) 2>&5\n   ac_status=$?\n@@ -7054,7 +7066,7 @@ if test \"${enable_sjlj_exceptions+set}\" = set; then\n   :\n else\n   cat > conftest.$ac_ext << EOF\n-#line 7057 \"configure\"\n+#line 7069 \"configure\"\n struct S { ~S(); };\n void bar();\n void foo()"}, {"sha": "ab637d4d42b0f8987d418cde909cb6099a51103a", "filename": "libjava/configure.ac", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a968c71490366bd7b72be57fd4daa4297bd024c9/libjava%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a968c71490366bd7b72be57fd4daa4297bd024c9/libjava%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fconfigure.ac?ref=a968c71490366bd7b72be57fd4daa4297bd024c9", "patch": "@@ -117,6 +117,18 @@ AC_PROG_AWK\n AC_CHECK_PROGS([JAR], [jar fastjar gjar], no)\n AC_PATH_PROG([ZIP], [zip], no)\n AC_PATH_PROG([UNZIP], [unzip], unzip)\n+\n+# We need a jar that supports -@.  This is a GNU extension.\n+if test \"$JAR\" != no; then\n+   rm -f config-test.jar\n+   echo $srcdir/configure.ac | $JAR -cf@ config-test.jar\n+   if test -f config-test.jar; then\n+     rm -f config-test.jar\n+   else\n+     JAR=no\n+   fi\n+fi\n+\n # Prefer the jar we found, but fall back to our jar script.\n if test \"$JAR\" = no; then\n   if test \"$ZIP\" = no; then"}]}