{"sha": "a96ca6001f1e6236b550e26c7459bfaa9deb57b0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTk2Y2E2MDAxZjFlNjIzNmI1NTBlMjZjNzQ1OWJmYWE5ZGViNTdiMA==", "commit": {"author": {"name": "Emmanuel Briot", "email": "briot@adacore.com", "date": "2011-08-03T08:28:47Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2011-08-03T08:28:47Z"}, "message": "gnatcmd.adb, [...] (Prj.Env.Initialize_Default_Project_Path, [...]): new subprograms\n\n2011-08-03  Emmanuel Briot  <briot@adacore.com>\n\n\t* gnatcmd.adb, make.adb, prj-part.adb, prj-part.ads, prj-makr.adb,\n\tclean.adb, prj-nmsc.adb, prj-pars.adb, prj-conf.adb, prj-env.adb,\n\tprj-env.ads (Prj.Env.Initialize_Default_Project_Path,\n\tPrj.Env.Initialize_Empty): new subprograms\n\t(Get_Env, Find_Project): remove parameter Target_Name.\n\nFrom-SVN: r177241", "tree": {"sha": "654521d54854aa7c811d76cf7c5e45e9e3571f66", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/654521d54854aa7c811d76cf7c5e45e9e3571f66"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a96ca6001f1e6236b550e26c7459bfaa9deb57b0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a96ca6001f1e6236b550e26c7459bfaa9deb57b0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a96ca6001f1e6236b550e26c7459bfaa9deb57b0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a96ca6001f1e6236b550e26c7459bfaa9deb57b0/comments", "author": {"login": "briot", "id": 42402, "node_id": "MDQ6VXNlcjQyNDAy", "avatar_url": "https://avatars.githubusercontent.com/u/42402?v=4", "gravatar_id": "", "url": "https://api.github.com/users/briot", "html_url": "https://github.com/briot", "followers_url": "https://api.github.com/users/briot/followers", "following_url": "https://api.github.com/users/briot/following{/other_user}", "gists_url": "https://api.github.com/users/briot/gists{/gist_id}", "starred_url": "https://api.github.com/users/briot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/briot/subscriptions", "organizations_url": "https://api.github.com/users/briot/orgs", "repos_url": "https://api.github.com/users/briot/repos", "events_url": "https://api.github.com/users/briot/events{/privacy}", "received_events_url": "https://api.github.com/users/briot/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "3e5828693d6ae3be5439c794720c65af494f3b13", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3e5828693d6ae3be5439c794720c65af494f3b13", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3e5828693d6ae3be5439c794720c65af494f3b13"}], "stats": {"total": 217, "additions": 139, "deletions": 78}, "files": [{"sha": "ebd1b037ab94a8ad249f004889a7c30d6eb93539", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a96ca6001f1e6236b550e26c7459bfaa9deb57b0/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a96ca6001f1e6236b550e26c7459bfaa9deb57b0/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=a96ca6001f1e6236b550e26c7459bfaa9deb57b0", "patch": "@@ -1,3 +1,11 @@\n+2011-08-03  Emmanuel Briot  <briot@adacore.com>\n+\n+\t* gnatcmd.adb, make.adb, prj-part.adb, prj-part.ads, prj-makr.adb,\n+\tclean.adb, prj-nmsc.adb, prj-pars.adb, prj-conf.adb, prj-env.adb,\n+\tprj-env.ads (Prj.Env.Initialize_Default_Project_Path,\n+\tPrj.Env.Initialize_Empty): new subprograms\n+\t(Get_Env, Find_Project): remove parameter Target_Name.\n+\n 2011-08-03  Gary Dismukes  <dismukes@adacore.com>\n \n \t* sem_ch3.adb (Build_Derived_Record_Type): Test the Derive_Subps formal"}, {"sha": "cb56697a58271287f150d4ecf7aad9194feef209", "filename": "gcc/ada/clean.adb", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a96ca6001f1e6236b550e26c7459bfaa9deb57b0/gcc%2Fada%2Fclean.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a96ca6001f1e6236b550e26c7459bfaa9deb57b0/gcc%2Fada%2Fclean.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fclean.adb?ref=a96ca6001f1e6236b550e26c7459bfaa9deb57b0", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 2003-2010, Free Software Foundation, Inc.         --\n+--          Copyright (C) 2003-2011, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -1400,6 +1400,9 @@ package body Clean is\n          --  Parse the project file. If there is an error, Main_Project\n          --  will still be No_Project.\n \n+         Prj.Env.Initialize_Default_Project_Path\n+            (Project_Node_Tree.Project_Path, Target_Name => \"\");\n+\n          Prj.Pars.Parse\n            (Project           => Main_Project,\n             In_Tree           => Project_Tree,"}, {"sha": "329f1b069e97ba8e3ff7c1326c91073eee407f88", "filename": "gcc/ada/gnatcmd.adb", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a96ca6001f1e6236b550e26c7459bfaa9deb57b0/gcc%2Fada%2Fgnatcmd.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a96ca6001f1e6236b550e26c7459bfaa9deb57b0/gcc%2Fada%2Fgnatcmd.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnatcmd.adb?ref=a96ca6001f1e6236b550e26c7459bfaa9deb57b0", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1996-2010, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1996-2011, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -1365,6 +1365,9 @@ begin\n    Snames.Initialize;\n \n    Project_Node_Tree := new Project_Node_Tree_Data;\n+   Prj.Env.Initialize_Default_Project_Path\n+      (Project_Node_Tree.Project_Path, Target_Name => \"\");\n+\n    Prj.Tree.Initialize (Project_Node_Tree);\n \n    Prj.Initialize (Project_Tree);"}, {"sha": "2de96c85b65c79abbdfb457af7224de006adaaf5", "filename": "gcc/ada/make.adb", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a96ca6001f1e6236b550e26c7459bfaa9deb57b0/gcc%2Fada%2Fmake.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a96ca6001f1e6236b550e26c7459bfaa9deb57b0/gcc%2Fada%2Fmake.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fmake.adb?ref=a96ca6001f1e6236b550e26c7459bfaa9deb57b0", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2010, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2011, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -6636,6 +6636,9 @@ package body Make is\n       --  the command line switches\n \n       Project_Node_Tree := new Project_Node_Tree_Data;\n+      Prj.Env.Initialize_Default_Project_Path\n+         (Project_Node_Tree.Project_Path, Target_Name => \"\");\n+\n       Prj.Tree.Initialize (Project_Node_Tree);\n \n       --  Override default initialization of Check_Object_Consistency since"}, {"sha": "da1d9287fa496a66d34b03b1adbbaefe6d8f7bd3", "filename": "gcc/ada/prj-conf.adb", "status": "modified", "additions": 7, "deletions": 5, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a96ca6001f1e6236b550e26c7459bfaa9deb57b0/gcc%2Fada%2Fprj-conf.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a96ca6001f1e6236b550e26c7459bfaa9deb57b0/gcc%2Fada%2Fprj-conf.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-conf.adb?ref=a96ca6001f1e6236b550e26c7459bfaa9deb57b0", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---            Copyright (C) 2006-2010, Free Software Foundation, Inc.       --\n+--            Copyright (C) 2006-2011, Free Software Foundation, Inc.       --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -1061,6 +1061,8 @@ package body Prj.Conf is\n       Config_Project_Node : Project_Node_Id := Empty_Node;\n \n    begin\n+      pragma Assert (Prj.Env.Is_Initialized (Project_Node_Tree.Project_Path));\n+\n       Free (Config_File_Path);\n       Config := No_Project;\n \n@@ -1121,8 +1123,7 @@ package body Prj.Conf is\n             Packages_To_Check      => Packages_To_Check,\n             Current_Directory      => Current_Directory,\n             Is_Config_File         => True,\n-            Flags                  => Flags,\n-            Target_Name            => Target_Name);\n+            Flags                  => Flags);\n       else\n          Config_Project_Node := Empty_Node;\n       end if;\n@@ -1198,6 +1199,8 @@ package body Prj.Conf is\n       On_Load_Config             : Config_File_Hook := null)\n    is\n    begin\n+      pragma Assert (Prj.Env.Is_Initialized (Project_Node_Tree.Project_Path));\n+\n       --  Parse the user project tree\n \n       Prj.Initialize (Project_Tree);\n@@ -1213,8 +1216,7 @@ package body Prj.Conf is\n          Packages_To_Check      => Packages_To_Check,\n          Current_Directory      => Current_Directory,\n          Is_Config_File         => False,\n-         Flags                  => Flags,\n-         Target_Name            => Target_Name);\n+         Flags                  => Flags);\n \n       if User_Project_Node = Empty_Node then\n          User_Project_Node := Empty_Node;"}, {"sha": "52f6236e04989c93082c144f7dbcfd6dfc84fa4b", "filename": "gcc/ada/prj-env.adb", "status": "modified", "additions": 33, "deletions": 26, "changes": 59, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a96ca6001f1e6236b550e26c7459bfaa9deb57b0/gcc%2Fada%2Fprj-env.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a96ca6001f1e6236b550e26c7459bfaa9deb57b0/gcc%2Fada%2Fprj-env.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-env.adb?ref=a96ca6001f1e6236b550e26c7459bfaa9deb57b0", "patch": "@@ -110,12 +110,6 @@ package body Prj.Env is\n    --  Return a project that is either Project or an extended ancestor of\n    --  Project that itself is not extended.\n \n-   procedure Initialize_Project_Path\n-     (Self        : in out Project_Search_Path;\n-      Target_Name : String);\n-   --  Initialize Current_Project_Path. Does nothing if the path has already\n-   --  been initialized properly.\n-\n    ----------------------\n    -- Ada_Include_Path --\n    ----------------------\n@@ -1782,13 +1776,33 @@ package body Prj.Env is\n       end if;\n    end Add_Directories;\n \n-   -----------------------------\n-   -- Initialize_Project_Path --\n-   -----------------------------\n+   --------------------\n+   -- Is_Initialized --\n+   --------------------\n+\n+   function Is_Initialized (Self : Project_Search_Path) return Boolean is\n+   begin\n+      return Self.Path /= null\n+        and then (Self.Path'Length = 0\n+                  or else Self.Path (Self.Path'First) /= '#');\n+   end Is_Initialized;\n+\n+   ----------------------\n+   -- Initialize_Empty --\n+   ----------------------\n \n-   procedure Initialize_Project_Path\n-     (Self        : in out Project_Search_Path;\n-      Target_Name : String)\n+   procedure Initialize_Empty (Self : in out Project_Search_Path) is\n+   begin\n+      Free (Self.Path);\n+      Self.Path := new String'(\"\");\n+   end Initialize_Empty;\n+\n+   -------------------------------------\n+   -- Initialize_Default_Project_Path --\n+   -------------------------------------\n+\n+   procedure Initialize_Default_Project_Path\n+     (Self : in out Project_Search_Path; Target_Name : String)\n    is\n       Add_Default_Dir : Boolean := True;\n       First           : Positive;\n@@ -1808,11 +1822,7 @@ package body Prj.Env is\n       --  May be empty.\n \n    begin\n-      --  If already initialized, nothing else to do\n-\n-      if Self.Path /= null\n-        and then Self.Path (Self.Path'First) /= '#'\n-      then\n+      if Is_Initialized (Self) then\n          return;\n       end if;\n \n@@ -1968,19 +1978,17 @@ package body Prj.Env is\n       if Self.Path = null then\n          Self.Path := new String'(Name_Buffer (1 .. Name_Len));\n       end if;\n-   end Initialize_Project_Path;\n+   end Initialize_Default_Project_Path;\n \n    --------------\n    -- Get_Path --\n    --------------\n \n    procedure Get_Path\n-     (Self        : in out Project_Search_Path;\n-      Path        : out String_Access;\n-      Target_Name : String := \"\")\n-   is\n+     (Self        : Project_Search_Path;\n+      Path        : out String_Access) is\n    begin\n-      Initialize_Project_Path (Self, Target_Name);\n+      pragma Assert (Is_Initialized (Self));\n       Path := Self.Path;\n    end Get_Path;\n \n@@ -2004,8 +2012,7 @@ package body Prj.Env is\n      (Self               : in out Project_Search_Path;\n       Project_File_Name  : String;\n       Directory          : String;\n-      Path               : out Namet.Path_Name_Type;\n-      Target_Name        : String)\n+      Path               : out Namet.Path_Name_Type)\n    is\n       File : constant String := Project_File_Name;\n       --  Have to do a copy, in case the parameter is Name_Buffer, which we\n@@ -2092,7 +2099,7 @@ package body Prj.Env is\n    --  Start of processing for Find_Project\n \n    begin\n-      Initialize_Project_Path (Self, Target_Name);\n+      pragma Assert (Is_Initialized (Self));\n \n       if Current_Verbosity = High then\n          Debug_Increase_Indent"}, {"sha": "aec975d859b38c1e16668938b11171a194a5e283", "filename": "gcc/ada/prj-env.ads", "status": "modified", "additions": 23, "deletions": 7, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a96ca6001f1e6236b550e26c7459bfaa9deb57b0/gcc%2Fada%2Fprj-env.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a96ca6001f1e6236b550e26c7459bfaa9deb57b0/gcc%2Fada%2Fprj-env.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-env.ads?ref=a96ca6001f1e6236b550e26c7459bfaa9deb57b0", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 2001-2010, Free Software Foundation, Inc.         --\n+--          Copyright (C) 2001-2011, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -162,6 +162,21 @@ package Prj.Env is\n    --  to search for projects on the path (and caches the results to improve\n    --  efficiency).\n \n+   procedure Initialize_Default_Project_Path\n+     (Self : in out Project_Search_Path; Target_Name : String);\n+   --  Initialize Self.\n+   --  It will then contain the default project path on the given target\n+   --  (including directories specified by the environment variables\n+   --  ADA_PROJECT_PATH and GPR_PROJECT_PATH).\n+   --  This does nothing if Self has already been initialized.\n+\n+   procedure Initialize_Empty (Self : in out Project_Search_Path);\n+   --  Initialize self with an empty list of directories.\n+   --  If Self had already been set, it is reset.\n+\n+   function Is_Initialized (Self : Project_Search_Path) return Boolean;\n+   --  Whether Self has been initialized\n+\n    procedure Free (Self : in out Project_Search_Path);\n    --  Free the memory used by Self\n \n@@ -177,13 +192,13 @@ package Prj.Env is\n    --  Find_Project below, or PATH will be added at the end of the search path.\n \n    procedure Get_Path\n-     (Self        : in out Project_Search_Path;\n-      Path        : out String_Access;\n-      Target_Name : String := \"\");\n+     (Self        : Project_Search_Path;\n+      Path        : out String_Access);\n    --  Return the current value of the project path, either the value set\n    --  during elaboration of the package or, if procedure Set_Project_Path has\n    --  been called, the value set by the last call to Set_Project_Path. The\n    --  returned value must not be modified.\n+   --  Self must have been initialized first.\n \n    procedure Set_Path\n      (Self : in out Project_Search_Path; Path : String);\n@@ -194,12 +209,13 @@ package Prj.Env is\n      (Self               : in out Project_Search_Path;\n       Project_File_Name  : String;\n       Directory          : String;\n-      Path               : out Namet.Path_Name_Type;\n-      Target_Name        : String);\n+      Path               : out Namet.Path_Name_Type);\n    --  Search for a project with the given name either in Directory (which\n    --  often will be the directory contain the project we are currently parsing\n    --  and which we found a reference to another project), or in the project\n-   --  path. Extra_Project_Path contains additional directories to search.\n+   --  path Self.\n+   --\n+   --  Self must have been initialized first.\n    --\n    --  Project_File_Name can optionally contain directories, and the extension\n    --  (.gpr) for the file name is optional."}, {"sha": "3e3210d71e9024080795e3e785ae256f45c85577", "filename": "gcc/ada/prj-makr.adb", "status": "modified", "additions": 5, "deletions": 3, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a96ca6001f1e6236b550e26c7459bfaa9deb57b0/gcc%2Fada%2Fprj-makr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a96ca6001f1e6236b550e26c7459bfaa9deb57b0/gcc%2Fada%2Fprj-makr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-makr.adb?ref=a96ca6001f1e6236b550e26c7459bfaa9deb57b0", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 2001-2010, Free Software Foundation, Inc.         --\n+--          Copyright (C) 2001-2011, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -29,6 +29,7 @@ with Output;\n with Osint;    use Osint;\n with Prj;      use Prj;\n with Prj.Com;\n+with Prj.Env;\n with Prj.Part;\n with Prj.PP;\n with Prj.Tree; use Prj.Tree;\n@@ -796,6 +797,8 @@ package body Prj.Makr is\n       Snames.Initialize;\n       Prj.Initialize (No_Project_Tree);\n       Prj.Tree.Initialize (Tree);\n+      Prj.Env.Initialize_Default_Project_Path\n+         (Tree.Project_Path, Target_Name => \"\");\n \n       Sources.Set_Last (0);\n       Source_Directories.Set_Last (0);\n@@ -865,8 +868,7 @@ package body Prj.Makr is\n                Is_Config_File         => False,\n                Flags                  => Flags,\n                Current_Directory      => Get_Current_Dir,\n-               Packages_To_Check      => Packages_To_Check_By_Gnatname,\n-               Target_Name            => \"\");\n+               Packages_To_Check      => Packages_To_Check_By_Gnatname);\n \n             --  Fail if parsing was not successful\n "}, {"sha": "c045ab261d634dafe0c88b5d820bb35e6031db7c", "filename": "gcc/ada/prj-nmsc.adb", "status": "modified", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a96ca6001f1e6236b550e26c7459bfaa9deb57b0/gcc%2Fada%2Fprj-nmsc.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a96ca6001f1e6236b550e26c7459bfaa9deb57b0/gcc%2Fada%2Fprj-nmsc.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-nmsc.adb?ref=a96ca6001f1e6236b550e26c7459bfaa9deb57b0", "patch": "@@ -28,6 +28,7 @@ with Opt;      use Opt;\n with Osint;    use Osint;\n with Output;   use Output;\n with Prj.Com;\n+with Prj.Env;  use Prj.Env;\n with Prj.Err;  use Prj.Err;\n with Prj.Util; use Prj.Util;\n with Sinput.P;\n@@ -936,6 +937,8 @@ package body Prj.Nmsc is\n                            Project.Decl.Attributes,\n                            Data.Tree);\n \n+      Project_Path_For_Aggregate : Prj.Env.Project_Search_Path;\n+\n       procedure Found_Project_File (Path : Path_Information; Rank : Natural);\n       --  Called for each project file aggregated by Project\n \n@@ -951,9 +954,23 @@ package body Prj.Nmsc is\n \n       procedure Found_Project_File (Path : Path_Information; Rank : Natural) is\n          pragma Unreferenced (Rank);\n+         Full_Path : Path_Name_Type;\n       begin\n          Debug_Output (\"Aggregates: \", Name_Id (Path.Display_Name));\n \n+         --  For usual \"with\" statement, this phase will have been done when\n+         --  parsing the project itself. However, for aggregate projects, we\n+         --  can only do this when processing the aggregate project, since the\n+         --  exact list of project files or project directories can depend on\n+         --  scenario variables.\n+         --\n+         --  ??? We might already have loaded the project\n+\n+         Prj.Env.Find_Project\n+           (Self              => Project_Path_For_Aggregate,\n+            Project_File_Name => Get_Name_String (Path.Name),\n+            Directory         => Get_Name_String (Project.Path.Name),\n+            Path              => Full_Path);\n       end Found_Project_File;\n \n    --  Start of processing for Check_Aggregate_Project\n@@ -968,6 +985,8 @@ package body Prj.Nmsc is\n          return;\n       end if;\n \n+      Initialize_Empty (Project_Path_For_Aggregate);\n+\n       --  Look for aggregated projects. For similarity with source files and\n       --  dirs, the aggregated project files are not searched for on the\n       --  project path, and are only found through the path specified in\n@@ -980,6 +999,8 @@ package body Prj.Nmsc is\n          Ignore        => Nil_String,\n          Search_For    => Search_Files,\n          Resolve_Links => Opt.Follow_Links_For_Files);\n+\n+      Free (Project_Path_For_Aggregate);\n    end Check_Aggregate_Project;\n \n    ----------------------------"}, {"sha": "4811fc6c87fa09bcd8694acfef9712a5cd8c0d9e", "filename": "gcc/ada/prj-pars.adb", "status": "modified", "additions": 5, "deletions": 3, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a96ca6001f1e6236b550e26c7459bfaa9deb57b0/gcc%2Fada%2Fprj-pars.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a96ca6001f1e6236b550e26c7459bfaa9deb57b0/gcc%2Fada%2Fprj-pars.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-pars.adb?ref=a96ca6001f1e6236b550e26c7459bfaa9deb57b0", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 2001-2010, Free Software Foundation, Inc.         --\n+--          Copyright (C) 2001-2011, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -28,6 +28,7 @@ with GNAT.Directory_Operations; use GNAT.Directory_Operations;\n \n with Output;   use Output;\n with Prj.Conf; use Prj.Conf;\n+with Prj.Env;\n with Prj.Err;  use Prj.Err;\n with Prj.Part;\n with Prj.Tree; use Prj.Tree;\n@@ -60,6 +61,8 @@ package body Prj.Pars is\n       if Project_Node_Tree = null then\n          Project_Node_Tree := new Project_Node_Tree_Data;\n          Prj.Tree.Initialize (Project_Node_Tree);\n+         Prj.Env.Initialize_Default_Project_Path\n+            (Project_Node_Tree.Project_Path, Target_Name => \"\");\n       end if;\n \n       --  Parse the main project file into a tree\n@@ -73,8 +76,7 @@ package body Prj.Pars is\n          Packages_To_Check      => Packages_To_Check,\n          Current_Directory      => Current_Dir,\n          Flags                  => Flags,\n-         Is_Config_File         => False,\n-         Target_Name            => \"\");\n+         Is_Config_File         => False);\n \n       --  If there were no error, process the tree\n "}, {"sha": "5167da4a3f04e3d0805b702415f7fa666170a9fa", "filename": "gcc/ada/prj-part.adb", "status": "modified", "additions": 19, "deletions": 29, "changes": 48, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a96ca6001f1e6236b550e26c7459bfaa9deb57b0/gcc%2Fada%2Fprj-part.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a96ca6001f1e6236b550e26c7459bfaa9deb57b0/gcc%2Fada%2Fprj-part.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-part.adb?ref=a96ca6001f1e6236b550e26c7459bfaa9deb57b0", "patch": "@@ -185,8 +185,7 @@ package body Prj.Part is\n       Depth             : Natural;\n       Current_Dir       : String;\n       Is_Config_File    : Boolean;\n-      Flags             : Processing_Flags;\n-      Target_Name       : String);\n+      Flags             : Processing_Flags);\n    --  Parse a project file. This is a recursive procedure: it calls itself for\n    --  imported and extended projects. When From_Extended is not None, if the\n    --  project has already been parsed and is an extended project A, return the\n@@ -221,8 +220,7 @@ package body Prj.Part is\n       Depth             : Natural;\n       Current_Dir       : String;\n       Is_Config_File    : Boolean;\n-      Flags             : Processing_Flags;\n-      Target_Name       : String);\n+      Flags             : Processing_Flags);\n    --  Parse the imported projects that have been stored in table Withs, if\n    --  any. From_Extended is used for the call to Parse_Single_Project below.\n    --  When In_Limited is True, the importing path includes at least one\n@@ -451,7 +449,7 @@ package body Prj.Part is\n       Current_Directory      : String := \"\";\n       Is_Config_File         : Boolean;\n       Flags                  : Processing_Flags;\n-      Target_Name            : String)\n+      Target_Name            : String := \"\")\n    is\n       Dummy : Boolean;\n       pragma Warnings (Off, Dummy);\n@@ -462,6 +460,11 @@ package body Prj.Part is\n       Path_Name_Id : Path_Name_Type;\n \n    begin\n+      if not Is_Initialized (In_Tree.Project_Path) then\n+         Prj.Env.Initialize_Default_Project_Path\n+           (In_Tree.Project_Path, Target_Name);\n+      end if;\n+\n       if Real_Project_File_Name = null then\n          Real_Project_File_Name := new String'(Project_File_Name);\n       end if;\n@@ -471,8 +474,7 @@ package body Prj.Part is\n       Find_Project (In_Tree.Project_Path,\n                     Project_File_Name => Real_Project_File_Name.all,\n                     Directory         => Current_Directory,\n-                    Path              => Path_Name_Id,\n-                    Target_Name       => Target_Name);\n+                    Path              => Path_Name_Id);\n       Free (Real_Project_File_Name);\n \n       Prj.Err.Initialize;\n@@ -483,10 +485,7 @@ package body Prj.Part is\n          declare\n             P : String_Access;\n          begin\n-            Get_Path\n-              (In_Tree.Project_Path,\n-               Path        => P,\n-               Target_Name => Target_Name);\n+            Get_Path (In_Tree.Project_Path, Path => P);\n \n             Prj.Com.Fail\n               (\"project file \"\"\"\n@@ -513,8 +512,7 @@ package body Prj.Part is\n             Depth             => 0,\n             Current_Dir       => Current_Directory,\n             Is_Config_File    => Is_Config_File,\n-            Flags             => Flags,\n-            Target_Name       => Target_Name);\n+            Flags             => Flags);\n \n       exception\n          when Types.Unrecoverable_Error =>\n@@ -745,8 +743,7 @@ package body Prj.Part is\n       Depth             : Natural;\n       Current_Dir       : String;\n       Is_Config_File    : Boolean;\n-      Flags             : Processing_Flags;\n-      Target_Name       : String)\n+      Flags             : Processing_Flags)\n    is\n       Current_With_Clause : With_Id := Context_Clause;\n \n@@ -782,8 +779,7 @@ package body Prj.Part is\n               (In_Tree.Project_Path,\n                Project_File_Name => Get_Name_String (Current_With.Path),\n                Directory         => Project_Directory_Path,\n-               Path              => Imported_Path_Name_Id,\n-               Target_Name       => Target_Name);\n+               Path              => Imported_Path_Name_Id);\n \n             if Imported_Path_Name_Id = No_Path then\n \n@@ -887,8 +883,7 @@ package body Prj.Part is\n                         Depth             => Depth,\n                         Current_Dir       => Current_Dir,\n                         Is_Config_File    => Is_Config_File,\n-                        Flags             => Flags,\n-                        Target_Name       => Target_Name);\n+                        Flags             => Flags);\n \n                   else\n                      Extends_All := Is_Extending_All (Withed_Project, In_Tree);\n@@ -1131,8 +1126,7 @@ package body Prj.Part is\n       Depth             : Natural;\n       Current_Dir       : String;\n       Is_Config_File    : Boolean;\n-      Flags             : Processing_Flags;\n-      Target_Name       : String)\n+      Flags             : Processing_Flags)\n    is\n       Path_Name : constant String := Get_Name_String (Path_Name_Id);\n \n@@ -1495,8 +1489,7 @@ package body Prj.Part is\n                Depth             => Depth + 1,\n                Current_Dir       => Current_Dir,\n                Is_Config_File    => Is_Config_File,\n-               Flags             => Flags,\n-               Target_Name       => Target_Name);\n+               Flags             => Flags);\n             Set_First_With_Clause_Of (Project, In_Tree, Imported_Projects);\n          end;\n \n@@ -1557,8 +1550,7 @@ package body Prj.Part is\n                  (In_Tree.Project_Path,\n                   Project_File_Name => Original_Path_Name,\n                   Directory         => Get_Name_String (Project_Directory),\n-                  Path              => Extended_Project_Path_Name_Id,\n-                  Target_Name       => Target_Name);\n+                  Path              => Extended_Project_Path_Name_Id);\n \n                if Extended_Project_Path_Name_Id = No_Path then\n \n@@ -1605,8 +1597,7 @@ package body Prj.Part is\n                         Depth             => Depth + 1,\n                         Current_Dir       => Current_Dir,\n                         Is_Config_File    => Is_Config_File,\n-                        Flags             => Flags,\n-                        Target_Name       => Target_Name);\n+                        Flags             => Flags);\n                   end;\n \n                   if Present (Extended_Project) then\n@@ -1856,8 +1847,7 @@ package body Prj.Part is\n             Depth             => Depth + 1,\n             Current_Dir       => Current_Dir,\n             Is_Config_File    => Is_Config_File,\n-            Flags             => Flags,\n-            Target_Name       => Target_Name);\n+            Flags             => Flags);\n          Set_First_With_Clause_Of (Project, In_Tree, Imported_Projects);\n       end;\n "}, {"sha": "7f8be2147e88ad13a435ddce598f5c3b1179e9fa", "filename": "gcc/ada/prj-part.ads", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a96ca6001f1e6236b550e26c7459bfaa9deb57b0/gcc%2Fada%2Fprj-part.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a96ca6001f1e6236b550e26c7459bfaa9deb57b0/gcc%2Fada%2Fprj-part.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-part.ads?ref=a96ca6001f1e6236b550e26c7459bfaa9deb57b0", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 2000-2010, Free Software Foundation, Inc.         --\n+--          Copyright (C) 2000-2011, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -39,7 +39,7 @@ package Prj.Part is\n       Current_Directory      : String := \"\";\n       Is_Config_File         : Boolean;\n       Flags                  : Processing_Flags;\n-      Target_Name            : String);\n+      Target_Name            : String := \"\");\n    --  Parse project file and all its imported project files and create a tree.\n    --  Return the node for the project (or Empty_Node if parsing failed). If\n    --  Always_Errout_Finalize is True, Errout.Finalize is called in all cases,\n@@ -54,5 +54,9 @@ package Prj.Part is\n    --\n    --  Is_Config_File should be set to True if the project represents a config\n    --  file (.cgpr) since some specific checks apply.\n+   --\n+   --  Target_Name will be used to initialize the default project path, unless\n+   --  In_Tree.Project_Path has already been initialized (which is the\n+   --  recommended use).\n \n end Prj.Part;"}]}