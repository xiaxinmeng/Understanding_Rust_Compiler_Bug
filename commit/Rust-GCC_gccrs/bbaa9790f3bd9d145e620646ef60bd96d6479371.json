{"sha": "bbaa9790f3bd9d145e620646ef60bd96d6479371", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmJhYTk3OTBmM2JkOWQxNDVlNjIwNjQ2ZWY2MGJkOTZkNjQ3OTM3MQ==", "commit": {"author": {"name": "Alan Modra", "email": "amodra@bigpond.net.au", "date": "2002-03-23T11:57:29Z"}, "committer": {"name": "Alan Modra", "email": "amodra@gcc.gnu.org", "date": "2002-03-23T11:57:29Z"}, "message": "* real.h (N): Special case 128 bit doubles.\n\nFrom-SVN: r51229", "tree": {"sha": "50c5de03fbc7ab65b2dc378b52128fa7451c08a6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/50c5de03fbc7ab65b2dc378b52128fa7451c08a6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/bbaa9790f3bd9d145e620646ef60bd96d6479371", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bbaa9790f3bd9d145e620646ef60bd96d6479371", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bbaa9790f3bd9d145e620646ef60bd96d6479371", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bbaa9790f3bd9d145e620646ef60bd96d6479371/comments", "author": null, "committer": null, "parents": [{"sha": "ad42149cb159bd56008d8ea54974876a963e4be3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ad42149cb159bd56008d8ea54974876a963e4be3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ad42149cb159bd56008d8ea54974876a963e4be3"}], "stats": {"total": 7, "additions": 7, "deletions": 0}, "files": [{"sha": "21bc263f7db4e170ba01c99202519e624fac8dbb", "filename": "gcc/ChangeLog", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bbaa9790f3bd9d145e620646ef60bd96d6479371/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bbaa9790f3bd9d145e620646ef60bd96d6479371/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=bbaa9790f3bd9d145e620646ef60bd96d6479371", "patch": "@@ -1,5 +1,7 @@\n 2002-03-23  Alan Modra  <amodra@bigpond.net.au>\n \n+\t* real.h (N): Special case 128 bit doubles.\n+\n \t* combine.c (simplify_comparison): When widening modes, ignore\n \tsign extension on CONST_INTs.\n "}, {"sha": "5683bbca4f111b1c90c0aa1cdecee3c4dcada8a5", "filename": "gcc/real.h", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bbaa9790f3bd9d145e620646ef60bd96d6479371/gcc%2Freal.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bbaa9790f3bd9d145e620646ef60bd96d6479371/gcc%2Freal.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Freal.h?ref=bbaa9790f3bd9d145e620646ef60bd96d6479371", "patch": "@@ -77,7 +77,12 @@ Software Foundation, 59 Temple Place - Suite 330, Boston, MA\n \n /* REAL_VALUE_TYPE is an array of the minimum number of HOST_WIDE_INTs\n    required to hold MAX_LONG_DOUBLE_TYPE_SIZE bits.  */\n+#if MAX_LONG_DOUBLE_TYPE_SIZE == 128\n+/* For 128 bit reals, we calculate internally with extra precision.  */\n+#define N (160 / BITS_PER_UNIT)\n+#else\n #define N (MAX_LONG_DOUBLE_TYPE_SIZE / BITS_PER_UNIT)\n+#endif\n #define S sizeof (HOST_WIDE_INT)\n typedef struct {\n   HOST_WIDE_INT r[N/S + (N%S ? 1 : 0)]; /* round up */"}]}