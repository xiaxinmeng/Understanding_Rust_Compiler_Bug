{"sha": "3a9abd2302fd87b38ed5a02a998560a5a58c9255", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2E5YWJkMjMwMmZkODdiMzhlZDVhMDJhOTk4NTYwYTVhNThjOTI1NQ==", "commit": {"author": {"name": "Andrew Burgess", "email": "andrew.burgess@embecosm.com", "date": "2017-02-09T00:35:20Z"}, "committer": {"name": "Andrew Burgess", "email": "aburgess@gcc.gnu.org", "date": "2017-02-09T00:35:20Z"}, "message": "arc/gcc: Better creation of __NPS400__ define\n\nThe __NPS400__ define is currently created in CPP_SPEC unlike the other\ntarget defines, which are created in arc-c.def.  Further, the current\n__NPS400__ define is (currently) only created when -mcpu=nps400 is\npassed, which is fine, except that if GCC is configured using\n--with-cpu=nps400 then the -mcpu option is not required and the\n__NPS400__ define will not be created.\n\nThis commit moves the __NPS400__ define into arc-c.def inline with all\nof the other target defines, and removes the code in CPP_SPEC that used\nto create the define.\n\nIn order to support the creation of the define in arc-c.def, a new\nTARGET_NPS400 macro is created in arc.h.\n\ngcc/ChangeLog:\n\n\t* config/arc/arc-c.def: Add __NPS400__ definition.\n\t* config/arc/arc.h (CPP_SPEC): Don't define __NPS400__ here.\n\t(TARGET_NPS400): Define.\n\nFrom-SVN: r245294", "tree": {"sha": "bf34be77ceeca7a3b6a0a35183eb8197c2d7e0cc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/bf34be77ceeca7a3b6a0a35183eb8197c2d7e0cc"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3a9abd2302fd87b38ed5a02a998560a5a58c9255", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3a9abd2302fd87b38ed5a02a998560a5a58c9255", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3a9abd2302fd87b38ed5a02a998560a5a58c9255", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3a9abd2302fd87b38ed5a02a998560a5a58c9255/comments", "author": {"login": "T-J-Teru", "id": 475372, "node_id": "MDQ6VXNlcjQ3NTM3Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/475372?v=4", "gravatar_id": "", "url": "https://api.github.com/users/T-J-Teru", "html_url": "https://github.com/T-J-Teru", "followers_url": "https://api.github.com/users/T-J-Teru/followers", "following_url": "https://api.github.com/users/T-J-Teru/following{/other_user}", "gists_url": "https://api.github.com/users/T-J-Teru/gists{/gist_id}", "starred_url": "https://api.github.com/users/T-J-Teru/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/T-J-Teru/subscriptions", "organizations_url": "https://api.github.com/users/T-J-Teru/orgs", "repos_url": "https://api.github.com/users/T-J-Teru/repos", "events_url": "https://api.github.com/users/T-J-Teru/events{/privacy}", "received_events_url": "https://api.github.com/users/T-J-Teru/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "c3bde35a56de3692c3b61caa0340dc80ee5abfcc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c3bde35a56de3692c3b61caa0340dc80ee5abfcc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c3bde35a56de3692c3b61caa0340dc80ee5abfcc"}], "stats": {"total": 16, "additions": 14, "deletions": 2}, "files": [{"sha": "8865d74544093d77617403fb909857c1a423402c", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3a9abd2302fd87b38ed5a02a998560a5a58c9255/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3a9abd2302fd87b38ed5a02a998560a5a58c9255/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=3a9abd2302fd87b38ed5a02a998560a5a58c9255", "patch": "@@ -1,3 +1,9 @@\n+2017-02-09  Andrew Burgess  <andrew.burgess@embecosm.com>\n+\n+\t* config/arc/arc-c.def: Add __NPS400__ definition.\n+\t* config/arc/arc.h (CPP_SPEC): Don't define __NPS400__ here.\n+\t(TARGET_NPS400): Define.\n+\n 2017-02-09  Andrew Burgess  <andrew.burgess@embecosm.com>\n \n \t* config/arc/arc-arch.h (arc_arch_t): Move unchanged to earlier in"}, {"sha": "8c5097ea6ced1ac6aeb806511d15c2a99e17e132", "filename": "gcc/config/arc/arc-c.def", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3a9abd2302fd87b38ed5a02a998560a5a58c9255/gcc%2Fconfig%2Farc%2Farc-c.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3a9abd2302fd87b38ed5a02a998560a5a58c9255/gcc%2Fconfig%2Farc%2Farc-c.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farc%2Farc-c.def?ref=3a9abd2302fd87b38ed5a02a998560a5a58c9255", "patch": "@@ -20,6 +20,7 @@\n ARC_C_DEF (\"__ARC600__\",\tTARGET_ARC600)\n ARC_C_DEF (\"__ARC601__\",\tTARGET_ARC601)\n ARC_C_DEF (\"__ARC700__\",\tTARGET_ARC700)\n+ARC_C_DEF (\"__NPS400__\",\tTARGET_NPS400)\n ARC_C_DEF (\"__ARCEM__\",\t\tTARGET_EM)\n ARC_C_DEF (\"__ARCHS__\",\t\tTARGET_HS)\n ARC_C_DEF (\"__ARC_ATOMIC__\",\tTARGET_ATOMIC)"}, {"sha": "1341537101384d3a1d1a5fb8deb6ece5b071559f", "filename": "gcc/config/arc/arc.h", "status": "modified", "additions": 7, "deletions": 2, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3a9abd2302fd87b38ed5a02a998560a5a58c9255/gcc%2Fconfig%2Farc%2Farc.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3a9abd2302fd87b38ed5a02a998560a5a58c9255/gcc%2Fconfig%2Farc%2Farc.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farc%2Farc.h?ref=3a9abd2302fd87b38ed5a02a998560a5a58c9255", "patch": "@@ -92,8 +92,7 @@ along with GCC; see the file COPYING3.  If not see\n %{mmac-d16:-D__Xxmac_d16} %{mmac-24:-D__Xxmac_24} \\\n %{mdsp-packa:-D__Xdsp_packa} %{mcrc:-D__Xcrc} %{mdvbf:-D__Xdvbf} \\\n %{mtelephony:-D__Xtelephony} %{mxy:-D__Xxy} %{mmul64: -D__Xmult32} \\\n-%{mlock:-D__Xlock} %{mswape:-D__Xswape} %{mrtsc:-D__Xrtsc} \\\n-%{mcpu=nps400:-D__NPS400__}\"\n+%{mlock:-D__Xlock} %{mswape:-D__Xswape} %{mrtsc:-D__Xrtsc}\"\n \n #define CC1_SPEC \"\\\n %{EB:%{EL:%emay not use both -EB and -EL}} \\\n@@ -223,6 +222,12 @@ extern const char *arc_cpu_to_as (int argc, const char **argv);\n \t\t       && (!TARGET_BARREL_SHIFTER))\n #define TARGET_ARC700 (arc_selected_cpu->arch_info->arch_id\t\\\n \t\t       == BASE_ARCH_700)\n+/* An NPS400 is a specialisation of ARC700, so it is correct for NPS400\n+   TARGET_ARC700 is true, and TARGET_NPS400 is true.  */\n+#define TARGET_NPS400 ((arc_selected_cpu->arch_info->arch_id\t\\\n+\t\t\t== BASE_ARCH_700)\t\t\t\\\n+\t\t       && (arc_selected_cpu->processor\t\t\\\n+\t\t\t   == PROCESSOR_nps400))\n #define TARGET_EM (arc_selected_cpu->arch_info->arch_id == BASE_ARCH_em)\n #define TARGET_HS (arc_selected_cpu->arch_info->arch_id == BASE_ARCH_hs)\n #define TARGET_V2 (TARGET_EM || TARGET_HS)"}]}