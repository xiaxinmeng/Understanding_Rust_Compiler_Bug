{"sha": "49ed2fa42911fe38392f2667fee04df0bd1191f9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDllZDJmYTQyOTExZmUzODM5MmYyNjY3ZmVlMDRkZjBiZDExOTFmOQ==", "commit": {"author": {"name": "Aditya Kumar", "email": "aditya.k7@samsung.com", "date": "2015-12-02T23:06:29Z"}, "committer": {"name": "Sebastian Pop", "email": "spop@gcc.gnu.org", "date": "2015-12-02T23:06:29Z"}, "message": "handle missing isl_ast_expr\n\nFrom ISL's documentation, isl_ast_op_zdiv_r is equal to zero iff the remainder\non integer division is zero.  Code generate a modulo operation for that.\n\n\t* graphite-isl-ast-to-gimple.c (binary_op_to_tree): Handle isl_ast_op_zdiv_r.\n        (gcc_expression_from_isl_expr_op): Same.\n\n\t* gcc.dg/graphite/id-28.c: New.\n\nCo-Authored-By: Sebastian Pop <s.pop@samsung.com>\n\nFrom-SVN: r231212", "tree": {"sha": "6e6a78614a540561d39e5f15e7197c1ce68eb102", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6e6a78614a540561d39e5f15e7197c1ce68eb102"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/49ed2fa42911fe38392f2667fee04df0bd1191f9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/49ed2fa42911fe38392f2667fee04df0bd1191f9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/49ed2fa42911fe38392f2667fee04df0bd1191f9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/49ed2fa42911fe38392f2667fee04df0bd1191f9/comments", "author": null, "committer": {"login": "sebpop", "id": 568397, "node_id": "MDQ6VXNlcjU2ODM5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/568397?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sebpop", "html_url": "https://github.com/sebpop", "followers_url": "https://api.github.com/users/sebpop/followers", "following_url": "https://api.github.com/users/sebpop/following{/other_user}", "gists_url": "https://api.github.com/users/sebpop/gists{/gist_id}", "starred_url": "https://api.github.com/users/sebpop/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sebpop/subscriptions", "organizations_url": "https://api.github.com/users/sebpop/orgs", "repos_url": "https://api.github.com/users/sebpop/repos", "events_url": "https://api.github.com/users/sebpop/events{/privacy}", "received_events_url": "https://api.github.com/users/sebpop/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1a67d2cd3c2704ca472bd845d384a7dbe065ac4f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1a67d2cd3c2704ca472bd845d384a7dbe065ac4f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1a67d2cd3c2704ca472bd845d384a7dbe065ac4f"}], "stats": {"total": 85, "additions": 85, "deletions": 0}, "files": [{"sha": "f15b2d28fec50434ca4d610f6e282f282f134b0c", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/49ed2fa42911fe38392f2667fee04df0bd1191f9/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/49ed2fa42911fe38392f2667fee04df0bd1191f9/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=49ed2fa42911fe38392f2667fee04df0bd1191f9", "patch": "@@ -1,3 +1,9 @@\n+2015-12-02  Aditya Kumar  <aditya.k7@samsung.com>\n+\t    Sebastian Pop  <s.pop@samsung.com>\n+\n+\t* graphite-isl-ast-to-gimple.c (binary_op_to_tree): Handle isl_ast_op_zdiv_r.\n+        (gcc_expression_from_isl_expr_op): Same.\n+\n 2015-12-02  Aditya Kumar  <aditya.k7@samsung.com>\n \t    Sebastian Pop  <s.pop@samsung.com>\n "}, {"sha": "06a206209d93409e6b42b185937f1646a7b5149e", "filename": "gcc/graphite-isl-ast-to-gimple.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/49ed2fa42911fe38392f2667fee04df0bd1191f9/gcc%2Fgraphite-isl-ast-to-gimple.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/49ed2fa42911fe38392f2667fee04df0bd1191f9/gcc%2Fgraphite-isl-ast-to-gimple.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgraphite-isl-ast-to-gimple.c?ref=49ed2fa42911fe38392f2667fee04df0bd1191f9", "patch": "@@ -588,6 +588,7 @@ binary_op_to_tree (tree type, __isl_take isl_ast_expr *expr, ivs_params &ip)\n \t}\n       return fold_build2 (TRUNC_DIV_EXPR, type, tree_lhs_expr, tree_rhs_expr);\n \n+    case isl_ast_op_zdiv_r:\n     case isl_ast_op_pdiv_r:\n       /* As ISL operates on arbitrary precision numbers, we may end up with\n \t division by 2^64 that is folded to 0.  */\n@@ -758,6 +759,7 @@ gcc_expression_from_isl_expr_op (tree type, __isl_take isl_ast_expr *expr,\n     case isl_ast_op_pdiv_q:\n     case isl_ast_op_pdiv_r:\n     case isl_ast_op_fdiv_q:\n+    case isl_ast_op_zdiv_r:\n     case isl_ast_op_and:\n     case isl_ast_op_or:\n     case isl_ast_op_eq:"}, {"sha": "60e45fe23031ce34423f11106136ef1e6db49713", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/49ed2fa42911fe38392f2667fee04df0bd1191f9/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/49ed2fa42911fe38392f2667fee04df0bd1191f9/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=49ed2fa42911fe38392f2667fee04df0bd1191f9", "patch": "@@ -1,3 +1,8 @@\n+2015-12-02  Aditya Kumar  <aditya.k7@samsung.com>\n+\t    Sebastian Pop  <s.pop@samsung.com>\n+\n+\t* gcc.dg/graphite/id-28.c: New.\n+\n 2015-12-02  Aditya Kumar  <aditya.k7@samsung.com>\n \t    Sebastian Pop  <s.pop@samsung.com>\n "}, {"sha": "941a1e4f5431a6a2364b636dadff42bd43aa1f7b", "filename": "gcc/testsuite/gcc.dg/graphite/id-28.c", "status": "added", "additions": 72, "deletions": 0, "changes": 72, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/49ed2fa42911fe38392f2667fee04df0bd1191f9/gcc%2Ftestsuite%2Fgcc.dg%2Fgraphite%2Fid-28.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/49ed2fa42911fe38392f2667fee04df0bd1191f9/gcc%2Ftestsuite%2Fgcc.dg%2Fgraphite%2Fid-28.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fgraphite%2Fid-28.c?ref=49ed2fa42911fe38392f2667fee04df0bd1191f9", "patch": "@@ -0,0 +1,72 @@\n+/* { dg-options \"-fcilkplus -floop-nest-optimize -O3\" } */\n+\n+#if HAVE_IO\n+#include <stdio.h>\n+#endif\n+#include <math.h>\n+#define NUMBER 5\n+\n+int func1 (int *a1, int *a2)\n+{\n+  return __sec_reduce_add (a1[0:NUMBER] * a2[0:NUMBER:1]);\n+}\n+\n+int func2 (int *a1, int *a2)\n+{\n+  return (__sec_reduce_add (a1[0:NUMBER] * a2[0:NUMBER]) +\n+\t  __sec_reduce_mul (a1[0:NUMBER] + a2[0:NUMBER]));\n+}\n+\n+int func3 (int *a1, int *a2)\n+{\n+  return (int) sqrt ((double)(__sec_reduce_add (a1[0:NUMBER] * a2[0:NUMBER]) +\n+\t\t\t      a2[0] + a2[1] + a2[3]));\n+}\n+\n+int func4 (int *a1, int *a2)\n+{\n+  return a1[NUMBER-1] * (__sec_reduce_add (a1[0:NUMBER] * a2[0:NUMBER]) + a2[0] + a2[1] + a2[3])/a1[NUMBER-2];\n+}\n+int main(void)\n+{\n+  int array[NUMBER], array2[NUMBER];\n+  int return_value = 0;\n+  int ii = 0;\n+  int argc = 1;\n+  __asm volatile (\"\" : \"+r\" (argc));\n+  for (ii = 0; ii < NUMBER; ii++)\n+    {\n+      array[ii] = argc; /* This should calculate to 1.  */\n+      array2[ii]  = argc * argc + argc;  /* This should calculate to 2.  */\n+    }\n+\n+  return_value = func1 (array, array2);\n+#if HAVE_IO\n+  printf(\"Return_value = %d\\n\", return_value);\n+#endif\n+  if (return_value != (2+2+2+2+2))\n+    return 1;\n+\n+  return_value = func2 (array2, array);\n+#if HAVE_IO\n+  printf(\"Return_value = %d\\n\", return_value);\n+#endif\n+  if (return_value != (3*3*3*3*3) + (2+2+2+2+2))\n+    return 2;\n+\n+  return_value = func3 (array, array2);\n+#if HAVE_IO\n+  printf(\"Return_value = %d\\n\", return_value);\n+#endif\n+  if (return_value != 4)\n+    return 3;\n+\n+  return_value = func4 (array, array2);\n+#if HAVE_IO\n+  printf(\"Return_value = %d\\n\", return_value);\n+#endif\n+  if (return_value != 16)\n+    return 4;\n+\n+  return 0;\n+}"}]}