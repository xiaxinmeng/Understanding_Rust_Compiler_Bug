{"sha": "faa867f5a8b74b5eaef3066debc015dc888237cb", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZmFhODY3ZjVhOGI3NGI1ZWFlZjMwNjZkZWJjMDE1ZGM4ODgyMzdjYg==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2018-12-02T12:38:20Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2018-12-02T12:38:20Z"}, "message": "re PR c++/88258 (Infinite loop emitting diagnostics in the C++ front-end)\n\n\tPR c++/88258\n\t* parser.c (cp_parser_skip_to_closing_parenthesis_1,\n\tcp_parser_skip_to_end_of_statement,\n\tcp_parser_skip_to_end_of_block_or_statement,\n\tcp_parser_skip_to_closing_brace,\n\tcp_parser_skip_to_closing_square_bracket,\n\tcp_parser_skip_balanced_tokens): Don't treat CPP_PRAGMA_EOL specially\n\tif in_pragma is false.\n\n\t* g++.dg/gomp/pr88258.C: New test.\n\nFrom-SVN: r266720", "tree": {"sha": "79eaa6b0aa7be49f902ef6d7d64ca852b265a0d2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/79eaa6b0aa7be49f902ef6d7d64ca852b265a0d2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/faa867f5a8b74b5eaef3066debc015dc888237cb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/faa867f5a8b74b5eaef3066debc015dc888237cb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/faa867f5a8b74b5eaef3066debc015dc888237cb", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/faa867f5a8b74b5eaef3066debc015dc888237cb/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "f4b6fc8c53afad76c98e9d8c7debfd092c4d9620", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f4b6fc8c53afad76c98e9d8c7debfd092c4d9620", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f4b6fc8c53afad76c98e9d8c7debfd092c4d9620"}], "stats": {"total": 57, "additions": 51, "deletions": 6}, "files": [{"sha": "02f08ab26418bd10afc5b3b6d09783f06231c2dc", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/faa867f5a8b74b5eaef3066debc015dc888237cb/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/faa867f5a8b74b5eaef3066debc015dc888237cb/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=faa867f5a8b74b5eaef3066debc015dc888237cb", "patch": "@@ -1,3 +1,14 @@\n+2018-12-02  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR c++/88258\n+\t* parser.c (cp_parser_skip_to_closing_parenthesis_1,\n+\tcp_parser_skip_to_end_of_statement,\n+\tcp_parser_skip_to_end_of_block_or_statement,\n+\tcp_parser_skip_to_closing_brace,\n+\tcp_parser_skip_to_closing_square_bracket,\n+\tcp_parser_skip_balanced_tokens): Don't treat CPP_PRAGMA_EOL specially\n+\tif in_pragma is false.\n+\n 2018-12-01  Marek Polacek  <polacek@redhat.com>\n \n \tImplement P0634R3, Down with typename!"}, {"sha": "ab6d2378622bee9060375fdebc591f6377a57b48", "filename": "gcc/cp/parser.c", "status": "modified", "additions": 24, "deletions": 6, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/faa867f5a8b74b5eaef3066debc015dc888237cb/gcc%2Fcp%2Fparser.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/faa867f5a8b74b5eaef3066debc015dc888237cb/gcc%2Fcp%2Fparser.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fparser.c?ref=faa867f5a8b74b5eaef3066debc015dc888237cb", "patch": "@@ -3558,8 +3558,11 @@ cp_parser_skip_to_closing_parenthesis_1 (cp_parser *parser,\n \n       switch (token->type)\n \t{\n-\tcase CPP_EOF:\n \tcase CPP_PRAGMA_EOL:\n+\t  if (!parser->lexer->in_pragma)\n+\t    break;\n+\t  /* FALLTHRU */\n+\tcase CPP_EOF:\n \t  /* If we've run out of tokens, then there is no closing `)'.  */\n \t  return 0;\n \n@@ -3654,8 +3657,11 @@ cp_parser_skip_to_end_of_statement (cp_parser* parser)\n \n       switch (token->type)\n \t{\n-\tcase CPP_EOF:\n \tcase CPP_PRAGMA_EOL:\n+\t  if (!parser->lexer->in_pragma)\n+\t    break;\n+\t  /* FALLTHRU */\n+\tcase CPP_EOF:\n \t  /* If we've run out of tokens, stop.  */\n \t  return;\n \n@@ -3744,8 +3750,11 @@ cp_parser_skip_to_end_of_block_or_statement (cp_parser* parser)\n \n       switch (token->type)\n \t{\n-\tcase CPP_EOF:\n \tcase CPP_PRAGMA_EOL:\n+\t  if (!parser->lexer->in_pragma)\n+\t    break;\n+\t  /* FALLTHRU */\n+\tcase CPP_EOF:\n \t  /* If we've run out of tokens, stop.  */\n \t  return;\n \n@@ -3794,8 +3803,11 @@ cp_parser_skip_to_closing_brace (cp_parser *parser)\n \n       switch (token->type)\n \t{\n-\tcase CPP_EOF:\n \tcase CPP_PRAGMA_EOL:\n+\t  if (!parser->lexer->in_pragma)\n+\t    break;\n+\t  /* FALLTHRU */\n+\tcase CPP_EOF:\n \t  /* If we've run out of tokens, stop.  */\n \t  return false;\n \n@@ -22560,8 +22572,11 @@ cp_parser_skip_to_closing_square_bracket (cp_parser *parser)\n \n       switch (token->type)\n \t{\n-\tcase CPP_EOF:\n \tcase CPP_PRAGMA_EOL:\n+\t  if (!parser->lexer->in_pragma)\n+\t    break;\n+\t  /* FALLTHRU */\n+\tcase CPP_EOF:\n \t  /* If we've run out of tokens, then there is no closing `]'.  */\n \t  return false;\n \n@@ -26074,8 +26089,11 @@ cp_parser_skip_balanced_tokens (cp_parser *parser, size_t n)\n   do\n     switch (cp_lexer_peek_nth_token (parser->lexer, n++)->type)\n       {\n-      case CPP_EOF:\n       case CPP_PRAGMA_EOL:\n+\tif (!parser->lexer->in_pragma)\n+\t  break;\n+\t/* FALLTHRU */\n+      case CPP_EOF:\n \t/* Ran out of tokens.  */\n \treturn orig_n;\n       case CPP_OPEN_PAREN:"}, {"sha": "92825b59b21108ab3297afa9d2af39c23d548460", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/faa867f5a8b74b5eaef3066debc015dc888237cb/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/faa867f5a8b74b5eaef3066debc015dc888237cb/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=faa867f5a8b74b5eaef3066debc015dc888237cb", "patch": "@@ -1,3 +1,8 @@\n+2018-12-02  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR c++/88258\n+\t* g++.dg/gomp/pr88258.C: New test.\n+\n 2018-12-01  Marek Polacek  <polacek@redhat.com>\n \n \tImplement P0634R3, Down with typename!"}, {"sha": "9981bdbc00af96d7321259832419258436569da4", "filename": "gcc/testsuite/g++.dg/gomp/pr88258.C", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/faa867f5a8b74b5eaef3066debc015dc888237cb/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fgomp%2Fpr88258.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/faa867f5a8b74b5eaef3066debc015dc888237cb/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fgomp%2Fpr88258.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fgomp%2Fpr88258.C?ref=faa867f5a8b74b5eaef3066debc015dc888237cb", "patch": "@@ -0,0 +1,11 @@\n+// PR c++/88258\n+// { dg-do compile }\n+// { dg-options \"-fopenmp\" }\n+\n+void\n+foo (bar int p)\t\t// { dg-error \"variable or field|was not declared in this scope\" }\n+{\n+  int i, x;\n+  #pragma omp atomic write\n+  x = 6;\n+}"}]}