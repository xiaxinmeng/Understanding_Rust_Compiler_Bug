{"sha": "4b8ca6c6177b2bd948c1cb2a116955b942751559", "node_id": "C_kwDOANBUbNoAKDRiOGNhNmM2MTc3YjJiZDk0OGMxY2IyYTExNjk1NWI5NDI3NTE1NTk", "commit": {"author": {"name": "Andrew MacLeod", "email": "amacleod@redhat.com", "date": "2021-09-27T22:53:54Z"}, "committer": {"name": "Andrew MacLeod", "email": "amacleod@redhat.com", "date": "2021-10-06T13:11:50Z"}, "message": "Ranger: More efficient zero/nonzero check.\n\nA recent change introduced a frequent check for zero and non-zero which has\ncaused a lot of extra temporary trees to be created.  Make the check more\nefficent as it is always a pointer and thus unsigned.\n\n\t* gimple-range-cache.cc (non_null_ref::adjust_range): Check for\n\tzero and non-zero more efficently.", "tree": {"sha": "ded96deed7cd8fae6d1c4fe7461235e0c01c402c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ded96deed7cd8fae6d1c4fe7461235e0c01c402c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4b8ca6c6177b2bd948c1cb2a116955b942751559", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4b8ca6c6177b2bd948c1cb2a116955b942751559", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4b8ca6c6177b2bd948c1cb2a116955b942751559", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4b8ca6c6177b2bd948c1cb2a116955b942751559/comments", "author": null, "committer": null, "parents": [{"sha": "90c3a62272313bb08cd5d9a948ff2d71af73b294", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/90c3a62272313bb08cd5d9a948ff2d71af73b294", "html_url": "https://github.com/Rust-GCC/gccrs/commit/90c3a62272313bb08cd5d9a948ff2d71af73b294"}], "stats": {"total": 5, "additions": 3, "deletions": 2}, "files": [{"sha": "91dd5a5c0871e9deadcd6c405f6f56a6c84f556b", "filename": "gcc/gimple-range-cache.cc", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b8ca6c6177b2bd948c1cb2a116955b942751559/gcc%2Fgimple-range-cache.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b8ca6c6177b2bd948c1cb2a116955b942751559/gcc%2Fgimple-range-cache.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgimple-range-cache.cc?ref=4b8ca6c6177b2bd948c1cb2a116955b942751559", "patch": "@@ -98,9 +98,10 @@ non_null_ref::adjust_range (irange &r, tree name, basic_block bb,\n     return false;\n \n   // We only care about the null / non-null property of pointers.\n-  if (!POINTER_TYPE_P (TREE_TYPE (name)) || r.zero_p () || r.nonzero_p ())\n+  if (!POINTER_TYPE_P (TREE_TYPE (name)))\n+    return false;\n+  if (r.undefined_p () || r.lower_bound () != 0 || r.upper_bound () == 0)\n     return false;\n-\n   // Check if pointers have any non-null dereferences.\n   if (non_null_deref_p (name, bb, search_dom))\n     {"}]}