{"sha": "f7d042e2738fd5382cbdcb3284c237968fda4149", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjdkMDQyZTI3MzhmZDUzODJjYmRjYjMyODRjMjM3OTY4ZmRhNDE0OQ==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2010-11-04T15:52:18Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2010-11-04T15:52:18Z"}, "message": "semantics.c (speculative_access_check): New.\n\n\t* semantics.c (speculative_access_check): New.\n\t* cp-tree.h: Declare it.\n\t* call.c (build_over_call): Use it.\n\t* class.c (type_has_constexpr_default_constructor): Use locate_ctor.\n\t* method.c (locate_ctor): Use push/pop_deferring_access_checks.\n\nFrom-SVN: r166317", "tree": {"sha": "221d644800428ec7dde33449c48ccf4fbd9b0e14", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/221d644800428ec7dde33449c48ccf4fbd9b0e14"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f7d042e2738fd5382cbdcb3284c237968fda4149", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f7d042e2738fd5382cbdcb3284c237968fda4149", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f7d042e2738fd5382cbdcb3284c237968fda4149", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f7d042e2738fd5382cbdcb3284c237968fda4149/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "f2b01cfb6dcbf8dd471eee611d26c0cf094683f5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f2b01cfb6dcbf8dd471eee611d26c0cf094683f5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f2b01cfb6dcbf8dd471eee611d26c0cf094683f5"}], "stats": {"total": 73, "additions": 61, "deletions": 12}, "files": [{"sha": "ab00a0f12ff37c2cebf0607c0d1d66fcb6986c9a", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f7d042e2738fd5382cbdcb3284c237968fda4149/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f7d042e2738fd5382cbdcb3284c237968fda4149/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=f7d042e2738fd5382cbdcb3284c237968fda4149", "patch": "@@ -1,3 +1,11 @@\n+2010-11-04  Jason Merrill  <jason@redhat.com>\n+\n+\t* semantics.c (speculative_access_check): New.\n+\t* cp-tree.h: Declare it.\n+\t* call.c (build_over_call): Use it.\n+\t* class.c (type_has_constexpr_default_constructor): Use locate_ctor.\n+\t* method.c (locate_ctor): Use push/pop_deferring_access_checks.\n+\n 2010-11-03  Jason Merrill  <jason@redhat.com>\n \n \tPR c++/46293"}, {"sha": "eb7247dad93fbde156fe1d9ff91d43cd7a265eef", "filename": "gcc/cp/call.c", "status": "modified", "additions": 3, "deletions": 9, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f7d042e2738fd5382cbdcb3284c237968fda4149/gcc%2Fcp%2Fcall.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f7d042e2738fd5382cbdcb3284c237968fda4149/gcc%2Fcp%2Fcall.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcall.c?ref=f7d042e2738fd5382cbdcb3284c237968fda4149", "patch": "@@ -5823,15 +5823,9 @@ build_over_call (struct z_candidate *cand, int flags, tsubst_flags_t complain)\n \taccess_fn = fn;\n       if (flags & LOOKUP_SPECULATIVE)\n \t{\n-\t  /* If we're checking for implicit delete, we don't want access\n-\t     control errors.  */\n-\t  if (!accessible_p (cand->access_path, access_fn, true))\n-\t    {\n-\t      /* Unless we're under maybe_explain_implicit_delete.  */\n-\t      if (flags & LOOKUP_COMPLAIN)\n-\t\tenforce_access (cand->access_path, access_fn, fn);\n-\t      return error_mark_node;\n-\t    }\n+\t  if (!speculative_access_check (cand->access_path, access_fn, fn,\n+\t\t\t\t\t !!(flags & LOOKUP_COMPLAIN)))\n+\t    return error_mark_node;\n \t}\n       else\n \tperform_or_defer_access_check (cand->access_path, access_fn, fn);"}, {"sha": "435fa71c3f5bb83122e6e9f2e69a601319a2e728", "filename": "gcc/cp/class.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f7d042e2738fd5382cbdcb3284c237968fda4149/gcc%2Fcp%2Fclass.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f7d042e2738fd5382cbdcb3284c237968fda4149/gcc%2Fcp%2Fclass.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fclass.c?ref=f7d042e2738fd5382cbdcb3284c237968fda4149", "patch": "@@ -4349,7 +4349,7 @@ type_has_constexpr_default_constructor (tree t)\n     return false;\n   if (CLASSTYPE_LAZY_DEFAULT_CTOR (t))\n     return synthesized_default_constructor_is_constexpr (t);\n-  fns = get_default_ctor (t);\n+  fns = locate_ctor (t);\n   return (fns && DECL_DECLARED_CONSTEXPR_P (fns));\n }\n "}, {"sha": "8f5227800f5190a843cf92936b2fcc7fb03d8520", "filename": "gcc/cp/cp-tree.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f7d042e2738fd5382cbdcb3284c237968fda4149/gcc%2Fcp%2Fcp-tree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f7d042e2738fd5382cbdcb3284c237968fda4149/gcc%2Fcp%2Fcp-tree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcp-tree.h?ref=f7d042e2738fd5382cbdcb3284c237968fda4149", "patch": "@@ -5192,6 +5192,7 @@ extern void pop_to_parent_deferring_access_checks (void);\n extern void perform_access_checks\t\t(VEC (deferred_access_check,gc)*);\n extern void perform_deferred_access_checks\t(void);\n extern void perform_or_defer_access_check\t(tree, tree, tree);\n+extern bool speculative_access_check\t\t(tree, tree, tree, bool);\n extern int stmts_are_full_exprs_p\t\t(void);\n extern void init_cp_semantics\t\t\t(void);\n extern tree do_poplevel\t\t\t\t(tree);"}, {"sha": "c1d30d476a1c3f6eb89f6158b170f13b514e572d", "filename": "gcc/cp/method.c", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f7d042e2738fd5382cbdcb3284c237968fda4149/gcc%2Fcp%2Fmethod.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f7d042e2738fd5382cbdcb3284c237968fda4149/gcc%2Fcp%2Fmethod.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fmethod.c?ref=f7d042e2738fd5382cbdcb3284c237968fda4149", "patch": "@@ -849,8 +849,12 @@ get_dtor (tree type)\n tree\n locate_ctor (tree type)\n {\n-  tree fn = locate_fn_flags (type, complete_ctor_identifier, NULL_TREE,\n-\t\t\t     LOOKUP_SPECULATIVE, tf_none);\n+  tree fn;\n+\n+  push_deferring_access_checks (dk_no_check);\n+  fn = locate_fn_flags (type, complete_ctor_identifier, NULL_TREE,\n+\t\t\tLOOKUP_SPECULATIVE, tf_none);\n+  pop_deferring_access_checks ();\n   if (fn == error_mark_node)\n     return NULL_TREE;\n   return fn;"}, {"sha": "3d62cd1930631a872e16a5012175560c58da5ef5", "filename": "gcc/cp/semantics.c", "status": "modified", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f7d042e2738fd5382cbdcb3284c237968fda4149/gcc%2Fcp%2Fsemantics.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f7d042e2738fd5382cbdcb3284c237968fda4149/gcc%2Fcp%2Fsemantics.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fsemantics.c?ref=f7d042e2738fd5382cbdcb3284c237968fda4149", "patch": "@@ -337,6 +337,30 @@ perform_or_defer_access_check (tree binfo, tree decl, tree diag_decl)\n   new_access->diag_decl = diag_decl;\n }\n \n+/* Used by build_over_call in LOOKUP_SPECULATIVE mode: return whether DECL\n+   is accessible in BINFO, and possibly complain if not.  If we're not\n+   checking access, everything is accessible.  */\n+\n+bool\n+speculative_access_check (tree binfo, tree decl, tree diag_decl,\n+\t\t\t  bool complain)\n+{\n+  if (deferred_access_no_check)\n+    return true;\n+\n+  /* If we're checking for implicit delete, we don't want access\n+     control errors.  */\n+  if (!accessible_p (binfo, decl, true))\n+    {\n+      /* Unless we're under maybe_explain_implicit_delete.  */\n+      if (complain)\n+\tenforce_access (binfo, decl, diag_decl);\n+      return false;\n+    }\n+\n+  return true;\n+}\n+\n /* Returns nonzero if the current statement is a full expression,\n    i.e. temporaries created during that statement should be destroyed\n    at the end of the statement.  */"}, {"sha": "0fa52176934c8e63d784d3edc75e033904e8f714", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f7d042e2738fd5382cbdcb3284c237968fda4149/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f7d042e2738fd5382cbdcb3284c237968fda4149/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=f7d042e2738fd5382cbdcb3284c237968fda4149", "patch": "@@ -1,3 +1,7 @@\n+2010-11-04  Jason Merrill  <jason@redhat.com>\n+\n+\t* g++.dg/cpp0x/constexpr-access.C: New.\n+\n 2010-11-04  Richard Guenther  <rguenther@suse.de>\n \n \tPR rtl-optimization/46183"}, {"sha": "ee5fc9854fc5ebb103c15e2c7266864575551505", "filename": "gcc/testsuite/g++.dg/cpp0x/constexpr-access.C", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f7d042e2738fd5382cbdcb3284c237968fda4149/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-access.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f7d042e2738fd5382cbdcb3284c237968fda4149/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-access.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-access.C?ref=f7d042e2738fd5382cbdcb3284c237968fda4149", "patch": "@@ -0,0 +1,14 @@\n+// { dg-options -std=c++0x }\n+\n+class base\n+{\n+protected:\n+  constexpr base() { }\n+};\n+\n+struct A : base { };\n+\n+int main()\n+{\n+  A a;\n+}"}]}