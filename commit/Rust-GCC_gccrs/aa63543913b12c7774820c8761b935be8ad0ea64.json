{"sha": "aa63543913b12c7774820c8761b935be8ad0ea64", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWE2MzU0MzkxM2IxMmM3Nzc0ODIwYzg3NjFiOTM1YmU4YWQwZWE2NA==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2005-11-15T14:05:30Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2005-11-15T14:05:30Z"}, "message": "[multiple changes]\n\n2005-11-14  Vincent Celier  <celier@adacore.com>\n\n\t* makegpr.adb (Gprmake): Do not attempt to build the global archive if\n\tthere is no object directory.\n\n2005-11-14  Robert Dewar  <dewar@adacore.com>\n\n\t* usage.adb: Minor adjustment to output format, use nn instead of nnn\n\t(so that -gnateInnn does not run into next column)\n\n2005-11-14  Ed Falis  <falis@adacore.com>\n\n\t* s-bitops.adb (Bits_Array): corrected comment: \"unconstrained\" =>\n\t\"constrained\"\n\n2005-11-14  Cyrille Comar  <comar@adacore.com>\n\n\t* s-chepoo.ads: Add comments on Dereference.\n\tRemove unnecessary inherited abstract primitives.\n\tCosmetic cleanup.\n\n2005-11-14  Robert Dewar  <dewar@adacore.com>\n\n\t* sem_cat.ads (Validate_Access_Type_Declaration): Remove declaration\n\tnode parameter, not needed, since it is available as Declaration_Node.\n\n2005-11-14  Geert Bosch  <bosch@adacore.com>\n\n\t* s-exnllf.adb (Exn_LLF): Fix comment to be more precise and\n\tgrammatically correct.\n\n2005-11-14  Vincent Celier  <celier@adacore.com>\n\n\t* s-fileio.ads: Correct spelling error in comment\n\nFrom-SVN: r107014", "tree": {"sha": "c8c0214f8548fc9f765b31c6ab8a74a3686229ef", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c8c0214f8548fc9f765b31c6ab8a74a3686229ef"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/aa63543913b12c7774820c8761b935be8ad0ea64", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/aa63543913b12c7774820c8761b935be8ad0ea64", "html_url": "https://github.com/Rust-GCC/gccrs/commit/aa63543913b12c7774820c8761b935be8ad0ea64", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/aa63543913b12c7774820c8761b935be8ad0ea64/comments", "author": null, "committer": null, "parents": [{"sha": "45b5a7a1b03817f89bef5e0d4c78b4dcf4d26e4c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/45b5a7a1b03817f89bef5e0d4c78b4dcf4d26e4c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/45b5a7a1b03817f89bef5e0d4c78b4dcf4d26e4c"}], "stats": {"total": 75, "additions": 32, "deletions": 43}, "files": [{"sha": "2e8f5c223556493f93f526e56a4ddaba30e0273f", "filename": "gcc/ada/makegpr.adb", "status": "modified", "additions": 9, "deletions": 6, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aa63543913b12c7774820c8761b935be8ad0ea64/gcc%2Fada%2Fmakegpr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aa63543913b12c7774820c8761b935be8ad0ea64/gcc%2Fada%2Fmakegpr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fmakegpr.adb?ref=aa63543913b12c7774820c8761b935be8ad0ea64", "patch": "@@ -129,7 +129,7 @@ package body Makegpr is\n    --  ar commands.\n \n    Archive_Indexer_Path : String_Access := null;\n-   --  The path name of the archive indexer (ranlib), if it exists.\n+   --  The path name of the archive indexer (ranlib), if it exists\n \n    Copyright_Output : Boolean := False;\n    Usage_Output     : Boolean := False;\n@@ -356,7 +356,7 @@ package body Makegpr is\n \n    procedure Add_Argument (Arg : String_Access; Display : Boolean);\n    procedure Add_Argument (Arg : String; Display : Boolean);\n-   --  Add an argument to Arguments. Reallocate if necessary.\n+   --  Add an argument to Arguments. Reallocate if necessary\n \n    procedure Add_Arguments (Args : Argument_List; Display : Boolean);\n    --  Add a list of arguments to Arguments. Reallocate if necessary\n@@ -2015,7 +2015,7 @@ package body Makegpr is\n                      end if;\n                   end;\n \n-                  --  If the source path name ends the line, we are done.\n+                  --  If the source path name ends the line, we are done\n \n                   exit Line_Loop when Finish = Last;\n \n@@ -2609,7 +2609,7 @@ package body Makegpr is\n       --  Keep_Going is True, to inhibit the building of the archive.\n \n       Need_To_Compile : Boolean;\n-      --  Set to True when a source needs to be compiled/recompiled.\n+      --  Set to True when a source needs to be compiled/recompiled\n \n       Need_To_Rebuild_Archive : Boolean := Force_Compilations;\n       --  True when the archive needs to be built/rebuilt unconditionally\n@@ -3217,7 +3217,10 @@ package body Makegpr is\n             --  If -c was not specified, link the executables,\n             --  if there are any.\n \n-            if not Compile_Only and then not Data.Library then\n+            if not Compile_Only\n+              and then not Data.Library\n+              and then Data.Object_Directory /= No_Name\n+            then\n                Build_Global_Archive;\n                Link_Executables;\n             end if;\n@@ -3677,7 +3680,7 @@ package body Makegpr is\n             --  project. Any main that is not a source of the other languages\n             --  will be deemed to be an Ada main.\n \n-            --  Find the mains of the other languages and the Ada mains.\n+            --  Find the mains of the other languages and the Ada mains\n \n             Mains.Reset;\n             Ada_Mains.Set_Last (0);"}, {"sha": "2224ff0a6501447576edf97ce2d2dcab106820cc", "filename": "gcc/ada/s-bitops.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aa63543913b12c7774820c8761b935be8ad0ea64/gcc%2Fada%2Fs-bitops.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aa63543913b12c7774820c8761b935be8ad0ea64/gcc%2Fada%2Fs-bitops.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-bitops.adb?ref=aa63543913b12c7774820c8761b935be8ad0ea64", "patch": "@@ -40,7 +40,7 @@ with Unchecked_Conversion;\n package body System.Bit_Ops is\n \n    subtype Bits_Array is System.Unsigned_Types.Packed_Bytes1 (Positive);\n-   --  Unconstrained array used to interprete the address values. We use the\n+   --  Constrained array used to interpret the address values. We use the\n    --  unaligned version always, since this will handle both the aligned and\n    --  unaligned cases, and we always do these operations by bytes anyway.\n    --  Note: we use a ones origin array here so that the computations of the"}, {"sha": "27d840fb7a8a8ee427db0193204b9e0773375f38", "filename": "gcc/ada/s-chepoo.ads", "status": "modified", "additions": 7, "deletions": 21, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aa63543913b12c7774820c8761b935be8ad0ea64/gcc%2Fada%2Fs-chepoo.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aa63543913b12c7774820c8761b935be8ad0ea64/gcc%2Fada%2Fs-chepoo.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-chepoo.ads?ref=aa63543913b12c7774820c8761b935be8ad0ea64", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---   Copyright (C) 1992,1993,1994,1995,1996 Free Software Foundation, Inc.  --\n+--       Copyright (C) 1992-1996, 2005      Free Software Foundation, Inc.  --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -41,32 +41,18 @@ package System.Checked_Pools is\n    --  called on each implicit or explicit dereference of a pointer which\n    --  has such a storage pool\n \n-   procedure Allocate\n-     (Pool                     : in out Checked_Pool;\n-      Storage_Address          : out Address;\n-      Size_In_Storage_Elements : in System.Storage_Elements.Storage_Count;\n-      Alignment                : in System.Storage_Elements.Storage_Count)\n-   is abstract;\n-\n-   procedure Deallocate\n-     (Pool                     : in out Checked_Pool;\n-      Storage_Address          : in Address;\n-      Size_In_Storage_Elements : in System.Storage_Elements.Storage_Count;\n-      Alignment                : in System.Storage_Elements.Storage_Count)\n-   is abstract;\n-\n-   function Storage_Size\n-     (Pool : Checked_Pool)\n-      return System.Storage_Elements.Storage_Count\n-   is abstract;\n-\n    procedure Dereference\n      (Pool                     : in out Checked_Pool;\n       Storage_Address          : in Address;\n       Size_In_Storage_Elements : in System.Storage_Elements.Storage_Count;\n       Alignment                : in System.Storage_Elements.Storage_Count)\n    is abstract;\n-   --  Called each time a pointer to a checked pool is dereferenced\n+   --  Called implicitly each time a pointer to a checked pool is dereferenced\n+   --  All parameters in the profile are compatible with the profile of\n+   --  Allocate/Deallocate: the Storage_Address corresponds to the address of\n+   --  the dereferenced object, Size_in_Storage_Elements is its dynamic size\n+   --  (and thus may involve an implicit dispatching call to size) and\n+   --  Alignment is the alignment of the object.\n \n private\n    type Checked_Pool is abstract"}, {"sha": "ae282c8110adb3b78ca4cde620f85688161cb2a0", "filename": "gcc/ada/s-exnllf.adb", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aa63543913b12c7774820c8761b935be8ad0ea64/gcc%2Fada%2Fs-exnllf.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aa63543913b12c7774820c8761b935be8ad0ea64/gcc%2Fada%2Fs-exnllf.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-exnllf.adb?ref=aa63543913b12c7774820c8761b935be8ad0ea64", "patch": "@@ -49,9 +49,9 @@ package body System.Exn_LLF is\n    begin\n       --  We use the standard logarithmic approach, Exp gets shifted right\n       --  testing successive low order bits and Factor is the value of the\n-      --  base raised to the next power of 2. For positive exponents we\n-      --  multiply the result by this factor, for negative exponents, we\n-      --  Division by this factor.\n+      --  base raised to the next power of 2. If the low order bit or Exp is\n+      --  set, multiply the result by this factor. For negative exponents,\n+      --  invert result upon return.\n \n       if Exp >= 0 then\n          loop"}, {"sha": "75636ef5e455d45b41fae4b2976fa40876d4369c", "filename": "gcc/ada/s-fileio.ads", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aa63543913b12c7774820c8761b935be8ad0ea64/gcc%2Fada%2Fs-fileio.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aa63543913b12c7774820c8761b935be8ad0ea64/gcc%2Fada%2Fs-fileio.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-fileio.ads?ref=aa63543913b12c7774820c8761b935be8ad0ea64", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1992-2004, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2005, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -139,7 +139,7 @@ package System.File_IO is\n \n    procedure Chain_File (File : FCB.AFCB_Ptr);\n    --  Used to chain the given file into the list of open files. Normally this\n-   --  is done implicitly by Open. Chain_File is used for the spcial cases of\n+   --  is done implicitly by Open. Chain_File is used for the special cases of\n    --  the system files defined by Text_IO (stdin, stdout, stderr) which are\n    --  not opened in the normal manner. Note that the caller is responsible\n    --  for task lock out to protect the global data structures if this is"}, {"sha": "7296bbe565fc396c3f1636c87ad436c9d7cdd749", "filename": "gcc/ada/sem_cat.ads", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aa63543913b12c7774820c8761b935be8ad0ea64/gcc%2Fada%2Fsem_cat.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aa63543913b12c7774820c8761b935be8ad0ea64/gcc%2Fada%2Fsem_cat.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_cat.ads?ref=aa63543913b12c7774820c8761b935be8ad0ea64", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1992-2002 Free Software Foundation, Inc.          --\n+--          Copyright (C) 1992-2005, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -96,7 +96,7 @@ package Sem_Cat is\n    --  the checks cannot be made before knowing if the object is imported.\n \n    procedure Validate_RCI_Declarations (P : Entity_Id);\n-   --  Apply semantic checks given in  E2.3(10-14).\n+   --  Apply semantic checks given in  E2.3(10-14)\n \n    procedure Validate_RCI_Subprogram_Declaration (N : Node_Id);\n    --  Check for RCI unit subprogram declarations with respect to"}, {"sha": "1a2d902c2724206b377519a44f31e7ce663cb037", "filename": "gcc/ada/usage.adb", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aa63543913b12c7774820c8761b935be8ad0ea64/gcc%2Fada%2Fusage.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aa63543913b12c7774820c8761b935be8ad0ea64/gcc%2Fada%2Fusage.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fusage.adb?ref=aa63543913b12c7774820c8761b935be8ad0ea64", "patch": "@@ -162,7 +162,7 @@ begin\n \n    --  Line for -gnateI switch\n \n-   Write_Switch_Char (\"eInnn\");\n+   Write_Switch_Char (\"eInn\");\n    Write_Line (\"Index in multi-unit source, e.g. -gnateI2\");\n \n    --  Line for -gnatem switch\n@@ -213,7 +213,7 @@ begin\n    --  Line for -gnatk switch\n \n    Write_Switch_Char (\"k\");\n-   Write_Line (\"Limit file names to nnn characters (k = krunch)\");\n+   Write_Line (\"Limit file names to nn characters (k = krunch)\");\n \n    --  Line for -gnatl switch\n \n@@ -222,8 +222,8 @@ begin\n \n    --  Line for -gnatm switch\n \n-   Write_Switch_Char (\"mnnn\");\n-   Write_Line (\"Limit number of detected errors to nnn (1-999999)\");\n+   Write_Switch_Char (\"mnn\");\n+   Write_Line (\"Limit number of detected errors to nn (1-999999)\");\n \n    --  Line for -gnatn switch\n \n@@ -289,8 +289,8 @@ begin\n \n    --  Line for -gnatT switch\n \n-   Write_Switch_Char (\"Tnnn\");\n-   Write_Line (\"All compiler tables start at nnn times usual starting size\");\n+   Write_Switch_Char (\"Tnn\");\n+   Write_Line (\"All compiler tables start at nn times usual starting size\");\n \n    --  Line for -gnatu switch\n \n@@ -438,10 +438,10 @@ begin\n    Write_Line (\"        i    check if-then layout\");\n    Write_Line (\"        k    check casing rules for keywords\");\n    Write_Line (\"        l    check reference manual layout\");\n-   Write_Line (\"        Lnnn check max nest level < nnn\");\n+   Write_Line (\"        Lnn  check max nest level < nn \");\n    Write_Line (\"        m    check line length <= 79 characters\");\n    Write_Line (\"        n    check casing of package Standard identifiers\");\n-   Write_Line (\"        Mnnn check line length <= nnn characters\");\n+   Write_Line (\"        Mnn  check line length <= nn  characters\");\n    Write_Line (\"        o    check subprogram bodies in alphabetical order\");\n    Write_Line (\"        p    check pragma casing\");\n    Write_Line (\"        r    check casing for identifier references\");"}]}