{"sha": "c03d83d499d5db65063f2177c53ae22d69ec6b77", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzAzZDgzZDQ5OWQ1ZGI2NTA2M2YyMTc3YzUzYWUyMmQ2OWVjNmI3Nw==", "commit": {"author": {"name": "Paolo Carlini", "email": "pcarlini@suse.de", "date": "2003-11-26T15:56:40Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2003-11-26T15:56:40Z"}, "message": "re PR libstdc++/13171 (Bugs in basic_filebuf::imbue)\n\n2003-11-26  Paolo Carlini  <pcarlini@suse.de>\n\t    Petur Runolfsson  <peturr02@ru.is>\n\n\tPR libstdc++/13171\n\t* include/bits/fstream.tcc (imbue): Relax the conditions under\n\twhich the function succeeds: allow for two consecutive calls with\n\tthe same name; state dependent encodings are ok even after open\n\tif at the beginning of the file; don't check seekoff return value\n\t(pipes, cin, cout, etc...)\n\t* testsuite/27_io/basic_filebuf/imbue/char/13171-1.cc: New.\n\t* testsuite/27_io/basic_filebuf/imbue/char/13171-2.cc: New.\n\t* testsuite/27_io/basic_filebuf/imbue/char/13171-3.cc: New.\n\t* testsuite/27_io/basic_filebuf/imbue/char/13171-4.cc: New.\n\t* testsuite/27_io/basic_filebuf/imbue/char/2.cc: Tweak comment.\n\t* testsuite/27_io/basic_filebuf/imbue/char/3.cc: Likewise.\n\t* testsuite/27_io/basic_filebuf/imbue/wchar_t/2.cc: Tweak comment.\n\t* testsuite/27_io/basic_filebuf/imbue/wchar_t/3.cc: Likewise.\n\n\t* testsuite/27_io/basic_filebuf/imbue/wchar_t/12868.cc: More\n\tcorrectly use the UTF-8 locale appearing in the PR.\n\nCo-Authored-By: Petur Runolfsson <peturr02@ru.is>\n\nFrom-SVN: r73954", "tree": {"sha": "2f8e851222c8f96c21f801f304261d7a95047654", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2f8e851222c8f96c21f801f304261d7a95047654"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c03d83d499d5db65063f2177c53ae22d69ec6b77", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c03d83d499d5db65063f2177c53ae22d69ec6b77", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c03d83d499d5db65063f2177c53ae22d69ec6b77", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c03d83d499d5db65063f2177c53ae22d69ec6b77/comments", "author": null, "committer": null, "parents": [{"sha": "6796826ca45e79481eddb18b387f8e1f8f03c4fa", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6796826ca45e79481eddb18b387f8e1f8f03c4fa", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6796826ca45e79481eddb18b387f8e1f8f03c4fa"}], "stats": {"total": 288, "additions": 260, "deletions": 28}, "files": [{"sha": "f94f6b8a57f887d84013103d08dc546b504c5e2d", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c03d83d499d5db65063f2177c53ae22d69ec6b77/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c03d83d499d5db65063f2177c53ae22d69ec6b77/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=c03d83d499d5db65063f2177c53ae22d69ec6b77", "patch": "@@ -1,3 +1,24 @@\n+2003-11-26  Paolo Carlini  <pcarlini@suse.de>\n+\t    Petur Runolfsson  <peturr02@ru.is>\n+\n+\tPR libstdc++/13171\n+\t* include/bits/fstream.tcc (imbue): Relax the conditions under\n+\twhich the function succeeds: allow for two consecutive calls with\n+\tthe same name; state dependent encodings are ok even after open\n+\tif at the beginning of the file; don't check seekoff return value\n+\t(pipes, cin, cout, etc...)\n+\t* testsuite/27_io/basic_filebuf/imbue/char/13171-1.cc: New.\n+\t* testsuite/27_io/basic_filebuf/imbue/char/13171-2.cc: New.\n+\t* testsuite/27_io/basic_filebuf/imbue/char/13171-3.cc: New.\n+\t* testsuite/27_io/basic_filebuf/imbue/char/13171-4.cc: New.\n+\t* testsuite/27_io/basic_filebuf/imbue/char/2.cc: Tweak comment.\n+\t* testsuite/27_io/basic_filebuf/imbue/char/3.cc: Likewise.\n+\t* testsuite/27_io/basic_filebuf/imbue/wchar_t/2.cc: Tweak comment.\n+\t* testsuite/27_io/basic_filebuf/imbue/wchar_t/3.cc: Likewise.\n+\n+\t* testsuite/27_io/basic_filebuf/imbue/wchar_t/12868.cc: More\n+\tcorrectly use the UTF-8 locale appearing in the PR.\n+\n 2003-11-26  Paolo Carlini  <pcarlini@suse.de>\n \n \t* include/bits/locale_facets.h"}, {"sha": "aee725ebbf8d70be0a79ce7f8e5efabd3e0a23b0", "filename": "libstdc++-v3/include/bits/fstream.tcc", "status": "modified", "additions": 14, "deletions": 19, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c03d83d499d5db65063f2177c53ae22d69ec6b77/libstdc%2B%2B-v3%2Finclude%2Fbits%2Ffstream.tcc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c03d83d499d5db65063f2177c53ae22d69ec6b77/libstdc%2B%2B-v3%2Finclude%2Fbits%2Ffstream.tcc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Ffstream.tcc?ref=c03d83d499d5db65063f2177c53ae22d69ec6b77", "patch": "@@ -744,27 +744,22 @@ namespace std\n     basic_filebuf<_CharT, _Traits>::\n     imbue(const locale& __loc)\n     {\n-      if (this->getloc() != __loc)\n-\t{\n-\t  bool __testfail = false;\n-\t  if (this->is_open())\n-\t    {\n-\t      const bool __testseek =\n-\t\tthis->seekoff(0, ios_base::cur, this->_M_mode) ==\n-\t\tpos_type(off_type(-1));\n-\t      const bool __teststate =\n-\t\t__check_facet(_M_codecvt).encoding() == -1;\n+      bool __testfail = false;\n \n-\t      __testfail = __testseek || __teststate;\n-\t    }\n+      if (this->is_open())\n+\t{\n+\t  const pos_type __ret = this->seekoff(0, ios_base::cur,\n+\t\t\t\t\t       this->_M_mode);\n+\t  const bool __teststate = __check_facet(_M_codecvt).encoding() == -1;\n+\t  __testfail = __teststate && __ret != pos_type(off_type(0));\n+\t}\n \n-\t  if (!__testfail)\n-\t    {\n-\t      if (__builtin_expect(has_facet<__codecvt_type>(__loc), true))\n-\t\t_M_codecvt = &use_facet<__codecvt_type>(__loc);\n-\t      else\n-\t\t_M_codecvt = 0;\n-\t    }\n+      if (!__testfail)\n+\t{\n+\t  if (__builtin_expect(has_facet<__codecvt_type>(__loc), true))\n+\t    _M_codecvt = &use_facet<__codecvt_type>(__loc);\n+\t  else\n+\t    _M_codecvt = 0;\n \t}\n     }\n "}, {"sha": "672394ac829f8d424a0ed11866f2a1788fe46563", "filename": "libstdc++-v3/testsuite/27_io/basic_filebuf/imbue/char/13171-1.cc", "status": "added", "additions": 45, "deletions": 0, "changes": 45, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c03d83d499d5db65063f2177c53ae22d69ec6b77/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_filebuf%2Fimbue%2Fchar%2F13171-1.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c03d83d499d5db65063f2177c53ae22d69ec6b77/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_filebuf%2Fimbue%2Fchar%2F13171-1.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_filebuf%2Fimbue%2Fchar%2F13171-1.cc?ref=c03d83d499d5db65063f2177c53ae22d69ec6b77", "patch": "@@ -0,0 +1,45 @@\n+// Copyright (C) 2003 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,\n+// USA.\n+\n+// 27.8.1.4 Overridden virtual functions\n+\n+#include <fstream>\n+#include <locale>\n+#include <testsuite_hooks.h>\n+\n+// libstdc++/13171\n+void test01()\n+{\n+  bool test __attribute__((unused)) = true;\n+  using namespace std;\n+\n+  filebuf fb;\n+  \n+  fb.pubimbue(__gnu_test::try_named_locale(\"en_US\"));\n+  fb.pubimbue(__gnu_test::try_named_locale(\"en_US\"));\n+  \n+  fb.open(\"tmp_13171-1\", ios_base::out);\n+  fb.sputc('F');\n+  fb.pubsync();\n+  fb.close();\n+}\n+\n+int main()\n+{\n+  test01();\n+}"}, {"sha": "65190ada6816b93d183ff8e1bf8481933b85920d", "filename": "libstdc++-v3/testsuite/27_io/basic_filebuf/imbue/char/13171-2.cc", "status": "added", "additions": 63, "deletions": 0, "changes": 63, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c03d83d499d5db65063f2177c53ae22d69ec6b77/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_filebuf%2Fimbue%2Fchar%2F13171-2.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c03d83d499d5db65063f2177c53ae22d69ec6b77/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_filebuf%2Fimbue%2Fchar%2F13171-2.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_filebuf%2Fimbue%2Fchar%2F13171-2.cc?ref=c03d83d499d5db65063f2177c53ae22d69ec6b77", "patch": "@@ -0,0 +1,63 @@\n+// Copyright (C) 2003 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,\n+// USA.\n+\n+// 27.8.1.4 Overridden virtual functions\n+\n+#include <fstream>\n+#include <locale>\n+#include <cassert>\n+\n+#include <sys/types.h>\n+#include <sys/stat.h>\n+\n+#include <testsuite_hooks.h>\n+\n+// libstdc++/13171\n+void test01()\n+{\n+  bool test __attribute__((unused)) = true;\n+  using namespace std;\n+\n+  const char* name = \"tmp_fifo_13171-2\";\n+  unlink(name);\n+  mkfifo(name, S_IRWXU);\n+  \n+  int child = fork();\n+  if (child == 0)\n+    {\n+      filebuf fb;\n+      fb.open(name, ios_base::out);\n+      fb.sputc('S');\n+      fb.close();\n+      return;\n+    }\n+\n+  filebuf fb;\n+  fb.pubimbue(__gnu_test::try_named_locale(\"fr_FR\"));\n+  fb.open(name, ios_base::in);\n+  assert(fb.is_open());\n+  fb.pubimbue(__gnu_test::try_named_locale(\"en_US\"));\n+  filebuf::int_type c = fb.sgetc();\n+  assert(c == 'S');\n+  fb.close();\n+}\n+\n+int main()\n+{\n+  test01();\n+}"}, {"sha": "b96009e5c5f50b2fd2b6842166484dc10dc2d04e", "filename": "libstdc++-v3/testsuite/27_io/basic_filebuf/imbue/char/13171-3.cc", "status": "added", "additions": 56, "deletions": 0, "changes": 56, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c03d83d499d5db65063f2177c53ae22d69ec6b77/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_filebuf%2Fimbue%2Fchar%2F13171-3.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c03d83d499d5db65063f2177c53ae22d69ec6b77/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_filebuf%2Fimbue%2Fchar%2F13171-3.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_filebuf%2Fimbue%2Fchar%2F13171-3.cc?ref=c03d83d499d5db65063f2177c53ae22d69ec6b77", "patch": "@@ -0,0 +1,56 @@\n+// Copyright (C) 2003 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,\n+// USA.\n+\n+// 27.8.1.4 Overridden virtual functions\n+\n+#include <iostream>\n+#include <locale>\n+#include <testsuite_hooks.h>\n+\n+// libstdc++/13171\n+void test01()\n+{\n+  bool test __attribute__((unused)) = true;\n+  using namespace std;\n+\n+  locale::global(__gnu_test::try_named_locale(\"fr_FR\"));\n+\n+  ios_base::sync_with_stdio(false);\n+\n+  locale::global(locale(\"en_US\"));\n+  cin.imbue(locale(\"en_US\"));\n+  cout.imbue(locale(\"en_US\"));\n+  cerr.imbue(locale(\"en_US\"));\n+  clog.imbue(locale(\"de_DE\"));\n+  wcin.imbue(locale(\"en_US\"));\n+  wcout.imbue(locale(\"en_US\"));\n+  wcerr.imbue(locale(\"en_US\"));\n+  wclog.imbue(locale(\"de_DE\"));\n+  \n+  cout << 'f' << endl;\n+  cerr << 'r' << endl;\n+  clog << 'A' << endl;\n+  wcout << L's' << endl;\n+  wcerr << L'i' << endl;\n+  wclog << L'L' << endl;\n+}\n+\n+int main()\n+{\n+  test01();\n+}"}, {"sha": "497a35fea72f4ba257a98341952106b19646f7f7", "filename": "libstdc++-v3/testsuite/27_io/basic_filebuf/imbue/char/13171-4.cc", "status": "added", "additions": 54, "deletions": 0, "changes": 54, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c03d83d499d5db65063f2177c53ae22d69ec6b77/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_filebuf%2Fimbue%2Fchar%2F13171-4.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c03d83d499d5db65063f2177c53ae22d69ec6b77/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_filebuf%2Fimbue%2Fchar%2F13171-4.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_filebuf%2Fimbue%2Fchar%2F13171-4.cc?ref=c03d83d499d5db65063f2177c53ae22d69ec6b77", "patch": "@@ -0,0 +1,54 @@\n+// Copyright (C) 2003 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,\n+// USA.\n+\n+// 27.8.1.4 Overridden virtual functions\n+\n+#include <fstream>\n+#include <locale>\n+#include <testsuite_hooks.h>\n+\n+class Cvt : public std::codecvt<char, char, std::mbstate_t>\n+{\n+protected:\n+  int do_encoding() const throw()\n+  { return -1; }\n+\n+  bool do_always_noconv() const throw()\n+  { return false; }\n+};\n+\n+// libstdc++/13171\n+int test01()\n+{\n+  bool test __attribute__((unused)) = true;\n+  using namespace std;\n+\n+  filebuf fb;\n+  fb.pubimbue(locale(__gnu_test::try_named_locale(\"en_US\"),\n+\t\t     new Cvt));\n+  fb.open(\"tmp_13171-4\", ios_base::out);\n+  fb.pubimbue(__gnu_test::try_named_locale(\"fr_FR\"));\n+  fb.sputc('N');\n+  fb.pubsync();\n+  fb.close();\n+}\n+\n+int main()\n+{\n+  test01();\n+}"}, {"sha": "14842bc6fc70113ce3ee7c5a1bdb27d566747ee4", "filename": "libstdc++-v3/testsuite/27_io/basic_filebuf/imbue/char/2.cc", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c03d83d499d5db65063f2177c53ae22d69ec6b77/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_filebuf%2Fimbue%2Fchar%2F2.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c03d83d499d5db65063f2177c53ae22d69ec6b77/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_filebuf%2Fimbue%2Fchar%2F2.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_filebuf%2Fimbue%2Fchar%2F2.cc?ref=c03d83d499d5db65063f2177c53ae22d69ec6b77", "patch": "@@ -41,9 +41,7 @@ void test02()\n   pos_type p = ob.pubseekoff(2, ios_base::beg, ios_base::in);\n   VERIFY( p != bad);\n \n-  // \"if file is not positioned at its beginning\" imbue fails\n-  // but, according to 27.5.2.2.1, p1, still loc == getloc()\n-  // after pubimbue(loc).\n+  // According to 27.5.2.2.1, loc == getloc() after pubimbue(loc).\n   locale loc_de = __gnu_test::try_named_locale(\"de_DE\");\n   locale ret = ob.pubimbue(loc_de);\n   VERIFY( ob.getloc() == loc_de );"}, {"sha": "868ea59cea9c47da4c18ee33a5fb47a6e6c553c9", "filename": "libstdc++-v3/testsuite/27_io/basic_filebuf/imbue/char/3.cc", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c03d83d499d5db65063f2177c53ae22d69ec6b77/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_filebuf%2Fimbue%2Fchar%2F3.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c03d83d499d5db65063f2177c53ae22d69ec6b77/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_filebuf%2Fimbue%2Fchar%2F3.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_filebuf%2Fimbue%2Fchar%2F3.cc?ref=c03d83d499d5db65063f2177c53ae22d69ec6b77", "patch": "@@ -42,7 +42,8 @@ void test03()\n   ob.pubimbue(loc_s);\n   VERIFY( ob.getloc() == loc_s );\n \n-  // 2 \"if encoding of current locale is state dependent\" fails...\n+  // 2 \"if encoding of current locale is state dependent\" and\n+  // not at the beginning of the file fails...\n   locale loc_c = locale::classic();\n   locale ret = ob.pubimbue(loc_s);\n   VERIFY( ob.getloc() == loc_s );"}, {"sha": "67fccda2099208606ba70d0082fd0ef7bb81f5db", "filename": "libstdc++-v3/testsuite/27_io/basic_filebuf/imbue/wchar_t/12868.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c03d83d499d5db65063f2177c53ae22d69ec6b77/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_filebuf%2Fimbue%2Fwchar_t%2F12868.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c03d83d499d5db65063f2177c53ae22d69ec6b77/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_filebuf%2Fimbue%2Fwchar_t%2F12868.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_filebuf%2Fimbue%2Fwchar_t%2F12868.cc?ref=c03d83d499d5db65063f2177c53ae22d69ec6b77", "patch": "@@ -30,7 +30,7 @@ void test01()\n   using namespace std;\n   bool test __attribute__((unused)) = true;\n \n-  locale loc_is(__gnu_test::try_named_locale(\"is_IS\"));\n+  locale loc_is(__gnu_test::try_named_locale(\"is_IS.UTF-8\"));\n   \n   {\n     wofstream out(\"tmp_12868\");"}, {"sha": "1def258c7d639cf4c8e22f9dd1d9697daefbe990", "filename": "libstdc++-v3/testsuite/27_io/basic_filebuf/imbue/wchar_t/2.cc", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c03d83d499d5db65063f2177c53ae22d69ec6b77/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_filebuf%2Fimbue%2Fwchar_t%2F2.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c03d83d499d5db65063f2177c53ae22d69ec6b77/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_filebuf%2Fimbue%2Fwchar_t%2F2.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_filebuf%2Fimbue%2Fwchar_t%2F2.cc?ref=c03d83d499d5db65063f2177c53ae22d69ec6b77", "patch": "@@ -41,9 +41,7 @@ void test02()\n   pos_type p = ob.pubseekoff(2, ios_base::beg, ios_base::in);\n   VERIFY( p != bad);\n \n-  // \"if file is not positioned at its beginning\" imbue fails\n-  // but, according to 27.5.2.2.1, p1, still loc == getloc()\n-  // after pubimbue(loc).\n+  // According to 27.5.2.2.1, p1, loc == getloc() after pubimbue(loc).\n   locale loc_de = __gnu_test::try_named_locale(\"de_DE\");\n   locale ret = ob.pubimbue(loc_de);\n   VERIFY( ob.getloc() == loc_de );"}, {"sha": "5825f63fb23ffabc891e6ae9726a4330b0fcf916", "filename": "libstdc++-v3/testsuite/27_io/basic_filebuf/imbue/wchar_t/3.cc", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c03d83d499d5db65063f2177c53ae22d69ec6b77/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_filebuf%2Fimbue%2Fwchar_t%2F3.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c03d83d499d5db65063f2177c53ae22d69ec6b77/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_filebuf%2Fimbue%2Fwchar_t%2F3.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_filebuf%2Fimbue%2Fwchar_t%2F3.cc?ref=c03d83d499d5db65063f2177c53ae22d69ec6b77", "patch": "@@ -42,7 +42,8 @@ void test03()\n   ob.pubimbue(loc_s);\n   VERIFY( ob.getloc() == loc_s );\n \n-  // 2 \"if encoding of current locale is state dependent\" fails...\n+  // 2 \"if encoding of current locale is state dependent\" and\n+  // not at the beginning of the file fails...\n   locale loc_c = locale::classic();\n   locale ret = ob.pubimbue(loc_s);\n   VERIFY( ob.getloc() == loc_s );"}]}