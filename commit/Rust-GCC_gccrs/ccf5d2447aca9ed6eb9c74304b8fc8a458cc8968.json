{"sha": "ccf5d2447aca9ed6eb9c74304b8fc8a458cc8968", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2NmNWQyNDQ3YWNhOWVkNmViOWM3NDMwNGI4ZmM4YTQ1OGNjODk2OA==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1993-04-13T21:03:48Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1993-04-13T21:03:48Z"}, "message": "(expand_call): Last arg of emit_stack_save is NULL_RTX.\n\n(store_one_arg): Fourth arg to emit_push_insn is NULL_RTX.\n\nFrom-SVN: r4134", "tree": {"sha": "4fa3c5d3ef02728524dadf28129583dead0ad7f0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4fa3c5d3ef02728524dadf28129583dead0ad7f0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ccf5d2447aca9ed6eb9c74304b8fc8a458cc8968", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ccf5d2447aca9ed6eb9c74304b8fc8a458cc8968", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ccf5d2447aca9ed6eb9c74304b8fc8a458cc8968", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ccf5d2447aca9ed6eb9c74304b8fc8a458cc8968/comments", "author": null, "committer": null, "parents": [{"sha": "73a424d3a21a3ce668844d1d2ce04a190e4986a6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/73a424d3a21a3ce668844d1d2ce04a190e4986a6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/73a424d3a21a3ce668844d1d2ce04a190e4986a6"}], "stats": {"total": 7, "additions": 4, "deletions": 3}, "files": [{"sha": "be3a498eb2f64b2ec426329e78c479657b90829d", "filename": "gcc/calls.c", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ccf5d2447aca9ed6eb9c74304b8fc8a458cc8968/gcc%2Fcalls.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ccf5d2447aca9ed6eb9c74304b8fc8a458cc8968/gcc%2Fcalls.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcalls.c?ref=ccf5d2447aca9ed6eb9c74304b8fc8a458cc8968", "patch": "@@ -697,7 +697,7 @@ expand_call (exp, target, ignore)\n \t\t  adjust += reg_parm_stack_space;\n #endif\n \t\t  start_sequence ();\n-\t\t  emit_stack_save (SAVE_BLOCK, &old_stack_level, 0);\n+\t\t  emit_stack_save (SAVE_BLOCK, &old_stack_level, NULL_RTX);\n \t\t  allocate_dynamic_stack_space (GEN_INT (adjust),\n \t\t\t\t\t\tNULL_RTX, BITS_PER_UNIT);\n \t\t  seq = get_insns ();\n@@ -2778,8 +2778,9 @@ store_one_arg (arg, argblock, may_be_alloca, variable_size, fndecl,\n \n       /* This isn't already where we want it on the stack, so put it there.\n \t This can either be done with push or copy insns.  */\n-      emit_push_insn (arg->value, arg->mode, TREE_TYPE (pval), 0, 0, partial,\n-\t\t      reg, used - size, argblock, ARGS_SIZE_RTX (arg->offset));\n+      emit_push_insn (arg->value, arg->mode, TREE_TYPE (pval), NULL_RTX,\n+\t\t      0, partial, reg, used - size,\n+\t\t      argblock, ARGS_SIZE_RTX (arg->offset));\n     }\n   else\n     {"}]}