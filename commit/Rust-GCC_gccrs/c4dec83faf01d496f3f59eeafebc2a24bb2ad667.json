{"sha": "c4dec83faf01d496f3f59eeafebc2a24bb2ad667", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzRkZWM4M2ZhZjAxZDQ5NmYzZjU5ZWVhZmViYzJhMjRiYjJhZDY2Nw==", "commit": {"author": {"name": "Jose Ruiz", "email": "ruiz@adacore.com", "date": "2008-04-08T06:53:51Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2008-04-08T06:53:51Z"}, "message": "osint.ads, osint.adb (Get_Libraries_From_Registry): Improve documentation.\n\n2008-04-08  Jose Ruiz  <ruiz@adacore.com>\n\n\t* osint.ads, osint.adb (Get_Libraries_From_Registry): Improve\n\tdocumentation.\n\tUpdate comments.\n\t(Read_Default_Search_Dirs): Do not consider spaces as path separators\n\tbecause spaces may be part of legal paths.\n\nFrom-SVN: r134043", "tree": {"sha": "2ba4d971c0b9f3f21c8000b2573e577db180e75a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2ba4d971c0b9f3f21c8000b2573e577db180e75a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c4dec83faf01d496f3f59eeafebc2a24bb2ad667", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c4dec83faf01d496f3f59eeafebc2a24bb2ad667", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c4dec83faf01d496f3f59eeafebc2a24bb2ad667", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c4dec83faf01d496f3f59eeafebc2a24bb2ad667/comments", "author": {"login": "JoseRuizAdaCore", "id": 22770339, "node_id": "MDQ6VXNlcjIyNzcwMzM5", "avatar_url": "https://avatars.githubusercontent.com/u/22770339?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JoseRuizAdaCore", "html_url": "https://github.com/JoseRuizAdaCore", "followers_url": "https://api.github.com/users/JoseRuizAdaCore/followers", "following_url": "https://api.github.com/users/JoseRuizAdaCore/following{/other_user}", "gists_url": "https://api.github.com/users/JoseRuizAdaCore/gists{/gist_id}", "starred_url": "https://api.github.com/users/JoseRuizAdaCore/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JoseRuizAdaCore/subscriptions", "organizations_url": "https://api.github.com/users/JoseRuizAdaCore/orgs", "repos_url": "https://api.github.com/users/JoseRuizAdaCore/repos", "events_url": "https://api.github.com/users/JoseRuizAdaCore/events{/privacy}", "received_events_url": "https://api.github.com/users/JoseRuizAdaCore/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "3f088c35ec0faa8493b938c73443150d75722f63", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3f088c35ec0faa8493b938c73443150d75722f63", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3f088c35ec0faa8493b938c73443150d75722f63"}], "stats": {"total": 56, "additions": 49, "deletions": 7}, "files": [{"sha": "b226802cf0755b3b3f0aa69123143e3fbbdf7718", "filename": "gcc/ada/osint.adb", "status": "modified", "additions": 45, "deletions": 5, "changes": 50, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c4dec83faf01d496f3f59eeafebc2a24bb2ad667/gcc%2Fada%2Fosint.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c4dec83faf01d496f3f59eeafebc2a24bb2ad667/gcc%2Fada%2Fosint.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fosint.adb?ref=c4dec83faf01d496f3f59eeafebc2a24bb2ad667", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2007, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2008, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -250,7 +250,11 @@ package body Osint is\n       --\n       --  HKEY_LOCAL_MACHINE\\SOFTWARE\\Ada Core Technologies\\\n       --                             GNAT\\Standard Libraries\n-      --  Return an empty string on other systems\n+      --  Return an empty string on other systems.\n+      --\n+      --  Note that this is an undocumented legacy feature, and that it\n+      --  works only when using the default runtime library (i.e. no --RTS=\n+      --  command line switch).\n \n       --------------------\n       -- Add_Search_Dir --\n@@ -1874,6 +1878,31 @@ package body Osint is\n       Res : String_Access;\n \n    begin\n+      --  GNAAMP tool names require special treatment\n+\n+      if AAMP_On_Target then\n+\n+         --  The name \"gcc\" is mapped to \"gnaamp\" (the compiler driver)\n+\n+         if Nam = \"gcc\" then\n+            return new String'(\"gnaamp\");\n+\n+         --  Tool names starting with \"gnat\" are mapped by substituting the\n+         --  string \"gnaamp\" for \"gnat\" (for example, \"gnatpp\" => \"gnaamppp\").\n+\n+         elsif Nam'Length >= 4\n+           and then Nam (Nam'First .. Nam'First + 3) = \"gnat\"\n+         then\n+            return new String'(\"gnaamp\" & Nam (Nam'First + 4 .. Nam'Last));\n+\n+         --  No other mapping rules, so we continue and handle any other forms\n+         --  of tool names the same as on other targets.\n+\n+         else\n+            null;\n+         end if;\n+      end if;\n+\n       --  Get the name of the current program being executed\n \n       Find_Program_Name;\n@@ -1976,19 +2005,30 @@ package body Osint is\n          Curr := Curr + Actual_Len;\n       end loop;\n \n-      --  Process the file, translating line and file ending\n-      --  control characters to a path separator character.\n+      --  Process the file, dealing with path separators\n \n       Prev_Was_Separator := True;\n       Nb_Relative_Dir := 0;\n       for J in 1 .. Len loop\n-         if S (J) in ASCII.NUL .. ASCII.US or else S (J) = ' ' then\n+\n+         --  Treat any control character as a path separator. Note that we do\n+         --  not treat space as a path separator (we used to treat space as a\n+         --  path separator in an earlier version). That way space can appear\n+         --  as a legitimate character in a path name.\n+\n+         --  Why do we treat all control characters as path separators???\n+\n+         if S (J) in ASCII.NUL .. ASCII.US then\n             S (J) := Path_Separator;\n          end if;\n \n+         --  Test for explicit path separator (or control char as above)\n+\n          if S (J) = Path_Separator then\n             Prev_Was_Separator := True;\n \n+         --  If not path separator, register use of relative directory\n+\n          else\n             if Prev_Was_Separator and then Is_Relative (S.all, J) then\n                Nb_Relative_Dir := Nb_Relative_Dir + 1;"}, {"sha": "f2aed1ea03fe2854f724da77b09be3cd06ee78e2", "filename": "gcc/ada/osint.ads", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c4dec83faf01d496f3f59eeafebc2a24bb2ad667/gcc%2Fada%2Fosint.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c4dec83faf01d496f3f59eeafebc2a24bb2ad667/gcc%2Fada%2Fosint.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fosint.ads?ref=c4dec83faf01d496f3f59eeafebc2a24bb2ad667", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1992-2007, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2008, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -110,7 +110,9 @@ package Osint is\n    --  cross compilation case, looks at the prefix of the current program being\n    --  run and prepend it to Nam. For instance if the program being run is\n    --  <target>-gnatmake and Nam is \"gcc\", the returned value will be a pointer\n-   --  to \"<target>-gcc\". This function clobbers Name_Buffer and Name_Len.\n+   --  to \"<target>-gcc\". In the specific case where AAMP_On_Target is set, the\n+   --  name \"gcc\" is mapped to \"gnaamp\", and names of the form \"gnat*\" are\n+   --  mapped to \"gnaamp*\". This function clobbers Name_Buffer and Name_Len.\n \n    procedure Write_Program_Name;\n    --  Writes name of program as invoked to the current output"}]}