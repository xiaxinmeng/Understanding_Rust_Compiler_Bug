{"sha": "6ff7efb7375c3ef75c79eb6507d6768b80bb6d69", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmZmN2VmYjczNzVjM2VmNzVjNzllYjY1MDdkNjc2OGI4MGJiNmQ2OQ==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2020-01-15T11:35:22Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2020-01-15T11:35:22Z"}, "message": "Handle output of older git in gcc-descr and gcc-undescr aliases.", "tree": {"sha": "7b8944d1e697a8561588c52c1535dcd4856952ca", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7b8944d1e697a8561588c52c1535dcd4856952ca"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6ff7efb7375c3ef75c79eb6507d6768b80bb6d69", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6ff7efb7375c3ef75c79eb6507d6768b80bb6d69", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6ff7efb7375c3ef75c79eb6507d6768b80bb6d69", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6ff7efb7375c3ef75c79eb6507d6768b80bb6d69/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e61074228d1fb3eb828f5c15381b5761d6362004", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e61074228d1fb3eb828f5c15381b5761d6362004", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e61074228d1fb3eb828f5c15381b5761d6362004"}], "stats": {"total": 9, "additions": 7, "deletions": 2}, "files": [{"sha": "886d197af59eb34d79758f4c50bd1d586889e4c4", "filename": "contrib/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6ff7efb7375c3ef75c79eb6507d6768b80bb6d69/contrib%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6ff7efb7375c3ef75c79eb6507d6768b80bb6d69/contrib%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/contrib%2FChangeLog?ref=6ff7efb7375c3ef75c79eb6507d6768b80bb6d69", "patch": "@@ -1,3 +1,8 @@\n+2020-01-15  Jakub Jelinek  <jakub@redhat.com>\n+\n+\t* gcc-git-customization.sh: Handle output of older git which doesn't\n+\tprint tags/ prefixes before branchpoint/gcc-.\n+\n 2010-01-15  Richard Earnshaw  <rearnsha@arm.com>\n \n \t* gcc-git-customization.sh: Explain why we want the user's"}, {"sha": "af7d210217f9a5deb227f8478f767cc879530586", "filename": "contrib/gcc-git-customization.sh", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6ff7efb7375c3ef75c79eb6507d6768b80bb6d69/contrib%2Fgcc-git-customization.sh", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6ff7efb7375c3ef75c79eb6507d6768b80bb6d69/contrib%2Fgcc-git-customization.sh", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/contrib%2Fgcc-git-customization.sh?ref=6ff7efb7375c3ef75c79eb6507d6768b80bb6d69", "patch": "@@ -22,8 +22,8 @@ git config alias.svn-rev '!f() { rev=$1; shift; git log --all --grep=\"From-SVN:\n \n # Add git commands to convert git commit to monotonically increasing revision number\n # and vice versa\n-git config alias.gcc-descr \\!\"f() { if test \\${1:-no} = --full; then r=\\$(git describe --all --abbrev=40 --match 'basepoints/gcc-[0-9]*' \\${2:-master} | sed -n 's,^tags/basepoints/gcc-,r,p'); expr match \\${r:-no} '^r[0-9]\\\\+\\$' >/dev/null && r=\\${r}-0-g\\$(git rev-parse \\${2:-master}); test -n \\$r && echo \\${r}; else git describe --all --match 'basepoints/gcc-[0-9]*' \\${1:-master} | sed -n 's,^tags/basepoints/gcc-\\\\([0-9]\\\\+\\\\)-\\\\([0-9]\\\\+\\\\)-g[0-9a-f]*\\$,r\\\\1-\\\\2,p;s,^tags/basepoints/gcc-\\\\([0-9]\\\\+\\\\)\\$,r\\\\1-0,p'; fi; }; f\"\n-git config alias.gcc-undescr \\!\"f() { o=\\$(git config --get gcc-config.upstream); r=\\$(echo \\$1 | sed -n 's,^r\\\\([0-9]\\\\+\\\\)-[0-9]\\\\+\\$,\\\\1,p'); n=\\$(echo \\$1 | sed -n 's,^r[0-9]\\\\+-\\\\([0-9]\\\\+\\\\)\\$,\\\\1,p'); test -z \\$r && echo Invalid id \\$1 && exit 1; h=\\$(git rev-parse --verify --quiet \\${o:-origin}/releases/gcc-\\$r); test -z \\$h && h=\\$(git rev-parse --verify --quiet \\${o:-origin}/master); p=\\$(git describe --all --match 'basepoints/gcc-'\\$r \\$h | sed -n 's,^tags/basepoints/gcc-[0-9]\\\\+-\\\\([0-9]\\\\+\\\\)-g[0-9a-f]*\\$,\\\\1,p;s,^tags/basepoints/gcc-[0-9]\\\\+\\$,0,p'); git rev-parse --verify \\$h~\\$(expr \\$p - \\$n); }; f\"\n+git config alias.gcc-descr \\!\"f() { if test \\${1:-no} = --full; then r=\\$(git describe --all --abbrev=40 --match 'basepoints/gcc-[0-9]*' \\${2:-master} | sed -n 's,^\\\\(tags/\\\\)\\\\?basepoints/gcc-,r,p'); expr match \\${r:-no} '^r[0-9]\\\\+\\$' >/dev/null && r=\\${r}-0-g\\$(git rev-parse \\${2:-master}); test -n \\$r && echo \\${r}; else git describe --all --match 'basepoints/gcc-[0-9]*' \\${1:-master} | sed -n 's,^\\\\(tags/\\\\)\\\\?basepoints/gcc-\\\\([0-9]\\\\+\\\\)-\\\\([0-9]\\\\+\\\\)-g[0-9a-f]*\\$,r\\\\2-\\\\3,p;s,^\\\\(tags/\\\\)\\\\?basepoints/gcc-\\\\([0-9]\\\\+\\\\)\\$,r\\\\2-0,p'; fi; }; f\"\n+git config alias.gcc-undescr \\!\"f() { o=\\$(git config --get gcc-config.upstream); r=\\$(echo \\$1 | sed -n 's,^r\\\\([0-9]\\\\+\\\\)-[0-9]\\\\+\\$,\\\\1,p'); n=\\$(echo \\$1 | sed -n 's,^r[0-9]\\\\+-\\\\([0-9]\\\\+\\\\)\\$,\\\\1,p'); test -z \\$r && echo Invalid id \\$1 && exit 1; h=\\$(git rev-parse --verify --quiet \\${o:-origin}/releases/gcc-\\$r); test -z \\$h && h=\\$(git rev-parse --verify --quiet \\${o:-origin}/master); p=\\$(git describe --all --match 'basepoints/gcc-'\\$r \\$h | sed -n 's,^\\\\(tags/\\\\)\\\\?basepoints/gcc-[0-9]\\\\+-\\\\([0-9]\\\\+\\\\)-g[0-9a-f]*\\$,\\\\2,p;s,^\\\\(tags/\\\\)\\\\?basepoints/gcc-[0-9]\\\\+\\$,0,p'); git rev-parse --verify \\$h~\\$(expr \\$p - \\$n); }; f\"\n \n # Make diff on MD files uses \"(define\" as a function marker.\n # Use this in conjunction with a .gitattributes file containing"}]}