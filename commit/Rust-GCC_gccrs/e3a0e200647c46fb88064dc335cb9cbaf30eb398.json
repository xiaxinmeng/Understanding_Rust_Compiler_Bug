{"sha": "e3a0e200647c46fb88064dc335cb9cbaf30eb398", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTNhMGUyMDA2NDdjNDZmYjg4MDY0ZGMzMzVjYjljYmFmMzBlYjM5OA==", "commit": {"author": {"name": "Peter Bergner", "email": "bergner@vnet.ibm.com", "date": "2006-11-22T19:06:41Z"}, "committer": {"name": "Peter Bergner", "email": "bergner@gcc.gnu.org", "date": "2006-11-22T19:06:41Z"}, "message": "rs6000.c (get_store_dest): New.\n\n\t* config/rs6000/rs6000.c (get_store_dest): New.\n\t(adjacent_mem_locations): Use get_store_dest() to get\n\tthe rtl of the store destination.\n\nFrom-SVN: r119099", "tree": {"sha": "dee9e079a9d381fed8bb6b687080c2aaf3649754", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/dee9e079a9d381fed8bb6b687080c2aaf3649754"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e3a0e200647c46fb88064dc335cb9cbaf30eb398", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e3a0e200647c46fb88064dc335cb9cbaf30eb398", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e3a0e200647c46fb88064dc335cb9cbaf30eb398", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e3a0e200647c46fb88064dc335cb9cbaf30eb398/comments", "author": {"login": "peter-bergner", "id": 17504345, "node_id": "MDQ6VXNlcjE3NTA0MzQ1", "avatar_url": "https://avatars.githubusercontent.com/u/17504345?v=4", "gravatar_id": "", "url": "https://api.github.com/users/peter-bergner", "html_url": "https://github.com/peter-bergner", "followers_url": "https://api.github.com/users/peter-bergner/followers", "following_url": "https://api.github.com/users/peter-bergner/following{/other_user}", "gists_url": "https://api.github.com/users/peter-bergner/gists{/gist_id}", "starred_url": "https://api.github.com/users/peter-bergner/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/peter-bergner/subscriptions", "organizations_url": "https://api.github.com/users/peter-bergner/orgs", "repos_url": "https://api.github.com/users/peter-bergner/repos", "events_url": "https://api.github.com/users/peter-bergner/events{/privacy}", "received_events_url": "https://api.github.com/users/peter-bergner/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "61c76239491374472580e174a87c00f5bcbb93ed", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/61c76239491374472580e174a87c00f5bcbb93ed", "html_url": "https://github.com/Rust-GCC/gccrs/commit/61c76239491374472580e174a87c00f5bcbb93ed"}], "stats": {"total": 39, "additions": 36, "deletions": 3}, "files": [{"sha": "c6fdb9f1830fe083c4c060bd4b7c021a19859841", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e3a0e200647c46fb88064dc335cb9cbaf30eb398/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e3a0e200647c46fb88064dc335cb9cbaf30eb398/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=e3a0e200647c46fb88064dc335cb9cbaf30eb398", "patch": "@@ -1,3 +1,9 @@\n+2006-11-22  Peter Bergner  <bergner@vnet.ibm.com>\n+\n+\t* config/rs6000/rs6000.c (get_store_dest): New.\n+\t(adjacent_mem_locations): Use get_store_dest() to get\n+\tthe rtl of the store destination.\n+\n 2006-11-22  Joseph Myers  <joseph@codesourcery.com>\n \n \t* config/rs6000/spe.md (SPE64): New mode macro."}, {"sha": "51e51178a404832f2b6e0d1c7f180818e4e9dbce", "filename": "gcc/config/rs6000/rs6000.c", "status": "modified", "additions": 30, "deletions": 3, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e3a0e200647c46fb88064dc335cb9cbaf30eb398/gcc%2Fconfig%2Frs6000%2Frs6000.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e3a0e200647c46fb88064dc335cb9cbaf30eb398/gcc%2Fconfig%2Frs6000%2Frs6000.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.c?ref=e3a0e200647c46fb88064dc335cb9cbaf30eb398", "patch": "@@ -693,6 +693,7 @@ static bool is_nonpipeline_insn (rtx);\n static bool is_cracked_insn (rtx);\n static bool is_branch_slot_insn (rtx);\n static bool is_load_insn (rtx);\n+static rtx get_store_dest (rtx pat);\n static bool is_store_insn (rtx);\n static bool set_to_load_agen (rtx,rtx);\n static bool adjacent_mem_locations (rtx,rtx); \n@@ -17066,9 +17067,9 @@ static bool\n adjacent_mem_locations (rtx insn1, rtx insn2)\n {\n \n-  rtx a = SET_DEST (PATTERN (insn1));\n-  rtx b = SET_DEST (PATTERN (insn2));\n- \n+  rtx a = get_store_dest (PATTERN (insn1));\n+  rtx b = get_store_dest (PATTERN (insn2));\n+\n   if ((GET_CODE (XEXP (a, 0)) == REG\n        || (GET_CODE (XEXP (a, 0)) == PLUS\n \t   && GET_CODE (XEXP (XEXP (a, 0), 1)) == CONST_INT))\n@@ -17374,6 +17375,32 @@ is_store_insn (rtx insn)\n   return is_store_insn1 (PATTERN (insn));\n }\n \n+/* Return the dest of a store insn.  */\n+\n+static rtx\n+get_store_dest (rtx pat)\n+{\n+  gcc_assert (is_store_insn1 (pat));\n+\n+  if (GET_CODE (pat) == SET)\n+    return SET_DEST (pat);\n+  else if (GET_CODE (pat) == PARALLEL)\n+    {\n+      int i;\n+\n+      for (i = 0; i < XVECLEN (pat, 0); i++)\n+\t{\n+\t  rtx inner_pat = XVECEXP (pat, 0, i);\n+\t  if (GET_CODE (inner_pat) == SET\n+\t      && is_mem_ref (SET_DEST (inner_pat)))\n+\t    return inner_pat;\n+\t}\n+    }\n+  /* We shouldn't get here, because we should have either a simple\n+     store insn or a store with update which are covered above.  */\n+  gcc_unreachable();\n+}\n+\n /* Returns whether the dependence between INSN and NEXT is considered\n    costly by the given target.  */\n "}]}