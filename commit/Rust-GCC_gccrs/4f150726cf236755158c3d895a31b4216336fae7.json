{"sha": "4f150726cf236755158c3d895a31b4216336fae7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGYxNTA3MjZjZjIzNjc1NTE1OGMzZDg5NWEzMWI0MjE2MzM2ZmFlNw==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2019-03-11T21:58:43Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2019-03-11T21:58:43Z"}, "message": "re PR middle-end/89655 (GCC crashes building linux kernel for arm 32-bit (culprit r269453))\n\n\tPR middle-end/89655\n\tPR bootstrap/89656\n\t* vr-values.c (vr_values::update_value_range): If\n\told_vr->varying_p (), don't update it, make new_vr also VARYING\n\tand return false.\n\n\t* gcc.c-torture/compile/pr89655.c: New test.\n\nFrom-SVN: r269597", "tree": {"sha": "0b67df4f562bcc679f0b483d8037998b7b62cdad", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0b67df4f562bcc679f0b483d8037998b7b62cdad"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4f150726cf236755158c3d895a31b4216336fae7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4f150726cf236755158c3d895a31b4216336fae7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4f150726cf236755158c3d895a31b4216336fae7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4f150726cf236755158c3d895a31b4216336fae7/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "011acc898923f2511fc4ac2cbd21903cfe297a55", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/011acc898923f2511fc4ac2cbd21903cfe297a55", "html_url": "https://github.com/Rust-GCC/gccrs/commit/011acc898923f2511fc4ac2cbd21903cfe297a55"}], "stats": {"total": 38, "additions": 36, "deletions": 2}, "files": [{"sha": "64bf6017d16fb17faeb01f331b3db42b020351be", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4f150726cf236755158c3d895a31b4216336fae7/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4f150726cf236755158c3d895a31b4216336fae7/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=4f150726cf236755158c3d895a31b4216336fae7", "patch": "@@ -1,3 +1,11 @@\n+2019-03-11  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR middle-end/89655\n+\tPR bootstrap/89656\n+\t* vr-values.c (vr_values::update_value_range): If\n+\told_vr->varying_p (), don't update it, make new_vr also VARYING\n+\tand return false.\n+\n 2019-03-11  Martin Liska  <mliska@suse.cz>\n \n \t* config/aarch64/aarch64.c (aarch64_override_options_internal):"}, {"sha": "fdc7c40e4502d889f3551ae821e4c176d1078a55", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4f150726cf236755158c3d895a31b4216336fae7/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4f150726cf236755158c3d895a31b4216336fae7/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=4f150726cf236755158c3d895a31b4216336fae7", "patch": "@@ -1,3 +1,9 @@\n+2019-03-11  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR middle-end/89655\n+\tPR bootstrap/89656\n+\t* gcc.c-torture/compile/pr89655.c: New test.\n+\n 2019-03-11  Christophe Lyon  <christophe.lyon@linaro.org>\n \n \t* gcc.target/arm/f16_f64_conv_no_dp.c: Add arm_fp16_ok effective"}, {"sha": "f304c6732069fb110c3ea96cbe71fa17fc728e68", "filename": "gcc/testsuite/gcc.c-torture/compile/pr89655.c", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4f150726cf236755158c3d895a31b4216336fae7/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr89655.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4f150726cf236755158c3d895a31b4216336fae7/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr89655.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr89655.c?ref=4f150726cf236755158c3d895a31b4216336fae7", "patch": "@@ -0,0 +1,15 @@\n+/* PR middle-end/89655 */\n+\n+int a, b, d;\n+char *c;\n+\n+void\n+foo (void)\n+{\n+  int f = a;\n+  for (;;)\n+    {\n+      for (f = 0; f < (a > 3 ? : a); f++)\n+\tb = c[f] ? c[(f + 2 > a - 1 ? a - 1 : 2) * d] : 0;\n+    }\n+}"}, {"sha": "0e10aca92bbde90e03156dea0a9a40273f57f2e6", "filename": "gcc/vr-values.c", "status": "modified", "additions": 7, "deletions": 2, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4f150726cf236755158c3d895a31b4216336fae7/gcc%2Fvr-values.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4f150726cf236755158c3d895a31b4216336fae7/gcc%2Fvr-values.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fvr-values.c?ref=4f150726cf236755158c3d895a31b4216336fae7", "patch": "@@ -189,8 +189,13 @@ vr_values::update_value_range (const_tree var, value_range *new_vr)\n \t because VR_RANGE and VR_ANTI_RANGE need to be considered\n \t the same.  We may not have is_new when transitioning to\n \t UNDEFINED.  If old_vr->type is VARYING, we shouldn't be\n-\t called.  */\n-      if (new_vr->undefined_p ())\n+\t called, if we are anyway, keep it VARYING.  */\n+      if (old_vr->varying_p ())\n+\t{\n+\t  new_vr->set_varying ();\n+\t  is_new = false;\n+\t}\n+      else if (new_vr->undefined_p ())\n \t{\n \t  old_vr->set_varying ();\n \t  new_vr->set_varying ();"}]}