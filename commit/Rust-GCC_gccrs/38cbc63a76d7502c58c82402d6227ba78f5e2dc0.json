{"sha": "38cbc63a76d7502c58c82402d6227ba78f5e2dc0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzhjYmM2M2E3NmQ3NTAyYzU4YzgyNDAyZDYyMjdiYTc4ZjVlMmRjMA==", "commit": {"author": {"name": "Tobias Burnus", "email": "burnus@net-b.de", "date": "2012-02-07T08:15:14Z"}, "committer": {"name": "Tobias Burnus", "email": "burnus@gcc.gnu.org", "date": "2012-02-07T08:15:14Z"}, "message": "re PR fortran/51514 ([OOP] Wrong code when passing a scalar CLASS to a TYPE)\n\n2012-02-07  Tobias Burnus  <burnus@net-b.de>\n\n        PR fortran/51514\n        * trans-expr.c (gfc_conv_procedure_call): Add _data component\n        for calls of scalar CLASS actuals to TYPE dummies.\n\n2012-02-07  Tobias Burnus  <burnus@net-b.de>\n\n        PR fortran/51514\n        * gfortran.dg/class_to_type_2.f90: New.\n\nFrom-SVN: r183954", "tree": {"sha": "b368b5a5ba0cd4c8777cc6ffa787f9054825b052", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b368b5a5ba0cd4c8777cc6ffa787f9054825b052"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/38cbc63a76d7502c58c82402d6227ba78f5e2dc0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/38cbc63a76d7502c58c82402d6227ba78f5e2dc0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/38cbc63a76d7502c58c82402d6227ba78f5e2dc0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/38cbc63a76d7502c58c82402d6227ba78f5e2dc0/comments", "author": {"login": "tob2", "id": 264461, "node_id": "MDQ6VXNlcjI2NDQ2MQ==", "avatar_url": "https://avatars.githubusercontent.com/u/264461?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tob2", "html_url": "https://github.com/tob2", "followers_url": "https://api.github.com/users/tob2/followers", "following_url": "https://api.github.com/users/tob2/following{/other_user}", "gists_url": "https://api.github.com/users/tob2/gists{/gist_id}", "starred_url": "https://api.github.com/users/tob2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tob2/subscriptions", "organizations_url": "https://api.github.com/users/tob2/orgs", "repos_url": "https://api.github.com/users/tob2/repos", "events_url": "https://api.github.com/users/tob2/events{/privacy}", "received_events_url": "https://api.github.com/users/tob2/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "6009801342e283463cc15fe9aa514d162df7c430", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6009801342e283463cc15fe9aa514d162df7c430", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6009801342e283463cc15fe9aa514d162df7c430"}], "stats": {"total": 114, "additions": 114, "deletions": 0}, "files": [{"sha": "0a5fbd15ff7229fb8438fe57511f099deca7bd7e", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/38cbc63a76d7502c58c82402d6227ba78f5e2dc0/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/38cbc63a76d7502c58c82402d6227ba78f5e2dc0/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=38cbc63a76d7502c58c82402d6227ba78f5e2dc0", "patch": "@@ -1,3 +1,9 @@\n+2012-02-07  Tobias Burnus  <burnus@net-b.de>\n+\n+\tPR fortran/51514\n+\t* trans-expr.c (gfc_conv_procedure_call): Add _data component\n+\tfor calls of scalar CLASS actuals to TYPE dummies.\n+\n 2012-02-05  Thomas K\u00f6nig  <tkoenig@gcc.gnu.org>\n \n \tPR fortran/48847"}, {"sha": "db4d9622396e18f2400498bfa81eb3414344922c", "filename": "gcc/fortran/trans-expr.c", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/38cbc63a76d7502c58c82402d6227ba78f5e2dc0/gcc%2Ffortran%2Ftrans-expr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/38cbc63a76d7502c58c82402d6227ba78f5e2dc0/gcc%2Ffortran%2Ftrans-expr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ftrans-expr.c?ref=38cbc63a76d7502c58c82402d6227ba78f5e2dc0", "patch": "@@ -3619,6 +3619,12 @@ gfc_conv_procedure_call (gfc_se * se, gfc_symbol * sym,\n \t\t\t&& CLASS_DATA (e)->attr.dimension)\n \t\t    gfc_conv_class_to_class (&parmse, e, fsym->ts, false);\n \n+\t\t  if (fsym && fsym->ts.type == BT_DERIVED\n+\t\t      && e->ts.type == BT_CLASS\n+\t\t      && !CLASS_DATA (e)->attr.dimension\n+\t\t      && !CLASS_DATA (e)->attr.codimension)\n+\t\t    parmse.expr = gfc_class_data_get (parmse.expr);\n+\n \t\t  /* If an ALLOCATABLE dummy argument has INTENT(OUT) and is \n \t\t     allocated on entry, it must be deallocated.  */\n \t\t  if (fsym && fsym->attr.allocatable"}, {"sha": "a004ee1fdbf72bcbd31595c2c5780c898f9f6a17", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/38cbc63a76d7502c58c82402d6227ba78f5e2dc0/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/38cbc63a76d7502c58c82402d6227ba78f5e2dc0/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=38cbc63a76d7502c58c82402d6227ba78f5e2dc0", "patch": "@@ -1,3 +1,8 @@\n+2012-02-07  Tobias Burnus  <burnus@net-b.de>\n+\n+\tPR fortran/51514\n+\t* gfortran.dg/class_to_type_2.f90: New.\n+\n 2012-02-06  Thomas K\u00f6nig  <tkoenig@gcc.gnu.org>\n \n \tPR fortran/32373"}, {"sha": "75c2a887612b7f1ecbd0d0288ee9647d4155b486", "filename": "gcc/testsuite/gfortran.dg/class_to_type_2.f90", "status": "added", "additions": 97, "deletions": 0, "changes": 97, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/38cbc63a76d7502c58c82402d6227ba78f5e2dc0/gcc%2Ftestsuite%2Fgfortran.dg%2Fclass_to_type_2.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/38cbc63a76d7502c58c82402d6227ba78f5e2dc0/gcc%2Ftestsuite%2Fgfortran.dg%2Fclass_to_type_2.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fclass_to_type_2.f90?ref=38cbc63a76d7502c58c82402d6227ba78f5e2dc0", "patch": "@@ -0,0 +1,97 @@\n+! { dg-do run }\n+!\n+! PR fortran/51514\n+!\n+! Check that passing a CLASS to a TYPE works\n+!\n+! Based on a test case of Reinhold Bader.\n+!\n+\n+module mod_subpr\n+  implicit none\n+\n+  type :: foo\n+    integer :: i = 2\n+  end type\n+\n+  type, extends(foo) :: foo_1\n+    real :: r(2)\n+  end type\n+\n+contains\n+\n+  subroutine subpr (x)\n+    type(foo) :: x\n+    x%i = 3\n+  end subroutine\n+\n+  elemental subroutine subpr_elem (x)\n+    type(foo), intent(inout):: x\n+    x%i = 3\n+  end subroutine\n+\n+  subroutine subpr_array (x)\n+    type(foo), intent(inout):: x(:)\n+    x(:)%i = 3\n+  end subroutine\n+\n+  subroutine subpr2 (x)\n+    type(foo) :: x\n+    if (x%i /= 55) call abort ()\n+  end subroutine\n+\n+  subroutine subpr2_array (x)\n+    type(foo) :: x(:)\n+    if (any(x(:)%i /= 55)) call abort ()\n+  end subroutine\n+\n+  function f ()\n+    class(foo), allocatable :: f\n+    allocate (f)\n+    f%i = 55\n+  end function f\n+\n+  function g () result(res)\n+    class(foo), allocatable :: res(:)\n+    allocate (res(3))\n+    res(:)%i = 55\n+  end function g\n+end module\n+\n+program prog\n+  use mod_subpr\n+  implicit none\n+  class(foo), allocatable :: xx, yy(:)\n+\n+  allocate (foo_1 :: xx)\n+  xx%i = 33\n+  call subpr (xx)\n+  if (xx%i /= 3) call abort ()\n+\n+  xx%i = 33\n+  call subpr_elem (xx)\n+  if (xx%i /= 3) call abort ()\n+\n+  call subpr (f ())\n+\n+  allocate (foo_1 :: yy(2))\n+  yy(:)%i = 33\n+  call subpr_elem (yy)\n+  if (any (yy%i /= 3)) call abort ()\n+\n+  yy(:)%i = 33\n+  call subpr_elem (yy(1))\n+  if (yy(1)%i /= 3) call abort ()\n+\n+  yy(:)%i = 33\n+  call subpr_array (yy)\n+  if (any (yy%i /= 3)) call abort ()\n+\n+  yy(:)%i = 33\n+  call subpr_array (yy(1:2))\n+  if (any (yy(1:2)%i /= 3)) call abort ()\n+\n+ call subpr2_array (g ())\n+end program\n+\n+! { dg-final { cleanup-modules \"mod_subpr\" } }"}]}