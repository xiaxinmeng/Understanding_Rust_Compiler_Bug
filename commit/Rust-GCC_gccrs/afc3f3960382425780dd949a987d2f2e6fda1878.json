{"sha": "afc3f3960382425780dd949a987d2f2e6fda1878", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWZjM2YzOTYwMzgyNDI1NzgwZGQ5NDlhOTg3ZDJmMmU2ZmRhMTg3OA==", "commit": {"author": {"name": "Kazu Hirata", "email": "kazu@cs.umass.edu", "date": "2004-10-22T17:56:04Z"}, "committer": {"name": "Kazu Hirata", "email": "kazu@gcc.gnu.org", "date": "2004-10-22T17:56:04Z"}, "message": "tree-cfg.c (thread_jumps): Speed up by putting basic blocks into worklist instead of their indexes.\n\n\t* tree-cfg.c (thread_jumps): Speed up by putting basic blocks\n\tinto worklist instead of their indexes.\n\nFrom-SVN: r89461", "tree": {"sha": "009386467711149205f3079bc64d2d94a0aca3bc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/009386467711149205f3079bc64d2d94a0aca3bc"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/afc3f3960382425780dd949a987d2f2e6fda1878", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/afc3f3960382425780dd949a987d2f2e6fda1878", "html_url": "https://github.com/Rust-GCC/gccrs/commit/afc3f3960382425780dd949a987d2f2e6fda1878", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/afc3f3960382425780dd949a987d2f2e6fda1878/comments", "author": null, "committer": null, "parents": [{"sha": "7651d1b89e1de5698f746df76be8ba7a3cdfb702", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7651d1b89e1de5698f746df76be8ba7a3cdfb702", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7651d1b89e1de5698f746df76be8ba7a3cdfb702"}], "stats": {"total": 30, "additions": 14, "deletions": 16}, "files": [{"sha": "7a23a2d01049f3325a9f513a2311b887e209c274", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/afc3f3960382425780dd949a987d2f2e6fda1878/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/afc3f3960382425780dd949a987d2f2e6fda1878/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=afc3f3960382425780dd949a987d2f2e6fda1878", "patch": "@@ -1,3 +1,8 @@\n+2004-10-22  Kazu Hirata  <kazu@cs.umass.edu>\n+\n+\t* tree-cfg.c (thread_jumps): Speed up by putting basic blocks\n+\tinto worklist instead of their indexes.\n+\n 2004-10-22  Kazu Hirata  <kazu@cs.umass.edu>\n \n \t* alias.c, basic-block.h, cgraphunit.c, combine.c, domwalk.h,"}, {"sha": "0bf7b16b6b3d1a298a9891281d0d25675b27b0aa", "filename": "gcc/tree-cfg.c", "status": "modified", "additions": 9, "deletions": 16, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/afc3f3960382425780dd949a987d2f2e6fda1878/gcc%2Ftree-cfg.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/afc3f3960382425780dd949a987d2f2e6fda1878/gcc%2Ftree-cfg.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-cfg.c?ref=afc3f3960382425780dd949a987d2f2e6fda1878", "patch": "@@ -3942,7 +3942,7 @@ thread_jumps (void)\n {\n   basic_block bb;\n   bool retval = false;\n-  int *worklist = xmalloc (sizeof (int) * last_basic_block);\n+  basic_block *worklist = xmalloc (sizeof (basic_block) * last_basic_block);\n   unsigned int size = 0;\n \n   FOR_EACH_BB (bb)\n@@ -3951,11 +3951,11 @@ thread_jumps (void)\n       bb->flags &= ~BB_VISITED;\n     }\n \n-  /* Initialize WORKLIST by putting the indexes of non-forwarder\n-     blocks that immediately precede forwarder blocks because those\n-     are the ones that we know we can thread jumps from.  We use\n-     BB_VISITED to indicate that whether a given basic block is in\n-     WORKLIST or not, thereby avoiding duplicates in WORKLIST.  */\n+  /* Initialize WORKLIST by putting non-forwarder blocks that\n+     immediately precede forwarder blocks because those are the ones\n+     that we know we can thread jumps from.  We use BB_VISITED to\n+     indicate whether a given basic block is in WORKLIST or not,\n+     thereby avoiding duplicates in WORKLIST.  */\n   FOR_EACH_BB (bb)\n     {\n       edge_iterator ei;\n@@ -3981,7 +3981,7 @@ thread_jumps (void)\n \t      && (e->src->flags & BB_VISITED) == 0)\n \t    {\n \t      e->src->flags |= BB_VISITED;\n-\t      worklist[size] = e->src->index;\n+\t      worklist[size] = e->src;\n \t      size++;\n \t    }\n \t}\n@@ -3991,14 +3991,7 @@ thread_jumps (void)\n   while (size > 0)\n     {\n       size--;\n-      bb = BASIC_BLOCK (worklist[size]);\n-\n-      /* Check if BB is NULL because BB may have been deleted.  This\n-\t could happen if BB is originally a non-forwarder block, later\n-\t becomes a forwarder block, and it is deleted when a jump is\n-\t threaded through it.  */\n-      if (!bb)\n-\tcontinue;\n+      bb = worklist[size];\n \n       /* BB->INDEX is not longer in WORKLIST, so clear BB_VISITED.  */\n       bb->flags &= ~BB_VISITED;\n@@ -4029,7 +4022,7 @@ thread_jumps (void)\n \t\t      && (f->src->flags & BB_VISITED) == 0)\n \t\t    {\n \t\t      f->src->flags |= BB_VISITED;\n-\t\t      worklist[size] = f->src->index;\n+\t\t      worklist[size] = f->src;\n \t\t      size++;\n \t\t    }\n \t\t}"}]}