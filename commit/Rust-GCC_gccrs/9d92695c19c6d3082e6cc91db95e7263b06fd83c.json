{"sha": "9d92695c19c6d3082e6cc91db95e7263b06fd83c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OWQ5MjY5NWMxOWM2ZDMwODJlNmNjOTFkYjk1ZTcyNjNiMDZmZDgzYw==", "commit": {"author": {"name": "Adam Nemet", "email": "anemet@caviumnetworks.com", "date": "2008-10-08T21:05:43Z"}, "committer": {"name": "Adam Nemet", "email": "nemet@gcc.gnu.org", "date": "2008-10-08T21:05:43Z"}, "message": "octeon-exts-2.c: Compile it with -meb.\n\n\t* gcc.target/mips/octeon-exts-2.c: Compile it with -meb.\n\t* gcc.target/mips/octeon-exts-5.c: New test.\n\t* gcc.target/mips/octeon-bbit-3.c: Compile with -meb.  Add\n\tcomment why this is necessary.\n\nFrom-SVN: r140988", "tree": {"sha": "d3e5616ffe794014332b96fd407c516d10b18588", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d3e5616ffe794014332b96fd407c516d10b18588"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9d92695c19c6d3082e6cc91db95e7263b06fd83c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9d92695c19c6d3082e6cc91db95e7263b06fd83c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9d92695c19c6d3082e6cc91db95e7263b06fd83c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9d92695c19c6d3082e6cc91db95e7263b06fd83c/comments", "author": null, "committer": null, "parents": [{"sha": "88b98d1a0ccb87588adfffc4b215a99095867d50", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/88b98d1a0ccb87588adfffc4b215a99095867d50", "html_url": "https://github.com/Rust-GCC/gccrs/commit/88b98d1a0ccb87588adfffc4b215a99095867d50"}], "stats": {"total": 62, "additions": 60, "deletions": 2}, "files": [{"sha": "3991d9681c9ab73c930f63ab56a0f6bf7798cc30", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9d92695c19c6d3082e6cc91db95e7263b06fd83c/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9d92695c19c6d3082e6cc91db95e7263b06fd83c/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=9d92695c19c6d3082e6cc91db95e7263b06fd83c", "patch": "@@ -1,3 +1,10 @@\n+2008-10-08  Adam Nemet  <anemet@caviumnetworks.com>\n+\n+\t* gcc.target/mips/octeon-exts-2.c: Compile it with -meb.\n+\t* gcc.target/mips/octeon-exts-5.c: New test.\n+\t* gcc.target/mips/octeon-bbit-3.c: Compile with -meb.  Add\n+\tcomment why this is necessary.\n+\n 2008-10-08  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR target/36635"}, {"sha": "fd01f12181d5e9f1ec72b03d03cf578b293fe41f", "filename": "gcc/testsuite/gcc.target/mips/octeon-bbit-3.c", "status": "modified", "additions": 14, "deletions": 1, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9d92695c19c6d3082e6cc91db95e7263b06fd83c/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Focteon-bbit-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9d92695c19c6d3082e6cc91db95e7263b06fd83c/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Focteon-bbit-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Focteon-bbit-3.c?ref=9d92695c19c6d3082e6cc91db95e7263b06fd83c", "patch": "@@ -1,5 +1,18 @@\n /* { dg-do compile } */\n-/* { dg-mips-options \"-O2 -march=octeon\" } */\n+\n+/* Force big-endian because for little-endian, combine generates this:\n+\n+ (if_then_else (ne (zero_extract:DI (subreg:DI (truncate:SI (reg:DI 196)) 0) \n+                 (const_int 1) \n+                 (const_int 0)) \n+             (const_int 0)) \n+         (label_ref 20) \n+         (pc))) \n+\n+  which does not get recognized as a valid bbit pattern.  The\n+  middle-end should be able to simplify this further.  */\n+/* { dg-mips-options \"-O2 -march=octeon -meb\" } */\n+\n /* { dg-final { scan-assembler-times \"\\tbbit\\[01\\]\\t|\\tbgez\\t\" 2 } } */\n /* { dg-final { scan-assembler-not \"ext\\t\" } } */\n "}, {"sha": "7847cf9411b246fd82991419120d3af7f01f5dd0", "filename": "gcc/testsuite/gcc.target/mips/octeon-exts-2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9d92695c19c6d3082e6cc91db95e7263b06fd83c/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Focteon-exts-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9d92695c19c6d3082e6cc91db95e7263b06fd83c/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Focteon-exts-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Focteon-exts-2.c?ref=9d92695c19c6d3082e6cc91db95e7263b06fd83c", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do compile } */\n-/* { dg-mips-options \"-O -march=octeon\" } */\n+/* { dg-mips-options \"-O -march=octeon -meb\" } */\n /* { dg-final { scan-assembler-times \"\\texts\\t\" 4 } } */\n \n struct bar"}, {"sha": "31251e74763b7ec52db04d7a393c8187ec9471fa", "filename": "gcc/testsuite/gcc.target/mips/octeon-exts-5.c", "status": "added", "additions": 38, "deletions": 0, "changes": 38, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9d92695c19c6d3082e6cc91db95e7263b06fd83c/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Focteon-exts-5.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9d92695c19c6d3082e6cc91db95e7263b06fd83c/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Focteon-exts-5.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Focteon-exts-5.c?ref=9d92695c19c6d3082e6cc91db95e7263b06fd83c", "patch": "@@ -0,0 +1,38 @@\n+/* -mel version of octeon-exts-2.c.  */\n+/* { dg-do compile } */\n+/* { dg-mips-options \"-O -march=octeon -mel\" } */\n+/* { dg-final { scan-assembler-times \"\\texts\\t\" 4 } } */\n+\n+struct bar\n+{\n+  long long d:1;\n+  unsigned long long c:48;\n+  long long b:14;\n+  unsigned long long a:1;\n+};\n+\n+NOMIPS16 int\n+f1 (struct bar *s, int a)\n+{\n+  return (int) s->b + a;\n+}\n+\n+NOMIPS16 char\n+f2 (struct bar *s)\n+{\n+  return s->d + 1;\n+}\n+\n+NOMIPS16 int\n+f3 ()\n+{\n+  struct bar s;\n+  asm (\"\" : \"=r\"(s));\n+  return (int) s.b + 1;\n+}\n+\n+NOMIPS16 long long\n+f4 (struct bar *s)\n+{\n+  return s->d;\n+}"}]}