{"sha": "94339136a385182905f44ba2b971ba1da0dd7824", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTQzMzkxMzZhMzg1MTgyOTA1ZjQ0YmEyYjk3MWJhMWRhMGRkNzgyNA==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1996-12-12T12:55:45Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1996-12-12T12:55:45Z"}, "message": "(function_arg, {movcnt,mod}_regno_adjust): Add decls.\n\n(branch_or_jump): Likewise.\n\nFrom-SVN: r13291", "tree": {"sha": "32fc7d89a3baf2b8ea575f1706a4afa40e63fa4c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/32fc7d89a3baf2b8ea575f1706a4afa40e63fa4c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/94339136a385182905f44ba2b971ba1da0dd7824", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/94339136a385182905f44ba2b971ba1da0dd7824", "html_url": "https://github.com/Rust-GCC/gccrs/commit/94339136a385182905f44ba2b971ba1da0dd7824", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/94339136a385182905f44ba2b971ba1da0dd7824/comments", "author": null, "committer": null, "parents": [{"sha": "7b64da89ba1a942bdbdde8dfba63805ae3d2fbc3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7b64da89ba1a942bdbdde8dfba63805ae3d2fbc3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7b64da89ba1a942bdbdde8dfba63805ae3d2fbc3"}], "stats": {"total": 14, "additions": 5, "deletions": 9}, "files": [{"sha": "889121ce7110a4c32ade4333a833fee983237ec5", "filename": "gcc/config/1750a/1750a.h", "status": "modified", "additions": 5, "deletions": 9, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/94339136a385182905f44ba2b971ba1da0dd7824/gcc%2Fconfig%2F1750a%2F1750a.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/94339136a385182905f44ba2b971ba1da0dd7824/gcc%2Fconfig%2F1750a%2F1750a.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2F1750a%2F1750a.h?ref=94339136a385182905f44ba2b971ba1da0dd7824", "patch": "@@ -67,6 +67,10 @@ extern int datalbl_ndx, jmplbl_ndx, label_pending, program_counter;\n extern enum section current_section;\n extern char *sectname[4];\n extern char *xstrdup(), *float_label();\n+extern struct rtx_def *function_arg ();\n+extern char *movcnt_regno_adjust ();\n+extern char *mod_regno_adjust ();\n+extern char *branch_or_jump ();\n #endif\n /*--------------------------------------------------------------------*/\n \n@@ -542,15 +546,7 @@ enum reg_class { NO_REGS, R2, R0_1, INDEX_REGS, BASE_REGS, ALL_REGS, LIM_REG_CLA\n    NAMED is nonzero if this argument is a named parameter\n     (otherwise it is an extra parameter matching an ellipsis).  */\n \n-#define FUNCTION_ARG(CUM, MODE, TYPE, NAMED) \\\n-\t(rtx) function_arg(CUM,MODE,TYPE,NAMED)\n-/*\n- (! MUST_PASS_IN_STACK(MODE,TYPE) &&\t\t\t\t\\\n-  14 >= (CUM) +\t\t\t\t\t\t\t\\\n-  ((MODE)==BLKmode ? int_size_in_bytes(TYPE) : GET_MODE_SIZE (MODE))  \\\n- ? gen_rtx (REG, MODE, CUM)\t\t\t\t\t\\\n- : 0)\n-*/\n+#define FUNCTION_ARG(CUM, MODE, TYPE, NAMED) function_arg (CUM,MODE,TYPE,NAMED)\n \n /* Define the following macro if function calls on the target machine\n    do not preserve any registers; in other words, if `CALL_USED_REGISTERS'"}]}