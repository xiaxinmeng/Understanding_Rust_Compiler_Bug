{"sha": "ba9146c16bc6a7f3539e4cef5f5a9a8207de66ad", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmE5MTQ2YzE2YmM2YTdmMzUzOWU0Y2VmNWY1YTlhODIwN2RlNjZhZA==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2013-02-11T15:47:46Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2013-02-11T15:47:46Z"}, "message": "re PR c++/56268 (C++11 ICE with boost multi-precision and boost variant during assignment)\n\n\tPR c++/56268\n\t* semantics.c (classtype_has_nothrow_assign_or_copy_p): Call\n\tmaybe_instantiate_noexcept.\n\nFrom-SVN: r195943", "tree": {"sha": "5105e6f42180260efa04a494310401106c8b3e5e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5105e6f42180260efa04a494310401106c8b3e5e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ba9146c16bc6a7f3539e4cef5f5a9a8207de66ad", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ba9146c16bc6a7f3539e4cef5f5a9a8207de66ad", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ba9146c16bc6a7f3539e4cef5f5a9a8207de66ad", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ba9146c16bc6a7f3539e4cef5f5a9a8207de66ad/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "e77439af649673f35b9fea054c8a9c13d4162588", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e77439af649673f35b9fea054c8a9c13d4162588", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e77439af649673f35b9fea054c8a9c13d4162588"}], "stats": {"total": 24, "additions": 24, "deletions": 0}, "files": [{"sha": "6172db65e75f54a76a62e973ba15bc88248c5c11", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ba9146c16bc6a7f3539e4cef5f5a9a8207de66ad/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ba9146c16bc6a7f3539e4cef5f5a9a8207de66ad/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=ba9146c16bc6a7f3539e4cef5f5a9a8207de66ad", "patch": "@@ -1,5 +1,9 @@\n 2013-02-09  Jason Merrill  <jason@redhat.com>\n \n+\tPR c++/56268\n+\t* semantics.c (classtype_has_nothrow_assign_or_copy_p): Call\n+\tmaybe_instantiate_noexcept.\n+\n \tPR c++/56247\n \t* pt.c (eq_specializations): Set comparing_specializations.\n \t* tree.c (cp_tree_equal): Check it."}, {"sha": "e3dea091b9a3bae60d76221c31bf4e4343901a1c", "filename": "gcc/cp/semantics.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ba9146c16bc6a7f3539e4cef5f5a9a8207de66ad/gcc%2Fcp%2Fsemantics.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ba9146c16bc6a7f3539e4cef5f5a9a8207de66ad/gcc%2Fcp%2Fsemantics.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fsemantics.c?ref=ba9146c16bc6a7f3539e4cef5f5a9a8207de66ad", "patch": "@@ -5413,6 +5413,7 @@ classtype_has_nothrow_assign_or_copy_p (tree type, bool assign_p)\n       else if (copy_fn_p (fn) <= 0)\n \tcontinue;\n \n+      maybe_instantiate_noexcept (fn);\n       if (!TYPE_NOTHROW_P (TREE_TYPE (fn)))\n \treturn false;\n     }"}, {"sha": "e1be1a0a771c8818c2d32c7bc8f28a49261f4eb3", "filename": "gcc/testsuite/g++.dg/ext/has_nothrow_copy-8.C", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ba9146c16bc6a7f3539e4cef5f5a9a8207de66ad/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fhas_nothrow_copy-8.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ba9146c16bc6a7f3539e4cef5f5a9a8207de66ad/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fhas_nothrow_copy-8.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fhas_nothrow_copy-8.C?ref=ba9146c16bc6a7f3539e4cef5f5a9a8207de66ad", "patch": "@@ -0,0 +1,19 @@\n+// PR c++/56268\n+// { dg-options -std=c++11 }\n+\n+template <class T>\n+struct A {\n+  A(const A&) noexcept (T::value);\n+};\n+\n+struct B {\n+  static const bool value = true;\n+};\n+\n+template <class T>\n+struct C {\n+  static const bool value = __has_nothrow_copy (T);\n+};\n+\n+#define SA(X) static_assert((X),#X)\n+SA(C<A<B>>::value);"}]}