{"sha": "adb7a1cbf237864296f6d1d3dbb6a6f36ab4a3e7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWRiN2ExY2JmMjM3ODY0Mjk2ZjZkMWQzZGJiNmE2ZjM2YWI0YTNlNw==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1993-04-28T18:55:47Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1993-04-28T18:55:47Z"}, "message": "(force_to_mode, simplify_comparison): Cast to unsiged HOST_WIDE_INT\ninstead of unsigned int.\n\nFrom-SVN: r4258", "tree": {"sha": "c9dd5ab5446cd8caeabd44223418301ee2dfc2b9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c9dd5ab5446cd8caeabd44223418301ee2dfc2b9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/adb7a1cbf237864296f6d1d3dbb6a6f36ab4a3e7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/adb7a1cbf237864296f6d1d3dbb6a6f36ab4a3e7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/adb7a1cbf237864296f6d1d3dbb6a6f36ab4a3e7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/adb7a1cbf237864296f6d1d3dbb6a6f36ab4a3e7/comments", "author": null, "committer": null, "parents": [{"sha": "e36a3b5d26b0b9d3cce70594cbdf70e5bf14c01b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e36a3b5d26b0b9d3cce70594cbdf70e5bf14c01b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e36a3b5d26b0b9d3cce70594cbdf70e5bf14c01b"}], "stats": {"total": 4, "additions": 2, "deletions": 2}, "files": [{"sha": "e900c7cc1225428750bed159cf16f06bf829dba9", "filename": "gcc/combine.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/adb7a1cbf237864296f6d1d3dbb6a6f36ab4a3e7/gcc%2Fcombine.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/adb7a1cbf237864296f6d1d3dbb6a6f36ab4a3e7/gcc%2Fcombine.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcombine.c?ref=adb7a1cbf237864296f6d1d3dbb6a6f36ab4a3e7", "patch": "@@ -5400,7 +5400,7 @@ force_to_mode (x, mode, bits, reg)\n \t     && INTVAL (XEXP (x, 1)) < GET_MODE_BITSIZE (mode))\n \t  && ! (GET_MODE (XEXP (x, 1)) != VOIDmode\n \t\t&& (nonzero_bits (XEXP (x, 1), GET_MODE (XEXP (x, 1)))\n-\t\t    < (unsigned) GET_MODE_BITSIZE (mode))))\n+\t\t    < (unsigned HOST_WIDE_INT) GET_MODE_BITSIZE (mode))))\n \tbreak;\n \t\n       if (GET_CODE (XEXP (x, 1)) == CONST_INT && INTVAL (XEXP (x, 1)) < bits)\n@@ -8353,7 +8353,7 @@ simplify_comparison (code, pop0, pop1)\n \t      && INTVAL (XEXP (SUBREG_REG (op0), 1)) < 0\n \t      && (- INTVAL (XEXP (SUBREG_REG (op0), 1))\n \t\t  < GET_MODE_MASK (mode) / 2)\n-\t      && (unsigned) const_op < GET_MODE_MASK (mode) / 2\n+\t      && (unsigned HOST_WIDE_INT) const_op < GET_MODE_MASK (mode) / 2\n \t      && (0 == (nonzero_bits (XEXP (SUBREG_REG (op0), 0),\n \t\t\t\t      GET_MODE (SUBREG_REG (op0)))\n \t\t\t& ~ GET_MODE_MASK (mode))"}]}