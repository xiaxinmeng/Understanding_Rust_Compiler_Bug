{"sha": "c696c6f311f1557e36b9b935ba9b0a732477438d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzY5NmM2ZjMxMWYxNTU3ZTM2YjliOTM1YmE5YjBhNzMyNDc3NDM4ZA==", "commit": {"author": {"name": "Tobias Burnus", "email": "burnus@net-b.de", "date": "2012-01-27T13:59:04Z"}, "committer": {"name": "Tobias Burnus", "email": "burnus@gcc.gnu.org", "date": "2012-01-27T13:59:04Z"}, "message": "re PR fortran/52016 ([OOP] Polymorphism and elemental: missing diagnostic)\n\n2012-01-27  Tobias Burnus  <burnus@net-b.de>\n\n        PR fortran/52016\n        * resolve.c (resolve_formal_arglist): Fix elemental\n        constraint checks for polymorphic dummies also for\n        pointers.\n\nFrom-SVN: r183625", "tree": {"sha": "f725e8f29706eddabada7f9d20a5220aeae751c0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f725e8f29706eddabada7f9d20a5220aeae751c0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c696c6f311f1557e36b9b935ba9b0a732477438d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c696c6f311f1557e36b9b935ba9b0a732477438d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c696c6f311f1557e36b9b935ba9b0a732477438d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c696c6f311f1557e36b9b935ba9b0a732477438d/comments", "author": {"login": "tob2", "id": 264461, "node_id": "MDQ6VXNlcjI2NDQ2MQ==", "avatar_url": "https://avatars.githubusercontent.com/u/264461?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tob2", "html_url": "https://github.com/tob2", "followers_url": "https://api.github.com/users/tob2/followers", "following_url": "https://api.github.com/users/tob2/following{/other_user}", "gists_url": "https://api.github.com/users/tob2/gists{/gist_id}", "starred_url": "https://api.github.com/users/tob2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tob2/subscriptions", "organizations_url": "https://api.github.com/users/tob2/orgs", "repos_url": "https://api.github.com/users/tob2/repos", "events_url": "https://api.github.com/users/tob2/events{/privacy}", "received_events_url": "https://api.github.com/users/tob2/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "3881dee9f01e9de110260ca5ee2be0a50d4e361b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3881dee9f01e9de110260ca5ee2be0a50d4e361b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3881dee9f01e9de110260ca5ee2be0a50d4e361b"}], "stats": {"total": 11, "additions": 10, "deletions": 1}, "files": [{"sha": "b54ad3d6a1a03c7ee03303a48523ca86a35c6b12", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c696c6f311f1557e36b9b935ba9b0a732477438d/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c696c6f311f1557e36b9b935ba9b0a732477438d/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=c696c6f311f1557e36b9b935ba9b0a732477438d", "patch": "@@ -1,3 +1,10 @@\n+2012-01-27  Tobias Burnus  <burnus@net-b.de>\n+\n+\tPR fortran/52016\n+\t* resolve.c (resolve_formal_arglist): Fix elemental\n+\tconstraint checks for polymorphic dummies also for\n+\tpointers.\n+\t\n 2012-01-27  Tobias Burnus  <burnus@net-b.de>\n \n \tPR fortran/51970"}, {"sha": "2a967120d29fec5569dbb97393b02cf68cf39193", "filename": "gcc/fortran/resolve.c", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c696c6f311f1557e36b9b935ba9b0a732477438d/gcc%2Ffortran%2Fresolve.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c696c6f311f1557e36b9b935ba9b0a732477438d/gcc%2Ffortran%2Fresolve.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fresolve.c?ref=c696c6f311f1557e36b9b935ba9b0a732477438d", "patch": "@@ -401,7 +401,9 @@ resolve_formal_arglist (gfc_symbol *proc)\n \t      continue;\n \t    }\n \n-\t  if (sym->attr.pointer)\n+\t  if (sym->attr.pointer\n+\t      || (sym->ts.type == BT_CLASS && CLASS_DATA (sym)\n+\t\t  && CLASS_DATA (sym)->attr.class_pointer))\n \t    {\n \t      gfc_error (\"Argument '%s' of elemental procedure at %L cannot \"\n \t\t\t \"have the POINTER attribute\", sym->name,"}]}