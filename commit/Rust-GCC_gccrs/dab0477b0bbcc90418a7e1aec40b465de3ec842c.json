{"sha": "dab0477b0bbcc90418a7e1aec40b465de3ec842c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGFiMDQ3N2IwYmJjYzkwNDE4YTdlMWFlYzQwYjQ2NWRlM2VjODQyYw==", "commit": {"author": {"name": "Uros Bizjak", "email": "ubizjak@gmail.com", "date": "2019-07-02T15:48:36Z"}, "committer": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2019-07-02T15:48:36Z"}, "message": "mmx.md (mmx_pack<s_trunsuffix>swb): Use TARGET_SSE2 && SSE_REGNO_P in split condition.\n\n\t* config/i386/mmx.md (mmx_pack<s_trunsuffix>swb):\n\tUse TARGET_SSE2 && SSE_REGNO_P in split condition.\n\t(mmx_packssdw): Ditto.\n\t(mmx_punpckhbw): Ditto.\n\t(mmx_punpcklbw): Ditto.\n\t(mmx_punpckhwd): Ditto.\n\t(mmx_punpcklwd): Ditto.\n\t(mmx_punpckhdq): Ditto.\n\t(mmx_punpckldq): Ditto.\n\t(*vec_dupv4hi): Ditto.\n\t(*vec_dupv2si): Ditto.\n\t(mmx_pmovmskb): Ditto.\n\t* config/i386/sse.md (sse_cvtpi2ps): Use\n\tTARGET_SSE2 && SSE_REG_P in split condition.\n\t(ssse3_ph<plusminus_mnemonic>wv4hi3): Use\n\tTARGET_SSSE3 && SSE_REGNO_P in split condition.\n\t(ssse3_ph<plusminus_mnemonic>dv2si3): Ditto.\n\t(ssse3_pshufbv8qi3): Ditto.\n\t(ssse3_palignrdi): Ditto.\n\nFrom-SVN: r272943", "tree": {"sha": "2df9afa0241a6f9c7e844ebe304ed5473e3e4e67", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2df9afa0241a6f9c7e844ebe304ed5473e3e4e67"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/dab0477b0bbcc90418a7e1aec40b465de3ec842c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dab0477b0bbcc90418a7e1aec40b465de3ec842c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/dab0477b0bbcc90418a7e1aec40b465de3ec842c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dab0477b0bbcc90418a7e1aec40b465de3ec842c/comments", "author": {"login": "ubizjak", "id": 55479990, "node_id": "MDQ6VXNlcjU1NDc5OTkw", "avatar_url": "https://avatars.githubusercontent.com/u/55479990?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ubizjak", "html_url": "https://github.com/ubizjak", "followers_url": "https://api.github.com/users/ubizjak/followers", "following_url": "https://api.github.com/users/ubizjak/following{/other_user}", "gists_url": "https://api.github.com/users/ubizjak/gists{/gist_id}", "starred_url": "https://api.github.com/users/ubizjak/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ubizjak/subscriptions", "organizations_url": "https://api.github.com/users/ubizjak/orgs", "repos_url": "https://api.github.com/users/ubizjak/repos", "events_url": "https://api.github.com/users/ubizjak/events{/privacy}", "received_events_url": "https://api.github.com/users/ubizjak/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "8108da8a555410260039b932301bc6126de0f5e0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8108da8a555410260039b932301bc6126de0f5e0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8108da8a555410260039b932301bc6126de0f5e0"}], "stats": {"total": 67, "additions": 52, "deletions": 15}, "files": [{"sha": "f40d55e0d3f364d8555a342be1d4da29f40482f9", "filename": "gcc/ChangeLog", "status": "modified", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dab0477b0bbcc90418a7e1aec40b465de3ec842c/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dab0477b0bbcc90418a7e1aec40b465de3ec842c/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=dab0477b0bbcc90418a7e1aec40b465de3ec842c", "patch": "@@ -1,3 +1,25 @@\n+2019-07-02  Uro\u0161 Bizjak  <ubizjak@gmail.com>\n+\n+\t* config/i386/mmx.md (mmx_pack<s_trunsuffix>swb):\n+\tUse TARGET_SSE2 && SSE_REGNO_P in split condition.\n+\t(mmx_packssdw): Ditto.\n+\t(mmx_punpckhbw): Ditto.\n+\t(mmx_punpcklbw): Ditto.\n+\t(mmx_punpckhwd): Ditto.\n+\t(mmx_punpcklwd): Ditto.\n+\t(mmx_punpckhdq): Ditto.\n+\t(mmx_punpckldq): Ditto.\n+\t(*vec_dupv4hi): Ditto.\n+\t(*vec_dupv2si): Ditto.\n+\t(mmx_pmovmskb): Ditto.\n+\t* config/i386/sse.md (sse_cvtpi2ps): Use\n+\tTARGET_SSE2 && SSE_REG_P in split condition.\n+\t(ssse3_ph<plusminus_mnemonic>wv4hi3): Use\n+\tTARGET_SSSE3 && SSE_REGNO_P in split condition.\n+\t(ssse3_ph<plusminus_mnemonic>dv2si3): Ditto.\n+\t(ssse3_pshufbv8qi3): Ditto.\n+\t(ssse3_palignrdi): Ditto.\n+\n 2019-07-02  Andrew Stubbs  <ams@codesourcery.com>\n \n \t* config/gcn/gcn.md (movdi_symbol_save_scc): Convert to define_insn"}, {"sha": "4c71e66e6607803fc6ede43f0d3315458709710e", "filename": "gcc/config/i386/mmx.md", "status": "modified", "additions": 20, "deletions": 10, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dab0477b0bbcc90418a7e1aec40b465de3ec842c/gcc%2Fconfig%2Fi386%2Fmmx.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dab0477b0bbcc90418a7e1aec40b465de3ec842c/gcc%2Fconfig%2Fi386%2Fmmx.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fmmx.md?ref=dab0477b0bbcc90418a7e1aec40b465de3ec842c", "patch": "@@ -1228,7 +1228,8 @@\n    pack<s_trunsuffix>swb\\t{%2, %0|%0, %2}\n    #\n    #\"\n-  \"TARGET_MMX_WITH_SSE && reload_completed\"\n+  \"TARGET_SSE2 && reload_completed\n+   && SSE_REGNO_P (REGNO (operands[0]))\"\n   [(const_int 0)]\n   \"ix86_split_mmx_pack (operands, <any_s_truncate:CODE>); DONE;\"\n   [(set_attr \"mmx_isa\" \"native,sse_noavx,avx\")\n@@ -1247,7 +1248,8 @@\n    packssdw\\t{%2, %0|%0, %2}\n    #\n    #\"\n-  \"TARGET_MMX_WITH_SSE && reload_completed\"\n+  \"TARGET_SSE2 && reload_completed\n+   && SSE_REGNO_P (REGNO (operands[0]))\"\n   [(const_int 0)]\n   \"ix86_split_mmx_pack (operands, SS_TRUNCATE); DONE;\"\n   [(set_attr \"mmx_isa\" \"native,sse_noavx,avx\")\n@@ -1269,7 +1271,8 @@\n    punpckhbw\\t{%2, %0|%0, %2}\n    #\n    #\"\n-  \"TARGET_MMX_WITH_SSE && reload_completed\"\n+  \"TARGET_SSE2 && reload_completed\n+   && SSE_REGNO_P (REGNO (operands[0]))\"\n   [(const_int 0)]\n   \"ix86_split_mmx_punpck (operands, true); DONE;\"\n   [(set_attr \"mmx_isa\" \"native,sse_noavx,avx\")\n@@ -1291,7 +1294,8 @@\n    punpcklbw\\t{%2, %0|%0, %k2}\n    #\n    #\"\n-  \"TARGET_MMX_WITH_SSE && reload_completed\"\n+  \"TARGET_SSE2 && reload_completed\n+   && SSE_REGNO_P (REGNO (operands[0]))\"\n   [(const_int 0)]\n   \"ix86_split_mmx_punpck (operands, false); DONE;\"\n   [(set_attr \"mmx_isa\" \"native,sse_noavx,avx\")\n@@ -1311,7 +1315,8 @@\n    punpckhwd\\t{%2, %0|%0, %2}\n    #\n    #\"\n-  \"TARGET_MMX_WITH_SSE && reload_completed\"\n+  \"TARGET_SSE2 && reload_completed\n+   && SSE_REGNO_P (REGNO (operands[0]))\"\n   [(const_int 0)]\n   \"ix86_split_mmx_punpck (operands, true); DONE;\"\n   [(set_attr \"mmx_isa\" \"native,sse_noavx,avx\")\n@@ -1331,7 +1336,8 @@\n    punpcklwd\\t{%2, %0|%0, %k2}\n    #\n    #\"\n-  \"TARGET_MMX_WITH_SSE && reload_completed\"\n+  \"TARGET_SSE2 && reload_completed\n+   && SSE_REGNO_P (REGNO (operands[0]))\"\n   [(const_int 0)]\n   \"ix86_split_mmx_punpck (operands, false); DONE;\"\n   [(set_attr \"mmx_isa\" \"native,sse_noavx,avx\")\n@@ -1351,7 +1357,8 @@\n    punpckhdq\\t{%2, %0|%0, %2}\n    #\n    #\"\n-  \"TARGET_MMX_WITH_SSE && reload_completed\"\n+  \"TARGET_SSE2 && reload_completed\n+   && SSE_REGNO_P (REGNO (operands[0]))\"\n   [(const_int 0)]\n   \"ix86_split_mmx_punpck (operands, true); DONE;\"\n   [(set_attr \"mmx_isa\" \"native,sse_noavx,avx\")\n@@ -1371,7 +1378,8 @@\n    punpckldq\\t{%2, %0|%0, %k2}\n    #\n    #\"\n-  \"TARGET_MMX_WITH_SSE && reload_completed\"\n+  \"TARGET_SSE2 && reload_completed\n+   && SSE_REGNO_P (REGNO (operands[0]))\"\n   [(const_int 0)]\n   \"ix86_split_mmx_punpck (operands, false); DONE;\"\n   [(set_attr \"mmx_isa\" \"native,sse_noavx,avx\")\n@@ -1517,7 +1525,8 @@\n    pshufw\\t{$0, %0, %0|%0, %0, 0}\n    #\n    #\"\n-  \"TARGET_MMX_WITH_SSE && reload_completed\"\n+  \"TARGET_SSE2 && reload_completed\n+   && SSE_REGNO_P (REGNO (operands[0]))\"\n   [(const_int 0)]\n {\n   rtx op;\n@@ -1889,7 +1898,8 @@\n   \"@\n    pmovmskb\\t{%1, %0|%0, %1}\n    #\"\n-  \"TARGET_MMX_WITH_SSE && reload_completed\"\n+  \"TARGET_SSE2 && reload_completed\n+   && SSE_REGNO_P (REGNO (operands[1]))\"\n   [(set (match_dup 0)\n         (unspec:SI [(match_dup 1)] UNSPEC_MOVMSK))\n    (set (match_dup 0)"}, {"sha": "8f50cb12c60a56d5fef3739b8dea2dbd7c5d4b94", "filename": "gcc/config/i386/sse.md", "status": "modified", "additions": 10, "deletions": 5, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dab0477b0bbcc90418a7e1aec40b465de3ec842c/gcc%2Fconfig%2Fi386%2Fsse.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dab0477b0bbcc90418a7e1aec40b465de3ec842c/gcc%2Fconfig%2Fi386%2Fsse.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fsse.md?ref=dab0477b0bbcc90418a7e1aec40b465de3ec842c", "patch": "@@ -5110,7 +5110,8 @@\n    cvtpi2ps\\t{%2, %0|%0, %2}\n    #\n    #\"\n-  \"TARGET_MMX_WITH_SSE && reload_completed\"\n+  \"TARGET_SSE2 && reload_completed\n+   && SSE_REG_P (operands[2])\"\n   [(const_int 0)]\n {\n   rtx op2 = lowpart_subreg (V4SImode, operands[2],\n@@ -15881,7 +15882,8 @@\n    ph<plusminus_mnemonic>w\\t{%2, %0|%0, %2}\n    #\n    #\"\n-  \"TARGET_MMX_WITH_SSE && reload_completed\"\n+  \"TARGET_SSSE3 && reload_completed\n+   && SSE_REGNO_P (REGNO (operands[0]))\"\n   [(const_int 0)]\n {\n   /* Generate SSE version of the operation.  */\n@@ -15997,7 +15999,8 @@\n    ph<plusminus_mnemonic>d\\t{%2, %0|%0, %2}\n    #\n    #\"\n-  \"TARGET_MMX_WITH_SSE && reload_completed\"\n+  \"TARGET_SSSE3 && reload_completed\n+   && SSE_REGNO_P (REGNO (operands[0]))\"\n   [(const_int 0)]\n {\n   /* Generate SSE version of the operation.  */\n@@ -16353,7 +16356,8 @@\n    pshufb\\t{%2, %0|%0, %2}\n    #\n    #\"\n-  \"TARGET_MMX_WITH_SSE && reload_completed\"\n+  \"TARGET_SSSE3 && reload_completed\n+   && SSE_REGNO_P (REGNO (operands[0]))\"\n   [(set (match_dup 3) (match_dup 5))\n    (set (match_dup 3)\n \t(and:V4SI (match_dup 3) (match_dup 2)))\n@@ -16490,7 +16494,8 @@\n       gcc_unreachable ();\n     }\n }\n-  \"TARGET_MMX_WITH_SSE && reload_completed\"\n+  \"TARGET_SSSE3 && reload_completed\n+   && SSE_REGNO_P (REGNO (operands[0]))\"\n   [(set (match_dup 0)\n \t(lshiftrt:V1TI (match_dup 0) (match_dup 3)))]\n {"}]}