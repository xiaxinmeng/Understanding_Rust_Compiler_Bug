{"sha": "bb9f8a85b103be64e123d79d04be735a32a40c3a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmI5ZjhhODViMTAzYmU2NGUxMjNkNzlkMDRiZTczNWEzMmE0MGMzYQ==", "commit": {"author": {"name": "Carlo Wood", "email": "carlo@gcc.gnu.org", "date": "2004-02-25T21:31:01Z"}, "committer": {"name": "Carlo Wood", "email": "carlo@gcc.gnu.org", "date": "2004-02-25T21:31:01Z"}, "message": "* bits/demangle.h\nnamespace __gnu_cxx::demangler\n(session<Allocator>::qualifier_list_Allocator): Add\n(session<Allocator>::M_qualifier_list_alloc): Add\n(session<Allocator>::decode_type_with_postfix):\nUse M_qualifier_list_alloc instead of calling operator new/delete.\n\nFrom-SVN: r78457", "tree": {"sha": "636bfb8c6f31b9aebb14de82b791b9bf6ddd9e69", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/636bfb8c6f31b9aebb14de82b791b9bf6ddd9e69"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/bb9f8a85b103be64e123d79d04be735a32a40c3a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bb9f8a85b103be64e123d79d04be735a32a40c3a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bb9f8a85b103be64e123d79d04be735a32a40c3a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bb9f8a85b103be64e123d79d04be735a32a40c3a/comments", "author": null, "committer": null, "parents": [{"sha": "e22db4bfd8620301d525905dd3d914621005d0a5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e22db4bfd8620301d525905dd3d914621005d0a5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e22db4bfd8620301d525905dd3d914621005d0a5"}], "stats": {"total": 30, "additions": 24, "deletions": 6}, "files": [{"sha": "2c1683878d3b3b8c6380a8a9ed805226b3d40531", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 13, "deletions": 4, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bb9f8a85b103be64e123d79d04be735a32a40c3a/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bb9f8a85b103be64e123d79d04be735a32a40c3a/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=bb9f8a85b103be64e123d79d04be735a32a40c3a", "patch": "@@ -1,3 +1,12 @@\n+2004-02-25  Carlo Wood  <carlo@alinoe.com>\n+\n+\t* bits/demangle.h\n+\tnamespace __gnu_cxx::demangler\n+\t(session<Allocator>::qualifier_list_Allocator): Add\n+\t(session<Allocator>::M_qualifier_list_alloc): Add\n+\t(session<Allocator>::decode_type_with_postfix):\n+\tUse M_qualifier_list_alloc instead of calling operator new/delete.\n+\n 2004-02-24  Paolo Carlini  <pcarlini@suse.de>\n \n \tPR libstdc++/14252\n@@ -163,7 +172,7 @@\n \t* docs/html/ext/mt_allocator.html: Change due to that deallocated\n \tblocks now are added to the front of freelists. The reason to this\n \tapproach is also explained.\n-        \n+\n 2004-02-17  Paolo Carlini  <pcarlini@suse.de>\n \n \t* include/bits/locale_facets.tcc (num_get<>::_M_extract_float,\n@@ -776,11 +785,11 @@\n 2004-01-29  Stephen M. Webb  <stephen.webb@bregmasoft.com>\n \n \t* config/local/generic/c_locale.h: Change ::malloc() to new char[].\n-  \t* config/local/gnu/c_locale.h: Change ::malloc() to new char[].\n-  \t* include/bits/stl_tempbuf.h: Convert _Temporary_buffer to use\n+\t* config/local/gnu/c_locale.h: Change ::malloc() to new char[].\n+\t* include/bits/stl_tempbuf.h: Convert _Temporary_buffer to use\n \tstd::get_temporary_buffer() instead of duplicating its code.\n \tUpdate to C++STYLE conventions.\n-  \t* include/std/std_memory.h (get_temporary_buffer): Use ::operator\n+\t* include/std/std_memory.h (get_temporary_buffer): Use ::operator\n \tnew() instead of std::malloc().\n \t(return_temporary_buffer): Use ::operator delete() instead of\n \tstd::free()."}, {"sha": "68cdabea6bd0668a36ba83e39faebc4aa97458e3", "filename": "libstdc++-v3/include/bits/demangle.h", "status": "modified", "additions": 11, "deletions": 2, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bb9f8a85b103be64e123d79d04be735a32a40c3a/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fdemangle.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bb9f8a85b103be64e123d79d04be735a32a40c3a/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fdemangle.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fdemangle.h?ref=bb9f8a85b103be64e123d79d04be735a32a40c3a", "patch": "@@ -378,6 +378,9 @@ namespace __gnu_cxx\n \tint M_template_arg_pos_offset;\n \tstd::vector<substitution_st, subst_Allocator> M_substitutions_pos;\n \timplementation_details const& M_implementation_details;\n+\ttypedef typename Allocator::template\n+\t    rebind<qualifier_list<Allocator> >::other qualifier_list_Allocator;\n+\tqualifier_list_Allocator M_qualifier_list_alloc;\n #if _GLIBCXX_DEMANGLER_CWDEBUG\n \tbool M_inside_add_substitution;\n #endif\n@@ -1849,7 +1852,10 @@ namespace __gnu_cxx\n \t++M_inside_type;\n \tbool recursive_template_param_or_substitution_call;\n \tif (!(recursive_template_param_or_substitution_call = qualifiers))\n-\t    qualifiers = new qualifier_list<Allocator>(*this);\n+\t{\n+          qualifier_list<Allocator>* raw_qualifiers = M_qualifier_list_alloc.allocate(1);\n+\t  qualifiers = new (raw_qualifiers) qualifier_list<Allocator>(*this);\n+\t}\n \t// First eat all qualifiers.\n \tbool failure = false;\n \tfor(;;)\t\t// So we can use 'continue' to eat the next qualifier.\n@@ -2181,7 +2187,10 @@ namespace __gnu_cxx\n     decode_type_exit:\n \t--M_inside_type;\n \tif (!recursive_template_param_or_substitution_call)\n-\t  delete qualifiers;\n+\t{\n+\t  qualifiers->~qualifier_list<Allocator>();\n+\t  M_qualifier_list_alloc.deallocate(qualifiers, 1);\n+\t}\n \tif (failure)\n \t  _GLIBCXX_DEMANGLER_FAILURE;\n \t_GLIBCXX_DEMANGLER_RETURN2;"}]}