{"sha": "b3530b946f208bb581d2bcba2b311331a70bb97f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjM1MzBiOTQ2ZjIwOGJiNTgxZDJiY2JhMmIzMTEzMzFhNzBiYjk3Zg==", "commit": {"author": {"name": "Tony Reix", "email": "tony.reix@atos.net", "date": "2017-07-21T18:05:08Z"}, "committer": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2017-07-21T18:05:08Z"}, "message": "filetype.awk: Add AIX XCOFF type detection.\n\n\t* filetype.awk: Add AIX XCOFF type detection.\n\t* configure.ac: Recognize xcoff format.\n\t* Makefile.am (FORMAT_FILES): Add xcoff.c.\n\t* fileline.c: Include <unistd.h>.\n\t(fileline_initialize): Add case for AIX procfs.\n\t* xcoff.c: New file.\n\t* configure, Makefile.in: Rebuild.\n\nFrom-SVN: r250435", "tree": {"sha": "88ddb70d8e7d40f7a99e8fab445d41cce28e90b5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/88ddb70d8e7d40f7a99e8fab445d41cce28e90b5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b3530b946f208bb581d2bcba2b311331a70bb97f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b3530b946f208bb581d2bcba2b311331a70bb97f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b3530b946f208bb581d2bcba2b311331a70bb97f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b3530b946f208bb581d2bcba2b311331a70bb97f/comments", "author": {"login": "trex58", "id": 5690106, "node_id": "MDQ6VXNlcjU2OTAxMDY=", "avatar_url": "https://avatars.githubusercontent.com/u/5690106?v=4", "gravatar_id": "", "url": "https://api.github.com/users/trex58", "html_url": "https://github.com/trex58", "followers_url": "https://api.github.com/users/trex58/followers", "following_url": "https://api.github.com/users/trex58/following{/other_user}", "gists_url": "https://api.github.com/users/trex58/gists{/gist_id}", "starred_url": "https://api.github.com/users/trex58/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/trex58/subscriptions", "organizations_url": "https://api.github.com/users/trex58/orgs", "repos_url": "https://api.github.com/users/trex58/repos", "events_url": "https://api.github.com/users/trex58/events{/privacy}", "received_events_url": "https://api.github.com/users/trex58/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "60f80e6541b845a20827b8584d8c276f54ed7506", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/60f80e6541b845a20827b8584d8c276f54ed7506", "html_url": "https://github.com/Rust-GCC/gccrs/commit/60f80e6541b845a20827b8584d8c276f54ed7506"}], "stats": {"total": 112, "additions": 109, "deletions": 3}, "files": [{"sha": "b233f3e8cae4f7bfc49e0714cea18983333f7dec", "filename": "libbacktrace/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b3530b946f208bb581d2bcba2b311331a70bb97f/libbacktrace%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b3530b946f208bb581d2bcba2b311331a70bb97f/libbacktrace%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libbacktrace%2FChangeLog?ref=b3530b946f208bb581d2bcba2b311331a70bb97f", "patch": "@@ -1,3 +1,13 @@\n+2017-07-21  Tony Reix  <tony.reix@atos.net>\n+\n+\t* filetype.awk: Add AIX XCOFF type detection.\n+\t* configure.ac: Recognize xcoff format.\n+\t* Makefile.am (FORMAT_FILES): Add xcoff.c.\n+\t* fileline.c: Include <unistd.h>.\n+\t(fileline_initialize): Add case for AIX procfs.\n+\t* xcoff.c: New file.\n+\t* configure, Makefile.in: Rebuild.\n+\n 2017-06-21  Richard Biener  <rguenther@suse.de>\n \n \t* configure.ac: Add AC_SYS_LARGEFILE."}, {"sha": "b91d6bca2d6a46744173628cec991ba5f2f31bd0", "filename": "libbacktrace/Makefile.am", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b3530b946f208bb581d2bcba2b311331a70bb97f/libbacktrace%2FMakefile.am", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b3530b946f208bb581d2bcba2b311331a70bb97f/libbacktrace%2FMakefile.am", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libbacktrace%2FMakefile.am?ref=b3530b946f208bb581d2bcba2b311331a70bb97f", "patch": "@@ -57,7 +57,8 @@ BACKTRACE_FILES = \\\n FORMAT_FILES = \\\n \telf.c \\\n \tpecoff.c \\\n-\tunknown.c\n+\tunknown.c \\\n+\txcoff.c\n \n VIEW_FILES = \\\n \tread.c \\\n@@ -155,3 +156,5 @@ sort.lo: config.h backtrace.h internal.h\n stest.lo: config.h backtrace.h internal.h\n state.lo: config.h backtrace.h backtrace-supported.h internal.h\n unknown.lo: config.h backtrace.h internal.h\n+xcoff.lo: config.h backtrace.h internal.h\n+"}, {"sha": "5b2159d77ba402a4995127975652473e637a8b2a", "filename": "libbacktrace/Makefile.in", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b3530b946f208bb581d2bcba2b311331a70bb97f/libbacktrace%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b3530b946f208bb581d2bcba2b311331a70bb97f/libbacktrace%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libbacktrace%2FMakefile.in?ref=b3530b946f208bb581d2bcba2b311331a70bb97f", "patch": "@@ -319,7 +319,8 @@ BACKTRACE_FILES = \\\n FORMAT_FILES = \\\n \telf.c \\\n \tpecoff.c \\\n-\tunknown.c\n+\tunknown.c \\\n+\txcoff.c\n \n VIEW_FILES = \\\n \tread.c \\\n@@ -817,6 +818,7 @@ sort.lo: config.h backtrace.h internal.h\n stest.lo: config.h backtrace.h internal.h\n state.lo: config.h backtrace.h backtrace-supported.h internal.h\n unknown.lo: config.h backtrace.h internal.h\n+xcoff.lo: config.h backtrace.h internal.h\n \n # Tell versions [3.59,3.63) of GNU make to not export all variables.\n # Otherwise a system limit (for SysV at least) may be exceeded."}, {"sha": "896b23561ab22fa4eb2d0701de46ca5eb8336988", "filename": "libbacktrace/configure", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b3530b946f208bb581d2bcba2b311331a70bb97f/libbacktrace%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b3530b946f208bb581d2bcba2b311331a70bb97f/libbacktrace%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libbacktrace%2Fconfigure?ref=b3530b946f208bb581d2bcba2b311331a70bb97f", "patch": "@@ -12048,6 +12048,9 @@ elf*) FORMAT_FILE=\"elf.lo\" ;;\n pecoff) FORMAT_FILE=\"pecoff.lo\"\n         backtrace_supports_data=no\n \t;;\n+xcoff) FORMAT_FILE=\"xcoff.lo\"\n+       backtrace_supports_data=no\n+       ;;\n *) { $as_echo \"$as_me:${as_lineno-$LINENO}: WARNING: could not determine output file type\" >&5\n $as_echo \"$as_me: WARNING: could not determine output file type\" >&2;}\n    FORMAT_FILE=\"unknown.lo\""}, {"sha": "36a6d470fc3be6cccf452854bba9e3ea9ead52d4", "filename": "libbacktrace/configure.ac", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b3530b946f208bb581d2bcba2b311331a70bb97f/libbacktrace%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b3530b946f208bb581d2bcba2b311331a70bb97f/libbacktrace%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libbacktrace%2Fconfigure.ac?ref=b3530b946f208bb581d2bcba2b311331a70bb97f", "patch": "@@ -233,6 +233,9 @@ elf*) FORMAT_FILE=\"elf.lo\" ;;\n pecoff) FORMAT_FILE=\"pecoff.lo\"\n         backtrace_supports_data=no\n \t;;\n+xcoff) FORMAT_FILE=\"xcoff.lo\"\n+       backtrace_supports_data=no\n+       ;;\n *) AC_MSG_WARN([could not determine output file type])\n    FORMAT_FILE=\"unknown.lo\"\n    backtrace_supported=no"}, {"sha": "303e4dce83a737b3b441dba873a75a5020b6ab3a", "filename": "libbacktrace/fileline.c", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b3530b946f208bb581d2bcba2b311331a70bb97f/libbacktrace%2Ffileline.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b3530b946f208bb581d2bcba2b311331a70bb97f/libbacktrace%2Ffileline.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libbacktrace%2Ffileline.c?ref=b3530b946f208bb581d2bcba2b311331a70bb97f", "patch": "@@ -37,6 +37,7 @@ POSSIBILITY OF SUCH DAMAGE.  */\n #include <errno.h>\n #include <fcntl.h>\n #include <stdlib.h>\n+#include <unistd.h>\n \n #include \"backtrace.h\"\n #include \"internal.h\"\n@@ -57,6 +58,7 @@ fileline_initialize (struct backtrace_state *state,\n   int pass;\n   int called_error_callback;\n   int descriptor;\n+  char buf[64];\n \n   if (!state->threaded)\n     failed = state->fileline_initialization_failed;\n@@ -80,7 +82,7 @@ fileline_initialize (struct backtrace_state *state,\n \n   descriptor = -1;\n   called_error_callback = 0;\n-  for (pass = 0; pass < 4; ++pass)\n+  for (pass = 0; pass < 5; ++pass)\n     {\n       const char *filename;\n       int does_not_exist;\n@@ -99,6 +101,10 @@ fileline_initialize (struct backtrace_state *state,\n \tcase 3:\n \t  filename = \"/proc/curproc/file\";\n \t  break;\n+\tcase 4:\n+\t  snprintf (buf, sizeof (buf), \"/proc/%d/object/a.out\", getpid ());\n+\t  filename = buf;\n+\t  break;\n \tdefault:\n \t  abort ();\n \t}"}, {"sha": "7bee5e522536765cb0d0f27b6c802db5524e43c4", "filename": "libbacktrace/filetype.awk", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b3530b946f208bb581d2bcba2b311331a70bb97f/libbacktrace%2Ffiletype.awk", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b3530b946f208bb581d2bcba2b311331a70bb97f/libbacktrace%2Ffiletype.awk", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libbacktrace%2Ffiletype.awk?ref=b3530b946f208bb581d2bcba2b311331a70bb97f", "patch": "@@ -3,3 +3,6 @@\n /\\177ELF\\002/ { if (NR == 1) { print \"elf64\"; exit } }\n /\\114\\001/    { if (NR == 1) { print \"pecoff\"; exit } }\n /\\144\\206/    { if (NR == 1) { print \"pecoff\"; exit } }\n+/\\001\\337/    { if (NR == 1) { print \"xcoff\"; exit } }\n+/\\001\\367/    { if (NR == 1) { print \"xcoff\"; exit } }\n+"}, {"sha": "8f3a8495995607149daaccdbafec665797c2f61b", "filename": "libbacktrace/xcoff.c", "status": "added", "additions": 76, "deletions": 0, "changes": 76, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b3530b946f208bb581d2bcba2b311331a70bb97f/libbacktrace%2Fxcoff.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b3530b946f208bb581d2bcba2b311331a70bb97f/libbacktrace%2Fxcoff.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libbacktrace%2Fxcoff.c?ref=b3530b946f208bb581d2bcba2b311331a70bb97f", "patch": "@@ -0,0 +1,76 @@\n+/* xcoff.c -- Get debug data from a XCOFFF file for backtraces.\n+   Copyright (C) 2017 Free Software Foundation, Inc.\n+\n+Redistribution and use in source and binary forms, with or without\n+modification, are permitted provided that the following conditions are\n+met:\n+\n+    (1) Redistributions of source code must retain the above copyright\n+    notice, this list of conditions and the following disclaimer.\n+\n+    (2) Redistributions in binary form must reproduce the above copyright\n+    notice, this list of conditions and the following disclaimer in\n+    the documentation and/or other materials provided with the\n+    distribution.\n+\n+    (3) The name of the author may not be used to\n+    endorse or promote products derived from this software without\n+    specific prior written permission.\n+\n+THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR\n+IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n+WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n+DISCLAIMED. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT,\n+INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n+(INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\n+SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)\n+HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,\n+STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING\n+IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n+POSSIBILITY OF SUCH DAMAGE.  */\n+\n+#include \"config.h\"\n+\n+#include <sys/types.h>\n+\n+#include \"backtrace.h\"\n+#include \"internal.h\"\n+\n+/* A trivial routine that always fails to find fileline data.  */\n+\n+static int\n+xcoff_fileline (struct backtrace_state *state ATTRIBUTE_UNUSED,\n+\t\tuintptr_t pc, backtrace_full_callback callback,\n+\t\tbacktrace_error_callback error_callback ATTRIBUTE_UNUSED,\n+\t\tvoid *data)\n+\n+{\n+  static char buf[32];\n+\n+  snprintf (buf, sizeof(buf), \"pc=0x%llx\", (unsigned long long) pc);\n+  return callback (data, pc, \"unknown_file\", 123, buf);\n+}\n+\n+static void\n+xcoff_syminfo (struct backtrace_state *state ATTRIBUTE_UNUSED, uintptr_t addr,\n+               backtrace_syminfo_callback callback,\n+               backtrace_error_callback error_callback ATTRIBUTE_UNUSED,\n+               void *data)\n+{\n+  callback (data, addr, \"unknown\", 0, 0);\n+}\n+\n+/* Initialize the backtrace data when we don't know how to read the\n+   debug info.  */\n+\n+int\n+backtrace_initialize (struct backtrace_state *state ATTRIBUTE_UNUSED,\n+\t\t      int descriptor ATTRIBUTE_UNUSED,\n+\t\t      backtrace_error_callback error_callback ATTRIBUTE_UNUSED,\n+\t\t      void *data ATTRIBUTE_UNUSED, fileline *fileline_fn)\n+{\n+  state->syminfo_fn = xcoff_syminfo;\n+  state->fileline_data = NULL;\n+  *fileline_fn = xcoff_fileline;\n+  return 1;\n+}"}]}