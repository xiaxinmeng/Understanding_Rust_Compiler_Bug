{"sha": "6de8697e4d786fd71ac04036038190e3e5109bc4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmRlODY5N2U0ZDc4NmZkNzFhYzA0MDM2MDM4MTkwZTNlNTEwOWJjNA==", "commit": {"author": {"name": "Kaveh R. Ghazi", "email": "ghazi@caip.rutgers.edu", "date": "1999-05-13T09:18:43Z"}, "committer": {"name": "Kaveh Ghazi", "email": "ghazi@gcc.gnu.org", "date": "1999-05-13T09:18:43Z"}, "message": "* gcc.dg/noreturn-1.c: New test.\n\nFrom-SVN: r26923", "tree": {"sha": "c8c32a4585690be44ff28a34d16c583e18eca586", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c8c32a4585690be44ff28a34d16c583e18eca586"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6de8697e4d786fd71ac04036038190e3e5109bc4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6de8697e4d786fd71ac04036038190e3e5109bc4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6de8697e4d786fd71ac04036038190e3e5109bc4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6de8697e4d786fd71ac04036038190e3e5109bc4/comments", "author": null, "committer": null, "parents": [{"sha": "16f322e33c0fc49e8f3283cad331a8a7a5f55c53", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/16f322e33c0fc49e8f3283cad331a8a7a5f55c53", "html_url": "https://github.com/Rust-GCC/gccrs/commit/16f322e33c0fc49e8f3283cad331a8a7a5f55c53"}], "stats": {"total": 47, "additions": 47, "deletions": 0}, "files": [{"sha": "e846e889f07f94fdb12fbbf87c35dc73a36c5010", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6de8697e4d786fd71ac04036038190e3e5109bc4/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6de8697e4d786fd71ac04036038190e3e5109bc4/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=6de8697e4d786fd71ac04036038190e3e5109bc4", "patch": "@@ -1,3 +1,7 @@\n+1999-05-13  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n+\n+\t* gcc.dg/noreturn-1.c: New test.\n+\n Thu May 13 02:07:21 1999  Franz Sirl <Franz.Sirl-kernel@lauterbach.com>\n \n \t* gcc.dg/990513-1.c: New test."}, {"sha": "3d68cbcf5001abc51d46dce548d3ed00da33a6f4", "filename": "gcc/testsuite/gcc.dg/noreturn-1.c", "status": "added", "additions": 43, "deletions": 0, "changes": 43, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6de8697e4d786fd71ac04036038190e3e5109bc4/gcc%2Ftestsuite%2Fgcc.dg%2Fnoreturn-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6de8697e4d786fd71ac04036038190e3e5109bc4/gcc%2Ftestsuite%2Fgcc.dg%2Fnoreturn-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fnoreturn-1.c?ref=6de8697e4d786fd71ac04036038190e3e5109bc4", "patch": "@@ -0,0 +1,43 @@\n+/* Check for various valid and erroneous \"noreturn\" cases. */\n+/* { dg-do compile } */\n+/* { dg-options \"-O -Wmissing-noreturn\" } */\n+\n+extern void foo1(void) __attribute__ ((__noreturn__));\n+void\n+foo1(void)\n+{\n+} /* { dg-warning \"`noreturn' function does return\" \"detect falling off end of noreturn\" } */\n+\n+extern void foo2(void) __attribute__ ((__noreturn__));\n+void\n+foo2(void)\n+{\n+  exit(0);\n+} /* { dg-bogus \"warning:\" \"this function should not get any warnings\" } */\n+\n+extern void foo3(void);\n+void\n+foo3(void)\n+{\n+} /* { dg-bogus \"warning:\" \"this function should not get any warnings\" } */\n+\n+extern void foo4(void);\n+void\n+foo4(void)\n+{\n+  exit(0);\n+} /* { dg-warning \"candidate for attribute `noreturn'\" \"detect noreturn candidate\" } */\n+\n+extern void foo5(void) __attribute__ ((__noreturn__));\n+void\n+foo5(void)\n+{\n+  return; /* { dg-warning \"`noreturn' has a `return' statement\" \"detect invalid return\" } */\n+} /* { dg-warning \"`noreturn' function does return\" \"detect return from noreturn\" } */\n+\n+extern void foo6(void);\n+void\n+foo6(void)\n+{\n+  return;\n+} /* { dg-bogus \"warning:\" \"this function should not get any warnings\" } */"}]}