{"sha": "a3ef4e650e37bb768468d18d7c0f0b45298c3452", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTNlZjRlNjUwZTM3YmI3Njg0NjhkMThkN2MwZjBiNDUyOThjMzQ1Mg==", "commit": {"author": {"name": "Bob Duff", "email": "duff@adacore.com", "date": "2017-04-27T12:10:04Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2017-04-27T12:10:04Z"}, "message": "g-dyntab.ads, [...]: Default for Table_Low_Bound.\n\n2017-04-27  Bob Duff  <duff@adacore.com>\n\n\t* g-dyntab.ads, g-dyntab.adb: Default for Table_Low_Bound.\n\tRename Empty --> Empty_Table_Ptr, and don't duplicate code for it.\n\tFree renames Init, since they do the same thing.\n\t* g-table.ads: Default for Table_Low_Bound.\n\t* table.ads: Default for Table_Low_Bound, Table_Initial, and\n\tTable_Increment.\n\nFrom-SVN: r247324", "tree": {"sha": "3657e85cdcbfea67ca837f008807519105a2fe24", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3657e85cdcbfea67ca837f008807519105a2fe24"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a3ef4e650e37bb768468d18d7c0f0b45298c3452", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a3ef4e650e37bb768468d18d7c0f0b45298c3452", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a3ef4e650e37bb768468d18d7c0f0b45298c3452", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a3ef4e650e37bb768468d18d7c0f0b45298c3452/comments", "author": {"login": "bobduff", "id": 29099567, "node_id": "MDQ6VXNlcjI5MDk5NTY3", "avatar_url": "https://avatars.githubusercontent.com/u/29099567?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bobduff", "html_url": "https://github.com/bobduff", "followers_url": "https://api.github.com/users/bobduff/followers", "following_url": "https://api.github.com/users/bobduff/following{/other_user}", "gists_url": "https://api.github.com/users/bobduff/gists{/gist_id}", "starred_url": "https://api.github.com/users/bobduff/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bobduff/subscriptions", "organizations_url": "https://api.github.com/users/bobduff/orgs", "repos_url": "https://api.github.com/users/bobduff/repos", "events_url": "https://api.github.com/users/bobduff/events{/privacy}", "received_events_url": "https://api.github.com/users/bobduff/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "de33eb3865a19e2fcc527de18e611de0703cb83a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/de33eb3865a19e2fcc527de18e611de0703cb83a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/de33eb3865a19e2fcc527de18e611de0703cb83a"}], "stats": {"total": 94, "additions": 45, "deletions": 49}, "files": [{"sha": "ce6a02c8c6640d18a229c154f39467d4f9881846", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a3ef4e650e37bb768468d18d7c0f0b45298c3452/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a3ef4e650e37bb768468d18d7c0f0b45298c3452/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=a3ef4e650e37bb768468d18d7c0f0b45298c3452", "patch": "@@ -1,3 +1,12 @@\n+2017-04-27  Bob Duff  <duff@adacore.com>\n+\n+\t* g-dyntab.ads, g-dyntab.adb: Default for Table_Low_Bound.\n+\tRename Empty --> Empty_Table_Ptr, and don't duplicate code for it.\n+\tFree renames Init, since they do the same thing.\n+\t* g-table.ads: Default for Table_Low_Bound.\n+\t* table.ads: Default for Table_Low_Bound, Table_Initial, and\n+\tTable_Increment.\n+\n 2017-04-27  Bob Duff  <duff@adacore.com>\n \n \t* g-dyntab.ads, g-dyntab.adb: Add assertions to subprograms that"}, {"sha": "1b5393699398a333cfb546fc6ef1db7de76e28c0", "filename": "gcc/ada/g-dyntab.adb", "status": "modified", "additions": 24, "deletions": 37, "changes": 61, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a3ef4e650e37bb768468d18d7c0f0b45298c3452/gcc%2Fada%2Fg-dyntab.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a3ef4e650e37bb768468d18d7c0f0b45298c3452/gcc%2Fada%2Fg-dyntab.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-dyntab.adb?ref=a3ef4e650e37bb768468d18d7c0f0b45298c3452", "patch": "@@ -38,9 +38,6 @@ with System;\n \n package body GNAT.Dynamic_Tables is\n \n-   Empty : constant Table_Ptr :=\n-             Empty_Table_Array_Ptr_To_Table_Ptr (Empty_Table_Array'Access);\n-\n    -----------------------\n    -- Local Subprograms --\n    -----------------------\n@@ -116,32 +113,6 @@ package body GNAT.Dynamic_Tables is\n       end loop;\n    end For_Each;\n \n-   ----------\n-   -- Free --\n-   ----------\n-\n-   procedure Free (T : in out Instance) is\n-      pragma Assert (not T.Locked);\n-      subtype Alloc_Type is Table_Type (First .. T.P.Last_Allocated);\n-      type Alloc_Ptr is access all Alloc_Type;\n-\n-      procedure Free is new Ada.Unchecked_Deallocation (Alloc_Type, Alloc_Ptr);\n-      function To_Alloc_Ptr is\n-        new Ada.Unchecked_Conversion (Table_Ptr, Alloc_Ptr);\n-\n-      Temp : Alloc_Ptr := To_Alloc_Ptr (T.Table);\n-\n-   begin\n-      if T.Table = Empty then\n-         pragma Assert (T.P = (Last_Allocated | Last => First - 1));\n-         null;\n-      else\n-         Free (Temp);\n-         T.Table := Empty;\n-         T.P := (Last_Allocated | Last => First - 1);\n-      end if;\n-   end Free;\n-\n    ----------\n    -- Grow --\n    ----------\n@@ -169,7 +140,7 @@ package body GNAT.Dynamic_Tables is\n       New_Allocated_Length : Table_Length_Type;\n \n    begin\n-      if T.Table = Empty then\n+      if T.Table = Empty_Table_Ptr then\n          New_Allocated_Length := Table_Length_Type (Table_Initial);\n       else\n          New_Allocated_Length :=\n@@ -213,7 +184,7 @@ package body GNAT.Dynamic_Tables is\n          New_Table : constant Alloc_Ptr := new Alloc_Type;\n \n       begin\n-         if T.Table /= Empty then\n+         if T.Table /= Empty_Table_Ptr then\n             New_Table (First .. T.P.Last) := Old_Table (First .. T.P.Last);\n             Free (Old_Table);\n          end if;\n@@ -223,7 +194,7 @@ package body GNAT.Dynamic_Tables is\n \n       pragma Assert (New_Last <= T.P.Last_Allocated);\n       pragma Assert (T.Table /= null);\n-      pragma Assert (T.Table /= Empty);\n+      pragma Assert (T.Table /= Empty_Table_Ptr);\n    end Grow;\n \n    --------------------\n@@ -241,9 +212,25 @@ package body GNAT.Dynamic_Tables is\n    ----------\n \n    procedure Init (T : in out Instance) is\n-   begin\n       pragma Assert (not T.Locked);\n-      Free (T);\n+      subtype Alloc_Type is Table_Type (First .. T.P.Last_Allocated);\n+      type Alloc_Ptr is access all Alloc_Type;\n+\n+      procedure Free is new Ada.Unchecked_Deallocation (Alloc_Type, Alloc_Ptr);\n+      function To_Alloc_Ptr is\n+        new Ada.Unchecked_Conversion (Table_Ptr, Alloc_Ptr);\n+\n+      Temp : Alloc_Ptr := To_Alloc_Ptr (T.Table);\n+\n+   begin\n+      if T.Table = Empty_Table_Ptr then\n+         pragma Assert (T.P = (Last_Allocated | Last => First - 1));\n+         null;\n+      else\n+         Free (Temp);\n+         T.Table := Empty_Table_Ptr;\n+         T.P := (Last_Allocated | Last => First - 1);\n+      end if;\n    end Init;\n \n    --------------\n@@ -253,7 +240,7 @@ package body GNAT.Dynamic_Tables is\n    function Is_Empty (T : Instance) return Boolean is\n       Result : constant Boolean := T.P.Last = Table_Low_Bound - 1;\n    begin\n-      pragma Assert (Result = (T.Table = Empty));\n+      pragma Assert (Result = (T.Table = Empty_Table_Ptr));\n       return Result;\n    end Is_Empty;\n \n@@ -277,7 +264,7 @@ package body GNAT.Dynamic_Tables is\n       pragma Assert (Is_Empty (To));\n       To := From;\n \n-      From.Table            := Empty;\n+      From.Table            := Empty_Table_Ptr;\n       From.Locked           := False;\n       From.P.Last_Allocated := Table_Low_Bound - 1;\n       From.P.Last           := Table_Low_Bound - 1;\n@@ -326,7 +313,7 @@ package body GNAT.Dynamic_Tables is\n    begin\n       if New_Last_Alloc < T.P.Last_Allocated then\n          pragma Assert (T.P.Last < T.P.Last_Allocated);\n-         pragma Assert (T.Table /= Empty);\n+         pragma Assert (T.Table /= Empty_Table_Ptr);\n \n          declare\n             subtype Old_Alloc_Type is Table_Type (First .. Old_Last_Allocated);"}, {"sha": "a98345660e7bf9ecd0e30c4e50463f4e52da1b65", "filename": "gcc/ada/g-dyntab.ads", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a3ef4e650e37bb768468d18d7c0f0b45298c3452/gcc%2Fada%2Fg-dyntab.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a3ef4e650e37bb768468d18d7c0f0b45298c3452/gcc%2Fada%2Fg-dyntab.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-dyntab.ads?ref=a3ef4e650e37bb768468d18d7c0f0b45298c3452", "patch": "@@ -53,7 +53,7 @@ generic\n    type Table_Component_Type is private;\n    type Table_Index_Type     is range <>;\n \n-   Table_Low_Bound   : Table_Index_Type;\n+   Table_Low_Bound   : Table_Index_Type := Table_Index_Type'First;\n    Table_Initial     : Positive := 8;\n    Table_Increment   : Natural := 100;\n    Release_Threshold : Natural := 0; -- size in bytes\n@@ -153,12 +153,13 @@ package GNAT.Dynamic_Tables is\n    Empty_Table_Array : aliased Empty_Table_Array_Type;\n    function Empty_Table_Array_Ptr_To_Table_Ptr is\n      new Ada.Unchecked_Conversion (Empty_Table_Array_Ptr, Table_Ptr);\n+   Empty_Table_Ptr : constant Table_Ptr :=\n+             Empty_Table_Array_Ptr_To_Table_Ptr (Empty_Table_Array'Access);\n    --  End private use only. The above are used to initialize Table to point to\n    --  an empty array.\n \n    type Instance is record\n-      Table : Table_Ptr :=\n-                Empty_Table_Array_Ptr_To_Table_Ptr (Empty_Table_Array'Access);\n+      Table : Table_Ptr := Empty_Table_Ptr;\n       --  The table itself. The lower bound is the value of First. Logically\n       --  the upper bound is the current value of Last (although the actual\n       --  size of the allocated table may be larger than this). The program may\n@@ -187,6 +188,8 @@ package GNAT.Dynamic_Tables is\n    --  Reinitializes the table to empty. There is no need to call this before\n    --  using a table; tables default to empty.\n \n+   procedure Free (T : in out Instance) renames Init;\n+\n    function First return Table_Index_Type;\n    pragma Inline (First);\n    --  Export First as synonym for Table_Low_Bound (parallel with use of Last)\n@@ -208,9 +211,6 @@ package GNAT.Dynamic_Tables is\n    --  chunk of memory. In both cases current array values are not affected by\n    --  this call.\n \n-   procedure Free (T : in out Instance);\n-   --  Same as Init\n-\n    procedure Set_Last (T : in out Instance; New_Val : Table_Last_Type);\n    pragma Inline (Set_Last);\n    --  This procedure sets Last to the indicated value. If necessary the table"}, {"sha": "3df5694fcf7e28e847813ff20d3fe620138171e0", "filename": "gcc/ada/g-table.ads", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a3ef4e650e37bb768468d18d7c0f0b45298c3452/gcc%2Fada%2Fg-table.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a3ef4e650e37bb768468d18d7c0f0b45298c3452/gcc%2Fada%2Fg-table.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-table.ads?ref=a3ef4e650e37bb768468d18d7c0f0b45298c3452", "patch": "@@ -49,7 +49,7 @@ generic\n    type Table_Component_Type is private;\n    type Table_Index_Type     is range <>;\n \n-   Table_Low_Bound   : Table_Index_Type;\n+   Table_Low_Bound   : Table_Index_Type := Table_Index_Type'First;\n    Table_Initial     : Positive := 8;\n    Table_Increment   : Natural := 100;\n    Table_Name        : String := \"\"; -- for debugging printouts\n@@ -70,6 +70,7 @@ package GNAT.Table is\n    subtype Valid_Table_Index_Type is Tab.Valid_Table_Index_Type;\n    subtype Table_Last_Type is Tab.Table_Last_Type;\n    subtype Table_Type is Tab.Table_Type;\n+   function \"=\" (X, Y : Table_Type) return Boolean renames Tab.\"=\";\n    subtype Big_Table_Type is Tab.Big_Table_Type;\n \n    subtype Table_Ptr is Tab.Table_Ptr;\n@@ -81,6 +82,7 @@ package GNAT.Table is\n    function Is_Empty return Boolean;\n \n    procedure Init;\n+   procedure Free;\n \n    function First return Table_Index_Type;\n    pragma Inline (First);\n@@ -90,8 +92,6 @@ package GNAT.Table is\n \n    procedure Release;\n \n-   procedure Free;\n-\n    procedure Set_Last (New_Val : Table_Last_Type);\n    pragma Inline (Set_Last);\n "}, {"sha": "7311f6f0e1f1f253aa665ccddbc8cd7dc6ba7bf0", "filename": "gcc/ada/table.ads", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a3ef4e650e37bb768468d18d7c0f0b45298c3452/gcc%2Fada%2Ftable.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a3ef4e650e37bb768468d18d7c0f0b45298c3452/gcc%2Fada%2Ftable.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ftable.ads?ref=a3ef4e650e37bb768468d18d7c0f0b45298c3452", "patch": "@@ -51,9 +51,9 @@ package Table is\n       type Table_Component_Type is private;\n       type Table_Index_Type     is range <>;\n \n-      Table_Low_Bound   : Table_Index_Type;\n-      Table_Initial     : Pos;\n-      Table_Increment   : Nat;\n+      Table_Low_Bound   : Table_Index_Type := Table_Index_Type'First;\n+      Table_Initial     : Pos := 8;\n+      Table_Increment   : Nat := 100;\n       Table_Name        : String; -- for debugging printouts\n       Release_Threshold : Nat := 0;\n "}]}