{"sha": "7338fc64dde8ab8315095e226c1b9e2469a4e369", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzMzOGZjNjRkZGU4YWI4MzE1MDk1ZTIyNmMxYjllMjQ2OWE0ZTM2OQ==", "commit": {"author": {"name": "Paolo Carlini", "email": "pcarlini@suse.de", "date": "2004-06-09T21:37:46Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2004-06-09T21:37:46Z"}, "message": "re PR libstdc++/15775 (Allocator::pointer consistently ignored)\n\n2004-06-09  Paolo Carlini  <pcarlini@suse.de>\n\n\tPR libstdc++/15775\n\t* include/bits/stl_deque.h: Consistently with stl_set.h, define\n\tpointer as allocator's pointer, likewise for reference,\n\tconst_pointer, and const_reference.\n\t* include/bits/stl_list.h: Likewise.\n\t* include/bits/stl_map.h: Likewise.\n\t* include/bits/stl_multimap.h: Likewise.\n\t* include/bits/stl_vector.h: Likewise.\n\nFrom-SVN: r82857", "tree": {"sha": "2bede2046171d7e0e220f41bbbc673aac7fe0133", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2bede2046171d7e0e220f41bbbc673aac7fe0133"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7338fc64dde8ab8315095e226c1b9e2469a4e369", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7338fc64dde8ab8315095e226c1b9e2469a4e369", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7338fc64dde8ab8315095e226c1b9e2469a4e369", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7338fc64dde8ab8315095e226c1b9e2469a4e369/comments", "author": null, "committer": null, "parents": [{"sha": "80d23e4959036e19145c2eb6a0d117727104a211", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/80d23e4959036e19145c2eb6a0d117727104a211", "html_url": "https://github.com/Rust-GCC/gccrs/commit/80d23e4959036e19145c2eb6a0d117727104a211"}], "stats": {"total": 94, "additions": 52, "deletions": 42}, "files": [{"sha": "20d5a7d3b025f1a259e064ffb4b418cf12efe58d", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7338fc64dde8ab8315095e226c1b9e2469a4e369/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7338fc64dde8ab8315095e226c1b9e2469a4e369/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=7338fc64dde8ab8315095e226c1b9e2469a4e369", "patch": "@@ -1,3 +1,14 @@\n+2004-06-09  Paolo Carlini  <pcarlini@suse.de>\n+\n+\tPR libstdc++/15775\n+\t* include/bits/stl_deque.h: Consistently with stl_set.h, define\n+\tpointer as allocator's pointer, likewise for reference,\n+\tconst_pointer, and const_reference.\n+\t* include/bits/stl_list.h: Likewise.\n+\t* include/bits/stl_map.h: Likewise.\n+\t* include/bits/stl_multimap.h: Likewise.\n+\t* include/bits/stl_vector.h: Likewise.\n+\n 2004-06-09  Benjamin Kosnik  <bkoz@redhat.com>\n \n \t* crossconfig.m4: Remove signbit, signbitf, signbitl.\t"}, {"sha": "d4f243939fde947620b9fc48ae236e9b80e5877b", "filename": "libstdc++-v3/include/bits/stl_deque.h", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7338fc64dde8ab8315095e226c1b9e2469a4e369/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_deque.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7338fc64dde8ab8315095e226c1b9e2469a4e369/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_deque.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_deque.h?ref=7338fc64dde8ab8315095e226c1b9e2469a4e369", "patch": "@@ -595,14 +595,14 @@ namespace _GLIBCXX_STD\n \n     public:\n       typedef _Tp                                value_type;\n-      typedef value_type*                        pointer;\n-      typedef const value_type*                  const_pointer;\n+      typedef typename _Alloc::pointer           pointer;\n+      typedef typename _Alloc::const_pointer     const_pointer;\n+      typedef typename _Alloc::reference         reference;\n+      typedef typename _Alloc::const_reference   const_reference;\n       typedef typename _Base::iterator           iterator;\n       typedef typename _Base::const_iterator     const_iterator;\n       typedef std::reverse_iterator<const_iterator>   const_reverse_iterator;\n       typedef std::reverse_iterator<iterator>         reverse_iterator;\n-      typedef value_type&                        reference;\n-      typedef const value_type&                  const_reference;\n       typedef size_t                             size_type;\n       typedef ptrdiff_t                          difference_type;\n       typedef typename _Base::allocator_type     allocator_type;"}, {"sha": "1671c9c9d99a009014f13ac3611d0570dcef1879", "filename": "libstdc++-v3/include/bits/stl_list.h", "status": "modified", "additions": 12, "deletions": 12, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7338fc64dde8ab8315095e226c1b9e2469a4e369/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_list.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7338fc64dde8ab8315095e226c1b9e2469a4e369/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_list.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_list.h?ref=7338fc64dde8ab8315095e226c1b9e2469a4e369", "patch": "@@ -394,18 +394,18 @@ namespace _GLIBCXX_STD\n       typedef _List_base<_Tp, _Alloc>                   _Base;\n \n     public:\n-      typedef _Tp                                       value_type;\n-      typedef value_type*                               pointer;\n-      typedef const value_type*                         const_pointer;\n-      typedef _List_iterator<_Tp>                       iterator;\n-      typedef _List_const_iterator<_Tp>                 const_iterator;\n-      typedef std::reverse_iterator<const_iterator>     const_reverse_iterator;\n-      typedef std::reverse_iterator<iterator>           reverse_iterator;\n-      typedef value_type&                               reference;\n-      typedef const value_type&                         const_reference;\n-      typedef size_t                                    size_type;\n-      typedef ptrdiff_t                                 difference_type;\n-      typedef typename _Base::allocator_type            allocator_type;\n+      typedef _Tp                                        value_type;\n+      typedef typename _Alloc::pointer                   pointer;\n+      typedef typename _Alloc::const_pointer             const_pointer;\n+      typedef typename _Alloc::reference                 reference;\n+      typedef typename _Alloc::const_reference           const_reference;\n+      typedef _List_iterator<_Tp>                        iterator;\n+      typedef _List_const_iterator<_Tp>                  const_iterator;\n+      typedef std::reverse_iterator<const_iterator>      const_reverse_iterator;\n+      typedef std::reverse_iterator<iterator>            reverse_iterator;\n+      typedef size_t                                     size_type;\n+      typedef ptrdiff_t                                  difference_type;\n+      typedef typename _Base::allocator_type             allocator_type;\n \n     protected:\n       // Note that pointers-to-_Node's can be ctor-converted to"}, {"sha": "8535ae5f2680bab165c17e529f293386d33dc647", "filename": "libstdc++-v3/include/bits/stl_map.h", "status": "modified", "additions": 11, "deletions": 11, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7338fc64dde8ab8315095e226c1b9e2469a4e369/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_map.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7338fc64dde8ab8315095e226c1b9e2469a4e369/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_map.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_map.h?ref=7338fc64dde8ab8315095e226c1b9e2469a4e369", "patch": "@@ -126,17 +126,17 @@ namespace _GLIBCXX_STD\n     public:\n       // many of these are specified differently in ISO, but the following are\n       // \"functionally equivalent\"\n-      typedef typename _Rep_type::allocator_type           allocator_type;\n-      typedef typename _Rep_type::reference                reference;\n-      typedef typename _Rep_type::const_reference          const_reference;\n-      typedef typename _Rep_type::iterator                 iterator;\n-      typedef typename _Rep_type::const_iterator           const_iterator;\n-      typedef typename _Rep_type::size_type                size_type;\n-      typedef typename _Rep_type::difference_type          difference_type;\n-      typedef typename _Rep_type::pointer                  pointer;\n-      typedef typename _Rep_type::const_pointer            const_pointer;\n-      typedef typename _Rep_type::reverse_iterator         reverse_iterator;\n-      typedef typename _Rep_type::const_reverse_iterator   const_reverse_iterator;\n+      typedef typename _Alloc::pointer                   pointer;\n+      typedef typename _Alloc::const_pointer             const_pointer;\n+      typedef typename _Alloc::reference                 reference;\n+      typedef typename _Alloc::const_reference           const_reference;\n+      typedef typename _Rep_type::allocator_type         allocator_type;\n+      typedef typename _Rep_type::iterator               iterator;\n+      typedef typename _Rep_type::const_iterator         const_iterator;\n+      typedef typename _Rep_type::size_type              size_type;\n+      typedef typename _Rep_type::difference_type        difference_type;\n+      typedef typename _Rep_type::reverse_iterator       reverse_iterator;\n+      typedef typename _Rep_type::const_reverse_iterator const_reverse_iterator;\n \n       // [23.3.1.1] construct/copy/destroy\n       // (get_allocator() is normally listed in this section, but seems to have"}, {"sha": "e080f9aaba7eb1e2dd932259f2f602e3ffa1d15a", "filename": "libstdc++-v3/include/bits/stl_multimap.h", "status": "modified", "additions": 4, "deletions": 5, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7338fc64dde8ab8315095e226c1b9e2469a4e369/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_multimap.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7338fc64dde8ab8315095e226c1b9e2469a4e369/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_multimap.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_multimap.h?ref=7338fc64dde8ab8315095e226c1b9e2469a4e369", "patch": "@@ -142,19 +142,18 @@ namespace _GLIBCXX_STD\n     public:\n       // many of these are specified differently in ISO, but the following are\n       // \"functionally equivalent\"\n+      typedef typename _Alloc::pointer                   pointer;\n+      typedef typename _Alloc::const_pointer             const_pointer;\n+      typedef typename _Alloc::reference                 reference;\n+      typedef typename _Alloc::const_reference           const_reference;\n       typedef typename _Rep_type::allocator_type         allocator_type;\n-      typedef typename _Rep_type::reference              reference;\n-      typedef typename _Rep_type::const_reference        const_reference;\n       typedef typename _Rep_type::iterator               iterator;\n       typedef typename _Rep_type::const_iterator         const_iterator;\n       typedef typename _Rep_type::size_type              size_type;\n       typedef typename _Rep_type::difference_type        difference_type;\n-      typedef typename _Rep_type::pointer                pointer;\n-      typedef typename _Rep_type::const_pointer          const_pointer;\n       typedef typename _Rep_type::reverse_iterator       reverse_iterator;\n       typedef typename _Rep_type::const_reverse_iterator const_reverse_iterator;\n \n-\n       // [23.3.2] construct/copy/destroy\n       // (get_allocator() is also listed in this section)\n       /**"}, {"sha": "f0ba33280029bb0a17fb29ae409e307d88409c8d", "filename": "libstdc++-v3/include/bits/stl_vector.h", "status": "modified", "additions": 10, "deletions": 10, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7338fc64dde8ab8315095e226c1b9e2469a4e369/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_vector.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7338fc64dde8ab8315095e226c1b9e2469a4e369/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_vector.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_vector.h?ref=7338fc64dde8ab8315095e226c1b9e2469a4e369", "patch": "@@ -153,19 +153,19 @@ namespace _GLIBCXX_STD\n       typedef vector<_Tp, _Alloc>\t\t\tvector_type;\n \n     public:\n-      typedef _Tp\t\t\t\t\tvalue_type;\n-      typedef value_type*\t\t\t\tpointer;\n-      typedef const value_type*\t\t\t\tconst_pointer;\n+      typedef _Tp\t\t\t\t\t value_type;\n+      typedef typename _Alloc::pointer                   pointer;\n+      typedef typename _Alloc::const_pointer             const_pointer;\n+      typedef typename _Alloc::reference                 reference;\n+      typedef typename _Alloc::const_reference           const_reference;\n       typedef __gnu_cxx::__normal_iterator<pointer, vector_type> iterator;\n       typedef __gnu_cxx::__normal_iterator<const_pointer, vector_type>\n       const_iterator;\n-      typedef std::reverse_iterator<const_iterator> const_reverse_iterator;\n-      typedef std::reverse_iterator<iterator>\t\treverse_iterator;\n-      typedef value_type&\t\t\t\treference;\n-      typedef const value_type&\t\t\t\tconst_reference;\n-      typedef size_t\t\t\t\t\tsize_type;\n-      typedef ptrdiff_t\t\t\t\t\tdifference_type;\n-      typedef typename _Base::allocator_type\t\tallocator_type;\n+      typedef std::reverse_iterator<const_iterator>  const_reverse_iterator;\n+      typedef std::reverse_iterator<iterator>\t\t reverse_iterator;\n+      typedef size_t\t\t\t\t\t size_type;\n+      typedef ptrdiff_t\t\t\t\t\t difference_type;\n+      typedef typename _Base::allocator_type\t\t allocator_type;\n \n     protected:\n       /** @if maint"}]}