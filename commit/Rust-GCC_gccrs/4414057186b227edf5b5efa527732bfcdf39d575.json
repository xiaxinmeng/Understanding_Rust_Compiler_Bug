{"sha": "4414057186b227edf5b5efa527732bfcdf39d575", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDQxNDA1NzE4NmIyMjdlZGY1YjVlZmE1Mjc3MzJiZmNkZjM5ZDU3NQ==", "commit": {"author": {"name": "Patrick Palka", "email": "ppalka@redhat.com", "date": "2021-08-02T19:30:13Z"}, "committer": {"name": "Patrick Palka", "email": "ppalka@redhat.com", "date": "2021-08-02T19:30:13Z"}, "message": "libstdc++: Fix up implementation of LWG 3533 [PR101589]\n\nIn r12-569 I accidentally applied the LWG 3533 change to\nelements_view::iterator::base instead to elements_view::base.\n\nThis patch corrects this, and also applies the corresponding LWG 3533\nchange to lazy_split_view::inner-iter::base now that we implement P2210.\n\n\tPR libstdc++/101589\n\nlibstdc++-v3/ChangeLog:\n\n\t* include/std/ranges (lazy_split_view::_InnerIter::base): Make\n\tthe const& overload unconstrained and return a const reference\n\tas per LWG 3533.  Make unconditionally noexcept.\n\t(elements_view::base): Revert accidental r12-569 change.\n\t(elements_view::_Iterator::base): Make the const& overload\n\tunconstrained and return a const reference as per LWG 3533.\n\tMake unconditionally noexcept.", "tree": {"sha": "eb77d88f78273df65c65076bb299d3c32cf7d14f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/eb77d88f78273df65c65076bb299d3c32cf7d14f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4414057186b227edf5b5efa527732bfcdf39d575", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4414057186b227edf5b5efa527732bfcdf39d575", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4414057186b227edf5b5efa527732bfcdf39d575", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4414057186b227edf5b5efa527732bfcdf39d575/comments", "author": null, "committer": null, "parents": [{"sha": "0e1bb3c88c7bd624bc34d6cebe3df9532f1858f0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0e1bb3c88c7bd624bc34d6cebe3df9532f1858f0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0e1bb3c88c7bd624bc34d6cebe3df9532f1858f0"}], "stats": {"total": 13, "additions": 6, "deletions": 7}, "files": [{"sha": "5bdcd445a9e766584f668667ae7ec4bd0f8fe583", "filename": "libstdc++-v3/include/std/ranges", "status": "modified", "additions": 6, "deletions": 7, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4414057186b227edf5b5efa527732bfcdf39d575/libstdc%2B%2B-v3%2Finclude%2Fstd%2Franges", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4414057186b227edf5b5efa527732bfcdf39d575/libstdc%2B%2B-v3%2Finclude%2Fstd%2Franges", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Franges?ref=4414057186b227edf5b5efa527732bfcdf39d575", "patch": "@@ -3103,8 +3103,8 @@ namespace views::__adaptor\n \t    : _M_i(std::move(__i))\n \t  { }\n \n-\t  constexpr iterator_t<_Base>\n-\t  base() const& requires copyable<iterator_t<_Base>>\n+\t  constexpr const iterator_t<_Base>&\n+\t  base() const& noexcept\n \t  { return _M_i_current(); }\n \n \t  constexpr iterator_t<_Base>\n@@ -3786,8 +3786,8 @@ namespace views::__adaptor\n \t: _M_base(std::move(base))\n       { }\n \n-      constexpr const _Vp&\n-      base() const & noexcept\n+      constexpr _Vp\n+      base() const& requires copy_constructible<_Vp>\n       { return _M_base; }\n \n       constexpr _Vp\n@@ -3913,9 +3913,8 @@ namespace views::__adaptor\n \t    : _M_current(std::move(i._M_current))\n \t  { }\n \n-\t  constexpr iterator_t<_Base>\n-\t  base() const&\n-\t    requires copyable<iterator_t<_Base>>\n+\t  constexpr const iterator_t<_Base>&\n+\t  base() const& noexcept\n \t  { return _M_current; }\n \n \t  constexpr iterator_t<_Base>"}]}