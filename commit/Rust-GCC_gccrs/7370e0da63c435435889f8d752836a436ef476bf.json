{"sha": "7370e0da63c435435889f8d752836a436ef476bf", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzM3MGUwZGE2M2M0MzU0MzU4ODlmOGQ3NTI4MzZhNDM2ZWY0NzZiZg==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@adacore.com", "date": "2010-09-08T06:12:55Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2010-09-08T06:12:55Z"}, "message": "c-tree.h, c-decl.c (build_enumerator): Add location parameter.\n\n\t* c-tree.h, c-decl.c (build_enumerator): Add location parameter.\n\t* c-parser.c (c_parser_enum_specifier): Adjust call to build_enumerator.\n\nFrom-SVN: r163988", "tree": {"sha": "2c841516224256edebe9f4583216e9213ec8260a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2c841516224256edebe9f4583216e9213ec8260a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7370e0da63c435435889f8d752836a436ef476bf", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7370e0da63c435435889f8d752836a436ef476bf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7370e0da63c435435889f8d752836a436ef476bf", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7370e0da63c435435889f8d752836a436ef476bf/comments", "author": {"login": "ArnaudCharlet", "id": 30291825, "node_id": "MDQ6VXNlcjMwMjkxODI1", "avatar_url": "https://avatars.githubusercontent.com/u/30291825?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ArnaudCharlet", "html_url": "https://github.com/ArnaudCharlet", "followers_url": "https://api.github.com/users/ArnaudCharlet/followers", "following_url": "https://api.github.com/users/ArnaudCharlet/following{/other_user}", "gists_url": "https://api.github.com/users/ArnaudCharlet/gists{/gist_id}", "starred_url": "https://api.github.com/users/ArnaudCharlet/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ArnaudCharlet/subscriptions", "organizations_url": "https://api.github.com/users/ArnaudCharlet/orgs", "repos_url": "https://api.github.com/users/ArnaudCharlet/repos", "events_url": "https://api.github.com/users/ArnaudCharlet/events{/privacy}", "received_events_url": "https://api.github.com/users/ArnaudCharlet/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "e0d4c0b3e5dd120db562995f8d3ba99885012c73", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e0d4c0b3e5dd120db562995f8d3ba99885012c73", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e0d4c0b3e5dd120db562995f8d3ba99885012c73"}], "stats": {"total": 21, "additions": 14, "deletions": 7}, "files": [{"sha": "dc5a194c055f8cac58fd1b50e72173a72d8a8965", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7370e0da63c435435889f8d752836a436ef476bf/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7370e0da63c435435889f8d752836a436ef476bf/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=7370e0da63c435435889f8d752836a436ef476bf", "patch": "@@ -1,3 +1,8 @@\n+2010-09-08  Arnaud Charlet  <charlet@adacore.com>\n+\n+\t* c-tree.h, c-decl.c (build_enumerator): Add location parameter.\n+\t* c-parser.c (c_parser_enum_specifier): Adjust call to build_enumerator.\n+\n 2010-09-08  Kenneth Zadeck <zadeck@naturalbridge.com>\n \tPR doc/45587\n \t* doc/md.texi: Fixed modes on several standard pattern names."}, {"sha": "c7babb54fff3f331f5b34cc872216d87efc35a2f", "filename": "gcc/c-decl.c", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7370e0da63c435435889f8d752836a436ef476bf/gcc%2Fc-decl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7370e0da63c435435889f8d752836a436ef476bf/gcc%2Fc-decl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-decl.c?ref=7370e0da63c435435889f8d752836a436ef476bf", "patch": "@@ -7343,12 +7343,13 @@ finish_enum (tree enumtype, tree values, tree attributes)\n \n /* Build and install a CONST_DECL for one value of the\n    current enumeration type (one that was begun with start_enum).\n-   LOC is the location of the enumerator.\n+   DECL_LOC is the location of the enumerator.\n+   LOC is the location of the '=' operator if any, DECL_LOC otherwise.\n    Return a tree-list containing the CONST_DECL and its value.\n    Assignment of sequential values by default is handled here.  */\n \n tree\n-build_enumerator (location_t loc,\n+build_enumerator (location_t decl_loc, location_t loc,\n \t\t  struct c_enum_contents *the_enum, tree name, tree value)\n {\n   tree decl, type;\n@@ -7436,7 +7437,7 @@ build_enumerator (location_t loc,\n \t\t\t\t  >= TYPE_PRECISION (integer_type_node)\n \t\t\t\t  && TYPE_UNSIGNED (type)));\n \n-  decl = build_decl (loc, CONST_DECL, name, type);\n+  decl = build_decl (decl_loc, CONST_DECL, name, type);\n   DECL_INITIAL (decl) = convert (type, value);\n   pushdecl (decl);\n "}, {"sha": "666f4188f98001d65bcad9bea9ad846c7674fdfa", "filename": "gcc/c-parser.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7370e0da63c435435889f8d752836a436ef476bf/gcc%2Fc-parser.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7370e0da63c435435889f8d752836a436ef476bf/gcc%2Fc-parser.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-parser.c?ref=7370e0da63c435435889f8d752836a436ef476bf", "patch": "@@ -1833,7 +1833,7 @@ c_parser_enum_specifier (c_parser *parser)\n \t  bool seen_comma;\n \t  c_token *token;\n \t  location_t comma_loc = UNKNOWN_LOCATION;  /* Quiet warning.  */\n-\t  location_t value_loc;\n+\t  location_t decl_loc, value_loc;\n \t  if (c_parser_next_token_is_not (parser, CPP_NAME))\n \t    {\n \t      c_parser_error (parser, \"expected identifier\");\n@@ -1845,7 +1845,7 @@ c_parser_enum_specifier (c_parser *parser)\n \t  enum_id = token->value;\n \t  /* Set the location in case we create a decl now.  */\n \t  c_parser_set_source_position_from_token (token);\n-\t  value_loc = token->location;\n+\t  decl_loc = value_loc = token->location;\n \t  c_parser_consume_token (parser);\n \t  if (c_parser_next_token_is (parser, CPP_EQ))\n \t    {\n@@ -1855,7 +1855,7 @@ c_parser_enum_specifier (c_parser *parser)\n \t    }\n \t  else\n \t    enum_value = NULL_TREE;\n-\t  enum_decl = build_enumerator (value_loc,\n+\t  enum_decl = build_enumerator (decl_loc, value_loc,\n \t      \t\t\t\t&the_enum, enum_id, enum_value);\n \t  TREE_CHAIN (enum_decl) = values;\n \t  values = enum_decl;"}, {"sha": "ff349e3723a9666101b3a8d0dfcc99b4b5a43190", "filename": "gcc/c-tree.h", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7370e0da63c435435889f8d752836a436ef476bf/gcc%2Fc-tree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7370e0da63c435435889f8d752836a436ef476bf/gcc%2Fc-tree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-tree.h?ref=7370e0da63c435435889f8d752836a436ef476bf", "patch": "@@ -427,7 +427,8 @@ extern int quals_from_declspecs (const struct c_declspecs *);\n extern struct c_declarator *build_array_declarator (location_t, tree,\n     \t\t\t\t\t\t    struct c_declspecs *,\n \t\t\t\t\t\t    bool, bool);\n-extern tree build_enumerator (location_t, struct c_enum_contents *, tree, tree);\n+extern tree build_enumerator (location_t, location_t, struct c_enum_contents *,\n+\t\t\t      tree, tree);\n extern tree check_for_loop_decls (location_t);\n extern void mark_forward_parm_decls (void);\n extern void declare_parm_level (void);"}]}