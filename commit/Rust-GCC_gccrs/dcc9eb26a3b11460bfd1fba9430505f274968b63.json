{"sha": "dcc9eb26a3b11460bfd1fba9430505f274968b63", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGNjOWViMjZhM2IxMTQ2MGJmZDFmYmE5NDMwNTA1ZjI3NDk2OGI2Mw==", "commit": {"author": {"name": "Andreas Krebbel", "email": "krebbel1@de.ibm.com", "date": "2005-09-08T13:55:30Z"}, "committer": {"name": "Andreas Krebbel", "email": "krebbel@gcc.gnu.org", "date": "2005-09-08T13:55:30Z"}, "message": "s390.c (s390_sr_alias_set): Variable removed.\n\n2005-09-08  Andreas Krebbel  <krebbel1@de.ibm.com>\n\n\t* config/s390/s390.c (s390_sr_alias_set): Variable removed.\n\t(override_options): Setting s390_sr_alias_set removed.\n\t(save_fpr, save_gprs): Set alias set to vararg or frame.\n\t(restore_fpr, restore_gprs, s390_emit_prologue): Replace\n\ts390_sr_alias_set with get_frame_alias_set ().\n\t(s390_gimplify_va_arg): Replace s390_sr_alias_set with\n\tget_varargs_alias_set ().\n\nFrom-SVN: r104034", "tree": {"sha": "18a79a647c95e0c433bb20b72af5810327edfcab", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/18a79a647c95e0c433bb20b72af5810327edfcab"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/dcc9eb26a3b11460bfd1fba9430505f274968b63", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dcc9eb26a3b11460bfd1fba9430505f274968b63", "html_url": "https://github.com/Rust-GCC/gccrs/commit/dcc9eb26a3b11460bfd1fba9430505f274968b63", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dcc9eb26a3b11460bfd1fba9430505f274968b63/comments", "author": null, "committer": null, "parents": [{"sha": "d95036e3f8e8548ec9a568748a24db4f20ea65f5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d95036e3f8e8548ec9a568748a24db4f20ea65f5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d95036e3f8e8548ec9a568748a24db4f20ea65f5"}], "stats": {"total": 45, "additions": 31, "deletions": 14}, "files": [{"sha": "aaaf308405889d0a9673575daa6a573582d1d1a4", "filename": "gcc/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dcc9eb26a3b11460bfd1fba9430505f274968b63/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dcc9eb26a3b11460bfd1fba9430505f274968b63/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=dcc9eb26a3b11460bfd1fba9430505f274968b63", "patch": "@@ -1,3 +1,13 @@\n+2005-09-08  Andreas Krebbel  <krebbel1@de.ibm.com>\n+\n+\t* config/s390/s390.c (s390_sr_alias_set): Variable removed.\n+\t(override_options): Setting s390_sr_alias_set removed.\n+\t(save_fpr, save_gprs): Set alias set to vararg or frame.\n+\t(restore_fpr, restore_gprs, s390_emit_prologue): Replace \n+\ts390_sr_alias_set with get_frame_alias_set ().\n+\t(s390_gimplify_va_arg): Replace s390_sr_alias_set with\n+\tget_varargs_alias_set ().\n+\n 2005-09-08  Andrew Pinski  <pinskia@physics.uc.edu>\n \n \tPR objc/20574"}, {"sha": "129d7ed6f29f859bcb9a31713bf5095c83b5996a", "filename": "gcc/config/s390/s390.c", "status": "modified", "additions": 21, "deletions": 14, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dcc9eb26a3b11460bfd1fba9430505f274968b63/gcc%2Fconfig%2Fs390%2Fs390.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dcc9eb26a3b11460bfd1fba9430505f274968b63/gcc%2Fconfig%2Fs390%2Fs390.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fs390%2Fs390.c?ref=dcc9eb26a3b11460bfd1fba9430505f274968b63", "patch": "@@ -186,9 +186,6 @@ struct processor_costs z9_109_cost =\n \n extern int reload_completed;\n \n-/* The alias set for prologue/epilogue register save/restore.  */\n-static int s390_sr_alias_set = 0;\n-\n /* Save information from a \"cmpxx\" operation until the branch or scc is\n    emitted.  */\n rtx s390_compare_op0, s390_compare_op1;\n@@ -1296,9 +1293,6 @@ s390_handle_option (size_t code, const char *arg, int value ATTRIBUTE_UNUSED)\n void\n override_options (void)\n {\n-  /* Acquire a unique set number for our register saves and restores.  */\n-  s390_sr_alias_set = new_alias_set ();\n-\n   /* Set up function hooks.  */\n   init_machine_status = s390_init_machine_status;\n \n@@ -6272,7 +6266,11 @@ save_fpr (rtx base, int offset, int regnum)\n {\n   rtx addr;\n   addr = gen_rtx_MEM (DFmode, plus_constant (base, offset));\n-  set_mem_alias_set (addr, s390_sr_alias_set);\n+\n+  if (regnum >= 16 && regnum <= (16 + FP_ARG_NUM_REG))\n+    set_mem_alias_set (addr, get_varargs_alias_set ());\n+  else\n+    set_mem_alias_set (addr, get_frame_alias_set ());\n \n   return emit_move_insn (addr, gen_rtx_REG (DFmode, regnum));\n }\n@@ -6285,7 +6283,7 @@ restore_fpr (rtx base, int offset, int regnum)\n {\n   rtx addr;\n   addr = gen_rtx_MEM (DFmode, plus_constant (base, offset));\n-  set_mem_alias_set (addr, s390_sr_alias_set);\n+  set_mem_alias_set (addr, get_frame_alias_set ());\n \n   return emit_move_insn (gen_rtx_REG (DFmode, regnum), addr);\n }\n@@ -6302,7 +6300,8 @@ save_gprs (rtx base, int offset, int first, int last)\n \n   addr = plus_constant (base, offset);\n   addr = gen_rtx_MEM (Pmode, addr);\n-  set_mem_alias_set (addr, s390_sr_alias_set);\n+\n+  set_mem_alias_set (addr, get_frame_alias_set ());\n \n   /* Special-case single register.  */\n   if (first == last)\n@@ -6321,6 +6320,14 @@ save_gprs (rtx base, int offset, int first, int last)\n \t\t\t     gen_rtx_REG (Pmode, first),\n \t\t\t     GEN_INT (last - first + 1));\n \n+  if (first <= 6 && current_function_stdarg)\n+    for (i = 0; i < XVECLEN (PATTERN (insn), 0); i++)\n+      {\n+\trtx mem = XEXP (XVECEXP (PATTERN (insn), 0, i), 0);\n+\t\n+\tif (first + i <= 6)\n+\t  set_mem_alias_set (mem, get_varargs_alias_set ());\n+      }\n \n   /* We need to set the FRAME_RELATED flag on all SETs\n      inside the store-multiple pattern.\n@@ -6377,7 +6384,7 @@ restore_gprs (rtx base, int offset, int first, int last)\n \n   addr = plus_constant (base, offset);\n   addr = gen_rtx_MEM (Pmode, addr);\n-  set_mem_alias_set (addr, s390_sr_alias_set);\n+  set_mem_alias_set (addr, get_frame_alias_set ());\n \n   /* Special-case single register.  */\n   if (first == last)\n@@ -6617,7 +6624,7 @@ s390_emit_prologue (void)\n \t\t\t\t  cfun_frame_layout.backchain_offset));\n \t  else\n \t    addr = gen_rtx_MEM (Pmode, stack_pointer_rtx);  \n-\t  set_mem_alias_set (addr, s390_sr_alias_set);\n+\t  set_mem_alias_set (addr, get_frame_alias_set ());\n \t  insn = emit_insn (gen_move_insn (addr, temp_reg));\n \t}\n \n@@ -6836,7 +6843,7 @@ s390_emit_epilogue (bool sibcall)\n \t\t\t\t    + (i - cfun_frame_layout.first_save_gpr)\n \t\t\t\t    * UNITS_PER_WORD);\n \t      addr = gen_rtx_MEM (Pmode, addr);\n-\t      set_mem_alias_set (addr, s390_sr_alias_set);\n+\t      set_mem_alias_set (addr, get_frame_alias_set ());\n \t      emit_move_insn (addr, gen_rtx_REG (Pmode, i));\n \t    }\n \t}\n@@ -6861,7 +6868,7 @@ s390_emit_epilogue (bool sibcall)\n \t\t\t\t       - cfun_frame_layout.first_save_gpr)\n \t\t\t\t    * UNITS_PER_WORD);\n \t      addr = gen_rtx_MEM (Pmode, addr);\n-\t      set_mem_alias_set (addr, s390_sr_alias_set);\n+\t      set_mem_alias_set (addr, get_frame_alias_set ());\n \t      emit_move_insn (return_reg, addr);\n \t    }\n \t}\n@@ -7399,7 +7406,7 @@ s390_gimplify_va_arg (tree valist, tree type, tree *pre_p,\n   lab_false = create_artificial_label ();\n   lab_over = create_artificial_label ();\n   addr = create_tmp_var (ptr_type_node, \"addr\");\n-  DECL_POINTER_ALIAS_SET (addr) = s390_sr_alias_set;\n+  DECL_POINTER_ALIAS_SET (addr) = get_varargs_alias_set ();\n \n   t = fold_convert (TREE_TYPE (reg), size_int (max_reg));\n   t = build2 (GT_EXPR, boolean_type_node, reg, t);"}]}