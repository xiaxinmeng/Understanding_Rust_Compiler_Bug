{"sha": "f3cb834600e7465ac8f5167c45376a534579e2d3", "node_id": "C_kwDOANBUbNoAKGYzY2I4MzQ2MDBlNzQ2NWFjOGY1MTY3YzQ1Mzc2YTUzNDU3OWUyZDM", "commit": {"author": {"name": "Arthur Cohen", "email": "arthur.cohen@embecosm.com", "date": "2022-11-28T15:38:14Z"}, "committer": {"name": "Arthur Cohen", "email": "arthur.cohen@embecosm.com", "date": "2022-12-05T13:52:09Z"}, "message": "wip: Add long flag and enable it on release builds", "tree": {"sha": "75de14740dee3e23f666f1943d1922d2a01e96e3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/75de14740dee3e23f666f1943d1922d2a01e96e3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f3cb834600e7465ac8f5167c45376a534579e2d3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f3cb834600e7465ac8f5167c45376a534579e2d3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f3cb834600e7465ac8f5167c45376a534579e2d3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f3cb834600e7465ac8f5167c45376a534579e2d3/comments", "author": {"login": "CohenArthur", "id": 43524065, "node_id": "MDQ6VXNlcjQzNTI0MDY1", "avatar_url": "https://avatars.githubusercontent.com/u/43524065?v=4", "gravatar_id": "", "url": "https://api.github.com/users/CohenArthur", "html_url": "https://github.com/CohenArthur", "followers_url": "https://api.github.com/users/CohenArthur/followers", "following_url": "https://api.github.com/users/CohenArthur/following{/other_user}", "gists_url": "https://api.github.com/users/CohenArthur/gists{/gist_id}", "starred_url": "https://api.github.com/users/CohenArthur/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/CohenArthur/subscriptions", "organizations_url": "https://api.github.com/users/CohenArthur/orgs", "repos_url": "https://api.github.com/users/CohenArthur/repos", "events_url": "https://api.github.com/users/CohenArthur/events{/privacy}", "received_events_url": "https://api.github.com/users/CohenArthur/received_events", "type": "User", "site_admin": false}, "committer": {"login": "CohenArthur", "id": 43524065, "node_id": "MDQ6VXNlcjQzNTI0MDY1", "avatar_url": "https://avatars.githubusercontent.com/u/43524065?v=4", "gravatar_id": "", "url": "https://api.github.com/users/CohenArthur", "html_url": "https://github.com/CohenArthur", "followers_url": "https://api.github.com/users/CohenArthur/followers", "following_url": "https://api.github.com/users/CohenArthur/following{/other_user}", "gists_url": "https://api.github.com/users/CohenArthur/gists{/gist_id}", "starred_url": "https://api.github.com/users/CohenArthur/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/CohenArthur/subscriptions", "organizations_url": "https://api.github.com/users/CohenArthur/orgs", "repos_url": "https://api.github.com/users/CohenArthur/repos", "events_url": "https://api.github.com/users/CohenArthur/events{/privacy}", "received_events_url": "https://api.github.com/users/CohenArthur/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9666f2b169b5192b5c827d605cc80e6987e1aac5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9666f2b169b5192b5c827d605cc80e6987e1aac5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9666f2b169b5192b5c827d605cc80e6987e1aac5"}], "stats": {"total": 20, "additions": 17, "deletions": 3}, "files": [{"sha": "9f0d63859b3ae54be7292340d4e6f5fa7e5c2787", "filename": "gcc/rust/Make-lang.in", "status": "modified", "additions": 8, "deletions": 3, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f3cb834600e7465ac8f5167c45376a534579e2d3/gcc%2Frust%2FMake-lang.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f3cb834600e7465ac8f5167c45376a534579e2d3/gcc%2Frust%2FMake-lang.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2FMake-lang.in?ref=f3cb834600e7465ac8f5167c45376a534579e2d3", "patch": "@@ -49,6 +49,13 @@ GCCRS_D_OBJS = \\\n    rust/rustspec.o \\\n    $(END)\n \n+RUST_CXXFLAGS = $(CXXFLAGS)\n+\n+# If the file exists, we're bootstrapping\n+ifneq ($(wildcard ../stage_current)),)\n+RUST_CXXFLAGS += -DRUST_RELEASE\n+endif\n+\n gccrs$(exeext): $(GCCRS_D_OBJS) $(EXTRA_GCC_OBJS) libcommon-target.a $(LIBDEPS)\n \t+$(LINKER) $(ALL_LINKERFLAGS) $(LDFLAGS) -o $@ \\\n \t  $(GCCRS_D_OBJS) $(EXTRA_GCC_OBJS) libcommon-target.a \\\n@@ -269,7 +276,7 @@ rust.uninstall:\n # Enable selftests for the rust frontend\n selftest-rust: s-selftest-rust\n \n-RUST_SELFTEST_FLAGS = -xrust $(SELFTEST_FLAGS)\n+RUST_SELFTEST_FLAGS = -xrust -frust-incomplete-and-experimental-compiler-do-not-use $(SELFTEST_FLAGS)\n RUST_SELFTEST_DEPS = rust1$(exeext) $(SELFTEST_DEPS)\n \n # Run the rust selftests\n@@ -331,8 +338,6 @@ CFLAGS-rust/rust-lex.o += $(RUST_INCLUDES)\n CFLAGS-rust/rust-parse.o += $(RUST_INCLUDES)\n CFLAGS-rust/rust-session-manager.o += $(RUST_INCLUDES)\n \n-RUST_CXXFLAGS = $(CXXFLAGS)\n-\n # build all rust/lex files in rust folder, add cross-folder includes\n rust/%.o: rust/lex/%.cc\n \t$(COMPILE) $(RUST_CXXFLAGS) $(RUST_INCLUDES) $<"}, {"sha": "155892d0027f71ce345719165f74aff4b38b9860", "filename": "gcc/rust/lang.opt", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f3cb834600e7465ac8f5167c45376a534579e2d3/gcc%2Frust%2Flang.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f3cb834600e7465ac8f5167c45376a534579e2d3/gcc%2Frust%2Flang.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Flang.opt?ref=f3cb834600e7465ac8f5167c45376a534579e2d3", "patch": "@@ -74,6 +74,10 @@ frust-mangling=\n Rust Joined RejectNegative Enum(frust_mangling) Var(flag_rust_mangling)\n -frust-mangling=[legacy|v0]     Choose which version to use for name mangling\n \n+frust-incomplete-and-experimental-compiler-do-not-use\n+Rust Var(flag_rust_experimental)\n+Enable experimental compilation of Rust files at your own risk\n+\n Enum\n Name(frust_mangling) Type(int) UnknownError(unknown rust mangling option %qs)\n "}, {"sha": "79bf55279655d4d2754c25974ad7a2c9c87892c5", "filename": "gcc/rust/rust-session-manager.cc", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f3cb834600e7465ac8f5167c45376a534579e2d3/gcc%2Frust%2Frust-session-manager.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f3cb834600e7465ac8f5167c45376a534579e2d3/gcc%2Frust%2Frust-session-manager.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Frust-session-manager.cc?ref=f3cb834600e7465ac8f5167c45376a534579e2d3", "patch": "@@ -427,6 +427,11 @@ Session::handle_crate_name (const AST::Crate &parsed_crate)\n void\n Session::compile_crate (const char *filename)\n {\n+#ifdef RUST_RELEASE\n+  if (!flag_rust_experimental)\n+    gcc_unreachable ();\n+#endif\n+\n   RAIIFile file_wrap (filename);\n   if (!file_wrap.ok ())\n     {"}]}