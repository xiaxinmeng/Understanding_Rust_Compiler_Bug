{"sha": "6da64f1b329f57c07f22ec034bc7bc4b0dc9e87b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmRhNjRmMWIzMjlmNTdjMDdmMjJlYzAzNGJjN2JjNGIwZGM5ZTg3Yg==", "commit": {"author": {"name": "Richard Sandiford", "email": "richard.sandiford@linaro.org", "date": "2018-01-02T18:26:35Z"}, "committer": {"name": "Richard Sandiford", "email": "rsandifo@gcc.gnu.org", "date": "2018-01-02T18:26:35Z"}, "message": "Check whether a vector of QIs can store all indices\n\nThe patch to remove the vec_perm_const optab checked whether replacing\na constant permute with a variable permute is safe, or whether it might\ntruncate the indices.  This patch adds a corresponding check for whether\nvariable permutes can be lowered to QImode-based permutes.\n\n2018-01-02  Richard Sandiford  <richard.sandiford@linaro.org>\n\ngcc/\n\t* optabs-query.c (can_vec_perm_var_p): Check whether lowering\n\tto qimode could truncate the indices.\n\t* optabs.c (expand_vec_perm_var): Likewise.\n\nFrom-SVN: r256094", "tree": {"sha": "0a0b3fe9156bf5b9fca9cd0f7f6423bc94766db1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0a0b3fe9156bf5b9fca9cd0f7f6423bc94766db1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6da64f1b329f57c07f22ec034bc7bc4b0dc9e87b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6da64f1b329f57c07f22ec034bc7bc4b0dc9e87b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6da64f1b329f57c07f22ec034bc7bc4b0dc9e87b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6da64f1b329f57c07f22ec034bc7bc4b0dc9e87b/comments", "author": null, "committer": null, "parents": [{"sha": "f151c9e1414c00e300c9385bc9512c3d9a481296", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f151c9e1414c00e300c9385bc9512c3d9a481296", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f151c9e1414c00e300c9385bc9512c3d9a481296"}], "stats": {"total": 12, "additions": 10, "deletions": 2}, "files": [{"sha": "c7091a906f91d4b598d6d1d8e1fe25d8fc8cbfd6", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6da64f1b329f57c07f22ec034bc7bc4b0dc9e87b/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6da64f1b329f57c07f22ec034bc7bc4b0dc9e87b/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=6da64f1b329f57c07f22ec034bc7bc4b0dc9e87b", "patch": "@@ -1,3 +1,9 @@\n+2018-01-02  Richard Sandiford  <richard.sandiford@linaro.org>\n+\n+\t* optabs-query.c (can_vec_perm_var_p): Check whether lowering\n+\tto qimode could truncate the indices.\n+\t* optabs.c (expand_vec_perm_var): Likewise.\n+\n 2018-01-02  Richard Sandiford  <richard.sandiford@linaro.org>\n \n \t* Makefile.in (OBJS): Add vec-perm-indices.o."}, {"sha": "73966647808f36a0c924a54d787bda771f56c958", "filename": "gcc/optabs-query.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6da64f1b329f57c07f22ec034bc7bc4b0dc9e87b/gcc%2Foptabs-query.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6da64f1b329f57c07f22ec034bc7bc4b0dc9e87b/gcc%2Foptabs-query.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Foptabs-query.c?ref=6da64f1b329f57c07f22ec034bc7bc4b0dc9e87b", "patch": "@@ -390,7 +390,8 @@ can_vec_perm_var_p (machine_mode mode)\n \n   /* We allow fallback to a QI vector mode, and adjust the mask.  */\n   machine_mode qimode;\n-  if (!qimode_for_vec_perm (mode).exists (&qimode))\n+  if (!qimode_for_vec_perm (mode).exists (&qimode)\n+      || GET_MODE_NUNITS (qimode) > GET_MODE_MASK (QImode) + 1)\n     return false;\n \n   if (direct_optab_handler (vec_perm_optab, qimode) == CODE_FOR_nothing)"}, {"sha": "3a41a6560221b0411fd025956451e95b21c79ba2", "filename": "gcc/optabs.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6da64f1b329f57c07f22ec034bc7bc4b0dc9e87b/gcc%2Foptabs.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6da64f1b329f57c07f22ec034bc7bc4b0dc9e87b/gcc%2Foptabs.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Foptabs.c?ref=6da64f1b329f57c07f22ec034bc7bc4b0dc9e87b", "patch": "@@ -5623,7 +5623,8 @@ expand_vec_perm_var (machine_mode mode, rtx v0, rtx v1, rtx sel, rtx target)\n   /* As a special case to aid several targets, lower the element-based\n      permutation to a byte-based permutation and try again.  */\n   machine_mode qimode;\n-  if (!qimode_for_vec_perm (mode).exists (&qimode))\n+  if (!qimode_for_vec_perm (mode).exists (&qimode)\n+      || GET_MODE_NUNITS (qimode) > GET_MODE_MASK (QImode) + 1)\n     return NULL_RTX;\n   icode = direct_optab_handler (vec_perm_optab, qimode);\n   if (icode == CODE_FOR_nothing)"}]}