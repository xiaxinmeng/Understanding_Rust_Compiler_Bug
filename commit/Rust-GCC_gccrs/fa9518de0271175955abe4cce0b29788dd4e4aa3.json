{"sha": "fa9518de0271175955abe4cce0b29788dd4e4aa3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZmE5NTE4ZGUwMjcxMTc1OTU1YWJlNGNjZTBiMjk3ODhkZDRlNGFhMw==", "commit": {"author": {"name": "Franz Sirl", "email": "Franz.Sirl-kernel@lauterbach.com", "date": "2001-04-09T23:43:06Z"}, "committer": {"name": "Franz Sirl", "email": "sirl@gcc.gnu.org", "date": "2001-04-09T23:43:06Z"}, "message": "Makefile.in (LIB2FUNCS_STATIC_EXTRA): New macro.\n\n        2001-04-29  Franz Sirl  <Franz.Sirl-kernel@lauterbach.com>\n\n        * Makefile.in (LIB2FUNCS_STATIC_EXTRA): New macro.\n        (LIB2ADD_ST): New macro, pass it to mklibgcc.\n        * mklibgcc.in (libgcc2_st_objs): New variable, set it from LIB2ADD_ST.\n        (libgcc_st_objs): New, set from libgcc2_st_objs. Use it for libgcc.a.\n        * config/rs6000/t-ppccomm (LIB2FUNCS_STATIC_EXTRA): New macro.\n\nFrom-SVN: r41215", "tree": {"sha": "d83b40ed38c3cf668c8c1b5c65edb4a956efd269", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d83b40ed38c3cf668c8c1b5c65edb4a956efd269"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/fa9518de0271175955abe4cce0b29788dd4e4aa3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fa9518de0271175955abe4cce0b29788dd4e4aa3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fa9518de0271175955abe4cce0b29788dd4e4aa3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fa9518de0271175955abe4cce0b29788dd4e4aa3/comments", "author": {"login": "jinkama-san", "id": 1462162, "node_id": "MDQ6VXNlcjE0NjIxNjI=", "avatar_url": "https://avatars.githubusercontent.com/u/1462162?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jinkama-san", "html_url": "https://github.com/jinkama-san", "followers_url": "https://api.github.com/users/jinkama-san/followers", "following_url": "https://api.github.com/users/jinkama-san/following{/other_user}", "gists_url": "https://api.github.com/users/jinkama-san/gists{/gist_id}", "starred_url": "https://api.github.com/users/jinkama-san/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jinkama-san/subscriptions", "organizations_url": "https://api.github.com/users/jinkama-san/orgs", "repos_url": "https://api.github.com/users/jinkama-san/repos", "events_url": "https://api.github.com/users/jinkama-san/events{/privacy}", "received_events_url": "https://api.github.com/users/jinkama-san/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "d4f33f6c82041b514d78c6bf9282eade563a509b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d4f33f6c82041b514d78c6bf9282eade563a509b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d4f33f6c82041b514d78c6bf9282eade563a509b"}], "stats": {"total": 57, "additions": 50, "deletions": 7}, "files": [{"sha": "2a454762c4034b1314785c3e0d5f9f071be490d8", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fa9518de0271175955abe4cce0b29788dd4e4aa3/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fa9518de0271175955abe4cce0b29788dd4e4aa3/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=fa9518de0271175955abe4cce0b29788dd4e4aa3", "patch": "@@ -1,3 +1,11 @@\n+2001-04-29  Franz Sirl  <Franz.Sirl-kernel@lauterbach.com>\n+\n+\t* Makefile.in (LIB2FUNCS_STATIC_EXTRA): New macro.\n+\t(LIB2ADD_ST): New macro, pass it to mklibgcc.\n+\t* mklibgcc.in (libgcc2_st_objs): New variable, set it from LIB2ADD_ST.\n+        (libgcc_st_objs): New, set from libgcc2_st_objs. Use it for libgcc.a.\n+\t* config/rs6000/t-ppccomm (LIB2FUNCS_STATIC_EXTRA): New macro.\n+\n 2001-04-09  Bo Thorsen  <bo@suse.co.uk>\n \n \t* config/i386/i386.md: \"TARGET_64BIT && TARGET_64BIT\": Removed one."}, {"sha": "48cac08d5879cc669e39af5e3fdc06a8296e6060", "filename": "gcc/Makefile.in", "status": "modified", "additions": 10, "deletions": 4, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fa9518de0271175955abe4cce0b29788dd4e4aa3/gcc%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fa9518de0271175955abe4cce0b29788dd4e4aa3/gcc%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FMakefile.in?ref=fa9518de0271175955abe4cce0b29788dd4e4aa3", "patch": "@@ -446,10 +446,14 @@ USE_COLLECT2 = collect2$(exeext)\n # Assembler files should have names ending in `.asm'.\n LIB1FUNCS_EXTRA =\n \n-# List of extra C and assembler files to add to libgcc2.a.\n+# List of extra C and assembler files to add to static and shared libgcc2.\n # Assembler files should have names ending in `.asm'.\n LIB2FUNCS_EXTRA =\n \n+# List of extra C and assembler files to add to static libgcc2.\n+# Assembler files should have names ending in `.asm'.\n+LIB2FUNCS_STATIC_EXTRA =\n+\n # Handle cpp installation.\n INSTALL_CPP=\n UNINSTALL_CPP=\n@@ -1034,8 +1038,9 @@ xlimits.h: glimits.h limitx.h limity.h\n # Build libgcc.a.\n \n LIB2ADD = $(LIB2FUNCS_EXTRA)\n+LIB2ADD_ST = $(LIB2FUNCS_STATIC_EXTRA)\n \n-libgcc.mk: config.status Makefile mklibgcc $(LIB2ADD) xgcc$(exeext)\n+libgcc.mk: config.status Makefile mklibgcc $(LIB2ADD) $(LIB2ADD_ST) xgcc$(exeext)\n \tobjext='$(objext)' \\\n \tOLDCC='$(OLDCC)' \\\n \tLIBGCC1='$(LIBGCC1)' \\\n@@ -1044,6 +1049,7 @@ libgcc.mk: config.status Makefile mklibgcc $(LIB2ADD) xgcc$(exeext)\n \tLIB1FUNCS_EXTRA='$(LIB1FUNCS_EXTRA)' \\\n \tLIB2FUNCS='$(LIB2FUNCS)' \\\n \tLIB2ADD='$(LIB2ADD)' \\\n+\tLIB2ADD_ST='$(LIB2ADD_ST)' \\\n \tLIB2ADDEH='$(LIB2ADDEH)' \\\n \tLIB2ADDEHDEP='$(LIB2ADDEHDEP)' \\\n \tFPBIT='$(FPBIT)' \\\n@@ -1066,8 +1072,8 @@ libgcc.mk: config.status Makefile mklibgcc $(LIB2ADD) xgcc$(exeext)\n LIBGCC_DEPS = $(GCC_PASSES) $(LANGUAGES) stmp-int-hdrs $(STMP_FIXPROTO) \\\n \tlibgcc.mk $(srcdir)/libgcc1.c $(srcdir)/libgcc2.c $(TCONFIG_H) \\\n \t$(MACHMODE_H) longlong.h gbl-ctors.h config.status stmp-int-hdrs \\\n-\ttsystem.h $(FPBIT) $(DPBIT) $(LIB2ADD) $(LIB2ADDEH) $(LIB2ADDEHDEP) \\\n-\t$(EXTRA_PARTS)\n+\ttsystem.h $(FPBIT) $(DPBIT) $(LIB2ADD) $(LIB2ADD_ST) $(LIB2ADDEH) \\\n+\t$(LIB2ADDEHDEP) $(EXTRA_PARTS)\n \n libgcc.a: $(LIBGCC_DEPS)\n \t$(MAKE) GCC_FOR_TARGET=\"$(GCC_FOR_TARGET)\" \\"}, {"sha": "7d500c368942c828f67612b0730082b47cc8937b", "filename": "gcc/config/rs6000/t-ppccomm", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fa9518de0271175955abe4cce0b29788dd4e4aa3/gcc%2Fconfig%2Frs6000%2Ft-ppccomm", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fa9518de0271175955abe4cce0b29788dd4e4aa3/gcc%2Fconfig%2Frs6000%2Ft-ppccomm", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Ft-ppccomm?ref=fa9518de0271175955abe4cce0b29788dd4e4aa3", "patch": "@@ -6,7 +6,10 @@ CROSS_LIBGCC1 =\n \n # These are really part of libgcc1, but this will cause them to be\n # built correctly, so... [taken from t-sparclite]\n-LIB2FUNCS_EXTRA = eabi.S tramp.S\n+LIB2FUNCS_EXTRA = tramp.S\n+\n+# This one can't end up in shared libgcc\n+LIB2FUNCS_STATIC_EXTRA = eabi.S\n \n # We want fine grained libraries, so use the new code to build the\n # floating point emulation libraries."}, {"sha": "6034867136fe874c4e9e2b7a3f70bee6f9a89007", "filename": "gcc/mklibgcc.in", "status": "modified", "additions": 28, "deletions": 2, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fa9518de0271175955abe4cce0b29788dd4e4aa3/gcc%2Fmklibgcc.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fa9518de0271175955abe4cce0b29788dd4e4aa3/gcc%2Fmklibgcc.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fmklibgcc.in?ref=fa9518de0271175955abe4cce0b29788dd4e4aa3", "patch": "@@ -15,6 +15,7 @@\n # LIB1FUNCS_EXTRA\n # LIB2FUNCS\n # LIB2ADD\n+# LIB2ADD_ST \n # LIB2ADDEH\n # LIB2ADDEHDEP\n # FPBIT\n@@ -247,6 +248,26 @@ for file in $LIB2ADDEH; do\n   libgcc2_objs=\"$libgcc2_objs ${oname}${objext}\"\n done\n \n+libgcc2_st_objs=\"\"\n+\n+for file in $LIB2ADD_ST; do\n+  name=`echo $file | sed -e 's/[.][cSo]$//' -e 's/[.]asm$//' -e 's/[.]txt$//'`\n+  oname=`echo $name | sed -e 's,.*/,,'`\n+\n+  for ml in $MULTILIBS; do\n+    dir=`echo ${ml} | sed -e 's/;.*$//' -e 's/=/$(EQ)/g'`\n+    flags=`echo ${ml} | sed -e 's/^[^;]*;//' -e 's/@/ -/g'`;\n+    out=\"libgcc/${dir}/${oname}${objext}\"\n+    if [ ${name}.asm = ${file} ]; then\n+      flags=\"$flags -xassembler-with-cpp\"\n+    fi\n+\n+    echo $out: stmp-dirs $file\n+    echo \"\t$gcc_compile\" $flags -c $file -o $out\n+  done\n+  libgcc2_st_objs=\"$libgcc2_st_objs ${oname}${objext}\"\n+done\n+\n # SHLIB_MKMAP\n # SHLIB_MAPFILES\n for ml in $MULTILIBS; do\n@@ -266,6 +287,11 @@ for ml in $MULTILIBS; do\n   done\n   shlib_deps=\"$libgcc_objs\"\n \n+  libgcc_st_objs=\"\"\n+  for o in $libgcc2_st_objs; do\n+    libgcc_st_objs=\"$libgcc_st_objs libgcc/${dir}/$o\"\n+  done\n+\n   if [ \"$SHLIB_LINK\" -a \"$SHLIB_MKMAP\" -a -z \"$mapfile\" ]; then\n     mapfile=\"libgcc.map\"\n     echo \"\"\n@@ -282,9 +308,9 @@ for ml in $MULTILIBS; do\n   done\n \n   echo \"\"\n-  echo \"${dir}/libgcc.a: $libgcc_objs\"\n+  echo \"${dir}/libgcc.a: $libgcc_objs $libgcc_st_objs\"\n   echo \"\t-rm -rf ${dir}/libgcc.a\"\n-  echo '\t$(AR_CREATE_FOR_TARGET)' ${dir}/libgcc.a $libgcc_objs\n+  echo '\t$(AR_CREATE_FOR_TARGET)' ${dir}/libgcc.a $libgcc_objs $libgcc_st_objs\n   echo '\tif $(RANLIB_TEST_FOR_TARGET) ; then' \\\\\n   echo '\t  $(RANLIB_FOR_TARGET)' ${dir}/libgcc.a ';' \\\\\n   echo '\telse true; fi;'"}]}