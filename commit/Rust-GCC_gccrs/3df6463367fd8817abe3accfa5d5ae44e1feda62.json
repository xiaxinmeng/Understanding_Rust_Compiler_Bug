{"sha": "3df6463367fd8817abe3accfa5d5ae44e1feda62", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2RmNjQ2MzM2N2ZkODgxN2FiZTNhY2NmYTVkNWFlNDRlMWZlZGE2Mg==", "commit": {"author": {"name": "Alexandre Oliva", "email": "aoliva@redhat.com", "date": "2000-07-28T17:56:27Z"}, "committer": {"name": "Benjamin Kosnik", "email": "bkoz@gcc.gnu.org", "date": "2000-07-28T17:56:27Z"}, "message": "acinclude.m4: Include ../libtool.m4.\n\n\n\n\n\n2000-07-28  Alexandre Oliva  <aoliva@redhat.com>\n\n\t* acinclude.m4: Include ../libtool.m4.\n\t* aclocal.m4, configure: Rebuilt.\n\nFrom-SVN: r35322", "tree": {"sha": "f52590f65fe5295bf32cb610f95e53ef4e3ccdd6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f52590f65fe5295bf32cb610f95e53ef4e3ccdd6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3df6463367fd8817abe3accfa5d5ae44e1feda62", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3df6463367fd8817abe3accfa5d5ae44e1feda62", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3df6463367fd8817abe3accfa5d5ae44e1feda62", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3df6463367fd8817abe3accfa5d5ae44e1feda62/comments", "author": null, "committer": null, "parents": [{"sha": "4b983fdc50c590dde021fae533d8c3745897fdae", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4b983fdc50c590dde021fae533d8c3745897fdae", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4b983fdc50c590dde021fae533d8c3745897fdae"}], "stats": {"total": 3315, "additions": 1654, "deletions": 1661}, "files": [{"sha": "825ef61500a2d5f4bfee6c8606af431fc46739d4", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3df6463367fd8817abe3accfa5d5ae44e1feda62/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3df6463367fd8817abe3accfa5d5ae44e1feda62/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=3df6463367fd8817abe3accfa5d5ae44e1feda62", "patch": "@@ -1,3 +1,8 @@\n+2000-07-28  Alexandre Oliva  <aoliva@redhat.com>\n+\n+\t* acinclude.m4: Include ../libtool.m4.\n+        * aclocal.m4, configure: Rebuilt.\n+\t\n 2000-07-26  Phil Edwards  <pme@sourceware.cygnus.com>\n \n \t* acinclude.m4 (GLIBCPP_CHECK_LINKER_FEATURES):  Test for GNU ld"}, {"sha": "43a9690fe64c2d958edbe762e747004971e8be66", "filename": "libstdc++-v3/Makefile.in", "status": "modified", "additions": 3, "deletions": 42, "changes": 45, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3df6463367fd8817abe3accfa5d5ae44e1feda62/libstdc%2B%2B-v3%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3df6463367fd8817abe3accfa5d5ae44e1feda62/libstdc%2B%2B-v3%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FMakefile.in?ref=3df6463367fd8817abe3accfa5d5ae44e1feda62", "patch": "@@ -85,11 +85,13 @@ LN_S = @LN_S@\n MAINT = @MAINT@\n MAKEINFO = @MAKEINFO@\n OBJDUMP = @OBJDUMP@\n+OBJEXT = @OBJEXT@\n OPT_LDFLAGS = @OPT_LDFLAGS@\n PACKAGE = @PACKAGE@\n RANLIB = @RANLIB@\n SECTION_FLAGS = @SECTION_FLAGS@\n SECTION_LDFLAGS = @SECTION_LDFLAGS@\n+STRIP = @STRIP@\n THREADDEPS = @THREADDEPS@\n THREADINCS = @THREADINCS@\n THREADLIBS = @THREADLIBS@\n@@ -151,48 +153,7 @@ MULTICLEAN = true\n # Work around what appears to be a GNU make bug handling MAKEFLAGS\n # values defined in terms of make variables, as is the case for CC and\n # friends when we are called from the top level Makefile.\n-AM_MAKEFLAGS = \\\n-\t\"AR_FLAGS=$(AR_FLAGS)\" \\\n-\t\"CC_FOR_BUILD=$(CC_FOR_BUILD)\" \\\n-\t\"CC_FOR_TARGET=$(CC_FOR_TARGET)\" \\\n-\t\"CFLAGS=$(CFLAGS)\" \\\n-\t\"CXXFLAGS=$(CXXFLAGS)\" \\\n-\t\"CFLAGS_FOR_BUILD=$(CFLAGS_FOR_BUILD)\" \\\n-\t\"CFLAGS_FOR_TARGET=$(CFLAGS_FOR_TARGET)\" \\\n-\t\"INSTALL=$(INSTALL)\" \\\n-\t\"INSTALL_DATA=$(INSTALL_DATA)\" \\\n-\t\"INSTALL_PROGRAM=$(INSTALL_PROGRAM)\" \\\n-\t\"INSTALL_SCRIPT=$(INSTALL_SCRIPT)\" \\\n-\t\"LDFLAGS=$(LDFLAGS)\" \\\n-\t\"LIBCFLAGS=$(LIBCFLAGS)\" \\\n-\t\"LIBCFLAGS_FOR_TARGET=$(LIBCFLAGS_FOR_TARGET)\" \\\n-\t\"MAKE=$(MAKE)\" \\\n-\t\"MAKEINFO=$(MAKEINFO) $(MAKEINFOFLAGS)\" \\\n-\t\"PICFLAG=$(PICFLAG)\" \\\n-\t\"PICFLAG_FOR_TARGET=$(PICFLAG_FOR_TARGET)\" \\\n-\t\"SHELL=$(SHELL)\" \\\n-\t\"EXPECT=$(EXPECT)\" \\\n-\t\"RUNTEST=$(RUNTEST)\" \\\n-\t\"RUNTESTFLAGS=$(RUNTESTFLAGS)\" \\\n-\t\"exec_prefix=$(exec_prefix)\" \\\n-\t\"infodir=$(infodir)\" \\\n-\t\"libdir=$(libdir)\" \\\n-\t\"includedir=$(includedir)\" \\\n-\t\"prefix=$(prefix)\" \\\n-\t\"tooldir=$(tooldir)\" \\\n-\t\"AR=$(AR)\" \\\n-\t\"AS=$(AS)\" \\\n-\t\"CC=$(CC)\" \\\n-\t\"CXX=$(CXX)\" \\\n-\t\"LD=$(LD)\" \\\n-\t\"LIBCFLAGS=$(LIBCFLAGS)\" \\\n-\t\"PICFLAG=$(PICFLAG)\" \\\n-\t\"RANLIB=$(RANLIB)\" \\\n-\t\"NM=$(NM)\" \\\n-\t\"NM_FOR_BUILD=$(NM_FOR_BUILD)\" \\\n-\t\"NM_FOR_TARGET=$(NM_FOR_TARGET)\" \\\n-\t\"DESTDIR=$(DESTDIR)\" \\\n-\t\"WERROR=$(WERROR)\"\n+AM_MAKEFLAGS =  \t\"AR_FLAGS=$(AR_FLAGS)\" \t\"CC_FOR_BUILD=$(CC_FOR_BUILD)\" \t\"CC_FOR_TARGET=$(CC_FOR_TARGET)\" \t\"CFLAGS=$(CFLAGS)\" \t\"CXXFLAGS=$(CXXFLAGS)\" \t\"CFLAGS_FOR_BUILD=$(CFLAGS_FOR_BUILD)\" \t\"CFLAGS_FOR_TARGET=$(CFLAGS_FOR_TARGET)\" \t\"INSTALL=$(INSTALL)\" \t\"INSTALL_DATA=$(INSTALL_DATA)\" \t\"INSTALL_PROGRAM=$(INSTALL_PROGRAM)\" \t\"INSTALL_SCRIPT=$(INSTALL_SCRIPT)\" \t\"LDFLAGS=$(LDFLAGS)\" \t\"LIBCFLAGS=$(LIBCFLAGS)\" \t\"LIBCFLAGS_FOR_TARGET=$(LIBCFLAGS_FOR_TARGET)\" \t\"MAKE=$(MAKE)\" \t\"MAKEINFO=$(MAKEINFO) $(MAKEINFOFLAGS)\" \t\"PICFLAG=$(PICFLAG)\" \t\"PICFLAG_FOR_TARGET=$(PICFLAG_FOR_TARGET)\" \t\"SHELL=$(SHELL)\" \t\"EXPECT=$(EXPECT)\" \t\"RUNTEST=$(RUNTEST)\" \t\"RUNTESTFLAGS=$(RUNTESTFLAGS)\" \t\"exec_prefix=$(exec_prefix)\" \t\"infodir=$(infodir)\" \t\"libdir=$(libdir)\" \t\"includedir=$(includedir)\" \t\"prefix=$(prefix)\" \t\"tooldir=$(tooldir)\" \t\"AR=$(AR)\" \t\"AS=$(AS)\" \t\"CC=$(CC)\" \t\"CXX=$(CXX)\" \t\"LD=$(LD)\" \t\"LIBCFLAGS=$(LIBCFLAGS)\" \t\"PICFLAG=$(PICFLAG)\" \t\"RANLIB=$(RANLIB)\" \t\"NM=$(NM)\" \t\"NM_FOR_BUILD=$(NM_FOR_BUILD)\" \t\"NM_FOR_TARGET=$(NM_FOR_TARGET)\" \t\"DESTDIR=$(DESTDIR)\" \t\"WERROR=$(WERROR)\"\n \n ACLOCAL_M4 = $(top_srcdir)/aclocal.m4\n mkinstalldirs = $(SHELL) $(top_srcdir)/../mkinstalldirs"}, {"sha": "54edb75dd3139aaefcf5cb7fdeeb226d7a803890", "filename": "libstdc++-v3/acinclude.m4", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3df6463367fd8817abe3accfa5d5ae44e1feda62/libstdc%2B%2B-v3%2Facinclude.m4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3df6463367fd8817abe3accfa5d5ae44e1feda62/libstdc%2B%2B-v3%2Facinclude.m4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Facinclude.m4?ref=3df6463367fd8817abe3accfa5d5ae44e1feda62", "patch": "@@ -1574,3 +1574,13 @@ dnl string, '#' otherwise\n   fi\n   AC_SUBST(ifGNUmake)\n ])\n+\n+sinclude(../libtool.m4)\n+dnl The lines below arrange for aclocal not to bring an installed\n+dnl libtool.m4 into aclocal.m4, while still arranging for automake to\n+dnl add a definition of LIBTOOL to Makefile.in.\n+ifelse(,,,[AC_SUBST(LIBTOOL)\n+AC_DEFUN([AM_PROG_LIBTOOL])\n+AC_DEFUN([AC_LIBTOOL_DLOPEN])\n+AC_DEFUN([AC_PROG_LD])\n+])\n\\ No newline at end of file"}, {"sha": "c576511f4f5c197880f6e612680ac4ad2055e515", "filename": "libstdc++-v3/aclocal.m4", "status": "modified", "additions": 9, "deletions": 404, "changes": 413, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3df6463367fd8817abe3accfa5d5ae44e1feda62/libstdc%2B%2B-v3%2Faclocal.m4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3df6463367fd8817abe3accfa5d5ae44e1feda62/libstdc%2B%2B-v3%2Faclocal.m4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Faclocal.m4?ref=3df6463367fd8817abe3accfa5d5ae44e1feda62", "patch": "@@ -1587,6 +1587,15 @@ dnl string, '#' otherwise\n   AC_SUBST(ifGNUmake)\n ])\n \n+sinclude(../libtool.m4)\n+dnl The lines below arrange for aclocal not to bring an installed\n+dnl libtool.m4 into aclocal.m4, while still arranging for automake to\n+dnl add a definition of LIBTOOL to Makefile.in.\n+ifelse(,,,[AC_SUBST(LIBTOOL)\n+AC_DEFUN([AM_PROG_LIBTOOL])\n+AC_DEFUN([AC_LIBTOOL_DLOPEN])\n+AC_DEFUN([AC_PROG_LD])\n+])\n # Do all the work for Automake.  This macro actually does too much --\n # some checks are only needed if your package does certain things.\n # But this isn't really a big deal.\n@@ -1712,410 +1721,6 @@ else\n   $1_FALSE=\n fi])\n \n-\n-# serial 40 AC_PROG_LIBTOOL\n-AC_DEFUN(AC_PROG_LIBTOOL,\n-[AC_REQUIRE([AC_LIBTOOL_SETUP])dnl\n-\n-# Save cache, so that ltconfig can load it\n-AC_CACHE_SAVE\n-\n-# Actually configure libtool.  ac_aux_dir is where install-sh is found.\n-CC=\"$CC\" CFLAGS=\"$CFLAGS\" CPPFLAGS=\"$CPPFLAGS\" \\\n-LD=\"$LD\" LDFLAGS=\"$LDFLAGS\" LIBS=\"$LIBS\" \\\n-LN_S=\"$LN_S\" NM=\"$NM\" RANLIB=\"$RANLIB\" \\\n-DLLTOOL=\"$DLLTOOL\" AS=\"$AS\" OBJDUMP=\"$OBJDUMP\" \\\n-${CONFIG_SHELL-/bin/sh} $ac_aux_dir/ltconfig --no-reexec \\\n-$libtool_flags --no-verify $ac_aux_dir/ltmain.sh $host \\\n-|| AC_MSG_ERROR([libtool configure failed])\n-\n-# Reload cache, that may have been modified by ltconfig\n-AC_CACHE_LOAD\n-\n-# This can be used to rebuild libtool when needed\n-LIBTOOL_DEPS=\"$ac_aux_dir/ltconfig $ac_aux_dir/ltmain.sh\"\n-\n-# Always use our own libtool.\n-LIBTOOL='$(SHELL) $(top_builddir)/libtool'\n-AC_SUBST(LIBTOOL)dnl\n-\n-# Redirect the config.log output again, so that the ltconfig log is not\n-# clobbered by the next message.\n-exec 5>>./config.log\n-])\n-\n-AC_DEFUN(AC_LIBTOOL_SETUP,\n-[AC_PREREQ(2.13)dnl\n-AC_REQUIRE([AC_ENABLE_SHARED])dnl\n-AC_REQUIRE([AC_ENABLE_STATIC])dnl\n-AC_REQUIRE([AC_ENABLE_FAST_INSTALL])dnl\n-AC_REQUIRE([AC_CANONICAL_HOST])dnl\n-AC_REQUIRE([AC_CANONICAL_BUILD])dnl\n-AC_REQUIRE([AC_PROG_RANLIB])dnl\n-AC_REQUIRE([AC_PROG_CC])dnl\n-AC_REQUIRE([AC_PROG_LD])dnl\n-AC_REQUIRE([AC_PROG_NM])dnl\n-AC_REQUIRE([AC_PROG_LN_S])dnl\n-dnl\n-\n-# Check for any special flags to pass to ltconfig.\n-libtool_flags=\"--cache-file=$cache_file\"\n-test \"$enable_shared\" = no && libtool_flags=\"$libtool_flags --disable-shared\"\n-test \"$enable_static\" = no && libtool_flags=\"$libtool_flags --disable-static\"\n-test \"$enable_fast_install\" = no && libtool_flags=\"$libtool_flags --disable-fast-install\"\n-test \"$ac_cv_prog_gcc\" = yes && libtool_flags=\"$libtool_flags --with-gcc\"\n-test \"$ac_cv_prog_gnu_ld\" = yes && libtool_flags=\"$libtool_flags --with-gnu-ld\"\n-ifdef([AC_PROVIDE_AC_LIBTOOL_DLOPEN],\n-[libtool_flags=\"$libtool_flags --enable-dlopen\"])\n-ifdef([AC_PROVIDE_AC_LIBTOOL_WIN32_DLL],\n-[libtool_flags=\"$libtool_flags --enable-win32-dll\"])\n-AC_ARG_ENABLE(libtool-lock,\n-  [  --disable-libtool-lock  avoid locking (might break parallel builds)])\n-test \"x$enable_libtool_lock\" = xno && libtool_flags=\"$libtool_flags --disable-lock\"\n-test x\"$silent\" = xyes && libtool_flags=\"$libtool_flags --silent\"\n-\n-# Some flags need to be propagated to the compiler or linker for good\n-# libtool support.\n-case \"$host\" in\n-*-*-irix6*)\n-  # Find out which ABI we are using.\n-  echo '[#]line __oline__ \"configure\"' > conftest.$ac_ext\n-  if AC_TRY_EVAL(ac_compile); then\n-    case \"`/usr/bin/file conftest.o`\" in\n-    *32-bit*)\n-      LD=\"${LD-ld} -32\"\n-      ;;\n-    *N32*)\n-      LD=\"${LD-ld} -n32\"\n-      ;;\n-    *64-bit*)\n-      LD=\"${LD-ld} -64\"\n-      ;;\n-    esac\n-  fi\n-  rm -rf conftest*\n-  ;;\n-\n-*-*-sco3.2v5*)\n-  # On SCO OpenServer 5, we need -belf to get full-featured binaries.\n-  SAVE_CFLAGS=\"$CFLAGS\"\n-  CFLAGS=\"$CFLAGS -belf\"\n-  AC_CACHE_CHECK([whether the C compiler needs -belf], lt_cv_cc_needs_belf,\n-    [AC_TRY_LINK([],[],[lt_cv_cc_needs_belf=yes],[lt_cv_cc_needs_belf=no])])\n-  if test x\"$lt_cv_cc_needs_belf\" != x\"yes\"; then\n-    # this is probably gcc 2.8.0, egcs 1.0 or newer; no need for -belf\n-    CFLAGS=\"$SAVE_CFLAGS\"\n-  fi\n-  ;;\n-\n-ifdef([AC_PROVIDE_AC_LIBTOOL_WIN32_DLL],\n-[*-*-cygwin* | *-*-mingw*)\n-  AC_CHECK_TOOL(DLLTOOL, dlltool, false)\n-  AC_CHECK_TOOL(AS, as, false)\n-  AC_CHECK_TOOL(OBJDUMP, objdump, false)\n-  ;;\n-])\n-esac\n-])\n-\n-# AC_LIBTOOL_DLOPEN - enable checks for dlopen support\n-AC_DEFUN(AC_LIBTOOL_DLOPEN, [AC_BEFORE([$0],[AC_LIBTOOL_SETUP])])\n-\n-# AC_LIBTOOL_WIN32_DLL - declare package support for building win32 dll's\n-AC_DEFUN(AC_LIBTOOL_WIN32_DLL, [AC_BEFORE([$0], [AC_LIBTOOL_SETUP])])\n-\n-# AC_ENABLE_SHARED - implement the --enable-shared flag\n-# Usage: AC_ENABLE_SHARED[(DEFAULT)]\n-#   Where DEFAULT is either `yes' or `no'.  If omitted, it defaults to\n-#   `yes'.\n-AC_DEFUN(AC_ENABLE_SHARED, [dnl\n-define([AC_ENABLE_SHARED_DEFAULT], ifelse($1, no, no, yes))dnl\n-AC_ARG_ENABLE(shared,\n-changequote(<<, >>)dnl\n-<<  --enable-shared[=PKGS]  build shared libraries [default=>>AC_ENABLE_SHARED_DEFAULT],\n-changequote([, ])dnl\n-[p=${PACKAGE-default}\n-case \"$enableval\" in\n-yes) enable_shared=yes ;;\n-no) enable_shared=no ;;\n-*)\n-  enable_shared=no\n-  # Look at the argument we got.  We use all the common list separators.\n-  IFS=\"${IFS= \t}\"; ac_save_ifs=\"$IFS\"; IFS=\"${IFS}:,\"\n-  for pkg in $enableval; do\n-    if test \"X$pkg\" = \"X$p\"; then\n-      enable_shared=yes\n-    fi\n-  done\n-  IFS=\"$ac_save_ifs\"\n-  ;;\n-esac],\n-enable_shared=AC_ENABLE_SHARED_DEFAULT)dnl\n-])\n-\n-# AC_DISABLE_SHARED - set the default shared flag to --disable-shared\n-AC_DEFUN(AC_DISABLE_SHARED, [AC_BEFORE([$0],[AC_LIBTOOL_SETUP])dnl\n-AC_ENABLE_SHARED(no)])\n-\n-# AC_ENABLE_STATIC - implement the --enable-static flag\n-# Usage: AC_ENABLE_STATIC[(DEFAULT)]\n-#   Where DEFAULT is either `yes' or `no'.  If omitted, it defaults to\n-#   `yes'.\n-AC_DEFUN(AC_ENABLE_STATIC, [dnl\n-define([AC_ENABLE_STATIC_DEFAULT], ifelse($1, no, no, yes))dnl\n-AC_ARG_ENABLE(static,\n-changequote(<<, >>)dnl\n-<<  --enable-static[=PKGS]  build static libraries [default=>>AC_ENABLE_STATIC_DEFAULT],\n-changequote([, ])dnl\n-[p=${PACKAGE-default}\n-case \"$enableval\" in\n-yes) enable_static=yes ;;\n-no) enable_static=no ;;\n-*)\n-  enable_static=no\n-  # Look at the argument we got.  We use all the common list separators.\n-  IFS=\"${IFS= \t}\"; ac_save_ifs=\"$IFS\"; IFS=\"${IFS}:,\"\n-  for pkg in $enableval; do\n-    if test \"X$pkg\" = \"X$p\"; then\n-      enable_static=yes\n-    fi\n-  done\n-  IFS=\"$ac_save_ifs\"\n-  ;;\n-esac],\n-enable_static=AC_ENABLE_STATIC_DEFAULT)dnl\n-])\n-\n-# AC_DISABLE_STATIC - set the default static flag to --disable-static\n-AC_DEFUN(AC_DISABLE_STATIC, [AC_BEFORE([$0],[AC_LIBTOOL_SETUP])dnl\n-AC_ENABLE_STATIC(no)])\n-\n-\n-# AC_ENABLE_FAST_INSTALL - implement the --enable-fast-install flag\n-# Usage: AC_ENABLE_FAST_INSTALL[(DEFAULT)]\n-#   Where DEFAULT is either `yes' or `no'.  If omitted, it defaults to\n-#   `yes'.\n-AC_DEFUN(AC_ENABLE_FAST_INSTALL, [dnl\n-define([AC_ENABLE_FAST_INSTALL_DEFAULT], ifelse($1, no, no, yes))dnl\n-AC_ARG_ENABLE(fast-install,\n-changequote(<<, >>)dnl\n-<<  --enable-fast-install[=PKGS]  optimize for fast installation [default=>>AC_ENABLE_FAST_INSTALL_DEFAULT],\n-changequote([, ])dnl\n-[p=${PACKAGE-default}\n-case \"$enableval\" in\n-yes) enable_fast_install=yes ;;\n-no) enable_fast_install=no ;;\n-*)\n-  enable_fast_install=no\n-  # Look at the argument we got.  We use all the common list separators.\n-  IFS=\"${IFS= \t}\"; ac_save_ifs=\"$IFS\"; IFS=\"${IFS}:,\"\n-  for pkg in $enableval; do\n-    if test \"X$pkg\" = \"X$p\"; then\n-      enable_fast_install=yes\n-    fi\n-  done\n-  IFS=\"$ac_save_ifs\"\n-  ;;\n-esac],\n-enable_fast_install=AC_ENABLE_FAST_INSTALL_DEFAULT)dnl\n-])\n-\n-# AC_ENABLE_FAST_INSTALL - set the default to --disable-fast-install\n-AC_DEFUN(AC_DISABLE_FAST_INSTALL, [AC_BEFORE([$0],[AC_LIBTOOL_SETUP])dnl\n-AC_ENABLE_FAST_INSTALL(no)])\n-\n-# AC_PROG_LD - find the path to the GNU or non-GNU linker\n-AC_DEFUN(AC_PROG_LD,\n-[AC_ARG_WITH(gnu-ld,\n-[  --with-gnu-ld           assume the C compiler uses GNU ld [default=no]],\n-test \"$withval\" = no || with_gnu_ld=yes, with_gnu_ld=no)\n-AC_REQUIRE([AC_PROG_CC])dnl\n-AC_REQUIRE([AC_CANONICAL_HOST])dnl\n-AC_REQUIRE([AC_CANONICAL_BUILD])dnl\n-ac_prog=ld\n-if test \"$ac_cv_prog_gcc\" = yes; then\n-  # Check if gcc -print-prog-name=ld gives a path.\n-  AC_MSG_CHECKING([for ld used by GCC])\n-  ac_prog=`($CC -print-prog-name=ld) 2>&5`\n-  case \"$ac_prog\" in\n-    # Accept absolute paths.\n-changequote(,)dnl\n-    [\\\\/]* | [A-Za-z]:[\\\\/]*)\n-      re_direlt='/[^/][^/]*/\\.\\./'\n-changequote([,])dnl\n-      # Canonicalize the path of ld\n-      ac_prog=`echo $ac_prog| sed 's%\\\\\\\\%/%g'`\n-      while echo $ac_prog | grep \"$re_direlt\" > /dev/null 2>&1; do\n-\tac_prog=`echo $ac_prog| sed \"s%$re_direlt%/%\"`\n-      done\n-      test -z \"$LD\" && LD=\"$ac_prog\"\n-      ;;\n-  \"\")\n-    # If it fails, then pretend we aren't using GCC.\n-    ac_prog=ld\n-    ;;\n-  *)\n-    # If it is relative, then search for the first ld in PATH.\n-    with_gnu_ld=unknown\n-    ;;\n-  esac\n-elif test \"$with_gnu_ld\" = yes; then\n-  AC_MSG_CHECKING([for GNU ld])\n-else\n-  AC_MSG_CHECKING([for non-GNU ld])\n-fi\n-AC_CACHE_VAL(ac_cv_path_LD,\n-[if test -z \"$LD\"; then\n-  IFS=\"${IFS= \t}\"; ac_save_ifs=\"$IFS\"; IFS=\"${IFS}${PATH_SEPARATOR-:}\"\n-  for ac_dir in $PATH; do\n-    test -z \"$ac_dir\" && ac_dir=.\n-    if test -f \"$ac_dir/$ac_prog\" || test -f \"$ac_dir/$ac_prog$ac_exeext\"; then\n-      ac_cv_path_LD=\"$ac_dir/$ac_prog\"\n-      # Check to see if the program is GNU ld.  I'd rather use --version,\n-      # but apparently some GNU ld's only accept -v.\n-      # Break only if it was the GNU/non-GNU ld that we prefer.\n-      if \"$ac_cv_path_LD\" -v 2>&1 < /dev/null | egrep '(GNU|with BFD)' > /dev/null; then\n-\ttest \"$with_gnu_ld\" != no && break\n-      else\n-\ttest \"$with_gnu_ld\" != yes && break\n-      fi\n-    fi\n-  done\n-  IFS=\"$ac_save_ifs\"\n-else\n-  ac_cv_path_LD=\"$LD\" # Let the user override the test with a path.\n-fi])\n-LD=\"$ac_cv_path_LD\"\n-if test -n \"$LD\"; then\n-  AC_MSG_RESULT($LD)\n-else\n-  AC_MSG_RESULT(no)\n-fi\n-test -z \"$LD\" && AC_MSG_ERROR([no acceptable ld found in \\$PATH])\n-AC_PROG_LD_GNU\n-])\n-\n-AC_DEFUN(AC_PROG_LD_GNU,\n-[AC_CACHE_CHECK([if the linker ($LD) is GNU ld], ac_cv_prog_gnu_ld,\n-[# I'd rather use --version here, but apparently some GNU ld's only accept -v.\n-if $LD -v 2>&1 </dev/null | egrep '(GNU|with BFD)' 1>&5; then\n-  ac_cv_prog_gnu_ld=yes\n-else\n-  ac_cv_prog_gnu_ld=no\n-fi])\n-])\n-\n-# AC_PROG_NM - find the path to a BSD-compatible name lister\n-AC_DEFUN(AC_PROG_NM,\n-[AC_MSG_CHECKING([for BSD-compatible nm])\n-AC_CACHE_VAL(ac_cv_path_NM,\n-[if test -n \"$NM\"; then\n-  # Let the user override the test.\n-  ac_cv_path_NM=\"$NM\"\n-else\n-  IFS=\"${IFS= \t}\"; ac_save_ifs=\"$IFS\"; IFS=\"${IFS}${PATH_SEPARATOR-:}\"\n-  for ac_dir in $PATH /usr/ccs/bin /usr/ucb /bin; do\n-    test -z \"$ac_dir\" && ac_dir=.\n-    if test -f $ac_dir/nm || test -f $ac_dir/nm$ac_exeext ; then\n-      # Check to see if the nm accepts a BSD-compat flag.\n-      # Adding the `sed 1q' prevents false positives on HP-UX, which says:\n-      #   nm: unknown option \"B\" ignored\n-      if ($ac_dir/nm -B /dev/null 2>&1 | sed '1q'; exit 0) | egrep /dev/null >/dev/null; then\n-\tac_cv_path_NM=\"$ac_dir/nm -B\"\n-\tbreak\n-      elif ($ac_dir/nm -p /dev/null 2>&1 | sed '1q'; exit 0) | egrep /dev/null >/dev/null; then\n-\tac_cv_path_NM=\"$ac_dir/nm -p\"\n-\tbreak\n-      else\n-\tac_cv_path_NM=${ac_cv_path_NM=\"$ac_dir/nm\"} # keep the first match, but\n-\tcontinue # so that we can try to find one that supports BSD flags\n-      fi\n-    fi\n-  done\n-  IFS=\"$ac_save_ifs\"\n-  test -z \"$ac_cv_path_NM\" && ac_cv_path_NM=nm\n-fi])\n-NM=\"$ac_cv_path_NM\"\n-AC_MSG_RESULT([$NM])\n-])\n-\n-# AC_CHECK_LIBM - check for math library\n-AC_DEFUN(AC_CHECK_LIBM,\n-[AC_REQUIRE([AC_CANONICAL_HOST])dnl\n-LIBM=\n-case \"$host\" in\n-*-*-beos* | *-*-cygwin*)\n-  # These system don't have libm\n-  ;;\n-*-ncr-sysv4.3*)\n-  AC_CHECK_LIB(mw, _mwvalidcheckl, LIBM=\"-lmw\")\n-  AC_CHECK_LIB(m, main, LIBM=\"$LIBM -lm\")\n-  ;;\n-*)\n-  AC_CHECK_LIB(m, main, LIBM=\"-lm\")\n-  ;;\n-esac\n-])\n-\n-# AC_LIBLTDL_CONVENIENCE[(dir)] - sets LIBLTDL to the link flags for\n-# the libltdl convenience library, adds --enable-ltdl-convenience to\n-# the configure arguments.  Note that LIBLTDL is not AC_SUBSTed, nor\n-# is AC_CONFIG_SUBDIRS called.  If DIR is not provided, it is assumed\n-# to be `${top_builddir}/libltdl'.  Make sure you start DIR with\n-# '${top_builddir}/' (note the single quotes!) if your package is not\n-# flat, and, if you're not using automake, define top_builddir as\n-# appropriate in the Makefiles.\n-AC_DEFUN(AC_LIBLTDL_CONVENIENCE, [AC_BEFORE([$0],[AC_LIBTOOL_SETUP])dnl\n-  case \"$enable_ltdl_convenience\" in\n-  no) AC_MSG_ERROR([this package needs a convenience libltdl]) ;;\n-  \"\") enable_ltdl_convenience=yes\n-      ac_configure_args=\"$ac_configure_args --enable-ltdl-convenience\" ;;\n-  esac\n-  LIBLTDL=ifelse($#,1,$1,['${top_builddir}/libltdl'])/libltdlc.la\n-  INCLTDL=ifelse($#,1,-I$1,['-I${top_builddir}/libltdl'])\n-])\n-\n-# AC_LIBLTDL_INSTALLABLE[(dir)] - sets LIBLTDL to the link flags for\n-# the libltdl installable library, and adds --enable-ltdl-install to\n-# the configure arguments.  Note that LIBLTDL is not AC_SUBSTed, nor\n-# is AC_CONFIG_SUBDIRS called.  If DIR is not provided, it is assumed\n-# to be `${top_builddir}/libltdl'.  Make sure you start DIR with\n-# '${top_builddir}/' (note the single quotes!) if your package is not\n-# flat, and, if you're not using automake, define top_builddir as\n-# appropriate in the Makefiles.\n-# In the future, this macro may have to be called after AC_PROG_LIBTOOL.\n-AC_DEFUN(AC_LIBLTDL_INSTALLABLE, [AC_BEFORE([$0],[AC_LIBTOOL_SETUP])dnl\n-  AC_CHECK_LIB(ltdl, main,\n-  [test x\"$enable_ltdl_install\" != xyes && enable_ltdl_install=no],\n-  [if test x\"$enable_ltdl_install\" = xno; then\n-     AC_MSG_WARN([libltdl not installed, but installation disabled])\n-   else\n-     enable_ltdl_install=yes\n-   fi\n-  ])\n-  if test x\"$enable_ltdl_install\" = x\"yes\"; then\n-    ac_configure_args=\"$ac_configure_args --enable-ltdl-install\"\n-    LIBLTDL=ifelse($#,1,$1,['${top_builddir}/libltdl'])/libltdl.la\n-    INCLTDL=ifelse($#,1,-I$1,['-I${top_builddir}/libltdl'])\n-  else\n-    ac_configure_args=\"$ac_configure_args --enable-ltdl-install=no\"\n-    LIBLTDL=\"-lltdl\"\n-    INCLTDL=\n-  fi\n-])\n-\n-dnl old names\n-AC_DEFUN(AM_PROG_LIBTOOL, [indir([AC_PROG_LIBTOOL])])dnl\n-AC_DEFUN(AM_ENABLE_SHARED, [indir([AC_ENABLE_SHARED], $@)])dnl\n-AC_DEFUN(AM_ENABLE_STATIC, [indir([AC_ENABLE_STATIC], $@)])dnl\n-AC_DEFUN(AM_DISABLE_SHARED, [indir([AC_DISABLE_SHARED], $@)])dnl\n-AC_DEFUN(AM_DISABLE_STATIC, [indir([AC_DISABLE_STATIC], $@)])dnl\n-AC_DEFUN(AM_PROG_LD, [indir([AC_PROG_LD])])dnl\n-AC_DEFUN(AM_PROG_NM, [indir([AC_PROG_NM])])dnl\n-\n-dnl This is just to silence aclocal about the macro not being used\n-ifelse([AC_DISABLE_FAST_INSTALL])dnl\n-\n # Like AC_CONFIG_HEADER, but automatically create stamp file.\n \n AC_DEFUN(AM_CONFIG_HEADER,"}, {"sha": "1b909be0d2537cc7e29b265779accc1832930ffe", "filename": "libstdc++-v3/configure", "status": "modified", "additions": 1560, "deletions": 1041, "changes": 2601, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3df6463367fd8817abe3accfa5d5ae44e1feda62/libstdc%2B%2B-v3%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3df6463367fd8817abe3accfa5d5ae44e1feda62/libstdc%2B%2B-v3%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfigure?ref=3df6463367fd8817abe3accfa5d5ae44e1feda62"}, {"sha": "759161ba89b21cffb13c43bba8f4b94fa55fd52f", "filename": "libstdc++-v3/libio/Makefile.in", "status": "modified", "additions": 20, "deletions": 26, "changes": 46, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3df6463367fd8817abe3accfa5d5ae44e1feda62/libstdc%2B%2B-v3%2Flibio%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3df6463367fd8817abe3accfa5d5ae44e1feda62/libstdc%2B%2B-v3%2Flibio%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Flibio%2FMakefile.in?ref=3df6463367fd8817abe3accfa5d5ae44e1feda62", "patch": "@@ -85,11 +85,13 @@ LN_S = @LN_S@\n MAINT = @MAINT@\n MAKEINFO = @MAKEINFO@\n OBJDUMP = @OBJDUMP@\n+OBJEXT = @OBJEXT@\n OPT_LDFLAGS = @OPT_LDFLAGS@\n PACKAGE = @PACKAGE@\n RANLIB = @RANLIB@\n SECTION_FLAGS = @SECTION_FLAGS@\n SECTION_LDFLAGS = @SECTION_LDFLAGS@\n+STRIP = @STRIP@\n THREADDEPS = @THREADDEPS@\n THREADINCS = @THREADINCS@\n THREADLIBS = @THREADLIBS@\n@@ -109,60 +111,46 @@ AUTOMAKE_OPTIONS = 1.3 cygnus\n \n # Passed down for cross compilers, canadian crosses.\n TOPLEVEL_INCLUDES = -I$(includedir)\n-@GLIBCPP_NEED_LIBIO_TRUE@LIBIO_INCLUDES = @GLIBCPP_NEED_LIBIO_TRUE@\\\n-@GLIBCPP_NEED_LIBIO_TRUE@\t-I$(top_builddir)/libio -I$(top_srcdir)/libio \n+@GLIBCPP_NEED_LIBIO_TRUE@LIBIO_INCLUDES = \t-I$(top_builddir)/libio -I$(top_srcdir)/libio \n @GLIBCPP_NEED_LIBIO_FALSE@LIBIO_INCLUDES = \n \n-CONFIG_INCLUDES = \\\n-\t-I$(top_srcdir)/@cpu_include_dir@ \\\n-\t-I$(top_srcdir)/@ctype_include_dir@\n+CONFIG_INCLUDES =  \t-I$(top_srcdir)/@cpu_include_dir@ \t-I$(top_srcdir)/@ctype_include_dir@\n \n \n-INCLUDES = \\\n-\t-nostdinc++ -I$(top_srcdir) \\\n-\t$(LIBIO_INCLUDES) $(CONFIG_INCLUDES) \\\n-\t$(TOPLEVEL_INCLUDES)\t\n+INCLUDES =  \t-nostdinc++ -I$(top_srcdir) \t$(LIBIO_INCLUDES) $(CONFIG_INCLUDES) \t$(TOPLEVEL_INCLUDES)\t\n \n \n noinst_LTLIBRARIES = libio.la\n \n # These bits are all figured out from configure. Look in acinclude.m4\n # or configure.in to see how they are set.\n # NB: DEBUGFLAGS have to be at the end so that -O2 can be overridden.\n-AC_CFLAGS = \\\n-\t$(WERROR) @CPU_FLAGS@ @DEBUG_FLAGS@ \n+AC_CFLAGS =  \t$(WERROR) @CPU_FLAGS@ @DEBUG_FLAGS@ \n \n \n # Need to manually set this option because AC_CXXFLAGS has to be at\n # the end of the compile line so that -O2 can be overridden as the\n # occasion call for it. (ie, --enable-debug)\n-AM_CFLAGS = \\\n-\t-D_GNU_SOURCE $(AC_CFLAGS) \n+AM_CFLAGS =  \t-D_GNU_SOURCE $(AC_CFLAGS) \n \n \n-COMPILE = $(CC) $(DEFS) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(CFLAGS) \\\n-\t$(AM_CFLAGS) \n+COMPILE = $(CC) $(DEFS) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(CFLAGS) \t$(AM_CFLAGS) \n \n \n-LTCOMPILE = $(LIBTOOL) --mode=compile $(CC) $(DEFS) $(INCLUDES) \\\n-\t$(AM_CPPFLAGS) \\$(CPPFLAGS)  $(CFLAGS) $(AM_CFLAGS)\n+LTCOMPILE = $(LIBTOOL) --mode=compile $(CC) $(DEFS) $(INCLUDES) \t$(AM_CPPFLAGS) \\$(CPPFLAGS)  $(CFLAGS) $(AM_CFLAGS)\n \n \n LINK = $(LIBTOOL) --mode=link \"$(CCLD)\" $(CFLAGS) $(AM_CFLAGS) $(LDFLAGS) -o $@\n \n #includes = \n \n-libio_headers = \\\n-        libio.h libioP.h iolibio.h\n+libio_headers =          libio.h libioP.h iolibio.h\n \n-@GLIBCPP_NEED_LIBIO_TRUE@LIBIO_SRCS = @GLIBCPP_NEED_LIBIO_TRUE@\\\n-@GLIBCPP_NEED_LIBIO_TRUE@\tfiledoalloc.c genops.c fileops.c stdfiles.c cleanup.c\n+@GLIBCPP_NEED_LIBIO_TRUE@LIBIO_SRCS = \tfiledoalloc.c genops.c fileops.c stdfiles.c cleanup.c\n @GLIBCPP_NEED_LIBIO_FALSE@LIBIO_SRCS = \n-@GLIBCPP_NEED_WLIBIO_TRUE@LIBIO_WSRCS = @GLIBCPP_NEED_WLIBIO_TRUE@\\\n-@GLIBCPP_NEED_WLIBIO_TRUE@\tiofwide.c wfiledoalloc.c wfileops.c wgenops.c\n+@GLIBCPP_NEED_WLIBIO_TRUE@LIBIO_WSRCS = \tiofwide.c wfiledoalloc.c wfileops.c wgenops.c\n @GLIBCPP_NEED_WLIBIO_FALSE@LIBIO_WSRCS = \n-@GLIBCPP_NEED_XTRA_LIBIO_TRUE@LIBIO_XTRASRCS = @GLIBCPP_NEED_XTRA_LIBIO_TRUE@\\\n-@GLIBCPP_NEED_XTRA_LIBIO_TRUE@\tiofclose.c iofopen.c stdio.c\n+@GLIBCPP_NEED_XTRA_LIBIO_TRUE@LIBIO_XTRASRCS = \tiofclose.c iofopen.c stdio.c\n @GLIBCPP_NEED_XTRA_LIBIO_FALSE@LIBIO_XTRASRCS = \n \n EXTRA_DIST = iostreamP.h\n@@ -251,7 +239,7 @@ OBJECTS = $(libio_la_OBJECTS)\n \n all: all-redirect\n .SUFFIXES:\n-.SUFFIXES: .S .c .lo .o .s\n+.SUFFIXES: .S .c .lo .o .obj .s\n $(srcdir)/Makefile.in: @MAINTAINER_MODE_TRUE@ Makefile.am $(top_srcdir)/configure.in $(ACLOCAL_M4) \n \tcd $(top_srcdir) && $(AUTOMAKE) --cygnus libio/Makefile\n \n@@ -272,6 +260,11 @@ maintainer-clean-noinstLTLIBRARIES:\n .c.o:\n \t$(COMPILE) -c $<\n \n+# FIXME: We should only use cygpath when building on Windows,\n+# and only if it is available.\n+.c.obj:\n+\t$(COMPILE) -c `cygpath -w $<`\n+\n .s.o:\n \t$(COMPILE) -c $<\n \n@@ -280,6 +273,7 @@ maintainer-clean-noinstLTLIBRARIES:\n \n mostlyclean-compile:\n \t-rm -f *.o core *.core\n+\t-rm -f *.$(OBJEXT)\n \n clean-compile:\n "}, {"sha": "392e0c536bc9465dfefc2ab4ea3917a0c97a6f66", "filename": "libstdc++-v3/math/Makefile.in", "status": "modified", "additions": 13, "deletions": 18, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3df6463367fd8817abe3accfa5d5ae44e1feda62/libstdc%2B%2B-v3%2Fmath%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3df6463367fd8817abe3accfa5d5ae44e1feda62/libstdc%2B%2B-v3%2Fmath%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fmath%2FMakefile.in?ref=3df6463367fd8817abe3accfa5d5ae44e1feda62", "patch": "@@ -85,11 +85,13 @@ LN_S = @LN_S@\n MAINT = @MAINT@\n MAKEINFO = @MAKEINFO@\n OBJDUMP = @OBJDUMP@\n+OBJEXT = @OBJEXT@\n OPT_LDFLAGS = @OPT_LDFLAGS@\n PACKAGE = @PACKAGE@\n RANLIB = @RANLIB@\n SECTION_FLAGS = @SECTION_FLAGS@\n SECTION_LDFLAGS = @SECTION_LDFLAGS@\n+STRIP = @STRIP@\n THREADDEPS = @THREADDEPS@\n THREADINCS = @THREADINCS@\n THREADLIBS = @THREADLIBS@\n@@ -109,31 +111,18 @@ AUTOMAKE_OPTIONS = 1.3 cygnus\n \n noinst_LTLIBRARIES = libmath.la\n \n-EXTRA_LONG_DOUBLE_yes = \\\n-\tccosl.c cexpl.c c_logl.c clog10l.c cpowl.c csinhl.c \\\n-\tcsqrtl.c ctanhl.c ctanl.c cargl.c hypotl.c \\\n-\tsignbitl.c cabsl.c \n+EXTRA_LONG_DOUBLE_yes =  \tccosl.c cexpl.c c_logl.c clog10l.c cpowl.c csinhl.c \tcsqrtl.c ctanhl.c ctanl.c cargl.c hypotl.c \tsignbitl.c cabsl.c \n \n \n-EXTRA_DIST = \\\n-\tccos.c ccosf.c ccosh.c ccoshf.c ccoshl.c \\\n-\tcexp.c cexpf.c c_log.c c_logf.c  clog10.c clog10f.c \\\n-\tcpow.c cpowf.c csin.c csinf.c csinh.c csinhf.c \\\n-\tcsinl.c csqrt.c csqrtf.c  ctan.c ctanf.c ctanh.c \\\n-\tctanhf.c  carg.c cargf.c hypot.c hypotf.c\\\n-\tatan2f.c expf.c \\\n-\t$(EXTRA_LONG_DOUBLE_yes) \n+EXTRA_DIST =  \tccos.c ccosf.c ccosh.c ccoshf.c ccoshl.c \tcexp.c cexpf.c c_log.c c_logf.c  clog10.c clog10f.c \tcpow.c cpowf.c csin.c csinf.c csinh.c csinhf.c \tcsinl.c csqrt.c csqrtf.c  ctan.c ctanf.c ctanh.c \tctanhf.c  carg.c cargf.c hypot.c hypotf.c \tatan2f.c expf.c \t$(EXTRA_LONG_DOUBLE_yes) \n \n \n-libmath_la_LIBADD = \\\n-\t@LIBMATHOBJS@ \\\n-\t$(EXTRA_LONG_DOUBLE_$(USE_COMPLEX_LONG_DOUBLE)) \n+libmath_la_LIBADD =  \t@LIBMATHOBJS@ \t$(EXTRA_LONG_DOUBLE_$(USE_COMPLEX_LONG_DOUBLE)) \n \n \n libmath_la_DEPENDENCIES = $(libmath_la_LIBADD)\n \n-libmath_la_SOURCES = \\\n-\tsignbit.c signbitf.c cabs.c cabsf.c \n+libmath_la_SOURCES =  \tsignbit.c signbitf.c cabs.c cabsf.c \n \n \n LINK = $(LIBTOOL) --mode=link \"$(CCLD)\" $(AM_CFLAGS) $(CFLAGS) $(LDFLAGS) -o $@\n@@ -168,7 +157,7 @@ OBJECTS = $(libmath_la_OBJECTS)\n \n all: all-redirect\n .SUFFIXES:\n-.SUFFIXES: .S .c .lo .o .s\n+.SUFFIXES: .S .c .lo .o .obj .s\n $(srcdir)/Makefile.in: @MAINTAINER_MODE_TRUE@ Makefile.am $(top_srcdir)/configure.in $(ACLOCAL_M4) \n \tcd $(top_srcdir) && $(AUTOMAKE) --cygnus math/Makefile\n \n@@ -189,6 +178,11 @@ maintainer-clean-noinstLTLIBRARIES:\n .c.o:\n \t$(COMPILE) -c $<\n \n+# FIXME: We should only use cygpath when building on Windows,\n+# and only if it is available.\n+.c.obj:\n+\t$(COMPILE) -c `cygpath -w $<`\n+\n .s.o:\n \t$(COMPILE) -c $<\n \n@@ -197,6 +191,7 @@ maintainer-clean-noinstLTLIBRARIES:\n \n mostlyclean-compile:\n \t-rm -f *.o core *.core\n+\t-rm -f *.$(OBJEXT)\n \n clean-compile:\n "}, {"sha": "b70705ecf419c310e4f2b9bd8247aba15b5fa3dc", "filename": "libstdc++-v3/src/Makefile.in", "status": "modified", "additions": 34, "deletions": 130, "changes": 164, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3df6463367fd8817abe3accfa5d5ae44e1feda62/libstdc%2B%2B-v3%2Fsrc%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3df6463367fd8817abe3accfa5d5ae44e1feda62/libstdc%2B%2B-v3%2Fsrc%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fsrc%2FMakefile.in?ref=3df6463367fd8817abe3accfa5d5ae44e1feda62", "patch": "@@ -84,11 +84,13 @@ LN_S = @LN_S@\n MAINT = @MAINT@\n MAKEINFO = @MAKEINFO@\n OBJDUMP = @OBJDUMP@\n+OBJEXT = @OBJEXT@\n OPT_LDFLAGS = @OPT_LDFLAGS@\n PACKAGE = @PACKAGE@\n RANLIB = @RANLIB@\n SECTION_FLAGS = @SECTION_FLAGS@\n SECTION_LDFLAGS = @SECTION_LDFLAGS@\n+STRIP = @STRIP@\n THREADDEPS = @THREADDEPS@\n THREADINCS = @THREADINCS@\n THREADLIBS = @THREADLIBS@\n@@ -106,9 +108,9 @@ libinst_wstring_la = @libinst_wstring_la@\n \n AUTOMAKE_OPTIONS = 1.3 gnits\n MAINT_CHARSET = latin1\n-@USE_LIBDIR_TRUE@toolexeclibdir = @USE_LIBDIR_TRUE@$(libdir)$(MULTISUBDIR)\n-@USE_LIBDIR_FALSE@toolexeclibdir = @USE_LIBDIR_FALSE@$(toolexecdir)/lib$(MULTISUBDIR)\n-@USE_LIBDIR_FALSE@toolexecdir = @USE_LIBDIR_FALSE@$(exec_prefix)/$(target_alias)\n+@USE_LIBDIR_TRUE@toolexeclibdir = $(libdir)$(MULTISUBDIR)\n+@USE_LIBDIR_FALSE@toolexeclibdir = $(toolexecdir)/lib$(MULTISUBDIR)\n+@USE_LIBDIR_FALSE@toolexecdir = $(exec_prefix)/$(target_alias)\n \n toolexeclib_LTLIBRARIES = libstdc++.la\n EXTRA_LTLIBRARIES = libinst-string.la libinst-wstring.la\n@@ -120,50 +122,37 @@ EXTRA_LTLIBRARIES = libinst-string.la libinst-wstring.la\n # These bits are all figured out from configure. Look in acinclude.m4\n # or configure.in to see how they are set.\n # NB: DEBUGFLAGS have to be at the end so that -O2 can be overridden.\n-AC_CXXFLAGS = \\\n-\t$(WERROR) @WFMT_FLAGS@ @CPU_FLAGS@ @EXTRA_CXX_FLAGS@ \\\n-\t@SECTION_FLAGS@ @DEBUG_FLAGS@ \n+AC_CXXFLAGS =  \t$(WERROR) @WFMT_FLAGS@ @CPU_FLAGS@ @EXTRA_CXX_FLAGS@ \t@SECTION_FLAGS@ @DEBUG_FLAGS@ \n \n \n # Need to manually set this option because AC_CXXFLAGS has to be at\n # the end of the compile line so that -O2 can be overridden as the\n # occasion call for it. (ie, --enable-debug)\n-AM_CXXFLAGS = \\\n-\t-fno-implicit-templates $(OPTIMIZE_CXXFLAGS) \\\n-\t-Wall -Wno-format -W -Wwrite-strings -Winline \\\n-\t$(AC_CXXFLAGS) \n+AM_CXXFLAGS =  \t-fno-implicit-templates $(OPTIMIZE_CXXFLAGS) \t-Wall -Wno-format -W -Wwrite-strings -Winline \t$(AC_CXXFLAGS) \n \n \n # Passed down for cross compilers, canadian crosses.\n TOPLEVEL_INCLUDES = -I$(includedir)\n-@GLIBCPP_NEED_LIBIO_TRUE@LIBIO_INCLUDES = @GLIBCPP_NEED_LIBIO_TRUE@\\\n-@GLIBCPP_NEED_LIBIO_TRUE@\t-I$(top_builddir)/libio -I$(top_srcdir)/libio \n-@GLIBCPP_NEED_LIBIO_FALSE@LIBIO_INCLUDES = @GLIBCPP_NEED_LIBIO_FALSE@-I$(top_srcdir)/libio\n+@GLIBCPP_NEED_LIBIO_TRUE@LIBIO_INCLUDES = \t-I$(top_builddir)/libio -I$(top_srcdir)/libio \n+@GLIBCPP_NEED_LIBIO_FALSE@LIBIO_INCLUDES = -I$(top_srcdir)/libio\n #CSHADOW_INCLUDES = \\\n #\t@CSHADOWFLAGS@ -I$(top_srcdir)/shadow -I$(top_builddir)/cshadow\n @GLIBCPP_USE_CSHADOW_TRUE@CSHADOW_INCLUDES = \n @GLIBCPP_USE_CSHADOW_FALSE@CSHADOW_INCLUDES = \n \n-CONFIG_INCLUDES = \\\n-\t-I$(top_srcdir)/@cpu_include_dir@ \\\n-\t-I$(top_srcdir)/@ctype_include_dir@\n+CONFIG_INCLUDES =  \t-I$(top_srcdir)/@cpu_include_dir@ \t-I$(top_srcdir)/@ctype_include_dir@\n \n \n-INCLUDES = \\\n-\t-D_GNU_SOURCE -nostdinc++ -I$(top_srcdir) \\\n-\t$(CSHADOW_INCLUDES) $(LIBIO_INCLUDES) \\\n-\t$(CONFIG_INCLUDES) $(TOPLEVEL_INCLUDES)\t\n+INCLUDES =  \t-D_GNU_SOURCE -nostdinc++ -I$(top_srcdir) \t$(CSHADOW_INCLUDES) $(LIBIO_INCLUDES) \t$(CONFIG_INCLUDES) $(TOPLEVEL_INCLUDES)\t\n \n \n # Need to explicitly set this so that AM_CXXFLAGS is last. (That way,\n # things like -O2 passed down from the toplevel can be overridden by\n # --enable-debug.)\n-CXXCOMPILE = $(CXX) $(DEFS) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \\\n-\t     $(CXXFLAGS) $(AM_CXXFLAGS) \n+CXXCOMPILE = $(CXX) $(DEFS) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \t     $(CXXFLAGS) $(AM_CXXFLAGS) \n \n \n-LTCXXCOMPILE = $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(INCLUDES) \\\n-\t       $(AM_CPPFLAGS) $(CPPFLAGS) $(CXXFLAGS) $(AM_CXXFLAGS) \n+LTCXXCOMPILE = $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(INCLUDES) \t       $(AM_CPPFLAGS) $(CPPFLAGS) $(CXXFLAGS) $(AM_CXXFLAGS) \n \n \n # We have a problem when building the shared libstdc++ object if the\n@@ -172,115 +161,24 @@ LTCXXCOMPILE = $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(INCLUDES) \\\n # course is impossible.\n CXXLINK = $(LIBTOOL) --mode=link \"$(CC)\" @OPT_LDFLAGS@ @SECTION_LDFLAGS@ $(AM_CXXFLAGS) $(LDFLAGS) -o $@\n \n-headers = \\\n-\tbits/cpp_type_traits.h \\\n-\tbits/std_cctype.h bits/ctype_base.h bits/ctype_specializations.h \\\n-\tbits/char_traits.h \\\n-\tbits/basic_string.h bits/std_string.h  bits/string.tcc \\\n-\tbits/generic_shadow.h bits/std_utility.h \\\n-\tbits/std_complex.h \\\n-\tbits/valarray_array.h bits/valarray_array.tcc bits/valarray_meta.h \\\n-\tbits/std_valarray.h bits/mask_array.h bits/slice.h bits/slice_array.h \\\n-\tbits/gslice.h bits/gslice_array.h bits/indirect_array.h \\\n-\tbits/std_cassert.h bits/std_cwctype.h \\\n-\tbits/std_cerrno.h bits/std_cfloat.h bits/std_climits.h \\\n-\tbits/std_clocale.h bits/std_cmath.h \\\n-\tbits/std_csetjmp.h bits/std_csignal.h bits/std_cstdarg.h \\\n-\tbits/std_cstddef.h bits/std_cstdio.h bits/std_cstdlib.h \\\n-\tbits/std_cstring.h bits/std_ctime.h bits/std_cwchar.h \\\n-\tbits/std_typeinfo.h bits/std_new.h \\\n-\tbits/std_exception.h bits/exception_support.h \\\n-\tbits/std_fstream.h bits/std_iomanip.h \\\n-\tbits/ios_base.h bits/fpos.h bits/basic_ios.h bits/basic_ios.tcc \\\n-\tbits/std_ios.h bits/std_iosfwd.h bits/std_iostream.h \\\n-\tbits/std_istream.h bits/istream.tcc bits/std_locale.h \\\n-\tbits/fstream.tcc bits/ostream.tcc bits/sbuf_iter.h bits/sstream.tcc \\\n-\tbits/std_ostream.h bits/std_sstream.h bits/std_streambuf.h \\\n-\tbits/streambuf.tcc bits/basic_file.h \\\n-\tbits/locale_facets.h bits/locale_facets.tcc bits/localefwd.h \\\n-\tbits/stl_pthread_alloc.h bits/pthread_allocimpl.h \\\n-\tbits/stl_threads.h bits/stl_iterator_base.h \\\n-\tbackward/algo.h backward/algobase.h backward/alloc.h \\\n-\tbackward/bvector.h backward/defalloc.h backward/deque.h \\\n-\tbackward/function.h backward/hash_map.h backward/hash_set.h \\\n-\tbackward/hashtable.h backward/heap.h backward/iterator.h \\\n-\tbackward/list.h backward/map.h backward/multimap.h backward/new.h \\\n-\tbackward/multiset.h backward/pair.h backward/iostream.h \\\n-\tbackward/rope.h backward/set.h backward/slist.h backward/stack.h \\\n-\tbackward/tempbuf.h backward/tree.h backward/vector.h \\\n-\tbits/std_bitset.h bits/std_deque.h bits/std_functional.h \\\n-\tbits/std_iterator.h bits/std_list.h \\\n-\tbits/std_map.h bits/std_memory.h bits/std_numeric.h \\\n-\tbits/std_queue.h bits/std_set.h bits/std_stack.h \\\n-\tbits/std_stdexcept.h bits/std_vector.h \\\n-\tbits/stl_algo.h bits/stl_algobase.h bits/stl_alloc.h \\\n-\tbits/stl_deque.h bits/stl_function.h \\\n-\tbits/stl_heap.h bits/stl_iterator.h bits/stl_list.h bits/stl_map.h \\\n-\tbits/stl_multimap.h bits/stl_multiset.h bits/stl_numeric.h \\\n-\tbits/stl_pair.h bits/stl_queue.h bits/stl_raw_storage_iter.h \\\n-\tbits/stl_relops.h bits/stl_set.h \\\n-\tbits/stl_stack.h bits/stl_string_fwd.h bits/stl_tempbuf.h \\\n-\tbits/stl_tree.h bits/stl_uninitialized.h bits/stl_vector.h \\\n-\tbits/type_traits.h bits/stl_range_errors.h bits/std_algorithm.h \\\n-\tbits/concept_checks.h bits/container_concepts.h \\\n-\tbits/sequence_concepts.h bits/std_strstream.h \\\n-\text/ropeimpl.h ext/stl_rope.h \\\n-\text/stl_bvector.h bits/stl_config.h bits/stl_construct.h \\\n-\text/stl_hashtable.h ext/stl_hash_fun.h \\\n-\text/hash_map ext/hash_set ext/rope ext/slist \\\n-\text/tree ext/bvector \\\n-\tshadow/assert.h shadow/ctype.h shadow/errno.h shadow/float.h \\\n-\tshadow/libio.h \\\n-\tshadow/limits.h shadow/locale.h shadow/math.h shadow/setjmp.h \\\n-\tshadow/signal.h shadow/stdarg.h shadow/stddef.h shadow/stdio.h \\\n-\tshadow/stdlib.h shadow/string.h shadow/time.h \\\n-\tshadow/unistd.h shadow/wchar.h shadow/wctype.h \\\n-\tshadow/bits/std_cassert.h shadow/bits/std_cctype.h \\\n-\tshadow/bits/std_cerrno.h shadow/bits/std_cfloat.h \\\n-\tshadow/bits/std_climits.h shadow/bits/std_clocale.h \\\n-\tshadow/bits/std_cmath.h shadow/bits/std_csetjmp.h \\\n-\tshadow/bits/std_csignal.h shadow/bits/std_cstdarg.h \\\n-\tshadow/bits/std_cstddef.h shadow/bits/std_cstdio.h \\\n-\tshadow/bits/std_cstdlib.h shadow/bits/std_cstring.h \\\n-\tshadow/bits/std_ctime.h shadow/bits/std_cwchar.h \\\n-\tshadow/bits/std_cwctype.h \\\n-\tshadow/bits/wrap_libio.h shadow/bits/wrap_unistd.h \\\n-\tshadow/sys/cdefs.h \n-\n-\n-std_headers = \\\n-\talgorithm bitset cassert cctype cerrno cfloat climits clocale ciso646 \\\n-\tcmath complex csetjmp csignal cstdarg cstddef cstdio cstdlib \\\n-\tcstring ctime cwchar cwctype deque exception fstream functional \\\n-\tiomanip ios iosfwd iostream istream iterator limits list locale \\\n-\tmap memory new numeric ostream queue set sstream stack stdexcept \\\n-\tstreambuf string strstream typeinfo utility valarray vector \n-\n-@GLIBCPP_NEED_LIBIO_TRUE@libio_headers = @GLIBCPP_NEED_LIBIO_TRUE@\\\n-@GLIBCPP_NEED_LIBIO_TRUE@\t$(top_srcdir)/libio/_G_config.h $(top_srcdir)/libio/libio.h\n+headers =  \tbits/cpp_type_traits.h \tbits/std_cctype.h bits/ctype_base.h bits/ctype_specializations.h \tbits/char_traits.h \tbits/basic_string.h bits/std_string.h  bits/string.tcc \tbits/generic_shadow.h bits/std_utility.h \tbits/std_complex.h \tbits/valarray_array.h bits/valarray_array.tcc bits/valarray_meta.h \tbits/std_valarray.h bits/mask_array.h bits/slice.h bits/slice_array.h \tbits/gslice.h bits/gslice_array.h bits/indirect_array.h \tbits/std_cassert.h bits/std_cwctype.h \tbits/std_cerrno.h bits/std_cfloat.h bits/std_climits.h \tbits/std_clocale.h bits/std_cmath.h \tbits/std_csetjmp.h bits/std_csignal.h bits/std_cstdarg.h \tbits/std_cstddef.h bits/std_cstdio.h bits/std_cstdlib.h \tbits/std_cstring.h bits/std_ctime.h bits/std_cwchar.h \tbits/std_typeinfo.h bits/std_new.h \tbits/std_exception.h bits/exception_support.h \tbits/std_fstream.h bits/std_iomanip.h \tbits/ios_base.h bits/fpos.h bits/basic_ios.h bits/basic_ios.tcc \tbits/std_ios.h bits/std_iosfwd.h bits/std_iostream.h \tbits/std_istream.h bits/istream.tcc bits/std_locale.h \tbits/fstream.tcc bits/ostream.tcc bits/sbuf_iter.h bits/sstream.tcc \tbits/std_ostream.h bits/std_sstream.h bits/std_streambuf.h \tbits/streambuf.tcc bits/basic_file.h \tbits/locale_facets.h bits/locale_facets.tcc bits/localefwd.h \tbits/stl_pthread_alloc.h bits/pthread_allocimpl.h \tbits/stl_threads.h bits/stl_iterator_base.h \tbackward/algo.h backward/algobase.h backward/alloc.h \tbackward/bvector.h backward/defalloc.h backward/deque.h \tbackward/function.h backward/hash_map.h backward/hash_set.h \tbackward/hashtable.h backward/heap.h backward/iterator.h \tbackward/list.h backward/map.h backward/multimap.h backward/new.h \tbackward/multiset.h backward/pair.h backward/iostream.h \tbackward/rope.h backward/set.h backward/slist.h backward/stack.h \tbackward/tempbuf.h backward/tree.h backward/vector.h \tbits/std_bitset.h bits/std_deque.h bits/std_functional.h \tbits/std_iterator.h bits/std_list.h \tbits/std_map.h bits/std_memory.h bits/std_numeric.h \tbits/std_queue.h bits/std_set.h bits/std_stack.h \tbits/std_stdexcept.h bits/std_vector.h \tbits/stl_algo.h bits/stl_algobase.h bits/stl_alloc.h \tbits/stl_deque.h bits/stl_function.h \tbits/stl_heap.h bits/stl_iterator.h bits/stl_list.h bits/stl_map.h \tbits/stl_multimap.h bits/stl_multiset.h bits/stl_numeric.h \tbits/stl_pair.h bits/stl_queue.h bits/stl_raw_storage_iter.h \tbits/stl_relops.h bits/stl_set.h \tbits/stl_stack.h bits/stl_string_fwd.h bits/stl_tempbuf.h \tbits/stl_tree.h bits/stl_uninitialized.h bits/stl_vector.h \tbits/type_traits.h bits/stl_range_errors.h bits/std_algorithm.h \tbits/concept_checks.h bits/container_concepts.h \tbits/sequence_concepts.h bits/std_strstream.h \text/ropeimpl.h ext/stl_rope.h \text/stl_bvector.h bits/stl_config.h bits/stl_construct.h \text/stl_hashtable.h ext/stl_hash_fun.h \text/hash_map ext/hash_set ext/rope ext/slist \text/tree ext/bvector \tshadow/assert.h shadow/ctype.h shadow/errno.h shadow/float.h \tshadow/libio.h \tshadow/limits.h shadow/locale.h shadow/math.h shadow/setjmp.h \tshadow/signal.h shadow/stdarg.h shadow/stddef.h shadow/stdio.h \tshadow/stdlib.h shadow/string.h shadow/time.h \tshadow/unistd.h shadow/wchar.h shadow/wctype.h \tshadow/bits/std_cassert.h shadow/bits/std_cctype.h \tshadow/bits/std_cerrno.h shadow/bits/std_cfloat.h \tshadow/bits/std_climits.h shadow/bits/std_clocale.h \tshadow/bits/std_cmath.h shadow/bits/std_csetjmp.h \tshadow/bits/std_csignal.h shadow/bits/std_cstdarg.h \tshadow/bits/std_cstddef.h shadow/bits/std_cstdio.h \tshadow/bits/std_cstdlib.h shadow/bits/std_cstring.h \tshadow/bits/std_ctime.h shadow/bits/std_cwchar.h \tshadow/bits/std_cwctype.h \tshadow/bits/wrap_libio.h shadow/bits/wrap_unistd.h \tshadow/sys/cdefs.h \n+\n+\n+std_headers =  \talgorithm bitset cassert cctype cerrno cfloat climits clocale ciso646 \tcmath complex csetjmp csignal cstdarg cstddef cstdio cstdlib \tcstring ctime cwchar cwctype deque exception fstream functional \tiomanip ios iosfwd iostream istream iterator limits list locale \tmap memory new numeric ostream queue set sstream stack stdexcept \tstreambuf string strstream typeinfo utility valarray vector \n+\n+@GLIBCPP_NEED_LIBIO_TRUE@libio_headers = \t$(top_srcdir)/libio/_G_config.h $(top_srcdir)/libio/libio.h\n @GLIBCPP_NEED_LIBIO_FALSE@libio_headers = \n \n-generated_headers = \\\n-\t $(top_builddir)/bits/std_limits.h $(top_builddir)/bits/c++config.h \\\n-\t $(top_builddir)/bits/c++threads.h $(top_builddir)/bits/c++io.h\n+generated_headers =  \t $(top_builddir)/bits/std_limits.h $(top_builddir)/bits/c++config.h \t $(top_builddir)/bits/c++threads.h $(top_builddir)/bits/c++io.h\n \n \n-cpu_headers = \\\n-\t $(top_srcdir)/@cpu_include_dir@/bits/atomicity.h \n+cpu_headers =  \t $(top_srcdir)/@cpu_include_dir@/bits/atomicity.h \n \n \n-sources = \\\n-\tlimitsMEMBERS.cc \\\n-\tcmath.cc \\\n-\tcomplex.cc complexf.cc complexl.cc complex_io.cc \\\n-\tstdexcept.cc \\\n-\tc++io.cc ios.cc stdstreams.cc strstream.cc \\\n-\tlocale.cc localename.cc  \\\n-\tlocale-inst.cc stl-inst.cc misc-inst.cc valarray-inst.cc string-inst.cc\n+sources =  \tlimitsMEMBERS.cc \tcmath.cc \tcomplex.cc complexf.cc complexl.cc complex_io.cc \tstdexcept.cc \tc++io.cc ios.cc stdstreams.cc strstream.cc \tlocale.cc localename.cc  \tlocale-inst.cc stl-inst.cc misc-inst.cc valarray-inst.cc string-inst.cc\n \n \n-wstring_sources = \\\n-\twstring-inst.cc\n+wstring_sources =  \twstring-inst.cc\n \n VPATH =  $(top_srcdir) $(top_srcdir)/std $(top_srcdir)/src $(top_srcdir)/@ctype_include_dir@\n \n@@ -291,15 +189,13 @@ libstdc___la_SOURCES = $(sources)\n \n libinst_wstring_la_SOURCES = $(wstring_sources)\n \n-libstdc___la_LIBADD = \\\n-\t../math/libmath.la ../libio/libio.la \\\n-\t@libinst_wstring_la@\n+libstdc___la_LIBADD =  \t../math/libmath.la ../libio/libio.la \t@libinst_wstring_la@\n \n \n libstdc___la_LDFLAGS = -version-info 3:0:0 -lm\n \n libstdc___la_DEPENDENCIES = $(libstdc___la_LIBADD)\n-@GLIBCPP_USE_CSHADOW_TRUE@CSHADOW_H = @GLIBCPP_USE_CSHADOW_TRUE@$(top_builddir)/stamp-cshadow\n+@GLIBCPP_USE_CSHADOW_TRUE@CSHADOW_H = $(top_builddir)/stamp-cshadow\n @GLIBCPP_USE_CSHADOW_FALSE@CSHADOW_H = \n \n # We cannot use the default rules to install headers since we cannot\n@@ -346,7 +242,7 @@ OBJECTS = libinst-string.la.lo $(libinst_wstring_la_OBJECTS) $(libstdc___la_OBJE\n \n all: all-redirect\n .SUFFIXES:\n-.SUFFIXES: .S .c .cc .lo .o .s\n+.SUFFIXES: .S .c .cc .lo .o .obj .s\n $(srcdir)/Makefile.in: @MAINTAINER_MODE_TRUE@ Makefile.am $(top_srcdir)/configure.in $(ACLOCAL_M4) \n \tcd $(top_srcdir) && $(AUTOMAKE) --cygnus src/Makefile\n \n@@ -383,6 +279,11 @@ uninstall-toolexeclibLTLIBRARIES:\n .c.o:\n \t$(COMPILE) -c $<\n \n+# FIXME: We should only use cygpath when building on Windows,\n+# and only if it is available.\n+.c.obj:\n+\t$(COMPILE) -c `cygpath -w $<`\n+\n .s.o:\n \t$(COMPILE) -c $<\n \n@@ -391,6 +292,7 @@ uninstall-toolexeclibLTLIBRARIES:\n \n mostlyclean-compile:\n \t-rm -f *.o core *.core\n+\t-rm -f *.$(OBJEXT)\n \n clean-compile:\n \n@@ -428,6 +330,8 @@ libstdc++.la: $(libstdc___la_OBJECTS) $(libstdc___la_DEPENDENCIES)\n \t$(CXXLINK) -rpath $(toolexeclibdir) $(libstdc___la_LDFLAGS) $(libstdc___la_OBJECTS) $(libstdc___la_LIBADD) $(LIBS)\n .cc.o:\n \t$(CXXCOMPILE) -c $<\n+.cc.obj:\n+\t$(CXXCOMPILE) -c `cygpath -w $<`\n .cc.lo:\n \t$(LTCXXCOMPILE) -c $<\n "}]}