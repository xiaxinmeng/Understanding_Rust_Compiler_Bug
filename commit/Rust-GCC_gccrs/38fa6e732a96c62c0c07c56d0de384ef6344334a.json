{"sha": "38fa6e732a96c62c0c07c56d0de384ef6344334a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzhmYTZlNzMyYTk2YzYyYzBjMDdjNTZkMGRlMzg0ZWY2MzQ0MzM0YQ==", "commit": {"author": {"name": "John David Anglin", "email": "dave.anglin@nrc-cnrc.gc.ca", "date": "2005-08-21T23:35:46Z"}, "committer": {"name": "John David Anglin", "email": "danglin@gcc.gnu.org", "date": "2005-08-21T23:35:46Z"}, "message": "re PR libgcj/23507 (gij testsuite failures)\n\n\tPR libgcj/23507\n\t* stacktrace.cc (_Jv_StackTrace::UnwindTraceFn): Fix typo in newLength\n\tassignment.  Cast operands of compare to function pointer type.\n\nFrom-SVN: r103325", "tree": {"sha": "9ead2e8e37898df90435f5ee28bea96680c3469d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9ead2e8e37898df90435f5ee28bea96680c3469d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/38fa6e732a96c62c0c07c56d0de384ef6344334a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/38fa6e732a96c62c0c07c56d0de384ef6344334a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/38fa6e732a96c62c0c07c56d0de384ef6344334a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/38fa6e732a96c62c0c07c56d0de384ef6344334a/comments", "author": null, "committer": null, "parents": [{"sha": "aa5190e9dcae763340b47f6c61bc4c70cae0f904", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/aa5190e9dcae763340b47f6c61bc4c70cae0f904", "html_url": "https://github.com/Rust-GCC/gccrs/commit/aa5190e9dcae763340b47f6c61bc4c70cae0f904"}], "stats": {"total": 10, "additions": 8, "deletions": 2}, "files": [{"sha": "bc3d8d8a43e1f28a28f068f1a5350f632a66d3cc", "filename": "libjava/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/38fa6e732a96c62c0c07c56d0de384ef6344334a/libjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/38fa6e732a96c62c0c07c56d0de384ef6344334a/libjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog?ref=38fa6e732a96c62c0c07c56d0de384ef6344334a", "patch": "@@ -1,3 +1,9 @@\n+2005-08-21  John David Anglin  <dave.anglin@nrc-cnrc.gc.ca>\n+\n+\tPR libgcj/23507\n+\t* stacktrace.cc (_Jv_StackTrace::UnwindTraceFn): Fix typo in newLength\n+\tassignment.  Cast operands of compare to function pointer type.\n+\n 2005-08-21  Tom Tromey  <tromey@redhat.com>\n \n \t* HACKING: Updated for hacking classpath in libgcj."}, {"sha": "bc1935f1a75f159185092febe7914480d4252fb3", "filename": "libjava/stacktrace.cc", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/38fa6e732a96c62c0c07c56d0de384ef6344334a/libjava%2Fstacktrace.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/38fa6e732a96c62c0c07c56d0de384ef6344334a/libjava%2Fstacktrace.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fstacktrace.cc?ref=38fa6e732a96c62c0c07c56d0de384ef6344334a", "patch": "@@ -102,7 +102,7 @@ _Jv_StackTrace::UnwindTraceFn (struct _Unwind_Context *context, void *state_ptr)\n   // Check if the trace buffer needs to be extended.\n   if (pos == state->length)\n     {\n-      int newLength = state->length *= 2;\n+      int newLength = state->length * 2;\n       void *newFrames = _Jv_AllocBytes (newLength * sizeof(_Jv_StackFrame));\n       memcpy (newFrames, state->frames, state->length * sizeof(_Jv_StackFrame));      \n       state->frames = (_Jv_StackFrame *) newFrames;\n@@ -117,7 +117,7 @@ _Jv_StackTrace::UnwindTraceFn (struct _Unwind_Context *context, void *state_ptr)\n   // correspondance between call frames in the interpreted stack and occurances\n   // of _Jv_InterpMethod::run() on the native stack.\n #ifdef INTERPRETER\n-  if (func_addr == (_Unwind_Ptr) &_Jv_InterpMethod::run)\n+  if ((void (*)(void)) func_addr == (void (*)(void)) &_Jv_InterpMethod::run)\n     {\n       state->frames[pos].type = frame_interpreter;\n       state->frames[pos].interp.meth = state->interp_frame->self;"}]}