{"sha": "2c9687c2df6296368830b8172315d3ab970054d4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmM5Njg3YzJkZjYyOTYzNjg4MzBiODE3MjMxNWQzYWI5NzAwNTRkNA==", "commit": {"author": {"name": "SimplyTheOther", "email": "simplytheother@gmail.com", "date": "2020-07-04T12:48:44Z"}, "committer": {"name": "Philip Herron", "email": "philip.herron@embecosm.com", "date": "2020-11-28T21:13:17Z"}, "message": "Added MMIX target hook (or provisional one at least)", "tree": {"sha": "ab1e8f28b7c1f837fc87b761ee3146461e44db8c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ab1e8f28b7c1f837fc87b761ee3146461e44db8c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2c9687c2df6296368830b8172315d3ab970054d4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2c9687c2df6296368830b8172315d3ab970054d4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2c9687c2df6296368830b8172315d3ab970054d4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2c9687c2df6296368830b8172315d3ab970054d4/comments", "author": {"login": "SimplyTheOther", "id": 19371469, "node_id": "MDQ6VXNlcjE5MzcxNDY5", "avatar_url": "https://avatars.githubusercontent.com/u/19371469?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SimplyTheOther", "html_url": "https://github.com/SimplyTheOther", "followers_url": "https://api.github.com/users/SimplyTheOther/followers", "following_url": "https://api.github.com/users/SimplyTheOther/following{/other_user}", "gists_url": "https://api.github.com/users/SimplyTheOther/gists{/gist_id}", "starred_url": "https://api.github.com/users/SimplyTheOther/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SimplyTheOther/subscriptions", "organizations_url": "https://api.github.com/users/SimplyTheOther/orgs", "repos_url": "https://api.github.com/users/SimplyTheOther/repos", "events_url": "https://api.github.com/users/SimplyTheOther/events{/privacy}", "received_events_url": "https://api.github.com/users/SimplyTheOther/received_events", "type": "User", "site_admin": false}, "committer": {"login": "philberty", "id": 84585, "node_id": "MDQ6VXNlcjg0NTg1", "avatar_url": "https://avatars.githubusercontent.com/u/84585?v=4", "gravatar_id": "", "url": "https://api.github.com/users/philberty", "html_url": "https://github.com/philberty", "followers_url": "https://api.github.com/users/philberty/followers", "following_url": "https://api.github.com/users/philberty/following{/other_user}", "gists_url": "https://api.github.com/users/philberty/gists{/gist_id}", "starred_url": "https://api.github.com/users/philberty/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/philberty/subscriptions", "organizations_url": "https://api.github.com/users/philberty/orgs", "repos_url": "https://api.github.com/users/philberty/repos", "events_url": "https://api.github.com/users/philberty/events{/privacy}", "received_events_url": "https://api.github.com/users/philberty/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "27029ad4df8faa7ee43fe0e55a867d0ec14e7da1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/27029ad4df8faa7ee43fe0e55a867d0ec14e7da1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/27029ad4df8faa7ee43fe0e55a867d0ec14e7da1"}], "stats": {"total": 26, "additions": 26, "deletions": 0}, "files": [{"sha": "27571761542a29855281db9d434fee7ae05a966c", "filename": "gcc/config/mmix/mmix.h", "status": "modified", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2c9687c2df6296368830b8172315d3ab970054d4/gcc%2Fconfig%2Fmmix%2Fmmix.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2c9687c2df6296368830b8172315d3ab970054d4/gcc%2Fconfig%2Fmmix%2Fmmix.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmmix%2Fmmix.h?ref=2c9687c2df6296368830b8172315d3ab970054d4", "patch": "@@ -133,6 +133,32 @@ struct GTY(()) machine_function\n     }\t\t\t\t\t\t\t\t\\\n   while (0)\n \n+#define TARGET_RUST_CPU_INFO() \\\n+  do { \\\n+    rust_add_target_info(\"target_arch\", \"mmix\"); \\\n+    /*ignoring libfuncs as options say to get rid of it*/ \\\n+    if (TARGET_ABI_GNU) \\\n+      rust_add_target_info(\"target_feature\", \"abi-gnu\"); \\\n+    else \\\n+      rust_add_target_info(\"target_feature\", \"abi-mmixware\"); \\\n+    if (TARGET_FCMP_EPSILON) \\\n+      rust_add_target_info(\"target_feature\", \"epsilon\"); \\\n+    if (TARGET_ZERO_EXTEND) \\\n+      rust_add_target_info(\"target_feature\", \"zero-extend\"); \\\n+    if (TARGET_KNUTH_DIVISION) \\\n+      rust_add_target_info(\"target_feature\", \"knuthdiv\"); \\\n+    if (TARGET_TOPLEVEL_SYMBOLS) \\\n+      rust_add_target_info(\"target_feature\", \"toplevel-symbols\"); \\\n+    if (TARGET_BRANCH_PREDICT) \\\n+      rust_add_target_info(\"target_feature\", \"branch-predict\"); \\\n+    if (TARGET_BASE_ADDRESSES) \\\n+      rust_add_target_info(\"target_feature\", \"base-addresses\"); \\\n+    if (!(USE_RETURN_INSN)) \\\n+      rust_add_target_info(\"target_feature\", \"single-exit\"); \\\n+    /*TODO: find way of getting no-set-program-start and elf info?*/ \\\n+    /*TODO: find way of defining set-program-start, set-data-start usefully?*/ \\\n+  } while (0)\n+\n #define TARGET_DEFAULT \\\n  (MASK_BRANCH_PREDICT | MASK_BASE_ADDRESSES | MASK_USE_RETURN_INSN)\n "}]}