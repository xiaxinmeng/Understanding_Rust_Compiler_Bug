{"sha": "b9bfacf01ce274e236db460890bcce882835cce1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjliZmFjZjAxY2UyNzRlMjM2ZGI0NjA4OTBiY2NlODgyODM1Y2NlMQ==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@vlsi1.ultra.nyu.edu", "date": "2000-04-15T19:54:26Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "2000-04-15T19:54:26Z"}, "message": "Makefile.in (ggc-page.o): Now includes toplev.h.\n\n\t* Makefile.in (ggc-page.o): Now includes toplev.h.\n\t* ggc-page.c (toplev.h): Now included.\n\t(gc_time): Remove declaration.\n\t(ggc_collect): TIME now long.\n\t* toplev.c (parse_time, varasm_time, gc_time): Still global; all\n\tothers static.\n\t* toplev.h (gc_time, parse_time, gc_time): New declarations.\n\t* cp/decl2.c (parse_time, varconst_time): Delete declarations.\n\t(finish_file): Delete LINENO declaration.\n\tSTART_TIME and THIS_TIME now long.\n\nFrom-SVN: r33169", "tree": {"sha": "cc02e6bb448df629adc54e8a5c9b9778d1a6574d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/cc02e6bb448df629adc54e8a5c9b9778d1a6574d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b9bfacf01ce274e236db460890bcce882835cce1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b9bfacf01ce274e236db460890bcce882835cce1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b9bfacf01ce274e236db460890bcce882835cce1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b9bfacf01ce274e236db460890bcce882835cce1/comments", "author": null, "committer": null, "parents": [{"sha": "77a02dba353a95a8e4b940f4dc80b927a27b980d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/77a02dba353a95a8e4b940f4dc80b927a27b980d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/77a02dba353a95a8e4b940f4dc80b927a27b980d"}], "stats": {"total": 120, "additions": 68, "deletions": 52}, "files": [{"sha": "b59b15e28126d311a3e73f5111a36dfaec798d4b", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b9bfacf01ce274e236db460890bcce882835cce1/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b9bfacf01ce274e236db460890bcce882835cce1/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=b9bfacf01ce274e236db460890bcce882835cce1", "patch": "@@ -1,5 +1,13 @@\n Sat Apr 15 10:59:19 2000  Richard Kenner  <kenner@vlsi1.ultra.nyu.edu>\n \n+\t* Makefile.in (ggc-page.o): Now includes toplev.h.\n+\t* ggc-page.c (toplev.h): Now included.\n+\t(gc_time): Remove declaration.\n+\t(ggc_collect): TIME now long.\n+\t* toplev.c (parse_time, varasm_time, gc_time): Still global; all\n+\tothers static.\n+\t* toplev.h (gc_time, parse_time, gc_time): New declarations.\n+\n \t* toplev.c: Make *_time variable long to reduce chance of overflow.\n \t(TIMEVAR): Likewise for `otime'.\n \t(print_time): Arg is now long; compute percentage in FP and round."}, {"sha": "ad582c4c49ca82cdbbb018ca72d52ed613a2af27", "filename": "gcc/Makefile.in", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b9bfacf01ce274e236db460890bcce882835cce1/gcc%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b9bfacf01ce274e236db460890bcce882835cce1/gcc%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FMakefile.in?ref=b9bfacf01ce274e236db460890bcce882835cce1", "patch": "@@ -1475,7 +1475,7 @@ ggc-common.o: ggc-common.c $(CONFIG_H) $(RTL_H) $(TREE_H) \\\n ggc-simple.o: ggc-simple.c $(CONFIG_H) $(RTL_H) $(TREE_H) flags.h \\\n \t$(GGC_H) varray.h\n \n-ggc-page.o: ggc-page.c $(CONFIG_H) $(RTL_H) $(TREE_H) flags.h \\\n+ggc-page.o: ggc-page.c $(CONFIG_H) $(RTL_H) $(TREE_H) flags.h toplev.h \\\n \t$(GGC_H) varray.h\n \n ggc-none.o: ggc-none.c $(CONFIG_H) $(RTL_H) $(GGC_H)"}, {"sha": "2c497256560389de3f2525376bfd4d423e2fa49c", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b9bfacf01ce274e236db460890bcce882835cce1/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b9bfacf01ce274e236db460890bcce882835cce1/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=b9bfacf01ce274e236db460890bcce882835cce1", "patch": "@@ -1,3 +1,9 @@\n+Sat Apr 15 16:00:01 2000  Richard Kenner  <kenner@vlsi1.ultra.nyu.edu>\n+\n+\t* decl2.c (parse_time, varconst_time): Delete declarations.\n+\t(finish_file): Delete LINENO declaration.\n+\tSTART_TIME and THIS_TIME now long.\n+\n 2000-04-13  Nathan Sidwell  <nathan@codesourcery.com>\n \n \t* class.c (build_base_field): Reformat comment."}, {"sha": "18d41aa9776a3216fc5b6cf8f93c2d8e647f9434", "filename": "gcc/cp/decl2.c", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b9bfacf01ce274e236db460890bcce882835cce1/gcc%2Fcp%2Fdecl2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b9bfacf01ce274e236db460890bcce882835cce1/gcc%2Fcp%2Fdecl2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fdecl2.c?ref=b9bfacf01ce274e236db460890bcce882835cce1", "patch": "@@ -2760,8 +2760,6 @@ build_cleanup (decl)\n   return temp;\n }\n \n-extern int parse_time, varconst_time;\n-\n static tree\n get_sentry (base)\n      tree base;\n@@ -2771,6 +2769,7 @@ get_sentry (base)\n      __snfoo. Since base is already an assembler name, sname should\n      be globally unique */\n   tree sentry = IDENTIFIER_GLOBAL_VALUE (sname);\n+\n   if (! sentry)\n     {\n       sentry = build_decl (VAR_DECL, sname, integer_type_node);\n@@ -3413,8 +3412,7 @@ generate_ctor_and_dtor_functions_for_priority (n, data)\n void\n finish_file ()\n {\n-  extern int lineno;\n-  int start_time, this_time;\n+  long start_time, this_time;\n   tree vars;\n   int reconsider;\n   size_t i;"}, {"sha": "7fc8b2c3038298e38cd5e9ffb13c119e16ad8f3a", "filename": "gcc/ggc-page.c", "status": "modified", "additions": 16, "deletions": 18, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b9bfacf01ce274e236db460890bcce882835cce1/gcc%2Fggc-page.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b9bfacf01ce274e236db460890bcce882835cce1/gcc%2Fggc-page.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fggc-page.c?ref=b9bfacf01ce274e236db460890bcce882835cce1", "patch": "@@ -1,28 +1,29 @@\n /* \"Bag-of-pages\" garbage collector for the GNU compiler.\n    Copyright (C) 1999, 2000 Free Software Foundation, Inc.\n \n-   This file is part of GNU CC.\n+This file is part of GNU CC.\n \n-   GNU CC is free software; you can redistribute it and/or modify\n-   it under the terms of the GNU General Public License as published by\n-   the Free Software Foundation; either version 2, or (at your option)\n-   any later version.\n+GNU CC is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2, or (at your option)\n+any later version.\n \n-   GNU CC is distributed in the hope that it will be useful,\n-   but WITHOUT ANY WARRANTY; without even the implied warranty of\n-   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-   GNU General Public License for more details.\n+GNU CC is distributed in the hope that it will be useful,\n+but WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+GNU General Public License for more details.\n \n-   You should have received a copy of the GNU General Public License\n-   along with GNU CC; see the file COPYING.  If not, write to\n-   the Free Software Foundation, 59 Temple Place - Suite 330,\n-   Boston, MA 02111-1307, USA.  */\n+You should have received a copy of the GNU General Public License\n+along with GNU CC; see the file COPYING.  If not, write to\n+the Free Software Foundation, 59 Temple Place - Suite 330,\n+Boston, MA 02111-1307, USA.  */\n \n #include \"config.h\"\n #include \"system.h\"\n #include \"tree.h\"\n #include \"rtl.h\"\n #include \"tm_p.h\"\n+#include \"toplev.h\"\n #include \"varray.h\"\n #include \"flags.h\"\n #include \"ggc.h\"\n@@ -97,9 +98,6 @@\n #define HOST_BITS_PER_PTR  HOST_BITS_PER_LONG\n #endif\n \n-/* Timing information for collect execution goes into here.  */\n-extern int gc_time;\n-\n /* The \"\" allocated string.  */\n char *empty_string;\n \f\n@@ -1103,7 +1101,7 @@ poison_pages ()\n void\n ggc_collect ()\n {\n-  int time;\n+  long time;\n \n   /* Avoid frequent unnecessary work by skipping collection if the\n      total allocations haven't expanded much since the last\n@@ -1115,7 +1113,7 @@ ggc_collect ()\n \n   time = get_run_time ();\n   if (!quiet_flag)\n-    fprintf (stderr, \" {GC %luk -> \", (unsigned long)G.allocated / 1024);\n+    fprintf (stderr, \" {GC %luk -> \", (unsigned long) G.allocated / 1024);\n \n   /* Zero the total allocated bytes.  We'll reaccumulate this while\n      marking.  */"}, {"sha": "e90f994e734ad00e57947b73994c10bcca9b038d", "filename": "gcc/toplev.c", "status": "modified", "additions": 31, "deletions": 29, "changes": 60, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b9bfacf01ce274e236db460890bcce882835cce1/gcc%2Ftoplev.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b9bfacf01ce274e236db460890bcce882835cce1/gcc%2Ftoplev.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftoplev.c?ref=b9bfacf01ce274e236db460890bcce882835cce1", "patch": "@@ -1401,38 +1401,40 @@ read_integral_parameter (p, pname, defval)\n }\n \n \n-/* Time accumulators, to count the total time spent in various passes.  */\n+/* Time accumulators, to count the total time spent in various passes.\n+   The first three are used in other files; the latter two only here.  */\n \n+long gc_time;\n long parse_time;\n long varconst_time;\n-long integration_time;\n-long jump_time;\n-long cse_time;\n-long gcse_time;\n-long loop_time;\n-long cse2_time;\n-long branch_prob_time;\n-long flow_time;\n-long combine_time;\n-long regmove_time;\n-long sched_time;\n-long local_alloc_time;\n-long global_alloc_time;\n-long flow2_time;\n-long peephole2_time;\n-long sched2_time;\n-long dbr_sched_time;\n-long reorder_blocks_time;\n-long rename_registers_time;\n-long shorten_branch_time;\n-long stack_reg_time;\n-long to_ssa_time;\n-long from_ssa_time;\n-long final_time;\n-long symout_time;\n-long dump_time;\n-long gc_time;\n-long all_time;\n+\n+static long integration_time;\n+static long jump_time;\n+static long cse_time;\n+static long gcse_time;\n+static long loop_time;\n+static long cse2_time;\n+static long branch_prob_time;\n+static long flow_time;\n+static long combine_time;\n+static long regmove_time;\n+static long sched_time;\n+static long local_alloc_time;\n+static long global_alloc_time;\n+static long flow2_time;\n+static long peephole2_time;\n+static long sched2_time;\n+static long dbr_sched_time;\n+static long reorder_blocks_time;\n+static long rename_registers_time;\n+static long shorten_branch_time;\n+static long stack_reg_time;\n+static long to_ssa_time;\n+static long from_ssa_time;\n+static long final_time;\n+static long symout_time;\n+static long dump_time;\n+static long all_time;\n \f\n /* Return time used so far, in microseconds.  */\n "}, {"sha": "470b209610b716899a655c7d525536446af3acc7", "filename": "gcc/toplev.h", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b9bfacf01ce274e236db460890bcce882835cce1/gcc%2Ftoplev.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b9bfacf01ce274e236db460890bcce882835cce1/gcc%2Ftoplev.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftoplev.h?ref=b9bfacf01ce274e236db460890bcce882835cce1", "patch": "@@ -26,6 +26,10 @@ union tree_node;\n struct rtx_def;\n #endif\n \n+extern long gc_time;\n+extern long parse_time;\n+extern long varconst_time;\n+\n extern int read_integral_parameter\tPARAMS ((const char *, const char *,\n \t\t\t\t\t\tconst int));\n extern int count_error\t\t\tPARAMS ((int));"}]}