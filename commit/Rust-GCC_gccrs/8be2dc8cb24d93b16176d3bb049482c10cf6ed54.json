{"sha": "8be2dc8cb24d93b16176d3bb049482c10cf6ed54", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGJlMmRjOGNiMjRkOTNiMTYxNzZkM2JiMDQ5NDgyYzEwY2Y2ZWQ1NA==", "commit": {"author": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2014-06-04T11:11:09Z"}, "committer": {"name": "Martin Liska", "email": "marxin@gcc.gnu.org", "date": "2014-06-04T11:11:09Z"}, "message": "New callgraph wrapper function creation added\n\n\t* cgraph.h (cgraph_make_wrapper): New function introduced.\n\t* cgraphunit.c (cgraph_make_wrapper): The function implementation.\n\t* ipa-inline.h (inline_analyze_function): The function is global.\n\t* ipa-inline-analysis.c (inline_analyze_function): Likewise.\n\nFrom-SVN: r211222", "tree": {"sha": "e78a59bd8a8cf8a4b394d41bfb4d7e3327aeb3cc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e78a59bd8a8cf8a4b394d41bfb4d7e3327aeb3cc"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8be2dc8cb24d93b16176d3bb049482c10cf6ed54", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8be2dc8cb24d93b16176d3bb049482c10cf6ed54", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8be2dc8cb24d93b16176d3bb049482c10cf6ed54", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8be2dc8cb24d93b16176d3bb049482c10cf6ed54/comments", "author": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "9dc7743c7864cbdc0f62a827c9af6a854ebfa98f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9dc7743c7864cbdc0f62a827c9af6a854ebfa98f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9dc7743c7864cbdc0f62a827c9af6a854ebfa98f"}], "stats": {"total": 48, "additions": 47, "deletions": 1}, "files": [{"sha": "e892d70035cec5881f257514cb66234bc37b29ed", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8be2dc8cb24d93b16176d3bb049482c10cf6ed54/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8be2dc8cb24d93b16176d3bb049482c10cf6ed54/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=8be2dc8cb24d93b16176d3bb049482c10cf6ed54", "patch": "@@ -1,3 +1,10 @@\n+2014-06-04  Martin Liska  <mliska@suse.cz>\n+\n+\t* cgraph.h (cgraph_make_wrapper): New function introduced.\n+\t* cgraphunit.c (cgraph_make_wrapper): The function implementation.\n+\t* ipa-inline.h (inline_analyze_function): The function is global.\n+\t* ipa-inline-analysis.c (inline_analyze_function): Likewise.\n+\n 2014-06-04  Martin Liska  <mliska@suse.cz>\n \n \t* tree.h (private_lookup_attribute_starting): New function."}, {"sha": "9c6f55896b0def9e2ca9dff03c9275ef46d6f164", "filename": "gcc/cgraph.h", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8be2dc8cb24d93b16176d3bb049482c10cf6ed54/gcc%2Fcgraph.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8be2dc8cb24d93b16176d3bb049482c10cf6ed54/gcc%2Fcgraph.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcgraph.h?ref=8be2dc8cb24d93b16176d3bb049482c10cf6ed54", "patch": "@@ -912,6 +912,8 @@ void fixup_same_cpp_alias_visibility (symtab_node *, symtab_node *target, tree);\n basic_block init_lowered_empty_function (tree, bool);\n void cgraph_reset_node (struct cgraph_node *);\n bool expand_thunk (struct cgraph_node *, bool, bool);\n+void cgraph_make_wrapper (struct cgraph_node *source,\n+\t\t\t  struct cgraph_node *target);\n \n /* In cgraphclones.c  */\n "}, {"sha": "7b4058390b1f9949f9c0fc4853e4d1fe9b9f553c", "filename": "gcc/cgraphunit.c", "status": "modified", "additions": 36, "deletions": 0, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8be2dc8cb24d93b16176d3bb049482c10cf6ed54/gcc%2Fcgraphunit.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8be2dc8cb24d93b16176d3bb049482c10cf6ed54/gcc%2Fcgraphunit.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcgraphunit.c?ref=8be2dc8cb24d93b16176d3bb049482c10cf6ed54", "patch": "@@ -2344,5 +2344,41 @@ finalize_compilation_unit (void)\n   timevar_pop (TV_CGRAPH);\n }\n \n+/* Creates a wrapper from SOURCE node to TARGET node. Thunk is used for this\n+   kind of wrapper method.  */\n+\n+void\n+cgraph_make_wrapper (struct cgraph_node *source, struct cgraph_node *target)\n+{\n+    /* Preserve DECL_RESULT so we get right by reference flag.  */\n+    tree decl_result = DECL_RESULT (source->decl);\n+\n+    /* Remove the function's body.  */\n+    cgraph_release_function_body (source);\n+    cgraph_reset_node (source);\n+\n+    DECL_RESULT (source->decl) = decl_result;\n+    DECL_INITIAL (source->decl) = NULL;\n+    allocate_struct_function (source->decl, false);\n+    set_cfun (NULL);\n+\n+    /* Turn alias into thunk and expand it into GIMPLE representation.  */\n+    source->definition = true;\n+    source->thunk.thunk_p = true;\n+    source->thunk.this_adjusting = false;\n+\n+    struct cgraph_edge *e = cgraph_create_edge (source, target, NULL, 0,\n+\t\t\t\t\t\tCGRAPH_FREQ_BASE);\n+\n+    if (!expand_thunk (source, false, true))\n+      source->analyzed = true;\n+\n+    e->call_stmt_cannot_inline_p = true;\n+\n+    /* Inline summary set-up.  */\n+\n+    analyze_function (source);\n+    inline_analyze_function (source);\n+}\n \n #include \"gt-cgraphunit.h\""}, {"sha": "c50a7227500c693b273a6c7499419ff5e6bcbd34", "filename": "gcc/ipa-inline-analysis.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8be2dc8cb24d93b16176d3bb049482c10cf6ed54/gcc%2Fipa-inline-analysis.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8be2dc8cb24d93b16176d3bb049482c10cf6ed54/gcc%2Fipa-inline-analysis.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fipa-inline-analysis.c?ref=8be2dc8cb24d93b16176d3bb049482c10cf6ed54", "patch": "@@ -3960,7 +3960,7 @@ inline_indirect_intraprocedural_analysis (struct cgraph_node *node)\n \n /* Note function body size.  */\n \n-static void\n+void\n inline_analyze_function (struct cgraph_node *node)\n {\n   push_cfun (DECL_STRUCT_FUNCTION (node->decl));"}, {"sha": "15e9d1cc2a295dded315a540327afe3820c62de6", "filename": "gcc/ipa-inline.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8be2dc8cb24d93b16176d3bb049482c10cf6ed54/gcc%2Fipa-inline.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8be2dc8cb24d93b16176d3bb049482c10cf6ed54/gcc%2Fipa-inline.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fipa-inline.h?ref=8be2dc8cb24d93b16176d3bb049482c10cf6ed54", "patch": "@@ -216,6 +216,7 @@ void inline_generate_summary (void);\n void inline_read_summary (void);\n void inline_write_summary (void);\n void inline_free_summary (void);\n+void inline_analyze_function (struct cgraph_node *node);\n void initialize_inline_failed (struct cgraph_edge *);\n int estimate_time_after_inlining (struct cgraph_node *, struct cgraph_edge *);\n int estimate_size_after_inlining (struct cgraph_node *, struct cgraph_edge *);"}]}