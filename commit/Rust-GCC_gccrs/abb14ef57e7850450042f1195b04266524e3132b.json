{"sha": "abb14ef57e7850450042f1195b04266524e3132b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWJiMTRlZjU3ZTc4NTA0NTAwNDJmMTE5NWIwNDI2NjUyNGUzMTMyYg==", "commit": {"author": {"name": "Andrew MacLeod", "email": "amacleod@cygnus.com", "date": "1999-09-21T18:57:12Z"}, "committer": {"name": "Andrew Macleod", "email": "amacleod@gcc.gnu.org", "date": "1999-09-21T18:57:12Z"}, "message": "flow.c (split_edge): Handle insertion on a fallthrough edge which has the EXIT_BLOCK as a dest.\n\n\nTue Sep 21 14:55:11 EDT 1999  Andrew MacLeod  <amacleod@cygnus.com>\n\n\t* flow.c (split_edge): Handle insertion on a fallthrough edge which\n\thas the EXIT_BLOCK as a dest.\n\nFrom-SVN: r29556", "tree": {"sha": "824571bce3b15f52f4589cf91533e54ce74461f9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/824571bce3b15f52f4589cf91533e54ce74461f9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/abb14ef57e7850450042f1195b04266524e3132b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/abb14ef57e7850450042f1195b04266524e3132b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/abb14ef57e7850450042f1195b04266524e3132b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/abb14ef57e7850450042f1195b04266524e3132b/comments", "author": null, "committer": null, "parents": [{"sha": "87fdf7fff070b1fb0ed2dea21cfee8c5aa42429d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/87fdf7fff070b1fb0ed2dea21cfee8c5aa42429d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/87fdf7fff070b1fb0ed2dea21cfee8c5aa42429d"}], "stats": {"total": 18, "additions": 15, "deletions": 3}, "files": [{"sha": "2e17840217fb9c69e32b925ea1a79a78033ab83f", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/abb14ef57e7850450042f1195b04266524e3132b/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/abb14ef57e7850450042f1195b04266524e3132b/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=abb14ef57e7850450042f1195b04266524e3132b", "patch": "@@ -1,3 +1,8 @@\n+Tue Sep 21 14:55:11 EDT 1999  Andrew MacLeod  <amacleod@cygnus.com>\n+\n+\t* flow.c (split_edge): Handle insertion on a fallthrough edge which\n+\thas the EXIT_BLOCK as a dest.\n+\n Tue Sep 21 14:51:23 EDT 1999  Andrew MacLeod  <amacleod@cygnus.com>\n \n \t* flow.c (remove_edge): New function to remove an edge from the "}, {"sha": "bfdff14b828f777d7b94358dd27e04231c12ab96", "filename": "gcc/flow.c", "status": "modified", "additions": 10, "deletions": 3, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/abb14ef57e7850450042f1195b04266524e3132b/gcc%2Fflow.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/abb14ef57e7850450042f1195b04266524e3132b/gcc%2Fflow.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fflow.c?ref=abb14ef57e7850450042f1195b04266524e3132b", "patch": "@@ -1153,7 +1153,7 @@ split_edge (edge_in)\n   basic_block old_pred, bb, old_succ;\n   edge edge_out;\n   rtx bb_note;\n-  int i;\n+  int i, j;\n  \n   /* Abnormal edges cannot be split.  */\n   if ((edge_in->flags & EDGE_ABNORMAL) != 0)\n@@ -1263,7 +1263,11 @@ split_edge (edge_in)\n \n   /* Place the new block just in front of the successor.  */\n   VARRAY_GROW (basic_block_info, ++n_basic_blocks);\n-  for (i = n_basic_blocks - 1; i > old_succ->index; --i)\n+  if (old_succ == EXIT_BLOCK_PTR)\n+    j = n_basic_blocks - 1;\n+  else\n+    j = old_succ->index;\n+  for (i = n_basic_blocks - 1; i > j; --i)\n     {\n       basic_block tmp = BASIC_BLOCK (i - 1);\n       BASIC_BLOCK (i) = tmp;\n@@ -1273,7 +1277,10 @@ split_edge (edge_in)\n   bb->index = i;\n \n   /* Create the basic block note.  */\n-  bb_note = emit_note_before (NOTE_INSN_BASIC_BLOCK, old_succ->head);\n+  if (old_succ != EXIT_BLOCK_PTR)\n+    bb_note = emit_note_before (NOTE_INSN_BASIC_BLOCK, old_succ->head);\n+  else\n+    bb_note = emit_note_after (NOTE_INSN_BASIC_BLOCK, get_last_insn ());\n   NOTE_BASIC_BLOCK (bb_note) = bb;\n   bb->head = bb->end = bb_note;\n "}]}