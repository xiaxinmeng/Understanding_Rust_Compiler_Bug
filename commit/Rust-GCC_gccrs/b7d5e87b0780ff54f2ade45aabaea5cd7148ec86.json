{"sha": "b7d5e87b0780ff54f2ade45aabaea5cd7148ec86", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjdkNWU4N2IwNzgwZmY1NGYyYWRlNDVhYWJhZWE1Y2Q3MTQ4ZWM4Ng==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2009-12-01T09:52:51Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2009-12-01T09:52:51Z"}, "message": "[multiple changes]\n\n2009-12-01  Ed Schonberg  <schonberg@adacore.com>\n\n\t* einfo.ads: Clarify use of Is_Private_Primitive.\n\t* sem_ch6.adb (Analyze_Subprogram_Declaration): An operation is a\n\tprivate primitive operation only if it is declared in the scope of the\n\tprivate controlling type.\n\t* exp_ch9.adb (Build_Wrapper_Spec): Build wrappers for private\n\tprotected operations as well.\n\n2009-12-01  Arnaud Charlet  <charlet@adacore.com>\n\n\t* gnat1drv.adb (Adjust_Global_Switches): Disable front-end\n\toptimizations in CodePeer mode, to keep the tree as close to the source\n\tcode as possible, and also to avoid inconsistencies between trees when\n\tusing different optimization switches.\n\n2009-12-01  Thomas Quinot  <quinot@adacore.com>\n\n\t* scos.ads: Updated specification of source coverage obligation\n\tinformation.\n\n2009-12-01  Thomas Quinot  <quinot@adacore.com>\n\n\t* g-sercom.ads, g-sercom-mingw.adb, g-sercom-linux.adb,\n\ta-ststio.adb, s-commun.adb, s-commun.ads, g-socket.adb,\n\tg-socket.ads (System.Communications.Last_Index): For the case where no\n\telement has been transferred and Item'First =\n\tStream_Element_Offset'First, raise CONSTRAINT_ERROR.\n\n2009-12-01  Ed Schonberg  <schonberg@adacore.com>\n\n\t* sem_ch10.adb (Install_Siblings): A private with_clause on some child\n\tunit U in an ancestor of the current unit must be ignored if the\n\tcurrent unit has a regular with_clause on U.\n\nFrom-SVN: r154868", "tree": {"sha": "eeec9a706733f203876ebacade50c8506ca77123", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/eeec9a706733f203876ebacade50c8506ca77123"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b7d5e87b0780ff54f2ade45aabaea5cd7148ec86", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b7d5e87b0780ff54f2ade45aabaea5cd7148ec86", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b7d5e87b0780ff54f2ade45aabaea5cd7148ec86", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b7d5e87b0780ff54f2ade45aabaea5cd7148ec86/comments", "author": null, "committer": null, "parents": [{"sha": "acb85bea1d3a9a749defaa9d660ff87ff1345a93", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/acb85bea1d3a9a749defaa9d660ff87ff1345a93", "html_url": "https://github.com/Rust-GCC/gccrs/commit/acb85bea1d3a9a749defaa9d660ff87ff1345a93"}], "stats": {"total": 380, "additions": 253, "deletions": 127}, "files": [{"sha": "ddca18f751f2fbf8014753bb22414394f229b372", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 35, "deletions": 0, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b7d5e87b0780ff54f2ade45aabaea5cd7148ec86/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b7d5e87b0780ff54f2ade45aabaea5cd7148ec86/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=b7d5e87b0780ff54f2ade45aabaea5cd7148ec86", "patch": "@@ -1,3 +1,38 @@\n+2009-12-01  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* einfo.ads: Clarify use of Is_Private_Primitive.\n+\t* sem_ch6.adb (Analyze_Subprogram_Declaration): An operation is a\n+\tprivate primitive operation only if it is declared in the scope of the\n+\tprivate controlling type.\n+\t* exp_ch9.adb (Build_Wrapper_Spec): Build wrappers for private\n+\tprotected operations as well.\n+\n+2009-12-01  Arnaud Charlet  <charlet@adacore.com>\n+\n+\t* gnat1drv.adb (Adjust_Global_Switches): Disable front-end\n+\toptimizations in CodePeer mode, to keep the tree as close to the source\n+\tcode as possible, and also to avoid inconsistencies between trees when\n+\tusing different optimization switches.\n+\n+2009-12-01  Thomas Quinot  <quinot@adacore.com>\n+\n+\t* scos.ads: Updated specification of source coverage obligation\n+\tinformation.\n+\n+2009-12-01  Thomas Quinot  <quinot@adacore.com>\n+\n+\t* g-sercom.ads, g-sercom-mingw.adb, g-sercom-linux.adb,\n+\ta-ststio.adb, s-commun.adb, s-commun.ads, g-socket.adb,\n+\tg-socket.ads (System.Communications.Last_Index): For the case where no\n+\telement has been transferred and Item'First =\n+\tStream_Element_Offset'First, raise CONSTRAINT_ERROR.\n+\n+2009-12-01  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* sem_ch10.adb (Install_Siblings): A private with_clause on some child\n+\tunit U in an ancestor of the current unit must be ignored if the\n+\tcurrent unit has a regular with_clause on U.\n+\n 2009-11-30  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>\n \n \t* s-oscons-tmplt.c [__mips && __sgi]: Only define _XOPEN5, IOV_MAX"}, {"sha": "89273a89f4cb9eda6345f32703e3f5920bc2f2ec", "filename": "gcc/ada/a-ststio.adb", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b7d5e87b0780ff54f2ade45aabaea5cd7148ec86/gcc%2Fada%2Fa-ststio.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b7d5e87b0780ff54f2ade45aabaea5cd7148ec86/gcc%2Fada%2Fa-ststio.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-ststio.adb?ref=b7d5e87b0780ff54f2ade45aabaea5cd7148ec86", "patch": "@@ -29,9 +29,10 @@\n --                                                                          --\n ------------------------------------------------------------------------------\n \n-with Interfaces.C_Streams; use Interfaces.C_Streams;\n+with Interfaces.C_Streams;  use Interfaces.C_Streams;\n \n with System;               use System;\n+with System.Communication; use System.Communication;\n with System.File_IO;\n with System.Soft_Links;\n with System.CRTL;\n@@ -293,8 +294,8 @@ package body Ada.Streams.Stream_IO is\n       end if;\n \n       File.Index := File.Index + Count (Nread);\n-      Last := Item'First + Stream_Element_Offset (Nread) - 1;\n       File.Last_Op := Op_Read;\n+      Last := Last_Index (Item'First, Nread);\n    end Read;\n \n    --  This version of Read is the primitive operation on the underlying"}, {"sha": "d4294728563507c56d295ec082f22ae319915af6", "filename": "gcc/ada/einfo.ads", "status": "modified", "additions": 11, "deletions": 3, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b7d5e87b0780ff54f2ade45aabaea5cd7148ec86/gcc%2Fada%2Feinfo.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b7d5e87b0780ff54f2ade45aabaea5cd7148ec86/gcc%2Fada%2Feinfo.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Feinfo.ads?ref=b7d5e87b0780ff54f2ade45aabaea5cd7148ec86", "patch": "@@ -2098,7 +2098,11 @@ package Einfo is\n --       Present in all entities. Set true for all entities declared in the\n --       private part or body of a package. Also marks generic formals of a\n --       formal package declared without a box. For library level entities,\n---       this flag is set if the entity is not publicly visible.\n+--       this flag is set if the entity is not publicly visible. This flag\n+--       is reset when compiling the body of the package where the entity\n+--       is declared, when compiling the private part or body of a public\n+--       child unit, and when compiling a private child unit (see Install_\n+--       Private_Declaration in sem_ch7).\n \n --    Is_Hidden_Open_Scope (Flag171)\n --       Present in all entities. Set true for a scope that contains the\n@@ -2451,8 +2455,12 @@ package Einfo is\n --       child unit, or if it is the descendent of a private child unit.\n \n --    Is_Private_Primitive (Flag245)\n---       Present in subprograms. Set if the first parameter of the subprogram\n---       is of concurrent tagged type with a private view.\n+--       Present in subprograms. Set if the operation is a primitive of a\n+--       tagged type (procedure or function dispatching on result) whose\n+--       full view has not been seen. Used in particular for primitive\n+--       subprograms of a synchronized type declared between the two views\n+--       of the type, so that the wrapper built for such a subprogram can\n+--       be given the proper signature.\n \n --    Is_Private_Type (synthesized)\n --       Applies to all entities, true for private types and subtypes,"}, {"sha": "c527bf6ef32e9afed191aa35ec5fc08111e68f5d", "filename": "gcc/ada/exp_ch9.adb", "status": "modified", "additions": 56, "deletions": 44, "changes": 100, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b7d5e87b0780ff54f2ade45aabaea5cd7148ec86/gcc%2Fada%2Fexp_ch9.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b7d5e87b0780ff54f2ade45aabaea5cd7148ec86/gcc%2Fada%2Fexp_ch9.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch9.adb?ref=b7d5e87b0780ff54f2ade45aabaea5cd7148ec86", "patch": "@@ -2180,6 +2180,58 @@ package body Exp_Ch9 is\n    is\n       Def     : Node_Id;\n       Rec_Typ : Entity_Id;\n+      procedure Scan_Declarations (L : List_Id);\n+      --  Common processing for visible and private declarations\n+      --  of a protected type.\n+\n+      procedure Scan_Declarations (L : List_Id) is\n+         Decl      : Node_Id;\n+         Wrap_Decl : Node_Id;\n+         Wrap_Spec : Node_Id;\n+\n+      begin\n+         if No (L) then\n+            return;\n+         end if;\n+\n+         Decl := First (L);\n+         while Present (Decl) loop\n+            Wrap_Spec := Empty;\n+\n+            if Nkind (Decl) = N_Entry_Declaration\n+              and then Ekind (Defining_Identifier (Decl)) = E_Entry\n+            then\n+               Wrap_Spec :=\n+                 Build_Wrapper_Spec\n+                   (Subp_Id => Defining_Identifier (Decl),\n+                    Obj_Typ => Rec_Typ,\n+                    Formals => Parameter_Specifications (Decl));\n+\n+            elsif Nkind (Decl) = N_Subprogram_Declaration then\n+               Wrap_Spec :=\n+                 Build_Wrapper_Spec\n+                   (Subp_Id => Defining_Unit_Name (Specification (Decl)),\n+                    Obj_Typ => Rec_Typ,\n+                    Formals =>\n+                      Parameter_Specifications (Specification (Decl)));\n+            end if;\n+\n+            if Present (Wrap_Spec) then\n+               Wrap_Decl :=\n+                 Make_Subprogram_Declaration (Loc,\n+                   Specification => Wrap_Spec);\n+\n+               Insert_After (N, Wrap_Decl);\n+               N := Wrap_Decl;\n+\n+               Analyze (Wrap_Decl);\n+            end if;\n+\n+            Next (Decl);\n+         end loop;\n+      end Scan_Declarations;\n+\n+      --  start of processing for Build_Wrapper_Specs\n \n    begin\n       if Is_Protected_Type (Typ) then\n@@ -2191,54 +2243,14 @@ package body Exp_Ch9 is\n       Rec_Typ := Corresponding_Record_Type (Typ);\n \n       --  Generate wrapper specs for a concurrent type which implements an\n-      --  interface and has visible entries and/or protected procedures.\n+      --  interface. Operations in both the visible and private parts may\n+      --  implement progenitor operations.\n \n       if Present (Interfaces (Rec_Typ))\n         and then Present (Def)\n-        and then Present (Visible_Declarations (Def))\n       then\n-         declare\n-            Decl      : Node_Id;\n-            Wrap_Decl : Node_Id;\n-            Wrap_Spec : Node_Id;\n-\n-         begin\n-            Decl := First (Visible_Declarations (Def));\n-            while Present (Decl) loop\n-               Wrap_Spec := Empty;\n-\n-               if Nkind (Decl) = N_Entry_Declaration\n-                 and then Ekind (Defining_Identifier (Decl)) = E_Entry\n-               then\n-                  Wrap_Spec :=\n-                    Build_Wrapper_Spec\n-                      (Subp_Id => Defining_Identifier (Decl),\n-                       Obj_Typ => Rec_Typ,\n-                       Formals => Parameter_Specifications (Decl));\n-\n-               elsif Nkind (Decl) = N_Subprogram_Declaration then\n-                  Wrap_Spec :=\n-                    Build_Wrapper_Spec\n-                      (Subp_Id => Defining_Unit_Name (Specification (Decl)),\n-                       Obj_Typ => Rec_Typ,\n-                       Formals =>\n-                         Parameter_Specifications (Specification (Decl)));\n-               end if;\n-\n-               if Present (Wrap_Spec) then\n-                  Wrap_Decl :=\n-                    Make_Subprogram_Declaration (Loc,\n-                      Specification => Wrap_Spec);\n-\n-                  Insert_After (N, Wrap_Decl);\n-                  N := Wrap_Decl;\n-\n-                  Analyze (Wrap_Decl);\n-               end if;\n-\n-               Next (Decl);\n-            end loop;\n-         end;\n+         Scan_Declarations (Visible_Declarations (Def));\n+         Scan_Declarations (Private_Declarations (Def));\n       end if;\n    end Build_Wrapper_Specs;\n "}, {"sha": "a89b09b8d08030dd51523c3e9b85e5e0eccef063", "filename": "gcc/ada/g-sercom-linux.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b7d5e87b0780ff54f2ade45aabaea5cd7148ec86/gcc%2Fada%2Fg-sercom-linux.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b7d5e87b0780ff54f2ade45aabaea5cd7148ec86/gcc%2Fada%2Fg-sercom-linux.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-sercom-linux.adb?ref=b7d5e87b0780ff54f2ade45aabaea5cd7148ec86", "patch": "@@ -172,7 +172,7 @@ package body GNAT.Serial_Communications is\n          Raise_Error (\"read failed\");\n       end if;\n \n-      Last := Last_Index (Buffer'First, C.int (Res));\n+      Last := Last_Index (Buffer'First, size_t (Res));\n    end Read;\n \n    ---------"}, {"sha": "cc6123bbc7c0306d65d2ad7791771ed759003ec9", "filename": "gcc/ada/g-sercom-mingw.adb", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b7d5e87b0780ff54f2ade45aabaea5cd7148ec86/gcc%2Fada%2Fg-sercom-mingw.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b7d5e87b0780ff54f2ade45aabaea5cd7148ec86/gcc%2Fada%2Fg-sercom-mingw.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-sercom-mingw.adb?ref=b7d5e87b0780ff54f2ade45aabaea5cd7148ec86", "patch": "@@ -38,6 +38,7 @@ with Ada.Streams;                use Ada.Streams;\n \n with System;               use System;\n with System.Communication; use System.Communication;\n+with System.CRTL;          use System.CRTL;\n with System.Win32;         use System.Win32;\n with System.Win32.Ext;     use System.Win32.Ext;\n \n@@ -162,7 +163,7 @@ package body GNAT.Serial_Communications is\n          Raise_Error (\"read error\");\n       end if;\n \n-      Last := Last_Index (Buffer'First, C.int (Read_Last));\n+      Last := Last_Index (Buffer'First, size_t (Read_Last));\n    end Read;\n \n    ---------"}, {"sha": "a3c4b0c610b45071d62b9be577b28e81ba7aba25", "filename": "gcc/ada/g-sercom.ads", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b7d5e87b0780ff54f2ade45aabaea5cd7148ec86/gcc%2Fada%2Fg-sercom.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b7d5e87b0780ff54f2ade45aabaea5cd7148ec86/gcc%2Fada%2Fg-sercom.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-sercom.ads?ref=b7d5e87b0780ff54f2ade45aabaea5cd7148ec86", "patch": "@@ -92,8 +92,8 @@ package GNAT.Serial_Communications is\n       Last   : out Ada.Streams.Stream_Element_Offset);\n    --  Read a set of bytes, put result into Buffer and set Last accordingly.\n    --  Last is set to Buffer'First - 1 if no byte has been read, unless\n-   --  Buffer'First = Stream_Element_Offset'First, in which case Last is\n-   --  set to Stream_Element_Offset'Last instead.\n+   --  Buffer'First = Stream_Element_Offset'First, in which case\n+   --  Constraint_Error raised instead.\n \n    overriding procedure Write\n      (Port   : in out Serial_Port;"}, {"sha": "09537baf452e61af655413184c4a249c586c1a12", "filename": "gcc/ada/g-socket.adb", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b7d5e87b0780ff54f2ade45aabaea5cd7148ec86/gcc%2Fada%2Fg-socket.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b7d5e87b0780ff54f2ade45aabaea5cd7148ec86/gcc%2Fada%2Fg-socket.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-socket.adb?ref=b7d5e87b0780ff54f2ade45aabaea5cd7148ec86", "patch": "@@ -48,6 +48,7 @@ pragma Warnings (Off, GNAT.Sockets.Linker_Options);\n \n with System;               use System;\n with System.Communication; use System.Communication;\n+with System.CRTL;          use System.CRTL;\n \n package body GNAT.Sockets is\n \n@@ -1636,7 +1637,7 @@ package body GNAT.Sockets is\n          Raise_Socket_Error (Socket_Errno);\n       end if;\n \n-      Last := Last_Index (First => Item'First, Count => Res);\n+      Last := Last_Index (First => Item'First, Count => size_t (Res));\n    end Receive_Socket;\n \n    --------------------\n@@ -1668,7 +1669,7 @@ package body GNAT.Sockets is\n          Raise_Socket_Error (Socket_Errno);\n       end if;\n \n-      Last := Last_Index (First => Item'First, Count => Res);\n+      Last := Last_Index (First => Item'First, Count => size_t (Res));\n \n       To_Inet_Addr (Sin.Sin_Addr, From.Addr);\n       From.Port := Port_Type (Network_To_Short (Sin.Sin_Port));\n@@ -1917,7 +1918,7 @@ package body GNAT.Sockets is\n          Raise_Socket_Error (Socket_Errno);\n       end if;\n \n-      Last := Last_Index (First => Item'First, Count => Res);\n+      Last := Last_Index (First => Item'First, Count => size_t (Res));\n    end Send_Socket;\n \n    -----------------"}, {"sha": "8d3138e65d6520941613d40dee33ef3cbcc33809", "filename": "gcc/ada/g-socket.ads", "status": "modified", "additions": 12, "deletions": 10, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b7d5e87b0780ff54f2ade45aabaea5cd7148ec86/gcc%2Fada%2Fg-socket.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b7d5e87b0780ff54f2ade45aabaea5cd7148ec86/gcc%2Fada%2Fg-socket.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-socket.ads?ref=b7d5e87b0780ff54f2ade45aabaea5cd7148ec86", "patch": "@@ -895,10 +895,11 @@ package GNAT.Sockets is\n       Flags  : Request_Flag_Type := No_Request_Flag);\n    --  Receive message from Socket. Last is the index value such that Item\n    --  (Last) is the last character assigned. Note that Last is set to\n-   --  Item'First - 1 (or to Stream_Element_Array'Last if Item'First is\n-   --  Stream_Element_Offset'First) when the socket has been closed by peer.\n-   --  This is not an error and no exception is raised. Flags allows to\n-   --  control the reception. Raise Socket_Error on error.\n+   --  Item'First - 1 when the socket has been closed by peer. This is not\n+   --  an error, and no exception is raised in this case unless Item'First\n+   --  is Stream_Element_Offset'First, in which case Constraint_Error is\n+   --  raised. Flags allows to control the reception. Raise Socket_Error on\n+   --  error.\n \n    procedure Receive_Socket\n      (Socket : Socket_Type;\n@@ -937,12 +938,13 @@ package GNAT.Sockets is\n    --  Transmit a message over a socket. For a datagram socket, the address\n    --  is given by To.all. For a stream socket, To must be null. Last\n    --  is the index value such that Item (Last) is the last character\n-   --  sent. Note that Last is set to Item'First - 1 (if Item'First is\n-   --  Stream_Element_Offset'First, to Stream_Element_Array'Last) when the\n-   --  socket has been closed by peer. This is not an error and no exception\n-   --  is raised. Flags allows control of the transmission. Raises exception\n-   --  Socket_Error on error. Note: this subprogram is inlined because it is\n-   --  also used to implement the two variants below.\n+   --  sent. Note that Last is set to Item'First - 1 if the socket has been\n+   --  closed by the peer (unless Item'First is Stream_Element_Offset'First,\n+   --  in which case Constraint_Error is raised instead). This is not an error,\n+   --  and Socket_Error is not raised in that case. Flags allows control of the\n+   --  transmission. Raises exception Socket_Error on error. Note: this\n+   --  subprogram is inlined because it is also used to implement the two\n+   --  variants below.\n \n    procedure Send_Socket\n      (Socket : Socket_Type;"}, {"sha": "79824868be5af39789e1fba559e2fb0c3f58f7b8", "filename": "gcc/ada/gnat1drv.adb", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b7d5e87b0780ff54f2ade45aabaea5cd7148ec86/gcc%2Fada%2Fgnat1drv.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b7d5e87b0780ff54f2ade45aabaea5cd7148ec86/gcc%2Fada%2Fgnat1drv.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnat1drv.adb?ref=b7d5e87b0780ff54f2ade45aabaea5cd7148ec86", "patch": "@@ -162,6 +162,12 @@ procedure Gnat1drv is\n \n          ASIS_Mode := False;\n \n+         --  Disable front-end optimizations, to keep the tree as close to the\n+         --  source code as possible, and also to avoid inconsistencies between\n+         --  trees when using different optimization switches.\n+\n+         Optimization_Level := 0;\n+\n          --  Disable specific expansions for Restrictions pragmas to avoid\n          --  tree inconsistencies between compilations with different pragmas\n          --  that will cause different SCIL files to be generated for the"}, {"sha": "8d0c2e52d0fec562d9aebeb4cb2b770cb6955813", "filename": "gcc/ada/s-commun.adb", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b7d5e87b0780ff54f2ade45aabaea5cd7148ec86/gcc%2Fada%2Fs-commun.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b7d5e87b0780ff54f2ade45aabaea5cd7148ec86/gcc%2Fada%2Fs-commun.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-commun.adb?ref=b7d5e87b0780ff54f2ade45aabaea5cd7148ec86", "patch": "@@ -39,12 +39,14 @@ package body System.Communication is\n \n    function Last_Index\n      (First : Ada.Streams.Stream_Element_Offset;\n-      Count : C.int) return Ada.Streams.Stream_Element_Offset\n+      Count : CRTL.size_t) return Ada.Streams.Stream_Element_Offset\n    is\n       use type Ada.Streams.Stream_Element_Offset;\n+      use type System.CRTL.size_t;\n    begin\n       if First = SEO'First and then Count = 0 then\n-         return SEO'Last;\n+         raise Constraint_Error with\n+           \"last index out of range (no element transferred)\";\n       else\n          return First + SEO (Count - 1);\n       end if;"}, {"sha": "a4e52d88102332f1ad55326f735e9a3d622260ac", "filename": "gcc/ada/s-commun.ads", "status": "modified", "additions": 6, "deletions": 9, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b7d5e87b0780ff54f2ade45aabaea5cd7148ec86/gcc%2Fada%2Fs-commun.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b7d5e87b0780ff54f2ade45aabaea5cd7148ec86/gcc%2Fada%2Fs-commun.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-commun.ads?ref=b7d5e87b0780ff54f2ade45aabaea5cd7148ec86", "patch": "@@ -32,20 +32,17 @@\n --  Common support unit for GNAT.Sockets and GNAT.Serial_Communication\n \n with Ada.Streams;\n-with Interfaces.C;\n+with System.CRTL;\n \n package System.Communication is\n \n-   package C renames Interfaces.C;\n-\n-   use type C.int;\n-\n    function Last_Index\n      (First : Ada.Streams.Stream_Element_Offset;\n-      Count : C.int) return Ada.Streams.Stream_Element_Offset;\n+      Count : CRTL.size_t) return Ada.Streams.Stream_Element_Offset;\n    --  Compute the Last OUT parameter for the various Read / Receive\n-   --  subprograms: returns First + Count - 1, except for the case\n-   --  where First = Stream_Element_Offset'First and Res = 0, in which\n-   --  case Stream_Element_Offset'Last is returned instead.\n+   --  subprograms: returns First + Count - 1.\n+   --  When First = Stream_Element_Offset'First and Res = 0, Constraint_Error\n+   --  is raised. This is consistent with the semantics of stream operations\n+   --  as clarified in AI95-227.\n \n end System.Communication;"}, {"sha": "cf2fb90392c4100f4c8ac0c13981891f1ac89559", "filename": "gcc/ada/scos.ads", "status": "modified", "additions": 73, "deletions": 47, "changes": 120, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b7d5e87b0780ff54f2ade45aabaea5cd7148ec86/gcc%2Fada%2Fscos.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b7d5e87b0780ff54f2ade45aabaea5cd7148ec86/gcc%2Fada%2Fscos.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fscos.ads?ref=b7d5e87b0780ff54f2ade45aabaea5cd7148ec86", "patch": "@@ -48,6 +48,10 @@ package SCOs is\n    --  Put_SCO reads the internal tables and generates text lines in the ALI\n    --  format.\n \n+   --  ??? The specification below for the SCO ALI format and the internal\n+   --  data structures have been modified, but the implementation has not been\n+   --  updated yet to reflect these specification changes.\n+\n    --------------------\n    -- SCO ALI Format --\n    --------------------\n@@ -102,31 +106,52 @@ package SCOs is\n    --      renaming_declaration\n    --      generic_instantiation\n \n+   --    and the following regions of the syntax tree:\n+\n+   --      the part of a case_statement from CASE up to the expression\n+   --      the part of a FOR iteration scheme from FOR up to the\n+   --        loop_parameter_specification\n+   --      the part of an extended_return_statement from RETURN up to the\n+   --        expression (if present) or to the return_subtype_indication (if\n+   --        no expression)\n+\n    --  Statement lines\n \n-   --    These lines correspond to a sequence of one or more statements which\n-   --    are always executed in sequence, The first statement may be an entry\n-   --    point (e.g. statement after a label), and the last statement may be\n-   --    an exit point (e.g. an exit statement), but no other entry or exit\n-   --    points may occur within the sequence of statements. The idea is that\n-   --    the sequence can be treated as a single unit from a coverage point of\n-   --    view, if any of the code for the statement sequence is executed, this\n-   --    corresponds to coverage of the entire statement sequence. The form of\n-   --    a statement line in the ALI file is:\n+   --    These lines correspond to one or more successive statements (in the\n+   --    sense of the above list) which are always executed in sequence (in the\n+   --    absence of exceptions or other external interruptions).\n \n-   --      CS sloc-range\n+   --    Entry points to such sequences are:\n \n-   --  Exit points\n+   --      the first statement of any sequence_of_statements\n+   --      the first statement after a compound statement\n+   --      the first statement after an EXIT, RAISE or GOTO statement\n+   --      any statement with a label\n \n-   --    An exit point is a statement that causes transfer of control. Examples\n-   --    are exit statements, raise statements and return statements. The form\n-   --    of an exit point in the ALI file is:\n+   --    Each entry point must appear as the first entry on a CS line.\n+   --    The idea is that if any simple statement on a CS line is known to have\n+   --    been executed, then all statements that appear before it on the same\n+   --    CS line are certain to also have been executed.\n \n-   --      CT sloc-range\n+   --    The form of a statement line in the ALI file is:\n \n-   --  Decisions\n+   --      CS *sloc-range [*sloc-range...]\n+\n+   --    where each sloc-range corresponds to a single statement, and * is\n+   --    one of:\n+\n+   --      t  type declaration\n+   --      s  subtype declaration\n+   --      o  object declaration\n+   --      r  renaming declaration\n+   --      i  generic instantiation\n+   --      C  CASE statement\n+   --      F  FOR loop statement\n+   --      R  extended RETURN statement\n \n-   --    Decisions represent the most significant section of the SCO lines\n+   --    and is omitted for all other cases.\n+\n+   --  Decisions\n \n    --    Note: in the following description, logical operator includes the\n    --    short circuited forms (so can be any of AND, OR, XOR, NOT, AND THEN,\n@@ -136,7 +161,7 @@ package SCOs is\n    --    expresssion that occurs in the context of a control structure in the\n    --    source program, including WHILE, IF, EXIT WHEN. Note that a boolean\n    --    expression in any other context, for example, on the right side of an\n-   --    assignment, is not considered to be a decision.\n+   --    assignment, is not considered to be a simple decision.\n \n    --    A complex decision is an occurrence of a logical operator which is not\n    --    itself an operand of some other logical operator. If any operand of\n@@ -160,7 +185,7 @@ package SCOs is\n \n    --    For each decision, a decision line is generated with the form:\n \n-   --      C* expression\n+   --      C*sloc expression\n \n    --    Here * is one of the following characters:\n \n@@ -169,15 +194,23 @@ package SCOs is\n    --      W  decision in WHILE iteration scheme\n    --      X  decision appearing in some other expression context\n \n+   --    For I, E, W, sloc is the source location of the IF, EXIT or WHILE\n+   --    token.\n+\n+   --    For X, sloc is omitted.\n+\n    --    The expression is a prefix polish form indicating the structure of\n    --    the decision, including logical operators and short circuit forms.\n    --    The following is a grammar showing the structure of expression:\n \n    --      expression ::= term             (if expr is not logical operator)\n-   --      expression ::= & term term      (if expr is AND or AND THEN)\n-   --      expression ::= | term term      (if expr is OR or OR ELSE)\n-   --      expression ::= ^ term term      (if expr is XOR)\n-   --      expression ::= !term            (if expr is NOT)\n+   --      expression ::= &sloc term term  (if expr is AND or AND THEN)\n+   --      expression ::= |sloc term term  (if expr is OR or OR ELSE)\n+   --      expression ::= ^sloc term term  (if expr is XOR)\n+   --      expression ::= !sloc term       (if expr is NOT)\n+\n+   --      In the last four cases, sloc is the source location of the AND, OR,\n+   --      XOR or NOT token, respectively.\n \n    --      term ::= element\n    --      term ::= expression\n@@ -194,15 +227,15 @@ package SCOs is\n    --      the compiler as always being true or false.\n \n    --    & indicates either AND or AND THEN connecting two conditions. In the\n-   --    context of couverture we only permit AND THEN in the source in any\n+   --    context of Couverture we only permit AND THEN in the source in any\n    --    case, so & can always be understood to be AND THEN.\n \n    --    | indicates either OR or OR ELSE connection two conditions. In the\n-   --    context of couverture we only permit OR ELSE in the source in any\n+   --    context of Couverture we only permit OR ELSE in the source in any\n    --    case, so | can always be understood to be OR ELSE.\n \n    --    ^ indicates XOR connecting two conditions. In the context of\n-   --    couverture, we do not permit XOR, so this will never appear.\n+   --    Couverture, we do not permit XOR, so this will never appear.\n \n    --    ! indicates NOT applied to the expression.\n \n@@ -235,41 +268,34 @@ package SCOs is\n    --  The SCO_Table_Entry values appear as follows:\n \n    --    Statements\n-   --      C1   = 'S'\n-   --      C2   = ' '\n+   --      C1   = 'S' for entry point, 's' otherwise\n+   --      C2   = 't', 's', 'o', 'r', 'i', 'C', 'F', 'R', ' '\n+   --             (type/subtype/object/renaming/instantiation/CASE/FOR/RETURN)\n    --      From = starting source location\n    --      To   = ending source location\n-   --      Last = unused\n-\n-   --    Exit\n-   --      C1   = 'T'\n-   --      C2   = ' '\n-   --      From = starting source location\n-   --      To   = ending source location\n-   --      Last = unused\n+   --      Last = False for all but the last entry, True for last entry\n \n-   --    Simple Decision\n-   --      C1   = 'I', 'E', 'W', 'X' (if/exit/while/expression)\n-   --      C2   = 'c', 't', or 'f'\n-   --      From = starting source location\n-   --      To   = ending source location\n-   --      Last = True\n+   --    Note: successive statements (possibly interspersed with entries of\n+   --    other kinds, that are ignored for this purpose), starting with one\n+   --    labeled with C1 = 'S', up to and including the first one labeled with\n+   --    Last=True, indicate the sequence to be output for a sequence of\n+   --    statements on a single CS line.\n \n-   --    Complex Decision\n+   --    Decision\n    --      C1   = 'I', 'E', 'W', 'X' (if/exit/while/expression)\n    --      C2   = ' '\n-   --      From = No_Source_Location\n+   --      From = location of IF/EXIT/WHILE token, No_Source_Location for X\n    --      To   = No_Source_Location\n-   --      Last = False\n+   --      Last = unused\n \n    --    Operator\n    --      C1   = '!', '^', '&', '|'\n    --      C2   = ' '\n-   --      From = No_Source_Location\n+   --      From = location of NOT/XOR/AND/OR token\n    --      To   = No_Source_Location\n    --      Last = False\n \n-   --    Element\n+   --    Element (condition)\n    --      C1   = ' '\n    --      C2   = 'c', 't', or 'f' (condition/true/false)\n    --      From = starting source location"}, {"sha": "2f614080fdca8749a3cd98d3b91ef511c04f444b", "filename": "gcc/ada/sem_ch10.adb", "status": "modified", "additions": 33, "deletions": 2, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b7d5e87b0780ff54f2ade45aabaea5cd7148ec86/gcc%2Fada%2Fsem_ch10.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b7d5e87b0780ff54f2ade45aabaea5cd7148ec86/gcc%2Fada%2Fsem_ch10.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch10.adb?ref=b7d5e87b0780ff54f2ade45aabaea5cd7148ec86", "patch": "@@ -4000,13 +4000,44 @@ package body Sem_Ch10 is\n \n          --  If the item is a private with-clause on a child unit, the parent\n          --  may have been installed already, but the child unit must remain\n-         --  invisible until installed in a private part or body.\n+         --  invisible until installed in a private part or body, unless there\n+         --  is already a regular with_clause for it in the current unit.\n \n          elsif Private_Present (Item) then\n             Id := Entity (Name (Item));\n \n             if Is_Child_Unit (Id) then\n-               Set_Is_Visible_Child_Unit (Id, False);\n+               declare\n+                  Clause : Node_Id;\n+\n+                  function In_Context return Boolean;\n+                  --  Scan context of current unit, to check whether there is\n+                  --  a with_clause on the same unit as a private with-clause\n+                  --  on a parent, in which case child unit is visible.\n+\n+                  function In_Context return Boolean is\n+                  begin\n+                     Clause :=\n+                       First (Context_Items (Cunit (Current_Sem_Unit)));\n+                     while Present (Clause) loop\n+                        if Nkind (Clause) = N_With_Clause\n+                          and then Comes_From_Source (Clause)\n+                          and then Is_Entity_Name (Name (Clause))\n+                          and then Entity (Name (Clause)) = Id\n+                          and then not Private_Present (Clause)\n+                        then\n+                           return True;\n+                        end if;\n+\n+                        Next (Clause);\n+                     end loop;\n+\n+                     return False;\n+                  end In_Context;\n+\n+               begin\n+                  Set_Is_Visible_Child_Unit (Id, In_Context);\n+               end;\n             end if;\n          end if;\n "}, {"sha": "38b3b01a10bee03013ba4a19fce5d215d3afb34e", "filename": "gcc/ada/sem_ch6.adb", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b7d5e87b0780ff54f2ade45aabaea5cd7148ec86/gcc%2Fada%2Fsem_ch6.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b7d5e87b0780ff54f2ade45aabaea5cd7148ec86/gcc%2Fada%2Fsem_ch6.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch6.adb?ref=b7d5e87b0780ff54f2ade45aabaea5cd7148ec86", "patch": "@@ -2654,10 +2654,13 @@ package body Sem_Ch6 is\n       --  If the type of the first formal of the current subprogram is a\n       --  nongeneric tagged private type, mark the subprogram as being a\n       --  private primitive. Ditto if this is a function with controlling\n-      --  result, and the return type is currently private.\n+      --  result, and the return type is currently private. In both cases,\n+      --  the type of the controlling argument or result must be in the\n+      --  current scope for the operation to be primitive.\n \n       if Has_Controlling_Result (Designator)\n         and then Is_Private_Type (Etype (Designator))\n+        and then Scope (Etype (Designator)) = Current_Scope\n         and then not Is_Generic_Actual_Type (Etype (Designator))\n       then\n          Set_Is_Private_Primitive (Designator);\n@@ -2669,6 +2672,7 @@ package body Sem_Ch6 is\n          begin\n             Set_Is_Private_Primitive (Designator,\n               Is_Tagged_Type (Formal_Typ)\n+                and then Scope (Formal_Typ) = Current_Scope\n                 and then Is_Private_Type (Formal_Typ)\n                 and then not Is_Generic_Actual_Type (Formal_Typ));\n          end;"}]}