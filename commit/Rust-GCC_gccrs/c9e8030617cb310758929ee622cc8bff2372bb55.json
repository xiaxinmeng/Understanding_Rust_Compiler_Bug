{"sha": "c9e8030617cb310758929ee622cc8bff2372bb55", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzllODAzMDYxN2NiMzEwNzU4OTI5ZWU2MjJjYzhiZmYyMzcyYmI1NQ==", "commit": {"author": {"name": "Jerome Lambourg", "email": "lambourg@adacore.com", "date": "2018-01-11T08:53:52Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "pmderodat@gcc.gnu.org", "date": "2018-01-11T08:53:52Z"}, "message": "[Ada] QNX: various runtime fixes for file I/O, timers, timezone\n\n2018-01-11  Jerome Lambourg  <lambourg@adacore.com>\n\ngcc/ada/\n\n\t* libgnat/g-soliop__qnx.ads: New.\n\t* adaint.c, adaint.h, cstreams.c, s-oscons-tmplt.c, sysdep.c: Update\n\tfor QNX.\n\nFrom-SVN: r256512", "tree": {"sha": "8bbfbb2d0d8dc25dc3dfb2f4beac437eca3a92e8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8bbfbb2d0d8dc25dc3dfb2f4beac437eca3a92e8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c9e8030617cb310758929ee622cc8bff2372bb55", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c9e8030617cb310758929ee622cc8bff2372bb55", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c9e8030617cb310758929ee622cc8bff2372bb55", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c9e8030617cb310758929ee622cc8bff2372bb55/comments", "author": {"login": "lambourg", "id": 480233, "node_id": "MDQ6VXNlcjQ4MDIzMw==", "avatar_url": "https://avatars.githubusercontent.com/u/480233?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lambourg", "html_url": "https://github.com/lambourg", "followers_url": "https://api.github.com/users/lambourg/followers", "following_url": "https://api.github.com/users/lambourg/following{/other_user}", "gists_url": "https://api.github.com/users/lambourg/gists{/gist_id}", "starred_url": "https://api.github.com/users/lambourg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lambourg/subscriptions", "organizations_url": "https://api.github.com/users/lambourg/orgs", "repos_url": "https://api.github.com/users/lambourg/repos", "events_url": "https://api.github.com/users/lambourg/events{/privacy}", "received_events_url": "https://api.github.com/users/lambourg/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "4727f693ad0f5ea1f3496d76361204e16abd2615", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4727f693ad0f5ea1f3496d76361204e16abd2615", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4727f693ad0f5ea1f3496d76361204e16abd2615"}], "stats": {"total": 95, "additions": 82, "deletions": 13}, "files": [{"sha": "98cff55c25578ce2de3b8fd38b8d6de4c2b7b9d1", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c9e8030617cb310758929ee622cc8bff2372bb55/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c9e8030617cb310758929ee622cc8bff2372bb55/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=c9e8030617cb310758929ee622cc8bff2372bb55", "patch": "@@ -1,3 +1,9 @@\n+2018-01-11  Jerome Lambourg  <lambourg@adacore.com>\n+\n+\t* libgnat/g-soliop__qnx.ads: New.\n+\t* adaint.c, adaint.h, cstreams.c, s-oscons-tmplt.c, sysdep.c: Update\n+\tfor QNX.\n+\n 2018-01-11  Bob Duff  <duff@adacore.com>\n \n \t* par-ch9.adb (P_Protected_Operation_Declaration_Opt): Give an error if"}, {"sha": "3b0aea92c0550dc0e06b1cf15109b69f6330d656", "filename": "gcc/ada/adaint.c", "status": "modified", "additions": 7, "deletions": 3, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c9e8030617cb310758929ee622cc8bff2372bb55/gcc%2Fada%2Fadaint.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c9e8030617cb310758929ee622cc8bff2372bb55/gcc%2Fada%2Fadaint.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fadaint.c?ref=c9e8030617cb310758929ee622cc8bff2372bb55", "patch": "@@ -6,7 +6,7 @@\n  *                                                                          *\n  *                          C Implementation File                           *\n  *                                                                          *\n- *          Copyright (C) 1992-2017, Free Software Foundation, Inc.         *\n+ *          Copyright (C) 1992-2018, Free Software Foundation, Inc.         *\n  *                                                                          *\n  * GNAT is free software;  you can  redistribute it  and/or modify it under *\n  * terms of the  GNU General Public License as published  by the Free Soft- *\n@@ -81,6 +81,10 @@\n #define __BSD_VISIBLE 1\n #endif\n \n+#if defined (__QNX__)\n+#define _LARGEFILE64_SOURCE 1\n+#endif\n+\n #ifdef IN_RTS\n #include \"tconfig.h\"\n #include \"tsystem.h\"\n@@ -773,7 +777,7 @@ __gnat_rmdir (char *path)\n }\n \n #if defined (_WIN32) || defined (__linux__) || defined (__sun__) \\\n-  || defined (__FreeBSD__) || defined(__DragonFly__)\n+  || defined (__FreeBSD__) || defined(__DragonFly__) || defined (__QNX__)\n #define HAS_TARGET_WCHAR_T\n #endif\n \n@@ -2346,7 +2350,7 @@ __gnat_number_of_cpus (void)\n \n #if defined (__linux__) || defined (__sun__) || defined (_AIX) \\\n   || defined (__APPLE__) || defined (__FreeBSD__) || defined (__OpenBSD__) \\\n-  || defined (__DragonFly__) || defined (__NetBSD__)\n+  || defined (__DragonFly__) || defined (__NetBSD__) || defined (__QNX__)\n   cores = (int) sysconf (_SC_NPROCESSORS_ONLN);\n \n #elif defined (__hpux__)"}, {"sha": "0d12f7e90209189887ab788c43a543da4c7792bd", "filename": "gcc/ada/adaint.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c9e8030617cb310758929ee622cc8bff2372bb55/gcc%2Fada%2Fadaint.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c9e8030617cb310758929ee622cc8bff2372bb55/gcc%2Fada%2Fadaint.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fadaint.h?ref=c9e8030617cb310758929ee622cc8bff2372bb55", "patch": "@@ -6,7 +6,7 @@\n  *                                                                          *\n  *                              C Header File                               *\n  *                                                                          *\n- *          Copyright (C) 1992-2017, Free Software Foundation, Inc.         *\n+ *          Copyright (C) 1992-2018, Free Software Foundation, Inc.         *\n  *                                                                          *\n  * GNAT is free software;  you can  redistribute it  and/or modify it under *\n  * terms of the  GNU General Public License as published  by the Free Soft- *\n@@ -51,7 +51,7 @@ extern \"C\" {\n    determine at compile time what support the system offers for large files.\n    For now we just list the platforms we have manually tested. */\n \n-#if defined (__GLIBC__) || defined (__sun__)\n+#if defined (__GLIBC__) || defined (__sun__) || defined (__QNX__)\n #define GNAT_FOPEN fopen64\n #define GNAT_OPEN open64\n #define GNAT_STAT stat64"}, {"sha": "cdcb531e2b3fadca8df44f60cc9467f0c6abb4e4", "filename": "gcc/ada/cstreams.c", "status": "modified", "additions": 14, "deletions": 1, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c9e8030617cb310758929ee622cc8bff2372bb55/gcc%2Fada%2Fcstreams.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c9e8030617cb310758929ee622cc8bff2372bb55/gcc%2Fada%2Fcstreams.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fcstreams.c?ref=c9e8030617cb310758929ee622cc8bff2372bb55", "patch": "@@ -6,7 +6,7 @@\n  *                                                                          *\n  *              Auxiliary C functions for Interfaces.C.Streams              *\n  *                                                                          *\n- *          Copyright (C) 1992-2017, Free Software Foundation, Inc.         *\n+ *          Copyright (C) 1992-2018, Free Software Foundation, Inc.         *\n  *                                                                          *\n  * GNAT is free software;  you can  redistribute it  and/or modify it under *\n  * terms of the  GNU General Public License as published  by the Free Soft- *\n@@ -198,6 +198,19 @@ __gnat_full_name (char *nam, char *buffer)\n      getcwd approach instead. */\n   realpath (nam, buffer);\n \n+#elif defined (__QNX__)\n+\n+  int length;\n+\n+  if (__gnat_is_absolute_path (nam, strlen (nam)))\n+    realpath (nam, buffer);\n+  else\n+    {\n+      length = __gnat_max_path_len;\n+      __gnat_get_current_dir (buffer, &length);\n+      strncat (buffer, nam, __gnat_max_path_len - length - 1);\n+    }\n+\n #elif defined (__vxworks)\n \n   /* On VxWorks systems, an absolute path can be represented (depending on"}, {"sha": "2904a58edf523eeaf6908c208f4ae3fd8ace178d", "filename": "gcc/ada/libgnat/g-soliop__qnx.ads", "status": "added", "additions": 43, "deletions": 0, "changes": 43, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c9e8030617cb310758929ee622cc8bff2372bb55/gcc%2Fada%2Flibgnat%2Fg-soliop__qnx.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c9e8030617cb310758929ee622cc8bff2372bb55/gcc%2Fada%2Flibgnat%2Fg-soliop__qnx.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fg-soliop__qnx.ads?ref=c9e8030617cb310758929ee622cc8bff2372bb55", "patch": "@@ -0,0 +1,43 @@\n+------------------------------------------------------------------------------\n+--                                                                          --\n+--                         GNAT COMPILER COMPONENTS                         --\n+--                                                                          --\n+--          G N A T . S O C K E T S . L I N K E R _ O P T I O N S           --\n+--                                                                          --\n+--                                 S p e c                                  --\n+--                                                                          --\n+--                     Copyright (C) 2001-2018, AdaCore                     --\n+--                                                                          --\n+-- GNAT is free software;  you can  redistribute it  and/or modify it under --\n+-- terms of the  GNU General Public License as published  by the Free Soft- --\n+-- ware  Foundation;  either version 3,  or (at your option) any later ver- --\n+-- sion.  GNAT is distributed in the hope that it will be useful, but WITH- --\n+-- OUT ANY WARRANTY;  without even the  implied warranty of MERCHANTABILITY --\n+-- or FITNESS FOR A PARTICULAR PURPOSE.                                     --\n+--                                                                          --\n+-- As a special exception under Section 7 of GPL version 3, you are granted --\n+-- additional permissions described in the GCC Runtime Library Exception,   --\n+-- version 3.1, as published by the Free Software Foundation.               --\n+--                                                                          --\n+-- You should have received a copy of the GNU General Public License and    --\n+-- a copy of the GCC Runtime Library Exception along with this program;     --\n+-- see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see    --\n+-- <http://www.gnu.org/licenses/>.                                          --\n+--                                                                          --\n+-- GNAT was originally developed  by the GNAT team at  New York University. --\n+-- Extensive contributions were provided by Ada Core Technologies Inc.      --\n+--                                                                          --\n+------------------------------------------------------------------------------\n+\n+--  This package is used to provide target specific linker_options for the\n+--  support of sockets as required by the package GNAT.Sockets.\n+\n+--  This is an empty version for default use where no additional libraries\n+--  are required. On some targets a target specific version of this unit\n+--  ensures linking with required libraries for proper sockets operation.\n+\n+--  This package should not be directly with'ed by an application program\n+\n+package GNAT.Sockets.Linker_Options is\n+   pragma Linker_Options (\"-lsocket\");\n+end GNAT.Sockets.Linker_Options;"}, {"sha": "4d224509caafafa3cb8897bb21fec071978b39c4", "filename": "gcc/ada/s-oscons-tmplt.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c9e8030617cb310758929ee622cc8bff2372bb55/gcc%2Fada%2Fs-oscons-tmplt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c9e8030617cb310758929ee622cc8bff2372bb55/gcc%2Fada%2Fs-oscons-tmplt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-oscons-tmplt.c?ref=c9e8030617cb310758929ee622cc8bff2372bb55", "patch": "@@ -7,7 +7,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 2000-2017, Free Software Foundation, Inc.         --\n+--          Copyright (C) 2000-2018, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -1443,7 +1443,7 @@ CND(CLOCK_THREAD_CPUTIME_ID, \"Thread CPU clock\")\n \n #if defined(__linux__) || defined(__FreeBSD__) \\\n  || (defined(_AIX) && defined(_AIXVERSION_530)) \\\n- || defined(__DragonFly__)\n+ || defined(__DragonFly__) || defined(__QNX__)\n /** On these platforms use system provided monotonic clock instead of\n  ** the default CLOCK_REALTIME. We then need to set up cond var attributes\n  ** appropriately (see thread.c)."}, {"sha": "98b3901cb16fcd21c0a6369e314057809111081d", "filename": "gcc/ada/sysdep.c", "status": "modified", "additions": 8, "deletions": 5, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c9e8030617cb310758929ee622cc8bff2372bb55/gcc%2Fada%2Fsysdep.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c9e8030617cb310758929ee622cc8bff2372bb55/gcc%2Fada%2Fsysdep.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsysdep.c?ref=c9e8030617cb310758929ee622cc8bff2372bb55", "patch": "@@ -6,7 +6,7 @@\n  *                                                                          *\n  *                          C Implementation File                           *\n  *                                                                          *\n- *         Copyright (C) 1992-2017, Free Software Foundation, Inc.          *\n+ *         Copyright (C) 1992-2018, Free Software Foundation, Inc.          *\n  *                                                                          *\n  * GNAT is free software;  you can  redistribute it  and/or modify it under *\n  * terms of the  GNU General Public License as published  by the Free Soft- *\n@@ -317,7 +317,8 @@ __gnat_ttyname (int filedes)\n   || defined (__MACHTEN__) || defined (__hpux__) || defined (_AIX) \\\n   || (defined (__svr4__) && defined (__i386__)) || defined (__Lynx__) \\\n   || defined (__CYGWIN__) || defined (__FreeBSD__) || defined (__OpenBSD__) \\\n-  || defined (__GLIBC__) || defined (__APPLE__) || defined (__DragonFly__)\n+  || defined (__GLIBC__) || defined (__APPLE__) || defined (__DragonFly__) \\\n+  || defined (__QNX__)\n \n # ifdef __MINGW32__\n #  if OLD_MINGW\n@@ -369,7 +370,8 @@ getc_immediate_common (FILE *stream,\n     || defined (__CYGWIN32__) || defined (__MACHTEN__) || defined (__hpux__) \\\n     || defined (_AIX) || (defined (__svr4__) && defined (__i386__)) \\\n     || defined (__Lynx__) || defined (__FreeBSD__) || defined (__OpenBSD__) \\\n-    || defined (__GLIBC__) || defined (__APPLE__) || defined (__DragonFly__)\n+    || defined (__GLIBC__) || defined (__APPLE__) || defined (__DragonFly__) \\\n+    || defined (__QNX__)\n   char c;\n   int nread;\n   int good_one = 0;\n@@ -389,7 +391,8 @@ getc_immediate_common (FILE *stream,\n     || defined (__MACHTEN__) || defined (__hpux__) \\\n     || defined (_AIX) || (defined (__svr4__) && defined (__i386__)) \\\n     || defined (__Lynx__) || defined (__FreeBSD__) || defined (__OpenBSD__) \\\n-    || defined (__GLIBC__) || defined (__APPLE__) || defined (__DragonFly__)\n+    || defined (__GLIBC__) || defined (__APPLE__) || defined (__DragonFly__) \\\n+    || defined (__QNX__)\n       eof_ch = termios_rec.c_cc[VEOF];\n \n       /* If waiting (i.e. Get_Immediate (Char)), set MIN = 1 and wait for\n@@ -826,7 +829,7 @@ __gnat_localtime_tzoff (const time_t *timer ATTRIBUTE_UNUSED,\n \n #elif defined (__APPLE__) || defined (__FreeBSD__) || defined (__linux__) \\\n   || defined (__GLIBC__) || defined (__DragonFly__) || defined (__OpenBSD__) \\\n-  || defined (__DJGPP__)\n+  || defined (__DJGPP__) || defined (__QNX__)\n {\n   localtime_r (timer, &tp);\n   *off = tp.tm_gmtoff;"}]}