{"sha": "f937d5e67e709e77a37d0f156945e50bf3946d59", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjkzN2Q1ZTY3ZTcwOWU3N2EzN2QwZjE1Njk0NWU1MGJmMzk0NmQ1OQ==", "commit": {"author": {"name": "Roger Sayle", "email": "roger@eyesopen.com", "date": "2003-03-09T15:22:56Z"}, "committer": {"name": "Roger Sayle", "email": "sayle@gcc.gnu.org", "date": "2003-03-09T15:22:56Z"}, "message": "builtins.def: Fix typo and improve grammar.\n\n\n\t* builtins.def: Fix typo and improve grammar.\n\t* loop-unroll.c (decide_peel_completely): Tidy log message.\n\nFrom-SVN: r64030", "tree": {"sha": "ed19f4164182f8f50ea25c123f4d863494e205a1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ed19f4164182f8f50ea25c123f4d863494e205a1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f937d5e67e709e77a37d0f156945e50bf3946d59", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f937d5e67e709e77a37d0f156945e50bf3946d59", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f937d5e67e709e77a37d0f156945e50bf3946d59", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f937d5e67e709e77a37d0f156945e50bf3946d59/comments", "author": null, "committer": null, "parents": [{"sha": "ca9e13823c9e8cf547dbcd98416e1b4dfcced5fa", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ca9e13823c9e8cf547dbcd98416e1b4dfcced5fa", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ca9e13823c9e8cf547dbcd98416e1b4dfcced5fa"}], "stats": {"total": 10, "additions": 8, "deletions": 2}, "files": [{"sha": "c2545b7edf46e49411bedc52a0c279d0bb4c54db", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f937d5e67e709e77a37d0f156945e50bf3946d59/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f937d5e67e709e77a37d0f156945e50bf3946d59/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=f937d5e67e709e77a37d0f156945e50bf3946d59", "patch": "@@ -1,3 +1,8 @@\n+2003-03-09  Roger Sayle  <roger@eyesopen.com>\n+\n+\t* builtins.def: Fix typo and improve grammar.\n+\t* loop-unroll.c (decide_peel_completely): Tidy log message.\n+\n 2003-03-09  Kazu Hirata  <kazu@cs.umass.edu>\n \n \t* config/h8300/h8300.md (*tstsi_upper_bit): New."}, {"sha": "f0df8bbc5c2712b559609cc06247b8da6449f44e", "filename": "gcc/builtins.def", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f937d5e67e709e77a37d0f156945e50bf3946d59/gcc%2Fbuiltins.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f937d5e67e709e77a37d0f156945e50bf3946d59/gcc%2Fbuiltins.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fbuiltins.def?ref=f937d5e67e709e77a37d0f156945e50bf3946d59", "patch": "@@ -59,7 +59,8 @@ Software Foundation, 59 Temple Place - Suite 330, Boston, MA\n    compiler.  For instance C90 reserves floorf function, but does not\n    define it's meaning.  When user uses floorf we may assume that the\n    floorf has the meaning we expect, but we can't produce floorf by\n-   simplifing floor((double)float) since runtime don't need to implement it.  */\n+   simplifying floor((double)float) since the runtime need not implement\n+   it.  */\n    \n /* A GCC builtin (like __builtin_saveregs) is provided by the\n    compiler, but does not correspond to a function in the standard"}, {"sha": "2535cf6b24c0ea9363d1bd498b8673e718ab98fc", "filename": "gcc/loop-unroll.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f937d5e67e709e77a37d0f156945e50bf3946d59/gcc%2Floop-unroll.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f937d5e67e709e77a37d0f156945e50bf3946d59/gcc%2Floop-unroll.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Floop-unroll.c?ref=f937d5e67e709e77a37d0f156945e50bf3946d59", "patch": "@@ -377,7 +377,7 @@ decide_peel_completely (loops, loop, flags)\n       \t{\n \t  fprintf (rtl_dump_file, \";; Not peeling loop completely, rolls too much (\");\n \t  fprintf (rtl_dump_file, HOST_WIDEST_INT_PRINT_DEC,(HOST_WIDEST_INT) loop->desc.niter);\n-\t  fprintf (rtl_dump_file, \"iterations > %d [maximum peelings])\\n\", npeel);\n+\t  fprintf (rtl_dump_file, \" iterations > %d [maximum peelings])\\n\", npeel);\n \t}\n       return;\n     }"}]}