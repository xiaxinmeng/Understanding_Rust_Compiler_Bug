{"sha": "e2897e23a7574e634907e16e726add570d9e6d2d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTI4OTdlMjNhNzU3NGU2MzQ5MDdlMTZlNzI2YWRkNTcwZDllNmQyZA==", "commit": {"author": {"name": "Fran\u00e7ois Dumont", "email": "fdumont@gcc.gnu.org", "date": "2015-05-23T11:17:38Z"}, "committer": {"name": "Fran\u00e7ois Dumont", "email": "fdumont@gcc.gnu.org", "date": "2015-05-23T11:17:38Z"}, "message": "2015-05-23  Fran\u00e7ois Dumont  fdumont@gcc.gnu.org>\n\n\tPR libstdc++/64657\n\t* include/debug/functions.h (__check_sorted_aux): Cast expression to\n\tvoid.\n\nFrom-SVN: r223605", "tree": {"sha": "cf8f92b8e8f48a2e3702acf606076d4a293f6f6e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/cf8f92b8e8f48a2e3702acf606076d4a293f6f6e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e2897e23a7574e634907e16e726add570d9e6d2d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e2897e23a7574e634907e16e726add570d9e6d2d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e2897e23a7574e634907e16e726add570d9e6d2d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e2897e23a7574e634907e16e726add570d9e6d2d/comments", "author": null, "committer": null, "parents": [{"sha": "1399066d34a60f2cde21a4f28b7a64a88fd981ff", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1399066d34a60f2cde21a4f28b7a64a88fd981ff", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1399066d34a60f2cde21a4f28b7a64a88fd981ff"}], "stats": {"total": 73, "additions": 50, "deletions": 23}, "files": [{"sha": "412c8a30ff45a1de75e7fc6cd807b9508a0209c2", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 48, "deletions": 21, "changes": 69, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e2897e23a7574e634907e16e726add570d9e6d2d/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e2897e23a7574e634907e16e726add570d9e6d2d/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=e2897e23a7574e634907e16e726add570d9e6d2d", "patch": "@@ -1,3 +1,9 @@\n+2015-05-23  Fran\u00e7ois Dumont  fdumont@gcc.gnu.org>\n+\n+\tPR libstdc++/64657\n+\t* include/debug/functions.h (__check_sorted_aux): Cast expression to\n+\tvoid.\n+\n 2015-05-21  David Edelsohn  <dje.gcc@gmail.com>\n \n \tPR target/66224\n@@ -228,35 +234,56 @@\n \t* testsuite/20_util/auto_ptr/7.cc: Add -std=c++98.\n \t* testsuite/20_util/auto_ptr/3946.cc: Add -std=c++98.\n \t* testsuite/20_util/auto_ptr/assign_neg.cc: Add -std=c++98.\n-\t* testsuite/20_util/auto_ptr/requirements/explicit_instantiation/1.cc: Likewise.\n+\t* testsuite/20_util/auto_ptr/requirements/explicit_instantiation/1.cc:\n+\tLikewise.\n \t* testsuite/20_util/headers/functional/synopsis.cc: Add -Wno-deprecated.\n-\t* testsuite/23_containers/deque/requirements/dr438/assign_neg.cc: Adjust expected errors.\n-\t* testsuite/23_containers/deque/requirements/dr438/constructor_1_neg.cc: Likewise.\n-\t* testsuite/23_containers/deque/requirements/dr438/constructor_2_neg.cc: Likewise.\n-\t* testsuite/23_containers/deque/requirements/dr438/insert_neg.cc: Likewise.\n-\t* testsuite/23_containers/list/requirements/dr438/assign_neg.cc: Likewise.\n-\t* testsuite/23_containers/list/requirements/dr438/constructor_1_neg.cc: Likewise.\n-\t* testsuite/23_containers/list/requirements/dr438/constructor_2_neg.cc: Likewise.\n-\t* testsuite/23_containers/list/requirements/dr438/insert_neg.cc: Likewise.\n-\t* testsuite/23_containers/vector/requirements/dr438/assign_neg.cc: Likewise.\n-\t* testsuite/23_containers/vector/requirements/dr438/constructor_1_neg.cc: Likewise.\n-\t* testsuite/23_containers/vector/requirements/dr438/constructor_2_neg.cc: Likewise.\n-\t* testsuite/23_containers/vector/requirements/dr438/insert_neg.cc:  Likewise.\n+\t* testsuite/23_containers/deque/requirements/dr438/assign_neg.cc:\n+\tAdjust expected errors.\n+\t* testsuite/23_containers/deque/requirements/dr438/constructor_1_neg.cc:\n+\tLikewise.\n+\t* testsuite/23_containers/deque/requirements/dr438/constructor_2_neg.cc:\n+\tLikewise.\n+\t* testsuite/23_containers/deque/requirements/dr438/insert_neg.cc:\n+\tLikewise.\n+\t* testsuite/23_containers/list/requirements/dr438/assign_neg.cc:\n+\tLikewise.\n+\t* testsuite/23_containers/list/requirements/dr438/constructor_1_neg.cc:\n+\tLikewise.\n+\t* testsuite/23_containers/list/requirements/dr438/constructor_2_neg.cc:\n+\tLikewise.\n+\t* testsuite/23_containers/list/requirements/dr438/insert_neg.cc:\n+\tLikewise.\n+\t* testsuite/23_containers/vector/requirements/dr438/assign_neg.cc:\n+\tLikewise.\n+\t* testsuite/23_containers/vector/requirements/dr438\n+\t/constructor_1_neg.cc: Likewise.\n+\t* testsuite/23_containers/vector/requirements/dr438\n+\t/constructor_2_neg.cc: Likewise.\n+\t* testsuite/23_containers/vector/requirements/dr438/insert_neg.cc:\n+\tLikewise.\n \t* testsuite/ext/array_allocator/1.cc: Add -Wno-deprecated.\n \t* testsuite/ext/array_allocator/2.cc: Add -Wno-deprecated.\n \t* testsuite/ext/array_allocator/26875.cc: Add -Wno-deprecated.\n \t* testsuite/ext/array_allocator/3.cc: Add -Wno-deprecated.\n-\t* testsuite/ext/array_allocator/check_allocate_max_size.cc: Add -Wno-deprecated.\n-\t* testsuite/ext/array_allocator/check_deallocate_null.cc: Add -Wno-deprecated.\n+\t* testsuite/ext/array_allocator/check_allocate_max_size.cc:\n+\tAdd -Wno-deprecated.\n+\t* testsuite/ext/array_allocator/check_deallocate_null.cc:\n+\tAdd -Wno-deprecated.\n \t* testsuite/ext/array_allocator/check_delete.cc: Add -Wno-deprecated.\n \t* testsuite/ext/array_allocator/check_new.cc: Add -Wno-deprecated.\n \t* testsuite/ext/profile/mutex_extensions_neg.cc: Prune follow-on error.\n-\t* testsuite/tr1/2_general_utilities/shared_ptr/assign/auto_ptr.cc: Add -std=c++98.\n-\t* testsuite/tr1/2_general_utilities/shared_ptr/assign/auto_ptr_neg.cc: Add -std=c++98.\n-\t* testsuite/tr1/2_general_utilities/shared_ptr/assign/auto_ptr_rvalue_neg.cc: Add -std=c++98.\n-\t* testsuite/tr1/2_general_utilities/shared_ptr/cons/43820_neg.cc: Add -std=c++98 -fno-show-column.\n-\t* testsuite/tr1/2_general_utilities/shared_ptr/cons/auto_ptr.cc: Add -std=c++98.\n-\t* testsuite/tr1/2_general_utilities/shared_ptr/cons/auto_ptr_neg.cc: Add -std=c++98.\n+\t* testsuite/tr1/2_general_utilities/shared_ptr/assign/auto_ptr.cc:\n+\tAdd -std=c++98.\n+\t* testsuite/tr1/2_general_utilities/shared_ptr/assign/auto_ptr_neg.cc:\n+\tAdd -std=c++98.\n+\t* testsuite/tr1/2_general_utilities/shared_ptr/assign\n+\t/auto_ptr_rvalue_neg.cc: Add -std=c++98.\n+\t* testsuite/tr1/2_general_utilities/shared_ptr/cons/43820_neg.cc:\n+\tAdd -std=c++98 -fno-show-column.\n+\t* testsuite/tr1/2_general_utilities/shared_ptr/cons/auto_ptr.cc:\n+\tAdd -std=c++98.\n+\t* testsuite/tr1/2_general_utilities/shared_ptr/cons/auto_ptr_neg.cc:\n+\tAdd -std=c++98.\n \t* testsuite/tr1/6_containers/utility/pair.cc: Add -std=c++98.\n \t* testsuite/tr1/8_c_compatibility/cmath/pow_cmath.cc: Add -std=c++98.\n "}, {"sha": "c67b4eb4758a07ebf9a369412e22bf729c0a3fe8", "filename": "libstdc++-v3/include/debug/functions.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e2897e23a7574e634907e16e726add570d9e6d2d/libstdc%2B%2B-v3%2Finclude%2Fdebug%2Ffunctions.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e2897e23a7574e634907e16e726add570d9e6d2d/libstdc%2B%2B-v3%2Finclude%2Fdebug%2Ffunctions.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fdebug%2Ffunctions.h?ref=e2897e23a7574e634907e16e726add570d9e6d2d", "patch": "@@ -336,7 +336,7 @@ namespace __gnu_debug\n         return true;\n \n       _ForwardIterator __next = __first;\n-      for (++__next; __next != __last; __first = __next, ++__next)\n+      for (++__next; __next != __last; __first = __next, (void)++__next)\n         if (*__next < *__first)\n           return false;\n \n@@ -362,7 +362,7 @@ namespace __gnu_debug\n         return true;\n \n       _ForwardIterator __next = __first;\n-      for (++__next; __next != __last; __first = __next, ++__next)\n+      for (++__next; __next != __last; __first = __next, (void)++__next)\n         if (__pred(*__next, *__first))\n           return false;\n "}]}