{"sha": "515e4d1d5a8ad5aaeefc81e2593db778c92860fe", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTE1ZTRkMWQ1YThhZDVhYWVlZmM4MWUyNTkzZGI3NzhjOTI4NjBmZQ==", "commit": {"author": {"name": "Paolo Carlini", "email": "paolo.carlini@oracle.com", "date": "2013-03-26T16:49:49Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2013-03-26T16:49:49Z"}, "message": "re PR c++/55951 (ICE in check_array_designated_initializer, at cp/decl.c:4785)\n\n/cp\n2013-03-26  Paolo Carlini  <paolo.carlini@oracle.com>\n\n\tPR c++/55951\n\t* decl.c (check_array_designated_initializer): Handle CONST_DECL\n\tas ce->index.\n\n/testsuite\n2013-03-26  Paolo Carlini  <paolo.carlini@oracle.com>\n\n\tPR c++/55951\n\t* g++.dg/ext/desig5.C: New.\n\nFrom-SVN: r197116", "tree": {"sha": "aff0b875826f6a2c39bce2ccd7646d85f92c45ed", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/aff0b875826f6a2c39bce2ccd7646d85f92c45ed"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/515e4d1d5a8ad5aaeefc81e2593db778c92860fe", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/515e4d1d5a8ad5aaeefc81e2593db778c92860fe", "html_url": "https://github.com/Rust-GCC/gccrs/commit/515e4d1d5a8ad5aaeefc81e2593db778c92860fe", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/515e4d1d5a8ad5aaeefc81e2593db778c92860fe/comments", "author": null, "committer": null, "parents": [{"sha": "6f33817e6ae3515ef30a0d0d0e740f56479dd882", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6f33817e6ae3515ef30a0d0d0e740f56479dd882", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6f33817e6ae3515ef30a0d0d0e740f56479dd882"}], "stats": {"total": 45, "additions": 36, "deletions": 9}, "files": [{"sha": "01044e493d7d4e89a226bb70e80c9a4593899134", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/515e4d1d5a8ad5aaeefc81e2593db778c92860fe/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/515e4d1d5a8ad5aaeefc81e2593db778c92860fe/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=515e4d1d5a8ad5aaeefc81e2593db778c92860fe", "patch": "@@ -1,3 +1,9 @@\n+2013-03-26  Paolo Carlini  <paolo.carlini@oracle.com>\n+\n+\tPR c++/55951\n+\t* decl.c (check_array_designated_initializer): Handle CONST_DECL\n+\tas ce->index.\n+\n 2013-03-26  Paolo Carlini  <paolo.carlini@oracle.com>\n \n \t* decl.c (grokfndecl): Handle separately <inline> and <constexpr>"}, {"sha": "ca68bb509bf3ef16a45a49f871820227c1efa031", "filename": "gcc/cp/decl.c", "status": "modified", "additions": 18, "deletions": 9, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/515e4d1d5a8ad5aaeefc81e2593db778c92860fe/gcc%2Fcp%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/515e4d1d5a8ad5aaeefc81e2593db778c92860fe/gcc%2Fcp%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fdecl.c?ref=515e4d1d5a8ad5aaeefc81e2593db778c92860fe", "patch": "@@ -4760,7 +4760,7 @@ grok_reference_init (tree decl, tree type, tree init, int flags)\n    is valid, i.e., does not have a designated initializer.  */\n \n static bool\n-check_array_designated_initializer (const constructor_elt *ce,\n+check_array_designated_initializer (constructor_elt *ce,\n \t\t\t\t    unsigned HOST_WIDE_INT index)\n {\n   /* Designated initializers for array elements are not supported.  */\n@@ -4769,9 +4769,21 @@ check_array_designated_initializer (const constructor_elt *ce,\n       /* The parser only allows identifiers as designated\n \t initializers.  */\n       if (ce->index == error_mark_node)\n-\terror (\"name used in a GNU-style designated \"\n-\t       \"initializer for an array\");\n-      else if (TREE_CODE (ce->index) == INTEGER_CST)\n+\t{\n+\t  error (\"name used in a GNU-style designated \"\n+\t\t \"initializer for an array\");\n+\t  return false;\n+\t}\n+      else if (identifier_p (ce->index))\n+\t{\n+\t  error (\"name %qD used in a GNU-style designated \"\n+\t\t \"initializer for an array\", ce->index);\n+\t  return false;\n+\t}\n+\n+      ce->index = cxx_constant_value (ce->index);\n+\n+      if (TREE_CODE (ce->index) == INTEGER_CST)\n \t{\n \t  /* A C99 designator is OK if it matches the current index.  */\n \t  if (TREE_INT_CST_LOW (ce->index) == index)\n@@ -4780,11 +4792,8 @@ check_array_designated_initializer (const constructor_elt *ce,\n \t    sorry (\"non-trivial designated initializers not supported\");\n \t}\n       else\n-\t{\n-\t  gcc_assert (identifier_p (ce->index));\n-\t  error (\"name %qD used in a GNU-style designated \"\n-\t\t \"initializer for an array\", ce->index);\n-\t}\n+\tgcc_unreachable ();\n+\n       return false;\n     }\n "}, {"sha": "1f53a31a8f2253bf8728c85ce0be855e11dbfd99", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/515e4d1d5a8ad5aaeefc81e2593db778c92860fe/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/515e4d1d5a8ad5aaeefc81e2593db778c92860fe/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=515e4d1d5a8ad5aaeefc81e2593db778c92860fe", "patch": "@@ -1,3 +1,8 @@\n+2013-03-26  Paolo Carlini  <paolo.carlini@oracle.com>\n+\n+\tPR c++/55951\n+\t* g++.dg/ext/desig5.C: New.\n+\n 2013-03-26  Tobias Burnus  <burnus@net-b.de>\n \n \tPR fortran/56649"}, {"sha": "48cce3183b53be7ac458968c6dffdf69e3c5c235", "filename": "gcc/testsuite/g++.dg/ext/desig5.C", "status": "added", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/515e4d1d5a8ad5aaeefc81e2593db778c92860fe/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fdesig5.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/515e4d1d5a8ad5aaeefc81e2593db778c92860fe/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fdesig5.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fdesig5.C?ref=515e4d1d5a8ad5aaeefc81e2593db778c92860fe", "patch": "@@ -0,0 +1,7 @@\n+// PR c++/55951\n+\n+enum { A };\n+\n+static const char *a[] = {\n+  [A] = \"a\"\n+};"}]}