{"sha": "1ca939e5ec6e33f8016a99ffe673e647a06ed6f3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWNhOTM5ZTVlYzZlMzNmODAxNmE5OWZmZTY3M2U2NDdhMDZlZDZmMw==", "commit": {"author": {"name": "Mark Mitchell", "email": "mark@codesourcery.com", "date": "2004-10-11T22:50:00Z"}, "committer": {"name": "Mark Mitchell", "email": "mmitchel@gcc.gnu.org", "date": "2004-10-11T22:50:00Z"}, "message": "re PR c++/17936 (Declaration of specialization rejected)\n\n\tPR c++/17936\n\t* cp-tree.h (CLASSTYPE_TEMPLATE_SPECIALIZATION): Add a comment.\n\t* pt.c (optimize_specialization_lookup_p): Do not optimize lookups\n\tfor members of partial or explicit specializations.\n\n\tPR c++/17936\n\t* g++.dg/template/spec18.C: New test.\n\nFrom-SVN: r88905", "tree": {"sha": "ddee84d85b0c562c93b84e29ba7a777a6f54d757", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ddee84d85b0c562c93b84e29ba7a777a6f54d757"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1ca939e5ec6e33f8016a99ffe673e647a06ed6f3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1ca939e5ec6e33f8016a99ffe673e647a06ed6f3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1ca939e5ec6e33f8016a99ffe673e647a06ed6f3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1ca939e5ec6e33f8016a99ffe673e647a06ed6f3/comments", "author": null, "committer": null, "parents": [{"sha": "f713f2297716abda1bfae1d27c6aedfc7ad37998", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f713f2297716abda1bfae1d27c6aedfc7ad37998", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f713f2297716abda1bfae1d27c6aedfc7ad37998"}], "stats": {"total": 32, "additions": 32, "deletions": 0}, "files": [{"sha": "44c6b70abe6075756e132b22eb354f2dba127417", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ca939e5ec6e33f8016a99ffe673e647a06ed6f3/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ca939e5ec6e33f8016a99ffe673e647a06ed6f3/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=1ca939e5ec6e33f8016a99ffe673e647a06ed6f3", "patch": "@@ -1,5 +1,10 @@\n 2004-10-11  Mark Mitchell  <mark@codesourcery.com>\n \n+\tPR c++/17936\n+\t* cp-tree.h (CLASSTYPE_TEMPLATE_SPECIALIZATION): Add a comment.\n+\t* pt.c (optimize_specialization_lookup_p): Do not optimize lookups\n+\tfor members of partial or explicit specializations.\n+\n \tPR c++/17929\n \t* decl2.c (finish_anon_union): Robustify.\n "}, {"sha": "6f777b195efd2b98ae4894932190c0c1d74c4808", "filename": "gcc/cp/cp-tree.h", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ca939e5ec6e33f8016a99ffe673e647a06ed6f3/gcc%2Fcp%2Fcp-tree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ca939e5ec6e33f8016a99ffe673e647a06ed6f3/gcc%2Fcp%2Fcp-tree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcp-tree.h?ref=1ca939e5ec6e33f8016a99ffe673e647a06ed6f3", "patch": "@@ -2713,6 +2713,9 @@ struct lang_decl GTY(())\n \n #define DECL_TEMPLATE_SPECIALIZATION(NODE) (DECL_USE_TEMPLATE (NODE) == 2)\n #define SET_DECL_TEMPLATE_SPECIALIZATION(NODE) (DECL_USE_TEMPLATE (NODE) = 2)\n+\n+/* Returns true for an explicit or partial specialization of a class\n+   template.  */\n #define CLASSTYPE_TEMPLATE_SPECIALIZATION(NODE) \\\n   (CLASSTYPE_USE_TEMPLATE (NODE) == 2)\n #define SET_CLASSTYPE_TEMPLATE_SPECIALIZATION(NODE) \\"}, {"sha": "36ff89b2679414c21a015d0a77f9d606463ef39c", "filename": "gcc/cp/pt.c", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ca939e5ec6e33f8016a99ffe673e647a06ed6f3/gcc%2Fcp%2Fpt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ca939e5ec6e33f8016a99ffe673e647a06ed6f3/gcc%2Fcp%2Fpt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fpt.c?ref=1ca939e5ec6e33f8016a99ffe673e647a06ed6f3", "patch": "@@ -774,6 +774,12 @@ optimize_specialization_lookup_p (tree tmpl)\n \t  /* DECL_CLASS_SCOPE_P holds of T::f even if T is a template\n \t     parameter.  */\n \t  && CLASS_TYPE_P (DECL_CONTEXT (tmpl))\n+\t  /* The optimized lookup depends on the fact that the\n+\t     template arguments for the member function template apply\n+\t     purely to the containing class, which is not true if the\n+\t     containing class is an explicit or partial\n+\t     specialization.  */\n+\t  && !CLASSTYPE_TEMPLATE_SPECIALIZATION (DECL_CONTEXT (tmpl))\n \t  && !DECL_MEMBER_TEMPLATE_P (tmpl)\n \t  && !DECL_CONV_FN_P (tmpl)\n \t  /* It is possible to have a template that is not a member"}, {"sha": "ac5fa076e425cf0756600c951d18ba0713f686e7", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ca939e5ec6e33f8016a99ffe673e647a06ed6f3/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ca939e5ec6e33f8016a99ffe673e647a06ed6f3/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=1ca939e5ec6e33f8016a99ffe673e647a06ed6f3", "patch": "@@ -1,3 +1,8 @@\n+2004-10-11  Mark Mitchell  <mark@codesourcery.com>\n+\n+\tPR c++/17936\n+\t* g++.dg/template/spec18.C: New test.\n+\n 2004-10-11  Steve Ellcey  <sje@cup.hp.com>\n \n \t* testsuite/gcc.dg/ia64-asm-1.c: Add prototype for abort"}, {"sha": "a22e8543d0e784c7959bc07d3768635990b0b5c1", "filename": "gcc/testsuite/g++.dg/template/spec18.C", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ca939e5ec6e33f8016a99ffe673e647a06ed6f3/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fspec18.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ca939e5ec6e33f8016a99ffe673e647a06ed6f3/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fspec18.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fspec18.C?ref=1ca939e5ec6e33f8016a99ffe673e647a06ed6f3", "patch": "@@ -0,0 +1,13 @@\n+// PR c++/17936\n+\n+template<int, int N> struct A\n+{\n+  void foo();\n+};\n+\n+template<int N> struct A<1, N>\n+{\n+  void foo();\n+};\n+\n+template<> void A<1, 2>::foo();"}]}