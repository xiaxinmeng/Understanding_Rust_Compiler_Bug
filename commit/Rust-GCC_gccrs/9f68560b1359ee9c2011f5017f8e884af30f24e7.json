{"sha": "9f68560b1359ee9c2011f5017f8e884af30f24e7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OWY2ODU2MGIxMzU5ZWU5YzIwMTFmNTAxN2Y4ZTg4NGFmMzBmMjRlNw==", "commit": {"author": {"name": "Richard Henderson", "email": "rth@redhat.com", "date": "2011-07-18T18:45:45Z"}, "committer": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "2011-07-18T18:45:45Z"}, "message": "bb-reorder.c (emit_barrier_after_bb): Split out of ...\n\n\t* bb-reorder.c (emit_barrier_after_bb): Split out of ...\n\t(add_labels_and_missing_jumps): ... here.\n\t(fix_up_fall_thru_edges, fix_crossing_conditional_branches): Use it.\n\nFrom-SVN: r176416", "tree": {"sha": "f8eb7cc2abe6c98730bdf9000e51356f47e8d576", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f8eb7cc2abe6c98730bdf9000e51356f47e8d576"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9f68560b1359ee9c2011f5017f8e884af30f24e7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9f68560b1359ee9c2011f5017f8e884af30f24e7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9f68560b1359ee9c2011f5017f8e884af30f24e7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9f68560b1359ee9c2011f5017f8e884af30f24e7/comments", "author": null, "committer": null, "parents": [{"sha": "031264128aa4d4fb489b687abcd980332da03e90", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/031264128aa4d4fb489b687abcd980332da03e90", "html_url": "https://github.com/Rust-GCC/gccrs/commit/031264128aa4d4fb489b687abcd980332da03e90"}], "stats": {"total": 44, "additions": 22, "deletions": 22}, "files": [{"sha": "4bfd455628a23b485b6da55830fbea999e2485bc", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9f68560b1359ee9c2011f5017f8e884af30f24e7/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9f68560b1359ee9c2011f5017f8e884af30f24e7/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=9f68560b1359ee9c2011f5017f8e884af30f24e7", "patch": "@@ -1,3 +1,9 @@\n+2011-07-18  Richard Henderson  <rth@redhat.com>\n+\n+\t* bb-reorder.c (emit_barrier_after_bb): Split out of ...\n+\t(add_labels_and_missing_jumps): ... here.\n+\t(fix_up_fall_thru_edges, fix_crossing_conditional_branches): Use it.\n+\n 2011-07-18  Uros Bizjak  <ubizjak@gmail.com>\n \n \tPR target/47744"}, {"sha": "2660551fa8b5e53aefd3d2ea2f938deac3bb8ebf", "filename": "gcc/bb-reorder.c", "status": "modified", "additions": 16, "deletions": 22, "changes": 38, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9f68560b1359ee9c2011f5017f8e884af30f24e7/gcc%2Fbb-reorder.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9f68560b1359ee9c2011f5017f8e884af30f24e7/gcc%2Fbb-reorder.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fbb-reorder.c?ref=9f68560b1359ee9c2011f5017f8e884af30f24e7", "patch": "@@ -1249,6 +1249,15 @@ find_rarely_executed_basic_blocks_and_crossing_edges (void)\n   return crossing_edges;\n }\n \n+/* Emit a barrier into the footer of BB.  */\n+\n+static void\n+emit_barrier_after_bb (basic_block bb)\n+{\n+  rtx barrier = emit_barrier_after (BB_END (bb));\n+  bb->il.rtl->footer = unlink_insn_chain (barrier, barrier);\n+}\n+\n /* If any destination of a crossing edge does not have a label, add label;\n    Convert any easy fall-through crossing edges to unconditional jumps.  */\n \n@@ -1262,7 +1271,7 @@ add_labels_and_missing_jumps (VEC(edge, heap) *crossing_edges)\n     {\n       basic_block src = e->src;\n       basic_block dest = e->dest;\n-      rtx label, barrier, new_jump;\n+      rtx label, new_jump;\n \n       if (dest == EXIT_BLOCK_PTR)\n \tcontinue;\n@@ -1288,10 +1297,10 @@ add_labels_and_missing_jumps (VEC(edge, heap) *crossing_edges)\n \n       new_jump = emit_jump_insn_after (gen_jump (label), BB_END (src));\n       BB_END (src) = new_jump;\n-      barrier = emit_barrier_after (new_jump);\n       JUMP_LABEL (new_jump) = label;\n       LABEL_NUSES (label) += 1;\n-      src->il.rtl->footer = unlink_insn_chain (barrier, barrier);\n+\n+      emit_barrier_after_bb (src);\n \n       /* Mark edge as non-fallthru.  */\n       e->flags &= ~EDGE_FALLTHRU;\n@@ -1321,7 +1330,6 @@ fix_up_fall_thru_edges (void)\n   int invert_worked;\n   rtx old_jump;\n   rtx fall_thru_label;\n-  rtx barrier;\n \n   FOR_EACH_BB (cur_bb)\n     {\n@@ -1451,19 +1459,7 @@ fix_up_fall_thru_edges (void)\n                     }\n \n \t\t  /* Add barrier after new jump */\n-\n-\t\t  if (new_bb)\n-\t\t    {\n-\t\t      barrier = emit_barrier_after (BB_END (new_bb));\n-\t\t      new_bb->il.rtl->footer = unlink_insn_chain (barrier,\n-\t\t\t\t\t\t\t       barrier);\n-\t\t    }\n-\t\t  else\n-\t\t    {\n-\t\t      barrier = emit_barrier_after (BB_END (cur_bb));\n-\t\t      cur_bb->il.rtl->footer = unlink_insn_chain (barrier,\n-\t\t\t\t\t\t\t       barrier);\n-\t\t    }\n+\t\t  emit_barrier_after_bb (new_bb ? new_bb : cur_bb);\n \t\t}\n \t    }\n \t}\n@@ -1537,7 +1533,6 @@ fix_crossing_conditional_branches (void)\n   rtx old_label = NULL_RTX;\n   rtx new_label;\n   rtx new_jump;\n-  rtx barrier;\n \n  last_bb = EXIT_BLOCK_PTR->prev_bb;\n \n@@ -1629,11 +1624,10 @@ fix_crossing_conditional_branches (void)\n \t\t      new_jump = emit_jump_insn_after (gen_return (),\n \t\t\t\t\t\t       BB_END (new_bb));\n \t\t    }\n-\n-\t\t  barrier = emit_barrier_after (new_jump);\n \t\t  JUMP_LABEL (new_jump) = old_label;\n-\t\t  new_bb->il.rtl->footer = unlink_insn_chain (barrier,\n-\t\t\t\t\t\t\t   barrier);\n+\t\t  BB_END (new_bb) = new_jump;\n+\n+\t\t  emit_barrier_after_bb (new_bb);\n \n \t\t  /* Make sure new bb is in same partition as source\n \t\t     of conditional branch.  */"}]}