{"sha": "e1fd916302dd72a2a4a054cf9f61db2721045011", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTFmZDkxNjMwMmRkNzJhMmE0YTA1NGNmOWY2MWRiMjcyMTA0NTAxMQ==", "commit": {"author": {"name": "Richard Sandiford", "email": "rsandifo@gcc.gnu.org", "date": "2017-05-04T11:00:48Z"}, "committer": {"name": "Richard Sandiford", "email": "rsandifo@gcc.gnu.org", "date": "2017-05-04T11:00:48Z"}, "message": "Remove bogus top-level ChangeLog commit (sorry!)\n\nFrom-SVN: r247587", "tree": {"sha": "f4e7c3dd6e6d3efb625ad3d6167f7013e0033585", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f4e7c3dd6e6d3efb625ad3d6167f7013e0033585"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e1fd916302dd72a2a4a054cf9f61db2721045011", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e1fd916302dd72a2a4a054cf9f61db2721045011", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e1fd916302dd72a2a4a054cf9f61db2721045011", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e1fd916302dd72a2a4a054cf9f61db2721045011/comments", "author": null, "committer": null, "parents": [{"sha": "c89ffd9997ef30cf68d97e979537dc288a5902b2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c89ffd9997ef30cf68d97e979537dc288a5902b2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c89ffd9997ef30cf68d97e979537dc288a5902b2"}], "stats": {"total": 21, "additions": 9, "deletions": 12}, "files": [{"sha": "6066ba6e82e80e933a0d23cb9a4eff2c82dafdaf", "filename": "ChangeLog", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e1fd916302dd72a2a4a054cf9f61db2721045011/ChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e1fd916302dd72a2a4a054cf9f61db2721045011/ChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/ChangeLog?ref=e1fd916302dd72a2a4a054cf9f61db2721045011", "patch": "@@ -1,7 +1,3 @@\n-2017-05-03  Richard Sandiford  <richard.sandiford@arm.com>\n-\n-Wrap tree-data-ref.h macro arguments\n-\n 2017-04-19  Thomas Koenig  <tkoenig@gcc.gnu.org>\n \tTobias Burnus  <tobias.burnus@physik.fu-berlin.de>\n "}, {"sha": "84c36a87210337f922957cc21de3b6627b2739ed", "filename": "gcc/config/mips/mips.c", "status": "modified", "additions": 4, "deletions": 7, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e1fd916302dd72a2a4a054cf9f61db2721045011/gcc%2Fconfig%2Fmips%2Fmips.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e1fd916302dd72a2a4a054cf9f61db2721045011/gcc%2Fconfig%2Fmips%2Fmips.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fmips.c?ref=e1fd916302dd72a2a4a054cf9f61db2721045011", "patch": "@@ -2590,7 +2590,7 @@ mips_stack_address_p (rtx x, machine_mode mode)\n \n   return (mips_classify_address (&addr, x, mode, false)\n \t  && addr.type == ADDRESS_REG\n-\t  && addr.reg == stack_pointer_rtx);\n+\t  && rtx_equal_p (addr.reg, stack_pointer_rtx));\n }\n \n /* Return true if ADDR matches the pattern for the LWXS load scaled indexed\n@@ -6098,7 +6098,9 @@ mips_function_arg_boundary (machine_mode mode, const_tree type)\n {\n   unsigned int alignment;\n \n-  alignment = type ? TYPE_ALIGN (type) : GET_MODE_ALIGNMENT (mode);\n+  alignment = type && mode == BLKmode\n+\t      ? TYPE_ALIGN (TYPE_MAIN_VARIANT (type))\n+\t      : GET_MODE_ALIGNMENT (mode);\n   if (alignment < PARM_BOUNDARY)\n     alignment = PARM_BOUNDARY;\n   if (alignment > STACK_BOUNDARY)\n@@ -8470,11 +8472,6 @@ and_operands_ok (machine_mode mode, rtx op1, rtx op2)\n \n   if (memory_operand (op1, mode))\n     {\n-      if (TARGET_MIPS16) {\n-\tstruct mips_address_info addr;\n-\tif (!mips_classify_address (&addr, op1, mode, false))\n-\t  return false;\n-      }\n       return and_load_operand (op2, mode);\n     }\n   else"}, {"sha": "8efc48c24876b2323506ad2f61bbafcc49775a6e", "filename": "gcc/config/mips/mips.md", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e1fd916302dd72a2a4a054cf9f61db2721045011/gcc%2Fconfig%2Fmips%2Fmips.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e1fd916302dd72a2a4a054cf9f61db2721045011/gcc%2Fconfig%2Fmips%2Fmips.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fmips.md?ref=e1fd916302dd72a2a4a054cf9f61db2721045011", "patch": "@@ -3306,7 +3306,12 @@\n   switch (which_alternative)\n     {\n     case 0:\n+    fprintf (stderr, \"-----\\n\");\n+    \t fprintf (stderr, \"%d %d %d\\n\", satisfies_constraint_W (operands[1]), memory_operand (operands[1], SImode), stack_operand (operands[1], SImode));\n+      debug_rtx (operands[1]);\n+    /*\n       operands[1] = gen_lowpart (QImode, operands[1]);\n+      */\n       return \"lbu\\t%0,%1\";\n     case 1:\n       operands[1] = gen_lowpart (HImode, operands[1]);"}, {"sha": "54565463ea77a62f1f739642047e7c4f02e83c35", "filename": "gcc/testsuite/gcc.target/powerpc/ppc-pow.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e1fd916302dd72a2a4a054cf9f61db2721045011/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fppc-pow.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e1fd916302dd72a2a4a054cf9f61db2721045011/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fppc-pow.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fppc-pow.c?ref=e1fd916302dd72a2a4a054cf9f61db2721045011", "patch": "@@ -3,7 +3,6 @@\n /* Check for VSX here, even though we don't use VSX to eliminate SPE, PAIRED\n    and other ppc floating point varients.  However, we need to also eliminate\n    Darwin, since it doesn't like -mcpu=power6.  */\n-/* { dg-require-effective-target powerpc_vsx_ok } */\n /* { dg-skip-if \"do not override -mcpu\" { powerpc*-*-* } { \"-mcpu=*\" } { \"-mcpu=power6\" } } */\n /* { dg-options \"-O2 -ffast-math -mcpu=power6 -mno-vsx -mno-altivec\" } */\n /* { dg-final { scan-assembler-times \"fsqrt\" 3 } } */"}]}