{"sha": "059e2a26f5819715bba3ccfe620ccf8677b8dd44", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDU5ZTJhMjZmNTgxOTcxNWJiYTNjY2ZlNjIwY2NmODY3N2I4ZGQ0NA==", "commit": {"author": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2010-12-21T20:32:36Z"}, "committer": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2010-12-21T20:32:36Z"}, "message": "Don't crash when declaring methods on unknown name.\n\nFrom-SVN: r168131", "tree": {"sha": "850a1fe9c02d7e1a9f9a52675986e611fc981368", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/850a1fe9c02d7e1a9f9a52675986e611fc981368"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/059e2a26f5819715bba3ccfe620ccf8677b8dd44", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/059e2a26f5819715bba3ccfe620ccf8677b8dd44", "html_url": "https://github.com/Rust-GCC/gccrs/commit/059e2a26f5819715bba3ccfe620ccf8677b8dd44", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/059e2a26f5819715bba3ccfe620ccf8677b8dd44/comments", "author": null, "committer": null, "parents": [{"sha": "7a8de70f017e5bd24cde94466686eb7a5a437097", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7a8de70f017e5bd24cde94466686eb7a5a437097", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7a8de70f017e5bd24cde94466686eb7a5a437097"}], "stats": {"total": 22, "additions": 20, "deletions": 2}, "files": [{"sha": "707111688b79686b57878d0bcbf8944ba2078ca6", "filename": "gcc/go/gofrontend/gogo.cc", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/059e2a26f5819715bba3ccfe620ccf8677b8dd44/gcc%2Fgo%2Fgofrontend%2Fgogo.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/059e2a26f5819715bba3ccfe620ccf8677b8dd44/gcc%2Fgo%2Fgofrontend%2Fgogo.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgo%2Fgofrontend%2Fgogo.cc?ref=059e2a26f5819715bba3ccfe620ccf8677b8dd44", "patch": "@@ -3710,6 +3710,18 @@ Named_object::set_function_value(Function* function)\n   this->u_.func_value = function;\n }\n \n+// Declare an unknown object as a type declaration.\n+\n+void\n+Named_object::declare_as_type()\n+{\n+  gcc_assert(this->classification_ == NAMED_OBJECT_UNKNOWN);\n+  Unknown_name* unk = this->u_.unknown_value;\n+  this->classification_ = NAMED_OBJECT_TYPE_DECLARATION;\n+  this->u_.type_declaration = new Type_declaration(unk->location());\n+  delete unk;\n+}\n+\n // Return the location of a named object.\n \n source_location"}, {"sha": "96729b2e7e20f9b48d09f565d13390ec2ad4c9ca", "filename": "gcc/go/gofrontend/gogo.h", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/059e2a26f5819715bba3ccfe620ccf8677b8dd44/gcc%2Fgo%2Fgofrontend%2Fgogo.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/059e2a26f5819715bba3ccfe620ccf8677b8dd44/gcc%2Fgo%2Fgofrontend%2Fgogo.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgo%2Fgofrontend%2Fgogo.h?ref=059e2a26f5819715bba3ccfe620ccf8677b8dd44", "patch": "@@ -1815,6 +1815,10 @@ class Named_object\n   void\n   set_function_value(Function*);\n \n+  // Declare an unknown name as a type declaration.\n+  void\n+  declare_as_type();\n+\n   // Export this object.\n   void\n   export_named_object(Export*) const;"}, {"sha": "97bde7bd6a5c71991c21405a12e2d19fd507d78b", "filename": "gcc/go/gofrontend/types.cc", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/059e2a26f5819715bba3ccfe620ccf8677b8dd44/gcc%2Fgo%2Fgofrontend%2Ftypes.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/059e2a26f5819715bba3ccfe620ccf8677b8dd44/gcc%2Fgo%2Fgofrontend%2Ftypes.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgo%2Fgofrontend%2Ftypes.cc?ref=059e2a26f5819715bba3ccfe620ccf8677b8dd44", "patch": "@@ -8013,7 +8013,8 @@ Forward_declaration_type::add_method(const std::string& name,\n \t\t\t\t     Function* function)\n {\n   Named_object* no = this->named_object();\n-  gcc_assert(no->is_type_declaration());\n+  if (no->is_unknown())\n+    no->declare_as_type();\n   return no->type_declaration_value()->add_method(name, function);\n }\n \n@@ -8026,7 +8027,8 @@ Forward_declaration_type::add_method_declaration(const std::string& name,\n \t\t\t\t\t\t source_location location)\n {\n   Named_object* no = this->named_object();\n-  gcc_assert(no->is_type_declaration());\n+  if (no->is_unknown())\n+    no->declare_as_type();\n   Type_declaration* td = no->type_declaration_value();\n   return td->add_method_declaration(name, type, location);\n }"}]}