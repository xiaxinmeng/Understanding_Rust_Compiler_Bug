{"sha": "f76c4d97aee6c1845baf764ae6b97a530f32858d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Zjc2YzRkOTdhZWU2YzE4NDViYWY3NjRhZTZiOTdhNTMwZjMyODU4ZA==", "commit": {"author": {"name": "Janus Weil", "email": "janus@gcc.gnu.org", "date": "2016-11-25T17:22:37Z"}, "committer": {"name": "Janus Weil", "email": "janus@gcc.gnu.org", "date": "2016-11-25T17:22:37Z"}, "message": "re PR fortran/60853 ([OOP] Failure to disambiguate generic with unlimited polymorphic)\n\n2016-11-25  Janus Weil  <janus@gcc.gnu.org>\n\n\tPR fortran/60853\n\t* interface.c (gfc_compare_interfaces): Remove bad special case for\n\tunlimited polymorphism. Refactor for loop.\n\n2016-11-25  Janus Weil  <janus@gcc.gnu.org>\n\n\tPR fortran/60853\n\t* gfortran.dg/typebound_assignment_8.f90: New test case.\n\nFrom-SVN: r242880", "tree": {"sha": "7847ca9dd8a61c308edda40281727f7bb36cc8cd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7847ca9dd8a61c308edda40281727f7bb36cc8cd"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f76c4d97aee6c1845baf764ae6b97a530f32858d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f76c4d97aee6c1845baf764ae6b97a530f32858d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f76c4d97aee6c1845baf764ae6b97a530f32858d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f76c4d97aee6c1845baf764ae6b97a530f32858d/comments", "author": {"login": "janusw", "id": 484108, "node_id": "MDQ6VXNlcjQ4NDEwOA==", "avatar_url": "https://avatars.githubusercontent.com/u/484108?v=4", "gravatar_id": "", "url": "https://api.github.com/users/janusw", "html_url": "https://github.com/janusw", "followers_url": "https://api.github.com/users/janusw/followers", "following_url": "https://api.github.com/users/janusw/following{/other_user}", "gists_url": "https://api.github.com/users/janusw/gists{/gist_id}", "starred_url": "https://api.github.com/users/janusw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/janusw/subscriptions", "organizations_url": "https://api.github.com/users/janusw/orgs", "repos_url": "https://api.github.com/users/janusw/repos", "events_url": "https://api.github.com/users/janusw/events{/privacy}", "received_events_url": "https://api.github.com/users/janusw/received_events", "type": "User", "site_admin": false}, "committer": {"login": "janusw", "id": 484108, "node_id": "MDQ6VXNlcjQ4NDEwOA==", "avatar_url": "https://avatars.githubusercontent.com/u/484108?v=4", "gravatar_id": "", "url": "https://api.github.com/users/janusw", "html_url": "https://github.com/janusw", "followers_url": "https://api.github.com/users/janusw/followers", "following_url": "https://api.github.com/users/janusw/following{/other_user}", "gists_url": "https://api.github.com/users/janusw/gists{/gist_id}", "starred_url": "https://api.github.com/users/janusw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/janusw/subscriptions", "organizations_url": "https://api.github.com/users/janusw/orgs", "repos_url": "https://api.github.com/users/janusw/repos", "events_url": "https://api.github.com/users/janusw/events{/privacy}", "received_events_url": "https://api.github.com/users/janusw/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "27d0862e62b5af5cce218a32cfcf3db27c85d1f2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/27d0862e62b5af5cce218a32cfcf3db27c85d1f2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/27d0862e62b5af5cce218a32cfcf3db27c85d1f2"}], "stats": {"total": 50, "additions": 41, "deletions": 9}, "files": [{"sha": "b208f5c5288d93ce799e5d10862a27a06dd6c95a", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f76c4d97aee6c1845baf764ae6b97a530f32858d/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f76c4d97aee6c1845baf764ae6b97a530f32858d/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=f76c4d97aee6c1845baf764ae6b97a530f32858d", "patch": "@@ -1,3 +1,9 @@\n+2016-11-25  Janus Weil  <janus@gcc.gnu.org>\n+\n+\tPR fortran/60853\n+\t* interface.c (gfc_compare_interfaces): Remove bad special case for\n+\tunlimited polymorphism. Refactor for loop.\n+\n 2016-11-25  Andre Vehreschild  <vehre@gcc.gnu.org>\n \t    Paul Thomas  <pault@gcc.gnu.org>\n "}, {"sha": "f5d3f7762ca098da9a7aea532b2f14377f489788", "filename": "gcc/fortran/interface.c", "status": "modified", "additions": 1, "deletions": 9, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f76c4d97aee6c1845baf764ae6b97a530f32858d/gcc%2Ffortran%2Finterface.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f76c4d97aee6c1845baf764ae6b97a530f32858d/gcc%2Ffortran%2Finterface.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Finterface.c?ref=f76c4d97aee6c1845baf764ae6b97a530f32858d", "patch": "@@ -1728,11 +1728,9 @@ gfc_compare_interfaces (gfc_symbol *s1, gfc_symbol *s2, const char *name2,\n        This is also done when comparing interfaces for dummy procedures and in\n        procedure pointer assignments.  */\n \n-    for (;;)\n+    for (; f1 || f2; f1 = f1->next, f2 = f2->next)\n       {\n \t/* Check existence.  */\n-\tif (f1 == NULL && f2 == NULL)\n-\t  break;\n \tif (f1 == NULL || f2 == NULL)\n \t  {\n \t    if (errmsg != NULL)\n@@ -1741,9 +1739,6 @@ gfc_compare_interfaces (gfc_symbol *s1, gfc_symbol *s2, const char *name2,\n \t    return 0;\n \t  }\n \n-\tif (UNLIMITED_POLY (f1->sym))\n-\t  goto next;\n-\n \tif (strict_flag)\n \t  {\n \t    /* Check all characteristics.  */\n@@ -1772,9 +1767,6 @@ gfc_compare_interfaces (gfc_symbol *s1, gfc_symbol *s2, const char *name2,\n \t\treturn 0;\n \t      }\n \t  }\n-next:\n-\tf1 = f1->next;\n-\tf2 = f2->next;\n       }\n \n   return 1;"}, {"sha": "e741b745d19f5d6681facb70b16a85582b060176", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f76c4d97aee6c1845baf764ae6b97a530f32858d/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f76c4d97aee6c1845baf764ae6b97a530f32858d/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=f76c4d97aee6c1845baf764ae6b97a530f32858d", "patch": "@@ -1,3 +1,8 @@\n+2016-11-25  Janus Weil  <janus@gcc.gnu.org>\n+\n+\tPR fortran/60853\n+\t* gfortran.dg/typebound_assignment_8.f90: New test case.\n+\n 2016-11-25  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR rtl-optimization/78527"}, {"sha": "1572777d86e27c96a053198425ccc5be7ea508ae", "filename": "gcc/testsuite/gfortran.dg/typebound_assignment_8.f90", "status": "added", "additions": 29, "deletions": 0, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f76c4d97aee6c1845baf764ae6b97a530f32858d/gcc%2Ftestsuite%2Fgfortran.dg%2Ftypebound_assignment_8.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f76c4d97aee6c1845baf764ae6b97a530f32858d/gcc%2Ftestsuite%2Fgfortran.dg%2Ftypebound_assignment_8.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Ftypebound_assignment_8.f90?ref=f76c4d97aee6c1845baf764ae6b97a530f32858d", "patch": "@@ -0,0 +1,29 @@\n+! { dg-do compile }\n+!\n+! PR 60853: [OOP] Failure to disambiguate generic with unlimited polymorphic\n+!\n+! Contributed by tlcclt <Thomas.L.Clune@nasa.gov>\n+\n+module foo_mod\n+   implicit none\n+\n+   type Vector\n+   contains\n+      procedure :: copyFromScalar\n+      procedure :: copyFromArray\n+      generic :: assignment(=) => copyFromScalar, copyFromArray\n+   end type\n+\n+contains\n+\n+   subroutine copyFromScalar(this, scalar)\n+      class (Vector), intent(inout) :: this\n+      type  (Vector), intent(in) :: scalar\n+   end subroutine\n+\n+   subroutine copyFromArray(this, array)\n+      class (Vector), intent(inout) :: this\n+      class (*), intent(in) :: array(:)\n+   end subroutine\n+\n+end module"}]}