{"sha": "1abb44f863d32ef738d28144d2c984603e27721a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWFiYjQ0Zjg2M2QzMmVmNzM4ZDI4MTQ0ZDJjOTg0NjAzZTI3NzIxYQ==", "commit": {"author": {"name": "David Malcolm", "email": "dmalcolm@redhat.com", "date": "2019-01-15T23:29:15Z"}, "committer": {"name": "David Malcolm", "email": "dmalcolm@gcc.gnu.org", "date": "2019-01-15T23:29:15Z"}, "message": "Fix ICE on class-template argument deduction (PR c++/88795)\n\nPR c++/88795 reports an ICE building a function_type for a deduction guide\nwhen the substitution into the function signature fails, due to an\nerror_mark_node being returned from tsubst_arg_types but not being checked\nfor.  This error_mark_node gets used as the TYPE_ARG_TYPES, leading to\nICEs in various places that assume this is a TREE_LIST.\n\nThis patch checks the result of tsubst_arg_types and propagates the failure\nif it returns error_mark_node.  It also adds an assertion to\nbuild_function_type, to fail faster if passed in error_mark_node.\n\ngcc/cp/ChangeLog:\n\tPR c++/88795\n\t* pt.c (build_deduction_guide): Bail out if tsubst_arg_types\n\tfails.\n\ngcc/testsuite/ChangeLog:\n\tPR c++/88795\n\t* g++.dg/template/pr88795.C: New test.\n\ngcc/ChangeLog:\n\tPR c++/88795\n\t* tree.c (build_function_type): Assert that arg_types is not\n\terror_mark_node.\n\nFrom-SVN: r267957", "tree": {"sha": "763017fbe03c5c3da080d2a793ac9c587929f4f1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/763017fbe03c5c3da080d2a793ac9c587929f4f1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1abb44f863d32ef738d28144d2c984603e27721a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1abb44f863d32ef738d28144d2c984603e27721a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1abb44f863d32ef738d28144d2c984603e27721a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1abb44f863d32ef738d28144d2c984603e27721a/comments", "author": {"login": "davidmalcolm", "id": 1553248, "node_id": "MDQ6VXNlcjE1NTMyNDg=", "avatar_url": "https://avatars.githubusercontent.com/u/1553248?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidmalcolm", "html_url": "https://github.com/davidmalcolm", "followers_url": "https://api.github.com/users/davidmalcolm/followers", "following_url": "https://api.github.com/users/davidmalcolm/following{/other_user}", "gists_url": "https://api.github.com/users/davidmalcolm/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidmalcolm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidmalcolm/subscriptions", "organizations_url": "https://api.github.com/users/davidmalcolm/orgs", "repos_url": "https://api.github.com/users/davidmalcolm/repos", "events_url": "https://api.github.com/users/davidmalcolm/events{/privacy}", "received_events_url": "https://api.github.com/users/davidmalcolm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "b7ec44e82bb50bd3adc294aa7e87252c79ea7294", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b7ec44e82bb50bd3adc294aa7e87252c79ea7294", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b7ec44e82bb50bd3adc294aa7e87252c79ea7294"}], "stats": {"total": 44, "additions": 44, "deletions": 0}, "files": [{"sha": "e1ae217c03c2bc7e817e351fcd9f9ee3b4bb9b2e", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1abb44f863d32ef738d28144d2c984603e27721a/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1abb44f863d32ef738d28144d2c984603e27721a/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=1abb44f863d32ef738d28144d2c984603e27721a", "patch": "@@ -1,3 +1,9 @@\n+2019-01-15  David Malcolm  <dmalcolm@redhat.com>\n+\n+\tPR c++/88795\n+\t* tree.c (build_function_type): Assert that arg_types is not\n+\terror_mark_node.\n+\n 2019-01-15  Richard Sandiford  <richard.sandiford@arm.com>\n \n \tPR inline-asm/52813"}, {"sha": "7cf0ffba4928f88d94eeb9b5c9a8d503935638eb", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1abb44f863d32ef738d28144d2c984603e27721a/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1abb44f863d32ef738d28144d2c984603e27721a/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=1abb44f863d32ef738d28144d2c984603e27721a", "patch": "@@ -1,3 +1,9 @@\n+2019-01-15  David Malcolm  <dmalcolm@redhat.com>\n+\n+\tPR c++/88795\n+\t* pt.c (build_deduction_guide): Bail out if tsubst_arg_types\n+\tfails.\n+\n 2019-01-15  Paolo Carlini  <paolo.carlini@oracle.com>\n \n \t* decl.c (start_decl): Improve error location."}, {"sha": "c6fc1cfeffb2d77f864c29f51c30c78eff7f9637", "filename": "gcc/cp/pt.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1abb44f863d32ef738d28144d2c984603e27721a/gcc%2Fcp%2Fpt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1abb44f863d32ef738d28144d2c984603e27721a/gcc%2Fcp%2Fpt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fpt.c?ref=1abb44f863d32ef738d28144d2c984603e27721a", "patch": "@@ -26932,6 +26932,8 @@ build_deduction_guide (tree ctor, tree outer_args, tsubst_flags_t complain)\n \t  targs = template_parms_to_args (tparms);\n \t  fparms = tsubst_arg_types (fparms, tsubst_args, NULL_TREE,\n \t\t\t\t     complain, ctor);\n+\t  if (fparms == error_mark_node)\n+\t    ok = false;\n \t  fargs = tsubst (fargs, tsubst_args, complain, ctor);\n \t  if (ci)\n \t    ci = tsubst_constraint_info (ci, tsubst_args, complain, ctor);"}, {"sha": "d226aa54af6fafc80a1fb7b2312ce40af152073c", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1abb44f863d32ef738d28144d2c984603e27721a/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1abb44f863d32ef738d28144d2c984603e27721a/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=1abb44f863d32ef738d28144d2c984603e27721a", "patch": "@@ -1,3 +1,8 @@\n+2019-01-15  David Malcolm  <dmalcolm@redhat.com>\n+\n+\tPR c++/88795\n+\t* g++.dg/template/pr88795.C: New test.\n+\n 2019-01-15  Thomas Koenig  <tkoenig@gcc.gnu.org>\n \n \tPR fortran/43136"}, {"sha": "918aa6d0db80521a1547b7b08e7e5b63f1ee8cbb", "filename": "gcc/testsuite/g++.dg/template/pr88795.C", "status": "added", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1abb44f863d32ef738d28144d2c984603e27721a/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fpr88795.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1abb44f863d32ef738d28144d2c984603e27721a/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fpr88795.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fpr88795.C?ref=1abb44f863d32ef738d28144d2c984603e27721a", "patch": "@@ -0,0 +1,23 @@\n+// { dg-do compile { target c++17 } }\n+\n+template<class, int>\n+struct Array {};\n+\n+template<class T, int size_>\n+struct Foo {\n+  static constexpr int size() {\n+      return size_;\n+  }\n+\n+  template<class U>\n+  Foo(U, Array<T, size()>) {}\n+};\n+\n+template<class T, int size, class U>\n+Foo(U, Array<T, size>) -> Foo<T, size>;\n+\n+int main() {\n+  Array<int, 2> arr{};\n+\n+  Foo foo{2.0, arr};\n+}"}, {"sha": "9e55499455639c0a77344ba13b6891421c23f753", "filename": "gcc/tree.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1abb44f863d32ef738d28144d2c984603e27721a/gcc%2Ftree.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1abb44f863d32ef738d28144d2c984603e27721a/gcc%2Ftree.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree.c?ref=1abb44f863d32ef738d28144d2c984603e27721a", "patch": "@@ -8455,6 +8455,8 @@ build_function_type (tree value_type, tree arg_types)\n   bool any_structural_p, any_noncanonical_p;\n   tree canon_argtypes;\n \n+  gcc_assert (arg_types != error_mark_node);\n+\n   if (TREE_CODE (value_type) == FUNCTION_TYPE)\n     {\n       error (\"function return type cannot be function\");"}]}