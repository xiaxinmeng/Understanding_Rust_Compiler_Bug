{"sha": "18a23298d3a61bb387c5c67a3a867e11118408af", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MThhMjMyOThkM2E2MWJiMzg3YzVjNjdhM2E4NjdlMTExMTg0MDhhZg==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2019-01-22T22:28:42Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2019-01-22T22:28:42Z"}, "message": "re PR middle-end/88968 (Stack overflow in gimplify_expr)\n\n\tPR middle-end/88968\n\t* gimplify.c (gimplify_omp_atomic): Handle bitfield atomics with\n\tnon-integral DECL_BIT_FIELD_REPRESENTATIVEs.\n\n\t* c-omp.c (c_finish_omp_atomic): For bitfield atomics, update type\n\tvariable after using BIT_FIELD_REF.\n\n\t* c-c++-common/gomp/atomic-23.c: New test.\n\nFrom-SVN: r268165", "tree": {"sha": "2319f8c1df10e406f63652ca8f3d024b4c23e7ce", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2319f8c1df10e406f63652ca8f3d024b4c23e7ce"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/18a23298d3a61bb387c5c67a3a867e11118408af", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/18a23298d3a61bb387c5c67a3a867e11118408af", "html_url": "https://github.com/Rust-GCC/gccrs/commit/18a23298d3a61bb387c5c67a3a867e11118408af", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/18a23298d3a61bb387c5c67a3a867e11118408af/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "fbf3df55a16c9ad129aa47a5a2d2d2aa0c7746df", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fbf3df55a16c9ad129aa47a5a2d2d2aa0c7746df", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fbf3df55a16c9ad129aa47a5a2d2d2aa0c7746df"}], "stats": {"total": 102, "additions": 97, "deletions": 5}, "files": [{"sha": "86ebc0f44dde5ec3dc2f9f1be25ff266bfa6a59c", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/18a23298d3a61bb387c5c67a3a867e11118408af/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/18a23298d3a61bb387c5c67a3a867e11118408af/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=18a23298d3a61bb387c5c67a3a867e11118408af", "patch": "@@ -1,5 +1,9 @@\n 2019-01-22  Jakub Jelinek  <jakub@redhat.com>\n \n+\tPR middle-end/88968\n+\t* gimplify.c (gimplify_omp_atomic): Handle bitfield atomics with\n+\tnon-integral DECL_BIT_FIELD_REPRESENTATIVEs.\n+\n \tPR target/87064\n \t* config/rs6000/vsx.md (*vsx_reduc_<VEC_reduc_name>_v2df_scalar):\n \tDisable for little endian."}, {"sha": "86efe275366673b2db56ca365e678ea0933cb396", "filename": "gcc/c-family/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/18a23298d3a61bb387c5c67a3a867e11118408af/gcc%2Fc-family%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/18a23298d3a61bb387c5c67a3a867e11118408af/gcc%2Fc-family%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2FChangeLog?ref=18a23298d3a61bb387c5c67a3a867e11118408af", "patch": "@@ -1,3 +1,9 @@\n+2019-01-22  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR middle-end/88968\n+\t* c-omp.c (c_finish_omp_atomic): For bitfield atomics, update type\n+\tvariable after using BIT_FIELD_REF.\n+\n 2019-01-18  H.J. Lu  <hongjiu.lu@intel.com>\n \n \tPR c/51628"}, {"sha": "16e71981887193bb5b19df6387cc776cbe4571da", "filename": "gcc/c-family/c-omp.c", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/18a23298d3a61bb387c5c67a3a867e11118408af/gcc%2Fc-family%2Fc-omp.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/18a23298d3a61bb387c5c67a3a867e11118408af/gcc%2Fc-family%2Fc-omp.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2Fc-omp.c?ref=18a23298d3a61bb387c5c67a3a867e11118408af", "patch": "@@ -378,8 +378,11 @@ c_finish_omp_atomic (location_t loc, enum tree_code code,\n \t    }\n \t}\n       if (blhs)\n-\tx = build3_loc (loc, BIT_FIELD_REF, TREE_TYPE (blhs), x,\n-\t\t\tbitsize_int (bitsize), bitsize_int (bitpos));\n+\t{\n+\t  x = build3_loc (loc, BIT_FIELD_REF, TREE_TYPE (blhs), x,\n+\t\t\t  bitsize_int (bitsize), bitsize_int (bitpos));\n+\t  type = TREE_TYPE (blhs);\n+\t}\n       x = build_modify_expr (loc, v, NULL_TREE, NOP_EXPR,\n \t\t\t     loc, x, NULL_TREE);\n       if (rhs1 && rhs1 != orig_lhs)"}, {"sha": "59166783eddffeef9c8fb66737c4e748d5571f67", "filename": "gcc/gimplify.c", "status": "modified", "additions": 30, "deletions": 3, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/18a23298d3a61bb387c5c67a3a867e11118408af/gcc%2Fgimplify.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/18a23298d3a61bb387c5c67a3a867e11118408af/gcc%2Fgimplify.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgimplify.c?ref=18a23298d3a61bb387c5c67a3a867e11118408af", "patch": "@@ -11969,9 +11969,36 @@ gimplify_omp_atomic (tree *expr_p, gimple_seq *pre_p)\n   loadstmt = gimple_build_omp_atomic_load (tmp_load, addr,\n \t\t\t\t\t   OMP_ATOMIC_MEMORY_ORDER (*expr_p));\n   gimplify_seq_add_stmt (pre_p, loadstmt);\n-  if (rhs && gimplify_expr (&rhs, pre_p, NULL, is_gimple_val, fb_rvalue)\n-      != GS_ALL_DONE)\n-    return GS_ERROR;\n+  if (rhs)\n+    {\n+      /* BIT_INSERT_EXPR is not valid for non-integral bitfield\n+\t representatives.  Use BIT_FIELD_REF on the lhs instead.  */\n+      if (TREE_CODE (rhs) == BIT_INSERT_EXPR\n+\t  && !INTEGRAL_TYPE_P (TREE_TYPE (tmp_load)))\n+\t{\n+\t  tree bitpos = TREE_OPERAND (rhs, 2);\n+\t  tree op1 = TREE_OPERAND (rhs, 1);\n+\t  tree bitsize;\n+\t  tree tmp_store = tmp_load;\n+\t  if (TREE_CODE (*expr_p) == OMP_ATOMIC_CAPTURE_OLD)\n+\t    tmp_store = get_initialized_tmp_var (tmp_load, pre_p, NULL);\n+\t  if (INTEGRAL_TYPE_P (TREE_TYPE (op1)))\n+\t    bitsize = bitsize_int (TYPE_PRECISION (TREE_TYPE (op1)));\n+\t  else\n+\t    bitsize = TYPE_SIZE (TREE_TYPE (op1));\n+\t  gcc_assert (TREE_OPERAND (rhs, 0) == tmp_load);\n+\t  tree t = build2_loc (EXPR_LOCATION (rhs),\n+\t\t\t       MODIFY_EXPR, void_type_node,\n+\t\t\t       build3_loc (EXPR_LOCATION (rhs), BIT_FIELD_REF,\n+\t\t\t\t\t   TREE_TYPE (op1), tmp_store, bitsize,\n+\t\t\t\t\t   bitpos), op1);\n+\t  gimplify_and_add (t, pre_p);\n+\t  rhs = tmp_store;\n+\t}\n+      if (gimplify_expr (&rhs, pre_p, NULL, is_gimple_val, fb_rvalue)\n+\t  != GS_ALL_DONE)\n+\treturn GS_ERROR;\n+    }\n \n   if (TREE_CODE (*expr_p) == OMP_ATOMIC_READ)\n     rhs = tmp_load;"}, {"sha": "997b48ef0147d342e738833e8a497becc395f3c3", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/18a23298d3a61bb387c5c67a3a867e11118408af/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/18a23298d3a61bb387c5c67a3a867e11118408af/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=18a23298d3a61bb387c5c67a3a867e11118408af", "patch": "@@ -1,3 +1,8 @@\n+2019-01-22  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR middle-end/88968\n+\t* c-c++-common/gomp/atomic-23.c: New test.\n+\n 2019-01-22  Harald Anlauf  <anlauf@gmx.de>\n \n \tPR fortran/88579"}, {"sha": "969cbf9c084f0dcc626a2d5839c02d3734005e73", "filename": "gcc/testsuite/c-c++-common/gomp/atomic-23.c", "status": "added", "additions": 47, "deletions": 0, "changes": 47, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/18a23298d3a61bb387c5c67a3a867e11118408af/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fgomp%2Fatomic-23.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/18a23298d3a61bb387c5c67a3a867e11118408af/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fgomp%2Fatomic-23.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fgomp%2Fatomic-23.c?ref=18a23298d3a61bb387c5c67a3a867e11118408af", "patch": "@@ -0,0 +1,47 @@\n+/* PR middle-end/88968 */\n+/* { dg-do compile } */\n+\n+struct __attribute__((packed)) S {\n+  unsigned int a : 16;\n+  unsigned int b : 1;\n+} s;\n+\n+void\n+f1 (void)\n+{\n+#pragma omp atomic\n+  ++s.a;\n+}\n+\n+int\n+f2 (void)\n+{\n+  int r;\n+#pragma omp atomic capture\n+  {\n+    r = s.a;\n+    s.a = 0;\n+  }\n+  return r;\n+}\n+\n+int\n+f3 (void)\n+{\n+  int r;\n+#pragma omp atomic capture\n+  {\n+    r = s.a;\n+    s.a = s.a + 32;\n+  }\n+  return r;\n+}\n+\n+int\n+f4 (void)\n+{\n+  int r;\n+#pragma omp atomic capture\n+  r = s.a = s.a + 32;\n+  return r;\n+}"}]}