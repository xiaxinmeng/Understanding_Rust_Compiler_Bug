{"sha": "676d89dd0f84823db929854671bf45573aa30b01", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Njc2ZDg5ZGQwZjg0ODIzZGI5Mjk4NTQ2NzFiZjQ1NTczYWEzMGIwMQ==", "commit": {"author": {"name": "Yufeng Zhang", "email": "yufeng.zhang@arm.com", "date": "2014-06-20T16:52:29Z"}, "committer": {"name": "Yufeng Zhang", "email": "yufeng@gcc.gnu.org", "date": "2014-06-20T16:52:29Z"}, "message": "Make the tests big-endian friendly.\n\ngcc/testsuite/\n\n\tMake the tests big-endian friendly.\n\n\t* gcc.target/aarch64/aapcs64/test_25.c: Update.\n\t* gcc.target/aarch64/aapcs64/va_arg-1.c: Ditto.\n\t* gcc.target/aarch64/aapcs64/va_arg-12.c: Ditto.\n\t* gcc.target/aarch64/aapcs64/va_arg-2.c: Ditto.\n\t* gcc.target/aarch64/aapcs64/va_arg-3.c: Ditto.\n\t* gcc.target/aarch64/aapcs64/va_arg-4.c: Ditto.\n\t* gcc.target/aarch64/aapcs64/va_arg-5.c: Ditto.\n\t* gcc.target/aarch64/aapcs64/va_arg-6.c: Ditto.\n\t* gcc.target/aarch64/aapcs64/va_arg-7.c: Ditto.\n\nFrom-SVN: r211851", "tree": {"sha": "a27bf2429d3c4519efba62f6a03221092fd81a54", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a27bf2429d3c4519efba62f6a03221092fd81a54"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/676d89dd0f84823db929854671bf45573aa30b01", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/676d89dd0f84823db929854671bf45573aa30b01", "html_url": "https://github.com/Rust-GCC/gccrs/commit/676d89dd0f84823db929854671bf45573aa30b01", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/676d89dd0f84823db929854671bf45573aa30b01/comments", "author": null, "committer": null, "parents": [{"sha": "0cbf438b115b95453a1b0414c6cf628bf1ad1ead", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0cbf438b115b95453a1b0414c6cf628bf1ad1ead", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0cbf438b115b95453a1b0414c6cf628bf1ad1ead"}], "stats": {"total": 101, "additions": 74, "deletions": 27}, "files": [{"sha": "98d63798c6149224ef4728ebf9283cf14a9dab09", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/676d89dd0f84823db929854671bf45573aa30b01/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/676d89dd0f84823db929854671bf45573aa30b01/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=676d89dd0f84823db929854671bf45573aa30b01", "patch": "@@ -1,3 +1,17 @@\n+2014-06-20  Yufeng Zhang  <yufeng.zhang@arm.com>\n+\n+\tMake the tests big-endian friendly.\n+\n+\t* gcc.target/aarch64/aapcs64/test_25.c: Update.\n+\t* gcc.target/aarch64/aapcs64/va_arg-1.c: Ditto.\n+\t* gcc.target/aarch64/aapcs64/va_arg-12.c: Ditto.\n+\t* gcc.target/aarch64/aapcs64/va_arg-2.c: Ditto.\n+\t* gcc.target/aarch64/aapcs64/va_arg-3.c: Ditto.\n+\t* gcc.target/aarch64/aapcs64/va_arg-4.c: Ditto.\n+\t* gcc.target/aarch64/aapcs64/va_arg-5.c: Ditto.\n+\t* gcc.target/aarch64/aapcs64/va_arg-6.c: Ditto.\n+\t* gcc.target/aarch64/aapcs64/va_arg-7.c: Ditto.\n+\n 2014-06-20  Yury Gribov  <y.gribov@samsung.com>\n \t    Max Ostapenko  <m.ostapenko@partner.samsung.com>\n "}, {"sha": "2febb79914eeabf61bfb34b316fbd672ca234921", "filename": "gcc/testsuite/gcc.target/aarch64/aapcs64/test_25.c", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/676d89dd0f84823db929854671bf45573aa30b01/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Faapcs64%2Ftest_25.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/676d89dd0f84823db929854671bf45573aa30b01/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Faapcs64%2Ftest_25.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Faapcs64%2Ftest_25.c?ref=676d89dd0f84823db929854671bf45573aa30b01", "patch": "@@ -42,20 +42,20 @@ void init_data ()\n   s2.df[0] = 123.456;\n   s2.df[1] = 234.567;\n   s2.df[2] = 345.678;\n-  s3.v[0] = (vf2_t){ 19.f, 20.f, 21.f, 22.f };\n-  s3.v[1] = (vf2_t){ 23.f, 24.f, 25.f, 26.f };\n-  s4.v[0] = (vf2_t){ 27.f, 28.f, 29.f, 30.f };\n-  s4.v[1] = (vf2_t){ 31.f, 32.f, 33.f, 34.f };\n-  s4.v[2] = (vf2_t){ 35.f, 36.f, 37.f, 38.f };\n+  s3.v[0] = (vf2_t){ 19.f, 20.f };\n+  s3.v[1] = (vf2_t){ 23.f, 24.f };\n+  s4.v[0] = (vf2_t){ 27.f, 28.f };\n+  s4.v[1] = (vf2_t){ 31.f, 32.f };\n+  s4.v[2] = (vf2_t){ 35.f, 36.f };\n }\n \n #include \"abitest.h\"\n #else\n-ARG_NONFLAT (struct x0, s0, Q0, f32in64)\n+ARG (struct x0, s0, D0)\n ARG (struct x2, s2, D1)\n ARG (struct x1, s1, Q4)\n ARG (struct x3, s3, D5)\n ARG (struct x4, s4, STACK)\n-ARG_NONFLAT (int, 0xdeadbeef, X0, i32in64)\n+ARG (int, 0xdeadbeef, W0)\n LAST_ARG (double, 456.789, STACK+24)\n #endif"}, {"sha": "4fb9a033ad497f5a11b10ff56f19378eb2405884", "filename": "gcc/testsuite/gcc.target/aarch64/aapcs64/va_arg-1.c", "status": "modified", "additions": 11, "deletions": 7, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/676d89dd0f84823db929854671bf45573aa30b01/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Faapcs64%2Fva_arg-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/676d89dd0f84823db929854671bf45573aa30b01/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Faapcs64%2Fva_arg-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Faapcs64%2Fva_arg-1.c?ref=676d89dd0f84823db929854671bf45573aa30b01", "patch": "@@ -30,14 +30,14 @@ void init_data ()\n \n #include \"abitest.h\"\n #else\n-  ARG          (         int      , 0xff  ,                            X0, LAST_NAMED_ARG_ID)\n+  ARG          (         int      , 0xff  ,                            W0, LAST_NAMED_ARG_ID)\n   DOTS\n-  ANON_PROMOTED(unsigned char     , 0xfe  , unsigned int, 0xfe       , X1,       1)\n-  ANON_PROMOTED(  signed char     , sc    ,   signed int, sc_promoted, X2,       2)\n-  ANON_PROMOTED(unsigned short    , 0xdcba, unsigned int, 0xdcba     , X3,       3)\n-  ANON_PROMOTED(  signed short    , ss    ,   signed int, ss_promoted, X4,       4)\n-  ANON         (unsigned int      , 0xdeadbeef,                        X5,       5)\n-  ANON         (  signed int      , 0xcafebabe,                        X6,       6)\n+  ANON_PROMOTED(unsigned char     , 0xfe  , unsigned int, 0xfe       , W1,       1)\n+  ANON_PROMOTED(  signed char     , sc    ,   signed int, sc_promoted, W2,       2)\n+  ANON_PROMOTED(unsigned short    , 0xdcba, unsigned int, 0xdcba     , W3,       3)\n+  ANON_PROMOTED(  signed short    , ss    ,   signed int, ss_promoted, W4,       4)\n+  ANON         (unsigned int      , 0xdeadbeef,                        W5,       5)\n+  ANON         (  signed int      , 0xcafebabe,                        W6,       6)\n   ANON         (unsigned long long, 0xba98765432101234ULL,             X7,       7)\n   ANON         (  signed long long, 0xa987654321012345LL ,             STACK,    8)\n   ANON         (          __int128, qword.i              ,             STACK+16, 9)\n@@ -46,5 +46,9 @@ void init_data ()\n   ANON         (    long double   , 98765432123456789.987654321L,      Q2,      12)\n   ANON         (             vf2_t, vf2   ,                            D3,      13)\n   ANON         (             vi4_t, vi4   ,                            Q4,      14)\n+#ifndef __AAPCS64_BIG_ENDIAN__\n   LAST_ANON    (         int      , 0xeeee,                            STACK+32,15)\n+#else\n+  LAST_ANON    (         int      , 0xeeee,                            STACK+36,15)\n+#endif\n #endif"}, {"sha": "3eddaa2c1d5a97a6b6721befb22e549726fe433e", "filename": "gcc/testsuite/gcc.target/aarch64/aapcs64/va_arg-12.c", "status": "modified", "additions": 10, "deletions": 6, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/676d89dd0f84823db929854671bf45573aa30b01/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Faapcs64%2Fva_arg-12.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/676d89dd0f84823db929854671bf45573aa30b01/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Faapcs64%2Fva_arg-12.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Faapcs64%2Fva_arg-12.c?ref=676d89dd0f84823db929854671bf45573aa30b01", "patch": "@@ -45,16 +45,20 @@ void init_data ()\n #include \"abitest.h\"\n #else\n   PTR(struct z, a, X0, 0)\n-  ARG(int, 0xdeadbeef, X1, 1)\n-  ARG(int, 0xcafebabe, X2, 2)\n-  ARG(int, 0xdeadbabe, X3, 3)\n-  ARG(int, 0xcafebeef, X4, 4)\n-  ARG(int, 0xbeefdead, X5, 5)\n-  ARG(int, 0xbabecafe, X6, LAST_NAMED_ARG_ID)\n+  ARG(int, 0xdeadbeef, W1, 1)\n+  ARG(int, 0xcafebabe, W2, 2)\n+  ARG(int, 0xdeadbabe, W3, 3)\n+  ARG(int, 0xcafebeef, W4, 4)\n+  ARG(int, 0xbeefdead, W5, 5)\n+  ARG(int, 0xbabecafe, W6, LAST_NAMED_ARG_ID)\n   DOTS\n   PTR_ANON(struct z, b, X7, 7)\n   PTR_ANON(struct z, c, STACK, 8)\n+#ifndef __AAPCS64_BIG_ENDIAN__\n   ANON(int, 0xbabedead, STACK+8, 9)\n+#else\n+  ANON(int, 0xbabedead, STACK+12, 9)\n+#endif\n   LAST_ANON(double, 123.45, D0, 10)\n \n #endif"}, {"sha": "e972691f4ae3026bc3ccea3fdbd2446b8536c96e", "filename": "gcc/testsuite/gcc.target/aarch64/aapcs64/va_arg-2.c", "status": "modified", "additions": 14, "deletions": 1, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/676d89dd0f84823db929854671bf45573aa30b01/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Faapcs64%2Fva_arg-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/676d89dd0f84823db929854671bf45573aa30b01/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Faapcs64%2Fva_arg-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Faapcs64%2Fva_arg-2.c?ref=676d89dd0f84823db929854671bf45573aa30b01", "patch": "@@ -30,7 +30,7 @@ void init_data ()\n \n #include \"abitest.h\"\n #else\n-  ARG          (         int      , 0xff  ,                            X0,        0)\n+  ARG          (         int      , 0xff  ,                            W0,        0)\n   ARG          (         float    , 1.0f  ,                            S0,        1)\n   ARG          (         float    , 1.0f  ,                            S1,        2)\n   ARG          (         float    , 1.0f  ,                            S2,        3)\n@@ -43,17 +43,30 @@ void init_data ()\n   ANON         (          __int128, qword.i              ,             X2,        8)\n   ANON         (  signed long long, 0xa987654321012345LL ,             X4,        9)\n   ANON         (          __int128, qword.i              ,             X6,       10)\n+#ifndef __AAPCS64_BIG_ENDIAN__\n   ANON_PROMOTED(unsigned char     , 0xfe  , unsigned int, 0xfe       , STACK,    11)\n   ANON_PROMOTED(  signed char     , sc    ,   signed int, sc_promoted, STACK+8,  12)\n   ANON_PROMOTED(unsigned short    , 0xdcba, unsigned int, 0xdcba     , STACK+16, 13)\n   ANON_PROMOTED(  signed short    , ss    ,   signed int, ss_promoted, STACK+24, 14)\n   ANON         (unsigned int      , 0xdeadbeef,                        STACK+32, 15)\n   ANON         (  signed int      , 0xcafebabe,                        STACK+40, 16)\n+#else\n+  ANON_PROMOTED(unsigned char     , 0xfe  , unsigned int, 0xfe       , STACK+4,  11)\n+  ANON_PROMOTED(  signed char     , sc    ,   signed int, sc_promoted, STACK+12, 12)\n+  ANON_PROMOTED(unsigned short    , 0xdcba, unsigned int, 0xdcba     , STACK+20, 13)\n+  ANON_PROMOTED(  signed short    , ss    ,   signed int, ss_promoted, STACK+28, 14)\n+  ANON         (unsigned int      , 0xdeadbeef,                        STACK+36, 15)\n+  ANON         (  signed int      , 0xcafebabe,                        STACK+44, 16)\n+#endif\n   ANON         (unsigned long long, 0xba98765432101234ULL,             STACK+48, 17)\n   ANON_PROMOTED(         float    , fp    ,       double, fp_promoted, STACK+56, 18)\n   ANON         (         double   , 9876543.212345,                    STACK+64, 19)\n   ANON         (    long double   , 98765432123456789.987654321L,      STACK+80, 20)\n   ANON         (             vf2_t, vf2   ,                            STACK+96, 21)\n   ANON         (             vi4_t, vi4   ,                            STACK+112,22)\n+#ifndef __AAPCS64_BIG_ENDIAN__\n   LAST_ANON    (         int      , 0xeeee,                            STACK+128,23)\n+#else\n+  LAST_ANON    (         int      , 0xeeee,                            STACK+132,23)\n+#endif\n #endif"}, {"sha": "8199a8c3ec252c0eb4d944e631d95a022c875fed", "filename": "gcc/testsuite/gcc.target/aarch64/aapcs64/va_arg-3.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/676d89dd0f84823db929854671bf45573aa30b01/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Faapcs64%2Fva_arg-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/676d89dd0f84823db929854671bf45573aa30b01/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Faapcs64%2Fva_arg-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Faapcs64%2Fva_arg-3.c?ref=676d89dd0f84823db929854671bf45573aa30b01", "patch": "@@ -80,7 +80,15 @@ void init_data ()\n   PTR_ANON (struct x2, y2, STACK+24,  9)\n   ANON     (union  x3, y3, STACK+32, 10)\n   PTR_ANON (union  x4, y4, STACK+40, 11)\n+#ifndef __AAPCS64_BIG_ENDIAN__\n   ANON     (int      ,  1, STACK+48, 12)\n+#else\n+  ANON     (int      ,  1, STACK+52, 12)\n+#endif\n   ANON     (struct x5, y5, STACK+64, 13)\n+#ifndef __AAPCS64_BIG_ENDIAN__\n   LAST_ANON(int      ,  2, STACK+80, 14)\n+#else\n+  LAST_ANON(int      ,  2, STACK+84, 14)\n+#endif\n #endif"}, {"sha": "fab3575756d7da0b77ef384fc7e11e0b816a1885", "filename": "gcc/testsuite/gcc.target/aarch64/aapcs64/va_arg-4.c", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/676d89dd0f84823db929854671bf45573aa30b01/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Faapcs64%2Fva_arg-4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/676d89dd0f84823db929854671bf45573aa30b01/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Faapcs64%2Fva_arg-4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Faapcs64%2Fva_arg-4.c?ref=676d89dd0f84823db929854671bf45573aa30b01", "patch": "@@ -67,7 +67,7 @@ void init_data ()\n \n #include \"abitest.h\"\n #else\n-  ARG      (int   , 1, X0, LAST_NAMED_ARG_ID)\n+  ARG      (int   , 1, W0, LAST_NAMED_ARG_ID)\n   DOTS\n   /* HFA or HVA passed in fp/simd registers or on stack.  */\n   ANON     (struct hfa_fx1_t  , hfa_fx1 ,  S0      , 0)\n@@ -89,5 +89,9 @@ void init_data ()\n   PTR_ANON (struct non_hfa_ffs_t  , non_hfa_ffs  , STACK+120, 18)\n   ANON     (struct non_hfa_ffs_2_t, non_hfa_ffs_2, STACK+128, 19)\n   ANON     (union  non_hfa_union_t, non_hfa_union, STACK+144, 20)\n+#ifndef __AAPCS64_BIG_ENDIAN__\n   LAST_ANON(int                   , 2            , STACK+152, 30)\n+#else\n+  LAST_ANON(int                   , 2            , STACK+156, 30)\n+#endif\n #endif"}, {"sha": "4853f92a2977f1cbf4a3e85e696b43ad17d71ffd", "filename": "gcc/testsuite/gcc.target/aarch64/aapcs64/va_arg-5.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/676d89dd0f84823db929854671bf45573aa30b01/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Faapcs64%2Fva_arg-5.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/676d89dd0f84823db929854671bf45573aa30b01/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Faapcs64%2Fva_arg-5.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Faapcs64%2Fva_arg-5.c?ref=676d89dd0f84823db929854671bf45573aa30b01", "patch": "@@ -33,7 +33,7 @@ void init_data ()\n \n #include \"abitest.h\"\n #else\n-  ARG      (int, 1, X0, LAST_NAMED_ARG_ID)\n+  ARG      (int, 1, W0, LAST_NAMED_ARG_ID)\n   DOTS\n   /* HFA passed in fp/simd registers or on stack.  */\n   ANON     (struct hfa_dx4_t  , hfa_dx4  , D0      , 0)"}, {"sha": "248915b4a9ac3c47e679a7fbe592a9bb54c098a7", "filename": "gcc/testsuite/gcc.target/aarch64/aapcs64/va_arg-6.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/676d89dd0f84823db929854671bf45573aa30b01/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Faapcs64%2Fva_arg-6.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/676d89dd0f84823db929854671bf45573aa30b01/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Faapcs64%2Fva_arg-6.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Faapcs64%2Fva_arg-6.c?ref=676d89dd0f84823db929854671bf45573aa30b01", "patch": "@@ -30,7 +30,7 @@ void init_data ()\n \n #include \"abitest.h\"\n #else\n-  ARG      (int, 1, X0, LAST_NAMED_ARG_ID)\n+  ARG      (int, 1, W0, LAST_NAMED_ARG_ID)\n   DOTS\n   ANON     (struct hfa_ffs_t  , hfa_ffs  , S0     , 0)\n   ANON     (union  hfa_union_t, hfa_union, S4     , 1)"}, {"sha": "e6a8185e57819aab1ae4d8b19138c045d9e82166", "filename": "gcc/testsuite/gcc.target/aarch64/aapcs64/va_arg-7.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/676d89dd0f84823db929854671bf45573aa30b01/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Faapcs64%2Fva_arg-7.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/676d89dd0f84823db929854671bf45573aa30b01/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Faapcs64%2Fva_arg-7.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Faapcs64%2Fva_arg-7.c?ref=676d89dd0f84823db929854671bf45573aa30b01", "patch": "@@ -15,17 +15,17 @@ _Complex __int128 complex_qword = 567890 + 678901i;\n \n #include \"abitest.h\"\n #else\n-  ARG      (int, 1, X0, LAST_NAMED_ARG_ID)\n+  ARG      (int, 1, W0, LAST_NAMED_ARG_ID)\n   DOTS\n   /* Complex floating-point types are passed in fp/simd registers.  */\n   ANON     (_Complex float      , 12.3f + 23.4fi              , S0,  0)\n   ANON     (_Complex double     , 34.56 + 45.67i              , D2,  1)\n   ANON     (_Complex long double, 56789.01234L + 67890.12345Li, Q4,  2)\n \n   /* Complex integral types are passed in general registers or via reference.  */\n-  ANON     (_Complex short      , (short)12345 + (short)23456i, X1, 10)\n+  ANON     (_Complex short      , (_Complex short) (12345 + 23456i), X1, 10)\n   ANON     (_Complex int        , 34567 + 45678i              , X2, 11)\n   PTR_ANON (_Complex __int128   , complex_qword               , X3, 12)\n \n-  LAST_ANON(int                 , 1                           , X4, 20)\n+  LAST_ANON(int                 , 1                           , W4, 20)\n #endif"}]}