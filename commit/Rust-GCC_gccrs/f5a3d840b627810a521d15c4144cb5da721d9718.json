{"sha": "f5a3d840b627810a521d15c4144cb5da721d9718", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjVhM2Q4NDBiNjI3ODEwYTUyMWQxNWM0MTQ0Y2I1ZGE3MjFkOTcxOA==", "commit": {"author": {"name": "Richard Guenther", "email": "rguenther@suse.de", "date": "2012-01-04T13:25:28Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2012-01-04T13:25:28Z"}, "message": "re PR middle-end/51750 (FAIL: 25_algorithms/heap/moveable*.cc execution test)\n\n2012-01-04  Richard Guenther  <rguenther@suse.de>\n\n\tPR middle-end/51750\n\t* tree.c (size_low_cst): New function.\n\t* tree.h (size_low_cst): Declare.\n\t* fold-const.c (fold_comparison): Use it to extract the low\n\tpart of the POINTER_PLUS_EXPR offset.\n\nFrom-SVN: r182872", "tree": {"sha": "1a1582548b6899bb4dc7ba44390c5312e814253b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1a1582548b6899bb4dc7ba44390c5312e814253b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f5a3d840b627810a521d15c4144cb5da721d9718", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f5a3d840b627810a521d15c4144cb5da721d9718", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f5a3d840b627810a521d15c4144cb5da721d9718", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f5a3d840b627810a521d15c4144cb5da721d9718/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "299c4b5f8853aa54f17ed38602aced0af0f5b503", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/299c4b5f8853aa54f17ed38602aced0af0f5b503", "html_url": "https://github.com/Rust-GCC/gccrs/commit/299c4b5f8853aa54f17ed38602aced0af0f5b503"}], "stats": {"total": 50, "additions": 38, "deletions": 12}, "files": [{"sha": "33caab17d6ade1ac0cd34a1fe7ee54043f5e523f", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f5a3d840b627810a521d15c4144cb5da721d9718/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f5a3d840b627810a521d15c4144cb5da721d9718/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=f5a3d840b627810a521d15c4144cb5da721d9718", "patch": "@@ -1,3 +1,11 @@\n+2012-01-04  Richard Guenther  <rguenther@suse.de>\n+\n+\tPR middle-end/51750\n+\t* tree.c (size_low_cst): New function.\n+\t* tree.h (size_low_cst): Declare.\n+\t* fold-const.c (fold_comparison): Use it to extract the low\n+\tpart of the POINTER_PLUS_EXPR offset.\n+\n 2012-01-04  Georg-Johann Lay  <avr@gjlay.de>\n \n \tFix clearing ZERO_REG"}, {"sha": "40a0986dda87943d93ac81a2dff9f4e09977164e", "filename": "gcc/fold-const.c", "status": "modified", "additions": 18, "deletions": 12, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f5a3d840b627810a521d15c4144cb5da721d9718/gcc%2Ffold-const.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f5a3d840b627810a521d15c4144cb5da721d9718/gcc%2Ffold-const.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffold-const.c?ref=f5a3d840b627810a521d15c4144cb5da721d9718", "patch": "@@ -8886,13 +8886,16 @@ fold_comparison (location_t loc, enum tree_code code, tree type,\n \t      indirect_base0 = true;\n \t    }\n \t  offset0 = TREE_OPERAND (arg0, 1);\n-\t  if (host_integerp (offset0, 0)\n-\t      && ((HOST_WIDE_INT) (TREE_INT_CST_LOW (offset0) * BITS_PER_UNIT)\n-\t\t  / BITS_PER_UNIT\n-\t\t  == (HOST_WIDE_INT) TREE_INT_CST_LOW (offset0)))\n+\t  if (host_integerp (offset0, 0))\n \t    {\n-\t      bitpos0 = TREE_INT_CST_LOW (offset0) * BITS_PER_UNIT;\n-\t      offset0 = NULL_TREE;\n+\t      HOST_WIDE_INT off = size_low_cst (offset0);\n+\t      if ((HOST_WIDE_INT) (((unsigned HOST_WIDE_INT) off)\n+\t\t\t\t   * BITS_PER_UNIT)\n+\t\t  / BITS_PER_UNIT == (HOST_WIDE_INT) off)\n+\t\t{\n+\t\t  bitpos0 = off * BITS_PER_UNIT;\n+\t\t  offset0 = NULL_TREE;\n+\t\t}\n \t    }\n \t}\n \n@@ -8917,13 +8920,16 @@ fold_comparison (location_t loc, enum tree_code code, tree type,\n \t      indirect_base1 = true;\n \t    }\n \t  offset1 = TREE_OPERAND (arg1, 1);\n-\t  if (host_integerp (offset1, 0)\n-\t      && ((HOST_WIDE_INT) (TREE_INT_CST_LOW (offset1) * BITS_PER_UNIT)\n-\t\t  / BITS_PER_UNIT\n-\t\t  == (HOST_WIDE_INT) TREE_INT_CST_LOW (offset1)))\n+\t  if (host_integerp (offset1, 0))\n \t    {\n-\t      bitpos1 = TREE_INT_CST_LOW (offset1) * BITS_PER_UNIT;\n-\t      offset1 = NULL_TREE;\n+\t      HOST_WIDE_INT off = size_low_cst (offset1);\n+\t      if ((HOST_WIDE_INT) (((unsigned HOST_WIDE_INT) off)\n+\t\t\t\t   * BITS_PER_UNIT)\n+\t\t  / BITS_PER_UNIT == (HOST_WIDE_INT) off)\n+\t\t{\n+\t\t  bitpos1 = off * BITS_PER_UNIT;\n+\t\t  offset1 = NULL_TREE;\n+\t\t}\n \t    }\n \t}\n "}, {"sha": "76488f7528a0547156bc988b2e0ddb88d0e9aebb", "filename": "gcc/tree.c", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f5a3d840b627810a521d15c4144cb5da721d9718/gcc%2Ftree.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f5a3d840b627810a521d15c4144cb5da721d9718/gcc%2Ftree.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree.c?ref=f5a3d840b627810a521d15c4144cb5da721d9718", "patch": "@@ -6509,6 +6509,17 @@ tree_low_cst (const_tree t, int pos)\n   return TREE_INT_CST_LOW (t);\n }\n \n+/* Return the HOST_WIDE_INT least significant bits of T, a sizetype\n+   kind INTEGER_CST.  This makes sure to properly sign-extend the\n+   constant.  */\n+\n+HOST_WIDE_INT\n+size_low_cst (const_tree t)\n+{\n+  double_int d = tree_to_double_int (t);\n+  return double_int_sext (d, TYPE_PRECISION (TREE_TYPE (t))).low;\n+}\n+\n /* Return the most significant (sign) bit of T.  */\n \n int"}, {"sha": "2ea03a092f6b5ace056a4edb2d195574b0a3cd53", "filename": "gcc/tree.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f5a3d840b627810a521d15c4144cb5da721d9718/gcc%2Ftree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f5a3d840b627810a521d15c4144cb5da721d9718/gcc%2Ftree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree.h?ref=f5a3d840b627810a521d15c4144cb5da721d9718", "patch": "@@ -4428,6 +4428,7 @@ tree_low_cst (const_tree t, int pos)\n   return TREE_INT_CST_LOW (t);\n }\n #endif\n+extern HOST_WIDE_INT size_low_cst (const_tree);\n extern int tree_int_cst_sgn (const_tree);\n extern int tree_int_cst_sign_bit (const_tree);\n extern unsigned int tree_int_cst_min_precision (tree, bool);"}]}