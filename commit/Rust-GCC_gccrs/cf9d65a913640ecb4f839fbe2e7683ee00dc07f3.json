{"sha": "cf9d65a913640ecb4f839fbe2e7683ee00dc07f3", "node_id": "C_kwDOANBUbNoAKGNmOWQ2NWE5MTM2NDBlY2I0ZjgzOWZiZTJlNzY4M2VlMDBkYzA3ZjM", "commit": {"author": {"name": "Philip Herron", "email": "philip.herron@embecosm.com", "date": "2022-05-02T09:53:14Z"}, "committer": {"name": "Philip Herron", "email": "philip.herron@embecosm.com", "date": "2022-05-02T09:53:14Z"}, "message": "Generic functions should not be TREE_PUBLIC\n\nGeneric functions cannot be public since the symbols could overlap in\nlinking other crates reusing the same generic. The other benifit here is\nthat when optimizations are turned on we can eliminate more code since the\nsymbol does not _need_ to be public.", "tree": {"sha": "9560ca20fc0aa6c946ec84e057b6601b20dde6e4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9560ca20fc0aa6c946ec84e057b6601b20dde6e4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/cf9d65a913640ecb4f839fbe2e7683ee00dc07f3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cf9d65a913640ecb4f839fbe2e7683ee00dc07f3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cf9d65a913640ecb4f839fbe2e7683ee00dc07f3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cf9d65a913640ecb4f839fbe2e7683ee00dc07f3/comments", "author": {"login": "philberty", "id": 84585, "node_id": "MDQ6VXNlcjg0NTg1", "avatar_url": "https://avatars.githubusercontent.com/u/84585?v=4", "gravatar_id": "", "url": "https://api.github.com/users/philberty", "html_url": "https://github.com/philberty", "followers_url": "https://api.github.com/users/philberty/followers", "following_url": "https://api.github.com/users/philberty/following{/other_user}", "gists_url": "https://api.github.com/users/philberty/gists{/gist_id}", "starred_url": "https://api.github.com/users/philberty/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/philberty/subscriptions", "organizations_url": "https://api.github.com/users/philberty/orgs", "repos_url": "https://api.github.com/users/philberty/repos", "events_url": "https://api.github.com/users/philberty/events{/privacy}", "received_events_url": "https://api.github.com/users/philberty/received_events", "type": "User", "site_admin": false}, "committer": {"login": "philberty", "id": 84585, "node_id": "MDQ6VXNlcjg0NTg1", "avatar_url": "https://avatars.githubusercontent.com/u/84585?v=4", "gravatar_id": "", "url": "https://api.github.com/users/philberty", "html_url": "https://github.com/philberty", "followers_url": "https://api.github.com/users/philberty/followers", "following_url": "https://api.github.com/users/philberty/following{/other_user}", "gists_url": "https://api.github.com/users/philberty/gists{/gist_id}", "starred_url": "https://api.github.com/users/philberty/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/philberty/subscriptions", "organizations_url": "https://api.github.com/users/philberty/orgs", "repos_url": "https://api.github.com/users/philberty/repos", "events_url": "https://api.github.com/users/philberty/events{/privacy}", "received_events_url": "https://api.github.com/users/philberty/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f38bf60c3ac7f039db5ff5c7c0587325097892c8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f38bf60c3ac7f039db5ff5c7c0587325097892c8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f38bf60c3ac7f039db5ff5c7c0587325097892c8"}], "stats": {"total": 10, "additions": 6, "deletions": 4}, "files": [{"sha": "49f31fca233d18a219ac51b9857b2b39584b1e64", "filename": "gcc/rust/backend/rust-compile-base.cc", "status": "modified", "additions": 5, "deletions": 3, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cf9d65a913640ecb4f839fbe2e7683ee00dc07f3/gcc%2Frust%2Fbackend%2Frust-compile-base.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cf9d65a913640ecb4f839fbe2e7683ee00dc07f3/gcc%2Frust%2Fbackend%2Frust-compile-base.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Fbackend%2Frust-compile-base.cc?ref=cf9d65a913640ecb4f839fbe2e7683ee00dc07f3", "patch": "@@ -38,14 +38,14 @@ bool inline should_mangle_item (const tree fndecl)\n \n void\n HIRCompileBase::setup_fndecl (tree fndecl, bool is_main_entry_point,\n-\t\t\t      HIR::Visibility &visibility,\n+\t\t\t      bool is_generic_fn, HIR::Visibility &visibility,\n \t\t\t      const HIR::FunctionQualifiers &qualifiers,\n \t\t\t      const AST::AttrVec &attrs)\n {\n   // if its the main fn or pub visibility mark its as DECL_PUBLIC\n   // please see https://github.com/Rust-GCC/gccrs/pull/137\n   bool is_pub = visibility.get_vis_type () == HIR::Visibility::VisType::PUBLIC;\n-  if (is_main_entry_point || is_pub)\n+  if (is_main_entry_point || (is_pub && !is_generic_fn))\n     {\n       TREE_PUBLIC (fndecl) = 1;\n     }\n@@ -427,7 +427,9 @@ HIRCompileBase::compile_function (\n   unsigned int flags = 0;\n   tree fndecl = ctx->get_backend ()->function (compiled_fn_type, ir_symbol_name,\n \t\t\t\t\t       \"\" /* asm_name */, flags, locus);\n-  setup_fndecl (fndecl, is_main_fn, visibility, qualifiers, outer_attrs);\n+\n+  setup_fndecl (fndecl, is_main_fn, fntype->has_subsititions_defined (),\n+\t\tvisibility, qualifiers, outer_attrs);\n   setup_abi_options (fndecl, fntype->get_abi ());\n \n   // conditionally mangle the function name"}, {"sha": "f12913ce97059ebf93299d86714773b285a8c268", "filename": "gcc/rust/backend/rust-compile-base.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cf9d65a913640ecb4f839fbe2e7683ee00dc07f3/gcc%2Frust%2Fbackend%2Frust-compile-base.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cf9d65a913640ecb4f839fbe2e7683ee00dc07f3/gcc%2Frust%2Fbackend%2Frust-compile-base.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Fbackend%2Frust-compile-base.h?ref=cf9d65a913640ecb4f839fbe2e7683ee00dc07f3", "patch": "@@ -76,7 +76,7 @@ class HIRCompileBase\n \t\t\t\t   tree expression, Location locus);\n \n   static void setup_fndecl (tree fndecl, bool is_main_entry_point,\n-\t\t\t    HIR::Visibility &visibility,\n+\t\t\t    bool is_generic_fn, HIR::Visibility &visibility,\n \t\t\t    const HIR::FunctionQualifiers &qualifiers,\n \t\t\t    const AST::AttrVec &attrs);\n "}]}