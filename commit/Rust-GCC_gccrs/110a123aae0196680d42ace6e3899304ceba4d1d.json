{"sha": "110a123aae0196680d42ace6e3899304ceba4d1d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTEwYTEyM2FhZTAxOTY2ODBkNDJhY2U2ZTM4OTkzMDRjZWJhNGQxZA==", "commit": {"author": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2009-06-03T10:37:20Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2009-06-03T10:37:20Z"}, "message": "re PR libstdc++/40296 ([C++0x] std::exception_ptr comparisons)\n\n2009-06-03  Paolo Carlini  <paolo.carlini@oracle.com>\n\n\tPR libstdc++/40296\n\t* libsupc++/exception_ptr.h (exception_ptr::operator!,\n\texception_ptr::operator __safe_bool): Only declare when\n\t_GLIBCXX_EH_PTR_COMPAT is undefined.\n\t* libsupc++/eh_ptr.cc: Define _GLIBCXX_EH_PTR_COMPAT before including\n\texception_ptr.\n\t* testsuite/18_support/exception_ptr/40296.cc: New.\n\t* testsuite/18_support/nested_exception/throw_with_nested.cc: Adjust.\n\t* testsuite/18_support/nested_exception/cons.cc: Likewise.\n\t* testsuite/18_support/nested_exception/nested_ptr.cc: Likewise.\n\t* testsuite/18_support/exception_ptr/current_exception.cc: Likewise.\n\nFrom-SVN: r148122", "tree": {"sha": "c3568ccf621b03599044de8ca5b322f78fc7a78d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c3568ccf621b03599044de8ca5b322f78fc7a78d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/110a123aae0196680d42ace6e3899304ceba4d1d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/110a123aae0196680d42ace6e3899304ceba4d1d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/110a123aae0196680d42ace6e3899304ceba4d1d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/110a123aae0196680d42ace6e3899304ceba4d1d/comments", "author": null, "committer": null, "parents": [{"sha": "8cd281486b0025bd3a6f7f000e24be4a8d231e22", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8cd281486b0025bd3a6f7f000e24be4a8d231e22", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8cd281486b0025bd3a6f7f000e24be4a8d231e22"}], "stats": {"total": 62, "additions": 52, "deletions": 10}, "files": [{"sha": "8d5a1b9b2957bfac4c0d1495126ddca66b13e9e4", "filename": "libstdc++-v3/libsupc++/eh_ptr.cc", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/110a123aae0196680d42ace6e3899304ceba4d1d/libstdc%2B%2B-v3%2Flibsupc%2B%2B%2Feh_ptr.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/110a123aae0196680d42ace6e3899304ceba4d1d/libstdc%2B%2B-v3%2Flibsupc%2B%2B%2Feh_ptr.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Flibsupc%2B%2B%2Feh_ptr.cc?ref=110a123aae0196680d42ace6e3899304ceba4d1d", "patch": "@@ -26,6 +26,8 @@\n \n #ifdef _GLIBCXX_ATOMIC_BUILTINS_4\n \n+#define _GLIBCXX_EH_PTR_COMPAT\n+\n #include <exception>\n #include <exception_ptr.h>\n #include \"unwind-cxx.h\"\n@@ -127,13 +129,15 @@ std::__exception_ptr::exception_ptr::swap(exception_ptr &other) throw()\n }\n \n \n+// Retained for compatibility with CXXABI_1.3.\n bool\n std::__exception_ptr::exception_ptr::operator!() const throw()\n {\n   return _M_exception_object == 0;\n }\n \n \n+// Retained for compatibility with CXXABI_1.3.\n std::__exception_ptr::exception_ptr::operator __safe_bool() const throw()\n {\n   return _M_exception_object ? &exception_ptr::_M_safe_bool_dummy : 0;\n@@ -235,4 +239,6 @@ std::rethrow_exception(std::exception_ptr ep)\n   std::terminate ();\n }\n \n+#undef _GLIBCXX_EH_PTR_COMPAT\n+\n #endif"}, {"sha": "37f3132d7aef29aa3c2025b3c91795553d1a20b8", "filename": "libstdc++-v3/libsupc++/exception_ptr.h", "status": "modified", "additions": 9, "deletions": 3, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/110a123aae0196680d42ace6e3899304ceba4d1d/libstdc%2B%2B-v3%2Flibsupc%2B%2B%2Fexception_ptr.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/110a123aae0196680d42ace6e3899304ceba4d1d/libstdc%2B%2B-v3%2Flibsupc%2B%2B%2Fexception_ptr.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Flibsupc%2B%2B%2Fexception_ptr.h?ref=110a123aae0196680d42ace6e3899304ceba4d1d", "patch": "@@ -77,10 +77,12 @@ namespace std\n   namespace __exception_ptr\n   {\n     bool \n-    operator==(const exception_ptr&, const exception_ptr&) throw() __attribute__ ((__pure__));\n+    operator==(const exception_ptr&, const exception_ptr&)\n+      throw() __attribute__ ((__pure__));\n \n     bool \n-    operator!=(const exception_ptr&, const exception_ptr&) throw() __attribute__ ((__pure__));\n+    operator!=(const exception_ptr&, const exception_ptr&)\n+      throw() __attribute__ ((__pure__));\n \n     class exception_ptr\n     {\n@@ -141,11 +143,15 @@ namespace std\n       }\n #endif\n \n+#ifdef _GLIBCXX_EH_PTR_COMPAT\n+      // Retained for compatibility with CXXABI_1.3.\n       bool operator!() const throw() __attribute__ ((__pure__));\n       operator __safe_bool() const throw();\n+#endif\n \n       friend bool \n-      operator==(const exception_ptr&, const exception_ptr&) throw() __attribute__ ((__pure__));\n+      operator==(const exception_ptr&, const exception_ptr&)\n+\tthrow() __attribute__ ((__pure__));\n \n       const type_info*\n       __cxa_exception_type() const throw() __attribute__ ((__pure__));"}, {"sha": "933f4136956d02571be2304d7c5a9a66459af268", "filename": "libstdc++-v3/testsuite/18_support/exception_ptr/40296.cc", "status": "added", "additions": 30, "deletions": 0, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/110a123aae0196680d42ace6e3899304ceba4d1d/libstdc%2B%2B-v3%2Ftestsuite%2F18_support%2Fexception_ptr%2F40296.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/110a123aae0196680d42ace6e3899304ceba4d1d/libstdc%2B%2B-v3%2Ftestsuite%2F18_support%2Fexception_ptr%2F40296.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F18_support%2Fexception_ptr%2F40296.cc?ref=110a123aae0196680d42ace6e3899304ceba4d1d", "patch": "@@ -0,0 +1,30 @@\n+// { dg-do compile }\n+// { dg-options \"-std=gnu++0x\" }\n+// { dg-require-atomic-builtins \"\" }\n+\n+// Copyright (C) 2009 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+#include <exception>\n+\n+// libstdc++/40296\n+bool test01()\n+{\n+  std::exception_ptr p;\n+\n+  return (p == 0);\n+}"}, {"sha": "4029eaf69e3d4102e4618abb2a7852a5c4d9c87a", "filename": "libstdc++-v3/testsuite/18_support/exception_ptr/current_exception.cc", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/110a123aae0196680d42ace6e3899304ceba4d1d/libstdc%2B%2B-v3%2Ftestsuite%2F18_support%2Fexception_ptr%2Fcurrent_exception.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/110a123aae0196680d42ace6e3899304ceba4d1d/libstdc%2B%2B-v3%2Ftestsuite%2F18_support%2Fexception_ptr%2Fcurrent_exception.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F18_support%2Fexception_ptr%2Fcurrent_exception.cc?ref=110a123aae0196680d42ace6e3899304ceba4d1d", "patch": "@@ -31,7 +31,7 @@ void test01()\n   using namespace std;\n \n   exception_ptr ep = current_exception();\n-  VERIFY( !ep );\n+  VERIFY( ep == 0 );\n }\n \n void test02()\n@@ -43,7 +43,7 @@ void test02()\n     throw 0;\n   } catch(...) {\n     exception_ptr ep = current_exception();\n-    VERIFY( ep );\n+    VERIFY( ep != 0 );\n   }\n }\n \n@@ -56,7 +56,7 @@ void test03()\n     throw exception();\n   } catch(std::exception&) {\n     exception_ptr ep = current_exception();\n-    VERIFY( ep );\n+    VERIFY( ep != 0 );\n   }\n }\n "}, {"sha": "3dc67fb98b17eaf0f926b6085719e1b8765de62a", "filename": "libstdc++-v3/testsuite/18_support/nested_exception/cons.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/110a123aae0196680d42ace6e3899304ceba4d1d/libstdc%2B%2B-v3%2Ftestsuite%2F18_support%2Fnested_exception%2Fcons.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/110a123aae0196680d42ace6e3899304ceba4d1d/libstdc%2B%2B-v3%2Ftestsuite%2F18_support%2Fnested_exception%2Fcons.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F18_support%2Fnested_exception%2Fcons.cc?ref=110a123aae0196680d42ace6e3899304ceba4d1d", "patch": "@@ -27,7 +27,7 @@ void test01()\n \n   std::nested_exception e;\n \n-  VERIFY( !e.nested_ptr() );\n+  VERIFY( e.nested_ptr() == 0 );\n }\n \n void test02() "}, {"sha": "d016436d017b53b53b22dacc9d999f3aaacb1fd7", "filename": "libstdc++-v3/testsuite/18_support/nested_exception/nested_ptr.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/110a123aae0196680d42ace6e3899304ceba4d1d/libstdc%2B%2B-v3%2Ftestsuite%2F18_support%2Fnested_exception%2Fnested_ptr.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/110a123aae0196680d42ace6e3899304ceba4d1d/libstdc%2B%2B-v3%2Ftestsuite%2F18_support%2Fnested_exception%2Fnested_ptr.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F18_support%2Fnested_exception%2Fnested_ptr.cc?ref=110a123aae0196680d42ace6e3899304ceba4d1d", "patch": "@@ -31,7 +31,7 @@ void test01()\n   }\n   catch (const std::nested_exception& e)\n   {\n-    VERIFY( !e.nested_ptr() );\n+    VERIFY( e.nested_ptr() == 0 );\n   }\n }\n "}, {"sha": "9ce31f06f03509d3c5ef0eb9ce3ec57760f41a6d", "filename": "libstdc++-v3/testsuite/18_support/nested_exception/throw_with_nested.cc", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/110a123aae0196680d42ace6e3899304ceba4d1d/libstdc%2B%2B-v3%2Ftestsuite%2F18_support%2Fnested_exception%2Fthrow_with_nested.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/110a123aae0196680d42ace6e3899304ceba4d1d/libstdc%2B%2B-v3%2Ftestsuite%2F18_support%2Fnested_exception%2Fthrow_with_nested.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F18_support%2Fnested_exception%2Fthrow_with_nested.cc?ref=110a123aae0196680d42ace6e3899304ceba4d1d", "patch": "@@ -35,7 +35,7 @@ void test01()\n   }\n   catch (const std::nested_exception& e)\n   {\n-    VERIFY( !e.nested_ptr() );\n+    VERIFY( e.nested_ptr() == 0 );\n     try\n     {\n       throw;\n@@ -58,7 +58,7 @@ void test02()\n   }\n   catch (const std::nested_exception& e)\n   {\n-    VERIFY( !e.nested_ptr() );\n+    VERIFY( e.nested_ptr() == 0 );\n     try\n     {\n       throw;"}]}