{"sha": "075fc17aa50627c58a902aca1b27a74a7c7f7311", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDc1ZmMxN2FhNTA2MjdjNThhOTAyYWNhMWIyN2E3NGE3YzdmNzMxMQ==", "commit": {"author": {"name": "Jan Hubicka", "email": "jh@suse.cz", "date": "2002-11-01T09:35:24Z"}, "committer": {"name": "Jan Hubicka", "email": "hubicka@gcc.gnu.org", "date": "2002-11-01T09:35:24Z"}, "message": "expr.c (emit_move_insn): Use SCALAR_FLOAT_MODE_P\n\n\n\t* expr.c (emit_move_insn):  Use SCALAR_FLOAT_MODE_P\n\t* machmode.h (SCALAR_FLOAT_MODE_P): New macro.\n\nFrom-SVN: r58712", "tree": {"sha": "c1cd461ba0c1deb1040428de253951d45bcbf009", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c1cd461ba0c1deb1040428de253951d45bcbf009"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/075fc17aa50627c58a902aca1b27a74a7c7f7311", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/075fc17aa50627c58a902aca1b27a74a7c7f7311", "html_url": "https://github.com/Rust-GCC/gccrs/commit/075fc17aa50627c58a902aca1b27a74a7c7f7311", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/075fc17aa50627c58a902aca1b27a74a7c7f7311/comments", "author": null, "committer": null, "parents": [{"sha": "cfcfd176a15bf3850a4c915f117713d01cd3427b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cfcfd176a15bf3850a4c915f117713d01cd3427b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cfcfd176a15bf3850a4c915f117713d01cd3427b"}], "stats": {"total": 11, "additions": 10, "deletions": 1}, "files": [{"sha": "85f6174594ad523a1a442ff2ffba6d4e9b832400", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/075fc17aa50627c58a902aca1b27a74a7c7f7311/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/075fc17aa50627c58a902aca1b27a74a7c7f7311/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=075fc17aa50627c58a902aca1b27a74a7c7f7311", "patch": "@@ -1,3 +1,8 @@\n+Fri Nov  1 10:33:15 CET 2002  Jan Hubicka  <jh@suse.cz>\n+\n+\t* expr.c (emit_move_insn):  Use SCALAR_FLOAT_MODE_P\n+\t* machmode.h (SCALAR_FLOAT_MODE_P): New macro.\n+\n 2002-10-31  Nathanael Nerode  <neroden@gcc.gnu.org>\n \n \tPR optimization/6162"}, {"sha": "e4d97772cc86d825e50767e5235dcec472df5888", "filename": "gcc/expr.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/075fc17aa50627c58a902aca1b27a74a7c7f7311/gcc%2Fexpr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/075fc17aa50627c58a902aca1b27a74a7c7f7311/gcc%2Fexpr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fexpr.c?ref=075fc17aa50627c58a902aca1b27a74a7c7f7311", "patch": "@@ -3092,7 +3092,7 @@ emit_move_insn (x, y)\n   else if (CONSTANT_P (y))\n     {\n       if (optimize\n-\t  && FLOAT_MODE_P (GET_MODE (x))\n+\t  && SCALAR_FLOAT_MODE_P (GET_MODE (x))\n \t  && (last_insn = compress_float_constant (x, y)))\n \treturn last_insn;\n "}, {"sha": "46247d57343483a41b7c136fcd17e32156e4fbb2", "filename": "gcc/machmode.h", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/075fc17aa50627c58a902aca1b27a74a7c7f7311/gcc%2Fmachmode.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/075fc17aa50627c58a902aca1b27a74a7c7f7311/gcc%2Fmachmode.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fmachmode.h?ref=075fc17aa50627c58a902aca1b27a74a7c7f7311", "patch": "@@ -80,6 +80,10 @@ extern const enum mode_class mode_class[NUM_MACHINE_MODES];\n   (GET_MODE_CLASS (MODE) == MODE_INT\t\t\\\n    || GET_MODE_CLASS (MODE) == MODE_PARTIAL_INT)\n \n+/* Nonzero if MODE is a scalar floating point mode.  */\n+#define SCALAR_FLOAT_MODE_P(MODE)\t\t\\\n+  (GET_MODE_CLASS (MODE) == MODE_FLOAT)\n+\n /* Get the size in bytes of an object of mode MODE.  */\n \n extern const unsigned char mode_size[NUM_MACHINE_MODES];"}]}