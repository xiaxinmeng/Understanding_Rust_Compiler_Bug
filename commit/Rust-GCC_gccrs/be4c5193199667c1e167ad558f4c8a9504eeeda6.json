{"sha": "be4c5193199667c1e167ad558f4c8a9504eeeda6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmU0YzUxOTMxOTk2NjdjMWUxNjdhZDU1OGY0YzhhOTUwNGVlZWRhNg==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2012-12-05T10:29:59Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2012-12-05T10:29:59Z"}, "message": "[multiple changes]\n\n2012-12-05  Ed Schonberg  <schonberg@adacore.com>\n\n\t* s-rident.ads, restrict.ads: Remove discrepancies between the\n\tdocumentation on implementation-defined restrictions, and\n\tthe internal data structure used for warnings and errors on\n\timplementation-defined restriction violations.\n\n2012-12-05  Ed Schonberg  <schonberg@adacore.com>\n\n\t* sem_prag.adb (Chain_PPC): Pre- and postcondition aspects\n\tare legal on a subprogram body that acts as a spec.\n\n2012-12-05  Ed Schonberg  <schonberg@adacore.com>\n\n\t* sem_ch8.adb (Find_Selected_Component): If the selector name is\n\tan overloadable entity but the name is not overloaded, generate\n\treference to it rather than delaying this until resolution.\n\n2012-12-05  Robert Dewar  <dewar@adacore.com>\n\n\t* checks.ads, checks.adb (Activate_Overflow_Check): No effect for\n\tMOD/REM/unary +\n\t* exp_ch4.adb (Expand_N_Op_Mod): Remove call to set Do_Overflow_Check.\n\n2012-12-05  Ed Schonberg  <schonberg@adacore.com>\n\n\t* sem_ch4.adb (Find_Non_Universal_Interpretation): Use the\n\ttypes of the right operand if the left operand is null.\n\n2012-12-05  Sergey Rybin  <rybin@adacore.com frybin>\n\n\t* gnat_ugn.texi, vms_data.ads: document gnatpp -nn option.\n\n2012-12-05  Jose Ruiz  <ruiz@adacore.com>\n\n\t* init.c (__gnat_install_handler): For the LEON VxWorks kernel\n\trun-time library we need to install a trap handler directly in the\n\ttrap table (no support by the OS) for the software trap 0.\n\nFrom-SVN: r194196", "tree": {"sha": "27d42a6a40c0b1df7a6ef429c67194c986a05316", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/27d42a6a40c0b1df7a6ef429c67194c986a05316"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/be4c5193199667c1e167ad558f4c8a9504eeeda6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/be4c5193199667c1e167ad558f4c8a9504eeeda6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/be4c5193199667c1e167ad558f4c8a9504eeeda6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/be4c5193199667c1e167ad558f4c8a9504eeeda6/comments", "author": null, "committer": null, "parents": [{"sha": "03a2b9ede1ee9a02d3c9dbb2aa1556913ebec531", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/03a2b9ede1ee9a02d3c9dbb2aa1556913ebec531", "html_url": "https://github.com/Rust-GCC/gccrs/commit/03a2b9ede1ee9a02d3c9dbb2aa1556913ebec531"}], "stats": {"total": 177, "additions": 166, "deletions": 11}, "files": [{"sha": "2503ca0b957b3c2df51062eedb7856bf15ce8939", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 39, "deletions": 0, "changes": 39, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be4c5193199667c1e167ad558f4c8a9504eeeda6/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be4c5193199667c1e167ad558f4c8a9504eeeda6/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=be4c5193199667c1e167ad558f4c8a9504eeeda6", "patch": "@@ -1,3 +1,42 @@\n+2012-12-05  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* s-rident.ads, restrict.ads: Remove discrepancies between the\n+\tdocumentation on implementation-defined restrictions, and\n+\tthe internal data structure used for warnings and errors on\n+\timplementation-defined restriction violations.\n+\n+2012-12-05  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* sem_prag.adb (Chain_PPC): Pre- and postcondition aspects\n+\tare legal on a subprogram body that acts as a spec.\n+\n+2012-12-05  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* sem_ch8.adb (Find_Selected_Component): If the selector name is\n+\tan overloadable entity but the name is not overloaded, generate\n+\treference to it rather than delaying this until resolution.\n+\n+2012-12-05  Robert Dewar  <dewar@adacore.com>\n+\n+\t* checks.ads, checks.adb (Activate_Overflow_Check): No effect for\n+\tMOD/REM/unary +\n+\t* exp_ch4.adb (Expand_N_Op_Mod): Remove call to set Do_Overflow_Check.\n+\n+2012-12-05  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* sem_ch4.adb (Find_Non_Universal_Interpretation): Use the\n+\ttypes of the right operand if the left operand is null.\n+\n+2012-12-05  Sergey Rybin  <rybin@adacore.com frybin>\n+\n+\t* gnat_ugn.texi, vms_data.ads: document gnatpp -nn option.\n+\n+2012-12-05  Jose Ruiz  <ruiz@adacore.com>\n+\n+\t* init.c (__gnat_install_handler): For the LEON VxWorks kernel\n+\trun-time library we need to install a trap handler directly in the\n+\ttrap table (no support by the OS) for the software trap 0.\n+\n 2012-12-05  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* gnat_rm.texi (Interfacing to C++): Document new restrictions."}, {"sha": "8a73e25e6c9b85cc76e179c9105f2b125be88b9f", "filename": "gcc/ada/checks.adb", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be4c5193199667c1e167ad558f4c8a9504eeeda6/gcc%2Fada%2Fchecks.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be4c5193199667c1e167ad558f4c8a9504eeeda6/gcc%2Fada%2Fchecks.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fchecks.adb?ref=be4c5193199667c1e167ad558f4c8a9504eeeda6", "patch": "@@ -387,8 +387,10 @@ package body Checks is\n \n    procedure Activate_Overflow_Check (N : Node_Id) is\n    begin\n-      Set_Do_Overflow_Check (N, True);\n-      Possible_Local_Raise (N, Standard_Constraint_Error);\n+      if not Nkind_In (N, N_Op_Rem, N_Op_Mod, N_Op_Plus) then\n+         Set_Do_Overflow_Check (N, True);\n+         Possible_Local_Raise (N, Standard_Constraint_Error);\n+      end if;\n    end Activate_Overflow_Check;\n \n    --------------------------"}, {"sha": "2221f0ea292f030e7bf458653c1eb9e11ac8c28a", "filename": "gcc/ada/checks.ads", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be4c5193199667c1e167ad558f4c8a9504eeeda6/gcc%2Fada%2Fchecks.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be4c5193199667c1e167ad558f4c8a9504eeeda6/gcc%2Fada%2Fchecks.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fchecks.ads?ref=be4c5193199667c1e167ad558f4c8a9504eeeda6", "patch": "@@ -93,6 +93,8 @@ package Checks is\n    --  Sets Do_Overflow_Check flag in node N, and handles possible local raise.\n    --  Always call this routine rather than calling Set_Do_Overflow_Check to\n    --  set an explicit value of True, to ensure handling the local raise case.\n+   --  Note that this call has no effect for MOD, REM, and unary \"+\" for which\n+   --  overflow is never possible in any case.\n \n    procedure Activate_Range_Check (N : Node_Id);\n    pragma Inline (Activate_Range_Check);"}, {"sha": "80c27c4e994a719dc1ec9972cfefee7c8646e95f", "filename": "gcc/ada/exp_ch4.adb", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be4c5193199667c1e167ad558f4c8a9504eeeda6/gcc%2Fada%2Fexp_ch4.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be4c5193199667c1e167ad558f4c8a9504eeeda6/gcc%2Fada%2Fexp_ch4.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch4.adb?ref=be4c5193199667c1e167ad558f4c8a9504eeeda6", "patch": "@@ -7910,7 +7910,6 @@ package body Exp_Ch4 is\n    procedure Expand_N_Op_Mod (N : Node_Id) is\n       Loc   : constant Source_Ptr := Sloc (N);\n       Typ   : constant Entity_Id  := Etype (N);\n-      DOC   : constant Boolean    := Do_Overflow_Check (N);\n       DDC   : constant Boolean    := Do_Division_Check (N);\n \n       Left  : Node_Id;\n@@ -7975,7 +7974,6 @@ package body Exp_Ch4 is\n \n          Set_Entity            (N, Standard_Entity (S_Op_Rem));\n          Set_Etype             (N, Typ);\n-         Set_Do_Overflow_Check (N, DOC);\n          Set_Do_Division_Check (N, DDC);\n          Expand_N_Op_Rem (N);\n          Set_Analyzed (N);"}, {"sha": "199f920453cb33fc5938dd925fed7bb37c04cd45", "filename": "gcc/ada/gnat_ugn.texi", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be4c5193199667c1e167ad558f4c8a9504eeeda6/gcc%2Fada%2Fgnat_ugn.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be4c5193199667c1e167ad558f4c8a9504eeeda6/gcc%2Fada%2Fgnat_ugn.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnat_ugn.texi?ref=be4c5193199667c1e167ad558f4c8a9504eeeda6", "patch": "@@ -13384,6 +13384,18 @@ lower case. Overrides ^-n^/NAME_CASING^ casing setting.\n Names introduced by type and subtype declarations are always in\n mixed case. Overrides ^-n^/NAME_CASING^ casing setting.\n \n+@item ^-nnU^/NUMBER_CASING=UPPER_CASE^\n+Names introduced by number declarations are always in\n+upper case. Overrides ^-n^/NAME_CASING^ casing setting.\n+\n+@item ^-nnL^/NUMBER_CASING=LOWER_CASE^\n+Names introduced by number declarations are always in\n+lower case. Overrides ^-n^/NAME_CASING^ casing setting.\n+\n+@item ^-nnM^/NUMBER_CASING=MIXED_CASE^\n+Names introduced by number declarations are always in\n+mixed case. Overrides ^-n^/NAME_CASING^ casing setting.\n+\n @cindex @option{^-p@var{x}^/PRAGMA_CASING^} (@command{gnatpp})\n @item ^-pL^/PRAGMA_CASING=LOWER_CASE^\n Pragma names are lower case"}, {"sha": "8a28bf68ab54ed256808e7abe5fa75abfe07bd10", "filename": "gcc/ada/init.c", "status": "modified", "additions": 53, "deletions": 0, "changes": 53, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be4c5193199667c1e167ad558f4c8a9504eeeda6/gcc%2Fada%2Finit.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be4c5193199667c1e167ad558f4c8a9504eeeda6/gcc%2Fada%2Finit.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Finit.c?ref=be4c5193199667c1e167ad558f4c8a9504eeeda6", "patch": "@@ -1759,6 +1759,25 @@ __gnat_error_handler (int sig, void *si, struct sigcontext *sc)\n #endif\n }\n \n+#if defined(__leon__) && defined(_WRS_KERNEL)\n+/* For LEON VxWorks we need to install a trap handler for stack overflow */\n+\n+extern void excEnt (void);\n+/* VxWorks exception handler entry */\n+\n+struct trap_entry {\n+   unsigned long inst_first;\n+   unsigned long inst_second;\n+   unsigned long inst_third;\n+   unsigned long inst_fourth;\n+};\n+/* Four instructions representing entries in the trap table */\n+\n+struct trap_entry *trap_0_entry;\n+/* We will set the location of the entry for software trap 0 in the trap\n+   table. */\n+#endif\n+\n void\n __gnat_install_handler (void)\n {\n@@ -1779,6 +1798,40 @@ __gnat_install_handler (void)\n   sigaction (SIGSEGV, &act, NULL);\n   sigaction (SIGBUS,  &act, NULL);\n \n+#if defined(__leon__) && defined(_WRS_KERNEL)\n+  /* Specific to the LEON VxWorks kernel run-time library */\n+\n+  /* For stack checking the compiler triggers a software trap 0 (ta 0) in\n+     case of overflow (we use the stack limit mechanism). We need to install\n+     the trap handler here for this software trap (the OS does not handle\n+     it) as if it were a data_access_exception (trap 9). We do the same as\n+     if we put in the trap table a VXSPARC_BAD_TRAP(9). Software trap 0 is\n+     located at vector 0x80, and each entry takes 4 words. */\n+\n+  trap_0_entry = (struct trap_entry *)(intVecBaseGet () + 0x80 * 4);\n+\n+  /* mov 0x9, %l7 */\n+\n+  trap_0_entry->inst_first = 0xae102000 + 9;\n+\n+  /* sethi %hi(excEnt), %l6 */\n+\n+  /* The 22 most significant bits of excEnt are obtained shifting 10 times\n+     to the right.  */\n+\n+  trap_0_entry->inst_second = 0x2d000000 + ((unsigned long)excEnt >> 10);\n+\n+  /* jmp %l6+%lo(excEnt) */\n+\n+  /* The 10 least significant bits of excEnt are obtained by masking */\n+\n+  trap_0_entry->inst_third = 0x81c5a000 + ((unsigned long)excEnt & 0x3ff);\n+\n+  /* rd %psr, %l0 */\n+\n+  trap_0_entry->inst_fourth = 0xa1480000;\n+#endif\n+\n   __gnat_handler_installed = 1;\n }\n "}, {"sha": "54702abd10cf9c0bfb5fccd99eab28ad328271cf", "filename": "gcc/ada/restrict.ads", "status": "modified", "additions": 9, "deletions": 3, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be4c5193199667c1e167ad558f4c8a9504eeeda6/gcc%2Fada%2Frestrict.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be4c5193199667c1e167ad558f4c8a9504eeeda6/gcc%2Fada%2Frestrict.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Frestrict.ads?ref=be4c5193199667c1e167ad558f4c8a9504eeeda6", "patch": "@@ -107,36 +107,42 @@ package Restrict is\n \n    Implementation_Restriction : array (All_Restrictions) of Boolean :=\n      (Simple_Barriers                    => True,\n-      No_Asynchronous_Control            => True,\n       No_Calendar                        => True,\n+      No_Default_Initialization          => True,\n+      No_Direct_Boolean_Operators        => True,\n       No_Dispatching_Calls               => True,\n       No_Dynamic_Attachment              => True,\n       No_Elaboration_Code                => True,\n       No_Enumeration_Maps                => True,\n       No_Entry_Calls_In_Elaboration_Code => True,\n       No_Entry_Queue                     => True,\n       No_Exception_Handlers              => True,\n+      No_Exception_Propagation           => True,\n       No_Exception_Registration          => True,\n+      No_Finalization                    => True,\n       No_Implementation_Attributes       => True,\n       No_Implementation_Pragmas          => True,\n       No_Implicit_Conditionals           => True,\n+      No_Implicit_Aliasing               => True,\n       No_Implicit_Dynamic_Code           => True,\n       No_Implicit_Loops                  => True,\n+      No_Initialize_Scalars              => True,\n       No_Local_Protected_Objects         => True,\n       No_Protected_Type_Allocators       => True,\n       No_Relative_Delay                  => True,\n       No_Requeue_Statements              => True,\n       No_Secondary_Stack                 => True,\n       No_Select_Statements               => True,\n       No_Standard_Storage_Pools          => True,\n+      No_Stream_Optimizations            => True,\n       No_Streams                         => True,\n       No_Task_Attributes_Package         => True,\n       No_Task_Termination                => True,\n-      No_Unchecked_Conversion            => True,\n-      No_Unchecked_Deallocation          => True,\n+      No_Tasking                         => True,\n       No_Wide_Characters                 => True,\n       Static_Priorities                  => True,\n       Static_Storage_Size                => True,\n+      SPARK                              => True,\n       others                             => False);\n \n    --  The following table records entries made by Restrictions pragmas"}, {"sha": "d0bc1066c0cc3437e1480393ff39989e8681ccc7", "filename": "gcc/ada/s-rident.ads", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be4c5193199667c1e167ad558f4c8a9504eeeda6/gcc%2Fada%2Fs-rident.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be4c5193199667c1e167ad558f4c8a9504eeeda6/gcc%2Fada%2Fs-rident.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-rident.ads?ref=be4c5193199667c1e167ad558f4c8a9504eeeda6", "patch": "@@ -94,7 +94,7 @@ package System.Rident is\n       No_Allocators,                           -- (RM H.4(7))\n       No_Allocators_After_Elaboration,         -- Ada 2012 (RM D.7(19.1/2))\n       No_Anonymous_Allocators,                 -- Ada 2012 (RM H.4(8/1))\n-      No_Asynchronous_Control,                 -- (RM D.7(10))\n+      No_Asynchronous_Control,                 -- (RM J.13(3/2)\n       No_Calendar,                             -- GNAT\n       No_Default_Stream_Attributes,            -- Ada 2012 (RM 13.12.1(4/2))\n       No_Delay,                                -- (RM H.4(21))\n@@ -142,8 +142,8 @@ package System.Rident is\n       No_Tasking,                              -- GNAT\n       No_Terminate_Alternatives,               -- (RM D.7(6))\n       No_Unchecked_Access,                     -- (RM H.4(18))\n-      No_Unchecked_Conversion,                 -- (RM H.4(16))\n-      No_Unchecked_Deallocation,               -- (RM H.4(9))\n+      No_Unchecked_Conversion,                 -- (RM J.13(4/2))\n+      No_Unchecked_Deallocation,               -- (RM J.13(5/2))\n       Static_Priorities,                       -- GNAT\n       Static_Storage_Size,                     -- GNAT\n "}, {"sha": "2c54fcdc5c8882996b930484e7dceca41f761da9", "filename": "gcc/ada/sem_ch4.adb", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be4c5193199667c1e167ad558f4c8a9504eeeda6/gcc%2Fada%2Fsem_ch4.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be4c5193199667c1e167ad558f4c8a9504eeeda6/gcc%2Fada%2Fsem_ch4.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch4.adb?ref=be4c5193199667c1e167ad558f4c8a9504eeeda6", "patch": "@@ -192,7 +192,9 @@ package body Sem_Ch4 is\n    --  of the operand types. If one of the operands has a universal interpre-\n    --  tation,  the legality check uses some compatible non-universal\n    --  interpretation of the other operand. N can be an operator node, or\n-   --  a function call whose name is an operator designator.\n+   --  a function call whose name is an operator designator. Any_Access, which\n+   --  is the initial type of the literal NULL, is a universal type for the\n+   --  purpose of this routine.\n \n    function Find_Primitive_Operation (N : Node_Id) return Boolean;\n    --  Find candidate interpretations for the name Obj.Proc when it appears\n@@ -5504,6 +5506,7 @@ package body Sem_Ch4 is\n    begin\n       if T1 = Universal_Integer\n         or else T1 = Universal_Real\n+        or else T1 = Any_Access\n       then\n          if not Is_Overloaded (R) then\n             Add_One_Interp"}, {"sha": "fb5c3c807de89cbee151fca248d4b2a622268660", "filename": "gcc/ada/sem_ch8.adb", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be4c5193199667c1e167ad558f4c8a9504eeeda6/gcc%2Fada%2Fsem_ch8.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be4c5193199667c1e167ad558f4c8a9504eeeda6/gcc%2Fada%2Fsem_ch8.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch8.adb?ref=be4c5193199667c1e167ad558f4c8a9504eeeda6", "patch": "@@ -5521,6 +5521,13 @@ package body Sem_Ch8 is\n             null;\n          end if;\n       end if;\n+\n+      --  If there is a single interpretation for N we can generate a\n+      --  reference to the unique entity found.\n+\n+      if Is_Overloadable (Id) and then not Is_Overloaded (N) then\n+         Generate_Reference (Id, N);\n+      end if;\n    end Find_Expanded_Name;\n \n    -------------------------"}, {"sha": "fa3e066641c8b0f6bbdc29c9536ed9692544e8c8", "filename": "gcc/ada/sem_prag.adb", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be4c5193199667c1e167ad558f4c8a9504eeeda6/gcc%2Fada%2Fsem_prag.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be4c5193199667c1e167ad558f4c8a9504eeeda6/gcc%2Fada%2Fsem_prag.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_prag.adb?ref=be4c5193199667c1e167ad558f4c8a9504eeeda6", "patch": "@@ -2068,6 +2068,14 @@ package body Sem_Prag is\n                Error_Pragma\n                  (\"aspect % requires ''Class for null procedure\");\n \n+            --  Pre/postconditions are legal on a subprogram body if it is not\n+            --  a completion of a declaration.\n+\n+            elsif Nkind (PO) = N_Subprogram_Body\n+              and then Acts_As_Spec (PO)\n+            then\n+               null;\n+\n             elsif not Nkind_In (PO, N_Subprogram_Declaration,\n                                     N_Expression_Function,\n                                     N_Generic_Subprogram_Declaration,"}, {"sha": "69fe509b3e25e7ca25cd8a485e18d2f14295caf7", "filename": "gcc/ada/vms_data.ads", "status": "modified", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be4c5193199667c1e167ad558f4c8a9504eeeda6/gcc%2Fada%2Fvms_data.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be4c5193199667c1e167ad558f4c8a9504eeeda6/gcc%2Fada%2Fvms_data.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fvms_data.ads?ref=be4c5193199667c1e167ad558f4c8a9504eeeda6", "patch": "@@ -6343,6 +6343,30 @@ package VMS_Data is\n    --\n    --   Replace all tabulations in comments with spaces.\n \n+   S_Pretty_Numbers     : aliased constant S := \"/NUMBER_CASING=\"          &\n+                                              \"AS_DECLARED \"               &\n+                                                 \"-ntD \"                   &\n+                                              \"LOWER_CASE \"                &\n+                                                 \"-ntL \"                   &\n+                                              \"UPPER_CASE \"                &\n+                                                 \"-ntU \"                   &\n+                                              \"MIXED_CASE \"                &\n+                                                 \"-ntM\";\n+   --        /NUMBER_CASING=name-option\n+   --\n+   --   Specify the casing of named number names. If not specified, the casing\n+   --   of these names is defined by the NAME_CASING option. 'name-option'\n+   --   is one of:\n+   --\n+   --      AS_DECLARED       Names are cased as they appear in the declaration\n+   --                        in the source file.\n+   --\n+   --      LOWER_CASE        Names are in lower case.\n+   --\n+   --      UPPER_CASE        Names are in upper case.\n+   --\n+   --      MIXED_CASE        Names are in mixed case.\n+\n    S_Pretty_Output    : aliased constant S := \"/OUTPUT=@\"                  &\n                                               \"-o@\";\n    --        /OUTPUT=file\n@@ -6498,6 +6522,7 @@ package VMS_Data is\n                         S_Pretty_Names            'Access,\n                         S_Pretty_No_Labels        'Access,\n                         S_Pretty_Notabs           'Access,\n+                        S_Pretty_Numbers          'Access,\n                         S_Pretty_Output           'Access,\n                         S_Pretty_Override         'Access,\n                         S_Pretty_Pragma           'Access,"}]}