{"sha": "d1e5d82af819025df9d9a81e8c591690e299924a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDFlNWQ4MmFmODE5MDI1ZGY5ZDlhODFlOGM1OTE2OTBlMjk5OTI0YQ==", "commit": {"author": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2020-10-30T10:47:25Z"}, "committer": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2020-10-30T20:58:08Z"}, "message": "libstdc++: Fix some more warnings in test\n\nlibstdc++-v3/ChangeLog:\n\n\t* testsuite/23_containers/vector/bool/modifiers/insert/31370.cc:\n\tAvoid -Wcatch-value warnings.", "tree": {"sha": "219759755669a2ac56f0c409d41285c58a6e5dc9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/219759755669a2ac56f0c409d41285c58a6e5dc9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d1e5d82af819025df9d9a81e8c591690e299924a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d1e5d82af819025df9d9a81e8c591690e299924a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d1e5d82af819025df9d9a81e8c591690e299924a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d1e5d82af819025df9d9a81e8c591690e299924a/comments", "author": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "667db6dedd80487663c29b21efa942f661b569a8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/667db6dedd80487663c29b21efa942f661b569a8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/667db6dedd80487663c29b21efa942f661b569a8"}], "stats": {"total": 48, "additions": 24, "deletions": 24}, "files": [{"sha": "5a714873f0d71119b847110f12f345c1707ce5c8", "filename": "libstdc++-v3/testsuite/23_containers/vector/bool/modifiers/insert/31370.cc", "status": "modified", "additions": 24, "deletions": 24, "changes": 48, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d1e5d82af819025df9d9a81e8c591690e299924a/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fvector%2Fbool%2Fmodifiers%2Finsert%2F31370.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d1e5d82af819025df9d9a81e8c591690e299924a/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fvector%2Fbool%2Fmodifiers%2Finsert%2F31370.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fvector%2Fbool%2Fmodifiers%2Finsert%2F31370.cc?ref=d1e5d82af819025df9d9a81e8c591690e299924a", "patch": "@@ -59,14 +59,14 @@ void test01()\n     { }\n   catch(std::exception&)\n     { ++myexit; }\n-  \n+\n   // When doubling is too big, but smaller is sufficient, the resize\n   // should do smaller and be happy.  It certainly shouldn't throw\n   // other exceptions or crash.\n   try\n     {\n       std::vector<bool> x;\n-      x.resize(x.max_size() / 2 + 1, false); \n+      x.resize(x.max_size() / 2 + 1, false);\n       for(int i = 0; i < _S_word_bit; ++i)\n \tx.push_back(false);\n       check_cap_ge_size(x);\n@@ -75,23 +75,23 @@ void test01()\n     { }\n   catch(std::exception&)\n     { ++myexit; }\n-  \n+\n   try\n     {\n       std::vector<bool> x;\n-      x.resize(x.max_size() / 2 + 1, false); \n+      x.resize(x.max_size() / 2 + 1, false);\n       x.insert(x.end(), _S_word_bit, false);\n       check_cap_ge_size(x);\n     }\n   catch(std::bad_alloc&)\n     { }\n   catch(std::exception&)\n     { ++myexit; }\n-  \n+\n   try\n     {\n       std::vector<bool> x;\n-      x.resize(x.max_size() / 2 + 1, false); \n+      x.resize(x.max_size() / 2 + 1, false);\n       std::vector<bool> y(_S_word_bit, false);\n       x.insert(x.end(), y.begin(), y.end());\n       check_cap_ge_size(x);\n@@ -106,7 +106,7 @@ void test01()\n   try\n     {\n       std::vector<bool> x;\n-      x.resize(x.max_size() - _S_word_bit, false); \n+      x.resize(x.max_size() - _S_word_bit, false);\n       for(int i = 0; i < _S_word_bit; ++i)\n \tx.push_back(false);\n       check_cap_ge_size(x);\n@@ -115,11 +115,11 @@ void test01()\n     { }\n   catch(std::exception&)\n     { ++myexit; }\n-  \n+\n   try\n     {\n       std::vector<bool> x;\n-      x.resize(x.max_size() - _S_word_bit, false); \n+      x.resize(x.max_size() - _S_word_bit, false);\n       x.insert(x.end(), _S_word_bit, false);\n       check_cap_ge_size(x);\n     }\n@@ -131,7 +131,7 @@ void test01()\n   try\n     {\n       std::vector<bool> x;\n-      x.resize(x.max_size() - _S_word_bit, false); \n+      x.resize(x.max_size() - _S_word_bit, false);\n       std::vector<bool> y(_S_word_bit, false);\n       x.insert(x.end(), y.begin(), y.end());\n       check_cap_ge_size(x);\n@@ -140,51 +140,51 @@ void test01()\n     { }\n   catch(std::exception&)\n     { ++myexit; }\n-  \n+\n   // Attempts to put in more than max_size() items should result in a\n   // length error.\n   try\n     {\n       std::vector<bool> x;\n-      x.resize(x.max_size() - _S_word_bit, false); \n+      x.resize(x.max_size() - _S_word_bit, false);\n       for(int i = 0; i < _S_word_bit + 1; ++i)\n \tx.push_back(false);\n       ++myexit;\n     }\n-  catch(std::bad_alloc)\n+  catch(std::bad_alloc&)\n     { }\n-  catch(std::length_error)\n+  catch(std::length_error&)\n     { }\n-  catch(std::exception)\n+  catch(std::exception&)\n     { ++myexit; }\n-  \n+\n   try\n     {\n       std::vector<bool> x;\n-      x.resize(x.max_size() - _S_word_bit, false); \n+      x.resize(x.max_size() - _S_word_bit, false);\n       x.insert(x.end(), _S_word_bit + 1, false);\n       ++myexit;\n     }\n-  catch(std::bad_alloc)\n+  catch(std::bad_alloc&)\n     { }\n-  catch(std::length_error)\n+  catch(std::length_error&)\n     { }\n-  catch(std::exception)\n+  catch(std::exception&)\n     { ++myexit; }\n \n   try\n     {\n       std::vector<bool> x;\n-      x.resize(x.max_size() - _S_word_bit, false); \n+      x.resize(x.max_size() - _S_word_bit, false);\n       std::vector<bool> y(_S_word_bit + 1, false);\n       x.insert(x.end(), y.begin(), y.end());\n       ++myexit;\n     }\n-  catch(std::bad_alloc)\n+  catch(std::bad_alloc&)\n     { }\n-  catch(std::length_error)\n+  catch(std::length_error&)\n     { }\n-  catch(std::exception)\n+  catch(std::exception&)\n     { ++myexit; }\n \n   VERIFY( !myexit );"}]}