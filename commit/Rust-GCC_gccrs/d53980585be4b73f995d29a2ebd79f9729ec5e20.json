{"sha": "d53980585be4b73f995d29a2ebd79f9729ec5e20", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDUzOTgwNTg1YmU0YjczZjk5NWQyOWEyZWJkNzlmOTcyOWVjNWUyMA==", "commit": {"author": {"name": "Patrick Palka", "email": "ppalka@gcc.gnu.org", "date": "2015-09-22T23:06:31Z"}, "committer": {"name": "Patrick Palka", "email": "ppalka@gcc.gnu.org", "date": "2015-09-22T23:06:31Z"}, "message": "Fix -Wmisleading-indentation false-positive\n\ngcc/c-family/ChangeLog:\n\n\t* c-indentation.c (should_warn_for_misleading_indentation):\n\tFloat out and consolidate the calls to get_visual_column that\n\tare passed guard_exploc as an argument.  Compare\n\tnext_stmt_vis_column with guard_line_first_nws instead of with\n\tbody_line_first_nws.\n\ngcc/testsuite/ChangeLog:\n\n\t* c-c++-common/Wmisleading-indentation.c: Augment test.\n\nFrom-SVN: r228027", "tree": {"sha": "e099691467a47f2147d2919e9f0fd19d7753e672", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e099691467a47f2147d2919e9f0fd19d7753e672"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d53980585be4b73f995d29a2ebd79f9729ec5e20", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d53980585be4b73f995d29a2ebd79f9729ec5e20", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d53980585be4b73f995d29a2ebd79f9729ec5e20", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d53980585be4b73f995d29a2ebd79f9729ec5e20/comments", "author": null, "committer": null, "parents": [{"sha": "6c98d4995ce54ff8bec88a5b40a654007e4eb1bd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6c98d4995ce54ff8bec88a5b40a654007e4eb1bd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6c98d4995ce54ff8bec88a5b40a654007e4eb1bd"}], "stats": {"total": 60, "additions": 45, "deletions": 15}, "files": [{"sha": "e887735f58b972824541b7506e271a49958500dc", "filename": "gcc/c-family/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d53980585be4b73f995d29a2ebd79f9729ec5e20/gcc%2Fc-family%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d53980585be4b73f995d29a2ebd79f9729ec5e20/gcc%2Fc-family%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2FChangeLog?ref=d53980585be4b73f995d29a2ebd79f9729ec5e20", "patch": "@@ -1,3 +1,11 @@\n+2015-09-22  Patrick Palka  <ppalka@gcc.gnu.org>\n+\n+\t* c-indentation.c (should_warn_for_misleading_indentation):\n+\tFloat out and consolidate the calls to get_visual_column that\n+\tare passed guard_exploc as an argument.  Compare\n+\tnext_stmt_vis_column with guard_line_first_nws instead of with\n+\tbody_line_first_nws.\n+\n 2015-09-22  Nathan Sidwell  <nathan@codesourcery.com>\n \n \t* c.opt (Wmultiple-inheritance, Wvirtual-inheritance, Wtemplates,"}, {"sha": "5316316da783f69f6be4b2ce471f18623bb1dbe7", "filename": "gcc/c-family/c-indentation.c", "status": "modified", "additions": 8, "deletions": 15, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d53980585be4b73f995d29a2ebd79f9729ec5e20/gcc%2Fc-family%2Fc-indentation.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d53980585be4b73f995d29a2ebd79f9729ec5e20/gcc%2Fc-family%2Fc-indentation.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2Fc-indentation.c?ref=d53980585be4b73f995d29a2ebd79f9729ec5e20", "patch": "@@ -341,6 +341,8 @@ should_warn_for_misleading_indentation (const token_indent_info &guard_tinfo,\n       unsigned int next_stmt_vis_column;\n       unsigned int body_vis_column;\n       unsigned int body_line_first_nws;\n+      unsigned int guard_vis_column;\n+      unsigned int guard_line_first_nws;\n       /* If we can't determine it, don't issue a warning.  This is sometimes\n \t the case for input files containing #line directives, and these\n \t are often for autogenerated sources (e.g. from .md files), where\n@@ -351,6 +353,11 @@ should_warn_for_misleading_indentation (const token_indent_info &guard_tinfo,\n \t\t\t      &body_vis_column,\n \t\t\t      &body_line_first_nws))\n \treturn false;\n+      if (!get_visual_column (guard_exploc,\n+\t\t\t      &guard_vis_column,\n+\t\t\t      &guard_line_first_nws))\n+\treturn false;\n+\n       if ((body_type != CPP_SEMICOLON\n \t   && next_stmt_vis_column == body_vis_column)\n \t  /* As a special case handle the case where the body is a semicolon\n@@ -365,7 +372,7 @@ should_warn_for_misleading_indentation (const token_indent_info &guard_tinfo,\n \t  || (body_type == CPP_SEMICOLON\n \t      && body_exploc.line > guard_exploc.line\n \t      && body_line_first_nws != body_vis_column\n-\t      && next_stmt_vis_column == body_line_first_nws))\n+\t      && next_stmt_vis_column > guard_line_first_nws))\n \t{\n           /* Don't warn if they are aligned on the same column\n \t     as the guard itself (suggesting autogenerated code that doesn't\n@@ -395,13 +402,6 @@ should_warn_for_misleading_indentation (const token_indent_info &guard_tinfo,\n \t     indentation is misleading).  Using the column of the first\n \t     non-whitespace character on the guard line makes that\n \t     happen.  */\n-\t  unsigned int guard_vis_column;\n-\t  unsigned int guard_line_first_nws;\n-\t  if (!get_visual_column (guard_exploc,\n-\t\t\t\t  &guard_vis_column,\n-\t\t\t\t  &guard_line_first_nws))\n-\t    return false;\n-\n \t  if (guard_line_first_nws == body_vis_column)\n \t    return false;\n \n@@ -462,13 +462,6 @@ should_warn_for_misleading_indentation (const token_indent_info &guard_tinfo,\n \t  {\n \t    if (body_exploc.line == guard_exploc.line)\n \t      {\n-\t\tunsigned int guard_vis_column;\n-\t\tunsigned int guard_line_first_nws;\n-\t\tif (!get_visual_column (guard_exploc,\n-\t\t\t\t\t&guard_vis_column,\n-\t\t\t\t\t&guard_line_first_nws))\n-\t\t  return false;\n-\n \t\tif (next_stmt_vis_column > guard_line_first_nws\n \t\t    || (next_tok_type == CPP_OPEN_BRACE\n \t\t\t&& next_stmt_vis_column == guard_vis_column))"}, {"sha": "404b84cb0d6dc63108441f90680d66e6f1726f3c", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d53980585be4b73f995d29a2ebd79f9729ec5e20/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d53980585be4b73f995d29a2ebd79f9729ec5e20/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=d53980585be4b73f995d29a2ebd79f9729ec5e20", "patch": "@@ -1,3 +1,7 @@\n+2015-09-22  Patrick Palka  <ppalka@gcc.gnu.org>\n+\n+\t* c-c++-common/Wmisleading-indentation.c: Augment test.\n+\n 2015-09-22  Nathan Sidwell  <nathan@codesourcery.com>\n \n \t* g++.dg/diagostic/disable.C: New."}, {"sha": "f61c182c715a970f880ec1205d07607ea48a018a", "filename": "gcc/testsuite/c-c++-common/Wmisleading-indentation.c", "status": "modified", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d53980585be4b73f995d29a2ebd79f9729ec5e20/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2FWmisleading-indentation.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d53980585be4b73f995d29a2ebd79f9729ec5e20/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2FWmisleading-indentation.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2FWmisleading-indentation.c?ref=d53980585be4b73f995d29a2ebd79f9729ec5e20", "patch": "@@ -732,6 +732,13 @@ fn_37 (void)\n       foo (0);\n     }\n \n+  if (flagB) /* { dg-message \"3: ...this 'if' clause\" } */\n+    /* blah */;\n+   { /* { dg-warning \"statement is indented as if\" } */\n+     foo (0);\n+   }\n+\n+\n   if (flagB)\n     ;\n   else; foo (0); /* { dg-warning \"statement is indented as if\" } */\n@@ -785,6 +792,11 @@ fn_37 (void)\n   else if (flagB); /* { dg-message \"8: ...this 'if' clause\" } */\n     foo (2); /* { dg-warning \"statement is indented as if\" } */\n \n+  for (i = 0; /* { dg-message \"3: ...this 'for' clause\" } */\n+       i < 10;\n+       i++);\n+    foo (i); /* { dg-warning \"statement is indented as if\" } */\n+\n #undef EMPTY\n #undef FOR_EACH\n }\n@@ -836,6 +848,12 @@ fn_38 (void)\n   if (flagB)\n     foo (2);\n   foo (3);\n+\n+  for (i = 0;\n+       i < 10;\n+       i++\n+  );\n+  foo (i);\n }\n \n /* The following function contains good indentation which we definitely should\n@@ -844,6 +862,8 @@ fn_38 (void)\n void\n fn_39 (void)\n {\n+  int i;\n+\n   if (flagA)\n     ;\n   if (flagB)\n@@ -856,4 +876,9 @@ fn_39 (void)\n       foo (1);\n   else\n     foo (2);\n+\n+  for (i = 0;\n+       i < 10;\n+       i++);\n+  foo (i);\n }"}]}