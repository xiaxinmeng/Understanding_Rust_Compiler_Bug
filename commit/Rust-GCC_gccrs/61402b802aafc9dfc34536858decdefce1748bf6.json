{"sha": "61402b802aafc9dfc34536858decdefce1748bf6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjE0MDJiODAyYWFmYzlkZmMzNDUzNjg1OGRlY2RlZmNlMTc0OGJmNg==", "commit": {"author": {"name": "Nathan Sidwell", "email": "nathan@codesourcery.com", "date": "2000-12-05T15:35:59Z"}, "committer": {"name": "Nathan Sidwell", "email": "nathan@gcc.gnu.org", "date": "2000-12-05T15:35:59Z"}, "message": "typeck.c (get_delta_difference): If via a virtual base, return zero.\n\ncp:\n\t* typeck.c (get_delta_difference): If via a virtual base,\n\treturn zero.\n\t* cvt.c (cp_convert_to_pointer): If via a virtual base, do no\n\tadjustment.\ntestsuite:\n\t* g++.old-deja/g++.mike/pmf5.C: Remove test.\n\nFrom-SVN: r38039", "tree": {"sha": "936afa192edd41da88d835e592de28663dd4890b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/936afa192edd41da88d835e592de28663dd4890b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/61402b802aafc9dfc34536858decdefce1748bf6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/61402b802aafc9dfc34536858decdefce1748bf6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/61402b802aafc9dfc34536858decdefce1748bf6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/61402b802aafc9dfc34536858decdefce1748bf6/comments", "author": null, "committer": null, "parents": [{"sha": "4839149c4ce8911c2532bb8f32e82d0aa9c28410", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4839149c4ce8911c2532bb8f32e82d0aa9c28410", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4839149c4ce8911c2532bb8f32e82d0aa9c28410"}], "stats": {"total": 78, "additions": 34, "deletions": 44}, "files": [{"sha": "e2d722665477d204cddf08a12f29c11176fec182", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/61402b802aafc9dfc34536858decdefce1748bf6/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/61402b802aafc9dfc34536858decdefce1748bf6/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=61402b802aafc9dfc34536858decdefce1748bf6", "patch": "@@ -1,3 +1,10 @@\n+2000-12-05  Nathan Sidwell  <nathan@codesourcery.com>\n+\n+\t* typeck.c (get_delta_difference): If via a virtual base,\n+\treturn zero.\n+\t* cvt.c (cp_convert_to_pointer): If via a virtual base, do no\n+\tadjustment.\n+\n 2000-12-04  Richard Henderson  <rth@redhat.com>\n \n \t* error.c (dump_tree): Use output_add_string not OB_PUTS."}, {"sha": "1672f26f82bc3916ba457c9787b531abe4059a08", "filename": "gcc/cp/cvt.c", "status": "modified", "additions": 7, "deletions": 5, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/61402b802aafc9dfc34536858decdefce1748bf6/gcc%2Fcp%2Fcvt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/61402b802aafc9dfc34536858decdefce1748bf6/gcc%2Fcp%2Fcvt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcvt.c?ref=61402b802aafc9dfc34536858decdefce1748bf6", "patch": "@@ -209,24 +209,26 @@ cp_convert_to_pointer (type, expr, force)\n           if (virt_binfo)\n \t    {\n \t      if (force)\n-\t        cp_warning (\"pointer to member cast via virtual base `%T' of `%T' will only work for objects of dynamic type `%T'\",\n+\t        cp_warning (\"pointer to member cast via virtual base `%T' of `%T'\",\n \t                    BINFO_TYPE (virt_binfo),\n-                            BINFO_TYPE (BINFO_INHERITANCE_CHAIN (virt_binfo)),\n-                            code == MINUS_EXPR ? b2 : b1);\n+                            BINFO_TYPE (BINFO_INHERITANCE_CHAIN (virt_binfo)));\n               else\n                 {\n \t          cp_error (\"pointer to member cast via virtual base `%T' of `%T'\",\n \t                    BINFO_TYPE (virt_binfo),\n                             BINFO_TYPE (BINFO_INHERITANCE_CHAIN (virt_binfo)));\n \t          return error_mark_node;\n \t        }\n+\t      /* This is a reinterpret cast, whose result is unspecified.\n+\t         We choose to do nothing.  */\n+\t      return build1 (NOP_EXPR, type, expr);\n \t    }\n \t      \n \t  if (TREE_CODE (expr) == PTRMEM_CST)\n \t    expr = cplus_expand_constant (expr);\n \n-\t  if (binfo && ! TREE_VIA_VIRTUAL (binfo))\n-\t    expr = size_binop (code, convert (sizetype,expr),\n+\t  if (binfo)\n+\t    expr = size_binop (code, convert (sizetype, expr),\n \t\t\t       BINFO_OFFSET (binfo));\n \t}\n       else if (TYPE_PTRMEMFUNC_P (type))"}, {"sha": "b426e76748c35a8820d0ae52cc953aa62d0ddf33", "filename": "gcc/cp/typeck.c", "status": "modified", "additions": 16, "deletions": 8, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/61402b802aafc9dfc34536858decdefce1748bf6/gcc%2Fcp%2Ftypeck.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/61402b802aafc9dfc34536858decdefce1748bf6/gcc%2Fcp%2Ftypeck.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Ftypeck.c?ref=61402b802aafc9dfc34536858decdefce1748bf6", "patch": "@@ -5936,31 +5936,39 @@ get_delta_difference (from, to, force)\n       virt_binfo = binfo_from_vbase (binfo);\n       \n       if (virt_binfo)\n-        cp_warning (\"pointer to member cast via virtual base `%T' of `%T' will only work for objects of dynamic type `%T'\",\n-\t            BINFO_TYPE (virt_binfo),\n-\t            BINFO_TYPE (BINFO_INHERITANCE_CHAIN (virt_binfo)), from);\n+        {\n+          /* This is a reinterpret cast, we choose to do nothing. */\n+          cp_warning (\"pointer to member cast via virtual base `%T' of `%T'\",\n+\t              BINFO_TYPE (virt_binfo),\n+\t              BINFO_TYPE (BINFO_INHERITANCE_CHAIN (virt_binfo)));\n+          return delta;\n+        }\n       delta = BINFO_OFFSET (binfo);\n       delta = cp_convert (ptrdiff_type_node, delta);\n-      \n-      return cp_build_binary_op (MINUS_EXPR,\n+      delta = cp_build_binary_op (MINUS_EXPR,\n \t\t\t\t integer_zero_node,\n \t\t\t\t delta);\n+\n+      return delta;\n     }\n \n   virt_binfo = binfo_from_vbase (binfo);\n   if (virt_binfo)\n     {\n+      /* This is a reinterpret cast, we choose to do nothing. */\n       if (force)\n-        cp_warning (\"pointer to member cast via virtual base `%T' of `%T' will only work for objects of dynamic type `%T'\",\n+        cp_warning (\"pointer to member cast via virtual base `%T' of `%T'\",\n                     BINFO_TYPE (virt_binfo),\n-                    BINFO_TYPE (BINFO_INHERITANCE_CHAIN (virt_binfo)), to);\n+                    BINFO_TYPE (BINFO_INHERITANCE_CHAIN (virt_binfo)));\n       else\n \tcp_error (\"pointer to member conversion via virtual base `%T' of `%T'\",\n \t\t  BINFO_TYPE (virt_binfo),\n                   BINFO_TYPE (BINFO_INHERITANCE_CHAIN (virt_binfo)));\n+      return delta;\n     }\n+  delta = BINFO_OFFSET (binfo);\n \n-  return BINFO_OFFSET (binfo);\n+  return cp_convert (ptrdiff_type_node, delta);\n }\n \n /* Return a constructor for the pointer-to-member-function TYPE using"}, {"sha": "54d8296deafd549d0a40d477cc13023fc97ec664", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/61402b802aafc9dfc34536858decdefce1748bf6/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/61402b802aafc9dfc34536858decdefce1748bf6/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=61402b802aafc9dfc34536858decdefce1748bf6", "patch": "@@ -1,3 +1,7 @@\n+2000-12-05  Nathan Sidwell  <nathan@codesourcery.com>\n+\n+\t* g++.old-deja/g++.mike/pmf5.C: Remove test.\n+\n 2000-12-05  Richard Henderson  <rth@redhat.com>\n \n \t* gcc.c-torture/compile/20001205-1.c: New."}, {"sha": "685801a8591a295ec04261f1e2b62606527e8088", "filename": "gcc/testsuite/g++.old-deja/g++.mike/pmf5.C", "status": "removed", "additions": 0, "deletions": 31, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4839149c4ce8911c2532bb8f32e82d0aa9c28410/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.mike%2Fpmf5.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4839149c4ce8911c2532bb8f32e82d0aa9c28410/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.mike%2Fpmf5.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.mike%2Fpmf5.C?ref=4839149c4ce8911c2532bb8f32e82d0aa9c28410", "patch": "@@ -1,31 +0,0 @@\n-// Special g++ Options: -w\n-\n-class A {\n-  int j;\n-};\n-\n-class Space {\n-  int j;\n-};\n-\n-typedef int (A::*pma)();\n-\n-class B : public Space, virtual public A {\n-public:\n-  int i;\n-  int foo () {\n-    return i!=42;\n-  }\n-  B() {\n-    i = 42;\n-  }\n-};\n-\n-int call_base (A* ap, pma pmf) {\n-  return (ap->*pmf)();\n-}\n-\n-int main() {\n-  B b;\n-  return call_base ((A*)&b, (pma)&B::foo);\n-}"}]}