{"sha": "539bd34cb8fa34c20040c9e7181e17431500fe87", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTM5YmQzNGNiOGZhMzRjMjAwNDBjOWU3MTgxZTE3NDMxNTAwZmU4Nw==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@yorick.cygnus.com", "date": "1999-07-09T22:48:57Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "1999-07-09T22:48:57Z"}, "message": "toplev.c (main): Don't complain about saying -gdwarf.\n\n\t* toplev.c (main): Don't complain about saying -gdwarf.\n\t(rest_of_compilation): Remove redundant code.\n\nFrom-SVN: r28049", "tree": {"sha": "80ccce7d9bbbdf52b489c95422d0ff851990b533", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/80ccce7d9bbbdf52b489c95422d0ff851990b533"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/539bd34cb8fa34c20040c9e7181e17431500fe87", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/539bd34cb8fa34c20040c9e7181e17431500fe87", "html_url": "https://github.com/Rust-GCC/gccrs/commit/539bd34cb8fa34c20040c9e7181e17431500fe87", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/539bd34cb8fa34c20040c9e7181e17431500fe87/comments", "author": null, "committer": null, "parents": [{"sha": "570621d5ba905e7ed5248c62317437ac7a3f2206", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/570621d5ba905e7ed5248c62317437ac7a3f2206", "html_url": "https://github.com/Rust-GCC/gccrs/commit/570621d5ba905e7ed5248c62317437ac7a3f2206"}], "stats": {"total": 15, "additions": 8, "deletions": 7}, "files": [{"sha": "64d2e81804319a16bb6794f741791d029a64ad5a", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/539bd34cb8fa34c20040c9e7181e17431500fe87/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/539bd34cb8fa34c20040c9e7181e17431500fe87/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=539bd34cb8fa34c20040c9e7181e17431500fe87", "patch": "@@ -1,3 +1,8 @@\n+Fri Jul  9 22:39:44 1999  Jason Merrill  <jason@yorick.cygnus.com>\n+\n+\t* toplev.c (main): Don't complain about saying -gdwarf.\n+\t(rest_of_compilation): Remove redundant code.\n+\n Fri Jul  9 19:08:55 1999  Jim Wilson  <wilson@cygnus.com>\n \n \t* unroll.c (unroll_loops): Don't delete named CODE_LABELs."}, {"sha": "d60c206aa31ca7a3b2962d3d0e703c77493cddcc", "filename": "gcc/toplev.c", "status": "modified", "additions": 3, "deletions": 7, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/539bd34cb8fa34c20040c9e7181e17431500fe87/gcc%2Ftoplev.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/539bd34cb8fa34c20040c9e7181e17431500fe87/gcc%2Ftoplev.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftoplev.c?ref=539bd34cb8fa34c20040c9e7181e17431500fe87", "patch": "@@ -3656,11 +3656,6 @@ rest_of_compilation (decl)\n \t  close_dump_file (print_rtl, insns);\n \t}\n \n-      /* If we can, defer compiling inlines until EOF.\n-\t save_for_inline_copying can be extremely expensive.  */\n-      if (inlinable && ! decl_function_context (decl))\n-\tDECL_DEFER_OUTPUT (decl) = 1;\n-\n       /* If function is inline, and we don't yet know whether to\n \t compile it by itself, defer decision till end of compilation.\n \t finish_compilation will call rest_of_compilation again\n@@ -3673,7 +3668,8 @@ rest_of_compilation (decl)\n       /* If this is a nested inline, remove ADDRESSOF now so we can\n \t finish compiling ourselves.  Otherwise, wait until EOF.\n \t We have to do this because the purge_addressof transformation\n-\t changes the DECL_RTL for many variables, which confuses integrate.  */\n+\t changes the DECL_RTL for many variables, which confuses integrate.\n+\t Also, save_for_inline_copying can be very expensive.  */\n       if (inlinable)\n \t{\n \t  if (decl_function_context (decl))\n@@ -5247,7 +5243,7 @@ main (argc, argv)\n \t\t      else\n \t\t\tlevel = 2;\n \n-\t\t      if (da_len > 1 && !strncmp (str, \"gdwarf\", da_len))\n+\t\t      if (da_len > 1 && *p && !strncmp (str, \"gdwarf\", da_len))\n \t\t\t{\n \t\t\t  error (\"use -gdwarf -g%d for DWARF v1, level %d\",\n \t\t\t\t level, level);"}]}