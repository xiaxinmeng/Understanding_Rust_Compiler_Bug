{"sha": "2bd8ca2100715c6a8b1f7fa1288cf3166898e1fd", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmJkOGNhMjEwMDcxNWM2YThiMWY3ZmExMjg4Y2YzMTY2ODk4ZTFmZA==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2014-10-03T15:52:03Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2014-10-03T15:52:03Z"}, "message": "re PR c++/63362 (The c++11 triviality-traits need front-end help)\n\n\tPR c++/63362\n\t* tree.c (strip_typedefs): Handle TREE_LIST.\n\nFrom-SVN: r215860", "tree": {"sha": "cc6692c4672018c0eabdcd554b9befa0ffa43ce6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/cc6692c4672018c0eabdcd554b9befa0ffa43ce6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2bd8ca2100715c6a8b1f7fa1288cf3166898e1fd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2bd8ca2100715c6a8b1f7fa1288cf3166898e1fd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2bd8ca2100715c6a8b1f7fa1288cf3166898e1fd", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2bd8ca2100715c6a8b1f7fa1288cf3166898e1fd/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "22806403ec9dff3f819ac87298aca28a7e795cb0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/22806403ec9dff3f819ac87298aca28a7e795cb0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/22806403ec9dff3f819ac87298aca28a7e795cb0"}], "stats": {"total": 29, "additions": 28, "deletions": 1}, "files": [{"sha": "4f91a68824bf1748d8c92650ff864086a74737e3", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2bd8ca2100715c6a8b1f7fa1288cf3166898e1fd/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2bd8ca2100715c6a8b1f7fa1288cf3166898e1fd/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=2bd8ca2100715c6a8b1f7fa1288cf3166898e1fd", "patch": "@@ -1,3 +1,8 @@\n+2014-10-03  Jason Merrill  <jason@redhat.com>\n+\n+\tPR c++/63362\n+\t* tree.c (strip_typedefs): Handle TREE_LIST.\n+\n 2014-10-03  Paolo Carlini  <paolo.carlini@oracle.com>\n \n \t* parser.c (cp_parser_assignment_expression,"}, {"sha": "316c8ff8d40cb1b784930220799ceb8a63e97b63", "filename": "gcc/cp/tree.c", "status": "modified", "additions": 23, "deletions": 1, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2bd8ca2100715c6a8b1f7fa1288cf3166898e1fd/gcc%2Fcp%2Ftree.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2bd8ca2100715c6a8b1f7fa1288cf3166898e1fd/gcc%2Fcp%2Ftree.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Ftree.c?ref=2bd8ca2100715c6a8b1f7fa1288cf3166898e1fd", "patch": "@@ -1201,11 +1201,33 @@ strip_typedefs (tree t)\n {\n   tree result = NULL, type = NULL, t0 = NULL;\n \n-  if (!t || t == error_mark_node || t == TYPE_CANONICAL (t))\n+  if (!t || t == error_mark_node)\n     return t;\n \n+  if (TREE_CODE (t) == TREE_LIST)\n+    {\n+      bool changed = false;\n+      vec<tree,va_gc> *vec = make_tree_vector ();\n+      for (; t; t = TREE_CHAIN (t))\n+\t{\n+\t  gcc_assert (!TREE_PURPOSE (t));\n+\t  tree elt = strip_typedefs (TREE_VALUE (t));\n+\t  if (elt != TREE_VALUE (t))\n+\t    changed = true;\n+\t  vec_safe_push (vec, elt);\n+\t}\n+      tree r = t;\n+      if (changed)\n+\tr = build_tree_list_vec (vec);\n+      release_tree_vector (vec);\n+      return r;\n+    }\n+\n   gcc_assert (TYPE_P (t));\n \n+  if (t == TYPE_CANONICAL (t))\n+    return t;\n+\n   switch (TREE_CODE (t))\n     {\n     case POINTER_TYPE:"}]}