{"sha": "ebdaa81b017726b7d7bd6407c77bcbb1dd97702f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWJkYWE4MWIwMTc3MjZiN2Q3YmQ2NDA3Yzc3YmNiYjFkZDk3NzAyZg==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2014-02-04T14:25:46Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2014-02-04T14:25:46Z"}, "message": "[multiple changes]\n\n2014-02-04  Gary Dismukes  <dismukes@adacore.com>\n\n\t* g-comlin.adb: Minor typo fix.\n\n2014-02-04  Ed Schonberg  <schonberg@adacore.com>\n\n\t* freeze.adb (Freeze_All): Types derived from a formal\n\taccess_to_classwide type do not have a finalization master.\n\n2014-02-04  Robert Dewar  <dewar@adacore.com>\n\n\t* sprint.adb: Minor reformatting.\n\n2014-02-04  Robert Dewar  <dewar@adacore.com>\n\n\t* exp_ch4.adb (Expand_N_Expression_With_Actions): Eliminate\n\tcases where Actions is a null list.\n\t* sinfo.ads (N_Expression_With_Actions): Actions can be\n\ttemporarily empty during semantic analysis, but must be non-empty\n\tin the final expanded tree.\n\nFrom-SVN: r207466", "tree": {"sha": "54d703e76707252f2b3c71da82620899bd029943", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/54d703e76707252f2b3c71da82620899bd029943"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ebdaa81b017726b7d7bd6407c77bcbb1dd97702f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ebdaa81b017726b7d7bd6407c77bcbb1dd97702f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ebdaa81b017726b7d7bd6407c77bcbb1dd97702f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ebdaa81b017726b7d7bd6407c77bcbb1dd97702f/comments", "author": null, "committer": null, "parents": [{"sha": "029ce7a26d8b23eee3096ff9f8424480c7dae6dd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/029ce7a26d8b23eee3096ff9f8424480c7dae6dd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/029ce7a26d8b23eee3096ff9f8424480c7dae6dd"}], "stats": {"total": 60, "additions": 48, "deletions": 12}, "files": [{"sha": "507b318a659dda60b7789e5471f0c3f577c035d5", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ebdaa81b017726b7d7bd6407c77bcbb1dd97702f/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ebdaa81b017726b7d7bd6407c77bcbb1dd97702f/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=ebdaa81b017726b7d7bd6407c77bcbb1dd97702f", "patch": "@@ -1,3 +1,24 @@\n+2014-02-04  Gary Dismukes  <dismukes@adacore.com>\n+\n+\t* g-comlin.adb: Minor typo fix.\n+\n+2014-02-04  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* freeze.adb (Freeze_All): Types derived from a formal\n+\taccess_to_classwide type do not have a finalization master.\n+\n+2014-02-04  Robert Dewar  <dewar@adacore.com>\n+\n+\t* sprint.adb: Minor reformatting.\n+\n+2014-02-04  Robert Dewar  <dewar@adacore.com>\n+\n+\t* exp_ch4.adb (Expand_N_Expression_With_Actions): Eliminate\n+\tcases where Actions is a null list.\n+\t* sinfo.ads (N_Expression_With_Actions): Actions can be\n+\ttemporarily empty during semantic analysis, but must be non-empty\n+\tin the final expanded tree.\n+\n 2014-01-31  Robert Dewar  <dewar@adacore.com>\n \n \t* exp_ch9.adb: Minor reformatting."}, {"sha": "39a80d3ad461fb627c4282b6221210ffed265a9d", "filename": "gcc/ada/exp_ch4.adb", "status": "modified", "additions": 16, "deletions": 4, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ebdaa81b017726b7d7bd6407c77bcbb1dd97702f/gcc%2Fada%2Fexp_ch4.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ebdaa81b017726b7d7bd6407c77bcbb1dd97702f/gcc%2Fada%2Fexp_ch4.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch4.adb?ref=ebdaa81b017726b7d7bd6407c77bcbb1dd97702f", "patch": "@@ -5111,11 +5111,23 @@ package body Exp_Ch4 is\n \n    begin\n       Act := First (Actions (N));\n-      while Present (Act) loop\n-         Process_Single_Action (Act);\n \n-         Next (Act);\n-      end loop;\n+      --  Deal with case where there are no actions. In this case we simply\n+      --  replace the node by its expression since we don't need the actions\n+      --  and the specification of this node does not allow a null action list.\n+\n+      if No (Act) then\n+         Replace (N, Relocate_Node (Expression (N)));\n+\n+      --  Otherwise process the actions as described above\n+\n+      else\n+         loop\n+            Process_Single_Action (Act);\n+            Next (Act);\n+            exit when No (Act);\n+         end loop;\n+      end if;\n    end Expand_N_Expression_With_Actions;\n \n    ----------------------------"}, {"sha": "440d562ce5ce57cdc36e3702305a89eb28bdd550", "filename": "gcc/ada/freeze.adb", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ebdaa81b017726b7d7bd6407c77bcbb1dd97702f/gcc%2Fada%2Ffreeze.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ebdaa81b017726b7d7bd6407c77bcbb1dd97702f/gcc%2Fada%2Ffreeze.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ffreeze.adb?ref=ebdaa81b017726b7d7bd6407c77bcbb1dd97702f", "patch": "@@ -1647,13 +1647,13 @@ package body Freeze is\n          --  where a component type is private and the controlled full type\n          --  occurs after the access type is frozen. Cases that don't need a\n          --  finalization master are generic formal types (the actual type will\n-         --  have it) and types with Java and CIL conventions, since those are\n-         --  used for API bindings. (Are there any other cases that should be\n-         --  excluded here???)\n+         --  have it) and types derived from them,  and types with Java and CIL\n+         --  conventions, since those are used for API bindings.\n+         --  (Are there any other cases that should be excluded here???)\n \n          elsif Is_Access_Type (E)\n            and then Comes_From_Source (E)\n-           and then not Is_Generic_Type (E)\n+           and then not Is_Generic_Type (Root_Type (E))\n            and then Needs_Finalization (Designated_Type (E))\n          then\n             Build_Finalization_Master (E);"}, {"sha": "0f74bbfdc6027c7b8dd3e8ce611ee6c490500bef", "filename": "gcc/ada/g-comlin.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ebdaa81b017726b7d7bd6407c77bcbb1dd97702f/gcc%2Fada%2Fg-comlin.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ebdaa81b017726b7d7bd6407c77bcbb1dd97702f/gcc%2Fada%2Fg-comlin.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-comlin.adb?ref=ebdaa81b017726b7d7bd6407c77bcbb1dd97702f", "patch": "@@ -1683,7 +1683,7 @@ package body GNAT.Command_Line is\n \n                   --  Note: When a Command_Line object is associated with a\n                   --  Command_Line_Config (which is mostly the case for tools\n-                  --  that let users chose the command line before spawning\n+                  --  that let users choose the command line before spawning\n                   --  other tools, for instance IDEs), the configuration of\n                   --  the switches must be taken from the Command_Line_Config.\n "}, {"sha": "2885523512ecf37d9888065addcfd6cc6a514d8b", "filename": "gcc/ada/sinfo.ads", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ebdaa81b017726b7d7bd6407c77bcbb1dd97702f/gcc%2Fada%2Fsinfo.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ebdaa81b017726b7d7bd6407c77bcbb1dd97702f/gcc%2Fada%2Fsinfo.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsinfo.ads?ref=ebdaa81b017726b7d7bd6407c77bcbb1dd97702f", "patch": "@@ -7355,8 +7355,11 @@ package Sinfo is\n       --  Expression (Node3)\n       --  plus fields for expression\n \n-      --  Note: the actions list is always non-null, since we would never have\n-      --  created this node if there weren't some actions.\n+      --  Note: In the final generated tree presented to the code generator,\n+      --  the actions list is always non-null, since there is no point in this\n+      --  node if the actions are Empty. During semantic analysis there are\n+      --  cases where it is convenient to temporarily generate an empty actions\n+      --  list, but the Expander removes such cases.\n \n       --  Note: Expression may be a Null_Statement, in which case the\n       --  N_Expression_With_Actions has type Standard_Void_Type. However some"}, {"sha": "e90947432bb9af739ef0c9e01def4262d902223f", "filename": "gcc/ada/sprint.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ebdaa81b017726b7d7bd6407c77bcbb1dd97702f/gcc%2Fada%2Fsprint.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ebdaa81b017726b7d7bd6407c77bcbb1dd97702f/gcc%2Fada%2Fsprint.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsprint.adb?ref=ebdaa81b017726b7d7bd6407c77bcbb1dd97702f", "patch": "@@ -1131,7 +1131,7 @@ package body Sprint is\n \n             if Present (Identifier (Node))\n               and then (not Has_Created_Identifier (Node)\n-                          or else not Dump_Original_Only)\n+                         or else not Dump_Original_Only)\n             then\n                Write_Rewrite_Str (\"<<<\");\n                Write_Id (Identifier (Node));"}]}