{"sha": "4288fea21277dfd56522378ce31ae2461a299303", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDI4OGZlYTIxMjc3ZGZkNTY1MjIzNzhjZTMxYWUyNDYxYTI5OTMwMw==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2007-01-24T20:56:45Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2007-01-24T20:56:45Z"}, "message": "re PR middle-end/30494 (ICE with VLA and openmp)\n\n\tPR middle-end/30494\n\t* gimplify.c (omp_add_variable): Don't call omp_notice_variable\n\ton TYPE_SIZE_UNIT for GOVD_LOCAL VLAs.\n\n\t* gcc.dg/gomp/pr30494.c: New test.\n\t* g++.dg/gomp/pr30494.C: New test.\n\n\t* testsuite/libgomp.c/pr30494.c: New test.\n\nFrom-SVN: r121132", "tree": {"sha": "75c43a7ce945db56bb7724178a49aded220ffc57", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/75c43a7ce945db56bb7724178a49aded220ffc57"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4288fea21277dfd56522378ce31ae2461a299303", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4288fea21277dfd56522378ce31ae2461a299303", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4288fea21277dfd56522378ce31ae2461a299303", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4288fea21277dfd56522378ce31ae2461a299303/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "3d55c64b495dd49e7b91b451837d93a380764af2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3d55c64b495dd49e7b91b451837d93a380764af2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3d55c64b495dd49e7b91b451837d93a380764af2"}], "stats": {"total": 144, "additions": 142, "deletions": 2}, "files": [{"sha": "8d5d41189c3b46996f51c1775cdbeee19b9d2bf7", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4288fea21277dfd56522378ce31ae2461a299303/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4288fea21277dfd56522378ce31ae2461a299303/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=4288fea21277dfd56522378ce31ae2461a299303", "patch": "@@ -1,5 +1,9 @@\n 2007-01-24  Jakub Jelinek  <jakub@redhat.com>\n \n+\tPR middle-end/30494\n+\t* gimplify.c (omp_add_variable): Don't call omp_notice_variable\n+\ton TYPE_SIZE_UNIT for GOVD_LOCAL VLAs.\n+\n \tPR middle-end/30421\n \t* omp-low.c (lower_omp_for_lastprivate): Add dlist argument.\n \tIf lower_lastprivate_clauses emits some statements, append them"}, {"sha": "be02fb23cbb3d36007b0ee7df9ecaa444a94b2df", "filename": "gcc/gimplify.c", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4288fea21277dfd56522378ce31ae2461a299303/gcc%2Fgimplify.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4288fea21277dfd56522378ce31ae2461a299303/gcc%2Fgimplify.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgimplify.c?ref=4288fea21277dfd56522378ce31ae2461a299303", "patch": "@@ -4505,8 +4505,11 @@ omp_add_variable (struct gimplify_omp_ctx *ctx, tree decl, unsigned int flags)\n       /* We're going to make use of the TYPE_SIZE_UNIT at least in the \n \t alloca statement we generate for the variable, so make sure it\n \t is available.  This isn't automatically needed for the SHARED\n-\t case, since we won't be allocating local storage then.  */\n-      else\n+\t case, since we won't be allocating local storage then.\n+\t For local variables TYPE_SIZE_UNIT might not be gimplified yet,\n+\t in this case omp_notice_variable will be called later\n+\t on when it is gimplified.  */\n+      else if (! (flags & GOVD_LOCAL))\n \tomp_notice_variable (ctx, TYPE_SIZE_UNIT (TREE_TYPE (decl)), true);\n     }\n   else if (lang_hooks.decls.omp_privatize_by_reference (decl))"}, {"sha": "fcb4e7442a6aec773a63946bd4c0ccc8efd93b92", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4288fea21277dfd56522378ce31ae2461a299303/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4288fea21277dfd56522378ce31ae2461a299303/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=4288fea21277dfd56522378ce31ae2461a299303", "patch": "@@ -1,5 +1,9 @@\n 2007-01-24  Jakub Jelinek  <jakub@redhat.com>\n \n+\tPR middle-end/30494\n+\t* gcc.dg/gomp/pr30494.c: New test.\n+\t* g++.dg/gomp/pr30494.C: New test.\n+\n \tPR middle-end/30421\n \t* gcc.dg/gomp/pr30421.c: New test.\n "}, {"sha": "3f2d120585c1f1f1059c4bee863553e6ea9a7f32", "filename": "gcc/testsuite/g++.dg/gomp/pr30494.C", "status": "added", "additions": 30, "deletions": 0, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4288fea21277dfd56522378ce31ae2461a299303/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fgomp%2Fpr30494.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4288fea21277dfd56522378ce31ae2461a299303/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fgomp%2Fpr30494.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fgomp%2Fpr30494.C?ref=4288fea21277dfd56522378ce31ae2461a299303", "patch": "@@ -0,0 +1,30 @@\n+// PR middle-end/30494\n+// { dg-do compile }\n+\n+int\n+foo (int n)\n+{\n+  int i;\n+#pragma omp for\n+  for (i = 0; i < 6; i++)\n+    {\n+      int v[n], w[n * 3 + i];\n+      v[0] = 1;\n+      w[0] = 2;\n+    }\n+  return 0;\n+}\n+\n+int\n+bar (int n)\n+{\n+  int i;\n+#pragma parallel omp for\n+  for (i = 0; i < 6; i++)\n+    {\n+      int v[n], w[n * 3 + i];\n+      v[0] = 1;\n+      w[0] = 2;\n+    }\n+  return 0;\n+}"}, {"sha": "6a042ce69746fbf65192cf2ef575725a6357484a", "filename": "gcc/testsuite/gcc.dg/gomp/pr30494.c", "status": "added", "additions": 30, "deletions": 0, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4288fea21277dfd56522378ce31ae2461a299303/gcc%2Ftestsuite%2Fgcc.dg%2Fgomp%2Fpr30494.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4288fea21277dfd56522378ce31ae2461a299303/gcc%2Ftestsuite%2Fgcc.dg%2Fgomp%2Fpr30494.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fgomp%2Fpr30494.c?ref=4288fea21277dfd56522378ce31ae2461a299303", "patch": "@@ -0,0 +1,30 @@\n+/* PR middle-end/30494 */\n+/* { dg-do compile } */\n+\n+int\n+foo (int n)\n+{\n+  int i;\n+#pragma omp for\n+  for (i = 0; i < 6; i++)\n+    {\n+      int v[n], w[n * 3 + i];\n+      v[0] = 1;\n+      w[0] = 2;\n+    }\n+  return 0;\n+}\n+\n+int\n+bar (int n)\n+{\n+  int i;\n+#pragma parallel omp for\n+  for (i = 0; i < 6; i++)\n+    {\n+      int v[n], w[n * 3 + i];\n+      v[0] = 1;\n+      w[0] = 2;\n+    }\n+  return 0;\n+}"}, {"sha": "e0e21298dfac28f983b267fd3228a62bdd154875", "filename": "libgomp/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4288fea21277dfd56522378ce31ae2461a299303/libgomp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4288fea21277dfd56522378ce31ae2461a299303/libgomp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2FChangeLog?ref=4288fea21277dfd56522378ce31ae2461a299303", "patch": "@@ -1,3 +1,8 @@\n+2007-01-24  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR middle-end/30494\n+\t* testsuite/libgomp.c/pr30494.c: New test.\n+\n 2007-01-15  Tom Tromey  <tromey@redhat.com>\n \n \t* configure: Rebuilt."}, {"sha": "ec6828e440681ec3a14c14530615cc86ea1abd97", "filename": "libgomp/testsuite/libgomp.c/pr30494.c", "status": "added", "additions": 64, "deletions": 0, "changes": 64, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4288fea21277dfd56522378ce31ae2461a299303/libgomp%2Ftestsuite%2Flibgomp.c%2Fpr30494.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4288fea21277dfd56522378ce31ae2461a299303/libgomp%2Ftestsuite%2Flibgomp.c%2Fpr30494.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.c%2Fpr30494.c?ref=4288fea21277dfd56522378ce31ae2461a299303", "patch": "@@ -0,0 +1,64 @@\n+/* PR middle-end/30494 */\n+/* { dg-do run } */\n+\n+#include <omp.h>\n+\n+int errors;\n+\n+int\n+check (int m, int i, int *v, int *w)\n+{\n+  int j;\n+  int n = omp_get_thread_num ();\n+  for (j = 0; j < m; j++)\n+    if (v[j] != j + n)\n+      #pragma omp atomic\n+\terrors += 1;\n+  for (j = 0; j < m * 3 + i; j++)\n+    if (w[j] != j + 10 + n)\n+      #pragma omp atomic\n+\terrors += 1;\n+}\n+\n+int\n+foo (int n, int m)\n+{\n+  int i;\n+#pragma omp for\n+  for (i = 0; i < 6; i++)\n+    {\n+      int v[n], w[n * 3 + i], j;\n+      for (j = 0; j < n; j++)\n+\tv[j] = j + omp_get_thread_num ();\n+      for (j = 0; j < n * 3 + i; j++)\n+\tw[j] = j + 10 + omp_get_thread_num ();\n+      check (m, i, v, w);\n+    }\n+  return 0;\n+}\n+\n+int\n+bar (int n, int m)\n+{\n+  int i;\n+#pragma omp parallel for num_threads (4)\n+  for (i = 0; i < 6; i++)\n+    {\n+      int v[n], w[n * 3 + i], j;\n+      for (j = 0; j < n; j++)\n+\tv[j] = j + omp_get_thread_num ();\n+      for (j = 0; j < n * 3 + i; j++)\n+\tw[j] = j + 10 + omp_get_thread_num ();\n+      check (m, i, v, w);\n+    }\n+  return 0;\n+}\n+\n+int\n+main (void)\n+{\n+#pragma omp parallel num_threads (3)\n+  foo (128, 128);\n+  bar (256, 256);\n+  return 0;\n+}"}]}