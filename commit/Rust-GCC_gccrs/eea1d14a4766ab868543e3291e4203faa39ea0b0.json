{"sha": "eea1d14a4766ab868543e3291e4203faa39ea0b0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWVhMWQxNGE0NzY2YWI4Njg1NDNlMzI5MWU0MjAzZmFhMzllYTBiMA==", "commit": {"author": {"name": "H.J. Lu", "email": "hongjiu.lu@intel.com", "date": "2005-08-20T23:55:07Z"}, "committer": {"name": "H.J. Lu", "email": "hjl@gcc.gnu.org", "date": "2005-08-20T23:55:07Z"}, "message": "re PR target/23485 ([ia64]: Integer dvide by zero doesn't raise a signal)\n\n2005-08-20  H.J. Lu  <hongjiu.lu@intel.com>\n\n\tPR target/23485\n\t* config/ia64/lib1funcs.asm (__divdi3): Check divide by zero.\n\t(__moddi3): Likewise.\n\t(__udivdi3): Likewise.\n\t(__umoddi3): Likewise.\n\t(__divsi3): Likewise.\n\t(__modsi3): Likewise.\n\t(__udivsi3): Likewise.\n\t(__umodsi3): Likewise.\n\nFrom-SVN: r103309", "tree": {"sha": "f9c922511432bf42971368f24365c117c1182407", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f9c922511432bf42971368f24365c117c1182407"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/eea1d14a4766ab868543e3291e4203faa39ea0b0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/eea1d14a4766ab868543e3291e4203faa39ea0b0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/eea1d14a4766ab868543e3291e4203faa39ea0b0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/eea1d14a4766ab868543e3291e4203faa39ea0b0/comments", "author": {"login": "hjl-tools", "id": 1072356, "node_id": "MDQ6VXNlcjEwNzIzNTY=", "avatar_url": "https://avatars.githubusercontent.com/u/1072356?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hjl-tools", "html_url": "https://github.com/hjl-tools", "followers_url": "https://api.github.com/users/hjl-tools/followers", "following_url": "https://api.github.com/users/hjl-tools/following{/other_user}", "gists_url": "https://api.github.com/users/hjl-tools/gists{/gist_id}", "starred_url": "https://api.github.com/users/hjl-tools/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hjl-tools/subscriptions", "organizations_url": "https://api.github.com/users/hjl-tools/orgs", "repos_url": "https://api.github.com/users/hjl-tools/repos", "events_url": "https://api.github.com/users/hjl-tools/events{/privacy}", "received_events_url": "https://api.github.com/users/hjl-tools/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "c348be20ae22608c1b61cc377ae58125b5583c97", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c348be20ae22608c1b61cc377ae58125b5583c97", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c348be20ae22608c1b61cc377ae58125b5583c97"}], "stats": {"total": 36, "additions": 36, "deletions": 0}, "files": [{"sha": "122fa33b0b0c4f02ae73cc13743e0c1f0bba44b1", "filename": "gcc/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eea1d14a4766ab868543e3291e4203faa39ea0b0/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eea1d14a4766ab868543e3291e4203faa39ea0b0/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=eea1d14a4766ab868543e3291e4203faa39ea0b0", "patch": "@@ -1,3 +1,15 @@\n+2005-08-20  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\tPR target/23485\n+\t* config/ia64/lib1funcs.asm (__divdi3): Check divide by zero.\n+\t(__moddi3): Likewise.\n+\t(__udivdi3): Likewise.\n+\t(__umoddi3): Likewise.\n+\t(__divsi3): Likewise.\n+\t(__modsi3): Likewise.\n+\t(__udivsi3): Likewise.\n+\t(__umodsi3): Likewise.\n+\n 2005-08-20  Jakub Jelinek  <jakub@redhat.com>\n \n \t* tree-pass.h (TDF_GRAPH): Define."}, {"sha": "16cb5922aed2a35544d5996bc3faa821b7e4327f", "filename": "gcc/config/ia64/lib1funcs.asm", "status": "modified", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eea1d14a4766ab868543e3291e4203faa39ea0b0/gcc%2Fconfig%2Fia64%2Flib1funcs.asm", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eea1d14a4766ab868543e3291e4203faa39ea0b0/gcc%2Fconfig%2Fia64%2Flib1funcs.asm", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fia64%2Flib1funcs.asm?ref=eea1d14a4766ab868543e3291e4203faa39ea0b0", "patch": "@@ -139,10 +139,13 @@ __divdi3:\n \t// Transfer inputs to FP registers.\n \tsetf.sig f8 = in0\n \tsetf.sig f9 = in1\n+\t// Check divide by zero.\n+\tcmp.ne.unc p0,p7=0,in1\n \t;;\n \t// Convert the inputs to FP, so that they won't be treated as unsigned.\n \tfcvt.xf f8 = f8\n \tfcvt.xf f9 = f9\n+(p7)\tbreak 1\n \t;;\n \t// Compute the reciprocal approximation.\n \tfrcpa.s1 f10, p6 = f8, f9\n@@ -189,10 +192,13 @@ __moddi3:\n \t// Transfer inputs to FP registers.\n \tsetf.sig f14 = in0\n \tsetf.sig f9 = in1\n+\t// Check divide by zero.\n+\tcmp.ne.unc p0,p7=0,in1\n \t;;\n \t// Convert the inputs to FP, so that they won't be treated as unsigned.\n \tfcvt.xf f8 = f14\n \tfcvt.xf f9 = f9\n+(p7)\tbreak 1\n \t;;\n \t// Compute the reciprocal approximation.\n \tfrcpa.s1 f10, p6 = f8, f9\n@@ -243,10 +249,13 @@ __udivdi3:\n \t// Transfer inputs to FP registers.\n \tsetf.sig f8 = in0\n \tsetf.sig f9 = in1\n+\t// Check divide by zero.\n+\tcmp.ne.unc p0,p7=0,in1\n \t;;\n \t// Convert the inputs to FP, to avoid FP software-assist faults.\n \tfcvt.xuf.s1 f8 = f8\n \tfcvt.xuf.s1 f9 = f9\n+(p7)\tbreak 1\n \t;;\n \t// Compute the reciprocal approximation.\n \tfrcpa.s1 f10, p6 = f8, f9\n@@ -293,10 +302,13 @@ __umoddi3:\n \t// Transfer inputs to FP registers.\n \tsetf.sig f14 = in0\n \tsetf.sig f9 = in1\n+\t// Check divide by zero.\n+\tcmp.ne.unc p0,p7=0,in1\n \t;;\n \t// Convert the inputs to FP, to avoid FP software assist faults.\n \tfcvt.xuf.s1 f8 = f14\n \tfcvt.xuf.s1 f9 = f9\n+(p7)\tbreak 1;\n \t;;\n \t// Compute the reciprocal approximation.\n \tfrcpa.s1 f10, p6 = f8, f9\n@@ -345,11 +357,14 @@ __umoddi3:\n \t.proc __divsi3\n __divsi3:\n \t.regstk 2,0,0,0\n+\t// Check divide by zero.\n+\tcmp.ne.unc p0,p7=0,in1\n \tsxt4 in0 = in0\n \tsxt4 in1 = in1\n \t;;\n \tsetf.sig f8 = in0\n \tsetf.sig f9 = in1\n+(p7)\tbreak 1\n \t;;\n \tmov r2 = 0x0ffdd\n \tfcvt.xf f8 = f8\n@@ -394,13 +409,16 @@ __modsi3:\n \t;;\n \tsetf.sig f13 = r32\n \tsetf.sig f9 = r33\n+\t// Check divide by zero.\n+\tcmp.ne.unc p0,p7=0,in1\n \t;;\n \tsub in1 = r0, in1\n \tfcvt.xf f8 = f13\n \tfcvt.xf f9 = f9\n \t;;\n \tsetf.exp f11 = r2\n \tfrcpa.s1 f10, p6 = f8, f9\n+(p7)\tbreak 1\n \t;;\n (p6)\tfmpy.s1 f12 = f8, f10\n (p6)\tfnma.s1 f10 = f9, f10, f1\n@@ -441,9 +459,12 @@ __udivsi3:\n \t;;\n \tsetf.sig f8 = in0\n \tsetf.sig f9 = in1\n+\t// Check divide by zero.\n+\tcmp.ne.unc p0,p7=0,in1\n \t;;\n \tfcvt.xf f8 = f8\n \tfcvt.xf f9 = f9\n+(p7)\tbreak 1\n \t;;\n \tsetf.exp f11 = r2\n \tfrcpa.s1 f10, p6 = f8, f9\n@@ -484,13 +505,16 @@ __umodsi3:\n \t;;\n \tsetf.sig f13 = in0\n \tsetf.sig f9 = in1\n+\t// Check divide by zero.\n+\tcmp.ne.unc p0,p7=0,in1\n \t;;\n \tsub in1 = r0, in1\n \tfcvt.xf f8 = f13\n \tfcvt.xf f9 = f9\n \t;;\n \tsetf.exp f11 = r2\n \tfrcpa.s1 f10, p6 = f8, f9\n+(p7)\tbreak 1;\n \t;;\n (p6)\tfmpy.s1 f12 = f8, f10\n (p6)\tfnma.s1 f10 = f9, f10, f1"}]}