{"sha": "32c65fc062e4ad4f981e4db110436a23f3c8e4f0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzJjNjVmYzA2MmU0YWQ0Zjk4MWU0ZGIxMTA0MzZhMjNmM2M4ZTRmMA==", "commit": {"author": {"name": "Vincent Celier", "email": "celier@adacore.com", "date": "2006-02-15T09:36:23Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2006-02-15T09:36:23Z"}, "message": "a-direct.adb (Duration_To_Time, [...]): New Unchecked_Conversion functions.\n\n2006-02-13  Vincent Celier  <celier@adacore.com>\n\n\t* a-direct.adb (Duration_To_Time, OS_Time_To_Long_Integer): New\n\tUnchecked_Conversion functions.\n\t(Modification_Time): Use direct conversion of OS_Time to Calendar time\n\twhen OpenVMS returns False.\n\n\t* a-dirval-mingw.adb, a-dirval-vms.adb, a-dirval.ads,\n\ta-dirval.adb (OpenVMS): New Boolean function\n\nFrom-SVN: r111051", "tree": {"sha": "be8ecac50daea8c9f799b960e1509c656782b2d6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/be8ecac50daea8c9f799b960e1509c656782b2d6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/32c65fc062e4ad4f981e4db110436a23f3c8e4f0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/32c65fc062e4ad4f981e4db110436a23f3c8e4f0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/32c65fc062e4ad4f981e4db110436a23f3c8e4f0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/32c65fc062e4ad4f981e4db110436a23f3c8e4f0/comments", "author": {"login": "vcelier", "id": 8888056, "node_id": "MDQ6VXNlcjg4ODgwNTY=", "avatar_url": "https://avatars.githubusercontent.com/u/8888056?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vcelier", "html_url": "https://github.com/vcelier", "followers_url": "https://api.github.com/users/vcelier/followers", "following_url": "https://api.github.com/users/vcelier/following{/other_user}", "gists_url": "https://api.github.com/users/vcelier/gists{/gist_id}", "starred_url": "https://api.github.com/users/vcelier/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vcelier/subscriptions", "organizations_url": "https://api.github.com/users/vcelier/orgs", "repos_url": "https://api.github.com/users/vcelier/repos", "events_url": "https://api.github.com/users/vcelier/events{/privacy}", "received_events_url": "https://api.github.com/users/vcelier/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "463af61db6f1632c127219e81b801a5c199cd5f9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/463af61db6f1632c127219e81b801a5c199cd5f9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/463af61db6f1632c127219e81b801a5c199cd5f9"}], "stats": {"total": 71, "additions": 62, "deletions": 9}, "files": [{"sha": "2cd29ed380b8e192bc70781c410c1f0c7153076b", "filename": "gcc/ada/a-direct.adb", "status": "modified", "additions": 31, "deletions": 8, "changes": 39, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/32c65fc062e4ad4f981e4db110436a23f3c8e4f0/gcc%2Fada%2Fa-direct.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/32c65fc062e4ad4f981e4db110436a23f3c8e4f0/gcc%2Fada%2Fa-direct.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-direct.adb?ref=32c65fc062e4ad4f981e4db110436a23f3c8e4f0", "patch": "@@ -34,6 +34,7 @@\n with Ada.Directories.Validity;   use Ada.Directories.Validity;\n with Ada.Strings.Unbounded;      use Ada.Strings.Unbounded;\n with Ada.Unchecked_Deallocation;\n+with Ada.Unchecked_Conversion;\n with Ada.Characters.Handling;    use Ada.Characters.Handling;\n \n with GNAT.Directory_Operations;  use GNAT.Directory_Operations;\n@@ -45,6 +46,13 @@ with System;\n \n package body Ada.Directories is\n \n+   function Duration_To_Time is new\n+     Ada.Unchecked_Conversion (Duration, Ada.Calendar.Time);\n+   function OS_Time_To_Long_Integer is new\n+     Ada.Unchecked_Conversion (OS_Time, Long_Integer);\n+   --  These two unchecked conversions are used in function Modification_Time\n+   --  to convert an OS_Time to a Calendar.Time.\n+\n    type Search_Data is record\n       Is_Valid      : Boolean := False;\n       Name          : Ada.Strings.Unbounded.Unbounded_String;\n@@ -54,10 +62,10 @@ package body Ada.Directories is\n       Entry_Fetched : Boolean := False;\n       Dir_Entry     : Directory_Entry_Type;\n    end record;\n-   --  Comment required ???\n+   --  The current state of a search\n \n    Empty_String : constant String := (1 .. 0 => ASCII.NUL);\n-   --  Comment required ???\n+   --  Empty string, returned by function Extension when there is no extension\n \n    procedure Free is new Ada.Unchecked_Deallocation (Search_Data, Search_Ptr);\n \n@@ -725,6 +733,8 @@ package body Ada.Directories is\n       Minute : Minute_Type;\n       Second : Second_Type;\n \n+      Result : Ada.Calendar.Time;\n+\n    begin\n       --  First, the invalid cases\n \n@@ -733,14 +743,27 @@ package body Ada.Directories is\n \n       else\n          Date := File_Time_Stamp (Name);\n-         --  ???? We need to be able to convert OS_Time to Ada.Calendar.Time\n-         --  For now, use the component of the OS_Time to create the\n-         --  Calendar.Time value.\n \n-         GM_Split (Date, Year, Month, Day, Hour, Minute, Second);\n+         --  ??? This implementation should be revisited when AI 00351 has\n+         --  implemented.\n+\n+         if OpenVMS then\n+\n+            --  On OpenVMS, OS_Time is in local time\n \n-         return Ada.Calendar.Time_Of\n-           (Year, Month, Day, Duration (Second + 60 * (Minute + 60 * Hour)));\n+            GM_Split (Date, Year, Month, Day, Hour, Minute, Second);\n+\n+            return Ada.Calendar.Time_Of\n+              (Year, Month, Day,\n+               Duration (Second + 60 * (Minute + 60 * Hour)));\n+\n+         else\n+            --  On Unix and Windows, OS_Time is in GMT\n+\n+            Result :=\n+              Duration_To_Time (Duration (OS_Time_To_Long_Integer (Date)));\n+            return Result;\n+         end if;\n       end if;\n    end Modification_Time;\n "}, {"sha": "d08355d0e1f2a5082278c14cb7ccab1ba14ec7a0", "filename": "gcc/ada/a-dirval-mingw.adb", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/32c65fc062e4ad4f981e4db110436a23f3c8e4f0/gcc%2Fada%2Fa-dirval-mingw.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/32c65fc062e4ad4f981e4db110436a23f3c8e4f0/gcc%2Fada%2Fa-dirval-mingw.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-dirval-mingw.adb?ref=32c65fc062e4ad4f981e4db110436a23f3c8e4f0", "patch": "@@ -153,4 +153,13 @@ package body Ada.Directories.Validity is\n       end if;\n    end Is_Valid_Simple_Name;\n \n+   -------------\n+   -- OpenVMS --\n+   -------------\n+\n+   function OpenVMS return Boolean is\n+   begin\n+      return False;\n+   end OpenVMS;\n+\n end Ada.Directories.Validity;"}, {"sha": "9948ea2348c069ec4a215cfec271afd881beab38", "filename": "gcc/ada/a-dirval-vms.adb", "status": "modified", "additions": 10, "deletions": 1, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/32c65fc062e4ad4f981e4db110436a23f3c8e4f0/gcc%2Fada%2Fa-dirval-vms.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/32c65fc062e4ad4f981e4db110436a23f3c8e4f0/gcc%2Fada%2Fa-dirval-vms.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-dirval-vms.adb?ref=32c65fc062e4ad4f981e4db110436a23f3c8e4f0", "patch": "@@ -7,7 +7,7 @@\n --                                 B o d y                                  --\n --                              (VMS Version)                               --\n --                                                                          --\n---          Copyright (C) 2004 Free Software Foundation, Inc.               --\n+--          Copyright (C) 2004-2005 Free Software Foundation, Inc.          --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -180,4 +180,13 @@ package body Ada.Directories.Validity is\n       return True;\n    end Is_Valid_Simple_Name;\n \n+   -------------\n+   -- OpenVMS --\n+   -------------\n+\n+   function OpenVMS return Boolean is\n+   begin\n+      return True;\n+   end OpenVMS;\n+\n end Ada.Directories.Validity;"}, {"sha": "d4395e1d15c446e481e20f5e6e3a0d749b9b3ba8", "filename": "gcc/ada/a-dirval.adb", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/32c65fc062e4ad4f981e4db110436a23f3c8e4f0/gcc%2Fada%2Fa-dirval.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/32c65fc062e4ad4f981e4db110436a23f3c8e4f0/gcc%2Fada%2Fa-dirval.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-dirval.adb?ref=32c65fc062e4ad4f981e4db110436a23f3c8e4f0", "patch": "@@ -94,4 +94,13 @@ package body Ada.Directories.Validity is\n       return True;\n    end Is_Valid_Simple_Name;\n \n+   -------------\n+   -- OpenVMS --\n+   -------------\n+\n+   function OpenVMS return Boolean is\n+   begin\n+      return False;\n+   end OpenVMS;\n+\n end Ada.Directories.Validity;"}, {"sha": "b8d5eafc94cfc59c141c5bbd207c5c4f3ab24733", "filename": "gcc/ada/a-dirval.ads", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/32c65fc062e4ad4f981e4db110436a23f3c8e4f0/gcc%2Fada%2Fa-dirval.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/32c65fc062e4ad4f981e4db110436a23f3c8e4f0/gcc%2Fada%2Fa-dirval.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-dirval.ads?ref=32c65fc062e4ad4f981e4db110436a23f3c8e4f0", "patch": "@@ -45,4 +45,7 @@ private package Ada.Directories.Validity is\n    function Is_Path_Name_Case_Sensitive return Boolean;\n    --  Returns True if file and path names are case-sensitive\n \n+   function OpenVMS return Boolean;\n+   --  Return True when OS is OpenVMS\n+\n end Ada.Directories.Validity;"}]}