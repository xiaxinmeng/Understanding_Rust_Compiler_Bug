{"sha": "d8ccfadbf2c350adf05729c6fca41a8d3f866bb1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDhjY2ZhZGJmMmMzNTBhZGYwNTcyOWM2ZmNhNDFhOGQzZjg2NmJiMQ==", "commit": {"author": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2018-10-02T16:45:51Z"}, "committer": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2018-10-02T16:45:51Z"}, "message": "internal/bytealg: support systems that don't have memmem\n    \n    Reviewed-on: https://go-review.googlesource.com/138839\n\nFrom-SVN: r264798", "tree": {"sha": "804831cd20731c0fbc841745e7c40a9b8820fc36", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/804831cd20731c0fbc841745e7c40a9b8820fc36"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d8ccfadbf2c350adf05729c6fca41a8d3f866bb1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d8ccfadbf2c350adf05729c6fca41a8d3f866bb1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d8ccfadbf2c350adf05729c6fca41a8d3f866bb1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d8ccfadbf2c350adf05729c6fca41a8d3f866bb1/comments", "author": null, "committer": null, "parents": [{"sha": "3c609d36a6ed55a5761e4c9245f4ae79a643cefb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3c609d36a6ed55a5761e4c9245f4ae79a643cefb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3c609d36a6ed55a5761e4c9245f4ae79a643cefb"}], "stats": {"total": 36, "additions": 33, "deletions": 3}, "files": [{"sha": "c697cb697be77e98eafd2531a8235faf2f38e3b7", "filename": "gcc/go/gofrontend/MERGE", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8ccfadbf2c350adf05729c6fca41a8d3f866bb1/gcc%2Fgo%2Fgofrontend%2FMERGE", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8ccfadbf2c350adf05729c6fca41a8d3f866bb1/gcc%2Fgo%2Fgofrontend%2FMERGE", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgo%2Fgofrontend%2FMERGE?ref=d8ccfadbf2c350adf05729c6fca41a8d3f866bb1", "patch": "@@ -1,4 +1,4 @@\n-098e36f4ddfcf50aeb34509b5f25b86d7050749c\n+bde5ac90e0b4efdf3e9a4d72af4eb23250608611\n \n The first line of this file holds the git revision number of the last\n merge done from the gofrontend repository."}, {"sha": "d47969dc8f1417785f7f9ffed270a1312239f0d6", "filename": "libgo/config.h.in", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8ccfadbf2c350adf05729c6fca41a8d3f866bb1/libgo%2Fconfig.h.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8ccfadbf2c350adf05729c6fca41a8d3f866bb1/libgo%2Fconfig.h.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fconfig.h.in?ref=d8ccfadbf2c350adf05729c6fca41a8d3f866bb1", "patch": "@@ -141,6 +141,9 @@\n /* Define to 1 if you have the `matherr' function. */\n #undef HAVE_MATHERR\n \n+/* Define to 1 if you have the `memmem' function. */\n+#undef HAVE_MEMMEM\n+\n /* Define to 1 if you have the <memory.h> header file. */\n #undef HAVE_MEMORY_H\n "}, {"sha": "356ad2b2a1604c6b9afc06a5d41b48a8fade6d24", "filename": "libgo/configure", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8ccfadbf2c350adf05729c6fca41a8d3f866bb1/libgo%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8ccfadbf2c350adf05729c6fca41a8d3f866bb1/libgo%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fconfigure?ref=d8ccfadbf2c350adf05729c6fca41a8d3f866bb1", "patch": "@@ -14781,7 +14781,7 @@ else\n fi\n \n \n-for ac_func in strerror_r strsignal wait4 mincore setenv unsetenv dl_iterate_phdr\n+for ac_func in strerror_r strsignal wait4 mincore setenv unsetenv dl_iterate_phdr memmem\n do :\n   as_ac_var=`$as_echo \"ac_cv_func_$ac_func\" | $as_tr_sh`\n ac_fn_c_check_func \"$LINENO\" \"$ac_func\" \"$as_ac_var\""}, {"sha": "e2193a52f4aa0fbf345cee510f397b4a5b511b8e", "filename": "libgo/configure.ac", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8ccfadbf2c350adf05729c6fca41a8d3f866bb1/libgo%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8ccfadbf2c350adf05729c6fca41a8d3f866bb1/libgo%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fconfigure.ac?ref=d8ccfadbf2c350adf05729c6fca41a8d3f866bb1", "patch": "@@ -544,7 +544,7 @@ AC_CHECK_HEADERS([linux/filter.h linux/if_addr.h linux/if_ether.h linux/if_tun.h\n \n AM_CONDITIONAL(HAVE_SYS_MMAN_H, test \"$ac_cv_header_sys_mman_h\" = yes)\n \n-AC_CHECK_FUNCS(strerror_r strsignal wait4 mincore setenv unsetenv dl_iterate_phdr)\n+AC_CHECK_FUNCS(strerror_r strsignal wait4 mincore setenv unsetenv dl_iterate_phdr memmem)\n AM_CONDITIONAL(HAVE_STRERROR_R, test \"$ac_cv_func_strerror_r\" = yes)\n AM_CONDITIONAL(HAVE_WAIT4, test \"$ac_cv_func_wait4\" = yes)\n "}, {"sha": "988dfaacf0c8a3f4216dcaceb193bf3e759227a4", "filename": "libgo/go/internal/bytealg/bytealg.c", "status": "modified", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8ccfadbf2c350adf05729c6fca41a8d3f866bb1/libgo%2Fgo%2Finternal%2Fbytealg%2Fbytealg.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8ccfadbf2c350adf05729c6fca41a8d3f866bb1/libgo%2Fgo%2Finternal%2Fbytealg%2Fbytealg.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Finternal%2Fbytealg%2Fbytealg.c?ref=d8ccfadbf2c350adf05729c6fca41a8d3f866bb1", "patch": "@@ -10,6 +10,33 @@\n #include \"runtime.h\"\n #include \"array.h\"\n \n+#ifndef HAVE_MEMMEM\n+\n+#define memmem goMemmem\n+\n+static const void *goMemmem(const void *in, size_t inl, const void *s, size_t sl) {\n+\tconst char *p;\n+\tchar first;\n+\tconst char *stop;\n+\n+\tif (sl == 0) {\n+\t\treturn in;\n+\t}\n+\tif (inl < sl) {\n+\t\treturn nil;\n+\t}\n+\tfirst = *(const char *)(s);\n+\tstop = (const char *)(in) + (inl - sl);\n+\tfor (p = (const char *)(in); p <= stop; p++) {\n+\t\tif (*p == first && __builtin_memcmp(p + 1, (const char *)(s) + 1, sl - 1) == 0) {\n+\t\t\treturn (const void *)(p);\n+\t\t}\n+\t}\n+\treturn nil;\n+}\n+\n+#endif\n+\n intgo Compare(struct __go_open_array, struct __go_open_array)\n   __asm__(GOSYM_PREFIX \"internal_bytealg.Compare\")\n   __attribute__((no_split_stack));"}]}