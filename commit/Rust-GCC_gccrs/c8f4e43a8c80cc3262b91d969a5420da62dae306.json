{"sha": "c8f4e43a8c80cc3262b91d969a5420da62dae306", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzhmNGU0M2E4YzgwY2MzMjYyYjkxZDk2OWE1NDIwZGE2MmRhZTMwNg==", "commit": {"author": {"name": "Dodji Seketeli", "email": "dodji@redhat.com", "date": "2010-01-07T19:21:46Z"}, "committer": {"name": "Dodji Seketeli", "email": "dodji@gcc.gnu.org", "date": "2010-01-07T19:21:46Z"}, "message": "re PR c++/40155 ([c++0x] variadic template pack problem)\n\nFix PR c++/40155\n\ngcc/cp/ChangeLog:\n\tc++/40155\n\t* pt.c (unify_pack_expansion): In non-deduced contexts, re-use template\n\targuments that were previously deduced.\n\ngcc/testsuite/ChangeLog:\n\tc++/40155\n\t* g++.dg/cpp0x/variadic-unify-2.C: New test.\n\nFrom-SVN: r155705", "tree": {"sha": "c6ba028fdb64ff90cbb07c7f3741fe2f070b3bfb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c6ba028fdb64ff90cbb07c7f3741fe2f070b3bfb"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c8f4e43a8c80cc3262b91d969a5420da62dae306", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c8f4e43a8c80cc3262b91d969a5420da62dae306", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c8f4e43a8c80cc3262b91d969a5420da62dae306", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c8f4e43a8c80cc3262b91d969a5420da62dae306/comments", "author": null, "committer": null, "parents": [{"sha": "f52ac76fa9e3b61eae00ee131d4a1215e641b2e1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f52ac76fa9e3b61eae00ee131d4a1215e641b2e1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f52ac76fa9e3b61eae00ee131d4a1215e641b2e1"}], "stats": {"total": 50, "additions": 32, "deletions": 18}, "files": [{"sha": "07a3486a4042b27b2801ba138452e92e96e9fa57", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c8f4e43a8c80cc3262b91d969a5420da62dae306/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c8f4e43a8c80cc3262b91d969a5420da62dae306/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=c8f4e43a8c80cc3262b91d969a5420da62dae306", "patch": "@@ -1,3 +1,9 @@\n+2010-01-07  Dodji Seketeli  <dodji@redhat.com>\n+\n+\tc++/40155\n+\t* pt.c (unify_pack_expansion): In non-deduced contexts, re-use template\n+\targuments that were previously deduced.\n+\n 2010-01-05  Jason Merrill  <jason@redhat.com>\n \n \t* pt.c (unify_pack_expansion): Handle deduction from init-list."}, {"sha": "f27b931edd824be5f9b4e3e98d90547c8d72f6eb", "filename": "gcc/cp/pt.c", "status": "modified", "additions": 7, "deletions": 18, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c8f4e43a8c80cc3262b91d969a5420da62dae306/gcc%2Fcp%2Fpt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c8f4e43a8c80cc3262b91d969a5420da62dae306/gcc%2Fcp%2Fpt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fpt.c?ref=c8f4e43a8c80cc3262b91d969a5420da62dae306", "patch": "@@ -14074,8 +14074,15 @@ unify_pack_expansion (tree tparms, tree targs, tree packed_parms,\n       tree old_pack = TREE_VALUE (pack);\n       tree new_args = TREE_TYPE (pack);\n       int i, len = TREE_VEC_LENGTH (new_args);\n+      int idx, level;\n       bool nondeduced_p = false;\n \n+      /* By default keep the original deduced argument pack.\n+\t If necessary, more specific code is going to update the\n+\t resulting deduced argument later down in this function.  */\n+      template_parm_level_and_index (TREE_PURPOSE (pack), &level, &idx);\n+      TMPL_ARG (targs, level, idx) = old_pack;\n+\n       /* If NEW_ARGS contains any NULL_TREE entries, we didn't\n \t actually deduce anything.  */\n       for (i = 0; i < len && !nondeduced_p; ++i)\n@@ -14106,10 +14113,6 @@ unify_pack_expansion (tree tparms, tree targs, tree packed_parms,\n       if (!old_pack)\n         {\n           tree result;\n-          int idx, level;\n-          \n-          template_parm_level_and_index (TREE_PURPOSE (pack), &level, &idx);\n-\n           /* Build the deduced *_ARGUMENT_PACK.  */\n           if (TREE_CODE (TREE_PURPOSE (pack)) == TEMPLATE_PARM_INDEX)\n             {\n@@ -14133,12 +14136,7 @@ unify_pack_expansion (tree tparms, tree targs, tree packed_parms,\n         {\n           /* We only had the explicitly-provided arguments before, but\n              now we have a complete set of arguments.  */\n-          int idx, level;\n           tree explicit_args = ARGUMENT_PACK_EXPLICIT_ARGS (old_pack);\n-          template_parm_level_and_index (TREE_PURPOSE (pack), &level, &idx);\n-\n-          /* Keep the original deduced argument pack.  */\n-          TMPL_ARG (targs, level, idx) = old_pack;\n \n           SET_ARGUMENT_PACK_ARGS (old_pack, new_args);\n           ARGUMENT_PACK_INCOMPLETE_P (old_pack) = 1;\n@@ -14148,15 +14146,6 @@ unify_pack_expansion (tree tparms, tree targs, tree packed_parms,\n                                     new_args))\n         /* Inconsistent unification of this parameter pack.  */\n         return 1;\n-      else\n-        {\n-          int idx, level;\n-          \n-          template_parm_level_and_index (TREE_PURPOSE (pack), &level, &idx);\n-\n-          /* Keep the original deduced argument pack.  */\n-          TMPL_ARG (targs, level, idx) = old_pack;\n-        }\n     }\n \n   return 0;"}, {"sha": "f22239663d34fcb3af2494bc075eee2fc824923f", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c8f4e43a8c80cc3262b91d969a5420da62dae306/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c8f4e43a8c80cc3262b91d969a5420da62dae306/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=c8f4e43a8c80cc3262b91d969a5420da62dae306", "patch": "@@ -1,3 +1,8 @@\n+2010-01-07  Dodji Seketeli  <dodji@redhat.com>\n+\n+\tc++/40155\n+\t* g++.dg/cpp0x/variadic-unify-2.C: New test.\n+\n 2010-01-07  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR tree-optimization/42625"}, {"sha": "80c9f5d2c3a19100c38161417be05e44277ec2e6", "filename": "gcc/testsuite/g++.dg/cpp0x/variadic-unify-2.C", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c8f4e43a8c80cc3262b91d969a5420da62dae306/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fvariadic-unify-2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c8f4e43a8c80cc3262b91d969a5420da62dae306/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fvariadic-unify-2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fvariadic-unify-2.C?ref=c8f4e43a8c80cc3262b91d969a5420da62dae306", "patch": "@@ -0,0 +1,14 @@\n+// Contributed by Dodji Seketeli <dodji@redhat.com>\n+// Origin: PR c++/40155\n+// { dg-options \"-std=c++0x\" }\n+// { dg-do compile }\n+\n+template <typename T> struct identity\n+{  typedef T type;  };\n+\n+template <typename RT, typename... A>\n+int forward_call(RT (*) (A...), typename identity<A>::type...);\n+\n+int g (double);\n+\n+int i = forward_call(&g, 0);"}]}