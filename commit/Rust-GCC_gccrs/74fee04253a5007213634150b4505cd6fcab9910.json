{"sha": "74fee04253a5007213634150b4505cd6fcab9910", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzRmZWUwNDI1M2E1MDA3MjEzNjM0MTUwYjQ1MDVjZDZmY2FiOTkxMA==", "commit": {"author": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2019-12-02T11:18:31Z"}, "committer": {"name": "Martin Liska", "email": "marxin@gcc.gnu.org", "date": "2019-12-02T11:18:31Z"}, "message": "Refactor IPA devirt a bit.\n\n2019-12-02  Martin Liska  <mliska@suse.cz>\n\n\t* ipa-devirt.c (warn_types_mismatch): Use get_odr_name_for_type\n\tfunction.\n\t(debug_tree_odr_name): New.\n\t* ipa-utils.h (get_odr_name_for_type): New.\n2019-12-02  Martin Liska  <mliska@suse.cz>\n\n\t* g++.dg/lto/odr-7_0.C: New test.\n\t* g++.dg/lto/odr-7_1.C: New test.\n\nFrom-SVN: r278898", "tree": {"sha": "1e48621652810407242276de2e0a47c7126a3e6a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1e48621652810407242276de2e0a47c7126a3e6a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/74fee04253a5007213634150b4505cd6fcab9910", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/74fee04253a5007213634150b4505cd6fcab9910", "html_url": "https://github.com/Rust-GCC/gccrs/commit/74fee04253a5007213634150b4505cd6fcab9910", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/74fee04253a5007213634150b4505cd6fcab9910/comments", "author": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "f87c23751ab207ee44c2956a444c2c80a797d1fe", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f87c23751ab207ee44c2956a444c2c80a797d1fe", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f87c23751ab207ee44c2956a444c2c80a797d1fe"}], "stats": {"total": 94, "additions": 80, "deletions": 14}, "files": [{"sha": "765e01565d7d83b7ce08ce1a8176c327d83eafd4", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74fee04253a5007213634150b4505cd6fcab9910/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74fee04253a5007213634150b4505cd6fcab9910/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=74fee04253a5007213634150b4505cd6fcab9910", "patch": "@@ -1,3 +1,10 @@\n+2019-12-02  Martin Liska  <mliska@suse.cz>\n+\n+\t* ipa-devirt.c (warn_types_mismatch): Use get_odr_name_for_type\n+\tfunction.\n+\t(debug_tree_odr_name): New.\n+\t* ipa-utils.h (get_odr_name_for_type): New.\n+\n 2019-12-02  Richard Biener  <rguenther@suse.de>\n \n \tPR tree-optimization/92742"}, {"sha": "1017b2a5c7cdcee2de34f558fdb7644f251a7640", "filename": "gcc/ipa-devirt.c", "status": "modified", "additions": 23, "deletions": 14, "changes": 37, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74fee04253a5007213634150b4505cd6fcab9910/gcc%2Fipa-devirt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74fee04253a5007213634150b4505cd6fcab9910/gcc%2Fipa-devirt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fipa-devirt.c?ref=74fee04253a5007213634150b4505cd6fcab9910", "patch": "@@ -1036,20 +1036,13 @@ warn_types_mismatch (tree t1, tree t2, location_t loc1, location_t loc2)\n   /* If types have mangled ODR names and they are different, it is most\n      informative to output those.\n      This also covers types defined in different namespaces.  */\n-  if (TYPE_NAME (mt1) && TYPE_NAME (mt2)\n-      && TREE_CODE (TYPE_NAME (mt1)) == TYPE_DECL\n-      && TREE_CODE (TYPE_NAME (mt2)) == TYPE_DECL\n-      && DECL_ASSEMBLER_NAME_SET_P (TYPE_NAME (mt1))\n-      && DECL_ASSEMBLER_NAME_SET_P (TYPE_NAME (mt2))\n-      && DECL_ASSEMBLER_NAME (TYPE_NAME (mt1))\n-\t != DECL_ASSEMBLER_NAME (TYPE_NAME (mt2)))\n-    {\n-      char *name1 = xstrdup (cplus_demangle\n-\t (IDENTIFIER_POINTER (DECL_ASSEMBLER_NAME (TYPE_NAME (mt1))),\n-\t  DMGL_PARAMS | DMGL_ANSI | DMGL_TYPES));\n-      char *name2 = cplus_demangle\n-\t (IDENTIFIER_POINTER (DECL_ASSEMBLER_NAME (TYPE_NAME (mt2))),\n-\t  DMGL_PARAMS | DMGL_ANSI | DMGL_TYPES);\n+  const char *odr1 = get_odr_name_for_type (mt1);\n+  const char *odr2 = get_odr_name_for_type (mt2);\n+  if (odr1 != NULL && odr2 != NULL && odr1 != odr2)\n+    {\n+      const int opts = DMGL_PARAMS | DMGL_ANSI | DMGL_TYPES;\n+      char *name1 = xstrdup (cplus_demangle (odr1, opts));\n+      char *name2 = xstrdup (cplus_demangle (odr2, opts));\n       if (name1 && name2 && strcmp (name1, name2))\n \t{\n \t  inform (loc_t1,\n@@ -3989,4 +3982,20 @@ make_pass_ipa_devirt (gcc::context *ctxt)\n   return new pass_ipa_devirt (ctxt);\n }\n \n+/* Print ODR name of a TYPE if available.\n+   Use demangler when option DEMANGLE is used.  */\n+\n+DEBUG_FUNCTION void\n+debug_tree_odr_name (tree type, bool demangle)\n+{\n+  const char *odr = get_odr_name_for_type (type);\n+  if (demangle)\n+    {\n+      const int opts = DMGL_PARAMS | DMGL_ANSI | DMGL_TYPES;\n+      odr = cplus_demangle (odr, opts);\n+    }\n+\n+  fprintf (stderr, \"%s\\n\", odr);\n+}\n+\n #include \"gt-ipa-devirt.h\""}, {"sha": "81a5479755888aaf54413cf16b423cafa326bd81", "filename": "gcc/ipa-utils.h", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74fee04253a5007213634150b4505cd6fcab9910/gcc%2Fipa-utils.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74fee04253a5007213634150b4505cd6fcab9910/gcc%2Fipa-utils.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fipa-utils.h?ref=74fee04253a5007213634150b4505cd6fcab9910", "patch": "@@ -248,4 +248,18 @@ odr_type_p (const_tree t)\n          && DECL_ASSEMBLER_NAME_SET_P (TYPE_NAME (t));\n }\n \n+/* If TYPE has mangled ODR name, return it.  Otherwise return NULL.\n+   The function works only when free_lang_data is run.  */\n+\n+inline const char *\n+get_odr_name_for_type (tree type)\n+{\n+  tree type_name = TYPE_NAME (type);\n+  if (type_name == NULL_TREE\n+      || !DECL_ASSEMBLER_NAME_SET_P (type_name))\n+    return NULL;\n+\n+  return IDENTIFIER_POINTER (DECL_ASSEMBLER_NAME (type_name));\n+}\n+\n #endif  /* GCC_IPA_UTILS_H  */"}, {"sha": "bc991e229e979f4f14aedbe9eda9cbc827d1fe06", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74fee04253a5007213634150b4505cd6fcab9910/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74fee04253a5007213634150b4505cd6fcab9910/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=74fee04253a5007213634150b4505cd6fcab9910", "patch": "@@ -1,3 +1,8 @@\n+2019-12-02  Martin Liska  <mliska@suse.cz>\n+\n+\t* g++.dg/lto/odr-7_0.C: New test.\n+\t* g++.dg/lto/odr-7_1.C: New test.\n+\n 2019-11-30  Jan Hubicka  <hubicka@ucw.cz>\n \n \t* g++.dg/lto/inline-crossmodule-1_0.C: fix template."}, {"sha": "e33b8192bc1d8f162f802d72f44c940db006d837", "filename": "gcc/testsuite/g++.dg/lto/odr-7_0.C", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74fee04253a5007213634150b4505cd6fcab9910/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flto%2Fodr-7_0.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74fee04253a5007213634150b4505cd6fcab9910/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flto%2Fodr-7_0.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flto%2Fodr-7_0.C?ref=74fee04253a5007213634150b4505cd6fcab9910", "patch": "@@ -0,0 +1,18 @@\n+// { dg-lto-do link }\n+\n+struct bar // { dg-lto-message \"type name 'bar' should match type name 'foobar<float>'\" }\n+{\n+  int xxx;\n+};\n+\n+struct foo // { dg-lto-warning \"8: 'struct foo' violates the C\\\\+\\\\+ One Definition Rule\" }\n+{\n+  bar a;\n+};\n+\n+foo myfoo2;\n+\n+int\n+main()\n+{\n+}"}, {"sha": "464bd8959006f2535a98f84267a8943bdbb29223", "filename": "gcc/testsuite/g++.dg/lto/odr-7_1.C", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74fee04253a5007213634150b4505cd6fcab9910/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flto%2Fodr-7_1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74fee04253a5007213634150b4505cd6fcab9910/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flto%2Fodr-7_1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flto%2Fodr-7_1.C?ref=74fee04253a5007213634150b4505cd6fcab9910", "patch": "@@ -0,0 +1,13 @@\n+template <class T>\n+struct foobar\n+{\n+  int xxx;\n+  T pes;\n+};\n+\n+struct foo\n+{\n+  foobar<float> a;\n+};\n+\n+foo myfoo;"}]}