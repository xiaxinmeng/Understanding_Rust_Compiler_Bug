{"sha": "87dd8ab0f25e4366beb4c9b2b4699c9bd980ddec", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODdkZDhhYjBmMjVlNDM2NmJlYjRjOWIyYjQ2OTljOWJkOTgwZGRlYw==", "commit": {"author": {"name": "Marcus Shawcroft", "email": "marcus.shawcroft@arm.com", "date": "2013-07-15T11:27:39Z"}, "committer": {"name": "Marcus Shawcroft", "email": "mshawcroft@gcc.gnu.org", "date": "2013-07-15T11:27:39Z"}, "message": "[AArch64] -mcmodel=tiny -fPIC GOT support.\n\nFrom-SVN: r200956", "tree": {"sha": "e6ea8c69cbf6c1fcb3fcfee898a9a19508e9f2d4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e6ea8c69cbf6c1fcb3fcfee898a9a19508e9f2d4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/87dd8ab0f25e4366beb4c9b2b4699c9bd980ddec", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/87dd8ab0f25e4366beb4c9b2b4699c9bd980ddec", "html_url": "https://github.com/Rust-GCC/gccrs/commit/87dd8ab0f25e4366beb4c9b2b4699c9bd980ddec", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/87dd8ab0f25e4366beb4c9b2b4699c9bd980ddec/comments", "author": {"login": "mshawcroft", "id": 6357566, "node_id": "MDQ6VXNlcjYzNTc1NjY=", "avatar_url": "https://avatars.githubusercontent.com/u/6357566?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mshawcroft", "html_url": "https://github.com/mshawcroft", "followers_url": "https://api.github.com/users/mshawcroft/followers", "following_url": "https://api.github.com/users/mshawcroft/following{/other_user}", "gists_url": "https://api.github.com/users/mshawcroft/gists{/gist_id}", "starred_url": "https://api.github.com/users/mshawcroft/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mshawcroft/subscriptions", "organizations_url": "https://api.github.com/users/mshawcroft/orgs", "repos_url": "https://api.github.com/users/mshawcroft/repos", "events_url": "https://api.github.com/users/mshawcroft/events{/privacy}", "received_events_url": "https://api.github.com/users/mshawcroft/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "abc2d8074ae190486e3f620075e25498c1b2791c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/abc2d8074ae190486e3f620075e25498c1b2791c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/abc2d8074ae190486e3f620075e25498c1b2791c"}], "stats": {"total": 50, "additions": 49, "deletions": 1}, "files": [{"sha": "4949bffd6421c17f74419ef9d05805f372b52252", "filename": "gcc/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/87dd8ab0f25e4366beb4c9b2b4699c9bd980ddec/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/87dd8ab0f25e4366beb4c9b2b4699c9bd980ddec/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=87dd8ab0f25e4366beb4c9b2b4699c9bd980ddec", "patch": "@@ -1,3 +1,15 @@\n+2013-07-15  Marcus Shawcroft  <marcus.shawcroft@arm.com>\n+\n+\t* config/aarch64/aarch64-protos.h (aarch64_symbol_type):\n+\tDefine SYMBOL_TINY_GOT, update comment.\n+\t* config/aarch64/aarch64.c\n+\t(aarch64_load_symref_appropriately): Handle SYMBOL_TINY_GOT.\n+\t(aarch64_expand_mov_immediate): Likewise.\n+\t(aarch64_print_operand): Likewise.\n+\t(aarch64_classify_symbol): Likewise.\n+\t* config/aarch64/aarch64.md (UNSPEC_GOTTINYPIC): Define.\n+\t(ldr_got_tiny): Define.\n+\n 2013-07-13  Tobias Grosser  <tobias@grosser.es>\n \n \tPR tree-optimization/54094"}, {"sha": "f19045d07922691c047b8c847fe2e1f326953fa4", "filename": "gcc/config/aarch64/aarch64-protos.h", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/87dd8ab0f25e4366beb4c9b2b4699c9bd980ddec/gcc%2Fconfig%2Faarch64%2Faarch64-protos.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/87dd8ab0f25e4366beb4c9b2b4699c9bd980ddec/gcc%2Fconfig%2Faarch64%2Faarch64-protos.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Faarch64-protos.h?ref=87dd8ab0f25e4366beb4c9b2b4699c9bd980ddec", "patch": "@@ -75,6 +75,17 @@ enum aarch64_symbol_context\n \n    ADR x0, foo\n \n+   SYMBOL_TINY_GOT\n+\n+   Generate symbol accesses via the GOT using a single PC relative\n+   instruction.  To compute the address of symbol foo, we generate:\n+\n+   ldr t0, :got:foo\n+\n+   The value of foo can subsequently read using:\n+\n+   ldrb    t0, [t0]\n+\n    SYMBOL_FORCE_TO_MEM : Global variables are addressed using\n    constant pool.  All variable addresses are spilled into constant\n    pools.  The constant pools themselves are addressed using PC\n@@ -89,6 +100,7 @@ enum aarch64_symbol_type\n   SYMBOL_SMALL_GOTTPREL,\n   SYMBOL_SMALL_TPREL,\n   SYMBOL_TINY_ABSOLUTE,\n+  SYMBOL_TINY_GOT,\n   SYMBOL_FORCE_TO_MEM\n };\n "}, {"sha": "a97f6ae06d224130f8bfb256f621b087a0169f3b", "filename": "gcc/config/aarch64/aarch64.c", "status": "modified", "additions": 14, "deletions": 1, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/87dd8ab0f25e4366beb4c9b2b4699c9bd980ddec/gcc%2Fconfig%2Faarch64%2Faarch64.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/87dd8ab0f25e4366beb4c9b2b4699c9bd980ddec/gcc%2Fconfig%2Faarch64%2Faarch64.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Faarch64.c?ref=87dd8ab0f25e4366beb4c9b2b4699c9bd980ddec", "patch": "@@ -613,6 +613,10 @@ aarch64_load_symref_appropriately (rtx dest, rtx imm,\n \treturn;\n       }\n \n+    case SYMBOL_TINY_GOT:\n+      emit_insn (gen_ldr_got_tiny (dest, imm));\n+      return;\n+\n     default:\n       gcc_unreachable ();\n     }\n@@ -890,6 +894,7 @@ aarch64_expand_mov_immediate (rtx dest, rtx imm)\n         case SYMBOL_SMALL_TLSDESC:\n         case SYMBOL_SMALL_GOTTPREL:\n \tcase SYMBOL_SMALL_GOT:\n+\tcase SYMBOL_TINY_GOT:\n \t  if (offset != const0_rtx)\n \t    {\n \t      gcc_assert(can_create_pseudo_p ());\n@@ -3646,6 +3651,10 @@ aarch64_print_operand (FILE *f, rtx x, char code)\n \t  asm_fprintf (asm_out_file, \":tprel:\");\n \t  break;\n \n+\tcase SYMBOL_TINY_GOT:\n+\t  gcc_unreachable ();\n+\t  break;\n+\n \tdefault:\n \t  break;\n \t}\n@@ -3675,6 +3684,10 @@ aarch64_print_operand (FILE *f, rtx x, char code)\n \t  asm_fprintf (asm_out_file, \":tprel_lo12_nc:\");\n \t  break;\n \n+\tcase SYMBOL_TINY_GOT:\n+\t  asm_fprintf (asm_out_file, \":got:\");\n+\t  break;\n+\n \tdefault:\n \t  break;\n \t}\n@@ -5241,7 +5254,7 @@ aarch64_classify_symbol (rtx x,\n \n \tcase AARCH64_CMODEL_TINY_PIC:\n \t  if (!aarch64_symbol_binds_local_p (x))\n-\t    return SYMBOL_SMALL_GOT;\n+\t    return SYMBOL_TINY_GOT;\n \t  return SYMBOL_TINY_ABSOLUTE;\n \n \tcase AARCH64_CMODEL_SMALL_PIC:"}, {"sha": "229564cc96209fca40f0868dd5337cee13aa73c7", "filename": "gcc/config/aarch64/aarch64.md", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/87dd8ab0f25e4366beb4c9b2b4699c9bd980ddec/gcc%2Fconfig%2Faarch64%2Faarch64.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/87dd8ab0f25e4366beb4c9b2b4699c9bd980ddec/gcc%2Fconfig%2Faarch64%2Faarch64.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Faarch64.md?ref=87dd8ab0f25e4366beb4c9b2b4699c9bd980ddec", "patch": "@@ -80,6 +80,7 @@\n     UNSPEC_FRINTZ\n     UNSPEC_GOTSMALLPIC\n     UNSPEC_GOTSMALLTLS\n+    UNSPEC_GOTTINYPIC\n     UNSPEC_LD2\n     UNSPEC_LD3\n     UNSPEC_LD4\n@@ -3751,6 +3752,16 @@\n    (set_attr \"mode\" \"DI\")]\n )\n \n+(define_insn \"ldr_got_tiny\"\n+  [(set (match_operand:DI 0 \"register_operand\" \"=r\")\n+\t(unspec:DI [(match_operand:DI 1 \"aarch64_valid_symref\" \"S\")]\n+\t\t   UNSPEC_GOTTINYPIC))]\n+  \"\"\n+  \"ldr\\\\t%0, %L1\"\n+  [(set_attr \"v8type\" \"load1\")\n+   (set_attr \"mode\" \"DI\")]\n+)\n+\n (define_insn \"aarch64_load_tp_hard\"\n   [(set (match_operand:DI 0 \"register_operand\" \"=r\")\n \t(unspec:DI [(const_int 0)] UNSPEC_TLS))]"}]}