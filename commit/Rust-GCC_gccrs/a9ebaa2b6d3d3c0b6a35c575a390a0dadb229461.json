{"sha": "a9ebaa2b6d3d3c0b6a35c575a390a0dadb229461", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTllYmFhMmI2ZDNkM2MwYjZhMzVjNTc1YTM5MGEwZGFkYjIyOTQ2MQ==", "commit": {"author": {"name": "Carlo Wood", "email": "carlo@alinoe.com", "date": "2003-08-07T19:54:06Z"}, "committer": {"name": "Benjamin Kosnik", "email": "bkoz@gcc.gnu.org", "date": "2003-08-07T19:54:06Z"}, "message": "demangle.h: Do not use cctype functions that depend on locale.\n\n\n2003-08-07  Carlo Wood  <carlo@alinoe.com>\n\n        * include/bits/demangle.h: Do not use cctype functions that depend\n\ton locale.\n\nFrom-SVN: r70228", "tree": {"sha": "fcadb74708561aa74eb4aa4f6e4c155610b96c0c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/fcadb74708561aa74eb4aa4f6e4c155610b96c0c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a9ebaa2b6d3d3c0b6a35c575a390a0dadb229461", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a9ebaa2b6d3d3c0b6a35c575a390a0dadb229461", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a9ebaa2b6d3d3c0b6a35c575a390a0dadb229461", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a9ebaa2b6d3d3c0b6a35c575a390a0dadb229461/comments", "author": {"login": "CarloWood", "id": 590303, "node_id": "MDQ6VXNlcjU5MDMwMw==", "avatar_url": "https://avatars.githubusercontent.com/u/590303?v=4", "gravatar_id": "", "url": "https://api.github.com/users/CarloWood", "html_url": "https://github.com/CarloWood", "followers_url": "https://api.github.com/users/CarloWood/followers", "following_url": "https://api.github.com/users/CarloWood/following{/other_user}", "gists_url": "https://api.github.com/users/CarloWood/gists{/gist_id}", "starred_url": "https://api.github.com/users/CarloWood/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/CarloWood/subscriptions", "organizations_url": "https://api.github.com/users/CarloWood/orgs", "repos_url": "https://api.github.com/users/CarloWood/repos", "events_url": "https://api.github.com/users/CarloWood/events{/privacy}", "received_events_url": "https://api.github.com/users/CarloWood/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "97b3d0f016d4ce4b973cda213b0cd6835eca6b15", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/97b3d0f016d4ce4b973cda213b0cd6835eca6b15", "html_url": "https://github.com/Rust-GCC/gccrs/commit/97b3d0f016d4ce4b973cda213b0cd6835eca6b15"}], "stats": {"total": 29, "additions": 20, "deletions": 9}, "files": [{"sha": "910f6ad9085286f29d1d9fa0a5a36d0e7449a42f", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a9ebaa2b6d3d3c0b6a35c575a390a0dadb229461/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a9ebaa2b6d3d3c0b6a35c575a390a0dadb229461/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=a9ebaa2b6d3d3c0b6a35c575a390a0dadb229461", "patch": "@@ -1,3 +1,8 @@\n+2003-08-07  Carlo Wood  <carlo@alinoe.com>\n+\n+        * include/bits/demangle.h: Do not use cctype functions that depend\n+\ton locale.\n+\t\n 2003-08-05  Phil Edwards  <pme@gcc.gnu.org>\n \n \t* configure.in:  Rename..."}, {"sha": "cc496513cb9de97141d58cbe39e4756ddcbabb0b", "filename": "libstdc++-v3/include/bits/demangle.h", "status": "modified", "additions": 15, "deletions": 9, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a9ebaa2b6d3d3c0b6a35c575a390a0dadb229461/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fdemangle.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a9ebaa2b6d3d3c0b6a35c575a390a0dadb229461/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fdemangle.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fdemangle.h?ref=a9ebaa2b6d3d3c0b6a35c575a390a0dadb229461", "patch": "@@ -31,10 +31,8 @@\n #ifndef _DEMANGLER_H\n #define _DEMANGLER_H 1\n \n-#include <limits>\n #include <vector>\n #include <string>\n-#include <cctype>\n \n #ifndef _GLIBCXX_DEMANGLER_DEBUG\n #define _GLIBCXX_DEMANGLER_CWDEBUG 0\n@@ -453,6 +451,14 @@ namespace __gnu_cxx\n \t}\n       }\n \n+    // We don't want to depend on locale (or include <cctype> for that matter).\n+    // We also don't want to use \"safe-ctype.h\" because that headerfile is not\n+    // available to the users.\n+    inline bool isdigit(char c) { return c >= '0' && c <= '9'; }\n+    inline bool islower(char c) { return c >= 'a' && c <= 'z'; }\n+    inline bool isupper(char c) { return c >= 'A' && c <= 'Z'; }\n+    inline char tolower(char c) { return isupper(c) ? c - 'A' + 'a' : c; }\n+\n     //\n     // <decimal-integer> ::= 0\n     //                   ::= 1|2|3|4|5|6|7|8|9 [<digit>+]\n@@ -468,15 +474,15 @@ namespace __gnu_cxx\n \t  output += '0';\n \t  eat_current();\n \t}\n-\telse if (!std::isdigit(c))\n+\telse if (!isdigit(c))\n \t  M_result = false;\n \telse\n \t{\n \t  do\n \t  {\n \t    output += c;\n \t  }\n-\t  while (std::isdigit((c = next())));\n+\t  while (isdigit((c = next())));\n \t}\n \treturn M_result;\n       }\n@@ -699,7 +705,7 @@ namespace __gnu_cxx\n \t    default:\n \t      for(;; c = next())\n \t      {\n-\t\tif (std::isdigit(c))\n+\t\tif (isdigit(c))\n \t\t  value = value * 36 + c - '0';\n \t\telse if (isupper(c))\n \t\t  value = value * 36 + c - 'A' + 10;\n@@ -782,7 +788,7 @@ namespace __gnu_cxx\n \tchar c;\n \tif ((c = next()) != '_')\n \t{\n-\t  while(std::isdigit(c))\n+\t  while(isdigit(c))\n \t  {\n \t    value = value * 10 + c - '0';\n \t    c = next();\n@@ -1903,7 +1909,7 @@ namespace __gnu_cxx\n \tint length = current() - '0';\n \tif (length < 1 || length > 9)\n \t  _GLIBCXX_DEMANGLER_FAILURE;\n-\twhile(std::isdigit(next()))\n+\twhile(isdigit(next()))\n \t  length = 10 * length + current() - '0';\n \tchar const* ptr = &M_str[M_pos];\n \tif (length > 11 && !strncmp(ptr, \"_GLOBAL_\", 8) && ptr[9] == 'N'\n@@ -1932,7 +1938,7 @@ namespace __gnu_cxx\n       session<Allocator>::decode_unqualified_name(string_type& output)\n       {\n \t_GLIBCXX_DEMANGLER_DOUT_ENTERING(\"decode_unqualified_name\");\n-\tif (std::isdigit(current()))\n+\tif (isdigit(current()))\n \t{\n \t  if (!M_inside_template_args)\n \t  {\n@@ -2187,7 +2193,7 @@ namespace __gnu_cxx\n \t    eat_current();\n \t    if (!decode_type(first))\n \t      _GLIBCXX_DEMANGLER_FAILURE;\n-\t    while(std::isdigit(current()))\n+\t    while(isdigit(current()))\n \t      eat_current();\n \t    if (eat_current() != '_')\n \t      _GLIBCXX_DEMANGLER_FAILURE;"}]}