{"sha": "7225a4797180b6dc515760b0c123001cda2b66a2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzIyNWE0Nzk3MTgwYjZkYzUxNTc2MGIwYzEyMzAwMWNkYTJiNjZhMg==", "commit": {"author": {"name": "Javier Miranda", "email": "miranda@adacore.com", "date": "2019-08-13T08:06:34Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "pmderodat@gcc.gnu.org", "date": "2019-08-13T08:06:34Z"}, "message": "[Ada] Wrong initialization of Offset_To_Top in secondary DT\n\nThe compiler does not initialize well the runtime information required\nto perform at runtime interface conversions on derivations of tagged\ntypes that implement interfaces and have variable size components.\n\n2019-08-13  Javier Miranda  <miranda@adacore.com>\n\ngcc/ada/\n\n\t* exp_disp.adb (Make_Secondary_DT): Handle record type\n\tderivations that have interface components located at fixed\n\tpositions and interface components located at variable offset.\n\tThe offset of components located at fixed positions is computed\n\tusing the dummy object (similar to the case where all the\n\tinterface components are located at fixed positions).\n\t(Make_DT): Build the dummy object for all tagged types that\n\timplement interface types (that is, build it also for types with\n\tvariable size components), and use the dummy object to compute\n\tthe offset of all tag components located at fixed positions when\n\tinitializing the Interface_Table object.\n\ngcc/testsuite/\n\n\t* gnat.dg/tag2.adb, gnat.dg/tag2_pkg.ads: New testcase.\n\nFrom-SVN: r274335", "tree": {"sha": "c424bf1218d198f8bb88e58717a84c045bb839dc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c424bf1218d198f8bb88e58717a84c045bb839dc"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7225a4797180b6dc515760b0c123001cda2b66a2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7225a4797180b6dc515760b0c123001cda2b66a2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7225a4797180b6dc515760b0c123001cda2b66a2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7225a4797180b6dc515760b0c123001cda2b66a2/comments", "author": {"login": "miranda-adacore", "id": 54413934, "node_id": "MDQ6VXNlcjU0NDEzOTM0", "avatar_url": "https://avatars.githubusercontent.com/u/54413934?v=4", "gravatar_id": "", "url": "https://api.github.com/users/miranda-adacore", "html_url": "https://github.com/miranda-adacore", "followers_url": "https://api.github.com/users/miranda-adacore/followers", "following_url": "https://api.github.com/users/miranda-adacore/following{/other_user}", "gists_url": "https://api.github.com/users/miranda-adacore/gists{/gist_id}", "starred_url": "https://api.github.com/users/miranda-adacore/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/miranda-adacore/subscriptions", "organizations_url": "https://api.github.com/users/miranda-adacore/orgs", "repos_url": "https://api.github.com/users/miranda-adacore/repos", "events_url": "https://api.github.com/users/miranda-adacore/events{/privacy}", "received_events_url": "https://api.github.com/users/miranda-adacore/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "4c19aa690451fbd5d84ce1534a903163e67182e3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4c19aa690451fbd5d84ce1534a903163e67182e3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4c19aa690451fbd5d84ce1534a903163e67182e3"}], "stats": {"total": 133, "additions": 102, "deletions": 31}, "files": [{"sha": "0c34ee8663cc120ec68cc4ac954de8acd682e17e", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7225a4797180b6dc515760b0c123001cda2b66a2/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7225a4797180b6dc515760b0c123001cda2b66a2/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=7225a4797180b6dc515760b0c123001cda2b66a2", "patch": "@@ -1,3 +1,17 @@\n+2019-08-13  Javier Miranda  <miranda@adacore.com>\n+\n+\t* exp_disp.adb (Make_Secondary_DT): Handle record type\n+\tderivations that have interface components located at fixed\n+\tpositions and interface components located at variable offset.\n+\tThe offset of components located at fixed positions is computed\n+\tusing the dummy object (similar to the case where all the\n+\tinterface components are located at fixed positions).\n+\t(Make_DT): Build the dummy object for all tagged types that\n+\timplement interface types (that is, build it also for types with\n+\tvariable size components), and use the dummy object to compute\n+\tthe offset of all tag components located at fixed positions when\n+\tinitializing the Interface_Table object.\n+\n 2019-08-13  Justin Squirek  <squirek@adacore.com>\n \n \t* gnatcmd.adb (GNATCmd): Add constant for new compiler switch"}, {"sha": "8399c4c80daff91c5b9cb64722965265968c5e3b", "filename": "gcc/ada/exp_disp.adb", "status": "modified", "additions": 48, "deletions": 31, "changes": 79, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7225a4797180b6dc515760b0c123001cda2b66a2/gcc%2Fada%2Fexp_disp.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7225a4797180b6dc515760b0c123001cda2b66a2/gcc%2Fada%2Fexp_disp.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_disp.adb?ref=7225a4797180b6dc515760b0c123001cda2b66a2", "patch": "@@ -3764,7 +3764,7 @@ package body Exp_Disp is\n       Dummy_Object : Entity_Id := Empty;\n       --  Extra nonexistent object of type Typ internally used to compute the\n       --  offset to the components that reference secondary dispatch tables.\n-      --  Used to statically allocate secondary dispatch tables.\n+      --  Used to compute the offset of components located at fixed position.\n \n       procedure Check_Premature_Freezing\n         (Subp        : Entity_Id;\n@@ -4191,14 +4191,16 @@ package body Exp_Disp is\n              Prefix         => New_Occurrence_Of (Predef_Prims, Loc),\n              Attribute_Name => Name_Address));\n \n-         --  If the location of the component that references this secondary\n-         --  dispatch table is variable then we have not declared the internal\n-         --  dummy object; the value of Offset_To_Top will be set by the init\n-         --  subprogram.\n+         --  Interface component located at variable offset; the value of\n+         --  Offset_To_Top will be set by the init subprogram.\n \n-         if No (Dummy_Object) then\n+         if No (Dummy_Object)\n+           or else Is_Variable_Size_Record (Etype (Scope (Iface_Comp)))\n+         then\n             Append_To (DT_Aggr_List, Make_Integer_Literal (Loc, 0));\n \n+         --  Interface component located at fixed offset\n+\n          else\n             Append_To (DT_Aggr_List,\n               Make_Op_Minus (Loc,\n@@ -4444,7 +4446,7 @@ package body Exp_Disp is\n            Make_Object_Declaration (Loc,\n              Defining_Identifier => Iface_DT,\n              Aliased_Present     => True,\n-             Constant_Present    => Present (Dummy_Object),\n+             Constant_Present    => Building_Static_Secondary_DT (Typ),\n \n              Object_Definition   =>\n                Make_Subtype_Indication (Loc,\n@@ -4723,9 +4725,10 @@ package body Exp_Disp is\n          end;\n       end if;\n \n-      if Building_Static_Secondary_DT (Typ) then\n+      if not Is_Interface (Typ) and then Has_Interfaces (Typ) then\n          declare\n             Cannot_Have_Null_Disc : Boolean := False;\n+            Dummy_Object_Typ      : constant Entity_Id := Typ;\n             Name_Dummy_Object     : constant Name_Id :=\n                                       New_External_Name (Tname,\n                                         'P', Suffix_Index => -1);\n@@ -4754,19 +4757,20 @@ package body Exp_Disp is\n \n             Set_Is_Internal (Dummy_Object);\n \n-            if not Has_Discriminants (Typ) then\n+            if not Has_Discriminants (Dummy_Object_Typ) then\n                Append_To (Result,\n                  Make_Object_Declaration (Loc,\n                    Defining_Identifier => Dummy_Object,\n                    Constant_Present    => True,\n-                   Object_Definition   => New_Occurrence_Of (Typ, Loc)));\n+                   Object_Definition   => New_Occurrence_Of\n+                                           (Dummy_Object_Typ, Loc)));\n             else\n                declare\n                   Constr_List  : constant List_Id := New_List;\n                   Discrim      : Node_Id;\n \n                begin\n-                  Discrim := First_Discriminant (Typ);\n+                  Discrim := First_Discriminant (Dummy_Object_Typ);\n                   while Present (Discrim) loop\n                      if Is_Discrete_Type (Etype (Discrim)) then\n                         Append_To (Constr_List,\n@@ -4792,7 +4796,8 @@ package body Exp_Disp is\n                       Constant_Present    => True,\n                       Object_Definition   =>\n                         Make_Subtype_Indication (Loc,\n-                          Subtype_Mark => New_Occurrence_Of (Typ, Loc),\n+                          Subtype_Mark =>\n+                            New_Occurrence_Of (Dummy_Object_Typ, Loc),\n                           Constraint   =>\n                             Make_Index_Or_Discriminant_Constraint (Loc,\n                               Constraints => Constr_List))));\n@@ -5500,19 +5505,23 @@ package body Exp_Disp is\n             declare\n                TSD_Ifaces_List  : constant List_Id := New_List;\n                Elmt             : Elmt_Id;\n-               Ifaces_List      : Elist_Id := No_Elist;\n-               Ifaces_Comp_List : Elist_Id := No_Elist;\n-               Ifaces_Tag_List  : Elist_Id;\n                Offset_To_Top    : Node_Id;\n                Sec_DT_Tag       : Node_Id;\n \n+               Dummy_Object_Ifaces_List      : Elist_Id := No_Elist;\n+               Dummy_Object_Ifaces_Comp_List : Elist_Id := No_Elist;\n+               Dummy_Object_Ifaces_Tag_List  : Elist_Id := No_Elist;\n+               --  Interfaces information of the dummy object\n+\n             begin\n                --  Collect interfaces information if we need to compute the\n                --  offset to the top using the dummy object.\n \n                if Present (Dummy_Object) then\n                   Collect_Interfaces_Info (Typ,\n-                    Ifaces_List, Ifaces_Comp_List, Ifaces_Tag_List);\n+                    Ifaces_List     => Dummy_Object_Ifaces_List,\n+                    Components_List => Dummy_Object_Ifaces_Comp_List,\n+                    Tags_List       => Dummy_Object_Ifaces_Tag_List);\n                end if;\n \n                AI := First_Elmt (Typ_Ifaces);\n@@ -5550,8 +5559,8 @@ package body Exp_Disp is\n                          (Node (Next_Elmt (Next_Elmt (Elmt))), Loc);\n                   end if;\n \n-                  --  For static dispatch tables compute Offset_To_Top using\n-                  --  the dummy object.\n+                  --  Use the dummy object to compute Offset_To_Top of\n+                  --  components located at fixed position.\n \n                   if Present (Dummy_Object) then\n                      declare\n@@ -5561,8 +5570,10 @@ package body Exp_Disp is\n                         Iface_Elmt       : Elmt_Id;\n \n                      begin\n-                        Iface_Elmt      := First_Elmt (Ifaces_List);\n-                        Iface_Comp_Elmt := First_Elmt (Ifaces_Comp_List);\n+                        Iface_Elmt :=\n+                          First_Elmt (Dummy_Object_Ifaces_List);\n+                        Iface_Comp_Elmt :=\n+                          First_Elmt (Dummy_Object_Ifaces_Comp_List);\n \n                         while Present (Iface_Elmt) loop\n                            if Node (Iface_Elmt) = Iface then\n@@ -5576,16 +5587,22 @@ package body Exp_Disp is\n \n                         pragma Assert (Present (Iface_Comp));\n \n-                        Offset_To_Top :=\n-                          Make_Op_Minus (Loc,\n-                            Make_Attribute_Reference (Loc,\n-                              Prefix         =>\n-                                Make_Selected_Component (Loc,\n-                                  Prefix        =>\n-                                    New_Occurrence_Of (Dummy_Object, Loc),\n-                                  Selector_Name =>\n-                                    New_Occurrence_Of (Iface_Comp, Loc)),\n-                              Attribute_Name => Name_Position));\n+                        if not\n+                          Is_Variable_Size_Record (Etype (Scope (Iface_Comp)))\n+                        then\n+                           Offset_To_Top :=\n+                             Make_Op_Minus (Loc,\n+                               Make_Attribute_Reference (Loc,\n+                                 Prefix         =>\n+                                   Make_Selected_Component (Loc,\n+                                     Prefix        =>\n+                                       New_Occurrence_Of (Dummy_Object, Loc),\n+                                     Selector_Name =>\n+                                       New_Occurrence_Of (Iface_Comp, Loc)),\n+                                 Attribute_Name => Name_Position));\n+                        else\n+                           Offset_To_Top := Make_Integer_Literal (Loc, 0);\n+                        end if;\n                      end;\n                   else\n                      Offset_To_Top := Make_Integer_Literal (Loc, 0);\n@@ -5634,7 +5651,7 @@ package body Exp_Disp is\n                  Make_Object_Declaration (Loc,\n                    Defining_Identifier => ITable,\n                    Aliased_Present     => True,\n-                   Constant_Present    => Present (Dummy_Object),\n+                   Constant_Present    => Building_Static_Secondary_DT (Typ),\n                    Object_Definition   =>\n                      Make_Subtype_Indication (Loc,\n                        Subtype_Mark =>"}, {"sha": "265d991154fa265c4b681661131ce7e7a08f7de0", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7225a4797180b6dc515760b0c123001cda2b66a2/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7225a4797180b6dc515760b0c123001cda2b66a2/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=7225a4797180b6dc515760b0c123001cda2b66a2", "patch": "@@ -1,3 +1,7 @@\n+2019-08-13  Javier Miranda  <miranda@adacore.com>\n+\n+\t* gnat.dg/tag2.adb, gnat.dg/tag2_pkg.ads: New testcase.\n+\n 2019-08-13  Martin Liska  <mliska@suse.cz>\n \n \t* gcc.dg/tree-prof/ic-misattribution-1.c: Use -fdump-ipa-profile-node."}, {"sha": "77e4842ae97f419f66642808f42c105e6145e715", "filename": "gcc/testsuite/gnat.dg/tag2.adb", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7225a4797180b6dc515760b0c123001cda2b66a2/gcc%2Ftestsuite%2Fgnat.dg%2Ftag2.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7225a4797180b6dc515760b0c123001cda2b66a2/gcc%2Ftestsuite%2Fgnat.dg%2Ftag2.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Ftag2.adb?ref=7225a4797180b6dc515760b0c123001cda2b66a2", "patch": "@@ -0,0 +1,20 @@\n+--  { dg-do run }\n+\n+with Ada.Tags; use Ada.Tags;\n+with Tag2_Pkg; use Tag2_Pkg;\n+\n+procedure Tag2 is\n+\n+   procedure Do_Add_Monitor (Monitor : in out Synchronous_Monitor) is\n+      Name : constant String :=\n+        Expanded_Name (Monitor_Interface'Class (Monitor)'Tag);\n+   begin\n+      if Name /= \"TAG2_PKG.VIRTUAL_INTEGER_REGISTER_REFRESHER\" then\n+         raise Program_Error;\n+      end if;\n+   end;\n+\n+   Obj : Virtual_Integer_Register_Refresher (20);\n+begin\n+   Do_Add_Monitor (Synchronous_Monitor (Obj));\n+end;"}, {"sha": "3fd5923fbf6593637cbc28515bee0b2093791ea6", "filename": "gcc/testsuite/gnat.dg/tag2_pkg.ads", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7225a4797180b6dc515760b0c123001cda2b66a2/gcc%2Ftestsuite%2Fgnat.dg%2Ftag2_pkg.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7225a4797180b6dc515760b0c123001cda2b66a2/gcc%2Ftestsuite%2Fgnat.dg%2Ftag2_pkg.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Ftag2_pkg.ads?ref=7225a4797180b6dc515760b0c123001cda2b66a2", "patch": "@@ -0,0 +1,16 @@\n+package Tag2_Pkg is\n+   type Monitor_Interface is interface;\n+\n+   type Root is abstract tagged null record;\n+\n+   type Monitor_Type is abstract new Root\n+      and Monitor_Interface with null record;\n+\n+   type Synchronous_Monitor (Size : Positive) is new Monitor_Type with\n+   record\n+      Queue : String (1 .. Size);\n+   end record;\n+\n+   type Virtual_Integer_Register_Refresher (Size : Positive) is\n+          new Synchronous_Monitor (Size) with null record;\n+end;"}]}