{"sha": "45805f17035ea374047d014014527ed642bbcd65", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDU4MDVmMTcwMzVlYTM3NDA0N2QwMTQwMTQ1MjdlZDY0MmJiY2Q2NQ==", "commit": {"author": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2013-01-13T19:06:54Z"}, "committer": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2013-01-13T19:06:54Z"}, "message": "sync.md (mem_thread_fence): Mask operands[0] with MEMMODEL_MASK to determine memory model.\n\n\t* config/i386/sync.md (mem_thread_fence): Mask operands[0] with\n\tMEMMODEL_MASK to determine memory model.\n\t(atomic_store<mode>): Ditto from operands[2].\n\t* config/i386/i386.c (ix86_memmodel_check): Declare \"strong\" as bool.\n\nFrom-SVN: r195137", "tree": {"sha": "b14e06c940459c48296503f40eeb5351935ba7fd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b14e06c940459c48296503f40eeb5351935ba7fd"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/45805f17035ea374047d014014527ed642bbcd65", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/45805f17035ea374047d014014527ed642bbcd65", "html_url": "https://github.com/Rust-GCC/gccrs/commit/45805f17035ea374047d014014527ed642bbcd65", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/45805f17035ea374047d014014527ed642bbcd65/comments", "author": null, "committer": null, "parents": [{"sha": "9d60be386676d883d4a8bd2feaace130fb905a0f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9d60be386676d883d4a8bd2feaace130fb905a0f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9d60be386676d883d4a8bd2feaace130fb905a0f"}], "stats": {"total": 22, "additions": 15, "deletions": 7}, "files": [{"sha": "853c2d789c659af410b1b6a15970eec74b0eaca3", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 3, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/45805f17035ea374047d014014527ed642bbcd65/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/45805f17035ea374047d014014527ed642bbcd65/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=45805f17035ea374047d014014527ed642bbcd65", "patch": "@@ -1,8 +1,14 @@\n+2013-01-13  Uros Bizjak  <ubizjak@gmail.com>\n+\n+\t* config/i386/sync.md (mem_thread_fence): Mask operands[0] with\n+\tMEMMODEL_MASK to determine memory model.\n+\t(atomic_store<mode>): Ditto from operands[2].\n+\t* config/i386/i386.c (ix86_memmodel_check): Declare \"strong\" as bool.\n+\n 2013-01-13  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR fortran/55935\n-\t* gimple-fold.c (get_symbol_constant_value): Call\n-\tunshare_expr.\n+\t* gimple-fold.c (get_symbol_constant_value): Call unshare_expr.\n \t(fold_gimple_assign): Don't call unshare_expr here.\n \t(fold_ctor_reference): Call unshare_expr.\n \n@@ -61,7 +67,7 @@\n \n 2013-01-10  Richard Sandiford  <rdsandiford@googlemail.com>\n \n-\tUpdate copyright years\n+\tUpdate copyright years.\n \n 2013-01-10  Vladimir Makarov  <vmakarov@redhat.com>\n "}, {"sha": "4f778c1c85592d2e92d317200d31c3f6163edb4e", "filename": "gcc/config/i386/i386.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/45805f17035ea374047d014014527ed642bbcd65/gcc%2Fconfig%2Fi386%2Fi386.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/45805f17035ea374047d014014527ed642bbcd65/gcc%2Fconfig%2Fi386%2Fi386.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.c?ref=45805f17035ea374047d014014527ed642bbcd65", "patch": "@@ -42082,7 +42082,7 @@ static unsigned HOST_WIDE_INT\n ix86_memmodel_check (unsigned HOST_WIDE_INT val)\n {\n   unsigned HOST_WIDE_INT model = val & MEMMODEL_MASK;\n-  unsigned HOST_WIDE_INT strong;\n+  bool strong;\n \n   if (val & ~(unsigned HOST_WIDE_INT)(IX86_HLE_ACQUIRE|IX86_HLE_RELEASE\n \t\t\t\t      |MEMMODEL_MASK)"}, {"sha": "83198b93c0118e2188a2e345e134ccbddcc7d9f0", "filename": "gcc/config/i386/sync.md", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/45805f17035ea374047d014014527ed642bbcd65/gcc%2Fconfig%2Fi386%2Fsync.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/45805f17035ea374047d014014527ed642bbcd65/gcc%2Fconfig%2Fi386%2Fsync.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fsync.md?ref=45805f17035ea374047d014014527ed642bbcd65", "patch": "@@ -101,9 +101,11 @@\n   [(match_operand:SI 0 \"const_int_operand\")]\t\t;; model\n   \"\"\n {\n+  enum memmodel model = (enum memmodel) (INTVAL (operands[0]) & MEMMODEL_MASK);\n+\n   /* Unless this is a SEQ_CST fence, the i386 memory model is strong\n      enough not to require barriers of any kind.  */\n-  if (INTVAL (operands[0]) == MEMMODEL_SEQ_CST)\n+  if (model == MEMMODEL_SEQ_CST)\n     {\n       rtx (*mfence_insn)(rtx);\n       rtx mem;\n@@ -200,7 +202,7 @@\n \t\t       UNSPEC_MOVA))]\n   \"\"\n {\n-  enum memmodel model = (enum memmodel) INTVAL (operands[2]);\n+  enum memmodel model = (enum memmodel) (INTVAL (operands[2]) & MEMMODEL_MASK);\n \n   if (<MODE>mode == DImode && !TARGET_64BIT)\n     {"}, {"sha": "f567a72683ac10e4ed1c2ee4c7604257b7340ac2", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/45805f17035ea374047d014014527ed642bbcd65/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/45805f17035ea374047d014014527ed642bbcd65/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=45805f17035ea374047d014014527ed642bbcd65", "patch": "@@ -52,7 +52,7 @@\n \n 2013-01-10  Vladimir Makarov  <vmakarov@redhat.com>\n \n-\tPR rtl-optimization/pr55672\n+\tPR rtl-optimization/55672\n \t* gcc.target/i386/pr55672.c: New.\n \n 2013-01-10  Jeff Law  <law@redhat.com>"}]}