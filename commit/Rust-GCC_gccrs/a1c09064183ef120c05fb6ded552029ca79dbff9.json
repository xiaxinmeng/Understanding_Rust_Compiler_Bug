{"sha": "a1c09064183ef120c05fb6ded552029ca79dbff9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTFjMDkwNjQxODNlZjEyMGMwNWZiNmRlZDU1MjAyOWNhNzlkYmZmOQ==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2015-10-23T12:52:53Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2015-10-23T12:52:53Z"}, "message": "[multiple changes]\n\n2015-10-23  Gary Dismukes  <dismukes@adacore.com>\n\n\t* exp_ch6.adb: Minor reformatting.\n\n2015-10-23  Ed Schonberg  <schonberg@adacore.com>\n\n\t* sem_ch12.adb (Check_Formal_Packages): A formal package whose\n\tactual part is (others => <>) os identical to a formal package\n\twith an actual part written as (<>).\n\n2015-10-23  Arnaud Charlet  <charlet@adacore.com>\n\n\t* a-reatim.adb (\"/\"): For Time_Span division convert the operands\n\tto integers and then use integer division, which conforms to\n\tthe rounding required by Ada RM.\n\nFrom-SVN: r229250", "tree": {"sha": "0f22cea6c8d25e3e46429b296274a9f726a2b8ca", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0f22cea6c8d25e3e46429b296274a9f726a2b8ca"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a1c09064183ef120c05fb6ded552029ca79dbff9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a1c09064183ef120c05fb6ded552029ca79dbff9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a1c09064183ef120c05fb6ded552029ca79dbff9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a1c09064183ef120c05fb6ded552029ca79dbff9/comments", "author": null, "committer": null, "parents": [{"sha": "241fac51c3e6a4745d28b36121702325212c3af6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/241fac51c3e6a4745d28b36121702325212c3af6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/241fac51c3e6a4745d28b36121702325212c3af6"}], "stats": {"total": 73, "additions": 62, "deletions": 11}, "files": [{"sha": "eab0d4cf872b349631f20800e05c0d66123f3be8", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a1c09064183ef120c05fb6ded552029ca79dbff9/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a1c09064183ef120c05fb6ded552029ca79dbff9/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=a1c09064183ef120c05fb6ded552029ca79dbff9", "patch": "@@ -1,3 +1,19 @@\n+2015-10-23  Gary Dismukes  <dismukes@adacore.com>\n+\n+\t* exp_ch6.adb: Minor reformatting.\n+\n+2015-10-23  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* sem_ch12.adb (Check_Formal_Packages): A formal package whose\n+\tactual part is (others => <>) os identical to a formal package\n+\twith an actual part written as (<>).\n+\n+2015-10-23  Arnaud Charlet  <charlet@adacore.com>\n+\n+\t* a-reatim.adb (\"/\"): For Time_Span division convert the operands\n+\tto integers and then use integer division, which conforms to\n+\tthe rounding required by Ada RM.\n+\n 2015-10-23  Ed Schonberg  <schonberg@adacore.com>\n \n \t* sem_ch6.adb (Check_Missing_Return): Do not report a missing"}, {"sha": "83ff25bb5edcda647349c6061c3da053e37315c0", "filename": "gcc/ada/a-reatim.adb", "status": "modified", "additions": 14, "deletions": 1, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a1c09064183ef120c05fb6ded552029ca79dbff9/gcc%2Fada%2Fa-reatim.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a1c09064183ef120c05fb6ded552029ca79dbff9/gcc%2Fada%2Fa-reatim.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-reatim.adb?ref=a1c09064183ef120c05fb6ded552029ca79dbff9", "patch": "@@ -31,6 +31,7 @@\n ------------------------------------------------------------------------------\n \n with System.Tasking;\n+with Unchecked_Conversion;\n \n package body Ada.Real_Time with\n   SPARK_Mode => Off\n@@ -117,8 +118,20 @@ is\n    function \"/\" (Left, Right : Time_Span) return Integer is\n       pragma Unsuppress (Overflow_Check);\n       pragma Unsuppress (Division_Check);\n+\n+      --  RM D.8 (27) specifies the effects of operators on Time_Span, and\n+      --  rounding of the division operator in particular, to be the same as\n+      --  effects on integer types. To get the correct rounding we first\n+      --  convert Time_Span to its root type Duration, which is represented as\n+      --  an 64-bit signed integer, and then use integer division.\n+\n+      type Duration_Rep is range -(2 ** 63) .. +((2 ** 63 - 1));\n+\n+      function To_Integer is\n+        new Unchecked_Conversion (Duration, Duration_Rep);\n    begin\n-      return Integer (Duration (Left) / Duration (Right));\n+      return Integer\n+        (To_Integer (Duration (Left)) / To_Integer (Duration (Right)));\n    end \"/\";\n \n    function \"/\" (Left : Time_Span; Right : Integer) return Time_Span is"}, {"sha": "5df60377ea0282a586d4d261fe57f3878a8d5ef5", "filename": "gcc/ada/exp_ch6.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a1c09064183ef120c05fb6ded552029ca79dbff9/gcc%2Fada%2Fexp_ch6.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a1c09064183ef120c05fb6ded552029ca79dbff9/gcc%2Fada%2Fexp_ch6.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch6.adb?ref=a1c09064183ef120c05fb6ded552029ca79dbff9", "patch": "@@ -9598,7 +9598,7 @@ package body Exp_Ch6 is\n    begin\n       Actuals := Parameter_Associations (N);\n \n-      --  Original function amy have been parameterless.\n+      --  Original function may have been parameterless\n \n       if No (Actuals) then\n          Actuals := New_List;"}, {"sha": "e7d279ae7aa4665ca875af35dad98bf37da84e7e", "filename": "gcc/ada/sem_ch12.adb", "status": "modified", "additions": 31, "deletions": 9, "changes": 40, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a1c09064183ef120c05fb6ded552029ca79dbff9/gcc%2Fada%2Fsem_ch12.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a1c09064183ef120c05fb6ded552029ca79dbff9/gcc%2Fada%2Fsem_ch12.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch12.adb?ref=a1c09064183ef120c05fb6ded552029ca79dbff9", "patch": "@@ -2590,6 +2590,7 @@ package body Sem_Ch12 is\n         or else Nkind (First (Generic_Associations (N))) = N_Others_Choice\n       then\n          Associations := False;\n+         Set_Box_Present (N);\n       end if;\n \n       --  If there are no generic associations, the generic parameters appear\n@@ -6127,8 +6128,9 @@ package body Sem_Ch12 is\n    ---------------------------\n \n    procedure Check_Formal_Packages (P_Id : Entity_Id) is\n-      E        : Entity_Id;\n-      Formal_P : Entity_Id;\n+      E           : Entity_Id;\n+      Formal_P    : Entity_Id;\n+      Formal_Decl : Node_Id;\n \n    begin\n       --  Iterate through the declarations in the instance, looking for package\n@@ -6146,15 +6148,35 @@ package body Sem_Ch12 is\n             elsif Nkind (Parent (E)) /= N_Package_Renaming_Declaration then\n                null;\n \n-            elsif not Box_Present (Parent (Associated_Formal_Package (E))) then\n-               Formal_P := Next_Entity (E);\n-               Check_Formal_Package_Instance (Formal_P, E);\n+            else\n+               Formal_Decl := Parent (Associated_Formal_Package (E));\n+\n+               --  Nothing to check if the formal has a box or an\n+               --  others_clause (necessarily with a box).\n+\n+               if Box_Present (Formal_Decl) then\n+                  null;\n+\n+               elsif Nkind (First (Generic_Associations (Formal_Decl))) =\n+                 N_Others_Choice\n+               then\n+                  --  The internal validating package was generated but\n+                  --  formal and instance are known to be compatible..\n+\n+                  Formal_P := Next_Entity (E);\n+                  Remove (Unit_Declaration_Node (Formal_P));\n \n-               --  After checking, remove the internal validating package. It\n-               --  is only needed for semantic checks, and as it may contain\n-               --  generic formal declarations it should not reach gigi.\n+               else\n+                  Formal_P := Next_Entity (E);\n+                  Check_Formal_Package_Instance (Formal_P, E);\n \n-               Remove (Unit_Declaration_Node (Formal_P));\n+                  --  After checking, remove the internal validating package.\n+                  --  It is only needed for semantic checks, and as it may\n+                  --  contain generic formal declarations it should not\n+                  --  reach gigi.\n+\n+                  Remove (Unit_Declaration_Node (Formal_P));\n+               end if;\n             end if;\n          end if;\n "}]}