{"sha": "e7f4682af254be73f91ddbb543bc0bc3fcd27659", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTdmNDY4MmFmMjU0YmU3M2Y5MWRkYmI1NDNiYzBiYzNmY2QyNzY1OQ==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@adacore.com", "date": "2019-07-22T13:57:09Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "pmderodat@gcc.gnu.org", "date": "2019-07-22T13:57:09Z"}, "message": "[Ada] Internal error on iterator for limited private discriminated type\n\nThis patch further extends the short-circuit, aka optimization, present\nin the Check_Constrained_Object procedure used for renaming declarations\nto all limited types, so as to prevent type mismatches downstream in\nmore cases.\n\n2019-07-22  Eric Botcazou  <ebotcazou@adacore.com>\n\ngcc/ada/\n\n\t* sem_ch8.adb (Check_Constrained_Object): Further extend the\n\tspecial optimization to all limited types.\n\ngcc/testsuite/\n\n\t* gnat.dg/iter5.adb, gnat.dg/iter5_pkg.ads: New testcase.\n\nFrom-SVN: r273677", "tree": {"sha": "2941b1fc84b3f7262d5c60e646621c1d9818cbd7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2941b1fc84b3f7262d5c60e646621c1d9818cbd7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e7f4682af254be73f91ddbb543bc0bc3fcd27659", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e7f4682af254be73f91ddbb543bc0bc3fcd27659", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e7f4682af254be73f91ddbb543bc0bc3fcd27659", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e7f4682af254be73f91ddbb543bc0bc3fcd27659/comments", "author": null, "committer": null, "parents": [{"sha": "fd90c808628cead705bb4521d9b8beea0edcf2bf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fd90c808628cead705bb4521d9b8beea0edcf2bf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fd90c808628cead705bb4521d9b8beea0edcf2bf"}], "stats": {"total": 156, "additions": 148, "deletions": 8}, "files": [{"sha": "0081c3e90ade82047c9c1c8d3fa436dbdb37df48", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e7f4682af254be73f91ddbb543bc0bc3fcd27659/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e7f4682af254be73f91ddbb543bc0bc3fcd27659/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=e7f4682af254be73f91ddbb543bc0bc3fcd27659", "patch": "@@ -1,3 +1,8 @@\n+2019-07-22  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* sem_ch8.adb (Check_Constrained_Object): Further extend the\n+\tspecial optimization to all limited types.\n+\n 2019-07-22  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* exp_attr.adb (Expand_N_Attribute_Reference)"}, {"sha": "9caddccf1e47ec43ec9e5a3e7f152866293056b7", "filename": "gcc/ada/sem_ch8.adb", "status": "modified", "additions": 2, "deletions": 8, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e7f4682af254be73f91ddbb543bc0bc3fcd27659/gcc%2Fada%2Fsem_ch8.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e7f4682af254be73f91ddbb543bc0bc3fcd27659/gcc%2Fada%2Fsem_ch8.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch8.adb?ref=e7f4682af254be73f91ddbb543bc0bc3fcd27659", "patch": "@@ -809,18 +809,12 @@ package body Sem_Ch8 is\n             --  in particular with record types with an access discriminant\n             --  that are used in iterators. This is an optimization, but it\n             --  also prevents typing anomalies when the prefix is further\n-            --  expanded. This also applies to limited types with access\n-            --  discriminants.\n+            --  expanded.\n             --  Note that we cannot just use the Is_Limited_Record flag because\n             --  it does not apply to records with limited components, for which\n             --  this syntactic flag is not set, but whose size is also fixed.\n \n-            elsif (Is_Record_Type (Typ) and then Is_Limited_Type (Typ))\n-              or else\n-                (Ekind (Typ) = E_Limited_Private_Type\n-                  and then Has_Discriminants (Typ)\n-                  and then Is_Access_Type (Etype (First_Discriminant (Typ))))\n-            then\n+            elsif Is_Limited_Type (Typ) then\n                null;\n \n             else"}, {"sha": "94fc5796deaef6c38dc2274e53a63945a4ad69c3", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e7f4682af254be73f91ddbb543bc0bc3fcd27659/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e7f4682af254be73f91ddbb543bc0bc3fcd27659/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=e7f4682af254be73f91ddbb543bc0bc3fcd27659", "patch": "@@ -1,3 +1,7 @@\n+2019-07-22  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* gnat.dg/iter5.adb, gnat.dg/iter5_pkg.ads: New testcase.\n+\n 2019-07-22  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* gnat.dg/enum_val1.adb: New testcase."}, {"sha": "b17b43517c4fc06dd5191c9361909daf85847ed1", "filename": "gcc/testsuite/gnat.dg/iter5.adb", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e7f4682af254be73f91ddbb543bc0bc3fcd27659/gcc%2Ftestsuite%2Fgnat.dg%2Fiter5.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e7f4682af254be73f91ddbb543bc0bc3fcd27659/gcc%2Ftestsuite%2Fgnat.dg%2Fiter5.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Fiter5.adb?ref=e7f4682af254be73f91ddbb543bc0bc3fcd27659", "patch": "@@ -0,0 +1,10 @@\n+--  { dg-do compile }\n+\n+with Iter5_Pkg;\n+\n+procedure Iter5 is\n+begin\n+   for The_Filename of Iter5_Pkg.Iterator_For (\"C:\\Program_Files\") loop\n+      null;\n+   end loop;\n+end Iter5;"}, {"sha": "0449f3bd0af7393f2cd8aba93b9142bb0f70132a", "filename": "gcc/testsuite/gnat.dg/iter5_pkg.ads", "status": "added", "additions": 127, "deletions": 0, "changes": 127, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e7f4682af254be73f91ddbb543bc0bc3fcd27659/gcc%2Ftestsuite%2Fgnat.dg%2Fiter5_pkg.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e7f4682af254be73f91ddbb543bc0bc3fcd27659/gcc%2Ftestsuite%2Fgnat.dg%2Fiter5_pkg.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Fiter5_pkg.ads?ref=e7f4682af254be73f91ddbb543bc0bc3fcd27659", "patch": "@@ -0,0 +1,127 @@\n+with Ada.Calendar;\n+with Ada.Directories;\n+\n+with Ada.Iterator_Interfaces;\n+\n+package Iter5_Pkg is\n+\n+  subtype Size is Ada.Directories.File_Size;\n+\n+  type Folder is new String;\n+\n+  function Folder_Separator return Character;\n+\n+  function \"+\" (Directory : String) return Folder;\n+\n+  function \"+\" (Left, Right : String) return Folder;\n+\n+  function \"+\" (Left  : Folder;\n+                Right : String) return Folder;\n+\n+  function Composure (Directory : Folder;\n+                      Filename  : String;\n+                      Extension : String) return String;\n+\n+  function Composure (Directory : String;\n+                      Filename  : String;\n+                      Extension : String) return String;\n+  -- no exception\n+\n+  function Base_Name_Of (Name : String) return String\n+    renames Ada.Directories.Base_Name;\n+\n+  function Extension_Of (Name : String) return String\n+    renames Ada.Directories.Extension;\n+\n+  function Containing_Directory_Of (Name : String) return String\n+    renames Ada.Directories.Containing_Directory;\n+\n+  function Exists (Name : String) return Boolean;\n+  -- no exception\n+\n+  function Size_Of (Name : String) return Size renames Ada.Directories.Size;\n+\n+  function Directory_Exists (Name : String) return Boolean;\n+  -- no exception\n+\n+  function Modification_Time_Of (Name : String) return Ada.Calendar.Time\n+    renames Ada.Directories.Modification_Time;\n+\n+  function Is_Newer (The_Name  : String;\n+                     Than_Name : String) return Boolean;\n+\n+  procedure Delete (Name : String);\n+  -- no exception if no existance\n+\n+  procedure Create_Directory (Path : String);\n+  -- creates the whole directory path\n+\n+  procedure Delete_Directory (Name : String); -- including contents\n+  -- no exception if no existance\n+\n+  procedure Rename (Old_Name : String;\n+                    New_Name : String) renames Ada.Directories.Rename;\n+\n+  procedure Copy (Source_Name   : String;\n+                  Target_Name   : String;\n+                  Form          : String := \"\")\n+    renames Ada.Directories.Copy_File;\n+\n+  function Is_Leaf_Directory (Directory : String) return Boolean;\n+\n+  procedure Iterate_Over_Leaf_Directories (From_Directory : String;\n+                                           Iterator : access procedure\n+                                             (Leaf_Directory : String));\n+\n+  function Found_Directory (Simple_Name  : String;\n+                            In_Directory : String) return String;\n+\n+  Not_Found : exception;\n+\n+  Name_Error : exception renames Ada.Directories.Name_Error;\n+  Use_Error  : exception renames Ada.Directories.Use_Error;\n+\n+  ------------------------\n+  -- File Iterator Loop --\n+  ------------------------\n+  -- Example:\n+  --          for The_Filename of Iter5_Pkg.Iterator_For (\"C:\\Program_Files\") loop\n+  --            Log.Write (The_Filename);\n+  --          end loop;\n+\n+  type Item (Name_Length : Natural) is limited private;\n+\n+  function Iterator_For (Name : String) return Item;\n+\n+private\n+  type Cursor;\n+\n+  function Has_More (Data : Cursor) return Boolean;\n+\n+  package List_Iterator_Interfaces is\n+    new Ada.Iterator_Interfaces (Cursor, Has_More);\n+\n+  function Iterate (The_Item : Item)\n+    return List_Iterator_Interfaces.Forward_Iterator'class;\n+\n+  type Cursor_Data is record\n+    Has_More : Boolean := False;\n+    Position : Ada.Directories.Search_Type;\n+  end record;\n+\n+  type Cursor is access all Cursor_Data;\n+\n+  function Constant_Reference (The_Item     : aliased Item;\n+                               Unused_Index : Cursor) return String;\n+\n+  type Item (Name_Length : Natural) is tagged limited record\n+    Name   : String(1..Name_Length);\n+    Actual : Ada.Directories.Directory_Entry_Type;\n+    Data   : aliased Cursor_Data;\n+  end record\n+  with\n+    Constant_Indexing => Constant_Reference,\n+    Default_Iterator  => Iterate,\n+    Iterator_Element  => String;\n+\n+end Iter5_Pkg;"}]}