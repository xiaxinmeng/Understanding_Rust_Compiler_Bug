{"sha": "107715f026335f9cf0d71d045296572f5416c919", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTA3NzE1ZjAyNjMzNWY5Y2YwZDcxZDA0NTI5NjU3MmY1NDE2YzkxOQ==", "commit": {"author": {"name": "Anatoly Sokolov", "email": "aesok@post.ru", "date": "2012-04-02T18:45:13Z"}, "committer": {"name": "Anatoly Sokolov", "email": "aesok@gcc.gnu.org", "date": "2012-04-02T18:45:13Z"}, "message": "arm.h (PREFERRED_RELOAD_CLASS): Remove.\n\n\t* config/arm/arm.h (PREFERRED_RELOAD_CLASS): Remove.\n\t* config/arm/arm.c (TARGET_PREFERRED_RELOAD_CLASS): Define.\n\t(arm_preferred_reload_class): New function.\n\nFrom-SVN: r186092", "tree": {"sha": "bec8e813c8fbbfd351ada6f86191d1643f311ea7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/bec8e813c8fbbfd351ada6f86191d1643f311ea7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/107715f026335f9cf0d71d045296572f5416c919", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/107715f026335f9cf0d71d045296572f5416c919", "html_url": "https://github.com/Rust-GCC/gccrs/commit/107715f026335f9cf0d71d045296572f5416c919", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/107715f026335f9cf0d71d045296572f5416c919/comments", "author": null, "committer": null, "parents": [{"sha": "efe2a4b70ed4c418cdfd84b69dad411f0d9c4e1d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/efe2a4b70ed4c418cdfd84b69dad411f0d9c4e1d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/efe2a4b70ed4c418cdfd84b69dad411f0d9c4e1d"}], "stats": {"total": 44, "additions": 34, "deletions": 10}, "files": [{"sha": "8a341dd06ed76cdd71d8db9c25032bf2f38eb5c0", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/107715f026335f9cf0d71d045296572f5416c919/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/107715f026335f9cf0d71d045296572f5416c919/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=107715f026335f9cf0d71d045296572f5416c919", "patch": "@@ -1,3 +1,9 @@\n+2012-04-02  Anatoly Sokolov  <aesok@post.ru>\n+\n+\t* config/arm/arm.h (PREFERRED_RELOAD_CLASS): Remove.\n+\t* config/arm/arm.c (TARGET_PREFERRED_RELOAD_CLASS): Define.\n+\t(arm_preferred_reload_class): New function.\n+\n 2012-04-02  Richard Guenther  <rguenther@suse.de>\n \n \tPR tree-optimization/52756"}, {"sha": "5522fc12172d245ebc9a81a9a07004b14ccc1c4c", "filename": "gcc/config/arm/arm.c", "status": "modified", "additions": 28, "deletions": 0, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/107715f026335f9cf0d71d045296572f5416c919/gcc%2Fconfig%2Farm%2Farm.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/107715f026335f9cf0d71d045296572f5416c919/gcc%2Fconfig%2Farm%2Farm.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm.c?ref=107715f026335f9cf0d71d045296572f5416c919", "patch": "@@ -82,6 +82,7 @@ static int arm_legitimate_index_p (enum machine_mode, rtx, RTX_CODE, int);\n static int thumb2_legitimate_index_p (enum machine_mode, rtx, int);\n static int thumb1_base_register_rtx_p (rtx, enum machine_mode, int);\n static rtx arm_legitimize_address (rtx, rtx, enum machine_mode);\n+static reg_class_t arm_preferred_reload_class (rtx, reg_class_t);\n static rtx thumb_legitimize_address (rtx, rtx, enum machine_mode);\n inline static int thumb1_index_register_rtx_p (rtx, int);\n static bool arm_legitimate_address_p (enum machine_mode, rtx, bool);\n@@ -576,6 +577,9 @@ static const struct attribute_spec arm_attribute_table[] =\n #undef TARGET_LEGITIMATE_ADDRESS_P\n #define TARGET_LEGITIMATE_ADDRESS_P\tarm_legitimate_address_p\n \n+#undef TARGET_PREFERRED_RELOAD_CLASS\n+#define TARGET_PREFERRED_RELOAD_CLASS arm_preferred_reload_class\n+\n #undef TARGET_INVALID_PARAMETER_TYPE\n #define TARGET_INVALID_PARAMETER_TYPE arm_invalid_parameter_type\n \n@@ -6226,6 +6230,30 @@ arm_legitimate_address_p (enum machine_mode mode, rtx x, bool strict_p)\n     return thumb1_legitimate_address_p (mode, x, strict_p);\n }\n \n+/* Worker function for TARGET_PREFERRED_RELOAD_CLASS.\n+\n+   Given an rtx X being reloaded into a reg required to be\n+   in class CLASS, return the class of reg to actually use.\n+   In general this is just CLASS, but for the Thumb core registers and\n+   immediate constants we prefer a LO_REGS class or a subset.  */\n+\n+static reg_class_t\n+arm_preferred_reload_class (rtx x ATTRIBUTE_UNUSED, reg_class_t rclass)\n+{\n+  if (TARGET_32BIT)\n+    return rclass;\n+  else\n+    {\n+      if (rclass == GENERAL_REGS\n+\t  || rclass == HI_REGS\n+\t  || rclass == NO_REGS\n+\t  || rclass == STACK_REG)\n+\treturn LO_REGS;\n+      else\n+\treturn rclass;\n+    }\n+}\n+\n /* Build the SYMBOL_REF for __tls_get_addr.  */\n \n static GTY(()) rtx tls_get_addr_libfunc;"}, {"sha": "c6b4cc09a46b6ce3da325cdf4c15a7fd405fd4ef", "filename": "gcc/config/arm/arm.h", "status": "modified", "additions": 0, "deletions": 10, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/107715f026335f9cf0d71d045296572f5416c919/gcc%2Fconfig%2Farm%2Farm.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/107715f026335f9cf0d71d045296572f5416c919/gcc%2Fconfig%2Farm%2Farm.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm.h?ref=107715f026335f9cf0d71d045296572f5416c919", "patch": "@@ -1151,16 +1151,6 @@ enum reg_class\n #define TARGET_SMALL_REGISTER_CLASSES_FOR_MODE_P \\\n   arm_small_register_classes_for_mode_p \n \n-/* Given an rtx X being reloaded into a reg required to be\n-   in class CLASS, return the class of reg to actually use.\n-   In general this is just CLASS, but for the Thumb core registers and\n-   immediate constants we prefer a LO_REGS class or a subset.  */\n-#define PREFERRED_RELOAD_CLASS(X, CLASS)\t\t\\\n-  (TARGET_32BIT ? (CLASS) :\t\t\t\t\\\n-   ((CLASS) == GENERAL_REGS || (CLASS) == HI_REGS\t\\\n-    || (CLASS) == NO_REGS || (CLASS) == STACK_REG\t\\\n-   ? LO_REGS : (CLASS)))\n-\n /* Must leave BASE_REGS reloads alone */\n #define THUMB_SECONDARY_INPUT_RELOAD_CLASS(CLASS, MODE, X)\t\t\\\n   ((CLASS) != LO_REGS && (CLASS) != BASE_REGS\t\t\t\t\\"}]}