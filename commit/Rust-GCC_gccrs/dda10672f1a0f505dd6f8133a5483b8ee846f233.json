{"sha": "dda10672f1a0f505dd6f8133a5483b8ee846f233", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGRhMTA2NzJmMWEwZjUwNWRkNmY4MTMzYTU0ODNiOGVlODQ2ZjIzMw==", "commit": {"author": {"name": "Roman Zippel", "email": "zippel@gcc.gnu.org", "date": "2007-03-04T00:58:06Z"}, "committer": {"name": "Roman Zippel", "email": "zippel@gcc.gnu.org", "date": "2007-03-04T00:58:06Z"}, "message": "m68k.exp: New.\n\n\t* gcc.target/m68k/m68k.exp: New.\n\t* gcc.target/m68k/crash1.c: New.\n\nFrom-SVN: r122521", "tree": {"sha": "d5f4501d40f4b53ef2769e4b44b37e6de37cf55a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d5f4501d40f4b53ef2769e4b44b37e6de37cf55a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/dda10672f1a0f505dd6f8133a5483b8ee846f233", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dda10672f1a0f505dd6f8133a5483b8ee846f233", "html_url": "https://github.com/Rust-GCC/gccrs/commit/dda10672f1a0f505dd6f8133a5483b8ee846f233", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dda10672f1a0f505dd6f8133a5483b8ee846f233/comments", "author": null, "committer": null, "parents": [{"sha": "594f8779730a86ee3e34f05c012e23592649bac5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/594f8779730a86ee3e34f05c012e23592649bac5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/594f8779730a86ee3e34f05c012e23592649bac5"}], "stats": {"total": 83, "additions": 83, "deletions": 0}, "files": [{"sha": "fdd737ab238129b846b6a2d3abc5dd1292b046a0", "filename": "gcc/testsuite/gcc.target/m68k/crash1.c", "status": "added", "additions": 42, "deletions": 0, "changes": 42, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dda10672f1a0f505dd6f8133a5483b8ee846f233/gcc%2Ftestsuite%2Fgcc.target%2Fm68k%2Fcrash1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dda10672f1a0f505dd6f8133a5483b8ee846f233/gcc%2Ftestsuite%2Fgcc.target%2Fm68k%2Fcrash1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fm68k%2Fcrash1.c?ref=dda10672f1a0f505dd6f8133a5483b8ee846f233", "patch": "@@ -0,0 +1,42 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-Os -fomit-frame-pointer\" } */\n+\n+/* Caused an ICE because of forgotten auto increment.  */\n+\n+register void *current __asm__(\"%a2\");\n+\n+struct kernel_stat\n+{\n+ long long user;\n+ long long nice;\n+ long long system;\n+ long long idle;\n+ long long steal;\n+ unsigned irqs[256];\n+};\n+extern struct kernel_stat per_cpu__kstat;\n+\n+void show_stat(void)\n+{\n+  int i;\n+  long long user, nice, system, idle, steal;\n+  long long sum = 0;\n+\n+  user = nice = system = idle = steal = 0;\n+  for (i = 0; i < 1; i++)\n+    {\n+      int j;\n+      user = user + per_cpu__kstat.user;\n+      nice = nice + per_cpu__kstat.nice;\n+      system = system + per_cpu__kstat.system;\n+      idle = idle + per_cpu__kstat.idle;\n+      steal = steal + per_cpu__kstat.steal;\n+\n+      for (j = 0 ; j < 256 ; j++)\n+\tsum += per_cpu__kstat.irqs[j];\n+    }\n+  seq_printf(user, nice, system, idle, steal);\n+  seq_printf(sum);\n+  for (i = 0; i < 256; i++)\n+    seq_printf (i);\n+}"}, {"sha": "9398d109cc606a690116618dd2170460191f868d", "filename": "gcc/testsuite/gcc.target/m68k/m68k.exp", "status": "added", "additions": 41, "deletions": 0, "changes": 41, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dda10672f1a0f505dd6f8133a5483b8ee846f233/gcc%2Ftestsuite%2Fgcc.target%2Fm68k%2Fm68k.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dda10672f1a0f505dd6f8133a5483b8ee846f233/gcc%2Ftestsuite%2Fgcc.target%2Fm68k%2Fm68k.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fm68k%2Fm68k.exp?ref=dda10672f1a0f505dd6f8133a5483b8ee846f233", "patch": "@@ -0,0 +1,41 @@\n+# Copyright (C) 1997, 2004, 2006 Free Software Foundation, Inc.\n+\n+# This program is free software; you can redistribute it and/or modify\n+# it under the terms of the GNU General Public License as published by\n+# the Free Software Foundation; either version 2 of the License, or\n+# (at your option) any later version.\n+#\n+# This program is distributed in the hope that it will be useful,\n+# but WITHOUT ANY WARRANTY; without even the implied warranty of\n+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+# GNU General Public License for more details.\n+#\n+# You should have received a copy of the GNU General Public License\n+# along with this program; if not, write to the Free Software\n+# Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA.\n+\n+# GCC testsuite that uses the `dg.exp' driver.\n+\n+# Exit immediately if this isn't an m68k target.\n+if ![istarget m68k*-*-*] then {\n+  return\n+}\n+\n+# Load support procs.\n+load_lib gcc-dg.exp\n+\n+# If a testcase doesn't have special options, use these.\n+global DEFAULT_CFLAGS\n+if ![info exists DEFAULT_CFLAGS] then {\n+    set DEFAULT_CFLAGS \" -ansi -pedantic-errors\"\n+}\n+\n+# Initialize `dg'.\n+dg-init\n+\n+# Main loop.\n+dg-runtest [lsort [glob -nocomplain $srcdir/$subdir/*.\\[cCS\\]]] \\\n+\t\"\" $DEFAULT_CFLAGS\n+\n+# All done.\n+dg-finish"}]}