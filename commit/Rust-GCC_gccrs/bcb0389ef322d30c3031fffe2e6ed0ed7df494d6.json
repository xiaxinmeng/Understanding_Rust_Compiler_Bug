{"sha": "bcb0389ef322d30c3031fffe2e6ed0ed7df494d6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmNiMDM4OWVmMzIyZDMwYzMwMzFmZmZlMmU2ZWQwZWQ3ZGY0OTRkNg==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@adacore.com", "date": "2016-05-02T09:53:16Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2016-05-02T09:53:16Z"}, "message": "get_spark_xrefs.adb (Get_Nat, Get_Name): Initialize variables when they are declared...\n\n2016-05-02  Arnaud Charlet  <charlet@adacore.com>\n\n\t* get_spark_xrefs.adb (Get_Nat, Get_Name): Initialize variables when\n\tthey are declared; refine type of a counter from Integer to Natural.\n\t* sem_ch5.adb, gnatcmd.adb, s-intman-posix.adb, eval_fat.adb,\n\tprj.adb, sem_util.adb, s-intman-android.adb, prj-nmsc.adb, sem_ch8.adb,\n\texp_ch3.adb: Minor editing.\n\nFrom-SVN: r235729", "tree": {"sha": "51a7901301fd632b8cc42618ad15eacd4c8bd780", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/51a7901301fd632b8cc42618ad15eacd4c8bd780"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/bcb0389ef322d30c3031fffe2e6ed0ed7df494d6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bcb0389ef322d30c3031fffe2e6ed0ed7df494d6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bcb0389ef322d30c3031fffe2e6ed0ed7df494d6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bcb0389ef322d30c3031fffe2e6ed0ed7df494d6/comments", "author": {"login": "ArnaudCharlet", "id": 30291825, "node_id": "MDQ6VXNlcjMwMjkxODI1", "avatar_url": "https://avatars.githubusercontent.com/u/30291825?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ArnaudCharlet", "html_url": "https://github.com/ArnaudCharlet", "followers_url": "https://api.github.com/users/ArnaudCharlet/followers", "following_url": "https://api.github.com/users/ArnaudCharlet/following{/other_user}", "gists_url": "https://api.github.com/users/ArnaudCharlet/gists{/gist_id}", "starred_url": "https://api.github.com/users/ArnaudCharlet/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ArnaudCharlet/subscriptions", "organizations_url": "https://api.github.com/users/ArnaudCharlet/orgs", "repos_url": "https://api.github.com/users/ArnaudCharlet/repos", "events_url": "https://api.github.com/users/ArnaudCharlet/events{/privacy}", "received_events_url": "https://api.github.com/users/ArnaudCharlet/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "ef25192beef53daf8cecb32384b1d69d1cfddac9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ef25192beef53daf8cecb32384b1d69d1cfddac9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ef25192beef53daf8cecb32384b1d69d1cfddac9"}], "stats": {"total": 56, "additions": 30, "deletions": 26}, "files": [{"sha": "f5fe64f3f43508855987e0a70f1e0aa809691d45", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bcb0389ef322d30c3031fffe2e6ed0ed7df494d6/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bcb0389ef322d30c3031fffe2e6ed0ed7df494d6/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=bcb0389ef322d30c3031fffe2e6ed0ed7df494d6", "patch": "@@ -1,3 +1,11 @@\n+2016-05-02  Arnaud Charlet  <charlet@adacore.com>\n+\n+\t* get_spark_xrefs.adb (Get_Nat, Get_Name): Initialize variables when\n+\tthey are declared; refine type of a counter from Integer to Natural.\n+\t* sem_ch5.adb, gnatcmd.adb, s-intman-posix.adb, eval_fat.adb,\n+\tprj.adb, sem_util.adb, s-intman-android.adb, prj-nmsc.adb, sem_ch8.adb,\n+\texp_ch3.adb: Minor editing.\n+\n 2016-05-02  Yannick Moy  <moy@adacore.com>\n \n \t* a-tigeli.adb (Get_Line): Always set Last prior to returning."}, {"sha": "df6e35aab273c271c33e3ab3e60501bfbd75e4b7", "filename": "gcc/ada/eval_fat.adb", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bcb0389ef322d30c3031fffe2e6ed0ed7df494d6/gcc%2Fada%2Feval_fat.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bcb0389ef322d30c3031fffe2e6ed0ed7df494d6/gcc%2Fada%2Feval_fat.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Feval_fat.adb?ref=bcb0389ef322d30c3031fffe2e6ed0ed7df494d6", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2015, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2016, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -666,7 +666,7 @@ package body Eval_Fat is\n       Result := Truncation (RT, abs X);\n       Tail   := abs X - Result;\n \n-      if Tail >= Ureal_Half  then\n+      if Tail >= Ureal_Half then\n          Result := Result + Ureal_1;\n       end if;\n \n@@ -761,7 +761,7 @@ package body Eval_Fat is\n       Result := Truncation (RT, Abs_X);\n       Tail   := Abs_X - Result;\n \n-      if Tail > Ureal_Half  then\n+      if Tail > Ureal_Half then\n          Result := Result + Ureal_1;\n \n       elsif Tail = Ureal_Half then"}, {"sha": "2eefb3df3fe174d67fbddf2788e692a102fc7441", "filename": "gcc/ada/exp_ch3.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bcb0389ef322d30c3031fffe2e6ed0ed7df494d6/gcc%2Fada%2Fexp_ch3.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bcb0389ef322d30c3031fffe2e6ed0ed7df494d6/gcc%2Fada%2Fexp_ch3.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch3.adb?ref=bcb0389ef322d30c3031fffe2e6ed0ed7df494d6", "patch": "@@ -3921,7 +3921,7 @@ package body Exp_Ch3 is\n    --          return;\n    --       end if;\n \n-   --       if Rev  then\n+   --       if Rev then\n    --          Li1 := Left_Hi;\n    --          Ri1 := Right_Hi;\n    --       else"}, {"sha": "92866783d8ca9391b6c264ef76739b2dac93b236", "filename": "gcc/ada/get_spark_xrefs.adb", "status": "modified", "additions": 4, "deletions": 8, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bcb0389ef322d30c3031fffe2e6ed0ed7df494d6/gcc%2Fada%2Fget_spark_xrefs.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bcb0389ef322d30c3031fffe2e6ed0ed7df494d6/gcc%2Fada%2Fget_spark_xrefs.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fget_spark_xrefs.adb?ref=bcb0389ef322d30c3031fffe2e6ed0ed7df494d6", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 2011-2015, Free Software Foundation, Inc.         --\n+--          Copyright (C) 2011-2016, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -114,13 +114,10 @@ procedure Get_SPARK_Xrefs is\n    -------------\n \n    function Get_Nat return Nat is\n-      Val : Nat;\n-      C   : Character;\n+      Val : Nat := 0;\n+      C   : Character := Nextc;\n \n    begin\n-      C := Nextc;\n-      Val := 0;\n-\n       if C not in '0' .. '9' then\n          raise Data_Error;\n       end if;\n@@ -152,10 +149,9 @@ procedure Get_SPARK_Xrefs is\n    --------------\n \n    procedure Get_Name is\n-      N : Integer;\n+      N : Natural := 0;\n \n    begin\n-      N := 0;\n       while Nextc > ' ' loop\n          N := N + 1;\n          Name_Str (N) := Getc;"}, {"sha": "ce880ca4cc68a23d08e3252822c98a21a2b832ed", "filename": "gcc/ada/gnatcmd.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bcb0389ef322d30c3031fffe2e6ed0ed7df494d6/gcc%2Fada%2Fgnatcmd.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bcb0389ef322d30c3031fffe2e6ed0ed7df494d6/gcc%2Fada%2Fgnatcmd.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnatcmd.adb?ref=bcb0389ef322d30c3031fffe2e6ed0ed7df494d6", "patch": "@@ -701,7 +701,7 @@ begin\n                if Call_GPR_Tool then\n                   case The_Command is\n                      when Make | Compile | Bind | Link =>\n-                        if Locate_Exec_On_Path (Gprbuild) /= null  then\n+                        if Locate_Exec_On_Path (Gprbuild) /= null then\n                            Program    := new String'(Gprbuild);\n                            Get_Target := True;\n "}, {"sha": "fb8ce27080a021c899a35889784e4be8652bddbb", "filename": "gcc/ada/prj-nmsc.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bcb0389ef322d30c3031fffe2e6ed0ed7df494d6/gcc%2Fada%2Fprj-nmsc.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bcb0389ef322d30c3031fffe2e6ed0ed7df494d6/gcc%2Fada%2Fprj-nmsc.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-nmsc.adb?ref=bcb0389ef322d30c3031fffe2e6ed0ed7df494d6", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 2000-2015, Free Software Foundation, Inc.         --\n+--          Copyright (C) 2000-2016, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -4452,7 +4452,7 @@ package body Prj.Nmsc is\n             --  An extending project inherits its parent projects' languages\n             --  so if needed we should create entries for those languages\n \n-            if Lang = null  then\n+            if Lang = null then\n                Extended := Project.Extends;\n                while Extended /= null loop\n                   Lang := Get_Language_From_Name"}, {"sha": "35226dba112d644011a953f36d1f670442020757", "filename": "gcc/ada/prj.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bcb0389ef322d30c3031fffe2e6ed0ed7df494d6/gcc%2Fada%2Fprj.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bcb0389ef322d30c3031fffe2e6ed0ed7df494d6/gcc%2Fada%2Fprj.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj.adb?ref=bcb0389ef322d30c3031fffe2e6ed0ed7df494d6", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 2001-2015, Free Software Foundation, Inc.         --\n+--          Copyright (C) 2001-2016, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -190,7 +190,7 @@ package body Prj is\n       pragma Warnings (Off, Dont_Care);\n \n    begin\n-      if not Opt.Keep_Temporary_Files  then\n+      if not Opt.Keep_Temporary_Files then\n          if Current_Verbosity = High then\n             Write_Line (\"Removing temp file: \" & Get_Name_String (Path));\n          end if;"}, {"sha": "2822cbd4cf894f755f581562a473d9f3c197df60", "filename": "gcc/ada/s-intman-android.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bcb0389ef322d30c3031fffe2e6ed0ed7df494d6/gcc%2Fada%2Fs-intman-android.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bcb0389ef322d30c3031fffe2e6ed0ed7df494d6/gcc%2Fada%2Fs-intman-android.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-intman-android.adb?ref=bcb0389ef322d30c3031fffe2e6ed0ed7df494d6", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                  B o d y                                 --\n --                                                                          --\n---             Copyright (C) 2014, Free Software Foundation, Inc.           --\n+--          Copyright (C) 2014-2016, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNARL is free software; you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -239,7 +239,7 @@ package body System.Interrupt_Management is\n       --  Add signals that map to Ada exceptions to the mask\n \n       for J in Exception_Interrupts'Range loop\n-         if State (Exception_Interrupts (J)) /= Default  then\n+         if State (Exception_Interrupts (J)) /= Default then\n             Result :=\n               sigaddset\n                 (Signal_Mask'Access, Signal (Exception_Interrupts (J)));"}, {"sha": "7cf08c8b88ac8b735c2a5cef1f293d87c466db7f", "filename": "gcc/ada/s-intman-posix.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bcb0389ef322d30c3031fffe2e6ed0ed7df494d6/gcc%2Fada%2Fs-intman-posix.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bcb0389ef322d30c3031fffe2e6ed0ed7df494d6/gcc%2Fada%2Fs-intman-posix.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-intman-posix.adb?ref=bcb0389ef322d30c3031fffe2e6ed0ed7df494d6", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                  B o d y                                 --\n --                                                                          --\n---          Copyright (C) 1992-2009, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2016, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNARL is free software; you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -202,7 +202,7 @@ package body System.Interrupt_Management is\n       --  Add signals that map to Ada exceptions to the mask\n \n       for J in Exception_Interrupts'Range loop\n-         if State (Exception_Interrupts (J)) /= Default  then\n+         if State (Exception_Interrupts (J)) /= Default then\n             Result :=\n             sigaddset (Signal_Mask'Access, Signal (Exception_Interrupts (J)));\n             pragma Assert (Result = 0);"}, {"sha": "5a755d0ce86338e8f1145654a65ddb2b6dec02a4", "filename": "gcc/ada/sem_ch5.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bcb0389ef322d30c3031fffe2e6ed0ed7df494d6/gcc%2Fada%2Fsem_ch5.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bcb0389ef322d30c3031fffe2e6ed0ed7df494d6/gcc%2Fada%2Fsem_ch5.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch5.adb?ref=bcb0389ef322d30c3031fffe2e6ed0ed7df494d6", "patch": "@@ -3217,7 +3217,7 @@ package body Sem_Ch5 is\n          --  Verify that the loop name is hot hidden by an unrelated\n          --  declaration in an inner scope.\n \n-         elsif Ekind (Ent) /= E_Label and then Ekind (Ent) /= E_Loop  then\n+         elsif Ekind (Ent) /= E_Label and then Ekind (Ent) /= E_Loop then\n             Error_Msg_Sloc := Sloc (Ent);\n             Error_Msg_N (\"implicit label declaration for & is hidden#\", Id);\n "}, {"sha": "05f1d469b18d58ffc54f7e8a6e3f5fd8f86cbdc0", "filename": "gcc/ada/sem_ch8.adb", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bcb0389ef322d30c3031fffe2e6ed0ed7df494d6/gcc%2Fada%2Fsem_ch8.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bcb0389ef322d30c3031fffe2e6ed0ed7df494d6/gcc%2Fada%2Fsem_ch8.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch8.adb?ref=bcb0389ef322d30c3031fffe2e6ed0ed7df494d6", "patch": "@@ -6957,7 +6957,7 @@ package body Sem_Ch8 is\n             --  Issue error message, but avoid this if error issued already.\n             --  Use identifier of prefix if one is available.\n \n-            if P_Name = Any_Id  then\n+            if P_Name = Any_Id then\n                null;\n \n             --  It is not an error if the prefix is the current instance of\n@@ -8610,7 +8610,7 @@ package body Sem_Ch8 is\n                   Next (Pack_Name);\n                end loop;\n \n-            elsif Nkind (Decl) = N_Use_Type_Clause  then\n+            elsif Nkind (Decl) = N_Use_Type_Clause then\n                Chain_Use_Clause (Decl);\n \n                Id := First (Subtype_Marks (Decl));\n@@ -9152,7 +9152,7 @@ package body Sem_Ch8 is\n                      Ent1 := Entity_Of_Unit (Unit1);\n                      Ent2 := Entity_Of_Unit (Unit2);\n \n-                     if Scope (Ent2) = Standard_Standard  then\n+                     if Scope (Ent2) = Standard_Standard then\n                         Error_Msg_Sloc := Sloc (Current_Use_Clause (T));\n                         Err_No := Clause1;\n "}, {"sha": "34f3a2033404ccd5fe1327fd5a4b5447b6998662", "filename": "gcc/ada/sem_util.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bcb0389ef322d30c3031fffe2e6ed0ed7df494d6/gcc%2Fada%2Fsem_util.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bcb0389ef322d30c3031fffe2e6ed0ed7df494d6/gcc%2Fada%2Fsem_util.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_util.adb?ref=bcb0389ef322d30c3031fffe2e6ed0ed7df494d6", "patch": "@@ -7153,7 +7153,7 @@ package body Sem_Util is\n       end if;\n \n       while Present (Old_Disc) and then Present (New_Disc) loop\n-         if Old_Disc = Par_Disc  then\n+         if Old_Disc = Par_Disc then\n             return New_Disc;\n          end if;\n "}]}