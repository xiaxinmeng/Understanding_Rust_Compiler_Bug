{"sha": "f1c69797a0ad03b7110ac9473f2a0a8ae0fc991f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjFjNjk3OTdhMGFkMDNiNzExMGFjOTQ3M2YyYTBhOGFlMGZjOTkxZg==", "commit": {"author": {"name": "Jonathan Wakely", "email": "jwakely.gcc@gmail.com", "date": "2013-02-20T22:41:58Z"}, "committer": {"name": "Jonathan Wakely", "email": "redi@gcc.gnu.org", "date": "2013-02-20T22:41:58Z"}, "message": "streambuf (basic_streambuf): Use injected class name instead of non-standard __streambuf_type typedef.\n\n\t* include/std/streambuf (basic_streambuf): Use injected class name\n\tinstead of non-standard __streambuf_type typedef. Fix unclosed Doxygen\n\tgroup.\n\nFrom-SVN: r196185", "tree": {"sha": "86b9e0ffb1af9d211d1add2173adac09d25c29f1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/86b9e0ffb1af9d211d1add2173adac09d25c29f1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f1c69797a0ad03b7110ac9473f2a0a8ae0fc991f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f1c69797a0ad03b7110ac9473f2a0a8ae0fc991f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f1c69797a0ad03b7110ac9473f2a0a8ae0fc991f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f1c69797a0ad03b7110ac9473f2a0a8ae0fc991f/comments", "author": null, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2f2b63daf1c4d38bc2086f8e39f82ce4029727f5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2f2b63daf1c4d38bc2086f8e39f82ce4029727f5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2f2b63daf1c4d38bc2086f8e39f82ce4029727f5"}], "stats": {"total": 31, "additions": 18, "deletions": 13}, "files": [{"sha": "8e4d68f77b5c02a3132758bce063fee896a4083d", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f1c69797a0ad03b7110ac9473f2a0a8ae0fc991f/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f1c69797a0ad03b7110ac9473f2a0a8ae0fc991f/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=f1c69797a0ad03b7110ac9473f2a0a8ae0fc991f", "patch": "@@ -1,3 +1,9 @@\n+2013-02-20  Jonathan Wakely  <jwakely.gcc@gmail.com>\n+\n+\t* include/std/streambuf (basic_streambuf): Use injected class name\n+\tinstead of non-standard __streambuf_type typedef. Fix unclosed Doxygen\n+\tgroup.\n+\n 2013-02-20  Jonathan Wakely  <jwakely.gcc@gmail.com>\n \n \t* doc/html/faq.html: Fix spelling."}, {"sha": "26a3871471c4c23f2ebed7cf81de4fb0b382b945", "filename": "libstdc++-v3/include/std/streambuf", "status": "modified", "additions": 12, "deletions": 13, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f1c69797a0ad03b7110ac9473f2a0a8ae0fc991f/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fstreambuf", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f1c69797a0ad03b7110ac9473f2a0a8ae0fc991f/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fstreambuf", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fstreambuf?ref=f1c69797a0ad03b7110ac9473f2a0a8ae0fc991f", "patch": "@@ -145,7 +145,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n       friend class ostreambuf_iterator<char_type, traits_type>;\n \n       friend streamsize\n-      __copy_streambufs_eof<>(__streambuf_type*, __streambuf_type*, bool&);\n+      __copy_streambufs_eof<>(basic_streambuf*, basic_streambuf*, bool&);\n \n       template<bool _IsMove, typename _CharT2>\n         friend typename __gnu_cxx::__enable_if<__is_char<_CharT2>::__value, \n@@ -174,20 +174,19 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \t\tbasic_string<_CharT2, _Traits2, _Alloc>&, _CharT2);\n \n     protected:\n-      //@{\n-      /**\n+      /*\n        *  This is based on _IO_FILE, just reordered to be more consistent,\n        *  and is intended to be the most minimal abstraction for an\n        *  internal buffer.\n        *  -  get == input == read\n        *  -  put == output == write\n       */\n-      char_type* \t\t_M_in_beg;     // Start of get area. \n-      char_type* \t\t_M_in_cur;     // Current read area. \n-      char_type* \t\t_M_in_end;     // End of get area. \n-      char_type* \t\t_M_out_beg;    // Start of put area. \n-      char_type* \t\t_M_out_cur;    // Current put area. \n-      char_type* \t\t_M_out_end;    // End of put area.\n+      char_type* \t\t_M_in_beg;     ///< Start of get area.\n+      char_type* \t\t_M_in_cur;     ///< Current read area.\n+      char_type* \t\t_M_in_end;     ///< End of get area.\n+      char_type* \t\t_M_out_beg;    ///< Start of put area.\n+      char_type* \t\t_M_out_cur;    ///< Current put area.\n+      char_type* \t\t_M_out_end;    ///< End of put area.\n \n       /// Current locale setting.\n       locale \t\t\t_M_buf_locale;\t\n@@ -236,7 +235,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n        *  derived @c foo member functions, passing the arguments (if any)\n        *  and returning the result unchanged.\n       */\n-      __streambuf_type* \n+      basic_streambuf*\n       pubsetbuf(char_type* __s, streamsize __n) \n       { return this->setbuf(__s, __n); }\n \n@@ -800,15 +799,15 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n     private:\n       // _GLIBCXX_RESOLVE_LIB_DEFECTS\n       // Side effect of DR 50. \n-      basic_streambuf(const __streambuf_type& __sb)\n+      basic_streambuf(const basic_streambuf& __sb)\n       : _M_in_beg(__sb._M_in_beg), _M_in_cur(__sb._M_in_cur), \n       _M_in_end(__sb._M_in_end), _M_out_beg(__sb._M_out_beg), \n       _M_out_cur(__sb._M_out_cur), _M_out_end(__sb._M_out_cur),\n       _M_buf_locale(__sb._M_buf_locale) \n       { }\n \n-      __streambuf_type& \n-      operator=(const __streambuf_type&) { return *this; };\n+      basic_streambuf&\n+      operator=(const basic_streambuf&) { return *this; };\n     };\n \n   // Explicit specialization declarations, defined in src/streambuf.cc."}]}