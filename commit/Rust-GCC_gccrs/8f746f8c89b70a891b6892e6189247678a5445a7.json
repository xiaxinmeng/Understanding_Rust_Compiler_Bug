{"sha": "8f746f8c89b70a891b6892e6189247678a5445a7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGY3NDZmOGM4OWI3MGE4OTFiNjg5MmU2MTg5MjQ3Njc4YTU0NDVhNw==", "commit": {"author": {"name": "Andreas Krebbel", "email": "krebbel@linux.vnet.ibm.com", "date": "2017-06-30T06:45:51Z"}, "committer": {"name": "Andreas Krebbel", "email": "krebbel@gcc.gnu.org", "date": "2017-06-30T06:45:51Z"}, "message": "S/390: Adjust to the recent branch probability changes.\n\nThis fixes the bootstrap failure triggered by the recent changes wrt\nbranch probabilities aka emit_cmp_and_jump_insns does not accept\nintegers as branch probability anymore.\n\ngcc/ChangeLog:\n\n2017-06-30  Andreas Krebbel  <krebbel@linux.vnet.ibm.com>\n\n\t* config/s390/s390.c (s390_expand_setmem): Adjust to the new data\n\ttype for branch probabilities.\n\nFrom-SVN: r249829", "tree": {"sha": "aef4a7bee1a4187e114d6027768bea8f5430e740", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/aef4a7bee1a4187e114d6027768bea8f5430e740"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8f746f8c89b70a891b6892e6189247678a5445a7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8f746f8c89b70a891b6892e6189247678a5445a7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8f746f8c89b70a891b6892e6189247678a5445a7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8f746f8c89b70a891b6892e6189247678a5445a7/comments", "author": null, "committer": null, "parents": [{"sha": "00c7c57f0df9b416f7f2eec88717c526d80196e3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/00c7c57f0df9b416f7f2eec88717c526d80196e3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/00c7c57f0df9b416f7f2eec88717c526d80196e3"}], "stats": {"total": 12, "additions": 8, "deletions": 4}, "files": [{"sha": "b8fb6262c3ce5a5b7fa66ae41ca700b6a7e4bcc3", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f746f8c89b70a891b6892e6189247678a5445a7/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f746f8c89b70a891b6892e6189247678a5445a7/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=8f746f8c89b70a891b6892e6189247678a5445a7", "patch": "@@ -1,3 +1,8 @@\n+2017-06-30  Andreas Krebbel  <krebbel@linux.vnet.ibm.com>\n+\n+\t* config/s390/s390.c (s390_expand_setmem): Adjust to the new data\n+\ttype for branch probabilities.\n+\n 2017-06-29  Julian Brown  <julian@codesourcery.com>\n \t    Naveen H.S  <Naveen.Hurugalawadi@cavium.com>\n "}, {"sha": "958ee3b926cac8969541ed1d575a2cd5a624af3c", "filename": "gcc/config/s390/s390.c", "status": "modified", "additions": 3, "deletions": 4, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f746f8c89b70a891b6892e6189247678a5445a7/gcc%2Fconfig%2Fs390%2Fs390.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f746f8c89b70a891b6892e6189247678a5445a7/gcc%2Fconfig%2Fs390%2Fs390.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fs390%2Fs390.c?ref=8f746f8c89b70a891b6892e6189247678a5445a7", "patch": "@@ -5349,8 +5349,6 @@ s390_expand_movmem (rtx dst, rtx src, rtx len)\n void\n s390_expand_setmem (rtx dst, rtx len, rtx val)\n {\n-  const int very_unlikely = REG_BR_PROB_BASE / 100 - 1;\n-\n   if (GET_CODE (len) == CONST_INT && INTVAL (len) <= 0)\n     return;\n \n@@ -5424,7 +5422,7 @@ s390_expand_setmem (rtx dst, rtx len, rtx val)\n       convert_move (count, len, 1);\n       emit_cmp_and_jump_insns (count, const0_rtx,\n \t\t\t       EQ, NULL_RTX, mode, 1, zerobyte_end_label,\n-\t\t\t       very_unlikely);\n+\t\t\t       profile_probability::very_unlikely ());\n \n       /* We need to make a copy of the target address since memset is\n \t supposed to return it unmodified.  We have to make it here\n@@ -5441,7 +5439,8 @@ s390_expand_setmem (rtx dst, rtx len, rtx val)\n \t  dstp1 = adjust_address (dst, VOIDmode, 1);\n \t  emit_cmp_and_jump_insns (count,\n \t\t\t\t   const1_rtx, EQ, NULL_RTX, mode, 1,\n-\t\t\t\t   onebyte_end_label, very_unlikely);\n+\t\t\t\t   onebyte_end_label,\n+\t\t\t\t   profile_probability::very_unlikely ());\n \t}\n \n       /* There is one unconditional (mvi+mvc)/xc after the loop"}]}