{"sha": "b6ff694e592669e7865d39a884100dd677e7ceec", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjZmZjY5NGU1OTI2NjllNzg2NWQzOWE4ODQxMDBkZDY3N2U3Y2VlYw==", "commit": {"author": {"name": "Marek Polacek", "email": "polacek@redhat.com", "date": "2020-09-18T23:37:05Z"}, "committer": {"name": "Marek Polacek", "email": "polacek@redhat.com", "date": "2020-09-21T14:11:41Z"}, "message": "c++: Detect deduction guide redeclaration [PR97099]\n\n[temp.deduct.guide]p3: Two deduction guide declarations in the same\ntranslation unit for the same class template shall not have equivalent\nparameter-declaration-clauses.\n\nSo let's detect that.\n\ngcc/cp/ChangeLog:\n\n\tPR c++/97099\n\t* decl.c (redeclaration_error_message): Detect a redeclaration of\n\tdeduction guides.\n\ngcc/testsuite/ChangeLog:\n\n\tPR c++/97099\n\t* g++.dg/cpp1z/class-deduction74.C: New test.", "tree": {"sha": "fe5ac97074119251d228e9f5a028978e1914f806", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/fe5ac97074119251d228e9f5a028978e1914f806"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b6ff694e592669e7865d39a884100dd677e7ceec", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b6ff694e592669e7865d39a884100dd677e7ceec", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b6ff694e592669e7865d39a884100dd677e7ceec", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b6ff694e592669e7865d39a884100dd677e7ceec/comments", "author": {"login": "mpolacek", "id": 10496300, "node_id": "MDQ6VXNlcjEwNDk2MzAw", "avatar_url": "https://avatars.githubusercontent.com/u/10496300?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mpolacek", "html_url": "https://github.com/mpolacek", "followers_url": "https://api.github.com/users/mpolacek/followers", "following_url": "https://api.github.com/users/mpolacek/following{/other_user}", "gists_url": "https://api.github.com/users/mpolacek/gists{/gist_id}", "starred_url": "https://api.github.com/users/mpolacek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mpolacek/subscriptions", "organizations_url": "https://api.github.com/users/mpolacek/orgs", "repos_url": "https://api.github.com/users/mpolacek/repos", "events_url": "https://api.github.com/users/mpolacek/events{/privacy}", "received_events_url": "https://api.github.com/users/mpolacek/received_events", "type": "User", "site_admin": false}, "committer": {"login": "mpolacek", "id": 10496300, "node_id": "MDQ6VXNlcjEwNDk2MzAw", "avatar_url": "https://avatars.githubusercontent.com/u/10496300?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mpolacek", "html_url": "https://github.com/mpolacek", "followers_url": "https://api.github.com/users/mpolacek/followers", "following_url": "https://api.github.com/users/mpolacek/following{/other_user}", "gists_url": "https://api.github.com/users/mpolacek/gists{/gist_id}", "starred_url": "https://api.github.com/users/mpolacek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mpolacek/subscriptions", "organizations_url": "https://api.github.com/users/mpolacek/orgs", "repos_url": "https://api.github.com/users/mpolacek/repos", "events_url": "https://api.github.com/users/mpolacek/events{/privacy}", "received_events_url": "https://api.github.com/users/mpolacek/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2ec58cfcea146a61755516ce4ed160827fe0b4ff", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2ec58cfcea146a61755516ce4ed160827fe0b4ff", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2ec58cfcea146a61755516ce4ed160827fe0b4ff"}], "stats": {"total": 51, "additions": 45, "deletions": 6}, "files": [{"sha": "af796499df711ee2bb545de402d0711acb90e5b9", "filename": "gcc/cp/decl.c", "status": "modified", "additions": 14, "deletions": 6, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b6ff694e592669e7865d39a884100dd677e7ceec/gcc%2Fcp%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b6ff694e592669e7865d39a884100dd677e7ceec/gcc%2Fcp%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fdecl.c?ref=b6ff694e592669e7865d39a884100dd677e7ceec", "patch": "@@ -3003,6 +3003,10 @@ redeclaration_error_message (tree newdecl, tree olddecl)\n \t    }\n \t}\n \n+      if (deduction_guide_p (olddecl)\n+\t  && deduction_guide_p (newdecl))\n+\treturn G_(\"deduction guide %q+D redeclared\");\n+\n       /* [class.compare.default]: A definition of a comparison operator as\n \t defaulted that appears in a class shall be the first declaration of\n \t that function.  */\n@@ -3053,24 +3057,28 @@ redeclaration_error_message (tree newdecl, tree olddecl)\n \t\t\t  \"%<gnu_inline%> attribute\");\n \t      else\n \t\treturn G_(\"%q+D redeclared inline without \"\n-\t\t     \t  \"%<gnu_inline%> attribute\");\n+\t\t\t  \"%<gnu_inline%> attribute\");\n \t    }\n \t}\n \n-      /* Core issue #226 (C++0x): \n-           \n+      if (deduction_guide_p (olddecl)\n+\t  && deduction_guide_p (newdecl))\n+\treturn G_(\"deduction guide %q+D redeclared\");\n+\n+      /* Core issue #226 (C++11):\n+\n            If a friend function template declaration specifies a\n            default template-argument, that declaration shall be a\n            definition and shall be the only declaration of the\n            function template in the translation unit.  */\n-      if ((cxx_dialect != cxx98) \n+      if ((cxx_dialect != cxx98)\n           && TREE_CODE (ot) == FUNCTION_DECL && DECL_FRIEND_P (ot)\n-          && !check_default_tmpl_args (nt, DECL_TEMPLATE_PARMS (newdecl), \n+\t  && !check_default_tmpl_args (nt, DECL_TEMPLATE_PARMS (newdecl),\n                                        /*is_primary=*/true,\n \t\t\t\t       /*is_partial=*/false,\n                                        /*is_friend_decl=*/2))\n         return G_(\"redeclaration of friend %q#D \"\n-\t \t  \"may not have default template arguments\");\n+\t\t  \"may not have default template arguments\");\n \n       return NULL;\n     }"}, {"sha": "fe113819a956bfe231a7573d0d7f5e0de61565bf", "filename": "gcc/testsuite/g++.dg/cpp1z/class-deduction74.C", "status": "added", "additions": 31, "deletions": 0, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b6ff694e592669e7865d39a884100dd677e7ceec/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fclass-deduction74.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b6ff694e592669e7865d39a884100dd677e7ceec/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fclass-deduction74.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fclass-deduction74.C?ref=b6ff694e592669e7865d39a884100dd677e7ceec", "patch": "@@ -0,0 +1,31 @@\n+// PR c++/97099\n+// { dg-do compile { target c++17 } }\n+// [temp.deduct.guide]p3: Two deduction guide declarations in the same\n+// translation unit for the same class template shall not have equivalent\n+// parameter-declaration-clauses.\n+\n+template<typename> struct S { };\n+template<typename> struct X { };\n+\n+S() -> S<int>; // { dg-message \"previously declared here|old declaration\" }\n+S() -> S<int>; // { dg-error \"redeclared\" }\n+X() -> X<int>;\n+S() -> S<float>; // { dg-error \"ambiguating new declaration of\" }\n+\n+S(bool) -> S<int>; // { dg-message \"previously declared here\" }\n+explicit S(bool) -> S<int>; // { dg-error \"redeclared\" }\n+\n+explicit S(char) -> S<int>; // { dg-message \"previously declared here\" }\n+S(char) -> S<int>; // { dg-error \"redeclared\" }\n+\n+template<typename T> S(T, T) -> S<int>; // { dg-message \"previously declared here\" }\n+template<typename T> X(T, T) -> X<int>;\n+template<typename T> S(T, T) -> S<int>; // { dg-error \"redeclared\" }\n+\n+// OK: Use SFINAE.\n+template<typename T> S(T) -> S<typename T::foo>;\n+template<typename T> S(T) -> S<typename T::bar>;\n+\n+// OK: Non-template wins.\n+S(int) -> S<int>;\n+template<typename T = int> S(int) -> S<char>;"}]}