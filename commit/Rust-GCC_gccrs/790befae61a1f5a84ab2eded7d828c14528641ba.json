{"sha": "790befae61a1f5a84ab2eded7d828c14528641ba", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzkwYmVmYWU2MWExZjVhODRhYjJlZGVkN2Q4MjhjMTQ1Mjg2NDFiYQ==", "commit": {"author": {"name": "Aditya Kumar", "email": "aditya.k7@samsung.com", "date": "2015-10-06T20:50:29Z"}, "committer": {"name": "Sebastian Pop", "email": "spop@gcc.gnu.org", "date": "2015-10-06T20:50:29Z"}, "message": "remove unused struct base_alias_pair\n\n2015-10-06  Aditya Kumar  <aditya.k7@samsung.com>\n                Sebastian Pop  <s.pop@samsung.com>\n\n                * graphite-poly.c (free_data_refs_aux): Remove.\n                (free_gimple_poly_bb): Do not call free_data_refs_aux.\n                * graphite-poly.h (struct base_alias_pair): Remove.\n                * graphite-sese-to-poly.c (pdr_add_alias_set): Remove all uses of\n                base_alias_pair and dr->aux.\n                (build_alias_set): Same.\n                * tree-data-ref.c (create_data_ref): Initialize alias_set.\n                * tree-data-ref.h (data_reference): Add alias_set.\n\nCo-Authored-By: Sebastian Pop <s.pop@samsung.com>\n\nFrom-SVN: r228544", "tree": {"sha": "dbfdccad0353c1dbb9221439c344d39409e3f139", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/dbfdccad0353c1dbb9221439c344d39409e3f139"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/790befae61a1f5a84ab2eded7d828c14528641ba", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/790befae61a1f5a84ab2eded7d828c14528641ba", "html_url": "https://github.com/Rust-GCC/gccrs/commit/790befae61a1f5a84ab2eded7d828c14528641ba", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/790befae61a1f5a84ab2eded7d828c14528641ba/comments", "author": null, "committer": {"login": "sebpop", "id": 568397, "node_id": "MDQ6VXNlcjU2ODM5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/568397?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sebpop", "html_url": "https://github.com/sebpop", "followers_url": "https://api.github.com/users/sebpop/followers", "following_url": "https://api.github.com/users/sebpop/following{/other_user}", "gists_url": "https://api.github.com/users/sebpop/gists{/gist_id}", "starred_url": "https://api.github.com/users/sebpop/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sebpop/subscriptions", "organizations_url": "https://api.github.com/users/sebpop/orgs", "repos_url": "https://api.github.com/users/sebpop/repos", "events_url": "https://api.github.com/users/sebpop/events{/privacy}", "received_events_url": "https://api.github.com/users/sebpop/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4fd0b1760dcdbadac9514858a6f96a51dc25226d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4fd0b1760dcdbadac9514858a6f96a51dc25226d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4fd0b1760dcdbadac9514858a6f96a51dc25226d"}], "stats": {"total": 69, "additions": 20, "deletions": 49}, "files": [{"sha": "eac96441fe9cd0dbf1b806c1188efafaf9598dc9", "filename": "gcc/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/790befae61a1f5a84ab2eded7d828c14528641ba/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/790befae61a1f5a84ab2eded7d828c14528641ba/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=790befae61a1f5a84ab2eded7d828c14528641ba", "patch": "@@ -1,3 +1,15 @@\n+2015-10-06  Aditya Kumar  <aditya.k7@samsung.com>\n+\t    Sebastian Pop  <s.pop@samsung.com>\n+\n+\t* graphite-poly.c (free_data_refs_aux): Remove.\n+\t(free_gimple_poly_bb): Do not call free_data_refs_aux.\n+\t* graphite-poly.h (struct base_alias_pair): Remove.\n+\t* graphite-sese-to-poly.c (pdr_add_alias_set): Remove all uses of\n+\tbase_alias_pair and dr->aux.\n+\t(build_alias_set): Same.\n+\t* tree-data-ref.c (create_data_ref): Initialize alias_set.\n+\t* tree-data-ref.h (data_reference): Add alias_set.\n+\n 2015-10-06  Aditya Kumar  <aditya.k7@samsung.com>\n \t    Sebastian Pop  <s.pop@samsung.com>\n "}, {"sha": "52d07650d98a56845bccb1b92c95cd9afc9919f5", "filename": "gcc/graphite-poly.c", "status": "modified", "additions": 0, "deletions": 18, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/790befae61a1f5a84ab2eded7d828c14528641ba/gcc%2Fgraphite-poly.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/790befae61a1f5a84ab2eded7d828c14528641ba/gcc%2Fgraphite-poly.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgraphite-poly.c?ref=790befae61a1f5a84ab2eded7d828c14528641ba", "patch": "@@ -273,29 +273,11 @@ new_gimple_poly_bb (basic_block bb, vec<data_reference_p> drs)\n   return gbb;\n }\n \n-static void\n-free_data_refs_aux (vec<data_reference_p> datarefs)\n-{\n-  unsigned int i;\n-  data_reference_p dr;\n-\n-  FOR_EACH_VEC_ELT (datarefs, i, dr)\n-    if (dr->aux)\n-      {\n-\tbase_alias_pair_p bap = (base_alias_pair_p)(dr->aux);\n-\n-\tfree (bap->alias_set);\n-\n-\tfree (bap);\n-\tdr->aux = NULL;\n-      }\n-}\n /* Frees GBB.  */\n \n void\n free_gimple_poly_bb (gimple_poly_bb_p gbb)\n {\n-  free_data_refs_aux (GBB_DATA_REFS (gbb));\n   free_data_refs (GBB_DATA_REFS (gbb));\n \n   GBB_CONDITIONS (gbb).release ();"}, {"sha": "418af6ecc35952ae91367e16199784b01db5c93d", "filename": "gcc/graphite-poly.h", "status": "modified", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/790befae61a1f5a84ab2eded7d828c14528641ba/gcc%2Fgraphite-poly.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/790befae61a1f5a84ab2eded7d828c14528641ba/gcc%2Fgraphite-poly.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgraphite-poly.h?ref=790befae61a1f5a84ab2eded7d828c14528641ba", "patch": "@@ -417,12 +417,6 @@ struct scop\n #define SCOP_CONTEXT(S) (NULL)\n #define POLY_SCOP_P(S) (S->poly_scop_p)\n \n-typedef struct base_alias_pair\n-{\n-  int base_obj_set;\n-  int *alias_set;\n-} *base_alias_pair_p;\n-\n extern scop_p new_scop (edge, edge);\n extern void free_scop (scop_p);\n extern gimple_poly_bb_p new_gimple_poly_bb (basic_block, vec<data_reference_p>);"}, {"sha": "40b598d0edf5ebad6e2bce05da5dbbb909576c10", "filename": "gcc/graphite-sese-to-poly.c", "status": "modified", "additions": 4, "deletions": 25, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/790befae61a1f5a84ab2eded7d828c14528641ba/gcc%2Fgraphite-sese-to-poly.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/790befae61a1f5a84ab2eded7d828c14528641ba/gcc%2Fgraphite-sese-to-poly.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgraphite-sese-to-poly.c?ref=790befae61a1f5a84ab2eded7d828c14528641ba", "patch": "@@ -932,16 +932,9 @@ build_scop_iteration_domain (scop_p scop)\n static isl_map *\n pdr_add_alias_set (isl_map *acc, data_reference_p dr)\n {\n-  isl_constraint *c;\n-  int alias_set_num = 0;\n-  base_alias_pair *bap = (base_alias_pair *)(dr->aux);\n-\n-  if (bap && bap->alias_set)\n-    alias_set_num = *(bap->alias_set);\n-\n-  c = isl_equality_alloc\n+  isl_constraint *c = isl_equality_alloc\n       (isl_local_space_from_space (isl_map_get_space (acc)));\n-  c = isl_constraint_set_constant_si (c, -alias_set_num);\n+  c = isl_constraint_set_constant_si (c, -dr->alias_set);\n   c = isl_constraint_set_coefficient_si (c, isl_dim_out, 0, 1);\n \n   return isl_map_add_constraint (acc, c);\n@@ -1086,11 +1079,7 @@ build_poly_dr (data_reference_p dr, poly_bb_p pbb)\n     isl_id *id = isl_id_for_dr (scop, dr);\n     int nb = 1 + DR_NUM_DIMENSIONS (dr);\n     isl_space *space = isl_space_set_alloc (scop->isl_context, 0, nb);\n-    int alias_set_num = 0;\n-    base_alias_pair *bap = (base_alias_pair *)(dr->aux);\n-\n-    if (bap && bap->alias_set)\n-      alias_set_num = *(bap->alias_set);\n+    int alias_set_num = dr->alias_set;\n \n     space = isl_space_set_tuple_id (space, isl_dim_set, id);\n     subscript_sizes = isl_set_nat_universe (space);\n@@ -1130,18 +1119,8 @@ build_alias_set (vec<data_reference_p> drs)\n   graphds_dfs (g, all_vertices, num_vertices, NULL, true, NULL);\n   free (all_vertices);\n \n-  data_reference_p dr;\n-  FOR_EACH_VEC_ELT (drs, i, dr)\n-    dr->aux = XNEW (base_alias_pair);\n-\n   for (i = 0; i < g->n_vertices; i++)\n-    {\n-      data_reference_p dr = drs[i];\n-      base_alias_pair *bap = (base_alias_pair *)(dr->aux);\n-      bap->alias_set = XNEW (int);\n-      int c = g->vertices[i].component + 1;\n-      *(bap->alias_set) = c;\n-    }\n+    drs[i]->alias_set = g->vertices[i].component + 1;\n \n   free_graph (g);\n }"}, {"sha": "0ffa1db5d8774d03e92a71aa946b47e32f4f0c47", "filename": "gcc/tree-data-ref.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/790befae61a1f5a84ab2eded7d828c14528641ba/gcc%2Ftree-data-ref.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/790befae61a1f5a84ab2eded7d828c14528641ba/gcc%2Ftree-data-ref.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-data-ref.c?ref=790befae61a1f5a84ab2eded7d828c14528641ba", "patch": "@@ -1080,6 +1080,7 @@ create_data_ref (loop_p nest, loop_p loop, tree memref, gimple *stmt,\n   DR_STMT (dr) = stmt;\n   DR_REF (dr) = memref;\n   DR_IS_READ (dr) = is_read;\n+  dr->alias_set = 0;\n \n   dr_analyze_innermost (dr, nest);\n   dr_analyze_indices (dr, nest, loop);"}, {"sha": "e6f82ff86beb779c5d6f648ed17c73b2afdee62d", "filename": "gcc/tree-data-ref.h", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/790befae61a1f5a84ab2eded7d828c14528641ba/gcc%2Ftree-data-ref.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/790befae61a1f5a84ab2eded7d828c14528641ba/gcc%2Ftree-data-ref.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-data-ref.h?ref=790befae61a1f5a84ab2eded7d828c14528641ba", "patch": "@@ -127,6 +127,9 @@ struct data_reference\n \n   /* Alias information for the data reference.  */\n   struct dr_alias alias;\n+\n+  /* The alias set for this data reference.  */\n+  int alias_set;\n };\n \n #define DR_STMT(DR)                (DR)->stmt"}]}