{"sha": "e61c76c9694ab63c2a3b4324f75affda62c3718b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTYxYzc2Yzk2OTRhYjYzYzJhM2I0MzI0Zjc1YWZmZGE2MmMzNzE4Yg==", "commit": {"author": {"name": "Steve Ellcey", "email": "sje@cup.hp.com", "date": "2008-11-12T21:37:34Z"}, "committer": {"name": "Steve Ellcey", "email": "sje@gcc.gnu.org", "date": "2008-11-12T21:37:34Z"}, "message": "re PR target/27880 (undefined reference to `_Unwind_GetIPInfo')\n\n        PR target/27880\n        * configure.ac (GCC_CHECK_UNWIND_GETIPINFO): Use this macro\n        to set HAVE_GETIPINFO.\n        * aclocal.m4: Include ../config/unwind_ipinfo.m4.\n        * configure: Regenerate.\n        * config.in: Regenerate.\n\nFrom-SVN: r141805", "tree": {"sha": "1c72fcb5aeac98f54dbe965ecdb48c2e19c8afe0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1c72fcb5aeac98f54dbe965ecdb48c2e19c8afe0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e61c76c9694ab63c2a3b4324f75affda62c3718b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e61c76c9694ab63c2a3b4324f75affda62c3718b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e61c76c9694ab63c2a3b4324f75affda62c3718b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e61c76c9694ab63c2a3b4324f75affda62c3718b/comments", "author": null, "committer": null, "parents": [{"sha": "bc3f0248ddfa498453e062df40b22459243d1b92", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bc3f0248ddfa498453e062df40b22459243d1b92", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bc3f0248ddfa498453e062df40b22459243d1b92"}], "stats": {"total": 233, "additions": 50, "deletions": 183}, "files": [{"sha": "ac94fbc68e641054d649b12cacc4afd6fda6aabc", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e61c76c9694ab63c2a3b4324f75affda62c3718b/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e61c76c9694ab63c2a3b4324f75affda62c3718b/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=e61c76c9694ab63c2a3b4324f75affda62c3718b", "patch": "@@ -1,3 +1,12 @@\n+2008-11-12  Steve Ellcey  <sje@cup.hp.com>\n+\n+\tPR target/27880\n+\t* configure.ac (GCC_CHECK_UNWIND_GETIPINFO): Use this macro\n+\tto set HAVE_GETIPINFO.\n+\t* aclocal.m4: Include ../config/unwind_ipinfo.m4.\n+\t* configure: Regenerate.\n+\t* config.in: Regenerate.\n+\n 2008-11-12  Jack Howarth  <howarth@bromo.med.uc.edu>\n \n \tPR bootstrap/38010"}, {"sha": "72765902458aec0573f08b845100c9d24cc8e1e0", "filename": "gcc/aclocal.m4", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e61c76c9694ab63c2a3b4324f75affda62c3718b/gcc%2Faclocal.m4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e61c76c9694ab63c2a3b4324f75affda62c3718b/gcc%2Faclocal.m4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Faclocal.m4?ref=e61c76c9694ab63c2a3b4324f75affda62c3718b", "patch": "@@ -103,6 +103,7 @@ m4_include([../config/lib-link.m4])\n m4_include([../config/lib-prefix.m4])\n m4_include([../config/override.m4])\n m4_include([../config/progtest.m4])\n+m4_include([../config/unwind_ipinfo.m4])\n m4_include([../config/warnings.m4])\n m4_include([../libtool.m4])\n m4_include([../ltoptions.m4])"}, {"sha": "cb4d82bc5fc2949869fdb97f7cd95c88ab5566e3", "filename": "gcc/config.in", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e61c76c9694ab63c2a3b4324f75affda62c3718b/gcc%2Fconfig.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e61c76c9694ab63c2a3b4324f75affda62c3718b/gcc%2Fconfig.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig.in?ref=e61c76c9694ab63c2a3b4324f75affda62c3718b", "patch": "@@ -918,8 +918,11 @@\n #endif\n \n \n-/* Define to 1 if system unwind library has _Unwind_GetIPInfo. */\n+/* Define if _Unwind_GetIPInfo is available. */\n+#ifndef USED_FOR_TARGET\n #undef HAVE_GETIPINFO\n+#endif\n+\n \n /* Define to 1 if you have the `getrlimit' function. */\n #ifndef USED_FOR_TARGET"}, {"sha": "f40c08c12cee738fed5502d6875433b2f7ee79ea", "filename": "gcc/configure", "status": "modified", "additions": 35, "deletions": 161, "changes": 196, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e61c76c9694ab63c2a3b4324f75affda62c3718b/gcc%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e61c76c9694ab63c2a3b4324f75affda62c3718b/gcc%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfigure?ref=e61c76c9694ab63c2a3b4324f75affda62c3718b", "patch": "@@ -13083,21 +13083,39 @@ fi\n \n # For platforms with the unwind ABI which includes an unwind library,\n # libunwind, we can choose to use the system libunwind.\n+# config.gcc also contains tests of with_system_libunwind.\n+\n \n # Check whether --with-system-libunwind or --without-system-libunwind was given.\n if test \"${with_system_libunwind+set}\" = set; then\n   withval=\"$with_system_libunwind\"\n \n fi;\n+  # If system-libunwind was not specifically set, pick a default setting.\n+  if test x$with_system_libunwind = x; then\n+    case ${target} in\n+      ia64-*-hpux*) with_system_libunwind=yes ;;\n+      *) with_system_libunwind=no ;;\n+    esac\n+  fi\n+  # Based on system-libunwind and target, do we have ipinfo?\n+  if  test x$with_system_libunwind = xyes; then\n+    case ${target} in\n+      ia64-*-*) have_unwind_getipinfo=no ;;\n+      *) have_unwind_getipinfo=yes ;;\n+    esac\n+  else\n+     have_unwind_getipinfo=yes\n+  fi\n \n-# config.gcc also contains tests of with_system_libunwind.\n-if test x$with_system_libunwind = xyes; then\n+  if test x$have_unwind_getipinfo = xyes; then\n \n cat >>confdefs.h <<\\_ACEOF\n #define HAVE_GETIPINFO 1\n _ACEOF\n \n-fi\n+  fi\n+\n \n # --------------------------------------------------------\n # Build, host, and target specific configuration fragments\n@@ -13465,150 +13483,6 @@ _ACEOF\n   fi\n fi\n \n-use_getipinfo=yes\n-if test x$with_system_libunwind = xyes; then\n-   if test x$host = x$target; then\n-     echo \"$as_me:$LINENO: checking for library containing _Unwind_GetIPInfo\" >&5\n-echo $ECHO_N \"checking for library containing _Unwind_GetIPInfo... $ECHO_C\" >&6\n-if test \"${ac_cv_search__Unwind_GetIPInfo+set}\" = set; then\n-  echo $ECHO_N \"(cached) $ECHO_C\" >&6\n-else\n-  ac_func_search_save_LIBS=$LIBS\n-ac_cv_search__Unwind_GetIPInfo=no\n-cat >conftest.$ac_ext <<_ACEOF\n-/* confdefs.h.  */\n-_ACEOF\n-cat confdefs.h >>conftest.$ac_ext\n-cat >>conftest.$ac_ext <<_ACEOF\n-/* end confdefs.h.  */\n-\n-/* Override any gcc2 internal prototype to avoid an error.  */\n-#ifdef __cplusplus\n-extern \"C\"\n-#endif\n-/* We use char because int might match the return type of a gcc2\n-   builtin and then its argument prototype would still apply.  */\n-char _Unwind_GetIPInfo ();\n-int\n-main ()\n-{\n-_Unwind_GetIPInfo ();\n-  ;\n-  return 0;\n-}\n-_ACEOF\n-rm -f conftest.$ac_objext conftest$ac_exeext\n-if { (eval echo \"$as_me:$LINENO: \\\"$ac_link\\\"\") >&5\n-  (eval $ac_link) 2>conftest.er1\n-  ac_status=$?\n-  grep -v '^ *+' conftest.er1 >conftest.err\n-  rm -f conftest.er1\n-  cat conftest.err >&5\n-  echo \"$as_me:$LINENO: \\$? = $ac_status\" >&5\n-  (exit $ac_status); } &&\n-\t { ac_try='test -z \"$ac_c_werror_flag\"\n-\t\t\t || test ! -s conftest.err'\n-  { (eval echo \"$as_me:$LINENO: \\\"$ac_try\\\"\") >&5\n-  (eval $ac_try) 2>&5\n-  ac_status=$?\n-  echo \"$as_me:$LINENO: \\$? = $ac_status\" >&5\n-  (exit $ac_status); }; } &&\n-\t { ac_try='test -s conftest$ac_exeext'\n-  { (eval echo \"$as_me:$LINENO: \\\"$ac_try\\\"\") >&5\n-  (eval $ac_try) 2>&5\n-  ac_status=$?\n-  echo \"$as_me:$LINENO: \\$? = $ac_status\" >&5\n-  (exit $ac_status); }; }; then\n-  ac_cv_search__Unwind_GetIPInfo=\"none required\"\n-else\n-  echo \"$as_me: failed program was:\" >&5\n-sed 's/^/| /' conftest.$ac_ext >&5\n-\n-fi\n-rm -f conftest.err conftest.$ac_objext \\\n-      conftest$ac_exeext conftest.$ac_ext\n-if test \"$ac_cv_search__Unwind_GetIPInfo\" = no; then\n-  for ac_lib in unwind; do\n-    LIBS=\"-l$ac_lib  $ac_func_search_save_LIBS\"\n-    cat >conftest.$ac_ext <<_ACEOF\n-/* confdefs.h.  */\n-_ACEOF\n-cat confdefs.h >>conftest.$ac_ext\n-cat >>conftest.$ac_ext <<_ACEOF\n-/* end confdefs.h.  */\n-\n-/* Override any gcc2 internal prototype to avoid an error.  */\n-#ifdef __cplusplus\n-extern \"C\"\n-#endif\n-/* We use char because int might match the return type of a gcc2\n-   builtin and then its argument prototype would still apply.  */\n-char _Unwind_GetIPInfo ();\n-int\n-main ()\n-{\n-_Unwind_GetIPInfo ();\n-  ;\n-  return 0;\n-}\n-_ACEOF\n-rm -f conftest.$ac_objext conftest$ac_exeext\n-if { (eval echo \"$as_me:$LINENO: \\\"$ac_link\\\"\") >&5\n-  (eval $ac_link) 2>conftest.er1\n-  ac_status=$?\n-  grep -v '^ *+' conftest.er1 >conftest.err\n-  rm -f conftest.er1\n-  cat conftest.err >&5\n-  echo \"$as_me:$LINENO: \\$? = $ac_status\" >&5\n-  (exit $ac_status); } &&\n-\t { ac_try='test -z \"$ac_c_werror_flag\"\n-\t\t\t || test ! -s conftest.err'\n-  { (eval echo \"$as_me:$LINENO: \\\"$ac_try\\\"\") >&5\n-  (eval $ac_try) 2>&5\n-  ac_status=$?\n-  echo \"$as_me:$LINENO: \\$? = $ac_status\" >&5\n-  (exit $ac_status); }; } &&\n-\t { ac_try='test -s conftest$ac_exeext'\n-  { (eval echo \"$as_me:$LINENO: \\\"$ac_try\\\"\") >&5\n-  (eval $ac_try) 2>&5\n-  ac_status=$?\n-  echo \"$as_me:$LINENO: \\$? = $ac_status\" >&5\n-  (exit $ac_status); }; }; then\n-  ac_cv_search__Unwind_GetIPInfo=\"-l$ac_lib\"\n-break\n-else\n-  echo \"$as_me: failed program was:\" >&5\n-sed 's/^/| /' conftest.$ac_ext >&5\n-\n-fi\n-rm -f conftest.err conftest.$ac_objext \\\n-      conftest$ac_exeext conftest.$ac_ext\n-  done\n-fi\n-LIBS=$ac_func_search_save_LIBS\n-fi\n-echo \"$as_me:$LINENO: result: $ac_cv_search__Unwind_GetIPInfo\" >&5\n-echo \"${ECHO_T}$ac_cv_search__Unwind_GetIPInfo\" >&6\n-if test \"$ac_cv_search__Unwind_GetIPInfo\" != no; then\n-  test \"$ac_cv_search__Unwind_GetIPInfo\" = \"none required\" || LIBS=\"$ac_cv_search__Unwind_GetIPInfo $LIBS\"\n-\n-else\n-  use_getipinfo=no\n-fi\n-\n-   fi\n-fi\n-\n-if test x$use_getipinfo = xyes; then\n-\n-cat >>confdefs.h <<\\_ACEOF\n-#define HAVE_GETIPINFO 1\n-_ACEOF\n-\n-else\n-   echo \"The system unwind library does not support _Unwind_GetIPInfo.\"\n-fi\n-\n # Look for a file containing extra machine modes.\n if test -n \"$extra_modes\" && test -f $srcdir/config/$extra_modes; then\n   extra_modes_file='$(srcdir)'/config/${extra_modes}\n@@ -14629,13 +14503,13 @@ if test \"${lt_cv_nm_interface+set}\" = set; then\n else\n   lt_cv_nm_interface=\"BSD nm\"\n   echo \"int some_variable = 0;\" > conftest.$ac_ext\n-  (eval echo \"\\\"\\$as_me:14632: $ac_compile\\\"\" >&5)\n+  (eval echo \"\\\"\\$as_me:14506: $ac_compile\\\"\" >&5)\n   (eval \"$ac_compile\" 2>conftest.err)\n   cat conftest.err >&5\n-  (eval echo \"\\\"\\$as_me:14635: $NM \\\\\\\"conftest.$ac_objext\\\\\\\"\\\"\" >&5)\n+  (eval echo \"\\\"\\$as_me:14509: $NM \\\\\\\"conftest.$ac_objext\\\\\\\"\\\"\" >&5)\n   (eval \"$NM \\\"conftest.$ac_objext\\\"\" 2>conftest.err > conftest.out)\n   cat conftest.err >&5\n-  (eval echo \"\\\"\\$as_me:14638: output\\\"\" >&5)\n+  (eval echo \"\\\"\\$as_me:14512: output\\\"\" >&5)\n   cat conftest.out >&5\n   if $GREP 'External.*some_variable' conftest.out > /dev/null; then\n     lt_cv_nm_interface=\"MS dumpbin\"\n@@ -15792,7 +15666,7 @@ ia64-*-hpux*)\n   ;;\n *-*-irix6*)\n   # Find out which ABI we are using.\n-  echo '#line 15795 \"configure\"' > conftest.$ac_ext\n+  echo '#line 15669 \"configure\"' > conftest.$ac_ext\n   if { (eval echo \"$as_me:$LINENO: \\\"$ac_compile\\\"\") >&5\n   (eval $ac_compile) 2>&5\n   ac_status=$?\n@@ -17091,11 +16965,11 @@ else\n    -e 's:.*FLAGS}\\{0,1\\} :&$lt_compiler_flag :; t' \\\n    -e 's: [^ ]*conftest\\.: $lt_compiler_flag&:; t' \\\n    -e 's:$: $lt_compiler_flag:'`\n-   (eval echo \"\\\"\\$as_me:17094: $lt_compile\\\"\" >&5)\n+   (eval echo \"\\\"\\$as_me:16968: $lt_compile\\\"\" >&5)\n    (eval \"$lt_compile\" 2>conftest.err)\n    ac_status=$?\n    cat conftest.err >&5\n-   echo \"$as_me:17098: \\$? = $ac_status\" >&5\n+   echo \"$as_me:16972: \\$? = $ac_status\" >&5\n    if (exit $ac_status) && test -s \"$ac_outfile\"; then\n      # The compiler can only warn and ignore the option if not recognized\n      # So say no if there are warnings other than the usual output.\n@@ -17430,11 +17304,11 @@ else\n    -e 's:.*FLAGS}\\{0,1\\} :&$lt_compiler_flag :; t' \\\n    -e 's: [^ ]*conftest\\.: $lt_compiler_flag&:; t' \\\n    -e 's:$: $lt_compiler_flag:'`\n-   (eval echo \"\\\"\\$as_me:17433: $lt_compile\\\"\" >&5)\n+   (eval echo \"\\\"\\$as_me:17307: $lt_compile\\\"\" >&5)\n    (eval \"$lt_compile\" 2>conftest.err)\n    ac_status=$?\n    cat conftest.err >&5\n-   echo \"$as_me:17437: \\$? = $ac_status\" >&5\n+   echo \"$as_me:17311: \\$? = $ac_status\" >&5\n    if (exit $ac_status) && test -s \"$ac_outfile\"; then\n      # The compiler can only warn and ignore the option if not recognized\n      # So say no if there are warnings other than the usual output.\n@@ -17535,11 +17409,11 @@ else\n    -e 's:.*FLAGS}\\{0,1\\} :&$lt_compiler_flag :; t' \\\n    -e 's: [^ ]*conftest\\.: $lt_compiler_flag&:; t' \\\n    -e 's:$: $lt_compiler_flag:'`\n-   (eval echo \"\\\"\\$as_me:17538: $lt_compile\\\"\" >&5)\n+   (eval echo \"\\\"\\$as_me:17412: $lt_compile\\\"\" >&5)\n    (eval \"$lt_compile\" 2>out/conftest.err)\n    ac_status=$?\n    cat out/conftest.err >&5\n-   echo \"$as_me:17542: \\$? = $ac_status\" >&5\n+   echo \"$as_me:17416: \\$? = $ac_status\" >&5\n    if (exit $ac_status) && test -s out/conftest2.$ac_objext\n    then\n      # The compiler can only warn and ignore the option if not recognized\n@@ -17590,11 +17464,11 @@ else\n    -e 's:.*FLAGS}\\{0,1\\} :&$lt_compiler_flag :; t' \\\n    -e 's: [^ ]*conftest\\.: $lt_compiler_flag&:; t' \\\n    -e 's:$: $lt_compiler_flag:'`\n-   (eval echo \"\\\"\\$as_me:17593: $lt_compile\\\"\" >&5)\n+   (eval echo \"\\\"\\$as_me:17467: $lt_compile\\\"\" >&5)\n    (eval \"$lt_compile\" 2>out/conftest.err)\n    ac_status=$?\n    cat out/conftest.err >&5\n-   echo \"$as_me:17597: \\$? = $ac_status\" >&5\n+   echo \"$as_me:17471: \\$? = $ac_status\" >&5\n    if (exit $ac_status) && test -s out/conftest2.$ac_objext\n    then\n      # The compiler can only warn and ignore the option if not recognized\n@@ -20387,7 +20261,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 20390 \"configure\"\n+#line 20264 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -20483,7 +20357,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 20486 \"configure\"\n+#line 20360 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H"}, {"sha": "3e53b02bf1637452279f369246ea4d628d18bffa", "filename": "gcc/configure.ac", "status": "modified", "additions": 1, "deletions": 21, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e61c76c9694ab63c2a3b4324f75affda62c3718b/gcc%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e61c76c9694ab63c2a3b4324f75affda62c3718b/gcc%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfigure.ac?ref=e61c76c9694ab63c2a3b4324f75affda62c3718b", "patch": "@@ -1188,14 +1188,8 @@ fi\n \n # For platforms with the unwind ABI which includes an unwind library,\n # libunwind, we can choose to use the system libunwind.\n-AC_ARG_WITH(system-libunwind,\n-[  --with-system-libunwind use installed libunwind])\n-\n # config.gcc also contains tests of with_system_libunwind.\n-if test x$with_system_libunwind = xyes; then\n-        AC_DEFINE(HAVE_GETIPINFO, 1,\n-[Define to 1 if system unwind library has _Unwind_GetIPInfo.])\n-fi\n+GCC_CHECK_UNWIND_GETIPINFO\n \n # --------------------------------------------------------\n # Build, host, and target specific configuration fragments\n@@ -1421,20 +1415,6 @@ if test x$enable___cxa_atexit = xyes || \\\n   fi\n fi\n \n-use_getipinfo=yes\n-if test x$with_system_libunwind = xyes; then\n-   if test x$host = x$target; then\n-     AC_SEARCH_LIBS(_Unwind_GetIPInfo, unwind,, [use_getipinfo=no])\n-   fi\n-fi\n-GCC_TARGET_TEMPLATE(HAVE_GETIPINFO)\n-if test x$use_getipinfo = xyes; then\n-   AC_DEFINE(HAVE_GETIPINFO, 1,\n-\t[Define to 1 if system unwind library has _Unwind_GetIPInfo.])\n-else\n-   echo \"The system unwind library does not support _Unwind_GetIPInfo.\"\n-fi\n-\n # Look for a file containing extra machine modes.\n if test -n \"$extra_modes\" && test -f $srcdir/config/$extra_modes; then\n   extra_modes_file='$(srcdir)'/config/${extra_modes}"}]}