{"sha": "a85993787b6d4270ae5447eed498168a1c37642b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTg1OTkzNzg3YjZkNDI3MGFlNTQ0N2VlZDQ5ODE2OGExYzM3NjQyYg==", "commit": {"author": {"name": "Mark Wielaard", "email": "mark@klomp.org", "date": "2003-08-26T22:42:37Z"}, "committer": {"name": "Tom Tromey", "email": "tromey@gcc.gnu.org", "date": "2003-08-26T22:42:37Z"}, "message": "Acl.java: Fix broken p tag.\n\n2003-08-26  Mark Wielaard  <mark@klomp.org>\n\n\t* java/security/acl/Acl.java: Fix broken p tag.\n\t* java/text/DateFormatSymbols.java: Correctly open and close li tags.\n\t* javax/swing/border/LineBorder.java: Close img tag alt attributes.\n\t* javax/swing/plaf/TreeUI.java: Likewise.\n\t* javax/swing/plaf/basic/BasicTreeUI.java: Likewise.\n\t* java/util/Properties.java: Use the word umlaut, not &auml; in api\n\tdocumentation.\n\t* java/util/PropertyResourceBundle.java: Likewise and add closing code\n\ttag.\n\nFrom-SVN: r70825", "tree": {"sha": "45c62676692e2d70b2a2b3b6e72d2bfbf8f4dfd5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/45c62676692e2d70b2a2b3b6e72d2bfbf8f4dfd5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a85993787b6d4270ae5447eed498168a1c37642b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a85993787b6d4270ae5447eed498168a1c37642b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a85993787b6d4270ae5447eed498168a1c37642b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a85993787b6d4270ae5447eed498168a1c37642b/comments", "author": null, "committer": null, "parents": [{"sha": "18b3501e639925e4de72b6b7be07c4c667e74090", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/18b3501e639925e4de72b6b7be07c4c667e74090", "html_url": "https://github.com/Rust-GCC/gccrs/commit/18b3501e639925e4de72b6b7be07c4c667e74090"}], "stats": {"total": 100, "additions": 56, "deletions": 44}, "files": [{"sha": "fdb5570956bb3b1d42d6860a6d8fd7e387d9c91e", "filename": "libjava/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a85993787b6d4270ae5447eed498168a1c37642b/libjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a85993787b6d4270ae5447eed498168a1c37642b/libjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog?ref=a85993787b6d4270ae5447eed498168a1c37642b", "patch": "@@ -1,3 +1,15 @@\n+2003-08-26  Mark Wielaard  <mark@klomp.org>\n+\n+\t* java/security/acl/Acl.java: Fix broken p tag.\n+\t* java/text/DateFormatSymbols.java: Correctly open and close li tags.\n+\t* javax/swing/border/LineBorder.java: Close img tag alt attributes.\n+\t* javax/swing/plaf/TreeUI.java: Likewise.\n+\t* javax/swing/plaf/basic/BasicTreeUI.java: Likewise.\n+\t* java/util/Properties.java: Use the word umlaut, not &auml; in api\n+\tdocumentation.\n+\t* java/util/PropertyResourceBundle.java: Likewise and add closing code\n+\ttag.\n+\n 2003-08-26  Tom Tromey  <tromey@redhat.com>\n \n \t* Makefile.in: Rebuilt."}, {"sha": "07d07ecd4a4a7a5974fca9e95b84bc3c7469275d", "filename": "libjava/java/security/acl/Acl.java", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a85993787b6d4270ae5447eed498168a1c37642b/libjava%2Fjava%2Fsecurity%2Facl%2FAcl.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a85993787b6d4270ae5447eed498168a1c37642b/libjava%2Fjava%2Fsecurity%2Facl%2FAcl.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fsecurity%2Facl%2FAcl.java?ref=a85993787b6d4270ae5447eed498168a1c37642b", "patch": "@@ -52,7 +52,7 @@\n  * <code>Principal</code> belongs have an ACL entry, the permissions for\n  * the individual <code>Principal</code> take precedence over the \n  * permissions of the <code>Group</code> if there is a conflict.\n- * <p\n+ * <p>\n  * Additionally, the ACL interface extends the <code>Owner</code> interface\n  * and so an ACL has owners.  Actions which modify the ACL are restricted\n  * to owners."}, {"sha": "e6cf9ea3cc84edfb6f4bf87f0fa1646e1ee50090", "filename": "libjava/java/text/DateFormatSymbols.java", "status": "modified", "additions": 37, "deletions": 37, "changes": 74, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a85993787b6d4270ae5447eed498168a1c37642b/libjava%2Fjava%2Ftext%2FDateFormatSymbols.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a85993787b6d4270ae5447eed498168a1c37642b/libjava%2Fjava%2Ftext%2FDateFormatSymbols.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Ftext%2FDateFormatSymbols.java?ref=a85993787b6d4270ae5447eed498168a1c37642b", "patch": "@@ -1,5 +1,5 @@\n /* ChoiceFormat.java -- Format over a range of numbers\n-   Copyright (C) 1998, 1999, 2000, 2001 Free Software Foundation, Inc.\n+   Copyright (C) 1998, 1999, 2000, 2001, 2003 Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -156,24 +156,24 @@ public String[] getEras()\n     * locale):\n     * <p>\n     * <ul>\n-    * <li>0 - era (G)\n-    * <li>1 - year (y)\n-    * <li>2 - month (M)\n-    * <li 3 - day of month (d)\n-    * <li>4 - hour out of 12, from 1-12 (h)\n-    * <li>5 - hour out of 24, from 0-23 (H)\n-    * <li>6 - minute (m)\n-    * <li>7 - second (s)\n-    * <li>8 - millisecond (S)\n-    * <li>9 - date of week (E)\n-    * <li>10 - date of year (D)\n-    * <li>11 - day of week in month, eg. \"4th Thur in Nov\" (F)\n-    * <li>12 - week in year (w)\n-    * <li>13 - week in month (W)\n-    * <li>14 - am/pm (a)\n-    * <li>15 - hour out of 24, from 1-24 (k)\n-    * <li>16 - hour out of 12, from 0-11 (K)\n-    * <li>17 - time zone (z)\n+    * <li>0 - era (G)</li>\n+    * <li>1 - year (y)</li>\n+    * <li>2 - month (M)</li>\n+    * <li>3 - day of month (d)</li>\n+    * <li>4 - hour out of 12, from 1-12 (h)</li>\n+    * <li>5 - hour out of 24, from 0-23 (H)</li>\n+    * <li>6 - minute (m)</li>\n+    * <li>7 - second (s)</li>\n+    * <li>8 - millisecond (S)</li>\n+    * <li>9 - date of week (E)</li>\n+    * <li>10 - date of year (D)</li>\n+    * <li>11 - day of week in month, eg. \"4th Thur in Nov\" (F)</li>\n+    * <li>12 - week in year (w)</li>\n+    * <li>13 - week in month (W)</li>\n+    * <li>14 - am/pm (a)</li>\n+    * <li>15 - hour out of 24, from 1-24 (k)</li>\n+    * <li>16 - hour out of 12, from 0-11 (K)</li>\n+    * <li>17 - time zone (z)</li>\n     * </ul>\n     *\n     * @return The format patter characters\n@@ -295,24 +295,24 @@ public void setEras (String[] value)\n     * locale):\n     * <p>\n     * <ul>\n-    * <li>0 - era (G)\n-    * <li>1 - year (y)\n-    * <li>2 - month (M)\n-    * <li 3 - day of month (d)\n-    * <li>4 - hour out of 12, from 1-12 (h)\n-    * <li>5 - hour out of 24, from 0-23 (H)\n-    * <li>6 - minute (m)\n-    * <li>7 - second (s)\n-    * <li>8 - millisecond (S)\n-    * <li>9 - date of week (E)\n-    * <li>10 - date of year (D)\n-    * <li>11 - day of week in month, eg. \"4th Thur in Nov\" (F)\n-    * <li>12 - week in year (w)\n-    * <li>13 - week in month (W)\n-    * <li>14 - am/pm (a)\n-    * <li>15 - hour out of 24, from 1-24 (k)\n-    * <li>16 - hour out of 12, from 0-11 (K)\n-    * <li>17 - time zone (z)\n+    * <li>0 - era (G)</li>\n+    * <li>1 - year (y)</li>\n+    * <li>2 - month (M)</li>\n+    * <li>3 - day of month (d)</li>\n+    * <li>4 - hour out of 12, from 1-12 (h)</li>\n+    * <li>5 - hour out of 24, from 0-23 (H)</li>\n+    * <li>6 - minute (m)</li>\n+    * <li>7 - second (s)</li>\n+    * <li>8 - millisecond (S)</li>\n+    * <li>9 - date of week (E)</li>\n+    * <li>10 - date of year (D)</li>\n+    * <li>11 - day of week in month, eg. \"4th Thur in Nov\" (F)</li>\n+    * <li>12 - week in year (w)</li>\n+    * <li>13 - week in month (W)</li>\n+    * <li>14 - am/pm (a)</li>\n+    * <li>15 - hour out of 24, from 1-24 (k)</li>\n+    * <li>16 - hour out of 12, from 0-11 (K)</li>\n+    * <li>17 - time zone (z)</li>\n     * </ul>\n     *\n     * @param localPatternChars The new format patter characters"}, {"sha": "2f4428958d4bcfdd8d26cf7be90615b9cccefc8c", "filename": "libjava/java/util/Properties.java", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a85993787b6d4270ae5447eed498168a1c37642b/libjava%2Fjava%2Futil%2FProperties.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a85993787b6d4270ae5447eed498168a1c37642b/libjava%2Fjava%2Futil%2FProperties.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Futil%2FProperties.java?ref=a85993787b6d4270ae5447eed498168a1c37642b", "patch": "@@ -56,7 +56,7 @@\n  * here.  This extends the example given in ListResourceBundle.\n  * Create a file MyResource_de.properties with the following contents\n  * and put it in the CLASSPATH.  (The character\n- * <code>\\</code><code>u00e4</code> is the german &auml;)\n+ * <code>\\</code><code>u00e4</code> is the german umlaut)\n  *\n  * \n <pre>s1=3"}, {"sha": "d873e134e627a84d6ddf46921fb2b6b7418736e9", "filename": "libjava/java/util/PropertyResourceBundle.java", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a85993787b6d4270ae5447eed498168a1c37642b/libjava%2Fjava%2Futil%2FPropertyResourceBundle.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a85993787b6d4270ae5447eed498168a1c37642b/libjava%2Fjava%2Futil%2FPropertyResourceBundle.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Futil%2FPropertyResourceBundle.java?ref=a85993787b6d4270ae5447eed498168a1c37642b", "patch": "@@ -61,8 +61,8 @@\n  * An example of a properties file for the german language is given\n  * here. This extends the example given in ListResourceBundle.\n  * Create a file MyResource_de.properties with the following contents\n- * and put it in the CLASSPATH. (The char <code>\\u00e4<char> is the\n- * german &auml;)\n+ * and put it in the CLASSPATH. (The char <code>\\u00e4</code> is the\n+ * german umlaut)\n  *\n  *\n <pre>"}, {"sha": "2b8c8bae98edeed8ff48efa73086f13425ab1c28", "filename": "libjava/javax/swing/border/LineBorder.java", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a85993787b6d4270ae5447eed498168a1c37642b/libjava%2Fjavax%2Fswing%2Fborder%2FLineBorder.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a85993787b6d4270ae5447eed498168a1c37642b/libjava%2Fjavax%2Fswing%2Fborder%2FLineBorder.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2Fborder%2FLineBorder.java?ref=a85993787b6d4270ae5447eed498168a1c37642b", "patch": "@@ -129,7 +129,7 @@ public LineBorder(Color color, int thickness)\n    * it has rounded corners.\n    * \n    * <p><img src=\"doc-files/LineBorder-1.png\" width=\"500\" height=\"200\"\n-   * alt=\"[An illustration of two LineBorders] />\n+   * alt=\"[An illustration of two LineBorders]\" />\n    *\n    * <p>Note that the enlarged view in the right-hand picture shows\n    * that the implementation draws one more pixel than specified,"}, {"sha": "55327e2a01464c67b610fa3ec6a5fbc3f9645e91", "filename": "libjava/javax/swing/plaf/TreeUI.java", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a85993787b6d4270ae5447eed498168a1c37642b/libjava%2Fjavax%2Fswing%2Fplaf%2FTreeUI.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a85993787b6d4270ae5447eed498168a1c37642b/libjava%2Fjavax%2Fswing%2Fplaf%2FTreeUI.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2Fplaf%2FTreeUI.java?ref=a85993787b6d4270ae5447eed498168a1c37642b", "patch": "@@ -126,7 +126,7 @@ public TreeUI()\n    * Finds the path that is closest to the specified position.\n    *\n    * <p><img src=\"doc-files/TreeUI-1.png\" width=\"300\" height=\"250\"\n-   * alt=\"[A screen shot of a JTree] />\n+   * alt=\"[A screen shot of a JTree]\" />\n    *\n    * <p>As shown by the above illustration, the bounds of the\n    * closest path do not necessarily need to contain the passed"}, {"sha": "dac2f01601b2ea825fafb21c31a8066b783b1346", "filename": "libjava/javax/swing/plaf/basic/BasicTreeUI.java", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a85993787b6d4270ae5447eed498168a1c37642b/libjava%2Fjavax%2Fswing%2Fplaf%2Fbasic%2FBasicTreeUI.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a85993787b6d4270ae5447eed498168a1c37642b/libjava%2Fjavax%2Fswing%2Fplaf%2Fbasic%2FBasicTreeUI.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2Fplaf%2Fbasic%2FBasicTreeUI.java?ref=a85993787b6d4270ae5447eed498168a1c37642b", "patch": "@@ -133,7 +133,7 @@ public int getRowCount(JTree tree)\n    * Finds the path that is closest to the specified position.\n    *\n    * <p><img src=\"../doc-files/TreeUI-1.png\" width=\"300\" height=\"250\"\n-   * alt=\"[A screen shot of a JTree] />\n+   * alt=\"[A screen shot of a JTree]\" />\n    *\n    * <p>As shown by the above illustration, the bounds of the\n    * closest path do not necessarily need to contain the passed"}]}