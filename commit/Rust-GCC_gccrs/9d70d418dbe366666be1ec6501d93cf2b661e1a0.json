{"sha": "9d70d418dbe366666be1ec6501d93cf2b661e1a0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OWQ3MGQ0MThkYmUzNjY2NjZiZTFlYzY1MDFkOTNjZjJiNjYxZTFhMA==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2003-05-07T20:30:32Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2003-05-07T20:30:32Z"}, "message": "s/burtle/iterative\n\nFrom-SVN: r66577", "tree": {"sha": "51dc680001a4c521cc9b61cfc6eea83195a4bb3e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/51dc680001a4c521cc9b61cfc6eea83195a4bb3e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9d70d418dbe366666be1ec6501d93cf2b661e1a0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9d70d418dbe366666be1ec6501d93cf2b661e1a0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9d70d418dbe366666be1ec6501d93cf2b661e1a0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9d70d418dbe366666be1ec6501d93cf2b661e1a0/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "0dfcf38eb26e33fe20ad808975b05185d653621b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0dfcf38eb26e33fe20ad808975b05185d653621b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0dfcf38eb26e33fe20ad808975b05185d653621b"}], "stats": {"total": 12, "additions": 6, "deletions": 6}, "files": [{"sha": "e4aad2ba993b2fd2928ca7dc34cd5b63325382fb", "filename": "include/ChangeLog", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9d70d418dbe366666be1ec6501d93cf2b661e1a0/include%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9d70d418dbe366666be1ec6501d93cf2b661e1a0/include%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/include%2FChangeLog?ref=9d70d418dbe366666be1ec6501d93cf2b661e1a0", "patch": "@@ -1,7 +1,7 @@\n 2003-05-07  Jason Merrill  <jason@redhat.com>\n \n-\t* hashtab.h (burtle_hash): Prototype.\n-\t(burtle_hash_object): New macro.\n+\t* hashtab.h (iterative_hash): Prototype.\n+\t(iterative_hash_object): New macro.\n \n 2003-03-17  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n "}, {"sha": "f7bd4ae69d38cd18eb2b9dd56903f6ee7f5af710", "filename": "include/hashtab.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9d70d418dbe366666be1ec6501d93cf2b661e1a0/include%2Fhashtab.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9d70d418dbe366666be1ec6501d93cf2b661e1a0/include%2Fhashtab.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/include%2Fhashtab.h?ref=9d70d418dbe366666be1ec6501d93cf2b661e1a0", "patch": "@@ -184,9 +184,9 @@ extern htab_eq htab_eq_pointer;\n extern hashval_t htab_hash_string PARAMS ((const PTR));\n \n /* An iterative hash function for arbitrary data.  */\n-extern hashval_t burtle_hash PARAMS ((const PTR, size_t, hashval_t));\n+extern hashval_t iterative_hash PARAMS ((const PTR, size_t, hashval_t));\n /* Shorthand for hashing something with an intrinsic size.  */\n-#define burtle_hash_object(OB,INIT) burtle_hash (&OB, sizeof (OB), INIT)\n+#define iterative_hash_object(OB,INIT) iterative_hash (&OB, sizeof (OB), INIT)\n \n #ifdef __cplusplus\n }"}, {"sha": "066980339bac58e5f777406ef1cc59e83e77aa06", "filename": "libiberty/ChangeLog", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9d70d418dbe366666be1ec6501d93cf2b661e1a0/libiberty%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9d70d418dbe366666be1ec6501d93cf2b661e1a0/libiberty%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libiberty%2FChangeLog?ref=9d70d418dbe366666be1ec6501d93cf2b661e1a0", "patch": "@@ -5,7 +5,7 @@\n \n 2003-05-07  Jason Merrill  <jason@redhat.com>\n \n-\t* hashtab.c (burtle_hash): New fn.\n+\t* hashtab.c (iterative_hash): New fn.\n \t* configure.in: Add AC_C_BIGENDIAN_CROSS.\n \t* aclocal.m4: Include accross.m4.\n \t* configure, config.in: Regenerate."}, {"sha": "3896328717a37d3b04bc6cfa58348f56af6c8a93", "filename": "libiberty/hashtab.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9d70d418dbe366666be1ec6501d93cf2b661e1a0/libiberty%2Fhashtab.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9d70d418dbe366666be1ec6501d93cf2b661e1a0/libiberty%2Fhashtab.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libiberty%2Fhashtab.c?ref=9d70d418dbe366666be1ec6501d93cf2b661e1a0", "patch": "@@ -787,7 +787,7 @@ acceptable.  Do NOT use for cryptographic purposes.\n --------------------------------------------------------------------\n */\n \n-hashval_t burtle_hash (k_in, length, initval)\n+hashval_t iterative_hash (k_in, length, initval)\n      const PTR k_in;               /* the key */\n      register size_t  length;      /* the length of the key */\n      register hashval_t  initval;  /* the previous hash, or an arbitrary value */"}]}