{"sha": "0b87be09b012920618fa78ac4cef269e02614924", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MGI4N2JlMDliMDEyOTIwNjE4ZmE3OGFjNGNlZjI2OWUwMjYxNDkyNA==", "commit": {"author": {"name": "Vladimir Makarov", "email": "vmakarov@redhat.com", "date": "2015-11-27T18:26:12Z"}, "committer": {"name": "Vladimir Makarov", "email": "vmakarov@gcc.gnu.org", "date": "2015-11-27T18:26:12Z"}, "message": "re PR rtl-optimization/68536 (LRA ICEs with new arm pattern)\n\n2015-11-27  Vladimir Makarov  <vmakarov@redhat.com>\n\n\tPR rtl-optimization/68536\n\t* lra.c (lra_emit_add): Add code for null base.\n\t* lra-constraints.c (curr_insn_transform): Skip operators for\n\tsubreg reloads.\n\nFrom-SVN: r231021", "tree": {"sha": "bbdcf30112b4d67b3294abd65a3dd7d217763fd2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/bbdcf30112b4d67b3294abd65a3dd7d217763fd2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0b87be09b012920618fa78ac4cef269e02614924", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0b87be09b012920618fa78ac4cef269e02614924", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0b87be09b012920618fa78ac4cef269e02614924", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0b87be09b012920618fa78ac4cef269e02614924/comments", "author": {"login": "vnmakarov", "id": 9855671, "node_id": "MDQ6VXNlcjk4NTU2NzE=", "avatar_url": "https://avatars.githubusercontent.com/u/9855671?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vnmakarov", "html_url": "https://github.com/vnmakarov", "followers_url": "https://api.github.com/users/vnmakarov/followers", "following_url": "https://api.github.com/users/vnmakarov/following{/other_user}", "gists_url": "https://api.github.com/users/vnmakarov/gists{/gist_id}", "starred_url": "https://api.github.com/users/vnmakarov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vnmakarov/subscriptions", "organizations_url": "https://api.github.com/users/vnmakarov/orgs", "repos_url": "https://api.github.com/users/vnmakarov/repos", "events_url": "https://api.github.com/users/vnmakarov/events{/privacy}", "received_events_url": "https://api.github.com/users/vnmakarov/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "921da19854e9f9dba416dc68c57379231c6ca52b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/921da19854e9f9dba416dc68c57379231c6ca52b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/921da19854e9f9dba416dc68c57379231c6ca52b"}], "stats": {"total": 34, "additions": 27, "deletions": 7}, "files": [{"sha": "b30e9a10a5c13cd26481524c266888cc8d5055ed", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0b87be09b012920618fa78ac4cef269e02614924/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0b87be09b012920618fa78ac4cef269e02614924/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=0b87be09b012920618fa78ac4cef269e02614924", "patch": "@@ -1,3 +1,10 @@\n+2015-11-27  Vladimir Makarov  <vmakarov@redhat.com>\n+\n+\tPR rtl-optimization/68536\n+\t* lra.c (lra_emit_add): Add code for null base.\n+\t* lra-constraints.c (curr_insn_transform): Skip operators for\n+\tsubreg reloads.\n+\n 2015-11-27  Kyrylo Tkachov  <kyrylo.tkachov@arm.com>\n \n \tRevert"}, {"sha": "a78edd8d344cf2485f3e8bde16999e3f1dc737e4", "filename": "gcc/lra-constraints.c", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0b87be09b012920618fa78ac4cef269e02614924/gcc%2Flra-constraints.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0b87be09b012920618fa78ac4cef269e02614924/gcc%2Flra-constraints.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flra-constraints.c?ref=0b87be09b012920618fa78ac4cef269e02614924", "patch": "@@ -3383,10 +3383,13 @@ curr_insn_transform (bool check_only_p)\n        depend on memory mode.  */\n     for (i = 0; i < n_operands; i++)\n       {\n-\trtx op = *curr_id->operand_loc[i];\n-\trtx subst, old = op;\n+\trtx op, subst, old;\n \tbool op_change_p = false;\n+\n+\tif (curr_static_id->operand[i].is_operator)\n+\t  continue;\n \t\n+\told = op = *curr_id->operand_loc[i];\n \tif (GET_CODE (old) == SUBREG)\n \t  old = SUBREG_REG (old);\n \tsubst = get_equiv_with_elimination (old, curr_insn);"}, {"sha": "ff040bb5295222c2ff32910f5d975d8e27a96658", "filename": "gcc/lra.c", "status": "modified", "additions": 15, "deletions": 5, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0b87be09b012920618fa78ac4cef269e02614924/gcc%2Flra.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0b87be09b012920618fa78ac4cef269e02614924/gcc%2Flra.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flra.c?ref=0b87be09b012920618fa78ac4cef269e02614924", "patch": "@@ -382,7 +382,7 @@ lra_emit_add (rtx x, rtx y, rtx z)\n \t  base = a1;\n \t  index = a2;\n \t}\n-      if (! (REG_P (base) || GET_CODE (base) == SUBREG)\n+      if ((base != NULL_RTX && ! (REG_P (base) || GET_CODE (base) == SUBREG))\n \t  || (index != NULL_RTX\n \t      && ! (REG_P (index) || GET_CODE (index) == SUBREG))\n \t  || (disp != NULL_RTX && ! CONSTANT_P (disp))\n@@ -442,18 +442,28 @@ lra_emit_add (rtx x, rtx y, rtx z)\n \t\t  rtx_insn *insn = emit_add2_insn (x, disp);\n \t\t  if (insn != NULL_RTX)\n \t\t    {\n-\t\t      insn = emit_add2_insn (x, base);\n-\t\t      if (insn != NULL_RTX)\n+\t\t      if (base == NULL_RTX)\n \t\t\tok_p = true;\n+\t\t      else\n+\t\t\t{\n+\t\t\t  insn = emit_add2_insn (x, base);\n+\t\t\t  if (insn != NULL_RTX)\n+\t\t\t    ok_p = true;\n+\t\t\t}\n \t\t    }\n \t\t}\n \t      if (! ok_p)\n \t\t{\n+\t\t  rtx_insn *insn;\n+\t\t  \n \t\t  delete_insns_since (last);\n \t\t  /* Generate x = disp; x = x + base; x = x + index_scale.  */\n \t\t  emit_move_insn (x, disp);\n-\t\t  rtx_insn *insn = emit_add2_insn (x, base);\n-\t\t  lra_assert (insn != NULL_RTX);\n+\t\t  if (base != NULL_RTX)\n+\t\t    {\n+\t\t      insn = emit_add2_insn (x, base);\n+\t\t      lra_assert (insn != NULL_RTX);\n+\t\t    }\n \t\t  insn = emit_add2_insn (x, index_scale);\n \t\t  lra_assert (insn != NULL_RTX);\n \t\t}"}]}