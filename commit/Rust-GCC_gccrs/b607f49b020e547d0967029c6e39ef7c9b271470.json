{"sha": "b607f49b020e547d0967029c6e39ef7c9b271470", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjYwN2Y0OWIwMjBlNTQ3ZDA5NjcwMjljNmUzOWVmN2M5YjI3MTQ3MA==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2014-11-10T23:08:08Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2014-11-10T23:08:08Z"}, "message": "ipa-icf-gimple.c (func_checker::compare_bb): Fix comment typo.\n\n\t* ipa-icf-gimple.c (func_checker::compare_bb): Fix comment typo.\n\t(func_checker::compare_gimple_call): Compare gimple_call_fn,\n\tgimple_call_chain, gimple_call_fntype and call flags.\ntestsuite/\n\t* gcc.dg/ubsan/ipa-icf-1.c: New test.\n\t* gcc.dg/ipa/ipa-icf-31.c: New test.\n\nCo-Authored-By: Martin Liska <mliska@suse.cz>\n\nFrom-SVN: r217323", "tree": {"sha": "4997548c35a17335e1a642e472e799d199c55052", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4997548c35a17335e1a642e472e799d199c55052"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b607f49b020e547d0967029c6e39ef7c9b271470", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b607f49b020e547d0967029c6e39ef7c9b271470", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b607f49b020e547d0967029c6e39ef7c9b271470", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b607f49b020e547d0967029c6e39ef7c9b271470/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "2abd4ee6b507ce4ed4cc1591e616e0abb0740cfb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2abd4ee6b507ce4ed4cc1591e616e0abb0740cfb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2abd4ee6b507ce4ed4cc1591e616e0abb0740cfb"}], "stats": {"total": 115, "additions": 109, "deletions": 6}, "files": [{"sha": "9d7dc265cb6855e646d3113cd248823585cc5e62", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b607f49b020e547d0967029c6e39ef7c9b271470/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b607f49b020e547d0967029c6e39ef7c9b271470/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=b607f49b020e547d0967029c6e39ef7c9b271470", "patch": "@@ -1,3 +1,10 @@\n+2014-11-11  Jakub Jelinek  <jakub@redhat.com>\n+\t    Martin Liska  <mliska@suse.cz>\n+\n+\t* ipa-icf-gimple.c (func_checker::compare_bb): Fix comment typo.\n+\t(func_checker::compare_gimple_call): Compare gimple_call_fn,\n+\tgimple_call_chain, gimple_call_fntype and call flags.\n+\n 2014-11-10  Vladimir Makarov  <vmakarov@redhat.com>\n \n \tPR rtl-optimization/63620"}, {"sha": "a7e5a9241ab1dbe6ab5e7d127ec05bcc385212c0", "filename": "gcc/ipa-icf-gimple.c", "status": "modified", "additions": 33, "deletions": 6, "changes": 39, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b607f49b020e547d0967029c6e39ef7c9b271470/gcc%2Fipa-icf-gimple.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b607f49b020e547d0967029c6e39ef7c9b271470/gcc%2Fipa-icf-gimple.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fipa-icf-gimple.c?ref=b607f49b020e547d0967029c6e39ef7c9b271470", "patch": "@@ -554,7 +554,7 @@ func_checker::parse_labels (sem_bb *bb)\n \n    In general, a collection of equivalence dictionaries is built for types\n    like SSA names, declarations (VAR_DECL, PARM_DECL, ..). This infrastructure\n-   is utilized by every statement-by-stament comparison function.  */\n+   is utilized by every statement-by-statement comparison function.  */\n \n bool\n func_checker::compare_bb (sem_bb *bb1, sem_bb *bb2)\n@@ -659,12 +659,39 @@ func_checker::compare_gimple_call (gimple s1, gimple s2)\n   if (gimple_call_num_args (s1) != gimple_call_num_args (s2))\n     return false;\n \n-  t1 = gimple_call_fndecl (s1);\n-  t2 = gimple_call_fndecl (s2);\n-\n-  /* Function pointer variables are not supported yet.  */\n+  t1 = gimple_call_fn (s1);\n+  t2 = gimple_call_fn (s2);\n   if (!compare_operand (t1, t2))\n-    return return_false();\n+    return return_false ();\n+\n+  /* Compare flags.  */\n+  if (gimple_call_internal_p (s1) != gimple_call_internal_p (s2)\n+      || gimple_call_ctrl_altering_p (s1) != gimple_call_ctrl_altering_p (s2)\n+      || gimple_call_tail_p (s1) != gimple_call_tail_p (s2)\n+      || gimple_call_return_slot_opt_p (s1) != gimple_call_return_slot_opt_p (s2)\n+      || gimple_call_from_thunk_p (s1) != gimple_call_from_thunk_p (s2)\n+      || gimple_call_va_arg_pack_p (s1) != gimple_call_va_arg_pack_p (s2)\n+      || gimple_call_alloca_for_var_p (s1) != gimple_call_alloca_for_var_p (s2)\n+      || gimple_call_with_bounds_p (s1) != gimple_call_with_bounds_p (s2))\n+    return false;\n+\n+  if (gimple_call_internal_p (s1)\n+      && gimple_call_internal_fn (s1) != gimple_call_internal_fn (s2))\n+    return false;\n+\n+  tree fntype1 = gimple_call_fntype (s1);\n+  tree fntype2 = gimple_call_fntype (s2);\n+  if ((fntype1 && !fntype2)\n+      || (!fntype1 && fntype2)\n+      || (fntype1 && !types_compatible_p (fntype1, fntype2)))\n+    return return_false_with_msg (\"call function types are not compatible\");\n+\n+  tree chain1 = gimple_call_chain (s1);\n+  tree chain2 = gimple_call_chain (s2);\n+  if ((chain1 && !chain2)\n+      || (!chain1 && chain2)\n+      || !compare_operand (chain1, chain2))\n+    return return_false_with_msg (\"static call chains are different\");\n \n   /* Checking of argument.  */\n   for (i = 0; i < gimple_call_num_args (s1); ++i)"}, {"sha": "a44ae99c20eec811966be6f63c6573d6350ce789", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b607f49b020e547d0967029c6e39ef7c9b271470/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b607f49b020e547d0967029c6e39ef7c9b271470/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=b607f49b020e547d0967029c6e39ef7c9b271470", "patch": "@@ -1,3 +1,8 @@\n+2014-11-11  Jakub Jelinek  <jakub@redhat.com>\n+\n+\t* gcc.dg/ubsan/ipa-icf-1.c: New test.\n+\t* gcc.dg/ipa/ipa-icf-31.c: New test.\n+\n 2014-11-10  Patrick Palka  <ppalka@gcc.gnu.org>\n \n \tPR middle-end/63748"}, {"sha": "6a5ec2efe86f435cf4ffdb11fb906bf7caa320d6", "filename": "gcc/testsuite/gcc.dg/ipa/ipa-icf-31.c", "status": "added", "additions": 41, "deletions": 0, "changes": 41, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b607f49b020e547d0967029c6e39ef7c9b271470/gcc%2Ftestsuite%2Fgcc.dg%2Fipa%2Fipa-icf-31.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b607f49b020e547d0967029c6e39ef7c9b271470/gcc%2Ftestsuite%2Fgcc.dg%2Fipa%2Fipa-icf-31.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fipa%2Fipa-icf-31.c?ref=b607f49b020e547d0967029c6e39ef7c9b271470", "patch": "@@ -0,0 +1,41 @@\n+/* { dg-do run } */\n+/* { dg-options \"-O2 -fipa-icf\" } */\n+\n+__attribute__ ((noinline, noclone))\n+int f1 (int x, int (*p1) (void), int (*p2) (void))\n+{\n+  if (x)\n+    return p1 ();\n+  else\n+    return p2 ();\n+}\n+\n+__attribute__ ((noinline, noclone))\n+int f2 (int x, int (*p1) (void), int (*p2) (void))\n+{\n+  if (x)\n+    return p2 ();\n+  else\n+    return p1 ();\n+}\n+\n+__attribute__ ((noinline, noclone))\n+int f3 (void)\n+{\n+  return 1;\n+}\n+\n+__attribute__ ((noinline, noclone))\n+int f4 (void)\n+{\n+  return 2;\n+}\n+\n+int\n+main ()\n+{\n+  if (f1 (0, f3, f4) != 2 || f1 (1, f3, f4) != 1 || f2 (0, f3, f4) != 1\n+      || f2 (1, f3, f4) != 2)\n+    __builtin_abort ();\n+  return 0;\n+}"}, {"sha": "1638ec45e37d247ee402e8c78d883cf6bbc9703d", "filename": "gcc/testsuite/gcc.dg/ubsan/ipa-icf-1.c", "status": "added", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b607f49b020e547d0967029c6e39ef7c9b271470/gcc%2Ftestsuite%2Fgcc.dg%2Fubsan%2Fipa-icf-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b607f49b020e547d0967029c6e39ef7c9b271470/gcc%2Ftestsuite%2Fgcc.dg%2Fubsan%2Fipa-icf-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fubsan%2Fipa-icf-1.c?ref=b607f49b020e547d0967029c6e39ef7c9b271470", "patch": "@@ -0,0 +1,23 @@\n+/* { dg-do run } */\n+/* { dg-skip-if \"\" { *-*-* } { \"*\" } { \"-O2\" } } */\n+/* { dg-options \"-fsanitize=undefined -fipa-icf\" } */\n+\n+__attribute__ ((noinline, noclone))\n+int f1 (int x, int y)\n+{\n+  return x + y;\n+}\n+\n+__attribute__ ((noinline, noclone))\n+int f2 (int x, int y)\n+{\n+  return x - y;\n+}\n+\n+int\n+main ()\n+{\n+  if (f1 (5, 6) != 11 || f2 (5, 6) != -1)\n+    __builtin_abort ();\n+  return 0;\n+}"}]}