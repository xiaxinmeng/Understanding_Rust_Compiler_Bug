{"sha": "4fc43c398b6faac6cede5045a1b6f6c8855a4d7d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGZjNDNjMzk4YjZmYWFjNmNlZGU1MDQ1YTFiNmY2Yzg4NTVhNGQ3ZA==", "commit": {"author": {"name": "Steve Ellcey", "email": "sellcey@imgtec.com", "date": "2013-05-29T15:16:30Z"}, "committer": {"name": "Steve Ellcey", "email": "sje@gcc.gnu.org", "date": "2013-05-29T15:16:30Z"}, "message": "mti-linux.h (SYSROOT_SUFFIX_SPEC): Add micromips and mips16 directories.\n\n2013-05-29  Steve Ellcey  <sellcey@imgtec.com>\n\n\t* config/mips/mti-linux.h (SYSROOT_SUFFIX_SPEC): Add micromips\n\tand mips16 directories.\n\t* config/mips/t-mti-linux (MULTILIB_OPTIONS): Add micromips and\n\tmips16.\n\t(MULTILIB_DIRNAMES): Ditto.\n\t(MULTILIB_EXCEPTIONS): Add new exceptions.\n\t* config/mips/t-mti-elf (MULTILIB_OPTIONS): Add micromips.\n\t(MULTILIB_DIRNAMES): Ditto.\n\t(MULTILIB_EXCEPTIONS): Add new exceptions.\n\nFrom-SVN: r199411", "tree": {"sha": "1657fd990919ccd70de732bb95340b2bff64018e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1657fd990919ccd70de732bb95340b2bff64018e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4fc43c398b6faac6cede5045a1b6f6c8855a4d7d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4fc43c398b6faac6cede5045a1b6f6c8855a4d7d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4fc43c398b6faac6cede5045a1b6f6c8855a4d7d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4fc43c398b6faac6cede5045a1b6f6c8855a4d7d/comments", "author": null, "committer": null, "parents": [{"sha": "065ce7f17967ba542669469836127e02bd7f9e83", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/065ce7f17967ba542669469836127e02bd7f9e83", "html_url": "https://github.com/Rust-GCC/gccrs/commit/065ce7f17967ba542669469836127e02bd7f9e83"}], "stats": {"total": 66, "additions": 49, "deletions": 17}, "files": [{"sha": "e074334841decaa39cdb0d720126357ecc9e7932", "filename": "gcc/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4fc43c398b6faac6cede5045a1b6f6c8855a4d7d/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4fc43c398b6faac6cede5045a1b6f6c8855a4d7d/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=4fc43c398b6faac6cede5045a1b6f6c8855a4d7d", "patch": "@@ -1,3 +1,15 @@\n+2013-05-29  Steve Ellcey  <sellcey@imgtec.com>\n+\n+\t* config/mips/mti-linux.h (SYSROOT_SUFFIX_SPEC): Add micromips\n+\tand mips16 directories.\n+\t* config/mips/t-mti-linux (MULTILIB_OPTIONS): Add micromips and\n+\tmips16.\n+\t(MULTILIB_DIRNAMES): Ditto.\n+\t(MULTILIB_EXCEPTIONS): Add new exceptions.\n+\t* config/mips/t-mti-elf (MULTILIB_OPTIONS): Add micromips.\n+\t(MULTILIB_DIRNAMES): Ditto.\n+\t(MULTILIB_EXCEPTIONS): Add new exceptions.\n+\n 2012-05-29  Chris Schlumberger-Socha <chris.schlumberger-socha@arm.com>\n \t    Marcus Shawcroft  <marcus.shawcroft@arm.com>\n "}, {"sha": "45bc0b88107ea50428d2108356120dd8337b5035", "filename": "gcc/config/mips/mti-linux.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4fc43c398b6faac6cede5045a1b6f6c8855a4d7d/gcc%2Fconfig%2Fmips%2Fmti-linux.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4fc43c398b6faac6cede5045a1b6f6c8855a4d7d/gcc%2Fconfig%2Fmips%2Fmti-linux.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fmti-linux.h?ref=4fc43c398b6faac6cede5045a1b6f6c8855a4d7d", "patch": "@@ -20,7 +20,7 @@ along with GCC; see the file COPYING3.  If not see\n /* This target is a multilib target, specify the sysroot paths.  */\n #undef SYSROOT_SUFFIX_SPEC\n #define SYSROOT_SUFFIX_SPEC \\\n-    \"%{mips32:/mips32}%{mips64:/mips64}%{mips64r2:/mips64r2}%{mabi=64:/64}%{mel|EL:/el}%{msoft-float:/sof}\"\n+    \"%{mips32:/mips32}%{mips64:/mips64}%{mips64r2:/mips64r2}%{mips16:/mips16}%{mmicromips:/micromips}%{mabi=64:/64}%{mel|EL:/el}%{msoft-float:/sof}\"\n \n #undef DRIVER_SELF_SPECS\n #define DRIVER_SELF_SPECS\t\t\t\t\t\t\\"}, {"sha": "bce8f06345200ab65e803598374585cf8bdbde2b", "filename": "gcc/config/mips/t-mti-elf", "status": "modified", "additions": 21, "deletions": 12, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4fc43c398b6faac6cede5045a1b6f6c8855a4d7d/gcc%2Fconfig%2Fmips%2Ft-mti-elf", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4fc43c398b6faac6cede5045a1b6f6c8855a4d7d/gcc%2Fconfig%2Fmips%2Ft-mti-elf", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Ft-mti-elf?ref=4fc43c398b6faac6cede5045a1b6f6c8855a4d7d", "patch": "@@ -16,20 +16,29 @@\n # along with GCC; see the file COPYING3.  If not see\n # <http://www.gnu.org/licenses/>.\n \n-MULTILIB_OPTIONS = mips32/mips64/mips64r2 mips16 mabi=64 EL msoft-float\n-MULTILIB_DIRNAMES = mips32 mips64 mips64r2 mips16 64 el sof\n-MULTILIB_MATCHES = EL=mel EB=meb\n+# The default build is mips32r2, hard-float big-endian.  Add mips32,\n+# soft-float, and little-endian variations.\n \n-# We do not want to build mips16 versions of mips64* architectures.\n-MULTILIB_EXCEPTIONS += *mips64*/*mips16*\n+MULTILIB_OPTIONS = mips32/mips64/mips64r2 mips16 mmicromips mabi=64 EL msoft-float\n+MULTILIB_DIRNAMES = mips32 mips64 mips64r2 mips16 micromips 64 el sof\n+MULTILIB_MATCHES = EL=mel EB=meb\n \n-# 64 bit ABI is not supported on mips32 architecture.\n+# The 64 bit ABI is not supported on the mips32 architecture.\n MULTILIB_EXCEPTIONS += *mips32*/*mabi=64*\n \n-# The 64 bit ABI is not supported on the mips32r2 bit architecture.\n-# Because mips32r2 is the default the exception list is a little messy.\n-# Basically we are saying any list that doesn't specify mips32, mips64,\n-# or mips64r2 but does specify mabi=64 is not allowed because that\n-# would be defaulting to the mips32r2 architecture.\n+# The 64 bit ABI is not supported on the mips32r2 architecture.\n+# Because mips32r2 is the default we can't use that flag to trigger\n+# the exception so we check for mabi=64 with no specific mips\n+# architecture flag instead.\n MULTILIB_EXCEPTIONS += mabi=64*\n-MULTILIB_EXCEPTIONS += mips16/mabi=64*\n+\n+# We do not want to build mips16 versions of mips64* architectures.\n+MULTILIB_EXCEPTIONS += *mips64*/*mips16*\n+MULTILIB_EXCEPTIONS += *mips16/mabi=64*\n+\n+# We only want micromips for mips32r2 architecture and we do not want\n+# it used in conjunction with -mips16.\n+MULTILIB_EXCEPTIONS += *mips16/mmicromips*\n+MULTILIB_EXCEPTIONS += *mips64*/mmicromips*\n+MULTILIB_EXCEPTIONS += *mips32/mmicromips*\n+MULTILIB_EXCEPTIONS += *mmicromips/mabi=64*"}, {"sha": "bce8f06345200ab65e803598374585cf8bdbde2b", "filename": "gcc/config/mips/t-mti-linux", "status": "modified", "additions": 15, "deletions": 4, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4fc43c398b6faac6cede5045a1b6f6c8855a4d7d/gcc%2Fconfig%2Fmips%2Ft-mti-linux", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4fc43c398b6faac6cede5045a1b6f6c8855a4d7d/gcc%2Fconfig%2Fmips%2Ft-mti-linux", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Ft-mti-linux?ref=4fc43c398b6faac6cede5045a1b6f6c8855a4d7d", "patch": "@@ -19,15 +19,26 @@\n # The default build is mips32r2, hard-float big-endian.  Add mips32,\n # soft-float, and little-endian variations.\n \n-MULTILIB_OPTIONS = mips32/mips64/mips64r2 mabi=64 EL msoft-float\n-MULTILIB_DIRNAMES = mips32 mips64 mips64r2 64 el sof\n+MULTILIB_OPTIONS = mips32/mips64/mips64r2 mips16 mmicromips mabi=64 EL msoft-float\n+MULTILIB_DIRNAMES = mips32 mips64 mips64r2 mips16 micromips 64 el sof\n MULTILIB_MATCHES = EL=mel EB=meb\n \n # The 64 bit ABI is not supported on the mips32 architecture.\n MULTILIB_EXCEPTIONS += *mips32*/*mabi=64*\n \n # The 64 bit ABI is not supported on the mips32r2 architecture.\n # Because mips32r2 is the default we can't use that flag to trigger\n-# the exception so we check for mabi=64 with no specific mips flag\n-# instead.\n+# the exception so we check for mabi=64 with no specific mips\n+# architecture flag instead.\n MULTILIB_EXCEPTIONS += mabi=64*\n+\n+# We do not want to build mips16 versions of mips64* architectures.\n+MULTILIB_EXCEPTIONS += *mips64*/*mips16*\n+MULTILIB_EXCEPTIONS += *mips16/mabi=64*\n+\n+# We only want micromips for mips32r2 architecture and we do not want\n+# it used in conjunction with -mips16.\n+MULTILIB_EXCEPTIONS += *mips16/mmicromips*\n+MULTILIB_EXCEPTIONS += *mips64*/mmicromips*\n+MULTILIB_EXCEPTIONS += *mips32/mmicromips*\n+MULTILIB_EXCEPTIONS += *mmicromips/mabi=64*"}]}