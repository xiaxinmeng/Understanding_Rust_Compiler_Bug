{"sha": "e618eb626c028f1b4d3fbed9926f906bd20aca98", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTYxOGViNjI2YzAyOGYxYjRkM2ZiZWQ5OTI2ZjkwNmJkMjBhY2E5OA==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2011-06-26T03:24:12Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2011-06-26T03:24:12Z"}, "message": "dr 1188 comment\n\nFrom-SVN: r175405", "tree": {"sha": "04ebbc5ee58401dd91200b9c0960f8ea264d0c85", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/04ebbc5ee58401dd91200b9c0960f8ea264d0c85"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e618eb626c028f1b4d3fbed9926f906bd20aca98", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e618eb626c028f1b4d3fbed9926f906bd20aca98", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e618eb626c028f1b4d3fbed9926f906bd20aca98", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e618eb626c028f1b4d3fbed9926f906bd20aca98/comments", "author": null, "committer": null, "parents": [{"sha": "33a549c9e6e99ef1e7fe1031e46d385f924282e5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/33a549c9e6e99ef1e7fe1031e46d385f924282e5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/33a549c9e6e99ef1e7fe1031e46d385f924282e5"}], "stats": {"total": 6, "additions": 3, "deletions": 3}, "files": [{"sha": "f4aa350cb7c7cafdaee8b14d6a1f151efbeed4bb", "filename": "gcc/cp/semantics.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e618eb626c028f1b4d3fbed9926f906bd20aca98/gcc%2Fcp%2Fsemantics.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e618eb626c028f1b4d3fbed9926f906bd20aca98/gcc%2Fcp%2Fsemantics.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fsemantics.c?ref=e618eb626c028f1b4d3fbed9926f906bd20aca98", "patch": "@@ -6357,7 +6357,7 @@ cxx_eval_component_reference (const constexpr_call *call, tree t,\n     }\n   if (TREE_CODE (TREE_TYPE (whole)) == UNION_TYPE)\n     {\n-      /* FIXME Mike Miller wants this to be OK.  */\n+      /* DR 1188 says we don't have to deal with this.  */\n       if (!allow_non_constant)\n \terror (\"accessing %qD member instead of initialized %qD member in \"\n \t       \"constant expression\", part, CONSTRUCTOR_ELT (whole, 0)->index);\n@@ -6881,7 +6881,7 @@ cxx_eval_indirect_ref (const constexpr_call *call, tree t,\n \t{\n \t  gcc_assert (!same_type_ignoring_top_level_qualifiers_p\n \t\t      (TREE_TYPE (TREE_TYPE (sub)), TREE_TYPE (t)));\n-\t  /* FIXME Mike Miller wants this to be OK.  */\n+\t  /* DR 1188 says we don't have to deal with this.  */\n \t  if (!allow_non_constant)\n \t    error (\"accessing value of %qE through a %qT glvalue in a \"\n \t\t   \"constant expression\", build_fold_indirect_ref (sub),"}, {"sha": "3c7a7f38ec890d0063e210faf0ced58316124f02", "filename": "gcc/testsuite/g++.dg/cpp0x/constexpr-union.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e618eb626c028f1b4d3fbed9926f906bd20aca98/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-union.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e618eb626c028f1b4d3fbed9926f906bd20aca98/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-union.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-union.C?ref=e618eb626c028f1b4d3fbed9926f906bd20aca98", "patch": "@@ -1,5 +1,5 @@\n // Test that we don't have to deal with type punning\n-// FIXME Mike Miller thinks it should work\n+// DR 1188 says this is ill-formed\n // { dg-options -std=c++0x }\n \n union U"}]}