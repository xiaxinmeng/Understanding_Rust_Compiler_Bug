{"sha": "9cd7bc5e000a2be07995aea4ff762f89c0e0661e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OWNkN2JjNWUwMDBhMmJlMDc5OTVhZWE0ZmY3NjJmODljMGUwNjYxZQ==", "commit": {"author": {"name": "Ed Schonberg", "email": "schonberg@adacore.com", "date": "2018-07-16T14:11:20Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "pmderodat@gcc.gnu.org", "date": "2018-07-16T14:11:20Z"}, "message": "[Ada] Use common routine Expand_Nonbinary_Modular_Op for XOR expressions\n\n2018-07-16  Ed Schonberg  <schonberg@adacore.com>\n\ngcc/ada/\n\n\t* exp_ch4.adb (Expand_N_Op_Xor): Use common routine\n\tExpand_Nonbinary_Modular_Op.  Needed for unnesting.\n\nFrom-SVN: r262717", "tree": {"sha": "9e5b8cc7a29d89198e79904eca86458d827759ca", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9e5b8cc7a29d89198e79904eca86458d827759ca"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9cd7bc5e000a2be07995aea4ff762f89c0e0661e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9cd7bc5e000a2be07995aea4ff762f89c0e0661e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9cd7bc5e000a2be07995aea4ff762f89c0e0661e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9cd7bc5e000a2be07995aea4ff762f89c0e0661e/comments", "author": {"login": "Edschonberg", "id": 6352375, "node_id": "MDQ6VXNlcjYzNTIzNzU=", "avatar_url": "https://avatars.githubusercontent.com/u/6352375?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Edschonberg", "html_url": "https://github.com/Edschonberg", "followers_url": "https://api.github.com/users/Edschonberg/followers", "following_url": "https://api.github.com/users/Edschonberg/following{/other_user}", "gists_url": "https://api.github.com/users/Edschonberg/gists{/gist_id}", "starred_url": "https://api.github.com/users/Edschonberg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Edschonberg/subscriptions", "organizations_url": "https://api.github.com/users/Edschonberg/orgs", "repos_url": "https://api.github.com/users/Edschonberg/repos", "events_url": "https://api.github.com/users/Edschonberg/events{/privacy}", "received_events_url": "https://api.github.com/users/Edschonberg/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "d2b73a3edb85564fce73b916ad7f7c65ea3ef74d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d2b73a3edb85564fce73b916ad7f7c65ea3ef74d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d2b73a3edb85564fce73b916ad7f7c65ea3ef74d"}], "stats": {"total": 9, "additions": 8, "deletions": 1}, "files": [{"sha": "e75fcbbcfe41c29a04f5d0e6136f977494e947af", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9cd7bc5e000a2be07995aea4ff762f89c0e0661e/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9cd7bc5e000a2be07995aea4ff762f89c0e0661e/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=9cd7bc5e000a2be07995aea4ff762f89c0e0661e", "patch": "@@ -1,3 +1,8 @@\n+2018-07-16  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* exp_ch4.adb (Expand_N_Op_Xor): Use common routine\n+\tExpand_Nonbinary_Modular_Op.  Needed for unnesting.\n+\n 2018-07-16  Ed Schonberg  <schonberg@adacore.com>\n \n \t* sem_ch3.adb (Inherit_Predicate_Flags): A non-discrete type may have a"}, {"sha": "a98ffb3df737e4a41fdce0671573aca2e2453c8b", "filename": "gcc/ada/exp_ch4.adb", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9cd7bc5e000a2be07995aea4ff762f89c0e0661e/gcc%2Fada%2Fexp_ch4.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9cd7bc5e000a2be07995aea4ff762f89c0e0661e/gcc%2Fada%2Fexp_ch4.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch4.adb?ref=9cd7bc5e000a2be07995aea4ff762f89c0e0661e", "patch": "@@ -4072,7 +4072,7 @@ package body Exp_Ch4 is\n          --  we avoid never-ending loops expanding them, and we also ensure\n          --  the back end never receives nonbinary modular type expressions.\n \n-         if Nkind_In (Nkind (N), N_Op_And, N_Op_Or) then\n+         if Nkind_In (Nkind (N), N_Op_And, N_Op_Or, N_Op_Xor) then\n             Set_Left_Opnd (Op_Expr,\n               Unchecked_Convert_To (Standard_Unsigned,\n                 New_Copy_Tree (Left_Opnd (N))));\n@@ -10021,6 +10021,8 @@ package body Exp_Ch4 is\n       elsif Is_Intrinsic_Subprogram (Entity (N)) then\n          Expand_Intrinsic_Call (N, Entity (N));\n       end if;\n+\n+      Expand_Nonbinary_Modular_Op (N);\n    end Expand_N_Op_Xor;\n \n    ----------------------"}]}