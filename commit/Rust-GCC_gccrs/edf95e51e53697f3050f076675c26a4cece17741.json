{"sha": "edf95e51e53697f3050f076675c26a4cece17741", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWRmOTVlNTFlNTM2OTdmMzA1MGYwNzY2NzVjMjZhNGNlY2UxNzc0MQ==", "commit": {"author": {"name": "Omar Tahir", "email": "omar.tahir@arm.com", "date": "2020-07-09T09:14:19Z"}, "committer": {"name": "Richard Sandiford", "email": "richard.sandiford@arm.com", "date": "2020-07-09T09:14:19Z"}, "message": "ira: Fix unnecessary register spill\n\nThe variables first_moveable_pseudo and last_moveable_pseudo aren't\nreset after compiling a function, which means they leak into the first\nscheduler pass of the following function. In some cases, this can cause\nan extra spill during register allocation of the second function.\n\ngcc/ChangeLog:\n\n\t* ira.c (move_unallocated_pseudos): Zero first_moveable_pseudo and\n\tlast_moveable_pseudo before returning.\n\ngcc/testsuite/ChangeLog:\n\n\t* gcc.target/aarch64/nospill.c: New test.", "tree": {"sha": "5197c9858a0ea13331a4b0d246500dc7a2bc0975", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5197c9858a0ea13331a4b0d246500dc7a2bc0975"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/edf95e51e53697f3050f076675c26a4cece17741", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/edf95e51e53697f3050f076675c26a4cece17741", "html_url": "https://github.com/Rust-GCC/gccrs/commit/edf95e51e53697f3050f076675c26a4cece17741", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/edf95e51e53697f3050f076675c26a4cece17741/comments", "author": null, "committer": {"login": "rsandifo-arm", "id": 28043039, "node_id": "MDQ6VXNlcjI4MDQzMDM5", "avatar_url": "https://avatars.githubusercontent.com/u/28043039?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rsandifo-arm", "html_url": "https://github.com/rsandifo-arm", "followers_url": "https://api.github.com/users/rsandifo-arm/followers", "following_url": "https://api.github.com/users/rsandifo-arm/following{/other_user}", "gists_url": "https://api.github.com/users/rsandifo-arm/gists{/gist_id}", "starred_url": "https://api.github.com/users/rsandifo-arm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rsandifo-arm/subscriptions", "organizations_url": "https://api.github.com/users/rsandifo-arm/orgs", "repos_url": "https://api.github.com/users/rsandifo-arm/repos", "events_url": "https://api.github.com/users/rsandifo-arm/events{/privacy}", "received_events_url": "https://api.github.com/users/rsandifo-arm/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "319078dad62eba942d33c8975bdcbb09d1c68ba6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/319078dad62eba942d33c8975bdcbb09d1c68ba6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/319078dad62eba942d33c8975bdcbb09d1c68ba6"}], "stats": {"total": 37, "additions": 37, "deletions": 0}, "files": [{"sha": "b748a6de3c29d1ce7614d7abeb8a6eb7e6a02933", "filename": "gcc/ira.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/edf95e51e53697f3050f076675c26a4cece17741/gcc%2Fira.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/edf95e51e53697f3050f076675c26a4cece17741/gcc%2Fira.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fira.c?ref=edf95e51e53697f3050f076675c26a4cece17741", "patch": "@@ -5126,6 +5126,8 @@ move_unallocated_pseudos (void)\n \t\t   INSN_UID (newinsn), i);\n \tSET_REG_N_REFS (i, 0);\n       }\n+\n+  first_moveable_pseudo = last_moveable_pseudo = 0;\n }\n \f\n /* If the backend knows where to allocate pseudos for hard"}, {"sha": "968a4267e0d46192e4c59c098f787f5f4738a5e3", "filename": "gcc/testsuite/gcc.target/aarch64/nospill.c", "status": "added", "additions": 35, "deletions": 0, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/edf95e51e53697f3050f076675c26a4cece17741/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fnospill.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/edf95e51e53697f3050f076675c26a4cece17741/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fnospill.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fnospill.c?ref=edf95e51e53697f3050f076675c26a4cece17741", "patch": "@@ -0,0 +1,35 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O3\" } */\n+\n+/* The pseudo for P is marked as moveable in the IRA pass. */\n+float\n+func_0 (float a, float b, float c)\n+{\n+  float p = c / a;\n+\n+  if (b > 1)\n+    {\n+      b /= p;\n+      if (c > 2)\n+        a /= 3;\n+    }\n+\n+  return b / c * a;\n+}\n+\n+/* If first_moveable_pseudo and last_moveable_pseudo are not reset correctly,\n+   they will carry over and spill the pseudo for Q. */\n+float\n+func_1 (float a, float b, float c)\n+{\n+  float q = a + b;\n+\n+  c *= a / (b + b);\n+  if (a > 0)\n+    c *= q;\n+\n+  return a * b * c;\n+}\n+\n+/* We have plenty of spare registers, so check nothing has been spilled. */\n+/* { dg-final { scan-assembler-not \"\\tstr\\t\" } } */"}]}