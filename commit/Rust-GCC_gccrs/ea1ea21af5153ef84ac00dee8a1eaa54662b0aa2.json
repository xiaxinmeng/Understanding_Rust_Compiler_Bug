{"sha": "ea1ea21af5153ef84ac00dee8a1eaa54662b0aa2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWExZWEyMWFmNTE1M2VmODRhYzAwZGVlOGExZWFhNTQ2NjJiMGFhMg==", "commit": {"author": {"name": "Mark Mitchell", "email": "mark@codesourcery.com", "date": "2004-01-12T08:11:08Z"}, "committer": {"name": "Mark Mitchell", "email": "mmitchel@gcc.gnu.org", "date": "2004-01-12T08:11:08Z"}, "message": "testsuite_hooks.h (__gnu_test::try_mkfifo): Declare it.\n\n\t* testsuite/testsuite_hooks.h (__gnu_test::try_mkfifo): Declare it.\n\t* testsuite/testsuite_hooks.cc (__gnu_test::try_mkfifo): Define\n\tit.\n\t* testsuite/27_io/basic_filebuf/close/char/4879.cc: Use try_mkfifo\n\tand remove Cygwin XFAIL.\n\t* testsuite/27_io/basic_filebuf/close/char/9964.cc: Likewise.\n\t* testsuite/27_io/basic_filebuf/imbue/char/13171-2.cc: Likewise.\n\t* testsuite/27_io/basic_filebuf/open/char/9507.cc: Likewise.\n\t* testsuite/27_io/basic_filebuf/showmanyc/char/9533-1.cc:\n\tLikewise.\n\t* testsuite/27_io/basic_filebuf/underflow/char/10097.cc: Likewise.\n\t* testsuite/27_io/objects/char/7.cc: Likewise.\n\t* testsuite/27_io/objects/char/9661-1.cc: Likewise.\n\t* testsuite/27_io/objects/wchar_t/7.cc: Likewise.\n\t* testsuite/27_io/objects/wchar_t/9661-1.cc: Likewise.\n\nFrom-SVN: r75706", "tree": {"sha": "7394de443a067c9360856c356c75fa648842fbb0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7394de443a067c9360856c356c75fa648842fbb0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ea1ea21af5153ef84ac00dee8a1eaa54662b0aa2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ea1ea21af5153ef84ac00dee8a1eaa54662b0aa2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ea1ea21af5153ef84ac00dee8a1eaa54662b0aa2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ea1ea21af5153ef84ac00dee8a1eaa54662b0aa2/comments", "author": null, "committer": null, "parents": [{"sha": "c223cf45e5698dfb30735d5aaf84e4c8ce022b1f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c223cf45e5698dfb30735d5aaf84e4c8ce022b1f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c223cf45e5698dfb30735d5aaf84e4c8ce022b1f"}], "stats": {"total": 86, "additions": 55, "deletions": 31}, "files": [{"sha": "e59eb5afd01112f14c2acd7268d6a905988463f8", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea1ea21af5153ef84ac00dee8a1eaa54662b0aa2/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea1ea21af5153ef84ac00dee8a1eaa54662b0aa2/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=ea1ea21af5153ef84ac00dee8a1eaa54662b0aa2", "patch": "@@ -1,3 +1,21 @@\n+2004-01-12  Mark Mitchell  <mark@codesourcery.com>\n+\n+\t* testsuite/testsuite_hooks.h (__gnu_test::try_mkfifo): Declare it.\n+\t* testsuite/testsuite_hooks.cc (__gnu_test::try_mkfifo): Define\n+\tit.\n+\t* testsuite/27_io/basic_filebuf/close/char/4879.cc: Use try_mkfifo\n+\tand remove Cygwin XFAIL.\n+\t* testsuite/27_io/basic_filebuf/close/char/9964.cc: Likewise.\n+\t* testsuite/27_io/basic_filebuf/imbue/char/13171-2.cc: Likewise.\n+\t* testsuite/27_io/basic_filebuf/open/char/9507.cc: Likewise.\n+\t* testsuite/27_io/basic_filebuf/showmanyc/char/9533-1.cc:\n+\tLikewise.\n+\t* testsuite/27_io/basic_filebuf/underflow/char/10097.cc: Likewise.\n+\t* testsuite/27_io/objects/char/7.cc: Likewise.\n+\t* testsuite/27_io/objects/char/9661-1.cc: Likewise.\n+\t* testsuite/27_io/objects/wchar_t/7.cc: Likewise.\n+\t* testsuite/27_io/objects/wchar_t/9661-1.cc: Likewise.\n+\n 2004-01-11  Gabriel Dos Reis  <gdr@integrable-solutions.net>\n \n \t* include/std/std_complex.h (std::complex<>::real): Return a"}, {"sha": "bd585443be1b62139d646e76cffb02fe87542b06", "filename": "libstdc++-v3/testsuite/27_io/basic_filebuf/close/char/4879.cc", "status": "modified", "additions": 3, "deletions": 4, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea1ea21af5153ef84ac00dee8a1eaa54662b0aa2/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_filebuf%2Fclose%2Fchar%2F4879.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea1ea21af5153ef84ac00dee8a1eaa54662b0aa2/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_filebuf%2Fclose%2Fchar%2F4879.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_filebuf%2Fclose%2Fchar%2F4879.cc?ref=ea1ea21af5153ef84ac00dee8a1eaa54662b0aa2", "patch": "@@ -23,9 +23,6 @@\n // various tests for filebuf::open() and filebuf::close() including\n // the non-portable functionality in the libstdc++-v3 IO library\n \n-// XXX cygwin does not support mkfifo\n-// { dg-do run { xfail *-*-cygwin* } }\n-\n #include <fstream>\n #include <iostream>\n #include <unistd.h>\n@@ -40,12 +37,14 @@\n void\n test_04()\n {\n+  using namespace __gnu_test;\n+\n   bool test __attribute__((unused)) = true;\n   const char* name = \"tmp_fifo1\";\n   signal(SIGPIPE, SIG_IGN);\n   \n   unlink(name);\n-  if (0 != mkfifo(name, S_IRWXU))\n+  if (0 != try_mkfifo(name, S_IRWXU))\n     {\n       std::cerr << \"failed to create fifo\" << std::endl;\n       exit(-1);"}, {"sha": "d51a5b1167bbd90406c87e673f9ec43fc3c45895", "filename": "libstdc++-v3/testsuite/27_io/basic_filebuf/close/char/9964.cc", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea1ea21af5153ef84ac00dee8a1eaa54662b0aa2/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_filebuf%2Fclose%2Fchar%2F9964.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea1ea21af5153ef84ac00dee8a1eaa54662b0aa2/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_filebuf%2Fclose%2Fchar%2F9964.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_filebuf%2Fclose%2Fchar%2F9964.cc?ref=ea1ea21af5153ef84ac00dee8a1eaa54662b0aa2", "patch": "@@ -23,9 +23,6 @@\n // various tests for filebuf::open() and filebuf::close() including\n // the non-portable functionality in the libstdc++-v3 IO library\n \n-// XXX cygwin does not support mkfifo\n-// { dg-do run { xfail *-*-cygwin* } }\n-\n #include <fstream>\n #include <unistd.h>\n #include <signal.h>\n@@ -38,14 +35,15 @@\n void test_07()\n {\n   using namespace std;\n+  using namespace __gnu_test;\n   bool test __attribute__((unused)) = true;\n \n   const char* name = \"tmp_fifo3\";\n \n   signal(SIGPIPE, SIG_IGN);\n \n   unlink(name);  \n-  mkfifo(name, S_IRWXU);\n+  try_mkfifo(name, S_IRWXU);\n   \n   int child = fork();\n   VERIFY( child != -1 );"}, {"sha": "367017a3bfef6ac5ae11a33f1ef30afca849ecba", "filename": "libstdc++-v3/testsuite/27_io/basic_filebuf/imbue/char/13171-2.cc", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea1ea21af5153ef84ac00dee8a1eaa54662b0aa2/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_filebuf%2Fimbue%2Fchar%2F13171-2.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea1ea21af5153ef84ac00dee8a1eaa54662b0aa2/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_filebuf%2Fimbue%2Fchar%2F13171-2.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_filebuf%2Fimbue%2Fchar%2F13171-2.cc?ref=ea1ea21af5153ef84ac00dee8a1eaa54662b0aa2", "patch": "@@ -31,13 +31,14 @@ void test01()\n {\n   bool test __attribute__((unused)) = true;\n   using namespace std;\n+  using namespace __gnu_test;\n \n   locale loc_fr(__gnu_test::try_named_locale(\"fr_FR\"));\n   locale loc_en(__gnu_test::try_named_locale(\"en_US\"));\n \n   const char* name = \"tmp_fifo_13171-2\";\n   unlink(name);\n-  mkfifo(name, S_IRWXU);\n+  try_mkfifo(name, S_IRWXU);\n   \n   int child = fork();\n   if (child == 0)"}, {"sha": "601e570ae25ec4fbb0dc83bd82b681ff2cbc38e3", "filename": "libstdc++-v3/testsuite/27_io/basic_filebuf/open/char/9507.cc", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea1ea21af5153ef84ac00dee8a1eaa54662b0aa2/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_filebuf%2Fopen%2Fchar%2F9507.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea1ea21af5153ef84ac00dee8a1eaa54662b0aa2/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_filebuf%2Fopen%2Fchar%2F9507.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_filebuf%2Fopen%2Fchar%2F9507.cc?ref=ea1ea21af5153ef84ac00dee8a1eaa54662b0aa2", "patch": "@@ -23,9 +23,6 @@\n // various tests for filebuf::open() and filebuf::close() including\n // the non-portable functionality in the libstdc++-v3 IO library\n \n-// XXX cygwin does not support mkfifo\n-// { dg-do run { xfail *-*-cygwin* } }\n-\n #include <fstream>\n #include <unistd.h>\n #include <signal.h>\n@@ -37,13 +34,14 @@\n // libstdc++/9507\n void test_06()\n {\n+  using namespace __gnu_test;\n   bool test __attribute__((unused)) = true;\n   const char* name = \"tmp_fifo2\";\n \n   signal(SIGPIPE, SIG_IGN);\n \n   unlink(name);\n-  mkfifo(name, S_IRWXU);\n+  try_mkfifo(name, S_IRWXU);\n \t\n   if (!fork())\n     {"}, {"sha": "2839e2f722c805013b43f95dd2286db2ee5f28db", "filename": "libstdc++-v3/testsuite/27_io/basic_filebuf/showmanyc/char/9533-1.cc", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea1ea21af5153ef84ac00dee8a1eaa54662b0aa2/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_filebuf%2Fshowmanyc%2Fchar%2F9533-1.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea1ea21af5153ef84ac00dee8a1eaa54662b0aa2/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_filebuf%2Fshowmanyc%2Fchar%2F9533-1.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_filebuf%2Fshowmanyc%2Fchar%2F9533-1.cc?ref=ea1ea21af5153ef84ac00dee8a1eaa54662b0aa2", "patch": "@@ -18,9 +18,6 @@\n \n // 27.8.1.4 Overridden virtual functions\n \n-// XXX cygwin does not support mkfifo\n-// { dg-do run { xfail *-*-cygwin* } }\n-\n #include <unistd.h>\n #include <signal.h>\n #include <fcntl.h>\n@@ -33,6 +30,7 @@\n void test_01()\n {\n   using namespace std;\n+  using namespace __gnu_test;\n   bool test __attribute__((unused)) = true;\n   const char* name = \"tmp_fifo1\";\n \n@@ -41,7 +39,7 @@ void test_01()\n   signal(SIGPIPE, SIG_IGN);\n   unlink(name);\n   \n-  if (0 != mkfifo(name, S_IRWXU))\n+  if (0 != try_mkfifo(name, S_IRWXU))\n     {\n       VERIFY( false );\n     }"}, {"sha": "c3c3cf19048ebac49f606ac5b7ab16ea153bf716", "filename": "libstdc++-v3/testsuite/27_io/basic_filebuf/underflow/char/10097.cc", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea1ea21af5153ef84ac00dee8a1eaa54662b0aa2/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_filebuf%2Funderflow%2Fchar%2F10097.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea1ea21af5153ef84ac00dee8a1eaa54662b0aa2/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_filebuf%2Funderflow%2Fchar%2F10097.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_filebuf%2Funderflow%2Fchar%2F10097.cc?ref=ea1ea21af5153ef84ac00dee8a1eaa54662b0aa2", "patch": "@@ -20,9 +20,6 @@\n \n // 27.8.1.4 Overridden virtual functions\n \n-// XXX cygwin does not support mkfifo\n-// { dg-do run { xfail *-*-cygwin* } }\n-\n #include <fstream>\n #include <unistd.h>\n #include <signal.h>\n@@ -48,14 +45,15 @@ class UnderBuf : public std::filebuf\n void test16()\n {\n   using namespace std;\n+  using namespace __gnu_test;\n   bool test __attribute__((unused)) = true;\n \n   const char* name = \"tmp_fifo1\";\n   \n   signal(SIGPIPE, SIG_IGN);\n   unlink(name);\n   \n-  if (0 != mkfifo(name, S_IRWXU))\n+  if (0 != try_mkfifo(name, S_IRWXU))\n     {\n       VERIFY( false );\n     }"}, {"sha": "06983d9fb7a703fe30c42010d6f7ee0621a11696", "filename": "libstdc++-v3/testsuite/27_io/objects/char/7.cc", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea1ea21af5153ef84ac00dee8a1eaa54662b0aa2/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fobjects%2Fchar%2F7.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea1ea21af5153ef84ac00dee8a1eaa54662b0aa2/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fobjects%2Fchar%2F7.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fobjects%2Fchar%2F7.cc?ref=ea1ea21af5153ef84ac00dee8a1eaa54662b0aa2", "patch": "@@ -20,9 +20,6 @@\n \n // 27.3 Standard iostream objects\n \n-// XXX cygwin does not support mkfifo\n-// { dg-do run { xfail *-*-cygwin* } }\n-\n #include <fstream>\n #include <iostream>\n #include <unistd.h>\n@@ -36,14 +33,15 @@\n void test07()\n {\n   using namespace std;\n+  using namespace __gnu_test;\n   bool test __attribute__((unused)) = true;\n \n   const char* name = \"tmp_fifo4\";\n \n   signal(SIGPIPE, SIG_IGN);\n \n   unlink(name);  \n-  mkfifo(name, S_IRWXU);\n+  try_mkfifo(name, S_IRWXU);\n   \n   int child = fork();\n   VERIFY( child != -1 );"}, {"sha": "5b1780e1f0d8c764df671223ad7c2772fae09059", "filename": "libstdc++-v3/testsuite/27_io/objects/char/9661-1.cc", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea1ea21af5153ef84ac00dee8a1eaa54662b0aa2/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fobjects%2Fchar%2F9661-1.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea1ea21af5153ef84ac00dee8a1eaa54662b0aa2/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fobjects%2Fchar%2F9661-1.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fobjects%2Fchar%2F9661-1.cc?ref=ea1ea21af5153ef84ac00dee8a1eaa54662b0aa2", "patch": "@@ -18,9 +18,6 @@\n // Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,\n // USA.\n \n-// XXX cygwin does not support mkfifo\n-// { dg-do run { xfail *-*-cygwin* } }\n-\n #include <testsuite_hooks.h>\n #include <cstdio>\n #include <iostream>\n@@ -36,6 +33,7 @@\n void test01()\n {\n   using namespace std;\n+  using namespace __gnu_test;\n \n   bool test __attribute__((unused)) = true;\n \n@@ -44,7 +42,7 @@ void test01()\n   signal(SIGPIPE, SIG_IGN);\n \n   unlink(name);  \n-  mkfifo(name, S_IRWXU);\n+  try_mkfifo(name, S_IRWXU);\n   \n   int child = fork();\n   VERIFY( child != -1 );"}, {"sha": "a1c97670038aea3e42b1f4446517a6fa6788354a", "filename": "libstdc++-v3/testsuite/27_io/objects/wchar_t/7.cc", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea1ea21af5153ef84ac00dee8a1eaa54662b0aa2/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fobjects%2Fwchar_t%2F7.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea1ea21af5153ef84ac00dee8a1eaa54662b0aa2/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fobjects%2Fwchar_t%2F7.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fobjects%2Fwchar_t%2F7.cc?ref=ea1ea21af5153ef84ac00dee8a1eaa54662b0aa2", "patch": "@@ -33,14 +33,15 @@\n void test07()\n {\n   using namespace std;\n+  using namespace __gnu_test;\n   bool test __attribute__((unused)) = true;\n \n   const char* name = \"tmp_fifo4\";\n \n   signal(SIGPIPE, SIG_IGN);\n \n   unlink(name);  \n-  mkfifo(name, S_IRWXU);\n+  try_mkfifo(name, S_IRWXU);\n   \n   int child = fork();\n   VERIFY( child != -1 );"}, {"sha": "38b832049b873a4efde834fa874e43152ebb5d72", "filename": "libstdc++-v3/testsuite/27_io/objects/wchar_t/9661-1.cc", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea1ea21af5153ef84ac00dee8a1eaa54662b0aa2/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fobjects%2Fwchar_t%2F9661-1.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea1ea21af5153ef84ac00dee8a1eaa54662b0aa2/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fobjects%2Fwchar_t%2F9661-1.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fobjects%2Fwchar_t%2F9661-1.cc?ref=ea1ea21af5153ef84ac00dee8a1eaa54662b0aa2", "patch": "@@ -33,6 +33,7 @@\n void test01()\n {\n   using namespace std;\n+  using namespace __gnu_test;\n \n   bool test __attribute__((unused)) = true;\n \n@@ -41,7 +42,7 @@ void test01()\n   signal(SIGPIPE, SIG_IGN);\n \n   unlink(name);  \n-  mkfifo(name, S_IRWXU);\n+  try_mkfifo(name, S_IRWXU);\n   \n   int child = fork();\n   VERIFY( child != -1 );"}, {"sha": "21c0c0c77e7094f69b7a050e855276e2b024a4f4", "filename": "libstdc++-v3/testsuite/testsuite_hooks.cc", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea1ea21af5153ef84ac00dee8a1eaa54662b0aa2/libstdc%2B%2B-v3%2Ftestsuite%2Ftestsuite_hooks.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea1ea21af5153ef84ac00dee8a1eaa54662b0aa2/libstdc%2B%2B-v3%2Ftestsuite%2Ftestsuite_hooks.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Ftestsuite_hooks.cc?ref=ea1ea21af5153ef84ac00dee8a1eaa54662b0aa2", "patch": "@@ -208,6 +208,17 @@ namespace __gnu_test\n       }\n   }\n \n+  int\n+  try_mkfifo (const char* filename, mode_t mode)\n+  {\n+#ifdef _NEWLIB_VERSION\n+    /* Newlib does not have mkfifo.  */\n+    exit(0);\n+#else\n+    return mkfifo(filename, mode);\n+#endif\n+  }\n+\n   counter::size_type  counter::count = 0;\n   unsigned int copy_constructor::count_ = 0;\n   unsigned int copy_constructor::throw_on_ = 0;"}, {"sha": "efe0f85eaa104859857ec3be2c2edef50d0ff86c", "filename": "libstdc++-v3/testsuite/testsuite_hooks.h", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea1ea21af5153ef84ac00dee8a1eaa54662b0aa2/libstdc%2B%2B-v3%2Ftestsuite%2Ftestsuite_hooks.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea1ea21af5153ef84ac00dee8a1eaa54662b0aa2/libstdc%2B%2B-v3%2Ftestsuite%2Ftestsuite_hooks.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Ftestsuite_hooks.h?ref=ea1ea21af5153ef84ac00dee8a1eaa54662b0aa2", "patch": "@@ -63,6 +63,9 @@\n #include <cstddef>\n #include <locale>\n #include <ext/pod_char_traits.h>\n+#ifdef _GLIBCXX_HAVE_SYS_STAT_H\n+#include <sys/stat.h>\n+#endif\n \n #ifdef _GLIBCXX_ASSERT\n # include <cassert>\n@@ -141,6 +144,8 @@ namespace __gnu_test\n   std::locale\n   try_named_locale(const char* name);\n \n+  int\n+  try_mkfifo (const char* filename, mode_t mode);\n \n   // Test data types.\n   struct pod_char"}]}