{"sha": "ae9092da9647424668486f76d322bbc8351857c4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWU5MDkyZGE5NjQ3NDI0NjY4NDg2Zjc2ZDMyMmJiYzgzNTE4NTdjNA==", "commit": {"author": {"name": "DJ Delorie", "email": "dj@redhat.com", "date": "2001-09-27T19:44:32Z"}, "committer": {"name": "DJ Delorie", "email": "dj@gcc.gnu.org", "date": "2001-09-27T19:44:32Z"}, "message": "configure.in: Don't use in-tree texinfo, because libiberty must be built before it.\n\n* configure.in: Don't use in-tree texinfo, because libiberty must\nbe built before it.  Check for makeinfo version 4 or higher.\n* functions.texi: Regenerate.\n\nFrom-SVN: r45846", "tree": {"sha": "c76ca1beed29006d0300f01d0b32d4ba71d0b555", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c76ca1beed29006d0300f01d0b32d4ba71d0b555"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ae9092da9647424668486f76d322bbc8351857c4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ae9092da9647424668486f76d322bbc8351857c4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ae9092da9647424668486f76d322bbc8351857c4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ae9092da9647424668486f76d322bbc8351857c4/comments", "author": null, "committer": null, "parents": [{"sha": "bed2ebd0407e5d78d63ba74abc70c74492611965", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bed2ebd0407e5d78d63ba74abc70c74492611965", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bed2ebd0407e5d78d63ba74abc70c74492611965"}], "stats": {"total": 35, "additions": 21, "deletions": 14}, "files": [{"sha": "c50e448350c920f90b5234b392e479d1710b5b39", "filename": "libiberty/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ae9092da9647424668486f76d322bbc8351857c4/libiberty%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ae9092da9647424668486f76d322bbc8351857c4/libiberty%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libiberty%2FChangeLog?ref=ae9092da9647424668486f76d322bbc8351857c4", "patch": "@@ -1,3 +1,9 @@\n+2001-09-27  DJ Delorie  <dj@redhat.com>\n+\n+\t* configure.in: Don't use in-tree texinfo, because libiberty must\n+\tbe built before it.  Check for makeinfo version 4 or higher.\n+\t* functions.texi: Regenerate.\n+\t\n 2001-09-20  DJ Delorie  <dj@redhat.com>\n \t    Phil Edwards  <pedwards@disaster.jaj.com>\n \t"}, {"sha": "3417827b42c33ed0d395291d05c7d174f6997f7b", "filename": "libiberty/configure.in", "status": "modified", "additions": 13, "deletions": 12, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ae9092da9647424668486f76d322bbc8351857c4/libiberty%2Fconfigure.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ae9092da9647424668486f76d322bbc8351857c4/libiberty%2Fconfigure.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libiberty%2Fconfigure.in?ref=ae9092da9647424668486f76d322bbc8351857c4", "patch": "@@ -49,18 +49,19 @@ fi\n AC_SUBST(MAINT)dnl\n AC_SUBST(NOTMAINT)dnl\n \n-# Do we have a single-tree copy of texinfo?\n-if test -f $srcdir/../texinfo/Makefile.in; then\n-  MAKEINFO='$(objdir)/../texinfo/makeinfo/makeinfo'\n-  AC_MSG_RESULT([Using makeinfo from the unified source tree.])\n-else\n-  AC_CHECK_PROG(MAKEINFO, makeinfo, makeinfo, )\n-fi\n-if test x\"$MAKEINFO\" = x\"\"; then\n-  BUILD_INFO=\n-else\n-  BUILD_INFO=info\n-fi\n+# Do we have a single-tree copy of texinfo?  Even if we do, we can't\n+# rely on it - libiberty is built before texinfo.\n+AC_CHECK_PROG(MAKEINFO, makeinfo, makeinfo, )\n+BUILD_INFO=info\n+case x\"`$MAKEINFO --version | grep 'GNU texinfo'`\" in\n+  x*\\ [[1-3]].* )\n+    MAKEINFO=\"@echo $MAKEINFO is too old, 4.0 or newer required ;true\"\n+    BUILD_INFO=\n+    AC_MSG_WARN([\n+*** Makeinfo is too old. Info documentation will not be built.])\n+    ;;\n+esac\n+AC_SUBST(MAKEINFO)\n AC_SUBST(BUILD_INFO)\n \n AC_CHECK_PROG(PERL, perl, perl, )"}, {"sha": "f914adb436b0b358fce1a9729232449415eda09d", "filename": "libiberty/functions.texi", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ae9092da9647424668486f76d322bbc8351857c4/libiberty%2Ffunctions.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ae9092da9647424668486f76d322bbc8351857c4/libiberty%2Ffunctions.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libiberty%2Ffunctions.texi?ref=ae9092da9647424668486f76d322bbc8351857c4", "patch": "@@ -65,14 +65,14 @@ should be sorted in ascending order according to the @var{compar}\n comparison function.  This routine should take two arguments pointing to\n the @var{key} and to an array member, in that order, and should return an\n integer less than, equal to, or greater than zero if the @var{key} object\n-is respecitively less than, matching, or greater than the array member.\n+is respectively less than, matching, or greater than the array member.\n \n @end deftypefn\n \n @c bzero.c:6\n @deftypefn Supplemental void bzero (char *@var{mem}, int @var{count})\n \n-Zeros @var{count} bytes starting at @var{mem}.  Use if this function\n+Zeros @var{count} bytes starting at @var{mem}.  Use of this function\n is deprecated in favor of @code{memset}.\n \n @end deftypefn"}]}