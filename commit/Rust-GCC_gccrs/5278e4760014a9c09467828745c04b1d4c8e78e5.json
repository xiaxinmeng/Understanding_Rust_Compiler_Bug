{"sha": "5278e4760014a9c09467828745c04b1d4c8e78e5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTI3OGU0NzYwMDE0YTljMDk0Njc4Mjg3NDVjMDRiMWQ0YzhlNzhlNQ==", "commit": {"author": {"name": "Janis Johnson", "email": "janis187@us.ibm.com", "date": "2004-11-11T17:59:05Z"}, "committer": {"name": "Janis Johnson", "email": "janis@gcc.gnu.org", "date": "2004-11-11T17:59:05Z"}, "message": "gcc-dg.exp (skip_test_and_clear_xfail): New procedure.\n\n\t* lib/gcc-dg.exp (skip_test_and_clear_xfail): New procedure.\n\t(dg-require-weak, dg-require-visibility, dg-require-alias,\n\tdg-require-gc-sections, dg-require-profiling, dg-require-dll,\n\tdg-require-iconv, dg-require-named-sections): Use it.\n\nFrom-SVN: r90486", "tree": {"sha": "f63a838be0abd6979f16153bc871e65410572354", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f63a838be0abd6979f16153bc871e65410572354"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5278e4760014a9c09467828745c04b1d4c8e78e5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5278e4760014a9c09467828745c04b1d4c8e78e5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5278e4760014a9c09467828745c04b1d4c8e78e5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5278e4760014a9c09467828745c04b1d4c8e78e5/comments", "author": null, "committer": null, "parents": [{"sha": "524136ea7b852cdcfa8f52e853c50451d229bcaf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/524136ea7b852cdcfa8f52e853c50451d229bcaf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/524136ea7b852cdcfa8f52e853c50451d229bcaf"}], "stats": {"total": 65, "additions": 36, "deletions": 29}, "files": [{"sha": "f0f8dda8af3044bfd9b869d66d2d7936dd684f82", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5278e4760014a9c09467828745c04b1d4c8e78e5/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5278e4760014a9c09467828745c04b1d4c8e78e5/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=5278e4760014a9c09467828745c04b1d4c8e78e5", "patch": "@@ -1,5 +1,10 @@\n 2004-11-11  Janis Johnson  <janis187@us.ibm.com>\n \n+\t* lib/gcc-dg.exp (skip_test_and_clear_xfail): New procedure.\n+\t(dg-require-weak, dg-require-visibility, dg-require-alias,\n+\tdg-require-gc-sections, dg-require-profiling, dg-require-dll,\n+\tdg-require-iconv, dg-require-named-sections): Use it.\n+\n \t* lib/gcc-dg.exp (dg-xfail-if): Ignore if skipping the test.\n \n 2004-11-11  Nathan Sidwell  <nathan@codesourcery.com>"}, {"sha": "7e833bcbdae8731ed9d2379ecf0bee7c0e272bbe", "filename": "gcc/testsuite/lib/gcc-dg.exp", "status": "modified", "additions": 31, "deletions": 29, "changes": 60, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5278e4760014a9c09467828745c04b1d4c8e78e5/gcc%2Ftestsuite%2Flib%2Fgcc-dg.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5278e4760014a9c09467828745c04b1d4c8e78e5/gcc%2Ftestsuite%2Flib%2Fgcc-dg.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Flib%2Fgcc-dg.exp?ref=5278e4760014a9c09467828745c04b1d4c8e78e5", "patch": "@@ -320,53 +320,61 @@ proc gcc-dg-debug-runtest { target_compile trivial opt_opts testcases } {\n     }\n }\n \n-# If this target does not support weak symbols, skip this test.\n+# Skip a test and clear all xfail flags that might have been set for it\n+# by dg-xfail-if or for the xfail list in dg-do.  A procedure that calls\n+# this must specify \"upvar dg-do-what dg-do-what\".\n \n-proc dg-require-weak { args } {\n+proc skip_test_and_clear_xfail { } {\n+    global compiler_conditional_xfail_data\n     upvar dg-do-what dg-do-what\n-    upvar name name\n \n+    set dg-do-what [list [lindex ${dg-do-what} 0] \"N\" \"P\"]\n+    if [info exists compiler_conditional_xfail_data] {\n+\tunset compiler_conditional_xfail_data\n+    }\n+}\n+\n+# If this target does not support weak symbols, skip this test.\n+\n+proc dg-require-weak { args } {\n     set weak_available [ check_weak_available ]\n     if { $weak_available == -1 } {\n+\tupvar name name\n \tunresolved \"$name\"\n     }\n     if { $weak_available != 1 } {\n-\tset dg-do-what [list [lindex ${dg-do-what} 0] \"N\" \"P\"]\n-\treturn\n+\tupvar dg-do-what dg-do-what\n+\tskip_test_and_clear_xfail\n     }\n }\n \n # If this target does not support the \"visibility\" attribute, skip this\n # test.\n \n proc dg-require-visibility { args } {\n-    upvar dg-do-what dg-do-what\n-    upvar name name\n-\n     set visibility_available [ check_visibility_available ]\n     if { $visibility_available == -1 } {\n+\tupvar name name\n \tunresolved \"$name\"\n     }\n     if { $visibility_available != 1 } {\n-\tset dg-do-what [list [lindex ${dg-do-what} 0] \"N\" \"P\"]\n-\treturn\n+\tupvar dg-do-what dg-do-what\n+\tskip_test_and_clear_xfail\n     }\n }\n \n # If this target does not support the \"alias\" attribute, skip this\n # test.\n \n proc dg-require-alias { args } {\n-    upvar dg-do-what dg-do-what\n-    upvar name name\n-\n     set alias_available [ check_alias_available ]\n     if { $alias_available == -1 } {\n+\tupvar name name\n \tunresolved \"$name\"\n     }\n     if { $alias_available < 2 } {\n-\tset dg-do-what [list [lindex ${dg-do-what} 0] \"N\" \"P\"]\n-\treturn\n+\tupvar dg-do-what dg-do-what\n+\tskip_test_and_clear_xfail\n     }\n }\n \n@@ -376,8 +384,7 @@ proc dg-require-alias { args } {\n proc dg-require-gc-sections { args } {\n     if { ![ check_gc_sections_available ] } {\n \tupvar dg-do-what dg-do-what\n-\tset dg-do-what [list [lindex ${dg-do-what} 0] \"N\" \"P\"]\n-\treturn\n+\tskip_test_and_clear_xfail\n     }\n }\n \n@@ -386,8 +393,7 @@ proc dg-require-gc-sections { args } {\n proc dg-require-profiling { args } {\n     if { ![ check_profiling_available ${args} ] } {\n \tupvar dg-do-what dg-do-what\n-\tset dg-do-what [list [lindex ${dg-do-what} 0] \"N\" \"P\"]\n-\treturn\n+\tskip_test_and_clear_xfail\n     }\n }\n \n@@ -407,27 +413,23 @@ proc dg-require-dll { args } {\n     }\n \n     upvar dg-do-what dg-do-what\n-    set dg-do-what [list [lindex ${dg-do-what} 0] \"N\" \"P\"]\n+    skip_test_and_clear_xfail\n }\n \n proc dg-require-iconv { args } {\n     if { ![ check_iconv_available ${args} ] } {\n \tupvar dg-do-what dg-do-what\n-\tset dg-do-what [list [lindex ${dg-do-what} 0] \"N\" \"P\"]\n-\treturn\n+\tskip_test_and_clear_xfail\n     }\n-    return\n }\n \n # If this target does not support named sections skip this test.\n \n proc dg-require-named-sections { args } {\n-   upvar name name\n-\n-   if { ![ check_named_sections_available ] } {\n-       upvar dg-do-what dg-do-what\n-       set dg-do-what [list [lindex ${dg-do-what} 0] \"N\" \"P\"]\n-   }\n+    if { ![ check_named_sections_available ] } {\n+\tupvar dg-do-what dg-do-what\n+\tskip_test_and_clear_xfail\n+    }\n }\n \n # Prune any messages matching ARGS[1] (a regexp) from test output."}]}