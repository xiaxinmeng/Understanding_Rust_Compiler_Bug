{"sha": "b4df2dd3f47129f7936e21bb10fe9e8e2227ba3b", "node_id": "C_kwDOANBUbNoAKGI0ZGYyZGQzZjQ3MTI5Zjc5MzZlMjFiYjEwZmU5ZThlMjIyN2JhM2I", "commit": {"author": {"name": "GCC Administrator", "email": "gccadmin@gcc.gnu.org", "date": "2021-11-03T00:16:30Z"}, "committer": {"name": "GCC Administrator", "email": "gccadmin@gcc.gnu.org", "date": "2021-11-03T00:16:30Z"}, "message": "Daily bump.", "tree": {"sha": "f229ea02fbec613a606650271a89ad5a2e2a013b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f229ea02fbec613a606650271a89ad5a2e2a013b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b4df2dd3f47129f7936e21bb10fe9e8e2227ba3b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b4df2dd3f47129f7936e21bb10fe9e8e2227ba3b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b4df2dd3f47129f7936e21bb10fe9e8e2227ba3b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b4df2dd3f47129f7936e21bb10fe9e8e2227ba3b/comments", "author": null, "committer": null, "parents": [{"sha": "4f032929ac9e549ade45c952505ef562b82d297e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4f032929ac9e549ade45c952505ef562b82d297e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4f032929ac9e549ade45c952505ef562b82d297e"}], "stats": {"total": 414, "additions": 413, "deletions": 1}, "files": [{"sha": "36a49ff0f6e60ceabf82a8417be7143f29d2aceb", "filename": "ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4df2dd3f47129f7936e21bb10fe9e8e2227ba3b/ChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4df2dd3f47129f7936e21bb10fe9e8e2227ba3b/ChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/ChangeLog?ref=b4df2dd3f47129f7936e21bb10fe9e8e2227ba3b", "patch": "@@ -1,3 +1,8 @@\n+2021-11-02  Andrew Burgess  <andrew.burgess@embecosm.com>\n+\n+\t* MAINTAINERS (Reviewers, arc): Remove my entry.\n+\t(Write After Approval): Add an entry for myself.\n+\n 2021-10-28  Richard Purdie  <richard.purdie@linuxfoundation.org>\n \n \t* Makefile.tpl: Add CPP_FOR_BUILD and CPPFLAGS_FOR_BUILD support"}, {"sha": "2bd834e298dff4ed6254e13fe919f3511f0775c5", "filename": "contrib/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4df2dd3f47129f7936e21bb10fe9e8e2227ba3b/contrib%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4df2dd3f47129f7936e21bb10fe9e8e2227ba3b/contrib%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/contrib%2FChangeLog?ref=b4df2dd3f47129f7936e21bb10fe9e8e2227ba3b", "patch": "@@ -1,3 +1,7 @@\n+2021-11-02  Martin Liska  <mliska@suse.cz>\n+\n+\t* check-internal-format-escaping.py: Fix flake8 errors.\n+\n 2021-11-01  David Malcolm  <dmalcolm@redhat.com>\n \n \t* unicode/utf8-dump.py: New file."}, {"sha": "3c0f295ca7b54656ff4ddf91ea76f89bf2d417aa", "filename": "gcc/ChangeLog", "status": "modified", "additions": 142, "deletions": 0, "changes": 142, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4df2dd3f47129f7936e21bb10fe9e8e2227ba3b/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4df2dd3f47129f7936e21bb10fe9e8e2227ba3b/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=b4df2dd3f47129f7936e21bb10fe9e8e2227ba3b", "patch": "@@ -1,3 +1,145 @@\n+2021-11-02  Jan Hubicka  <hubicka@ucw.cz>\n+\n+\t* ipa-modref.c (modref_eaf_analysis::analyze_ssa_name): Revert\n+\taccidental commit.\n+\n+2021-11-02  Roger Sayle  <roger@nextmovesoftware.com>\n+\t    Uro\u0161 Bizjak  <ubizjak@gmail.com>\n+\n+\t* config/i386/i386.md (<any_rotate>ti3): Provide expansion for\n+\trotations by non-constant amounts.\n+\n+2021-11-02  Jan Hubicka  <hubicka@ucw.cz>\n+\n+\t* ipa-modref.c: Fix anonymous namespace placement.\n+\t(class modref_eaf_analysis): New class.\n+\t(analyze_ssa_name_flags): Turn to ...\n+\t(modref_eaf_analysis::analyze_ssa_name): ... this one.\n+\t(merge_call_lhs_flags): Turn to ...\n+\t(modref_eaf_analysis::merge_call_lhs_flags): .. this one\n+\t(modref_eaf_analysis::merge_with_ssa_name): New member function.\n+\t(record_escape_points): Turn to ...\n+\t(modref_eaf_analysis::record_escape_points): ... this one.\n+\t(analyze_parms): Updat\n+\t(ipa_merge_modref_summary_after_inlining): Move to the end of file.\n+\n+2021-11-02  Jan Hubicka  <hubicka@ucw.cz>\n+\n+\t* gimple.c (gimple_call_static_chain_flags): New function.\n+\t* gimple.h (gimple_call_static_chain_flags): Declare\n+\t* ipa-modref.c (modref_summary::modref_summary): Initialize\n+\tstatic_chain_flags.\n+\t(modref_summary_lto::modref_summary_lto): Likewise.\n+\t(modref_summary::useful_p): Test static_chain_flags.\n+\t(modref_summary_lto::useful_p): Likewise.\n+\t(struct modref_summary_lto): Add static_chain_flags.\n+\t(modref_summary::dump): Dump static_chain_flags.\n+\t(modref_summary_lto::dump): Likewise.\n+\t(struct escape_point): Add static_cahin_arg.\n+\t(analyze_ssa_name_flags): Use gimple_call_static_chain_flags.\n+\t(analyze_parms): Handle static chains.\n+\t(modref_summaries::duplicate): Duplicate static_chain_flags.\n+\t(modref_summaries_lto::duplicate): Likewise.\n+\t(modref_write): Stream static_chain_flags.\n+\t(read_section): Likewise.\n+\t(modref_merge_call_site_flags): Handle static_chain_flags.\n+\t* ipa-modref.h (struct modref_summary): Add static_chain_flags.\n+\t* tree-ssa-structalias.c (handle_rhs_call): Use\n+\tgimple_static_chain_flags.\n+\n+2021-11-02  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/103029\n+\t* tree-vect-loop-manip.c (vect_loop_versioning): Ensure\n+\tthe PHI nodes in the loop maintain their original operand\n+\torder.\n+\n+2021-11-02  Jan Hubicka  <hubicka@ucw.cz>\n+\n+\t* tree-core.h (EAF_NOT_RETURNED_DIRECTLY): New flag.\n+\t(EAF_NOREAD): Renumber.\n+\t* ipa-modref.c (dump_eaf_flags): Dump EAF_NOT_RETURNED_DIRECTLY.\n+\t(remove_useless_eaf_flags): Handle EAF_NOT_RETURNED_DIRECTLY\n+\t(deref_flags): Likewise.\n+\t(modref_lattice::init): Likewise.\n+\t(modref_lattice::merge): Likewise.\n+\t(merge_call_lhs_flags): Likewise.\n+\t(analyze_ssa_name_flags): Likewise.\n+\t(modref_merge_call_site_flags): Likewise.\n+\t* tree-ssa-structalias.c (handle_call_arg): Likewise.\n+\n+2021-11-02  Maciej W. Rozycki  <macro@embecosm.com>\n+\n+\t* config/riscv/riscv.c (riscv_rtx_costs): Correct a CONST_INT_P\n+\tcheck and remove an unused local variable with shNadd/shNadd.uw\n+\tpattern handling.\n+\n+2021-11-02  Tamar Christina  <tamar.christina@arm.com>\n+\n+\tPR tree-optimization/103007\n+\t* tree-vect-slp-patterns.c (complex_fms_pattern::matches): Add elem\n+\tcheck.\n+\n+2021-11-02  Richard Biener  <rguenther@suse.de>\n+\n+\tPR middle-end/103038\n+\t* fold-const.c (native_interpret_expr): Handle OFFSET_TYPE.\n+\t(can_native_interpret_type_p): Likewise.\n+\t* internal-fn.c (expand_DEFERRED_INIT): View-convert the\n+\tRHS if the LHS is an SSA name.\n+\n+2021-11-02  Richard Sandiford  <richard.sandiford@arm.com>\n+\n+\t* langhooks.h (lang_hooks_for_types::simulate_record_decl): New hook.\n+\t* langhooks-def.h (lhd_simulate_record_decl): Declare.\n+\t(LANG_HOOKS_SIMULATE_RECORD_DECL): Define.\n+\t(LANG_HOOKS_FOR_TYPES_INITIALIZER): Include it.\n+\t* langhooks.c (lhd_simulate_record_decl): New function.\n+\n+2021-11-02  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR target/103020\n+\t* config/i386/i386.c (ix86_vector_mode_supported_p): Reject vector\n+\tmodes with TImode inner mode if 32-bit.\n+\n+2021-11-02  liuhongt  <hongtao.liu@intel.com>\n+\n+\t* doc/sourcebuild.texi (vect_slp_v4qi_store_unalign,\n+\tvect_slp_v2hi_store_unalign, vect_slp_v4hi_store_unalign,\n+\tvect_slp_v4si_store_unalign): Document efficient target.\n+\t(vect_slp_v4qi_store_unalign_1, vect_slp_v8qi_store_unalign_1,\n+\tvect_slp_v16qi_store_unalign_1): Ditto.\n+\t(vect_slp_v2hi_store_align,vect_slp_v2qi_store_align,\n+\tvect_slp_v2si_store_align, vect_slp_v4qi_store_align): Ditto.\n+\t(struct_4char_block_move, struct_8char_block_move,\n+\tstruct_16char_block_move): Ditto.\n+\n+2021-11-02  Roger Sayle  <roger@nextmovesoftware.com>\n+\t    Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR target/102986\n+\t* config/i386/i386-expand.c (ix86_expand_v1ti_to_ti,\n+\tix86_expand_ti_to_v1ti): New helper functions.\n+\t(ix86_expand_v1ti_shift): Check if the amount operand is an\n+\tinteger constant, and expand as a TImode shift if it isn't.\n+\t(ix86_expand_v1ti_rotate): Check if the amount operand is an\n+\tinteger constant, and expand as a TImode rotate if it isn't.\n+\t(ix86_expand_v1ti_ashiftrt): New function to expand arithmetic\n+\tright shifts of V1TImode quantities.\n+\t* config/i386/i386-protos.h (ix86_expand_v1ti_ashift): Prototype.\n+\t* config/i386/sse.md (ashlv1ti3, lshrv1ti3): Change constraints\n+\tto QImode general_operand, and let the helper functions lower\n+\tshifts by non-constant operands, as TImode shifts.  Make\n+\tconditional on TARGET_64BIT.\n+\t(ashrv1ti3): New expander calling ix86_expand_v1ti_ashiftrt.\n+\t(rotlv1ti3, rotrv1ti3): Change shift operand to QImode.\n+\tMake conditional on TARGET_64BIT.\n+\n+2021-11-02  Stefan Schulze Frielinghaus  <stefansf@linux.ibm.com>\n+\n+\t* config/s390/s390.md (\"*cc_to_int\", \"tabort\", \"*tabort_1\",\n+\t\"*tabort_1_plus\"): Remove operands non-null check.\n+\n 2021-11-01  Martin Liska  <mliska@suse.cz>\n \n \t* opt-functions.awk: Add new sanity checking."}, {"sha": "4de35213a4288e7a091b511fa7aba60bef977c97", "filename": "gcc/DATESTAMP", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4df2dd3f47129f7936e21bb10fe9e8e2227ba3b/gcc%2FDATESTAMP", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4df2dd3f47129f7936e21bb10fe9e8e2227ba3b/gcc%2FDATESTAMP", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FDATESTAMP?ref=b4df2dd3f47129f7936e21bb10fe9e8e2227ba3b", "patch": "@@ -1 +1 @@\n-20211102\n+20211103"}, {"sha": "5caf5e1258febd3755fd70afa59211119050f604", "filename": "gcc/c/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4df2dd3f47129f7936e21bb10fe9e8e2227ba3b/gcc%2Fc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4df2dd3f47129f7936e21bb10fe9e8e2227ba3b/gcc%2Fc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc%2FChangeLog?ref=b4df2dd3f47129f7936e21bb10fe9e8e2227ba3b", "patch": "@@ -1,3 +1,9 @@\n+2021-11-02  Richard Sandiford  <richard.sandiford@arm.com>\n+\n+\t* c-tree.h (c_simulate_record_decl): Declare.\n+\t* c-objc-common.h (LANG_HOOKS_SIMULATE_RECORD_DECL): Override.\n+\t* c-decl.c (c_simulate_record_decl): New function.\n+\n 2021-10-22  Eric Gallager  <egallager@gcc.gnu.org>\n \n \tPR other/102663"}, {"sha": "13365ed862e3ad1651d49c4fbeb9eb986f321493", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4df2dd3f47129f7936e21bb10fe9e8e2227ba3b/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4df2dd3f47129f7936e21bb10fe9e8e2227ba3b/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=b4df2dd3f47129f7936e21bb10fe9e8e2227ba3b", "patch": "@@ -1,3 +1,10 @@\n+2021-11-02  Richard Sandiford  <richard.sandiford@arm.com>\n+\n+\t* decl.c: Include langhooks-def.h.\n+\t(cxx_simulate_record_decl): New function.\n+\t* cp-objcp-common.h (cxx_simulate_record_decl): Declare.\n+\t(LANG_HOOKS_SIMULATE_RECORD_DECL): Override.\n+\n 2021-10-29  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR c++/102820"}, {"sha": "ab9c2ae6c90b9f3df460cf142d6c6007cdce193e", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 243, "deletions": 0, "changes": 243, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4df2dd3f47129f7936e21bb10fe9e8e2227ba3b/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4df2dd3f47129f7936e21bb10fe9e8e2227ba3b/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=b4df2dd3f47129f7936e21bb10fe9e8e2227ba3b", "patch": "@@ -1,3 +1,246 @@\n+2021-11-02  Jan Hubicka  <hubicka@ucw.cz>\n+\n+\t* gcc.dg/ipa/modref-3.c: New test.\n+\n+2021-11-02  Jan Hubicka  <hubicka@ucw.cz>\n+\n+\t* g++.dg/ipa/modref-1.C: Update template.\n+\t* gcc.dg/tree-ssa/modref-10.c: New test.\n+\n+2021-11-02  Stefan Schulze Frielinghaus  <stefansf@linux.ibm.com>\n+\n+\t* gcc.dg/tree-ssa/ldist-rawmemchr-1.c: For IBM Z set arch to z13\n+\tand use z/Architecture since the tests require vector extensions.\n+\t* gcc.dg/tree-ssa/ldist-rawmemchr-2.c: Likewise.\n+\t* gcc.dg/tree-ssa/ldist-strlen-1.c: Likewise.\n+\t* gcc.dg/tree-ssa/ldist-strlen-3.c: Likewise.\n+\n+2021-11-02  Tamar Christina  <tamar.christina@arm.com>\n+\n+\tPR tree-optimization/103007\n+\t* g++.dg/pr103007.C: New test.\n+\n+2021-11-02  Richard Biener  <rguenther@suse.de>\n+\n+\tPR middle-end/103038\n+\t* g++.dg/pr103038.C: New testcase.\n+\n+2021-11-02  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR target/103020\n+\t* gcc.target/i386/pr103020.c: New test.\n+\n+2021-11-02  Martin Liska  <mliska@suse.cz>\n+\n+\t* gcc.dg/vect/vect.exp: Include also tsvc sub-directory.\n+\t* gcc.dg/vect/tsvc/license.txt: New test.\n+\t* gcc.dg/vect/tsvc/tsvc.h: New test.\n+\t* gcc.dg/vect/tsvc/vect-tsvc-s000.c: New test.\n+\t* gcc.dg/vect/tsvc/vect-tsvc-s111.c: New test.\n+\t* gcc.dg/vect/tsvc/vect-tsvc-s1111.c: New test.\n+\t* gcc.dg/vect/tsvc/vect-tsvc-s1112.c: New test.\n+\t* gcc.dg/vect/tsvc/vect-tsvc-s1113.c: New test.\n+\t* gcc.dg/vect/tsvc/vect-tsvc-s1115.c: New test.\n+\t* gcc.dg/vect/tsvc/vect-tsvc-s1119.c: New test.\n+\t* gcc.dg/vect/tsvc/vect-tsvc-s112.c: New test.\n+\t* gcc.dg/vect/tsvc/vect-tsvc-s113.c: New test.\n+\t* gcc.dg/vect/tsvc/vect-tsvc-s114.c: New test.\n+\t* gcc.dg/vect/tsvc/vect-tsvc-s115.c: New test.\n+\t* gcc.dg/vect/tsvc/vect-tsvc-s116.c: New test.\n+\t* gcc.dg/vect/tsvc/vect-tsvc-s1161.c: New test.\n+\t* gcc.dg/vect/tsvc/vect-tsvc-s118.c: New test.\n+\t* gcc.dg/vect/tsvc/vect-tsvc-s119.c: New test.\n+\t* gcc.dg/vect/tsvc/vect-tsvc-s121.c: New test.\n+\t* gcc.dg/vect/tsvc/vect-tsvc-s1213.c: New test.\n+\t* gcc.dg/vect/tsvc/vect-tsvc-s122.c: New test.\n+\t* gcc.dg/vect/tsvc/vect-tsvc-s1221.c: New test.\n+\t* gcc.dg/vect/tsvc/vect-tsvc-s123.c: New test.\n+\t* gcc.dg/vect/tsvc/vect-tsvc-s1232.c: New test.\n+\t* gcc.dg/vect/tsvc/vect-tsvc-s124.c: New test.\n+\t* gcc.dg/vect/tsvc/vect-tsvc-s1244.c: New test.\n+\t* gcc.dg/vect/tsvc/vect-tsvc-s125.c: New test.\n+\t* gcc.dg/vect/tsvc/vect-tsvc-s1251.c: New test.\n+\t* gcc.dg/vect/tsvc/vect-tsvc-s126.c: New test.\n+\t* gcc.dg/vect/tsvc/vect-tsvc-s127.c: New test.\n+\t* gcc.dg/vect/tsvc/vect-tsvc-s1279.c: New test.\n+\t* gcc.dg/vect/tsvc/vect-tsvc-s128.c: New test.\n+\t* gcc.dg/vect/tsvc/vect-tsvc-s1281.c: New test.\n+\t* gcc.dg/vect/tsvc/vect-tsvc-s131.c: New test.\n+\t* gcc.dg/vect/tsvc/vect-tsvc-s13110.c: New test.\n+\t* gcc.dg/vect/tsvc/vect-tsvc-s132.c: New test.\n+\t* gcc.dg/vect/tsvc/vect-tsvc-s1351.c: New test.\n+\t* gcc.dg/vect/tsvc/vect-tsvc-s141.c: New test.\n+\t* gcc.dg/vect/tsvc/vect-tsvc-s1421.c: New test.\n+\t* gcc.dg/vect/tsvc/vect-tsvc-s151.c: New test.\n+\t* gcc.dg/vect/tsvc/vect-tsvc-s152.c: New test.\n+\t* gcc.dg/vect/tsvc/vect-tsvc-s161.c: New test.\n+\t* gcc.dg/vect/tsvc/vect-tsvc-s162.c: New test.\n+\t* gcc.dg/vect/tsvc/vect-tsvc-s171.c: New test.\n+\t* gcc.dg/vect/tsvc/vect-tsvc-s172.c: New test.\n+\t* gcc.dg/vect/tsvc/vect-tsvc-s173.c: New test.\n+\t* gcc.dg/vect/tsvc/vect-tsvc-s174.c: New test.\n+\t* gcc.dg/vect/tsvc/vect-tsvc-s175.c: New test.\n+\t* gcc.dg/vect/tsvc/vect-tsvc-s176.c: New test.\n+\t* gcc.dg/vect/tsvc/vect-tsvc-s2101.c: New test.\n+\t* gcc.dg/vect/tsvc/vect-tsvc-s2102.c: New test.\n+\t* gcc.dg/vect/tsvc/vect-tsvc-s211.c: New test.\n+\t* gcc.dg/vect/tsvc/vect-tsvc-s2111.c: New test.\n+\t* gcc.dg/vect/tsvc/vect-tsvc-s212.c: New test.\n+\t* gcc.dg/vect/tsvc/vect-tsvc-s221.c: New test.\n+\t* gcc.dg/vect/tsvc/vect-tsvc-s222.c: New test.\n+\t* gcc.dg/vect/tsvc/vect-tsvc-s2233.c: New test.\n+\t* gcc.dg/vect/tsvc/vect-tsvc-s2244.c: New test.\n+\t* gcc.dg/vect/tsvc/vect-tsvc-s2251.c: New test.\n+\t* gcc.dg/vect/tsvc/vect-tsvc-s2275.c: New test.\n+\t* gcc.dg/vect/tsvc/vect-tsvc-s231.c: New test.\n+\t* gcc.dg/vect/tsvc/vect-tsvc-s232.c: New test.\n+\t* gcc.dg/vect/tsvc/vect-tsvc-s233.c: New test.\n+\t* gcc.dg/vect/tsvc/vect-tsvc-s235.c: New test.\n+\t* gcc.dg/vect/tsvc/vect-tsvc-s241.c: New test.\n+\t* gcc.dg/vect/tsvc/vect-tsvc-s242.c: New test.\n+\t* gcc.dg/vect/tsvc/vect-tsvc-s243.c: New test.\n+\t* gcc.dg/vect/tsvc/vect-tsvc-s244.c: New test.\n+\t* gcc.dg/vect/tsvc/vect-tsvc-s251.c: New test.\n+\t* gcc.dg/vect/tsvc/vect-tsvc-s252.c: New test.\n+\t* gcc.dg/vect/tsvc/vect-tsvc-s253.c: New test.\n+\t* gcc.dg/vect/tsvc/vect-tsvc-s254.c: New test.\n+\t* gcc.dg/vect/tsvc/vect-tsvc-s255.c: New test.\n+\t* gcc.dg/vect/tsvc/vect-tsvc-s256.c: New test.\n+\t* gcc.dg/vect/tsvc/vect-tsvc-s257.c: New test.\n+\t* gcc.dg/vect/tsvc/vect-tsvc-s258.c: New test.\n+\t* gcc.dg/vect/tsvc/vect-tsvc-s261.c: New test.\n+\t* gcc.dg/vect/tsvc/vect-tsvc-s271.c: New test.\n+\t* gcc.dg/vect/tsvc/vect-tsvc-s2710.c: New test.\n+\t* gcc.dg/vect/tsvc/vect-tsvc-s2711.c: New test.\n+\t* gcc.dg/vect/tsvc/vect-tsvc-s2712.c: New test.\n+\t* gcc.dg/vect/tsvc/vect-tsvc-s272.c: New test.\n+\t* gcc.dg/vect/tsvc/vect-tsvc-s273.c: New test.\n+\t* gcc.dg/vect/tsvc/vect-tsvc-s274.c: New test.\n+\t* gcc.dg/vect/tsvc/vect-tsvc-s275.c: New test.\n+\t* gcc.dg/vect/tsvc/vect-tsvc-s276.c: New test.\n+\t* gcc.dg/vect/tsvc/vect-tsvc-s277.c: New test.\n+\t* gcc.dg/vect/tsvc/vect-tsvc-s278.c: New test.\n+\t* gcc.dg/vect/tsvc/vect-tsvc-s279.c: New test.\n+\t* gcc.dg/vect/tsvc/vect-tsvc-s281.c: New test.\n+\t* gcc.dg/vect/tsvc/vect-tsvc-s291.c: New test.\n+\t* gcc.dg/vect/tsvc/vect-tsvc-s292.c: New test.\n+\t* gcc.dg/vect/tsvc/vect-tsvc-s293.c: New test.\n+\t* gcc.dg/vect/tsvc/vect-tsvc-s311.c: New test.\n+\t* gcc.dg/vect/tsvc/vect-tsvc-s3110.c: New test.\n+\t* gcc.dg/vect/tsvc/vect-tsvc-s3111.c: New test.\n+\t* gcc.dg/vect/tsvc/vect-tsvc-s31111.c: New test.\n+\t* gcc.dg/vect/tsvc/vect-tsvc-s3112.c: New test.\n+\t* gcc.dg/vect/tsvc/vect-tsvc-s3113.c: New test.\n+\t* gcc.dg/vect/tsvc/vect-tsvc-s312.c: New test.\n+\t* gcc.dg/vect/tsvc/vect-tsvc-s313.c: New test.\n+\t* gcc.dg/vect/tsvc/vect-tsvc-s314.c: New test.\n+\t* gcc.dg/vect/tsvc/vect-tsvc-s315.c: New test.\n+\t* gcc.dg/vect/tsvc/vect-tsvc-s316.c: New test.\n+\t* gcc.dg/vect/tsvc/vect-tsvc-s317.c: New test.\n+\t* gcc.dg/vect/tsvc/vect-tsvc-s318.c: New test.\n+\t* gcc.dg/vect/tsvc/vect-tsvc-s319.c: New test.\n+\t* gcc.dg/vect/tsvc/vect-tsvc-s321.c: New test.\n+\t* gcc.dg/vect/tsvc/vect-tsvc-s322.c: New test.\n+\t* gcc.dg/vect/tsvc/vect-tsvc-s323.c: New test.\n+\t* gcc.dg/vect/tsvc/vect-tsvc-s3251.c: New test.\n+\t* gcc.dg/vect/tsvc/vect-tsvc-s331.c: New test.\n+\t* gcc.dg/vect/tsvc/vect-tsvc-s332.c: New test.\n+\t* gcc.dg/vect/tsvc/vect-tsvc-s341.c: New test.\n+\t* gcc.dg/vect/tsvc/vect-tsvc-s342.c: New test.\n+\t* gcc.dg/vect/tsvc/vect-tsvc-s343.c: New test.\n+\t* gcc.dg/vect/tsvc/vect-tsvc-s351.c: New test.\n+\t* gcc.dg/vect/tsvc/vect-tsvc-s352.c: New test.\n+\t* gcc.dg/vect/tsvc/vect-tsvc-s353.c: New test.\n+\t* gcc.dg/vect/tsvc/vect-tsvc-s4112.c: New test.\n+\t* gcc.dg/vect/tsvc/vect-tsvc-s4113.c: New test.\n+\t* gcc.dg/vect/tsvc/vect-tsvc-s4114.c: New test.\n+\t* gcc.dg/vect/tsvc/vect-tsvc-s4115.c: New test.\n+\t* gcc.dg/vect/tsvc/vect-tsvc-s4116.c: New test.\n+\t* gcc.dg/vect/tsvc/vect-tsvc-s4117.c: New test.\n+\t* gcc.dg/vect/tsvc/vect-tsvc-s4121.c: New test.\n+\t* gcc.dg/vect/tsvc/vect-tsvc-s421.c: New test.\n+\t* gcc.dg/vect/tsvc/vect-tsvc-s422.c: New test.\n+\t* gcc.dg/vect/tsvc/vect-tsvc-s423.c: New test.\n+\t* gcc.dg/vect/tsvc/vect-tsvc-s424.c: New test.\n+\t* gcc.dg/vect/tsvc/vect-tsvc-s431.c: New test.\n+\t* gcc.dg/vect/tsvc/vect-tsvc-s441.c: New test.\n+\t* gcc.dg/vect/tsvc/vect-tsvc-s442.c: New test.\n+\t* gcc.dg/vect/tsvc/vect-tsvc-s443.c: New test.\n+\t* gcc.dg/vect/tsvc/vect-tsvc-s451.c: New test.\n+\t* gcc.dg/vect/tsvc/vect-tsvc-s452.c: New test.\n+\t* gcc.dg/vect/tsvc/vect-tsvc-s453.c: New test.\n+\t* gcc.dg/vect/tsvc/vect-tsvc-s471.c: New test.\n+\t* gcc.dg/vect/tsvc/vect-tsvc-s481.c: New test.\n+\t* gcc.dg/vect/tsvc/vect-tsvc-s482.c: New test.\n+\t* gcc.dg/vect/tsvc/vect-tsvc-s491.c: New test.\n+\t* gcc.dg/vect/tsvc/vect-tsvc-va.c: New test.\n+\t* gcc.dg/vect/tsvc/vect-tsvc-vag.c: New test.\n+\t* gcc.dg/vect/tsvc/vect-tsvc-vas.c: New test.\n+\t* gcc.dg/vect/tsvc/vect-tsvc-vbor.c: New test.\n+\t* gcc.dg/vect/tsvc/vect-tsvc-vdotr.c: New test.\n+\t* gcc.dg/vect/tsvc/vect-tsvc-vif.c: New test.\n+\t* gcc.dg/vect/tsvc/vect-tsvc-vpv.c: New test.\n+\t* gcc.dg/vect/tsvc/vect-tsvc-vpvpv.c: New test.\n+\t* gcc.dg/vect/tsvc/vect-tsvc-vpvts.c: New test.\n+\t* gcc.dg/vect/tsvc/vect-tsvc-vpvtv.c: New test.\n+\t* gcc.dg/vect/tsvc/vect-tsvc-vsumr.c: New test.\n+\t* gcc.dg/vect/tsvc/vect-tsvc-vtv.c: New test.\n+\t* gcc.dg/vect/tsvc/vect-tsvc-vtvtv.c: New test.\n+\n+2021-11-02  liuhongt  <hongtao.liu@intel.com>\n+\n+\tPR testsuite/102944\n+\t* c-c++-common/Wstringop-overflow-2.c: Adjust target/xfail\n+\tselector.\n+\t* gcc.dg/Warray-bounds-48.c: Ditto.\n+\t* gcc.dg/Warray-bounds-51.c: Ditto.\n+\t* gcc.dg/Warray-parameter-3.c: Ditto.\n+\t* gcc.dg/Wstringop-overflow-14.c: Ditto.\n+\t* gcc.dg/Wstringop-overflow-21.c: Ditto.\n+\t* gcc.dg/Wstringop-overflow-68.c: Ditto\n+\t* gcc.dg/Wstringop-overflow-76.c: Ditto\n+\t* gcc.dg/Wzero-length-array-bounds-2.c: Ditto.\n+\t* lib/target-supports.exp (vect_slp_v4qi_store_unalign): New\n+\tefficient target.\n+\t(vect_slp_v4qi_store_unalign_1): Ditto.\n+\t(struct_4char_block_move): Ditto.\n+\t(struct_8char_block_move): Ditto.\n+\t(stryct_16char_block_move): Ditto.\n+\t(vect_slp_v2hi_store_align): Ditto.\n+\t(vect_slp_v2qi_store): Rename to ..\n+\t(vect_slp_v2qi_store_align): .. this.\n+\t(vect_slp_v4qi_store): Rename to ..\n+\t(vect_slp_v4qi_store_align): .. This.\n+\t(vect_slp_v8qi_store): Rename to ..\n+\t(vect_slp_v8qi_store_unalign_1): .. This.\n+\t(vect_slp_v16qi_store): Rename to ..\n+\t(vect_slp_v16qi_store_unalign_1): .. This.\n+\t(vect_slp_v2hi_store): Rename to ..\n+\t(vect_slp_v2hi_store_unalign): .. This.\n+\t(vect_slp_v4hi_store): Rename to ..\n+\t(vect_slp_v4hi_store_unalign): This.\n+\t(vect_slp_v2si_store): Rename to ..\n+\t(vect_slp_v2si_store_align): .. This.\n+\t(vect_slp_v4si_store): Rename to ..\n+\t(vect_slp_v4si_store_unalign): Ditto.\n+\t(check_vect_slp_aligned_store_usage): Rename to ..\n+\t(check_vect_slp_store_usage): .. this and adjust code to make\n+\tit an exact pattern match of corresponding testcase.\n+\n+2021-11-02  Roger Sayle  <roger@nextmovesoftware.com>\n+\t    Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR target/102986\n+\t* gcc.target/i386/sse2-v1ti-ashiftrt-1.c: New test case.\n+\t* gcc.target/i386/sse2-v1ti-ashiftrt-2.c: New test case.\n+\t* gcc.target/i386/sse2-v1ti-ashiftrt-3.c: New test case.\n+\t* gcc.target/i386/sse2-v1ti-shift-2.c: New test case.\n+\t* gcc.target/i386/sse2-v1ti-shift-3.c: New test case.\n+\n+2021-11-02  Jakub Jelinek  <jakub@redhat.com>\n+\n+\t* g++.dg/gomp/loop-8.C: New test.\n+\n 2021-11-01  Martin Liska  <mliska@suse.cz>\n \n \t* g++.dg/ipa/modref-1.C: Fix test-suite pattern scanning."}, {"sha": "d61312e9e23ea4fa7fc813923f9a42fe998606c2", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4df2dd3f47129f7936e21bb10fe9e8e2227ba3b/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4df2dd3f47129f7936e21bb10fe9e8e2227ba3b/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=b4df2dd3f47129f7936e21bb10fe9e8e2227ba3b", "patch": "@@ -1,3 +1,8 @@\n+2021-11-03  Jonathan Wakely  <jwakely@redhat.com>\n+\n+\t* include/std/valarray (valarray::valarray()): Add noexcept.\n+\t(valarray::operator[]): Likewise.\n+\n 2021-11-01  Jonathan Wakely  <jwakely@redhat.com>\n \n \t* include/debug/stl_iterator.h (__valid_range): Add constexpr"}]}