{"sha": "dd355a42fd3808c3b61f5f4b6b4834f42a37349a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGQzNTVhNDJmZDM4MDhjM2I2MWY1ZjRiNmI0ODM0ZjQyYTM3MzQ5YQ==", "commit": {"author": {"name": "Mikael Morin", "email": "mikael@gcc.gnu.org", "date": "2013-03-03T17:16:42Z"}, "committer": {"name": "Mikael Morin", "email": "mikael@gcc.gnu.org", "date": "2013-03-03T17:16:42Z"}, "message": "Make-lang.in (F95_PARSER_OBJS): Add dependency to vec.h.\n\nfortran/\n\t* Make-lang.in (F95_PARSER_OBJS): Add dependency to vec.h.\n\t* gfortran.h: Include vec.h.\n\t(gfc_undo_change_set): New struct.\n\t* symbol.c (tentative_tbp): Remove struct.\n\t(changed_syms, tentative_tbp_list): Remove variables.\n\t(default_undo_chgset_var, latest_undo_chgset): New variables.\n\t(save_symbol_data, gfc_get_sym_tree, gfc_undo_symbols,\n\tgfc_commit_symbols, gfc_commit_symbol,\n\tgfc_enforce_clean_symbol_state, gfc_get_typebound_proc):\n\tUse latest_undo_chgset instead of changed_syms and tentative_tbp_list.\n\nFrom-SVN: r196411", "tree": {"sha": "a2128dfb01733a9760a5ee4a2349a849cf563bfc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a2128dfb01733a9760a5ee4a2349a849cf563bfc"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/dd355a42fd3808c3b61f5f4b6b4834f42a37349a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dd355a42fd3808c3b61f5f4b6b4834f42a37349a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/dd355a42fd3808c3b61f5f4b6b4834f42a37349a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dd355a42fd3808c3b61f5f4b6b4834f42a37349a/comments", "author": null, "committer": null, "parents": [{"sha": "0f0d56d81a9bbcaba19d6221c60e2dc63651e32d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0f0d56d81a9bbcaba19d6221c60e2dc63651e32d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0f0d56d81a9bbcaba19d6221c60e2dc63651e32d"}], "stats": {"total": 115, "additions": 50, "deletions": 65}, "files": [{"sha": "52ebd92342091344200c9b35f7803cbbceadda3e", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dd355a42fd3808c3b61f5f4b6b4834f42a37349a/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dd355a42fd3808c3b61f5f4b6b4834f42a37349a/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=dd355a42fd3808c3b61f5f4b6b4834f42a37349a", "patch": "@@ -1,3 +1,16 @@\n+2013-03-03  Mikael Morin  <mikael@gcc.gnu.org>\n+\n+\t* Make-lang.in (F95_PARSER_OBJS): Add dependency to vec.h\n+\t* gfortran.h: Include vec.h\n+\t(gfc_undo_change_set): New struct.\n+\t* symbol.c (tentative_tbp): Remove struct.\n+\t(changed_syms, tentative_tbp_list): Remove variables.\n+\t(default_undo_chgset_var, latest_undo_chgset): New variables.\n+\t(save_symbol_data, gfc_get_sym_tree, gfc_undo_symbols,\n+\tgfc_commit_symbols, gfc_commit_symbol,\n+\tgfc_enforce_clean_symbol_state, gfc_get_typebound_proc):\n+\tUse latest_undo_chgset instead of changed_syms and tentative_tbp_list.\n+\n 2013-03-01  Tobias Burnus  <burnus@net-b.de>\n \n \tPR fortran/56491"}, {"sha": "8c9e7eabac469fdc286f8f9f8607071982cb64be", "filename": "gcc/fortran/Make-lang.in", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dd355a42fd3808c3b61f5f4b6b4834f42a37349a/gcc%2Ffortran%2FMake-lang.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dd355a42fd3808c3b61f5f4b6b4834f42a37349a/gcc%2Ffortran%2FMake-lang.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FMake-lang.in?ref=dd355a42fd3808c3b61f5f4b6b4834f42a37349a", "patch": "@@ -327,7 +327,7 @@ $(F95_PARSER_OBJS): fortran/gfortran.h fortran/libgfortran.h \\\n \t\tfortran/intrinsic.h fortran/match.h fortran/constructor.h \\\n \t\tfortran/parse.h fortran/arith.h fortran/target-memory.h \\\n \t\t$(CONFIG_H) $(SYSTEM_H) $(TM_H) $(TM_P_H) coretypes.h \\\n-\t\tdumpfile.h $(TREE_H) dumpfile.h $(GGC_H) \\\n+\t\tdumpfile.h $(TREE_H) dumpfile.h $(GGC_H) $(VEC_H) \\\n \t\t$(FLAGS_H) $(DIAGNOSTIC_H) errors.h $(FUNCTION_H) \\\n \t\tfortran/iso-c-binding.def fortran/iso-fortran-env.def\n fortran/openmp.o: pointer-set.h $(TARGET_H) toplev.h"}, {"sha": "d6176dbe9745a8c08a93355d1339e609b12530be", "filename": "gcc/fortran/gfortran.h", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dd355a42fd3808c3b61f5f4b6b4834f42a37349a/gcc%2Ffortran%2Fgfortran.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dd355a42fd3808c3b61f5f4b6b4834f42a37349a/gcc%2Ffortran%2Fgfortran.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fgfortran.h?ref=dd355a42fd3808c3b61f5f4b6b4834f42a37349a", "patch": "@@ -39,6 +39,7 @@ along with GCC; see the file COPYING3.  If not see\n #include \"intl.h\"\n #include \"input.h\"\n #include \"splay-tree.h\"\n+#include \"vec.h\"\n \n /* Major control parameters.  */\n \n@@ -1275,6 +1276,14 @@ typedef struct gfc_symbol\n }\n gfc_symbol;\n \n+\n+struct gfc_undo_change_set\n+{\n+  vec<gfc_symbol *> syms;\n+  vec<gfc_typebound_proc *> tbps;\n+};\n+\n+\n /* This structure is used to keep track of symbols in common blocks.  */\n typedef struct gfc_common_head\n {"}, {"sha": "1bf4c86e1f1f6d328dd668281cdf64eb069bc5e1", "filename": "gcc/fortran/symbol.c", "status": "modified", "additions": 27, "deletions": 64, "changes": 91, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dd355a42fd3808c3b61f5f4b6b4834f42a37349a/gcc%2Ffortran%2Fsymbol.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dd355a42fd3808c3b61f5f4b6b4834f42a37349a/gcc%2Ffortran%2Fsymbol.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fsymbol.c?ref=dd355a42fd3808c3b61f5f4b6b4834f42a37349a", "patch": "@@ -97,21 +97,10 @@ gfc_namespace *gfc_global_ns_list;\n \n gfc_gsymbol *gfc_gsym_root = NULL;\n \n-static gfc_symbol *changed_syms = NULL;\n-\n gfc_dt_list *gfc_derived_types;\n \n-\n-/* List of tentative typebound-procedures.  */\n-\n-typedef struct tentative_tbp\n-{\n-  gfc_typebound_proc *proc;\n-  struct tentative_tbp *next;\n-}\n-tentative_tbp;\n-\n-static tentative_tbp *tentative_tbp_list = NULL;\n+static gfc_undo_change_set default_undo_chgset_var = { vNULL, vNULL };\n+static gfc_undo_change_set *latest_undo_chgset = &default_undo_chgset_var;\n \n \n /*********** IMPLICIT NONE and IMPLICIT statement handlers ***********/\n@@ -2303,7 +2292,7 @@ gfc_reference_st_label (gfc_st_label *lp, gfc_sl_type type)\n    undo changes made to a symbol table if the current interpretation\n    of a statement is found to be incorrect.  Whenever a symbol is\n    looked up, we make a copy of it and link to it.  All of these\n-   symbols are kept in a singly linked list so that we can commit or\n+   symbols are kept in a vector so that we can commit or\n    undo the changes at a later time.\n \n    A symtree may point to a symbol node outside of its namespace.  In\n@@ -2721,8 +2710,7 @@ save_symbol_data (gfc_symbol *sym)\n   sym->old_symbol = XCNEW (gfc_symbol);\n   *(sym->old_symbol) = *sym;\n \n-  sym->tlink = changed_syms;\n-  changed_syms = sym;\n+  latest_undo_chgset->syms.safe_push (sym);\n }\n \n \n@@ -2758,10 +2746,9 @@ gfc_get_sym_tree (const char *name, gfc_namespace *ns, gfc_symtree **result,\n \n       /* Add to the list of tentative symbols.  */\n       p->old_symbol = NULL;\n-      p->tlink = changed_syms;\n       p->mark = 1;\n       p->gfc_new = 1;\n-      changed_syms = p;\n+      latest_undo_chgset->syms.safe_push (p);\n \n       st = gfc_new_symtree (&ns->sym_root, name);\n       st->n.sym = p;\n@@ -2899,13 +2886,11 @@ find_common_symtree (gfc_symtree *st, gfc_common_head *head)\n void\n gfc_undo_symbols (void)\n {\n-  gfc_symbol *p, *q, *old;\n-  tentative_tbp *tbp, *tbq;\n+  gfc_symbol *p, *old;\n+  unsigned i;\n \n-  for (p = changed_syms; p; p = q)\n+  FOR_EACH_VEC_ELT (latest_undo_chgset->syms, i, p)\n     {\n-      q = p->tlink;\n-\n       if (p->gfc_new)\n \t{\n \t  /* Symbol was new.  */\n@@ -3012,18 +2997,10 @@ gfc_undo_symbols (void)\n \n       free (p->old_symbol);\n       p->old_symbol = NULL;\n-      p->tlink = NULL;\n     }\n \n-  changed_syms = NULL;\n-\n-  for (tbp = tentative_tbp_list; tbp; tbp = tbq)\n-    {\n-      tbq = tbp->next;\n-      /* Procedure is already marked `error' by default.  */\n-      free (tbp);\n-    }\n-  tentative_tbp_list = NULL;\n+  latest_undo_chgset->syms.truncate (0);\n+  latest_undo_chgset->tbps.truncate (0);\n }\n \n \n@@ -3060,26 +3037,21 @@ free_old_symbol (gfc_symbol *sym)\n void\n gfc_commit_symbols (void)\n {\n-  gfc_symbol *p, *q;\n-  tentative_tbp *tbp, *tbq;\n+  gfc_symbol *p;\n+  gfc_typebound_proc *tbp;\n+  unsigned i;\n \n-  for (p = changed_syms; p; p = q)\n+  FOR_EACH_VEC_ELT (latest_undo_chgset->syms, i, p)\n     {\n-      q = p->tlink;\n-      p->tlink = NULL;\n       p->mark = 0;\n       p->gfc_new = 0;\n       free_old_symbol (p);\n     }\n-  changed_syms = NULL;\n+  latest_undo_chgset->syms.truncate (0);\n \n-  for (tbp = tentative_tbp_list; tbp; tbp = tbq)\n-    {\n-      tbq = tbp->next;\n-      tbp->proc->error = 0;\n-      free (tbp);\n-    }\n-  tentative_tbp_list = NULL;\n+  FOR_EACH_VEC_ELT (latest_undo_chgset->tbps, i, tbp)\n+    tbp->error = 0;\n+  latest_undo_chgset->tbps.truncate (0);\n }\n \n \n@@ -3090,20 +3062,15 @@ void\n gfc_commit_symbol (gfc_symbol *sym)\n {\n   gfc_symbol *p;\n+  unsigned i;\n \n-  if (changed_syms == sym)\n-    changed_syms = sym->tlink;\n-  else\n-    {\n-      for (p = changed_syms; p; p = p->tlink)\n-        if (p->tlink == sym)\n-          {\n-            p->tlink = sym->tlink;\n-            break;\n-          }\n-    }\n+  FOR_EACH_VEC_ELT (latest_undo_chgset->syms, i, p)\n+    if (p == sym)\n+      {\n+\tlatest_undo_chgset->syms.unordered_remove (i);\n+\tbreak;\n+      }\n \n-  sym->tlink = NULL;\n   sym->mark = 0;\n   sym->gfc_new = 0;\n \n@@ -3548,7 +3515,7 @@ gfc_save_all (gfc_namespace *ns)\n void\n gfc_enforce_clean_symbol_state(void)\n {\n-  gcc_assert (changed_syms == NULL);\n+  gcc_assert (latest_undo_chgset->syms.is_empty ());\n }\n \n \n@@ -4709,17 +4676,13 @@ gfc_typebound_proc*\n gfc_get_typebound_proc (gfc_typebound_proc *tb0)\n {\n   gfc_typebound_proc *result;\n-  tentative_tbp *list_node;\n \n   result = XCNEW (gfc_typebound_proc);\n   if (tb0)\n     *result = *tb0;\n   result->error = 1;\n \n-  list_node = XCNEW (tentative_tbp);\n-  list_node->next = tentative_tbp_list;\n-  list_node->proc = result;\n-  tentative_tbp_list = list_node;\n+  latest_undo_chgset->tbps.safe_push (result);\n \n   return result;\n }"}]}