{"sha": "0f363a3b8c00a0632195824755d7f8b6cfc245a7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MGYzNjNhM2I4YzAwYTA2MzIxOTU4MjQ3NTVkN2Y4YjZjZmMyNDVhNw==", "commit": {"author": {"name": "Thomas Koenig", "email": "Thomas.Koenig@online.de", "date": "2005-06-28T21:57:45Z"}, "committer": {"name": "Thomas Koenig", "email": "tkoenig@gcc.gnu.org", "date": "2005-06-28T21:57:45Z"}, "message": "re PR libfortran/22142 ([4.0 only] eoshift: boundary not filled in correctly)\n\n2005-06-28  Thomas Koenig  <Thomas.Koenig@online.de>\n\n        PR libfortran/22142\n        * m4/eoshift3.m4:  Correct bstride (it needs to be multiplied\n        by size since it's a char pointer).\n        * m4/eoshift3_4.c:  Regenerated.\n        * m4/eoshift3_8.c:  Regenerated.\n\n2005-06-28  Thomas Koenig  <Thomas.Koenig@online.de>\n\n        PR libfortran/22142\n        * gfortran.fortran-torture/execute/intrinsic_eoshift.f90:\n        Add testcase for PR 22142.\n\nFrom-SVN: r101392", "tree": {"sha": "73edcbbab941b2ce61c7ae3dd60972e8bc5a6c4e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/73edcbbab941b2ce61c7ae3dd60972e8bc5a6c4e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0f363a3b8c00a0632195824755d7f8b6cfc245a7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0f363a3b8c00a0632195824755d7f8b6cfc245a7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0f363a3b8c00a0632195824755d7f8b6cfc245a7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0f363a3b8c00a0632195824755d7f8b6cfc245a7/comments", "author": null, "committer": null, "parents": [{"sha": "4de67c26feb1b3535451df4e3bd10b7386029f02", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4de67c26feb1b3535451df4e3bd10b7386029f02", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4de67c26feb1b3535451df4e3bd10b7386029f02"}], "stats": {"total": 28, "additions": 25, "deletions": 3}, "files": [{"sha": "dfed3d3beb73d0eb0cc2d9ab027c8d93348c9de2", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0f363a3b8c00a0632195824755d7f8b6cfc245a7/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0f363a3b8c00a0632195824755d7f8b6cfc245a7/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=0f363a3b8c00a0632195824755d7f8b6cfc245a7", "patch": "@@ -1,3 +1,9 @@\n+2005-06-28  Thomas Koenig  <Thomas.Koenig@online.de>\n+\n+        PR libfortran/22142\n+\t* gfortran.fortran-torture/execute/intrinsic_eoshift.f90:\n+\tAdd testcase for PR 22142.\n+\n 2005-06-28  Joseph S. Myers  <joseph@codesourcery.com>\n \n \t* g++.dg/ext/fpreg1.C, gcc.target/ia64/fpreg-1.c,"}, {"sha": "a607baa5ba5e2f00f873fd3ff5d2d4d4fbf88756", "filename": "gcc/testsuite/gfortran.fortran-torture/execute/intrinsic_eoshift.f90", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0f363a3b8c00a0632195824755d7f8b6cfc245a7/gcc%2Ftestsuite%2Fgfortran.fortran-torture%2Fexecute%2Fintrinsic_eoshift.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0f363a3b8c00a0632195824755d7f8b6cfc245a7/gcc%2Ftestsuite%2Fgfortran.fortran-torture%2Fexecute%2Fintrinsic_eoshift.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.fortran-torture%2Fexecute%2Fintrinsic_eoshift.f90?ref=0f363a3b8c00a0632195824755d7f8b6cfc245a7", "patch": "@@ -2,6 +2,7 @@\n program intrinsic_eoshift\n    integer, dimension(3, 3) :: a\n    integer, dimension(3, 3, 2) :: b\n+   integer, dimension(3) :: bo, sh\n \n    ! Scalar shift and scalar bound.\n    a = reshape ((/1, 2, 3, 4, 5, 6, 7, 8, 9/), (/3, 3/))\n@@ -47,6 +48,13 @@ program intrinsic_eoshift\n    if (any (a .ne. reshape ((/7, -1, 3, 99, -1, 6, 99, 2, 9/), (/3, 3/)))) &\n       call abort\n \n+   a = reshape ((/1, 2, 3, 4, 5, 6, 7, 8, 9/), (/3, 3/))\n+   sh = (/ 3, -1, -3 /)\n+   bo = (/-999, -99, -9 /)\n+   a = eoshift(a, shift=sh, boundary=bo)\n+   if (any (a .ne. reshape ((/ -999, -999, -999, -99, 4, 5, -9, -9, -9 /), &\n+        shape(a)))) call abort\n+\n    ! Test arrays > rank 2\n    b(:, :, 1) = reshape ((/1, 2, 3, 4, 5, 6, 7, 8, 9/), (/3, 3/))\n    b(:, :, 2) = 10 + reshape ((/1, 2, 3, 4, 5, 6, 7, 8, 9/), (/3, 3/))"}, {"sha": "f7c2d5c3617af48c83a17e5ef269b897c26b7765", "filename": "libgfortran/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0f363a3b8c00a0632195824755d7f8b6cfc245a7/libgfortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0f363a3b8c00a0632195824755d7f8b6cfc245a7/libgfortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2FChangeLog?ref=0f363a3b8c00a0632195824755d7f8b6cfc245a7", "patch": "@@ -1,3 +1,11 @@\n+2005-06-28  Thomas Koenig  <Thomas.Koenig@online.de>\n+\n+\tPR libfortran/22142\n+\t* m4/eoshift3.m4:  Correct bstride (it needs to be multiplied\n+\tby size since it's a char pointer).\n+\t* m4/eoshift3_4.c:  Regenerated.\n+\t* m4/eoshift3_8.c:  Regenerated.\n+\n 2005-06-28  Francois-Xavier Coudert  <coudert@clipper.ens.fr>\n \n \tPR libfortran/22170"}, {"sha": "4ce66a3059ada10db42e3da968c04937bc9bdb46", "filename": "libgfortran/generated/eoshift3_4.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0f363a3b8c00a0632195824755d7f8b6cfc245a7/libgfortran%2Fgenerated%2Feoshift3_4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0f363a3b8c00a0632195824755d7f8b6cfc245a7/libgfortran%2Fgenerated%2Feoshift3_4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Feoshift3_4.c?ref=0f363a3b8c00a0632195824755d7f8b6cfc245a7", "patch": "@@ -135,7 +135,7 @@ eoshift3_4 (gfc_array_char *ret, gfc_array_char *array,\n \n           hstride[n] = h->dim[n].stride;\n           if (bound)\n-            bstride[n] = bound->dim[n].stride;\n+            bstride[n] = bound->dim[n].stride * size;\n           else\n             bstride[n] = 0;\n           n++;"}, {"sha": "7e9b911b1a6b8f8ebb7a152bda30fae514b4f586", "filename": "libgfortran/generated/eoshift3_8.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0f363a3b8c00a0632195824755d7f8b6cfc245a7/libgfortran%2Fgenerated%2Feoshift3_8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0f363a3b8c00a0632195824755d7f8b6cfc245a7/libgfortran%2Fgenerated%2Feoshift3_8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Feoshift3_8.c?ref=0f363a3b8c00a0632195824755d7f8b6cfc245a7", "patch": "@@ -135,7 +135,7 @@ eoshift3_8 (gfc_array_char *ret, gfc_array_char *array,\n \n           hstride[n] = h->dim[n].stride;\n           if (bound)\n-            bstride[n] = bound->dim[n].stride;\n+            bstride[n] = bound->dim[n].stride * size;\n           else\n             bstride[n] = 0;\n           n++;"}, {"sha": "24b21cd1531ceaf05c1f8fcd2835ffd6c65c284a", "filename": "libgfortran/m4/eoshift3.m4", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0f363a3b8c00a0632195824755d7f8b6cfc245a7/libgfortran%2Fm4%2Feoshift3.m4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0f363a3b8c00a0632195824755d7f8b6cfc245a7/libgfortran%2Fm4%2Feoshift3.m4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fm4%2Feoshift3.m4?ref=0f363a3b8c00a0632195824755d7f8b6cfc245a7", "patch": "@@ -136,7 +136,7 @@ eoshift3_`'atype_kind (gfc_array_char *ret, gfc_array_char *array,\n \n           hstride[n] = h->dim[n].stride;\n           if (bound)\n-            bstride[n] = bound->dim[n].stride;\n+            bstride[n] = bound->dim[n].stride * size;\n           else\n             bstride[n] = 0;\n           n++;"}]}