{"sha": "660dca797a8202336a5510ee27a971dda8832ba6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjYwZGNhNzk3YTgyMDIzMzZhNTUxMGVlMjdhOTcxZGRhODgzMmJhNg==", "commit": {"author": {"name": "Paolo Carlini", "email": "paolo.carlini@oracle.com", "date": "2013-11-19T15:45:15Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2013-11-19T15:45:15Z"}, "message": "string_view (_S_max_size): Remove.\n\n2013-11-19  Paolo Carlini  <paolo.carlini@oracle.com>\n\n\t* include/experimental/string_view (_S_max_size): Remove.\n\t(basic_string_view<>::max_size): Adjust.\n\t* testsuite/experimental/string_view/capacity/1.cc: Clean-up.\n\t* testsuite/experimental/string_view/inserters/pod/10081-out.cc:\n\tLikewise.\n\nFrom-SVN: r205033", "tree": {"sha": "767d5dfee63949358a4ffeccf1c91cf91e493b5e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/767d5dfee63949358a4ffeccf1c91cf91e493b5e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/660dca797a8202336a5510ee27a971dda8832ba6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/660dca797a8202336a5510ee27a971dda8832ba6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/660dca797a8202336a5510ee27a971dda8832ba6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/660dca797a8202336a5510ee27a971dda8832ba6/comments", "author": null, "committer": null, "parents": [{"sha": "f0bd40b1a70966c2b6ff37cec3e34381c254c25c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f0bd40b1a70966c2b6ff37cec3e34381c254c25c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f0bd40b1a70966c2b6ff37cec3e34381c254c25c"}], "stats": {"total": 34, "additions": 12, "deletions": 22}, "files": [{"sha": "946b67f8cfc264538b9083c7a2dd12375253b6c5", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/660dca797a8202336a5510ee27a971dda8832ba6/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/660dca797a8202336a5510ee27a971dda8832ba6/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=660dca797a8202336a5510ee27a971dda8832ba6", "patch": "@@ -1,3 +1,11 @@\n+2013-11-19  Paolo Carlini  <paolo.carlini@oracle.com>\n+\n+\t* include/experimental/string_view (_S_max_size): Remove.\n+\t(basic_string_view<>::max_size): Adjust.\n+\t* testsuite/experimental/string_view/capacity/1.cc: Clean-up.\n+\t* testsuite/experimental/string_view/inserters/pod/10081-out.cc:\n+\tLikewise.\n+\n 2013-11-19  Jonathan Wakely  <jwakely.gcc@gmail.com>\n \n \t* doc/xml/manual/status_cxx2014.xml: Create new table for TS statuses."}, {"sha": "6a95e8d0bd0ba38a5f23a5c9113b8a48079adda5", "filename": "libstdc++-v3/include/experimental/string_view", "status": "modified", "additions": 4, "deletions": 8, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/660dca797a8202336a5510ee27a971dda8832ba6/libstdc%2B%2B-v3%2Finclude%2Fexperimental%2Fstring_view", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/660dca797a8202336a5510ee27a971dda8832ba6/libstdc%2B%2B-v3%2Finclude%2Fexperimental%2Fstring_view", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fexperimental%2Fstring_view?ref=660dca797a8202336a5510ee27a971dda8832ba6", "patch": "@@ -98,7 +98,8 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n       constexpr basic_string_view(const basic_string_view&) noexcept = default;\n \n       template<typename _Allocator>\n-        basic_string_view(const basic_string<_CharT, _Traits, _Allocator>& __str) noexcept\n+        basic_string_view(const basic_string<_CharT, _Traits,\n+\t\t\t  _Allocator>& __str) noexcept\n         : _M_len{__str.length()}, _M_str{__str.data()}\n         { }\n \n@@ -159,7 +160,8 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \n       constexpr size_type\n       max_size() const noexcept\n-      { return _S_max_size; }\n+      { return ((npos - sizeof(size_type) - sizeof(void*))\n+\t\t/ sizeof(value_type) / 4); }\n \n       constexpr bool\n       empty() const noexcept\n@@ -406,12 +408,6 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n       }\n \n     private:\n-\n-      //  Compute max_size similarly to how string does it.\n-      static const size_type _S_max_size = (npos\n-\t\t\t\t\t  - sizeof(size_type) - sizeof(void*))\n-\t\t\t\t\t / sizeof(value_type) / 4;\n-\n       static constexpr const int\n       _S_compare(size_type __n1, size_type __n2) noexcept\n       {"}, {"sha": "0f09fe89dd69cec9e920c27543df10e9f881e676", "filename": "libstdc++-v3/testsuite/experimental/string_view/capacity/1.cc", "status": "modified", "additions": 0, "deletions": 7, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/660dca797a8202336a5510ee27a971dda8832ba6/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Fstring_view%2Fcapacity%2F1.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/660dca797a8202336a5510ee27a971dda8832ba6/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Fstring_view%2Fcapacity%2F1.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Fstring_view%2Fcapacity%2F1.cc?ref=660dca797a8202336a5510ee27a971dda8832ba6", "patch": "@@ -155,13 +155,6 @@ test01()\n   VERIFY( sz03 >= sz04 );\n }\n \n-#if !__GXX_WEAK__\n-// Explicitly instantiate for systems with no COMDAT or weak support.\n-template \n-  const std::experimental::basic_string_view<A<B>>::size_type \n-  std::experimental::basic_string_view<A<B>>::_S_max_size;\n-#endif\n-\n int\n main()\n {"}, {"sha": "b976d6f441bda24130cfd2876b27fa7ef00f9543", "filename": "libstdc++-v3/testsuite/experimental/string_view/inserters/pod/10081-out.cc", "status": "modified", "additions": 0, "deletions": 7, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/660dca797a8202336a5510ee27a971dda8832ba6/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Fstring_view%2Finserters%2Fpod%2F10081-out.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/660dca797a8202336a5510ee27a971dda8832ba6/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Fstring_view%2Finserters%2Fpod%2F10081-out.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Fstring_view%2Finserters%2Fpod%2F10081-out.cc?ref=660dca797a8202336a5510ee27a971dda8832ba6", "patch": "@@ -68,13 +68,6 @@ test01()\n     }\n }\n \n-#if !__GXX_WEAK__\n-// Explicitly instantiate for systems with no COMDAT or weak support.\n-template \n-  const std::experimental::basic_string_view<__gnu_test::pod_ushort>::size_type \n-  std::experimental::basic_string_view_view<__gnu_test::pod_ushort>::_S_max_size;\n-#endif\n-\n int\n main()\n {"}]}