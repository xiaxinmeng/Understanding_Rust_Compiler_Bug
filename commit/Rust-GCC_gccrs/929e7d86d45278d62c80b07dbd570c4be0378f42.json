{"sha": "929e7d86d45278d62c80b07dbd570c4be0378f42", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTI5ZTdkODZkNDUyNzhkNjJjODBiMDdkYmQ1NzBjNGJlMDM3OGY0Mg==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1995-09-12T22:24:53Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1995-09-12T22:24:53Z"}, "message": "Changed precedence of libraries to look for libfoo.lib before libfoo.a.\n\nChanged to work like Gnu ld for NT.\n\nFrom-SVN: r10336", "tree": {"sha": "c9b0d4e9840bb6b4076972561fd066b7ffb341db", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c9b0d4e9840bb6b4076972561fd066b7ffb341db"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/929e7d86d45278d62c80b07dbd570c4be0378f42", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/929e7d86d45278d62c80b07dbd570c4be0378f42", "html_url": "https://github.com/Rust-GCC/gccrs/commit/929e7d86d45278d62c80b07dbd570c4be0378f42", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/929e7d86d45278d62c80b07dbd570c4be0378f42/comments", "author": null, "committer": null, "parents": [{"sha": "d62216b7ca401d982a375622f9b6eedfe18d51e3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d62216b7ca401d982a375622f9b6eedfe18d51e3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d62216b7ca401d982a375622f9b6eedfe18d51e3"}], "stats": {"total": 89, "additions": 73, "deletions": 16}, "files": [{"sha": "c47a5511288e51997c1ae7f8ab11913d9b9e01f7", "filename": "gcc/config/winnt/ld.c", "status": "modified", "additions": 73, "deletions": 16, "changes": 89, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/929e7d86d45278d62c80b07dbd570c4be0378f42/gcc%2Fconfig%2Fwinnt%2Fld.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/929e7d86d45278d62c80b07dbd570c4be0378f42/gcc%2Fconfig%2Fwinnt%2Fld.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fwinnt%2Fld.c?ref=929e7d86d45278d62c80b07dbd570c4be0378f42", "patch": "@@ -27,6 +27,9 @@ Boston, MA 02111-1307, USA.  */\n #include <string.h>\n #include <process.h>\n \n+static char *concat ();\n+static char *concat3 ();\n+\n /* These can be set by command line arguments */\n char *linker_path = 0;\n int verbose = 0;\n@@ -119,29 +122,31 @@ locate_file (file_name, path_val)\n   return 0;\n }\n \n-/* Given a library name in NAME, i.e. foo.  Look first for libfoo.a and then\n-   foo.lib in the set of directories we are allowed to search in */\n+/* Given a library name in NAME, i.e. foo.  Look first for libfoo.lib and then\n+   libfoo.a in the set of directories we are allowed to search in */\n \n static char *\n expand_lib (name)\n      char *name;\n {\n   char *lib, *lib_path;\n \n-  lib = malloc (strlen (name) + 6);\n+  lib = malloc (strlen (name) + 8);\n   strcpy (lib, \"lib\");\n   strcat (lib, name);\n-  strcat (lib, \".a\");\n+  strcat (lib, \".lib\");\n   lib_path = locate_file (lib, search_dirs);\n   if (!lib_path)\n     {\n-      strcpy (lib, name);\n-      strcat (lib, \".lib\");\n+      strcpy (lib, \"lib\");\n+      strcat (lib, name);\n+      strcat (lib, \".a\");\n       lib_path = locate_file (lib, search_dirs);\n       if (!lib_path)\n         {\n-          fprintf (stderr, \n-                   \"Couldn't locate library: lib%s.a or %s.lib\\n\", name, name);\n+          fprintf\n+            (stderr, \n+             \"Couldn't locate library: lib%s.a or lib%s.lib\\n\", name, name);\n           exit (1);\n         }\n     }\n@@ -178,10 +183,27 @@ process_args (p_argc, argv)\n       /* -v turns on verbose option here and is passed on to gcc */\n       if (! strcmp (argv [i], \"-v\"))\n \tverbose = 1;\n+      else if (! strncmp (argv [i], \"-g\", 2))\n+      {\n+        addarg (\"-debugtype:coff -debug:full\");\n+      }\n+      else if (! strncmp (argv [i], \"-stack\", 6))\n+      {\n+        i++;\n+        addarg (concat (\"-stack:\",argv[i]));\n+      }\n       else if (! strncmp (argv [i], \"-subsystem\", 10))\n+      {\n \tsubsystem = 1;\n-      else if (! strncmp (argv [i], \"-entry\", 6))\n+        i++;\n+        addarg (concat (\"-subsystem:\",argv[i]));\n+      }\n+      else if (! strncmp (argv [i], \"-e\", 2))\n+      {\n \tentry = 1;\n+        i++;\n+        addarg (concat (\"-entry:\",&argv[i][1]));\n+      }\n     }\n }\n \n@@ -202,8 +224,6 @@ main (argc, argv)\n   strcpy (tmppathval, \".;\");\n   pathval = strcat (tmppathval, pathval);\n \n-  process_args (&argc , argv);\n-\n   linker_path = locate_file (\"link32.exe\", pathval);\n   if (!linker_path)\n     {\n@@ -216,6 +236,8 @@ main (argc, argv)\n     }\n \n   addarg (linker_path);\n+\n+  process_args (&argc , argv);\n   if (! subsystem) addarg (\"-subsystem:console\");\n   if (! entry) addarg (\"-entry:mainCRTStartup\");\n \n@@ -262,11 +284,24 @@ main (argc, argv)\n \t}\n \n       else if (arg_len > 2 && !strncmp (argv [i], \"-l\", 2))\n-\taddarg (expand_lib (&argv[i][2]));\n-    else if (!strcmp (argv [i], \"-v\")) \n-      ;\n-    else\n-      addarg (argv [i]);\n+        {\n+\t  addarg (expand_lib (&argv[i][2]));\n+        }\n+      else if (!strcmp (argv [i], \"-v\") \n+            || !strcmp (argv [i], \"-noinhibit-exec\"))\n+        {\n+          ;\n+        }\n+      else if (!strcmp (argv [i], \"-stack\")\n+            || !strcmp (argv [i], \"-subsystem\")\n+            || !strcmp (argv [i], \"-e\"))\n+        {\n+          i++;\n+        }\n+      else\n+        {\n+          addarg (argv [i]);\n+        }\n     }\n \n   addarg (NULL);\n@@ -288,3 +323,25 @@ main (argc, argv)\n \n   exit (0);\n }\n+\n+static char *\n+concat (s1, s2)\n+     char *s1, *s2;\n+{\n+  int len1 = strlen (s1);\n+  int len2 = strlen (s2);\n+  char *result = malloc (len1 + len2 + 1);\n+\n+  strcpy (result, s1);\n+  strcpy (result + len1, s2);\n+  *(result + len1 + len2) = 0;\n+\n+  return result;\n+}\n+\n+static char *\n+concat3 (s1, s2, s3)\n+     char *s1, *s2, *s3;\n+{\n+  return concat (concat (s1, s2), s3);\n+}"}]}