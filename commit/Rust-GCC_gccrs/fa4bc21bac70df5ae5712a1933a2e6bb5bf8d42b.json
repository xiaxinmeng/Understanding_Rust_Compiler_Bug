{"sha": "fa4bc21bac70df5ae5712a1933a2e6bb5bf8d42b", "node_id": "C_kwDOANBUbNoAKGZhNGJjMjFiYWM3MGRmNWFlNTcxMmExOTMzYTJlNmJiNWJmOGQ0MmI", "commit": {"author": {"name": "Lulu Cheng", "email": "chenglulu@loongson.cn", "date": "2022-09-26T01:42:51Z"}, "committer": {"name": "Lulu Cheng", "email": "chenglulu@loongson.cn", "date": "2022-09-28T07:02:14Z"}, "message": "LoongArch: Libitm add LoongArch support.\n\nCo-Authored-By: Yang Yujie <yangyujie@loongson.cn>\n\nlibitm/ChangeLog:\n\n\t* configure.tgt: Add loongarch support.\n\t* config/loongarch/asm.h: New file.\n\t* config/loongarch/sjlj.S: New file.\n\t* config/loongarch/target.h: New file.", "tree": {"sha": "1e48a884c72997b545ebe151999b18fa9fa7b55c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1e48a884c72997b545ebe151999b18fa9fa7b55c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/fa4bc21bac70df5ae5712a1933a2e6bb5bf8d42b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fa4bc21bac70df5ae5712a1933a2e6bb5bf8d42b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fa4bc21bac70df5ae5712a1933a2e6bb5bf8d42b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fa4bc21bac70df5ae5712a1933a2e6bb5bf8d42b/comments", "author": {"login": "chenglulu326", "id": 88083425, "node_id": "MDQ6VXNlcjg4MDgzNDI1", "avatar_url": "https://avatars.githubusercontent.com/u/88083425?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chenglulu326", "html_url": "https://github.com/chenglulu326", "followers_url": "https://api.github.com/users/chenglulu326/followers", "following_url": "https://api.github.com/users/chenglulu326/following{/other_user}", "gists_url": "https://api.github.com/users/chenglulu326/gists{/gist_id}", "starred_url": "https://api.github.com/users/chenglulu326/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chenglulu326/subscriptions", "organizations_url": "https://api.github.com/users/chenglulu326/orgs", "repos_url": "https://api.github.com/users/chenglulu326/repos", "events_url": "https://api.github.com/users/chenglulu326/events{/privacy}", "received_events_url": "https://api.github.com/users/chenglulu326/received_events", "type": "User", "site_admin": false}, "committer": {"login": "chenglulu326", "id": 88083425, "node_id": "MDQ6VXNlcjg4MDgzNDI1", "avatar_url": "https://avatars.githubusercontent.com/u/88083425?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chenglulu326", "html_url": "https://github.com/chenglulu326", "followers_url": "https://api.github.com/users/chenglulu326/followers", "following_url": "https://api.github.com/users/chenglulu326/following{/other_user}", "gists_url": "https://api.github.com/users/chenglulu326/gists{/gist_id}", "starred_url": "https://api.github.com/users/chenglulu326/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chenglulu326/subscriptions", "organizations_url": "https://api.github.com/users/chenglulu326/orgs", "repos_url": "https://api.github.com/users/chenglulu326/repos", "events_url": "https://api.github.com/users/chenglulu326/events{/privacy}", "received_events_url": "https://api.github.com/users/chenglulu326/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a25982ada523689c8745d7fb4b1b93c8f5dab2e7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a25982ada523689c8745d7fb4b1b93c8f5dab2e7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a25982ada523689c8745d7fb4b1b93c8f5dab2e7"}], "stats": {"total": 233, "additions": 233, "deletions": 0}, "files": [{"sha": "a8e3304bb19b4c8f8b013a3ad61065df797e20d8", "filename": "libitm/config/loongarch/asm.h", "status": "added", "additions": 54, "deletions": 0, "changes": 54, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fa4bc21bac70df5ae5712a1933a2e6bb5bf8d42b/libitm%2Fconfig%2Floongarch%2Fasm.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fa4bc21bac70df5ae5712a1933a2e6bb5bf8d42b/libitm%2Fconfig%2Floongarch%2Fasm.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libitm%2Fconfig%2Floongarch%2Fasm.h?ref=fa4bc21bac70df5ae5712a1933a2e6bb5bf8d42b", "patch": "@@ -0,0 +1,54 @@\n+/* Copyright (C) 2022 Free Software Foundation, Inc.\n+   Contributed by Loongson Co. Ltd.\n+\n+   This file is part of the GNU Transactional Memory Library (libitm).\n+\n+   Libitm is free software; you can redistribute it and/or modify it\n+   under the terms of the GNU General Public License as published by\n+   the Free Software Foundation; either version 3 of the License, or\n+   (at your option) any later version.\n+\n+   Libitm is distributed in the hope that it will be useful, but WITHOUT ANY\n+   WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n+   FOR A PARTICULAR PURPOSE.  See the GNU General Public License for\n+   more details.\n+\n+   Under Section 7 of GPL version 3, you are granted additional\n+   permissions described in the GCC Runtime Library Exception, version\n+   3.1, as published by the Free Software Foundation.\n+\n+   You should have received a copy of the GNU General Public License and\n+   a copy of the GCC Runtime Library Exception along with this program;\n+   see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n+   <http://www.gnu.org/licenses/>.  */\n+\n+#ifndef _LA_ASM_H\n+#define _LA_ASM_H\n+\n+#if defined(__loongarch_lp64)\n+#  define GPR_L ld.d\n+#  define GPR_S st.d\n+#  define SZ_GPR 8\n+#  define ADDSP(si)   addi.d  $sp, $sp, si\n+#elif defined(__loongarch64_ilp32)\n+#  define GPR_L ld.w\n+#  define GPR_S st.w\n+#  define SZ_GPR 4\n+#  define ADDSP(si)   addi.w  $sp, $sp, si\n+#else\n+#  error Unsupported GPR size (must be 64-bit or 32-bit).\n+#endif\n+\n+#if defined(__loongarch_double_float)\n+#  define FPR_L fld.d\n+#  define FPR_S fst.d\n+#  define SZ_FPR 8\n+#elif defined(__loongarch_single_float)\n+#  define FPR_L fld.s\n+#  define FPR_S fst.s\n+#  define SZ_FPR 4\n+#else\n+#  define SZ_FPR 0\n+#endif\n+\n+#endif  /* _LA_ASM_H */"}, {"sha": "a5f9fadde34c72c743f303bda9c806208639260a", "filename": "libitm/config/loongarch/sjlj.S", "status": "added", "additions": 127, "deletions": 0, "changes": 127, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fa4bc21bac70df5ae5712a1933a2e6bb5bf8d42b/libitm%2Fconfig%2Floongarch%2Fsjlj.S", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fa4bc21bac70df5ae5712a1933a2e6bb5bf8d42b/libitm%2Fconfig%2Floongarch%2Fsjlj.S", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libitm%2Fconfig%2Floongarch%2Fsjlj.S?ref=fa4bc21bac70df5ae5712a1933a2e6bb5bf8d42b", "patch": "@@ -0,0 +1,127 @@\n+/* Copyright (C) 2022 Free Software Foundation, Inc.\n+   Contributed by Loongson Co. Ltd.\n+\n+   This file is part of the GNU Transactional Memory Library (libitm).\n+\n+   Libitm is free software; you can redistribute it and/or modify it\n+   under the terms of the GNU General Public License as published by\n+   the Free Software Foundation; either version 3 of the License, or\n+   (at your option) any later version.\n+\n+   Libitm is distributed in the hope that it will be useful, but WITHOUT ANY\n+   WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n+   FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.\n+\n+   Under Section 7 of GPL version 3, you are granted additional\n+   permissions described in the GCC Runtime Library Exception, version\n+   3.1, as published by the Free Software Foundation.\n+\n+   You should have received a copy of the GNU General Public License and\n+   a copy of the GCC Runtime Library Exception along with this program;\n+   see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n+   <http://www.gnu.org/licenses/>.  */\n+\n+#include \"asmcfi.h\"\n+#include \"asm.h\"\n+\n+\t.text\n+\t.align\t2\n+\t.global\t_ITM_beginTransaction\n+\t.type\t_ITM_beginTransaction, @function\n+\n+_ITM_beginTransaction:\n+        cfi_startproc\n+        move   $r5, $sp\n+        ADDSP(-(12*SZ_GPR+8*SZ_FPR))\n+        cfi_adjust_cfa_offset(12*SZ_GPR+8*SZ_FPR)\n+\n+        /* Frame Pointer */\n+        GPR_S  $fp, $sp, 0*SZ_GPR\n+        cfi_rel_offset(22, 0)\n+\n+        /* Return Address */\n+        GPR_S  $r1, $sp, 1*SZ_GPR\n+        cfi_rel_offset(1, SZ_GPR)\n+\n+        /* Caller's $sp */\n+        GPR_S  $r5, $sp, 2*SZ_GPR\n+\n+        /* Callee-saved scratch GPRs (r23-r31) */\n+        GPR_S  $s0, $sp, 3*SZ_GPR\n+        GPR_S  $s1, $sp, 4*SZ_GPR\n+        GPR_S  $s2, $sp, 5*SZ_GPR\n+        GPR_S  $s3, $sp, 6*SZ_GPR\n+        GPR_S  $s4, $sp, 7*SZ_GPR\n+        GPR_S  $s5, $sp, 8*SZ_GPR\n+        GPR_S  $s6, $sp, 9*SZ_GPR\n+        GPR_S  $s7, $sp, 10*SZ_GPR\n+        GPR_S  $s8, $sp, 11*SZ_GPR\n+\n+#if !defined(__loongarch_soft_float)\n+        /* Callee-saved scratch FPRs (f24-f31) */\n+        FPR_S  $f24, $sp, 12*SZ_GPR + 0*SZ_FPR\n+        FPR_S  $f25, $sp, 12*SZ_GPR + 1*SZ_FPR\n+        FPR_S  $f26, $sp, 12*SZ_GPR + 2*SZ_FPR\n+        FPR_S  $f27, $sp, 12*SZ_GPR + 3*SZ_FPR\n+        FPR_S  $f28, $sp, 12*SZ_GPR + 4*SZ_FPR\n+        FPR_S  $f29, $sp, 12*SZ_GPR + 5*SZ_FPR\n+        FPR_S  $f30, $sp, 12*SZ_GPR + 6*SZ_FPR\n+        FPR_S  $f31, $sp, 12*SZ_GPR + 7*SZ_FPR\n+#endif\n+        move   $fp, $sp\n+\n+        /* Invoke GTM_begin_transaction with the struct we've just built.  */\n+        move   $r5, $sp\n+        bl     %plt(GTM_begin_transaction)\n+\n+        /* Return. (no call-saved scratch reg needs to be restored here)  */\n+        GPR_L  $fp, $sp, 0*SZ_GPR\n+        cfi_restore(22)\n+        GPR_L  $r1, $sp, 1*SZ_GPR\n+        cfi_restore(1)\n+\n+        ADDSP(12*SZ_GPR+8*SZ_FPR)\n+        cfi_adjust_cfa_offset(-(12*SZ_GPR+8*SZ_FPR))\n+\n+        jr     $r1\n+        cfi_endproc\n+\t.size\t_ITM_beginTransaction, . - _ITM_beginTransaction\n+\n+\t.align\t2\n+\t.global\tGTM_longjmp\n+\t.hidden\tGTM_longjmp\n+\t.type\tGTM_longjmp, @function\n+\n+GTM_longjmp:\n+        cfi_startproc\n+        GPR_L  $s0, $r5, 3*SZ_GPR\n+        GPR_L  $s1, $r5, 4*SZ_GPR\n+        GPR_L  $s2, $r5, 5*SZ_GPR\n+        GPR_L  $s3, $r5, 6*SZ_GPR\n+        GPR_L  $s4, $r5, 7*SZ_GPR\n+        GPR_L  $s5, $r5, 8*SZ_GPR\n+        GPR_L  $s6, $r5, 9*SZ_GPR\n+        GPR_L  $s7, $r5, 10*SZ_GPR\n+        GPR_L  $s8, $r5, 11*SZ_GPR\n+\n+        FPR_L  $f24, $r5, 12*SZ_GPR + 0*SZ_FPR\n+        FPR_L  $f25, $r5, 12*SZ_GPR + 1*SZ_FPR\n+        FPR_L  $f26, $r5, 12*SZ_GPR + 2*SZ_FPR\n+        FPR_L  $f27, $r5, 12*SZ_GPR + 3*SZ_FPR\n+        FPR_L  $f28, $r5, 12*SZ_GPR + 4*SZ_FPR\n+        FPR_L  $f29, $r5, 12*SZ_GPR + 5*SZ_FPR\n+        FPR_L  $f30, $r5, 12*SZ_GPR + 6*SZ_FPR\n+        FPR_L  $f31, $r5, 12*SZ_GPR + 7*SZ_FPR\n+\n+        GPR_L  $r7, $r5, 2*SZ_GPR\n+        GPR_L  $fp, $r5, 0*SZ_GPR\n+        GPR_L  $r1, $r5, 1*SZ_GPR\n+        cfi_def_cfa(5, 0)\n+        move   $sp, $r7\n+        jr     $r1\n+        cfi_endproc\n+\t.size\tGTM_longjmp, . - GTM_longjmp\n+\n+#ifdef __linux__\n+.section .note.GNU-stack, \"\", @progbits\n+#endif"}, {"sha": "0c5cf3ada57e7f6444e9508f538348f8f51492a0", "filename": "libitm/config/loongarch/target.h", "status": "added", "additions": 50, "deletions": 0, "changes": 50, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fa4bc21bac70df5ae5712a1933a2e6bb5bf8d42b/libitm%2Fconfig%2Floongarch%2Ftarget.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fa4bc21bac70df5ae5712a1933a2e6bb5bf8d42b/libitm%2Fconfig%2Floongarch%2Ftarget.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libitm%2Fconfig%2Floongarch%2Ftarget.h?ref=fa4bc21bac70df5ae5712a1933a2e6bb5bf8d42b", "patch": "@@ -0,0 +1,50 @@\n+/* Copyright (C) 2022 Free Software Foundation, Inc.\n+   Contributed by Loongson Co. Ltd.\n+\n+   This file is part of the GNU Transactional Memory Library (libitm).\n+\n+   Libitm is free software; you can redistribute it and/or modify it\n+   under the terms of the GNU General Public License as published by\n+   the Free Software Foundation; either version 3 of the License, or\n+   (at your option) any later version.\n+\n+   Libitm is distributed in the hope that it will be useful, but WITHOUT ANY\n+   WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n+   FOR A PARTICULAR PURPOSE.  See the GNU General Public License for\n+   more details.\n+\n+   Under Section 7 of GPL version 3, you are granted additional\n+   permissions described in the GCC Runtime Library Exception, version\n+   3.1, as published by the Free Software Foundation.\n+\n+   You should have received a copy of the GNU General Public License and\n+   a copy of the GCC Runtime Library Exception along with this program;\n+   see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n+   <http://www.gnu.org/licenses/>.  */\n+\n+namespace GTM HIDDEN {\n+\n+typedef struct gtm_jmpbuf\n+  {\n+    long int fp;        /* Frame Pointer: r22 */\n+    long int pc;        /* Return Address: r1 */\n+    void *cfa;          /* CFA: r3 */\n+    long int gpr[9];\t/* Callee-saved scratch GPRs: r23(s0)-r31(s8) */\n+\n+    /* Callee-saved scratch FPRs: f24-f31 */\n+#if defined(__loongarch_double_float)\n+    double fpr[8];\n+#elif defined(__loongarch_single_float)\n+    float fpr[8];\n+#endif\n+  } gtm_jmpbuf;\n+\n+#define HW_CACHELINE_SIZE 128\n+\n+static inline void\n+cpu_relax (void)\n+{\n+    __asm__ volatile (\"\" : : : \"memory\");\n+}\n+\n+} // namespace GTM"}, {"sha": "4c0e78cff42581550a9c6144d88e7164d704f5ce", "filename": "libitm/configure.tgt", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fa4bc21bac70df5ae5712a1933a2e6bb5bf8d42b/libitm%2Fconfigure.tgt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fa4bc21bac70df5ae5712a1933a2e6bb5bf8d42b/libitm%2Fconfigure.tgt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libitm%2Fconfigure.tgt?ref=fa4bc21bac70df5ae5712a1933a2e6bb5bf8d42b", "patch": "@@ -80,6 +80,8 @@ EOF\n \tARCH=x86\n \t;;\n \n+  loongarch*)   ARCH=loongarch ;;\n+\n   sh*)\t\tARCH=sh ;;\n \n   sparc)"}]}