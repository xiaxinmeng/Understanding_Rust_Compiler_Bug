{"sha": "b0106b246343c3f176fee2176133bd1a929f16e9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjAxMDZiMjQ2MzQzYzNmMTc2ZmVlMjE3NjEzM2JkMWE5MjlmMTZlOQ==", "commit": {"author": {"name": "Kaveh R. Ghazi", "email": "ghazi@caip.rutgers.edu", "date": "2000-01-14T23:07:07Z"}, "committer": {"name": "Kaveh Ghazi", "email": "ghazi@gcc.gnu.org", "date": "2000-01-14T23:07:07Z"}, "message": "pdp11-protos.h: New file.\n\n        * pdp11-protos.h: New file.\n\n        * pdp11.c: Include tm_p.h.  Add static prototypes.  Fix compile\n        time warnings.\n\n        * pdp11.h: Move prototypes to pdp11-protos.h.  Fix compile time\n        warnings.\n\n        * pdp11.md: Likewise.\n\n        * 2bsd.h: Likewise.\n\nFrom-SVN: r31429", "tree": {"sha": "0a2aa388838157a89bc8d6e3c188554c0b162723", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0a2aa388838157a89bc8d6e3c188554c0b162723"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b0106b246343c3f176fee2176133bd1a929f16e9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b0106b246343c3f176fee2176133bd1a929f16e9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b0106b246343c3f176fee2176133bd1a929f16e9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b0106b246343c3f176fee2176133bd1a929f16e9/comments", "author": null, "committer": null, "parents": [{"sha": "69bc71fad0e2139696efc00a6864dc46a47bd645", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/69bc71fad0e2139696efc00a6864dc46a47bd645", "html_url": "https://github.com/Rust-GCC/gccrs/commit/69bc71fad0e2139696efc00a6864dc46a47bd645"}], "stats": {"total": 129, "additions": 84, "deletions": 45}, "files": [{"sha": "5fa2424b64fede0ba3fcd9345c6ed414896e1044", "filename": "gcc/ChangeLog", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b0106b246343c3f176fee2176133bd1a929f16e9/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b0106b246343c3f176fee2176133bd1a929f16e9/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=b0106b246343c3f176fee2176133bd1a929f16e9", "patch": "@@ -1,3 +1,17 @@\n+2000-01-14  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n+\n+\t* pdp11-protos.h: New file.\n+\n+\t* pdp11.c: Include tm_p.h.  Add static prototypes.  Fix compile\n+\ttime warnings.\n+\t\n+\t* pdp11.h: Move prototypes to pdp11-protos.h.  Fix compile time\n+\twarnings.\n+\t\n+\t* pdp11.md: Likewise.\n+\n+\t* 2bsd.h: Likewise.\n+\n 2000-01-14  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n \n \t* mn10300-protos.h: New file."}, {"sha": "5b1f0c824cecf41945ee03ef2f017020987a86e0", "filename": "gcc/config/pdp11/2bsd.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b0106b246343c3f176fee2176133bd1a929f16e9/gcc%2Fconfig%2Fpdp11%2F2bsd.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b0106b246343c3f176fee2176133bd1a929f16e9/gcc%2Fconfig%2Fpdp11%2F2bsd.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fpdp11%2F2bsd.h?ref=b0106b246343c3f176fee2176133bd1a929f16e9", "patch": "@@ -1,5 +1,5 @@\n /* Definitions of target machine for GNU compiler, for a PDP with 2BSD\n-   Copyright (C) 1995, 1996, 1999 Free Software Foundation, Inc.\n+   Copyright (C) 1995, 96, 99, 2000 Free Software Foundation, Inc.\n    Contributed by Michael K. Gschwind (mike@vlsivie.tuwien.ac.at).\n \n This file is part of GNU CC.\n@@ -56,7 +56,7 @@ fprintf(FILE, \"\\tjmp cret\\n\");                                    \t\\\n #undef INITIAL_FRAME_POINTER_OFFSET  \n #define INITIAL_FRAME_POINTER_OFFSET(DEPTH_VAR)\t\\\n {\t\t\t\t\t\t\t\t\\\n-  int offset, regno;\t\t      \t\t\t\t\\\n+  int offset;\t\t      \t\t\t\t\\\n   offset = get_frame_size();\t\t\t\t\t\\\n   offset = (offset <= 2)? 0: (offset -2);\t\t\t\\\n   (DEPTH_VAR) = offset+10;\t\t\t\t\t\t\\"}, {"sha": "b062e40a34448716f3bc4fcb994799f86d061941", "filename": "gcc/config/pdp11/pdp11-protos.h", "status": "added", "additions": 45, "deletions": 0, "changes": 45, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b0106b246343c3f176fee2176133bd1a929f16e9/gcc%2Fconfig%2Fpdp11%2Fpdp11-protos.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b0106b246343c3f176fee2176133bd1a929f16e9/gcc%2Fconfig%2Fpdp11%2Fpdp11-protos.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fpdp11%2Fpdp11-protos.h?ref=b0106b246343c3f176fee2176133bd1a929f16e9", "patch": "@@ -0,0 +1,45 @@\n+/* Definitions of target machine for GNU compiler, for the pdp-11\n+   Copyright (C) 2000 Free Software Foundation, Inc.\n+   Contributed by Michael K. Gschwind (mike@vlsivie.tuwien.ac.at).\n+\n+This file is part of GNU CC.\n+\n+GNU CC is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 1, or (at your option)\n+any later version.\n+\n+GNU CC is distributed in the hope that it will be useful,\n+but WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+GNU General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GNU CC; see the file COPYING.  If not, write to\n+the Free Software Foundation, 59 Temple Place - Suite 330,\n+Boston, MA 02111-1307, USA.  */\n+\n+/* declarations */\n+#ifdef RTX_CODE\n+extern int arith_operand PARAMS ((rtx, enum machine_mode));\n+extern int const_immediate_operand PARAMS ((rtx, enum machine_mode));\n+extern int expand_shift_operand PARAMS ((rtx, enum machine_mode));\n+extern int immediate15_operand PARAMS ((rtx, enum machine_mode));\n+extern int simple_memory_operand PARAMS ((rtx, enum machine_mode));\n+extern int comp_operator PARAMS ((rtx, enum machine_mode));\n+\n+extern int legitimate_address_p PARAMS ((enum machine_mode, rtx));\n+extern void notice_update_cc_on_set PARAMS ((rtx, rtx));\n+extern void output_addr_const_pdp11 PARAMS ((FILE *, rtx));\n+extern const char *output_move_double PARAMS ((rtx *));\n+extern const char *output_move_quad PARAMS ((rtx *));\n+extern const char *output_block_move PARAMS ((rtx *));\n+extern void print_operand_address PARAMS ((FILE *, rtx));\n+extern int register_move_cost PARAMS ((enum reg_class, enum reg_class));\n+extern int comparison_operator_index PARAMS ((rtx));\n+#endif /* RTX_CODE */\n+\n+extern void output_ascii PARAMS ((FILE *, const char *, int));\n+extern void output_function_epilogue PARAMS ((FILE *, int));\n+extern void output_function_prologue PARAMS ((FILE *, int));\n+extern const char *output_jump PARAMS ((const char *, const char *, int));"}, {"sha": "26747ff3b7c8f01da959200a1b71014fb42019af", "filename": "gcc/config/pdp11/pdp11.c", "status": "modified", "additions": 19, "deletions": 16, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b0106b246343c3f176fee2176133bd1a929f16e9/gcc%2Fconfig%2Fpdp11%2Fpdp11.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b0106b246343c3f176fee2176133bd1a929f16e9/gcc%2Fconfig%2Fpdp11%2Fpdp11.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fpdp11%2Fpdp11.c?ref=b0106b246343c3f176fee2176133bd1a929f16e9", "patch": "@@ -33,6 +33,7 @@ Boston, MA 02111-1307, USA.  */\n #include \"insn-attr.h\"\n #include \"flags.h\"\n #include \"recog.h\"\n+#include \"tm_p.h\"\n \n /*\n #define FPU_REG_P(X)\t((X)>=8 && (X)<14)\n@@ -46,7 +47,8 @@ int current_first_parm_offset;\n /* This is where the condition code register lives.  */\n /* rtx cc0_reg_rtx; - no longer needed? */\n \n-static rtx find_addr_reg (); \n+static rtx find_addr_reg PARAMS ((rtx)); \n+static const char *singlemove_string PARAMS ((rtx *)); \n \n /* Nonzero if OP is a valid second operand for an arithmetic insn.  */\n \n@@ -61,23 +63,23 @@ arith_operand (op, mode)\n int\n const_immediate_operand (op, mode)\n      rtx op;\n-     enum machine_mode mode;\n+     enum machine_mode mode ATTRIBUTE_UNUSED;\n {\n   return (GET_CODE (op) == CONST_INT);\n }\n \n int \n immediate15_operand (op, mode)\n      rtx op;\n-     enum machine_mode mode;\n+     enum machine_mode mode ATTRIBUTE_UNUSED;\n {\n     return (GET_CODE (op) == CONST_INT && ((INTVAL (op) & 0x8000) == 0x0000));\n }\n \n int\n expand_shift_operand (op, mode)\n   rtx op;\n-  enum machine_mode mode;\n+  enum machine_mode mode ATTRIBUTE_UNUSED;\n {\n     return (GET_CODE (op) == CONST_INT \n \t    && abs (INTVAL(op)) > 1 \n@@ -294,7 +296,7 @@ output_function_epilogue(stream, size)\n \t\n /* Return the best assembler insn template\n    for moving operands[1] into operands[0] as a fullword.  */\n-static char *\n+static const char *\n singlemove_string (operands)\n      rtx *operands;\n {\n@@ -308,7 +310,7 @@ singlemove_string (operands)\n /* Output assembler code to perform a doubleword move insn\n    with operands OPERANDS.  */\n \n-char *\n+const char *\n output_move_double (operands)\n      rtx *operands;\n {\n@@ -486,7 +488,7 @@ output_move_double (operands)\n /* Output assembler code to perform a quadword move insn\n    with operands OPERANDS.  */\n \n-char *\n+const char *\n output_move_quad (operands)\n      rtx *operands;\n {\n@@ -736,7 +738,7 @@ find_addr_reg (addr)\n void\n output_ascii (file, p, size)\n      FILE *file;\n-     char *p;\n+     const char *p;\n      int size;\n {\n   int i;\n@@ -915,10 +917,10 @@ register_move_cost(c1, c2)\n     return move_costs[(int)c1][(int)c2];\n }\n \n-char *\n+const char *\n output_jump(pos, neg, length)\n+  const char *pos, *neg;\n   int length;\n-  char *pos, *neg;\n {\n     static int x = 0;\n     \n@@ -961,7 +963,7 @@ output_jump(pos, neg, length)\n void\n notice_update_cc_on_set(exp, insn)\n   rtx exp;\n-  rtx insn;\n+  rtx insn ATTRIBUTE_UNUSED;\n {\n     if (GET_CODE (SET_DEST (exp)) == CC0)\n     { \n@@ -1030,9 +1032,10 @@ notice_update_cc_on_set(exp, insn)\n }\n \n \n-int simple_memory_operand(op, mode)\n-  rtx op;\n-  enum machine_mode mode;\n+int\n+simple_memory_operand(op, mode)\n+     rtx op;\n+     enum machine_mode mode ATTRIBUTE_UNUSED;\n {\n     rtx addr;\n \n@@ -1104,7 +1107,7 @@ int simple_memory_operand(op, mode)\n  */\n \n  \n-char *\n+const char *\n output_block_move(operands)\n   rtx *operands;\n {\n@@ -1389,7 +1392,7 @@ comparison_operator_index(op)\n int\n comp_operator (op, mode)\n   rtx op;\n-  enum machine_mode mode;\n+  enum machine_mode mode ATTRIBUTE_UNUSED;\n {\n     return comparison_operator_index(op) >= 0;\n }"}, {"sha": "6ca396256cbbdf48bd0e0be9adbec55882f727d3", "filename": "gcc/config/pdp11/pdp11.h", "status": "modified", "additions": 2, "deletions": 20, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b0106b246343c3f176fee2176133bd1a929f16e9/gcc%2Fconfig%2Fpdp11%2Fpdp11.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b0106b246343c3f176fee2176133bd1a929f16e9/gcc%2Fconfig%2Fpdp11%2Fpdp11.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fpdp11%2Fpdp11.h?ref=b0106b246343c3f176fee2176133bd1a929f16e9", "patch": "@@ -1,5 +1,5 @@\n /* Definitions of target machine for GNU compiler, for the pdp-11\n-   Copyright (C) 1994, 1995, 1996, 1998, 1999 Free Software Foundation, Inc.\n+   Copyright (C) 1994, 95, 96, 98, 99, 2000 Free Software Foundation, Inc.\n    Contributed by Michael K. Gschwind (mike@vlsivie.tuwien.ac.at).\n \n This file is part of GNU CC.\n@@ -20,24 +20,6 @@ the Free Software Foundation, 59 Temple Place - Suite 330,\n Boston, MA 02111-1307, USA.  */\n \n \n-/* declarations */\n-int arith_operand ();\n-int const_immediate_operand ();\n-int expand_shift_operand ();\n-int legitimate_address_p ();\n-void notice_update_cc_on_set ();\n-void output_addr_const_pdp11 ();\n-void output_ascii ();\n-void output_function_epilogue ();\n-void output_function_prologue ();\n-char *output_jump();\n-char *output_move_double();\n-char *output_move_quad();\n-char *output_block_move();\n-void print_operand_address ();\n-int register_move_cost ();\n-int simple_memory_operand ();\n-\n /* check whether load_fpu_reg or not */\n #define LOAD_FPU_REG_P(x) ((x)>=8 && (x)<=11)\n #define NO_LOAD_FPU_REG_P(x) ((x)==12 || (x)==13)\n@@ -1061,7 +1043,7 @@ fprintf (FILE, \"$help$: . = .+8 ; space for tmp moves!\\n\")\t\\\n /* do we need reg def's R0 = %0 etc ??? */\t\t\t\\\n )\n #else\n-#define ASM_FILE_START(FILE)\t(0)\n+#define ASM_FILE_START(FILE)\n #endif\n \n "}, {"sha": "d917d01fd69be2d5eb67f305bcf49027665b8694", "filename": "gcc/config/pdp11/pdp11.md", "status": "modified", "additions": 2, "deletions": 7, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b0106b246343c3f176fee2176133bd1a929f16e9/gcc%2Fconfig%2Fpdp11%2Fpdp11.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b0106b246343c3f176fee2176133bd1a929f16e9/gcc%2Fconfig%2Fpdp11%2Fpdp11.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fpdp11%2Fpdp11.md?ref=b0106b246343c3f176fee2176133bd1a929f16e9", "patch": "@@ -1,5 +1,5 @@\n ;;- Machine description for the pdp11 for GNU C compiler\n-;; Copyright (C) 1994, 1995, 1997, 1998, 1999 Free Software Foundation, Inc.\n+;; Copyright (C) 1994, 95, 97-99, 2000 Free Software Foundation, Inc.\n ;; Contributed by Michael K. Gschwind (mike@vlsivie.tuwien.ac.at).\n \n ;; This file is part of GNU CC.\n@@ -992,7 +992,6 @@\n \n      or is lateoperands the low word?? - looks like it! */\n \n-  unsigned int i;\n   rtx lateoperands[3];\n   \n   lateoperands[0] = operands[0];\n@@ -1017,7 +1016,7 @@\n     return \\\"\\\";\n   }\n \n-  lateoperands[2] = GEN_INT (INTVAL (operands[2]) >> 16) & 0xffff);\n+  lateoperands[2] = GEN_INT ((INTVAL (operands[2]) >> 16) & 0xffff);\n   operands[2] = GEN_INT (INTVAL (operands[2]) & 0xffff);\n   \n   if (INTVAL(operands[2]))\n@@ -1095,7 +1094,6 @@\n \n      or is lateoperands the low word?? - looks like it! */\n \n-  unsigned int i;\n   rtx lateoperands[3];\n   \n   lateoperands[0] = operands[0];\n@@ -1203,7 +1201,6 @@\n \n      or is lateoperands the low word?? - looks like it! */\n \n-  unsigned int i;\n   rtx lateoperands[3];\n   \n   lateoperands[0] = operands[0];\n@@ -1269,7 +1266,6 @@\n \n      or is lateoperands the low word?? - looks like it! */\n \n-  unsigned int i;\n   rtx lateoperands[3];\n   \n   lateoperands[0] = operands[0];\n@@ -1332,7 +1328,6 @@\n   \"*\n { /* Here we trust that operands don't overlap */\n \n-  unsigned int i;\n   rtx lateoperands[3];\n \n   lateoperands[0] = operands[0];"}]}