{"sha": "993df21e9aacba1ff3236e0e0df0118573de8190", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTkzZGYyMWU5YWFjYmExZmYzMjM2ZTBlMGRmMDExODU3M2RlODE5MA==", "commit": {"author": {"name": "Jan Hubicka", "email": "hubicka@ucw.cz", "date": "2014-03-02T20:51:48Z"}, "committer": {"name": "Jan Hubicka", "email": "hubicka@gcc.gnu.org", "date": "2014-03-02T20:51:48Z"}, "message": "re PR ipa/60306 (Incorrect devirtualization \"pure virtual method called\")\n\n\n\tPR ipa/60306\n\n\tRevert:\n\t2013-12-14   Jan Hubicka  <jh@suse.cz>\n        PR middle-end/58477\n        * ipa-prop.c (stmt_may_be_vtbl_ptr_store): Skip clobbers.\n\n\t* testsuite/g++.dg/ipa/devirt-29.C: New testcase\n\nFrom-SVN: r208261", "tree": {"sha": "cc1f8936fe37b264e2fc78795755ba145c4cdc16", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/cc1f8936fe37b264e2fc78795755ba145c4cdc16"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/993df21e9aacba1ff3236e0e0df0118573de8190", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/993df21e9aacba1ff3236e0e0df0118573de8190", "html_url": "https://github.com/Rust-GCC/gccrs/commit/993df21e9aacba1ff3236e0e0df0118573de8190", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/993df21e9aacba1ff3236e0e0df0118573de8190/comments", "author": null, "committer": null, "parents": [{"sha": "9b0af790b789de605f6f7d818b375e50cf0c2904", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9b0af790b789de605f6f7d818b375e50cf0c2904", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9b0af790b789de605f6f7d818b375e50cf0c2904"}], "stats": {"total": 92, "additions": 90, "deletions": 2}, "files": [{"sha": "b6f1dac00ad6bdb7445c917b56ab337cf67f019e", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/993df21e9aacba1ff3236e0e0df0118573de8190/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/993df21e9aacba1ff3236e0e0df0118573de8190/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=993df21e9aacba1ff3236e0e0df0118573de8190", "patch": "@@ -1,3 +1,12 @@\n+2014-03-02  Jan Hubicka  <hubicka@ucw.cz>\n+\t\n+\tPR ipa/60306\n+\n+\tRevert:\n+\t2013-12-14   Jan Hubicka  <jh@suse.cz>\n+        PR middle-end/58477\n+        * ipa-prop.c (stmt_may_be_vtbl_ptr_store): Skip clobbers.\n+\n 2014-03-02  Jon Beniston  <jon@beniston.com>\n \n \tPR bootstrap/48230"}, {"sha": "4fb916aa01fdb9443630295bff0531523b233267", "filename": "gcc/ipa-prop.c", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/993df21e9aacba1ff3236e0e0df0118573de8190/gcc%2Fipa-prop.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/993df21e9aacba1ff3236e0e0df0118573de8190/gcc%2Fipa-prop.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fipa-prop.c?ref=993df21e9aacba1ff3236e0e0df0118573de8190", "patch": "@@ -573,8 +573,7 @@ stmt_may_be_vtbl_ptr_store (gimple stmt)\n {\n   if (is_gimple_call (stmt))\n     return false;\n-  else if (gimple_clobber_p (stmt))\n-    return false;\n+  /* TODO: Skip clobbers, doing so triggers problem in PR60306.  */\n   else if (is_gimple_assign (stmt))\n     {\n       tree lhs = gimple_assign_lhs (stmt);"}, {"sha": "864057e435d12f5e3290c8265952999f77a6903d", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/993df21e9aacba1ff3236e0e0df0118573de8190/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/993df21e9aacba1ff3236e0e0df0118573de8190/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=993df21e9aacba1ff3236e0e0df0118573de8190", "patch": "@@ -1,3 +1,8 @@\n+2014-03-02  Jan Hubicka  <hubicka@ucw.cz>\n+\n+\tPR ipa/60306\n+\t* testsuite/g++.dg/ipa/devirt-29.C: New testcase\n+\n 2014-03-02  Bernd Edlinger  <bernd.edlinger@hotmail.de>\n \n \tPR fortran/60236"}, {"sha": "190d9e2feba92eea1808bc6cf26ec777b0328904", "filename": "gcc/testsuite/g++.dg/ipa/devirt-29.C", "status": "added", "additions": 75, "deletions": 0, "changes": 75, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/993df21e9aacba1ff3236e0e0df0118573de8190/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fipa%2Fdevirt-29.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/993df21e9aacba1ff3236e0e0df0118573de8190/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fipa%2Fdevirt-29.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fipa%2Fdevirt-29.C?ref=993df21e9aacba1ff3236e0e0df0118573de8190", "patch": "@@ -0,0 +1,75 @@\n+/* { dg-do run } */\n+/* There is a devirtualizable call. In PR60306 we deduced wrong target to cxa_pure_virtual.\n+   For gcc 4.10 we temporarily disable the devirtualization.  */\n+/* { dg-options \"-O3 -std=c++11\"  } */\n+\n+#include <vector>\n+\n+using std::vector;\n+\n+class Object \n+{\n+public:\n+\n+  virtual Object* clone() const =0;\n+\n+  virtual int type() const {return 0;}\n+\n+  Object& operator=(const Object&) {return *this;}\n+\n+  Object() {}\n+  Object(const Object&) {}\n+  virtual ~Object() {}\n+};\n+\n+Object* f(const Object&o)\n+{\n+  return o.clone();\n+}\n+\n+template<typename T>\n+class Box: public Object, public T\n+{\n+public:\n+  Box<T>* clone() const {return new Box<T>(*this);}\n+\n+  Box<T>& operator=(const Box<T>& t)\n+  {\n+    T::operator=(t);\n+    return *this;\n+  }\n+\n+  Box<T>& operator=(const T& t)\n+  {\n+    T::operator=(t);\n+    return *this;\n+  }\n+\n+  Box() = default;\n+  Box(const Box<T>&) = default;\n+  explicit Box(const T& t):T(t) {}\n+};\n+\n+template <typename T>\n+using Vector = Box<vector<T>>;\n+\n+typedef Vector<int> OVector;\n+\n+OVector edges_connecting_to_node(int n)\n+{\n+  OVector branch_list_;\n+  for(int i=0;i<n;i++)\n+    branch_list_.push_back(i);\n+\n+  return branch_list_;\n+}\n+\n+int main(int argc,char* argv[])\n+{ \n+  for(int n=0; n < argc; n++)\n+  {\n+    auto x = edges_connecting_to_node(1);\n+    x.clone();\n+    f(x);\n+  }\n+}"}]}