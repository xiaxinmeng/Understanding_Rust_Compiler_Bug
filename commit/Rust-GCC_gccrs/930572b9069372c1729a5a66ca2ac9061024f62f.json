{"sha": "930572b9069372c1729a5a66ca2ac9061024f62f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTMwNTcyYjkwNjkzNzJjMTcyOWE1YTY2Y2EyYWM5MDYxMDI0ZjYyZg==", "commit": {"author": {"name": "Anatoly Sokolov", "email": "aesok@post.ru", "date": "2010-07-08T20:43:22Z"}, "committer": {"name": "Anatoly Sokolov", "email": "aesok@gcc.gnu.org", "date": "2010-07-08T20:43:22Z"}, "message": "ia64.h (OVERRIDE_OPTIONS): Remove macros.\n\n\t* config/ia64/ia64.h (OVERRIDE_OPTIONS): Remove macros.\n\t* config/ia64/ia64-protos.h (ia64_override_options): Remove.\n\t* config/ia64/ia64.c (TARGET_OPTION_OVERRIDE): Define.\n\t(ia64_override_options): Rename to...\n\t(ia64_option_override): ... this one. Make static.\n\nFrom-SVN: r161975", "tree": {"sha": "54122389cce6b0e75c83e676ccfbdb13ffd820b6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/54122389cce6b0e75c83e676ccfbdb13ffd820b6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/930572b9069372c1729a5a66ca2ac9061024f62f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/930572b9069372c1729a5a66ca2ac9061024f62f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/930572b9069372c1729a5a66ca2ac9061024f62f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/930572b9069372c1729a5a66ca2ac9061024f62f/comments", "author": null, "committer": null, "parents": [{"sha": "5951297a1afe3039a9716f2cb6ee924a7a388f37", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5951297a1afe3039a9716f2cb6ee924a7a388f37", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5951297a1afe3039a9716f2cb6ee924a7a388f37"}], "stats": {"total": 26, "additions": 15, "deletions": 11}, "files": [{"sha": "f1fe75be1636186ce1cb032d1dc99d666b483ff2", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/930572b9069372c1729a5a66ca2ac9061024f62f/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/930572b9069372c1729a5a66ca2ac9061024f62f/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=930572b9069372c1729a5a66ca2ac9061024f62f", "patch": "@@ -1,3 +1,11 @@\n+2010-07-08  Anatoly Sokolov  <aesok@post.ru>\n+\n+\t* config/ia64/ia64.h (OVERRIDE_OPTIONS): Remove macros.\n+\t* config/ia64/ia64-protos.h (ia64_override_options): Remove.\n+\t* config/ia64/ia64.c (TARGET_OPTION_OVERRIDE): Define.\n+\t(ia64_override_options): Rename to...\n+\t(ia64_option_override): ... this one. Make static.\n+\n 2010-07-08  Eric Botcazou  <ebotcazou@adacore.com>\n \n \tPR middle-end/44843"}, {"sha": "0a5af40f489a9c40eebb8f5e5744a11da77567d8", "filename": "gcc/config/ia64/ia64-protos.h", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/930572b9069372c1729a5a66ca2ac9061024f62f/gcc%2Fconfig%2Fia64%2Fia64-protos.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/930572b9069372c1729a5a66ca2ac9061024f62f/gcc%2Fconfig%2Fia64%2Fia64-protos.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fia64%2Fia64-protos.h?ref=930572b9069372c1729a5a66ca2ac9061024f62f", "patch": "@@ -86,7 +86,6 @@ extern int ia64_epilogue_uses (int);\n extern int ia64_eh_uses (int);\n extern void emit_safe_across_calls (void);\n extern void ia64_init_builtins (void);\n-extern void ia64_override_options (void);\n extern int ia64_dbx_register_number (int);\n \n extern rtx ia64_return_addr_rtx (HOST_WIDE_INT, rtx);"}, {"sha": "865d2abb50273a6a92fa18dc5ddbbc50c504fc91", "filename": "gcc/config/ia64/ia64.c", "status": "modified", "additions": 7, "deletions": 3, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/930572b9069372c1729a5a66ca2ac9061024f62f/gcc%2Fconfig%2Fia64%2Fia64.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/930572b9069372c1729a5a66ca2ac9061024f62f/gcc%2Fconfig%2Fia64%2Fia64.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fia64%2Fia64.c?ref=930572b9069372c1729a5a66ca2ac9061024f62f", "patch": "@@ -201,6 +201,7 @@ static rtx gen_movdi_x (rtx, rtx, rtx);\n static rtx gen_fr_spill_x (rtx, rtx, rtx);\n static rtx gen_fr_restore_x (rtx, rtx, rtx);\n \n+static void ia64_option_override (void);\n static bool ia64_can_eliminate (const int, const int);\n static enum machine_mode hfa_element_mode (const_tree, bool);\n static void ia64_setup_incoming_varargs (CUMULATIVE_ARGS *, enum machine_mode,\n@@ -354,6 +355,9 @@ static const struct attribute_spec ia64_attribute_table[] =\n #undef TARGET_ASM_INTEGER\n #define TARGET_ASM_INTEGER ia64_assemble_integer\n \n+#undef TARGET_OPTION_OVERRIDE\n+#define TARGET_OPTION_OVERRIDE ia64_option_override\n+\n #undef TARGET_ASM_FUNCTION_PROLOGUE\n #define TARGET_ASM_FUNCTION_PROLOGUE ia64_output_function_prologue\n #undef TARGET_ASM_FUNCTION_END_PROLOGUE\n@@ -5564,10 +5568,10 @@ ia64_handle_option (size_t code, const char *arg, int value)\n     }\n }\n \n-/* Implement OVERRIDE_OPTIONS.  */\n+/* Implement TARGET_OPTION_OVERRIDE.  */\n \n-void\n-ia64_override_options (void)\n+static void\n+ia64_option_override (void)\n {\n   if (TARGET_AUTO_PIC)\n     target_flags |= MASK_CONST_GP;"}, {"sha": "047a0436182e357e0dc7174febf23b76f3c14093", "filename": "gcc/config/ia64/ia64.h", "status": "modified", "additions": 0, "deletions": 7, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/930572b9069372c1729a5a66ca2ac9061024f62f/gcc%2Fconfig%2Fia64%2Fia64.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/930572b9069372c1729a5a66ca2ac9061024f62f/gcc%2Fconfig%2Fia64%2Fia64.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fia64%2Fia64.h?ref=930572b9069372c1729a5a66ca2ac9061024f62f", "patch": "@@ -116,13 +116,6 @@ enum processor_type\n \n extern enum processor_type ia64_tune;\n \n-/* Sometimes certain combinations of command options do not make sense on a\n-   particular target machine.  You can define a macro `OVERRIDE_OPTIONS' to\n-   take account of this.  This macro, if defined, is executed once just after\n-   all the command options have been parsed.  */\n-\n-#define OVERRIDE_OPTIONS ia64_override_options ()\n-\n /* Some machines may desire to change what optimizations are performed for\n    various optimization levels.  This macro, if defined, is executed once just\n    after the optimization level is determined and before the remainder of the"}]}