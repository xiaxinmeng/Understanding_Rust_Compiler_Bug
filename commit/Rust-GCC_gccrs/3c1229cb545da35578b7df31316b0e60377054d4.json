{"sha": "3c1229cb545da35578b7df31316b0e60377054d4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2MxMjI5Y2I1NDVkYTM1NTc4YjdkZjMxMzE2YjBlNjAzNzcwNTRkNA==", "commit": {"author": {"name": "Richard Henderson", "email": "rth@redhat.com", "date": "2009-09-22T15:16:42Z"}, "committer": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "2009-09-22T15:16:42Z"}, "message": "xtensa.c (TARGET_ASM_TRAMPOLINE_TEMPLATE): New.\n\n        * config/xtensa/xtensa.c (TARGET_ASM_TRAMPOLINE_TEMPLATE): New.\n        (TARGET_TRAMPOLINE_INIT): New.\n        (xtensa_asm_trampoline_template): Rename from\n        xtensa_trampoline_template; make static.\n        (xtensa_trampoline_init): Rename from xtensa_initialize_trampoline;\n        make static; update for hook parameters.\n        * config/xtensa/xtensa-protos.h: Remove trampoline decls.\n        * config/xtensa/xtensa.h (TRAMPOLINE_TEMPLATE): Remove.\n        (INITIALIZE_TRAMPOLINE): Remove.\n\nFrom-SVN: r152017", "tree": {"sha": "97e6487d8a47e5372135aecdd2cf420f5e8b8377", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/97e6487d8a47e5372135aecdd2cf420f5e8b8377"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3c1229cb545da35578b7df31316b0e60377054d4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3c1229cb545da35578b7df31316b0e60377054d4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3c1229cb545da35578b7df31316b0e60377054d4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3c1229cb545da35578b7df31316b0e60377054d4/comments", "author": null, "committer": null, "parents": [{"sha": "3814318d559e5f13822e897a4316d72f92d6c0e5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3814318d559e5f13822e897a4316d72f92d6c0e5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3814318d559e5f13822e897a4316d72f92d6c0e5"}], "stats": {"total": 46, "additions": 29, "deletions": 17}, "files": [{"sha": "daff5e4d1b5f2442beafd3b1474aedb7c6449c86", "filename": "gcc/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3c1229cb545da35578b7df31316b0e60377054d4/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3c1229cb545da35578b7df31316b0e60377054d4/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=3c1229cb545da35578b7df31316b0e60377054d4", "patch": "@@ -292,6 +292,16 @@\n \tvax_asm_trampoline_template.\n \t(INITIALIZE_TRAMPOLINE): Move code to vax_trampoline_init.\n \n+\t* config/xtensa/xtensa.c (TARGET_ASM_TRAMPOLINE_TEMPLATE): New.\n+\t(TARGET_TRAMPOLINE_INIT): New.\n+\t(xtensa_asm_trampoline_template): Rename from\n+\txtensa_trampoline_template; make static.\n+\t(xtensa_trampoline_init): Rename from xtensa_initialize_trampoline;\n+\tmake static; update for hook parameters.\n+\t* config/xtensa/xtensa-protos.h: Remove trampoline decls.\n+\t* config/xtensa/xtensa.h (TRAMPOLINE_TEMPLATE): Remove.\n+\t(INITIALIZE_TRAMPOLINE): Remove.\n+\n 2009-09-22  Jakub Jelinek  <jakub@redhat.com>\n \n \t* config/rs6000/rs6000.c (bdesc_2arg): Fix CODE_FOR_vector_gt* codes"}, {"sha": "6bd1e565fe7403cc1118ea79dfa18fe818d48bfc", "filename": "gcc/config/xtensa/xtensa-protos.h", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3c1229cb545da35578b7df31316b0e60377054d4/gcc%2Fconfig%2Fxtensa%2Fxtensa-protos.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3c1229cb545da35578b7df31316b0e60377054d4/gcc%2Fconfig%2Fxtensa%2Fxtensa-protos.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fxtensa%2Fxtensa-protos.h?ref=3c1229cb545da35578b7df31316b0e60377054d4", "patch": "@@ -70,7 +70,6 @@ struct secondary_reload_info;\n extern enum reg_class xtensa_secondary_reload (bool, rtx, enum reg_class,\n \t\t\t\t\t       enum machine_mode,\n \t\t\t\t\t       struct secondary_reload_info *);\n-extern void xtensa_initialize_trampoline (rtx, rtx, rtx);\n #endif /* RTX_CODE */\n \n #ifdef TREE_CODE\n@@ -86,6 +85,5 @@ extern void override_options (void);\n extern long compute_frame_size (int);\n extern void xtensa_expand_prologue (void);\n extern void order_regs_for_local_alloc (void);\n-extern void xtensa_trampoline_template (FILE *);\n \n #endif /* !__XTENSA_PROTOS_H__ */"}, {"sha": "0264868a4a2df04867fd0b0f4e851d8b3c4c0f17", "filename": "gcc/config/xtensa/xtensa.c", "status": "modified", "additions": 19, "deletions": 8, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3c1229cb545da35578b7df31316b0e60377054d4/gcc%2Fconfig%2Fxtensa%2Fxtensa.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3c1229cb545da35578b7df31316b0e60377054d4/gcc%2Fconfig%2Fxtensa%2Fxtensa.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fxtensa%2Fxtensa.c?ref=3c1229cb545da35578b7df31316b0e60377054d4", "patch": "@@ -146,6 +146,8 @@ static tree xtensa_fold_builtin (tree, tree, bool);\n static rtx xtensa_expand_builtin (tree, rtx, rtx, enum machine_mode, int);\n static void xtensa_va_start (tree, rtx);\n static bool xtensa_frame_pointer_required (void);\n+static void xtensa_asm_trampoline_template (FILE *);\n+static void xtensa_trampoline_init (rtx, tree, rtx);\n \n static const int reg_nonleaf_alloc_order[FIRST_PSEUDO_REGISTER] =\n   REG_ALLOC_ORDER;\n@@ -229,6 +231,11 @@ static const int reg_nonleaf_alloc_order[FIRST_PSEUDO_REGISTER] =\n #undef TARGET_FRAME_POINTER_REQUIRED\n #define TARGET_FRAME_POINTER_REQUIRED xtensa_frame_pointer_required\n \n+#undef TARGET_ASM_TRAMPOLINE_TEMPLATE\n+#define TARGET_ASM_TRAMPOLINE_TEMPLATE xtensa_asm_trampoline_template\n+#undef TARGET_TRAMPOLINE_INIT\n+#define TARGET_TRAMPOLINE_INIT xtensa_trampoline_init\n+\n struct gcc_target targetm = TARGET_INITIALIZER;\n \n \f\n@@ -3435,8 +3442,8 @@ xtensa_function_value (const_tree valtype, const_tree func ATTRIBUTE_UNUSED,\n    control to the instruction following the ENTRY at the target.  Note:\n    this assumes that the target begins with an ENTRY instruction.  */\n \n-void\n-xtensa_trampoline_template (FILE *stream)\n+static void\n+xtensa_asm_trampoline_template (FILE *stream)\n {\n   bool use_call0 = (TARGET_CONST16 || TARGET_ABSOLUTE_LITERALS);\n \n@@ -3503,17 +3510,21 @@ xtensa_trampoline_template (FILE *stream)\n   fprintf (stream, \"\\t.end no-transform\\n\");\n }\n \n-\n-void\n-xtensa_initialize_trampoline (rtx addr, rtx func, rtx chain)\n+static void\n+xtensa_trampoline_init (rtx m_tramp, tree fndecl, rtx chain)\n {\n+  rtx func = XEXP (DECL_RTL (fndecl), 0);\n   bool use_call0 = (TARGET_CONST16 || TARGET_ABSOLUTE_LITERALS);\n   int chain_off = use_call0 ? 12 : 8;\n   int func_off = use_call0 ? 16 : 12;\n-  emit_move_insn (gen_rtx_MEM (SImode, plus_constant (addr, chain_off)), chain);\n-  emit_move_insn (gen_rtx_MEM (SImode, plus_constant (addr, func_off)), func);\n+\n+  emit_block_move (m_tramp, assemble_trampoline_template (),\n+\t\t   GEN_INT (TRAMPOLINE_SIZE), BLOCK_OP_NORMAL);\n+\n+  emit_move_insn (adjust_address (m_tramp, SImode, chain_off), chain);\n+  emit_move_insn (adjust_address (m_tramp, SImode, func_off), func);\n   emit_library_call (gen_rtx_SYMBOL_REF (Pmode, \"__xtensa_sync_caches\"),\n-\t\t     0, VOIDmode, 1, addr, Pmode);\n+\t\t     0, VOIDmode, 1, XEXP (m_tramp, 0), Pmode);\n }\n \n "}, {"sha": "4fefbfd973a453e76fd114f256b18ed410b07762", "filename": "gcc/config/xtensa/xtensa.h", "status": "modified", "additions": 0, "deletions": 7, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3c1229cb545da35578b7df31316b0e60377054d4/gcc%2Fconfig%2Fxtensa%2Fxtensa.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3c1229cb545da35578b7df31316b0e60377054d4/gcc%2Fconfig%2Fxtensa%2Fxtensa.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fxtensa%2Fxtensa.h?ref=3c1229cb545da35578b7df31316b0e60377054d4", "patch": "@@ -677,20 +677,13 @@ typedef struct xtensa_args\n /* Stack pointer value doesn't matter at exit.  */\n #define EXIT_IGNORE_STACK 1\n \n-#define TRAMPOLINE_TEMPLATE(STREAM) xtensa_trampoline_template (STREAM)\n-\n /* Size in bytes of the trampoline, as an integer.  Make sure this is\n    a multiple of TRAMPOLINE_ALIGNMENT to avoid -Wpadded warnings.  */\n #define TRAMPOLINE_SIZE (TARGET_CONST16 || TARGET_ABSOLUTE_LITERALS ? 60 : 52)\n \n /* Alignment required for trampolines, in bits.  */\n #define TRAMPOLINE_ALIGNMENT 32\n \n-/* A C statement to initialize the variable parts of a trampoline.  */\n-#define INITIALIZE_TRAMPOLINE(ADDR, FUNC, CHAIN)\t\t\t\\\n-  xtensa_initialize_trampoline (ADDR, FUNC, CHAIN)\n-\n-\n /* If defined, a C expression that produces the machine-specific code\n    to setup the stack so that arbitrary frames can be accessed.\n "}]}