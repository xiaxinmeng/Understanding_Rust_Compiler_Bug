{"sha": "78689aa295f9b0e54807462d13d3125a5a83c64b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Nzg2ODlhYTI5NWY5YjBlNTQ4MDc0NjJkMTNkMzEyNWE1YTgzYzY0Yg==", "commit": {"author": {"name": "Ghjuvan Lacambre", "email": "lacambre@adacore.com", "date": "2020-04-20T07:41:08Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "derodat@adacore.com", "date": "2020-06-18T09:08:24Z"}, "message": "[Ada] Do not treat pragma Compile_Time_Warning as error even with -gnatwe\n\n2020-06-18  Ghjuvan Lacambre  <lacambre@adacore.com>\n\ngcc/ada/\n\n\t* erroutc.ads: Declare new Is_Compile_Time_Msg boolean,\n\tadd new Compile_Time_Pragma field to Error_Msg_Object type.\n\t(Count_Compile_Time_Pragma_Warnings): New function.\n\t* erroutc.adb (Count_Compile_Time_Pragma_Warnings): New\n\tfunction.\n\t(Compilation_Errors): Take Compile_Time warnings into account\n\twhen tallying Errors/Warnings.\n\t* errout.ads (Error_Msg): New procedure.\n\t* errout.adb (Error_Msg): New procedure.\n\t(Error_Msg_Internal): Set new Compile_Time_Pragma field in\n\tError_Msg_Object.\n\t* errutil.adb (Error_Msg): Set new Compile_Time_Pragma field in\n\tError_Msg_Object.\n\t* sem_prag.adb (Validate_Compile_Time_Warning_Or_Error): Pass\n\tTrue to new Error_Msg procedure.\n\t* doc/gnat_rm/implementation_defined_pragmas.rst: Update doc for\n\tthe Compile_Time_Warning pragma.\n\t* gnat_rm.texi: Regenerate.\n\t* opt.ads: Update comment.", "tree": {"sha": "70f7c01b42926dbd73c20404cad0d85b5bded9dc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/70f7c01b42926dbd73c20404cad0d85b5bded9dc"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/78689aa295f9b0e54807462d13d3125a5a83c64b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/78689aa295f9b0e54807462d13d3125a5a83c64b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/78689aa295f9b0e54807462d13d3125a5a83c64b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/78689aa295f9b0e54807462d13d3125a5a83c64b/comments", "author": {"login": "glacambre", "id": 11534587, "node_id": "MDQ6VXNlcjExNTM0NTg3", "avatar_url": "https://avatars.githubusercontent.com/u/11534587?v=4", "gravatar_id": "", "url": "https://api.github.com/users/glacambre", "html_url": "https://github.com/glacambre", "followers_url": "https://api.github.com/users/glacambre/followers", "following_url": "https://api.github.com/users/glacambre/following{/other_user}", "gists_url": "https://api.github.com/users/glacambre/gists{/gist_id}", "starred_url": "https://api.github.com/users/glacambre/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/glacambre/subscriptions", "organizations_url": "https://api.github.com/users/glacambre/orgs", "repos_url": "https://api.github.com/users/glacambre/repos", "events_url": "https://api.github.com/users/glacambre/events{/privacy}", "received_events_url": "https://api.github.com/users/glacambre/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pmderodat", "id": 758452, "node_id": "MDQ6VXNlcjc1ODQ1Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/758452?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pmderodat", "html_url": "https://github.com/pmderodat", "followers_url": "https://api.github.com/users/pmderodat/followers", "following_url": "https://api.github.com/users/pmderodat/following{/other_user}", "gists_url": "https://api.github.com/users/pmderodat/gists{/gist_id}", "starred_url": "https://api.github.com/users/pmderodat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pmderodat/subscriptions", "organizations_url": "https://api.github.com/users/pmderodat/orgs", "repos_url": "https://api.github.com/users/pmderodat/repos", "events_url": "https://api.github.com/users/pmderodat/events{/privacy}", "received_events_url": "https://api.github.com/users/pmderodat/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "668fb87d746afb36e22e48972fe379deb3a2184a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/668fb87d746afb36e22e48972fe379deb3a2184a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/668fb87d746afb36e22e48972fe379deb3a2184a"}], "stats": {"total": 1807, "additions": 949, "deletions": 858}, "files": [{"sha": "d100b2259d8a6cf90f1fc4f6228fe1c005dd963b", "filename": "gcc/ada/doc/gnat_rm/implementation_defined_pragmas.rst", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/78689aa295f9b0e54807462d13d3125a5a83c64b/gcc%2Fada%2Fdoc%2Fgnat_rm%2Fimplementation_defined_pragmas.rst", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/78689aa295f9b0e54807462d13d3125a5a83c64b/gcc%2Fada%2Fdoc%2Fgnat_rm%2Fimplementation_defined_pragmas.rst", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fdoc%2Fgnat_rm%2Fimplementation_defined_pragmas.rst?ref=78689aa295f9b0e54807462d13d3125a5a83c64b", "patch": "@@ -926,6 +926,8 @@ support is available, then the code generator will issue a message\n indicating that the necessary attribute for implementation of this\n pragma is not available.\n \n+.. _Compile_Time_Error:\n+\n Pragma Compile_Time_Error\n =========================\n \n@@ -979,6 +981,11 @@ of formal parameters are tested, and warnings given appropriately. Another use\n with a first parameter of True is to warn a client about use of a package,\n for example that it is not fully implemented.\n \n+In previous versions of the compiler, combining *-gnatwe* with\n+Compile_Time_Warning resulted in an fatal error. Now the compiler will always\n+emit a warning. You can use :ref:`Compile_Time_Error` to force the generation\n+of an error.\n+\n Pragma Compiler_Unit\n ====================\n "}, {"sha": "993dddf9112471ae42224db9a38cb6922bf462c5", "filename": "gcc/ada/errout.adb", "status": "modified", "additions": 41, "deletions": 22, "changes": 63, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/78689aa295f9b0e54807462d13d3125a5a83c64b/gcc%2Fada%2Ferrout.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/78689aa295f9b0e54807462d13d3125a5a83c64b/gcc%2Fada%2Ferrout.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ferrout.adb?ref=78689aa295f9b0e54807462d13d3125a5a83c64b", "patch": "@@ -310,6 +310,18 @@ package body Errout is\n       Error_Msg (Msg, Flag_Location, Current_Node);\n    end Error_Msg;\n \n+   procedure Error_Msg\n+      (Msg : String;\n+       Flag_Location : Source_Ptr;\n+       Is_Compile_Time_Pragma : Boolean)\n+   is\n+      Save_Is_Compile_Time_Msg : constant Boolean := Is_Compile_Time_Msg;\n+   begin\n+      Is_Compile_Time_Msg := Is_Compile_Time_Pragma;\n+      Error_Msg (Msg, Flag_Location, Current_Node);\n+      Is_Compile_Time_Msg := Save_Is_Compile_Time_Msg;\n+   end Error_Msg;\n+\n    procedure Error_Msg\n      (Msg           : String;\n       Flag_Location : Source_Ptr;\n@@ -1084,25 +1096,26 @@ package body Errout is\n       --  Here we build a new error object\n \n       Errors.Append\n-        ((Text     => new String'(Msg_Buffer (1 .. Msglen)),\n-          Next     => No_Error_Msg,\n-          Prev     => No_Error_Msg,\n-          Sptr     => Sptr,\n-          Optr     => Optr,\n-          Sfile    => Get_Source_File_Index (Sptr),\n-          Line     => Get_Physical_Line_Number (Sptr),\n-          Col      => Get_Column_Number (Sptr),\n-          Warn     => Is_Warning_Msg,\n-          Info     => Is_Info_Msg,\n-          Check    => Is_Check_Msg,\n-          Warn_Err => False, -- reset below\n-          Warn_Chr => Warning_Msg_Char,\n-          Style    => Is_Style_Msg,\n-          Serious  => Is_Serious_Error,\n-          Uncond   => Is_Unconditional_Msg,\n-          Msg_Cont => Continuation,\n-          Deleted  => False,\n-          Node     => Node));\n+        ((Text                => new String'(Msg_Buffer (1 .. Msglen)),\n+          Next                => No_Error_Msg,\n+          Prev                => No_Error_Msg,\n+          Sptr                => Sptr,\n+          Optr                => Optr,\n+          Sfile               => Get_Source_File_Index (Sptr),\n+          Line                => Get_Physical_Line_Number (Sptr),\n+          Col                 => Get_Column_Number (Sptr),\n+          Compile_Time_Pragma => Is_Compile_Time_Msg,\n+          Warn                => Is_Warning_Msg,\n+          Info                => Is_Info_Msg,\n+          Check               => Is_Check_Msg,\n+          Warn_Err            => False, -- reset below\n+          Warn_Chr            => Warning_Msg_Char,\n+          Style               => Is_Style_Msg,\n+          Serious             => Is_Serious_Error,\n+          Uncond              => Is_Unconditional_Msg,\n+          Msg_Cont            => Continuation,\n+          Deleted             => False,\n+          Node                => Node));\n       Cur_Msg := Errors.Last;\n \n       --  Test if warning to be treated as error\n@@ -2195,9 +2208,15 @@ package body Errout is\n       --  must not be treated as errors when -gnatwe is in effect.\n \n       if Warning_Mode = Treat_As_Error then\n-         Total_Errors_Detected :=\n-           Total_Errors_Detected + Warnings_Detected - Warning_Info_Messages;\n-         Warnings_Detected := Warning_Info_Messages;\n+         declare\n+            Compile_Time_Pragma_Warnings : constant Int :=\n+               Count_Compile_Time_Pragma_Warnings;\n+         begin\n+            Total_Errors_Detected := Total_Errors_Detected + Warnings_Detected\n+               - Warning_Info_Messages - Compile_Time_Pragma_Warnings;\n+            Warnings_Detected :=\n+               Warning_Info_Messages + Compile_Time_Pragma_Warnings;\n+         end;\n       end if;\n    end Output_Messages;\n "}, {"sha": "68fcdb94d4fc02dc323f2520ebbf4ad6b3561bbc", "filename": "gcc/ada/errout.ads", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/78689aa295f9b0e54807462d13d3125a5a83c64b/gcc%2Fada%2Ferrout.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/78689aa295f9b0e54807462d13d3125a5a83c64b/gcc%2Fada%2Ferrout.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ferrout.ads?ref=78689aa295f9b0e54807462d13d3125a5a83c64b", "patch": "@@ -700,6 +700,14 @@ package Errout is\n    --  or the semantic analyzer. If N is set, points to the relevant node for\n    --  this message.\n \n+   procedure Error_Msg\n+     (Msg                    : String;\n+      Flag_Location          : Source_Ptr;\n+      Is_Compile_Time_Pragma : Boolean);\n+   --  Same as Error_Msg (String, Source_Ptr) except Is_Compile_Time_Pragma\n+   --  lets the caller specify whether the is a\n+   --  Compile_Time_Warning/Compile_Time_Error pragma.\n+\n    procedure Error_Msg_S (Msg : String);\n    --  Output a message at current scan pointer location. This routine can be\n    --  called only from the parser, since it references Scan_Ptr."}, {"sha": "14e2aad8b30071c920f6da64ee4fb48e4910658f", "filename": "gcc/ada/erroutc.adb", "status": "modified", "additions": 39, "deletions": 5, "changes": 44, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/78689aa295f9b0e54807462d13d3125a5a83c64b/gcc%2Fada%2Ferroutc.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/78689aa295f9b0e54807462d13d3125a5a83c64b/gcc%2Fada%2Ferroutc.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ferroutc.adb?ref=78689aa295f9b0e54807462d13d3125a5a83c64b", "patch": "@@ -249,14 +249,48 @@ package body Erroutc is\n    ------------------------\n \n    function Compilation_Errors return Boolean is\n+      Warnings_Count : constant Int\n+         := Warnings_Detected - Warning_Info_Messages;\n    begin\n-      return\n-        Total_Errors_Detected /= 0\n-          or else (Warnings_Detected - Warning_Info_Messages /= 0\n-                    and then Warning_Mode = Treat_As_Error)\n-          or else Warnings_Treated_As_Errors /= 0;\n+      if Total_Errors_Detected /= 0 then\n+         return True;\n+\n+      elsif Warnings_Treated_As_Errors /= 0 then\n+         return True;\n+\n+         --  We should never treat warnings that originate from a\n+         --  Compile_Time_Warning pragma as an error. Warnings_Count is the sum\n+         --  of both \"normal\" and Compile_Time_Warning warnings. This means\n+         --  that there only is one or more non-Compile_Time_Warning warnings\n+         --  if Warnings_Count is greater than\n+         --  Count_Compile_Time_Pragma_Warnings.\n+      elsif Warning_Mode = Treat_As_Error\n+         and then Warnings_Count > Count_Compile_Time_Pragma_Warnings\n+      then\n+         return True;\n+      end if;\n+\n+      return False;\n    end Compilation_Errors;\n \n+   ----------------------------------------\n+   -- Count_Compile_Time_Pragma_Warnings  --\n+   ----------------------------------------\n+\n+   function Count_Compile_Time_Pragma_Warnings return Int is\n+      Result : Int := 0;\n+   begin\n+      for J in 1 .. Errors.Last loop\n+         begin\n+            if Errors.Table (J).Warn and Errors.Table (J).Compile_Time_Pragma\n+            then\n+               Result := Result + 1;\n+            end if;\n+         end;\n+      end loop;\n+      return Result;\n+   end Count_Compile_Time_Pragma_Warnings;\n+\n    ------------------\n    -- Debug_Output --\n    ------------------"}, {"sha": "8472ee5ee88fd7ceee23f6601000df53e4334f40", "filename": "gcc/ada/erroutc.ads", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/78689aa295f9b0e54807462d13d3125a5a83c64b/gcc%2Fada%2Ferroutc.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/78689aa295f9b0e54807462d13d3125a5a83c64b/gcc%2Fada%2Ferroutc.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ferroutc.ads?ref=78689aa295f9b0e54807462d13d3125a5a83c64b", "patch": "@@ -51,6 +51,10 @@ package Erroutc is\n    --  Set true to indicate that the current message contains the insertion\n    --  sequence !! (force warnings even in non-main unit source files).\n \n+   Is_Compile_Time_Msg : Boolean := False;\n+   --  Set true to indicate that the current message originates from a\n+   --  Compile_Time_Warning or Compile_Time_Error pragma.\n+\n    Is_Serious_Error : Boolean := False;\n    --  Set True for a serious error (i.e. any message that is not a warning\n    --  or style message, and that does not contain a | insertion character).\n@@ -211,6 +215,10 @@ package Erroutc is\n       Col : Column_Number;\n       --  Column number for error message\n \n+      Compile_Time_Pragma : Boolean;\n+      --  True if the message originates from a Compile_Time_Warning or\n+      --  Compile_Time_Error pragma\n+\n       Warn : Boolean;\n       --  True if warning message\n \n@@ -413,6 +421,10 @@ package Erroutc is\n    --  redundant. If so, the message to be deleted and all its continuations\n    --  are marked with the Deleted flag set to True.\n \n+   function Count_Compile_Time_Pragma_Warnings return Int;\n+   --  Returns the number of warnings in the Errors table that were triggered\n+   --  by a Compile_Time_Warning pragma.\n+\n    function Get_Warning_Tag (Id : Error_Msg_Id) return String;\n    --  Given an error message ID, return tag showing warning message class, or\n    --  the null string if this option is not enabled or this is not a warning."}, {"sha": "75d29a98d18671ec274aeb88df61b3a3a8f5b70a", "filename": "gcc/ada/errutil.adb", "status": "modified", "additions": 20, "deletions": 19, "changes": 39, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/78689aa295f9b0e54807462d13d3125a5a83c64b/gcc%2Fada%2Ferrutil.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/78689aa295f9b0e54807462d13d3125a5a83c64b/gcc%2Fada%2Ferrutil.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ferrutil.adb?ref=78689aa295f9b0e54807462d13d3125a5a83c64b", "patch": "@@ -203,25 +203,26 @@ package body Errutil is\n \n       Errors.Append\n         (New_Val =>\n-           (Text     => new String'(Msg_Buffer (1 .. Msglen)),\n-            Next     => No_Error_Msg,\n-            Prev     => No_Error_Msg,\n-            Sfile    => Get_Source_File_Index (Sptr),\n-            Sptr     => Sptr,\n-            Optr     => Optr,\n-            Line     => Get_Physical_Line_Number (Sptr),\n-            Col      => Get_Column_Number (Sptr),\n-            Warn     => Is_Warning_Msg,\n-            Info     => Is_Info_Msg,\n-            Check    => Is_Check_Msg,\n-            Warn_Err => Warning_Mode = Treat_As_Error,\n-            Warn_Chr => Warning_Msg_Char,\n-            Style    => Is_Style_Msg,\n-            Serious  => Is_Serious_Error,\n-            Uncond   => Is_Unconditional_Msg,\n-            Msg_Cont => Continuation,\n-            Deleted  => False,\n-            Node     => Empty));\n+           (Text                => new String'(Msg_Buffer (1 .. Msglen)),\n+            Next                => No_Error_Msg,\n+            Prev                => No_Error_Msg,\n+            Sfile               => Get_Source_File_Index (Sptr),\n+            Sptr                => Sptr,\n+            Optr                => Optr,\n+            Line                => Get_Physical_Line_Number (Sptr),\n+            Col                 => Get_Column_Number (Sptr),\n+            Compile_Time_Pragma => Is_Compile_Time_Msg,\n+            Warn                => Is_Warning_Msg,\n+            Info                => Is_Info_Msg,\n+            Check               => Is_Check_Msg,\n+            Warn_Err            => Warning_Mode = Treat_As_Error,\n+            Warn_Chr            => Warning_Msg_Char,\n+            Style               => Is_Style_Msg,\n+            Serious             => Is_Serious_Error,\n+            Uncond              => Is_Unconditional_Msg,\n+            Msg_Cont            => Continuation,\n+            Deleted             => False,\n+            Node                => Empty));\n \n       Cur_Msg  := Errors.Last;\n       Prev_Msg := No_Error_Msg;"}, {"sha": "c174073d5081ed190e540bd87624b627fccdd9c8", "filename": "gcc/ada/gnat_rm.texi", "status": "modified", "additions": 812, "deletions": 807, "changes": 1619, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/78689aa295f9b0e54807462d13d3125a5a83c64b/gcc%2Fada%2Fgnat_rm.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/78689aa295f9b0e54807462d13d3125a5a83c64b/gcc%2Fada%2Fgnat_rm.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnat_rm.texi?ref=78689aa295f9b0e54807462d13d3125a5a83c64b"}, {"sha": "9e0263b431d2f45a38c5278f0a60f36df77dfa36", "filename": "gcc/ada/opt.ads", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/78689aa295f9b0e54807462d13d3125a5a83c64b/gcc%2Fada%2Fopt.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/78689aa295f9b0e54807462d13d3125a5a83c64b/gcc%2Fada%2Fopt.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fopt.ads?ref=78689aa295f9b0e54807462d13d3125a5a83c64b", "patch": "@@ -1907,7 +1907,8 @@ package Opt is\n    --  Controls treatment of warning messages. If set to Suppress, warning\n    --  messages are not generated at all. In Normal mode, they are generated\n    --  but do not count as errors. In Treat_As_Error mode, warning messages are\n-   --  generated and treated as errors. In Treat_Run_Time_Warnings_As_Errors,\n+   --  generated and treated as errors, except for warnings emitted by the\n+   --  Compile_Time_Warning pragma. In Treat_Run_Time_Warnings_As_Errors,\n    --  warning messages regarding errors raised at run time are treated as\n    --  errors. Note that Warning_Mode = Suppress causes pragma Warnings to be\n    --  ignored (except for legality checks), unless we are in GNATprove_Mode,"}, {"sha": "689c728294745b6deb88ca52c9c666c6ce1e6a85", "filename": "gcc/ada/sem_prag.adb", "status": "modified", "additions": 8, "deletions": 4, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/78689aa295f9b0e54807462d13d3125a5a83c64b/gcc%2Fada%2Fsem_prag.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/78689aa295f9b0e54807462d13d3125a5a83c64b/gcc%2Fada%2Fsem_prag.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_prag.adb?ref=78689aa295f9b0e54807462d13d3125a5a83c64b", "patch": "@@ -31293,10 +31293,12 @@ package body Sem_Prag is\n \n                   if Force then\n                      if Cont = False then\n-                        Error_Msg (\"<<~!!\", Eloc);\n+                        Error_Msg\n+                           (\"<<~!!\", Eloc, Is_Compile_Time_Pragma => True);\n                         Cont := True;\n                      else\n-                        Error_Msg (\"\\<<~!!\", Eloc);\n+                        Error_Msg\n+                           (\"\\<<~!!\", Eloc, Is_Compile_Time_Pragma => True);\n                      end if;\n \n                   --  Error, rather than warning, or in a body, so we do not\n@@ -31307,10 +31309,12 @@ package body Sem_Prag is\n \n                   else\n                      if Cont = False then\n-                        Error_Msg (\"<<~\", Eloc);\n+                        Error_Msg\n+                           (\"<<~\", Eloc, Is_Compile_Time_Pragma => True);\n                         Cont := True;\n                      else\n-                        Error_Msg (\"\\<<~\", Eloc);\n+                        Error_Msg\n+                           (\"\\<<~\", Eloc, Is_Compile_Time_Pragma => True);\n                      end if;\n                   end if;\n "}]}