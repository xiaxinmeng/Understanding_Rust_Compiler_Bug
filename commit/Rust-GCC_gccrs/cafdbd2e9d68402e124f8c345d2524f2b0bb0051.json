{"sha": "cafdbd2e9d68402e124f8c345d2524f2b0bb0051", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2FmZGJkMmU5ZDY4NDAyZTEyNGY4YzM0NWQyNTI0ZjJiMGJiMDA1MQ==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2009-10-30T13:49:17Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2009-10-30T13:49:17Z"}, "message": "[multiple changes]\n\n2009-10-30  Emmanuel Briot  <briot@adacore.com>\n\n\t* make.adb, osint.adb (Add_Lib_Search_Dir): Do not add if dir is\n\talready in the list.\n\tThis saves system calls when looking for ALI files\n\t(Scan_Make_Args): The parameter to gnatmake's -D is now converted to an\n\tabsolute PATH (so that the above improvement properly occurs if both\n\t-D<dir> and -aO<dir> are specified).\n\n2009-10-30  Thomas Quinot  <quinot@adacore.com>\n\n\t* a-direct.adb: Minor reformatting\n\nFrom-SVN: r153748", "tree": {"sha": "3ba46ceb8444ca32075f53946e4e78bc9bb2c72a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3ba46ceb8444ca32075f53946e4e78bc9bb2c72a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/cafdbd2e9d68402e124f8c345d2524f2b0bb0051", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cafdbd2e9d68402e124f8c345d2524f2b0bb0051", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cafdbd2e9d68402e124f8c345d2524f2b0bb0051", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cafdbd2e9d68402e124f8c345d2524f2b0bb0051/comments", "author": null, "committer": null, "parents": [{"sha": "48263c9aa078ffcec15682edc05724f21d87bfc3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/48263c9aa078ffcec15682edc05724f21d87bfc3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/48263c9aa078ffcec15682edc05724f21d87bfc3"}], "stats": {"total": 364, "additions": 192, "deletions": 172}, "files": [{"sha": "e81446ab27b2c65a0e18fb6638d1843685f9c8b1", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cafdbd2e9d68402e124f8c345d2524f2b0bb0051/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cafdbd2e9d68402e124f8c345d2524f2b0bb0051/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=cafdbd2e9d68402e124f8c345d2524f2b0bb0051", "patch": "@@ -1,3 +1,16 @@\n+2009-10-30  Emmanuel Briot  <briot@adacore.com>\n+\n+\t* make.adb, osint.adb (Add_Lib_Search_Dir): Do not add if dir is\n+\talready in the list.\n+\tThis saves system calls when looking for ALI files\n+\t(Scan_Make_Args): The parameter to gnatmake's -D is now converted to an\n+\tabsolute PATH (so that the above improvement properly occurs if both\n+\t-D<dir> and -aO<dir> are specified).\n+\n+2009-10-30  Thomas Quinot  <quinot@adacore.com>\n+\n+\t* a-direct.adb: Minor reformatting\n+\n 2009-10-30  Emmanuel Briot  <briot@adacore.com>\n \n \t* make.adb, adaint.c, adaint.h, osint.adb, osint.ads, bcheck.adb"}, {"sha": "1013b1514dbbb42ba4d2a75e353223d3ddb57e16", "filename": "gcc/ada/a-direct.adb", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cafdbd2e9d68402e124f8c345d2524f2b0bb0051/gcc%2Fada%2Fa-direct.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cafdbd2e9d68402e124f8c345d2524f2b0bb0051/gcc%2Fada%2Fa-direct.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-direct.adb?ref=cafdbd2e9d68402e124f8c345d2524f2b0bb0051", "patch": "@@ -211,7 +211,8 @@ package body Ada.Directories is\n       else\n          declare\n             --  We need to resolve links because of A.16(47), since we must not\n-            --  return alternative names for files\n+            --  return alternative names for files.\n+\n             Norm    : constant String := Normalize_Pathname (Name);\n             Last_DS : constant Natural :=\n                         Strings.Fixed.Index"}, {"sha": "ee8576436d45ba9b6585fbb034667682e2d02886", "filename": "gcc/ada/make.adb", "status": "modified", "additions": 154, "deletions": 165, "changes": 319, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cafdbd2e9d68402e124f8c345d2524f2b0bb0051/gcc%2Fada%2Fmake.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cafdbd2e9d68402e124f8c345d2524f2b0bb0051/gcc%2Fada%2Fmake.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fmake.adb?ref=cafdbd2e9d68402e124f8c345d2524f2b0bb0051", "patch": "@@ -360,7 +360,7 @@ package body Make is\n    Project_Of_Current_Object_Directory : Project_Id := No_Project;\n    --  The object directory of the project for the last compilation. Avoid\n    --  calling Change_Dir if the current working directory is already this\n-   --  directory\n+   --  directory.\n \n    --  Packages of project files where unknown attributes are errors\n \n@@ -3219,7 +3219,7 @@ package body Make is\n          Source_File      : File_Name_Type;\n          Full_Source_File : File_Name_Type;\n          Source_File_Attr : aliased File_Attributes;\n-         --  The full name of the source file, and its attributes (size,...)\n+         --  The full name of the source file and its attributes (size, ...)\n \n          Source_Unit      : Unit_Name_Type;\n          Source_Index     : Int;\n@@ -3230,7 +3230,7 @@ package body Make is\n          Lib_File_Attr    : aliased File_Attributes;\n          Read_Only        : Boolean := False;\n          ALI              : ALI_Id;\n-         --  The ALI file and its attributes (size, stamp,...)\n+         --  The ALI file and its attributes (size, stamp, ...)\n \n          Obj_File         : File_Name_Type;\n          Obj_Stamp        : Time_Stamp_Type;\n@@ -3262,7 +3262,7 @@ package body Make is\n               and then In_Ada_Lib_Dir (Full_Lib_File);\n \n             --  Since the following requires a system call, we precompute it\n-            --  when needed\n+            --  when needed.\n \n             if not In_Lib_Dir then\n                if Full_Lib_File /= No_File\n@@ -3286,11 +3286,10 @@ package body Make is\n                   Prefix => \"  \",\n                   Minimum_Verbosity => Opt.High);\n \n-               --  If the library file is a read-only library skip it, but\n-               --  only if, when using project files, this library file is\n-               --  in the right object directory (a read-only ALI file\n-               --  in the object directory of a project being extended\n-               --  should not be skipped).\n+               --  If the library file is a read-only library skip it, but only\n+               --  if, when using project files, this library file is in the\n+               --  right object directory (a read-only ALI file in the object\n+               --  directory of a project being extended must not be skipped).\n \n             elsif Read_Only\n               and then Is_In_Object_Directory (Source_File, Full_Lib_File)\n@@ -3307,7 +3306,7 @@ package body Make is\n                Record_Failure (Source_File, Source_Unit, False);\n \n                --  Source and library files can be located but are internal\n-               --  files\n+               --  files.\n \n             elsif not Check_Readonly_Files\n               and then Full_Lib_File /= No_File\n@@ -3397,6 +3396,7 @@ package body Make is\n \n                         if Do_Not_Execute then\n                            --  Exit the main loop\n+\n                            return True;\n                         end if;\n                      end if;\n@@ -3422,14 +3422,14 @@ package body Make is\n                      else\n                         --  We will recompile, so we'll have to guess the\n                         --  location of the object file based on the command\n-                        --  line switches and object_dir\n+                        --  line switches and Object_Dir.\n \n                         Full_Lib_File := No_File;\n                         Lib_File_Attr := Unknown_Attributes;\n                      end if;\n \n-                     --  Start the compilation and record it. We can do\n-                     --  this because there is at least one free process.\n+                     --  Start the compilation and record it. We can do this\n+                     --  because there is at least one free process.\n \n                      Collect_Arguments_And_Compile\n                        (Full_Source_File => Full_Source_File,\n@@ -3438,8 +3438,7 @@ package body Make is\n                         Pid              => Pid,\n                         Process_Created  => Process_Created);\n \n-                     --  Make sure we could successfully start\n-                     --  the Compilation.\n+                     --  Make sure we could successfully start the compilation\n \n                      if Process_Created then\n                         if Pid = Invalid_Pid then\n@@ -3493,9 +3492,9 @@ package body Make is\n                                                Check_Object_Consistency;\n \n                begin\n-                  --  If compilation was not OK, or if output is not an\n-                  --  object file and we don't do the bind step, don't check\n-                  --  for object consistency.\n+                  --  If compilation was not OK, or if output is not an object\n+                  --  file and we don't do the bind step, don't check for\n+                  --  object consistency.\n \n                   Check_Object_Consistency :=\n                     Check_Object_Consistency\n@@ -3508,10 +3507,11 @@ package body Make is\n                      --    -i => in place mode. In such a case, Full_Lib_File\n                      --          has already been set above\n                      --    -D => if specified\n-                     --    or defaults in current dir\n+                     --  or defaults in current dir.\n+                     --\n                      --  We could simply use a call similar to\n                      --     Osint.Full_Lib_File_Name (Lib_File)\n-                     --  but that involves system calls and is thus slower\n+                     --  but that involves system calls and is thus slower.\n \n                      if Object_Directory_Path /= null then\n                         Name_Len := 0;\n@@ -3524,7 +3524,7 @@ package body Make is\n                      end if;\n \n                      --  Invalidate the cache for the attributes, since the\n-                     --  file was just created\n+                     --  file was just created.\n \n                      Data.Lib_File_Attr := Unknown_Attributes;\n                   end if;\n@@ -3629,7 +3629,7 @@ package body Make is\n       Main_Unit             := False;\n \n       --  Keep looping until there is no more work to do (the Q is empty)\n-      --  and all the outstanding compilations have terminated\n+      --  and all the outstanding compilations have terminated.\n \n       Make_Loop : while not Empty_Q or else Outstanding_Compiles > 0 loop\n          exit Make_Loop when Must_Exit_Because_Of_Error;\n@@ -3638,7 +3638,8 @@ package body Make is\n          Wait_For_Available_Slot;\n \n          --  ??? Should be done as soon as we add a Good_ALI, wouldn't it avoid\n-         --  the need for a list of good ALI ?\n+         --  the need for a list of good ALI?\n+\n          Fill_Queue_From_ALI_Files;\n \n          if Display_Compilation_Progress then\n@@ -3896,7 +3897,7 @@ package body Make is\n                --  recreate another config file: we cannot reuse the one that\n                --  we just deleted!\n \n-               Proj.Project.Config_Checked := False;\n+               Proj.Project.Config_Checked   := False;\n                Proj.Project.Config_File_Name := No_Path;\n                Proj.Project.Config_File_Temp := False;\n             end if;\n@@ -3947,8 +3948,8 @@ package body Make is\n                   then\n                      Temporary_Config_File := False;\n \n-                     --  Do not display the -F=mapping_file switch for\n-                     --  gnatbind, if -dn is not specified.\n+                     --  Do not display the -F=mapping_file switch for gnatbind\n+                     --  if -dn is not specified.\n \n                   elsif Debug.Debug_Flag_N\n                     or else Args (J)'Length < 4\n@@ -4108,8 +4109,7 @@ package body Make is\n       Total_Compilation_Failures : Natural := 0;\n \n       Is_Main_Unit : Boolean;\n-      --  Set to True by Compile_Sources if the Main_Source_File can be a\n-      --  main unit.\n+      --  Set True by Compile_Sources if Main_Source_File can be a main unit\n \n       Main_ALI_File : File_Name_Type;\n       --  The ali file corresponding to Main_Source_File\n@@ -4118,8 +4118,8 @@ package body Make is\n       --  The file name of an executable\n \n       Non_Std_Executable : Boolean := False;\n-      --  Non_Std_Executable is set to True when there is a possibility\n-      --  that the linker will not choose the correct executable file name.\n+      --  Non_Std_Executable is set to True when there is a possibility that\n+      --  the linker will not choose the correct executable file name.\n \n       Current_Work_Dir : constant String_Access :=\n                                     new String'(Get_Current_Dir);\n@@ -4170,8 +4170,8 @@ package body Make is\n          loop\n             declare\n                Main      : constant String := Mains.Next_Main;\n-               --  The name specified on the command line may include\n-               --  directory information.\n+               --  The name specified on the command line may include directory\n+               --  information.\n \n                File_Name : constant String := Base_Name (Main);\n                --  The simple file name of the current main\n@@ -4186,17 +4186,16 @@ package body Make is\n                Proj := Prj.Env.Project_Of\n                          (File_Name, Main_Project, Project_Tree);\n \n-               --  Fail if the current main is not a source of a\n-               --  project.\n+               --  Fail if the current main is not a source of a project\n \n                if Proj = No_Project then\n                   Make_Failed\n                     (\"\"\"\" & Main & \"\"\" is not a source of any project\");\n \n                else\n-                  --  If there is directory information, check that\n-                  --  the source exists and, if it does, that the path\n-                  --  is the actual path of a source of a project.\n+                  --  If there is directory information, check that the source\n+                  --  exists and, if it does, that the path is the actual path\n+                  --  of a source of a project.\n \n                   if Main /= File_Name then\n                      Lang := Get_Language_From_Name (Main_Project, \"ada\");\n@@ -4270,8 +4269,8 @@ package body Make is\n \n                      elsif Proj /= Real_Main_Project then\n \n-                        --  Fail, as the current main is not a source\n-                        --  of the same project as the first main.\n+                        --  Fail, as the current main is not a source of the\n+                        --  same project as the first main.\n \n                         Make_Failed\n                           (\"\"\"\" & Main &\n@@ -4281,9 +4280,9 @@ package body Make is\n                   end if;\n                end if;\n \n-               --  If -u and -U are not used, we may have mains that\n-               --  are sources of a project that is not the one\n-               --  specified with switch -P.\n+               --  If -u and -U are not used, we may have mains that are\n+               --  sources of a project that is not the one specified with\n+               --  switch -P.\n \n                if not Unique_Compile then\n                   Main_Project := Real_Main_Project;\n@@ -4345,8 +4344,7 @@ package body Make is\n                          (Unit.File_Names (Impl).Display_File);\n                      ALI_Project := Unit.File_Names (Impl).Project;\n \n-                     --  Otherwise, if there is a spec, put it in the\n-                     --  mapping.\n+                     --  Otherwise, if there is a spec, put it in the mapping\n \n                   elsif Unit.File_Names (Spec) /= No_Source\n                     and then Unit.File_Names (Spec).Project /=\n@@ -4367,8 +4365,9 @@ package body Make is\n                   --  If we have something to put in the mapping then do it\n                   --  now. However, if the project is extended, we don't put\n                   --  anything in the mapping file, because we don't know where\n-                  --  the ALI file is: it might be in the extended project obj\n-                  --  dir as well as in the extending project obj dir.\n+                  --  the ALI file is: it might be in the extended project\n+                  --  object directory as well as in the extending project\n+                  --  object directory.\n \n                   if ALI_Name /= No_File\n                     and then ALI_Project.Extended_By = No_Project\n@@ -4461,8 +4460,8 @@ package body Make is\n \n             OK := OK and Status;\n \n-            --  If the creation of the mapping file was successful,\n-            --  we add the switch to the arguments of gnatbind.\n+            --  If the creation of the mapping file was successful, we add the\n+            --  switch to the arguments of gnatbind.\n \n             if OK then\n                Last_Arg := Last_Arg + 1;\n@@ -4474,7 +4473,7 @@ package body Make is\n \n    --  Start of processing for Gnatmake\n \n-   --  This body is very long, should be broken down ???\n+   --  This body is very long, should be broken down???\n \n    begin\n       Install_Int_Handler (Sigint_Intercepted'Access);\n@@ -4527,10 +4526,10 @@ package body Make is\n             end if;\n \n             --  Specify -n for gnatbind and add the ALI files of all the\n-            --  sources, except the one which is a fake main subprogram:\n-            --  this is the one for the binder generated file and it will be\n-            --  transmitted to gnatlink. These sources are those that are\n-            --  in the queue.\n+            --  sources, except the one which is a fake main subprogram: this\n+            --  is the one for the binder generated file and it will be\n+            --  transmitted to gnatlink. These sources are those that are in\n+            --  the queue.\n \n             Add_Switch (\"-n\", Binder, And_Save => True);\n \n@@ -4547,8 +4546,8 @@ package body Make is\n \n       elsif Main_Project /= No_Project then\n \n-         --  If the main project file is a library project file, main(s)\n-         --  cannot be specified on the command line.\n+         --  If the main project file is a library project file, main(s) cannot\n+         --  be specified on the command line.\n \n          if Osint.Number_Of_Files /= 0 then\n             if Main_Project.Library\n@@ -4566,10 +4565,10 @@ package body Make is\n                Check_Mains;\n             end if;\n \n-         --  If no mains have been specified on the command line,\n-         --  and we are using a project file, we either find the main(s)\n-         --  in the attribute Main of the main project, or we put all\n-         --  the sources of the project file as mains.\n+         --  If no mains have been specified on the command line, and we are\n+         --  using a project file, we either find the main(s) in attribute\n+         --  Main of the main project, or we put all the sources of the project\n+         --  file as mains.\n \n          else\n             if Main_Index /= 0 then\n@@ -4581,16 +4580,16 @@ package body Make is\n                Value : String_List_Id := Main_Project.Mains;\n \n             begin\n-               --  The attribute Main is an empty list or not specified,\n-               --  or else gnatmake was invoked with the switch \"-u\".\n+               --  The attribute Main is an empty list or not specified, or\n+               --  else gnatmake was invoked with the switch \"-u\".\n \n                if Value = Prj.Nil_String or else Unique_Compile then\n \n                   if (not Make_Steps) or else Compile_Only\n                     or else not Main_Project.Library\n                   then\n-                     --  First make sure that the binder and the linker\n-                     --  will not be invoked.\n+                     --  First make sure that the binder and the linker will\n+                     --  not be invoked.\n \n                      Do_Bind_Step := False;\n                      Do_Link_Step := False;\n@@ -4618,8 +4617,8 @@ package body Make is\n \n                else\n                   --  The attribute Main is not an empty list.\n-                  --  Put all the main subprograms in the list as if there\n-                  --  were specified on the command line. However, if attribute\n+                  --  Put all the main subprograms in the list as if they were\n+                  --  specified on the command line. However, if attribute\n                   --  Languages includes a language other than Ada, only\n                   --  include the Ada mains; if there is no Ada main, compile\n                   --  all the sources of the project.\n@@ -4883,8 +4882,8 @@ package body Make is\n                             & \"\"\" is not a unit of project \"\n                             & Project_File_Name.all & \".\");\n             else\n-               --  Remove any directory information from the main\n-               --  source file name.\n+               --  Remove any directory information from the main source file\n+               --  file name.\n \n                declare\n                   Pos : Natural := Main_Unit_File_Name'Last;\n@@ -5156,8 +5155,8 @@ package body Make is\n       end if;\n \n       --  Get the target parameters, which are only needed for a couple of\n-      --  cases in gnatmake. Protect against an exception, such as the case\n-      --  of system.ads missing from the library, and fail gracefully.\n+      --  cases in gnatmake. Protect against an exception, such as the case of\n+      --  system.ads missing from the library, and fail gracefully.\n \n       begin\n          Targparm.Get_Target_Parameters;\n@@ -5250,8 +5249,8 @@ package body Make is\n             end;\n          end if;\n \n-         --  If a relative path output file has been specified, we add\n-         --  the exec directory.\n+         --  If a relative path output file has been specified, we add the\n+         --  exec directory.\n \n          for J in reverse 1 .. Saved_Linker_Switches.Last - 1 loop\n             if Saved_Linker_Switches.Table (J).all = Output_Flag.all then\n@@ -5372,9 +5371,9 @@ package body Make is\n          The_Saved_Gcc_Switches (The_Saved_Gcc_Switches'Last) := No_gnat_adc;\n       end if;\n \n-      --  If there was a --GCC, --GNATBIND or --GNATLINK switch on\n-      --  the command line, then we have to use it, even if there was\n-      --  another switch in the project file.\n+      --  If there was a --GCC, --GNATBIND or --GNATLINK switch on the command\n+      --  line, then we have to use it, even if there was another switch in\n+      --  the project file.\n \n       if Saved_Gcc /= null then\n          Gcc := Saved_Gcc;\n@@ -6691,8 +6690,8 @@ package body Make is\n \n       Mains.Delete;\n \n-      --  Add the directory where gnatmake is invoked in front of the\n-      --  path, if gnatmake is invoked from a bin directory or with directory\n+      --  Add the directory where gnatmake is invoked in front of the path,\n+      --  if gnatmake is invoked from a bin directory or with directory\n       --  information. Only do this if the platform is not VMS, where the\n       --  notion of path does not really exist.\n \n@@ -6860,8 +6859,8 @@ package body Make is\n             Write_Eol;\n          end if;\n \n-         --  We add the source directories and the object directories\n-         --  to the search paths.\n+         --  We add the source directories and the object directories to the\n+         --  search paths.\n \n          Add_Source_Directories (Main_Project, Project_Tree);\n          Add_Object_Directories (Main_Project);\n@@ -7022,9 +7021,8 @@ package body Make is\n            and then not Unit.File_Names (Spec).Locally_Removed\n            and then Check_Project (Unit.File_Names (Spec).Project)\n          then\n-            --  If there is no source for the body, but there is a source\n-            --  for the spec which has not been locally removed, then we take\n-            --  this one.\n+            --  If there is no source for the body, but there is one for the\n+            --  spec which has not been locally removed, then we take this one.\n \n             Sfile := Unit.File_Names (Spec).Display_File;\n             Index := Unit.File_Names (Spec).Index;\n@@ -7368,9 +7366,9 @@ package body Make is\n       B : Byte;\n \n       function Base_Directory return String;\n-      --  If Dir comes from the command line, empty string (relative paths\n-      --  are resolved with respect to the current directory), else return\n-      --  the main project's directory.\n+      --  If Dir comes from the command line, empty string (relative paths are\n+      --  resolved with respect to the current directory), else return the main\n+      --  project's directory.\n \n       --------------------\n       -- Base_Directory --\n@@ -7671,7 +7669,7 @@ package body Make is\n \n       --  If the previous switch has set the Object_Directory_Present flag\n       --  (that is we have seen a -D), then the next argument is the path name\n-      --  of the object directory..\n+      --  of the object directory.\n \n       elsif Object_Directory_Present\n         and then not Object_Directory_Seen\n@@ -7685,21 +7683,26 @@ package body Make is\n             Make_Failed (\"cannot find object directory \"\"\" & Argv & \"\"\"\");\n \n          else\n-            Add_Lib_Search_Dir (Argv);\n+            --  Record the object directory. Make sure it ends with a directory\n+            --  separator.\n+\n+            declare\n+               Norm : constant String := Normalize_Pathname (Argv);\n+            begin\n+               if Norm (Norm'Last) = Directory_Separator then\n+                  Object_Directory_Path := new String'(Norm);\n+               else\n+                  Object_Directory_Path :=\n+                    new String'(Norm & Directory_Separator);\n+               end if;\n \n-            --  Specify the object directory to the binder\n+               Add_Lib_Search_Dir (Norm);\n \n-            Add_Switch (\"-aO\" & Argv, Binder, And_Save => And_Save);\n+               --  Specify the object directory to the binder\n \n-            --  Record the object directory. Make sure it ends with a directory\n-            --  separator.\n+               Add_Switch (\"-aO\" & Norm, Binder, And_Save => And_Save);\n+            end;\n \n-            if Argv (Argv'Last) = Directory_Separator then\n-               Object_Directory_Path := new String'(Argv);\n-            else\n-               Object_Directory_Path :=\n-                 new String'(Argv & Directory_Separator);\n-            end if;\n          end if;\n \n       --  Then check if we are dealing with -cargs/-bargs/-largs/-margs\n@@ -7722,18 +7725,17 @@ package body Make is\n                raise Program_Error;\n          end case;\n \n-      --  A special test is needed for the -o switch within a -largs\n-      --  since that is another way to specify the name of the final\n-      --  executable.\n+      --  A special test is needed for the -o switch within a -largs since that\n+      --  is another way to specify the name of the final executable.\n \n       elsif Program_Args = Linker\n         and then Argv = \"-o\"\n       then\n          Make_Failed (\"switch -o not allowed within a -largs. \" &\n                       \"Use -o directly.\");\n \n-      --  Check to see if we are reading switches after a -cargs,\n-      --  -bargs or -largs switch. If yes save it.\n+      --  Check to see if we are reading switches after a -cargs, -bargs or\n+      --  -largs switch. If so, save it.\n \n       elsif Program_Args /= None then\n \n@@ -7776,9 +7778,7 @@ package body Make is\n \n                for J in 2 .. Program_Args.all'Last loop\n                   Add_Switch\n-                    (Program_Args.all (J).all,\n-                     Compiler,\n-                     And_Save => And_Save);\n+                    (Program_Args.all (J).all, Compiler, And_Save => And_Save);\n                end loop;\n             end;\n \n@@ -7826,7 +7826,7 @@ package body Make is\n            Argv (1 .. 5) = \"--RTS\"\n          then\n             Add_Switch (Argv, Compiler, And_Save => And_Save);\n-            Add_Switch (Argv, Binder, And_Save => And_Save);\n+            Add_Switch (Argv, Binder,   And_Save => And_Save);\n \n             if Argv'Length <= 6 or else Argv (6) /= '=' then\n                Make_Failed (\"missing path for --RTS\");\n@@ -7889,7 +7889,7 @@ package body Make is\n            Argv (1 .. 8) = \"--param=\"\n          then\n             Add_Switch (Argv, Compiler, And_Save => And_Save);\n-            Add_Switch (Argv, Linker, And_Save => And_Save);\n+            Add_Switch (Argv, Linker,   And_Save => And_Save);\n \n          else\n             Scan_Make_Switches (Project_Node_Tree, Argv, Success);\n@@ -7927,18 +7927,17 @@ package body Make is\n          --  -Idir\n \n          elsif Argv (2) = 'I' then\n-            Add_Source_Search_Dir (Argv (3 .. Argv'Last), And_Save);\n+            Add_Source_Search_Dir  (Argv (3 .. Argv'Last), And_Save);\n             Add_Library_Search_Dir (Argv (3 .. Argv'Last), And_Save);\n             Add_Switch (Argv, Compiler, And_Save => And_Save);\n-            Add_Switch (Argv, Binder, And_Save => And_Save);\n+            Add_Switch (Argv, Binder,   And_Save => And_Save);\n \n          --  -aIdir (to gcc this is like a -I switch)\n \n          elsif Argv'Length >= 3 and then Argv (2 .. 3) = \"aI\" then\n             Add_Source_Search_Dir (Argv (4 .. Argv'Last), And_Save);\n-            Add_Switch (\"-I\" & Argv (4 .. Argv'Last),\n-                        Compiler,\n-                        And_Save => And_Save);\n+            Add_Switch\n+              (\"-I\" & Argv (4 .. Argv'Last), Compiler, And_Save => And_Save);\n             Add_Switch (Argv, Binder, And_Save => And_Save);\n \n          --  -aOdir\n@@ -7952,9 +7951,8 @@ package body Make is\n          elsif Argv'Length >= 3 and then Argv (2 .. 3) = \"aL\" then\n             Mark_Directory (Argv (4 .. Argv'Last), Ada_Lib_Dir, And_Save);\n             Add_Library_Search_Dir (Argv (4 .. Argv'Last), And_Save);\n-            Add_Switch (\"-aO\" & Argv (4 .. Argv'Last),\n-                        Binder,\n-                        And_Save => And_Save);\n+            Add_Switch\n+              (\"-aO\" & Argv (4 .. Argv'Last), Binder, And_Save => And_Save);\n \n          --  -aamp_target=...\n \n@@ -7972,26 +7970,24 @@ package body Make is\n \n          elsif Argv (2) = 'A' then\n             Mark_Directory (Argv (3 .. Argv'Last), Ada_Lib_Dir, And_Save);\n-            Add_Source_Search_Dir (Argv (3 .. Argv'Last), And_Save);\n+            Add_Source_Search_Dir  (Argv (3 .. Argv'Last), And_Save);\n             Add_Library_Search_Dir (Argv (3 .. Argv'Last), And_Save);\n-            Add_Switch (\"-I\"  & Argv (3 .. Argv'Last),\n-                        Compiler,\n-                        And_Save => And_Save);\n-            Add_Switch (\"-aO\" & Argv (3 .. Argv'Last),\n-                        Binder,\n-                        And_Save => And_Save);\n+            Add_Switch\n+              (\"-I\"  & Argv (3 .. Argv'Last), Compiler, And_Save => And_Save);\n+            Add_Switch\n+              (\"-aO\" & Argv (3 .. Argv'Last), Binder,   And_Save => And_Save);\n \n          --  -Ldir\n \n          elsif Argv (2) = 'L' then\n             Add_Switch (Argv, Linker, And_Save => And_Save);\n \n          --  For -gxxxxx, -pg, -mxxx, -fxxx: give the switch to both the\n-         --  compiler and the linker (except for -gnatxxx which is only for\n-         --  the compiler). Some of the -mxxx (for example -m64) and -fxxx\n-         --  (for example -ftest-coverage for gcov) need to be used when\n-         --  compiling the binder generated files, and using all these gcc\n-         --  switches for the binder generated files should not be a problem.\n+         --  compiler and the linker (except for -gnatxxx which is only for the\n+         --  compiler). Some of the -mxxx (for example -m64) and -fxxx (for\n+         --  example -ftest-coverage for gcov) need to be used when compiling\n+         --  the binder generated files, and using all these gcc switches for\n+         --  the binder generated files should not be a problem.\n \n          elsif\n            (Argv (2) = 'g' and then (Argv'Last < 5\n@@ -8001,7 +7997,7 @@ package body Make is\n              or else (Argv (2) = 'f' and then Argv'Last > 2)\n          then\n             Add_Switch (Argv, Compiler, And_Save => And_Save);\n-            Add_Switch (Argv, Linker, And_Save => And_Save);\n+            Add_Switch (Argv, Linker,   And_Save => And_Save);\n \n             --  The following condition has to be kept synchronized with\n             --  the Process_Multilib one.\n@@ -8027,26 +8023,24 @@ package body Make is\n \n          elsif Argv'Last = 2 and then Argv (2) = 'D' then\n             if Project_File_Name /= null then\n-               Make_Failed (\"-D cannot be used in conjunction with a \" &\n-                            \"project file\");\n+               Make_Failed\n+                 (\"-D cannot be used in conjunction with a project file\");\n \n             else\n                Scan_Make_Switches (Project_Node_Tree, Argv, Success);\n             end if;\n \n          --  -d\n \n-         elsif Argv (2) = 'd'\n-           and then Argv'Last = 2\n-         then\n+         elsif Argv (2) = 'd' and then Argv'Last = 2 then\n             Display_Compilation_Progress := True;\n \n          --  -i\n \n          elsif Argv'Last = 2 and then Argv (2) = 'i' then\n             if Project_File_Name /= null then\n-               Make_Failed (\"-i cannot be used in conjunction with a \" &\n-                            \"project file\");\n+               Make_Failed\n+                 (\"-i cannot be used in conjunction with a project file\");\n             else\n                Scan_Make_Switches (Project_Node_Tree, Argv, Success);\n             end if;\n@@ -8062,31 +8056,27 @@ package body Make is\n \n          --  -m\n \n-         elsif Argv (2) = 'm'\n-           and then Argv'Last = 2\n-         then\n+         elsif Argv (2) = 'm' and then Argv'Last = 2 then\n             Minimal_Recompilation := True;\n \n          --  -u\n \n-         elsif Argv (2) = 'u'\n-           and then Argv'Last = 2\n-         then\n-            Unique_Compile   := True;\n-            Compile_Only := True;\n-            Do_Bind_Step     := False;\n-            Do_Link_Step     := False;\n+         elsif Argv (2) = 'u' and then Argv'Last = 2 then\n+            Unique_Compile := True;\n+            Compile_Only   := True;\n+            Do_Bind_Step   := False;\n+            Do_Link_Step   := False;\n \n          --  -U\n \n          elsif Argv (2) = 'U'\n            and then Argv'Last = 2\n          then\n             Unique_Compile_All_Projects := True;\n-            Unique_Compile   := True;\n-            Compile_Only := True;\n-            Do_Bind_Step     := False;\n-            Do_Link_Step     := False;\n+            Unique_Compile := True;\n+            Compile_Only   := True;\n+            Do_Bind_Step   := False;\n+            Do_Link_Step   := False;\n \n          --  -Pprj or -P prj (only once, and only on the command line)\n \n@@ -8095,16 +8085,16 @@ package body Make is\n                Make_Failed (\"cannot have several project files specified\");\n \n             elsif Object_Directory_Path /= null then\n-               Make_Failed (\"-D cannot be used in conjunction with a \" &\n-                            \"project file\");\n+               Make_Failed\n+                 (\"-D cannot be used in conjunction with a project file\");\n \n             elsif In_Place_Mode then\n-               Make_Failed (\"-i cannot be used in conjunction with a \" &\n-                            \"project file\");\n+               Make_Failed\n+                 (\"-i cannot be used in conjunction with a project file\");\n \n             elsif not And_Save then\n \n-               --  It could be a tool other than gnatmake (i.e, gnatdist)\n+               --  It could be a tool other than gnatmake (e.g. gnatdist)\n                --  or a -P switch inside a project file.\n \n                Fail\n@@ -8145,31 +8135,30 @@ package body Make is\n          elsif Argv (2) = 'X'\n            and then Is_External_Assignment (Project_Node_Tree, Argv)\n          then\n-            --  Is_External_Assignment has side effects\n-            --  when it returns True;\n+            --  Is_External_Assignment has side effects when it returns True\n \n             null;\n \n-         --  If -gnath is present, then generate the usage information\n-         --  right now and do not pass this option on to the compiler calls.\n+         --  If -gnath is present, then generate the usage information right\n+         --  now and do not pass this option on to the compiler calls.\n \n          elsif Argv = \"-gnath\" then\n             Usage;\n \n-         --  If -gnatc is specified, make sure the bind step and the link\n-         --  step are not executed.\n+         --  If -gnatc is specified, make sure the bind and link steps are not\n+         --  executed.\n \n          elsif Argv'Length >= 6 and then Argv (2 .. 6) = \"gnatc\" then\n \n-            --  If -gnatc is specified, make sure the bind step and the link\n-            --  step are not executed.\n+            --  If -gnatc is specified, make sure the bind and link steps are\n+            --  not executed.\n \n             Add_Switch (Argv, Compiler, And_Save => And_Save);\n-            Operating_Mode := Check_Semantics;\n+            Operating_Mode           := Check_Semantics;\n             Check_Object_Consistency := False;\n             Compile_Only             := True;\n-            Do_Bind_Step                 := False;\n-            Do_Link_Step                 := False;\n+            Do_Bind_Step             := False;\n+            Do_Link_Step             := False;\n \n          elsif Argv (2 .. Argv'Last) = \"nostdlib\" then\n \n@@ -8187,7 +8176,7 @@ package body Make is\n \n             No_Stdinc := True;\n             Add_Switch (Argv, Compiler, And_Save => And_Save);\n-            Add_Switch (Argv, Binder, And_Save => And_Save);\n+            Add_Switch (Argv, Binder,   And_Save => And_Save);\n \n          --  All other switches are processed by Scan_Make_Switches. If the\n          --  call returns with Gnatmake_Switch_Found = False, then the switch"}, {"sha": "0c95ff14ef54473b767f590b33760be939fdf29b", "filename": "gcc/ada/osint.adb", "status": "modified", "additions": 23, "deletions": 6, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cafdbd2e9d68402e124f8c345d2524f2b0bb0051/gcc%2Fada%2Fosint.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cafdbd2e9d68402e124f8c345d2524f2b0bb0051/gcc%2Fada%2Fosint.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fosint.adb?ref=cafdbd2e9d68402e124f8c345d2524f2b0bb0051", "patch": "@@ -582,9 +582,25 @@ package body Osint is\n          Fail (\"missing library directory name\");\n       end if;\n \n-      Lib_Search_Directories.Increment_Last;\n-      Lib_Search_Directories.Table (Lib_Search_Directories.Last) :=\n-        Normalize_Directory_Name (Dir);\n+      declare\n+         Norm : String_Ptr := Normalize_Directory_Name (Dir);\n+      begin\n+\n+         --  Do nothing if the directory is already in the list. This saves\n+         --  system calls and avoid unneeded work\n+\n+         for D in Lib_Search_Directories.First ..\n+           Lib_Search_Directories.Last\n+         loop\n+            if Lib_Search_Directories.Table (D).all = Norm.all then\n+               Free (Norm);\n+               return;\n+            end if;\n+         end loop;\n+\n+         Lib_Search_Directories.Increment_Last;\n+         Lib_Search_Directories.Table (Lib_Search_Directories.Last) := Norm;\n+      end;\n    end Add_Lib_Search_Dir;\n \n    ---------------------\n@@ -1021,9 +1037,9 @@ package body Osint is\n       Get_Name_String (Name);\n \n       --  File_Time_Stamp will always return Invalid_Time if the file does not\n-      --  exist, and that OS_Time_To_GNAT_Time will convert that to\n+      --  exist, and OS_Time_To_GNAT_Time will convert this value to\n       --  Empty_Time_Stamp. Therefore we do not need to first test whether the\n-      --  file actually exists, which saves a system call\n+      --  file actually exists, which saves a system call.\n \n       return OS_Time_To_GNAT_Time\n         (File_Time_Stamp (Name_Buffer (1 .. Name_Len)));\n@@ -1732,7 +1748,8 @@ package body Osint is\n       elsif T = Library then\n          Dir_Name := Lib_Search_Directories.Table (Dir);\n \n-      else pragma Assert (T /= Config);\n+      else\n+         pragma Assert (T /= Config);\n          Dir_Name := Src_Search_Directories.Table (Dir);\n       end if;\n "}]}