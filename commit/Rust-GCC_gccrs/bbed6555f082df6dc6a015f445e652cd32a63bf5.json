{"sha": "bbed6555f082df6dc6a015f445e652cd32a63bf5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmJlZDY1NTVmMDgyZGY2ZGM2YTAxNWY0NDVlNjUyY2QzMmE2M2JmNQ==", "commit": {"author": {"name": "Rainer Orth", "email": "ro@CeBiTec.Uni-Bielefeld.DE", "date": "2010-11-10T17:48:42Z"}, "committer": {"name": "Rainer Orth", "email": "ro@gcc.gnu.org", "date": "2010-11-10T17:48:42Z"}, "message": "rtti3.C: Scan for .weakext on alpha*-dec-osf*.\n\n\t* g++.dg/abi/rtti3.C: Scan for .weakext on alpha*-dec-osf*.\n\t* g++.dg/abi/thunk4.C: Likewise.\n\t* g++.dg/opt/combine.C: Add dg-require-visibility.\n\t* g++.dg/other/anon5.C: Skip on alpha*-dec-osf*.\n\t* g++.dg/warn/miss-format-1.C: XFAIL scanf attribute warning on\n\talpha*-dec-osf*.\n\t* g++.dg/warn/pr31246.C: XFAIL on alpha*-dec-osf*.\n\t* g++.dg/warn/weak1.C: Skip on alpha*-dec-osf*.\n\t* g++.old-deja/g++.eh/badalloc1.C [!STACK_SIZE && __osf__]: Use\n\tlarge arena_size.\n\t* gcc.dg/attr-weakref-1.c: Skip on alpha*-dec-osf*.\n\t* gcc.dg/intmax_t-1.c: Likewise.\n\nFrom-SVN: r166548", "tree": {"sha": "024013da9f500120c8a72e51f985dd67ddbe4298", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/024013da9f500120c8a72e51f985dd67ddbe4298"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/bbed6555f082df6dc6a015f445e652cd32a63bf5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bbed6555f082df6dc6a015f445e652cd32a63bf5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bbed6555f082df6dc6a015f445e652cd32a63bf5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bbed6555f082df6dc6a015f445e652cd32a63bf5/comments", "author": {"login": "rorth", "id": 3930951, "node_id": "MDQ6VXNlcjM5MzA5NTE=", "avatar_url": "https://avatars.githubusercontent.com/u/3930951?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rorth", "html_url": "https://github.com/rorth", "followers_url": "https://api.github.com/users/rorth/followers", "following_url": "https://api.github.com/users/rorth/following{/other_user}", "gists_url": "https://api.github.com/users/rorth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rorth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rorth/subscriptions", "organizations_url": "https://api.github.com/users/rorth/orgs", "repos_url": "https://api.github.com/users/rorth/repos", "events_url": "https://api.github.com/users/rorth/events{/privacy}", "received_events_url": "https://api.github.com/users/rorth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "0149d8ccb1cfe6fc118cc4b9aa8f06369b8bb25c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0149d8ccb1cfe6fc118cc4b9aa8f06369b8bb25c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0149d8ccb1cfe6fc118cc4b9aa8f06369b8bb25c"}], "stats": {"total": 51, "additions": 37, "deletions": 14}, "files": [{"sha": "5143d156b09dad3f9d38242f20de7cf58806a84f", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bbed6555f082df6dc6a015f445e652cd32a63bf5/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bbed6555f082df6dc6a015f445e652cd32a63bf5/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=bbed6555f082df6dc6a015f445e652cd32a63bf5", "patch": "@@ -1,3 +1,18 @@\n+2010-11-10  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>\n+\n+\t* g++.dg/abi/rtti3.C: Scan for .weakext on alpha*-dec-osf*.\n+\t* g++.dg/abi/thunk4.C: Likewise.\n+\t* g++.dg/opt/combine.C: Add dg-require-visibility.\n+\t* g++.dg/other/anon5.C: Skip on alpha*-dec-osf*.\n+\t* g++.dg/warn/miss-format-1.C: XFAIL scanf attribute warning on\n+\talpha*-dec-osf*.\n+\t* g++.dg/warn/pr31246.C: XFAIL on alpha*-dec-osf*.\n+\t* g++.dg/warn/weak1.C: Skip on alpha*-dec-osf*.\n+\t* g++.old-deja/g++.eh/badalloc1.C [!STACK_SIZE && __osf__]: Use\n+\tlarge arena_size.\n+\t* gcc.dg/attr-weakref-1.c: Skip on alpha*-dec-osf*.\n+\t* gcc.dg/intmax_t-1.c: Likewise.\n+\n 2010-11-10  Tobias Burnus <burnus@net-b.de>\n \n \tPR fortran/46244"}, {"sha": "60dc9b8d628c1ab543a37ec6470df703ea0b9001", "filename": "gcc/testsuite/g++.dg/abi/rtti3.C", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bbed6555f082df6dc6a015f445e652cd32a63bf5/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fabi%2Frtti3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bbed6555f082df6dc6a015f445e652cd32a63bf5/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fabi%2Frtti3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fabi%2Frtti3.C?ref=bbed6555f082df6dc6a015f445e652cd32a63bf5", "patch": "@@ -3,10 +3,12 @@\n \n // { dg-require-weak \"\" }\n // { dg-skip-if \"Linkonce not weak\" { *-*-mingw* *-*-cygwin } { \"*\" } { \"\" } }\n-// { dg-final { scan-assembler \".weak\\[ \\t\\]_?_ZTSPP1A\" { target { ! { *-*-darwin* } } } } }\n-// { dg-final { scan-assembler-not \".weak\\[ \\t\\]_?_ZTIPP1A\" { target { ! { *-*-darwin* } } } } }\n+// { dg-final { scan-assembler \".weak\\[ \\t\\]_?_ZTSPP1A\" { target { ! { *-*-darwin* alpha*-dec-osf* } } } } }\n+// { dg-final { scan-assembler-not \".weak\\[ \\t\\]_?_ZTIPP1A\" { target { ! { *-*-darwin* alpha*-dec-osf* } } } } }\n // { dg-final { scan-assembler \".weak_definition\\[ \\t\\]_?_ZTSPP1A\" { target { *-*-darwin* } } } }\n // { dg-final { scan-assembler-not \".weak_definition\\[ \\t\\]_?_ZTIPP1A\" { target { *-*-darwin* } } } }\n+// { dg-final { scan-assembler \".weakext\\[ \\t\\]_?_ZTSPP1A\" { target { alpha*-dec-osf* } } } }\n+// { dg-final { scan-assembler-not \".weakext\\[ \\t\\]_?_ZTIPP1A\" { target { alpha*-dec-osf* } } } }\n \n struct A;\n "}, {"sha": "cd9eac3ea103490b09d17a2cbf2536310f11be7a", "filename": "gcc/testsuite/g++.dg/abi/thunk4.C", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bbed6555f082df6dc6a015f445e652cd32a63bf5/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fabi%2Fthunk4.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bbed6555f082df6dc6a015f445e652cd32a63bf5/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fabi%2Fthunk4.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fabi%2Fthunk4.C?ref=bbed6555f082df6dc6a015f445e652cd32a63bf5", "patch": "@@ -1,7 +1,8 @@\n // { dg-require-weak \"\" }\n // { dg-skip-if \"Linkonce not weak\" { *-*-mingw* *-*-cygwin } { \"*\" } { \"\" } }\n-// { dg-final { scan-assembler \".weak\\[ \\t\\]_?_ZThn._N7Derived3FooEv\" { target { ! { *-*-darwin* } } } } }\n+// { dg-final { scan-assembler \".weak\\[ \\t\\]_?_ZThn._N7Derived3FooEv\" { target { ! { *-*-darwin* alpha*-dec-osf* } } } } }\n // { dg-final { scan-assembler \".weak_definition\\[ \\t\\]_?_ZThn._N7Derived3FooEv\" { target { *-*-darwin* } } } }\n+// { dg-final { scan-assembler \".weakext\\[ \\t\\]_?_ZThn._N7Derived3FooEv\" { target { alpha*-dec-osf* } } } }\n \n struct Base \n {"}, {"sha": "d01ae78a4bce66b79c005aed5bbb5c136f9fe391", "filename": "gcc/testsuite/g++.dg/opt/combine.C", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bbed6555f082df6dc6a015f445e652cd32a63bf5/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fopt%2Fcombine.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bbed6555f082df6dc6a015f445e652cd32a63bf5/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fopt%2Fcombine.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fopt%2Fcombine.C?ref=bbed6555f082df6dc6a015f445e652cd32a63bf5", "patch": "@@ -1,5 +1,6 @@\n // { dg-do assemble { target fpic } }\n // { dg-options \"-O2 -fweb -fPIC -fvisibility=hidden\" }\n+// { dg-require-visibility \"\" }\n \n class QBasicAtomicInt\n {"}, {"sha": "3f50db14036c10dc840dfffccf11fd2b542bd08a", "filename": "gcc/testsuite/g++.dg/other/anon5.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bbed6555f082df6dc6a015f445e652cd32a63bf5/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fother%2Fanon5.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bbed6555f082df6dc6a015f445e652cd32a63bf5/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fother%2Fanon5.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fother%2Fanon5.C?ref=bbed6555f082df6dc6a015f445e652cd32a63bf5", "patch": "@@ -1,5 +1,5 @@\n // PR c++/34094\n-// { dg-do link { target { ! { *-*-darwin* *-*-hpux* *-*-solaris2.* } } } }\n+// { dg-do link { target { ! { *-*-darwin* *-*-hpux* *-*-solaris2.* alpha*-dec-osf* } } } }\n // { dg-options \"-g\" }\n \n namespace {"}, {"sha": "a35cd9ca9afd0f4e85f4e641b6e1614c8131ff35", "filename": "gcc/testsuite/g++.dg/warn/miss-format-1.C", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bbed6555f082df6dc6a015f445e652cd32a63bf5/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2Fmiss-format-1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bbed6555f082df6dc6a015f445e652cd32a63bf5/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2Fmiss-format-1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2Fmiss-format-1.C?ref=bbed6555f082df6dc6a015f445e652cd32a63bf5", "patch": "@@ -4,7 +4,7 @@\n /* { dg-options \"-Wmissing-format-attribute\" } */\n /* { dg-options \"-Wmissing-format-attribute -Wno-abi\" { target arm_eabi } } */\n /* VxWorks does not provide vscanf, either in kernel or RTP mode.  */\n-/* { dg-error \"not declared\" \"\" { target { *-*-solaris2.8 *-*-vxworks* alpha*-dec-osf5* } } 26 } */\n+/* { dg-error \"not declared\" \"\" { target { *-*-solaris2.8 *-*-vxworks* alpha*-dec-osf* } } 26 } */\n \n #include <stdio.h>\n #include <stdarg.h>\n@@ -23,7 +23,7 @@ bar (const char *fmt, ...)\n {\n   va_list ap;\n   va_start (ap, fmt);\n-  vscanf (fmt, ap); /* { dg-warning \"candidate\" \"scanf attribute warning\" { xfail *-*-solaris2.8 *-*-vxworks* } } */\n+  vscanf (fmt, ap); /* { dg-warning \"candidate\" \"scanf attribute warning\" { xfail *-*-solaris2.8 *-*-vxworks* alpha*-dec-osf* } } */\n   va_end (ap);\n }\n "}, {"sha": "a96dc96c19713b696520d4df229c5d1cd5d5c291", "filename": "gcc/testsuite/g++.dg/warn/pr31246.C", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bbed6555f082df6dc6a015f445e652cd32a63bf5/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2Fpr31246.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bbed6555f082df6dc6a015f445e652cd32a63bf5/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2Fpr31246.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2Fpr31246.C?ref=bbed6555f082df6dc6a015f445e652cd32a63bf5", "patch": "@@ -1,6 +1,7 @@\n // PR 31246\n // { dg-do compile }\n // { dg-options \"-Wunreachable-code -D_GLIBCXX_DEBUG\" }\n+// { dg-xfail-if \"lack of weak symbols\" { alpha*-dec-osf* } }\n #include <vector>\n \n int main()"}, {"sha": "8a50030bc9d3799c56e075ec76d485817a7e96e2", "filename": "gcc/testsuite/g++.dg/warn/weak1.C", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bbed6555f082df6dc6a015f445e652cd32a63bf5/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2Fweak1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bbed6555f082df6dc6a015f445e652cd32a63bf5/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2Fweak1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2Fweak1.C?ref=bbed6555f082df6dc6a015f445e652cd32a63bf5", "patch": "@@ -1,7 +1,8 @@\n // { dg-do run }\n // { dg-require-weak \"\" }\n-// The PA HP-UX dynamic loader doesn't support unsatisfied weak symbols.\n-// { dg-skip-if \"No unsat\" { hppa*-*-hpux* } { \"*\" } { \"\" } }\n+// The PA HP-UX and Tru64 UNIX dynamic loaders don't support unsatisfied\n+// weak symbols.\n+// { dg-skip-if \"No unsat\" { alpha*-dec-osf* hppa*-*-hpux* } { \"*\" } { \"\" } }\n // The darwin loader does, but they do need to exist at link time.\n // { dg-skip-if \"No link unsat\" { *-*-darwin* } { \"*\" } { \"\" } }\n // For kernel modules and static RTPs, the loader treats undefined weak"}, {"sha": "cd902fbc3c04480a4381523c8f5edac0845afb66", "filename": "gcc/testsuite/g++.old-deja/g++.eh/badalloc1.C", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bbed6555f082df6dc6a015f445e652cd32a63bf5/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.eh%2Fbadalloc1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bbed6555f082df6dc6a015f445e652cd32a63bf5/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.eh%2Fbadalloc1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.eh%2Fbadalloc1.C?ref=bbed6555f082df6dc6a015f445e652cd32a63bf5", "patch": "@@ -3,7 +3,7 @@\n // itself call malloc(), and will fail if there is no more\n // memory available.\n // { dg-do run { xfail { { xstormy16-*-* *-*-darwin[3-7]* } || vxworks_rtp } } }\n-// Copyright (C) 2000, 2002, 2003 Free Software Foundation, Inc.\n+// Copyright (C) 2000, 2002, 2003, 2010 Free Software Foundation, Inc.\n // Contributed by Nathan Sidwell 6 June 2000 <nathan@codesourcery.com>\n \n // Check we can throw a bad_alloc exception when malloc dies.\n@@ -18,8 +18,8 @@ extern \"C\" void *memcpy(void *, const void *, size_t);\n #ifdef STACK_SIZE\n const int arena_size = 256;\n #else\n-#if defined(__FreeBSD__) || defined(__sun__) || defined(__hpux__)\n-// FreeBSD, Solaris and HP-UX with threads require even more\n+#if defined(__FreeBSD__) || defined(__sun__) || defined(__hpux__) || defined(__osf__)\n+// FreeBSD, Solaris, HP-UX and Tru64 UNIX with threads require even more\n // space at initialization time.  FreeBSD 5 now requires over 131072 bytes.\n const int arena_size = 262144;\n #else"}, {"sha": "31d5379e47c786ad368b54578fa691d0447959d2", "filename": "gcc/testsuite/gcc.dg/attr-weakref-1.c", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bbed6555f082df6dc6a015f445e652cd32a63bf5/gcc%2Ftestsuite%2Fgcc.dg%2Fattr-weakref-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bbed6555f082df6dc6a015f445e652cd32a63bf5/gcc%2Ftestsuite%2Fgcc.dg%2Fattr-weakref-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fattr-weakref-1.c?ref=bbed6555f082df6dc6a015f445e652cd32a63bf5", "patch": "@@ -2,9 +2,10 @@\n // { dg-require-weak \"\" }\n // On darwin, we use attr-weakref-1-darwin.c.\n // This test requires support for undefined weak symbols.  This support\n-// is not available on hppa*-*-hpux*.  The test is skipped rather than\n-// xfailed to suppress the warning that would otherwise arise.\n-// { dg-skip-if \"\" { \"*-*-darwin*\" \"hppa*-*-hpux*\" } \"*\" { \"\" } }\n+// is not available on alpha*-dec-osf* and hppa*-*-hpux*.  The test is\n+// skipped rather than xfailed to suppress the warning that would otherwise\n+// arise.\n+// { dg-skip-if \"\" { \"alpha*-dec-osf*\" \"*-*-darwin*\" \"hppa*-*-hpux*\" } \"*\" { \"\" } }\n // For kernel modules and static RTPs, the loader treats undefined weak\n // symbols in the same way as undefined strong symbols.  The test\n // therefore fails to load, so skip it."}, {"sha": "2f21c63f0297822c1c647e32316a33b0ef9c087e", "filename": "gcc/testsuite/gcc.dg/intmax_t-1.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bbed6555f082df6dc6a015f445e652cd32a63bf5/gcc%2Ftestsuite%2Fgcc.dg%2Fintmax_t-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bbed6555f082df6dc6a015f445e652cd32a63bf5/gcc%2Ftestsuite%2Fgcc.dg%2Fintmax_t-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fintmax_t-1.c?ref=bbed6555f082df6dc6a015f445e652cd32a63bf5", "patch": "@@ -1,6 +1,7 @@\n /* { dg-do compile } */\n /* { dg-options \"-Wall\" } */\n /* { dg-error \"\" \"\" { target { { *arm*-*-*elf* xtensa*-*-elf* } || vxworks_kernel } } 0 } */\n+/* { dg-skip-if \"No *intmax_t in <inttypes.h>\" { alpha*-dec-osf* } } */\n \n /* Compile with -Wall to get a warning if built-in and system intmax_t don't\n    match.  */"}]}