{"sha": "6a047254ef2ce9c0952ff7e2020dc29d86227d43", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmEwNDcyNTRlZjJjZTljMDk1MmZmN2UyMDIwZGMyOWQ4NjIyN2Q0Mw==", "commit": {"author": {"name": "Craig Burley", "email": "burley@gnu.org", "date": "1998-06-03T14:12:26Z"}, "committer": {"name": "Dave Love", "email": "fx@gcc.gnu.org", "date": "1998-06-03T14:12:26Z"}, "message": "(ffecom_expr_): Fix D**I and Z**I cases to not convert (DOUBLE PRECISION) D and (DOUBLE COMPLEX) Z to INTEGER.\n\n(ffecom_expr_): Fix D**I and Z**I cases to\nnot convert (DOUBLE PRECISION) D and (DOUBLE COMPLEX) Z\nto INTEGER.  (This is dead code here anyway.)\n\nFrom-SVN: r20211", "tree": {"sha": "dbe3e691d991f722e478aee162854f9bad0be783", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/dbe3e691d991f722e478aee162854f9bad0be783"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6a047254ef2ce9c0952ff7e2020dc29d86227d43", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6a047254ef2ce9c0952ff7e2020dc29d86227d43", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6a047254ef2ce9c0952ff7e2020dc29d86227d43", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6a047254ef2ce9c0952ff7e2020dc29d86227d43/comments", "author": null, "committer": null, "parents": [{"sha": "f5470689a761487ff8e93d4854de75fbcf78bf9d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f5470689a761487ff8e93d4854de75fbcf78bf9d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f5470689a761487ff8e93d4854de75fbcf78bf9d"}], "stats": {"total": 29, "additions": 22, "deletions": 7}, "files": [{"sha": "286d0c7abd3d672e36c30221a88428aa8e57a2ec", "filename": "gcc/f/com.c", "status": "modified", "additions": 22, "deletions": 7, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6a047254ef2ce9c0952ff7e2020dc29d86227d43/gcc%2Ff%2Fcom.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6a047254ef2ce9c0952ff7e2020dc29d86227d43/gcc%2Ff%2Fcom.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ff%2Fcom.c?ref=6a047254ef2ce9c0952ff7e2020dc29d86227d43", "patch": "@@ -3086,7 +3086,6 @@ ffecom_expr_ (ffebld expr, tree dest_tree, ffebld dest,\n \t\t  return item;\n \t      }\n \n-\t    ltkt = FFEINFO_kindtypeINTEGER1;\n \t    rtkt = FFEINFO_kindtypeINTEGER1;\n \t    switch (ffeinfo_basictype (ffebld_info (left)))\n \t      {\n@@ -3101,33 +3100,49 @@ ffecom_expr_ (ffebld expr, tree dest_tree, ffebld dest,\n \t\t    rtkt = FFEINFO_kindtypeINTEGER4;\n \t\t  }\n \t\telse\n-\t\t  code = FFECOM_gfrtPOW_II;\n+\t\t  {\n+\t\t    code = FFECOM_gfrtPOW_II;\n+\t\t    ltkt = FFEINFO_kindtypeINTEGER1;\n+\t\t  }\n \t\tbreak;\n \n \t      case FFEINFO_basictypeREAL:\n \t\tif (ffeinfo_kindtype (ffebld_info (left))\n \t\t    == FFEINFO_kindtypeREAL1)\n-\t\t  code = FFECOM_gfrtPOW_RI;\n+\t\t  {\n+\t\t    code = FFECOM_gfrtPOW_RI;\n+\t\t    ltkt = FFEINFO_kindtypeREAL1;\n+\t\t  }\n \t\telse\n-\t\t  code = FFECOM_gfrtPOW_DI;\n+\t\t  {\n+\t\t    code = FFECOM_gfrtPOW_DI;\n+\t\t    ltkt = FFEINFO_kindtypeREAL2;\n+\t\t  }\n \t\tbreak;\n \n \t      case FFEINFO_basictypeCOMPLEX:\n \t\tif (ffeinfo_kindtype (ffebld_info (left))\n \t\t    == FFEINFO_kindtypeREAL1)\n-\t\t  code = FFECOM_gfrtPOW_CI;\t/* Overlapping result okay. */\n+\t\t  {\n+\t\t    code = FFECOM_gfrtPOW_CI;\t/* Overlapping result okay. */\n+\t\t    ltkt = FFEINFO_kindtypeREAL1;\n+\t\t  }\n \t\telse\n-\t\t  code = FFECOM_gfrtPOW_ZI;\t/* Overlapping result okay. */\n+\t\t  {\n+\t\t    code = FFECOM_gfrtPOW_ZI;\t/* Overlapping result okay. */\n+\t\t    ltkt = FFEINFO_kindtypeREAL2;\n+\t\t  }\n \t\tbreak;\n \n \t      default:\n \t\tassert (\"bad pow_*i\" == NULL);\n \t\tcode = FFECOM_gfrtPOW_CI;\t/* Overlapping result okay. */\n+\t\tltkt = FFEINFO_kindtypeREAL1;\n \t\tbreak;\n \t      }\n \t    if (ffeinfo_kindtype (ffebld_info (left)) != ltkt)\n \t      left = ffeexpr_convert (left, NULL, NULL,\n-\t\t\t\t      FFEINFO_basictypeINTEGER,\n+\t\t\t\t      ffeinfo_basictype (ffebld_info (left)),\n \t\t\t\t      ltkt, 0,\n \t\t\t\t      FFETARGET_charactersizeNONE,\n \t\t\t\t      FFEEXPR_contextLET);"}]}