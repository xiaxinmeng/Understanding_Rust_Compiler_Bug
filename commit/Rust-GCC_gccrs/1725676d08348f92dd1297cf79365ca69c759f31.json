{"sha": "1725676d08348f92dd1297cf79365ca69c759f31", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTcyNTY3NmQwODM0OGY5MmRkMTI5N2NmNzkzNjVjYTY5Yzc1OWYzMQ==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2014-10-20T14:17:37Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2014-10-20T14:17:37Z"}, "message": "[multiple changes]\n\n2014-10-20  Eric Botcazou  <ebotcazou@adacore.com>\n\n\t* inline.adb (List_Inlining_Info): Minor tweaks.\n\t(Add_Inlined_Body): Inline the enclosing package\n\tif it is not internally generated, even if it doesn't come\n\tfrom source.\n\n2014-10-20  Ed Schonberg  <schonberg@adacore.com>\n\n\t* sem_ch4.adb (Process_Function_Call): If the first actual\n\tdenotes a discrete type, the mode must be interpreted as a slice\n\tof an array returned by a parameterless call.\n\n2014-10-20  Vasiliy Fofanov  <fofanov@adacore.com>\n\n\t* prj-env.ads, prj-env.adb (Get_Runtime_Path): No longer inhibit\n\tsearching for runtime referenced by a simple name on a project path.\n\n2014-10-20  Olivier Hainque  <hainque@adacore.com>\n\n\t* vxworks-x86-link.spec: New file.\n\t* system-vxworks-x86.ads: Add pragma Linker_Options to link with\n\tvxworks-x86-link.spec.\n\n2014-10-20  Vincent Celier  <celier@adacore.com>\n\n\t* opt.ads (Origin_Of_Target): New type.\n\t(Target_Origin): New variable.\n\t* prj-conf.adb (Parse_Project_And_Apply_Config): Record\n\tTarget_Value and Target_Origin.  If target was not specified\n\ton the command line with --target=, check if attribute Target\n\tis declared in the main project. If it is and it is not the\n\tnative target, parse again the projects so that 'Target get\n\tthe new value. Fail if the target has changed again.  Invoke\n\tProcess_Project_And_Apply_Config with Do_Phase_1 set to False\n\tis Process_Project_Tree_Phase_1 has already been invoked.\n\t* prj-conf.ads (Process_Project_And_Apply_Config): New Boolean\n\tparameter Do_Phase_1, defaulted to True.\n\t* prj-proc.adb (Expression): Check the special values and\n\tdefaults for attribute Target.\n\n2014-10-20  Ed Schonberg  <schonberg@adacore.com>\n\n\t* sem_ch3.adb (Handle_Late_Controlled_Primitive): Do not analyze\n\tthe subprogram spec of the body in full, because it will be\n\treanalyzed when the declaration itself is analyzed;  otherwise. a\n\tformal may end up duplicated in the list of formals leading to\n\tspurious conformance errors with an existing declaration.\n\nFrom-SVN: r216473", "tree": {"sha": "8c8a012641abada9742f42f3abdd710ad7999737", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8c8a012641abada9742f42f3abdd710ad7999737"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1725676d08348f92dd1297cf79365ca69c759f31", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1725676d08348f92dd1297cf79365ca69c759f31", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1725676d08348f92dd1297cf79365ca69c759f31", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1725676d08348f92dd1297cf79365ca69c759f31/comments", "author": null, "committer": null, "parents": [{"sha": "3e1862b1fd8d6025453dfb3119891dcc26822528", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3e1862b1fd8d6025453dfb3119891dcc26822528", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3e1862b1fd8d6025453dfb3119891dcc26822528"}], "stats": {"total": 347, "additions": 264, "deletions": 83}, "files": [{"sha": "e8a7143a044927a0b1a50cea8674a33ddcdcc5b3", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 49, "deletions": 0, "changes": 49, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1725676d08348f92dd1297cf79365ca69c759f31/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1725676d08348f92dd1297cf79365ca69c759f31/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=1725676d08348f92dd1297cf79365ca69c759f31", "patch": "@@ -1,3 +1,52 @@\n+2014-10-20  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* inline.adb (List_Inlining_Info): Minor tweaks.\n+\t(Add_Inlined_Body): Inline the enclosing package\n+\tif it is not internally generated, even if it doesn't come\n+\tfrom source.\n+\n+2014-10-20  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* sem_ch4.adb (Process_Function_Call): If the first actual\n+\tdenotes a discrete type, the mode must be interpreted as a slice\n+\tof an array returned by a parameterless call.\n+\n+2014-10-20  Vasiliy Fofanov  <fofanov@adacore.com>\n+\n+\t* prj-env.ads, prj-env.adb (Get_Runtime_Path): No longer inhibit\n+\tsearching for runtime referenced by a simple name on a project path.\n+\n+2014-10-20  Olivier Hainque  <hainque@adacore.com>\n+\n+\t* vxworks-x86-link.spec: New file.\n+\t* system-vxworks-x86.ads: Add pragma Linker_Options to link with\n+\tvxworks-x86-link.spec.\n+\n+2014-10-20  Vincent Celier  <celier@adacore.com>\n+\n+\t* opt.ads (Origin_Of_Target): New type.\n+\t(Target_Origin): New variable.\n+\t* prj-conf.adb (Parse_Project_And_Apply_Config): Record\n+\tTarget_Value and Target_Origin.  If target was not specified\n+\ton the command line with --target=, check if attribute Target\n+\tis declared in the main project. If it is and it is not the\n+\tnative target, parse again the projects so that 'Target get\n+\tthe new value. Fail if the target has changed again.  Invoke\n+\tProcess_Project_And_Apply_Config with Do_Phase_1 set to False\n+\tis Process_Project_Tree_Phase_1 has already been invoked.\n+\t* prj-conf.ads (Process_Project_And_Apply_Config): New Boolean\n+\tparameter Do_Phase_1, defaulted to True.\n+\t* prj-proc.adb (Expression): Check the special values and\n+\tdefaults for attribute Target.\n+\n+2014-10-20  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* sem_ch3.adb (Handle_Late_Controlled_Primitive): Do not analyze\n+\tthe subprogram spec of the body in full, because it will be\n+\treanalyzed when the declaration itself is analyzed;  otherwise. a\n+\tformal may end up duplicated in the list of formals leading to\n+\tspurious conformance errors with an existing declaration.\n+\n 2014-10-20  Ed Schonberg  <schonberg@adacore.com>\n \n \t* sem_ch13.adb: Improve error recovery on illegal aspect."}, {"sha": "efb4e6cd0f3b7c67f287ad1c472c74ac3642fdbe", "filename": "gcc/ada/inline.adb", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1725676d08348f92dd1297cf79365ca69c759f31/gcc%2Fada%2Finline.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1725676d08348f92dd1297cf79365ca69c759f31/gcc%2Fada%2Finline.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Finline.adb?ref=1725676d08348f92dd1297cf79365ca69c759f31", "patch": "@@ -414,7 +414,7 @@ package body Inline is\n \n                elsif Level = Inline_Package\n                  and then not Is_Inlined (Pack)\n-                 and then Comes_From_Source (E)\n+                 and then not Is_Internal (E)\n                  and then not In_Main_Unit_Or_Subunit (Pack)\n                then\n                   Set_Is_Inlined (Pack);\n@@ -3888,7 +3888,7 @@ package body Inline is\n                Count := Count + 1;\n \n                if Count = 1 then\n-                  Write_Str (\"Listing of frontend inlined calls\");\n+                  Write_Str (\"List of calls inlined by the frontend\");\n                   Write_Eol;\n                end if;\n \n@@ -3917,7 +3917,7 @@ package body Inline is\n                Count := Count + 1;\n \n                if Count = 1 then\n-                  Write_Str (\"Listing of inlined calls passed to the backend\");\n+                  Write_Str (\"List of inlined calls passed to the backend\");\n                   Write_Eol;\n                end if;\n \n@@ -3947,7 +3947,7 @@ package body Inline is\n \n             if Count = 1 then\n                Write_Str\n-                 (\"Listing of inlined subprograms passed to the backend\");\n+                 (\"List of inlined subprograms passed to the backend\");\n                Write_Eol;\n             end if;\n \n@@ -3964,7 +3964,7 @@ package body Inline is\n          end loop;\n       end if;\n \n-      --  Generate listing of subprogram that cannot be inlined by the backend\n+      --  Generate listing of subprograms that cannot be inlined by the backend\n \n       if Present (Backend_Not_Inlined_Subps)\n         and then Back_End_Inlining\n@@ -3979,7 +3979,7 @@ package body Inline is\n \n             if Count = 1 then\n                Write_Str\n-                 (\"Listing of subprograms that cannot inline the backend\");\n+                 (\"List of subprograms that cannot be inlined by the backend\");\n                Write_Eol;\n             end if;\n "}, {"sha": "79c4d0658d794cf3dc43973d1bae9a05deccde70", "filename": "gcc/ada/opt.ads", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1725676d08348f92dd1297cf79365ca69c759f31/gcc%2Fada%2Fopt.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1725676d08348f92dd1297cf79365ca69c759f31/gcc%2Fada%2Fopt.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fopt.ads?ref=1725676d08348f92dd1297cf79365ca69c759f31", "patch": "@@ -1418,6 +1418,16 @@ package Opt is\n    --  Get_Targ and Set_Targ for full details) using the name given by\n    --  this switch. Set to non-null file name by use of the -gnatet switch.\n \n+   type Origin_Of_Target is (Unknown, Default, Specified);\n+\n+   Target_Origin : Origin_Of_Target := Unknown;\n+   --  GPRBUILD\n+   --  Indicates the origin of attribute Target in project files\n+\n+   Target_Value : String_Access := null;\n+   --  GPRBUILD\n+   --  Indicates the value of attribute Target in project files\n+\n    Task_Dispatching_Policy : Character := ' ';\n    --  GNAT, GNATBIND\n    --  Set to ' ' for the default case (no task dispatching policy specified)."}, {"sha": "206fa4c72288c970766465d44c9d55fbc57e4299", "filename": "gcc/ada/prj-conf.adb", "status": "modified", "additions": 84, "deletions": 16, "changes": 100, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1725676d08348f92dd1297cf79365ca69c759f31/gcc%2Fada%2Fprj-conf.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1725676d08348f92dd1297cf79365ca69c759f31/gcc%2Fada%2Fprj-conf.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-conf.adb?ref=1725676d08348f92dd1297cf79365ca69c759f31", "patch": "@@ -1584,9 +1584,24 @@ package body Prj.Conf is\n       Implicit_Project           : Boolean := False;\n       On_New_Tree_Loaded         : Prj.Proc.Tree_Loaded_Callback := null)\n    is\n+      Success : Boolean := False;\n+      Try_Again : Boolean := True;\n+\n    begin\n       pragma Assert (Prj.Env.Is_Initialized (Env.Project_Path));\n \n+      --  Record Target_Value and Target_Origin.\n+\n+      if Target_Name = \"\" then\n+         Opt.Target_Value  := new String'(Normalized_Hostname);\n+         Opt.Target_Origin := Default;\n+      else\n+         Opt.Target_Value  := new String'(Target_Name);\n+         Opt.Target_Origin := Specified;\n+      end if;\n+\n+      <<Parse_Again>>\n+\n       --  Parse the user project tree\n \n       Prj.Initialize (Project_Tree);\n@@ -1609,6 +1624,55 @@ package body Prj.Conf is\n          return;\n       end if;\n \n+      --  If --target was not specified on the command line, then do Phase 1 to\n+      --  check if attribute Target is declared in the main project.\n+\n+      if Opt.Target_Origin /= Specified then\n+         Main_Project := No_Project;\n+         Process_Project_Tree_Phase_1\n+           (In_Tree                => Project_Tree,\n+            Project                => Main_Project,\n+            Packages_To_Check      => Packages_To_Check,\n+            Success                => Success,\n+            From_Project_Node      => User_Project_Node,\n+            From_Project_Node_Tree => Project_Node_Tree,\n+            Env                    => Env,\n+            Reset_Tree             => True,\n+            On_New_Tree_Loaded     => On_New_Tree_Loaded);\n+\n+         if not Success then\n+            Main_Project := No_Project;\n+            return;\n+         end if;\n+\n+         declare\n+            Variable : constant Variable_Value :=\n+              Value_Of\n+                (Name_Target,\n+                 Main_Project.Decl.Attributes,\n+                 Project_Tree.Shared);\n+         begin\n+            if Variable /= Nil_Variable_Value\n+              and then not Variable.Default\n+              and then\n+                Get_Name_String (Variable.Value) /= Opt.Target_Value.all\n+            then\n+               if Try_Again then\n+                  Opt.Target_Value :=\n+                    new String'(Get_Name_String (Variable.Value));\n+                  Try_Again := False;\n+                  goto Parse_Again;\n+\n+               else\n+                  Fail_Program\n+                    (Project_Tree,\n+                     \"inconsistent value of attribute Target\");\n+               end if;\n+            end if;\n+         end;\n+\n+      end if;\n+\n       Process_Project_And_Apply_Config\n         (Main_Project               => Main_Project,\n          User_Project_Node          => User_Project_Node,\n@@ -1624,7 +1688,8 @@ package body Prj.Conf is\n          Target_Name                => Target_Name,\n          Normalized_Hostname        => Normalized_Hostname,\n          On_Load_Config             => On_Load_Config,\n-         On_New_Tree_Loaded         => On_New_Tree_Loaded);\n+         On_New_Tree_Loaded         => On_New_Tree_Loaded,\n+         Do_Phase_1                 => Opt.Target_Origin = Specified);\n    end Parse_Project_And_Apply_Config;\n \n    --------------------------------------\n@@ -1647,7 +1712,8 @@ package body Prj.Conf is\n       Normalized_Hostname        : String;\n       On_Load_Config             : Config_File_Hook := null;\n       Reset_Tree                 : Boolean := True;\n-      On_New_Tree_Loaded         : Prj.Proc.Tree_Loaded_Callback := null)\n+      On_New_Tree_Loaded         : Prj.Proc.Tree_Loaded_Callback := null;\n+      Do_Phase_1                 : Boolean := True)\n    is\n       Shared              : constant Shared_Project_Tree_Data_Access :=\n                               Project_Tree.Shared;\n@@ -1692,23 +1758,25 @@ package body Prj.Conf is\n    --  Start of processing for Process_Project_And_Apply_Config\n \n    begin\n-      Main_Project := No_Project;\n       Automatically_Generated := False;\n \n-      Process_Project_Tree_Phase_1\n-        (In_Tree                => Project_Tree,\n-         Project                => Main_Project,\n-         Packages_To_Check      => Packages_To_Check,\n-         Success                => Success,\n-         From_Project_Node      => User_Project_Node,\n-         From_Project_Node_Tree => Project_Node_Tree,\n-         Env                    => Env,\n-         Reset_Tree             => Reset_Tree,\n-         On_New_Tree_Loaded     => On_New_Tree_Loaded);\n-\n-      if not Success then\n+      if Do_Phase_1 then\n          Main_Project := No_Project;\n-         return;\n+         Process_Project_Tree_Phase_1\n+           (In_Tree                => Project_Tree,\n+            Project                => Main_Project,\n+            Packages_To_Check      => Packages_To_Check,\n+            Success                => Success,\n+            From_Project_Node      => User_Project_Node,\n+            From_Project_Node_Tree => Project_Node_Tree,\n+            Env                    => Env,\n+            Reset_Tree             => Reset_Tree,\n+            On_New_Tree_Loaded     => On_New_Tree_Loaded);\n+\n+         if not Success then\n+            Main_Project := No_Project;\n+            return;\n+         end if;\n       end if;\n \n       if Project_Tree.Source_Info_File_Name /= null then"}, {"sha": "eae8f5281621e532f797f104ff3e18ae11044342", "filename": "gcc/ada/prj-conf.ads", "status": "modified", "additions": 10, "deletions": 6, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1725676d08348f92dd1297cf79365ca69c759f31/gcc%2Fada%2Fprj-conf.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1725676d08348f92dd1297cf79365ca69c759f31/gcc%2Fada%2Fprj-conf.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-conf.ads?ref=1725676d08348f92dd1297cf79365ca69c759f31", "patch": "@@ -112,20 +112,21 @@ package Prj.Conf is\n    procedure Process_Project_And_Apply_Config\n      (Main_Project               : out Prj.Project_Id;\n       User_Project_Node          : Prj.Tree.Project_Node_Id;\n-      Config_File_Name           : String                       := \"\";\n+      Config_File_Name           : String                        := \"\";\n       Autoconf_Specified         : Boolean;\n       Project_Tree               : Prj.Project_Tree_Ref;\n       Project_Node_Tree          : Prj.Tree.Project_Node_Tree_Ref;\n       Env                        : in out Prj.Tree.Environment;\n       Packages_To_Check          : String_List_Access;\n-      Allow_Automatic_Generation : Boolean                      := True;\n+      Allow_Automatic_Generation : Boolean                       := True;\n       Automatically_Generated    : out Boolean;\n       Config_File_Path           : out String_Access;\n-      Target_Name                : String                       := \"\";\n+      Target_Name                : String                        := \"\";\n       Normalized_Hostname        : String;\n-      On_Load_Config             : Config_File_Hook             := null;\n-      Reset_Tree                 : Boolean                      := True;\n-      On_New_Tree_Loaded         : Prj.Proc.Tree_Loaded_Callback := null);\n+      On_Load_Config             : Config_File_Hook              := null;\n+      Reset_Tree                 : Boolean                       := True;\n+      On_New_Tree_Loaded         : Prj.Proc.Tree_Loaded_Callback := null;\n+      Do_Phase_1                 : Boolean                       := True);\n    --  Same as above, except the project must already have been parsed through\n    --  Prj.Part.Parse, and only the processing of the project and the\n    --  configuration is done at this level.\n@@ -138,6 +139,9 @@ package Prj.Conf is\n    --  least one source file, or an error is reported via When_No_Sources. If\n    --  it is false, this is only required for Ada (and only if it is a language\n    --  of the project).\n+   --\n+   --  If Do_Phase_1 is False, then Prj.Proc.Process_Project_Tree_Phase_1\n+   --  should not be called, as it has already been invoked successfully.\n \n    Invalid_Config : exception;\n "}, {"sha": "ac5b69f0a97622bf9449412bba202389e2a9d358", "filename": "gcc/ada/prj-env.adb", "status": "modified", "additions": 1, "deletions": 24, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1725676d08348f92dd1297cf79365ca69c759f31/gcc%2Fada%2Fprj-env.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1725676d08348f92dd1297cf79365ca69c759f31/gcc%2Fada%2Fprj-env.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-env.adb?ref=1725676d08348f92dd1297cf79365ca69c759f31", "patch": "@@ -1425,35 +1425,12 @@ package body Prj.Env is\n      (Self : Project_Search_Path;\n       Name : String) return String_Access\n    is\n-      function Is_Base_Name (Path : String) return Boolean;\n-      --  Returns True if Path has no directory separator\n-\n-      ------------------\n-      -- Is_Base_Name --\n-      ------------------\n-\n-      function Is_Base_Name (Path : String) return Boolean is\n-      begin\n-         for J in Path'Range loop\n-            if Is_Directory_Separator (Path (J)) then\n-               return False;\n-            end if;\n-         end loop;\n-\n-         return True;\n-      end Is_Base_Name;\n \n       function Find_Rts_In_Path is new Prj.Env.Find_Name_In_Path\n         (Check_Filename => Is_Directory);\n \n-      --  Start of processing for Get_Runtime_Path\n-\n    begin\n-      if not Is_Base_Name (Name) then\n-         return Find_Rts_In_Path (Self, Name);\n-      else\n-         return null;\n-      end if;\n+      return Find_Rts_In_Path (Self, Name);\n    end Get_Runtime_Path;\n \n    ----------------"}, {"sha": "08f2b400f6b8ba62ce634ad8cc7f10ea232164a4", "filename": "gcc/ada/prj-env.ads", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1725676d08348f92dd1297cf79365ca69c759f31/gcc%2Fada%2Fprj-env.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1725676d08348f92dd1297cf79365ca69c759f31/gcc%2Fada%2Fprj-env.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-env.ads?ref=1725676d08348f92dd1297cf79365ca69c759f31", "patch": "@@ -243,10 +243,8 @@ package Prj.Env is\n    function Get_Runtime_Path\n      (Self : Project_Search_Path;\n       Name : String) return String_Access;\n-   --  Compute the full path for the project-based runtime name. It first\n-   --  checks that Name is not a simple file name (must have a path separator\n-   --  in it), and returns null in case of failure. This check might be removed\n-   --  in the future. Name is simply searched on the project path.\n+   --  Compute the full path for the project-based runtime name.\n+   --  Name is simply searched on the project path.\n \n private\n    package Projects_Paths is new GNAT.Dynamic_HTables.Simple_HTable"}, {"sha": "f0669f2a294febe5050ae7379fe311ed3119ed11", "filename": "gcc/ada/prj-proc.adb", "status": "modified", "additions": 25, "deletions": 6, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1725676d08348f92dd1297cf79365ca69c759f31/gcc%2Fada%2Fprj-proc.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1725676d08348f92dd1297cf79365ca69c759f31/gcc%2Fada%2Fprj-proc.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-proc.adb?ref=1725676d08348f92dd1297cf79365ca69c759f31", "patch": "@@ -889,16 +889,26 @@ package body Prj.Proc is\n \n                   --  Check the defaults\n \n-                  if Current_Term_Kind = N_Attribute_Reference\n-                    and then The_Variable.Default\n-                  then\n+                  if Current_Term_Kind = N_Attribute_Reference then\n                      declare\n                         The_Default : constant Attribute_Default_Value :=\n                           Default_Of\n                             (The_Current_Term, From_Project_Node_Tree);\n \n                      begin\n-                        case The_Variable.Kind is\n+                        --  Check the special value for 'Target when specified\n+\n+                        if The_Default = Target_Value\n+                          and then Opt.Target_Origin = Specified\n+                        then\n+                           Name_Len := 0;\n+                           Add_Str_To_Name_Buffer (Opt.Target_Value.all);\n+                           The_Variable.Value := Name_Find;\n+\n+                        --  Check the defaults\n+\n+                        elsif The_Variable.Default then\n+                           case The_Variable.Kind is\n                            when Undefined =>\n                               null;\n \n@@ -923,7 +933,15 @@ package body Prj.Proc is\n                                     goto Object_Dir_Restart;\n \n                                  when Target_Value =>\n-                                    null;\n+                                    if Opt.Target_Value = null then\n+                                       The_Variable.Value := Empty_String;\n+\n+                                    else\n+                                       Name_Len := 0;\n+                                       Add_Str_To_Name_Buffer\n+                                         (Opt.Target_Value.all);\n+                                       The_Variable.Value := Name_Find;\n+                                    end if;\n                               end case;\n \n                            when List =>\n@@ -941,7 +959,8 @@ package body Prj.Proc is\n                                  when Object_Dir_Value | Target_Value =>\n                                     null;\n                               end case;\n-                        end case;\n+                           end case;\n+                        end if;\n                      end;\n                   end if;\n "}, {"sha": "fcc6e1f9ac2bb1219a4720cf4d1334094c4e49e4", "filename": "gcc/ada/sem_ch3.adb", "status": "modified", "additions": 41, "deletions": 19, "changes": 60, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1725676d08348f92dd1297cf79365ca69c759f31/gcc%2Fada%2Fsem_ch3.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1725676d08348f92dd1297cf79365ca69c759f31/gcc%2Fada%2Fsem_ch3.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch3.adb?ref=1725676d08348f92dd1297cf79365ca69c759f31", "patch": "@@ -2167,10 +2167,7 @@ package body Sem_Ch3 is\n                        Parameter_Specifications (Body_Spec);\n          Spec      : Node_Id;\n          Spec_Id   : Entity_Id;\n-\n-         Dummy : Entity_Id;\n-         --  A dummy variable used to capture the unused result of subprogram\n-         --  spec analysis.\n+         Typ       : Node_Id;\n \n       begin\n          --  Consider only procedure bodies whose name matches one of the three\n@@ -2183,29 +2180,50 @@ package body Sem_Ch3 is\n          then\n             return;\n \n-         --  A controlled primitive must have exactly one formal\n+         --  A controlled primitive must have exactly one formal which is not\n+         --  an anonymous access type.\n \n          elsif List_Length (Params) /= 1 then\n             return;\n          end if;\n \n-         Dummy := Analyze_Subprogram_Specification (Body_Spec);\n-\n-         --  The type of the formal must be derived from [Limited_]Controlled\n+         Typ := Parameter_Type (First (Params));\n \n-         if not Is_Controlled (Etype (Defining_Entity (First (Params)))) then\n+         if Nkind (Typ) = N_Access_Definition then\n             return;\n          end if;\n \n-         Spec_Id := Find_Corresponding_Spec (Body_Decl, Post_Error => False);\n+         Find_Type (Typ);\n \n-         --  The body has a matching spec, therefore it cannot be a late\n-         --  primitive.\n+         --  The type of the formal must be derived from [Limited_]Controlled\n \n-         if Present (Spec_Id) then\n+         if not Is_Controlled (Entity (Typ)) then\n             return;\n          end if;\n \n+         --  Check whether a specification exists for this body. We do not\n+         --  analyze the spec of the body in full, because it will be analyzed\n+         --  again when the body is properly analyzed, and we cannot create\n+         --  duplicate entries in the formals chain. We look for an explicit\n+         --  specification because the body may be an overriding operation and\n+         --  an inherited spec may be present.\n+\n+         Spec_Id := Current_Entity (Body_Id);\n+\n+         while Present (Spec_Id) loop\n+            if Ekind_In (Spec_Id, E_Procedure, E_Generic_Procedure)\n+              and then Scope (Spec_Id) = Current_Scope\n+              and then Present (First_Formal (Spec_Id))\n+              and then No (Next_Formal (First_Formal (Spec_Id)))\n+              and then Etype (First_Formal (Spec_Id)) = Entity (Typ)\n+              and then Comes_From_Source (Spec_Id)\n+            then\n+               return;\n+            end if;\n+\n+            Spec_Id := Homonym (Spec_Id);\n+         end loop;\n+\n          --  At this point the body is known to be a late controlled primitive.\n          --  Generate a matching spec and insert it before the body. Note the\n          --  use of Copy_Separate_Tree - we want an entirely separate semantic\n@@ -2777,18 +2795,22 @@ package body Sem_Ch3 is\n       --  them to the entity for the type which is currently the partial\n       --  view, but which is the one that will be frozen.\n \n-      --  In most cases the partial view is a private type, and both views\n-      --  appear in different declarative parts. In the unusual case where the\n-      --  partial view is incomplete, perform the analysis on the full view,\n-      --  to prevent freezing anomalies with the corresponding class-wide type,\n-      --  which otherwise might be frozen before the dispatch table is built.\n-\n       if Has_Aspects (N) then\n+\n+         --  In most cases the partial view is a private type, and both views\n+         --  appear in different declarative parts. In the unusual case where\n+         --  the partial view is incomplete, perform the analysis on the\n+         --  full view, to prevent freezing anomalies with the corresponding\n+         --  class-wide type, which otherwise might be frozen before the\n+         --  dispatch table is built.\n+\n          if Prev /= Def_Id\n            and then Ekind (Prev) /= E_Incomplete_Type\n          then\n             Analyze_Aspect_Specifications (N, Prev);\n \n+         --  Normal case\n+\n          else\n             Analyze_Aspect_Specifications (N, Def_Id);\n          end if;"}, {"sha": "167aae85c73ab70f27cfd04d60d277687803de0f", "filename": "gcc/ada/sem_ch4.adb", "status": "modified", "additions": 21, "deletions": 1, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1725676d08348f92dd1297cf79365ca69c759f31/gcc%2Fada%2Fsem_ch4.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1725676d08348f92dd1297cf79365ca69c759f31/gcc%2Fada%2Fsem_ch4.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch4.adb?ref=1725676d08348f92dd1297cf79365ca69c759f31", "patch": "@@ -2156,6 +2156,7 @@ package body Sem_Ch4 is\n       ---------------------------\n \n       procedure Process_Function_Call is\n+         Loc    : constant Source_Ptr := Sloc (N);\n          Actual : Node_Id;\n \n       begin\n@@ -2187,7 +2188,26 @@ package body Sem_Ch4 is\n             --  subsequent crashes or loops if there is an attempt to continue\n             --  analysis of the program.\n \n-            Next (Actual);\n+            --  IF there is a single actual and it is a type name, the node\n+            --  can only be interpreted as a slice of a parameterless call.\n+            --  Rebuild the node as such and analyze.\n+\n+            if No (Next (Actual))\n+              and then Is_Entity_Name (Actual)\n+              and then Is_Type (Entity (Actual))\n+              and then Is_Discrete_Type (Entity (Actual))\n+            then\n+               Replace (N,\n+                  Make_Slice (Loc,\n+                    Prefix => P,\n+                    Discrete_Range =>\n+                       New_Occurrence_Of (Entity (Actual), Loc)));\n+               Analyze (N);\n+               return;\n+\n+            else\n+               Next (Actual);\n+            end if;\n          end loop;\n \n          Analyze_Call (N);"}, {"sha": "c5ce5259870654caa206e8cee2ed3065e253b9b5", "filename": "gcc/ada/system-vxworks-x86.ads", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1725676d08348f92dd1297cf79365ca69c759f31/gcc%2Fada%2Fsystem-vxworks-x86.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1725676d08348f92dd1297cf79365ca69c759f31/gcc%2Fada%2Fsystem-vxworks-x86.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsystem-vxworks-x86.ads?ref=1725676d08348f92dd1297cf79365ca69c759f31", "patch": "@@ -7,7 +7,7 @@\n --                                 S p e c                                  --\n --                         (VxWorks 5 Version x86)                          --\n --                                                                          --\n---          Copyright (C) 1992-2012, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2014, Free Software Foundation, Inc.         --\n --                                                                          --\n -- This specification is derived from the Ada Reference Manual for use with --\n -- GNAT. The copyright notice above, and the license provisions that follow --\n@@ -115,6 +115,9 @@ package System is\n \n private\n \n+   pragma Linker_Options (\"--specs=vxworks-x86-link.spec\");\n+   --  Setup proper set of -L's for this configuration\n+\n    type Address is mod Memory_Size;\n    Null_Address : constant Address := 0;\n "}, {"sha": "740476db9455e3d6237bae1f57b846577a1d03be", "filename": "gcc/ada/vxworks-x86-link.spec", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1725676d08348f92dd1297cf79365ca69c759f31/gcc%2Fada%2Fvxworks-x86-link.spec", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1725676d08348f92dd1297cf79365ca69c759f31/gcc%2Fada%2Fvxworks-x86-link.spec", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fvxworks-x86-link.spec?ref=1725676d08348f92dd1297cf79365ca69c759f31", "patch": "@@ -0,0 +1,11 @@\n+*lib:\n++ %{mrtp:%{!shared: \\\n+    %{vxsim: \\\n+      -L%:getenv(WIND_BASE /target/usr/lib/simpentium/SIMPENTIUM/common) \\\n+      -L%:getenv(WIND_BASE /target/lib/usr/lib/simpentium/SIMPENTIUM/common) \\\n+     } \\\n+    %{!vxsim: \\\n+      -L%:getenv(WIND_BASE /target/usr/lib/pentium/PENTIUM/common) \\\n+      -L%:getenv(WIND_BASE /target/lib/usr/lib/pentium/PENTIUM/common) \\\n+     } \\\n+   }}"}]}