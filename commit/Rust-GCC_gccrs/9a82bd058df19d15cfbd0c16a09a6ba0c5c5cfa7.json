{"sha": "9a82bd058df19d15cfbd0c16a09a6ba0c5c5cfa7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OWE4MmJkMDU4ZGYxOWQxNWNmYmQwYzE2YTA5YTZiYTBjNWM1Y2ZhNw==", "commit": {"author": {"name": "Nathan Sidwell", "email": "nathan@acm.org", "date": "2017-06-29T14:16:58Z"}, "committer": {"name": "Nathan Sidwell", "email": "nathan@gcc.gnu.org", "date": "2017-06-29T14:16:58Z"}, "message": "parser.c (cp_parser_direct_declarator): Reorder if to avoid indentation.\n\n\t* parser.c (cp_parser_direct_declarator): Reorder if to avoid\n\tindentation. Remove unnecessary assignment of constructor name.\n\nFrom-SVN: r249787", "tree": {"sha": "b6351836edf02325031150335d10b7d01f3906a8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b6351836edf02325031150335d10b7d01f3906a8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9a82bd058df19d15cfbd0c16a09a6ba0c5c5cfa7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9a82bd058df19d15cfbd0c16a09a6ba0c5c5cfa7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9a82bd058df19d15cfbd0c16a09a6ba0c5c5cfa7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9a82bd058df19d15cfbd0c16a09a6ba0c5c5cfa7/comments", "author": {"login": "urnathan", "id": 13103001, "node_id": "MDQ6VXNlcjEzMTAzMDAx", "avatar_url": "https://avatars.githubusercontent.com/u/13103001?v=4", "gravatar_id": "", "url": "https://api.github.com/users/urnathan", "html_url": "https://github.com/urnathan", "followers_url": "https://api.github.com/users/urnathan/followers", "following_url": "https://api.github.com/users/urnathan/following{/other_user}", "gists_url": "https://api.github.com/users/urnathan/gists{/gist_id}", "starred_url": "https://api.github.com/users/urnathan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/urnathan/subscriptions", "organizations_url": "https://api.github.com/users/urnathan/orgs", "repos_url": "https://api.github.com/users/urnathan/repos", "events_url": "https://api.github.com/users/urnathan/events{/privacy}", "received_events_url": "https://api.github.com/users/urnathan/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "e98889226cc487b39334ae069422c0ac4615f9ec", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e98889226cc487b39334ae069422c0ac4615f9ec", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e98889226cc487b39334ae069422c0ac4615f9ec"}], "stats": {"total": 48, "additions": 22, "deletions": 26}, "files": [{"sha": "ece47f9de1213fe3024c9f13e47f791686b6180f", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9a82bd058df19d15cfbd0c16a09a6ba0c5c5cfa7/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9a82bd058df19d15cfbd0c16a09a6ba0c5c5cfa7/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=9a82bd058df19d15cfbd0c16a09a6ba0c5c5cfa7", "patch": "@@ -1,5 +1,8 @@\n 2017-06-29  Nathan Sidwell  <nathan@acm.org>\n \n+\t* parser.c (cp_parser_direct_declarator): Reorder if to avoid\n+\tindentation. Remove unnecessary assignment of constructor name.\n+\n \tWhitespace cleanups.\n \t* call.c (name_as_c_string): Move CONST_CAST to return.\n \t(build_new_method_call_1): Remove unneeded bracing."}, {"sha": "31840d6ea6f93b49fb790e2f7749026124c6d16f", "filename": "gcc/cp/parser.c", "status": "modified", "additions": 19, "deletions": 26, "changes": 45, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9a82bd058df19d15cfbd0c16a09a6ba0c5c5cfa7/gcc%2Fcp%2Fparser.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9a82bd058df19d15cfbd0c16a09a6ba0c5c5cfa7/gcc%2Fcp%2Fparser.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fparser.c?ref=9a82bd058df19d15cfbd0c16a09a6ba0c5c5cfa7", "patch": "@@ -20106,26 +20106,8 @@ cp_parser_direct_declarator (cp_parser* parser,\n \t\tif (TREE_CODE (unqualified_name) == TYPE_DECL)\n \t\t  {\n \t\t    tree name_type = TREE_TYPE (unqualified_name);\n-\t\t    if (class_type && same_type_p (name_type, class_type))\n-\t\t      {\n-\t\t\tif (qualifying_scope\n-\t\t\t    && CLASSTYPE_USE_TEMPLATE (name_type))\n-\t\t\t  {\n-\t\t\t    error_at (declarator_id_start_token->location,\n-\t\t\t\t      \"invalid use of constructor as a template\");\n-\t\t\t    inform (declarator_id_start_token->location,\n-\t\t\t\t    \"use %<%T::%D%> instead of %<%T::%D%> to \"\n-\t\t\t\t    \"name the constructor in a qualified name\",\n-\t\t\t\t    class_type,\n-\t\t\t\t    DECL_NAME (TYPE_TI_TEMPLATE (class_type)),\n-\t\t\t\t    class_type, name_type);\n-\t\t\t    declarator = cp_error_declarator;\n-\t\t\t    break;\n-\t\t\t  }\n-\t\t\telse\n-\t\t\t  unqualified_name = constructor_name (class_type);\n-\t\t      }\n-\t\t    else\n+\n+\t\t    if (!class_type || !same_type_p (name_type, class_type))\n \t\t      {\n \t\t\t/* We do not attempt to print the declarator\n \t\t\t   here because we do not have enough\n@@ -20135,6 +20117,21 @@ cp_parser_direct_declarator (cp_parser* parser,\n \t\t\tdeclarator = cp_error_declarator;\n \t\t\tbreak;\n \t\t      }\n+\t\t    else if (qualifying_scope\n+\t\t\t     && CLASSTYPE_USE_TEMPLATE (name_type))\n+\t\t      {\n+\t\t\terror_at (declarator_id_start_token->location,\n+\t\t\t\t  \"invalid use of constructor as a template\");\n+\t\t\tinform (declarator_id_start_token->location,\n+\t\t\t\t\"use %<%T::%D%> instead of %<%T::%D%> to \"\n+\t\t\t\t\"name the constructor in a qualified name\",\n+\t\t\t\tclass_type,\n+\t\t\t\tDECL_NAME (TYPE_TI_TEMPLATE (class_type)),\n+\t\t\t\tclass_type, name_type);\n+\t\t\tdeclarator = cp_error_declarator;\n+\t\t\tbreak;\n+\t\t      }\n+\t\t    unqualified_name = constructor_name (class_type);\n \t\t  }\n \n \t\tif (class_type)\n@@ -20164,14 +20161,10 @@ cp_parser_direct_declarator (cp_parser* parser,\n \t\t\t\tstruct S {\n \t\t\t\t  friend void N::S();\n \t\t\t\t};  */\n-\t\t\t     && !(friend_p\n-\t\t\t\t  && class_type != qualifying_scope)\n+\t\t\t     && (!friend_p || class_type == qualifying_scope)\n \t\t\t     && constructor_name_p (unqualified_name,\n \t\t\t\t\t\t    class_type))\n-\t\t      {\n-\t\t\tunqualified_name = constructor_name (class_type);\n-\t\t\tsfk = sfk_constructor;\n-\t\t      }\n+\t\t      sfk = sfk_constructor;\n \t\t    else if (is_overloaded_fn (unqualified_name)\n \t\t\t     && DECL_CONSTRUCTOR_P (get_first_fn\n \t\t\t\t\t\t    (unqualified_name)))"}]}