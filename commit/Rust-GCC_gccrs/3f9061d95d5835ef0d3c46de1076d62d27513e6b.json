{"sha": "3f9061d95d5835ef0d3c46de1076d62d27513e6b", "node_id": "C_kwDOANBUbNoAKDNmOTA2MWQ5NWQ1ODM1ZWYwZDNjNDZkZTEwNzZkNjJkMjc1MTNlNmI", "commit": {"author": {"name": "Andrew Pinski", "email": "apinski@marvell.com", "date": "2022-08-11T23:52:29Z"}, "committer": {"name": "Andrew Pinski", "email": "apinski@marvell.com", "date": "2022-08-24T19:15:30Z"}, "message": "[RISCV] Move iterators from bitmanip.md to iterators.md\n\nJust like the previous patch this move all of the iterators\nof bitmanip.md to iterators.md.  All modern backends put the\niterators in iterators.md for easier access.\n\nOK? Built and tested for riscv32-linux-gnu with --with-arch=rv32imafdc_zba_zbb_zbc_zbs.\n\nThanks,\nAndrew Pinski\n\ngcc/ChangeLog:\n\n\t* config/riscv/bitmanip.md\n\t(bitmanip_bitwise, bitmanip_minmax, clz_ctz_pcna,\n\ttbitmanip_optab, bitmanip_insn, shiftm1): Move to ...\n\t* config/riscv/iterators.md: Here.", "tree": {"sha": "d3f5c3482728c99403dec1707ef8435469b385f3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d3f5c3482728c99403dec1707ef8435469b385f3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3f9061d95d5835ef0d3c46de1076d62d27513e6b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3f9061d95d5835ef0d3c46de1076d62d27513e6b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3f9061d95d5835ef0d3c46de1076d62d27513e6b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3f9061d95d5835ef0d3c46de1076d62d27513e6b/comments", "author": {"login": "apinski-cavium", "id": 6335315, "node_id": "MDQ6VXNlcjYzMzUzMTU=", "avatar_url": "https://avatars.githubusercontent.com/u/6335315?v=4", "gravatar_id": "", "url": "https://api.github.com/users/apinski-cavium", "html_url": "https://github.com/apinski-cavium", "followers_url": "https://api.github.com/users/apinski-cavium/followers", "following_url": "https://api.github.com/users/apinski-cavium/following{/other_user}", "gists_url": "https://api.github.com/users/apinski-cavium/gists{/gist_id}", "starred_url": "https://api.github.com/users/apinski-cavium/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/apinski-cavium/subscriptions", "organizations_url": "https://api.github.com/users/apinski-cavium/orgs", "repos_url": "https://api.github.com/users/apinski-cavium/repos", "events_url": "https://api.github.com/users/apinski-cavium/events{/privacy}", "received_events_url": "https://api.github.com/users/apinski-cavium/received_events", "type": "User", "site_admin": false}, "committer": {"login": "apinski-cavium", "id": 6335315, "node_id": "MDQ6VXNlcjYzMzUzMTU=", "avatar_url": "https://avatars.githubusercontent.com/u/6335315?v=4", "gravatar_id": "", "url": "https://api.github.com/users/apinski-cavium", "html_url": "https://github.com/apinski-cavium", "followers_url": "https://api.github.com/users/apinski-cavium/followers", "following_url": "https://api.github.com/users/apinski-cavium/following{/other_user}", "gists_url": "https://api.github.com/users/apinski-cavium/gists{/gist_id}", "starred_url": "https://api.github.com/users/apinski-cavium/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/apinski-cavium/subscriptions", "organizations_url": "https://api.github.com/users/apinski-cavium/orgs", "repos_url": "https://api.github.com/users/apinski-cavium/repos", "events_url": "https://api.github.com/users/apinski-cavium/events{/privacy}", "received_events_url": "https://api.github.com/users/apinski-cavium/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "43e741478e3db0f319246475a585af51291b0101", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/43e741478e3db0f319246475a585af51291b0101", "html_url": "https://github.com/Rust-GCC/gccrs/commit/43e741478e3db0f319246475a585af51291b0101"}], "stats": {"total": 52, "additions": 26, "deletions": 26}, "files": [{"sha": "6317fedbbf6313aea522b57575d8c11c566ff5b3", "filename": "gcc/config/riscv/bitmanip.md", "status": "modified", "additions": 0, "deletions": 25, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3f9061d95d5835ef0d3c46de1076d62d27513e6b/gcc%2Fconfig%2Friscv%2Fbitmanip.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3f9061d95d5835ef0d3c46de1076d62d27513e6b/gcc%2Fconfig%2Friscv%2Fbitmanip.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Friscv%2Fbitmanip.md?ref=3f9061d95d5835ef0d3c46de1076d62d27513e6b", "patch": "@@ -17,31 +17,6 @@\n ;; along with GCC; see the file COPYING3.  If not see\n ;; <http://www.gnu.org/licenses/>.\n \n-(define_code_iterator bitmanip_bitwise [and ior])\n-\n-(define_code_iterator bitmanip_minmax [smin umin smax umax])\n-\n-(define_code_iterator clz_ctz_pcnt [clz ctz popcount])\n-\n-(define_code_attr bitmanip_optab [(smin \"smin\")\n-\t\t\t\t  (smax \"smax\")\n-\t\t\t\t  (umin \"umin\")\n-\t\t\t\t  (umax \"umax\")\n-\t\t\t\t  (clz \"clz\")\n-\t\t\t\t  (ctz \"ctz\")\n-\t\t\t\t  (popcount \"popcount\")])\n-\n-\n-(define_code_attr bitmanip_insn [(smin \"min\")\n-\t\t\t\t (smax \"max\")\n-\t\t\t\t (umin \"minu\")\n-\t\t\t\t (umax \"maxu\")\n-\t\t\t\t (clz \"clz\")\n-\t\t\t\t (ctz \"ctz\")\n-\t\t\t\t (popcount \"cpop\")])\n-\n-(define_mode_attr shiftm1 [(SI \"const31_operand\") (DI \"const63_operand\")])\n-\n ;; ZBA extension.\n \n (define_insn \"*zero_extendsidi2_bitmanip\""}, {"sha": "cb57ac7cb7b39733f1446f162c950083659a43f3", "filename": "gcc/config/riscv/iterators.md", "status": "modified", "additions": 26, "deletions": 1, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3f9061d95d5835ef0d3c46de1076d62d27513e6b/gcc%2Fconfig%2Friscv%2Fiterators.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3f9061d95d5835ef0d3c46de1076d62d27513e6b/gcc%2Fconfig%2Friscv%2Fiterators.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Friscv%2Fiterators.md?ref=3f9061d95d5835ef0d3c46de1076d62d27513e6b", "patch": "@@ -112,6 +112,9 @@\n ;; the controlling mode.\n (define_mode_attr HALFMODE [(DF \"SI\") (DI \"SI\") (TF \"DI\")])\n \n+; bitmanip mode attribute\n+(define_mode_attr shiftm1 [(SI \"const31_operand\") (DI \"const63_operand\")])\n+\n ;; -------------------------------------------------------------------\n ;; Code Iterators\n ;; -------------------------------------------------------------------\n@@ -147,11 +150,17 @@\n (define_code_iterator any_lt [lt ltu])\n (define_code_iterator any_le [le leu])\n \n+; bitmanip code iterators\n+(define_code_iterator bitmanip_bitwise [and ior])\n+\n+(define_code_iterator bitmanip_minmax [smin umin smax umax])\n+\n+(define_code_iterator clz_ctz_pcnt [clz ctz popcount])\n+\n ;; -------------------------------------------------------------------\n ;; Code Attributes\n ;; -------------------------------------------------------------------\n \n-\n ;; <u> expands to an empty string when doing a signed operation and\n ;; \"u\" when doing an unsigned operation.\n (define_code_attr u [(sign_extend \"\") (zero_extend \"u\")\n@@ -195,6 +204,22 @@\n \t\t\t(plus \"add\")\n \t\t\t(minus \"sub\")])\n \n+; bitmanip code attributes\n+(define_code_attr bitmanip_optab [(smin \"smin\")\n+\t\t\t\t  (smax \"smax\")\n+\t\t\t\t  (umin \"umin\")\n+\t\t\t\t  (umax \"umax\")\n+\t\t\t\t  (clz \"clz\")\n+\t\t\t\t  (ctz \"ctz\")\n+\t\t\t\t  (popcount \"popcount\")])\n+(define_code_attr bitmanip_insn [(smin \"min\")\n+\t\t\t\t (smax \"max\")\n+\t\t\t\t (umin \"minu\")\n+\t\t\t\t (umax \"maxu\")\n+\t\t\t\t (clz \"clz\")\n+\t\t\t\t (ctz \"ctz\")\n+\t\t\t\t (popcount \"cpop\")])\n+\n ;; -------------------------------------------------------------------\n ;; Int Iterators.\n ;; -------------------------------------------------------------------"}]}