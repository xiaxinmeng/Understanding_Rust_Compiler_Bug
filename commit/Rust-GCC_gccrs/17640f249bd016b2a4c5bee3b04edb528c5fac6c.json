{"sha": "17640f249bd016b2a4c5bee3b04edb528c5fac6c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTc2NDBmMjQ5YmQwMTZiMmE0YzViZWUzYjA0ZWRiNTI4YzVmYWM2Yw==", "commit": {"author": {"name": "Eric Christopher", "email": "echristo@gcc.gnu.org", "date": "2002-07-08T19:41:57Z"}, "committer": {"name": "Eric Christopher", "email": "echristo@gcc.gnu.org", "date": "2002-07-08T19:41:57Z"}, "message": "configure.target: Fix comment for mips atomicity.\n\n2002-07-08  Eric Christopher  <echristo@redhat.com>\n\n\t* configure.target: Fix comment for mips atomicity. Add\n\tmips*-*-linux* target, enable atomic operations there.\n\t* config/cpu/mips/atomicity.h: Fix comments, remove\n\t#ifndef/#endif. Add push/pop mips2.\n\nFrom-SVN: r55331", "tree": {"sha": "37f50dfc7f79080ac61700eccabe479607717f48", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/37f50dfc7f79080ac61700eccabe479607717f48"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/17640f249bd016b2a4c5bee3b04edb528c5fac6c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/17640f249bd016b2a4c5bee3b04edb528c5fac6c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/17640f249bd016b2a4c5bee3b04edb528c5fac6c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/17640f249bd016b2a4c5bee3b04edb528c5fac6c/comments", "author": null, "committer": null, "parents": [{"sha": "0c3a2ea0935bf21815de61ee079304a046b360b6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0c3a2ea0935bf21815de61ee079304a046b360b6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0c3a2ea0935bf21815de61ee079304a046b360b6"}], "stats": {"total": 207, "additions": 110, "deletions": 97}, "files": [{"sha": "c056f78376df71cc7bc26868b8ba570a10bcf008", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 91, "deletions": 84, "changes": 175, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/17640f249bd016b2a4c5bee3b04edb528c5fac6c/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/17640f249bd016b2a4c5bee3b04edb528c5fac6c/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=17640f249bd016b2a4c5bee3b04edb528c5fac6c", "patch": "@@ -1,3 +1,10 @@\n+2002-07-08  Eric Christopher  <echristo@redhat.com>\n+\n+\t* configure.target: Fix comment for mips atomicity. Add\n+\tmips*-*-linux* target, enable atomic operations there.\n+\t* config/cpu/mips/atomicity.h: Fix comments, remove\n+\t#ifndef/#endif. Add push/pop mips2.\n+\n 2002-07-08  Peter Schmid  <schmid@snake.iap.physik.tu-darmstadt.de>\n \n \t* include/bits/stl_deque.h (_Deque_alloc_base):  Change order of\n@@ -22,7 +29,7 @@\n \t* include/std/std_streambuf.h (basic_streambuf::_M_buf): Change to\n \tsize_t, from int_type.\n  \t(basic_streambuf::_M_buf_size_opt): Same.\n- \t(basic_streambuf::_S_pback_sizex): Same.\t\n+ \t(basic_streambuf::_S_pback_sizex): Same.\n \t* include/bits/streambuf.tcc: Same.\n \t* include/std/std_streambuf.h (basic_streambuf::snextc): Use\n \teq_int_type.\n@@ -43,15 +50,15 @@\n \t* testsuite/23_containers/map_operators.cc (test01): Split into..\n \t* testsuite/23_containers/map_operators_neg.cc (test01): ...this. New.\n \t* testsuite/23_containers/set_operators.cc: Move to...\n-\t* testsuite/23_containers/set_operators_neg.cc: ...here.\t\n+\t* testsuite/23_containers/set_operators_neg.cc: ...here.\n \t* testsuite/README: Add some more naming rules.\n-\t\n+\n 2002-07-03  Steev Wilcox  <steev@paradigmds.com>\n-\t \n+\n \tPR libstdc++/7057\n \t* include/ext/stl_hashtable.h: Fix.\n \t* testsuite/ext/hash_map.cc: New.\n-\t\n+\n 2002-07-03  Jack Reeves  <jackw_reeves@hotmail.com>\n             Kenny Simpson  <theonetruekenny@yahoo.com>\n             Phil Edwards  <pme@gcc.gnu.org>\n@@ -111,7 +118,7 @@\n \t* include/Makefile.am (backward_headers): Remove strstream.h.\n \t* include/Makefile.in: Regenerate.\n \t* config/linker-map.gnu: Export strstream bits.\n-\t\n+\n \t* src/fstream-inst.cc: Tweak.\n \t* src/io-inst.cc: Same.\n \t* src/istream-inst.cc: Same.\n@@ -125,7 +132,7 @@\n \n \t* configure.in (libtool_VERSION): Bump to 5:0:0.\n \t* configure: Regenerate.\n-\t\n+\n 2002-06-28  Phil Edwards  <pme@gcc.gnu.org>\n \n \tPR libstdc++/7157, PR libstdc++/7158, PR libstdc++/7161\n@@ -146,7 +153,7 @@\n \t(libstdcxx_interface): Change. Use gcc methods to determine version.\n \t* configure: Regenerate.\n \t* aclocal.m4: Regenerate.\n-\t\n+\n 2002-06-25  DJ Delorie  <dj@redhat.com>\n \n \t* acinclude.m4 (GLIBCPP_CONFIGURE): Split out\n@@ -214,8 +221,8 @@\n \t* include/c/std_cwchar.h: Include cstddef for size_t.\n \n \t* include/c_std/std_cmath.h: Remove extra function.\n-\t\n-\tPendantic std usage in testsuites.\t\n+\n+\tPendantic std usage in testsuites.\n \t* testsuite/17_intro/header_cstdlib.cc (test01): Qualify ldiv_t\n \twith std.\n \t* testsuite/17_intro/header_cwchar.cc: Tweak.\n@@ -248,7 +255,7 @@\n \t* testsuite/26_numerics/fabs_inline.cc: Use std::printf.\n \t* testsuite/27_io/istream_seeks.cc (test02): Qualify abort.\n \t* testsuite/27_io/istream_extractor_arith.cc (test11): Qualify strtol.\n-\t\n+\n 2002-06-20  Benjamin Kosnik  <bkoz@redhat.com>\n \n \t* libsupc++/Makefile.am (libsupc__convenience_la_SOURCES): Add\n@@ -274,16 +281,16 @@\n \t* aclocal.m4: Regenerate.\n \t* configure: Regenerate.\n \t* configure.target (c_model, c_compatibility): Add.\n-\t\n+\n \t* libsupc++/Makefile.am (c_sources): New.\n \t(libsupc___la_SOURCES): Add c_sources.\n \t(LTCOMPILE): Remove INCLUDES.\n \t(GCC_INCLUDES): New.\n \t(C_COMPILE): New, like COMPILE but without INCLUDES.\n \t(cxa_demangle.o): Use C_COMPILE.\n-\t(dyn-string.o): Use C_COMPILE.\t\n-\t\n-\t* include/c/std_cstdarg.h: Define __need___va_list.  \n+\t(dyn-string.o): Use C_COMPILE.\n+\n+\t* include/c/std_cstdarg.h: Define __need___va_list.\n \t* include/c/std_cstddef.h: Define need_size_t, need_ptrdiff_t,\n \tneed_NULL, need_offsetof.\n \n@@ -308,7 +315,7 @@\n \t* src/Makefile.am (sources): Remove cmath.cc.\n \t* src/Makefile.in: Regenerate.\n \t* src/cmath.cc: Remove.\n-\t\n+\n 2002-06-18  Phil Edwards  <pme@gcc.gnu.org>\n \n \t* configure.target:  Force mips to use the generic cpu routines.\n@@ -368,14 +375,14 @@\n \n 2002-06-11  J.T. Conklin  <jtc@acorntoolworks.com>\n             Benjamin Kosnik  <bkoz@redhat.com>\n-\t\n+\n \t* configure.target: Set os_include_dir to config/os/qnx/qnx6.1\n \tunder *-qnx6.[12]*.\n \t* configure.in: Add support for *-qnx6.[12]*.\n \t* configure: Regenerate.\n \n \t* config/os/qnx, config/os/qnx/qnx6.1, config/os/qnx/qnx6.1/bits:\n-\tNew directories.  \n+\tNew directories.\n \t* config/os/qnx/qnx6.1/bits/ctype_base.h, ctype_inline.h,\n \tctype_noninline.h, os_defines.h: New files.\n \n@@ -398,7 +405,7 @@\n \n \t* include/backwards/strstream: Format.\n \t* src/strstream.cc: Format.\n-\t\n+\n 2002-06-08  Andreas Schwab  <schwab@suse.de>\n \n \t* src/strstream.cc (strstreambuf::overflow): Set _M_buf,\n@@ -415,7 +422,7 @@\n \t* include/bits/istream.tcc (basic_istream): Ditto.\n \t(ws) Ditto.\n \t(operator>>) Ditto.\n-\t* include/bits/ostream.tcc (basic_ostream): Ditto. \n+\t* include/bits/ostream.tcc (basic_ostream): Ditto.\n \t(endl): Ditto.\n \t(ends): Ditto.\n \t(flush): Ditto.\n@@ -465,7 +472,7 @@\n \t* testsuite/22_locale/money_put_members_wchar_t.cc:\n \t(test02, test03, test06): Likewise.\n \t* testsuite/22_locale/num_get_members_char.cc:\n-\t(test02, test01): Likewise; suffix long long constants with LL.\t\n+\t(test02, test01): Likewise; suffix long long constants with LL.\n \t* testsuite/22_locale/num_get_members_wchar_t.cc:\n \t(test02, test01): Likewise.\n \t* testsuite/22_locale/num_put_members_char.cc:\n@@ -536,32 +543,32 @@\n \t* src/misc-inst.cc: Define unnecessary algorithm\n \tinstantiations. Break apart instantiations into groupings below.\n \t* src/fstream-inst.cc: New.\n-\t* src/io-inst.cc: New.\t\n-\t* src/istream-inst.cc: New.\t\n-\t* src/ostream-inst.cc: New.\t\t\n-\t* src/streambuf-inst.cc: New.\t\n-\t* src/sstream-inst.cc: New.\t\t\n+\t* src/io-inst.cc: New.\n+\t* src/istream-inst.cc: New.\n+\t* src/ostream-inst.cc: New.\n+\t* src/streambuf-inst.cc: New.\n+\t* src/sstream-inst.cc: New.\n \t* src/Makefile.am (sources): Add files.\n \t* src/Makefile.in: Regenerate.\n \n \t* acinclude.m4: Work around automake 1.4-p5 bug, change\n \tAM_GNU_GETTEXT in comments to AM-GNU-GETTEXT.\n-\t\n+\n 2002-05-27  Benjamin Kosnik  <bkoz@redhat.com>\n \n \tPR libstdc++/6795.\n \t* config/os/solaris/solaris2.6/bits/ctype_noninline.h\n \t(classic_table): Fix.\n \t* config/os/solaris/solaris2.5/bits/ctype_noninline.h: Same.\n-\t\n+\n 2002-05-27  Benjamin Kosnik  <bkoz@redhat.com>\n \n \t* testsuite/22_locale/ctype_is_wchar_t.cc: Guard with\n \t_GLIBCPP_USE_WCHAR_T.\n \t* testsuite/22_locale/ctype_narrow_wchar_t.cc: Same.\n \t* testsuite/22_locale/ctype_to_wchar_t.cc: Same.\n \t* testsuite/22_locale/ctype_widen_wchar_t.cc: Same.\n-\t\n+\n 2002-05-26  Carlo Wood  <carlo@alinoe.com>\n             Paolo Carlini  <pcarlini@unitus.it>\n \n@@ -581,7 +588,7 @@\n \n \tPR libstdc++/6701\n \t* testsuite/22_locale/ctype_narrow_char.cc: New.\n-\t* testsuite/22_locale/ctype_narrow_wchar_t.cc: New.\t\n+\t* testsuite/22_locale/ctype_narrow_wchar_t.cc: New.\n \t* testsuite/22_locale/ctype_widen_char.cc: New.\n \t* testsuite/22_locale/ctype_widen_wchar_t.cc: New.\n \t* testsuite/22_locale/ctype_members_char.cc: Move some bits into...\n@@ -592,13 +599,13 @@\n \t* testsuite/22_locale/ctype_to_wchar_t.cc: ...and this.\n \n \t* testsuite/22_locale/ctype_scan_wchar_t.cc: Should pass.\n-\t\n+\n 2002-05-24  Dale Peakall <dale@peakall.net>\n \n \tPR libstdc++/6701\n \t* config/locale/gnu/ctype_members.cc (ctype<wchar_t>::do_narrow): Fix.\n \t* config/locale/generic/ctype_members.cc: Same.\n-\t\n+\n 2002-05-24  Benjamin Kosnik  <bkoz@redhat.com>\n \n \tPR libstdc++/6750\n@@ -609,13 +616,13 @@\n \t(ostream<char>::operator<<(streambuf*)): Same.\n \t* testsuite/27_io/ostream_inserter_char.cc (test08): Add tests.\n \t* testsuite/27_io/ostream_inserter_other.cc (test02): Modify.\n-\t\n+\n 2002-05-23  Benjamin Kosnik  <bkoz@redhat.com>\n \n \t* configure.in (release_VERSION): Update to 3.1.1.\n \t(libtool_VERSION): Update to 4:1:0.\n \t* configure: Regenerate.\n-\t\n+\n 2002-05-21  Phil Edwards  <pme@gcc.gnu.org>\n \n \t* include/bits/stl_pair.h:  Tweak comment markup.\n@@ -689,7 +696,7 @@\n \t(ostream::operator<<(const _CharT*)): Same.\n \t(ostream<char>::operator<<(const char*)): Same.\n \t* testsuite/27_io/ostream_inserter_char.cc (test07): Add test.\n-\t\n+\n 2002-05-15  Benjamin Kosnik  <bkoz@redhat.com>\n \n \tPR libstdc++/6594\n@@ -706,10 +713,10 @@\n 2002-05-13  Benjamin Kosnik  <bkoz@redhat.com>\n \n \t* testsuite/22_locale/ctype_scan_char.cc: Tweak.\n-\t* testsuite/22_locale/ctype_scan_wchar_t.cc: New.\t\n+\t* testsuite/22_locale/ctype_scan_wchar_t.cc: New.\n \n \t* docs/html/install.html: Fix.\n-\t\n+\n 2002-05-13  Benjamin Kosnik  <bkoz@redhat.com>\n \n \t* include/bits/fstream.tcc\n@@ -721,7 +728,7 @@\n \tfor the 22_locale tests when using the gnu model.\n \n \t* testsuite/27_io/istream_sentry.cc: Tweak.\n-\t\n+\n 2002-05-13  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n \n \t* config/os/irix/irix5.2/bits/ctype_inline.h (scan_is, scan_not):\n@@ -823,16 +830,16 @@\n \t* testsuite/22_locale/messages_members_char.cc: Add test03.\n \t* testsuite/22_locale/money_get_members_char.cc: Add test08.\n \t* testsuite/22_locale/money_get_members_wchar_t.cc: Likewise.\n-\t* testsuite/22_locale/money_put_members_char.cc: Add test07. \n+\t* testsuite/22_locale/money_put_members_char.cc: Add test07.\n \t* testsuite/22_locale/money_put_members_wchar_t.cc: Likewise.\n \t* testsuite/22_locale/moneypunct_members_char.cc: Add test03.\n \t* testsuite/22_locale/moneypunct_members_wchar_t.cc: Likewise.\n \t* testsuite/22_locale/num_get_members_char.cc: Add test06.\n-\t* testsuite/22_locale/num_get_members_wchar_t.cc: Likewise. \n+\t* testsuite/22_locale/num_get_members_wchar_t.cc: Likewise.\n \t* testsuite/22_locale/numpunct_members_char.cc: Add test03.\n-\t* testsuite/22_locale/numpunct_members_wchar_t.cc: Likewise. \n+\t* testsuite/22_locale/numpunct_members_wchar_t.cc: Likewise.\n \t* testsuite/22_locale/time_get_members_char.cc: Add test08.\n-\t* testsuite/22_locale/time_get_members_wchar_t.cc: Likewise. \n+\t* testsuite/22_locale/time_get_members_wchar_t.cc: Likewise.\n \t* testsuite/22_locale/time_put_members_char.cc: Add test04.\n \t* testsuite/22_locale/time_put_members_wchar_t.cc: Likewise.\n \n@@ -883,7 +890,7 @@\n \tPR libstdc++/6549.\n \t* include/bits/fstream.tcc (filebuf::_M_underflow_common): Revert.\n \t* testsuite/27_io/narrow_stream_objects.cc (test07): Add.\n-\t\n+\n 2002-05-03  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n \n \t* config/os/irix/irix5.2/bits/ctype_noninline.h (classic_table):\n@@ -926,7 +933,7 @@\n \tPR libstdc++/6533\n \t* include/bits/streambuf_iterator.h (istreambuf_iterator::_M_get): New.\n \t(istreambuf_iterator::equal): Use it.\n-\t(istreambuf_iterator::operator*): Use it.\t\n+\t(istreambuf_iterator::operator*): Use it.\n \n 2002-05-01  Paolo Carlini  <pcarlini@unitus.it>\n \n@@ -938,25 +945,25 @@\n \t* testsuite/23_containers/vector_ctor.cc: Add test04.\n \n 2002-04-30  John David Anglin  <dave@hiauly1.hia.nrc.ca>\n-\t\n+\n \tPR libstdc++/6501\n \t* include/c_std/std_cctype.h: Include bits/c++config.h.\n \t* config/os/hpux/bits/os_defines.h (_SB_CTYPE_MACROS): Define.\n \n 2002-04-30  Benjamin Kosnik  <bkoz@redhat.com>\n \n \t* include/ext/stdio_filebuf.h: New file.\n-\t* include/ext/enc_filebuf.h: New file.\t\n+\t* include/ext/enc_filebuf.h: New file.\n \t* config/io/basic_file_stdio.h (__basic_file::sys_open): Add fd ctor.\n-\t* config/io/basic_file_stdio.cc: Same.\t\n+\t* config/io/basic_file_stdio.cc: Same.\n \t* include/bits/fstream.tcc (filebuf::_M_allocate_internal_buffer):\n \tRemove _M_unbuf hacks.\n \t(filebuf::_M_destroy_internal_buffer): Same.\n \t(filebuf::filebuf(cfile, openmode, int_type): Remove definition.\n \t(filebuf::fd): Remove.\n \t* include/std/std_fstream.h (filebuf::_M_unbuf): Remove.\n \t(filebuf::filebuf(__c_file*, openmode, int_type)): Remove.\n-\t(filebuf::fd): Remove.\t\n+\t(filebuf::fd): Remove.\n \t* src/ios.cc (ios_base::_S_ios_create): Change to use specialized\n \tfilebufs.\n \t(ios_base::_S_ios_destroy): Same.\n@@ -978,12 +985,12 @@\n \t(istreambuf_iterator::operator++): Invalidate on eof.\n \t(istreambuf_iterator::operator++(int)): Same.\n \t(istreambuf_iterator::operator*): Same.\n-\t\n+\n 2002-04-29  Rainer Orth  <ro@TechFak.Uni-Bielefeld.DE>\n \n \t* testsuite/lib/libstdc++-v3-dg.exp (libstdc++-v3-init): Set all\n \tof LD_LIBRARY_PATH, SHLIB_PATH, LD_LIBRARYN32_PATH,\n-\tLD_LIBRARY64_PATH. \n+\tLD_LIBRARY64_PATH.\n \n 2002-04-28  Benjamin Kosnik  <bkoz@redhat.com>\n \n@@ -994,7 +1001,7 @@\n \t* include/bits/fstream.tcc (basic_filebuf::_M_underflow_common):\n \tUse sys_getc for unbuffered input.\n \t* testsuite/27_io/narrow_stream_objects.cc (test06): New.\n-\t\n+\n \t* src/ios.cc (_M_grow_words): Adjust error checking.\n \t* testsuite/27_io/ios_base_storage.cc: Same.\n \n@@ -1057,11 +1064,11 @@\n 2002-04-20  Jason Merrill  <jason@redhat.com>\n \n \tPR libstdc++/4150\n-\t* include/std/std_streambuf.h (basic_streambuf::_M_set_indeterminate): \n+\t* include/std/std_streambuf.h (basic_streambuf::_M_set_indeterminate):\n \tMove to filebuf.\n \t(basic_streambuf::_M_set_determinate): Likewise.\n \t(basic_streambuf::_M_is_indeterminate): Likewise.\n-\t* include/bits/std_fstream.h (basic_filebuf::_M_filepos): New \n+\t* include/bits/std_fstream.h (basic_filebuf::_M_filepos): New\n \tnon-static data member.\n \t(basic_filebuf::_M_underflow_common): New non-static member function.\n \t(basic_filebuf::_M_underflow, _M_uflow): Call it.\n@@ -1073,13 +1080,13 @@\n \t* include/bits/fstream.tcc (basic_filebuf::_M_really_overflow): Seek\n \tback to _M_out_beg if necessary.\n \t(basic_filebuf::seekoff): Likewise.\n-\t(basic_filebuf::_M_underflow_common): Generalization of old \n+\t(basic_filebuf::_M_underflow_common): Generalization of old\n \tunderflow().  Don't seek back to _M_in_beg.\n \t* src/ios.cc: Lose _GLIBCPP_AVOID_FSEEK stuff.\n \t* config/os/solaris/solaris2.?/bits/os_defines.h: Likewise.\n \t* config/os/bsd/freebsd/bits/os_defines.h: Likewise.\n \t* config/os/mingw32/bits/os_defines.h: Likewise.\n-\t* testsuite/27_io/filebuf_virtuals.cc (test05): Don't overspecify \n+\t* testsuite/27_io/filebuf_virtuals.cc (test05): Don't overspecify\n \tungetc test.\n \n 2002-04-22  Benjamin Kosnik  <bkoz@redhat.com>\n@@ -1094,7 +1101,7 @@\n \tdelimiter as is.\n \t* include/bits/streambuf.tcc: Use this->gptr.\n \t* testsuite/27_io/istream_unformatted.cc (test08): Add test.\n-\t\n+\n 2002-04-18  Benjamin Kosnik  <bkoz@redhat.com>\n \n \t* include/bits/localefwd.h (locale::id::_M_id): Do this correctly,\n@@ -1106,7 +1113,7 @@\n \t* testsuite/21_strings/inserters_extractors.cc: Tweaks.\n \t* testsuite/27_io/instantiations.cc (test): Add bool variable...\n \t* testsuite/21_strings/capacity.cc: Clean.\n-\t\t\n+\n 2002-04-17  Phil Edwards  <pme@gcc.gnu.org>\n \n \t* docs/doxygen/doxygroups.cc:  New group on binary searching.\n@@ -1129,11 +1136,11 @@\n 2002-04-17  Benjamin Kosnik  <bkoz@redhat.com>\n \n \t* config/linker-map.gnu (__malloc_alloc_template): Add.\n-\t(__default_alloc_template): Same.\t\n+\t(__default_alloc_template): Same.\n \t* include/bits/stl_alloc.h (__malloc_alloc_template): Add extern\n \ttemplate.\n \t(__default_alloc_template): Same.\n-\t\n+\n 2002-04-17  Benjamin Kosnik  <bkoz@redhat.com>\n \n \t* testsuite/27_io/filebuf_virtuals.cc: Add _S_pback_size instantiation.\n@@ -1147,11 +1154,11 @@\n \t* include/bits/istream.tcc: Remove sputbackc calls.\n \n \t* testsuite/19_diagnostics/stdexceptions.cc: Fix comment.\n-\t\n+\n 2002-04-16  Paolo Carlini <pcarlini@unitus.it>\n \n  \t* testsuite/24_iterators/rel_ops.cc: New test.\n-\t\n+\n 2002-04-16  Gabriel Dos Reis  <gdr@merlin.codesourcery.com>\n \n \t* include/bits/type_traits.h (__normal_iterator): Declare in\n@@ -1170,11 +1177,11 @@\n \tValgrind fixes.\n \t* config/io/basic_file_stdio.cc (__basic_file::~__basic_file):\n \tCall close.\n-\t(__basic_file::close): Call fflush. Correct return if fclose ok. \n+\t(__basic_file::close): Call fflush. Correct return if fclose ok.\n \t(__basic_file::is_open): Make const.\n \tChange __c_file_type to __c_file.\n \t* config/io/basic_file_stdio.h: Change __c_file_type to __c_file.\n-\t(__basic_file::is_open): Make const.\t\n+\t(__basic_file::is_open): Make const.\n \t* config/io/c_io_stdio.h: Change __c_file_type to __c_file.\n \t* include/std/std_fstream.h (filebuf::_M_allocate_file): Remove.\n \t(filebuf::_M_unbuf): Add.\n@@ -1185,7 +1192,7 @@\n \tChange initialization list for _M_file change.\n \t(filebuf::_M_allocate_pback_buffer): Remove.\n \tChange _M_file usage to reflect non-pointer data member.\n-\t\n+\n \t* config/locale/generic/c_locale.cc\n \t(locale::facet::_S_create_c_locale): Add parameter.\n \t* config/locale/generic/collate_members.cc: Change\n@@ -1212,7 +1219,7 @@\n \t* config/locale/ieee_1003.1-2001/c_locale.h: Correct typedef.\n \t* config/locale/ieee_1003.1-2001/codecvt_specializations.h: Remove\n \tbogus ctor.\n-\t\n+\n \t* include/bits/locale_facets.h (moneypunct): Use string literals.\n \tDon't define dtor.\n \t(numpunct): Same.\n@@ -1229,7 +1236,7 @@\n \t(locale::_Impl::_Impl(facet**, size_t, bool)): Add.\n \t(locale::_Impl::_Impl(string, size_t)): Change to\n \t(locale::_Impl::_Impl(const char*, size_t)): This.\n-\t\n+\n \t* include/bits/streambuf.tcc (streambuf::_S_pback_size): Define.\n \t* include/std/std_streambuf.h (streambuf::_M_pback_size): Change to\n \t(streambuf::_S_pback_size): This.\n@@ -1241,12 +1248,12 @@\n \t* src/localename.cc: Same.\n \n \t* include/bits/stl_vector.h: Fix odd formatting.\n-\t\n+\n \t* include/bits/basic_string.tcc: Tweak comment.\n \n \t* libsupc++/new: Make sure parameters are uglified.\n \t* libsupc++/typeinfo: Same.\n-\t\t\n+\n \t* testsuite/22_locale/num_get_members_char.cc: Fixup.\n \t* testsuite/22_locale/num_get_members_wchar_t.cc: Same.\n \t* testsuite/27_io/filebuf_members.cc: Same.\n@@ -1287,13 +1294,13 @@\n \t(has_locale): Adjust.\n \t* src/locale.cc: Adjust.\n \t* src/localename.cc: Same.\n-\t\n+\n 2002-04-09  Benjamin Kosnik  <bkoz@redhat.com>\n \t    Richard Henderson  <rth@redhat.com>\n \n \t* include/bits/sstream.tcc: Clean up bit ops.\n \t* include/bits/fstream.tcc: Same.\n-\t\n+\n 2002-04-09  Jakub Jelinek  <jakub@redhat.com>\n \n \t* include/bits/locale_facets.h (__num_base::_S_scale_hex): Remove.\n@@ -1312,7 +1319,7 @@\n \tFormat.\n \t* src/bitset.cc: Adjust.\n \t* config/linker-map.gnu: Export.\n-\t\n+\n 2002-04-08  Benjamin Kosnik  <bkoz@redhat.com>\n \n \tlibstdc++/5180\n@@ -1323,7 +1330,7 @@\n \topen modes and which modes.\n \t(stringbuf::seekpos): Same.\n \t* testsuite/27_io/stringbuf_virtuals.cc: New tests.\n-\t\n+\n 2002-04-05  Jonathan Wakely <jw@kayari.org>\n \n \t* include/bits/stl_algo.h (unique_copy, __gcd, rotate, rotate_copy,\n@@ -1337,24 +1344,24 @@\n \n 2002-04-04  Benjamin Kosnik  <bkoz@redhat.com>\n \n-\tlibstdc++/3457 \n+\tlibstdc++/3457\n \tvia gawrilow@math.tu-berlin.de\n \t* acinclude.m4 (version_specific_libs): Fix combo usage with\n \t--with-gxx-include-dir.\n \t* aclocal.m4: Regenerate.\n \t* configure: Same.\n-\t\n+\n 2002-04-03  Benjamin Kosnik  <bkoz@redhat.com>\n \n         As per DR 184, libstdc++/3139\n         * include/std/std_limits.h (__glibcpp_bool_digits): Change to 1.\n         (numeric_limits<bool>::is_iec559): False.\n-        (numeric_limits<bool>::is_modulo): False.       \n+        (numeric_limits<bool>::is_modulo): False.\n \n \t* testsuite/27_io/ios_init.cc: Add instantiations.\n \n 2002-04-02  Benjamin Kosnik  <bkoz@redhat.com>\n-\t\n+\n \tlibstdc++/5268\n \t* src/ios.cc: (ios_base::Init::_S_ios_destroy): Remove flush calls.\n \t* testsuite/27_io/ios_init.cc (tests04): Add test.\n@@ -1366,7 +1373,7 @@\n \t* include/bits/istream.tcc: Use _M_fctype, make consistent with\n \tostream.\n \t* testsuite/27_io/ios_init.cc (tests03): Add test.\n-\t\n+\n 2002-04-02  Phil Edwards  <pme@gcc.gnu.org>\n \n \t* include/Makefile.am (install-data-local):  Use mkinstalldirs.\n@@ -1418,31 +1425,31 @@\n \tverbose_terminate_handler into line with reality.\n \n 2002-04-01  Benjamin Kosnik  <bkoz@redhat.com>\n-\t\n+\n \tlibstdc++/3129\n \t* include/bits/basic_ios.h (basic_ios::_M_exception): Move.\n-\t(basic_ios::_M_streambuf_state): Move.\t\n+\t(basic_ios::_M_streambuf_state): Move.\n \t* include/bits/ios_base (ios_base): To here.\n \t* include/bits/ios_base.h (ios_base::_S_local_words): To\n \t_S_local_word_size.\n \t(ios_base::_M_word_array): To _M_local_word.\n-\t(ios_base::_M_words_limit): To _M_word_size.\t\n-\t(ios_base::_M_words): To _M_word.\t\t\n+\t(ios_base::_M_words_limit): To _M_word_size.\n+\t(ios_base::_M_words): To _M_word.\n \tComment.\n-\t* include/bits/basic_ios.tcc: Adjust.\t\n+\t* include/bits/basic_ios.tcc: Adjust.\n \t* src/ios.cc (ios_base::_M_grow_words): Tweak.\n \t* testsuite/27_io/ios_base_storage.cc: Add tests.\n \n \tlibstdc++/5207\n \tKenny Simpson <theonetruekenny@yahoo.com>\n \t* include/bits/ios_base.h: Fix.\n-\t\n+\n \tRichard Henderson  <rth@redhat.com>\n \t* include/bits/ostream.tcc (ostream::operator<<(_CharT)): Correct\n \tlast change.\n \n \t* include/bits/basic_string.h: Tweak formatting.\n-\t\n+\n 2002-04-01  Paolo Carlini  <pcarlini@unitus.it>\n \n \t* config/locale/ieee_1003.1-2001/codecvt_specializations.h"}, {"sha": "447355b7a6df03dc855325b251b9d5dbbf44d023", "filename": "libstdc++-v3/config/cpu/mips/atomicity.h", "status": "modified", "additions": 9, "deletions": 6, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/17640f249bd016b2a4c5bee3b04edb528c5fac6c/libstdc%2B%2B-v3%2Fconfig%2Fcpu%2Fmips%2Fatomicity.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/17640f249bd016b2a4c5bee3b04edb528c5fac6c/libstdc%2B%2B-v3%2Fconfig%2Fcpu%2Fmips%2Fatomicity.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfig%2Fcpu%2Fmips%2Fatomicity.h?ref=17640f249bd016b2a4c5bee3b04edb528c5fac6c", "patch": "@@ -1,6 +1,6 @@\n-// Low-level functions for atomic operations. MIPS II version.\n+// Low-level functions for atomic operations.\n \n-// Copyright (C) 2001 Free Software Foundation, Inc.\n+// Copyright (C) 2001, 2002 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -27,12 +27,9 @@\n // invalidate any other reasons why the executable file might be covered by\n // the GNU General Public License.\n \n-#ifndef _BITS_ATOMICITY_H \n+#ifndef _BITS_ATOMICITY_H\n #define _BITS_ATOMICITY_H 1\n \n-// #include <sgidefs.h>\n-// #ifdef (_MIPS_ISA_MIPS2)\n-\n typedef int _Atomic_word;\n \n static inline int\n@@ -44,9 +41,12 @@ __exchange_and_add (volatile _Atomic_word *__mem, int __val)\n   __asm__ __volatile__\n     (\"/* Inline exchange & add */\\n\\t\"\n      \"1:\\n\\t\"\n+     \".set\tpush\\n\\t\"\n+     \".set\tmips2\\n\\t\"\n      \"ll\t%0,%3\\n\\t\"\n      \"addu\t%1,%4,%0\\n\\t\"\n      \"sc\t%1,%2\\n\\t\"\n+     \".set\tpop\\n\\t\"\n      \"beqz\t%1,1b\\n\\t\"\n      \"/* End exchange & add */\"\n      : \"=&r\"(__result), \"=&r\"(__tmp), \"=m\"(*__mem)\n@@ -65,9 +65,12 @@ __atomic_add (volatile _Atomic_word *__mem, int __val)\n   __asm__ __volatile__\n     (\"/* Inline atomic add */\\n\\t\"\n      \"1:\\n\\t\"\n+     \".set\tpush\\n\\t\"\n+     \".set\tmips2\\n\\t\"\n      \"ll\t%0,%2\\n\\t\"\n      \"addu\t%0,%3,%0\\n\\t\"\n      \"sc\t%0,%1\\n\\t\"\n+     \".set\tpop\\n\\t\"\n      \"beqz\t%0,1b\\n\\t\"\n      \"/* End atomic add */\"\n      : \"=&r\"(__result), \"=m\"(*__mem)"}, {"sha": "fd8e17e29fabc7250f86eccded69719321207135", "filename": "libstdc++-v3/configure.target", "status": "modified", "additions": 10, "deletions": 7, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/17640f249bd016b2a4c5bee3b04edb528c5fac6c/libstdc%2B%2B-v3%2Fconfigure.target", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/17640f249bd016b2a4c5bee3b04edb528c5fac6c/libstdc%2B%2B-v3%2Fconfigure.target", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfigure.target?ref=17640f249bd016b2a4c5bee3b04edb528c5fac6c", "patch": "@@ -28,7 +28,7 @@\n #\n #   c_model                the model to use for \"C\" headers, defaults to c_std.\n #\n-#   c_compatibility        if \"C\" compatibility headers are necessary, \n+#   c_compatibility        if \"C\" compatibility headers are necessary,\n #                              defaults to no.\n #\n # It possibly modifies the following variables:\n@@ -58,10 +58,10 @@ c_model=c_std\n c_compatibility=no\n \n \n-# TARGET-SPECIFIC OVERRIDES \n+# TARGET-SPECIFIC OVERRIDES\n # Set any CPU-dependent bits.\n # Here we override defaults and catch more general cases due to naming\n-# conventions (e.g., chip_name* to catch all variants).  \n+# conventions (e.g., chip_name* to catch all variants).\n # THIS TABLE IS SORTED.  KEEP IT THAT WAY.\n case \"${target_cpu}\" in\n   alpha*)\n@@ -77,8 +77,9 @@ case \"${target_cpu}\" in\n   m68k | m680[246]0)\n     cpu_include_dir=\"cpu/m68k\"\n     ;;\n-  mips)\n-    # This is only until the mips routines are fixed.\n+  mips*)\n+    # MIPS chips are unreliable as to sc/ll support. By default\n+    # don't use atomic instructions and override for the OS.\n     cpu_include_dir=\"cpu/generic\"\n     ;;\n   mmix)\n@@ -123,7 +124,7 @@ unset _cpu_incdir_fullpath\n \n \n # Set any OS-dependent bits.\n-# Set the os_include_dir.  \n+# Set the os_include_dir.\n # Set c_model, c_compatibility here.\n # If atomic ops and/or numeric limits are OS-specific rather than\n # CPU-specifc, set those here too.\n@@ -202,5 +203,7 @@ case \"${target}\" in\n   alpha*-*-*osf5*)\n     CPULIMITSH=\"os/osf/osf5.0\"\n     ;;\n+  mips*-*-linux*)\n+    ATOMICITYH=\"cpu/mips\"\n+    ;;\n esac\n-"}]}