{"sha": "ebd01830cf0a220493054bb5811334b43160e17c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWJkMDE4MzBjZjBhMjIwNDkzMDU0YmI1ODExMzM0YjQzMTYwZTE3Yw==", "commit": {"author": {"name": "Robert Dewar", "email": "dewar@adacore.com", "date": "2008-05-28T13:05:55Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2008-05-28T13:05:55Z"}, "message": "2008-05-28  Robert Dewar  <dewar@adacore.com>\n\n\t* exp_ch5.adb:\n\t(Expand_Simple_Function_Return): Copy unaligned result into temporary\n\nFrom-SVN: r136080", "tree": {"sha": "58a1eb09f3817ec5bf0a3c6762a1c3ff29727f7f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/58a1eb09f3817ec5bf0a3c6762a1c3ff29727f7f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ebd01830cf0a220493054bb5811334b43160e17c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ebd01830cf0a220493054bb5811334b43160e17c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ebd01830cf0a220493054bb5811334b43160e17c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ebd01830cf0a220493054bb5811334b43160e17c/comments", "author": null, "committer": null, "parents": [{"sha": "63bdc3ea178016154ce60cd850dae027f0f54329", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/63bdc3ea178016154ce60cd850dae027f0f54329", "html_url": "https://github.com/Rust-GCC/gccrs/commit/63bdc3ea178016154ce60cd850dae027f0f54329"}], "stats": {"total": 25, "additions": 23, "deletions": 2}, "files": [{"sha": "18ea8fe44db43eacdba175753a16bbc68da09c37", "filename": "gcc/ada/exp_ch5.adb", "status": "modified", "additions": 23, "deletions": 2, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ebd01830cf0a220493054bb5811334b43160e17c/gcc%2Fada%2Fexp_ch5.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ebd01830cf0a220493054bb5811334b43160e17c/gcc%2Fada%2Fexp_ch5.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch5.adb?ref=ebd01830cf0a220493054bb5811334b43160e17c", "patch": "@@ -4032,6 +4032,28 @@ package body Exp_Ch5 is\n          end;\n       end if;\n \n+      --  If we are returning an object that may not be bit-aligned, then\n+      --  copy the value into a temporary first. This copy may need to expand\n+      --  to a loop of component operations..\n+\n+      if Is_Possibly_Unaligned_Slice (Exp)\n+        or else Is_Possibly_Unaligned_Object (Exp)\n+      then\n+         declare\n+            Tnn : constant Entity_Id :=\n+                    Make_Defining_Identifier (Loc, New_Internal_Name ('T'));\n+         begin\n+            Insert_Action (Exp,\n+              Make_Object_Declaration (Loc,\n+                Defining_Identifier => Tnn,\n+                Constant_Present    => True,\n+                Object_Definition   => New_Occurrence_Of (R_Type, Loc),\n+                Expression          => Relocate_Node (Exp)),\n+                Suppress => All_Checks);\n+            Rewrite (Exp, New_Occurrence_Of (Tnn, Loc));\n+         end;\n+      end if;\n+\n       --  Generate call to postcondition checks if they are present\n \n       if Ekind (Scope_Id) = E_Function\n@@ -4061,8 +4083,7 @@ package body Exp_Ch5 is\n          else\n             declare\n                Tnn : constant Entity_Id :=\n-                       Make_Defining_Identifier (Loc,\n-                         New_Internal_Name ('T'));\n+                       Make_Defining_Identifier (Loc, New_Internal_Name ('T'));\n \n             begin\n                --  For a complex expression of an elementary type, capture"}]}