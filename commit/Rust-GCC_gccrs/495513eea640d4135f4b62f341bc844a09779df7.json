{"sha": "495513eea640d4135f4b62f341bc844a09779df7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDk1NTEzZWVhNjQwZDQxMzVmNGI2MmYzNDFiYzg0NGEwOTc3OWRmNw==", "commit": {"author": {"name": "Tom Tromey", "email": "tromey@redhat.com", "date": "2001-12-16T22:25:14Z"}, "committer": {"name": "Tom Tromey", "email": "tromey@gcc.gnu.org", "date": "2001-12-16T22:25:14Z"}, "message": "Makefile.in: Rebuilt.\n\n\t* Makefile.in: Rebuilt.\n\t* Makefile.am (ordinary_java_source_files): Removed old file;\n\tadded new file.\n\t* gnu/java/math/MPN.java: New file.\n\t* gnu/gcj/math/MPN.java: Removed.\n\t* java/math/BigInteger.java: Merged with Classpath.\n\nFrom-SVN: r48080", "tree": {"sha": "8a27fd1996ffd1cf512fe67713325bf5bb586886", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8a27fd1996ffd1cf512fe67713325bf5bb586886"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/495513eea640d4135f4b62f341bc844a09779df7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/495513eea640d4135f4b62f341bc844a09779df7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/495513eea640d4135f4b62f341bc844a09779df7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/495513eea640d4135f4b62f341bc844a09779df7/comments", "author": null, "committer": null, "parents": [{"sha": "317c26c372354ca8cbeab6788692acad6cbffc63", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/317c26c372354ca8cbeab6788692acad6cbffc63", "html_url": "https://github.com/Rust-GCC/gccrs/commit/317c26c372354ca8cbeab6788692acad6cbffc63"}], "stats": {"total": 141, "additions": 99, "deletions": 42}, "files": [{"sha": "ff59f96eb6ccabfca4889e601007a76d84c7f1b6", "filename": "libjava/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/495513eea640d4135f4b62f341bc844a09779df7/libjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/495513eea640d4135f4b62f341bc844a09779df7/libjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog?ref=495513eea640d4135f4b62f341bc844a09779df7", "patch": "@@ -1,3 +1,12 @@\n+2001-12-16  Tom Tromey  <tromey@redhat.com>\n+\n+\t* Makefile.in: Rebuilt.\n+\t* Makefile.am (ordinary_java_source_files): Removed old file;\n+\tadded new file.\n+\t* gnu/java/math/MPN.java: New file.\n+\t* gnu/gcj/math/MPN.java: Removed.\n+\t* java/math/BigInteger.java: Merged with Classpath.\n+\n 2001-12-16  Bryce McKinlay  <bryce@waitaki.otago.ac.nz>\n \n \t* java/io/DataOutputStream (write (byte[], int, int)): Update "}, {"sha": "f5121e382103372fbb2cee03c887de34ec2084a1", "filename": "libjava/Makefile.am", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/495513eea640d4135f4b62f341bc844a09779df7/libjava%2FMakefile.am", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/495513eea640d4135f4b62f341bc844a09779df7/libjava%2FMakefile.am", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FMakefile.am?ref=495513eea640d4135f4b62f341bc844a09779df7", "patch": "@@ -1243,7 +1243,6 @@ gnu/gcj/RawData.java \\\n gnu/gcj/io/DefaultMimeTypes.java \\\n gnu/gcj/io/MimeTypes.java \\\n gnu/gcj/io/SimpleSHSStream.java\t\\\n-gnu/gcj/math/MPN.java \\\n gnu/gcj/protocol/core/Connection.java \\\n gnu/gcj/protocol/core/Handler.java \\\n gnu/gcj/protocol/core/CoreInputStream.java \\\n@@ -1275,6 +1274,7 @@ gnu/java/locale/LocaleInformation_de.java \\\n gnu/java/locale/LocaleInformation_en.java \\\n gnu/java/locale/LocaleInformation_en_US.java \\\n gnu/java/locale/LocaleInformation_nl.java \\\n+gnu/java/math/MPN.java \\\n gnu/java/security/provider/DefaultPolicy.java \\\n gnu/java/security/provider/Gnu.java \\\n gnu/java/security/provider/SHA.java \\"}, {"sha": "058ee1d61d4ecf4825d47653bc910ade73153d2b", "filename": "libjava/Makefile.in", "status": "modified", "additions": 36, "deletions": 22, "changes": 58, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/495513eea640d4135f4b62f341bc844a09779df7/libjava%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/495513eea640d4135f4b62f341bc844a09779df7/libjava%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FMakefile.in?ref=495513eea640d4135f4b62f341bc844a09779df7", "patch": "@@ -123,28 +123,40 @@ libgcj_basedir = @libgcj_basedir@\n mkinstalldirs = @mkinstalldirs@\n \n AUTOMAKE_OPTIONS = foreign\n-@TESTSUBDIR_TRUE@SUBDIRS = @TESTSUBDIR_TRUE@$(DIRLTDL) testsuite gcj include\n-@TESTSUBDIR_FALSE@SUBDIRS = @TESTSUBDIR_FALSE@$(DIRLTDL) gcj include\n-@USE_LIBDIR_TRUE@toolexeclibdir = @USE_LIBDIR_TRUE@$(libdir)$(MULTISUBDIR)\n-@USE_LIBDIR_FALSE@toolexeclibdir = @USE_LIBDIR_FALSE@$(toolexecdir)/lib$(MULTISUBDIR)\n-@USE_LIBDIR_FALSE@toolexecdir = @USE_LIBDIR_FALSE@$(exec_prefix)/$(target_alias)\n-@XLIB_AWT_TRUE@cond_x_ltlibrary = @XLIB_AWT_TRUE@libgcjx.la\n-@XLIB_AWT_FALSE@cond_x_ltlibrary = \n+@TESTSUBDIR_TRUE@SUBDIRS = \\\n+@TESTSUBDIR_TRUE@$(DIRLTDL) testsuite gcj include\n+@TESTSUBDIR_FALSE@SUBDIRS = \\\n+@TESTSUBDIR_FALSE@$(DIRLTDL) gcj include\n+@USE_LIBDIR_TRUE@toolexeclibdir = \\\n+@USE_LIBDIR_TRUE@$(libdir)$(MULTISUBDIR)\n+@USE_LIBDIR_FALSE@toolexeclibdir = \\\n+@USE_LIBDIR_FALSE@$(toolexecdir)/lib$(MULTISUBDIR)\n+@USE_LIBDIR_FALSE@toolexecdir = \\\n+@USE_LIBDIR_FALSE@$(exec_prefix)/$(target_alias)\n+@XLIB_AWT_TRUE@cond_x_ltlibrary = \\\n+@XLIB_AWT_TRUE@libgcjx.la\n+@XLIB_AWT_FALSE@cond_x_ltlibrary = \\\n \n toolexeclib_LTLIBRARIES = libgcj.la $(cond_x_ltlibrary)\n toolexeclib_DATA = libgcj.spec\n data_DATA = libgcj.jar\n \n secdir = $(libdir)/security\n \n-@NATIVE_TRUE@bin_PROGRAMS = @NATIVE_TRUE@jv-convert gij rmic rmiregistry\n+@NATIVE_TRUE@bin_PROGRAMS = \\\n+@NATIVE_TRUE@jv-convert gij rmic rmiregistry\n \n bin_SCRIPTS = addr2name.awk\n-@CANADIAN_TRUE@@NULL_TARGET_TRUE@ZIP = @CANADIAN_TRUE@@NULL_TARGET_TRUE@$(MULTIBUILDTOP)../$(COMPPATH)/fastjar/jar$(EXEEXT)\n-@CANADIAN_TRUE@@NULL_TARGET_FALSE@ZIP = @CANADIAN_TRUE@@NULL_TARGET_FALSE@jar\n-@CANADIAN_FALSE@ZIP = @CANADIAN_FALSE@$(MULTIBUILDTOP)../$(COMPPATH)/fastjar/jar$(EXEEXT)\n-@CANADIAN_TRUE@GCJH = @CANADIAN_TRUE@gcjh\n-@CANADIAN_FALSE@GCJH = @CANADIAN_FALSE@$(MULTIBUILDTOP)../$(COMPPATH)/gcc/gcjh$(EXEEXT)\n+@CANADIAN_TRUE@@NULL_TARGET_TRUE@ZIP = \\\n+@CANADIAN_TRUE@@NULL_TARGET_TRUE@$(MULTIBUILDTOP)../$(COMPPATH)/fastjar/jar$(EXEEXT)\n+@CANADIAN_TRUE@@NULL_TARGET_FALSE@ZIP = \\\n+@CANADIAN_TRUE@@NULL_TARGET_FALSE@jar\n+@CANADIAN_FALSE@ZIP = \\\n+@CANADIAN_FALSE@$(MULTIBUILDTOP)../$(COMPPATH)/fastjar/jar$(EXEEXT)\n+@CANADIAN_TRUE@GCJH = \\\n+@CANADIAN_TRUE@gcjh\n+@CANADIAN_FALSE@GCJH = \\\n+@CANADIAN_FALSE@$(MULTIBUILDTOP)../$(COMPPATH)/gcc/gcjh$(EXEEXT)\n \n GCJ_WITH_FLAGS = $(GCJ) --encoding=UTF-8\n \n@@ -164,8 +176,10 @@ AM_CXXFLAGS = -fno-rtti -fnon-call-exceptions \\\n \t@LIBGCJ_CXXFLAGS@ @X_CFLAGS@ $(WARNINGS) -D_GNU_SOURCE \\\n \t-DPREFIX=\"\\\"$(prefix)\\\"\"\n \n-@USING_GCC_TRUE@AM_CFLAGS = @USING_GCC_TRUE@@LIBGCJ_CFLAGS@ $(WARNINGS)\n-@USING_GCC_FALSE@AM_CFLAGS = @USING_GCC_FALSE@@LIBGCJ_CFLAGS@\n+@USING_GCC_TRUE@AM_CFLAGS = \\\n+@USING_GCC_TRUE@@LIBGCJ_CFLAGS@ $(WARNINGS)\n+@USING_GCC_FALSE@AM_CFLAGS = \\\n+@USING_GCC_FALSE@@LIBGCJ_CFLAGS@\n \n JCFLAGS = -g\n JC1FLAGS = @LIBGCJ_JAVAFLAGS@ $(GCJFLAGS)\n@@ -238,7 +252,8 @@ extra_headers = java/lang/Object.h java/lang/Class.h\n \n NM = nm\n \n-@NATIVE_TRUE@@MAINTAINER_MODE_TRUE@noinst_PROGRAMS = @NATIVE_TRUE@@MAINTAINER_MODE_TRUE@gen-from-JIS\n+@NATIVE_TRUE@@MAINTAINER_MODE_TRUE@noinst_PROGRAMS = \\\n+@NATIVE_TRUE@@MAINTAINER_MODE_TRUE@gen-from-JIS\n \n CONVERT_DIR = gnu/gcj/convert\n \n@@ -973,7 +988,6 @@ gnu/gcj/RawData.java \\\n gnu/gcj/io/DefaultMimeTypes.java \\\n gnu/gcj/io/MimeTypes.java \\\n gnu/gcj/io/SimpleSHSStream.java\t\\\n-gnu/gcj/math/MPN.java \\\n gnu/gcj/protocol/core/Connection.java \\\n gnu/gcj/protocol/core/Handler.java \\\n gnu/gcj/protocol/core/CoreInputStream.java \\\n@@ -1005,6 +1019,7 @@ gnu/java/locale/LocaleInformation_de.java \\\n gnu/java/locale/LocaleInformation_en.java \\\n gnu/java/locale/LocaleInformation_en_US.java \\\n gnu/java/locale/LocaleInformation_nl.java \\\n+gnu/java/math/MPN.java \\\n gnu/java/security/provider/DefaultPolicy.java \\\n gnu/java/security/provider/Gnu.java \\\n gnu/java/security/provider/SHA.java \\\n@@ -1571,7 +1586,7 @@ libgcj-test.spec.in libgcj.spec.in\n \n DISTFILES = $(DIST_COMMON) $(SOURCES) $(HEADERS) $(TEXINFOS) $(EXTRA_DIST)\n \n-TAR = gtar\n+TAR = tar\n GZIP_ENV = --best\n DIST_SUBDIRS =  @DIRLTDL@ testsuite gcj include @DIRLTDL@ gcj include\n DEP_FILES =  .deps/$(srcdir)/$(CONVERT_DIR)/gen-from-JIS.P \\\n@@ -1617,8 +1632,7 @@ DEP_FILES =  .deps/$(srcdir)/$(CONVERT_DIR)/gen-from-JIS.P \\\n .deps/gnu/gcj/io/DefaultMimeTypes.P .deps/gnu/gcj/io/MimeTypes.P \\\n .deps/gnu/gcj/io/SimpleSHSStream.P \\\n .deps/gnu/gcj/io/natSimpleSHSStream.P .deps/gnu/gcj/io/shs.P \\\n-.deps/gnu/gcj/math/MPN.P .deps/gnu/gcj/natCore.P \\\n-.deps/gnu/gcj/protocol/core/Connection.P \\\n+.deps/gnu/gcj/natCore.P .deps/gnu/gcj/protocol/core/Connection.P \\\n .deps/gnu/gcj/protocol/core/CoreInputStream.P \\\n .deps/gnu/gcj/protocol/core/Handler.P \\\n .deps/gnu/gcj/protocol/core/natCoreInputStream.P \\\n@@ -1686,7 +1700,7 @@ DEP_FILES =  .deps/$(srcdir)/$(CONVERT_DIR)/gen-from-JIS.P \\\n .deps/gnu/java/locale/LocaleInformation_de.P \\\n .deps/gnu/java/locale/LocaleInformation_en.P \\\n .deps/gnu/java/locale/LocaleInformation_en_US.P \\\n-.deps/gnu/java/locale/LocaleInformation_nl.P \\\n+.deps/gnu/java/locale/LocaleInformation_nl.P .deps/gnu/java/math/MPN.P \\\n .deps/gnu/java/rmi/dgc/DGCImpl.P .deps/gnu/java/rmi/dgc/DGCImpl_Skel.P \\\n .deps/gnu/java/rmi/dgc/DGCImpl_Stub.P \\\n .deps/gnu/java/rmi/registry/RegistryImpl.P \\\n@@ -2722,7 +2736,7 @@ distdir: $(DISTFILES)\n \t@for file in $(DISTFILES); do \\\n \t  d=$(srcdir); \\\n \t  if test -d $$d/$$file; then \\\n-\t    cp -pr $$d/$$file $(distdir)/$$file; \\\n+\t    cp -pr $$/$$file $(distdir)/$$file; \\\n \t  else \\\n \t    test -f $(distdir)/$$file \\\n \t    || ln $$d/$$file $(distdir)/$$file 2> /dev/null \\"}, {"sha": "e8e0c1e4e84d14ffddf6e40396774c78771f5c20", "filename": "libjava/gnu/java/math/MPN.java", "status": "renamed", "additions": 26, "deletions": 8, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/495513eea640d4135f4b62f341bc844a09779df7/libjava%2Fgnu%2Fjava%2Fmath%2FMPN.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/495513eea640d4135f4b62f341bc844a09779df7/libjava%2Fgnu%2Fjava%2Fmath%2FMPN.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fjava%2Fmath%2FMPN.java?ref=495513eea640d4135f4b62f341bc844a09779df7", "patch": "@@ -1,15 +1,33 @@\n-/* Copyright (C) 1999, 2000, 2001  Free Software Foundation\n-\n-   This file is part of libgcj.\n-\n-This software is copyrighted work licensed under the terms of the\n-Libgcj License.  Please consult the file \"LIBGCJ_LICENSE\" for\n-details.  */\n+/* gnu.java.math.MPN\n+   Copyright (C) 1999, 2000, 2001 Free Software Foundation, Inc.\n+\n+This file is part of GNU Classpath.\n+\n+GNU Classpath is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2, or (at your option)\n+any later version.\n+ \n+GNU Classpath is distributed in the hope that it will be useful, but\n+WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GNU Classpath; see the file COPYING.  If not, write to the\n+Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA\n+02111-1307 USA.\n+\n+As a special exception, if you link this library with other files to\n+produce an executable, this library does not by itself cause the\n+resulting executable to be covered by the GNU General Public License.\n+This exception does not however invalidate any other reasons why the\n+executable file might be covered by the GNU General Public License. */\n \n // Included from Kawa 1.6.62 with permission of the author,\n // Per Bothner <per@bothner.com>.\n \n-package gnu.gcj.math;\n+package gnu.java.math;\n \n /** This contains various low-level routines for unsigned bigints.\n  * The interfaces match the mpn interfaces in gmp,", "previous_filename": "libjava/gnu/gcj/math/MPN.java"}, {"sha": "7976b7858ca5da156912120b09cee934a9429611", "filename": "libjava/java/math/BigInteger.java", "status": "modified", "additions": 27, "deletions": 11, "changes": 38, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/495513eea640d4135f4b62f341bc844a09779df7/libjava%2Fjava%2Fmath%2FBigInteger.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/495513eea640d4135f4b62f341bc844a09779df7/libjava%2Fjava%2Fmath%2FBigInteger.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fmath%2FBigInteger.java?ref=495513eea640d4135f4b62f341bc844a09779df7", "patch": "@@ -1,15 +1,32 @@\n-// BigInteger.java -- an arbitrary-precision integer\n-\n-/* Copyright (C) 1999, 2000, 2001  Free Software Foundation\n-\n-   This file is part of libgcj.\n-\n-This software is copyrighted work licensed under the terms of the\n-Libgcj License.  Please consult the file \"LIBGCJ_LICENSE\" for\n-details.  */\n+/* java.math.BigInteger -- Arbitary precision integers\n+   Copyright (C) 1998, 1999, 2000, 2001 Free Software Foundation, Inc.\n+\n+This file is part of GNU Classpath.\n+\n+GNU Classpath is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2, or (at your option)\n+any later version.\n+ \n+GNU Classpath is distributed in the hope that it will be useful, but\n+WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GNU Classpath; see the file COPYING.  If not, write to the\n+Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA\n+02111-1307 USA.\n+\n+As a special exception, if you link this library with other files to\n+produce an executable, this library does not by itself cause the\n+resulting executable to be covered by the GNU General Public License.\n+This exception does not however invalidate any other reasons why the\n+executable file might be covered by the GNU General Public License. */\n \n package java.math;\n-import gnu.gcj.math.*;\n+\n+import gnu.java.math.*;\n import java.util.Random;\n import java.io.ObjectInputStream;\n import java.io.ObjectOutputStream;\n@@ -24,7 +41,6 @@\n  * Written using on-line Java Platform 1.2 API Specification, as well\n  * as \"The Java Class Libraries\", 2nd edition (Addison-Wesley, 1998) and\n  * \"Applied Cryptography, Second Edition\" by Bruce Schneier (Wiley, 1996).\n-\n  * \n  * Based primarily on IntNum.java BitOps.java by Per Bothner <per@bothner.com>\n  * (found in Kawa 1.6.62)."}]}