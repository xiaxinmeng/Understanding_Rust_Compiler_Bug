{"sha": "1fddb058e12a68d67318a28f206f315e09ceeff4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWZkZGIwNThlMTJhNjhkNjczMThhMjhmMjA2ZjMxNWUwOWNlZWZmNA==", "commit": {"author": {"name": "Kaz Kojima", "email": "kkojima@gcc.gnu.org", "date": "2004-10-21T06:00:41Z"}, "committer": {"name": "Kaz Kojima", "email": "kkojima@gcc.gnu.org", "date": "2004-10-21T06:00:41Z"}, "message": "sysv.S (ffi_call_SYSV): Don't align for double data.\n\n\t* src/sh/sysv.S (ffi_call_SYSV): Don't align for double data.\n\t* testsuite/libffi.call/float3.c: New test case.\n\nFrom-SVN: r89366", "tree": {"sha": "b7e081e352fa8dad2f6c515b7e61dab3aeb7a27f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b7e081e352fa8dad2f6c515b7e61dab3aeb7a27f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1fddb058e12a68d67318a28f206f315e09ceeff4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1fddb058e12a68d67318a28f206f315e09ceeff4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1fddb058e12a68d67318a28f206f315e09ceeff4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1fddb058e12a68d67318a28f206f315e09ceeff4/comments", "author": null, "committer": null, "parents": [{"sha": "70a8019bc2179753d2430df9dad01e8c221f00f0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/70a8019bc2179753d2430df9dad01e8c221f00f0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/70a8019bc2179753d2430df9dad01e8c221f00f0"}], "stats": {"total": 84, "additions": 78, "deletions": 6}, "files": [{"sha": "bae5f1be5d78edcdb1220939e40527d5965b32b2", "filename": "libffi/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1fddb058e12a68d67318a28f206f315e09ceeff4/libffi%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1fddb058e12a68d67318a28f206f315e09ceeff4/libffi%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2FChangeLog?ref=1fddb058e12a68d67318a28f206f315e09ceeff4", "patch": "@@ -1,3 +1,8 @@\n+2004-10-20  Kaz Kojima  <kkojima@gcc.gnu.org>\n+\n+\t* src/sh/sysv.S (ffi_call_SYSV): Don't align for double data.\n+\t* testsuite/libffi.call/float3.c: New test case.\n+\n 2004-10-18  Kaz Kojima  <kkojima@gcc.gnu.org>\n \n \t* src/sh/ffi.c (ffi_prep_closure): Set T bit in trampoline for"}, {"sha": "887137db3ce7a53744dc4945481dfa2c79a9a9b9", "filename": "libffi/src/sh/sysv.S", "status": "modified", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1fddb058e12a68d67318a28f206f315e09ceeff4/libffi%2Fsrc%2Fsh%2Fsysv.S", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1fddb058e12a68d67318a28f206f315e09ceeff4/libffi%2Fsrc%2Fsh%2Fsysv.S", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2Fsrc%2Fsh%2Fsysv.S?ref=1fddb058e12a68d67318a28f206f315e09ceeff4", "patch": "@@ -117,12 +117,6 @@ L_pass_d:\n \tbt\t1f\n \tadd\t#1,r3\n 1:\n-\tmov\tr15,r0\n-\tand\t#7,r0\n-\ttst\tr0,r0\n-\tbt\t2f\n-\tadd\t#4,r15\n-2:\n \tmov\t#12,r0\n \tcmp/hs\tr0,r3\n \tbt/s\t3f"}, {"sha": "27933c32606f1d73d2dbe9b0d2bf2bca7a3903d9", "filename": "libffi/testsuite/libffi.call/float3.c", "status": "added", "additions": 73, "deletions": 0, "changes": 73, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1fddb058e12a68d67318a28f206f315e09ceeff4/libffi%2Ftestsuite%2Flibffi.call%2Ffloat3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1fddb058e12a68d67318a28f206f315e09ceeff4/libffi%2Ftestsuite%2Flibffi.call%2Ffloat3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2Ftestsuite%2Flibffi.call%2Ffloat3.c?ref=1fddb058e12a68d67318a28f206f315e09ceeff4", "patch": "@@ -0,0 +1,73 @@\n+/* Area:\tffi_call\n+   Purpose:\tCheck float arguments with different orders.\n+   Limitations:\tnone.\n+   PR:\t\tnone.\n+   Originator:\tFrom the original ffitest.c  */\n+\n+/* { dg-do run } */\n+/* { dg-options -mlong-double-128 { target powerpc64*-*-* } } */\n+\n+#include \"ffitest.h\"\n+#include \"float.h\"\n+\n+static double floating_1(float a, double b, long double c)\n+{\n+  return (double) a + b + (double) c;\n+}\n+\n+static double floating_2(long double a, double b, float c)\n+{\n+  return (double) a + b + (double) c;\n+}\n+\n+int main (void)\n+{\n+  ffi_cif cif;\n+  ffi_type *args[MAX_ARGS];\n+  void *values[MAX_ARGS];\n+  double rd;\n+\n+  float f;\n+  double d;\n+  long double ld;\n+\n+  args[0] = &ffi_type_float;\n+  values[0] = &f;\n+  args[1] = &ffi_type_double;\n+  values[1] = &d;\n+  args[2] = &ffi_type_longdouble;\n+  values[2] = &ld;\n+\n+  /* Initialize the cif */\n+  CHECK(ffi_prep_cif(&cif, FFI_DEFAULT_ABI, 3,\n+\t\t     &ffi_type_double, args) == FFI_OK);\n+\n+  f = 3.14159;\n+  d = (double)1.0/(double)3.0;\n+  ld = 2.71828182846L;\n+\n+  floating_1 (f, d, ld);\n+\n+  ffi_call(&cif, FFI_FN(floating_1), &rd, values);\n+\n+  CHECK(rd - floating_1(f, d, ld) < DBL_EPSILON);\n+\n+  args[0] = &ffi_type_longdouble;\n+  values[0] = &ld;\n+  args[1] = &ffi_type_double;\n+  values[1] = &d;\n+  args[2] = &ffi_type_float;\n+  values[2] = &f;\n+\n+  /* Initialize the cif */\n+  CHECK(ffi_prep_cif(&cif, FFI_DEFAULT_ABI, 3,\n+\t\t     &ffi_type_double, args) == FFI_OK);\n+\n+  floating_2 (ld, d, f);\n+\n+  ffi_call(&cif, FFI_FN(floating_2), &rd, values);\n+\n+  CHECK(rd - floating_2(ld, d, f) < DBL_EPSILON);\n+\n+  exit (0);\n+}"}]}