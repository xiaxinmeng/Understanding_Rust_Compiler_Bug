{"sha": "db21e1d01a3f6ca4f7d6c9f151620bae7b66b661", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGIyMWUxZDAxYTNmNmNhNGY3ZDZjOWYxNTE2MjBiYWU3YjY2YjY2MQ==", "commit": {"author": {"name": "Andreas Krebbel", "email": "krebbel1@de.ibm.com", "date": "2005-08-26T06:45:09Z"}, "committer": {"name": "Andreas Krebbel", "email": "krebbel@gcc.gnu.org", "date": "2005-08-26T06:45:09Z"}, "message": "predicates.md (\"shift_count_operand\", [...]): Reject operands containing eliminable registers.\n\n2005-08-26  Andreas Krebbel  <krebbel1@de.ibm.com>\n\n\t* config/s390/predicates.md (\"shift_count_operand\", \"setmem_operand\"):\n\tReject operands containing eliminable registers.\n\t* testsuite/gcc.dg/20050825-1.c: New testcase.\n\nFrom-SVN: r103515", "tree": {"sha": "ca6ada83aee2512041dc9314abed3c6e84c9ecd3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ca6ada83aee2512041dc9314abed3c6e84c9ecd3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/db21e1d01a3f6ca4f7d6c9f151620bae7b66b661", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/db21e1d01a3f6ca4f7d6c9f151620bae7b66b661", "html_url": "https://github.com/Rust-GCC/gccrs/commit/db21e1d01a3f6ca4f7d6c9f151620bae7b66b661", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/db21e1d01a3f6ca4f7d6c9f151620bae7b66b661/comments", "author": null, "committer": null, "parents": [{"sha": "4e0d0e3367254340b50be219f252b4bc36cb4271", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4e0d0e3367254340b50be219f252b4bc36cb4271", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4e0d0e3367254340b50be219f252b4bc36cb4271"}], "stats": {"total": 44, "additions": 44, "deletions": 0}, "files": [{"sha": "84b1da077616e56b0250e3d33015c7b0e5811789", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/db21e1d01a3f6ca4f7d6c9f151620bae7b66b661/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/db21e1d01a3f6ca4f7d6c9f151620bae7b66b661/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=db21e1d01a3f6ca4f7d6c9f151620bae7b66b661", "patch": "@@ -1,3 +1,9 @@\n+2005-08-26  Andreas Krebbel  <krebbel1@de.ibm.com>\n+\n+\t* config/s390/predicates.md (\"shift_count_operand\", \"setmem_operand\"):\n+\tReject operands containing eliminable registers.\n+\t* testsuite/gcc.dg/20050825-1.c: New testcase.\n+\n 2005-08-24  Paolo Bonzini  <bonzini@gnu.org>\n \t    Jan Hubicka  <jh@suse.cz>\n "}, {"sha": "9f8f8237075956f9fe2c5ea970d18871b58b1ac5", "filename": "gcc/config/s390/predicates.md", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/db21e1d01a3f6ca4f7d6c9f151620bae7b66b661/gcc%2Fconfig%2Fs390%2Fpredicates.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/db21e1d01a3f6ca4f7d6c9f151620bae7b66b661/gcc%2Fconfig%2Fs390%2Fpredicates.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fs390%2Fpredicates.md?ref=db21e1d01a3f6ca4f7d6c9f151620bae7b66b661", "patch": "@@ -107,6 +107,10 @@\n   if (op && GET_CODE (op) != REG)\n     return false;\n \n+  if (op && REGNO (op) < FIRST_PSEUDO_REGISTER\n+      && !GENERAL_REGNO_P (REGNO (op)))\n+    return false;\n+\n   /* Unfortunately we have to reject constants that are invalid\n      for an address, or else reload will get confused.  */\n   if (!DISP_IN_RANGE (offset))\n@@ -147,6 +151,10 @@\n   if (op && GET_CODE (op) != REG)\n     return false;\n \n+  if (op && REGNO (op) < FIRST_PSEUDO_REGISTER\n+      && !GENERAL_REGNO_P (REGNO (op)))\n+    return false;\n+\n   /* Unfortunately we have to reject constants that are invalid\n      for an address, or else reload will get confused.  */\n   if (!DISP_IN_RANGE (offset))"}, {"sha": "f13ad04f3b22fe84307b02f06c5ce0a7b2f204f3", "filename": "gcc/testsuite/gcc.dg/20050824-1.c", "status": "added", "additions": 30, "deletions": 0, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/db21e1d01a3f6ca4f7d6c9f151620bae7b66b661/gcc%2Ftestsuite%2Fgcc.dg%2F20050824-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/db21e1d01a3f6ca4f7d6c9f151620bae7b66b661/gcc%2Ftestsuite%2Fgcc.dg%2F20050824-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2F20050824-1.c?ref=db21e1d01a3f6ca4f7d6c9f151620bae7b66b661", "patch": "@@ -0,0 +1,30 @@\n+/* Make sure that the S/390 specific shift_count_operand\n+   predicate work properly.  */\n+\n+/* { dg-do compile { target s390*-*-* } } */\n+/* { dg-options \"-O3\" } */\n+\n+unsigned long long\n+f (unsigned long long a, unsigned long b)\n+{\n+  asm (\"\" : : : \"r0\", \"r1\", \"r2\", \"r3\", \"r4\", \"r5\", \"r6\", \"r7\", \n+                \"r8\", \"r9\", \"r10\", \"r11\", \"r12\", \"r13\", \"r14\");\n+\n+  return a << ((b + 3) & 63);\n+}\n+\n+unsigned long long\n+g (unsigned long long a, char **b , int c, int d, int e, int f)\n+{\n+  char buffer [4096];\n+\n+  *b = &buffer[0];\n+\n+  return a << ((unsigned long)&f & 63);\n+}\n+\n+unsigned long long\n+h (unsigned long long a, int b, int c, int d, int e, int f)\n+{\n+  return a << (((unsigned long)&f + 3));\n+}"}]}