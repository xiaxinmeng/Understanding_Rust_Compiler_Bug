{"sha": "bd02b3a0c9223cecb7ec0367ecae6c76bbcd9b50", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmQwMmIzYTBjOTIyM2NlY2I3ZWMwMzY3ZWNhZTZjNzZiYmNkOWI1MA==", "commit": {"author": {"name": "Richard Guenther", "email": "rguenther@suse.de", "date": "2009-10-26T12:21:50Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2009-10-26T12:21:50Z"}, "message": "re PR tree-optimization/41826 (invalid read in get_constraint_for_ptr_offset)\n\n2009-10-26  Richard Guenther  <rguenther@suse.de>\n\n\tPR tree-optimization/41826\n\t* tree-ssa-structalias.c (get_constraint_for_ptr_offset): Avoid\n\taccess to re-allocated vector fields.\n\nFrom-SVN: r153550", "tree": {"sha": "4d400d86739da09b9752ad1ee96ecb874a70857b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4d400d86739da09b9752ad1ee96ecb874a70857b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/bd02b3a0c9223cecb7ec0367ecae6c76bbcd9b50", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bd02b3a0c9223cecb7ec0367ecae6c76bbcd9b50", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bd02b3a0c9223cecb7ec0367ecae6c76bbcd9b50", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bd02b3a0c9223cecb7ec0367ecae6c76bbcd9b50/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "b77a0698b4fbd971ee15b79afc6d20edce491dab", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b77a0698b4fbd971ee15b79afc6d20edce491dab", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b77a0698b4fbd971ee15b79afc6d20edce491dab"}], "stats": {"total": 30, "additions": 19, "deletions": 11}, "files": [{"sha": "4b18b44c5a75ba8300a60b80bc942cd050df7cbe", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bd02b3a0c9223cecb7ec0367ecae6c76bbcd9b50/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bd02b3a0c9223cecb7ec0367ecae6c76bbcd9b50/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=bd02b3a0c9223cecb7ec0367ecae6c76bbcd9b50", "patch": "@@ -1,3 +1,9 @@\n+2009-10-26  Richard Guenther  <rguenther@suse.de>\n+\n+\tPR tree-optimization/41826\n+\t* tree-ssa-structalias.c (get_constraint_for_ptr_offset): Avoid\n+\taccess to re-allocated vector fields.\n+\n 2009-10-26  Richard Guenther  <rguenther@suse.de>\n \n \t* graphite-sese-to-poly.c (check_poly_representation): Fix"}, {"sha": "cc655df7cc6b8a1862f2e6c51c0cb9562f08429e", "filename": "gcc/tree-ssa-structalias.c", "status": "modified", "additions": 13, "deletions": 11, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bd02b3a0c9223cecb7ec0367ecae6c76bbcd9b50/gcc%2Ftree-ssa-structalias.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bd02b3a0c9223cecb7ec0367ecae6c76bbcd9b50/gcc%2Ftree-ssa-structalias.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-structalias.c?ref=bd02b3a0c9223cecb7ec0367ecae6c76bbcd9b50", "patch": "@@ -2825,7 +2825,7 @@ static void\n get_constraint_for_ptr_offset (tree ptr, tree offset,\n \t\t\t       VEC (ce_s, heap) **results)\n {\n-  struct constraint_expr *c;\n+  struct constraint_expr c;\n   unsigned int j, n;\n   HOST_WIDE_INT rhsunitoffset, rhsoffset;\n \n@@ -2863,14 +2863,14 @@ get_constraint_for_ptr_offset (tree ptr, tree offset,\n   for (j = 0; j < n; j++)\n     {\n       varinfo_t curr;\n-      c = VEC_index (ce_s, *results, j);\n-      curr = get_varinfo (c->var);\n+      c = *VEC_index (ce_s, *results, j);\n+      curr = get_varinfo (c.var);\n \n-      if (c->type == ADDRESSOF\n+      if (c.type == ADDRESSOF\n \t  /* If this varinfo represents a full variable just use it.  */\n \t  && curr->is_full_var)\n-\tc->offset = 0;\n-      else if (c->type == ADDRESSOF\n+\tc.offset = 0;\n+      else if (c.type == ADDRESSOF\n \t       /* If we do not know the offset add all subfields.  */\n \t       && rhsoffset == UNKNOWN_OFFSET)\n \t{\n@@ -2881,13 +2881,13 @@ get_constraint_for_ptr_offset (tree ptr, tree offset,\n \t      c2.var = temp->id;\n \t      c2.type = ADDRESSOF;\n \t      c2.offset = 0;\n-\t      if (c2.var != c->var)\n+\t      if (c2.var != c.var)\n \t\tVEC_safe_push (ce_s, heap, *results, &c2);\n \t      temp = temp->next;\n \t    }\n \t  while (temp);\n \t}\n-      else if (c->type == ADDRESSOF)\n+      else if (c.type == ADDRESSOF)\n \t{\n \t  varinfo_t temp;\n \t  unsigned HOST_WIDE_INT offset = curr->offset + rhsoffset;\n@@ -2919,11 +2919,13 @@ get_constraint_for_ptr_offset (tree ptr, tree offset,\n \t      c2.offset = 0;\n \t      VEC_safe_push (ce_s, heap, *results, &c2);\n \t    }\n-\t  c->var = temp->id;\n-\t  c->offset = 0;\n+\t  c.var = temp->id;\n+\t  c.offset = 0;\n \t}\n       else\n-\tc->offset = rhsoffset;\n+\tc.offset = rhsoffset;\n+\n+      VEC_replace (ce_s, *results, j, &c);\n     }\n }\n "}]}