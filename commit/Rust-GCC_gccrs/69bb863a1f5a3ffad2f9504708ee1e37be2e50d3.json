{"sha": "69bb863a1f5a3ffad2f9504708ee1e37be2e50d3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjliYjg2M2ExZjVhM2ZmYWQyZjk1MDQ3MDhlZTFlMzdiZTJlNTBkMw==", "commit": {"author": {"name": "Kai Tietz", "email": "ktietz@redhat.com", "date": "2013-03-08T08:46:49Z"}, "committer": {"name": "Kai Tietz", "email": "ktietz@gcc.gnu.org", "date": "2013-03-08T08:46:49Z"}, "message": "pr14092-1.c: Mark intptr_t typedef to use extension.\n\n\t* gcc.dg/pr14092-1.c: Mark intptr_t typedef to use extension.\n\t* gcc.dg/pr24683.c: Avoid warning about casting constant string.\n\t* gcc.dg/pr52549.c: Add LLP64 case.\n\t* gcc.dg/pr53701.c: Use for uintptr_t typedef __UINTPTR_TYPE__.\n\t* gcc.dg/pr56510.c: Adjust for LLP64 targets.\n\t* gcc.dg/torture/pr51071-2.c: Likewise.\n\t* gcc.dg/tree-ssa/vrp72.c: Likewise.\n\t* gcc.dg/tree-ssa/vrp73.c: Likewise.\n\t* gcc.dg/tree-ssa/vrp75.c: Likewise.\n\t* gcc.dg/torture/pr53922.c: Skike for mingw-targets.\n\t* gcc.dg/weak/weak-1.c: Likewise.\n\t* gcc.dg/weak/weak-2.c: Likewise.\n\t* gcc.dg/weak/weak-3.c: Likewise.\n\t* gcc.dg/weak/weak-4.c: Likewise.\n\t* gcc.dg/weak/weak-5.c: Likewise.\n\t* gcc.dg/weak/weak-15.c: Likewise.\n\t* gcc.dg/weak/weak-16.c: Likewise.\n\nFrom-SVN: r196540", "tree": {"sha": "e9e8ace4b5af0d1fb0585dae2721fd1bc3d8dd28", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e9e8ace4b5af0d1fb0585dae2721fd1bc3d8dd28"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/69bb863a1f5a3ffad2f9504708ee1e37be2e50d3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/69bb863a1f5a3ffad2f9504708ee1e37be2e50d3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/69bb863a1f5a3ffad2f9504708ee1e37be2e50d3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/69bb863a1f5a3ffad2f9504708ee1e37be2e50d3/comments", "author": null, "committer": null, "parents": [{"sha": "b7aa4e9afcd3da4f09d6f982a663ea2094b1f2cf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b7aa4e9afcd3da4f09d6f982a663ea2094b1f2cf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b7aa4e9afcd3da4f09d6f982a663ea2094b1f2cf"}], "stats": {"total": 66, "additions": 52, "deletions": 14}, "files": [{"sha": "84c6194efead2fabd83ee9ac185f071d68253e33", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/69bb863a1f5a3ffad2f9504708ee1e37be2e50d3/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/69bb863a1f5a3ffad2f9504708ee1e37be2e50d3/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=69bb863a1f5a3ffad2f9504708ee1e37be2e50d3", "patch": "@@ -1,5 +1,23 @@\n 2013-03-08  Kai Tietz  <ktietz@redhat.com>\n \n+\t* gcc.dg/pr14092-1.c: Mark intptr_t typedef to use extension.\n+\t* gcc.dg/pr24683.c: Avoid warning about casting constant string.\n+\t* gcc.dg/pr52549.c: Add LLP64 case.\n+\t* gcc.dg/pr53701.c: Use for uintptr_t typedef __UINTPTR_TYPE__.\n+\t* gcc.dg/pr56510.c: Adjust for LLP64 targets.\n+\t* gcc.dg/torture/pr51071-2.c: Likewise.\n+\t* gcc.dg/tree-ssa/vrp72.c: Likewise.\n+\t* gcc.dg/tree-ssa/vrp73.c: Likewise.\n+\t* gcc.dg/tree-ssa/vrp75.c: Likewise.\n+\t* gcc.dg/torture/pr53922.c: Skike for mingw-targets.\n+\t* gcc.dg/weak/weak-1.c: Likewise.\n+\t* gcc.dg/weak/weak-2.c: Likewise.\n+\t* gcc.dg/weak/weak-3.c: Likewise.\n+\t* gcc.dg/weak/weak-4.c: Likewise.\n+\t* gcc.dg/weak/weak-5.c: Likewise.\n+\t* gcc.dg/weak/weak-15.c: Likewise.\n+\t* gcc.dg/weak/weak-16.c: Likewise.\n+\n \t* c-c++-common/pr54486.c: Skip test for mingw-targets.\n \n 2013-03-07  Jakub Jelinek  <jakub@redhat.com>"}, {"sha": "61fc8f7016df667a4e9e1a2e7b179d2ca8292640", "filename": "gcc/testsuite/gcc.dg/pr14092-1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/69bb863a1f5a3ffad2f9504708ee1e37be2e50d3/gcc%2Ftestsuite%2Fgcc.dg%2Fpr14092-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/69bb863a1f5a3ffad2f9504708ee1e37be2e50d3/gcc%2Ftestsuite%2Fgcc.dg%2Fpr14092-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr14092-1.c?ref=69bb863a1f5a3ffad2f9504708ee1e37be2e50d3", "patch": "@@ -6,7 +6,7 @@\n \n /* Define this so that we are more portable.  The testcase in the\n    PR failed on 64-bit hosts.  */\n-typedef __INTPTR_TYPE__ intptr_t;\n+__extension__ typedef __INTPTR_TYPE__ intptr_t;\n \n typedef struct _PLCI {\n   unsigned char x;"}, {"sha": "23cb3ab4b015bac3f23b9180dae1011113295179", "filename": "gcc/testsuite/gcc.dg/pr24683.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/69bb863a1f5a3ffad2f9504708ee1e37be2e50d3/gcc%2Ftestsuite%2Fgcc.dg%2Fpr24683.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/69bb863a1f5a3ffad2f9504708ee1e37be2e50d3/gcc%2Ftestsuite%2Fgcc.dg%2Fpr24683.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr24683.c?ref=69bb863a1f5a3ffad2f9504708ee1e37be2e50d3", "patch": "@@ -1,11 +1,11 @@\n /* { dg-do compile { target fpic } } */\n /* { dg-options \"-O2 -fPIC\" } */\n-int *block;\n+const int *block;\n void final(unsigned int j)\n {\n   unsigned int i;\n-  unsigned char *data = (unsigned char *)\"\\0\";\n+  const unsigned char *data = (const unsigned char *)\"\\0\";\n   for (i = 0; i < 8; i++)\n     for (; j + 63 < 1; j += 64)\n-      block = (int *) &data[j];\n+      block = (const int *) &data[j];\n }"}, {"sha": "90936529d8d35cf3e950efc29900c1589555d6ea", "filename": "gcc/testsuite/gcc.dg/pr52549.c", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/69bb863a1f5a3ffad2f9504708ee1e37be2e50d3/gcc%2Ftestsuite%2Fgcc.dg%2Fpr52549.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/69bb863a1f5a3ffad2f9504708ee1e37be2e50d3/gcc%2Ftestsuite%2Fgcc.dg%2Fpr52549.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr52549.c?ref=69bb863a1f5a3ffad2f9504708ee1e37be2e50d3", "patch": "@@ -10,4 +10,9 @@ _mark (int obj, int i, char *a)\n {\n   (char *)&(((int *)(obj)) [i]) - a;\n }\n+#elif __SIZEOF_POINTER__ == __SIZEOF_LONG_LONG__\n+__extension__ _mark (long long obj, int i, char *a)\n+{\n+  (char *)&(((int *)(obj)) [i]) - a;\n+}\n #endif"}, {"sha": "15bf07d61e7d9a686d56d709ae840b54a3761faa", "filename": "gcc/testsuite/gcc.dg/pr53701.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/69bb863a1f5a3ffad2f9504708ee1e37be2e50d3/gcc%2Ftestsuite%2Fgcc.dg%2Fpr53701.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/69bb863a1f5a3ffad2f9504708ee1e37be2e50d3/gcc%2Ftestsuite%2Fgcc.dg%2Fpr53701.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr53701.c?ref=69bb863a1f5a3ffad2f9504708ee1e37be2e50d3", "patch": "@@ -1,7 +1,7 @@\n /* { dg-do compile { target powerpc*-*-* ia64-*-* i?86-*-* x86_64-*-* } } */\n /* { dg-options \"-O3 -fselective-scheduling2 -fsel-sched-pipelining\" } */\n typedef unsigned short int uint16_t;\n-typedef unsigned long int uintptr_t;\n+__extension__ typedef __UINTPTR_TYPE__ uintptr_t;\n typedef struct GFX_VTABLE\n {\n   int color_depth;"}, {"sha": "d018d7d4baa9a5591eb151c5ca5dc4689b290cb2", "filename": "gcc/testsuite/gcc.dg/pr56510.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/69bb863a1f5a3ffad2f9504708ee1e37be2e50d3/gcc%2Ftestsuite%2Fgcc.dg%2Fpr56510.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/69bb863a1f5a3ffad2f9504708ee1e37be2e50d3/gcc%2Ftestsuite%2Fgcc.dg%2Fpr56510.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr56510.c?ref=69bb863a1f5a3ffad2f9504708ee1e37be2e50d3", "patch": "@@ -2,11 +2,12 @@\n /* { dg-do compile } */\n /* { dg-options \"-O2 -g\" } */\n \n+__extension__ typedef __INTPTR_TYPE__ intptr_t;\n struct S { unsigned long s1; void **s2[0]; };\n void **a, **b, **c, **d, **e, **f;\n \n static void **\n-baz (long x, long y)\n+baz (intptr_t x, intptr_t y)\n {\n   void **s = f;\n   *f = (void **) (y << 8 | (x & 0xff));"}, {"sha": "b67879c443da54f0a2d3402fe4896fb95106773d", "filename": "gcc/testsuite/gcc.dg/torture/pr51071-2.c", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/69bb863a1f5a3ffad2f9504708ee1e37be2e50d3/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr51071-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/69bb863a1f5a3ffad2f9504708ee1e37be2e50d3/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr51071-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr51071-2.c?ref=69bb863a1f5a3ffad2f9504708ee1e37be2e50d3", "patch": "@@ -1,9 +1,11 @@\n /* { dg-do compile } */\n /* { dg-options \"-fno-delete-null-pointer-checks\" } */\n \n+__extension__ typedef __UINTPTR_TYPE__ uintptr_t;\n+\n extern struct module __this_module;\n static inline void\n-trace_module_get  (struct module *mod, unsigned long ip) { }\n+trace_module_get  (struct module *mod, uintptr_t ip) { }\n struct module;\n static inline __attribute__((no_instrument_function))\n int try_module_get(struct module *module)\n@@ -16,7 +18,7 @@ int try_module_get(struct module *module)\n \t  __label__ __here;\n \t  asm(\"\");\n \t  __here:\n-\t  trace_module_get(module, (unsigned long)&&__here);\n+\t  trace_module_get(module, (uintptr_t)&&__here);\n \t}\n       else\n \tret = 0;"}, {"sha": "e4136014326d5568b976bda7ba9480de0942e38c", "filename": "gcc/testsuite/gcc.dg/torture/pr53922.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/69bb863a1f5a3ffad2f9504708ee1e37be2e50d3/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr53922.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/69bb863a1f5a3ffad2f9504708ee1e37be2e50d3/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr53922.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr53922.c?ref=69bb863a1f5a3ffad2f9504708ee1e37be2e50d3", "patch": "@@ -1,5 +1,6 @@\n /* { dg-do run } */\n /* { dg-require-weak \"\" } */\n+/* { dg-skip-if \"No undefined\" { *-*-mingw* } { \"*\" } { \"\" } } */\n /* { dg-skip-if \"No undefined weak\" { hppa*-*-hpux* && { ! lp64 } } { \"*\" } { \"\" } } */\n /* { dg-options \"-Wl,-undefined,dynamic_lookup\" { target *-*-darwin* } } */\n "}, {"sha": "0b12aad0e2bde8931b5b0f05a700db95baea68a9", "filename": "gcc/testsuite/gcc.dg/tree-ssa/vrp72.c", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/69bb863a1f5a3ffad2f9504708ee1e37be2e50d3/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fvrp72.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/69bb863a1f5a3ffad2f9504708ee1e37be2e50d3/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fvrp72.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fvrp72.c?ref=69bb863a1f5a3ffad2f9504708ee1e37be2e50d3", "patch": "@@ -1,14 +1,15 @@\n /* { dg-options \"-O2\" } */\n \n+typedef __INTPTR_TYPE__ intptr_t;\n typedef unsigned long long uint64_t;\n \n static inline void cvmx_write64_uint64(uint64_t addr, uint64_t val)\n {\n-  *(volatile uint64_t *)(long)addr = val;\n+  *(volatile uint64_t *)(intptr_t)addr = val;\n };\n static inline uint64_t cvmx_read64_uint64(uint64_t addr)\n {\n-  return *(volatile uint64_t *)(long)addr;\n+  return *(volatile uint64_t *)(intptr_t)addr;\n };\n \n static inline void cvmx_write_csr(uint64_t csr_addr, uint64_t val)"}, {"sha": "ea557fd9b694389f3e8e5d1c0d13410831ed8edd", "filename": "gcc/testsuite/gcc.dg/tree-ssa/vrp73.c", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/69bb863a1f5a3ffad2f9504708ee1e37be2e50d3/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fvrp73.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/69bb863a1f5a3ffad2f9504708ee1e37be2e50d3/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fvrp73.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fvrp73.c?ref=69bb863a1f5a3ffad2f9504708ee1e37be2e50d3", "patch": "@@ -1,14 +1,16 @@\n /* { dg-options \"-O2\" } */\n \n+__extension__ typedef __INTPTR_TYPE__ intptr_t;\n+\n typedef unsigned long long uint64_t;\n \n static inline void cvmx_write64_uint64(uint64_t addr, uint64_t val)\n {\n-  *(volatile uint64_t *)(long)addr = val;\n+  *(volatile uint64_t *)(intptr_t)addr = val;\n };\n static inline uint64_t cvmx_read64_uint64(uint64_t addr)\n {\n-  return *(volatile uint64_t *)(long)addr;\n+  return *(volatile uint64_t *)(intptr_t)addr;\n };\n \n static inline void cvmx_write_csr(uint64_t csr_addr, uint64_t val)"}, {"sha": "42b33870777ef1fb2fca02061cd223bdca2b141a", "filename": "gcc/testsuite/gcc.dg/tree-ssa/vrp75.c", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/69bb863a1f5a3ffad2f9504708ee1e37be2e50d3/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fvrp75.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/69bb863a1f5a3ffad2f9504708ee1e37be2e50d3/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fvrp75.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fvrp75.c?ref=69bb863a1f5a3ffad2f9504708ee1e37be2e50d3", "patch": "@@ -1,14 +1,15 @@\n /* { dg-options \"-O2\" } */\n \n+__extension__ typedef __INTPTR_TYPE__ intptr_t;\n typedef unsigned long long uint64_t;\n \n static inline void cvmx_write64_uint64(uint64_t addr, uint64_t val)\n {\n-  *(volatile uint64_t *)(long)addr = val;\n+  *(volatile uint64_t *)(intptr_t)addr = val;\n };\n static inline uint64_t cvmx_read64_uint64(uint64_t addr)\n {\n-  return *(volatile uint64_t *)(long)addr;\n+  return *(volatile uint64_t *)(intptr_t)addr;\n };\n static inline void cvmx_write_csr(uint64_t csr_addr, uint64_t val)\n {"}, {"sha": "14e9de7acba17cd2714bdd6e48e450512e04278a", "filename": "gcc/testsuite/gcc.dg/weak/weak-1.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/69bb863a1f5a3ffad2f9504708ee1e37be2e50d3/gcc%2Ftestsuite%2Fgcc.dg%2Fweak%2Fweak-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/69bb863a1f5a3ffad2f9504708ee1e37be2e50d3/gcc%2Ftestsuite%2Fgcc.dg%2Fweak%2Fweak-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fweak%2Fweak-1.c?ref=69bb863a1f5a3ffad2f9504708ee1e37be2e50d3", "patch": "@@ -1,6 +1,7 @@\n /* { dg-do compile } */\n /* { dg-require-weak \"\" } */\n /* { dg-options \"-fno-common\" } */\n+/* { dg-skip-if \"\" { *-*-mingw* } { \"*\" } { \"\" } } */\n \n /* { dg-final { scan-assembler \"weak\\[^ \\t\\]*\\[ \\t\\]_?a\" } } */\n /* { dg-final { scan-assembler \"weak\\[^ \\t\\]*\\[ \\t\\]_?b\" } } */"}, {"sha": "34b089bda5b39e1237aeacb50673ba0def356fdd", "filename": "gcc/testsuite/gcc.dg/weak/weak-15.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/69bb863a1f5a3ffad2f9504708ee1e37be2e50d3/gcc%2Ftestsuite%2Fgcc.dg%2Fweak%2Fweak-15.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/69bb863a1f5a3ffad2f9504708ee1e37be2e50d3/gcc%2Ftestsuite%2Fgcc.dg%2Fweak%2Fweak-15.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fweak%2Fweak-15.c?ref=69bb863a1f5a3ffad2f9504708ee1e37be2e50d3", "patch": "@@ -1,6 +1,7 @@\n /* { dg-do compile } */\n /* { dg-require-weak \"\" } */\n /* { dg-options \"-fno-common\" } */\n+/* { dg-skip-if \"\" { x86_64-*-mingw* } { \"*\" } { \"\" } } */\n \n /* { dg-final { scan-assembler \"weak\\[^ \\t\\]*\\[ \\t\\]_?a\" } } */\n /* { dg-final { scan-assembler-not \"weak\\[^ \\t\\]*\\[ \\t\\]_?b\" } } */"}, {"sha": "d557a6e45fb1f0968fc3b65665bc9a284124be75", "filename": "gcc/testsuite/gcc.dg/weak/weak-16.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/69bb863a1f5a3ffad2f9504708ee1e37be2e50d3/gcc%2Ftestsuite%2Fgcc.dg%2Fweak%2Fweak-16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/69bb863a1f5a3ffad2f9504708ee1e37be2e50d3/gcc%2Ftestsuite%2Fgcc.dg%2Fweak%2Fweak-16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fweak%2Fweak-16.c?ref=69bb863a1f5a3ffad2f9504708ee1e37be2e50d3", "patch": "@@ -4,6 +4,7 @@\n /* { dg-options \"-fno-common -Os\" } */\n /* { dg-final { scan-assembler \"weak\\[^ \\t\\]*\\[ \\t\\]_?kallsyms_token_index\" } } */\n /* { dg-final { scan-assembler \"weak\\[^ \\t\\]*\\[ \\t\\]_?kallsyms_token_table\" } } */\n+/* { dg-skip-if \"\" { x86_64-*-mingw* } { \"*\" } { \"\" } } */\n \n extern int kallsyms_token_index[] __attribute__((weak));\n extern int kallsyms_token_table[] __attribute__((weak));"}, {"sha": "b328c3c088be705dec4673b5bf6aebde698b04c7", "filename": "gcc/testsuite/gcc.dg/weak/weak-2.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/69bb863a1f5a3ffad2f9504708ee1e37be2e50d3/gcc%2Ftestsuite%2Fgcc.dg%2Fweak%2Fweak-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/69bb863a1f5a3ffad2f9504708ee1e37be2e50d3/gcc%2Ftestsuite%2Fgcc.dg%2Fweak%2Fweak-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fweak%2Fweak-2.c?ref=69bb863a1f5a3ffad2f9504708ee1e37be2e50d3", "patch": "@@ -1,6 +1,7 @@\n /* { dg-do compile } */\n /* { dg-require-weak \"\" } */\n /* { dg-options \"-fno-common\" } */\n+/* { dg-skip-if \"\" { x86_64-*-mingw* } { \"*\" } { \"\" } } */\n \n /* { dg-final { scan-assembler \"weak\\[^ \\t\\]*\\[ \\t\\]_?ffoo1a\" } } */\n /* { dg-final { scan-assembler \"weak\\[^ \\t\\]*\\[ \\t\\]_?ffoo1b\" } } */"}, {"sha": "ca6e0b620877bbbd12fdf6ba29b121bd15d003d2", "filename": "gcc/testsuite/gcc.dg/weak/weak-3.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/69bb863a1f5a3ffad2f9504708ee1e37be2e50d3/gcc%2Ftestsuite%2Fgcc.dg%2Fweak%2Fweak-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/69bb863a1f5a3ffad2f9504708ee1e37be2e50d3/gcc%2Ftestsuite%2Fgcc.dg%2Fweak%2Fweak-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fweak%2Fweak-3.c?ref=69bb863a1f5a3ffad2f9504708ee1e37be2e50d3", "patch": "@@ -2,6 +2,7 @@\n /* { dg-require-alias \"\" } */\n /* { dg-require-weak \"\" } */\n /* { dg-options \"-fno-common -Waddress\" } */\n+/* { dg-skip-if \"\" { x86_64-*-mingw* } { \"*\" } { \"\" } } */\n \n /* { dg-final { scan-assembler \"weak\\[^ \\t\\]*\\[ \\t\\]_?ffoo1a\" } } */\n /* { dg-final { scan-assembler \"weak\\[^ \\t\\]*\\[ \\t\\]_?ffoo1b\" } } */"}, {"sha": "a84f5808312c45dc65d19d8cdcd0c59f1067ff8e", "filename": "gcc/testsuite/gcc.dg/weak/weak-4.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/69bb863a1f5a3ffad2f9504708ee1e37be2e50d3/gcc%2Ftestsuite%2Fgcc.dg%2Fweak%2Fweak-4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/69bb863a1f5a3ffad2f9504708ee1e37be2e50d3/gcc%2Ftestsuite%2Fgcc.dg%2Fweak%2Fweak-4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fweak%2Fweak-4.c?ref=69bb863a1f5a3ffad2f9504708ee1e37be2e50d3", "patch": "@@ -1,6 +1,7 @@\n /* { dg-do compile } */\n /* { dg-require-weak \"\" } */\n /* { dg-options \"-fno-common\" } */\n+/* { dg-skip-if \"\" { x86_64-*-mingw* } { \"*\" } { \"\" } } */\n \n /* { dg-final { scan-assembler \"weak\\[^ \\t\\]*\\[ \\t\\]_?vfoo1a\" } } */\n /* { dg-final { scan-assembler \"weak\\[^ \\t\\]*\\[ \\t\\]_?vfoo1b\" } } */"}, {"sha": "714c9dca0a41597ea9d6688839380b0383cd1cbd", "filename": "gcc/testsuite/gcc.dg/weak/weak-5.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/69bb863a1f5a3ffad2f9504708ee1e37be2e50d3/gcc%2Ftestsuite%2Fgcc.dg%2Fweak%2Fweak-5.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/69bb863a1f5a3ffad2f9504708ee1e37be2e50d3/gcc%2Ftestsuite%2Fgcc.dg%2Fweak%2Fweak-5.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fweak%2Fweak-5.c?ref=69bb863a1f5a3ffad2f9504708ee1e37be2e50d3", "patch": "@@ -2,6 +2,7 @@\n /* { dg-require-weak \"\" } */\n /* { dg-require-alias \"\" } */\n /* { dg-options \"-fno-common\" } */\n+/* { dg-skip-if \"\" { x86_64-*-mingw* } { \"*\" } { \"\" } } */\n \n /* { dg-final { scan-assembler \"weak\\[^ \\t\\]*\\[ \\t\\]_?vfoo1a\" } } */\n /* { dg-final { scan-assembler \"weak\\[^ \\t\\]*\\[ \\t\\]_?vfoo1b\" } } */"}]}