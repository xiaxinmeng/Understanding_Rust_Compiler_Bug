{"sha": "b253f94d4f7639adea7469fb7a8481cb05f8d960", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjI1M2Y5NGQ0Zjc2MzlhZGVhNzQ2OWZiN2E4NDgxY2IwNWY4ZDk2MA==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2019-01-27T11:56:44Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2019-01-27T11:56:44Z"}, "message": "re PR target/87214 (r263772 miscompiled 520.omnetpp_r in SPEC CPU 2017)\n\n\tPR target/87214\n\t* config/i386/sse.md\n\t(<mask_codefor>avx512dq_shuf_<shuffletype>64x2_1<mask_name>,\n\tavx512f_shuf_<shuffletype>64x2_1<mask_name>): Ensure the\n\tfirst constants in pairs are multiples of 2.  Formatting fixes.\n\t(avx512vl_shuf_<shuffletype>32x4_1<mask_name>,\n\tavx512vl_shuf_<shuffletype>32x4_1<mask_name>): Ensure the\n\tfirst constants in each quadruple are multiples of 4.  Formatting fixes.\n\n\t* gcc.target/i386/avx512vl-pr87214-1.c: New test.\n\t* gcc.target/i386/avx512vl-pr87214-2.c: New test.\n\nFrom-SVN: r268310", "tree": {"sha": "5bce634849e2157b5efc15cbb2e443591fb6659a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5bce634849e2157b5efc15cbb2e443591fb6659a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b253f94d4f7639adea7469fb7a8481cb05f8d960", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b253f94d4f7639adea7469fb7a8481cb05f8d960", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b253f94d4f7639adea7469fb7a8481cb05f8d960", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b253f94d4f7639adea7469fb7a8481cb05f8d960/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "2ee43ae6d6973d21cddea8964db58f7abe67df51", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2ee43ae6d6973d21cddea8964db58f7abe67df51", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2ee43ae6d6973d21cddea8964db58f7abe67df51"}], "stats": {"total": 319, "additions": 260, "deletions": 59}, "files": [{"sha": "eddf1e505231ad377965199bfc8994894db56dab", "filename": "gcc/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b253f94d4f7639adea7469fb7a8481cb05f8d960/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b253f94d4f7639adea7469fb7a8481cb05f8d960/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=b253f94d4f7639adea7469fb7a8481cb05f8d960", "patch": "@@ -1,3 +1,14 @@\n+2019-01-27  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR target/87214\n+\t* config/i386/sse.md\n+\t(<mask_codefor>avx512dq_shuf_<shuffletype>64x2_1<mask_name>,\n+\tavx512f_shuf_<shuffletype>64x2_1<mask_name>): Ensure the\n+\tfirst constants in pairs are multiples of 2.  Formatting fixes.\n+\t(avx512vl_shuf_<shuffletype>32x4_1<mask_name>,\n+\tavx512vl_shuf_<shuffletype>32x4_1<mask_name>): Ensure the\n+\tfirst constants in each quadruple are multiples of 4.  Formatting fixes.\n+\n 2019-01-26  Martin Jambor  <mjambor@suse.cz>\n \n \tPR ipa/88933"}, {"sha": "5dc0930ac1f45f5c7175009d9bf02ce8ee317355", "filename": "gcc/config/i386/sse.md", "status": "modified", "additions": 71, "deletions": 59, "changes": 130, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b253f94d4f7639adea7469fb7a8481cb05f8d960/gcc%2Fconfig%2Fi386%2Fsse.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b253f94d4f7639adea7469fb7a8481cb05f8d960/gcc%2Fconfig%2Fi386%2Fsse.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fsse.md?ref=b253f94d4f7639adea7469fb7a8481cb05f8d960", "patch": "@@ -13372,13 +13372,15 @@\n \t  (vec_concat:<ssedoublemode>\n \t    (match_operand:VI8F_256 1 \"register_operand\" \"v\")\n \t    (match_operand:VI8F_256 2 \"nonimmediate_operand\" \"vm\"))\n-\t  (parallel [(match_operand 3  \"const_0_to_3_operand\")\n-\t\t     (match_operand 4  \"const_0_to_3_operand\")\n-\t\t     (match_operand 5  \"const_4_to_7_operand\")\n-\t\t     (match_operand 6  \"const_4_to_7_operand\")])))]\n+\t  (parallel [(match_operand 3 \"const_0_to_3_operand\")\n+\t\t     (match_operand 4 \"const_0_to_3_operand\")\n+\t\t     (match_operand 5 \"const_4_to_7_operand\")\n+\t\t     (match_operand 6 \"const_4_to_7_operand\")])))]\n   \"TARGET_AVX512VL\n-   && (INTVAL (operands[3]) == (INTVAL (operands[4]) - 1)\n-       && INTVAL (operands[5]) == (INTVAL (operands[6]) - 1))\"\n+   && (INTVAL (operands[3]) & 1) == 0\n+   && INTVAL (operands[3]) == INTVAL (operands[4]) - 1\n+   && (INTVAL (operands[5]) & 1) == 0\n+   && INTVAL (operands[5]) == INTVAL (operands[6]) - 1\"\n {\n   int mask;\n   mask = INTVAL (operands[3]) / 2;\n@@ -13421,19 +13423,23 @@\n \t  (vec_concat:<ssedoublemode>\n \t    (match_operand:V8FI 1 \"register_operand\" \"v\")\n \t    (match_operand:V8FI 2 \"nonimmediate_operand\" \"vm\"))\n-\t  (parallel [(match_operand 3  \"const_0_to_7_operand\")\n-\t\t     (match_operand 4  \"const_0_to_7_operand\")\n-\t\t     (match_operand 5  \"const_0_to_7_operand\")\n-\t\t     (match_operand 6  \"const_0_to_7_operand\")\n-\t\t     (match_operand 7  \"const_8_to_15_operand\")\n-\t\t     (match_operand 8  \"const_8_to_15_operand\")\n-\t\t     (match_operand 9  \"const_8_to_15_operand\")\n-\t\t     (match_operand 10  \"const_8_to_15_operand\")])))]\n+\t  (parallel [(match_operand 3 \"const_0_to_7_operand\")\n+\t\t     (match_operand 4 \"const_0_to_7_operand\")\n+\t\t     (match_operand 5 \"const_0_to_7_operand\")\n+\t\t     (match_operand 6 \"const_0_to_7_operand\")\n+\t\t     (match_operand 7 \"const_8_to_15_operand\")\n+\t\t     (match_operand 8 \"const_8_to_15_operand\")\n+\t\t     (match_operand 9 \"const_8_to_15_operand\")\n+\t\t     (match_operand 10 \"const_8_to_15_operand\")])))]\n   \"TARGET_AVX512F\n-   && (INTVAL (operands[3]) == (INTVAL (operands[4]) - 1)\n-       && INTVAL (operands[5]) == (INTVAL (operands[6]) - 1)\n-       && INTVAL (operands[7]) == (INTVAL (operands[8]) - 1)\n-       && INTVAL (operands[9]) == (INTVAL (operands[10]) - 1))\"\n+   && (INTVAL (operands[3]) & 1) == 0\n+   && INTVAL (operands[3]) == INTVAL (operands[4]) - 1\n+   && (INTVAL (operands[5]) & 1) == 0\n+   && INTVAL (operands[5]) == INTVAL (operands[6]) - 1\n+   && (INTVAL (operands[7]) & 1) == 0\n+   && INTVAL (operands[7]) == INTVAL (operands[8]) - 1\n+   && (INTVAL (operands[9]) & 1) == 0\n+   && INTVAL (operands[9]) == INTVAL (operands[10]) - 1\"\n {\n   int mask;\n   mask = INTVAL (operands[3]) / 2;\n@@ -13479,21 +13485,23 @@\n \t  (vec_concat:<ssedoublemode>\n \t    (match_operand:VI4F_256 1 \"register_operand\" \"v\")\n \t    (match_operand:VI4F_256 2 \"nonimmediate_operand\" \"vm\"))\n-\t  (parallel [(match_operand 3  \"const_0_to_7_operand\")\n-\t\t     (match_operand 4  \"const_0_to_7_operand\")\n-\t\t     (match_operand 5  \"const_0_to_7_operand\")\n-\t\t     (match_operand 6  \"const_0_to_7_operand\")\n-\t\t     (match_operand 7  \"const_8_to_15_operand\")\n-\t\t     (match_operand 8  \"const_8_to_15_operand\")\n-\t\t     (match_operand 9  \"const_8_to_15_operand\")\n+\t  (parallel [(match_operand 3 \"const_0_to_7_operand\")\n+\t\t     (match_operand 4 \"const_0_to_7_operand\")\n+\t\t     (match_operand 5 \"const_0_to_7_operand\")\n+\t\t     (match_operand 6 \"const_0_to_7_operand\")\n+\t\t     (match_operand 7 \"const_8_to_15_operand\")\n+\t\t     (match_operand 8 \"const_8_to_15_operand\")\n+\t\t     (match_operand 9 \"const_8_to_15_operand\")\n \t\t     (match_operand 10 \"const_8_to_15_operand\")])))]\n   \"TARGET_AVX512VL\n-   && (INTVAL (operands[3]) == (INTVAL (operands[4]) - 1)\n-       && INTVAL (operands[3]) == (INTVAL (operands[5]) - 2)\n-       && INTVAL (operands[3]) == (INTVAL (operands[6]) - 3)\n-       && INTVAL (operands[7]) == (INTVAL (operands[8]) - 1)\n-       && INTVAL (operands[7]) == (INTVAL (operands[9]) - 2)\n-       && INTVAL (operands[7]) == (INTVAL (operands[10]) - 3))\"\n+   && (INTVAL (operands[3]) & 3) == 0\n+   && INTVAL (operands[3]) == INTVAL (operands[4]) - 1\n+   && INTVAL (operands[3]) == INTVAL (operands[5]) - 2\n+   && INTVAL (operands[3]) == INTVAL (operands[6]) - 3\n+   && (INTVAL (operands[7]) & 3) == 0\n+   && INTVAL (operands[7]) == INTVAL (operands[8]) - 1\n+   && INTVAL (operands[7]) == INTVAL (operands[9]) - 2\n+   && INTVAL (operands[7]) == INTVAL (operands[10]) - 3\"\n {\n   int mask;\n   mask = INTVAL (operands[3]) / 4;\n@@ -13545,35 +13553,39 @@\n \t  (vec_concat:<ssedoublemode>\n \t    (match_operand:V16FI 1 \"register_operand\" \"v\")\n \t    (match_operand:V16FI 2 \"nonimmediate_operand\" \"vm\"))\n-\t  (parallel [(match_operand 3  \"const_0_to_15_operand\")\n-\t\t     (match_operand 4  \"const_0_to_15_operand\")\n-\t\t     (match_operand 5  \"const_0_to_15_operand\")\n-\t\t     (match_operand 6  \"const_0_to_15_operand\")\n-\t\t     (match_operand 7  \"const_0_to_15_operand\")\n-\t\t     (match_operand 8  \"const_0_to_15_operand\")\n-\t\t     (match_operand 9  \"const_0_to_15_operand\")\n-\t\t     (match_operand 10  \"const_0_to_15_operand\")\n-\t\t     (match_operand 11  \"const_16_to_31_operand\")\n-\t\t     (match_operand 12  \"const_16_to_31_operand\")\n-\t\t     (match_operand 13  \"const_16_to_31_operand\")\n-\t\t     (match_operand 14  \"const_16_to_31_operand\")\n-\t\t     (match_operand 15  \"const_16_to_31_operand\")\n-\t\t     (match_operand 16  \"const_16_to_31_operand\")\n-\t\t     (match_operand 17  \"const_16_to_31_operand\")\n-\t\t     (match_operand 18  \"const_16_to_31_operand\")])))]\n+\t  (parallel [(match_operand 3 \"const_0_to_15_operand\")\n+\t\t     (match_operand 4 \"const_0_to_15_operand\")\n+\t\t     (match_operand 5 \"const_0_to_15_operand\")\n+\t\t     (match_operand 6 \"const_0_to_15_operand\")\n+\t\t     (match_operand 7 \"const_0_to_15_operand\")\n+\t\t     (match_operand 8 \"const_0_to_15_operand\")\n+\t\t     (match_operand 9 \"const_0_to_15_operand\")\n+\t\t     (match_operand 10 \"const_0_to_15_operand\")\n+\t\t     (match_operand 11 \"const_16_to_31_operand\")\n+\t\t     (match_operand 12 \"const_16_to_31_operand\")\n+\t\t     (match_operand 13 \"const_16_to_31_operand\")\n+\t\t     (match_operand 14 \"const_16_to_31_operand\")\n+\t\t     (match_operand 15 \"const_16_to_31_operand\")\n+\t\t     (match_operand 16 \"const_16_to_31_operand\")\n+\t\t     (match_operand 17 \"const_16_to_31_operand\")\n+\t\t     (match_operand 18 \"const_16_to_31_operand\")])))]\n   \"TARGET_AVX512F\n-   && (INTVAL (operands[3]) == (INTVAL (operands[4]) - 1)\n-       && INTVAL (operands[3]) == (INTVAL (operands[5]) - 2)\n-       && INTVAL (operands[3]) == (INTVAL (operands[6]) - 3)\n-       && INTVAL (operands[7]) == (INTVAL (operands[8]) - 1)\n-       && INTVAL (operands[7]) == (INTVAL (operands[9]) - 2)\n-       && INTVAL (operands[7]) == (INTVAL (operands[10]) - 3)\n-       && INTVAL (operands[11]) == (INTVAL (operands[12]) - 1)\n-       && INTVAL (operands[11]) == (INTVAL (operands[13]) - 2)\n-       && INTVAL (operands[11]) == (INTVAL (operands[14]) - 3)\n-       && INTVAL (operands[15]) == (INTVAL (operands[16]) - 1)\n-       && INTVAL (operands[15]) == (INTVAL (operands[17]) - 2)\n-       && INTVAL (operands[15]) == (INTVAL (operands[18]) - 3))\"\n+   && (INTVAL (operands[3]) & 3) == 0\n+   && INTVAL (operands[3]) == INTVAL (operands[4]) - 1\n+   && INTVAL (operands[3]) == INTVAL (operands[5]) - 2\n+   && INTVAL (operands[3]) == INTVAL (operands[6]) - 3\n+   && (INTVAL (operands[7]) & 3) == 0\n+   && INTVAL (operands[7]) == INTVAL (operands[8]) - 1\n+   && INTVAL (operands[7]) == INTVAL (operands[9]) - 2\n+   && INTVAL (operands[7]) == INTVAL (operands[10]) - 3\n+   && (INTVAL (operands[11]) & 3) == 0\n+   && INTVAL (operands[11]) == INTVAL (operands[12]) - 1\n+   && INTVAL (operands[11]) == INTVAL (operands[13]) - 2\n+   && INTVAL (operands[11]) == INTVAL (operands[14]) - 3\n+   && (INTVAL (operands[15]) & 3) == 0\n+   && INTVAL (operands[15]) == INTVAL (operands[16]) - 1\n+   && INTVAL (operands[15]) == INTVAL (operands[17]) - 2\n+   && INTVAL (operands[15]) == INTVAL (operands[18]) - 3\"\n {\n   int mask;\n   mask = INTVAL (operands[3]) / 4;"}, {"sha": "9df3ce670aa8af6d0a109f45faabbf51144f1159", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b253f94d4f7639adea7469fb7a8481cb05f8d960/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b253f94d4f7639adea7469fb7a8481cb05f8d960/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=b253f94d4f7639adea7469fb7a8481cb05f8d960", "patch": "@@ -1,3 +1,9 @@\n+2019-01-27  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR target/87214\n+\t* gcc.target/i386/avx512vl-pr87214-1.c: New test.\n+\t* gcc.target/i386/avx512vl-pr87214-2.c: New test.\n+\n 2019-01-26  Martin Jambor  <mjambor@suse.cz>\n \n \tPR ipa/88933"}, {"sha": "b2faf3d1c48c5351d953e5adeabad36a9dcbecfc", "filename": "gcc/testsuite/gcc.target/i386/avx512vl-pr87214-1.c", "status": "added", "additions": 44, "deletions": 0, "changes": 44, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b253f94d4f7639adea7469fb7a8481cb05f8d960/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512vl-pr87214-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b253f94d4f7639adea7469fb7a8481cb05f8d960/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512vl-pr87214-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512vl-pr87214-1.c?ref=b253f94d4f7639adea7469fb7a8481cb05f8d960", "patch": "@@ -0,0 +1,44 @@\n+/* PR target/87214 */\n+/* { dg-do run { target { avx512vl } } } */\n+/* { dg-options \"-O3 -mavx512vl -mtune=skylake-avx512\" } */\n+\n+#define AVX512VL\n+#define AVX512F_LEN 512\n+#define AVX512F_LEN_HALF 256\n+#include \"avx512f-check.h\"\n+\n+struct s { unsigned long a, b, c; };\n+\n+void __attribute__ ((noipa))\n+foo (struct s *restrict s1, struct s *restrict s2, int n)\n+{\n+  for (int i = 0; i < n; ++i)\n+    {\n+      s1[i].b = s2[i].b;\n+      s1[i].c = s2[i].c;\n+      s2[i].c = 0;\n+    }\n+}\n+                            \n+#define N 12\n+\n+static void\n+test_256 (void)\n+{\n+  struct s s1[N], s2[N];\n+  for (unsigned int j = 0; j < N; ++j)\n+    {\n+      s2[j].a = j * 5;\n+      s2[j].b = j * 5 + 2;\n+      s2[j].c = j * 5 + 4;\n+    }\n+  foo (s1, s2, N);\n+  for (unsigned int j = 0; j < N; ++j)\n+  if (s1[j].b != j * 5 + 2)\n+    __builtin_abort ();\n+}\n+\n+static void\n+test_128 (void)\n+{\n+}"}, {"sha": "ad54ee9724e1ae89eb9c1e691336a021de1131e0", "filename": "gcc/testsuite/gcc.target/i386/avx512vl-pr87214-2.c", "status": "added", "additions": 128, "deletions": 0, "changes": 128, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b253f94d4f7639adea7469fb7a8481cb05f8d960/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512vl-pr87214-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b253f94d4f7639adea7469fb7a8481cb05f8d960/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512vl-pr87214-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512vl-pr87214-2.c?ref=b253f94d4f7639adea7469fb7a8481cb05f8d960", "patch": "@@ -0,0 +1,128 @@\n+/* PR target/87214 */\n+/* { dg-do run { target { avx512vl } } } */\n+/* { dg-options \"-O2 -mavx512vl\" } */\n+\n+#define AVX512VL\n+#define AVX512F_LEN 512\n+#define AVX512F_LEN_HALF 256\n+#include \"avx512f-check.h\"\n+\n+typedef long long int v4di __attribute__((vector_size (4 * sizeof (long long int))));\n+typedef double v4df __attribute__((vector_size (4 * sizeof (double))));\n+typedef long long int v8di __attribute__((vector_size (8 * sizeof (long long int))));\n+typedef double v8df __attribute__((vector_size (8 * sizeof (double))));\n+typedef int v8si __attribute__((vector_size (8 * sizeof (int))));\n+typedef float v8sf __attribute__((vector_size (8 * sizeof (float))));\n+typedef int v16si __attribute__((vector_size (16 * sizeof (int))));\n+typedef float v16sf __attribute__((vector_size (16 * sizeof (float))));\n+\n+__attribute__((noipa)) void\n+f1 (v4di *p)\n+{\n+  p[0] = __builtin_shuffle (p[1], p[2], (v4di) { 2, 3, 5, 6 });\n+}\n+\n+__attribute__((noipa)) void\n+f2 (v4df *p)\n+{\n+  p[0] = __builtin_shuffle (p[1], p[2], (v4di) { 1, 2, 6, 7 });\n+}\n+\n+__attribute__((noipa)) void\n+f3 (v8di *p)\n+{\n+  p[0] = __builtin_shuffle (p[1], p[2], (v8di) { 2, 3, 5, 6, 8, 9, 11, 12 });\n+}\n+\n+__attribute__((noipa)) void\n+f4 (v8df *p)\n+{\n+  p[0] = __builtin_shuffle (p[1], p[2], (v8di) { 1, 2, 6, 7, 9, 10, 12, 13 });\n+}\n+\n+__attribute__((noipa)) void\n+f5 (v8si *p)\n+{\n+  p[0] = __builtin_shuffle (p[1], p[2], (v8si) { 2, 3, 4, 5, 9, 10, 11, 12 });\n+}\n+\n+__attribute__((noipa)) void\n+f6 (v8sf *p)\n+{\n+  p[0] = __builtin_shuffle (p[1], p[2], (v8si) { 1, 2, 3, 4, 12, 13, 14, 15 });\n+}\n+\n+__attribute__((noipa)) void\n+f7 (v16si *p)\n+{\n+  p[0] = __builtin_shuffle (p[1], p[2], (v16si) { 0, 1, 2, 3, 1, 2, 3, 4, 16, 17, 18, 19, 25, 26, 27, 28 });\n+}\n+\n+__attribute__((noipa)) void\n+f8 (v16sf *p)\n+{\n+  p[0] = __builtin_shuffle (p[1], p[2], (v16si) { 1, 2, 3, 4, 4, 5, 6, 7, 17, 18, 19, 20, 18, 19, 20, 21 });\n+}\n+\n+static void\n+test_256 (void)\n+{\n+  v4di a[3] = { { 0, 0, 0, 0 }, { 10, 11, 12, 13 }, { 14, 15, 16, 17 } };\n+  f1 (a);\n+  if (a[0][0] != 12 || a[0][1] != 13 || a[0][2] != 15 || a[0][3] != 16)\n+    __builtin_abort ();\n+  v4df b[3] = { { 0.0, 0.0, 0.0, 0.0 }, { 10.0, 11.0, 12.0, 13.0 }, { 14.0, 15.0, 16.0, 17.0 } };\n+  f2 (b);\n+  if (b[0][0] != 11.0 || b[0][1] != 12.0 || b[0][2] != 16.0 || b[0][3] != 17.0)\n+    __builtin_abort ();\n+  v8di c[3] = { { 0, 0, 0, 0, 0, 0, 0, 0 }, { 10, 11, 12, 13, 14, 15, 16, 17 }, { 18, 19, 20, 21, 22, 23, 24, 25 } };\n+  f3 (c);\n+  if (c[0][0] != 12 || c[0][1] != 13 || c[0][2] != 15 || c[0][3] != 16\n+      || c[0][4] != 18 || c[0][5] != 19 || c[0][6] != 21 || c[0][7] != 22)\n+    __builtin_abort ();\n+  v8df d[3] = { { 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0 },\n+\t\t{ 10.0, 11.0, 12.0, 13.0, 14.0, 15.0, 16.0, 17.0 },\n+\t\t{ 18.0, 19.0, 20.0, 21.0, 22.0, 23.0, 24.0, 25.0 } };\n+  f4 (d);\n+  if (d[0][0] != 11.0 || d[0][1] != 12.0 || d[0][2] != 16.0 || d[0][3] != 17.0\n+      || d[0][4] != 19.0 || d[0][5] != 20.0 || d[0][6] != 22.0 || d[0][7] != 23.0)\n+    __builtin_abort ();\n+  v8si e[3] = { { 0, 0, 0, 0, 0, 0, 0, 0 }, { 10, 11, 12, 13, 14, 15, 16, 17 }, { 18, 19, 20, 21, 22, 23, 24, 25 } };\n+  f5 (e);\n+  if (e[0][0] != 12 || e[0][1] != 13 || e[0][2] != 14 || e[0][3] != 15\n+      || e[0][4] != 19 || e[0][5] != 20 || e[0][6] != 21 || e[0][7] != 22)\n+    __builtin_abort ();\n+  v8sf f[3] = { { 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f },\n+\t\t{ 10.0f, 11.0f, 12.0f, 13.0f, 14.0f, 15.0f, 16.0f, 17.0f },\n+\t\t{ 18.0f, 19.0f, 20.0f, 21.0f, 22.0f, 23.0f, 24.0f, 25.0f } };\n+  f6 (f);\n+  if (f[0][0] != 11.0f || f[0][1] != 12.0f || f[0][2] != 13.0f || f[0][3] != 14.0f\n+      || f[0][4] != 22.0f || f[0][5] != 23.0f || f[0][6] != 24.0f || f[0][7] != 25.0f)\n+    __builtin_abort ();\n+  v16si g[3] = { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },\n+\t\t { 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25 },\n+\t\t { 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41 } };\n+  f7 (g);\n+  if (g[0][0] != 10 || g[0][1] != 11 || g[0][2] != 12 || g[0][3] != 13\n+      || g[0][4] != 11 || g[0][5] != 12 || g[0][6] != 13 || g[0][7] != 14\n+      || g[0][8] != 26 || g[0][9] != 27 || g[0][10] != 28 || g[0][11] != 29\n+      || g[0][12] != 35 || g[0][13] != 36 || g[0][14] != 37 || g[0][15] != 38)\n+    __builtin_abort ();\n+  v16sf h[3] = { { 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f,\n+\t\t   0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f },\n+\t\t { 10.0f, 11.0f, 12.0f, 13.0f, 14.0f, 15.0f, 16.0f, 17.0f,\n+\t\t   18.0f, 19.0f, 20.0f, 21.0f, 22.0f, 23.0f, 24.0f, 25.0f },\n+\t\t { 26.0f, 27.0f, 28.0f, 29.0f, 30.0f, 31.0f, 32.0f, 33.0f,\n+\t\t   34.0f, 35.0f, 36.0f, 37.0f, 38.0f, 39.0f, 40.0f, 41.0f } };\n+  f8 (h);\n+  if (h[0][0] != 11.0f || h[0][1] != 12.0f || h[0][2] != 13.0f || h[0][3] != 14.0f\n+      || h[0][4] != 14.0f || h[0][5] != 15.0f || h[0][6] != 16.0f || h[0][7] != 17.0f\n+      || h[0][8] != 27.0f || h[0][9] != 28.0f || h[0][10] != 29.0f || h[0][11] != 30.0f\n+      || h[0][12] != 28.0f || h[0][13] != 29.0f || h[0][14] != 30.0f || h[0][15] != 31.0f)\n+    __builtin_abort ();\n+}\n+\n+static void\n+test_128 (void)\n+{\n+}"}]}