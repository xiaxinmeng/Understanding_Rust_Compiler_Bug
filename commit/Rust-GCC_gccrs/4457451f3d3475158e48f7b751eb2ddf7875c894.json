{"sha": "4457451f3d3475158e48f7b751eb2ddf7875c894", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDQ1NzQ1MWYzZDM0NzUxNThlNDhmN2I3NTFlYjJkZGY3ODc1Yzg5NA==", "commit": {"author": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2016-08-05T13:50:02Z"}, "committer": {"name": "Martin Liska", "email": "marxin@gcc.gnu.org", "date": "2016-08-05T13:50:02Z"}, "message": "gcov: rename line_next to next_file_fn in function_info\n\n\t* gcov.c (output_intermediate_file): Rename\n\tfunction_info::line_next to next_file_fn.\n\t(process_file): Likewise.\n\t(read_graph_file): Likewise.\n\t(accumulate_line_counts): Likewise.\n\t(output_lines): Likewise.\n\nFrom-SVN: r239168", "tree": {"sha": "36f1bbc123bbe147e47e0c76ef9cd5c57f2b5ac9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/36f1bbc123bbe147e47e0c76ef9cd5c57f2b5ac9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4457451f3d3475158e48f7b751eb2ddf7875c894", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4457451f3d3475158e48f7b751eb2ddf7875c894", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4457451f3d3475158e48f7b751eb2ddf7875c894", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4457451f3d3475158e48f7b751eb2ddf7875c894/comments", "author": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "4228ca1962a93904e188c8a0d98d10cd0ce7f222", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4228ca1962a93904e188c8a0d98d10cd0ce7f222", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4228ca1962a93904e188c8a0d98d10cd0ce7f222"}], "stats": {"total": 25, "additions": 17, "deletions": 8}, "files": [{"sha": "2031b767a2572d91d780e1b665c61740f632c9f4", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4457451f3d3475158e48f7b751eb2ddf7875c894/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4457451f3d3475158e48f7b751eb2ddf7875c894/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=4457451f3d3475158e48f7b751eb2ddf7875c894", "patch": "@@ -1,3 +1,12 @@\n+2016-08-05  Martin Liska  <mliska@suse.cz>\n+\n+\t* gcov.c (output_intermediate_file): Rename\n+\tfunction_info::line_next to next_file_fn.\n+\t(process_file): Likewise.\n+\t(read_graph_file): Likewise.\n+\t(accumulate_line_counts): Likewise.\n+\t(output_lines): Likewise.\n+\n 2016-08-05  Richard Biener  <rguenther@suse.de>\n \n \t* tree-ssa-threadupdate.c (thread_block_1): Remove unnecessary"}, {"sha": "19e2cba74abd92d4157637bda15aeff3cbd2dc56", "filename": "gcc/gcov.c", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4457451f3d3475158e48f7b751eb2ddf7875c894/gcc%2Fgcov.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4457451f3d3475158e48f7b751eb2ddf7875c894/gcc%2Fgcov.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgcov.c?ref=4457451f3d3475158e48f7b751eb2ddf7875c894", "patch": "@@ -194,7 +194,7 @@ typedef struct function_info\n   unsigned src;\n \n   /* Next function in same source file.  */\n-  struct function_info *line_next;\n+  struct function_info *next_file_fn;\n \n   /* Next function.  */\n   struct function_info *next;\n@@ -667,7 +667,7 @@ output_intermediate_file (FILE *gcov_file, source_t *src)\n \n   fprintf (gcov_file, \"file:%s\\n\", src->name);    /* source file name */\n \n-  for (fn = src->functions; fn; fn = fn->line_next)\n+  for (fn = src->functions; fn; fn = fn->next_file_fn)\n     {\n       /* function:<name>,<line_number>,<execution_count> */\n       fprintf (gcov_file, \"function:%d,%s,%s\\n\", fn->line,\n@@ -736,10 +736,10 @@ process_file (const char *file_name)\n \t     ascending order, so a simple scan is quick.  Note we're\n \t     building this list in reverse order.  */\n \t  for (prev = &sources[src].functions;\n-\t       (probe = *prev); prev = &probe->line_next)\n+\t       (probe = *prev); prev = &probe->next_file_fn)\n \t    if (probe->line <= line)\n \t      break;\n-\t  fn->line_next = probe;\n+\t  fn->next_file_fn = probe;\n \t  *prev = fn;\n \n \t  /* Mark last line in files touched by function.  */\n@@ -1220,7 +1220,7 @@ read_graph_file (void)\n \t  fn->src = src_idx;\n \t  fn->line = lineno;\n \n-\t  fn->line_next = NULL;\n+\t  fn->next_file_fn = NULL;\n \t  fn->next = NULL;\n \t  *fns_end = fn;\n \t  fns_end = &fn->next;\n@@ -2152,8 +2152,8 @@ accumulate_line_counts (source_t *src)\n   /* Reverse the function order.  */\n   for (fn = src->functions, fn_p = NULL; fn; fn_p = fn, fn = fn_n)\n     {\n-      fn_n = fn->line_next;\n-      fn->line_next = fn_p;\n+      fn_n = fn->next_file_fn;\n+      fn->next_file_fn = fn_p;\n     }\n   src->functions = fn_p;\n \n@@ -2429,7 +2429,7 @@ output_lines (FILE *gcov_file, const source_t *src)\n   for (line_num = 1, line = &src->lines[line_num];\n        line_num < src->num_lines; line_num++, line++)\n     {\n-      for (; fn && fn->line == line_num; fn = fn->line_next)\n+      for (; fn && fn->line == line_num; fn = fn->next_file_fn)\n \t{\n \t  arc_t *arc = fn->blocks[EXIT_BLOCK].pred;\n \t  gcov_type return_count = fn->blocks[EXIT_BLOCK].count;"}]}