{"sha": "0ee1b105a36031f53b989f42f7bb38fc8f2c17be", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MGVlMWIxMDVhMzYwMzFmNTNiOTg5ZjQyZjdiYjM4ZmM4ZjJjMTdiZQ==", "commit": {"author": {"name": "Tobias Burnus", "email": "burnus@net-b.de", "date": "2008-11-03T07:20:24Z"}, "committer": {"name": "Tobias Burnus", "email": "burnus@gcc.gnu.org", "date": "2008-11-03T07:20:24Z"}, "message": "re PR fortran/37821 (gfortran is ignoring #includes with the syntax <file.h>)\n\n2008-11-03  Tobias Burnus  <burnus@net-b.de>\n\n        PR fortran/37821\n        * cpp.c (gfc_cpp_add_include_path): Use BRACKET.\n        * scanner.c (add_path_to_list): Argument to add at head.\n          (gfc_add_include_path): Add new argument.\n          (gfc_add_intrinsic_modules_path) Update call.\n          (load_file): Print filename/line in the error message.\n        * gfortran.h (gfc_add_include_path): Update prototype.\n        * options.c (gfc_post_options,gfc_handle_module_path_options,\n          gfc_handle_option): Update call.\n        * lang-spec.h (F951_OPTIONS): Don't insert include path twice.\n\n        * arith.c (arith_error): Add -fno-range-error to the message.\n\n2008-11-03  Tobias Burnus  <burnus@net-b.de>\n\n        PR fortran/37821\n        * gfortran.dg/include_4.f90: New.\n        * gfortran.dg/include_5.f90: New.\n        * gfortran.dg/include_4.inc: New.\n\nFrom-SVN: r141544", "tree": {"sha": "98fad3e4de24661c6a6e73acd3e7e4f5eb096157", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/98fad3e4de24661c6a6e73acd3e7e4f5eb096157"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0ee1b105a36031f53b989f42f7bb38fc8f2c17be", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0ee1b105a36031f53b989f42f7bb38fc8f2c17be", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0ee1b105a36031f53b989f42f7bb38fc8f2c17be", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0ee1b105a36031f53b989f42f7bb38fc8f2c17be/comments", "author": {"login": "tob2", "id": 264461, "node_id": "MDQ6VXNlcjI2NDQ2MQ==", "avatar_url": "https://avatars.githubusercontent.com/u/264461?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tob2", "html_url": "https://github.com/tob2", "followers_url": "https://api.github.com/users/tob2/followers", "following_url": "https://api.github.com/users/tob2/following{/other_user}", "gists_url": "https://api.github.com/users/tob2/gists{/gist_id}", "starred_url": "https://api.github.com/users/tob2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tob2/subscriptions", "organizations_url": "https://api.github.com/users/tob2/orgs", "repos_url": "https://api.github.com/users/tob2/repos", "events_url": "https://api.github.com/users/tob2/events{/privacy}", "received_events_url": "https://api.github.com/users/tob2/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "67cec813c625940ddf829c57f4bfd1c14fd7e563", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/67cec813c625940ddf829c57f4bfd1c14fd7e563", "html_url": "https://github.com/Rust-GCC/gccrs/commit/67cec813c625940ddf829c57f4bfd1c14fd7e563"}], "stats": {"total": 113, "additions": 91, "deletions": 22}, "files": [{"sha": "ec83b16b59c772766b619f727492d1258a0e3e45", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0ee1b105a36031f53b989f42f7bb38fc8f2c17be/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0ee1b105a36031f53b989f42f7bb38fc8f2c17be/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=0ee1b105a36031f53b989f42f7bb38fc8f2c17be", "patch": "@@ -1,3 +1,18 @@\n+2008-11-03  Tobias Burnus  <burnus@net-b.de>\n+\n+\tPR fortran/37821\n+\t* cpp.c (gfc_cpp_add_include_path): Use BRACKET.\n+\t* scanner.c (add_path_to_list): Argument to add at head.\n+\t(gfc_add_include_path): Add new argument.\n+\t(gfc_add_intrinsic_modules_path) Update call.\n+\t(load_file): Print filename/line in the error message.\n+\t* gfortran.h (gfc_add_include_path): Update prototype.\n+\t* options.c (gfc_post_options,gfc_handle_module_path_options,\n+\tgfc_handle_option): Update call.\n+\t* lang-spec.h (F951_OPTIONS): Don't insert include path twice.\n+\n+\t* arith.c (arith_error): Add -fno-range-error to the message.\n+\n 2008-11-03  Paul Thomas  <pault@gcc.gnu.org>\n \n \tPR fortran/37445"}, {"sha": "c56be036e2f51ff03cd4b570f0063ba6a44a7881", "filename": "gcc/fortran/arith.c", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0ee1b105a36031f53b989f42f7bb38fc8f2c17be/gcc%2Ffortran%2Farith.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0ee1b105a36031f53b989f42f7bb38fc8f2c17be/gcc%2Ffortran%2Farith.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Farith.c?ref=0ee1b105a36031f53b989f42f7bb38fc8f2c17be", "patch": "@@ -2065,11 +2065,13 @@ arith_error (arith rc, gfc_typespec *from, gfc_typespec *to, locus *where)\n \t\t gfc_typename (from), gfc_typename (to), where);\n       break;\n     case ARITH_UNDERFLOW:\n-      gfc_error (\"Arithmetic underflow converting %s to %s at %L\",\n+      gfc_error (\"Arithmetic underflow converting %s to %s at %L. This check \"\n+\t\t \"can be disabled with the option -fno-range-check\",\n \t\t gfc_typename (from), gfc_typename (to), where);\n       break;\n     case ARITH_NAN:\n-      gfc_error (\"Arithmetic NaN converting %s to %s at %L\",\n+      gfc_error (\"Arithmetic NaN converting %s to %s at %L. This check \"\n+\t\t \"can be disabled with the option -fno-range-check\",\n \t\t gfc_typename (from), gfc_typename (to), where);\n       break;\n     case ARITH_DIV0:"}, {"sha": "51c8e8507cffdb2d279dae523a498054c14a30e1", "filename": "gcc/fortran/cpp.c", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0ee1b105a36031f53b989f42f7bb38fc8f2c17be/gcc%2Ffortran%2Fcpp.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0ee1b105a36031f53b989f42f7bb38fc8f2c17be/gcc%2Ffortran%2Fcpp.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fcpp.c?ref=0ee1b105a36031f53b989f42f7bb38fc8f2c17be", "patch": "@@ -628,10 +628,9 @@ gfc_cpp_add_include_path (char *path, bool user_supplied)\n {\n   /* CHAIN sets cpp_dir->sysp which differs from 0 if PATH is a system\n      include path. Fortran does not define any system include paths.  */\n-  int chain = 0;\n   int cxx_aware = 0;\n \n-  add_path (path, chain, cxx_aware, user_supplied);\n+  add_path (path, BRACKET, cxx_aware, user_supplied);\n }\n \n void"}, {"sha": "174e9af042c44e39bf5d38a63493609cb58de6a7", "filename": "gcc/fortran/gfortran.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0ee1b105a36031f53b989f42f7bb38fc8f2c17be/gcc%2Ffortran%2Fgfortran.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0ee1b105a36031f53b989f42f7bb38fc8f2c17be/gcc%2Ffortran%2Fgfortran.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fgfortran.h?ref=0ee1b105a36031f53b989f42f7bb38fc8f2c17be", "patch": "@@ -2093,7 +2093,7 @@ bool gfc_in_match_data (void);\n void gfc_scanner_done_1 (void);\n void gfc_scanner_init_1 (void);\n \n-void gfc_add_include_path (const char *, bool);\n+void gfc_add_include_path (const char *, bool, bool);\n void gfc_add_intrinsic_modules_path (const char *);\n void gfc_release_include_path (void);\n FILE *gfc_open_included_file (const char *, bool, bool);"}, {"sha": "a766162a5c828615762130c3b049e0b1c600891f", "filename": "gcc/fortran/lang-specs.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0ee1b105a36031f53b989f42f7bb38fc8f2c17be/gcc%2Ffortran%2Flang-specs.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0ee1b105a36031f53b989f42f7bb38fc8f2c17be/gcc%2Ffortran%2Flang-specs.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Flang-specs.h?ref=0ee1b105a36031f53b989f42f7bb38fc8f2c17be", "patch": "@@ -23,7 +23,7 @@\n \n #define F951_CPP_OPTIONS \"%{!nocpp: -cpp %g.f90 %(cpp_options)\\\n                           %{E|M|MM:%(cpp_debug_options) -fsyntax-only} %{E}}\"\n-#define F951_OPTIONS     \"%(cc1_options) %{J*} %{I*}\\\n+#define F951_OPTIONS     \"%(cc1_options) %{J*} %{!cpp: %{I*}}\\\n                           %{!nostdinc:-fintrinsic-modules-path finclude%s}\\\n                           %{!fsyntax-only:%(invoke_as)}\"\n #define F951_SOURCE_FORM  \"%{!ffree-form:-ffixed-form}\""}, {"sha": "7a800ce8c66da5efcdb597445b2698a0cb72740b", "filename": "gcc/fortran/options.c", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0ee1b105a36031f53b989f42f7bb38fc8f2c17be/gcc%2Ffortran%2Foptions.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0ee1b105a36031f53b989f42f7bb38fc8f2c17be/gcc%2Ffortran%2Foptions.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Foptions.c?ref=0ee1b105a36031f53b989f42f7bb38fc8f2c17be", "patch": "@@ -265,10 +265,10 @@ gfc_post_options (const char **pfilename)\n       source_path = (char *) alloca (i + 1);\n       memcpy (source_path, canon_source_file, i);\n       source_path[i] = 0;\n-      gfc_add_include_path (source_path, true);\n+      gfc_add_include_path (source_path, true, true);\n     }\n   else\n-    gfc_add_include_path (\".\", true);\n+    gfc_add_include_path (\".\", true, true);\n \n   if (canon_source_file != gfc_source_file)\n     gfc_free (CONST_CAST (char *, canon_source_file));\n@@ -407,7 +407,7 @@ gfc_handle_module_path_options (const char *arg)\n   strcpy (gfc_option.module_dir, arg);\n   strcat (gfc_option.module_dir, \"/\");\n \n-  gfc_add_include_path (gfc_option.module_dir, true);\n+  gfc_add_include_path (gfc_option.module_dir, true, false);\n }\n \n \n@@ -639,7 +639,7 @@ gfc_handle_option (size_t scode, const char *arg, int value)\n       break;\n \n     case OPT_fintrinsic_modules_path:\n-      gfc_add_include_path (arg, false);\n+      gfc_add_include_path (arg, false, false);\n       gfc_add_intrinsic_modules_path (arg);\n       break;\n \n@@ -744,7 +744,7 @@ gfc_handle_option (size_t scode, const char *arg, int value)\n       break;\n \n     case OPT_I:\n-      gfc_add_include_path (arg, true);\n+      gfc_add_include_path (arg, true, false);\n       break;\n \n     case OPT_J:"}, {"sha": "c45827f08a1c581b5b0539916104b0b37ad68ed1", "filename": "gcc/fortran/scanner.c", "status": "modified", "additions": 23, "deletions": 11, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0ee1b105a36031f53b989f42f7bb38fc8f2c17be/gcc%2Ffortran%2Fscanner.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0ee1b105a36031f53b989f42f7bb38fc8f2c17be/gcc%2Ffortran%2Fscanner.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fscanner.c?ref=0ee1b105a36031f53b989f42f7bb38fc8f2c17be", "patch": "@@ -307,7 +307,7 @@ gfc_scanner_done_1 (void)\n \n static void\n add_path_to_list (gfc_directorylist **list, const char *path,\n-\t\t  bool use_for_modules)\n+\t\t  bool use_for_modules, bool head)\n {\n   gfc_directorylist *dir;\n   const char *p;\n@@ -317,19 +317,25 @@ add_path_to_list (gfc_directorylist **list, const char *path,\n     if (*p++ == '\\0')\n       return;\n \n-  dir = *list;\n-  if (!dir)\n-    dir = *list = XCNEW (gfc_directorylist);\n+  if (head || *list == NULL)\n+    {\n+      dir = XCNEW (gfc_directorylist);\n+      if (!head)\n+        *list = dir;\n+    }\n   else\n     {\n+      dir = *list;\n       while (dir->next)\n \tdir = dir->next;\n \n       dir->next = XCNEW (gfc_directorylist);\n       dir = dir->next;\n     }\n \n-  dir->next = NULL;\n+  dir->next = head ? *list : NULL;\n+  if (head)\n+    *list = dir;\n   dir->use_for_modules = use_for_modules;\n   dir->path = XCNEWVEC (char, strlen (p) + 2);\n   strcpy (dir->path, p);\n@@ -338,17 +344,20 @@ add_path_to_list (gfc_directorylist **list, const char *path,\n \n \n void\n-gfc_add_include_path (const char *path, bool use_for_modules)\n+gfc_add_include_path (const char *path, bool use_for_modules, bool file_dir)\n {\n-  add_path_to_list (&include_dirs, path, use_for_modules);\n-  gfc_cpp_add_include_path (xstrdup(path), true);\n+  add_path_to_list (&include_dirs, path, use_for_modules, file_dir);\n+\n+  /* For '#include \"...\"' these directories are automatically searched.  */\n+  if (!file_dir)\n+    gfc_cpp_add_include_path (xstrdup(path), true);\n }\n \n \n void\n gfc_add_intrinsic_modules_path (const char *path)\n {\n-  add_path_to_list (&intrinsic_modules_dirs, path, true);\n+  add_path_to_list (&intrinsic_modules_dirs, path, true, false);\n }\n \n \n@@ -1767,7 +1776,9 @@ load_file (const char *realfilename, const char *displayedname, bool initial)\n   for (f = current_file; f; f = f->up)\n     if (strcmp (filename, f->filename) == 0)\n       {\n-\tgfc_error_now (\"File '%s' is being included recursively\", filename);\n+\tfprintf (stderr, \"%s:%d: Error: File '%s' is being included \"\n+\t\t \"recursively\\n\", current_file->filename, current_file->line,\n+\t\t filename);\n \treturn FAILURE;\n       }\n \n@@ -1791,7 +1802,8 @@ load_file (const char *realfilename, const char *displayedname, bool initial)\n       input = gfc_open_included_file (realfilename, false, false);\n       if (input == NULL)\n \t{\n-\t  gfc_error_now (\"Can't open included file '%s'\", filename);\n+\t  fprintf (stderr, \"%s:%d: Error: Can't open included file '%s'\\n\",\n+\t\t   current_file->filename, current_file->line, filename);\n \t  return FAILURE;\n \t}\n     }"}, {"sha": "f568e4ed23d9b8b4bdf7730a06f7a1cab2186e68", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0ee1b105a36031f53b989f42f7bb38fc8f2c17be/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0ee1b105a36031f53b989f42f7bb38fc8f2c17be/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=0ee1b105a36031f53b989f42f7bb38fc8f2c17be", "patch": "@@ -1,3 +1,10 @@\n+2008-11-03  Tobias Burnus  <burnus@net-b.de>\n+\n+\tPR fortran/37821\n+\t* gfortran.dg/include_4.f90: New.\n+\t* gfortran.dg/include_5.f90: New.\n+\t* gfortran.dg/include_4.inc: New.\n+\n 2008-11-03  Paul Thomas  <pault@gcc.gnu.org>\n \n \tPR fortran/37445"}, {"sha": "cf1efb159aded99ac6c88860c9d27409e0ab8dcc", "filename": "gcc/testsuite/gfortran.dg/include_4.f90", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0ee1b105a36031f53b989f42f7bb38fc8f2c17be/gcc%2Ftestsuite%2Fgfortran.dg%2Finclude_4.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0ee1b105a36031f53b989f42f7bb38fc8f2c17be/gcc%2Ftestsuite%2Fgfortran.dg%2Finclude_4.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Finclude_4.f90?ref=0ee1b105a36031f53b989f42f7bb38fc8f2c17be", "patch": "@@ -0,0 +1,12 @@\n+! { dg-do compile }\n+!\n+! PR fortran/37821\n+!\n+! Ensure that for #include \"...\" and for include the\n+! current directory/directory of the source file is\n+! included. See also include_5.f90\n+\n+subroutine one()\n+  include \"include_4.inc\"\n+  integer(i4) :: i\n+end subroutine one"}, {"sha": "37b646774dab24918fcabf99a102a48530fb689a", "filename": "gcc/testsuite/gfortran.dg/include_4.inc", "status": "added", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0ee1b105a36031f53b989f42f7bb38fc8f2c17be/gcc%2Ftestsuite%2Fgfortran.dg%2Finclude_4.inc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0ee1b105a36031f53b989f42f7bb38fc8f2c17be/gcc%2Ftestsuite%2Fgfortran.dg%2Finclude_4.inc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Finclude_4.inc?ref=0ee1b105a36031f53b989f42f7bb38fc8f2c17be", "patch": "@@ -0,0 +1,4 @@\n+! Used by include_4.f90 and include_5.f90\n+! PR fortran/37821\n+!\n+integer, parameter :: i4 = 4"}, {"sha": "2bfd2bb09dd136a697f710889dd86728c27b7e18", "filename": "gcc/testsuite/gfortran.dg/include_5.f90", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0ee1b105a36031f53b989f42f7bb38fc8f2c17be/gcc%2Ftestsuite%2Fgfortran.dg%2Finclude_5.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0ee1b105a36031f53b989f42f7bb38fc8f2c17be/gcc%2Ftestsuite%2Fgfortran.dg%2Finclude_5.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Finclude_5.f90?ref=0ee1b105a36031f53b989f42f7bb38fc8f2c17be", "patch": "@@ -0,0 +1,18 @@\n+! { dg-do compile }\n+! { dg-options \"-cpp\" }\n+!\n+! PR fortran/37821\n+!\n+! Ensure that for #include \"...\" and for include the\n+! current directory/directory of the source file is\n+! included.\n+\n+subroutine one()\n+  include \"include_4.inc\"\n+  integer(i4) :: i\n+end subroutine one\n+\n+subroutine two()\n+# include \"include_4.inc\"\n+  integer(i4) :: i\n+end subroutine two"}]}