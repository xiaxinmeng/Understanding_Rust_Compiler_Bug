{"sha": "e6b7d184d01f032efe5c41d5503945081c7a0aea", "node_id": "C_kwDOANBUbNoAKGU2YjdkMTg0ZDAxZjAzMmVmZTVjNDFkNTUwMzk0NTA4MWM3YTBhZWE", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2022-06-24T07:21:34Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-06-24T07:21:34Z"}, "message": "Merge #1326\n\n1326: ast: Add location to ConstGenericArg r=CohenArthur a=CohenArthur\n\nCloses #1320 \r\n\r\nSorry for taking a good-first-pr but this is starting to be needed :)\n\nCo-authored-by: Arthur Cohen <arthur.cohen@embecosm.com>", "tree": {"sha": "1b6f2a6545cbd27a352e6c2057966a43d32f9e03", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1b6f2a6545cbd27a352e6c2057966a43d32f9e03"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e6b7d184d01f032efe5c41d5503945081c7a0aea", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJitWX+CRBK7hj4Ov3rIwAA7UoIAAiBJx4kADwgaDPj9Uf0e/EC\n3NSm8Oc5CWzhHRE6qG57npDrX+arByi9Wni06Vj9YIlZiBVKbgl0Kvr+nzrGTaEP\n8dyiGatQ+j/qmpdN/NnRxb2ezGMHeudoS3gLDbZhaDItIlH2uxOyVnsKjZFBh2wH\nvlq3gl4P5TLdj1K0aD+gZAnBXbTR484CWijcQHujb3An9o5iBrRIUPc4i9sKqsnW\nYb1m656eaFS/L7/ULo22RsbEjwz1bV0IhjRYscQhH3KJwYIwCg6ZwxP5Uz8jnRhF\n8OuaE6BXxSovcDVjTC5qlzIhdalwFJ1M31UU9IKciNPKHnKbEvdEPDSl9h9HeM4=\n=8stN\n-----END PGP SIGNATURE-----\n", "payload": "tree 1b6f2a6545cbd27a352e6c2057966a43d32f9e03\nparent c0f11672d760513256997f325da678016d13f677\nparent 48492dc805868572d2d2bcd1ad0d00b0a08b3569\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1656055294 +0000\ncommitter GitHub <noreply@github.com> 1656055294 +0000\n\nMerge #1326\n\n1326: ast: Add location to ConstGenericArg r=CohenArthur a=CohenArthur\n\nCloses #1320 \r\n\r\nSorry for taking a good-first-pr but this is starting to be needed :)\n\nCo-authored-by: Arthur Cohen <arthur.cohen@embecosm.com>\n"}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e6b7d184d01f032efe5c41d5503945081c7a0aea", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e6b7d184d01f032efe5c41d5503945081c7a0aea", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e6b7d184d01f032efe5c41d5503945081c7a0aea/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c0f11672d760513256997f325da678016d13f677", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c0f11672d760513256997f325da678016d13f677", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c0f11672d760513256997f325da678016d13f677"}, {"sha": "48492dc805868572d2d2bcd1ad0d00b0a08b3569", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/48492dc805868572d2d2bcd1ad0d00b0a08b3569", "html_url": "https://github.com/Rust-GCC/gccrs/commit/48492dc805868572d2d2bcd1ad0d00b0a08b3569"}], "stats": {"total": 25, "additions": 15, "deletions": 10}, "files": [{"sha": "232f11cfb01283f0952b7d31685b4a1f7aa2068a", "filename": "gcc/rust/ast/rust-path.h", "status": "modified", "additions": 13, "deletions": 8, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e6b7d184d01f032efe5c41d5503945081c7a0aea/gcc%2Frust%2Fast%2Frust-path.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e6b7d184d01f032efe5c41d5503945081c7a0aea/gcc%2Frust%2Fast%2Frust-path.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Fast%2Frust-path.h?ref=e6b7d184d01f032efe5c41d5503945081c7a0aea", "patch": "@@ -156,19 +156,20 @@ class ConstGenericArg\n \n   static ConstGenericArg create_error ()\n   {\n-    return ConstGenericArg (nullptr, \"\", Kind::Error);\n+    return ConstGenericArg (nullptr, \"\", Kind::Error, Location ());\n   }\n \n-  ConstGenericArg (std::unique_ptr<Expr> expression)\n-    : expression (std::move (expression)), path (\"\"), kind (Kind::Clear)\n+  ConstGenericArg (std::unique_ptr<Expr> expression, Location locus)\n+    : expression (std::move (expression)), path (\"\"), kind (Kind::Clear),\n+      locus (locus)\n   {}\n \n-  ConstGenericArg (Identifier path)\n-    : expression (nullptr), path (path), kind (Kind::Ambiguous)\n+  ConstGenericArg (Identifier path, Location locus)\n+    : expression (nullptr), path (path), kind (Kind::Ambiguous), locus (locus)\n   {}\n \n   ConstGenericArg (const ConstGenericArg &other)\n-    : path (other.path), kind (other.kind)\n+    : path (other.path), kind (other.kind), locus (other.locus)\n   {\n     if (other.expression)\n       expression = other.expression->clone_expr ();\n@@ -178,6 +179,7 @@ class ConstGenericArg\n   {\n     kind = other.kind;\n     path = other.path;\n+    locus = other.locus;\n \n     if (other.expression)\n       expression = other.expression->clone_expr ();\n@@ -206,8 +208,9 @@ class ConstGenericArg\n \n private:\n   ConstGenericArg (std::unique_ptr<AST::Expr> expression, Identifier path,\n-\t\t   Kind kind)\n-    : expression (std::move (expression)), path (std::move (path)), kind (kind)\n+\t\t   Kind kind, Location locus)\n+    : expression (std::move (expression)), path (std::move (path)), kind (kind),\n+      locus (locus)\n   {}\n \n   /**\n@@ -226,6 +229,8 @@ class ConstGenericArg\n \n   /* Which kind of const generic application are we dealing with */\n   Kind kind;\n+\n+  Location locus;\n };\n \n // Generic arguments allowed in each path expression segment - inline?"}, {"sha": "708140af93dcfdfef6e724fd5996ba16c07021aa", "filename": "gcc/rust/parse/rust-parse-impl.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e6b7d184d01f032efe5c41d5503945081c7a0aea/gcc%2Frust%2Fparse%2Frust-parse-impl.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e6b7d184d01f032efe5c41d5503945081c7a0aea/gcc%2Frust%2Fparse%2Frust-parse-impl.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Fparse%2Frust-parse-impl.h?ref=e6b7d184d01f032efe5c41d5503945081c7a0aea", "patch": "@@ -6181,7 +6181,7 @@ Parser<ManagedTokenSource>::parse_const_generic_expression ()\n       // special variant here\n \n       // FIXME: We need locus here as well\n-      return AST::ConstGenericArg (tok->get_str ());\n+      return AST::ConstGenericArg (tok->get_str (), tok->get_locus ());\n     case LEFT_CURLY:\n       expr = parse_block_expr ();\n       break;\n@@ -6201,7 +6201,7 @@ Parser<ManagedTokenSource>::parse_const_generic_expression ()\n   if (!expr)\n     return AST::ConstGenericArg::create_error ();\n \n-  return AST::ConstGenericArg (std::move (expr));\n+  return AST::ConstGenericArg (std::move (expr), tok->get_locus ());\n }\n \n // Parses the generic arguments in each path segment."}]}