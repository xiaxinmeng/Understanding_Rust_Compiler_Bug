{"sha": "a6c9b188f35baa239b99ece2aba5b7f335a5ab0d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTZjOWIxODhmMzViYWEyMzliOTllY2UyYWJhNWI3ZjMzNWE1YWIwZA==", "commit": {"author": {"name": "H.J. Lu", "email": "hongjiu.lu@intel.com", "date": "2007-07-18T22:28:28Z"}, "committer": {"name": "H.J. Lu", "email": "hjl@gcc.gnu.org", "date": "2007-07-18T22:28:28Z"}, "message": "Makefile.in (D32PBIT_FUNCS): Add _sd_to_tf and _tf_to_sd.\n\n2007-07-18  H.J. Lu  <hongjiu.lu@intel.com>\n\n\t* Makefile.in (D32PBIT_FUNCS): Add _sd_to_tf and _tf_to_sd.\n\t(D64PBIT_FUNCS): Add _dd_to_tf and _tf_to_dd.\n\t(D128PBIT_FUNCS): Add _td_to_tf and _tf_to_td.\n\n\t* config/dfp-bit.c: Empty for TFmode conversions.\n\nFrom-SVN: r126735", "tree": {"sha": "3b748aa56f75ae27db27a6a84ce9b02fed141796", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3b748aa56f75ae27db27a6a84ce9b02fed141796"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a6c9b188f35baa239b99ece2aba5b7f335a5ab0d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a6c9b188f35baa239b99ece2aba5b7f335a5ab0d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a6c9b188f35baa239b99ece2aba5b7f335a5ab0d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a6c9b188f35baa239b99ece2aba5b7f335a5ab0d/comments", "author": {"login": "hjl-tools", "id": 1072356, "node_id": "MDQ6VXNlcjEwNzIzNTY=", "avatar_url": "https://avatars.githubusercontent.com/u/1072356?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hjl-tools", "html_url": "https://github.com/hjl-tools", "followers_url": "https://api.github.com/users/hjl-tools/followers", "following_url": "https://api.github.com/users/hjl-tools/following{/other_user}", "gists_url": "https://api.github.com/users/hjl-tools/gists{/gist_id}", "starred_url": "https://api.github.com/users/hjl-tools/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hjl-tools/subscriptions", "organizations_url": "https://api.github.com/users/hjl-tools/orgs", "repos_url": "https://api.github.com/users/hjl-tools/repos", "events_url": "https://api.github.com/users/hjl-tools/events{/privacy}", "received_events_url": "https://api.github.com/users/hjl-tools/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "c00a2e6beb98a0c8ae9b0d0feb85c88b7254981c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c00a2e6beb98a0c8ae9b0d0feb85c88b7254981c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c00a2e6beb98a0c8ae9b0d0feb85c88b7254981c"}], "stats": {"total": 28, "additions": 23, "deletions": 5}, "files": [{"sha": "eb3e3e447cd62a32b6ac3b0cb6373399b327e019", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a6c9b188f35baa239b99ece2aba5b7f335a5ab0d/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a6c9b188f35baa239b99ece2aba5b7f335a5ab0d/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=a6c9b188f35baa239b99ece2aba5b7f335a5ab0d", "patch": "@@ -1,3 +1,11 @@\n+2007-07-18  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\t* Makefile.in (D32PBIT_FUNCS): Add _sd_to_tf and _tf_to_sd.\n+\t(D64PBIT_FUNCS): Add _dd_to_tf and _tf_to_dd.\n+\t(D128PBIT_FUNCS): Add _td_to_tf and _tf_to_td.\n+\n+\t* config/dfp-bit.c: Empty for TFmode conversions.\n+\n 2007-07-18  Caroline Tice  <ctice@apple.com>\n \t\n \t* var-tracking.c (find_src_status):  Check for  COND_EXEC insns"}, {"sha": "7aa1efbd1e061d14d1772eaa599103477621dfa2", "filename": "gcc/Makefile.in", "status": "modified", "additions": 6, "deletions": 5, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a6c9b188f35baa239b99ece2aba5b7f335a5ab0d/gcc%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a6c9b188f35baa239b99ece2aba5b7f335a5ab0d/gcc%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FMakefile.in?ref=a6c9b188f35baa239b99ece2aba5b7f335a5ab0d", "patch": "@@ -1268,23 +1268,24 @@ D32PBIT_FUNCS = _addsub_sd _div_sd _mul_sd _plus_sd _minus_sd \\\n \t_eq_sd _ne_sd _lt_sd _gt_sd _le_sd _ge_sd \\\n \t_sd_to_si _sd_to_di _sd_to_usi _sd_to_udi \\\n \t_si_to_sd _di_to_sd _usi_to_sd _udi_to_sd \\\n-\t_sd_to_sf _sd_to_df _sd_to_xf _sf_to_sd _df_to_sd _xf_to_sd \\\n+\t_sd_to_sf _sd_to_df _sd_to_xf _sd_to_tf \\\n+\t_sf_to_sd _df_to_sd _xf_to_sd _tf_to_sd \\\n \t_sd_to_dd _sd_to_td _unord_sd _conv_sd\n \n D64PBIT_FUNCS = _addsub_dd _div_dd _mul_dd _plus_dd _minus_dd \\\n \t_eq_dd _ne_dd _lt_dd _gt_dd _le_dd _ge_dd \\\n \t_dd_to_si _dd_to_di _dd_to_usi _dd_to_udi \\\n \t_si_to_dd _di_to_dd _usi_to_dd _udi_to_dd \\\n-\t_dd_to_sf _dd_to_df _dd_to_xf \\\n-\t_sf_to_dd _df_to_dd _xf_to_dd \\\n+\t_dd_to_sf _dd_to_df _dd_to_xf _dd_to_tf \\\n+\t_sf_to_dd _df_to_dd _xf_to_dd _tf_to_dd \\\n \t_dd_to_sd _dd_to_td _unord_dd _conv_dd\n \n D128PBIT_FUNCS = _addsub_td _div_td _mul_td _plus_td _minus_td \\\n \t_eq_td _ne_td _lt_td _gt_td _le_td _ge_td \\\n \t_td_to_si _td_to_di _td_to_usi _td_to_udi \\\n \t_si_to_td _di_to_td _usi_to_td _udi_to_td \\\n-\t_td_to_sf _td_to_df _td_to_xf \\\n-\t_sf_to_td _df_to_td _xf_to_td \\\n+\t_td_to_sf _td_to_df _td_to_xf _td_to_tf \\\n+\t_sf_to_td _df_to_td _xf_to_td _tf_to_td \\\n \t_td_to_sd _td_to_dd _unord_td _conv_td\n \n # These might cause a divide overflow trap and so are compiled with"}, {"sha": "b472792c4989377924c75620bec8e00a3562ea5f", "filename": "gcc/config/dfp-bit.c", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a6c9b188f35baa239b99ece2aba5b7f335a5ab0d/gcc%2Fconfig%2Fdfp-bit.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a6c9b188f35baa239b99ece2aba5b7f335a5ab0d/gcc%2Fconfig%2Fdfp-bit.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fdfp-bit.c?ref=a6c9b188f35baa239b99ece2aba5b7f335a5ab0d", "patch": "@@ -37,6 +37,11 @@ Software Foundation, 51 Franklin Street, Fifth Floor, Boston, MA\n /* The intended way to use this file is to make two copies, add `#define '\n    to one copy, then compile both copies and add them to libgcc.a.  */\n \n+/* FIXME: This implementation doesn't support TFmode conversions.  */\n+#if !(defined (L_sd_to_tf) || defined (L_dd_to_tf) \\\n+      || defined (L_td_to_tf) || defined (L_tf_to_sd) \\\n+      || defined (L_tf_to_dd) || defined (L_tf_to_td))\n+\n #include <stdio.h>\n #include <stdlib.h>\n #include <string.h>\n@@ -576,3 +581,7 @@ DFP_UNORD (DFP_C_TYPE arg_a, DFP_C_TYPE arg_b)\n   return (decNumberIsNaN (&arg1) || decNumberIsNaN (&arg2));\n }\n #endif /* L_unord_sd || L_unord_dd || L_unord_td */\n+\n+/* !(L_sd_to_tf || L_dd_to_tf || L_td_to_tf \\\n+     || L_tf_to_sd || L_tf_to_dd || L_tf_to_td)  */\n+#endif"}]}