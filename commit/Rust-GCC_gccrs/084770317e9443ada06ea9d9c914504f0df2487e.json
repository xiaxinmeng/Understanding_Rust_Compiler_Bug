{"sha": "084770317e9443ada06ea9d9c914504f0df2487e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDg0NzcwMzE3ZTk0NDNhZGEwNmVhOWQ5YzkxNDUwNGYwZGYyNDg3ZQ==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@adacore.com", "date": "2014-10-27T11:37:19Z"}, "committer": {"name": "Eric Botcazou", "email": "ebotcazou@gcc.gnu.org", "date": "2014-10-27T11:37:19Z"}, "message": "* gcc-interface/trans.c (gnat_to_gnu) <N_Real_Literal>: Minor tweaks.\n\nFrom-SVN: r216730", "tree": {"sha": "c138491b6ad470289d7f832172e8e6a34f51897c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c138491b6ad470289d7f832172e8e6a34f51897c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/084770317e9443ada06ea9d9c914504f0df2487e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/084770317e9443ada06ea9d9c914504f0df2487e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/084770317e9443ada06ea9d9c914504f0df2487e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/084770317e9443ada06ea9d9c914504f0df2487e/comments", "author": null, "committer": null, "parents": [{"sha": "5fe48b3df8d1e27d2348ee66dfef7fc7b9e42553", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5fe48b3df8d1e27d2348ee66dfef7fc7b9e42553", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5fe48b3df8d1e27d2348ee66dfef7fc7b9e42553"}], "stats": {"total": 23, "additions": 12, "deletions": 11}, "files": [{"sha": "574ed3b13409f02664a2aecab38dab3185f6c178", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/084770317e9443ada06ea9d9c914504f0df2487e/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/084770317e9443ada06ea9d9c914504f0df2487e/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=084770317e9443ada06ea9d9c914504f0df2487e", "patch": "@@ -1,3 +1,7 @@\n+2014-10-27  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* gcc-interface/trans.c (gnat_to_gnu) <N_Real_Literal>: Minor tweaks.\n+\n 2014-10-27  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* gcc-interface/utils.c (create_var_decl_1): For a variable declared"}, {"sha": "7c3edd399aa2ade2744999864121d5ac19be217b", "filename": "gcc/ada/gcc-interface/trans.c", "status": "modified", "additions": 8, "deletions": 11, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/084770317e9443ada06ea9d9c914504f0df2487e/gcc%2Fada%2Fgcc-interface%2Ftrans.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/084770317e9443ada06ea9d9c914504f0df2487e/gcc%2Fada%2Fgcc-interface%2Ftrans.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgcc-interface%2Ftrans.c?ref=084770317e9443ada06ea9d9c914504f0df2487e", "patch": "@@ -5330,8 +5330,8 @@ gnat_to_gnu (Node_Id gnat_node)\n     case N_Real_Literal:\n       gnu_result_type = get_unpadded_type (Etype (gnat_node));\n \n-      /* If this is of a fixed-point type, the value we want is the\n-\t value of the corresponding integer.  */\n+      /* If this is of a fixed-point type, the value we want is the value of\n+\t the corresponding integer.  */\n       if (IN (Ekind (Underlying_Type (Etype (gnat_node))), Fixed_Point_Kind))\n \t{\n \t  gnu_result = UI_To_gnu (Corresponding_Integer_Value (gnat_node),\n@@ -5343,10 +5343,9 @@ gnat_to_gnu (Node_Id gnat_node)\n \t{\n \t  Ureal ur_realval = Realval (gnat_node);\n \n-\t  /* First convert the real value to a machine number if it isn't\n-\t     already. That forces BASE to 2 for non-zero values and simplifies\n-             the rest of our logic.  */\n-\n+\t  /* First convert the value to a machine number if it isn't already.\n+\t     That will force the base to 2 for non-zero values and simplify\n+\t     the rest of the logic.  */\n \t  if (!Is_Machine_Number (gnat_node))\n \t    ur_realval\n \t      = Machine (Base_Type (Underlying_Type (Etype (gnat_node))),\n@@ -5358,13 +5357,11 @@ gnat_to_gnu (Node_Id gnat_node)\n \t    {\n \t      REAL_VALUE_TYPE tmp;\n \n-\t      gnu_result\n-\t\t= UI_To_gnu (Numerator (ur_realval), gnu_result_type);\n+\t      gnu_result = UI_To_gnu (Numerator (ur_realval), gnu_result_type);\n \n \t      /* The base must be 2 as Machine guarantees this, so we scale\n-                 the value, which we know can fit in the mantissa of the type\n-                 (hence the use of that type above).  */\n-\n+\t\t the value, which we know can fit in the mantissa of the type\n+\t\t (hence the use of that type above).  */\n \t      gcc_assert (Rbase (ur_realval) == 2);\n \t      real_ldexp (&tmp, &TREE_REAL_CST (gnu_result),\n \t\t\t  - UI_To_Int (Denominator (ur_realval)));"}]}