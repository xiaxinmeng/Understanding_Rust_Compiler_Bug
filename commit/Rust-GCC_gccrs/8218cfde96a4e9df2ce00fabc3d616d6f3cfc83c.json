{"sha": "8218cfde96a4e9df2ce00fabc3d616d6f3cfc83c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODIxOGNmZGU5NmE0ZTlkZjJjZTAwZmFiYzNkNjE2ZDZmM2NmYzgzYw==", "commit": {"author": {"name": "Ed Schonberg", "email": "schonberg@adacore.com", "date": "2018-05-25T09:03:04Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "pmderodat@gcc.gnu.org", "date": "2018-05-25T09:03:04Z"}, "message": "[Ada] Compiler loop on expression function and predicate in generic unit\n\nThis patch fixes an infinite loop in the compiler when analyzing an\nexpression function whose expression mentions a subtype with a static\npredicate, and the context is a generic unit.\n\n2018-05-25  Ed Schonberg  <schonberg@adacore.com>\n\ngcc/ada/\n\n\t* sem_ch13.adb (Build_Predicate_Functions): The predicate function\n\tdeclaration is inserted into the tree and analyzed at that point, so\n\tshould not be reinserted when the body is constructed. Inside a\n\tgeneric, ensure that the body is not inserted twice in the tree.\n\ngcc/testsuite/\n\n\t* gnat.dg/static_pred1.adb, gnat.dg/static_pred1.ads: New testcase.\n\nFrom-SVN: r260716", "tree": {"sha": "6a7069f514a341e95de7b5860bd3f0b53386e4a5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6a7069f514a341e95de7b5860bd3f0b53386e4a5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8218cfde96a4e9df2ce00fabc3d616d6f3cfc83c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8218cfde96a4e9df2ce00fabc3d616d6f3cfc83c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8218cfde96a4e9df2ce00fabc3d616d6f3cfc83c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8218cfde96a4e9df2ce00fabc3d616d6f3cfc83c/comments", "author": {"login": "Edschonberg", "id": 6352375, "node_id": "MDQ6VXNlcjYzNTIzNzU=", "avatar_url": "https://avatars.githubusercontent.com/u/6352375?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Edschonberg", "html_url": "https://github.com/Edschonberg", "followers_url": "https://api.github.com/users/Edschonberg/followers", "following_url": "https://api.github.com/users/Edschonberg/following{/other_user}", "gists_url": "https://api.github.com/users/Edschonberg/gists{/gist_id}", "starred_url": "https://api.github.com/users/Edschonberg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Edschonberg/subscriptions", "organizations_url": "https://api.github.com/users/Edschonberg/orgs", "repos_url": "https://api.github.com/users/Edschonberg/repos", "events_url": "https://api.github.com/users/Edschonberg/events{/privacy}", "received_events_url": "https://api.github.com/users/Edschonberg/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "56ce7e4aa9cfbeb2df1a02a4ae899faaeedb2ab4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/56ce7e4aa9cfbeb2df1a02a4ae899faaeedb2ab4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/56ce7e4aa9cfbeb2df1a02a4ae899faaeedb2ab4"}], "stats": {"total": 54, "additions": 48, "deletions": 6}, "files": [{"sha": "104dbdc722fdf9faa7a73db195747481fa2acd01", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8218cfde96a4e9df2ce00fabc3d616d6f3cfc83c/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8218cfde96a4e9df2ce00fabc3d616d6f3cfc83c/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=8218cfde96a4e9df2ce00fabc3d616d6f3cfc83c", "patch": "@@ -1,3 +1,10 @@\n+2018-05-25  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* sem_ch13.adb (Build_Predicate_Functions): The predicate function\n+\tdeclaration is inserted into the tree and analyzed at that point, so\n+\tshould not be reinserted when the body is constructed. Inside a\n+\tgeneric, ensure that the body is not inserted twice in the tree.\n+\n 2018-05-25  Yannick Moy  <moy@adacore.com>\n \n \t* sem_prag.adb (Check_Grouping): Modify test to ignore statements and"}, {"sha": "bdd9f4ed6a941abf099dcf718e44698d61987f51", "filename": "gcc/ada/sem_ch13.adb", "status": "modified", "additions": 11, "deletions": 6, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8218cfde96a4e9df2ce00fabc3d616d6f3cfc83c/gcc%2Fada%2Fsem_ch13.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8218cfde96a4e9df2ce00fabc3d616d6f3cfc83c/gcc%2Fada%2Fsem_ch13.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch13.adb?ref=8218cfde96a4e9df2ce00fabc3d616d6f3cfc83c", "patch": "@@ -8832,15 +8832,20 @@ package body Sem_Ch13 is\n                       Make_Simple_Return_Statement (Loc,\n                         Expression => Expr))));\n \n-            --  If declaration has not been analyzed yet, Insert declaration\n-            --  before freeze node. Insert body itself after freeze node.\n-\n-            if not Analyzed (FDecl) then\n-               Insert_Before_And_Analyze (N, FDecl);\n-            end if;\n+            --  The declaration has been analyzed when created, and placed\n+            --  after type declaration. Insert body itself after freeze node.\n \n             Insert_After_And_Analyze (N, FBody);\n \n+            --  within a generic unit, prevent a double analysis of the body\n+            --  which will not be marked analyzed yet. This will happen when\n+            --  the freeze node is created during the pre-analysis of an\n+            --  expression function.\n+\n+            if Inside_A_Generic then\n+               Set_Analyzed (FBody);\n+            end if;\n+\n             --  Static predicate functions are always side-effect free, and\n             --  in most cases dynamic predicate functions are as well. Mark\n             --  them as such whenever possible, so redundant predicate checks"}, {"sha": "3fff97300b1318156f41d247cbaa9f1463a99f2d", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8218cfde96a4e9df2ce00fabc3d616d6f3cfc83c/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8218cfde96a4e9df2ce00fabc3d616d6f3cfc83c/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=8218cfde96a4e9df2ce00fabc3d616d6f3cfc83c", "patch": "@@ -1,3 +1,7 @@\n+2018-05-25  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* gnat.dg/static_pred1.adb, gnat.dg/static_pred1.ads: New testcase.\n+\n 2018-05-25  Richard Sandiford  <richard.sandiford@linaro.org>\n \n \t* lib/target-supports.exp"}, {"sha": "16bbde2c65be3ba937b51083f6821b658b35ffab", "filename": "gcc/testsuite/gnat.dg/static_pred1.adb", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8218cfde96a4e9df2ce00fabc3d616d6f3cfc83c/gcc%2Ftestsuite%2Fgnat.dg%2Fstatic_pred1.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8218cfde96a4e9df2ce00fabc3d616d6f3cfc83c/gcc%2Ftestsuite%2Fgnat.dg%2Fstatic_pred1.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Fstatic_pred1.adb?ref=8218cfde96a4e9df2ce00fabc3d616d6f3cfc83c", "patch": "@@ -0,0 +1,21 @@\n+--  { dg-do compile }\n+\n+package body Static_Pred1 is\n+\n+   type Enum_Type is (A, B, C);\n+\n+   subtype Enum_Subrange is Enum_Type with Static_Predicate =>\n+     Enum_Subrange in A | C;\n+\n+   function \"not\" (Kind : Enum_Subrange) return Enum_Subrange is\n+     (case Kind is\n+      when A => C,\n+      when C => A);\n+\n+   procedure Dummy (Value : T) is\n+      IK : Enum_Subrange := not A;\n+   begin\n+      null;\n+   end Dummy;\n+\n+end Static_Pred1;"}, {"sha": "4364fc866c55375e242d69e45b19a531c8f89489", "filename": "gcc/testsuite/gnat.dg/static_pred1.ads", "status": "added", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8218cfde96a4e9df2ce00fabc3d616d6f3cfc83c/gcc%2Ftestsuite%2Fgnat.dg%2Fstatic_pred1.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8218cfde96a4e9df2ce00fabc3d616d6f3cfc83c/gcc%2Ftestsuite%2Fgnat.dg%2Fstatic_pred1.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Fstatic_pred1.ads?ref=8218cfde96a4e9df2ce00fabc3d616d6f3cfc83c", "patch": "@@ -0,0 +1,5 @@\n+generic\n+   type T is private;\n+package Static_Pred1 is\n+   procedure Dummy (Value : T);\n+end Static_Pred1;"}]}