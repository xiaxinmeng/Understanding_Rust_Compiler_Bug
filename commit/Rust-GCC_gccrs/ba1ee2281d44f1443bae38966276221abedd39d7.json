{"sha": "ba1ee2281d44f1443bae38966276221abedd39d7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmExZWUyMjgxZDQ0ZjE0NDNiYWUzODk2NjI3NjIyMWFiZWRkMzlkNw==", "commit": {"author": {"name": "Richard Guenther", "email": "rguenther@suse.de", "date": "2010-01-03T15:23:29Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2010-01-03T15:23:29Z"}, "message": "re PR rtl-optimization/42589 (bswap optimization does not work for 32bit (but for 64bit) on 64bit registers)\n\n2010-01-03  Richard Guenther  <rguenther@suse.de>\n\n\tPR tree-optimization/42589\n\t* tree-ssa-math-opts.c (execute_optimize_bswap): Allow\n\tdouble-word expansion of bswap32.\n\n\t* gcc.target/i386/pr42589.c: New testcase.\n\nFrom-SVN: r155588", "tree": {"sha": "5f0ecd392be5832e39047b93c683ffeb2d711b3b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5f0ecd392be5832e39047b93c683ffeb2d711b3b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ba1ee2281d44f1443bae38966276221abedd39d7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ba1ee2281d44f1443bae38966276221abedd39d7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ba1ee2281d44f1443bae38966276221abedd39d7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ba1ee2281d44f1443bae38966276221abedd39d7/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "5004040e8df391914c26eb02c3514578dded2c66", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5004040e8df391914c26eb02c3514578dded2c66", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5004040e8df391914c26eb02c3514578dded2c66"}], "stats": {"total": 33, "additions": 31, "deletions": 2}, "files": [{"sha": "cb0ecfa8fea144637ae7a92a8ad8edfaec28b7e1", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ba1ee2281d44f1443bae38966276221abedd39d7/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ba1ee2281d44f1443bae38966276221abedd39d7/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=ba1ee2281d44f1443bae38966276221abedd39d7", "patch": "@@ -1,3 +1,9 @@\n+2010-01-03  Richard Guenther  <rguenther@suse.de>\n+\n+\tPR tree-optimization/42589\n+\t* tree-ssa-math-opts.c (execute_optimize_bswap): Allow\n+\tdouble-word expansion of bswap32.\n+\n 2010-01-03  Steven Bosscher  <steven@gcc.gnu.org>\n \n \t* postreload-gcse.c (insert_expr_in_table): Replace BLOCK_NUM"}, {"sha": "bbf96380f706c09cb9cb8d245dd3f1de1ffd8cba", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ba1ee2281d44f1443bae38966276221abedd39d7/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ba1ee2281d44f1443bae38966276221abedd39d7/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=ba1ee2281d44f1443bae38966276221abedd39d7", "patch": "@@ -1,3 +1,8 @@\n+2010-01-03  Richard Guenther  <rguenther@suse.de>\n+\n+\tPR tree-optimization/42589\n+\t* gcc.target/i386/pr42589.c: New testcase.\n+\n 2010-01-03  Richard Guenther  <rguenther@suse.de>\n \n \tPR tree-optimization/42438"}, {"sha": "04e419a2a838af1427d1880cb83eb0bae79123a3", "filename": "gcc/testsuite/gcc.target/i386/pr42589.c", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ba1ee2281d44f1443bae38966276221abedd39d7/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr42589.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ba1ee2281d44f1443bae38966276221abedd39d7/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr42589.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr42589.c?ref=ba1ee2281d44f1443bae38966276221abedd39d7", "patch": "@@ -0,0 +1,17 @@\n+/* { dg-do compile } */\n+/* { dg-require-effective-target ilp32 } */\n+/* { dg-options \"-O2 -march=i486\" } */\n+\n+void\n+foo (unsigned long long *p)\n+{\n+  unsigned long long tmp;\n+  tmp = *p;\n+  tmp = (tmp >> 32) | (tmp << 32);\n+  tmp = (((tmp & 0xff00ff00ff00ff00ULL) >> 8)\n+\t | ((tmp & 71777214294589695ULL) << 8));\n+  *p = (((tmp & 0xffff0000ffff0000ULL) >> 16)\n+\t| ((tmp & 281470681808895ULL) << 16));\n+}\n+\n+/* { dg-final { scan-assembler-times \"bswap\" 2 } } */"}, {"sha": "c46a57fa04829e7140bf03b62f2240d7baf76772", "filename": "gcc/tree-ssa-math-opts.c", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ba1ee2281d44f1443bae38966276221abedd39d7/gcc%2Ftree-ssa-math-opts.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ba1ee2281d44f1443bae38966276221abedd39d7/gcc%2Ftree-ssa-math-opts.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-math-opts.c?ref=ba1ee2281d44f1443bae38966276221abedd39d7", "patch": "@@ -1111,8 +1111,9 @@ execute_optimize_bswap (void)\n \t       && optab_handler (bswap_optab, SImode)->insn_code !=\n \t       CODE_FOR_nothing);\n   bswap64_p = (built_in_decls[BUILT_IN_BSWAP64]\n-\t       && optab_handler (bswap_optab, DImode)->insn_code !=\n-\t       CODE_FOR_nothing);\n+\t       && (optab_handler (bswap_optab, DImode)->insn_code !=\n+\t\t   CODE_FOR_nothing\n+\t\t   || (bswap32_p && word_mode == SImode)));\n \n   if (!bswap32_p && !bswap64_p)\n     return 0;"}]}