{"sha": "1f8c015bb4a994ef88e1b1b946bc3c0cc2102ef8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWY4YzAxNWJiNGE5OTRlZjg4ZTFiMWI5NDZiYzNjMGNjMjEwMmVmOA==", "commit": {"author": {"name": "Matthew Wahab", "email": "matthew.wahab@arm.com", "date": "2015-06-29T13:50:42Z"}, "committer": {"name": "Matthew Wahab", "email": "mwahab@gcc.gnu.org", "date": "2015-06-29T13:50:42Z"}, "message": "invoke.texi (Aarch64 Options, -march): Split out arch and feature description...\n\n2015-06-29  Matthew Wahab  <matthew.wahab@arm.com>\n\n\t* doc/invoke.texi (Aarch64 Options, -march): Split out arch and\n\tfeature description, split out the native option, add a link to\n\tthe feature documentation, rearrange and slightly rewrite text.\n\t(Aarch64 options, -mcpu): Likewise.\n\t(Aarch64 options, Feature Modifiers): Add an anchor.  Mention\n\t+rdma implies Adv. SIMD.\n\nFrom-SVN: r225118", "tree": {"sha": "69d868b33dda1a2705bb2f57a26298cf7e358a39", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/69d868b33dda1a2705bb2f57a26298cf7e358a39"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1f8c015bb4a994ef88e1b1b946bc3c0cc2102ef8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1f8c015bb4a994ef88e1b1b946bc3c0cc2102ef8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1f8c015bb4a994ef88e1b1b946bc3c0cc2102ef8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1f8c015bb4a994ef88e1b1b946bc3c0cc2102ef8/comments", "author": null, "committer": null, "parents": [{"sha": "b155cfd9288996f3a1044fb2463c7ac7e757a0df", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b155cfd9288996f3a1044fb2463c7ac7e757a0df", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b155cfd9288996f3a1044fb2463c7ac7e757a0df"}], "stats": {"total": 86, "additions": 49, "deletions": 37}, "files": [{"sha": "b773b4bd30aab3fc818b9803e83f58592451c203", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1f8c015bb4a994ef88e1b1b946bc3c0cc2102ef8/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1f8c015bb4a994ef88e1b1b946bc3c0cc2102ef8/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=1f8c015bb4a994ef88e1b1b946bc3c0cc2102ef8", "patch": "@@ -1,3 +1,12 @@\n+2015-06-29  Matthew Wahab  <matthew.wahab@arm.com>\n+\n+\t* doc/invoke.texi (Aarch64 Options, -march): Split out arch and\n+\tfeature description, split out the native option, add a link to\n+\tthe feature documentation, rearrange and slightly rewrite text.\n+\t(Aarch64 options, -mcpu): Likewise.\n+\t(Aarch64 options, Feature Modifiers): Add an anchor.  Mention\n+\t+rdma implies Adv. SIMD.\n+\n 2015-06-29  Marek Polacek  <polacek@redhat.com>\n \n \tPR c/66322"}, {"sha": "02b1493d9d4e399530a4c456ad6646ce907f1324", "filename": "gcc/doc/invoke.texi", "status": "modified", "additions": 40, "deletions": 37, "changes": 77, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1f8c015bb4a994ef88e1b1b946bc3c0cc2102ef8/gcc%2Fdoc%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1f8c015bb4a994ef88e1b1b946bc3c0cc2102ef8/gcc%2Fdoc%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finvoke.texi?ref=1f8c015bb4a994ef88e1b1b946bc3c0cc2102ef8", "patch": "@@ -12430,24 +12430,26 @@ corresponding flag to the linker.\n @opindex march\n Specify the name of the target architecture, optionally suffixed by one or\n more feature modifiers.  This option has the form\n-@option{-march=@var{arch}@r{@{}+@r{[}no@r{]}@var{feature}@r{@}*}}, where the\n-permissible values for @var{arch} are @samp{armv8-a} or @samp{armv8.1-a}.\n-The permissible values for @var{feature} are documented in the sub-section\n-below.  Additionally on native AArch64 GNU/Linux systems the value\n+@option{-march=@var{arch}@r{@{}+@r{[}no@r{]}@var{feature}@r{@}*}}.\n+\n+The permissible values for @var{arch} are @samp{armv8-a} or\n+@samp{armv8.1-a}.\n+\n+For the permissible values for @var{feature}, see the sub-section on\n+@ref{aarch64-feature-modifiers,,@option{-march} and @option{-mcpu}\n+Feature Modifiers}.  Where conflicting feature modifiers are\n+specified, the right-most feature is used.\n+\n+Additionally on native AArch64 GNU/Linux systems the value\n @samp{native} is available.  This option causes the compiler to pick the\n architecture of the host system.  If the compiler is unable to recognize the\n architecture of the host system this option has no effect.\n \n-Where conflicting feature modifiers are specified, the right-most feature is\n-used.\n-\n-GCC uses this name to determine what kind of instructions it can emit when\n-generating assembly code.\n-\n-Where @option{-march} is specified without either of @option{-mtune}\n-or @option{-mcpu} also being specified, the code is tuned to perform\n-well across a range of target processors implementing the target\n-architecture.\n+GCC uses @var{name} to determine what kind of instructions it can emit\n+when generating assembly code.  If @option{-march} is specified\n+without either of @option{-mtune} or @option{-mcpu} also being\n+specified, the code is tuned to perform well across a range of target\n+processors implementing the target architecture.\n \n @item -mtune=@var{name}\n @opindex mtune\n@@ -12460,12 +12462,11 @@ Additionally, this option can specify that GCC should tune the performance\n of the code for a big.LITTLE system.  Permissible values for this\n option are: @samp{cortex-a57.cortex-a53}, @samp{cortex-a72.cortex-a53}.\n \n-Additionally on native AArch64 GNU/Linux systems the value @samp{native}\n-is available.\n-This option causes the compiler to pick the architecture of and tune the\n-performance of the code for the processor of the host system.\n-If the compiler is unable to recognize the processor of the host system\n-this option has no effect.\n+Additionally on native AArch64 GNU/Linux systems the value\n+@samp{native} is available.  This option causes the compiler to pick\n+the architecture of and tune the performance of the code for the\n+processor of the host system.  If the compiler is unable to recognize\n+the processor of the host system this option has no effect.\n \n Where none of @option{-mtune=}, @option{-mcpu=} or @option{-march=}\n are specified, the code is tuned to perform well across a range\n@@ -12475,23 +12476,23 @@ This option cannot be suffixed by feature modifiers.\n \n @item -mcpu=@var{name}\n @opindex mcpu\n-Specify the name of the target processor, optionally suffixed by one or more\n-feature modifiers.  This option has the form\n-@option{-mcpu=@var{cpu}@r{@{}+@r{[}no@r{]}@var{feature}@r{@}*}}, where the\n-permissible values for @var{cpu} are the same as those available for\n-@option{-mtune}.  Additionally on native AArch64 GNU/Linux systems the\n-value @samp{native} is available.\n-This option causes the compiler to tune the performance of the code for the\n-processor of the host system.  If the compiler is unable to recognize the\n-processor of the host system this option has no effect.\n-\n-The permissible values for @var{feature} are documented in the sub-section\n-below.\n-\n-Where conflicting feature modifiers are specified, the right-most feature is\n-used.\n+Specify the name of the target processor, optionally suffixed by one\n+or more feature modifiers.  This option has the form\n+@option{-mcpu=@var{cpu}@r{@{}+@r{[}no@r{]}@var{feature}@r{@}*}}, where\n+the permissible values for @var{cpu} are the same as those available\n+for @option{-mtune}.  The permissible values for @var{feature} are\n+documented in the sub-section on\n+@ref{aarch64-feature-modifiers,,@option{-march} and @option{-mcpu}\n+Feature Modifiers}.  Where conflicting feature modifiers are\n+specified, the right-most feature is used.\n+\n+Additionally on native AArch64 GNU/Linux systems the value\n+@samp{native} is available.  This option causes the compiler to tune\n+the performance of the code for the processor of the host system.  If\n+the compiler is unable to recognize the processor of the host system\n+this option has no effect.\n \n-GCC uses this name to determine what kind of instructions it can emit when\n+GCC uses @var{name} to determine what kind of instructions it can emit when\n generating assembly code (as if by @option{-march}) and to determine\n the target processor for which to tune for performance (as if\n by @option{-mtune}).  Where this option is used in conjunction\n@@ -12500,6 +12501,7 @@ over the appropriate part of this option.\n @end table\n \n @subsubsection @option{-march} and @option{-mcpu} Feature Modifiers\n+@anchor{aarch64-feature-modifiers}\n @cindex @option{-march} feature modifiers\n @cindex @option{-mcpu} feature modifiers\n Feature modifiers used with @option{-march} and @option{-mcpu} can be any of\n@@ -12525,7 +12527,8 @@ Enable Privileged Access Never support.\n @item lor\n Enable Limited Ordering Regions support.\n @item rdma\n-Enable ARMv8.1 Advanced SIMD instructions.\n+Enable ARMv8.1 Advanced SIMD instructions.  This implies Advanced SIMD\n+is enabled.\n \n @item -moverride=@var{string}\n @opindex master"}]}