{"sha": "859f6cb4c614aa98677de15733634ea58d03ed87", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODU5ZjZjYjRjNjE0YWE5ODY3N2RlMTU3MzM2MzRlYTU4ZDAzZWQ4Nw==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2011-07-08T17:37:29Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2011-07-08T17:37:29Z"}, "message": "typeck.c (cp_apply_type_quals_to_decl): Don't check COMPLETE_TYPE_P either.\n\n\t* typeck.c (cp_apply_type_quals_to_decl): Don't check\n\tCOMPLETE_TYPE_P either.\n\nFrom-SVN: r176052", "tree": {"sha": "4d9c74305b9edaad09487de198586270da827df3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4d9c74305b9edaad09487de198586270da827df3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/859f6cb4c614aa98677de15733634ea58d03ed87", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/859f6cb4c614aa98677de15733634ea58d03ed87", "html_url": "https://github.com/Rust-GCC/gccrs/commit/859f6cb4c614aa98677de15733634ea58d03ed87", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/859f6cb4c614aa98677de15733634ea58d03ed87/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "0094f21b6186ed0ba4d580889164fb7ffd15b51f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0094f21b6186ed0ba4d580889164fb7ffd15b51f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0094f21b6186ed0ba4d580889164fb7ffd15b51f"}], "stats": {"total": 13, "additions": 7, "deletions": 6}, "files": [{"sha": "092e5c01043e668b23589ccc750996bc16f88a5e", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/859f6cb4c614aa98677de15733634ea58d03ed87/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/859f6cb4c614aa98677de15733634ea58d03ed87/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=859f6cb4c614aa98677de15733634ea58d03ed87", "patch": "@@ -1,5 +1,8 @@\n 2011-07-08  Jason Merrill  <jason@redhat.com>\n \n+\t* typeck.c (cp_apply_type_quals_to_decl): Don't check\n+\tCOMPLETE_TYPE_P either.\n+\n \tPR c++/49673\n \t* typeck.c (cp_apply_type_quals_to_decl): Don't check\n \tTYPE_NEEDS_CONSTRUCTING."}, {"sha": "5febff5cba91f74299d8ad6212727134c9387a89", "filename": "gcc/cp/typeck.c", "status": "modified", "additions": 4, "deletions": 6, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/859f6cb4c614aa98677de15733634ea58d03ed87/gcc%2Fcp%2Ftypeck.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/859f6cb4c614aa98677de15733634ea58d03ed87/gcc%2Fcp%2Ftypeck.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Ftypeck.c?ref=859f6cb4c614aa98677de15733634ea58d03ed87", "patch": "@@ -8130,12 +8130,10 @@ cp_apply_type_quals_to_decl (int type_quals, tree decl)\n   /* We used to check TYPE_NEEDS_CONSTRUCTING here, but now a constexpr\n      constructor can produce constant init, so rely on cp_finish_decl to\n      clear TREE_READONLY if the variable has non-constant init.  */\n-  if (/* If the type isn't complete, we don't know yet if it will need\n-\t constructing.  */\n-      !COMPLETE_TYPE_P (type)\n-      /* If the type has a mutable component, that component might be\n-\t modified.  */\n-      || TYPE_HAS_MUTABLE_P (type))\n+\n+  /* If the type has a mutable component, that component might be\n+     modified.  */\n+  if (TYPE_HAS_MUTABLE_P (type))\n     type_quals &= ~TYPE_QUAL_CONST;\n \n   c_apply_type_quals_to_decl (type_quals, decl);"}]}