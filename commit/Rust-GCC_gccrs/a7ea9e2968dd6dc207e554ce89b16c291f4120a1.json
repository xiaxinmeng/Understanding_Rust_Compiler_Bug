{"sha": "a7ea9e2968dd6dc207e554ce89b16c291f4120a1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTdlYTllMjk2OGRkNmRjMjA3ZTU1NGNlODliMTZjMjkxZjQxMjBhMQ==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2008-07-19T19:22:51Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2008-07-19T19:22:51Z"}, "message": "re PR middle-end/36877 (-O0 -fopenmp -march=i386 atomics)\n\n\tPR middle-end/36877\n\t* omp-low.c (expand_omp_atomic_fetch_op): Make sure the\n\treturn value of the builtin is ignored.\n\n\t* gcc.dg/gomp/atomic-11.c: New test.\n\nFrom-SVN: r137989", "tree": {"sha": "ecfdf4122243551f09e7f5be9e301d91d6fb73d3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ecfdf4122243551f09e7f5be9e301d91d6fb73d3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a7ea9e2968dd6dc207e554ce89b16c291f4120a1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a7ea9e2968dd6dc207e554ce89b16c291f4120a1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a7ea9e2968dd6dc207e554ce89b16c291f4120a1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a7ea9e2968dd6dc207e554ce89b16c291f4120a1/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "5e2be41f37d39b91e27c4d129a5861cfe80809ec", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5e2be41f37d39b91e27c4d129a5861cfe80809ec", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5e2be41f37d39b91e27c4d129a5861cfe80809ec"}], "stats": {"total": 29, "additions": 29, "deletions": 0}, "files": [{"sha": "701b25f787e0e2d185c033080f50062d89f28d5b", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a7ea9e2968dd6dc207e554ce89b16c291f4120a1/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a7ea9e2968dd6dc207e554ce89b16c291f4120a1/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=a7ea9e2968dd6dc207e554ce89b16c291f4120a1", "patch": "@@ -1,3 +1,9 @@\n+2008-07-19  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR middle-end/36877\n+\t* omp-low.c (expand_omp_atomic_fetch_op): Make sure the\n+\treturn value of the builtin is ignored.\n+\n 2008-07-19  Olivier Hainque  <hainque@adacore.com>\n \n \t* doc/tm.texi (MALLOC_ABI_ALIGNMENT): New macro. Alignment, in"}, {"sha": "8ee717a36a1e249cb64bb6186fcdab6005614d5f", "filename": "gcc/omp-low.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a7ea9e2968dd6dc207e554ce89b16c291f4120a1/gcc%2Fomp-low.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a7ea9e2968dd6dc207e554ce89b16c291f4120a1/gcc%2Fomp-low.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fomp-low.c?ref=a7ea9e2968dd6dc207e554ce89b16c291f4120a1", "patch": "@@ -4742,6 +4742,7 @@ expand_omp_atomic_fetch_op (basic_block load_bb,\n   bsi = bsi_last (load_bb);\n   gcc_assert (TREE_CODE (bsi_stmt (bsi)) == OMP_ATOMIC_LOAD);\n   call = build_call_expr (decl, 2, addr, fold_convert (itype, rhs));\n+  call = fold_convert (void_type_node, call);\n   force_gimple_operand_bsi (&bsi, call, true, NULL_TREE, true, BSI_SAME_STMT);\n   bsi_remove (&bsi, true);\n "}, {"sha": "1114de11d77aaec6e3c082d58957a22a94580fc9", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a7ea9e2968dd6dc207e554ce89b16c291f4120a1/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a7ea9e2968dd6dc207e554ce89b16c291f4120a1/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=a7ea9e2968dd6dc207e554ce89b16c291f4120a1", "patch": "@@ -1,3 +1,8 @@\n+2008-07-19  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR middle-end/36877\n+\t* gcc.dg/gomp/atomic-11.c: New test.\n+\n 2008-07-19  Tobias Burnus  <burnus@net-b.de>\n \n \tPR fortran/36795"}, {"sha": "397972b3cf21d82cc4db8413f90aa08c37ebe667", "filename": "gcc/testsuite/gcc.dg/gomp/atomic-11.c", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a7ea9e2968dd6dc207e554ce89b16c291f4120a1/gcc%2Ftestsuite%2Fgcc.dg%2Fgomp%2Fatomic-11.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a7ea9e2968dd6dc207e554ce89b16c291f4120a1/gcc%2Ftestsuite%2Fgcc.dg%2Fgomp%2Fatomic-11.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fgomp%2Fatomic-11.c?ref=a7ea9e2968dd6dc207e554ce89b16c291f4120a1", "patch": "@@ -0,0 +1,17 @@\n+/* PR middle-end/36877 */\n+/* { dg-do compile } */\n+/* { dg-options \"-fopenmp\" } */\n+/* { dg-options \"-fopenmp -march=i386\" { target { { i?86-*-* x86_64-*-* } && ilp32 } } } */\n+\n+int i;\n+float f;\n+\n+void foo (void)\n+{\n+#pragma omp atomic\n+  i++;\n+#pragma omp atomic\n+  f += 1.0;\n+}\n+\n+/* { dg-final { scan-assembler-not \"__sync_(fetch|add|bool|val)\" { target i?86-*-* x86_64-*-* powerpc*-*-* ia64-*-* s390*-*-* sparc*-*-* } } } */"}]}