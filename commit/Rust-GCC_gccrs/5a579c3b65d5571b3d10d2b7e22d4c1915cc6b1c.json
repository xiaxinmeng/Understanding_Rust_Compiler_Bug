{"sha": "5a579c3b65d5571b3d10d2b7e22d4c1915cc6b1c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWE1NzljM2I2NWQ1NTcxYjNkMTBkMmI3ZTIyZDRjMTkxNWNjNmIxYw==", "commit": {"author": {"name": "Leif Ekblad", "email": "leif@rdos.net", "date": "2013-01-28T20:42:55Z"}, "committer": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2013-01-28T20:42:55Z"}, "message": "config.gcc (i[34567]86-*-rdos*, [...]): New targets.\n\n\t* config.gcc (i[34567]86-*-rdos*, x86_64-*-rdos*): New targets.\n\t* config/i386/i386.h (TARGET_RDOS): New macro.\n\t(DEFAULT_LARGE_SECTION_THRESHOLD): New macro.\n\t* config/i386/i386.c (ix86_option_override_internal): For 64bit\n\tTARGET_RDOS, set ix86_cmodel to CM_MEDIUM_PIC and flag_pic to 1.\n\t* config/i386/i386.opt (mlarge-data-threshold): Initialize to\n\tDEFAULT_LARGE_SECTION_THRESHOLD.\n\t* config/i386/i386.md (R14_REG, R15_REG): New constants.\n\t* config/i386/rdos.h: New file.\n\t* config/i386/rdos64.h: New file.\n\nFrom-SVN: r195516", "tree": {"sha": "c3f559b64cf44eaeefcf685c815fe50c2af35c64", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c3f559b64cf44eaeefcf685c815fe50c2af35c64"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5a579c3b65d5571b3d10d2b7e22d4c1915cc6b1c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5a579c3b65d5571b3d10d2b7e22d4c1915cc6b1c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5a579c3b65d5571b3d10d2b7e22d4c1915cc6b1c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5a579c3b65d5571b3d10d2b7e22d4c1915cc6b1c/comments", "author": {"login": "rdos314", "id": 5267589, "node_id": "MDQ6VXNlcjUyNjc1ODk=", "avatar_url": "https://avatars.githubusercontent.com/u/5267589?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rdos314", "html_url": "https://github.com/rdos314", "followers_url": "https://api.github.com/users/rdos314/followers", "following_url": "https://api.github.com/users/rdos314/following{/other_user}", "gists_url": "https://api.github.com/users/rdos314/gists{/gist_id}", "starred_url": "https://api.github.com/users/rdos314/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rdos314/subscriptions", "organizations_url": "https://api.github.com/users/rdos314/orgs", "repos_url": "https://api.github.com/users/rdos314/repos", "events_url": "https://api.github.com/users/rdos314/events{/privacy}", "received_events_url": "https://api.github.com/users/rdos314/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "51e44392b3084a2bb00aa185f42f538a61c7befe", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/51e44392b3084a2bb00aa185f42f538a61c7befe", "html_url": "https://github.com/Rust-GCC/gccrs/commit/51e44392b3084a2bb00aa185f42f538a61c7befe"}], "stats": {"total": 95, "additions": 93, "deletions": 2}, "files": [{"sha": "2b2e540819e16789870a486f52260d609c4113a9", "filename": "gcc/ChangeLog", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5a579c3b65d5571b3d10d2b7e22d4c1915cc6b1c/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5a579c3b65d5571b3d10d2b7e22d4c1915cc6b1c/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=5a579c3b65d5571b3d10d2b7e22d4c1915cc6b1c", "patch": "@@ -1,3 +1,16 @@\n+2013-01-28  Leif Ekblad  <leif@rdos.net>\n+\n+\t* config.gcc (i[34567]86-*-rdos*, x86_64-*-rdos*): New targets.\n+\t* config/i386/i386.h (TARGET_RDOS): New macro.\n+\t(DEFAULT_LARGE_SECTION_THRESHOLD): New macro.\n+\t* config/i386/i386.c (ix86_option_override_internal): For 64bit\n+\tTARGET_RDOS, set ix86_cmodel to CM_MEDIUM_PIC and flag_pic to 1.\n+\t* config/i386/i386.opt (mlarge-data-threshold): Initialize to\n+\tDEFAULT_LARGE_SECTION_THRESHOLD.\n+\t* config/i386/i386.md (R14_REG, R15_REG): New constants.\n+\t* config/i386/rdos.h: New file.\n+\t* config/i386/rdos64.h: New file.\n+\n 2013-01-28  Bernd Schmidt  <bernds@codesourcery.com>\n \n \tPR other/54814"}, {"sha": "ca76fc8539d8fe02d8da9f356492bf86b16572f9", "filename": "gcc/config.gcc", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5a579c3b65d5571b3d10d2b7e22d4c1915cc6b1c/gcc%2Fconfig.gcc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5a579c3b65d5571b3d10d2b7e22d4c1915cc6b1c/gcc%2Fconfig.gcc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig.gcc?ref=5a579c3b65d5571b3d10d2b7e22d4c1915cc6b1c", "patch": "@@ -738,6 +738,9 @@ case ${target} in\n   use_gcc_stdint=wrap\n   tm_defines=\"$tm_defines DEFAULT_LIBC=LIBC_UCLIBC SINGLE_LIBC\"\n   ;;\n+*-*-rdos*)\n+  use_gcc_stdint=wrap\n+  ;;\n *-*-solaris2*)\n   # i?86-*-solaris2* needs to insert headers between cpu default and\n   # Solaris 2 specific ones.\n@@ -1204,6 +1207,13 @@ i[34567]86-*-elf*)\n x86_64-*-elf*)\n \ttm_file=\"${tm_file} i386/unix.h i386/att.h dbxelf.h elfos.h newlib-stdint.h i386/i386elf.h i386/x86-64.h\"\n \t;;\n+i[34567]86-*-rdos*)\n+    tm_file=\"${tm_file} i386/unix.h i386/att.h dbxelf.h elfos.h newlib-stdint.h i386/i386elf.h i386/rdos.h\"\n+    ;;\n+x86_64-*-rdos*)\n+    tm_file=\"${tm_file} i386/unix.h i386/att.h dbxelf.h elfos.h newlib-stdint.h i386/i386elf.h i386/x86-64.h i386/rdos.h i386/rdos64.h\"\n+    tmake_file=\"i386/t-i386elf t-svr4\"\n+    ;;\n i[34567]86-*-freebsd*)\n \ttm_file=\"${tm_file} i386/unix.h i386/att.h dbxelf.h elfos.h ${fbsd_tm_file} i386/freebsd.h\"\n \t;;"}, {"sha": "19a495d15da860e1d33c27fd50fec132c7ac9f56", "filename": "gcc/config/i386/i386.c", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5a579c3b65d5571b3d10d2b7e22d4c1915cc6b1c/gcc%2Fconfig%2Fi386%2Fi386.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5a579c3b65d5571b3d10d2b7e22d4c1915cc6b1c/gcc%2Fconfig%2Fi386%2Fi386.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.c?ref=5a579c3b65d5571b3d10d2b7e22d4c1915cc6b1c", "patch": "@@ -3235,10 +3235,12 @@ ix86_option_override_internal (bool main_args_p)\n \t DLL, and is essentially just as efficient as direct addressing.  */\n       if (TARGET_64BIT && DEFAULT_ABI == MS_ABI)\n \tix86_cmodel = CM_SMALL_PIC, flag_pic = 1;\n+      else if (TARGET_64BIT && TARGET_RDOS)\n+\tix86_cmodel = CM_MEDIUM_PIC, flag_pic = 1;\n       else if (TARGET_64BIT)\n \tix86_cmodel = flag_pic ? CM_SMALL_PIC : CM_SMALL;\n       else\n-        ix86_cmodel = CM_32;\n+\tix86_cmodel = CM_32;\n     }\n   if (TARGET_MACHO && ix86_asm_dialect == ASM_INTEL)\n     {"}, {"sha": "a69862c549f4a56725c2ec5116a99883c32db0e7", "filename": "gcc/config/i386/i386.h", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5a579c3b65d5571b3d10d2b7e22d4c1915cc6b1c/gcc%2Fconfig%2Fi386%2Fi386.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5a579c3b65d5571b3d10d2b7e22d4c1915cc6b1c/gcc%2Fconfig%2Fi386%2Fi386.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.h?ref=5a579c3b65d5571b3d10d2b7e22d4c1915cc6b1c", "patch": "@@ -518,6 +518,9 @@ extern tree x86_mfence;\n #define MACHOPIC_INDIRECT 0\n #define MACHOPIC_PURE 0\n \n+/* For the RDOS  */\n+#define TARGET_RDOS 0\n+\n /* For the Windows 64-bit ABI.  */\n #define TARGET_64BIT_MS_ABI (TARGET_64BIT && ix86_cfun_abi () == MS_ABI)\n \n@@ -2081,6 +2084,10 @@ do {\t\t\t\t\t\t\t\t\t\\\n    asm (SECTION_OP \"\\n\\t\"\t\t\t\t\t\\\n \t\"call \" CRT_MKSTR(__USER_LABEL_PREFIX__) #FUNC \"\\n\"\t\\\n \tTEXT_SECTION_ASM_OP);\n+\n+/* Default threshold for putting data in large sections\n+   with x86-64 medium memory model */\n+#define DEFAULT_LARGE_SECTION_THRESHOLD 65536\n \f\n /* Which processor to tune code generation for.  */\n "}, {"sha": "24d1012d5ce02d9b967b87341bed1965301782ff", "filename": "gcc/config/i386/i386.md", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5a579c3b65d5571b3d10d2b7e22d4c1915cc6b1c/gcc%2Fconfig%2Fi386%2Fi386.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5a579c3b65d5571b3d10d2b7e22d4c1915cc6b1c/gcc%2Fconfig%2Fi386%2Fi386.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.md?ref=5a579c3b65d5571b3d10d2b7e22d4c1915cc6b1c", "patch": "@@ -300,6 +300,8 @@\n    (R11_REG\t\t\t40)\n    (R12_REG\t\t\t41)\n    (R13_REG\t\t\t42)\n+   (R14_REG\t\t\t43)\n+   (R15_REG\t\t\t44)\n    (XMM8_REG\t\t\t45)\n    (XMM9_REG\t\t\t46)\n    (XMM10_REG\t\t\t47)"}, {"sha": "084a248635344c59166442cc7531a13e60f13075", "filename": "gcc/config/i386/i386.opt", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5a579c3b65d5571b3d10d2b7e22d4c1915cc6b1c/gcc%2Fconfig%2Fi386%2Fi386.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5a579c3b65d5571b3d10d2b7e22d4c1915cc6b1c/gcc%2Fconfig%2Fi386%2Fi386.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.opt?ref=5a579c3b65d5571b3d10d2b7e22d4c1915cc6b1c", "patch": "@@ -140,7 +140,7 @@ Target RejectNegative Joined UInteger Var(ix86_branch_cost)\n Branches are this expensive (1-5, arbitrary units)\n \n mlarge-data-threshold=\n-Target RejectNegative Joined UInteger Var(ix86_section_threshold) Init(65536)\n+Target RejectNegative Joined UInteger Var(ix86_section_threshold) Init(DEFAULT_LARGE_SECTION_THRESHOLD)\n Data greater than given threshold will go into .ldata section in x86-64 medium model\n \n mcmodel="}, {"sha": "b67c1529037cc27420466e2cdc516a95e383bf9e", "filename": "gcc/config/i386/rdos.h", "status": "added", "additions": 33, "deletions": 0, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5a579c3b65d5571b3d10d2b7e22d4c1915cc6b1c/gcc%2Fconfig%2Fi386%2Frdos.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5a579c3b65d5571b3d10d2b7e22d4c1915cc6b1c/gcc%2Fconfig%2Fi386%2Frdos.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Frdos.h?ref=5a579c3b65d5571b3d10d2b7e22d4c1915cc6b1c", "patch": "@@ -0,0 +1,33 @@\n+/* Definitions for RDOS on i386.\n+   Copyright (C) 2013 Free Software Foundation, Inc.\n+\n+This file is part of GCC.\n+\n+GCC is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 3, or (at your option)\n+any later version.\n+\n+GCC is distributed in the hope that it will be useful,\n+but WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+GNU General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GCC; see the file COPYING3.  If not see\n+<http://www.gnu.org/licenses/>.  */\n+\n+/* RDOS uses .exe suffix */\n+#undef TARGET_EXECUTABLE_SUFFIX\n+#define TARGET_EXECUTABLE_SUFFIX \".exe\"\n+\n+#undef TARGET_RDOS\n+#define TARGET_RDOS 1\n+\n+#define TARGET_OS_CPP_BUILTINS()\t\t\\\n+  do\t\t\t\t\t\t\\\n+    {\t\t\t\t\t\t\\\n+      builtin_define (\"__RDOS__\");\t\t\\\n+      builtin_assert (\"system=rdos\");\t\t\\\n+    }\t\t\t\t\t\t\\\n+  while (0)"}, {"sha": "8522ad48c1868e713ae3ce5e66d41d82fb15191e", "filename": "gcc/config/i386/rdos64.h", "status": "added", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5a579c3b65d5571b3d10d2b7e22d4c1915cc6b1c/gcc%2Fconfig%2Fi386%2Frdos64.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5a579c3b65d5571b3d10d2b7e22d4c1915cc6b1c/gcc%2Fconfig%2Fi386%2Frdos64.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Frdos64.h?ref=5a579c3b65d5571b3d10d2b7e22d4c1915cc6b1c", "patch": "@@ -0,0 +1,24 @@\n+/* Definitions for RDOS on x86_64.\n+   Copyright (C) 2013 Free Software Foundation, Inc.\n+\n+This file is part of GCC.\n+\n+GCC is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 3, or (at your option)\n+any later version.\n+\n+GCC is distributed in the hope that it will be useful,\n+but WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+GNU General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GCC; see the file COPYING3.  If not see\n+<http://www.gnu.org/licenses/>.  */\n+\n+#undef REAL_PIC_OFFSET_TABLE_REGNUM\n+#define REAL_PIC_OFFSET_TABLE_REGNUM  R15_REG\n+\n+#undef DEFAULT_LARGE_SECTION_THRESHOLD\n+#define DEFAULT_LARGE_SECTION_THRESHOLD 16"}]}