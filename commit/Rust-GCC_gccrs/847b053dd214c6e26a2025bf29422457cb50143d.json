{"sha": "847b053dd214c6e26a2025bf29422457cb50143d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODQ3YjA1M2RkMjE0YzZlMjZhMjAyNWJmMjk0MjI0NTdjYjUwMTQzZA==", "commit": {"author": {"name": "Paul Thomas", "email": "pault@gcc.gnu.org", "date": "2007-05-11T11:42:56Z"}, "committer": {"name": "Paul Thomas", "email": "pault@gcc.gnu.org", "date": "2007-05-11T11:42:56Z"}, "message": "re PR fortran/30878 (Rejects function f1; namelist /nml/ f1)\n\n2007-05-11 Paul Thomas <pault@gcc.gnu.org>\n\n\tPR fortran/30878\n\t* resolve.c (resolve_fl_namelist): It is not an error if the\n\tnamelist element is the result variable of the enclosing\n\tfunction.  Search for the symbol in current and all parent\n\tnamespaces for a potential conflict.\n\t* symbol.c (check_conflict): Remove the conflict between\n\t'in_namelist' and 'FL_PROCEDURE' because the symbol info\n\tis not available to exclude function result variables.\n\t* trans-io.c (nml_get_addr_expr): Use the fake result decl\n\tif the symbol is an implicit result variable.\n\n2007-05-11 Paul Thomas <pault@gcc.gnu.org>\n\n\tPR fortran/30878\n\t* gfortran.dg/namelist_29.f90: New test.\n\nFrom-SVN: r124615", "tree": {"sha": "eb28e776bc0b0ddb2c8cd9a8a1ef194444373808", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/eb28e776bc0b0ddb2c8cd9a8a1ef194444373808"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/847b053dd214c6e26a2025bf29422457cb50143d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/847b053dd214c6e26a2025bf29422457cb50143d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/847b053dd214c6e26a2025bf29422457cb50143d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/847b053dd214c6e26a2025bf29422457cb50143d/comments", "author": null, "committer": null, "parents": [{"sha": "35dd9a0e6d9491ee708c2d75ecf8d74aa40cbb39", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/35dd9a0e6d9491ee708c2d75ecf8d74aa40cbb39", "html_url": "https://github.com/Rust-GCC/gccrs/commit/35dd9a0e6d9491ee708c2d75ecf8d74aa40cbb39"}], "stats": {"total": 61, "additions": 56, "deletions": 5}, "files": [{"sha": "01eb9108e9565f7bde93efb2ffd473b90620fe6a", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/847b053dd214c6e26a2025bf29422457cb50143d/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/847b053dd214c6e26a2025bf29422457cb50143d/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=847b053dd214c6e26a2025bf29422457cb50143d", "patch": "@@ -1,3 +1,16 @@\n+2007-05-11 Paul Thomas <pault@gcc.gnu.org>\n+\n+\tPR fortran/30878\n+\t* resolve.c (resolve_fl_namelist): It is not an error if the\n+\tnamelist element is the result variable of the enclosing\n+\tfunction.  Search for the symbol in current and all parent\n+\tnamespaces for a potential conflict.\n+\t* symbol.c (check_conflict): Remove the conflict between\n+\t'in_namelist' and 'FL_PROCEDURE' because the symbol info\n+\tis not available to exclude function result variables.\n+\t* trans-io.c (nml_get_addr_expr): Use the fake result decl\n+\tif the symbol is an implicit result variable.\n+\n 2007-05-11  Paul Thomas  <pault@gcc.gnu.org>\n \n \tPR fortran/31474"}, {"sha": "dbb36d37b3595589219900311ad9b2cd0890a175", "filename": "gcc/fortran/resolve.c", "status": "modified", "additions": 10, "deletions": 5, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/847b053dd214c6e26a2025bf29422457cb50143d/gcc%2Ffortran%2Fresolve.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/847b053dd214c6e26a2025bf29422457cb50143d/gcc%2Ffortran%2Fresolve.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fresolve.c?ref=847b053dd214c6e26a2025bf29422457cb50143d", "patch": "@@ -6070,16 +6070,21 @@ resolve_fl_namelist (gfc_symbol *sym)\n     }\n \n   /* 14.1.2 A module or internal procedure represent local entities\n-     of the same type as a namelist member and so are not allowed.\n-     Note that this is sometimes caught by check_conflict so the\n-     same message has been used.  */\n+     of the same type as a namelist member and so are not allowed.  */\n   for (nl = sym->namelist; nl; nl = nl->next)\n     {\n       if (nl->sym->ts.kind != 0 && nl->sym->attr.flavor == FL_VARIABLE)\n \tcontinue;\n+\n+      if (nl->sym->attr.function && nl->sym == nl->sym->result)\n+\tif ((nl->sym == sym->ns->proc_name)\n+\t       ||\n+\t    (sym->ns->parent && nl->sym == sym->ns->parent->proc_name))\n+\t  continue;\n+\n       nlsym = NULL;\n-      if (sym->ns->parent && nl->sym && nl->sym->name)\n-\tgfc_find_symbol (nl->sym->name, sym->ns->parent, 0, &nlsym);\n+      if (nl->sym && nl->sym->name)\n+\tgfc_find_symbol (nl->sym->name, sym->ns, 1, &nlsym);\n       if (nlsym && nlsym->attr.flavor == FL_PROCEDURE)\n \t{\n \t  gfc_error (\"PROCEDURE attribute conflicts with NAMELIST \""}, {"sha": "2fef9d52d0b476063b69b322786fe05a9511aab5", "filename": "gcc/fortran/symbol.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/847b053dd214c6e26a2025bf29422457cb50143d/gcc%2Ffortran%2Fsymbol.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/847b053dd214c6e26a2025bf29422457cb50143d/gcc%2Ffortran%2Fsymbol.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fsymbol.c?ref=847b053dd214c6e26a2025bf29422457cb50143d", "patch": "@@ -477,6 +477,7 @@ check_conflict (symbol_attribute * attr, const char * name, locus * where)\n \n   if (attr->in_namelist\n       && attr->flavor != FL_VARIABLE\n+      && attr->flavor != FL_PROCEDURE\n       && attr->flavor != FL_UNKNOWN)\n     {\n "}, {"sha": "e543f4c7c3c0aaee0a19cc1b732cd4818d5fc00f", "filename": "gcc/fortran/trans-io.c", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/847b053dd214c6e26a2025bf29422457cb50143d/gcc%2Ffortran%2Ftrans-io.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/847b053dd214c6e26a2025bf29422457cb50143d/gcc%2Ffortran%2Ftrans-io.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ftrans-io.c?ref=847b053dd214c6e26a2025bf29422457cb50143d", "patch": "@@ -1297,6 +1297,13 @@ nml_get_addr_expr (gfc_symbol * sym, gfc_component * c,\n     {\n       sym->attr.referenced = 1;\n       decl = gfc_get_symbol_decl (sym);\n+\n+      /* If this is the enclosing function declaration, use\n+\t the fake result instead.  */\n+      if (decl == current_function_decl)\n+\tdecl = gfc_get_fake_result_decl (sym, 0);\n+      else if (decl == DECL_CONTEXT (current_function_decl))\n+\tdecl =  gfc_get_fake_result_decl (sym, 1);\n     }\n   else\n     decl = c->backend_decl;"}, {"sha": "0ca48c0db4e25772a7b10924a065568502f037ad", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/847b053dd214c6e26a2025bf29422457cb50143d/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/847b053dd214c6e26a2025bf29422457cb50143d/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=847b053dd214c6e26a2025bf29422457cb50143d", "patch": "@@ -1,3 +1,8 @@\n+2007-05-11 Paul Thomas <pault@gcc.gnu.org>\n+\n+\tPR fortran/30878\n+\t* gfortran.dg/namelist_29.f90: New test.\n+\n 2007-05-11  Paul Thomas  <pault@gcc.gnu.org>\n \n \tPR fortran/31474"}, {"sha": "55bff0c906fca5bebd4c672f42a9976ed91ed074", "filename": "gcc/testsuite/gfortran.dg/namelist_29.f90", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/847b053dd214c6e26a2025bf29422457cb50143d/gcc%2Ftestsuite%2Fgfortran.dg%2Fnamelist_29.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/847b053dd214c6e26a2025bf29422457cb50143d/gcc%2Ftestsuite%2Fgfortran.dg%2Fnamelist_29.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fnamelist_29.f90?ref=847b053dd214c6e26a2025bf29422457cb50143d", "patch": "@@ -0,0 +1,20 @@\n+! { dg-do run }\n+! Checks the fix for PR30878, in which the inclusion\n+! of an implicit function result variable in a namelist\n+! would cause an error.\n+!\n+! Contributed by Joost VandeVondele <jv244@cam.ac.uk>\n+!\n+  character(80) :: buffer\n+  if (f1 (buffer) .ne. 42) call abort ()\n+CONTAINS\n+   INTEGER FUNCTION F1 (buffer)\n+     NAMELIST /mynml/ F1\n+     integer :: check\n+     character(80) :: buffer\n+     F1 = 42\n+     write (buffer, nml = mynml)\n+     F1 = 0\n+     READ (buffer, nml = mynml)\n+   end function\n+END"}]}