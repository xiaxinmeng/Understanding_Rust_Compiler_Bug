{"sha": "8d6bd4a7917e33c6deabe809f98d31410c6848f9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGQ2YmQ0YTc5MTdlMzNjNmRlYWJlODA5Zjk4ZDMxNDEwYzY4NDhmOQ==", "commit": {"author": {"name": "Paolo Carlini", "email": "pcarlini@suse.de", "date": "2006-07-14T17:21:03Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2006-07-14T17:21:03Z"}, "message": "random (minstd_rand0, [...]): Use unsigned long as implementation-defined type.\n\n2006-07-14  Paolo Carlini  <pcarlini@suse.de>\n\n\t* include/tr1/random (minstd_rand0, minstd_rand, ranlux3, ranlux4):\n\tUse unsigned long as implementation-defined type.\n\nFrom-SVN: r115450", "tree": {"sha": "abb1f84da3669eaccb99f0fbf2ed4906f26f7bb4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/abb1f84da3669eaccb99f0fbf2ed4906f26f7bb4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8d6bd4a7917e33c6deabe809f98d31410c6848f9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8d6bd4a7917e33c6deabe809f98d31410c6848f9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8d6bd4a7917e33c6deabe809f98d31410c6848f9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8d6bd4a7917e33c6deabe809f98d31410c6848f9/comments", "author": null, "committer": null, "parents": [{"sha": "38b19a9247234e6cfb54766cf21bfdb6a429fbb4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/38b19a9247234e6cfb54766cf21bfdb6a429fbb4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/38b19a9247234e6cfb54766cf21bfdb6a429fbb4"}], "stats": {"total": 13, "additions": 9, "deletions": 4}, "files": [{"sha": "af5c7a9a24caf50a309c7b34e21c0dc51c1b4154", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d6bd4a7917e33c6deabe809f98d31410c6848f9/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d6bd4a7917e33c6deabe809f98d31410c6848f9/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=8d6bd4a7917e33c6deabe809f98d31410c6848f9", "patch": "@@ -1,3 +1,8 @@\n+2006-07-14  Paolo Carlini  <pcarlini@suse.de>\n+\n+\t* include/tr1/random (minstd_rand0, minstd_rand, ranlux3, ranlux4):\n+\tUse unsigned long as implementation-defined type.\n+\n 2006-07-14  Paolo Carlini  <pcarlini@suse.de>\n \n \t* include/tr1/random.tcc (struct _To_Unsigned_Type): Add."}, {"sha": "59e326dddcefc59b173e9eee315db2f10c630545", "filename": "libstdc++-v3/include/tr1/random", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d6bd4a7917e33c6deabe809f98d31410c6848f9/libstdc%2B%2B-v3%2Finclude%2Ftr1%2Frandom", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d6bd4a7917e33c6deabe809f98d31410c6848f9/libstdc%2B%2B-v3%2Finclude%2Ftr1%2Frandom", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Ftr1%2Frandom?ref=8d6bd4a7917e33c6deabe809f98d31410c6848f9", "patch": "@@ -443,12 +443,12 @@ _GLIBCXX_BEGIN_NAMESPACE(tr1)\n   /**\n    * The classic Minimum Standard rand0 of Lewis, Goodman, and Miller.\n    */\n-  typedef linear_congruential<unsigned int, 16807, 0, 2147483647> minstd_rand0;\n+  typedef linear_congruential<unsigned long, 16807, 0, 2147483647> minstd_rand0;\n \n   /**\n    * An alternative LCR (Lehmer Generator function) .\n    */\n-  typedef linear_congruential<unsigned int, 48271, 0, 2147483647> minstd_rand;\n+  typedef linear_congruential<unsigned long, 48271, 0, 2147483647> minstd_rand;\n \n \n   /**\n@@ -1056,7 +1056,7 @@ _GLIBCXX_BEGIN_NAMESPACE(tr1)\n    * James's luxury-level-3 integer adaptation of Luescher's generator.\n    */\n   typedef discard_block<\n-    subtract_with_carry<int, (1 << 24), 10, 24>,\n+    subtract_with_carry<unsigned long, (1 << 24), 10, 24>,\n       223,\n       24\n       > ranlux3;\n@@ -1065,7 +1065,7 @@ _GLIBCXX_BEGIN_NAMESPACE(tr1)\n    * James's luxury-level-4 integer adaptation of Luescher's generator.\n    */\n   typedef discard_block<\n-    subtract_with_carry<int, (1 << 24), 10, 24>,\n+    subtract_with_carry<unsigned long, (1 << 24), 10, 24>,\n       389,\n       24\n       > ranlux4;"}]}