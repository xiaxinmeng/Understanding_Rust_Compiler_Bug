{"sha": "17251338deebd6575ef2a9e2c99c3f976561dc93", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTcyNTEzMzhkZWViZDY1NzVlZjJhOWUyYzk5YzNmOTc2NTYxZGM5Mw==", "commit": {"author": {"name": "Manuel L\u00f3pez-Ib\u00e1\u00f1ez", "email": "manu@gcc.gnu.org", "date": "2010-02-20T21:32:06Z"}, "committer": {"name": "Manuel L\u00f3pez-Ib\u00e1\u00f1ez", "email": "manu@gcc.gnu.org", "date": "2010-02-20T21:32:06Z"}, "message": "re PR c++/35669 (NULL (__null) not considered different from 0 with C++)\n\n2010-02-20  Manuel L\u00f3pez-Ib\u00e1\u00f1ez  <manu@gcc.gnu.org>\n\n\tPR c++/35669\n\t* c.opt (Wconversion-null): New option.\n\t* doc/invoke.texi (Wconversion-null): Document.\n\ncp/\n\t* call.c (conversion_null_warnings): Replace -Wconversion with\n\t-Wconversion-null.\n\t* cvt.c (build_expr_type_conversion): Likewise.\n\ntestsuite/\n\t* g++.dg/warn/Wconversion2.C: Replace -Wconversion with\n\t-Wconversion-null.\n\t* g++.dg/warn/Wconversion-null.C: New test.\n\t* g++.old-deja/g++.other/null1.C: Move to...\n\t* g++.dg/warn/Wconversion-null-2.C: ... here. Remove -Wconversion.\n\nlibstdc++-v3/\t\n\t* testsuite/18_support/headers/cstddef/macros.cc: Add\n\t-Wno-conversion-null.\n\nFrom-SVN: r156928", "tree": {"sha": "80eb6bcb9ce16ee2cd887d93ee782806145b1486", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/80eb6bcb9ce16ee2cd887d93ee782806145b1486"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/17251338deebd6575ef2a9e2c99c3f976561dc93", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/17251338deebd6575ef2a9e2c99c3f976561dc93", "html_url": "https://github.com/Rust-GCC/gccrs/commit/17251338deebd6575ef2a9e2c99c3f976561dc93", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/17251338deebd6575ef2a9e2c99c3f976561dc93/comments", "author": null, "committer": null, "parents": [{"sha": "c387e0676eb6949dfc49681d6ac1b09c3e11d2ca", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c387e0676eb6949dfc49681d6ac1b09c3e11d2ca", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c387e0676eb6949dfc49681d6ac1b09c3e11d2ca"}], "stats": {"total": 119, "additions": 102, "deletions": 17}, "files": [{"sha": "61e595e82d4d5b49fe50507c47ddb1cfb0dd4d26", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/17251338deebd6575ef2a9e2c99c3f976561dc93/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/17251338deebd6575ef2a9e2c99c3f976561dc93/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=17251338deebd6575ef2a9e2c99c3f976561dc93", "patch": "@@ -1,3 +1,9 @@\n+2010-02-20  Manuel L\u00f3pez-Ib\u00e1\u00f1ez  <manu@gcc.gnu.org>\n+\n+\tPR c++/35669\n+\t* c.opt (Wconversion-null): New option.\n+\t* doc/invoke.texi (Wconversion-null): Document.\n+\n 2010-02-20  Manuel L\u00f3pez-Ib\u00e1\u00f1ez  <manu@gcc.gnu.org>\n \n \t* common.opt (Wlarger-than-): Add Undocumented."}, {"sha": "82dee8d4f7930e81ef6be059e7249ab763341781", "filename": "gcc/c.opt", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/17251338deebd6575ef2a9e2c99c3f976561dc93/gcc%2Fc.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/17251338deebd6575ef2a9e2c99c3f976561dc93/gcc%2Fc.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc.opt?ref=17251338deebd6575ef2a9e2c99c3f976561dc93", "patch": "@@ -171,6 +171,10 @@ Wconversion\n C ObjC C++ ObjC++ Var(warn_conversion) Warning\n Warn for implicit type conversions that may change a value\n \n+Wconversion-null\n+C++ ObjC++ Var(warn_conversion_null) Init(1) Warning\n+Warn for converting NULL from/to a non-pointer type\n+\n Wsign-conversion\n C ObjC C++ ObjC++ Var(warn_sign_conversion) Init(-1)\n Warn for implicit type conversions between signed and unsigned integers"}, {"sha": "d71e2b43c5739cd4c493ecc85614e99d95bb770d", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/17251338deebd6575ef2a9e2c99c3f976561dc93/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/17251338deebd6575ef2a9e2c99c3f976561dc93/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=17251338deebd6575ef2a9e2c99c3f976561dc93", "patch": "@@ -1,3 +1,10 @@\n+2010-02-20  Manuel L\u00f3pez-Ib\u00e1\u00f1ez  <manu@gcc.gnu.org>\n+\n+\tPR c++/35669\n+\t* call.c (conversion_null_warnings): Replace -Wconversion with\n+\t-Wconversion-null.\n+\t* cvt.c (build_expr_type_conversion): Likewise.\n+\n 2010-02-18  Jason Merrill  <jason@redhat.com>\n \n \tPR c++/42837"}, {"sha": "7a6e1041dce362f039a1834ee0a1d6da7c176754", "filename": "gcc/cp/call.c", "status": "modified", "additions": 8, "deletions": 6, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/17251338deebd6575ef2a9e2c99c3f976561dc93/gcc%2Fcp%2Fcall.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/17251338deebd6575ef2a9e2c99c3f976561dc93/gcc%2Fcp%2Fcall.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcall.c?ref=17251338deebd6575ef2a9e2c99c3f976561dc93", "patch": "@@ -4804,17 +4804,19 @@ conversion_null_warnings (tree totype, tree expr, tree fn, int argnum)\n   if (expr == null_node && TREE_CODE (t) != BOOLEAN_TYPE && ARITHMETIC_TYPE_P (t))\n     {\n       if (fn)\n-\twarning (OPT_Wconversion, \"passing NULL to non-pointer argument %P of %qD\",\n-\t\t argnum, fn);\n+\twarning_at (input_location, OPT_Wconversion_null,\n+\t\t    \"passing NULL to non-pointer argument %P of %qD\",\n+\t\t    argnum, fn);\n       else\n-\twarning (OPT_Wconversion, \"converting to non-pointer type %qT from NULL\", t);\n+\twarning_at (input_location, OPT_Wconversion_null,\n+\t\t    \"converting to non-pointer type %qT from NULL\", t);\n     }\n \n   /* Issue warnings if \"false\" is converted to a NULL pointer */\n   else if (expr == boolean_false_node && fn && POINTER_TYPE_P (t))\n-    warning (OPT_Wconversion,\n-\t     \"converting %<false%> to pointer type for argument %P of %qD\",\n-\t     argnum, fn);\n+    warning_at (input_location, OPT_Wconversion_null,\n+\t\t\"converting %<false%> to pointer type for argument %P of %qD\",\n+\t\targnum, fn);\n }\n \n /* Perform the conversions in CONVS on the expression EXPR.  FN and"}, {"sha": "6fcb1f0a19aa3b4eda4ade53374875246cdc17ff", "filename": "gcc/cp/cvt.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/17251338deebd6575ef2a9e2c99c3f976561dc93/gcc%2Fcp%2Fcvt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/17251338deebd6575ef2a9e2c99c3f976561dc93/gcc%2Fcp%2Fcvt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcvt.c?ref=17251338deebd6575ef2a9e2c99c3f976561dc93", "patch": "@@ -1141,7 +1141,8 @@ build_expr_type_conversion (int desires, tree expr, bool complain)\n   if (expr == null_node\n       && (desires & WANT_INT)\n       && !(desires & WANT_NULL))\n-    warning (OPT_Wconversion, \"converting NULL to non-pointer type\");\n+    warning_at (input_location, OPT_Wconversion_null,\n+\t\t\"converting NULL to non-pointer type\");\n \n   basetype = TREE_TYPE (expr);\n "}, {"sha": "a7abd01c940cacfd4439b3898c1768ced9604459", "filename": "gcc/doc/invoke.texi", "status": "modified", "additions": 12, "deletions": 7, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/17251338deebd6575ef2a9e2c99c3f976561dc93/gcc%2Fdoc%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/17251338deebd6575ef2a9e2c99c3f976561dc93/gcc%2Fdoc%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finvoke.texi?ref=17251338deebd6575ef2a9e2c99c3f976561dc93", "patch": "@@ -194,7 +194,7 @@ in the following sections.\n -fno-threadsafe-statics -fuse-cxa-atexit  -fno-weak  -nostdinc++ @gol\n -fno-default-inline  -fvisibility-inlines-hidden @gol\n -fvisibility-ms-compat @gol\n--Wabi  -Wctor-dtor-privacy @gol\n+-Wabi  -Wconversion-null  -Wctor-dtor-privacy @gol\n -Wnon-virtual-dtor  -Wreorder @gol\n -Weffc++  -Wstrict-null-sentinel @gol\n -Wno-non-template-friend  -Wold-style-cast @gol\n@@ -3837,14 +3837,19 @@ changed by the conversion like in @code{abs (2.0)}.  Warnings about\n conversions between signed and unsigned integers can be disabled by\n using @option{-Wno-sign-conversion}.\n \n-For C++, also warn for conversions between @code{NULL} and non-pointer\n-types; confusing overload resolution for user-defined conversions; and\n-conversions that will never use a type conversion operator:\n-conversions to @code{void}, the same type, a base class or a reference\n-to them. Warnings about conversions between signed and unsigned\n-integers are disabled by default in C++ unless\n+For C++, also warn for confusing overload resolution for user-defined\n+conversions; and conversions that will never use a type conversion\n+operator: conversions to @code{void}, the same type, a base class or a\n+reference to them. Warnings about conversions between signed and\n+unsigned integers are disabled by default in C++ unless\n @option{-Wsign-conversion} is explicitly enabled.\n \n+@item -Wno-conversion-null @r{(C++)}\n+@opindex Wconversion-null\n+@opindex Wno-conversion-null\n+Do not warn for conversions between @code{NULL} and non-pointer\n+types. @option{-Wconversion-null} is enabled by default.\n+\n @item -Wempty-body\n @opindex Wempty-body\n @opindex Wno-empty-body"}, {"sha": "5555898d80f87db9d364d8b57d3504b5c0fad6bb", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/17251338deebd6575ef2a9e2c99c3f976561dc93/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/17251338deebd6575ef2a9e2c99c3f976561dc93/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=17251338deebd6575ef2a9e2c99c3f976561dc93", "patch": "@@ -1,3 +1,12 @@\n+2010-02-20  Manuel L\u00f3pez-Ib\u00e1\u00f1ez  <manu@gcc.gnu.org>\n+\n+\tPR c++/35669\n+\t* g++.dg/warn/Wconversion2.C: Replace -Wconversion with\n+\t-Wconversion-null.\n+\t* g++.dg/warn/Wconversion-null.C: New test.\n+\t* g++.old-deja/g++.other/null1.C: Move to...\n+\t* g++.dg/warn/Wconversion-null-2.C: ... here. Remove -Wconversion.\n+\n 2010-02-20  Paul Thomas  <pault@gcc.gnu.org>\n \n \tPR fortran/36932"}, {"sha": "d5c230f17833840c2e4d3d772898a28f72b5004c", "filename": "gcc/testsuite/g++.dg/warn/Wconversion-null-2.C", "status": "renamed", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/17251338deebd6575ef2a9e2c99c3f976561dc93/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2FWconversion-null-2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/17251338deebd6575ef2a9e2c99c3f976561dc93/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2FWconversion-null-2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2FWconversion-null-2.C?ref=17251338deebd6575ef2a9e2c99c3f976561dc93", "patch": "@@ -1,5 +1,5 @@\n // { dg-do link  }\n-// { dg-options \"-Wconversion\" }\n+// { dg-options \"\" }\n \n #include <cstddef>\n ", "previous_filename": "gcc/testsuite/g++.old-deja/g++.other/null1.C"}, {"sha": "205f5d2ccb69aa22710b186a1876f351b7d0950e", "filename": "gcc/testsuite/g++.dg/warn/Wconversion-null.C", "status": "added", "additions": 45, "deletions": 0, "changes": 45, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/17251338deebd6575ef2a9e2c99c3f976561dc93/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2FWconversion-null.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/17251338deebd6575ef2a9e2c99c3f976561dc93/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2FWconversion-null.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2FWconversion-null.C?ref=17251338deebd6575ef2a9e2c99c3f976561dc93", "patch": "@@ -0,0 +1,45 @@\n+// { dg-do link  }\n+// { dg-options \"-Wconversion -Wno-conversion-null -Wno-pointer-arith\" }\n+\n+#include <cstddef>\n+\n+void g(int) {}\n+void g(long) {}\n+extern void g(void*);\n+\n+template <int I>\n+void h() {}\n+\n+void k(int) {}\n+\n+template <class T>\n+void l(T);\n+\n+template <>\n+void l(int) {}\n+\n+template <>\n+void l(long) {}\n+\n+int main()\n+{\n+  int i = NULL; //  converting NULL to non-pointer type\n+  float z = NULL; //  converting NULL to non-pointer type\n+  int a[2];\n+\n+  i != NULL; //  NULL used in arithmetic\n+  NULL != z; //  NULL used in arithmetic\n+  k != NULL; // No warning: decay conversion\n+  NULL != a; // Likewise.\n+  -NULL;     //  converting NULL to non-pointer type\n+  +NULL;     //  converting NULL to non-pointer type\n+  ~NULL;     //  converting NULL to non-pointer type\n+  a[NULL] = 3; //  converting NULL to non-pointer-type\n+  i = NULL;  //  converting NULL to non-pointer type\n+  z = NULL;  //  converting NULL to non-pointer type\n+  k(NULL);   //  converting NULL to int\n+  g(NULL);   //  converting NULL to int\n+  h<NULL>(); // No warning: NULL bound to integer template parameter\n+  l(NULL);   //  converting NULL to int\n+  NULL && NULL; // No warning: converting NULL to bool is OK\n+}"}, {"sha": "226dd852b760e3a020af926208e36857b4ba4580", "filename": "gcc/testsuite/g++.dg/warn/Wconversion2.C", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/17251338deebd6575ef2a9e2c99c3f976561dc93/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2FWconversion2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/17251338deebd6575ef2a9e2c99c3f976561dc93/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2FWconversion2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2FWconversion2.C?ref=17251338deebd6575ef2a9e2c99c3f976561dc93", "patch": "@@ -1,4 +1,3 @@\n-// { dg-options \"-Wconversion\" }\n-\n+// { dg-options \"-Wconversion-null\" }\n void foo(const char *); \n void bar() { foo(false); } // { dg-warning \"pointer type for argument\" }"}, {"sha": "cf7aa9e8d7c7e1fd7f3c200483356fc29b5826a1", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/17251338deebd6575ef2a9e2c99c3f976561dc93/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/17251338deebd6575ef2a9e2c99c3f976561dc93/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=17251338deebd6575ef2a9e2c99c3f976561dc93", "patch": "@@ -1,3 +1,9 @@\n+2010-02-20  Manuel L\u00f3pez-Ib\u00e1\u00f1ez  <manu@gcc.gnu.org>\n+\n+\tPR c++/35669\n+\t* testsuite/18_support/headers/cstddef/macros.cc: Add\n+\t-Wno-conversion-null.\n+\n 2010-02-19  Paolo Carlini  <paolo.carlini@oracle.com>\n \n \t* include/tr1_impl/array (array): Add pointer and const_pointer"}, {"sha": "c17e86f5ec0be5cab886e42d5a464e01aac8d580", "filename": "libstdc++-v3/testsuite/18_support/headers/cstddef/macros.cc", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/17251338deebd6575ef2a9e2c99c3f976561dc93/libstdc%2B%2B-v3%2Ftestsuite%2F18_support%2Fheaders%2Fcstddef%2Fmacros.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/17251338deebd6575ef2a9e2c99c3f976561dc93/libstdc%2B%2B-v3%2Ftestsuite%2F18_support%2Fheaders%2Fcstddef%2Fmacros.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F18_support%2Fheaders%2Fcstddef%2Fmacros.cc?ref=17251338deebd6575ef2a9e2c99c3f976561dc93", "patch": "@@ -1,4 +1,5 @@\n // { dg-do compile }\n+// { dg-options \"-Wno-conversion-null\" }\n // 2001-02-06  Benjamin Kosnik  <bkoz@redhat.com>\n \n // Copyright (C) 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2009"}]}