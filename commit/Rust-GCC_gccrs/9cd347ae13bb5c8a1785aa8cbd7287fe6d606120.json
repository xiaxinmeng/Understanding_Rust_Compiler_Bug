{"sha": "9cd347ae13bb5c8a1785aa8cbd7287fe6d606120", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OWNkMzQ3YWUxM2JiNWM4YTE3ODVhYThjYmQ3Mjg3ZmU2ZDYwNjEyMA==", "commit": {"author": {"name": "Uros Bizjak", "email": "ubizjak@gmail.com", "date": "2013-03-28T18:18:50Z"}, "committer": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2013-03-28T18:18:50Z"}, "message": "i386.md (*vec_extract2vdi_1): Merge with *vec_extractv2di_1_rex64.\n\n\t* config/i386/i386.md (*vec_extract2vdi_1): Merge with\n\t*vec_extractv2di_1_rex64.  Use x64 isa attribute.\n\nFrom-SVN: r197208", "tree": {"sha": "13149abaf6c9431f7c571c66b00c5d86d27e13d0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/13149abaf6c9431f7c571c66b00c5d86d27e13d0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9cd347ae13bb5c8a1785aa8cbd7287fe6d606120", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9cd347ae13bb5c8a1785aa8cbd7287fe6d606120", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9cd347ae13bb5c8a1785aa8cbd7287fe6d606120", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9cd347ae13bb5c8a1785aa8cbd7287fe6d606120/comments", "author": {"login": "ubizjak", "id": 55479990, "node_id": "MDQ6VXNlcjU1NDc5OTkw", "avatar_url": "https://avatars.githubusercontent.com/u/55479990?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ubizjak", "html_url": "https://github.com/ubizjak", "followers_url": "https://api.github.com/users/ubizjak/followers", "following_url": "https://api.github.com/users/ubizjak/following{/other_user}", "gists_url": "https://api.github.com/users/ubizjak/gists{/gist_id}", "starred_url": "https://api.github.com/users/ubizjak/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ubizjak/subscriptions", "organizations_url": "https://api.github.com/users/ubizjak/orgs", "repos_url": "https://api.github.com/users/ubizjak/repos", "events_url": "https://api.github.com/users/ubizjak/events{/privacy}", "received_events_url": "https://api.github.com/users/ubizjak/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "2a1d1991eadddddebc75857b72caedcad99cb762", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2a1d1991eadddddebc75857b72caedcad99cb762", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2a1d1991eadddddebc75857b72caedcad99cb762"}], "stats": {"total": 45, "additions": 16, "deletions": 29}, "files": [{"sha": "73b5c9f5c234744ad87f5bbabe3f97e7f01ae396", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9cd347ae13bb5c8a1785aa8cbd7287fe6d606120/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9cd347ae13bb5c8a1785aa8cbd7287fe6d606120/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=9cd347ae13bb5c8a1785aa8cbd7287fe6d606120", "patch": "@@ -1,3 +1,8 @@\n+2013-03-28  Uros Bizjak  <ubizjak@gmail.com>\n+\n+\t* config/i386/i386.md (*vec_extract2vdi_1): Merge with\n+\t*vec_extractv2di_1_rex64.  Use x64 isa attribute.\n+\n 2013-03-28   Naveen H.S  <Naveen.Hurugalawadi@caviumnetworks.com>\n \n \t* config/aarch64/aarch64.md (*and<mode>3_compare0): New pattern."}, {"sha": "28d9fc0de9a30098e493e03de9ccd0ef2a8cdd8d", "filename": "gcc/config/i386/sse.md", "status": "modified", "additions": 11, "deletions": 29, "changes": 40, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9cd347ae13bb5c8a1785aa8cbd7287fe6d606120/gcc%2Fconfig%2Fi386%2Fsse.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9cd347ae13bb5c8a1785aa8cbd7287fe6d606120/gcc%2Fconfig%2Fi386%2Fsse.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fsse.md?ref=9cd347ae13bb5c8a1785aa8cbd7287fe6d606120", "patch": "@@ -7426,45 +7426,27 @@\n   [(set (match_dup 0) (match_dup 1))]\n   \"operands[1] = gen_rtx_REG (DImode, REGNO (operands[1]));\")\n \n-(define_insn \"*vec_extractv2di_1_rex64\"\n-  [(set (match_operand:DI 0 \"nonimmediate_operand\"     \"=m,x,x,x,r\")\n-\t(vec_select:DI\n-\t  (match_operand:V2DI 1 \"nonimmediate_operand\" \" x,0,x,o,o\")\n-\t  (parallel [(const_int 1)])))]\n-  \"TARGET_64BIT && !(MEM_P (operands[0]) && MEM_P (operands[1]))\"\n-  \"@\n-   %vmovhps\\t{%1, %0|%0, %1}\n-   psrldq\\t{$8, %0|%0, 8}\n-   vpsrldq\\t{$8, %1, %0|%0, %1, 8}\n-   %vmovq\\t{%H1, %0|%0, %H1}\n-   mov{q}\\t{%H1, %0|%0, %H1}\"\n-  [(set_attr \"isa\" \"*,noavx,avx,*,*\")\n-   (set_attr \"type\" \"ssemov,sseishft1,sseishft1,ssemov,imov\")\n-   (set_attr \"length_immediate\" \"*,1,1,*,*\")\n-   (set_attr \"memory\" \"*,none,none,*,*\")\n-   (set_attr \"prefix\" \"maybe_vex,orig,vex,maybe_vex,orig\")\n-   (set_attr \"mode\" \"V2SF,TI,TI,TI,DI\")])\n-\n (define_insn \"*vec_extractv2di_1\"\n-  [(set (match_operand:DI 0 \"nonimmediate_operand\"     \"=m,x,x,x,x,x\")\n+  [(set (match_operand:DI 0 \"nonimmediate_operand\"     \"=m,x,x,x,x,x,r\")\n \t(vec_select:DI\n-\t  (match_operand:V2DI 1 \"nonimmediate_operand\" \" x,0,x,o,x,o\")\n+\t  (match_operand:V2DI 1 \"nonimmediate_operand\" \" x,0,x,o,x,o,o\")\n \t  (parallel [(const_int 1)])))]\n-  \"!TARGET_64BIT && TARGET_SSE\n+  \"(TARGET_64BIT || TARGET_SSE)\n    && !(MEM_P (operands[0]) && MEM_P (operands[1]))\"\n   \"@\n    %vmovhps\\t{%1, %0|%0, %1}\n    psrldq\\t{$8, %0|%0, 8}\n    vpsrldq\\t{$8, %1, %0|%0, %1, 8}\n    %vmovq\\t{%H1, %0|%0, %H1}\n    movhlps\\t{%1, %0|%0, %1}\n-   movlps\\t{%H1, %0|%0, %H1}\"\n-  [(set_attr \"isa\" \"*,sse2_noavx,avx,sse2,noavx,noavx\")\n-   (set_attr \"type\" \"ssemov,sseishft1,sseishft1,ssemov,ssemov,ssemov\")\n-   (set_attr \"length_immediate\" \"*,1,1,*,*,*\")\n-   (set_attr \"memory\" \"*,none,none,*,*,*\")\n-   (set_attr \"prefix\" \"maybe_vex,orig,vex,maybe_vex,orig,orig\")\n-   (set_attr \"mode\" \"V2SF,TI,TI,TI,V4SF,V2SF\")])\n+   movlps\\t{%H1, %0|%0, %H1}\n+   mov{q}\\t{%H1, %0|%0, %H1}\"\n+  [(set_attr \"isa\" \"*,sse2_noavx,avx,sse2,noavx,noavx,x64\")\n+   (set_attr \"type\" \"ssemov,sseishft1,sseishft1,ssemov,ssemov,ssemov,imov\")\n+   (set_attr \"length_immediate\" \"*,1,1,*,*,*,*\")\n+   (set_attr \"memory\" \"*,none,none,*,*,*,*\")\n+   (set_attr \"prefix\" \"maybe_vex,orig,vex,maybe_vex,orig,orig,orig\")\n+   (set_attr \"mode\" \"V2SF,TI,TI,TI,V4SF,V2SF,DI\")])\n \n (define_insn \"*vec_dupv4si\"\n   [(set (match_operand:V4SI 0 \"register_operand\"     \"=x,x,x\")"}]}