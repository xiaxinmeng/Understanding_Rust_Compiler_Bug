{"sha": "8d5463d486fe257414a840e204531a8e4405a9a6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGQ1NDYzZDQ4NmZlMjU3NDE0YTg0MGUyMDQ1MzFhOGU0NDA1YTlhNg==", "commit": {"author": {"name": "Alexandre Oliva", "email": "aoliva@redhat.com", "date": "2001-10-05T04:20:06Z"}, "committer": {"name": "Alexandre Oliva", "email": "aoliva@gcc.gnu.org", "date": "2001-10-05T04:20:06Z"}, "message": "20010122-1.c: Don't assume alloca() is enough to avoid inlining.\n\n* gcc.c-torture/execute/20010122-1.c: Don't assume alloca() is\nenough to avoid inlining.\n\nFrom-SVN: r46024", "tree": {"sha": "8421929d3050a6c08b262049d54dae8b4dfc28dd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8421929d3050a6c08b262049d54dae8b4dfc28dd"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8d5463d486fe257414a840e204531a8e4405a9a6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8d5463d486fe257414a840e204531a8e4405a9a6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8d5463d486fe257414a840e204531a8e4405a9a6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8d5463d486fe257414a840e204531a8e4405a9a6/comments", "author": null, "committer": null, "parents": [{"sha": "d4e4baa99551fa8fdcac243e1d8b2e5041b625d8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d4e4baa99551fa8fdcac243e1d8b2e5041b625d8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d4e4baa99551fa8fdcac243e1d8b2e5041b625d8"}], "stats": {"total": 24, "additions": 14, "deletions": 10}, "files": [{"sha": "f925c951ffde4e1ab99e0f84126624c4210e20e2", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d5463d486fe257414a840e204531a8e4405a9a6/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d5463d486fe257414a840e204531a8e4405a9a6/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=8d5463d486fe257414a840e204531a8e4405a9a6", "patch": "@@ -1,3 +1,8 @@\n+2001-10-05  Alexandre Oliva  <aoliva@redhat.com>\n+\n+\t* gcc.c-torture/execute/20010122-1.c: Don't assume alloca() is\n+\tenough to avoid inlining.\n+\n 2001-10-04  Peter Schmid  <schmid@snake.iap.physik.tu-darmstadt.de>\n \n \t* lib/g77.exp: set libg2c_dir correctly."}, {"sha": "ba72397945dcb1d64ab61383dbd7c3759fcf6544", "filename": "gcc/testsuite/gcc.c-torture/execute/20010122-1.c", "status": "modified", "additions": 9, "deletions": 10, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d5463d486fe257414a840e204531a8e4405a9a6/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F20010122-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d5463d486fe257414a840e204531a8e4405a9a6/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F20010122-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F20010122-1.c?ref=8d5463d486fe257414a840e204531a8e4405a9a6", "patch": "@@ -78,15 +78,14 @@ void *test6a (char * p)\n \n void *(*func1[6])(void) = { test1, test2, test3, test4, test5, test6 };\n \n-char * call_func1 (int i)\n+char * call_func1_ (int i)\n {\n-  char * save = (char*) alloca (4);\n-\n   save_ret1[i] = func1[i] ();\n-\n-  return save;\n }\n \n+/* We dont' want call_func1_ to be inlined, so call it through a\n+   pointer.  */\n+void (*call_func1)(int) = call_func1_;\n \n static void *ret_addr;\n void *save_ret2[6];\n@@ -164,16 +163,16 @@ char * dummy (void)\n \n void (*func2[6])(void) = { test7, test8, test9, test10, test11, test12 };\n \n-char * call_func2 (int i)\n+void call_func2_ (int i)\n {\n-  char * save = (char*) alloca (4);\n-\n   func2[i] ();\n   save_ret2[i] = ret_addr;\n-\n-  return save;\n }\n \n+/* We dont' want call_func2_ to be inlined, so call it through a\n+   pointer.  */\n+void (*call_func2)(int) = call_func2_;\n+\n int main (void)\n {\n   int i;"}]}