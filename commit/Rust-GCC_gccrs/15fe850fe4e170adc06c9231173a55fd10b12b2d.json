{"sha": "15fe850fe4e170adc06c9231173a55fd10b12b2d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTVmZTg1MGZlNGUxNzBhZGMwNmM5MjMxMTczYTU1ZmQxMGIxMmIyZA==", "commit": {"author": {"name": "Anatoly Sokolov", "email": "aesok@post.ru", "date": "2008-11-02T13:51:39Z"}, "committer": {"name": "Anatoly Sokolov", "email": "aesok@gcc.gnu.org", "date": "2008-11-02T13:51:39Z"}, "message": "avr.md (UNSPEC_SWAP): Remove constants.\n\n\t* config/avr/avr.md (UNSPEC_SWAP): Remove constants.\n\t(*swap): Remove.\n\t(rotlqi3, *rotlqi3_4, rotlhi3, *rotlhi3_8,\n\trotlsi3, *rotlsi3_8, *rotlsi3_16, *rotlsi3_24): New patterns.\n\t(ashlqi3_const4, ashlqi3_const5, ashlqi3_const6, ashlqi3_l_const4,\n\tashlqi3_l_const5, ashlqi3_l_const6, lshrqi3_const4, lshrqi3_const5,\n\tlshrqi3_const6, lshrqi3_l_const4, lshrqi3_l_const4, lshrqi3_l_const6\n\tpeephole2's): Replace unspec with rotate.\n\t* config/avr/avr.c (avr_rtx_costs): Add ROTATE.\n\nFrom-SVN: r141533", "tree": {"sha": "e016bcdc3645c703daa000f5b6021cf7043db28d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e016bcdc3645c703daa000f5b6021cf7043db28d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/15fe850fe4e170adc06c9231173a55fd10b12b2d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/15fe850fe4e170adc06c9231173a55fd10b12b2d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/15fe850fe4e170adc06c9231173a55fd10b12b2d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/15fe850fe4e170adc06c9231173a55fd10b12b2d/comments", "author": null, "committer": null, "parents": [{"sha": "8495c94f4981e8018b6da421e1e25b82ebdde91e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8495c94f4981e8018b6da421e1e25b82ebdde91e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8495c94f4981e8018b6da421e1e25b82ebdde91e"}], "stats": {"total": 233, "additions": 217, "deletions": 16}, "files": [{"sha": "b01b48337dbca2a4d4bcfcddc681333ec0295577", "filename": "gcc/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/15fe850fe4e170adc06c9231173a55fd10b12b2d/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/15fe850fe4e170adc06c9231173a55fd10b12b2d/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=15fe850fe4e170adc06c9231173a55fd10b12b2d", "patch": "@@ -1,3 +1,15 @@\n+2008-11-02  Anatoly Sokolov  <aesok@post.ru>\n+\n+\t* config/avr/avr.md (UNSPEC_SWAP): Remove constants.\n+\t(*swap): Remove.\n+\t(rotlqi3, *rotlqi3_4, rotlhi3, *rotlhi3_8,\n+\trotlsi3, *rotlsi3_8, *rotlsi3_16, *rotlsi3_24): New patterns.\n+\t(ashlqi3_const4, ashlqi3_const5, ashlqi3_const6, ashlqi3_l_const4,\n+\tashlqi3_l_const5, ashlqi3_l_const6, lshrqi3_const4, lshrqi3_const5,\n+\tlshrqi3_const6, lshrqi3_l_const4, lshrqi3_l_const4, lshrqi3_l_const6\n+\tpeephole2's): Replace unspec with rotate.\n+\t* config/avr/avr.c (avr_rtx_costs): Add ROTATE.\n+\n 2008-11-02  Richard Guenther  <rguenther@suse.de>\n \n \tPR tree-optimization/37991"}, {"sha": "499607420838b88280a3a2d8ca132ca4d8839c5a", "filename": "gcc/config/avr/avr.c", "status": "modified", "additions": 35, "deletions": 0, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/15fe850fe4e170adc06c9231173a55fd10b12b2d/gcc%2Fconfig%2Favr%2Favr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/15fe850fe4e170adc06c9231173a55fd10b12b2d/gcc%2Fconfig%2Favr%2Favr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Favr%2Favr.c?ref=15fe850fe4e170adc06c9231173a55fd10b12b2d", "patch": "@@ -5193,6 +5193,41 @@ avr_rtx_costs (rtx x, int code, int outer_code ATTRIBUTE_UNUSED, int *total,\n       *total += avr_operand_rtx_cost (XEXP (x, 1), mode, code, speed);\n       return true;\n \n+    case ROTATE:\n+      switch (mode)\n+\t{\n+\tcase QImode:\n+\t  if (CONST_INT_P (XEXP (x, 1)) && INTVAL (XEXP (x, 1)) == 4)\n+\t    *total = COSTS_N_INSNS (1);\n+\n+\t  break;\n+\n+\tcase HImode:\n+\t  if (CONST_INT_P (XEXP (x, 1)) && INTVAL (XEXP (x, 1)) == 8)\n+\t    *total = COSTS_N_INSNS (3);\n+\n+\t  break;\n+\n+\tcase SImode:\n+\t  if (CONST_INT_P (XEXP (x, 1)))\n+\t    switch (INTVAL (XEXP (x, 1)))\n+\t      {\n+\t      case 8:\n+\t      case 24:\n+\t\t*total = COSTS_N_INSNS (5);\n+\t\tbreak;\n+\t      case 16:\n+\t\t*total = COSTS_N_INSNS (AVR_HAVE_MOVW ? 4 : 6);\n+\t\tbreak;\n+\t      }\n+\t  break;\n+\n+\tdefault:\n+\t  return false;\n+\t}\n+      *total += avr_operand_rtx_cost (XEXP (x, 0), mode, code, speed);\n+      return true;    \n+\n     case ASHIFT:\n       switch (mode)\n \t{"}, {"sha": "82a499d48b78be944fb7de75d0dab72b32248210", "filename": "gcc/config/avr/avr.md", "status": "modified", "additions": 170, "deletions": 16, "changes": 186, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/15fe850fe4e170adc06c9231173a55fd10b12b2d/gcc%2Fconfig%2Favr%2Favr.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/15fe850fe4e170adc06c9231173a55fd10b12b2d/gcc%2Fconfig%2Favr%2Favr.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Favr%2Favr.md?ref=15fe850fe4e170adc06c9231173a55fd10b12b2d", "patch": "@@ -54,7 +54,6 @@\n    (UNSPEC_INDEX_JMP\t1)\n    (UNSPEC_SEI\t\t2)\n    (UNSPEC_CLI\t\t3)\n-   (UNSPEC_SWAP\t\t4)\n \n    (UNSPECV_PROLOGUE_SAVES\t0)\n    (UNSPECV_EPILOGUE_RESTORES\t1)\n@@ -1407,17 +1406,172 @@\n   [(set_attr \"length\" \"4\")\n    (set_attr \"cc\" \"set_n\")])\n \n+;; swap swap swap swap swap swap swap swap swap swap swap swap swap swap swap\n ;; swap\n \n-(define_insn \"*swap\"\n+(define_expand \"rotlqi3\"\n+  [(set (match_operand:QI 0 \"register_operand\" \"\")\n+\t(rotate:QI (match_operand:QI 1 \"register_operand\" \"\")\n+\t\t   (match_operand:QI 2 \"const_int_operand\" \"\")))]\n+  \"\"\n+  \"\n+{\n+  if (INTVAL (operands[2]) != 4)\n+    FAIL;\n+}\")\n+\n+(define_insn \"*rotlqi3_4\"\n   [(set (match_operand:QI 0 \"register_operand\" \"=r\")\n-\t(unspec:QI [(match_operand:QI 1 \"register_operand\" \"0\")]\n-\t\t   UNSPEC_SWAP))]\n+\t(rotate:QI (match_operand:QI 1 \"register_operand\" \"0\")\n+\t\t   (const_int 4)))]\n   \"\"\n   \"swap %0\"\n   [(set_attr \"length\" \"1\")\n    (set_attr \"cc\" \"none\")])\n \n+(define_expand \"rotlhi3\"\n+  [(set (match_operand:HI 0 \"register_operand\" \"\")\n+\t(rotate:HI (match_operand:HI 1 \"register_operand\" \"\")\n+\t\t   (match_operand:HI 2 \"const_int_operand\" \"\")))]\n+  \"\"\n+  \"\n+{\n+  if (INTVAL (operands[2]) != 8)\n+    FAIL;\n+}\")\n+\n+(define_insn_and_split \"*rotlhi3_8\"\n+  [(set (match_operand:HI 0 \"register_operand\" \"=r\")\n+\t(rotate:HI (match_operand:HI 1 \"register_operand\" \"r\")\n+\t\t   (const_int 8)))]\n+  \"\"\n+  \"mov __tmp_reg__,%A0\n+\tmov %A0,%B0\n+\tmov %B0, __tmp_reg__\"\n+  \"reload_completed\n+   && REGNO (operands[0]) != REGNO (operands[1])\"\n+  [(set (match_dup 2) (match_dup 5))\n+   (set (match_dup 3) (match_dup 4))]\n+  \"operands[2] = gen_lowpart (QImode, operands[0]);\n+   operands[3] = gen_highpart (QImode, operands[0]);\n+\n+   operands[4] = gen_lowpart (QImode, operands[1]);\n+   operands[5] = gen_highpart (QImode, operands[1]);\"\n+   [(set_attr \"length\" \"3\")\n+   (set_attr \"cc\" \"none\")])\n+\n+(define_expand \"rotlsi3\"\n+  [(set (match_operand:SI 0 \"register_operand\" \"\")\n+\t(rotate:SI (match_operand:SI 1 \"register_operand\" \"\")\n+\t\t   (match_operand:SI 2 \"const_int_operand\" \"\")))]\n+  \"\"\n+  \"\n+{\n+  if (INTVAL (operands[2]) != 8\n+      || INTVAL (operands[2]) != 16\n+      || INTVAL (operands[2]) != 24)\n+    FAIL;\n+}\")\n+\n+(define_insn_and_split \"*rotlsi3_16\"\n+  [(set (match_operand:SI 0 \"register_operand\" \"=r\")\n+\t(rotate:SI (match_operand:SI 1 \"register_operand\" \"r\")\n+\t\t   (const_int 16)))]\n+  \"\"\n+  \"{mov __tmp_reg__,%A0\\;mov %A0,%D0\\;mov %D0, __tmp_reg__\\;mov __tmp_reg__,%B0\\;mov %B0,%C0\\;mov %C0, __tmp_reg__|movw __tmp_reg__,%A0\\;movw %A0,%C0\\;movw %C0, __tmp_reg__\\;clr __zero_reg__}\"\n+  \"reload_completed\n+   && REGNO (operands[0]) != REGNO (operands[1])\"\n+  [(set (match_dup 2) (match_dup 5))\n+   (set (match_dup 3) (match_dup 4))]\n+  \"unsigned int si_lo_off = subreg_lowpart_offset (HImode, SImode);\n+   unsigned int si_hi_off = subreg_highpart_offset (HImode, SImode);\n+\n+   operands[2] = simplify_gen_subreg (HImode, operands[0], SImode, si_lo_off);\n+   operands[3] = simplify_gen_subreg (HImode, operands[0], SImode, si_hi_off);\n+\n+   operands[4] = simplify_gen_subreg (HImode, operands[1], SImode, si_lo_off);\n+   operands[5] = simplify_gen_subreg (HImode, operands[1], SImode, si_hi_off);\"\n+  [(set (attr \"length\") (if_then_else (eq_attr \"mcu_have_movw\" \"yes\")\n+\t\t\t\t      (const_int 4)\n+\t\t\t\t      (const_int 6)))\n+   (set (attr \"cc\") (if_then_else (eq_attr \"mcu_have_movw\" \"yes\")\n+\t\t\t\t  (const_string \"clobber\")\n+\t\t\t\t  (const_string \"none\")))])\n+\n+(define_insn_and_split \"*rotlsi3_8\"\n+  [(set (match_operand:SI 0 \"register_operand\" \"=r\")\n+\t(rotate:SI (match_operand:SI 1 \"register_operand\" \"r\")\n+\t\t   (const_int 8)))]\n+  \"\"\n+  \"mov __tmp_reg__,%D0\n+\tmov %D0,%C0\n+\tmov %C0,%B0\n+\tmov %B0,%A0\n+\tmov %A0, __tmp_reg__\"\n+  \"reload_completed\n+   && REGNO (operands[0]) != REGNO (operands[1])\"\n+  [(set (match_dup 2) (match_dup 9))\n+   (set (match_dup 3) (match_dup 6))\n+   (set (match_dup 4) (match_dup 7))\n+   (set (match_dup 5) (match_dup 8))]\n+  \"unsigned int si_lo_off = subreg_lowpart_offset (HImode, SImode);\n+   unsigned int si_hi_off = subreg_highpart_offset (HImode, SImode);\n+   unsigned int hi_lo_off = subreg_lowpart_offset (QImode, HImode);\n+   unsigned int hi_hi_off = subreg_highpart_offset (QImode, HImode);\n+\n+   operands[2] = simplify_gen_subreg (HImode, operands[0], SImode, si_lo_off);\n+   operands[4] = simplify_gen_subreg (HImode, operands[0], SImode, si_hi_off);\n+   operands[3] = simplify_gen_subreg (QImode, operands[2], HImode, hi_hi_off);\n+   operands[2] = simplify_gen_subreg (QImode, operands[2], HImode, hi_lo_off);\n+   operands[5] = simplify_gen_subreg (QImode, operands[4], HImode, hi_hi_off);\n+   operands[4] = simplify_gen_subreg (QImode, operands[4], HImode, hi_lo_off);\n+\n+   operands[6] = simplify_gen_subreg (HImode, operands[1], SImode, si_lo_off);\n+   operands[8] = simplify_gen_subreg (HImode, operands[1], SImode, si_hi_off);\n+   operands[7] = simplify_gen_subreg (QImode, operands[6], HImode, hi_hi_off);\n+   operands[6] = simplify_gen_subreg (QImode, operands[6], HImode, hi_lo_off);\n+   operands[9] = simplify_gen_subreg (QImode, operands[8], HImode, hi_hi_off);\n+   operands[8] = simplify_gen_subreg (QImode, operands[8], HImode, hi_lo_off);\"\n+   [(set_attr \"length\" \"5\")\n+   (set_attr \"cc\" \"none\")])\n+\n+(define_insn_and_split \"*rotlsi3_24\"\n+  [(set (match_operand:SI 0 \"register_operand\" \"=r\")\n+\t(rotate:SI (match_operand:SI 1 \"register_operand\" \"r\")\n+\t\t   (const_int 24)))]\n+  \"\"\n+  \"mov __tmp_reg__,%A0\n+\tmov %A0,%B0\n+\tmov %B0,%C0\n+\tmov %C0,%D0\n+\tmov %D0, __tmp_reg__\"\n+  \"reload_completed\n+   && REGNO (operands[0]) != REGNO (operands[1])\"\n+  [(set (match_dup 2) (match_dup 7))\n+   (set (match_dup 3) (match_dup 8))\n+   (set (match_dup 4) (match_dup 9))\n+   (set (match_dup 5) (match_dup 6))]\n+  \"unsigned int si_lo_off = subreg_lowpart_offset (HImode, SImode);\n+   unsigned int si_hi_off = subreg_highpart_offset (HImode, SImode);\n+   unsigned int hi_lo_off = subreg_lowpart_offset (QImode, HImode);\n+   unsigned int hi_hi_off = subreg_highpart_offset (QImode, HImode);\n+\n+   operands[2] = simplify_gen_subreg (HImode, operands[0], SImode, si_lo_off);\n+   operands[4] = simplify_gen_subreg (HImode, operands[0], SImode, si_hi_off);\n+   operands[3] = simplify_gen_subreg (QImode, operands[2], HImode, hi_hi_off);\n+   operands[2] = simplify_gen_subreg (QImode, operands[2], HImode, hi_lo_off);\n+   operands[5] = simplify_gen_subreg (QImode, operands[4], HImode, hi_hi_off);\n+   operands[4] = simplify_gen_subreg (QImode, operands[4], HImode, hi_lo_off);\n+\n+   operands[6] = simplify_gen_subreg (HImode, operands[1], SImode, si_lo_off);\n+   operands[8] = simplify_gen_subreg (HImode, operands[1], SImode, si_hi_off);\n+   operands[7] = simplify_gen_subreg (QImode, operands[6], HImode, hi_hi_off);\n+   operands[6] = simplify_gen_subreg (QImode, operands[6], HImode, hi_lo_off);\n+   operands[9] = simplify_gen_subreg (QImode, operands[8], HImode, hi_hi_off);\n+   operands[8] = simplify_gen_subreg (QImode, operands[8], HImode, hi_lo_off);\"\n+   [(set_attr \"length\" \"5\")\n+   (set_attr \"cc\" \"none\")])\n+\n ;;<< << << << << << << << << << << << << << << << << << << << << << << << << <<\n ;; arithmetic shift left\n \n@@ -1433,7 +1587,7 @@\n \t(ashift:QI (match_dup 0)\n \t\t   (const_int 4)))]\n   \"\"\n-  [(set (match_dup 0) (unspec:QI [(match_dup 0)] UNSPEC_SWAP))\n+  [(set (match_dup 0) (rotate:QI (match_dup 0) (const_int 4)))\n    (set (match_dup 0) (and:QI (match_dup 0) (const_int -16)))]\n   \"\")\n \n@@ -1442,7 +1596,7 @@\n \t(ashift:QI (match_dup 0)\n \t\t   (const_int 5)))]\n   \"\"\n-  [(set (match_dup 0) (unspec:QI [(match_dup 0)] UNSPEC_SWAP))\n+  [(set (match_dup 0) (rotate:QI (match_dup 0) (const_int 4)))\n    (set (match_dup 0) (ashift:QI (match_dup 0) (const_int 1)))\n    (set (match_dup 0) (and:QI (match_dup 0) (const_int -32)))]\n   \"\")\n@@ -1452,7 +1606,7 @@\n \t(ashift:QI (match_dup 0)\n \t\t   (const_int 6)))]\n   \"\"\n-  [(set (match_dup 0) (unspec:QI [(match_dup 0)] UNSPEC_SWAP))\n+  [(set (match_dup 0) (rotate:QI (match_dup 0) (const_int 4)))\n    (set (match_dup 0) (ashift:QI (match_dup 0) (const_int 2)))\n    (set (match_dup 0) (and:QI (match_dup 0) (const_int -64)))]\n   \"\")\n@@ -1492,7 +1646,7 @@\n \t\t   (const_int 4)))\n    (match_scratch:QI 1 \"d\")]\n   \"\"\n-  [(set (match_dup 0) (unspec:QI [(match_dup 0)] UNSPEC_SWAP))\n+  [(set (match_dup 0) (rotate:QI (match_dup 0) (const_int 4)))\n    (set (match_dup 1) (const_int -16))\n    (set (match_dup 0) (and:QI (match_dup 0) (match_dup 1)))]\n   \"\")\n@@ -1503,7 +1657,7 @@\n \t\t   (const_int 5)))\n    (match_scratch:QI 1 \"d\")]\n   \"\"\n-  [(set (match_dup 0) (unspec:QI [(match_dup 0)] UNSPEC_SWAP))\n+  [(set (match_dup 0) (rotate:QI (match_dup 0) (const_int 4)))\n    (set (match_dup 0) (ashift:QI (match_dup 0) (const_int 1)))\n    (set (match_dup 1) (const_int -32))\n    (set (match_dup 0) (and:QI (match_dup 0) (match_dup 1)))]\n@@ -1515,7 +1669,7 @@\n \t\t   (const_int 6)))\n    (match_scratch:QI 1 \"d\")]\n   \"\"\n-  [(set (match_dup 0) (unspec:QI [(match_dup 0)] UNSPEC_SWAP))\n+  [(set (match_dup 0) (rotate:QI (match_dup 0) (const_int 4)))\n    (set (match_dup 0) (ashift:QI (match_dup 0) (const_int 2)))\n    (set (match_dup 1) (const_int -64))\n    (set (match_dup 0) (and:QI (match_dup 0) (match_dup 1)))]\n@@ -1648,7 +1802,7 @@\n \t(lshiftrt:QI (match_dup 0)\n \t\t     (const_int 4)))]\n   \"\"\n-  [(set (match_dup 0) (unspec:QI [(match_dup 0)] UNSPEC_SWAP))\n+  [(set (match_dup 0) (rotate:QI (match_dup 0) (const_int 4)))\n    (set (match_dup 0) (and:QI (match_dup 0) (const_int 15)))]\n   \"\")\n \n@@ -1657,7 +1811,7 @@\n \t(lshiftrt:QI (match_dup 0)\n \t\t     (const_int 5)))]\n   \"\"\n-  [(set (match_dup 0) (unspec:QI [(match_dup 0)] UNSPEC_SWAP))\n+  [(set (match_dup 0) (rotate:QI (match_dup 0) (const_int 4)))\n    (set (match_dup 0) (lshiftrt:QI (match_dup 0) (const_int 1)))\n    (set (match_dup 0) (and:QI (match_dup 0) (const_int 7)))]\n   \"\")\n@@ -1667,7 +1821,7 @@\n \t(lshiftrt:QI (match_dup 0)\n \t\t     (const_int 6)))]\n   \"\"\n-  [(set (match_dup 0) (unspec:QI [(match_dup 0)] UNSPEC_SWAP))\n+  [(set (match_dup 0) (rotate:QI (match_dup 0) (const_int 4)))\n    (set (match_dup 0) (lshiftrt:QI (match_dup 0) (const_int 2)))\n    (set (match_dup 0) (and:QI (match_dup 0) (const_int 3)))]\n   \"\")\n@@ -1707,7 +1861,7 @@\n \t\t     (const_int 4)))\n    (match_scratch:QI 1 \"d\")]\n   \"\"\n-  [(set (match_dup 0) (unspec:QI [(match_dup 0)] UNSPEC_SWAP))\n+  [(set (match_dup 0) (rotate:QI (match_dup 0) (const_int 4)))\n    (set (match_dup 1) (const_int 15))\n    (set (match_dup 0) (and:QI (match_dup 0) (match_dup 1)))]\n   \"\")\n@@ -1718,7 +1872,7 @@\n \t\t     (const_int 5)))\n    (match_scratch:QI 1 \"d\")]\n   \"\"\n-  [(set (match_dup 0) (unspec:QI [(match_dup 0)] UNSPEC_SWAP))\n+  [(set (match_dup 0) (rotate:QI (match_dup 0) (const_int 4)))\n    (set (match_dup 0) (lshiftrt:QI (match_dup 0) (const_int 1)))\n    (set (match_dup 1) (const_int 7))\n    (set (match_dup 0) (and:QI (match_dup 0) (match_dup 1)))]\n@@ -1730,7 +1884,7 @@\n \t\t     (const_int 6)))\n    (match_scratch:QI 1 \"d\")]\n   \"\"\n-  [(set (match_dup 0) (unspec:QI [(match_dup 0)] UNSPEC_SWAP))\n+  [(set (match_dup 0) (rotate:QI (match_dup 0) (const_int 4)))\n    (set (match_dup 0) (lshiftrt:QI (match_dup 0) (const_int 2)))\n    (set (match_dup 1) (const_int 3))\n    (set (match_dup 0) (and:QI (match_dup 0) (match_dup 1)))]"}]}