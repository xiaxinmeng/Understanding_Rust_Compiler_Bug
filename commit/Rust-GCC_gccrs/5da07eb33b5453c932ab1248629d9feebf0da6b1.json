{"sha": "5da07eb33b5453c932ab1248629d9feebf0da6b1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWRhMDdlYjMzYjU0NTNjOTMyYWIxMjQ4NjI5ZDlmZWViZjBkYTZiMQ==", "commit": {"author": {"name": "YizhePKU", "email": "yizhe@pku.edu.cn", "date": "2021-04-08T04:02:50Z"}, "committer": {"name": "YizhePKU", "email": "yizhe@pku.edu.cn", "date": "2021-04-08T04:02:50Z"}, "message": "Use TyVar::get_implict_infer_var to cleanup", "tree": {"sha": "dfd1492e58dab916f14552d2f3327ff72094875c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/dfd1492e58dab916f14552d2f3327ff72094875c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5da07eb33b5453c932ab1248629d9feebf0da6b1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5da07eb33b5453c932ab1248629d9feebf0da6b1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5da07eb33b5453c932ab1248629d9feebf0da6b1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5da07eb33b5453c932ab1248629d9feebf0da6b1/comments", "author": {"login": "YizhePKU", "id": 42838469, "node_id": "MDQ6VXNlcjQyODM4NDY5", "avatar_url": "https://avatars.githubusercontent.com/u/42838469?v=4", "gravatar_id": "", "url": "https://api.github.com/users/YizhePKU", "html_url": "https://github.com/YizhePKU", "followers_url": "https://api.github.com/users/YizhePKU/followers", "following_url": "https://api.github.com/users/YizhePKU/following{/other_user}", "gists_url": "https://api.github.com/users/YizhePKU/gists{/gist_id}", "starred_url": "https://api.github.com/users/YizhePKU/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/YizhePKU/subscriptions", "organizations_url": "https://api.github.com/users/YizhePKU/orgs", "repos_url": "https://api.github.com/users/YizhePKU/repos", "events_url": "https://api.github.com/users/YizhePKU/events{/privacy}", "received_events_url": "https://api.github.com/users/YizhePKU/received_events", "type": "User", "site_admin": false}, "committer": {"login": "YizhePKU", "id": 42838469, "node_id": "MDQ6VXNlcjQyODM4NDY5", "avatar_url": "https://avatars.githubusercontent.com/u/42838469?v=4", "gravatar_id": "", "url": "https://api.github.com/users/YizhePKU", "html_url": "https://github.com/YizhePKU", "followers_url": "https://api.github.com/users/YizhePKU/followers", "following_url": "https://api.github.com/users/YizhePKU/following{/other_user}", "gists_url": "https://api.github.com/users/YizhePKU/gists{/gist_id}", "starred_url": "https://api.github.com/users/YizhePKU/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/YizhePKU/subscriptions", "organizations_url": "https://api.github.com/users/YizhePKU/orgs", "repos_url": "https://api.github.com/users/YizhePKU/repos", "events_url": "https://api.github.com/users/YizhePKU/events{/privacy}", "received_events_url": "https://api.github.com/users/YizhePKU/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a707707b97caa896e807db00213381d9b418c2cd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a707707b97caa896e807db00213381d9b418c2cd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a707707b97caa896e807db00213381d9b418c2cd"}], "stats": {"total": 11, "additions": 1, "deletions": 10}, "files": [{"sha": "b6048a91599ba3eac7a19e98d520f31b46c8dab2", "filename": "gcc/rust/typecheck/rust-hir-type-check-expr.h", "status": "modified", "additions": 1, "deletions": 10, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5da07eb33b5453c932ab1248629d9feebf0da6b1/gcc%2Frust%2Ftypecheck%2Frust-hir-type-check-expr.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5da07eb33b5453c932ab1248629d9feebf0da6b1/gcc%2Frust%2Ftypecheck%2Frust-hir-type-check-expr.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Ftypecheck%2Frust-hir-type-check-expr.h?ref=5da07eb33b5453c932ab1248629d9feebf0da6b1", "patch": "@@ -706,16 +706,7 @@ class TypeCheckExpr : public TypeCheckBase\n       return true;\n     });\n \n-    // Create an infer type and register it in TypeCheckContext\n-    // TODO: This is very leaky. Need a refactor of some sort.\n-    auto crateNum = Analysis::Mappings::get ()->get_current_crate ();\n-    auto nodeId = UNKNOWN_NODEID;\n-    auto hirId = mappings->get_next_hir_id ();\n-    auto localDefId = UNKNOWN_LOCAL_DEFID;\n-    auto mappings = Analysis::NodeMapping (crateNum, nodeId, hirId, localDefId);\n-    infered_array_elems\n-      = new TyTy::InferType (hirId, TyTy::InferType::InferTypeKind::GENERAL);\n-    context->insert_type (mappings, infered_array_elems);\n+    infered_array_elems = TyTy::TyVar::get_implict_infer_var ().get_tyty ();\n \n     for (auto &type : types)\n       {"}]}