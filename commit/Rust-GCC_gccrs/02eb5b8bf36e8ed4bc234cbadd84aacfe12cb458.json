{"sha": "02eb5b8bf36e8ed4bc234cbadd84aacfe12cb458", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDJlYjViOGJmMzZlOGVkNGJjMjM0Y2JhZGQ4NGFhY2ZlMTJjYjQ1OA==", "commit": {"author": {"name": "Bill Schmidt", "email": "wschmidt@linux.vnet.ibm.com", "date": "2016-07-08T15:42:47Z"}, "committer": {"name": "William Schmidt", "email": "wschmidt@gcc.gnu.org", "date": "2016-07-08T15:42:47Z"}, "message": "re PR target/71297 (ICE on invalid code in altivec_resolve_overloaded_builtin (rs6000-c.c:5106) on powerpc64le-linux)\n\n[gcc]\n\n2016-07-08  Bill Schmidt  <wschmidt@linux.vnet.ibm.com>\n\n\tPR target/71297\n\t* config/rs6000/rs6000-c.c (altivec_resolve_overloaded_builtin):\n\tAllow standard error handling to take over when a wrong number\n\tof arguments is presented to __builtin_vec_ld () or\n\t__builtin_vec_st ().\n\n[gcc/testsuite]\n\n2016-07-08  Bill Schmidt  <wschmidt@linux.vnet.ibm.com>\n\n\tPR target/71297\n\t* gcc.target/powerpc/pr71297.c: New.\n\nFrom-SVN: r238168", "tree": {"sha": "f3f1bc697824a10c27236df82dc56448e53bae32", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f3f1bc697824a10c27236df82dc56448e53bae32"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/02eb5b8bf36e8ed4bc234cbadd84aacfe12cb458", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/02eb5b8bf36e8ed4bc234cbadd84aacfe12cb458", "html_url": "https://github.com/Rust-GCC/gccrs/commit/02eb5b8bf36e8ed4bc234cbadd84aacfe12cb458", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/02eb5b8bf36e8ed4bc234cbadd84aacfe12cb458/comments", "author": {"login": "wschmidt-ibm", "id": 5520937, "node_id": "MDQ6VXNlcjU1MjA5Mzc=", "avatar_url": "https://avatars.githubusercontent.com/u/5520937?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wschmidt-ibm", "html_url": "https://github.com/wschmidt-ibm", "followers_url": "https://api.github.com/users/wschmidt-ibm/followers", "following_url": "https://api.github.com/users/wschmidt-ibm/following{/other_user}", "gists_url": "https://api.github.com/users/wschmidt-ibm/gists{/gist_id}", "starred_url": "https://api.github.com/users/wschmidt-ibm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wschmidt-ibm/subscriptions", "organizations_url": "https://api.github.com/users/wschmidt-ibm/orgs", "repos_url": "https://api.github.com/users/wschmidt-ibm/repos", "events_url": "https://api.github.com/users/wschmidt-ibm/events{/privacy}", "received_events_url": "https://api.github.com/users/wschmidt-ibm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "8beb9a0dc9e0a11bd582bfaef8cbed5a38adc8a1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8beb9a0dc9e0a11bd582bfaef8cbed5a38adc8a1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8beb9a0dc9e0a11bd582bfaef8cbed5a38adc8a1"}], "stats": {"total": 33, "additions": 29, "deletions": 4}, "files": [{"sha": "9897bfce6562cfab8fbf792369a55da843757af5", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/02eb5b8bf36e8ed4bc234cbadd84aacfe12cb458/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/02eb5b8bf36e8ed4bc234cbadd84aacfe12cb458/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=02eb5b8bf36e8ed4bc234cbadd84aacfe12cb458", "patch": "@@ -1,3 +1,11 @@\n+2016-07-08  Bill Schmidt  <wschmidt@linux.vnet.ibm.com>\n+\n+\tPR target/71297\n+\t* config/rs6000/rs6000-c.c (altivec_resolve_overloaded_builtin):\n+\tAllow standard error handling to take over when a wrong number\n+\tof arguments is presented to __builtin_vec_ld () or\n+\t__builtin_vec_st ().\n+\n 2016-07-08  Jiong Wang  <jiong.wang@arm.com>\n \n \t* config/aarch64/aarch64-simd-builtins.def (smax): Remove float"}, {"sha": "fe6db2c097a49d0ec4e00e9e077f5996b42631fc", "filename": "gcc/config/rs6000/rs6000-c.c", "status": "modified", "additions": 6, "deletions": 4, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/02eb5b8bf36e8ed4bc234cbadd84aacfe12cb458/gcc%2Fconfig%2Frs6000%2Frs6000-c.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/02eb5b8bf36e8ed4bc234cbadd84aacfe12cb458/gcc%2Fconfig%2Frs6000%2Frs6000-c.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000-c.c?ref=02eb5b8bf36e8ed4bc234cbadd84aacfe12cb458", "patch": "@@ -5281,10 +5281,11 @@ assignment for unaligned loads and stores\");\n      are able to honor __restrict__, for example.  We may want to\n      consider this for all memory access built-ins.\n \n-     When -maltivec=be is specified, simply punt to existing\n-     built-in processing.  */\n+     When -maltivec=be is specified, or the wrong number of arguments\n+     is provided, simply punt to existing built-in processing.  */\n   if (fcode == ALTIVEC_BUILTIN_VEC_LD\n-      && (BYTES_BIG_ENDIAN || !VECTOR_ELT_ORDER_BIG))\n+      && (BYTES_BIG_ENDIAN || !VECTOR_ELT_ORDER_BIG)\n+      && nargs == 2)\n     {\n       tree arg0 = (*arglist)[0];\n       tree arg1 = (*arglist)[1];\n@@ -5354,7 +5355,8 @@ assignment for unaligned loads and stores\");\n \n   /* Similarly for stvx.  */\n   if (fcode == ALTIVEC_BUILTIN_VEC_ST\n-      && (BYTES_BIG_ENDIAN || !VECTOR_ELT_ORDER_BIG))\n+      && (BYTES_BIG_ENDIAN || !VECTOR_ELT_ORDER_BIG)\n+      && nargs == 3)\n     {\n       tree arg0 = (*arglist)[0];\n       tree arg1 = (*arglist)[1];"}, {"sha": "4f107b1af518c3afef2e89f7dbfd5a2c6ca89343", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/02eb5b8bf36e8ed4bc234cbadd84aacfe12cb458/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/02eb5b8bf36e8ed4bc234cbadd84aacfe12cb458/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=02eb5b8bf36e8ed4bc234cbadd84aacfe12cb458", "patch": "@@ -1,3 +1,8 @@\n+2016-07-08  Bill Schmidt  <wschmidt@linux.vnet.ibm.com>\n+\n+\tPR target/71297\n+\t* gcc.target/powerpc/pr71297.c: New.\n+\n 2016-07-08  Jiong Wang  <jiong.wang@arm.com>\n \n \t* gcc.target/aarch64/simd/vminmaxnm_1.c: New."}, {"sha": "db1aaf016cd44945095160b847797ef67c64352d", "filename": "gcc/testsuite/gcc.target/powerpc/pr71297.c", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/02eb5b8bf36e8ed4bc234cbadd84aacfe12cb458/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fpr71297.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/02eb5b8bf36e8ed4bc234cbadd84aacfe12cb458/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fpr71297.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fpr71297.c?ref=02eb5b8bf36e8ed4bc234cbadd84aacfe12cb458", "patch": "@@ -0,0 +1,10 @@\n+/* PR target/71763 */\n+/* { dg-do compile } */\n+/* { dg-require-effective-target powerpc_altivec_ok } */\n+\n+int main ()\n+{\n+  __builtin_vec_st (); /* { dg-error \"too few arguments to function\" } */\n+\n+}\n+"}]}