{"sha": "fd811f03425ed77208a00c3fccefb2e960e052a9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZmQ4MTFmMDM0MjVlZDc3MjA4YTAwYzNmY2NlZmIyZTk2MGUwNTJhOQ==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@adacore.com", "date": "2011-07-19T20:20:27Z"}, "committer": {"name": "Eric Botcazou", "email": "ebotcazou@gcc.gnu.org", "date": "2011-07-19T20:20:27Z"}, "message": "cif-code.def (OVERWRITABLE): Fix typo and move around.\n\n\t* cif-code.def (OVERWRITABLE): Fix typo and move around.\n\t(TARGET_OPTIMIZATION_MISMATCH): Delete.\n\t(EH_PERSONALITY): Fix typo.\n\t(NON_CALL_EXCEPTIONS): Fix message.\n\t(OPTIMIZATION_MISMATCH): Adjust message.\n\t* ipa-inline.c (can_inline_edge_p): Use CIF_OPTIMIZATION_MISMATCH.\n\nFrom-SVN: r176488", "tree": {"sha": "acfff5747e5706ba144d22fcf182ee50bac43704", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/acfff5747e5706ba144d22fcf182ee50bac43704"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/fd811f03425ed77208a00c3fccefb2e960e052a9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fd811f03425ed77208a00c3fccefb2e960e052a9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fd811f03425ed77208a00c3fccefb2e960e052a9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fd811f03425ed77208a00c3fccefb2e960e052a9/comments", "author": null, "committer": null, "parents": [{"sha": "77e0bf4e0799ef5080bb6b6f0e26a661417fe7fb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/77e0bf4e0799ef5080bb6b6f0e26a661417fe7fb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/77e0bf4e0799ef5080bb6b6f0e26a661417fe7fb"}], "stats": {"total": 48, "additions": 27, "deletions": 21}, "files": [{"sha": "1dd9ca8e12ad82a488d7987bbdcca5202f4955ee", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fd811f03425ed77208a00c3fccefb2e960e052a9/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fd811f03425ed77208a00c3fccefb2e960e052a9/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=fd811f03425ed77208a00c3fccefb2e960e052a9", "patch": "@@ -1,3 +1,12 @@\n+2011-07-19  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* cif-code.def (OVERWRITABLE): Fix typo and move around.\n+\t(TARGET_OPTIMIZATION_MISMATCH): Delete.\n+\t(EH_PERSONALITY): Fix typo.\n+\t(NON_CALL_EXCEPTIONS): Fix message.\n+\t(OPTIMIZATION_MISMATCH): Adjust message.\n+\t* ipa-inline.c (can_inline_edge_p): Use CIF_OPTIMIZATION_MISMATCH.\n+\n 2011-07-19  Ian Lance Taylor  <iant@google.com>\n \n \t* doc/install.texi (Configuration): Document"}, {"sha": "f2d3551c378be01ddd4888bd4851c7b7fb1c473e", "filename": "gcc/cif-code.def", "status": "modified", "additions": 17, "deletions": 20, "changes": 37, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fd811f03425ed77208a00c3fccefb2e960e052a9/gcc%2Fcif-code.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fd811f03425ed77208a00c3fccefb2e960e052a9/gcc%2Fcif-code.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcif-code.def?ref=fd811f03425ed77208a00c3fccefb2e960e052a9", "patch": "@@ -1,7 +1,7 @@\n /* This file contains the definitions of the cgraph_inline_failed_t\n    enums used in GCC.\n \n-   Copyright (C) 2008, 2010 Free Software Foundation, Inc.\n+   Copyright (C) 2008, 2010, 2011 Free Software Foundation, Inc.\n    Contributed by Doug Kwan <dougkwan@google.com>\n \n This file is part of GCC.\n@@ -35,19 +35,22 @@ DEFCIFCODE(UNSPECIFIED , \"\")\n \n /* Function has not be considered for inlining.  This is the code for\n    functions that have not been rejected for inlining yet.  */\n-DEFCIFCODE(FUNCTION_NOT_CONSIDERED,\n-\t   N_(\"function not considered for inlining\"))\n+DEFCIFCODE(FUNCTION_NOT_CONSIDERED, N_(\"function not considered for inlining\"))\n \n /* Inlining failed owing to unavailable function body.  */\n DEFCIFCODE(BODY_NOT_AVAILABLE, N_(\"function body not available\"))\n \n+/* Extern inline function that has been redefined.  */\n DEFCIFCODE(REDEFINED_EXTERN_INLINE,\n-           N_(\"redefined extern inline functions are not considered for \"\n-              \"inlining\"))\n+\t   N_(\"redefined extern inline functions are not considered for \"\n+\t      \"inlining\"))\n \n /* Function is not inlinable.  */\n DEFCIFCODE(FUNCTION_NOT_INLINABLE, N_(\"function not inlinable\"))\n \n+/* Function is not overwritable.  */\n+DEFCIFCODE(OVERWRITABLE, N_(\"function body can be overwritten at link time\"))\n+\n /* Function is not an inlining candidate.  */\n DEFCIFCODE(FUNCTION_NOT_INLINE_CANDIDATE, N_(\"function not inline candidate\"))\n \n@@ -69,18 +72,15 @@ DEFCIFCODE(RECURSIVE_INLINING, N_(\"recursive inlining\"))\n /* Call is unlikely.  */\n DEFCIFCODE(UNLIKELY_CALL, N_(\"call is unlikely and code size would grow\"))\n \n-/* Function is not declared as an inline.  */\n+/* Function is not declared as inline.  */\n DEFCIFCODE(NOT_DECLARED_INLINED,\n \t   N_(\"function not declared inline and code size would grow\"))\n \n /* Inlining suppressed due to size optimization.  */\n DEFCIFCODE(OPTIMIZING_FOR_SIZE,\n \t   N_(\"optimizing for size and code size would grow\"))\n \n-/* Inlining failed because of mismatched options or arguments.  */\n-DEFCIFCODE(TARGET_OPTION_MISMATCH, N_(\"target specific option mismatch\"))\n-DEFCIFCODE(TARGET_OPTIMIZATION_MISMATCH,\n-\t   N_(\"optimization level attribute mismatch\"))\n+/* Caller and callee disagree on the arguments.  */\n DEFCIFCODE(MISMATCHED_ARGUMENTS, N_(\"mismatched arguments\"))\n \n /* Call was originally indirect.  */\n@@ -92,17 +92,14 @@ DEFCIFCODE(INDIRECT_UNKNOWN_CALL,\n \t   N_(\"indirect function call with a yet undetermined callee\"))\n \n /* We can't inline different EH personalities together.  */\n-DEFCIFCODE(EH_PERSONALITY,\n-\t   N_(\"excepion handling personality mismatch\"))\n+DEFCIFCODE(EH_PERSONALITY, N_(\"exception handling personality mismatch\"))\n \n-/* Don't inline if the callee can throw non-call exceptions but the\n+/* We can't inline if the callee can throw non-call exceptions but the\n    caller cannot.  */\n-DEFCIFCODE(NON_CALL_EXCEPTIONS,\n-\t   N_(\"excepion handling personality mismatch\"))\n+DEFCIFCODE(NON_CALL_EXCEPTIONS, N_(\"non-call exception handling mismatch\"))\n \n-/* Don't inline if the callee can throw non-call exceptions but the\n-   caller cannot.  */\n-DEFCIFCODE(OPTIMIZATION_MISMATCH,\n-\t   N_(\"optimization mode mismatch\"))\n+/* We can't inline because of mismatched target specific options.  */\n+DEFCIFCODE(TARGET_OPTION_MISMATCH, N_(\"target specific option mismatch\"))\n \n-DEFCIFCODE(OVERWRITABLE, N_(\"function body can be overwriten at linktime\"))\n+/* We can't inline because of mismatched optimization levels.  */\n+DEFCIFCODE(OPTIMIZATION_MISMATCH, N_(\"optimization level attribute mismatch\"))"}, {"sha": "e0cb632613f587bd9fbb2baa47966422ca4af1e7", "filename": "gcc/ipa-inline.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fd811f03425ed77208a00c3fccefb2e960e052a9/gcc%2Fipa-inline.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fd811f03425ed77208a00c3fccefb2e960e052a9/gcc%2Fipa-inline.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fipa-inline.c?ref=fd811f03425ed77208a00c3fccefb2e960e052a9", "patch": "@@ -323,7 +323,7 @@ can_inline_edge_p (struct cgraph_edge *e, bool report)\n \t  /* gcc.dg/pr43564.c.  Look at forced inline even in -O0.  */\n \t  && !DECL_DISREGARD_INLINE_LIMITS (e->callee->decl))\n \t{\n-          e->inline_failed = CIF_TARGET_OPTIMIZATION_MISMATCH;\n+\t  e->inline_failed = CIF_OPTIMIZATION_MISMATCH;\n \t  inlinable = false;\n \t}\n     }"}]}