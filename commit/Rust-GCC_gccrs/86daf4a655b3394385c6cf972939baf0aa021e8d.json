{"sha": "86daf4a655b3394385c6cf972939baf0aa021e8d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODZkYWY0YTY1NWIzMzk0Mzg1YzZjZjk3MjkzOWJhZjBhYTAyMWU4ZA==", "commit": {"author": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "1993-01-03T19:06:42Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "1993-01-03T19:06:42Z"}, "message": "pa.h (INITIAL_FRAME_POINTER_OFFSET): compute_frame_size () now does the whole calculation, including rounding.\n\n\t* pa.h \t(INITIAL_FRAME_POINTER_OFFSET): compute_frame_size ()\n\tnow does the whole calculation, including rounding.\n\t(FUNCTION_PROLOGUE, FUNCTION_EPILOGUE): Don't pass leaf_function\n\tto output_function_{prologue,epilogue}.\n\t(DELAY_SLOTS_FOR_EPILOGUE): Call hppa_epilogue_delay_slots ().\n\nFrom-SVN: r3073", "tree": {"sha": "a83972c9eaac2bd29a0a819c68cc173cb80f3163", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a83972c9eaac2bd29a0a819c68cc173cb80f3163"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/86daf4a655b3394385c6cf972939baf0aa021e8d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/86daf4a655b3394385c6cf972939baf0aa021e8d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/86daf4a655b3394385c6cf972939baf0aa021e8d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/86daf4a655b3394385c6cf972939baf0aa021e8d/comments", "author": null, "committer": null, "parents": [{"sha": "2b41935c9ecbe7b4d65803be890dd255789901f0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2b41935c9ecbe7b4d65803be890dd255789901f0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2b41935c9ecbe7b4d65803be890dd255789901f0"}], "stats": {"total": 10, "additions": 5, "deletions": 5}, "files": [{"sha": "ee6745e5ea490b44002f7fb67656e6ccd7cf95da", "filename": "gcc/config/pa/pa.h", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/86daf4a655b3394385c6cf972939baf0aa021e8d/gcc%2Fconfig%2Fpa%2Fpa.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/86daf4a655b3394385c6cf972939baf0aa021e8d/gcc%2Fconfig%2Fpa%2Fpa.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fpa%2Fpa.h?ref=86daf4a655b3394385c6cf972939baf0aa021e8d", "patch": "@@ -428,8 +428,7 @@ extern int leaf_function;\n    it's not, there's no point in trying to eliminate the\n    frame pointer.  If it is a leaf function, we guessed right!  */\n #define INITIAL_FRAME_POINTER_OFFSET(VAR) \\\n-  do { int __fsize = compute_frame_size (get_frame_size (), 1, 0) + 32;\t\\\n-       (VAR) = -(TARGET_SNAKE ? (__fsize + 63) & ~63 : __fsize); } while (0)\n+  do {(VAR) = - compute_frame_size (get_frame_size (), 0);} while (0)\n \n /* Base register for access to arguments of the function.  */\n #define ARG_POINTER_REGNUM 4\n@@ -891,7 +890,7 @@ extern int apparent_fsize;\n    to do this is made in regclass.c.  */\n \n #define FUNCTION_PROLOGUE(FILE, SIZE) \\\n-  output_function_prologue (FILE, SIZE, leaf_function)\n+  output_function_prologue (FILE, SIZE)\n \n /* Output assembler code to FILE to increment profiler label # LABELNO\n    for profiling a function entry.\n@@ -933,8 +932,9 @@ extern int current_function_pretend_args_size;\n extern union tree_node *current_function_decl;\n \n #define FUNCTION_EPILOGUE(FILE, SIZE)\t\t\t\\\n-  output_function_epilogue (FILE, SIZE, leaf_function)\n-#define DELAY_SLOTS_FOR_EPILOGUE 1\n+  output_function_epilogue (FILE, SIZE)\n+#define DELAY_SLOTS_FOR_EPILOGUE hppa_epilogue_delay_slots ()\n+\n #define ELIGIBLE_FOR_EPILOGUE_DELAY(trial, slots_filled)\t\\\n   eligible_for_epilogue_delay (trial, slots_filled)\n "}]}