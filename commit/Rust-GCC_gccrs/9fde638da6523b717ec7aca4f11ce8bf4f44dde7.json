{"sha": "9fde638da6523b717ec7aca4f11ce8bf4f44dde7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OWZkZTYzOGRhNjUyM2I3MTdlYzdhY2E0ZjExY2U4YmY0ZjQ0ZGRlNw==", "commit": {"author": {"name": "Robert Dewar", "email": "dewar@adacore.com", "date": "2011-08-03T10:17:45Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2011-08-03T10:17:45Z"}, "message": "prj-proc.adb, [...]: Minor reformatting.\n\n2011-08-03  Robert Dewar  <dewar@adacore.com>\n\n\t* prj-proc.adb, exp_util.ads, exp_ch9.adb, make.adb, prj-ext.adb,\n\tprj-ext.ads, alfa.ads, sem_ch4.adb, makeutl.adb, makeutl.ads,\n\tlib-xref-alfa.adb, sem_cat.adb, exp_dist.adb, get_alfa.adb,\n\tprj-env.adb, prj-env.ads, prj-tree.adb, alfa.ads: Minor reformatting.\n\nFrom-SVN: r177260", "tree": {"sha": "41abafb12cf236ecdac96d64bfd1687099cd01c1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/41abafb12cf236ecdac96d64bfd1687099cd01c1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9fde638da6523b717ec7aca4f11ce8bf4f44dde7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9fde638da6523b717ec7aca4f11ce8bf4f44dde7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9fde638da6523b717ec7aca4f11ce8bf4f44dde7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9fde638da6523b717ec7aca4f11ce8bf4f44dde7/comments", "author": null, "committer": null, "parents": [{"sha": "95eb8b69e6289ad1bc196915ba741f035817ce4b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/95eb8b69e6289ad1bc196915ba741f035817ce4b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/95eb8b69e6289ad1bc196915ba741f035817ce4b"}], "stats": {"total": 188, "additions": 111, "deletions": 77}, "files": [{"sha": "7cb3c194feb6b06a1cde1d3e238068c3c219a4ae", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9fde638da6523b717ec7aca4f11ce8bf4f44dde7/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9fde638da6523b717ec7aca4f11ce8bf4f44dde7/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=9fde638da6523b717ec7aca4f11ce8bf4f44dde7", "patch": "@@ -1,3 +1,10 @@\n+2011-08-03  Robert Dewar  <dewar@adacore.com>\n+\n+\t* prj-proc.adb, exp_util.ads, exp_ch9.adb, make.adb, prj-ext.adb,\n+\tprj-ext.ads, alfa.ads, sem_ch4.adb, makeutl.adb, makeutl.ads,\n+\tlib-xref-alfa.adb, sem_cat.adb, exp_dist.adb, get_alfa.adb,\n+\tprj-env.adb, prj-env.ads, prj-tree.adb, alfa.ads: Minor reformatting.\n+\n 2011-08-03  Javier Miranda  <miranda@adacore.com>\n \n \t* exp_util.adb, sem_aux.adb, exp_util.ads, sem_aux.ads:"}, {"sha": "ec171bba367bce9bfab64fbd0184c81cf7fb64f0", "filename": "gcc/ada/alfa.ads", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9fde638da6523b717ec7aca4f11ce8bf4f44dde7/gcc%2Fada%2Falfa.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9fde638da6523b717ec7aca4f11ce8bf4f44dde7/gcc%2Fada%2Falfa.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Falfa.ads?ref=9fde638da6523b717ec7aca4f11ce8bf4f44dde7", "patch": "@@ -91,6 +91,9 @@ package ALFA is\n \n    --    FS . scope line type col entity (-> spec-file . spec-scope)?\n \n+   --      What is the ? marke here, is it part of the actual syntax, or is\n+   --      it a query about a problem, in which case it should be ???\n+\n    --      scope is the ones-origin scope number for the current file (e.g. 2 =\n    --      reference to the second FS line in this FD block).\n "}, {"sha": "6500ea65c6ab740c85dd2f0eefa32b13d8a55c8c", "filename": "gcc/ada/exp_ch9.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9fde638da6523b717ec7aca4f11ce8bf4f44dde7/gcc%2Fada%2Fexp_ch9.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9fde638da6523b717ec7aca4f11ce8bf4f44dde7/gcc%2Fada%2Fexp_ch9.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch9.adb?ref=9fde638da6523b717ec7aca4f11ce8bf4f44dde7", "patch": "@@ -3797,7 +3797,7 @@ package body Exp_Ch9 is\n                     Prefix =>\n                       New_Reference_To (Defining_Identifier (N_Node), Loc)));\n \n-               --  If it is a vm_by_copy_actual, copy it to a new variable\n+               --  If it is a VM_By_Copy_Actual, copy it to a new variable\n \n                elsif Is_VM_By_Copy_Actual (Actual) then\n                   N_Node :="}, {"sha": "5f6180bdc2125498ef0d18a8e792b0a60e7c5b95", "filename": "gcc/ada/exp_dist.adb", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9fde638da6523b717ec7aca4f11ce8bf4f44dde7/gcc%2Fada%2Fexp_dist.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9fde638da6523b717ec7aca4f11ce8bf4f44dde7/gcc%2Fada%2Fexp_dist.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_dist.adb?ref=9fde638da6523b717ec7aca4f11ce8bf4f44dde7", "patch": "@@ -1030,6 +1030,10 @@ package body Exp_Dist is\n          pragma Warnings (Off, Subp_Str);\n \n       begin\n+         --  Disable expansion of stubs if serious errors have been diagnosed,\n+         --  because otherwise some illegal remote subprogram declarations\n+         --  could cause cascaded errors in stubs.\n+\n          if Serious_Errors_Detected /= 0 then\n             return;\n          end if;\n@@ -3841,6 +3845,10 @@ package body Exp_Dist is\n             pragma Warnings (Off, Subp_Val);\n \n          begin\n+            --  Disable expansion of stubs if serious errors have been\n+            --  diagnosed, because otherwise some illegal remote subprogram\n+            --  declarations could cause cascaded errors in stubs.\n+\n             if Serious_Errors_Detected /= 0 then\n                return;\n             end if;\n@@ -6849,6 +6857,10 @@ package body Exp_Dist is\n             Proxy_Obj_Addr : Entity_Id;\n \n          begin\n+            --  Disable expansion of stubs if serious errors have been\n+            --  diagnosed, because otherwise some illegal remote subprogram\n+            --  declarations could cause cascaded errors in stubs.\n+\n             if Serious_Errors_Detected /= 0 then\n                return;\n             end if;"}, {"sha": "ae938a0350461287de953f9e4ac8ba5ba0ef8b67", "filename": "gcc/ada/exp_util.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9fde638da6523b717ec7aca4f11ce8bf4f44dde7/gcc%2Fada%2Fexp_util.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9fde638da6523b717ec7aca4f11ce8bf4f44dde7/gcc%2Fada%2Fexp_util.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_util.ads?ref=9fde638da6523b717ec7aca4f11ce8bf4f44dde7", "patch": "@@ -539,7 +539,7 @@ package Exp_Util is\n \n    function Is_VM_By_Copy_Actual (N : Node_Id) return Boolean;\n    --  Returns True if we are compiling on VM targets and N is a node that\n-   --  requires to be passed by copy in these targets.\n+   --  requires pass-by-copy in these targets.\n \n    procedure Kill_Dead_Code (N : Node_Id; Warn : Boolean := False);\n    --  N represents a node for a section of code that is known to be dead. Any"}, {"sha": "0fc967a0b3d30ef6921eea20d8573a972c7a9551", "filename": "gcc/ada/get_alfa.adb", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9fde638da6523b717ec7aca4f11ce8bf4f44dde7/gcc%2Fada%2Fget_alfa.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9fde638da6523b717ec7aca4f11ce8bf4f44dde7/gcc%2Fada%2Fget_alfa.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fget_alfa.adb?ref=9fde638da6523b717ec7aca4f11ce8bf4f44dde7", "patch": "@@ -290,6 +290,7 @@ begin\n                   Spec_File := Get_Nat;\n                   Check ('.');\n                   Spec_Scope := Get_Nat;\n+\n                else\n                   Spec_File  := 0;\n                   Spec_Scope := 0;"}, {"sha": "d325df5ba04303097889e0aceb523da9621a115a", "filename": "gcc/ada/lib-xref-alfa.adb", "status": "modified", "additions": 5, "deletions": 3, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9fde638da6523b717ec7aca4f11ce8bf4f44dde7/gcc%2Fada%2Flib-xref-alfa.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9fde638da6523b717ec7aca4f11ce8bf4f44dde7/gcc%2Fada%2Flib-xref-alfa.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flib-xref-alfa.adb?ref=9fde638da6523b717ec7aca4f11ce8bf4f44dde7", "patch": "@@ -238,6 +238,7 @@ package body ALFA is\n          for S in From .. ALFA_Scope_Table.Last loop\n             declare\n                E : Entity_Id renames ALFA_Scope_Table.Table (S).Scope_Entity;\n+\n             begin\n                if Lib.Get_Source_Unit (E) = U then\n                   ALFA_Scope_Table.Table (S).Scope_Num := Count;\n@@ -819,9 +820,11 @@ package body ALFA is\n          for S in ALFA_Scope_Table.First .. ALFA_Scope_Table.Last loop\n             declare\n                Srec : ALFA_Scope_Record renames ALFA_Scope_Table.Table (S);\n+\n                Body_Entity : Entity_Id;\n                Spec_Entity : Entity_Id;\n                Spec_Scope  : Scope_Index;\n+\n             begin\n                if Ekind (Srec.Scope_Entity) = E_Subprogram_Body then\n                   Body_Entity := Parent (Parent (Srec.Scope_Entity));\n@@ -850,7 +853,6 @@ package body ALFA is\n                end if;\n             end;\n          end loop;\n-\n       end;\n \n       --  Generate cross reference ALFA information\n@@ -864,8 +866,8 @@ package body ALFA is\n \n    function Entity_Hash (E : Entity_Id) return Entity_Hashed_Range is\n    begin\n-      return Entity_Hashed_Range\n-        (E mod (Entity_Id (Entity_Hashed_Range'Last) + 1));\n+      return\n+        Entity_Hashed_Range (E mod (Entity_Id (Entity_Hashed_Range'Last) + 1));\n    end Entity_Hash;\n \n    -----------------------------------------"}, {"sha": "d62ec018ac38a1d4cac9b48f0b90a2a32f62d4c2", "filename": "gcc/ada/make.adb", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9fde638da6523b717ec7aca4f11ce8bf4f44dde7/gcc%2Fada%2Fmake.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9fde638da6523b717ec7aca4f11ce8bf4f44dde7/gcc%2Fada%2Fmake.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fmake.adb?ref=9fde638da6523b717ec7aca4f11ce8bf4f44dde7", "patch": "@@ -2311,10 +2311,10 @@ package body Make is\n \n                   Switches :=\n                     Switches_Of\n-                      (Source_File      => Source_File,\n-                       Project          => Arguments_Project,\n-                       In_Package       => Compiler_Package,\n-                       Allow_ALI        => False);\n+                      (Source_File => Source_File,\n+                       Project     => Arguments_Project,\n+                       In_Package  => Compiler_Package,\n+                       Allow_ALI   => False);\n \n                end if;\n "}, {"sha": "63731dd480b489afd52335e249da6d5196953ce0", "filename": "gcc/ada/makeutl.adb", "status": "modified", "additions": 9, "deletions": 7, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9fde638da6523b717ec7aca4f11ce8bf4f44dde7/gcc%2Fada%2Fmakeutl.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9fde638da6523b717ec7aca4f11ce8bf4f44dde7/gcc%2Fada%2Fmakeutl.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fmakeutl.adb?ref=9fde638da6523b717ec7aca4f11ce8bf4f44dde7", "patch": "@@ -679,13 +679,13 @@ package body Makeutl is\n    ------------------\n \n    procedure Get_Switches\n-     (Source_File  : File_Name_Type;\n-      Source_Lang  : Name_Id;\n-      Source_Prj   : Project_Id;\n-      Pkg_Name     : Name_Id;\n-      Project_Tree : Project_Tree_Ref;\n-      Value        : out Variable_Value;\n-      Is_Default   : out Boolean;\n+     (Source_File         : File_Name_Type;\n+      Source_Lang         : Name_Id;\n+      Source_Prj          : Project_Id;\n+      Pkg_Name            : Name_Id;\n+      Project_Tree        : Project_Tree_Ref;\n+      Value               : out Variable_Value;\n+      Is_Default          : out Boolean;\n       Test_Without_Suffix : Boolean := False;\n       Check_ALI_Suffix    : Boolean := False)\n    is\n@@ -697,6 +697,7 @@ package body Makeutl is\n                      In_Packages => Project.Decl.Packages,\n                      In_Tree     => Project_Tree);\n       Lang : Language_Ptr;\n+\n    begin\n       Is_Default := False;\n \n@@ -724,6 +725,7 @@ package body Makeutl is\n                Spec_Suffix : String   := Get_Name_String (Naming.Spec_Suffix);\n                Body_Suffix : String   := Get_Name_String (Naming.Body_Suffix);\n                Truncated   : Boolean  := False;\n+\n             begin\n                Canonical_Case_File_Name (Spec_Suffix);\n                Canonical_Case_File_Name (Body_Suffix);"}, {"sha": "325dd830d0e3fe9f02c450ddd6ac32c05e2efa79", "filename": "gcc/ada/makeutl.ads", "status": "modified", "additions": 17, "deletions": 18, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9fde638da6523b717ec7aca4f11ce8bf4f44dde7/gcc%2Fada%2Fmakeutl.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9fde638da6523b717ec7aca4f11ce8bf4f44dde7/gcc%2Fada%2Fmakeutl.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fmakeutl.ads?ref=9fde638da6523b717ec7aca4f11ce8bf4f44dde7", "patch": "@@ -155,26 +155,25 @@ package Makeutl is\n       Value        : out Variable_Value;\n       Is_Default   : out Boolean);\n    procedure Get_Switches\n-     (Source_File  : File_Name_Type;\n-      Source_Lang  : Name_Id;\n-      Source_Prj   : Project_Id;\n-      Pkg_Name     : Name_Id;\n-      Project_Tree : Project_Tree_Ref;\n-      Value        : out Variable_Value;\n-      Is_Default   : out Boolean;\n+     (Source_File         : File_Name_Type;\n+      Source_Lang         : Name_Id;\n+      Source_Prj          : Project_Id;\n+      Pkg_Name            : Name_Id;\n+      Project_Tree        : Project_Tree_Ref;\n+      Value               : out Variable_Value;\n+      Is_Default          : out Boolean;\n       Test_Without_Suffix : Boolean := False;\n       Check_ALI_Suffix    : Boolean := False);\n    --  Compute the switches (Compilation switches for instance) for the given\n    --  file. This checks various attributes to see if there are file specific\n    --  switches, or else defaults on the switches for the corresponding\n    --  language. Is_Default is set to False if there were file-specific\n-   --  switches Source_File can be set to No_File to force retrieval of\n-   --  the default switches.\n-   --  If Test_Without_Suffix is True, and there is no\n-   --  \" for Switches(Source_File) use\", then this procedure also tests without\n-   --  the extension of the filename.\n-   --  If Test_Without_Suffix is True and Check_ALI_Suffix is True, then we\n-   --  also replace the file extension with \".ali\" when testing.\n+   --  switches Source_File can be set to No_File to force retrieval of the\n+   --  default switches. If Test_Without_Suffix is True, and there is no \" for\n+   --  Switches(Source_File) use\", then this procedure also tests without the\n+   --  extension of the filename. If Test_Without_Suffix is True and\n+   --  Check_ALI_Suffix is True, then we also replace the file extension with\n+   --  \".ali\" when testing.\n \n    function Linker_Options_Switches\n      (Project  : Project_Id;\n@@ -183,10 +182,6 @@ package Makeutl is\n    --  of project Project, in project tree In_Tree, and in the projects that\n    --  it imports directly or indirectly, and returns the result.\n \n-   --  Package Mains is used to store the mains specified on the command line\n-   --  and to retrieve them when a project file is used, to verify that the\n-   --  files exist and that they belong to a project file.\n-\n    function Unit_Index_Of (ALI_File : File_Name_Type) return Int;\n    --  Find the index of a unit in a source file. Return zero if the file is\n    --  not a multi-unit source file.\n@@ -211,6 +206,10 @@ package Makeutl is\n    -- Mains --\n    -----------\n \n+   --  Package Mains is used to store the mains specified on the command line\n+   --  and to retrieve them when a project file is used, to verify that the\n+   --  files exist and that they belong to a project file.\n+\n    --  Mains are stored in a table. An index is used to retrieve the mains\n    --  from the table.\n "}, {"sha": "222efe021bf9a8872e15e22766a9ed68b99b314c", "filename": "gcc/ada/prj-env.adb", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9fde638da6523b717ec7aca4f11ce8bf4f44dde7/gcc%2Fada%2Fprj-env.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9fde638da6523b717ec7aca4f11ce8bf4f44dde7/gcc%2Fada%2Fprj-env.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-env.adb?ref=9fde638da6523b717ec7aca4f11ce8bf4f44dde7", "patch": "@@ -2204,11 +2204,13 @@ package body Prj.Env is\n    procedure Copy (From : Project_Search_Path; To : out Project_Search_Path) is\n    begin\n       Free (To);\n+\n       if From.Path /= null then\n          To.Path := new String'(From.Path.all);\n       end if;\n \n-      --  No need to copy the Cache, it will be recomputed as needed.\n+      --  No need to copy the Cache, it will be recomputed as needed\n+\n    end Copy;\n \n end Prj.Env;"}, {"sha": "99bd88064fe60204db679ec038797673c5ea3424", "filename": "gcc/ada/prj-env.ads", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9fde638da6523b717ec7aca4f11ce8bf4f44dde7/gcc%2Fada%2Fprj-env.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9fde638da6523b717ec7aca4f11ce8bf4f44dde7/gcc%2Fada%2Fprj-env.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-env.ads?ref=9fde638da6523b717ec7aca4f11ce8bf4f44dde7", "patch": "@@ -241,7 +241,7 @@ private\n    end record;\n \n    No_Project_Search_Path : constant Project_Search_Path :=\n-     (Path  => null,\n-      Cache => Projects_Paths.Nil);\n+                              (Path  => null,\n+                               Cache => Projects_Paths.Nil);\n \n end Prj.Env;"}, {"sha": "5d49fa4438adc791f6f6fdcc5b7d5fe222d2f848", "filename": "gcc/ada/prj-ext.adb", "status": "modified", "additions": 10, "deletions": 9, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9fde638da6523b717ec7aca4f11ce8bf4f44dde7/gcc%2Fada%2Fprj-ext.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9fde638da6523b717ec7aca4f11ce8bf4f44dde7/gcc%2Fada%2Fprj-ext.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-ext.adb?ref=9fde638da6523b717ec7aca4f11ce8bf4f44dde7", "patch": "@@ -47,10 +47,10 @@ package body Prj.Ext is\n             N := Name_To_Name_HTable.Get_First (Copy_From.Refs.all);\n             while N /= null loop\n                N2 := new Name_To_Name'\n-                 (Key    => N.Key,\n-                  Value  => N.Value,\n-                  Source => N.Source,\n-                  Next   => null);\n+                           (Key    => N.Key,\n+                            Value  => N.Value,\n+                            Source => N.Source,\n+                            Next   => null);\n                Name_To_Name_HTable.Set (Self.Refs.all, N2);\n                N := Name_To_Name_HTable.Get_Next (Copy_From.Refs.all);\n             end loop;\n@@ -82,9 +82,10 @@ package body Prj.Ext is\n \n       if Source /= External_Source'First then\n          N := Name_To_Name_HTable.Get (Self.Refs.all, Key);\n+\n          if N /= null then\n             if External_Source'Pos (N.Source) <\n-              External_Source'Pos (Source)\n+               External_Source'Pos (Source)\n             then\n                if Current_Verbosity = High then\n                   Debug_Output\n@@ -99,10 +100,10 @@ package body Prj.Ext is\n       Name_Len := Value'Length;\n       Name_Buffer (1 .. Name_Len) := Value;\n       N := new Name_To_Name'\n-        (Key    => Key,\n-         Source => Source,\n-         Value  => Name_Find,\n-         Next   => null);\n+                 (Key    => Key,\n+                  Source => Source,\n+                  Value  => Name_Find,\n+                  Next   => null);\n \n       if Current_Verbosity = High then\n          Debug_Output (\"Add external (\" & External_Name & \") is\", N.Value);"}, {"sha": "01719cf45fb1529746c344fc0d88d0b84c425507", "filename": "gcc/ada/prj-ext.ads", "status": "modified", "additions": 9, "deletions": 10, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9fde638da6523b717ec7aca4f11ce8bf4f44dde7/gcc%2Fada%2Fprj-ext.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9fde638da6523b717ec7aca4f11ce8bf4f44dde7/gcc%2Fada%2Fprj-ext.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-ext.ads?ref=9fde638da6523b717ec7aca4f11ce8bf4f44dde7", "patch": "@@ -58,21 +58,21 @@ package Prj.Ext is\n      (From_Command_Line,\n       From_Environment,\n       From_External_Attribute);\n-   --  Where was the value of an external reference defined ?\n-   --  They are prioritized in that order, so that a user can always use the\n-   --  command line to override a value coming from his environment, or an\n-   --  environment variable to override a value defined in an aggregate project\n-   --  through the \"for External()...\" attribute.\n+   --  Indicates where was the value of an external reference defined. They are\n+   --  prioritized in that order, so that a user can always use the command\n+   --  line to override a value coming from his environment, or an environment\n+   --  variable to override a value defined in an aggregate project through the\n+   --  \"for External()...\" attribute.\n \n    procedure Add\n      (Self          : External_References;\n       External_Name : String;\n       Value         : String;\n       Source        : External_Source := External_Source'First);\n-   --  Add an external reference (or modify an existing one).\n-   --  No overriding is done if the Source's priority is less than the one\n-   --  used to previously set the value of the variable. The default for Source\n-   --  is such that overriding always occurs.\n+   --  Add an external reference (or modify an existing one). No overriding is\n+   --  done if the Source's priority is less than the one used to previously\n+   --  set the value of the variable. The default for Source is such that\n+   --  overriding always occurs.\n \n    function Value_Of\n      (Self          : External_References;\n@@ -92,7 +92,6 @@ package Prj.Ext is\n    --  and free any allocated memory.\n \n private\n-\n    --  Use a Static_HTable, rather than a Simple_HTable\n \n    --  The issue is that we need to be able to copy the contents of the table"}, {"sha": "ac07421eb90ee41934a27217f12edd1d39ac494f", "filename": "gcc/ada/prj-proc.adb", "status": "modified", "additions": 21, "deletions": 17, "changes": 38, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9fde638da6523b717ec7aca4f11ce8bf4f44dde7/gcc%2Fada%2Fprj-proc.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9fde638da6523b717ec7aca4f11ce8bf4f44dde7/gcc%2Fada%2Fprj-proc.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-proc.adb?ref=9fde638da6523b717ec7aca4f11ce8bf4f44dde7", "patch": "@@ -125,18 +125,19 @@ package body Prj.Proc is\n    --  Find the package of Project whose name is With_Name\n \n    procedure Process_Declarative_Items\n-     (Project           : Project_Id;\n-      In_Tree           : Project_Tree_Ref;\n-      From_Project_Node : Project_Node_Id;\n-      Node_Tree         : Project_Node_Tree_Ref;\n-      Env               : Prj.Tree.Environment;\n-      Pkg               : Package_Id;\n-      Item              : Project_Node_Id;\n-      Child_Env         : in out Prj.Tree.Environment;\n+     (Project              : Project_Id;\n+      In_Tree              : Project_Tree_Ref;\n+      From_Project_Node    : Project_Node_Id;\n+      Node_Tree            : Project_Node_Tree_Ref;\n+      Env                  : Prj.Tree.Environment;\n+      Pkg                  : Package_Id;\n+      Item                 : Project_Node_Id;\n+      Child_Env            : in out Prj.Tree.Environment;\n       Can_Modify_Child_Env : Boolean);\n    --  Process declarative items starting with From_Project_Node, and put them\n    --  in declarations Decl. This is a recursive procedure; it calls itself for\n    --  a package declaration or a case construction.\n+   --\n    --  Child_Env is the modified environment after seeing declarations like\n    --  \"for External(...) use\" or \"for Project_Path use\" in aggregate projects.\n    --  It should have been initialized first. This environment can only be\n@@ -158,9 +159,11 @@ package body Prj.Proc is\n    --  as processed, call itself recursively for all imported projects and a\n    --  extended project, if any. Then process the declarative items of the\n    --  project.\n+   --\n    --  Child_Env is the environment created from an aggregate project (new\n    --  external values or project path), and should be initialized before the\n    --  call.\n+   --\n    --  Is_Root_Project should be true only for the project that the user\n    --  explicitly loaded. In the context of aggregate projects, only that\n    --  project is allowed to modify the environment that will be used to load\n@@ -2267,15 +2270,15 @@ package body Prj.Proc is\n \n          if Present (Decl_Item) then\n             Process_Declarative_Items\n-              (Project                => Project,\n-               In_Tree                => In_Tree,\n-               From_Project_Node      => From_Project_Node,\n-               Node_Tree              => Node_Tree,\n-               Env                    => Env,\n-               Pkg                    => Pkg,\n-               Item                   => Decl_Item,\n-               Child_Env              => Child_Env,\n-               Can_Modify_Child_Env   => Can_Modify_Child_Env);\n+              (Project              => Project,\n+               In_Tree              => In_Tree,\n+               From_Project_Node    => From_Project_Node,\n+               Node_Tree            => Node_Tree,\n+               Env                  => Env,\n+               Pkg                  => Pkg,\n+               Item                 => Decl_Item,\n+               Child_Env            => Child_Env,\n+               Can_Modify_Child_Env => Can_Modify_Child_Env);\n          end if;\n       end Process_Case_Construction;\n \n@@ -2331,6 +2334,7 @@ package body Prj.Proc is\n       Reset_Tree             : Boolean := True)\n    is\n       Child_Env : Prj.Tree.Environment;\n+\n    begin\n       if Reset_Tree then\n "}, {"sha": "aee8da5c48c64d06dc90bdf902ca2e2e56c4563a", "filename": "gcc/ada/prj-tree.adb", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9fde638da6523b717ec7aca4f11ce8bf4f44dde7/gcc%2Fada%2Fprj-tree.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9fde638da6523b717ec7aca4f11ce8bf4f44dde7/gcc%2Fada%2Fprj-tree.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-tree.adb?ref=9fde638da6523b717ec7aca4f11ce8bf4f44dde7", "patch": "@@ -2270,8 +2270,7 @@ package body Prj.Tree is\n    begin\n       pragma Assert\n         (Present (Node)\n-          and then\n-             In_Tree.Project_Nodes.Table (Node).Kind = N_With_Clause);\n+          and then In_Tree.Project_Nodes.Table (Node).Kind = N_With_Clause);\n       In_Tree.Project_Nodes.Table (Node).Flag1 := True;\n    end Set_Is_Not_Last_In_List;\n "}, {"sha": "7b0a1fb822479bc8db26f44e8772d26b268e2ca3", "filename": "gcc/ada/sem_cat.adb", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9fde638da6523b717ec7aca4f11ce8bf4f44dde7/gcc%2Fada%2Fsem_cat.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9fde638da6523b717ec7aca4f11ce8bf4f44dde7/gcc%2Fada%2Fsem_cat.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_cat.adb?ref=9fde638da6523b717ec7aca4f11ce8bf4f44dde7", "patch": "@@ -365,6 +365,7 @@ package body Sem_Cat is\n       Component : Entity_Id;\n       Comp_Type : Entity_Id;\n       U_Typ     : constant Entity_Id := Underlying_Type (Typ);\n+\n    begin\n       if No (U_Typ) then\n          return False;\n@@ -628,11 +629,13 @@ package body Sem_Cat is\n \n    function No_External_Streaming (E : Entity_Id) return Boolean is\n       U_E : constant Entity_Id := Underlying_Type (E);\n+\n    begin\n       if No (U_E) then\n          return False;\n \n       elsif Has_Read_Write_Attributes (E) then\n+\n          --  Note: availability of stream attributes is tested on E, not U_E.\n          --  There may be stream attributes defined on U_E that are not visible\n          --  at the place where support of external streaming is tested."}, {"sha": "6dacae55ca79489cc292cf60d715c6efaec7ac03", "filename": "gcc/ada/sem_ch4.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9fde638da6523b717ec7aca4f11ce8bf4f44dde7/gcc%2Fada%2Fsem_ch4.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9fde638da6523b717ec7aca4f11ce8bf4f44dde7/gcc%2Fada%2Fsem_ch4.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch4.adb?ref=9fde638da6523b717ec7aca4f11ce8bf4f44dde7", "patch": "@@ -7263,8 +7263,8 @@ package body Sem_Ch4 is\n \n               or else\n                 (Ekind (Typ) = E_Anonymous_Access_Type\n-                 and then\n-                   Base_Type (Designated_Type (Typ)) = Base_Type (Corr_Type));\n+                  and then\n+                    Base_Type (Designated_Type (Typ)) = Base_Type (Corr_Type));\n          end Valid_First_Argument_Of;\n \n       --  Start of processing for Try_Primitive_Operation"}]}