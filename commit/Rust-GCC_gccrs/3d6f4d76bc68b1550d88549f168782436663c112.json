{"sha": "3d6f4d76bc68b1550d88549f168782436663c112", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2Q2ZjRkNzZiYzY4YjE1NTBkODg1NDlmMTY4NzgyNDM2NjYzYzExMg==", "commit": {"author": {"name": "Zack Weinberg", "email": "zackw@stanford.edu", "date": "2000-11-19T19:02:50Z"}, "committer": {"name": "Zack Weinberg", "email": "zack@gcc.gnu.org", "date": "2000-11-19T19:02:50Z"}, "message": "texi2pod.pl: - Add real command line parsing.\n\n\t* texi2pod.pl:\n\t  - Add real command line parsing.\n\t  - Support @ifset, @ifclear, @set, @value, -D switch.\n\t  - Support @sc.  Improve handling of @ref and friends.\n\t  - Discard @subsection, @need, @node lines.\n\t  - Un-nest font changes to match texinfo semantics.\n\t  - Handle @{ and @}.  Oops.\n\t  - Don't emit E<> directives inside verbatim blocks.\n\nFrom-SVN: r37569", "tree": {"sha": "189234f1dd357f26c6ab7e7e98a3a629b65a8ff0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/189234f1dd357f26c6ab7e7e98a3a629b65a8ff0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3d6f4d76bc68b1550d88549f168782436663c112", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3d6f4d76bc68b1550d88549f168782436663c112", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3d6f4d76bc68b1550d88549f168782436663c112", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3d6f4d76bc68b1550d88549f168782436663c112/comments", "author": null, "committer": null, "parents": [{"sha": "564b42a1442e78971d3e26ba8ad1fcc479190d11", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/564b42a1442e78971d3e26ba8ad1fcc479190d11", "html_url": "https://github.com/Rust-GCC/gccrs/commit/564b42a1442e78971d3e26ba8ad1fcc479190d11"}], "stats": {"total": 170, "additions": 131, "deletions": 39}, "files": [{"sha": "8f5dfe54cd4a6d7f5e2f27103e4241084421590c", "filename": "contrib/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3d6f4d76bc68b1550d88549f168782436663c112/contrib%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3d6f4d76bc68b1550d88549f168782436663c112/contrib%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/contrib%2FChangeLog?ref=3d6f4d76bc68b1550d88549f168782436663c112", "patch": "@@ -1,3 +1,14 @@\n+2000-11-19  Zack Weinberg  <zackw@stanford.edu>\n+\n+\t* texi2pod.pl:\n+\t  - Add real command line parsing.\n+\t  - Support @ifset, @ifclear, @set, @value, -D switch.\n+\t  - Support @sc.  Improve handling of @ref and friends.\n+\t  - Discard @subsection, @need, @node lines.\n+\t  - Un-nest font changes to match texinfo semantics.\n+\t  - Handle @{ and @}.  Oops.\n+\t  - Don't emit E<> directives inside verbatim blocks.\n+\n 2000-11-12  Bruce Korb  <bkorb@gnu.org>\n \n \t* release: generalize the release script a bit."}, {"sha": "420625b2b2759cfdf1e55ac1fc688c32cdc64060", "filename": "contrib/texi2pod.pl", "status": "modified", "additions": 120, "deletions": 39, "changes": 159, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3d6f4d76bc68b1550d88549f168782436663c112/contrib%2Ftexi2pod.pl", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3d6f4d76bc68b1550d88549f168782436663c112/contrib%2Ftexi2pod.pl", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/contrib%2Ftexi2pod.pl?ref=3d6f4d76bc68b1550d88549f168782436663c112", "patch": "@@ -4,64 +4,147 @@\n # markup to Perl POD format.  It's intended to be used to extract\n # something suitable for a manpage from a Texinfo document.\n \n-$in = $ARGV[0];\n-$out = \"x\";\n-die \"usage: $0 infile outfile\\n\" unless defined $in && defined $out;\n-\n-close STDIN;\n-open(IN,$in);\n-\n $output = 0;\n $ignore = 0;\n+$skipping = 0;\n %sects = ();\n $section = \"\";\n @icstack = ();\n @endwstack = ();\n+@skstack = ();\n $shift = \"\";\n+%defs = ();\n \n-while(<IN>)\n+while($_ = shift)\n+{\n+    if (/^-D(.*)$/) {\n+\tif ($1 ne \"\") {\n+\t    $flag = $1;\n+\t} else {\n+\t    $flag = shift;\n+\t}\n+\tdie \"no flag specified for -D\\n\"\n+\t    unless $flag ne \"\";\n+\tdie \"flags may only contain letters, digits, hyphens, and underscores\\n\"\n+\t    unless $flag =~ /^[a-zA-Z0-9_-]+$/;\n+\t$defs{$flag} = \"\";\n+    } elsif (/^-/) {\n+\tusage();\n+    } else {\n+\t$in = $_, next unless defined $in;\n+\t$out = $_, next unless defined $out;\n+\tusage();\n+    }\n+}\n+\n+if (defined $in) {\n+    open(STDIN, $in) or die \"opening \\\"$in\\\": $!\\n\";\n+}\n+if (defined $out) {\n+    open(STDOUT, \">$out\") or die \"opening \\\"$out\\\": $!\\n\";\n+}\n+\n+while(<STDIN>)\n {\n     chomp;\n-    /^\\@end ignore/ and $ignore = 0, next;\n-    next if $ignore;\n     /^\\@c man begin ([A-Z]+)/ and $sect = $1, $output = 1, next;\n     /^\\@c man end/ and do {\n \t$_ = $section;\n-\ts/</&lt;/g;\n-\ts/>/&gt;/g;\n \n \ts/\\@(?:dfn|var|emph|cite)\\{([^\\}]*)\\}/I<$1>/g;\n \ts/\\@(?:code|kbd)\\{([^\\}]*)\\}/C<$1>/g;\n \ts/\\@(?:samp|strong|key)\\{([^\\}]*)\\}/B<$1>/g;\n+\ts/\\@value\\{([a-zA-Z0-9_-]+)\\}/$defs{$1}/g;\n+\ts/\\@sc\\{([^\\}]*)\\}/\\U$1/g;\n \ts/\\@file\\{([^\\}]*)\\}/F<$1>/g;\n \ts/\\@(?:url|email)\\{([^\\}]*)\\}/E<lt>C<$1>E<rt>/g;\n-\ts/\\@[a-z]?ref\\{(?:[^\\}]*)\\}.?//g;\n-\ts/\\(\\@p[a-z]?ref\\{(?:[^\\}]*)\\}\\).?//g;\n+\ts/\\@xref\\{(?:[^\\}]*)\\}[^.]*.//g;\n+\ts/\\s+\\(\\@p[a-z]?ref\\{(?:[^\\}]*)\\}\\)//g;\n \ts/\\@copyright\\{\\}//g;\n \ts/\\@noindent\\s*//g;\n \ts/\\@refill//g;\n \ts/\\@\\././g;\n \n-\ts/&lt;/E<lt>/g;\n-\ts/&gt;/E<gt>/g;\n+\t# Turn B<blah I<blah> blah> into B<blah> I<blah> B<blah> to\n+\t# match Texinfo semantics of @emph inside @samp.\n+\n \ts/&LT;/</g;\n \ts/&GT;/>/g;\n+\t1 while (s/B<([^<>]*)I<([^>]+)>/B<$1>I<$2>B</g);\n+\t1 while (s/I<([^<>]*)B<([^>]+)>/I<$1>B<$2>I</g);\n+\ts/[BI]<>//g;\n+\ts/([BI])<(\\s+)([^>]+)>/$2$1<$3>/g;\n+\ts/([BI])<([^>]+?)(\\s+)>/$1<$2>$3/g;\n+\n+\ts/&lt;/E<lt>/g;\n+\ts/&gt;/E<gt>/g;\n+\ts/&lbrace;/\\{/g;\n+\ts/&rbrace;/\\}/g;\n \n \t$sects{$sect} = $_;\n \t$section = \"\";\n \t$output = 0;\n \tnext;\n     };\n-    \n+\n     /^\\@(c|[a-z]+index)\\b/ and next;\n+    /^\\@subsection/ and next;\n+    /^\\@need/ and next;\n+    /^\\@node/ and next;\n \n     /^\\@setfilename\\s+([^.]+)/ and $fn = $1, next;\n     /^\\@settitle\\s+([^.]+)/ and $tl = $1, next;\n \n     next unless $output;\n \n+    /^\\@end\\s+([a-z]+)/ and do {\n+\tif(defined $endw)\n+\t{\n+\t    die \"\\@$endw ended by \\@end $1 at line $.\\n\"\n+\t\tunless $1 eq $endw;\n+\n+\t    if($endw =~ /example$/)\n+\t    {\n+\t\t$shift = \"\";\n+\t\t$_ = \"\";\n+\t    }\n+\t    elsif($endw =~ /^if/)\n+\t    {\n+\t\t$skipping = pop @skstack;\n+\t\t$_ = \"\";\n+\t    }\n+\t    else\n+\t    {\n+\t\t$_ = \"\\n=back\\n\";\n+\t\t$ic = pop @icstack;\n+\t    }\n+\t    $endw = pop @endwstack;\n+\t}\n+    };\n+\n+    /^\\@end ignore/ and $ignore = 0, next;\n+    next if $ignore;\n+    next if $skipping;\n+\n     /^\\@ignore/ and $ignore = 1, next;\n \n+    /^\\@set\\s+([a-zA-Z0-9_-]+)\\s*(.*)$/ and $defs{$1} = $2, next;\n+    /^\\@clear\\s+([a-zA-Z0-9_-]+)/ and delete $defs{$1}, next;\n+\n+    /^\\@ifset\\s+([a-zA-Z0-9_-]+)/ and do {\n+\tpush @endwstack, $endw;\n+\tpush @skstack, $skipping;\n+\t$endw = \"ifset\";\n+\t$skipping = 1 unless exists $defs{$1};\n+    };\n+\n+    /^\\@ifclear\\s+([a-zA-Z0-9_-]+)/ and do {\n+\tpush @endwstack, $endw;\n+\tpush @skstack, $skipping;\n+\t$endw = \"ifset\";\n+\t$skipping = 1 if exists $defs{$1};\n+    };\n+\n     /^\\@itemize (\\@[a-z]+)/ and do {\n \tpush @endwstack, $endw;\n \tpush @icstack, $ic;\n@@ -99,27 +182,6 @@\n \tnext;\n     };\n \n-    /^\\@end\\s+([a-z]+)/ and do {\n-\tif(defined $endw)\n-\t{\n-\t    die \"\\@$endw ended by \\@end $1 at line $.\\n\"\n-\t\tunless $1 eq $endw;\n-\n-\t    if($endw =~ /example$/)\n-\t    {\n-\t\t$shift = \"\";\n-\t\t$_ = \"\";\n-\t    }\n-\t    else\n-\t    {\n-\t\t$_ = \"\\n=back\\n\";\n-\t\tundef $endw;\n-\t\t$ic = pop @icstack;\n-\t    }\n-\t    $endw = pop @endwstack;\n-\t}\n-    };\n-\n     /^\\@itemx?\\s*(.+)?$/ and do {\n \tif(defined $1)\n \t{\n@@ -131,7 +193,21 @@\n \t    $ic =~ y/A-Ya-y1-8/B-Zb-z2-9/;\n \t}\n     };\n-\t\n+\n+    /^\\@section\\s+(.+)$/ and do {\n+\t$_ = \"\\n=head2 $1\\n\";\n+    };\n+\n+    # POD doesn't interpret E<> inside a verbatim block.\n+    if ($shift eq \"\") {\n+\ts/</&lt;/g;\n+\ts/>/&gt;/g;\n+    } else {\n+\ts/</&LT;/g;\n+\ts/>/&GT;/g;\n+    }\n+    s/\\@\\{/&lbrace;/g;\n+    s/\\@\\}/&rbrace;/g;\n     $section .= $shift.$_.\"\\n\";\n }\n \n@@ -149,3 +225,8 @@\n \tprint \"\\n\";\n     }\n }\n+\n+sub usage\n+{\n+    die \"usage: $0 [-D toggle...] [infile [outfile]]\\n\";\n+}"}]}