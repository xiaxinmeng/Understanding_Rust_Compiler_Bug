{"sha": "949c5d62571446e982b85c6190af0a172d645356", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTQ5YzVkNjI1NzE0NDZlOTgyYjg1YzYxOTBhZjBhMTcyZDY0NTM1Ng==", "commit": {"author": {"name": "Jan Hubicka", "email": "jh@suse.cz", "date": "2001-05-17T18:46:58Z"}, "committer": {"name": "Jan Hubicka", "email": "hubicka@gcc.gnu.org", "date": "2001-05-17T18:46:58Z"}, "message": "cse.c (fold_rtx): Use simplify_subreg.\n\n\t* cse.c (fold_rtx): Use simplify_subreg.\n\n\t* simplify-rtx.c (simplify_replace_rtx): Use simplify_gen_subreg.\n\t(simplify_gen_subreg): New.\n\t(simplify_rtx): Use simplify_subreg.\n\t* rtl.h (simplify_gen_subreg): Declare.\n\nFrom-SVN: r42221", "tree": {"sha": "56b80c09408fe368396536eefa4327bd32d5c2f5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/56b80c09408fe368396536eefa4327bd32d5c2f5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/949c5d62571446e982b85c6190af0a172d645356", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/949c5d62571446e982b85c6190af0a172d645356", "html_url": "https://github.com/Rust-GCC/gccrs/commit/949c5d62571446e982b85c6190af0a172d645356", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/949c5d62571446e982b85c6190af0a172d645356/comments", "author": null, "committer": null, "parents": [{"sha": "e221a0a8fb1f015f9d322ff139ad43c0dc3b0611", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e221a0a8fb1f015f9d322ff139ad43c0dc3b0611", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e221a0a8fb1f015f9d322ff139ad43c0dc3b0611"}], "stats": {"total": 82, "additions": 65, "deletions": 17}, "files": [{"sha": "b5be8d85fb16bfa5a750b608190195b67372dd0d", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/949c5d62571446e982b85c6190af0a172d645356/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/949c5d62571446e982b85c6190af0a172d645356/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=949c5d62571446e982b85c6190af0a172d645356", "patch": "@@ -1,3 +1,12 @@\n+Thu May 17 20:43:36 CEST 2001  Jan Hubicka  <jh@suse.cz>\n+\n+\t* cse.c (fold_rtx): Use simplify_subreg.\n+\n+\t* simplify-rtx.c (simplify_replace_rtx): Use simplify_gen_subreg.\n+\t(simplify_gen_subreg): New.\n+\t(simplify_rtx): Use simplify_subreg.\n+\t* rtl.h (simplify_gen_subreg): Declare.\n+\n 2001-05-17  Mark Mitchell  <mark@codesourcery.com>\n \n \t* doc/install.texi: Update Solaris information."}, {"sha": "43cbf9ca020f370ee108579311ad63b31f886945", "filename": "gcc/cse.c", "status": "modified", "additions": 2, "deletions": 10, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/949c5d62571446e982b85c6190af0a172d645356/gcc%2Fcse.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/949c5d62571446e982b85c6190af0a172d645356/gcc%2Fcse.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcse.c?ref=949c5d62571446e982b85c6190af0a172d645356", "patch": "@@ -3408,16 +3408,8 @@ fold_rtx (x, insn)\n \n       if (folded_arg0 != SUBREG_REG (x))\n \t{\n-\t  new = 0;\n-\n-\t  if (GET_MODE_CLASS (mode) == MODE_INT\n-\t      && GET_MODE_SIZE (mode) == UNITS_PER_WORD\n-\t      && GET_MODE (SUBREG_REG (x)) != VOIDmode)\n-\t    new = operand_subword (folded_arg0,\n-\t\t\t\t   (SUBREG_BYTE (x) / UNITS_PER_WORD), 0,\n-\t\t\t\t   GET_MODE (SUBREG_REG (x)));\n-\t  if (new == 0 && subreg_lowpart_p (x))\n-\t    new = gen_lowpart_if_possible (mode, folded_arg0);\n+\t  new = simplify_subreg (mode, folded_arg0,\n+\t\t\t\t GET_MODE (SUBREG_REG (x)), SUBREG_BYTE (x));\n \t  if (new)\n \t    return new;\n \t}"}, {"sha": "7ba5440ef748e70167ca51edbe6722180b96df72", "filename": "gcc/rtl.h", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/949c5d62571446e982b85c6190af0a172d645356/gcc%2Frtl.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/949c5d62571446e982b85c6190af0a172d645356/gcc%2Frtl.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frtl.h?ref=949c5d62571446e982b85c6190af0a172d645356", "patch": "@@ -1331,6 +1331,10 @@ extern rtx simplify_subreg\t\tPARAMS ((enum machine_mode,\n \t\t\t\t\t\t rtx,\n \t\t\t\t\t\t enum machine_mode,\n \t\t\t\t\t\t unsigned int));\n+extern rtx simplify_gen_subreg\t\tPARAMS ((enum machine_mode,\n+\t\t\t\t\t\t rtx,\n+\t\t\t\t\t\t enum machine_mode,\n+\t\t\t\t\t\t unsigned int));\n extern rtx simplify_replace_rtx\t\tPARAMS ((rtx, rtx, rtx));\n extern rtx simplify_rtx\t\t\tPARAMS ((rtx));\n "}, {"sha": "a64b33e1836413f6aed56f0fb1dbdea2a82c262d", "filename": "gcc/simplify-rtx.c", "status": "modified", "additions": 50, "deletions": 7, "changes": 57, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/949c5d62571446e982b85c6190af0a172d645356/gcc%2Fsimplify-rtx.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/949c5d62571446e982b85c6190af0a172d645356/gcc%2Fsimplify-rtx.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fsimplify-rtx.c?ref=949c5d62571446e982b85c6190af0a172d645356", "patch": "@@ -259,13 +259,18 @@ simplify_replace_rtx (x, old, new)\n \t\t\t      simplify_replace_rtx (XEXP (x, 2), old, new));\n \n     case 'x':\n-      /* The only case we try to handle is a lowpart SUBREG of a single-word\n-\t CONST_INT.  */\n-      if (code == SUBREG && subreg_lowpart_p (x) && old == SUBREG_REG (x)\n-\t  && GET_CODE (new) == CONST_INT\n-\t  && GET_MODE_SIZE (GET_MODE (old)) <= UNITS_PER_WORD)\n-\treturn GEN_INT (INTVAL (new) & GET_MODE_MASK (mode));\n-\n+      /* The only case we try to handle is a SUBREG.  */\n+      if (code == SUBREG)\n+\t{\n+\t  rtx exp;\n+\t  exp = simplify_gen_subreg (GET_MODE (x),\n+\t\t\t\t     simplify_replace_rtx (SUBREG_REG (x),\n+\t\t\t\t     \t\t\t   old, new),\n+\t\t\t\t     GET_MODE (SUBREG_REG (x)),\n+\t\t\t\t     SUBREG_BYTE (x));\n+\t  if (exp)\n+\t   x = exp;\n+\t}\n       return x;\n \n     default:\n@@ -2385,6 +2390,37 @@ simplify_subreg (outermode, op, innermode, byte)\n     }\n   return NULL_RTX;\n }\n+/* Make a SUBREG operation or equivalent if it folds.  */\n+\n+rtx\n+simplify_gen_subreg (outermode, op, innermode, byte)\n+     rtx op;\n+     unsigned int byte;\n+     enum machine_mode outermode, innermode;\n+{\n+  rtx new;\n+  /* Little bit of sanity checking.  */\n+  if (innermode == VOIDmode || outermode == VOIDmode\n+      || innermode == BLKmode || outermode == BLKmode)\n+    abort ();\n+\n+  if (GET_MODE (op) != innermode\n+      && GET_MODE (op) != VOIDmode)\n+    abort ();\n+\n+  if (byte % GET_MODE_SIZE (outermode)\n+      || byte >= GET_MODE_SIZE (innermode))\n+    abort ();\n+\n+  new = simplify_subreg (outermode, op, innermode, byte);\n+  if (new)\n+    return new;\n+\n+  if (GET_CODE (op) == SUBREG || GET_MODE (op) == VOIDmode)\n+    return NULL_RTX;\n+\n+  return gen_rtx_SUBREG (outermode, op, byte);\n+}\n /* Simplify X, an rtx expression.\n \n    Return the simplified expression or NULL if no simplifications\n@@ -2454,6 +2490,13 @@ simplify_rtx (x)\n \t\t\t\t\t     ? GET_MODE (XEXP (x, 0))\n \t\t\t\t\t     : GET_MODE (XEXP (x, 1))),\n \t\t\t\t\t    XEXP (x, 0), XEXP (x, 1));\n+    case 'x':\n+      /* The only case we try to handle is a SUBREG.  */\n+      if (code == SUBREG)\n+        return simplify_gen_subreg (mode, SUBREG_REG (x),\n+\t\t\t\t    GET_MODE (SUBREG_REG (x)),\n+\t\t\t\t    SUBREG_BYTE (x));\n+      return NULL;\n     default:\n       return NULL;\n     }"}]}