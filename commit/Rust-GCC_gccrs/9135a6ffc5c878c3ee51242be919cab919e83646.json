{"sha": "9135a6ffc5c878c3ee51242be919cab919e83646", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTEzNWE2ZmZjNWM4NzhjM2VlNTEyNDJiZTkxOWNhYjkxOWU4MzY0Ng==", "commit": {"author": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2019-12-09T03:43:33Z"}, "committer": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2019-12-09T03:43:33Z"}, "message": "re PR go/92861 (Passes relative time to sem_timedwait on GNU/Hurd)\n\n\tPR go/92861\n    runtime: use absolute time for sem_timedwait\n    \n    Patch by Samuel Thibault.\n    \n    Reviewed-on: https://go-review.googlesource.com/c/gofrontend/+/210457\n\nFrom-SVN: r279106", "tree": {"sha": "86c4a0e50934092b44b31a139ea2f88fce046eed", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/86c4a0e50934092b44b31a139ea2f88fce046eed"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9135a6ffc5c878c3ee51242be919cab919e83646", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9135a6ffc5c878c3ee51242be919cab919e83646", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9135a6ffc5c878c3ee51242be919cab919e83646", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9135a6ffc5c878c3ee51242be919cab919e83646/comments", "author": null, "committer": null, "parents": [{"sha": "77cc6ae6d642ee8a9438b6606d7ba6cc0911fd2b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/77cc6ae6d642ee8a9438b6606d7ba6cc0911fd2b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/77cc6ae6d642ee8a9438b6606d7ba6cc0911fd2b"}], "stats": {"total": 30, "additions": 27, "deletions": 3}, "files": [{"sha": "009a866283515d758378eb8284b3d0729aeb0e13", "filename": "gcc/go/gofrontend/MERGE", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9135a6ffc5c878c3ee51242be919cab919e83646/gcc%2Fgo%2Fgofrontend%2FMERGE", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9135a6ffc5c878c3ee51242be919cab919e83646/gcc%2Fgo%2Fgofrontend%2FMERGE", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgo%2Fgofrontend%2FMERGE?ref=9135a6ffc5c878c3ee51242be919cab919e83646", "patch": "@@ -1,4 +1,4 @@\n-15c7bc9f0a432bc09716758412ea41d6caa6491b\n+1da5ceb8daaab7a243fffd6a647554cf674716f8\n \n The first line of this file holds the git revision number of the last\n merge done from the gofrontend repository."}, {"sha": "fab17741c22694041e55134a24373093986e3078", "filename": "libgo/go/runtime/os_hurd.go", "status": "modified", "additions": 26, "deletions": 2, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9135a6ffc5c878c3ee51242be919cab919e83646/libgo%2Fgo%2Fruntime%2Fos_hurd.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9135a6ffc5c878c3ee51242be919cab919e83646/libgo%2Fgo%2Fruntime%2Fos_hurd.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fruntime%2Fos_hurd.go?ref=9135a6ffc5c878c3ee51242be919cab919e83646", "patch": "@@ -2,7 +2,7 @@\n // Use of this source code is governed by a BSD-style\n // license that can be found in the LICENSE file.\n \n-// This file is derived from os_solaris.go.\n+// This file is derived from os_aix.go.\n \n package runtime\n \n@@ -37,6 +37,10 @@ func sem_post(sem *_sem_t) int32\n //extern sem_timedwait\n func sem_timedwait(sem *_sem_t, timeout *timespec) int32\n \n+//go:noescape\n+//extern clock_gettime\n+func clock_gettime(clock_id int32, timeout *timespec) int32\n+\n //go:nosplit\n func semacreate(mp *m) {\n \tif mp.waitsema != 0 {\n@@ -60,7 +64,23 @@ func semasleep(ns int64) int32 {\n \t_m_ := getg().m\n \tif ns >= 0 {\n \t\tvar ts timespec\n-\t\tts.setNsec(ns)\n+\n+\t\tif clock_gettime(_CLOCK_REALTIME, &ts) != 0 {\n+\t\t\tthrow(\"clock_gettime\")\n+\t\t}\n+\n+\t\tsec := int64(ts.tv_sec) + ns/1e9\n+\t\tnsec := int64(ts.tv_nsec) + ns%1e9\n+\t\tif nsec >= 1e9 {\n+\t\t\tsec++\n+\t\t\tnsec -= 1e9\n+\t\t}\n+\t\tif sec != int64(timespec_sec_t(sec)) {\n+\t\t\t// Handle overflows (timespec_sec_t is 32-bit in 32-bit applications)\n+\t\t\tsec = 1<<31 - 1\n+\t\t}\n+\t\tts.tv_sec = timespec_sec_t(sec)\n+\t\tts.tv_nsec = timespec_nsec_t(nsec)\n \n \t\tif sem_timedwait((*_sem_t)(unsafe.Pointer(_m_.waitsema)), &ts) != 0 {\n \t\t\terr := errno()\n@@ -105,3 +125,7 @@ func osinit() {\n \t\tphysPageSize = uintptr(getPageSize())\n \t}\n }\n+\n+const (\n+\t_CLOCK_REALTIME = 0\n+)"}]}