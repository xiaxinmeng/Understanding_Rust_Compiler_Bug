{"sha": "1aa6700378e5188a853c018256113ce6e1fb5c05", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWFhNjcwMDM3OGU1MTg4YTg1M2MwMTgyNTYxMTNjZTZlMWZiNWMwNQ==", "commit": {"author": {"name": "Laurynas Biveinis", "email": "laurynas.biveinis@gmail.com", "date": "2010-12-03T04:11:10Z"}, "committer": {"name": "Laurynas Biveinis", "email": "lauras@gcc.gnu.org", "date": "2010-12-03T04:11:10Z"}, "message": "tree.h (struct call_expr_arg_iterator_d): Remove GTY tag.\n\n2010-11-30  Laurynas Biveinis  <laurynas.biveinis@gmail.com>\n\n\t* tree.h (struct call_expr_arg_iterator_d): Remove GTY tag.\n\t(const_call_expr_arg_iterator_d): Likewise.\n\t(expanded_location): Likewise.\n\t* c-tree.h (struct c_arg_tag_d): Likewise.\n\t* dwarf2out.c (struct cfa_loc): Likewise.\n\t(struct skeleton_chain_struct): Likewise.\n\t* except.c (struct ttypes_filter): Likewise.\n\t* cselib.h (struct cselib_val_struct): Likewise.\n\t(elt_loc_list): Likewise.\n\t(elt_list): Likewise.\n\t* varasm.c (struct addr_const): Likewise.\n\t* tree-flow.h (struct edge_prediction): Likewise.\n\t(struct int_tree_map): Likewise.\n\t(struct _edge_var_map): Likewise.\n\nada:\n\n2010-11-30  Laurynas Biveinis  <laurynas.biveinis@gmail.com>\n\n\t* gcc-interface/decl.c (struct subst_pair_d): Remove GTY tag.\n\t(variant_desc_d): Likewise.\n\ncp:\n\n2010-11-30  Laurynas Biveinis  <laurynas.biveinis@gmail.com>\n\n\t* cp-tree.h (struct aggr_init_expr_arg_iterator_d): Remove GTY\n\ttag.\n\nFrom-SVN: r167406", "tree": {"sha": "6470a9f77cdfa60e0a7dd2c91959afbb56edf5b3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6470a9f77cdfa60e0a7dd2c91959afbb56edf5b3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1aa6700378e5188a853c018256113ce6e1fb5c05", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1aa6700378e5188a853c018256113ce6e1fb5c05", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1aa6700378e5188a853c018256113ce6e1fb5c05", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1aa6700378e5188a853c018256113ce6e1fb5c05/comments", "author": {"login": "laurynas-biveinis", "id": 58894, "node_id": "MDQ6VXNlcjU4ODk0", "avatar_url": "https://avatars.githubusercontent.com/u/58894?v=4", "gravatar_id": "", "url": "https://api.github.com/users/laurynas-biveinis", "html_url": "https://github.com/laurynas-biveinis", "followers_url": "https://api.github.com/users/laurynas-biveinis/followers", "following_url": "https://api.github.com/users/laurynas-biveinis/following{/other_user}", "gists_url": "https://api.github.com/users/laurynas-biveinis/gists{/gist_id}", "starred_url": "https://api.github.com/users/laurynas-biveinis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/laurynas-biveinis/subscriptions", "organizations_url": "https://api.github.com/users/laurynas-biveinis/orgs", "repos_url": "https://api.github.com/users/laurynas-biveinis/repos", "events_url": "https://api.github.com/users/laurynas-biveinis/events{/privacy}", "received_events_url": "https://api.github.com/users/laurynas-biveinis/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "57e000b01a892aba50ceb927110c89f383819284", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/57e000b01a892aba50ceb927110c89f383819284", "html_url": "https://github.com/Rust-GCC/gccrs/commit/57e000b01a892aba50ceb927110c89f383819284"}], "stats": {"total": 62, "additions": 44, "deletions": 18}, "files": [{"sha": "fde41c8dbba1258ca31e36a4506967a725dd7eb5", "filename": "gcc/ChangeLog", "status": "modified", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1aa6700378e5188a853c018256113ce6e1fb5c05/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1aa6700378e5188a853c018256113ce6e1fb5c05/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=1aa6700378e5188a853c018256113ce6e1fb5c05", "patch": "@@ -1,3 +1,20 @@\n+2010-12-03  Laurynas Biveinis  <laurynas.biveinis@gmail.com>\n+\n+\t* tree.h (struct call_expr_arg_iterator_d): Remove GTY tag.\n+\t(const_call_expr_arg_iterator_d): Likewise.\n+\t(expanded_location): Likewise.\n+\t* c-tree.h (struct c_arg_tag_d): Likewise.\n+\t* dwarf2out.c (struct cfa_loc): Likewise.\n+\t(struct skeleton_chain_struct): Likewise.\n+\t* except.c (struct ttypes_filter): Likewise.\n+\t* cselib.h (struct cselib_val_struct): Likewise.\n+\t(elt_loc_list): Likewise.\n+\t(elt_list): Likewise.\n+\t* varasm.c (struct addr_const): Likewise.\n+\t* tree-flow.h (struct edge_prediction): Likewise.\n+\t(struct int_tree_map): Likewise.\n+\t(struct _edge_var_map): Likewise.\n+\n 2010-12-02  H.J. Lu  <hongjiu.lu@intel.com>\n \n \tPR target/46768"}, {"sha": "853926c7e90766f689d63a4a1085cd27dbf11d51", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1aa6700378e5188a853c018256113ce6e1fb5c05/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1aa6700378e5188a853c018256113ce6e1fb5c05/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=1aa6700378e5188a853c018256113ce6e1fb5c05", "patch": "@@ -1,3 +1,8 @@\n+2010-12-03  Laurynas Biveinis  <laurynas.biveinis@gmail.com>\n+\n+\t* gcc-interface/decl.c (struct subst_pair_d): Remove GTY tag.\n+\t(variant_desc_d): Likewise.\n+\n 2010-12-01  Joseph Myers  <joseph@codesourcery.com>\n \n \t* gcc-interface/misc.c (flag_compare_debug, flag_stack_check):"}, {"sha": "8980bb2bf8b5938674799d528a0a78e13047fba5", "filename": "gcc/ada/gcc-interface/decl.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1aa6700378e5188a853c018256113ce6e1fb5c05/gcc%2Fada%2Fgcc-interface%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1aa6700378e5188a853c018256113ce6e1fb5c05/gcc%2Fada%2Fgcc-interface%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgcc-interface%2Fdecl.c?ref=1aa6700378e5188a853c018256113ce6e1fb5c05", "patch": "@@ -97,15 +97,15 @@ static struct incomplete *defer_limited_with;\n static int defer_finalize_level = 0;\n static VEC (tree,heap) *defer_finalize_list;\n \n-typedef struct GTY(()) subst_pair_d {\n+typedef struct subst_pair_d {\n   tree discriminant;\n   tree replacement;\n } subst_pair;\n \n DEF_VEC_O(subst_pair);\n DEF_VEC_ALLOC_O(subst_pair,heap);\n \n-typedef struct GTY(()) variant_desc_d {\n+typedef struct variant_desc_d {\n   /* The type of the variant.  */\n   tree type;\n "}, {"sha": "7bf3bc0c172602aab13e6c78b9d09b2dbc89a14c", "filename": "gcc/c-tree.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1aa6700378e5188a853c018256113ce6e1fb5c05/gcc%2Fc-tree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1aa6700378e5188a853c018256113ce6e1fb5c05/gcc%2Fc-tree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-tree.h?ref=1aa6700378e5188a853c018256113ce6e1fb5c05", "patch": "@@ -294,7 +294,7 @@ enum c_declarator_kind {\n   cdk_attrs\n };\n \n-typedef struct GTY(()) c_arg_tag_d {\n+typedef struct c_arg_tag_d {\n   /* The argument name.  */\n   tree id;\n   /* The type of the argument.  */"}, {"sha": "bfbdfc26cb07d830fd13c37be3eba7fc91f792e8", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1aa6700378e5188a853c018256113ce6e1fb5c05/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1aa6700378e5188a853c018256113ce6e1fb5c05/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=1aa6700378e5188a853c018256113ce6e1fb5c05", "patch": "@@ -1,3 +1,8 @@\n+2010-12-03  Laurynas Biveinis  <laurynas.biveinis@gmail.com>\n+\n+\t* cp-tree.h (struct aggr_init_expr_arg_iterator_d): Remove GTY\n+\ttag.\n+\n 2010-12-02  Nicola Pero  <nicola.pero@meta-innovation.com>\n \n \t* parser.c (cp_parser_objc_throw_statement): Use"}, {"sha": "59342e311577cc619f45fdde529aca16aa01862f", "filename": "gcc/cp/cp-tree.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1aa6700378e5188a853c018256113ce6e1fb5c05/gcc%2Fcp%2Fcp-tree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1aa6700378e5188a853c018256113ce6e1fb5c05/gcc%2Fcp%2Fcp-tree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcp-tree.h?ref=1aa6700378e5188a853c018256113ce6e1fb5c05", "patch": "@@ -2840,7 +2840,7 @@ extern void decl_shadowed_for_var_insert (tree, tree);\n /* Abstract iterators for AGGR_INIT_EXPRs.  */\n \n /* Structure containing iterator state.  */\n-typedef struct GTY (()) aggr_init_expr_arg_iterator_d {\n+typedef struct aggr_init_expr_arg_iterator_d {\n   tree t;\t/* the aggr_init_expr */\n   int n;\t/* argument count */\n   int i;\t/* next argument index */"}, {"sha": "5964a4487ceb6f8acd7c580959bf0c8a4e5abb9b", "filename": "gcc/cselib.h", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1aa6700378e5188a853c018256113ce6e1fb5c05/gcc%2Fcselib.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1aa6700378e5188a853c018256113ce6e1fb5c05/gcc%2Fcselib.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcselib.h?ref=1aa6700378e5188a853c018256113ce6e1fb5c05", "patch": "@@ -20,7 +20,7 @@ along with GCC; see the file COPYING3.  If not see\n <http://www.gnu.org/licenses/>.  */\n \n /* Describe a value.  */\n-typedef struct GTY(()) cselib_val_struct {\n+typedef struct cselib_val_struct {\n   /* The hash value.  */\n   unsigned int hash;\n \n@@ -42,7 +42,7 @@ typedef struct GTY(()) cselib_val_struct {\n } cselib_val;\n \n /* A list of rtl expressions that hold the same value.  */\n-struct GTY(()) elt_loc_list {\n+struct elt_loc_list {\n   /* Next element in the list.  */\n   struct elt_loc_list *next;\n   /* An rtl expression that holds the value.  */\n@@ -52,7 +52,7 @@ struct GTY(()) elt_loc_list {\n };\n \n /* A list of cselib_val structures.  */\n-struct GTY(()) elt_list {\n+struct elt_list {\n   struct elt_list *next;\n   cselib_val *elt;\n };"}, {"sha": "75faec5e28ae53aeb0e0dcf8e81bda8e31750b3e", "filename": "gcc/dwarf2out.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1aa6700378e5188a853c018256113ce6e1fb5c05/gcc%2Fdwarf2out.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1aa6700378e5188a853c018256113ce6e1fb5c05/gcc%2Fdwarf2out.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdwarf2out.c?ref=1aa6700378e5188a853c018256113ce6e1fb5c05", "patch": "@@ -282,7 +282,7 @@ dw_cfi_node;\n    It can now be either REG + CFA_OFFSET or *(REG + BASE_OFFSET) + CFA_OFFSET.\n    Instead of passing around REG and OFFSET, we pass a copy\n    of this structure.  */\n-typedef struct GTY(()) cfa_loc {\n+typedef struct cfa_loc {\n   HOST_WIDE_INT offset;\n   HOST_WIDE_INT base_offset;\n   unsigned int reg;\n@@ -5879,7 +5879,7 @@ typedef struct GTY(()) limbo_die_struct {\n }\n limbo_die_node;\n \n-typedef struct GTY(()) skeleton_chain_struct\n+typedef struct skeleton_chain_struct\n {\n   dw_die_ref old_die;\n   dw_die_ref new_die;"}, {"sha": "2a25a3bd5b3ffcb3ede0fdaef43c7c195df2f58a", "filename": "gcc/except.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1aa6700378e5188a853c018256113ce6e1fb5c05/gcc%2Fexcept.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1aa6700378e5188a853c018256113ce6e1fb5c05/gcc%2Fexcept.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fexcept.c?ref=1aa6700378e5188a853c018256113ce6e1fb5c05", "patch": "@@ -681,7 +681,7 @@ lookup_type_for_runtime (tree type)\n \f\n /* Represent an entry in @TTypes for either catch actions\n    or exception filter actions.  */\n-struct GTY(()) ttypes_filter {\n+struct ttypes_filter {\n   tree t;\n   int filter;\n };"}, {"sha": "5929064209066d612992f50de90e71ac55764c37", "filename": "gcc/input.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1aa6700378e5188a853c018256113ce6e1fb5c05/gcc%2Finput.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1aa6700378e5188a853c018256113ce6e1fb5c05/gcc%2Finput.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Finput.h?ref=1aa6700378e5188a853c018256113ce6e1fb5c05", "patch": "@@ -37,7 +37,7 @@ extern GTY(()) struct line_maps *line_table;\n extern char builtins_location_check[(BUILTINS_LOCATION\n \t\t\t\t     < RESERVED_LOCATION_COUNT) ? 1 : -1];\n \n-typedef struct GTY (())\n+typedef struct\n {\n   /* The name of the source file involved.  */\n   const char *file;"}, {"sha": "1486e33aeba30068352dde7e8de1f8b17f47ee3a", "filename": "gcc/tree-flow.h", "status": "modified", "additions": 3, "deletions": 4, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1aa6700378e5188a853c018256113ce6e1fb5c05/gcc%2Ftree-flow.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1aa6700378e5188a853c018256113ce6e1fb5c05/gcc%2Ftree-flow.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-flow.h?ref=1aa6700378e5188a853c018256113ce6e1fb5c05", "patch": "@@ -289,7 +289,7 @@ static inline int get_lineno (const_gimple);\n /*---------------------------------------------------------------------------\n                   Structure representing predictions in tree level.\n ---------------------------------------------------------------------------*/\n-struct GTY((chain_next (\"%h.ep_next\"))) edge_prediction {\n+struct edge_prediction {\n   struct edge_prediction *ep_next;\n   edge ep_edge;\n   enum br_predictor ep_predictor;\n@@ -303,8 +303,7 @@ static inline void set_phi_nodes (basic_block, gimple_seq);\n /*---------------------------------------------------------------------------\n \t\t\t      Global declarations\n ---------------------------------------------------------------------------*/\n-struct GTY(()) int_tree_map {\n-\n+struct int_tree_map {\n   unsigned int uid;\n   tree to;\n };\n@@ -533,7 +532,7 @@ extern bool gimple_check_call_args (gimple);\n /* In tree-ssa.c  */\n \n /* Mapping for redirected edges.  */\n-struct GTY(()) _edge_var_map {\n+struct _edge_var_map {\n   tree result;\t\t\t/* PHI result.  */\n   tree def;\t\t\t/* PHI arg definition.  */\n   source_location locus;        /* PHI arg location.  */"}, {"sha": "8ba204497200aca249b3bc5b6dca842f28930636", "filename": "gcc/tree.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1aa6700378e5188a853c018256113ce6e1fb5c05/gcc%2Ftree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1aa6700378e5188a853c018256113ce6e1fb5c05/gcc%2Ftree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree.h?ref=1aa6700378e5188a853c018256113ce6e1fb5c05", "patch": "@@ -5599,13 +5599,13 @@ tree_operand_length (const_tree node)\n    defined by this point.  */\n \n /* Structure containing iterator state.  */\n-typedef struct GTY (()) call_expr_arg_iterator_d {\n+typedef struct call_expr_arg_iterator_d {\n   tree t;\t/* the call_expr */\n   int n;\t/* argument count */\n   int i;\t/* next argument index */\n } call_expr_arg_iterator;\n \n-typedef struct GTY (()) const_call_expr_arg_iterator_d {\n+typedef struct const_call_expr_arg_iterator_d {\n   const_tree t;\t/* the call_expr */\n   int n;\t/* argument count */\n   int i;\t/* next argument index */"}, {"sha": "da494d69ad8607f547aba912a04feb34a0e3f444", "filename": "gcc/varasm.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1aa6700378e5188a853c018256113ce6e1fb5c05/gcc%2Fvarasm.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1aa6700378e5188a853c018256113ce6e1fb5c05/gcc%2Fvarasm.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fvarasm.c?ref=1aa6700378e5188a853c018256113ce6e1fb5c05", "patch": "@@ -2540,7 +2540,7 @@ assemble_real (REAL_VALUE_TYPE d, enum machine_mode mode, unsigned int align)\n    Store them both in the structure *VALUE.\n    EXP must be reducible.  */\n \n-struct GTY(()) addr_const {\n+struct addr_const {\n   rtx base;\n   HOST_WIDE_INT offset;\n };"}]}