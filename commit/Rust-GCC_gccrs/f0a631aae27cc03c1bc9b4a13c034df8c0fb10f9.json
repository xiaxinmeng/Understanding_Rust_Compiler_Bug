{"sha": "f0a631aae27cc03c1bc9b4a13c034df8c0fb10f9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjBhNjMxYWFlMjdjYzAzYzFiYzliNGExM2MwMzRkZjhjMGZiMTBmOQ==", "commit": {"author": {"name": "Doug Rupp", "email": "rupp@adacore.com", "date": "2008-08-06T08:07:32Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2008-08-06T08:07:32Z"}, "message": "decl.c (gnat_to_gnu_param): Force 32bit descriptor if TARGET_MALLOC64 clear.\n\n2008-08-06  Doug Rupp  <rupp@adacore.com>\n\n\t* gcc-interface/decl.c (gnat_to_gnu_param): Force 32bit descriptor if\n\tTARGET_MALLOC64 clear.\n\n\t* gcc-interface/utils2.c (build_call_alloc_dealloc): Force 32bit malloc\n\tif TARGET_MALLOC64 clear.\n\n\t* gcc-interface/gigi.h (TARGET_ABI_OPEN_VMS): Move here from utils2.c\n\t(TARGET_MALLC64): New macro. Default to clear.\n\nFrom-SVN: r138768", "tree": {"sha": "30bf49ccbbbb45b761fa755df0c66a9859ab5281", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/30bf49ccbbbb45b761fa755df0c66a9859ab5281"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f0a631aae27cc03c1bc9b4a13c034df8c0fb10f9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f0a631aae27cc03c1bc9b4a13c034df8c0fb10f9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f0a631aae27cc03c1bc9b4a13c034df8c0fb10f9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f0a631aae27cc03c1bc9b4a13c034df8c0fb10f9/comments", "author": {"login": "Cementitious", "id": 115579865, "node_id": "U_kgDOBuOb2Q", "avatar_url": "https://avatars.githubusercontent.com/u/115579865?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Cementitious", "html_url": "https://github.com/Cementitious", "followers_url": "https://api.github.com/users/Cementitious/followers", "following_url": "https://api.github.com/users/Cementitious/following{/other_user}", "gists_url": "https://api.github.com/users/Cementitious/gists{/gist_id}", "starred_url": "https://api.github.com/users/Cementitious/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Cementitious/subscriptions", "organizations_url": "https://api.github.com/users/Cementitious/orgs", "repos_url": "https://api.github.com/users/Cementitious/repos", "events_url": "https://api.github.com/users/Cementitious/events{/privacy}", "received_events_url": "https://api.github.com/users/Cementitious/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "31fcb30fe6b1c157846247b2f6b809e8d9e50460", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/31fcb30fe6b1c157846247b2f6b809e8d9e50460", "html_url": "https://github.com/Rust-GCC/gccrs/commit/31fcb30fe6b1c157846247b2f6b809e8d9e50460"}], "stats": {"total": 52, "additions": 37, "deletions": 15}, "files": [{"sha": "19f9e38504219b405e87b2960d60d105a25129ff", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f0a631aae27cc03c1bc9b4a13c034df8c0fb10f9/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f0a631aae27cc03c1bc9b4a13c034df8c0fb10f9/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=f0a631aae27cc03c1bc9b4a13c034df8c0fb10f9", "patch": "@@ -1,3 +1,14 @@\n+2008-08-06  Doug Rupp  <rupp@adacore.com>\n+\n+\t* gcc-interface/decl.c (gnat_to_gnu_param): Force 32bit descriptor if\n+\tTARGET_MALLOC64 clear.\n+\n+\t* gcc-interface/utils2.c (build_call_alloc_dealloc): Force 32bit malloc\n+\tif TARGET_MALLOC64 clear.\n+\n+\t* gcc-interface/gigi.h (TARGET_ABI_OPEN_VMS): Move here from utils2.c\n+\t(TARGET_MALLC64): New macro. Default to clear.\n+\n 2008-08-06  Doug Rupp  <rupp@adacore.com>\n \n \t* gcc-interface/utils2.c (snames.h) Include"}, {"sha": "a136f96bcc81a38e0a8d243158cb29dcaa3d3c48", "filename": "gcc/ada/gcc-interface/decl.c", "status": "modified", "additions": 7, "deletions": 6, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f0a631aae27cc03c1bc9b4a13c034df8c0fb10f9/gcc%2Fada%2Fgcc-interface%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f0a631aae27cc03c1bc9b4a13c034df8c0fb10f9/gcc%2Fada%2Fgcc-interface%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgcc-interface%2Fdecl.c?ref=f0a631aae27cc03c1bc9b4a13c034df8c0fb10f9", "patch": "@@ -4842,7 +4842,13 @@ gnat_to_gnu_param (Entity_Id gnat_param, Mechanism_Type mech,\n       = TREE_TYPE (TREE_TYPE (TYPE_FIELDS (TREE_TYPE (gnu_param_type))));\n \n   /* VMS descriptors are themselves passed by reference.  */\n-  if (mech == By_Descriptor)\n+  if (mech == By_Short_Descriptor ||\n+      (mech == By_Descriptor && TARGET_ABI_OPEN_VMS && !TARGET_MALLOC64))\n+    gnu_param_type\n+      = build_pointer_type (build_vms_descriptor32 (gnu_param_type,\n+\t\t\t\t\t\t    Mechanism (gnat_param),\n+\t\t\t\t\t\t    gnat_subprog));\n+  else if (mech == By_Descriptor)\n     {\n       /* Build both a 32-bit and 64-bit descriptor, one of which will be\n \t chosen in fill_vms_descriptor.  */\n@@ -4855,11 +4861,6 @@ gnat_to_gnu_param (Entity_Id gnat_param, Mechanism_Type mech,\n \t\t\t\t\t\t    Mechanism (gnat_param),\n \t\t\t\t\t\t    gnat_subprog));\n     }\n-  else if (mech == By_Short_Descriptor)\n-    gnu_param_type\n-      = build_pointer_type (build_vms_descriptor32 (gnu_param_type,\n-\t\t\t\t\t\t    Mechanism (gnat_param),\n-\t\t\t\t\t\t    gnat_subprog));\n \n   /* Arrays are passed as pointers to element type for foreign conventions.  */\n   else if (foreign"}, {"sha": "e1c2fe923c9471aeaa5826ef9c7db8cfdee47d31", "filename": "gcc/ada/gcc-interface/gigi.h", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f0a631aae27cc03c1bc9b4a13c034df8c0fb10f9/gcc%2Fada%2Fgcc-interface%2Fgigi.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f0a631aae27cc03c1bc9b4a13c034df8c0fb10f9/gcc%2Fada%2Fgcc-interface%2Fgigi.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgcc-interface%2Fgigi.h?ref=f0a631aae27cc03c1bc9b4a13c034df8c0fb10f9", "patch": "@@ -913,3 +913,17 @@ extern Nat get_words_be (void);\n extern Nat get_bytes_be (void);\n extern Nat get_bits_be (void);\n extern Nat get_strict_alignment (void);\n+\n+/* Let code know whether we are targetting VMS without need of\n+   intrusive preprocessor directives.  */\n+#ifndef TARGET_ABI_OPEN_VMS\n+#define TARGET_ABI_OPEN_VMS 0\n+#endif\n+\n+/* VMS macro set by default, when clear forces 32bit mallocs and 32bit\n+   Descriptors. Always used in combination with TARGET_ABI_OPEN_VMS\n+   so no effect on non-VMS systems. */\n+#ifndef TARGET_MALLOC64\n+#define TARGET_MALLOC64 0\n+#endif\n+"}, {"sha": "0462426251f76935247bd293b0d6a5001109fa06", "filename": "gcc/ada/gcc-interface/utils2.c", "status": "modified", "additions": 5, "deletions": 9, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f0a631aae27cc03c1bc9b4a13c034df8c0fb10f9/gcc%2Fada%2Fgcc-interface%2Futils2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f0a631aae27cc03c1bc9b4a13c034df8c0fb10f9/gcc%2Fada%2Fgcc-interface%2Futils2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgcc-interface%2Futils2.c?ref=f0a631aae27cc03c1bc9b4a13c034df8c0fb10f9", "patch": "@@ -47,12 +47,6 @@\n #include \"gigi.h\"\n #include \"snames.h\"\n \n-/* Let code below know whether we are targetting VMS without need of\n-   intrusive preprocessor directives.  */\n-#ifndef TARGET_ABI_OPEN_VMS\n-#define TARGET_ABI_OPEN_VMS 0\n-#endif\n-\n static tree find_common_type (tree, tree);\n static bool contains_save_expr_p (tree);\n static tree contains_null_expr (tree);\n@@ -1957,9 +1951,11 @@ build_call_alloc_dealloc (tree gnu_obj, tree gnu_size, unsigned align,\n       /* If the allocator size is 32bits but the pointer size is 64bits then\n \t allocate 32bit memory (sometimes necessary on 64bit VMS). Otherwise\n \t default to standard malloc. */\n-      if (TARGET_ABI_OPEN_VMS && POINTER_SIZE == 64\n-\t  && (UI_To_Int (Esize (Etype (gnat_node))) == 32\n-\t      || Convention (Etype (gnat_node)) == Convention_C))\n+      if (TARGET_ABI_OPEN_VMS &&\n+          (!TARGET_MALLOC64 ||\n+           (POINTER_SIZE == 64\n+\t    && (UI_To_Int (Esize (Etype (gnat_node))) == 32\n+\t        || Convention (Etype (gnat_node)) == Convention_C))))\n         return build_call_1_expr (malloc32_decl, gnu_size);\n       else\n         return build_call_1_expr (malloc_decl, gnu_size);"}]}