{"sha": "4192922c749ba0e0ca94b734ccabca8245520f9d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDE5MjkyMmM3NDliYTBlMGNhOTRiNzM0Y2NhYmNhODI0NTUyMGY5ZA==", "commit": {"author": {"name": "Paolo Carlini", "email": "paolo.carlini@oracle.com", "date": "2011-01-06T10:14:37Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2011-01-06T10:14:37Z"}, "message": "re PR libstdc++/47185 (UB in TR1 and C++0x placeholders and non conforming implementation)\n\n2011-01-06  Paolo Carlini  <paolo.carlini@oracle.com>\n\n\tPR libstdc++/47185\n\t* src/placeholders.cc: New.\n\t* src/Makefile.am: Adjust.\n\t* src/Makefile.in: Regenerate.\n\t* include/std/functional (placeholders::_1, _2, ..., _29): Declare\n\textern.\n\t* config/abi/pre/gnu.ver: Export.\n\nFrom-SVN: r168536", "tree": {"sha": "5b4732264587bf887f93ba3a063ef4e489db541e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5b4732264587bf887f93ba3a063ef4e489db541e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4192922c749ba0e0ca94b734ccabca8245520f9d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4192922c749ba0e0ca94b734ccabca8245520f9d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4192922c749ba0e0ca94b734ccabca8245520f9d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4192922c749ba0e0ca94b734ccabca8245520f9d/comments", "author": null, "committer": null, "parents": [{"sha": "210dedfec3cf0dd04feab88b659d217b7d8c1079", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/210dedfec3cf0dd04feab88b659d217b7d8c1079", "html_url": "https://github.com/Rust-GCC/gccrs/commit/210dedfec3cf0dd04feab88b659d217b7d8c1079"}], "stats": {"total": 162, "additions": 125, "deletions": 37}, "files": [{"sha": "e3430694351599b7e33a6d5c6ba2c31ee83aa96b", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4192922c749ba0e0ca94b734ccabca8245520f9d/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4192922c749ba0e0ca94b734ccabca8245520f9d/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=4192922c749ba0e0ca94b734ccabca8245520f9d", "patch": "@@ -1,3 +1,13 @@\n+2011-01-06  Paolo Carlini  <paolo.carlini@oracle.com>\n+\n+\tPR libstdc++/47185\n+\t* src/placeholders.cc: New.\n+\t* src/Makefile.am: Adjust.\n+\t* src/Makefile.in: Regenerate.\n+\t* include/std/functional (placeholders::_1, _2, ..., _29): Declare\n+\textern.\n+\t* config/abi/pre/gnu.ver: Export.\n+\n 2011-01-05  Fran\u00e7ois Dumont  <francois.cppdevs@free.fr>\n \n \t* include/debug/safe_base.h (_Safe_iterator_base::_M_unlink): New."}, {"sha": "6633273cbc946f2bfcf9639e33742bfa6032d9b4", "filename": "libstdc++-v3/config/abi/pre/gnu.ver", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4192922c749ba0e0ca94b734ccabca8245520f9d/libstdc%2B%2B-v3%2Fconfig%2Fabi%2Fpre%2Fgnu.ver", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4192922c749ba0e0ca94b734ccabca8245520f9d/libstdc%2B%2B-v3%2Fconfig%2Fabi%2Fpre%2Fgnu.ver", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfig%2Fabi%2Fpre%2Fgnu.ver?ref=4192922c749ba0e0ca94b734ccabca8245520f9d", "patch": "@@ -1196,6 +1196,9 @@ GLIBCXX_3.4.15 {\n     # std::future_category is now a function\n     _ZSt15future_categoryv;\n \n+    # std::placeholders\n+    _ZNSt12placeholders*;\n+\n } GLIBCXX_3.4.14;\n \n # Symbols in the support library (libsupc++) have their own tag."}, {"sha": "a781dbee28f823cecd2de5862c2e358cb8c47fad", "filename": "libstdc++-v3/include/std/functional", "status": "modified", "additions": 30, "deletions": 33, "changes": 63, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4192922c749ba0e0ca94b734ccabca8245520f9d/libstdc%2B%2B-v3%2Finclude%2Fstd%2Ffunctional", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4192922c749ba0e0ca94b734ccabca8245520f9d/libstdc%2B%2B-v3%2Finclude%2Fstd%2Ffunctional", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Ffunctional?ref=4192922c749ba0e0ca94b734ccabca8245520f9d", "patch": "@@ -844,39 +844,36 @@ _GLIBCXX_HAS_NESTED_TYPE(result_type)\n    *  unique names for each.\n    */\n   namespace placeholders \n-  { \n-    namespace \n-    {\n-      _Placeholder<1> _1;\n-      _Placeholder<2> _2;\n-      _Placeholder<3> _3;\n-      _Placeholder<4> _4;\n-      _Placeholder<5> _5;\n-      _Placeholder<6> _6;\n-      _Placeholder<7> _7;\n-      _Placeholder<8> _8;\n-      _Placeholder<9> _9;\n-      _Placeholder<10> _10;\n-      _Placeholder<11> _11;\n-      _Placeholder<12> _12;\n-      _Placeholder<13> _13;\n-      _Placeholder<14> _14;\n-      _Placeholder<15> _15;\n-      _Placeholder<16> _16;\n-      _Placeholder<17> _17;\n-      _Placeholder<18> _18;\n-      _Placeholder<19> _19;\n-      _Placeholder<20> _20;\n-      _Placeholder<21> _21;\n-      _Placeholder<22> _22;\n-      _Placeholder<23> _23;\n-      _Placeholder<24> _24;\n-      _Placeholder<25> _25;\n-      _Placeholder<26> _26;\n-      _Placeholder<27> _27;\n-      _Placeholder<28> _28;\n-      _Placeholder<29> _29;\n-    } \n+  {\n+    extern const _Placeholder<1> _1;\n+    extern const _Placeholder<2> _2;\n+    extern const _Placeholder<3> _3;\n+    extern const _Placeholder<4> _4;\n+    extern const _Placeholder<5> _5;\n+    extern const _Placeholder<6> _6;\n+    extern const _Placeholder<7> _7;\n+    extern const _Placeholder<8> _8;\n+    extern const _Placeholder<9> _9;\n+    extern const _Placeholder<10> _10;\n+    extern const _Placeholder<11> _11;\n+    extern const _Placeholder<12> _12;\n+    extern const _Placeholder<13> _13;\n+    extern const _Placeholder<14> _14;\n+    extern const _Placeholder<15> _15;\n+    extern const _Placeholder<16> _16;\n+    extern const _Placeholder<17> _17;\n+    extern const _Placeholder<18> _18;\n+    extern const _Placeholder<19> _19;\n+    extern const _Placeholder<20> _20;\n+    extern const _Placeholder<21> _21;\n+    extern const _Placeholder<22> _22;\n+    extern const _Placeholder<23> _23;\n+    extern const _Placeholder<24> _24;\n+    extern const _Placeholder<25> _25;\n+    extern const _Placeholder<26> _26;\n+    extern const _Placeholder<27> _27;\n+    extern const _Placeholder<28> _28;\n+    extern const _Placeholder<29> _29;\n   }\n \n   /**"}, {"sha": "21a1bfd3f8a0c29519acd59c1be08a534aa3e6d1", "filename": "libstdc++-v3/src/Makefile.am", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4192922c749ba0e0ca94b734ccabca8245520f9d/libstdc%2B%2B-v3%2Fsrc%2FMakefile.am", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4192922c749ba0e0ca94b734ccabca8245520f9d/libstdc%2B%2B-v3%2Fsrc%2FMakefile.am", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fsrc%2FMakefile.am?ref=4192922c749ba0e0ca94b734ccabca8245520f9d", "patch": "@@ -207,6 +207,7 @@ sources = \\\n \tlocale-inst.cc \\\n \tmisc-inst.cc \\\n \tostream-inst.cc \\\n+\tplaceholders.cc \\\n \tsstream-inst.cc \\\n \tstreambuf-inst.cc \\\n \tstreambuf.cc \\\n@@ -354,6 +355,11 @@ debug.lo: debug.cc\n debug.o: debug.cc\n \t$(CXXCOMPILE) -std=gnu++0x -c $<\n \n+placeholders.lo: placeholders.cc\n+\t$(LTCXXCOMPILE) -std=gnu++0x -c $<\n+placeholders.o: placeholders.cc\n+\t$(CXXCOMPILE) -std=gnu++0x -c $<\n+\n if GLIBCXX_LDBL_COMPAT\n # Use special rules for compatibility-ldbl.cc compilation, as we need to\n # pass -mlong-double-64."}, {"sha": "6776eb7e4bb7aad5031ad3c5e18f80fae2acb1bf", "filename": "libstdc++-v3/src/Makefile.in", "status": "modified", "additions": 11, "deletions": 4, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4192922c749ba0e0ca94b734ccabca8245520f9d/libstdc%2B%2B-v3%2Fsrc%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4192922c749ba0e0ca94b734ccabca8245520f9d/libstdc%2B%2B-v3%2Fsrc%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fsrc%2FMakefile.in?ref=4192922c749ba0e0ca94b734ccabca8245520f9d", "patch": "@@ -109,10 +109,11 @@ am__objects_5 = atomic.lo bitmap_allocator.lo pool_allocator.lo \\\n \tstrstream.lo system_error.lo tree.lo allocator-inst.lo \\\n \tconcept-inst.lo fstream-inst.lo ext-inst.lo ios-inst.lo \\\n \tiostream-inst.lo istream-inst.lo istream.lo locale-inst.lo \\\n-\tmisc-inst.lo ostream-inst.lo sstream-inst.lo streambuf-inst.lo \\\n-\tstreambuf.lo string-inst.lo valarray-inst.lo wlocale-inst.lo \\\n-\twstring-inst.lo mutex.lo condition_variable.lo chrono.lo \\\n-\tthread.lo future.lo $(am__objects_1) $(am__objects_4)\n+\tmisc-inst.lo ostream-inst.lo placeholders.lo sstream-inst.lo \\\n+\tstreambuf-inst.lo streambuf.lo string-inst.lo valarray-inst.lo \\\n+\twlocale-inst.lo wstring-inst.lo mutex.lo condition_variable.lo \\\n+\tchrono.lo thread.lo future.lo $(am__objects_1) \\\n+\t$(am__objects_4)\n am_libstdc___la_OBJECTS = $(am__objects_5)\n libstdc___la_OBJECTS = $(am_libstdc___la_OBJECTS)\n DEFAULT_INCLUDES = -I.@am__isrc@ -I$(top_builddir)\n@@ -422,6 +423,7 @@ sources = \\\n \tlocale-inst.cc \\\n \tmisc-inst.cc \\\n \tostream-inst.cc \\\n+\tplaceholders.cc \\\n \tsstream-inst.cc \\\n \tstreambuf-inst.cc \\\n \tstreambuf.cc \\\n@@ -941,6 +943,11 @@ debug.lo: debug.cc\n debug.o: debug.cc\n \t$(CXXCOMPILE) -std=gnu++0x -c $<\n \n+placeholders.lo: placeholders.cc\n+\t$(LTCXXCOMPILE) -std=gnu++0x -c $<\n+placeholders.o: placeholders.cc\n+\t$(CXXCOMPILE) -std=gnu++0x -c $<\n+\n # Use special rules for compatibility-ldbl.cc compilation, as we need to\n # pass -mlong-double-64.\n @GLIBCXX_LDBL_COMPAT_TRUE@compatibility-ldbl.lo: compatibility-ldbl.cc"}, {"sha": "1d68bb7cf9e0eef8b5947139448151c077fef922", "filename": "libstdc++-v3/src/placeholders.cc", "status": "added", "additions": 65, "deletions": 0, "changes": 65, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4192922c749ba0e0ca94b734ccabca8245520f9d/libstdc%2B%2B-v3%2Fsrc%2Fplaceholders.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4192922c749ba0e0ca94b734ccabca8245520f9d/libstdc%2B%2B-v3%2Fsrc%2Fplaceholders.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fsrc%2Fplaceholders.cc?ref=4192922c749ba0e0ca94b734ccabca8245520f9d", "patch": "@@ -0,0 +1,65 @@\n+// std::placeholders -*- C++ -*-\n+\n+// Copyright (C) 2011 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// Under Section 7 of GPL version 3, you are granted additional\n+// permissions described in the GCC Runtime Library Exception, version\n+// 3.1, as published by the Free Software Foundation.\n+\n+// You should have received a copy of the GNU General Public License and\n+// a copy of the GCC Runtime Library Exception along with this program;\n+// see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n+// <http://www.gnu.org/licenses/>.\n+\n+#ifndef __GXX_EXPERIMENTAL_CXX0X__\n+# error \"placeholders.cc must be compiled with -std=gnu++0x\"\n+#endif\n+\n+#include <functional>\n+\n+namespace std\n+{\n+  namespace placeholders \n+  {\n+    extern const _Placeholder<1> _1{};\n+    extern const _Placeholder<2> _2{};\n+    extern const _Placeholder<3> _3{};\n+    extern const _Placeholder<4> _4{};\n+    extern const _Placeholder<5> _5{};\n+    extern const _Placeholder<6> _6{};\n+    extern const _Placeholder<7> _7{};\n+    extern const _Placeholder<8> _8{};\n+    extern const _Placeholder<9> _9{};\n+    extern const _Placeholder<10> _10{};\n+    extern const _Placeholder<11> _11{};\n+    extern const _Placeholder<12> _12{};\n+    extern const _Placeholder<13> _13{};\n+    extern const _Placeholder<14> _14{};\n+    extern const _Placeholder<15> _15{};\n+    extern const _Placeholder<16> _16{};\n+    extern const _Placeholder<17> _17{};\n+    extern const _Placeholder<18> _18{};\n+    extern const _Placeholder<19> _19{};\n+    extern const _Placeholder<20> _20{};\n+    extern const _Placeholder<21> _21{};\n+    extern const _Placeholder<22> _22{};\n+    extern const _Placeholder<23> _23{};\n+    extern const _Placeholder<24> _24{};\n+    extern const _Placeholder<25> _25{};\n+    extern const _Placeholder<26> _26{};\n+    extern const _Placeholder<27> _27{};\n+    extern const _Placeholder<28> _28{};\n+    extern const _Placeholder<29> _29{};\n+  }\n+}"}]}