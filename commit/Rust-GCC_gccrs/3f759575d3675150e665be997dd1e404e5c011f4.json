{"sha": "3f759575d3675150e665be997dd1e404e5c011f4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2Y3NTk1NzVkMzY3NTE1MGU2NjViZTk5N2RkMWU0MDRlNWMwMTFmNA==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2018-04-03T17:41:06Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2018-04-03T17:41:06Z"}, "message": "Fix noexcept merging with system headers.\n\n\t* typeck.c (merge_types): Limit matching attribute shortcut to\n\tthe default case.\n\nFrom-SVN: r259042", "tree": {"sha": "7b0657845dab376aef31f53dd521a51bfb06a5a6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7b0657845dab376aef31f53dd521a51bfb06a5a6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3f759575d3675150e665be997dd1e404e5c011f4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3f759575d3675150e665be997dd1e404e5c011f4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3f759575d3675150e665be997dd1e404e5c011f4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3f759575d3675150e665be997dd1e404e5c011f4/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "b4231bf26e398d6799facf6bc93caeefd7d16d5a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b4231bf26e398d6799facf6bc93caeefd7d16d5a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b4231bf26e398d6799facf6bc93caeefd7d16d5a"}], "stats": {"total": 35, "additions": 29, "deletions": 6}, "files": [{"sha": "405cf82b5d200b0e45b2151699244516f5b89db2", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3f759575d3675150e665be997dd1e404e5c011f4/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3f759575d3675150e665be997dd1e404e5c011f4/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=3f759575d3675150e665be997dd1e404e5c011f4", "patch": "@@ -1,3 +1,8 @@\n+2018-04-03  Jason Merrill  <jason@redhat.com>\n+\n+\t* typeck.c (merge_types): Limit matching attribute shortcut to\n+\tthe default case.\n+\n 2018-04-03  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR c++/85147"}, {"sha": "e33f2c34c7f9f49f8338e8b9d447547d5126319c", "filename": "gcc/cp/typeck.c", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3f759575d3675150e665be997dd1e404e5c011f4/gcc%2Fcp%2Ftypeck.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3f759575d3675150e665be997dd1e404e5c011f4/gcc%2Fcp%2Ftypeck.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Ftypeck.c?ref=3f759575d3675150e665be997dd1e404e5c011f4", "patch": "@@ -899,14 +899,14 @@ merge_types (tree t1, tree t2)\n       return t1;\n \n     default:;\n+      if (attribute_list_equal (TYPE_ATTRIBUTES (t1), attributes))\n+\treturn t1;\n+      else if (attribute_list_equal (TYPE_ATTRIBUTES (t2), attributes))\n+\treturn t2;\n+      break;\n     }\n \n-  if (attribute_list_equal (TYPE_ATTRIBUTES (t1), attributes))\n-    return t1;\n-  else if (attribute_list_equal (TYPE_ATTRIBUTES (t2), attributes))\n-    return t2;\n-  else\n-    return cp_build_type_attribute_variant (t1, attributes);\n+  return cp_build_type_attribute_variant (t1, attributes);\n }\n \n /* Return the ARRAY_TYPE type without its domain.  */"}, {"sha": "571c426aa6708a6ccffac99ce48c326c5c8f0bb1", "filename": "gcc/testsuite/g++.dg/cpp1z/noexcept-type19.C", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3f759575d3675150e665be997dd1e404e5c011f4/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fnoexcept-type19.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3f759575d3675150e665be997dd1e404e5c011f4/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fnoexcept-type19.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fnoexcept-type19.C?ref=3f759575d3675150e665be997dd1e404e5c011f4", "patch": "@@ -0,0 +1,14 @@\n+// { dg-do compile { target c++11 } }\n+\n+#include \"noexcept-type19.h\"\n+\n+extern \"C\" void *malloc (size_t);\n+\n+template<class T> void f(T*);\n+\n+void *g(size_t);\n+\n+int main()\n+{\n+  f<decltype(malloc)>(g);\n+}"}, {"sha": "33a29357e7fab43743991e28ff72d573a0e3436a", "filename": "gcc/testsuite/g++.dg/cpp1z/noexcept-type19.h", "status": "added", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3f759575d3675150e665be997dd1e404e5c011f4/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fnoexcept-type19.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3f759575d3675150e665be997dd1e404e5c011f4/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fnoexcept-type19.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fnoexcept-type19.h?ref=3f759575d3675150e665be997dd1e404e5c011f4", "patch": "@@ -0,0 +1,4 @@\n+#pragma GCC system_header\n+\n+typedef decltype(sizeof(0)) size_t;\n+extern \"C\" void *malloc (size_t) throw();"}]}