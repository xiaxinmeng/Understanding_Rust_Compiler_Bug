{"sha": "1fcbfb00fc675ee33b90ae486f3acb5916c93400", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWZjYmZiMDBmYzY3NWVlMzNiOTBhZTQ4NmYzYWNiNTkxNmM5MzQwMA==", "commit": {"author": {"name": "Andrew Waterman", "email": "andrew@sifive.com", "date": "2018-10-05T20:18:21Z"}, "committer": {"name": "Jim Wilson", "email": "wilson@gcc.gnu.org", "date": "2018-10-05T20:18:21Z"}, "message": "RISC-V: Fix -fsignaling-nans for glibc testsuite.\n\n\tgcc/\n\t* config/riscv/riscv.md (f<quiet_pattern>_quiet<ANYF:mode><X:mode>4):\n\tAdd define_expand.  Add ! HONOR_SNANS check to current pattern.  Add\n\tnew pattern using HONOR_SNANS that emits one extra instruction.\n\nCo-Authored-By: Jim Wilson <jimw@sifive.com>\n\nFrom-SVN: r264892", "tree": {"sha": "521d320fc3d5b0ff12c9592e49c5110fac5d223c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/521d320fc3d5b0ff12c9592e49c5110fac5d223c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1fcbfb00fc675ee33b90ae486f3acb5916c93400", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1fcbfb00fc675ee33b90ae486f3acb5916c93400", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1fcbfb00fc675ee33b90ae486f3acb5916c93400", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1fcbfb00fc675ee33b90ae486f3acb5916c93400/comments", "author": {"login": "aswaterman", "id": 1031106, "node_id": "MDQ6VXNlcjEwMzExMDY=", "avatar_url": "https://avatars.githubusercontent.com/u/1031106?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aswaterman", "html_url": "https://github.com/aswaterman", "followers_url": "https://api.github.com/users/aswaterman/followers", "following_url": "https://api.github.com/users/aswaterman/following{/other_user}", "gists_url": "https://api.github.com/users/aswaterman/gists{/gist_id}", "starred_url": "https://api.github.com/users/aswaterman/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aswaterman/subscriptions", "organizations_url": "https://api.github.com/users/aswaterman/orgs", "repos_url": "https://api.github.com/users/aswaterman/repos", "events_url": "https://api.github.com/users/aswaterman/events{/privacy}", "received_events_url": "https://api.github.com/users/aswaterman/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "a3a81f292256069546bc2b0b9ebddb229af117b1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a3a81f292256069546bc2b0b9ebddb229af117b1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a3a81f292256069546bc2b0b9ebddb229af117b1"}], "stats": {"total": 41, "additions": 35, "deletions": 6}, "files": [{"sha": "6d81f73a708e5deec15857f14a2f5335b0745c54", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1fcbfb00fc675ee33b90ae486f3acb5916c93400/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1fcbfb00fc675ee33b90ae486f3acb5916c93400/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=1fcbfb00fc675ee33b90ae486f3acb5916c93400", "patch": "@@ -1,3 +1,10 @@\n+2018-10-05  Andrew Waterman  <andrew@sifive.com>\n+\t    Jim Wilson  <jimw@sifive.com>\n+\n+\t* config/riscv/riscv.md (f<quiet_pattern>_quiet<ANYF:mode><X:mode>4):\n+\tAdd define_expand.  Add ! HONOR_SNANS check to current pattern.  Add\n+\tnew pattern using HONOR_SNANS that emits one extra instruction.\n+\n 2018-10-05  Segher Boessenkool  <segher@kernel.crashing.org>\n \n \t* config/rs6000/rs6000.md (unnamed mfcr scc_comparison_operator"}, {"sha": "b6c20230ffdf203634d102d5da99c66b41ebc92a", "filename": "gcc/config/riscv/riscv.md", "status": "modified", "additions": 28, "deletions": 6, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1fcbfb00fc675ee33b90ae486f3acb5916c93400/gcc%2Fconfig%2Friscv%2Friscv.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1fcbfb00fc675ee33b90ae486f3acb5916c93400/gcc%2Fconfig%2Friscv%2Friscv.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Friscv%2Friscv.md?ref=1fcbfb00fc675ee33b90ae486f3acb5916c93400", "patch": "@@ -1957,19 +1957,41 @@\n   [(set_attr \"type\" \"fcmp\")\n    (set_attr \"mode\" \"<UNITMODE>\")])\n \n-(define_insn \"f<quiet_pattern>_quiet<ANYF:mode><X:mode>4\"\n-   [(set (match_operand:X         0 \"register_operand\" \"=r\")\n+(define_expand \"f<quiet_pattern>_quiet<ANYF:mode><X:mode>4\"\n+   [(parallel [(set (match_operand:X      0 \"register_operand\")\n+\t\t    (unspec:X\n+\t\t     [(match_operand:ANYF 1 \"register_operand\")\n+\t\t      (match_operand:ANYF 2 \"register_operand\")]\n+\t\t     QUIET_COMPARISON))\n+\t       (clobber (match_scratch:X 3))])]\n+  \"TARGET_HARD_FLOAT\")\n+\n+(define_insn \"*f<quiet_pattern>_quiet<ANYF:mode><X:mode>4_default\"\n+   [(set (match_operand:X      0 \"register_operand\" \"=r\")\n \t (unspec:X\n-\t     [(match_operand:ANYF 1 \"register_operand\" \" f\")\n-\t      (match_operand:ANYF 2 \"register_operand\" \" f\")]\n-\t     QUIET_COMPARISON))\n+\t  [(match_operand:ANYF 1 \"register_operand\" \" f\")\n+\t   (match_operand:ANYF 2 \"register_operand\" \" f\")]\n+\t  QUIET_COMPARISON))\n     (clobber (match_scratch:X 3 \"=&r\"))]\n-  \"TARGET_HARD_FLOAT\"\n+  \"TARGET_HARD_FLOAT && ! HONOR_SNANS (<ANYF:MODE>mode)\"\n   \"frflags\\t%3\\n\\tf<quiet_pattern>.<fmt>\\t%0,%1,%2\\n\\tfsflags %3\"\n   [(set_attr \"type\" \"fcmp\")\n    (set_attr \"mode\" \"<UNITMODE>\")\n    (set (attr \"length\") (const_int 12))])\n \n+(define_insn \"*f<quiet_pattern>_quiet<ANYF:mode><X:mode>4_snan\"\n+   [(set (match_operand:X      0 \"register_operand\" \"=r\")\n+\t (unspec:X\n+\t  [(match_operand:ANYF 1 \"register_operand\" \" f\")\n+\t   (match_operand:ANYF 2 \"register_operand\" \" f\")]\n+\t  QUIET_COMPARISON))\n+    (clobber (match_scratch:X 3 \"=&r\"))]\n+  \"TARGET_HARD_FLOAT && HONOR_SNANS (<ANYF:MODE>mode)\"\n+  \"frflags\\t%3\\n\\tf<quiet_pattern>.<fmt>\\t%0,%1,%2\\n\\tfsflags %3\\n\\tfeq.<fmt>\\tzero,%1,%2\"\n+  [(set_attr \"type\" \"fcmp\")\n+   (set_attr \"mode\" \"<UNITMODE>\")\n+   (set (attr \"length\") (const_int 16))])\n+\n (define_insn \"*seq_zero_<X:mode><GPR:mode>\"\n   [(set (match_operand:GPR       0 \"register_operand\" \"=r\")\n \t(eq:GPR (match_operand:X 1 \"register_operand\" \" r\")"}]}