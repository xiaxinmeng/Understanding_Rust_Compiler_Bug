{"sha": "e2bf200700a29fc74f9cc7dd4ae942c89f8dff24", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTJiZjIwMDcwMGEyOWZjNzRmOWNjN2RkNGFlOTQyYzg5ZjhkZmYyNA==", "commit": {"author": {"name": "Paolo Carlini", "email": "paolo.carlini@oracle.com", "date": "2009-12-23T17:14:15Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2009-12-23T17:14:15Z"}, "message": "stl_deque.h (copy(_Deque_iterator, _Deque_iterator, _Deque_iterator), [...]): Declare.\n\n2009-12-23  Paolo Carlini  <paolo.carlini@oracle.com>\n\n\t* include/bits/stl_deque.h (copy(_Deque_iterator, _Deque_iterator,\n\t_Deque_iterator), move(_Deque_iterator, _Deque_iterator,\n\t_Deque_iterator)): Declare.\n\t* include/bits/deque.tcc: Implement the latter.\n\t* testsuite/performance/25_algorithms/copy_deque_iterators.cc: New.\n\t* testsuite/25_algorithms/move/2.cc: Likewise.\n\t* testsuite/25_algorithms/copy/5.cc: Likewise.\n\t* testsuite/23_containers/deque/requirements/dr438/assign_neg.cc:\n\tAdjust dg-error line number.\n\t* testsuite/23_containers/deque/requirements/dr438/insert_neg.cc:\n\tLikewise.\n\t* testsuite/23_containers/deque/requirements/dr438/\n\tconstructor_1_neg.cc: Likewise.\n\t* testsuite/23_containers/deque/requirements/dr438/\n\tconstructor_2_neg.cc: Likewise.\n\nFrom-SVN: r155432", "tree": {"sha": "fb95dcb3f84372631090e20cd492e0135282a75f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/fb95dcb3f84372631090e20cd492e0135282a75f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e2bf200700a29fc74f9cc7dd4ae942c89f8dff24", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e2bf200700a29fc74f9cc7dd4ae942c89f8dff24", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e2bf200700a29fc74f9cc7dd4ae942c89f8dff24", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e2bf200700a29fc74f9cc7dd4ae942c89f8dff24/comments", "author": null, "committer": null, "parents": [{"sha": "7f7211fb3fafede9ca157d5bceb3e7a0bc9cc74b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7f7211fb3fafede9ca157d5bceb3e7a0bc9cc74b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7f7211fb3fafede9ca157d5bceb3e7a0bc9cc74b"}], "stats": {"total": 254, "additions": 247, "deletions": 7}, "files": [{"sha": "fd3b9f87632b8591b4bce599c3ff6dae48ae036d", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e2bf200700a29fc74f9cc7dd4ae942c89f8dff24/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e2bf200700a29fc74f9cc7dd4ae942c89f8dff24/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=e2bf200700a29fc74f9cc7dd4ae942c89f8dff24", "patch": "@@ -1,3 +1,21 @@\n+2009-12-23  Paolo Carlini  <paolo.carlini@oracle.com>\n+\n+\t* include/bits/stl_deque.h (copy(_Deque_iterator, _Deque_iterator,\n+\t_Deque_iterator), move(_Deque_iterator, _Deque_iterator,\n+\t_Deque_iterator)): Declare.\n+\t* include/bits/deque.tcc: Implement the latter.\n+\t* testsuite/performance/25_algorithms/copy_deque_iterators.cc: New.\n+\t* testsuite/25_algorithms/move/2.cc: Likewise.\n+\t* testsuite/25_algorithms/copy/5.cc: Likewise.\n+\t* testsuite/23_containers/deque/requirements/dr438/assign_neg.cc:\n+\tAdjust dg-error line number.\n+\t* testsuite/23_containers/deque/requirements/dr438/insert_neg.cc:\n+\tLikewise.\n+\t* testsuite/23_containers/deque/requirements/dr438/\n+\tconstructor_1_neg.cc: Likewise.\n+\t* testsuite/23_containers/deque/requirements/dr438/\n+\tconstructor_2_neg.cc: Likewise.\n+\n 2009-12-22  Iain Sandoe  <iain.sandoe@sandoe-acoustics.co.uk>\n \n \tPR target/41605"}, {"sha": "968fc0051c5da67dac42493104cfff23b8505b3f", "filename": "libstdc++-v3/include/bits/deque.tcc", "status": "modified", "additions": 47, "deletions": 1, "changes": 48, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e2bf200700a29fc74f9cc7dd4ae942c89f8dff24/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fdeque.tcc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e2bf200700a29fc74f9cc7dd4ae942c89f8dff24/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fdeque.tcc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fdeque.tcc?ref=e2bf200700a29fc74f9cc7dd4ae942c89f8dff24", "patch": "@@ -837,7 +837,7 @@ _GLIBCXX_BEGIN_NESTED_NAMESPACE(std, _GLIBCXX_STD_D)\n     }\n \n   // Overload for deque::iterators, exploiting the \"segmented-iterator\n-  // optimization\".  NB: leave const_iterators alone!\n+  // optimization\".\n   template<typename _Tp>\n     void\n     fill(const _Deque_iterator<_Tp, _Tp&, _Tp*>& __first,\n@@ -858,6 +858,52 @@ _GLIBCXX_BEGIN_NESTED_NAMESPACE(std, _GLIBCXX_STD_D)\n \tstd::fill(__first._M_cur, __last._M_cur, __value);\n     }\n \n+  template<typename _Tp>\n+    _Deque_iterator<_Tp, _Tp&, _Tp*>\n+    copy(_Deque_iterator<_Tp, const _Tp&, const _Tp*> __first,\n+\t _Deque_iterator<_Tp, const _Tp&, const _Tp*> __last,\n+\t _Deque_iterator<_Tp, _Tp&, _Tp*> __result)\n+    {\n+      typedef typename _Deque_iterator<_Tp, _Tp&, _Tp*>::_Self _Self;\n+\n+      typename _Self::difference_type __len = __last - __first;\n+      while (__len > 0)\n+\t{\n+\t  typename _Self::difference_type __clen\n+\t    = std::min(__len, std::min(__first._M_last - __first._M_cur,\n+\t\t\t\t       __result._M_last - __result._M_cur));\n+\t  std::copy(__first._M_cur, __first._M_cur + __clen, __result._M_cur);\n+\t  __first += __clen;\n+\t  __result += __clen;\n+\t  __len -= __clen;\n+\t}\n+      return __result;\n+    }\n+\n+#ifdef __GXX_EXPERIMENTAL_CXX0X__\n+  template<typename _Tp>\n+    _Deque_iterator<_Tp, _Tp&, _Tp*>\n+    move(_Deque_iterator<_Tp, const _Tp&, const _Tp*> __first,\n+\t _Deque_iterator<_Tp, const _Tp&, const _Tp*> __last,\n+\t _Deque_iterator<_Tp, _Tp&, _Tp*> __result)\n+    {\n+      typedef typename _Deque_iterator<_Tp, _Tp&, _Tp*>::_Self _Self;\n+\n+      typename _Self::difference_type __len = __last - __first;\n+      while (__len > 0)\n+\t{\n+\t  const typename _Self::difference_type __clen\n+\t    = std::min(__len, std::min(__first._M_last - __first._M_cur,\n+\t\t\t\t       __result._M_last - __result._M_cur));\n+\t  std::move(__first._M_cur, __first._M_cur + __clen, __result._M_cur);\n+\t  __first += __clen;\n+\t  __result += __clen;\n+\t  __len -= __clen;\n+\t}\n+      return __result;\n+    }\n+#endif\n+\n _GLIBCXX_END_NESTED_NAMESPACE\n \n #endif"}, {"sha": "99105ebdcd48e46c3dec4dd9196c198b02805e75", "filename": "libstdc++-v3/include/bits/stl_deque.h", "status": "modified", "additions": 34, "deletions": 2, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e2bf200700a29fc74f9cc7dd4ae942c89f8dff24/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_deque.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e2bf200700a29fc74f9cc7dd4ae942c89f8dff24/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_deque.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_deque.h?ref=e2bf200700a29fc74f9cc7dd4ae942c89f8dff24", "patch": "@@ -352,8 +352,40 @@ _GLIBCXX_BEGIN_NESTED_NAMESPACE(std, _GLIBCXX_STD_D)\n \n   template<typename _Tp>\n     void\n-    fill(const _Deque_iterator<_Tp, _Tp&, _Tp*>& __first,\n-\t const _Deque_iterator<_Tp, _Tp&, _Tp*>& __last, const _Tp& __value);\n+    fill(const _Deque_iterator<_Tp, _Tp&, _Tp*>&,\n+\t const _Deque_iterator<_Tp, _Tp&, _Tp*>&, const _Tp&);\n+\n+  template<typename _Tp>\n+    _Deque_iterator<_Tp, _Tp&, _Tp*>\n+    copy(_Deque_iterator<_Tp, const _Tp&, const _Tp*>,\n+\t _Deque_iterator<_Tp, const _Tp&, const _Tp*>,\n+\t _Deque_iterator<_Tp, _Tp&, _Tp*>);\n+\n+  template<typename _Tp>\n+    inline _Deque_iterator<_Tp, _Tp&, _Tp*>\n+    copy(_Deque_iterator<_Tp, _Tp&, _Tp*> __first,\n+\t _Deque_iterator<_Tp, _Tp&, _Tp*> __last,\n+\t _Deque_iterator<_Tp, _Tp&, _Tp*> __result)\n+    { return std::copy(_Deque_iterator<_Tp, const _Tp&, const _Tp*>(__first),\n+\t\t       _Deque_iterator<_Tp, const _Tp&, const _Tp*>(__last),\n+\t\t       __result); }\n+\n+#ifdef __GXX_EXPERIMENTAL_CXX0X__\n+  template<typename _Tp>\n+    _Deque_iterator<_Tp, _Tp&, _Tp*>\n+    move(_Deque_iterator<_Tp, const _Tp&, const _Tp*>,\n+\t _Deque_iterator<_Tp, const _Tp&, const _Tp*>,\n+\t _Deque_iterator<_Tp, _Tp&, _Tp*>);\n+\n+  template<typename _Tp>\n+    inline _Deque_iterator<_Tp, _Tp&, _Tp*>\n+    move(_Deque_iterator<_Tp, _Tp&, _Tp*> __first,\n+\t _Deque_iterator<_Tp, _Tp&, _Tp*> __last,\n+\t _Deque_iterator<_Tp, _Tp&, _Tp*> __result)\n+    { return std::move(_Deque_iterator<_Tp, const _Tp&, const _Tp*>(__first),\n+\t\t       _Deque_iterator<_Tp, const _Tp&, const _Tp*>(__last),\n+\t\t       __result); }\n+#endif\n \n   /**\n    *  Deque base class.  This class provides the unified face for %deque's"}, {"sha": "b022e14a6095578366a9450a6cac4076a2ccf043", "filename": "libstdc++-v3/testsuite/23_containers/deque/requirements/dr438/assign_neg.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e2bf200700a29fc74f9cc7dd4ae942c89f8dff24/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fdeque%2Frequirements%2Fdr438%2Fassign_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e2bf200700a29fc74f9cc7dd4ae942c89f8dff24/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fdeque%2Frequirements%2Fdr438%2Fassign_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fdeque%2Frequirements%2Fdr438%2Fassign_neg.cc?ref=e2bf200700a29fc74f9cc7dd4ae942c89f8dff24", "patch": "@@ -18,7 +18,7 @@\n // <http://www.gnu.org/licenses/>.\n \n // { dg-do compile }\n-// { dg-error \"no matching\" \"\" { target *-*-* } 1502 }\n+// { dg-error \"no matching\" \"\" { target *-*-* } 1534 }\n // { dg-excess-errors \"\" }\n \n #include <deque>"}, {"sha": "a43f2c707a5d7e58b59ac0d30dcbce0dd5af32cc", "filename": "libstdc++-v3/testsuite/23_containers/deque/requirements/dr438/constructor_1_neg.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e2bf200700a29fc74f9cc7dd4ae942c89f8dff24/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fdeque%2Frequirements%2Fdr438%2Fconstructor_1_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e2bf200700a29fc74f9cc7dd4ae942c89f8dff24/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fdeque%2Frequirements%2Fdr438%2Fconstructor_1_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fdeque%2Frequirements%2Fdr438%2Fconstructor_1_neg.cc?ref=e2bf200700a29fc74f9cc7dd4ae942c89f8dff24", "patch": "@@ -18,7 +18,7 @@\n // <http://www.gnu.org/licenses/>.\n \n // { dg-do compile }\n-// { dg-error \"no matching\" \"\" { target *-*-* } 1441 }\n+// { dg-error \"no matching\" \"\" { target *-*-* } 1473 }\n // { dg-excess-errors \"\" }\n \n #include <deque>"}, {"sha": "71a4ceb3c6910898201bb9001668fe6d13451fa8", "filename": "libstdc++-v3/testsuite/23_containers/deque/requirements/dr438/constructor_2_neg.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e2bf200700a29fc74f9cc7dd4ae942c89f8dff24/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fdeque%2Frequirements%2Fdr438%2Fconstructor_2_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e2bf200700a29fc74f9cc7dd4ae942c89f8dff24/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fdeque%2Frequirements%2Fdr438%2Fconstructor_2_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fdeque%2Frequirements%2Fdr438%2Fconstructor_2_neg.cc?ref=e2bf200700a29fc74f9cc7dd4ae942c89f8dff24", "patch": "@@ -18,7 +18,7 @@\n // <http://www.gnu.org/licenses/>.\n \n // { dg-do compile }\n-// { dg-error \"no matching\" \"\" { target *-*-* } 1441 }\n+// { dg-error \"no matching\" \"\" { target *-*-* } 1473 }\n // { dg-excess-errors \"\" }\n \n #include <deque>"}, {"sha": "8709c4658d2b19911e2fc4e471c03fa819d9a62f", "filename": "libstdc++-v3/testsuite/23_containers/deque/requirements/dr438/insert_neg.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e2bf200700a29fc74f9cc7dd4ae942c89f8dff24/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fdeque%2Frequirements%2Fdr438%2Finsert_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e2bf200700a29fc74f9cc7dd4ae942c89f8dff24/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fdeque%2Frequirements%2Fdr438%2Finsert_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fdeque%2Frequirements%2Fdr438%2Finsert_neg.cc?ref=e2bf200700a29fc74f9cc7dd4ae942c89f8dff24", "patch": "@@ -18,7 +18,7 @@\n // <http://www.gnu.org/licenses/>.\n \n // { dg-do compile }\n-// { dg-error \"no matching\" \"\" { target *-*-* } 1586 }\n+// { dg-error \"no matching\" \"\" { target *-*-* } 1618 }\n // { dg-excess-errors \"\" }\n \n #include <deque>"}, {"sha": "5d100e8714dca1dacce3724ac486aad975915d3a", "filename": "libstdc++-v3/testsuite/25_algorithms/copy/5.cc", "status": "added", "additions": 51, "deletions": 0, "changes": 51, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e2bf200700a29fc74f9cc7dd4ae942c89f8dff24/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Fcopy%2F5.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e2bf200700a29fc74f9cc7dd4ae942c89f8dff24/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Fcopy%2F5.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Fcopy%2F5.cc?ref=e2bf200700a29fc74f9cc7dd4ae942c89f8dff24", "patch": "@@ -0,0 +1,51 @@\n+// 2009-12-23  Paolo Carlini  <paolo.carlini@oracle.com>\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without Pred the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+#include <algorithm>\n+#include <deque>\n+#include <testsuite_hooks.h>\n+\n+void test01()\n+{\n+  bool test __attribute__((unused)) = true;\n+  using namespace std;\n+\n+  deque<long> data(200);\n+  for (unsigned i = 0; i < data.size(); ++i)\n+    data[i] = i;\n+\n+  const deque<long> data_1(data.size(), -1);\n+\n+  for (unsigned i = 0; i < data.size(); i += 2)\n+    for (unsigned j = i; j <= data.size(); j += 3)\n+      for (unsigned k = 0; k + (j - i) <= data.size(); k += 5)\n+\t{\n+\t  deque<long> d(data.size(), -1);\n+\t  copy(data.begin() + i, data.begin() + j, d.begin() + k);\n+\n+\t  VERIFY( equal(data.begin() + i, data.begin() + j,\n+\t\t\td.begin() + k) );\n+\t  VERIFY( equal(d.begin(), d.begin() + k, data_1.begin()) );\n+\t  VERIFY( equal(d.begin() + k + (j - i), d.end(), data_1.begin()) );\n+\t}\n+}\n+\n+int main()\n+{\n+  test01();\n+  return 0;\n+}"}, {"sha": "0e0debf7baaaa2da76165c442c07231fd047bcf1", "filename": "libstdc++-v3/testsuite/25_algorithms/move/2.cc", "status": "added", "additions": 53, "deletions": 0, "changes": 53, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e2bf200700a29fc74f9cc7dd4ae942c89f8dff24/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Fmove%2F2.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e2bf200700a29fc74f9cc7dd4ae942c89f8dff24/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Fmove%2F2.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Fmove%2F2.cc?ref=e2bf200700a29fc74f9cc7dd4ae942c89f8dff24", "patch": "@@ -0,0 +1,53 @@\n+// { dg-options \"-std=gnu++0x\" }\n+\n+// 2009-12-23  Paolo Carlini  <paolo.carlini@oracle.com>\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without Pred the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+#include <algorithm>\n+#include <deque>\n+#include <testsuite_hooks.h>\n+\n+void test01()\n+{\n+  bool test __attribute__((unused)) = true;\n+  using namespace std;\n+\n+  deque<long> data(200);\n+  for (unsigned i = 0; i < data.size(); ++i)\n+    data[i] = i;\n+\n+  const deque<long> data_1(data.size(), -1);\n+\n+  for (unsigned i = 0; i < data.size(); i += 2)\n+    for (unsigned j = i; j <= data.size(); j += 3)\n+      for (unsigned k = 0; k + (j - i) <= data.size(); k += 5)\n+\t{\n+\t  deque<long> d(data.size(), -1);\n+\t  move(data.begin() + i, data.begin() + j, d.begin() + k);\n+\n+\t  VERIFY( equal(data.begin() + i, data.begin() + j,\n+\t\t\td.begin() + k) );\n+\t  VERIFY( equal(d.begin(), d.begin() + k, data_1.begin()) );\n+\t  VERIFY( equal(d.begin() + k + (j - i), d.end(), data_1.begin()) );\n+\t}\n+}\n+\n+int main()\n+{\n+  test01();\n+  return 0;\n+}"}, {"sha": "4318bd4f46052fdd6273de384836cfd7b36a1f91", "filename": "libstdc++-v3/testsuite/performance/25_algorithms/copy_deque_iterators.cc", "status": "added", "additions": 40, "deletions": 0, "changes": 40, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e2bf200700a29fc74f9cc7dd4ae942c89f8dff24/libstdc%2B%2B-v3%2Ftestsuite%2Fperformance%2F25_algorithms%2Fcopy_deque_iterators.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e2bf200700a29fc74f9cc7dd4ae942c89f8dff24/libstdc%2B%2B-v3%2Ftestsuite%2Fperformance%2F25_algorithms%2Fcopy_deque_iterators.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Fperformance%2F25_algorithms%2Fcopy_deque_iterators.cc?ref=e2bf200700a29fc74f9cc7dd4ae942c89f8dff24", "patch": "@@ -0,0 +1,40 @@\n+// 2009-23-12  Paolo Carlini  <paolo.carlini@oracle.com>\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without Pred the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+#include <deque>\n+#include <testsuite_performance.h>\n+\n+int main()\n+{\n+  using namespace __gnu_test;\n+\n+  time_counter time;\n+  resource_counter resource;\n+\n+  const std::deque<int> data(3000, 3);\n+\n+  std::deque<int> d(3000, 1);\n+\n+  start_counters(time, resource);\n+  for (int i = 0; i < 1000; ++i)\n+    for (int j = 0; j < 3000; ++j)\n+      std::copy(data.begin(), data.begin() + j, d.begin());\n+  stop_counters(time, resource);\n+  report_performance(__FILE__, \"\", time, resource);\n+\n+  return 0;\n+}"}]}