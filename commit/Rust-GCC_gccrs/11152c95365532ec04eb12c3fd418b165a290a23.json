{"sha": "11152c95365532ec04eb12c3fd418b165a290a23", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTExNTJjOTUzNjU1MzJlYzA0ZWIxMmMzZmQ0MThiMTY1YTI5MGEyMw==", "commit": {"author": {"name": "Richard Guenther", "email": "rguenther@suse.de", "date": "2010-04-21T09:37:22Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2010-04-21T09:37:22Z"}, "message": "tree-ssa-structalias.c (do_ds_constraint): Avoid escaping to non-pointer objects.\n\n2010-04-21  Richard Guenther  <rguenther@suse.de>\n\n\t* tree-ssa-structalias.c (do_ds_constraint): Avoid escaping\n\tto non-pointer objects.\n\n\t* gcc.dg/ipa/ipa-pta-11.c: Adjust.\n\nFrom-SVN: r158591", "tree": {"sha": "be1f0c8485376e56857fd80db6dc76a75626f21a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/be1f0c8485376e56857fd80db6dc76a75626f21a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/11152c95365532ec04eb12c3fd418b165a290a23", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/11152c95365532ec04eb12c3fd418b165a290a23", "html_url": "https://github.com/Rust-GCC/gccrs/commit/11152c95365532ec04eb12c3fd418b165a290a23", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/11152c95365532ec04eb12c3fd418b165a290a23/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "0f2f44c007550bdf388940b6a09da1eeaa9caa3f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0f2f44c007550bdf388940b6a09da1eeaa9caa3f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0f2f44c007550bdf388940b6a09da1eeaa9caa3f"}], "stats": {"total": 47, "additions": 30, "deletions": 17}, "files": [{"sha": "34eff7c6b930e991bf5682aed740dc0994507e0b", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/11152c95365532ec04eb12c3fd418b165a290a23/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/11152c95365532ec04eb12c3fd418b165a290a23/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=11152c95365532ec04eb12c3fd418b165a290a23", "patch": "@@ -1,3 +1,8 @@\n+2010-04-21  Richard Guenther  <rguenther@suse.de>\n+\n+\t* tree-ssa-structalias.c (do_ds_constraint): Avoid escaping\n+\tto non-pointer objects.\n+\n 2010-04-21  Jakub Jelinek  <jakub@redhat.com>\n \n \t* dwarf2out.c (add_var_loc_to_decl): Add LABEL argument.  Drop"}, {"sha": "f30277cf8ad48ed43e79a498dda395184f4b6d9a", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/11152c95365532ec04eb12c3fd418b165a290a23/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/11152c95365532ec04eb12c3fd418b165a290a23/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=11152c95365532ec04eb12c3fd418b165a290a23", "patch": "@@ -1,3 +1,7 @@\n+2010-04-21  Richard Guenther  <rguenther@suse.de>\n+\n+\t* gcc.dg/ipa/ipa-pta-11.c: Adjust.\n+\n 2010-04-21  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n \n \t* gcc.dg/torture/builtin-cproj-3.c: New."}, {"sha": "6ef7438dd6babcc3d5d0da27d9b468994369eabc", "filename": "gcc/testsuite/gcc.dg/ipa/ipa-pta-11.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/11152c95365532ec04eb12c3fd418b165a290a23/gcc%2Ftestsuite%2Fgcc.dg%2Fipa%2Fipa-pta-11.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/11152c95365532ec04eb12c3fd418b165a290a23/gcc%2Ftestsuite%2Fgcc.dg%2Fipa%2Fipa-pta-11.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fipa%2Fipa-pta-11.c?ref=11152c95365532ec04eb12c3fd418b165a290a23", "patch": "@@ -29,5 +29,5 @@ int main()\n /* It isn't clear if the escape if l is strictly necessary, if it were\n    we should have i, r and s in ESCAPED as well.  */\n \n-/* { dg-final { scan-ipa-dump \"ESCAPED = { ESCAPED NONLOCAL l k }\" \"pta\" } } */\n+/* { dg-final { scan-ipa-dump \"ESCAPED = { l k }\" \"pta\" } } */\n /* { dg-final { cleanup-ipa-dump \"pta\" } } */"}, {"sha": "207cb17811561fbf85327318b969726b1b8eb631", "filename": "gcc/tree-ssa-structalias.c", "status": "modified", "additions": 20, "deletions": 16, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/11152c95365532ec04eb12c3fd418b165a290a23/gcc%2Ftree-ssa-structalias.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/11152c95365532ec04eb12c3fd418b165a290a23/gcc%2Ftree-ssa-structalias.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-structalias.c?ref=11152c95365532ec04eb12c3fd418b165a290a23", "patch": "@@ -1746,6 +1746,7 @@ do_ds_constraint (constraint_t c, bitmap delta)\n   unsigned int j;\n   bitmap_iterator bi;\n   HOST_WIDE_INT loff = c->lhs.offset;\n+  bool escaped_p = false;\n \n   /* Our IL does not allow this.  */\n   gcc_assert (c->rhs.offset == 0);\n@@ -1792,22 +1793,6 @@ do_ds_constraint (constraint_t c, bitmap delta)\n       unsigned int t;\n       HOST_WIDE_INT fieldoffset = v->offset + loff;\n \n-      /* If v is a global variable then this is an escape point.  */\n-      if (v->is_global_var)\n-\t{\n-\t  t = find (escaped_id);\n-\t  if (add_graph_edge (graph, t, rhs)\n-\t      && bitmap_ior_into (get_varinfo (t)->solution, sol)\n-\t      && !TEST_BIT (changed, t))\n-\t    {\n-\t      SET_BIT (changed, t);\n-\t      changed_count++;\n-\t    }\n-\t}\n-\n-      if (v->is_special_var)\n-\tcontinue;\n-\n       if (v->is_full_var)\n \tfieldoffset = v->offset;\n       else if (loff != 0)\n@@ -1820,6 +1805,25 @@ do_ds_constraint (constraint_t c, bitmap delta)\n \t{\n \t  if (v->may_have_pointers)\n \t    {\n+\t      /* If v is a global variable then this is an escape point.  */\n+\t      if (v->is_global_var\n+\t\t  && !escaped_p)\n+\t\t{\n+\t\t  t = find (escaped_id);\n+\t\t  if (add_graph_edge (graph, t, rhs)\n+\t\t      && bitmap_ior_into (get_varinfo (t)->solution, sol)\n+\t\t      && !TEST_BIT (changed, t))\n+\t\t    {\n+\t\t      SET_BIT (changed, t);\n+\t\t      changed_count++;\n+\t\t    }\n+\t\t  /* Enough to let rhs escape once.  */\n+\t\t  escaped_p = true;\n+\t\t}\n+\n+\t      if (v->is_special_var)\n+\t\tbreak;\n+\n \t      t = find (v->id);\n \t      if (add_graph_edge (graph, t, rhs)\n \t\t  && bitmap_ior_into (get_varinfo (t)->solution, sol)"}]}