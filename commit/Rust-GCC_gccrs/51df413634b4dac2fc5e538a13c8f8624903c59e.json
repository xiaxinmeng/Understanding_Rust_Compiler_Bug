{"sha": "51df413634b4dac2fc5e538a13c8f8624903c59e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTFkZjQxMzYzNGI0ZGFjMmZjNWU1MzhhMTNjOGY4NjI0OTAzYzU5ZQ==", "commit": {"author": {"name": "Kewen Lin", "email": "linkw@gcc.gnu.org", "date": "2019-09-29T05:08:14Z"}, "committer": {"name": "Kewen Lin", "email": "linkw@gcc.gnu.org", "date": "2019-09-29T05:08:14Z"}, "message": "This patch is to add the support for float from/to long conversion\nvectorization on port rs6000.\n\ngcc/ChangeLog\n\n2019-09-29  Kewen Lin  <linkw@gcc.gnu.org>\n\n    * config/rs6000/vsx.md (vec_pack[su]_float_v2di): New define_expand.\n    (vec_unpack_[su]fix_trunc_hi_v4sf): Likewise.\n    (vec_unpack_[su]fix_trunc_lo_v4sf): Likewise.\n\ngcc/testsuite/ChangeLog\n\n2019-09-29  Kewen Lin  <linkw@gcc.gnu.org>\n\n    * gcc.target/powerpc/conv-vectorize-1.c: New test.\n    * gcc.target/powerpc/conv-vectorize-2.c: New test.\n\nFrom-SVN: r276266", "tree": {"sha": "3ccf5bbedf0cfd05d9adb8d582c94cd442687be4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3ccf5bbedf0cfd05d9adb8d582c94cd442687be4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/51df413634b4dac2fc5e538a13c8f8624903c59e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/51df413634b4dac2fc5e538a13c8f8624903c59e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/51df413634b4dac2fc5e538a13c8f8624903c59e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/51df413634b4dac2fc5e538a13c8f8624903c59e/comments", "author": {"login": "jedilyn", "id": 38515402, "node_id": "MDQ6VXNlcjM4NTE1NDAy", "avatar_url": "https://avatars.githubusercontent.com/u/38515402?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jedilyn", "html_url": "https://github.com/jedilyn", "followers_url": "https://api.github.com/users/jedilyn/followers", "following_url": "https://api.github.com/users/jedilyn/following{/other_user}", "gists_url": "https://api.github.com/users/jedilyn/gists{/gist_id}", "starred_url": "https://api.github.com/users/jedilyn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jedilyn/subscriptions", "organizations_url": "https://api.github.com/users/jedilyn/orgs", "repos_url": "https://api.github.com/users/jedilyn/repos", "events_url": "https://api.github.com/users/jedilyn/events{/privacy}", "received_events_url": "https://api.github.com/users/jedilyn/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jedilyn", "id": 38515402, "node_id": "MDQ6VXNlcjM4NTE1NDAy", "avatar_url": "https://avatars.githubusercontent.com/u/38515402?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jedilyn", "html_url": "https://github.com/jedilyn", "followers_url": "https://api.github.com/users/jedilyn/followers", "following_url": "https://api.github.com/users/jedilyn/following{/other_user}", "gists_url": "https://api.github.com/users/jedilyn/gists{/gist_id}", "starred_url": "https://api.github.com/users/jedilyn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jedilyn/subscriptions", "organizations_url": "https://api.github.com/users/jedilyn/orgs", "repos_url": "https://api.github.com/users/jedilyn/repos", "events_url": "https://api.github.com/users/jedilyn/events{/privacy}", "received_events_url": "https://api.github.com/users/jedilyn/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "59784d3851fccda86fcdf2cdee5a3c3ca231a2d3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/59784d3851fccda86fcdf2cdee5a3c3ca231a2d3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/59784d3851fccda86fcdf2cdee5a3c3ca231a2d3"}], "stats": {"total": 130, "additions": 130, "deletions": 0}, "files": [{"sha": "9714e98df9fd7214d01eaeda4d7de0eb1e8206c6", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/51df413634b4dac2fc5e538a13c8f8624903c59e/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/51df413634b4dac2fc5e538a13c8f8624903c59e/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=51df413634b4dac2fc5e538a13c8f8624903c59e", "patch": "@@ -1,3 +1,9 @@\n+2019-09-29  Kewen Lin  <linkw@gcc.gnu.org>\n+\n+\t* config/rs6000/vsx.md (vec_pack[su]_float_v2di): New define_expand.\n+\t(vec_unpack_[su]fix_trunc_hi_v4sf): Likewise.\n+\t(vec_unpack_[su]fix_trunc_lo_v4sf): Likewise.\n+\n 2019-09-28  Iain Sandoe  <iain@sandoe.co.uk>\n \n \t* config/darwin.c (gen_macho_high): Amend to include the mode"}, {"sha": "3cc1277aaee7525269be6c489489c9e78582cda4", "filename": "gcc/config/rs6000/vsx.md", "status": "modified", "additions": 45, "deletions": 0, "changes": 45, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/51df413634b4dac2fc5e538a13c8f8624903c59e/gcc%2Fconfig%2Frs6000%2Fvsx.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/51df413634b4dac2fc5e538a13c8f8624903c59e/gcc%2Fconfig%2Frs6000%2Fvsx.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Fvsx.md?ref=51df413634b4dac2fc5e538a13c8f8624903c59e", "patch": "@@ -5544,3 +5544,48 @@\n   operands[SFBOOL_TMP_VSX_DI] = gen_rtx_REG (DImode, regno_tmp_vsx);\n   operands[SFBOOL_MTVSR_D_V4SF] = gen_rtx_REG (V4SFmode, regno_mtvsr_d);\n })\n+\n+;; Support signed/unsigned long long to float conversion vectorization.\n+;; Note that any_float (pc) here is just for code attribute <su>.\n+(define_expand \"vec_pack<su>_float_v2di\"\n+  [(match_operand:V4SF 0 \"vfloat_operand\")\n+   (match_operand:V2DI 1 \"vint_operand\")\n+   (match_operand:V2DI 2 \"vint_operand\")\n+   (any_float (pc))]\n+  \"TARGET_VSX\"\n+{\n+  rtx r1 = gen_reg_rtx (V4SFmode);\n+  rtx r2 = gen_reg_rtx (V4SFmode);\n+  emit_insn (gen_vsx_xvcv<su>xdsp (r1, operands[1]));\n+  emit_insn (gen_vsx_xvcv<su>xdsp (r2, operands[2]));\n+  rs6000_expand_extract_even (operands[0], r1, r2);\n+  DONE;\n+})\n+\n+;; Support float to signed/unsigned long long conversion vectorization.\n+;; Note that any_fix (pc) here is just for code attribute <su>.\n+(define_expand \"vec_unpack_<su>fix_trunc_hi_v4sf\"\n+  [(match_operand:V2DI 0 \"vint_operand\")\n+   (match_operand:V4SF 1 \"vfloat_operand\")\n+   (any_fix (pc))]\n+  \"TARGET_VSX\"\n+{\n+  rtx reg = gen_reg_rtx (V4SFmode);\n+  rs6000_expand_interleave (reg, operands[1], operands[1], BYTES_BIG_ENDIAN);\n+  emit_insn (gen_vsx_xvcvsp<su>xds (operands[0], reg));\n+  DONE;\n+})\n+\n+;; Note that any_fix (pc) here is just for code attribute <su>.\n+(define_expand \"vec_unpack_<su>fix_trunc_lo_v4sf\"\n+  [(match_operand:V2DI 0 \"vint_operand\")\n+   (match_operand:V4SF 1 \"vfloat_operand\")\n+   (any_fix (pc))]\n+  \"TARGET_VSX\"\n+{\n+  rtx reg = gen_reg_rtx (V4SFmode);\n+  rs6000_expand_interleave (reg, operands[1], operands[1], !BYTES_BIG_ENDIAN);\n+  emit_insn (gen_vsx_xvcvsp<su>xds (operands[0], reg));\n+  DONE;\n+})\n+"}, {"sha": "d0d2cb084c56dcb082f10c27d59c1201b2346509", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/51df413634b4dac2fc5e538a13c8f8624903c59e/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/51df413634b4dac2fc5e538a13c8f8624903c59e/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=51df413634b4dac2fc5e538a13c8f8624903c59e", "patch": "@@ -1,3 +1,8 @@\n+2019-09-29  Kewen Lin  <linkw@gcc.gnu.org>\n+\n+\t* gcc.target/powerpc/conv-vectorize-1.c: New test.\n+\t* gcc.target/powerpc/conv-vectorize-2.c: New test.\n+\n 2019-09-28  Steven G. Kargl  <kargl@gcc.ngu.org>\n \n \tPR fortran/91802"}, {"sha": "d96db14686438a59d8f99aad8918d77420e99612", "filename": "gcc/testsuite/gcc.target/powerpc/conv-vectorize-1.c", "status": "added", "additions": 37, "deletions": 0, "changes": 37, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/51df413634b4dac2fc5e538a13c8f8624903c59e/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fconv-vectorize-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/51df413634b4dac2fc5e538a13c8f8624903c59e/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fconv-vectorize-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fconv-vectorize-1.c?ref=51df413634b4dac2fc5e538a13c8f8624903c59e", "patch": "@@ -0,0 +1,37 @@\n+/* { dg-require-effective-target powerpc_vsx_ok } */\n+/* { dg-options \"-O2 -ftree-vectorize -mvsx\" } */\n+\n+/* Test vectorizer can exploit vector conversion instructions to convert\n+   unsigned/signed long long to float.  */\n+\n+#include <stddef.h>\n+\n+#define SIZE 32\n+#define ALIGN 16\n+\n+float sflt_array[SIZE] __attribute__ ((__aligned__ (ALIGN)));\n+float uflt_array[SIZE] __attribute__ ((__aligned__ (ALIGN)));\n+\n+unsigned long long ulong_array[SIZE] __attribute__ ((__aligned__ (ALIGN)));\n+signed long long slong_array[SIZE] __attribute__ ((__aligned__ (ALIGN)));\n+\n+void\n+convert_slong_to_float (void)\n+{\n+  size_t i;\n+\n+  for (i = 0; i < SIZE; i++)\n+    sflt_array[i] = (float) slong_array[i];\n+}\n+\n+void\n+convert_ulong_to_float (void)\n+{\n+  size_t i;\n+\n+  for (i = 0; i < SIZE; i++)\n+    uflt_array[i] = (float) ulong_array[i];\n+}\n+\n+/* { dg-final { scan-assembler {\\mxvcvsxdsp\\M} } } */\n+/* { dg-final { scan-assembler {\\mxvcvuxdsp\\M} } } */"}, {"sha": "5dd5deabdd3cba7ce3e8a58320a8fa9e90292867", "filename": "gcc/testsuite/gcc.target/powerpc/conv-vectorize-2.c", "status": "added", "additions": 37, "deletions": 0, "changes": 37, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/51df413634b4dac2fc5e538a13c8f8624903c59e/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fconv-vectorize-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/51df413634b4dac2fc5e538a13c8f8624903c59e/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fconv-vectorize-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fconv-vectorize-2.c?ref=51df413634b4dac2fc5e538a13c8f8624903c59e", "patch": "@@ -0,0 +1,37 @@\n+/* { dg-require-effective-target powerpc_vsx_ok } */\n+/* { dg-options \"-O2 -ftree-vectorize -mvsx\" } */\n+\n+/* Test vectorizer can exploit vector conversion instructions to convert\n+   float to unsigned/signed long long.  */\n+\n+#include <stddef.h>\n+\n+#define SIZE 32\n+#define ALIGN 16\n+\n+float sflt_array[SIZE] __attribute__ ((__aligned__ (ALIGN)));\n+float uflt_array[SIZE] __attribute__ ((__aligned__ (ALIGN)));\n+\n+unsigned long long ulong_array[SIZE] __attribute__ ((__aligned__ (ALIGN)));\n+signed long long slong_array[SIZE] __attribute__ ((__aligned__ (ALIGN)));\n+\n+void\n+convert_float_to_slong (void)\n+{\n+  size_t i;\n+\n+  for (i = 0; i < SIZE; i++)\n+    slong_array[i] = (signed long long) sflt_array[i];\n+}\n+\n+void\n+convert_float_to_ulong (void)\n+{\n+  size_t i;\n+\n+  for (i = 0; i < SIZE; i++)\n+    ulong_array[i] = (unsigned long long) uflt_array[i];\n+}\n+\n+/* { dg-final { scan-assembler {\\mxvcvspsxds\\M} } } */\n+/* { dg-final { scan-assembler {\\mxvcvspuxds\\M} } } */"}]}