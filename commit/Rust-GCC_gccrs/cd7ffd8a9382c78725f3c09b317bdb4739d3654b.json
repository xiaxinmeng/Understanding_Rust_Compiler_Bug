{"sha": "cd7ffd8a9382c78725f3c09b317bdb4739d3654b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2Q3ZmZkOGE5MzgyYzc4NzI1ZjNjMDliMzE3YmRiNDczOWQzNjU0Yg==", "commit": {"author": {"name": "Tom de Vries", "email": "tdevries@suse.de", "date": "2019-04-11T15:36:59Z"}, "committer": {"name": "Tom de Vries", "email": "vries@gcc.gnu.org", "date": "2019-04-11T15:36:59Z"}, "message": "[doc] Note variable shadowing at max macro using statement expression\n\nWhen suggesting to rewrite the unsafe (with respect to multiple evaluation of\narguments) macro definition:\n...\n  #define max(a,b) ((a) > (b) ? (a) : (b))\n...\ninto the safe macro definition:\n...\n  #define maxint(a,b) \\\n    ({int _a = (a), _b = (b); _a > _b ? _a : _b; })\n...\nmention the variable shadowing problem for:\n...\n  #define maxint3(a, b, c) \\\n    ({int _a = (a), _b = (b), _c = (c); maxint (maxint (_a, _b), _c); })\n...\n\n2019-04-11  Tom de Vries  <tdevries@suse.de>\n\n\t* doc/extend.texi (@node Statement Exprs): Note variable shadowing at\n\tmax macro using statement expression.\n\nFrom-SVN: r270287", "tree": {"sha": "4a08e65bc698b0c31880d7529f36992deb14011a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4a08e65bc698b0c31880d7529f36992deb14011a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/cd7ffd8a9382c78725f3c09b317bdb4739d3654b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cd7ffd8a9382c78725f3c09b317bdb4739d3654b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cd7ffd8a9382c78725f3c09b317bdb4739d3654b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cd7ffd8a9382c78725f3c09b317bdb4739d3654b/comments", "author": {"login": "vries", "id": 4057235, "node_id": "MDQ6VXNlcjQwNTcyMzU=", "avatar_url": "https://avatars.githubusercontent.com/u/4057235?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vries", "html_url": "https://github.com/vries", "followers_url": "https://api.github.com/users/vries/followers", "following_url": "https://api.github.com/users/vries/following{/other_user}", "gists_url": "https://api.github.com/users/vries/gists{/gist_id}", "starred_url": "https://api.github.com/users/vries/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vries/subscriptions", "organizations_url": "https://api.github.com/users/vries/orgs", "repos_url": "https://api.github.com/users/vries/repos", "events_url": "https://api.github.com/users/vries/events{/privacy}", "received_events_url": "https://api.github.com/users/vries/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "657184d086a57eb214dda530035563a1ecc3df10", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/657184d086a57eb214dda530035563a1ecc3df10", "html_url": "https://github.com/Rust-GCC/gccrs/commit/657184d086a57eb214dda530035563a1ecc3df10"}], "stats": {"total": 31, "additions": 29, "deletions": 2}, "files": [{"sha": "cf4434a941a78f457f7c344305eafe388b6102e3", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd7ffd8a9382c78725f3c09b317bdb4739d3654b/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd7ffd8a9382c78725f3c09b317bdb4739d3654b/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=cd7ffd8a9382c78725f3c09b317bdb4739d3654b", "patch": "@@ -1,3 +1,8 @@\n+2019-04-11  Tom de Vries  <tdevries@suse.de>\n+\n+\t* doc/extend.texi (@node Statement Exprs): Note variable shadowing at\n+\tmax macro using statement expression.\n+\n 2019-04-11  David Edelsohn  <dje.gcc@gmail.com>\n \n \t* xcoffout.h (xcoff_private_rodata_section_name): Declare."}, {"sha": "cad7ad49e56ced83f02bce63df0605f8a2466dbe", "filename": "gcc/doc/extend.texi", "status": "modified", "additions": 24, "deletions": 2, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd7ffd8a9382c78725f3c09b317bdb4739d3654b/gcc%2Fdoc%2Fextend.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd7ffd8a9382c78725f3c09b317bdb4739d3654b/gcc%2Fdoc%2Fextend.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Fextend.texi?ref=cd7ffd8a9382c78725f3c09b317bdb4739d3654b", "patch": "@@ -142,14 +142,36 @@ follows:\n @cindex side effects, macro argument\n But this definition computes either @var{a} or @var{b} twice, with bad\n results if the operand has side effects.  In GNU C, if you know the\n-type of the operands (here taken as @code{int}), you can define\n-the macro safely as follows:\n+type of the operands (here taken as @code{int}), you can avoid this\n+problem by defining the macro as follows:\n \n @smallexample\n #define maxint(a,b) \\\n   (@{int _a = (a), _b = (b); _a > _b ? _a : _b; @})\n @end smallexample\n \n+Note that introducing variable declarations (as we do in @code{maxint}) can\n+cause variable shadowing, so while this example using the @code{max} macro\n+produces correct results:\n+@smallexample\n+int _a = 1, _b = 2, c;\n+c = max (_a, _b);\n+@end smallexample\n+@noindent\n+this example using maxint will not:\n+@smallexample\n+int _a = 1, _b = 2, c;\n+c = maxint (_a, _b);\n+@end smallexample\n+\n+This problem may for instance occur when we use this pattern recursively, like\n+so:\n+\n+@smallexample\n+#define maxint3(a, b, c) \\\n+  (@{int _a = (a), _b = (b), _c = (c); maxint (maxint (_a, _b), _c); @})\n+@end smallexample\n+\n Embedded statements are not allowed in constant expressions, such as\n the value of an enumeration constant, the width of a bit-field, or\n the initial value of a static variable."}]}