{"sha": "4ab013d93a27e19926e0dd3669768ddd93e4662b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGFiMDEzZDkzYTI3ZTE5OTI2ZTBkZDM2Njk3NjhkZGQ5M2U0NjYyYg==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2013-06-20T18:32:56Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2013-06-20T18:32:56Z"}, "message": "* cp-tree.h (DECL_TEMPLATE_PARMS, DECL_TEMPLATE_RESULT)\n\t(DECL_TEMPLATE_INSTANTIATIONS, DECL_TEMPLATE_SPECIALIZATIONS): Use\n\tTEMPLATE_DECL_CHECK.\n\nFrom-SVN: r200262", "tree": {"sha": "decff1847b08de551bcca3ba75dedf3fe9ab8309", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/decff1847b08de551bcca3ba75dedf3fe9ab8309"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4ab013d93a27e19926e0dd3669768ddd93e4662b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4ab013d93a27e19926e0dd3669768ddd93e4662b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4ab013d93a27e19926e0dd3669768ddd93e4662b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4ab013d93a27e19926e0dd3669768ddd93e4662b/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "49b4ff639e15ea4f04355395f2d87d7fff94824d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/49b4ff639e15ea4f04355395f2d87d7fff94824d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/49b4ff639e15ea4f04355395f2d87d7fff94824d"}], "stats": {"total": 19, "additions": 15, "deletions": 4}, "files": [{"sha": "7c7a17f8a45505747680c9a7343e3642f421ce2b", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4ab013d93a27e19926e0dd3669768ddd93e4662b/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4ab013d93a27e19926e0dd3669768ddd93e4662b/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=4ab013d93a27e19926e0dd3669768ddd93e4662b", "patch": "@@ -1,3 +1,9 @@\n+2013-06-20  Jason Merrill  <jason@redhat.com>\n+\n+\t* cp-tree.h (DECL_TEMPLATE_PARMS, DECL_TEMPLATE_RESULT)\n+\t(DECL_TEMPLATE_INSTANTIATIONS, DECL_TEMPLATE_SPECIALIZATIONS): Use\n+\tTEMPLATE_DECL_CHECK.\n+\n 2013-06-19  Manuel Lopez-Ibanez  <manu@gcc.gnu.org>\n \n \tPR c++/57638"}, {"sha": "41ef24d455bc3dfab45d57783f4874862d7cb669", "filename": "gcc/cp/cp-tree.h", "status": "modified", "additions": 9, "deletions": 4, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4ab013d93a27e19926e0dd3669768ddd93e4662b/gcc%2Fcp%2Fcp-tree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4ab013d93a27e19926e0dd3669768ddd93e4662b/gcc%2Fcp%2Fcp-tree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcp-tree.h?ref=4ab013d93a27e19926e0dd3669768ddd93e4662b", "patch": "@@ -3683,13 +3683,15 @@ more_aggr_init_expr_args_p (const aggr_init_expr_arg_iterator *iter)\n    TEMPLATE_PARM_INDEX for the parameter is available as the\n    DECL_INITIAL (for a PARM_DECL) or as the TREE_TYPE (for a\n    TYPE_DECL).  */\n-#define DECL_TEMPLATE_PARMS(NODE)       DECL_NON_COMMON_CHECK (NODE)->decl_non_common.arguments\n+#define DECL_TEMPLATE_PARMS(NODE)       \\\n+  TEMPLATE_DECL_CHECK (NODE)->decl_non_common.arguments\n #define DECL_INNERMOST_TEMPLATE_PARMS(NODE) \\\n    INNERMOST_TEMPLATE_PARMS (DECL_TEMPLATE_PARMS (NODE))\n #define DECL_NTPARMS(NODE) \\\n    TREE_VEC_LENGTH (DECL_INNERMOST_TEMPLATE_PARMS (NODE))\n /* For function, method, class-data templates.  */\n-#define DECL_TEMPLATE_RESULT(NODE)      DECL_RESULT_FLD (NODE)\n+#define DECL_TEMPLATE_RESULT(NODE)      \\\n+  DECL_RESULT_FLD (TEMPLATE_DECL_CHECK (NODE))\n /* For a function template at namespace scope, DECL_TEMPLATE_INSTANTIATIONS\n    lists all instantiations and specializations of the function so that\n    tsubst_friend_function can reassign them to another template if we find\n@@ -3718,7 +3720,9 @@ more_aggr_init_expr_args_p (const aggr_init_expr_arg_iterator *iter)\n    <class U> struct S1<T>::S2'.\n \n    This list is not used for other templates.  */\n-#define DECL_TEMPLATE_INSTANTIATIONS(NODE) DECL_VINDEX (NODE)\n+#define DECL_TEMPLATE_INSTANTIATIONS(NODE) \\\n+  DECL_VINDEX (TEMPLATE_DECL_CHECK (NODE))\n+\n /* For a class template, this list contains the partial\n    specializations of this template.  (Full specializations are not\n    recorded on this list.)  The TREE_PURPOSE holds the arguments used\n@@ -3730,7 +3734,8 @@ more_aggr_init_expr_args_p (const aggr_init_expr_arg_iterator *iter)\n    specialization.\n \n    This list is not used for other templates.  */\n-#define DECL_TEMPLATE_SPECIALIZATIONS(NODE)     DECL_SIZE (NODE)\n+#define DECL_TEMPLATE_SPECIALIZATIONS(NODE)     \\\n+  DECL_SIZE (TEMPLATE_DECL_CHECK (NODE))\n \n /* Nonzero for a DECL which is actually a template parameter.  Keep\n    these checks in ascending tree code order.   */"}]}