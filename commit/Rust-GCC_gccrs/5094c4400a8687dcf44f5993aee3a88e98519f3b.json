{"sha": "5094c4400a8687dcf44f5993aee3a88e98519f3b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTA5NGM0NDAwYTg2ODdkY2Y0NGY1OTkzYWVlM2E4OGU5ODUxOWYzYg==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2020-06-04T19:56:57Z"}, "committer": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2020-06-05T17:54:54Z"}, "message": "c++: Fix pretty-print of pointer minus integer.\n\nFor whatever reason, GCC internally represents a pointer minus an integer as\na pointer plus a very large unsigned integer.  But exposing that to users is\nunsightly, and it's easy enough to show the real value.\n\ngcc/cp/ChangeLog:\n\n\t* error.c (dump_binary_op): Handle negative operand to\n\tPOINTER_PLUS_EXPR.\n\ngcc/c-family/ChangeLog:\n\n\t* c-pretty-print.c (pp_c_additive_expression): Handle negative\n\toperand to POINTER_PLUS_EXPR.\n\ngcc/testsuite/ChangeLog:\n\n\t* g++.dg/cpp0x/constexpr-ptrsub2.C: New test.", "tree": {"sha": "e55070d15ade1137ed75162bab35f98e04a91825", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e55070d15ade1137ed75162bab35f98e04a91825"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5094c4400a8687dcf44f5993aee3a88e98519f3b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5094c4400a8687dcf44f5993aee3a88e98519f3b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5094c4400a8687dcf44f5993aee3a88e98519f3b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5094c4400a8687dcf44f5993aee3a88e98519f3b/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "640e05e02b567fa5ccf4c207e6fc6c3e9a93b17c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/640e05e02b567fa5ccf4c207e6fc6c3e9a93b17c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/640e05e02b567fa5ccf4c207e6fc6c3e9a93b17c"}], "stats": {"total": 24, "additions": 22, "deletions": 2}, "files": [{"sha": "71baf5e2edeb2413b20c6688bcf4a8a7abeb18c5", "filename": "gcc/c-family/c-pretty-print.c", "status": "modified", "additions": 10, "deletions": 1, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5094c4400a8687dcf44f5993aee3a88e98519f3b/gcc%2Fc-family%2Fc-pretty-print.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5094c4400a8687dcf44f5993aee3a88e98519f3b/gcc%2Fc-family%2Fc-pretty-print.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2Fc-pretty-print.c?ref=5094c4400a8687dcf44f5993aee3a88e98519f3b", "patch": "@@ -1898,7 +1898,16 @@ pp_c_additive_expression (c_pretty_printer *pp, tree e)\n       else\n \tpp_minus (pp);\n       pp_c_whitespace (pp);\n-      pp->multiplicative_expression (TREE_OPERAND (e, 1));\n+      {\n+\ttree op1 = TREE_OPERAND (e, 1);\n+\tif (code == POINTER_PLUS_EXPR\n+\t    && TREE_CODE (op1) == INTEGER_CST\n+\t    && tree_int_cst_sign_bit (op1))\n+\t  /* A pointer minus an integer is represented internally as plus a very\n+\t     large number, don't expose that to users.  */\n+\t  op1 = convert (ssizetype, op1);\n+\tpp->multiplicative_expression (op1);\n+      }\n       break;\n \n     default:"}, {"sha": "0d6375e5e14a7953a478672ed2585ba2effc116c", "filename": "gcc/cp/error.c", "status": "modified", "additions": 8, "deletions": 1, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5094c4400a8687dcf44f5993aee3a88e98519f3b/gcc%2Fcp%2Ferror.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5094c4400a8687dcf44f5993aee3a88e98519f3b/gcc%2Fcp%2Ferror.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Ferror.c?ref=5094c4400a8687dcf44f5993aee3a88e98519f3b", "patch": "@@ -2909,7 +2909,14 @@ dump_binary_op (cxx_pretty_printer *pp, const char *opstring, tree t,\n   else\n     pp_string (pp, M_(\"<unknown operator>\"));\n   pp_cxx_whitespace (pp);\n-  dump_expr (pp, TREE_OPERAND (t, 1), flags | TFF_EXPR_IN_PARENS);\n+  tree op1 = TREE_OPERAND (t, 1);\n+  if (TREE_CODE (t) == POINTER_PLUS_EXPR\n+      && TREE_CODE (op1) == INTEGER_CST\n+      && tree_int_cst_sign_bit (op1))\n+    /* A pointer minus an integer is represented internally as plus a very\n+       large number, don't expose that to users.  */\n+    op1 = convert (ssizetype, op1);\n+  dump_expr (pp, op1, flags | TFF_EXPR_IN_PARENS);\n   pp_cxx_right_paren (pp);\n }\n "}, {"sha": "fd644ad7854993ec300e89da8bde5a7d801399f3", "filename": "gcc/testsuite/g++.dg/cpp0x/constexpr-ptrsub2.C", "status": "added", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5094c4400a8687dcf44f5993aee3a88e98519f3b/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-ptrsub2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5094c4400a8687dcf44f5993aee3a88e98519f3b/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-ptrsub2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-ptrsub2.C?ref=5094c4400a8687dcf44f5993aee3a88e98519f3b", "patch": "@@ -0,0 +1,4 @@\n+// { dg-do compile { target c++11 } }\n+\n+char c;\n+constexpr char p2 = *(&c - 1);\t// { dg-error \"-1\" }"}]}