{"sha": "bc4721b87e7805c69e5c21b163292a41e3f3e7db", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmM0NzIxYjg3ZTc4MDVjNjllNWMyMWIxNjMyOTJhNDFlM2YzZTdkYg==", "commit": {"author": {"name": "Nathan Sidwell", "email": "nathan@codesourcery.com", "date": "2003-06-27T09:05:45Z"}, "committer": {"name": "Nathan Sidwell", "email": "nathan@gcc.gnu.org", "date": "2003-06-27T09:05:45Z"}, "message": "c-tree.h (grokfield): Remove unused filename and line parameters.\n\n\t* c-tree.h (grokfield): Remove unused filename and line parameters.\n\t* c-decl.c (grokfield): Remove unused filename and line\tparameters.\n\t* c-parse.in (component_decl): Adjust field grokking rules, adjust\n\tgrokfield calls.\n\t(component_declarator): Likewise.\n\t(component_notype_declarator): Likewise.\n\t* objc/objc-act.c (build_module_descriptor): Adjust grokfield\n\tcalls.\n\t(build_protocol_template, build_method_prototype_list_template,\n\tbuild_method_prototype_template, build_category_template,\n\tbuild_selector_template, build_class_template,\n\tbuild_super_template, build_ivar_template,\n\tbuild_ivar_list_template, build_method_list_template,\n\tbuild_method_template, add_instance_variable): Likewise.\n\nFrom-SVN: r68560", "tree": {"sha": "a45098d02265b935900487928cee37f19d7a97d5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a45098d02265b935900487928cee37f19d7a97d5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/bc4721b87e7805c69e5c21b163292a41e3f3e7db", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bc4721b87e7805c69e5c21b163292a41e3f3e7db", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bc4721b87e7805c69e5c21b163292a41e3f3e7db", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bc4721b87e7805c69e5c21b163292a41e3f3e7db/comments", "author": null, "committer": null, "parents": [{"sha": "215f9e283a9c44b0bae3954e4f6a85b4a6cf9fbb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/215f9e283a9c44b0bae3954e4f6a85b4a6cf9fbb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/215f9e283a9c44b0bae3954e4f6a85b4a6cf9fbb"}], "stats": {"total": 217, "additions": 94, "deletions": 123}, "files": [{"sha": "966d8b511e9d932b1b04bca4bfdacb29bf571bb2", "filename": "gcc/ChangeLog", "status": "modified", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bc4721b87e7805c69e5c21b163292a41e3f3e7db/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bc4721b87e7805c69e5c21b163292a41e3f3e7db/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=bc4721b87e7805c69e5c21b163292a41e3f3e7db", "patch": "@@ -1,3 +1,20 @@\n+2003-06-27  Nathan Sidwell  <nathan@codesourcery.com>\n+\n+\t* c-tree.h (grokfield): Remove unused filename and line parameters.\n+\t* c-decl.c (grokfield): Remove unused filename and line\tparameters.\n+\t* c-parse.in (component_decl): Adjust field grokking rules, adjust\n+\tgrokfield calls.\n+\t(component_declarator): Likewise.\n+\t(component_notype_declarator): Likewise.\n+\t* objc/objc-act.c (build_module_descriptor): Adjust grokfield\n+\tcalls.\n+\t(build_protocol_template, build_method_prototype_list_template,\n+\tbuild_method_prototype_template, build_category_template,\n+\tbuild_selector_template, build_class_template,\n+\tbuild_super_template, build_ivar_template,\n+\tbuild_ivar_list_template, build_method_list_template,\n+\tbuild_method_template, add_instance_variable): Likewise.\n+\n 2003-06-27  Kazu Hirata  <kazu@cs.umass.edu>\n \n \t* stmt.c (do_jump_if_equal): Return 0 earlier if OP1 and"}, {"sha": "0caed47cabb4a145e45da179415e1561682ed59a", "filename": "gcc/c-decl.c", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bc4721b87e7805c69e5c21b163292a41e3f3e7db/gcc%2Fc-decl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bc4721b87e7805c69e5c21b163292a41e3f3e7db/gcc%2Fc-decl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-decl.c?ref=bc4721b87e7805c69e5c21b163292a41e3f3e7db", "patch": "@@ -4811,8 +4811,7 @@ start_struct (enum tree_code code, tree name)\n    are ultimately passed to `build_struct' to make the RECORD_TYPE node.  */\n \n tree\n-grokfield (const char *filename ATTRIBUTE_UNUSED, int line ATTRIBUTE_UNUSED,\n-\t   tree declarator, tree declspecs, tree width)\n+grokfield (tree declarator, tree declspecs, tree width)\n {\n   tree value;\n "}, {"sha": "ae8545366b0d3a222070d6a70c711253ff43c015", "filename": "gcc/c-parse.in", "status": "modified", "additions": 26, "deletions": 22, "changes": 48, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bc4721b87e7805c69e5c21b163292a41e3f3e7db/gcc%2Fc-parse.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bc4721b87e7805c69e5c21b163292a41e3f3e7db/gcc%2Fc-parse.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-parse.in?ref=bc4721b87e7805c69e5c21b163292a41e3f3e7db", "patch": "@@ -1862,15 +1862,15 @@ component_decl:\n \t  declspecs_nosc_ts setspecs components\n \t\t{ $$ = $3;\n \t\t  POP_DECLSPEC_STACK; }\n-\t| declspecs_nosc_ts setspecs save_filename save_lineno\n+\t| declspecs_nosc_ts setspecs\n \t\t{\n \t\t  /* Support for unnamed structs or unions as members of\n \t\t     structs or unions (which is [a] useful and [b] supports\n \t\t     MS P-SDK).  */\n \t\t  if (pedantic)\n \t\t    pedwarn (\"ISO C doesn't support unnamed structs/unions\");\n \n-\t\t  $$ = grokfield($3, $4, NULL, current_declspecs, NULL_TREE);\n+\t\t  $$ = grokfield(NULL, current_declspecs, NULL_TREE);\n \t\t  POP_DECLSPEC_STACK; }\n \t| declspecs_nosc_nots setspecs components_notype\n \t\t{ $$ = $3;\n@@ -1900,29 +1900,33 @@ components_notype:\n \t;\n \n component_declarator:\n-\t  save_filename save_lineno declarator maybe_attribute\n-\t\t{ $$ = grokfield ($1, $2, $3, current_declspecs, NULL_TREE);\n-\t\t  decl_attributes (&$$, chainon ($4, all_prefix_attributes), 0); }\n-\t| save_filename save_lineno\n-\t  declarator ':' expr_no_commas maybe_attribute\n-\t\t{ $$ = grokfield ($1, $2, $3, current_declspecs, $5);\n-\t\t  decl_attributes (&$$, chainon ($6, all_prefix_attributes), 0); }\n-\t| save_filename save_lineno ':' expr_no_commas maybe_attribute\n-\t\t{ $$ = grokfield ($1, $2, NULL_TREE, current_declspecs, $4);\n-\t\t  decl_attributes (&$$, chainon ($5, all_prefix_attributes), 0); }\n+\t  declarator maybe_attribute\n+\t\t{ $$ = grokfield ($1, current_declspecs, NULL_TREE);\n+\t\t  decl_attributes (&$$,\n+\t\t\t\t   chainon ($2, all_prefix_attributes), 0); }\n+\t| declarator ':' expr_no_commas maybe_attribute\n+\t\t{ $$ = grokfield ($1, current_declspecs, $3);\n+\t\t  decl_attributes (&$$,\n+\t\t\t\t   chainon ($4, all_prefix_attributes), 0); }\n+\t| ':' expr_no_commas maybe_attribute\n+\t\t{ $$ = grokfield (NULL_TREE, current_declspecs, $2);\n+\t\t  decl_attributes (&$$,\n+\t\t\t\t   chainon ($3, all_prefix_attributes), 0); }\n \t;\n \n component_notype_declarator:\n-\t  save_filename save_lineno notype_declarator maybe_attribute\n-\t\t{ $$ = grokfield ($1, $2, $3, current_declspecs, NULL_TREE);\n-\t\t  decl_attributes (&$$, chainon ($4, all_prefix_attributes), 0); }\n-\t| save_filename save_lineno\n-\t  notype_declarator ':' expr_no_commas maybe_attribute\n-\t\t{ $$ = grokfield ($1, $2, $3, current_declspecs, $5);\n-\t\t  decl_attributes (&$$, chainon ($6, all_prefix_attributes), 0); }\n-\t| save_filename save_lineno ':' expr_no_commas maybe_attribute\n-\t\t{ $$ = grokfield ($1, $2, NULL_TREE, current_declspecs, $4);\n-\t\t  decl_attributes (&$$, chainon ($5, all_prefix_attributes), 0); }\n+\t  notype_declarator maybe_attribute\n+\t\t{ $$ = grokfield ($1, current_declspecs, NULL_TREE);\n+\t\t  decl_attributes (&$$,\n+\t\t\t\t   chainon ($2, all_prefix_attributes), 0); }\n+\t| notype_declarator ':' expr_no_commas maybe_attribute\n+\t\t{ $$ = grokfield ($1, current_declspecs, $3);\n+\t\t  decl_attributes (&$$,\n+\t\t\t\t   chainon ($4, all_prefix_attributes), 0); }\n+\t| ':' expr_no_commas maybe_attribute\n+\t\t{ $$ = grokfield (NULL_TREE, current_declspecs, $2);\n+\t\t  decl_attributes (&$$,\n+\t\t\t\t   chainon ($3, all_prefix_attributes), 0); }\n \t;\n \n /* We chain the enumerators in reverse order."}, {"sha": "bd3e22eb48c74585fb6ab49d648b5447d5653a77", "filename": "gcc/c-tree.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bc4721b87e7805c69e5c21b163292a41e3f3e7db/gcc%2Fc-tree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bc4721b87e7805c69e5c21b163292a41e3f3e7db/gcc%2Fc-tree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-tree.h?ref=bc4721b87e7805c69e5c21b163292a41e3f3e7db", "patch": "@@ -195,7 +195,7 @@ extern tree finish_enum (tree, tree, tree);\n extern void finish_function (int, int);\n extern tree finish_struct (tree, tree, tree);\n extern tree get_parm_info (int);\n-extern tree grokfield (const char *, int, tree, tree, tree);\n+extern tree grokfield (tree, tree, tree);\n extern tree groktypename (tree);\n extern tree groktypename_in_parm_context (tree);\n extern tree implicitly_declare (tree);"}, {"sha": "d52e62ee75f2e6247004bd407644a8b8c98a7d25", "filename": "gcc/objc/objc-act.c", "status": "modified", "additions": 49, "deletions": 98, "changes": 147, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bc4721b87e7805c69e5c21b163292a41e3f3e7db/gcc%2Fobjc%2Fobjc-act.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bc4721b87e7805c69e5c21b163292a41e3f3e7db/gcc%2Fobjc%2Fobjc-act.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fobjc%2Fobjc-act.c?ref=bc4721b87e7805c69e5c21b163292a41e3f3e7db", "patch": "@@ -1697,33 +1697,29 @@ build_module_descriptor ()\n \n   decl_specs = build_tree_list (NULL_TREE, ridpointers[(int) RID_LONG]);\n   field_decl = get_identifier (\"version\");\n-  field_decl = grokfield (input_filename, input_line,\n-\t\t\t  field_decl, decl_specs, NULL_TREE);\n+  field_decl = grokfield (field_decl, decl_specs, NULL_TREE);\n   field_decl_chain = field_decl;\n \n   /* long  size; */\n \n   decl_specs = build_tree_list (NULL_TREE, ridpointers[(int) RID_LONG]);\n   field_decl = get_identifier (\"size\");\n-  field_decl = grokfield (input_filename, input_line,\n-\t\t\t  field_decl, decl_specs, NULL_TREE);\n+  field_decl = grokfield (field_decl, decl_specs, NULL_TREE);\n   chainon (field_decl_chain, field_decl);\n \n   /* char  *name; */\n \n   decl_specs = build_tree_list (NULL_TREE, ridpointers[(int) RID_CHAR]);\n   field_decl = build1 (INDIRECT_REF, NULL_TREE, get_identifier (\"name\"));\n-  field_decl = grokfield (input_filename, input_line,\n-\t\t\t  field_decl, decl_specs, NULL_TREE);\n+  field_decl = grokfield (field_decl, decl_specs, NULL_TREE);\n   chainon (field_decl_chain, field_decl);\n \n   /* struct objc_symtab *symtab; */\n \n   decl_specs = get_identifier (UTAG_SYMTAB);\n   decl_specs = build_tree_list (NULL_TREE, xref_tag (RECORD_TYPE, decl_specs));\n   field_decl = build1 (INDIRECT_REF, NULL_TREE, get_identifier (\"symtab\"));\n-  field_decl = grokfield (input_filename, input_line,\n-\t\t\t  field_decl, decl_specs, NULL_TREE);\n+  field_decl = grokfield (field_decl, decl_specs, NULL_TREE);\n   chainon (field_decl_chain, field_decl);\n \n   finish_struct (objc_module_template, field_decl_chain, NULL_TREE);\n@@ -2565,17 +2561,15 @@ build_protocol_template ()\n   decl_specs = build_tree_list (NULL_TREE, xref_tag (RECORD_TYPE,\n \t\t\t\t\tget_identifier (UTAG_CLASS)));\n   field_decl = build1 (INDIRECT_REF, NULL_TREE, get_identifier (\"isa\"));\n-  field_decl = grokfield (input_filename, input_line,\n-\t\t\t  field_decl, decl_specs, NULL_TREE);\n+  field_decl = grokfield (field_decl, decl_specs, NULL_TREE);\n   field_decl_chain = field_decl;\n \n   /* char *protocol_name; */\n \n   decl_specs = build_tree_list (NULL_TREE, ridpointers[(int) RID_CHAR]);\n   field_decl\n     = build1 (INDIRECT_REF, NULL_TREE, get_identifier (\"protocol_name\"));\n-  field_decl = grokfield (input_filename, input_line,\n-\t\t\t  field_decl, decl_specs, NULL_TREE);\n+  field_decl = grokfield (field_decl, decl_specs, NULL_TREE);\n   chainon (field_decl_chain, field_decl);\n \n   /* struct objc_protocol **protocol_list; */\n@@ -2584,8 +2578,7 @@ build_protocol_template ()\n   field_decl\n     = build1 (INDIRECT_REF, NULL_TREE, get_identifier (\"protocol_list\"));\n   field_decl = build1 (INDIRECT_REF, NULL_TREE, field_decl);\n-  field_decl = grokfield (input_filename, input_line,\n-\t\t\t  field_decl, decl_specs, NULL_TREE);\n+  field_decl = grokfield (field_decl, decl_specs, NULL_TREE);\n   chainon (field_decl_chain, field_decl);\n \n   /* struct objc_method_list *instance_methods; */\n@@ -2596,8 +2589,7 @@ build_protocol_template ()\n \t\t\t\t get_identifier (UTAG_METHOD_PROTOTYPE_LIST)));\n   field_decl\n     = build1 (INDIRECT_REF, NULL_TREE, get_identifier (\"instance_methods\"));\n-  field_decl = grokfield (input_filename, input_line,\n-\t\t\t  field_decl, decl_specs, NULL_TREE);\n+  field_decl = grokfield (field_decl, decl_specs, NULL_TREE);\n   chainon (field_decl_chain, field_decl);\n \n   /* struct objc_method_list *class_methods; */\n@@ -2608,8 +2600,7 @@ build_protocol_template ()\n \t\t\t\t get_identifier (UTAG_METHOD_PROTOTYPE_LIST)));\n   field_decl\n     = build1 (INDIRECT_REF, NULL_TREE, get_identifier (\"class_methods\"));\n-  field_decl = grokfield (input_filename, input_line,\n-\t\t\t  field_decl, decl_specs, NULL_TREE);\n+  field_decl = grokfield (field_decl, decl_specs, NULL_TREE);\n   chainon (field_decl_chain, field_decl);\n \n   return finish_struct (template, field_decl_chain, NULL_TREE);\n@@ -2672,17 +2663,15 @@ build_method_prototype_list_template (list_type, size)\n \n   decl_specs = build_tree_list (NULL_TREE, ridpointers[(int) RID_INT]);\n   field_decl = get_identifier (\"method_count\");\n-  field_decl = grokfield (input_filename, input_line,\n-\t\t\t  field_decl, decl_specs, NULL_TREE);\n+  field_decl = grokfield (field_decl, decl_specs, NULL_TREE);\n   field_decl_chain = field_decl;\n \n   /* struct objc_method method_list[]; */\n \n   decl_specs = build_tree_list (NULL_TREE, list_type);\n   field_decl = build_nt (ARRAY_REF, get_identifier (\"method_list\"),\n \t\t\t build_int_2 (size, 0));\n-  field_decl = grokfield (input_filename, input_line,\n-\t\t\t  field_decl, decl_specs, NULL_TREE);\n+  field_decl = grokfield (field_decl, decl_specs, NULL_TREE);\n   chainon (field_decl_chain, field_decl);\n \n   finish_struct (objc_ivar_list_record, field_decl_chain, NULL_TREE);\n@@ -2703,15 +2692,13 @@ build_method_prototype_template ()\n   decl_specs = tree_cons (NULL_TREE, xref_tag (RECORD_TYPE,\n \t\t          get_identifier (TAG_SELECTOR)), NULL_TREE);\n   field_decl = build1 (INDIRECT_REF, NULL_TREE, get_identifier (\"_cmd\"));\n-  field_decl = grokfield (input_filename, input_line,\n-\t\t\t  field_decl, decl_specs, NULL_TREE);\n+  field_decl = grokfield (field_decl, decl_specs, NULL_TREE);\n   field_decl_chain = field_decl;\n \n   decl_specs = tree_cons (NULL_TREE, ridpointers[(int) RID_CHAR], NULL_TREE);\n   field_decl\n     = build1 (INDIRECT_REF, NULL_TREE, get_identifier (\"method_types\"));\n-  field_decl = grokfield (input_filename, input_line,\n-\t\t\t  field_decl, decl_specs, NULL_TREE);\n+  field_decl = grokfield (field_decl, decl_specs, NULL_TREE);\n   chainon (field_decl_chain, field_decl);\n \n   finish_struct (proto_record, field_decl_chain, NULL_TREE);\n@@ -3250,16 +3237,14 @@ build_category_template ()\n   decl_specs = build_tree_list (NULL_TREE, ridpointers[(int) RID_CHAR]);\n   field_decl\n     = build1 (INDIRECT_REF, NULL_TREE, get_identifier (\"category_name\"));\n-  field_decl = grokfield (input_filename, input_line,\n-\t\t\t  field_decl, decl_specs, NULL_TREE);\n+  field_decl = grokfield (field_decl, decl_specs, NULL_TREE);\n   field_decl_chain = field_decl;\n \n   /* char *class_name; */\n \n   decl_specs = build_tree_list (NULL_TREE, ridpointers[(int) RID_CHAR]);\n   field_decl = build1 (INDIRECT_REF, NULL_TREE, get_identifier (\"class_name\"));\n-  field_decl = grokfield (input_filename, input_line,\n-\t\t\t  field_decl, decl_specs, NULL_TREE);\n+  field_decl = grokfield (field_decl, decl_specs, NULL_TREE);\n   chainon (field_decl_chain, field_decl);\n \n   /* struct objc_method_list *instance_methods; */\n@@ -3269,8 +3254,7 @@ build_category_template ()\n \t\t\t\t\t  get_identifier (UTAG_METHOD_LIST)));\n   field_decl\n     = build1 (INDIRECT_REF, NULL_TREE, get_identifier (\"instance_methods\"));\n-  field_decl = grokfield (input_filename, input_line,\n-\t\t\t  field_decl, decl_specs, NULL_TREE);\n+  field_decl = grokfield (field_decl, decl_specs, NULL_TREE);\n   chainon (field_decl_chain, field_decl);\n \n   /* struct objc_method_list *class_methods; */\n@@ -3280,8 +3264,7 @@ build_category_template ()\n \t\t\t\t\t  get_identifier (UTAG_METHOD_LIST)));\n   field_decl\n     = build1 (INDIRECT_REF, NULL_TREE, get_identifier (\"class_methods\"));\n-  field_decl = grokfield (input_filename, input_line,\n-\t\t\t  field_decl, decl_specs, NULL_TREE);\n+  field_decl = grokfield (field_decl, decl_specs, NULL_TREE);\n   chainon (field_decl_chain, field_decl);\n \n   /* struct objc_protocol **protocol_list; */\n@@ -3292,8 +3275,7 @@ build_category_template ()\n   field_decl\n     = build1 (INDIRECT_REF, NULL_TREE, get_identifier (\"protocol_list\"));\n   field_decl = build1 (INDIRECT_REF, NULL_TREE, field_decl);\n-  field_decl = grokfield (input_filename, input_line,\n-\t\t\t  field_decl, decl_specs, NULL_TREE);\n+  field_decl = grokfield (field_decl, decl_specs, NULL_TREE);\n   chainon (field_decl_chain, field_decl);\n \n   finish_struct (objc_category_template, field_decl_chain, NULL_TREE);\n@@ -3317,16 +3299,14 @@ build_selector_template ()\n \n   decl_specs = build_tree_list (NULL_TREE, ridpointers[(int) RID_VOID]);\n   field_decl = build1 (INDIRECT_REF, NULL_TREE, get_identifier (\"sel_id\"));\n-  field_decl = grokfield (input_filename, input_line,\n-\t\t\t  field_decl, decl_specs, NULL_TREE);\n+  field_decl = grokfield (field_decl, decl_specs, NULL_TREE);\n   field_decl_chain = field_decl;\n \n   /* char *sel_type; */\n \n   decl_specs = build_tree_list (NULL_TREE, ridpointers[(int) RID_CHAR]);\n   field_decl = build1 (INDIRECT_REF, NULL_TREE, get_identifier (\"sel_type\"));\n-  field_decl = grokfield (input_filename, input_line,\n-\t\t\t  field_decl, decl_specs, NULL_TREE);\n+  field_decl = grokfield (field_decl, decl_specs, NULL_TREE);\n   chainon (field_decl_chain, field_decl);\n \n   finish_struct (objc_selector_template, field_decl_chain, NULL_TREE);\n@@ -3364,49 +3344,43 @@ build_class_template ()\n \n   decl_specs = build_tree_list (NULL_TREE, objc_class_template);\n   field_decl = build1 (INDIRECT_REF, NULL_TREE, get_identifier (\"isa\"));\n-  field_decl = grokfield (input_filename, input_line,\n-\t\t\t  field_decl, decl_specs, NULL_TREE);\n+  field_decl = grokfield (field_decl, decl_specs, NULL_TREE);\n   field_decl_chain = field_decl;\n \n   /* struct objc_class *super_class; */\n \n   decl_specs = build_tree_list (NULL_TREE, objc_class_template);\n   field_decl\n     = build1 (INDIRECT_REF, NULL_TREE, get_identifier (\"super_class\"));\n-  field_decl = grokfield (input_filename, input_line,\n-\t\t\t  field_decl, decl_specs, NULL_TREE);\n+  field_decl = grokfield (field_decl, decl_specs, NULL_TREE);\n   chainon (field_decl_chain, field_decl);\n \n   /* char *name; */\n \n   decl_specs = build_tree_list (NULL_TREE, ridpointers[(int) RID_CHAR]);\n   field_decl = build1 (INDIRECT_REF, NULL_TREE, get_identifier (\"name\"));\n-  field_decl = grokfield (input_filename, input_line,\n-\t\t\t  field_decl, decl_specs, NULL_TREE);\n+  field_decl = grokfield (field_decl, decl_specs, NULL_TREE);\n   chainon (field_decl_chain, field_decl);\n \n   /* long version; */\n \n   decl_specs = build_tree_list (NULL_TREE, ridpointers[(int) RID_LONG]);\n   field_decl = get_identifier (\"version\");\n-  field_decl = grokfield (input_filename, input_line,\n-\t\t\t  field_decl, decl_specs, NULL_TREE);\n+  field_decl = grokfield (field_decl, decl_specs, NULL_TREE);\n   chainon (field_decl_chain, field_decl);\n \n   /* long info; */\n \n   decl_specs = build_tree_list (NULL_TREE, ridpointers[(int) RID_LONG]);\n   field_decl = get_identifier (\"info\");\n-  field_decl = grokfield (input_filename, input_line,\n-\t\t\t  field_decl, decl_specs, NULL_TREE);\n+  field_decl = grokfield (field_decl, decl_specs, NULL_TREE);\n   chainon (field_decl_chain, field_decl);\n \n   /* long instance_size; */\n \n   decl_specs = build_tree_list (NULL_TREE, ridpointers[(int) RID_LONG]);\n   field_decl = get_identifier (\"instance_size\");\n-  field_decl = grokfield (input_filename, input_line,\n-\t\t\t  field_decl, decl_specs, NULL_TREE);\n+  field_decl = grokfield (field_decl, decl_specs, NULL_TREE);\n   chainon (field_decl_chain, field_decl);\n \n   /* struct objc_ivar_list *ivars; */\n@@ -3415,8 +3389,7 @@ build_class_template ()\n \t\t\t\txref_tag (RECORD_TYPE,\n \t\t\t\t\t  get_identifier (UTAG_IVAR_LIST)));\n   field_decl = build1 (INDIRECT_REF, NULL_TREE, get_identifier (\"ivars\"));\n-  field_decl = grokfield (input_filename, input_line,\n-\t\t\t  field_decl, decl_specs, NULL_TREE);\n+  field_decl = grokfield (field_decl, decl_specs, NULL_TREE);\n   chainon (field_decl_chain, field_decl);\n \n   /* struct objc_method_list *methods; */\n@@ -3425,8 +3398,7 @@ build_class_template ()\n \t\t\t\txref_tag (RECORD_TYPE,\n \t\t\t\t\t  get_identifier (UTAG_METHOD_LIST)));\n   field_decl = build1 (INDIRECT_REF, NULL_TREE, get_identifier (\"methods\"));\n-  field_decl = grokfield (input_filename, input_line,\n-\t\t\t  field_decl, decl_specs, NULL_TREE);\n+  field_decl = grokfield (field_decl, decl_specs, NULL_TREE);\n   chainon (field_decl_chain, field_decl);\n \n   if (flag_next_runtime)\n@@ -3437,8 +3409,7 @@ build_class_template ()\n \t\t\t\t    xref_tag (RECORD_TYPE,\n \t\t\t\t\t      get_identifier (\"objc_cache\")));\n       field_decl = build1 (INDIRECT_REF, NULL_TREE, get_identifier (\"cache\"));\n-      field_decl = grokfield (input_filename, input_line, field_decl,\n-\t\t\t      decl_specs, NULL_TREE);\n+      field_decl = grokfield (field_decl, decl_specs, NULL_TREE);\n       chainon (field_decl_chain, field_decl);\n     }\n   else\n@@ -3449,26 +3420,23 @@ build_class_template ()\n \t\t\t\t    xref_tag (RECORD_TYPE,\n \t\t\t\t\t      get_identifier (\"sarray\")));\n       field_decl = build1 (INDIRECT_REF, NULL_TREE, get_identifier (\"dtable\"));\n-      field_decl = grokfield (input_filename, input_line, field_decl,\n-\t\t\t      decl_specs, NULL_TREE);\n+      field_decl = grokfield (field_decl, decl_specs, NULL_TREE);\n       chainon (field_decl_chain, field_decl);\n \n       /* struct objc_class *subclass_list; */\n \n       decl_specs = build_tree_list (NULL_TREE, objc_class_template);\n       field_decl\n \t= build1 (INDIRECT_REF, NULL_TREE, get_identifier (\"subclass_list\"));\n-      field_decl = grokfield (input_filename, input_line, field_decl,\n-\t\t\t      decl_specs, NULL_TREE);\n+      field_decl = grokfield (field_decl, decl_specs, NULL_TREE);\n       chainon (field_decl_chain, field_decl);\n \n       /* struct objc_class *sibling_class; */\n \n       decl_specs = build_tree_list (NULL_TREE, objc_class_template);\n       field_decl\n \t= build1 (INDIRECT_REF, NULL_TREE, get_identifier (\"sibling_class\"));\n-      field_decl = grokfield (input_filename, input_line, field_decl,\n-\t\t\t      decl_specs, NULL_TREE);\n+      field_decl = grokfield (field_decl, decl_specs, NULL_TREE);\n       chainon (field_decl_chain, field_decl);\n     }\n \n@@ -3481,24 +3449,21 @@ build_class_template ()\n     = build1 (INDIRECT_REF, NULL_TREE, get_identifier (\"protocol_list\"));\n   field_decl\n     = build1 (INDIRECT_REF, NULL_TREE, field_decl);\n-  field_decl = grokfield (input_filename, input_line, field_decl,\n-\t\t\t  decl_specs, NULL_TREE);\n+  field_decl = grokfield (field_decl, decl_specs, NULL_TREE);\n   chainon (field_decl_chain, field_decl);\n \n   /* void *sel_id; */\n \n   decl_specs = build_tree_list (NULL_TREE, ridpointers[(int) RID_VOID]);\n   field_decl = build1 (INDIRECT_REF, NULL_TREE, get_identifier (\"sel_id\"));\n-  field_decl = grokfield (input_filename, input_line,\n-\t\t\t  field_decl, decl_specs, NULL_TREE);\n+  field_decl = grokfield (field_decl, decl_specs, NULL_TREE);\n   chainon (field_decl_chain, field_decl);\n \n   /* void *gc_object_type; */\n \n   decl_specs = build_tree_list (NULL_TREE, ridpointers[(int) RID_VOID]);\n   field_decl = build1 (INDIRECT_REF, NULL_TREE, get_identifier (\"gc_object_type\"));\n-  field_decl = grokfield (input_filename, input_line,\n-\t\t\t  field_decl, decl_specs, NULL_TREE);\n+  field_decl = grokfield (field_decl, decl_specs, NULL_TREE);\n   chainon (field_decl_chain, field_decl);\n \n   finish_struct (objc_class_template, field_decl_chain, NULL_TREE);\n@@ -3619,8 +3584,7 @@ build_super_template ()\n   decl_specs = build_tree_list (NULL_TREE, objc_object_reference);\n   field_decl = get_identifier (\"self\");\n   field_decl = build1 (INDIRECT_REF, NULL_TREE, field_decl);\n-  field_decl = grokfield (input_filename, input_line,\n-\t\t\t  field_decl, decl_specs, NULL_TREE);\n+  field_decl = grokfield (field_decl, decl_specs, NULL_TREE);\n   field_decl_chain = field_decl;\n \n   /* struct objc_class *class; */\n@@ -3629,8 +3593,7 @@ build_super_template ()\n   decl_specs = build_tree_list (NULL_TREE, xref_tag (RECORD_TYPE, decl_specs));\n   field_decl = build1 (INDIRECT_REF, NULL_TREE, get_identifier (\"class\"));\n \n-  field_decl = grokfield (input_filename, input_line,\n-\t\t\t  field_decl, decl_specs, NULL_TREE);\n+  field_decl = grokfield (field_decl, decl_specs, NULL_TREE);\n   chainon (field_decl_chain, field_decl);\n \n   finish_struct (record, field_decl_chain, NULL_TREE);\n@@ -3663,26 +3626,23 @@ build_ivar_template ()\n   decl_specs = build_tree_list (NULL_TREE, ridpointers[(int) RID_CHAR]);\n   field_decl = build1 (INDIRECT_REF, NULL_TREE, get_identifier (\"ivar_name\"));\n \n-  field_decl = grokfield (input_filename, input_line, field_decl,\n-\t\t\t  decl_specs, NULL_TREE);\n+  field_decl = grokfield (field_decl, decl_specs, NULL_TREE);\n   field_decl_chain = field_decl;\n \n   /* char *ivar_type; */\n \n   decl_specs = build_tree_list (NULL_TREE, ridpointers[(int) RID_CHAR]);\n   field_decl = build1 (INDIRECT_REF, NULL_TREE, get_identifier (\"ivar_type\"));\n \n-  field_decl = grokfield (input_filename, input_line, field_decl,\n-\t\t\t  decl_specs, NULL_TREE);\n+  field_decl = grokfield (field_decl, decl_specs, NULL_TREE);\n   chainon (field_decl_chain, field_decl);\n \n   /* int ivar_offset; */\n \n   decl_specs = build_tree_list (NULL_TREE, ridpointers[(int) RID_INT]);\n   field_decl = get_identifier (\"ivar_offset\");\n \n-  field_decl = grokfield (input_filename, input_line, field_decl,\n-\t\t\t  decl_specs, NULL_TREE);\n+  field_decl = grokfield (field_decl, decl_specs, NULL_TREE);\n   chainon (field_decl_chain, field_decl);\n \n   finish_struct (objc_ivar_record, field_decl_chain, NULL_TREE);\n@@ -3710,8 +3670,7 @@ build_ivar_list_template (list_type, size)\n   decl_specs = build_tree_list (NULL_TREE, ridpointers[(int) RID_INT]);\n   field_decl = get_identifier (\"ivar_count\");\n \n-  field_decl = grokfield (input_filename, input_line, field_decl,\n-\t\t\t  decl_specs, NULL_TREE);\n+  field_decl = grokfield (field_decl, decl_specs, NULL_TREE);\n   field_decl_chain = field_decl;\n \n   /* struct objc_ivar ivar_list[]; */\n@@ -3720,8 +3679,7 @@ build_ivar_list_template (list_type, size)\n   field_decl = build_nt (ARRAY_REF, get_identifier (\"ivar_list\"),\n \t\t\t build_int_2 (size, 0));\n \n-  field_decl = grokfield (input_filename, input_line,\n-\t\t\t  field_decl, decl_specs, NULL_TREE);\n+  field_decl = grokfield (field_decl, decl_specs, NULL_TREE);\n   chainon (field_decl_chain, field_decl);\n \n   finish_struct (objc_ivar_list_record, field_decl_chain, NULL_TREE);\n@@ -3754,17 +3712,15 @@ build_method_list_template (list_type, size)\n \t\t get_identifier (UTAG_METHOD_PROTOTYPE_LIST)));\n   field_decl\n     = build1 (INDIRECT_REF, NULL_TREE, get_identifier (\"method_next\"));\n-  field_decl = grokfield (input_filename, input_line, field_decl,\n-\t\t\t  decl_specs, NULL_TREE);\n+  field_decl = grokfield (field_decl, decl_specs, NULL_TREE);\n   field_decl_chain = field_decl;\n \n   /* int method_count; */\n \n   decl_specs = build_tree_list (NULL_TREE, ridpointers[(int) RID_INT]);\n   field_decl = get_identifier (\"method_count\");\n \n-  field_decl = grokfield (input_filename, input_line,\n-\t\t\t  field_decl, decl_specs, NULL_TREE);\n+  field_decl = grokfield (field_decl, decl_specs, NULL_TREE);\n   chainon (field_decl_chain, field_decl);\n \n   /* struct objc_method method_list[]; */\n@@ -3773,8 +3729,7 @@ build_method_list_template (list_type, size)\n   field_decl = build_nt (ARRAY_REF, get_identifier (\"method_list\"),\n \t\t\t build_int_2 (size, 0));\n \n-  field_decl = grokfield (input_filename, input_line,\n-\t\t\t  field_decl, decl_specs, NULL_TREE);\n+  field_decl = grokfield (field_decl, decl_specs, NULL_TREE);\n   chainon (field_decl_chain, field_decl);\n \n   finish_struct (objc_ivar_list_record, field_decl_chain, NULL_TREE);\n@@ -3978,23 +3933,20 @@ build_method_template ()\n \t\t\t  NULL_TREE);\n   field_decl = build1 (INDIRECT_REF, NULL_TREE, get_identifier (\"_cmd\"));\n \n-  field_decl = grokfield (input_filename, input_line, field_decl,\n-\t\t\t  decl_specs, NULL_TREE);\n+  field_decl = grokfield (field_decl, decl_specs, NULL_TREE);\n   field_decl_chain = field_decl;\n \n   decl_specs = tree_cons (NULL_TREE, ridpointers[(int) RID_CHAR], NULL_TREE);\n   field_decl = build1 (INDIRECT_REF, NULL_TREE,\n \t\t       get_identifier (\"method_types\"));\n-  field_decl = grokfield (input_filename, input_line, field_decl,\n-\t\t\t  decl_specs, NULL_TREE);\n+  field_decl = grokfield (field_decl, decl_specs, NULL_TREE);\n   chainon (field_decl_chain, field_decl);\n \n   /* void *_imp; */\n \n   decl_specs = tree_cons (NULL_TREE, ridpointers[(int) RID_VOID], NULL_TREE);\n   field_decl = build1 (INDIRECT_REF, NULL_TREE, get_identifier (\"_imp\"));\n-  field_decl = grokfield (input_filename, input_line, field_decl,\n-\t\t\t  decl_specs, NULL_TREE);\n+  field_decl = grokfield (field_decl, decl_specs, NULL_TREE);\n   chainon (field_decl_chain, field_decl);\n \n   finish_struct (_SLT_record, field_decl_chain, NULL_TREE);\n@@ -5823,8 +5775,7 @@ add_instance_variable (class, public, declarator, declspecs, width)\n   else\n     CLASS_RAW_IVARS (class) = raw_decl;\n \n-  field_decl = grokfield (input_filename, input_line,\n-\t\t\t  declarator, declspecs, width);\n+  field_decl = grokfield (declarator, declspecs, width);\n \n   /* Overload the public attribute, it is not used for FIELD_DECLs.  */\n   switch (public)"}]}