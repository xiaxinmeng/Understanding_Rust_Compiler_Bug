{"sha": "88401f735c0c4f52b1e597b45c15984f3bebbce1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODg0MDFmNzM1YzBjNGY1MmIxZTU5N2I0NWMxNTk4NGYzYmViYmNlMQ==", "commit": {"author": {"name": "Richard Henderson", "email": "rth@redhat.com", "date": "2004-01-05T05:37:06Z"}, "committer": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "2004-01-05T05:37:06Z"}, "message": "call.c (build_over_call): Don't create a save_expr of an aggregate, but rather its address.\n\n        * call.c (build_over_call): Don't create a save_expr of an\n        aggregate, but rather its address.\n\nFrom-SVN: r75414", "tree": {"sha": "90273444b22f82fd59e99f31408bcc2791a35e19", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/90273444b22f82fd59e99f31408bcc2791a35e19"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/88401f735c0c4f52b1e597b45c15984f3bebbce1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/88401f735c0c4f52b1e597b45c15984f3bebbce1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/88401f735c0c4f52b1e597b45c15984f3bebbce1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/88401f735c0c4f52b1e597b45c15984f3bebbce1/comments", "author": null, "committer": null, "parents": [{"sha": "2b6c260d73d6cb17d85c508a646b69240bcd1f28", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2b6c260d73d6cb17d85c508a646b69240bcd1f28", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2b6c260d73d6cb17d85c508a646b69240bcd1f28"}], "stats": {"total": 29, "additions": 20, "deletions": 9}, "files": [{"sha": "7ca4f9c8b7463b3251b9a099982bf701723e5e20", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/88401f735c0c4f52b1e597b45c15984f3bebbce1/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/88401f735c0c4f52b1e597b45c15984f3bebbce1/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=88401f735c0c4f52b1e597b45c15984f3bebbce1", "patch": "@@ -1,3 +1,8 @@\n+2004-01-04  Richard Henderson  <rth@redhat.com>\n+\n+\t* call.c (build_over_call): Don't create a save_expr of an\n+\taggregate, but rather its address.\n+\n 2004-01-04  Mark Mitchell  <mark@codesourcery.com>\n \n \tPR c++/13529"}, {"sha": "26ca4885f7dbfdae60826a30434a26dd8a5a7c59", "filename": "gcc/cp/call.c", "status": "modified", "additions": 15, "deletions": 9, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/88401f735c0c4f52b1e597b45c15984f3bebbce1/gcc%2Fcp%2Fcall.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/88401f735c0c4f52b1e597b45c15984f3bebbce1/gcc%2Fcp%2Fcall.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcall.c?ref=88401f735c0c4f52b1e597b45c15984f3bebbce1", "patch": "@@ -4667,18 +4667,24 @@ build_over_call (struct z_candidate *cand, int flags)\n \t{\n \t  /* We must only copy the non-tail padding parts. Use\n \t     CLASSTYPE_AS_BASE for the bitwise copy.  */\n-\t  tree to_as_base, arg_as_base, base_ptr_type;\n+\t  tree to_ptr, arg_ptr, to_as_base, arg_as_base, base_ptr_type;\n+\t  tree save_to;\n+\n+\t  to_ptr = save_expr (build_unary_op (ADDR_EXPR, to, 0));\n+\t  arg_ptr = build_unary_op (ADDR_EXPR, arg, 0);\n \n-\t  to = save_expr (to);\n \t  base_ptr_type = build_pointer_type (as_base);\n-\t  to_as_base = build_indirect_ref\n-\t    (build_nop (base_ptr_type, build_unary_op (ADDR_EXPR, to, 0)), 0);\n-\t  arg_as_base = build_indirect_ref\n-\t    (build_nop (base_ptr_type, build_unary_op (ADDR_EXPR, arg, 0)), 0);\n-\t  \n+\t  to_as_base = build_nop (base_ptr_type, to_ptr);\n+\t  to_as_base = build_indirect_ref (to_as_base, 0);\n+\t  arg_as_base = build_nop (base_ptr_type, arg_ptr);\n+\t  arg_as_base = build_indirect_ref (arg_as_base, 0);\n+\n+\t  save_to = build_indirect_ref (to_ptr, 0);\n+\n \t  val = build (MODIFY_EXPR, as_base, to_as_base, arg_as_base);\n-\t  val = build (COMPOUND_EXPR, type, convert_to_void (val, NULL), to);\n-\t  TREE_USED (val) = 1;\n+\t  val = convert_to_void (val, NULL);\n+\t  val = build (COMPOUND_EXPR, type, val, save_to);\n+\t  TREE_NO_UNUSED_WARNING (val) = 1;\n \t}\n       \n       return val;"}]}