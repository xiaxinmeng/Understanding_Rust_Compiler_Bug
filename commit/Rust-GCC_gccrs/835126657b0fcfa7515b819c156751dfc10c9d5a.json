{"sha": "835126657b0fcfa7515b819c156751dfc10c9d5a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODM1MTI2NjU3YjBmY2ZhNzUxNWI4MTljMTU2NzUxZGZjMTBjOWQ1YQ==", "commit": {"author": {"name": "Jeffrey A Law", "email": "law@cygnus.com", "date": "1999-08-31T06:28:16Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "1999-08-31T06:28:16Z"}, "message": "emit-rtl.c (copy_rtx_if_shared): A MEM which references virtual_stack_vars_rtx or virtual_incoming_args_rtx can...\n\n        * emit-rtl.c (copy_rtx_if_shared): A MEM which references\n        virtual_stack_vars_rtx or virtual_incoming_args_rtx can not\n        be shared.\n\nFrom-SVN: r29001", "tree": {"sha": "efe6a39dde5dee4ab7324404a9bb42925b184498", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/efe6a39dde5dee4ab7324404a9bb42925b184498"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/835126657b0fcfa7515b819c156751dfc10c9d5a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/835126657b0fcfa7515b819c156751dfc10c9d5a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/835126657b0fcfa7515b819c156751dfc10c9d5a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/835126657b0fcfa7515b819c156751dfc10c9d5a/comments", "author": null, "committer": null, "parents": [{"sha": "f425a8879b121e9145d9ce6a614cad1fc41bd50e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f425a8879b121e9145d9ce6a614cad1fc41bd50e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f425a8879b121e9145d9ce6a614cad1fc41bd50e"}], "stats": {"total": 26, "additions": 15, "deletions": 11}, "files": [{"sha": "caf5c004d45f38ff3eb542b094c351340c511d93", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 4, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/835126657b0fcfa7515b819c156751dfc10c9d5a/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/835126657b0fcfa7515b819c156751dfc10c9d5a/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=835126657b0fcfa7515b819c156751dfc10c9d5a", "patch": "@@ -42,10 +42,6 @@ Mon Aug 30 16:07:49 1999  Richard Henderson  <rth@cygnus.com>\n \t* flow.c (new_insn_dead_notes): Use sets_reg_or_subreg not\n \tmark_set_resources.\n \n-Mon Aug 30 16:36:33 1999  Jeffrey A Law  (law@cygnus.com)\n-\n-\t* invoke.texi: Fix typo.\n-\n Mon Aug 30 12:23:53 1999  Jim Wilson  <wilson@cygnus.com>\n \n \t* fixinc/Makefile.in (subdir): New.\n@@ -54,6 +50,12 @@ Mon Aug 30 12:23:53 1999  Jim Wilson  <wilson@cygnus.com>\n \t\n Mon Aug 30 01:02:09 1999  Jeffrey A Law  (law@cygnus.com)\n \n+\t* emit-rtl.c (copy_rtx_if_shared): A MEM which references\n+\tvirtual_stack_vars_rtx or virtual_incoming_args_rtx can not\n+\tbe shared.\n+\n+\t* invoke.texi: Fix typo.\n+\n \t* dwarf2out.c (mem_loc_descriptor): New argument MODE.  All callers\n \tchanged.  Handle autoincrement addressing modes.\n "}, {"sha": "79c179ceb63d77aac685a51b2e0fb2da3b5e373c", "filename": "gcc/emit-rtl.c", "status": "modified", "additions": 9, "deletions": 7, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/835126657b0fcfa7515b819c156751dfc10c9d5a/gcc%2Femit-rtl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/835126657b0fcfa7515b819c156751dfc10c9d5a/gcc%2Femit-rtl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Femit-rtl.c?ref=835126657b0fcfa7515b819c156751dfc10c9d5a", "patch": "@@ -1678,16 +1678,18 @@ copy_rtx_if_shared (orig)\n       return x;\n \n     case MEM:\n-      /* A MEM is allowed to be shared if its address is constant\n-\t or is a constant plus one of the special registers.  */\n-      if (CONSTANT_ADDRESS_P (XEXP (x, 0))\n-\t  || XEXP (x, 0) == virtual_stack_vars_rtx\n-\t  || XEXP (x, 0) == virtual_incoming_args_rtx)\n+      /* A MEM is allowed to be shared if its address is constant.\n+\n+\t We used to allow sharing of MEMs which referenced \n+\t virtual_stack_vars_rtx or virtual_incoming_args_rtx, but\n+\t that can lose.  instantiate_virtual_regs will not unshare\n+\t the MEMs, and combine may change the structure of the address\n+\t because it looks safe and profitable in one context, but\n+\t in some other context it creates unrecognizable RTL.  */\n+      if (CONSTANT_ADDRESS_P (XEXP (x, 0)))\n \treturn x;\n \n       if (GET_CODE (XEXP (x, 0)) == PLUS\n-\t  && (XEXP (XEXP (x, 0), 0) == virtual_stack_vars_rtx\n-\t      || XEXP (XEXP (x, 0), 0) == virtual_incoming_args_rtx)\n \t  && CONSTANT_ADDRESS_P (XEXP (XEXP (x, 0), 1)))\n \t{\n \t  /* This MEM can appear in more than one place,"}]}