{"sha": "2d7b3fa49dd6dabc94eb6ad86ccdbefdb851cf78", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmQ3YjNmYTQ5ZGQ2ZGFiYzk0ZWI2YWQ4NmNjZGJlZmRiODUxY2Y3OA==", "commit": {"author": {"name": "Thomas Quinot", "email": "quinot@adacore.com", "date": "2012-10-29T11:21:57Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2012-10-29T11:21:57Z"}, "message": "gnat_rm.texi, [...] (Sem_Prag.Analyze_Pragma): Handle new pragma Attribute_Definition.\n\n2012-10-29  Thomas Quinot  <quinot@adacore.com>\n\n\t* gnat_rm.texi, sem_prag.adb, sem_util.adb, sem_util.ads,\n\tpar-prag.adb, par-util.adb, snames.ads-tmpl (Sem_Prag.Analyze_Pragma):\n\tHandle new pragma Attribute_Definition.\n\t(Sem_Util.Bad_Attribute): New routine, moved here\n\tfrom par-util, so that it can be used by the above.\n\t(Par_Util.Signal_Bad_Attribute): Processing moved to\n\tSem_Util.Bad_Attribute.\n\nFrom-SVN: r192935", "tree": {"sha": "17a14bab582f62ecf5a790fbcbbc51ccd647d89e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/17a14bab582f62ecf5a790fbcbbc51ccd647d89e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2d7b3fa49dd6dabc94eb6ad86ccdbefdb851cf78", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2d7b3fa49dd6dabc94eb6ad86ccdbefdb851cf78", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2d7b3fa49dd6dabc94eb6ad86ccdbefdb851cf78", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2d7b3fa49dd6dabc94eb6ad86ccdbefdb851cf78/comments", "author": null, "committer": null, "parents": [{"sha": "465b65324931ff40fc4963ab1cff93b7af8de2b9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/465b65324931ff40fc4963ab1cff93b7af8de2b9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/465b65324931ff40fc4963ab1cff93b7af8de2b9"}], "stats": {"total": 130, "additions": 116, "deletions": 14}, "files": [{"sha": "ff6e85c3e814c80e73d6cff77fc66ce49ae2bd1b", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2d7b3fa49dd6dabc94eb6ad86ccdbefdb851cf78/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2d7b3fa49dd6dabc94eb6ad86ccdbefdb851cf78/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=2d7b3fa49dd6dabc94eb6ad86ccdbefdb851cf78", "patch": "@@ -1,3 +1,13 @@\n+2012-10-29  Thomas Quinot  <quinot@adacore.com>\n+\n+\t* gnat_rm.texi, sem_prag.adb, sem_util.adb, sem_util.ads,\n+\tpar-prag.adb, par-util.adb, snames.ads-tmpl (Sem_Prag.Analyze_Pragma):\n+\tHandle new pragma Attribute_Definition.\n+\t(Sem_Util.Bad_Attribute): New routine, moved here\n+\tfrom par-util, so that it can be used by the above.\n+\t(Par_Util.Signal_Bad_Attribute): Processing moved to\n+\tSem_Util.Bad_Attribute.\n+\n 2012-10-29  Robert Dewar  <dewar@adacore.com>\n \n \t* s-tpoben.ads, s-taskin.ads, exp_ch3.adb: Minor reformatting."}, {"sha": "098978c7c3c263e2021f91b1f0f06543d5cec9d1", "filename": "gcc/ada/gnat_rm.texi", "status": "modified", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2d7b3fa49dd6dabc94eb6ad86ccdbefdb851cf78/gcc%2Fada%2Fgnat_rm.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2d7b3fa49dd6dabc94eb6ad86ccdbefdb851cf78/gcc%2Fada%2Fgnat_rm.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnat_rm.texi?ref=2d7b3fa49dd6dabc94eb6ad86ccdbefdb851cf78", "patch": "@@ -107,6 +107,7 @@ Implementation Defined Pragmas\n * Pragma Assert::\n * Pragma Assertion_Policy::\n * Pragma Assume_No_Invalid_Values::\n+* Pragma Attribute_Definition::\n * Pragma Ast_Entry::\n * Pragma C_Pass_By_Copy::\n * Pragma Check::\n@@ -845,6 +846,7 @@ consideration, the use of these pragmas should be minimized.\n * Pragma Assert::\n * Pragma Assertion_Policy::\n * Pragma Assume_No_Invalid_Values::\n+* Pragma Attribute_Definition::\n * Pragma Ast_Entry::\n * Pragma C_Pass_By_Copy::\n * Pragma Check::\n@@ -1308,6 +1310,28 @@ resulting from an OpenVMS system service call.  The pragma does not affect\n normal use of the entry.  For further details on this pragma, see the\n DEC Ada Language Reference Manual, section 9.12a.\n \n+@node Pragma Attribute_Definition\n+@unnumberedsec Pragma Attribute_Definition\n+@findex Attribute_Definition\n+@noindent\n+Syntax:\n+@smallexample @c ada\n+pragma Attribute_Definition\n+  ([Attribute  =>] ATTRIBUTE_DESIGNATOR,\n+   [Entity     =>] LOCAL_NAME,\n+   [Expression =>] EXPRESSION | NAME);\n+@end smallexample\n+\n+@noindent\n+If Attribute is a known attribute name, this pragma is equivalent to\n+the attribute definition clause:\n+@smallexample @c ada\n+  for Entity'Attribute use Expression;\n+@end smallexample\n+else the pragma is ignored, and a warning is emitted. This allows source\n+code to be written that takes advantage of some new attribute, while remaining\n+compilable with earlier compilers.\n+\n @node Pragma C_Pass_By_Copy\n @unnumberedsec Pragma C_Pass_By_Copy\n @cindex Passing by copy"}, {"sha": "7dcf94033bb9763d6537ed82077f243b55cbc8db", "filename": "gcc/ada/par-prag.adb", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2d7b3fa49dd6dabc94eb6ad86ccdbefdb851cf78/gcc%2Fada%2Fpar-prag.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2d7b3fa49dd6dabc94eb6ad86ccdbefdb851cf78/gcc%2Fada%2Fpar-prag.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fpar-prag.adb?ref=2d7b3fa49dd6dabc94eb6ad86ccdbefdb851cf78", "patch": "@@ -1103,6 +1103,7 @@ begin\n            Pragma_Atomic                         |\n            Pragma_Atomic_Components              |\n            Pragma_Attach_Handler                 |\n+           Pragma_Attribute_Definition           |\n            Pragma_Check                          |\n            Pragma_Check_Name                     |\n            Pragma_Check_Policy                   |"}, {"sha": "3baf9f51f5746c1965c8832ae5f9f348ca8bc63e", "filename": "gcc/ada/par-util.adb", "status": "modified", "additions": 1, "deletions": 14, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2d7b3fa49dd6dabc94eb6ad86ccdbefdb851cf78/gcc%2Fada%2Fpar-util.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2d7b3fa49dd6dabc94eb6ad86ccdbefdb851cf78/gcc%2Fada%2Fpar-util.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fpar-util.adb?ref=2d7b3fa49dd6dabc94eb6ad86ccdbefdb851cf78", "patch": "@@ -716,20 +716,7 @@ package body Util is\n \n    procedure Signal_Bad_Attribute is\n    begin\n-      Error_Msg_N (\"unrecognized attribute&\", Token_Node);\n-\n-      --  Check for possible misspelling\n-\n-      Error_Msg_Name_1 := First_Attribute_Name;\n-      while Error_Msg_Name_1 <= Last_Attribute_Name loop\n-         if Is_Bad_Spelling_Of (Token_Name, Error_Msg_Name_1) then\n-            Error_Msg_N -- CODEFIX\n-              (\"\\possible misspelling of %\", Token_Node);\n-            exit;\n-         end if;\n-\n-         Error_Msg_Name_1 := Error_Msg_Name_1 + 1;\n-      end loop;\n+      Bad_Attribute (Token_Node, Token_Name, Warn => False);\n    end Signal_Bad_Attribute;\n \n    -----------------------------"}, {"sha": "2957c856eac27bd7b03f784052530ec168d94d1c", "filename": "gcc/ada/sem_prag.adb", "status": "modified", "additions": 42, "deletions": 0, "changes": 42, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2d7b3fa49dd6dabc94eb6ad86ccdbefdb851cf78/gcc%2Fada%2Fsem_prag.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2d7b3fa49dd6dabc94eb6ad86ccdbefdb851cf78/gcc%2Fada%2Fsem_prag.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_prag.adb?ref=2d7b3fa49dd6dabc94eb6ad86ccdbefdb851cf78", "patch": "@@ -6919,6 +6919,47 @@ package body Sem_Prag is\n                Assume_No_Invalid_Values := False;\n             end if;\n \n+         --------------------------\n+         -- Attribute_Definition --\n+         --------------------------\n+\n+         --  pragma Attribute_Definition\n+         --    ([Attribute  =>] ATTRIBUTE_DESIGNATOR,\n+         --     [Entity     =>] LOCAL_NAME,\n+         --     [Expression =>] EXPRESSION | NAME);\n+\n+         when Pragma_Attribute_Definition => Attribute_Definition : declare\n+            Attribute_Designator : constant Node_Id := Get_Pragma_Arg (Arg1);\n+            Aname : Name_Id;\n+\n+         begin\n+            GNAT_Pragma;\n+            Check_Arg_Count (3);\n+            Check_Optional_Identifier (Arg1, \"attribute\");\n+            Check_Optional_Identifier (Arg2, \"entity\");\n+            Check_Optional_Identifier (Arg3, \"expression\");\n+\n+            if Nkind (Attribute_Designator) /= N_Identifier then\n+               Error_Msg_N (\"attribute name expected\", Attribute_Designator);\n+               return;\n+            end if;\n+\n+            Check_Arg_Is_Local_Name (Arg2);\n+\n+            Aname := Chars (Attribute_Designator);\n+            if not Is_Attribute_Name (Aname) then\n+               Bad_Attribute (Attribute_Designator, Aname, Warn => True);\n+               return;\n+            end if;\n+\n+            Rewrite (N,\n+              Make_Attribute_Definition_Clause (Loc,\n+                Name       => Get_Pragma_Arg (Arg2),\n+                Chars      => Aname,\n+                Expression => Get_Pragma_Arg (Arg3)));\n+            Analyze (N);\n+         end Attribute_Definition;\n+\n          ---------------\n          -- AST_Entry --\n          ---------------\n@@ -15289,6 +15330,7 @@ package body Sem_Prag is\n       Pragma_Assert_And_Cut                 => -1,\n       Pragma_Assertion_Policy               =>  0,\n       Pragma_Assume_No_Invalid_Values       =>  0,\n+      Pragma_Attribute_Definition           => +3,\n       Pragma_Asynchronous                   => -1,\n       Pragma_Atomic                         =>  0,\n       Pragma_Atomic_Components              =>  0,"}, {"sha": "690e30fe5f41652c32d28118d9891d63a9e944c0", "filename": "gcc/ada/sem_util.adb", "status": "modified", "additions": 28, "deletions": 0, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2d7b3fa49dd6dabc94eb6ad86ccdbefdb851cf78/gcc%2Fada%2Fsem_util.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2d7b3fa49dd6dabc94eb6ad86ccdbefdb851cf78/gcc%2Fada%2Fsem_util.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_util.adb?ref=2d7b3fa49dd6dabc94eb6ad86ccdbefdb851cf78", "patch": "@@ -36,6 +36,7 @@ with Fname;    use Fname;\n with Freeze;   use Freeze;\n with Lib;      use Lib;\n with Lib.Xref; use Lib.Xref;\n+with Namet.Sp; use Namet.Sp;\n with Nlists;   use Nlists;\n with Nmake;    use Nmake;\n with Output;   use Output;\n@@ -404,6 +405,33 @@ package body Sem_Util is\n         and then Scope_Depth (ST) >= Scope_Depth (SCT);\n    end Available_Full_View_Of_Component;\n \n+   -------------------\n+   -- Bad_Attribute --\n+   -------------------\n+\n+   procedure Bad_Attribute\n+     (N    : Node_Id;\n+      Nam  : Name_Id;\n+      Warn : Boolean := False)\n+   is\n+   begin\n+      Error_Msg_Warn := Warn;\n+      Error_Msg_N (\"unrecognized attribute&<\", N);\n+\n+      --  Check for possible misspelling\n+\n+      Error_Msg_Name_1 := First_Attribute_Name;\n+      while Error_Msg_Name_1 <= Last_Attribute_Name loop\n+         if Is_Bad_Spelling_Of (Nam, Error_Msg_Name_1) then\n+            Error_Msg_N -- CODEFIX\n+              (\"\\possible misspelling of %<\", N);\n+            exit;\n+         end if;\n+\n+         Error_Msg_Name_1 := Error_Msg_Name_1 + 1;\n+      end loop;\n+   end Bad_Attribute;\n+\n    --------------------------------\n    -- Bad_Predicated_Subtype_Use --\n    --------------------------------"}, {"sha": "bf6486d464f08f213da0e540e74b8a9806ce64b2", "filename": "gcc/ada/sem_util.ads", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2d7b3fa49dd6dabc94eb6ad86ccdbefdb851cf78/gcc%2Fada%2Fsem_util.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2d7b3fa49dd6dabc94eb6ad86ccdbefdb851cf78/gcc%2Fada%2Fsem_util.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_util.ads?ref=2d7b3fa49dd6dabc94eb6ad86ccdbefdb851cf78", "patch": "@@ -108,6 +108,14 @@ package Sem_Util is\n    --  are open, and the scope of the array is not outside the scope of the\n    --  component.\n \n+   procedure Bad_Attribute\n+     (N    : Node_Id;\n+      Nam  : Name_Id;\n+      Warn : Boolean := False);\n+   --  Called when node N is expected to contain a valid attribute name, and\n+   --  Nam is found instead. If Warn is set True this is a warning, else this\n+   --  is an error.\n+\n    procedure Bad_Predicated_Subtype_Use\n      (Msg : String;\n       N   : Node_Id;"}, {"sha": "0fd39c34ef857776776db8bced60b363315f2d4e", "filename": "gcc/ada/snames.ads-tmpl", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2d7b3fa49dd6dabc94eb6ad86ccdbefdb851cf78/gcc%2Fada%2Fsnames.ads-tmpl", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2d7b3fa49dd6dabc94eb6ad86ccdbefdb851cf78/gcc%2Fada%2Fsnames.ads-tmpl", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsnames.ads-tmpl?ref=2d7b3fa49dd6dabc94eb6ad86ccdbefdb851cf78", "patch": "@@ -363,6 +363,7 @@ package Snames is\n    Name_Annotate                       : constant Name_Id := N + $; -- GNAT\n    Name_Assertion_Policy               : constant Name_Id := N + $; -- Ada 05\n    Name_Assume_No_Invalid_Values       : constant Name_Id := N + $; -- GNAT\n+   Name_Attribute_Definition           : constant Name_Id := N + $; -- GNAT\n    Name_C_Pass_By_Copy                 : constant Name_Id := N + $; -- GNAT\n    Name_Check_Name                     : constant Name_Id := N + $; -- GNAT\n    Name_Check_Policy                   : constant Name_Id := N + $; -- GNAT\n@@ -1646,6 +1647,7 @@ package Snames is\n       Pragma_Annotate,\n       Pragma_Assertion_Policy,\n       Pragma_Assume_No_Invalid_Values,\n+      Pragma_Attribute_Definition,\n       Pragma_C_Pass_By_Copy,\n       Pragma_Check_Name,\n       Pragma_Check_Policy,"}]}