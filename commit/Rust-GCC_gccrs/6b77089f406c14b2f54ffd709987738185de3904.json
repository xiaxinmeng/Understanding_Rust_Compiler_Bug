{"sha": "6b77089f406c14b2f54ffd709987738185de3904", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmI3NzA4OWY0MDZjMTRiMmY1NGZmZDcwOTk4NzczODE4NWRlMzkwNA==", "commit": {"author": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2011-04-24T23:51:49Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2011-04-24T23:51:49Z"}, "message": "multiway_merge.h: Uglify equally_split and equally_split_point throughout.\n\n2011-04-24  Paolo Carlini  <paolo.carlini@oracle.com>\n\n\t* include/parallel/multiway_merge.h: Uglify equally_split\n\tand equally_split_point throughout.\n\t* include/parallel/par_loop.h: Likewise.\n\t* include/parallel/equally_split.h: Likewise.\n\t* include/parallel/set_operations.h: Likewise.\n\t* include/parallel/unique_copy.h: Likewise.\n\t* include/parallel/multiway_mergesort.h: Likewise.\n\t* include/parallel/search.h: Likewise.\n\t* include/parallel/partial_sum.h: Likewise.\n\t* include/parallel/find.h: Likewise.\n\nFrom-SVN: r172923", "tree": {"sha": "6862ca48f05e65aed7b086daceb1dbb365b1ca06", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6862ca48f05e65aed7b086daceb1dbb365b1ca06"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6b77089f406c14b2f54ffd709987738185de3904", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6b77089f406c14b2f54ffd709987738185de3904", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6b77089f406c14b2f54ffd709987738185de3904", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6b77089f406c14b2f54ffd709987738185de3904/comments", "author": null, "committer": null, "parents": [{"sha": "ed4c109ee830c14f91ba4b6ae39a016ee5f2131e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ed4c109ee830c14f91ba4b6ae39a016ee5f2131e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ed4c109ee830c14f91ba4b6ae39a016ee5f2131e"}], "stats": {"total": 65, "additions": 39, "deletions": 26}, "files": [{"sha": "9d767f5beeffb4565c17d957fce3319f0c182a80", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 15, "deletions": 2, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6b77089f406c14b2f54ffd709987738185de3904/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6b77089f406c14b2f54ffd709987738185de3904/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=6b77089f406c14b2f54ffd709987738185de3904", "patch": "@@ -1,10 +1,23 @@\n+2011-04-24  Paolo Carlini  <paolo.carlini@oracle.com>\n+\n+\t* include/parallel/multiway_merge.h: Uglify equally_split\n+\tand equally_split_point throughout.\n+\t* include/parallel/par_loop.h: Likewise.\n+\t* include/parallel/equally_split.h: Likewise.\n+\t* include/parallel/set_operations.h: Likewise.\n+\t* include/parallel/unique_copy.h: Likewise.\n+\t* include/parallel/multiway_mergesort.h: Likewise.\n+\t* include/parallel/search.h: Likewise.\n+\t* include/parallel/partial_sum.h: Likewise.\n+\t* include/parallel/find.h: Likewise.\n+\n 2011-04-24  Gerald Pfeifer  <gerald@pfeifer.com>\n \n \t* doc/xml/manual/parallel_mode.xml: Fix link to libgomp online\n \tdocumentation.  Expand link text.\n \n 2011-04-24  Gerald Pfeifer  <gerald@pfeifer.com>\n-\t\n+\n \t* libsupc++/cxxabi.h: Adjust link to FAQ entry.\n \n 2011-04-22  Fran\u00e7ois Dumont  <francois.cppdevs@free.fr>\n@@ -37,7 +50,7 @@\n \t(ref(const A&&), cref(const A&&): Define as deleted.\n \t* include/std/future (async): Simplify SFINAE and use result_of to\n \tsupport pointer to member.\n-\t* testsuite/20_util/reference_wrapper/invoke.cc: Test pointer to \n+\t* testsuite/20_util/reference_wrapper/invoke.cc: Test pointer to\n \tmember.\n \t* testsuite/20_util/reference_wrapper/24803.cc: Likewise.\n \t* testsuite/20_util/reference_wrapper/typedefs.cc: Test for types"}, {"sha": "a840ae3147aad1c1465c98e47d9d14659cd775fe", "filename": "libstdc++-v3/include/parallel/equally_split.h", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6b77089f406c14b2f54ffd709987738185de3904/libstdc%2B%2B-v3%2Finclude%2Fparallel%2Fequally_split.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6b77089f406c14b2f54ffd709987738185de3904/libstdc%2B%2B-v3%2Finclude%2Fparallel%2Fequally_split.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fparallel%2Fequally_split.h?ref=6b77089f406c14b2f54ffd709987738185de3904", "patch": "@@ -1,6 +1,6 @@\n // -*- C++ -*-\n \n-// Copyright (C) 2007, 2008, 2009 Free Software Foundation, Inc.\n+// Copyright (C) 2007, 2008, 2009, 2010, 2011 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the terms\n@@ -45,8 +45,8 @@ namespace __gnu_parallel\n    *  @returns End of __splitter sequence, i.e. @c __s+__num_threads+1 */\n   template<typename _DifferenceType, typename _OutputIterator>\n     _OutputIterator\n-    equally_split(_DifferenceType __n, _ThreadIndex __num_threads,\n-\t\t  _OutputIterator __s)\n+    __equally_split(_DifferenceType __n, _ThreadIndex __num_threads,\n+\t\t    _OutputIterator __s)\n     {\n       _DifferenceType __chunk_length = __n / __num_threads;\n       _DifferenceType __num_longer_chunks = __n % __num_threads;\n@@ -71,9 +71,9 @@ namespace __gnu_parallel\n    *  @returns splitting point */\n   template<typename _DifferenceType>\n     _DifferenceType\n-    equally_split_point(_DifferenceType __n,\n-\t\t\t_ThreadIndex __num_threads,\n-\t\t\t_ThreadIndex __thread_no)\n+    __equally_split_point(_DifferenceType __n,\n+\t\t\t  _ThreadIndex __num_threads,\n+\t\t\t  _ThreadIndex __thread_no)\n     {\n       _DifferenceType __chunk_length = __n / __num_threads;\n       _DifferenceType __num_longer_chunks = __n % __num_threads;"}, {"sha": "bd4294a12a7f6e7531180963fcf94ff150b41907", "filename": "libstdc++-v3/include/parallel/find.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6b77089f406c14b2f54ffd709987738185de3904/libstdc%2B%2B-v3%2Finclude%2Fparallel%2Ffind.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6b77089f406c14b2f54ffd709987738185de3904/libstdc%2B%2B-v3%2Finclude%2Fparallel%2Ffind.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fparallel%2Ffind.h?ref=6b77089f406c14b2f54ffd709987738185de3904", "patch": "@@ -1,6 +1,6 @@\n // -*- C++ -*-\n \n-// Copyright (C) 2007, 2008, 2009, 2010 Free Software Foundation, Inc.\n+// Copyright (C) 2007, 2008, 2009, 2010, 2011 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the terms\n@@ -118,7 +118,7 @@ namespace __gnu_parallel\n \t{\n \t  __num_threads = omp_get_num_threads();\n \t  __borders = new _DifferenceType[__num_threads + 1];\n-\t  equally_split(__length, __num_threads, __borders);\n+\t  __equally_split(__length, __num_threads, __borders);\n \t} //single\n \n \t_ThreadIndex __iam = omp_get_thread_num();"}, {"sha": "a5fd3be1bd08e859ab9ea0636e6b9102277f96d4", "filename": "libstdc++-v3/include/parallel/multiway_merge.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6b77089f406c14b2f54ffd709987738185de3904/libstdc%2B%2B-v3%2Finclude%2Fparallel%2Fmultiway_merge.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6b77089f406c14b2f54ffd709987738185de3904/libstdc%2B%2B-v3%2Finclude%2Fparallel%2Fmultiway_merge.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fparallel%2Fmultiway_merge.h?ref=6b77089f406c14b2f54ffd709987738185de3904", "patch": "@@ -1,6 +1,6 @@\n // -*- C++ -*-\n \n-// Copyright (C) 2007, 2008, 2009, 2010 Free Software Foundation, Inc.\n+// Copyright (C) 2007, 2008, 2009, 2010, 2011 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the terms\n@@ -1139,7 +1139,7 @@ namespace __gnu_parallel\n \n       _DifferenceType* __borders =\n \tnew _DifferenceType[__num_threads + 1];\n-      equally_split(__length, __num_threads, __borders);\n+      __equally_split(__length, __num_threads, __borders);\n \n       for (_ThreadIndex __s = 0; __s < (__num_threads - 1); ++__s)\n \t{"}, {"sha": "2cb8013876699d06f787dbab162ca79a4919e600", "filename": "libstdc++-v3/include/parallel/multiway_mergesort.h", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6b77089f406c14b2f54ffd709987738185de3904/libstdc%2B%2B-v3%2Finclude%2Fparallel%2Fmultiway_mergesort.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6b77089f406c14b2f54ffd709987738185de3904/libstdc%2B%2B-v3%2Finclude%2Fparallel%2Fmultiway_mergesort.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fparallel%2Fmultiway_mergesort.h?ref=6b77089f406c14b2f54ffd709987738185de3904", "patch": "@@ -1,6 +1,6 @@\n // -*- C++ -*-\n \n-// Copyright (C) 2007, 2008, 2009, 2010 Free Software Foundation, Inc.\n+// Copyright (C) 2007, 2008, 2009, 2010, 2011 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the terms\n@@ -105,8 +105,8 @@ namespace __gnu_parallel\n \n       _DifferenceType* __es = new _DifferenceType[__num_samples + 2];\n \n-      equally_split(__sd->_M_starts[__iam + 1] - __sd->_M_starts[__iam], \n-\t\t    __num_samples + 1, __es);\n+      __equally_split(__sd->_M_starts[__iam + 1] - __sd->_M_starts[__iam], \n+\t\t      __num_samples + 1, __es);\n \n       for (_DifferenceType __i = 0; __i < __num_samples; ++__i)\n \t::new(&(__sd->_M_samples[__iam * __num_samples + __i]))"}, {"sha": "9671c1dd398a5de012f4ee99ea39ffb04d4ff577", "filename": "libstdc++-v3/include/parallel/par_loop.h", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6b77089f406c14b2f54ffd709987738185de3904/libstdc%2B%2B-v3%2Finclude%2Fparallel%2Fpar_loop.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6b77089f406c14b2f54ffd709987738185de3904/libstdc%2B%2B-v3%2Finclude%2Fparallel%2Fpar_loop.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fparallel%2Fpar_loop.h?ref=6b77089f406c14b2f54ffd709987738185de3904", "patch": "@@ -1,6 +1,6 @@\n // -*- C++ -*-\n \n-// Copyright (C) 2007, 2008, 2009 Free Software Foundation, Inc.\n+// Copyright (C) 2007, 2008, 2009, 2010, 2011 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the terms\n@@ -95,8 +95,8 @@ namespace __gnu_parallel\n \t  (::operator new(sizeof(_Result)));\n \n \t_DifferenceType\n-\t  __start = equally_split_point(__length, __num_threads, __iam),\n-\t  __stop = equally_split_point(__length, __num_threads, __iam + 1);\n+\t  __start = __equally_split_point(__length, __num_threads, __iam),\n+\t  __stop = __equally_split_point(__length, __num_threads, __iam + 1);\n \n \tif (__start < __stop)\n \t  {"}, {"sha": "425e868fe6bb699f2e41be80f8b24543f11b3312", "filename": "libstdc++-v3/include/parallel/partial_sum.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6b77089f406c14b2f54ffd709987738185de3904/libstdc%2B%2B-v3%2Finclude%2Fparallel%2Fpartial_sum.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6b77089f406c14b2f54ffd709987738185de3904/libstdc%2B%2B-v3%2Finclude%2Fparallel%2Fpartial_sum.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fparallel%2Fpartial_sum.h?ref=6b77089f406c14b2f54ffd709987738185de3904", "patch": "@@ -1,6 +1,6 @@\n // -*- C++ -*-\n \n-// Copyright (C) 2007, 2008, 2009, 2010 Free Software Foundation, Inc.\n+// Copyright (C) 2007, 2008, 2009, 2010, 2011 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the terms\n@@ -124,7 +124,7 @@ namespace __gnu_parallel\n \t  __borders = new _DifferenceType[__num_threads + 2];\n \n \t  if (__s.partial_sum_dilation == 1.0f)\n-\t    equally_split(__n, __num_threads + 1, __borders);\n+\t    __equally_split(__n, __num_threads + 1, __borders);\n \t  else\n \t    {\n \t      _DifferenceType __first_part_length ="}, {"sha": "9544ff9e069f060aa9fe5476a6669df64fe4a605", "filename": "libstdc++-v3/include/parallel/search.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6b77089f406c14b2f54ffd709987738185de3904/libstdc%2B%2B-v3%2Finclude%2Fparallel%2Fsearch.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6b77089f406c14b2f54ffd709987738185de3904/libstdc%2B%2B-v3%2Finclude%2Fparallel%2Fsearch.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fparallel%2Fsearch.h?ref=6b77089f406c14b2f54ffd709987738185de3904", "patch": "@@ -1,6 +1,6 @@\n // -*- C++ -*-\n \n-// Copyright (C) 2007, 2008, 2009 Free Software Foundation, Inc.\n+// Copyright (C) 2007, 2008, 2009, 2010, 2011 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the terms\n@@ -120,7 +120,7 @@ namespace __gnu_parallel\n \t{\n \t  __num_threads = omp_get_num_threads();\n \t  __splitters = new _DifferenceType[__num_threads + 1];\n-\t  equally_split(__input_length, __num_threads, __splitters);\n+\t  __equally_split(__input_length, __num_threads, __splitters);\n \t}\n \n \t_ThreadIndex __iam = omp_get_thread_num();"}, {"sha": "9699ae9840f3e46b33ab72a8038bede5098c97d3", "filename": "libstdc++-v3/include/parallel/set_operations.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6b77089f406c14b2f54ffd709987738185de3904/libstdc%2B%2B-v3%2Finclude%2Fparallel%2Fset_operations.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6b77089f406c14b2f54ffd709987738185de3904/libstdc%2B%2B-v3%2Finclude%2Fparallel%2Fset_operations.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fparallel%2Fset_operations.h?ref=6b77089f406c14b2f54ffd709987738185de3904", "patch": "@@ -1,6 +1,6 @@\n // -*- C++ -*-\n \n-// Copyright (C) 2007, 2008, 2009, 2010 Free Software Foundation, Inc.\n+// Copyright (C) 2007, 2008, 2009, 2010, 2011 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the terms\n@@ -383,7 +383,7 @@ namespace __gnu_parallel\n \t  __num_threads = omp_get_num_threads();\n \n \t  __borders = new _DifferenceType[__num_threads + 2];\n-\t  equally_split(__size, __num_threads + 1, __borders);\n+\t  __equally_split(__size, __num_threads + 1, __borders);\n \t  __block_begins = new _IteratorPair[__num_threads + 1];\n \t  // Very __start.\n \t  __block_begins[0] = std::make_pair(__begin1, __begin2);"}, {"sha": "27221e78a3a21e3e116cc2ca594d22d202c6602f", "filename": "libstdc++-v3/include/parallel/unique_copy.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6b77089f406c14b2f54ffd709987738185de3904/libstdc%2B%2B-v3%2Finclude%2Fparallel%2Funique_copy.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6b77089f406c14b2f54ffd709987738185de3904/libstdc%2B%2B-v3%2Finclude%2Fparallel%2Funique_copy.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fparallel%2Funique_copy.h?ref=6b77089f406c14b2f54ffd709987738185de3904", "patch": "@@ -1,6 +1,6 @@\n // -*- C++ -*-\n \n-// Copyright (C) 2007, 2008, 2009 Free Software Foundation, Inc.\n+// Copyright (C) 2007, 2008, 2009, 2010, 2011 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the terms\n@@ -74,7 +74,7 @@ namespace __gnu_parallel\n \t{\n \t  __num_threads = omp_get_num_threads();\n \t  __borders = new _DifferenceType[__num_threads + 2];\n-\t  equally_split(__size, __num_threads + 1, __borders);\n+\t  __equally_split(__size, __num_threads + 1, __borders);\n \t  __counter = new _DifferenceType[__num_threads + 1];\n \t}\n "}]}