{"sha": "c6b3f1f25ff7623592b3bfac00a73030508febfd", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzZiM2YxZjI1ZmY3NjIzNTkyYjNiZmFjMDBhNzMwMzA1MDhmZWJmZA==", "commit": {"author": {"name": "Jim Wilson", "email": "wilson@gcc.gnu.org", "date": "1993-05-04T00:16:21Z"}, "committer": {"name": "Jim Wilson", "email": "wilson@gcc.gnu.org", "date": "1993-05-04T00:16:21Z"}, "message": "(make_extraction): Move BYTES_BIG_ENDIAN != BITS_BIG_ENDIAN offset\ncorrection after the offset calculation.\n\nFrom-SVN: r4315", "tree": {"sha": "660c520dac990a73659bb86275c7ca2829522bde", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/660c520dac990a73659bb86275c7ca2829522bde"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c6b3f1f25ff7623592b3bfac00a73030508febfd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c6b3f1f25ff7623592b3bfac00a73030508febfd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c6b3f1f25ff7623592b3bfac00a73030508febfd", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c6b3f1f25ff7623592b3bfac00a73030508febfd/comments", "author": null, "committer": null, "parents": [{"sha": "50e658546e5c22ddf703ef305282840fedb07d8f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/50e658546e5c22ddf703ef305282840fedb07d8f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/50e658546e5c22ddf703ef305282840fedb07d8f"}], "stats": {"total": 12, "additions": 6, "deletions": 6}, "files": [{"sha": "6293bbc376e5a5ea5b80611d0f1ef95da8e92657", "filename": "gcc/combine.c", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c6b3f1f25ff7623592b3bfac00a73030508febfd/gcc%2Fcombine.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c6b3f1f25ff7623592b3bfac00a73030508febfd/gcc%2Fcombine.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcombine.c?ref=c6b3f1f25ff7623592b3bfac00a73030508febfd", "patch": "@@ -4881,12 +4881,6 @@ make_extraction (mode, inner, pos, pos_rtx, len,\n \t endian in both bits and bytes or little endian in bits and bytes.\n \t If it is mixed, we must adjust.  */\n \t     \n-#if BYTES_BIG_ENDIAN != BITS_BIG_ENDIAN\n-      if (! spans_byte && is_mode != wanted_mem_mode)\n-\toffset = (GET_MODE_SIZE (is_mode)\n-\t\t  - GET_MODE_SIZE (wanted_mem_mode) - offset);\n-#endif\n-\n       /* If bytes are big endian and we had a paradoxical SUBREG, we must\n \t adjust OFFSET to compensate. */\n #if BYTES_BIG_ENDIAN\n@@ -4902,6 +4896,12 @@ make_extraction (mode, inner, pos, pos_rtx, len,\n \t  pos %= GET_MODE_BITSIZE (wanted_mem_mode);\n \t}\n \n+#if BYTES_BIG_ENDIAN != BITS_BIG_ENDIAN\n+      if (! spans_byte && is_mode != wanted_mem_mode)\n+\toffset = (GET_MODE_SIZE (is_mode)\n+\t\t  - GET_MODE_SIZE (wanted_mem_mode) - offset);\n+#endif\n+\n       if (offset != 0 || inner_mode != wanted_mem_mode)\n \t{\n \t  rtx newmem = gen_rtx (MEM, wanted_mem_mode,"}]}