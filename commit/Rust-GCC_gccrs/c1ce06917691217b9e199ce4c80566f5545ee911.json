{"sha": "c1ce06917691217b9e199ce4c80566f5545ee911", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzFjZTA2OTE3NjkxMjE3YjllMTk5Y2U0YzgwNTY2ZjU1NDVlZTkxMQ==", "commit": {"author": {"name": "Ed Schonberg", "email": "schonberg@adacore.com", "date": "2013-01-03T10:24:28Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2013-01-03T10:24:28Z"}, "message": "exp_ch3.adb (Expand_N_Object_Declaration): If the object has a class-wide type and a renaming declaration is created for it...\n\n2013-01-03  Ed Schonberg  <schonberg@adacore.com>\n\n\t* exp_ch3.adb (Expand_N_Object_Declaration): If the object has\n\ta class-wide type and a renaming declaration is created for it,\n\tpreserve entity chain, which already contains generated internal\n\ttypes. This ensures that freezing actions are properly generated\n\tfor all objects declared subsequently in the same scope, and\n\tthat debugging information is generated for them.\n\t* sem_util.adb, sem_util.ads (we): New debugging routine, to\n\tdisplay entity chain of a given scope.\n\nFrom-SVN: r194843", "tree": {"sha": "6da155dd59d229880bf05e04265009d62f7ac6ad", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6da155dd59d229880bf05e04265009d62f7ac6ad"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c1ce06917691217b9e199ce4c80566f5545ee911", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c1ce06917691217b9e199ce4c80566f5545ee911", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c1ce06917691217b9e199ce4c80566f5545ee911", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c1ce06917691217b9e199ce4c80566f5545ee911/comments", "author": {"login": "Edschonberg", "id": 6352375, "node_id": "MDQ6VXNlcjYzNTIzNzU=", "avatar_url": "https://avatars.githubusercontent.com/u/6352375?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Edschonberg", "html_url": "https://github.com/Edschonberg", "followers_url": "https://api.github.com/users/Edschonberg/followers", "following_url": "https://api.github.com/users/Edschonberg/following{/other_user}", "gists_url": "https://api.github.com/users/Edschonberg/gists{/gist_id}", "starred_url": "https://api.github.com/users/Edschonberg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Edschonberg/subscriptions", "organizations_url": "https://api.github.com/users/Edschonberg/orgs", "repos_url": "https://api.github.com/users/Edschonberg/repos", "events_url": "https://api.github.com/users/Edschonberg/events{/privacy}", "received_events_url": "https://api.github.com/users/Edschonberg/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "329ea7ece205200951bf92a642196935dfa2dad1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/329ea7ece205200951bf92a642196935dfa2dad1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/329ea7ece205200951bf92a642196935dfa2dad1"}], "stats": {"total": 72, "additions": 54, "deletions": 18}, "files": [{"sha": "ad2c2686a8d525db2472d50750579d9fec1b2519", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c1ce06917691217b9e199ce4c80566f5545ee911/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c1ce06917691217b9e199ce4c80566f5545ee911/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=c1ce06917691217b9e199ce4c80566f5545ee911", "patch": "@@ -1,3 +1,14 @@\n+2013-01-03  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* exp_ch3.adb (Expand_N_Object_Declaration): If the object has\n+\ta class-wide type and a renaming declaration is created for it,\n+\tpreserve entity chain, which already contains generated internal\n+\ttypes. This ensures that freezing actions are properly generated\n+\tfor all objects declared subsequently in the same scope, and\n+\tthat debugging information is generated for them.\n+\t* sem_util.adb, sem_util.ads (we): New debugging routine, to\n+\tdisplay entity chain of a given scope.\n+\n 2013-01-03  Robert Dewar  <dewar@adacore.com>\n \n \t* exp_intr.adb: Minor reformatting."}, {"sha": "f33d0f75d424ba03cb15fa9d5182684d4120742b", "filename": "gcc/ada/exp_ch3.adb", "status": "modified", "additions": 22, "deletions": 17, "changes": 39, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c1ce06917691217b9e199ce4c80566f5545ee911/gcc%2Fada%2Fexp_ch3.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c1ce06917691217b9e199ce4c80566f5545ee911/gcc%2Fada%2Fexp_ch3.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch3.adb?ref=c1ce06917691217b9e199ce4c80566f5545ee911", "patch": "@@ -5315,33 +5315,38 @@ package body Exp_Ch3 is\n                       Subtype_Mark        => New_Occurrence_Of (Typ, Loc),\n                       Name => Convert_Tag_To_Interface (Typ, Tag_Comp)));\n \n-                  --  If the original entity comes from source, then mark the\n-                  --  new entity as needing debug information, even though it's\n-                  --  defined by a generated renaming that does not come from\n-                  --  source, so that Materialize_Entity will be set on the\n-                  --  entity when Debug_Renaming_Declaration is called during\n-                  --  analysis.\n-\n-                  if Comes_From_Source (Def_Id) then\n-                     Set_Debug_Info_Needed (Defining_Identifier (N));\n-                  end if;\n-\n                   Analyze (N, Suppress => All_Checks);\n \n                   --  Replace internal identifier of rewritten node by the\n                   --  identifier found in the sources. We also have to exchange\n                   --  entities containing their defining identifiers to ensure\n                   --  the correct replacement of the object declaration by this\n-                  --  object renaming declaration ---because these identifiers\n+                  --  object renaming declaration because these identifiers\n                   --  were previously added by Enter_Name to the current scope.\n                   --  We must preserve the homonym chain of the source entity\n                   --  as well. We must also preserve the kind of the entity,\n-                  --  which may be a constant.\n+                  --  which may be a constant. Preserve entity chain because\n+                  --  itypes may have been generated already, and the full\n+                  --  chain must be preserved for final freezing. Finally,\n+                  --  Preserve Comes_From_Source setting, so that debugging\n+                  --  and cross-referencing information is properly kept.\n+\n+                  declare\n+                     New_Id    : constant Entity_Id := Defining_Identifier (N);\n+                     Next_Temp : constant Entity_Id := Next_Entity (New_Id);\n+                     S_Flag    : constant Boolean   :=\n+                                   Comes_From_Source (Def_Id);\n \n-                  Set_Chars (Defining_Identifier (N), Chars (Def_Id));\n-                  Set_Homonym (Defining_Identifier (N), Homonym (Def_Id));\n-                  Set_Ekind (Defining_Identifier (N), Ekind (Def_Id));\n-                  Exchange_Entities (Defining_Identifier (N), Def_Id);\n+                  begin\n+                     Set_Next_Entity (New_Id, Next_Entity (Def_Id));\n+                     Set_Next_Entity (Def_Id, Next_Temp);\n+                     Set_Chars (Defining_Identifier (N), Chars (Def_Id));\n+                     Set_Homonym (Defining_Identifier (N), Homonym (Def_Id));\n+                     Set_Ekind (Defining_Identifier (N), Ekind (Def_Id));\n+                     Set_Comes_From_Source (Def_Id, False);\n+                     Exchange_Entities (Defining_Identifier (N), Def_Id);\n+                     Set_Comes_From_Source (Def_Id, S_Flag);\n+                  end;\n                end;\n             end if;\n "}, {"sha": "50758e33a51b45a06888e6a50c0ba28ab91084b4", "filename": "gcc/ada/sem_ch8.adb", "status": "modified", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c1ce06917691217b9e199ce4c80566f5545ee911/gcc%2Fada%2Fsem_ch8.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c1ce06917691217b9e199ce4c80566f5545ee911/gcc%2Fada%2Fsem_ch8.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch8.adb?ref=c1ce06917691217b9e199ce4c80566f5545ee911", "patch": "@@ -8531,4 +8531,21 @@ package body Sem_Ch8 is\n       end loop;\n    end ws;\n \n+   --------\n+   -- we --\n+   --------\n+\n+   procedure we (S : Entity_Id) is\n+      E : Entity_Id;\n+   begin\n+      E := First_Entity (S);\n+      while Present (E) loop\n+         Write_Int (Int (E));\n+         Write_Str (\" === \");\n+         Write_Name (Chars (E));\n+         Write_Eol;\n+\n+         Next_Entity (E);\n+      end loop;\n+   end we;\n end Sem_Ch8;"}, {"sha": "195c03bd3a915a9c5d3fe53956edf61d8e31c0bc", "filename": "gcc/ada/sem_ch8.ads", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c1ce06917691217b9e199ce4c80566f5545ee911/gcc%2Fada%2Fsem_ch8.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c1ce06917691217b9e199ce4c80566f5545ee911/gcc%2Fada%2Fsem_ch8.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch8.ads?ref=c1ce06917691217b9e199ce4c80566f5545ee911", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1992-2011, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2012, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -169,4 +169,7 @@ package Sem_Ch8 is\n    procedure ws;\n    --  Debugging routine for use in gdb: dump all entities on scope stack\n \n+   procedure we (S : Entity_Id);\n+   --  Debugging routine for use in gdb: dump all entities in given scope\n+\n end Sem_Ch8;"}]}