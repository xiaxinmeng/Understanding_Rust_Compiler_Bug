{"sha": "3a2700f61bd54868e8572b18f3dadf994adb45ea", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2EyNzAwZjYxYmQ1NDg2OGU4NTcyYjE4ZjNkYWRmOTk0YWRiNDVlYQ==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2014-03-26T09:47:36Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2014-03-26T09:47:36Z"}, "message": "tree-pretty-print.c (percent_K_format): Implement special case for LTO and its stripped down BLOCK tree.\n\n2014-03-26  Richard Biener  <rguenther@suse.de>\n\n\t* tree-pretty-print.c (percent_K_format): Implement special\n\tcase for LTO and its stripped down BLOCK tree.\n\nFrom-SVN: r208843", "tree": {"sha": "886b6b240ed0027924e198b7aaa6ec42600d5c45", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/886b6b240ed0027924e198b7aaa6ec42600d5c45"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3a2700f61bd54868e8572b18f3dadf994adb45ea", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3a2700f61bd54868e8572b18f3dadf994adb45ea", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3a2700f61bd54868e8572b18f3dadf994adb45ea", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3a2700f61bd54868e8572b18f3dadf994adb45ea/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "9e1c8fc1a54927723c8c67c87d0d29b205128dd4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9e1c8fc1a54927723c8c67c87d0d29b205128dd4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9e1c8fc1a54927723c8c67c87d0d29b205128dd4"}], "stats": {"total": 24, "additions": 24, "deletions": 0}, "files": [{"sha": "53d58b38d70facde62c5fb3b31cc6fad02fb3faf", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3a2700f61bd54868e8572b18f3dadf994adb45ea/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3a2700f61bd54868e8572b18f3dadf994adb45ea/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=3a2700f61bd54868e8572b18f3dadf994adb45ea", "patch": "@@ -1,3 +1,8 @@\n+2014-03-26  Richard Biener  <rguenther@suse.de>\n+\n+\t* tree-pretty-print.c (percent_K_format): Implement special\n+\tcase for LTO and its stripped down BLOCK tree.\n+\n 2014-03-26  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR sanitizer/60636"}, {"sha": "77446c5dd640f7b28a9362841ce431fec667d0e4", "filename": "gcc/tree-pretty-print.c", "status": "modified", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3a2700f61bd54868e8572b18f3dadf994adb45ea/gcc%2Ftree-pretty-print.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3a2700f61bd54868e8572b18f3dadf994adb45ea/gcc%2Ftree-pretty-print.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-pretty-print.c?ref=3a2700f61bd54868e8572b18f3dadf994adb45ea", "patch": "@@ -3365,6 +3365,25 @@ percent_K_format (text_info *text)\n   gcc_assert (pp_ti_abstract_origin (text) != NULL);\n   block = TREE_BLOCK (t);\n   *pp_ti_abstract_origin (text) = NULL;\n+\n+  if (in_lto_p)\n+    {\n+      /* ???  LTO drops all BLOCK_ABSTRACT_ORIGINs apart from those\n+         representing the outermost block of an inlined function.\n+\t So walk the BLOCK tree until we hit such a scope.  */\n+      while (block\n+\t     && TREE_CODE (block) == BLOCK)\n+\t{\n+\t  if (inlined_function_outer_scope_p (block))\n+\t    {\n+\t      *pp_ti_abstract_origin (text) = block;\n+\t      break;\n+\t    }\n+\t  block = BLOCK_SUPERCONTEXT (block);\n+\t}\n+      return;\n+    }\n+\n   while (block\n \t && TREE_CODE (block) == BLOCK\n \t && BLOCK_ABSTRACT_ORIGIN (block))"}]}