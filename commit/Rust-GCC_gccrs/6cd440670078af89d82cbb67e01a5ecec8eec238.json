{"sha": "6cd440670078af89d82cbb67e01a5ecec8eec238", "node_id": "C_kwDOANBUbNoAKDZjZDQ0MDY3MDA3OGFmODlkODJjYmI2N2UwMWE1ZWNlYzhlZWMyMzg", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2021-11-23T09:11:41Z"}, "committer": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2021-11-23T10:04:34Z"}, "message": "tree-optimization/103361 - fix unroll-and-jam direction vector handling\n\nThis properly uses lambda_int instead of truncating the direction\nvector to int which leads to false unexpected negative values.\n\n2021-11-23  Richard Biener  <rguenther@suse.de>\n\n\tPR tree-optimization/103361\n\t* gimple-loop-jam.c (adjust_unroll_factor): Use lambda_int\n\tfor the dependence distance.\n\t* tree-data-ref.c (print_lambda_vector): Properly print a lambda_int.\n\n\t* g++.dg/torture/pr103361.C: New testcase.", "tree": {"sha": "f9fdb1da2189db498f22bc8f21bd3bcbe1375bf6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f9fdb1da2189db498f22bc8f21bd3bcbe1375bf6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6cd440670078af89d82cbb67e01a5ecec8eec238", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6cd440670078af89d82cbb67e01a5ecec8eec238", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6cd440670078af89d82cbb67e01a5ecec8eec238", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6cd440670078af89d82cbb67e01a5ecec8eec238/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2780484bc376a89edb0c97b6b85209f4c27f34ee", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2780484bc376a89edb0c97b6b85209f4c27f34ee", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2780484bc376a89edb0c97b6b85209f4c27f34ee"}], "stats": {"total": 24, "additions": 21, "deletions": 3}, "files": [{"sha": "933a4e0e6b0e82b9694ba60fc09aa01728a2a68e", "filename": "gcc/gimple-loop-jam.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6cd440670078af89d82cbb67e01a5ecec8eec238/gcc%2Fgimple-loop-jam.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6cd440670078af89d82cbb67e01a5ecec8eec238/gcc%2Fgimple-loop-jam.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgimple-loop-jam.c?ref=6cd440670078af89d82cbb67e01a5ecec8eec238", "patch": "@@ -402,10 +402,10 @@ adjust_unroll_factor (class loop *inner, struct data_dependence_relation *ddr,\n \t     a >= N, or b > 0, or b is zero and a > 0.  Otherwise the unroll\n \t     factor needs to be limited so that the first condition holds.\n \t     That may limit the factor down to zero in the worst case.  */\n-\t  int dist = dist_v[0];\n+\t  lambda_int dist = dist_v[0];\n \t  if (dist < 0)\n \t    gcc_unreachable ();\n-\t  else if ((unsigned)dist >= *unroll)\n+\t  else if (dist >= (lambda_int)*unroll)\n \t    ;\n \t  else if (lambda_vector_zerop (dist_v + 1, DDR_NB_LOOPS (ddr) - 1))\n \t    {"}, {"sha": "ec1d6e1bae4251258defa9e13da00e39cd8388cc", "filename": "gcc/testsuite/g++.dg/torture/pr103361.C", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6cd440670078af89d82cbb67e01a5ecec8eec238/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftorture%2Fpr103361.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6cd440670078af89d82cbb67e01a5ecec8eec238/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftorture%2Fpr103361.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftorture%2Fpr103361.C?ref=6cd440670078af89d82cbb67e01a5ecec8eec238", "patch": "@@ -0,0 +1,18 @@\n+/* { dg-do compile } */\n+/* { dg-additional-options \"-floop-unroll-and-jam\" } */\n+\n+char a, b;\n+extern unsigned short c[];\n+extern bool d[];\n+const unsigned short &e(const unsigned short &f, const unsigned short &g) {\n+  if (g < f)\n+    return g;\n+  return f;\n+}\n+void k() {\n+  for (int h = 0; b; h += 3)\n+    for (unsigned long i = 0; i < 11104842004558084287ULL;\n+         i += -11104842004558084300ULL)\n+      for (bool j(e(6, e(6, c[h + i]))); j < (bool)a; j = 7)\n+        d[7] = 0;\n+}"}, {"sha": "9b6ca1a91e5330c247635178a95d6ac7435d2054", "filename": "gcc/tree-data-ref.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6cd440670078af89d82cbb67e01a5ecec8eec238/gcc%2Ftree-data-ref.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6cd440670078af89d82cbb67e01a5ecec8eec238/gcc%2Ftree-data-ref.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-data-ref.c?ref=6cd440670078af89d82cbb67e01a5ecec8eec238", "patch": "@@ -388,7 +388,7 @@ print_lambda_vector (FILE * outfile, lambda_vector vector, int n)\n   int i;\n \n   for (i = 0; i < n; i++)\n-    fprintf (outfile, \"%3d \", (int)vector[i]);\n+    fprintf (outfile, HOST_WIDE_INT_PRINT_DEC \" \", vector[i]);\n   fprintf (outfile, \"\\n\");\n }\n "}]}