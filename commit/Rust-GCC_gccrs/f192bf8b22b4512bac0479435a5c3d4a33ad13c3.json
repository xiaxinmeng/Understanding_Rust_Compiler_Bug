{"sha": "f192bf8b22b4512bac0479435a5c3d4a33ad13c3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjE5MmJmOGIyMmI0NTEyYmFjMDQ3OTQzNWE1YzNkNGEzM2FkMTNjMw==", "commit": {"author": {"name": "David Edelsohn", "email": "edelsohn@mhpcc.edu", "date": "1997-10-16T01:37:11Z"}, "committer": {"name": "Michael Meissner", "email": "meissner@gcc.gnu.org", "date": "1997-10-16T01:37:11Z"}, "message": "Add patch from Edelsohn\n\nFrom-SVN: r15918", "tree": {"sha": "36226246ee45525992a9355d9ad5b54d554409e5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/36226246ee45525992a9355d9ad5b54d554409e5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f192bf8b22b4512bac0479435a5c3d4a33ad13c3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f192bf8b22b4512bac0479435a5c3d4a33ad13c3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f192bf8b22b4512bac0479435a5c3d4a33ad13c3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f192bf8b22b4512bac0479435a5c3d4a33ad13c3/comments", "author": null, "committer": null, "parents": [{"sha": "2ea844d394a2f1cc1c4cbcb43dbaf068b8dbd9a6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2ea844d394a2f1cc1c4cbcb43dbaf068b8dbd9a6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2ea844d394a2f1cc1c4cbcb43dbaf068b8dbd9a6"}], "stats": {"total": 135, "additions": 116, "deletions": 19}, "files": [{"sha": "41fb7afa648b20f061a18a77e268f54f719a96e7", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f192bf8b22b4512bac0479435a5c3d4a33ad13c3/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f192bf8b22b4512bac0479435a5c3d4a33ad13c3/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=f192bf8b22b4512bac0479435a5c3d4a33ad13c3", "patch": "@@ -1,3 +1,10 @@\n+Wed Oct 15 21:34:45 1997  David Edelsohn  <edelsohn@mhpcc.edu>\n+\n+\t* rs6000.md (udivsi3, divsi3): Split into MQ and non-MQ cases for\n+\tPPC601.\n+\t(umulsidi3,umulsi3_highpart): Ditto.\n+\t(smulsi3_highpart_no_mq): Add !TARGET_POWER.\n+\n Wed Oct 15 18:21:46 1997  Richard Henderson  <rth@cygnus.com>\n \n \t* alpha.c (final_prescan_insn): Gut, remove and transform to ..."}, {"sha": "ce2435edc66af115db225883e337cebd1cc54bbc", "filename": "gcc/config/rs6000/rs6000.md", "status": "modified", "additions": 109, "deletions": 19, "changes": 128, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f192bf8b22b4512bac0479435a5c3d4a33ad13c3/gcc%2Fconfig%2Frs6000%2Frs6000.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f192bf8b22b4512bac0479435a5c3d4a33ad13c3/gcc%2Fconfig%2Frs6000%2Frs6000.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.md?ref=f192bf8b22b4512bac0479435a5c3d4a33ad13c3", "patch": "@@ -1388,14 +1388,6 @@\n   \"divs %0,%1,%2\"\n   [(set_attr \"type\" \"idiv\")])\n \n-(define_insn \"\"\n-  [(set (match_operand:SI 0 \"gpc_reg_operand\" \"=r\")\n-        (div:SI (match_operand:SI 1 \"gpc_reg_operand\" \"r\")\n-                (match_operand:SI 2 \"gpc_reg_operand\" \"r\")))]\n-  \"TARGET_POWERPC\"\n-  \"divw %0,%1,%2\"\n-  [(set_attr \"type\" \"idiv\")])\n-\n (define_expand \"udivsi3\"\n   [(set (match_operand:SI 0 \"gpc_reg_operand\" \"\")\n         (udiv:SI (match_operand:SI 1 \"gpc_reg_operand\" \"\")\n@@ -1411,13 +1403,27 @@\n       emit_move_insn (operands[0], gen_rtx (REG, SImode, 3));\n       DONE;\n     }\n+  else if (TARGET_POWER)\n+    {\n+      emit_insn (gen_udivsi3_mq (operands[0], operands[1], operands[2]));\n+      DONE;\n+    }\n }\")\n \n-(define_insn \"\"\n+(define_insn \"udivsi3_mq\"\n+  [(set (match_operand:SI 0 \"gpc_reg_operand\" \"=r\")\n+        (udiv:SI (match_operand:SI 1 \"gpc_reg_operand\" \"r\")\n+                 (match_operand:SI 2 \"gpc_reg_operand\" \"r\")))\n+   (clobber (match_scratch:SI 3 \"=q\"))]\n+  \"TARGET_POWERPC && TARGET_POWER\"\n+  \"divwu %0,%1,%2\"\n+  [(set_attr \"type\" \"idiv\")])\n+\n+(define_insn \"*udivsi3_no_mq\"\n   [(set (match_operand:SI 0 \"gpc_reg_operand\" \"=r\")\n         (udiv:SI (match_operand:SI 1 \"gpc_reg_operand\" \"r\")\n                  (match_operand:SI 2 \"gpc_reg_operand\" \"r\")))]\n-  \"TARGET_POWERPC\"\n+  \"TARGET_POWERPC && ! TARGET_POWER\"\n   \"divwu %0,%1,%2\"\n   [(set_attr \"type\" \"idiv\")])\n \n@@ -1436,7 +1442,14 @@\n       && exact_log2 (INTVAL (operands[2])) >= 0)\n     ;\n   else if (TARGET_POWERPC)\n-    operands[2] = force_reg (SImode, operands[2]);\n+    {\n+      operands[2] = force_reg (SImode, operands[2]);\n+      if (TARGET_POWER)\n+\t{\n+\t  emit_insn (gen_divsi3_mq (operands[0], operands[1], operands[2]));\n+\t  DONE;\n+\t}\n+    }\n   else if (TARGET_POWER)\n     FAIL;\n   else\n@@ -1449,6 +1462,23 @@\n     }\n }\")\n \n+(define_insn \"divsi3_mq\"\n+  [(set (match_operand:SI 0 \"gpc_reg_operand\" \"=r\")\n+        (div:SI (match_operand:SI 1 \"gpc_reg_operand\" \"r\")\n+                (match_operand:SI 2 \"gpc_reg_operand\" \"r\")))\n+   (clobber (match_scratch:SI 3 \"=q\"))]\n+  \"TARGET_POWERPC && TARGET_POWER\"\n+  \"divw %0,%1,%2\"\n+  [(set_attr \"type\" \"idiv\")])\n+\n+(define_insn \"*divsi3_no_mq\"\n+  [(set (match_operand:SI 0 \"gpc_reg_operand\" \"=r\")\n+        (div:SI (match_operand:SI 1 \"gpc_reg_operand\" \"r\")\n+                (match_operand:SI 2 \"gpc_reg_operand\" \"r\")))]\n+  \"TARGET_POWERPC && ! TARGET_POWER\"\n+  \"divw %0,%1,%2\"\n+  [(set_attr \"type\" \"idiv\")])\n+\n (define_expand \"modsi3\"\n   [(use (match_operand:SI 0 \"gpc_reg_operand\" \"\"))\n    (use (match_operand:SI 1 \"gpc_reg_operand\" \"\"))\n@@ -4020,11 +4050,11 @@\n   [(set_attr \"type\" \"imul\")\n    (set_attr \"length\" \"8\")])\n \n-(define_insn \"*mulsidi3_powerpc\"\n+(define_insn \"*mulsidi3_no_mq\"\n   [(set (match_operand:DI 0 \"gpc_reg_operand\" \"=&r\")\n \t(mult:DI (sign_extend:DI (match_operand:SI 1 \"gpc_reg_operand\" \"%r\"))\n \t\t (sign_extend:DI (match_operand:SI 2 \"gpc_reg_operand\" \"r\"))))]\n-  \"TARGET_POWERPC && ! TARGET_POWERPC64\"\n+  \"TARGET_POWERPC && ! TARGET_POWER && ! TARGET_POWERPC64\"\n   \"*\n {\n   return (WORDS_BIG_ENDIAN)\n@@ -4054,11 +4084,40 @@\n   operands[4] = operand_subword (operands[0], 1 - endian, 0, DImode);\n }\")\n \n-(define_insn \"umulsidi3\"\n+(define_expand \"umulsidi3\"\n+  [(set (match_operand:DI 0 \"gpc_reg_operand\" \"\")\n+\t(mult:DI (zero_extend:DI (match_operand:SI 1 \"gpc_reg_operand\" \"\"))\n+\t\t (zero_extend:DI (match_operand:SI 2 \"gpc_reg_operand\" \"\"))))]\n+  \"TARGET_POWERPC && ! TARGET_POWERPC64\"\n+  \"\n+{\n+  if (TARGET_POWER)\n+    {\n+      emit_insn (gen_umulsidi3_mq (operands[0], operands[1], operands[2]));\n+      DONE;\n+    }\n+}\")\n+\n+(define_insn \"umulsidi3_mq\"\n+  [(set (match_operand:DI 0 \"gpc_reg_operand\" \"=&r\")\n+\t(mult:DI (zero_extend:DI (match_operand:SI 1 \"gpc_reg_operand\" \"%r\"))\n+\t\t (zero_extend:DI (match_operand:SI 2 \"gpc_reg_operand\" \"r\"))))\n+   (clobber (match_scratch:SI 3 \"=q\"))]\n+  \"TARGET_POWERPC && TARGET_POWER\"\n+  \"*\n+{\n+  return (WORDS_BIG_ENDIAN)\n+    ? \\\"mulhwu %0,%1,%2\\;mullw %L0,%1,%2\\\"\n+    : \\\"mulhwu %L0,%1,%2\\;mullw %0,%1,%2\\\";\n+}\"\n+  [(set_attr \"type\" \"imul\")\n+   (set_attr \"length\" \"8\")])\n+\n+(define_insn \"*umulsidi3_no_mq\"\n   [(set (match_operand:DI 0 \"gpc_reg_operand\" \"=&r\")\n \t(mult:DI (zero_extend:DI (match_operand:SI 1 \"gpc_reg_operand\" \"%r\"))\n \t\t (zero_extend:DI (match_operand:SI 2 \"gpc_reg_operand\" \"r\"))))]\n-  \"TARGET_POWERPC && ! TARGET_POWERPC64\"\n+  \"TARGET_POWERPC && ! TARGET_POWER && ! TARGET_POWERPC64\"\n   \"*\n {\n   return (WORDS_BIG_ENDIAN)\n@@ -4127,27 +4186,58 @@\n   \"mul %0,%1,%2\"\n   [(set_attr \"type\" \"imul\")])\n \n-(define_insn \"\"\n+(define_insn \"*smulsi3_highpart_no_mq\"\n   [(set (match_operand:SI 0 \"gpc_reg_operand\" \"=r\")\n \t(truncate:SI\n \t (lshiftrt:DI (mult:DI (sign_extend:DI\n \t\t\t\t(match_operand:SI 1 \"gpc_reg_operand\" \"%r\"))\n \t\t\t       (sign_extend:DI\n \t\t\t\t(match_operand:SI 2 \"gpc_reg_operand\" \"r\")))\n \t\t      (const_int 32))))]\n-  \"TARGET_POWERPC\"\n+  \"TARGET_POWERPC && ! TARGET_POWER\"\n   \"mulhw %0,%1,%2\"\n   [(set_attr \"type\" \"imul\")])\n \n-(define_insn \"umulsi3_highpart\"\n+(define_expand \"umulsi3_highpart\"\n+  [(set (match_operand:SI 0 \"gpc_reg_operand\" \"\")\n+\t(truncate:SI\n+\t (lshiftrt:DI (mult:DI (zero_extend:DI\n+\t\t\t\t(match_operand:SI 1 \"gpc_reg_operand\" \"\"))\n+\t\t\t       (zero_extend:DI\n+\t\t\t\t(match_operand:SI 2 \"gpc_reg_operand\" \"\")))\n+\t\t      (const_int 32))))]\n+  \"TARGET_POWERPC\"\n+  \"\n+{\n+  if (TARGET_POWER)\n+    {\n+      emit_insn (gen_umulsi3_highpart_mq (operands[0], operands[1], operands[2]));\n+      DONE;\n+    }\n+}\")\n+\n+(define_insn \"umulsi3_highpart_mq\"\n+  [(set (match_operand:SI 0 \"gpc_reg_operand\" \"=r\")\n+\t(truncate:SI\n+\t (lshiftrt:DI (mult:DI (zero_extend:DI\n+\t\t\t\t(match_operand:SI 1 \"gpc_reg_operand\" \"%r\"))\n+\t\t\t       (zero_extend:DI\n+\t\t\t\t(match_operand:SI 2 \"gpc_reg_operand\" \"r\")))\n+\t\t      (const_int 32))))\n+   (clobber (match_scratch:SI 3 \"=q\"))]\n+  \"TARGET_POWERPC && TARGET_POWER\"\n+  \"mulhwu %0,%1,%2\"\n+  [(set_attr \"type\" \"imul\")])\n+\n+(define_insn \"*umulsi3_highpart_no_mq\"\n   [(set (match_operand:SI 0 \"gpc_reg_operand\" \"=r\")\n \t(truncate:SI\n \t (lshiftrt:DI (mult:DI (zero_extend:DI\n \t\t\t\t(match_operand:SI 1 \"gpc_reg_operand\" \"%r\"))\n \t\t\t       (zero_extend:DI\n \t\t\t\t(match_operand:SI 2 \"gpc_reg_operand\" \"r\")))\n \t\t      (const_int 32))))]\n-  \"TARGET_POWERPC\"\n+  \"TARGET_POWERPC && ! TARGET_POWER\"\n   \"mulhwu %0,%1,%2\"\n   [(set_attr \"type\" \"imul\")])\n "}]}