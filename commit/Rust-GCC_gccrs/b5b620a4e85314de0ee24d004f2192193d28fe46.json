{"sha": "b5b620a4e85314de0ee24d004f2192193d28fe46", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjViNjIwYTRlODUzMTRkZTBlZTI0ZDAwNGYyMTkyMTkzZDI4ZmU0Ng==", "commit": {"author": {"name": "Jason Thorpe", "email": "thorpej@wasabisystems.com", "date": "2002-09-05T16:54:57Z"}, "committer": {"name": "Jason Thorpe", "email": "thorpej@gcc.gnu.org", "date": "2002-09-05T16:54:57Z"}, "message": "real.c: Avoid parse error if FLOAT_WORDS_BIG_ENDIAN is not a compile-time constant for...\n\n* real.c: Avoid parse error if FLOAT_WORDS_BIG_ENDIAN is\nnot a compile-time constant for the non-IBM case.\n* config/arm/arm-protos.h (arm_float_words_big_endian): New\nprototype.\n* config/arm/arm.c (arm_float_words_big_endian): New function.\n* config/arm/arm.h (TARGET_CPU_CPP_BUILTINS): Define __VFP_FP__\nif TARGET_VFP  and not TARGET_HARD_FLOAT.\n(ARM_FLAG_VFP, TARGET_VFP): Define.\n(FLOAT_WORDS_BIG_ENDIAN): Use arm_float_words_big_endian.\n\n[ Missed arm.h in previous checkin, and pasto'd ChangeLog entry, which\n  is now corrected. ]\n\nFrom-SVN: r56857", "tree": {"sha": "1c364d52abcdcf105b4d9bc2b732f8c628cfa8c4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1c364d52abcdcf105b4d9bc2b732f8c628cfa8c4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b5b620a4e85314de0ee24d004f2192193d28fe46", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b5b620a4e85314de0ee24d004f2192193d28fe46", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b5b620a4e85314de0ee24d004f2192193d28fe46", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b5b620a4e85314de0ee24d004f2192193d28fe46/comments", "author": null, "committer": null, "parents": [{"sha": "dd19d1423e0078f59f5836b5efdfe081545fcdd1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dd19d1423e0078f59f5836b5efdfe081545fcdd1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/dd19d1423e0078f59f5836b5efdfe081545fcdd1"}], "stats": {"total": 18, "additions": 14, "deletions": 4}, "files": [{"sha": "a3ec8a0d4a2c4aadbd51d3c140517e47e8eb1259", "filename": "gcc/ChangeLog", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b5b620a4e85314de0ee24d004f2192193d28fe46/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b5b620a4e85314de0ee24d004f2192193d28fe46/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=b5b620a4e85314de0ee24d004f2192193d28fe46", "patch": "@@ -10,8 +10,8 @@\n \t* config/arm/arm-protos.h (arm_float_words_big_endian): New\n \tprototype. \n \t* config/arm/arm.c (arm_float_words_big_endian): New function.\n-\t(TARGET_CPU_CPP_BUILTINS): Define __VFP_FP__ if TARGET_VFP  \n-\tand not TARGET_HARD_FLOAT. \n+\t* config/arm/arm.h (TARGET_CPU_CPP_BUILTINS): Define __VFP_FP__\n+\tif TARGET_VFP  and not TARGET_HARD_FLOAT. \n \t(ARM_FLAG_VFP, TARGET_VFP): Define. \n \t(FLOAT_WORDS_BIG_ENDIAN): Use arm_float_words_big_endian.\n "}, {"sha": "58654729884bac4e2c14cdf8559d010ebb7b72b3", "filename": "gcc/config/arm/arm.h", "status": "modified", "additions": 12, "deletions": 2, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b5b620a4e85314de0ee24d004f2192193d28fe46/gcc%2Fconfig%2Farm%2Farm.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b5b620a4e85314de0ee24d004f2192193d28fe46/gcc%2Fconfig%2Farm%2Farm.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm.h?ref=b5b620a4e85314de0ee24d004f2192193d28fe46", "patch": "@@ -58,6 +58,11 @@ Boston, MA 02111-1307, USA.  */\n \tif (TARGET_SOFT_FLOAT)\t\t\t\t\\\n \t  builtin_define (\"__SOFTFP__\");\t\t\\\n \t\t\t\t\t\t\t\\\n+\t/* FIXME: TARGET_HARD_FLOAT currently implies\t\\\n+\t   FPA.  */\t\t\t\t\t\\\n+\tif (TARGET_VFP && !TARGET_HARD_FLOAT)\t\t\\\n+\t  builtin_define (\"__VFP_FP__\");\t\t\\\n+\t\t\t\t\t\t\t\\\n \t/* Add a define for interworking.\t\t\\\n \t   Needed when building libgcc.a.  */\t\t\\\n \tif (TARGET_INTERWORK)\t\t\t\t\\\n@@ -365,6 +370,9 @@ Unrecognized value in TARGET_CPU_DEFAULT.\n    destination is non-Thumb aware.  */\n #define THUMB_FLAG_CALLER_SUPER_INTERWORKING\t(1 << 20)\n \n+/* Nonzero means target uses VFP FP.  */\n+#define ARM_FLAG_VFP\t\t(1 << 21)\n+\n #define TARGET_APCS_FRAME\t\t(target_flags & ARM_FLAG_APCS_FRAME)\n #define TARGET_POKE_FUNCTION_NAME\t(target_flags & ARM_FLAG_POKE)\n #define TARGET_FPE\t\t\t(target_flags & ARM_FLAG_FPE)\n@@ -375,6 +383,7 @@ Unrecognized value in TARGET_CPU_DEFAULT.\n #define TARGET_MMU_TRAPS\t\t(target_flags & ARM_FLAG_MMU_TRAPS)\n #define TARGET_SOFT_FLOAT\t\t(target_flags & ARM_FLAG_SOFT_FLOAT)\n #define TARGET_HARD_FLOAT\t\t(! TARGET_SOFT_FLOAT)\n+#define TARGET_VFP\t\t\t(target_flags & ARM_FLAG_VFP)\n #define TARGET_BIG_END\t\t\t(target_flags & ARM_FLAG_BIG_END)\n #define TARGET_INTERWORK\t\t(target_flags & ARM_FLAG_INTERWORK)\n #define TARGET_LITTLE_WORDS\t\t(target_flags & ARM_FLAG_LITTLE_WORDS)\n@@ -666,8 +675,9 @@ extern int arm_is_6_or_7;\n #endif\n \n /* Define this if most significant word of doubles is the lowest numbered.\n-   This is always true, even when in little-endian mode.  */\n-#define FLOAT_WORDS_BIG_ENDIAN 1\n+   The rules are different based on whether or not we use FPA-format or\n+   VFP-format doubles.  */\n+#define FLOAT_WORDS_BIG_ENDIAN (arm_float_words_big_endian ())\n \n #define UNITS_PER_WORD\t4\n "}]}