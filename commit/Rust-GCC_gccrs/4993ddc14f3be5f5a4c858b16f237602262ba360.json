{"sha": "4993ddc14f3be5f5a4c858b16f237602262ba360", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDk5M2RkYzE0ZjNiZTVmNWE0Yzg1OGIxNmYyMzc2MDIyNjJiYTM2MA==", "commit": {"author": {"name": "Andreas Schwab", "email": "schwab@suse.de", "date": "2000-09-04T16:04:48Z"}, "committer": {"name": "Andreas Schwab", "email": "schwab@gcc.gnu.org", "date": "2000-09-04T16:04:48Z"}, "message": "Makefile.in (STAGESTUFF): Remove libgcc.\n\n* Makefile.in (STAGESTUFF): Remove libgcc.\n(stage1-start, stage2-start, stage3-start): Copy the contents of\nthe libgcc directory explicitly.\n(mostlyclean): Clean libgcc.\n\nFrom-SVN: r36139", "tree": {"sha": "29f8829a9fbb9da252b2cb52f539f798d25a2bee", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/29f8829a9fbb9da252b2cb52f539f798d25a2bee"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4993ddc14f3be5f5a4c858b16f237602262ba360", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4993ddc14f3be5f5a4c858b16f237602262ba360", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4993ddc14f3be5f5a4c858b16f237602262ba360", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4993ddc14f3be5f5a4c858b16f237602262ba360/comments", "author": {"login": "andreas-schwab", "id": 2175493, "node_id": "MDQ6VXNlcjIxNzU0OTM=", "avatar_url": "https://avatars.githubusercontent.com/u/2175493?v=4", "gravatar_id": "", "url": "https://api.github.com/users/andreas-schwab", "html_url": "https://github.com/andreas-schwab", "followers_url": "https://api.github.com/users/andreas-schwab/followers", "following_url": "https://api.github.com/users/andreas-schwab/following{/other_user}", "gists_url": "https://api.github.com/users/andreas-schwab/gists{/gist_id}", "starred_url": "https://api.github.com/users/andreas-schwab/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/andreas-schwab/subscriptions", "organizations_url": "https://api.github.com/users/andreas-schwab/orgs", "repos_url": "https://api.github.com/users/andreas-schwab/repos", "events_url": "https://api.github.com/users/andreas-schwab/events{/privacy}", "received_events_url": "https://api.github.com/users/andreas-schwab/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "5e640c56de32e17c7a6677ad4c06d8dda4f4bbff", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5e640c56de32e17c7a6677ad4c06d8dda4f4bbff", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5e640c56de32e17c7a6677ad4c06d8dda4f4bbff"}], "stats": {"total": 22, "additions": 17, "deletions": 5}, "files": [{"sha": "535d698a08dd612276489906a44b9884b48c9e0c", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4993ddc14f3be5f5a4c858b16f237602262ba360/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4993ddc14f3be5f5a4c858b16f237602262ba360/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=4993ddc14f3be5f5a4c858b16f237602262ba360", "patch": "@@ -1,3 +1,10 @@\n+2000-09-04  Andreas Schwab  <schwab@suse.de>\n+\n+\t* Makefile.in (STAGESTUFF): Remove libgcc.\n+\t(stage1-start, stage2-start, stage3-start): Copy the contents of\n+\tthe libgcc directory explicitly.\n+\t(mostlyclean): Clean libgcc.\n+\n 2000-09-04  Andrew Haley  <aph@redhat.com>\n \n \t* dwarf2out.c: (stack_adjust_offset): New prototype."}, {"sha": "5cfabc89b86dc899ecbba444d2913cea7cc2004e", "filename": "gcc/Makefile.in", "status": "modified", "additions": 10, "deletions": 5, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4993ddc14f3be5f5a4c858b16f237602262ba360/gcc%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4993ddc14f3be5f5a4c858b16f237602262ba360/gcc%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FMakefile.in?ref=4993ddc14f3be5f5a4c858b16f237602262ba360", "patch": "@@ -725,7 +725,7 @@ STAGESTUFF = *$(objext) insn-flags.h insn-config.h insn-codes.h \\\n  $(EXTRA_PARTS) $(EXTRA_PROGRAMS) gcc-cross$(exeext) cc1obj$(exeext) \\\n  enquire$(exeext) protoize$(exeext) unprotoize$(exeext) \\\n  specs collect2$(exeext) $(USE_COLLECT2) underscore.c tradcpp0$(exeext) \\\n- gcov$(exeext) *.[0-9][0-9].* *.[si] libcpp.a libbackend.a libgcc libgcc.mk \\\n+ gcov$(exeext) *.[0-9][0-9].* *.[si] libcpp.a libbackend.a libgcc.mk \\\n  $(LANG_STAGESTUFF)\n \n # Members of libgcc1.a.\n@@ -2134,6 +2134,7 @@ INSTALL: $(srcdir)/install1.texi $(srcdir)/install.texi\n INTL_MOSTLYCLEAN = intl.mostlyclean\n mostlyclean: $(INTL_MOSTLYCLEAN) lang.mostlyclean\n \t-rm -f $(STAGESTUFF)\n+\t-rm -rf libgcc\n # Delete the temporary source copies for cross compilation.\n \t-rm -f $(HOST_PREFIX_1)rtl.c $(HOST_PREFIX_1)rtlanal.c\n \t-rm -f $(HOST_PREFIX_1)alloca.c $(HOST_PREFIX_1)malloc.c\n@@ -2861,12 +2862,13 @@ gnucompare gnucompare3 gnucompare4 gnucompare-lean gnucompare3-lean gnucompare4-\n # Copy the object files from a particular stage into a subdirectory.\n stage1-start:\n \t-if [ -d stage1 ] ; then true ; else mkdir stage1 ; fi\n-\t-for dir in intl $(SUBDIRS) ; \\\n+\t-for dir in intl libgcc $(SUBDIRS) ; \\\n \t do \\\n \t   if [ -d stage1/$$dir ] ; then true ; else mkdir stage1/$$dir ; fi ; \\\n \t done\n \t-mv $(STAGESTUFF) stage1\n \t-mv intl/*$(objext) stage1/intl\n+\t-mv libgcc/*$(objext) stage1/libgcc\n # Copy as/ld if they exist to stage dir, so that running xgcc from the stage\n # dir will work properly.\n \t-if [ -f as$(exeext) ] ; then $(LN_S) ../as$(exeext) stage1 ; else true ; fi\n@@ -2885,12 +2887,13 @@ stage1: force stage1-start lang.stage1\n \n stage2-start:\n \t-if [ -d stage2 ] ; then true ; else mkdir stage2 ; fi\n-\t-for dir in intl $(SUBDIRS) ; \\\n+\t-for dir in intl libgcc $(SUBDIRS) ; \\\n \t do \\\n \t   if [ -d stage2/$$dir ] ; then true ; else mkdir stage2/$$dir ; fi ; \\\n \t done\n \t-mv $(STAGESTUFF) stage2\n \t-mv intl/*$(objext) stage2/intl\n+\t-mv libgcc/*$(objext) stage2/libgcc\n # Copy as/ld if they exist to stage dir, so that running xgcc from the stage\n # dir will work properly.\n \t-if [ -f as$(exeext) ] ; then $(LN_S) ../as$(exeext) stage2 ; else true ; fi\n@@ -2909,12 +2912,13 @@ stage2: force stage2-start lang.stage2\n \n stage3-start:\n \t-if [ -d stage3 ] ; then true ; else mkdir stage3 ; fi\n-\t-for dir in intl $(SUBDIRS) ; \\\n+\t-for dir in intl libgcc $(SUBDIRS) ; \\\n \t do \\\n \t   if [ -d stage3/$$dir ] ; then true ; else mkdir stage3/$$dir ; fi ; \\\n \t done\n \t-mv $(STAGESTUFF) stage3\n \t-mv intl/*$(objext) stage3/intl\n+\t-mv libgcc/*$(objext) stage3/libgcc\n # Copy as/ld if they exist to stage dir, so that running xgcc from the stage\n # dir will work properly.\n \t-if [ -f as$(exeext) ] ; then $(LN_S) ../as$(exeext) stage3 ; else true ; fi\n@@ -2933,12 +2937,13 @@ stage3: force stage3-start lang.stage3\n \n stage4-start:\n \t-if [ -d stage4 ] ; then true ; else mkdir stage4 ; fi\n-\t-for dir in intl $(SUBDIRS) ; \\\n+\t-for dir in intl libgcc $(SUBDIRS) ; \\\n \t do \\\n \t   if [ -d stage4/$$dir ] ; then true ; else mkdir stage4/$$dir ; fi ; \\\n \t done\n \t-mv $(STAGESTUFF) stage4\n \t-mv intl/*$(objext) stage4/intl\n+\t-mv libgcc/*$(objext) stage4/libgcc\n # Copy as/ld if they exist to stage dir, so that running xgcc from the stage\n # dir will work properly.\n \t-if [ -f as$(exeext) ] ; then $(LN_S) ../as$(exeext) stage4 ; else true ; fi"}]}