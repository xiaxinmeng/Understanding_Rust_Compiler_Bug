{"sha": "a26891f4f59a90038cab4067a06553d362c46de7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTI2ODkxZjRmNTlhOTAwMzhjYWI0MDY3YTA2NTUzZDM2MmM0NmRlNw==", "commit": {"author": {"name": "Vladimir Makarov", "email": "vmakarov@redhat.com", "date": "2013-10-30T15:04:39Z"}, "committer": {"name": "Vladimir Makarov", "email": "vmakarov@gcc.gnu.org", "date": "2013-10-30T15:04:39Z"}, "message": "re PR target/58784 ([ARM] LRA legitimate address issue with misalign neon_store)\n\n2013-10-30  Vladimir Makarov  <vmakarov@redhat.com>\n\n\tPR target/58784\n\t* lra.c (check_rtl): Remove address check before LRA work.\n\n2013-10-30  Vladimir Makarov  <vmakarov@redhat.com>\n\n\tPR target/58784\n\t* gcc.target/arm/pr58784.c: New.\n\nFrom-SVN: r204215", "tree": {"sha": "24232735fcd2223285a3411bc15f36b4c678ddd3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/24232735fcd2223285a3411bc15f36b4c678ddd3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a26891f4f59a90038cab4067a06553d362c46de7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a26891f4f59a90038cab4067a06553d362c46de7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a26891f4f59a90038cab4067a06553d362c46de7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a26891f4f59a90038cab4067a06553d362c46de7/comments", "author": {"login": "vnmakarov", "id": 9855671, "node_id": "MDQ6VXNlcjk4NTU2NzE=", "avatar_url": "https://avatars.githubusercontent.com/u/9855671?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vnmakarov", "html_url": "https://github.com/vnmakarov", "followers_url": "https://api.github.com/users/vnmakarov/followers", "following_url": "https://api.github.com/users/vnmakarov/following{/other_user}", "gists_url": "https://api.github.com/users/vnmakarov/gists{/gist_id}", "starred_url": "https://api.github.com/users/vnmakarov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vnmakarov/subscriptions", "organizations_url": "https://api.github.com/users/vnmakarov/orgs", "repos_url": "https://api.github.com/users/vnmakarov/repos", "events_url": "https://api.github.com/users/vnmakarov/events{/privacy}", "received_events_url": "https://api.github.com/users/vnmakarov/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "6ecb8b21c8dfe19fa43fca0d534c80991d0c2ccc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6ecb8b21c8dfe19fa43fca0d534c80991d0c2ccc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6ecb8b21c8dfe19fa43fca0d534c80991d0c2ccc"}], "stats": {"total": 58, "additions": 33, "deletions": 25}, "files": [{"sha": "9e96d84378a9e73bbd5cc04bc941e2085fba130b", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a26891f4f59a90038cab4067a06553d362c46de7/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a26891f4f59a90038cab4067a06553d362c46de7/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=a26891f4f59a90038cab4067a06553d362c46de7", "patch": "@@ -1,3 +1,8 @@\n+2013-10-30  Vladimir Makarov  <vmakarov@redhat.com>\n+\n+\tPR target/58784\n+\t* lra.c (check_rtl): Remove address check before LRA work.\n+\n 2013-10-30  Marc Glisse  <marc.glisse@inria.fr>\n \n \t* tree-ssa-alias.c (ao_ref_init_from_ptr_and_size): Look for a"}, {"sha": "1aea599a2e550824f0b1e88ebc3700d4376a7c26", "filename": "gcc/lra.c", "status": "modified", "additions": 5, "deletions": 25, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a26891f4f59a90038cab4067a06553d362c46de7/gcc%2Flra.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a26891f4f59a90038cab4067a06553d362c46de7/gcc%2Flra.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flra.c?ref=a26891f4f59a90038cab4067a06553d362c46de7", "patch": "@@ -2017,10 +2017,8 @@ restore_scratches (void)\n static void\n check_rtl (bool final_p)\n {\n-  int i;\n   basic_block bb;\n   rtx insn;\n-  lra_insn_recog_data_t id;\n \n   lra_assert (! final_p || reload_completed);\n   FOR_EACH_BB (bb)\n@@ -2036,31 +2034,13 @@ check_rtl (bool final_p)\n \t    lra_assert (constrain_operands (1));\n \t    continue;\n \t  }\n+\t/* LRA code is based on assumption that all addresses can be\n+\t   correctly decomposed.  LRA can generate reloads for\n+\t   decomposable addresses.  The decomposition code checks the\n+\t   correctness of the addresses.  So we don't need to check\n+\t   the addresses here.  */\n \tif (insn_invalid_p (insn, false))\n \t  fatal_insn_not_found (insn);\n-\tif (asm_noperands (PATTERN (insn)) >= 0)\n-\t  continue;\n-\tid = lra_get_insn_recog_data (insn);\n-\t/* The code is based on assumption that all addresses in\n-\t   regular instruction are legitimate before LRA.  The code in\n-\t   lra-constraints.c is based on assumption that there is no\n-\t   subreg of memory as an insn operand.\t */\n-\tfor (i = 0; i < id->insn_static_data->n_operands; i++)\n-\t  {\n-\t    rtx op = *id->operand_loc[i];\n-\n-\t    if (MEM_P (op)\n-\t\t&& (GET_MODE (op) != BLKmode\n-\t\t    || GET_CODE (XEXP (op, 0)) != SCRATCH)\n-\t\t&& ! memory_address_p (GET_MODE (op), XEXP (op, 0))\n-\t\t/* Some ports don't recognize the following addresses\n-\t\t   as legitimate.  Although they are legitimate if\n-\t\t   they satisfies the constraints and will be checked\n-\t\t   by insn constraints which we ignore here.  */\n-\t\t&& GET_CODE (XEXP (op, 0)) != UNSPEC\n-\t\t&& GET_RTX_CLASS (GET_CODE (XEXP (op, 0))) != RTX_AUTOINC)\n-\t      fatal_insn_not_found (insn);\n-\t  }\n       }\n }\n #endif /* #ifdef ENABLE_CHECKING */"}, {"sha": "3fd4591b2093c99bf5b44b8a6ebfb61b11215341", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a26891f4f59a90038cab4067a06553d362c46de7/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a26891f4f59a90038cab4067a06553d362c46de7/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=a26891f4f59a90038cab4067a06553d362c46de7", "patch": "@@ -1,3 +1,8 @@\n+2013-10-30  Vladimir Makarov  <vmakarov@redhat.com>\n+\n+\tPR target/58784\n+\t* gcc.target/arm/pr58784.c: New.\n+\n 2013-10-30  Marc Glisse  <marc.glisse@inria.fr>\n \n \t* gcc.dg/tree-ssa/alias-24.c: New file."}, {"sha": "e3ef950b499533a28e8032ef1b39d2238cff6f0b", "filename": "gcc/testsuite/gcc.target/arm/pr58784.c", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a26891f4f59a90038cab4067a06553d362c46de7/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fpr58784.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a26891f4f59a90038cab4067a06553d362c46de7/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fpr58784.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fpr58784.c?ref=a26891f4f59a90038cab4067a06553d362c46de7", "patch": "@@ -0,0 +1,18 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=armv7-a -mfloat-abi=hard -mfpu=neon -marm -O2\" } */\n+\n+typedef struct __attribute__ ((__packed__))\n+{\n+    char valueField[2];\n+} ptp_tlv_t;\n+typedef struct __attribute__ ((__packed__))\n+{\n+    char stepsRemoved;\n+    ptp_tlv_t tlv[1];\n+} ptp_message_announce_t;\n+int ptplib_send_announce(int sequenceId, int i)\n+{\n+    ptp_message_announce_t tx_packet;\n+    ((long long *)tx_packet.tlv[0].valueField)[sequenceId] = i;\n+    f(&tx_packet);\n+}"}]}