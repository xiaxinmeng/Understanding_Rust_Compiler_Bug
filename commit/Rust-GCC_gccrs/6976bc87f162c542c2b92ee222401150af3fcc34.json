{"sha": "6976bc87f162c542c2b92ee222401150af3fcc34", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Njk3NmJjODdmMTYyYzU0MmMyYjkyZWUyMjI0MDExNTBhZjNmY2MzNA==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@adacore.com", "date": "2019-01-08T19:09:52Z"}, "committer": {"name": "Eric Botcazou", "email": "ebotcazou@gcc.gnu.org", "date": "2019-01-08T19:09:52Z"}, "message": "re PR bootstrap/88721 (-Wmaybe-uninitialized warnings in sparc.c)\n\n\tPR bootstrap/88721\n\t* config/sparc/sparc.c (function_arg_slotno): Set *PPREGNO & *PPADDING\n\tto -1 on entry.\n\n\tPR debug/88723\n\t* config/sparc/sparc.c (sparc_delegitimize_address): Deal with naked\n\tUNSPECs and UNSPEC_MOVE_GOTDATA specifically.\n\nFrom-SVN: r267734", "tree": {"sha": "efa30928e9dbfef2ed18559f1d0b8c370c3d851e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/efa30928e9dbfef2ed18559f1d0b8c370c3d851e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6976bc87f162c542c2b92ee222401150af3fcc34", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6976bc87f162c542c2b92ee222401150af3fcc34", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6976bc87f162c542c2b92ee222401150af3fcc34", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6976bc87f162c542c2b92ee222401150af3fcc34/comments", "author": null, "committer": null, "parents": [{"sha": "53ef4e3a942fc5848690dbf36e67c8c68f7fbae4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/53ef4e3a942fc5848690dbf36e67c8c68f7fbae4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/53ef4e3a942fc5848690dbf36e67c8c68f7fbae4"}], "stats": {"total": 27, "additions": 24, "deletions": 3}, "files": [{"sha": "18dab7e686470768e49936aae087b574e727bbfa", "filename": "gcc/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6976bc87f162c542c2b92ee222401150af3fcc34/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6976bc87f162c542c2b92ee222401150af3fcc34/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=6976bc87f162c542c2b92ee222401150af3fcc34", "patch": "@@ -1,3 +1,13 @@\n+2019-01-08  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\tPR bootstrap/88721\n+\t* config/sparc/sparc.c (function_arg_slotno): Set *PPREGNO & *PPADDING\n+\tto -1 on entry.\n+\n+\tPR debug/88723\n+\t* config/sparc/sparc.c (sparc_delegitimize_address): Deal with naked\n+\tUNSPECs and UNSPEC_MOVE_GOTDATA specifically.\n+\n 2019-01-08  H.J. Lu  <hongjiu.lu@intel.com>\n \n \tPR target/88717"}, {"sha": "62644e0a7da352788b51b90b3feb4e602b9e7cfd", "filename": "gcc/config/sparc/sparc.c", "status": "modified", "additions": 14, "deletions": 3, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6976bc87f162c542c2b92ee222401150af3fcc34/gcc%2Fconfig%2Fsparc%2Fsparc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6976bc87f162c542c2b92ee222401150af3fcc34/gcc%2Fconfig%2Fsparc%2Fsparc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsparc%2Fsparc.c?ref=6976bc87f162c542c2b92ee222401150af3fcc34", "patch": "@@ -4949,12 +4949,19 @@ sparc_delegitimize_address (rtx x)\n {\n   x = delegitimize_mem_from_attrs (x);\n \n-  if (GET_CODE (x) == LO_SUM && GET_CODE (XEXP (x, 1)) == UNSPEC)\n-    switch (XINT (XEXP (x, 1), 1))\n+  if (GET_CODE (x) == LO_SUM)\n+    x = XEXP (x, 1);\n+\n+  if (GET_CODE (x) == UNSPEC)\n+    switch (XINT (x, 1))\n       {\n       case UNSPEC_MOVE_PIC:\n       case UNSPEC_TLSLE:\n-\tx = XVECEXP (XEXP (x, 1), 0, 0);\n+\tx = XVECEXP (x, 0, 0);\n+\tgcc_assert (GET_CODE (x) == SYMBOL_REF);\n+\tbreak;\n+      case UNSPEC_MOVE_GOTDATA:\n+\tx = XVECEXP (x, 0, 2);\n \tgcc_assert (GET_CODE (x) == SYMBOL_REF);\n \tbreak;\n       default:\n@@ -6873,6 +6880,10 @@ function_arg_slotno (const struct sparc_args *cum, machine_mode mode,\n   int slotno = cum->words, regno;\n   enum mode_class mclass = GET_MODE_CLASS (mode);\n \n+  /* Silence warnings in the callers.  */\n+  *pregno = -1;\n+  *ppadding = -1;\n+\n   if (type && TREE_ADDRESSABLE (type))\n     return -1;\n "}]}