{"sha": "6b4f890601a9bb1ff803cef04ee5779d49befb97", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmI0Zjg5MDYwMWE5YmIxZmY4MDNjZWYwNGVlNTc3OWQ0OWJlZmI5Nw==", "commit": {"author": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2015-12-10T14:02:52Z"}, "committer": {"name": "Jonathan Wakely", "email": "redi@gcc.gnu.org", "date": "2015-12-10T14:02:52Z"}, "message": "Improve generated libstdc++ API docs\n\n\t* doc/doxygen/user.cfg.in: Use EXTENSION_MAPPING tag. Add new headers\n\tto INPUT. Remove obsolete XML_SCHEMA and XML_DTD tags. Update\n\tPREDEFINED macros. Set BRIEF_MEMBER_DESC for man-pages.\n\t* include/backward/strstream: Correct @file comment.\n\t* include/bits/forward_list.h: Improve Doxygen comments.\n\t* include/bits/locale_facets_nonio.h: Likewise.\n\t* include/bits/mutex.h: Likewise.\n\t* include/bits/shared_ptr.h: Likewise.\n\t* include/bits/stl_deque.h: Likewise.\n\t* include/debug/vector (_Safe_vector): Add @brief section to comment.\n\t* include/experimental/bits/fs_dir.h: Correct @file comment.\n\t* include/experimental/bits/fs_fwd.h: Likewise.\n\t* include/experimental/bits/fs_ops.h: Likewise.\n\t* include/experimental/bits/fs_path.h: Likewise.\n\t* include/experimental/bits/string_view.tcc: Likewise.\n\t* include/experimental/optional: Document experimental status.\n\t* include/experimental/string_view: Correct @file comment.\n\t* include/ext/pb_ds/detail/bin_search_tree_/traits.hpp: Reduce\n\twhitespace to avoid Doxygen bug.\n\t* include/std/bitset: Remove redundant @class Doxygen command. Add\n\tparentheses to avoid Doxygen bug.\n\t* include/std/mutex: Improve Doxygen comments.\n\t* include/tr2/dynamic_bitset: Add missing @param documentation.\n\t* scripts/run_doxygen: Rename man pages for std::experimental types.\n\nFrom-SVN: r231512", "tree": {"sha": "ac122f86f252fd15ce4b4d8d29c7caac475d1c34", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ac122f86f252fd15ce4b4d8d29c7caac475d1c34"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6b4f890601a9bb1ff803cef04ee5779d49befb97", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6b4f890601a9bb1ff803cef04ee5779d49befb97", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6b4f890601a9bb1ff803cef04ee5779d49befb97", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6b4f890601a9bb1ff803cef04ee5779d49befb97/comments", "author": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2ade427a371fae5c7b2138cde1d33d6bcbb64bcf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2ade427a371fae5c7b2138cde1d33d6bcbb64bcf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2ade427a371fae5c7b2138cde1d33d6bcbb64bcf"}], "stats": {"total": 192, "additions": 140, "deletions": 52}, "files": [{"sha": "c46aede2f46ac7151ce3028d05230941e4f039df", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6b4f890601a9bb1ff803cef04ee5779d49befb97/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6b4f890601a9bb1ff803cef04ee5779d49befb97/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=6b4f890601a9bb1ff803cef04ee5779d49befb97", "patch": "@@ -1,3 +1,30 @@\n+2015-12-10  Jonathan Wakely  <jwakely@redhat.com>\n+\n+\t* doc/doxygen/user.cfg.in: Use EXTENSION_MAPPING tag. Add new headers\n+\tto INPUT. Remove obsolete XML_SCHEMA and XML_DTD tags. Update\n+\tPREDEFINED macros. Set BRIEF_MEMBER_DESC for man-pages.\n+\t* include/backward/strstream: Correct @file comment.\n+\t* include/bits/forward_list.h: Improve Doxygen comments.\n+\t* include/bits/locale_facets_nonio.h: Likewise.\n+\t* include/bits/mutex.h: Likewise.\n+\t* include/bits/shared_ptr.h: Likewise.\n+\t* include/bits/stl_deque.h: Likewise.\n+\t* include/debug/vector (_Safe_vector): Add @brief section to comment.\n+\t* include/experimental/bits/fs_dir.h: Correct @file comment.\n+\t* include/experimental/bits/fs_fwd.h: Likewise.\n+\t* include/experimental/bits/fs_ops.h: Likewise.\n+\t* include/experimental/bits/fs_path.h: Likewise.\n+\t* include/experimental/bits/string_view.tcc: Likewise.\n+\t* include/experimental/optional: Document experimental status.\n+\t* include/experimental/string_view: Correct @file comment.\n+\t* include/ext/pb_ds/detail/bin_search_tree_/traits.hpp: Reduce\n+\twhitespace to avoid Doxygen bug.\n+\t* include/std/bitset: Remove redundant @class Doxygen command. Add\n+\tparentheses to avoid Doxygen bug.\n+\t* include/std/mutex: Improve Doxygen comments.\n+\t* include/tr2/dynamic_bitset: Add missing @param documentation.\n+\t* scripts/run_doxygen: Rename man pages for std::experimental types.\n+\n 2015-12-04  Jonathan Wakely  <jwakely@redhat.com>\n \n \tPR libstdc++/57060"}, {"sha": "a62eeffa393caf614ec87cffe64b8732bfbb9a3e", "filename": "libstdc++-v3/doc/doxygen/user.cfg.in", "status": "modified", "additions": 38, "deletions": 16, "changes": 54, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6b4f890601a9bb1ff803cef04ee5779d49befb97/libstdc%2B%2B-v3%2Fdoc%2Fdoxygen%2Fuser.cfg.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6b4f890601a9bb1ff803cef04ee5779d49befb97/libstdc%2B%2B-v3%2Fdoc%2Fdoxygen%2Fuser.cfg.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fdoxygen%2Fuser.cfg.in?ref=6b4f890601a9bb1ff803cef04ee5779d49befb97", "patch": "@@ -90,7 +90,7 @@ OUTPUT_LANGUAGE        = English\n # documentation (similar to Javadoc). Set to NO to disable this.\n # The default value is: YES.\n \n-BRIEF_MEMBER_DESC      = NO\n+BRIEF_MEMBER_DESC      = @do_man@\n \n # If the REPEAT_BRIEF tag is set to YES doxygen will prepend the brief\n # description of a member or function before the detailed description\n@@ -272,7 +272,7 @@ OPTIMIZE_OUTPUT_VHDL   = NO\n # Note that for custom extensions you also need to set FILE_PATTERNS otherwise\n # the files are not read by doxygen.\n \n-EXTENSION_MAPPING      =\n+EXTENSION_MAPPING      = no_extension=C++ .h=C++ .tcc=C++ .hpp=C++\n \n # If the MARKDOWN_SUPPORT tag is enabled then doxygen pre-processes all comments\n # according to the Markdown format, which allows for more readable\n@@ -757,6 +757,7 @@ INPUT                  = @srcdir@/doc/doxygen/doxygroups.cc \\\n                          include/bitset \\\n                          include/chrono \\\n                          include/complex \\\n+                         include/codecvt \\\n                          include/condition_variable \\\n                          include/deque \\\n                          include/forward_list \\\n@@ -812,6 +813,7 @@ INPUT                  = @srcdir@/doc/doxygen/doxygroups.cc \\\n                          include/cmath \\\n                          include/csetjmp \\\n                          include/csignal \\\n+                         include/cstdalign \\\n                          include/cstdarg \\\n                          include/cstdbool \\\n                          include/cstddef \\\n@@ -822,6 +824,7 @@ INPUT                  = @srcdir@/doc/doxygen/doxygroups.cc \\\n                          include/ctgmath \\\n                          include/ctime \\\n                          include/cwchar \\\n+                         include/cuchar \\\n                          include/cwctype \\\n                          include/ \\\n                          include/bits \\\n@@ -831,6 +834,7 @@ INPUT                  = @srcdir@/doc/doxygen/doxygroups.cc \\\n                          include/backward/hash_set \\\n                          include/backward/strstream \\\n                          include/debug \\\n+                         include/debug/array \\\n                          include/debug/bitset \\\n                          include/debug/deque \\\n                          include/debug/forward_list \\\n@@ -853,6 +857,7 @@ INPUT                  = @srcdir@/doc/doxygen/doxygroups.cc \\\n                          include/profile/unordered_set \\\n                          include/profile/vector \\\n                          include/ext/algorithm \\\n+                         include/ext/cmath \\\n                          include/ext/functional \\\n                          include/ext/iterator \\\n                          include/ext/memory \\\n@@ -886,9 +891,36 @@ INPUT                  = @srcdir@/doc/doxygen/doxygroups.cc \\\n                          include/tr2/ratio \\\n                          include/tr2/type_traits \\\n                          include/decimal/decimal \\\n+                         include/experimental/bits \\\n+                         include/experimental/algorithm \\\n                          include/experimental/any \\\n+                         include/experimental/array \\\n+                         include/experimental/chrono \\\n+                         include/experimental/deque \\\n+                         include/experimental/filesystem \\\n+                         include/experimental/forward_list \\\n+                         include/experimental/functional \\\n+                         include/experimental/iterator \\\n+                         include/experimental/list \\\n+                         include/experimental/map \\\n+                         include/experimental/memory \\\n+                         include/experimental/memory_resource \\\n+                         include/experimental/numeric \\\n                          include/experimental/optional \\\n+                         include/experimental/propagate_const \\\n+                         include/experimental/random \\\n+                         include/experimental/ratio \\\n+                         include/experimental/regex \\\n+                         include/experimental/set \\\n+                         include/experimental/string \\\n                          include/experimental/string_view \\\n+                         include/experimental/system_error \\\n+                         include/experimental/tuple \\\n+                         include/experimental/type_traits \\\n+                         include/experimental/unordered_map \\\n+                         include/experimental/unordered_set \\\n+                         include/experimental/utility \\\n+                         include/experimental/vector \\\n                          include/ext \\\n                          include/ext/pb_ds \\\n                          include/ext/pb_ds/detail \\\n@@ -1965,18 +1997,6 @@ GENERATE_XML           = @do_xml@\n \n XML_OUTPUT             = xml\n \n-# The XML_SCHEMA tag can be used to specify a XML schema, which can be used by a\n-# validating XML parser to check the syntax of the XML files.\n-# This tag requires that the tag GENERATE_XML is set to YES.\n-\n-XML_SCHEMA             =\n-\n-# The XML_DTD tag can be used to specify a XML DTD, which can be used by a\n-# validating XML parser to check the syntax of the XML files.\n-# This tag requires that the tag GENERATE_XML is set to YES.\n-\n-XML_DTD                =\n-\n # If the XML_PROGRAMLISTING tag is set to YES doxygen will dump the program\n # listings (including syntax highlighting and cross-referencing information) to\n # the XML output. Note that enabling this will significantly increase the size\n@@ -2111,9 +2131,10 @@ INCLUDE_FILE_PATTERNS  =\n # recursively expanded use the := operator instead of the = operator.\n # This tag requires that the tag ENABLE_PREPROCESSING is set to YES.\n \n-PREDEFINED             = __cplusplus=201103L \\\n+PREDEFINED             = __cplusplus=201402L \\\n                          __GTHREADS \\\n                          _GLIBCXX_HAS_GTHREADS \\\n+                         _GLIBCXX_HAVE_TLS \\\n                          _GLIBCXX_INCLUDE_AS_CXX11 \\\n                          \"_GLIBCXX_PURE= \" \\\n                          \"_GLIBCXX_CONST= \" \\\n@@ -2135,6 +2156,7 @@ PREDEFINED             = __cplusplus=201103L \\\n                          _GLIBCXX_USE_CONSTEXPR=constexpr \\\n                          \"_GLIBCXX_THROW(E)= \" \\\n                          _GLIBCXX_NOEXCEPT=noexcept \\\n+                         \"_GLIBCXX_NOEXCEPT_IF(C)=noexcept(/*conditional*/)\" \\\n                          _GLIBCXX_NOTHROW=noexcept \\\n                          _GLIBCXX_USE_NOEXCEPT=noexcept \\\n                          _GLIBCXX_USE_WCHAR_T \\\n@@ -2144,7 +2166,7 @@ PREDEFINED             = __cplusplus=201103L \\\n                          _GLIBCXX_USE_NANOSLEEP \\\n                          __cpp_exceptions \\\n                          __cpp_rtti \\\n-                         ATOMIC_INT_LOCK_FREE \\\n+                         ATOMIC_INT_LOCK_FREE=2 \\\n                          PB_DS_DATA_TRUE_INDICATOR \\\n                          PB_DS_STATIC_ASSERT=// \\\n                          \"_GLIBCXX_BEGIN_NAMESPACE_ALGO= \" \\"}, {"sha": "6d778f0e23ae37ad434fcf60192237b61f1c7386", "filename": "libstdc++-v3/include/backward/strstream", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6b4f890601a9bb1ff803cef04ee5779d49befb97/libstdc%2B%2B-v3%2Finclude%2Fbackward%2Fstrstream", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6b4f890601a9bb1ff803cef04ee5779d49befb97/libstdc%2B%2B-v3%2Finclude%2Fbackward%2Fstrstream", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbackward%2Fstrstream?ref=6b4f890601a9bb1ff803cef04ee5779d49befb97", "patch": "@@ -40,9 +40,8 @@\n // MAY BE REMOVED in a future standard revision.  One should use the\n // header <sstream> instead.\n \n-/** @file backward/strstream\n- *  This is an internal header file, included by other library headers.\n- *  Do not attempt to use it directly. @headername{sstream}\n+/** @file strstream\n+ *  This is a Standard C++ Library header.\n  */\n \n #ifndef _BACKWARD_STRSTREAM\n@@ -53,7 +52,6 @@\n #include <ios>\n #include <istream>\n #include <ostream>\n-#include <string>\n \n namespace std _GLIBCXX_VISIBILITY(default)\n {"}, {"sha": "1229dd7a49b1ccc047cc9408b4ae9c0aeb870213", "filename": "libstdc++-v3/include/bits/forward_list.h", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6b4f890601a9bb1ff803cef04ee5779d49befb97/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fforward_list.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6b4f890601a9bb1ff803cef04ee5779d49befb97/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fforward_list.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fforward_list.h?ref=6b4f890601a9bb1ff803cef04ee5779d49befb97", "patch": "@@ -478,7 +478,8 @@ _GLIBCXX_BEGIN_NAMESPACE_CONTAINER\n \n       /**\n        *  @brief  Creates a %forward_list with default constructed elements.\n-       *  @param  __n  The number of elements to initially create.\n+       *  @param  __n   The number of elements to initially create.\n+       *  @param  __al  An allocator object.\n        *\n        *  This constructor creates the %forward_list with @a __n default\n        *  constructed elements.\n@@ -1096,6 +1097,7 @@ _GLIBCXX_BEGIN_NAMESPACE_CONTAINER\n        *  after @a __pos in constant time.\n        *\n        *  Undefined if @a __pos is in (__before,__last).\n+       *  @{\n        */\n       void\n       splice_after(const_iterator __pos, forward_list&&,\n@@ -1106,6 +1108,7 @@ _GLIBCXX_BEGIN_NAMESPACE_CONTAINER\n       splice_after(const_iterator __pos, forward_list&,\n                    const_iterator __before, const_iterator __last) noexcept\n       { _M_splice_after(__pos, __before, __last); }\n+      // @}\n \n       /**\n        *  @brief  Remove all elements equal to value."}, {"sha": "527296b78f09b02813c898f1a6ec6e7265a7f2e0", "filename": "libstdc++-v3/include/bits/locale_facets_nonio.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6b4f890601a9bb1ff803cef04ee5779d49befb97/libstdc%2B%2B-v3%2Finclude%2Fbits%2Flocale_facets_nonio.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6b4f890601a9bb1ff803cef04ee5779d49befb97/libstdc%2B%2B-v3%2Finclude%2Fbits%2Flocale_facets_nonio.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Flocale_facets_nonio.h?ref=6b4f890601a9bb1ff803cef04ee5779d49befb97", "patch": "@@ -709,7 +709,7 @@ _GLIBCXX_BEGIN_NAMESPACE_CXX11\n        *\n        *  @param __s        Start of string to parse.\n        *  @param __end      End of string to parse.\n-       *  @param __io       Source of the locale.\n+       *  @param __f        Source of the locale.\n        *  @param __err      Error flags to set.\n        *  @param __tm       Pointer to struct tm to fill in.\n        *  @param __format   Format specifier."}, {"sha": "fabd25759209236d5aa8b476e8f040bbb98c3948", "filename": "libstdc++-v3/include/bits/mutex.h", "status": "modified", "additions": 18, "deletions": 5, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6b4f890601a9bb1ff803cef04ee5779d49befb97/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fmutex.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6b4f890601a9bb1ff803cef04ee5779d49befb97/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fmutex.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fmutex.h?ref=6b4f890601a9bb1ff803cef04ee5779d49befb97", "patch": "@@ -82,7 +82,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n     __mutex_base& operator=(const __mutex_base&) = delete;\n   };\n \n-  /// mutex\n+  /// The standard mutex type.\n   class mutex : private __mutex_base\n   {\n   public:\n@@ -138,13 +138,20 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n   /// and manage it.\n   struct adopt_lock_t { explicit adopt_lock_t() = default; };\n \n+  /// Tag used to prevent a scoped lock from acquiring ownership of a mutex.\n   constexpr defer_lock_t\tdefer_lock { };\n+\n+  /// Tag used to prevent a scoped lock from blocking if a mutex is locked.\n   constexpr try_to_lock_t\ttry_to_lock { };\n+\n+  /// Tag used to make a scoped lock take ownership of a locked mutex.\n   constexpr adopt_lock_t\tadopt_lock { };\n \n-  /// @brief  Scoped lock idiom.\n-  // Acquire the mutex here with a constructor call, then release with\n-  // the destructor call in accordance with RAII style.\n+  /** @brief A simple scoped lock type.\n+   *\n+   * A lock_guard controls mutex ownership within a scope, releasing\n+   * ownership in the destructor.\n+   */\n   template<typename _Mutex>\n     class lock_guard\n     {\n@@ -167,7 +174,13 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n       mutex_type&  _M_device;\n     };\n \n-  /// unique_lock\n+  /** @brief A movable scoped lock type.\n+   *\n+   * A unique_lock controls mutex ownership within a scope. Ownership of the\n+   * mutex can be delayed until after construction and can be transferred\n+   * to another unique_lock by move construction or move assignment. If a\n+   * mutex lock is owned when the destructor runs ownership will be released.\n+   */\n   template<typename _Mutex>\n     class unique_lock\n     {"}, {"sha": "785d92b2e76d7cf1bf870e186cc20149dd289a05", "filename": "libstdc++-v3/include/bits/shared_ptr.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6b4f890601a9bb1ff803cef04ee5779d49befb97/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fshared_ptr.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6b4f890601a9bb1ff803cef04ee5779d49befb97/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fshared_ptr.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fshared_ptr.h?ref=6b4f890601a9bb1ff803cef04ee5779d49befb97", "patch": "@@ -41,7 +41,7 @@\n // accompanying file LICENSE_1_0.txt or copy at\n // http://www.boost.org/LICENSE_1_0.txt)\n \n-/** @file bits/shared_ptr.h\n+/** @file\n  *  This is an internal header file, included by other library headers.\n  *  Do not attempt to use it directly. @headername{memory}\n  */"}, {"sha": "a507806e86be1ca141c94ed78f13a5ddf6e0ab89", "filename": "libstdc++-v3/include/bits/stl_deque.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6b4f890601a9bb1ff803cef04ee5779d49befb97/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_deque.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6b4f890601a9bb1ff803cef04ee5779d49befb97/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_deque.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_deque.h?ref=6b4f890601a9bb1ff803cef04ee5779d49befb97", "patch": "@@ -895,6 +895,7 @@ _GLIBCXX_BEGIN_NAMESPACE_CONTAINER\n       /**\n        *  @brief  Creates a %deque with default constructed elements.\n        *  @param  __n  The number of elements to initially create.\n+       *  @param  __a  An allocator.\n        *\n        *  This constructor fills the %deque with @a n default\n        *  constructed elements."}, {"sha": "6a4315a55f7c5a9e2ce9af5727759a8f2557427e", "filename": "libstdc++-v3/include/debug/vector", "status": "modified", "additions": 6, "deletions": 3, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6b4f890601a9bb1ff803cef04ee5779d49befb97/libstdc%2B%2B-v3%2Finclude%2Fdebug%2Fvector", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6b4f890601a9bb1ff803cef04ee5779d49befb97/libstdc%2B%2B-v3%2Finclude%2Fdebug%2Fvector", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fdebug%2Fvector?ref=6b4f890601a9bb1ff803cef04ee5779d49befb97", "patch": "@@ -37,9 +37,12 @@\n \n namespace __gnu_debug\n {\n-  /// Special vector safe base class to add a guaranteed capacity information\n-  /// useful to detect code relying on the libstdc++ reallocation management\n-  /// implementation detail.\n+  /** @brief Base class for Debug Mode vector.\n+   *\n+   * Adds information about the guaranteed capacity, which is useful for\n+   * detecting code which relies on non-portable implementation details of\n+   * the libstdc++ reallocation policy.\n+   */\n   template<typename _SafeSequence,\n \t   typename _BaseSequence>\n     class _Safe_vector"}, {"sha": "493c582a9a59986aaa983cd7f001d6fd67779131", "filename": "libstdc++-v3/include/experimental/bits/fs_dir.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6b4f890601a9bb1ff803cef04ee5779d49befb97/libstdc%2B%2B-v3%2Finclude%2Fexperimental%2Fbits%2Ffs_dir.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6b4f890601a9bb1ff803cef04ee5779d49befb97/libstdc%2B%2B-v3%2Finclude%2Fexperimental%2Fbits%2Ffs_dir.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fexperimental%2Fbits%2Ffs_dir.h?ref=6b4f890601a9bb1ff803cef04ee5779d49befb97", "patch": "@@ -22,7 +22,7 @@\n // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n // <http://www.gnu.org/licenses/>.\n \n-/** @file experimental/fs_dir.h\n+/** @file experimental/bits/fs_dir.h\n  *  This is an internal header file, included by other library headers.\n  *  Do not attempt to use it directly. @headername{experimental/filesystem}\n  */"}, {"sha": "c71d50318780563cd5b67c73fee216362e60f091", "filename": "libstdc++-v3/include/experimental/bits/fs_fwd.h", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6b4f890601a9bb1ff803cef04ee5779d49befb97/libstdc%2B%2B-v3%2Finclude%2Fexperimental%2Fbits%2Ffs_fwd.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6b4f890601a9bb1ff803cef04ee5779d49befb97/libstdc%2B%2B-v3%2Finclude%2Fexperimental%2Fbits%2Ffs_fwd.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fexperimental%2Fbits%2Ffs_fwd.h?ref=6b4f890601a9bb1ff803cef04ee5779d49befb97", "patch": "@@ -22,8 +22,9 @@\n // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n // <http://www.gnu.org/licenses/>.\n \n-/** @file experimental/filesystem\n- *  This is a TS C++ Library header.\n+/** @file experimental/bits/fs_fwd.h\n+ *  This is an internal header file, included by other library headers.\n+ *  Do not attempt to use it directly. @headername{experimental/filesystem}\n  */\n \n #ifndef _GLIBCXX_EXPERIMENTAL_FS_FWD_H\n@@ -52,7 +53,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n #endif\n \n   /**\n-   * @defgroup filesystem\n+   * @defgroup filesystem Filesystem\n    * @ingroup experimental\n    *\n    * Utilities for performing operations on file systems and their components,"}, {"sha": "534c51a236f5d9613f142c08c55f738b1a8b9e63", "filename": "libstdc++-v3/include/experimental/bits/fs_ops.h", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6b4f890601a9bb1ff803cef04ee5779d49befb97/libstdc%2B%2B-v3%2Finclude%2Fexperimental%2Fbits%2Ffs_ops.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6b4f890601a9bb1ff803cef04ee5779d49befb97/libstdc%2B%2B-v3%2Finclude%2Fexperimental%2Fbits%2Ffs_ops.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fexperimental%2Fbits%2Ffs_ops.h?ref=6b4f890601a9bb1ff803cef04ee5779d49befb97", "patch": "@@ -22,8 +22,9 @@\n // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n // <http://www.gnu.org/licenses/>.\n \n-/** @file experimental/filesystem\n- *  This is a TS C++ Library header.\n+/** @file experimental/bits/fs_fwd.h\n+ *  This is an internal header file, included by other library headers.\n+ *  Do not attempt to use it directly. @headername{experimental/filesystem}\n  */\n \n #ifndef _GLIBCXX_EXPERIMENTAL_FS_OPS_H"}, {"sha": "2056fb392c4b0c36454f04156e7a5329df3367cf", "filename": "libstdc++-v3/include/experimental/bits/fs_path.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6b4f890601a9bb1ff803cef04ee5779d49befb97/libstdc%2B%2B-v3%2Finclude%2Fexperimental%2Fbits%2Ffs_path.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6b4f890601a9bb1ff803cef04ee5779d49befb97/libstdc%2B%2B-v3%2Finclude%2Fexperimental%2Fbits%2Ffs_path.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fexperimental%2Fbits%2Ffs_path.h?ref=6b4f890601a9bb1ff803cef04ee5779d49befb97", "patch": "@@ -22,7 +22,7 @@\n // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n // <http://www.gnu.org/licenses/>.\n \n-/** @file experimental/fs_path.h\n+/** @file experimental/bits/fs_path.h\n  *  This is an internal header file, included by other library headers.\n  *  Do not attempt to use it directly. @headername{experimental/filesystem}\n  */"}, {"sha": "96e49d860ff4316d396993c95e6176f8628c8dfb", "filename": "libstdc++-v3/include/experimental/bits/string_view.tcc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6b4f890601a9bb1ff803cef04ee5779d49befb97/libstdc%2B%2B-v3%2Finclude%2Fexperimental%2Fbits%2Fstring_view.tcc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6b4f890601a9bb1ff803cef04ee5779d49befb97/libstdc%2B%2B-v3%2Finclude%2Fexperimental%2Fbits%2Fstring_view.tcc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fexperimental%2Fbits%2Fstring_view.tcc?ref=6b4f890601a9bb1ff803cef04ee5779d49befb97", "patch": "@@ -24,7 +24,7 @@\n \n /** @file experimental/bits/string_view.tcc\n  *  This is an internal header file, included by other library headers.\n- *  Do not attempt to use it directly. @headername{string_view}\n+ *  Do not attempt to use it directly. @headername{experimental/string_view}\n  */\n \n //"}, {"sha": "f6e3fa0258ab2e5bdc035e16ad499620889a1d44", "filename": "libstdc++-v3/include/experimental/optional", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6b4f890601a9bb1ff803cef04ee5779d49befb97/libstdc%2B%2B-v3%2Finclude%2Fexperimental%2Foptional", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6b4f890601a9bb1ff803cef04ee5779d49befb97/libstdc%2B%2B-v3%2Finclude%2Fexperimental%2Foptional", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fexperimental%2Foptional?ref=6b4f890601a9bb1ff803cef04ee5779d49befb97", "patch": "@@ -33,6 +33,12 @@\n  * @defgroup experimental Experimental\n  *\n  * Components specified by various Technical Specifications.\n+ *\n+ * As indicated by the std::experimental namespace and the  header paths,\n+ * the contents of these Technical Specifications are experimental and not\n+ * part of the C++ standard. As such the interfaces and implementations may\n+ * change in the future, and there is <STRONG> no guarantee of compatibility\n+ * between different GCC releases </STRONG> for these features.\n  */\n \n #if __cplusplus <= 201103L"}, {"sha": "ebeb4403b2b98d9087d9bcba3b4903de6c237c72", "filename": "libstdc++-v3/include/experimental/string_view", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6b4f890601a9bb1ff803cef04ee5779d49befb97/libstdc%2B%2B-v3%2Finclude%2Fexperimental%2Fstring_view", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6b4f890601a9bb1ff803cef04ee5779d49befb97/libstdc%2B%2B-v3%2Finclude%2Fexperimental%2Fstring_view", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fexperimental%2Fstring_view?ref=6b4f890601a9bb1ff803cef04ee5779d49befb97", "patch": "@@ -23,7 +23,7 @@\n // <http://www.gnu.org/licenses/>.\n \n /** @file experimental/string_view\n- *  This is a Standard C++ Library header.\n+ *  This is a TS C++ Library header.\n  */\n \n //"}, {"sha": "674fa9201258f4465d0a6d7581c8865766b6f214", "filename": "libstdc++-v3/include/ext/pb_ds/detail/bin_search_tree_/traits.hpp", "status": "modified", "additions": 2, "deletions": 7, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6b4f890601a9bb1ff803cef04ee5779d49befb97/libstdc%2B%2B-v3%2Finclude%2Fext%2Fpb_ds%2Fdetail%2Fbin_search_tree_%2Ftraits.hpp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6b4f890601a9bb1ff803cef04ee5779d49befb97/libstdc%2B%2B-v3%2Finclude%2Fext%2Fpb_ds%2Fdetail%2Fbin_search_tree_%2Ftraits.hpp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fext%2Fpb_ds%2Fdetail%2Fbin_search_tree_%2Ftraits.hpp?ref=6b4f890601a9bb1ff803cef04ee5779d49befb97", "patch": "@@ -166,13 +166,8 @@ namespace __gnu_pbds\n \t     class Node_Update,\n \t     class Node,\n \t     typename _Alloc>\n-    struct bin_search_tree_traits<\n-      Key,\n-      null_type,\n-      Cmp_Fn,\n-      Node_Update,\n-      Node,\n-      _Alloc>\n+    struct\n+    bin_search_tree_traits<Key, null_type, Cmp_Fn, Node_Update, Node, _Alloc>\n     {\n     private:\n       typedef types_traits<Key, null_type, _Alloc, false> type_traits;"}, {"sha": "44df60c115b3a4a1aef7a209815440b635d9680b", "filename": "libstdc++-v3/include/std/bitset", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6b4f890601a9bb1ff803cef04ee5779d49befb97/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fbitset", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6b4f890601a9bb1ff803cef04ee5779d49befb97/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fbitset", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fbitset?ref=6b4f890601a9bb1ff803cef04ee5779d49befb97", "patch": "@@ -663,7 +663,7 @@ _GLIBCXX_BEGIN_NAMESPACE_CONTAINER\n     };\n \n #if __cplusplus >= 201103L\n-  template<size_t _Nb, bool = _Nb < _GLIBCXX_BITSET_BITS_PER_ULL>\n+  template<size_t _Nb, bool = (_Nb < _GLIBCXX_BITSET_BITS_PER_ULL)>\n     struct _Sanitize_val\n     {\n       static constexpr unsigned long long\n@@ -681,8 +681,6 @@ _GLIBCXX_BEGIN_NAMESPACE_CONTAINER\n #endif\n \n   /**\n-   *  @class bitset <bitset>\n-   *\n    *  @brief The %bitset class represents a @e fixed-size sequence of bits.\n    *  @ingroup utilities\n    *"}, {"sha": "8345d20ea9cee6de0b0eedd4515b2d2c7a4b0995", "filename": "libstdc++-v3/include/std/mutex", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6b4f890601a9bb1ff803cef04ee5779d49befb97/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fmutex", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6b4f890601a9bb1ff803cef04ee5779d49befb97/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fmutex", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fmutex?ref=6b4f890601a9bb1ff803cef04ee5779d49befb97", "patch": "@@ -87,7 +87,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n #endif\n   };\n \n-  /// recursive_mutex\n+  /// The standard recursive mutex type.\n   class recursive_mutex : private __recursive_mutex_base\n   {\n   public:\n@@ -171,7 +171,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \t}\n     };\n \n-  /// timed_mutex\n+  /// The standard timed mutex type.\n   class timed_mutex\n   : private __mutex_base, public __timed_mutex_impl<timed_mutex>\n   {"}, {"sha": "77bddc32b95423194eb6647603c9d85f563b3979", "filename": "libstdc++-v3/include/tr2/dynamic_bitset", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6b4f890601a9bb1ff803cef04ee5779d49befb97/libstdc%2B%2B-v3%2Finclude%2Ftr2%2Fdynamic_bitset", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6b4f890601a9bb1ff803cef04ee5779d49befb97/libstdc%2B%2B-v3%2Finclude%2Ftr2%2Fdynamic_bitset", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Ftr2%2Fdynamic_bitset?ref=6b4f890601a9bb1ff803cef04ee5779d49befb97", "patch": "@@ -593,6 +593,9 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n        *  @param  __str  A string of '0' and '1' characters.\n        *  @param  __pos  Index of the first character in @p __str to use.\n        *  @param  __n    The number of characters to copy.\n+       *  @param  __zero The character to use for unset bits.\n+       *  @param  __one  The character to use for set bits.\n+       *  @param  __alloc An allocator.\n        *  @throw  std::out_of_range  If @p __pos is bigger the size of @p __str.\n        *  @throw  std::invalid_argument  If a character appears in the string\n        *                                 which is neither '0' nor '1'."}, {"sha": "021ebd0b561f53052f62c1680a2e7efe720e4ccc", "filename": "libstdc++-v3/scripts/run_doxygen", "status": "modified", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6b4f890601a9bb1ff803cef04ee5779d49befb97/libstdc%2B%2B-v3%2Fscripts%2Frun_doxygen", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6b4f890601a9bb1ff803cef04ee5779d49befb97/libstdc%2B%2B-v3%2Fscripts%2Frun_doxygen", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fscripts%2Frun_doxygen?ref=6b4f890601a9bb1ff803cef04ee5779d49befb97", "patch": "@@ -334,6 +334,23 @@ for f in *__profile_*; do\n     mv $f $newname\n done\n \n+# Remove inline namespaces used for versioning.\n+for f in *_V2_*; do\n+    newname=`echo $f | sed 's/_V2_/::/'`\n+    sed 's/::_V2::/::/g' $f > $newname\n+    rm $f\n+done\n+for f in *_experimental_filesystem_v?_*; do\n+    newname=`echo $f | sed 's/_filesystem_v._/::filesystem::/'`\n+    sed 's/::filesystem::v.::/::filesystem::/g' $f > $newname\n+    rm $f\n+done\n+for f in *experimental_fundamentals_v?_*; do\n+    newname=`echo $f | sed 's/experimental_.*_v[[:digit:]]_/experimental::/'`\n+    sed 's/::experimental::fundamentals_v[[:digit:]]::/::experimental::/g' $f > $newname\n+    rm $f\n+done\n+\n # Then, clean up other top-level namespaces.\n for f in std_tr1_*; do\n     newname=`echo $f | sed 's/^std_tr1_/std::tr1::/'`"}]}