{"sha": "3e7291458b963d37a9253cd5319ec50d292d5e72", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2U3MjkxNDU4Yjk2M2QzN2E5MjUzY2Q1MzE5ZWM1MGQyOTJkNWU3Mg==", "commit": {"author": {"name": "Uros Bizjak", "email": "ubizjak@gmail.com", "date": "2014-01-20T17:59:14Z"}, "committer": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2014-01-20T17:59:14Z"}, "message": "i386.c (ix86_avoid_lea_for_addr): Return false for SImode_address_operand operands, having only a REG argument.\n\n\t* config/i386/i386.c (ix86_avoid_lea_for_addr): Return false\n\tfor SImode_address_operand operands, having only a REG argument.\n\nFrom-SVN: r206847", "tree": {"sha": "b628358572e088a7006cddd911df7ddaace9f7c1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b628358572e088a7006cddd911df7ddaace9f7c1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3e7291458b963d37a9253cd5319ec50d292d5e72", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3e7291458b963d37a9253cd5319ec50d292d5e72", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3e7291458b963d37a9253cd5319ec50d292d5e72", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3e7291458b963d37a9253cd5319ec50d292d5e72/comments", "author": {"login": "ubizjak", "id": 55479990, "node_id": "MDQ6VXNlcjU1NDc5OTkw", "avatar_url": "https://avatars.githubusercontent.com/u/55479990?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ubizjak", "html_url": "https://github.com/ubizjak", "followers_url": "https://api.github.com/users/ubizjak/followers", "following_url": "https://api.github.com/users/ubizjak/following{/other_user}", "gists_url": "https://api.github.com/users/ubizjak/gists{/gist_id}", "starred_url": "https://api.github.com/users/ubizjak/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ubizjak/subscriptions", "organizations_url": "https://api.github.com/users/ubizjak/orgs", "repos_url": "https://api.github.com/users/ubizjak/repos", "events_url": "https://api.github.com/users/ubizjak/events{/privacy}", "received_events_url": "https://api.github.com/users/ubizjak/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "ef132d593eb8b2423687ea820f01c4539c9f7151", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ef132d593eb8b2423687ea820f01c4539c9f7151", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ef132d593eb8b2423687ea820f01c4539c9f7151"}], "stats": {"total": 20, "additions": 12, "deletions": 8}, "files": [{"sha": "a199b8da9591d8f262ea69b1cca9d844b33f1cba", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3e7291458b963d37a9253cd5319ec50d292d5e72/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3e7291458b963d37a9253cd5319ec50d292d5e72/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=3e7291458b963d37a9253cd5319ec50d292d5e72", "patch": "@@ -1,3 +1,8 @@\n+2014-01-20  Uros Bizjak  <ubizjak@gmail.com>\n+\n+\t* config/i386/i386.c (ix86_avoid_lea_for_addr): Return false\n+\tfor SImode_address_operand operands, having only a REG argument.\n+\n 2014-01-20  Marcus Shawcroft  <marcus.shawcroft@arm.com>\n \n \t* config/aarch64/aarch64-linux.h (GLIBC_DYNAMIC_LINKER): Expand"}, {"sha": "1a4d5683e342c3d64fe67526c0e85c1a189d0f10", "filename": "gcc/config/i386/i386.c", "status": "modified", "additions": 6, "deletions": 7, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3e7291458b963d37a9253cd5319ec50d292d5e72/gcc%2Fconfig%2Fi386%2Fi386.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3e7291458b963d37a9253cd5319ec50d292d5e72/gcc%2Fconfig%2Fi386%2Fi386.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.c?ref=3e7291458b963d37a9253cd5319ec50d292d5e72", "patch": "@@ -18160,17 +18160,16 @@ ix86_avoid_lea_for_addr (rtx insn, rtx operands[])\n     return false;\n \n   /* The \"at least two components\" test below might not catch simple\n-     *mov[sd]i_internal or *zero_extendsidi2 insns if parts.base is\n-     non-NULL and parts.disp is const0_rtx as the only components in\n-     the address, e.g. if the register is %rbp or %r13.  As this\n-     test is much cheaper and moves or zero extensions are the common\n-     case, do this check first.  */\n+     move or zero extension insns if parts.base is non-NULL and parts.disp\n+     is const0_rtx as the only components in the address, e.g. if the\n+     register is %rbp or %r13.  As this test is much cheaper and moves or\n+     zero extensions are the common case, do this check first.  */\n   if (REG_P (operands[1])\n-      || (GET_CODE (operands[1]) == ZERO_EXTEND\n+      || (SImode_address_operand (operands[1], VOIDmode)\n \t  && REG_P (XEXP (operands[1], 0))))\n     return false;\n \n-  /* Check it is correct to split here.  */\n+  /* Check if it is OK to split here.  */\n   if (!ix86_ok_to_clobber_flags (insn))\n     return false;\n "}, {"sha": "53edacf9e41f368d7f97771567e1b21bad016de2", "filename": "gcc/config/i386/i386.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3e7291458b963d37a9253cd5319ec50d292d5e72/gcc%2Fconfig%2Fi386%2Fi386.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3e7291458b963d37a9253cd5319ec50d292d5e72/gcc%2Fconfig%2Fi386%2Fi386.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.md?ref=3e7291458b963d37a9253cd5319ec50d292d5e72", "patch": "@@ -5437,7 +5437,7 @@\n   /* Zero-extend return register to DImode for zero-extended addresses.  */\n   if (mode != <MODE>mode)\n     emit_insn (gen_zero_extendsidi2\n-    \t       (operands[0], gen_lowpart ((mode), operands[0])));\n+    \t       (operands[0], gen_lowpart (mode, operands[0])));\n \n   DONE;\n }"}]}