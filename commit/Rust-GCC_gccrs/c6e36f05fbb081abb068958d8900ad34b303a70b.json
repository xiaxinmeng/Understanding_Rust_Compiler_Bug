{"sha": "c6e36f05fbb081abb068958d8900ad34b303a70b", "node_id": "C_kwDOANBUbNoAKGM2ZTM2ZjA1ZmJiMDgxYWJiMDY4OTU4ZDg5MDBhZDM0YjMwM2E3MGI", "commit": {"author": {"name": "Peter Bergner", "email": "bergner@linux.ibm.com", "date": "2022-05-18T02:09:29Z"}, "committer": {"name": "Peter Bergner", "email": "bergner@linux.ibm.com", "date": "2022-05-18T02:10:27Z"}, "message": "rs6000: Prefer assigning the MMA vector operands to altivec registers [PR105556]\n\nWhen optimizing the DGEMM kernel in OpenBLAS to use MMA, the MMA code\nuses all 8 accumulators, which overlap all vs0-vs31 vector registers.\nCurrent trunk assigns one of the normal vector inputs to one of the MMA\ninstructions, which forces us to spill one of the accumulators to memory,\nleading to poor performance.  The solution here is to replace the \"wa\"\nconstraints for the vector input operands in the MMA instruction patterns\nwith \"v,?wa\" so that we prefer using the altivec registers vs32-vs63\nover the vs0-vs31 registers.\n\n2022-05-17  Peter Bergner  <bergner@linux.ibm.com>\n\t    Segher Boessenkool  <segher@kernel.crashing.org>\n\ngcc/\n\tPR target/105556\n\t* config/rs6000/mma.md (mma_<vv>, mma_<avv>, mma_<pv>, mma_<apv>,\n\tmma_<vvi4i4i8>, mma_<avvi4i4i8>, mma_<vvi4i4i2>, mma_<avvi4i4i2>,\n\tmma_<vvi4i4>, mma_<avvi4i4>, mma_<pvi4i2>, mma_<apvi4i2>,\n\tmma_<vvi4i4i4>, mma_<avvi4i4i4>): Replace \"wa\" constraints with \"v,?wa\".\n\tUpdate other operands accordingly.", "tree": {"sha": "fbb1fbe9de9e09c20aa02d853a0e89c27337f7d1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/fbb1fbe9de9e09c20aa02d853a0e89c27337f7d1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c6e36f05fbb081abb068958d8900ad34b303a70b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c6e36f05fbb081abb068958d8900ad34b303a70b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c6e36f05fbb081abb068958d8900ad34b303a70b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c6e36f05fbb081abb068958d8900ad34b303a70b/comments", "author": {"login": "peter-bergner", "id": 17504345, "node_id": "MDQ6VXNlcjE3NTA0MzQ1", "avatar_url": "https://avatars.githubusercontent.com/u/17504345?v=4", "gravatar_id": "", "url": "https://api.github.com/users/peter-bergner", "html_url": "https://github.com/peter-bergner", "followers_url": "https://api.github.com/users/peter-bergner/followers", "following_url": "https://api.github.com/users/peter-bergner/following{/other_user}", "gists_url": "https://api.github.com/users/peter-bergner/gists{/gist_id}", "starred_url": "https://api.github.com/users/peter-bergner/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/peter-bergner/subscriptions", "organizations_url": "https://api.github.com/users/peter-bergner/orgs", "repos_url": "https://api.github.com/users/peter-bergner/repos", "events_url": "https://api.github.com/users/peter-bergner/events{/privacy}", "received_events_url": "https://api.github.com/users/peter-bergner/received_events", "type": "User", "site_admin": false}, "committer": {"login": "peter-bergner", "id": 17504345, "node_id": "MDQ6VXNlcjE3NTA0MzQ1", "avatar_url": "https://avatars.githubusercontent.com/u/17504345?v=4", "gravatar_id": "", "url": "https://api.github.com/users/peter-bergner", "html_url": "https://github.com/peter-bergner", "followers_url": "https://api.github.com/users/peter-bergner/followers", "following_url": "https://api.github.com/users/peter-bergner/following{/other_user}", "gists_url": "https://api.github.com/users/peter-bergner/gists{/gist_id}", "starred_url": "https://api.github.com/users/peter-bergner/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/peter-bergner/subscriptions", "organizations_url": "https://api.github.com/users/peter-bergner/orgs", "repos_url": "https://api.github.com/users/peter-bergner/repos", "events_url": "https://api.github.com/users/peter-bergner/events{/privacy}", "received_events_url": "https://api.github.com/users/peter-bergner/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3d9439b1bb76c186958d5b86f0076f8b3017b8a2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3d9439b1bb76c186958d5b86f0076f8b3017b8a2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3d9439b1bb76c186958d5b86f0076f8b3017b8a2"}], "stats": {"total": 150, "additions": 75, "deletions": 75}, "files": [{"sha": "a183b6a168afbe2ff4a89bec1d2e332abe82e2ec", "filename": "gcc/config/rs6000/mma.md", "status": "modified", "additions": 75, "deletions": 75, "changes": 150, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c6e36f05fbb081abb068958d8900ad34b303a70b/gcc%2Fconfig%2Frs6000%2Fmma.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c6e36f05fbb081abb068958d8900ad34b303a70b/gcc%2Fconfig%2Frs6000%2Fmma.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Fmma.md?ref=c6e36f05fbb081abb068958d8900ad34b303a70b", "patch": "@@ -490,168 +490,168 @@\n   [(set_attr \"type\" \"mma\")])\n \n (define_insn \"mma_<vv>\"\n-  [(set (match_operand:XO 0 \"fpr_reg_operand\" \"=&d\")\n-\t(unspec:XO [(match_operand:V16QI 1 \"vsx_register_operand\" \"wa\")\n-\t\t    (match_operand:V16QI 2 \"vsx_register_operand\" \"wa\")]\n+  [(set (match_operand:XO 0 \"fpr_reg_operand\" \"=&d,&d\")\n+\t(unspec:XO [(match_operand:V16QI 1 \"vsx_register_operand\" \"v,?wa\")\n+\t\t    (match_operand:V16QI 2 \"vsx_register_operand\" \"v,?wa\")]\n \t\t    MMA_VV))]\n   \"TARGET_MMA\"\n   \"<vv> %A0,%x1,%x2\"\n   [(set_attr \"type\" \"mma\")])\n \n (define_insn \"mma_<avv>\"\n-  [(set (match_operand:XO 0 \"fpr_reg_operand\" \"=&d\")\n-\t(unspec:XO [(match_operand:XO 1 \"fpr_reg_operand\" \"0\")\n-\t\t    (match_operand:V16QI 2 \"vsx_register_operand\" \"wa\")\n-\t\t    (match_operand:V16QI 3 \"vsx_register_operand\" \"wa\")]\n+  [(set (match_operand:XO 0 \"fpr_reg_operand\" \"=&d,&d\")\n+\t(unspec:XO [(match_operand:XO 1 \"fpr_reg_operand\" \"0,0\")\n+\t\t    (match_operand:V16QI 2 \"vsx_register_operand\" \"v,?wa\")\n+\t\t    (match_operand:V16QI 3 \"vsx_register_operand\" \"v,?wa\")]\n \t\t    MMA_AVV))]\n   \"TARGET_MMA\"\n   \"<avv> %A0,%x2,%x3\"\n   [(set_attr \"type\" \"mma\")])\n \n (define_insn \"mma_<pv>\"\n-  [(set (match_operand:XO 0 \"fpr_reg_operand\" \"=&d\")\n-\t(unspec:XO [(match_operand:OO 1 \"vsx_register_operand\" \"wa\")\n-\t\t    (match_operand:V16QI 2 \"vsx_register_operand\" \"wa\")]\n+  [(set (match_operand:XO 0 \"fpr_reg_operand\" \"=&d,&d\")\n+\t(unspec:XO [(match_operand:OO 1 \"vsx_register_operand\" \"v,?wa\")\n+\t\t    (match_operand:V16QI 2 \"vsx_register_operand\" \"v,?wa\")]\n \t\t    MMA_PV))]\n   \"TARGET_MMA\"\n   \"<pv> %A0,%x1,%x2\"\n   [(set_attr \"type\" \"mma\")])\n \n (define_insn \"mma_<apv>\"\n-  [(set (match_operand:XO 0 \"fpr_reg_operand\" \"=&d\")\n-\t(unspec:XO [(match_operand:XO 1 \"fpr_reg_operand\" \"0\")\n-\t\t    (match_operand:OO 2 \"vsx_register_operand\" \"wa\")\n-\t\t    (match_operand:V16QI 3 \"vsx_register_operand\" \"wa\")]\n+  [(set (match_operand:XO 0 \"fpr_reg_operand\" \"=&d,&d\")\n+\t(unspec:XO [(match_operand:XO 1 \"fpr_reg_operand\" \"0,0\")\n+\t\t    (match_operand:OO 2 \"vsx_register_operand\" \"v,?wa\")\n+\t\t    (match_operand:V16QI 3 \"vsx_register_operand\" \"v,?wa\")]\n \t\t    MMA_APV))]\n   \"TARGET_MMA\"\n   \"<apv> %A0,%x2,%x3\"\n   [(set_attr \"type\" \"mma\")])\n \n (define_insn \"mma_<vvi4i4i8>\"\n-  [(set (match_operand:XO 0 \"fpr_reg_operand\" \"=&d\")\n-\t(unspec:XO [(match_operand:V16QI 1 \"vsx_register_operand\" \"wa\")\n-\t\t    (match_operand:V16QI 2 \"vsx_register_operand\" \"wa\")\n-\t\t    (match_operand:SI 3 \"const_0_to_15_operand\" \"n\")\n-\t\t    (match_operand:SI 4 \"const_0_to_15_operand\" \"n\")\n-\t\t    (match_operand:SI 5 \"u8bit_cint_operand\" \"n\")]\n+  [(set (match_operand:XO 0 \"fpr_reg_operand\" \"=&d,&d\")\n+\t(unspec:XO [(match_operand:V16QI 1 \"vsx_register_operand\" \"v,?wa\")\n+\t\t    (match_operand:V16QI 2 \"vsx_register_operand\" \"v,?wa\")\n+\t\t    (match_operand:SI 3 \"const_0_to_15_operand\" \"n,n\")\n+\t\t    (match_operand:SI 4 \"const_0_to_15_operand\" \"n,n\")\n+\t\t    (match_operand:SI 5 \"u8bit_cint_operand\" \"n,n\")]\n \t\t    MMA_VVI4I4I8))]\n   \"TARGET_MMA\"\n   \"<vvi4i4i8> %A0,%x1,%x2,%3,%4,%5\"\n   [(set_attr \"type\" \"mma\")\n    (set_attr \"prefixed\" \"yes\")])\n \n (define_insn \"mma_<avvi4i4i8>\"\n-  [(set (match_operand:XO 0 \"fpr_reg_operand\" \"=&d\")\n-\t(unspec:XO [(match_operand:XO 1 \"fpr_reg_operand\" \"0\")\n-\t\t    (match_operand:V16QI 2 \"vsx_register_operand\" \"wa\")\n-\t\t    (match_operand:V16QI 3 \"vsx_register_operand\" \"wa\")\n-\t\t    (match_operand:SI 4 \"const_0_to_15_operand\" \"n\")\n-\t\t    (match_operand:SI 5 \"const_0_to_15_operand\" \"n\")\n-\t\t    (match_operand:SI 6 \"u8bit_cint_operand\" \"n\")]\n+  [(set (match_operand:XO 0 \"fpr_reg_operand\" \"=&d,&d\")\n+\t(unspec:XO [(match_operand:XO 1 \"fpr_reg_operand\" \"0,0\")\n+\t\t    (match_operand:V16QI 2 \"vsx_register_operand\" \"v,?wa\")\n+\t\t    (match_operand:V16QI 3 \"vsx_register_operand\" \"v,?wa\")\n+\t\t    (match_operand:SI 4 \"const_0_to_15_operand\" \"n,n\")\n+\t\t    (match_operand:SI 5 \"const_0_to_15_operand\" \"n,n\")\n+\t\t    (match_operand:SI 6 \"u8bit_cint_operand\" \"n,n\")]\n \t\t    MMA_AVVI4I4I8))]\n   \"TARGET_MMA\"\n   \"<avvi4i4i8> %A0,%x2,%x3,%4,%5,%6\"\n   [(set_attr \"type\" \"mma\")\n    (set_attr \"prefixed\" \"yes\")])\n \n (define_insn \"mma_<vvi4i4i2>\"\n-  [(set (match_operand:XO 0 \"fpr_reg_operand\" \"=&d\")\n-\t(unspec:XO [(match_operand:V16QI 1 \"vsx_register_operand\" \"wa\")\n-\t\t    (match_operand:V16QI 2 \"vsx_register_operand\" \"wa\")\n-\t\t    (match_operand:SI 3 \"const_0_to_15_operand\" \"n\")\n-\t\t    (match_operand:SI 4 \"const_0_to_15_operand\" \"n\")\n-\t\t    (match_operand:SI 5 \"const_0_to_3_operand\" \"n\")]\n+  [(set (match_operand:XO 0 \"fpr_reg_operand\" \"=&d,&d\")\n+\t(unspec:XO [(match_operand:V16QI 1 \"vsx_register_operand\" \"v,?wa\")\n+\t\t    (match_operand:V16QI 2 \"vsx_register_operand\" \"v,?wa\")\n+\t\t    (match_operand:SI 3 \"const_0_to_15_operand\" \"n,n\")\n+\t\t    (match_operand:SI 4 \"const_0_to_15_operand\" \"n,n\")\n+\t\t    (match_operand:SI 5 \"const_0_to_3_operand\" \"n,n\")]\n \t\t    MMA_VVI4I4I2))]\n   \"TARGET_MMA\"\n   \"<vvi4i4i2> %A0,%x1,%x2,%3,%4,%5\"\n   [(set_attr \"type\" \"mma\")\n    (set_attr \"prefixed\" \"yes\")])\n \n (define_insn \"mma_<avvi4i4i2>\"\n-  [(set (match_operand:XO 0 \"fpr_reg_operand\" \"=&d\")\n-\t(unspec:XO [(match_operand:XO 1 \"fpr_reg_operand\" \"0\")\n-\t\t    (match_operand:V16QI 2 \"vsx_register_operand\" \"wa\")\n-\t\t    (match_operand:V16QI 3 \"vsx_register_operand\" \"wa\")\n-\t\t    (match_operand:SI 4 \"const_0_to_15_operand\" \"n\")\n-\t\t    (match_operand:SI 5 \"const_0_to_15_operand\" \"n\")\n-\t\t    (match_operand:SI 6 \"const_0_to_3_operand\" \"n\")]\n+  [(set (match_operand:XO 0 \"fpr_reg_operand\" \"=&d,&d\")\n+\t(unspec:XO [(match_operand:XO 1 \"fpr_reg_operand\" \"0,0\")\n+\t\t    (match_operand:V16QI 2 \"vsx_register_operand\" \"v,?wa\")\n+\t\t    (match_operand:V16QI 3 \"vsx_register_operand\" \"v,?wa\")\n+\t\t    (match_operand:SI 4 \"const_0_to_15_operand\" \"n,n\")\n+\t\t    (match_operand:SI 5 \"const_0_to_15_operand\" \"n,n\")\n+\t\t    (match_operand:SI 6 \"const_0_to_3_operand\" \"n,n\")]\n \t\t    MMA_AVVI4I4I2))]\n   \"TARGET_MMA\"\n   \"<avvi4i4i2> %A0,%x2,%x3,%4,%5,%6\"\n   [(set_attr \"type\" \"mma\")\n    (set_attr \"prefixed\" \"yes\")])\n \n (define_insn \"mma_<vvi4i4>\"\n-  [(set (match_operand:XO 0 \"fpr_reg_operand\" \"=&d\")\n-\t(unspec:XO [(match_operand:V16QI 1 \"vsx_register_operand\" \"wa\")\n-\t\t    (match_operand:V16QI 2 \"vsx_register_operand\" \"wa\")\n-\t\t    (match_operand:SI 3 \"const_0_to_15_operand\" \"n\")\n-\t\t    (match_operand:SI 4 \"const_0_to_15_operand\" \"n\")]\n+  [(set (match_operand:XO 0 \"fpr_reg_operand\" \"=&d,&d\")\n+\t(unspec:XO [(match_operand:V16QI 1 \"vsx_register_operand\" \"v,?wa\")\n+\t\t    (match_operand:V16QI 2 \"vsx_register_operand\" \"v,?wa\")\n+\t\t    (match_operand:SI 3 \"const_0_to_15_operand\" \"n,n\")\n+\t\t    (match_operand:SI 4 \"const_0_to_15_operand\" \"n,n\")]\n \t\t    MMA_VVI4I4))]\n   \"TARGET_MMA\"\n   \"<vvi4i4> %A0,%x1,%x2,%3,%4\"\n   [(set_attr \"type\" \"mma\")\n    (set_attr \"prefixed\" \"yes\")])\n \n (define_insn \"mma_<avvi4i4>\"\n-  [(set (match_operand:XO 0 \"fpr_reg_operand\" \"=&d\")\n-\t(unspec:XO [(match_operand:XO 1 \"fpr_reg_operand\" \"0\")\n-\t\t    (match_operand:V16QI 2 \"vsx_register_operand\" \"wa\")\n-\t\t    (match_operand:V16QI 3 \"vsx_register_operand\" \"wa\")\n-\t\t    (match_operand:SI 4 \"const_0_to_15_operand\" \"n\")\n-\t\t    (match_operand:SI 5 \"const_0_to_15_operand\" \"n\")]\n+  [(set (match_operand:XO 0 \"fpr_reg_operand\" \"=&d,&d\")\n+\t(unspec:XO [(match_operand:XO 1 \"fpr_reg_operand\" \"0,0\")\n+\t\t    (match_operand:V16QI 2 \"vsx_register_operand\" \"v,?wa\")\n+\t\t    (match_operand:V16QI 3 \"vsx_register_operand\" \"v,?wa\")\n+\t\t    (match_operand:SI 4 \"const_0_to_15_operand\" \"n,n\")\n+\t\t    (match_operand:SI 5 \"const_0_to_15_operand\" \"n,n\")]\n \t\t    MMA_AVVI4I4))]\n   \"TARGET_MMA\"\n   \"<avvi4i4> %A0,%x2,%x3,%4,%5\"\n   [(set_attr \"type\" \"mma\")\n    (set_attr \"prefixed\" \"yes\")])\n \n (define_insn \"mma_<pvi4i2>\"\n-  [(set (match_operand:XO 0 \"fpr_reg_operand\" \"=&d\")\n-\t(unspec:XO [(match_operand:OO 1 \"vsx_register_operand\" \"wa\")\n-\t\t    (match_operand:V16QI 2 \"vsx_register_operand\" \"wa\")\n-\t\t    (match_operand:SI 3 \"const_0_to_15_operand\" \"n\")\n-\t\t    (match_operand:SI 4 \"const_0_to_3_operand\" \"n\")]\n+  [(set (match_operand:XO 0 \"fpr_reg_operand\" \"=&d,&d\")\n+\t(unspec:XO [(match_operand:OO 1 \"vsx_register_operand\" \"v,?wa\")\n+\t\t    (match_operand:V16QI 2 \"vsx_register_operand\" \"v,?wa\")\n+\t\t    (match_operand:SI 3 \"const_0_to_15_operand\" \"n,n\")\n+\t\t    (match_operand:SI 4 \"const_0_to_3_operand\" \"n,n\")]\n \t\t    MMA_PVI4I2))]\n   \"TARGET_MMA\"\n   \"<pvi4i2> %A0,%x1,%x2,%3,%4\"\n   [(set_attr \"type\" \"mma\")\n    (set_attr \"prefixed\" \"yes\")])\n \n (define_insn \"mma_<apvi4i2>\"\n-  [(set (match_operand:XO 0 \"fpr_reg_operand\" \"=&d\")\n-\t(unspec:XO [(match_operand:XO 1 \"fpr_reg_operand\" \"0\")\n-\t\t    (match_operand:OO 2 \"vsx_register_operand\" \"wa\")\n-\t\t    (match_operand:V16QI 3 \"vsx_register_operand\" \"wa\")\n-\t\t    (match_operand:SI 4 \"const_0_to_15_operand\" \"n\")\n-\t\t    (match_operand:SI 5 \"const_0_to_3_operand\" \"n\")]\n+  [(set (match_operand:XO 0 \"fpr_reg_operand\" \"=&d,&d\")\n+\t(unspec:XO [(match_operand:XO 1 \"fpr_reg_operand\" \"0,0\")\n+\t\t    (match_operand:OO 2 \"vsx_register_operand\" \"v,?wa\")\n+\t\t    (match_operand:V16QI 3 \"vsx_register_operand\" \"v,?wa\")\n+\t\t    (match_operand:SI 4 \"const_0_to_15_operand\" \"n,n\")\n+\t\t    (match_operand:SI 5 \"const_0_to_3_operand\" \"n,n\")]\n \t\t    MMA_APVI4I2))]\n   \"TARGET_MMA\"\n   \"<apvi4i2> %A0,%x2,%x3,%4,%5\"\n   [(set_attr \"type\" \"mma\")\n    (set_attr \"prefixed\" \"yes\")])\n \n (define_insn \"mma_<vvi4i4i4>\"\n-  [(set (match_operand:XO 0 \"fpr_reg_operand\" \"=&d\")\n-\t(unspec:XO [(match_operand:V16QI 1 \"vsx_register_operand\" \"wa\")\n-\t\t    (match_operand:V16QI 2 \"vsx_register_operand\" \"wa\")\n-\t\t    (match_operand:SI 3 \"const_0_to_15_operand\" \"n\")\n-\t\t    (match_operand:SI 4 \"const_0_to_15_operand\" \"n\")\n-\t\t    (match_operand:SI 5 \"const_0_to_15_operand\" \"n\")]\n+  [(set (match_operand:XO 0 \"fpr_reg_operand\" \"=&d,&d\")\n+\t(unspec:XO [(match_operand:V16QI 1 \"vsx_register_operand\" \"v,?wa\")\n+\t\t    (match_operand:V16QI 2 \"vsx_register_operand\" \"v,?wa\")\n+\t\t    (match_operand:SI 3 \"const_0_to_15_operand\" \"n,n\")\n+\t\t    (match_operand:SI 4 \"const_0_to_15_operand\" \"n,n\")\n+\t\t    (match_operand:SI 5 \"const_0_to_15_operand\" \"n,n\")]\n \t\t    MMA_VVI4I4I4))]\n   \"TARGET_MMA\"\n   \"<vvi4i4i4> %A0,%x1,%x2,%3,%4,%5\"\n   [(set_attr \"type\" \"mma\")\n    (set_attr \"prefixed\" \"yes\")])\n \n (define_insn \"mma_<avvi4i4i4>\"\n-  [(set (match_operand:XO 0 \"fpr_reg_operand\" \"=&d\")\n-\t(unspec:XO [(match_operand:XO 1 \"fpr_reg_operand\" \"0\")\n-\t\t    (match_operand:V16QI 2 \"vsx_register_operand\" \"wa\")\n-\t\t    (match_operand:V16QI 3 \"vsx_register_operand\" \"wa\")\n-\t\t    (match_operand:SI 4 \"const_0_to_15_operand\" \"n\")\n-\t\t    (match_operand:SI 5 \"const_0_to_15_operand\" \"n\")\n-\t\t    (match_operand:SI 6 \"const_0_to_15_operand\" \"n\")]\n+  [(set (match_operand:XO 0 \"fpr_reg_operand\" \"=&d,&d\")\n+\t(unspec:XO [(match_operand:XO 1 \"fpr_reg_operand\" \"0,0\")\n+\t\t    (match_operand:V16QI 2 \"vsx_register_operand\" \"v,?wa\")\n+\t\t    (match_operand:V16QI 3 \"vsx_register_operand\" \"v,?wa\")\n+\t\t    (match_operand:SI 4 \"const_0_to_15_operand\" \"n,n\")\n+\t\t    (match_operand:SI 5 \"const_0_to_15_operand\" \"n,n\")\n+\t\t    (match_operand:SI 6 \"const_0_to_15_operand\" \"n,n\")]\n \t\t    MMA_AVVI4I4I4))]\n   \"TARGET_MMA\"\n   \"<avvi4i4i4> %A0,%x2,%x3,%4,%5,%6\""}]}