{"sha": "76ba473b99c30ddec6171840a76292d6d4b67e7c", "node_id": "C_kwDOANBUbNoAKDc2YmE0NzNiOTljMzBkZGVjNjE3MTg0MGE3NjI5MmQ2ZDRiNjdlN2M", "commit": {"author": {"name": "Bill Schmidt", "email": "wschmidt@linux.ibm.com", "date": "2021-10-12T22:37:16Z"}, "committer": {"name": "Bill Schmidt", "email": "wschmidt@linux.ibm.com", "date": "2021-10-12T22:39:18Z"}, "message": "rs6000: Fix vec_cpsgn parameter order (PR101985)\n\nThe vec_cpsgn built-in function API differs in argument order from the\ncopysign<mode>3 convention.  Currently that pattern is incorrctly used to\nimplement vec_cpsgn.  Fix that by reversing the operand order of the\nbuiltin while leaving the existing pattern in place to implement copysignf\nfor vector modes.\n\nPart of the fix when using the new built-in support requires an adjustment\nto a pending patch that replaces much of altivec.h with an automatically\ngenerated file.\n\nAlso fix a bug in the new built-in overload infrastructure where we were\nusing the VSX form of the VEC_COPYSIGN built-in when we should default to\nthe VMX form.\n\n2021-10-12  Bill Schmidt  <wschmidt@linux.ibm.com>\n\ngcc/\n\tPR target/101985\n\t* config/rs6000/altivec.h (vec_cpsgn): Swap operand order.\n\t* config/rs6000/rs6000-overload.def (VEC_COPYSIGN): Use SKIP to\n\tavoid generating an automatic #define of vec_cpsgn.  Use the\n\tcorrect built-in for V4SFmode that doesn't depend on VSX.\n\ngcc/testsuite/\n\tPR target/101985\n\t* gcc.target/powerpc/pr101985-1.c: New.\n\t* gcc.target/powerpc/pr101985-2.c: New.", "tree": {"sha": "2494135ee65f56a1a317fef93bb47d9a0a9f3e37", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2494135ee65f56a1a317fef93bb47d9a0a9f3e37"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/76ba473b99c30ddec6171840a76292d6d4b67e7c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/76ba473b99c30ddec6171840a76292d6d4b67e7c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/76ba473b99c30ddec6171840a76292d6d4b67e7c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/76ba473b99c30ddec6171840a76292d6d4b67e7c/comments", "author": null, "committer": null, "parents": [{"sha": "4ca446a46bef8c127d7aaeb2d4bb4625edc7f84e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4ca446a46bef8c127d7aaeb2d4bb4625edc7f84e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4ca446a46bef8c127d7aaeb2d4bb4625edc7f84e"}], "stats": {"total": 42, "additions": 39, "deletions": 3}, "files": [{"sha": "ea72c9c1789914f414165f5a2ffe1a4f0bd42839", "filename": "gcc/config/rs6000/altivec.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/76ba473b99c30ddec6171840a76292d6d4b67e7c/gcc%2Fconfig%2Frs6000%2Faltivec.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/76ba473b99c30ddec6171840a76292d6d4b67e7c/gcc%2Fconfig%2Frs6000%2Faltivec.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Faltivec.h?ref=76ba473b99c30ddec6171840a76292d6d4b67e7c", "patch": "@@ -129,7 +129,7 @@\n #define vec_vcfux __builtin_vec_vcfux\n #define vec_cts __builtin_vec_cts\n #define vec_ctu __builtin_vec_ctu\n-#define vec_cpsgn __builtin_vec_copysign\n+#define vec_cpsgn(x,y) __builtin_vec_copysign(y,x)\n #define vec_double __builtin_vec_double\n #define vec_doublee __builtin_vec_doublee\n #define vec_doubleo __builtin_vec_doubleo"}, {"sha": "4f583312f361de6e128cba981c02d6e64f9d734e", "filename": "gcc/config/rs6000/rs6000-overload.def", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/76ba473b99c30ddec6171840a76292d6d4b67e7c/gcc%2Fconfig%2Frs6000%2Frs6000-overload.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/76ba473b99c30ddec6171840a76292d6d4b67e7c/gcc%2Fconfig%2Frs6000%2Frs6000-overload.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000-overload.def?ref=76ba473b99c30ddec6171840a76292d6d4b67e7c", "patch": "@@ -1154,9 +1154,9 @@\n   vus __builtin_vec_convert_4f32_8f16 (vf, vf);\n     CONVERT_4F32_8F16\n \n-[VEC_COPYSIGN, vec_cpsgn, __builtin_vec_copysign]\n+[VEC_COPYSIGN, SKIP, __builtin_vec_copysign]\n   vf __builtin_vec_copysign (vf, vf);\n-    CPSGNSP\n+    COPYSIGN_V4SF\n   vd __builtin_vec_copysign (vd, vd);\n     CPSGNDP\n "}, {"sha": "b4753ab83d7c6a0bc201fa3cc105a066945a90a4", "filename": "gcc/testsuite/gcc.target/powerpc/pr101985-1.c", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/76ba473b99c30ddec6171840a76292d6d4b67e7c/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fpr101985-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/76ba473b99c30ddec6171840a76292d6d4b67e7c/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fpr101985-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fpr101985-1.c?ref=76ba473b99c30ddec6171840a76292d6d4b67e7c", "patch": "@@ -0,0 +1,18 @@\n+/* PR target/101985 */\n+/* { dg-do run } */\n+/* { dg-require-effective-target vsx_hw } */\n+/* { dg-options \"-O2 -mvsx\" } */\n+\n+#include <altivec.h>\n+\n+int\n+main (void)\n+{\n+  vector float a = {  1,  2, - 3, - 4};\n+  vector float b = {-10, 20, -30,  40};\n+  vector float c = { 10, 20, -30, -40};\n+  a = vec_cpsgn (a, b);\n+  if (! vec_all_eq (a, c))\n+    __builtin_abort ();\n+  return 0;\n+}"}, {"sha": "435d3a9cb8085998a4db53736d1c7a2a05a93220", "filename": "gcc/testsuite/gcc.target/powerpc/pr101985-2.c", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/76ba473b99c30ddec6171840a76292d6d4b67e7c/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fpr101985-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/76ba473b99c30ddec6171840a76292d6d4b67e7c/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fpr101985-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fpr101985-2.c?ref=76ba473b99c30ddec6171840a76292d6d4b67e7c", "patch": "@@ -0,0 +1,18 @@\n+/* PR target/101985 */\n+/* { dg-do run } */\n+/* { dg-require-effective-target vsx_hw } */\n+/* { dg-options \"-O2 -mvsx\" } */\n+\n+#include <altivec.h>\n+\n+int\n+main (void)\n+{\n+  vector double a = {  1,  -4};\n+  vector double b = { -10,  40};\n+  vector double c = {  10, -40};\n+  a = vec_cpsgn (a, b);\n+  if (! vec_all_eq (a, c))\n+    __builtin_abort ();\n+  return 0;\n+}"}]}