{"sha": "c3840092598dda115876b59cd81eba36c28cdb95", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzM4NDAwOTI1OThkZGExMTU4NzZiNTljZDgxZWJhMzZjMjhjZGI5NQ==", "commit": {"author": {"name": "James E Wilson", "email": "wilson@specifixinc.com", "date": "2004-03-18T23:47:31Z"}, "committer": {"name": "Jim Wilson", "email": "wilson@gcc.gnu.org", "date": "2004-03-18T23:47:31Z"}, "message": "Another patch for pending SB-1 DFA scheduler.\n\n\t* config/mips/mips.md (type): Split move into arith and fmove.  Split\n\thilo into mthilo and mfhilo.  Add trap.  Delete icmp.  Fix all uses.\n\t* config/mips/5400.md (ir_vr54_hilo, ir_vr54_arith, ir_vr54_fabs):\n\tLikewise.\n\t* config/mips/5500.md (ir_vr55_hilo, ir_vr55_arith, ir_vr55_fabs):\n\tLikewise.\n\t* config/mips/7000.md (rm7_int_other, rm7_mthilo, rm7_mfhilo,\n\trm7_fp_quick): Likewise.\n\t* config/mips/9000.md (rm9k_int, rm9k_mfhilo, rm9k_mthilo,\n\trm9k_fquick): Likewise.\n\t* config/mips/sr71k.md (ir_sr70_hilo, ir_sr70_arith, ir_sr70_fabs):\n\tLikewise.\n\t(ir_sr70_icmp): Delete.\n\nFrom-SVN: r79650", "tree": {"sha": "8eb29e5e680d62a3ef009d05ab78dbcba3d33c0c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8eb29e5e680d62a3ef009d05ab78dbcba3d33c0c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c3840092598dda115876b59cd81eba36c28cdb95", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c3840092598dda115876b59cd81eba36c28cdb95", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c3840092598dda115876b59cd81eba36c28cdb95", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c3840092598dda115876b59cd81eba36c28cdb95/comments", "author": null, "committer": null, "parents": [{"sha": "a2982c1b2f165280aded2b33b62ad18a13cb3fee", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a2982c1b2f165280aded2b33b62ad18a13cb3fee", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a2982c1b2f165280aded2b33b62ad18a13cb3fee"}], "stats": {"total": 133, "additions": 71, "deletions": 62}, "files": [{"sha": "b03f46f614f000abd97c1143f0e81c182f2120bd", "filename": "gcc/ChangeLog", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c3840092598dda115876b59cd81eba36c28cdb95/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c3840092598dda115876b59cd81eba36c28cdb95/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=c3840092598dda115876b59cd81eba36c28cdb95", "patch": "@@ -1,3 +1,19 @@\n+2004-03-18  James E Wilson  <wilson@specifixinc.com>\n+\n+\t* config/mips/mips.md (type): Split move into arith and fmove.  Split\n+\thilo into mthilo and mfhilo.  Add trap.  Delete icmp.  Fix all uses.\n+\t* config/mips/5400.md (ir_vr54_hilo, ir_vr54_arith, ir_vr54_fabs):\n+\tLikewise.\n+\t* config/mips/5500.md (ir_vr55_hilo, ir_vr55_arith, ir_vr55_fabs):\n+\tLikewise.\n+\t* config/mips/7000.md (rm7_int_other, rm7_mthilo, rm7_mfhilo,\n+\trm7_fp_quick): Likewise.\n+\t* config/mips/9000.md (rm9k_int, rm9k_mfhilo, rm9k_mthilo,\n+\trm9k_fquick): Likewise.\n+\t* config/mips/sr71k.md (ir_sr70_hilo, ir_sr70_arith, ir_sr70_fabs):\n+\tLikewise.\n+\t(ir_sr70_icmp): Delete.\n+\n 2004-03-18  Richard Kenner  <kenner@vlsi1.ultra.nyu.edu>\n \t\n \t* tree.h (TREE_CHECK2, TREE_CHECK3, TREE_CHECK5): New macros."}, {"sha": "9bf09ce9f5b15ba5ee356f7b24ed4c34409926a9", "filename": "gcc/config/mips/5400.md", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c3840092598dda115876b59cd81eba36c28cdb95/gcc%2Fconfig%2Fmips%2F5400.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c3840092598dda115876b59cd81eba36c28cdb95/gcc%2Fconfig%2Fmips%2F5400.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2F5400.md?ref=c3840092598dda115876b59cd81eba36c28cdb95", "patch": "@@ -55,12 +55,12 @@\n \n (define_insn_reservation \"ir_vr54_hilo\" 1\n   (and (eq_attr \"cpu\" \"r5400\")\n-       (eq_attr \"type\" \"hilo\"))\n+       (eq_attr \"type\" \"mthilo,mfhilo\"))\n   \"vr54_dp0|vr54_dp1\")\n \n (define_insn_reservation \"ir_vr54_arith\" 1\n   (and (eq_attr \"cpu\" \"r5400\")\n-       (eq_attr \"type\" \"move,arith,shift,slt,clz,const,icmp,nop\"))\n+       (eq_attr \"type\" \"arith,shift,slt,clz,const,nop,trap\"))\n   \"vr54_dp0|vr54_dp1\")\n \n (define_insn_reservation \"ir_vr54_imul_si\" 3\n@@ -135,7 +135,7 @@\n \n (define_insn_reservation \"ir_vr54_fabs\" 2\n   (and (eq_attr \"cpu\" \"r5400\")\n-       (eq_attr \"type\" \"fabs,fneg\"))\n+       (eq_attr \"type\" \"fabs,fneg,fmove\"))\n   \"vr54_dp0|vr54_dp1\")\n \n (define_insn_reservation \"ir_vr54_fcmp\" 2"}, {"sha": "d912f666ca66b24bc3175e7c9783d5dbe1cd8a8a", "filename": "gcc/config/mips/5500.md", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c3840092598dda115876b59cd81eba36c28cdb95/gcc%2Fconfig%2Fmips%2F5500.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c3840092598dda115876b59cd81eba36c28cdb95/gcc%2Fconfig%2Fmips%2F5500.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2F5500.md?ref=c3840092598dda115876b59cd81eba36c28cdb95", "patch": "@@ -51,12 +51,12 @@\n \n (define_insn_reservation \"ir_vr55_hilo\" 2\n   (and (eq_attr \"cpu\" \"r5500\")\n-       (eq_attr \"type\" \"hilo\"))\n+       (eq_attr \"type\" \"mthilo,mfhilo\"))\n   \"vr55_dp0|vr55_dp1\")\n \n (define_insn_reservation \"ir_vr55_arith\" 1\n   (and (eq_attr \"cpu\" \"r5500\")\n-       (eq_attr \"type\" \"move,arith,shift,slt,clz,const,icmp,nop\"))\n+       (eq_attr \"type\" \"arith,shift,slt,clz,const,nop,trap\"))\n   \"vr55_dp0|vr55_dp1\")\n \n (define_insn_reservation \"ir_vr55_imul_si\" 3\n@@ -133,7 +133,7 @@\n \n (define_insn_reservation \"ir_vr55_fabs\" 2\n   (and (eq_attr \"cpu\" \"r5500\")\n-       (eq_attr \"type\" \"fabs,fneg\"))\n+       (eq_attr \"type\" \"fabs,fneg,fmove\"))\n   \"vr55_fp\")\n \n (define_insn_reservation \"ir_vr55_fcmp\" 2"}, {"sha": "55402b95931b2ebccf9bd7e6dc6e750468964d64", "filename": "gcc/config/mips/7000.md", "status": "modified", "additions": 4, "deletions": 6, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c3840092598dda115876b59cd81eba36c28cdb95/gcc%2Fconfig%2Fmips%2F7000.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c3840092598dda115876b59cd81eba36c28cdb95/gcc%2Fconfig%2Fmips%2F7000.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2F7000.md?ref=c3840092598dda115876b59cd81eba36c28cdb95", "patch": "@@ -88,7 +88,7 @@\n \n (define_insn_reservation \"rm7_int_other\" 1\n \t\t\t (and (eq_attr \"cpu\" \"r7000\")\n-\t\t\t      (eq_attr \"type\" \"arith,shift,slt,clz,const,move,condmove,icmp,nop\"))\n+\t\t\t      (eq_attr \"type\" \"arith,shift,slt,clz,const,condmove,nop,trap\"))\n \t\t\t \"rm7_iaddsub\")\n \n (define_insn_reservation \"rm7_ld\" 2 (and (eq_attr \"cpu\" \"r7000\")\n@@ -132,14 +132,12 @@\n ;; Move to/from HI/LO.\n (define_insn_reservation \"rm7_mthilo\" 3\n \t\t\t (and (eq_attr \"cpu\" \"r7000\")\n-\t\t\t      (and (eq_attr \"type\" \"hilo\")\n-\t\t\t\t   (match_operand 0 \"hilo_operand\" \"\")))\n+\t\t\t      (eq_attr \"type\" \"mthilo\"))\n \t\t\t \"rm7_impydiv\")\n \n (define_insn_reservation \"rm7_mfhilo\" 1\n \t\t\t (and (eq_attr \"cpu\" \"r7000\")\n-\t\t\t      (and (eq_attr \"type\" \"hilo\")\n-\t\t\t\t   (not (match_operand 0 \"hilo_operand\" \"\"))))\n+\t\t\t      (eq_attr \"type\" \"mfhilo\"))\n \t\t\t \"rm7_impydiv\")\n \n ;; Move to/from fp coprocessor.\n@@ -156,7 +154,7 @@\n ;;\n (define_insn_reservation \"rm7_fp_quick\" 4\n \t\t\t (and (eq_attr \"cpu\" \"r7000\")\n-\t\t\t      (eq_attr \"type\" \"fneg,fcmp,fabs\"))\n+\t\t\t      (eq_attr \"type\" \"fneg,fcmp,fabs,fmove\"))\n \t\t\t \"rm7_fpadd\")\n \n (define_insn_reservation \"rm7_fp_other\" 4"}, {"sha": "b99dbbe478faa5b59891ae27c4c31e42416eeb9f", "filename": "gcc/config/mips/9000.md", "status": "modified", "additions": 4, "deletions": 6, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c3840092598dda115876b59cd81eba36c28cdb95/gcc%2Fconfig%2Fmips%2F9000.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c3840092598dda115876b59cd81eba36c28cdb95/gcc%2Fconfig%2Fmips%2F9000.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2F9000.md?ref=c3840092598dda115876b59cd81eba36c28cdb95", "patch": "@@ -52,7 +52,7 @@\n \n (define_insn_reservation \"rm9k_int\" 1\n   (and (eq_attr \"cpu\" \"r9000\")\n-       (eq_attr \"type\" \"move,arith,shift,slt,clz,const,icmp,nop\"))\n+       (eq_attr \"type\" \"arith,shift,slt,clz,const,nop,trap\"))\n   \"rm9k_any1 | rm9k_any2\")\n \n (define_insn_reservation \"rm9k_int_cmove\" 2\n@@ -88,14 +88,12 @@\n \n (define_insn_reservation \"rm9k_mfhilo\" 1\n   (and (eq_attr \"cpu\" \"r9000\")\n-       (and (eq_attr \"type\" \"hilo\")\n-\t    (not (match_operand 0 \"hilo_operand\" \"\"))))\n+       (eq_attr \"type\" \"mfhilo\"))\n   \"rm9k_f_int\")\n \n (define_insn_reservation \"rm9k_mthilo\" 5\n   (and (eq_attr \"cpu\" \"r9000\")\n-       (and (eq_attr \"type\" \"hilo\")\n-\t    (match_operand 0 \"hilo_operand\" \"\")))\n+       (eq_attr \"type\" \"mthilo\"))\n   \"rm9k_f_int\")\n \n (define_insn_reservation \"rm9k_xfer\" 2\n@@ -105,7 +103,7 @@\n \n (define_insn_reservation \"rm9k_fquick\" 2\n   (and (eq_attr \"cpu\" \"r9000\")\n-       (eq_attr \"type\" \"fabs,fneg,fcmp\"))\n+       (eq_attr \"type\" \"fabs,fneg,fcmp,fmove\"))\n   \"rm9k_f_float\")\n \n (define_insn_reservation \"rm9k_fcmove\" 2"}, {"sha": "e0b2e9184d558f6f5f3503e79c14de046745fa82", "filename": "gcc/config/mips/mips.md", "status": "modified", "additions": 38, "deletions": 35, "changes": 73, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c3840092598dda115876b59cd81eba36c28cdb95/gcc%2Fconfig%2Fmips%2Fmips.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c3840092598dda115876b59cd81eba36c28cdb95/gcc%2Fconfig%2Fmips%2Fmips.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fmips.md?ref=c3840092598dda115876b59cd81eba36c28cdb95", "patch": "@@ -101,19 +101,20 @@\n ;; fpidxstore\tfloating point indexed store\n ;; prefetch\tmemory prefetch (register + offset)\n ;; prefetchx\tmemory indexed prefetch (register + register)\n-;; move\t\tdata movement within same register set\n ;; condmove\tconditional moves\n ;; xfer\t\ttransfer to/from coprocessor\n-;; hilo\t\ttransfer of hi/lo registers\n+;; mthilo\ttransfer to hi/lo registers\n+;; mfhilo\ttransfer from hi/lo registers\n+;; const\tload constant\n ;; arith\tinteger arithmetic and logical instructions\n ;; shift\tinteger shift instructions\n-;; clz\t\tthe clz and clo instructions\n ;; slt\t\tset less than instructions\n-;; const\tload constant\n+;; clz\t\tthe clz and clo instructions\n+;; trap\t\ttrap if instructions\n ;; imul\t\tinteger multiply\n ;; imadd\tinteger multiply-add\n ;; idiv\t\tinteger divide\n-;; icmp\t\tinteger compare\n+;; fmove\tfloating point register move\n ;; fadd\t\tfloating point add/subtract\n ;; fmul\t\tfloating point multiply\n ;; fmadd\tfloating point multiply-add\n@@ -127,7 +128,7 @@\n ;; multi\tmultiword sequence (or user asm statements)\n ;; nop\t\tno operation\n (define_attr \"type\"\n-  \"unknown,branch,jump,call,load,fpload,fpidxload,store,fpstore,fpidxstore,prefetch,prefetchx,move,condmove,xfer,hilo,const,arith,shift,slt,clz,imul,imadd,idiv,icmp,fadd,fmul,fmadd,fdiv,fabs,fneg,fcmp,fcvt,fsqrt,frsqrt,multi,nop\"\n+  \"unknown,branch,jump,call,load,fpload,fpidxload,store,fpstore,fpidxstore,prefetch,prefetchx,condmove,xfer,mthilo,mfhilo,const,arith,shift,slt,clz,trap,imul,imadd,idiv,fmove,fadd,fmul,fmadd,fdiv,fabs,fneg,fcmp,fcvt,fsqrt,frsqrt,multi,nop\"\n   (cond [(eq_attr \"jal\" \"!unset\") (const_string \"call\")\n \t (eq_attr \"got\" \"load\") (const_string \"load\")]\n \t(const_string \"unknown\")))\n@@ -243,9 +244,8 @@\n \t      (ne (symbol_ref \"TARGET_FIX_R4000\") (const_int 0)))\n \t (const_string \"hilo\")\n \n-\t (and (eq_attr \"type\" \"hilo\")\n-\t      (and (eq (symbol_ref \"ISA_HAS_HILO_INTERLOCKS\") (const_int 0))\n-\t\t   (match_operand 1 \"hilo_operand\" \"\")))\n+\t (and (eq_attr \"type\" \"mfhilo\")\n+\t      (eq (symbol_ref \"ISA_HAS_HILO_INTERLOCKS\") (const_int 0)))\n \t (const_string \"hilo\")]\n \t(const_string \"none\")))\n \n@@ -324,7 +324,7 @@\n (define_function_unit \"memory\"   1 0 (eq_attr \"type\" \"xfer\") 2 0)\n \n (define_function_unit \"imuldiv\"  1 0\n-  (eq_attr \"type\" \"hilo\")\n+  (eq_attr \"type\" \"mthilo,mfhilo\")\n   1 3)\n \n (define_function_unit \"imuldiv\"  1 0\n@@ -339,7 +339,7 @@\n ;; selecting instructions to between the two instructions.\n \n (define_function_unit \"imuldiv\" 1 0\n-  (and (eq_attr \"type\" \"hilo\") (ne (symbol_ref \"TARGET_MIPS16\") (const_int 0)))\n+  (and (eq_attr \"type\" \"mfhilo\") (ne (symbol_ref \"TARGET_MIPS16\") (const_int 0)))\n   1 5)\n \n (define_function_unit \"imuldiv\"  1 0\n@@ -462,12 +462,12 @@\n   3 0)\n \n (define_function_unit \"adder\" 1 1\n-  (and (eq_attr \"type\" \"fabs,fneg\")\n+  (and (eq_attr \"type\" \"fabs,fneg,fmove\")\n        (eq_attr \"cpu\" \"!r3000,r3900,r4600,r4650,r4300,r5000\"))\n   2 0)\n \n (define_function_unit \"adder\" 1 1\n-  (and (eq_attr \"type\" \"fabs,fneg\") (eq_attr \"cpu\" \"r3000,r3900,r4600,r4650,r5000\"))\n+  (and (eq_attr \"type\" \"fabs,fneg,fmove\") (eq_attr \"cpu\" \"r3000,r3900,r4600,r4650,r5000\"))\n   1 0)\n \n (define_function_unit \"mult\" 1 1\n@@ -593,7 +593,7 @@\n   3 3)\n \n (define_function_unit \"imuldiv\" 1 0\n-  (and (eq_attr \"type\" \"fcmp,fabs,fneg\") (eq_attr \"cpu\" \"r4300\"))\n+  (and (eq_attr \"type\" \"fcmp,fabs,fneg,fmove\") (eq_attr \"cpu\" \"r4300\"))\n   1 1)\n \n (define_function_unit \"imuldiv\" 1 0\n@@ -639,7 +639,8 @@\n     return \"break 0\";\n   else\n     return \"break\";\n-})\n+}\n+  [(set_attr \"type\"\t\"trap\")])\n \n (define_expand \"conditional_trap\"\n   [(trap_if (match_operator 0 \"cmp_op\"\n@@ -662,15 +663,17 @@\n                              (match_operand:SI 2 \"arith_operand\" \"dI\")])\n \t    (const_int 0))]\n   \"ISA_HAS_COND_TRAP\"\n-  \"t%C0\\t%z1,%z2\")\n+  \"t%C0\\t%z1,%z2\"\n+  [(set_attr \"type\"\t\"trap\")])\n \n (define_insn \"\"\n   [(trap_if (match_operator 0 \"trap_cmp_op\"\n                             [(match_operand:DI 1 \"reg_or_0_operand\" \"dJ\")\n                              (match_operand:DI 2 \"arith_operand\" \"dI\")])\n \t    (const_int 0))]\n   \"TARGET_64BIT && ISA_HAS_COND_TRAP\"\n-  \"t%C0\\t%z1,%z2\")\n+  \"t%C0\\t%z1,%z2\"\n+  [(set_attr \"type\"\t\"trap\")])\n \f\n ;;\n ;;  ....................\n@@ -4535,7 +4538,7 @@ dsrl\\t%3,%3,1\\n\\\n    && (register_operand (operands[0], DImode)\n        || reg_or_0_operand (operands[1], DImode))\"\n   { return mips_output_move (operands[0], operands[1]); }\n-  [(set_attr \"type\"\t\"move,arith,load,store,hilo,hilo,hilo,xfer,load,xfer,store\")\n+  [(set_attr \"type\"\t\"arith,arith,load,store,mthilo,mfhilo,mthilo,xfer,load,xfer,store\")\n    (set_attr \"mode\"\t\"DI\")\n    (set_attr \"length\"   \"8,16,*,*,8,8,8,8,*,8,*\")])\n \n@@ -4546,7 +4549,7 @@ dsrl\\t%3,%3,1\\n\\\n    && (register_operand (operands[0], DImode)\n        || register_operand (operands[1], DImode))\"\n   { return mips_output_move (operands[0], operands[1]); }\n-  [(set_attr \"type\"\t\"move,move,move,arith,arith,load,store,hilo\")\n+  [(set_attr \"type\"\t\"arith,arith,arith,arith,arith,load,store,mfhilo\")\n    (set_attr \"mode\"\t\"DI\")\n    (set_attr \"length\"\t\"8,8,8,8,12,*,*,8\")])\n \n@@ -4557,7 +4560,7 @@ dsrl\\t%3,%3,1\\n\\\n    && (register_operand (operands[0], DImode)\n        || reg_or_0_operand (operands[1], DImode))\"\n   { return mips_output_move (operands[0], operands[1]); }\n-  [(set_attr \"type\"\t\"move,const,const,load,store,move,xfer,fpload,xfer,fpstore,hilo,hilo,hilo,xfer,load,xfer,store\")\n+  [(set_attr \"type\"\t\"arith,const,const,load,store,fmove,xfer,fpload,xfer,fpstore,mthilo,mfhilo,mthilo,xfer,load,xfer,store\")\n    (set_attr \"mode\"\t\"DI\")\n    (set_attr \"length\"\t\"4,*,*,*,*,4,4,*,4,*,4,4,4,8,*,8,*\")])\n \n@@ -4568,7 +4571,7 @@ dsrl\\t%3,%3,1\\n\\\n    && (register_operand (operands[0], DImode)\n        || register_operand (operands[1], DImode))\"\n   { return mips_output_move (operands[0], operands[1]); }\n-  [(set_attr \"type\"\t\"move,move,move,arith,arith,const,load,store,hilo\")\n+  [(set_attr \"type\"\t\"arith,arith,arith,arith,arith,const,load,store,mfhilo\")\n    (set_attr \"mode\"\t\"DI\")\n    (set_attr_alternative \"length\"\n \t\t[(const_int 4)\n@@ -4681,7 +4684,7 @@ dsrl\\t%3,%3,1\\n\\\n    && (register_operand (operands[0], SImode)\n        || reg_or_0_operand (operands[1], SImode))\"\n   { return mips_output_move (operands[0], operands[1]); }\n-  [(set_attr \"type\"\t\"move,const,const,load,store,move,xfer,fpload,xfer,fpstore,xfer,xfer,hilo,hilo,hilo,xfer,load,xfer,store\")\n+  [(set_attr \"type\"\t\"arith,const,const,load,store,fmove,xfer,fpload,xfer,fpstore,xfer,xfer,mthilo,mfhilo,mthilo,xfer,load,xfer,store\")\n    (set_attr \"mode\"\t\"SI\")\n    (set_attr \"length\"\t\"4,*,*,*,*,4,4,*,4,*,4,4,4,4,4,4,*,4,*\")])\n \n@@ -4692,7 +4695,7 @@ dsrl\\t%3,%3,1\\n\\\n    && (register_operand (operands[0], SImode)\n        || register_operand (operands[1], SImode))\"\n   { return mips_output_move (operands[0], operands[1]); }\n-  [(set_attr \"type\"\t\"move,move,move,arith,arith,const,load,store,hilo\")\n+  [(set_attr \"type\"\t\"arith,arith,arith,arith,arith,const,load,store,mfhilo\")\n    (set_attr \"mode\"\t\"SI\")\n    (set_attr_alternative \"length\"\n \t\t[(const_int 4)\n@@ -4799,7 +4802,7 @@ dsrl\\t%3,%3,1\\n\\\n \t(match_operand:CC 1 \"general_operand\" \"z,*d,*m,*d,*f,*d,*f,*m,*f\"))]\n   \"ISA_HAS_8CC && TARGET_HARD_FLOAT\"\n   { return mips_output_move (operands[0], operands[1]); }\n-  [(set_attr \"type\"\t\"move,move,load,store,xfer,xfer,move,fpload,fpstore\")\n+  [(set_attr \"type\"\t\"xfer,arith,load,store,xfer,xfer,fmove,fpload,fpstore\")\n    (set_attr \"mode\"\t\"SI\")\n    (set_attr \"length\"\t\"8,4,*,*,4,4,4,*,*\")])\n \n@@ -4962,7 +4965,7 @@ dsrl\\t%3,%3,1\\n\\\n     mov.s\\t%0,%1\n     mt%0\\t%1\n     mf%1\\t%0\"\n-  [(set_attr \"type\"\t\"move,arith,load,store,xfer,xfer,move,hilo,hilo\")\n+  [(set_attr \"type\"\t\"arith,arith,load,store,xfer,xfer,fmove,mthilo,mfhilo\")\n    (set_attr \"mode\"\t\"HI\")\n    (set_attr \"length\"\t\"4,4,*,*,4,4,4,4,4\")])\n \n@@ -4981,7 +4984,7 @@ dsrl\\t%3,%3,1\\n\\\n     lhu\\t%0,%1\n     sh\\t%1,%0\n     mf%1\\t%0\"\n-  [(set_attr \"type\"\t\"move,move,move,arith,arith,load,store,hilo\")\n+  [(set_attr \"type\"\t\"arith,arith,arith,arith,arith,load,store,mfhilo\")\n    (set_attr \"mode\"\t\"HI\")\n    (set_attr_alternative \"length\"\n \t\t[(const_int 4)\n@@ -5072,7 +5075,7 @@ dsrl\\t%3,%3,1\\n\\\n     mov.s\\t%0,%1\n     mt%0\\t%1\n     mf%1\\t%0\"\n-  [(set_attr \"type\"\t\"move,arith,load,store,xfer,xfer,move,hilo,hilo\")\n+  [(set_attr \"type\"\t\"arith,arith,load,store,xfer,xfer,fmove,mthilo,mfhilo\")\n    (set_attr \"mode\"\t\"QI\")\n    (set_attr \"length\"\t\"4,4,*,*,4,4,4,4,4\")])\n \n@@ -5091,7 +5094,7 @@ dsrl\\t%3,%3,1\\n\\\n     lbu\\t%0,%1\n     sb\\t%1,%0\n     mf%1\\t%0\"\n-  [(set_attr \"type\"\t\"move,move,move,arith,arith,load,store,hilo\")\n+  [(set_attr \"type\"\t\"arith,arith,arith,arith,arith,load,store,mfhilo\")\n    (set_attr \"mode\"\t\"QI\")\n    (set_attr \"length\"\t\"4,4,4,4,8,*,*,4\")])\n \n@@ -5143,7 +5146,7 @@ dsrl\\t%3,%3,1\\n\\\n    && (register_operand (operands[0], SFmode)\n        || reg_or_0_operand (operands[1], SFmode))\"\n   { return mips_output_move (operands[0], operands[1]); }\n-  [(set_attr \"type\"\t\"move,xfer,fpload,fpstore,xfer,xfer,move,load,store\")\n+  [(set_attr \"type\"\t\"fmove,xfer,fpload,fpstore,xfer,xfer,arith,load,store\")\n    (set_attr \"mode\"\t\"SF\")\n    (set_attr \"length\"\t\"4,4,*,*,4,4,4,*,*\")])\n \n@@ -5154,7 +5157,7 @@ dsrl\\t%3,%3,1\\n\\\n    && (register_operand (operands[0], SFmode)\n        || reg_or_0_operand (operands[1], SFmode))\"\n   { return mips_output_move (operands[0], operands[1]); }\n-  [(set_attr \"type\"\t\"move,load,store\")\n+  [(set_attr \"type\"\t\"arith,load,store\")\n    (set_attr \"mode\"\t\"SF\")\n    (set_attr \"length\"\t\"4,*,*\")])\n \n@@ -5165,7 +5168,7 @@ dsrl\\t%3,%3,1\\n\\\n    && (register_operand (operands[0], SFmode)\n        || register_operand (operands[1], SFmode))\"\n   { return mips_output_move (operands[0], operands[1]); }\n-  [(set_attr \"type\"\t\"move,move,move,load,store\")\n+  [(set_attr \"type\"\t\"arith,arith,arith,load,store\")\n    (set_attr \"mode\"\t\"SF\")\n    (set_attr \"length\"\t\"4,4,4,*,*\")])\n \n@@ -5188,7 +5191,7 @@ dsrl\\t%3,%3,1\\n\\\n    && (register_operand (operands[0], DFmode)\n        || reg_or_0_operand (operands[1], DFmode))\"\n   { return mips_output_move (operands[0], operands[1]); }\n-  [(set_attr \"type\"\t\"move,xfer,fpload,fpstore,xfer,xfer,move,load,store\")\n+  [(set_attr \"type\"\t\"fmove,xfer,fpload,fpstore,xfer,xfer,arith,load,store\")\n    (set_attr \"mode\"\t\"DF\")\n    (set_attr \"length\"\t\"4,4,*,*,4,4,4,*,*\")])\n \n@@ -5199,7 +5202,7 @@ dsrl\\t%3,%3,1\\n\\\n    && (register_operand (operands[0], DFmode)\n        || reg_or_0_operand (operands[1], DFmode))\"\n   { return mips_output_move (operands[0], operands[1]); }\n-  [(set_attr \"type\"\t\"move,xfer,fpload,fpstore,xfer,xfer,move,load,store\")\n+  [(set_attr \"type\"\t\"fmove,xfer,fpload,fpstore,xfer,xfer,arith,load,store\")\n    (set_attr \"mode\"\t\"DF\")\n    (set_attr \"length\"\t\"4,8,*,*,8,8,8,*,*\")])\n \n@@ -5210,7 +5213,7 @@ dsrl\\t%3,%3,1\\n\\\n    && (register_operand (operands[0], DFmode)\n        || reg_or_0_operand (operands[1], DFmode))\"\n   { return mips_output_move (operands[0], operands[1]); }\n-  [(set_attr \"type\"\t\"move,load,store,xfer,xfer,move\")\n+  [(set_attr \"type\"\t\"arith,load,store,xfer,xfer,fmove\")\n    (set_attr \"mode\"\t\"DF\")\n    (set_attr \"length\"\t\"8,*,*,4,4,4\")])\n \n@@ -5221,7 +5224,7 @@ dsrl\\t%3,%3,1\\n\\\n    && (register_operand (operands[0], DFmode)\n        || register_operand (operands[1], DFmode))\"\n   { return mips_output_move (operands[0], operands[1]); }\n-  [(set_attr \"type\"\t\"move,move,move,load,store\")\n+  [(set_attr \"type\"\t\"arith,arith,arith,load,store\")\n    (set_attr \"mode\"\t\"DF\")\n    (set_attr \"length\"\t\"8,8,8,*,*\")])\n "}, {"sha": "ef7e650da77a946c1ad7d8e9d48237ae39c76e30", "filename": "gcc/config/mips/sr71k.md", "status": "modified", "additions": 3, "deletions": 9, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c3840092598dda115876b59cd81eba36c28cdb95/gcc%2Fconfig%2Fmips%2Fsr71k.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c3840092598dda115876b59cd81eba36c28cdb95/gcc%2Fconfig%2Fmips%2Fsr71k.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fsr71k.md?ref=c3840092598dda115876b59cd81eba36c28cdb95", "patch": "@@ -195,13 +195,13 @@\n (define_insn_reservation \"ir_sr70_hilo\"\n                                1\n                           (and (eq_attr \"cpu\" \"sr71000\")\n-                               (eq_attr \"type\" \"hilo\"))\n+                               (eq_attr \"type\" \"mthilo,mfhilo\"))\n                          \"ri_insns\")\n \n (define_insn_reservation \"ir_sr70_arith\"\n                                1\n                           (and (eq_attr \"cpu\" \"sr71000\")\n-                               (eq_attr \"type\" \"move,arith,shift,slt,clz,const\"))\n+                               (eq_attr \"type\" \"arith,shift,slt,clz,const,trap\"))\n                          \"ri_insns\")\n \n ;; emulate repeat (dispatch stall) by spending extra cycle(s) in\n@@ -236,12 +236,6 @@\n                                     (eq_attr \"mode\" \"DI\")))\n                          \"ri_alux,ipu_alux,(ipu_macc_iter*70)\")\n \n-(define_insn_reservation \"ir_sr70_icmp\"\n-                               1\n-                          (and (eq_attr \"cpu\" \"sr71000\")\n-                               (eq_attr \"type\" \"icmp\"))\n-                         \"ri_insns\")\n-\n ;; extra reservations of fpu_fpu are for repeat latency\n (define_insn_reservation \"ir_sr70_fadd_sf\"\n                                8\n@@ -298,7 +292,7 @@\n (define_insn_reservation \"ir_sr70_fabs\"\n                                4\n                           (and (eq_attr \"cpu\" \"sr71000\")\n-                               (eq_attr \"type\" \"fabs,fneg\"))\n+                               (eq_attr \"type\" \"fabs,fneg,fmove\"))\n                          \"rf_insn,fpu_fpu\")\n \n (define_insn_reservation \"ir_sr70_fcmp\""}]}