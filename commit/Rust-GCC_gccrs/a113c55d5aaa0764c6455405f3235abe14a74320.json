{"sha": "a113c55d5aaa0764c6455405f3235abe14a74320", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTExM2M1NWQ1YWFhMDc2NGM2NDU1NDA1ZjMyMzVhYmUxNGE3NDMyMA==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2010-09-10T13:53:51Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2010-09-10T13:53:51Z"}, "message": "[multiple changes]\n\n2010-09-10  Vincent Celier  <celier@adacore.com>\n\n\t* vms_data.ads: Add new GNAT BIND qualifiers /32_MALLOC (for -H32) and\n\t/64_MALLOC (for -H64).\n\n2010-09-10  Robert Dewar  <dewar@adacore.com>\n\n\t* errout.adb (Error_Msg_Internal): Test Parsing_Main_Subunit flag\n\t(Error_Msg_NW): Test Parsing_Main_Subunit flag\n\t* errout.ads (Parsing_Main_Subunit): New flag\n\t* lib-load.adb (Load_Unit): Set Parsing_Main_Subunit flag\n\t* par-ch6.adb: Minor style fix (remove redandant parentheses)\n\t* par-ch9.adb: Minor style fix (remove redundant parens)\n\t* par-load.adb: (Load): Deal with setting Parsing_Main_Subunit\n\n2010-09-10  Vincent Celier  <celier@adacore.com>\n\n\t* make.adb (Create_Binder_Mapping_File): Remove procedure. Replaced by\n\tfunction of the same name in Makeutl.\n\t(Gnatmake): Call function Create_Binder_Mapping_File in Makeutl, instead\n\tof removed procedure when creating a binder mapping file.\n\t* makeutl.adb (Create_Binder_Mapping_File): New function. Was a\n\tprocedure in Make.\n\t* makeutl.ads (Create_Binder_Mapping_File): New function\n\nFrom-SVN: r164176", "tree": {"sha": "da363269b7e9c22cabda04b9e23777bcc7a1589d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/da363269b7e9c22cabda04b9e23777bcc7a1589d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a113c55d5aaa0764c6455405f3235abe14a74320", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a113c55d5aaa0764c6455405f3235abe14a74320", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a113c55d5aaa0764c6455405f3235abe14a74320", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a113c55d5aaa0764c6455405f3235abe14a74320/comments", "author": null, "committer": null, "parents": [{"sha": "0856403616ac03ee6eb8cd2cb83f1e7274f9f909", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0856403616ac03ee6eb8cd2cb83f1e7274f9f909", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0856403616ac03ee6eb8cd2cb83f1e7274f9f909"}], "stats": {"total": 491, "additions": 282, "deletions": 209}, "files": [{"sha": "c39e7c721815d98726d633d7308795a53315fca5", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a113c55d5aaa0764c6455405f3235abe14a74320/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a113c55d5aaa0764c6455405f3235abe14a74320/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=a113c55d5aaa0764c6455405f3235abe14a74320", "patch": "@@ -1,3 +1,28 @@\n+2010-09-10  Vincent Celier  <celier@adacore.com>\n+\n+\t* vms_data.ads: Add new GNAT BIND qualifiers /32_MALLOC (for -H32) and\n+\t/64_MALLOC (for -H64).\n+\n+2010-09-10  Robert Dewar  <dewar@adacore.com>\n+\n+\t* errout.adb (Error_Msg_Internal): Test Parsing_Main_Subunit flag\n+\t(Error_Msg_NW): Test Parsing_Main_Subunit flag\n+\t* errout.ads (Parsing_Main_Subunit): New flag\n+\t* lib-load.adb (Load_Unit): Set Parsing_Main_Subunit flag\n+\t* par-ch6.adb: Minor style fix (remove redandant parentheses)\n+\t* par-ch9.adb: Minor style fix (remove redundant parens)\n+\t* par-load.adb: (Load): Deal with setting Parsing_Main_Subunit\n+\n+2010-09-10  Vincent Celier  <celier@adacore.com>\n+\n+\t* make.adb (Create_Binder_Mapping_File): Remove procedure. Replaced by\n+\tfunction of the same name in Makeutl.\n+\t(Gnatmake): Call function Create_Binder_Mapping_File in Makeutl, instead\n+\tof removed procedure when creating a binder mapping file.\n+\t* makeutl.adb (Create_Binder_Mapping_File): New function. Was a\n+\tprocedure in Make.\n+\t* makeutl.ads (Create_Binder_Mapping_File): New function\n+\n 2010-09-10  Jose Ruiz  <ruiz@adacore.com>\n \n \t* exp_cg.adb (Is_Predefined_Dispatching_Operation): Add the \"__\" scope"}, {"sha": "d3701cbd86401c9b16031a0570af05f062f38266", "filename": "gcc/ada/errout.adb", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a113c55d5aaa0764c6455405f3235abe14a74320/gcc%2Fada%2Ferrout.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a113c55d5aaa0764c6455405f3235abe14a74320/gcc%2Fada%2Ferrout.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ferrout.adb?ref=a113c55d5aaa0764c6455405f3235abe14a74320", "patch": "@@ -748,7 +748,9 @@ package body Errout is\n          --  If the flag location is in the main extended source unit then for\n          --  sure we want the warning since it definitely belongs\n \n-         if In_Extended_Main_Source_Unit (Sptr) then\n+         if Parsing_Main_Subunit\n+           or else In_Extended_Main_Source_Unit (Sptr)\n+         then\n             null;\n \n          --  If the flag location is not in the main extended source unit, then\n@@ -1157,7 +1159,8 @@ package body Errout is\n    is\n    begin\n       if Eflag\n-        and then In_Extended_Main_Source_Unit (N)\n+        and then (Parsing_Main_Subunit\n+                   or else In_Extended_Main_Source_Unit (N))\n         and then Comes_From_Source (N)\n       then\n          Error_Msg_NEL (Msg, N, N, Sloc (N));"}, {"sha": "29fa5d18bc22bdeb8b55a6252b100c1f39415e3f", "filename": "gcc/ada/errout.ads", "status": "modified", "additions": 11, "deletions": 3, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a113c55d5aaa0764c6455405f3235abe14a74320/gcc%2Fada%2Ferrout.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a113c55d5aaa0764c6455405f3235abe14a74320/gcc%2Fada%2Ferrout.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ferrout.ads?ref=a113c55d5aaa0764c6455405f3235abe14a74320", "patch": "@@ -63,9 +63,17 @@ package Errout is\n    type Compiler_State_Type is (Parsing, Analyzing);\n    Compiler_State : Compiler_State_Type;\n    --  Indicates current state of compilation. This is put in the Errout spec\n-   --  because it affects the action of the error message handling. In\n-   --  particular, an attempt is made by Errout to suppress cascaded error\n-   --  messages in Parsing mode, but not in the other modes.\n+   --  because it affects the handling of error messages. In particular, an\n+   --  attempt is made by Errout to suppress cascaded error messages in Parsing\n+   --  mode, but not in the other modes.\n+\n+   Parsing_Main_Subunit : Boolean := False;\n+   --  Set True if we are currently parsing a subunit that is part of the main\n+   --  extended source. We need this flag, since the In_Main_Extended_Source\n+   --  test may produce an improper False value if called too early during the\n+   --  parsing process. This is put in the Errout spec because it affects error\n+   --  message handling. In particular, warnings and style messages during\n+   --  parsing are only generated if this flag is set to True.\n \n    Current_Error_Source_File : Source_File_Index\n      renames Err_Vars.Current_Error_Source_File;"}, {"sha": "977511aab7738d39f80bfb3008fc27110f52cb51", "filename": "gcc/ada/lib-load.adb", "status": "modified", "additions": 12, "deletions": 3, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a113c55d5aaa0764c6455405f3235abe14a74320/gcc%2Fada%2Flib-load.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a113c55d5aaa0764c6455405f3235abe14a74320/gcc%2Fada%2Flib-load.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flib-load.adb?ref=a113c55d5aaa0764c6455405f3235abe14a74320", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2009, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2010, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -513,7 +513,6 @@ package body Lib.Load is\n       --  See if we already have an entry for this unit\n \n       Unum := Main_Unit;\n-\n       while Unum <= Units.Last loop\n          exit when Uname_Actual = Units.Table (Unum).Unit_Name;\n          Unum := Unum + 1;\n@@ -658,12 +657,22 @@ package body Lib.Load is\n             --  Parse the new unit\n \n             declare\n-               Save_Index : constant Nat := Multiple_Unit_Index;\n+               Save_Index : constant Nat     := Multiple_Unit_Index;\n+               Save_PMS   : constant Boolean := Parsing_Main_Subunit;\n+\n             begin\n                Multiple_Unit_Index := Get_Unit_Index (Uname_Actual);\n                Units.Table (Unum).Munit_Index := Multiple_Unit_Index;\n                Initialize_Scanner (Unum, Source_Index (Unum));\n+\n+               if Calling_Unit = Main_Unit and then Subunit then\n+                  Parsing_Main_Subunit := True;\n+               end if;\n+\n                Discard_List (Par (Configuration_Pragmas => False));\n+\n+               Parsing_Main_Subunit := Save_PMS;\n+\n                Multiple_Unit_Index := Save_Index;\n                Set_Loading (Unum, False);\n             end;"}, {"sha": "79a8390569fb2825743286c4a528610ae53630d1", "filename": "gcc/ada/make.adb", "status": "modified", "additions": 7, "deletions": 184, "changes": 191, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a113c55d5aaa0764c6455405f3235abe14a74320/gcc%2Fada%2Fmake.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a113c55d5aaa0764c6455405f3235abe14a74320/gcc%2Fada%2Fmake.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fmake.adb?ref=a113c55d5aaa0764c6455405f3235abe14a74320", "patch": "@@ -4136,10 +4136,6 @@ package body Make is\n       --  Check that the main subprograms do exist and that they all\n       --  belong to the same project file.\n \n-      procedure Create_Binder_Mapping_File\n-        (Args : in out Argument_List; Last_Arg : in out Natural);\n-      --  Create a binder mapping file and add the necessary switch\n-\n       -----------------\n       -- Check_Mains --\n       -----------------\n@@ -4282,185 +4278,6 @@ package body Make is\n          end loop;\n       end Check_Mains;\n \n-      --------------------------------\n-      -- Create_Binder_Mapping_File --\n-      --------------------------------\n-\n-      procedure Create_Binder_Mapping_File\n-        (Args : in out Argument_List; Last_Arg : in out Natural)\n-      is\n-         Mapping_FD : File_Descriptor := Invalid_FD;\n-         --  A File Descriptor for an eventual mapping file\n-\n-         ALI_Unit : Unit_Name_Type := No_Unit_Name;\n-         --  The unit name of an ALI file\n-\n-         ALI_Name : File_Name_Type := No_File;\n-         --  The file name of the ALI file\n-\n-         ALI_Project : Project_Id := No_Project;\n-         --  The project of the ALI file\n-\n-         Bytes : Integer;\n-         OK    : Boolean := True;\n-         Unit  : Unit_Index;\n-\n-         Status : Boolean;\n-         --  For call to Close\n-\n-      begin\n-         Tempdir.Create_Temp_File (Mapping_FD, Mapping_Path);\n-         Record_Temp_File (Project_Tree, Mapping_Path);\n-\n-         if Mapping_FD /= Invalid_FD then\n-\n-            --  Traverse all units\n-\n-            Unit := Units_Htable.Get_First (Project_Tree.Units_HT);\n-\n-            while Unit /= No_Unit_Index loop\n-               if Unit.Name /= No_Name then\n-\n-                  --  If there is a body, put it in the mapping\n-\n-                  if Unit.File_Names (Impl) /= No_Source\n-                    and then Unit.File_Names (Impl).Project /=\n-                    No_Project\n-                  then\n-                     Get_Name_String (Unit.Name);\n-                     Add_Str_To_Name_Buffer (\"%b\");\n-                     ALI_Unit := Name_Find;\n-                     ALI_Name :=\n-                       Lib_File_Name\n-                         (Unit.File_Names (Impl).Display_File);\n-                     ALI_Project := Unit.File_Names (Impl).Project;\n-\n-                     --  Otherwise, if there is a spec, put it in the mapping\n-\n-                  elsif Unit.File_Names (Spec) /= No_Source\n-                    and then Unit.File_Names (Spec).Project /= No_Project\n-                  then\n-                     Get_Name_String (Unit.Name);\n-                     Add_Str_To_Name_Buffer (\"%s\");\n-                     ALI_Unit := Name_Find;\n-                     ALI_Name :=\n-                       Lib_File_Name\n-                         (Unit.File_Names (Spec).Display_File);\n-                     ALI_Project := Unit.File_Names (Spec).Project;\n-\n-                  else\n-                     ALI_Name := No_File;\n-                  end if;\n-\n-                  --  If we have something to put in the mapping then do it\n-                  --  now. However, if the project is extended, we don't put\n-                  --  anything in the mapping file, because we don't know where\n-                  --  the ALI file is: it might be in the extended project\n-                  --  object directory as well as in the extending project\n-                  --  object directory.\n-\n-                  if ALI_Name /= No_File\n-                    and then ALI_Project.Extended_By = No_Project\n-                    and then ALI_Project.Extends = No_Project\n-                  then\n-                     --  First check if the ALI file exists. If it does not,\n-                     --  do not put the unit in the mapping file.\n-\n-                     declare\n-                        ALI : constant String := Get_Name_String (ALI_Name);\n-\n-                     begin\n-                        --  For library projects, use the library directory,\n-                        --  for other projects, use the object directory.\n-\n-                        if ALI_Project.Library then\n-                           Get_Name_String (ALI_Project.Library_Dir.Name);\n-                        else\n-                           Get_Name_String\n-                             (ALI_Project.Object_Directory.Display_Name);\n-                        end if;\n-\n-                        if not\n-                          Is_Directory_Separator (Name_Buffer (Name_Len))\n-                        then\n-                           Add_Char_To_Name_Buffer (Directory_Separator);\n-                        end if;\n-\n-                        Add_Str_To_Name_Buffer (ALI);\n-                        Add_Char_To_Name_Buffer (ASCII.LF);\n-\n-                        declare\n-                           ALI_Path_Name : constant String :=\n-                                             Name_Buffer (1 .. Name_Len);\n-\n-                        begin\n-                           if Is_Regular_File\n-                                (ALI_Path_Name (1 .. ALI_Path_Name'Last - 1))\n-                           then\n-                              --  First line is the unit name\n-\n-                              Get_Name_String (ALI_Unit);\n-                              Add_Char_To_Name_Buffer (ASCII.LF);\n-                              Bytes :=\n-                                Write\n-                                  (Mapping_FD,\n-                                   Name_Buffer (1)'Address,\n-                                   Name_Len);\n-                              OK := Bytes = Name_Len;\n-\n-                              exit when not OK;\n-\n-                              --  Second line it the ALI file name\n-\n-                              Get_Name_String (ALI_Name);\n-                              Add_Char_To_Name_Buffer (ASCII.LF);\n-                              Bytes :=\n-                                Write\n-                                  (Mapping_FD,\n-                                   Name_Buffer (1)'Address,\n-                                   Name_Len);\n-                              OK := (Bytes = Name_Len);\n-\n-                              exit when not OK;\n-\n-                              --  Third line it the ALI path name\n-\n-                              Bytes :=\n-                                Write\n-                                  (Mapping_FD,\n-                                   ALI_Path_Name (1)'Address,\n-                                   ALI_Path_Name'Length);\n-                              OK := (Bytes = ALI_Path_Name'Length);\n-\n-                              --  If OK is False, it means we were unable to\n-                              --  write a line. No point in continuing with the\n-                              --  other units.\n-\n-                              exit when not OK;\n-                           end if;\n-                        end;\n-                     end;\n-                  end if;\n-               end if;\n-\n-               Unit := Units_Htable.Get_Next (Project_Tree.Units_HT);\n-            end loop;\n-\n-            Close (Mapping_FD, Status);\n-\n-            OK := OK and Status;\n-\n-            --  If the creation of the mapping file was successful, we add the\n-            --  switch to the arguments of gnatbind.\n-\n-            if OK then\n-               Last_Arg := Last_Arg + 1;\n-               Args (Last_Arg) :=\n-                 new String'(\"-F=\" & Get_Name_String (Mapping_Path));\n-            end if;\n-         end if;\n-      end Create_Binder_Mapping_File;\n-\n    --  Start of processing for Gnatmake\n \n    --  This body is very long, should be broken down???\n@@ -6013,7 +5830,13 @@ package body Make is\n                   --  If switch -C was specified, create a binder mapping file\n \n                   if Create_Mapping_File then\n-                     Create_Binder_Mapping_File (Args, Last_Arg);\n+                     Mapping_Path := Create_Binder_Mapping_File;\n+\n+                     if Mapping_Path /= No_Path then\n+                        Last_Arg := Last_Arg + 1;\n+                        Args (Last_Arg) :=\n+                          new String'(\"-F=\" & Get_Name_String (Mapping_Path));\n+                     end if;\n                   end if;\n \n                end if;"}, {"sha": "a11f26134964391a639725b443f7e62a271f4b4c", "filename": "gcc/ada/makeutl.adb", "status": "modified", "additions": 178, "deletions": 0, "changes": 178, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a113c55d5aaa0764c6455405f3235abe14a74320/gcc%2Fada%2Fmakeutl.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a113c55d5aaa0764c6455405f3235abe14a74320/gcc%2Fada%2Fmakeutl.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fmakeutl.adb?ref=a113c55d5aaa0764c6455405f3235abe14a74320", "patch": "@@ -34,6 +34,7 @@ with Prj.Ext;\n with Prj.Util;\n with Snames;   use Snames;\n with Table;\n+with Tempdir;\n \n with Ada.Command_Line;  use Ada.Command_Line;\n \n@@ -295,6 +296,183 @@ package body Makeutl is\n       return True;\n    end Check_Source_Info_In_ALI;\n \n+   --------------------------------\n+   -- Create_Binder_Mapping_File --\n+   --------------------------------\n+\n+   function Create_Binder_Mapping_File return Path_Name_Type is\n+      Mapping_Path : Path_Name_Type := No_Path;\n+\n+      Mapping_FD : File_Descriptor := Invalid_FD;\n+      --  A File Descriptor for an eventual mapping file\n+\n+      ALI_Unit : Unit_Name_Type := No_Unit_Name;\n+      --  The unit name of an ALI file\n+\n+      ALI_Name : File_Name_Type := No_File;\n+      --  The file name of the ALI file\n+\n+      ALI_Project : Project_Id := No_Project;\n+      --  The project of the ALI file\n+\n+      Bytes : Integer;\n+      OK    : Boolean := False;\n+      Unit  : Unit_Index;\n+\n+      Status : Boolean;\n+      --  For call to Close\n+\n+   begin\n+      Tempdir.Create_Temp_File (Mapping_FD, Mapping_Path);\n+      Record_Temp_File (Project_Tree, Mapping_Path);\n+\n+      if Mapping_FD /= Invalid_FD then\n+         OK := True;\n+\n+         --  Traverse all units\n+\n+         Unit := Units_Htable.Get_First (Project_Tree.Units_HT);\n+         while Unit /= No_Unit_Index loop\n+            if Unit.Name /= No_Name then\n+\n+               --  If there is a body, put it in the mapping\n+\n+               if Unit.File_Names (Impl) /= No_Source\n+                 and then Unit.File_Names (Impl).Project /= No_Project\n+               then\n+                  Get_Name_String (Unit.Name);\n+                  Add_Str_To_Name_Buffer (\"%b\");\n+                  ALI_Unit := Name_Find;\n+                  ALI_Name :=\n+                    Lib_File_Name (Unit.File_Names (Impl).Display_File);\n+                  ALI_Project := Unit.File_Names (Impl).Project;\n+\n+                  --  Otherwise, if there is a spec, put it in the mapping\n+\n+               elsif Unit.File_Names (Spec) /= No_Source\n+                 and then Unit.File_Names (Spec).Project /= No_Project\n+               then\n+                  Get_Name_String (Unit.Name);\n+                  Add_Str_To_Name_Buffer (\"%s\");\n+                  ALI_Unit := Name_Find;\n+                  ALI_Name :=\n+                    Lib_File_Name (Unit.File_Names (Spec).Display_File);\n+                  ALI_Project := Unit.File_Names (Spec).Project;\n+\n+               else\n+                  ALI_Name := No_File;\n+               end if;\n+\n+               --  If we have something to put in the mapping then do it now.\n+               --  However, if the project is extended, we don't put anything\n+               --  in the mapping file, since we don't know where the ALI file\n+               --  is: it might be in the extended project object directory as\n+               --  well as in the extending project object directory.\n+\n+               if ALI_Name /= No_File\n+                 and then ALI_Project.Extended_By = No_Project\n+                 and then ALI_Project.Extends = No_Project\n+               then\n+                  --  First check if the ALI file exists. If it does not, do\n+                  --  not put the unit in the mapping file.\n+\n+                  declare\n+                     ALI : constant String := Get_Name_String (ALI_Name);\n+\n+                  begin\n+                     --  For library projects, use the library ALI directory,\n+                     --  for other projects, use the object directory.\n+\n+                     if ALI_Project.Library then\n+                        Get_Name_String\n+                          (ALI_Project.Library_ALI_Dir.Display_Name);\n+                     else\n+                        Get_Name_String\n+                          (ALI_Project.Object_Directory.Display_Name);\n+                     end if;\n+\n+                     if not\n+                       Is_Directory_Separator (Name_Buffer (Name_Len))\n+                     then\n+                        Add_Char_To_Name_Buffer (Directory_Separator);\n+                     end if;\n+\n+                     Add_Str_To_Name_Buffer (ALI);\n+                     Add_Char_To_Name_Buffer (ASCII.LF);\n+\n+                     declare\n+                        ALI_Path_Name : constant String :=\n+                          Name_Buffer (1 .. Name_Len);\n+\n+                     begin\n+                        if Is_Regular_File\n+                             (ALI_Path_Name (1 .. ALI_Path_Name'Last - 1))\n+                        then\n+                           --  First line is the unit name\n+\n+                           Get_Name_String (ALI_Unit);\n+                           Add_Char_To_Name_Buffer (ASCII.LF);\n+                           Bytes :=\n+                             Write\n+                               (Mapping_FD,\n+                                Name_Buffer (1)'Address,\n+                                Name_Len);\n+                           OK := Bytes = Name_Len;\n+\n+                           exit when not OK;\n+\n+                           --  Second line it the ALI file name\n+\n+                           Get_Name_String (ALI_Name);\n+                           Add_Char_To_Name_Buffer (ASCII.LF);\n+                           Bytes :=\n+                             Write\n+                               (Mapping_FD,\n+                                Name_Buffer (1)'Address,\n+                                Name_Len);\n+                           OK := (Bytes = Name_Len);\n+\n+                           exit when not OK;\n+\n+                           --  Third line it the ALI path name\n+\n+                           Bytes :=\n+                             Write\n+                               (Mapping_FD,\n+                                ALI_Path_Name (1)'Address,\n+                                ALI_Path_Name'Length);\n+                           OK := (Bytes = ALI_Path_Name'Length);\n+\n+                           --  If OK is False, it means we were unable to\n+                           --  write a line. No point in continuing with the\n+                           --  other units.\n+\n+                           exit when not OK;\n+                        end if;\n+                     end;\n+                  end;\n+               end if;\n+            end if;\n+\n+            Unit := Units_Htable.Get_Next (Project_Tree.Units_HT);\n+         end loop;\n+\n+         Close (Mapping_FD, Status);\n+\n+         OK := OK and Status;\n+      end if;\n+\n+      --  If the creation of the mapping file was successful, we add the switch\n+      --  to the arguments of gnatbind.\n+\n+      if OK then\n+         return Mapping_Path;\n+\n+      else\n+         return No_Path;\n+      end if;\n+   end Create_Binder_Mapping_File;\n+\n    -----------------\n    -- Create_Name --\n    -----------------"}, {"sha": "bb1c91515cb1de29ac721daec35c0113bf2438f2", "filename": "gcc/ada/makeutl.ads", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a113c55d5aaa0764c6455405f3235abe14a74320/gcc%2Fada%2Fmakeutl.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a113c55d5aaa0764c6455405f3235abe14a74320/gcc%2Fada%2Fmakeutl.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fmakeutl.ads?ref=a113c55d5aaa0764c6455405f3235abe14a74320", "patch": "@@ -70,6 +70,9 @@ package Makeutl is\n       Last   : in out Natural);\n    --  Add a string to a list of strings\n \n+   function Create_Binder_Mapping_File return Path_Name_Type;\n+   --  Create a binder mapping file and returns its path name\n+\n    function Create_Name (Name : String) return File_Name_Type;\n    function Create_Name (Name : String) return Name_Id;\n    function Create_Name (Name : String) return Path_Name_Type;"}, {"sha": "3830e05cb1a0d079c8ad8950a5108f39c8c8c395", "filename": "gcc/ada/par-ch6.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a113c55d5aaa0764c6455405f3235abe14a74320/gcc%2Fada%2Fpar-ch6.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a113c55d5aaa0764c6455405f3235abe14a74320/gcc%2Fada%2Fpar-ch6.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fpar-ch6.adb?ref=a113c55d5aaa0764c6455405f3235abe14a74320", "patch": "@@ -211,7 +211,7 @@ package body Ch6 is\n          Is_Overriding := True;\n       end if;\n \n-      if (Is_Overriding or else Not_Overriding) then\n+      if Is_Overriding or else Not_Overriding then\n \n          --  Note that if we are not in Ada_05 mode, error messages have\n          --  already been given, so no need to give another message here."}, {"sha": "1388a92e1433c52d13806057feb7ee286b5efa45", "filename": "gcc/ada/par-ch9.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a113c55d5aaa0764c6455405f3235abe14a74320/gcc%2Fada%2Fpar-ch9.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a113c55d5aaa0764c6455405f3235abe14a74320/gcc%2Fada%2Fpar-ch9.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fpar-ch9.adb?ref=a113c55d5aaa0764c6455405f3235abe14a74320", "patch": "@@ -639,7 +639,7 @@ package body Ch9 is\n             Is_Overriding := True;\n          end if;\n \n-         if (Is_Overriding or else Not_Overriding) then\n+         if Is_Overriding or else Not_Overriding then\n             if Ada_Version < Ada_05 then\n                Error_Msg_SP (\"overriding indicator is an Ada 2005 extension\");\n                Error_Msg_SP (\"\\unit must be compiled with -gnat05 switch\");\n@@ -823,7 +823,7 @@ package body Ch9 is\n          Is_Overriding := True;\n       end if;\n \n-      if (Is_Overriding or else Not_Overriding) then\n+      if Is_Overriding or else Not_Overriding then\n          if Ada_Version < Ada_05 then\n             Error_Msg_SP (\"overriding indicator is an Ada 2005 extension\");\n             Error_Msg_SP (\"\\unit must be compiled with -gnat05 switch\");"}, {"sha": "5f236e95dfc5573410c98f3c435efdf2e5d22192", "filename": "gcc/ada/par-load.adb", "status": "modified", "additions": 22, "deletions": 14, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a113c55d5aaa0764c6455405f3235abe14a74320/gcc%2Fada%2Fpar-load.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a113c55d5aaa0764c6455405f3235abe14a74320/gcc%2Fada%2Fpar-load.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fpar-load.adb?ref=a113c55d5aaa0764c6455405f3235abe14a74320", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2009, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2010, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -268,9 +268,9 @@ begin\n            Error_Node => Curunit,\n            Corr_Body  => Cur_Unum);\n \n-      --  If we successfully load the unit, then set the spec/body\n-      --  pointers. Once again note that if the loaded unit has a fatal error,\n-      --  Load will have set our Fatal_Error flag to propagate this condition.\n+      --  If we successfully load the unit, then set the spec/body pointers.\n+      --  Once again note that if the loaded unit has a fatal error, Load will\n+      --  have set our Fatal_Error flag to propagate this condition.\n \n       if Unum /= No_Unit then\n          Set_Library_Unit (Curunit, Cunit (Unum));\n@@ -342,17 +342,25 @@ begin\n    --  If current unit is a subunit, then load its parent body\n \n    elsif Nkind (Unit (Curunit)) = N_Subunit then\n-      Body_Name := Get_Parent_Body_Name (Unit_Name (Cur_Unum));\n-      Unum :=\n-        Load_Unit\n-          (Load_Name  => Body_Name,\n-           Required   => True,\n-           Subunit    => True,\n-           Error_Node => Name (Unit (Curunit)));\n+      declare\n+         Save_PMS : constant Boolean := Parsing_Main_Subunit;\n \n-      if Unum /= No_Unit then\n-         Set_Library_Unit (Curunit, Cunit (Unum));\n-      end if;\n+      begin\n+         Parsing_Main_Subunit := False;\n+         Body_Name := Get_Parent_Body_Name (Unit_Name (Cur_Unum));\n+         Unum :=\n+           Load_Unit\n+             (Load_Name  => Body_Name,\n+              Required   => True,\n+              Subunit    => False,\n+              Error_Node => Name (Unit (Curunit)));\n+\n+         if Unum /= No_Unit then\n+            Set_Library_Unit (Curunit, Cunit (Unum));\n+         end if;\n+\n+         Parsing_Main_Subunit := Save_PMS;\n+      end;\n    end if;\n \n    --  Now we load with'ed units, with style/validity checks turned off"}, {"sha": "aab456c05124118424b105677fac160c7d7aff70", "filename": "gcc/ada/vms_data.ads", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a113c55d5aaa0764c6455405f3235abe14a74320/gcc%2Fada%2Fvms_data.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a113c55d5aaa0764c6455405f3235abe14a74320/gcc%2Fada%2Fvms_data.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fvms_data.ads?ref=a113c55d5aaa0764c6455405f3235abe14a74320", "patch": "@@ -353,6 +353,20 @@ package VMS_Data is\n    --\n    --   The main program is not in Ada.\n \n+   S_Bind_Alloc32 : aliased constant S := \"/32_MALLOC \"                    &\n+                                            \"-H32\";\n+   --        /32_MALLOC\n+   --\n+   --        Use 32-bit allocations for `__gnat_malloc' (and thus for\n+   --        access types).\n+\n+   S_Bind_Alloc64 : aliased constant S := \"/64_MALLOC \"                    &\n+                                            \"-H64\";\n+   --        /64_MALLOC\n+   --\n+   --        Use 64-bit allocations for `__gnat_malloc' (and thus for\n+   --        access types).\n+\n    S_Bind_Mess    : aliased constant S := \"/MESSAGES_PROJECT_FILE=\"        &\n                                             \"DEFAULT \"                     &\n                                                \"-vP0 \"                     &\n@@ -694,6 +708,8 @@ package VMS_Data is\n                       S_Bind_Library 'Access,\n                       S_Bind_Linker  'Access,\n                       S_Bind_Main    'Access,\n+                      S_Bind_Alloc32 'Access,\n+                      S_Bind_Alloc64 'Access,\n                       S_Bind_Mess    'Access,\n                       S_Bind_Nostinc 'Access,\n                       S_Bind_Nostlib 'Access,"}]}