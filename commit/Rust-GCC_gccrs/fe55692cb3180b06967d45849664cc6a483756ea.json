{"sha": "fe55692cb3180b06967d45849664cc6a483756ea", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZmU1NTY5MmNiMzE4MGIwNjk2N2Q0NTg0OTY2NGNjNmE0ODM3NTZlYQ==", "commit": {"author": {"name": "John David Anglin", "email": "danglin@gcc.gnu.org", "date": "2016-06-22T01:46:06Z"}, "committer": {"name": "John David Anglin", "email": "danglin@gcc.gnu.org", "date": "2016-06-22T01:46:06Z"}, "message": "c-common.c (get_source_date_epoch): Use int64_t instead of long long.\n\n\t* c-common.c (get_source_date_epoch): Use int64_t instead of long long.\n\n\t* gcov-tool.c (profile_rewrite): Use int64_t instead of long long.\n\t(do_rewrite): likewise.\n\n\t* line-map.c (location_adhoc_data_update): Use int64_t instead of\n\tlong long.\n\t(get_combined_adhoc_loc): Likewise.\n\nFrom-SVN: r237676", "tree": {"sha": "7227251b43d09a6272f8ac01241575b8d81fba52", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7227251b43d09a6272f8ac01241575b8d81fba52"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/fe55692cb3180b06967d45849664cc6a483756ea", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fe55692cb3180b06967d45849664cc6a483756ea", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fe55692cb3180b06967d45849664cc6a483756ea", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fe55692cb3180b06967d45849664cc6a483756ea/comments", "author": null, "committer": null, "parents": [{"sha": "d008cb31fdde77a1cfe8e4dd74411851322b89af", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d008cb31fdde77a1cfe8e4dd74411851322b89af", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d008cb31fdde77a1cfe8e4dd74411851322b89af"}], "stats": {"total": 39, "additions": 26, "deletions": 13}, "files": [{"sha": "614c22ae8d76f34cd42b54283e6fe7475c67f38e", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fe55692cb3180b06967d45849664cc6a483756ea/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fe55692cb3180b06967d45849664cc6a483756ea/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=fe55692cb3180b06967d45849664cc6a483756ea", "patch": "@@ -1,3 +1,8 @@\n+2016-06-21  John David Anglin  <danglin@gcc.gnu.org>\n+\n+\t* gcov-tool.c (profile_rewrite): Use int64_t instead of long long.\n+\t(do_rewrite): likewise.\n+\n 2016-06-21  Trevor Saunders  <tbsaunde+gcc@tbsaunde.org>\n \n \t* common/config/mep/mep-common.c: Remove."}, {"sha": "7d2ca462223a856472a7971cefb08d8eb5c2bb9e", "filename": "gcc/c-family/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fe55692cb3180b06967d45849664cc6a483756ea/gcc%2Fc-family%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fe55692cb3180b06967d45849664cc6a483756ea/gcc%2Fc-family%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2FChangeLog?ref=fe55692cb3180b06967d45849664cc6a483756ea", "patch": "@@ -1,3 +1,7 @@\n+2016-06-21  John David Anglin  <danglin@gcc.gnu.org>\n+\n+\t* c-common.c (get_source_date_epoch): Use int64_t instead of long long.\n+\n 2016-06-14  Jason Merrill  <jason@redhat.com>\n \n \tP0145R2: Refining Expression Order for C++."}, {"sha": "8f21fd1ad98aca8b87f2b36104677244ac42f1e8", "filename": "gcc/c-family/c-common.c", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fe55692cb3180b06967d45849664cc6a483756ea/gcc%2Fc-family%2Fc-common.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fe55692cb3180b06967d45849664cc6a483756ea/gcc%2Fc-family%2Fc-common.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2Fc-common.c?ref=fe55692cb3180b06967d45849664cc6a483756ea", "patch": "@@ -12811,15 +12811,19 @@ time_t\n cb_get_source_date_epoch (cpp_reader *pfile ATTRIBUTE_UNUSED)\n {\n   char *source_date_epoch;\n-  long long epoch;\n+  int64_t epoch;\n   char *endptr;\n \n   source_date_epoch = getenv (\"SOURCE_DATE_EPOCH\");\n   if (!source_date_epoch)\n     return (time_t) -1;\n \n   errno = 0;\n+#if defined(INT64_T_IS_LONG)\n+  epoch = strtol (source_date_epoch, &endptr, 10);\n+#else\n   epoch = strtoll (source_date_epoch, &endptr, 10);\n+#endif\n   if (errno != 0 || endptr == source_date_epoch || *endptr != '\\0'\n       || epoch < 0 || epoch > MAX_SOURCE_DATE_EPOCH)\n     {"}, {"sha": "f3da73cc596474491c1ac2820b0e10e7c6628f88", "filename": "gcc/gcov-tool.c", "status": "modified", "additions": 4, "deletions": 10, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fe55692cb3180b06967d45849664cc6a483756ea/gcc%2Fgcov-tool.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fe55692cb3180b06967d45849664cc6a483756ea/gcc%2Fgcov-tool.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgcov-tool.c?ref=fe55692cb3180b06967d45849664cc6a483756ea", "patch": "@@ -232,7 +232,7 @@ do_merge (int argc, char **argv)\n    Otherwise, multiply the all counters by SCALE.  */\n \n static int\n-profile_rewrite (const char *d1, const char *out, long long n_val,\n+profile_rewrite (const char *d1, const char *out, int64_t n_val,\n                  float scale, int n, int d)\n {\n   struct gcov_info * d1_profile;\n@@ -261,7 +261,7 @@ print_rewrite_usage_message (int error_p)\n   fnotice (file, \"    -v, --verbose                       Verbose mode\\n\");\n   fnotice (file, \"    -o, --output <dir>                  Output directory\\n\");\n   fnotice (file, \"    -s, --scale <float or simple-frac>  Scale the profile counters\\n\");\n-  fnotice (file, \"    -n, --normalize <long long>         Normalize the profile\\n\");\n+  fnotice (file, \"    -n, --normalize <int64_t>           Normalize the profile\\n\");\n }\n \n static const struct option rewrite_options[] =\n@@ -291,11 +291,7 @@ do_rewrite (int argc, char **argv)\n   int opt;\n   int ret;\n   const char *output_dir = 0;\n-#ifdef HAVE_LONG_LONG\n-  long long normalize_val = 0;\n-#else\n   int64_t normalize_val = 0;\n-#endif\n   float scale = 0.0;\n   int numerator = 1;\n   int denominator = 1;\n@@ -315,12 +311,10 @@ do_rewrite (int argc, char **argv)\n           break;\n         case 'n':\n           if (!do_scaling)\n-#if defined(HAVE_LONG_LONG)\n-\t    normalize_val = strtoll (optarg, (char **)NULL, 10);\n-#elif defined(INT64_T_IS_LONG)\n+#if defined(INT64_T_IS_LONG)\n \t    normalize_val = strtol (optarg, (char **)NULL, 10);\n #else\n-\t    sscanf (optarg, \"%\" SCNd64, &normalize_val);\n+\t    normalize_val = strtoll (optarg, (char **)NULL, 10);\n #endif\n           else\n             fnotice (stderr, \"scaling cannot co-exist with normalization,\""}, {"sha": "c32b15725f893ae06dbd5d797d68324df4ec8150", "filename": "libcpp/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fe55692cb3180b06967d45849664cc6a483756ea/libcpp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fe55692cb3180b06967d45849664cc6a483756ea/libcpp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libcpp%2FChangeLog?ref=fe55692cb3180b06967d45849664cc6a483756ea", "patch": "@@ -1,3 +1,9 @@\n+2016-06-21  John David Anglin  <danglin@gcc.gnu.org>\n+\n+\t* line-map.c (location_adhoc_data_update): Use int64_t instead of\n+\tlong long.\n+\t(get_combined_adhoc_loc): Likewise.\n+\n 2016-06-01  Eduard Sanou  <dhole@openmailbox.org>\n \n \t* include/cpplib.h (cpp_callbacks): Add get_source_date_epoch"}, {"sha": "8dea0d381c5b2ba9074123cdba92a081093ced14", "filename": "libcpp/line-map.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fe55692cb3180b06967d45849664cc6a483756ea/libcpp%2Fline-map.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fe55692cb3180b06967d45849664cc6a483756ea/libcpp%2Fline-map.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libcpp%2Fline-map.c?ref=fe55692cb3180b06967d45849664cc6a483756ea", "patch": "@@ -102,7 +102,7 @@ location_adhoc_data_eq (const void *l1, const void *l2)\n static int\n location_adhoc_data_update (void **slot, void *data)\n {\n-  *((char **) slot) += *((long long *) data);\n+  *((char **) slot) += *((int64_t *) data);\n   return 1;\n }\n \n@@ -224,7 +224,7 @@ get_combined_adhoc_loc (struct line_maps *set,\n \t  set->location_adhoc_data_map.allocated)\n \t{\n \t  char *orig_data = (char *) set->location_adhoc_data_map.data;\n-\t  long long offset;\n+\t  int64_t offset;\n \t  /* Cast away extern \"C\" from the type of xrealloc.  */\n \t  line_map_realloc reallocator = (set->reallocator\n \t\t\t\t\t  ? set->reallocator"}]}