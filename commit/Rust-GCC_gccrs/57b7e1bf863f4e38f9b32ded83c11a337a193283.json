{"sha": "57b7e1bf863f4e38f9b32ded83c11a337a193283", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTdiN2UxYmY4NjNmNGUzOGY5YjMyZGVkODNjMTFhMzM3YTE5MzI4Mw==", "commit": {"author": {"name": "Doug Evans", "email": "dje@gnu.org", "date": "1996-03-23T20:55:14Z"}, "committer": {"name": "Doug Evans", "email": "dje@gnu.org", "date": "1996-03-23T20:55:14Z"}, "message": "sparc.md (*mov{qi,hi,si,di}_cc_sp64): Fix constraints.\n\n\t* sparc/sparc.md (*mov{qi,hi,si,di}_cc_sp64): Fix constraints.\n\t(*mov{qi,hi,si,di}_cc_reg_sp64): Likewise.\n\nFrom-SVN: r11602", "tree": {"sha": "811714615f1c51a59b6c82f63810b04ba976cd4f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/811714615f1c51a59b6c82f63810b04ba976cd4f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/57b7e1bf863f4e38f9b32ded83c11a337a193283", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/57b7e1bf863f4e38f9b32ded83c11a337a193283", "html_url": "https://github.com/Rust-GCC/gccrs/commit/57b7e1bf863f4e38f9b32ded83c11a337a193283", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/57b7e1bf863f4e38f9b32ded83c11a337a193283/comments", "author": null, "committer": null, "parents": [{"sha": "58cbf20e126b5a695a8042b7a41574c4c83fec3d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/58cbf20e126b5a695a8042b7a41574c4c83fec3d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/58cbf20e126b5a695a8042b7a41574c4c83fec3d"}], "stats": {"total": 38, "additions": 20, "deletions": 18}, "files": [{"sha": "bf6f1e2822c5a84046dcd242cebe0031c32bd344", "filename": "gcc/config/sparc/sparc.md", "status": "modified", "additions": 20, "deletions": 18, "changes": 38, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/57b7e1bf863f4e38f9b32ded83c11a337a193283/gcc%2Fconfig%2Fsparc%2Fsparc.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/57b7e1bf863f4e38f9b32ded83c11a337a193283/gcc%2Fconfig%2Fsparc%2Fsparc.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsparc%2Fsparc.md?ref=57b7e1bf863f4e38f9b32ded83c11a337a193283", "patch": "@@ -2386,8 +2386,8 @@\n \f\n ;; Sparc V9 conditional move instructions.\n \n-;; We can handle larger constants here for some flavors, but for now we play\n-;; it safe and only allow those constants supported by all flavours.\n+;; We can handle larger constants here for some flavors, but for now we keep\n+;; it simple and only allow those constants supported by all flavours.\n ;; Note that emit_conditional_move canonicalizes operands 2,3 so that operand\n ;; 3 contains the constant if one is present, but we handle either for\n ;; generality (sparc.c puts a constant in operand 2).\n@@ -2605,8 +2605,8 @@\n \t(if_then_else:QI (match_operator 1 \"comparison_operator\"\n \t\t\t\t[(match_operand 2 \"icc_or_fcc_reg_operand\" \"X,X\")\n \t\t\t\t (const_int 0)])\n-\t\t      (match_operand:QI 3 \"arith11_operand\" \"ri,0\")\n-\t\t      (match_operand:QI 4 \"arith11_operand\" \"0,ri\")))]\n+\t\t      (match_operand:QI 3 \"arith11_operand\" \"rL,0\")\n+\t\t      (match_operand:QI 4 \"arith11_operand\" \"0,rL\")))]\n   \"TARGET_V9\"\n   \"@\n    mov%C1 %x2,%3,%0\n@@ -2618,8 +2618,8 @@\n \t(if_then_else:HI (match_operator 1 \"comparison_operator\"\n \t\t\t\t[(match_operand 2 \"icc_or_fcc_reg_operand\" \"X,X\")\n \t\t\t\t (const_int 0)])\n-\t\t      (match_operand:HI 3 \"arith11_operand\" \"ri,0\")\n-\t\t      (match_operand:HI 4 \"arith11_operand\" \"0,ri\")))]\n+\t\t      (match_operand:HI 3 \"arith11_operand\" \"rL,0\")\n+\t\t      (match_operand:HI 4 \"arith11_operand\" \"0,rL\")))]\n   \"TARGET_V9\"\n   \"@\n    mov%C1 %x2,%3,%0\n@@ -2631,21 +2631,22 @@\n \t(if_then_else:SI (match_operator 1 \"comparison_operator\"\n \t\t\t\t[(match_operand 2 \"icc_or_fcc_reg_operand\" \"X,X\")\n \t\t\t\t (const_int 0)])\n-\t\t      (match_operand:SI 3 \"arith11_operand\" \"ri,0\")\n-\t\t      (match_operand:SI 4 \"arith11_operand\" \"0,ri\")))]\n+\t\t      (match_operand:SI 3 \"arith11_operand\" \"rL,0\")\n+\t\t      (match_operand:SI 4 \"arith11_operand\" \"0,rL\")))]\n   \"TARGET_V9\"\n   \"@\n    mov%C1 %x2,%3,%0\n    mov%c1 %x2,%4,%0\"\n   [(set_attr \"type\" \"cmove\")])\n \n+;; ??? The constraints of operands 3,4 need work.\n (define_insn \"*movdi_cc_sp64\"\n   [(set (match_operand:DI 0 \"register_operand\" \"=r,r\")\n \t(if_then_else:DI (match_operator 1 \"comparison_operator\"\n \t\t\t\t[(match_operand 2 \"icc_or_fcc_reg_operand\" \"X,X\")\n \t\t\t\t (const_int 0)])\n-\t\t      (match_operand:DI 3 \"arith11_double_operand\" \"rHI,0\")\n-\t\t      (match_operand:DI 4 \"arith11_double_operand\" \"0,rHI\")))]\n+\t\t      (match_operand:DI 3 \"arith11_double_operand\" \"rLH,0\")\n+\t\t      (match_operand:DI 4 \"arith11_double_operand\" \"0,rLH\")))]\n   \"TARGET_ARCH64\"\n   \"@\n    mov%C1 %x2,%3,%0\n@@ -2696,8 +2697,8 @@\n \t(if_then_else:QI (match_operator 1 \"v9_regcmp_op\"\n \t\t\t\t[(match_operand:DI 2 \"register_operand\" \"r,r\")\n \t\t\t\t (const_int 0)])\n-\t\t      (match_operand:QI 3 \"arith10_operand\" \"ri,0\")\n-\t\t      (match_operand:QI 4 \"arith10_operand\" \"0,ri\")))]\n+\t\t      (match_operand:QI 3 \"arith10_operand\" \"rM,0\")\n+\t\t      (match_operand:QI 4 \"arith10_operand\" \"0,rM\")))]\n   \"TARGET_ARCH64\"\n   \"@\n    movr%D1 %2,%r3,%0\n@@ -2709,8 +2710,8 @@\n \t(if_then_else:HI (match_operator 1 \"v9_regcmp_op\"\n \t\t\t\t[(match_operand:DI 2 \"register_operand\" \"r,r\")\n \t\t\t\t (const_int 0)])\n-\t\t      (match_operand:HI 3 \"arith10_operand\" \"ri,0\")\n-\t\t      (match_operand:HI 4 \"arith10_operand\" \"0,ri\")))]\n+\t\t      (match_operand:HI 3 \"arith10_operand\" \"rM,0\")\n+\t\t      (match_operand:HI 4 \"arith10_operand\" \"0,rM\")))]\n   \"TARGET_ARCH64\"\n   \"@\n    movr%D1 %2,%r3,%0\n@@ -2722,21 +2723,22 @@\n \t(if_then_else:SI (match_operator 1 \"v9_regcmp_op\"\n \t\t\t\t[(match_operand:DI 2 \"register_operand\" \"r,r\")\n \t\t\t\t (const_int 0)])\n-\t\t      (match_operand:SI 3 \"arith10_operand\" \"ri,0\")\n-\t\t      (match_operand:SI 4 \"arith10_operand\" \"0,ri\")))]\n+\t\t      (match_operand:SI 3 \"arith10_operand\" \"rM,0\")\n+\t\t      (match_operand:SI 4 \"arith10_operand\" \"0,rM\")))]\n   \"TARGET_ARCH64\"\n   \"@\n    movr%D1 %2,%r3,%0\n    movr%d1 %2,%r4,%0\"\n   [(set_attr \"type\" \"cmove\")])\n \n+;; ??? The constraints of operands 3,4 need work.\n (define_insn \"*movdi_cc_reg_sp64\"\n   [(set (match_operand:DI 0 \"register_operand\" \"=r,r\")\n \t(if_then_else:DI (match_operator 1 \"v9_regcmp_op\"\n \t\t\t\t[(match_operand:DI 2 \"register_operand\" \"r,r\")\n \t\t\t\t (const_int 0)])\n-\t\t      (match_operand:DI 3 \"arith10_double_operand\" \"ri,0\")\n-\t\t      (match_operand:DI 4 \"arith10_double_operand\" \"0,ri\")))]\n+\t\t      (match_operand:DI 3 \"arith10_double_operand\" \"rMH,0\")\n+\t\t      (match_operand:DI 4 \"arith10_double_operand\" \"0,rMH\")))]\n   \"TARGET_ARCH64\"\n   \"@\n    movr%D1 %2,%r3,%0"}]}