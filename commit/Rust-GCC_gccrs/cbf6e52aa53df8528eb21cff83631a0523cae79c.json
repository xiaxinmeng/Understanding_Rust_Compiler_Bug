{"sha": "cbf6e52aa53df8528eb21cff83631a0523cae79c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2JmNmU1MmFhNTNkZjg1MjhlYjIxY2ZmODM2MzFhMDUyM2NhZTc5Yw==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@libertysurf.fr", "date": "2003-12-23T05:32:02Z"}, "committer": {"name": "Eric Botcazou", "email": "ebotcazou@gcc.gnu.org", "date": "2003-12-23T05:32:02Z"}, "message": "re PR rtl-optimization/13394 (noreturn attribute ignored on recursive invokation)\n\n\tPR optimization/13394\n\t* toplev.c (rest_of_compilation): Move call to\n\tcheck_function_return_warnings right after the sibcall\n\toptimization pass.\n\nFrom-SVN: r74961", "tree": {"sha": "88603b729da510442c9773f6f802871336123067", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/88603b729da510442c9773f6f802871336123067"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/cbf6e52aa53df8528eb21cff83631a0523cae79c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cbf6e52aa53df8528eb21cff83631a0523cae79c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cbf6e52aa53df8528eb21cff83631a0523cae79c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cbf6e52aa53df8528eb21cff83631a0523cae79c/comments", "author": {"login": "ebotcazou", "id": 48091907, "node_id": "MDQ6VXNlcjQ4MDkxOTA3", "avatar_url": "https://avatars.githubusercontent.com/u/48091907?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ebotcazou", "html_url": "https://github.com/ebotcazou", "followers_url": "https://api.github.com/users/ebotcazou/followers", "following_url": "https://api.github.com/users/ebotcazou/following{/other_user}", "gists_url": "https://api.github.com/users/ebotcazou/gists{/gist_id}", "starred_url": "https://api.github.com/users/ebotcazou/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ebotcazou/subscriptions", "organizations_url": "https://api.github.com/users/ebotcazou/orgs", "repos_url": "https://api.github.com/users/ebotcazou/repos", "events_url": "https://api.github.com/users/ebotcazou/events{/privacy}", "received_events_url": "https://api.github.com/users/ebotcazou/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "b30063377737ba34e9ace3ce285d3bc2eb14d1a3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b30063377737ba34e9ace3ce285d3bc2eb14d1a3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b30063377737ba34e9ace3ce285d3bc2eb14d1a3"}], "stats": {"total": 65, "additions": 61, "deletions": 4}, "files": [{"sha": "f87dbac34baf2afa7de803eaf14866c4121195b6", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cbf6e52aa53df8528eb21cff83631a0523cae79c/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cbf6e52aa53df8528eb21cff83631a0523cae79c/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=cbf6e52aa53df8528eb21cff83631a0523cae79c", "patch": "@@ -1,3 +1,10 @@\n+2003-12-23  Eric Botcazou  <ebotcazou@libertysurf.fr>\n+\n+\tPR optimization/13394\n+\t* toplev.c (rest_of_compilation): Move call to\n+\tcheck_function_return_warnings right after the sibcall\n+\toptimization pass.\n+\n 2003-12-23  Eric Botcazou  <ebotcazou@libertysurf.fr>\n \n \tPR c/13382"}, {"sha": "9095c8a4dc58f4058a74bccd90b9b2c0c541ca1b", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cbf6e52aa53df8528eb21cff83631a0523cae79c/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cbf6e52aa53df8528eb21cff83631a0523cae79c/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=cbf6e52aa53df8528eb21cff83631a0523cae79c", "patch": "@@ -1,3 +1,7 @@\n+2003-12-23  Eric Botcazou  <ebotcazou@libertysurf.fr>\n+\n+\t* gcc.dg/noreturn-7.c: New test.\n+\n 2003-12-23  Eric Botcazou  <ebotcazou@libertysurf.fr>\n \n \t* gcc.dg/null-pointer-1.c: New test."}, {"sha": "1d94a7ccea59de76c28e9d8f2057f2d2233db9ad", "filename": "gcc/testsuite/gcc.dg/noreturn-7.c", "status": "added", "additions": 42, "deletions": 0, "changes": 42, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cbf6e52aa53df8528eb21cff83631a0523cae79c/gcc%2Ftestsuite%2Fgcc.dg%2Fnoreturn-7.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cbf6e52aa53df8528eb21cff83631a0523cae79c/gcc%2Ftestsuite%2Fgcc.dg%2Fnoreturn-7.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fnoreturn-7.c?ref=cbf6e52aa53df8528eb21cff83631a0523cae79c", "patch": "@@ -0,0 +1,42 @@\n+/* PR optimization/13394 */\n+/* Origin: Carlo Wood <carlo@gcc.gnu.org> */\n+\n+/* Verify that a bogus \"function does return\" warning is not issued\n+   in presence of tail recursion within a noreturn function.  */\n+\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -Wreturn-type -Wmissing-noreturn\" } */\n+\n+\n+void f(void) __attribute__ ((__noreturn__));\n+void _exit(int status) __attribute__ ((__noreturn__));\n+\n+int z = 0;\n+\n+void g()\n+{\n+  if (++z > 10)\n+    _exit(0);\n+  g();\n+}             /* { dg-warning \"possible candidate\" } */\n+\n+void f()\n+{\n+  if (++z > 10)\n+    _exit(0);\n+  f();\n+}             /* { dg-bogus \"does return\" } */\n+\n+int h()\n+{\n+  if (++z > 10)\n+    _exit(0);\n+  return h();\n+}             /* { dg-bogus \"end of non-void function\" } */\n+\n+int k()\n+{\n+  if (++z > 10)\n+    _exit(0);\n+  k();\n+}             /* { dg-warning \"end of non-void function\" } */"}, {"sha": "7d01eb6dc1c84f198019dfb66a055e07e71d4a89", "filename": "gcc/toplev.c", "status": "modified", "additions": 8, "deletions": 4, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cbf6e52aa53df8528eb21cff83631a0523cae79c/gcc%2Ftoplev.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cbf6e52aa53df8528eb21cff83631a0523cae79c/gcc%2Ftoplev.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftoplev.c?ref=cbf6e52aa53df8528eb21cff83631a0523cae79c", "patch": "@@ -3144,10 +3144,6 @@ rest_of_compilation (tree decl)\n \n   delete_unreachable_blocks ();\n \n-  /* We have to issue these warnings now already, because CFG cleanups\n-     further down may destroy the required information.  */\n-  check_function_return_warnings ();\n-\n   /* Turn NOTE_INSN_PREDICTIONs into branch predictions.  */\n   if (flag_guess_branch_prob)\n     {\n@@ -3159,6 +3155,14 @@ rest_of_compilation (tree decl)\n   if (flag_optimize_sibling_calls)\n     rest_of_handle_sibling_calls (insns);\n \n+  /* We have to issue these warnings now already, because CFG cleanups\n+     further down may destroy the required information.  However, this\n+     must be done after the sibcall optimization pass because the barrier\n+     emitted for noreturn calls that are candidate for the optimization\n+     is folded into the CALL_PLACEHOLDER until after this pass, so the\n+     CFG is inaccurate.  */\n+  check_function_return_warnings ();\n+\n   timevar_pop (TV_JUMP);\n \n   insn_locators_initialize ();"}]}