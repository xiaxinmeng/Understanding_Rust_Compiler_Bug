{"sha": "17dea42fc45256b06cb19bc36b18e77fdc0f20a6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTdkZWE0MmZjNDUyNTZiMDZjYjE5YmMzNmIxOGU3N2ZkYzBmMjBhNg==", "commit": {"author": {"name": "Richard Guenther", "email": "rguenther@suse.de", "date": "2011-03-15T09:49:33Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2011-03-15T09:49:33Z"}, "message": "re PR tree-optimization/48031 (gcc.c-torture/compile/pr42956.c ICEs gcc on m68k-linux, ivopts related?)\n\n2011-03-15  Richard Guenther  <rguenther@suse.de>\n\n\tPR middle-end/48031\n\t* fold-const.c (fold_indirect_ref_1): Do not create new variable-sized\n\tor variable-indexed array accesses when in gimple form.\n\nFrom-SVN: r170983", "tree": {"sha": "9ed7abab94bb943b76eaad5f4ca9db1c4dbf7235", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9ed7abab94bb943b76eaad5f4ca9db1c4dbf7235"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/17dea42fc45256b06cb19bc36b18e77fdc0f20a6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/17dea42fc45256b06cb19bc36b18e77fdc0f20a6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/17dea42fc45256b06cb19bc36b18e77fdc0f20a6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/17dea42fc45256b06cb19bc36b18e77fdc0f20a6/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "01c77a60551535ea2326f7e72723cd8962a64eb1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/01c77a60551535ea2326f7e72723cd8962a64eb1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/01c77a60551535ea2326f7e72723cd8962a64eb1"}], "stats": {"total": 20, "additions": 18, "deletions": 2}, "files": [{"sha": "94e8260e2076639cac4b20d51dab9ac8367fcb50", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/17dea42fc45256b06cb19bc36b18e77fdc0f20a6/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/17dea42fc45256b06cb19bc36b18e77fdc0f20a6/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=17dea42fc45256b06cb19bc36b18e77fdc0f20a6", "patch": "@@ -1,3 +1,9 @@\n+2011-03-15  Richard Guenther  <rguenther@suse.de>\n+\n+\tPR middle-end/48031\n+\t* fold-const.c (fold_indirect_ref_1): Do not create new variable-sized\n+\tor variable-indexed array accesses when in gimple form.\n+\n 2011-03-15  Richard Guenther  <rguenther@suse.de>\n \n \t* config/i386/i386.c (ix86_emit_swdivsf): Implement more"}, {"sha": "5d92e0d76223a54a71ee8df69ef6f2c3bd257cff", "filename": "gcc/fold-const.c", "status": "modified", "additions": 12, "deletions": 2, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/17dea42fc45256b06cb19bc36b18e77fdc0f20a6/gcc%2Ffold-const.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/17dea42fc45256b06cb19bc36b18e77fdc0f20a6/gcc%2Ffold-const.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffold-const.c?ref=17dea42fc45256b06cb19bc36b18e77fdc0f20a6", "patch": "@@ -15562,12 +15562,17 @@ fold_indirect_ref_1 (location_t loc, tree type, tree op0)\n \t}\n       /* *(foo *)&fooarray => fooarray[0] */\n       else if (TREE_CODE (optype) == ARRAY_TYPE\n-\t       && type == TREE_TYPE (optype))\n+\t       && type == TREE_TYPE (optype)\n+\t       && (!in_gimple_form\n+\t\t   || TREE_CODE (TYPE_SIZE (type)) == INTEGER_CST))\n \t{\n \t  tree type_domain = TYPE_DOMAIN (optype);\n \t  tree min_val = size_zero_node;\n \t  if (type_domain && TYPE_MIN_VALUE (type_domain))\n \t    min_val = TYPE_MIN_VALUE (type_domain);\n+\t  if (in_gimple_form\n+\t      && TREE_CODE (min_val) != INTEGER_CST)\n+\t    return NULL_TREE;\n \t  return build4_loc (loc, ARRAY_REF, type, op, min_val,\n \t\t\t     NULL_TREE, NULL_TREE);\n \t}\n@@ -15641,14 +15646,19 @@ fold_indirect_ref_1 (location_t loc, tree type, tree op0)\n \n   /* *(foo *)fooarrptr => (*fooarrptr)[0] */\n   if (TREE_CODE (TREE_TYPE (subtype)) == ARRAY_TYPE\n-      && type == TREE_TYPE (TREE_TYPE (subtype)))\n+      && type == TREE_TYPE (TREE_TYPE (subtype))\n+      && (!in_gimple_form\n+\t  || TREE_CODE (TYPE_SIZE (type)) == INTEGER_CST))\n     {\n       tree type_domain;\n       tree min_val = size_zero_node;\n       sub = build_fold_indirect_ref_loc (loc, sub);\n       type_domain = TYPE_DOMAIN (TREE_TYPE (sub));\n       if (type_domain && TYPE_MIN_VALUE (type_domain))\n \tmin_val = TYPE_MIN_VALUE (type_domain);\n+      if (in_gimple_form\n+\t  && TREE_CODE (min_val) != INTEGER_CST)\n+\treturn NULL_TREE;\n       return build4_loc (loc, ARRAY_REF, type, sub, min_val, NULL_TREE,\n \t\t\t NULL_TREE);\n     }"}]}