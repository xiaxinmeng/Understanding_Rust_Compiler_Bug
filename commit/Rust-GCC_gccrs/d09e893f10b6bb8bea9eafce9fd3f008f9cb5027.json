{"sha": "d09e893f10b6bb8bea9eafce9fd3f008f9cb5027", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDA5ZTg5M2YxMGI2YmI4YmVhOWVhZmNlOWZkM2YwMDhmOWNiNTAyNw==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2005-12-31T23:45:58Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2005-12-31T23:45:58Z"}, "message": "re PR c++/25294 (Bogus \"unterminated comment\" error from #pragma comment)\n\n\tPR c++/25294\n\t* directives.c (do_pragma): If pragma line ends with multi-line\n\tblock comment, end the saved deferred pragma string before that\n\tcomment.  Handle embedded '\\0' chars on the pragma line.\n\n\t* gcc.dg/pragma-pack-3.c: New test.\n\t* g++.dg/parse/pragma3.C: New test.\n\nFrom-SVN: r109201", "tree": {"sha": "ce308977cf7e39a7110238524fc15f921883e86a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ce308977cf7e39a7110238524fc15f921883e86a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d09e893f10b6bb8bea9eafce9fd3f008f9cb5027", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d09e893f10b6bb8bea9eafce9fd3f008f9cb5027", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d09e893f10b6bb8bea9eafce9fd3f008f9cb5027", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d09e893f10b6bb8bea9eafce9fd3f008f9cb5027/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "2984956b2f436d4be9d85777a4d4ba1ea00a208a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2984956b2f436d4be9d85777a4d4ba1ea00a208a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2984956b2f436d4be9d85777a4d4ba1ea00a208a"}], "stats": {"total": 119, "additions": 115, "deletions": 4}, "files": [{"sha": "e953e006debc486e45b6c251c87d6de839d4db19", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d09e893f10b6bb8bea9eafce9fd3f008f9cb5027/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d09e893f10b6bb8bea9eafce9fd3f008f9cb5027/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=d09e893f10b6bb8bea9eafce9fd3f008f9cb5027", "patch": "@@ -1,3 +1,9 @@\n+2006-01-01  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR c++/25294\n+\t* gcc.dg/pragma-pack-3.c: New test.\n+\t* g++.dg/parse/pragma3.C: New test.\n+\n 2005-12-30  John David Anglin  <dave.anglin@nrc-cnrc.gc.ca>\n \n \tPR middle-end/24827"}, {"sha": "36d7a8c6284bfe6998f4150490ce0aaaa13a5cd0", "filename": "gcc/testsuite/g++.dg/parse/pragma3.C", "status": "added", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d09e893f10b6bb8bea9eafce9fd3f008f9cb5027/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Fpragma3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d09e893f10b6bb8bea9eafce9fd3f008f9cb5027/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Fpragma3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Fpragma3.C?ref=d09e893f10b6bb8bea9eafce9fd3f008f9cb5027", "patch": "@@ -0,0 +1,26 @@\n+// PR c++/25294\n+// { dg-do run }\n+\n+extern \"C\" void abort (void);\n+\n+struct S\n+{\n+  char a[3];\n+#pragma pack(1) /* A block comment\n+\t\t   that ends on the next line.  */\n+  struct T\n+  {\n+    char b;\n+    int c;\n+  } d;\n+#pragma pack /*/ */ () // C++ comment\n+  int e;\n+} s;\n+\n+int\n+main ()\n+{\n+  if (sizeof (int) == 4 && sizeof (s) != 12)\n+    abort ();\n+  return 0;\n+}"}, {"sha": "e276bd007fe3fde8443e49af56584e7b021f2e98", "filename": "gcc/testsuite/gcc.dg/pragma-pack-3.c", "status": "added", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d09e893f10b6bb8bea9eafce9fd3f008f9cb5027/gcc%2Ftestsuite%2Fgcc.dg%2Fpragma-pack-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d09e893f10b6bb8bea9eafce9fd3f008f9cb5027/gcc%2Ftestsuite%2Fgcc.dg%2Fpragma-pack-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpragma-pack-3.c?ref=d09e893f10b6bb8bea9eafce9fd3f008f9cb5027", "patch": "@@ -0,0 +1,27 @@\n+/* PR c++/25294 */\n+/* { dg-options \"-std=gnu99\" } */\n+/* { dg-do run } */\n+\n+extern void abort (void);\n+\n+struct S\n+{\n+  char a[3];\n+#pragma pack(1) /* A block comment\n+\t\t   that ends on the next line.  */\n+  struct T\n+  {\n+    char b;\n+    int c;\n+  } d;\n+#pragma pack /*/ */ () // C++ comment\n+  int e;\n+} s;\n+\n+int\n+main ()\n+{\n+  if (sizeof (int) == 4 && sizeof (s) != 12)\n+    abort ();\n+  return 0;\n+}"}, {"sha": "b2f0c9a2bf96384fadc6053a4b761664b11b3986", "filename": "libcpp/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d09e893f10b6bb8bea9eafce9fd3f008f9cb5027/libcpp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d09e893f10b6bb8bea9eafce9fd3f008f9cb5027/libcpp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libcpp%2FChangeLog?ref=d09e893f10b6bb8bea9eafce9fd3f008f9cb5027", "patch": "@@ -1,3 +1,10 @@\n+2006-01-01  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR c++/25294\n+\t* directives.c (do_pragma): If pragma line ends with multi-line\n+\tblock comment, end the saved deferred pragma string before that\n+\tcomment.  Handle embedded '\\0' chars on the pragma line.\n+\n 2005-12-22  Volker Reichelt  <reichelt@igpm.rwth-aachen.de>\n \n \tPR c++/23333"}, {"sha": "2de65fbeaa348ec1a97f623e37923d32f3555094", "filename": "libcpp/directives.c", "status": "modified", "additions": 49, "deletions": 4, "changes": 53, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d09e893f10b6bb8bea9eafce9fd3f008f9cb5027/libcpp%2Fdirectives.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d09e893f10b6bb8bea9eafce9fd3f008f9cb5027/libcpp%2Fdirectives.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libcpp%2Fdirectives.c?ref=d09e893f10b6bb8bea9eafce9fd3f008f9cb5027", "patch": "@@ -1,6 +1,7 @@\n /* CPP Library. (Directive handling.)\n    Copyright (C) 1986, 1987, 1989, 1992, 1993, 1994, 1995, 1996, 1997, 1998,\n-   1999, 2000, 2001, 2002, 2003, 2004, 2005 Free Software Foundation, Inc.\n+   1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006\n+   Free Software Foundation, Inc.\n    Contributed by Per Bothner, 1994-95.\n    Based on CCCP program by Paul Rubin, June 1986\n    Adapted to ANSI C, Richard Stallman, Jan 1987\n@@ -1280,15 +1281,59 @@ do_pragma (cpp_reader *pfile)\n \t  /* Squirrel away the pragma text.  Pragmas are\n \t     newline-terminated. */\n \t  const uchar *line_end;\n-\t  uchar *s;\n+\t  uchar *s, c, cc;\n \t  cpp_string body;\n \t  cpp_token *ptok;\n \n-\t  line_end = ustrchr (line_start, '\\n');\n+\t  for (line_end = line_start; (c = *line_end) != '\\n'; line_end++)\n+\t    if (c == '\"' || c == '\\'')\n+\t      {\n+\t\t/* Skip over string literal.  */\n+\t\tdo\n+\t\t  {\n+\t\t    cc = *++line_end;\n+\t\t    if (cc == '\\\\' && line_end[1] != '\\n')\n+\t\t      line_end++;\n+\t\t    else if (cc == '\\n')\n+\t\t      {\n+\t\t\tline_end--;\n+\t\t\tbreak;\n+\t\t      }\n+\t\t  }\n+\t\twhile (cc != c);\n+\t      }\n+\t    else if (c == '/')\n+\t      {\n+\t\tif (line_end[1] == '*')\n+\t\t  {\n+\t\t    /* Skip over C block comment, unless it is multi-line.\n+\t\t       When encountering multi-line block comment, terminate\n+\t\t       the pragma token right before that block comment.  */\n+\t\t    const uchar *le = line_end + 2;\n+\t\t    while (*le != '\\n')\n+\t\t      if (*le++ == '*' && *le == '/')\n+\t\t\t{\n+\t\t\t  line_end = le;\n+\t\t\t  break;\n+\t\t\t}\n+\t\t    if (line_end < le)\n+\t\t      break;\n+\t\t  }\n+\t\telse if (line_end[1] == '/'\n+\t\t\t && (CPP_OPTION (pfile, cplusplus_comments)\n+\t\t\t     || cpp_in_system_header (pfile)))\n+\t\t  {\n+\t\t    line_end += 2;\n+\t\t    while (*line_end != '\\n')\n+\t\t      line_end++;\n+\t\t    break;\n+\t\t  }\n+\t      }\n \n \t  body.len = (line_end - line_start) + 1;\n \t  s = _cpp_unaligned_alloc (pfile, body.len + 1);\n-\t  memcpy (s, line_start, body.len);\n+\t  memcpy (s, line_start, body.len - 1);\n+\t  s[body.len - 1] = '\\n';\n \t  s[body.len] = '\\0';\n \t  body.text = s;\n "}]}