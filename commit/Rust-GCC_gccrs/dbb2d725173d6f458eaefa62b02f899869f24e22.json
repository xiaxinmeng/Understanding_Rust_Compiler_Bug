{"sha": "dbb2d725173d6f458eaefa62b02f899869f24e22", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGJiMmQ3MjUxNzNkNmY0NThlYWVmYTYyYjAyZjg5OTg2OWYyNGUyMg==", "commit": {"author": {"name": "Kyrylo Tkachov", "email": "kyrylo.tkachov@arm.com", "date": "2015-04-23T10:24:07Z"}, "committer": {"name": "Kyrylo Tkachov", "email": "ktkachov@gcc.gnu.org", "date": "2015-04-23T10:24:07Z"}, "message": "[ARM] Make issue rate part of per-core tuning structs\n\n\t* config/arm/arm-protos.h (struct tune_params): Add issue_rate field.\n\t* config/arm/arm.c (arm_slowmul_tune, arm_fastmul_tune,\n\tarm_strongarm_tune, arm_xscale_tune, arm_9e_tune, arm_v6t2_tune,\n\tarm_cortex_tune, arm_cortex_a8_tune, arm_cortex_a7_tune,\n\tarm_cortex_a15_tune, arm_cortex_a53_tune, arm_cortex_a57_tune,\n\tarm_cortex_a9_tune, arm_cortex_a12_tune, arm_v7m_tune, arm_v6m_tune,\n\tarm_fa726te_tune arm_cortex_a5_tune, arm_xgene1_tune):\n\tSpecify issue_rate value.\n\t(arm_issue_rate): Look up issue rate from tuning structs. Remove\n\tlarge switch statement.\n\t(arm_marvell_pj4_tune): New struct.\n\t* config/arm/arm-cores.def (marvell-pj4): Use arm_marvell_pj4_tune\n\tstruct.\n\nFrom-SVN: r222356", "tree": {"sha": "6937ac77a18e2ff79761a2f097a2ddb3c35e1fdd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6937ac77a18e2ff79761a2f097a2ddb3c35e1fdd"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/dbb2d725173d6f458eaefa62b02f899869f24e22", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dbb2d725173d6f458eaefa62b02f899869f24e22", "html_url": "https://github.com/Rust-GCC/gccrs/commit/dbb2d725173d6f458eaefa62b02f899869f24e22", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dbb2d725173d6f458eaefa62b02f899869f24e22/comments", "author": {"login": "ktkachov-arm", "id": 74917949, "node_id": "MDQ6VXNlcjc0OTE3OTQ5", "avatar_url": "https://avatars.githubusercontent.com/u/74917949?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ktkachov-arm", "html_url": "https://github.com/ktkachov-arm", "followers_url": "https://api.github.com/users/ktkachov-arm/followers", "following_url": "https://api.github.com/users/ktkachov-arm/following{/other_user}", "gists_url": "https://api.github.com/users/ktkachov-arm/gists{/gist_id}", "starred_url": "https://api.github.com/users/ktkachov-arm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ktkachov-arm/subscriptions", "organizations_url": "https://api.github.com/users/ktkachov-arm/orgs", "repos_url": "https://api.github.com/users/ktkachov-arm/repos", "events_url": "https://api.github.com/users/ktkachov-arm/events{/privacy}", "received_events_url": "https://api.github.com/users/ktkachov-arm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "2e8ab70c2eee7a912ac74b57c47e7bc32f9f1198", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2e8ab70c2eee7a912ac74b57c47e7bc32f9f1198", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2e8ab70c2eee7a912ac74b57c47e7bc32f9f1198"}], "stats": {"total": 137, "additions": 85, "deletions": 52}, "files": [{"sha": "488dc89854e865720c3e6a823add441267f611e8", "filename": "gcc/ChangeLog", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dbb2d725173d6f458eaefa62b02f899869f24e22/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dbb2d725173d6f458eaefa62b02f899869f24e22/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=dbb2d725173d6f458eaefa62b02f899869f24e22", "patch": "@@ -1,3 +1,19 @@\n+2015-04-23  Kyrylo Tkachov  <kyrylo.tkachov@arm.com>\n+\n+\t* config/arm/arm-protos.h (struct tune_params): Add issue_rate field.\n+\t* config/arm/arm.c (arm_slowmul_tune, arm_fastmul_tune,\n+\tarm_strongarm_tune, arm_xscale_tune, arm_9e_tune, arm_v6t2_tune,\n+\tarm_cortex_tune, arm_cortex_a8_tune, arm_cortex_a7_tune,\n+\tarm_cortex_a15_tune, arm_cortex_a53_tune, arm_cortex_a57_tune,\n+\tarm_cortex_a9_tune, arm_cortex_a12_tune, arm_v7m_tune, arm_v6m_tune,\n+\tarm_fa726te_tune arm_cortex_a5_tune, arm_xgene1_tune):\n+\tSpecify issue_rate value.\n+\t(arm_issue_rate): Look up issue rate from tuning structs. Remove\n+\tlarge switch statement.\n+\t(arm_marvell_pj4_tune): New struct.\n+\t* config/arm/arm-cores.def (marvell-pj4): Use arm_marvell_pj4_tune\n+\tstruct.\n+\n 2015-04-23  Richard Biener  <rguenther@suse.de>\n \n \t* tree-vect-slp.c (vect_find_first_load_in_slp_instance): Remove."}, {"sha": "103c3140514b31afd7f80e17bdc742779f53bf4f", "filename": "gcc/config/arm/arm-cores.def", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dbb2d725173d6f458eaefa62b02f899869f24e22/gcc%2Fconfig%2Farm%2Farm-cores.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dbb2d725173d6f458eaefa62b02f899869f24e22/gcc%2Fconfig%2Farm%2Farm-cores.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm-cores.def?ref=dbb2d725173d6f458eaefa62b02f899869f24e22", "patch": "@@ -158,7 +158,7 @@ ARM_CORE(\"cortex-r7\",\t\tcortexr7, cortexr7,\t\t7R,  FL_LDSCHED | FL_ARM_DIV, cortex\n ARM_CORE(\"cortex-m7\",\t\tcortexm7, cortexm7,\t\t7EM, FL_LDSCHED | FL_NO_VOLATILE_CE, cortex_m7)\n ARM_CORE(\"cortex-m4\",\t\tcortexm4, cortexm4,\t\t7EM, FL_LDSCHED, v7m)\n ARM_CORE(\"cortex-m3\",\t\tcortexm3, cortexm3,\t\t7M,  FL_LDSCHED, v7m)\n-ARM_CORE(\"marvell-pj4\",\t\tmarvell_pj4, marvell_pj4,\t7A,  FL_LDSCHED, 9e)\n+ARM_CORE(\"marvell-pj4\",\t\tmarvell_pj4, marvell_pj4,\t7A,  FL_LDSCHED, marvell_pj4)\n \n /* V7 big.LITTLE implementations */\n ARM_CORE(\"cortex-a15.cortex-a7\", cortexa15cortexa7, cortexa7,\t7A,  FL_LDSCHED | FL_THUMB_DIV | FL_ARM_DIV, cortex_a15)"}, {"sha": "e2a0ccd22683c6bafa976c090b4865fa65c4fad0", "filename": "gcc/config/arm/arm-protos.h", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dbb2d725173d6f458eaefa62b02f899869f24e22/gcc%2Fconfig%2Farm%2Farm-protos.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dbb2d725173d6f458eaefa62b02f899869f24e22/gcc%2Fconfig%2Farm%2Farm-protos.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm-protos.h?ref=dbb2d725173d6f458eaefa62b02f899869f24e22", "patch": "@@ -303,6 +303,8 @@ struct tune_params\n   unsigned int fuseable_ops;\n   /* Depth of scheduling queue to check for L2 autoprefetcher.  */\n   enum arm_sched_autopref sched_autopref;\n+  /* Issue rate of the processor.  */\n+  unsigned int issue_rate;\n };\n \n extern const struct tune_params *current_tune;"}, {"sha": "b5cd9a7f83f276552ce743c92d02b9def241684b", "filename": "gcc/config/arm/arm.c", "status": "modified", "additions": 66, "deletions": 51, "changes": 117, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dbb2d725173d6f458eaefa62b02f899869f24e22/gcc%2Fconfig%2Farm%2Farm.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dbb2d725173d6f458eaefa62b02f899869f24e22/gcc%2Fconfig%2Farm%2Farm.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm.c?ref=dbb2d725173d6f458eaefa62b02f899869f24e22", "patch": "@@ -1699,7 +1699,8 @@ const struct tune_params arm_slowmul_tune =\n   false,\t\t\t\t\t/* Prefer Neon for stringops.  */\n   8,\t\t\t\t\t\t/* Maximum insns to inline memset.  */\n   ARM_FUSE_NOTHING,\t\t\t\t/* Fuseable pairs of instructions.  */\n-  ARM_SCHED_AUTOPREF_OFF\t\t\t/* Sched L2 autopref.  */\n+  ARM_SCHED_AUTOPREF_OFF,\t\t\t/* Sched L2 autopref.  */\n+  1\t\t\t\t\t\t/* Issue rate.  */\n };\n \n const struct tune_params arm_fastmul_tune =\n@@ -1720,7 +1721,8 @@ const struct tune_params arm_fastmul_tune =\n   false,\t\t\t\t\t/* Prefer Neon for stringops.  */\n   8,\t\t\t\t\t\t/* Maximum insns to inline memset.  */\n   ARM_FUSE_NOTHING,\t\t\t\t/* Fuseable pairs of instructions.  */\n-  ARM_SCHED_AUTOPREF_OFF\t\t\t/* Sched L2 autopref.  */\n+  ARM_SCHED_AUTOPREF_OFF,\t\t\t/* Sched L2 autopref.  */\n+  1\t\t\t\t\t\t/* Issue rate.  */\n };\n \n /* StrongARM has early execution of branches, so a sequence that is worth\n@@ -1744,7 +1746,8 @@ const struct tune_params arm_strongarm_tune =\n   false,\t\t\t\t\t/* Prefer Neon for stringops.  */\n   8,\t\t\t\t\t\t/* Maximum insns to inline memset.  */\n   ARM_FUSE_NOTHING,\t\t\t\t/* Fuseable pairs of instructions.  */\n-  ARM_SCHED_AUTOPREF_OFF\t\t\t/* Sched L2 autopref.  */\n+  ARM_SCHED_AUTOPREF_OFF,\t\t\t/* Sched L2 autopref.  */\n+  1\t\t\t\t\t\t/* Issue rate.  */\n };\n \n const struct tune_params arm_xscale_tune =\n@@ -1765,7 +1768,8 @@ const struct tune_params arm_xscale_tune =\n   false,\t\t\t\t\t/* Prefer Neon for stringops.  */\n   8,\t\t\t\t\t\t/* Maximum insns to inline memset.  */\n   ARM_FUSE_NOTHING,\t\t\t\t/* Fuseable pairs of instructions.  */\n-  ARM_SCHED_AUTOPREF_OFF\t\t\t/* Sched L2 autopref.  */\n+  ARM_SCHED_AUTOPREF_OFF,\t\t\t/* Sched L2 autopref.  */\n+  1\t\t\t\t\t\t/* Issue rate.  */\n };\n \n const struct tune_params arm_9e_tune =\n@@ -1786,7 +1790,30 @@ const struct tune_params arm_9e_tune =\n   false,\t\t\t\t\t/* Prefer Neon for stringops.  */\n   8,\t\t\t\t\t\t/* Maximum insns to inline memset.  */\n   ARM_FUSE_NOTHING,\t\t\t\t/* Fuseable pairs of instructions.  */\n-  ARM_SCHED_AUTOPREF_OFF\t\t\t/* Sched L2 autopref.  */\n+  ARM_SCHED_AUTOPREF_OFF,\t\t\t/* Sched L2 autopref.  */\n+  1\t\t\t\t\t\t/* Issue rate.  */\n+};\n+\n+const struct tune_params arm_marvell_pj4_tune =\n+{\n+  arm_9e_rtx_costs,\n+  NULL,\n+  NULL,\t\t\t\t\t\t/* Sched adj cost.  */\n+  1,\t\t\t\t\t\t/* Constant limit.  */\n+  5,\t\t\t\t\t\t/* Max cond insns.  */\n+  ARM_PREFETCH_NOT_BENEFICIAL,\n+  true,\t\t\t\t\t\t/* Prefer constant pool.  */\n+  arm_default_branch_cost,\n+  false,\t\t\t\t\t/* Prefer LDRD/STRD.  */\n+  {true, true},\t\t\t\t\t/* Prefer non short circuit.  */\n+  &arm_default_vec_cost,\t\t\t/* Vectorizer costs.  */\n+  false,\t\t\t\t\t/* Prefer Neon for 64-bits bitops.  */\n+  false, false,\t\t\t\t\t/* Prefer 32-bit encodings.  */\n+  false,\t\t\t\t\t/* Prefer Neon for stringops.  */\n+  8,\t\t\t\t\t\t/* Maximum insns to inline memset.  */\n+  ARM_FUSE_NOTHING,\t\t\t\t/* Fuseable pairs of instructions.  */\n+  ARM_SCHED_AUTOPREF_OFF,\t\t\t/* Sched L2 autopref.  */\n+  2\t\t\t\t\t\t/* Issue rate.  */\n };\n \n const struct tune_params arm_v6t2_tune =\n@@ -1807,9 +1834,11 @@ const struct tune_params arm_v6t2_tune =\n   false,\t\t\t\t\t/* Prefer Neon for stringops.  */\n   8,\t\t\t\t\t\t/* Maximum insns to inline memset.  */\n   ARM_FUSE_NOTHING,\t\t\t\t/* Fuseable pairs of instructions.  */\n-  ARM_SCHED_AUTOPREF_OFF\t\t\t/* Sched L2 autopref.  */\n+  ARM_SCHED_AUTOPREF_OFF,\t\t\t/* Sched L2 autopref.  */\n+  1\t\t\t\t\t\t/* Issue rate.  */\n };\n \n+\n /* Generic Cortex tuning.  Use more specific tunings if appropriate.  */\n const struct tune_params arm_cortex_tune =\n {\n@@ -1829,7 +1858,8 @@ const struct tune_params arm_cortex_tune =\n   false,\t\t\t\t\t/* Prefer Neon for stringops.  */\n   8,\t\t\t\t\t\t/* Maximum insns to inline memset.  */\n   ARM_FUSE_NOTHING,\t\t\t\t/* Fuseable pairs of instructions.  */\n-  ARM_SCHED_AUTOPREF_OFF\t\t\t/* Sched L2 autopref.  */\n+  ARM_SCHED_AUTOPREF_OFF,\t\t\t/* Sched L2 autopref.  */\n+  2\t\t\t\t\t\t/* Issue rate.  */\n };\n \n const struct tune_params arm_cortex_a8_tune =\n@@ -1850,7 +1880,8 @@ const struct tune_params arm_cortex_a8_tune =\n   true,\t\t\t\t\t\t/* Prefer Neon for stringops.  */\n   8,\t\t\t\t\t\t/* Maximum insns to inline memset.  */\n   ARM_FUSE_NOTHING,\t\t\t\t/* Fuseable pairs of instructions.  */\n-  ARM_SCHED_AUTOPREF_OFF\t\t\t/* Sched L2 autopref.  */\n+  ARM_SCHED_AUTOPREF_OFF,\t\t\t/* Sched L2 autopref.  */\n+   2\t\t\t\t\t\t/* Issue rate.  */\n };\n \n const struct tune_params arm_cortex_a7_tune =\n@@ -1871,7 +1902,8 @@ const struct tune_params arm_cortex_a7_tune =\n   true,\t\t\t\t\t\t/* Prefer Neon for stringops.  */\n   8,\t\t\t\t\t\t/* Maximum insns to inline memset.  */\n   ARM_FUSE_NOTHING,\t\t\t\t/* Fuseable pairs of instructions.  */\n-  ARM_SCHED_AUTOPREF_OFF\t\t\t/* Sched L2 autopref.  */\n+  ARM_SCHED_AUTOPREF_OFF,\t\t\t/* Sched L2 autopref.  */\n+  2\t\t\t\t\t\t/* Issue rate.  */\n };\n \n const struct tune_params arm_cortex_a15_tune =\n@@ -1892,7 +1924,8 @@ const struct tune_params arm_cortex_a15_tune =\n   true,\t\t\t\t\t\t/* Prefer Neon for stringops.  */\n   8,\t\t\t\t\t\t/* Maximum insns to inline memset.  */\n   ARM_FUSE_NOTHING,\t\t\t\t/* Fuseable pairs of instructions.  */\n-  ARM_SCHED_AUTOPREF_FULL\t\t\t/* Sched L2 autopref.  */\n+  ARM_SCHED_AUTOPREF_FULL,\t\t\t/* Sched L2 autopref.  */\n+  3\t\t\t\t\t\t/* Issue rate.  */\n };\n \n const struct tune_params arm_cortex_a53_tune =\n@@ -1913,7 +1946,8 @@ const struct tune_params arm_cortex_a53_tune =\n   true,\t\t\t\t\t\t/* Prefer Neon for stringops.  */\n   8,\t\t\t\t\t\t/* Maximum insns to inline memset.  */\n   ARM_FUSE_MOVW_MOVT,\t\t\t\t/* Fuseable pairs of instructions.  */\n-  ARM_SCHED_AUTOPREF_OFF\t\t\t/* Sched L2 autopref.  */\n+  ARM_SCHED_AUTOPREF_OFF,\t\t\t/* Sched L2 autopref.  */\n+  2\t\t\t\t\t\t/* Issue rate.  */\n };\n \n const struct tune_params arm_cortex_a57_tune =\n@@ -1934,7 +1968,8 @@ const struct tune_params arm_cortex_a57_tune =\n   true,\t\t\t\t\t\t/* Prefer Neon for stringops.  */\n   8,\t\t\t\t\t\t/* Maximum insns to inline memset.  */\n   ARM_FUSE_MOVW_MOVT,\t\t\t\t/* Fuseable pairs of instructions.  */\n-  ARM_SCHED_AUTOPREF_FULL\t\t\t/* Sched L2 autopref.  */\n+  ARM_SCHED_AUTOPREF_FULL,\t\t\t/* Sched L2 autopref.  */\n+  3\t\t\t\t\t\t/* Issue rate.  */\n };\n \n const struct tune_params arm_xgene1_tune =\n@@ -1955,7 +1990,8 @@ const struct tune_params arm_xgene1_tune =\n   false,\t\t\t\t       /* Prefer Neon for stringops.  */\n   32,\t\t\t\t\t       /* Maximum insns to inline memset.  */\n   ARM_FUSE_NOTHING,\t\t\t\t/* Fuseable pairs of instructions.  */\n-  ARM_SCHED_AUTOPREF_OFF\t\t\t/* Sched L2 autopref.  */\n+  ARM_SCHED_AUTOPREF_OFF,\t\t\t/* Sched L2 autopref.  */\n+  4\t\t\t\t\t\t/* Issue rate.  */\n };\n \n /* Branches can be dual-issued on Cortex-A5, so conditional execution is\n@@ -1979,7 +2015,8 @@ const struct tune_params arm_cortex_a5_tune =\n   true,\t\t\t\t\t\t/* Prefer Neon for stringops.  */\n   8,\t\t\t\t\t\t/* Maximum insns to inline memset.  */\n   ARM_FUSE_NOTHING,\t\t\t\t/* Fuseable pairs of instructions.  */\n-  ARM_SCHED_AUTOPREF_OFF\t\t\t/* Sched L2 autopref.  */\n+  ARM_SCHED_AUTOPREF_OFF,\t\t\t/* Sched L2 autopref.  */\n+  2\t\t\t\t\t\t/* Issue rate.  */\n };\n \n const struct tune_params arm_cortex_a9_tune =\n@@ -2000,7 +2037,8 @@ const struct tune_params arm_cortex_a9_tune =\n   false,\t\t\t\t\t/* Prefer Neon for stringops.  */\n   8,\t\t\t\t\t\t/* Maximum insns to inline memset.  */\n   ARM_FUSE_NOTHING,\t\t\t\t/* Fuseable pairs of instructions.  */\n-  ARM_SCHED_AUTOPREF_OFF\t\t\t/* Sched L2 autopref.  */\n+  ARM_SCHED_AUTOPREF_OFF,\t\t\t/* Sched L2 autopref.  */\n+  2\t\t\t\t\t\t/* Issue rate.  */\n };\n \n const struct tune_params arm_cortex_a12_tune =\n@@ -2021,7 +2059,8 @@ const struct tune_params arm_cortex_a12_tune =\n   true,\t\t\t\t\t\t/* Prefer Neon for stringops.  */\n   8,\t\t\t\t\t\t/* Maximum insns to inline memset.  */\n   ARM_FUSE_MOVW_MOVT,\t\t\t\t/* Fuseable pairs of instructions.  */\n-  ARM_SCHED_AUTOPREF_OFF\t\t\t/* Sched L2 autopref.  */\n+  ARM_SCHED_AUTOPREF_OFF,\t\t\t/* Sched L2 autopref.  */\n+  2\t\t\t\t\t\t/* Issue rate.  */\n };\n \n /* armv7m tuning.  On Cortex-M4 cores for example, MOVW/MOVT take a single\n@@ -2049,7 +2088,8 @@ const struct tune_params arm_v7m_tune =\n   false,\t\t\t\t\t/* Prefer Neon for stringops.  */\n   8,\t\t\t\t\t\t/* Maximum insns to inline memset.  */\n   ARM_FUSE_NOTHING,\t\t\t\t/* Fuseable pairs of instructions.  */\n-  ARM_SCHED_AUTOPREF_OFF\t\t\t/* Sched L2 autopref.  */\n+  ARM_SCHED_AUTOPREF_OFF,\t\t\t/* Sched L2 autopref.  */\n+  1\t\t\t\t\t\t/* Issue rate.  */\n };\n \n /* Cortex-M7 tuning.  */\n@@ -2072,7 +2112,8 @@ const struct tune_params arm_cortex_m7_tune =\n   false,\t\t\t\t\t/* Prefer Neon for stringops.  */\n   8,\t\t\t\t\t\t/* Maximum insns to inline memset.  */\n   ARM_FUSE_NOTHING,\t\t\t\t/* Fuseable pairs of instructions.  */\n-  ARM_SCHED_AUTOPREF_OFF\t\t\t/* Sched L2 autopref.  */\n+  ARM_SCHED_AUTOPREF_OFF,\t\t\t/* Sched L2 autopref.  */\n+  2\t\t\t\t\t\t/* Issue rate.  */\n };\n \n /* The arm_v6m_tune is duplicated from arm_cortex_tune, rather than\n@@ -2095,7 +2136,8 @@ const struct tune_params arm_v6m_tune =\n   false,\t\t\t\t\t/* Prefer Neon for stringops.  */\n   8,\t\t\t\t\t\t/* Maximum insns to inline memset.  */\n   ARM_FUSE_NOTHING,\t\t\t\t/* Fuseable pairs of instructions.  */\n-  ARM_SCHED_AUTOPREF_OFF\t\t\t/* Sched L2 autopref.  */\n+  ARM_SCHED_AUTOPREF_OFF,\t\t\t/* Sched L2 autopref.  */\n+  1\t\t\t\t\t\t/* Issue rate.  */\n };\n \n const struct tune_params arm_fa726te_tune =\n@@ -2116,7 +2158,8 @@ const struct tune_params arm_fa726te_tune =\n   false,\t\t\t\t\t/* Prefer Neon for stringops.  */\n   8,\t\t\t\t\t\t/* Maximum insns to inline memset.  */\n   ARM_FUSE_NOTHING,\t\t\t\t/* Fuseable pairs of instructions.  */\n-  ARM_SCHED_AUTOPREF_OFF\t\t\t/* Sched L2 autopref.  */\n+  ARM_SCHED_AUTOPREF_OFF,\t\t\t/* Sched L2 autopref.  */\n+  2\t\t\t\t\t\t/* Issue rate.  */\n };\n \n \n@@ -27191,40 +27234,12 @@ thumb2_output_casesi (rtx *operands)\n     }\n }\n \n-/* Most ARM cores are single issue, but some newer ones can dual issue.\n-   The scheduler descriptions rely on this being correct.  */\n+/* Implement TARGET_SCHED_ISSUE_RATE.  Lookup the issue rate in the\n+   per-core tuning structs.  */\n static int\n arm_issue_rate (void)\n {\n-  switch (arm_tune)\n-    {\n-    case xgene1:\n-      return 4;\n-\n-    case cortexa15:\n-    case cortexa57:\n-    case exynosm1:\n-      return 3;\n-\n-    case cortexm7:\n-    case cortexr4:\n-    case cortexr4f:\n-    case cortexr5:\n-    case genericv7a:\n-    case cortexa5:\n-    case cortexa7:\n-    case cortexa8:\n-    case cortexa9:\n-    case cortexa12:\n-    case cortexa17:\n-    case cortexa53:\n-    case fa726te:\n-    case marvell_pj4:\n-      return 2;\n-\n-    default:\n-      return 1;\n-    }\n+  return current_tune->issue_rate;\n }\n \n /* Return how many instructions should scheduler lookahead to choose the"}]}