{"sha": "c05330a92385c577fc5a56a48c666663e4b55132", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzA1MzMwYTkyMzg1YzU3N2ZjNWE1NmE0OGM2NjY2NjNlNGI1NTEzMg==", "commit": {"author": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "1996-07-11T16:38:31Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "1996-07-11T16:38:31Z"}, "message": "h8300.h (OK_FOR_U): If generating H8/S code, accept SYMBOL_REF and SYMBOL_REF + CONST_INT.\n\n        * h8300/h8300.h (OK_FOR_U): If generating H8/S code, accept\n        SYMBOL_REF and SYMBOL_REF + CONST_INT.\n\nFrom-SVN: r12427", "tree": {"sha": "b78c723646ae3efd699217e8998e2c3f0a7abdf3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b78c723646ae3efd699217e8998e2c3f0a7abdf3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c05330a92385c577fc5a56a48c666663e4b55132", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c05330a92385c577fc5a56a48c666663e4b55132", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c05330a92385c577fc5a56a48c666663e4b55132", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c05330a92385c577fc5a56a48c666663e4b55132/comments", "author": null, "committer": null, "parents": [{"sha": "51c0c1d7d2fd985d1fe9145e6a971dee36086456", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/51c0c1d7d2fd985d1fe9145e6a971dee36086456", "html_url": "https://github.com/Rust-GCC/gccrs/commit/51c0c1d7d2fd985d1fe9145e6a971dee36086456"}], "stats": {"total": 10, "additions": 6, "deletions": 4}, "files": [{"sha": "9d4288b5b90d37fb46523de37dd2f86abb464d7d", "filename": "gcc/config/h8300/h8300.h", "status": "modified", "additions": 6, "deletions": 4, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c05330a92385c577fc5a56a48c666663e4b55132/gcc%2Fconfig%2Fh8300%2Fh8300.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c05330a92385c577fc5a56a48c666663e4b55132/gcc%2Fconfig%2Fh8300%2Fh8300.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fh8300%2Fh8300.h?ref=c05330a92385c577fc5a56a48c666663e4b55132", "patch": "@@ -790,18 +790,20 @@ struct rtx_def *function_arg();\n \n /* Extra constraints - 'U' if for an operand valid for a bset\n    destination; i.e. a register, register indirect, or the\n-   eightbit memory region (a SYMBOL_REF with an SYMBOL_REF_FLAG set).  */\n+   eightbit memory region (a SYMBOL_REF with an SYMBOL_REF_FLAG set). \n+\n+   On the H8/S 'U' can also be a 16bit or 32bit absolute.  */\n #define OK_FOR_U(OP) \\\n   ((GET_CODE (OP) == REG && REG_OK_FOR_BASE_P (OP)) \\\n    || (GET_CODE (OP) == MEM && GET_CODE (XEXP (OP, 0)) == REG \\\n        && REG_OK_FOR_BASE_P (XEXP (OP, 0)))  \\\n    || (GET_CODE (OP) == MEM && GET_CODE (XEXP (OP, 0)) == SYMBOL_REF \\\n-       && SYMBOL_REF_FLAG (XEXP (OP, 0))) \\\n+       && (TARGET_H8300S || SYMBOL_REF_FLAG (XEXP (OP, 0)))) \\\n    || (GET_CODE (OP) == MEM && GET_CODE (XEXP (OP, 0)) == CONST \\\n        && GET_CODE (XEXP (XEXP (OP, 0), 0)) == PLUS \\\n        && GET_CODE (XEXP (XEXP (XEXP (OP, 0), 0), 0)) == SYMBOL_REF \\\n-       && SYMBOL_REF_FLAG (XEXP (XEXP (OP, 0), 0)) \\\n-       && GET_CODE (XEXP (XEXP (XEXP (OP, 0), 0), 1)) == CONST_INT))\n+       && GET_CODE (XEXP (XEXP (XEXP (OP, 0), 0), 1)) == CONST_INT) \\\n+       && (TARGET_H8300S || SYMBOL_REF_FLAG (XEXP (XEXP (OP, 0), 0))))\n  \n #define EXTRA_CONSTRAINT(OP, C) \\\n  ((C) == 'U' ? OK_FOR_U (OP) : 0)"}]}