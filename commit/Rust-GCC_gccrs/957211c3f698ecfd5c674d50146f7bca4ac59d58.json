{"sha": "957211c3f698ecfd5c674d50146f7bca4ac59d58", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTU3MjExYzNmNjk4ZWNmZDVjNjc0ZDUwMTQ2ZjdiY2E0YWM1OWQ1OA==", "commit": {"author": {"name": "Alan Modra", "email": "amodra@bigpond.net.au", "date": "2004-03-08T04:18:39Z"}, "committer": {"name": "Alan Modra", "email": "amodra@gcc.gnu.org", "date": "2004-03-08T04:18:39Z"}, "message": "rs6000.c (rs6000_override_options): Don't override -msoft-float by -mcpu.\n\n\t* config/rs6000/rs6000.c (rs6000_override_options): Don't override\n\t-msoft-float by -mcpu.  Consolidate similar code for MASK_MULTIPLE\n\tand MASK_STRING.\n\nFrom-SVN: r79094", "tree": {"sha": "b69e9c64f9dfb241b7db7c9b7fc0dc3890f2e01d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b69e9c64f9dfb241b7db7c9b7fc0dc3890f2e01d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/957211c3f698ecfd5c674d50146f7bca4ac59d58", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/957211c3f698ecfd5c674d50146f7bca4ac59d58", "html_url": "https://github.com/Rust-GCC/gccrs/commit/957211c3f698ecfd5c674d50146f7bca4ac59d58", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/957211c3f698ecfd5c674d50146f7bca4ac59d58/comments", "author": null, "committer": null, "parents": [{"sha": "97727e857312e1dded1c4e39d949a95faf3709fb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/97727e857312e1dded1c4e39d949a95faf3709fb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/97727e857312e1dded1c4e39d949a95faf3709fb"}], "stats": {"total": 27, "additions": 11, "deletions": 16}, "files": [{"sha": "5fc25cf6f8d9c39d81a0a8601c11a6ee61bf27f1", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/957211c3f698ecfd5c674d50146f7bca4ac59d58/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/957211c3f698ecfd5c674d50146f7bca4ac59d58/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=957211c3f698ecfd5c674d50146f7bca4ac59d58", "patch": "@@ -1,3 +1,9 @@\n+2004-03-08  Alan Modra  <amodra@bigpond.net.au>\n+\n+\t* config/rs6000/rs6000.c (rs6000_override_options): Don't override\n+\t-msoft-float by -mcpu.  Consolidate similar code for MASK_MULTIPLE\n+\tand MASK_STRING.\n+\n 2004-03-07  Aldy Hernandez  <aldyh@redhat.com>\n  \n         * config/rs6000/rs6000.md (ashrdi3): Do not call ashrdi3_no_power"}, {"sha": "f6dbf966aa83ac87b04b5380cb5bcf346d32a0cd", "filename": "gcc/config/rs6000/rs6000.c", "status": "modified", "additions": 5, "deletions": 16, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/957211c3f698ecfd5c674d50146f7bca4ac59d58/gcc%2Fconfig%2Frs6000%2Frs6000.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/957211c3f698ecfd5c674d50146f7bca4ac59d58/gcc%2Fconfig%2Frs6000%2Frs6000.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.c?ref=957211c3f698ecfd5c674d50146f7bca4ac59d58", "patch": "@@ -715,11 +715,6 @@ rs6000_override_options (const char *default_cpu)\n \n   const size_t ptt_size = ARRAY_SIZE (processor_target_table);\n \n-  /* Save current -mmultiple/-mno-multiple status.  */\n-  int multiple = TARGET_MULTIPLE;\n-  /* Save current -mstring/-mno-string status.  */\n-  int string = TARGET_STRING;\n-\n   /* Some OSs don't support saving the high part of 64-bit registers on\n      context switch.  Other OSs don't support saving Altivec registers.\n      On those OSs, we don't touch the MASK_POWERPC64 or MASK_ALTIVEC\n@@ -742,6 +737,10 @@ rs6000_override_options (const char *default_cpu)\n     set_masks &= ~MASK_ALTIVEC;\n #endif\n \n+  /* Don't override these by the processor default if given explicitly.  */\n+  set_masks &= ~(target_flags_explicit\n+\t\t & (MASK_MULTIPLE | MASK_STRING | MASK_SOFT_FLOAT));\n+\n   /* Identify the processor type.  */\n   rs6000_select[0].string = default_cpu;\n   rs6000_cpu = TARGET_POWERPC64 ? PROCESSOR_DEFAULT64 : PROCESSOR_DEFAULT;\n@@ -777,17 +776,7 @@ rs6000_override_options (const char *default_cpu)\n   /* If we are optimizing big endian systems for space, use the load/store\n      multiple and string instructions.  */\n   if (BYTES_BIG_ENDIAN && optimize_size)\n-    target_flags |= MASK_MULTIPLE | MASK_STRING;\n-\n-  /* If -mmultiple or -mno-multiple was explicitly used, don't\n-     override with the processor default */\n-  if ((target_flags_explicit & MASK_MULTIPLE) != 0)\n-    target_flags = (target_flags & ~MASK_MULTIPLE) | multiple;\n-\n-  /* If -mstring or -mno-string was explicitly used, don't override\n-     with the processor default.  */\n-  if ((target_flags_explicit & MASK_STRING) != 0)\n-    target_flags = (target_flags & ~MASK_STRING) | string;\n+    target_flags |= ~target_flags_explicit & (MASK_MULTIPLE | MASK_STRING);\n \n   /* Don't allow -mmultiple or -mstring on little endian systems\n      unless the cpu is a 750, because the hardware doesn't support the"}]}