{"sha": "4e70c34e5ce6fefba22015bd4fe0df33a13567d4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGU3MGMzNGU1Y2U2ZmVmYmEyMjAxNWJkNGZlMGRmMzNhMTM1NjdkNA==", "commit": {"author": {"name": "GCC Administrator", "email": "gccadmin@gcc.gnu.org", "date": "2021-06-14T00:16:35Z"}, "committer": {"name": "GCC Administrator", "email": "gccadmin@gcc.gnu.org", "date": "2021-06-14T00:16:35Z"}, "message": "Daily bump.", "tree": {"sha": "3f0e6b3617c6c55ccbc4fb1e3c1806ed0aa7b28e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3f0e6b3617c6c55ccbc4fb1e3c1806ed0aa7b28e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4e70c34e5ce6fefba22015bd4fe0df33a13567d4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4e70c34e5ce6fefba22015bd4fe0df33a13567d4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4e70c34e5ce6fefba22015bd4fe0df33a13567d4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4e70c34e5ce6fefba22015bd4fe0df33a13567d4/comments", "author": null, "committer": null, "parents": [{"sha": "681143b9b94d7f1c88a7c34e2250865c31191959", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/681143b9b94d7f1c88a7c34e2250865c31191959", "html_url": "https://github.com/Rust-GCC/gccrs/commit/681143b9b94d7f1c88a7c34e2250865c31191959"}], "stats": {"total": 147, "additions": 146, "deletions": 1}, "files": [{"sha": "d8df6be9f33df13fd0c3af1564ca0993279122e8", "filename": "contrib/ChangeLog", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4e70c34e5ce6fefba22015bd4fe0df33a13567d4/contrib%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4e70c34e5ce6fefba22015bd4fe0df33a13567d4/contrib%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/contrib%2FChangeLog?ref=4e70c34e5ce6fefba22015bd4fe0df33a13567d4", "patch": "@@ -1,3 +1,17 @@\n+2021-06-13  Tobias Burnus  <tobias@codesourcery.com>\n+\n+\t* gcc-changelog/git_commit.py (pr_regex): Add ?P<pr> for group('pr').\n+\t(subject_pr_regex, subject_pr2_regex): New.\n+\t(GitInfo.__init__, GitCommit.parse_changelog): Check subject PRs.\n+\t* gcc-changelog/git_email.py (SUBJECT_PREFIX, subject_patch_regex): New.\n+\t(GitEmail.__init__): Parse 'Subject:' and pass it to GitInfo.\n+\t* gcc-changelog/test_email.py (test_pr_only_in_subject,\n+\ttest_wrong_pr_comp_in_subject, test_copyright_years): New.\n+\t* gcc-changelog/test_patches.txt (0030-PR-c-92746, pr-check1.patch):\n+\tUpdate to avoid triggering the new check.\n+\t(0001-rs6000-Support-doubleword, pr-wrong-comp.patch,\n+\tcopyright-years.patch): New.\n+\n 2021-06-11  Martin Liska  <mliska@suse.cz>\n \n \t* gcc-changelog/git_update_version.py: Ignore commit that"}, {"sha": "a856c27453ef5dbece4c9db834538faf1612b713", "filename": "gcc/ChangeLog", "status": "modified", "additions": 91, "deletions": 0, "changes": 91, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4e70c34e5ce6fefba22015bd4fe0df33a13567d4/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4e70c34e5ce6fefba22015bd4fe0df33a13567d4/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=4e70c34e5ce6fefba22015bd4fe0df33a13567d4", "patch": "@@ -1,3 +1,94 @@\n+2021-06-13  Uro\u0161 Bizjak  <ubizjak@gmail.com>\n+\n+\tPR target/101021\n+\t* config/i386/i386-expand.c (expand_vec_perm_pshufb):\n+\tEmit constant permutation insn directly from here.\n+\n+2021-06-13  Trevor Saunders  <tbsaunde@tbsaunde.org>\n+\n+\t* attribs.c (find_attribute_namespace): Iterate over vec<> with\n+\trange based for.\n+\t* auto-profile.c (afdo_find_equiv_class): Likewise.\n+\t* gcc.c (do_specs_vec): Likewise.\n+\t(do_spec_1): Likewise.\n+\t(driver::set_up_specs): Likewise.\n+\t* gimple-loop-jam.c (any_access_function_variant_p): Likewise.\n+\t* gimple-ssa-store-merging.c (compatible_load_p): Likewise.\n+\t(imm_store_chain_info::try_coalesce_bswap): Likewise.\n+\t(imm_store_chain_info::coalesce_immediate_stores): Likewise.\n+\t(get_location_for_stmts): Likewise.\n+\t* graphite-poly.c (print_iteration_domains): Likewise.\n+\t(free_poly_bb): Likewise.\n+\t(remove_gbbs_in_scop): Likewise.\n+\t(free_scop): Likewise.\n+\t(dump_gbb_cases): Likewise.\n+\t(dump_gbb_conditions): Likewise.\n+\t(print_pdrs): Likewise.\n+\t(print_scop): Likewise.\n+\t* ifcvt.c (cond_move_process_if_block): Likewise.\n+\t* lower-subreg.c (decompose_multiword_subregs): Likewise.\n+\t* regcprop.c (pass_cprop_hardreg::execute): Likewise.\n+\t* sanopt.c (sanitize_rewrite_addressable_params): Likewise.\n+\t* sel-sched-dump.c (dump_insn_vector): Likewise.\n+\t* store-motion.c (store_ops_ok): Likewise.\n+\t(store_killed_in_insn): Likewise.\n+\t* timevar.c (timer::named_items::print): Likewise.\n+\t* tree-cfgcleanup.c (cleanup_control_flow_pre): Likewise.\n+\t(cleanup_tree_cfg_noloop): Likewise.\n+\t* tree-data-ref.c (dump_data_references): Likewise.\n+\t(print_dir_vectors): Likewise.\n+\t(print_dist_vectors): Likewise.\n+\t(dump_data_dependence_relations): Likewise.\n+\t(dump_dist_dir_vectors): Likewise.\n+\t(dump_ddrs): Likewise.\n+\t(create_runtime_alias_checks): Likewise.\n+\t(free_subscripts): Likewise.\n+\t(save_dist_v): Likewise.\n+\t(save_dir_v): Likewise.\n+\t(invariant_access_functions): Likewise.\n+\t(same_access_functions): Likewise.\n+\t(access_functions_are_affine_or_constant_p): Likewise.\n+\t(find_data_references_in_stmt): Likewise.\n+\t(graphite_find_data_references_in_stmt): Likewise.\n+\t(free_dependence_relations): Likewise.\n+\t(free_data_refs): Likewise.\n+\t* tree-inline.c (copy_debug_stmts): Likewise.\n+\t* tree-into-ssa.c (dump_currdefs): Likewise.\n+\t(rewrite_update_phi_arguments): Likewise.\n+\t* tree-ssa-propagate.c (clean_up_loop_closed_phi): Likewise.\n+\t* tree-vect-data-refs.c (vect_analyze_possibly_independent_ddr):\n+\tLikewise.\n+\t(vect_slp_analyze_node_dependences): Likewise.\n+\t(vect_slp_analyze_instance_dependence): Likewise.\n+\t(vect_record_base_alignments): Likewise.\n+\t(vect_get_peeling_costs_all_drs): Likewise.\n+\t(vect_peeling_supportable): Likewise.\n+\t* tree-vectorizer.c (vec_info::~vec_info): Likewise.\n+\t(vec_info::free_stmt_vec_infos): Likewise.\n+\n+2021-06-13  Jeff Law  <jeffreyalaw@gmail.com>\n+\n+\t* config/h8300/logical.md (<code>qi3_1<cczn>): New pattern.\n+\t(andqi3_1<cczn>): Removed.\n+\t(<ors>qi3_1): Do not split for IOR/XOR a single bit.\n+\t(H8/SX bit logicals): Split out from other patterns.\n+\t* config/h8300/multiply.md (mulqihi3_const<cczn>): Renamed from\n+\tmulqihi3_const_clobber_flags.\n+\t(mulqihi3<cczn>, mulhisi3_const<cczn>, mulhisi3<cczn>): Similarly\n+\n+2021-06-13  H.J. Lu  <hjl.tools@gmail.com>\n+\n+\tPR target/101023\n+\t* config/i386/i386.c (ix86_expand_prologue): Set red_zone_used\n+\tto true if red zone is used.\n+\t(ix86_output_indirect_jmp): Replace ix86_red_zone_size with\n+\tix86_red_zone_used.\n+\t* config/i386/i386.h (machine_function): Add red_zone_used.\n+\t(ix86_red_zone_size): Removed.\n+\t(ix86_red_zone_used): New.\n+\t* config/i386/i386.md (peephole2 patterns): Replace\n+\tix86_red_zone_size with ix86_red_zone_used.\n+\n 2021-06-12  Jason Merrill  <jason@redhat.com>\n \n \t* doc/extend.texi (unused variable attribute): Applies to"}, {"sha": "d9253cc91e79bc1baa79ca28bafbaeaa09c60fd1", "filename": "gcc/DATESTAMP", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4e70c34e5ce6fefba22015bd4fe0df33a13567d4/gcc%2FDATESTAMP", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4e70c34e5ce6fefba22015bd4fe0df33a13567d4/gcc%2FDATESTAMP", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FDATESTAMP?ref=4e70c34e5ce6fefba22015bd4fe0df33a13567d4", "patch": "@@ -1 +1 @@\n-20210613\n+20210614"}, {"sha": "400175a86fcea3bcb6373f5a714fe19d1ba95d4f", "filename": "gcc/analyzer/ChangeLog", "status": "modified", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4e70c34e5ce6fefba22015bd4fe0df33a13567d4/gcc%2Fanalyzer%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4e70c34e5ce6fefba22015bd4fe0df33a13567d4/gcc%2Fanalyzer%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fanalyzer%2FChangeLog?ref=4e70c34e5ce6fefba22015bd4fe0df33a13567d4", "patch": "@@ -1,3 +1,22 @@\n+2021-06-13  Trevor Saunders  <tbsaunde@tbsaunde.org>\n+\n+\t* call-string.cc (call_string::call_string): Use range based for\n+\tto iterate over vec<>.\n+\t(call_string::to_json): Likewise.\n+\t(call_string::hash): Likewise.\n+\t(call_string::calc_recursion_depth): Likewise.\n+\t* checker-path.cc (checker_path::fixup_locations): Likewise.\n+\t* constraint-manager.cc (equiv_class::equiv_class): Likewise.\n+\t(equiv_class::to_json): Likewise.\n+\t(equiv_class::hash): Likewise.\n+\t(constraint_manager::to_json): Likewise.\n+\t* engine.cc (impl_region_model_context::on_svalue_leak):\n+\tLikewise.\n+\t(on_liveness_change): Likewise.\n+\t(impl_region_model_context::on_unknown_change): Likewise.\n+\t* program-state.cc (sm_state_map::set_state): Likewise.\n+\t* region-model.cc (test_canonicalization_4): Likewise.\n+\n 2021-06-11  David Malcolm  <dmalcolm@redhat.com>\n \n \t* engine.cc (worklist::key_t::cmp): Move sort by call_string to"}, {"sha": "43f265008eab5ff767e4ec300b5c168618d1db05", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4e70c34e5ce6fefba22015bd4fe0df33a13567d4/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4e70c34e5ce6fefba22015bd4fe0df33a13567d4/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=4e70c34e5ce6fefba22015bd4fe0df33a13567d4", "patch": "@@ -1,3 +1,14 @@\n+2021-06-13  Trevor Saunders  <tbsaunde@tbsaunde.org>\n+\n+\t* constexpr.c (cxx_eval_call_expression): Iterate over vec<>\n+\twith range based for.\n+\t(cxx_eval_store_expression): Likewise.\n+\t(cxx_eval_loop_expr): Likewise.\n+\t* decl.c (wrapup_namespace_globals): Likewise.\n+\t(cp_finish_decl): Likewise.\n+\t(cxx_simulate_enum_decl): Likewise.\n+\t* parser.c (cp_parser_postfix_expression): Likewise.\n+\n 2021-06-12  Jason Merrill  <jason@redhat.com>\n \n \tPR c++/101029"}, {"sha": "b62ad9061618b38a894c9b105a3f277220153ee8", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4e70c34e5ce6fefba22015bd4fe0df33a13567d4/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4e70c34e5ce6fefba22015bd4fe0df33a13567d4/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=4e70c34e5ce6fefba22015bd4fe0df33a13567d4", "patch": "@@ -1,3 +1,13 @@\n+2021-06-13  Jason Merrill  <jason@redhat.com>\n+\n+\t* gcc.dg/c2x-attr-maybe_unused-1.c: Expect no warnings.\n+\n+2021-06-13  H.J. Lu  <hjl.tools@gmail.com>\n+\n+\tPR target/101023\n+\t* g++.target/i386/pr101023a.C: New test.\n+\t* g++.target/i386/pr101023b.C: Likewise.\n+\n 2021-06-12  David Edelsohn  <dje.gcc@gmail.com>\n \n \t* g++.dg/ext/builtin-shufflevector-2.C: Ignore psabi warning."}]}