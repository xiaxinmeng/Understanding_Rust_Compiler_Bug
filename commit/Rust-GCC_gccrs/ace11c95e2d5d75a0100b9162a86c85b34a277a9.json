{"sha": "ace11c95e2d5d75a0100b9162a86c85b34a277a9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWNlMTFjOTVlMmQ1ZDc1YTAxMDBiOTE2MmE4NmM4NWIzNGEyNzdhOQ==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@adacore.com", "date": "2019-06-18T11:45:37Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2019-06-18T11:45:37Z"}, "message": "re PR ada/80590 (non-bootstrap build failure of Ada runtime)\n\nPR ada/80590\n\n\t* sem_ch5.adb (Analyze_Loop_Statement): Avoid exception propagation\n\tduring normal processing.\n\nFrom-SVN: r272417", "tree": {"sha": "5de32c25c97f5cf98ffcc467077a60074db97444", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5de32c25c97f5cf98ffcc467077a60074db97444"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ace11c95e2d5d75a0100b9162a86c85b34a277a9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ace11c95e2d5d75a0100b9162a86c85b34a277a9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ace11c95e2d5d75a0100b9162a86c85b34a277a9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ace11c95e2d5d75a0100b9162a86c85b34a277a9/comments", "author": {"login": "ArnaudCharlet", "id": 30291825, "node_id": "MDQ6VXNlcjMwMjkxODI1", "avatar_url": "https://avatars.githubusercontent.com/u/30291825?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ArnaudCharlet", "html_url": "https://github.com/ArnaudCharlet", "followers_url": "https://api.github.com/users/ArnaudCharlet/followers", "following_url": "https://api.github.com/users/ArnaudCharlet/following{/other_user}", "gists_url": "https://api.github.com/users/ArnaudCharlet/gists{/gist_id}", "starred_url": "https://api.github.com/users/ArnaudCharlet/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ArnaudCharlet/subscriptions", "organizations_url": "https://api.github.com/users/ArnaudCharlet/orgs", "repos_url": "https://api.github.com/users/ArnaudCharlet/repos", "events_url": "https://api.github.com/users/ArnaudCharlet/events{/privacy}", "received_events_url": "https://api.github.com/users/ArnaudCharlet/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "0c65926ffa960ddbe7df9ea86328f8905df861cf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0c65926ffa960ddbe7df9ea86328f8905df861cf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0c65926ffa960ddbe7df9ea86328f8905df861cf"}], "stats": {"total": 82, "additions": 55, "deletions": 27}, "files": [{"sha": "1b6aa2fd11f0a68b863f2b920df577d7a0ae1056", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ace11c95e2d5d75a0100b9162a86c85b34a277a9/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ace11c95e2d5d75a0100b9162a86c85b34a277a9/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=ace11c95e2d5d75a0100b9162a86c85b34a277a9", "patch": "@@ -1,3 +1,10 @@\n+2019-06-18  Arnaud Charlet  <charlet@adacore.com>\n+\n+PR ada/80590\n+\n+\t* sem_ch5.adb (Analyze_Loop_Statement): Avoid exception propagation\n+\tduring normal processing.\n+\n 2019-06-17  Arnaud Charlet  <charlet@adacore.com>\n \n PR ada/80590"}, {"sha": "88fd20465460cd2fd09d187399a0bfa22f53bbb8", "filename": "gcc/ada/sem_ch5.adb", "status": "modified", "additions": 48, "deletions": 27, "changes": 75, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ace11c95e2d5d75a0100b9162a86c85b34a277a9/gcc%2Fada%2Fsem_ch5.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ace11c95e2d5d75a0100b9162a86c85b34a277a9/gcc%2Fada%2Fsem_ch5.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch5.adb?ref=ace11c95e2d5d75a0100b9162a86c85b34a277a9", "patch": "@@ -3359,20 +3359,19 @@ package body Sem_Ch5 is\n       --  The following exception is raised by routine Prepare_Loop_Statement\n       --  to avoid further analysis of a transformed loop.\n \n-      Skip_Analysis : exception;\n-\n       function Disable_Constant (N : Node_Id) return Traverse_Result;\n       --  If N represents an E_Variable entity, set Is_True_Constant To False\n \n       procedure Disable_Constants is new Traverse_Proc (Disable_Constant);\n       --  Helper for Analyze_Loop_Statement, to unset Is_True_Constant on\n       --  variables referenced within an OpenACC construct.\n \n-      procedure Prepare_Loop_Statement (Iter : Node_Id);\n+      procedure Prepare_Loop_Statement\n+        (Iter            : Node_Id;\n+         Stop_Processing : out Boolean);\n       --  Determine whether loop statement N with iteration scheme Iter must be\n-      --  transformed prior to analysis, and if so, perform it. The routine\n-      --  raises Skip_Analysis to prevent further analysis of the transformed\n-      --  loop.\n+      --  transformed prior to analysis, and if so, perform it.\n+      --  If Stop_Processing is set to True, should stop further processing.\n \n       ----------------------\n       -- Disable_Constant --\n@@ -3394,7 +3393,10 @@ package body Sem_Ch5 is\n       -- Prepare_Loop_Statement --\n       ----------------------------\n \n-      procedure Prepare_Loop_Statement (Iter : Node_Id) is\n+      procedure Prepare_Loop_Statement\n+        (Iter            : Node_Id;\n+         Stop_Processing : out Boolean)\n+      is\n          function Has_Sec_Stack_Default_Iterator\n            (Cont_Typ : Entity_Id) return Boolean;\n          pragma Inline (Has_Sec_Stack_Default_Iterator);\n@@ -3414,21 +3416,27 @@ package body Sem_Ch5 is\n          --  Determine whether arbitrary statement Stmt is the sole statement\n          --  wrapped within some block, excluding pragmas.\n \n-         procedure Prepare_Iterator_Loop (Iter_Spec : Node_Id);\n+         procedure Prepare_Iterator_Loop\n+           (Iter_Spec       : Node_Id;\n+            Stop_Processing : out Boolean);\n          pragma Inline (Prepare_Iterator_Loop);\n          --  Prepare an iterator loop with iteration specification Iter_Spec\n          --  for transformation if needed.\n+         --  If Stop_Processing is set to True, should stop further processing.\n \n-         procedure Prepare_Param_Spec_Loop (Param_Spec : Node_Id);\n+         procedure Prepare_Param_Spec_Loop\n+           (Param_Spec      : Node_Id;\n+            Stop_Processing : out Boolean);\n          pragma Inline (Prepare_Param_Spec_Loop);\n          --  Prepare a discrete loop with parameter specification Param_Spec\n          --  for transformation if needed.\n+         --  If Stop_Processing is set to True, should stop further processing.\n \n          procedure Wrap_Loop_Statement (Manage_Sec_Stack : Boolean);\n-         pragma Inline    (Wrap_Loop_Statement);\n-         pragma No_Return (Wrap_Loop_Statement);\n+         pragma Inline (Wrap_Loop_Statement);\n          --  Wrap loop statement N within a block. Flag Manage_Sec_Stack must\n          --  be set when the block must mark and release the secondary stack.\n+         --  Should stop further processing after calling this procedure.\n \n          ------------------------------------\n          -- Has_Sec_Stack_Default_Iterator --\n@@ -3504,21 +3512,25 @@ package body Sem_Ch5 is\n          -- Prepare_Iterator_Loop --\n          ---------------------------\n \n-         procedure Prepare_Iterator_Loop (Iter_Spec : Node_Id) is\n+         procedure Prepare_Iterator_Loop\n+           (Iter_Spec       : Node_Id;\n+            Stop_Processing : out Boolean)\n+         is\n             Cont_Typ : Entity_Id;\n             Nam      : Node_Id;\n             Nam_Copy : Node_Id;\n \n          begin\n+            Stop_Processing := False;\n+\n             --  The iterator specification has syntactic errors. Transform the\n             --  loop into an infinite loop in order to safely perform at least\n             --  some minor analysis. This check must come first.\n \n             if Error_Posted (Iter_Spec) then\n                Set_Iteration_Scheme (N, Empty);\n                Analyze (N);\n-\n-               raise Skip_Analysis;\n+               Stop_Processing := True;\n \n             --  Nothing to do when the loop is already wrapped in a block\n \n@@ -3578,6 +3590,7 @@ package body Sem_Ch5 is\n                                    (Cont_Typ, Name_First)\n                          or else Is_Sec_Stack_Iteration_Primitive\n                                    (Cont_Typ, Name_Next));\n+                  Stop_Processing := True;\n                end if;\n             end if;\n          end Prepare_Iterator_Loop;\n@@ -3586,14 +3599,18 @@ package body Sem_Ch5 is\n          -- Prepare_Param_Spec_Loop --\n          -----------------------------\n \n-         procedure Prepare_Param_Spec_Loop (Param_Spec : Node_Id) is\n+         procedure Prepare_Param_Spec_Loop\n+           (Param_Spec      : Node_Id;\n+            Stop_Processing : out Boolean)\n+         is\n             High     : Node_Id;\n             Low      : Node_Id;\n             Rng      : Node_Id;\n             Rng_Copy : Node_Id;\n             Rng_Typ  : Entity_Id;\n \n          begin\n+            Stop_Processing := False;\n             Rng := Discrete_Subtype_Definition (Param_Spec);\n \n             --  Nothing to do when the loop is already wrapped in a block\n@@ -3622,11 +3639,10 @@ package body Sem_Ch5 is\n                --  on the secondary stack. Note that the loop must be wrapped\n                --  only when such a call exists.\n \n-               if Has_Sec_Stack_Call (Low)\n-                    or else\n-                  Has_Sec_Stack_Call (High)\n+               if Has_Sec_Stack_Call (Low) or else Has_Sec_Stack_Call (High)\n                then\n                   Wrap_Loop_Statement (Manage_Sec_Stack => True);\n+                  Stop_Processing := True;\n                end if;\n \n             --  Otherwise the parameter specification appears in the form\n@@ -3663,6 +3679,7 @@ package body Sem_Ch5 is\n                            and then Needs_Finalization (Rng_Typ))\n                then\n                   Wrap_Loop_Statement (Manage_Sec_Stack => True);\n+                  Stop_Processing := True;\n                end if;\n             end if;\n          end Prepare_Param_Spec_Loop;\n@@ -3690,8 +3707,6 @@ package body Sem_Ch5 is\n \n             Rewrite (N, Blk);\n             Analyze (N);\n-\n-            raise Skip_Analysis;\n          end Wrap_Loop_Statement;\n \n          --  Local variables\n@@ -3702,11 +3717,13 @@ package body Sem_Ch5 is\n       --  Start of processing for Prepare_Loop_Statement\n \n       begin\n+         Stop_Processing := False;\n+\n          if Present (Iter_Spec) then\n-            Prepare_Iterator_Loop (Iter_Spec);\n+            Prepare_Iterator_Loop (Iter_Spec, Stop_Processing);\n \n          elsif Present (Param_Spec) then\n-            Prepare_Param_Spec_Loop (Param_Spec);\n+            Prepare_Param_Spec_Loop (Param_Spec, Stop_Processing);\n          end if;\n       end Prepare_Loop_Statement;\n \n@@ -3805,7 +3822,15 @@ package body Sem_Ch5 is\n       --      wrapped within a block in order to manage the secondary stack.\n \n       if Present (Iter) then\n-         Prepare_Loop_Statement (Iter);\n+         declare\n+            Stop_Processing : Boolean;\n+         begin\n+            Prepare_Loop_Statement (Iter, Stop_Processing);\n+\n+            if Stop_Processing then\n+               return;\n+            end if;\n+         end;\n       end if;\n \n       --  Kill current values on entry to loop, since statements in the body of\n@@ -3979,10 +4004,6 @@ package body Sem_Ch5 is\n       if Is_OpenAcc_Environment (Stmt) then\n          Disable_Constants (Stmt);\n       end if;\n-\n-   exception\n-      when Skip_Analysis =>\n-         null;\n    end Analyze_Loop_Statement;\n \n    ----------------------------"}]}