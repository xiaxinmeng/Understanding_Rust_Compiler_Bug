{"sha": "8fca6de5641592fdaa5e03a415b1727f5e1ddcaf", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGZjYTZkZTU2NDE1OTJmZGFhNWUwM2E0MTViMTcyN2Y1ZTFkZGNhZg==", "commit": {"author": {"name": "Ira Rosen", "email": "irar@gcc.gnu.org", "date": "2007-02-22T12:30:12Z"}, "committer": {"name": "Ira Rosen", "email": "irar@gcc.gnu.org", "date": "2007-02-22T12:30:12Z"}, "message": "re PR tree-optimization/30843 (ice for legal code with -ftree-vectorize -O2)\n\n\tPR tree-optimization/30843\n\t* tree-vect-transform.c (vect_transform_loop): Remove strided scalar\n\tstores only after all the group is vectorized.\n\nFrom-SVN: r122225", "tree": {"sha": "d9253aab39b73d5f69ae734d600a9eb4aeeb1242", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d9253aab39b73d5f69ae734d600a9eb4aeeb1242"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8fca6de5641592fdaa5e03a415b1727f5e1ddcaf", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8fca6de5641592fdaa5e03a415b1727f5e1ddcaf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8fca6de5641592fdaa5e03a415b1727f5e1ddcaf", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8fca6de5641592fdaa5e03a415b1727f5e1ddcaf/comments", "author": null, "committer": null, "parents": [{"sha": "e8020d1ff6d2b529d4a3f0467d883dc52f0e0758", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e8020d1ff6d2b529d4a3f0467d883dc52f0e0758", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e8020d1ff6d2b529d4a3f0467d883dc52f0e0758"}], "stats": {"total": 51, "additions": 40, "deletions": 11}, "files": [{"sha": "29b23b74a8a1ea226deb407b4ea0e3a0307ccdbc", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8fca6de5641592fdaa5e03a415b1727f5e1ddcaf/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8fca6de5641592fdaa5e03a415b1727f5e1ddcaf/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=8fca6de5641592fdaa5e03a415b1727f5e1ddcaf", "patch": "@@ -1,3 +1,9 @@\n+2007-02-22  Ira Rosen  <irar@il.ibm.com>\n+\n+\tPR tree-optimization/30843\n+\t* tree-vect-transform.c (vect_transform_loop): Remove strided scalar \n+\tstores only after all the group is vectorized.\n+\n 2007-02-22  Dorit Nuzman  <dorit@il.ibm.com>\n \n \tPR tree-optimization/30858"}, {"sha": "bc8535c7ea632c7efc4b6a4f69be4799dbb7a097", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8fca6de5641592fdaa5e03a415b1727f5e1ddcaf/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8fca6de5641592fdaa5e03a415b1727f5e1ddcaf/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=8fca6de5641592fdaa5e03a415b1727f5e1ddcaf", "patch": "@@ -1,3 +1,9 @@\n+2007-02-22  Dorit Nuzman  <dorit@il.ibm.com>\n+            Ira Rosen  <irar@il.ibm.com> \n+\n+\tPR tree-optimization/30843\n+\t* gcc.dg/vect/pr30843.c: New test.\n+\n 2007-02-22  Dorit Nuzman  <dorit@il.ibm.com>\n \n         PR tree-optimization/30858"}, {"sha": "616b618f4d837ec54fe20196b9cc4fe56a2b243a", "filename": "gcc/testsuite/gcc.dg/vect/pr30843.c", "status": "added", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8fca6de5641592fdaa5e03a415b1727f5e1ddcaf/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fpr30843.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8fca6de5641592fdaa5e03a415b1727f5e1ddcaf/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fpr30843.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fpr30843.c?ref=8fca6de5641592fdaa5e03a415b1727f5e1ddcaf", "patch": "@@ -0,0 +1,25 @@\n+/* { dg-do compile } */\n+/* { dg-require-effective-target vect_long } */\n+\n+#include <stdarg.h>\n+#include \"tree-vect.h\"\n+\n+#define N 16\n+\n+void dacP98FillRGBMap (unsigned char *pBuffer)\n+{\n+    unsigned long dw, dw1;\n+    unsigned long *pdw = (unsigned long *)(pBuffer);\n+\n+    for( dw = 256, dw1 = 0; dw; dw--, dw1 += 0x01010101) \n+    {\n+       *pdw++ = dw1;\n+       *pdw++ = dw1;\n+       *pdw++ = dw1;\n+       *pdw++ = dw1;\n+    }\n+}\n+\n+/* { dg-final { scan-tree-dump-times \"vectorized 1 loops\" 1 \"vect\" { target { vect_interleave } } } } */\n+/* { dg-final { cleanup-tree-dump \"vect\" } } */\n+"}, {"sha": "09f1993ac39dd26d59da29e9c6476cd0f1c33c66", "filename": "gcc/tree-vect-transform.c", "status": "modified", "additions": 3, "deletions": 11, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8fca6de5641592fdaa5e03a415b1727f5e1ddcaf/gcc%2Ftree-vect-transform.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8fca6de5641592fdaa5e03a415b1727f5e1ddcaf/gcc%2Ftree-vect-transform.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vect-transform.c?ref=8fca6de5641592fdaa5e03a415b1727f5e1ddcaf", "patch": "@@ -5059,7 +5059,7 @@ vect_transform_loop (loop_vec_info loop_vinfo)\n   struct loop *loop = LOOP_VINFO_LOOP (loop_vinfo);\n   basic_block *bbs = LOOP_VINFO_BBS (loop_vinfo);\n   int nbbs = loop->num_nodes;\n-  block_stmt_iterator si;\n+  block_stmt_iterator si, next_si;\n   int i;\n   tree ratio = NULL;\n   int vectorization_factor = LOOP_VINFO_VECT_FACTOR (loop_vinfo);\n@@ -5212,12 +5212,14 @@ vect_transform_loop (loop_vec_info loop_vinfo)\n \n \t\t  while (next)\n \t\t    {\n+\t\t      next_si = bsi_for_stmt (next);\n \t\t      next_stmt_info = vinfo_for_stmt (next);\n \t\t      /* Free the attached stmt_vec_info and remove the stmt.  */\n \t\t      ann = stmt_ann (next);\n \t\t      tmp = DR_GROUP_NEXT_DR (next_stmt_info);\n \t\t      free (next_stmt_info);\n \t\t      set_stmt_info (ann, NULL);\n+\t\t      bsi_remove (&next_si, true);\n \t\t      next = tmp;\n \t\t    }\n \t\t  bsi_remove (&si, true);\n@@ -5233,16 +5235,6 @@ vect_transform_loop (loop_vec_info loop_vinfo)\n \t\t  continue;\n \t\t}\n \t    }\n-\t  else\n-\t    {\n-\t      if (strided_store)\n-\t\t{\n-\t\t  /* This is case of skipped interleaved store. We don't free\n-\t\t     its stmt_vec_info.  */\n-\t\t  bsi_remove (&si, true);\n-\t\t  continue;\n-\t\t}\n-            }\n \t  bsi_next (&si);\n \t}\t\t        /* stmts in BB */\n     }\t\t\t\t/* BBs in loop */"}]}