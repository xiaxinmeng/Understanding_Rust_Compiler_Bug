{"sha": "54419590e8a285da06c35c76c0ee2dc0066c6433", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTQ0MTk1OTBlOGEyODVkYTA2YzM1Yzc2YzBlZTJkYzAwNjZjNjQzMw==", "commit": {"author": {"name": "Frank Ch. Eigler", "email": "fche@redhat.com", "date": "2004-07-21T18:50:14Z"}, "committer": {"name": "Frank Ch. Eigler", "email": "fche@gcc.gnu.org", "date": "2004-07-21T18:50:14Z"}, "message": "mf-runtime.c (__mfu_check): Remove mistaken mode-nop handling.\n\n2004-07-21  Frank Ch. Eigler  <fche@redhat.com>\n\n\t* mf-runtime.c (__mfu_check): Remove mistaken mode-nop\n\thandling.\n\t(__mfu_usage): Include (C) 2004.\n\t* mf-hooks3.c (__mf_find_threadinfo): Don't call tracing functions\n\there.  Include a comment explaining why.\n\nFrom-SVN: r85014", "tree": {"sha": "341d1ca74728c7eb4882fe3637e08ccf81c3279a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/341d1ca74728c7eb4882fe3637e08ccf81c3279a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/54419590e8a285da06c35c76c0ee2dc0066c6433", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/54419590e8a285da06c35c76c0ee2dc0066c6433", "html_url": "https://github.com/Rust-GCC/gccrs/commit/54419590e8a285da06c35c76c0ee2dc0066c6433", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/54419590e8a285da06c35c76c0ee2dc0066c6433/comments", "author": {"login": "fche", "id": 588885, "node_id": "MDQ6VXNlcjU4ODg4NQ==", "avatar_url": "https://avatars.githubusercontent.com/u/588885?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fche", "html_url": "https://github.com/fche", "followers_url": "https://api.github.com/users/fche/followers", "following_url": "https://api.github.com/users/fche/following{/other_user}", "gists_url": "https://api.github.com/users/fche/gists{/gist_id}", "starred_url": "https://api.github.com/users/fche/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fche/subscriptions", "organizations_url": "https://api.github.com/users/fche/orgs", "repos_url": "https://api.github.com/users/fche/repos", "events_url": "https://api.github.com/users/fche/events{/privacy}", "received_events_url": "https://api.github.com/users/fche/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "0e6ed89966f8864f22f0e2bfdddf1a725b897eb8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0e6ed89966f8864f22f0e2bfdddf1a725b897eb8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0e6ed89966f8864f22f0e2bfdddf1a725b897eb8"}], "stats": {"total": 29, "additions": 24, "deletions": 5}, "files": [{"sha": "e10099a80022a9184c550ad47952bbb7deea9c4a", "filename": "libmudflap/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/54419590e8a285da06c35c76c0ee2dc0066c6433/libmudflap%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/54419590e8a285da06c35c76c0ee2dc0066c6433/libmudflap%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libmudflap%2FChangeLog?ref=54419590e8a285da06c35c76c0ee2dc0066c6433", "patch": "@@ -1,3 +1,11 @@\n+2004-07-21  Frank Ch. Eigler  <fche@redhat.com>\n+\n+\t* mf-runtime.c (__mfu_check): Remove mistaken mode-nop \n+\thandling.\n+\t(__mfu_usage): Include (C) 2004.\n+\t* mf-hooks3.c (__mf_find_threadinfo): Don't call tracing functions\n+\there.  Include a comment explaining why.\n+\n 2004-07-20  Frank Ch. Eigler  <fche@redhat.com>\n \n \t* mf-impl.h (__mf_options): Add ignore_reads and timestamps fields."}, {"sha": "b844ee5c2b571ba915efb1992ea9631034158b87", "filename": "libmudflap/mf-hooks3.c", "status": "modified", "additions": 8, "deletions": 2, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/54419590e8a285da06c35c76c0ee2dc0066c6433/libmudflap%2Fmf-hooks3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/54419590e8a285da06c35c76c0ee2dc0066c6433/libmudflap%2Fmf-hooks3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libmudflap%2Fmf-hooks3.c?ref=54419590e8a285da06c35c76c0ee2dc0066c6433", "patch": "@@ -172,6 +172,10 @@ __mf_allocate_blank_threadinfo (unsigned* idx)\n    making an early call into libmudflap.  In these cases, create a new\n    entry.  If not it's not the main thread, put it into reentrant\n    initial state.\n+\n+   NB: VERBOSE_TRACE type functions are not generally safe to call\n+   from this context, since a new thread might just be \"booting up\",\n+   making printf unsafe to call.\n */\n static struct pthread_info* \n __mf_find_threadinfo ()\n@@ -225,7 +229,7 @@ __mf_find_threadinfo ()\n \t  /* NB: leave stack-related fields unset, to avoid\n \t     deallocation.  */\n \t  main_thread_seen_p = 1;\n-\t  VERBOSE_TRACE (\"identified self as main thread\\n\");\n+\t  /* VERBOSE_TRACE (\"identified self as main thread\\n\"); */\n \t}\n       else\n \t{\n@@ -236,15 +240,17 @@ __mf_find_threadinfo ()\n \t  /* NB: leave stack-related fields unset, leaving pthread_create\n \t     to fill them in for user threads, leaving them empty for\n \t     other threads.  */\n-\t  VERBOSE_TRACE (\"identified self as new aux or user thread\\n\");\n+\t  /* VERBOSE_TRACE (\"identified self as new aux or user thread\\n\"); */\n \t}\n     }\n \n   if (last != it)\n     {\n+      /*\n       VERBOSE_TRACE (\"found threadinfo for %u, slot %u\\n\", \n \t\t     (unsigned) it,\n \t\t     (unsigned) *hash);\n+      */\n       last = it;\n     }\n "}, {"sha": "f984842d0c06882e34116ae88d187103546d9f08", "filename": "libmudflap/mf-runtime.c", "status": "modified", "additions": 8, "deletions": 3, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/54419590e8a285da06c35c76c0ee2dc0066c6433/libmudflap%2Fmf-runtime.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/54419590e8a285da06c35c76c0ee2dc0066c6433/libmudflap%2Fmf-runtime.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libmudflap%2Fmf-runtime.c?ref=54419590e8a285da06c35c76c0ee2dc0066c6433", "patch": "@@ -376,7 +376,7 @@ __mf_usage ()\n \n   fprintf (stderr, \n            \"This is a %s%sGCC \\\"mudflap\\\" memory-checked binary.\\n\"\n-           \"Mudflap is Copyright (C) 2002-2003 Free Software Foundation, Inc.\\n\"\n+           \"Mudflap is Copyright (C) 2002-2004 Free Software Foundation, Inc.\\n\"\n            \"\\n\"\n            \"The mudflap code can be controlled by an environment variable:\\n\"\n            \"\\n\"\n@@ -759,8 +759,13 @@ void __mfu_check (void *ptr, size_t sz, int type, const char *location)\n   switch (__mf_opts.mudflap_mode)\n     {\n     case mode_nop:\n-      entry->low = MINPTR;\n-      entry->high = MAXPTR;\n+      /* It is tempting to poison the cache here similarly to\n+         mode_populate.  However that eliminates a valuable\n+         distinction between these two modes.  mode_nop is useful to\n+         let a user count & trace every single check / registration\n+         call.  mode_populate is useful to let a program run fast\n+         while unchecked.\n+      */\n       judgement = 1;\n       break;\n "}]}