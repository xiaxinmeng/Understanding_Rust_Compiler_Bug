{"sha": "7d4fba4aaca3f36d15a719acb5c74cb7ff3966ec", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6N2Q0ZmJhNGFhY2EzZjM2ZDE1YTcxOWFjYjVjNzRjYjdmZjM5NjZlYw==", "commit": {"author": {"name": "Sebastian Pop", "email": "sebastian.pop@amd.com", "date": "2009-03-03T03:47:22Z"}, "committer": {"name": "Sebastian Pop", "email": "spop@gcc.gnu.org", "date": "2009-03-03T03:47:22Z"}, "message": "re PR middle-end/39335 (ICE in GCC 4.4 with -O[123] -floop-interchange)\n\n2009-03-02  Sebastian Pop  <sebastian.pop@amd.com>\n\n\tPR middle-end/39335\n\t* tree-parloops.c (canonicalize_loop_ivs): Call fold_convert\n\twhen the type precision of the induction variable should be\n\tlarger than the type precision of nit.\n\t(gen_parallel_loop): Update use of canonicalize_loop_ivs.\n\t* graphite.c (graphite_loop_normal_form): Same.\n\t* tree-flow.h (canonicalize_loop_ivs): Update declaration.\n\n\t* testsuite/gcc.dg/graphite/pr39335_1.c: New.\n\t* testsuite/gcc.dg/graphite/pr39335.c: New.\n\nFrom-SVN: r144564", "tree": {"sha": "c5940d475af6b9c54d559dc260ef19fbe60c76c9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c5940d475af6b9c54d559dc260ef19fbe60c76c9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7d4fba4aaca3f36d15a719acb5c74cb7ff3966ec", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7d4fba4aaca3f36d15a719acb5c74cb7ff3966ec", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7d4fba4aaca3f36d15a719acb5c74cb7ff3966ec", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7d4fba4aaca3f36d15a719acb5c74cb7ff3966ec/comments", "author": null, "committer": {"login": "sebpop", "id": 568397, "node_id": "MDQ6VXNlcjU2ODM5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/568397?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sebpop", "html_url": "https://github.com/sebpop", "followers_url": "https://api.github.com/users/sebpop/followers", "following_url": "https://api.github.com/users/sebpop/following{/other_user}", "gists_url": "https://api.github.com/users/sebpop/gists{/gist_id}", "starred_url": "https://api.github.com/users/sebpop/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sebpop/subscriptions", "organizations_url": "https://api.github.com/users/sebpop/orgs", "repos_url": "https://api.github.com/users/sebpop/repos", "events_url": "https://api.github.com/users/sebpop/events{/privacy}", "received_events_url": "https://api.github.com/users/sebpop/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "10fc64a7a62231a36e4f76ce6eb2e9780e3d8d19", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/10fc64a7a62231a36e4f76ce6eb2e9780e3d8d19", "html_url": "https://github.com/Rust-GCC/gccrs/commit/10fc64a7a62231a36e4f76ce6eb2e9780e3d8d19"}], "stats": {"total": 80, "additions": 69, "deletions": 11}, "files": [{"sha": "998ef44dc555718baa1087a801514146ffe04ff6", "filename": "gcc/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7d4fba4aaca3f36d15a719acb5c74cb7ff3966ec/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7d4fba4aaca3f36d15a719acb5c74cb7ff3966ec/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=7d4fba4aaca3f36d15a719acb5c74cb7ff3966ec", "patch": "@@ -1,3 +1,13 @@\n+2009-03-02  Sebastian Pop  <sebastian.pop@amd.com>\n+\n+\tPR middle-end/39335\n+\t* tree-parloops.c (canonicalize_loop_ivs): Call fold_convert\n+\twhen the type precision of the induction variable should be\n+\tlarger than the type precision of nit.\n+\t(gen_parallel_loop): Update use of canonicalize_loop_ivs.\n+\t* graphite.c (graphite_loop_normal_form): Same.\n+\t* tree-flow.h (canonicalize_loop_ivs): Update declaration.\n+\n 2009-03-02  Uros Bizjak  <ubizjak@gmail.com>\n \n \t* config/i386/i386.md (ST?_REG, MM?_REG): New constants."}, {"sha": "9b36284e680e070ee54b856ec4df3c4e39e8932c", "filename": "gcc/graphite.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7d4fba4aaca3f36d15a719acb5c74cb7ff3966ec/gcc%2Fgraphite.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7d4fba4aaca3f36d15a719acb5c74cb7ff3966ec/gcc%2Fgraphite.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgraphite.c?ref=7d4fba4aaca3f36d15a719acb5c74cb7ff3966ec", "patch": "@@ -2395,7 +2395,7 @@ graphite_loop_normal_form (loop_p loop)\n   if (nb_reductions_in_loop (loop) > 0)\n     return NULL_TREE;\n \n-  return canonicalize_loop_ivs (loop, NULL, nit);\n+  return canonicalize_loop_ivs (loop, NULL, &nit);\n }\n \n /* Record LOOP as occuring in SCOP.  Returns true when the operation"}, {"sha": "983fe833c660878f7c42495b52f3ad2ecab0a2fa", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7d4fba4aaca3f36d15a719acb5c74cb7ff3966ec/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7d4fba4aaca3f36d15a719acb5c74cb7ff3966ec/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=7d4fba4aaca3f36d15a719acb5c74cb7ff3966ec", "patch": "@@ -1,3 +1,9 @@\n+2009-03-02  Sebastian Pop  <sebastian.pop@amd.com>\n+\n+\tPR middle-end/39335\n+\t* testsuite/gcc.dg/graphite/pr39335_1.c: New.\n+\t* testsuite/gcc.dg/graphite/pr39335.c: New.\n+\n 2009-03-02  H.J. Lu  <hongjiu.lu@intel.com>\n \n \t* gcc.target/i386/stackalign/return-4.c: Scan andl/andq instead"}, {"sha": "c86e03ab73aa34da3dcb2883371107a4f829e0c2", "filename": "gcc/testsuite/gcc.dg/graphite/pr39335.c", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7d4fba4aaca3f36d15a719acb5c74cb7ff3966ec/gcc%2Ftestsuite%2Fgcc.dg%2Fgraphite%2Fpr39335.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7d4fba4aaca3f36d15a719acb5c74cb7ff3966ec/gcc%2Ftestsuite%2Fgcc.dg%2Fgraphite%2Fpr39335.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fgraphite%2Fpr39335.c?ref=7d4fba4aaca3f36d15a719acb5c74cb7ff3966ec", "patch": "@@ -0,0 +1,20 @@\n+/* { dg-options \"-O2 -floop-interchange\" } */\n+\n+typedef unsigned char byte;\n+typedef struct gx_device_s gx_device;\n+typedef struct gs_devn_params_s gs_devn_params;\n+typedef struct gs_devn_params_s {\n+   struct compressed_color_list_s * compressed_color_list;\n+} gs_devn_params_t;\n+int devn_unpack_row(gx_device * dev, int num_comp,\n+                   gs_devn_params * pdevn_params, int width, byte * in,\n+                   byte * out)\n+{\n+ int i, comp_num, pixel_num;\n+ if (pdevn_params->compressed_color_list == ((void *)0))\n+   {\n+     for (pixel_num = 0; pixel_num < width; pixel_num++)\n+       for (i = 0; i < num_comp; i++)\n+         *out++ = *in++;\n+   }\n+}"}, {"sha": "257c2c994365f9da58a5290103b12a9a0bef37d3", "filename": "gcc/testsuite/gcc.dg/graphite/pr39335_1.c", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7d4fba4aaca3f36d15a719acb5c74cb7ff3966ec/gcc%2Ftestsuite%2Fgcc.dg%2Fgraphite%2Fpr39335_1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7d4fba4aaca3f36d15a719acb5c74cb7ff3966ec/gcc%2Ftestsuite%2Fgcc.dg%2Fgraphite%2Fpr39335_1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fgraphite%2Fpr39335_1.c?ref=7d4fba4aaca3f36d15a719acb5c74cb7ff3966ec", "patch": "@@ -0,0 +1,9 @@\n+/* { dg-options \"-O2 -floop-interchange\" } */\n+\n+void crash_me(int num1, int num2, char * in, char * out)\n+{\n+ int i, j;\n+ for (j = 0; j < num1; j++)\n+   for (i = 0; i < num2; i++)\n+     *out++ = *in++;\n+}"}, {"sha": "01953b593324c91b3e35168a65cc1e98a1dd9702", "filename": "gcc/tree-flow.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7d4fba4aaca3f36d15a719acb5c74cb7ff3966ec/gcc%2Ftree-flow.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7d4fba4aaca3f36d15a719acb5c74cb7ff3966ec/gcc%2Ftree-flow.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-flow.h?ref=7d4fba4aaca3f36d15a719acb5c74cb7ff3966ec", "patch": "@@ -991,7 +991,7 @@ unsigned int tree_ssa_prefetch_arrays (void);\n unsigned int remove_empty_loops (void);\n void tree_ssa_iv_optimize (void);\n unsigned tree_predictive_commoning (void);\n-tree canonicalize_loop_ivs (struct loop *, htab_t, tree);\n+tree canonicalize_loop_ivs (struct loop *, htab_t, tree *);\n bool parallelize_loops (void);\n \n bool loop_only_exit_p (const struct loop *, const_edge);"}, {"sha": "f2d0ff63f17ba9ae77d230682f770af66d1274f2", "filename": "gcc/tree-parloops.c", "status": "modified", "additions": 22, "deletions": 9, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7d4fba4aaca3f36d15a719acb5c74cb7ff3966ec/gcc%2Ftree-parloops.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7d4fba4aaca3f36d15a719acb5c74cb7ff3966ec/gcc%2Ftree-parloops.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-parloops.c?ref=7d4fba4aaca3f36d15a719acb5c74cb7ff3966ec", "patch": "@@ -1321,23 +1321,28 @@ create_loop_fn (void)\n   return decl;\n }\n \n-/* Bases all the induction variables in LOOP on a single induction variable\n-   (unsigned with base 0 and step 1), whose final value is compared with\n-   NIT.  The induction variable is incremented in the loop latch.  \n-   REDUCTION_LIST describes the reductions in LOOP.  Return the induction \n-   variable that was created.  */\n+/* Bases all the induction variables in LOOP on a single induction\n+   variable (unsigned with base 0 and step 1), whose final value is\n+   compared with *NIT.  When the IV type precision has to be larger\n+   than *NIT type precision, *NIT is converted to the larger type, the\n+   conversion code is inserted before the loop, and *NIT is updated to\n+   the new definition.  The induction variable is incremented in the\n+   loop latch.  REDUCTION_LIST describes the reductions in LOOP.\n+   Return the induction variable that was created.  */\n \n tree\n-canonicalize_loop_ivs (struct loop *loop, htab_t reduction_list, tree nit)\n+canonicalize_loop_ivs (struct loop *loop, htab_t reduction_list, tree *nit)\n {\n-  unsigned precision = TYPE_PRECISION (TREE_TYPE (nit));\n+  unsigned precision = TYPE_PRECISION (TREE_TYPE (*nit));\n+  unsigned original_precision = precision;\n   tree res, type, var_before, val, atype, mtype;\n   gimple_stmt_iterator gsi, psi;\n   gimple phi, stmt;\n   bool ok;\n   affine_iv iv;\n   edge exit = single_dom_exit (loop);\n   struct reduction_info *red;\n+  gimple_seq stmts;\n \n   for (psi = gsi_start_phis (loop->header);\n        !gsi_end_p (psi); gsi_next (&psi))\n@@ -1351,6 +1356,14 @@ canonicalize_loop_ivs (struct loop *loop, htab_t reduction_list, tree nit)\n \n   type = lang_hooks.types.type_for_size (precision, 1);\n \n+  if (original_precision != precision)\n+    {\n+      *nit = fold_convert (type, *nit);\n+      *nit = force_gimple_operand (*nit, &stmts, true, NULL_TREE);\n+      if (stmts)\n+\tgsi_insert_seq_on_edge_immediate (loop_preheader_edge (loop), stmts);\n+    }\n+\n   gsi = gsi_last_bb (loop->latch);\n   create_iv (build_int_cst_type (type, 0), build_int_cst (type, 1), NULL_TREE,\n \t     loop, &gsi, true, &var_before, NULL);\n@@ -1410,7 +1423,7 @@ canonicalize_loop_ivs (struct loop *loop, htab_t reduction_list, tree nit)\n     }\n   gimple_cond_set_code (stmt, LT_EXPR);\n   gimple_cond_set_lhs (stmt, var_before);\n-  gimple_cond_set_rhs (stmt, nit);\n+  gimple_cond_set_rhs (stmt, *nit);\n   update_stmt (stmt);\n \n   return var_before;\n@@ -1760,7 +1773,7 @@ gen_parallel_loop (struct loop *loop, htab_t reduction_list,\n   free_original_copy_tables ();\n \n   /* Base all the induction variables in LOOP on a single control one.  */\n-  canonicalize_loop_ivs (loop, reduction_list, nit);\n+  canonicalize_loop_ivs (loop, reduction_list, &nit);\n \n   /* Ensure that the exit condition is the first statement in the loop.  */\n   transform_to_exit_first_loop (loop, reduction_list, nit);"}]}