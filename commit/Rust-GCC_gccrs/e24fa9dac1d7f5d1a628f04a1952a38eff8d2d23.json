{"sha": "e24fa9dac1d7f5d1a628f04a1952a38eff8d2d23", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTI0ZmE5ZGFjMWQ3ZjVkMWE2MjhmMDRhMTk1MmEzOGVmZjhkMmQyMw==", "commit": {"author": {"name": "Nick Clifton", "email": "nickc@redhat.com", "date": "2000-11-16T19:45:23Z"}, "committer": {"name": "Nick Clifton", "email": "nickc@gcc.gnu.org", "date": "2000-11-16T19:45:23Z"}, "message": "Add a couple of new test cases for nested function support.\n\nFrom-SVN: r37504", "tree": {"sha": "78cbfb40f6c53135f9ad88c84f53206b9b844f50", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/78cbfb40f6c53135f9ad88c84f53206b9b844f50"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e24fa9dac1d7f5d1a628f04a1952a38eff8d2d23", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e24fa9dac1d7f5d1a628f04a1952a38eff8d2d23", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e24fa9dac1d7f5d1a628f04a1952a38eff8d2d23", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e24fa9dac1d7f5d1a628f04a1952a38eff8d2d23/comments", "author": {"login": "nickclifton", "id": 31441682, "node_id": "MDQ6VXNlcjMxNDQxNjgy", "avatar_url": "https://avatars.githubusercontent.com/u/31441682?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nickclifton", "html_url": "https://github.com/nickclifton", "followers_url": "https://api.github.com/users/nickclifton/followers", "following_url": "https://api.github.com/users/nickclifton/following{/other_user}", "gists_url": "https://api.github.com/users/nickclifton/gists{/gist_id}", "starred_url": "https://api.github.com/users/nickclifton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nickclifton/subscriptions", "organizations_url": "https://api.github.com/users/nickclifton/orgs", "repos_url": "https://api.github.com/users/nickclifton/repos", "events_url": "https://api.github.com/users/nickclifton/events{/privacy}", "received_events_url": "https://api.github.com/users/nickclifton/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "68dfd979ac149deff93a104e4bb4d7a37ccd2123", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/68dfd979ac149deff93a104e4bb4d7a37ccd2123", "html_url": "https://github.com/Rust-GCC/gccrs/commit/68dfd979ac149deff93a104e4bb4d7a37ccd2123"}], "stats": {"total": 114, "additions": 114, "deletions": 0}, "files": [{"sha": "d0c3dbf8adb208552bd003c8143e2ef781f0c27e", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e24fa9dac1d7f5d1a628f04a1952a38eff8d2d23/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e24fa9dac1d7f5d1a628f04a1952a38eff8d2d23/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=e24fa9dac1d7f5d1a628f04a1952a38eff8d2d23", "patch": "@@ -1,3 +1,8 @@\n+2000-11-16  Nick Clifton  <nickc@redhat.com>\n+\n+\t* gcc.c-torture/execute/nestfunc-2.c: New test.\n+\t* gcc.c-torture/execute/nestfunc-3.c: New test.\n+\n 2000-11-11  Bernd Schmidt  <bernds@redhat.co.uk>\n \n \t* gcc.c-torture/compile/20001116-1.c: New test."}, {"sha": "030875560dc51b0b6e47ff01afaf166aaf445c70", "filename": "gcc/testsuite/gcc.c-torture/execute/nestfunc-2.c", "status": "added", "additions": 49, "deletions": 0, "changes": 49, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e24fa9dac1d7f5d1a628f04a1952a38eff8d2d23/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fnestfunc-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e24fa9dac1d7f5d1a628f04a1952a38eff8d2d23/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fnestfunc-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fnestfunc-2.c?ref=e24fa9dac1d7f5d1a628f04a1952a38eff8d2d23", "patch": "@@ -0,0 +1,49 @@\n+extern int foo (int, int, int (*) (int, int, int, int, int, int, int));\n+\n+int z;\n+\n+int\n+main (void)\n+{\n+#ifndef NO_TRAMPOLINES\n+  int sum = 0;\n+  int i;\n+\n+  int nested (int a, int b, int c, int d, int e, int f, int g)\n+    {\n+      z = c + d + e + f + g;\n+      \n+      if (a > 2 * b)\n+        return a - b;\n+      else\n+        return b - a;\n+    }\n+\n+  for (i = 0; i < 10; ++i)\n+    {\n+      int j;\n+\n+      for (j = 0; j < 10; ++j)\n+        {\n+          int k;\n+\n+          for (k = 0; k < 10; ++k)\n+            sum += foo (i, j > k ? j - k : k - j, nested);\n+        }\n+    }\n+\n+  if (sum != 2300)\n+    abort ();\n+\n+  if (z != 0x1b)\n+    abort ();\n+#endif\n+  \n+  exit (0);\n+}\n+\n+int\n+foo (int a, int b, int (* fp) (int, int, int, int, int, int, int))\n+{\n+  return fp (a, b, a, b, a, b, a);\n+}"}, {"sha": "653a5dafd79c187d150fcf6a9bf7b4a58ce31961", "filename": "gcc/testsuite/gcc.c-torture/execute/nestfunc-3.c", "status": "added", "additions": 60, "deletions": 0, "changes": 60, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e24fa9dac1d7f5d1a628f04a1952a38eff8d2d23/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fnestfunc-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e24fa9dac1d7f5d1a628f04a1952a38eff8d2d23/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fnestfunc-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fnestfunc-3.c?ref=e24fa9dac1d7f5d1a628f04a1952a38eff8d2d23", "patch": "@@ -0,0 +1,60 @@\n+\n+extern long foo (long, long, long (*) (long, long));\n+extern long use (long (*) (long, long), long, long);\n+\n+int\n+main (void)\n+{\n+#ifndef NO_TRAMPOLINES\n+  long sum = 0;\n+  long i;\n+\n+  long nested_0 (long a, long b)\n+    {\n+      if (a > 2 * b)\n+        return a - b;\n+      else\n+        return b - a;\n+    }\n+\n+  long nested_1 (long a, long b)\n+    {\n+      return use (nested_0, b, a) + sum;\n+    }\n+\n+  long nested_2 (long a, long b)\n+    {\n+      return nested_1 (b, a);\n+    }\n+\n+  for (i = 0; i < 10; ++i)\n+    {\n+      long j;\n+\n+      for (j = 0; j < 10; ++j)\n+        {\n+          long k;\n+\n+          for (k = 0; k < 10; ++k)\n+            sum += foo (i, j > k ? j - k : k - j, nested_2);\n+        }\n+    }\n+\n+  if (sum != 0xbecfcbf5)\n+    abort ();\n+#endif\n+\n+  exit (0);\n+}\n+\n+long\n+use (long (* func)(long, long), long a, long b)\n+{\n+  return func (b, a);\n+}\n+\n+long\n+foo (long a, long b, long (* func) (long, long))\n+{\n+  return func (a, b);\n+}"}]}