{"sha": "487ebcbff524a58a579f309d364c227c15980a00", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDg3ZWJjYmZmNTI0YTU4YTU3OWYzMDlkMzY0YzIyN2MxNTk4MGEwMA==", "commit": {"author": {"name": "Oleg Endo", "email": "olegendo@gcc.gnu.org", "date": "2012-08-29T18:41:52Z"}, "committer": {"name": "Oleg Endo", "email": "olegendo@gcc.gnu.org", "date": "2012-08-29T18:41:52Z"}, "message": "sh.opt (menable-tas): Rename to mtas.\n\n\t* config/sh/sh.opt (menable-tas): Rename to mtas.\n\t* doc/invoke.texi (SH options): Likewise.\n\t* config/sh/sync.md: Update comments.\n\nFrom-SVN: r190782", "tree": {"sha": "76dce4c8736aa107f2468a9270ddf852eb9ed1d2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/76dce4c8736aa107f2468a9270ddf852eb9ed1d2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/487ebcbff524a58a579f309d364c227c15980a00", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/487ebcbff524a58a579f309d364c227c15980a00", "html_url": "https://github.com/Rust-GCC/gccrs/commit/487ebcbff524a58a579f309d364c227c15980a00", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/487ebcbff524a58a579f309d364c227c15980a00/comments", "author": null, "committer": null, "parents": [{"sha": "7fa4bf9bf9a74dcde2bacd2437ce341cf51ad615", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7fa4bf9bf9a74dcde2bacd2437ce341cf51ad615", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7fa4bf9bf9a74dcde2bacd2437ce341cf51ad615"}], "stats": {"total": 18, "additions": 12, "deletions": 6}, "files": [{"sha": "31e8f1372c2075620925da7a9a91024364a665c3", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/487ebcbff524a58a579f309d364c227c15980a00/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/487ebcbff524a58a579f309d364c227c15980a00/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=487ebcbff524a58a579f309d364c227c15980a00", "patch": "@@ -1,3 +1,9 @@\n+2012-08-29  Oleg Endo  <olegendo@gcc.gnu.org>\n+\n+\t* config/sh/sh.opt (menable-tas): Rename to mtas.\n+\t* doc/invoke.texi (SH options): Likewise.\n+\t* config/sh/sync.md: Update comments.\n+\n 2012-08-29  Oleg Endo  <olegendo@gcc.gnu.org>\n \n \t* config/sh/iterators.md: New file."}, {"sha": "cb01810619bb89cd366e10d41d391987541395f1", "filename": "gcc/config/sh/sh.opt", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/487ebcbff524a58a579f309d364c227c15980a00/gcc%2Fconfig%2Fsh%2Fsh.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/487ebcbff524a58a579f309d364c227c15980a00/gcc%2Fconfig%2Fsh%2Fsh.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsh%2Fsh.opt?ref=487ebcbff524a58a579f309d364c227c15980a00", "patch": "@@ -327,7 +327,7 @@ mhard-atomic\n Target Report Var(TARGET_HARD_ATOMIC)\n Use hardware atomic sequences\n \n-menable-tas\n+mtas\n Target Report RejectNegative Var(TARGET_ENABLE_TAS)\n Use tas.b instruction for __atomic_test_and_set\n "}, {"sha": "aa87c57c765335d7daba29a3678592a89a1845cb", "filename": "gcc/config/sh/sync.md", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/487ebcbff524a58a579f309d364c227c15980a00/gcc%2Fconfig%2Fsh%2Fsync.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/487ebcbff524a58a579f309d364c227c15980a00/gcc%2Fconfig%2Fsh%2Fsync.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsh%2Fsync.md?ref=487ebcbff524a58a579f309d364c227c15980a00", "patch": "@@ -26,11 +26,11 @@\n ;; In addition to that all SH CPUs support the 'tas.b' instruction, which\n ;; can be optionally used to implement the 'atomic_test_and_set' builtin.\n ;;\n-;; tas.b atomic_test_and_set (-menable-tas)\n+;; tas.b atomic_test_and_set (-mtas)\n ;;\n ;; Depending on the particular hardware configuration, usage of the 'tas.b'\n ;; instruction might be undesired or even unsafe.  Thus, it has to be\n-;; enabled by the user explicitely.  If it is not enabled, the\n+;; enabled by the user explicitly.  If it is not enabled, the\n ;; 'atomic_test_and_set' builtin is implemented either with hardware or with\n ;; software atomics, depending on which is enabled.  It is also possible to\n ;; enable the 'tas.b' instruction only, without enabling support for the "}, {"sha": "876beaa9c92b9c9f8bab744c71d7e0acec29678f", "filename": "gcc/doc/invoke.texi", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/487ebcbff524a58a579f309d364c227c15980a00/gcc%2Fdoc%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/487ebcbff524a58a579f309d364c227c15980a00/gcc%2Fdoc%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finvoke.texi?ref=487ebcbff524a58a579f309d364c227c15980a00", "patch": "@@ -891,7 +891,7 @@ See RS/6000 and PowerPC Options.\n -maccumulate-outgoing-args -minvalid-symbols -msoft-atomic -mhard-atomic @gol\n -mbranch-cost=@var{num} -mzdcbranch -mno-zdcbranch -mcbranchdi -mcmpeqdi @gol\n -mfused-madd -mno-fused-madd -mfsca -mno-fsca -mfsrra -mno-fsrra @gol\n--mpretend-cmove -menable-tas}\n+-mpretend-cmove -mtas}\n \n @emph{Solaris 2 Options}\n @gccoptlist{-mimpure-text  -mno-impure-text @gol\n@@ -18156,8 +18156,8 @@ interrupt / exception handling systems.  In contrast to the\n @option{-msoft-atomic} option this will only use the instructions\n @code{movli.l} and @code{movco.l} to create atomic sequences.\n \n-@item -menable-tas\n-@opindex menable-tas\n+@item -mtas\n+@opindex mtas\n Generate the @code{tas.b} opcode for @code{__atomic_test_and_set}.\n Notice that depending on the particular hardware and software configuration\n this can degrade overall performance due to the operand cache line flushes"}]}