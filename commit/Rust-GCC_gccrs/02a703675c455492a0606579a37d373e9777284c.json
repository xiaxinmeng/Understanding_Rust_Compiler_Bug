{"sha": "02a703675c455492a0606579a37d373e9777284c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDJhNzAzNjc1YzQ1NTQ5MmEwNjA2NTc5YTM3ZDM3M2U5Nzc3Mjg0Yw==", "commit": {"author": {"name": "Sergey Shalnov", "email": "Sergey.Shalnov@intel.com", "date": "2017-11-23T16:07:25Z"}, "committer": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2017-11-23T16:07:25Z"}, "message": "i386.h (TARGET_PREFER_AVX256): Also enable when TARGET_PREFER_AVX128 is set.\n\n\t* config/i386/i386.h (TARGET_PREFER_AVX256): Also\n\tenable when TARGET_PREFER_AVX128 is set.\n\nFrom-SVN: r255105", "tree": {"sha": "b9ab4dc269bfa93c870af20cc0f046db0218919d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b9ab4dc269bfa93c870af20cc0f046db0218919d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/02a703675c455492a0606579a37d373e9777284c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/02a703675c455492a0606579a37d373e9777284c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/02a703675c455492a0606579a37d373e9777284c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/02a703675c455492a0606579a37d373e9777284c/comments", "author": {"login": "shssf", "id": 19515906, "node_id": "MDQ6VXNlcjE5NTE1OTA2", "avatar_url": "https://avatars.githubusercontent.com/u/19515906?v=4", "gravatar_id": "", "url": "https://api.github.com/users/shssf", "html_url": "https://github.com/shssf", "followers_url": "https://api.github.com/users/shssf/followers", "following_url": "https://api.github.com/users/shssf/following{/other_user}", "gists_url": "https://api.github.com/users/shssf/gists{/gist_id}", "starred_url": "https://api.github.com/users/shssf/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/shssf/subscriptions", "organizations_url": "https://api.github.com/users/shssf/orgs", "repos_url": "https://api.github.com/users/shssf/repos", "events_url": "https://api.github.com/users/shssf/events{/privacy}", "received_events_url": "https://api.github.com/users/shssf/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "7349698ee4147cf36862081e21736d4c2b96b9d9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7349698ee4147cf36862081e21736d4c2b96b9d9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7349698ee4147cf36862081e21736d4c2b96b9d9"}], "stats": {"total": 8, "additions": 7, "deletions": 1}, "files": [{"sha": "2cc6402df263833af8454a2a80841fc527764dbb", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/02a703675c455492a0606579a37d373e9777284c/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/02a703675c455492a0606579a37d373e9777284c/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=02a703675c455492a0606579a37d373e9777284c", "patch": "@@ -1,3 +1,8 @@\n+2017-11-23  Sergey Shalnov  <Sergey.Shalnov@intel.com>\n+\n+\t* config/i386/i386.h (TARGET_PREFER_AVX256): Also\n+\tenable when TARGET_PREFER_AVX128 is set.\n+\n 2017-11-23  Jan Hubicka  <hubicka@ucw.cz>\n \n \t* ipa-profile.c (ipa_propagate_frequency_1): Use count instead of"}, {"sha": "630b7c5a4aa8cfc9a0ffd5230a833ebd4607e76e", "filename": "gcc/config/i386/i386.h", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/02a703675c455492a0606579a37d373e9777284c/gcc%2Fconfig%2Fi386%2Fi386.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/02a703675c455492a0606579a37d373e9777284c/gcc%2Fconfig%2Fi386%2Fi386.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.h?ref=02a703675c455492a0606579a37d373e9777284c", "patch": "@@ -2683,7 +2683,8 @@ extern void debug_dispatch_window (int);\n /* Use 128-bit AVX instructions in the auto-vectorizer.  */\n #define TARGET_PREFER_AVX128\t(prefer_vector_width_type == PVW_AVX128)\n /* Use 256-bit AVX instructions in the auto-vectorizer.  */\n-#define TARGET_PREFER_AVX256\t(prefer_vector_width_type == PVW_AVX256)\n+#define TARGET_PREFER_AVX256\t(TARGET_PREFER_AVX128 \\\n+\t\t\t\t || prefer_vector_width_type == PVW_AVX256)\n \n #define IX86_HLE_ACQUIRE (1 << 16)\n #define IX86_HLE_RELEASE (1 << 17)"}]}