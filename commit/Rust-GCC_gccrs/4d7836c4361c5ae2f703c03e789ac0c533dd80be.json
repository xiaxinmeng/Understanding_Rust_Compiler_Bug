{"sha": "4d7836c4361c5ae2f703c03e789ac0c533dd80be", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGQ3ODM2YzQzNjFjNWFlMmY3MDNjMDNlNzg5YWMwYzUzM2RkODBiZQ==", "commit": {"author": {"name": "Richard Sandiford", "email": "richard.sandiford@arm.com", "date": "2015-10-27T09:29:40Z"}, "committer": {"name": "Richard Sandiford", "email": "rsandifo@gcc.gnu.org", "date": "2015-10-27T09:29:40Z"}, "message": "Move hypot folds to match.pd\n\nTested on x86_64-linux-gnu, aarch64-linux-gnu and arm-linux-gnueabi.\n\ngcc/\n\t* builtins.c (fold_builtin_hypot): Delete.\n\t(fold_builtin_2): Handle constant hypot arguments here.\n\t* match.pd: Fold hypot(x, 0) and hypot(0, x) to x.  Canonicalize\n\thypot(x, x) to fabs(x)*sqrt(2).\n\nFrom-SVN: r229407", "tree": {"sha": "77a20b470231501dd40126c4597a20cc52530819", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/77a20b470231501dd40126c4597a20cc52530819"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4d7836c4361c5ae2f703c03e789ac0c533dd80be", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4d7836c4361c5ae2f703c03e789ac0c533dd80be", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4d7836c4361c5ae2f703c03e789ac0c533dd80be", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4d7836c4361c5ae2f703c03e789ac0c533dd80be/comments", "author": {"login": "rsandifo-arm", "id": 28043039, "node_id": "MDQ6VXNlcjI4MDQzMDM5", "avatar_url": "https://avatars.githubusercontent.com/u/28043039?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rsandifo-arm", "html_url": "https://github.com/rsandifo-arm", "followers_url": "https://api.github.com/users/rsandifo-arm/followers", "following_url": "https://api.github.com/users/rsandifo-arm/following{/other_user}", "gists_url": "https://api.github.com/users/rsandifo-arm/gists{/gist_id}", "starred_url": "https://api.github.com/users/rsandifo-arm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rsandifo-arm/subscriptions", "organizations_url": "https://api.github.com/users/rsandifo-arm/orgs", "repos_url": "https://api.github.com/users/rsandifo-arm/repos", "events_url": "https://api.github.com/users/rsandifo-arm/events{/privacy}", "received_events_url": "https://api.github.com/users/rsandifo-arm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "4aecfe19869d2ba26ac4e4a967eb0b0cbf9b0114", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4aecfe19869d2ba26ac4e4a967eb0b0cbf9b0114", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4aecfe19869d2ba26ac4e4a967eb0b0cbf9b0114"}], "stats": {"total": 55, "additions": 21, "deletions": 34}, "files": [{"sha": "442cd85de9ce0c18cd07945fe704a541cc1ec214", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4d7836c4361c5ae2f703c03e789ac0c533dd80be/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4d7836c4361c5ae2f703c03e789ac0c533dd80be/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=4d7836c4361c5ae2f703c03e789ac0c533dd80be", "patch": "@@ -1,3 +1,10 @@\n+2015-10-27  Richard Sandiford  <richard.sandiford@arm.com>\n+\n+\t* builtins.c (fold_builtin_hypot): Delete.\n+\t(fold_builtin_2): Handle constant hypot arguments here.\n+\t* match.pd: Fold hypot(x, 0) and hypot(0, x) to x.  Canonicalize\n+\thypot(x, x) to fabs(x)*sqrt(2).\n+\n 2015-10-27  Richard Sandiford  <richard.sandiford@arm.com>\n \n \t* gimple-match-head.c (maybe_push_res_to_seq): Use create_tmp_reg"}, {"sha": "64106a1d15028f6b549ebec88f6ee7b91c7e474f", "filename": "gcc/builtins.c", "status": "modified", "additions": 4, "deletions": 34, "changes": 38, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4d7836c4361c5ae2f703c03e789ac0c533dd80be/gcc%2Fbuiltins.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4d7836c4361c5ae2f703c03e789ac0c533dd80be/gcc%2Fbuiltins.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fbuiltins.c?ref=4d7836c4361c5ae2f703c03e789ac0c533dd80be", "patch": "@@ -7475,39 +7475,6 @@ fold_builtin_bswap (tree fndecl, tree arg)\n   return NULL_TREE;\n }\n \n-/* Fold a builtin function call to hypot, hypotf, or hypotl.  Return\n-   NULL_TREE if no simplification can be made.  */\n-\n-static tree\n-fold_builtin_hypot (location_t loc, tree arg0, tree arg1, tree type)\n-{\n-  tree res;\n-\n-  if (!validate_arg (arg0, REAL_TYPE)\n-      || !validate_arg (arg1, REAL_TYPE))\n-    return NULL_TREE;\n-\n-  /* Calculate the result when the argument is a constant.  */\n-  if ((res = do_mpfr_arg2 (arg0, arg1, type, mpfr_hypot)))\n-    return res;\n-\n-  /* If either argument is zero, hypot is fabs of the other.  */\n-  if (real_zerop (arg0))\n-    return fold_build1_loc (loc, ABS_EXPR, type, arg1);\n-  else if (real_zerop (arg1))\n-    return fold_build1_loc (loc, ABS_EXPR, type, arg0);\n-\n-  /* hypot(x,x) -> fabs(x)*sqrt(2).  */\n-  if (flag_unsafe_math_optimizations\n-      && operand_equal_p (arg0, arg1, OEP_PURE_SAME))\n-    return fold_build2_loc (loc, MULT_EXPR, type,\n-\t\t\t    fold_build1_loc (loc, ABS_EXPR, type, arg0),\n-\t\t\t    build_real_truncate (type, dconst_sqrt2 ()));\n-\n-  return NULL_TREE;\n-}\n-\n-\n /* Fold a builtin function call to pow, powf, or powl.  Return\n    NULL_TREE if no simplification can be made.  */\n static tree\n@@ -9456,7 +9423,10 @@ fold_builtin_2 (location_t loc, tree fndecl, tree arg0, tree arg1)\n     break;\n \n     CASE_FLT_FN (BUILT_IN_HYPOT):\n-      return fold_builtin_hypot (loc, arg0, arg1, type);\n+      if (validate_arg (arg0, REAL_TYPE)\n+\t  && validate_arg (arg1, REAL_TYPE))\n+\treturn do_mpfr_arg2 (arg0, arg1, type, mpfr_hypot);\n+      break;\n \n     CASE_FLT_FN (BUILT_IN_CPOW):\n       if (validate_arg (arg0, COMPLEX_TYPE)"}, {"sha": "583193ac8025b441c947844c202ad5bd99bc2c5e", "filename": "gcc/match.pd", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4d7836c4361c5ae2f703c03e789ac0c533dd80be/gcc%2Fmatch.pd", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4d7836c4361c5ae2f703c03e789ac0c533dd80be/gcc%2Fmatch.pd", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fmatch.pd?ref=4d7836c4361c5ae2f703c03e789ac0c533dd80be", "patch": "@@ -2519,6 +2519,11 @@ DEFINE_INT_AND_FLOAT_ROUND_FN (RINT)\n   (RINT integer_valued_real_p@0)\n   @0))\n \n+/* hypot(x,0) and hypot(0,x) -> abs(x).  */\n+(simplify\n+ (hypot:c @0 real_zerop@1)\n+ (abs @0))\n+\n /* Canonicalization of sequences of math builtins.  These rules represent\n    IL simplifications but are not necessarily optimizations.\n \n@@ -2617,6 +2622,11 @@ DEFINE_INT_AND_FLOAT_ROUND_FN (RINT)\n   (CABS (complex @0 @0))\n   (mult (abs @0) { build_real_truncate (type, dconst_sqrt2 ()); }))\n \n+ /* hypot(x,x) -> fabs(x)*sqrt(2).  */\n+ (simplify\n+  (HYPOT @0 @0)\n+  (mult (abs @0) { build_real_truncate (type, dconst_sqrt2 ()); }))\n+\n  /* cexp(x+yi) -> exp(x)*cexpi(y).  */\n  (for cexps (CEXP)\n       exps (EXP)"}]}