{"sha": "6a4877c440b1c1154578d55cd0c08dc965472b97", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmE0ODc3YzQ0MGIxYzExNTQ1NzhkNTVjZDBjMDhkYzk2NTQ3MmI5Nw==", "commit": {"author": {"name": "Tom Tromey", "email": "tromey@redhat.com", "date": "2004-11-25T07:03:55Z"}, "committer": {"name": "Tom Tromey", "email": "tromey@gcc.gnu.org", "date": "2004-11-25T07:03:55Z"}, "message": "verify.c (defer_merging): Don't use C++-style comment.\n\n\t* verify.c (defer_merging): Don't use C++-style comment.\n\t* verify.h (java_opcode): Added java_opcode_end.\n\t* class.c (build_class_ref): Remove C++ comment and old FIXME.\n\nFrom-SVN: r91277", "tree": {"sha": "2a694bf1e423b1faab5c614c5b2402f1207c402e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2a694bf1e423b1faab5c614c5b2402f1207c402e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6a4877c440b1c1154578d55cd0c08dc965472b97", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6a4877c440b1c1154578d55cd0c08dc965472b97", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6a4877c440b1c1154578d55cd0c08dc965472b97", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6a4877c440b1c1154578d55cd0c08dc965472b97/comments", "author": null, "committer": null, "parents": [{"sha": "528d9c63e7e9f21c50f7dc2161e8e22a2665ba49", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/528d9c63e7e9f21c50f7dc2161e8e22a2665ba49", "html_url": "https://github.com/Rust-GCC/gccrs/commit/528d9c63e7e9f21c50f7dc2161e8e22a2665ba49"}], "stats": {"total": 16, "additions": 8, "deletions": 8}, "files": [{"sha": "c0ccc1da6a05f93e191106a7ea2b87782040d317", "filename": "gcc/java/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6a4877c440b1c1154578d55cd0c08dc965472b97/gcc%2Fjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6a4877c440b1c1154578d55cd0c08dc965472b97/gcc%2Fjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2FChangeLog?ref=6a4877c440b1c1154578d55cd0c08dc965472b97", "patch": "@@ -1,5 +1,9 @@\n 2004-11-24  Tom Tromey  <tromey@redhat.com>\n \n+\t* verify.c (defer_merging): Don't use C++-style comment.\n+\t* verify.h (java_opcode): Added java_opcode_end.\n+\t* class.c (build_class_ref): Remove C++ comment and old FIXME.\n+\n \t* verify-impl.c (vfy_push_type): Removed bogus \"return\".\n \t(initialize_stack): Use vfy_alloc and vfy_free.\n \t(verify_instructions_0): Likewise."}, {"sha": "df398c71c48233a36351bdc9a6f37367659037f2", "filename": "gcc/java/class.c", "status": "modified", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6a4877c440b1c1154578d55cd0c08dc965472b97/gcc%2Fjava%2Fclass.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6a4877c440b1c1154578d55cd0c08dc965472b97/gcc%2Fjava%2Fclass.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fclass.c?ref=6a4877c440b1c1154578d55cd0c08dc965472b97", "patch": "@@ -943,13 +943,8 @@ build_class_ref (tree type)\n       if (TREE_CODE (type) == POINTER_TYPE)\n \ttype = TREE_TYPE (type);\n \n-      /* FIXME: we really want an indirect reference to our\n-\t superclass.  However, libgcj assumes that a superclass\n-\t pointer always points directly to a class.  As a workaround\n-\t we always emit this hard superclass reference.  */\n       if  (flag_indirect_dispatch\n \t   && type != output_class\n-// \t   && type != CLASSTYPE_SUPER (output_class)\n \t   && TREE_CODE (type) == RECORD_TYPE)\n \treturn build_indirect_class_ref (type);\n "}, {"sha": "fdc272167af151e7caefc88de32174352408840c", "filename": "gcc/java/verify.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6a4877c440b1c1154578d55cd0c08dc965472b97/gcc%2Fjava%2Fverify.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6a4877c440b1c1154578d55cd0c08dc965472b97/gcc%2Fjava%2Fverify.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fverify.c?ref=6a4877c440b1c1154578d55cd0c08dc965472b97", "patch": "@@ -129,9 +129,9 @@ subroutine_nesting (tree label)\n static tree\n defer_merging (tree type1, tree type2)\n {\n-  // FIXME: This is just a placeholder until we replace the verifier\n-  // altogether.  We really need to ouput a type assertion for all of\n-  // the types, every time they are used.\n+  /* FIXME: This is just a placeholder until we replace the verifier\n+     altogether.  We really need to ouput a type assertion for all of\n+     the types, every time they are used.  */\n   return object_ptr_type_node;\n \n   if (TREE_CODE (type1) == POINTER_TYPE)"}, {"sha": "3553d3579601bf971368a8af7794ef5bf2130e9f", "filename": "gcc/java/verify.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6a4877c440b1c1154578d55cd0c08dc965472b97/gcc%2Fjava%2Fverify.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6a4877c440b1c1154578d55cd0c08dc965472b97/gcc%2Fjava%2Fverify.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fverify.h?ref=6a4877c440b1c1154578d55cd0c08dc965472b97", "patch": "@@ -136,6 +136,7 @@ typedef enum\n #define JAVAOP(name, num, ignore1, ignore2, ignore3) \\\n   GLOM (op_, name) = num,\n #include \"javaop.def\"\n+  java_opcode_end\n } java_opcode;\n \n "}]}