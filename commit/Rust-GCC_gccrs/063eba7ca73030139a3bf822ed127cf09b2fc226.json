{"sha": "063eba7ca73030139a3bf822ed127cf09b2fc226", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDYzZWJhN2NhNzMwMzAxMzlhM2JmODIyZWQxMjdjZjA5YjJmYzIyNg==", "commit": {"author": {"name": "Michael Meissner", "email": "meissner@linux.ibm.com", "date": "2021-07-13T04:36:43Z"}, "committer": {"name": "Michael Meissner", "email": "meissner@linux.ibm.com", "date": "2021-07-13T04:41:21Z"}, "message": "Deal with prefixed loads/stores in tests, PR testsuite/100166\n\nThis patch updates the various tests in the testsuite to treat plxv\nand pstxv as being vector loads/stores.  This shows up if you run the\ntestsuite with a compiler configured with the option: --with-cpu=power10.\n\n2021-07-13  Michael Meissner  <meissner@linux.ibm.com>\n\ngcc/testsuite/\n\tPR testsuite/100166\n\t* gcc.dg/vect/costmodel/ppc/costmodel-bb-slp-9a-pr63175.c: Update\n\tinsn counts to account for power10 prefixed loads and stores.\n\t* gcc.target/powerpc/fold-vec-load-builtin_vec_xl-char.c:\n\tLikewise.\n\t* gcc.target/powerpc/fold-vec-load-builtin_vec_xl-double.c:\n\tLikewise.\n\t* gcc.target/powerpc/fold-vec-load-builtin_vec_xl-float.c:\n\tLikewise.\n\t* gcc.target/powerpc/fold-vec-load-builtin_vec_xl-int.c:\n\tLikewise.\n\t* gcc.target/powerpc/fold-vec-load-builtin_vec_xl-longlong.c:\n\tLikewise.\n\t* gcc.target/powerpc/fold-vec-load-builtin_vec_xl-short.c:\n\tLikewise.\n\t* gcc.target/powerpc/fold-vec-load-vec_vsx_ld-char.c: Likewise.\n\t* gcc.target/powerpc/fold-vec-load-vec_vsx_ld-double.c: Likewise.\n\t* gcc.target/powerpc/fold-vec-load-vec_vsx_ld-float.c: Likewise.\n\t* gcc.target/powerpc/fold-vec-load-vec_vsx_ld-int.c: Likewise.\n\t* gcc.target/powerpc/fold-vec-load-vec_vsx_ld-longlong.c:\n\tLikewise.\n\t* gcc.target/powerpc/fold-vec-load-vec_vsx_ld-short.c: Likewise.\n\t* gcc.target/powerpc/fold-vec-load-vec_xl-char.c: Likewise.\n\t* gcc.target/powerpc/fold-vec-load-vec_xl-double.c: Likewise.\n\t* gcc.target/powerpc/fold-vec-load-vec_xl-float.c: Likewise.\n\t* gcc.target/powerpc/fold-vec-load-vec_xl-int.c: Likewise.\n\t* gcc.target/powerpc/fold-vec-load-vec_xl-longlong.c: Likewise.\n\t* gcc.target/powerpc/fold-vec-load-vec_xl-short.c: Likewise.\n\t* gcc.target/powerpc/fold-vec-splat-floatdouble.c: Likewise.\n\t* gcc.target/powerpc/fold-vec-splat-longlong.c: Likewise.\n\t* gcc.target/powerpc/fold-vec-store-builtin_vec_xst-char.c:\n\tLikewise.\n\t* gcc.target/powerpc/fold-vec-store-builtin_vec_xst-double.c:\n\tLikewise.\n\t* gcc.target/powerpc/fold-vec-store-builtin_vec_xst-float.c:\n\tLikewise.\n\t* gcc.target/powerpc/fold-vec-store-builtin_vec_xst-int.c:\n\tLikewise.\n\t* gcc.target/powerpc/fold-vec-store-builtin_vec_xst-longlong.c:\n\tLikewise.\n\t* gcc.target/powerpc/fold-vec-store-builtin_vec_xst-short.c:\n\tLikewise.\n\t* gcc.target/powerpc/fold-vec-store-vec_vsx_st-char.c: Likewise.\n\t* gcc.target/powerpc/fold-vec-store-vec_vsx_st-double.c:\n\tLikewise.\n\t* gcc.target/powerpc/fold-vec-store-vec_vsx_st-float.c: Likewise.\n\t* gcc.target/powerpc/fold-vec-store-vec_vsx_st-int.c: Likewise.\n\t* gcc.target/powerpc/fold-vec-store-vec_vsx_st-longlong.c:\n\tLikewise.\n\t* gcc.target/powerpc/fold-vec-store-vec_vsx_st-short.c: Likewise.\n\t* gcc.target/powerpc/fold-vec-store-vec_xst-char.c: Likewise.\n\t* gcc.target/powerpc/fold-vec-store-vec_xst-double.c: Likewise.\n\t* gcc.target/powerpc/fold-vec-store-vec_xst-float.c: Likewise.\n\t* gcc.target/powerpc/fold-vec-store-vec_xst-int.c: Likewise.\n\t* gcc.target/powerpc/fold-vec-store-vec_xst-longlong.c: Likewise.\n\t* gcc.target/powerpc/fold-vec-store-vec_xst-short.c: Likewise.\n\t* gcc.target/powerpc/lvsl-lvsr.c: Likewise.\n\t* gcc.target/powerpc/pr86731-fwrapv-longlong.c: Likewise.", "tree": {"sha": "f542c00e701e199f566988e8af439f370539b904", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f542c00e701e199f566988e8af439f370539b904"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/063eba7ca73030139a3bf822ed127cf09b2fc226", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/063eba7ca73030139a3bf822ed127cf09b2fc226", "html_url": "https://github.com/Rust-GCC/gccrs/commit/063eba7ca73030139a3bf822ed127cf09b2fc226", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/063eba7ca73030139a3bf822ed127cf09b2fc226/comments", "author": null, "committer": null, "parents": [{"sha": "31ff034a1eadfd4641ce9c44647e30a759cfbbfb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/31ff034a1eadfd4641ce9c44647e30a759cfbbfb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/31ff034a1eadfd4641ce9c44647e30a759cfbbfb"}], "stats": {"total": 87, "additions": 44, "deletions": 43}, "files": [{"sha": "d9f173b521e62109b077942f56306263414cc130", "filename": "gcc/testsuite/gcc.dg/vect/costmodel/ppc/costmodel-bb-slp-9a-pr63175.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/063eba7ca73030139a3bf822ed127cf09b2fc226/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fcostmodel%2Fppc%2Fcostmodel-bb-slp-9a-pr63175.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/063eba7ca73030139a3bf822ed127cf09b2fc226/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fcostmodel%2Fppc%2Fcostmodel-bb-slp-9a-pr63175.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fcostmodel%2Fppc%2Fcostmodel-bb-slp-9a-pr63175.c?ref=063eba7ca73030139a3bf822ed127cf09b2fc226", "patch": "@@ -25,6 +25,6 @@ main1 (void)\n    with no word loads (lw, lwu, lwz, lwzu, or their indexed forms)\n    or word stores (stw, stwu, stwx, stwux, or their indexed forms).  */\n \n-/* { dg-final { scan-assembler \"\\t(lvx|lxv|lvsr|stxv)\" } } */\n+/* { dg-final { scan-assembler \"\\t(lvx|lxv|lvsr|stxv|plxv|pstxv)\" } } */\n /* { dg-final { scan-assembler-not \"\\tlwz?u?x? \" { xfail { powerpc-ibm-aix* } } } } */\n /* { dg-final { scan-assembler-not \"\\tstwu?x? \" } } */"}, {"sha": "f6eb88fbe395ce947a2c03339ab9e9480a9f36e7", "filename": "gcc/testsuite/gcc.target/powerpc/fold-vec-load-builtin_vec_xl-char.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/063eba7ca73030139a3bf822ed127cf09b2fc226/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Ffold-vec-load-builtin_vec_xl-char.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/063eba7ca73030139a3bf822ed127cf09b2fc226/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Ffold-vec-load-builtin_vec_xl-char.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Ffold-vec-load-builtin_vec_xl-char.c?ref=063eba7ca73030139a3bf822ed127cf09b2fc226", "patch": "@@ -36,4 +36,4 @@ BUILD_VAR_TEST( test10, vector unsigned char, signed long long, vector unsigned\n BUILD_VAR_TEST( test11, vector unsigned char, signed int, vector unsigned char);\n BUILD_CST_TEST( test12, vector unsigned char, 8, vector unsigned char);\n \n-/* { dg-final { scan-assembler-times {\\mlxvw4x\\M|\\mlxvd2x\\M|\\mlxvx\\M|\\mlvx\\M} 12 } } */\n+/* { dg-final { scan-assembler-times {\\mlxvw4x\\M|\\mlxvd2x\\M|\\mlxvx\\M|\\mp?lvx\\M} 12 } } */"}, {"sha": "66d544530f68d6ce83ed6f199a145b0c1f5f6fdd", "filename": "gcc/testsuite/gcc.target/powerpc/fold-vec-load-builtin_vec_xl-double.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/063eba7ca73030139a3bf822ed127cf09b2fc226/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Ffold-vec-load-builtin_vec_xl-double.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/063eba7ca73030139a3bf822ed127cf09b2fc226/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Ffold-vec-load-builtin_vec_xl-double.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Ffold-vec-load-builtin_vec_xl-double.c?ref=063eba7ca73030139a3bf822ed127cf09b2fc226", "patch": "@@ -28,4 +28,4 @@ BUILD_VAR_TEST( test4, vector double, signed long long, vector double);\n BUILD_VAR_TEST( test5, vector double, signed int, vector double);\n BUILD_CST_TEST( test6, vector double, 12, vector double);\n \n-/* { dg-final { scan-assembler-times {\\mlxvd2x\\M|\\mlxvx\\M|\\mlvx\\M} 6 } } */\n+/* { dg-final { scan-assembler-times {\\mlxvd2x\\M|\\mlxvx\\M|\\mp?lvx\\M} 6 } } */"}, {"sha": "7d84c2091dfba18abd71077f9d8c46c9d110e8f2", "filename": "gcc/testsuite/gcc.target/powerpc/fold-vec-load-builtin_vec_xl-float.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/063eba7ca73030139a3bf822ed127cf09b2fc226/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Ffold-vec-load-builtin_vec_xl-float.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/063eba7ca73030139a3bf822ed127cf09b2fc226/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Ffold-vec-load-builtin_vec_xl-float.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Ffold-vec-load-builtin_vec_xl-float.c?ref=063eba7ca73030139a3bf822ed127cf09b2fc226", "patch": "@@ -28,4 +28,4 @@ BUILD_VAR_TEST( test4, vector float, signed long long, vector float);\n BUILD_VAR_TEST( test5, vector float, signed int, vector float);\n BUILD_CST_TEST( test6, vector float, 12, vector float);\n \n-/* { dg-final { scan-assembler-times {\\mlxvw4x\\M|\\mlxvd2x\\M|\\mlxvx\\M|\\mlvx\\M} 6 } } */\n+/* { dg-final { scan-assembler-times {\\mlxvw4x\\M|\\mlxvd2x\\M|\\mlxvx\\M|\\mp?lvx\\M} 6 } } */"}, {"sha": "c6a8226d012f1d365287452a0753063eeee6a396", "filename": "gcc/testsuite/gcc.target/powerpc/fold-vec-load-builtin_vec_xl-int.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/063eba7ca73030139a3bf822ed127cf09b2fc226/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Ffold-vec-load-builtin_vec_xl-int.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/063eba7ca73030139a3bf822ed127cf09b2fc226/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Ffold-vec-load-builtin_vec_xl-int.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Ffold-vec-load-builtin_vec_xl-int.c?ref=063eba7ca73030139a3bf822ed127cf09b2fc226", "patch": "@@ -36,4 +36,4 @@ BUILD_VAR_TEST( test10, vector unsigned int, signed long long, vector unsigned i\n BUILD_VAR_TEST( test11, vector unsigned int, signed int, vector unsigned int);\n BUILD_CST_TEST( test12, vector unsigned int, 12, vector unsigned int);\n \n-/* { dg-final { scan-assembler-times {\\mlxvw4x\\M|\\mlxvd2x\\M|\\mlxvx\\M|\\mlvx\\M} 12 } } */\n+/* { dg-final { scan-assembler-times {\\mlxvw4x\\M|\\mlxvd2x\\M|\\mlxvx\\M|\\mp?lvx\\M} 12 } } */"}, {"sha": "6f0cd734475b75e7031d9fe86d6117146754b8d8", "filename": "gcc/testsuite/gcc.target/powerpc/fold-vec-load-builtin_vec_xl-longlong.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/063eba7ca73030139a3bf822ed127cf09b2fc226/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Ffold-vec-load-builtin_vec_xl-longlong.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/063eba7ca73030139a3bf822ed127cf09b2fc226/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Ffold-vec-load-builtin_vec_xl-longlong.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Ffold-vec-load-builtin_vec_xl-longlong.c?ref=063eba7ca73030139a3bf822ed127cf09b2fc226", "patch": "@@ -36,4 +36,4 @@ BUILD_VAR_TEST( test10,  vector unsigned long long, signed long long, vector uns\n BUILD_VAR_TEST( test11,  vector unsigned long long, signed int, vector unsigned long long);\n BUILD_CST_TEST( test12,  vector unsigned long long, 12, vector unsigned long long);\n \n-/* { dg-final { scan-assembler-times {\\mlxvd2x\\M|\\mlxvx\\M|\\mlvx\\M} 12 } } */\n+/* { dg-final { scan-assembler-times {\\mlxvd2x\\M|\\mlxvx\\M|\\mp?lvx\\M} 12 } } */"}, {"sha": "6c270a93fe1f7f8577ef7bfb4d5ff28fb1f580c5", "filename": "gcc/testsuite/gcc.target/powerpc/fold-vec-load-builtin_vec_xl-short.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/063eba7ca73030139a3bf822ed127cf09b2fc226/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Ffold-vec-load-builtin_vec_xl-short.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/063eba7ca73030139a3bf822ed127cf09b2fc226/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Ffold-vec-load-builtin_vec_xl-short.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Ffold-vec-load-builtin_vec_xl-short.c?ref=063eba7ca73030139a3bf822ed127cf09b2fc226", "patch": "@@ -36,4 +36,4 @@ BUILD_VAR_TEST( test10,  vector unsigned short, signed long long, vector unsigne\n BUILD_VAR_TEST( test11,  vector unsigned short, signed int, vector unsigned short);\n BUILD_CST_TEST( test12,  vector unsigned short, 12, vector unsigned short);\n \n-/* { dg-final { scan-assembler-times {\\mlxvw4x\\M|\\mlxvd2x\\M|\\mlxvx\\M|\\mlvx\\M} 12 } } */\n+/* { dg-final { scan-assembler-times {\\mlxvw4x\\M|\\mlxvd2x\\M|\\mlxvx\\M|\\mp?lvx\\M} 12 } } */"}, {"sha": "6aae43583f60e4be7b1be8c5d9c1ce39ad12183b", "filename": "gcc/testsuite/gcc.target/powerpc/fold-vec-load-vec_vsx_ld-char.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/063eba7ca73030139a3bf822ed127cf09b2fc226/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Ffold-vec-load-vec_vsx_ld-char.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/063eba7ca73030139a3bf822ed127cf09b2fc226/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Ffold-vec-load-vec_vsx_ld-char.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Ffold-vec-load-vec_vsx_ld-char.c?ref=063eba7ca73030139a3bf822ed127cf09b2fc226", "patch": "@@ -35,5 +35,5 @@ BUILD_VAR_TEST( test10,  vector unsigned char, signed long long, vector unsigned\n BUILD_VAR_TEST( test11,  vector unsigned char, signed int, vector unsigned char);\n BUILD_CST_TEST( test12,  vector unsigned char, 12, vector unsigned char);\n \n-/* { dg-final { scan-assembler-times {\\mlxvw4x\\M|\\mlxvd2x\\M|\\mlxvx\\M|\\mlvx\\M} 12 } } */\n+/* { dg-final { scan-assembler-times {\\mlxvw4x\\M|\\mlxvd2x\\M|\\mlxvx\\M|\\mlvx\\M|\\mplxv\\M} 12 } } */\n "}, {"sha": "b3f3b7fcd0770cc5278d20791592df58d7964c27", "filename": "gcc/testsuite/gcc.target/powerpc/fold-vec-load-vec_vsx_ld-double.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/063eba7ca73030139a3bf822ed127cf09b2fc226/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Ffold-vec-load-vec_vsx_ld-double.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/063eba7ca73030139a3bf822ed127cf09b2fc226/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Ffold-vec-load-vec_vsx_ld-double.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Ffold-vec-load-vec_vsx_ld-double.c?ref=063eba7ca73030139a3bf822ed127cf09b2fc226", "patch": "@@ -27,4 +27,4 @@ BUILD_VAR_TEST( test4, vector  double, int, vector double);\n BUILD_VAR_TEST( test5, vector  double, long long, vector double);\n BUILD_CST_TEST( test6, vector  double, 12, vector double);\n \n-/* { dg-final { scan-assembler-times {\\mlxvd2x\\M|\\mlxvx\\M|\\mlvx\\M} 6 } } */\n+/* { dg-final { scan-assembler-times {\\mlxvd2x\\M|\\mlxvx\\M|\\mlvx\\M|\\mplxv\\M} 6 } } */"}, {"sha": "56cbe9ad10238baf7c9a915dcf95a2825b1b1dfc", "filename": "gcc/testsuite/gcc.target/powerpc/fold-vec-load-vec_vsx_ld-float.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/063eba7ca73030139a3bf822ed127cf09b2fc226/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Ffold-vec-load-vec_vsx_ld-float.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/063eba7ca73030139a3bf822ed127cf09b2fc226/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Ffold-vec-load-vec_vsx_ld-float.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Ffold-vec-load-vec_vsx_ld-float.c?ref=063eba7ca73030139a3bf822ed127cf09b2fc226", "patch": "@@ -27,4 +27,4 @@ BUILD_VAR_TEST( test5,  vector float, signed long long, vector float);\n BUILD_VAR_TEST( test7,  vector float, signed int, vector float);\n BUILD_CST_TEST( test8,  vector float, 12, vector float);\n \n-/* { dg-final { scan-assembler-times {\\mlxvw4x\\M|\\mlxvd2x\\M|\\mlxvx\\M|\\mlvx\\M} 6 } } */\n+/* { dg-final { scan-assembler-times {\\mlxvw4x\\M|\\mlxvd2x\\M|\\mlxvx\\M|\\mlvx\\M|\\mplxv\\M} 6 } } */"}, {"sha": "2cde9f5b6ddfdcea5421a4cebea2d48951061c9e", "filename": "gcc/testsuite/gcc.target/powerpc/fold-vec-load-vec_vsx_ld-int.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/063eba7ca73030139a3bf822ed127cf09b2fc226/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Ffold-vec-load-vec_vsx_ld-int.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/063eba7ca73030139a3bf822ed127cf09b2fc226/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Ffold-vec-load-vec_vsx_ld-int.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Ffold-vec-load-vec_vsx_ld-int.c?ref=063eba7ca73030139a3bf822ed127cf09b2fc226", "patch": "@@ -35,4 +35,4 @@ BUILD_VAR_TEST( test10,  vector unsigned int, signed long long, vector unsigned\n BUILD_VAR_TEST( test11,  vector unsigned int, signed int, vector unsigned int);\n BUILD_CST_TEST( test12,  vector unsigned int, 12, vector unsigned int);\n \n-/* { dg-final { scan-assembler-times {\\mlxvw4x\\M|\\mlxvd2x\\M|\\mlxvx\\M|\\mlvx\\M} 12 } } */\n+/* { dg-final { scan-assembler-times {\\mlxvw4x\\M|\\mlxvd2x\\M|\\mlxvx\\M|\\mlvx\\M|\\mplxv\\M} 12 } } */"}, {"sha": "cf2b7f9b5bc9bd852f60fd887a7f4169f41178b7", "filename": "gcc/testsuite/gcc.target/powerpc/fold-vec-load-vec_vsx_ld-longlong.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/063eba7ca73030139a3bf822ed127cf09b2fc226/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Ffold-vec-load-vec_vsx_ld-longlong.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/063eba7ca73030139a3bf822ed127cf09b2fc226/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Ffold-vec-load-vec_vsx_ld-longlong.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Ffold-vec-load-vec_vsx_ld-longlong.c?ref=063eba7ca73030139a3bf822ed127cf09b2fc226", "patch": "@@ -35,4 +35,4 @@ BUILD_VAR_TEST( test10,  vector unsigned long long, signed long long, vector uns\n BUILD_VAR_TEST( test11,  vector unsigned long long, signed int, vector unsigned long long);\n BUILD_CST_TEST( test12,  vector unsigned long long, 12, vector unsigned long long);\n \n-/* { dg-final { scan-assembler-times {\\mlxvd2x\\M|\\mlxvx\\M|\\mlvx\\M} 12 } } */\n+/* { dg-final { scan-assembler-times {\\mlxvd2x\\M|\\mlxvx\\M|\\mlvx\\M|\\mplxv\\M} 12 } } */"}, {"sha": "cfc0e307d8042390260fc830c55092687f04df0e", "filename": "gcc/testsuite/gcc.target/powerpc/fold-vec-load-vec_vsx_ld-short.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/063eba7ca73030139a3bf822ed127cf09b2fc226/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Ffold-vec-load-vec_vsx_ld-short.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/063eba7ca73030139a3bf822ed127cf09b2fc226/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Ffold-vec-load-vec_vsx_ld-short.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Ffold-vec-load-vec_vsx_ld-short.c?ref=063eba7ca73030139a3bf822ed127cf09b2fc226", "patch": "@@ -35,4 +35,4 @@ BUILD_VAR_TEST( test10,  vector unsigned short, signed long long, vector unsigne\n BUILD_VAR_TEST( test11,  vector unsigned short, signed int, vector unsigned short);\n BUILD_CST_TEST( test12,  vector unsigned short, 12, vector unsigned short);\n \n-/* { dg-final { scan-assembler-times {\\mlxvw4x\\M|\\mlxvd2x\\M|\\mlxvx\\M|\\mlvx\\M} 12 } } */\n+/* { dg-final { scan-assembler-times {\\mlxvw4x\\M|\\mlxvd2x\\M|\\mlxvx\\M|\\mlvx\\M|\\mplxv\\M} 12 } } */"}, {"sha": "7281b3cca7ace8eb630061ff47d4becb63edd154", "filename": "gcc/testsuite/gcc.target/powerpc/fold-vec-load-vec_xl-char.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/063eba7ca73030139a3bf822ed127cf09b2fc226/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Ffold-vec-load-vec_xl-char.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/063eba7ca73030139a3bf822ed127cf09b2fc226/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Ffold-vec-load-vec_xl-char.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Ffold-vec-load-vec_xl-char.c?ref=063eba7ca73030139a3bf822ed127cf09b2fc226", "patch": "@@ -35,4 +35,4 @@ BUILD_VAR_TEST( test10,  vector unsigned char, signed long long, unsigned char);\n BUILD_VAR_TEST( test11,  vector unsigned char, signed int, unsigned char);\n BUILD_CST_TEST( test12,  vector unsigned char, 12, unsigned char);\n \n-/* { dg-final { scan-assembler-times {\\mlxvw4x\\M|\\mlxvd2x\\M|\\mlxvx\\M|\\mlvx\\M} 12 } } */\n+/* { dg-final { scan-assembler-times {\\mlxvw4x\\M|\\mlxvd2x\\M|\\mlxvx\\M|\\mlvx\\M|\\mplxv\\M} 12 } } */"}, {"sha": "3f3d985c45bf8c6037c02a29550df8822fc15271", "filename": "gcc/testsuite/gcc.target/powerpc/fold-vec-load-vec_xl-double.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/063eba7ca73030139a3bf822ed127cf09b2fc226/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Ffold-vec-load-vec_xl-double.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/063eba7ca73030139a3bf822ed127cf09b2fc226/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Ffold-vec-load-vec_xl-double.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Ffold-vec-load-vec_xl-double.c?ref=063eba7ca73030139a3bf822ed127cf09b2fc226", "patch": "@@ -28,4 +28,4 @@ BUILD_VAR_TEST( test4,  vector double, signed long long, double);\n BUILD_VAR_TEST( test5,  vector double, signed int, double);\n BUILD_CST_TEST( test6,  vector double, 12, double);\n \n-/* { dg-final { scan-assembler-times {\\mlxvd2x\\M|\\mlxvx\\M|\\mlvx\\M} 6 } } */\n+/* { dg-final { scan-assembler-times {\\mlxvd2x\\M|\\mlxvx\\M|\\mlvx\\M|\\mplxv\\M} 6 } } */"}, {"sha": "eafe3053771b6585cf32fd092156fc15091c3414", "filename": "gcc/testsuite/gcc.target/powerpc/fold-vec-load-vec_xl-float.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/063eba7ca73030139a3bf822ed127cf09b2fc226/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Ffold-vec-load-vec_xl-float.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/063eba7ca73030139a3bf822ed127cf09b2fc226/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Ffold-vec-load-vec_xl-float.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Ffold-vec-load-vec_xl-float.c?ref=063eba7ca73030139a3bf822ed127cf09b2fc226", "patch": "@@ -27,4 +27,4 @@ BUILD_VAR_TEST( test4,  vector float, signed long long, vector float);\n BUILD_VAR_TEST( test5,  vector float, signed int, vector float);\n BUILD_CST_TEST( test6,  vector float, 12, vector float);\n \n-/* { dg-final { scan-assembler-times {\\mlxvw4x\\M|\\mlxvd2x\\M|\\mlxvx\\M|\\mlvx\\M} 6 } } */\n+/* { dg-final { scan-assembler-times {\\mlxvw4x\\M|\\mlxvd2x\\M|\\mlxvx\\M|\\mlvx\\M|\\mplxv\\M} 6 } } */"}, {"sha": "a2267218af9ac5fc5b17fd58295950f3b1cca560", "filename": "gcc/testsuite/gcc.target/powerpc/fold-vec-load-vec_xl-int.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/063eba7ca73030139a3bf822ed127cf09b2fc226/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Ffold-vec-load-vec_xl-int.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/063eba7ca73030139a3bf822ed127cf09b2fc226/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Ffold-vec-load-vec_xl-int.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Ffold-vec-load-vec_xl-int.c?ref=063eba7ca73030139a3bf822ed127cf09b2fc226", "patch": "@@ -35,4 +35,4 @@ BUILD_VAR_TEST( test10,  vector unsigned int, signed long long, vector unsigned\n BUILD_VAR_TEST( test11,  vector unsigned int, signed int, vector unsigned int);\n BUILD_CST_TEST( test12,  vector unsigned int, 12, vector unsigned int);\n \n-/* { dg-final { scan-assembler-times {\\mlxvw4x\\M|\\mlxvd2x\\M|\\mlxvx\\M|\\mlvx\\M} 12 } } */\n+/* { dg-final { scan-assembler-times {\\mlxvw4x\\M|\\mlxvd2x\\M|\\mlxvx\\M|\\mlvx\\M|\\mplxv\\M} 12 } } */"}, {"sha": "f2e5469ab742d4f932e70a0e55a0a52d4f552bb2", "filename": "gcc/testsuite/gcc.target/powerpc/fold-vec-load-vec_xl-longlong.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/063eba7ca73030139a3bf822ed127cf09b2fc226/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Ffold-vec-load-vec_xl-longlong.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/063eba7ca73030139a3bf822ed127cf09b2fc226/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Ffold-vec-load-vec_xl-longlong.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Ffold-vec-load-vec_xl-longlong.c?ref=063eba7ca73030139a3bf822ed127cf09b2fc226", "patch": "@@ -35,4 +35,4 @@ BUILD_VAR_TEST( test10,  vector unsigned long long, signed long long, vector uns\n BUILD_VAR_TEST( test11,  vector unsigned long long, signed int, vector unsigned long long);\n BUILD_CST_TEST( test12,  vector unsigned long long, 12, vector unsigned long long);\n \n-/* { dg-final { scan-assembler-times {\\mlxvd2x\\M|\\mlxvx\\M|\\mlvx\\M} 12 } } */\n+/* { dg-final { scan-assembler-times {\\mlxvd2x\\M|\\mlxvx\\M|\\mlvx\\M|\\mplxv\\M} 12 } } */"}, {"sha": "2d64b4f11d2767363fc5737ea5ac47eaa4160e33", "filename": "gcc/testsuite/gcc.target/powerpc/fold-vec-load-vec_xl-short.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/063eba7ca73030139a3bf822ed127cf09b2fc226/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Ffold-vec-load-vec_xl-short.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/063eba7ca73030139a3bf822ed127cf09b2fc226/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Ffold-vec-load-vec_xl-short.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Ffold-vec-load-vec_xl-short.c?ref=063eba7ca73030139a3bf822ed127cf09b2fc226", "patch": "@@ -35,4 +35,4 @@ BUILD_VAR_TEST( test10,  vector unsigned short, signed long long, vector unsigne\n BUILD_VAR_TEST( test11,  vector unsigned short, signed int, vector unsigned short);\n BUILD_CST_TEST( test12,  vector unsigned short, 12, vector unsigned short);\n \n-/* { dg-final { scan-assembler-times {\\mlxvw4x\\M|\\mlxvd2x\\M|\\mlxvx\\M|\\mlvx\\M} 12 } } */\n+/* { dg-final { scan-assembler-times {\\mlxvw4x\\M|\\mlxvd2x\\M|\\mlxvx\\M|\\mlvx\\M|\\mplxv\\M} 12 } } */"}, {"sha": "766191773881d5c2f95ac3a3d18843a2d085e9c5", "filename": "gcc/testsuite/gcc.target/powerpc/fold-vec-splat-floatdouble.c", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/063eba7ca73030139a3bf822ed127cf09b2fc226/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Ffold-vec-splat-floatdouble.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/063eba7ca73030139a3bf822ed127cf09b2fc226/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Ffold-vec-splat-floatdouble.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Ffold-vec-splat-floatdouble.c?ref=063eba7ca73030139a3bf822ed127cf09b2fc226", "patch": "@@ -20,11 +20,12 @@ vector double testd_01 (vector double x) { return vec_splat (x, 0b00001); }\n vector double test_dc ()\n { const vector double y = { 3.0, 5.0 }; return vec_splat (y, 0b00010); }\n \n-/* If the source vector is a known constant, we will generate a load.  */\n-/* { dg-final { scan-assembler-times {\\mlvx\\M|\\mlxvd2x\\M|\\mlxv\\M} 2 } } */\n+/* If the source vector is a known constant, we will generate a load or possibly\n+   XXSPLTIW.  */\n+/* { dg-final { scan-assembler-times {\\mlvx\\M|\\mlxvd2x\\M|\\mlxv\\M|\\mplxv\\M|\\mxxspltiw\\M} 2 } } */\n \n /* For float types, we generate a splat.  */\n-/* { dg-final { scan-assembler-times \"vspltw|xxspltw\" 3 } } */\n+/* { dg-final { scan-assembler-times {\\mvspltw\\M|\\mxxspltw\\M} 3 } } */\n \n /* For double types, we will generate xxpermdi instructions.  */\n /* { dg-final { scan-assembler-times \"xxpermdi\" 3 } } */"}, {"sha": "b95b987abceff22a976fd5ede900ba6b36dc4613", "filename": "gcc/testsuite/gcc.target/powerpc/fold-vec-splat-longlong.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/063eba7ca73030139a3bf822ed127cf09b2fc226/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Ffold-vec-splat-longlong.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/063eba7ca73030139a3bf822ed127cf09b2fc226/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Ffold-vec-splat-longlong.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Ffold-vec-splat-longlong.c?ref=063eba7ca73030139a3bf822ed127cf09b2fc226", "patch": "@@ -25,7 +25,7 @@ vector signed long long test_sll () { const vector signed long long y = {34, 45}\n vector unsigned long long test_ull () { const vector unsigned long long y = {56, 67}; return vec_splat (y, 0b00010); }\n \n /* Assorted load instructions for the initialization with known constants. */\n-/* { dg-final { scan-assembler-times {\\mlvx\\M|\\mlxvd2x\\M|\\mlxv\\M} 3 } } */\n+/* { dg-final { scan-assembler-times {\\mlvx\\M|\\mlxvd2x\\M|\\mlxv\\M|\\mplxv\\M} 3 } } */\n \n /* xxpermdi for vec_splat of long long vectors.\n  At the time of this writing, the number of xxpermdi instructions"}, {"sha": "162563caed4aefea15fc57ab21cfde82400a999b", "filename": "gcc/testsuite/gcc.target/powerpc/fold-vec-store-builtin_vec_xst-char.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/063eba7ca73030139a3bf822ed127cf09b2fc226/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Ffold-vec-store-builtin_vec_xst-char.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/063eba7ca73030139a3bf822ed127cf09b2fc226/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Ffold-vec-store-builtin_vec_xst-char.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Ffold-vec-store-builtin_vec_xst-char.c?ref=063eba7ca73030139a3bf822ed127cf09b2fc226", "patch": "@@ -36,4 +36,4 @@ BUILD_VAR_TEST( test10,  vector unsigned char, signed long long, vector unsigned\n BUILD_VAR_TEST( test11,  vector unsigned char, signed int, vector unsigned char );\n BUILD_CST_TEST( test12,  vector unsigned char, 12, vector unsigned char );\n \n-/* { dg-final { scan-assembler-times {\\mstxvw4x\\M|\\mstxvd2x\\M|\\mstxvx\\M|\\mstvx\\M} 12 } } */\n+/* { dg-final { scan-assembler-times {\\mstxvw4x\\M|\\mstxvd2x\\M|\\mstxvx\\M|\\mstvx\\M|\\mpstxv\\M} 12 } } */"}, {"sha": "c42a720d361542c91837e6a83de78f66e8c2b120", "filename": "gcc/testsuite/gcc.target/powerpc/fold-vec-store-builtin_vec_xst-double.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/063eba7ca73030139a3bf822ed127cf09b2fc226/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Ffold-vec-store-builtin_vec_xst-double.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/063eba7ca73030139a3bf822ed127cf09b2fc226/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Ffold-vec-store-builtin_vec_xst-double.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Ffold-vec-store-builtin_vec_xst-double.c?ref=063eba7ca73030139a3bf822ed127cf09b2fc226", "patch": "@@ -28,4 +28,4 @@ BUILD_VAR_TEST( test4,  vector double, signed long long, double );\n BUILD_VAR_TEST( test5,  vector double, signed int, double );\n BUILD_CST_TEST( test6,  vector double, 12, double );\n \n-/* { dg-final { scan-assembler-times {\\mstxvd2x\\M|\\mstxvx\\M|\\mstvx\\M} 6 } } */\n+/* { dg-final { scan-assembler-times {\\mstxvd2x\\M|\\mstxvx\\M|\\mstvx\\M|\\mpstxv\\M} 6 } } */"}, {"sha": "b200c47fd2f886764ebbc1988d2b4e0bb0ea821b", "filename": "gcc/testsuite/gcc.target/powerpc/fold-vec-store-builtin_vec_xst-float.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/063eba7ca73030139a3bf822ed127cf09b2fc226/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Ffold-vec-store-builtin_vec_xst-float.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/063eba7ca73030139a3bf822ed127cf09b2fc226/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Ffold-vec-store-builtin_vec_xst-float.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Ffold-vec-store-builtin_vec_xst-float.c?ref=063eba7ca73030139a3bf822ed127cf09b2fc226", "patch": "@@ -28,4 +28,4 @@ BUILD_VAR_TEST( test4,  vector float, signed long long, vector float );\n BUILD_VAR_TEST( test5,  vector float, signed int, vector float );\n BUILD_CST_TEST( test6,  vector float, 12, vector float );\n \n-/* { dg-final { scan-assembler-times {\\mstxvd2x\\M|\\mstxvx\\M|\\mstvx\\M} 6 } } */\n+/* { dg-final { scan-assembler-times {\\mstxvd2x\\M|\\mstxvx\\M|\\mstvx\\M|\\mpstxv\\M} 6 } } */"}, {"sha": "d9848820b3afde7d4f4574c7aab49a35d90b9a26", "filename": "gcc/testsuite/gcc.target/powerpc/fold-vec-store-builtin_vec_xst-int.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/063eba7ca73030139a3bf822ed127cf09b2fc226/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Ffold-vec-store-builtin_vec_xst-int.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/063eba7ca73030139a3bf822ed127cf09b2fc226/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Ffold-vec-store-builtin_vec_xst-int.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Ffold-vec-store-builtin_vec_xst-int.c?ref=063eba7ca73030139a3bf822ed127cf09b2fc226", "patch": "@@ -36,4 +36,4 @@ BUILD_VAR_TEST( test10, vector unsigned int, signed long long, vector unsigned i\n BUILD_VAR_TEST( test11, vector unsigned int, signed int, vector unsigned int );\n BUILD_CST_TEST( test12, vector unsigned int, 12, vector unsigned int );\n \n-/* { dg-final { scan-assembler-times {\\mstxvw4x\\M|\\mstxvd2x\\M|\\mstxvx\\M|\\mstvx\\M} 12 } } */\n+/* { dg-final { scan-assembler-times {\\mstxvw4x\\M|\\mstxvd2x\\M|\\mstxvx\\M|\\mstvx\\M|\\mpstxv\\M} 12 } } */"}, {"sha": "bb72d9b2a9981f094013bf1c594494dd4fe6e9ae", "filename": "gcc/testsuite/gcc.target/powerpc/fold-vec-store-builtin_vec_xst-longlong.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/063eba7ca73030139a3bf822ed127cf09b2fc226/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Ffold-vec-store-builtin_vec_xst-longlong.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/063eba7ca73030139a3bf822ed127cf09b2fc226/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Ffold-vec-store-builtin_vec_xst-longlong.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Ffold-vec-store-builtin_vec_xst-longlong.c?ref=063eba7ca73030139a3bf822ed127cf09b2fc226", "patch": "@@ -36,4 +36,4 @@ BUILD_VAR_TEST( test10,  vector unsigned long long, signed long long, vector uns\n BUILD_VAR_TEST( test11,  vector unsigned long long, signed int, vector unsigned long long );\n BUILD_CST_TEST( test12,  vector unsigned long long, 12, vector unsigned long long );\n \n-/* { dg-final { scan-assembler-times {\\mstxvd2x\\M|\\mstxvx\\M|\\mstvx\\M} 12 } } */\n+/* { dg-final { scan-assembler-times {\\mstxvd2x\\M|\\mstxvx\\M|\\mstvx\\M|\\mpstxv\\M} 12 } } */"}, {"sha": "f4dbb7025830aaad55bf3977b7d3dca0c218fdb4", "filename": "gcc/testsuite/gcc.target/powerpc/fold-vec-store-builtin_vec_xst-short.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/063eba7ca73030139a3bf822ed127cf09b2fc226/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Ffold-vec-store-builtin_vec_xst-short.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/063eba7ca73030139a3bf822ed127cf09b2fc226/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Ffold-vec-store-builtin_vec_xst-short.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Ffold-vec-store-builtin_vec_xst-short.c?ref=063eba7ca73030139a3bf822ed127cf09b2fc226", "patch": "@@ -36,4 +36,4 @@ BUILD_VAR_TEST( test10, vector unsigned short, signed long long, vector unsigned\n BUILD_VAR_TEST( test11, vector unsigned short, signed int, vector unsigned short );\n BUILD_CST_TEST( test12, vector unsigned short, 12, vector unsigned short );\n \n-/* { dg-final { scan-assembler-times {\\mstxvw4x\\M|\\mstxvd2x\\M|\\mstxvx\\M|\\mstvx\\M} 12 } } */\n+/* { dg-final { scan-assembler-times {\\mstxvw4x\\M|\\mstxvd2x\\M|\\mstxvx\\M|\\mstvx\\M|\\mpstxv\\M} 12 } } */"}, {"sha": "ae5cf8ef0b482e0a29a2ab89dd3f98445f99d305", "filename": "gcc/testsuite/gcc.target/powerpc/fold-vec-store-vec_vsx_st-char.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/063eba7ca73030139a3bf822ed127cf09b2fc226/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Ffold-vec-store-vec_vsx_st-char.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/063eba7ca73030139a3bf822ed127cf09b2fc226/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Ffold-vec-store-vec_vsx_st-char.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Ffold-vec-store-vec_vsx_st-char.c?ref=063eba7ca73030139a3bf822ed127cf09b2fc226", "patch": "@@ -36,4 +36,4 @@ BUILD_VAR_TEST( test10, vector unsigned char, signed long long, vector unsigned\n BUILD_VAR_TEST( test11, vector unsigned char, signed int, vector unsigned char );\n BUILD_CST_TEST( test12, vector unsigned char, 12, vector unsigned char );\n \n-/* { dg-final { scan-assembler-times {\\mstxvw4x\\M|\\mstxvd2x\\M|\\mstxvx\\M|\\mstvx\\M} 12 } } */\n+/* { dg-final { scan-assembler-times {\\mstxvw4x\\M|\\mstxvd2x\\M|\\mstxvx\\M|\\mstvx\\M|\\mpstxv\\M} 12 } } */"}, {"sha": "1360f4d4ce950714e7dfcfc73e5beb3171d1c06a", "filename": "gcc/testsuite/gcc.target/powerpc/fold-vec-store-vec_vsx_st-double.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/063eba7ca73030139a3bf822ed127cf09b2fc226/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Ffold-vec-store-vec_vsx_st-double.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/063eba7ca73030139a3bf822ed127cf09b2fc226/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Ffold-vec-store-vec_vsx_st-double.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Ffold-vec-store-vec_vsx_st-double.c?ref=063eba7ca73030139a3bf822ed127cf09b2fc226", "patch": "@@ -28,4 +28,4 @@ BUILD_VAR_TEST( test7,  vector double, signed long long, vector double );\n BUILD_VAR_TEST( test8,  vector double, signed int, vector double );\n BUILD_CST_TEST( test9,  vector double, 12, vector double );\n \n-/* { dg-final { scan-assembler-times {\\mstxvd2x\\M|\\mstxvx\\M|\\mstvx\\M} 6 } } */\n+/* { dg-final { scan-assembler-times {\\mstxvd2x\\M|\\mstxvx\\M|\\mstvx\\M|\\mpstxv\\M} 6 } } */"}, {"sha": "1b70f2a80f7977bac1f040d78751311f586d438b", "filename": "gcc/testsuite/gcc.target/powerpc/fold-vec-store-vec_vsx_st-float.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/063eba7ca73030139a3bf822ed127cf09b2fc226/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Ffold-vec-store-vec_vsx_st-float.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/063eba7ca73030139a3bf822ed127cf09b2fc226/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Ffold-vec-store-vec_vsx_st-float.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Ffold-vec-store-vec_vsx_st-float.c?ref=063eba7ca73030139a3bf822ed127cf09b2fc226", "patch": "@@ -28,4 +28,4 @@ BUILD_VAR_TEST( test7,  vector float, signed long long, vector float );\n BUILD_VAR_TEST( test8,  vector float, signed int, vector float );\n BUILD_CST_TEST( test9,  vector float, 12, vector float );\n \n-/* { dg-final { scan-assembler-times {\\mstxvd2x\\M|\\mstxvx\\M|\\mstvx\\M} 6 } } */\n+/* { dg-final { scan-assembler-times {\\mstxvd2x\\M|\\mstxvx\\M|\\mstvx\\M|\\mpstxv\\M} 6 } } */"}, {"sha": "4e4a499eaad398d8c7de6e2e1ef5dbe65646b471", "filename": "gcc/testsuite/gcc.target/powerpc/fold-vec-store-vec_vsx_st-int.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/063eba7ca73030139a3bf822ed127cf09b2fc226/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Ffold-vec-store-vec_vsx_st-int.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/063eba7ca73030139a3bf822ed127cf09b2fc226/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Ffold-vec-store-vec_vsx_st-int.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Ffold-vec-store-vec_vsx_st-int.c?ref=063eba7ca73030139a3bf822ed127cf09b2fc226", "patch": "@@ -36,4 +36,4 @@ BUILD_VAR_TEST( test10, vector unsigned int, signed long long, vector unsigned i\n BUILD_VAR_TEST( test11, vector unsigned int, signed int, vector unsigned int );\n BUILD_CST_TEST( test12, vector unsigned int, 12, vector unsigned int );\n \n-/* { dg-final { scan-assembler-times {\\mstxvw4x\\M|\\mstxvd2x\\M|\\mstxvx\\M|\\mstvx\\M} 12 } } */\n+/* { dg-final { scan-assembler-times {\\mstxvw4x\\M|\\mstxvd2x\\M|\\mstxvx\\M|\\mstvx\\M|\\mpstxv\\M} 12 } } */"}, {"sha": "b57c126b9ab866f5d680e91975ca11927a521ab3", "filename": "gcc/testsuite/gcc.target/powerpc/fold-vec-store-vec_vsx_st-longlong.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/063eba7ca73030139a3bf822ed127cf09b2fc226/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Ffold-vec-store-vec_vsx_st-longlong.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/063eba7ca73030139a3bf822ed127cf09b2fc226/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Ffold-vec-store-vec_vsx_st-longlong.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Ffold-vec-store-vec_vsx_st-longlong.c?ref=063eba7ca73030139a3bf822ed127cf09b2fc226", "patch": "@@ -36,4 +36,4 @@ BUILD_VAR_TEST( test10, vector unsigned long long, signed long long, vector unsi\n BUILD_VAR_TEST( test11, vector unsigned long long, signed int, vector unsigned long long );\n BUILD_CST_TEST( test12, vector unsigned long long, 12, vector unsigned long long );\n \n-/* { dg-final { scan-assembler-times {\\mstxvd2x\\M|\\mstxvx\\M|\\mstvx\\M} 12 } } */\n+/* { dg-final { scan-assembler-times {\\mstxvd2x\\M|\\mstxvx\\M|\\mstvx\\M|\\mpstxv\\M} 12 } } */"}, {"sha": "7593f42525835b384b82e5e94be642bc7e448feb", "filename": "gcc/testsuite/gcc.target/powerpc/fold-vec-store-vec_vsx_st-short.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/063eba7ca73030139a3bf822ed127cf09b2fc226/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Ffold-vec-store-vec_vsx_st-short.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/063eba7ca73030139a3bf822ed127cf09b2fc226/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Ffold-vec-store-vec_vsx_st-short.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Ffold-vec-store-vec_vsx_st-short.c?ref=063eba7ca73030139a3bf822ed127cf09b2fc226", "patch": "@@ -36,4 +36,4 @@ BUILD_VAR_TEST( test10, vector unsigned short, signed long long, vector unsigned\n BUILD_VAR_TEST( test11, vector unsigned short, signed int, vector unsigned short );\n BUILD_CST_TEST( test12, vector unsigned short, 12, vector unsigned short );\n \n-/* { dg-final { scan-assembler-times {\\mstxvw4x\\M|\\mstxvd2x\\M|\\mstxvx\\M|\\mstvx\\M} 12 } } */\n+/* { dg-final { scan-assembler-times {\\mstxvw4x\\M|\\mstxvd2x\\M|\\mstxvx\\M|\\mstvx\\M|\\mpstxv\\M} 12 } } */"}, {"sha": "fdd2ed5648d1aff6c2d9ee2b17f987aa63bcdcd2", "filename": "gcc/testsuite/gcc.target/powerpc/fold-vec-store-vec_xst-char.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/063eba7ca73030139a3bf822ed127cf09b2fc226/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Ffold-vec-store-vec_xst-char.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/063eba7ca73030139a3bf822ed127cf09b2fc226/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Ffold-vec-store-vec_xst-char.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Ffold-vec-store-vec_xst-char.c?ref=063eba7ca73030139a3bf822ed127cf09b2fc226", "patch": "@@ -35,4 +35,4 @@ BUILD_VAR_TEST( test10, vector unsigned char, signed long long, vector unsigned\n BUILD_VAR_TEST( test11, vector unsigned char, signed int, vector unsigned char );\n BUILD_CST_TEST( test12, vector unsigned char, 12, vector unsigned char );\n \n-/* { dg-final { scan-assembler-times {\\mstxvw4x\\M|\\mstxvd2x\\M|\\mstxvx\\M|\\mstvx\\M} 12 } } */\n+/* { dg-final { scan-assembler-times {\\mstxvw4x\\M|\\mstxvd2x\\M|\\mstxvx\\M|\\mstvx\\M|\\mpstxv\\M} 12 } } */"}, {"sha": "62f8552fddec06eb54b127713e8c36e7a7be40c0", "filename": "gcc/testsuite/gcc.target/powerpc/fold-vec-store-vec_xst-double.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/063eba7ca73030139a3bf822ed127cf09b2fc226/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Ffold-vec-store-vec_xst-double.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/063eba7ca73030139a3bf822ed127cf09b2fc226/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Ffold-vec-store-vec_xst-double.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Ffold-vec-store-vec_xst-double.c?ref=063eba7ca73030139a3bf822ed127cf09b2fc226", "patch": "@@ -27,4 +27,4 @@ BUILD_VAR_TEST( test7,  vector double, signed long long, vector double );\n BUILD_VAR_TEST( test8,  vector double, signed int, vector double );\n BUILD_CST_TEST( test9,  vector double, 12, vector double );\n \n-/* { dg-final { scan-assembler-times {\\mstxvd2x\\M|\\mstxvx\\M|\\mstvx\\M} 6 } } */\n+/* { dg-final { scan-assembler-times {\\mstxvd2x\\M|\\mstxvx\\M|\\mstvx\\M|\\mpstxv\\M} 6 } } */"}, {"sha": "ad15a5a2b518ea915e32504141953322007aaf9f", "filename": "gcc/testsuite/gcc.target/powerpc/fold-vec-store-vec_xst-float.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/063eba7ca73030139a3bf822ed127cf09b2fc226/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Ffold-vec-store-vec_xst-float.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/063eba7ca73030139a3bf822ed127cf09b2fc226/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Ffold-vec-store-vec_xst-float.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Ffold-vec-store-vec_xst-float.c?ref=063eba7ca73030139a3bf822ed127cf09b2fc226", "patch": "@@ -27,4 +27,4 @@ BUILD_VAR_TEST( test7,  vector float, signed long long, vector float );\n BUILD_VAR_TEST( test8,  vector float, signed int, vector float );\n BUILD_CST_TEST( test9,  vector float, 12, vector float );\n \n-/* { dg-final { scan-assembler-times {\\mstxvd2x\\M|\\mstxvx\\M|\\mstvx\\M} 6 } } */\n+/* { dg-final { scan-assembler-times {\\mstxvd2x\\M|\\mstxvx\\M|\\mstvx\\M|\\mpstxv\\M} 6 } } */"}, {"sha": "abe93dfb2351be6f9951629c776d32eb212e9be2", "filename": "gcc/testsuite/gcc.target/powerpc/fold-vec-store-vec_xst-int.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/063eba7ca73030139a3bf822ed127cf09b2fc226/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Ffold-vec-store-vec_xst-int.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/063eba7ca73030139a3bf822ed127cf09b2fc226/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Ffold-vec-store-vec_xst-int.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Ffold-vec-store-vec_xst-int.c?ref=063eba7ca73030139a3bf822ed127cf09b2fc226", "patch": "@@ -35,4 +35,4 @@ BUILD_VAR_TEST( test10, vector unsigned int, signed long long, vector unsigned i\n BUILD_VAR_TEST( test11, vector unsigned int, signed int, vector unsigned int );\n BUILD_CST_TEST( test12, vector unsigned int, 12, vector unsigned int );\n \n-/* { dg-final { scan-assembler-times {\\mstxvw4x\\M|\\mstxvd2x\\M|\\mstxvx\\M|\\mstvx\\M} 12 } } */\n+/* { dg-final { scan-assembler-times {\\mstxvw4x\\M|\\mstxvd2x\\M|\\mstxvx\\M|\\mstvx\\M|\\mpstxv\\M} 12 } } */"}, {"sha": "6859593bf0a828e4db24627178799cff3fcb6751", "filename": "gcc/testsuite/gcc.target/powerpc/fold-vec-store-vec_xst-longlong.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/063eba7ca73030139a3bf822ed127cf09b2fc226/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Ffold-vec-store-vec_xst-longlong.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/063eba7ca73030139a3bf822ed127cf09b2fc226/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Ffold-vec-store-vec_xst-longlong.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Ffold-vec-store-vec_xst-longlong.c?ref=063eba7ca73030139a3bf822ed127cf09b2fc226", "patch": "@@ -35,4 +35,4 @@ BUILD_VAR_TEST( test10, vector unsigned long long, signed long long, vector unsi\n BUILD_VAR_TEST( test11, vector unsigned long long, signed int, vector unsigned long long );\n BUILD_CST_TEST( test12,  vector unsigned long long, 12, vector unsigned long long );\n \n-/* { dg-final { scan-assembler-times {\\mstxvd2x\\M|\\mstxvx\\M|\\mstvx\\M} 12 } } */\n+/* { dg-final { scan-assembler-times {\\mstxvd2x\\M|\\mstxvx\\M|\\mstvx\\M|\\mpstxv\\M} 12 } } */"}, {"sha": "6c54873db2089020f95859fd82275f5ee88fc443", "filename": "gcc/testsuite/gcc.target/powerpc/fold-vec-store-vec_xst-short.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/063eba7ca73030139a3bf822ed127cf09b2fc226/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Ffold-vec-store-vec_xst-short.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/063eba7ca73030139a3bf822ed127cf09b2fc226/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Ffold-vec-store-vec_xst-short.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Ffold-vec-store-vec_xst-short.c?ref=063eba7ca73030139a3bf822ed127cf09b2fc226", "patch": "@@ -35,4 +35,4 @@ BUILD_VAR_TEST( test10, vector unsigned short, signed long long, vector unsigned\n BUILD_VAR_TEST( test11, vector unsigned short, signed int, vector unsigned short );\n BUILD_CST_TEST( test12, vector unsigned short, 12, vector unsigned short );\n \n-/* { dg-final { scan-assembler-times {\\mstxvw4x\\M|\\mstxvd2x\\M|\\mstxvx\\M|\\mstvx\\M} 12 } } */\n+/* { dg-final { scan-assembler-times {\\mstxvw4x\\M|\\mstxvd2x\\M|\\mstxvx\\M|\\mstvx\\M|\\mpstxv\\M} 12 } } */"}, {"sha": "26aadbcbc6322765c44ea8cd12a665cd09c3ecbd", "filename": "gcc/testsuite/gcc.target/powerpc/lvsl-lvsr.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/063eba7ca73030139a3bf822ed127cf09b2fc226/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Flvsl-lvsr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/063eba7ca73030139a3bf822ed127cf09b2fc226/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Flvsl-lvsr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Flvsl-lvsr.c?ref=063eba7ca73030139a3bf822ed127cf09b2fc226", "patch": "@@ -6,7 +6,7 @@\n /* { dg-options \"-O0 -Wno-deprecated\" } */\n /* { dg-final { scan-assembler-times \"lvsl\" 2 } } */\n /* { dg-final { scan-assembler-times \"lvsr\" 2 } } */\n-/* { dg-final { scan-assembler-times {\\mlxvd2x\\M|\\mlxv\\M} 2 } } */\n+/* { dg-final { scan-assembler-times {\\mlxvd2x\\M|\\mp?lxv\\M} 2 } } */\n /* { dg-final { scan-assembler-times {\\m(?:v|xx)permr?\\M} 2 } } */\n \n "}, {"sha": "bd1502bb30a9aa13ba7f9790157b5703adcff137", "filename": "gcc/testsuite/gcc.target/powerpc/pr86731-fwrapv-longlong.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/063eba7ca73030139a3bf822ed127cf09b2fc226/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fpr86731-fwrapv-longlong.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/063eba7ca73030139a3bf822ed127cf09b2fc226/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fpr86731-fwrapv-longlong.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fpr86731-fwrapv-longlong.c?ref=063eba7ca73030139a3bf822ed127cf09b2fc226", "patch": "@@ -30,5 +30,5 @@ vector signed long long splats4(void)\n \n /* { dg-final { scan-assembler-times {\\mvspltis[bhw]\\M} 0 } } */\n /* { dg-final { scan-assembler-times {\\mvsl[bhwd]\\M} 0 } } */\n-/* { dg-final { scan-assembler-times {\\mlvx\\M|\\mlxv\\M|\\mlxvd2x\\M} 2 } } */\n+/* { dg-final { scan-assembler-times {\\mp?lxv\\M|\\mlxv\\M|\\mlxvd2x\\M} 2 } } */\n "}]}