{"sha": "cf6bd6a3ef104abb96095c5d78bffed1a95896f5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2Y2YmQ2YTNlZjEwNGFiYjk2MDk1YzVkNzhiZmZlZDFhOTU4OTZmNQ==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@adacore.com", "date": "2020-05-18T10:00:31Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "derodat@adacore.com", "date": "2020-07-08T14:55:52Z"}, "message": "[Ada] ACATS 4.1R - BD10001 - Error missed\n\ngcc/ada/\n\n\t* sem_prag.adb (Process_Inline): Check for duplicate\n\tpragma+aspect Inline. Minor code cleanup.\n\t(Check_Duplicate_Pragma): Add warning for duplicate\n\tpragma [No_]Inline under -gnatwr.\n\t* sinfo.ads, sinfo.adb (Next_Rep_Item): Allow N_Null_Statement\n\twhich can appear when a pragma is rewritten.\n\t* sem_util.ads, sem_util.adb, bindo-writers.adb: Fix bad\n\tcopy/paste now flagged.\n\t* libgnat/s-mmap.ads: Remove redundant pragma Inline.", "tree": {"sha": "3bdf5eb2cd769745323888eae2338d1f32197bde", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3bdf5eb2cd769745323888eae2338d1f32197bde"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/cf6bd6a3ef104abb96095c5d78bffed1a95896f5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cf6bd6a3ef104abb96095c5d78bffed1a95896f5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cf6bd6a3ef104abb96095c5d78bffed1a95896f5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cf6bd6a3ef104abb96095c5d78bffed1a95896f5/comments", "author": {"login": "ArnaudCharlet", "id": 30291825, "node_id": "MDQ6VXNlcjMwMjkxODI1", "avatar_url": "https://avatars.githubusercontent.com/u/30291825?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ArnaudCharlet", "html_url": "https://github.com/ArnaudCharlet", "followers_url": "https://api.github.com/users/ArnaudCharlet/followers", "following_url": "https://api.github.com/users/ArnaudCharlet/following{/other_user}", "gists_url": "https://api.github.com/users/ArnaudCharlet/gists{/gist_id}", "starred_url": "https://api.github.com/users/ArnaudCharlet/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ArnaudCharlet/subscriptions", "organizations_url": "https://api.github.com/users/ArnaudCharlet/orgs", "repos_url": "https://api.github.com/users/ArnaudCharlet/repos", "events_url": "https://api.github.com/users/ArnaudCharlet/events{/privacy}", "received_events_url": "https://api.github.com/users/ArnaudCharlet/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pmderodat", "id": 758452, "node_id": "MDQ6VXNlcjc1ODQ1Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/758452?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pmderodat", "html_url": "https://github.com/pmderodat", "followers_url": "https://api.github.com/users/pmderodat/followers", "following_url": "https://api.github.com/users/pmderodat/following{/other_user}", "gists_url": "https://api.github.com/users/pmderodat/gists{/gist_id}", "starred_url": "https://api.github.com/users/pmderodat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pmderodat/subscriptions", "organizations_url": "https://api.github.com/users/pmderodat/orgs", "repos_url": "https://api.github.com/users/pmderodat/repos", "events_url": "https://api.github.com/users/pmderodat/events{/privacy}", "received_events_url": "https://api.github.com/users/pmderodat/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4b5838e086b0e38f3398268b001b936b600f2e5b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4b5838e086b0e38f3398268b001b936b600f2e5b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4b5838e086b0e38f3398268b001b936b600f2e5b"}], "stats": {"total": 44, "additions": 34, "deletions": 10}, "files": [{"sha": "88c8b25d31297ea0dd19612f59cd2bc9b6cd889b", "filename": "gcc/ada/bindo-writers.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cf6bd6a3ef104abb96095c5d78bffed1a95896f5/gcc%2Fada%2Fbindo-writers.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cf6bd6a3ef104abb96095c5d78bffed1a95896f5/gcc%2Fada%2Fbindo-writers.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fbindo-writers.adb?ref=cf6bd6a3ef104abb96095c5d78bffed1a95896f5", "patch": "@@ -1037,7 +1037,7 @@ package body Bindo.Writers is\n       --  output.\n \n       procedure Write_Components (G : Library_Graph);\n-      pragma Inline (Write_Component);\n+      pragma Inline (Write_Components);\n       --  Write all components of library graph G to standard output\n \n       procedure Write_Edges_To_Successors"}, {"sha": "305d1f877df5cc29cd4f9602646764a9fee7c585", "filename": "gcc/ada/libgnat/s-mmap.ads", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cf6bd6a3ef104abb96095c5d78bffed1a95896f5/gcc%2Fada%2Flibgnat%2Fs-mmap.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cf6bd6a3ef104abb96095c5d78bffed1a95896f5/gcc%2Fada%2Flibgnat%2Fs-mmap.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fs-mmap.ads?ref=cf6bd6a3ef104abb96095c5d78bffed1a95896f5", "patch": "@@ -223,13 +223,11 @@ package System.Mmap is\n    --  (File); such accesses may cause Storage_Error to be raised.\n \n    function Data (Region : Mapped_Region) return Str_Access;\n-   pragma Inline (Data);\n    --  The data mapped in Region as requested. The result is an unconstrained\n    --  string, so you cannot use the usual 'First and 'Last attributes.\n    --  Instead, these are respectively 1 and Size.\n \n    function Data (File : Mapped_File) return Str_Access;\n-   pragma Inline (Data);\n    --  Likewise for the region contained in File\n \n    function Is_Mutable (Region : Mapped_Region) return Boolean;"}, {"sha": "db9c611915581bf36b26dc93d37a75d51662e316", "filename": "gcc/ada/sem_prag.adb", "status": "modified", "additions": 25, "deletions": 2, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cf6bd6a3ef104abb96095c5d78bffed1a95896f5/gcc%2Fada%2Fsem_prag.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cf6bd6a3ef104abb96095c5d78bffed1a95896f5/gcc%2Fada%2Fsem_prag.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_prag.adb?ref=cf6bd6a3ef104abb96095c5d78bffed1a95896f5", "patch": "@@ -5905,7 +5905,18 @@ package body Sem_Prag is\n             then\n                Error_Msg_NE (\"aspect% for & previously given#\", N, Id);\n             else\n-               Error_Msg_NE (\"pragma% for & duplicates pragma#\", N, Id);\n+               --  If -gnatwr is set, warn in case of a duplicate pragma\n+               --  [No_]Inline which is suspicious but not an error, generate\n+               --  an error for other pragmas.\n+\n+               if Nam_In (Pragma_Name (N), Name_Inline, Name_No_Inline) then\n+                  if Warn_On_Redundant_Constructs then\n+                     Error_Msg_NE\n+                       (\"?r?pragma% for & duplicates pragma#\", N, Id);\n+                  end if;\n+               else\n+                  Error_Msg_NE (\"pragma% for & duplicates pragma#\", N, Id);\n+               end if;\n             end if;\n \n             raise Pragma_Exit;\n@@ -10127,6 +10138,18 @@ package body Sem_Prag is\n                   Applies := True;\n \n                else\n+                  --  Check for RM 13.1(9.2/4): If a [...] aspect_specification\n+                  --  is given that directly specifies an aspect of an entity,\n+                  --  then it is illegal to give another [...]\n+                  --  aspect_specification that directly specifies the same\n+                  --  aspect of the entity.\n+                  --  We only check Subp directly as per \"directly specifies\"\n+                  --  above and because the case of pragma Inline is really\n+                  --  special given its pre aspect usage.\n+\n+                  Check_Duplicate_Pragma (Subp);\n+                  Record_Rep_Item (Subp, N);\n+\n                   Make_Inline (Subp);\n \n                   --  For the pragma case, climb homonym chain. This is\n@@ -10138,8 +10161,8 @@ package body Sem_Prag is\n                      while Present (Homonym (Subp))\n                        and then Scope (Homonym (Subp)) = Current_Scope\n                      loop\n-                        Make_Inline (Homonym (Subp));\n                         Subp := Homonym (Subp);\n+                        Make_Inline (Subp);\n                      end loop;\n                   end if;\n                end if;"}, {"sha": "7ec52b30c792b039b20d2e981da3e34266417a74", "filename": "gcc/ada/sem_util.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cf6bd6a3ef104abb96095c5d78bffed1a95896f5/gcc%2Fada%2Fsem_util.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cf6bd6a3ef104abb96095c5d78bffed1a95896f5/gcc%2Fada%2Fsem_util.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_util.adb?ref=cf6bd6a3ef104abb96095c5d78bffed1a95896f5", "patch": "@@ -21407,7 +21407,7 @@ package body Sem_Util is\n       --  New_Id is the corresponding new entity generated during Phase 1.\n \n       procedure Add_Pending_Itype (Assoc_Nod : Node_Id; Itype : Entity_Id);\n-      pragma Inline (Add_New_Entity);\n+      pragma Inline (Add_Pending_Itype);\n       --  Add an entry in the NCT_Pending_Itypes which maps key Assoc_Nod to\n       --  value Itype. Assoc_Nod is the associated node of an itype. Itype is\n       --  an itype."}, {"sha": "99ceec00e9a0e6dfc7ec82f2c5d10ed9774b9f89", "filename": "gcc/ada/sem_util.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cf6bd6a3ef104abb96095c5d78bffed1a95896f5/gcc%2Fada%2Fsem_util.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cf6bd6a3ef104abb96095c5d78bffed1a95896f5/gcc%2Fada%2Fsem_util.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_util.ads?ref=cf6bd6a3ef104abb96095c5d78bffed1a95896f5", "patch": "@@ -2512,7 +2512,7 @@ package Sem_Util is\n    --  with the same mode.\n \n    procedure Next_Global (Node : in out Node_Id);\n-   pragma Inline (Next_Actual);\n+   pragma Inline (Next_Global);\n    --  Next_Global (N) is equivalent to N := Next_Global (N). Note that we\n    --  inline this procedural form, but not the functional form above.\n "}, {"sha": "9199af4e6adebfb847368b4032817a277a6be259", "filename": "gcc/ada/sinfo.adb", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cf6bd6a3ef104abb96095c5d78bffed1a95896f5/gcc%2Fada%2Fsinfo.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cf6bd6a3ef104abb96095c5d78bffed1a95896f5/gcc%2Fada%2Fsinfo.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsinfo.adb?ref=cf6bd6a3ef104abb96095c5d78bffed1a95896f5", "patch": "@@ -2547,6 +2547,7 @@ package body Sinfo is\n         or else NT (N).Nkind = N_Aspect_Specification\n         or else NT (N).Nkind = N_Attribute_Definition_Clause\n         or else NT (N).Nkind = N_Enumeration_Representation_Clause\n+        or else NT (N).Nkind = N_Null_Statement\n         or else NT (N).Nkind = N_Pragma\n         or else NT (N).Nkind = N_Record_Representation_Clause);\n       return Node5 (N);\n@@ -6034,6 +6035,7 @@ package body Sinfo is\n         or else NT (N).Nkind = N_Aspect_Specification\n         or else NT (N).Nkind = N_Attribute_Definition_Clause\n         or else NT (N).Nkind = N_Enumeration_Representation_Clause\n+        or else NT (N).Nkind = N_Null_Statement\n         or else NT (N).Nkind = N_Pragma\n         or else NT (N).Nkind = N_Record_Representation_Clause);\n       Set_Node5 (N, Val); -- semantic field, no parent set"}, {"sha": "9ae8ce790bc1f1da820fbd4276de8f81ec050eb3", "filename": "gcc/ada/sinfo.ads", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cf6bd6a3ef104abb96095c5d78bffed1a95896f5/gcc%2Fada%2Fsinfo.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cf6bd6a3ef104abb96095c5d78bffed1a95896f5/gcc%2Fada%2Fsinfo.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsinfo.ads?ref=cf6bd6a3ef104abb96095c5d78bffed1a95896f5", "patch": "@@ -2081,9 +2081,9 @@ package Sinfo is\n \n    --  Next_Rep_Item (Node5-Sem)\n    --    Present in pragma nodes, attribute definition nodes, enumeration rep\n-   --    clauses, record rep clauses, aspect specification nodes. Used to link\n-   --    representation items that apply to an entity. See full description of\n-   --    First_Rep_Item field in Einfo for further details.\n+   --    clauses, record rep clauses, aspect specification and null statement\n+   --    nodes. Used to link representation items that apply to an entity. See\n+   --    full description of First_Rep_Item field in Einfo for further details.\n \n    --  Next_Use_Clause (Node3-Sem)\n    --    While use clauses are active during semantic processing, they are\n@@ -4848,6 +4848,7 @@ package Sinfo is\n \n       --  N_Null_Statement\n       --  Sloc points to NULL\n+      --  Next_Rep_Item (Node5-Sem)\n \n       ----------------\n       -- 5.1  Label --"}]}