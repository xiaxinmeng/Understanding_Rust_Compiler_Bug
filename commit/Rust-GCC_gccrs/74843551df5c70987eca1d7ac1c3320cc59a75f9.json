{"sha": "74843551df5c70987eca1d7ac1c3320cc59a75f9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzQ4NDM1NTFkZjVjNzA5ODdlY2ExZDdhYzFjMzMyMGNjNTlhNzVmOQ==", "commit": {"author": {"name": "Paolo Carlini", "email": "pcarlini@unitus.it", "date": "2003-05-02T00:14:49Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2003-05-02T00:14:49Z"}, "message": "sstream.tcc (overflow): Instead of calling str()...\n\n2003-05-01  Paolo Carlini  <pcarlini@unitus.it>\n\n\t* include/bits/sstream.tcc (overflow): Instead of calling\n\tstr(), then _M_string.reserve, thus copying the contents\n\tof the current buffer two times, just copy the latter in\n\ta temporary, then use the 'swap trick'.\n\nFrom-SVN: r66358", "tree": {"sha": "587ab455dc5c8464dd95e9b8a0d8249079ed690b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/587ab455dc5c8464dd95e9b8a0d8249079ed690b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/74843551df5c70987eca1d7ac1c3320cc59a75f9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/74843551df5c70987eca1d7ac1c3320cc59a75f9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/74843551df5c70987eca1d7ac1c3320cc59a75f9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/74843551df5c70987eca1d7ac1c3320cc59a75f9/comments", "author": null, "committer": null, "parents": [{"sha": "e70b1b7788ab76c22634d4e0e3d65ab7e55d667a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e70b1b7788ab76c22634d4e0e3d65ab7e55d667a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e70b1b7788ab76c22634d4e0e3d65ab7e55d667a"}], "stats": {"total": 15, "additions": 13, "deletions": 2}, "files": [{"sha": "60d513755962d52e6a3f5f49d823984292dcb427", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74843551df5c70987eca1d7ac1c3320cc59a75f9/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74843551df5c70987eca1d7ac1c3320cc59a75f9/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=74843551df5c70987eca1d7ac1c3320cc59a75f9", "patch": "@@ -1,3 +1,10 @@\n+2003-05-01  Paolo Carlini  <pcarlini@unitus.it>\n+\n+\t* include/bits/sstream.tcc (overflow): Instead of calling\n+\tstr(), then _M_string.reserve, thus copying the contents\n+\tof the current buffer two times, just copy the latter in\n+\ta temporary, then use the 'swap trick'.\n+\n 2003-05-01  Paolo Carlini  <pcarlini@unitus.it>\n \n \t* include/std/std_sstream.h (str()): Revert the best of the"}, {"sha": "c09553127cc139c84a4682a257922fff6a630b48", "filename": "libstdc++-v3/include/bits/sstream.tcc", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74843551df5c70987eca1d7ac1c3320cc59a75f9/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fsstream.tcc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74843551df5c70987eca1d7ac1c3320cc59a75f9/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fsstream.tcc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fsstream.tcc?ref=74843551df5c70987eca1d7ac1c3320cc59a75f9", "patch": "@@ -100,11 +100,15 @@ namespace std\n       // Order these tests done in is unspecified by the standard.\n       if (!__testput)\n \t{\n-\t  // Force-allocate, re-sync.\n-\t  _M_string = this->str();\n \t  // In virtue of DR 169 (TC) we are allowed to grow more than\n \t  // one char. That's easy to implement thanks to the exponential\n \t  // growth policy builtin into basic_string.\n+\t  __string_type __tmp;\n+\t  __tmp.reserve(__len);\n+\t  __tmp.assign(_M_string.data(),\n+\t\t       this->_M_out_end - this->_M_out_beg);\n+\t  _M_string.swap(__tmp);\n+\t  // Just to be sure...\n \t  _M_string.reserve(__len);\n \t  _M_really_sync(const_cast<char_type*>(_M_string.data()),\n \t\t\t this->_M_in_cur - this->_M_in_beg, "}]}