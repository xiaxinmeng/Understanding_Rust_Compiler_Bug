{"sha": "ccbc3eb78e1b5a23414b3ef0ff7ec3aa811bdfb8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2NiYzNlYjc4ZTFiNWEyMzQxNGIzZWYwZmY3ZWMzYWE4MTFiZGZiOA==", "commit": {"author": {"name": "Hans-Peter Nilsson", "email": "hp@axis.com", "date": "2000-08-31T21:44:25Z"}, "committer": {"name": "Hans-Peter Nilsson", "email": "hp@gcc.gnu.org", "date": "2000-08-31T21:44:25Z"}, "message": "Add testcases and missing changelogs:\n\n2000-08-31  Hans-Peter Nilsson  <hp@axis.com>\n\n\t* testsuite/demangle-expected: Add nine tests for\n\tunderscore-after-number followed by five tests for name-signature\n\tdelimiter.\n\n2000-07-24  Hans-Peter Nilsson  <hp@axis.com>\n\n\t* cplus-dem.c (work_stuff_copy_to_from): New.\n\t(delete_non_B_K_work_stuff): New.\n\t(delete_work_stuff): New.\n\t(mop_up): Break out work_stuff destruction to delete_work_stuff.\n\t(iterate_demangle_function): New.\n\t(demangle_prefix): Call iterate_demangle_function instead of\n\tdemangle_function_name.  Leave handling of name-signature\n\t__-delimiters to iterate_demangle_function.\n\n\t* cplus-dem.c (demangle_integral_value): Strip an optional\n\tfollowing underscore cautiously.  Handle negative numbers.\n\nFrom-SVN: r36086", "tree": {"sha": "81f846729304fcce95751e7bccabb1f4219ee132", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/81f846729304fcce95751e7bccabb1f4219ee132"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ccbc3eb78e1b5a23414b3ef0ff7ec3aa811bdfb8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ccbc3eb78e1b5a23414b3ef0ff7ec3aa811bdfb8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ccbc3eb78e1b5a23414b3ef0ff7ec3aa811bdfb8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ccbc3eb78e1b5a23414b3ef0ff7ec3aa811bdfb8/comments", "author": {"login": "hpataxisdotcom", "id": 80339731, "node_id": "MDQ6VXNlcjgwMzM5NzMx", "avatar_url": "https://avatars.githubusercontent.com/u/80339731?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hpataxisdotcom", "html_url": "https://github.com/hpataxisdotcom", "followers_url": "https://api.github.com/users/hpataxisdotcom/followers", "following_url": "https://api.github.com/users/hpataxisdotcom/following{/other_user}", "gists_url": "https://api.github.com/users/hpataxisdotcom/gists{/gist_id}", "starred_url": "https://api.github.com/users/hpataxisdotcom/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hpataxisdotcom/subscriptions", "organizations_url": "https://api.github.com/users/hpataxisdotcom/orgs", "repos_url": "https://api.github.com/users/hpataxisdotcom/repos", "events_url": "https://api.github.com/users/hpataxisdotcom/events{/privacy}", "received_events_url": "https://api.github.com/users/hpataxisdotcom/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "b3e2ecc250d81a4c60d8f5733b8d6f4fd0fd8e84", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b3e2ecc250d81a4c60d8f5733b8d6f4fd0fd8e84", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b3e2ecc250d81a4c60d8f5733b8d6f4fd0fd8e84"}], "stats": {"total": 76, "additions": 76, "deletions": 0}, "files": [{"sha": "2a9b32f5ba6e7f61f216a90e1f429507c2dc5202", "filename": "libiberty/ChangeLog", "status": "modified", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ccbc3eb78e1b5a23414b3ef0ff7ec3aa811bdfb8/libiberty%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ccbc3eb78e1b5a23414b3ef0ff7ec3aa811bdfb8/libiberty%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libiberty%2FChangeLog?ref=ccbc3eb78e1b5a23414b3ef0ff7ec3aa811bdfb8", "patch": "@@ -1,3 +1,9 @@\n+2000-08-31  Hans-Peter Nilsson  <hp@axis.com>\n+\n+\t* testsuite/demangle-expected: Add nine tests for\n+\tunderscore-after-number followed by five tests for name-signature\n+\tdelimiter.\n+\n 2000-08-28  Richard Henderson  <rth@cygnus.com>\n \n \t* Makefile.in (md5.o): Depend on config.h.\n@@ -84,6 +90,20 @@\n \t* rename.c: Include config.h, unistd.h\n \t* waitpid.c: Include config.h, sys/wait.h\n \n+2000-07-24  Hans-Peter Nilsson  <hp@axis.com>\n+\n+\t* cplus-dem.c (work_stuff_copy_to_from): New.\n+\t(delete_non_B_K_work_stuff): New.\n+\t(delete_work_stuff): New.\n+\t(mop_up): Break out work_stuff partly destruction to\n+\tdelete_non_B_K_work_stuff.\n+\t(iterate_demangle_function): New.\n+\t(demangle_prefix): Call iterate_demangle_function instead of\n+\tdemangle_function_name.  Leave handling of name-signature\n+\t__-delimiters to iterate_demangle_function.\n+\t(demangle_integral_value): Strip an optional\n+\tfollowing underscore cautiously.  Handle negative numbers.\n+\n 2000-07-24  Daniel Berlin <dberlin@redhat.com>\n \n \t* cplus-dem.c (demangle_signature): Change if (GNU_DEMANGLING) to "}, {"sha": "0f947924a6290d847d00511c3af18322c36a79fd", "filename": "libiberty/testsuite/demangle-expected", "status": "modified", "additions": 56, "deletions": 0, "changes": 56, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ccbc3eb78e1b5a23414b3ef0ff7ec3aa811bdfb8/libiberty%2Ftestsuite%2Fdemangle-expected", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ccbc3eb78e1b5a23414b3ef0ff7ec3aa811bdfb8/libiberty%2Ftestsuite%2Fdemangle-expected", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libiberty%2Ftestsuite%2Fdemangle-expected?ref=ccbc3eb78e1b5a23414b3ef0ff7ec3aa811bdfb8", "patch": "@@ -2486,3 +2486,59 @@ f(Bar<21>, int)\n --format=gnu\n f__FGt3Bar1i24XY_t\n f(Bar<2>, XY_t)\n+#\n+--format=gnu\n+foo__H1Zt2TA2ZRCiZt2NA1Ui9_X01_i\n+int foo<TA<int const &, NA<9> > >(TA<int const &, NA<9> >)\n+#\n+--format=gnu\n+foo__H1Zt2TA2ZcZt2NA1Ui_20__X01_i\n+int foo<TA<char, NA<20> > >(TA<char, NA<20> >)\n+#\n+--format=gnu\n+foo__H1Zt2TA2ZiZt8N___A___1Ui_99__X01_i\n+int foo<TA<int, N___A___<99> > >(TA<int, N___A___<99> >)\n+#\n+--format=gnu\n+foo__H1Zt2TA2ZRCiZt2NA1im1_X01_i\n+int foo<TA<int const &, NA<-1> > >(TA<int const &, NA<-1> >)\n+#\n+--format=gnu\n+foo__H1Zt2TA2ZRCiZt2NA1im9_X01_i\n+int foo<TA<int const &, NA<-9> > >(TA<int const &, NA<-9> >)\n+#\n+--format=gnu\n+foo__H1Zt2TA2ZcZt2NA1i_m20__X01_i\n+int foo<TA<char, NA<-20> > >(TA<char, NA<-20> >)\n+#\n+--format=gnu\n+foo__H1Zt2TA2ZcZt2NA1im1_X01_i\n+int foo<TA<char, NA<-1> > >(TA<char, NA<-1> >)\n+#\n+--format=gnu\n+foo__H1Zt2TA2ZiZt4N__A1im9_X01_i\n+int foo<TA<int, N__A<-9> > >(TA<int, N__A<-9> >)\n+#\n+--format=gnu\n+foo__H1Zt2TA2ZiZt4N__A1i_m99__X01_i\n+int foo<TA<int, N__A<-99> > >(TA<int, N__A<-99> >)\n+#\n+--format=gnu\n+__opi__t2TA2ZiZt4N__A1i9\n+TA<int, N__A<9> >::operator int(void)\n+#\n+--format=gnu\n+__opi__t2TA2ZiZt8N___A___1i_m99_\n+TA<int, N___A___<-99> >::operator int(void)\n+#\n+--format=gnu\n+foo___bar__baz_____H1Zt2TA2ZiZt8N___A___1i_99__X01_i\n+int foo___bar__baz___<TA<int, N___A___<99> > >(TA<int, N___A___<99> >)\n+#\n+--format=gnu\n+foo__bar___foobar_____t2TA2ZiZt8N___A___1i_m99_\n+TA<int, N___A___<-99> >::foo__bar___foobar___(void)\n+#\n+--format=gnu\n+foo__bar___foobar_____t2TA2ZiZt4N__A1i9\n+TA<int, N__A<9> >::foo__bar___foobar___(void)"}]}