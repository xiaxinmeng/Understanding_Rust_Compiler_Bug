{"sha": "c0fe6bce2a8c35e997f45b0a674ab2058ba50ae0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzBmZTZiY2UyYThjMzVlOTk3ZjQ1YjBhNjc0YWIyMDU4YmE1MGFlMA==", "commit": {"author": {"name": "Richard Sandiford", "email": "richard.sandiford@arm.com", "date": "2019-07-29T08:47:20Z"}, "committer": {"name": "Richard Sandiford", "email": "rsandifo@gcc.gnu.org", "date": "2019-07-29T08:47:20Z"}, "message": "Don't run DSE at -Og\n\nThis patch stops gimple and rtl DSE from running by default at -Og.\nThe idea is both to improve compile time and to stop us from deleting\nstores that we can't track in debug info.\n\nWe could rein this back in future for stores to local variables\nwith is_gimple_reg_type, but at the moment we don't have any\ninfrastructure for switching between binds to specific values\nand binds to evolving memory locations.  Even then, location\ntracking only works for direct references to the variables, and doesn't\nfor example help with printing dereferenced pointers (see the next patch\nin the series for an example).\n\nI'm also not sure that DSE is important enough for -Og to justify the\ncompile time cost --  especially in the case of RTL DSE, which is pretty\nexpensive.\n\n2019-07-29  Richard Sandiford  <richard.sandiford@arm.com>\n\ngcc/\n\t* common.opt (Og): Change the initial value of flag_dse to 0.\n\t* opts.c (default_options_table): Move OPT_ftree_dse from\n\tOPT_LEVELS_1_PLUS to OPT_LEVELS_1_PLUS_NOT_DEBUG.  Also add\n\tOPT_fdse to OPT_LEVELS_1_PLUS_NOT_DEBUG.  Put the OPT_ftree_pta\n\tentry before the OPT_ftree_sra entry.\n\t* doc/invoke.texi (Og): Add -fdse and -ftree-dse to the list\n\tof flags disabled by Og.\n\ngcc/testsuite/\n\t* c-c++-common/guality/Og-global-dse-1.c: New test.\n\nFrom-SVN: r273871", "tree": {"sha": "de568bd7c602e0db7f412c85bcc26411c4eb7ac2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/de568bd7c602e0db7f412c85bcc26411c4eb7ac2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c0fe6bce2a8c35e997f45b0a674ab2058ba50ae0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c0fe6bce2a8c35e997f45b0a674ab2058ba50ae0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c0fe6bce2a8c35e997f45b0a674ab2058ba50ae0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c0fe6bce2a8c35e997f45b0a674ab2058ba50ae0/comments", "author": {"login": "rsandifo-arm", "id": 28043039, "node_id": "MDQ6VXNlcjI4MDQzMDM5", "avatar_url": "https://avatars.githubusercontent.com/u/28043039?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rsandifo-arm", "html_url": "https://github.com/rsandifo-arm", "followers_url": "https://api.github.com/users/rsandifo-arm/followers", "following_url": "https://api.github.com/users/rsandifo-arm/following{/other_user}", "gists_url": "https://api.github.com/users/rsandifo-arm/gists{/gist_id}", "starred_url": "https://api.github.com/users/rsandifo-arm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rsandifo-arm/subscriptions", "organizations_url": "https://api.github.com/users/rsandifo-arm/orgs", "repos_url": "https://api.github.com/users/rsandifo-arm/repos", "events_url": "https://api.github.com/users/rsandifo-arm/events{/privacy}", "received_events_url": "https://api.github.com/users/rsandifo-arm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "ec8ac265ff21fb379ac072848561a91e4990c47f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ec8ac265ff21fb379ac072848561a91e4990c47f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ec8ac265ff21fb379ac072848561a91e4990c47f"}], "stats": {"total": 42, "additions": 37, "deletions": 5}, "files": [{"sha": "3e84bafe8bdb701cf44b6321d595e5e5a0526d31", "filename": "gcc/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c0fe6bce2a8c35e997f45b0a674ab2058ba50ae0/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c0fe6bce2a8c35e997f45b0a674ab2058ba50ae0/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=c0fe6bce2a8c35e997f45b0a674ab2058ba50ae0", "patch": "@@ -1,3 +1,13 @@\n+2019-07-29  Richard Sandiford  <richard.sandiford@arm.com>\n+\n+\t* common.opt (Og): Change the initial value of flag_dse to 0.\n+\t* opts.c (default_options_table): Move OPT_ftree_dse from\n+\tOPT_LEVELS_1_PLUS to OPT_LEVELS_1_PLUS_NOT_DEBUG.  Also add\n+\tOPT_fdse to OPT_LEVELS_1_PLUS_NOT_DEBUG.  Put the OPT_ftree_pta\n+\tentry before the OPT_ftree_sra entry.\n+\t* doc/invoke.texi (Og): Add -fdse and -ftree-dse to the list\n+\tof flags disabled by Og.\n+\n 2019-07-29  Richard Sandiford  <richard.sandiford@arm.com>\n \n \t* tree-cfg.c (execute_fixup_cfg): Don't delete stores to write-only"}, {"sha": "c16053857122d63d1d4c339789b69e13f21e2e14", "filename": "gcc/common.opt", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c0fe6bce2a8c35e997f45b0a674ab2058ba50ae0/gcc%2Fcommon.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c0fe6bce2a8c35e997f45b0a674ab2058ba50ae0/gcc%2Fcommon.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcommon.opt?ref=c0fe6bce2a8c35e997f45b0a674ab2058ba50ae0", "patch": "@@ -1955,7 +1955,7 @@ Common Var(flag_dce) Init(1) Optimization\n Use the RTL dead code elimination pass.\n \n fdse\n-Common Var(flag_dse) Init(1) Optimization\n+Common Var(flag_dse) Init(0) Optimization\n Use the RTL dead store elimination pass.\n \n freschedule-modulo-scheduled-loops"}, {"sha": "d1dfa2a5034764d126f5b865bb5ffd505c9dce33", "filename": "gcc/doc/invoke.texi", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c0fe6bce2a8c35e997f45b0a674ab2058ba50ae0/gcc%2Fdoc%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c0fe6bce2a8c35e997f45b0a674ab2058ba50ae0/gcc%2Fdoc%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finvoke.texi?ref=c0fe6bce2a8c35e997f45b0a674ab2058ba50ae0", "patch": "@@ -8423,10 +8423,10 @@ no effect.  Otherwise @option{-Og} enables all @option{-O1}\n optimization flags except for those that may interfere with debugging:\n \n @gccoptlist{-fbranch-count-reg  -fdelayed-branch @gol\n--fif-conversion  -fif-conversion2  @gol\n+-fdse  -fif-conversion  -fif-conversion2  @gol\n -finline-functions-called-once @gol\n -fmove-loop-invariants  -fssa-phiopt @gol\n--ftree-bit-ccp  -ftree-pta  -ftree-sra}\n+-ftree-bit-ccp  -ftree-dse  -ftree-pta  -ftree-sra}\n \n @end table\n "}, {"sha": "28142cef044592439ed10323cb5bfb0bd48cf6aa", "filename": "gcc/opts.c", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c0fe6bce2a8c35e997f45b0a674ab2058ba50ae0/gcc%2Fopts.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c0fe6bce2a8c35e997f45b0a674ab2058ba50ae0/gcc%2Fopts.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fopts.c?ref=c0fe6bce2a8c35e997f45b0a674ab2058ba50ae0", "patch": "@@ -469,7 +469,6 @@ static const struct default_options default_options_table[] =\n     { OPT_LEVELS_1_PLUS, OPT_ftree_copy_prop, NULL, 1 },\n     { OPT_LEVELS_1_PLUS, OPT_ftree_dce, NULL, 1 },\n     { OPT_LEVELS_1_PLUS, OPT_ftree_dominator_opts, NULL, 1 },\n-    { OPT_LEVELS_1_PLUS, OPT_ftree_dse, NULL, 1 },\n     { OPT_LEVELS_1_PLUS, OPT_ftree_fre, NULL, 1 },\n     { OPT_LEVELS_1_PLUS, OPT_ftree_sink, NULL, 1 },\n     { OPT_LEVELS_1_PLUS, OPT_ftree_slsr, NULL, 1 },\n@@ -480,14 +479,16 @@ static const struct default_options default_options_table[] =\n #if DELAY_SLOTS\n     { OPT_LEVELS_1_PLUS_NOT_DEBUG, OPT_fdelayed_branch, NULL, 1 },\n #endif\n+    { OPT_LEVELS_1_PLUS_NOT_DEBUG, OPT_fdse, NULL, 1 },\n     { OPT_LEVELS_1_PLUS_NOT_DEBUG, OPT_fif_conversion, NULL, 1 },\n     { OPT_LEVELS_1_PLUS_NOT_DEBUG, OPT_fif_conversion2, NULL, 1 },\n     { OPT_LEVELS_1_PLUS_NOT_DEBUG, OPT_finline_functions_called_once, NULL, 1 },\n     { OPT_LEVELS_1_PLUS_NOT_DEBUG, OPT_fmove_loop_invariants, NULL, 1 },\n     { OPT_LEVELS_1_PLUS_NOT_DEBUG, OPT_fssa_phiopt, NULL, 1 },\n     { OPT_LEVELS_1_PLUS_NOT_DEBUG, OPT_ftree_bit_ccp, NULL, 1 },\n-    { OPT_LEVELS_1_PLUS_NOT_DEBUG, OPT_ftree_sra, NULL, 1 },\n+    { OPT_LEVELS_1_PLUS_NOT_DEBUG, OPT_ftree_dse, NULL, 1 },\n     { OPT_LEVELS_1_PLUS_NOT_DEBUG, OPT_ftree_pta, NULL, 1 },\n+    { OPT_LEVELS_1_PLUS_NOT_DEBUG, OPT_ftree_sra, NULL, 1 },\n \n     /* -O2 and -Os optimizations.  */\n     { OPT_LEVELS_2_PLUS, OPT_fcaller_saves, NULL, 1 },"}, {"sha": "6dab451530528f4c51bac3ea6ed07888b017c02f", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c0fe6bce2a8c35e997f45b0a674ab2058ba50ae0/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c0fe6bce2a8c35e997f45b0a674ab2058ba50ae0/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=c0fe6bce2a8c35e997f45b0a674ab2058ba50ae0", "patch": "@@ -1,3 +1,7 @@\n+2019-07-29  Richard Sandiford  <richard.sandiford@arm.com>\n+\n+\t* c-c++-common/guality/Og-global-dse-1.c: New test.\n+\n 2019-07-29  Richard Sandiford  <richard.sandiford@arm.com>\n \n \t* c-c++-common/guality/Og-static-wo-1.c: New test."}, {"sha": "3d4b4e60e15fe425d93d6b45b78f6211faa48b62", "filename": "gcc/testsuite/c-c++-common/guality/Og-global-dse-1.c", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c0fe6bce2a8c35e997f45b0a674ab2058ba50ae0/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fguality%2FOg-global-dse-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c0fe6bce2a8c35e997f45b0a674ab2058ba50ae0/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fguality%2FOg-global-dse-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fguality%2FOg-global-dse-1.c?ref=c0fe6bce2a8c35e997f45b0a674ab2058ba50ae0", "patch": "@@ -0,0 +1,17 @@\n+/* { dg-do run } */\n+/* { dg-options \"-g\" } */\n+\n+struct s { int i, j; };\n+struct s gs1, gs2 = { 3, 4 };\n+\n+void __attribute__((noipa)) consume (void) {};\n+\n+int\n+main (void)\n+{\n+  gs1.i = 1;\n+  gs1.j = 2;\t/* { dg-final { gdb-test . \"gs1.i\" \"1\" } } */\n+  gs1 = gs2;\t/* { dg-final { gdb-test . \"gs1.j\" \"2\" } } */\n+  consume ();\t/* { dg-final { gdb-test . \"gs1.i\" \"3\" } } */\n+  return 0;\t/* { dg-final { gdb-test . \"gs1.j\" \"4\" } } */\n+}"}]}