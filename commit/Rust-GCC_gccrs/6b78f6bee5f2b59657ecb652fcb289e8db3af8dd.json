{"sha": "6b78f6bee5f2b59657ecb652fcb289e8db3af8dd", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmI3OGY2YmVlNWYyYjU5NjU3ZWNiNjUyZmNiMjg5ZThkYjNhZjhkZA==", "commit": {"author": {"name": "Andreas Krebbel", "email": "krebbel1@de.ibm.com", "date": "2005-01-11T10:15:32Z"}, "committer": {"name": "Ulrich Weigand", "email": "uweigand@gcc.gnu.org", "date": "2005-01-11T10:15:32Z"}, "message": "s390.c (override_options): Return error if -mbackchain, -mpacked-stack and -mhard-float are used together.\n\n2005-01-11  Andreas Krebbel  <krebbel1@de.ibm.com>\n\n\t* config/s390/s390.c (override_options): Return error if\n\t-mbackchain, -mpacked-stack and -mhard-float are used together.\n\t(s390_va_start): Remove the backchain && packed-stack special case.\n\t(s390_gimplify_va_arg): Likewise.\n\t* doc/invoke.texi: Remove the ABI incompatibility note.\n\nFrom-SVN: r93182", "tree": {"sha": "0162f7a0afe6dc1ad13cacd2f97988fe2c5b7b53", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0162f7a0afe6dc1ad13cacd2f97988fe2c5b7b53"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6b78f6bee5f2b59657ecb652fcb289e8db3af8dd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6b78f6bee5f2b59657ecb652fcb289e8db3af8dd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6b78f6bee5f2b59657ecb652fcb289e8db3af8dd", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6b78f6bee5f2b59657ecb652fcb289e8db3af8dd/comments", "author": null, "committer": null, "parents": [{"sha": "66480e9146cbc7bf9706d396c0f54fbb9d48adeb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/66480e9146cbc7bf9706d396c0f54fbb9d48adeb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/66480e9146cbc7bf9706d396c0f54fbb9d48adeb"}], "stats": {"total": 43, "additions": 24, "deletions": 19}, "files": [{"sha": "c10fefa4dcc805cfa8569c7051c764ad447a99ac", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6b78f6bee5f2b59657ecb652fcb289e8db3af8dd/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6b78f6bee5f2b59657ecb652fcb289e8db3af8dd/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=6b78f6bee5f2b59657ecb652fcb289e8db3af8dd", "patch": "@@ -1,3 +1,11 @@\n+2005-01-11  Andreas Krebbel  <krebbel1@de.ibm.com>\n+\n+\t* config/s390/s390.c (override_options): Return error if\n+\t-mbackchain, -mpacked-stack and -mhard-float are used together.\n+\t(s390_va_start): Remove the backchain && packed-stack special case.\n+\t(s390_gimplify_va_arg): Likewise.\n+\t* doc/invoke.texi: Remove the ABI incompatibility note.\n+\n 2005-01-11  Andreas Krebbel  <krebbel1@de.ibm.com>\n \n \t* config/s390/s390.c (struct s390_frame_layout): Remove "}, {"sha": "92ec196699efd5d86dedeefd5711312476ccdcb6", "filename": "gcc/config/s390/s390.c", "status": "modified", "additions": 10, "deletions": 15, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6b78f6bee5f2b59657ecb652fcb289e8db3af8dd/gcc%2Fconfig%2Fs390%2Fs390.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6b78f6bee5f2b59657ecb652fcb289e8db3af8dd/gcc%2Fconfig%2Fs390%2Fs390.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fs390%2Fs390.c?ref=6b78f6bee5f2b59657ecb652fcb289e8db3af8dd", "patch": "@@ -1424,6 +1424,10 @@ override_options (void)\n     s390_cost = &z900_cost;\n \n \n+  if (TARGET_BACKCHAIN && TARGET_PACKED_STACK && TARGET_HARD_FLOAT)\n+    error (\"-mbackchain -mpacked-stack -mhard-float are not supported \"\n+\t   \"in combination.\");\n+\n   if (s390_warn_framesize_string)\n     {\n       if (sscanf (s390_warn_framesize_string, HOST_WIDE_INT_PRINT_DEC,\n@@ -7711,15 +7715,9 @@ s390_va_start (tree valist, rtx nextarg ATTRIBUTE_UNUSED)\n \n   /* Find the register save area.  */\n   t = make_tree (TREE_TYPE (sav), return_address_pointer_rtx);\n-  if (TARGET_BACKCHAIN && TARGET_PACKED_STACK) /* kernel stack layout */\n-    t = build (PLUS_EXPR, TREE_TYPE (sav), t,\n-\t       build_int_cst (NULL_TREE,\n-\t\t\t      -(RETURN_REGNUM - 2) * UNITS_PER_WORD\n-\t\t\t      - (TARGET_64BIT ? 4 : 2) * 8));\n-  else\n-    t = build (PLUS_EXPR, TREE_TYPE (sav), t,\n-\t       build_int_cst (NULL_TREE, -RETURN_REGNUM * UNITS_PER_WORD));\n-\n+  t = build (PLUS_EXPR, TREE_TYPE (sav), t,\n+\t     build_int_cst (NULL_TREE, -RETURN_REGNUM * UNITS_PER_WORD));\n+  \n   t = build (MODIFY_EXPR, TREE_TYPE (sav), sav, t);\n   TREE_SIDE_EFFECTS (t) = 1;\n   expand_expr (t, const0_rtx, VOIDmode, EXPAND_NORMAL);\n@@ -7787,8 +7785,7 @@ s390_gimplify_va_arg (tree valist, tree type, tree *pre_p,\n       /* kernel stack layout on 31 bit: It is assumed here that no padding\n \t will be added by s390_frame_info because for va_args always an even\n \t number of gprs has to be saved r15-r2 = 14 regs.  */\n-      sav_ofs = ((TARGET_BACKCHAIN && TARGET_PACKED_STACK) ?\n-\t\t (TARGET_64BIT ? 4 : 2) * 8 : 2 * UNITS_PER_WORD);\n+      sav_ofs = 2 * UNITS_PER_WORD;\n       sav_scale = UNITS_PER_WORD;\n       size = UNITS_PER_WORD;\n       max_reg = 4;\n@@ -7805,8 +7802,7 @@ s390_gimplify_va_arg (tree valist, tree type, tree *pre_p,\n       indirect_p = 0;\n       reg = fpr;\n       n_reg = 1;\n-      sav_ofs = ((TARGET_BACKCHAIN && TARGET_PACKED_STACK) ?\n-\t\t 0 : 16 * UNITS_PER_WORD);\n+      sav_ofs = 16 * UNITS_PER_WORD;\n       sav_scale = 8;\n       /* TARGET_64BIT has up to 4 parameter in fprs */\n       max_reg = TARGET_64BIT ? 3 : 1;\n@@ -7827,8 +7823,7 @@ s390_gimplify_va_arg (tree valist, tree type, tree *pre_p,\n       /* kernel stack layout on 31 bit: It is assumed here that no padding\n \t will be added by s390_frame_info because for va_args always an even\n \t number of gprs has to be saved r15-r2 = 14 regs.  */\n-      sav_ofs = ((TARGET_BACKCHAIN && TARGET_PACKED_STACK) ? \n-\t\t (TARGET_64BIT ? 4 : 2) * 8 : 2 * UNITS_PER_WORD);\n+      sav_ofs = 2 * UNITS_PER_WORD;\n \n       if (size < UNITS_PER_WORD)\n \tsav_ofs += UNITS_PER_WORD - size;"}, {"sha": "9de9b8421e408a6b2e76d1c21aaf0834ed662c4b", "filename": "gcc/doc/invoke.texi", "status": "modified", "additions": 6, "deletions": 4, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6b78f6bee5f2b59657ecb652fcb289e8db3af8dd/gcc%2Fdoc%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6b78f6bee5f2b59657ecb652fcb289e8db3af8dd/gcc%2Fdoc%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finvoke.texi?ref=6b78f6bee5f2b59657ecb652fcb289e8db3af8dd", "patch": "@@ -10892,8 +10892,9 @@ save area.\n In general, code compiled with @option{-mbackchain} is call-compatible with\n code compiled with @option{-mmo-backchain}; however, use of the backchain\n for debugging purposes usually requires that the whole binary is built with\n-@option{-mbackchain}.  Note that the combination of @option{-mbackchain} and\n-@option{-mpacked-stack} generates code that is not ABI-compatible.\n+@option{-mbackchain}.  Note that the combination of @option{-mbackchain},\n+@option{-mpacked-stack} and @option{-mhard-float} is not supported.  In order\n+to build a linux kernel use @option{-msoft-float}.\n \n The default is to not maintain the backchain.\n \n@@ -10917,8 +10918,9 @@ As long as the stack frame backchain is not used, code generated with\n S/390 or zSeries generated code that uses the stack frame backchain at run\n time, not just for debugging purposes.  Such code is not call-compatible\n with code compiled with @option{-mpacked-stack}.  Also, note that the\n-combination of @option{-mbackchain} and @option{-mpacked-stack} generates code\n-that is not ABI-compatible.\n+combination of @option{-mbackchain},\n+@option{-mpacked-stack} and @option{-mhard-float} is not supported.  In order\n+to build a linux kernel use @option{-msoft-float}.\n \n The default is to not use the packed stack layout.\n "}]}