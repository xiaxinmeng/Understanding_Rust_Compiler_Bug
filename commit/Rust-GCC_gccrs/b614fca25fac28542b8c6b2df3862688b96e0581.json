{"sha": "b614fca25fac28542b8c6b2df3862688b96e0581", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjYxNGZjYTI1ZmFjMjg1NDJiOGM2YjJkZjM4NjI2ODhiOTZlMDU4MQ==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2019-06-21T11:10:39Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2019-06-21T11:10:39Z"}, "message": "re PR tree-optimization/90913 (ICE in maybe_gen_insn, at optabs.c:7341 since r272239)\n\n2019-06-21  Richard Biener  <rguenther@suse.de>\n\n\tPR tree-optimization/90913\n\t* tree-vect-loop-manip.c (vect_loop_versioning): Do not re-use\n\tthe scalar variant of if-conversion versioning.\n\n\t* gfortran.dg/vect/pr90913.f90: New testcase.\n\nFrom-SVN: r272545", "tree": {"sha": "9ec3e5ea0e446cb2f85234f12ac00415409b28be", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9ec3e5ea0e446cb2f85234f12ac00415409b28be"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b614fca25fac28542b8c6b2df3862688b96e0581", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b614fca25fac28542b8c6b2df3862688b96e0581", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b614fca25fac28542b8c6b2df3862688b96e0581", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b614fca25fac28542b8c6b2df3862688b96e0581/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "1612b1febdd5b6b6ad17c96c980a218bfd40c025", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1612b1febdd5b6b6ad17c96c980a218bfd40c025", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1612b1febdd5b6b6ad17c96c980a218bfd40c025"}], "stats": {"total": 40, "additions": 38, "deletions": 2}, "files": [{"sha": "0c75a0f687ecb5b8833b05d64eb9efacd046e1aa", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b614fca25fac28542b8c6b2df3862688b96e0581/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b614fca25fac28542b8c6b2df3862688b96e0581/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=b614fca25fac28542b8c6b2df3862688b96e0581", "patch": "@@ -1,3 +1,9 @@\n+2019-06-21  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/90913\n+\t* tree-vect-loop-manip.c (vect_loop_versioning): Do not re-use\n+\tthe scalar variant of if-conversion versioning.\n+\n 2019-06-21  Jakub Jelinek  <jakub@redhat.com>\n \n \t* omp-low.c (lower_rec_simd_input_clauses): Add rvar2 argument,"}, {"sha": "8181bcd752eeb5811257a2a0460996077a9d6711", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b614fca25fac28542b8c6b2df3862688b96e0581/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b614fca25fac28542b8c6b2df3862688b96e0581/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=b614fca25fac28542b8c6b2df3862688b96e0581", "patch": "@@ -1,3 +1,8 @@\n+2019-06-21  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/90913\n+\t* gfortran.dg/vect/pr90913.f90: New testcase.\n+\n 2019-06-21  Jakub Jelinek  <jakub@redhat.com>\n \n \t* gcc.dg/vect/vect-simd-12.c: New test."}, {"sha": "d0f225159ccc67feb707bf0568fe7a006c1e0dd1", "filename": "gcc/testsuite/gfortran.dg/vect/pr90913.f90", "status": "added", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b614fca25fac28542b8c6b2df3862688b96e0581/gcc%2Ftestsuite%2Fgfortran.dg%2Fvect%2Fpr90913.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b614fca25fac28542b8c6b2df3862688b96e0581/gcc%2Ftestsuite%2Fgfortran.dg%2Fvect%2Fpr90913.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fvect%2Fpr90913.f90?ref=b614fca25fac28542b8c6b2df3862688b96e0581", "patch": "@@ -0,0 +1,22 @@\n+! { dg-do compile }\n+! { dg-options \"-O3 -ffast-math\" }\n+! { dg-additional-options \"-mavx -mveclibabi=svml\" { target i?86-*-* x86_64-*-* } }\n+subroutine foo (a, b, c, d, e, f, g, h, k, l)\n+  implicit none\n+  integer :: d, e, f, g, i, j\n+  real :: a, b(5,6), c(6), h(6,10,5), k(5,10,2), l(10,5), m, n, o\n+  do i=1,5\n+    do j=1,6\n+      m=l(f,g)*log(c(j))\n+      if (m<2) then\n+        if (m<-2) then\n+          h(j,f,g)=n\n+        else\n+          h(j,f,g)=o\n+        endif\n+      endif\n+      b(i,j)=a+k(i,d,e)+k(i,1,e)**h(j,f,g)\n+    enddo\n+  enddo\n+  write(*,'()') \n+end"}, {"sha": "c5cabc8633b6d3e293046256d284366f491672b1", "filename": "gcc/tree-vect-loop-manip.c", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b614fca25fac28542b8c6b2df3862688b96e0581/gcc%2Ftree-vect-loop-manip.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b614fca25fac28542b8c6b2df3862688b96e0581/gcc%2Ftree-vect-loop-manip.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vect-loop-manip.c?ref=b614fca25fac28542b8c6b2df3862688b96e0581", "patch": "@@ -3095,9 +3095,12 @@ vect_loop_versioning (loop_vec_info loop_vinfo,\n     }\n \n   /* Apply versioning.  If there is already a scalar version created by\n-     if-conversion re-use that.  */\n+     if-conversion re-use that.  Note we cannot re-use the copy of\n+     an if-converted outer-loop when vectorizing the inner loop only.  */\n   gcond *cond;\n-  if (gimple *call = vect_loop_vectorized_call (loop_to_version, &cond))\n+  gimple *call;\n+  if ((!loop_to_version->inner || loop == loop_to_version)\n+      && (call = vect_loop_vectorized_call (loop_to_version, &cond)))\n     {\n       gcc_assert (scalar_loop);\n       condition_bb = gimple_bb (cond);"}]}