{"sha": "dfe1a9168c98729f4e952c2c78d78eee6251e467", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGZlMWE5MTY4Yzk4NzI5ZjRlOTUyYzJjNzhkNzhlZWU2MjUxZTQ2Nw==", "commit": {"author": {"name": "Doug Evans", "email": "dje@gnu.org", "date": "1994-02-08T15:13:41Z"}, "committer": {"name": "Doug Evans", "email": "dje@gnu.org", "date": "1994-02-08T15:13:41Z"}, "message": "(open_dump_file): New function.\n\n(compile_file): Open dump files with it.  Remove dump_base_name_length.\n\nFrom-SVN: r6498", "tree": {"sha": "b8396e490c622647c345ef119c743123800e9d9e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b8396e490c622647c345ef119c743123800e9d9e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/dfe1a9168c98729f4e952c2c78d78eee6251e467", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dfe1a9168c98729f4e952c2c78d78eee6251e467", "html_url": "https://github.com/Rust-GCC/gccrs/commit/dfe1a9168c98729f4e952c2c78d78eee6251e467", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dfe1a9168c98729f4e952c2c78d78eee6251e467/comments", "author": null, "committer": null, "parents": [{"sha": "18b9ca6f2cba789ef2e08d3f00c73673468bc859", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/18b9ca6f2cba789ef2e08d3f00c73673468bc859", "html_url": "https://github.com/Rust-GCC/gccrs/commit/18b9ca6f2cba789ef2e08d3f00c73673468bc859"}], "stats": {"total": 147, "additions": 32, "deletions": 115}, "files": [{"sha": "a127406eab3060133291790bc399e87bfc121fb8", "filename": "gcc/toplev.c", "status": "modified", "additions": 32, "deletions": 115, "changes": 147, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dfe1a9168c98729f4e952c2c78d78eee6251e467/gcc%2Ftoplev.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dfe1a9168c98729f4e952c2c78d78eee6251e467/gcc%2Ftoplev.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftoplev.c?ref=dfe1a9168c98729f4e952c2c78d78eee6251e467", "patch": "@@ -1846,6 +1846,23 @@ output_lang_identify (asm_out_file)\n   ASM_OUTPUT_LABEL (asm_out_file, s);\n }\n \n+/* Routine to open a dump file.  */\n+static FILE *\n+open_dump_file (base_name, suffix)\n+     char *base_name;\n+     char *suffix;\n+{\n+  FILE *f;\n+  char *dumpname = (char *) alloca (strlen (base_name) + strlen (suffix) + 1);\n+\n+  strcpy (dumpname, base_name);\n+  strcat (dumpname, suffix);\n+  f = fopen (dumpname, \"w\");\n+  if (f == 0)\n+    pfatal_with_name (dumpname);\n+  return f;\n+}\n+\n /* Compile an entire file of output from cpp, named NAME.\n    Write a file of assembly output and various debugging dumps.  */\n \n@@ -1855,13 +1872,11 @@ compile_file (name)\n {\n   tree globals;\n   int start_time;\n-  int dump_base_name_length;\n \n   int name_specified = name != 0;\n \n   if (dump_base_name == 0)\n     dump_base_name = name ? name : \"gccdump\";\n-  dump_base_name_length = strlen (dump_base_name);\n \n   parse_time = 0;\n   varconst_time = 0;\n@@ -1932,159 +1947,61 @@ compile_file (name)\n \n   /* If rtl dump desired, open the output file.  */\n   if (rtl_dump)\n-    {\n-      register char *dumpname = (char *) xmalloc (dump_base_name_length + 6);\n-      strcpy (dumpname, dump_base_name);\n-      strcat (dumpname, \".rtl\");\n-      rtl_dump_file = fopen (dumpname, \"w\");\n-      if (rtl_dump_file == 0)\n-\tpfatal_with_name (dumpname);\n-    }\n+    rtl_dump_file = open_dump_file (dump_base_name, \".rtl\");\n \n   /* If jump_opt dump desired, open the output file.  */\n   if (jump_opt_dump)\n-    {\n-      register char *dumpname = (char *) xmalloc (dump_base_name_length + 6);\n-      strcpy (dumpname, dump_base_name);\n-      strcat (dumpname, \".jump\");\n-      jump_opt_dump_file = fopen (dumpname, \"w\");\n-      if (jump_opt_dump_file == 0)\n-\tpfatal_with_name (dumpname);\n-    }\n+    jump_opt_dump_file = open_dump_file (dump_base_name, \".jump\");\n \n   /* If cse dump desired, open the output file.  */\n   if (cse_dump)\n-    {\n-      register char *dumpname = (char *) xmalloc (dump_base_name_length + 6);\n-      strcpy (dumpname, dump_base_name);\n-      strcat (dumpname, \".cse\");\n-      cse_dump_file = fopen (dumpname, \"w\");\n-      if (cse_dump_file == 0)\n-\tpfatal_with_name (dumpname);\n-    }\n+    cse_dump_file = open_dump_file (dump_base_name, \".cse\");\n \n   /* If loop dump desired, open the output file.  */\n   if (loop_dump)\n-    {\n-      register char *dumpname = (char *) xmalloc (dump_base_name_length + 6);\n-      strcpy (dumpname, dump_base_name);\n-      strcat (dumpname, \".loop\");\n-      loop_dump_file = fopen (dumpname, \"w\");\n-      if (loop_dump_file == 0)\n-\tpfatal_with_name (dumpname);\n-    }\n+    loop_dump_file = open_dump_file (dump_base_name, \".loop\");\n \n   /* If cse2 dump desired, open the output file.  */\n   if (cse2_dump)\n-    {\n-      register char *dumpname = (char *) xmalloc (dump_base_name_length + 6);\n-      strcpy (dumpname, dump_base_name);\n-      strcat (dumpname, \".cse2\");\n-      cse2_dump_file = fopen (dumpname, \"w\");\n-      if (cse2_dump_file == 0)\n-\tpfatal_with_name (dumpname);\n-    }\n+    cse2_dump_file = open_dump_file (dump_base_name, \".cse2\");\n \n   /* If flow dump desired, open the output file.  */\n   if (flow_dump)\n-    {\n-      register char *dumpname = (char *) xmalloc (dump_base_name_length + 6);\n-      strcpy (dumpname, dump_base_name);\n-      strcat (dumpname, \".flow\");\n-      flow_dump_file = fopen (dumpname, \"w\");\n-      if (flow_dump_file == 0)\n-\tpfatal_with_name (dumpname);\n-    }\n+    flow_dump_file = open_dump_file (dump_base_name, \".flow\");\n \n   /* If combine dump desired, open the output file.  */\n   if (combine_dump)\n-    {\n-      register char *dumpname = (char *) xmalloc (dump_base_name_length + 10);\n-      strcpy (dumpname, dump_base_name);\n-      strcat (dumpname, \".combine\");\n-      combine_dump_file = fopen (dumpname, \"w\");\n-      if (combine_dump_file == 0)\n-\tpfatal_with_name (dumpname);\n-    }\n+    combine_dump_file = open_dump_file (dump_base_name, \".combine\");\n \n   /* If scheduling dump desired, open the output file.  */\n   if (sched_dump)\n-    {\n-      register char *dumpname = (char *) xmalloc (dump_base_name_length + 7);\n-      strcpy (dumpname, dump_base_name);\n-      strcat (dumpname, \".sched\");\n-      sched_dump_file = fopen (dumpname, \"w\");\n-      if (sched_dump_file == 0)\n-\tpfatal_with_name (dumpname);\n-    }\n+    sched_dump_file = open_dump_file (dump_base_name, \".sched\");\n \n   /* If local_reg dump desired, open the output file.  */\n   if (local_reg_dump)\n-    {\n-      register char *dumpname = (char *) xmalloc (dump_base_name_length + 6);\n-      strcpy (dumpname, dump_base_name);\n-      strcat (dumpname, \".lreg\");\n-      local_reg_dump_file = fopen (dumpname, \"w\");\n-      if (local_reg_dump_file == 0)\n-\tpfatal_with_name (dumpname);\n-    }\n+    local_reg_dump_file = open_dump_file (dump_base_name, \".lreg\");\n \n   /* If global_reg dump desired, open the output file.  */\n   if (global_reg_dump)\n-    {\n-      register char *dumpname = (char *) xmalloc (dump_base_name_length + 6);\n-      strcpy (dumpname, dump_base_name);\n-      strcat (dumpname, \".greg\");\n-      global_reg_dump_file = fopen (dumpname, \"w\");\n-      if (global_reg_dump_file == 0)\n-\tpfatal_with_name (dumpname);\n-    }\n+    global_reg_dump_file = open_dump_file (dump_base_name, \".greg\");\n \n   /* If 2nd scheduling dump desired, open the output file.  */\n   if (sched2_dump)\n-    {\n-      register char *dumpname = (char *) xmalloc (dump_base_name_length + 8);\n-      strcpy (dumpname, dump_base_name);\n-      strcat (dumpname, \".sched2\");\n-      sched2_dump_file = fopen (dumpname, \"w\");\n-      if (sched2_dump_file == 0)\n-\tpfatal_with_name (dumpname);\n-    }\n+    sched2_dump_file = open_dump_file (dump_base_name, \".sched2\");\n \n   /* If jump2_opt dump desired, open the output file.  */\n   if (jump2_opt_dump)\n-    {\n-      register char *dumpname = (char *) xmalloc (dump_base_name_length + 7);\n-      strcpy (dumpname, dump_base_name);\n-      strcat (dumpname, \".jump2\");\n-      jump2_opt_dump_file = fopen (dumpname, \"w\");\n-      if (jump2_opt_dump_file == 0)\n-\tpfatal_with_name (dumpname);\n-    }\n+    jump2_opt_dump_file = open_dump_file (dump_base_name, \".jump2\");\n \n   /* If dbr_sched dump desired, open the output file.  */\n   if (dbr_sched_dump)\n-    {\n-      register char *dumpname = (char *) xmalloc (dump_base_name_length + 7);\n-      strcpy (dumpname, dump_base_name);\n-      strcat (dumpname, \".dbr\");\n-      dbr_sched_dump_file = fopen (dumpname, \"w\");\n-      if (dbr_sched_dump_file == 0)\n-\tpfatal_with_name (dumpname);\n-    }\n+    dbr_sched_dump_file = open_dump_file (dump_base_name, \".dbr\");\n \n #ifdef STACK_REGS\n \n   /* If stack_reg dump desired, open the output file.  */\n   if (stack_reg_dump)\n-    {\n-      register char *dumpname = (char *) xmalloc (dump_base_name_length + 10);\n-      strcpy (dumpname, dump_base_name);\n-      strcat (dumpname, \".stack\");\n-      stack_reg_dump_file = fopen (dumpname, \"w\");\n-      if (stack_reg_dump_file == 0)\n-\tpfatal_with_name (dumpname);\n-    }\n+    stack_reg_dump_file = open_dump_file (dump_base_name, \".stack\");\n \n #endif\n \n@@ -2094,8 +2011,8 @@ compile_file (name)\n     asm_out_file = stdout;\n   else\n     {\n-      register char *dumpname = (char *) xmalloc (dump_base_name_length + 6);\n       int len = strlen (dump_base_name);\n+      register char *dumpname = (char *) xmalloc (len + 6);\n       strcpy (dumpname, dump_base_name);\n       strip_off_ending (dumpname, len);\n       strcat (dumpname, \".s\");"}]}