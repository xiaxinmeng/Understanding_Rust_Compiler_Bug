{"sha": "3d50b6045a05a66715de20fe10fc94e8bdbe4dca", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2Q1MGI2MDQ1YTA1YTY2NzE1ZGUyMGZlMTBmYzk0ZThiZGJlNGRjYQ==", "commit": {"author": {"name": "Segher Boessenkool", "email": "segher@kernel.crashing.org", "date": "2017-07-19T19:28:41Z"}, "committer": {"name": "Segher Boessenkool", "email": "segher@gcc.gnu.org", "date": "2017-07-19T19:28:41Z"}, "message": "simplify-rtx: The truncation of an IOR can have all bits set (PR81423)\n\n... if it is an IOR with a constant with all bits set in the mode\nthat is truncated to, for example.  Handle that case.\n\n\n\tPR rtl-optimization/81423\n\t* simplify-rtx.c (simplify_truncation): Handle truncating an IOR\n\twith a constant that is -1 in the truncated to mode.\n\nFrom-SVN: r250363", "tree": {"sha": "a686c908f3ec904d5665254d978c95d8ce7ca2d8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a686c908f3ec904d5665254d978c95d8ce7ca2d8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3d50b6045a05a66715de20fe10fc94e8bdbe4dca", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3d50b6045a05a66715de20fe10fc94e8bdbe4dca", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3d50b6045a05a66715de20fe10fc94e8bdbe4dca", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3d50b6045a05a66715de20fe10fc94e8bdbe4dca/comments", "author": {"login": "segher", "id": 417629, "node_id": "MDQ6VXNlcjQxNzYyOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/417629?v=4", "gravatar_id": "", "url": "https://api.github.com/users/segher", "html_url": "https://github.com/segher", "followers_url": "https://api.github.com/users/segher/followers", "following_url": "https://api.github.com/users/segher/following{/other_user}", "gists_url": "https://api.github.com/users/segher/gists{/gist_id}", "starred_url": "https://api.github.com/users/segher/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/segher/subscriptions", "organizations_url": "https://api.github.com/users/segher/orgs", "repos_url": "https://api.github.com/users/segher/repos", "events_url": "https://api.github.com/users/segher/events{/privacy}", "received_events_url": "https://api.github.com/users/segher/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "ccfa843f6722b5223fdf0dd83b189555a629e5a6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ccfa843f6722b5223fdf0dd83b189555a629e5a6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ccfa843f6722b5223fdf0dd83b189555a629e5a6"}], "stats": {"total": 15, "additions": 15, "deletions": 0}, "files": [{"sha": "4de6391a0f573b4fee5dc7342391d13cd3390090", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3d50b6045a05a66715de20fe10fc94e8bdbe4dca/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3d50b6045a05a66715de20fe10fc94e8bdbe4dca/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=3d50b6045a05a66715de20fe10fc94e8bdbe4dca", "patch": "@@ -1,3 +1,9 @@\n+2017-07-19  Segher Boessenkool  <segher@kernel.crashing.org>\n+\n+\tPR rtl-optimization/81423\n+\t* simplify-rtx.c (simplify_truncation): Handle truncating an IOR\n+\twith a constant that is -1 in the truncated to mode.\n+\n 2017-07-19  Jan Hubicka  <hubicka@ucw.cz>\n \n \t* predict.c (propagate_unlikely_bbs_forward): Break out from ..."}, {"sha": "ef414797af57ed32e51f22922652954116b88f9f", "filename": "gcc/simplify-rtx.c", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3d50b6045a05a66715de20fe10fc94e8bdbe4dca/gcc%2Fsimplify-rtx.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3d50b6045a05a66715de20fe10fc94e8bdbe4dca/gcc%2Fsimplify-rtx.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fsimplify-rtx.c?ref=3d50b6045a05a66715de20fe10fc94e8bdbe4dca", "patch": "@@ -857,6 +857,15 @@ simplify_truncation (machine_mode mode, rtx op,\n     return simplify_gen_unary (TRUNCATE, mode, XEXP (op, 0),\n \t\t\t       GET_MODE (XEXP (op, 0)));\n \n+  /* (truncate:A (ior X C)) is (const_int -1) if C is equal to that already,\n+     in mode A.  */\n+  if (GET_CODE (op) == IOR\n+      && SCALAR_INT_MODE_P (mode)\n+      && SCALAR_INT_MODE_P (op_mode)\n+      && CONST_INT_P (XEXP (op, 1))\n+      && trunc_int_for_mode (INTVAL (XEXP (op, 1)), mode) == -1)\n+    return constm1_rtx;\n+\n   return NULL_RTX;\n }\n \f"}]}