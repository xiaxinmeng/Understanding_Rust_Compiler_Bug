{"sha": "1bbc6693c956cbcda5983c21c8fab5d834e17b8f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWJiYzY2OTNjOTU2Y2JjZGE1OTgzYzIxYzhmYWI1ZDgzNGUxN2I4Zg==", "commit": {"author": {"name": "Xinliang David Li", "email": "davidxl@google.com", "date": "2011-02-12T00:12:52Z"}, "committer": {"name": "Xinliang David Li", "email": "davidxl@gcc.gnu.org", "date": "2011-02-12T00:12:52Z"}, "message": "Fix PR47707\n\nFrom-SVN: r170062", "tree": {"sha": "a9b6229128c042546c7a0a161ca69a3f4c7b9ecd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a9b6229128c042546c7a0a161ca69a3f4c7b9ecd"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1bbc6693c956cbcda5983c21c8fab5d834e17b8f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1bbc6693c956cbcda5983c21c8fab5d834e17b8f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1bbc6693c956cbcda5983c21c8fab5d834e17b8f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1bbc6693c956cbcda5983c21c8fab5d834e17b8f/comments", "author": {"login": "vns-mn", "id": 57157229, "node_id": "MDQ6VXNlcjU3MTU3MjI5", "avatar_url": "https://avatars.githubusercontent.com/u/57157229?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vns-mn", "html_url": "https://github.com/vns-mn", "followers_url": "https://api.github.com/users/vns-mn/followers", "following_url": "https://api.github.com/users/vns-mn/following{/other_user}", "gists_url": "https://api.github.com/users/vns-mn/gists{/gist_id}", "starred_url": "https://api.github.com/users/vns-mn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vns-mn/subscriptions", "organizations_url": "https://api.github.com/users/vns-mn/orgs", "repos_url": "https://api.github.com/users/vns-mn/repos", "events_url": "https://api.github.com/users/vns-mn/events{/privacy}", "received_events_url": "https://api.github.com/users/vns-mn/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "1da7d8c0d37ae794a9161cbb978218c0c6a4d086", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1da7d8c0d37ae794a9161cbb978218c0c6a4d086", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1da7d8c0d37ae794a9161cbb978218c0c6a4d086"}], "stats": {"total": 47, "additions": 44, "deletions": 3}, "files": [{"sha": "99b24cb8fc33f62fc1ad700aadf770e92e311561", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1bbc6693c956cbcda5983c21c8fab5d834e17b8f/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1bbc6693c956cbcda5983c21c8fab5d834e17b8f/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=1bbc6693c956cbcda5983c21c8fab5d834e17b8f", "patch": "@@ -1,3 +1,8 @@\n+2011-02-11  Xinliang David Li  <davidxl@google.com>\n+\n+\tPR tree-optimization/47707\n+\t* tree-chrec.c (convert_affine_scev): Keep type precision.\n+\n 2011-02-11  Eric Botcazou  <ebotcazou@adacore.com>\n \n \tPR tree-optimization/47420"}, {"sha": "91cd4bb70d53eae222b89844c7c0154c5060349f", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1bbc6693c956cbcda5983c21c8fab5d834e17b8f/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1bbc6693c956cbcda5983c21c8fab5d834e17b8f/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=1bbc6693c956cbcda5983c21c8fab5d834e17b8f", "patch": "@@ -1,3 +1,8 @@\n+2011-02-11  Xinliang David Li  <davidxl@google.com>\n+\n+\tPR tree-optimization/47707\n+\t* g++.dg/tree-ssa/pr47707.C: New test.\n+\n 2011-02-11  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* g++.dg/opt/inline17.C: New test."}, {"sha": "98852de17b887dc14f41a34838a11fc9c3784253", "filename": "gcc/testsuite/g++.dg/tree-ssa/pr47707.C", "status": "added", "additions": 29, "deletions": 0, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1bbc6693c956cbcda5983c21c8fab5d834e17b8f/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftree-ssa%2Fpr47707.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1bbc6693c956cbcda5983c21c8fab5d834e17b8f/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftree-ssa%2Fpr47707.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftree-ssa%2Fpr47707.C?ref=1bbc6693c956cbcda5983c21c8fab5d834e17b8f", "patch": "@@ -0,0 +1,29 @@\n+/* { dg-do run } */\n+/* { dg-options \"-O2 -fno-tree-vrp\" } */\n+#include <assert.h>\n+\n+struct CH\n+{\n+  unsigned char ch : 3;\n+} ch;\n+\n+__attribute__((noinline)) void MakeCheckOp (unsigned int *v1, unsigned int *v2)\n+{\n+ assert (*v1 == *v2);\n+\n+}\n+\n+int main (void)\n+{\n+\n+  int len;\n+\n+  for (len = 4; len >= 1; len--)\n+  {\n+     unsigned v1, v2;\n+     ch.ch = len;\n+     v1 = ch.ch;\n+     v2 = len;\n+     MakeCheckOp (&v1, &v2);\n+  }\n+}"}, {"sha": "1e49c1d5b214627b378fac6e7bfd9893f1979404", "filename": "gcc/tree-chrec.c", "status": "modified", "additions": 5, "deletions": 3, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1bbc6693c956cbcda5983c21c8fab5d834e17b8f/gcc%2Ftree-chrec.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1bbc6693c956cbcda5983c21c8fab5d834e17b8f/gcc%2Ftree-chrec.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-chrec.c?ref=1bbc6693c956cbcda5983c21c8fab5d834e17b8f", "patch": "@@ -1238,8 +1238,11 @@ convert_affine_scev (struct loop *loop, tree type,\n      performed by default when CT is signed.  */\n   new_step = *step;\n   if (TYPE_PRECISION (step_type) > TYPE_PRECISION (ct) && TYPE_UNSIGNED (ct))\n-    new_step = chrec_convert_1 (signed_type_for (ct), new_step, at_stmt,\n-\t\t\t\tuse_overflow_semantics);\n+    {\n+      tree signed_ct = build_nonstandard_integer_type (TYPE_PRECISION (ct), 0);\n+      new_step = chrec_convert_1 (signed_ct, new_step, at_stmt,\n+                                  use_overflow_semantics);\n+    }\n   new_step = chrec_convert_1 (step_type, new_step, at_stmt, use_overflow_semantics);\n \n   if (automatically_generated_chrec_p (new_base)\n@@ -1579,4 +1582,3 @@ evolution_function_right_is_integer_cst (const_tree chrec)\n       return false;\n     }\n }\n-"}]}