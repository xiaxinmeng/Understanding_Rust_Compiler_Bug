{"sha": "ef623bb58594958a7959f8f031f65a50eb0e5890", "node_id": "C_kwDOANBUbNoAKGVmNjIzYmI1ODU5NDk1OGE3OTU5ZjhmMDMxZjY1YTUwZWIwZTU4OTA", "commit": {"author": {"name": "Andrew MacLeod", "email": "amacleod@redhat.com", "date": "2022-08-08T19:13:51Z"}, "committer": {"name": "Andrew MacLeod", "email": "amacleod@redhat.com", "date": "2022-08-08T20:08:51Z"}, "message": "Evaluate condition arguments with the correct type.\n\nProcessing of a cond_expr requires that a range of the correct type for the\noperands of the cond_expr is passed in.\n\n\tPR tree-optimization/106556\n\tgcc/\n\t* gimple-range-gori.cc (gori_compute::condexpr_adjust): Use the\n\t  type of the cond_expr operands being evaluted.\n\n\tgcc/testsuite/\n\t* gfortran.dg/pr106556.f90: New.", "tree": {"sha": "857027e0fbb693afd507c6c34169a3802ba036c8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/857027e0fbb693afd507c6c34169a3802ba036c8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ef623bb58594958a7959f8f031f65a50eb0e5890", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ef623bb58594958a7959f8f031f65a50eb0e5890", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ef623bb58594958a7959f8f031f65a50eb0e5890", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ef623bb58594958a7959f8f031f65a50eb0e5890/comments", "author": null, "committer": null, "parents": [{"sha": "053876cdbe8057210e6f4da4eec2df58f92ccd4c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/053876cdbe8057210e6f4da4eec2df58f92ccd4c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/053876cdbe8057210e6f4da4eec2df58f92ccd4c"}], "stats": {"total": 21, "additions": 16, "deletions": 5}, "files": [{"sha": "8879e44cba11c3736f587621e0aa2b050cf52ddc", "filename": "gcc/gimple-range-gori.cc", "status": "modified", "additions": 6, "deletions": 5, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ef623bb58594958a7959f8f031f65a50eb0e5890/gcc%2Fgimple-range-gori.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ef623bb58594958a7959f8f031f65a50eb0e5890/gcc%2Fgimple-range-gori.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgimple-range-gori.cc?ref=ef623bb58594958a7959f8f031f65a50eb0e5890", "patch": "@@ -1398,16 +1398,17 @@ gori_compute::condexpr_adjust (vrange &r1, vrange &r2, gimple *, tree cond,\n     }\n \n    // Now solve for SSA1 or SSA2 if they are in the dependency chain.\n-  Value_Range tmp (type);\n    if (ssa1 && in_chain_p (ssa1, cond_name))\n     {\n-      if (compute_operand_range (tmp, def_stmt, cond_true, ssa1, src))\n-\tr1.intersect (tmp);\n+      Value_Range tmp1 (TREE_TYPE (ssa1));\n+      if (compute_operand_range (tmp1, def_stmt, cond_true, ssa1, src))\n+\tr1.intersect (tmp1);\n     }\n   if (ssa2 && in_chain_p (ssa2, cond_name))\n     {\n-      if (compute_operand_range (tmp, def_stmt, cond_false, ssa2, src))\n-\tr2.intersect (tmp);\n+      Value_Range tmp2 (TREE_TYPE (ssa2));\n+      if (compute_operand_range (tmp2, def_stmt, cond_false, ssa2, src))\n+\tr2.intersect (tmp2);\n     }\n   if (idx)\n     {"}, {"sha": "01b89a8eee2027daf125af1027e90757228774ce", "filename": "gcc/testsuite/gfortran.dg/pr106556.f90", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ef623bb58594958a7959f8f031f65a50eb0e5890/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr106556.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ef623bb58594958a7959f8f031f65a50eb0e5890/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr106556.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr106556.f90?ref=ef623bb58594958a7959f8f031f65a50eb0e5890", "patch": "@@ -0,0 +1,10 @@\n+! { dg-do compile }\n+! { dg-options \"-O1 -fnon-call-exceptions -ftree-loop-if-convert\" }\n+\n+\n+program p\n+  real :: a(2)\n+\n+  a(:) = 1.0\n+  if (minloc (a, dim = 1).ne.1) STOP 1\n+end"}]}