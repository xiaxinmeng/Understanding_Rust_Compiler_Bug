{"sha": "f6964637b640c6b54742cd58155a7eca1b670510", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjY5NjQ2MzdiNjQwYzZiNTQ3NDJjZDU4MTU1YTdlY2ExYjY3MDUxMA==", "commit": {"author": {"name": "Alan Modra", "email": "amodra@gmail.com", "date": "2016-02-14T01:43:14Z"}, "committer": {"name": "Alan Modra", "email": "amodra@gcc.gnu.org", "date": "2016-02-14T01:43:14Z"}, "message": "Correct c-torture stkalign test\n\nThe test wrongly assumed that a local var will normally not be 64-bit\naligned, causing it to fail on many targets.  So the test needs to\npass if a local var *is* normally 64-bit aligned.\n\n\t* gcc.c-torture/execute/stkalign.c: Revise test.\n\nFrom-SVN: r233407", "tree": {"sha": "dc2001b5e8137581a37d02a034d5143fb261b09e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/dc2001b5e8137581a37d02a034d5143fb261b09e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f6964637b640c6b54742cd58155a7eca1b670510", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f6964637b640c6b54742cd58155a7eca1b670510", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f6964637b640c6b54742cd58155a7eca1b670510", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f6964637b640c6b54742cd58155a7eca1b670510/comments", "author": {"login": "amodra", "id": 6006325, "node_id": "MDQ6VXNlcjYwMDYzMjU=", "avatar_url": "https://avatars.githubusercontent.com/u/6006325?v=4", "gravatar_id": "", "url": "https://api.github.com/users/amodra", "html_url": "https://github.com/amodra", "followers_url": "https://api.github.com/users/amodra/followers", "following_url": "https://api.github.com/users/amodra/following{/other_user}", "gists_url": "https://api.github.com/users/amodra/gists{/gist_id}", "starred_url": "https://api.github.com/users/amodra/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/amodra/subscriptions", "organizations_url": "https://api.github.com/users/amodra/orgs", "repos_url": "https://api.github.com/users/amodra/repos", "events_url": "https://api.github.com/users/amodra/events{/privacy}", "received_events_url": "https://api.github.com/users/amodra/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "ab6e41cb3c9ec47b0dc7dcbf2c85b38980a5ef90", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ab6e41cb3c9ec47b0dc7dcbf2c85b38980a5ef90", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ab6e41cb3c9ec47b0dc7dcbf2c85b38980a5ef90"}], "stats": {"total": 27, "additions": 24, "deletions": 3}, "files": [{"sha": "031daede4e23bae87c46ae18a40086841bf0a1b5", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f6964637b640c6b54742cd58155a7eca1b670510/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f6964637b640c6b54742cd58155a7eca1b670510/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=f6964637b640c6b54742cd58155a7eca1b670510", "patch": "@@ -1,3 +1,7 @@\n+2016-02-14  Alan Modra  <amodra@gmail.com>\n+\n+\t* gcc.c-torture/execute/stkalign.c: Revise test.\n+\n 2016-02-13  Oleg Endo  <olegendo@gcc.gnu.org>\n \n \tPR target/67260"}, {"sha": "e10a1d2ec24fb4e58552c5b038969c99118c324a", "filename": "gcc/testsuite/gcc.c-torture/execute/stkalign.c", "status": "modified", "additions": 20, "deletions": 3, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f6964637b640c6b54742cd58155a7eca1b670510/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fstkalign.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f6964637b640c6b54742cd58155a7eca1b670510/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fstkalign.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fstkalign.c?ref=f6964637b640c6b54742cd58155a7eca1b670510", "patch": "@@ -1,5 +1,6 @@\n-/* { dg-xfail-run-if \"invalid assumption\" { sparc*-*-* && lp64 } \"*\" \"\" } */\n /* { dg-options \"-fno-inline\" } */\n+/* Check that stack alignment is not affected by variables not placed\n+   on the stack.  */\n \n #include <assert.h>\n \n@@ -16,12 +17,28 @@ unsigned test(unsigned n, unsigned p)\n   return n ? test(n - 1, x) : (x ^ p);\n }\n \n+unsigned test2(unsigned n, unsigned p)\n+{\n+  static struct { char c; } s;\n+  unsigned x;\n+\n+  assert(__alignof__(s) != ALIGNMENT);\n+  asm (\"\" : \"=g\" (x), \"+m\" (s) : \"0\" (&x));\n+\n+  return n ? test2(n - 1, x) : (x ^ p);\n+}\n+\n int main (int argc, char *argv[] __attribute__((unused)))\n {\n-  unsigned int x = test(argc, 0);\n+  unsigned int x, y;\n \n+  x = test(argc, 0);\n   x |= test(argc + 1, 0);\n   x |= test(argc + 2, 0);\n \n-  return !(x & (ALIGNMENT - 1));\n+  y = test2(argc, 0);\n+  y |= test2(argc + 1, 0);\n+  y |= test2(argc + 2, 0);\n+\n+  return (x & (ALIGNMENT - 1)) == 0 && (y & (ALIGNMENT - 1)) != 0 ? 1 : 0;\n }"}]}