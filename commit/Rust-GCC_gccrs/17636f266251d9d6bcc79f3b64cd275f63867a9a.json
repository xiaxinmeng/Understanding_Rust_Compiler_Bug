{"sha": "17636f266251d9d6bcc79f3b64cd275f63867a9a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTc2MzZmMjY2MjUxZDlkNmJjYzc5ZjNiNjRjZDI3NWY2Mzg2N2E5YQ==", "commit": {"author": {"name": "Carl Love", "email": "cel@us.ibm.com", "date": "2017-11-14T17:23:08Z"}, "committer": {"name": "Carl Love", "email": "carll@gcc.gnu.org", "date": "2017-11-14T17:23:08Z"}, "message": "rs6000.c (swap_endian_selector_for_mode): Remove le_ and be_ prefixes to swap* variables.\n\n\ngcc/ChangeLog:\n\n2017-11-14  Carl Love  <cel@us.ibm.com>\n\n\t* config/rs6000/rs6000.c (swap_endian_selector_for_mode): Remove\n\tle_ and be_ prefixes to swap* variables.  Remove\n\tif (VECTOR_ELT_ORDER_BIG) statement. Remove E_V16QImode case\n\tstatements.\n\ngcc/testsuite/ChangeLog:\n\n2017-11-14  Carl Love  <cel@us.ibm.com>\n\n\t* builtins-revb-runnable.c (dg-do run): Add lp64 directive.  Fix\n\tindentation of printf and abort statements.\n\t* p9-xxbr-1.c (dg-do compile): Add lp64 && p9vector_h directives.\n\nFrom-SVN: r254732", "tree": {"sha": "7f0f5d57fe1cad0ff3d4b4c46224cc4463ed53d4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7f0f5d57fe1cad0ff3d4b4c46224cc4463ed53d4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/17636f266251d9d6bcc79f3b64cd275f63867a9a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/17636f266251d9d6bcc79f3b64cd275f63867a9a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/17636f266251d9d6bcc79f3b64cd275f63867a9a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/17636f266251d9d6bcc79f3b64cd275f63867a9a/comments", "author": {"login": "carlelove", "id": 86435705, "node_id": "MDQ6VXNlcjg2NDM1NzA1", "avatar_url": "https://avatars.githubusercontent.com/u/86435705?v=4", "gravatar_id": "", "url": "https://api.github.com/users/carlelove", "html_url": "https://github.com/carlelove", "followers_url": "https://api.github.com/users/carlelove/followers", "following_url": "https://api.github.com/users/carlelove/following{/other_user}", "gists_url": "https://api.github.com/users/carlelove/gists{/gist_id}", "starred_url": "https://api.github.com/users/carlelove/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/carlelove/subscriptions", "organizations_url": "https://api.github.com/users/carlelove/orgs", "repos_url": "https://api.github.com/users/carlelove/repos", "events_url": "https://api.github.com/users/carlelove/events{/privacy}", "received_events_url": "https://api.github.com/users/carlelove/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "21faa10189001f70361ca13133b01a815d2b342c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/21faa10189001f70361ca13133b01a815d2b342c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/21faa10189001f70361ca13133b01a815d2b342c"}], "stats": {"total": 173, "additions": 75, "deletions": 98}, "files": [{"sha": "b80a4211c7561e88e1c33ea787b30e9653899136", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/17636f266251d9d6bcc79f3b64cd275f63867a9a/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/17636f266251d9d6bcc79f3b64cd275f63867a9a/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=17636f266251d9d6bcc79f3b64cd275f63867a9a", "patch": "@@ -1,3 +1,10 @@\n+2017-11-14  Carl Love  <cel@us.ibm.com>\n+\n+\t* config/rs6000/rs6000.c (swap_endian_selector_for_mode): Remove\n+\tle_ and be_ prefixes to swap* variables.  Remove\n+\tif (VECTOR_ELT_ORDER_BIG) statement. Remove E_V16QImode case\n+\tstatements.\n+\t\n 2017-11-14  Jason Merrill  <jason@redhat.com>\n \n \tSupport GTY((cache)) on hash_map."}, {"sha": "05c0c8b2919a963910fc57630ac4b0585a0373ec", "filename": "gcc/config/rs6000/rs6000.c", "status": "modified", "additions": 24, "deletions": 57, "changes": 81, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/17636f266251d9d6bcc79f3b64cd275f63867a9a/gcc%2Fconfig%2Frs6000%2Frs6000.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/17636f266251d9d6bcc79f3b64cd275f63867a9a/gcc%2Fconfig%2Frs6000%2Frs6000.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.c?ref=17636f266251d9d6bcc79f3b64cd275f63867a9a", "patch": "@@ -14304,66 +14304,33 @@ swap_selector_for_mode (machine_mode mode)\n rtx\n swap_endian_selector_for_mode (machine_mode mode)\n {\n-  unsigned int le_swap1[16] = {0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15};\n-  unsigned int le_swap2[16] = {7,6,5,4,3,2,1,0,15,14,13,12,11,10,9,8};\n-  unsigned int le_swap4[16] = {3,2,1,0,7,6,5,4,11,10,9,8,15,14,13,12};\n-  unsigned int le_swap8[16] = {1,0,3,2,5,4,7,6,9,8,11,10,13,12,15,14};\n-  unsigned int le_swap16[16] = {0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15};\n-\n-  unsigned int be_swap1[16] = {15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,0};\n-  unsigned int be_swap2[16] = {7,6,5,4,3,2,1,0,15,14,13,12,11,10,9,8};\n-  unsigned int be_swap4[16] = {3,2,1,0,7,6,5,4,11,10,9,8,15,14,13,12};\n-  unsigned int be_swap8[16] = {1,0,3,2,5,4,7,6,9,8,11,10,13,12,15,14};\n-  unsigned int be_swap16[16] = {15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,0};\n+  unsigned int swap1[16] = {15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,0};\n+  unsigned int swap2[16] = {7,6,5,4,3,2,1,0,15,14,13,12,11,10,9,8};\n+  unsigned int swap4[16] = {3,2,1,0,7,6,5,4,11,10,9,8,15,14,13,12};\n+  unsigned int swap8[16] = {1,0,3,2,5,4,7,6,9,8,11,10,13,12,15,14};\n+\n   unsigned int *swaparray, i;\n   rtx perm[16];\n \n-  if (VECTOR_ELT_ORDER_BIG)\n-    switch (mode)\n-      {\n-      case E_V1TImode:\n-\tswaparray = le_swap1;\n-\tbreak;\n-      case E_V2DFmode:\n-      case E_V2DImode:\n-\tswaparray = le_swap2;\n-\tbreak;\n-      case E_V4SFmode:\n-      case E_V4SImode:\n-\tswaparray = le_swap4;\n-\tbreak;\n-      case E_V8HImode:\n-\tswaparray = le_swap8;\n-\tbreak;\n-      case E_V16QImode:\n-\tswaparray = le_swap16;\n-\tbreak;\n-      default:\n-\tgcc_unreachable ();\n-      }\n-  else\n-    switch (mode)\n-      {\n-      case E_V1TImode:\n-\tswaparray = be_swap1;\n-\tbreak;\n-      case E_V2DFmode:\n-      case E_V2DImode:\n-\tswaparray = be_swap2;\n-\tbreak;\n-      case E_V4SFmode:\n-      case E_V4SImode:\n-\tswaparray = be_swap4;\n-\tbreak;\n-      case E_V8HImode:\n-\tswaparray = be_swap8;\n-\tbreak;\n-      case E_V16QImode:\n-\tswaparray = be_swap16;\n-\tbreak;\n-      default:\n-\tgcc_unreachable ();\n-      }\n+  switch (mode)\n+    {\n+    case E_V1TImode:\n+      swaparray = swap1;\n+      break;\n+    case E_V2DFmode:\n+    case E_V2DImode:\n+      swaparray = swap2;\n+      break;\n+    case E_V4SFmode:\n+    case E_V4SImode:\n+      swaparray = swap4;\n+      break;\n+    case E_V8HImode:\n+      swaparray = swap8;\n+      break;\n+    default:\n+      gcc_unreachable ();\n+    }\n \n   for (i = 0; i < 16; ++i)\n     perm[i] = GEN_INT (swaparray[i]);"}, {"sha": "40f788061c010fa643bdc7d463af5e0a01f5a15b", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/17636f266251d9d6bcc79f3b64cd275f63867a9a/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/17636f266251d9d6bcc79f3b64cd275f63867a9a/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=17636f266251d9d6bcc79f3b64cd275f63867a9a", "patch": "@@ -1,3 +1,9 @@\n+2017-11-14  Carl Love  <cel@us.ibm.com>\n+\n+\t* builtins-revb-runnable.c (dg-do run): Add lp64 directive.  Fix\n+\tindentation of printf and abort statements.\n+\t* p9-xxbr-1.c (dg-do compile): Add lp64 && p9vector_h directives.\n+\n 2017-11-14  James Greenhalgh  <james.greenhalgh@arm.com>\n \n \t* gcc.target/aarch64/bsl-idiom.c: New."}, {"sha": "b6ffa2382214fa4506f26596ea8a613258fa1e0a", "filename": "gcc/testsuite/gcc.target/powerpc/builtins-revb-runnable.c", "status": "modified", "additions": 33, "deletions": 35, "changes": 68, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/17636f266251d9d6bcc79f3b64cd275f63867a9a/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fbuiltins-revb-runnable.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/17636f266251d9d6bcc79f3b64cd275f63867a9a/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fbuiltins-revb-runnable.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fbuiltins-revb-runnable.c?ref=17636f266251d9d6bcc79f3b64cd275f63867a9a", "patch": "@@ -1,4 +1,4 @@\n-/* { dg-do run { target { powerpc*-*-* && p8vector_hw } } } */\n+/* { dg-do run { target { powerpc*-*-* && { lp64 && p8vector_hw } } } } */\n /* { dg-skip-if \"do not override -mcpu\" { powerpc*-*-* } { \"-mcpu=*\" } { \"-mcpu=power8\" } } */\n /* { dg-options \"-mcpu=power8  -O3\" } */\n \n@@ -52,10 +52,10 @@ main()\n   for (i = 0; i < 16; i++) {\n     if (result_bc[i] != expected_bc[i])\n #ifdef DEBUG\n-       printf(\"arg_bc[%d] = 0x%x, result_bc[%d] = 0x%x, expected_bc[%d] = 0x%x\\n\",\n-\t      i, arg_bc[i], i, result_bc[i], i, expected_bc[i]);\n+      printf(\"arg_bc[%d] = 0x%x, result_bc[%d] = 0x%x, expected_bc[%d] = 0x%x\\n\",\n+\t     i, arg_bc[i], i, result_bc[i], i, expected_bc[i]);\n #else\n-    abort();\n+      abort();\n #endif\n   }\n \n@@ -70,10 +70,10 @@ main()\n   for (i = 0; i < 16; i++) {\n     if (result_uc[i] != expected_uc[i])\n #ifdef DEBUG\n-       printf(\"arg_uc[%d] = 0x%x, result_uc[%d] = 0x%x, expected_uc[%d] = 0x%x\\n\",\n-\t      i, arg_uc[i], i, result_uc[i], i, expected_uc[i]);\n+      printf(\"arg_uc[%d] = 0x%x, result_uc[%d] = 0x%x, expected_uc[%d] = 0x%x\\n\",\n+\t     i, arg_uc[i], i, result_uc[i], i, expected_uc[i]);\n #else\n-    abort();\n+      abort();\n #endif\n   }\n \n@@ -88,10 +88,10 @@ main()\n   for (i = 0; i < 16; i++) {\n     if (result_sc[i] != expected_sc[i])\n #ifdef DEBUG\n-      printf(\"arg_sc[%d] = 0x%x, result_sc[%d] = 0x%x, expected_sc[%d] = 0x%x\\n\",\n+\tprintf(\"arg_sc[%d] = 0x%x, result_sc[%d] = 0x%x, expected_sc[%d] = 0x%x\\n\",\n \t     i, arg_sc[i], i, result_sc[i], i, expected_sc[i]);\n #else\n-    abort();\n+\tabort();\n #endif\n   }\n \n@@ -106,10 +106,10 @@ main()\n   for (i = 0; i < 8; i++) {\n     if (result_bsi[i] != expected_bsi[i])\n #ifdef DEBUG\n-       printf(\"arg_bsi[%d] = 0x%x, result_bsi[%d] = 0x%x, expected_bsi[%d] = 0x%x\\n\",\n+\tprintf(\"arg_bsi[%d] = 0x%x, result_bsi[%d] = 0x%x, expected_bsi[%d] = 0x%x\\n\",\n \t      i, arg_bsi[i], i, result_bsi[i], i, expected_bsi[i]);\n #else\n-    abort();\n+\tabort();\n #endif\n   }\n \n@@ -123,10 +123,10 @@ main()\n   for (i = 0; i < 8; i++) {\n     if (result_usi[i] != expected_usi[i])\n #ifdef DEBUG\n-      printf(\"arg_usi[%d] = 0x%x, result_usi[%d] = 0x%x, expected_usi[%d] = 0x%x\\n\",\n+\tprintf(\"arg_usi[%d] = 0x%x, result_usi[%d] = 0x%x, expected_usi[%d] = 0x%x\\n\",\n \t     i, arg_usi[i], i, result_usi[i], i, expected_usi[i]);\n #else\n-    abort();\n+\tabort();\n #endif\n   }\n \n@@ -140,10 +140,10 @@ main()\n   for (i = 0; i < 8; i++) {\n     if (result_si[i] != expected_si[i])\n #ifdef DEBUG\n-       printf(\"arg_si[%d] = 0x%x, result_si[%d] = 0x%x, expected_si[%d] = 0x%x\\n\",\n-\t      i, arg_si[i], i, result_si[i], i, expected_si[i]);\n+\tprintf(\"arg_si[%d] = 0x%x, result_si[%d] = 0x%x, expected_si[%d] = 0x%x\\n\",\n+\t     i, arg_si[i], i, result_si[i], i, expected_si[i]);\n #else\n-    abort();\n+\tabort();\n #endif\n   }\n \n@@ -157,10 +157,10 @@ main()\n   for (i = 0; i < 4; i++) {\n     if (result_bi[i] != expected_bi[i])\n #ifdef DEBUG\n-      printf(\"arg_bi[%d] = 0x%x, result_bi[%d] = 0x%x, expected_bi[%d] = 0x%x\\n\",\n+\tprintf(\"arg_bi[%d] = 0x%x, result_bi[%d] = 0x%x, expected_bi[%d] = 0x%x\\n\",\n \t     i, arg_bi[i], i, result_bi[i], i, expected_bi[i]);\n #else\n-    abort();\n+\tabort();\n #endif\n   }\n \n@@ -174,10 +174,10 @@ main()\n   for (i = 0; i < 4; i++) {\n     if (result_ui[i] != expected_ui[i])\n #ifdef DEBUG\n-      printf(\"arg_ui[%d] = 0x%x, result_ui[%d] = 0x%x, expected_ui[%d] = 0x%x\\n\",\n+\tprintf(\"arg_ui[%d] = 0x%x, result_ui[%d] = 0x%x, expected_ui[%d] = 0x%x\\n\",\n \t     i, arg_ui[i], i, result_ui[i], i, expected_ui[i]);\n #else\n-    abort();\n+\tabort();\n #endif\n   }\n \n@@ -189,10 +189,10 @@ main()\n   for (i = 0; i < 4; i++) {\n     if (result_int[i] != expected_int[i])\n #ifdef DEBUG\n-      printf(\"arg_int[%d] = 0x%x, result_int[%d] = 0x%x, expected_int[%d] = 0x%x\\n\",\n+\tprintf(\"arg_int[%d] = 0x%x, result_int[%d] = 0x%x, expected_int[%d] = 0x%x\\n\",\n \t     i, arg_int[i], i, result_int[i], i, expected_int[i]);\n #else\n-    abort();\n+\tabort();\n #endif\n   }\n \n@@ -207,10 +207,10 @@ main()\n   for (i = 0; i < 2; i++) {\n     if (result_blli[i] != expected_blli[i])\n #ifdef DEBUG\n-      printf(\"arg_blli[%d] = 0x%x, result_blli[%d] = 0x%llx, expected_blli[%d] = 0x%llx\\n\",\n+\tprintf(\"arg_blli[%d] = 0x%x, result_blli[%d] = 0x%llx, expected_blli[%d] = 0x%llx\\n\",\n \t     i, arg_blli[i], i, result_blli[i], i, expected_blli[i]);\n #else\n-    abort();\n+\tabort();\n #endif\n   }\n \n@@ -224,10 +224,10 @@ main()\n   for (i = 0; i < 2; i++) {\n     if (result_ulli[i] != expected_ulli[i])\n #ifdef DEBUG\n-      printf(\"arg_ulli[%d] = 0x%x, result_ulli[%d] = 0x%llx, expected_ulli[%d] = 0x%llx\\n\",\n+\tprintf(\"arg_ulli[%d] = 0x%x, result_ulli[%d] = 0x%llx, expected_ulli[%d] = 0x%llx\\n\",\n \t     i, arg_ulli[i], i, result_ulli[i], i, expected_ulli[i]);\n #else\n-    abort();\n+\tabort();\n #endif\n   }\n \n@@ -240,10 +240,10 @@ main()\n   for (i = 0; i < 2; i++) {\n     if (result_lli[i] != expected_lli[i])\n #ifdef DEBUG\n-      printf(\"arg_lli[%d] = 0x%x, result_lli[%d] = 0x%llx, expected_lli[%d] = 0x%llx\\n\",\n+\tprintf(\"arg_lli[%d] = 0x%x, result_lli[%d] = 0x%llx, expected_lli[%d] = 0x%llx\\n\",\n \t     i, arg_lli[i], i, result_lli[i], i, expected_lli[i]);\n #else\n-    abort();\n+\tabort();\n #endif\n   }\n \n@@ -270,7 +270,7 @@ main()\n        printf(\"expected_uint128[0] =  %llx \", expected_uint128[0] >> 64);\n        printf(\" %llx\\n\", expected_uint128[0] & 0xFFFFFFFFFFFFFFFF);\n #else\n-    abort();\n+       abort();\n #endif\n     }\n \n@@ -296,7 +296,7 @@ main()\n        printf(\"expected_int128[0] =  %llx \", expected_int128[0] >> 64);\n        printf(\" %llx\\n\", expected_int128[0] & 0xFFFFFFFFFFFFFFFF);\n #else\n-    abort();\n+       abort();\n #endif\n     }\n \n@@ -313,14 +313,12 @@ main()\n \n   for (i = 0; i < 4; i++) {\n     if (result_f[i] != expected_f[i])\n-      {\n #ifdef DEBUG\n \tprintf(\"    arg_f[%d] = %f, result_f[%d] = %f, expected_f[%d] = %f\\n\",\n-\t       i, arg_f[i], i, result_f[i], i, expected_f[i]);\n+\t     i, arg_f[i], i, result_f[i], i, expected_f[i]);\n #else\n \tabort();\n #endif\n-      }\n   }\n \n   /* 64-bit floats */\n@@ -335,10 +333,10 @@ main()\n   for (i = 0; i < 2; i++) {\n     if (result_d[i] != expected_d[i])\n #ifdef DEBUG\n-      printf(\"arg_d[%d] = %f, result_d[%d] = %f, expected_d[%d] = %f\\n\",\n+\tprintf(\"arg_d[%d] = %f, result_d[%d] = %f, expected_d[%d] = %f\\n\",\n \t     i, arg_d[i], i, result_d[i], i, expected_d[i]);\n #else\n-    abort();\n+\tabort();\n #endif\n   }\n }"}, {"sha": "7a07d0f8f2ada89a145fd1deceed27998ad4ccad", "filename": "gcc/testsuite/gcc.target/powerpc/p9-xxbr-1.c", "status": "modified", "additions": 5, "deletions": 6, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/17636f266251d9d6bcc79f3b64cd275f63867a9a/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fp9-xxbr-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/17636f266251d9d6bcc79f3b64cd275f63867a9a/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fp9-xxbr-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fp9-xxbr-1.c?ref=17636f266251d9d6bcc79f3b64cd275f63867a9a", "patch": "@@ -1,4 +1,4 @@\n-/* { dg-do compile { target { powerpc64*-*-* } } } */\n+/* { dg-do compile { target { powerpc*-*-* && { lp64 && p9vector_hw } } } } */\n /* { dg-skip-if \"do not override -mcpu\" { powerpc*-*-* } { \"-mcpu=*\" } { \"-mcpu=power9\" } } */\n /* { dg-require-effective-target powerpc_p9vector_ok } */\n /* { dg-options \"-mcpu=power9 -O3\" } */\n@@ -10,25 +10,25 @@\n vector char\n rev_char (vector char a)\n {\n-  return vec_revb (a);\t\t/* XXBRQ.  */\n+  return vec_revb (a);\t\t/* Is a NOP, maps to move inst  */\n }\n \n vector bool char\n rev_bool_char (vector bool char a)\n {\n-  return vec_revb (a);\t\t/* XXBRQ.  */\n+  return vec_revb (a);\t\t/* Is a NOP, maps to move inst  */\n }\n \n vector signed char\n rev_schar (vector signed char a)\n {\n-  return vec_revb (a);\t\t/* XXBRQ.  */\n+  return vec_revb (a);\t\t/* Is a NOP, maps to move inst  */\n }\n \n vector unsigned char\n rev_uchar (vector unsigned char a)\n {\n-  return vec_revb (a);\t\t/* XXBRQ.  */\n+  return vec_revb (a);\t\t/* Is a NOP, maps to move inst  */\n }\n \n vector short\n@@ -81,5 +81,4 @@ rev_double (vector double a)\n \n /* { dg-final { scan-assembler-times \"xxbrd\" 1 } } */\n /* { dg-final { scan-assembler-times \"xxbrh\" 3 } } */\n-/* { dg-final { scan-assembler-times \"xxbrq\" 4 } } */\n /* { dg-final { scan-assembler-times \"xxbrw\" 4 } } */"}]}