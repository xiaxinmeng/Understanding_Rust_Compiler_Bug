{"sha": "e4a5f73449d7352ba8128fecbc9a9570d746abdb", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTRhNWY3MzQ0OWQ3MzUyYmE4MTI4ZmVjYmM5YTk1NzBkNzQ2YWJkYg==", "commit": {"author": {"name": "Mark Eggleston", "email": "markeggleston@gcc.gnu.org", "date": "2020-01-17T08:49:25Z"}, "committer": {"name": "Mark Eggleston", "email": "markeggleston@gcc.gnu.org", "date": "2020-01-17T08:49:33Z"}, "message": "PATCH] Fortran: PR93263 -fno-automatic and RECURSIVE\n\nThe use of -fno-automatic should not affect the save attribute of a\nrecursive procedure. The first test case checks unsaved variables\nand the second checks saved variables.", "tree": {"sha": "beea2fb70aa72f40643b7a8517aa70dc0f0f919a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/beea2fb70aa72f40643b7a8517aa70dc0f0f919a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e4a5f73449d7352ba8128fecbc9a9570d746abdb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e4a5f73449d7352ba8128fecbc9a9570d746abdb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e4a5f73449d7352ba8128fecbc9a9570d746abdb", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e4a5f73449d7352ba8128fecbc9a9570d746abdb/comments", "author": null, "committer": null, "parents": [{"sha": "dc9ba9d045d0cfc06207806fd64b06ab3304b196", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dc9ba9d045d0cfc06207806fd64b06ab3304b196", "html_url": "https://github.com/Rust-GCC/gccrs/commit/dc9ba9d045d0cfc06207806fd64b06ab3304b196"}], "stats": {"total": 71, "additions": 70, "deletions": 1}, "files": [{"sha": "524ebff3e1fff2d4670defe34937586e7feffc0c", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e4a5f73449d7352ba8128fecbc9a9570d746abdb/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e4a5f73449d7352ba8128fecbc9a9570d746abdb/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=e4a5f73449d7352ba8128fecbc9a9570d746abdb", "patch": "@@ -1,3 +1,11 @@\n+2020-01-17  Mark Eggleston  <mark.eggleston@codethink.com>\n+\n+\tPR fortran/93236\n+\t* resolve.c (resolve_types): Declare boolean recursive and set with the\n+\tvalue of the recursive attribute of namespace proc_name symbol\n+\tstructure if it exists.  Call gfc_save_all if both flag_automatic and\n+\trecursive are false or ns->save_all is true.\n+\n 2020-01-16  Tobias Burnus  <tobias@codesourcery.com>\n \n \tPR fortran/93253"}, {"sha": "bddab39d023a406d17e712db531663e87cd18e7a", "filename": "gcc/fortran/resolve.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e4a5f73449d7352ba8128fecbc9a9570d746abdb/gcc%2Ffortran%2Fresolve.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e4a5f73449d7352ba8128fecbc9a9570d746abdb/gcc%2Ffortran%2Fresolve.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fresolve.c?ref=e4a5f73449d7352ba8128fecbc9a9570d746abdb", "patch": "@@ -17079,6 +17079,7 @@ resolve_types (gfc_namespace *ns)\n   gfc_data *d;\n   gfc_equiv *eq;\n   gfc_namespace* old_ns = gfc_current_ns;\n+  bool recursive = ns->proc_name && ns->proc_name->attr.recursive;\n \n   if (ns->types_resolved)\n     return;\n@@ -17132,7 +17133,7 @@ resolve_types (gfc_namespace *ns)\n \n   gfc_traverse_ns (ns, resolve_values);\n \n-  if (ns->save_all || !flag_automatic)\n+  if (ns->save_all || (!flag_automatic && !recursive))\n     gfc_save_all (ns);\n \n   iter_stack = NULL;"}, {"sha": "4247302bda9038349d84ba8108b677352cc4e355", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e4a5f73449d7352ba8128fecbc9a9570d746abdb/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e4a5f73449d7352ba8128fecbc9a9570d746abdb/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=e4a5f73449d7352ba8128fecbc9a9570d746abdb", "patch": "@@ -1,3 +1,10 @@\n+2020-01-17  Mark Eggleston  <mark.eggleston@codethink.com>\n+\tTobias Burnus  <burnus@gcc.gnu.org>\n+\n+\tPR fortran/93236\n+\t* gfortran.dg/pr93263_1.f90: New test.\n+\t* gfortran.dg/pr93263_2.f90: New test.\n+\n 2020-01-17  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR tree-optimization/93292"}, {"sha": "f96b35894114f5ae1cedfe87b0e7811ecca5b08b", "filename": "gcc/testsuite/gfortran.dg/pr93263_1.f90", "status": "added", "additions": 29, "deletions": 0, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e4a5f73449d7352ba8128fecbc9a9570d746abdb/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr93263_1.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e4a5f73449d7352ba8128fecbc9a9570d746abdb/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr93263_1.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr93263_1.f90?ref=e4a5f73449d7352ba8128fecbc9a9570d746abdb", "patch": "@@ -0,0 +1,29 @@\n+! { dg-do compile }\n+! { dg-options \"-fno-automatic -fdump-tree-original\" }\n+!\n+! Test contributed by Mark Eggleston  <mark.eggleston@codethink.com>\n+\n+program main\n+  implicit none\n+  call check(2)\n+end \n+\n+recursive subroutine check(n)\n+  implicit none\n+  integer n, a\n+  a = 10\n+  print*,\"n=\",n\n+  if (n==1) then\n+    a=a-1\n+    print*,\"assigning a=\",a\n+  else\n+    a=a-2\n+    print*,\"assigning a=\",a\n+    call check(n-1)\n+  endif\n+  print*,\"a=\",a\n+end \n+\n+! { dg-final { scan-tree-dump-not \"static integer\\\\(kind=4\\\\) a\" \"original\" } }\n+! { dg-final { scan-tree-dump-not \"integer\\\\(kind=4\\\\) a\" \"original\" } }\n+"}, {"sha": "fd353c6b5484446923bfe2427b37361d9a578580", "filename": "gcc/testsuite/gfortran.dg/pr93263_2.f90", "status": "added", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e4a5f73449d7352ba8128fecbc9a9570d746abdb/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr93263_2.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e4a5f73449d7352ba8128fecbc9a9570d746abdb/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr93263_2.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr93263_2.f90?ref=e4a5f73449d7352ba8128fecbc9a9570d746abdb", "patch": "@@ -0,0 +1,24 @@\n+! { dg-do run }\n+!\n+! Test contributed by Tobias Burnus  <burnus@gcc.gnu.org>\n+\n+  integer :: cnt\n+  cnt = 0\n+  call sub()\n+  if (cnt /= 5) stop 1\n+contains\n+  recursive subroutine sub()\n+    save\n+    logical :: first = .true.\n+    integer :: i\n+    cnt = cnt + 1\n+    if (first) then\n+      first = .false.\n+      i = 1\n+    end if\n+    print *, \"Hello\", i\n+    i = i + 1\n+    if (i <= 5) call sub()\n+  end subroutine\n+end\n+"}]}