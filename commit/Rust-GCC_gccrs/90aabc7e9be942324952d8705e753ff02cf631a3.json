{"sha": "90aabc7e9be942324952d8705e753ff02cf631a3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTBhYWJjN2U5YmU5NDIzMjQ5NTJkODcwNWU3NTNmZjAyY2Y2MzFhMw==", "commit": {"author": {"name": "Fran\u00e7ois Dumont", "email": "fdumont@gcc.gnu.org", "date": "2018-05-08T19:46:59Z"}, "committer": {"name": "Fran\u00e7ois Dumont", "email": "fdumont@gcc.gnu.org", "date": "2018-05-08T19:46:59Z"}, "message": "macros.h (__glibcxx_check_valid_range_at): New.\n\n2018-05-08  Fran\u00e7ois Dumont  <fdumont@gcc.gnu.org>\n\n\t* include/debug/macros.h (__glibcxx_check_valid_range_at): New.\n\t* include/debug/functions.h (__check_valid_range): Use latter.\n\t* include/debug/macros.h (__glibcxx_check_valid_constructor_range): New,\n\tuse latter.\n\t* include/debug/deque\n\t(deque::deque<_Iter>(_Iter, _Iter, const _Alloc&)): Use latter.\n\t* include/debug/forward_list\n\t(forward_list::forward_list<_Iter>(_Iter, _Iter, const _Alloc&)):\n\tLikewise.\n\t* include/debug/list\n\t(list::list<_Iter>(_Iter, _Iter, const _Alloc&)): Likewise.\n\t* include/debug/list\n\t(list::list<_Iter>(_Iter, _Iter, const _Alloc&)): Likewise.\n\t* include/debug/map.h\n\t(map::map<_Iter>(_Iter, _Iter, const _Alloc&)): Likewise.\n\t(map::map<_Iter>(_Iter, _Iter, const _Compare&, const _Alloc&)):\n\tLikewise.\n\t* include/debug/multimap.h\n\t(multimap::multimap<_Iter>(_Iter, _Iter, const _Alloc&)): Likewise.\n\t(multimap::multimap<_Iter>(_Iter, _Iter, const _Compare&,\n\tconst _Alloc&)): Likewise.\n\t* include/debug/set.h\n\t(set::set<_Iter>(_Iter, _Iter, const _Alloc&)): Likewise.\n\t(set::set<_Iter>(_Iter, _Iter, const _Compare&, const _Alloc&)):\n\tLikewise.\n\t* include/debug/multiset.h\n\t(multiset::multiset<_Iter>(_Iter, _Iter, const _Alloc&)): Likewise.\n\t(multiset::multiset<_Iter>(_Iter, _Iter, const _Compare&,\n\tconst _Alloc&)): Likewise.\n\t* include/debug/string\n\t(basic_string::basic_string<_Iter>(_Iter, _Iter, const _Alloc&)):\n\tLikewise.\n\t* include/debug/unordered_map\n\t(unordered_map::unordered_map<_Iter>(_Iter, _Iter, const _Alloc&)):\n\tLikewise.\n\t(unordered_multimap::unordered_multimap<_Iter>(_Iter, _Iter,\n\tconst _Alloc&)): Likewise.\n\t* include/debug/unordered_set\n\t(unordered_set::unordered_set<_Iter>(_Iter, _Iter, const _Alloc&)):\n\tLikewise.\n\t(unordered_multiset::unordered_multiset<_Iter>(_Iter, _Iter,\n\tconst _Alloc&)): Likewise.\n\t* include/debug/vector\n\t(vector::vector<_Iter>(_Iter, _Iter, const _Alloc&)): Use latter.\n\nFrom-SVN: r260053", "tree": {"sha": "add19c3d5a6dd615a4bc7e3857c1086d1bdb19c4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/add19c3d5a6dd615a4bc7e3857c1086d1bdb19c4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/90aabc7e9be942324952d8705e753ff02cf631a3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/90aabc7e9be942324952d8705e753ff02cf631a3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/90aabc7e9be942324952d8705e753ff02cf631a3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/90aabc7e9be942324952d8705e753ff02cf631a3/comments", "author": null, "committer": null, "parents": [{"sha": "a5277405c8ec3cc34a48c1498abcfc3145046477", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a5277405c8ec3cc34a48c1498abcfc3145046477", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a5277405c8ec3cc34a48c1498abcfc3145046477"}], "stats": {"total": 133, "additions": 96, "deletions": 37}, "files": [{"sha": "bf1e80333beb9cb27b44c4721f419ea0bc5083be", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 45, "deletions": 0, "changes": 45, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/90aabc7e9be942324952d8705e753ff02cf631a3/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/90aabc7e9be942324952d8705e753ff02cf631a3/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=90aabc7e9be942324952d8705e753ff02cf631a3", "patch": "@@ -1,5 +1,50 @@\n 2018-05-08  Fran\u00e7ois Dumont  <fdumont@gcc.gnu.org>\n \n+\t* include/debug/macros.h (__glibcxx_check_valid_range_at): New.\n+\t* include/debug/functions.h (__check_valid_range): Use latter.\n+\t* include/debug/macros.h (__glibcxx_check_valid_constructor_range): New,\n+\tuse latter.\n+\t* include/debug/deque\n+\t(deque::deque<_Iter>(_Iter, _Iter, const _Alloc&)): Use latter.\n+\t* include/debug/forward_list\n+\t(forward_list::forward_list<_Iter>(_Iter, _Iter, const _Alloc&)):\n+\tLikewise.\n+\t* include/debug/list\n+\t(list::list<_Iter>(_Iter, _Iter, const _Alloc&)): Likewise.\n+\t* include/debug/list\n+\t(list::list<_Iter>(_Iter, _Iter, const _Alloc&)): Likewise.\n+\t* include/debug/map.h\n+\t(map::map<_Iter>(_Iter, _Iter, const _Alloc&)): Likewise.\n+\t(map::map<_Iter>(_Iter, _Iter, const _Compare&, const _Alloc&)):\n+\tLikewise.\n+\t* include/debug/multimap.h\n+\t(multimap::multimap<_Iter>(_Iter, _Iter, const _Alloc&)): Likewise.\n+\t(multimap::multimap<_Iter>(_Iter, _Iter, const _Compare&,\n+\tconst _Alloc&)): Likewise.\n+\t* include/debug/set.h\n+\t(set::set<_Iter>(_Iter, _Iter, const _Alloc&)): Likewise.\n+\t(set::set<_Iter>(_Iter, _Iter, const _Compare&, const _Alloc&)):\n+\tLikewise.\n+\t* include/debug/multiset.h\n+\t(multiset::multiset<_Iter>(_Iter, _Iter, const _Alloc&)): Likewise.\n+\t(multiset::multiset<_Iter>(_Iter, _Iter, const _Compare&,\n+\tconst _Alloc&)): Likewise.\n+\t* include/debug/string\n+\t(basic_string::basic_string<_Iter>(_Iter, _Iter, const _Alloc&)):\n+\tLikewise.\n+\t* include/debug/unordered_map\n+\t(unordered_map::unordered_map<_Iter>(_Iter, _Iter, const _Alloc&)):\n+\tLikewise.\n+\t(unordered_multimap::unordered_multimap<_Iter>(_Iter, _Iter,\n+\tconst _Alloc&)): Likewise.\n+\t* include/debug/unordered_set\n+\t(unordered_set::unordered_set<_Iter>(_Iter, _Iter, const _Alloc&)):\n+\tLikewise.\n+\t(unordered_multiset::unordered_multiset<_Iter>(_Iter, _Iter,\n+\tconst _Alloc&)): Likewise.\n+\t* include/debug/vector\n+\t(vector::vector<_Iter>(_Iter, _Iter, const _Alloc&)): Use latter.\n+\n \t* include/debug/formatter.h (_Error_formatter::_M_function): New.\n \t(_Error_formatter(const char*, unsigned int)): Adapt.\n \t(_Error_formatter::_M_at): Rename in..."}, {"sha": "93b82cf0cdc14c0799933bfd03c15aca41d6b1e0", "filename": "libstdc++-v3/include/debug/deque", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/90aabc7e9be942324952d8705e753ff02cf631a3/libstdc%2B%2B-v3%2Finclude%2Fdebug%2Fdeque", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/90aabc7e9be942324952d8705e753ff02cf631a3/libstdc%2B%2B-v3%2Finclude%2Fdebug%2Fdeque", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fdebug%2Fdeque?ref=90aabc7e9be942324952d8705e753ff02cf631a3", "patch": "@@ -130,8 +130,8 @@ namespace __debug\n #endif\n \tdeque(_InputIterator __first, _InputIterator __last,\n \t      const _Allocator& __a = _Allocator())\n-\t: _Base(__gnu_debug::__base(__gnu_debug::__check_valid_range(__first,\n-\t\t\t\t\t\t\t\t     __last)),\n+\t: _Base(__gnu_debug::__base(\n+\t\t  __glibcxx_check_valid_constructor_range(__first, __last)),\n \t\t__gnu_debug::__base(__last), __a)\n \t{ }\n "}, {"sha": "633af1a90e7a7eb36efdf7c7de1dc80fa6b3dadd", "filename": "libstdc++-v3/include/debug/forward_list", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/90aabc7e9be942324952d8705e753ff02cf631a3/libstdc%2B%2B-v3%2Finclude%2Fdebug%2Fforward_list", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/90aabc7e9be942324952d8705e753ff02cf631a3/libstdc%2B%2B-v3%2Finclude%2Fdebug%2Fforward_list", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fdebug%2Fforward_list?ref=90aabc7e9be942324952d8705e753ff02cf631a3", "patch": "@@ -241,8 +241,8 @@ namespace __debug\n \t       typename = std::_RequireInputIter<_InputIterator>>\n \tforward_list(_InputIterator __first, _InputIterator __last,\n \t\t     const allocator_type& __al = allocator_type())\n-\t: _Base(__gnu_debug::__base(__gnu_debug::__check_valid_range(__first,\n-\t\t\t\t\t\t\t\t     __last)),\n+\t: _Base(__gnu_debug::__base(\n+\t\t  __glibcxx_check_valid_constructor_range(__first, __last)),\n \t\t__gnu_debug::__base(__last), __al)\n \t{ }\n "}, {"sha": "3a2ba74fbbeb2ece38213c53e1b90fa4a921a834", "filename": "libstdc++-v3/include/debug/functions.h", "status": "modified", "additions": 6, "deletions": 3, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/90aabc7e9be942324952d8705e753ff02cf631a3/libstdc%2B%2B-v3%2Finclude%2Fdebug%2Ffunctions.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/90aabc7e9be942324952d8705e753ff02cf631a3/libstdc%2B%2B-v3%2Finclude%2Fdebug%2Ffunctions.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fdebug%2Ffunctions.h?ref=90aabc7e9be942324952d8705e753ff02cf631a3", "patch": "@@ -87,10 +87,13 @@ namespace __gnu_debug\n   template<typename _InputIterator>\n     inline _InputIterator\n     __check_valid_range(const _InputIterator& __first,\n-\t\t\tconst _InputIterator& __last\n-\t\t\t__attribute__((__unused__)))\n+\t\t\tconst _InputIterator& __last,\n+\t\t\tconst char* __file,\n+\t\t\tunsigned int __line,\n+\t\t\tconst char* __function)\n     {\n-      __glibcxx_check_valid_range(__first, __last);\n+      __glibcxx_check_valid_range_at(__first, __last,\n+\t\t\t\t     __file, __line, __function);\n       return __first;\n     }\n "}, {"sha": "e37ebf1a3eb4a196a6f71c9c22386bd36ce4093b", "filename": "libstdc++-v3/include/debug/list", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/90aabc7e9be942324952d8705e753ff02cf631a3/libstdc%2B%2B-v3%2Finclude%2Fdebug%2Flist", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/90aabc7e9be942324952d8705e753ff02cf631a3/libstdc%2B%2B-v3%2Finclude%2Fdebug%2Flist", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fdebug%2Flist?ref=90aabc7e9be942324952d8705e753ff02cf631a3", "patch": "@@ -131,8 +131,8 @@ namespace __debug\n #endif\n \tlist(_InputIterator __first, _InputIterator __last,\n \t     const _Allocator& __a = _Allocator())\n-\t: _Base(__gnu_debug::__base(__gnu_debug::__check_valid_range(__first,\n-\t\t\t\t\t\t\t\t     __last)),\n+\t: _Base(__gnu_debug::__base(\n+\t\t  __glibcxx_check_valid_constructor_range(__first, __last)),\n \t\t__gnu_debug::__base(__last), __a)\n \t{ }\n "}, {"sha": "824d399941c100460736e811ac65fdf7bf90c443", "filename": "libstdc++-v3/include/debug/macros.h", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/90aabc7e9be942324952d8705e753ff02cf631a3/libstdc%2B%2B-v3%2Finclude%2Fdebug%2Fmacros.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/90aabc7e9be942324952d8705e753ff02cf631a3/libstdc%2B%2B-v3%2Finclude%2Fdebug%2Fmacros.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fdebug%2Fmacros.h?ref=90aabc7e9be942324952d8705e753ff02cf631a3", "patch": "@@ -60,12 +60,23 @@ _GLIBCXX_DEBUG_VERIFY(__gnu_debug::__valid_range(_First, _Last),\t\\\n \t\t      ._M_iterator(_First, #_First)\t\t\t\\\n \t\t      ._M_iterator(_Last, #_Last))\n \n+#define __glibcxx_check_valid_range_at(_First,_Last,_File,_Line,_Func)\t\\\n+_GLIBCXX_DEBUG_VERIFY_AT_F(__gnu_debug::__valid_range(_First, _Last),\t\\\n+\t\t\t   _M_message(__gnu_debug::__msg_valid_range)\t\\\n+\t\t\t   ._M_iterator(_First, #_First)\t\t\\\n+\t\t\t   ._M_iterator(_Last, #_Last),\t\t\t\\\n+\t\t\t   _File,_Line,_Func)\n+\n #define __glibcxx_check_valid_range2(_First,_Last,_Dist)\t\t\\\n _GLIBCXX_DEBUG_VERIFY(__gnu_debug::__valid_range(_First, _Last, _Dist),\t\\\n \t\t      _M_message(__gnu_debug::__msg_valid_range)\t\\\n \t\t      ._M_iterator(_First, #_First)\t\t\t\\\n \t\t      ._M_iterator(_Last, #_Last))\n \n+#define __glibcxx_check_valid_constructor_range(_First,_Last)\t\t\\\n+  __gnu_debug::__check_valid_range(_First, _Last,\t\t\t\\\n+\t\t\t\t   __FILE__, __LINE__, __PRETTY_FUNCTION__)\n+\n // Verify that [_First, _Last) forms a non-empty iterator range.\n #define __glibcxx_check_non_empty_range(_First,_Last)\t\t\t\\\n _GLIBCXX_DEBUG_VERIFY(_First != _Last,\t\t\t\t\t\\"}, {"sha": "3f0649aef9e60c7ba0fc1614d50f015d1150b3b6", "filename": "libstdc++-v3/include/debug/map.h", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/90aabc7e9be942324952d8705e753ff02cf631a3/libstdc%2B%2B-v3%2Finclude%2Fdebug%2Fmap.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/90aabc7e9be942324952d8705e753ff02cf631a3/libstdc%2B%2B-v3%2Finclude%2Fdebug%2Fmap.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fdebug%2Fmap.h?ref=90aabc7e9be942324952d8705e753ff02cf631a3", "patch": "@@ -114,8 +114,8 @@ namespace __debug\n       template<typename _InputIterator>\n \tmap(_InputIterator __first, _InputIterator __last,\n \t    const allocator_type& __a)\n-\t: _Base(__gnu_debug::__base(__gnu_debug::__check_valid_range(__first,\n-\t\t\t\t\t\t\t\t     __last)),\n+\t: _Base(__gnu_debug::__base(\n+\t\t  __glibcxx_check_valid_constructor_range(__first, __last)),\n \t\t__gnu_debug::__base(__last), __a)\n \t{ }\n \n@@ -133,8 +133,8 @@ namespace __debug\n \tmap(_InputIterator __first, _InputIterator __last,\n \t    const _Compare& __comp = _Compare(),\n \t    const _Allocator& __a = _Allocator())\n-\t: _Base(__gnu_debug::__base(__gnu_debug::__check_valid_range(__first,\n-\t\t\t\t\t\t\t\t     __last)),\n+\t: _Base(__gnu_debug::__base(\n+\t\t  __glibcxx_check_valid_constructor_range(__first, __last)),\n \t\t__gnu_debug::__base(__last),\n \t\t__comp, __a) { }\n "}, {"sha": "e709eb7452f116e71dab1e01d16a7dcda44f910a", "filename": "libstdc++-v3/include/debug/multimap.h", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/90aabc7e9be942324952d8705e753ff02cf631a3/libstdc%2B%2B-v3%2Finclude%2Fdebug%2Fmultimap.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/90aabc7e9be942324952d8705e753ff02cf631a3/libstdc%2B%2B-v3%2Finclude%2Fdebug%2Fmultimap.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fdebug%2Fmultimap.h?ref=90aabc7e9be942324952d8705e753ff02cf631a3", "patch": "@@ -114,8 +114,8 @@ namespace __debug\n       template<typename _InputIterator>\n \tmultimap(_InputIterator __first, _InputIterator __last,\n \t\t const allocator_type& __a)\n-\t: _Base(__gnu_debug::__base(__gnu_debug::__check_valid_range(__first,\n-\t\t\t\t\t\t\t\t     __last)),\n+\t: _Base(__gnu_debug::__base(\n+\t\t  __glibcxx_check_valid_constructor_range(__first, __last)),\n \t\t__gnu_debug::__base(__last), __a) { }\n \n       ~multimap() = default;\n@@ -129,8 +129,8 @@ namespace __debug\n       multimap(_InputIterator __first, _InputIterator __last,\n \t       const _Compare& __comp = _Compare(),\n \t       const _Allocator& __a = _Allocator())\n-\t: _Base(__gnu_debug::__base(__gnu_debug::__check_valid_range(__first,\n-\t\t\t\t\t\t\t\t     __last)),\n+\t: _Base(__gnu_debug::__base(\n+\t\t  __glibcxx_check_valid_constructor_range(__first, __last)),\n \t\t__gnu_debug::__base(__last),\n \t      __comp, __a) { }\n "}, {"sha": "461f4f632ddd0313006b545cd7d7c28622437ff2", "filename": "libstdc++-v3/include/debug/multiset.h", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/90aabc7e9be942324952d8705e753ff02cf631a3/libstdc%2B%2B-v3%2Finclude%2Fdebug%2Fmultiset.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/90aabc7e9be942324952d8705e753ff02cf631a3/libstdc%2B%2B-v3%2Finclude%2Fdebug%2Fmultiset.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fdebug%2Fmultiset.h?ref=90aabc7e9be942324952d8705e753ff02cf631a3", "patch": "@@ -114,8 +114,8 @@ namespace __debug\n       template<typename _InputIterator>\n \tmultiset(_InputIterator __first, _InputIterator __last,\n \t\t const allocator_type& __a)\n-\t: _Base(__gnu_debug::__base(__gnu_debug::__check_valid_range(__first,\n-\t\t\t\t\t\t\t\t     __last)),\n+\t: _Base(__gnu_debug::__base(\n+\t\t  __glibcxx_check_valid_constructor_range(__first, __last)),\n \t\t__gnu_debug::__base(__last), __a) { }\n \n       ~multiset() = default;\n@@ -129,8 +129,8 @@ namespace __debug\n \tmultiset(_InputIterator __first, _InputIterator __last,\n \t\t const _Compare& __comp = _Compare(),\n \t\t const _Allocator& __a = _Allocator())\n-\t: _Base(__gnu_debug::__base(__gnu_debug::__check_valid_range(__first,\n-\t\t\t\t\t\t\t\t     __last)),\n+\t: _Base(__gnu_debug::__base(\n+\t\t  __glibcxx_check_valid_constructor_range(__first, __last)),\n \t\t__gnu_debug::__base(__last),\n \t\t__comp, __a) { }\n "}, {"sha": "2ac8f1c1fab75569190e03800722b8a62cedcc57", "filename": "libstdc++-v3/include/debug/set.h", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/90aabc7e9be942324952d8705e753ff02cf631a3/libstdc%2B%2B-v3%2Finclude%2Fdebug%2Fset.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/90aabc7e9be942324952d8705e753ff02cf631a3/libstdc%2B%2B-v3%2Finclude%2Fdebug%2Fset.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fdebug%2Fset.h?ref=90aabc7e9be942324952d8705e753ff02cf631a3", "patch": "@@ -113,8 +113,8 @@ namespace __debug\n       template<typename _InputIterator>\n \tset(_InputIterator __first, _InputIterator __last,\n \t    const allocator_type& __a)\n-\t: _Base(__gnu_debug::__base(__gnu_debug::__check_valid_range(__first,\n-\t\t\t\t\t\t\t\t     __last)),\n+\t: _Base(__gnu_debug::__base(\n+\t\t  __glibcxx_check_valid_constructor_range(__first, __last)),\n \t\t__gnu_debug::__base(__last), __a) { }\n \n       ~set() = default;\n@@ -128,8 +128,8 @@ namespace __debug\n \tset(_InputIterator __first, _InputIterator __last,\n \t    const _Compare& __comp = _Compare(),\n \t    const _Allocator& __a = _Allocator())\n-\t: _Base(__gnu_debug::__base(__gnu_debug::__check_valid_range(__first,\n-\t\t\t\t\t\t\t\t     __last)),\n+\t: _Base(__gnu_debug::__base(\n+\t\t  __glibcxx_check_valid_constructor_range(__first, __last)),\n \t\t__gnu_debug::__base(__last),\n \t\t__comp, __a) { }\n "}, {"sha": "0aa5e9cf82572cb960c73e66589c230c9dcad03d", "filename": "libstdc++-v3/include/debug/string", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/90aabc7e9be942324952d8705e753ff02cf631a3/libstdc%2B%2B-v3%2Finclude%2Fdebug%2Fstring", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/90aabc7e9be942324952d8705e753ff02cf631a3/libstdc%2B%2B-v3%2Finclude%2Fdebug%2Fstring", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fdebug%2Fstring?ref=90aabc7e9be942324952d8705e753ff02cf631a3", "patch": "@@ -138,8 +138,8 @@ template<typename _CharT, typename _Traits = std::char_traits<_CharT>,\n     template<typename _InputIterator>\n       basic_string(_InputIterator __begin, _InputIterator __end,\n \t\t   const _Allocator& __a = _Allocator())\n-      : _Base(__gnu_debug::__base(__gnu_debug::__check_valid_range(__begin,\n-\t\t\t\t\t\t\t\t   __end)),\n+      : _Base(__gnu_debug::__base(\n+\t\t  __glibcxx_check_valid_constructor_range(__begin, __end)),\n \t      __gnu_debug::__base(__end), __a) { }\n \n #if __cplusplus < 201103L"}, {"sha": "e4f7c5ca733bdb04acefb70d7985f88335ea918f", "filename": "libstdc++-v3/include/debug/unordered_map", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/90aabc7e9be942324952d8705e753ff02cf631a3/libstdc%2B%2B-v3%2Finclude%2Fdebug%2Funordered_map", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/90aabc7e9be942324952d8705e753ff02cf631a3/libstdc%2B%2B-v3%2Finclude%2Fdebug%2Funordered_map", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fdebug%2Funordered_map?ref=90aabc7e9be942324952d8705e753ff02cf631a3", "patch": "@@ -99,8 +99,8 @@ namespace __debug\n \t\t      const hasher& __hf = hasher(),\n \t\t      const key_equal& __eql = key_equal(),\n \t\t      const allocator_type& __a = allocator_type())\n-\t: _Base(__gnu_debug::__base(__gnu_debug::__check_valid_range(__first,\n-\t\t\t\t\t\t\t\t     __last)),\n+\t: _Base(__gnu_debug::__base(\n+\t\t  __glibcxx_check_valid_constructor_range(__first, __last)),\n \t\t__gnu_debug::__base(__last), __n,\n \t\t__hf, __eql, __a) { }\n \n@@ -785,8 +785,8 @@ namespace __debug\n \t\t\t   const hasher& __hf = hasher(),\n \t\t\t   const key_equal& __eql = key_equal(),\n \t\t\t   const allocator_type& __a = allocator_type())\n-\t: _Base(__gnu_debug::__base(__gnu_debug::__check_valid_range(__first,\n-\t\t\t\t\t\t\t\t     __last)),\n+\t: _Base(__gnu_debug::__base(\n+\t\t  __glibcxx_check_valid_constructor_range(__first, __last)),\n \t\t__gnu_debug::__base(__last), __n,\n \t\t__hf, __eql, __a) { }\n "}, {"sha": "adafdb73a4f4643b975e450cf180e13d7204eb21", "filename": "libstdc++-v3/include/debug/unordered_set", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/90aabc7e9be942324952d8705e753ff02cf631a3/libstdc%2B%2B-v3%2Finclude%2Fdebug%2Funordered_set", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/90aabc7e9be942324952d8705e753ff02cf631a3/libstdc%2B%2B-v3%2Finclude%2Fdebug%2Funordered_set", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fdebug%2Funordered_set?ref=90aabc7e9be942324952d8705e753ff02cf631a3", "patch": "@@ -99,8 +99,8 @@ namespace __debug\n \t\t      const hasher& __hf = hasher(),\n \t\t      const key_equal& __eql = key_equal(),\n \t\t      const allocator_type& __a = allocator_type())\n-\t: _Base(__gnu_debug::__base(__gnu_debug::__check_valid_range(__first,\n-\t\t\t\t\t\t\t\t     __last)),\n+\t: _Base(__gnu_debug::__base(\n+\t\t  __glibcxx_check_valid_constructor_range(__first, __last)),\n \t\t__gnu_debug::__base(__last), __n,\n \t\t__hf, __eql, __a) { }\n \n@@ -662,8 +662,8 @@ namespace __debug\n \t\t\t   const hasher& __hf = hasher(),\n \t\t\t   const key_equal& __eql = key_equal(),\n \t\t\t   const allocator_type& __a = allocator_type())\n-\t: _Base(__gnu_debug::__base(__gnu_debug::__check_valid_range(__first,\n-\t\t\t\t\t\t\t\t     __last)),\n+\t: _Base(__gnu_debug::__base(\n+\t\t  __glibcxx_check_valid_constructor_range(__first, __last)),\n \t\t__gnu_debug::__base(__last), __n,\n \t\t__hf, __eql, __a) { }\n "}, {"sha": "8d60da328e1af36b4be82574ee19891077137c8b", "filename": "libstdc++-v3/include/debug/vector", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/90aabc7e9be942324952d8705e753ff02cf631a3/libstdc%2B%2B-v3%2Finclude%2Fdebug%2Fvector", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/90aabc7e9be942324952d8705e753ff02cf631a3/libstdc%2B%2B-v3%2Finclude%2Fdebug%2Fvector", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fdebug%2Fvector?ref=90aabc7e9be942324952d8705e753ff02cf631a3", "patch": "@@ -182,8 +182,8 @@ namespace __debug\n #endif\n \tvector(_InputIterator __first, _InputIterator __last,\n \t       const _Allocator& __a = _Allocator())\n-\t: _Base(__gnu_debug::__base(__gnu_debug::__check_valid_range(__first,\n-\t\t\t\t\t\t\t\t     __last)),\n+\t: _Base(__gnu_debug::__base(\n+\t\t  __glibcxx_check_valid_constructor_range(__first, __last)),\n \t\t__gnu_debug::__base(__last), __a) { }\n \n #if __cplusplus < 201103L"}]}