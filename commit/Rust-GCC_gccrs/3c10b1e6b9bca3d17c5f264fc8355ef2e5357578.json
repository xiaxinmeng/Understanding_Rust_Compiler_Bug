{"sha": "3c10b1e6b9bca3d17c5f264fc8355ef2e5357578", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2MxMGIxZTZiOWJjYTNkMTdjNWYyNjRmYzgzNTVlZjJlNTM1NzU3OA==", "commit": {"author": {"name": "Jan Hubicka", "email": "hubicka@ucw.cz", "date": "2016-03-29T22:03:00Z"}, "committer": {"name": "Jan Hubicka", "email": "hubicka@gcc.gnu.org", "date": "2016-03-29T22:03:00Z"}, "message": "tree-ssa-loop-ivcanon.c (try_peel_loop): Change type of peel to HOST_WIDE_INT.\n\n\t* tree-ssa-loop-ivcanon.c (try_peel_loop): Change type of peel\n\tto HOST_WIDE_INT.\n\nFrom-SVN: r234537", "tree": {"sha": "38aff6e1c43caa9cdaa940ce1e6e7646277da3c6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/38aff6e1c43caa9cdaa940ce1e6e7646277da3c6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3c10b1e6b9bca3d17c5f264fc8355ef2e5357578", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3c10b1e6b9bca3d17c5f264fc8355ef2e5357578", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3c10b1e6b9bca3d17c5f264fc8355ef2e5357578", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3c10b1e6b9bca3d17c5f264fc8355ef2e5357578/comments", "author": null, "committer": null, "parents": [{"sha": "0987bf0d7e6e41a5991f3ebc9ae08b24f2194eaa", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0987bf0d7e6e41a5991f3ebc9ae08b24f2194eaa", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0987bf0d7e6e41a5991f3ebc9ae08b24f2194eaa"}], "stats": {"total": 13, "additions": 9, "deletions": 4}, "files": [{"sha": "c0691c523ae07f087b0df9c02e78a40ed8c7ab80", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3c10b1e6b9bca3d17c5f264fc8355ef2e5357578/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3c10b1e6b9bca3d17c5f264fc8355ef2e5357578/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=3c10b1e6b9bca3d17c5f264fc8355ef2e5357578", "patch": "@@ -1,3 +1,8 @@\n+2016-03-10  Jan Hubicka  <hubicka@ucw.cz>\n+\n+\t* tree-ssa-loop-ivcanon.c (try_peel_loop): Change type of peel\n+\tto HOST_WIDE_INT.\n+\n 2016-03-29  Thomas Schwinge  <thomas@codesourcery.com>\n \n \t* config/gnu.h (CPP_SPEC, LIB_SPEC): Don't override."}, {"sha": "9b59b4466c3203311cdd4346ef77f5af596890b6", "filename": "gcc/tree-ssa-loop-ivcanon.c", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3c10b1e6b9bca3d17c5f264fc8355ef2e5357578/gcc%2Ftree-ssa-loop-ivcanon.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3c10b1e6b9bca3d17c5f264fc8355ef2e5357578/gcc%2Ftree-ssa-loop-ivcanon.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-loop-ivcanon.c?ref=3c10b1e6b9bca3d17c5f264fc8355ef2e5357578", "patch": "@@ -935,7 +935,7 @@ try_peel_loop (struct loop *loop,\n \t       edge exit, tree niter,\n \t       HOST_WIDE_INT maxiter)\n {\n-  int npeel;\n+  HOST_WIDE_INT npeel;\n   struct loop_size size;\n   int peeled_size;\n   sbitmap wont_exit;\n@@ -990,15 +990,15 @@ try_peel_loop (struct loop *loop,\n     {\n       if (dump_file)\n         fprintf (dump_file, \"Not peeling: rolls too much \"\n-\t\t \"(%i + 1 > --param max-peel-times)\\n\", npeel);\n+\t\t \"(%i + 1 > --param max-peel-times)\\n\", (int) npeel);\n       return false;\n     }\n   npeel++;\n \n   /* Check peeled loops size.  */\n   tree_estimate_loop_size (loop, exit, NULL, &size,\n \t\t\t   PARAM_VALUE (PARAM_MAX_PEELED_INSNS));\n-  if ((peeled_size = estimated_peeled_sequence_size (&size, npeel))\n+  if ((peeled_size = estimated_peeled_sequence_size (&size, (int) npeel))\n       > PARAM_VALUE (PARAM_MAX_PEELED_INSNS))\n     {\n       if (dump_file)\n@@ -1032,7 +1032,7 @@ try_peel_loop (struct loop *loop,\n   if (dump_file && (dump_flags & TDF_DETAILS))\n     {\n       fprintf (dump_file, \"Peeled loop %d, %i times.\\n\",\n-\t       loop->num, npeel);\n+\t       loop->num, (int) npeel);\n     }\n   if (loop->any_upper_bound)\n     loop->nb_iterations_upper_bound -= npeel;"}]}