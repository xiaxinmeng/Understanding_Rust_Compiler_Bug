{"sha": "cd2705aadedff9e94b72b66cfc1e45937bec8602", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2QyNzA1YWFkZWRmZjllOTRiNzJiNjZjZmMxZTQ1OTM3YmVjODYwMg==", "commit": {"author": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2012-01-17T19:50:59Z"}, "committer": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2012-01-17T19:50:59Z"}, "message": "compiler: Don't use import path for ./ or ../ imports.\n\nFrom-SVN: r183261", "tree": {"sha": "a0a6fd9e1a1f4e8dac8c30dc39b7afb77455101f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a0a6fd9e1a1f4e8dac8c30dc39b7afb77455101f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/cd2705aadedff9e94b72b66cfc1e45937bec8602", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cd2705aadedff9e94b72b66cfc1e45937bec8602", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cd2705aadedff9e94b72b66cfc1e45937bec8602", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cd2705aadedff9e94b72b66cfc1e45937bec8602/comments", "author": null, "committer": null, "parents": [{"sha": "ee3d2ecdc509868214e682f4192cf7047d57a78d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ee3d2ecdc509868214e682f4192cf7047d57a78d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ee3d2ecdc509868214e682f4192cf7047d57a78d"}], "stats": {"total": 17, "additions": 14, "deletions": 3}, "files": [{"sha": "fc9c1505c130b19a739084673c0725fc6c0c0d2b", "filename": "gcc/go/gofrontend/import.cc", "status": "modified", "additions": 14, "deletions": 3, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd2705aadedff9e94b72b66cfc1e45937bec8602/gcc%2Fgo%2Fgofrontend%2Fimport.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd2705aadedff9e94b72b66cfc1e45937bec8602/gcc%2Fgo%2Fgofrontend%2Fimport.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgo%2Fgofrontend%2Fimport.cc?ref=cd2705aadedff9e94b72b66cfc1e45937bec8602", "patch": "@@ -42,8 +42,8 @@ const char* const Import::import_marker = \"*imported*\";\n // returns a pointer to a Stream object to read the data that it\n // exports.  If the file is not found, it returns NULL.\n \n-// When FILENAME is not an absolute path, we use the search path\n-// provided by -I and -L options.\n+// When FILENAME is not an absolute path and does not start with ./ or\n+// ../, we use the search path provided by -I and -L options.\n \n // When FILENAME does not exist, we try modifying FILENAME to find the\n // file.  We use the first of these which exists:\n@@ -61,7 +61,18 @@ const char* const Import::import_marker = \"*imported*\";\n Import::Stream*\n Import::open_package(const std::string& filename, Location location)\n {\n-  if (!IS_ABSOLUTE_PATH(filename))\n+  bool is_local;\n+  if (IS_ABSOLUTE_PATH(filename))\n+    is_local = true;\n+  else if (filename[0] == '.' && IS_DIR_SEPARATOR(filename[1]))\n+    is_local = true;\n+  else if (filename[0] == '.'\n+\t   && filename[1] == '.'\n+\t   && IS_DIR_SEPARATOR(filename[2]))\n+    is_local = true;\n+  else\n+    is_local = false;\n+  if (!is_local)\n     {\n       for (std::vector<std::string>::const_iterator p = search_path.begin();\n \t   p != search_path.end();"}]}