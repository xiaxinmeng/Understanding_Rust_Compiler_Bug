{"sha": "21bdef94b1e8c178e932cb5b560726c2c8c00323", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjFiZGVmOTRiMWU4YzE3OGU5MzJjYjViNTYwNzI2YzJjOGMwMDMyMw==", "commit": {"author": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2015-06-17T17:45:45Z"}, "committer": {"name": "Jonathan Wakely", "email": "redi@gcc.gnu.org", "date": "2015-06-17T17:45:45Z"}, "message": "forward_list.h (_Fwd_list_base(const _Node_alloc_type&)): Change parameter to rvalue-reference.\n\n\t* include/bits/forward_list.h\n\t(_Fwd_list_base(const _Node_alloc_type&)): Change parameter to\n\trvalue-reference.\n\t(_Fwd_list_base(_Fwd_list_base&&, const _Node_alloc_type&)): Likewise.\n\t(forward_list(const _Alloc&)): Split default constructor out to\n\tseparate function.\n\t(forward_list(forward_list&&, const _Alloc&)): Move elements if base\n\tclass didn't do so.\n\t(forward_list::_M_move_assign(forward_list&&, true_type)): Replace\n\tswap call with two assignments.\n\t* include/bits/forward_list.tcc\n\t(_Fwd_list_base(_Fwd_list_base&&, const _Node_alloc_type&)): Don't\n\tmove elements when allocators are not equal.\n\t* include/debug/forward_list (forward_list(const allocator_type&)):\n\tSplit default constructor out to separate function.\n\t* include/profile/forward_list (forward_list(const _Alloc&)):\n\tLikewise.\n\nFrom-SVN: r224566", "tree": {"sha": "86bc0511ca3b5bdc6195116ae2e7545cb0516f94", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/86bc0511ca3b5bdc6195116ae2e7545cb0516f94"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/21bdef94b1e8c178e932cb5b560726c2c8c00323", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/21bdef94b1e8c178e932cb5b560726c2c8c00323", "html_url": "https://github.com/Rust-GCC/gccrs/commit/21bdef94b1e8c178e932cb5b560726c2c8c00323", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/21bdef94b1e8c178e932cb5b560726c2c8c00323/comments", "author": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "41571b55b1c023158fda594eafa431e943c87819", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/41571b55b1c023158fda594eafa431e943c87819", "html_url": "https://github.com/Rust-GCC/gccrs/commit/41571b55b1c023158fda594eafa431e943c87819"}], "stats": {"total": 77, "additions": 52, "deletions": 25}, "files": [{"sha": "ea0a60d4b9e00a4e55b6b7cdace96a5c82858088", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21bdef94b1e8c178e932cb5b560726c2c8c00323/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21bdef94b1e8c178e932cb5b560726c2c8c00323/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=21bdef94b1e8c178e932cb5b560726c2c8c00323", "patch": "@@ -1,5 +1,23 @@\n 2015-06-17  Jonathan Wakely  <jwakely@redhat.com>\n \n+\t* include/bits/forward_list.h\n+\t(_Fwd_list_base(const _Node_alloc_type&)): Change parameter to\n+\trvalue-reference.\n+\t(_Fwd_list_base(_Fwd_list_base&&, const _Node_alloc_type&)): Likewise.\n+\t(forward_list(const _Alloc&)): Split default constructor out to\n+\tseparate function.\n+\t(forward_list(forward_list&&, const _Alloc&)): Move elements if base\n+\tclass didn't do so.\n+\t(forward_list::_M_move_assign(forward_list&&, true_type)): Replace\n+\tswap call with two assignments.\n+\t* include/bits/forward_list.tcc\n+\t(_Fwd_list_base(_Fwd_list_base&&, const _Node_alloc_type&)): Don't\n+\tmove elements when allocators are not equal.\n+\t* include/debug/forward_list (forward_list(const allocator_type&)):\n+\tSplit default constructor out to separate function.\n+\t* include/profile/forward_list (forward_list(const _Alloc&)):\n+\tLikewise.\n+\n \t* include/bits/forward_list.h (forward_list::_M_get_Node_allocator):\n \tRemove unnecessary uses of operator& and static_cast.\n \t* include/bits/forward_list.tcc"}, {"sha": "57c2d7bbfbb9cdfe19288bd13dafec81f0f7b03c", "filename": "libstdc++-v3/include/bits/forward_list.h", "status": "modified", "additions": 22, "deletions": 7, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21bdef94b1e8c178e932cb5b560726c2c8c00323/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fforward_list.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21bdef94b1e8c178e932cb5b560726c2c8c00323/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fforward_list.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fforward_list.h?ref=21bdef94b1e8c178e932cb5b560726c2c8c00323", "patch": "@@ -314,10 +314,10 @@ _GLIBCXX_BEGIN_NAMESPACE_CONTAINER\n       _Fwd_list_base()\n       : _M_impl() { }\n \n-      _Fwd_list_base(const _Node_alloc_type& __a)\n-      : _M_impl(__a) { }\n+      _Fwd_list_base(_Node_alloc_type&& __a)\n+      : _M_impl(std::move(__a)) { }\n \n-      _Fwd_list_base(_Fwd_list_base&& __lst, const _Node_alloc_type& __a);\n+      _Fwd_list_base(_Fwd_list_base&& __lst, _Node_alloc_type&& __a);\n \n       _Fwd_list_base(_Fwd_list_base&& __lst)\n       : _M_impl(std::move(__lst._M_get_Node_allocator()))\n@@ -433,15 +433,24 @@ _GLIBCXX_BEGIN_NAMESPACE_CONTAINER\n \n       // 23.3.4.2 construct/copy/destroy:\n \n+      /**\n+       *  @brief  Creates a %forward_list with no elements.\n+       */\n+      forward_list()\n+      noexcept(is_nothrow_default_constructible<_Node_alloc_type>::value)\n+      : _Base()\n+      { }\n+\n       /**\n        *  @brief  Creates a %forward_list with no elements.\n        *  @param  __al  An allocator object.\n        */\n       explicit\n-      forward_list(const _Alloc& __al = _Alloc())\n+      forward_list(const _Alloc& __al) noexcept\n       : _Base(_Node_alloc_type(__al))\n       { }\n \n+\n       /**\n        *  @brief  Copy constructor with allocator argument.\n        *  @param  __list  Input list to copy.\n@@ -459,7 +468,13 @@ _GLIBCXX_BEGIN_NAMESPACE_CONTAINER\n       forward_list(forward_list&& __list, const _Alloc& __al)\n       noexcept(_Node_alloc_traits::_S_always_equal())\n       : _Base(std::move(__list), _Node_alloc_type(__al))\n-      { }\n+      {\n+\t// If __list is not empty it means its allocator is not equal to __a,\n+\t// so we need to move from each element individually.\n+\tinsert_after(cbefore_begin(),\n+\t\t     std::__make_move_if_noexcept_iterator(__list.begin()),\n+\t\t     std::__make_move_if_noexcept_iterator(__list.end()));\n+      }\n \n       /**\n        *  @brief  Creates a %forward_list with default constructed elements.\n@@ -1248,8 +1263,8 @@ _GLIBCXX_BEGIN_NAMESPACE_CONTAINER\n       _M_move_assign(forward_list&& __list, std::true_type) noexcept\n       {\n         clear();\n-        std::swap(this->_M_impl._M_head._M_next,\n-                  __list._M_impl._M_head._M_next);\n+        this->_M_impl._M_head._M_next = __list._M_impl._M_head._M_next;\n+        __list._M_impl._M_head._M_next = nullptr;\n         std::__alloc_on_move(this->_M_get_Node_allocator(),\n                              __list._M_get_Node_allocator());\n       }"}, {"sha": "472020c0db528042174d03db9a5c0ae83b10e614", "filename": "libstdc++-v3/include/bits/forward_list.tcc", "status": "modified", "additions": 4, "deletions": 16, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21bdef94b1e8c178e932cb5b560726c2c8c00323/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fforward_list.tcc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21bdef94b1e8c178e932cb5b560726c2c8c00323/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fforward_list.tcc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fforward_list.tcc?ref=21bdef94b1e8c178e932cb5b560726c2c8c00323", "patch": "@@ -36,28 +36,16 @@ _GLIBCXX_BEGIN_NAMESPACE_CONTAINER\n \n   template<typename _Tp, typename _Alloc>\n     _Fwd_list_base<_Tp, _Alloc>::\n-    _Fwd_list_base(_Fwd_list_base&& __lst, const _Node_alloc_type& __a)\n-    : _M_impl(__a)\n+    _Fwd_list_base(_Fwd_list_base&& __lst, _Node_alloc_type&& __a)\n+    : _M_impl(std::move(__a))\n     {\n-      if (__lst._M_get_Node_allocator() == __a)\n+      if (__lst._M_get_Node_allocator() == _M_get_Node_allocator())\n \t{\n \t  this->_M_impl._M_head._M_next = __lst._M_impl._M_head._M_next;\n \t  __lst._M_impl._M_head._M_next = 0;\n \t}\n       else\n-        {\n-          this->_M_impl._M_head._M_next = 0;\n-          _Fwd_list_node_base* __to = &this->_M_impl._M_head;\n-          _Node* __curr = static_cast<_Node*>(__lst._M_impl._M_head._M_next);\n-\n-          while (__curr)\n-            {\n-              __to->_M_next =\n-                _M_create_node(std::move_if_noexcept(*__curr->_M_valptr()));\n-              __to = __to->_M_next;\n-              __curr = static_cast<_Node*>(__curr->_M_next);\n-            }\n-        }\n+\tthis->_M_impl._M_head._M_next = 0;\n     }\n \n   template<typename _Tp, typename _Alloc>"}, {"sha": "2b42a3f8d29512d739ff9972e313978d711901bc", "filename": "libstdc++-v3/include/debug/forward_list", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21bdef94b1e8c178e932cb5b560726c2c8c00323/libstdc%2B%2B-v3%2Finclude%2Fdebug%2Fforward_list", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21bdef94b1e8c178e932cb5b560726c2c8c00323/libstdc%2B%2B-v3%2Finclude%2Fdebug%2Fforward_list", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fdebug%2Fforward_list?ref=21bdef94b1e8c178e932cb5b560726c2c8c00323", "patch": "@@ -204,8 +204,11 @@ namespace __debug\n       typedef typename _Base::const_pointer\tconst_pointer;\n \n       // 23.2.3.1 construct/copy/destroy:\n+\n+      forward_list() = default;\n+\n       explicit\n-      forward_list(const allocator_type& __al = allocator_type())\n+      forward_list(const allocator_type& __al) noexcept\n       : _Base(__al) { }\n \n       forward_list(const forward_list& __list, const allocator_type& __al)"}, {"sha": "ab7ed04b75a5e1ed068f0d4de5eda8c1af4ea9b2", "filename": "libstdc++-v3/include/profile/forward_list", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21bdef94b1e8c178e932cb5b560726c2c8c00323/libstdc%2B%2B-v3%2Finclude%2Fprofile%2Fforward_list", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21bdef94b1e8c178e932cb5b560726c2c8c00323/libstdc%2B%2B-v3%2Finclude%2Fprofile%2Fforward_list", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fprofile%2Fforward_list?ref=21bdef94b1e8c178e932cb5b560726c2c8c00323", "patch": "@@ -51,8 +51,11 @@ namespace __profile\n       typedef typename _Base::const_iterator\tconst_iterator;\n \n       // 23.2.3.1 construct/copy/destroy:\n+\n+      forward_list() = default;\n+\n       explicit\n-      forward_list(const _Alloc& __al = _Alloc())\n+      forward_list(const _Alloc& __al) noexcept\n       : _Base(__al) { }\n \n       forward_list(const forward_list& __list, const _Alloc& __al)"}]}