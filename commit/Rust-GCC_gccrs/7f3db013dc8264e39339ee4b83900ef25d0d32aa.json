{"sha": "7f3db013dc8264e39339ee4b83900ef25d0d32aa", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6N2YzZGIwMTNkYzgyNjRlMzkzMzllZTRiODM5MDBlZjI1ZDBkMzJhYQ==", "commit": {"author": {"name": "Marek Polacek", "email": "polacek@redhat.com", "date": "2019-06-22T14:43:00Z"}, "committer": {"name": "Marek Polacek", "email": "mpolacek@gcc.gnu.org", "date": "2019-06-22T14:43:00Z"}, "message": "PR c++/90881 - bogus -Wunused-value in unevaluated context.\n\n\t* cvt.c (convert_to_void): Don't emit unused warnings in\n\tan unevaluated context.\n\n\t* g++.dg/cpp0x/Wunused-value1.C: New test.\n\nFrom-SVN: r272585", "tree": {"sha": "0c32ba3b5879f803ec2e6bce6acc515e16b044e3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0c32ba3b5879f803ec2e6bce6acc515e16b044e3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7f3db013dc8264e39339ee4b83900ef25d0d32aa", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7f3db013dc8264e39339ee4b83900ef25d0d32aa", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7f3db013dc8264e39339ee4b83900ef25d0d32aa", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7f3db013dc8264e39339ee4b83900ef25d0d32aa/comments", "author": {"login": "mpolacek", "id": 10496300, "node_id": "MDQ6VXNlcjEwNDk2MzAw", "avatar_url": "https://avatars.githubusercontent.com/u/10496300?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mpolacek", "html_url": "https://github.com/mpolacek", "followers_url": "https://api.github.com/users/mpolacek/followers", "following_url": "https://api.github.com/users/mpolacek/following{/other_user}", "gists_url": "https://api.github.com/users/mpolacek/gists{/gist_id}", "starred_url": "https://api.github.com/users/mpolacek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mpolacek/subscriptions", "organizations_url": "https://api.github.com/users/mpolacek/orgs", "repos_url": "https://api.github.com/users/mpolacek/repos", "events_url": "https://api.github.com/users/mpolacek/events{/privacy}", "received_events_url": "https://api.github.com/users/mpolacek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "4b3aa535793363636b0d2819908710fae5025723", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4b3aa535793363636b0d2819908710fae5025723", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4b3aa535793363636b0d2819908710fae5025723"}], "stats": {"total": 34, "additions": 33, "deletions": 1}, "files": [{"sha": "31336f954c34e5c1be24006d56eb68453de127f5", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7f3db013dc8264e39339ee4b83900ef25d0d32aa/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7f3db013dc8264e39339ee4b83900ef25d0d32aa/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=7f3db013dc8264e39339ee4b83900ef25d0d32aa", "patch": "@@ -1,3 +1,9 @@\n+2019-06-22  Marek Polacek  <polacek@redhat.com>\n+\n+\tPR c++/90881 - bogus -Wunused-value in unevaluated context.\n+\t* cvt.c (convert_to_void): Don't emit unused warnings in\n+\tan unevaluated context.\n+\n 2019-06-22  Paolo Carlini  <paolo.carlini@oracle.com>\n \n \t* decl.c (grokdeclarator): Use id_loc, typespec_loc, and"}, {"sha": "23d2aabc4836d09cdf506296a1a640f45de6087c", "filename": "gcc/cp/cvt.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7f3db013dc8264e39339ee4b83900ef25d0d32aa/gcc%2Fcp%2Fcvt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7f3db013dc8264e39339ee4b83900ef25d0d32aa/gcc%2Fcp%2Fcvt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcvt.c?ref=7f3db013dc8264e39339ee4b83900ef25d0d32aa", "patch": "@@ -1518,7 +1518,8 @@ convert_to_void (tree expr, impl_conv_void implicit, tsubst_flags_t complain)\n       if (implicit != ICV_CAST\n \t  && warn_unused_value\n \t  && !TREE_NO_WARNING (expr)\n-\t  && !processing_template_decl)\n+\t  && !processing_template_decl\n+\t  && !cp_unevaluated_operand)\n \t{\n \t  /* The middle end does not warn about expressions that have\n \t     been explicitly cast to void, so we must do so here.  */"}, {"sha": "b0b1d4ba912201f7a791769255cda7101cec4a51", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7f3db013dc8264e39339ee4b83900ef25d0d32aa/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7f3db013dc8264e39339ee4b83900ef25d0d32aa/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=7f3db013dc8264e39339ee4b83900ef25d0d32aa", "patch": "@@ -1,3 +1,8 @@\n+2019-06-22  Marek Polacek  <polacek@redhat.com>\n+\n+\tPR c++/90881 - bogus -Wunused-value in unevaluated context.\n+\t* g++.dg/cpp0x/Wunused-value1.C: New test.\n+\n 2019-06-22  Paolo Carlini  <paolo.carlini@oracle.com>\n \n \t* g++.dg/diagnostic/auto-storage-1.C: New."}, {"sha": "a0683b693a1d0dd03a79d653cfdd8790c047bb34", "filename": "gcc/testsuite/g++.dg/cpp0x/Wunused-value1.C", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7f3db013dc8264e39339ee4b83900ef25d0d32aa/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2FWunused-value1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7f3db013dc8264e39339ee4b83900ef25d0d32aa/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2FWunused-value1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2FWunused-value1.C?ref=7f3db013dc8264e39339ee4b83900ef25d0d32aa", "patch": "@@ -0,0 +1,20 @@\n+// PR c++/90881\n+// { dg-do compile { target c++11 } }\n+// { dg-options \"-Wall\" }\n+\n+namespace std {\n+  struct true_type { static const bool value = true; };\n+  struct false_type { static const bool value = false; };\n+}\n+\n+template <typename T, typename = void> struct status : std::false_type{};\n+\n+template <typename T> struct status<T, decltype(T::member, void())> : std::true_type {}; // { dg-bogus \"left operand of comma operator has no effect\" }\n+\n+struct s1{int member;};\n+struct s2{int _member;};\n+\n+int main(){\n+\tstatic_assert(status<s1>::value, \"has member\");\n+\tstatic_assert(!status<s2>::value, \"has no member\");\n+}"}]}