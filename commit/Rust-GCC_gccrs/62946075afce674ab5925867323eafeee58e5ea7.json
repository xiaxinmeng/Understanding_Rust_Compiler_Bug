{"sha": "62946075afce674ab5925867323eafeee58e5ea7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjI5NDYwNzVhZmNlNjc0YWI1OTI1ODY3MzIzZWFmZWVlNThlNWVhNw==", "commit": {"author": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1992-04-19T20:00:41Z"}, "committer": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1992-04-19T20:00:41Z"}, "message": "*** empty log message ***\n\nFrom-SVN: r796", "tree": {"sha": "8015a260e997440420b87f37c273c14b64eaa903", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8015a260e997440420b87f37c273c14b64eaa903"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/62946075afce674ab5925867323eafeee58e5ea7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/62946075afce674ab5925867323eafeee58e5ea7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/62946075afce674ab5925867323eafeee58e5ea7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/62946075afce674ab5925867323eafeee58e5ea7/comments", "author": null, "committer": null, "parents": [{"sha": "df589359dd00b39b27fcf86814431906e5d2c5af", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/df589359dd00b39b27fcf86814431906e5d2c5af", "html_url": "https://github.com/Rust-GCC/gccrs/commit/df589359dd00b39b27fcf86814431906e5d2c5af"}], "stats": {"total": 6, "additions": 5, "deletions": 1}, "files": [{"sha": "b9fcdbe7aa266d950db51a579ce52b8fa8d9d39e", "filename": "gcc/recog.c", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/62946075afce674ab5925867323eafeee58e5ea7/gcc%2Frecog.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/62946075afce674ab5925867323eafeee58e5ea7/gcc%2Frecog.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frecog.c?ref=62946075afce674ab5925867323eafeee58e5ea7", "patch": "@@ -1878,7 +1878,11 @@ constrain_operands (insn_code_num, strict)\n \n \t  if (strict > 0)\n \t    for (eopno = 0; eopno < noperands; eopno++)\n-\t      if (earlyclobber[eopno])\n+\t      /* Ignore earlyclobber operands now in memory,\n+\t\t because we would often report failure when we have\n+\t\t two memory operands, one of which was formerly a REG.  */\n+\t      if (earlyclobber[eopno]\n+\t\t  && GET_CODE (recog_operand[eopno]) == REG)\n \t\tfor (opno = 0; opno < noperands; opno++)\n \t\t  if ((GET_CODE (recog_operand[opno]) == MEM\n \t\t       || op_types[opno] != OP_OUT)"}]}