{"sha": "6edcb5dc42625cb0cf84b19c6fe4f944f6322ea0", "node_id": "C_kwDOANBUbNoAKDZlZGNiNWRjNDI2MjVjYjBjZjg0YjE5YzZmZTRmOTQ0ZjYzMjJlYTA", "commit": {"author": {"name": "Tobias Burnus", "email": "tobias@codesourcery.com", "date": "2022-11-21T14:22:35Z"}, "committer": {"name": "Tobias Burnus", "email": "tobias@codesourcery.com", "date": "2022-11-21T14:22:35Z"}, "message": "libgomp/gcn: fix/improve struct output\n\noutput.printf_data.(value union) contains text[128], which has the size\nof 128 bytes, sufficient for 16 uint64_t variables; hence value_u64[2]\ncould be extended to value_u64[6] - sufficient for all required arguments\nto gomp_target_rev.  Additionally, next_output.printf_data.(msg union)\ncontained msg_u64 which then is no longer needed and also caused 32bit\nvs 64bit alignment issues.\n\nlibgomp/\n\t* config/gcn/libgomp-gcn.h (struct output):\n\tRemove 'msg_u64' from the union, change\n\tvalue_u64[2] to value_u64[6].\n\t* config/gcn/target.c (GOMP_target_ext): Update accordingly.\n\t* plugin/plugin-gcn.c (process_reverse_offload, console_output):\n\tLikewise.", "tree": {"sha": "ccdd4a3ffada1157c4881060c4e1d7e42d160214", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ccdd4a3ffada1157c4881060c4e1d7e42d160214"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6edcb5dc42625cb0cf84b19c6fe4f944f6322ea0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6edcb5dc42625cb0cf84b19c6fe4f944f6322ea0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6edcb5dc42625cb0cf84b19c6fe4f944f6322ea0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6edcb5dc42625cb0cf84b19c6fe4f944f6322ea0/comments", "author": {"login": "tob2", "id": 264461, "node_id": "MDQ6VXNlcjI2NDQ2MQ==", "avatar_url": "https://avatars.githubusercontent.com/u/264461?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tob2", "html_url": "https://github.com/tob2", "followers_url": "https://api.github.com/users/tob2/followers", "following_url": "https://api.github.com/users/tob2/following{/other_user}", "gists_url": "https://api.github.com/users/tob2/gists{/gist_id}", "starred_url": "https://api.github.com/users/tob2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tob2/subscriptions", "organizations_url": "https://api.github.com/users/tob2/orgs", "repos_url": "https://api.github.com/users/tob2/repos", "events_url": "https://api.github.com/users/tob2/events{/privacy}", "received_events_url": "https://api.github.com/users/tob2/received_events", "type": "User", "site_admin": false}, "committer": {"login": "tob2", "id": 264461, "node_id": "MDQ6VXNlcjI2NDQ2MQ==", "avatar_url": "https://avatars.githubusercontent.com/u/264461?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tob2", "html_url": "https://github.com/tob2", "followers_url": "https://api.github.com/users/tob2/followers", "following_url": "https://api.github.com/users/tob2/following{/other_user}", "gists_url": "https://api.github.com/users/tob2/gists{/gist_id}", "starred_url": "https://api.github.com/users/tob2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tob2/subscriptions", "organizations_url": "https://api.github.com/users/tob2/orgs", "repos_url": "https://api.github.com/users/tob2/repos", "events_url": "https://api.github.com/users/tob2/events{/privacy}", "received_events_url": "https://api.github.com/users/tob2/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "711f56ad9093b18197ca82415317f4a3748d45ae", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/711f56ad9093b18197ca82415317f4a3748d45ae", "html_url": "https://github.com/Rust-GCC/gccrs/commit/711f56ad9093b18197ca82415317f4a3748d45ae"}], "stats": {"total": 36, "additions": 15, "deletions": 21}, "files": [{"sha": "b59cbee288e946ac87c5571c6ee0654cdf59a82b", "filename": "libgomp/config/gcn/libgomp-gcn.h", "status": "modified", "additions": 2, "deletions": 5, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6edcb5dc42625cb0cf84b19c6fe4f944f6322ea0/libgomp%2Fconfig%2Fgcn%2Flibgomp-gcn.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6edcb5dc42625cb0cf84b19c6fe4f944f6322ea0/libgomp%2Fconfig%2Fgcn%2Flibgomp-gcn.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Fconfig%2Fgcn%2Flibgomp-gcn.h?ref=6edcb5dc42625cb0cf84b19c6fe4f944f6322ea0", "patch": "@@ -37,16 +37,13 @@ struct output\n   unsigned int next_output;\n   struct printf_data {\n     int written;\n-    union {\n-      char msg[128];\n-      uint64_t msg_u64[2];\n-    };\n+    char msg[128];\n     int type;\n     union {\n       int64_t ivalue;\n       double dvalue;\n       char text[128];\n-      uint64_t value_u64[2];\n+      uint64_t value_u64[16];\n     };\n   } queue[1024];\n   unsigned int consumed;"}, {"sha": "11ae6ec9833dbe37e46cae5b4438e59762e6cf8c", "filename": "libgomp/config/gcn/target.c", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6edcb5dc42625cb0cf84b19c6fe4f944f6322ea0/libgomp%2Fconfig%2Fgcn%2Ftarget.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6edcb5dc42625cb0cf84b19c6fe4f944f6322ea0/libgomp%2Fconfig%2Fgcn%2Ftarget.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Fconfig%2Fgcn%2Ftarget.c?ref=6edcb5dc42625cb0cf84b19c6fe4f944f6322ea0", "patch": "@@ -102,12 +102,12 @@ GOMP_target_ext (int device, void (*fn) (void *), size_t mapnum,\n       asm (\"s_sleep 64\");\n \n   unsigned int slot = index % 1024;\n-  uint64_t addrs_sizes_kind[3] = {(uint64_t) hostaddrs, (uint64_t) sizes,\n-\t\t\t\t  (uint64_t) kinds};\n-  data->queue[slot].msg_u64[0] = (uint64_t) fn;\n-  data->queue[slot].msg_u64[1] = (uint64_t) mapnum;\n-  data->queue[slot].value_u64[0] = (uint64_t) &addrs_sizes_kind[0];\n-  data->queue[slot].value_u64[1] = (uint64_t) GOMP_ADDITIONAL_ICVS.device_num;\n+  data->queue[slot].value_u64[0] = (uint64_t) fn;\n+  data->queue[slot].value_u64[1] = (uint64_t) mapnum;\n+  data->queue[slot].value_u64[2] = (uint64_t) hostaddrs;\n+  data->queue[slot].value_u64[3] = (uint64_t) sizes;\n+  data->queue[slot].value_u64[4] = (uint64_t) kinds;\n+  data->queue[slot].value_u64[5] = (uint64_t) GOMP_ADDITIONAL_ICVS.device_num;\n \n   data->queue[slot].type = 4; /* Reverse offload.  */\n   __atomic_store_n (&data->queue[slot].written, 1, __ATOMIC_RELEASE);"}, {"sha": "99a700276aa4d20eb8972551deb0e797b614982d", "filename": "libgomp/plugin/plugin-gcn.c", "status": "modified", "additions": 7, "deletions": 10, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6edcb5dc42625cb0cf84b19c6fe4f944f6322ea0/libgomp%2Fplugin%2Fplugin-gcn.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6edcb5dc42625cb0cf84b19c6fe4f944f6322ea0/libgomp%2Fplugin%2Fplugin-gcn.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Fplugin%2Fplugin-gcn.c?ref=6edcb5dc42625cb0cf84b19c6fe4f944f6322ea0", "patch": "@@ -1919,16 +1919,12 @@ create_kernel_dispatch (struct kernel_info *kernel, int num_teams)\n }\n \n static void\n-process_reverse_offload (uint64_t fn, uint64_t mapnum, uint64_t rev_data,\n-\t\t\t uint64_t dev_num64)\n+process_reverse_offload (uint64_t fn, uint64_t mapnum, uint64_t hostaddrs,\n+\t\t\t uint64_t sizes, uint64_t kinds, uint64_t dev_num64)\n {\n   int dev_num = dev_num64;\n-  uint64_t addrs_sizes_kinds[3];\n-  GOMP_OFFLOAD_host2dev (dev_num, &addrs_sizes_kinds, (void *) rev_data,\n-\t\t\t sizeof (addrs_sizes_kinds));\n-  GOMP_PLUGIN_target_rev (fn, mapnum, addrs_sizes_kinds[0],\n-\t\t\t  addrs_sizes_kinds[1], addrs_sizes_kinds[2],\n-\t\t\t  dev_num, NULL, NULL, NULL);\n+  GOMP_PLUGIN_target_rev (fn, mapnum, hostaddrs, sizes, kinds, dev_num,\n+\t\t\t  NULL, NULL, NULL);\n }\n \n /* Output any data written to console output from the kernel.  It is expected\n@@ -1976,8 +1972,9 @@ console_output (struct kernel_info *kernel, struct kernargs *kernargs,\n \tcase 2: printf (\"%.128s%.128s\\n\", data->msg, data->text); break;\n \tcase 3: printf (\"%.128s%.128s\", data->msg, data->text); break;\n \tcase 4:\n-\t  process_reverse_offload (data->msg_u64[0], data->msg_u64[1],\n-\t\t\t\t   data->value_u64[0],data->value_u64[1]);\n+\t  process_reverse_offload (data->value_u64[0], data->value_u64[1],\n+\t\t\t\t   data->value_u64[2], data->value_u64[3],\n+\t\t\t\t   data->value_u64[4], data->value_u64[5]);\n \t  break;\n \tdefault: printf (\"GCN print buffer error!\\n\"); break;\n \t}"}]}