{"sha": "aa1aa786c994d730eb461c0661e07647f4f2c0f3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWExYWE3ODZjOTk0ZDczMGViNDYxYzA2NjFlMDc2NDdmNGYyYzBmMw==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@adacore.com", "date": "2009-04-07T07:36:31Z"}, "committer": {"name": "Eric Botcazou", "email": "ebotcazou@gcc.gnu.org", "date": "2009-04-07T07:36:31Z"}, "message": "trans.c (check_for_eliminated_entity): New function.\n\n\t* gcc-interface/trans.c (check_for_eliminated_entity): New function.\n\t(Attribute_to_gnu): Invoke it for Access- and Address-like attributes.\n\t(call_to_gnu): Invoke it instead of manually checking.\n\nFrom-SVN: r145652", "tree": {"sha": "3db9d936a0d84c2f02c01a95aa9519472f816376", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3db9d936a0d84c2f02c01a95aa9519472f816376"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/aa1aa786c994d730eb461c0661e07647f4f2c0f3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/aa1aa786c994d730eb461c0661e07647f4f2c0f3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/aa1aa786c994d730eb461c0661e07647f4f2c0f3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/aa1aa786c994d730eb461c0661e07647f4f2c0f3/comments", "author": null, "committer": null, "parents": [{"sha": "3afadac3ca557d83ad115178a631aeb60659b0c5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3afadac3ca557d83ad115178a631aeb60659b0c5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3afadac3ca557d83ad115178a631aeb60659b0c5"}], "stats": {"total": 81, "additions": 72, "deletions": 9}, "files": [{"sha": "929fc118d594165f58f74c12a47758e6c1bf0f3c", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aa1aa786c994d730eb461c0661e07647f4f2c0f3/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aa1aa786c994d730eb461c0661e07647f4f2c0f3/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=aa1aa786c994d730eb461c0661e07647f4f2c0f3", "patch": "@@ -1,3 +1,9 @@\n+2009-04-07  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* gcc-interface/trans.c (check_for_eliminated_entity): New function.\n+\t(Attribute_to_gnu): Invoke it for Access- and Address-like attributes.\n+\t(call_to_gnu): Invoke it instead of manually checking.\n+\n 2009-04-04  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* gcc-interface/utils.c (finish_record_type): Force structural equality"}, {"sha": "bf114832f690c7ec7f8ebe2e8bbf432799875a29", "filename": "gcc/ada/gcc-interface/trans.c", "status": "modified", "additions": 23, "deletions": 9, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aa1aa786c994d730eb461c0661e07647f4f2c0f3/gcc%2Fada%2Fgcc-interface%2Ftrans.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aa1aa786c994d730eb461c0661e07647f4f2c0f3/gcc%2Fada%2Fgcc-interface%2Ftrans.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgcc-interface%2Ftrans.c?ref=aa1aa786c994d730eb461c0661e07647f4f2c0f3", "patch": "@@ -823,6 +823,24 @@ Pragma_to_gnu (Node_Id gnat_node)\n \n   return gnu_result;\n }\n+\f\n+/* Issue an error message if GNAT_NODE references an eliminated entity.  */\n+\n+static void\n+check_for_eliminated_entity (Node_Id gnat_node)\n+{\n+  switch (Nkind (gnat_node))\n+    {\n+    case N_Identifier:\n+    case N_Operator_Symbol:\n+    case N_Expanded_Name:\n+    case N_Attribute_Reference:\n+      if (Is_Eliminated (Entity (gnat_node)))\n+\tEliminate_Error_Msg (gnat_node, Entity (gnat_node));\n+      break;\n+    }\n+}\n+\n /* Subroutine of gnat_to_gnu to translate gnat_node, an N_Attribute,\n    to a GCC tree, which is returned.  GNU_RESULT_TYPE_P is a pointer to\n    where we should place the result type.  ATTRIBUTE is the attribute ID.  */\n@@ -963,6 +981,8 @@ Attribute_to_gnu (Node_Id gnat_node, tree *gnu_result_type_p, int attribute)\n \t don't try to build a trampoline.  */\n       if (attribute == Attr_Code_Address)\n \t{\n+\t  check_for_eliminated_entity (Prefix (gnat_node));\n+\n \t  for (gnu_expr = gnu_result;\n \t       CONVERT_EXPR_P (gnu_expr);\n \t       gnu_expr = TREE_OPERAND (gnu_expr, 0))\n@@ -977,6 +997,8 @@ Attribute_to_gnu (Node_Id gnat_node, tree *gnu_result_type_p, int attribute)\n \t a useful warning with -Wtrampolines.  */\n       else if (TREE_CODE (TREE_TYPE (gnu_prefix)) == FUNCTION_TYPE)\n \t{\n+\t  check_for_eliminated_entity (Prefix (gnat_node));\n+\n \t  for (gnu_expr = gnu_result;\n \t       CONVERT_EXPR_P (gnu_expr);\n \t       gnu_expr = TREE_OPERAND (gnu_expr, 0))\n@@ -2098,15 +2120,7 @@ call_to_gnu (Node_Id gnat_node, tree *gnu_result_type_p, tree gnu_target)\n   tree gnu_after_list = NULL_TREE;\n   tree gnu_subprog_call;\n \n-  switch (Nkind (Name (gnat_node)))\n-    {\n-    case N_Identifier:\n-    case N_Operator_Symbol:\n-    case N_Expanded_Name:\n-    case N_Attribute_Reference:\n-      if (Is_Eliminated (Entity (Name (gnat_node))))\n-\tEliminate_Error_Msg (gnat_node, Entity (Name (gnat_node)));\n-    }\n+  check_for_eliminated_entity (Name (gnat_node));\n \n   gcc_assert (TREE_CODE (gnu_subprog_type) == FUNCTION_TYPE);\n "}, {"sha": "8842321cfaeab83b4e8fb641baa631e92c637ca9", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aa1aa786c994d730eb461c0661e07647f4f2c0f3/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aa1aa786c994d730eb461c0661e07647f4f2c0f3/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=aa1aa786c994d730eb461c0661e07647f4f2c0f3", "patch": "@@ -1,3 +1,7 @@\n+2009-04-07  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* gnat.dg/subp_elim_errors.ad[sb]: New test.\n+\n 2009-04-07  Janus Weil  <janus@gcc.gnu.org>\n \n \tPR fortran/38920"}, {"sha": "669e8772117e228b1b19562b27208a8a86e3d0ea", "filename": "gcc/testsuite/gnat.dg/subp_elim_errors.adb", "status": "added", "additions": 32, "deletions": 0, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aa1aa786c994d730eb461c0661e07647f4f2c0f3/gcc%2Ftestsuite%2Fgnat.dg%2Fsubp_elim_errors.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aa1aa786c994d730eb461c0661e07647f4f2c0f3/gcc%2Ftestsuite%2Fgnat.dg%2Fsubp_elim_errors.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Fsubp_elim_errors.adb?ref=aa1aa786c994d730eb461c0661e07647f4f2c0f3", "patch": "@@ -0,0 +1,32 @@\n+-- [ dg-do compile }\n+\n+with System;\n+\n+package body Subp_Elim_Errors is\n+\n+   type Acc_Proc is access procedure;\n+\n+   procedure Proc is\n+   begin\n+      null;\n+   end Proc;\n+\n+   procedure Pass_Proc (P : Acc_Proc) is\n+   begin\n+      P.all;\n+   end Pass_Proc;\n+\n+   procedure Pass_Proc (P : System.Address) is\n+   begin\n+      null;\n+   end Pass_Proc;\n+\n+begin\n+   Proc;                           -- { dg-error \"eliminated\" }\n+\n+   Pass_Proc (Proc'Access);        -- { dg-error \"eliminated\" }\n+\n+   Pass_Proc (Proc'Address);       -- { dg-error \"eliminated\" }\n+\n+   Pass_Proc (Proc'Code_Address);  -- { dg-error \"eliminated\" }\n+end Subp_Elim_Errors;"}, {"sha": "d42f1b204b3f9bb1a9389a240a18321d07223be0", "filename": "gcc/testsuite/gnat.dg/subp_elim_errors.ads", "status": "added", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aa1aa786c994d730eb461c0661e07647f4f2c0f3/gcc%2Ftestsuite%2Fgnat.dg%2Fsubp_elim_errors.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aa1aa786c994d730eb461c0661e07647f4f2c0f3/gcc%2Ftestsuite%2Fgnat.dg%2Fsubp_elim_errors.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Fsubp_elim_errors.ads?ref=aa1aa786c994d730eb461c0661e07647f4f2c0f3", "patch": "@@ -0,0 +1,7 @@\n+pragma Eliminate (Subp_Elim_Errors, Proc);\n+\n+package Subp_Elim_Errors is\n+\n+   procedure Proc;\n+\n+end Subp_Elim_Errors;"}]}