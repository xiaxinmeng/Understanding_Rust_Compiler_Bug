{"sha": "b1b1734a7fe4c0259b338f65f481c381fe473240", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjFiMTczNGE3ZmU0YzAyNTliMzM4ZjY1ZjQ4MWMzODFmZTQ3MzI0MA==", "commit": {"author": {"name": "Andrew Haley", "email": "aph@gcc.gnu.org", "date": "2009-06-15T17:14:29Z"}, "committer": {"name": "Andrew Haley", "email": "aph@gcc.gnu.org", "date": "2009-06-15T17:14:29Z"}, "message": "Fix bad checkin.\n\nFrom-SVN: r148498", "tree": {"sha": "d93306a161370845787240ed765a804793cb7f4f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d93306a161370845787240ed765a804793cb7f4f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b1b1734a7fe4c0259b338f65f481c381fe473240", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b1b1734a7fe4c0259b338f65f481c381fe473240", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b1b1734a7fe4c0259b338f65f481c381fe473240", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b1b1734a7fe4c0259b338f65f481c381fe473240/comments", "author": null, "committer": null, "parents": [{"sha": "4250d865a9c0699519f807561f2ea260722c0493", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4250d865a9c0699519f807561f2ea260722c0493", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4250d865a9c0699519f807561f2ea260722c0493"}], "stats": {"total": 123, "additions": 0, "deletions": 123}, "files": [{"sha": "9ac5cd84cbc81938ee91feebe6243f2ca708c654", "filename": "libffi/ChangeLog", "status": "modified", "additions": 0, "deletions": 123, "changes": 123, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b1b1734a7fe4c0259b338f65f481c381fe473240/libffi%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b1b1734a7fe4c0259b338f65f481c381fe473240/libffi%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2FChangeLog?ref=b1b1734a7fe4c0259b338f65f481c381fe473240", "patch": "@@ -1,126 +1,3 @@\n-2009-06-12  Andrew Haley  <aph@redhat.com>\n-\n-\t* ChangeLog.libffi: testsuite/libffi.call/cls_align_sint64.c,\n-\ttestsuite/libffi.call/cls_align_uint64.c,\n-\ttestsuite/libffi.call/cls_ulonglong.c,\n-\ttestsuite/libffi.call/return_ll1.c,\n-\ttestsuite/libffi.call/stret_medium2.c: Fix printf format\n-\tspecifiers.\n-\ttestsuite/libffi.special/unwindtest.cc: include stdint.h.\n-\n-2009-06-11  Timothy Wall  <twall@users.sf.net>\n-\n-\t* Makefile.am,\n-        configure.ac,\n-        include/ffi.h.in,\n-        include/ffi_common.h,\n-        src/closures.c,\n-        src/dlmalloc.c,\n-        src/x86/ffi.c,\n-        src/x86/ffitarget.h,\n-        src/x86/win64.S (new),\n-\tREADME: Added win64 support (mingw or MSVC)\n-        * Makefile.in,\n-        include/Makefile.in,\n-        man/Makefile.in,\n-        testsuite/Makefile.in,\n-        configure,\n-        aclocal.m4: Regenerated\n-        * ltcf-c.sh: properly escape cygwin/w32 path\n-        * man/ffi_call.3: Clarify size requirements for return value.\n-        * src/x86/ffi64.c: Fix filename in comment.\n-        * src/x86/win32.S: Remove unused extern.\n-\n-        * testsuite/libffi.call/closure_fn0.c,\n-        testsuite/libffi.call/closure_fn1.c,\n-        testsuite/libffi.call/closure_fn2.c,\n-        testsuite/libffi.call/closure_fn3.c,\n-        testsuite/libffi.call/closure_fn4.c,\n-        testsuite/libffi.call/closure_fn5.c,\n-        testsuite/libffi.call/closure_fn6.c,\n-\ttestsuite/libffi.call/closure_stdcall.c,\n-\ttestsuite/libffi.call/cls_12byte.c,\n-\ttestsuite/libffi.call/cls_16byte.c,\n-\ttestsuite/libffi.call/cls_18byte.c,\n-\ttestsuite/libffi.call/cls_19byte.c,\n-\ttestsuite/libffi.call/cls_1_1byte.c,\n-\ttestsuite/libffi.call/cls_20byte.c,\n-\ttestsuite/libffi.call/cls_20byte1.c,\n-\ttestsuite/libffi.call/cls_24byte.c,\n-\ttestsuite/libffi.call/cls_2byte.c,\n-\ttestsuite/libffi.call/cls_3_1byte.c,\n-\ttestsuite/libffi.call/cls_3byte1.c,\n- \ttestsuite/libffi.call/cls_3byte2.c,\n- \ttestsuite/libffi.call/cls_4_1byte.c,\n- \ttestsuite/libffi.call/cls_4byte.c,\n- \ttestsuite/libffi.call/cls_5_1_byte.c,\n- \ttestsuite/libffi.call/cls_5byte.c,\n- \ttestsuite/libffi.call/cls_64byte.c,\n- \ttestsuite/libffi.call/cls_6_1_byte.c,\n- \ttestsuite/libffi.call/cls_6byte.c,\n- \ttestsuite/libffi.call/cls_7_1_byte.c,\n- \ttestsuite/libffi.call/cls_7byte.c,\n- \ttestsuite/libffi.call/cls_8byte.c,\n- \ttestsuite/libffi.call/cls_9byte1.c,\n- \ttestsuite/libffi.call/cls_9byte2.c,\n- \ttestsuite/libffi.call/cls_align_double.c,\n- \ttestsuite/libffi.call/cls_align_float.c,\n- \ttestsuite/libffi.call/cls_align_longdouble.c,\n- \ttestsuite/libffi.call/cls_align_longdouble_split.c,\n- \ttestsuite/libffi.call/cls_align_longdouble_split2.c,\n- \ttestsuite/libffi.call/cls_align_pointer.c,\n- \ttestsuite/libffi.call/cls_align_sint16.c,\n- \ttestsuite/libffi.call/cls_align_sint32.c,\n- \ttestsuite/libffi.call/cls_align_sint64.c,\n- \ttestsuite/libffi.call/cls_align_uint16.c,\n- \ttestsuite/libffi.call/cls_align_uint32.c,\n- \ttestsuite/libffi.call/cls_align_uint64.c,\n- \ttestsuite/libffi.call/cls_dbls_struct.c,\n- \ttestsuite/libffi.call/cls_double.c,\n- \ttestsuite/libffi.call/cls_double_va.c,\n- \ttestsuite/libffi.call/cls_float.c,\n- \ttestsuite/libffi.call/cls_longdouble.c,\n- \ttestsuite/libffi.call/cls_longdouble_va.c,\n- \ttestsuite/libffi.call/cls_multi_schar.c,\n- \ttestsuite/libffi.call/cls_multi_sshort.c,\n- \ttestsuite/libffi.call/cls_multi_sshortchar.c,\n- \ttestsuite/libffi.call/cls_multi_uchar.c,\n- \ttestsuite/libffi.call/cls_multi_ushort.c,\n- \ttestsuite/libffi.call/cls_multi_ushortchar.c,\n- \ttestsuite/libffi.call/cls_pointer.c,\n- \ttestsuite/libffi.call/cls_pointer_stack.c,\n- \ttestsuite/libffi.call/cls_schar.c,\n- \ttestsuite/libffi.call/cls_sint.c,\n- \ttestsuite/libffi.call/cls_sshort.c,\n- \ttestsuite/libffi.call/cls_uchar.c,\n- \ttestsuite/libffi.call/cls_uint.c,\n- \ttestsuite/libffi.call/cls_ulonglong.c,\n- \ttestsuite/libffi.call/cls_ushort.c,\n- \ttestsuite/libffi.call/err_bad_abi.c,\n- \ttestsuite/libffi.call/err_bad_typedef.c,\n- \ttestsuite/libffi.call/float2.c,\n- \ttestsuite/libffi.call/huge_struct.c,\n- \ttestsuite/libffi.call/nested_struct.c,\n- \ttestsuite/libffi.call/nested_struct1.c,\n- \ttestsuite/libffi.call/nested_struct10.c,\n- \ttestsuite/libffi.call/nested_struct2.c,\n- \ttestsuite/libffi.call/nested_struct3.c,\n- \ttestsuite/libffi.call/nested_struct4.c,\n- \ttestsuite/libffi.call/nested_struct5.c,\n- \ttestsuite/libffi.call/nested_struct6.c,\n- \ttestsuite/libffi.call/nested_struct7.c,\n- \ttestsuite/libffi.call/nested_struct8.c,\n- \ttestsuite/libffi.call/nested_struct9.c,\n- \ttestsuite/libffi.call/problem1.c,\n- \ttestsuite/libffi.call/return_ldl.c,\n- \ttestsuite/libffi.call/return_ll1.c,\n- \ttestsuite/libffi.call/stret_large.c,\n- \ttestsuite/libffi.call/stret_large2.c,\n- \ttestsuite/libffi.call/stret_medium.c,\n- \ttestsuite/libffi.call/stret_medium2.c,\n-        testsuite/libffi.special/unwindtest.cc: use ffi_closure_alloc instead\n-        of checking for MMAP.  Use intptr_t instead of long casts.\n-\n 2009-06-12  Andrew Haley  <aph@redhat.com>\n \n \t* Makefile.am: Remove info_TEXINFOS."}]}