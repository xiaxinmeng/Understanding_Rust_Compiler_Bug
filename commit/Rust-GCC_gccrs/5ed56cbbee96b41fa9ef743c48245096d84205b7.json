{"sha": "5ed56cbbee96b41fa9ef743c48245096d84205b7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWVkNTZjYmJlZTk2YjQxZmE5ZWY3NDNjNDgyNDUwOTZkODQyMDViNw==", "commit": {"author": {"name": "Jonathan Wakely", "email": "jwakely.gcc@gmail.com", "date": "2011-11-09T21:14:03Z"}, "committer": {"name": "Jonathan Wakely", "email": "redi@gcc.gnu.org", "date": "2011-11-09T21:14:03Z"}, "message": "allocator.h (__shrink_to_fit_aux::_S_do_it): Create the new object with the same allocator.\n\n\t* include/bits/allocator.h (__shrink_to_fit_aux::_S_do_it): Create\n\tthe new object with the same allocator.\n\t* testsuite/23_containers/vector/capacity/shrink_to_fit2.cc: New.\n\nFrom-SVN: r181235", "tree": {"sha": "8c75f00fd0fc61e236df531630752c1eab7a8d8f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8c75f00fd0fc61e236df531630752c1eab7a8d8f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5ed56cbbee96b41fa9ef743c48245096d84205b7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5ed56cbbee96b41fa9ef743c48245096d84205b7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5ed56cbbee96b41fa9ef743c48245096d84205b7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5ed56cbbee96b41fa9ef743c48245096d84205b7/comments", "author": null, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e14304eff546e4ef3dc33e6439d793f999e81c91", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e14304eff546e4ef3dc33e6439d793f999e81c91", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e14304eff546e4ef3dc33e6439d793f999e81c91"}], "stats": {"total": 70, "additions": 69, "deletions": 1}, "files": [{"sha": "c25dd282d055344146649bbcdc7cc2312f0848d0", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5ed56cbbee96b41fa9ef743c48245096d84205b7/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5ed56cbbee96b41fa9ef743c48245096d84205b7/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=5ed56cbbee96b41fa9ef743c48245096d84205b7", "patch": "@@ -1,3 +1,9 @@\n+2011-11-09  Jonathan Wakely  <jwakely.gcc@gmail.com>\n+\n+\t* include/bits/allocator.h (__shrink_to_fit_aux::_S_do_it): Create\n+\tthe new object with the same allocator.\n+\t* testsuite/23_containers/vector/capacity/shrink_to_fit2.cc: New.\n+\n 2011-11-09  Jonathan Wakely  <jwakely.gcc@gmail.com>\n \n \t* include/profile/unordered_map: Add missing copy constructors."}, {"sha": "b985d3f5e6fe1b71d3caa697bf420c7b3fe5c7ab", "filename": "libstdc++-v3/include/bits/allocator.h", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5ed56cbbee96b41fa9ef743c48245096d84205b7/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fallocator.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5ed56cbbee96b41fa9ef743c48245096d84205b7/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fallocator.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fallocator.h?ref=5ed56cbbee96b41fa9ef743c48245096d84205b7", "patch": "@@ -198,7 +198,8 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \t__try\n \t  {\n \t    _Tp(__make_move_if_noexcept_iterator(__c.begin()),\n-\t\t__make_move_if_noexcept_iterator(__c.end())).swap(__c);\n+\t\t__make_move_if_noexcept_iterator(__c.end()),\n+\t\t__c.get_allocator()).swap(__c);\n \t    return true;\n \t  }\n \t__catch(...)"}, {"sha": "81cd55a8f272df8e374340fc52c94f4c87cc583e", "filename": "libstdc++-v3/testsuite/23_containers/vector/capacity/shrink_to_fit2.cc", "status": "added", "additions": 61, "deletions": 0, "changes": 61, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5ed56cbbee96b41fa9ef743c48245096d84205b7/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fvector%2Fcapacity%2Fshrink_to_fit2.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5ed56cbbee96b41fa9ef743c48245096d84205b7/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fvector%2Fcapacity%2Fshrink_to_fit2.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fvector%2Fcapacity%2Fshrink_to_fit2.cc?ref=5ed56cbbee96b41fa9ef743c48245096d84205b7", "patch": "@@ -0,0 +1,61 @@\n+// { dg-options \"-std=gnu++0x\" }\n+\n+// Copyright (C) 2011 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without Pred the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+#include <vector>\n+#include <testsuite_hooks.h>\n+#include <testsuite_allocator.h>\n+\n+using __gnu_test::propagating_allocator;\n+\n+void test01()\n+{\n+  bool test __attribute__((unused)) = true;\n+\n+  typedef propagating_allocator<int, true> alloc_type;\n+  alloc_type alloc(5);\n+\n+  std::vector<int, alloc_type> v(10u, 1, alloc);\n+  v.reserve(100);\n+  VERIFY( v.size() < v.capacity() );\n+  v.shrink_to_fit();\n+  VERIFY( v.size() == v.capacity() );\n+  VERIFY( v.get_allocator().get_personality() == alloc.get_personality() );\n+}\n+\n+void test02()\n+{\n+  bool test __attribute__((unused)) = true;\n+\n+  typedef propagating_allocator<int, false> alloc_type;\n+  alloc_type alloc(5);\n+\n+  std::vector<int, alloc_type> v(10u, 1, alloc);\n+  v.reserve(100);\n+  VERIFY( v.size() < v.capacity() );\n+  v.shrink_to_fit();\n+  VERIFY( v.size() == v.capacity() );\n+  VERIFY( v.get_allocator().get_personality() == alloc.get_personality() );\n+}\n+\n+int main()\n+{\n+  test01();\n+  test02();\n+  return 0;\n+}"}]}