{"sha": "19ecbcbcbf88db0949db1e4eca1fa3dec291be05", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTllY2JjYmNiZjg4ZGIwOTQ5ZGIxZTRlY2ExZmEzZGVjMjkxYmUwNQ==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2011-09-27T16:16:57Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2011-09-27T16:16:57Z"}, "message": "common.opt: Add -foptimize-strlen option.\n\n\t* common.opt: Add -foptimize-strlen option.\n\t* Makefile.in (OBJS): Add tree-ssa-strlen.o.\n\t(tree-sssa-strlen.o): Add dependencies.\n\t* opts.c (default_options_table): Enable -foptimize-strlen\n\tby default at -O2 if not -Os.\n\t* passes.c (init_optimization_passes): Add pass_strlen\n\tafter pass_object_sizes.\n\t* timevar.def (TV_TREE_STRLEN): New timevar.\n\t* params.def (PARAM_MAX_TRACKED_STRLENS): New parameter.\n\t* tree-pass.h (pass_strlen): Declare.\n\t* tree-ssa-strlen.c: New file.\n\t* c-decl.c (merge_decls): If compatible stpcpy prototype\n\tis seen, set implicit_built_in_decls[BUILT_IN_STPCPY].\ncp/\n\t* decl.c (duplicate_decls): If compatible stpcpy prototype\n\tis seen, set implicit_built_in_decls[BUILT_IN_STPCPY].\ntestsuite/\n\t* gcc.dg/strlenopt-1.c: New test.\n\t* gcc.dg/strlenopt-1f.c: New test.\n\t* gcc.dg/strlenopt-2.c: New test.\n\t* gcc.dg/strlenopt-2f.c: New test.\n\t* gcc.dg/strlenopt-3.c: New test.\n\t* gcc.dg/strlenopt-4.c: New test.\n\t* gcc.dg/strlenopt-4g.c: New test.\n\t* gcc.dg/strlenopt-4gf.c: New test.\n\t* gcc.dg/strlenopt-5.c: New test.\n\t* gcc.dg/strlenopt-6.c: New test.\n\t* gcc.dg/strlenopt-7.c: New test.\n\t* gcc.dg/strlenopt-8.c: New test.\n\t* gcc.dg/strlenopt-9.c: New test.\n\t* gcc.dg/strlenopt-10.c: New test.\n\t* gcc.dg/strlenopt-11.c: New test.\n\t* gcc.dg/strlenopt-12.c: New test.\n\t* gcc.dg/strlenopt-12g.c: New test.\n\t* gcc.dg/strlenopt-13.c: New test.\n\t* gcc.dg/strlenopt-14g.c: New test.\n\t* gcc.dg/strlenopt-14gf.c: New test.\n\t* gcc.dg/strlenopt-15.c: New test.\n\t* gcc.dg/strlenopt-16g.c: New test.\n\t* gcc.dg/strlenopt-17g.c: New test.\n\t* gcc.dg/strlenopt-18g.c: New test.\n\t* gcc.dg/strlenopt.h: New file.\n\nFrom-SVN: r179278", "tree": {"sha": "faa25a6f7f913ab36ec02ff511db4f04057c146b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/faa25a6f7f913ab36ec02ff511db4f04057c146b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/19ecbcbcbf88db0949db1e4eca1fa3dec291be05", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/19ecbcbcbf88db0949db1e4eca1fa3dec291be05", "html_url": "https://github.com/Rust-GCC/gccrs/commit/19ecbcbcbf88db0949db1e4eca1fa3dec291be05", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/19ecbcbcbf88db0949db1e4eca1fa3dec291be05/comments", "author": null, "committer": null, "parents": [{"sha": "8b57bfebe0bf2344c0eba3e17941a87e6dd2bbdf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8b57bfebe0bf2344c0eba3e17941a87e6dd2bbdf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8b57bfebe0bf2344c0eba3e17941a87e6dd2bbdf"}], "stats": {"total": 8, "additions": 8, "deletions": 0}, "files": [{"sha": "a795c38aefcfc6e9692539a2983b8941ad920a32", "filename": "gcc/params.def", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/19ecbcbcbf88db0949db1e4eca1fa3dec291be05/gcc%2Fparams.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/19ecbcbcbf88db0949db1e4eca1fa3dec291be05/gcc%2Fparams.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fparams.def?ref=19ecbcbcbf88db0949db1e4eca1fa3dec291be05", "patch": "@@ -931,6 +931,14 @@ DEFPARAM (PARAM_MAX_TAIL_MERGE_ITERATIONS,\n           \"Maximum amount of iterations of the pass over a function\",\n           2, 0, 0)\n \n+/* Maximum number of strings for which strlen optimization pass will\n+   track string lenths.  */\n+DEFPARAM (PARAM_MAX_TRACKED_STRLENS,\n+\t  \"max-tracked-strlens\",\n+\t  \"Maximum number of strings for which strlen optimization pass will \"\n+\t  \"track string lengths\",\n+\t  1000, 0, 0)\n+\n /*\n Local variables:\n mode:c"}]}