{"sha": "e6db622515f2ab2ae19b15efddf5a9067e35a78e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTZkYjYyMjUxNWYyYWIyYWUxOWIxNWVmZGRmNWE5MDY3ZTM1YTc4ZQ==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@libertysurf.fr", "date": "2005-04-21T08:34:22Z"}, "committer": {"name": "Eric Botcazou", "email": "ebotcazou@gcc.gnu.org", "date": "2005-04-21T08:34:22Z"}, "message": "Revert unrelated changes from latest commit.\n\nFrom-SVN: r98496", "tree": {"sha": "3cdf5039834ee7be9a5ee682b2550b21fae0a8aa", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3cdf5039834ee7be9a5ee682b2550b21fae0a8aa"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e6db622515f2ab2ae19b15efddf5a9067e35a78e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e6db622515f2ab2ae19b15efddf5a9067e35a78e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e6db622515f2ab2ae19b15efddf5a9067e35a78e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e6db622515f2ab2ae19b15efddf5a9067e35a78e/comments", "author": {"login": "ebotcazou", "id": 48091907, "node_id": "MDQ6VXNlcjQ4MDkxOTA3", "avatar_url": "https://avatars.githubusercontent.com/u/48091907?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ebotcazou", "html_url": "https://github.com/ebotcazou", "followers_url": "https://api.github.com/users/ebotcazou/followers", "following_url": "https://api.github.com/users/ebotcazou/following{/other_user}", "gists_url": "https://api.github.com/users/ebotcazou/gists{/gist_id}", "starred_url": "https://api.github.com/users/ebotcazou/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ebotcazou/subscriptions", "organizations_url": "https://api.github.com/users/ebotcazou/orgs", "repos_url": "https://api.github.com/users/ebotcazou/repos", "events_url": "https://api.github.com/users/ebotcazou/events{/privacy}", "received_events_url": "https://api.github.com/users/ebotcazou/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "6ac49599123d5d649107b8d7fd0674a8fb1afdbe", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6ac49599123d5d649107b8d7fd0674a8fb1afdbe", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6ac49599123d5d649107b8d7fd0674a8fb1afdbe"}], "stats": {"total": 16, "additions": 7, "deletions": 9}, "files": [{"sha": "c77cef14d589176cf89f722aa253cf1d757b76fc", "filename": "gcc/ChangeLog", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e6db622515f2ab2ae19b15efddf5a9067e35a78e/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e6db622515f2ab2ae19b15efddf5a9067e35a78e/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=e6db622515f2ab2ae19b15efddf5a9067e35a78e", "patch": "@@ -111,9 +111,7 @@\n \t(movdi_cc_reg_sp64): Use arith10_operand predicate.\n \t(movdi_cc_reg_sp64_trunc): Delete.\n \t(cmp_zero_extract, cmp_zero_extract_sp64): Use small_int_operand.\n-\t(adddi3_insn_sp32, addx, cmp_cc_plus, cmp_ccx_plus, cmp_cc_plus_set,\n-\tcmp_ccx_plus_set): Use register_operand predicate.\n-\t(adddi3_sp64, cmp_ccx_plus_set): Use arith_operand predicate.\n+\t(adddi3_sp64, cmp_ccx_plus, cmp_ccx_plus_set): Use arith_operand.\n \t(subdi3_sp32): Delete.\n \t(subdi3_insn_sp32): Change to define_insn_and_split.\n \t(subdi3_sp64, cmp_minus_ccx, cmp_minus_ccx_set): Use arith_operand."}, {"sha": "eb7ce08db9e9bac276de700be3e33cb7ee73c149", "filename": "gcc/config/sparc/sparc.md", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e6db622515f2ab2ae19b15efddf5a9067e35a78e/gcc%2Fconfig%2Fsparc%2Fsparc.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e6db622515f2ab2ae19b15efddf5a9067e35a78e/gcc%2Fconfig%2Fsparc%2Fsparc.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsparc%2Fsparc.md?ref=e6db622515f2ab2ae19b15efddf5a9067e35a78e", "patch": "@@ -4858,7 +4858,7 @@\n \n (define_insn_and_split \"adddi3_insn_sp32\"\n   [(set (match_operand:DI 0 \"register_operand\" \"=r\")\n-\t(plus:DI (match_operand:DI 1 \"register_operand\" \"%r\")\n+\t(plus:DI (match_operand:DI 1 \"arith_double_operand\" \"%r\")\n \t\t (match_operand:DI 2 \"arith_double_operand\" \"rHI\")))\n    (clobber (reg:CC 100))]\n   \"! TARGET_ARCH64\"\n@@ -4897,7 +4897,7 @@\n ;; LTU here means \"carry set\"\n (define_insn \"addx\"\n   [(set (match_operand:SI 0 \"register_operand\" \"=r\")\n-\t(plus:SI (plus:SI (match_operand:SI 1 \"register_operand\" \"%r\")\n+\t(plus:SI (plus:SI (match_operand:SI 1 \"arith_operand\" \"%r\")\n \t\t\t  (match_operand:SI 2 \"arith_operand\" \"rI\"))\n \t\t (ltu:SI (reg:CC_NOOV 100) (const_int 0))))]\n   \"\"\n@@ -4973,7 +4973,7 @@\n \n (define_insn \"*cmp_cc_plus\"\n   [(set (reg:CC_NOOV 100)\n-\t(compare:CC_NOOV (plus:SI (match_operand:SI 0 \"register_operand\" \"%r\")\n+\t(compare:CC_NOOV (plus:SI (match_operand:SI 0 \"arith_operand\" \"%r\")\n \t\t\t\t  (match_operand:SI 1 \"arith_operand\" \"rI\"))\n \t\t\t (const_int 0)))]\n   \"\"\n@@ -4982,7 +4982,7 @@\n \n (define_insn \"*cmp_ccx_plus\"\n   [(set (reg:CCX_NOOV 100)\n-\t(compare:CCX_NOOV (plus:DI (match_operand:DI 0 \"register_operand\" \"%r\")\n+\t(compare:CCX_NOOV (plus:DI (match_operand:DI 0 \"arith_operand\" \"%r\")\n \t\t\t\t   (match_operand:DI 1 \"arith_operand\" \"rI\"))\n \t\t\t  (const_int 0)))]\n   \"TARGET_ARCH64\"\n@@ -4991,7 +4991,7 @@\n \n (define_insn \"*cmp_cc_plus_set\"\n   [(set (reg:CC_NOOV 100)\n-\t(compare:CC_NOOV (plus:SI (match_operand:SI 1 \"register_operand\" \"%r\")\n+\t(compare:CC_NOOV (plus:SI (match_operand:SI 1 \"arith_operand\" \"%r\")\n \t\t\t\t  (match_operand:SI 2 \"arith_operand\" \"rI\"))\n \t\t\t (const_int 0)))\n    (set (match_operand:SI 0 \"register_operand\" \"=r\")\n@@ -5002,7 +5002,7 @@\n \n (define_insn \"*cmp_ccx_plus_set\"\n   [(set (reg:CCX_NOOV 100)\n-\t(compare:CCX_NOOV (plus:DI (match_operand:DI 1 \"register_operand\" \"%r\")\n+\t(compare:CCX_NOOV (plus:DI (match_operand:DI 1 \"arith_operand\" \"%r\")\n \t\t\t\t   (match_operand:DI 2 \"arith_operand\" \"rI\"))\n \t\t\t  (const_int 0)))\n    (set (match_operand:DI 0 \"register_operand\" \"=r\")"}]}