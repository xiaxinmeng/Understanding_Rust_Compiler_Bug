{"sha": "2ca1b6d009b194286c3ec91f9c51cc6b0a475458", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmNhMWI2ZDAwOWIxOTQyODZjM2VjOTFmOWM1MWNjNmIwYTQ3NTQ1OA==", "commit": {"author": {"name": "Kito Cheng", "email": "kito.cheng@sifive.com", "date": "2020-07-22T06:50:40Z"}, "committer": {"name": "Kito Cheng", "email": "kito.cheng@sifive.com", "date": "2020-07-23T06:57:31Z"}, "message": "PR target/96260 - KASAN should work even back-end not porting anything.\n\n - Most KASAN function don't need any porting anything in back-end\n   except asan stack protection.\n\n - However kernel will given shadow offset when enable asan stack\n   protection, so eveything in KASAN can work if shadow offset is given.\n\n - Verified with x86 and risc-v.\n\n - Verified with RISC-V linux kernel.\n\ngcc/ChangeLog:\n\n\tPR target/96260\n\t* asan.c (asan_shadow_offset_set_p): New.\n\t* asan.h (asan_shadow_offset_set_p): Ditto.\n\t* toplev.c (process_options): Allow -fsanitize=kernel-address\n\teven TARGET_ASAN_SHADOW_OFFSET not implemented, only check when\n\tasan stack protection is enabled.\n\ngcc/testsuite/ChangeLog:\n\n\tPR target/96260\n\t* gcc.target/riscv/pr91441.c: Update warning message.\n\t* gcc.target/riscv/pr96260.c: New.", "tree": {"sha": "af63dcdcbc211febcb5323810b4a881e5a4f8a00", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/af63dcdcbc211febcb5323810b4a881e5a4f8a00"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2ca1b6d009b194286c3ec91f9c51cc6b0a475458", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2ca1b6d009b194286c3ec91f9c51cc6b0a475458", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2ca1b6d009b194286c3ec91f9c51cc6b0a475458", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2ca1b6d009b194286c3ec91f9c51cc6b0a475458/comments", "author": {"login": "kito-cheng", "id": 2723185, "node_id": "MDQ6VXNlcjI3MjMxODU=", "avatar_url": "https://avatars.githubusercontent.com/u/2723185?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kito-cheng", "html_url": "https://github.com/kito-cheng", "followers_url": "https://api.github.com/users/kito-cheng/followers", "following_url": "https://api.github.com/users/kito-cheng/following{/other_user}", "gists_url": "https://api.github.com/users/kito-cheng/gists{/gist_id}", "starred_url": "https://api.github.com/users/kito-cheng/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kito-cheng/subscriptions", "organizations_url": "https://api.github.com/users/kito-cheng/orgs", "repos_url": "https://api.github.com/users/kito-cheng/repos", "events_url": "https://api.github.com/users/kito-cheng/events{/privacy}", "received_events_url": "https://api.github.com/users/kito-cheng/received_events", "type": "User", "site_admin": false}, "committer": {"login": "kito-cheng", "id": 2723185, "node_id": "MDQ6VXNlcjI3MjMxODU=", "avatar_url": "https://avatars.githubusercontent.com/u/2723185?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kito-cheng", "html_url": "https://github.com/kito-cheng", "followers_url": "https://api.github.com/users/kito-cheng/followers", "following_url": "https://api.github.com/users/kito-cheng/following{/other_user}", "gists_url": "https://api.github.com/users/kito-cheng/gists{/gist_id}", "starred_url": "https://api.github.com/users/kito-cheng/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kito-cheng/subscriptions", "organizations_url": "https://api.github.com/users/kito-cheng/orgs", "repos_url": "https://api.github.com/users/kito-cheng/repos", "events_url": "https://api.github.com/users/kito-cheng/events{/privacy}", "received_events_url": "https://api.github.com/users/kito-cheng/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5029d42c4014ce8c9771ba7b8280d5e7770b6dee", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5029d42c4014ce8c9771ba7b8280d5e7770b6dee", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5029d42c4014ce8c9771ba7b8280d5e7770b6dee"}], "stats": {"total": 42, "additions": 40, "deletions": 2}, "files": [{"sha": "0b471afff64ea6a0ffbe0add71333ac688c472c6", "filename": "gcc/asan.c", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2ca1b6d009b194286c3ec91f9c51cc6b0a475458/gcc%2Fasan.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2ca1b6d009b194286c3ec91f9c51cc6b0a475458/gcc%2Fasan.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fasan.c?ref=2ca1b6d009b194286c3ec91f9c51cc6b0a475458", "patch": "@@ -344,6 +344,13 @@ asan_shadow_offset ()\n   return asan_shadow_offset_value;\n }\n \n+/* Returns Asan shadow offset has been set.  */\n+bool\n+asan_shadow_offset_set_p ()\n+{\n+  return asan_shadow_offset_computed;\n+}\n+\n alias_set_type asan_shadow_set = -1;\n \n /* Pointer types to 1, 2 or 4 byte integers in shadow memory.  A separate"}, {"sha": "114b457ef91c4479d43774bed58c24213196ce12", "filename": "gcc/asan.h", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2ca1b6d009b194286c3ec91f9c51cc6b0a475458/gcc%2Fasan.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2ca1b6d009b194286c3ec91f9c51cc6b0a475458/gcc%2Fasan.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fasan.h?ref=2ca1b6d009b194286c3ec91f9c51cc6b0a475458", "patch": "@@ -129,6 +129,8 @@ asan_var_and_redzone_size (unsigned HOST_WIDE_INT size)\n \n extern bool set_asan_shadow_offset (const char *);\n \n+extern bool asan_shadow_offset_set_p ();\n+\n extern void set_sanitized_sections (const char *);\n \n extern bool asan_sanitize_stack_p (void);"}, {"sha": "b55df5e7f00c36cf9fb9eca18b901516d3d51715", "filename": "gcc/testsuite/gcc.target/riscv/pr91441.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2ca1b6d009b194286c3ec91f9c51cc6b0a475458/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Fpr91441.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2ca1b6d009b194286c3ec91f9c51cc6b0a475458/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Fpr91441.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Fpr91441.c?ref=2ca1b6d009b194286c3ec91f9c51cc6b0a475458", "patch": "@@ -7,4 +7,4 @@ int *f( int a)\n {\n   return bar(&a);\n }\n-/* { dg-warning \".'-fsanitize=address' and '-fsanitize=kernel-address' are not supported for this target\" \"\" { target *-*-* } 0 } */\n+/* { dg-warning \".'-fsanitize=kernel-address' with stack protection is not supported without '-fasan-shadow-offset=' for this target\" \"\" { target *-*-* } 0 } */"}, {"sha": "229997f877b76f404b3fb838f2c3c01da3393db0", "filename": "gcc/testsuite/gcc.target/riscv/pr96260.c", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2ca1b6d009b194286c3ec91f9c51cc6b0a475458/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Fpr96260.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2ca1b6d009b194286c3ec91f9c51cc6b0a475458/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Fpr96260.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Fpr96260.c?ref=2ca1b6d009b194286c3ec91f9c51cc6b0a475458", "patch": "@@ -0,0 +1,9 @@\n+/* PR target/96260 */\n+/* { dg-do compile } */\n+/* { dg-options \"--param asan-stack=1 -fsanitize=kernel-address -fasan-shadow-offset=0x100000\" } */\n+\n+int *bar(int *);\n+int *f( int a)\n+{\n+  return bar(&a);\n+}"}, {"sha": "2bd1888d45861b9f500bfd10b5db148ab04ba706", "filename": "gcc/toplev.c", "status": "modified", "additions": 21, "deletions": 1, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2ca1b6d009b194286c3ec91f9c51cc6b0a475458/gcc%2Ftoplev.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2ca1b6d009b194286c3ec91f9c51cc6b0a475458/gcc%2Ftoplev.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftoplev.c?ref=2ca1b6d009b194286c3ec91f9c51cc6b0a475458", "patch": "@@ -1835,14 +1835,34 @@ process_options (void)\n   /* Address Sanitizer needs porting to each target architecture.  */\n \n   if ((flag_sanitize & SANITIZE_ADDRESS)\n-      && (!FRAME_GROWS_DOWNWARD || targetm.asan_shadow_offset == NULL))\n+      && !FRAME_GROWS_DOWNWARD)\n     {\n       warning_at (UNKNOWN_LOCATION, 0,\n \t\t  \"%<-fsanitize=address%> and %<-fsanitize=kernel-address%> \"\n \t\t  \"are not supported for this target\");\n       flag_sanitize &= ~SANITIZE_ADDRESS;\n     }\n \n+  if ((flag_sanitize & SANITIZE_USER_ADDRESS)\n+      && targetm.asan_shadow_offset == NULL)\n+    {\n+      warning_at (UNKNOWN_LOCATION, 0,\n+\t\t  \"%<-fsanitize=address%> not supported for this target\");\n+      flag_sanitize &= ~SANITIZE_ADDRESS;\n+    }\n+\n+  if ((flag_sanitize & SANITIZE_KERNEL_ADDRESS)\n+      && (targetm.asan_shadow_offset == NULL\n+\t  && param_asan_stack\n+\t  && !asan_shadow_offset_set_p ()))\n+    {\n+      warning_at (UNKNOWN_LOCATION, 0,\n+\t\t  \"%<-fsanitize=kernel-address%> with stack protection \"\n+\t\t  \"is not supported without %<-fasan-shadow-offset=%> \"\n+\t\t  \"for this target\");\n+      flag_sanitize &= ~SANITIZE_ADDRESS;\n+    }\n+\n  /* Do not use IPA optimizations for register allocation if profiler is active\n     or patchable function entries are inserted for run-time instrumentation\n     or port does not emit prologue and epilogue as RTL.  */"}]}