{"sha": "ddd12b5fb06e5b7a11ef65bd50509d30305afb8b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGRkMTJiNWZiMDZlNWI3YTExZWY2NWJkNTA1MDlkMzAzMDVhZmI4Yg==", "commit": {"author": {"name": "Jerry DeLisle", "email": "jvdelisle@gcc.gnu.org", "date": "2016-10-05T04:39:33Z"}, "committer": {"name": "Jerry DeLisle", "email": "jvdelisle@gcc.gnu.org", "date": "2016-10-05T04:39:33Z"}, "message": "2016-10-04  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n\n\tio/inquire.c (inquire_via_unit): Add check for internal unit\n\tpassed into child IO procedure.\n\nFrom-SVN: r240768", "tree": {"sha": "f5b8d4ecd7a6e7219f4dd58d9c673e97b1111044", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f5b8d4ecd7a6e7219f4dd58d9c673e97b1111044"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ddd12b5fb06e5b7a11ef65bd50509d30305afb8b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ddd12b5fb06e5b7a11ef65bd50509d30305afb8b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ddd12b5fb06e5b7a11ef65bd50509d30305afb8b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ddd12b5fb06e5b7a11ef65bd50509d30305afb8b/comments", "author": null, "committer": null, "parents": [{"sha": "3aa27eae3593f5672b200cd817737704a89dee8c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3aa27eae3593f5672b200cd817737704a89dee8c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3aa27eae3593f5672b200cd817737704a89dee8c"}], "stats": {"total": 42, "additions": 41, "deletions": 1}, "files": [{"sha": "040bb3ebe1c259ee53a5ea4b87056a02abb1472f", "filename": "gcc/testsuite/gfortran.dg/dtio_15.f90", "status": "added", "additions": 33, "deletions": 0, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ddd12b5fb06e5b7a11ef65bd50509d30305afb8b/gcc%2Ftestsuite%2Fgfortran.dg%2Fdtio_15.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ddd12b5fb06e5b7a11ef65bd50509d30305afb8b/gcc%2Ftestsuite%2Fgfortran.dg%2Fdtio_15.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fdtio_15.f90?ref=ddd12b5fb06e5b7a11ef65bd50509d30305afb8b", "patch": "@@ -0,0 +1,33 @@\n+! {dg-do run }\n+! Test that inquire of string internal unit in child process errors.\n+module string_m\n+  implicit none\n+  type person\n+    character(10) :: aname\n+    integer :: ijklmno\n+  contains\n+    procedure :: write_s\n+    generic :: write(formatted) => write_s\n+  end type person\n+contains\n+  subroutine write_s (this, lun, iotype, vlist, istat, imsg)\n+    class(person), intent(in)       :: this\n+    integer, intent(in)             :: lun\n+    character(len=*), intent(in)    :: iotype\n+    integer, intent(in)             :: vlist(:)\n+    integer, intent(out)            :: istat\n+    character(len=*), intent(inout) :: imsg\n+    integer :: filesize\n+    inquire( unit=lun, size=filesize, iostat=istat, iomsg=imsg)\n+    if (istat /= 0) return\n+  end subroutine write_s\n+end module string_m\n+program p\n+   use string_m\n+   type(person) :: s\n+   character(len=12) :: msg\n+   integer :: istat\n+   character(len=256) :: imsg = \"\"\n+   write( msg, \"(DT)\", iostat=istat) s\n+   if (istat /= 5018) call abort\n+end program p"}, {"sha": "0e5c4d2c003034f471fce294f4edd52827124132", "filename": "libgfortran/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ddd12b5fb06e5b7a11ef65bd50509d30305afb8b/libgfortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ddd12b5fb06e5b7a11ef65bd50509d30305afb8b/libgfortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2FChangeLog?ref=ddd12b5fb06e5b7a11ef65bd50509d30305afb8b", "patch": "@@ -1,3 +1,8 @@\n+2016-10-04  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n+\n+\tio/inquire.c (inquire_via_unit): Add check for internal unit\n+\tpassed into child IO procedure.\n+\n 2016-10-01  Andre Vehreschild  <vehre@gcc.gnu.org>\n \n \tPR fortran/77663"}, {"sha": "7751b8df4db3228bce46fc442f3da463d16eeba2", "filename": "libgfortran/io/inquire.c", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ddd12b5fb06e5b7a11ef65bd50509d30305afb8b/libgfortran%2Fio%2Finquire.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ddd12b5fb06e5b7a11ef65bd50509d30305afb8b/libgfortran%2Fio%2Finquire.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fio%2Finquire.c?ref=ddd12b5fb06e5b7a11ef65bd50509d30305afb8b", "patch": "@@ -41,7 +41,9 @@ inquire_via_unit (st_parameter_inquire *iqp, gfc_unit * u)\n   const char *p;\n   GFC_INTEGER_4 cf = iqp->common.flags;\n \n-  if (iqp->common.unit == GFC_INTERNAL_UNIT || iqp->common.unit == GFC_INTERNAL_UNIT4)\n+  if (iqp->common.unit == GFC_INTERNAL_UNIT ||\n+\tiqp->common.unit == GFC_INTERNAL_UNIT4 ||\n+\tu->internal_unit_kind != 0)\n     generate_error (&iqp->common, LIBERROR_INQUIRE_INTERNAL_UNIT, NULL);\n \n   if ((cf & IOPARM_INQUIRE_HAS_EXIST) != 0)"}]}