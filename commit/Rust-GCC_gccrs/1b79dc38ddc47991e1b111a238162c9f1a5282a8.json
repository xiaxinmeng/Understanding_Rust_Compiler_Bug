{"sha": "1b79dc38ddc47991e1b111a238162c9f1a5282a8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWI3OWRjMzhkZGM0Nzk5MWUxYjExMWEyMzgxNjJjOWYxYTUyODJhOA==", "commit": {"author": {"name": "David Mosberger", "email": "davidm@hpl.hp.com", "date": "2004-12-08T00:20:49Z"}, "committer": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "2004-12-08T00:20:49Z"}, "message": "re PR target/18443 (#pragma pack(1) breaks function pointer initialization)\n\n        PR target/18443\n        * config/ia64/ia64.c (ia64_assemble_integer): Add support for\n        emitting unaligned pointer-sized integers.\n\nFrom-SVN: r91842", "tree": {"sha": "f116e6f00b72cbdef1fdada4d3db3fcb1b8aad60", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f116e6f00b72cbdef1fdada4d3db3fcb1b8aad60"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1b79dc38ddc47991e1b111a238162c9f1a5282a8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1b79dc38ddc47991e1b111a238162c9f1a5282a8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1b79dc38ddc47991e1b111a238162c9f1a5282a8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1b79dc38ddc47991e1b111a238162c9f1a5282a8/comments", "author": null, "committer": null, "parents": [{"sha": "9492747a48ed3a59798781f8aaacb446f1bace5e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9492747a48ed3a59798781f8aaacb446f1bace5e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9492747a48ed3a59798781f8aaacb446f1bace5e"}], "stats": {"total": 17, "additions": 12, "deletions": 5}, "files": [{"sha": "c560ba1d488d74f9849b212c787ad22149f96d6c", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1b79dc38ddc47991e1b111a238162c9f1a5282a8/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1b79dc38ddc47991e1b111a238162c9f1a5282a8/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=1b79dc38ddc47991e1b111a238162c9f1a5282a8", "patch": "@@ -1,3 +1,9 @@\n+2004-12-07  David Mosberger  <davidm@hpl.hp.com>\n+\n+        PR target/18443\n+        * config/ia64/ia64.c (ia64_assemble_integer): Add support for\n+        emitting unaligned pointer-sized integers.\n+\n 2004-12-07  Steven Bosscher  <stevenb@suse.de>\n \n \tPR c/18867"}, {"sha": "1c80ed1d41d218634bea1268fb15d74ddad882fe", "filename": "gcc/config/ia64/ia64.c", "status": "modified", "additions": 6, "deletions": 5, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1b79dc38ddc47991e1b111a238162c9f1a5282a8/gcc%2Fconfig%2Fia64%2Fia64.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1b79dc38ddc47991e1b111a238162c9f1a5282a8/gcc%2Fconfig%2Fia64%2Fia64.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fia64%2Fia64.c?ref=1b79dc38ddc47991e1b111a238162c9f1a5282a8", "patch": "@@ -2736,15 +2736,16 @@ static bool\n ia64_assemble_integer (rtx x, unsigned int size, int aligned_p)\n {\n   if (size == POINTER_SIZE / BITS_PER_UNIT\n-      && aligned_p\n       && !(TARGET_NO_PIC || TARGET_AUTO_PIC)\n       && GET_CODE (x) == SYMBOL_REF\n       && SYMBOL_REF_FUNCTION_P (x))\n     {\n-      if (POINTER_SIZE == 32)\n-\tfputs (\"\\tdata4\\t@fptr(\", asm_out_file);\n-      else\n-\tfputs (\"\\tdata8\\t@fptr(\", asm_out_file);\n+      static const char * const directive[2][2] = {\n+\t  /* 64-bit pointer */  /* 32-bit pointer */\n+\t{ \"\\tdata8.ua\\t@fptr(\", \"\\tdata4.ua\\t@fptr(\"},\t/* unaligned */\n+\t{ \"\\tdata8\\t@fptr(\",    \"\\tdata4\\t@fptr(\"}\t/* aligned */\n+      };\n+      fputs (directive[(aligned_p != 0)][POINTER_SIZE == 32], asm_out_file);\n       output_addr_const (asm_out_file, x);\n       fputs (\")\\n\", asm_out_file);\n       return true;"}]}