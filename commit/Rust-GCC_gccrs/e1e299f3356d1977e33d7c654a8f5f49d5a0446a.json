{"sha": "e1e299f3356d1977e33d7c654a8f5f49d5a0446a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTFlMjk5ZjMzNTZkMTk3N2UzM2Q3YzY1NGE4ZjVmNDlkNWEwNDQ2YQ==", "commit": {"author": {"name": "Henry Linjam\u00e4ki", "email": "henry.linjamaki@parmance.com", "date": "2017-09-29T16:57:18Z"}, "committer": {"name": "Pekka J\u00e4\u00e4skel\u00e4inen", "email": "visit0r@gcc.gnu.org", "date": "2017-09-29T16:57:18Z"}, "message": "[BRIGFE] Fix crash with calls with more than 4 args.\n\nAlso fix a misexecution issue with kernels that have\nboth unexpanded ID functions and calls to subfunctions.\n\nFrom-SVN: r253298", "tree": {"sha": "5f1923cf9ce043d86f6d84635ce257acc94044a9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5f1923cf9ce043d86f6d84635ce257acc94044a9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e1e299f3356d1977e33d7c654a8f5f49d5a0446a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e1e299f3356d1977e33d7c654a8f5f49d5a0446a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e1e299f3356d1977e33d7c654a8f5f49d5a0446a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e1e299f3356d1977e33d7c654a8f5f49d5a0446a/comments", "author": null, "committer": null, "parents": [{"sha": "e90c74f59870d39e36eb2f390ea0d9b2bea10693", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e90c74f59870d39e36eb2f390ea0d9b2bea10693", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e90c74f59870d39e36eb2f390ea0d9b2bea10693"}], "stats": {"total": 13, "additions": 11, "deletions": 2}, "files": [{"sha": "c66b16fba9839723144565ce79e9cc4b56e161f3", "filename": "gcc/brig/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e1e299f3356d1977e33d7c654a8f5f49d5a0446a/gcc%2Fbrig%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e1e299f3356d1977e33d7c654a8f5f49d5a0446a/gcc%2Fbrig%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fbrig%2FChangeLog?ref=e1e299f3356d1977e33d7c654a8f5f49d5a0446a", "patch": "@@ -1,3 +1,10 @@\n+2017-09-29  Henry Linjam\u00e4ki  <henry.linjamaki@parmance.com>\n+\n+\t* brigfrontend/brig-branch-inst-handler.cc: Fix crash with\n+\tcalls with more than 4 args. Also fix a misexecution issue\n+\twith kernels that have both unexpanded ID functions and\n+\tcalls to subfunctions.\n+\n 2017-09-28  Henry Linjam\u00e4ki  <henry.linjamaki@parmance.com>\n \n \t* brig-lang.c: Added function attributes and their handlers."}, {"sha": "a32dd99604484d2c807ba17d23d1968935dafbcc", "filename": "gcc/brig/brigfrontend/brig-branch-inst-handler.cc", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e1e299f3356d1977e33d7c654a8f5f49d5a0446a/gcc%2Fbrig%2Fbrigfrontend%2Fbrig-branch-inst-handler.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e1e299f3356d1977e33d7c654a8f5f49d5a0446a/gcc%2Fbrig%2Fbrigfrontend%2Fbrig-branch-inst-handler.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fbrig%2Fbrigfrontend%2Fbrig-branch-inst-handler.cc?ref=e1e299f3356d1977e33d7c654a8f5f49d5a0446a", "patch": "@@ -42,7 +42,8 @@ brig_branch_inst_handler::operator () (const BrigBase *base)\n       vec<tree, va_gc> *out_args;\n       vec_alloc (out_args, 1);\n       vec<tree, va_gc> *in_args;\n-      vec_alloc (in_args, 4);\n+      /* Ten elem initially, more reserved if needed. */\n+      vec_alloc (in_args, 10);\n \n       size_t operand_count = operand_entries->byteCount / 4;\n       gcc_assert (operand_count < 4);\n@@ -96,6 +97,7 @@ brig_branch_inst_handler::operator () (const BrigBase *base)\n \t\t}\n \n \t      gcc_assert (var != NULL_TREE);\n+\t      vec_safe_reserve (args, 1);\n \t      vec_safe_push (args, var);\n \t      ++operand_ptr;\n \t      bytes -= 4;\n@@ -125,6 +127,7 @@ brig_branch_inst_handler::operator () (const BrigBase *base)\n \n       /* TODO: ensure the callee's frame is aligned!  */\n \n+      vec_safe_reserve (in_args, 4);\n       vec_safe_push (in_args, m_parent.m_cf->m_context_arg);\n       vec_safe_push (in_args, m_parent.m_cf->m_group_base_arg);\n       vec_safe_push (in_args, group_local_offset);\n@@ -147,7 +150,6 @@ brig_branch_inst_handler::operator () (const BrigBase *base)\n \t  m_parent.m_cf->append_statement (call);\n \t}\n \n-      m_parent.m_cf->m_has_unexpanded_dp_builtins = false;\n       m_parent.m_cf->m_called_functions.push_back (func_ref);\n \n       return base->byteCount;"}]}