{"sha": "a263e61a36e21451ff46318f0430e57aeaef6583", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTI2M2U2MWEzNmUyMTQ1MWZmNDYzMThmMDQzMGU1N2FlYWVmNjU4Mw==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2019-07-19T12:24:53Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2019-07-19T12:24:53Z"}, "message": "re PR tree-optimization/91200 (ICE on valid code at -O1: verify_ssa failed)\n\n2019-07-19  Richard Biener  <rguenther@suse.de>\n\n\tPR tree-optimization/91200\n\t* tree-ssa-phiopt.c (cond_store_replacement): Check we have\n\tno PHI nodes in middle-bb.\n\n\t* gcc.dg/torture/pr91200.c: New testcase.\n\nFrom-SVN: r273602", "tree": {"sha": "a2e2f5f5dbf4d6736df08ed62a23b1599c4cd13f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a2e2f5f5dbf4d6736df08ed62a23b1599c4cd13f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a263e61a36e21451ff46318f0430e57aeaef6583", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a263e61a36e21451ff46318f0430e57aeaef6583", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a263e61a36e21451ff46318f0430e57aeaef6583", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a263e61a36e21451ff46318f0430e57aeaef6583/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "c10abf530e52972ef708f6e72cf20dd920cd22a2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c10abf530e52972ef708f6e72cf20dd920cd22a2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c10abf530e52972ef708f6e72cf20dd920cd22a2"}], "stats": {"total": 48, "additions": 48, "deletions": 0}, "files": [{"sha": "96c0b96e1dfe12b0a9d604e63e0ad367c95e3587", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a263e61a36e21451ff46318f0430e57aeaef6583/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a263e61a36e21451ff46318f0430e57aeaef6583/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=a263e61a36e21451ff46318f0430e57aeaef6583", "patch": "@@ -1,3 +1,9 @@\n+2019-07-19  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/91200\n+\t* tree-ssa-phiopt.c (cond_store_replacement): Check we have\n+\tno PHI nodes in middle-bb.\n+\n 2019-07-19  Richard Sandiford  <richard.sandiford@arm.com>\n \n \t* doc/invoke.texi: Rename the AArch64 +bitperm extension flag"}, {"sha": "dfbf850b4fc1d5265aa0966fabb6f55e212c5bd6", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a263e61a36e21451ff46318f0430e57aeaef6583/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a263e61a36e21451ff46318f0430e57aeaef6583/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=a263e61a36e21451ff46318f0430e57aeaef6583", "patch": "@@ -1,3 +1,8 @@\n+2019-07-19  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/91200\n+\t* gcc.dg/torture/pr91200.c: New testcase.\n+\n 2019-07-19  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR middle-end/91190"}, {"sha": "09db9e142c7338c73a09cf6e7b30b41db09c8f36", "filename": "gcc/testsuite/gcc.dg/torture/pr91200.c", "status": "added", "additions": 32, "deletions": 0, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a263e61a36e21451ff46318f0430e57aeaef6583/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr91200.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a263e61a36e21451ff46318f0430e57aeaef6583/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr91200.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr91200.c?ref=a263e61a36e21451ff46318f0430e57aeaef6583", "patch": "@@ -0,0 +1,32 @@\n+/* { dg-do compile } */\n+\n+int printf (const char *, ...);\n+\n+char a;\n+int b, c, **d;\n+\n+int main ()\n+{\n+  int f = -128, *g, *h[2] = {0, 0}, i;\n+  printf(\"0\");\n+  if (a)\n+    {\n+      while (f > a) {\n+        int *j = &i;\n+        *j |= 0;\n+      }\n+      h[i] = &c;\n+    }\n+  if (h[1])\n+    {\n+      int **k = &g;\n+      *k = &f;\n+      while (i)\n+        {\n+          int **l[] = {&g};\n+        }\n+      int **m = &g;\n+      *d = *m = &b;\n+    }\n+  return 0;\n+}"}, {"sha": "b64bde695f4299393594eda6d20b0b2849ca549b", "filename": "gcc/tree-ssa-phiopt.c", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a263e61a36e21451ff46318f0430e57aeaef6583/gcc%2Ftree-ssa-phiopt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a263e61a36e21451ff46318f0430e57aeaef6583/gcc%2Ftree-ssa-phiopt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-phiopt.c?ref=a263e61a36e21451ff46318f0430e57aeaef6583", "patch": "@@ -2216,6 +2216,11 @@ cond_store_replacement (basic_block middle_bb, basic_block join_bb,\n       || gimple_has_volatile_ops (assign))\n     return false;\n \n+  /* And no PHI nodes so all uses in the single stmt are also\n+     available where we insert to.  */\n+  if (!gimple_seq_empty_p (phi_nodes (middle_bb)))\n+    return false;\n+\n   locus = gimple_location (assign);\n   lhs = gimple_assign_lhs (assign);\n   rhs = gimple_assign_rhs1 (assign);"}]}