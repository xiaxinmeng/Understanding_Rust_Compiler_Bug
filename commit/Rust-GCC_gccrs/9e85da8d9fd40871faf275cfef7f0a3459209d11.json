{"sha": "9e85da8d9fd40871faf275cfef7f0a3459209d11", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OWU4NWRhOGQ5ZmQ0MDg3MWZhZjI3NWNmZWY3ZjBhMzQ1OTIwOWQxMQ==", "commit": {"author": {"name": "GCC Administrator", "email": "gccadmin@gcc.gnu.org", "date": "2021-09-16T00:16:28Z"}, "committer": {"name": "GCC Administrator", "email": "gccadmin@gcc.gnu.org", "date": "2021-09-16T00:16:28Z"}, "message": "Daily bump.", "tree": {"sha": "77c1d08727f81936e59a9c12069432d577d686f3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/77c1d08727f81936e59a9c12069432d577d686f3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9e85da8d9fd40871faf275cfef7f0a3459209d11", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9e85da8d9fd40871faf275cfef7f0a3459209d11", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9e85da8d9fd40871faf275cfef7f0a3459209d11", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9e85da8d9fd40871faf275cfef7f0a3459209d11/comments", "author": null, "committer": null, "parents": [{"sha": "22806064a67cf30599957c1ffb322aa30e9e57e7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/22806064a67cf30599957c1ffb322aa30e9e57e7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/22806064a67cf30599957c1ffb322aa30e9e57e7"}], "stats": {"total": 259, "additions": 258, "deletions": 1}, "files": [{"sha": "464611ed04b3acbf590e59929442ac3941267c50", "filename": "contrib/ChangeLog", "status": "modified", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9e85da8d9fd40871faf275cfef7f0a3459209d11/contrib%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9e85da8d9fd40871faf275cfef7f0a3459209d11/contrib%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/contrib%2FChangeLog?ref=9e85da8d9fd40871faf275cfef7f0a3459209d11", "patch": "@@ -1,3 +1,21 @@\n+2021-09-15  Martin Liska  <mliska@suse.cz>\n+\n+\t* gcc-changelog/git_commit.py: Add FIXME note.\n+\n+2021-09-15  Martin Liska  <mliska@suse.cz>\n+\n+\t* gcc-changelog/git_commit.py: Check commit email.\n+\t* gcc-changelog/test_email.py: Add new test.\n+\t* gcc-changelog/test_patches.txt: Likewise.\n+\n+2021-09-15  Richard Biener  <rguenther@suse.de>\n+\n+\t* config-list.mk: Remove vax-openbsd.\n+\n+2021-09-15  Richard Biener  <rguenther@suse.de>\n+\n+\t* config-list.mk: Remove m68k-openbsd.\n+\n 2021-09-13  Andrew Pinski  <apinski@marvell.com>\n \n \t* config-list.mk: Remove m32r-linux and m32rle-linux"}, {"sha": "49bb85141e70fd518dd99c33baae3172773316cf", "filename": "gcc/ChangeLog", "status": "modified", "additions": 115, "deletions": 0, "changes": 115, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9e85da8d9fd40871faf275cfef7f0a3459209d11/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9e85da8d9fd40871faf275cfef7f0a3459209d11/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=9e85da8d9fd40871faf275cfef7f0a3459209d11", "patch": "@@ -1,3 +1,118 @@\n+2021-09-15  David Edelsohn  <dje.gcc@gmail.com>\n+\n+\t* config/rs6000/rs6000.c (rs6000_xcoff_encode_section_info):\n+\tProceed if no symbol summary or the symbol alias flag is false.\n+\n+2021-09-15  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR c++/88578\n+\tPR c++/102295\n+\t* varasm.c (output_constructor_regular_field): Instead of assertion\n+\tthat array_size_for_constructor result is equal to size of\n+\tTREE_TYPE (local->val) in bytes, assert that the type size is greater\n+\tor equal to array_size_for_constructor result and use type size as\n+\tfieldsize.\n+\n+2021-09-15  Martin Liska  <mliska@suse.cz>\n+\n+\tPR target/102351\n+\t* config/i386/vxworks.h: Use new macro TARGET_CPU_P.\n+\n+2021-09-15  Martin Liska  <mliska@suse.cz>\n+\n+\tPR target/102349\n+\t* config/rs6000/rs6000.c (rs6000_xcoff_encode_section_info):\n+\tCheck that we have a symbol summary for a symbol.\n+\n+2021-09-15  Richard Biener  <rguenther@suse.de>\n+\n+\tPR target/102348\n+\t* config/rs6000/lynx.h: Remove undef of PREFERRED_DEBUGGING_TYPE\n+\tto inherit from elfos.h\n+\n+2021-09-15  liuhongt  <hongtao.liu@intel.com>\n+\n+\tPR target/102327\n+\t* config/i386/i386-expand.c\n+\t(ix86_expand_vector_init_interleave): Use puncklwd to pack 2\n+\tHFmodes.\n+\t(ix86_expand_vector_set): Use blendw instead of pinsrw.\n+\t* config/i386/i386.c (ix86_can_change_mode_class): Adjust for\n+\tAVX512FP16 which supports 16bit vector load.\n+\t* config/i386/sse.md (avx512bw_interleave_highv32hi<mask_name>):\n+\tRename to ..\n+\t(avx512bw_interleave_high<mode><mask_name>): .. this, and\n+\textend to V32HFmode.\n+\t(avx2_interleave_highv16hi<mask_name>): Rename to ..\n+\t(avx2_interleave_high<mode><mask_name>): .. this, and extend\n+\tto V16HFmode.\n+\t(vec_interleave_highv8hi<mask_name>): Rename to ..\n+\t(vec_interleave_high<mode><mask_name>): .. this, and extend to V8HFmode.\n+\t(<mask_codefor>avx512bw_interleave_lowv32hi<mask_name>):\n+\tRename to ..\n+\t(<mask_codefor>avx512bw_interleave_low<mode><mask_name>):\n+\tthis, and extend to V32HFmode.\n+\t(avx2_interleave_lowv16hi<mask_name>): Rename to ..\n+\t(avx2_interleave_low<mode><mask_name>): .. this, and extend to V16HFmode.\n+\t(vec_interleave_lowv8hi<mask_name>): Rename to ..\n+\t(vec_interleave_low<mode><mask_name>): .. this, and extend to V8HFmode.\n+\t(sse4_1_pblendw): Rename to ..\n+\t(sse4_1_pblend<blendsuf>): .. this, and extend to V8HFmode.\n+\t(avx2_pblendph): New define_expand.\n+\t(<sse2p4_1>_pinsr<ssemodesuffix>): Refactor, use\n+\tsseintmodesuffix instead of ssemodesuffix.\n+\t(blendsuf): New mode attr.\n+\n+2021-09-15  Richard Biener  <rguenther@suse.de>\n+\n+\t* tree-vectorizer.h (dr_misalignment): Move out of line.\n+\t(dr_target_alignment): New.\n+\t(DR_TARGET_ALIGNMENT): Wrap dr_target_alignment.\n+\t(set_dr_target_alignment): New.\n+\t(SET_DR_TARGET_ALIGNMENT): Wrap set_dr_target_alignment.\n+\t* tree-vect-data-refs.c (dr_misalignment): Compute and\n+\treturn the group members misalignment.\n+\t(vect_compute_data_ref_alignment): Use SET_DR_TARGET_ALIGNMENT.\n+\t(vect_analyze_data_refs_alignment): Compute alignment only\n+\tfor the first element of a DR group.\n+\t(vect_slp_analyze_node_alignment): Likewise.\n+\n+2021-09-15  Hongyu Wang  <hongyu.wang@intel.com>\n+\n+\t* config/i386/avx512fp16intrin.h: Adjust all builtin calls.\n+\t* config/i386/avx512fp16vlintrin.h: Likewise.\n+\t* config/i386/i386-builtin.def: Adjust builtin name and\n+\tenumeration to match AVX512F style.\n+\n+2021-09-15  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/102318\n+\t* tree-vect-loop.c (vect_transform_cycle_phi): Revert\n+\tprevious change and do the mode conversion separately from\n+\tthe sign conversion.\n+\n+2021-09-15  Hongtao Liu  <hongtao.liu@intel.com>\n+\t    Peter Cordes  <peter@cordes.ca>\n+\n+\tPR target/91103\n+\t* config/i386/sse.md (extract_suf): Add V8SF/V8SI/V4DF/V4DI.\n+\t(*vec_extract<mode><ssescalarmodelower>_valign): Output\n+\tvextract{i,f}{32x4,64x2} instruction when byte_offset % 16 ==\n+\t0.\n+\n+2021-09-15  Richard Biener  <rguenther@suse.de>\n+\n+\t* config.gcc: Remove vax-*-openbsd* configuration.\n+\n+2021-09-15  Richard Biener  <rguenther@suse.de>\n+\n+\t* config.gcc: Remove m68k-openbsd.\n+\n+2021-09-15  Max Filippov  <jcmvbkbc@gmail.com>\n+\n+\tPR target/102336\n+\t* config/xtensa/t-xtensa (TM_H): Add include/xtensa-config.h.\n+\n 2021-09-14  Peter Bergner  <bergner@linux.ibm.com>\n \n \t* config/rs6000/mma.md (unspec): Delete UNSPEC_MMA_XXSETACCZ."}, {"sha": "4e6a8dcc7b6253eb887dbf3aedc4438c6b88e754", "filename": "gcc/DATESTAMP", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9e85da8d9fd40871faf275cfef7f0a3459209d11/gcc%2FDATESTAMP", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9e85da8d9fd40871faf275cfef7f0a3459209d11/gcc%2FDATESTAMP", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FDATESTAMP?ref=9e85da8d9fd40871faf275cfef7f0a3459209d11", "patch": "@@ -1 +1 @@\n-20210915\n+20210916"}, {"sha": "70aaabf295697f4761f8597b8edf9922e84b3ca0", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9e85da8d9fd40871faf275cfef7f0a3459209d11/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9e85da8d9fd40871faf275cfef7f0a3459209d11/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=9e85da8d9fd40871faf275cfef7f0a3459209d11", "patch": "@@ -1,3 +1,9 @@\n+2021-09-15  Alexandre Oliva  <oliva@adacore.com>\n+\n+\t* gcc-interface/utils.c: Include opts.h.\n+\t(handle_zero_call_used_regs_attribute): New.\n+\t(gnat_internal_attribute_table): Add zero_call_used_regs.\n+\n 2021-09-14  Eric Botcazou  <ebotcazou@adacore.com>\n \n \tPR ada/101970"}, {"sha": "070b0a013ad137d23686b18860e0fc41968c7620", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 56, "deletions": 0, "changes": 56, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9e85da8d9fd40871faf275cfef7f0a3459209d11/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9e85da8d9fd40871faf275cfef7f0a3459209d11/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=9e85da8d9fd40871faf275cfef7f0a3459209d11", "patch": "@@ -1,3 +1,59 @@\n+2021-09-15  Patrick Palka  <ppalka@redhat.com>\n+\n+\tPR c++/101904\n+\t* call.c (build_user_type_conversion_1): Add tf_conv to complain.\n+\t(add_candidates): When in a SFINAE context, instead of adding a\n+\tcandidate to bad_fns just mark it unviable.\n+\n+2021-09-15  Jason Merrill  <jason@redhat.com>\n+\n+\t* cp-tree.h (parsing_function_declarator): Declare.\n+\t* name-lookup.c (set_decl_context_in_fn): Use it.\n+\t* parser.c (cp_parser_direct_declarator): Use it.\n+\t(parsing_function_declarator): New.\n+\n+2021-09-15  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR c++/88578\n+\tPR c++/102295\n+\t* typeck2.c (split_nonconstant_init_1): Don't throw away empty\n+\tinitializers of flexible array members if they have non-zero type\n+\tsize.\n+\n+2021-09-15  Patrick Palka  <ppalka@redhat.com>\n+\n+\tPR c++/102050\n+\t* decl.c (grok_special_member_properties): Set\n+\tTYPE_HAS_COPY_CTOR, TYPE_HAS_DEFAULT_CONSTRUCTOR\n+\tand TYPE_HAS_LIST_CTOR independently from each other.\n+\n+2021-09-15  Jason Merrill  <jason@redhat.com>\n+\n+\t* decl.c (cxx_init_decl_processing): Only warn about odd\n+\tinterference sizes if they were specified with --param.\n+\n+2021-09-15  Jason Merrill  <jason@redhat.com>\n+\n+\tPR c++/48396\n+\t* cp-tree.h (enum cp_tree_index): Remove CPTI_TYPE_INFO_PTR_TYPE.\n+\t(type_info_ptr_type): Remove.\n+\t* rtti.c (init_rtti_processing): Don't predeclare std::type_info.\n+\t(typeid_ok_p): Check for null const_type_info_type_node.\n+\t(type_info_ptr_type, get_void_tinfo_ptr): New fns.\n+\t(get_tinfo_decl_dynamic, get_tinfo_ptr): Use them.\n+\t(ptr_initializer, ptm_initializer, get_pseudo_ti_init): Use them.\n+\t(get_tinfo_desc): Use const_ptr_type_node.\n+\n+2021-09-15  Jason Merrill  <jason@redhat.com>\n+\n+\t* parser.c (cp_parser_template_name): Move object type.\n+\t(cp_parser_pre_parsed_nested_name_specifier): Likewise.\n+\n+2021-09-15  Jason Merrill  <jason@redhat.com>\n+\n+\t* parser.c (cp_parser_unqualified_id): Only complain about ~A<T> in\n+\ta declarator.\n+\n 2021-09-14  Iain Sandoe  <iain@sandoe.co.uk>\n \n \t* coroutines.cc (struct param_info): Add copy_var."}, {"sha": "58e28f828ea57ecb7970a2d4829459ae146a187a", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 57, "deletions": 0, "changes": 57, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9e85da8d9fd40871faf275cfef7f0a3459209d11/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9e85da8d9fd40871faf275cfef7f0a3459209d11/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=9e85da8d9fd40871faf275cfef7f0a3459209d11", "patch": "@@ -1,3 +1,60 @@\n+2021-09-15  Patrick Palka  <ppalka@redhat.com>\n+\n+\tPR c++/101904\n+\t* g++.dg/ext/conv2.C: New test.\n+\t* g++.dg/template/conv17.C: Extend test.\n+\n+2021-09-15  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR c++/88578\n+\tPR c++/102295\n+\t* g++.dg/ext/flexary39.C: New test.\n+\t* g++.dg/ext/flexary40.C: New test.\n+\n+2021-09-15  Patrick Palka  <ppalka@redhat.com>\n+\n+\tPR c++/102050\n+\t* g++.dg/cpp0x/initlist125.C: New test.\n+\t* g++.dg/cpp0x/initlist126.C: New test.\n+\n+2021-09-15  Alexandre Oliva  <oliva@adacore.com>\n+\n+\t* gnat.dg/zcur_attr.adb, gnat.dg/zcur_attr.ads: New.\n+\n+2021-09-15  liuhongt  <hongtao.liu@intel.com>\n+\n+\t* gcc.target/i386/pr102327-1.c: New test.\n+\t* gcc.target/i386/pr102327-2.c: New test.\n+\t* gcc.target/i386/avx512fp16-1c.c: Adjust testcase.\n+\n+2021-09-15  Hongyu Wang  <hongyu.wang@intel.com>\n+\n+\t* gcc.target/i386/avx-1.c: Adjust builtin macros.\n+\t* gcc.target/i386/sse-13.c: Likewise.\n+\t* gcc.target/i386/sse-23.c: Likewise.\n+\n+2021-09-15  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/102318\n+\t* gcc.dg/vect/pr102318.c: New testcase.\n+\n+2021-09-15  Hongtao Liu  <hongtao.liu@intel.com>\n+\t    Peter Cordes  <peter@cordes.ca>\n+\n+\tPR target/91103\n+\t* gcc.target/i386/pr91103-1.c: Add extract tests.\n+\t* gcc.target/i386/pr91103-2.c: Ditto.\n+\n+2021-09-15  Thomas Schwinge  <thomas@codesourcery.com>\n+\n+\t* gfortran.dg/goacc/unexpected-end.f90: Add OpenACC 'host_data'\n+\ttesting.\n+\n+2021-09-15  Jason Merrill  <jason@redhat.com>\n+\n+\tPR c++/48396\n+\t* g++.dg/rtti/undeclared1.C: New test.\n+\n 2021-09-14  Harald Anlauf  <anlauf@gmx.de>\n \n \tPR fortran/102311"}, {"sha": "99b39a5bd7e9ae7fe0f99e074a6b85062008944f", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9e85da8d9fd40871faf275cfef7f0a3459209d11/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9e85da8d9fd40871faf275cfef7f0a3459209d11/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=9e85da8d9fd40871faf275cfef7f0a3459209d11", "patch": "@@ -1,3 +1,8 @@\n+2021-09-15  Hugo Beauz\u00e9e-Luyssen  <hugo@beauzee.fr>\n+\n+\t* crossconfig.m4: Check for TLS support on mingw.\n+\t* configure: Regenerate.\n+\n 2021-09-13  Jason Merrill  <jason@redhat.com>\n \n \t* include/std/version: Define __cpp_lib_hardware_interference_size."}]}